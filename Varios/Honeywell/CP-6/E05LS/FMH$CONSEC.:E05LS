VERSION E05

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:1    
        1        1        /*M*   FMH$CONSEC - Consec disk file PMME processing */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /**/
        8        8        /*X* DDA */
        9        9        /**/
       10       10        /**/
       11       11        /*P*   NAME:   FMH$CONSEC
       12       12               PURPOSE:  Provide M$READ, M$WRITE, M$DELREC, M$PRECORD
       13       13                         and M$PFIL services for consecutive files.
       14       14
       15       15               DESCRIPTION:
       16       16
       17       17                 The following cells are used in this module:
       18       18
       19       19                   JDCB$ - Pointer to current DCB
       20       20                   CFU$ -  Pointer to CFU for current DCB
       21       21                   BUF$ -  Pointer to current pool buffer
       22       22                   SEG$ -  Pointer to current segment entry in buffer
       23       23                   CRECX - Index to current segment entry, same as DCB.CRECX
       24       24                   LSTSEG - Index to last entry in buffer
       25       25                   DCB.RPOS - Reset if DCB.CRECX points to a segment entry
       26       26                              belonging to the current record, set if it
       27       27                              belongs to the next record
       28       28                   DCB.BFR.DA(1) - Disk address of the current granule.  Always
       29       29                                   meaningful, even if there currently is
       30       30                                   no buffer.
       31       31
       32       32                 Consecutive file granule format is as follows:
       33       33             o     A three word header consisting of the stamp in word zero,
       34       34                     NAVX, LVL, ORG and AVAIL in word one, and NOTLDA in
       35       35                     word two.  NOTLAST is a flag that is set if this is
       36       36                     not the last granule in the file, and is used for
       37       37                     reconstructing files that were not closed.
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:2    
       38       38             o     The first segment entry is in word 1023, the last is in
       39       39                     word NAVX+AVAIL.  The data for the first segment entry
       40       40                     begins in word 3.  The data for subsequent segment entries
       41       41                     follows, always beginning on a word boundary.  NAVX
       42       42                     points to the word following the last used data word.
       43       43                     AVAIL is the number of unused words from the end of the
       44       44                     last data to the beginning of the segment entries.
       45       45
       46       46             o     Segment entries have two flags, FAK and C.  FAK is set in
       47       47                     the first control word of a record.  C is set if a
       48       48                     record is continued into the next control word.  Note
       49       49                     that some types of errors during writing can cause a
       50       50                     SEGMENT ENTRY WITH C SET TO BE FOLLOWED BY AN ENTRY WITH
       51       51                     FAK set.  Therefore C is not a sufficient condition to
       52       52                     indicate continuation.  Records are deleted by reseting
       53       53                     both FAK and C and setting GACTB to zero.
       54       54
       55       55             o     Records may be rewritten by setting the REWRITE option in
       56       56                     the M$WRITE FPT.  The previous operation must have been
       57       57                     a successful M$READ or M$PRECORD, and the record read
       58       58                     or positioned to will be rewritten.  If the byte count
       59       59                     on the write is not identical to the original size of
       60       60                     the record, a lost data error will be given.
       61       61
       62       62             o     An M$WRITE without the REWRITE option issued when not at
       63       63                     end-of-file will cause all records from the current position
       64       64                     to the end of the file to be deleted.
       65       65                                                                                     */
       66       66        %EJECT;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:3    
       67       67        FMH$CPMME: PROC(FPTCODE,PARMFPT,VFC) ALTRET;
       68       68        /* PARAMETERS */
       69       69    1   DCL FPTCODE SBIN;
       70       70    1   DCL PARMFPT UBIN;
       71       71    1   DCL VFC CHAR(1) UNAL;
       72       72        /* LOCAL AUTOMATIC STORAGE */
       73       73    1   DCL JDCB$ PTR;
       74       74    1   DCL CFU$ PTR;
       75       75    1   DCL BUF$ PTR;
       76       76    1   DCL SEG$ PTR;
       77       77    1   DCL LSTSEG SBIN;
       78       78    1   DCL CRECX SBIN;
       79       79    1   DCL DA SBIN;
       80       80    1   DCL GBYTES UBIN;
       81       81    1   DCL GX UBIN;
       82       82    1   DCL G$ PTR;
       83       83    1   DCL FAK SBIN;
       84       84    1   DCL WRDS SBIN;
       85       85    1   DCL BUFNUM REDEF WRDS UBIN(36);
       86       86    1   DCL N SBIN;
       87       87    1   DCL I SBIN;
       88       88    1   DCL EOP SBIN;
       89       89    1   DCL CONT BIT(1);
       90       90    1   DCL FPT$ PTR;
       91       91    1   DCL GRANS SBIN;
       92       92        /* EXTERNAL DATA */
       93       93    1   DCL B$JIT$ PTR SYMREF READONLY;
       94       94        %INCLUDE B$TABLES_C;
       95      202        %B$XL_MOD_256;
       96      206        %B$XL_UR;
       97      210        %B$XL_UPPER_UR;
       98      214        %B$XL_LOWER_UR;
       99      218    1   DCL FM$BUF$(0:0) PTR SYMREF;
      100      219    1   DCL B$PS0$ PTR SYMREF READONLY;
      101      220    1   DCL B$PS1$ PTR SYMREF READONLY;
      102      221    1   DCL B$PS2$ PTR SYMREF READONLY;
      103      222    1   DCL B$PS3$ PTR SYMREF READONLY;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:4    
      104      223    1   DCL B$ROSEG$ PTR SYMREF READONLY;
      105      224        /* INCLUDE FILES */
      106      225        %INCLUDE B$JIT;
      107      828        %INCLUDE NK_URTBL_R;
      108      837        %MACRO F$DCBMAC(BASED=BASED);
      109      838        %INCLUDE F$DCB;
      110      887        %MEND;
      111      888        %INCLUDE FM$MACROS;
      112     1263        %INCLUDE N_FC_C;
      113     1300        %INCLUDE FM_DATA_R;
      114     1314        %INCLUDE F_ERRORS_C;
      115     1554        %INCLUDE F$CP6V_C;
      116     1780        %INCLUDE F_FPTCODE_C;
      117     1816        %INCLUDE CP_6_SUBS;
      118     2356        %INCLUDE B$SS;
      119     2535        %INCLUDE UD_ERRORS_C;
      120     2577        %INCLUDE B$USER;
      121     2793        %INCLUDE B_STRINGS_C;
      122     2922        %INCLUDE B_MAGIC_C;
      123     3040        /* BASED STRUCTURES */
      124     3041        %FPT$READ_V (BASED="BASED(FPT$)");
      125     3048        %FPT$PFIL_V (BASED="BASED(FPT$)");
      126     3051        %FPT$PRECORD_V (BASED="BASED(FPT$)");
      127     3056        %FPT$WRITE_V (BASED="BASED(FPT$)");
      128     3062        %FPT$DELREC_V (BASED="BASED(FPT$)");
      129     3066        %F$DCBMAC (BASED="BASED(JDCB$)");
      130     3116        %FM$CFU (BASED="BASED(CFU$)");
      131     3122        %FM$CFUJ (BASED="BASED(CFU$)");
      132     3127        %FM$CON (BASED="BASED(SEG$)");
      133     3131        %FM$GRAN (BASED="BASED(BUF$)",ENDLVL=NOTLDA);
      134     3135        %CODE03;
      135     3142        %B_MPT(FPTN=B_MPT, STCLASS=SYMREF);
      136     3235        %B$USERREFS;
      137     3239    1   DCL CHAR1 CHAR(1) BASED;
      138     3240    1   DCL UBIN36 UBIN(36) CALIGNED BASED;
      139     3241    1   DCL CHAR4 CHAR(4) BASED;
      140     3242    1   DCL CHARS CHAR(N) BASED;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:5    
      141     3243    1   DCL PAGE(0:1023) UBIN BASED ALIGNED;
      142     3244        /* EXTERNAL ROUTINES */
      143     3245    1   DCL FMD$REDBUF ENTRY(6) ALTRET;
      144     3246    1   DCL FMD$GETBUF ENTRY(3);
      145     3247    1   DCL FMD$RELBUF ENTRY(1);
      146     3248    1   DCL FMD$WRTBUF ENTRY(1);
      147     3249    1   DCL FMD$WRTSV ENTRY(1);
      148     3250    1   DCL FMD$FLSHBUF ENTRY(1);
      149     3251    1   DCL FMD$FLSHBUFNR ENTRY(1);
      150     3252    1   DCL FMD$RECTRAN ENTRY(8) ALTRET;
      151     3253    1   DCL FAF$GETGRAN ENTRY(1) ALTRET;
      152     3254    1   DCL FAF$FRTOSR ENTRY(3) ALTRET;
      153     3255    1   DCL FMC$CLR1 ENTRY(1);
      154     3256    1   DCL FMH$MAPJRNL ENTRY(2);
      155     3257    1   DCL FMI$RAN ENTRY(1) ALTRET;
      156     3258    1   DCL FMB$LOGERR ENTRY(11);
      157     3259    1   DCL FMN$GETFIT ENTRY(2)ALTRET;
      158     3260    1   DCL FMO$LOCCODP ENTRY(2) ALTRET;
      159     3261    1   DCL FMB$IOSPIN ENTRY;
      160     3262    1   DCL FMB$QUEUE ENTRY(9) ALTRET;
      161     3263    1   DCL FSE$GETGRAN ENTRY(1) ALTRET;
      162     3264    1   DCL SC_FMH99 ENTRY CONV(2,0);
      163     3265    1   DCL HFF$NILERASE ENTRY(1) ALTRET;
      164     3266    1   DCL MMJ$GIOP ENTRY(1);
      165     3267    1   DCL HFF$DSIZ ENTRY(2) ALTRET;
      166     3268        /* CONSTANT DATA */
      167     3269        %SUB FCG#='0615'O;
      168     3270        %SUB MID#='10'O;
      169     3271        %ERRCODE (NAME=ERRRWLD,COD#=%E$LD);
      170     3275        %ERRCODE (NAME=ERRLD,COD#=%E$LD,MID#='06'O); /* Use FMFs message for reads */
      171     3279        %ERRCODE (NAME=ERRFREC,COD#=%E$FREC);
      172     3283        %ERRCODE (NAME=ERRFIT,COD#=%E$FIT);
      173     3287        %ERRCODE (NAME=ERRWRDEL,COD#=%E$WRDEL);
      174     3291        %ERRCODE (NAME=ERREOF,COD#=%E$EOF);
      175     3295        %ERRCODE (NAME=ERRBOF,COD#=%E$BOF);
      176     3299        %ERRCODE (NAME=ERRNOCONT,COD#=%E$NOCONT);
      177     3303        %ERRCODE (NAME=ERRDELFWD,COD#=%E$DELFWD);
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:6    
      178     3307        %ERRCODE (NAME=ERRREWRITE,COD#=%E$REWRITE);
      179     3311        %ERRCODE (NAME=ERRCONCOMP,COD#=%E$CONCOMP);
      180     3315        %ERRCODE (NAME=ERRUBLOCK,COD#=%E$UBLOCK);
      181     3319        %ERRCODE (NAME=ERRWRITNEW,COD#=%E$WRITNEW);
      182     3323        %ERRCODE (NAME=ERRPMMEINT, COD#=%E$PMMEINT);
      183     3327    1   DCL DUMMYFPT(0:3) UBIN CONSTANT INIT(0*0);
      184     3328        /**/
      185     3329    1           FPT$=ADDR(PARMFPT);
      186     3330        /**/
      187     3331    1   CPMME:  JDCB$=B$JIT.DCB$;               /* POINTER TO DCB                     */
      188     3332    1           CFU$=F$DCB.CFU$;                /* POINTER TO CURRENT CFU             */
      189     3333    1           EOP=F$DCB.EOP;                  /* PREVIOUS OPERATION                 */
      190     3334    1           F$DCB.EOP=0;                    /* CLEAR IN CASE OF ERROR             */
      191     3335    1           CONT=F$DCB.CONT;                /* SAVE CONTINUE FLAG                 */
      192     3336    1           F$DCB.CONT='0'B;
      193     3337    1           FAK=1;                          /* SET FOR INITIAL SEGMENT            */
      194     3338                                                /*                                    */
      195     3339    2           DO CASE(FPTCODE);
      196     3340        /****************************/
      197     3341        /********  M$READ  **********/
      198     3342        /****************************/
      199     3343    2            CASE(FPTREAD);                 /* M$READ                             */
      200     3344    2              CALL SETUP ALTRET(ERR);
      201     3345    3              IF FPT$READ_V.DVBYTE.CONT THEN DO; /* Continue                     */
      202     3346    3                 IF EOP~=1 OR F$DCB.COMP OR FPT$WRITE_V.SEED~='0'B OR F$DCB.SEED
      203     3347    3                   OR F$DCB.ORG=%SYMB# THEN GOTO NOCONT;
      204     3348    3                 IF F$DCB.RPOS OR CRECX<LSTSEG
      205     3349    3                 THEN GOTO SETEOP;
      206     3350    3                 IF F$DCB.GDISP=FM$CON.GACTB AND
      207     3351    3                   FM$CON.C=0
      208     3352    3                 THEN GOTO SETEOP;
      209     3353    3                 GBYTES=FM$CON.GACTB-F$DCB.GDISP; /* Space left in seg           */
      210     3354    3                 GX=FM$CON.GX;
      211     3355    3                 G$=PINCRW(BUF$,GX);
      212     3356    3                 IF GX+(FM$CON.GACTB+3)/4>FM$GRAN.NAVX THEN
      213     3357    3                    GOTO SEGERR;
      214     3358    3                 N=GBYTES;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:7    
      215     3359    3                 IF N>F$DCB.UBYTES THEN    /* Limit xfer to user buffer          */
      216     3360    3                    N=F$DCB.UBYTES;
      217     3361    3                 F$DCB.UB$->CHARS=SUBSTR(G$->CHAR1,F$DCB.GDISP,N);
      218     3362    3                 F$DCB.GDISP=F$DCB.GDISP+N;
      219     3363    3                 F$DCB.ARS=F$DCB.ARS+N;
      220     3364    3                 F$DCB.UBYTES=F$DCB.UBYTES-N;
      221     3365    3                 F$DCB.UB$=PINCRC(F$DCB.UB$,N);
      222     3366    3                 IF GBYTES>N THEN
      223     3367    3                    GOTO LOSTDATA;
      224     3368    3                 GOTO READEND;
      225     3369    3                 END;
      226     3370    2              ELSE                         /* NORMAL READ                        */
      227     3371    3              DO;
      228     3372    3                 F$DCB.GDISP=0;
      229     3373    3                 CALL NXTREC ALTRET(SETRPOS); /* POSITION TO NEXT RECORD         */
      230     3374    3                 IF FPT$READ_V.KEYR THEN
      231     3375    3                    B$PS1$->CHAR4=ADDR(F$DCB.CRECNO)->CHAR4;
      232     3376    3                 END;
      233     3377    2   READLOOP:  GBYTES=FM$CON.GACTB;         /* # BYTES IN SEGMENT                 */
      234     3378    2              GX=FM$CON.GX;                /* WORD INDEX TO START OF DATA        */
      235     3379    2              G$=PINCRW(BUF$,GX);          /* POINTER TO DATA                    */
      236     3380    2              IF GX+(GBYTES+3)/4>FM$GRAN.NAVX THEN GOTO SEGERR; /* BAD SEG ENTRY */
      237     3381    3              IF FAK = 1 THEN DO;
      238     3382    3                 F$DCB.DVBYTE=FM$CON.CTL;
      239     3383    3                 END;
      240     3384    2              CALL FMD$RECTRAN(G$,GBYTES,1,0,FAK,FPT$READ_V.SEED) ALTRET(ERR);
      241     3385    2              FAK=0;
      242     3386    2              IF GBYTES>0 THEN GOTO LOSTDATA; /* RAN OUT OF ROOM                 */
      243     3387               /* SUCCESFULLY TRANSFERRED ALL OF CURRENT SEGMENT.
      244     3388                  IF NO MORE SEGMENT ENTRIES AND M$READ, ALL DONE;
      245     3389                  IF NO MORE AND M$WRITE REWRITE DCB.UBYTES MUST BE ZERO.
      246     3390                  IF MORE ENTRIES, GIVE LOST DATA IF DCB.UBYTES ZERO,
      247     3391                  ELSE GO TO APPROPRIATE PLACE TO PROCESS */
      248     3392    2   READEND:   IF FM$CON.C=1
      249     3393    2              THEN                         /* SEGMENT SEEMS TO BE CONTINUED      */
      250     3394    3              DO;
      251     3395    3                 F$DCB.GDISP=0;            /* ZAP CURRENT SEG DISPL              */
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:8    
      252     3396    3                 CALL NXTSEG ALTRET(NONXT); /* GO TO NEXT SEG ENTRY              */
      253     3397    3                 IF FM$CON.FAK=1
      254     3398    3                 THEN            /* THIS ONE IS FIRST, PREV C BIT IS IN ERROR    */
      255     3399    4                 DO;
      256     3400    4                    F$DCB.RPOS='1'B;       /* THIS REC IS NEXT                   */
      257     3401    4                    GOTO NOTC;             /* SEGMENT REALLY ISN'T CONTINUED     */
      258     3402    4                    END;
      259     3403    3                 ELSE                      /* SEGMENT TRULY IS CONTINUED         */
      260     3404    4                 DO;
      261     3405    4                    IF FM$CON.GACTB=0
      262     3406    4                    THEN                   /* HAVE RUN INTO DELETED ENTRY        */
      263     3407    4                       GOTO NOTC;
      264     3408    4                    IF F$DCB.UBYTES=0
      265     3409    4                    THEN                   /* USER BUFFER FULL                   */
      266     3410    4                       GOTO LOSTDATA;
      267     3411    4                    ELSE                   /* MORE TO DO                         */
      268     3412    4                       IF FPTCODE=FPTREAD
      269     3413    4                       THEN                /* M$READ                             */
      270     3414    4                          GOTO READLOOP;
      271     3415    4                       ELSE                /* M$WRITE REWRITE                    */
      272     3416    4                          GOTO REWRITELOOP;
      273     3417    4                    END;
      274     3418    3   NONXT:        IF B$JIT.ERR.CODE=%E$EOF
      275     3419    3                 THEN                      /* EOF                                */
      276     3420    4                 DO;
      277     3421    4                    F$DCB.RPOS='1'B;
      278     3422    4                    GOTO NOTC;             /* SEGMENT NOT REALLY CONTINUED       */
      279     3423    4                    END;
      280     3424    3                 ELSE                      /* SOME FATAL ERROR                   */
      281     3425    3                    ALTRETURN;
      282     3426    3                 END;
      283     3427    2              ELSE                         /* SEGMENT IS NOT CONTINUED           */
      284     3428    2   NOTC:         IF FPTCODE=FPTREAD OR
      285     3429    2                   F$DCB.UBYTES=0
      286     3430    2                 THEN                      /* M$READ OR NO USER BYTES LEFT       */
      287     3431    2                    GOTO SETEOP;
      288     3432    2                 ELSE
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:9    
      289     3433    2                    GOTO LOSTDATA;
      290     3434        /***************************/
      291     3435        /*********  M$WEOF  ********/
      292     3436        /***************************/
      293     3437    2            CASE(FPTWEOF);
      294     3438    2   WEOF:      IF F$DCB.ACS = %JRNL# AND F$DCB.RPOS THEN
      295     3439    2                 F$DCB.RPOS = '0'B;
      296     3440    2              CALL SETUP ALTRET(ERR);
      297     3441    2              CALL NXTREC ALTRET(WEOF5);
      298     3442    2              FM$CFU.FMOD='1'B;
      299     3443    2              GOTO DELFWD;
      300     3444        /**/
      301     3445    2   WEOF5:     ;
      302     3446    2              IF B$JIT.ERR.CODE~=%E$EOF THEN
      303     3447    2                 GOTO ERR;
      304     3448    2              F$DCB.RPOS='1'B;
      305     3449    2              GOTO SETEOP;
      306     3450        /***************************/
      307     3451        /*********  M$WRITE  *******/
      308     3452        /***************************/
      309     3453    2            CASE(FPTWRITE,MFC_WRUR,MFC_WRBIN, MFC_WRURUC);
      310     3454    2              IF F$DCB.ACS = %JRNL# AND F$DCB.RPOS THEN
      311     3455    2                 F$DCB.RPOS = '0'B;
      312     3456    2              CALL SETUP ALTRET(ERR);
      313     3457    2              CFU$->FM$CFU.FMOD='1'B;      /* SET FILE MODIFIED                  */
      314     3458    3              IF CONT THEN DO;             /* CONTINUE OPERATION                 */
      315     3459    3                 IF EOP~=3 OR F$DCB.COMP OR FPT$WRITE_V.SEED OR F$DCB.SEED
      316     3460    3                   OR F$DCB.ACS=%JRNL# OR F$DCB.ORG=%SYMB# THEN
      317     3461    3                    GOTO NOCONT;
      318     3462    3                 FAK=0;                    /* NOT BEGINNING OF RECORD            */
      319     3463    3                 IF F$DCB.UBYTES=0 THEN GOTO SETEOP;
      320     3464    3                 IF CRECX=LSTSEG AND F$DCB.BFR.DA(1)=
      321     3465    3                   CFU$->FM$CFU.LDA
      322     3466    3                 THEN                      /* AT EOF                             */
      323     3467    4                 DO;
      324     3468    4                    GBYTES=(FM$GRAN.AVAIL+FM$GRAN.NAVX-
      325     3469    4                      FM$CON.GX)*4;        /* TOTAL SPACE FOR THIS SEG           */
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:10   
      326     3470    4                    IF GBYTES<=F$DCB.GDISP THEN
      327     3471    4                       GOTO WRTEND2;       /* NOT ENOUGH SPACE LEFT              */
      328     3472    4                    GBYTES=GBYTES-F$DCB.GDISP; /* Extra space                    */
      329     3473    4                    GX=FM$CON.GX;
      330     3474    4                    G$=PINCRW(BUF$,GX);
      331     3475    4                    N=F$DCB.UBYTES;
      332     3476    4                    IF N>GBYTES THEN       /* Limit to smaller of two            */
      333     3477    4                       N=GBYTES;
      334     3478    4                    CALL INSERT(G$->CHAR1,F$DCB.GDISP,N,F$DCB.UB$->CHARS);
      335     3479    4                    F$DCB.GDISP=F$DCB.GDISP+N;
      336     3480    4                    FM$CON.GACTB=F$DCB.GDISP;
      337     3481    4                    F$DCB.UBYTES=F$DCB.UBYTES-N;
      338     3482    4                    F$DCB.UB$=PINCRC(F$DCB.UB$,N);
      339     3483    4                    GOTO WRTEND1;
      340     3484    4                    END;
      341     3485    3                 ELSE                      /* NOT AT EOF                         */
      342     3486    3                    GOTO REWRITELOOP;
      343     3487    3                 END;
      344     3488    2              ELSE                         /* NORMAL WRITE                       */
      345     3489    2                 F$DCB.GDISP=0;
      346     3490    2              IF F$DCB.UBYTES>=4096 THEN
      347     3491    2                 IF F$DCB.UBYTES/4096>FM$CFU.RCSZ THEN
      348     3492    2                    FM$CFU.RCSZ=F$DCB.UBYTES/4096;
      349     3493    3              IF FPT$WRITE_V.REWRITE AND F$DCB.ACS~=%JRNL# THEN DO;
      350     3494    4                 IF NOT F$DCB.FFLG.UPD THEN DO; /* Update not allowed            */
      351     3495    4                    B$JIT.ERR=ERRREWRITE;
      352     3496    4                    GOTO ERR;
      353     3497    4                    END;
      354     3498        /*E*    ERROR:  FMH-E$REWRITE-2
      355     3499        */
      356     3500    4                 IF F$DCB.COMP THEN DO;
      357     3501    4                    B$JIT.ERR=ERRCONCOMP;
      358     3502    4                    GOTO ERR;
      359     3503    4                    END;
      360     3504        /*E*    ERROR: FMH-E$CONCOMP-2
      361     3505                MESSAGE: It is illegal to rewrite records in a compressed consecutive file.
      362     3506        */
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:11   
      363     3507    3                 CALL CHKEOP ALTRET(ERR);  /* CHECK PREV OP AND POSITION         */
      364     3508    3   REWRITELOOP:  GBYTES=FM$CON.GACTB;
      365     3509    3                 N=GBYTES;                 /* Save size of seg for later         */
      366     3510    3                 GX=FM$CON.GX;             /* DISPL TO START OF DATA             */
      367     3511    3                 G$=PINCRW(BUF$,GX);       /* POINTER TO DATA                    */
      368     3512    3                 IF GX+(GBYTES+3)/4>FM$GRAN.NAVX THEN GOTO SEGERR;
      369     3513    3                 CALL FMD$RECTRAN(G$,GBYTES,1,1,FAK,FPT$WRITE_V.SEED,
      370     3514    3                   VFC,FPTCODE) ALTRET(ERR);
      371     3515    4                 IF FAK~=0 THEN DO;
      372     3516    4                    FAK=0;
      373     3517    4                    FM$CON.CTL=FPT$WRITE_V.DVBYTE; /* Device info                */
      374     3518    4                    END;
      375     3519    3                 IF N~=GBYTES THEN
      376     3520    3                    GOTO LOSTDATA;         /* Wrote less than this piece         */
      377     3521    3                 GOTO READEND;
      378     3522    3                 END;
      379     3523                                                /*                                    */
      380     3524    2              CALL NXTREC ALTRET(WRTEOF);  /* POSITION TO NEXT RECORD            */
      381     3525        /**/
      382     3526        /* Not at end-of-file - delete forward */
      383     3527        /**/
      384     3528    2   DELFWD:    ;
      385     3529    3              IF NOT F$DCB.FFLG.DELR THEN DO; /* NOT ALLOWED TO DELETE RECS      */
      386     3530    3                 B$JIT.ERR=ERRDELFWD;
      387     3531    3                 GOTO ERR;
      388     3532    3                 END;
      389     3533        /*E*    ERROR:     FMH-E$DELFWD-2
      390     3534        *       MESSAGE:  Delete forward not allowed% on file %FN%
      391     3535        *       MESSAGE1: DELR permission is needed to write at other than end-of-file
      392     3536        */
      393     3537    2              FM$GRAN.NAVX=FM$CON.GX;      /* REL DATA SPACE TOO                 */
      394     3538    2              FM$GRAN.AVAIL=CRECX-FM$GRAN.NAVX+1;
      395     3539    2              F$DCB.BFR.BUFUP(1)='1'B;
      396     3540    2              F$DCB.BFR.SCRUB(1)='1'B;
      397     3541    2              N=CFU$->FM$CFU.LDA-F$DCB.BFR.DA(1);
      398     3542    3              IF N~=0 THEN DO;             /* ZAP GRANS FROM NEW LDA TO OLD      */
      399     3543    3                 DA=F$DCB.BFR.DA(1)+1;     /* FIRST DISC ADDR TO ZAP             */
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:12   
      400     3544    4                 DO I=1 TO N;
      401     3545    4                    CALL FMB$QUEUE(0,0,4,DA,%N_WRZERO,0,ENTADDR(NIL),0);
      402     3546    4                    CALL FMC$CLR1(DA);
      403     3547    4                    DA=DA+1;
      404     3548    4                    END;
      405     3549    3                 CFU$->FM$CFU.LDA=F$DCB.BFR.DA(1); /* NEW LDA                    */
      406     3550    3                 FM$CFU.UGRANS=FM$CFU.UGRANS-N;
      407     3551    3                 FM$CFU.NGAVAL=FM$CFU.NGAVAL+N;
      408     3552    3                 IF F$DCB.STARF OR F$DCB.DISP=%SCRATCH# THEN
      409     3553    3                    GOTO DELFWD5;
      410     3554    3                 CALL FMB$IOSPIN;          /* Wait for all I/O to complete       */
      411     3555    3                 BUFNUM=4;
      412     3556    3                 CALL FMN$GETFIT(G$,BUFNUM)ALTRET(FITERR1);
      413     3557    3                 F$DCB.GTYP=FMGTFILE;      /* RESTORE GTYP                       */
      414     3558    3                 G$=PINCRW(G$,SIZEW(FM$GRAN)); /* START OF FIT                   */
      415     3559    3                 CALL FMO$LOCCODP(G$,3) ALTRET(FITERR); /* FIND CODE 3           */
      416     3560    3                 G$->CODE03.LDA=CFU$->FM$CFU.LDA;
      417     3561    3                 G$->CODE03.NRECS=F$DCB.CRECNO;
      418     3562    3                 IF BUFNUM~=1 THEN
      419     3563    3                 CALL FMD$WRTSV(BUFNUM);   /* Write FIT                          */
      420     3564    3                 CALL FMD$WRTSV(1);        /* Write FDA                          */
      421     3565    3                 IF BUFNUM=2 THEN
      422     3566    3                 CALL FMD$WRTBUF(2);       /* GET FIT OUT OF BUFFER 2            */
      423     3567    3                 ELSE
      424     3568    3                 CALL FMD$WRTSV(1);        /* FIT WAS ALREADY IN 1 - WRITE IT    */
      425     3569    3                 END;
      426     3570    2   DELFWD5:   ;
      427     3571    2              IF FPTCODE=FPTWEOF OR
      428     3572    3                 (FPTCODE=FPTDELREC AND FPT$DELREC_V.DELALL) THEN DO;
      429     3573    3                 FM$CFU.NRECS=F$DCB.CRECNO-1;
      430     3574    3                 F$DCB.NRECS=FM$CFU.NRECS;
      431     3575    3                 GOTO SETEOP;
      432     3576    3                 END;
      433     3577    2              GOTO WRTEOF2;
      434     3578                                                /*                                    */
      435     3579    2   FITERR:    CALL FMB$LOGERR(%E$FIT,13,8);
      436     3580    2              B$JIT.ERR=ERRFIT;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:13   
      437     3581    2   FITERR1:   F$DCB.GTYP=FMGTFILE;         /* RESTORE GTYP                       */
      438     3582    2              GOTO ERR;
      439     3583        /*E*   ERROR:  FMH-E$FIT-2
      440     3584        *       MESSAGE:  Error reading FIT of file %FN
      441     3585        *      DESCRIPTION:  An error occurred while reading the FIT to
      442     3586        *        update NRECS, LDA, etc. after a delete forward.
      443     3587        */
      444     3588                                                /*                                    */
      445     3589    2   WRTEOF:    IF B$JIT.ERR.CODE~=%E$EOF THEN ALTRETURN;
      446     3590    2              B$JIT.ERR='0'B;
      447     3591    3              IF NOT F$DCB.FFLG.WNEW THEN DO;
      448     3592    3                 B$JIT.ERR=ERRWRITNEW;
      449     3593    3                 GOTO ERR;
      450     3594    3                 END;
      451     3595        /*E*   ERROR:  FMH-E$WRITNEW-2
      452     3596        */
      453     3597                                                /*                                    */
      454     3598    3   WRTEOF2:   DO CASE(FM$GRAN.AVAIL);
      455     3599    3               CASE(0);                    /* NO SPACE LEFT                      */
      456     3600    3   WRITELOOP:    IF F$DCB.ACS = %JRNL# AND
      457     3601    3                   F$DCB.BFR.DA(1) = FM_FRZERO THEN
      458     3602    4                 DO;                       /* NEED TO CLEAR OUT FIT              */
      459     3603    4                    DA=FM$CFU.FITSDA;
      460     3604    4                    CALL FMC$CLR1(DA);
      461     3605    4                    END;                   /* NEED TO CLEAR OUT FIT              */
      462     3606    3                 CALL FAF$GETGRAN(DA) ALTRET(ERR); /* GET A GRANULE              */
      463     3607    4                 IF NOT FM$GRAN.NOTLDA THEN DO;
      464     3608    4                    FM$GRAN.NOTLDA='1'B;   /* This isn't LDA                     */
      465     3609    4                    F$DCB.BFR.BUFUP(1)='1'B;
      466     3610    4                    END;
      467     3611    3                 F$DCB.HASH=FM$GRAN.STAMP.HASH; /* In case JRNL                  */
      468     3612    3                 CFU$->FM$CFU.LDA=DA; /* New last disk address */
      469     3613    4                 IF F$DCB.ACS~=%JRNL# THEN DO;
      470     3614    4                    CALL FMD$FLSHBUFNR(1); /* Get rid of old buffer              */
      471     3615    4                    CALL FMD$GETBUF (1 , 1 , BUF$);
      472     3616    4                    END;
      473     3617    4                 ELSE DO;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:14   
      474     3618    4                    CALL FMD$FLSHBUF(1);   /* Get rid of old buffer              */
      475     3619    4                    CALL MMJ$GIOP(N);      /* GET NEW PAGE FOR BUFFER            */
      476     3620    4                    FM$CFUJ.PAGE#=N;
      477     3621    4                    CALL FMH$MAPJRNL(1,BUF$);
      478     3622    4                    END;
      479     3623    3                 FM$GRAN='0'B;             /* ZERO HEADER                        */
      480     3624    3                 FM$GRAN.STAMP.HASH=F$DCB.HASH;
      481     3625    3                 FM$GRAN.STAMP.GMOD=DA;
      482     3626    3                 FM$GRAN.NAVX=3;           /* Next data insertion point          */
      483     3627    3                 FM$GRAN.AVAIL=1024-FM$GRAN.NAVX; /* Space available             */
      484     3628    3                 FM$GRAN.ORG=F$DCB.ORG;
      485     3629    3                 F$DCB.BFR.DA(1)=DA;
      486     3630    3                 F$DCB.BFR.BUFUP(1)='1'B;
      487     3631    3                 F$DCB.BFR.SCRUB(1)='1'B;
      488     3632    3                 CRECX=1023;
      489     3633    3                 F$DCB.CRECX=1023;
      490     3634    3                 SEG$=PINCRW(BUF$,1023);
      491     3635    3               CASE(1);                    /* ONE WORD LEFT                      */
      492     3636    3                 IF F$DCB.UBYTES~=0 OR ADDR(VFC)~=ADDR(NIL) THEN
      493     3637    3                    GOTO WRITELOOP;        /*  Need at least two words           */
      494     3638    3               END;
      495     3639                                                /*                                    */
      496     3640    2              GBYTES=(FM$GRAN.AVAIL-1)*4;  /* SIZE OF DEST AREA                  */
      497     3641    2              GX=FM$GRAN.NAVX;             /* INDEX TO INSERT                    */
      498     3642    2              G$=PINCRW(BUF$,GX);          /* POINTER TO INSERTION LOC           */
      499     3643    2              CALL FMD$RECTRAN(G$,GBYTES,1,1,FAK,FPT$WRITE_V.SEED,
      500     3644    2                VFC,FPTCODE) ALTRET(ERR);
      501     3645    2              FM$CON='0'B;                 /* ZERO SEGMENT ENTRY                 */
      502     3646    2              FM$CON.GX=GX;
      503     3647    2              FM$CON.GACTB=GBYTES;
      504     3648    3              IF FAK=1 THEN DO;            /* First segment of record            */
      505     3649    3                 FAK=0;
      506     3650    3                 FM$CON.FAK=1;
      507     3651    3                 FM$CON.CTL=FPT$WRITE_V.DVBYTE; /* Device info                   */
      508     3652    3                 CFU$->FM$CFU.NRECS=F$DCB.CRECNO;
      509     3653    3                 F$DCB.NRECS=FM$CFU.NRECS; /* LET USERS SEE IT                   */
      510     3654    3                 END;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:15   
      511     3655    2              FM$GRAN.AVAIL=FM$GRAN.AVAIL-1; /* CTL WD                           */
      512     3656    2   WRTEND1:   WRDS=(F$DCB.GDISP+3)/4-FM$GRAN.NAVX+
      513     3657    2                FM$CON.GX;                 /* # WORDS ADDED THIS TIME            */
      514     3658    2              FM$GRAN.NAVX=FM$GRAN.NAVX+WRDS;
      515     3659    2              FM$GRAN.AVAIL=FM$GRAN.AVAIL-WRDS;
      516     3660    2              F$DCB.RPOS='0'B;             /* THIS RECORD IS CURRENT             */
      517     3661    2   WRTEND2:   F$DCB.BFR.BUFUP(1)='1'B;
      518     3662    2              IF F$DCB.UBYTES=0 THEN
      519     3663    2                 GOTO SETEOP;              /* DONE                               */
      520     3664    2              FM$CON.C=1;                  /* SET CONTINUATION FLAG              */
      521     3665    2              F$DCB.GDISP=0;               /* DONE WITH THIS SEGMENT             */
      522     3666    2              GOTO WRITELOOP;
      523     3667        /******************************/
      524     3668        /*****   M$PRECORD  ***********/
      525     3669        /******************************/
      526     3670    2            CASE(FPTPREC);                 /* M$PRECORD                          */
      527     3671    2              F$DCB.ARS=0;
      528     3672                   /* BOF and EOF are wasted efforts for a journal file */
      529     3673    2              IF FPT$PRECORD_V.BOF THEN
      530     3674    2                 CALL REWIND ALTRET(ERR);
      531     3675    2              ELSE IF FPT$PRECORD_V.EOF THEN
      532     3676    2                 CALL PFIL_EOF ALTRET(ERR);
      533     3677    2              CALL SETUP ALTRET(ERR);
      534     3678    2              N=FPT$PRECORD_V.N;           /* # RECORDS TO MOVE                  */
      535     3679    3   PREC:      IF N>=0 THEN DO;
      536     3680    3                 CALL NXTREC ALTRET(PRECEOF);
      537     3681    4                 DO WHILE(N>0);
      538     3682    4                    F$DCB.ARS=F$DCB.ARS+1;
      539     3683    4                    N=N-1;
      540     3684    4                    CALL NXTREC ALTRET(PRECEOF);
      541     3685    4                    IF FPT$PRECORD_V.BRK AND
      542     3686    4                       S$CU$->B$U.ASYNCH&(~%U_RESET) AND
      543     3687    4                       B_MPT.SS$->B$SS.ISR.WSR ~= %MONWSR THEN
      544     3688    4                       GOTO ERR_INT;
      545     3689    4                    END;
      546     3690    3                 END;
      547     3691    2              ELSE
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:16   
      548     3692    3              DO WHILE(N<0);
      549     3693    3                 CALL BEGREC ALTRET(RSTRPOS);
      550     3694    3                 F$DCB.RPOS='1'B;          /* THIS REC IS NEXT TO FIND           */
      551     3695    3                 F$DCB.ARS=F$DCB.ARS+1;
      552     3696    3                 N=N+1;
      553     3697    3                 IF FPT$PRECORD_V.BRK AND
      554     3698    3                    S$CU$->B$U.ASYNCH&(~%U_RESET) AND
      555     3699    3                    B_MPT.SS$->B$SS.ISR.WSR ~= %MONWSR THEN
      556     3700    3                    GOTO ERR_INT;
      557     3701    3                 END;
      558     3702    3              DO WHILE('0'B);
      559     3703    3   ERR_INT:      B$JIT.ERR=ERRPMMEINT;
      560     3704    3              END;
      561     3705    2              F$DCB.RPOS='1'B;
      562     3706    2              IF FPT$PRECORD_V.KEYR THEN
      563     3707    2                 B$PS1$->CHAR4=ADDR(F$DCB.CRECNO)->CHAR4;
      564     3708    2              IF B$JIT.ERR.CODE = %E$PMMEINT THEN
      565     3709    2                 GOTO ERR;
      566     3710    2              ELSE
      567     3711    2                 GOTO SETEOP;
      568     3712    2   PRECEOF:   IF B$JIT.ERR.CODE~=%E$EOF THEN GOTO ERR;
      569     3713    2              F$DCB.RPOS='1'B;
      570     3714    2              IF N~=0 THEN GOTO ERR;
      571     3715    2              B$JIT.ERR='0'B;
      572     3716    2              IF FPT$PRECORD_V.KEYR THEN
      573     3717    2                 B$PS1$->CHAR4=ADDR(F$DCB.CRECNO)->CHAR4;
      574     3718    2              GOTO SETEOP;
      575     3719        /******************************/
      576     3720        /******  M$DELREC  ************/
      577     3721        /******************************/
      578     3722    2            CASE(FPTDELREC);
      579     3723    3              IF FPT$DELREC_V.DELALL THEN DO;
      580     3724                      /* DELALL is wasted effort for a journal file since
      581     3725                      it doesn't (and shouldn't) work.                 */
      582     3726    3                 CALL REWIND ALTRET(ERR);
      583     3727    3                 GOTO WEOF;
      584     3728    3                 END;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:17   
      585     3729    2              CALL SETUP ALTRET(ERR);
      586     3730    2              CALL CHKEOP ALTRET(ERR);     /* Validate EOP, position             */
      587     3731    2              CFU$->FM$CFU.FMOD='1'B;      /* SET FILE MODIFIED                  */
      588     3732    2              FM$CON.FAK=0;
      589     3733    2              F$DCB.BFR.BUFUP(1)='1'B;
      590     3734    2              FM$CFU.NRECS=FM$CFU.NRECS-1;
      591     3735    2              F$DCB.NRECS=FM$CFU.NRECS;
      592     3736    2              F$DCB.ARS=1;                 /* # RECORDS DELETED                  */
      593     3737        /******************************/
      594     3738        /******  OTHERS  **************/
      595     3739        /******************************/
      596     3740    2            CASE(ELSE);
      597     3741    2              F$DCB.EOP=EOP;               /* RESTORE ORIGINAL EOP               */
      598     3742    2              RETURN;
      599     3743        /******************************/
      600     3744        /******* FILE EXTENSION *******/
      601     3745        /******************************/
      602     3746    2            CASE(FPTPFILEOF);
      603     3747    2              GOTO PFILEOF;
      604     3748        /******************************/
      605     3749        /******  M$PFIL  **************/
      606     3750        /******************************/
      607     3751    2            CASE(FPTPFIL);
      608     3752    2              IF FPT$PFIL_V.BOF
      609     3753    2              THEN                         /* POSITION TO BOF                    */
      610     3754    3              DO;
      611     3755    3   REW:          CALL REWIND ALTRET(ERR);
      612     3756    3                 END;
      613     3757    2              ELSE                         /* POSITION TO EOF                    */
      614     3758    3              DO;
      615     3759    3   PFILEOF:      CALL PFIL_EOF ALTRET(ERR);
      616     3760    3                 END;
      617     3761        /*****************************/
      618     3762        /*********  M$REW  ***********/
      619     3763        /*****************************/
      620     3764    2            CASE(FPTREW);
      621     3765    2              GOTO REW;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:18   
      622     3766    2            END;
      623     3767                                                /*                                    */
      624     3768    1   SETEOP: F$DCB.EOP=FM_EOP(FPTCODE);
      625     3769    1           IF FPTCODE=FPTWRITE THEN
      626     3770    1              F$DCB.CONT=FPT$WRITE_V.DVBYTE.CONT;
      627     3771    1           RETURN;
      628     3772                                                /*                                    */
      629     3773    1   RSTRPOS: F$DCB.RPOS='0'B;
      630     3774    1            IF B$JIT.ERR.CODE=%E$EOF THEN
      631     3775    1              B$JIT.ERR.CODE=%E$BOF;
      632     3776    1           IF FPT$PRECORD_V.KEYR THEN
      633     3777    1              B$PS1$->CHAR4=ADDR(F$DCB.CRECNO)->CHAR4;
      634     3778    1           IF FPT$PRECORD_V.KEYR AND B$PS1$->UBIN36 = 0 THEN
      635     3779    1              B$PS1$->UBIN36 = 1;
      636     3780    1           GOTO ERR;
      637     3781    1   SETRPOS: F$DCB.RPOS='1'B;
      638     3782    1   ERR:    ALTRETURN;
      639     3783                                                /*                                    */
      640     3784    1   LOSTDATA: F$DCB.EOP=FM_EOP(FPTCODE);
      641     3785    1           IF FPTCODE=FPTREAD THEN
      642     3786    1              B$JIT.ERR=ERRLD;
      643     3787    1           ELSE
      644     3788    1              B$JIT.ERR=ERRRWLD;
      645     3789    1           ALTRETURN;
      646     3790        /*E*   ERROR:  FMH-E$LD-2
      647     3791        *      MESSAGE:  Rewrite size discrepancy% for %UF%
      648     3792        *      MESSAGE1: An M$WRITE with REWRITE attempted to replace a record
      649     3793        *        %in %UF %with one of a different size.
      650     3794        *        It was truncated or extended to the original size.
      651     3795        */
      652     3796                                                /*                                    */
      653     3797    1   SEGERR: B$JIT.ERR=ERRFREC;
      654     3798    1           DA=F$DCB.BFR.DA(1);
      655     3799    1           N=F$DCB.CRECX;
      656     3800    1           CALL FMB$LOGERR(%E$FREC,12,8,DA,BUF$,0,1,N);
      657     3801    1           ALTRETURN;
      658     3802        /*E*   ERROR:  FMH-E$FREC-2
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:19   
      659     3803        *       MESSAGE: Inconsistency in record pointers% in file %FN%
      660     3804        *       MESSAGE1: This record is inaccessible
      661     3805        */
      662     3806    1   NOCONT: B$JIT.ERR=ERRNOCONT;
      663     3807    1           ALTRETURN;
      664     3808        /*E*   ERROR:  FMH-E$NOCONT-2
      665     3809        */
      666     3810        %EJECT;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:20   
      667     3811        /*F*   NAME:     CHKEOP
      668     3812               PURPOSE:  To check EOP for 1 (read) or 2 (precord) and position
      669     3813                         appropriately.
      670     3814               DESCRIPTION:  We need to check the EOP (last operation) and
      671     3815               position to the correct record if the current operation is an
      672     3816               M$WRITE REWRITE or M$DELREC.
      673     3817
      674     3818               If the last operation was a read, position to the start of the
      675     3819               current record.
      676     3820
      677     3821               If it was a precord, try to position to the 'next' record.
      678     3822               If the prior precord really positioned to a record
      679     3823               (F$DCB.RPOS='1'B), then we'll actually position to the current
      680     3824               record. If not (F$DCB.RPOS='0'B), then we'll try to position
      681     3825               to the next record.
      682     3826
      683     3827               All other prior operations are illegal.                   */
      684     3828        /**/
      685     3829    1   CHKEOP: PROC ALTRET;
      686     3830    3           DO CASE(EOP);
      687     3831    3            CASE(1);                       /* READ                               */
      688     3832    3              CALL BEGREC ALTRET(ERR);     /* FIND BEGINNING OF CURRENT RECORD   */
      689     3833    3            CASE(2);                       /* PRECORD                            */
      690     3834    3              CALL NXTREC ALTRET(ERR);     /* GET NEXT RECORD                    */
      691     3835    3            CASE(ELSE);                    /* ALL ELSE IS ILLEGAL                */
      692     3836    3              B$JIT.ERR=ERRWRDEL;
      693     3837    3              ALTRETURN;
      694     3838    3            END;
      695     3839    2           RETURN;
      696     3840    2   ERR:    ALTRETURN;
      697     3841    2   END CHKEOP;
      698     3842        /*E*   ERROR:  FMH-E$WRDEL-2
      699     3843        *      MESSAGE:  Illegal M$WRITE or M$DELREC on consecutive file %FN
      700     3844        *       MESSAGE1: An M$WRITE REWRITE or an M$DELREC to a consecutive
      701     3845        file is illegal unless the previous operation was a successful
      702     3846        M$READ or M$PRECORD
      703     3847        */
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:21   
      704     3848        %EJECT;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:22   
      705     3849        /*F*   NAME:     REWIND
      706     3850               PURPOSE:  Position to beginning of file.
      707     3851               DESCRIPTION:  Read granule zero into F$DCB.BFR(1) and set
      708     3852               F$DCB.RPOS, F$DCB.CRECX, and F$DCB.CRECNO so that a subsequent
      709     3853               read will get the first record in the file.
      710     3854        */
      711     3855        /**/
      712     3856    1   REWIND: PROC ALTRET;
      713     3857    2          CALL FMD$REDBUF(BUF$,1,FM_FRZERO,0,0) ALTRET(ERR); /* Read FDA */
      714     3858    2          F$DCB.CRECX=1024;
      715     3859    2          F$DCB.RPOS='0'B;
      716     3860    2          F$DCB.CRECNO=0;
      717     3861    2          RETURN;
      718     3862    2   ERR:   ALTRETURN;
      719     3863    2   END REWIND;
      720     3864        %EJECT;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:23   
      721     3865        /*F*   NAME:     PFIL_EOF
      722     3866               PURPOSE:  Position to end of file.
      723     3867               DESCRIPTION:  Read the last granule of the file and set up
      724     3868               DCB information to point to one record past the last record
      725     3869               in the file.
      726     3870        */
      727     3871        /**/
      728     3872    1   PFIL_EOF: PROC ALTRET;
      729     3873    2          DA=CFU$->FM$CFU.LDA;
      730     3874    2          CALL FMD$REDBUF(BUF$,1,DA,0,0) ALTRET(ERR); /* Read LDA    */
      731     3875    2          F$DCB.CRECX=FM$GRAN.NAVX+FM$GRAN.AVAIL-1;
      732     3876    2          F$DCB.CRECNO=CFU$->FM$CFU.NRECS+1;
      733     3877    2          F$DCB.RPOS='1'B;
      734     3878    2          RETURN;
      735     3879    2   ERR:   ALTRETURN;
      736     3880    2   END PFIL_EOF;
      737     3881        %EJECT;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:24   
      738     3882        /*F*   NAME:   FMH$LOOKAHD
      739     3883        *      PURPOSE:  Position to the next record in the forward
      740     3884        *                direction, and set DCB.DVBYTE to the CTL field
      741     3885        *                for the record.                                             */
      742     3886                                                /*                                    */
      743     3887                                                /*                                    */
      744     3888                                                /*                                    */
      745     3889        /*D*   NAME:   FMH$LOOKAHD
      746     3890        *      CALL:   CALL FMH$LOOKAHD ALTRET(LOC);
      747     3891        *      OUTPUT: DCB.DVBYTE set to the CTL field of the next record            */
      748     3892                                                /*                                    */
      749     3893    1   FMH$LOOKAHD: ENTRY ALTRET;
      750     3894                                                /*                                    */
      751     3895    1           JDCB$=B$JIT.DCB$;               /* POINTER TO CURRENT DCB             */
      752     3896    1           CFU$=F$DCB.CFU$;                /* POINTER TO CURRENT CFU             */
      753     3897    1           CALL SETUP ALTRET(ERR);
      754     3898                                                /*                                    */
      755     3899    1           CALL NXTREC ALTRET(SETRPOS);    /* MOVE TO NEXT RECORD                */
      756     3900    1           F$DCB.RPOS='1'B;                /* NEXT READ WILL GET THIS RECORD     */
      757     3901    1           F$DCB.DVBYTE=FM$CON.CTL;
      758     3902    1           RETURN;
      759     3903        %EJECT;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:25   
      760     3904        /*F*    NAME:    FMH$TRUNC
      761     3905        *       PURPOSE: Force the next write to allocate another granule.
      762     3906        */
      763     3907        /**/
      764     3908        /**/
      765     3909        /**/
      766     3910        /*D*    NAME:    FMH$TRUNC
      767     3911        *       CALL:    CALL FMH$TRUNC;
      768     3912        *       DESCRIPTION:  Makes the current granule look full so that
      769     3913        *         the next write will allocate a new granule.
      770     3914        */
      771     3915        /**/
      772     3916    1   FMH$TRUNC: ENTRY ALTRET;
      773     3917        /**/
      774     3918    1           JDCB$=B$JIT.DCB$;
      775     3919    1           CFU$=F$DCB.CFU$;
      776     3920    1           CALL SETUP ALTRET(ERR);
      777     3921    1           FM$GRAN.NAVX=FM$GRAN.NAVX+FM$GRAN.AVAIL;
      778     3922    1           FM$GRAN.AVAIL=0;
      779     3923    1           F$DCB.BFR.BUFUP(1)='1'B;
      780     3924    1           RETURN;
      781     3925        %EJECT;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:26   
      782     3926        /*F*    NAME:   FMH$SYMB
      783     3927        *       PURPOSE:  Provide M$WRITE service for ORG=SYMB files */
      784     3928        /**/
      785     3929        /**/
      786     3930        /**/
      787     3931        /*D*    NAME:   FMH$SYMB
      788     3932        *       CALL:   CALL FMH$SYMB(FPTCODE,FPT,VFC) ALTRET(LOC);
      789     3933        *       INPUT:  FPTCODE - FPTWRITE
      790     3934        *               FPT - The FPT for this operation.
      791     3935        *               VFC - The VFC for this record
      792     3936        *       DESCRIPTION:  The record is written just like a
      793     3937        *           consecutive file record with the following differences:
      794     3938        *           1 - The records are not spanned across granules
      795     3939        *           2 - Rewrite is not allowed
      796     3940        *           3 - Compression and encryption are ignored
      797     3941        *           4 - The file must be positioned at EOF
      798     3942        */
      799     3943    1   FMH$SYMB: ENTRY(FPTCODE,PARMFPT,VFC) ALTRET;
      800     3944        /**/
      801     3945    1           FPT$=ADDR(PARMFPT);
      802     3946    2           DO CASE(FPTCODE);
      803     3947    2            CASE(MFC_WRITE,            /* WRITE 9 -> 8 XLATE         */
      804     3948    2                 MFC_WRUR,             /* WRITE UR UPPER AND LOWER   */
      805     3949    2                 MFC_WRURUC,           /* WRITE UR UPPER ONLY        */
      806     3950    2                 MFC_URLC,             /* WRITE UR LOWER ONLY        */
      807     3951    2                 MFC_NATL,             /* WRITE NATL XLATE, CUST MADE*/
      808     3952    2                 MFC_APL,              /* WRITE AFTER XLATE FOR APL  */
      809     3953    2                 MFC_NOX,              /* WRITE NO XLATE, PASS THRU  */
      810     3954    2                 MFC_WRBIN,            /* WRITE BINARY, PASS THRU    */
      811     3955    2                 MFC_TRUOVRPRT);       /* WRITE OVERPRINT, PASS THRU */
      812     3956    2              GOTO WRSYMB;
      813     3957    2            CASE(ELSE);
      814     3958    2              GOTO CPMME;
      815     3959    2            END;
      816     3960        /**/
      817     3961    1   WRSYMB: JDCB$=B$JIT.DCB$;
      818     3962    1           CFU$=F$DCB.CFU$;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:27   
      819     3963    1           CALL SETUP ALTRET(ERR);
      820     3964    2           IF FPT$WRITE_V.REWRITE THEN DO;
      821     3965    2              B$JIT.ERR=ERRREWRITE;
      822     3966    2              GOTO ERR;
      823     3967    2              END;
      824     3968    1           CALL NXTREC ALTRET(SYMEOF);
      825     3969    1           F$DCB.RPOS='1'B;
      826     3970    1           B$JIT.ERR=ERRDELFWD;
      827     3971    1           GOTO ERR;
      828     3972    1   SYMEOF: IF B$JIT.ERR.CODE~=%E$EOF THEN GOTO ERR;
      829     3973    1           B$JIT.ERR='0'B;
      830     3974    1           IF ADDR(VFC)=ADDR(NIL) THEN
      831     3975    1              I=0;
      832     3976    1           ELSE
      833     3977    1              I=1;
      834     3978    1           N=FM$GRAN.AVAIL*4-4-I;
      835     3979    2           IF N<F$DCB.UBYTES THEN DO;
      836     3980    2              CALL FSE$GETGRAN(DA) ALTRET(ERR); /* Get a granule                 */
      837     3981    2              FM$GRAN.KEYCNT = F$DCB.PGINGRAN;
      838     3982    2              F$DCB.PGINGRAN = 0;
      839     3983    3              IF NOT FM$GRAN.NOTLDA THEN DO;
      840     3984    3                 FM$GRAN.NOTLDA='1'B;
      841     3985    3                 F$DCB.BFR.BUFUP(1)='1'B;
      842     3986    3                 END;
      843     3987    2              CALL FMD$FLSHBUFNR(1);       /* WRITE OUT WHAT IS THERE            */
      844     3988    2              CALL FMD$GETBUF(1,1,BUF$);   /* GET NEW BUFFER                     */
      845     3989    2              FM$GRAN='0'B;
      846     3990    2              FM$GRAN.STAMP.HASH=F$DCB.HASH;
      847     3991    2              FM$GRAN.STAMP.GMOD=DA;
      848     3992    2              FM$GRAN.NAVX=3;
      849     3993    2              FM$GRAN.AVAIL=1024-FM$GRAN.NAVX;
      850     3994    2              N=FM$GRAN.AVAIL*4-4-I;
      851     3995    2              FM$GRAN.ORG=F$DCB.ORG;
      852     3996    2              F$DCB.BFR.DA(1)=DA;
      853     3997    2              F$DCB.BFR.BUFUP(1)='1'B;
      854     3998    2              F$DCB.BFR.SCRUB(1)='1'B;
      855     3999    2              CFU$->FM$CFU.LDA=DA;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:28   
      856     4000    2              F$DCB.CRECX=1023;
      857     4001    2              SEG$=PINCRW(BUF$,1023);
      858     4002    2              END;
      859     4003    1           F$DCB.CRECNO=CFU$->FM$CFU.NRECS+1; /* CURRENT REC #                   */
      860     4004    1           GX=FM$GRAN.NAVX;                /* INSERTION INDEX                    */
      861     4005    1           G$=PINCRW(BUF$,GX);
      862     4006    2           IF I~=0 THEN DO;                /* There is a VFC                     */
      863     4007    2              G$->CHAR1=VFC;
      864     4008    2              G$=PINCRC(G$,1);
      865     4009    2              END;
      866     4010    1           IF N>F$DCB.UBYTES THEN
      867     4011    1              N=F$DCB.UBYTES;
      868     4012    1           IF F$DCB.WIDTH > 0 AND
      869     4013    2              (NOT FPT$WRITE_V.DVBYTE.TRANS) THEN DO;
      870     4014    2              IF N > F$DCB.WIDTH THEN
      871     4015    2                 N=F$DCB.WIDTH;
      872     4016    2              END;
      873     4017
      874     4018    2           DO CASE(FPTCODE);
      875     4019    2            CASE (MFC_WRUR);    /* XLATE FOR UPPER AND LOWER CASE ONLY */
      876     4020    2              CALL XLATE(G$->CHARS,B$XL_UR,F$DCB.UB$->CHARS);
      877     4021
      878     4022    2            CASE (MFC_WRURUC);  /* XLATE FOR UPPER CASE ONLY           */
      879     4023    2              CALL XLATE(G$->CHARS, B$XL_UPPER_UR, F$DCB.UB$->CHARS);
      880     4024
      881     4025    2            CASE (MFC_WRITE);   /* XLATE TO STRIP OFF 9TH BIT ONLY     */
      882     4026    2              CALL XLATE(G$->CHARS,B$XL_MOD_256,F$DCB.UB$->CHARS);
      883     4027
      884     4028    2            CASE (MFC_NATL);    /* XLATE FOR NATIONAL (CUSTOMER) ONLY  */
      885     4029    2              CALL XLATE(G$->CHARS,NK_NATLTBL,F$DCB.UB$->CHARS);
      886     4030
      887     4031    2            CASE (MFC_APL);     /* XLATE FOR APL CHARACTER SET ONLY    */
      888     4032    2              CALL XLATE(G$->CHARS, B$XL_MOD_256, F$DCB.UB$->CHARS);
      889     4033
      890     4034    2            CASE (MFC_URLC);    /* XLATE TO MAKE ALL LOWER CASE FOR UR */
      891     4035    2              CALL XLATE(G$->CHARS,B$XL_LOWER_UR,F$DCB.UB$->CHARS);
      892     4036
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:29   
      893     4037    2            CASE (MFC_NOX,      /* THESE THREE ARE DO NOTHING FUNCTION */
      894     4038    2                  MFC_WRBIN,    /* CODES, JUST PUT THE OUTPUT INTO THE */
      895     4039    2                  MFC_TRUOVRPRT);    /* OUTPUT AREA AND CONTINUE - NO XLATE */
      896     4040    2              G$->CHARS=F$DCB.UB$->CHARS;
      897     4041
      898     4042    2            CASE (ELSE);        /* IMPOSSIBLE CONDITION - DO A SNAP    */
      899     4043    2              CALL SC_FMH99;
      900     4044    2              G$->CHARS=F$DCB.UB$->CHARS;
      901     4045        /*S*   SCREECH_CODE: FMH-S$FM99
      902     4046               TYPE: DUMP
      903     4047               MESSAGE:  Illegal translation code for symbiont write.
      904     4048        */
      905     4049    2            END;
      906     4050    1           FM$CON='0'B;
      907     4051    1           FM$CON.GX=GX;
      908     4052    1           FM$CON.GACTB=N+I;
      909     4053    1           FM$CON.FAK=1;
      910     4054    1           FM$CON.CTL=FPT$WRITE_V.DVBYTE;
      911     4055    1           CFU$->FM$CFU.NRECS=F$DCB.CRECNO;
      912     4056    1           F$DCB.NRECS=FM$CFU.NRECS;
      913     4057    1           CFU$->FM$CFU.FMOD='1'B;         /* FILE MODIFIED                      */
      914     4058    1           F$DCB.BFR.BUFUP(1)='1'B;
      915     4059    1           F$DCB.CRECX=F$DCB.CRECX-1;
      916     4060    1           WRDS=(N+I+3)/4;                 /* # words of data                    */
      917     4061    1           FM$GRAN.AVAIL=FM$GRAN.AVAIL-WRDS-1;
      918     4062    1           FM$GRAN.NAVX=FM$GRAN.NAVX+WRDS;
      919     4063    1           GOTO SETEOP;
      920     4064        %EJECT;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:30   
      921     4065        /*F*    NAME:     FMH$SYMB_FINISH
      922     4066                PURPOSE:  After the last write to a symbiont file, the file
      923     4067                needs to be finished by updating the part of the granule
      924     4068                header which says how many logical pages are contained in the
      925     4069                granule.
      926     4070        */
      927     4071        /*D*    NAME:     FMH$SYMB_FINISH
      928     4072                CALL:     CALL FMH$SYMB_FINISH ALTRET(label);
      929     4073                INPUT:    None required
      930     4074                DESCRIPTION:  As in FMH$SYMB, the usual checks are made to
      931     4075                ensure that we're at end of file. Then, instead of performing
      932     4076                a write, FM$GRAN.KEYCNT of the last granule is updated with
      933     4077                F$DCB.PGINGRAN and the granule is rewritten.
      934     4078        */
      935     4079    1   FMH$SYMB_FINISH: ENTRY(FPTCODE,PARMFPT,VFC) ALTRET;
      936     4080        /**/
      937     4081    1           JDCB$=B$JIT.DCB$;
      938     4082    1           CFU$=F$DCB.CFU$;
      939     4083    1           CALL SETUP ALTRET(ERR);
      940     4084    1           CALL NXTREC ALTRET(SYMEOF2);
      941     4085    1           F$DCB.RPOS='1'B;
      942     4086    1           B$JIT.ERR=ERRDELFWD;
      943     4087    1           GOTO ERR;
      944     4088    1   SYMEOF2:;
      945     4089    1           IF B$JIT.ERR.CODE ~= %E$EOF THEN
      946     4090    1              GOTO ERR;
      947     4091    1           B$JIT.ERR='0'B;
      948     4092    1           FM$GRAN.KEYCNT=F$DCB.PGINGRAN;
      949     4093    1           F$DCB.PGINGRAN=0;
      950     4094    1           FM$GRAN.NOTLDA='0'B;
      951     4095    1           F$DCB.BFR.BUFUP(1)='1'B;
      952     4096    1           CFU$->FM$CFU.FMOD='1'B;
      953     4097    1           CALL FMD$FLSHBUF(1);
      954     4098    1           RETURN;
      955     4099        %EJECT;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:31   
      956     4100        /*F*    NAME:   FMH$PREC
      957     4101        *       PURPOSE:  Provide M$PRECORD service for consecutive and
      958     4102        *                 unit record files without an FPT */
      959     4103        /**/
      960     4104        /**/
      961     4105        /**/
      962     4106        /*D*    NAME:   FMH$PREC
      963     4107        *       CALL:   CALL FMH$PREC(FPTCODE)   ALTRET(LOC);
      964     4108        *       INPUT:  FPTCODE - FPTPREC
      965     4109        *               DCB.UBYTES - Number of records to position
      966     4110        */
      967     4111        /**/
      968     4112    1   FMH$PREC: ENTRY(FPTCODE)        ALTRET;
      969     4113        /**/
      970     4114    1           JDCB$=B$JIT.DCB$;
      971     4115    1           CFU$=F$DCB.CFU$;
      972     4116    1           FPT$=ADDR(DUMMYFPT);
      973     4117    1           F$DCB.EOP=0;
      974     4118    1           CALL SETUP;
      975     4119    1           N=F$DCB.UBYTES;
      976     4120    1           GOTO PREC;
      977     4121        %EJECT;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:32   
      978     4122        /*F*   NAME:   FLINK
      979     4123        *      PURPOSE:  Read the next granule in the forward or
      980     4124        *                reverse direction                                           */
      981     4125                                                /*                                    */
      982     4126                                                /*                                    */
      983     4127                                                /*                                    */
      984     4128        /*D*   NAME:   FLINK
      985     4129        *      ENTRY:  BLINK
      986     4130        *      CALL:   CALL FLINK ALTRET(LOC);
      987     4131        *      INPUT:  Disk address of current granule in DCB.BFR.DA(1)
      988     4132        *              JDCB$ - Pointer to current DCB
      989     4133        *      OUTPUT: BUF$ - Pointer to new buffer
      990     4134        *              LSTSEG - Index to last segment entry in buffer
      991     4135        *      DESCRIPTION:  The disk address in DCB.BFR.DA(1) is
      992     4136        *    incremented or decremented as appropriate.  If not within
      993     4137        *    the limits of the file, either BOF or EOF is reported.
      994     4138        *    Otherwise, FMD$REDBUF is called to read the granule, and
      995     4139        *    LSTSEG is set to NAVX+AVAIL.                                            */
      996     4140                                                /*                                    */
      997     4141    1   FLINK:  PROC ALTRET;
      998     4142        /* LOCAL AUTOMATIC STORAGE */
      999     4143    2   DCL DA SBIN WORD;
     1000     4144    2   DCL DIR SBIN;
     1001     4145                                                /*                                    */
     1002     4146    2           DIR=1;                          /* FORWARD                            */
     1003     4147    2           DA=F$DCB.BFR.DA(1)+1;
     1004     4148    2           IF DA>CFU$->FM$CFU.LDA
     1005     4149    2           THEN                            /* BEYOND EOF - REPORT EOF ERROR      */
     1006     4150    3           DO;
     1007     4151    3              B$JIT.ERR=ERREOF;
     1008     4152    3   ERR:       ALTRETURN;
     1009     4153    3              END;
     1010     4154    2           GOTO READ;
     1011     4155                                                /*                                    */
     1012     4156    2   BLINK:  ENTRY ALTRET;
     1013     4157                                                /*                                    */
     1014     4158    2           DIR=0;                          /* BACKWARD                           */
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:33   
     1015     4159    2           DA=F$DCB.BFR.DA(1)-1;
     1016     4160    2           IF DA<FM_FRZERO
     1017     4161    2           THEN                            /* HIT BOF                            */
     1018     4162    3           DO;
     1019     4163    3              B$JIT.ERR=ERRBOF;
     1020     4164    3              GOTO ERR;
     1021     4165    3              END;
     1022     4166    2   READ:   CALL FMD$REDBUF(BUF$,1,DA,0,0) ALTRET(ERR);
     1023     4167    2           LSTSEG=FM$GRAN.NAVX+FM$GRAN.AVAIL;
     1024     4168    2           RETURN;
     1025     4169    2   END FLINK;
     1026     4170        %EJECT;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:34   
     1027     4171        /*F*   NAME:   NXTSEG
     1028     4172        *      PURPOSE:  Find the next segment entry in either the
     1029     4173        *                forward or reverse direction                                */
     1030     4174                                                /*                                    */
     1031     4175                                                /*                                    */
     1032     4176                                                /*                                    */
     1033     4177        /*D*   NAME:   NXTSEG
     1034     4178        *      ENTRY:  NXTSEGR
     1035     4179        *      CALL:   CALL NXTSEG ALTRET(LOC);
     1036     4180        *      INPUT:  CRECX - Current displacement into buffer
     1037     4181        *              BUF$ - Pointer to current buffer
     1038     4182        *              LSTSEG - Index to last segment entry in buffer
     1039     4183        *      OUTPUT: CRECX, BUF$, LSTSEG modified as necessary
     1040     4184        *              SEG$ - Pointer to next segment entry
     1041     4185        *      DESCRIPTION:                                                          */
     1042     4186                                                /*                                    */
     1043     4187    1   NXTSEG: PROC ALTRET;
     1044     4188    2   DCL FAK SBIN;
     1045     4189        /*D*
     1046     4190             NXTSEG:
     1047     4191        *      If CRECX is greater than 1024, set it to 1024.
     1048     4192        *      Decrement CRECX to point to next segment entry.  Calculate
     1049     4193        *      SEG$.  Return if CRECX >= LSTSEG.  Otherwise no more entries
     1050     4194        *      in this granule.  Call FLINK to read forward.  Keep reading
     1051     4195        *      forward if necessary to find a granule containing a
     1052     4196        *      segment entry.                                                        */
     1053     4197                                                /*                                    */
     1054     4198    2           IF CRECX>1024 THEN CRECX=1024;
     1055     4199    2           CRECX=CRECX-1;
     1056     4200    2   NXT:    F$DCB.CRECX=CRECX;              /* REMEMBER IT IN DCB                 */
     1057     4201    2           SEG$=PINCRW(BUF$,CRECX);
     1058     4202    3           IF CRECX>=LSTSEG THEN DO;
     1059     4203    3              IF FM$CON.FAK=1 THEN
     1060     4204    3                 F$DCB.CRECNO=F$DCB.CRECNO+1;
     1061     4205    3              RETURN;
     1062     4206    3              END;
     1063     4207    2           CALL FLINK ALTRET(ERREOF);
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:35   
     1064     4208    2           CRECX=1023;
     1065     4209    2           GOTO NXT;
     1066     4210    2   ERREOF: IF B$JIT.ERR.CODE~=%E$EOF THEN GOTO ERR;
     1067     4211    2           CRECX=LSTSEG-1;                 /* POINT TO ENTRY PAST LAST           */
     1068     4212    2           F$DCB.CRECX=CRECX;
     1069     4213    2           SEG$=PINCRW(BUF$,CRECX);
     1070     4214    2           F$DCB.CRECNO=CFU$->FM$CFU.NRECS+1;
     1071     4215    2           GOTO ERR;
     1072     4216                                                /*                                    */
     1073     4217        /*D*
     1074     4218        *    NXTSEGR:
     1075     4219        *      If CRECX is less than LSTSEG-1 set it to LSTSEG-1.
     1076     4220        *      Increment CRECX to point to previous segment entry.
     1077     4221        *      Calculate SEG$.  Return if pointing to an entry, else call
     1078     4222        *      BLINK to read previous granule.  Keep reading backwards
     1079     4223        *      if necessary to find a granule containing a segment entry.            */
     1080     4224                                                /*                                    */
     1081     4225    2   NXTSEGR: ENTRY ALTRET;
     1082     4226                                                /*                                    */
     1083     4227    3           IF CRECX<LSTSEG THEN DO;
     1084     4228    3              CRECX=LSTSEG;
     1085     4229    3              FAK=1;
     1086     4230    3              END;
     1087     4231    3           ELSE DO;
     1088     4232    3              FAK=FM$CON.FAK;
     1089     4233    3              CRECX=CRECX+1;
     1090     4234    3              END;
     1091     4235    2   NXTR:   F$DCB.CRECX=CRECX;              /* UPDATE POSITION IN DCB             */
     1092     4236    2           SEG$=PINCRW(BUF$,CRECX);
     1093     4237    3           IF CRECX<1024 THEN DO;
     1094     4238    3              IF FAK=1 THEN
     1095     4239    3                 F$DCB.CRECNO=F$DCB.CRECNO-1;
     1096     4240    3              RETURN;
     1097     4241    3              END;
     1098     4242    2           CALL BLINK ALTRET(ERRBOF);
     1099     4243    2           CRECX=LSTSEG;
     1100     4244    2           GOTO NXTR;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:36   
     1101     4245    2   ERRBOF: IF B$JIT.ERR.CODE~=%E$BOF THEN GOTO ERR;
     1102     4246    2           F$DCB.CRECNO=0;
     1103     4247    2           CRECX=1024;
     1104     4248    2           F$DCB.CRECX=1024;
     1105     4249    2           F$DCB.RPOS='0'B;
     1106     4250    2           SEG$=PINCRW(BUF$,1024);
     1107     4251    2   ERR:    ALTRETURN;
     1108     4252    2   END NXTSEG;
     1109     4253        %EJECT;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:37   
     1110     4254        /*F*   NAME:   NXTREC
     1111     4255        *      PURPOSE:  FInd the beginning of the next record in the
     1112     4256        *                forward direction                                           */
     1113     4257                                                /*                                    */
     1114     4258                                                /*                                    */
     1115     4259                                                /*                                    */
     1116     4260        /*D*   NAME:   NXTREC
     1117     4261        *      CALL:   CALL NXTREC ALTRET(LOC);
     1118     4262        *      INPUT:  JDCB$ - Pointer to current DCB
     1119     4263        *              BUF$ - Pointer to current buffer
     1120     4264        *              LSTSEG - Displacement to last segment entry in buffer
     1121     4265        *      OUTPUT: BUF$, LSTSEG modified as necessary
     1122     4266        *              SEG$ - Pointer to segment entry of next record
     1123     4267        *      DESCRIPTION:  If DCB.RPOS is zero, call NXTSEG repeatedly
     1124     4268        *        until find an entry with FAK set, then return.  If RPOS is
     1125     4269        *        set, call BEGREC to find the beginning of the current record.
     1126     4270                                                                                     */
     1127     4271    1   NXTREC: PROC ALTRET;
     1128     4272                                                /*                                    */
     1129     4273    2           IF NOT F$DCB.RPOS
     1130     4274    2           THEN                  /* POINTING AT CURRENT RECORD, GO FWD TO NEXT   */
     1131     4275    3           DO;
     1132     4276    3   NXT:       CALL NXTSEG ALTRET(ERR);
     1133     4277    3              IF FM$CON.FAK=1 THEN GOTO DONE;
     1134     4278    3              GOTO NXT;
     1135     4279    3              END;
     1136     4280    2           ELSE                  /* POINTING TO NEXT RECORD - FIND ITS BEGINNING */
     1137     4281    3           DO;
     1138     4282    3              F$DCB.RPOS='0'B;             /* MAKE THIS CURRENT RECORD           */
     1139     4283    3              CALL BEGREC ALTRET(ERR);     /* FIND BEGINNING                     */
     1140     4284    3              END;
     1141     4285    2   DONE:   RETURN;
     1142     4286    2   ERR:    ALTRETURN;
     1143     4287    2   END NXTREC;
     1144     4288        %EJECT;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:38   
     1145     4289        /*F*   NAME:   BEGREC
     1146     4290        *      PURPOSE:  Find the beginning of the record currently being
     1147     4291        *                pointed to                                                  */
     1148     4292                                                /*                                    */
     1149     4293                                                /*                                    */
     1150     4294                                                /*                                    */
     1151     4295        /*D*   NAME:   BEGREC
     1152     4296        *      CALL:   CALL BEGREC ALTRET(LOC);
     1153     4297        *      INPUT:  BUF$ - Pointer to current buffer
     1154     4298        *              LSTSEG - Index to last segment entry in buffer
     1155     4299        *              DCB.CRECX - Index to current segment entry
     1156     4300        *              JDCB$ - Pointer to DCB
     1157     4301        *      OUTPUT: SEG$ - Pointer to segment entry of record located
     1158     4302        *              BUF$, LSTSEG, CRECX changed as necessary
     1159     4303        *      DESCRIPTION:                                                          */
     1160     4304                                                /*                                    */
     1161     4305    1   BEGREC: PROC ALTRET;
     1162     4306        /* LOCAL AUTOMATIC STORAGE */
     1163     4307    2   DCL EOFHIT BIT(36);
     1164     4308                                                /*                                    */
     1165     4309    2           EOFHIT='0'B;                    /* NO EOF YET                         */
     1166     4310        /*D*
     1167     4311        *      If CRECX does not point to a segment entry, call NXTSEG
     1168     4312        *      to move forward to find the next one.  If hit end-of-file,
     1169     4313        *      remember the fact.                                                    */
     1170     4314    3           IF CRECX<LSTSEG THEN DO;
     1171     4315    3              CALL NXTSEG ALTRET(NXTERR);
     1172     4316    3              GOTO GOTIT;
     1173     4317    3   NXTERR:    IF B$JIT.ERR.CODE~=%E$EOF THEN ALTRETURN;
     1174     4318    3              IF F$DCB.RPOS
     1175     4319    3              THEN               /* REALLY WANT PREV KEY - IGNORE EOF FOR NOW    */
     1176     4320    4              DO;
     1177     4321    4                 EOFHIT=B$JIT.ERR;         /* REMEMBER EOF ERROR                 */
     1178     4322    4                 GOTO BACK;                /* BACK UP                            */
     1179     4323    4                 END;
     1180     4324    3              ALTRETURN;
     1181     4325    3              END;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:39   
     1182     4326    3           ELSE IF CRECX >= 1024 THEN DO;
     1183     4327    3              SEG$=PINCRW(BUF$, 1023);
     1184     4328    3              CALL BACKUP ALTRET(ERR);
     1185     4329    3              END;
     1186     4330        /*D*
     1187     4331        *      If segment entry being pointed to does not have FAK set,
     1188     4332        *      call BACKUP to back up to one that does.                              */
     1189     4333    2   GOTIT:  IF FM$CON.FAK=0 THEN CALL BACKUP ALTRET(ERR);
     1190     4334        /*D*
     1191     4335        *      If DCB.RPOS is zero return, since pointing to current record.         */
     1192     4336    2           IF NOT F$DCB.RPOS THEN RETURN;
     1193     4337        /*D*
     1194     4338        *      Must back up to beginning of previous record.  Reset DCB.RPOS
     1195     4339        *      and call BACKUP.  If hit BOF, and previously hit EOF, file
     1196     4340        *      must be empty.  Change error to EOF and exit.                         */
     1197     4341    2   BACK:   F$DCB.RPOS='0'B;
     1198     4342    2           CALL BACKUP ALTRET(BCKERR);
     1199     4343    2           RETURN;
     1200     4344                                                /*                                    */
     1201     4345    2   BCKERR: IF B$JIT.ERR.CODE~=%E$BOF THEN ALTRETURN;
     1202     4346    2           IF EOFHIT~='0'B
     1203     4347    2           THEN
     1204     4348    3           DO;
     1205     4349    3              B$JIT.ERR=EOFHIT;
     1206     4350    3              CRECX=1023;        /* EMPTY FILE - POINT TO FIRST CTL POSITION     */
     1207     4351    3              F$DCB.CRECX=1023;
     1208     4352    3              SEG$=PINCRW(BUF$,CRECX);
     1209     4353    3              END;
     1210     4354    2   ERR:    ALTRETURN;
     1211     4355        /* */
     1212     4356    2   BACKUP: PROC ALTRET;
     1213     4357    3   BACK2:  CALL NXTSEGR ALTRET(ERR);
     1214     4358    3           IF FM$CON.FAK=0 THEN GOTO BACK2;
     1215     4359    3           RETURN;
     1216     4360    3   ERR:    ALTRETURN;
     1217     4361    3   END BACKUP;
     1218     4362    2   END BEGREC;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:40   
     1219     4363                                                /*                                    */
     1220     4364    1   SETUP:  PROC ALTRET;
     1221     4365    2           IF F$DCB.ACS=%JRNL# THEN
     1222     4366    2           CALL FMH$MAPJRNL(1);
     1223     4367    3           IF F$DCB.BFR.BUFX(1)=0 THEN DO;
     1224     4368    3              DA=F$DCB.BFR.DA(1);
     1225     4369    3              CALL FMD$REDBUF(BUF$,1,DA,0,0) ALTRET(ERR); /* GET CURRENT GRAN    */
     1226     4370    3              END;
     1227     4371    2           ELSE
     1228     4372    2              BUF$=FM$BUF$(F$DCB.BFR.BUFX(1));
     1229     4373    2           LSTSEG=FM$GRAN.NAVX+FM$GRAN.AVAIL; /* LAST CTL WD                     */
     1230     4374    2           IF F$DCB.ACS=%JRNL# THEN
     1231     4375    2              F$DCB.CRECX=LSTSEG;          /* POINT TO END                       */
     1232     4376    2           CRECX=F$DCB.CRECX;              /* DISPL TO CURRENT RECORD            */
     1233     4377    2           SEG$=PINCRW(BUF$,CRECX);
     1234     4378    2           RETURN;
     1235     4379    2   ERR:    ALTRETURN;
     1236     4380    2   END SETUP;
     1237     4381        /**/
     1238     4382        %EJECT;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:41   
     1239     4383        /**/
     1240     4384        /* Handle UBLOCK writes */
     1241     4385        /**/
     1242     4386    1   FMH$UBLOCK: ENTRY(FPTCODE,PARMFPT,VFC) ALTRET;
     1243     4387        /**/
     1244     4388    1           FPT$=ADDR(PARMFPT);
     1245     4389    1           JDCB$=B$JIT.DCB$;
     1246     4390    1           CFU$=F$DCB.CFU$;
     1247     4391    2           DO CASE(FPTCODE);
     1248     4392    2            CASE(FPTREAD);
     1249     4393    2              CALL FMI$RAN(FPTCODE) ALTRET(ERR);
     1250     4394    2              RETURN;
     1251     4395    2            CASE(FPTWRITE);
     1252     4396    2            CASE(ELSE);
     1253     4397    2              GOTO UBLKERR;
     1254     4398    2            END;
     1255     4399    2           IF F$DCB.UBYTES=0 OR MOD(F$DCB.UBYTES,4096)~=0 THEN DO;
     1256     4400    2   UBLKERR:   CALL FMD$RELBUF(1);
     1257     4401    2              B$JIT.ERR=ERRUBLOCK;
     1258     4402    2              GOTO ERR;
     1259     4403    2              END;
     1260     4404        /*E*    ERROR: FMH-E$UBLOCK-2
     1261     4405                MESSAGE: Misuse of ACS=UBLOCK% on %UF%
     1262     4406        */
     1263     4407        /**/
     1264     4408    1           CALL HFF$NILERASE(1) ALTRET(NOKEY);
     1265     4409    1           ADDR(F$DCB.CRECNO)->CHAR4=B$PS1$->CHAR4;
     1266     4410        /**/
     1267     4411    1   NOKEY:  ;
     1268     4412    1           IF F$DCB.CRECNO<FM$CFU.UGRANS-1 OR F$DCB.CRECNO>FM$CFU.UGRANS THEN
     1269     4413    1              GOTO UBLKERR;
     1270     4414        /**/
     1271     4415    2           DO WHILE(F$DCB.UBYTES>0);
     1272     4416    2              CALL FMD$GETBUF(1,1,BUF$);
     1273     4417    2              BUF$->PAGE=F$DCB.UB$->PAGE;
     1274     4418        /**/
     1275     4419    2              IF F$DCB.SPAN THEN           /* Last write was of last gran        */
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:42   
     1276     4420    2                 IF F$DCB.CRECNO=FM$CFU.UGRANS THEN
     1277     4421    2                    GOTO UBLKERR;
     1278     4422    2              F$DCB.SPAN=~FM$GRAN.NOTLDA;
     1279     4423    2              F$DCB.UB$=PINCRW(F$DCB.UB$,1024);
     1280     4424    2              F$DCB.UBYTES=F$DCB.UBYTES-4096;
     1281     4425    2              DA=F$DCB.CRECNO+FM_FRZERO;
     1282     4426    2              F$DCB.BFR.DA(1)=DA;
     1283     4427    2              FM$GRAN.STAMP.HASH=F$DCB.HASH;
     1284     4428    2              FM$GRAN.STAMP.GMOD=DA;
     1285     4429    2              FM$GRAN.ORG=F$DCB.ORG;
     1286     4430    2              FM$GRAN.LVL=0;
     1287     4431    2              IF FM$GRAN.NAVX<3 OR FM$GRAN.NAVX+FM$GRAN.AVAIL>1024 THEN
     1288     4432    2                 GOTO UBLKERR;
     1289     4433    2              IF FM$GRAN.AVAIL>1024-3 THEN
     1290     4434    2                 GOTO UBLKERR;
     1291     4435    2              CRECX=1023;
     1292     4436    2              SEG$=PINCRW(BUF$,1023);
     1293     4437    2              GX=3;
     1294     4438    2              N=0;
     1295     4439    3              DO WHILE(CRECX>=FM$GRAN.AVAIL+FM$GRAN.NAVX);
     1296     4440    4                 IF FM$CON.FAK~=0 THEN DO;
     1297     4441    4                    N=N+1;
     1298     4442    4                    F$DCB.RCSZ=0;
     1299     4443    4                    END;
     1300     4444    3                 IF GX~=FM$CON.GX THEN
     1301     4445    3                    GOTO UBLKERR;
     1302     4446    3                 GX=GX+(FM$CON.GACTB+3)/4;
     1303     4447    3                 F$DCB.RCSZ=F$DCB.RCSZ+FM$CON.GACTB;
     1304     4448    3                 IF F$DCB.RCSZ/4096 > FM$CFU.RCSZ THEN
     1305     4449    3                    FM$CFU.RCSZ=F$DCB.RCSZ/4096;
     1306     4450    3                 CRECX=CRECX-1;
     1307     4451    3                 SEG$=PINCRW(BUF$,CRECX);
     1308     4452    3                 END;
     1309     4453    2              IF GX~=CRECX-FM$GRAN.AVAIL+1 THEN
     1310     4454    2                 GOTO UBLKERR;
     1311     4455    2              IF F$DCB.CRECNO=FM$CFU.UGRANS THEN
     1312     4456    2              CALL FAF$GETGRAN(DA) ALTRET(UERR);
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:43   
     1313     4457    2              ELSE
     1314     4458    2                 FM$CFU.NRECS=FM$CFU.NRECS-F$DCB.GDISP;
     1315     4459    2              FM$CFU.NRECS=FM$CFU.NRECS+N;
     1316     4460    2              F$DCB.NRECS=FM$CFU.NRECS;
     1317     4461    2              IF DA>FM$CFU.LDA THEN
     1318     4462    2                 FM$CFU.LDA=DA;
     1319     4463    2              F$DCB.GDISP=N;
     1320     4464    2              FM$CFU.FMOD='1'B;
     1321     4465    2              CALL FMD$WRTBUF(1);
     1322     4466    2              F$DCB.CRECNO=F$DCB.CRECNO+1;
     1323     4467    2              END;
     1324     4468        /**/
     1325     4469    1           CALL FMD$RELBUF(1);
     1326     4470    1           RETURN;
     1327     4471        /**/
     1328     4472    1   UERR:   ;
     1329     4473    1           GOTO ERR;
     1330     4474        /**/
     1331     4475        /**/
     1332     4476    1   FMH$UBLKCLS: ENTRY ALTRET;
     1333     4477        /**/
     1334     4478    1           JDCB$=B$JIT.DCB$;
     1335     4479    1           IF F$DCB.SPAN THEN
     1336     4480    1              RETURN;
     1337     4481    1           CFU$=F$DCB.CFU$;
     1338     4482    1           IF FM$CFU.UGRANS=0 THEN
     1339     4483    1              ALTRETURN;                   /* Nothing ever written               */
     1340     4484    1           DA=FM$CFU.LDA;
     1341     4485    1           CALL FMD$REDBUF(BUF$,1,DA) ALTRET(ERR);
     1342     4486    1           FM$GRAN.NOTLDA='0'B;
     1343     4487    1           CALL FMD$WRTBUF(1);
     1344     4488    1           RETURN;
     1345     4489    1   END FMH$CPMME;
     1346     4490        %EOD;

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:44   
--  Include file information  --

   B_MAGIC_C.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   UD_ERRORS_C.:E05TOU  is referenced.
   B$SS.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   F_FPTCODE_C.:E05TOU  is referenced.
   F$CP6V_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   FM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   N_FC_C.:E05TOU  is referenced.
   FM$MACROS.:E05TOU  is referenced.
   F$DCB.:E05TOU  is referenced.
   NK_URTBL_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   B$TABLES_C.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMH$CPMME.

   Procedure FMH$CPMME requires 2348 words for executable code.
   Procedure FMH$CPMME requires 46 words of local(AUTO) storage.

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:45   

 Object Unit name= FMH$CPMME                                  File name= FMH$CONSEC.:E05TOU
 UTS= JUL 29 '97 16:47:21.16 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS     18     22  FMH$CPMME
    1   Proc  even  none  2348   4454  FMH$CPMME
    2  RoData even  none    32     40  FMH$CPMME

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        3  FMH$CPMME
     1   2365          yes     yes      Std        0  FMH$LOOKAHD
     1   2413          yes     yes      Std        0  FMH$TRUNC
     1   2445          yes     yes      Std        3  FMH$SYMB
     1   3203          yes     yes      Std        3  FMH$SYMB_FINISH
     1   3257          yes     yes      Std        1  FMH$PREC
     1   4015          yes     yes      Std        3  FMH$UBLOCK
     1   4404          yes     yes      Std        0  FMH$UBLKCLS
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:46   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 B_POINTER
 yes     yes           Std       8 FMD$RECTRAN
 yes     yes           Std       9 FMB$QUEUE
         yes           Std       0 FMB$IOSPIN
 yes     yes           Std       2 FMO$LOCCODP
         yes           Std       1 FMD$WRTSV
 yes     yes           Std       1 FAF$GETGRAN
         yes           Std       1 FMD$FLSHBUFNR
         yes           Std       1 FMD$RELBUF
         yes           Std       2 FMH$MAPJRNL
         yes           Std       1 FMD$WRTBUF
         yes           Std       1 FMD$FLSHBUF
 yes     yes           Std       1 FMI$RAN
 yes     yes           Std       1 HFF$NILERASE
         yes           Std      11 FMB$LOGERR
         yes           Std       3 FMD$GETBUF
         yes           Std       1 FMC$CLR1
 yes     yes           Std       2 FMN$GETFIT
 yes     yes           Std       1 FSE$GETGRAN
         yes           Std       1 MMJ$GIOP
 yes     yes           Std       6 FMD$REDBUF
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_3
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:47   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SC_FMH99                         r    B$JIT$                           r    B$XL_MOD_256$
r    B$XL_UR$                         r    B$XL_UPPER_UR$                   r    B$XL_LOWER_UR$
     FM$BUF$                          r    B$PS1$                           r    NK_NATLTBL
r    FM_FRZERO                        r    FM_EOP                                B_MPT
     S$CU$                                 B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ASLENTSID                             ISSID
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:48   


        1        1        /*M*   FMH$CONSEC - Consec disk file PMME processing */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /**/
        8        8        /*X* DDA */
        9        9        /**/
       10       10        /**/
       11       11        /*P*   NAME:   FMH$CONSEC
       12       12               PURPOSE:  Provide M$READ, M$WRITE, M$DELREC, M$PRECORD
       13       13                         and M$PFIL services for consecutive files.
       14       14
       15       15               DESCRIPTION:
       16       16
       17       17                 The following cells are used in this module:
       18       18
       19       19                   JDCB$ - Pointer to current DCB
       20       20                   CFU$ -  Pointer to CFU for current DCB
       21       21                   BUF$ -  Pointer to current pool buffer
       22       22                   SEG$ -  Pointer to current segment entry in buffer
       23       23                   CRECX - Index to current segment entry, same as DCB.CRECX
       24       24                   LSTSEG - Index to last entry in buffer
       25       25                   DCB.RPOS - Reset if DCB.CRECX points to a segment entry
       26       26                              belonging to the current record, set if it
       27       27                              belongs to the next record
       28       28                   DCB.BFR.DA(1) - Disk address of the current granule.  Always
       29       29                                   meaningful, even if there currently is
       30       30                                   no buffer.
       31       31
       32       32                 Consecutive file granule format is as follows:
       33       33             o     A three word header consisting of the stamp in word zero,
       34       34                     NAVX, LVL, ORG and AVAIL in word one, and NOTLDA in
       35       35                     word two.  NOTLAST is a flag that is set if this is
       36       36                     not the last granule in the file, and is used for
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:49   
       37       37                     reconstructing files that were not closed.
       38       38             o     The first segment entry is in word 1023, the last is in
       39       39                     word NAVX+AVAIL.  The data for the first segment entry
       40       40                     begins in word 3.  The data for subsequent segment entries
       41       41                     follows, always beginning on a word boundary.  NAVX
       42       42                     points to the word following the last used data word.
       43       43                     AVAIL is the number of unused words from the end of the
       44       44                     last data to the beginning of the segment entries.
       45       45
       46       46             o     Segment entries have two flags, FAK and C.  FAK is set in
       47       47                     the first control word of a record.  C is set if a
       48       48                     record is continued into the next control word.  Note
       49       49                     that some types of errors during writing can cause a
       50       50                     SEGMENT ENTRY WITH C SET TO BE FOLLOWED BY AN ENTRY WITH
       51       51                     FAK set.  Therefore C is not a sufficient condition to
       52       52                     indicate continuation.  Records are deleted by reseting
       53       53                     both FAK and C and setting GACTB to zero.
       54       54
       55       55             o     Records may be rewritten by setting the REWRITE option in
       56       56                     the M$WRITE FPT.  The previous operation must have been
       57       57                     a successful M$READ or M$PRECORD, and the record read
       58       58                     or positioned to will be rewritten.  If the byte count
       59       59                     on the write is not identical to the original size of
       60       60                     the record, a lost data error will be given.
       61       61
       62       62             o     An M$WRITE without the REWRITE option issued when not at
       63       63                     end-of-file will cause all records from the current position
       64       64                     to the end of the file to be deleted.
       65       65                                                                                     */
       66       66        %EJECT;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:50   
       67       67        FMH$CPMME: PROC(FPTCODE,PARMFPT,VFC) ALTRET;

     67  1 000000   000000 700200 xent  FMH$CPMME    TSX0  ! X66_AUTO_3
         1 000001   000056 000003                    ZERO    46,3

       68       68        /* PARAMETERS */
       69       69    1   DCL FPTCODE SBIN;
       70       70    1   DCL PARMFPT UBIN;
       71       71    1   DCL VFC CHAR(1) UNAL;
       72       72        /* LOCAL AUTOMATIC STORAGE */
       73       73    1   DCL JDCB$ PTR;
       74       74    1   DCL CFU$ PTR;
       75       75    1   DCL BUF$ PTR;
       76       76    1   DCL SEG$ PTR;
       77       77    1   DCL LSTSEG SBIN;
       78       78    1   DCL CRECX SBIN;
       79       79    1   DCL DA SBIN;
       80       80    1   DCL GBYTES UBIN;
       81       81    1   DCL GX UBIN;
       82       82    1   DCL G$ PTR;
       83       83    1   DCL FAK SBIN;
       84       84    1   DCL WRDS SBIN;
       85       85    1   DCL BUFNUM REDEF WRDS UBIN(36);
       86       86    1   DCL N SBIN;
       87       87    1   DCL I SBIN;
       88       88    1   DCL EOP SBIN;
       89       89    1   DCL CONT BIT(1);
       90       90    1   DCL FPT$ PTR;
       91       91    1   DCL GRANS SBIN;
       92       92        /* EXTERNAL DATA */
       93       93    1   DCL B$JIT$ PTR SYMREF READONLY;
       94       94        %INCLUDE B$TABLES_C;
       95      202        %B$XL_MOD_256;
       96      206        %B$XL_UR;
       97      210        %B$XL_UPPER_UR;
       98      214        %B$XL_LOWER_UR;
       99      218    1   DCL FM$BUF$(0:0) PTR SYMREF;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:51   
      100      219    1   DCL B$PS0$ PTR SYMREF READONLY;
      101      220    1   DCL B$PS1$ PTR SYMREF READONLY;
      102      221    1   DCL B$PS2$ PTR SYMREF READONLY;
      103      222    1   DCL B$PS3$ PTR SYMREF READONLY;
      104      223    1   DCL B$ROSEG$ PTR SYMREF READONLY;
      105      224        /* INCLUDE FILES */
      106      225        %INCLUDE B$JIT;
      107      828        %INCLUDE NK_URTBL_R;
      108      837        %MACRO F$DCBMAC(BASED=BASED);
      109      838        %INCLUDE F$DCB;
      110      887        %MEND;
      111      888        %INCLUDE FM$MACROS;
      112     1263        %INCLUDE N_FC_C;
      113     1300        %INCLUDE FM_DATA_R;
      114     1314        %INCLUDE F_ERRORS_C;
      115     1554        %INCLUDE F$CP6V_C;
      116     1780        %INCLUDE F_FPTCODE_C;
      117     1816        %INCLUDE CP_6_SUBS;
      118     2356        %INCLUDE B$SS;
      119     2535        %INCLUDE UD_ERRORS_C;
      120     2577        %INCLUDE B$USER;
      121     2793        %INCLUDE B_STRINGS_C;
      122     2922        %INCLUDE B_MAGIC_C;
      123     3040        /* BASED STRUCTURES */
      124     3041        %FPT$READ_V (BASED="BASED(FPT$)");
      125     3048        %FPT$PFIL_V (BASED="BASED(FPT$)");
      126     3051        %FPT$PRECORD_V (BASED="BASED(FPT$)");
      127     3056        %FPT$WRITE_V (BASED="BASED(FPT$)");
      128     3062        %FPT$DELREC_V (BASED="BASED(FPT$)");
      129     3066        %F$DCBMAC (BASED="BASED(JDCB$)");
      130     3116        %FM$CFU (BASED="BASED(CFU$)");
      131     3122        %FM$CFUJ (BASED="BASED(CFU$)");
      132     3127        %FM$CON (BASED="BASED(SEG$)");
      133     3131        %FM$GRAN (BASED="BASED(BUF$)",ENDLVL=NOTLDA);
      134     3135        %CODE03;
      135     3142        %B_MPT(FPTN=B_MPT, STCLASS=SYMREF);
      136     3235        %B$USERREFS;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:52   
      137     3239    1   DCL CHAR1 CHAR(1) BASED;
      138     3240    1   DCL UBIN36 UBIN(36) CALIGNED BASED;
      139     3241    1   DCL CHAR4 CHAR(4) BASED;
      140     3242    1   DCL CHARS CHAR(N) BASED;
      141     3243    1   DCL PAGE(0:1023) UBIN BASED ALIGNED;
      142     3244        /* EXTERNAL ROUTINES */
      143     3245    1   DCL FMD$REDBUF ENTRY(6) ALTRET;
      144     3246    1   DCL FMD$GETBUF ENTRY(3);
      145     3247    1   DCL FMD$RELBUF ENTRY(1);
      146     3248    1   DCL FMD$WRTBUF ENTRY(1);
      147     3249    1   DCL FMD$WRTSV ENTRY(1);
      148     3250    1   DCL FMD$FLSHBUF ENTRY(1);
      149     3251    1   DCL FMD$FLSHBUFNR ENTRY(1);
      150     3252    1   DCL FMD$RECTRAN ENTRY(8) ALTRET;
      151     3253    1   DCL FAF$GETGRAN ENTRY(1) ALTRET;
      152     3254    1   DCL FAF$FRTOSR ENTRY(3) ALTRET;
      153     3255    1   DCL FMC$CLR1 ENTRY(1);
      154     3256    1   DCL FMH$MAPJRNL ENTRY(2);
      155     3257    1   DCL FMI$RAN ENTRY(1) ALTRET;
      156     3258    1   DCL FMB$LOGERR ENTRY(11);
      157     3259    1   DCL FMN$GETFIT ENTRY(2)ALTRET;
      158     3260    1   DCL FMO$LOCCODP ENTRY(2) ALTRET;
      159     3261    1   DCL FMB$IOSPIN ENTRY;
      160     3262    1   DCL FMB$QUEUE ENTRY(9) ALTRET;
      161     3263    1   DCL FSE$GETGRAN ENTRY(1) ALTRET;
      162     3264    1   DCL SC_FMH99 ENTRY CONV(2,0);
      163     3265    1   DCL HFF$NILERASE ENTRY(1) ALTRET;
      164     3266    1   DCL MMJ$GIOP ENTRY(1);
      165     3267    1   DCL HFF$DSIZ ENTRY(2) ALTRET;
      166     3268        /* CONSTANT DATA */
      167     3269        %SUB FCG#='0615'O;
      168     3270        %SUB MID#='10'O;
      169     3271        %ERRCODE (NAME=ERRRWLD,COD#=%E$LD);
      170     3275        %ERRCODE (NAME=ERRLD,COD#=%E$LD,MID#='06'O); /* Use FMFs message for reads */
      171     3279        %ERRCODE (NAME=ERRFREC,COD#=%E$FREC);
      172     3283        %ERRCODE (NAME=ERRFIT,COD#=%E$FIT);
      173     3287        %ERRCODE (NAME=ERRWRDEL,COD#=%E$WRDEL);
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:53   
      174     3291        %ERRCODE (NAME=ERREOF,COD#=%E$EOF);
      175     3295        %ERRCODE (NAME=ERRBOF,COD#=%E$BOF);
      176     3299        %ERRCODE (NAME=ERRNOCONT,COD#=%E$NOCONT);
      177     3303        %ERRCODE (NAME=ERRDELFWD,COD#=%E$DELFWD);
      178     3307        %ERRCODE (NAME=ERRREWRITE,COD#=%E$REWRITE);
      179     3311        %ERRCODE (NAME=ERRCONCOMP,COD#=%E$CONCOMP);
      180     3315        %ERRCODE (NAME=ERRUBLOCK,COD#=%E$UBLOCK);
      181     3319        %ERRCODE (NAME=ERRWRITNEW,COD#=%E$WRITNEW);
      182     3323        %ERRCODE (NAME=ERRPMMEINT, COD#=%E$PMMEINT);
      183     3327    1   DCL DUMMYFPT(0:3) UBIN CONSTANT INIT(0*0);
      184     3328        /**/
      185     3329    1           FPT$=ADDR(PARMFPT);

   3329  1 000002   200004 236100                    LDQ     @PARMFPT,,AUTO
         1 000003   200026 756100                    STQ     FPT$,,AUTO

      186     3330        /**/
      187     3331    1   CPMME:  JDCB$=B$JIT.DCB$;               /* POINTER TO DCB                     */

   3331  1 000004   000000 470400 xsym  CPMME        LDP0    B$JIT$
         1 000005   000232 236100                    LDQ     154,,PR0
         1 000006   200006 756100                    STQ     JDCB$,,AUTO

      188     3332    1           CFU$=F$DCB.CFU$;                /* POINTER TO CURRENT CFU             */

   3332  1 000007   200006 471500                    LDP1    JDCB$,,AUTO
         1 000010   100066 236100                    LDQ     54,,PR1
         1 000011   200007 756100                    STQ     CFU$,,AUTO

      189     3333    1           EOP=F$DCB.EOP;                  /* PREVIOUS OPERATION                 */

   3333  1 000012   100064 236100                    LDQ     52,,PR1
         1 000013   000033 772000                    QRL     27
         1 000014   000003 376007                    ANQ     3,DL
         1 000015   200024 756100                    STQ     EOP,,AUTO

      190     3334    1           F$DCB.EOP=0;                    /* CLEAR IN CASE OF ERROR             */
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:54   

   3334  1 000016   000000 236000 2                  LDQ     0
         1 000017   100064 356100                    ANSQ    52,,PR1

      191     3335    1           CONT=F$DCB.CONT;                /* SAVE CONTINUE FLAG                 */

   3335  1 000020   100064 236100                    LDQ     52,,PR1
         1 000021   000036 736000                    QLS     30
         1 000022   400000 376003                    ANQ     -131072,DU
         1 000023   200025 756100                    STQ     CONT,,AUTO

      192     3336    1           F$DCB.CONT='0'B;

   3336  1 000024   000001 236000 2                  LDQ     1
         1 000025   100064 356100                    ANSQ    52,,PR1

      193     3337    1           FAK=1;                          /* SET FOR INITIAL SEGMENT            */

   3337  1 000026   000001 235007                    LDA     1,DL
         1 000027   200020 755100                    STA     FAK,,AUTO

      194     3338                                                /*                                    */
      195     3339    2           DO CASE(FPTCODE);

   3339  1 000030   200003 473500                    LDP3    @FPTCODE,,AUTO
         1 000031   300000 235100                    LDA     0,,PR3
         1 000032   000016 115007                    CMPA    14,DL
         1 000033   000035 602005 1                  TNC     s:3339+5,AL
         1 000034   002042 710000 1                  TRA     s:3741
         1 000035   000053 710000 1                  TRA     s:3344
         1 000036   000416 710000 1                  TRA     s:3454
         1 000037   002007 710000 1                  TRA     s:3723
         1 000040   001632 710000 1                  TRA     s:3671
         1 000041   002051 710000 1                  TRA     s:3752
         1 000042   002042 710000 1                  TRA     s:3741
         1 000043   002063 710000 1                  TRA     s:3765
         1 000044   000363 710000 1                  TRA     WEOF
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:55   
         1 000045   002050 710000 1                  TRA     s:3747
         1 000046   002042 710000 1                  TRA     s:3741
         1 000047   000416 710000 1                  TRA     s:3454
         1 000050   000416 710000 1                  TRA     s:3454
         1 000051   002042 710000 1                  TRA     s:3741
         1 000052   000416 710000 1                  TRA     s:3454

      196     3340        /****************************/
      197     3341        /********  M$READ  **********/
      198     3342        /****************************/
      199     3343    2            CASE(FPTREAD);                 /* M$READ                             */

      200     3344    2              CALL SETUP ALTRET(ERR);

   3344  1 000053   003720 701000 1                  TSX1    SETUP
         1 000054   002153 702000 1                  TSX2    ERR

      201     3345    3              IF FPT$READ_V.DVBYTE.CONT THEN DO; /* Continue                     */

   3345  1 000055   200026 470500                    LDP0    FPT$,,AUTO
         1 000056   000003 430100                    FSZN    3,,PR0
         1 000057   000207 605000 1                  TPL     s:3372

      202     3346    3                 IF EOP~=1 OR F$DCB.COMP OR FPT$WRITE_V.SEED~='0'B OR F$DCB.SEED

   3346  1 000060   200024 235100                    LDA     EOP,,AUTO
         1 000061   000001 115007                    CMPA    1,DL
         1 000062   002233 601000 1                  TNZ     NOCONT
         1 000063   200006 471500                    LDP1    JDCB$,,AUTO
         1 000064   100031 236100                    LDQ     25,,PR1
         1 000065   000100 316007                    CANQ    64,DL
         1 000066   002233 601000 1                  TNZ     NOCONT
         1 000067   000002 235100                    LDA     2,,PR0
         1 000070   002233 601000 1                  TNZ     NOCONT
         1 000071   100062 235100                    LDA     50,,PR1
         1 000072   002233 601000 1                  TNZ     NOCONT
         1 000073   100032 236100                    LDQ     26,,PR1
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:56   
         1 000074   777000 376003                    ANQ     -512,DU
         1 000075   011000 116003                    CMPQ    4608,DU
         1 000076   002233 600000 1                  TZE     NOCONT

      203     3347    3                   OR F$DCB.ORG=%SYMB# THEN GOTO NOCONT;
      204     3348    3                 IF F$DCB.RPOS OR CRECX<LSTSEG

   3348  1 000077   100064 236100                    LDQ     52,,PR1
         1 000100   010000 316007                    CANQ    4096,DL
         1 000101   002064 601000 1                  TNZ     SETEOP
         1 000102   200013 236100                    LDQ     CRECX,,AUTO
         1 000103   200012 116100                    CMPQ    LSTSEG,,AUTO
         1 000104   002064 604000 1                  TMI     SETEOP

      205     3349    3                 THEN GOTO SETEOP;
      206     3350    3                 IF F$DCB.GDISP=FM$CON.GACTB AND

   3350  1 000105   200011 473500                    LDP3    SEG$,,AUTO
         1 000106   300000 236100                    LDQ     0,,PR3
         1 000107   007777 376007                    ANQ     4095,DL
         1 000110   100101 116100                    CMPQ    65,,PR1
         1 000111   000115 601000 1                  TNZ     s:3353
         1 000112   300000 236100                    LDQ     0,,PR3
         1 000113   200000 316003                    CANQ    65536,DU
         1 000114   002064 600000 1                  TZE     SETEOP

      207     3351    3                   FM$CON.C=0
      208     3352    3                 THEN GOTO SETEOP;
      209     3353    3                 GBYTES=FM$CON.GACTB-F$DCB.GDISP; /* Space left in seg           */

   3353  1 000115   300000 236100                    LDQ     0,,PR3
         1 000116   007777 376007                    ANQ     4095,DL
         1 000117   100101 136100                    SBLQ    65,,PR1
         1 000120   200015 756100                    STQ     GBYTES,,AUTO

      210     3354    3                 GX=FM$CON.GX;

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:57   
   3354  1 000121   300000 236100                    LDQ     0,,PR3
         1 000122   000014 772000                    QRL     12
         1 000123   001777 376007                    ANQ     1023,DL
         1 000124   200016 756100                    STQ     GX,,AUTO

      211     3355    3                 G$=PINCRW(BUF$,GX);

   3355  1 000125   000022 736000                    QLS     18
         1 000126   200010 036100                    ADLQ    BUF$,,AUTO
         1 000127   200017 756100                    STQ     G$,,AUTO

      212     3356    3                 IF GX+(FM$CON.GACTB+3)/4>FM$GRAN.NAVX THEN

   3356  1 000130   300000 236100                    LDQ     0,,PR3
         1 000131   007777 376007                    ANQ     4095,DL
         1 000132   000003 036007                    ADLQ    3,DL
         1 000133   000002 772000                    QRL     2
         1 000134   200016 036100                    ADLQ    GX,,AUTO
         1 000135   200046 756100                    STQ     DIR+2,,AUTO
         1 000136   200010 474500                    LDP4    BUF$,,AUTO
         1 000137   400001 236100                    LDQ     1,,PR4
         1 000140   000022 772000                    QRL     18
         1 000141   200046 116100                    CMPQ    DIR+2,,AUTO
         1 000142   002176 602000 1                  TNC     SEGERR

      213     3357    3                    GOTO SEGERR;
      214     3358    3                 N=GBYTES;

   3358  1 000143   200015 235100                    LDA     GBYTES,,AUTO
         1 000144   200022 755100                    STA     N,,AUTO

      215     3359    3                 IF N>F$DCB.UBYTES THEN    /* Limit xfer to user buffer          */

   3359  1 000145   100076 236100                    LDQ     62,,PR1
         1 000146   000152 604000 1                  TMI     s:3361
         1 000147   200022 116100                    CMPQ    N,,AUTO
         1 000150   000152 605000 1                  TPL     s:3361
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:58   

      216     3360    3                    N=F$DCB.UBYTES;

   3360  1 000151   200022 756100                    STQ     N,,AUTO

      217     3361    3                 F$DCB.UB$->CHARS=SUBSTR(G$->CHAR1,F$DCB.GDISP,N);

   3361  1 000152   100075 475500                    LDP5    61,,PR1
         1 000153   100101 235100                    LDA     65,,PR1
         1 000154   200017 476500                    LDP6    G$,,AUTO
         1 000155   200022 720100                    LXL0    N,,AUTO
         1 000156   040140 100545                    MLR     fill='040'O
         1 000157   600000 000010                    ADSC9   0,A,PR6                  cn=0,n=*X0
         1 000160   500000 000010                    ADSC9   0,,PR5                   cn=0,n=*X0

      218     3362    3                 F$DCB.GDISP=F$DCB.GDISP+N;

   3362  1 000161   100101 236100                    LDQ     65,,PR1
         1 000162   200022 036100                    ADLQ    N,,AUTO
         1 000163   100101 756100                    STQ     65,,PR1

      219     3363    3                 F$DCB.ARS=F$DCB.ARS+N;

   3363  1 000164   100000 236100                    LDQ     0,,PR1
         1 000165   200022 036100                    ADLQ    N,,AUTO
         1 000166   100000 756100                    STQ     0,,PR1

      220     3364    3                 F$DCB.UBYTES=F$DCB.UBYTES-N;

   3364  1 000167   100076 236100                    LDQ     62,,PR1
         1 000170   200022 136100                    SBLQ    N,,AUTO
         1 000171   100076 756100                    STQ     62,,PR1

      221     3365    3                 F$DCB.UB$=PINCRC(F$DCB.UB$,N);

   3365  1 000172   100075 474500                    LDP4    61,,PR1
         1 000173   200022 236100                    LDQ     N,,AUTO
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:59   
         1 000174   000011 402007                    MPY     9,DL
         1 000175   000000 116003                    CMPQ    0,DU
         1 000176   000200 605000 1                  TPL     s:3365+6
         1 000177   000044 036003                    ADLQ    36,DU
         1 000200   400000 503506                    ABD     0,QL,PR4
         1 000201   100075 454500                    STP4    61,,PR1

      222     3366    3                 IF GBYTES>N THEN

   3366  1 000202   200015 236100                    LDQ     GBYTES,,AUTO
         1 000203   002154 604000 1                  TMI     LOSTDATA
         1 000204   200022 116100                    CMPQ    N,,AUTO
         1 000205   002154 605400 1                  TPNZ    LOSTDATA

      223     3367    3                    GOTO LOSTDATA;
      224     3368    3                 GOTO READEND;

   3368  1 000206   000304 710000 1                  TRA     READEND

      225     3369    3                 END;
      226     3370    2              ELSE                         /* NORMAL READ                        */
      227     3371    3              DO;

      228     3372    3                 F$DCB.GDISP=0;

   3372  1 000207   200006 471500                    LDP1    JDCB$,,AUTO
         1 000210   100101 450100                    STZ     65,,PR1

      229     3373    3                 CALL NXTREC ALTRET(SETRPOS); /* POSITION TO NEXT RECORD         */

   3373  1 000211   003546 701000 1                  TSX1    NXTREC
         1 000212   002150 702000 1                  TSX2    SETRPOS

      230     3374    3                 IF FPT$READ_V.KEYR THEN

   3374  1 000213   200026 470500                    LDP0    FPT$,,AUTO
         1 000214   000000 236100                    LDQ     0,,PR0
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:60   
         1 000215   100000 316007                    CANQ    32768,DL
         1 000216   000224 600000 1                  TZE     READLOOP

      231     3375    3                    B$PS1$->CHAR4=ADDR(F$DCB.CRECNO)->CHAR4;

   3375  1 000217   200006 471500                    LDP1    JDCB$,,AUTO
         1 000220   000000 473400 xsym               LDP3    B$PS1$
         1 000221   040100 100500                    MLR     fill='040'O
         1 000222   100071 000004                    ADSC9   57,,PR1                  cn=0,n=4
         1 000223   300000 000004                    ADSC9   0,,PR3                   cn=0,n=4

      232     3376    3                 END;

      233     3377    2   READLOOP:  GBYTES=FM$CON.GACTB;         /* # BYTES IN SEGMENT                 */

   3377  1 000224   200011 470500       READLOOP     LDP0    SEG$,,AUTO
         1 000225   000000 236100                    LDQ     0,,PR0
         1 000226   007777 376007                    ANQ     4095,DL
         1 000227   200015 756100                    STQ     GBYTES,,AUTO

      234     3378    2              GX=FM$CON.GX;                /* WORD INDEX TO START OF DATA        */

   3378  1 000230   000000 236100                    LDQ     0,,PR0
         1 000231   000014 772000                    QRL     12
         1 000232   001777 376007                    ANQ     1023,DL
         1 000233   200016 756100                    STQ     GX,,AUTO

      235     3379    2              G$=PINCRW(BUF$,GX);          /* POINTER TO DATA                    */

   3379  1 000234   000022 736000                    QLS     18
         1 000235   200010 036100                    ADLQ    BUF$,,AUTO
         1 000236   200017 756100                    STQ     G$,,AUTO

      236     3380    2              IF GX+(GBYTES+3)/4>FM$GRAN.NAVX THEN GOTO SEGERR; /* BAD SEG ENTRY */

   3380  1 000237   200015 236100                    LDQ     GBYTES,,AUTO
         1 000240   000003 036007                    ADLQ    3,DL
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:61   
         1 000241   000002 772000                    QRL     2
         1 000242   200016 036100                    ADLQ    GX,,AUTO
         1 000243   200046 756100                    STQ     DIR+2,,AUTO
         1 000244   200010 471500                    LDP1    BUF$,,AUTO
         1 000245   100001 236100                    LDQ     1,,PR1
         1 000246   000022 772000                    QRL     18
         1 000247   200046 116100                    CMPQ    DIR+2,,AUTO
         1 000250   002176 602000 1                  TNC     SEGERR

      237     3381    3              IF FAK = 1 THEN DO;

   3381  1 000251   200020 235100                    LDA     FAK,,AUTO
         1 000252   000001 115007                    CMPA    1,DL
         1 000253   000262 601000 1                  TNZ     s:3384

      238     3382    3                 F$DCB.DVBYTE=FM$CON.CTL;

   3382  1 000254   200006 473500                    LDP3    JDCB$,,AUTO
         1 000255   000000 236100                    LDQ     0,,PR0
         1 000256   000004 736000                    QLS     4
         1 000257   300003 676100                    ERQ     3,,PR3
         1 000260   776000 376003                    ANQ     -1024,DU
         1 000261   300003 656100                    ERSQ    3,,PR3

      239     3383    3                 END;

      240     3384    2              CALL FMD$RECTRAN(G$,GBYTES,1,0,FAK,FPT$READ_V.SEED) ALTRET(ERR);

   3384  1 000262   200026 236100                    LDQ     FPT$,,AUTO
         1 000263   000002 036003                    ADLQ    2,DU
         1 000264   200053 756100                    STQ     DIR+7,,AUTO
         1 000265   200020 631500                    EPPR1   FAK,,AUTO
         1 000266   200052 451500                    STP1    DIR+6,,AUTO
         1 000267   000002 237000 2                  LDAQ    2
         1 000270   200050 757100                    STAQ    DIR+4,,AUTO
         1 000271   200015 633500                    EPPR3   GBYTES,,AUTO
         1 000272   200047 453500                    STP3    DIR+3,,AUTO
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:62   
         1 000273   200017 634500                    EPPR4   G$,,AUTO
         1 000274   200046 454500                    STP4    DIR+2,,AUTO
         1 000275   200046 630500                    EPPR0   DIR+2,,AUTO
         1 000276   000024 631400 xsym               EPPR1   B_VECTNIL+20
         1 000277   000000 701000 xent               TSX1    FMD$RECTRAN
         1 000300   002153 702000 1                  TSX2    ERR

      241     3385    2              FAK=0;

   3385  1 000301   200020 450100                    STZ     FAK,,AUTO

      242     3386    2              IF GBYTES>0 THEN GOTO LOSTDATA; /* RAN OUT OF ROOM                 */

   3386  1 000302   200015 235100                    LDA     GBYTES,,AUTO
         1 000303   002154 601000 1                  TNZ     LOSTDATA

      243     3387               /* SUCCESFULLY TRANSFERRED ALL OF CURRENT SEGMENT.
      244     3388                  IF NO MORE SEGMENT ENTRIES AND M$READ, ALL DONE;
      245     3389                  IF NO MORE AND M$WRITE REWRITE DCB.UBYTES MUST BE ZERO.
      246     3390                  IF MORE ENTRIES, GIVE LOST DATA IF DCB.UBYTES ZERO,
      247     3391                  ELSE GO TO APPROPRIATE PLACE TO PROCESS */
      248     3392    2   READEND:   IF FM$CON.C=1

   3392  1 000304   200011 470500       READEND      LDP0    SEG$,,AUTO
         1 000305   000000 236100                    LDQ     0,,PR0
         1 000306   200000 376003                    ANQ     65536,DU
         1 000307   200000 116003                    CMPQ    65536,DU
         1 000310   000354 601000 1                  TNZ     NOTC

      249     3393    2              THEN                         /* SEGMENT SEEMS TO BE CONTINUED      */
      250     3394    3              DO;

      251     3395    3                 F$DCB.GDISP=0;            /* ZAP CURRENT SEG DISPL              */

   3395  1 000311   200006 471500                    LDP1    JDCB$,,AUTO
         1 000312   100101 450100                    STZ     65,,PR1

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:63   
      252     3396    3                 CALL NXTSEG ALTRET(NONXT); /* GO TO NEXT SEG ENTRY              */

   3396  1 000313   003373 701000 1                  TSX1    NXTSEG
         1 000314   000342 702000 1                  TSX2    NONXT

      253     3397    3                 IF FM$CON.FAK=1

   3397  1 000315   200011 470500                    LDP0    SEG$,,AUTO
         1 000316   000000 236100                    LDQ     0,,PR0
         1 000317   400000 376003                    ANQ     -131072,DU
         1 000320   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 000321   000001 036007                    ADLQ    1,DL
         1 000322   400000 116003                    CMPQ    -131072,DU
         1 000323   000330 601000 1                  TNZ     s:3405

      254     3398    3                 THEN            /* THIS ONE IS FIRST, PREV C BIT IS IN ERROR    */
      255     3399    4                 DO;

      256     3400    4                    F$DCB.RPOS='1'B;       /* THIS REC IS NEXT                   */

   3400  1 000324   200006 471500                    LDP1    JDCB$,,AUTO
         1 000325   010000 236007                    LDQ     4096,DL
         1 000326   100064 256100                    ORSQ    52,,PR1

      257     3401    4                    GOTO NOTC;             /* SEGMENT REALLY ISN'T CONTINUED     */

   3401  1 000327   000354 710000 1                  TRA     NOTC

      258     3402    4                    END;
      259     3403    3                 ELSE                      /* SEGMENT TRULY IS CONTINUED         */
      260     3404    4                 DO;

      261     3405    4                    IF FM$CON.GACTB=0

   3405  1 000330   000000 236100                    LDQ     0,,PR0
         1 000331   007777 316007                    CANQ    4095,DL
         1 000332   000354 600000 1                  TZE     NOTC
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:64   

      262     3406    4                    THEN                   /* HAVE RUN INTO DELETED ENTRY        */
      263     3407    4                       GOTO NOTC;
      264     3408    4                    IF F$DCB.UBYTES=0

   3408  1 000333   200006 471500                    LDP1    JDCB$,,AUTO
         1 000334   100076 235100                    LDA     62,,PR1
         1 000335   002154 600000 1                  TZE     LOSTDATA

      265     3409    4                    THEN                   /* USER BUFFER FULL                   */
      266     3410    4                       GOTO LOSTDATA;
      267     3411    4                    ELSE                   /* MORE TO DO                         */
      268     3412    4                       IF FPTCODE=FPTREAD

   3412  1 000336   200003 473500                    LDP3    @FPTCODE,,AUTO
         1 000337   300000 235100                    LDA     0,,PR3
         1 000340   000224 600000 1                  TZE     READLOOP

      269     3413    4                       THEN                /* M$READ                             */
      270     3414    4                          GOTO READLOOP;
      271     3415    4                       ELSE                /* M$WRITE REWRITE                    */
      272     3416    4                          GOTO REWRITELOOP;

   3416  1 000341   000644 710000 1                  TRA     REWRITELOOP

      273     3417    4                    END;
      274     3418    3   NONXT:        IF B$JIT.ERR.CODE=%E$EOF

   3418  1 000342   000000 470400 xsym  NONXT        LDP0    B$JIT$
         1 000343   000012 236100                    LDQ     10,,PR0
         1 000344   377770 376007                    ANQ     131064,DL
         1 000345   000060 116007                    CMPQ    48,DL
         1 000346   000353 601000 1                  TNZ     s:3425

      275     3419    3                 THEN                      /* EOF                                */
      276     3420    4                 DO;

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:65   
      277     3421    4                    F$DCB.RPOS='1'B;

   3421  1 000347   200006 471500                    LDP1    JDCB$,,AUTO
         1 000350   010000 236007                    LDQ     4096,DL
         1 000351   100064 256100                    ORSQ    52,,PR1

      278     3422    4                    GOTO NOTC;             /* SEGMENT NOT REALLY CONTINUED       */

   3422  1 000352   000354 710000 1                  TRA     NOTC

      279     3423    4                    END;
      280     3424    3                 ELSE                      /* SOME FATAL ERROR                   */
      281     3425    3                    ALTRETURN;

   3425  1 000353   000000 702200 xent               TSX2  ! X66_AALT

      282     3426    3                 END;
      283     3427    2              ELSE                         /* SEGMENT IS NOT CONTINUED           */
      284     3428    2   NOTC:         IF FPTCODE=FPTREAD OR

   3428  1 000354   200003 470500       NOTC         LDP0    @FPTCODE,,AUTO
         1 000355   000000 235100                    LDA     0,,PR0
         1 000356   002064 600000 1                  TZE     SETEOP
         1 000357   200006 471500                    LDP1    JDCB$,,AUTO
         1 000360   100076 235100                    LDA     62,,PR1
         1 000361   002064 600000 1                  TZE     SETEOP

      285     3429    2                   F$DCB.UBYTES=0
      286     3430    2                 THEN                      /* M$READ OR NO USER BYTES LEFT       */
      287     3431    2                    GOTO SETEOP;
      288     3432    2                 ELSE
      289     3433    2                    GOTO LOSTDATA;

   3433  1 000362   002154 710000 1                  TRA     LOSTDATA

      290     3434        /***************************/
      291     3435        /*********  M$WEOF  ********/
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:66   
      292     3436        /***************************/
      293     3437    2            CASE(FPTWEOF);

      294     3438    2   WEOF:      IF F$DCB.ACS = %JRNL# AND F$DCB.RPOS THEN

   3438  1 000363   200006 470500       WEOF         LDP0    JDCB$,,AUTO
         1 000364   000036 236100                    LDQ     30,,PR0
         1 000365   000777 376007                    ANQ     511,DL
         1 000366   000004 116007                    CMPQ    4,DL
         1 000367   000375 601000 1                  TNZ     s:3440
         1 000370   000064 236100                    LDQ     52,,PR0
         1 000371   010000 316007                    CANQ    4096,DL
         1 000372   000375 600000 1                  TZE     s:3440

      295     3439    2                 F$DCB.RPOS = '0'B;

   3439  1 000373   000004 236000 2                  LDQ     4
         1 000374   000064 356100                    ANSQ    52,,PR0

      296     3440    2              CALL SETUP ALTRET(ERR);

   3440  1 000375   003720 701000 1                  TSX1    SETUP
         1 000376   002153 702000 1                  TSX2    ERR

      297     3441    2              CALL NXTREC ALTRET(WEOF5);

   3441  1 000377   003546 701000 1                  TSX1    NXTREC
         1 000400   000405 702000 1                  TSX2    WEOF5

      298     3442    2              FM$CFU.FMOD='1'B;

   3442  1 000401   200007 470500                    LDP0    CFU$,,AUTO
         1 000402   004000 236003                    LDQ     2048,DU
         1 000403   000000 256100                    ORSQ    0,,PR0

      299     3443    2              GOTO DELFWD;

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:67   
   3443  1 000404   000735 710000 1                  TRA     DELFWD

   3442  1 000405                       WEOF5        null
      300     3444        /**/
      301     3445    2   WEOF5:     ;
      302     3446    2              IF B$JIT.ERR.CODE~=%E$EOF THEN

   3446  1 000405   000000 470400 xsym               LDP0    B$JIT$
         1 000406   000012 236100                    LDQ     10,,PR0
         1 000407   377770 376007                    ANQ     131064,DL
         1 000410   000060 116007                    CMPQ    48,DL
         1 000411   002153 601000 1                  TNZ     ERR

      303     3447    2                 GOTO ERR;
      304     3448    2              F$DCB.RPOS='1'B;

   3448  1 000412   200006 471500                    LDP1    JDCB$,,AUTO
         1 000413   010000 236007                    LDQ     4096,DL
         1 000414   100064 256100                    ORSQ    52,,PR1

      305     3449    2              GOTO SETEOP;

   3449  1 000415   002064 710000 1                  TRA     SETEOP

      306     3450        /***************************/
      307     3451        /*********  M$WRITE  *******/
      308     3452        /***************************/
      309     3453    2            CASE(FPTWRITE,MFC_WRUR,MFC_WRBIN, MFC_WRURUC);

      310     3454    2              IF F$DCB.ACS = %JRNL# AND F$DCB.RPOS THEN

   3454  1 000416   100036 236100                    LDQ     30,,PR1
         1 000417   000777 376007                    ANQ     511,DL
         1 000420   000004 116007                    CMPQ    4,DL
         1 000421   000427 601000 1                  TNZ     s:3456
         1 000422   100064 236100                    LDQ     52,,PR1
         1 000423   010000 316007                    CANQ    4096,DL
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:68   
         1 000424   000427 600000 1                  TZE     s:3456

      311     3455    2                 F$DCB.RPOS = '0'B;

   3455  1 000425   000004 236000 2                  LDQ     4
         1 000426   100064 356100                    ANSQ    52,,PR1

      312     3456    2              CALL SETUP ALTRET(ERR);

   3456  1 000427   003720 701000 1                  TSX1    SETUP
         1 000430   002153 702000 1                  TSX2    ERR

      313     3457    2              CFU$->FM$CFU.FMOD='1'B;      /* SET FILE MODIFIED                  */

   3457  1 000431   200007 470500                    LDP0    CFU$,,AUTO
         1 000432   004000 236003                    LDQ     2048,DU
         1 000433   000000 256100                    ORSQ    0,,PR0

      314     3458    3              IF CONT THEN DO;             /* CONTINUE OPERATION                 */

   3458  1 000434   200025 234100                    SZN     CONT,,AUTO
         1 000435   000574 605000 1                  TPL     s:3489

      315     3459    3                 IF EOP~=3 OR F$DCB.COMP OR FPT$WRITE_V.SEED OR F$DCB.SEED

   3459  1 000436   200024 235100                    LDA     EOP,,AUTO
         1 000437   000003 115007                    CMPA    3,DL
         1 000440   002233 601000 1                  TNZ     NOCONT
         1 000441   200006 471500                    LDP1    JDCB$,,AUTO
         1 000442   100031 236100                    LDQ     25,,PR1
         1 000443   000100 316007                    CANQ    64,DL
         1 000444   002233 601000 1                  TNZ     NOCONT
         1 000445   200026 473500                    LDP3    FPT$,,AUTO
         1 000446   300002 235100                    LDA     2,,PR3
         1 000447   002233 601000 1                  TNZ     NOCONT
         1 000450   100062 235100                    LDA     50,,PR1
         1 000451   002233 601000 1                  TNZ     NOCONT
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:69   
         1 000452   100036 236100                    LDQ     30,,PR1
         1 000453   000777 376007                    ANQ     511,DL
         1 000454   000004 116007                    CMPQ    4,DL
         1 000455   002233 600000 1                  TZE     NOCONT
         1 000456   100032 236100                    LDQ     26,,PR1
         1 000457   777000 376003                    ANQ     -512,DU
         1 000460   011000 116003                    CMPQ    4608,DU
         1 000461   002233 600000 1                  TZE     NOCONT

      316     3460    3                   OR F$DCB.ACS=%JRNL# OR F$DCB.ORG=%SYMB# THEN
      317     3461    3                    GOTO NOCONT;
      318     3462    3                 FAK=0;                    /* NOT BEGINNING OF RECORD            */

   3462  1 000462   200020 450100                    STZ     FAK,,AUTO

      319     3463    3                 IF F$DCB.UBYTES=0 THEN GOTO SETEOP;

   3463  1 000463   100076 235100                    LDA     62,,PR1
         1 000464   002064 600000 1                  TZE     SETEOP

      320     3464    3                 IF CRECX=LSTSEG AND F$DCB.BFR.DA(1)=

   3464  1 000465   200013 236100                    LDQ     CRECX,,AUTO
         1 000466   200012 116100                    CMPQ    LSTSEG,,AUTO
         1 000467   000644 601000 1                  TNZ     REWRITELOOP
         1 000470   000006 235100                    LDA     6,,PR0
         1 000471   000007 236100                    LDQ     7,,PR0
         1 000472   000033 773000                    LRL     27
         1 000473   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000474   200046 756100                    STQ     DIR+2,,AUTO
         1 000475   100116 236100                    LDQ     78,,PR1
         1 000476   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000477   200046 116100                    CMPQ    DIR+2,,AUTO
         1 000500   000644 601000 1                  TNZ     REWRITELOOP

      321     3465    3                   CFU$->FM$CFU.LDA
      322     3466    3                 THEN                      /* AT EOF                             */
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:70   
      323     3467    4                 DO;

      324     3468    4                    GBYTES=(FM$GRAN.AVAIL+FM$GRAN.NAVX-

   3468  1 000501   200010 474500                    LDP4    BUF$,,AUTO
         1 000502   400001 236100                    LDQ     1,,PR4
         1 000503   000022 772000                    QRL     18
         1 000504   200046 756100                    STQ     DIR+2,,AUTO
         1 000505   400001 236100                    LDQ     1,,PR4
         1 000506   001777 376007                    ANQ     1023,DL
         1 000507   200046 036100                    ADLQ    DIR+2,,AUTO
         1 000510   200011 475500                    LDP5    SEG$,,AUTO
         1 000511   200047 756100                    STQ     DIR+3,,AUTO
         1 000512   500000 236100                    LDQ     0,,PR5
         1 000513   000014 772000                    QRL     12
         1 000514   001777 376007                    ANQ     1023,DL
         1 000515   200050 756100                    STQ     DIR+4,,AUTO
         1 000516   200047 236100                    LDQ     DIR+3,,AUTO
         1 000517   200050 136100                    SBLQ    DIR+4,,AUTO
         1 000520   000002 736000                    QLS     2
         1 000521   200015 756100                    STQ     GBYTES,,AUTO

      325     3469    4                      FM$CON.GX)*4;        /* TOTAL SPACE FOR THIS SEG           */
      326     3470    4                    IF GBYTES<=F$DCB.GDISP THEN

   3470  1 000522   100101 116100                    CMPQ    65,,PR1
         1 000523   001620 602000 1                  TNC     WRTEND2
         1 000524   001620 600000 1                  TZE     WRTEND2

      327     3471    4                       GOTO WRTEND2;       /* NOT ENOUGH SPACE LEFT              */
      328     3472    4                    GBYTES=GBYTES-F$DCB.GDISP; /* Extra space                    */

   3472  1 000525   100101 136100                    SBLQ    65,,PR1
         1 000526   200015 756100                    STQ     GBYTES,,AUTO

      329     3473    4                    GX=FM$CON.GX;

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:71   
   3473  1 000527   500000 236100                    LDQ     0,,PR5
         1 000530   000014 772000                    QRL     12
         1 000531   001777 376007                    ANQ     1023,DL
         1 000532   200016 756100                    STQ     GX,,AUTO

      330     3474    4                    G$=PINCRW(BUF$,GX);

   3474  1 000533   000022 736000                    QLS     18
         1 000534   200010 036100                    ADLQ    BUF$,,AUTO
         1 000535   200017 756100                    STQ     G$,,AUTO

      331     3475    4                    N=F$DCB.UBYTES;

   3475  1 000536   100076 235100                    LDA     62,,PR1
         1 000537   200022 755100                    STA     N,,AUTO

      332     3476    4                    IF N>GBYTES THEN       /* Limit to smaller of two            */

   3476  1 000540   200015 236100                    LDQ     GBYTES,,AUTO
         1 000541   000545 604000 1                  TMI     s:3478
         1 000542   200022 116100                    CMPQ    N,,AUTO
         1 000543   000545 605000 1                  TPL     s:3478

      333     3477    4                       N=GBYTES;

   3477  1 000544   200022 756100                    STQ     N,,AUTO

      334     3478    4                    CALL INSERT(G$->CHAR1,F$DCB.GDISP,N,F$DCB.UB$->CHARS);

   3478  1 000545   100075 476500                    LDP6    61,,PR1
         1 000546   100101 235100                    LDA     65,,PR1
         1 000547   200022 720100                    LXL0    N,,AUTO
         1 000550   200017 477500                    LDP7    G$,,AUTO
         1 000551   040145 100540                    MLR     fill='040'O
         1 000552   600000 000010                    ADSC9   0,,PR6                   cn=0,n=*X0
         1 000553   700000 000010                    ADSC9   0,A,PR7                  cn=0,n=*X0

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:72   
      335     3479    4                    F$DCB.GDISP=F$DCB.GDISP+N;

   3479  1 000554   100101 236100                    LDQ     65,,PR1
         1 000555   200022 036100                    ADLQ    N,,AUTO
         1 000556   100101 756100                    STQ     65,,PR1

      336     3480    4                    FM$CON.GACTB=F$DCB.GDISP;

   3480  1 000557   500000 752103                    STCQ    0,'03'O,PR5

      337     3481    4                    F$DCB.UBYTES=F$DCB.UBYTES-N;

   3481  1 000560   100076 236100                    LDQ     62,,PR1
         1 000561   200022 136100                    SBLQ    N,,AUTO
         1 000562   100076 756100                    STQ     62,,PR1

      338     3482    4                    F$DCB.UB$=PINCRC(F$DCB.UB$,N);

   3482  1 000563   100075 474500                    LDP4    61,,PR1
         1 000564   200022 236100                    LDQ     N,,AUTO
         1 000565   000011 402007                    MPY     9,DL
         1 000566   000000 116003                    CMPQ    0,DU
         1 000567   000571 605000 1                  TPL     s:3482+6
         1 000570   000044 036003                    ADLQ    36,DU
         1 000571   400000 503506                    ABD     0,QL,PR4
         1 000572   100075 454500                    STP4    61,,PR1

      339     3483    4                    GOTO WRTEND1;

   3483  1 000573   001556 710000 1                  TRA     WRTEND1

      340     3484    4                    END;
      341     3485    3                 ELSE                      /* NOT AT EOF                         */
      342     3486    3                    GOTO REWRITELOOP;
      343     3487    3                 END;
      344     3488    2              ELSE                         /* NORMAL WRITE                       */
      345     3489    2                 F$DCB.GDISP=0;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:73   

   3489  1 000574   200006 471500                    LDP1    JDCB$,,AUTO
         1 000575   100101 450100                    STZ     65,,PR1

      346     3490    2              IF F$DCB.UBYTES>=4096 THEN

   3490  1 000576   100076 235100                    LDA     62,,PR1
         1 000577   010000 115007                    CMPA    4096,DL
         1 000600   000614 602000 1                  TNC     s:3493

      347     3491    2                 IF F$DCB.UBYTES/4096>FM$CFU.RCSZ THEN

   3491  1 000601   100076 236100                    LDQ     62,,PR1
         1 000602   000014 772000                    QRL     12
         1 000603   200046 756100                    STQ     DIR+2,,AUTO
         1 000604   000004 236100                    LDQ     4,,PR0
         1 000605   000033 772000                    QRL     27
         1 000606   200046 116100                    CMPQ    DIR+2,,AUTO
         1 000607   000614 603000 1                  TRC     s:3493

      348     3492    2                    FM$CFU.RCSZ=F$DCB.UBYTES/4096;

   3492  1 000610   100076 236100                    LDQ     62,,PR1
         1 000611   000014 772000                    QRL     12
         1 000612   000033 736000                    QLS     27
         1 000613   000004 552140                    STBQ    4,'40'O,PR0

      349     3493    3              IF FPT$WRITE_V.REWRITE AND F$DCB.ACS~=%JRNL# THEN DO;

   3493  1 000614   200026 473500                    LDP3    FPT$,,AUTO
         1 000615   300000 236100                    LDQ     0,,PR3
         1 000616   000100 316007                    CANQ    64,DL
         1 000617   000733 600000 1                  TZE     s:3524
         1 000620   100036 236100                    LDQ     30,,PR1
         1 000621   000777 376007                    ANQ     511,DL
         1 000622   000004 116007                    CMPQ    4,DL
         1 000623   000733 600000 1                  TZE     s:3524
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:74   

      350     3494    4                 IF NOT F$DCB.FFLG.UPD THEN DO; /* Update not allowed            */

   3494  1 000624   100004 236100                    LDQ     4,,PR1
         1 000625   040000 316003                    CANQ    16384,DU
         1 000626   000633 601000 1                  TNZ     s:3500

      351     3495    4                    B$JIT.ERR=ERRREWRITE;

   3495  1 000627   000011 236000 0                  LDQ     ERRREWRITE
         1 000630   000000 474400 xsym               LDP4    B$JIT$
         1 000631   400012 756100                    STQ     10,,PR4

      352     3496    4                    GOTO ERR;

   3496  1 000632   002153 710000 1                  TRA     ERR

      353     3497    4                    END;
      354     3498        /*E*    ERROR:  FMH-E$REWRITE-2
      355     3499        */
      356     3500    4                 IF F$DCB.COMP THEN DO;

   3500  1 000633   100031 236100                    LDQ     25,,PR1
         1 000634   000100 316007                    CANQ    64,DL
         1 000635   000642 600000 1                  TZE     s:3507

      357     3501    4                    B$JIT.ERR=ERRCONCOMP;

   3501  1 000636   000012 236000 0                  LDQ     ERRCONCOMP
         1 000637   000000 474400 xsym               LDP4    B$JIT$
         1 000640   400012 756100                    STQ     10,,PR4

      358     3502    4                    GOTO ERR;

   3502  1 000641   002153 710000 1                  TRA     ERR

      359     3503    4                    END;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:75   
      360     3504        /*E*    ERROR: FMH-E$CONCOMP-2
      361     3505                MESSAGE: It is illegal to rewrite records in a compressed consecutive file.
      362     3506        */
      363     3507    3                 CALL CHKEOP ALTRET(ERR);  /* CHECK PREV OP AND POSITION         */

   3507  1 000642   002237 701000 1                  TSX1    CHKEOP
         1 000643   002153 702000 1                  TSX2    ERR

      364     3508    3   REWRITELOOP:  GBYTES=FM$CON.GACTB;

   3508  1 000644   200011 470500       REWRITELOOP  LDP0    SEG$,,AUTO
         1 000645   000000 236100                    LDQ     0,,PR0
         1 000646   007777 376007                    ANQ     4095,DL
         1 000647   200015 756100                    STQ     GBYTES,,AUTO

      365     3509    3                 N=GBYTES;                 /* Save size of seg for later         */

   3509  1 000650   200022 756100                    STQ     N,,AUTO

      366     3510    3                 GX=FM$CON.GX;             /* DISPL TO START OF DATA             */

   3510  1 000651   000000 236100                    LDQ     0,,PR0
         1 000652   000014 772000                    QRL     12
         1 000653   001777 376007                    ANQ     1023,DL
         1 000654   200016 756100                    STQ     GX,,AUTO

      367     3511    3                 G$=PINCRW(BUF$,GX);       /* POINTER TO DATA                    */

   3511  1 000655   000022 736000                    QLS     18
         1 000656   200010 036100                    ADLQ    BUF$,,AUTO
         1 000657   200017 756100                    STQ     G$,,AUTO

      368     3512    3                 IF GX+(GBYTES+3)/4>FM$GRAN.NAVX THEN GOTO SEGERR;

   3512  1 000660   200015 236100                    LDQ     GBYTES,,AUTO
         1 000661   000003 036007                    ADLQ    3,DL
         1 000662   000002 772000                    QRL     2
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:76   
         1 000663   200016 036100                    ADLQ    GX,,AUTO
         1 000664   200046 756100                    STQ     DIR+2,,AUTO
         1 000665   200010 471500                    LDP1    BUF$,,AUTO
         1 000666   100001 236100                    LDQ     1,,PR1
         1 000667   000022 772000                    QRL     18
         1 000670   200046 116100                    CMPQ    DIR+2,,AUTO
         1 000671   002176 602000 1                  TNC     SEGERR

      369     3513    3                 CALL FMD$RECTRAN(G$,GBYTES,1,1,FAK,FPT$WRITE_V.SEED,

   3513  1 000672   200003 236100                    LDQ     @FPTCODE,,AUTO
         1 000673   200005 235100                    LDA     @VFC,,AUTO
         1 000674   200054 757100                    STAQ    DIR+8,,AUTO
         1 000675   200026 236100                    LDQ     FPT$,,AUTO
         1 000676   000002 036003                    ADLQ    2,DU
         1 000677   200053 756100                    STQ     DIR+7,,AUTO
         1 000700   200020 633500                    EPPR3   FAK,,AUTO
         1 000701   200052 453500                    STP3    DIR+6,,AUTO
         1 000702   000006 237000 2                  LDAQ    6
         1 000703   200050 757100                    STAQ    DIR+4,,AUTO
         1 000704   200015 634500                    EPPR4   GBYTES,,AUTO
         1 000705   200047 454500                    STP4    DIR+3,,AUTO
         1 000706   200017 635500                    EPPR5   G$,,AUTO
         1 000707   200046 455500                    STP5    DIR+2,,AUTO
         1 000710   200046 630500                    EPPR0   DIR+2,,AUTO
         1 000711   000026 631400 xsym               EPPR1   B_VECTNIL+22
         1 000712   000000 701000 xent               TSX1    FMD$RECTRAN
         1 000713   002153 702000 1                  TSX2    ERR

      370     3514    3                   VFC,FPTCODE) ALTRET(ERR);
      371     3515    4                 IF FAK~=0 THEN DO;

   3515  1 000714   200020 235100                    LDA     FAK,,AUTO
         1 000715   000726 600000 1                  TZE     s:3519

      372     3516    4                    FAK=0;

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:77   
   3516  1 000716   200020 450100                    STZ     FAK,,AUTO

      373     3517    4                    FM$CON.CTL=FPT$WRITE_V.DVBYTE; /* Device info                */

   3517  1 000717   200011 470500                    LDP0    SEG$,,AUTO
         1 000720   200026 471500                    LDP1    FPT$,,AUTO
         1 000721   100003 236100                    LDQ     3,,PR1
         1 000722   000004 772000                    QRL     4
         1 000723   000000 676100                    ERQ     0,,PR0
         1 000724   037700 376003                    ANQ     16320,DU
         1 000725   000000 656100                    ERSQ    0,,PR0

      374     3518    4                    END;

      375     3519    3                 IF N~=GBYTES THEN

   3519  1 000726   200022 236100                    LDQ     N,,AUTO
         1 000727   002154 604000 1                  TMI     LOSTDATA
         1 000730   200015 116100                    CMPQ    GBYTES,,AUTO
         1 000731   002154 601000 1                  TNZ     LOSTDATA

      376     3520    3                    GOTO LOSTDATA;         /* Wrote less than this piece         */
      377     3521    3                 GOTO READEND;

   3521  1 000732   000304 710000 1                  TRA     READEND

      378     3522    3                 END;
      379     3523                                                /*                                    */
      380     3524    2              CALL NXTREC ALTRET(WRTEOF);  /* POSITION TO NEXT RECORD            */

   3524  1 000733   003546 701000 1                  TSX1    NXTREC
         1 000734   001231 702000 1                  TSX2    WRTEOF

   3519  1 000735                       DELFWD       null
      381     3525        /**/
      382     3526        /* Not at end-of-file - delete forward */
      383     3527        /**/
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:78   
      384     3528    2   DELFWD:    ;
      385     3529    3              IF NOT F$DCB.FFLG.DELR THEN DO; /* NOT ALLOWED TO DELETE RECS      */

   3529  1 000735   200006 470500                    LDP0    JDCB$,,AUTO
         1 000736   000004 236100                    LDQ     4,,PR0
         1 000737   200000 316003                    CANQ    65536,DU
         1 000740   000745 601000 1                  TNZ     s:3537

      386     3530    3                 B$JIT.ERR=ERRDELFWD;

   3530  1 000741   000010 236000 0                  LDQ     ERRDELFWD
         1 000742   000000 471400 xsym               LDP1    B$JIT$
         1 000743   100012 756100                    STQ     10,,PR1

      387     3531    3                 GOTO ERR;

   3531  1 000744   002153 710000 1                  TRA     ERR

      388     3532    3                 END;
      389     3533        /*E*    ERROR:     FMH-E$DELFWD-2
      390     3534        *       MESSAGE:  Delete forward not allowed% on file %FN%
      391     3535        *       MESSAGE1: DELR permission is needed to write at other than end-of-file
      392     3536        */
      393     3537    2              FM$GRAN.NAVX=FM$CON.GX;      /* REL DATA SPACE TOO                 */

   3537  1 000745   200011 471500                    LDP1    SEG$,,AUTO
         1 000746   100000 236100                    LDQ     0,,PR1
         1 000747   000014 772000                    QRL     12
         1 000750   001777 376007                    ANQ     1023,DL
         1 000751   000000 620006                    EAX0    0,QL
         1 000752   200010 473500                    LDP3    BUF$,,AUTO
         1 000753   300001 740100                    STX0    1,,PR3

      394     3538    2              FM$GRAN.AVAIL=CRECX-FM$GRAN.NAVX+1;

   3538  1 000754   200010 473500                    LDP3    BUF$,,AUTO
         1 000755   300001 236100                    LDQ     1,,PR3
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:79   
         1 000756   000022 772000                    QRL     18
         1 000757   200046 756100                    STQ     DIR+2,,AUTO
         1 000760   200013 236100                    LDQ     CRECX,,AUTO
         1 000761   200046 136100                    SBLQ    DIR+2,,AUTO
         1 000762   000001 036007                    ADLQ    1,DL
         1 000763   300001 676100                    ERQ     1,,PR3
         1 000764   001777 376007                    ANQ     1023,DL
         1 000765   300001 656100                    ERSQ    1,,PR3

      395     3539    2              F$DCB.BFR.BUFUP(1)='1'B;

   3539  1 000766   400000 236003                    LDQ     -131072,DU
         1 000767   000116 256100                    ORSQ    78,,PR0

      396     3540    2              F$DCB.BFR.SCRUB(1)='1'B;

   3540  1 000770   200000 236003                    LDQ     65536,DU
         1 000771   000116 256100                    ORSQ    78,,PR0

      397     3541    2              N=CFU$->FM$CFU.LDA-F$DCB.BFR.DA(1);

   3541  1 000772   000116 236100                    LDQ     78,,PR0
         1 000773   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000774   200046 756100                    STQ     DIR+2,,AUTO
         1 000775   200007 473500                    LDP3    CFU$,,AUTO
         1 000776   300006 235100                    LDA     6,,PR3
         1 000777   300007 236100                    LDQ     7,,PR3
         1 001000   000033 773000                    LRL     27
         1 001001   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 001002   200046 136100                    SBLQ    DIR+2,,AUTO
         1 001003   200022 756100                    STQ     N,,AUTO

      398     3542    3              IF N~=0 THEN DO;             /* ZAP GRANS FROM NEW LDA TO OLD      */

   3542  1 001004   001172 600000 1                  TZE     DELFWD5

      399     3543    3                 DA=F$DCB.BFR.DA(1)+1;     /* FIRST DISC ADDR TO ZAP             */
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:80   

   3543  1 001005   000116 236100                    LDQ     78,,PR0
         1 001006   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 001007   000001 036007                    ADLQ    1,DL
         1 001010   200014 756100                    STQ     DA,,AUTO

      400     3544    4                 DO I=1 TO N;

   3544  1 001011   000001 235007                    LDA     1,DL
         1 001012   200023 755100                    STA     I,,AUTO
         1 001013   001042 710000 1                  TRA     s:3548+1

      401     3545    4                    CALL FMB$QUEUE(0,0,4,DA,%N_WRZERO,0,ENTADDR(NIL),0);

   3545  1 001014   000010 237000 2                  LDAQ    8
         1 001015   200054 757100                    STAQ    DIR+8,,AUTO
         1 001016   000012 237000 2                  LDAQ    10
         1 001017   200052 757100                    STAQ    DIR+6,,AUTO
         1 001020   200014 630500                    EPPR0   DA,,AUTO
         1 001021   200051 450500                    STP0    DIR+5,,AUTO
         1 001022   000005 236000 2                  LDQ     5
         1 001023   200050 756100                    STQ     DIR+4,,AUTO
         1 001024   000010 237000 2                  LDAQ    8
         1 001025   200046 757100                    STAQ    DIR+2,,AUTO
         1 001026   200046 630500                    EPPR0   DIR+2,,AUTO
         1 001027   000026 631400 xsym               EPPR1   B_VECTNIL+22
         1 001030   000000 701000 xent               TSX1    FMB$QUEUE
         1 001031   000000 011000                    NOP     0

      402     3546    4                    CALL FMC$CLR1(DA);

   3546  1 001032   200014 630500                    EPPR0   DA,,AUTO
         1 001033   200046 450500                    STP0    DIR+2,,AUTO
         1 001034   200046 630500                    EPPR0   DIR+2,,AUTO
         1 001035   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001036   000000 701000 xent               TSX1    FMC$CLR1
         1 001037   000000 011000                    NOP     0
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:81   

      403     3547    4                    DA=DA+1;

   3547  1 001040   200014 054100                    AOS     DA,,AUTO

      404     3548    4                    END;

   3548  1 001041   200023 054100                    AOS     I,,AUTO
         1 001042   200023 236100                    LDQ     I,,AUTO
         1 001043   200022 116100                    CMPQ    N,,AUTO
         1 001044   001014 604400 1                  TMOZ    s:3545

      405     3549    3                 CFU$->FM$CFU.LDA=F$DCB.BFR.DA(1); /* NEW LDA                    */

   3549  1 001045   200006 470500                    LDP0    JDCB$,,AUTO
         1 001046   200007 471500                    LDP1    CFU$,,AUTO
         1 001047   000100 100500                    MLR     fill='000'O
         1 001050   000116 200003                    ADSC9   78,,PR0                  cn=1,n=3
         1 001051   100006 400003                    ADSC9   6,,PR1                   cn=2,n=3

      406     3550    3                 FM$CFU.UGRANS=FM$CFU.UGRANS-N;

   3550  1 001052   100004 236100                    LDQ     4,,PR1
         1 001053   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 001054   200022 136100                    SBLQ    N,,AUTO
         1 001055   100004 552134                    STBQ    4,'34'O,PR1

      407     3551    3                 FM$CFU.NGAVAL=FM$CFU.NGAVAL+N;

   3551  1 001056   100007 236100                    LDQ     7,,PR1
         1 001057   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 001060   200022 036100                    ADLQ    N,,AUTO
         1 001061   100007 552134                    STBQ    7,'34'O,PR1

      408     3552    3                 IF F$DCB.STARF OR F$DCB.DISP=%SCRATCH# THEN

   3552  1 001062   000064 236100                    LDQ     52,,PR0
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:82   
         1 001063   200000 316003                    CANQ    65536,DU
         1 001064   001172 601000 1                  TNZ     DELFWD5
         1 001065   000032 236100                    LDQ     26,,PR0
         1 001066   000777 376007                    ANQ     511,DL
         1 001067   000001 116007                    CMPQ    1,DL
         1 001070   001172 600000 1                  TZE     DELFWD5

      409     3553    3                    GOTO DELFWD5;
      410     3554    3                 CALL FMB$IOSPIN;          /* Wait for all I/O to complete       */

   3554  1 001071   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001072   000000 701000 xent               TSX1    FMB$IOSPIN
         1 001073   000000 011000                    NOP     0

      411     3555    3                 BUFNUM=4;

   3555  1 001074   000004 235007                    LDA     4,DL
         1 001075   200021 755100                    STA     WRDS,,AUTO

      412     3556    3                 CALL FMN$GETFIT(G$,BUFNUM)ALTRET(FITERR1);

   3556  1 001076   200021 630500                    EPPR0   WRDS,,AUTO
         1 001077   200047 450500                    STP0    DIR+3,,AUTO
         1 001100   200017 631500                    EPPR1   G$,,AUTO
         1 001101   200046 451500                    STP1    DIR+2,,AUTO
         1 001102   200046 630500                    EPPR0   DIR+2,,AUTO
         1 001103   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 001104   000000 701000 xent               TSX1    FMN$GETFIT
         1 001105   001223 702000 1                  TSX2    FITERR1

      413     3557    3                 F$DCB.GTYP=FMGTFILE;      /* RESTORE GTYP                       */

   3557  1 001106   200006 470500                    LDP0    JDCB$,,AUTO
         1 001107   000064 236100                    LDQ     52,,PR0
         1 001110   000014 376000 2                  ANQ     12
         1 001111   030000 276003                    ORQ     12288,DU
         1 001112   000064 756100                    STQ     52,,PR0
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:83   

      414     3558    3                 G$=PINCRW(G$,SIZEW(FM$GRAN)); /* START OF FIT                   */

   3558  1 001113   200017 236100                    LDQ     G$,,AUTO
         1 001114   000005 036003                    ADLQ    5,DU
         1 001115   200017 756100                    STQ     G$,,AUTO

      415     3559    3                 CALL FMO$LOCCODP(G$,3) ALTRET(FITERR); /* FIND CODE 3           */

   3559  1 001116   000015 236000 2                  LDQ     13
         1 001117   200047 756100                    STQ     DIR+3,,AUTO
         1 001120   200017 631500                    EPPR1   G$,,AUTO
         1 001121   200046 451500                    STP1    DIR+2,,AUTO
         1 001122   200046 630500                    EPPR0   DIR+2,,AUTO
         1 001123   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 001124   000000 701000 xent               TSX1    FMO$LOCCODP
         1 001125   001214 702000 1                  TSX2    FITERR

      416     3560    3                 G$->CODE03.LDA=CFU$->FM$CFU.LDA;

   3560  1 001126   200007 470500                    LDP0    CFU$,,AUTO
         1 001127   200017 471500                    LDP1    G$,,AUTO
         1 001130   000006 235100                    LDA     6,,PR0
         1 001131   000007 236100                    LDQ     7,,PR0
         1 001132   000033 773000                    LRL     27
         1 001133   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 001134   100004 552134                    STBQ    4,'34'O,PR1

      417     3561    3                 G$->CODE03.NRECS=F$DCB.CRECNO;

   3561  1 001135   200006 471500                    LDP1    JDCB$,,AUTO
         1 001136   200017 473500                    LDP3    G$,,AUTO
         1 001137   100071 235100                    LDA     57,,PR1
         1 001140   300002 755100                    STA     2,,PR3

      418     3562    3                 IF BUFNUM~=1 THEN

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:84   
   3562  1 001141   200021 235100                    LDA     WRDS,,AUTO
         1 001142   000001 115007                    CMPA    1,DL
         1 001143   001152 600000 1                  TZE     s:3564

      419     3563    3                 CALL FMD$WRTSV(BUFNUM);   /* Write FIT                          */

   3563  1 001144   200021 633500                    EPPR3   WRDS,,AUTO
         1 001145   200046 453500                    STP3    DIR+2,,AUTO
         1 001146   200046 630500                    EPPR0   DIR+2,,AUTO
         1 001147   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001150   000000 701000 xent               TSX1    FMD$WRTSV
         1 001151   000000 011000                    NOP     0

      420     3564    3                 CALL FMD$WRTSV(1);        /* Write FDA                          */

   3564  1 001152   000002 630400 2                  EPPR0   2
         1 001153   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001154   000000 701000 xent               TSX1    FMD$WRTSV
         1 001155   000000 011000                    NOP     0

      421     3565    3                 IF BUFNUM=2 THEN

   3565  1 001156   200021 235100                    LDA     WRDS,,AUTO
         1 001157   000002 115007                    CMPA    2,DL
         1 001160   001166 601000 1                  TNZ     s:3568

      422     3566    3                 CALL FMD$WRTBUF(2);       /* GET FIT OUT OF BUFFER 2            */

   3566  1 001161   000016 630400 2                  EPPR0   14
         1 001162   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001163   000000 701000 xent               TSX1    FMD$WRTBUF
         1 001164   000000 011000                    NOP     0
         1 001165   001172 710000 1                  TRA     DELFWD5

      423     3567    3                 ELSE
      424     3568    3                 CALL FMD$WRTSV(1);        /* FIT WAS ALREADY IN 1 - WRITE IT    */

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:85   
   3568  1 001166   000002 630400 2                  EPPR0   2
         1 001167   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001170   000000 701000 xent               TSX1    FMD$WRTSV
         1 001171   000000 011000                    NOP     0

      425     3569    3                 END;

   3565  1 001172                       DELFWD5      null
      426     3570    2   DELFWD5:   ;
      427     3571    2              IF FPTCODE=FPTWEOF OR

   3571  1 001172   200003 470500                    LDP0    @FPTCODE,,AUTO
         1 001173   000000 235100                    LDA     0,,PR0
         1 001174   000007 115007                    CMPA    7,DL
         1 001175   001204 600000 1                  TZE     s:3573
         1 001176   000002 115007                    CMPA    2,DL
         1 001177   001213 601000 1                  TNZ     s:3577
         1 001200   200026 471500                    LDP1    FPT$,,AUTO
         1 001201   100001 236100                    LDQ     1,,PR1
         1 001202   100000 316007                    CANQ    32768,DL
         1 001203   001213 600000 1                  TZE     s:3577

      428     3572    3                 (FPTCODE=FPTDELREC AND FPT$DELREC_V.DELALL) THEN DO;

      429     3573    3                 FM$CFU.NRECS=F$DCB.CRECNO-1;

   3573  1 001204   200006 471500                    LDP1    JDCB$,,AUTO
         1 001205   200007 473500                    LDP3    CFU$,,AUTO
         1 001206   100071 235100                    LDA     57,,PR1
         1 001207   000001 135007                    SBLA    1,DL
         1 001210   300001 755100                    STA     1,,PR3

      430     3574    3                 F$DCB.NRECS=FM$CFU.NRECS;

   3574  1 001211   100042 755100                    STA     34,,PR1

      431     3575    3                 GOTO SETEOP;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:86   

   3575  1 001212   002064 710000 1                  TRA     SETEOP

      432     3576    3                 END;
      433     3577    2              GOTO WRTEOF2;

   3577  1 001213   001247 710000 1                  TRA     WRTEOF2

      434     3578                                                /*                                    */
      435     3579    2   FITERR:    CALL FMB$LOGERR(%E$FIT,13,8);

   3579  1 001214   000021 630400 2     FITERR       EPPR0   17
         1 001215   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 001216   000000 701000 xent               TSX1    FMB$LOGERR
         1 001217   000000 011000                    NOP     0

      436     3580    2              B$JIT.ERR=ERRFIT;

   3580  1 001220   000003 236000 0                  LDQ     ERRFIT
         1 001221   000000 470400 xsym               LDP0    B$JIT$
         1 001222   000012 756100                    STQ     10,,PR0

      437     3581    2   FITERR1:   F$DCB.GTYP=FMGTFILE;         /* RESTORE GTYP                       */

   3581  1 001223   200006 470500       FITERR1      LDP0    JDCB$,,AUTO
         1 001224   000064 236100                    LDQ     52,,PR0
         1 001225   000014 376000 2                  ANQ     12
         1 001226   030000 276003                    ORQ     12288,DU
         1 001227   000064 756100                    STQ     52,,PR0

      438     3582    2              GOTO ERR;

   3582  1 001230   002153 710000 1                  TRA     ERR

      439     3583        /*E*   ERROR:  FMH-E$FIT-2
      440     3584        *       MESSAGE:  Error reading FIT of file %FN
      441     3585        *      DESCRIPTION:  An error occurred while reading the FIT to
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:87   
      442     3586        *        update NRECS, LDA, etc. after a delete forward.
      443     3587        */
      444     3588                                                /*                                    */
      445     3589    2   WRTEOF:    IF B$JIT.ERR.CODE~=%E$EOF THEN ALTRETURN;

   3589  1 001231   000000 470400 xsym  WRTEOF       LDP0    B$JIT$
         1 001232   000012 236100                    LDQ     10,,PR0
         1 001233   377770 376007                    ANQ     131064,DL
         1 001234   000060 116007                    CMPQ    48,DL
         1 001235   001237 600000 1                  TZE     s:3590

   3589  1 001236   000000 702200 xent               TSX2  ! X66_AALT

      446     3590    2              B$JIT.ERR='0'B;

   3590  1 001237   000012 450100                    STZ     10,,PR0

      447     3591    3              IF NOT F$DCB.FFLG.WNEW THEN DO;

   3591  1 001240   200006 471500                    LDP1    JDCB$,,AUTO
         1 001241   100004 236100                    LDQ     4,,PR1
         1 001242   100000 316003                    CANQ    32768,DU
         1 001243   001247 601000 1                  TNZ     WRTEOF2

      448     3592    3                 B$JIT.ERR=ERRWRITNEW;

   3592  1 001244   000014 236000 0                  LDQ     ERRWRITNEW
         1 001245   000012 756100                    STQ     10,,PR0

      449     3593    3                 GOTO ERR;

   3593  1 001246   002153 710000 1                  TRA     ERR

      450     3594    3                 END;
      451     3595        /*E*   ERROR:  FMH-E$WRITNEW-2
      452     3596        */
      453     3597                                                /*                                    */
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:88   
      454     3598    3   WRTEOF2:   DO CASE(FM$GRAN.AVAIL);

   3598  1 001247   200010 470500       WRTEOF2      LDP0    BUF$,,AUTO
         1 001250   000001 720100                    LXL0    1,,PR0
         1 001251   001777 360003                    ANX0    1023,DU
         1 001252   000002 100003                    CMPX0   2,DU
         1 001253   001255 602010 1                  TNC     WRTEOF2+6,X0
         1 001254   001457 710000 1                  TRA     s:3640
         1 001255   001257 710000 1                  TRA     WRITELOOP
         1 001256   001451 710000 1                  TRA     s:3636

      455     3599    3               CASE(0);                    /* NO SPACE LEFT                      */

      456     3600    3   WRITELOOP:    IF F$DCB.ACS = %JRNL# AND

   3600  1 001257   200006 470500       WRITELOOP    LDP0    JDCB$,,AUTO
         1 001260   000036 236100                    LDQ     30,,PR0
         1 001261   000777 376007                    ANQ     511,DL
         1 001262   000004 116007                    CMPQ    4,DL
         1 001263   001302 601000 1                  TNZ     s:3606
         1 001264   000116 236100                    LDQ     78,,PR0
         1 001265   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 001266   000000 116000 xsym               CMPQ    FM_FRZERO
         1 001267   001302 601000 1                  TNZ     s:3606

      457     3601    3                   F$DCB.BFR.DA(1) = FM_FRZERO THEN
      458     3602    4                 DO;                       /* NEED TO CLEAR OUT FIT              */

      459     3603    4                    DA=FM$CFU.FITSDA;

   3603  1 001270   200007 471500                    LDP1    CFU$,,AUTO
         1 001271   100000 236100                    LDQ     0,,PR1
         1 001272   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 001273   200014 756100                    STQ     DA,,AUTO

      460     3604    4                    CALL FMC$CLR1(DA);

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:89   
   3604  1 001274   200014 633500                    EPPR3   DA,,AUTO
         1 001275   200046 453500                    STP3    DIR+2,,AUTO
         1 001276   200046 630500                    EPPR0   DIR+2,,AUTO
         1 001277   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001300   000000 701000 xent               TSX1    FMC$CLR1
         1 001301   000000 011000                    NOP     0

      461     3605    4                    END;                   /* NEED TO CLEAR OUT FIT              */

      462     3606    3                 CALL FAF$GETGRAN(DA) ALTRET(ERR); /* GET A GRANULE              */

   3606  1 001302   200014 630500                    EPPR0   DA,,AUTO
         1 001303   200046 450500                    STP0    DIR+2,,AUTO
         1 001304   200046 630500                    EPPR0   DIR+2,,AUTO
         1 001305   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001306   000000 701000 xent               TSX1    FAF$GETGRAN
         1 001307   002153 702000 1                  TSX2    ERR

      463     3607    4                 IF NOT FM$GRAN.NOTLDA THEN DO;

   3607  1 001310   200010 470500                    LDP0    BUF$,,AUTO
         1 001311   000002 236100                    LDQ     2,,PR0
         1 001312   400000 316007                    CANQ    -131072,DL
         1 001313   001321 601000 1                  TNZ     s:3611

      464     3608    4                    FM$GRAN.NOTLDA='1'B;   /* This isn't LDA                     */

   3608  1 001314   400000 236007                    LDQ     -131072,DL
         1 001315   000002 256100                    ORSQ    2,,PR0

      465     3609    4                    F$DCB.BFR.BUFUP(1)='1'B;

   3609  1 001316   200006 470500                    LDP0    JDCB$,,AUTO
         1 001317   400000 236003                    LDQ     -131072,DU
         1 001320   000116 256100                    ORSQ    78,,PR0

      466     3610    4                    END;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:90   

      467     3611    3                 F$DCB.HASH=FM$GRAN.STAMP.HASH; /* In case JRNL                  */

   3611  1 001321   200010 470500                    LDP0    BUF$,,AUTO
         1 001322   200006 471500                    LDP1    JDCB$,,AUTO
         1 001323   000000 236100                    LDQ     0,,PR0
         1 001324   100073 552170                    STBQ    59,'70'O,PR1

      468     3612    3                 CFU$->FM$CFU.LDA=DA; /* New last disk address */

   3612  1 001325   200007 473500                    LDP3    CFU$,,AUTO
         1 001326   000100 101500                    MRL     fill='000'O
         1 001327   200014 000004                    ADSC9   DA,,AUTO                 cn=0,n=4
         1 001330   300006 400003                    ADSC9   6,,PR3                   cn=2,n=3

      469     3613    4                 IF F$DCB.ACS~=%JRNL# THEN DO;

   3613  1 001331   100036 236100                    LDQ     30,,PR1
         1 001332   000777 376007                    ANQ     511,DL
         1 001333   000004 116007                    CMPQ    4,DL
         1 001334   001352 600000 1                  TZE     s:3618

      470     3614    4                    CALL FMD$FLSHBUFNR(1); /* Get rid of old buffer              */

   3614  1 001335   000002 630400 2                  EPPR0   2
         1 001336   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001337   000000 701000 xent               TSX1    FMD$FLSHBUFNR
         1 001340   000000 011000                    NOP     0

      471     3615    4                    CALL FMD$GETBUF (1 , 1 , BUF$);

   3615  1 001341   200010 630500                    EPPR0   BUF$,,AUTO
         1 001342   200050 450500                    STP0    DIR+4,,AUTO
         1 001343   000006 237000 2                  LDAQ    6
         1 001344   200046 757100                    STAQ    DIR+2,,AUTO
         1 001345   200046 630500                    EPPR0   DIR+2,,AUTO
         1 001346   000021 631400 xsym               EPPR1   B_VECTNIL+17
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:91   
         1 001347   000000 701000 xent               TSX1    FMD$GETBUF
         1 001350   000000 011000                    NOP     0

      472     3616    4                    END;

   3616  1 001351   001377 710000 1                  TRA     s:3623

      473     3617    4                 ELSE DO;

      474     3618    4                    CALL FMD$FLSHBUF(1);   /* Get rid of old buffer              */

   3618  1 001352   000002 630400 2                  EPPR0   2
         1 001353   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001354   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 001355   000000 011000                    NOP     0

      475     3619    4                    CALL MMJ$GIOP(N);      /* GET NEW PAGE FOR BUFFER            */

   3619  1 001356   200022 630500                    EPPR0   N,,AUTO
         1 001357   200046 450500                    STP0    DIR+2,,AUTO
         1 001360   200046 630500                    EPPR0   DIR+2,,AUTO
         1 001361   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001362   000000 701000 xent               TSX1    MMJ$GIOP
         1 001363   000000 011000                    NOP     0

      476     3620    4                    FM$CFUJ.PAGE#=N;

   3620  1 001364   200022 720100                    LXL0    N,,AUTO
         1 001365   200007 470500                    LDP0    CFU$,,AUTO
         1 001366   000005 440100                    SXL0    5,,PR0

      477     3621    4                    CALL FMH$MAPJRNL(1,BUF$);

   3621  1 001367   200010 631500                    EPPR1   BUF$,,AUTO
         1 001370   200047 451500                    STP1    DIR+3,,AUTO
         1 001371   000002 236000 2                  LDQ     2
         1 001372   200046 756100                    STQ     DIR+2,,AUTO
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:92   
         1 001373   200046 630500                    EPPR0   DIR+2,,AUTO
         1 001374   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 001375   000000 701000 xent               TSX1    FMH$MAPJRNL
         1 001376   000000 011000                    NOP     0

      478     3622    4                    END;

      479     3623    3                 FM$GRAN='0'B;             /* ZERO HEADER                        */

   3623  1 001377   200010 470500                    LDP0    BUF$,,AUTO
         1 001400   000100 100400                    MLR     fill='000'O
         1 001401   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         1 001402   000000 000024                    ADSC9   0,,PR0                   cn=0,n=20

      480     3624    3                 FM$GRAN.STAMP.HASH=F$DCB.HASH;

   3624  1 001403   200006 470500                    LDP0    JDCB$,,AUTO
         1 001404   200010 471500                    LDP1    BUF$,,AUTO
         1 001405   000073 236100                    LDQ     59,,PR0
         1 001406   100000 552170                    STBQ    0,'70'O,PR1

      481     3625    3                 FM$GRAN.STAMP.GMOD=DA;

   3625  1 001407   200010 471500                    LDP1    BUF$,,AUTO
         1 001410   200014 236100                    LDQ     DA,,AUTO
         1 001411   100000 552104                    STBQ    0,'04'O,PR1

      482     3626    3                 FM$GRAN.NAVX=3;           /* Next data insertion point          */

   3626  1 001412   000003 220003                    LDX0    3,DU
         1 001413   200010 471500                    LDP1    BUF$,,AUTO
         1 001414   100001 740100                    STX0    1,,PR1

      483     3627    3                 FM$GRAN.AVAIL=1024-FM$GRAN.NAVX; /* Space available             */

   3627  1 001415   200010 471500                    LDP1    BUF$,,AUTO
         1 001416   100001 236100                    LDQ     1,,PR1
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:93   
         1 001417   000022 772000                    QRL     18
         1 001420   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 001421   002001 036007                    ADLQ    1025,DL
         1 001422   100001 676100                    ERQ     1,,PR1
         1 001423   001777 376007                    ANQ     1023,DL
         1 001424   100001 656100                    ERSQ    1,,PR1

      484     3628    3                 FM$GRAN.ORG=F$DCB.ORG;

   3628  1 001425   200010 471500                    LDP1    BUF$,,AUTO
         1 001426   000032 236100                    LDQ     26,,PR0
         1 001427   000021 772000                    QRL     17
         1 001430   100001 676100                    ERQ     1,,PR1
         1 001431   036000 376007                    ANQ     15360,DL
         1 001432   100001 656100                    ERSQ    1,,PR1

      485     3629    3                 F$DCB.BFR.DA(1)=DA;

   3629  1 001433   200014 236100                    LDQ     DA,,AUTO
         1 001434   000116 552134                    STBQ    78,'34'O,PR0

      486     3630    3                 F$DCB.BFR.BUFUP(1)='1'B;

   3630  1 001435   400000 236003                    LDQ     -131072,DU
         1 001436   000116 256100                    ORSQ    78,,PR0

      487     3631    3                 F$DCB.BFR.SCRUB(1)='1'B;

   3631  1 001437   200000 236003                    LDQ     65536,DU
         1 001440   000116 256100                    ORSQ    78,,PR0

      488     3632    3                 CRECX=1023;

   3632  1 001441   001777 235007                    LDA     1023,DL
         1 001442   200013 755100                    STA     CRECX,,AUTO

      489     3633    3                 F$DCB.CRECX=1023;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:94   

   3633  1 001443   001777 221003                    LDX1    1023,DU
         1 001444   000067 441100                    SXL1    55,,PR0

      490     3634    3                 SEG$=PINCRW(BUF$,1023);

   3634  1 001445   200010 236100                    LDQ     BUF$,,AUTO
         1 001446   001777 036003                    ADLQ    1023,DU
         1 001447   200011 756100                    STQ     SEG$,,AUTO
         1 001450   001457 710000 1                  TRA     s:3640

      491     3635    3               CASE(1);                    /* ONE WORD LEFT                      */

      492     3636    3                 IF F$DCB.UBYTES~=0 OR ADDR(VFC)~=ADDR(NIL) THEN

   3636  1 001451   200006 471500                    LDP1    JDCB$,,AUTO
         1 001452   100076 235100                    LDA     62,,PR1
         1 001453   001257 601000 1                  TNZ     WRITELOOP
         1 001454   200005 236100                    LDQ     @VFC,,AUTO
         1 001455   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 001456   001257 601000 1                  TNZ     WRITELOOP

      493     3637    3                    GOTO WRITELOOP;        /*  Need at least two words           */
      494     3638    3               END;

      495     3639                                                /*                                    */
      496     3640    2              GBYTES=(FM$GRAN.AVAIL-1)*4;  /* SIZE OF DEST AREA                  */

   3640  1 001457   200010 470500                    LDP0    BUF$,,AUTO
         1 001460   000001 236100                    LDQ     1,,PR0
         1 001461   000002 736000                    QLS     2
         1 001462   007774 376007                    ANQ     4092,DL
         1 001463   000004 136007                    SBLQ    4,DL
         1 001464   200015 756100                    STQ     GBYTES,,AUTO

      497     3641    2              GX=FM$GRAN.NAVX;             /* INDEX TO INSERT                    */

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:95   
   3641  1 001465   000001 236100                    LDQ     1,,PR0
         1 001466   000022 772000                    QRL     18
         1 001467   200016 756100                    STQ     GX,,AUTO

      498     3642    2              G$=PINCRW(BUF$,GX);          /* POINTER TO INSERTION LOC           */

   3642  1 001470   000022 736000                    QLS     18
         1 001471   200010 036100                    ADLQ    BUF$,,AUTO
         1 001472   200017 756100                    STQ     G$,,AUTO

      499     3643    2              CALL FMD$RECTRAN(G$,GBYTES,1,1,FAK,FPT$WRITE_V.SEED,

   3643  1 001473   200003 236100                    LDQ     @FPTCODE,,AUTO
         1 001474   200005 235100                    LDA     @VFC,,AUTO
         1 001475   200054 757100                    STAQ    DIR+8,,AUTO
         1 001476   200026 236100                    LDQ     FPT$,,AUTO
         1 001477   000002 036003                    ADLQ    2,DU
         1 001500   200053 756100                    STQ     DIR+7,,AUTO
         1 001501   200020 631500                    EPPR1   FAK,,AUTO
         1 001502   200052 451500                    STP1    DIR+6,,AUTO
         1 001503   000006 237000 2                  LDAQ    6
         1 001504   200050 757100                    STAQ    DIR+4,,AUTO
         1 001505   200015 633500                    EPPR3   GBYTES,,AUTO
         1 001506   200047 453500                    STP3    DIR+3,,AUTO
         1 001507   200017 634500                    EPPR4   G$,,AUTO
         1 001510   200046 454500                    STP4    DIR+2,,AUTO
         1 001511   200046 630500                    EPPR0   DIR+2,,AUTO
         1 001512   000026 631400 xsym               EPPR1   B_VECTNIL+22
         1 001513   000000 701000 xent               TSX1    FMD$RECTRAN
         1 001514   002153 702000 1                  TSX2    ERR

      500     3644    2                VFC,FPTCODE) ALTRET(ERR);
      501     3645    2              FM$CON='0'B;                 /* ZERO SEGMENT ENTRY                 */

   3645  1 001515   200011 470500                    LDP0    SEG$,,AUTO
         1 001516   000000 450100                    STZ     0,,PR0

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:96   
      502     3646    2              FM$CON.GX=GX;

   3646  1 001517   200016 236100                    LDQ     GX,,AUTO
         1 001520   000014 736000                    QLS     12
         1 001521   000000 676100                    ERQ     0,,PR0
         1 001522   000024 376000 2                  ANQ     20
         1 001523   000000 656100                    ERSQ    0,,PR0

      503     3647    2              FM$CON.GACTB=GBYTES;

   3647  1 001524   200015 236100                    LDQ     GBYTES,,AUTO
         1 001525   000000 752103                    STCQ    0,'03'O,PR0

      504     3648    3              IF FAK=1 THEN DO;            /* First segment of record            */

   3648  1 001526   200020 235100                    LDA     FAK,,AUTO
         1 001527   000001 115007                    CMPA    1,DL
         1 001530   001547 601000 1                  TNZ     s:3655

      505     3649    3                 FAK=0;

   3649  1 001531   200020 450100                    STZ     FAK,,AUTO

      506     3650    3                 FM$CON.FAK=1;

   3650  1 001532   400000 236003                    LDQ     -131072,DU
         1 001533   000000 256100                    ORSQ    0,,PR0

      507     3651    3                 FM$CON.CTL=FPT$WRITE_V.DVBYTE; /* Device info                   */

   3651  1 001534   200026 471500                    LDP1    FPT$,,AUTO
         1 001535   100003 236100                    LDQ     3,,PR1
         1 001536   000004 772000                    QRL     4
         1 001537   000000 676100                    ERQ     0,,PR0
         1 001540   037700 376003                    ANQ     16320,DU
         1 001541   000000 656100                    ERSQ    0,,PR0

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:97   
      508     3652    3                 CFU$->FM$CFU.NRECS=F$DCB.CRECNO;

   3652  1 001542   200006 473500                    LDP3    JDCB$,,AUTO
         1 001543   200007 474500                    LDP4    CFU$,,AUTO
         1 001544   300071 235100                    LDA     57,,PR3
         1 001545   400001 755100                    STA     1,,PR4

      509     3653    3                 F$DCB.NRECS=FM$CFU.NRECS; /* LET USERS SEE IT                   */

   3653  1 001546   300042 755100                    STA     34,,PR3

      510     3654    3                 END;

      511     3655    2              FM$GRAN.AVAIL=FM$GRAN.AVAIL-1; /* CTL WD                           */

   3655  1 001547   200010 471500                    LDP1    BUF$,,AUTO
         1 001550   100001 236100                    LDQ     1,,PR1
         1 001551   001777 376007                    ANQ     1023,DL
         1 001552   000001 136007                    SBLQ    1,DL
         1 001553   100001 676100                    ERQ     1,,PR1
         1 001554   001777 376007                    ANQ     1023,DL
         1 001555   100001 656100                    ERSQ    1,,PR1

      512     3656    2   WRTEND1:   WRDS=(F$DCB.GDISP+3)/4-FM$GRAN.NAVX+

   3656  1 001556   200006 470500       WRTEND1      LDP0    JDCB$,,AUTO
         1 001557   000101 236100                    LDQ     65,,PR0
         1 001560   000003 036007                    ADLQ    3,DL
         1 001561   000002 772000                    QRL     2
         1 001562   200010 471500                    LDP1    BUF$,,AUTO
         1 001563   200046 756100                    STQ     DIR+2,,AUTO
         1 001564   100001 236100                    LDQ     1,,PR1
         1 001565   000022 772000                    QRL     18
         1 001566   200047 756100                    STQ     DIR+3,,AUTO
         1 001567   200046 236100                    LDQ     DIR+2,,AUTO
         1 001570   200047 136100                    SBLQ    DIR+3,,AUTO
         1 001571   200011 473500                    LDP3    SEG$,,AUTO
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:98   
         1 001572   200050 756100                    STQ     DIR+4,,AUTO
         1 001573   300000 236100                    LDQ     0,,PR3
         1 001574   000014 772000                    QRL     12
         1 001575   001777 376007                    ANQ     1023,DL
         1 001576   200051 756100                    STQ     DIR+5,,AUTO
         1 001577   200050 236100                    LDQ     DIR+4,,AUTO
         1 001600   200051 036100                    ADLQ    DIR+5,,AUTO
         1 001601   200021 756100                    STQ     WRDS,,AUTO

      513     3657    2                FM$CON.GX;                 /* # WORDS ADDED THIS TIME            */
      514     3658    2              FM$GRAN.NAVX=FM$GRAN.NAVX+WRDS;

   3658  1 001602   100001 236100                    LDQ     1,,PR1
         1 001603   000022 772000                    QRL     18
         1 001604   200021 036100                    ADLQ    WRDS,,AUTO
         1 001605   000000 620006                    EAX0    0,QL
         1 001606   100001 740100                    STX0    1,,PR1

      515     3659    2              FM$GRAN.AVAIL=FM$GRAN.AVAIL-WRDS;

   3659  1 001607   200010 471500                    LDP1    BUF$,,AUTO
         1 001610   100001 236100                    LDQ     1,,PR1
         1 001611   001777 376007                    ANQ     1023,DL
         1 001612   200021 136100                    SBLQ    WRDS,,AUTO
         1 001613   100001 676100                    ERQ     1,,PR1
         1 001614   001777 376007                    ANQ     1023,DL
         1 001615   100001 656100                    ERSQ    1,,PR1

      516     3660    2              F$DCB.RPOS='0'B;             /* THIS RECORD IS CURRENT             */

   3660  1 001616   000004 236000 2                  LDQ     4
         1 001617   000064 356100                    ANSQ    52,,PR0

      517     3661    2   WRTEND2:   F$DCB.BFR.BUFUP(1)='1'B;

   3661  1 001620   200006 470500       WRTEND2      LDP0    JDCB$,,AUTO
         1 001621   400000 236003                    LDQ     -131072,DU
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:99   
         1 001622   000116 256100                    ORSQ    78,,PR0

      518     3662    2              IF F$DCB.UBYTES=0 THEN

   3662  1 001623   000076 235100                    LDA     62,,PR0
         1 001624   002064 600000 1                  TZE     SETEOP

      519     3663    2                 GOTO SETEOP;              /* DONE                               */
      520     3664    2              FM$CON.C=1;                  /* SET CONTINUATION FLAG              */

   3664  1 001625   200011 471500                    LDP1    SEG$,,AUTO
         1 001626   200000 236003                    LDQ     65536,DU
         1 001627   100000 256100                    ORSQ    0,,PR1

      521     3665    2              F$DCB.GDISP=0;               /* DONE WITH THIS SEGMENT             */

   3665  1 001630   000101 450100                    STZ     65,,PR0

      522     3666    2              GOTO WRITELOOP;

   3666  1 001631   001257 710000 1                  TRA     WRITELOOP

      523     3667        /******************************/
      524     3668        /*****   M$PRECORD  ***********/
      525     3669        /******************************/
      526     3670    2            CASE(FPTPREC);                 /* M$PRECORD                          */

      527     3671    2              F$DCB.ARS=0;

   3671  1 001632   100000 450100                    STZ     0,,PR1

      528     3672                   /* BOF and EOF are wasted efforts for a journal file */
      529     3673    2              IF FPT$PRECORD_V.BOF THEN

   3673  1 001633   200026 474500                    LDP4    FPT$,,AUTO
         1 001634   400000 236100                    LDQ     0,,PR4
         1 001635   020000 316007                    CANQ    8192,DL
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:100  
         1 001636   001642 600000 1                  TZE     s:3675

      530     3674    2                 CALL REWIND ALTRET(ERR);

   3674  1 001637   002266 701000 1                  TSX1    REWIND
         1 001640   002153 702000 1                  TSX2    ERR
         1 001641   001646 710000 1                  TRA     s:3677

      531     3675    2              ELSE IF FPT$PRECORD_V.EOF THEN

   3675  1 001642   010000 316007                    CANQ    4096,DL
         1 001643   001646 600000 1                  TZE     s:3677

      532     3676    2                 CALL PFIL_EOF ALTRET(ERR);

   3676  1 001644   002315 701000 1                  TSX1    PFIL_EOF
         1 001645   002153 702000 1                  TSX2    ERR

      533     3677    2              CALL SETUP ALTRET(ERR);

   3677  1 001646   003720 701000 1                  TSX1    SETUP
         1 001647   002153 702000 1                  TSX2    ERR

      534     3678    2              N=FPT$PRECORD_V.N;           /* # RECORDS TO MOVE                  */

   3678  1 001650   200026 470500                    LDP0    FPT$,,AUTO
         1 001651   000001 235100                    LDA     1,,PR0
         1 001652   200022 755100                    STA     N,,AUTO

      535     3679    3   PREC:      IF N>=0 THEN DO;

   3679  1 001653   200022 235100       PREC         LDA     N,,AUTO
         1 001654   001707 604000 1                  TMI     s:3692

      536     3680    3                 CALL NXTREC ALTRET(PRECEOF);

   3680  1 001655   003546 701000 1                  TSX1    NXTREC
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:101  
         1 001656   001763 702000 1                  TSX2    PRECEOF

      537     3681    4                 DO WHILE(N>0);

   3681  1 001657   200022 235100                    LDA     N,,AUTO
         1 001660   001736 604400 1                  TMOZ    s:3702

      538     3682    4                    F$DCB.ARS=F$DCB.ARS+1;

   3682  1 001661   200006 470500                    LDP0    JDCB$,,AUTO
         1 001662   000000 054100                    AOS     0,,PR0

      539     3683    4                    N=N-1;

   3683  1 001663   000001 336007                    LCQ     1,DL
         1 001664   200022 056100                    ASQ     N,,AUTO

      540     3684    4                    CALL NXTREC ALTRET(PRECEOF);

   3684  1 001665   003546 701000 1                  TSX1    NXTREC
         1 001666   001763 702000 1                  TSX2    PRECEOF

      541     3685    4                    IF FPT$PRECORD_V.BRK AND

   3685  1 001667   200026 470500                    LDP0    FPT$,,AUTO
         1 001670   000000 236100                    LDQ     0,,PR0
         1 001671   004000 316007                    CANQ    2048,DL
         1 001672   001704 600000 1                  TZE     s:3689
         1 001673   000003 236000 xsym               LDQ     B_VECTNIL+3
         1 001674   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 001675   000000 471400 xsym               LDP1    S$CU$
         1 001676   100001 376100                    ANQ     1,,PR1
         1 001677   001704 600000 1                  TZE     s:3689
         1 001700   000000 473400 xsym               LDP3    B_MPT
         1 001701   300010 236100                    LDQ     8,,PR3
         1 001702   000160 316007                    CANQ    112,DL
         1 001703   001737 601000 1                  TNZ     ERR_INT
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:102  

      542     3686    4                       S$CU$->B$U.ASYNCH&(~%U_RESET) AND
      543     3687    4                       B_MPT.SS$->B$SS.ISR.WSR ~= %MONWSR THEN
      544     3688    4                       GOTO ERR_INT;
      545     3689    4                    END;

   3689  1 001704   200022 235100                    LDA     N,,AUTO
         1 001705   001661 605400 1                  TPNZ    s:3682

      546     3690    3                 END;

   3690  1 001706   001736 710000 1                  TRA     s:3702

      547     3691    2              ELSE
      548     3692    3              DO WHILE(N<0);

   3692  1 001707   001736 605000 1                  TPL     s:3702

      549     3693    3                 CALL BEGREC ALTRET(RSTRPOS);

   3693  1 001710   003575 701000 1                  TSX1    BEGREC
         1 001711   002106 702000 1                  TSX2    RSTRPOS

      550     3694    3                 F$DCB.RPOS='1'B;          /* THIS REC IS NEXT TO FIND           */

   3694  1 001712   200006 470500                    LDP0    JDCB$,,AUTO
         1 001713   010000 236007                    LDQ     4096,DL
         1 001714   000064 256100                    ORSQ    52,,PR0

      551     3695    3                 F$DCB.ARS=F$DCB.ARS+1;

   3695  1 001715   000000 054100                    AOS     0,,PR0

      552     3696    3                 N=N+1;

   3696  1 001716   200022 054100                    AOS     N,,AUTO

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:103  
      553     3697    3                 IF FPT$PRECORD_V.BRK AND

   3697  1 001717   200026 471500                    LDP1    FPT$,,AUTO
         1 001720   100000 236100                    LDQ     0,,PR1
         1 001721   004000 316007                    CANQ    2048,DL
         1 001722   001734 600000 1                  TZE     s:3701
         1 001723   000003 236000 xsym               LDQ     B_VECTNIL+3
         1 001724   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 001725   000000 473400 xsym               LDP3    S$CU$
         1 001726   300001 376100                    ANQ     1,,PR3
         1 001727   001734 600000 1                  TZE     s:3701
         1 001730   000000 474400 xsym               LDP4    B_MPT
         1 001731   400010 236100                    LDQ     8,,PR4
         1 001732   000160 316007                    CANQ    112,DL
         1 001733   001737 601000 1                  TNZ     ERR_INT

      554     3698    3                    S$CU$->B$U.ASYNCH&(~%U_RESET) AND
      555     3699    3                    B_MPT.SS$->B$SS.ISR.WSR ~= %MONWSR THEN
      556     3700    3                    GOTO ERR_INT;
      557     3701    3                 END;

   3701  1 001734   200022 235100                    LDA     N,,AUTO
         1 001735   001710 604000 1                  TMI     s:3693

      558     3702    3              DO WHILE('0'B);

   3702  1 001736   001742 710000 1                  TRA     s:3705

      559     3703    3   ERR_INT:      B$JIT.ERR=ERRPMMEINT;

   3703  1 001737   000015 236000 0     ERR_INT      LDQ     ERRPMMEINT
         1 001740   000000 470400 xsym               LDP0    B$JIT$
         1 001741   000012 756100                    STQ     10,,PR0

      560     3704    3              END;

      561     3705    2              F$DCB.RPOS='1'B;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:104  

   3705  1 001742   200006 470500                    LDP0    JDCB$,,AUTO
         1 001743   010000 236007                    LDQ     4096,DL
         1 001744   000064 256100                    ORSQ    52,,PR0

      562     3706    2              IF FPT$PRECORD_V.KEYR THEN

   3706  1 001745   200026 471500                    LDP1    FPT$,,AUTO
         1 001746   100000 236100                    LDQ     0,,PR1
         1 001747   200000 316007                    CANQ    65536,DL
         1 001750   001755 600000 1                  TZE     s:3708

      563     3707    2                 B$PS1$->CHAR4=ADDR(F$DCB.CRECNO)->CHAR4;

   3707  1 001751   000000 473400 xsym               LDP3    B$PS1$
         1 001752   040100 100500                    MLR     fill='040'O
         1 001753   000071 000004                    ADSC9   57,,PR0                  cn=0,n=4
         1 001754   300000 000004                    ADSC9   0,,PR3                   cn=0,n=4

      564     3708    2              IF B$JIT.ERR.CODE = %E$PMMEINT THEN

   3708  1 001755   000000 473400 xsym               LDP3    B$JIT$
         1 001756   300012 236100                    LDQ     10,,PR3
         1 001757   377770 376007                    ANQ     131064,DL
         1 001760   001230 116007                    CMPQ    664,DL
         1 001761   002153 600000 1                  TZE     ERR

      565     3709    2                 GOTO ERR;
      566     3710    2              ELSE
      567     3711    2                 GOTO SETEOP;

   3711  1 001762   002064 710000 1                  TRA     SETEOP

      568     3712    2   PRECEOF:   IF B$JIT.ERR.CODE~=%E$EOF THEN GOTO ERR;

   3712  1 001763   000000 470400 xsym  PRECEOF      LDP0    B$JIT$
         1 001764   000012 236100                    LDQ     10,,PR0
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:105  
         1 001765   377770 376007                    ANQ     131064,DL
         1 001766   000060 116007                    CMPQ    48,DL
         1 001767   002153 601000 1                  TNZ     ERR

      569     3713    2              F$DCB.RPOS='1'B;

   3713  1 001770   200006 471500                    LDP1    JDCB$,,AUTO
         1 001771   010000 236007                    LDQ     4096,DL
         1 001772   100064 256100                    ORSQ    52,,PR1

      570     3714    2              IF N~=0 THEN GOTO ERR;

   3714  1 001773   200022 235100                    LDA     N,,AUTO
         1 001774   002153 601000 1                  TNZ     ERR

      571     3715    2              B$JIT.ERR='0'B;

   3715  1 001775   000012 450100                    STZ     10,,PR0

      572     3716    2              IF FPT$PRECORD_V.KEYR THEN

   3716  1 001776   200026 473500                    LDP3    FPT$,,AUTO
         1 001777   300000 236100                    LDQ     0,,PR3
         1 002000   200000 316007                    CANQ    65536,DL
         1 002001   002006 600000 1                  TZE     s:3718

      573     3717    2                 B$PS1$->CHAR4=ADDR(F$DCB.CRECNO)->CHAR4;

   3717  1 002002   000000 474400 xsym               LDP4    B$PS1$
         1 002003   040100 100500                    MLR     fill='040'O
         1 002004   100071 000004                    ADSC9   57,,PR1                  cn=0,n=4
         1 002005   400000 000004                    ADSC9   0,,PR4                   cn=0,n=4

      574     3718    2              GOTO SETEOP;

   3718  1 002006   002064 710000 1                  TRA     SETEOP

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:106  
      575     3719        /******************************/
      576     3720        /******  M$DELREC  ************/
      577     3721        /******************************/
      578     3722    2            CASE(FPTDELREC);

      579     3723    3              IF FPT$DELREC_V.DELALL THEN DO;

   3723  1 002007   200026 474500                    LDP4    FPT$,,AUTO
         1 002010   400001 236100                    LDQ     1,,PR4
         1 002011   100000 316007                    CANQ    32768,DL
         1 002012   002016 600000 1                  TZE     s:3729

      580     3724                      /* DELALL is wasted effort for a journal file since
      581     3725                      it doesn't (and shouldn't) work.                 */
      582     3726    3                 CALL REWIND ALTRET(ERR);

   3726  1 002013   002266 701000 1                  TSX1    REWIND
         1 002014   002153 702000 1                  TSX2    ERR

      583     3727    3                 GOTO WEOF;

   3727  1 002015   000363 710000 1                  TRA     WEOF

      584     3728    3                 END;
      585     3729    2              CALL SETUP ALTRET(ERR);

   3729  1 002016   003720 701000 1                  TSX1    SETUP
         1 002017   002153 702000 1                  TSX2    ERR

      586     3730    2              CALL CHKEOP ALTRET(ERR);     /* Validate EOP, position             */

   3730  1 002020   002237 701000 1                  TSX1    CHKEOP
         1 002021   002153 702000 1                  TSX2    ERR

      587     3731    2              CFU$->FM$CFU.FMOD='1'B;      /* SET FILE MODIFIED                  */

   3731  1 002022   200007 470500                    LDP0    CFU$,,AUTO
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:107  
         1 002023   004000 236003                    LDQ     2048,DU
         1 002024   000000 256100                    ORSQ    0,,PR0

      588     3732    2              FM$CON.FAK=0;

   3732  1 002025   200011 471500                    LDP1    SEG$,,AUTO
         1 002026   000031 236000 xsym               LDQ     B_VECTNIL+25
         1 002027   100000 356100                    ANSQ    0,,PR1

      589     3733    2              F$DCB.BFR.BUFUP(1)='1'B;

   3733  1 002030   200006 473500                    LDP3    JDCB$,,AUTO
         1 002031   400000 236003                    LDQ     -131072,DU
         1 002032   300116 256100                    ORSQ    78,,PR3

      590     3734    2              FM$CFU.NRECS=FM$CFU.NRECS-1;

   3734  1 002033   000001 336007                    LCQ     1,DL
         1 002034   000001 056100                    ASQ     1,,PR0

      591     3735    2              F$DCB.NRECS=FM$CFU.NRECS;

   3735  1 002035   000001 235100                    LDA     1,,PR0
         1 002036   300042 755100                    STA     34,,PR3

      592     3736    2              F$DCB.ARS=1;                 /* # RECORDS DELETED                  */

   3736  1 002037   000001 235007                    LDA     1,DL
         1 002040   300000 755100                    STA     0,,PR3
         1 002041   002064 710000 1                  TRA     SETEOP

      593     3737        /******************************/
      594     3738        /******  OTHERS  **************/
      595     3739        /******************************/
      596     3740    2            CASE(ELSE);

      597     3741    2              F$DCB.EOP=EOP;               /* RESTORE ORIGINAL EOP               */
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:108  

   3741  1 002042   200024 236100                    LDQ     EOP,,AUTO
         1 002043   000033 736000                    QLS     27
         1 002044   100064 676100                    ERQ     52,,PR1
         1 002045   003000 376003                    ANQ     1536,DU
         1 002046   100064 656100                    ERSQ    52,,PR1

      598     3742    2              RETURN;

   3742  1 002047   000000 702200 xent               TSX2  ! X66_ARET

      599     3743        /******************************/
      600     3744        /******* FILE EXTENSION *******/
      601     3745        /******************************/
      602     3746    2            CASE(FPTPFILEOF);

      603     3747    2              GOTO PFILEOF;

   3747  1 002050   002060 710000 1                  TRA     PFILEOF

      604     3748        /******************************/
      605     3749        /******  M$PFIL  **************/
      606     3750        /******************************/
      607     3751    2            CASE(FPTPFIL);

      608     3752    2              IF FPT$PFIL_V.BOF

   3752  1 002051   200026 474500                    LDP4    FPT$,,AUTO
         1 002052   400000 236100                    LDQ     0,,PR4
         1 002053   400000 316007                    CANQ    -131072,DL
         1 002054   002060 600000 1                  TZE     PFILEOF

      609     3753    2              THEN                         /* POSITION TO BOF                    */
      610     3754    3              DO;

      611     3755    3   REW:          CALL REWIND ALTRET(ERR);

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:109  
   3755  1 002055   002266 701000 1     REW          TSX1    REWIND
         1 002056   002153 702000 1                  TSX2    ERR

      612     3756    3                 END;

   3756  1 002057   002064 710000 1                  TRA     SETEOP

      613     3757    2              ELSE                         /* POSITION TO EOF                    */
      614     3758    3              DO;

      615     3759    3   PFILEOF:      CALL PFIL_EOF ALTRET(ERR);

   3759  1 002060   002315 701000 1     PFILEOF      TSX1    PFIL_EOF
         1 002061   002153 702000 1                  TSX2    ERR

      616     3760    3                 END;

   3760  1 002062   002064 710000 1                  TRA     SETEOP

      617     3761        /*****************************/
      618     3762        /*********  M$REW  ***********/
      619     3763        /*****************************/
      620     3764    2            CASE(FPTREW);

      621     3765    2              GOTO REW;

   3765  1 002063   002055 710000 1                  TRA     REW

      622     3766    2            END;

      623     3767                                                /*                                    */
      624     3768    1   SETEOP: F$DCB.EOP=FM_EOP(FPTCODE);

   3768  1 002064   200003 470500       SETEOP       LDP0    @FPTCODE,,AUTO
         1 002065   000000 720100                    LXL0    0,,PR0
         1 002066   200006 471500                    LDP1    JDCB$,,AUTO
         1 002067   000000 236010 xsym               LDQ     FM_EOP,X0
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:110  
         1 002070   000033 736000                    QLS     27
         1 002071   100064 676100                    ERQ     52,,PR1
         1 002072   003000 376003                    ANQ     1536,DU
         1 002073   100064 656100                    ERSQ    52,,PR1

      625     3769    1           IF FPTCODE=FPTWRITE THEN

   3769  1 002074   000000 235100                    LDA     0,,PR0
         1 002075   000001 115007                    CMPA    1,DL
         1 002076   002105 601000 1                  TNZ     s:3771

      626     3770    1              F$DCB.CONT=FPT$WRITE_V.DVBYTE.CONT;

   3770  1 002077   200026 473500                    LDP3    FPT$,,AUTO
         1 002100   300003 236100                    LDQ     3,,PR3
         1 002101   000026 772000                    QRL     22
         1 002102   100064 676100                    ERQ     52,,PR1
         1 002103   000040 376007                    ANQ     32,DL
         1 002104   100064 656100                    ERSQ    52,,PR1

      627     3771    1           RETURN;

   3771  1 002105   000000 702200 xent               TSX2  ! X66_ARET

      628     3772                                                /*                                    */
      629     3773    1   RSTRPOS: F$DCB.RPOS='0'B;

   3773  1 002106   200006 470500       RSTRPOS      LDP0    JDCB$,,AUTO
         1 002107   000004 236000 2                  LDQ     4
         1 002110   000064 356100                    ANSQ    52,,PR0

      630     3774    1            IF B$JIT.ERR.CODE=%E$EOF THEN

   3774  1 002111   000000 471400 xsym               LDP1    B$JIT$
         1 002112   100012 236100                    LDQ     10,,PR1
         1 002113   377770 376007                    ANQ     131064,DL
         1 002114   000060 116007                    CMPQ    48,DL
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:111  
         1 002115   002122 601000 1                  TNZ     s:3776

      631     3775    1              B$JIT.ERR.CODE=%E$BOF;

   3775  1 002116   100012 236100                    LDQ     10,,PR1
         1 002117   000025 376000 2                  ANQ     21
         1 002120   000040 276007                    ORQ     32,DL
         1 002121   100012 756100                    STQ     10,,PR1

      632     3776    1           IF FPT$PRECORD_V.KEYR THEN

   3776  1 002122   200026 473500                    LDP3    FPT$,,AUTO
         1 002123   300000 236100                    LDQ     0,,PR3
         1 002124   200000 316007                    CANQ    65536,DL
         1 002125   002132 600000 1                  TZE     s:3778

      633     3777    1              B$PS1$->CHAR4=ADDR(F$DCB.CRECNO)->CHAR4;

   3777  1 002126   000000 474400 xsym               LDP4    B$PS1$
         1 002127   040100 100500                    MLR     fill='040'O
         1 002130   000071 000004                    ADSC9   57,,PR0                  cn=0,n=4
         1 002131   400000 000004                    ADSC9   0,,PR4                   cn=0,n=4

      634     3778    1           IF FPT$PRECORD_V.KEYR AND B$PS1$->UBIN36 = 0 THEN

   3778  1 002132   300000 236100                    LDQ     0,,PR3
         1 002133   200000 316007                    CANQ    65536,DL
         1 002134   002147 600000 1                  TZE     s:3780
         1 002135   000000 474400 xsym               LDP4    B$PS1$
         1 002136   000100 100500                    MLR     fill='000'O
         1 002137   400000 000004                    ADSC9   0,,PR4                   cn=0,n=4
         1 002140   200046 000004                    ADSC9   DIR+2,,AUTO              cn=0,n=4
         1 002141   200046 236100                    LDQ     DIR+2,,AUTO
         1 002142   000000 116003                    CMPQ    0,DU
         1 002143   002147 601000 1                  TNZ     s:3780

      635     3779    1              B$PS1$->UBIN36 = 1;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:112  

   3779  1 002144   000100 100400                    MLR     fill='000'O
         1 002145   000003 000004 xsym               ADSC9   B_VECTNIL+3              cn=0,n=4
         1 002146   400000 000004                    ADSC9   0,,PR4                   cn=0,n=4

      636     3780    1           GOTO ERR;

   3780  1 002147   002153 710000 1                  TRA     ERR

      637     3781    1   SETRPOS: F$DCB.RPOS='1'B;

   3781  1 002150   200006 470500       SETRPOS      LDP0    JDCB$,,AUTO
         1 002151   010000 236007                    LDQ     4096,DL
         1 002152   000064 256100                    ORSQ    52,,PR0

      638     3782    1   ERR:    ALTRETURN;

   3782  1 002153   000000 702200 xent  ERR          TSX2  ! X66_AALT

      639     3783                                                /*                                    */
      640     3784    1   LOSTDATA: F$DCB.EOP=FM_EOP(FPTCODE);

   3784  1 002154   200003 470500       LOSTDATA     LDP0    @FPTCODE,,AUTO
         1 002155   000000 720100                    LXL0    0,,PR0
         1 002156   200006 471500                    LDP1    JDCB$,,AUTO
         1 002157   000000 236010 xsym               LDQ     FM_EOP,X0
         1 002160   000033 736000                    QLS     27
         1 002161   100064 676100                    ERQ     52,,PR1
         1 002162   003000 376003                    ANQ     1536,DU
         1 002163   100064 656100                    ERSQ    52,,PR1

      641     3785    1           IF FPTCODE=FPTREAD THEN

   3785  1 002164   000000 235100                    LDA     0,,PR0
         1 002165   002172 601000 1                  TNZ     s:3788

      642     3786    1              B$JIT.ERR=ERRLD;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:113  

   3786  1 002166   000001 236000 0                  LDQ     ERRLD
         1 002167   000000 473400 xsym               LDP3    B$JIT$
         1 002170   300012 756100                    STQ     10,,PR3
         1 002171   002175 710000 1                  TRA     s:3789

      643     3787    1           ELSE
      644     3788    1              B$JIT.ERR=ERRRWLD;

   3788  1 002172   000000 236000 0                  LDQ     ERRRWLD
         1 002173   000000 473400 xsym               LDP3    B$JIT$
         1 002174   300012 756100                    STQ     10,,PR3

      645     3789    1           ALTRETURN;

   3789  1 002175   000000 702200 xent               TSX2  ! X66_AALT

      646     3790        /*E*   ERROR:  FMH-E$LD-2
      647     3791        *      MESSAGE:  Rewrite size discrepancy% for %UF%
      648     3792        *      MESSAGE1: An M$WRITE with REWRITE attempted to replace a record
      649     3793        *        %in %UF %with one of a different size.
      650     3794        *        It was truncated or extended to the original size.
      651     3795        */
      652     3796                                                /*                                    */
      653     3797    1   SEGERR: B$JIT.ERR=ERRFREC;

   3797  1 002176   000002 236000 0     SEGERR       LDQ     ERRFREC
         1 002177   000000 470400 xsym               LDP0    B$JIT$
         1 002200   000012 756100                    STQ     10,,PR0

      654     3798    1           DA=F$DCB.BFR.DA(1);

   3798  1 002201   200006 471500                    LDP1    JDCB$,,AUTO
         1 002202   100116 236100                    LDQ     78,,PR1
         1 002203   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 002204   200014 756100                    STQ     DA,,AUTO

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:114  
      655     3799    1           N=F$DCB.CRECX;

   3799  1 002205   100067 236100                    LDQ     55,,PR1
         1 002206   777777 376007                    ANQ     -1,DL
         1 002207   200022 756100                    STQ     N,,AUTO

      656     3800    1           CALL FMB$LOGERR(%E$FREC,12,8,DA,BUF$,0,1,N);

   3800  1 002210   200022 633500                    EPPR3   N,,AUTO
         1 002211   200055 453500                    STP3    DIR+9,,AUTO
         1 002212   000002 236000 2                  LDQ     2
         1 002213   200054 756100                    STQ     DIR+8,,AUTO
         1 002214   000003 236000 2                  LDQ     3
         1 002215   200053 756100                    STQ     DIR+7,,AUTO
         1 002216   200010 634500                    EPPR4   BUF$,,AUTO
         1 002217   200052 454500                    STP4    DIR+6,,AUTO
         1 002220   200014 635500                    EPPR5   DA,,AUTO
         1 002221   200051 455500                    STP5    DIR+5,,AUTO
         1 002222   000023 236000 2                  LDQ     19
         1 002223   200050 756100                    STQ     DIR+4,,AUTO
         1 002224   000030 237000 2                  LDAQ    24
         1 002225   200046 757100                    STAQ    DIR+2,,AUTO
         1 002226   200046 630500                    EPPR0   DIR+2,,AUTO
         1 002227   000026 631400 xsym               EPPR1   B_VECTNIL+22
         1 002230   000000 701000 xent               TSX1    FMB$LOGERR
         1 002231   000000 011000                    NOP     0

      657     3801    1           ALTRETURN;

   3801  1 002232   000000 702200 xent               TSX2  ! X66_AALT

      658     3802        /*E*   ERROR:  FMH-E$FREC-2
      659     3803        *       MESSAGE: Inconsistency in record pointers% in file %FN%
      660     3804        *       MESSAGE1: This record is inaccessible
      661     3805        */
      662     3806    1   NOCONT: B$JIT.ERR=ERRNOCONT;

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:115  
   3806  1 002233   000007 236000 0     NOCONT       LDQ     ERRNOCONT
         1 002234   000000 470400 xsym               LDP0    B$JIT$
         1 002235   000012 756100                    STQ     10,,PR0

      663     3807    1           ALTRETURN;

   3807  1 002236   000000 702200 xent               TSX2  ! X66_AALT

      664     3808        /*E*   ERROR:  FMH-E$NOCONT-2
      665     3809        */
      666     3810        %EJECT;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:116  
      667     3811        /*F*   NAME:     CHKEOP
      668     3812               PURPOSE:  To check EOP for 1 (read) or 2 (precord) and position
      669     3813                         appropriately.
      670     3814               DESCRIPTION:  We need to check the EOP (last operation) and
      671     3815               position to the correct record if the current operation is an
      672     3816               M$WRITE REWRITE or M$DELREC.
      673     3817
      674     3818               If the last operation was a read, position to the start of the
      675     3819               current record.
      676     3820
      677     3821               If it was a precord, try to position to the 'next' record.
      678     3822               If the prior precord really positioned to a record
      679     3823               (F$DCB.RPOS='1'B), then we'll actually position to the current
      680     3824               record. If not (F$DCB.RPOS='0'B), then we'll try to position
      681     3825               to the next record.
      682     3826
      683     3827               All other prior operations are illegal.                   */
      684     3828        /**/
      685     3829    1   CHKEOP: PROC ALTRET;

   3829  1 002237   200030 741300       CHKEOP       STX1  ! FPT$+2,,AUTO

      686     3830    3           DO CASE(EOP);

   3830  1 002240   200024 235100                    LDA     EOP,,AUTO
         1 002241   000003 115007                    CMPA    3,DL
         1 002242   002244 602005 1                  TNC     s:3830+4,AL
         1 002243   002255 710000 1                  TRA     s:3836
         1 002244   002255 710000 1                  TRA     s:3836
         1 002245   002247 710000 1                  TRA     s:3832
         1 002246   002252 710000 1                  TRA     s:3834

      687     3831    3            CASE(1);                       /* READ                               */

      688     3832    3              CALL BEGREC ALTRET(ERR);     /* FIND BEGINNING OF CURRENT RECORD   */

   3832  1 002247   003575 701000 1                  TSX1    BEGREC
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:117  
         1 002250   002264 702000 1                  TSX2    ERR
         1 002251   002262 710000 1                  TRA     s:3839

      689     3833    3            CASE(2);                       /* PRECORD                            */

      690     3834    3              CALL NXTREC ALTRET(ERR);     /* GET NEXT RECORD                    */

   3834  1 002252   003546 701000 1                  TSX1    NXTREC
         1 002253   002264 702000 1                  TSX2    ERR
         1 002254   002262 710000 1                  TRA     s:3839

      691     3835    3            CASE(ELSE);                    /* ALL ELSE IS ILLEGAL                */

      692     3836    3              B$JIT.ERR=ERRWRDEL;

   3836  1 002255   000004 236000 0                  LDQ     ERRWRDEL
         1 002256   000000 470400 xsym               LDP0    B$JIT$
         1 002257   000012 756100                    STQ     10,,PR0

      693     3837    3              ALTRETURN;

   3837  1 002260   200030 221300                    LDX1  ! FPT$+2,,AUTO
         1 002261   000000 702211                    TSX2  ! 0,X1

      694     3838    3            END;

      695     3839    2           RETURN;

   3839  1 002262   200030 221300                    LDX1  ! FPT$+2,,AUTO
         1 002263   000001 702211                    TSX2  ! 1,X1

      696     3840    2   ERR:    ALTRETURN;

   3840  1 002264   200030 221300       ERR          LDX1  ! FPT$+2,,AUTO
         1 002265   000000 702211                    TSX2  ! 0,X1

      697     3841    2   END CHKEOP;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:118  
      698     3842        /*E*   ERROR:  FMH-E$WRDEL-2
      699     3843        *      MESSAGE:  Illegal M$WRITE or M$DELREC on consecutive file %FN
      700     3844        *       MESSAGE1: An M$WRITE REWRITE or an M$DELREC to a consecutive
      701     3845        file is illegal unless the previous operation was a successful
      702     3846        M$READ or M$PRECORD
      703     3847        */
      704     3848        %EJECT;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:119  
      705     3849        /*F*   NAME:     REWIND
      706     3850               PURPOSE:  Position to beginning of file.
      707     3851               DESCRIPTION:  Read granule zero into F$DCB.BFR(1) and set
      708     3852               F$DCB.RPOS, F$DCB.CRECX, and F$DCB.CRECNO so that a subsequent
      709     3853               read will get the first record in the file.
      710     3854        */
      711     3855        /**/
      712     3856    1   REWIND: PROC ALTRET;

   3856  1 002266   200030 741300       REWIND       STX1  ! FPT$+2,,AUTO

      713     3857    2          CALL FMD$REDBUF(BUF$,1,FM_FRZERO,0,0) ALTRET(ERR); /* Read FDA */

   3857  1 002267   000003 236000 2                  LDQ     3
         1 002270   200052 756100                    STQ     DIR+6,,AUTO
         1 002271   000032 237000 2                  LDAQ    26
         1 002272   200050 757100                    STAQ    DIR+4,,AUTO
         1 002273   000002 236000 2                  LDQ     2
         1 002274   200047 756100                    STQ     DIR+3,,AUTO
         1 002275   200010 630500                    EPPR0   BUF$,,AUTO
         1 002276   200046 450500                    STP0    DIR+2,,AUTO
         1 002277   200046 630500                    EPPR0   DIR+2,,AUTO
         1 002300   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 002301   000000 701000 xent               TSX1    FMD$REDBUF
         1 002302   002313 702000 1                  TSX2    ERR

      714     3858    2          F$DCB.CRECX=1024;

   3858  1 002303   002000 220003                    LDX0    1024,DU
         1 002304   200006 470500                    LDP0    JDCB$,,AUTO
         1 002305   000067 440100                    SXL0    55,,PR0

      715     3859    2          F$DCB.RPOS='0'B;

   3859  1 002306   000004 236000 2                  LDQ     4
         1 002307   000064 356100                    ANSQ    52,,PR0

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:120  
      716     3860    2          F$DCB.CRECNO=0;

   3860  1 002310   000071 450100                    STZ     57,,PR0

      717     3861    2          RETURN;

   3861  1 002311   200030 221300                    LDX1  ! FPT$+2,,AUTO
         1 002312   000001 702211                    TSX2  ! 1,X1

      718     3862    2   ERR:   ALTRETURN;

   3862  1 002313   200030 221300       ERR          LDX1  ! FPT$+2,,AUTO
         1 002314   000000 702211                    TSX2  ! 0,X1

      719     3863    2   END REWIND;
      720     3864        %EJECT;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:121  
      721     3865        /*F*   NAME:     PFIL_EOF
      722     3866               PURPOSE:  Position to end of file.
      723     3867               DESCRIPTION:  Read the last granule of the file and set up
      724     3868               DCB information to point to one record past the last record
      725     3869               in the file.
      726     3870        */
      727     3871        /**/
      728     3872    1   PFIL_EOF: PROC ALTRET;

   3872  1 002315   200030 741300       PFIL_EOF     STX1  ! FPT$+2,,AUTO

      729     3873    2          DA=CFU$->FM$CFU.LDA;

   3873  1 002316   200007 470500                    LDP0    CFU$,,AUTO
         1 002317   000006 235100                    LDA     6,,PR0
         1 002320   000007 236100                    LDQ     7,,PR0
         1 002321   000033 773000                    LRL     27
         1 002322   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 002323   200014 756100                    STQ     DA,,AUTO

      730     3874    2          CALL FMD$REDBUF(BUF$,1,DA,0,0) ALTRET(ERR); /* Read LDA    */

   3874  1 002324   000003 236000 2                  LDQ     3
         1 002325   200052 756100                    STQ     DIR+6,,AUTO
         1 002326   200051 756100                    STQ     DIR+5,,AUTO
         1 002327   200014 631500                    EPPR1   DA,,AUTO
         1 002330   200050 451500                    STP1    DIR+4,,AUTO
         1 002331   000002 236000 2                  LDQ     2
         1 002332   200047 756100                    STQ     DIR+3,,AUTO
         1 002333   200010 633500                    EPPR3   BUF$,,AUTO
         1 002334   200046 453500                    STP3    DIR+2,,AUTO
         1 002335   200046 630500                    EPPR0   DIR+2,,AUTO
         1 002336   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 002337   000000 701000 xent               TSX1    FMD$REDBUF
         1 002340   002363 702000 1                  TSX2    ERR

      731     3875    2          F$DCB.CRECX=FM$GRAN.NAVX+FM$GRAN.AVAIL-1;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:122  

   3875  1 002341   200010 470500                    LDP0    BUF$,,AUTO
         1 002342   000001 236100                    LDQ     1,,PR0
         1 002343   001777 376007                    ANQ     1023,DL
         1 002344   200046 756100                    STQ     DIR+2,,AUTO
         1 002345   000001 236100                    LDQ     1,,PR0
         1 002346   000022 772000                    QRL     18
         1 002347   200046 036100                    ADLQ    DIR+2,,AUTO
         1 002350   777777 620006                    EAX0    -1,QL
         1 002351   200006 471500                    LDP1    JDCB$,,AUTO
         1 002352   100067 440100                    SXL0    55,,PR1

      732     3876    2          F$DCB.CRECNO=CFU$->FM$CFU.NRECS+1;

   3876  1 002353   200007 473500                    LDP3    CFU$,,AUTO
         1 002354   300001 235100                    LDA     1,,PR3
         1 002355   000001 035007                    ADLA    1,DL
         1 002356   100071 755100                    STA     57,,PR1

      733     3877    2          F$DCB.RPOS='1'B;

   3877  1 002357   010000 236007                    LDQ     4096,DL
         1 002360   100064 256100                    ORSQ    52,,PR1

      734     3878    2          RETURN;

   3878  1 002361   200030 221300                    LDX1  ! FPT$+2,,AUTO
         1 002362   000001 702211                    TSX2  ! 1,X1

      735     3879    2   ERR:   ALTRETURN;

   3879  1 002363   200030 221300       ERR          LDX1  ! FPT$+2,,AUTO
         1 002364   000000 702211                    TSX2  ! 0,X1

      736     3880    2   END PFIL_EOF;
      737     3881        %EJECT;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:123  
      738     3882        /*F*   NAME:   FMH$LOOKAHD
      739     3883        *      PURPOSE:  Position to the next record in the forward
      740     3884        *                direction, and set DCB.DVBYTE to the CTL field
      741     3885        *                for the record.                                             */
      742     3886                                                /*                                    */
      743     3887                                                /*                                    */
      744     3888                                                /*                                    */
      745     3889        /*D*   NAME:   FMH$LOOKAHD
      746     3890        *      CALL:   CALL FMH$LOOKAHD ALTRET(LOC);
      747     3891        *      OUTPUT: DCB.DVBYTE set to the CTL field of the next record            */
      748     3892                                                /*                                    */
      749     3893    1   FMH$LOOKAHD: ENTRY ALTRET;

   3893  1 002365   000000 700200 xent  FMH$LOOKAHD  TSX0  ! X66_AUTO_3
         1 002366   000056 000003                    ZERO    46,3

      750     3894                                                /*                                    */
      751     3895    1           JDCB$=B$JIT.DCB$;               /* POINTER TO CURRENT DCB             */

   3895  1 002367   000000 470400 xsym               LDP0    B$JIT$
         1 002370   000232 236100                    LDQ     154,,PR0
         1 002371   200006 756100                    STQ     JDCB$,,AUTO

      752     3896    1           CFU$=F$DCB.CFU$;                /* POINTER TO CURRENT CFU             */

   3896  1 002372   200006 471500                    LDP1    JDCB$,,AUTO
         1 002373   100066 236100                    LDQ     54,,PR1
         1 002374   200007 756100                    STQ     CFU$,,AUTO

      753     3897    1           CALL SETUP ALTRET(ERR);

   3897  1 002375   003720 701000 1                  TSX1    SETUP
         1 002376   002153 702000 1                  TSX2    ERR

      754     3898                                                /*                                    */
      755     3899    1           CALL NXTREC ALTRET(SETRPOS);    /* MOVE TO NEXT RECORD                */

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:124  
   3899  1 002377   003546 701000 1                  TSX1    NXTREC
         1 002400   002150 702000 1                  TSX2    SETRPOS

      756     3900    1           F$DCB.RPOS='1'B;                /* NEXT READ WILL GET THIS RECORD     */

   3900  1 002401   200006 470500                    LDP0    JDCB$,,AUTO
         1 002402   010000 236007                    LDQ     4096,DL
         1 002403   000064 256100                    ORSQ    52,,PR0

      757     3901    1           F$DCB.DVBYTE=FM$CON.CTL;

   3901  1 002404   200011 471500                    LDP1    SEG$,,AUTO
         1 002405   100000 236100                    LDQ     0,,PR1
         1 002406   000004 736000                    QLS     4
         1 002407   000003 676100                    ERQ     3,,PR0
         1 002410   776000 376003                    ANQ     -1024,DU
         1 002411   000003 656100                    ERSQ    3,,PR0

      758     3902    1           RETURN;

   3902  1 002412   000000 702200 xent               TSX2  ! X66_ARET

      759     3903        %EJECT;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:125  
      760     3904        /*F*    NAME:    FMH$TRUNC
      761     3905        *       PURPOSE: Force the next write to allocate another granule.
      762     3906        */
      763     3907        /**/
      764     3908        /**/
      765     3909        /**/
      766     3910        /*D*    NAME:    FMH$TRUNC
      767     3911        *       CALL:    CALL FMH$TRUNC;
      768     3912        *       DESCRIPTION:  Makes the current granule look full so that
      769     3913        *         the next write will allocate a new granule.
      770     3914        */
      771     3915        /**/
      772     3916    1   FMH$TRUNC: ENTRY ALTRET;

   3916  1 002413   000000 700200 xent  FMH$TRUNC    TSX0  ! X66_AUTO_3
         1 002414   000056 000003                    ZERO    46,3

      773     3917        /**/
      774     3918    1           JDCB$=B$JIT.DCB$;

   3918  1 002415   000000 470400 xsym               LDP0    B$JIT$
         1 002416   000232 236100                    LDQ     154,,PR0
         1 002417   200006 756100                    STQ     JDCB$,,AUTO

      775     3919    1           CFU$=F$DCB.CFU$;

   3919  1 002420   200006 471500                    LDP1    JDCB$,,AUTO
         1 002421   100066 236100                    LDQ     54,,PR1
         1 002422   200007 756100                    STQ     CFU$,,AUTO

      776     3920    1           CALL SETUP ALTRET(ERR);

   3920  1 002423   003720 701000 1                  TSX1    SETUP
         1 002424   002153 702000 1                  TSX2    ERR

      777     3921    1           FM$GRAN.NAVX=FM$GRAN.NAVX+FM$GRAN.AVAIL;

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:126  
   3921  1 002425   200010 470500                    LDP0    BUF$,,AUTO
         1 002426   000001 236100                    LDQ     1,,PR0
         1 002427   001777 376007                    ANQ     1023,DL
         1 002430   200046 756100                    STQ     DIR+2,,AUTO
         1 002431   000001 236100                    LDQ     1,,PR0
         1 002432   000022 772000                    QRL     18
         1 002433   200046 036100                    ADLQ    DIR+2,,AUTO
         1 002434   000000 620006                    EAX0    0,QL
         1 002435   000001 740100                    STX0    1,,PR0

      778     3922    1           FM$GRAN.AVAIL=0;

   3922  1 002436   200010 470500                    LDP0    BUF$,,AUTO
         1 002437   000034 236000 2                  LDQ     28
         1 002440   000001 356100                    ANSQ    1,,PR0

      779     3923    1           F$DCB.BFR.BUFUP(1)='1'B;

   3923  1 002441   200006 470500                    LDP0    JDCB$,,AUTO
         1 002442   400000 236003                    LDQ     -131072,DU
         1 002443   000116 256100                    ORSQ    78,,PR0

      780     3924    1           RETURN;

   3924  1 002444   000000 702200 xent               TSX2  ! X66_ARET

      781     3925        %EJECT;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:127  
      782     3926        /*F*    NAME:   FMH$SYMB
      783     3927        *       PURPOSE:  Provide M$WRITE service for ORG=SYMB files */
      784     3928        /**/
      785     3929        /**/
      786     3930        /**/
      787     3931        /*D*    NAME:   FMH$SYMB
      788     3932        *       CALL:   CALL FMH$SYMB(FPTCODE,FPT,VFC) ALTRET(LOC);
      789     3933        *       INPUT:  FPTCODE - FPTWRITE
      790     3934        *               FPT - The FPT for this operation.
      791     3935        *               VFC - The VFC for this record
      792     3936        *       DESCRIPTION:  The record is written just like a
      793     3937        *           consecutive file record with the following differences:
      794     3938        *           1 - The records are not spanned across granules
      795     3939        *           2 - Rewrite is not allowed
      796     3940        *           3 - Compression and encryption are ignored
      797     3941        *           4 - The file must be positioned at EOF
      798     3942        */
      799     3943    1   FMH$SYMB: ENTRY(FPTCODE,PARMFPT,VFC) ALTRET;

   3943  1 002445   000000 700200 xent  FMH$SYMB     TSX0  ! X66_AUTO_3
         1 002446   000056 000003                    ZERO    46,3

      800     3944        /**/
      801     3945    1           FPT$=ADDR(PARMFPT);

   3945  1 002447   200004 236100                    LDQ     @PARMFPT,,AUTO
         1 002450   200026 756100                    STQ     FPT$,,AUTO

      802     3946    2           DO CASE(FPTCODE);

   3946  1 002451   200003 470500                    LDP0    @FPTCODE,,AUTO
         1 002452   000000 235100                    LDA     0,,PR0
         1 002453   000024 115007                    CMPA    20,DL
         1 002454   002456 602005 1                  TNC     s:3946+5,AL
         1 002455   002503 710000 1                  TRA     s:3958
         1 002456   002503 710000 1                  TRA     s:3958
         1 002457   002502 710000 1                  TRA     s:3956
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:128  
         1 002460   002503 710000 1                  TRA     s:3958
         1 002461   002503 710000 1                  TRA     s:3958
         1 002462   002503 710000 1                  TRA     s:3958
         1 002463   002503 710000 1                  TRA     s:3958
         1 002464   002503 710000 1                  TRA     s:3958
         1 002465   002503 710000 1                  TRA     s:3958
         1 002466   002503 710000 1                  TRA     s:3958
         1 002467   002503 710000 1                  TRA     s:3958
         1 002470   002502 710000 1                  TRA     s:3956
         1 002471   002502 710000 1                  TRA     s:3956
         1 002472   002503 710000 1                  TRA     s:3958
         1 002473   002502 710000 1                  TRA     s:3956
         1 002474   002503 710000 1                  TRA     s:3958
         1 002475   002502 710000 1                  TRA     s:3956
         1 002476   002502 710000 1                  TRA     s:3956
         1 002477   002502 710000 1                  TRA     s:3956
         1 002500   002502 710000 1                  TRA     s:3956
         1 002501   002502 710000 1                  TRA     s:3956

      803     3947    2            CASE(MFC_WRITE,            /* WRITE 9 -> 8 XLATE         */

      804     3948    2                 MFC_WRUR,             /* WRITE UR UPPER AND LOWER   */
      805     3949    2                 MFC_WRURUC,           /* WRITE UR UPPER ONLY        */
      806     3950    2                 MFC_URLC,             /* WRITE UR LOWER ONLY        */
      807     3951    2                 MFC_NATL,             /* WRITE NATL XLATE, CUST MADE*/
      808     3952    2                 MFC_APL,              /* WRITE AFTER XLATE FOR APL  */
      809     3953    2                 MFC_NOX,              /* WRITE NO XLATE, PASS THRU  */
      810     3954    2                 MFC_WRBIN,            /* WRITE BINARY, PASS THRU    */
      811     3955    2                 MFC_TRUOVRPRT);       /* WRITE OVERPRINT, PASS THRU */
      812     3956    2              GOTO WRSYMB;

   3956  1 002502   002504 710000 1                  TRA     WRSYMB

      813     3957    2            CASE(ELSE);

      814     3958    2              GOTO CPMME;

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:129  
   3958  1 002503   000004 710000 1                  TRA     CPMME

      815     3959    2            END;

      816     3960        /**/
      817     3961    1   WRSYMB: JDCB$=B$JIT.DCB$;

   3961  1 002504   000000 471400 xsym  WRSYMB       LDP1    B$JIT$
         1 002505   100232 236100                    LDQ     154,,PR1
         1 002506   200006 756100                    STQ     JDCB$,,AUTO

      818     3962    1           CFU$=F$DCB.CFU$;

   3962  1 002507   200006 473500                    LDP3    JDCB$,,AUTO
         1 002510   300066 236100                    LDQ     54,,PR3
         1 002511   200007 756100                    STQ     CFU$,,AUTO

      819     3963    1           CALL SETUP ALTRET(ERR);

   3963  1 002512   003720 701000 1                  TSX1    SETUP
         1 002513   002153 702000 1                  TSX2    ERR

      820     3964    2           IF FPT$WRITE_V.REWRITE THEN DO;

   3964  1 002514   200026 470500                    LDP0    FPT$,,AUTO
         1 002515   000000 236100                    LDQ     0,,PR0
         1 002516   000100 316007                    CANQ    64,DL
         1 002517   002524 600000 1                  TZE     s:3968

      821     3965    2              B$JIT.ERR=ERRREWRITE;

   3965  1 002520   000011 236000 0                  LDQ     ERRREWRITE
         1 002521   000000 471400 xsym               LDP1    B$JIT$
         1 002522   100012 756100                    STQ     10,,PR1

      822     3966    2              GOTO ERR;

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:130  
   3966  1 002523   002153 710000 1                  TRA     ERR

      823     3967    2              END;
      824     3968    1           CALL NXTREC ALTRET(SYMEOF);

   3968  1 002524   003546 701000 1                  TSX1    NXTREC
         1 002525   002535 702000 1                  TSX2    SYMEOF

      825     3969    1           F$DCB.RPOS='1'B;

   3969  1 002526   200006 470500                    LDP0    JDCB$,,AUTO
         1 002527   010000 236007                    LDQ     4096,DL
         1 002530   000064 256100                    ORSQ    52,,PR0

      826     3970    1           B$JIT.ERR=ERRDELFWD;

   3970  1 002531   000010 236000 0                  LDQ     ERRDELFWD
         1 002532   000000 471400 xsym               LDP1    B$JIT$
         1 002533   100012 756100                    STQ     10,,PR1

      827     3971    1           GOTO ERR;

   3971  1 002534   002153 710000 1                  TRA     ERR

      828     3972    1   SYMEOF: IF B$JIT.ERR.CODE~=%E$EOF THEN GOTO ERR;

   3972  1 002535   000000 470400 xsym  SYMEOF       LDP0    B$JIT$
         1 002536   000012 236100                    LDQ     10,,PR0
         1 002537   377770 376007                    ANQ     131064,DL
         1 002540   000060 116007                    CMPQ    48,DL
         1 002541   002153 601000 1                  TNZ     ERR

      829     3973    1           B$JIT.ERR='0'B;

   3973  1 002542   000012 450100                    STZ     10,,PR0

      830     3974    1           IF ADDR(VFC)=ADDR(NIL) THEN
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:131  

   3974  1 002543   200005 236100                    LDQ     @VFC,,AUTO
         1 002544   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 002545   002550 601000 1                  TNZ     s:3977

      831     3975    1              I=0;

   3975  1 002546   200023 450100                    STZ     I,,AUTO
         1 002547   002552 710000 1                  TRA     s:3978

      832     3976    1           ELSE
      833     3977    1              I=1;

   3977  1 002550   000001 235007                    LDA     1,DL
         1 002551   200023 755100                    STA     I,,AUTO

      834     3978    1           N=FM$GRAN.AVAIL*4-4-I;

   3978  1 002552   200010 471500                    LDP1    BUF$,,AUTO
         1 002553   100001 236100                    LDQ     1,,PR1
         1 002554   000002 736000                    QLS     2
         1 002555   007774 376007                    ANQ     4092,DL
         1 002556   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 002557   000001 036007                    ADLQ    1,DL
         1 002560   200023 036100                    ADLQ    I,,AUTO
         1 002561   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 002562   000003 136007                    SBLQ    3,DL
         1 002563   200022 756100                    STQ     N,,AUTO

      835     3979    2           IF N<F$DCB.UBYTES THEN DO;

   3979  1 002564   200006 473500                    LDP3    JDCB$,,AUTO
         1 002565   002570 604000 1                  TMI     s:3980
         1 002566   300076 116100                    CMPQ    62,,PR3
         1 002567   002714 603000 1                  TRC     s:4003

      836     3980    2              CALL FSE$GETGRAN(DA) ALTRET(ERR); /* Get a granule                 */
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:132  

   3980  1 002570   200014 634500                    EPPR4   DA,,AUTO
         1 002571   200046 454500                    STP4    DIR+2,,AUTO
         1 002572   200046 630500                    EPPR0   DIR+2,,AUTO
         1 002573   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 002574   000000 701000 xent               TSX1    FSE$GETGRAN
         1 002575   002153 702000 1                  TSX2    ERR

      837     3981    2              FM$GRAN.KEYCNT = F$DCB.PGINGRAN;

   3981  1 002576   200006 470500                    LDP0    JDCB$,,AUTO
         1 002577   200010 471500                    LDP1    BUF$,,AUTO
         1 002600   000102 236100                    LDQ     66,,PR0
         1 002601   100002 552104                    STBQ    2,'04'O,PR1

      838     3982    2              F$DCB.PGINGRAN = 0;

   3982  1 002602   000000 236003                    LDQ     0,DU
         1 002603   000102 552104                    STBQ    66,'04'O,PR0

      839     3983    3              IF NOT FM$GRAN.NOTLDA THEN DO;

   3983  1 002604   200010 471500                    LDP1    BUF$,,AUTO
         1 002605   100002 236100                    LDQ     2,,PR1
         1 002606   400000 316007                    CANQ    -131072,DL
         1 002607   002614 601000 1                  TNZ     s:3987

      840     3984    3                 FM$GRAN.NOTLDA='1'B;

   3984  1 002610   400000 236007                    LDQ     -131072,DL
         1 002611   100002 256100                    ORSQ    2,,PR1

      841     3985    3                 F$DCB.BFR.BUFUP(1)='1'B;

   3985  1 002612   400000 236003                    LDQ     -131072,DU
         1 002613   000116 256100                    ORSQ    78,,PR0

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:133  
      842     3986    3                 END;

      843     3987    2              CALL FMD$FLSHBUFNR(1);       /* WRITE OUT WHAT IS THERE            */

   3987  1 002614   000002 630400 2                  EPPR0   2
         1 002615   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 002616   000000 701000 xent               TSX1    FMD$FLSHBUFNR
         1 002617   000000 011000                    NOP     0

      844     3988    2              CALL FMD$GETBUF(1,1,BUF$);   /* GET NEW BUFFER                     */

   3988  1 002620   200010 630500                    EPPR0   BUF$,,AUTO
         1 002621   200050 450500                    STP0    DIR+4,,AUTO
         1 002622   000006 237000 2                  LDAQ    6
         1 002623   200046 757100                    STAQ    DIR+2,,AUTO
         1 002624   200046 630500                    EPPR0   DIR+2,,AUTO
         1 002625   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 002626   000000 701000 xent               TSX1    FMD$GETBUF
         1 002627   000000 011000                    NOP     0

      845     3989    2              FM$GRAN='0'B;

   3989  1 002630   200010 470500                    LDP0    BUF$,,AUTO
         1 002631   000100 100400                    MLR     fill='000'O
         1 002632   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         1 002633   000000 000024                    ADSC9   0,,PR0                   cn=0,n=20

      846     3990    2              FM$GRAN.STAMP.HASH=F$DCB.HASH;

   3990  1 002634   200006 470500                    LDP0    JDCB$,,AUTO
         1 002635   200010 471500                    LDP1    BUF$,,AUTO
         1 002636   000073 236100                    LDQ     59,,PR0
         1 002637   100000 552170                    STBQ    0,'70'O,PR1

      847     3991    2              FM$GRAN.STAMP.GMOD=DA;

   3991  1 002640   200010 471500                    LDP1    BUF$,,AUTO
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:134  
         1 002641   200014 236100                    LDQ     DA,,AUTO
         1 002642   100000 552104                    STBQ    0,'04'O,PR1

      848     3992    2              FM$GRAN.NAVX=3;

   3992  1 002643   000003 220003                    LDX0    3,DU
         1 002644   200010 471500                    LDP1    BUF$,,AUTO
         1 002645   100001 740100                    STX0    1,,PR1

      849     3993    2              FM$GRAN.AVAIL=1024-FM$GRAN.NAVX;

   3993  1 002646   200010 471500                    LDP1    BUF$,,AUTO
         1 002647   100001 236100                    LDQ     1,,PR1
         1 002650   000022 772000                    QRL     18
         1 002651   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 002652   002001 036007                    ADLQ    1025,DL
         1 002653   100001 676100                    ERQ     1,,PR1
         1 002654   001777 376007                    ANQ     1023,DL
         1 002655   100001 656100                    ERSQ    1,,PR1

      850     3994    2              N=FM$GRAN.AVAIL*4-4-I;

   3994  1 002656   200010 471500                    LDP1    BUF$,,AUTO
         1 002657   100001 236100                    LDQ     1,,PR1
         1 002660   000002 736000                    QLS     2
         1 002661   007774 376007                    ANQ     4092,DL
         1 002662   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 002663   000001 036007                    ADLQ    1,DL
         1 002664   200023 036100                    ADLQ    I,,AUTO
         1 002665   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 002666   000003 136007                    SBLQ    3,DL
         1 002667   200022 756100                    STQ     N,,AUTO

      851     3995    2              FM$GRAN.ORG=F$DCB.ORG;

   3995  1 002670   000032 236100                    LDQ     26,,PR0
         1 002671   000021 772000                    QRL     17
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:135  
         1 002672   100001 676100                    ERQ     1,,PR1
         1 002673   036000 376007                    ANQ     15360,DL
         1 002674   100001 656100                    ERSQ    1,,PR1

      852     3996    2              F$DCB.BFR.DA(1)=DA;

   3996  1 002675   200014 236100                    LDQ     DA,,AUTO
         1 002676   000116 552134                    STBQ    78,'34'O,PR0

      853     3997    2              F$DCB.BFR.BUFUP(1)='1'B;

   3997  1 002677   400000 236003                    LDQ     -131072,DU
         1 002700   000116 256100                    ORSQ    78,,PR0

      854     3998    2              F$DCB.BFR.SCRUB(1)='1'B;

   3998  1 002701   200000 236003                    LDQ     65536,DU
         1 002702   000116 256100                    ORSQ    78,,PR0

      855     3999    2              CFU$->FM$CFU.LDA=DA;

   3999  1 002703   200007 471500                    LDP1    CFU$,,AUTO
         1 002704   000100 101500                    MRL     fill='000'O
         1 002705   200014 000004                    ADSC9   DA,,AUTO                 cn=0,n=4
         1 002706   100006 400003                    ADSC9   6,,PR1                   cn=2,n=3

      856     4000    2              F$DCB.CRECX=1023;

   4000  1 002707   001777 221003                    LDX1    1023,DU
         1 002710   000067 441100                    SXL1    55,,PR0

      857     4001    2              SEG$=PINCRW(BUF$,1023);

   4001  1 002711   200010 236100                    LDQ     BUF$,,AUTO
         1 002712   001777 036003                    ADLQ    1023,DU
         1 002713   200011 756100                    STQ     SEG$,,AUTO

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:136  
      858     4002    2              END;

      859     4003    1           F$DCB.CRECNO=CFU$->FM$CFU.NRECS+1; /* CURRENT REC #                   */

   4003  1 002714   200007 470500                    LDP0    CFU$,,AUTO
         1 002715   200006 471500                    LDP1    JDCB$,,AUTO
         1 002716   000001 235100                    LDA     1,,PR0
         1 002717   000001 035007                    ADLA    1,DL
         1 002720   100071 755100                    STA     57,,PR1

      860     4004    1           GX=FM$GRAN.NAVX;                /* INSERTION INDEX                    */

   4004  1 002721   200010 473500                    LDP3    BUF$,,AUTO
         1 002722   300001 236100                    LDQ     1,,PR3
         1 002723   000022 772000                    QRL     18
         1 002724   200016 756100                    STQ     GX,,AUTO

      861     4005    1           G$=PINCRW(BUF$,GX);

   4005  1 002725   000022 736000                    QLS     18
         1 002726   200010 036100                    ADLQ    BUF$,,AUTO
         1 002727   200017 756100                    STQ     G$,,AUTO

      862     4006    2           IF I~=0 THEN DO;                /* There is a VFC                     */

   4006  1 002730   200023 235100                    LDA     I,,AUTO
         1 002731   002742 600000 1                  TZE     s:4010

      863     4007    2              G$->CHAR1=VFC;

   4007  1 002732   200005 474500                    LDP4    @VFC,,AUTO
         1 002733   200017 475500                    LDP5    G$,,AUTO
         1 002734   040100 100500                    MLR     fill='040'O
         1 002735   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
         1 002736   500000 000001                    ADSC9   0,,PR5                   cn=0,n=1

      864     4008    2              G$=PINCRC(G$,1);
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:137  

   4008  1 002737   200017 236100                    LDQ     G$,,AUTO
         1 002740   200000 036007                    ADLQ    65536,DL
         1 002741   200017 756100                    STQ     G$,,AUTO

      865     4009    2              END;

      866     4010    1           IF N>F$DCB.UBYTES THEN

   4010  1 002742   100076 236100                    LDQ     62,,PR1
         1 002743   002747 604000 1                  TMI     s:4012
         1 002744   200022 116100                    CMPQ    N,,AUTO
         1 002745   002747 605000 1                  TPL     s:4012

      867     4011    1              N=F$DCB.UBYTES;

   4011  1 002746   200022 756100                    STQ     N,,AUTO

      868     4012    1           IF F$DCB.WIDTH > 0 AND

   4012  1 002747   100004 236100                    LDQ     4,,PR1
         1 002750   000777 316007                    CANQ    511,DL
         1 002751   002763 600000 1                  TZE     s:4018
         1 002752   200026 473500                    LDP3    FPT$,,AUTO
         1 002753   300003 236100                    LDQ     3,,PR3
         1 002754   020000 316003                    CANQ    8192,DU
         1 002755   002763 601000 1                  TNZ     s:4018

      869     4013    2              (NOT FPT$WRITE_V.DVBYTE.TRANS) THEN DO;

      870     4014    2              IF N > F$DCB.WIDTH THEN

   4014  1 002756   100004 236100                    LDQ     4,,PR1
         1 002757   000777 376007                    ANQ     511,DL
         1 002760   200022 116100                    CMPQ    N,,AUTO
         1 002761   002763 605000 1                  TPL     s:4018

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:138  
      871     4015    2                 N=F$DCB.WIDTH;

   4015  1 002762   200022 756100                    STQ     N,,AUTO

      872     4016    2              END;

      873     4017
      874     4018    2           DO CASE(FPTCODE);

   4018  1 002763   200003 473500                    LDP3    @FPTCODE,,AUTO
         1 002764   300000 235100                    LDA     0,,PR3
         1 002765   000024 115007                    CMPA    20,DL
         1 002766   002770 602005 1                  TNC     s:4018+5,AL
         1 002767   003110 710000 1                  TRA     s:4043
         1 002770   003110 710000 1                  TRA     s:4043
         1 002771   003036 710000 1                  TRA     s:4026
         1 002772   003110 710000 1                  TRA     s:4043
         1 002773   003110 710000 1                  TRA     s:4043
         1 002774   003110 710000 1                  TRA     s:4043
         1 002775   003110 710000 1                  TRA     s:4043
         1 002776   003110 710000 1                  TRA     s:4043
         1 002777   003110 710000 1                  TRA     s:4043
         1 003000   003110 710000 1                  TRA     s:4043
         1 003001   003110 710000 1                  TRA     s:4043
         1 003002   003014 710000 1                  TRA     s:4020
         1 003003   003101 710000 1                  TRA     s:4040
         1 003004   003110 710000 1                  TRA     s:4043
         1 003005   003025 710000 1                  TRA     s:4023
         1 003006   003110 710000 1                  TRA     s:4043
         1 003007   003101 710000 1                  TRA     s:4040
         1 003010   003047 710000 1                  TRA     s:4029
         1 003011   003057 710000 1                  TRA     s:4032
         1 003012   003070 710000 1                  TRA     s:4035
         1 003013   003101 710000 1                  TRA     s:4040

      875     4019    2            CASE (MFC_WRUR);    /* XLATE FOR UPPER AND LOWER CASE ONLY */

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:139  
      876     4020    2              CALL XLATE(G$->CHARS,B$XL_UR,F$DCB.UB$->CHARS);

   4020  1 003014   100075 474500                    LDP4    61,,PR1
         1 003015   200022 720100                    LXL0    N,,AUTO
         1 003016   000000 475400 xsym               LDP5    B$XL_UR$
         1 003017   200017 476500                    LDP6    G$,,AUTO
         1 003020   040140 160540                    MVT     fill='040'O
         1 003021   400000 000010                    ADSC9   0,,PR4                   cn=0,n=*X0
         1 003022   600000 000010                    ADSC9   0,,PR6                   cn=0,n=*X0
         1 003023   500000 000100                    ARG     0,,PR5
         1 003024   003121 710000 1                  TRA     s:4050

      877     4021
      878     4022    2            CASE (MFC_WRURUC);  /* XLATE FOR UPPER CASE ONLY           */

      879     4023    2              CALL XLATE(G$->CHARS, B$XL_UPPER_UR, F$DCB.UB$->CHARS);

   4023  1 003025   100075 474500                    LDP4    61,,PR1
         1 003026   200022 720100                    LXL0    N,,AUTO
         1 003027   000000 475400 xsym               LDP5    B$XL_UPPER_UR$
         1 003030   200017 476500                    LDP6    G$,,AUTO
         1 003031   040140 160540                    MVT     fill='040'O
         1 003032   400000 000010                    ADSC9   0,,PR4                   cn=0,n=*X0
         1 003033   600000 000010                    ADSC9   0,,PR6                   cn=0,n=*X0
         1 003034   500000 000100                    ARG     0,,PR5
         1 003035   003121 710000 1                  TRA     s:4050

      880     4024
      881     4025    2            CASE (MFC_WRITE);   /* XLATE TO STRIP OFF 9TH BIT ONLY     */

      882     4026    2              CALL XLATE(G$->CHARS,B$XL_MOD_256,F$DCB.UB$->CHARS);

   4026  1 003036   100075 474500                    LDP4    61,,PR1
         1 003037   200022 720100                    LXL0    N,,AUTO
         1 003040   000000 475400 xsym               LDP5    B$XL_MOD_256$
         1 003041   200017 476500                    LDP6    G$,,AUTO
         1 003042   040140 160540                    MVT     fill='040'O
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:140  
         1 003043   400000 000010                    ADSC9   0,,PR4                   cn=0,n=*X0
         1 003044   600000 000010                    ADSC9   0,,PR6                   cn=0,n=*X0
         1 003045   500000 000100                    ARG     0,,PR5
         1 003046   003121 710000 1                  TRA     s:4050

      883     4027
      884     4028    2            CASE (MFC_NATL);    /* XLATE FOR NATIONAL (CUSTOMER) ONLY  */

      885     4029    2              CALL XLATE(G$->CHARS,NK_NATLTBL,F$DCB.UB$->CHARS);

   4029  1 003047   100075 474500                    LDP4    61,,PR1
         1 003050   200022 720100                    LXL0    N,,AUTO
         1 003051   200017 475500                    LDP5    G$,,AUTO
         1 003052   040140 160540                    MVT     fill='040'O
         1 003053   400000 000010                    ADSC9   0,,PR4                   cn=0,n=*X0
         1 003054   500000 000010                    ADSC9   0,,PR5                   cn=0,n=*X0
         1 003055   000000 000000 xsym               ARG     NK_NATLTBL
         1 003056   003121 710000 1                  TRA     s:4050

      886     4030
      887     4031    2            CASE (MFC_APL);     /* XLATE FOR APL CHARACTER SET ONLY    */

      888     4032    2              CALL XLATE(G$->CHARS, B$XL_MOD_256, F$DCB.UB$->CHARS);

   4032  1 003057   100075 474500                    LDP4    61,,PR1
         1 003060   200022 720100                    LXL0    N,,AUTO
         1 003061   000000 475400 xsym               LDP5    B$XL_MOD_256$
         1 003062   200017 476500                    LDP6    G$,,AUTO
         1 003063   040140 160540                    MVT     fill='040'O
         1 003064   400000 000010                    ADSC9   0,,PR4                   cn=0,n=*X0
         1 003065   600000 000010                    ADSC9   0,,PR6                   cn=0,n=*X0
         1 003066   500000 000100                    ARG     0,,PR5
         1 003067   003121 710000 1                  TRA     s:4050

      889     4033
      890     4034    2            CASE (MFC_URLC);    /* XLATE TO MAKE ALL LOWER CASE FOR UR */

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:141  
      891     4035    2              CALL XLATE(G$->CHARS,B$XL_LOWER_UR,F$DCB.UB$->CHARS);

   4035  1 003070   100075 474500                    LDP4    61,,PR1
         1 003071   200022 720100                    LXL0    N,,AUTO
         1 003072   000000 475400 xsym               LDP5    B$XL_LOWER_UR$
         1 003073   200017 476500                    LDP6    G$,,AUTO
         1 003074   040140 160540                    MVT     fill='040'O
         1 003075   400000 000010                    ADSC9   0,,PR4                   cn=0,n=*X0
         1 003076   600000 000010                    ADSC9   0,,PR6                   cn=0,n=*X0
         1 003077   500000 000100                    ARG     0,,PR5
         1 003100   003121 710000 1                  TRA     s:4050

      892     4036
      893     4037    2            CASE (MFC_NOX,      /* THESE THREE ARE DO NOTHING FUNCTION */

      894     4038    2                  MFC_WRBIN,    /* CODES, JUST PUT THE OUTPUT INTO THE */
      895     4039    2                  MFC_TRUOVRPRT);    /* OUTPUT AREA AND CONTINUE - NO XLATE */
      896     4040    2              G$->CHARS=F$DCB.UB$->CHARS;

   4040  1 003101   100075 474500                    LDP4    61,,PR1
         1 003102   200022 720100                    LXL0    N,,AUTO
         1 003103   200017 475500                    LDP5    G$,,AUTO
         1 003104   040140 100540                    MLR     fill='040'O
         1 003105   400000 000010                    ADSC9   0,,PR4                   cn=0,n=*X0
         1 003106   500000 000010                    ADSC9   0,,PR5                   cn=0,n=*X0
         1 003107   003121 710000 1                  TRA     s:4050

      897     4041
      898     4042    2            CASE (ELSE);        /* IMPOSSIBLE CONDITION - DO A SNAP    */

      899     4043    2              CALL SC_FMH99;

   4043  1 003110   000000 713400 xsym               CLIMB   SC_FMH99
         1 003111   000000 600000 xsid               climb   nvectors=         0

      900     4044    2              G$->CHARS=F$DCB.UB$->CHARS;

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:142  
   4044  1 003112   200006 470500                    LDP0    JDCB$,,AUTO
         1 003113   000075 471500                    LDP1    61,,PR0
         1 003114   200022 720100                    LXL0    N,,AUTO
         1 003115   200017 473500                    LDP3    G$,,AUTO
         1 003116   040140 100540                    MLR     fill='040'O
         1 003117   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         1 003120   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0

      901     4045        /*S*   SCREECH_CODE: FMH-S$FM99
      902     4046               TYPE: DUMP
      903     4047               MESSAGE:  Illegal translation code for symbiont write.
      904     4048        */
      905     4049    2            END;

      906     4050    1           FM$CON='0'B;

   4050  1 003121   200011 470500                    LDP0    SEG$,,AUTO
         1 003122   000000 450100                    STZ     0,,PR0

      907     4051    1           FM$CON.GX=GX;

   4051  1 003123   200016 236100                    LDQ     GX,,AUTO
         1 003124   000014 736000                    QLS     12
         1 003125   000000 676100                    ERQ     0,,PR0
         1 003126   000024 376000 2                  ANQ     20
         1 003127   000000 656100                    ERSQ    0,,PR0

      908     4052    1           FM$CON.GACTB=N+I;

   4052  1 003130   200022 236100                    LDQ     N,,AUTO
         1 003131   200023 036100                    ADLQ    I,,AUTO
         1 003132   000000 752103                    STCQ    0,'03'O,PR0

      909     4053    1           FM$CON.FAK=1;

   4053  1 003133   400000 236003                    LDQ     -131072,DU
         1 003134   000000 256100                    ORSQ    0,,PR0
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:143  

      910     4054    1           FM$CON.CTL=FPT$WRITE_V.DVBYTE;

   4054  1 003135   200026 471500                    LDP1    FPT$,,AUTO
         1 003136   100003 236100                    LDQ     3,,PR1
         1 003137   000004 772000                    QRL     4
         1 003140   000000 676100                    ERQ     0,,PR0
         1 003141   037700 376003                    ANQ     16320,DU
         1 003142   000000 656100                    ERSQ    0,,PR0

      911     4055    1           CFU$->FM$CFU.NRECS=F$DCB.CRECNO;

   4055  1 003143   200006 473500                    LDP3    JDCB$,,AUTO
         1 003144   200007 474500                    LDP4    CFU$,,AUTO
         1 003145   300071 235100                    LDA     57,,PR3
         1 003146   400001 755100                    STA     1,,PR4

      912     4056    1           F$DCB.NRECS=FM$CFU.NRECS;

   4056  1 003147   300042 755100                    STA     34,,PR3

      913     4057    1           CFU$->FM$CFU.FMOD='1'B;         /* FILE MODIFIED                      */

   4057  1 003150   004000 236003                    LDQ     2048,DU
         1 003151   400000 256100                    ORSQ    0,,PR4

      914     4058    1           F$DCB.BFR.BUFUP(1)='1'B;

   4058  1 003152   400000 236003                    LDQ     -131072,DU
         1 003153   300116 256100                    ORSQ    78,,PR3

      915     4059    1           F$DCB.CRECX=F$DCB.CRECX-1;

   4059  1 003154   300067 720100                    LXL0    55,,PR3
         1 003155   777777 621010                    EAX1    -1,X0
         1 003156   300067 441100                    SXL1    55,,PR3

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:144  
      916     4060    1           WRDS=(N+I+3)/4;                 /* # words of data                    */

   4060  1 003157   200022 236100                    LDQ     N,,AUTO
         1 003160   200023 036100                    ADLQ    I,,AUTO
         1 003161   000003 036007                    ADLQ    3,DL
         1 003162   000004 506007                    DIV     4,DL
         1 003163   200021 756100                    STQ     WRDS,,AUTO

      917     4061    1           FM$GRAN.AVAIL=FM$GRAN.AVAIL-WRDS-1;

   4061  1 003164   200010 475500                    LDP5    BUF$,,AUTO
         1 003165   500001 236100                    LDQ     1,,PR5
         1 003166   001777 376007                    ANQ     1023,DL
         1 003167   200021 136100                    SBLQ    WRDS,,AUTO
         1 003170   000001 136007                    SBLQ    1,DL
         1 003171   500001 676100                    ERQ     1,,PR5
         1 003172   001777 376007                    ANQ     1023,DL
         1 003173   500001 656100                    ERSQ    1,,PR5

      918     4062    1           FM$GRAN.NAVX=FM$GRAN.NAVX+WRDS;

   4062  1 003174   200010 475500                    LDP5    BUF$,,AUTO
         1 003175   500001 236100                    LDQ     1,,PR5
         1 003176   000022 772000                    QRL     18
         1 003177   200021 036100                    ADLQ    WRDS,,AUTO
         1 003200   000000 620006                    EAX0    0,QL
         1 003201   500001 740100                    STX0    1,,PR5

      919     4063    1           GOTO SETEOP;

   4063  1 003202   002064 710000 1                  TRA     SETEOP

      920     4064        %EJECT;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:145  
      921     4065        /*F*    NAME:     FMH$SYMB_FINISH
      922     4066                PURPOSE:  After the last write to a symbiont file, the file
      923     4067                needs to be finished by updating the part of the granule
      924     4068                header which says how many logical pages are contained in the
      925     4069                granule.
      926     4070        */
      927     4071        /*D*    NAME:     FMH$SYMB_FINISH
      928     4072                CALL:     CALL FMH$SYMB_FINISH ALTRET(label);
      929     4073                INPUT:    None required
      930     4074                DESCRIPTION:  As in FMH$SYMB, the usual checks are made to
      931     4075                ensure that we're at end of file. Then, instead of performing
      932     4076                a write, FM$GRAN.KEYCNT of the last granule is updated with
      933     4077                F$DCB.PGINGRAN and the granule is rewritten.
      934     4078        */
      935     4079    1   FMH$SYMB_FINISH: ENTRY(FPTCODE,PARMFPT,VFC) ALTRET;

   4079  1 003203   000000 700200 xent  FMH$SYMB_FI* TSX0  ! X66_AUTO_3
         1 003204   000056 000003                    ZERO    46,3

      936     4080        /**/
      937     4081    1           JDCB$=B$JIT.DCB$;

   4081  1 003205   000000 470400 xsym               LDP0    B$JIT$
         1 003206   000232 236100                    LDQ     154,,PR0
         1 003207   200006 756100                    STQ     JDCB$,,AUTO

      938     4082    1           CFU$=F$DCB.CFU$;

   4082  1 003210   200006 471500                    LDP1    JDCB$,,AUTO
         1 003211   100066 236100                    LDQ     54,,PR1
         1 003212   200007 756100                    STQ     CFU$,,AUTO

      939     4083    1           CALL SETUP ALTRET(ERR);

   4083  1 003213   003720 701000 1                  TSX1    SETUP
         1 003214   002153 702000 1                  TSX2    ERR

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:146  
      940     4084    1           CALL NXTREC ALTRET(SYMEOF2);

   4084  1 003215   003546 701000 1                  TSX1    NXTREC
         1 003216   003226 702000 1                  TSX2    SYMEOF2

      941     4085    1           F$DCB.RPOS='1'B;

   4085  1 003217   200006 470500                    LDP0    JDCB$,,AUTO
         1 003220   010000 236007                    LDQ     4096,DL
         1 003221   000064 256100                    ORSQ    52,,PR0

      942     4086    1           B$JIT.ERR=ERRDELFWD;

   4086  1 003222   000010 236000 0                  LDQ     ERRDELFWD
         1 003223   000000 471400 xsym               LDP1    B$JIT$
         1 003224   100012 756100                    STQ     10,,PR1

      943     4087    1           GOTO ERR;

   4087  1 003225   002153 710000 1                  TRA     ERR

   4086  1 003226                       SYMEOF2      null
      944     4088    1   SYMEOF2:;
      945     4089    1           IF B$JIT.ERR.CODE ~= %E$EOF THEN

   4089  1 003226   000000 470400 xsym               LDP0    B$JIT$
         1 003227   000012 236100                    LDQ     10,,PR0
         1 003230   377770 376007                    ANQ     131064,DL
         1 003231   000060 116007                    CMPQ    48,DL
         1 003232   002153 601000 1                  TNZ     ERR

      946     4090    1              GOTO ERR;
      947     4091    1           B$JIT.ERR='0'B;

   4091  1 003233   000012 450100                    STZ     10,,PR0

      948     4092    1           FM$GRAN.KEYCNT=F$DCB.PGINGRAN;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:147  

   4092  1 003234   200006 471500                    LDP1    JDCB$,,AUTO
         1 003235   200010 473500                    LDP3    BUF$,,AUTO
         1 003236   100102 236100                    LDQ     66,,PR1
         1 003237   300002 552104                    STBQ    2,'04'O,PR3

      949     4093    1           F$DCB.PGINGRAN=0;

   4093  1 003240   000000 236003                    LDQ     0,DU
         1 003241   100102 552104                    STBQ    66,'04'O,PR1

      950     4094    1           FM$GRAN.NOTLDA='0'B;

   4094  1 003242   200010 473500                    LDP3    BUF$,,AUTO
         1 003243   000035 236000 2                  LDQ     29
         1 003244   300002 356100                    ANSQ    2,,PR3

      951     4095    1           F$DCB.BFR.BUFUP(1)='1'B;

   4095  1 003245   400000 236003                    LDQ     -131072,DU
         1 003246   100116 256100                    ORSQ    78,,PR1

      952     4096    1           CFU$->FM$CFU.FMOD='1'B;

   4096  1 003247   200007 473500                    LDP3    CFU$,,AUTO
         1 003250   004000 236003                    LDQ     2048,DU
         1 003251   300000 256100                    ORSQ    0,,PR3

      953     4097    1           CALL FMD$FLSHBUF(1);

   4097  1 003252   000002 630400 2                  EPPR0   2
         1 003253   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 003254   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 003255   000000 011000                    NOP     0

      954     4098    1           RETURN;

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:148  
   4098  1 003256   000000 702200 xent               TSX2  ! X66_ARET

      955     4099        %EJECT;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:149  
      956     4100        /*F*    NAME:   FMH$PREC
      957     4101        *       PURPOSE:  Provide M$PRECORD service for consecutive and
      958     4102        *                 unit record files without an FPT */
      959     4103        /**/
      960     4104        /**/
      961     4105        /**/
      962     4106        /*D*    NAME:   FMH$PREC
      963     4107        *       CALL:   CALL FMH$PREC(FPTCODE)   ALTRET(LOC);
      964     4108        *       INPUT:  FPTCODE - FPTPREC
      965     4109        *               DCB.UBYTES - Number of records to position
      966     4110        */
      967     4111        /**/
      968     4112    1   FMH$PREC: ENTRY(FPTCODE)        ALTRET;

   4112  1 003257   000000 700200 xent  FMH$PREC     TSX0  ! X66_AUTO_3
         1 003260   000056 000003                    ZERO    46,3

      969     4113        /**/
      970     4114    1           JDCB$=B$JIT.DCB$;

   4114  1 003261   000000 470400 xsym               LDP0    B$JIT$
         1 003262   000232 236100                    LDQ     154,,PR0
         1 003263   200006 756100                    STQ     JDCB$,,AUTO

      971     4115    1           CFU$=F$DCB.CFU$;

   4115  1 003264   200006 471500                    LDP1    JDCB$,,AUTO
         1 003265   100066 236100                    LDQ     54,,PR1
         1 003266   200007 756100                    STQ     CFU$,,AUTO

      972     4116    1           FPT$=ADDR(DUMMYFPT);

   4116  1 003267   000036 236000 2                  LDQ     30
         1 003270   200026 756100                    STQ     FPT$,,AUTO

      973     4117    1           F$DCB.EOP=0;

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:150  
   4117  1 003271   000000 236000 2                  LDQ     0
         1 003272   100064 356100                    ANSQ    52,,PR1

      974     4118    1           CALL SETUP;

   4118  1 003273   003720 701000 1                  TSX1    SETUP
         1 003274   000000 011000                    NOP     0

      975     4119    1           N=F$DCB.UBYTES;

   4119  1 003275   200006 470500                    LDP0    JDCB$,,AUTO
         1 003276   000076 235100                    LDA     62,,PR0
         1 003277   200022 755100                    STA     N,,AUTO

      976     4120    1           GOTO PREC;

   4120  1 003300   001653 710000 1                  TRA     PREC

      977     4121        %EJECT;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:151  
      978     4122        /*F*   NAME:   FLINK
      979     4123        *      PURPOSE:  Read the next granule in the forward or
      980     4124        *                reverse direction                                           */
      981     4125                                                /*                                    */
      982     4126                                                /*                                    */
      983     4127                                                /*                                    */
      984     4128        /*D*   NAME:   FLINK
      985     4129        *      ENTRY:  BLINK
      986     4130        *      CALL:   CALL FLINK ALTRET(LOC);
      987     4131        *      INPUT:  Disk address of current granule in DCB.BFR.DA(1)
      988     4132        *              JDCB$ - Pointer to current DCB
      989     4133        *      OUTPUT: BUF$ - Pointer to new buffer
      990     4134        *              LSTSEG - Index to last segment entry in buffer
      991     4135        *      DESCRIPTION:  The disk address in DCB.BFR.DA(1) is
      992     4136        *    incremented or decremented as appropriate.  If not within
      993     4137        *    the limits of the file, either BOF or EOF is reported.
      994     4138        *    Otherwise, FMD$REDBUF is called to read the granule, and
      995     4139        *    LSTSEG is set to NAVX+AVAIL.                                            */
      996     4140                                                /*                                    */
      997     4141    1   FLINK:  PROC ALTRET;

   4141  1 003301   200042 741300       FLINK        STX1  ! FAK+1,,AUTO

      998     4142        /* LOCAL AUTOMATIC STORAGE */
      999     4143    2   DCL DA SBIN WORD;
     1000     4144    2   DCL DIR SBIN;
     1001     4145                                                /*                                    */
     1002     4146    2           DIR=1;                          /* FORWARD                            */

   4146  1 003302   000001 235007                    LDA     1,DL
         1 003303   200044 755100                    STA     DIR,,AUTO

     1003     4147    2           DA=F$DCB.BFR.DA(1)+1;

   4147  1 003304   200006 470500                    LDP0    JDCB$,,AUTO
         1 003305   000116 236100                    LDQ     78,,PR0
         1 003306   000032 376000 xsym               ANQ     B_VECTNIL+26
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:152  
         1 003307   000001 036007                    ADLQ    1,DL
         1 003310   200043 756100                    STQ     DA,,AUTO

     1004     4148    2           IF DA>CFU$->FM$CFU.LDA

   4148  1 003311   200007 471500                    LDP1    CFU$,,AUTO
         1 003312   100006 235100                    LDA     6,,PR1
         1 003313   100007 236100                    LDQ     7,,PR1
         1 003314   000033 773000                    LRL     27
         1 003315   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 003316   200043 116100                    CMPQ    DA,,AUTO
         1 003317   003325 605000 1                  TPL     s:4154

     1005     4149    2           THEN                            /* BEYOND EOF - REPORT EOF ERROR      */
     1006     4150    3           DO;

     1007     4151    3              B$JIT.ERR=ERREOF;

   4151  1 003320   000005 236000 0                  LDQ     ERREOF
         1 003321   000000 473400 xsym               LDP3    B$JIT$
         1 003322   300012 756100                    STQ     10,,PR3

     1008     4152    3   ERR:       ALTRETURN;

   4152  1 003323   200042 221300       ERR          LDX1  ! FAK+1,,AUTO
         1 003324   000000 702211                    TSX2  ! 0,X1

     1009     4153    3              END;
     1010     4154    2           GOTO READ;

   4154  1 003325   003344 710000 1                  TRA     READ

     1011     4155                                                /*                                    */
     1012     4156    2   BLINK:  ENTRY ALTRET;

   4156  1 003326   200042 741300       BLINK        STX1  ! FAK+1,,AUTO

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:153  
     1013     4157                                                /*                                    */
     1014     4158    2           DIR=0;                          /* BACKWARD                           */

   4158  1 003327   200044 450100                    STZ     DIR,,AUTO

     1015     4159    2           DA=F$DCB.BFR.DA(1)-1;

   4159  1 003330   200006 470500                    LDP0    JDCB$,,AUTO
         1 003331   000116 236100                    LDQ     78,,PR0
         1 003332   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 003333   000001 136007                    SBLQ    1,DL
         1 003334   200043 756100                    STQ     DA,,AUTO

     1016     4160    2           IF DA<FM_FRZERO

   4160  1 003335   003340 604000 1                  TMI     s:4163
         1 003336   000000 116000 xsym               CMPQ    FM_FRZERO
         1 003337   003344 603000 1                  TRC     READ

     1017     4161    2           THEN                            /* HIT BOF                            */
     1018     4162    3           DO;

     1019     4163    3              B$JIT.ERR=ERRBOF;

   4163  1 003340   000006 236000 0                  LDQ     ERRBOF
         1 003341   000000 471400 xsym               LDP1    B$JIT$
         1 003342   100012 756100                    STQ     10,,PR1

     1020     4164    3              GOTO ERR;

   4164  1 003343   003323 710000 1                  TRA     ERR

     1021     4165    3              END;
     1022     4166    2   READ:   CALL FMD$REDBUF(BUF$,1,DA,0,0) ALTRET(ERR);

   4166  1 003344   000003 236000 2     READ         LDQ     3
         1 003345   200052 756100                    STQ     DIR+6,,AUTO
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:154  
         1 003346   200051 756100                    STQ     DIR+5,,AUTO
         1 003347   200043 631500                    EPPR1   DA,,AUTO
         1 003350   200050 451500                    STP1    DIR+4,,AUTO
         1 003351   000002 236000 2                  LDQ     2
         1 003352   200047 756100                    STQ     DIR+3,,AUTO
         1 003353   200010 633500                    EPPR3   BUF$,,AUTO
         1 003354   200046 453500                    STP3    DIR+2,,AUTO
         1 003355   200046 630500                    EPPR0   DIR+2,,AUTO
         1 003356   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 003357   000000 701000 xent               TSX1    FMD$REDBUF
         1 003360   003323 702000 1                  TSX2    ERR

     1023     4167    2           LSTSEG=FM$GRAN.NAVX+FM$GRAN.AVAIL;

   4167  1 003361   200010 470500                    LDP0    BUF$,,AUTO
         1 003362   000001 236100                    LDQ     1,,PR0
         1 003363   001777 376007                    ANQ     1023,DL
         1 003364   200046 756100                    STQ     DIR+2,,AUTO
         1 003365   000001 236100                    LDQ     1,,PR0
         1 003366   000022 772000                    QRL     18
         1 003367   200046 036100                    ADLQ    DIR+2,,AUTO
         1 003370   200012 756100                    STQ     LSTSEG,,AUTO

     1024     4168    2           RETURN;

   4168  1 003371   200042 221300                    LDX1  ! FAK+1,,AUTO
         1 003372   000001 702211                    TSX2  ! 1,X1

     1025     4169    2   END FLINK;
     1026     4170        %EJECT;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:155  
     1027     4171        /*F*   NAME:   NXTSEG
     1028     4172        *      PURPOSE:  Find the next segment entry in either the
     1029     4173        *                forward or reverse direction                                */
     1030     4174                                                /*                                    */
     1031     4175                                                /*                                    */
     1032     4176                                                /*                                    */
     1033     4177        /*D*   NAME:   NXTSEG
     1034     4178        *      ENTRY:  NXTSEGR
     1035     4179        *      CALL:   CALL NXTSEG ALTRET(LOC);
     1036     4180        *      INPUT:  CRECX - Current displacement into buffer
     1037     4181        *              BUF$ - Pointer to current buffer
     1038     4182        *              LSTSEG - Index to last segment entry in buffer
     1039     4183        *      OUTPUT: CRECX, BUF$, LSTSEG modified as necessary
     1040     4184        *              SEG$ - Pointer to next segment entry
     1041     4185        *      DESCRIPTION:                                                          */
     1042     4186                                                /*                                    */
     1043     4187    1   NXTSEG: PROC ALTRET;

   4187  1 003373   200040 741300       NXTSEG       STX1  ! EOFHIT+3,,AUTO

     1044     4188    2   DCL FAK SBIN;
     1045     4189        /*D*
     1046     4190             NXTSEG:
     1047     4191        *      If CRECX is greater than 1024, set it to 1024.
     1048     4192        *      Decrement CRECX to point to next segment entry.  Calculate
     1049     4193        *      SEG$.  Return if CRECX >= LSTSEG.  Otherwise no more entries
     1050     4194        *      in this granule.  Call FLINK to read forward.  Keep reading
     1051     4195        *      forward if necessary to find a granule containing a
     1052     4196        *      segment entry.                                                        */
     1053     4197                                                /*                                    */
     1054     4198    2           IF CRECX>1024 THEN CRECX=1024;

   4198  1 003374   200013 235100                    LDA     CRECX,,AUTO
         1 003375   002000 115007                    CMPA    1024,DL
         1 003376   003401 604400 1                  TMOZ    s:4199

   4198  1 003377   002000 236007                    LDQ     1024,DL
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:156  
         1 003400   200013 756100                    STQ     CRECX,,AUTO

     1055     4199    2           CRECX=CRECX-1;

   4199  1 003401   000001 336007                    LCQ     1,DL
         1 003402   200013 056100                    ASQ     CRECX,,AUTO

     1056     4200    2   NXT:    F$DCB.CRECX=CRECX;              /* REMEMBER IT IN DCB                 */

   4200  1 003403   200013 720100       NXT          LXL0    CRECX,,AUTO
         1 003404   200006 470500                    LDP0    JDCB$,,AUTO
         1 003405   000067 440100                    SXL0    55,,PR0

     1057     4201    2           SEG$=PINCRW(BUF$,CRECX);

   4201  1 003406   200013 236100                    LDQ     CRECX,,AUTO
         1 003407   000022 736000                    QLS     18
         1 003410   200010 036100                    ADLQ    BUF$,,AUTO
         1 003411   200011 756100                    STQ     SEG$,,AUTO

     1058     4202    3           IF CRECX>=LSTSEG THEN DO;

   4202  1 003412   200013 236100                    LDQ     CRECX,,AUTO
         1 003413   200012 116100                    CMPQ    LSTSEG,,AUTO
         1 003414   003427 604000 1                  TMI     s:4207

     1059     4203    3              IF FM$CON.FAK=1 THEN

   4203  1 003415   200011 471500                    LDP1    SEG$,,AUTO
         1 003416   100000 236100                    LDQ     0,,PR1
         1 003417   400000 376003                    ANQ     -131072,DU
         1 003420   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 003421   000001 036007                    ADLQ    1,DL
         1 003422   400000 116003                    CMPQ    -131072,DU
         1 003423   003425 601000 1                  TNZ     s:4205

     1060     4204    3                 F$DCB.CRECNO=F$DCB.CRECNO+1;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:157  

   4204  1 003424   000071 054100                    AOS     57,,PR0

     1061     4205    3              RETURN;

   4205  1 003425   200040 221300                    LDX1  ! EOFHIT+3,,AUTO
         1 003426   000001 702211                    TSX2  ! 1,X1

     1062     4206    3              END;
     1063     4207    2           CALL FLINK ALTRET(ERREOF);

   4207  1 003427   003301 701000 1                  TSX1    FLINK
         1 003430   003434 702000 1                  TSX2    ERREOF

     1064     4208    2           CRECX=1023;

   4208  1 003431   001777 235007                    LDA     1023,DL
         1 003432   200013 755100                    STA     CRECX,,AUTO

     1065     4209    2           GOTO NXT;

   4209  1 003433   003403 710000 1                  TRA     NXT

     1066     4210    2   ERREOF: IF B$JIT.ERR.CODE~=%E$EOF THEN GOTO ERR;

   4210  1 003434   000000 470400 xsym  ERREOF       LDP0    B$JIT$
         1 003435   000012 236100                    LDQ     10,,PR0
         1 003436   377770 376007                    ANQ     131064,DL
         1 003437   000060 116007                    CMPQ    48,DL
         1 003440   003544 601000 1                  TNZ     ERR

     1067     4211    2           CRECX=LSTSEG-1;                 /* POINT TO ENTRY PAST LAST           */

   4211  1 003441   200012 235100                    LDA     LSTSEG,,AUTO
         1 003442   000001 135007                    SBLA    1,DL
         1 003443   200013 755100                    STA     CRECX,,AUTO

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:158  
     1068     4212    2           F$DCB.CRECX=CRECX;

   4212  1 003444   000000 620005                    EAX0    0,AL
         1 003445   200006 471500                    LDP1    JDCB$,,AUTO
         1 003446   100067 440100                    SXL0    55,,PR1

     1069     4213    2           SEG$=PINCRW(BUF$,CRECX);

   4213  1 003447   200013 236100                    LDQ     CRECX,,AUTO
         1 003450   000022 736000                    QLS     18
         1 003451   200010 036100                    ADLQ    BUF$,,AUTO
         1 003452   200011 756100                    STQ     SEG$,,AUTO

     1070     4214    2           F$DCB.CRECNO=CFU$->FM$CFU.NRECS+1;

   4214  1 003453   200007 473500                    LDP3    CFU$,,AUTO
         1 003454   300001 235100                    LDA     1,,PR3
         1 003455   000001 035007                    ADLA    1,DL
         1 003456   100071 755100                    STA     57,,PR1

     1071     4215    2           GOTO ERR;

   4215  1 003457   003544 710000 1                  TRA     ERR

     1072     4216                                                /*                                    */
     1073     4217        /*D*
     1074     4218        *    NXTSEGR:
     1075     4219        *      If CRECX is less than LSTSEG-1 set it to LSTSEG-1.
     1076     4220        *      Increment CRECX to point to previous segment entry.
     1077     4221        *      Calculate SEG$.  Return if pointing to an entry, else call
     1078     4222        *      BLINK to read previous granule.  Keep reading backwards
     1079     4223        *      if necessary to find a granule containing a segment entry.            */
     1080     4224                                                /*                                    */
     1081     4225    2   NXTSEGR: ENTRY ALTRET;

   4225  1 003460   200040 741300       NXTSEGR      STX1  ! EOFHIT+3,,AUTO

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:159  
     1082     4226                                                /*                                    */
     1083     4227    3           IF CRECX<LSTSEG THEN DO;

   4227  1 003461   200013 236100                    LDQ     CRECX,,AUTO
         1 003462   200012 116100                    CMPQ    LSTSEG,,AUTO
         1 003463   003471 605000 1                  TPL     s:4232

     1084     4228    3              CRECX=LSTSEG;

   4228  1 003464   200012 235100                    LDA     LSTSEG,,AUTO
         1 003465   200013 755100                    STA     CRECX,,AUTO

     1085     4229    3              FAK=1;

   4229  1 003466   000001 236007                    LDQ     1,DL
         1 003467   200041 756100                    STQ     FAK,,AUTO

     1086     4230    3              END;

   4230  1 003470   003476 710000 1                  TRA     NXTR

     1087     4231    3           ELSE DO;

     1088     4232    3              FAK=FM$CON.FAK;

   4232  1 003471   200011 470500                    LDP0    SEG$,,AUTO
         1 003472   000000 236100                    LDQ     0,,PR0
         1 003473   000043 772000                    QRL     35
         1 003474   200041 756100                    STQ     FAK,,AUTO

     1089     4233    3              CRECX=CRECX+1;

   4233  1 003475   200013 054100                    AOS     CRECX,,AUTO

     1090     4234    3              END;

     1091     4235    2   NXTR:   F$DCB.CRECX=CRECX;              /* UPDATE POSITION IN DCB             */
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:160  

   4235  1 003476   200013 720100       NXTR         LXL0    CRECX,,AUTO
         1 003477   200006 470500                    LDP0    JDCB$,,AUTO
         1 003500   000067 440100                    SXL0    55,,PR0

     1092     4236    2           SEG$=PINCRW(BUF$,CRECX);

   4236  1 003501   200013 236100                    LDQ     CRECX,,AUTO
         1 003502   000022 736000                    QLS     18
         1 003503   200010 036100                    ADLQ    BUF$,,AUTO
         1 003504   200011 756100                    STQ     SEG$,,AUTO

     1093     4237    3           IF CRECX<1024 THEN DO;

   4237  1 003505   200013 235100                    LDA     CRECX,,AUTO
         1 003506   002000 115007                    CMPA    1024,DL
         1 003507   003517 605000 1                  TPL     s:4242

     1094     4238    3              IF FAK=1 THEN

   4238  1 003510   200041 235100                    LDA     FAK,,AUTO
         1 003511   000001 115007                    CMPA    1,DL
         1 003512   003515 601000 1                  TNZ     s:4240

     1095     4239    3                 F$DCB.CRECNO=F$DCB.CRECNO-1;

   4239  1 003513   000001 336007                    LCQ     1,DL
         1 003514   000071 056100                    ASQ     57,,PR0

     1096     4240    3              RETURN;

   4240  1 003515   200040 221300                    LDX1  ! EOFHIT+3,,AUTO
         1 003516   000001 702211                    TSX2  ! 1,X1

     1097     4241    3              END;
     1098     4242    2           CALL BLINK ALTRET(ERRBOF);

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:161  
   4242  1 003517   003326 701000 1                  TSX1    BLINK
         1 003520   003524 702000 1                  TSX2    ERRBOF

     1099     4243    2           CRECX=LSTSEG;

   4243  1 003521   200012 235100                    LDA     LSTSEG,,AUTO
         1 003522   200013 755100                    STA     CRECX,,AUTO

     1100     4244    2           GOTO NXTR;

   4244  1 003523   003476 710000 1                  TRA     NXTR

     1101     4245    2   ERRBOF: IF B$JIT.ERR.CODE~=%E$BOF THEN GOTO ERR;

   4245  1 003524   000000 470400 xsym  ERRBOF       LDP0    B$JIT$
         1 003525   000012 236100                    LDQ     10,,PR0
         1 003526   377770 376007                    ANQ     131064,DL
         1 003527   000040 116007                    CMPQ    32,DL
         1 003530   003544 601000 1                  TNZ     ERR

     1102     4246    2           F$DCB.CRECNO=0;

   4246  1 003531   200006 471500                    LDP1    JDCB$,,AUTO
         1 003532   100071 450100                    STZ     57,,PR1

     1103     4247    2           CRECX=1024;

   4247  1 003533   002000 235007                    LDA     1024,DL
         1 003534   200013 755100                    STA     CRECX,,AUTO

     1104     4248    2           F$DCB.CRECX=1024;

   4248  1 003535   002000 220003                    LDX0    1024,DU
         1 003536   100067 440100                    SXL0    55,,PR1

     1105     4249    2           F$DCB.RPOS='0'B;

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:162  
   4249  1 003537   000004 236000 2                  LDQ     4
         1 003540   100064 356100                    ANSQ    52,,PR1

     1106     4250    2           SEG$=PINCRW(BUF$,1024);

   4250  1 003541   200010 236100                    LDQ     BUF$,,AUTO
         1 003542   002000 036003                    ADLQ    1024,DU
         1 003543   200011 756100                    STQ     SEG$,,AUTO

     1107     4251    2   ERR:    ALTRETURN;

   4251  1 003544   200040 221300       ERR          LDX1  ! EOFHIT+3,,AUTO
         1 003545   000000 702211                    TSX2  ! 0,X1

     1108     4252    2   END NXTSEG;
     1109     4253        %EJECT;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:163  
     1110     4254        /*F*   NAME:   NXTREC
     1111     4255        *      PURPOSE:  FInd the beginning of the next record in the
     1112     4256        *                forward direction                                           */
     1113     4257                                                /*                                    */
     1114     4258                                                /*                                    */
     1115     4259                                                /*                                    */
     1116     4260        /*D*   NAME:   NXTREC
     1117     4261        *      CALL:   CALL NXTREC ALTRET(LOC);
     1118     4262        *      INPUT:  JDCB$ - Pointer to current DCB
     1119     4263        *              BUF$ - Pointer to current buffer
     1120     4264        *              LSTSEG - Displacement to last segment entry in buffer
     1121     4265        *      OUTPUT: BUF$, LSTSEG modified as necessary
     1122     4266        *              SEG$ - Pointer to segment entry of next record
     1123     4267        *      DESCRIPTION:  If DCB.RPOS is zero, call NXTSEG repeatedly
     1124     4268        *        until find an entry with FAK set, then return.  If RPOS is
     1125     4269        *        set, call BEGREC to find the beginning of the current record.
     1126     4270                                                                                     */
     1127     4271    1   NXTREC: PROC ALTRET;

   4271  1 003546   200032 741300       NXTREC       STX1  ! FPT$+4,,AUTO

     1128     4272                                                /*                                    */
     1129     4273    2           IF NOT F$DCB.RPOS

   4273  1 003547   200006 470500                    LDP0    JDCB$,,AUTO
         1 003550   000064 236100                    LDQ     52,,PR0
         1 003551   010000 316007                    CANQ    4096,DL
         1 003552   003565 601000 1                  TNZ     s:4282

     1130     4274    2           THEN                  /* POINTING AT CURRENT RECORD, GO FWD TO NEXT   */
     1131     4275    3           DO;

     1132     4276    3   NXT:       CALL NXTSEG ALTRET(ERR);

   4276  1 003553   003373 701000 1     NXT          TSX1    NXTSEG
         1 003554   003573 702000 1                  TSX2    ERR

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:164  
     1133     4277    3              IF FM$CON.FAK=1 THEN GOTO DONE;

   4277  1 003555   200011 470500                    LDP0    SEG$,,AUTO
         1 003556   000000 236100                    LDQ     0,,PR0
         1 003557   400000 376003                    ANQ     -131072,DU
         1 003560   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 003561   000001 036007                    ADLQ    1,DL
         1 003562   400000 116003                    CMPQ    -131072,DU
         1 003563   003571 600000 1                  TZE     DONE

     1134     4278    3              GOTO NXT;

   4278  1 003564   003553 710000 1                  TRA     NXT

     1135     4279    3              END;
     1136     4280    2           ELSE                  /* POINTING TO NEXT RECORD - FIND ITS BEGINNING */
     1137     4281    3           DO;

     1138     4282    3              F$DCB.RPOS='0'B;             /* MAKE THIS CURRENT RECORD           */

   4282  1 003565   000004 236000 2                  LDQ     4
         1 003566   000064 356100                    ANSQ    52,,PR0

     1139     4283    3              CALL BEGREC ALTRET(ERR);     /* FIND BEGINNING                     */

   4283  1 003567   003575 701000 1                  TSX1    BEGREC
         1 003570   003573 702000 1                  TSX2    ERR

     1140     4284    3              END;

     1141     4285    2   DONE:   RETURN;

   4285  1 003571   200032 221300       DONE         LDX1  ! FPT$+4,,AUTO
         1 003572   000001 702211                    TSX2  ! 1,X1

     1142     4286    2   ERR:    ALTRETURN;

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:165  
   4286  1 003573   200032 221300       ERR          LDX1  ! FPT$+4,,AUTO
         1 003574   000000 702211                    TSX2  ! 0,X1

     1143     4287    2   END NXTREC;
     1144     4288        %EJECT;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:166  
     1145     4289        /*F*   NAME:   BEGREC
     1146     4290        *      PURPOSE:  Find the beginning of the record currently being
     1147     4291        *                pointed to                                                  */
     1148     4292                                                /*                                    */
     1149     4293                                                /*                                    */
     1150     4294                                                /*                                    */
     1151     4295        /*D*   NAME:   BEGREC
     1152     4296        *      CALL:   CALL BEGREC ALTRET(LOC);
     1153     4297        *      INPUT:  BUF$ - Pointer to current buffer
     1154     4298        *              LSTSEG - Index to last segment entry in buffer
     1155     4299        *              DCB.CRECX - Index to current segment entry
     1156     4300        *              JDCB$ - Pointer to DCB
     1157     4301        *      OUTPUT: SEG$ - Pointer to segment entry of record located
     1158     4302        *              BUF$, LSTSEG, CRECX changed as necessary
     1159     4303        *      DESCRIPTION:                                                          */
     1160     4304                                                /*                                    */
     1161     4305    1   BEGREC: PROC ALTRET;

   4305  1 003575   200034 741300       BEGREC       STX1  ! FPT$+6,,AUTO

     1162     4306        /* LOCAL AUTOMATIC STORAGE */
     1163     4307    2   DCL EOFHIT BIT(36);
     1164     4308                                                /*                                    */
     1165     4309    2           EOFHIT='0'B;                    /* NO EOF YET                         */

   4309  1 003576   200035 450100                    STZ     EOFHIT,,AUTO

     1166     4310        /*D*
     1167     4311        *      If CRECX does not point to a segment entry, call NXTSEG
     1168     4312        *      to move forward to find the next one.  If hit end-of-file,
     1169     4313        *      remember the fact.                                                    */
     1170     4314    3           IF CRECX<LSTSEG THEN DO;

   4314  1 003577   200013 236100                    LDQ     CRECX,,AUTO
         1 003600   200012 116100                    CMPQ    LSTSEG,,AUTO
         1 003601   003625 605000 1                  TPL     s:4326

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:167  
     1171     4315    3              CALL NXTSEG ALTRET(NXTERR);

   4315  1 003602   003373 701000 1                  TSX1    NXTSEG
         1 003603   003605 702000 1                  TSX2    NXTERR

     1172     4316    3              GOTO GOTIT;

   4316  1 003604   003634 710000 1                  TRA     GOTIT

     1173     4317    3   NXTERR:    IF B$JIT.ERR.CODE~=%E$EOF THEN ALTRETURN;

   4317  1 003605   000000 470400 xsym  NXTERR       LDP0    B$JIT$
         1 003606   000012 236100                    LDQ     10,,PR0
         1 003607   377770 376007                    ANQ     131064,DL
         1 003610   000060 116007                    CMPQ    48,DL
         1 003611   003614 600000 1                  TZE     s:4318

   4317  1 003612   200034 221300                    LDX1  ! FPT$+6,,AUTO
         1 003613   000000 702211                    TSX2  ! 0,X1

     1174     4318    3              IF F$DCB.RPOS

   4318  1 003614   200006 471500                    LDP1    JDCB$,,AUTO
         1 003615   100064 236100                    LDQ     52,,PR1
         1 003616   010000 316007                    CANQ    4096,DL
         1 003617   003623 600000 1                  TZE     s:4324

     1175     4319    3              THEN               /* REALLY WANT PREV KEY - IGNORE EOF FOR NOW    */
     1176     4320    4              DO;

     1177     4321    4                 EOFHIT=B$JIT.ERR;         /* REMEMBER EOF ERROR                 */

   4321  1 003620   000012 236100                    LDQ     10,,PR0
         1 003621   200035 756100                    STQ     EOFHIT,,AUTO

     1178     4322    4                 GOTO BACK;                /* BACK UP                            */

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:168  
   4322  1 003622   003650 710000 1                  TRA     BACK

     1179     4323    4                 END;
     1180     4324    3              ALTRETURN;

   4324  1 003623   200034 221300                    LDX1  ! FPT$+6,,AUTO
         1 003624   000000 702211                    TSX2  ! 0,X1

     1181     4325    3              END;
     1182     4326    3           ELSE IF CRECX >= 1024 THEN DO;

   4326  1 003625   002000 116007                    CMPQ    1024,DL
         1 003626   003634 604000 1                  TMI     GOTIT

     1183     4327    3              SEG$=PINCRW(BUF$, 1023);

   4327  1 003627   200010 236100                    LDQ     BUF$,,AUTO
         1 003630   001777 036003                    ADLQ    1023,DU
         1 003631   200011 756100                    STQ     SEG$,,AUTO

     1184     4328    3              CALL BACKUP ALTRET(ERR);

   4328  1 003632   003705 701000 1                  TSX1    BACKUP
         1 003633   003703 702000 1                  TSX2    ERR

     1185     4329    3              END;

     1186     4330        /*D*
     1187     4331        *      If segment entry being pointed to does not have FAK set,
     1188     4332        *      call BACKUP to back up to one that does.                              */
     1189     4333    2   GOTIT:  IF FM$CON.FAK=0 THEN CALL BACKUP ALTRET(ERR);

   4333  1 003634   200011 470500       GOTIT        LDP0    SEG$,,AUTO
         1 003635   000000 236100                    LDQ     0,,PR0
         1 003636   400000 316003                    CANQ    -131072,DU
         1 003637   003642 601000 1                  TNZ     s:4336

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:169  
   4333  1 003640   003705 701000 1                  TSX1    BACKUP
         1 003641   003703 702000 1                  TSX2    ERR

     1190     4334        /*D*
     1191     4335        *      If DCB.RPOS is zero return, since pointing to current record.         */
     1192     4336    2           IF NOT F$DCB.RPOS THEN RETURN;

   4336  1 003642   200006 470500                    LDP0    JDCB$,,AUTO
         1 003643   000064 236100                    LDQ     52,,PR0
         1 003644   010000 316007                    CANQ    4096,DL
         1 003645   003650 601000 1                  TNZ     BACK

   4336  1 003646   200034 221300                    LDX1  ! FPT$+6,,AUTO
         1 003647   000001 702211                    TSX2  ! 1,X1

     1193     4337        /*D*
     1194     4338        *      Must back up to beginning of previous record.  Reset DCB.RPOS
     1195     4339        *      and call BACKUP.  If hit BOF, and previously hit EOF, file
     1196     4340        *      must be empty.  Change error to EOF and exit.                         */
     1197     4341    2   BACK:   F$DCB.RPOS='0'B;

   4341  1 003650   200006 470500       BACK         LDP0    JDCB$,,AUTO
         1 003651   000004 236000 2                  LDQ     4
         1 003652   000064 356100                    ANSQ    52,,PR0

     1198     4342    2           CALL BACKUP ALTRET(BCKERR);

   4342  1 003653   003705 701000 1                  TSX1    BACKUP
         1 003654   003657 702000 1                  TSX2    BCKERR

     1199     4343    2           RETURN;

   4343  1 003655   200034 221300                    LDX1  ! FPT$+6,,AUTO
         1 003656   000001 702211                    TSX2  ! 1,X1

     1200     4344                                                /*                                    */
     1201     4345    2   BCKERR: IF B$JIT.ERR.CODE~=%E$BOF THEN ALTRETURN;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:170  

   4345  1 003657   000000 470400 xsym  BCKERR       LDP0    B$JIT$
         1 003660   000012 236100                    LDQ     10,,PR0
         1 003661   377770 376007                    ANQ     131064,DL
         1 003662   000040 116007                    CMPQ    32,DL
         1 003663   003666 600000 1                  TZE     s:4346

   4345  1 003664   200034 221300                    LDX1  ! FPT$+6,,AUTO
         1 003665   000000 702211                    TSX2  ! 0,X1

     1202     4346    2           IF EOFHIT~='0'B

   4346  1 003666   200035 235100                    LDA     EOFHIT,,AUTO
         1 003667   003703 600000 1                  TZE     ERR

     1203     4347    2           THEN
     1204     4348    3           DO;

     1205     4349    3              B$JIT.ERR=EOFHIT;

   4349  1 003670   200035 236100                    LDQ     EOFHIT,,AUTO
         1 003671   000012 756100                    STQ     10,,PR0

     1206     4350    3              CRECX=1023;        /* EMPTY FILE - POINT TO FIRST CTL POSITION     */

   4350  1 003672   001777 235007                    LDA     1023,DL
         1 003673   200013 755100                    STA     CRECX,,AUTO

     1207     4351    3              F$DCB.CRECX=1023;

   4351  1 003674   001777 220003                    LDX0    1023,DU
         1 003675   200006 471500                    LDP1    JDCB$,,AUTO
         1 003676   100067 440100                    SXL0    55,,PR1

     1208     4352    3              SEG$=PINCRW(BUF$,CRECX);

   4352  1 003677   200013 236100                    LDQ     CRECX,,AUTO
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:171  
         1 003700   000022 736000                    QLS     18
         1 003701   200010 036100                    ADLQ    BUF$,,AUTO
         1 003702   200011 756100                    STQ     SEG$,,AUTO

     1209     4353    3              END;

     1210     4354    2   ERR:    ALTRETURN;

   4354  1 003703   200034 221300       ERR          LDX1  ! FPT$+6,,AUTO
         1 003704   000000 702211                    TSX2  ! 0,X1

     1211     4355        /* */
     1212     4356    2   BACKUP: PROC ALTRET;

   4356  1 003705   200036 741300       BACKUP       STX1  ! EOFHIT+1,,AUTO

     1213     4357    3   BACK2:  CALL NXTSEGR ALTRET(ERR);

   4357  1 003706   003460 701000 1     BACK2        TSX1    NXTSEGR
         1 003707   003716 702000 1                  TSX2    ERR

     1214     4358    3           IF FM$CON.FAK=0 THEN GOTO BACK2;

   4358  1 003710   200011 470500                    LDP0    SEG$,,AUTO
         1 003711   000000 236100                    LDQ     0,,PR0
         1 003712   400000 316003                    CANQ    -131072,DU
         1 003713   003706 600000 1                  TZE     BACK2

     1215     4359    3           RETURN;

   4359  1 003714   200036 221300                    LDX1  ! EOFHIT+1,,AUTO
         1 003715   000001 702211                    TSX2  ! 1,X1

     1216     4360    3   ERR:    ALTRETURN;

   4360  1 003716   200036 221300       ERR          LDX1  ! EOFHIT+1,,AUTO
         1 003717   000000 702211                    TSX2  ! 0,X1
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:172  

     1217     4361    3   END BACKUP;
     1218     4362    2   END BEGREC;
     1219     4363                                                /*                                    */
     1220     4364    1   SETUP:  PROC ALTRET;

   4364  1 003720   200030 741300       SETUP        STX1  ! FPT$+2,,AUTO

     1221     4365    2           IF F$DCB.ACS=%JRNL# THEN

   4365  1 003721   200006 470500                    LDP0    JDCB$,,AUTO
         1 003722   000036 236100                    LDQ     30,,PR0
         1 003723   000777 376007                    ANQ     511,DL
         1 003724   000004 116007                    CMPQ    4,DL
         1 003725   003732 601000 1                  TNZ     s:4367

     1222     4366    2           CALL FMH$MAPJRNL(1);

   4366  1 003726   000002 630400 2                  EPPR0   2
         1 003727   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 003730   000000 701000 xent               TSX1    FMH$MAPJRNL
         1 003731   000000 011000                    NOP     0

     1223     4367    3           IF F$DCB.BFR.BUFX(1)=0 THEN DO;

   4367  1 003732   200006 470500                    LDP0    JDCB$,,AUTO
         1 003733   000116 236100                    LDQ     78,,PR0
         1 003734   037000 316003                    CANQ    15872,DU
         1 003735   003757 601000 1                  TNZ     s:4372

     1224     4368    3              DA=F$DCB.BFR.DA(1);

   4368  1 003736   000116 236100                    LDQ     78,,PR0
         1 003737   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 003740   200014 756100                    STQ     DA,,AUTO

     1225     4369    3              CALL FMD$REDBUF(BUF$,1,DA,0,0) ALTRET(ERR); /* GET CURRENT GRAN    */
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:173  

   4369  1 003741   000003 236000 2                  LDQ     3
         1 003742   200052 756100                    STQ     DIR+6,,AUTO
         1 003743   200051 756100                    STQ     DIR+5,,AUTO
         1 003744   200014 631500                    EPPR1   DA,,AUTO
         1 003745   200050 451500                    STP1    DIR+4,,AUTO
         1 003746   000002 236000 2                  LDQ     2
         1 003747   200047 756100                    STQ     DIR+3,,AUTO
         1 003750   200010 633500                    EPPR3   BUF$,,AUTO
         1 003751   200046 453500                    STP3    DIR+2,,AUTO
         1 003752   200046 630500                    EPPR0   DIR+2,,AUTO
         1 003753   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 003754   000000 701000 xent               TSX1    FMD$REDBUF
         1 003755   004013 702000 1                  TSX2    ERR

     1226     4370    3              END;

   4370  1 003756   003764 710000 1                  TRA     s:4373

     1227     4371    2           ELSE
     1228     4372    2              BUF$=FM$BUF$(F$DCB.BFR.BUFX(1));

   4372  1 003757   000116 236100                    LDQ     78,,PR0
         1 003760   000033 772000                    QRL     27
         1 003761   000037 376007                    ANQ     31,DL
         1 003762   000000 236006 xsym               LDQ     FM$BUF$,QL
         1 003763   200010 756100                    STQ     BUF$,,AUTO

     1229     4373    2           LSTSEG=FM$GRAN.NAVX+FM$GRAN.AVAIL; /* LAST CTL WD                     */

   4373  1 003764   200010 470500                    LDP0    BUF$,,AUTO
         1 003765   000001 236100                    LDQ     1,,PR0
         1 003766   001777 376007                    ANQ     1023,DL
         1 003767   200046 756100                    STQ     DIR+2,,AUTO
         1 003770   000001 236100                    LDQ     1,,PR0
         1 003771   000022 772000                    QRL     18
         1 003772   200046 036100                    ADLQ    DIR+2,,AUTO
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:174  
         1 003773   200012 756100                    STQ     LSTSEG,,AUTO

     1230     4374    2           IF F$DCB.ACS=%JRNL# THEN

   4374  1 003774   200006 471500                    LDP1    JDCB$,,AUTO
         1 003775   100036 236100                    LDQ     30,,PR1
         1 003776   000777 376007                    ANQ     511,DL
         1 003777   000004 116007                    CMPQ    4,DL
         1 004000   004003 601000 1                  TNZ     s:4376

     1231     4375    2              F$DCB.CRECX=LSTSEG;          /* POINT TO END                       */

   4375  1 004001   200012 720100                    LXL0    LSTSEG,,AUTO
         1 004002   100067 440100                    SXL0    55,,PR1

     1232     4376    2           CRECX=F$DCB.CRECX;              /* DISPL TO CURRENT RECORD            */

   4376  1 004003   100067 236100                    LDQ     55,,PR1
         1 004004   777777 376007                    ANQ     -1,DL
         1 004005   200013 756100                    STQ     CRECX,,AUTO

     1233     4377    2           SEG$=PINCRW(BUF$,CRECX);

   4377  1 004006   000022 736000                    QLS     18
         1 004007   200010 036100                    ADLQ    BUF$,,AUTO
         1 004010   200011 756100                    STQ     SEG$,,AUTO

     1234     4378    2           RETURN;

   4378  1 004011   200030 221300                    LDX1  ! FPT$+2,,AUTO
         1 004012   000001 702211                    TSX2  ! 1,X1

     1235     4379    2   ERR:    ALTRETURN;

   4379  1 004013   200030 221300       ERR          LDX1  ! FPT$+2,,AUTO
         1 004014   000000 702211                    TSX2  ! 0,X1

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:175  
     1236     4380    2   END SETUP;
     1237     4381        /**/
     1238     4382        %EJECT;
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:176  
     1239     4383        /**/
     1240     4384        /* Handle UBLOCK writes */
     1241     4385        /**/
     1242     4386    1   FMH$UBLOCK: ENTRY(FPTCODE,PARMFPT,VFC) ALTRET;

   4386  1 004015   000000 700200 xent  FMH$UBLOCK   TSX0  ! X66_AUTO_3
         1 004016   000056 000003                    ZERO    46,3

     1243     4387        /**/
     1244     4388    1           FPT$=ADDR(PARMFPT);

   4388  1 004017   200004 236100                    LDQ     @PARMFPT,,AUTO
         1 004020   200026 756100                    STQ     FPT$,,AUTO

     1245     4389    1           JDCB$=B$JIT.DCB$;

   4389  1 004021   000000 470400 xsym               LDP0    B$JIT$
         1 004022   000232 236100                    LDQ     154,,PR0
         1 004023   200006 756100                    STQ     JDCB$,,AUTO

     1246     4390    1           CFU$=F$DCB.CFU$;

   4390  1 004024   200006 471500                    LDP1    JDCB$,,AUTO
         1 004025   100066 236100                    LDQ     54,,PR1
         1 004026   200007 756100                    STQ     CFU$,,AUTO

     1247     4391    2           DO CASE(FPTCODE);

   4391  1 004027   200003 473500                    LDP3    @FPTCODE,,AUTO
         1 004030   300000 235100                    LDA     0,,PR3
         1 004031   000002 115007                    CMPA    2,DL
         1 004032   004034 602005 1                  TNC     s:4391+5,AL
         1 004033   004043 710000 1                  TRA     s:4397
         1 004034   004036 710000 1                  TRA     s:4393
         1 004035   004044 710000 1                  TRA     s:4399

     1248     4392    2            CASE(FPTREAD);
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:177  

     1249     4393    2              CALL FMI$RAN(FPTCODE) ALTRET(ERR);

   4393  1 004036   200003 630500                    EPPR0   @FPTCODE,,AUTO
         1 004037   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 004040   000000 701000 xent               TSX1    FMI$RAN
         1 004041   002153 702000 1                  TSX2    ERR

     1250     4394    2              RETURN;

   4394  1 004042   000000 702200 xent               TSX2  ! X66_ARET

     1251     4395    2            CASE(FPTWRITE);

     1252     4396    2            CASE(ELSE);

     1253     4397    2              GOTO UBLKERR;

   4397  1 004043   004051 710000 1                  TRA     UBLKERR

     1254     4398    2            END;

     1255     4399    2           IF F$DCB.UBYTES=0 OR MOD(F$DCB.UBYTES,4096)~=0 THEN DO;

   4399  1 004044   100076 235100                    LDA     62,,PR1
         1 004045   004051 600000 1                  TZE     UBLKERR
         1 004046   100076 236100                    LDQ     62,,PR1
         1 004047   007777 376007                    ANQ     4095,DL
         1 004050   004061 600000 1                  TZE     s:4408

     1256     4400    2   UBLKERR:   CALL FMD$RELBUF(1);

   4400  1 004051   000002 630400 2     UBLKERR      EPPR0   2
         1 004052   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 004053   000000 701000 xent               TSX1    FMD$RELBUF
         1 004054   000000 011000                    NOP     0

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:178  
     1257     4401    2              B$JIT.ERR=ERRUBLOCK;

   4401  1 004055   000013 236000 0                  LDQ     ERRUBLOCK
         1 004056   000000 470400 xsym               LDP0    B$JIT$
         1 004057   000012 756100                    STQ     10,,PR0

     1258     4402    2              GOTO ERR;

   4402  1 004060   002153 710000 1                  TRA     ERR

     1259     4403    2              END;
     1260     4404        /*E*    ERROR: FMH-E$UBLOCK-2
     1261     4405                MESSAGE: Misuse of ACS=UBLOCK% on %UF%
     1262     4406        */
     1263     4407        /**/
     1264     4408    1           CALL HFF$NILERASE(1) ALTRET(NOKEY);

   4408  1 004061   000002 630400 2                  EPPR0   2
         1 004062   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 004063   000000 701000 xent               TSX1    HFF$NILERASE
         1 004064   004072 702000 1                  TSX2    NOKEY

     1265     4409    1           ADDR(F$DCB.CRECNO)->CHAR4=B$PS1$->CHAR4;

   4409  1 004065   000000 470400 xsym               LDP0    B$PS1$
         1 004066   200006 471500                    LDP1    JDCB$,,AUTO
         1 004067   040100 100500                    MLR     fill='040'O
         1 004070   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4
         1 004071   100071 000004                    ADSC9   57,,PR1                  cn=0,n=4

   4409  1 004072                       NOKEY        null
     1266     4410        /**/
     1267     4411    1   NOKEY:  ;
     1268     4412    1           IF F$DCB.CRECNO<FM$CFU.UGRANS-1 OR F$DCB.CRECNO>FM$CFU.UGRANS THEN

   4412  1 004072   200006 470500                    LDP0    JDCB$,,AUTO
         1 004073   200007 471500                    LDP1    CFU$,,AUTO
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:179  
         1 004074   100004 236100                    LDQ     4,,PR1
         1 004075   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 004076   000001 136007                    SBLQ    1,DL
         1 004077   000071 116100                    CMPQ    57,,PR0
         1 004100   004051 605400 1                  TPNZ    UBLKERR
         1 004101   100004 236100                    LDQ     4,,PR1
         1 004102   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 004103   000071 116100                    CMPQ    57,,PR0
         1 004104   004051 604000 1                  TMI     UBLKERR

     1269     4413    1              GOTO UBLKERR;
     1270     4414        /**/
     1271     4415    2           DO WHILE(F$DCB.UBYTES>0);

   4415  1 004105   000076 235100                    LDA     62,,PR0
         1 004106   004376 600000 1                  TZE     s:4469

     1272     4416    2              CALL FMD$GETBUF(1,1,BUF$);

   4416  1 004107   200010 630500                    EPPR0   BUF$,,AUTO
         1 004110   200050 450500                    STP0    DIR+4,,AUTO
         1 004111   000006 237000 2                  LDAQ    6
         1 004112   200046 757100                    STAQ    DIR+2,,AUTO
         1 004113   200046 630500                    EPPR0   DIR+2,,AUTO
         1 004114   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 004115   000000 701000 xent               TSX1    FMD$GETBUF
         1 004116   000000 011000                    NOP     0

     1273     4417    2              BUF$->PAGE=F$DCB.UB$->PAGE;

   4417  1 004117   200006 470500                    LDP0    JDCB$,,AUTO
         1 004120   000075 471500                    LDP1    61,,PR0
         1 004121   010000 220003                    LDX0    4096,DU
         1 004122   200010 473500                    LDP3    BUF$,,AUTO
         1 004123   000140 100540                    MLR     fill='000'O
         1 004124   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         1 004125   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:180  

     1274     4418        /**/
     1275     4419    2              IF F$DCB.SPAN THEN           /* Last write was of last gran        */

   4419  1 004126   000064 236100                    LDQ     52,,PR0
         1 004127   100000 316007                    CANQ    32768,DL
         1 004130   004136 600000 1                  TZE     s:4422

     1276     4420    2                 IF F$DCB.CRECNO=FM$CFU.UGRANS THEN

   4420  1 004131   200007 471500                    LDP1    CFU$,,AUTO
         1 004132   100004 236100                    LDQ     4,,PR1
         1 004133   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 004134   000071 116100                    CMPQ    57,,PR0
         1 004135   004051 600000 1                  TZE     UBLKERR

     1277     4421    2                    GOTO UBLKERR;
     1278     4422    2              F$DCB.SPAN=~FM$GRAN.NOTLDA;

   4422  1 004136   200010 471500                    LDP1    BUF$,,AUTO
         1 004137   100002 236100                    LDQ     2,,PR1
         1 004140   000022 736000                    QLS     18
         1 004141   400000 376003                    ANQ     -131072,DU
         1 004142   400000 676003                    ERQ     -131072,DU
         1 004143   000024 772000                    QRL     20
         1 004144   000064 676100                    ERQ     52,,PR0
         1 004145   100000 376007                    ANQ     32768,DL
         1 004146   000064 656100                    ERSQ    52,,PR0

     1279     4423    2              F$DCB.UB$=PINCRW(F$DCB.UB$,1024);

   4423  1 004147   000075 236100                    LDQ     61,,PR0
         1 004150   002000 036003                    ADLQ    1024,DU
         1 004151   000075 756100                    STQ     61,,PR0

     1280     4424    2              F$DCB.UBYTES=F$DCB.UBYTES-4096;

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:181  
   4424  1 004152   000076 235100                    LDA     62,,PR0
         1 004153   010000 135007                    SBLA    4096,DL
         1 004154   000076 755100                    STA     62,,PR0

     1281     4425    2              DA=F$DCB.CRECNO+FM_FRZERO;

   4425  1 004155   000071 236100                    LDQ     57,,PR0
         1 004156   000000 036000 xsym               ADLQ    FM_FRZERO
         1 004157   200014 756100                    STQ     DA,,AUTO

     1282     4426    2              F$DCB.BFR.DA(1)=DA;

   4426  1 004160   000116 552134                    STBQ    78,'34'O,PR0

     1283     4427    2              FM$GRAN.STAMP.HASH=F$DCB.HASH;

   4427  1 004161   000073 236100                    LDQ     59,,PR0
         1 004162   100000 552170                    STBQ    0,'70'O,PR1

     1284     4428    2              FM$GRAN.STAMP.GMOD=DA;

   4428  1 004163   200010 471500                    LDP1    BUF$,,AUTO
         1 004164   200014 236100                    LDQ     DA,,AUTO
         1 004165   100000 552104                    STBQ    0,'04'O,PR1

     1285     4429    2              FM$GRAN.ORG=F$DCB.ORG;

   4429  1 004166   200010 471500                    LDP1    BUF$,,AUTO
         1 004167   000032 236100                    LDQ     26,,PR0
         1 004170   000021 772000                    QRL     17
         1 004171   100001 676100                    ERQ     1,,PR1
         1 004172   036000 376007                    ANQ     15360,DL
         1 004173   100001 656100                    ERSQ    1,,PR1

     1286     4430    2              FM$GRAN.LVL=0;

   4430  1 004174   200010 471500                    LDP1    BUF$,,AUTO
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:182  
         1 004175   000037 236000 2                  LDQ     31
         1 004176   100001 356100                    ANSQ    1,,PR1

     1287     4431    2              IF FM$GRAN.NAVX<3 OR FM$GRAN.NAVX+FM$GRAN.AVAIL>1024 THEN

   4431  1 004177   200010 471500                    LDP1    BUF$,,AUTO
         1 004200   100001 221100                    LDX1    1,,PR1
         1 004201   000003 101003                    CMPX1   3,DU
         1 004202   004051 602000 1                  TNC     UBLKERR
         1 004203   100001 236100                    LDQ     1,,PR1
         1 004204   001777 376007                    ANQ     1023,DL
         1 004205   200046 756100                    STQ     DIR+2,,AUTO
         1 004206   100001 236100                    LDQ     1,,PR1
         1 004207   000022 772000                    QRL     18
         1 004210   200046 036100                    ADLQ    DIR+2,,AUTO
         1 004211   002001 116007                    CMPQ    1025,DL
         1 004212   004051 603000 1                  TRC     UBLKERR

     1288     4432    2                 GOTO UBLKERR;
     1289     4433    2              IF FM$GRAN.AVAIL>1024-3 THEN

   4433  1 004213   100001 236100                    LDQ     1,,PR1
         1 004214   001777 376007                    ANQ     1023,DL
         1 004215   001776 116007                    CMPQ    1022,DL
         1 004216   004051 603000 1                  TRC     UBLKERR

     1290     4434    2                 GOTO UBLKERR;
     1291     4435    2              CRECX=1023;

   4435  1 004217   001777 235007                    LDA     1023,DL
         1 004220   200013 755100                    STA     CRECX,,AUTO

     1292     4436    2              SEG$=PINCRW(BUF$,1023);

   4436  1 004221   200010 236100                    LDQ     BUF$,,AUTO
         1 004222   001777 036003                    ADLQ    1023,DU
         1 004223   200011 756100                    STQ     SEG$,,AUTO
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:183  

     1293     4437    2              GX=3;

   4437  1 004224   000003 235007                    LDA     3,DL
         1 004225   200016 755100                    STA     GX,,AUTO

     1294     4438    2              N=0;

   4438  1 004226   200022 450100                    STZ     N,,AUTO

     1295     4439    3              DO WHILE(CRECX>=FM$GRAN.AVAIL+FM$GRAN.NAVX);

   4439  1 004227   004300 710000 1                  TRA     s:4452

     1296     4440    4                 IF FM$CON.FAK~=0 THEN DO;

   4440  1 004230   200011 470500                    LDP0    SEG$,,AUTO
         1 004231   000000 236100                    LDQ     0,,PR0
         1 004232   400000 316003                    CANQ    -131072,DU
         1 004233   004237 600000 1                  TZE     s:4444

     1297     4441    4                    N=N+1;

   4441  1 004234   200022 054100                    AOS     N,,AUTO

     1298     4442    4                    F$DCB.RCSZ=0;

   4442  1 004235   200006 471500                    LDP1    JDCB$,,AUTO
         1 004236   100106 450100                    STZ     70,,PR1

     1299     4443    4                    END;

     1300     4444    3                 IF GX~=FM$CON.GX THEN

   4444  1 004237   000000 236100                    LDQ     0,,PR0
         1 004240   000014 772000                    QRL     12
         1 004241   001777 376007                    ANQ     1023,DL
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:184  
         1 004242   200016 116100                    CMPQ    GX,,AUTO
         1 004243   004051 601000 1                  TNZ     UBLKERR

     1301     4445    3                    GOTO UBLKERR;
     1302     4446    3                 GX=GX+(FM$CON.GACTB+3)/4;

   4446  1 004244   000000 236100                    LDQ     0,,PR0
         1 004245   007777 376007                    ANQ     4095,DL
         1 004246   000003 036007                    ADLQ    3,DL
         1 004247   000002 772000                    QRL     2
         1 004250   200016 036100                    ADLQ    GX,,AUTO
         1 004251   200016 756100                    STQ     GX,,AUTO

     1303     4447    3                 F$DCB.RCSZ=F$DCB.RCSZ+FM$CON.GACTB;

   4447  1 004252   200006 471500                    LDP1    JDCB$,,AUTO
         1 004253   000000 236100                    LDQ     0,,PR0
         1 004254   007777 376007                    ANQ     4095,DL
         1 004255   100106 036100                    ADLQ    70,,PR1
         1 004256   100106 756100                    STQ     70,,PR1

     1304     4448    3                 IF F$DCB.RCSZ/4096 > FM$CFU.RCSZ THEN

   4448  1 004257   000014 772000                    QRL     12
         1 004260   200046 756100                    STQ     DIR+2,,AUTO
         1 004261   200007 473500                    LDP3    CFU$,,AUTO
         1 004262   300004 236100                    LDQ     4,,PR3
         1 004263   000033 772000                    QRL     27
         1 004264   200046 116100                    CMPQ    DIR+2,,AUTO
         1 004265   004272 603000 1                  TRC     s:4450

     1305     4449    3                    FM$CFU.RCSZ=F$DCB.RCSZ/4096;

   4449  1 004266   100106 236100                    LDQ     70,,PR1
         1 004267   000014 772000                    QRL     12
         1 004270   000033 736000                    QLS     27
         1 004271   300004 552140                    STBQ    4,'40'O,PR3
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:185  

     1306     4450    3                 CRECX=CRECX-1;

   4450  1 004272   000001 336007                    LCQ     1,DL
         1 004273   200013 056100                    ASQ     CRECX,,AUTO

     1307     4451    3                 SEG$=PINCRW(BUF$,CRECX);

   4451  1 004274   200013 236100                    LDQ     CRECX,,AUTO
         1 004275   000022 736000                    QLS     18
         1 004276   200010 036100                    ADLQ    BUF$,,AUTO
         1 004277   200011 756100                    STQ     SEG$,,AUTO

     1308     4452    3                 END;

   4452  1 004300   200010 470500                    LDP0    BUF$,,AUTO
         1 004301   000001 236100                    LDQ     1,,PR0
         1 004302   000022 772000                    QRL     18
         1 004303   200046 756100                    STQ     DIR+2,,AUTO
         1 004304   000001 236100                    LDQ     1,,PR0
         1 004305   001777 376007                    ANQ     1023,DL
         1 004306   200046 036100                    ADLQ    DIR+2,,AUTO
         1 004307   004312 604000 1                  TMI     s:4453
         1 004310   200013 116100                    CMPQ    CRECX,,AUTO
         1 004311   004230 604400 1                  TMOZ    s:4440

     1309     4453    2              IF GX~=CRECX-FM$GRAN.AVAIL+1 THEN

   4453  1 004312   000001 236100                    LDQ     1,,PR0
         1 004313   001777 376007                    ANQ     1023,DL
         1 004314   200046 756100                    STQ     DIR+2,,AUTO
         1 004315   200013 236100                    LDQ     CRECX,,AUTO
         1 004316   200046 136100                    SBLQ    DIR+2,,AUTO
         1 004317   000001 036007                    ADLQ    1,DL
         1 004320   004051 604000 1                  TMI     UBLKERR
         1 004321   200016 116100                    CMPQ    GX,,AUTO
         1 004322   004051 601000 1                  TNZ     UBLKERR
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:186  

     1310     4454    2                 GOTO UBLKERR;
     1311     4455    2              IF F$DCB.CRECNO=FM$CFU.UGRANS THEN

   4455  1 004323   200006 471500                    LDP1    JDCB$,,AUTO
         1 004324   200007 473500                    LDP3    CFU$,,AUTO
         1 004325   300004 236100                    LDQ     4,,PR3
         1 004326   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 004327   100071 116100                    CMPQ    57,,PR1
         1 004330   004340 601000 1                  TNZ     s:4458

     1312     4456    2              CALL FAF$GETGRAN(DA) ALTRET(UERR);

   4456  1 004331   200014 634500                    EPPR4   DA,,AUTO
         1 004332   200046 454500                    STP4    DIR+2,,AUTO
         1 004333   200046 630500                    EPPR0   DIR+2,,AUTO
         1 004334   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 004335   000000 701000 xent               TSX1    FAF$GETGRAN
         1 004336   004403 702000 1                  TSX2    UERR
         1 004337   004343 710000 1                  TRA     s:4459

     1313     4457    2              ELSE
     1314     4458    2                 FM$CFU.NRECS=FM$CFU.NRECS-F$DCB.GDISP;

   4458  1 004340   300001 236100                    LDQ     1,,PR3
         1 004341   100101 136100                    SBLQ    65,,PR1
         1 004342   300001 756100                    STQ     1,,PR3

     1315     4459    2              FM$CFU.NRECS=FM$CFU.NRECS+N;

   4459  1 004343   200007 470500                    LDP0    CFU$,,AUTO
         1 004344   000001 236100                    LDQ     1,,PR0
         1 004345   200022 036100                    ADLQ    N,,AUTO
         1 004346   000001 756100                    STQ     1,,PR0

     1316     4460    2              F$DCB.NRECS=FM$CFU.NRECS;

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:187  
   4460  1 004347   200006 471500                    LDP1    JDCB$,,AUTO
         1 004350   100042 756100                    STQ     34,,PR1

     1317     4461    2              IF DA>FM$CFU.LDA THEN

   4461  1 004351   000006 235100                    LDA     6,,PR0
         1 004352   000007 236100                    LDQ     7,,PR0
         1 004353   000033 773000                    LRL     27
         1 004354   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 004355   200014 116100                    CMPQ    DA,,AUTO
         1 004356   004362 605000 1                  TPL     s:4463

     1318     4462    2                 FM$CFU.LDA=DA;

   4462  1 004357   000100 101500                    MRL     fill='000'O
         1 004360   200014 000004                    ADSC9   DA,,AUTO                 cn=0,n=4
         1 004361   000006 400003                    ADSC9   6,,PR0                   cn=2,n=3

     1319     4463    2              F$DCB.GDISP=N;

   4463  1 004362   200022 235100                    LDA     N,,AUTO
         1 004363   100101 755100                    STA     65,,PR1

     1320     4464    2              FM$CFU.FMOD='1'B;

   4464  1 004364   004000 236003                    LDQ     2048,DU
         1 004365   000000 256100                    ORSQ    0,,PR0

     1321     4465    2              CALL FMD$WRTBUF(1);

   4465  1 004366   000002 630400 2                  EPPR0   2
         1 004367   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 004370   000000 701000 xent               TSX1    FMD$WRTBUF
         1 004371   000000 011000                    NOP     0

     1322     4466    2              F$DCB.CRECNO=F$DCB.CRECNO+1;

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:188  
   4466  1 004372   200006 470500                    LDP0    JDCB$,,AUTO
         1 004373   000071 054100                    AOS     57,,PR0

     1323     4467    2              END;

   4467  1 004374   000076 235100                    LDA     62,,PR0
         1 004375   004107 601000 1                  TNZ     s:4416

     1324     4468        /**/
     1325     4469    1           CALL FMD$RELBUF(1);

   4469  1 004376   000002 630400 2                  EPPR0   2
         1 004377   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 004400   000000 701000 xent               TSX1    FMD$RELBUF
         1 004401   000000 011000                    NOP     0

     1326     4470    1           RETURN;

   4470  1 004402   000000 702200 xent               TSX2  ! X66_ARET

   4462  1 004403                       UERR         null
     1327     4471        /**/
     1328     4472    1   UERR:   ;
     1329     4473    1           GOTO ERR;

   4473  1 004403   002153 710000 1                  TRA     ERR

     1330     4474        /**/
     1331     4475        /**/
     1332     4476    1   FMH$UBLKCLS: ENTRY ALTRET;

   4476  1 004404   000000 700200 xent  FMH$UBLKCLS  TSX0  ! X66_AUTO_3
         1 004405   000056 000003                    ZERO    46,3

     1333     4477        /**/
     1334     4478    1           JDCB$=B$JIT.DCB$;

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:189  
   4478  1 004406   000000 470400 xsym               LDP0    B$JIT$
         1 004407   000232 236100                    LDQ     154,,PR0
         1 004410   200006 756100                    STQ     JDCB$,,AUTO

     1335     4479    1           IF F$DCB.SPAN THEN

   4479  1 004411   200006 471500                    LDP1    JDCB$,,AUTO
         1 004412   100064 236100                    LDQ     52,,PR1
         1 004413   100000 316007                    CANQ    32768,DL
         1 004414   004416 600000 1                  TZE     s:4481

     1336     4480    1              RETURN;

   4480  1 004415   000000 702200 xent               TSX2  ! X66_ARET

     1337     4481    1           CFU$=F$DCB.CFU$;

   4481  1 004416   100066 236100                    LDQ     54,,PR1
         1 004417   200007 756100                    STQ     CFU$,,AUTO

     1338     4482    1           IF FM$CFU.UGRANS=0 THEN

   4482  1 004420   200007 473500                    LDP3    CFU$,,AUTO
         1 004421   300004 236100                    LDQ     4,,PR3
         1 004422   000032 316000 xsym               CANQ    B_VECTNIL+26
         1 004423   004425 601000 1                  TNZ     s:4484

     1339     4483    1              ALTRETURN;                   /* Nothing ever written               */

   4483  1 004424   000000 702200 xent               TSX2  ! X66_AALT

     1340     4484    1           DA=FM$CFU.LDA;

   4484  1 004425   300006 235100                    LDA     6,,PR3
         1 004426   300007 236100                    LDQ     7,,PR3
         1 004427   000033 773000                    LRL     27
         1 004430   000032 376000 xsym               ANQ     B_VECTNIL+26
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:190  
         1 004431   200014 756100                    STQ     DA,,AUTO

     1341     4485    1           CALL FMD$REDBUF(BUF$,1,DA) ALTRET(ERR);

   4485  1 004432   200014 634500                    EPPR4   DA,,AUTO
         1 004433   200050 454500                    STP4    DIR+4,,AUTO
         1 004434   000002 236000 2                  LDQ     2
         1 004435   200047 756100                    STQ     DIR+3,,AUTO
         1 004436   200010 635500                    EPPR5   BUF$,,AUTO
         1 004437   200046 455500                    STP5    DIR+2,,AUTO
         1 004440   200046 630500                    EPPR0   DIR+2,,AUTO
         1 004441   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 004442   000000 701000 xent               TSX1    FMD$REDBUF
         1 004443   002153 702000 1                  TSX2    ERR

     1342     4486    1           FM$GRAN.NOTLDA='0'B;

   4486  1 004444   200010 470500                    LDP0    BUF$,,AUTO
         1 004445   000035 236000 2                  LDQ     29
         1 004446   000002 356100                    ANSQ    2,,PR0

     1343     4487    1           CALL FMD$WRTBUF(1);

   4487  1 004447   000002 630400 2                  EPPR0   2
         1 004450   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 004451   000000 701000 xent               TSX1    FMD$WRTBUF
         1 004452   000000 011000                    NOP     0

     1344     4488    1           RETURN;

   4488  1 004453   000000 702200 xent               TSX2  ! X66_ARET

ERRRWLD
 Sect OctLoc
   0     000   061510 000072                                                    1..:

ERRLD
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:191  
 Sect OctLoc
   0     001   061506 000072                                                    1..:

ERRFREC
 Sect OctLoc
   0     002   061510 000462                                                    1...

ERRFIT
 Sect OctLoc
   0     003   061510 000512                                                    1...

ERRWRDEL
 Sect OctLoc
   0     004   061510 001032                                                    1...

ERREOF
 Sect OctLoc
   0     005   061510 000062                                                    1..2

ERRBOF
 Sect OctLoc
   0     006   061510 000042                                                    1.."

ERRNOCONT
 Sect OctLoc
   0     007   061510 001132                                                    1..Z

ERRDELFWD
 Sect OctLoc
   0     010   061510 001212                                                    1...

ERRREWRITE
 Sect OctLoc
   0     011   061510 000652                                                    1...

ERRCONCOMP
 Sect OctLoc
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:192  
   0     012   061510 001142                                                    1..b

ERRUBLOCK
 Sect OctLoc
   0     013   061510 001322                                                    1...

ERRWRITNEW
 Sect OctLoc
   0     014   061510 000662                                                    1...

ERRPMMEINT
 Sect OctLoc
   0     015   061510 001232                                                    1...

DUMMYFPT
 Sect OctLoc
   0     016   000000 000000   000000 000000   000000 000000   000000 000000    ................

(unnamed)
 Sect OctLoc
   2     000   774777 777777   777777 777737   000003 006000   000002 006000    ................
   2     004   777777 767777   000006 006000   000003 006000   000003 006000    ................
   2     010   000002 006000   000002 006000   000015 006000   000002 006000    ................
   2     014   743777 777777   000005 006000   000004 006000   000000 000051    ...............)
   2     020   000000 000015   000017 006000   000020 006000   000012 006000    ................
   2     024   000017 770000   777777 400007   000000 000046   000000 000014    ...........&....
   2     030   000026 006000   000027 006000   000000 006000   000002 006000    ................
   2     034   777777 776000   777777 377777   000016 006000   777777 437777    ................
     1345     4489    1   END FMH$CPMME;
     1346     4490        %EOD;

PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:193  
--  Include file information  --

   B_MAGIC_C.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   UD_ERRORS_C.:E05TOU  is referenced.
   B$SS.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   F_FPTCODE_C.:E05TOU  is referenced.
   F$CP6V_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   FM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   N_FC_C.:E05TOU  is referenced.
   FM$MACROS.:E05TOU  is referenced.
   F$DCB.:E05TOU  is referenced.
   NK_URTBL_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   B$TABLES_C.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMH$CPMME.
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:194  

 **** Variables and constants ****

  ****  Section 000 RoData FMH$CPMME

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    16-0-0/w UBIN        r     1 DUMMYFPT(0:3)
     6-0-0/b STRC        r     1 ERRBOF                    12-0-0/b STRC        r     1 ERRCONCOMP
    10-0-0/b STRC        r     1 ERRDELFWD                  5-0-0/b STRC        r     1 ERREOF
     3-0-0/b STRC        r     1 ERRFIT                     2-0-0/b STRC        r     1 ERRFREC
     1-0-0/b STRC        r     1 ERRLD                      7-0-0/b STRC        r     1 ERRNOCONT
    15-0-0/b STRC        r     1 ERRPMMEINT                11-0-0/b STRC        r     1 ERRREWRITE
     0-0-0/b STRC        r     1 ERRRWLD                   13-0-0/b STRC        r     1 ERRUBLOCK
     4-0-0/b STRC        r     1 ERRWRDEL                  14-0-0/b STRC        r     1 ERRWRITNEW

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @FPTCODE                   4-0-0/w PTR         r     1 @PARMFPT
     5-0-0/w PTR         r     1 @VFC                      10-0-0/w PTR         r     1 BUF$
    21-0-0/w UBIN        r     1 BUFNUM                     7-0-0/w PTR         r     1 CFU$
    25-0-0/b BIT         r     1 CONT                      13-0-0/w SBIN        r     1 CRECX
    14-0-0/w SBIN        r     1 DA                        43-0-0/w SBIN        r     1 DA
    44-0-0/w SBIN        r     1 DIR                       35-0-0/b BIT         r     1 EOFHIT
    24-0-0/w SBIN        r     1 EOP                       20-0-0/w SBIN        r     1 FAK
    41-0-0/w SBIN        r     1 FAK                       26-0-0/w PTR         r     1 FPT$
    *0-0-0/w SBIN        r     1 FPTCODE                   17-0-0/w PTR         r     1 G$
    15-0-0/w UBIN        r     1 GBYTES                    16-0-0/w UBIN        r     1 GX
    23-0-0/w SBIN        r     1 I                          6-0-0/w PTR         r     1 JDCB$
    12-0-0/w SBIN        r     1 LSTSEG                    22-0-0/w SBIN        r     1 N
    *0-0-0/w UBIN        r     1 PARMFPT                   11-0-0/w PTR         r     1 SEG$
    *0-0-0/c CHAR        r     1 VFC                       21-0-0/w SBIN        r     1 WRDS

  ****  SYMREF variables  ****
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:195  

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$PS1$
     0-0-0/w PTR         r     1 B$XL_LOWER_UR$             0-0-0/w PTR         r     1 B$XL_MOD_256$
     0-0-0/w PTR         r     1 B$XL_UPPER_UR$             0-0-0/w PTR         r     1 B$XL_UR$
     0-0-0/d STRC(432)   r     1 B_MPT
     0-0-0/w PTR         r     1 FM$BUF$(0:0)
     0-0-0/w UBIN        r     1 FM_EOP(0:8)                0-0-0/w UBIN        r     1 FM_FRZERO
     0-0-0/c CHAR        r     1 NK_NATLTBL(0:511)
     0-0-0/w PTR         r     1 S$CU$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d STRC(2304)  r     1 B$SS
     0-0-0/d STRC(576)   r     1 B$U                        0-0-0/d STRC(4608)  r     1 B$XL_LOWER_UR
     0-0-0/d STRC(4608)  r     1 B$XL_MOD_256               0-0-0/d STRC(4608)  r     1 B$XL_UPPER_UR
     0-0-0/d STRC(4608)  r     1 B$XL_UR                    0-0-0/c CHAR        r     1 CHAR1
     0-0-0/c CHAR(4)     r     1 CHAR4                      0-0-0/c ACHR        r     1 CHARS
     0-0-0/w STRC(324)   r     1 CODE03                     0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w STRC(288)   r     1 FM$CFU                     0-0-0/w STRC(288)   r     1 FM$CFUJ
     0-0-0/w STRC        r     1 FM$CON                     0-0-0/w STRC(180)   r     1 FM$GRAN
     0-0-0/d STRC(72)    r     1 FPT$DELREC_V               0-0-0/d STRC(72)    r     1 FPT$PFIL_V
     0-0-0/d STRC(108)   r     1 FPT$PRECORD_V              0-0-0/d STRC(216)   r     1 FPT$READ_V
     0-0-0/d STRC(144)   r     1 FPT$WRITE_V                0-0-0/w UBIN        r     1 PAGE(0:1023)
     0-0-0/c UBIN        r     1 UBIN36


   Procedure FMH$CPMME requires 2348 words for executable code.
   Procedure FMH$CPMME requires 46 words of local(AUTO) storage.
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:196  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:197  
          MINI XREF LISTING

B$DO.ECCINFO
      2728**DCL      2729--REDEF
B$JIT.CPFLAGS1.SLEAZE
       646**DCL       646--REDEF
B$JIT.DCB$
       720**DCL      3331>>ASSIGN   3895>>ASSIGN   3918>>ASSIGN   3961>>ASSIGN   4081>>ASSIGN   4114>>ASSIGN
      4389>>ASSIGN   4478>>ASSIGN
B$JIT.ERR
       552**DCL      3495<<ASSIGN   3501<<ASSIGN   3530<<ASSIGN   3580<<ASSIGN   3590<<ASSIGN   3592<<ASSIGN
      3703<<ASSIGN   3715<<ASSIGN   3786<<ASSIGN   3788<<ASSIGN   3797<<ASSIGN   3806<<ASSIGN   3836<<ASSIGN
      3965<<ASSIGN   3970<<ASSIGN   3973<<ASSIGN   4086<<ASSIGN   4091<<ASSIGN   4151<<ASSIGN   4163<<ASSIGN
      4321>>ASSIGN   4349<<ASSIGN   4401<<ASSIGN
B$JIT.ERR.CODE
       553**DCL      3418>>IF       3446>>IF       3589>>IF       3708>>IF       3712>>IF       3774>>IF
      3775<<ASSIGN   3972>>IF       4089>>IF       4210>>IF       4245>>IF       4317>>IF       4345>>IF
B$JIT.ERR.MID
       553**DCL       553--REDEF
B$JIT.JRESPEAK
       714**DCL       715--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       823**DCL       823--REDEF     824--REDEF
B$JIT.PNR
       727**DCL       727--REDEF
B$JIT.TSLINE
       821**DCL       822--REDEF
B$JIT$
        93**DCL       547--IMP-PTR  3331>>ASSIGN   3418>>IF       3446>>IF       3495>>ASSIGN   3501>>ASSIGN
      3530>>ASSIGN   3580>>ASSIGN   3589>>IF       3590>>ASSIGN   3592>>ASSIGN   3703>>ASSIGN   3708>>IF
      3712>>IF       3715>>ASSIGN   3774>>IF       3775>>ASSIGN   3786>>ASSIGN   3788>>ASSIGN   3797>>ASSIGN
      3806>>ASSIGN   3836>>ASSIGN   3895>>ASSIGN   3918>>ASSIGN   3961>>ASSIGN   3965>>ASSIGN   3970>>ASSIGN
      3972>>IF       3973>>ASSIGN   4081>>ASSIGN   4086>>ASSIGN   4089>>IF       4091>>ASSIGN   4114>>ASSIGN
      4151>>ASSIGN   4163>>ASSIGN   4210>>IF       4245>>IF       4317>>IF       4321>>ASSIGN   4345>>IF
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:198  
      4349>>ASSIGN   4389>>ASSIGN   4401>>ASSIGN   4478>>ASSIGN
B$PS1$
       220**DCL      3375>>ASSIGN   3707>>ASSIGN   3717>>ASSIGN   3777>>ASSIGN   3778>>IF       3779>>ASSIGN
      4409>>ASSIGN
B$SS.ISR.WSR
      2413**DCL      3685>>IF       3697>>IF
B$SS.RVA
      2408**DCL      2409--REDEF
B$U.ASYNCH
      2665**DCL      3685>>IF       3697>>IF
B$U.MISC
      2707**DCL      2708--REDEF
B$USER.MISC
      2783**DCL      2784--REDEF
B$XL_LOWER_UR
       216**DCL      4035>>CALLBLT
B$XL_LOWER_UR$
       215**DCL       216--IMP-PTR  4035>>CALLBLT
B$XL_MOD_256
       204**DCL      4026>>CALLBLT  4032>>CALLBLT
B$XL_MOD_256$
       203**DCL       204--IMP-PTR  4026>>CALLBLT  4032>>CALLBLT
B$XL_UPPER_UR
       212**DCL      4023>>CALLBLT
B$XL_UPPER_UR$
       211**DCL       212--IMP-PTR  4023>>CALLBLT
B$XL_UR
       208**DCL      4020>>CALLBLT
B$XL_UR$
       207**DCL       208--IMP-PTR  4020>>CALLBLT
BACK IN PROCEDURE BEGREC
      4341**LABEL    4322--GOTO
BACK2 IN PROCEDURE BACKUP
      4357**LABEL    4358--GOTO
BACKUP IN PROCEDURE BEGREC
      4356**PROC     4328--CALL     4333--CALL     4342--CALL
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:199  
BCKERR IN PROCEDURE BEGREC
      4345**LABEL    4342--CALLALT
BEGREC
      4305**PROC     3693--CALL     3832--CALL     4283--CALL
BLINK IN PROCEDURE FLINK
      4156**ENTRY    4242--CALL
BUF$
        75**DCL      3132--IMP-PTR  3355>>ASSIGN   3356>>IF       3379>>ASSIGN   3380>>IF       3468>>ASSIGN
      3468>>ASSIGN   3474>>ASSIGN   3511>>ASSIGN   3512>>IF       3537>>ASSIGN   3538>>ASSIGN   3538>>ASSIGN
      3598>>DOCASE   3607>>IF       3608>>ASSIGN   3611>>ASSIGN   3615<>CALL     3621<>CALL     3623>>ASSIGN
      3624>>ASSIGN   3625>>ASSIGN   3626>>ASSIGN   3627>>ASSIGN   3627>>ASSIGN   3628>>ASSIGN   3634>>ASSIGN
      3640>>ASSIGN   3641>>ASSIGN   3642>>ASSIGN   3655>>ASSIGN   3655>>ASSIGN   3656>>ASSIGN   3658>>ASSIGN
      3658>>ASSIGN   3659>>ASSIGN   3659>>ASSIGN   3800<>CALL     3857<>CALL     3874<>CALL     3875>>ASSIGN
      3875>>ASSIGN   3921>>ASSIGN   3921>>ASSIGN   3921>>ASSIGN   3922>>ASSIGN   3978>>ASSIGN   3981>>ASSIGN
      3983>>IF       3984>>ASSIGN   3988<>CALL     3989>>ASSIGN   3990>>ASSIGN   3991>>ASSIGN   3992>>ASSIGN
      3993>>ASSIGN   3993>>ASSIGN   3994>>ASSIGN   3995>>ASSIGN   4001>>ASSIGN   4004>>ASSIGN   4005>>ASSIGN
      4061>>ASSIGN   4061>>ASSIGN   4062>>ASSIGN   4062>>ASSIGN   4092>>ASSIGN   4094>>ASSIGN   4166<>CALL
      4167>>ASSIGN   4167>>ASSIGN   4201>>ASSIGN   4213>>ASSIGN   4236>>ASSIGN   4250>>ASSIGN   4327>>ASSIGN
      4352>>ASSIGN   4369<>CALL     4372<<ASSIGN   4373>>ASSIGN   4373>>ASSIGN   4377>>ASSIGN   4416<>CALL
      4417>>ASSIGN   4422>>ASSIGN   4427>>ASSIGN   4428>>ASSIGN   4429>>ASSIGN   4430>>ASSIGN   4431>>IF
      4431>>IF       4431>>IF       4433>>IF       4436>>ASSIGN   4439>>DOWHILE  4439>>DOWHILE  4451>>ASSIGN
      4453>>IF       4485<>CALL     4486>>ASSIGN
BUFNUM
        85**DCL      3555<<ASSIGN   3556<>CALL     3562>>IF       3563<>CALL     3565>>IF
B_MPT.AS
      3178**DCL      3181--REDEF
B_MPT.ASDESC
      3210**DCL      3214--REDEF
B_MPT.ECCB
      3193**DCL      3196--REDEF
B_MPT.ECCBDESC
      3228**DCL      3232--REDEF
B_MPT.LS
      3173**DCL      3176--REDEF
B_MPT.LSDESC
      3204**DCL      3208--REDEF
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:200  
B_MPT.PS
      3183**DCL      3186--REDEF
B_MPT.PSDESC
      3216**DCL      3220--REDEF
B_MPT.SS
      3168**DCL      3171--REDEF
B_MPT.SS$
      3171**DCL      3685>>IF       3697>>IF
B_MPT.SSDESC
      3198**DCL      3202--REDEF
B_MPT.TCB
      3188**DCL      3191--REDEF
B_MPT.TCBDESC
      3222**DCL      3226--REDEF
CFU$
        74**DCL      3117--IMP-PTR  3123--IMP-PTR  3332<<ASSIGN   3442>>ASSIGN   3457>>ASSIGN   3464>>IF
      3491>>IF       3492>>ASSIGN   3541>>ASSIGN   3549>>ASSIGN   3550>>ASSIGN   3550>>ASSIGN   3551>>ASSIGN
      3551>>ASSIGN   3560>>ASSIGN   3573>>ASSIGN   3574>>ASSIGN   3603>>ASSIGN   3612>>ASSIGN   3620>>ASSIGN
      3652>>ASSIGN   3653>>ASSIGN   3731>>ASSIGN   3734>>ASSIGN   3734>>ASSIGN   3735>>ASSIGN   3873>>ASSIGN
      3876>>ASSIGN   3896<<ASSIGN   3919<<ASSIGN   3962<<ASSIGN   3999>>ASSIGN   4003>>ASSIGN   4055>>ASSIGN
      4056>>ASSIGN   4057>>ASSIGN   4082<<ASSIGN   4096>>ASSIGN   4115<<ASSIGN   4148>>IF       4214>>ASSIGN
      4390<<ASSIGN   4412>>IF       4412>>IF       4420>>IF       4448>>IF       4449>>ASSIGN   4455>>IF
      4458>>ASSIGN   4458>>ASSIGN   4459>>ASSIGN   4459>>ASSIGN   4460>>ASSIGN   4461>>IF       4462>>ASSIGN
      4464>>ASSIGN   4481<<ASSIGN   4482>>IF       4484>>ASSIGN
CHAR1
      3239**DCL      3361>>ASSIGN   3478<<CALLBLT  4007<<ASSIGN
CHAR4
      3241**DCL      3375<<ASSIGN   3375>>ASSIGN   3707<<ASSIGN   3707>>ASSIGN   3717<<ASSIGN   3717>>ASSIGN
      3777<<ASSIGN   3777>>ASSIGN   4409<<ASSIGN   4409>>ASSIGN
CHARS
      3242**DCL      3361<<ASSIGN   3478>>CALLBLT  4020<<CALLBLT  4020>>CALLBLT  4023<<CALLBLT  4023>>CALLBLT
      4026<<CALLBLT  4026>>CALLBLT  4029<<CALLBLT  4029>>CALLBLT  4032<<CALLBLT  4032>>CALLBLT  4035<<CALLBLT
      4035>>CALLBLT  4040<<ASSIGN   4040>>ASSIGN   4044<<ASSIGN   4044>>ASSIGN
CHKEOP
      3829**PROC     3507--CALL     3730--CALL
CODE03.LDA
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:201  
      3139**DCL      3560<<ASSIGN
CODE03.NRECS
      3138**DCL      3561<<ASSIGN
CONT
        89**DCL      3335<<ASSIGN   3458>>IF
CPMME
      3331**LABEL    3958--GOTO
CRECX
        78**DCL      3348>>IF       3464>>IF       3538>>ASSIGN   3632<<ASSIGN   4198>>IF       4198<<ASSIGN
      4199<<ASSIGN   4199>>ASSIGN   4200>>ASSIGN   4201>>ASSIGN   4202>>IF       4208<<ASSIGN   4211<<ASSIGN
      4212>>ASSIGN   4213>>ASSIGN   4227>>IF       4228<<ASSIGN   4233<<ASSIGN   4233>>ASSIGN   4235>>ASSIGN
      4236>>ASSIGN   4237>>IF       4243<<ASSIGN   4247<<ASSIGN   4314>>IF       4326>>IF       4350<<ASSIGN
      4352>>ASSIGN   4376<<ASSIGN   4377>>ASSIGN   4435<<ASSIGN   4439>>DOWHILE  4450<<ASSIGN   4450>>ASSIGN
      4451>>ASSIGN   4453>>IF
DA
        79**DCL      3543<<ASSIGN   3545<>CALL     3546<>CALL     3547<<ASSIGN   3547>>ASSIGN   3603<<ASSIGN
      3604<>CALL     3606<>CALL     3612>>ASSIGN   3625>>ASSIGN   3629>>ASSIGN   3798<<ASSIGN   3800<>CALL
      3873<<ASSIGN   3874<>CALL     3980<>CALL     3991>>ASSIGN   3996>>ASSIGN   3999>>ASSIGN   4368<<ASSIGN
      4369<>CALL     4425<<ASSIGN   4426>>ASSIGN   4428>>ASSIGN   4456<>CALL     4461>>IF       4462>>ASSIGN
      4484<<ASSIGN   4485<>CALL
DA IN PROCEDURE FLINK
      4143**DCL      4147<<ASSIGN   4148>>IF       4159<<ASSIGN   4160>>IF       4166<>CALL
DELFWD
      3519**LABEL    3443--GOTO
DELFWD5
      3565**LABEL    3553--GOTO
DIR IN PROCEDURE FLINK
      4144**DCL      4146<<ASSIGN   4158<<ASSIGN
DONE IN PROCEDURE NXTREC
      4285**LABEL    4277--GOTO
DUMMYFPT
      3327**DCL      4116--ASSIGN
EOFHIT IN PROCEDURE BEGREC
      4307**DCL      4309<<ASSIGN   4321<<ASSIGN   4346>>IF       4349>>ASSIGN
EOP
        88**DCL      3333<<ASSIGN   3346>>IF       3459>>IF       3741>>ASSIGN   3830>>DOCASE
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:202  
ERR
      3782**LABEL    3344--CALLALT  3384--CALLALT  3440--CALLALT  3447--GOTO     3456--CALLALT  3496--GOTO
      3502--GOTO     3507--CALLALT  3513--CALLALT  3531--GOTO     3582--GOTO     3593--GOTO     3606--CALLALT
      3643--CALLALT  3674--CALLALT  3676--CALLALT  3677--CALLALT  3709--GOTO     3712--GOTO     3714--GOTO
      3726--CALLALT  3729--CALLALT  3730--CALLALT  3755--CALLALT  3759--CALLALT  3780--GOTO     3897--CALLALT
      3920--CALLALT  3963--CALLALT  3966--GOTO     3971--GOTO     3972--GOTO     3980--CALLALT  4083--CALLALT
      4087--GOTO     4090--GOTO     4393--CALLALT  4402--GOTO     4473--GOTO     4485--CALLALT
ERR IN PROCEDURE BACKUP
      4360**LABEL    4357--CALLALT
ERR IN PROCEDURE BEGREC
      4354**LABEL    4328--CALLALT  4333--CALLALT
ERR IN PROCEDURE CHKEOP
      3840**LABEL    3832--CALLALT  3834--CALLALT
ERR IN PROCEDURE FLINK
      4152**LABEL    4164--GOTO     4166--CALLALT
ERR IN PROCEDURE NXTREC
      4286**LABEL    4276--CALLALT  4283--CALLALT
ERR IN PROCEDURE NXTSEG
      4251**LABEL    4210--GOTO     4215--GOTO     4245--GOTO
ERR IN PROCEDURE PFIL_EOF
      3879**LABEL    3874--CALLALT
ERR IN PROCEDURE REWIND
      3862**LABEL    3857--CALLALT
ERR IN PROCEDURE SETUP
      4379**LABEL    4369--CALLALT
ERRBOF
      3296**DCL      4163>>ASSIGN
ERRBOF IN PROCEDURE NXTSEG
      4245**LABEL    4242--CALLALT
ERRCONCOMP
      3312**DCL      3501>>ASSIGN
ERRDELFWD
      3304**DCL      3530>>ASSIGN   3970>>ASSIGN   4086>>ASSIGN
ERREOF
      3292**DCL      4151>>ASSIGN
ERREOF IN PROCEDURE NXTSEG
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:203  
      4210**LABEL    4207--CALLALT
ERRFIT
      3284**DCL      3580>>ASSIGN
ERRFREC
      3280**DCL      3797>>ASSIGN
ERRLD
      3276**DCL      3786>>ASSIGN
ERRNOCONT
      3300**DCL      3806>>ASSIGN
ERRPMMEINT
      3324**DCL      3703>>ASSIGN
ERRREWRITE
      3308**DCL      3495>>ASSIGN   3965>>ASSIGN
ERRRWLD
      3272**DCL      3788>>ASSIGN
ERRUBLOCK
      3316**DCL      4401>>ASSIGN
ERRWRDEL
      3288**DCL      3836>>ASSIGN
ERRWRITNEW
      3320**DCL      3592>>ASSIGN
ERR_INT
      3703**LABEL    3688--GOTO     3700--GOTO
F$DCB.ACS
      3084**DCL      3438>>IF       3454>>IF       3459>>IF       3493>>IF       3600>>IF       3613>>IF
      4365>>IF       4374>>IF
F$DCB.ACTPOS
      3092**DCL      3092--REDEF
F$DCB.ARS
      3067**DCL      3067--REDEF    3363<<ASSIGN   3363>>ASSIGN   3671<<ASSIGN   3682<<ASSIGN   3682>>ASSIGN
      3695<<ASSIGN   3695>>ASSIGN   3736<<ASSIGN
F$DCB.ATTR
      3085**DCL      3086--REDEF
F$DCB.BFR.BUFUP
      3111**DCL      3539<<ASSIGN   3609<<ASSIGN   3630<<ASSIGN   3661<<ASSIGN   3733<<ASSIGN   3923<<ASSIGN
      3985<<ASSIGN   3997<<ASSIGN   4058<<ASSIGN   4095<<ASSIGN
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:204  
F$DCB.BFR.BUFX
      3112**DCL      4367>>IF       4372>>ASSIGN
F$DCB.BFR.DA
      3112**DCL      3464>>IF       3541>>ASSIGN   3543>>ASSIGN   3549>>ASSIGN   3600>>IF       3629<<ASSIGN
      3798>>ASSIGN   3996<<ASSIGN   4147>>ASSIGN   4159>>ASSIGN   4368>>ASSIGN   4426<<ASSIGN
F$DCB.BFR.SCRUB
      3111**DCL      3540<<ASSIGN   3631<<ASSIGN   3998<<ASSIGN
F$DCB.BORROW
      3100**DCL      3100--REDEF    3100--REDEF    3100--REDEF
F$DCB.CFU$
      3101**DCL      3332>>ASSIGN   3896>>ASSIGN   3919>>ASSIGN   3962>>ASSIGN   4082>>ASSIGN   4115>>ASSIGN
      4390>>ASSIGN   4481>>ASSIGN
F$DCB.COMP
      3080**DCL      3346>>IF       3459>>IF       3500>>IF
F$DCB.CONT
      3099**DCL      3335>>ASSIGN   3336<<ASSIGN   3770<<ASSIGN
F$DCB.CRECNO
      3104**DCL      3375--ASSIGN   3561>>ASSIGN   3573>>ASSIGN   3652>>ASSIGN   3707--ASSIGN   3717--ASSIGN
      3777--ASSIGN   3860<<ASSIGN   3876<<ASSIGN   4003<<ASSIGN   4055>>ASSIGN   4204<<ASSIGN   4204>>ASSIGN
      4214<<ASSIGN   4239<<ASSIGN   4239>>ASSIGN   4246<<ASSIGN   4409--ASSIGN   4412>>IF       4412>>IF
      4420>>IF       4425>>ASSIGN   4455>>IF       4466<<ASSIGN   4466>>ASSIGN
F$DCB.CRECX
      3103**DCL      3633<<ASSIGN   3799>>ASSIGN   3858<<ASSIGN   3875<<ASSIGN   4000<<ASSIGN   4059<<ASSIGN
      4059>>ASSIGN   4200<<ASSIGN   4212<<ASSIGN   4235<<ASSIGN   4248<<ASSIGN   4351<<ASSIGN   4375<<ASSIGN
      4376>>ASSIGN
F$DCB.DCBNAME.L
      3114**DCL      3114--IMP-SIZ
F$DCB.DISP
      3082**DCL      3552>>IF
F$DCB.DVBYTE
      3070**DCL      3382<<ASSIGN   3901<<ASSIGN
F$DCB.EOMCHAR
      3071**DCL      3071--REDEF
F$DCB.EOP
      3096**DCL      3333>>ASSIGN   3334<<ASSIGN   3741<<ASSIGN   3768<<ASSIGN   3784<<ASSIGN   4117<<ASSIGN
F$DCB.FFLG.DELR
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:205  
      3072**DCL      3529>>IF
F$DCB.FFLG.UPD
      3072**DCL      3494>>IF
F$DCB.FFLG.WNEW
      3072**DCL      3591>>IF
F$DCB.FLDID
      3095**DCL      3095--REDEF
F$DCB.FORM$
      3089**DCL      3089--REDEF
F$DCB.FSECT
      3105**DCL      3105--REDEF
F$DCB.FSN
      3082**DCL      3082--REDEF    3082--REDEF    3083--REDEF
F$DCB.GDISP
      3106**DCL      3350>>IF       3353>>ASSIGN   3361>>ASSIGN   3362<<ASSIGN   3362>>ASSIGN   3372<<ASSIGN
      3395<<ASSIGN   3470>>IF       3472>>ASSIGN   3478>>CALLBLT  3479<<ASSIGN   3479>>ASSIGN   3480>>ASSIGN
      3489<<ASSIGN   3656>>ASSIGN   3665<<ASSIGN   4458>>ASSIGN   4463<<ASSIGN
F$DCB.GTYP
      3096**DCL      3557<<ASSIGN   3581<<ASSIGN
F$DCB.HASH
      3104**DCL      3611<<ASSIGN   3624>>ASSIGN   3990>>ASSIGN   4427>>ASSIGN
F$DCB.HEADER$
      3088**DCL      3088--REDEF
F$DCB.IXTNSIZE
      3086**DCL      3086--REDEF
F$DCB.LASTSTA$
      3076**DCL      3076--REDEF
F$DCB.LVL
      3101**DCL      3101--REDEF
F$DCB.NAME.C
      3076**DCL      3076--REDEF
F$DCB.NOEOF
      3097**DCL      3097--REDEF
F$DCB.NRECS
      3087**DCL      3087--REDEF    3574<<ASSIGN   3653<<ASSIGN   3735<<ASSIGN   4056<<ASSIGN   4460<<ASSIGN
F$DCB.NRECX
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:206  
      3106**DCL      3106--REDEF
F$DCB.OHDR
      3098**DCL      3098--REDEF
F$DCB.ORG
      3081**DCL      3081--REDEF    3346>>IF       3459>>IF       3628>>ASSIGN   3995>>ASSIGN   4429>>ASSIGN
F$DCB.PGINGRAN
      3107**DCL      3981>>ASSIGN   3982<<ASSIGN   4092>>ASSIGN   4093<<ASSIGN
F$DCB.PRECNO
      3104**DCL      3104--REDEF
F$DCB.RCSZ
      3109**DCL      3109--REDEF    4442<<ASSIGN   4447<<ASSIGN   4447>>ASSIGN   4448>>IF       4449>>ASSIGN
F$DCB.RES
      3077**DCL      3077--REDEF
F$DCB.RPOS
      3098**DCL      3348>>IF       3400<<ASSIGN   3421<<ASSIGN   3438>>IF       3439<<ASSIGN   3448<<ASSIGN
      3454>>IF       3455<<ASSIGN   3660<<ASSIGN   3694<<ASSIGN   3705<<ASSIGN   3713<<ASSIGN   3773<<ASSIGN
      3781<<ASSIGN   3859<<ASSIGN   3877<<ASSIGN   3900<<ASSIGN   3969<<ASSIGN   4085<<ASSIGN   4249<<ASSIGN
      4273>>IF       4282<<ASSIGN   4318>>IF       4336>>IF       4341<<ASSIGN
F$DCB.SEED
      3095**DCL      3346>>IF       3459>>IF
F$DCB.SETX
      3089**DCL      3089--REDEF
F$DCB.SPAN
      3098**DCL      4419>>IF       4422<<ASSIGN   4479>>IF
F$DCB.STARF
      3096**DCL      3552>>IF
F$DCB.TAB$
      3088**DCL      3089--REDEF
F$DCB.TDA
      3103**DCL      3103--REDEF
F$DCB.UB$
      3105**DCL      3361>>ASSIGN   3365<<ASSIGN   3365>>ASSIGN   3478>>CALLBLT  3482<<ASSIGN   3482>>ASSIGN
      4020>>CALLBLT  4023>>CALLBLT  4026>>CALLBLT  4029>>CALLBLT  4032>>CALLBLT  4035>>CALLBLT  4040>>ASSIGN
      4044>>ASSIGN   4417>>ASSIGN   4423<<ASSIGN   4423>>ASSIGN
F$DCB.UBYTES
      3105**DCL      3359>>IF       3360>>ASSIGN   3364<<ASSIGN   3364>>ASSIGN   3408>>IF       3428>>IF
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:207  
      3463>>IF       3475>>ASSIGN   3481<<ASSIGN   3481>>ASSIGN   3490>>IF       3491>>IF       3492>>ASSIGN
      3636>>IF       3662>>IF       3979>>IF       4010>>IF       4011>>ASSIGN   4119>>ASSIGN   4399>>IF
      4399>>IF       4415>>DOWHILE  4424<<ASSIGN   4424>>ASSIGN
F$DCB.WIDTH
      3074**DCL      4012>>IF       4014>>IF       4015>>ASSIGN
F$DCB.WSN
      3078**DCL      3078--REDEF
FAF$GETGRAN
      3253**DCL-ENT  3606--CALL     4456--CALL
FAK
        83**DCL      3337<<ASSIGN   3381>>IF       3384<>CALL     3385<<ASSIGN   3462<<ASSIGN   3513<>CALL
      3515>>IF       3516<<ASSIGN   3643<>CALL     3648>>IF       3649<<ASSIGN
FAK IN PROCEDURE NXTSEG
      4188**DCL      4229<<ASSIGN   4232<<ASSIGN   4238>>IF
FITERR
      3579**LABEL    3559--CALLALT
FITERR1
      3581**LABEL    3556--CALLALT
FLINK
      4141**PROC     4207--CALL
FM$BUF$
       218**DCL      4372>>ASSIGN
FM$CFU.ACCTX
      3118**DCL      3118--REDEF
FM$CFU.FITSDA
      3118**DCL      3603>>ASSIGN
FM$CFU.FMOD
      3117**DCL      3442<<ASSIGN   3457<<ASSIGN   3731<<ASSIGN   4057<<ASSIGN   4096<<ASSIGN   4464<<ASSIGN
FM$CFU.LDA
      3120**DCL      3464>>IF       3541>>ASSIGN   3549<<ASSIGN   3560>>ASSIGN   3612<<ASSIGN   3873>>ASSIGN
      3999<<ASSIGN   4148>>IF       4461>>IF       4462<<ASSIGN   4484>>ASSIGN
FM$CFU.NGAVAL
      3120**DCL      3551<<ASSIGN   3551>>ASSIGN
FM$CFU.NRECS
      3118**DCL      3573<<ASSIGN   3574>>ASSIGN   3652<<ASSIGN   3653>>ASSIGN   3734<<ASSIGN   3734>>ASSIGN
      3735>>ASSIGN   3876>>ASSIGN   4003>>ASSIGN   4055<<ASSIGN   4056>>ASSIGN   4214>>ASSIGN   4458<<ASSIGN
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:208  
      4458>>ASSIGN   4459<<ASSIGN   4459>>ASSIGN   4460>>ASSIGN
FM$CFU.RCSZ
      3119**DCL      3491>>IF       3492<<ASSIGN   4448>>IF       4449<<ASSIGN
FM$CFU.UGRANS
      3119**DCL      3550<<ASSIGN   3550>>ASSIGN   4412>>IF       4412>>IF       4420>>IF       4455>>IF
      4482>>IF
FM$CFUJ.PAGE#
      3124**DCL      3620<<ASSIGN
FM$CON
      3128**DCL      3645<<ASSIGN   4050<<ASSIGN
FM$CON.C
      3128**DCL      3350>>IF       3392>>IF       3664<<ASSIGN
FM$CON.CTL
      3128**DCL      3382>>ASSIGN   3517<<ASSIGN   3651<<ASSIGN   3901>>ASSIGN   4054<<ASSIGN
FM$CON.FAK
      3128**DCL      3397>>IF       3650<<ASSIGN   3732<<ASSIGN   4053<<ASSIGN   4203>>IF       4232>>ASSIGN
      4277>>IF       4333>>IF       4358>>IF       4440>>IF
FM$CON.GACTB
      3128**DCL      3350>>IF       3353>>ASSIGN   3356>>IF       3377>>ASSIGN   3405>>IF       3480<<ASSIGN
      3508>>ASSIGN   3647<<ASSIGN   4052<<ASSIGN   4446>>ASSIGN   4447>>ASSIGN
FM$CON.GX
      3128**DCL      3354>>ASSIGN   3378>>ASSIGN   3468>>ASSIGN   3473>>ASSIGN   3510>>ASSIGN   3537>>ASSIGN
      3646<<ASSIGN   3656>>ASSIGN   4051<<ASSIGN   4444>>IF
FM$GRAN
      3132**DCL      3558--ASSIGN   3623<<ASSIGN   3989<<ASSIGN
FM$GRAN.AVAIL
      3133**DCL      3468>>ASSIGN   3538<<ASSIGN   3598>>DOCASE   3627<<ASSIGN   3640>>ASSIGN   3655<<ASSIGN
      3655>>ASSIGN   3659<<ASSIGN   3659>>ASSIGN   3875>>ASSIGN   3921>>ASSIGN   3922<<ASSIGN   3978>>ASSIGN
      3993<<ASSIGN   3994>>ASSIGN   4061<<ASSIGN   4061>>ASSIGN   4167>>ASSIGN   4373>>ASSIGN   4431>>IF
      4433>>IF       4439>>DOWHILE  4453>>IF
FM$GRAN.KEYCNT
      3133**DCL      3981<<ASSIGN   4092<<ASSIGN
FM$GRAN.LVL
      3132**DCL      4430<<ASSIGN
FM$GRAN.NAVX
      3132**DCL      3356>>IF       3380>>IF       3468>>ASSIGN   3512>>IF       3537<<ASSIGN   3538>>ASSIGN
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:209  
      3626<<ASSIGN   3627>>ASSIGN   3641>>ASSIGN   3656>>ASSIGN   3658<<ASSIGN   3658>>ASSIGN   3875>>ASSIGN
      3921<<ASSIGN   3921>>ASSIGN   3992<<ASSIGN   3993>>ASSIGN   4004>>ASSIGN   4062<<ASSIGN   4062>>ASSIGN
      4167>>ASSIGN   4373>>ASSIGN   4431>>IF       4431>>IF       4439>>DOWHILE
FM$GRAN.NOTLDA
      3133**DCL      3607>>IF       3608<<ASSIGN   3983>>IF       3984<<ASSIGN   4094<<ASSIGN   4422>>ASSIGN
      4486<<ASSIGN
FM$GRAN.ORG
      3132**DCL      3628<<ASSIGN   3995<<ASSIGN   4429<<ASSIGN
FM$GRAN.STAMP.GMOD
      3132**DCL      3625<<ASSIGN   3991<<ASSIGN   4428<<ASSIGN
FM$GRAN.STAMP.HASH
      3132**DCL      3611>>ASSIGN   3624<<ASSIGN   3990<<ASSIGN   4427<<ASSIGN
FMB$IOSPIN
      3261**DCL-ENT  3554--CALL
FMB$LOGERR
      3258**DCL-ENT  3579--CALL     3800--CALL
FMB$QUEUE
      3262**DCL-ENT  3545--CALL
FMC$CLR1
      3255**DCL-ENT  3546--CALL     3604--CALL
FMD$FLSHBUF
      3250**DCL-ENT  3618--CALL     4097--CALL
FMD$FLSHBUFNR
      3251**DCL-ENT  3614--CALL     3987--CALL
FMD$GETBUF
      3246**DCL-ENT  3615--CALL     3988--CALL     4416--CALL
FMD$RECTRAN
      3252**DCL-ENT  3384--CALL     3513--CALL     3643--CALL
FMD$REDBUF
      3245**DCL-ENT  3857--CALL     3874--CALL     4166--CALL     4369--CALL     4485--CALL
FMD$RELBUF
      3247**DCL-ENT  4400--CALL     4469--CALL
FMD$WRTBUF
      3248**DCL-ENT  3566--CALL     4465--CALL     4487--CALL
FMD$WRTSV
      3249**DCL-ENT  3563--CALL     3564--CALL     3568--CALL
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:210  
FMH$MAPJRNL
      3256**DCL-ENT  3621--CALL     4366--CALL
FMI$RAN
      3257**DCL-ENT  4393--CALL
FMN$GETFIT
      3259**DCL-ENT  3556--CALL
FMO$LOCCODP
      3260**DCL-ENT  3559--CALL
FM_EOP
      1309**DCL      3768>>ASSIGN   3784>>ASSIGN
FM_FRZERO
      1308**DCL      3600>>IF       3857<>CALL     4160>>IF       4425>>ASSIGN
FPT$
        90**DCL      3042--IMP-PTR  3049--IMP-PTR  3052--IMP-PTR  3057--IMP-PTR  3063--IMP-PTR  3329<<ASSIGN
      3345>>IF       3346>>IF       3374>>IF       3384>>CALL     3459>>IF       3493>>IF       3513>>CALL
      3517>>ASSIGN   3571>>IF       3643>>CALL     3651>>ASSIGN   3673>>IF       3675>>IF       3678>>ASSIGN
      3685>>IF       3697>>IF       3706>>IF       3716>>IF       3723>>IF       3752>>IF       3770>>ASSIGN
      3776>>IF       3778>>IF       3945<<ASSIGN   3964>>IF       4012>>IF       4054>>ASSIGN   4116<<ASSIGN
      4388<<ASSIGN
FPT$DELREC_V.DELALL
      3063**DCL      3571>>IF       3723>>IF
FPT$PFIL_V.BOF
      3049**DCL      3752>>IF
FPT$PRECORD_V.BOF
      3052**DCL      3673>>IF
FPT$PRECORD_V.BRK
      3052**DCL      3685>>IF       3697>>IF
FPT$PRECORD_V.EOF
      3052**DCL      3675>>IF
FPT$PRECORD_V.KEYR
      3052**DCL      3706>>IF       3716>>IF       3776>>IF       3778>>IF
FPT$PRECORD_V.N
      3053**DCL      3678>>ASSIGN
FPT$READ_V.DVBYTE.CONT
      3045**DCL      3345>>IF
FPT$READ_V.DVBYTE.REREAD
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:211  
      3044**DCL      3045--REDEF
FPT$READ_V.INDX
      3044**DCL      3044--REDEF
FPT$READ_V.KEYR
      3042**DCL      3374>>IF
FPT$READ_V.SEED
      3044**DCL      3384<>CALL
FPT$WRITE_V.DVBYTE
      3058**DCL      3517>>ASSIGN   3651>>ASSIGN   4054>>ASSIGN
FPT$WRITE_V.DVBYTE.CONT
      3059**DCL      3770>>ASSIGN
FPT$WRITE_V.DVBYTE.TRANS
      3059**DCL      4012>>IF
FPT$WRITE_V.DVBYTE.VFC
      3059**DCL      3059--REDEF
FPT$WRITE_V.REWRITE
      3058**DCL      3493>>IF       3964>>IF
FPT$WRITE_V.SEED
      3058**DCL      3346>>IF       3459>>IF       3513<>CALL     3643<>CALL
FPTCODE
        69**DCL        67--PROC     3339>>DOCASE   3412>>IF       3428>>IF       3513<>CALL     3571>>IF
      3571>>IF       3643<>CALL     3768>>ASSIGN   3769>>IF       3784>>ASSIGN   3785>>IF       3943--ENTRY
      3946>>DOCASE   4018>>DOCASE   4079--ENTRY    4112--ENTRY    4386--ENTRY    4391>>DOCASE   4393<>CALL
FSE$GETGRAN
      3263**DCL-ENT  3980--CALL
G$
        82**DCL      3355<<ASSIGN   3361>>ASSIGN   3379<<ASSIGN   3384<>CALL     3474<<ASSIGN   3478>>CALLBLT
      3511<<ASSIGN   3513<>CALL     3556<>CALL     3558<<ASSIGN   3558>>ASSIGN   3559<>CALL     3560>>ASSIGN
      3561>>ASSIGN   3642<<ASSIGN   3643<>CALL     4005<<ASSIGN   4007>>ASSIGN   4008<<ASSIGN   4008>>ASSIGN
      4020>>CALLBLT  4023>>CALLBLT  4026>>CALLBLT  4029>>CALLBLT  4032>>CALLBLT  4035>>CALLBLT  4040>>ASSIGN
      4044>>ASSIGN
GBYTES
        80**DCL      3353<<ASSIGN   3358>>ASSIGN   3366>>IF       3377<<ASSIGN   3380>>IF       3384<>CALL
      3386>>IF       3468<<ASSIGN   3470>>IF       3472<<ASSIGN   3472>>ASSIGN   3476>>IF       3477>>ASSIGN
      3508<<ASSIGN   3509>>ASSIGN   3512>>IF       3513<>CALL     3519>>IF       3640<<ASSIGN   3643<>CALL
      3647>>ASSIGN
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:212  
GOTIT IN PROCEDURE BEGREC
      4333**LABEL    4316--GOTO
GX
        81**DCL      3354<<ASSIGN   3355>>ASSIGN   3356>>IF       3378<<ASSIGN   3379>>ASSIGN   3380>>IF
      3473<<ASSIGN   3474>>ASSIGN   3510<<ASSIGN   3511>>ASSIGN   3512>>IF       3641<<ASSIGN   3642>>ASSIGN
      3646>>ASSIGN   4004<<ASSIGN   4005>>ASSIGN   4051>>ASSIGN   4437<<ASSIGN   4444>>IF       4446<<ASSIGN
      4446>>ASSIGN   4453>>IF
HFF$NILERASE
      3265**DCL-ENT  4408--CALL
I
        87**DCL      3544<<DOINDEX  3975<<ASSIGN   3977<<ASSIGN   3978>>ASSIGN   3994>>ASSIGN   4006>>IF
      4052>>ASSIGN   4060>>ASSIGN
JDCB$
        73**DCL      3067--IMP-PTR  3331<<ASSIGN   3332>>ASSIGN   3333>>ASSIGN   3334>>ASSIGN   3335>>ASSIGN
      3336>>ASSIGN   3346>>IF       3346>>IF       3346>>IF       3348>>IF       3350>>IF       3353>>ASSIGN
      3359>>IF       3360>>ASSIGN   3361>>ASSIGN   3361>>ASSIGN   3362>>ASSIGN   3362>>ASSIGN   3363>>ASSIGN
      3363>>ASSIGN   3364>>ASSIGN   3364>>ASSIGN   3365>>ASSIGN   3365>>ASSIGN   3372>>ASSIGN   3375>>ASSIGN
      3382>>ASSIGN   3395>>ASSIGN   3400>>ASSIGN   3408>>IF       3421>>ASSIGN   3428>>IF       3438>>IF
      3438>>IF       3439>>ASSIGN   3448>>ASSIGN   3454>>IF       3454>>IF       3455>>ASSIGN   3459>>IF
      3459>>IF       3459>>IF       3459>>IF       3463>>IF       3464>>IF       3470>>IF       3472>>ASSIGN
      3475>>ASSIGN   3478>>CALLBLT  3478>>CALLBLT  3479>>ASSIGN   3479>>ASSIGN   3480>>ASSIGN   3481>>ASSIGN
      3481>>ASSIGN   3482>>ASSIGN   3482>>ASSIGN   3489>>ASSIGN   3490>>IF       3491>>IF       3492>>ASSIGN
      3493>>IF       3494>>IF       3500>>IF       3529>>IF       3539>>ASSIGN   3540>>ASSIGN   3541>>ASSIGN
      3543>>ASSIGN   3549>>ASSIGN   3552>>IF       3552>>IF       3557>>ASSIGN   3561>>ASSIGN   3573>>ASSIGN
      3574>>ASSIGN   3581>>ASSIGN   3591>>IF       3600>>IF       3600>>IF       3609>>ASSIGN   3611>>ASSIGN
      3613>>IF       3624>>ASSIGN   3628>>ASSIGN   3629>>ASSIGN   3630>>ASSIGN   3631>>ASSIGN   3633>>ASSIGN
      3636>>IF       3652>>ASSIGN   3653>>ASSIGN   3656>>ASSIGN   3660>>ASSIGN   3661>>ASSIGN   3662>>IF
      3665>>ASSIGN   3671>>ASSIGN   3682>>ASSIGN   3682>>ASSIGN   3694>>ASSIGN   3695>>ASSIGN   3695>>ASSIGN
      3705>>ASSIGN   3707>>ASSIGN   3713>>ASSIGN   3717>>ASSIGN   3733>>ASSIGN   3735>>ASSIGN   3736>>ASSIGN
      3741>>ASSIGN   3768>>ASSIGN   3770>>ASSIGN   3773>>ASSIGN   3777>>ASSIGN   3781>>ASSIGN   3784>>ASSIGN
      3798>>ASSIGN   3799>>ASSIGN   3858>>ASSIGN   3859>>ASSIGN   3860>>ASSIGN   3875>>ASSIGN   3876>>ASSIGN
      3877>>ASSIGN   3895<<ASSIGN   3896>>ASSIGN   3900>>ASSIGN   3901>>ASSIGN   3918<<ASSIGN   3919>>ASSIGN
      3923>>ASSIGN   3961<<ASSIGN   3962>>ASSIGN   3969>>ASSIGN   3979>>IF       3981>>ASSIGN   3982>>ASSIGN
      3985>>ASSIGN   3990>>ASSIGN   3995>>ASSIGN   3996>>ASSIGN   3997>>ASSIGN   3998>>ASSIGN   4000>>ASSIGN
      4003>>ASSIGN   4010>>IF       4011>>ASSIGN   4012>>IF       4014>>IF       4015>>ASSIGN   4020>>CALLBLT
      4023>>CALLBLT  4026>>CALLBLT  4029>>CALLBLT  4032>>CALLBLT  4035>>CALLBLT  4040>>ASSIGN   4044>>ASSIGN
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:213  
      4055>>ASSIGN   4056>>ASSIGN   4058>>ASSIGN   4059>>ASSIGN   4059>>ASSIGN   4081<<ASSIGN   4082>>ASSIGN
      4085>>ASSIGN   4092>>ASSIGN   4093>>ASSIGN   4095>>ASSIGN   4114<<ASSIGN   4115>>ASSIGN   4117>>ASSIGN
      4119>>ASSIGN   4147>>ASSIGN   4159>>ASSIGN   4200>>ASSIGN   4204>>ASSIGN   4204>>ASSIGN   4212>>ASSIGN
      4214>>ASSIGN   4235>>ASSIGN   4239>>ASSIGN   4239>>ASSIGN   4246>>ASSIGN   4248>>ASSIGN   4249>>ASSIGN
      4273>>IF       4282>>ASSIGN   4318>>IF       4336>>IF       4341>>ASSIGN   4351>>ASSIGN   4365>>IF
      4367>>IF       4368>>ASSIGN   4372>>ASSIGN   4374>>IF       4375>>ASSIGN   4376>>ASSIGN   4389<<ASSIGN
      4390>>ASSIGN   4399>>IF       4399>>IF       4409>>ASSIGN   4412>>IF       4412>>IF       4415>>DOWHILE
      4417>>ASSIGN   4419>>IF       4420>>IF       4422>>ASSIGN   4423>>ASSIGN   4423>>ASSIGN   4424>>ASSIGN
      4424>>ASSIGN   4425>>ASSIGN   4426>>ASSIGN   4427>>ASSIGN   4429>>ASSIGN   4442>>ASSIGN   4447>>ASSIGN
      4447>>ASSIGN   4448>>IF       4449>>ASSIGN   4455>>IF       4458>>ASSIGN   4460>>ASSIGN   4463>>ASSIGN
      4466>>ASSIGN   4466>>ASSIGN   4478<<ASSIGN   4479>>IF       4481>>ASSIGN
LOSTDATA
      3784**LABEL    3367--GOTO     3386--GOTO     3410--GOTO     3433--GOTO     3520--GOTO
LSTSEG
        77**DCL      3348>>IF       3464>>IF       4167<<ASSIGN   4202>>IF       4211>>ASSIGN   4227>>IF
      4228>>ASSIGN   4243>>ASSIGN   4314>>IF       4373<<ASSIGN   4375>>ASSIGN
MMJ$GIOP
      3266**DCL-ENT  3619--CALL
N
        86**DCL      3242--IMP-SIZ  3358<<ASSIGN   3359>>IF       3360<<ASSIGN   3361>>ASSIGN   3361>>ASSIGN
      3362>>ASSIGN   3363>>ASSIGN   3364>>ASSIGN   3365>>ASSIGN   3366>>IF       3475<<ASSIGN   3476>>IF
      3477<<ASSIGN   3478>>CALLBLT  3478>>CALLBLT  3479>>ASSIGN   3481>>ASSIGN   3482>>ASSIGN   3509<<ASSIGN
      3519>>IF       3541<<ASSIGN   3542>>IF       3544>>DOINDEX  3550>>ASSIGN   3551>>ASSIGN   3619<>CALL
      3620>>ASSIGN   3678<<ASSIGN   3679>>IF       3681>>DOWHILE  3683<<ASSIGN   3683>>ASSIGN   3692>>DOWHILE
      3696<<ASSIGN   3696>>ASSIGN   3714>>IF       3799<<ASSIGN   3800<>CALL     3978<<ASSIGN   3979>>IF
      3994<<ASSIGN   4010>>IF       4011<<ASSIGN   4014>>IF       4015<<ASSIGN   4020>>CALLBLT  4020>>CALLBLT
      4023>>CALLBLT  4023>>CALLBLT  4026>>CALLBLT  4026>>CALLBLT  4029>>CALLBLT  4029>>CALLBLT  4032>>CALLBLT
      4032>>CALLBLT  4035>>CALLBLT  4035>>CALLBLT  4040>>ASSIGN   4040>>ASSIGN   4044>>ASSIGN   4044>>ASSIGN
      4052>>ASSIGN   4060>>ASSIGN   4119<<ASSIGN   4438<<ASSIGN   4441<<ASSIGN   4441>>ASSIGN   4459>>ASSIGN
      4463>>ASSIGN
NK_NATLTBL
       836**DCL      4029>>CALLBLT
NOCONT
      3806**LABEL    3347--GOTO     3461--GOTO
NOKEY
      4409**LABEL    4408--CALLALT
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:214  
NONXT
      3418**LABEL    3396--CALLALT
NOTC
      3428**LABEL    3401--GOTO     3407--GOTO     3422--GOTO
NXT IN PROCEDURE NXTREC
      4276**LABEL    4278--GOTO
NXT IN PROCEDURE NXTSEG
      4200**LABEL    4209--GOTO
NXTERR IN PROCEDURE BEGREC
      4317**LABEL    4315--CALLALT
NXTR IN PROCEDURE NXTSEG
      4235**LABEL    4244--GOTO
NXTREC
      4271**PROC     3373--CALL     3441--CALL     3524--CALL     3680--CALL     3684--CALL     3834--CALL
      3899--CALL     3968--CALL     4084--CALL
NXTSEG
      4187**PROC     3396--CALL     4276--CALL     4315--CALL
NXTSEGR IN PROCEDURE NXTSEG
      4225**ENTRY    4357--CALL
PAGE
      3243**DCL      4417<<ASSIGN   4417>>ASSIGN
PARMFPT
        70**DCL        67--PROC     3329--ASSIGN   3943--ENTRY    3945--ASSIGN   4079--ENTRY    4386--ENTRY
      4388--ASSIGN
PFILEOF
      3759**LABEL    3747--GOTO
PFIL_EOF
      3872**PROC     3676--CALL     3759--CALL
PREC
      3679**LABEL    4120--GOTO
PRECEOF
      3712**LABEL    3680--CALLALT  3684--CALLALT
READ IN PROCEDURE FLINK
      4166**LABEL    4154--GOTO
READEND
      3392**LABEL    3368--GOTO     3521--GOTO
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:215  
READLOOP
      3377**LABEL    3414--GOTO
REW
      3755**LABEL    3765--GOTO
REWIND
      3856**PROC     3674--CALL     3726--CALL     3755--CALL
REWRITELOOP
      3508**LABEL    3416--GOTO     3486--GOTO
RSTRPOS
      3773**LABEL    3693--CALLALT
S$CU$
      3236**DCL      3685>>IF       3697>>IF
SC_FMH99
      3264**DCL-ENT  4043--CALL
SEG$
        76**DCL      3128--IMP-PTR  3350>>IF       3350>>IF       3353>>ASSIGN   3354>>ASSIGN   3356>>IF
      3377>>ASSIGN   3378>>ASSIGN   3382>>ASSIGN   3392>>IF       3397>>IF       3405>>IF       3468>>ASSIGN
      3473>>ASSIGN   3480>>ASSIGN   3508>>ASSIGN   3510>>ASSIGN   3517>>ASSIGN   3537>>ASSIGN   3634<<ASSIGN
      3645>>ASSIGN   3646>>ASSIGN   3647>>ASSIGN   3650>>ASSIGN   3651>>ASSIGN   3656>>ASSIGN   3664>>ASSIGN
      3732>>ASSIGN   3901>>ASSIGN   4001<<ASSIGN   4050>>ASSIGN   4051>>ASSIGN   4052>>ASSIGN   4053>>ASSIGN
      4054>>ASSIGN   4201<<ASSIGN   4203>>IF       4213<<ASSIGN   4232>>ASSIGN   4236<<ASSIGN   4250<<ASSIGN
      4277>>IF       4327<<ASSIGN   4333>>IF       4352<<ASSIGN   4358>>IF       4377<<ASSIGN   4436<<ASSIGN
      4440>>IF       4444>>IF       4446>>ASSIGN   4447>>ASSIGN   4451<<ASSIGN
SEGERR
      3797**LABEL    3357--GOTO     3380--GOTO     3512--GOTO
SETEOP
      3768**LABEL    3349--GOTO     3352--GOTO     3431--GOTO     3449--GOTO     3463--GOTO     3575--GOTO
      3663--GOTO     3711--GOTO     3718--GOTO     4063--GOTO
SETRPOS
      3781**LABEL    3373--CALLALT  3899--CALLALT
SETUP
      4364**PROC     3344--CALL     3440--CALL     3456--CALL     3677--CALL     3729--CALL     3897--CALL
      3920--CALL     3963--CALL     4083--CALL     4118--CALL
SYMEOF
      3972**LABEL    3968--CALLALT
SYMEOF2
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:216  
      4086**LABEL    4084--CALLALT
UBIN36
      3240**DCL      3778>>IF       3779<<ASSIGN
UBLKERR
      4400**LABEL    4397--GOTO     4413--GOTO     4421--GOTO     4432--GOTO     4434--GOTO     4445--GOTO
      4454--GOTO
UERR
      4462**LABEL    4456--CALLALT
VFC
        71**DCL        67--PROC     3513<>CALL     3636--IF       3643<>CALL     3943--ENTRY    3974--IF
      4007>>ASSIGN   4079--ENTRY    4386--ENTRY
WEOF
      3438**LABEL    3727--GOTO
WEOF5
      3442**LABEL    3441--CALLALT
WRDS
        84**DCL        85--REDEF    3656<<ASSIGN   3658>>ASSIGN   3659>>ASSIGN   4060<<ASSIGN   4061>>ASSIGN
      4062>>ASSIGN
WRITELOOP
      3600**LABEL    3637--GOTO     3666--GOTO
WRSYMB
      3961**LABEL    3956--GOTO
WRTEND1
      3656**LABEL    3483--GOTO
WRTEND2
      3661**LABEL    3471--GOTO
WRTEOF
      3589**LABEL    3524--CALLALT
WRTEOF2
      3598**LABEL    3577--GOTO
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:217  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:218  
              MINI UREF LISTING

B$DOCONT    2741**DCL
B$PS0$     219**DCL
B$PS2$     221**DCL
B$PS3$     222**DCL
B$ROSEG$     223**DCL
B$USRT$    3237**DCL
B_POINTER     144**DCL-ENT
F$CFU$    1311**DCL
FAF$FRTOSR    3254**DCL-ENT
FM$SET$    1312**DCL
FMH$CPMME      67**PROC
FMH$LOOKAHD    3893**ENTRY
FMH$PREC    4112**ENTRY
FMH$SYMB    3943**ENTRY
FMH$SYMB_FINISH    4079**ENTRY
FMH$TRUNC    3916**ENTRY
FMH$UBLKCLS    4476**ENTRY
FMH$UBLOCK    4386**ENTRY
FM_CFUWAIT    1311**DCL
FM_CFUWGRB    1311**DCL
FM_FRMAX    1308**DCL
FM_GCT    1312**DCL
FM_GIP    1312**DCL
FM_GPSDA    1309**DCL
FM_HASH    1310**DCL
FM_MADSDA    1309**DCL
FM_PADSDA    1309**DCL
FM_SRMAX    1308**DCL
FM_SRZERO    1308**DCL
FM_SYSACCTX    1312**DCL
FM_SYSSETX    1312**DCL
FM_TRUNC    1310**DCL
PL6.E3A0      #001=FMH$CPMME File=FMH$CONSEC.:E05TSI                             TUE 07/29/97 16:47 Page:219  
FM_WSQ    1310**DCL
F_CWLK    1311**DCL
F_CWUSER    1311**DCL
F_DCBLOCK    1310**DCL
GRANS      91**DCL
HFF$DSIZ    3267**DCL-ENT
NK_BLNKSUPTBL     836**DCL

PL6.E3A0      #002=FMH$MAPJRNL File=FMH$CONSEC.:E05TSI                           TUE 07/29/97 16:49 Page:220  
     1347        1        /*T***********************************************************/
     1348        2        /*T*                                                         */
     1349        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1350        4        /*T*                                                         */
     1351        5        /*T***********************************************************/
     1352        6        /*F*    NAME:    FMH$MAPJRNL
     1353        7        *       PURPOSE:  Map the current journal buffer page into
     1354        8        *                 a pool buffer slot */
     1355        9        /**/
     1356       10        /**/
     1357       11        /**/
     1358       12        /*D*    NAME:    FMH$MAPJRNL
     1359       13        *       CALL:    CALL FMH$MAPJRNL(BUFNUM,BUF$);
     1360       14        *       INPUT:   BUFNUM - The buffer number to map into
     1361       15        *       OUTPUT:  BUF$ - Pointer to the buffer (optional)
     1362       16        *       DESCRIPTION:  If no buffer exists in the BUFNUM slot,
     1363       17        *                a buffer slot is obtained via MMJ$MAPIOP.
     1364       18        *                This CVM's onto the current buffer page.
     1365       19        *                If BUF$ was specified, it is set.
     1366       20        */
     1367       21        /**/
     1368       22        /**/
     1369       23        FMH$MAPJRNL: PROC(BUFNUM,BUF$);
     1370       24        /* PARAMETERS */
     1371       25    1   DCL BUFNUM UBIN;
     1372       26    1   DCL BUF$ PTR;
     1373       27        /* EXTERNAL ROUTINES */
     1374       28    1   DCL MMJ$UNMAPIOP ENTRY(1);
     1375       29    1   DCL MMJ$MAPIOP ENTRY(2);
     1376       30    1   DCL SC_FMH89 ENTRY CONV(2,0);
     1377       31        /* LOCAL AUTOMATIC STORAGE */
     1378       32    1   DCL JDCB$ PTR;
     1379       33    1   DCL CFU$ PTR;
     1380       34    1   DCL VPNO SBIN;
     1381       35    1   DCL PP SBIN;
     1382       36        /* INCLUDE FILES */
     1383       37        %INCLUDE F$JIT_C;
PL6.E3A0      #002=FMH$MAPJRNL File=FMH$CONSEC.:E05TSI                           TUE 07/29/97 16:49 Page:221  
     1384      467        %INCLUDE F_MACROS_C;
     1385      478        %INCLUDE M_INFO_C;
     1386      618        %INCLUDE B$MAP;
     1387      717        %MACRO F$DCBMAC(BASED=BASED);
     1388      718        %INCLUDE F$DCB;
     1389      767        %MEND;
     1390      768        %INCLUDE FM$CFU;
     1391      813        %INCLUDE HF_DATA_R;
     1392      856        /* EXTERNAL DATA */
     1393      857    1   DCL B$JIT$ PTR SYMREF READONLY;
     1394      858    1   DCL FM$BUF$(0:0) PTR SYMREF;
     1395      859    1   DCL B$UPT$ PTR SYMREF READONLY;
     1396      860    1   DCL B$IPHYMAP$ PTR SYMREF READONLY;
     1397      861        /* BASED STRUCTURES */
     1398      862        %F$DCBMAC (BASED="BASED(JDCB$)");
     1399      912        %FM$CFUJ (BASED="BASED(CFU$)");
     1400      917        %FM$CFU  (BASED="BASED(CFU$)");
     1401      923        /**/
     1402      924        /**/
     1403      925    1           JDCB$=B$JIT.DCB$;
     1404      926    1           CFU$=F$DCB.CFU$;
     1405      927    1           VPNO=F$DCB.BFR.BUFX(BUFNUM);
     1406      928    1           PP=FM$CFUJ.PAGE#;               /* CURRENT PAGE #                     */
     1407      929    2           IF VPNO ~= 0 THEN DO;
     1408      930    2              IF HW_WSQ0PT THEN
     1409      931    2                 IF B$IPHYMAP$->MM$IPHY_MAP(B$UPT$->B$MAP.RPN(VPNO+%FMSEGLO-1)) = PP
     1410      932    2                 THEN
     1411      933    2                    GOTO RETBUF;
     1412      934    2                 ELSE;
     1413      935    2              ELSE
     1414      936    2                 IF B$UPT$->B$MAP.RPN(VPNO+%FMSEGLO-1) = PP
     1415      937    2              THEN
     1416      938    2                 GOTO RETBUF;
     1417      939    2              CALL MMJ$UNMAPIOP (VPNO);
     1418      940    2              END;
     1419      941    1           IF PP=0 THEN GOTO CVMERR;       /* MUST HAVE PAGE                     */
     1420      942    1           CALL MMJ$MAPIOP (VPNO , PP);
PL6.E3A0      #002=FMH$MAPJRNL File=FMH$CONSEC.:E05TSI                           TUE 07/29/97 16:49 Page:222  
     1421      943    1   RETBUF: F$DCB.BFR.BUFX (BUFNUM) = VPNO;
     1422      944    1           F$DCB.BFR.CVM (BUFNUM) = '1'B;
     1423      945    1           F$DCB.BFR.DA(BUFNUM)=FM$CFU.LDA;
     1424      946    1           F$DCB.BFR.BUFUP(BUFNUM)=FM$CFUJ.UPD;
     1425      947    1           F$DCB.BFR1.SIZ(BUFNUM)=1;
     1426      948    1           IF ADDR(BUF$)~=ADDR(NIL) THEN
     1427      949    1              BUF$ = FM$BUF$ (VPNO);
     1428      950    1           RETURN;
     1429      951        /**/
     1430      952    1   CVMERR: CALL SC_FMH89;
     1431      953        /*S*    SCREECH_CODE:  FMH-S$FM89
     1432      954        *       TYPE:  SUA
     1433      955        *       MESSAGE:  Error trying to CVM onto JRNL file page
     1434      956        */
     1435      957    1   END FMH$MAPJRNL;
     1436      958        %EOD;

PL6.E3A0      #002=FMH$MAPJRNL File=FMH$CONSEC.:E05TSI                           TUE 07/29/97 16:49 Page:223  
--  Include file information  --

   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FM$CFU.:E05TOU  is referenced.
   F$DCB.:E05TOU  is referenced.
   B$MAP.:E05TOU  cannot be made into a system file and is referenced.
   M_INFO_C.:E05TOU  is referenced.
   F_MACROS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   F$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMH$MAPJRNL.

   Procedure FMH$MAPJRNL requires 96 words for executable code.
   Procedure FMH$MAPJRNL requires 12 words of local(AUTO) storage.

PL6.E3A0      #002=FMH$MAPJRNL File=FMH$CONSEC.:E05TSI                           TUE 07/29/97 16:49 Page:224  

 Object Unit name= FMH$MAPJRNL                                File name= FMH$CONSEC.:E05TOU
 UTS= JUL 29 '97 16:49:00.92 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    96    140  FMH$MAPJRNL
    1  RoData even  none     1      1  FMH$MAPJRNL

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        2  FMH$MAPJRNL

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 MMJ$UNMAPIOP
         yes           Std       2 MMJ$MAPIOP
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SC_FMH89                              HW_WSQ0PT                        r    B$JIT$
     FM$BUF$                          r    B$UPT$                           r    B$IPHYMAP$
     B_VECTNIL
PL6.E3A0      #002=FMH$MAPJRNL File=FMH$CONSEC.:E05TSI                           TUE 07/29/97 16:49 Page:225  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ASLENTSID
PL6.E3A0      #002=FMH$MAPJRNL File=FMH$CONSEC.:E05TSI                           TUE 07/29/97 16:49 Page:226  


     1347        1        /*T***********************************************************/
     1348        2        /*T*                                                         */
     1349        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1350        4        /*T*                                                         */
     1351        5        /*T***********************************************************/
     1352        6        /*F*    NAME:    FMH$MAPJRNL
     1353        7        *       PURPOSE:  Map the current journal buffer page into
     1354        8        *                 a pool buffer slot */
     1355        9        /**/
     1356       10        /**/
     1357       11        /**/
     1358       12        /*D*    NAME:    FMH$MAPJRNL
     1359       13        *       CALL:    CALL FMH$MAPJRNL(BUFNUM,BUF$);
     1360       14        *       INPUT:   BUFNUM - The buffer number to map into
     1361       15        *       OUTPUT:  BUF$ - Pointer to the buffer (optional)
     1362       16        *       DESCRIPTION:  If no buffer exists in the BUFNUM slot,
     1363       17        *                a buffer slot is obtained via MMJ$MAPIOP.
     1364       18        *                This CVM's onto the current buffer page.
     1365       19        *                If BUF$ was specified, it is set.
     1366       20        */
     1367       21        /**/
     1368       22        /**/
     1369       23        FMH$MAPJRNL: PROC(BUFNUM,BUF$);

     23  0 000000   000000 700200 xent  FMH$MAPJRNL  TSX0  ! X66_AUTO_2
         0 000001   000014 000002                    ZERO    12,2

     1370       24        /* PARAMETERS */
     1371       25    1   DCL BUFNUM UBIN;
     1372       26    1   DCL BUF$ PTR;
     1373       27        /* EXTERNAL ROUTINES */
     1374       28    1   DCL MMJ$UNMAPIOP ENTRY(1);
     1375       29    1   DCL MMJ$MAPIOP ENTRY(2);
     1376       30    1   DCL SC_FMH89 ENTRY CONV(2,0);
     1377       31        /* LOCAL AUTOMATIC STORAGE */
     1378       32    1   DCL JDCB$ PTR;
PL6.E3A0      #002=FMH$MAPJRNL File=FMH$CONSEC.:E05TSI                           TUE 07/29/97 16:49 Page:227  
     1379       33    1   DCL CFU$ PTR;
     1380       34    1   DCL VPNO SBIN;
     1381       35    1   DCL PP SBIN;
     1382       36        /* INCLUDE FILES */
     1383       37        %INCLUDE F$JIT_C;
     1384      467        %INCLUDE F_MACROS_C;
     1385      478        %INCLUDE M_INFO_C;
     1386      618        %INCLUDE B$MAP;
     1387      717        %MACRO F$DCBMAC(BASED=BASED);
     1388      718        %INCLUDE F$DCB;
     1389      767        %MEND;
     1390      768        %INCLUDE FM$CFU;
     1391      813        %INCLUDE HF_DATA_R;
     1392      856        /* EXTERNAL DATA */
     1393      857    1   DCL B$JIT$ PTR SYMREF READONLY;
     1394      858    1   DCL FM$BUF$(0:0) PTR SYMREF;
     1395      859    1   DCL B$UPT$ PTR SYMREF READONLY;
     1396      860    1   DCL B$IPHYMAP$ PTR SYMREF READONLY;
     1397      861        /* BASED STRUCTURES */
     1398      862        %F$DCBMAC (BASED="BASED(JDCB$)");
     1399      912        %FM$CFUJ (BASED="BASED(CFU$)");
     1400      917        %FM$CFU  (BASED="BASED(CFU$)");
     1401      923        /**/
     1402      924        /**/
     1403      925    1           JDCB$=B$JIT.DCB$;

    925  0 000002   000000 470400 xsym               LDP0    B$JIT$
         0 000003   000232 236100                    LDQ     154,,PR0
         0 000004   200005 756100                    STQ     JDCB$,,AUTO

     1404      926    1           CFU$=F$DCB.CFU$;

    926  0 000005   200005 471500                    LDP1    JDCB$,,AUTO
         0 000006   100066 236100                    LDQ     54,,PR1
         0 000007   200006 756100                    STQ     CFU$,,AUTO

     1405      927    1           VPNO=F$DCB.BFR.BUFX(BUFNUM);
PL6.E3A0      #002=FMH$MAPJRNL File=FMH$CONSEC.:E05TSI                           TUE 07/29/97 16:49 Page:228  

    927  0 000010   200003 473500                    LDP3    @BUFNUM,,AUTO
         0 000011   300000 720100                    LXL0    0,,PR3
         0 000012   100115 236110                    LDQ     77,X0,PR1
         0 000013   000033 772000                    QRL     27
         0 000014   000037 376007                    ANQ     31,DL
         0 000015   200007 756100                    STQ     VPNO,,AUTO

     1406      928    1           PP=FM$CFUJ.PAGE#;               /* CURRENT PAGE #                     */

    928  0 000016   200006 474500                    LDP4    CFU$,,AUTO
         0 000017   400005 236100                    LDQ     5,,PR4
         0 000020   777777 376007                    ANQ     -1,DL
         0 000021   200010 756100                    STQ     PP,,AUTO

     1407      929    2           IF VPNO ~= 0 THEN DO;

    929  0 000022   200007 235100                    LDA     VPNO,,AUTO
         0 000023   000055 600000 0                  TZE     s:941

     1408      930    2              IF HW_WSQ0PT THEN

    930  0 000024   000000 234000 xsym               SZN     HW_WSQ0PT
         0 000025   000042 605000 0                  TPL     s:936

     1409      931    2                 IF B$IPHYMAP$->MM$IPHY_MAP(B$UPT$->B$MAP.RPN(VPNO+%FMSEGLO-1)) = PP

    931  0 000026   000000 475400 xsym               LDP5    B$UPT$
         0 000027   500017 236105                    LDQ     15,AL,PR5
         0 000030   000022 772000                    QRL     18
         0 000031   000001 736000                    QLS     1
         0 000032   000000 476400 xsym               LDP6    B$IPHYMAP$
         0 000033   000100 101506                    MRL     fill='000'O
         0 000034   600000 000002                    ADSC9   0,Q,PR6                  cn=0,n=2
         0 000035   200012 000004                    ADSC9   PP+2,,AUTO               cn=0,n=4
         0 000036   200012 236100                    LDQ     PP+2,,AUTO
         0 000037   200010 116100                    CMPQ    PP,,AUTO
PL6.E3A0      #002=FMH$MAPJRNL File=FMH$CONSEC.:E05TSI                           TUE 07/29/97 16:49 Page:229  
         0 000040   000067 600000 0                  TZE     RETBUF
         0 000041   000047 710000 0                  TRA     s:939

     1410      932    2                 THEN
     1411      933    2                    GOTO RETBUF;
     1412      934    2                 ELSE;
     1413      935    2              ELSE
     1414      936    2                 IF B$UPT$->B$MAP.RPN(VPNO+%FMSEGLO-1) = PP

    936  0 000042   000000 475400 xsym               LDP5    B$UPT$
         0 000043   500017 236105                    LDQ     15,AL,PR5
         0 000044   000022 772000                    QRL     18
         0 000045   200010 116100                    CMPQ    PP,,AUTO
         0 000046   000067 600000 0                  TZE     RETBUF

     1415      937    2              THEN
     1416      938    2                 GOTO RETBUF;
     1417      939    2              CALL MMJ$UNMAPIOP (VPNO);

    939  0 000047   200007 636500                    EPPR6   VPNO,,AUTO
         0 000050   200012 456500                    STP6    PP+2,,AUTO
         0 000051   200012 630500                    EPPR0   PP+2,,AUTO
         0 000052   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000053   000000 701000 xent               TSX1    MMJ$UNMAPIOP
         0 000054   000000 011000                    NOP     0

     1418      940    2              END;

     1419      941    1           IF PP=0 THEN GOTO CVMERR;       /* MUST HAVE PAGE                     */

    941  0 000055   200010 235100                    LDA     PP,,AUTO
         0 000056   000135 600000 0                  TZE     CVMERR

     1420      942    1           CALL MMJ$MAPIOP (VPNO , PP);

    942  0 000057   200010 630500                    EPPR0   PP,,AUTO
         0 000060   200013 450500                    STP0    PP+3,,AUTO
PL6.E3A0      #002=FMH$MAPJRNL File=FMH$CONSEC.:E05TSI                           TUE 07/29/97 16:49 Page:230  
         0 000061   200007 631500                    EPPR1   VPNO,,AUTO
         0 000062   200012 451500                    STP1    PP+2,,AUTO
         0 000063   200012 630500                    EPPR0   PP+2,,AUTO
         0 000064   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000065   000000 701000 xent               TSX1    MMJ$MAPIOP
         0 000066   000000 011000                    NOP     0

     1421      943    1   RETBUF: F$DCB.BFR.BUFX (BUFNUM) = VPNO;

    943  0 000067   200003 470500       RETBUF       LDP0    @BUFNUM,,AUTO
         0 000070   000000 720100                    LXL0    0,,PR0
         0 000071   200005 471500                    LDP1    JDCB$,,AUTO
         0 000072   200007 236100                    LDQ     VPNO,,AUTO
         0 000073   000033 736000                    QLS     27
         0 000074   100115 676110                    ERQ     77,X0,PR1
         0 000075   037000 376003                    ANQ     15872,DU
         0 000076   100115 656110                    ERSQ    77,X0,PR1

     1422      944    1           F$DCB.BFR.CVM (BUFNUM) = '1'B;

    944  0 000077   000000 720100                    LXL0    0,,PR0
         0 000100   040000 236003                    LDQ     16384,DU
         0 000101   100115 256110                    ORSQ    77,X0,PR1

     1423      945    1           F$DCB.BFR.DA(BUFNUM)=FM$CFU.LDA;

    945  0 000102   000000 720100                    LXL0    0,,PR0
         0 000103   200006 473500                    LDP3    CFU$,,AUTO
         0 000104   300006 235100                    LDA     6,,PR3
         0 000105   300007 236100                    LDQ     7,,PR3
         0 000106   000033 773000                    LRL     27
         0 000107   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000110   100115 676110                    ERQ     77,X0,PR1
         0 000111   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000112   100115 656110                    ERSQ    77,X0,PR1

     1424      946    1           F$DCB.BFR.BUFUP(BUFNUM)=FM$CFUJ.UPD;
PL6.E3A0      #002=FMH$MAPJRNL File=FMH$CONSEC.:E05TSI                           TUE 07/29/97 16:49 Page:231  

    946  0 000113   000000 720100                    LXL0    0,,PR0
         0 000114   300005 236100                    LDQ     5,,PR3
         0 000115   100115 676110                    ERQ     77,X0,PR1
         0 000116   400000 376003                    ANQ     -131072,DU
         0 000117   100115 656110                    ERSQ    77,X0,PR1

     1425      947    1           F$DCB.BFR1.SIZ(BUFNUM)=1;

    947  0 000120   000000 720100                    LXL0    0,,PR0
         0 000121   100122 236110                    LDQ     82,X0,PR1
         0 000122   000000 376000 1                  ANQ     0
         0 000123   000001 276003                    ORQ     1,DU
         0 000124   100122 756110                    STQ     82,X0,PR1

     1426      948    1           IF ADDR(BUF$)~=ADDR(NIL) THEN

    948  0 000125   200004 236100                    LDQ     @BUF$,,AUTO
         0 000126   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000127   000134 600000 0                  TZE     s:950

     1427      949    1              BUF$ = FM$BUF$ (VPNO);

    949  0 000130   200007 720100                    LXL0    VPNO,,AUTO
         0 000131   000000 236010 xsym               LDQ     FM$BUF$,X0
         0 000132   200004 474500                    LDP4    @BUF$,,AUTO
         0 000133   400000 756100                    STQ     0,,PR4

     1428      950    1           RETURN;

    950  0 000134   000000 702200 xent               TSX2  ! X66_ARET

     1429      951        /**/
     1430      952    1   CVMERR: CALL SC_FMH89;

    952  0 000135   000000 713400 xsym  CVMERR       CLIMB   SC_FMH89
         0 000136   000000 600000 xsid               climb   nvectors=         0
PL6.E3A0      #002=FMH$MAPJRNL File=FMH$CONSEC.:E05TSI                           TUE 07/29/97 16:49 Page:232  

     1431      953        /*S*    SCREECH_CODE:  FMH-S$FM89
     1432      954        *       TYPE:  SUA
     1433      955        *       MESSAGE:  Error trying to CVM onto JRNL file page
     1434      956        */
     1435      957    1   END FMH$MAPJRNL;

    957  0 000137   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   1     000   777000 777777                                                    ....
     1436      958        %EOD;

PL6.E3A0      #002=FMH$MAPJRNL File=FMH$CONSEC.:E05TSI                           TUE 07/29/97 16:49 Page:233  
--  Include file information  --

   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FM$CFU.:E05TOU  is referenced.
   F$DCB.:E05TOU  is referenced.
   B$MAP.:E05TOU  cannot be made into a system file and is referenced.
   M_INFO_C.:E05TOU  is referenced.
   F_MACROS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   F$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMH$MAPJRNL.
PL6.E3A0      #002=FMH$MAPJRNL File=FMH$CONSEC.:E05TSI                           TUE 07/29/97 16:49 Page:234  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @BUF$                      3-0-0/w PTR         r     1 @BUFNUM
    *0-0-0/w PTR         r     1 BUF$                      *0-0-0/w UBIN        r     1 BUFNUM
     6-0-0/w PTR         r     1 CFU$                       5-0-0/w PTR         r     1 JDCB$
    10-0-0/w SBIN        r     1 PP                         7-0-0/w SBIN        r     1 VPNO

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$IPHYMAP$                 0-0-0/w PTR         r     1 B$JIT$
     0-0-0/w PTR         r     1 B$UPT$
     0-0-0/w PTR         r     1 FM$BUF$(0:0)
     0-0-0/w BIT         r     1 HW_WSQ0PT

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/w STRC        r     1 B$MAP(0:1023)
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0/w STRC(288)   r     1 FM$CFU
     0-0-0/w STRC(288)   r     1 FM$CFUJ
     0-0-0/h UBIN(18)    r     1 MM$IPHY_MAP(0:0)


   Procedure FMH$MAPJRNL requires 96 words for executable code.
   Procedure FMH$MAPJRNL requires 12 words of local(AUTO) storage.
PL6.E3A0      #002=FMH$MAPJRNL File=FMH$CONSEC.:E05TSI                           TUE 07/29/97 16:49 Page:235  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=FMH$MAPJRNL File=FMH$CONSEC.:E05TSI                           TUE 07/29/97 16:49 Page:236  
          MINI XREF LISTING

B$IPHYMAP$
       860**DCL       931>>IF
B$JIT.DCB$
       454**DCL       925>>ASSIGN
B$JIT.ERR.MID
       365**DCL       365--REDEF
B$JIT$
       857**DCL       359--IMP-PTR   925>>ASSIGN
B$MAP.RPN
       660**DCL       931>>IF        936>>IF
B$MAP.SCTRL
       661**DCL       662--REDEF
B$UPT$
       859**DCL       931>>IF        936>>IF
BUF$
        26**DCL        23--PROC      948--IF        949<<ASSIGN
BUFNUM
        25**DCL        23--PROC      927>>ASSIGN    943>>ASSIGN    944>>ASSIGN    945>>ASSIGN    946>>ASSIGN
       947>>ASSIGN
CFU$
        33**DCL       913--IMP-PTR   918--IMP-PTR   926<<ASSIGN    928>>ASSIGN    945>>ASSIGN    946>>ASSIGN
CVMERR
       952**LABEL     941--GOTO
F$DCB.ACTPOS
       888**DCL       888--REDEF
F$DCB.ARS
       863**DCL       863--REDEF
F$DCB.ATTR
       881**DCL       882--REDEF
F$DCB.BFR.BUFUP
       907**DCL       946<<ASSIGN
F$DCB.BFR.BUFX
PL6.E3A0      #002=FMH$MAPJRNL File=FMH$CONSEC.:E05TSI                           TUE 07/29/97 16:49 Page:237  
       908**DCL       927>>ASSIGN    943<<ASSIGN
F$DCB.BFR.CVM
       908**DCL       944<<ASSIGN
F$DCB.BFR.DA
       908**DCL       945<<ASSIGN
F$DCB.BFR1.SIZ
       908**DCL       947<<ASSIGN
F$DCB.BORROW
       896**DCL       896--REDEF     896--REDEF     896--REDEF
F$DCB.CFU$
       897**DCL       926>>ASSIGN
F$DCB.DCBNAME.L
       910**DCL       910--IMP-SIZ
F$DCB.EOMCHAR
       867**DCL       867--REDEF
F$DCB.FLDID
       891**DCL       891--REDEF
F$DCB.FORM$
       885**DCL       885--REDEF
F$DCB.FSECT
       901**DCL       901--REDEF
F$DCB.FSN
       878**DCL       878--REDEF     878--REDEF     879--REDEF
F$DCB.HEADER$
       884**DCL       884--REDEF
F$DCB.IXTNSIZE
       882**DCL       882--REDEF
F$DCB.LASTSTA$
       872**DCL       872--REDEF
F$DCB.LVL
       897**DCL       897--REDEF
F$DCB.NAME.C
       872**DCL       872--REDEF
F$DCB.NOEOF
       893**DCL       893--REDEF
F$DCB.NRECS
PL6.E3A0      #002=FMH$MAPJRNL File=FMH$CONSEC.:E05TSI                           TUE 07/29/97 16:49 Page:238  
       883**DCL       883--REDEF
F$DCB.NRECX
       902**DCL       902--REDEF
F$DCB.OHDR
       894**DCL       894--REDEF
F$DCB.ORG
       877**DCL       877--REDEF
F$DCB.PRECNO
       900**DCL       900--REDEF
F$DCB.RCSZ
       905**DCL       905--REDEF
F$DCB.RES
       873**DCL       873--REDEF
F$DCB.SETX
       885**DCL       885--REDEF
F$DCB.TAB$
       884**DCL       885--REDEF
F$DCB.TDA
       899**DCL       899--REDEF
F$DCB.WSN
       874**DCL       874--REDEF
FM$BUF$
       858**DCL       949>>ASSIGN
FM$CFU.ACCTX
       919**DCL       919--REDEF
FM$CFU.LDA
       921**DCL       945>>ASSIGN
FM$CFUJ.PAGE#
       914**DCL       928>>ASSIGN
FM$CFUJ.UPD
       913**DCL       946>>ASSIGN
HW_WSQ0PT
       851**DCL       930>>IF
JDCB$
        32**DCL       863--IMP-PTR   925<<ASSIGN    926>>ASSIGN    927>>ASSIGN    943>>ASSIGN    944>>ASSIGN
       945>>ASSIGN    946>>ASSIGN    947>>ASSIGN
PL6.E3A0      #002=FMH$MAPJRNL File=FMH$CONSEC.:E05TSI                           TUE 07/29/97 16:49 Page:239  
MM$IPHY_MAP
       715**DCL       931>>IF
MMJ$MAPIOP
        29**DCL-ENT   942--CALL
MMJ$UNMAPIOP
        28**DCL-ENT   939--CALL
PP
        35**DCL       928<<ASSIGN    931>>IF        936>>IF        941>>IF        942<>CALL
RETBUF
       943**LABEL     933--GOTO      938--GOTO
SC_FMH89
        30**DCL-ENT   952--CALL
VPNO
        34**DCL       927<<ASSIGN    929>>IF        931>>IF        936>>IF        939<>CALL      942<>CALL
       943>>ASSIGN    949>>ASSIGN
PL6.E3A0      #002=FMH$MAPJRNL File=FMH$CONSEC.:E05TSI                           TUE 07/29/97 16:49 Page:240  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #002=FMH$MAPJRNL File=FMH$CONSEC.:E05TSI                           TUE 07/29/97 16:49 Page:241  
              MINI UREF LISTING

B$PAGE     710**DCL
B$SECT     700**DCL
EPU_MASK     849**DCL
FMH$MAPJRNL      23**PROC
HW_CHANS     854**DCL
HW_EDAC     854**DCL
HW_EI     853**DCL
HW_ES     853**DCL
HW_EXT_STATUS     852**DCL
HW_FLTIC_OK     854**DCL
HW_FRAG_PT     852**DCL
HW_IMX     855**DCL
HW_IOP     852**DCL
HW_IOPTP_UNITS     850**DCL
HW_LOAD_FW     851**DCL
HW_NORM_CLOCK     854**DCL
HW_PERF     849**DCL
HW_PERF_SUB     849**DCL
HW_PROG_SCU     853**DCL
HW_PTB_UNITS     850**DCL
HW_SECT_PT     851**DCL
HW_SMART_CACHE     853**DCL
HW_TIME_LEGAL     851**DCL
HW_TYPE     850**DCL
H_CNCTEVBF     839**DCL
H_CNCTEVGATE     839**DCL
H_CNCTEVX     839**DCL
H_CNNCTMLBX     821**DCL
H_CODE     832**DCL
H_CPUGATE     821**DCL
H_CPU_BF     831**DCL
H_CPU_CONFIG     827**DCL
PL6.E3A0      #002=FMH$MAPJRNL File=FMH$CONSEC.:E05TSI                           TUE 07/29/97 16:49 Page:242  
H_DPS8000_CI_TABLE     846**DCL
H_DPS8000_CONFIG_NAME     846**DCL
H_DPS8000_CPU_CONF_REG     842**DCL
H_DPS8000_SCU_CONF_REG     843**DCL
H_DPS8000_SCU_INFO     844**DCL
H_DSMASK     823**DCL
H_DUMMY     836**DCL
H_EDACHIST     840**DCL
H_EDACUTS     840**DCL
H_ENMASK     823**DCL
H_EXTFLTREG_MASK     841**DCL
H_FAIL_NUM     826**DCL
H_FAIL_PARK     826**DCL
H_FAIL_PORT     826**DCL
H_FLTCNT     821**DCL
H_FLTREG     841**DCL
H_FLTREG_MASK     840**DCL
H_HRMODE     837**DCL
H_HRMODE_MASK     837**DCL
H_INTMASK     822**DCL
H_LUFREG     837**DCL
H_LUFREG_MASK     838**DCL
H_MAKE_IN_PROGRESS     834**DCL
H_MAXPORT#     832**DCL
H_MAXSU#     824**DCL
H_MAX_PERF     848**DCL
H_MEMOK     824**DCL
H_MIXED_FLT     835**DCL
H_MIXED_INT     834**DCL
H_MIXED_MP     834**DCL
H_MIXED_RMIR     836**DCL
H_MIXED_SSS     835**DCL
H_MIXED_SSX     835**DCL
H_MIXED_TRO     835**DCL
H_MODE     833**DCL
H_NURSE     827**DCL
PL6.E3A0      #002=FMH$MAPJRNL File=FMH$CONSEC.:E05TSI                           TUE 07/29/97 16:49 Page:243  
H_NURSE_PARK     827**DCL
H_PERF     848**DCL
H_PERF_DATA     841**DCL
H_PORT#     833**DCL
H_PORTMASK     832**DCL
H_PORT_FIRST_ADDR     831**DCL
H_RELIEF     827**DCL
H_RELOAD_CACHE     838**DCL
H_RELOAD_MODE     838**DCL
H_RLF_GATE     825**DCL
H_RPM_CONNECT_TABLE     847**DCL
H_RPM_FLG     825**DCL
H_RSW1     836**DCL
H_RSW2     836**DCL
H_S1000_CONFIG     825**DCL
H_S1000_FLG     825**DCL
H_SAVE_SS     834**DCL
H_SCU_BF     831**DCL
H_SCU_CONFIG     828**DCL
H_SNAP     833**DCL
H_SPROC#     833**DCL
H_STOREUNIT     823**DCL
H_SYSID     833**DCL
H_TIME     822**DCL
H_TIME_CORR     849**DCL
H_XDELTA     822**DCL

PL6.E3A0      #003=FMH$JGETPG File=FMH$CONSEC.:E05TSI                            TUE 07/29/97 16:49 Page:244  
     1437        1        /*T***********************************************************/
     1438        2        /*T*                                                         */
     1439        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1440        4        /*T*                                                         */
     1441        5        /*T***********************************************************/
     1442        6        /*F*    NAME:     FMH$JGETPG
     1443        7        *       PURPOSE:  Get the initial page for a journal file */
     1444        8        /**/
     1445        9        /**/
     1446       10        /**/
     1447       11        /*D*    NAME:     FMH$JGETPG
     1448       12        *       CALL:     CALL FMH$JGETPG(BUFNUM) ALTRET(LOC);
     1449       13        *       INPUT:    BUFNUM - Number of the buffer containing the
     1450       14        *                          current buffer.
     1451       15        *       OUTPUT:   CFU.PAGE# is set.
     1452       16        *       DESCRIPTION:  Flushes buffer if journal already open.
     1453       17        *                 Otherwise switches current page into I/O page,
     1454       18        *                 (if it isn't already one),
     1455       19        *                 sets it into CFU, and maps onto it.
     1456       20        */
     1457       21        /**/
     1458       22        /**/
     1459       23        FMH$JGETPG: PROC(BUFNUM) ALTRET;
     1460       24        /* PARAMETERS */
     1461       25    1   DCL BUFNUM UBIN;
     1462       26        /* EXTERNAL ROUTINES */
     1463       27    1   DCL FMD$FLSHBUF ENTRY(1);
     1464       28    1   DCL FMH$MAPJRNL ENTRY(2);
     1465       29    1   DCL MMJ$FBTOIOP ENTRY(2);
     1466       30    1   DCL SC_FMH89 ENTRY CONV(2,0);
     1467       31        /* INCLUDE FILES */
     1468       32        %INCLUDE F$JIT_C;
     1469      462        %INCLUDE FM_CACHE_R;
     1470      474        %INCLUDE FM_CACHE_C;
     1471      540        %INCLUDE F_ERRORS_C;
     1472      780        %INCLUDE F_MACROS_C;
     1473      791        %INCLUDE FM$CFU;
PL6.E3A0      #003=FMH$JGETPG File=FMH$CONSEC.:E05TSI                            TUE 07/29/97 16:49 Page:245  
     1474      836        %INCLUDE HF_LOCK_C;
     1475      850        %INCLUDE P_PMDAT_R;
     1476     1158        %MACRO F$DCBMAC(BASED=BASED);
     1477     1159        %FMC$CACHE;
     1478     1160        %INCLUDE F$DCB;
     1479     1209        %MEND;
     1480     1210        /* EXTERNAL DATA */
     1481     1211    1   DCL B$JIT$ PTR SYMREF;
     1482     1212        /* CONSTANT STORAGE */
     1483     1213        %SUB FCG#='0615'O;
     1484     1214        %SUB MID#='10'O;
     1485     1215        %ERRCODE (NAME=ERRNOJRNLPG,COD#=%E$NOJRNLPG);
     1486     1219        /* LOCAL AUTOMATIC STORAGE */
     1487     1220    1   DCL JDCB$ PTR;
     1488     1221    1   DCL CFU$ PTR;
     1489     1222    1   DCL PP SBIN;
     1490     1223    1   DCL VPNO SBIN;
     1491     1224    1   DCL S_CUN UBIN SYMREF;
     1492     1225        /* BASED STRUCTURES */
     1493     1226        %F$DCBMAC (BASED="BASED(JDCB$)");
     1494     1299        %FM$CFUJ (BASED="BASED(CFU$)");
     1495     1304        /**/
     1496     1305        /**/
     1497     1306    1           JDCB$=B$JIT.DCB$;
     1498     1307    1           F$DCB.RPOS='0'B;
     1499     1308    1           CFU$=F$DCB.CFU$;
     1500     1309    2           IF NOT F$DCB.OWNER THEN DO;
     1501     1310    2              CALL FMD$FLSHBUF(BUFNUM);    /* GET RID OF REAL BUFFER             */
     1502     1311    2              RETURN;
     1503     1312    2              END;
     1504     1313    1           VPNO=F$DCB.BFR1.CX(BUFNUM);
     1505     1314    1           IF VPNO=0
     1506     1315    2           THEN DO;
     1507     1316    2              VPNO=F$DCB.BFR.BUFX(BUFNUM);
     1508     1317    2              F$DCB.BFR.BUFX(BUFNUM) = 0;
     1509     1318    2              CALL MMJ$FBTOIOP (VPNO , PP);
     1510     1319    2              END;
PL6.E3A0      #003=FMH$JGETPG File=FMH$CONSEC.:E05TSI                            TUE 07/29/97 16:49 Page:246  
     1511     1320    2           ELSE DO;
     1512     1321                   %LOCK(G=FMC_LOCK);
     1513     1324    2              PP=FMC$CACHETBL.PAGE(VPNO);
     1514     1325    2              FMC$CACHETBL(VPNO)='0'B;
     1515     1326                  %DEC_COUNTER(ITEM=IOCACHE);
     1516     1332                   %UNLOCK(G=FMC_LOCK);
     1517     1335    2              F$DCB.BFR1.CX(BUFNUM)=0;
     1518     1336    2              END;
     1519     1337    1           FM$CFUJ.PAGE# = PP;
     1520     1338    1           CALL FMH$MAPJRNL(BUFNUM);
     1521     1339    1           RETURN;
     1522     1340        /**/
     1523     1341        %EJECT;
PL6.E3A0      #003=FMH$JGETPG File=FMH$CONSEC.:E05TSI                            TUE 07/29/97 16:49 Page:247  
     1524     1342        /*F*    NAME:    FMH$JRELPG
     1525     1343        *       PURPOSE:  Release the journal page when owner closes */
     1526     1344        /**/
     1527     1345        /**/
     1528     1346        /**/
     1529     1347        /*D*    NAME:    FMH$JRELPG
     1530     1348        *       INPUT:   BUFNUM - Number of the buffer containing the current page
     1531     1349        *       OUTPUT:  The buffer page is released
     1532     1350        *       DESCRIPTION:  Call FMH$MAPJRNL to get the current buffer mapped in.
     1533     1351        *                Call FMD$FLSHBUF to get rid of it.
     1534     1352        */
     1535     1353        /**/
     1536     1354        /**/
     1537     1355        /**/
     1538     1356    1   FMH$JRELPG: ENTRY(BUFNUM) ALTRET;
     1539     1357        /**/
     1540     1358    1           IF B$JIT.DCB$->F$DCB.CFU$->FM$CFUJ.PAGE#=0 THEN RETURN; /* NOTHING HERE */
     1541     1359    1           CALL FMH$MAPJRNL(BUFNUM);
     1542     1360    1           CALL FMD$FLSHBUF(BUFNUM);
     1543     1361    1           RETURN;
     1544     1362    1   END FMH$JGETPG;
     1545     1363        %EOD;

PL6.E3A0      #003=FMH$JGETPG File=FMH$CONSEC.:E05TSI                            TUE 07/29/97 16:49 Page:248  
--  Include file information  --

   F$DCB.:E05TOU  is referenced.
   P_PMDAT_C.:E05TOU  is referenced.
   P_PMDAT_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   FM$CFU.:E05TOU  is referenced.
   F_MACROS_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   FM_CACHE_C.:E05TOU  is referenced.
   FM_CACHE_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   F$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMH$JGETPG.

   Procedure FMH$JGETPG requires 98 words for executable code.
   Procedure FMH$JGETPG requires 10 words of local(AUTO) storage.

PL6.E3A0      #003=FMH$JGETPG File=FMH$CONSEC.:E05TSI                            TUE 07/29/97 16:49 Page:249  

 Object Unit name= FMH$JGETPG                                 File name= FMH$CONSEC.:E05TOU
 UTS= JUL 29 '97 16:49:22.00 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      1      1  FMH$JGETPG
    1   Proc  even  none    98    142  FMH$JGETPG
    2  RoData even  none     3      3  FMH$JGETPG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        1  FMH$JGETPG
     1    121          yes     yes      Std        1  FMH$JRELPG

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 FMD$FLSHBUF
         yes           Std       1 HFC$UNLOCK
         yes           Std       2 FMH$MAPJRNL
         yes           Std       2 MMJ$FBTOIOP
         yes           Std       1 HFC$LOCK
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #003=FMH$JGETPG File=FMH$CONSEC.:E05TSI                            TUE 07/29/97 16:49 Page:250  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     FMC_CACHE$                            FMC_CACHEPGCNT$                       FMC_LOCK
     P_RESOURCE$                           P_UPTIME                              P_NSCPU
     B$JIT$                                B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #003=FMH$JGETPG File=FMH$CONSEC.:E05TSI                            TUE 07/29/97 16:49 Page:251  


     1437        1        /*T***********************************************************/
     1438        2        /*T*                                                         */
     1439        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1440        4        /*T*                                                         */
     1441        5        /*T***********************************************************/
     1442        6        /*F*    NAME:     FMH$JGETPG
     1443        7        *       PURPOSE:  Get the initial page for a journal file */
     1444        8        /**/
     1445        9        /**/
     1446       10        /**/
     1447       11        /*D*    NAME:     FMH$JGETPG
     1448       12        *       CALL:     CALL FMH$JGETPG(BUFNUM) ALTRET(LOC);
     1449       13        *       INPUT:    BUFNUM - Number of the buffer containing the
     1450       14        *                          current buffer.
     1451       15        *       OUTPUT:   CFU.PAGE# is set.
     1452       16        *       DESCRIPTION:  Flushes buffer if journal already open.
     1453       17        *                 Otherwise switches current page into I/O page,
     1454       18        *                 (if it isn't already one),
     1455       19        *                 sets it into CFU, and maps onto it.
     1456       20        */
     1457       21        /**/
     1458       22        /**/
     1459       23        FMH$JGETPG: PROC(BUFNUM) ALTRET;

     23  1 000000   000000 700200 xent  FMH$JGETPG   TSX0  ! X66_AUTO_1
         1 000001   000012 000001                    ZERO    10,1

     1460       24        /* PARAMETERS */
     1461       25    1   DCL BUFNUM UBIN;
     1462       26        /* EXTERNAL ROUTINES */
     1463       27    1   DCL FMD$FLSHBUF ENTRY(1);
     1464       28    1   DCL FMH$MAPJRNL ENTRY(2);
     1465       29    1   DCL MMJ$FBTOIOP ENTRY(2);
     1466       30    1   DCL SC_FMH89 ENTRY CONV(2,0);
     1467       31        /* INCLUDE FILES */
     1468       32        %INCLUDE F$JIT_C;
PL6.E3A0      #003=FMH$JGETPG File=FMH$CONSEC.:E05TSI                            TUE 07/29/97 16:49 Page:252  
     1469      462        %INCLUDE FM_CACHE_R;
     1470      474        %INCLUDE FM_CACHE_C;
     1471      540        %INCLUDE F_ERRORS_C;
     1472      780        %INCLUDE F_MACROS_C;
     1473      791        %INCLUDE FM$CFU;
     1474      836        %INCLUDE HF_LOCK_C;
     1475      850        %INCLUDE P_PMDAT_R;
     1476     1158        %MACRO F$DCBMAC(BASED=BASED);
     1477     1159        %FMC$CACHE;
     1478     1160        %INCLUDE F$DCB;
     1479     1209        %MEND;
     1480     1210        /* EXTERNAL DATA */
     1481     1211    1   DCL B$JIT$ PTR SYMREF;
     1482     1212        /* CONSTANT STORAGE */
     1483     1213        %SUB FCG#='0615'O;
     1484     1214        %SUB MID#='10'O;
     1485     1215        %ERRCODE (NAME=ERRNOJRNLPG,COD#=%E$NOJRNLPG);
     1486     1219        /* LOCAL AUTOMATIC STORAGE */
     1487     1220    1   DCL JDCB$ PTR;
     1488     1221    1   DCL CFU$ PTR;
     1489     1222    1   DCL PP SBIN;
     1490     1223    1   DCL VPNO SBIN;
     1491     1224    1   DCL S_CUN UBIN SYMREF;
     1492     1225        /* BASED STRUCTURES */
     1493     1226        %F$DCBMAC (BASED="BASED(JDCB$)");
     1494     1299        %FM$CFUJ (BASED="BASED(CFU$)");
     1495     1304        /**/
     1496     1305        /**/
     1497     1306    1           JDCB$=B$JIT.DCB$;

   1306  1 000002   000000 470400 xsym               LDP0    B$JIT$
         1 000003   000232 236100                    LDQ     154,,PR0
         1 000004   200004 756100                    STQ     JDCB$,,AUTO

     1498     1307    1           F$DCB.RPOS='0'B;

   1307  1 000005   200004 471500                    LDP1    JDCB$,,AUTO
PL6.E3A0      #003=FMH$JGETPG File=FMH$CONSEC.:E05TSI                            TUE 07/29/97 16:49 Page:253  
         1 000006   000000 236000 2                  LDQ     0
         1 000007   100064 356100                    ANSQ    52,,PR1

     1499     1308    1           CFU$=F$DCB.CFU$;

   1308  1 000010   100066 236100                    LDQ     54,,PR1
         1 000011   200005 756100                    STQ     CFU$,,AUTO

     1500     1309    2           IF NOT F$DCB.OWNER THEN DO;

   1309  1 000012   100064 236100                    LDQ     52,,PR1
         1 000013   040000 316007                    CANQ    16384,DL
         1 000014   000022 601000 1                  TNZ     s:1313

     1501     1310    2              CALL FMD$FLSHBUF(BUFNUM);    /* GET RID OF REAL BUFFER             */

   1310  1 000015   200003 630500                    EPPR0   @BUFNUM,,AUTO
         1 000016   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000017   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 000020   000000 011000                    NOP     0

     1502     1311    2              RETURN;

   1311  1 000021   000000 702200 xent               TSX2  ! X66_ARET

     1503     1312    2              END;
     1504     1313    1           VPNO=F$DCB.BFR1.CX(BUFNUM);

   1313  1 000022   200003 473500                    LDP3    @BUFNUM,,AUTO
         1 000023   300000 720100                    LXL0    0,,PR3
         1 000024   100122 236110                    LDQ     82,X0,PR1
         1 000025   777777 376007                    ANQ     -1,DL
         1 000026   200007 756100                    STQ     VPNO,,AUTO

     1505     1314    1           IF VPNO=0

   1314  1 000027   000051 601000 1                  TNZ     s:1322
PL6.E3A0      #003=FMH$JGETPG File=FMH$CONSEC.:E05TSI                            TUE 07/29/97 16:49 Page:254  

     1506     1315    2           THEN DO;

     1507     1316    2              VPNO=F$DCB.BFR.BUFX(BUFNUM);

   1316  1 000030   300000 720100                    LXL0    0,,PR3
         1 000031   100115 236110                    LDQ     77,X0,PR1
         1 000032   000033 772000                    QRL     27
         1 000033   000037 376007                    ANQ     31,DL
         1 000034   200007 756100                    STQ     VPNO,,AUTO

     1508     1317    2              F$DCB.BFR.BUFX(BUFNUM) = 0;

   1317  1 000035   300000 720100                    LXL0    0,,PR3
         1 000036   000001 236000 2                  LDQ     1
         1 000037   100115 356110                    ANSQ    77,X0,PR1

     1509     1318    2              CALL MMJ$FBTOIOP (VPNO , PP);

   1318  1 000040   200006 630500                    EPPR0   PP,,AUTO
         1 000041   200011 450500                    STP0    VPNO+2,,AUTO
         1 000042   200007 634500                    EPPR4   VPNO,,AUTO
         1 000043   200010 454500                    STP4    VPNO+1,,AUTO
         1 000044   200010 630500                    EPPR0   VPNO+1,,AUTO
         1 000045   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000046   000000 701000 xent               TSX1    MMJ$FBTOIOP
         1 000047   000000 011000                    NOP     0

     1510     1319    2              END;

   1319  1 000050   000111 710000 1                  TRA     s:1337

     1511     1320    2           ELSE DO;

     1512     1321                   %LOCK(G=FMC_LOCK);

   1322  1 000051   000002 630400 2                  EPPR0   2
PL6.E3A0      #003=FMH$JGETPG File=FMH$CONSEC.:E05TSI                            TUE 07/29/97 16:49 Page:255  
         1 000052   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000053   000000 701000 xent               TSX1    HFC$LOCK
         1 000054   000000 011000                    NOP     0

     1513     1324    2              PP=FMC$CACHETBL.PAGE(VPNO);

   1324  1 000055   200007 236100                    LDQ     VPNO,,AUTO
         1 000056   000006 402007                    MPY     6,DL
         1 000057   000000 470400 xsym               LDP0    FMC_CACHE$
         1 000060   000002 236106                    LDQ     2,QL,PR0
         1 000061   000022 772000                    QRL     18
         1 000062   200006 756100                    STQ     PP,,AUTO

     1514     1325    2              FMC$CACHETBL(VPNO)='0'B;

   1325  1 000063   200007 236100                    LDQ     VPNO,,AUTO
         1 000064   000030 402007                    MPY     24,DL
         1 000065   000106 100400                    MLR     fill='000'O
         1 000066   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         1 000067   000000 000030                    ADSC9   0,Q,PR0                  cn=0,n=24

     1515     1326                  %DEC_COUNTER(ITEM=IOCACHE);

   1327  1 000070   000000 470400 xsym               LDP0    P_RESOURCE$
         1 000071   000055 235100                    LDA     45,,PR0
         1 000072   000001 135007                    SBLA    1,DL
         1 000073   000055 755100                    STA     45,,PR0

   1328  1 000074   000055 236100                    LDQ     45,,PR0
         1 000075   000057 116100                    CMPQ    47,,PR0
         1 000076   000100 603000 1                  TRC     s:1333

   1330  1 000077   000057 756100                    STQ     47,,PR0

     1516     1332                   %UNLOCK(G=FMC_LOCK);

   1333  1 000100   000002 630400 2                  EPPR0   2
PL6.E3A0      #003=FMH$JGETPG File=FMH$CONSEC.:E05TSI                            TUE 07/29/97 16:49 Page:256  
         1 000101   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000102   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000103   000000 011000                    NOP     0

     1517     1335    2              F$DCB.BFR1.CX(BUFNUM)=0;

   1335  1 000104   200003 470500                    LDP0    @BUFNUM,,AUTO
         1 000105   000000 720100                    LXL0    0,,PR0
         1 000106   000000 221003                    LDX1    0,DU
         1 000107   200004 471500                    LDP1    JDCB$,,AUTO
         1 000110   100122 441110                    SXL1    82,X0,PR1

     1518     1336    2              END;

     1519     1337    1           FM$CFUJ.PAGE# = PP;

   1337  1 000111   200006 720100                    LXL0    PP,,AUTO
         1 000112   200005 470500                    LDP0    CFU$,,AUTO
         1 000113   000005 440100                    SXL0    5,,PR0

     1520     1338    1           CALL FMH$MAPJRNL(BUFNUM);

   1338  1 000114   200003 630500                    EPPR0   @BUFNUM,,AUTO
         1 000115   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000116   000000 701000 xent               TSX1    FMH$MAPJRNL
         1 000117   000000 011000                    NOP     0

     1521     1339    1           RETURN;

   1339  1 000120   000000 702200 xent               TSX2  ! X66_ARET

     1522     1340        /**/
     1523     1341        %EJECT;
PL6.E3A0      #003=FMH$JGETPG File=FMH$CONSEC.:E05TSI                            TUE 07/29/97 16:49 Page:257  
     1524     1342        /*F*    NAME:    FMH$JRELPG
     1525     1343        *       PURPOSE:  Release the journal page when owner closes */
     1526     1344        /**/
     1527     1345        /**/
     1528     1346        /**/
     1529     1347        /*D*    NAME:    FMH$JRELPG
     1530     1348        *       INPUT:   BUFNUM - Number of the buffer containing the current page
     1531     1349        *       OUTPUT:  The buffer page is released
     1532     1350        *       DESCRIPTION:  Call FMH$MAPJRNL to get the current buffer mapped in.
     1533     1351        *                Call FMD$FLSHBUF to get rid of it.
     1534     1352        */
     1535     1353        /**/
     1536     1354        /**/
     1537     1355        /**/
     1538     1356    1   FMH$JRELPG: ENTRY(BUFNUM) ALTRET;

   1356  1 000121   000000 700200 xent  FMH$JRELPG   TSX0  ! X66_AUTO_1
         1 000122   000012 000001                    ZERO    10,1

     1539     1357        /**/
     1540     1358    1           IF B$JIT.DCB$->F$DCB.CFU$->FM$CFUJ.PAGE#=0 THEN RETURN; /* NOTHING HERE */

   1358  1 000123   000000 470400 xsym               LDP0    B$JIT$
         1 000124   000232 471500                    LDP1    154,,PR0
         1 000125   100066 473500                    LDP3    54,,PR1
         1 000126   300005 720100                    LXL0    5,,PR3
         1 000127   000131 601000 1                  TNZ     s:1359

   1358  1 000130   000000 702200 xent               TSX2  ! X66_ARET

     1541     1359    1           CALL FMH$MAPJRNL(BUFNUM);

   1359  1 000131   200003 630500                    EPPR0   @BUFNUM,,AUTO
         1 000132   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000133   000000 701000 xent               TSX1    FMH$MAPJRNL
         1 000134   000000 011000                    NOP     0

PL6.E3A0      #003=FMH$JGETPG File=FMH$CONSEC.:E05TSI                            TUE 07/29/97 16:49 Page:258  
     1542     1360    1           CALL FMD$FLSHBUF(BUFNUM);

   1360  1 000135   200003 630500                    EPPR0   @BUFNUM,,AUTO
         1 000136   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000137   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 000140   000000 011000                    NOP     0

     1543     1361    1           RETURN;

   1361  1 000141   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   0     000   061510 001222                                                    1...

(unnamed)
 Sect OctLoc
   2     000   777777 767777   740777 777777   000000 006000                    ............
     1544     1362    1   END FMH$JGETPG;
     1545     1363        %EOD;

PL6.E3A0      #003=FMH$JGETPG File=FMH$CONSEC.:E05TSI                            TUE 07/29/97 16:49 Page:259  
--  Include file information  --

   F$DCB.:E05TOU  is referenced.
   P_PMDAT_C.:E05TOU  is referenced.
   P_PMDAT_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   FM$CFU.:E05TOU  is referenced.
   F_MACROS_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   FM_CACHE_C.:E05TOU  is referenced.
   FM_CACHE_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   F$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMH$JGETPG.
PL6.E3A0      #003=FMH$JGETPG File=FMH$CONSEC.:E05TSI                            TUE 07/29/97 16:49 Page:260  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @BUFNUM                   *0-0-0/w UBIN        r     1 BUFNUM
     5-0-0/w PTR         r     1 CFU$                       4-0-0/w PTR         r     1 JDCB$
     6-0-0/w SBIN        r     1 PP                         7-0-0/w SBIN        r     1 VPNO

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 FMC_CACHE$
     0-0-0/w PTR         r     1 FMC_CACHEPGCNT$            0-0-0/b BIT (72)    r     1 FMC_LOCK
     0-0-0/w PTR         r     1 P_RESOURCE$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w STRC(288)   r     1 FM$CFUJ
     0-0-0/w STRC(216)   r     1 FMC$CACHETBL(0:0)
     0-0-0/w STRC(2268)  r     1 P_RESOURCE


   Procedure FMH$JGETPG requires 98 words for executable code.
   Procedure FMH$JGETPG requires 10 words of local(AUTO) storage.
PL6.E3A0      #003=FMH$JGETPG File=FMH$CONSEC.:E05TSI                            TUE 07/29/97 16:49 Page:261  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=FMH$JGETPG File=FMH$CONSEC.:E05TSI                            TUE 07/29/97 16:49 Page:262  
          MINI XREF LISTING

B$JIT.DCB$
       449**DCL      1306>>ASSIGN   1358>>IF
B$JIT.ERR.MID
       360**DCL       360--REDEF
B$JIT$
      1211**DCL       354--IMP-PTR  1306>>ASSIGN   1358>>IF
BUFNUM
        25**DCL        23--PROC     1310<>CALL     1313>>ASSIGN   1316>>ASSIGN   1317>>ASSIGN   1335>>ASSIGN
      1338<>CALL     1356--ENTRY    1359<>CALL     1360<>CALL
CFU$
      1221**DCL      1300--IMP-PTR  1308<<ASSIGN   1337>>ASSIGN
F$DCB.ACTPOS
      1275**DCL      1275--REDEF
F$DCB.ARS
      1250**DCL      1250--REDEF
F$DCB.ATTR
      1268**DCL      1269--REDEF
F$DCB.BFR.BUFX
      1295**DCL      1316>>ASSIGN   1317<<ASSIGN
F$DCB.BFR1.CX
      1296**DCL      1313>>ASSIGN   1335<<ASSIGN
F$DCB.BORROW
      1283**DCL      1283--REDEF    1283--REDEF    1283--REDEF
F$DCB.CFU$
      1284**DCL      1308>>ASSIGN   1358>>IF
F$DCB.DCBNAME.L
      1297**DCL      1297--IMP-SIZ
F$DCB.EOMCHAR
      1254**DCL      1254--REDEF
F$DCB.FLDID
      1278**DCL      1278--REDEF
F$DCB.FORM$
PL6.E3A0      #003=FMH$JGETPG File=FMH$CONSEC.:E05TSI                            TUE 07/29/97 16:49 Page:263  
      1272**DCL      1272--REDEF
F$DCB.FSECT
      1288**DCL      1288--REDEF
F$DCB.FSN
      1265**DCL      1265--REDEF    1265--REDEF    1266--REDEF
F$DCB.HEADER$
      1271**DCL      1271--REDEF
F$DCB.IXTNSIZE
      1269**DCL      1269--REDEF
F$DCB.LASTSTA$
      1259**DCL      1259--REDEF
F$DCB.LVL
      1284**DCL      1284--REDEF
F$DCB.NAME.C
      1259**DCL      1259--REDEF
F$DCB.NOEOF
      1280**DCL      1280--REDEF
F$DCB.NRECS
      1270**DCL      1270--REDEF
F$DCB.NRECX
      1289**DCL      1289--REDEF
F$DCB.OHDR
      1281**DCL      1281--REDEF
F$DCB.ORG
      1264**DCL      1264--REDEF
F$DCB.OWNER
      1281**DCL      1309>>IF
F$DCB.PRECNO
      1287**DCL      1287--REDEF
F$DCB.RCSZ
      1292**DCL      1292--REDEF
F$DCB.RES
      1260**DCL      1260--REDEF
F$DCB.RPOS
      1281**DCL      1307<<ASSIGN
F$DCB.SETX
PL6.E3A0      #003=FMH$JGETPG File=FMH$CONSEC.:E05TSI                            TUE 07/29/97 16:49 Page:264  
      1272**DCL      1272--REDEF
F$DCB.TAB$
      1271**DCL      1272--REDEF
F$DCB.TDA
      1286**DCL      1286--REDEF
F$DCB.WSN
      1261**DCL      1261--REDEF
FM$CFUJ.PAGE#
      1301**DCL      1337<<ASSIGN   1358>>IF
FMC$CACHETBL
      1229**DCL      1325<<ASSIGN
FMC$CACHETBL.PAGE
      1237**DCL      1324>>ASSIGN
FMC_CACHE$
       470**DCL      1229--IMP-PTR  1324>>ASSIGN   1325>>ASSIGN
FMC_CACHEPGCNT$
       471**DCL       471--IMP-PTR   471--REDEF
FMC_LOCK
       472**DCL      1322<>CALL     1333<>CALL
FMD$FLSHBUF
        27**DCL-ENT  1310--CALL     1360--CALL
FMH$MAPJRNL
        28**DCL-ENT  1338--CALL     1359--CALL
HFC$LOCK
       849**DCL-ENT  1322--CALL
HFC$UNLOCK
       849**DCL-ENT  1333--CALL
JDCB$
      1220**DCL      1250--IMP-PTR  1306<<ASSIGN   1307>>ASSIGN   1308>>ASSIGN   1309>>IF       1313>>ASSIGN
      1316>>ASSIGN   1317>>ASSIGN   1335>>ASSIGN
MMJ$FBTOIOP
        29**DCL-ENT  1318--CALL
PP
      1222**DCL      1318<>CALL     1324<<ASSIGN   1337>>ASSIGN
P_NSCPU
      1138**DCL      1139--REDEF
PL6.E3A0      #003=FMH$JGETPG File=FMH$CONSEC.:E05TSI                            TUE 07/29/97 16:49 Page:265  
P_RESOURCE.RES
      1011**DCL      1078--REDEF
P_RESOURCE.RES.IOCACHE.CURRENT
      1040**DCL      1327<<ASSIGN   1327>>ASSIGN   1328>>IF       1330>>ASSIGN
P_RESOURCE.RES.IOCACHE.MIN
      1042**DCL      1328>>IF       1330<<ASSIGN
P_RESOURCE$
      1091**DCL       979--IMP-PTR  1327>>ASSIGN   1327>>ASSIGN   1328>>IF       1328>>IF       1330>>ASSIGN
      1330>>ASSIGN
P_UPTIME
      1127**DCL      1128--REDEF
VPNO
      1223**DCL      1313<<ASSIGN   1314>>IF       1316<<ASSIGN   1318<>CALL     1324>>ASSIGN   1325>>ASSIGN
PL6.E3A0      #003=FMH$JGETPG File=FMH$CONSEC.:E05TSI                            TUE 07/29/97 16:49 Page:266  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #003=FMH$JGETPG File=FMH$CONSEC.:E05TSI                            TUE 07/29/97 16:49 Page:267  
              MINI UREF LISTING

ERRNOJRNLPG    1216**DCL
FMC$CACHEPGCNT     471**DCL
FMC_CACHEPGCNT     471**DCL
FMC_CACHEPGCNT$R     471**DCL
FMC_CACHESIZ     470**DCL
FMC_CACHESIZN     470**DCL
FMC_MASK     472**DCL
FMC_MASKTBL     472**DCL
FMC_STATS$     470**DCL
FMC_TYPTBL$     470**DCL
FMH$JGETPG      23**PROC
FMH$JRELPG    1356**ENTRY
P$IODATA    1092**DCL
P$TABLE    1101**DCL
PH_CPU_MOUSED    1156**DCL
PH_JIT_ENTRY    1152**DCL
PH_MOUSE_ENTRY    1148**DCL
PH_MOUSE_LOCK    1155**DCL
PH_MOUSE_USERS    1145**DCL
PH_MOUSE_USER_NUMBER    1157**DCL
PH_MUS_PAGES    1147**DCL
P_AUIS    1133**DCL
P_AVAIL_MEM    1140**DCL
P_AVGAVAIL_MEM    1141**DCL
P_AVGETMF    1130**DCL
P_AVGIOL    1132**DCL
P_AVGRT90    1129**DCL
P_CALCNT    1117**DCL
P_CALCOMP    1118**DCL
P_DCTXMAX    1134**DCL
P_ETMF    1111**DCL
P_GATE    1137**DCL
PL6.E3A0      #003=FMH$JGETPG File=FMH$CONSEC.:E05TSI                            TUE 07/29/97 16:49 Page:268  
P_IOLOAD    1131**DCL
P_IOS    1126**DCL
P_NINTS    1112**DCL
P_NOW    1136**DCL
P_NSCPU_SBIN    1139**DCL
P_RT90    1113**DCL
P_RUE#    1109**DCL
P_SCHD#    1110**DCL
P_STARTUP    1114**DCL
P_STOPTIME    1135**DCL
P_S_MIDLTIME    1122**DCL
P_S_MIDLWIO    1123**DCL
P_S_MIDLWRES    1124**DCL
P_S_MIDLWRESIO    1125**DCL
P_S_MXEQTIME    1121**DCL
P_S_USRVTIME    1120**DCL
P_S_UXEQTIME    1119**DCL
P_UPTIME_SBIN    1128**DCL
P_USRVTIME    1116**DCL
P_UXEQTIME    1115**DCL
SC_FMH89      30**DCL-ENT
S_CUN    1224**DCL
WORD_    1146**DCL

PL6.E3A0      #004=FMH$INIT File=FMH$CONSEC.:E05TSI                              TUE 07/29/97 16:49 Page:269  
     1546        1        /*T***********************************************************/
     1547        2        /*T*                                                         */
     1548        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1549        4        /*T*                                                         */
     1550        5        /*T***********************************************************/
     1551        6        /*F*   NAME:   FMH$INIT
     1552        7        *      PURPOSE:  Provide DCB initialization for consecutive files
     1553        8        *                at M$OPEN time.                                             */
     1554        9        /*D*     NAME:     FMH$INIT
     1555       10                 CALL:     CALL FMH$INIT
     1556       11                 DESCRIPTION:
     1557       12                      Set up the DCB to point to the first record of the file.
     1558       13
     1559       14                      If the file was left open (probably because we didn't
     1560       15                 go through recovery), then check the file for
     1561       16                 inconsistancies.  If the file was open UBLOCK, then fast
     1562       17                 sequential files will take care of the formating.  If it
     1563       18                 is open BLOCK, then just return.
     1564       19
     1565       20                      Consecutive files are used for Unit Record, and
     1566       21                 Symbiot files too.
     1567       22        */
     1568       23                 %EJECT;
PL6.E3A0      #004=FMH$INIT File=FMH$CONSEC.:E05TSI                              TUE 07/29/97 16:49 Page:270  
     1569       24        FMH$INIT: PROC;
     1570       25               %INCLUDE CP_6_SUBS;
     1571      565               %INCLUDE B$JIT;
     1572     1168               %INCLUDE FM$MACROS;
     1573     1543               %MACRO F$DCB(BASED=BASED);
     1574     1544               %INCLUDE F$DCB;
     1575     1593               %MEND;
     1576     1594               %INCLUDE F_FMTCODE_C;
     1577     1628               %INCLUDE F_ERRORS_C;
     1578     1868        /* */
     1579     1869               %F$DCB(BASED="BASED(JDCB$)");
     1580     1919               %FM$CFU(BASED="BASED(CFU$)");
     1581     1925               %FM$GRAN(BASED="BASED(BUF$)",ENDLVL=NOTLDA);
     1582     1929               %FM$CON(BASED="BASED(SEG$)");
     1583     1933        /* */
     1584     1934    1          DCL FM_FRZERO UBIN SYMREF READONLY;
     1585     1935    1          DCL B$JIT$ PTR SYMREF READONLY;
     1586     1936        /* */
     1587     1937    1          DCL FMD$REDBUF ENTRY(6) ALTRET;
     1588     1938    1          DCL FMB$LOGERR ENTRY(11);
     1589     1939    1          DCL FMD$FLSHBUF ENTRY(1);
     1590     1940        /* */
     1591     1941    1          DCL JDCB$ PTR;
     1592     1942    1          DCL BUF$ PTR;
     1593     1943    1          DCL SEG$ PTR;
     1594     1944    1          DCL SEGX SBIN;
     1595     1945    1          DCL NAVX SBIN;
     1596     1946    1          DCL DA UBIN;
     1597     1947    1          DCL N SBIN;
     1598     1948    1          DCL NRECS SBIN;
     1599     1949    1          DCL CFU$ PTR;
     1600     1950    1          DCL UGRANS SBIN;
     1601     1951        /* */
     1602     1952    1          JDCB$=B$JIT.DCB$;
     1603     1953    1          CFU$=F$DCB.CFU$;
     1604     1954
     1605     1955    1          IF F$DCB.BFR.DA(1) ~= FM_FRZERO THEN
PL6.E3A0      #004=FMH$INIT File=FMH$CONSEC.:E05TSI                              TUE 07/29/97 16:49 Page:271  
     1606     1956    2             DO;   /* FLUSH IT */
     1607     1957    2             CALL FMD$FLSHBUF(1);
     1608     1958    2             F$DCB.BFR.DA(1)=FM_FRZERO;
     1609     1959    2             END;  /* FLUSH IT */
     1610     1960
     1611     1961    1          F$DCB.GTYP=FMGTFILE;
     1612     1962    1          F$DCB.CRECX=1024;
     1613     1963    1          F$DCB.RPOS='0'B;
     1614     1964    1          F$DCB.EOP=0;
     1615     1965    1          F$DCB.CRECNO=0;
     1616     1966    1          F$DCB.LVL=0;
     1617     1967
     1618     1968    1          IF F$DCB.RA THEN
     1619     1969    1             CALL CHECK;
     1620     1970
     1621     1971    1          IF F$DCB.ACS = %UBLOCK# THEN
     1622     1972    2             DO;   /* UBLOCK */
     1623     1973    2             F$DCB.IFMT=FMTCONUBLK#;
     1624     1974    2             RETURN;
     1625     1975    2             END;  /* UBLOCK */
     1626     1976
     1627     1977    1          IF F$DCB.ACS = %BLOCK# THEN
     1628     1978    1             RETURN;
     1629     1979
     1630     1980    1          IF F$DCB.FUN ~= %IN# THEN
     1631     1981    2             DO CASE(F$DCB.ORG);
     1632     1982    2                CASE(%UR#);
     1633     1983    2                   F$DCB.IFMT=FMTURFILE#;
     1634     1984    2                   F$DCB.FEXT='1'B;
     1635     1985
     1636     1986    2                CASE(%SYMB#);
     1637     1987    2                   IF F$DCB.FPRGX ~= 0
     1638     1988    3                   THEN DO;
     1639     1989    3                     IF (F$DCB.IASN = %STREAM#)
     1640     1990    3                        THEN F$DCB.IFMT = FMTGRSTRM#;
     1641     1991    3                        ELSE F$DCB.IFMT = FMTGR#;
     1642     1992    3                     END;
PL6.E3A0      #004=FMH$INIT File=FMH$CONSEC.:E05TSI                              TUE 07/29/97 16:49 Page:272  
     1643     1993    2                   F$DCB.MEDIA=FMTSYMB#;
     1644     1994    2                   F$DCB.FEXT='1'B;
     1645     1995    2             END;  /* CASE */
     1646     1996
     1647     1997    1          RETURN;
     1648     1998               %EJECT;
PL6.E3A0      #004=FMH$INIT File=FMH$CONSEC.:E05TSI                              TUE 07/29/97 16:49 Page:273  
     1649     1999        /*I*     NAME:     CHECK
     1650     2000                 PURPOSE:  To check a file that was left open
     1651     2001                 DESCRIPTION:
     1652     2002                      Start by reading in the first granule of the file.
     1653     2003                 Count all of the records in this granule, then move on
     1654     2004                 to the next granule.  If we run into an error reading,
     1655     2005                 then if this is the LDA, we are probably done.  If this
     1656     2006                 isn't the LDA, then there is probably something wrong
     1657     2007                 with the file.
     1658     2008
     1659     2009                      Recalculate UGRANS.  If it looks okay, then set the
     1660     2010                 new values in the CFU, and log an error.  Reset buffer 1
     1661     2011                 to point to the beginning of the file.
     1662     2012        */
     1663     2013    1   CHECK: PROC;
     1664     2014        /* */
     1665     2015    2          F$DCB.RA='0'B;
     1666     2016    2          NRECS=0;
     1667     2017    2          DA=FM_FRZERO;
     1668     2018    2          CALL FMD$FLSHBUF(1);
     1669     2019
     1670     2020    3   LOOP:  DO UNTIL(NOT FM$GRAN.NOTLDA);
     1671     2021    3   TOP:      CALL FMD$REDBUF(BUF$, 1, DA, 0, 0) ALTRET(DATA_ERROR);
     1672     2022
     1673     2023    3             NAVX=FM$GRAN.NAVX+FM$GRAN.AVAIL;
     1674     2024    3             SEG$=PINCRW(BUF$, 1023);
     1675     2025    3             SEGX=1023;
     1676     2026    4             DO WHILE(SEGX >= NAVX);
     1677     2027    4                IF FM$CON.FAK = 1 THEN
     1678     2028    4                   NRECS=NRECS+1;
     1679     2029    4                SEGX=SEGX-1;
     1680     2030    4                SEG$=PINCRW(BUF$, SEGX);
     1681     2031    4             END;
     1682     2032
     1683     2033    3             DA=DA+1;
     1684     2034
     1685     2035    4             DO WHILE('0'B);
PL6.E3A0      #004=FMH$INIT File=FMH$CONSEC.:E05TSI                              TUE 07/29/97 16:49 Page:274  
     1686     2036    4   DATA_ERROR:  IF DA < FM$CFU.LDA THEN
     1687     2037    5                   DO;   /* FIND REAL END */
     1688     2038    5                   F$DCB.DESC.BAD='1'B;
     1689     2039    5                   NRECS=-10000000;
     1690     2040    5                   FM$CFU.B=1;
     1691     2041    5                   DA=FM$CFU.LDA;
     1692     2042    5                   GOTO TOP;
     1693     2043    5                   END;  /* FIND REAL END */
     1694     2044    4                ELSE
     1695     2045    4                   EXIT LOOP;
     1696     2046    4             END;
     1697     2047    3          END;
     1698     2048
     1699     2049    2          FM$CFU.LDA=DA-1;
     1700     2050    2          UGRANS=FM$CFU.LDA-FM_FRZERO+1;
     1701     2051    2          IF UGRANS > 0 AND UGRANS <= FM$CFU.UGRANS+FM$CFU.NGAVAL THEN
     1702     2052    3             DO;   /* UGRANS OKAY */
     1703     2053    3             CALL FMB$LOGERR(%E$FREC, 70, 0, 0, CFU$, 4, 5, 7, UGRANS);
     1704     2054    3             N=FM$CFU.UGRANS+FM_FRZERO-FM$CFU.LDA-1;
     1705     2055    3             FM$CFU.UGRANS=FM$CFU.UGRANS-N;
     1706     2056    3             FM$CFU.NGAVAL=FM$CFU.NGAVAL+N;
     1707     2057    3             END;  /* UGRANS OKAY */
     1708     2058    2          ELSE
     1709     2059    2             CALL FMB$LOGERR(%E$FREC, 71, 0, 0, CFU$, 4, 5, 7, UGRANS);
     1710     2060
     1711     2061    2          IF NRECS >= 0 THEN
     1712     2062    2             FM$CFU.NRECS=NRECS;
     1713     2063    2          FM$CFU.FMOD='1'B;
     1714     2064    2          B$JIT.ERR='0'B;
     1715     2065    2          F$DCB.TYC='0'B;
     1716     2066    2          CALL FMD$FLSHBUF(1);
     1717     2067    2          F$DCB.BFR.DA(1)=FM_FRZERO;
     1718     2068
     1719     2069    2          CALL FMB$LOGERR(%E$FREC, 72, 0, 0, CFU$, 4, 5, 7, 0);
     1720     2070    2          RETURN;
     1721     2071    2          END CHECK;
     1722     2072    1          END FMH$INIT;
PL6.E3A0      #004=FMH$INIT File=FMH$CONSEC.:E05TSI                              TUE 07/29/97 16:49 Page:275  

PL6.E3A0      #004=FMH$INIT File=FMH$CONSEC.:E05TSI                              TUE 07/29/97 16:49 Page:276  
--  Include file information  --

   F_ERRORS_C.:E05TOU  is referenced.
   F_FMTCODE_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  is referenced.
   FM$MACROS.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
      No diagnostics issued in procedure FMH$INIT.

   Procedure FMH$INIT requires 292 words for executable code.
   Procedure FMH$INIT requires 26 words of local(AUTO) storage.

    No errors detected in file FMH$CONSEC.:E05TSI    .

PL6.E3A0      #004=FMH$INIT File=FMH$CONSEC.:E05TSI                              TUE 07/29/97 16:49 Page:277  

 Object Unit name= FMH$INIT                                   File name= FMH$CONSEC.:E05TOU
 UTS= JUL 29 '97 16:49:40.72 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   292    444  FMH$INIT
    1  RoData even  none    24     30  FMH$INIT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        0  FMH$INIT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 FMD$FLSHBUF
 yes     yes           Std       6 FMD$REDBUF
         yes           Std      11 FMB$LOGERR
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    FM_FRZERO                        r    B$JIT$                                B_VECTNIL
PL6.E3A0      #004=FMH$INIT File=FMH$CONSEC.:E05TSI                              TUE 07/29/97 16:49 Page:278  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #004=FMH$INIT File=FMH$CONSEC.:E05TSI                              TUE 07/29/97 16:49 Page:279  


     1546        1        /*T***********************************************************/
     1547        2        /*T*                                                         */
     1548        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1549        4        /*T*                                                         */
     1550        5        /*T***********************************************************/
     1551        6        /*F*   NAME:   FMH$INIT
     1552        7        *      PURPOSE:  Provide DCB initialization for consecutive files
     1553        8        *                at M$OPEN time.                                             */
     1554        9        /*D*     NAME:     FMH$INIT
     1555       10                 CALL:     CALL FMH$INIT
     1556       11                 DESCRIPTION:
     1557       12                      Set up the DCB to point to the first record of the file.
     1558       13
     1559       14                      If the file was left open (probably because we didn't
     1560       15                 go through recovery), then check the file for
     1561       16                 inconsistancies.  If the file was open UBLOCK, then fast
     1562       17                 sequential files will take care of the formating.  If it
     1563       18                 is open BLOCK, then just return.
     1564       19
     1565       20                      Consecutive files are used for Unit Record, and
     1566       21                 Symbiot files too.
     1567       22        */
     1568       23                 %EJECT;
PL6.E3A0      #004=FMH$INIT File=FMH$CONSEC.:E05TSI                              TUE 07/29/97 16:49 Page:280  
     1569       24        FMH$INIT: PROC;

     24  0 000000   000000 700200 xent  FMH$INIT     TSX0  ! X66_AUTO_0
         0 000001   000032 000000                    ZERO    26,0

     1570       25               %INCLUDE CP_6_SUBS;
     1571      565               %INCLUDE B$JIT;
     1572     1168               %INCLUDE FM$MACROS;
     1573     1543               %MACRO F$DCB(BASED=BASED);
     1574     1544               %INCLUDE F$DCB;
     1575     1593               %MEND;
     1576     1594               %INCLUDE F_FMTCODE_C;
     1577     1628               %INCLUDE F_ERRORS_C;
     1578     1868        /* */
     1579     1869               %F$DCB(BASED="BASED(JDCB$)");
     1580     1919               %FM$CFU(BASED="BASED(CFU$)");
     1581     1925               %FM$GRAN(BASED="BASED(BUF$)",ENDLVL=NOTLDA);
     1582     1929               %FM$CON(BASED="BASED(SEG$)");
     1583     1933        /* */
     1584     1934    1          DCL FM_FRZERO UBIN SYMREF READONLY;
     1585     1935    1          DCL B$JIT$ PTR SYMREF READONLY;
     1586     1936        /* */
     1587     1937    1          DCL FMD$REDBUF ENTRY(6) ALTRET;
     1588     1938    1          DCL FMB$LOGERR ENTRY(11);
     1589     1939    1          DCL FMD$FLSHBUF ENTRY(1);
     1590     1940        /* */
     1591     1941    1          DCL JDCB$ PTR;
     1592     1942    1          DCL BUF$ PTR;
     1593     1943    1          DCL SEG$ PTR;
     1594     1944    1          DCL SEGX SBIN;
     1595     1945    1          DCL NAVX SBIN;
     1596     1946    1          DCL DA UBIN;
     1597     1947    1          DCL N SBIN;
     1598     1948    1          DCL NRECS SBIN;
     1599     1949    1          DCL CFU$ PTR;
     1600     1950    1          DCL UGRANS SBIN;
     1601     1951        /* */
PL6.E3A0      #004=FMH$INIT File=FMH$CONSEC.:E05TSI                              TUE 07/29/97 16:49 Page:281  
     1602     1952    1          JDCB$=B$JIT.DCB$;

   1952  0 000002   000000 470400 xsym               LDP0    B$JIT$
         0 000003   000232 236100                    LDQ     154,,PR0
         0 000004   200003 756100                    STQ     JDCB$,,AUTO

     1603     1953    1          CFU$=F$DCB.CFU$;

   1953  0 000005   200003 471500                    LDP1    JDCB$,,AUTO
         0 000006   100066 236100                    LDQ     54,,PR1
         0 000007   200013 756100                    STQ     CFU$,,AUTO

     1604     1954
     1605     1955    1          IF F$DCB.BFR.DA(1) ~= FM_FRZERO THEN

   1955  0 000010   100116 236100                    LDQ     78,,PR1
         0 000011   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000012   000000 116000 xsym               CMPQ    FM_FRZERO
         0 000013   000023 600000 0                  TZE     s:1961

     1606     1956    2             DO;   /* FLUSH IT */

     1607     1957    2             CALL FMD$FLSHBUF(1);

   1957  0 000014   000000 630400 1                  EPPR0   0
         0 000015   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000016   000000 701000 xent               TSX1    FMD$FLSHBUF
         0 000017   000000 011000                    NOP     0

     1608     1958    2             F$DCB.BFR.DA(1)=FM_FRZERO;

   1958  0 000020   200003 470500                    LDP0    JDCB$,,AUTO
         0 000021   000000 236000 xsym               LDQ     FM_FRZERO
         0 000022   000116 552134                    STBQ    78,'34'O,PR0

     1609     1959    2             END;  /* FLUSH IT */

PL6.E3A0      #004=FMH$INIT File=FMH$CONSEC.:E05TSI                              TUE 07/29/97 16:49 Page:282  
     1610     1960
     1611     1961    1          F$DCB.GTYP=FMGTFILE;

   1961  0 000023   200003 470500                    LDP0    JDCB$,,AUTO
         0 000024   000064 236100                    LDQ     52,,PR0
         0 000025   000001 376000 1                  ANQ     1
         0 000026   030000 276003                    ORQ     12288,DU
         0 000027   000064 756100                    STQ     52,,PR0

     1612     1962    1          F$DCB.CRECX=1024;

   1962  0 000030   002000 220003                    LDX0    1024,DU
         0 000031   000067 440100                    SXL0    55,,PR0

     1613     1963    1          F$DCB.RPOS='0'B;

   1963  0 000032   000002 236000 1                  LDQ     2
         0 000033   000064 356100                    ANSQ    52,,PR0

     1614     1964    1          F$DCB.EOP=0;

   1964  0 000034   000003 236000 1                  LDQ     3
         0 000035   000064 356100                    ANSQ    52,,PR0

     1615     1965    1          F$DCB.CRECNO=0;

   1965  0 000036   000071 450100                    STZ     57,,PR0

     1616     1966    1          F$DCB.LVL=0;

   1966  0 000037   000004 236000 1                  LDQ     4
         0 000040   000067 356100                    ANSQ    55,,PR0

     1617     1967
     1618     1968    1          IF F$DCB.RA THEN

   1968  0 000041   000064 236100                    LDQ     52,,PR0
PL6.E3A0      #004=FMH$INIT File=FMH$CONSEC.:E05TSI                              TUE 07/29/97 16:49 Page:283  
         0 000042   020000 316007                    CANQ    8192,DL
         0 000043   000046 600000 0                  TZE     s:1971

     1619     1969    1             CALL CHECK;

   1969  0 000044   000126 701000 0                  TSX1    CHECK
         0 000045   000000 011000                    NOP     0

     1620     1970
     1621     1971    1          IF F$DCB.ACS = %UBLOCK# THEN

   1971  0 000046   200003 470500                    LDP0    JDCB$,,AUTO
         0 000047   000036 236100                    LDQ     30,,PR0
         0 000050   000777 376007                    ANQ     511,DL
         0 000051   000014 116007                    CMPQ    12,DL
         0 000052   000056 601000 0                  TNZ     s:1977

     1622     1972    2             DO;   /* UBLOCK */

     1623     1973    2             F$DCB.IFMT=FMTCONUBLK#;

   1973  0 000053   025000 236003                    LDQ     10752,DU
         0 000054   000103 552140                    STBQ    67,'40'O,PR0

     1624     1974    2             RETURN;

   1974  0 000055   000000 702200 xent               TSX2  ! X66_ARET

     1625     1975    2             END;  /* UBLOCK */
     1626     1976
     1627     1977    1          IF F$DCB.ACS = %BLOCK# THEN

   1977  0 000056   000003 116007                    CMPQ    3,DL
         0 000057   000061 601000 0                  TNZ     s:1980

     1628     1978    1             RETURN;

PL6.E3A0      #004=FMH$INIT File=FMH$CONSEC.:E05TSI                              TUE 07/29/97 16:49 Page:284  
   1978  0 000060   000000 702200 xent               TSX2  ! X66_ARET

     1629     1979
     1630     1980    1          IF F$DCB.FUN ~= %IN# THEN

   1980  0 000061   000032 236100                    LDQ     26,,PR0
         0 000062   000777 376003                    ANQ     511,DU
         0 000063   000002 116003                    CMPQ    2,DU
         0 000064   000125 600000 0                  TZE     s:1997

     1631     1981    2             DO CASE(F$DCB.ORG);

   1981  0 000065   000032 236100                    LDQ     26,,PR0
         0 000066   000033 772000                    QRL     27
         0 000067   000004 136007                    SBLQ    4,DL
         0 000070   000006 116007                    CMPQ    6,DL
         0 000071   000073 602006 0                  TNC     s:1981+6,QL
         0 000072   000125 710000 0                  TRA     s:1997
         0 000073   000101 710000 0                  TRA     s:1983
         0 000074   000125 710000 0                  TRA     s:1997
         0 000075   000125 710000 0                  TRA     s:1997
         0 000076   000125 710000 0                  TRA     s:1997
         0 000077   000125 710000 0                  TRA     s:1997
         0 000100   000106 710000 0                  TRA     s:1987

     1632     1982    2                CASE(%UR#);

     1633     1983    2                   F$DCB.IFMT=FMTURFILE#;

   1983  0 000101   013000 236003                    LDQ     5632,DU
         0 000102   000103 552140                    STBQ    67,'40'O,PR0

     1634     1984    2                   F$DCB.FEXT='1'B;

   1984  0 000103   400000 236003                    LDQ     -131072,DU
         0 000104   000064 256100                    ORSQ    52,,PR0
         0 000105   000125 710000 0                  TRA     s:1997
PL6.E3A0      #004=FMH$INIT File=FMH$CONSEC.:E05TSI                              TUE 07/29/97 16:49 Page:285  

     1635     1985
     1636     1986    2                CASE(%SYMB#);

     1637     1987    2                   IF F$DCB.FPRGX ~= 0

   1987  0 000106   000054 220100                    LDX0    44,,PR0
         0 000107   000121 600000 0                  TZE     s:1993

     1638     1988    3                   THEN DO;

     1639     1989    3                     IF (F$DCB.IASN = %STREAM#)

   1989  0 000110   000103 236100                    LDQ     67,,PR0
         0 000111   000777 376007                    ANQ     511,DL
         0 000112   000005 116007                    CMPQ    5,DL
         0 000113   000117 601000 0                  TNZ     s:1991

     1640     1990    3                        THEN F$DCB.IFMT = FMTGRSTRM#;

   1990  0 000114   030000 236003                    LDQ     12288,DU
         0 000115   000103 552140                    STBQ    67,'40'O,PR0
         0 000116   000121 710000 0                  TRA     s:1993

     1641     1991    3                        ELSE F$DCB.IFMT = FMTGR#;

   1991  0 000117   027000 236003                    LDQ     11776,DU
         0 000120   000103 552140                    STBQ    67,'40'O,PR0

     1642     1992    3                     END;

     1643     1993    2                   F$DCB.MEDIA=FMTSYMB#;

   1993  0 000121   000022 236003                    LDQ     18,DU
         0 000122   000103 552120                    STBQ    67,'20'O,PR0

     1644     1994    2                   F$DCB.FEXT='1'B;
PL6.E3A0      #004=FMH$INIT File=FMH$CONSEC.:E05TSI                              TUE 07/29/97 16:49 Page:286  

   1994  0 000123   400000 236003                    LDQ     -131072,DU
         0 000124   000064 256100                    ORSQ    52,,PR0

     1645     1995    2             END;  /* CASE */

     1646     1996
     1647     1997    1          RETURN;

   1997  0 000125   000000 702200 xent               TSX2  ! X66_ARET

     1648     1998               %EJECT;
PL6.E3A0      #004=FMH$INIT File=FMH$CONSEC.:E05TSI                              TUE 07/29/97 16:49 Page:287  
     1649     1999        /*I*     NAME:     CHECK
     1650     2000                 PURPOSE:  To check a file that was left open
     1651     2001                 DESCRIPTION:
     1652     2002                      Start by reading in the first granule of the file.
     1653     2003                 Count all of the records in this granule, then move on
     1654     2004                 to the next granule.  If we run into an error reading,
     1655     2005                 then if this is the LDA, we are probably done.  If this
     1656     2006                 isn't the LDA, then there is probably something wrong
     1657     2007                 with the file.
     1658     2008
     1659     2009                      Recalculate UGRANS.  If it looks okay, then set the
     1660     2010                 new values in the CFU, and log an error.  Reset buffer 1
     1661     2011                 to point to the beginning of the file.
     1662     2012        */
     1663     2013    1   CHECK: PROC;

   2013  0 000126   200016 741300       CHECK        STX1  ! UGRANS+2,,AUTO

     1664     2014        /* */
     1665     2015    2          F$DCB.RA='0'B;

   2015  0 000127   200003 470500                    LDP0    JDCB$,,AUTO
         0 000130   000005 236000 1                  LDQ     5
         0 000131   000064 356100                    ANSQ    52,,PR0

     1666     2016    2          NRECS=0;

   2016  0 000132   200012 450100                    STZ     NRECS,,AUTO

     1667     2017    2          DA=FM_FRZERO;

   2017  0 000133   000000 235000 xsym               LDA     FM_FRZERO
         0 000134   200010 755100                    STA     DA,,AUTO

     1668     2018    2          CALL FMD$FLSHBUF(1);

   2018  0 000135   000000 630400 1                  EPPR0   0
PL6.E3A0      #004=FMH$INIT File=FMH$CONSEC.:E05TSI                              TUE 07/29/97 16:49 Page:288  
         0 000136   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000137   000000 701000 xent               TSX1    FMD$FLSHBUF
         0 000140   000000 011000                    NOP     0

     1669     2019
     1670     2020    3   LOOP:  DO UNTIL(NOT FM$GRAN.NOTLDA);

   2020  0 000141                       LOOP         null
     1671     2021    3   TOP:      CALL FMD$REDBUF(BUF$, 1, DA, 0, 0) ALTRET(DATA_ERROR);

   2021  0 000141   000006 236000 1     TOP          LDQ     6
         0 000142   200024 756100                    STQ     UGRANS+8,,AUTO
         0 000143   200023 756100                    STQ     UGRANS+7,,AUTO
         0 000144   200010 630500                    EPPR0   DA,,AUTO
         0 000145   200022 450500                    STP0    UGRANS+6,,AUTO
         0 000146   000000 236000 1                  LDQ     0
         0 000147   200021 756100                    STQ     UGRANS+5,,AUTO
         0 000150   200004 631500                    EPPR1   BUF$,,AUTO
         0 000151   200020 451500                    STP1    UGRANS+4,,AUTO
         0 000152   200020 630500                    EPPR0   UGRANS+4,,AUTO
         0 000153   000023 631400 xsym               EPPR1   B_VECTNIL+19
         0 000154   000000 701000 xent               TSX1    FMD$REDBUF
         0 000155   000223 702000 0                  TSX2    DATA_ERROR

     1672     2022
     1673     2023    3             NAVX=FM$GRAN.NAVX+FM$GRAN.AVAIL;

   2023  0 000156   200004 470500                    LDP0    BUF$,,AUTO
         0 000157   000001 236100                    LDQ     1,,PR0
         0 000160   001777 376007                    ANQ     1023,DL
         0 000161   200020 756100                    STQ     UGRANS+4,,AUTO
         0 000162   000001 236100                    LDQ     1,,PR0
         0 000163   000022 772000                    QRL     18
         0 000164   200020 036100                    ADLQ    UGRANS+4,,AUTO
         0 000165   200007 756100                    STQ     NAVX,,AUTO

     1674     2024    3             SEG$=PINCRW(BUF$, 1023);
PL6.E3A0      #004=FMH$INIT File=FMH$CONSEC.:E05TSI                              TUE 07/29/97 16:49 Page:289  

   2024  0 000166   200004 236100                    LDQ     BUF$,,AUTO
         0 000167   001777 036003                    ADLQ    1023,DU
         0 000170   200005 756100                    STQ     SEG$,,AUTO

     1675     2025    3             SEGX=1023;

   2025  0 000171   001777 235007                    LDA     1023,DL
         0 000172   200006 755100                    STA     SEGX,,AUTO

     1676     2026    4             DO WHILE(SEGX >= NAVX);

   2026  0 000173   200006 236100                    LDQ     SEGX,,AUTO
         0 000174   200007 116100                    CMPQ    NAVX,,AUTO
         0 000175   000217 604000 0                  TMI     s:2033

     1677     2027    4                IF FM$CON.FAK = 1 THEN

   2027  0 000176   200005 470500                    LDP0    SEG$,,AUTO
         0 000177   000000 236100                    LDQ     0,,PR0
         0 000200   400000 376003                    ANQ     -131072,DU
         0 000201   000027 676000 xsym               ERQ     B_VECTNIL+23
         0 000202   000001 036007                    ADLQ    1,DL
         0 000203   400000 116003                    CMPQ    -131072,DU
         0 000204   000206 601000 0                  TNZ     s:2029

     1678     2028    4                   NRECS=NRECS+1;

   2028  0 000205   200012 054100                    AOS     NRECS,,AUTO

     1679     2029    4                SEGX=SEGX-1;

   2029  0 000206   000001 336007                    LCQ     1,DL
         0 000207   200006 056100                    ASQ     SEGX,,AUTO

     1680     2030    4                SEG$=PINCRW(BUF$, SEGX);

PL6.E3A0      #004=FMH$INIT File=FMH$CONSEC.:E05TSI                              TUE 07/29/97 16:49 Page:290  
   2030  0 000210   200006 236100                    LDQ     SEGX,,AUTO
         0 000211   000022 736000                    QLS     18
         0 000212   200004 036100                    ADLQ    BUF$,,AUTO
         0 000213   200005 756100                    STQ     SEG$,,AUTO

     1681     2031    4             END;

   2031  0 000214   200006 236100                    LDQ     SEGX,,AUTO
         0 000215   200007 116100                    CMPQ    NAVX,,AUTO
         0 000216   000176 605000 0                  TPL     s:2027

     1682     2032
     1683     2033    3             DA=DA+1;

   2033  0 000217   200010 235100                    LDA     DA,,AUTO
         0 000220   000001 035007                    ADLA    1,DL
         0 000221   200010 755100                    STA     DA,,AUTO

     1684     2034
     1685     2035    4             DO WHILE('0'B);

   2035  0 000222   000252 710000 0                  TRA     s:2047

     1686     2036    4   DATA_ERROR:  IF DA < FM$CFU.LDA THEN

   2036  0 000223   200013 470500       DATA_ERROR   LDP0    CFU$,,AUTO
         0 000224   000006 235100                    LDA     6,,PR0
         0 000225   000007 236100                    LDQ     7,,PR0
         0 000226   000033 773000                    LRL     27
         0 000227   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000230   200010 116100                    CMPQ    DA,,AUTO
         0 000231   000256 602000 0                  TNC     s:2049
         0 000232   000256 600000 0                  TZE     s:2049

     1687     2037    5                   DO;   /* FIND REAL END */

     1688     2038    5                   F$DCB.DESC.BAD='1'B;
PL6.E3A0      #004=FMH$INIT File=FMH$CONSEC.:E05TSI                              TUE 07/29/97 16:49 Page:291  

   2038  0 000233   200003 471500                    LDP1    JDCB$,,AUTO
         0 000234   020000 236007                    LDQ     8192,DL
         0 000235   100005 256100                    ORSQ    5,,PR1

     1689     2039    5                   NRECS=-10000000;

   2039  0 000236   000007 235000 1                  LDA     7
         0 000237   200012 755100                    STA     NRECS,,AUTO

     1690     2040    5                   FM$CFU.B=1;

   2040  0 000240   200013 470500                    LDP0    CFU$,,AUTO
         0 000241   000002 236003                    LDQ     2,DU
         0 000242   000006 256100                    ORSQ    6,,PR0

     1691     2041    5                   DA=FM$CFU.LDA;

   2041  0 000243   200013 470500                    LDP0    CFU$,,AUTO
         0 000244   000006 235100                    LDA     6,,PR0
         0 000245   000007 236100                    LDQ     7,,PR0
         0 000246   000033 773000                    LRL     27
         0 000247   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000250   200010 756100                    STQ     DA,,AUTO

     1692     2042    5                   GOTO TOP;

   2042  0 000251   000141 710000 0                  TRA     LOOP

     1693     2043    5                   END;  /* FIND REAL END */
     1694     2044    4                ELSE
     1695     2045    4                   EXIT LOOP;
     1696     2046    4             END;

     1697     2047    3          END;

   2047  0 000252   200004 470500                    LDP0    BUF$,,AUTO
PL6.E3A0      #004=FMH$INIT File=FMH$CONSEC.:E05TSI                              TUE 07/29/97 16:49 Page:292  
         0 000253   000002 236100                    LDQ     2,,PR0
         0 000254   400000 316007                    CANQ    -131072,DL
         0 000255   000141 601000 0                  TNZ     LOOP

     1698     2048
     1699     2049    2          FM$CFU.LDA=DA-1;

   2049  0 000256   200013 470500                    LDP0    CFU$,,AUTO
         0 000257   200010 236100                    LDQ     DA,,AUTO
         0 000260   000001 136007                    SBLQ    1,DL
         0 000261   200020 756100                    STQ     UGRANS+4,,AUTO
         0 000262   000100 101500                    MRL     fill='000'O
         0 000263   200020 000004                    ADSC9   UGRANS+4,,AUTO           cn=0,n=4
         0 000264   000006 400003                    ADSC9   6,,PR0                   cn=2,n=3

     1700     2050    2          UGRANS=FM$CFU.LDA-FM_FRZERO+1;

   2050  0 000265   200013 470500                    LDP0    CFU$,,AUTO
         0 000266   000006 235100                    LDA     6,,PR0
         0 000267   000007 236100                    LDQ     7,,PR0
         0 000270   000033 773000                    LRL     27
         0 000271   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000272   000000 136000 xsym               SBLQ    FM_FRZERO
         0 000273   000001 036007                    ADLQ    1,DL
         0 000274   200014 756100                    STQ     UGRANS,,AUTO

     1701     2051    2          IF UGRANS > 0 AND UGRANS <= FM$CFU.UGRANS+FM$CFU.NGAVAL THEN

   2051  0 000275   000357 604400 0                  TMOZ    s:2059
         0 000276   000007 236100                    LDQ     7,,PR0
         0 000277   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000300   200020 756100                    STQ     UGRANS+4,,AUTO
         0 000301   000004 236100                    LDQ     4,,PR0
         0 000302   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000303   200020 036100                    ADLQ    UGRANS+4,,AUTO
         0 000304   000307 604000 0                  TMI     s:2053
         0 000305   200014 116100                    CMPQ    UGRANS,,AUTO
PL6.E3A0      #004=FMH$INIT File=FMH$CONSEC.:E05TSI                              TUE 07/29/97 16:49 Page:293  
         0 000306   000357 604000 0                  TMI     s:2059

     1702     2052    3             DO;   /* UGRANS OKAY */

     1703     2053    3             CALL FMB$LOGERR(%E$FREC, 70, 0, 0, CFU$, 4, 5, 7, UGRANS);

   2053  0 000307   200014 631500                    EPPR1   UGRANS,,AUTO
         0 000310   200030 451500                    STP1    UGRANS+12,,AUTO
         0 000311   000014 237000 1                  LDAQ    12
         0 000312   200026 757100                    STAQ    UGRANS+10,,AUTO
         0 000313   000013 236000 1                  LDQ     11
         0 000314   200025 756100                    STQ     UGRANS+9,,AUTO
         0 000315   200013 633500                    EPPR3   CFU$,,AUTO
         0 000316   200024 453500                    STP3    UGRANS+8,,AUTO
         0 000317   000016 237000 1                  LDAQ    14
         0 000320   200022 757100                    STAQ    UGRANS+6,,AUTO
         0 000321   000020 237000 1                  LDAQ    16
         0 000322   200020 757100                    STAQ    UGRANS+4,,AUTO
         0 000323   200020 630500                    EPPR0   UGRANS+4,,AUTO
         0 000324   000010 631400 1                  EPPR1   8
         0 000325   000000 701000 xent               TSX1    FMB$LOGERR
         0 000326   000000 011000                    NOP     0

     1704     2054    3             N=FM$CFU.UGRANS+FM_FRZERO-FM$CFU.LDA-1;

   2054  0 000327   200013 470500                    LDP0    CFU$,,AUTO
         0 000330   000004 236100                    LDQ     4,,PR0
         0 000331   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000332   000000 036000 xsym               ADLQ    FM_FRZERO
         0 000333   000006 235100                    LDA     6,,PR0
         0 000334   200020 756100                    STQ     UGRANS+4,,AUTO
         0 000335   000007 236100                    LDQ     7,,PR0
         0 000336   000033 773000                    LRL     27
         0 000337   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000340   200021 756100                    STQ     UGRANS+5,,AUTO
         0 000341   200020 236100                    LDQ     UGRANS+4,,AUTO
         0 000342   200021 136100                    SBLQ    UGRANS+5,,AUTO
PL6.E3A0      #004=FMH$INIT File=FMH$CONSEC.:E05TSI                              TUE 07/29/97 16:49 Page:294  
         0 000343   000001 136007                    SBLQ    1,DL
         0 000344   200011 756100                    STQ     N,,AUTO

     1705     2055    3             FM$CFU.UGRANS=FM$CFU.UGRANS-N;

   2055  0 000345   000004 236100                    LDQ     4,,PR0
         0 000346   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000347   200011 136100                    SBLQ    N,,AUTO
         0 000350   000004 552134                    STBQ    4,'34'O,PR0

     1706     2056    3             FM$CFU.NGAVAL=FM$CFU.NGAVAL+N;

   2056  0 000351   200013 470500                    LDP0    CFU$,,AUTO
         0 000352   000007 236100                    LDQ     7,,PR0
         0 000353   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000354   200011 036100                    ADLQ    N,,AUTO
         0 000355   000007 552134                    STBQ    7,'34'O,PR0

     1707     2057    3             END;  /* UGRANS OKAY */

   2057  0 000356   000377 710000 0                  TRA     s:2061

     1708     2058    2          ELSE
     1709     2059    2             CALL FMB$LOGERR(%E$FREC, 71, 0, 0, CFU$, 4, 5, 7, UGRANS);

   2059  0 000357   200014 631500                    EPPR1   UGRANS,,AUTO
         0 000360   200030 451500                    STP1    UGRANS+12,,AUTO
         0 000361   000014 237000 1                  LDAQ    12
         0 000362   200026 757100                    STAQ    UGRANS+10,,AUTO
         0 000363   000013 236000 1                  LDQ     11
         0 000364   200025 756100                    STQ     UGRANS+9,,AUTO
         0 000365   200013 633500                    EPPR3   CFU$,,AUTO
         0 000366   200024 453500                    STP3    UGRANS+8,,AUTO
         0 000367   000016 237000 1                  LDAQ    14
         0 000370   200022 757100                    STAQ    UGRANS+6,,AUTO
         0 000371   000024 237000 1                  LDAQ    20
         0 000372   200020 757100                    STAQ    UGRANS+4,,AUTO
PL6.E3A0      #004=FMH$INIT File=FMH$CONSEC.:E05TSI                              TUE 07/29/97 16:49 Page:295  
         0 000373   200020 630500                    EPPR0   UGRANS+4,,AUTO
         0 000374   000010 631400 1                  EPPR1   8
         0 000375   000000 701000 xent               TSX1    FMB$LOGERR
         0 000376   000000 011000                    NOP     0

     1710     2060
     1711     2061    2          IF NRECS >= 0 THEN

   2061  0 000377   200012 235100                    LDA     NRECS,,AUTO
         0 000400   000403 604000 0                  TMI     s:2063

     1712     2062    2             FM$CFU.NRECS=NRECS;

   2062  0 000401   200013 470500                    LDP0    CFU$,,AUTO
         0 000402   000001 755100                    STA     1,,PR0

     1713     2063    2          FM$CFU.FMOD='1'B;

   2063  0 000403   200013 470500                    LDP0    CFU$,,AUTO
         0 000404   004000 236003                    LDQ     2048,DU
         0 000405   000000 256100                    ORSQ    0,,PR0

     1714     2064    2          B$JIT.ERR='0'B;

   2064  0 000406   000000 470400 xsym               LDP0    B$JIT$
         0 000407   000012 450100                    STZ     10,,PR0

     1715     2065    2          F$DCB.TYC='0'B;

   2065  0 000410   200003 471500                    LDP1    JDCB$,,AUTO
         0 000411   100001 450100                    STZ     1,,PR1
         0 000412   100002 450100                    STZ     2,,PR1

     1716     2066    2          CALL FMD$FLSHBUF(1);

   2066  0 000413   000000 630400 1                  EPPR0   0
         0 000414   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #004=FMH$INIT File=FMH$CONSEC.:E05TSI                              TUE 07/29/97 16:49 Page:296  
         0 000415   000000 701000 xent               TSX1    FMD$FLSHBUF
         0 000416   000000 011000                    NOP     0

     1717     2067    2          F$DCB.BFR.DA(1)=FM_FRZERO;

   2067  0 000417   200003 470500                    LDP0    JDCB$,,AUTO
         0 000420   000000 236000 xsym               LDQ     FM_FRZERO
         0 000421   000116 552134                    STBQ    78,'34'O,PR0

     1718     2068
     1719     2069    2          CALL FMB$LOGERR(%E$FREC, 72, 0, 0, CFU$, 4, 5, 7, 0);

   2069  0 000422   000006 236000 1                  LDQ     6
         0 000423   200030 756100                    STQ     UGRANS+12,,AUTO
         0 000424   000014 237000 1                  LDAQ    12
         0 000425   200026 757100                    STAQ    UGRANS+10,,AUTO
         0 000426   000013 236000 1                  LDQ     11
         0 000427   200025 756100                    STQ     UGRANS+9,,AUTO
         0 000430   200013 631500                    EPPR1   CFU$,,AUTO
         0 000431   200024 451500                    STP1    UGRANS+8,,AUTO
         0 000432   000016 237000 1                  LDAQ    14
         0 000433   200022 757100                    STAQ    UGRANS+6,,AUTO
         0 000434   000026 237000 1                  LDAQ    22
         0 000435   200020 757100                    STAQ    UGRANS+4,,AUTO
         0 000436   200020 630500                    EPPR0   UGRANS+4,,AUTO
         0 000437   000010 631400 1                  EPPR1   8
         0 000440   000000 701000 xent               TSX1    FMB$LOGERR
         0 000441   000000 011000                    NOP     0

     1720     2070    2          RETURN;

   2070  0 000442   200016 221300                    LDX1  ! UGRANS+2,,AUTO
         0 000443   000001 702211                    TSX2  ! 1,X1

(unnamed)
 Sect OctLoc
   1     000   000003 006000   743777 777777   777777 767777   774777 777777    ................
PL6.E3A0      #004=FMH$INIT File=FMH$CONSEC.:E05TSI                              TUE 07/29/97 16:49 Page:297  
   1     004   707777 777777   777777 757777   000002 006000   777731 664600    ................
   1     010   000011 000000   000000 000046   000000 000106   000006 006000    .......&...F....
   1     014   000007 006000   000011 006000   000002 006000   000002 006000    ................
   1     020   000011 006000   000012 006000   000000 000107   000000 000110    ...........G...H
   1     024   000011 006000   000022 006000   000011 006000   000023 006000    ................
     1721     2071    2          END CHECK;
     1722     2072    1          END FMH$INIT;

PL6.E3A0      #004=FMH$INIT File=FMH$CONSEC.:E05TSI                              TUE 07/29/97 16:49 Page:298  
--  Include file information  --

   F_ERRORS_C.:E05TOU  is referenced.
   F_FMTCODE_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  is referenced.
   FM$MACROS.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
      No diagnostics issued in procedure FMH$INIT.
PL6.E3A0      #004=FMH$INIT File=FMH$CONSEC.:E05TSI                              TUE 07/29/97 16:49 Page:299  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 BUF$                      13-0-0/w PTR         r     1 CFU$
    10-0-0/w UBIN        r     1 DA                         3-0-0/w PTR         r     1 JDCB$
    11-0-0/w SBIN        r     1 N                          7-0-0/w SBIN        r     1 NAVX
    12-0-0/w SBIN        r     1 NRECS                      5-0-0/w PTR         r     1 SEG$
     6-0-0/w SBIN        r     1 SEGX                      14-0-0/w SBIN        r     1 UGRANS

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w UBIN        r     1 FM_FRZERO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w STRC(288)   r     1 FM$CFU                     0-0-0/w STRC        r     1 FM$CON
     0-0-0/w STRC(180)   r     1 FM$GRAN


   Procedure FMH$INIT requires 292 words for executable code.
   Procedure FMH$INIT requires 26 words of local(AUTO) storage.

    No errors detected in file FMH$CONSEC.:E05TSI    .
PL6.E3A0      #004=FMH$INIT File=FMH$CONSEC.:E05TSI                              TUE 07/29/97 16:49 Page:300  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=FMH$INIT File=FMH$CONSEC.:E05TSI                              TUE 07/29/97 16:49 Page:301  
          MINI XREF LISTING

B$JIT.CPFLAGS1.SLEAZE
       986**DCL       986--REDEF
B$JIT.DCB$
      1060**DCL      1952>>ASSIGN
B$JIT.ERR
       892**DCL      2064<<ASSIGN
B$JIT.ERR.MID
       893**DCL       893--REDEF
B$JIT.JRESPEAK
      1054**DCL      1055--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
      1163**DCL      1163--REDEF    1164--REDEF
B$JIT.PNR
      1067**DCL      1067--REDEF
B$JIT.TSLINE
      1161**DCL      1162--REDEF
B$JIT$
      1935**DCL       887--IMP-PTR  1952>>ASSIGN   2064>>ASSIGN
BUF$
      1942**DCL      1926--IMP-PTR  2020>>DOUNTIL  2021<>CALL     2023>>ASSIGN   2023>>ASSIGN   2024>>ASSIGN
      2030>>ASSIGN
CFU$
      1949**DCL      1920--IMP-PTR  1953<<ASSIGN   2036>>IF       2040>>ASSIGN   2041>>ASSIGN   2049>>ASSIGN
      2050>>ASSIGN   2051>>IF       2051>>IF       2053<>CALL     2054>>ASSIGN   2054>>ASSIGN   2055>>ASSIGN
      2055>>ASSIGN   2056>>ASSIGN   2056>>ASSIGN   2059<>CALL     2062>>ASSIGN   2063>>ASSIGN   2069<>CALL
CHECK
      2013**PROC     1969--CALL
DA
      1946**DCL      2017<<ASSIGN   2021<>CALL     2033<<ASSIGN   2033>>ASSIGN   2036>>IF       2041<<ASSIGN
      2049>>ASSIGN
DATA_ERROR IN PROCEDURE CHECK
      2036**LABEL    2021--CALLALT
PL6.E3A0      #004=FMH$INIT File=FMH$CONSEC.:E05TSI                              TUE 07/29/97 16:49 Page:302  
F$DCB.ACS
      1887**DCL      1971>>IF       1977>>IF
F$DCB.ACTPOS
      1895**DCL      1895--REDEF
F$DCB.ARS
      1870**DCL      1870--REDEF
F$DCB.ATTR
      1888**DCL      1889--REDEF
F$DCB.BFR.DA
      1915**DCL      1955>>IF       1958<<ASSIGN   2067<<ASSIGN
F$DCB.BORROW
      1903**DCL      1903--REDEF    1903--REDEF    1903--REDEF
F$DCB.CFU$
      1904**DCL      1953>>ASSIGN
F$DCB.CRECNO
      1907**DCL      1965<<ASSIGN
F$DCB.CRECX
      1906**DCL      1962<<ASSIGN
F$DCB.DCBNAME.L
      1917**DCL      1917--IMP-SIZ
F$DCB.DESC.BAD
      1878**DCL      2038<<ASSIGN
F$DCB.EOMCHAR
      1874**DCL      1874--REDEF
F$DCB.EOP
      1899**DCL      1964<<ASSIGN
F$DCB.FEXT
      1898**DCL      1984<<ASSIGN   1994<<ASSIGN
F$DCB.FLDID
      1898**DCL      1898--REDEF
F$DCB.FORM$
      1892**DCL      1892--REDEF
F$DCB.FPRGX
      1894**DCL      1987>>IF
F$DCB.FSECT
      1908**DCL      1908--REDEF
PL6.E3A0      #004=FMH$INIT File=FMH$CONSEC.:E05TSI                              TUE 07/29/97 16:49 Page:303  
F$DCB.FSN
      1885**DCL      1885--REDEF    1885--REDEF    1886--REDEF
F$DCB.FUN
      1884**DCL      1980>>IF
F$DCB.GTYP
      1899**DCL      1961<<ASSIGN
F$DCB.HEADER$
      1891**DCL      1891--REDEF
F$DCB.IASN
      1911**DCL      1989>>IF
F$DCB.IFMT
      1910**DCL      1973<<ASSIGN   1983<<ASSIGN   1990<<ASSIGN   1991<<ASSIGN
F$DCB.IXTNSIZE
      1889**DCL      1889--REDEF
F$DCB.LASTSTA$
      1879**DCL      1879--REDEF
F$DCB.LVL
      1904**DCL      1904--REDEF    1966<<ASSIGN
F$DCB.MEDIA
      1910**DCL      1993<<ASSIGN
F$DCB.NAME.C
      1879**DCL      1879--REDEF
F$DCB.NOEOF
      1900**DCL      1900--REDEF
F$DCB.NRECS
      1890**DCL      1890--REDEF
F$DCB.NRECX
      1909**DCL      1909--REDEF
F$DCB.OHDR
      1901**DCL      1901--REDEF
F$DCB.ORG
      1884**DCL      1884--REDEF    1981>>DOCASE
F$DCB.PRECNO
      1907**DCL      1907--REDEF
F$DCB.RA
      1901**DCL      1968>>IF       2015<<ASSIGN
PL6.E3A0      #004=FMH$INIT File=FMH$CONSEC.:E05TSI                              TUE 07/29/97 16:49 Page:304  
F$DCB.RCSZ
      1912**DCL      1912--REDEF
F$DCB.RES
      1880**DCL      1880--REDEF
F$DCB.RPOS
      1901**DCL      1963<<ASSIGN
F$DCB.SETX
      1892**DCL      1892--REDEF
F$DCB.TAB$
      1891**DCL      1892--REDEF
F$DCB.TDA
      1906**DCL      1906--REDEF
F$DCB.TYC
      1870**DCL      2065<<ASSIGN
F$DCB.WSN
      1881**DCL      1881--REDEF
FM$CFU.ACCTX
      1921**DCL      1921--REDEF
FM$CFU.B
      1923**DCL      2040<<ASSIGN
FM$CFU.FMOD
      1920**DCL      2063<<ASSIGN
FM$CFU.LDA
      1923**DCL      2036>>IF       2041>>ASSIGN   2049<<ASSIGN   2050>>ASSIGN   2054>>ASSIGN
FM$CFU.NGAVAL
      1923**DCL      2051>>IF       2056<<ASSIGN   2056>>ASSIGN
FM$CFU.NRECS
      1921**DCL      2062<<ASSIGN
FM$CFU.UGRANS
      1922**DCL      2051>>IF       2054>>ASSIGN   2055<<ASSIGN   2055>>ASSIGN
FM$CON.FAK
      1930**DCL      2027>>IF
FM$GRAN.AVAIL
      1927**DCL      2023>>ASSIGN
FM$GRAN.NAVX
      1926**DCL      2023>>ASSIGN
PL6.E3A0      #004=FMH$INIT File=FMH$CONSEC.:E05TSI                              TUE 07/29/97 16:49 Page:305  
FM$GRAN.NOTLDA
      1927**DCL      2020>>DOUNTIL
FMB$LOGERR
      1938**DCL-ENT  2053--CALL     2059--CALL     2069--CALL
FMD$FLSHBUF
      1939**DCL-ENT  1957--CALL     2018--CALL     2066--CALL
FMD$REDBUF
      1937**DCL-ENT  2021--CALL
FM_FRZERO
      1934**DCL      1955>>IF       1958>>ASSIGN   2017>>ASSIGN   2050>>ASSIGN   2054>>ASSIGN   2067>>ASSIGN
JDCB$
      1941**DCL      1870--IMP-PTR  1952<<ASSIGN   1953>>ASSIGN   1955>>IF       1958>>ASSIGN   1961>>ASSIGN
      1962>>ASSIGN   1963>>ASSIGN   1964>>ASSIGN   1965>>ASSIGN   1966>>ASSIGN   1968>>IF       1971>>IF
      1973>>ASSIGN   1977>>IF       1980>>IF       1981>>DOCASE   1983>>ASSIGN   1984>>ASSIGN   1987>>IF
      1989>>IF       1990>>ASSIGN   1991>>ASSIGN   1993>>ASSIGN   1994>>ASSIGN   2015>>ASSIGN   2038>>ASSIGN
      2065>>ASSIGN   2067>>ASSIGN
LOOP IN PROCEDURE CHECK
      2020**LABEL    2045--EXIT
N
      1947**DCL      2054<<ASSIGN   2055>>ASSIGN   2056>>ASSIGN
NAVX
      1945**DCL      2023<<ASSIGN   2026>>DOWHILE
NRECS
      1948**DCL      2016<<ASSIGN   2028<<ASSIGN   2028>>ASSIGN   2039<<ASSIGN   2061>>IF       2062>>ASSIGN
SEG$
      1943**DCL      1930--IMP-PTR  2024<<ASSIGN   2027>>IF       2030<<ASSIGN
SEGX
      1944**DCL      2025<<ASSIGN   2026>>DOWHILE  2029<<ASSIGN   2029>>ASSIGN   2030>>ASSIGN
TOP IN PROCEDURE CHECK
      2021**LABEL    2042--GOTO
UGRANS
      1950**DCL      2050<<ASSIGN   2051>>IF       2051>>IF       2053<>CALL     2059<>CALL
PL6.E3A0      #004=FMH$INIT File=FMH$CONSEC.:E05TSI                              TUE 07/29/97 16:49 Page:306  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #004=FMH$INIT File=FMH$CONSEC.:E05TSI                              TUE 07/29/97 16:49 Page:307  
              MINI UREF LISTING

FMH$INIT      24**PROC
