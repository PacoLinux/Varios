VERSION E05

PL6.E3A0      #001=VXD$C2B File=VXD$C2B.:E05TSI                                  WED 07/30/97 08:06 Page:1    
        1        1        /*M* VXD$C2B - Converts numeric character string to a binary number. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=6,IND=4,CSU=2,EXM=0,ECU=2,MOC,DCI=4,CRT=4          */
        8        8        VXD$C2B:
        9        9              PROC( P_VALUE, STRING, P_BASE ) NOAUTO;
       10       10        %INCLUDE VX_MACRO_C;
       11     1147        %P;

              1155        /*******************************************************************************
              1156        *                                                                              *
              1157        *                          PARAMETERS                                              *
              1158        *                                                                              *
              1159        *******************************************************************************/

       12     1163    1   DCL P_VALUE           SBIN WORD ALIGNED;
       13     1164    1   DCL 1 STRING,
       14     1165    1         2 COUNT UBIN( 9) UNAL,
       15     1166    1         2 CHARS_A(0:0) CHAR( 1) UNAL;
       16     1167    1   DCL P_BASE          UBIN WORD ALIGNED;
       17     1168        %U;

              1176    1   /*******************************************************************************
              1177    1   *                                                                              *
              1178    1   *                          UBIN                                                 *
              1179    1   *                                                                              *
              1180    1   *******************************************************************************/

       18     1184    1   DCL I               UBIN WORD ALIGNED STATIC;
       19     1185    1   DCL START           UBIN WORD ALIGNED STATIC;
       20     1186    1   DCL STOP            UBIN WORD ALIGNED STATIC;
       21     1187    1   DCL BASE            UBIN WORD STATIC;
       22     1188        %S;

PL6.E3A0      #001=VXD$C2B File=VXD$C2B.:E05TSI                                  WED 07/30/97 08:06 Page:2    
              1196    1   /*******************************************************************************
              1197    1   *                                                                              *
              1198    1   *                          SBIN                                                 *
              1199    1   *                                                                              *
              1200    1   *******************************************************************************/

       23     1204    1   DCL NEG             SBIN WORD ALIGNED STATIC;
       24     1205    1   DCL VALUE           SBIN WORD STATIC;
       25     1206        %EJECT;
PL6.E3A0      #001=VXD$C2B File=VXD$C2B.:E05TSI                                  WED 07/30/97 08:06 Page:3    
       26     1207        %BANNER(ARG=Begin  VXD$C2B);

              1215    1   /*******************************************************************************
              1216    1   *                                                                              *
              1217    1   *                          Begin  VXD$C2B                                          *
              1218    1   *                                                                              *
              1219    1   *******************************************************************************/

       27     1223    1         NEG = 1;
       28     1224    1         START = 0;
       29     1225    1         BASE = P_BASE;
       30     1226    1         IF STRING.CHARS_A(0) = '+' THEN START = 1;
       31     1227    2         ELSE IF STRING.CHARS_A(0) = '-' THEN DO;
       32     1228    2                 START = 1;
       33     1229    2                 NEG = -1;
       34     1230    2                END;
       35     1231    1         VALUE = 0;
       36     1232    1         STOP = STRING.COUNT - 1;
       37     1233    2         DO I = START TO STOP;
       38     1234    2             VALUE = VALUE * BASE + ( ASCBIN(STRING.CHARS_A(I)) - BITBIN('060'O) );
       39     1235    2            END;
       40     1236    1         P_VALUE = NEG * VALUE;
       41     1237    1   END VXD$C2B;

PL6.E3A0      #001=VXD$C2B File=VXD$C2B.:E05TSI                                  WED 07/30/97 08:06 Page:4    
--  Include file information  --

   VX_MACRO_C.:E05TOU  is referenced.
      No diagnostics issued in procedure VXD$C2B.

   Procedure VXD$C2B requires 57 words for executable code.
   Procedure VXD$C2B is declared NOAUTO and requires 12 words of local(STATIC) storage.

    No errors detected in file VXD$C2B.:E05TSI    .

PL6.E3A0      #001=VXD$C2B File=VXD$C2B.:E05TSI                                  WED 07/30/97 08:06 Page:5    

 Object Unit name= VXD$C2B                                    File name= VXD$C2B.:E05TOU
 UTS= JUL 30 '97 08:06:29.32 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none    12     14  VXD$C2B
    1   Proc  even  none    57     71  VXD$C2B
    2  RoData even  none     2      2  VXD$C2B

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        3  VXD$C2B

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_STATIC_3
PL6.E3A0      #001=VXD$C2B File=VXD$C2B.:E05TSI                                  WED 07/30/97 08:06 Page:6    


        1        1        /*M* VXD$C2B - Converts numeric character string to a binary number. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=6,IND=4,CSU=2,EXM=0,ECU=2,MOC,DCI=4,CRT=4          */
        8        8        VXD$C2B:
        9        9              PROC( P_VALUE, STRING, P_BASE ) NOAUTO;

      9  1 000000   000000 700200 xent  VXD$C2B      TSX0  ! X66_STATIC_3
         1 000001   000000 000003 0                  ZERO    0,3

       10       10        %INCLUDE VX_MACRO_C;
       11     1147        %P;

              1155        /*******************************************************************************
              1156        *                                                                              *
              1157        *                          PARAMETERS                                             *
              1158        *                                                                              *
              1159        *******************************************************************************/

       12     1163    1   DCL P_VALUE           SBIN WORD ALIGNED;
       13     1164    1   DCL 1 STRING,
       14     1165    1         2 COUNT UBIN( 9) UNAL,
       15     1166    1         2 CHARS_A(0:0) CHAR( 1) UNAL;
       16     1167    1   DCL P_BASE          UBIN WORD ALIGNED;
       17     1168        %U;

              1176    1   /*******************************************************************************
              1177    1   *                                                                              *
              1178    1   *                          UBIN                                                 *
              1179    1   *                                                                              *
              1180    1   *******************************************************************************/

       18     1184    1   DCL I               UBIN WORD ALIGNED STATIC;
PL6.E3A0      #001=VXD$C2B File=VXD$C2B.:E05TSI                                  WED 07/30/97 08:06 Page:7    
       19     1185    1   DCL START           UBIN WORD ALIGNED STATIC;
       20     1186    1   DCL STOP            UBIN WORD ALIGNED STATIC;
       21     1187    1   DCL BASE            UBIN WORD STATIC;
       22     1188        %S;

              1196    1   /*******************************************************************************
              1197    1   *                                                                              *
              1198    1   *                          SBIN                                                 *
              1199    1   *                                                                              *
              1200    1   *******************************************************************************/

       23     1204    1   DCL NEG             SBIN WORD ALIGNED STATIC;
       24     1205    1   DCL VALUE           SBIN WORD STATIC;
       25     1206        %EJECT;
PL6.E3A0      #001=VXD$C2B File=VXD$C2B.:E05TSI                                  WED 07/30/97 08:06 Page:8    
       26     1207        %BANNER(ARG=Begin  VXD$C2B);

              1215    1   /*******************************************************************************
              1216    1   *                                                                              *
              1217    1   *                          Begin  VXD$C2B                                         *
              1218    1   *                                                                              *
              1219    1   *******************************************************************************/

       27     1223    1         NEG = 1;

   1223  1 000002   000001 235007                    LDA     1,DL
         1 000003   000010 755000 0                  STA     NEG

       28     1224    1         START = 0;

   1224  1 000004   000005 450000 0                  STZ     START

       29     1225    1         BASE = P_BASE;

   1225  1 000005   000003 470400 0                  LDP0    @P_BASE
         1 000006   000000 235100                    LDA     0,,PR0
         1 000007   000007 755000 0                  STA     BASE

       30     1226    1         IF STRING.CHARS_A(0) = '+' THEN START = 1;

   1226  1 000010   000002 471400 0                  LDP1    @STRING
         1 000011   040000 106500                    CMPC    fill='040'O
         1 000012   100000 200001                    ADSC9   0,,PR1                   cn=1,n=1
         1 000013   000000 000001 2                  ADSC9   0                        cn=0,n=1
         1 000014   000020 601000 1                  TNZ     s:1227

   1226  1 000015   000001 236007                    LDQ     1,DL
         1 000016   000005 756000 0                  STQ     START
         1 000017   000030 710000 1                  TRA     s:1231

       31     1227    2         ELSE IF STRING.CHARS_A(0) = '-' THEN DO;

PL6.E3A0      #001=VXD$C2B File=VXD$C2B.:E05TSI                                  WED 07/30/97 08:06 Page:9    
   1227  1 000020   040000 106500                    CMPC    fill='040'O
         1 000021   100000 200001                    ADSC9   0,,PR1                   cn=1,n=1
         1 000022   000001 000001 2                  ADSC9   1                        cn=0,n=1
         1 000023   000030 601000 1                  TNZ     s:1231

       32     1228    2                 START = 1;

   1228  1 000024   000001 236007                    LDQ     1,DL
         1 000025   000005 756000 0                  STQ     START

       33     1229    2                 NEG = -1;

   1229  1 000026   000001 335007                    LCA     1,DL
         1 000027   000010 755000 0                  STA     NEG

       34     1230    2                END;

       35     1231    1         VALUE = 0;

   1231  1 000030   000011 450000 0                  STZ     VALUE

       36     1232    1         STOP = STRING.COUNT - 1;

   1232  1 000031   000000 101500                    MRL     fill='000'O
         1 000032   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 000033   000012 000004 0                  ADSC9   VALUE+1                  cn=0,n=4
         1 000034   000012 236000 0                  LDQ     VALUE+1
         1 000035   000001 136007                    SBLQ    1,DL
         1 000036   000006 756000 0                  STQ     STOP

       37     1233    2         DO I = START TO STOP;

   1233  1 000037   000005 235000 0                  LDA     START
         1 000040   000004 755000 0                  STA     I
         1 000041   000060 710000 1                  TRA     s:1235+2

       38     1234    2             VALUE = VALUE * BASE + ( ASCBIN(STRING.CHARS_A(I)) - BITBIN('060'O) );
PL6.E3A0      #001=VXD$C2B File=VXD$C2B.:E05TSI                                  WED 07/30/97 08:06 Page:10   

   1234  1 000042   000011 236000 0                  LDQ     VALUE
         1 000043   000007 402000 0                  MPY     BASE
         1 000044   000002 470400 0                  LDP0    @STRING
         1 000045   000004 235000 0                  LDA     I
         1 000046   000000 101505                    MRL     fill='000'O
         1 000047   000000 200001                    ADSC9   0,A,PR0                  cn=1,n=1
         1 000050   000012 000004 0                  ADSC9   VALUE+1                  cn=0,n=4
         1 000051   000013 756000 0                  STQ     VALUE+2
         1 000052   000012 236000 0                  LDQ     VALUE+1
         1 000053   000013 036000 0                  ADLQ    VALUE+2
         1 000054   000060 136007                    SBLQ    48,DL
         1 000055   000011 756000 0                  STQ     VALUE

       39     1235    2            END;

   1235  1 000056   000001 035007                    ADLA    1,DL
         1 000057   000004 755000 0                  STA     I
         1 000060   000006 236000 0                  LDQ     STOP
         1 000061   000004 116000 0                  CMPQ    I
         1 000062   000042 603000 1                  TRC     s:1234

       40     1236    1         P_VALUE = NEG * VALUE;

   1236  1 000063   000010 236000 0                  LDQ     NEG
         1 000064   000011 402000 0                  MPY     VALUE
         1 000065   000001 470400 0                  LDP0    @P_VALUE
         1 000066   000000 756100                    STQ     0,,PR0

       41     1237    1   END VXD$C2B;

   1237  1 000067   000000 221200 0                  LDX1  ! 0
         1 000070   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #001=VXD$C2B File=VXD$C2B.:E05TSI                                  WED 07/30/97 08:06 Page:11   
--  Include file information  --

   VX_MACRO_C.:E05TOU  is referenced.
      No diagnostics issued in procedure VXD$C2B.
PL6.E3A0      #001=VXD$C2B File=VXD$C2B.:E05TSI                                  WED 07/30/97 08:06 Page:12   

 **** Variables and constants ****

  ****  Section 000  Data  VXD$C2B

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @P_BASE                    1-0-0/w PTR         r     1 @P_VALUE
     2-0-0/w PTR         r     1 @STRING                    7-0-0/w UBIN        r     1 BASE
     4-0-0/w UBIN        r     1 I                         10-0-0/w SBIN        r     1 NEG
    *0-0-0/w UBIN        r     1 P_BASE                    *0-0-0/w SBIN        r     1 P_VALUE
     5-0-0/w UBIN        r     1 START                      6-0-0/w UBIN        r     1 STOP
    *0-0-0/c STRC(18)    r     1 STRING                    11-0-0/w SBIN        r     1 VALUE


   Procedure VXD$C2B requires 57 words for executable code.
   Procedure VXD$C2B is declared NOAUTO and requires 12 words of local(STATIC) storage.

    No errors detected in file VXD$C2B.:E05TSI    .
PL6.E3A0      #001=VXD$C2B File=VXD$C2B.:E05TSI                                  WED 07/30/97 08:06 Page:13   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VXD$C2B File=VXD$C2B.:E05TSI                                  WED 07/30/97 08:06 Page:14   
          MINI XREF LISTING

BASE
      1187**DCL      1225<<ASSIGN   1234>>ASSIGN
I
      1184**DCL      1233<<DOINDEX  1234>>ASSIGN
NEG
      1204**DCL      1223<<ASSIGN   1229<<ASSIGN   1236>>ASSIGN
P_BASE
      1167**DCL         8--PROC     1225>>ASSIGN
P_VALUE
      1163**DCL         8--PROC     1236<<ASSIGN
START
      1185**DCL      1224<<ASSIGN   1226<<ASSIGN   1228<<ASSIGN   1233>>DOINDEX
STOP
      1186**DCL      1232<<ASSIGN   1233>>DOINDEX
STRING
      1164**DCL         8--PROC
STRING.CHARS_A
      1166**DCL      1226>>IF       1227>>IF       1234>>ASSIGN
STRING.COUNT
      1165**DCL      1232>>ASSIGN
VALUE
      1205**DCL      1231<<ASSIGN   1234<<ASSIGN   1234>>ASSIGN   1236>>ASSIGN
