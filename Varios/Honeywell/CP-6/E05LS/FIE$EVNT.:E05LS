VERSION E05

PL6.E3A0      #001=FIE$EVNT File=FIE$EVNT.:E05TSI                                TUE 07/29/97 15:26 Page:1    
        1        1        /*M* FIE$EVNT INSYM ghost event handling routine */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=6,IND=0,IDT=2,SDI=2,CTI=0,ENU=0,AND,DCI=4,CSU=2,ECU=4,THI=0,DTI=0,STI=1
                 7        ,IAD=0,PRB */
        8        8        /**/
        9        9        /*P* NAME:         FIE$EVNT
       10       10             PURPOSE:      To receive asynchronous events for the INSYM ghost
       11       11        */
       12       12        /**/
       13       13        /*F* NAME:         FIE$EVNT
       14       14             PURPOSE:      To receive asynchronous events for the INSYM ghost
       15       15             PURPOSE:      To receive EVENTs for the INSYM ghost
       16       16             DESCRIPTION:  FIE$EVNT is the M$EVENT receiver for the INSYM
       17       17                           ghost.
       18       18
       19       19                           The information appropriate to the received event
       20       20                           is placed in an event queue frame which is then
       21       21                           added to the tail of the event queue.
       22       22
       23       23                           Note that if INSYM is asleep when the event is
       24       24                           received, it will wake up and come out of the
       25       25                           CALL M$WAIT, to pick up the event on the head
       26       26                           of the queue.  In general, then, the only purpose
       27       27                           of FIE$EVNT is to extract the event info from the
       28       28                           appropriate place and format it nicely into the
       29       29                           event queue frame.  Exceptions to this rule are
       30       30                           noted explicitly below. */
       31       31        /**/
       32       32        FIE$EVNT: PROC ASYNC;
       33       33
       34       34
       35       35
       36       36        /**/
PL6.E3A0      #001=FIE$EVNT File=FIE$EVNT.:E05TSI                                TUE 07/29/97 15:26 Page:2    
       37       37        /* INCLUDES */
       38       38        /**/
       39       39        %INCLUDE CP_6;
       40      120        %INCLUDE FI_SCODE_C;
       41      137        %INCLUDE FI_SUBS_C;
       42      239        %INCLUDE JG_EVID_C;
       43      464        %INCLUDE FOO_MAC_C;
       44     1212        %INCLUDE FI_MAC_C;
       45     1582        %INCLUDE UE_ERRORS_C;
       46     1600        %INCLUDE FI_DATA_R;
       47     1866
       48     1867
       49     1868
       50     1869        /**/
       51     1870        /* BASED STRUCTURES */
       52     1871        /**/
       53     1872        %B$TCB;
       54     1875        %B$ALT;
       55     1883        %B$NWIO;
       56     1968        %B$EVNT;
       57     1981        %JG_DSMTMSG;
       58     1992        %FI_EVNT (FPTN=FI$EVNT,STCLASS=BASED);
       59     2055        %FI_CITE (FPTN=FI$CITE,TYP=CGRD,STCLASS=BASED);
       60     2099
       61     2100
       62     2101
       63     2102        /**/
       64     2103        /* AUTO */
       65     2104        /**/
       66     2105    1   DCL STK$ PTR;
       67     2106    1   DCL EVNT$ PTR;
       68     2107    1   DCL EVENT UBIN WORD;
       69     2108    1   DCL 1 EVNT REDEF EVENT,
       70     2109    1         2 * UBIN(18) UNAL,
       71     2110    1         2 EVID UBIN(18) UNAL;
       72     2111    1   DCL RENV UBIN WORD;
       73     2112
PL6.E3A0      #001=FIE$EVNT File=FIE$EVNT.:E05TSI                                TUE 07/29/97 15:26 Page:3    
       74     2113
       75     2114
       76     2115        /**/
       77     2116        /* CONSTANT */
       78     2117        /**/
       79     2118    1   DCL INSYMNAME CHAR(8) CONSTANT DALIGNED INIT('INSYM');
       80     2119
       81     2120
       82     2121
       83     2122        /**/
       84     2123        /* REFS */
       85     2124        /**/
       86     2125    1   DCL B$TCB$ PTR SYMREF;
       87     2126    1   DCL FOI$LDTRC ENTRY(4) ALTRET;
       88     2127    1   DCL FOI$SNAP ENTRY(4) ALTRET;
       89     2128        %FI_APLMSG (FPTN=FI_APLCGBUF,STCLASS=SYMREF);
       90     2158
       91     2159
       92     2160
       93     2161        /**/
       94     2162        /* SUBS */
       95     2163        /**/
       96     2164        %SUB F_FI='0611'O;
       97     2165        %SUB M_E='05'O;
       98     2166        %EQU_CG;
       99     2214        %EJECT;
PL6.E3A0      #001=FIE$EVNT File=FIE$EVNT.:E05TSI                                TUE 07/29/97 15:26 Page:4    
      100     2215
      101     2216        /**/
      102     2217        /* BEGIN HERE */
      103     2218        /**/
      104     2219    2           DO INHIBIT;
      105     2220    2           STK$=B$TCB$->B$TCB.STK$;
      106     2221    2           RENV=0;
      107     2222
      108     2223
      109     2224
      110     2225                                /* PICK UP AN EVENT Q FRAME */
      111     2226    2           EVNT$=FI_FEVHD$;
      112     2227    2           FI_FEVHD$=EVNT$->FI$EVNT.LNK$;
      113     2228    2           IF FI_FEVHD$ = ADDR(NIL) THEN FI_FEVTL$=ADDR(NIL);
      114     2229    2           EVNT$->FI$EVNT.LNK$=ADDR(NIL);
      115     2230                                /* LINK IT INTO EVENT QUEUE */
      116     2231    2           IF FI_EVTL$ = ADDR(NIL) THEN FI_EVHD$=EVNT$;
      117     2232    2           ELSE FI_EVTL$->FI$EVNT.LNK$=EVNT$;
      118     2233    2           FI_EVTL$=EVNT$;
      119     2234    2           END; /* DO INHIBIT */
      120     2235    1         EVNT$->FI$EVNT.ENDAC=0;
      121     2236        /***
      122     2237         ***
      123     2238         ***
      124     2239         ***          PROCESS THE EVENT
      125     2240         ***
      126     2241         ***
      127     2242         ***/
      128     2243
      129     2244
      130     2245    1         EVENT=STK$->B$NWIO.EVID; /* PICK OFF SUBCODE */
      131     2246
      132     2247    2           DO CASE (EVNT.EVID);
      133     2248        /***
      134     2249         ***
      135     2250         ***     CSCG READ COMPLETE
      136     2251         ***
PL6.E3A0      #001=FIE$EVNT File=FIE$EVNT.:E05TSI                                TUE 07/29/97 15:26 Page:5    
      137     2252         ***/
      138     2253    2             CASE (FI_CSRD#);
      139     2254
      140     2255    2               EVNT$->FI$EVNT.ENDAC=FIEA_CSCG#;
      141     2256    2               EVNT$->FI$EVNT.CITE$=ADDR(FI_CSCGBUF);
      142     2257    2               IF STK$->B$NWIO.ERR THEN
      143     2258    3                 DO;
      144     2259    3                 CALL SENV;
      145     2260    3                 CALL FOI$SNAP (%S$FICSCGERR,F_FI,M_E);
      146     2261        /*S* SCREECH_CODE: FIE-S$FICSCGERR
      147     2262             TYPE:         SNAP
      148     2263             MESSAGE:      INSYM - error reading CSCG
      149     2264             DESCRIPTION:  This SNAP occurs when INSYM receives notification
      150     2265                           that his no-wait read on the CSCG has completed with
      151     2266                           an error. */
      152     2267    3                 GOTO NOEVENT;
      153     2268    3                 END;
      154     2269    2               IF STK$->B$NWIO.CGPARM.STATION# ~= 'KEYIN' THEN
      155     2270    2                EVNT$->FI$EVNT.CODE=ADDR(FI_CSCGBUF)->FI$CITE.CODE;
      156     2271    2               ELSE EVNT$->FI$EVNT.CODE=FIEV_KEYIN#;
      157     2272        /***
      158     2273         ***
      159     2274         ***     ISCG READ COMPLETE
      160     2275         ***
      161     2276         ***/
      162     2277    2             CASE (FI_ISRD#);
      163     2278
      164     2279    2               EVNT$->FI$EVNT.ENDAC=FIEA_ISCG#;
      165     2280    2               EVNT$->FI$EVNT.CITE$=ADDR(FI_ISRD);
      166     2281    2               IF STK$->B$NWIO.CGPARM.MSGTYP# = '*AUEV' THEN GOTO ISAU;
      167     2282    2               EVNT$->FI$EVNT.CODE=FIEV_ISRD#;
      168     2283    2               FI_ISRD.CODE=FIEV_ISRD#;
      169     2284    2               FI_ISRD.BUF$=ADDR(FI_ISCGBUF);
      170     2285    2               FI_ISRD.ERRCODE=STK$->B$NWIO.ERR.CODE;
      171     2286    2               FI_ISRD.ARS=STK$->B$NWIO.ARS;
      172     2287    2               FI_ISRD.TYC=STK$->B$NWIO.TYC;
      173     2288    2               FI_ISRD.DVBYTE=STK$->B$NWIO.DVE.DVBYTE;
PL6.E3A0      #001=FIE$EVNT File=FIE$EVNT.:E05TSI                                TUE 07/29/97 15:26 Page:6    
      174     2289    2               FI_ISRD.NAME=STK$->B$NWIO.CGPARM.STATION#;
      175     2290    2               GOTO ENDEVENT;
      176     2291        /***
      177     2292         ***
      178     2293         ***     INSYM COMGROUP ADMINISTRATIVE USER EVENT
      179     2294         ***
      180     2295         ***/
      181     2296
      182     2297    2   ISAU:       ;
      183     2298    2               EVNT$->FI$EVNT.CODE=FIEV_ISAU#;
      184     2299        /***
      185     2300         ***
      186     2301         ***     APLCG READ COMPLETE
      187     2302         ***
      188     2303         ***/
      189     2304    2             CASE (FI_APLRD#);
      190     2305
      191     2306    2               EVNT$->FI$EVNT.ENDAC=FIEA_APLCG#;
      192     2307    2               EVNT$->FI$EVNT.CITE$=ADDR(FI_APLRD);
      193     2308    2               IF STK$->B$NWIO.CGPARM.MSGTYP# = '*AUEV' THEN GOTO APLAU;
      194     2309    2               EVNT$->FI$EVNT.CODE=FIEV_APLRD#;
      195     2310    2               FI_APLRD.CODE=FIEV_APLRD#;
      196     2311    2               FI_APLRD.BUF$=ADDR(FI_APLCGBUF);
      197     2312    2               FI_APLRD.ERRCODE=STK$->B$NWIO.ERR.CODE;
      198     2313    2               FI_APLRD.ARS=STK$->B$NWIO.ARS;
      199     2314    2               FI_APLRD.DVBYTE=STK$->B$NWIO.DVE.DVBYTE;
      200     2315    2               FI_APLRD.NAME=STK$->B$NWIO.CGPARM.STATION#;
      201     2316    2               GOTO ENDEVENT;
      202     2317        /***
      203     2318         ***
      204     2319         ***     APL COMGROUP ADMINISTRATIVE USER EVENT
      205     2320         ***
      206     2321         ***/
      207     2322
      208     2323    2   APLAU:      ;
      209     2324    2               EVNT$->FI$EVNT.CODE=FIEV_APLAU#;
      210     2325        /***
PL6.E3A0      #001=FIE$EVNT File=FIE$EVNT.:E05TSI                                TUE 07/29/97 15:26 Page:7    
      211     2326         ***
      212     2327         ***          DISMOUNT MSG FROM PIG
      213     2328         ***
      214     2329         ***/
      215     2330    2             CASE (JG_SETDSMT#);
      216     2331
      217     2332    2               EVNT$->FI$EVNT.CODE=FIEV_DSMT#;
      218     2333    2               EVNT$->FI$EVNT.CITE$=ADDR(EVNT$->FI$EVNT.DSMT);
      219     2334    2               EVNT$->FI$EVNT.DSMT.CODE=FIEV_DSMT#;
      220     2335    2               EVNT$->FI$EVNT.DSMT.PSN=ADDR(STK$->B$EVNT.P#)->JG_DSMTMSG.PSN;
      221     2336    2               EVNT$->FI$EVNT.DSMT.SETX=ADDR(STK$->B$EVNT.P#)->JG_DSMTMSG.SETX;
      222     2337        /***
      223     2338         ***
      224     2339         ***     UNKNOWN EVENT
      225     2340         ***
      226     2341         ***/
      227     2342    2             CASE (ELSE);
      228     2343
      229     2344    2               CALL SENV;
      230     2345    2               CALL FOI$SNAP (%S$FIUEV,F_FI,M_E);
      231     2346        /*S* SCREECH_CODE: FIE-S$FIUEV
      232     2347             TYPE:         SNAP
      233     2348             MESSAGE:      Unknown event passed to INSYM
      234     2349             REMARKS:      INSYM's event receiver has encountered an
      235     2350                           unknown event code. */
      236     2351    2   NOEVENT:    ;
      237     2352    2               EVNT$->FI$EVNT.CODE=FIEV_NOP#;
      238     2353        /***
      239     2354         ***               END OF EVENT TYPE DO CASE
      240     2355         ***/
      241     2356    2           END;
      242     2357
      243     2358        /**
      244     2359         **
      245     2360         ** EXIT FROM ALL EVENTS
      246     2361         **
      247     2362         **/
PL6.E3A0      #001=FIE$EVNT File=FIE$EVNT.:E05TSI                                TUE 07/29/97 15:26 Page:8    
      248     2363    1   ENDEVENT:;
      249     2364    1         IF RENV = 1 THEN CALL M$RENV;
      250     2365    1         RETURN;
      251     2366
      252     2367        /**** PROC TO SENV *****/
      253     2368    1   SENV: PROC;
      254     2369    2         CALL M$SENV ALTRET(NOSENV);
      255     2370    2         RENV=1;
      256     2371    2         RETURN;
      257     2372    2   NOSENV:;
      258     2373    2         IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE = %E$ALTEMPTY THEN RETURN;
      259     2374    2         CALL M$MERC;
      260     2375    2         RETURN;
      261     2376    2   END SENV;
      262     2377        %EJECT;
PL6.E3A0      #001=FIE$EVNT File=FIE$EVNT.:E05TSI                                TUE 07/29/97 15:26 Page:9    
      263     2378        /**/
      264     2379        /*F* NAME:         FIE$XCON
      265     2380             PURPOSE:      To receive exit control for the INSYM ghost
      266     2381             DESCRIPTION:  Upon getting exit control, we simply invoke
      267     2382                           FOI$LDTRC to produce a SNAP dump and then
      268     2383                           LDTRC to ourself. */
      269     2384    1   FIE$XCON: ENTRY ASYNC;
      270     2385        /**/
      271     2386    1         CALL FOI$LDTRC (%S$FIXCON,F_FI,M_E,INSYMNAME);
      272     2387        /*S* SCREECH_CODE: FIE-S$FIXCON
      273     2388             TYPE:         SNAP
      274     2389             MESSAGE:      INSYM has aborted
      275     2390             REMARKS:      INSYM should never trap or abort.  If it does,
      276     2391                           this indicates that something is drastically
      277     2392                           wrong with INSYM.  A SNAP dump is taken, and
      278     2393                           INSYM starts a new copy of himself.  */
      279     2394        /**/
      280     2395        /**/
      281     2396    1   END FIE$EVNT;

PL6.E3A0      #001=FIE$EVNT File=FIE$EVNT.:E05TSI                                TUE 07/29/97 15:26 Page:10   
--  Include file information  --

   FI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   UE_ERRORS_C.:E05TOU  is referenced.
   FI_MAC_C.:E05TOU  is referenced.
   FOO_MAC_C.:E05TOU  is referenced.
   JG_EVID_C.:E05TOU  is referenced.
   FI_SUBS_C.:E05TOU  is referenced.
   FI_SCODE_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure FIE$EVNT.

   Procedure FIE$EVNT requires 183 words for executable code.
   Procedure FIE$EVNT requires 10 words of local(AUTO) storage.

    No errors detected in file FIE$EVNT.:E05TSI    .

PL6.E3A0      #001=FIE$EVNT File=FIE$EVNT.:E05TSI                                TUE 07/29/97 15:26 Page:11   

 Object Unit name= FIE$EVNT                                   File name= FIE$EVNT.:E05TOU
 UTS= JUL 29 '97 15:26:45.68 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS      6      6  FIE$EVNT
    2   Proc  even  none   183    267  FIE$EVNT
    3  RoData even  none    20     24  FIE$EVNT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes     Async       0  FIE$EVNT
     2    260                  yes     Async       0  FIE$XCON

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       4 FOI$SNAP
 yes     yes           Std       4 FOI$LDTRC
                       nStd      0 X66_AAUTO
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AARET
PL6.E3A0      #001=FIE$EVNT File=FIE$EVNT.:E05TSI                                TUE 07/29/97 15:26 Page:12   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  FI_CSCGBUF                            FI_ISCGBUF
     FI_EVHD$                              FI_EVTL$                              FI_FEVHD$
     FI_FEVTL$                             FI_ISRD                               FI_APLRD
     B$TCB$                                FI_APLCGBUF                           B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=FIE$EVNT File=FIE$EVNT.:E05TSI                                TUE 07/29/97 15:26 Page:13   


        1        1        /*M* FIE$EVNT INSYM ghost event handling routine */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7       /*X* DMC,PLM=6,IND=0,IDT=2,SDI=2,CTI=0,ENU=0,AND,DCI=4,CSU=2,ECU=4,THI=0,DTI=0,STI=1
                 7        ,IAD=0,PRB */
        8        8        /**/
        9        9        /*P* NAME:         FIE$EVNT
       10       10             PURPOSE:      To receive asynchronous events for the INSYM ghost
       11       11        */
       12       12        /**/
       13       13        /*F* NAME:         FIE$EVNT
       14       14             PURPOSE:      To receive asynchronous events for the INSYM ghost
       15       15             PURPOSE:      To receive EVENTs for the INSYM ghost
       16       16             DESCRIPTION:  FIE$EVNT is the M$EVENT receiver for the INSYM
       17       17                           ghost.
       18       18
       19       19                           The information appropriate to the received event
       20       20                           is placed in an event queue frame which is then
       21       21                           added to the tail of the event queue.
       22       22
       23       23                           Note that if INSYM is asleep when the event is
       24       24                           received, it will wake up and come out of the
       25       25                           CALL M$WAIT, to pick up the event on the head
       26       26                           of the queue.  In general, then, the only purpose
       27       27                           of FIE$EVNT is to extract the event info from the
       28       28                           appropriate place and format it nicely into the
       29       29                           event queue frame.  Exceptions to this rule are
       30       30                           noted explicitly below. */
       31       31        /**/
       32       32        FIE$EVNT: PROC ASYNC;

     32  2 000000   000000 700200 xent  FIE$EVNT     TSX0  ! X66_AAUTO
         2 000001   000012 000000                    ZERO    10,0
PL6.E3A0      #001=FIE$EVNT File=FIE$EVNT.:E05TSI                                TUE 07/29/97 15:26 Page:14   

       33       33
       34       34
       35       35
       36       36        /**/
       37       37        /* INCLUDES */
       38       38        /**/
       39       39        %INCLUDE CP_6;
       40      120        %INCLUDE FI_SCODE_C;
       41      137        %INCLUDE FI_SUBS_C;
       42      239        %INCLUDE JG_EVID_C;
       43      464        %INCLUDE FOO_MAC_C;
       44     1212        %INCLUDE FI_MAC_C;
       45     1582        %INCLUDE UE_ERRORS_C;
       46     1600        %INCLUDE FI_DATA_R;
       47     1866
       48     1867
       49     1868
       50     1869        /**/
       51     1870        /* BASED STRUCTURES */
       52     1871        /**/
       53     1872        %B$TCB;
       54     1875        %B$ALT;
       55     1883        %B$NWIO;
       56     1968        %B$EVNT;
       57     1981        %JG_DSMTMSG;
       58     1992        %FI_EVNT (FPTN=FI$EVNT,STCLASS=BASED);
       59     2055        %FI_CITE (FPTN=FI$CITE,TYP=CGRD,STCLASS=BASED);
       60     2099
       61     2100
       62     2101
       63     2102        /**/
       64     2103        /* AUTO */
       65     2104        /**/
       66     2105    1   DCL STK$ PTR;
       67     2106    1   DCL EVNT$ PTR;
       68     2107    1   DCL EVENT UBIN WORD;
PL6.E3A0      #001=FIE$EVNT File=FIE$EVNT.:E05TSI                                TUE 07/29/97 15:26 Page:15   
       69     2108    1   DCL 1 EVNT REDEF EVENT,
       70     2109    1         2 * UBIN(18) UNAL,
       71     2110    1         2 EVID UBIN(18) UNAL;
       72     2111    1   DCL RENV UBIN WORD;
       73     2112
       74     2113
       75     2114
       76     2115        /**/
       77     2116        /* CONSTANT */
       78     2117        /**/
       79     2118    1   DCL INSYMNAME CHAR(8) CONSTANT DALIGNED INIT('INSYM');
       80     2119
       81     2120
       82     2121
       83     2122        /**/
       84     2123        /* REFS */
       85     2124        /**/
       86     2125    1   DCL B$TCB$ PTR SYMREF;
       87     2126    1   DCL FOI$LDTRC ENTRY(4) ALTRET;
       88     2127    1   DCL FOI$SNAP ENTRY(4) ALTRET;
       89     2128        %FI_APLMSG (FPTN=FI_APLCGBUF,STCLASS=SYMREF);
       90     2158
       91     2159
       92     2160
       93     2161        /**/
       94     2162        /* SUBS */
       95     2163        /**/
       96     2164        %SUB F_FI='0611'O;
       97     2165        %SUB M_E='05'O;
       98     2166        %EQU_CG;
       99     2214        %EJECT;
PL6.E3A0      #001=FIE$EVNT File=FIE$EVNT.:E05TSI                                TUE 07/29/97 15:26 Page:16   
      100     2215
      101     2216        /**/
      102     2217        /* BEGIN HERE */
      103     2218        /**/
      104     2219    2           DO INHIBIT;

      105     2220    2           STK$=B$TCB$->B$TCB.STK$;

   2220  2 000002   000000 470600 xsym               LDP0  ! B$TCB$
         2 000003   000001 236300                    LDQ   ! 1,,PR0
         2 000004   200003 756300                    STQ   ! STK$,,AUTO

      106     2221    2           RENV=0;

   2221  2 000005   200006 450300                    STZ   ! RENV,,AUTO

      107     2222
      108     2223
      109     2224
      110     2225                                /* PICK UP AN EVENT Q FRAME */
      111     2226    2           EVNT$=FI_FEVHD$;

   2226  2 000006   000000 236200 xsym               LDQ   ! FI_FEVHD$
         2 000007   200004 756300                    STQ   ! EVNT$,,AUTO

      112     2227    2           FI_FEVHD$=EVNT$->FI$EVNT.LNK$;

   2227  2 000010   200004 471700                    LDP1  ! EVNT$,,AUTO
         2 000011   100000 236300                    LDQ   ! 0,,PR1
         2 000012   000000 756200 xsym               STQ   ! FI_FEVHD$

      113     2228    2           IF FI_FEVHD$ = ADDR(NIL) THEN FI_FEVTL$=ADDR(NIL);

   2228  2 000013   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         2 000014   000017 601200 2                  TNZ   ! s:2229

   2228  2 000015   000001 236200 xsym               LDQ   ! B_VECTNIL+1
PL6.E3A0      #001=FIE$EVNT File=FIE$EVNT.:E05TSI                                TUE 07/29/97 15:26 Page:17   
         2 000016   000000 756200 xsym               STQ   ! FI_FEVTL$

      114     2229    2           EVNT$->FI$EVNT.LNK$=ADDR(NIL);

   2229  2 000017   000001 236200 xsym               LDQ   ! B_VECTNIL+1
         2 000020   100000 756300                    STQ   ! 0,,PR1

      115     2230                                /* LINK IT INTO EVENT QUEUE */
      116     2231    2           IF FI_EVTL$ = ADDR(NIL) THEN FI_EVHD$=EVNT$;

   2231  2 000021   000000 236200 xsym               LDQ   ! FI_EVTL$
         2 000022   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         2 000023   000027 601200 2                  TNZ   ! s:2232

   2231  2 000024   200004 236300                    LDQ   ! EVNT$,,AUTO
         2 000025   000000 756200 xsym               STQ   ! FI_EVHD$
         2 000026   000032 710200 2                  TRA   ! s:2233

      117     2232    2           ELSE FI_EVTL$->FI$EVNT.LNK$=EVNT$;

   2232  2 000027   200004 236300                    LDQ   ! EVNT$,,AUTO
         2 000030   000000 470600 xsym               LDP0  ! FI_EVTL$
         2 000031   000000 756300                    STQ   ! 0,,PR0

      118     2233    2           FI_EVTL$=EVNT$;

   2233  2 000032   000000 756200 xsym               STQ   ! FI_EVTL$

      119     2234    2           END; /* DO INHIBIT */

      120     2235    1         EVNT$->FI$EVNT.ENDAC=0;

   2235  2 000033   000000 220003                    LDX0    0,DU
         2 000034   100001 440100                    SXL0    1,,PR1

      121     2236        /***
      122     2237         ***
PL6.E3A0      #001=FIE$EVNT File=FIE$EVNT.:E05TSI                                TUE 07/29/97 15:26 Page:18   
      123     2238         ***
      124     2239         ***          PROCESS THE EVENT
      125     2240         ***
      126     2241         ***
      127     2242         ***/
      128     2243
      129     2244
      130     2245    1         EVENT=STK$->B$NWIO.EVID; /* PICK OFF SUBCODE */

   2245  2 000035   200003 470500                    LDP0    STK$,,AUTO
         2 000036   000101 235100                    LDA     65,,PR0
         2 000037   200005 755100                    STA     EVENT,,AUTO

      131     2246
      132     2247    2           DO CASE (EVNT.EVID);

   2247  2 000040   200005 721100                    LXL1    EVENT,,AUTO
         2 000041   000011 101003                    CMPX1   9,DU
         2 000042   000044 602011 2                  TNC     s:2247+4,X1
         2 000043   000215 710000 2                  TRA     s:2344
         2 000044   000215 710000 2                  TRA     s:2344
         2 000045   000055 710000 2                  TRA     s:2255
         2 000046   000104 710000 2                  TRA     s:2279
         2 000047   000144 710000 2                  TRA     s:2306
         2 000050   000215 710000 2                  TRA     s:2344
         2 000051   000215 710000 2                  TRA     s:2344
         2 000052   000215 710000 2                  TRA     s:2344
         2 000053   000215 710000 2                  TRA     s:2344
         2 000054   000202 710000 2                  TRA     s:2332

      133     2248        /***
      134     2249         ***
      135     2250         ***     CSCG READ COMPLETE
      136     2251         ***
      137     2252         ***/
      138     2253    2             CASE (FI_CSRD#);

PL6.E3A0      #001=FIE$EVNT File=FIE$EVNT.:E05TSI                                TUE 07/29/97 15:26 Page:19   
      139     2254
      140     2255    2               EVNT$->FI$EVNT.ENDAC=FIEA_CSCG#;

   2255  2 000055   000001 222003                    LDX2    1,DU
         2 000056   100001 442100                    SXL2    1,,PR1

      141     2256    2               EVNT$->FI$EVNT.CITE$=ADDR(FI_CSCGBUF);

   2256  2 000057   000000 236000 3                  LDQ     0
         2 000060   100002 756100                    STQ     2,,PR1

      142     2257    2               IF STK$->B$NWIO.ERR THEN

   2257  2 000061   000102 235100                    LDA     66,,PR0
         2 000062   000072 600000 2                  TZE     s:2269

      143     2258    3                 DO;

      144     2259    3                 CALL SENV;

   2259  2 000063   000234 701000 2                  TSX1    SENV
         2 000064   000000 011000                    NOP     0

      145     2260    3                 CALL FOI$SNAP (%S$FICSCGERR,F_FI,M_E);

   2260  2 000065   000004 630400 3                  EPPR0   4
         2 000066   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000067   000000 701000 xent               TSX1    FOI$SNAP
         2 000070   000000 011000                    NOP     0

      146     2261        /*S* SCREECH_CODE: FIE-S$FICSCGERR
      147     2262             TYPE:         SNAP
      148     2263             MESSAGE:      INSYM - error reading CSCG
      149     2264             DESCRIPTION:  This SNAP occurs when INSYM receives notification
      150     2265                           that his no-wait read on the CSCG has completed with
      151     2266                           an error. */
      152     2267    3                 GOTO NOEVENT;
PL6.E3A0      #001=FIE$EVNT File=FIE$EVNT.:E05TSI                                TUE 07/29/97 15:26 Page:20   

   2267  2 000071   000223 710000 2                  TRA     NOEVENT

      153     2268    3                 END;
      154     2269    2               IF STK$->B$NWIO.CGPARM.STATION# ~= 'KEYIN' THEN

   2269  2 000072   040000 106500                    CMPC    fill='040'O
         2 000073   000107 000010                    ADSC9   71,,PR0                  cn=0,n=8
         2 000074   000002 000005 1                  ADSC9   INSYMNAME+2              cn=0,n=5
         2 000075   000101 600000 2                  TZE     s:2271

      155     2270    2                EVNT$->FI$EVNT.CODE=ADDR(FI_CSCGBUF)->FI$CITE.CODE;

   2270  2 000076   000000 223000 xsym               LDX3    FI_CSCGBUF
         2 000077   100001 743100                    STX3    1,,PR1
         2 000100   000226 710000 2                  TRA     ENDEVENT

      156     2271    2               ELSE EVNT$->FI$EVNT.CODE=FIEV_KEYIN#;

   2271  2 000101   000002 223003                    LDX3    2,DU
         2 000102   100001 743100                    STX3    1,,PR1
         2 000103   000226 710000 2                  TRA     ENDEVENT

      157     2272        /***
      158     2273         ***
      159     2274         ***     ISCG READ COMPLETE
      160     2275         ***
      161     2276         ***/
      162     2277    2             CASE (FI_ISRD#);

      163     2278
      164     2279    2               EVNT$->FI$EVNT.ENDAC=FIEA_ISCG#;

   2279  2 000104   000002 222003                    LDX2    2,DU
         2 000105   100001 442100                    SXL2    1,,PR1

      165     2280    2               EVNT$->FI$EVNT.CITE$=ADDR(FI_ISRD);
PL6.E3A0      #001=FIE$EVNT File=FIE$EVNT.:E05TSI                                TUE 07/29/97 15:26 Page:21   

   2280  2 000106   000007 236000 3                  LDQ     7
         2 000107   100002 756100                    STQ     2,,PR1

      166     2281    2               IF STK$->B$NWIO.CGPARM.MSGTYP# = '*AUEV' THEN GOTO ISAU;

   2281  2 000110   040000 106500                    CMPC    fill='040'O
         2 000111   000111 000010                    ADSC9   73,,PR0                  cn=0,n=8
         2 000112   000004 000005 1                  ADSC9   INSYMNAME+4              cn=0,n=5
         2 000113   000141 600000 2                  TZE     ISAU

      167     2282    2               EVNT$->FI$EVNT.CODE=FIEV_ISRD#;

   2282  2 000114   000003 223003                    LDX3    3,DU
         2 000115   100001 743100                    STX3    1,,PR1

      168     2283    2               FI_ISRD.CODE=FIEV_ISRD#;

   2283  2 000116   000000 743000 xsym               STX3    FI_ISRD

      169     2284    2               FI_ISRD.BUF$=ADDR(FI_ISCGBUF);

   2284  2 000117   000010 236000 3                  LDQ     8
         2 000120   000006 756000 xsym               STQ     FI_ISRD+6

      170     2285    2               FI_ISRD.ERRCODE=STK$->B$NWIO.ERR.CODE;

   2285  2 000121   000102 236100                    LDQ     66,,PR0
         2 000122   000003 772000                    QRL     3
         2 000123   037777 376007                    ANQ     16383,DL
         2 000124   000000 624006                    EAX4    0,QL
         2 000125   000003 444000 xsym               SXL4    FI_ISRD+3

      171     2286    2               FI_ISRD.ARS=STK$->B$NWIO.ARS;

   2286  2 000126   000105 235100                    LDA     69,,PR0
         2 000127   000001 755000 xsym               STA     FI_ISRD+1
PL6.E3A0      #001=FIE$EVNT File=FIE$EVNT.:E05TSI                                TUE 07/29/97 15:26 Page:22   

      172     2287    2               FI_ISRD.TYC=STK$->B$NWIO.TYC;

   2287  2 000130   000104 236100                    LDQ     68,,PR0
         2 000131   000002 756000 xsym               STQ     FI_ISRD+2

      173     2288    2               FI_ISRD.DVBYTE=STK$->B$NWIO.DVE.DVBYTE;

   2288  2 000132   000106 236100                    LDQ     70,,PR0
         2 000133   776000 376003                    ANQ     -1024,DU
         2 000134   000003 552040 xsym               STBQ    FI_ISRD+3,'40'O

      174     2289    2               FI_ISRD.NAME=STK$->B$NWIO.CGPARM.STATION#;

   2289  2 000135   040000 100500                    MLR     fill='040'O
         2 000136   000107 000010                    ADSC9   71,,PR0                  cn=0,n=8
         2 000137   000004 000010 xsym               ADSC9   FI_ISRD+4                cn=0,n=8

      175     2290    2               GOTO ENDEVENT;

   2290  2 000140   000226 710000 2                  TRA     ENDEVENT

   2289  2 000141                       ISAU         null
      176     2291        /***
      177     2292         ***
      178     2293         ***     INSYM COMGROUP ADMINISTRATIVE USER EVENT
      179     2294         ***
      180     2295         ***/
      181     2296
      182     2297    2   ISAU:       ;
      183     2298    2               EVNT$->FI$EVNT.CODE=FIEV_ISAU#;

   2298  2 000141   000001 223003                    LDX3    1,DU
         2 000142   100001 743100                    STX3    1,,PR1
         2 000143   000226 710000 2                  TRA     ENDEVENT

      184     2299        /***
PL6.E3A0      #001=FIE$EVNT File=FIE$EVNT.:E05TSI                                TUE 07/29/97 15:26 Page:23   
      185     2300         ***
      186     2301         ***     APLCG READ COMPLETE
      187     2302         ***
      188     2303         ***/
      189     2304    2             CASE (FI_APLRD#);

      190     2305
      191     2306    2               EVNT$->FI$EVNT.ENDAC=FIEA_APLCG#;

   2306  2 000144   000003 222003                    LDX2    3,DU
         2 000145   100001 442100                    SXL2    1,,PR1

      192     2307    2               EVNT$->FI$EVNT.CITE$=ADDR(FI_APLRD);

   2307  2 000146   000011 236000 3                  LDQ     9
         2 000147   100002 756100                    STQ     2,,PR1

      193     2308    2               IF STK$->B$NWIO.CGPARM.MSGTYP# = '*AUEV' THEN GOTO APLAU;

   2308  2 000150   040000 106500                    CMPC    fill='040'O
         2 000151   000111 000010                    ADSC9   73,,PR0                  cn=0,n=8
         2 000152   000004 000005 1                  ADSC9   INSYMNAME+4              cn=0,n=5
         2 000153   000177 600000 2                  TZE     APLAU

      194     2309    2               EVNT$->FI$EVNT.CODE=FIEV_APLRD#;

   2309  2 000154   000005 223003                    LDX3    5,DU
         2 000155   100001 743100                    STX3    1,,PR1

      195     2310    2               FI_APLRD.CODE=FIEV_APLRD#;

   2310  2 000156   000000 743000 xsym               STX3    FI_APLRD

      196     2311    2               FI_APLRD.BUF$=ADDR(FI_APLCGBUF);

   2311  2 000157   000012 236000 3                  LDQ     10
         2 000160   000006 756000 xsym               STQ     FI_APLRD+6
PL6.E3A0      #001=FIE$EVNT File=FIE$EVNT.:E05TSI                                TUE 07/29/97 15:26 Page:24   

      197     2312    2               FI_APLRD.ERRCODE=STK$->B$NWIO.ERR.CODE;

   2312  2 000161   000102 236100                    LDQ     66,,PR0
         2 000162   000003 772000                    QRL     3
         2 000163   037777 376007                    ANQ     16383,DL
         2 000164   000000 624006                    EAX4    0,QL
         2 000165   000003 444000 xsym               SXL4    FI_APLRD+3

      198     2313    2               FI_APLRD.ARS=STK$->B$NWIO.ARS;

   2313  2 000166   000105 235100                    LDA     69,,PR0
         2 000167   000001 755000 xsym               STA     FI_APLRD+1

      199     2314    2               FI_APLRD.DVBYTE=STK$->B$NWIO.DVE.DVBYTE;

   2314  2 000170   000106 236100                    LDQ     70,,PR0
         2 000171   776000 376003                    ANQ     -1024,DU
         2 000172   000003 552040 xsym               STBQ    FI_APLRD+3,'40'O

      200     2315    2               FI_APLRD.NAME=STK$->B$NWIO.CGPARM.STATION#;

   2315  2 000173   040000 100500                    MLR     fill='040'O
         2 000174   000107 000010                    ADSC9   71,,PR0                  cn=0,n=8
         2 000175   000004 000010 xsym               ADSC9   FI_APLRD+4               cn=0,n=8

      201     2316    2               GOTO ENDEVENT;

   2316  2 000176   000226 710000 2                  TRA     ENDEVENT

   2315  2 000177                       APLAU        null
      202     2317        /***
      203     2318         ***
      204     2319         ***     APL COMGROUP ADMINISTRATIVE USER EVENT
      205     2320         ***
      206     2321         ***/
      207     2322
PL6.E3A0      #001=FIE$EVNT File=FIE$EVNT.:E05TSI                                TUE 07/29/97 15:26 Page:25   
      208     2323    2   APLAU:      ;
      209     2324    2               EVNT$->FI$EVNT.CODE=FIEV_APLAU#;

   2324  2 000177   000004 223003                    LDX3    4,DU
         2 000200   100001 743100                    STX3    1,,PR1
         2 000201   000226 710000 2                  TRA     ENDEVENT

      210     2325        /***
      211     2326         ***
      212     2327         ***          DISMOUNT MSG FROM PIG
      213     2328         ***
      214     2329         ***/
      215     2330    2             CASE (JG_SETDSMT#);

      216     2331
      217     2332    2               EVNT$->FI$EVNT.CODE=FIEV_DSMT#;

   2332  2 000202   000006 222003                    LDX2    6,DU
         2 000203   100001 742100                    STX2    1,,PR1

      218     2333    2               EVNT$->FI$EVNT.CITE$=ADDR(EVNT$->FI$EVNT.DSMT);

   2333  2 000204   000003 036003                    ADLQ    3,DU
         2 000205   100002 756100                    STQ     2,,PR1

      219     2334    2               EVNT$->FI$EVNT.DSMT.CODE=FIEV_DSMT#;

   2334  2 000206   100003 742100                    STX2    3,,PR1

      220     2335    2               EVNT$->FI$EVNT.DSMT.PSN=ADDR(STK$->B$EVNT.P#)->JG_DSMTMSG.PSN;

   2335  2 000207   040100 100500                    MLR     fill='040'O
         2 000210   000104 000006                    ADSC9   68,,PR0                  cn=0,n=6
         2 000211   100003 400006                    ADSC9   3,,PR1                   cn=2,n=6

      221     2336    2               EVNT$->FI$EVNT.DSMT.SETX=ADDR(STK$->B$EVNT.P#)->JG_DSMTMSG.SETX;

PL6.E3A0      #001=FIE$EVNT File=FIE$EVNT.:E05TSI                                TUE 07/29/97 15:26 Page:26   
   2336  2 000212   000105 723100                    LXL3    69,,PR0
         2 000213   100005 743100                    STX3    5,,PR1
         2 000214   000226 710000 2                  TRA     ENDEVENT

      222     2337        /***
      223     2338         ***
      224     2339         ***     UNKNOWN EVENT
      225     2340         ***
      226     2341         ***/
      227     2342    2             CASE (ELSE);

      228     2343
      229     2344    2               CALL SENV;

   2344  2 000215   000234 701000 2                  TSX1    SENV
         2 000216   000000 011000                    NOP     0

      230     2345    2               CALL FOI$SNAP (%S$FIUEV,F_FI,M_E);

   2345  2 000217   000014 630400 3                  EPPR0   12
         2 000220   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000221   000000 701000 xent               TSX1    FOI$SNAP
         2 000222   000000 011000                    NOP     0

   2344  2 000223                       NOEVENT      null
      231     2346        /*S* SCREECH_CODE: FIE-S$FIUEV
      232     2347             TYPE:         SNAP
      233     2348             MESSAGE:      Unknown event passed to INSYM
      234     2349             REMARKS:      INSYM's event receiver has encountered an
      235     2350                           unknown event code. */
      236     2351    2   NOEVENT:    ;
      237     2352    2               EVNT$->FI$EVNT.CODE=FIEV_NOP#;

   2352  2 000223   000000 220003                    LDX0    0,DU
         2 000224   200004 470500                    LDP0    EVNT$,,AUTO
         2 000225   000001 740100                    STX0    1,,PR0

PL6.E3A0      #001=FIE$EVNT File=FIE$EVNT.:E05TSI                                TUE 07/29/97 15:26 Page:27   
      238     2353        /***
      239     2354         ***               END OF EVENT TYPE DO CASE
      240     2355         ***/
      241     2356    2           END;

   2336  2 000226                       ENDEVENT     null
      242     2357
      243     2358        /**
      244     2359         **
      245     2360         ** EXIT FROM ALL EVENTS
      246     2361         **
      247     2362         **/
      248     2363    1   ENDEVENT:;
      249     2364    1         IF RENV = 1 THEN CALL M$RENV;

   2364  2 000226   200006 235100                    LDA     RENV,,AUTO
         2 000227   000001 115007                    CMPA    1,DL
         2 000230   000233 601000 2                  TNZ     s:2365

   2364  2 000231   010016 713400                    CLIMB   4110
         2 000232   000000 401760                    pmme    nvectors=0

      250     2365    1         RETURN;

   2365  2 000233   000000 702200 xent               TSX2  ! X66_AARET

      251     2366
      252     2367        /**** PROC TO SENV *****/
      253     2368    1   SENV: PROC;

   2368  2 000234   200010 741300       SENV         STX1  ! RENV+2,,AUTO

      254     2369    2         CALL M$SENV ALTRET(NOSENV);

   2369  2 000235   410011 713400                    CLIMB   alt,+4105
         2 000236   000000 401760                    pmme    nvectors=0
         2 000237   000244 702000 2                  TSX2    NOSENV
PL6.E3A0      #001=FIE$EVNT File=FIE$EVNT.:E05TSI                                TUE 07/29/97 15:26 Page:28   

      255     2370    2         RENV=1;

   2370  2 000240   000001 235007                    LDA     1,DL
         2 000241   200006 755100                    STA     RENV,,AUTO

      256     2371    2         RETURN;

   2371  2 000242   200010 221300                    LDX1  ! RENV+2,,AUTO
         2 000243   000001 702211                    TSX2  ! 1,X1

   2370  2 000244                       NOSENV       null
      257     2372    2   NOSENV:;
      258     2373    2         IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE = %E$ALTEMPTY THEN RETURN;

   2373  2 000244   000000 470400 xsym               LDP0    B$TCB$
         2 000245   000000 471500                    LDP1    0,,PR0
         2 000246   100102 236100                    LDQ     66,,PR1
         2 000247   377770 376007                    ANQ     131064,DL
         2 000250   007610 116007                    CMPQ    3976,DL
         2 000251   000254 601000 2                  TNZ     s:2374

   2373  2 000252   200010 221300                    LDX1  ! RENV+2,,AUTO
         2 000253   000001 702211                    TSX2  ! 1,X1

      259     2374    2         CALL M$MERC;

   2374  2 000254   010007 713400                    CLIMB   4103
         2 000255   000000 401760                    pmme    nvectors=0

      260     2375    2         RETURN;

   2375  2 000256   200010 221300                    LDX1  ! RENV+2,,AUTO
         2 000257   000001 702211                    TSX2  ! 1,X1

      261     2376    2   END SENV;
      262     2377        %EJECT;
PL6.E3A0      #001=FIE$EVNT File=FIE$EVNT.:E05TSI                                TUE 07/29/97 15:26 Page:29   
      263     2378        /**/
      264     2379        /*F* NAME:         FIE$XCON
      265     2380             PURPOSE:      To receive exit control for the INSYM ghost
      266     2381             DESCRIPTION:  Upon getting exit control, we simply invoke
      267     2382                           FOI$LDTRC to produce a SNAP dump and then
      268     2383                           LDTRC to ourself. */
      269     2384    1   FIE$XCON: ENTRY ASYNC;

   2384  2 000260   000000 700200 xent  FIE$XCON     TSX0  ! X66_AAUTO
         2 000261   000012 000000                    ZERO    10,0

      270     2385        /**/
      271     2386    1         CALL FOI$LDTRC (%S$FIXCON,F_FI,M_E,INSYMNAME);

   2386  2 000262   000020 630400 3                  EPPR0   16
         2 000263   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 000264   000000 701000 xent               TSX1    FOI$LDTRC
         2 000265   000000 011000                    NOP     0

      272     2387        /*S* SCREECH_CODE: FIE-S$FIXCON
      273     2388             TYPE:         SNAP
      274     2389             MESSAGE:      INSYM has aborted
      275     2390             REMARKS:      INSYM should never trap or abort.  If it does,
      276     2391                           this indicates that something is drastically
      277     2392                           wrong with INSYM.  A SNAP dump is taken, and
      278     2393                           INSYM starts a new copy of himself.  */
      279     2394        /**/
      280     2395        /**/
      281     2396    1   END FIE$EVNT;

   2396  2 000266   000000 702200 xent               TSX2  ! X66_AARET

PL6.E3A0      #001=FIE$EVNT File=FIE$EVNT.:E05TSI                                TUE 07/29/97 15:26 Page:30   
--  Include file information  --

   FI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   UE_ERRORS_C.:E05TOU  is referenced.
   FI_MAC_C.:E05TOU  is referenced.
   FOO_MAC_C.:E05TOU  is referenced.
   JG_EVID_C.:E05TOU  is referenced.
   FI_SUBS_C.:E05TOU  is referenced.
   FI_SCODE_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure FIE$EVNT.
PL6.E3A0      #001=FIE$EVNT File=FIE$EVNT.:E05TSI                                TUE 07/29/97 15:26 Page:31   

 **** Variables and constants ****

  ****  Section 001 RoData FIE$EVNT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d CHAR(8)     r     1 INSYMNAME

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w UBIN        r     1 EVENT                      5-0-0/w STRC        r     1 EVNT
     4-0-0/w PTR         r     1 EVNT$                      6-0-0/w UBIN        r     1 RENV
     3-0-0/w PTR         r     1 STK$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w STRC(1260)  r     1 FI_APLCGBUF
     0-0-0/w STRC(252)   r     1 FI_APLRD                   0-0-0/d CHAR(140)   r     1 FI_CSCGBUF
     0-0-0/w PTR         r     1 FI_EVHD$                   0-0-0/w PTR         r     1 FI_EVTL$
     0-0-0/w PTR         r     1 FI_FEVHD$                  0-0-0/w PTR         r     1 FI_FEVTL$
     0-0-0/d CHAR(1024)  r     1 FI_ISCGBUF                 0-0-0/w STRC(252)   r     1 FI_ISRD

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(2448)  r     1 B$EVNT
     0-0-0/w STRC(2880)  r     1 B$NWIO                     0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/w STRC(252)   r     1 FI$CITE                    0-0-0/w STRC(216)   r     1 FI$EVNT
PL6.E3A0      #001=FIE$EVNT File=FIE$EVNT.:E05TSI                                TUE 07/29/97 15:26 Page:32   
     0-0-0/w STRC(108)   r     1 JG_DSMTMSG


   Procedure FIE$EVNT requires 183 words for executable code.
   Procedure FIE$EVNT requires 10 words of local(AUTO) storage.

    No errors detected in file FIE$EVNT.:E05TSI    .
PL6.E3A0      #001=FIE$EVNT File=FIE$EVNT.:E05TSI                                TUE 07/29/97 15:26 Page:33   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=FIE$EVNT File=FIE$EVNT.:E05TSI                                TUE 07/29/97 15:26 Page:34   
          MINI XREF LISTING

APLAU
      2315**LABEL    2308--GOTO
B$ALT.CODE
      1877**DCL      1877--REDEF    1878--REDEF    1878--REDEF
B$ALT.ERR.CODE
      1879**DCL      2373>>IF
B$ALT.ERR.ERR#
      1879**DCL      1879--REDEF
B$ALT.EVID
      1878**DCL      1878--REDEF    1878--REDEF
B$EVNT.CODE
      1970**DCL      1970--REDEF    1971--REDEF    1971--REDEF
B$EVNT.ERR.ERR#
      1972**DCL      1972--REDEF
B$EVNT.EVID
      1971**DCL      1971--REDEF    1971--REDEF
B$EVNT.P#
      1974**DCL      2335--ASSIGN   2336--ASSIGN
B$NWIO.ARS
      1893**DCL      2286>>ASSIGN   2313>>ASSIGN
B$NWIO.CGPARM.MSGIDXT
      1917**DCL      1920--REDEF
B$NWIO.CGPARM.MSGTYP#
      1911**DCL      2281>>IF       2308>>IF
B$NWIO.CGPARM.STATION#
      1911**DCL      2269>>IF       2289>>ASSIGN   2315>>ASSIGN
B$NWIO.CODE
      1886**DCL      1886--REDEF    1887--REDEF    1887--REDEF
B$NWIO.DVE.DVBYTE
      1893**DCL      2288>>ASSIGN   2314>>ASSIGN
B$NWIO.ERR
      1887**DCL      2257>>IF
PL6.E3A0      #001=FIE$EVNT File=FIE$EVNT.:E05TSI                                TUE 07/29/97 15:26 Page:35   
B$NWIO.ERR.CODE
      1888**DCL      2285>>ASSIGN   2312>>ASSIGN
B$NWIO.ERR.ERR#
      1888**DCL      1888--REDEF
B$NWIO.EVID
      1887**DCL      1887--REDEF    1887--REDEF    2245>>ASSIGN
B$NWIO.TYC
      1893**DCL      2287>>ASSIGN
B$TCB.ALT$
      1873**DCL      2373>>IF
B$TCB.STK$
      1873**DCL      2220>>ASSIGN
B$TCB$
      2125**DCL      2220>>ASSIGN   2373>>IF
ENDEVENT
      2336**LABEL    2290--GOTO     2316--GOTO
EVENT
      2107**DCL      2108--REDEF    2245<<ASSIGN
EVNT.EVID
      2110**DCL      2247>>DOCASE
EVNT$
      2106**DCL      2226<<ASSIGN   2227>>ASSIGN   2229>>ASSIGN   2231>>ASSIGN   2232>>ASSIGN   2233>>ASSIGN
      2235>>ASSIGN   2255>>ASSIGN   2256>>ASSIGN   2270>>ASSIGN   2271>>ASSIGN   2279>>ASSIGN   2280>>ASSIGN
      2282>>ASSIGN   2298>>ASSIGN   2306>>ASSIGN   2307>>ASSIGN   2309>>ASSIGN   2324>>ASSIGN   2332>>ASSIGN
      2333>>ASSIGN   2333>>ASSIGN   2334>>ASSIGN   2335>>ASSIGN   2336>>ASSIGN   2352>>ASSIGN
FI$CITE.CODE
      2075**DCL      2270>>ASSIGN
FI$EVNT.CITE$
      2009**DCL      2256<<ASSIGN   2280<<ASSIGN   2307<<ASSIGN   2333<<ASSIGN
FI$EVNT.CODE
      2007**DCL      2270<<ASSIGN   2271<<ASSIGN   2282<<ASSIGN   2298<<ASSIGN   2309<<ASSIGN   2324<<ASSIGN
      2332<<ASSIGN   2352<<ASSIGN
FI$EVNT.DSMT
      2027**DCL      2333--ASSIGN
FI$EVNT.DSMT.CODE
      2030**DCL      2334<<ASSIGN
PL6.E3A0      #001=FIE$EVNT File=FIE$EVNT.:E05TSI                                TUE 07/29/97 15:26 Page:36   
FI$EVNT.DSMT.PSN
      2034**DCL      2335<<ASSIGN
FI$EVNT.DSMT.SETX
      2036**DCL      2336<<ASSIGN
FI$EVNT.ENDAC
      2008**DCL      2235<<ASSIGN   2255<<ASSIGN   2279<<ASSIGN   2306<<ASSIGN
FI$EVNT.LNK$
      2006**DCL      2227>>ASSIGN   2229<<ASSIGN   2232<<ASSIGN
FI_APLCGBUF
      2141**DCL      2311--ASSIGN
FI_APLCGBUF.INAME
      2144**DCL      2145--REDEF
FI_APLCGBUF.PARTNER1
      2148**DCL      2149--REDEF
FI_APLCGBUF.PARTNER2
      2152**DCL      2153--REDEF
FI_APLRD
      1756**DCL      2307--ASSIGN
FI_APLRD.ARS
      1770**DCL      2313<<ASSIGN
FI_APLRD.BUF$
      1781**DCL      2311<<ASSIGN
FI_APLRD.CODE
      1761**DCL      2310<<ASSIGN
FI_APLRD.DVBYTE
      1774**DCL      2314<<ASSIGN
FI_APLRD.ERRCODE
      1777**DCL      2312<<ASSIGN
FI_APLRD.NAME
      1779**DCL      2315<<ASSIGN
FI_CSCGBUF
      1609**DCL      1610--REDEF    2256--ASSIGN   2270--ASSIGN
FI_DEV_INIT.DEST
      1693**DCL      1694--REDEF
FI_DEV_INIT.NAME
      1668**DCL      1669--REDEF
PL6.E3A0      #001=FIE$EVNT File=FIE$EVNT.:E05TSI                                TUE 07/29/97 15:26 Page:37   
FI_EVHD$
      1646**DCL      2231<<ASSIGN
FI_EVTL$
      1647**DCL      2231>>IF       2232>>ASSIGN   2233<<ASSIGN
FI_FEVHD$
      1648**DCL      2226>>ASSIGN   2227<<ASSIGN   2228>>IF
FI_FEVTL$
      1649**DCL      2228<<ASSIGN
FI_ISCGBUF
      1614**DCL      2284--ASSIGN
FI_ISRD
      1712**DCL      2280--ASSIGN
FI_ISRD.ARS
      1726**DCL      2286<<ASSIGN
FI_ISRD.BUF$
      1737**DCL      2284<<ASSIGN
FI_ISRD.CODE
      1717**DCL      2283<<ASSIGN
FI_ISRD.DVBYTE
      1730**DCL      2288<<ASSIGN
FI_ISRD.ERRCODE
      1733**DCL      2285<<ASSIGN
FI_ISRD.NAME
      1735**DCL      2289<<ASSIGN
FI_ISRD.TYC
      1728**DCL      2287<<ASSIGN
FOI$LDTRC
      2126**DCL-ENT  2386--CALL
FOI$SNAP
      2127**DCL-ENT  2260--CALL     2345--CALL
INSYMNAME
      2118**DCL      2386<>CALL
ISAU
      2289**LABEL    2281--GOTO
JG_DSMTMSG.PSN
      1984**DCL      2335>>ASSIGN
PL6.E3A0      #001=FIE$EVNT File=FIE$EVNT.:E05TSI                                TUE 07/29/97 15:26 Page:38   
JG_DSMTMSG.SETX
      1985**DCL      2336>>ASSIGN
M$MERC
       104**DCL-ENT  2374--CALL
M$RENV
       104**DCL-ENT  2364--CALL
M$SENV
       104**DCL-ENT  2369--CALL
NOEVENT
      2344**LABEL    2267--GOTO
NOSENV IN PROCEDURE SENV
      2370**LABEL    2369--CALLALT
RENV
      2111**DCL      2221<<ASSIGN   2364>>IF       2370<<ASSIGN
SENV
      2368**PROC     2259--CALL     2344--CALL
STK$
      2105**DCL      2220<<ASSIGN   2245>>ASSIGN   2257>>IF       2269>>IF       2281>>IF       2285>>ASSIGN
      2286>>ASSIGN   2287>>ASSIGN   2288>>ASSIGN   2289>>ASSIGN   2308>>IF       2312>>ASSIGN   2313>>ASSIGN
      2314>>ASSIGN   2315>>ASSIGN   2335>>ASSIGN   2336>>ASSIGN
