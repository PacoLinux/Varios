VERSION E05

PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:1    
        1        1        /*M* ASB$EXT:   UTILITY ROUTINES USED BY SUPER.       */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  DMC,DMR,CCC,PLM=0,IND=3,CTI=5,DCI=6,IAD=0,DTI=0,IDT=0,ENI=3,
        8        8              ECU=3,CSU=3,SDI=3                                           */
        9        9        /*  ASB$EXT:  This module consists of procedures:
       10       10                      ASB$KEYMAKER
       11       11                      ASB$READ_SI
       12       12                      ASB$LEGL_CHAR
       13       13                      ASB$DATA_SEG
       14       14                      ASB$BINCHAR
       15       15                      ASB$BREAK
       16       16                      ASB$PIG_ACCT_ATTR
       17       17                      ASB$LIST
       18       18                      ASB$PIG
       19       19        */
       20       20                                                                   /**/
       21       21        /*M* ASB$KEYMAKER - builds a TEXTC key from 2 TEXTC strings in a parse block. */
       22       22                                                              /**/
       23       23        /*      Tabs 7,9,11,13,25,31,40,60     */
       24       24        /*    I i i i           i     i        i                   i  */
       25       25        ASB$KEYMAKER: PROC ( KEY, PAR$NODE, PROJ_FLAG, TYPE ) ALTRET ;
       26       26        /***********************************************************/
       27       27
       28       28        /*D*    NAME:     ASB$KEYMAKER
       29       29                CALL:     CALL ASB$KEYMAKER (KEY, PAR$NODE, PROJ_FLAG) ALTRET(LABEL)
       30       30              INTERFACE:
       31       31                          ASH$ERROR
       32       32                INPUT:    PAR$NODE   is the root node of the parse tree for the
       33       33                                     current command.
       34       34                          PROJ_FLAG  '1'B => build a key for a project.
       35       35                                     '0'B => build a key for a user.
       36       36                OUTPUT:   KEY        is a key type structure to
       37       37                                     receive the key.
PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:2    
       38       38                DESCRIPTION:  ASB$KEYMAKER is the routine to
       39       39                          build a TEXTC key from two TEXTC strings
       40       40                          in the parse block.
       41       41                                                                      */
       42       42
       43       43        /***********************************************************/
       44       44                                                              /**/
       45       45        %EJECT;
PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:3    
       46       46        /********************************************************************/
       47       47        /*   Include files   include files   include files   include files   */
       48       48        /*********************************************************************/
       49       49                                                              /**/
       50       50        %INCLUDE           AS_ENTRIES_M   ;
       51     1100        %INCLUDE           AS_SUPER_C     ;
       52     1535        %INCLUDE           AS_MAC_C       ;
       53     1615        %INCLUDE           AS_SUBS_C      ;
       54     3029        %INCLUDE           KL_SUPER_C     ;
       55     5931        %INCLUDE           XU_MACRO_C     ;
       56     9037        %INCLUDE           XU_FORMAT_C    ;
       57     9199        %INCLUDE           AS_SUPER_R     ;
       58    12215        %INCLUDE           AS_PERR_C      ;
       59    12817        %LIST ;
       60    12818        %PLIST ;
       61    12819                                                              /**/
       62    12820        %EJECT;
PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:4    
       63    12821        /********************************************************************/
       64    12822        /*   Parameters      parameters      parameters      parameters      */
       65    12823        /*********************************************************************/
       66    12824                                                              /**/
       67    12825    1   DCL 1 KEY ,
       68    12826    1          2 CNT UBIN(9) UNAL ,
       69    12827    1          2 TEXT CHAR(20) UNAL ,
       70    12828    1          2 U REDEF TEXT ,
       71    12829    1             3 ACCT CHAR(8) UNAL ,
       72    12830    1             3 NAME CHAR(12) UNAL ;
       73    12831        %LIST ;
       74    12832        %SET LISTSUB='1'B;
       75    12833
       76    12834    1   DCL PROJ_FLAG BIT(1) ALIGNED;
       77    12835    1   DCL TYPE UBIN ;
       78    12836            %PARSE$OUT( NAME=PAR$NODE, STCLASS=" " ) ;
             12837        /*F*  NAME:     PARSE$OUT
             12838              FUNCTION: a structure built by X$PARSE which corresponds to a "list",
             12839                  "alternative", "reducing alternative", or "koncat" node in
             12840                  the user's parse tree.
             12841        */
             12842    1   DCL 1 PAR$NODE ALIGNED,
             12843    1         2 TEMP BIT(1) UNAL,
             12844    1         2 * BIT (11) UNAL,
             12845    1         2 NDTYPE UBIN (6) UNAL,
             12846        /*K* NDTYPE - specifies the type of parse node to which this PARSE$OUT
             12847                  block corresponds.  See the XU_SUBS_C file for the
             12848                  %EQU symbols whose values may appear in this field.
             12849        */
             12850    1         2 CODE UBIN HALF HALIGNED,
             12851        /*K* CODE - Contains the numeric "node code" specified by the user when
             12852                  the corresponding parse-node was defined.
             12853        */
             12854    1         2 NSUBLKS UBIN HALF HALIGNED,
             12855        /*K* NSUBLKS - "number of sub-blocks".  This field contains the count of
             12856                  pointers actually available in the PARSE$OUT.SUBLK$ array.
             12857        */
PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:5    
             12858    1         2 SCRITCH UBIN HALF HALIGNED,
             12859        /*K* SCRITCH - an 18-bit scratch field reserved for the user.  X$PARSE
             12860                  initializes this field to zero when the PARSE$OUT structure
             12861                  is allocated, and never sets or examines it thereafter.
             12862                  The name of this field may be changed when the PARSE$OUT macro
             12863                  is invoked by the user (say "SCRITCH=yourname"), and its data
             12864                  type may also be changed (say "SCRMODE=pl6datatype" and
             12865                  "SCRALGN=alignment").  BEWARE: this field MUST be 18-bits long,
             12866                  and be UNALIGNED, CALIGNED, or HALIGNED.
             12867        */
             12868    1         2 CPOS UBIN WORD,
             12869        /*K* CPOS - "character position" of this block.  This field will contain
             12870                  a character index (starting at 0) into the original parse
             12871                  string;  the index identifies the first character of the
             12872                  string which was accepted by this node (or by any of its
             12873                  sub-nodes).
             12874        */
             12875    1         2 SUBLK$(0:0) PTR UNAL;
             12876        /*K* SUBLK$ - an array of PL-6 PTRs.  The number of elements in this array
             12877                  is found in OUT$BLK.NSUBLKS;  each PTR will point to another
             12878                  OUT$BLK structure, or to an OUT$SYM structure.
             12879        */
       79    12881        %EJECT;
PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:6    
       80    12882        /********************************************************************/
       81    12883        /*   Local based     local based     local based     local based     */
       82    12884        /*********************************************************************/
       83    12885                                                              /**/
       84    12886            %PARSE$OUT( NAME=P$NODE, STCLASS="BASED(NODE$)" ) ;
             12887        /*F*  NAME:     PARSE$OUT
             12888              FUNCTION: a structure built by X$PARSE which corresponds to a "list",
             12889                  "alternative", "reducing alternative", or "koncat" node in
             12890                  the user's parse tree.
             12891        */
             12892    1   DCL 1 P$NODE BASED(NODE$) ALIGNED,
             12893    1         2 TEMP BIT(1) UNAL,
             12894    1         2 * BIT (11) UNAL,
             12895    1         2 NDTYPE UBIN (6) UNAL,
             12896        /*K* NDTYPE - specifies the type of parse node to which this PARSE$OUT
             12897                  block corresponds.  See the XU_SUBS_C file for the
             12898                  %EQU symbols whose values may appear in this field.
             12899        */
             12900    1         2 CODE UBIN HALF HALIGNED,
             12901        /*K* CODE - Contains the numeric "node code" specified by the user when
             12902                  the corresponding parse-node was defined.
             12903        */
             12904    1         2 NSUBLKS UBIN HALF HALIGNED,
             12905        /*K* NSUBLKS - "number of sub-blocks".  This field contains the count of
             12906                  pointers actually available in the PARSE$OUT.SUBLK$ array.
             12907        */
             12908    1         2 SCRITCH UBIN HALF HALIGNED,
             12909        /*K* SCRITCH - an 18-bit scratch field reserved for the user.  X$PARSE
             12910                  initializes this field to zero when the PARSE$OUT structure
             12911                  is allocated, and never sets or examines it thereafter.
             12912                  The name of this field may be changed when the PARSE$OUT macro
             12913                  is invoked by the user (say "SCRITCH=yourname"), and its data
             12914                  type may also be changed (say "SCRMODE=pl6datatype" and
             12915                  "SCRALGN=alignment").  BEWARE: this field MUST be 18-bits long,
             12916                  and be UNALIGNED, CALIGNED, or HALIGNED.
             12917        */
             12918    1         2 CPOS UBIN WORD,
PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:7    
             12919        /*K* CPOS - "character position" of this block.  This field will contain
             12920                  a character index (starting at 0) into the original parse
             12921                  string;  the index identifies the first character of the
             12922                  string which was accepted by this node (or by any of its
             12923                  sub-nodes).
             12924        */
             12925    1         2 SUBLK$(0:0) PTR UNAL;
             12926        /*K* SUBLK$ - an array of PL-6 PTRs.  The number of elements in this array
             12927                  is found in OUT$BLK.NSUBLKS;  each PTR will point to another
             12928                  OUT$BLK structure, or to an OUT$SYM structure.
             12929        */
       85    12931                                                              /**/
       86    12932    1   DCL 1 VARY$STRUCT BASED ,
       87    12933    1          2 CNT UBIN(9) UNAL ,
       88    12934    1          2 TEXT CHAR(VARY$STRUCT.CNT) UNAL ;
       89    12935                                                              /**/
       90    12936        %PLIST;
       91    12937        %EJECT;
PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:8    
       92    12938        /********************************************************************/
       93    12939        /*   Entry points    entry points    entry points    entry points    */
       94    12940        /*********************************************************************/
       95    12941                                                              /**/
       96    12942        %ASH$ERROR ;
       97    12945                                                              /**/
       98    12946        %EJECT;
PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:9    
       99    12947        /********************************************************************/
      100    12948        /*   Auto data       auto data       auto data       auto data       */
      101    12949        /*********************************************************************/
      102    12950                                                              /**/
      103    12951    1   DCL CNT SBIN ;
      104    12952    1   DCL I SBIN ;
      105    12953    1   DCL ARS SBIN ;
      106    12954    1   DCL PTR$ PTR ;
      107    12955    1   DCL J  SBIN;
      108    12956    1   DCL K  SBIN;
      109    12957                                                              /**/
      110    12958        %EJECT;
PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:10   
      111    12959        /********************************************************************/
      112    12960        /*   Procedure       procedure       procedure       procedure       */
      113    12961        /*********************************************************************/
      114    12962                                                              /**/
      115    12963    1   AS_WILD_USER = AS_FALSE;
      116    12964    1   IF PAR$NODE.NSUBLKS = 0
      117    12965    2   THEN DO ;                       /* Must be list command */
      118    12966    2      KEY.U.ACCT = '?' ;
      119    12967    2      KEY.U.NAME = '?' ;
      120    12968    2      END ;
      121    12969    2   ELSE DO ;
      122    12970    3      IF PAR$NODE.SUBLK$(0)->P$NODE.CODE = 22   /*  DEFAULT_VAL */ THEN DO;
      123    12971    3         CNT = 7;
      124    12972    3         KEY.TEXT = 'DEFAULT';
      125    12973    3         END;
      126    12974    3      ELSE DO;
      127    12975    3         PTR$ = PAR$NODE.SUBLK$(0) -> P$NODE.SUBLK$(0) ;
      128    12976    3         CNT  = PTR$ -> VARY$STRUCT.CNT ;
      129    12977    3         KEY.TEXT = PTR$ -> VARY$STRUCT.TEXT ;
      130    12978    3         END;
      131    12979    2      IF CNT > 8
      132    12980    3      THEN DO ;
      133    12981        /*E* ERROR:   ASB-E$ACCTTOOBIG-C
      134    12982             MESSAGE: ACCOUNT can be at most 8 characters long.
      135    12983        */
      136    12984              %SCREAM( ERR#=E$ACCTTOOBIG, LEVEL=ERROR, MID='B' );
      137    12999    3         ALTRETURN ;
      138    13000    3         END ;
      139    13001    2      I = PAR$NODE.NSUBLKS ;
      140    13002    3      IF I = 1 THEN DO ;
      141    13003    3         IF KEY.U.ACCT = 'SCRATCH' THEN GOTO JUST_RET;
      142    13004    3         IF KEY.U.ACCT = 'DEFAULT'
      143    13005    4         THEN DO ;
      144    13006    5            IF PROJ_FLAG THEN DO ;
      145    13007    5               KEY.CNT = 8 ;
      146    13008    5               KEY.TEXT = 'DEFAULTP' ;
      147    13009    5               END ;
PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:11   
      148    13010    4            ELSE KEY.CNT = 7 ;
      149    13011    4   JUST_RET:
      150    13012    5            IF TYPE ~= 21   /*  FROM_VAL */ THEN DO;
      151    13013    5               AS_WILD_USER = AS_FALSE;
      152    13014    5               END;
      153    13015    4            RETURN ;
      154    13016    4            END ;
      155    13017    4         ELSE DO ;
      156    13018    4            IF TYPE = 35   /*  CREATE_VAL */
      157    13019    5            THEN DO;
      158    13020        /*E* ERROR:   ASB-E$ACCOUNT_NAME-C
      159    13021             MESSAGE: Must input "ACCOUNT,NAME".
      160    13022        */
      161    13023                    %SCREAM( ERR#=E$ACCOUNT_NAME, LEVEL=ERROR, MID='B' );
      162    13038    5               ALTRETURN ;
      163    13039    5               END ;   /* Then do */
      164    13040    4            KEY.U.NAME = '?' ;
      165    13041    4            END ;
      166    13042    3         END ;
      167    13043    3      ELSE DO ;                       /* I = 2 */
      168    13044    3         PTR$ = PAR$NODE.SUBLK$(1) -> P$NODE.SUBLK$(0) ;
      169    13045    3         CNT =  PTR$ -> VARY$STRUCT.CNT ;
      170    13046    3         IF CNT > 12
      171    13047    4         THEN DO ;
      172    13048        /*E* ERROR:   ASB-E$UNAME_TOO_LONG-C
      173    13049             MESSAGE: NAME can be at most 12 characters long.
      174    13050        */
      175    13051                 %SCREAM( ERR#=E$UNAME_TOO_LONG, LEVEL=ERROR, MID='B' );
      176    13066    4            ALTRETURN ;
      177    13067    4            END ; /* Then do */
      178    13068    3         KEY.U.NAME = PTR$ -> VARY$STRUCT.TEXT ;
      179    13069    3         KEY.CNT = CNT + 8 ;
      180    13070    3         END ;
      181    13071    2      END ;
      182    13072
      183    13073    1   IF TYPE = 21   /*  FROM_VAL */ THEN RETURN;
      184    13074    1   CALL INDEX (J,'?',KEY.U.ACCT)
PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:12   
      185    13075    2   WHENRETURN DO;
      186    13076    2      AS_WILD_USER = AS_TRUE;
      187    13077    2      END;   /*  Whenreturn  */
      188    13078    1   CALL INDEX (K,'?',KEY.U.NAME)
      189    13079    2   WHENRETURN DO;
      190    13080    2      AS_WILD_USER = AS_TRUE;
      191    13081    2      END;   /*  Whenreturn  */
      192    13082    1   AS_ACCT_MATCH = KEY.U.ACCT;
      193    13083    1   AS_NAME_MATCH = KEY.U.NAME;
      194    13084    2   IF AS_WILD_USER AND TYPE = 35   /*  CREATE_VAL */ THEN DO ;
      195    13085        /*E* ERROR:   ASB-E$ILLEGAL_WILDCARD-C
      196    13086             MESSAGE: CREATE does not allow wildcarding.
      197    13087        */
      198    13088           %SCREAM( ERR#=E$ILLEGAL_WILDCARD, LEVEL=ERROR, MID='B' );
      199    13103    2      AS_WILD_USER = AS_FALSE;
      200    13104    2      ALTRETURN ;
      201    13105    2      END ;
      202    13106
      203    13107                                                                   /**/
      204    13108    1   RETURN ;
      205    13109    1   END         ASB$KEYMAKER ;
      206    13110        %EOD ;

PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:13   
--  Include file information  --

   AS_PERR_C.:E05TOU  is referenced.
   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ASB$KEYMAKER.

   Procedure ASB$KEYMAKER requires 170 words for executable code.
   Procedure ASB$KEYMAKER requires 16 words of local(AUTO) storage.

PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:14   

 Object Unit name= ASB$KEYMAKER                               File name= ASB$EXT.:E05TOU
 UTS= JUL 29 '97 08:57:35.48 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$LO
    1  RoData even  UTS     10     12  ASB$KEYMAKER
    2   Proc  even  none   170    252  ASB$KEYMAKER
    3  RoData even  none     5      5  ASB$KEYMAKER

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        4  ASB$KEYMAKER

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 XU_OUTPUT_OPTIONS
         yes           Std       2 ASH$ERROR
                       nStd      0 X66_AUTO_4
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:15   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    AS_TRUE                          r    AS_FALSE                         r    AS_MODE
r    AS_FE_MODE                            M$LO                                  NODE$
     ERR_CODE                              REMEM_VAR                             REM_FCMD
     ASA_BRKS_LOC                          AS_ACCT_MATCH                         AS_NAME_MATCH
     AS_WILD_USER                          B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:16   


        1        1        /*M* ASB$EXT:   UTILITY ROUTINES USED BY SUPER.       */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  DMC,DMR,CCC,PLM=0,IND=3,CTI=5,DCI=6,IAD=0,DTI=0,IDT=0,ENI=3,
        8        8              ECU=3,CSU=3,SDI=3                                           */
        9        9        /*  ASB$EXT:  This module consists of procedures:
       10       10                      ASB$KEYMAKER
       11       11                      ASB$READ_SI
       12       12                      ASB$LEGL_CHAR
       13       13                      ASB$DATA_SEG
       14       14                      ASB$BINCHAR
       15       15                      ASB$BREAK
       16       16                      ASB$PIG_ACCT_ATTR
       17       17                      ASB$LIST
       18       18                      ASB$PIG
       19       19        */
       20       20                                                                   /**/
       21       21        /*M* ASB$KEYMAKER - builds a TEXTC key from 2 TEXTC strings in a parse block. */
       22       22                                                              /**/
       23       23        /*      Tabs 7,9,11,13,25,31,40,60     */
       24       24        /*    I i i i           i     i        i                   i  */
       25       25        ASB$KEYMAKER: PROC ( KEY, PAR$NODE, PROJ_FLAG, TYPE ) ALTRET ;

     25  2 000000   000000 700200 xent  ASB$KEYMAKER TSX0  ! X66_AUTO_4
         2 000001   000020 000004                    ZERO    16,4

       26       26        /***********************************************************/
       27       27
       28       28        /*D*    NAME:     ASB$KEYMAKER
       29       29                CALL:     CALL ASB$KEYMAKER (KEY, PAR$NODE, PROJ_FLAG) ALTRET(LABEL)
       30       30              INTERFACE:
       31       31                          ASH$ERROR
       32       32                INPUT:    PAR$NODE   is the root node of the parse tree for the
PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:17   
       33       33                                     current command.
       34       34                          PROJ_FLAG  '1'B => build a key for a project.
       35       35                                     '0'B => build a key for a user.
       36       36                OUTPUT:   KEY        is a key type structure to
       37       37                                     receive the key.
       38       38                DESCRIPTION:  ASB$KEYMAKER is the routine to
       39       39                          build a TEXTC key from two TEXTC strings
       40       40                          in the parse block.
       41       41                                                                      */
       42       42
       43       43        /***********************************************************/
       44       44                                                              /**/
       45       45        %EJECT;
PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:18   
       46       46        /********************************************************************/
       47       47        /*   Include files   include files   include files   include files   */
       48       48        /*********************************************************************/
       49       49                                                              /**/
       50       50        %INCLUDE           AS_ENTRIES_M   ;
       51     1100        %INCLUDE           AS_SUPER_C     ;
       52     1535        %INCLUDE           AS_MAC_C       ;
       53     1615        %INCLUDE           AS_SUBS_C      ;
       54     3029        %INCLUDE           KL_SUPER_C     ;
       55     5931        %INCLUDE           XU_MACRO_C     ;
       56     9037        %INCLUDE           XU_FORMAT_C    ;
       57     9199        %INCLUDE           AS_SUPER_R     ;
       58    12215        %INCLUDE           AS_PERR_C      ;
       59    12817        %LIST ;
       60    12818        %PLIST ;
       61    12819                                                              /**/
       62    12820        %EJECT;
PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:19   
       63    12821        /********************************************************************/
       64    12822        /*   Parameters      parameters      parameters      parameters      */
       65    12823        /*********************************************************************/
       66    12824                                                              /**/
       67    12825    1   DCL 1 KEY ,
       68    12826    1          2 CNT UBIN(9) UNAL ,
       69    12827    1          2 TEXT CHAR(20) UNAL ,
       70    12828    1          2 U REDEF TEXT ,
       71    12829    1             3 ACCT CHAR(8) UNAL ,
       72    12830    1             3 NAME CHAR(12) UNAL ;
       73    12831        %LIST ;
       74    12832        %SET LISTSUB='1'B;
       75    12833
       76    12834    1   DCL PROJ_FLAG BIT(1) ALIGNED;
       77    12835    1   DCL TYPE UBIN ;
       78    12836            %PARSE$OUT( NAME=PAR$NODE, STCLASS=" " ) ;
             12837        /*F*  NAME:     PARSE$OUT
             12838              FUNCTION: a structure built by X$PARSE which corresponds to a "list",
             12839                  "alternative", "reducing alternative", or "koncat" node in
             12840                  the user's parse tree.
             12841        */
             12842    1   DCL 1 PAR$NODE ALIGNED,
             12843    1         2 TEMP BIT(1) UNAL,
             12844    1         2 * BIT (11) UNAL,
             12845    1         2 NDTYPE UBIN (6) UNAL,
             12846        /*K* NDTYPE - specifies the type of parse node to which this PARSE$OUT
             12847                  block corresponds.  See the XU_SUBS_C file for the
             12848                  %EQU symbols whose values may appear in this field.
             12849        */
             12850    1         2 CODE UBIN HALF HALIGNED,
             12851        /*K* CODE - Contains the numeric "node code" specified by the user when
             12852                  the corresponding parse-node was defined.
             12853        */
             12854    1         2 NSUBLKS UBIN HALF HALIGNED,
             12855        /*K* NSUBLKS - "number of sub-blocks".  This field contains the count of
             12856                  pointers actually available in the PARSE$OUT.SUBLK$ array.
             12857        */
PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:20   
             12858    1         2 SCRITCH UBIN HALF HALIGNED,
             12859        /*K* SCRITCH - an 18-bit scratch field reserved for the user.  X$PARSE
             12860                  initializes this field to zero when the PARSE$OUT structure
             12861                  is allocated, and never sets or examines it thereafter.
             12862                  The name of this field may be changed when the PARSE$OUT macro
             12863                  is invoked by the user (say "SCRITCH=yourname"), and its data
             12864                  type may also be changed (say "SCRMODE=pl6datatype" and
             12865                  "SCRALGN=alignment").  BEWARE: this field MUST be 18-bits long,
             12866                  and be UNALIGNED, CALIGNED, or HALIGNED.
             12867        */
             12868    1         2 CPOS UBIN WORD,
             12869        /*K* CPOS - "character position" of this block.  This field will contain
             12870                  a character index (starting at 0) into the original parse
             12871                  string;  the index identifies the first character of the
             12872                  string which was accepted by this node (or by any of its
             12873                  sub-nodes).
             12874        */
             12875    1         2 SUBLK$(0:0) PTR UNAL;
             12876        /*K* SUBLK$ - an array of PL-6 PTRs.  The number of elements in this array
             12877                  is found in OUT$BLK.NSUBLKS;  each PTR will point to another
             12878                  OUT$BLK structure, or to an OUT$SYM structure.
             12879        */
       79    12881        %EJECT;
PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:21   
       80    12882        /********************************************************************/
       81    12883        /*   Local based     local based     local based     local based     */
       82    12884        /*********************************************************************/
       83    12885                                                              /**/
       84    12886            %PARSE$OUT( NAME=P$NODE, STCLASS="BASED(NODE$)" ) ;
             12887        /*F*  NAME:     PARSE$OUT
             12888              FUNCTION: a structure built by X$PARSE which corresponds to a "list",
             12889                  "alternative", "reducing alternative", or "koncat" node in
             12890                  the user's parse tree.
             12891        */
             12892    1   DCL 1 P$NODE BASED(NODE$) ALIGNED,
             12893    1         2 TEMP BIT(1) UNAL,
             12894    1         2 * BIT (11) UNAL,
             12895    1         2 NDTYPE UBIN (6) UNAL,
             12896        /*K* NDTYPE - specifies the type of parse node to which this PARSE$OUT
             12897                  block corresponds.  See the XU_SUBS_C file for the
             12898                  %EQU symbols whose values may appear in this field.
             12899        */
             12900    1         2 CODE UBIN HALF HALIGNED,
             12901        /*K* CODE - Contains the numeric "node code" specified by the user when
             12902                  the corresponding parse-node was defined.
             12903        */
             12904    1         2 NSUBLKS UBIN HALF HALIGNED,
             12905        /*K* NSUBLKS - "number of sub-blocks".  This field contains the count of
             12906                  pointers actually available in the PARSE$OUT.SUBLK$ array.
             12907        */
             12908    1         2 SCRITCH UBIN HALF HALIGNED,
             12909        /*K* SCRITCH - an 18-bit scratch field reserved for the user.  X$PARSE
             12910                  initializes this field to zero when the PARSE$OUT structure
             12911                  is allocated, and never sets or examines it thereafter.
             12912                  The name of this field may be changed when the PARSE$OUT macro
             12913                  is invoked by the user (say "SCRITCH=yourname"), and its data
             12914                  type may also be changed (say "SCRMODE=pl6datatype" and
             12915                  "SCRALGN=alignment").  BEWARE: this field MUST be 18-bits long,
             12916                  and be UNALIGNED, CALIGNED, or HALIGNED.
             12917        */
             12918    1         2 CPOS UBIN WORD,
PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:22   
             12919        /*K* CPOS - "character position" of this block.  This field will contain
             12920                  a character index (starting at 0) into the original parse
             12921                  string;  the index identifies the first character of the
             12922                  string which was accepted by this node (or by any of its
             12923                  sub-nodes).
             12924        */
             12925    1         2 SUBLK$(0:0) PTR UNAL;
             12926        /*K* SUBLK$ - an array of PL-6 PTRs.  The number of elements in this array
             12927                  is found in OUT$BLK.NSUBLKS;  each PTR will point to another
             12928                  OUT$BLK structure, or to an OUT$SYM structure.
             12929        */
       85    12931                                                              /**/
       86    12932    1   DCL 1 VARY$STRUCT BASED ,
       87    12933    1          2 CNT UBIN(9) UNAL ,
       88    12934    1          2 TEXT CHAR(VARY$STRUCT.CNT) UNAL ;
       89    12935                                                              /**/
       90    12936        %PLIST;
       91    12937        %EJECT;
PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:23   
       92    12938        /********************************************************************/
       93    12939        /*   Entry points    entry points    entry points    entry points    */
       94    12940        /*********************************************************************/
       95    12941                                                              /**/
       96    12942        %ASH$ERROR ;
       97    12945                                                              /**/
       98    12946        %EJECT;
PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:24   
       99    12947        /********************************************************************/
      100    12948        /*   Auto data       auto data       auto data       auto data       */
      101    12949        /*********************************************************************/
      102    12950                                                              /**/
      103    12951    1   DCL CNT SBIN ;
      104    12952    1   DCL I SBIN ;
      105    12953    1   DCL ARS SBIN ;
      106    12954    1   DCL PTR$ PTR ;
      107    12955    1   DCL J  SBIN;
      108    12956    1   DCL K  SBIN;
      109    12957                                                              /**/
      110    12958        %EJECT;
PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:25   
      111    12959        /********************************************************************/
      112    12960        /*   Procedure       procedure       procedure       procedure       */
      113    12961        /*********************************************************************/
      114    12962                                                              /**/
      115    12963    1   AS_WILD_USER = AS_FALSE;

  12963  2 000002   000000 236000 xsym               LDQ     AS_FALSE
         2 000003   400000 376003                    ANQ     -131072,DU
         2 000004   000000 756000 xsym               STQ     AS_WILD_USER

      116    12964    1   IF PAR$NODE.NSUBLKS = 0

  12964  2 000005   200004 470500                    LDP0    @PAR$NODE,,AUTO
         2 000006   000001 220100                    LDX0    1,,PR0
         2 000007   000020 601000 2                  TNZ     s:12970

      117    12965    2   THEN DO ;                       /* Must be list command */

      118    12966    2      KEY.U.ACCT = '?' ;

  12966  2 000010   200003 471500                    LDP1    @KEY,,AUTO
         2 000011   040100 100400                    MLR     fill='040'O
         2 000012   000000 000001 3                  ADSC9   0                        cn=0,n=1
         2 000013   100000 200010                    ADSC9   0,,PR1                   cn=1,n=8

      119    12967    2      KEY.U.NAME = '?' ;

  12967  2 000014   040100 100400                    MLR     fill='040'O
         2 000015   000000 000001 3                  ADSC9   0                        cn=0,n=1
         2 000016   100002 200014                    ADSC9   2,,PR1                   cn=1,n=12

      120    12968    2      END ;

  12968  2 000017   000176 710000 2                  TRA     s:13073

      121    12969    2   ELSE DO ;

PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:26   
      122    12970    3      IF PAR$NODE.SUBLK$(0)->P$NODE.CODE = 22   /*  DEFAULT_VAL */ THEN DO;

  12970  2 000020   000003 471500                    LDP1    3,,PR0
         2 000021   100000 721100                    LXL1    0,,PR1
         2 000022   000026 101003                    CMPX1   22,DU
         2 000023   000033 601000 2                  TNZ     s:12975

      123    12971    3         CNT = 7;

  12971  2 000024   000007 235007                    LDA     7,DL
         2 000025   200007 755100                    STA     CNT,,AUTO

      124    12972    3         KEY.TEXT = 'DEFAULT';

  12972  2 000026   200003 473500                    LDP3    @KEY,,AUTO
         2 000027   040100 100400                    MLR     fill='040'O
         2 000030   000000 000007 1                  ADSC9   0                        cn=0,n=7
         2 000031   300000 200024                    ADSC9   0,,PR3                   cn=1,n=20

      125    12973    3         END;

  12973  2 000032   000051 710000 2                  TRA     s:12979

      126    12974    3      ELSE DO;

      127    12975    3         PTR$ = PAR$NODE.SUBLK$(0) -> P$NODE.SUBLK$(0) ;

  12975  2 000033   100003 236100                    LDQ     3,,PR1
         2 000034   200012 756100                    STQ     PTR$,,AUTO

      128    12976    3         CNT  = PTR$ -> VARY$STRUCT.CNT ;

  12976  2 000035   200012 473500                    LDP3    PTR$,,AUTO
         2 000036   000100 101500                    MRL     fill='000'O
         2 000037   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         2 000040   200007 000004                    ADSC9   CNT,,AUTO                cn=0,n=4

PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:27   
      129    12977    3         KEY.TEXT = PTR$ -> VARY$STRUCT.TEXT ;

  12977  2 000041   000100 101500                    MRL     fill='000'O
         2 000042   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         2 000043   200016 000002                    ADSC9   K+2,,AUTO                cn=0,n=2
         2 000044   200016 220100                    LDX0    K+2,,AUTO
         2 000045   200003 471500                    LDP1    @KEY,,AUTO
         2 000046   040100 100540                    MLR     fill='040'O
         2 000047   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0
         2 000050   100000 200024                    ADSC9   0,,PR1                   cn=1,n=20

      130    12978    3         END;

      131    12979    2      IF CNT > 8

  12979  2 000051   200007 235100                    LDA     CNT,,AUTO
         2 000052   000010 115007                    CMPA    8,DL
         2 000053   000061 604400 2                  TMOZ    s:13001

      132    12980    3      THEN DO ;

      133    12981        /*E* ERROR:   ASB-E$ACCTTOOBIG-C
      134    12982             MESSAGE: ACCOUNT can be at most 8 characters long.
      135    12983        */
      136    12984              %SCREAM( ERR#=E$ACCTTOOBIG, LEVEL=ERROR, MID='B' );

  12996  2 000054   000001 630400 3                  EPPR0   1
         2 000055   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000056   000000 701000 xent               TSX1    ASH$ERROR
         2 000057   000000 011000                    NOP     0

      137    12999    3         ALTRETURN ;

  12999  2 000060   000000 702200 xent               TSX2  ! X66_AALT

      138    13000    3         END ;
      139    13001    2      I = PAR$NODE.NSUBLKS ;
PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:28   

  13001  2 000061   000001 236100                    LDQ     1,,PR0
         2 000062   000022 772000                    QRL     18
         2 000063   200010 756100                    STQ     I,,AUTO

      140    13002    3      IF I = 1 THEN DO ;

  13002  2 000064   000001 116007                    CMPQ    1,DL
         2 000065   000141 601000 2                  TNZ     s:13044

      141    13003    3         IF KEY.U.ACCT = 'SCRATCH' THEN GOTO JUST_RET;

  13003  2 000066   200003 471500                    LDP1    @KEY,,AUTO
         2 000067   040000 106500                    CMPC    fill='040'O
         2 000070   100000 200010                    ADSC9   0,,PR1                   cn=1,n=8
         2 000071   000003 000007 1                  ADSC9   3                        cn=0,n=7
         2 000072   000114 600000 2                  TZE     JUST_RET

      142    13004    3         IF KEY.U.ACCT = 'DEFAULT'

  13004  2 000073   040000 106500                    CMPC    fill='040'O
         2 000074   100000 200010                    ADSC9   0,,PR1                   cn=1,n=8
         2 000075   000000 000007 1                  ADSC9   0                        cn=0,n=7
         2 000076   000124 601000 2                  TNZ     s:13018

      143    13005    4         THEN DO ;

      144    13006    5            IF PROJ_FLAG THEN DO ;

  13006  2 000077   200005 473500                    LDP3    @PROJ_FLAG,,AUTO
         2 000100   300000 234100                    SZN     0,,PR3
         2 000101   000111 605000 2                  TPL     s:13010

      145    13007    5               KEY.CNT = 8 ;

  13007  2 000102   000100 101400                    MRL     fill='000'O
         2 000103   000012 000004 xsym               ADSC9   B_VECTNIL+10             cn=0,n=4
PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:29   
         2 000104   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

      146    13008    5               KEY.TEXT = 'DEFAULTP' ;

  13008  2 000105   040100 100400                    MLR     fill='040'O
         2 000106   000005 000010 1                  ADSC9   5                        cn=0,n=8
         2 000107   100000 200024                    ADSC9   0,,PR1                   cn=1,n=20

      147    13009    5               END ;

  13009  2 000110   000114 710000 2                  TRA     JUST_RET

      148    13010    4            ELSE KEY.CNT = 7 ;

  13010  2 000111   000100 101400                    MRL     fill='000'O
         2 000112   000011 000004 xsym               ADSC9   B_VECTNIL+9              cn=0,n=4
         2 000113   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

      149    13011    4   JUST_RET:
      150    13012    5            IF TYPE ~= 21   /*  FROM_VAL */ THEN DO;

  13012  2 000114   200006 473500       JUST_RET     LDP3    @TYPE,,AUTO
         2 000115   300000 235100                    LDA     0,,PR3
         2 000116   000025 115007                    CMPA    21,DL
         2 000117   000123 600000 2                  TZE     s:13015

      151    13013    5               AS_WILD_USER = AS_FALSE;

  13013  2 000120   000000 236000 xsym               LDQ     AS_FALSE
         2 000121   400000 376003                    ANQ     -131072,DU
         2 000122   000000 756000 xsym               STQ     AS_WILD_USER

      152    13014    5               END;

      153    13015    4            RETURN ;

  13015  2 000123   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:30   

      154    13016    4            END ;
      155    13017    4         ELSE DO ;

      156    13018    4            IF TYPE = 35   /*  CREATE_VAL */

  13018  2 000124   200006 473500                    LDP3    @TYPE,,AUTO
         2 000125   300000 235100                    LDA     0,,PR3
         2 000126   000043 115007                    CMPA    35,DL
         2 000127   000135 601000 2                  TNZ     s:13040

      157    13019    5            THEN DO;

      158    13020        /*E* ERROR:   ASB-E$ACCOUNT_NAME-C
      159    13021             MESSAGE: Must input "ACCOUNT,NAME".
      160    13022        */
      161    13023                    %SCREAM( ERR#=E$ACCOUNT_NAME, LEVEL=ERROR, MID='B' );

  13035  2 000130   000002 630400 3                  EPPR0   2
         2 000131   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000132   000000 701000 xent               TSX1    ASH$ERROR
         2 000133   000000 011000                    NOP     0

      162    13038    5               ALTRETURN ;

  13038  2 000134   000000 702200 xent               TSX2  ! X66_AALT

      163    13039    5               END ;   /* Then do */
      164    13040    4            KEY.U.NAME = '?' ;

  13040  2 000135   040100 100400                    MLR     fill='040'O
         2 000136   000000 000001 3                  ADSC9   0                        cn=0,n=1
         2 000137   100002 200014                    ADSC9   2,,PR1                   cn=1,n=12

      165    13041    4            END ;

      166    13042    3         END ;
PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:31   

  13042  2 000140   000176 710000 2                  TRA     s:13073

      167    13043    3      ELSE DO ;                       /* I = 2 */

      168    13044    3         PTR$ = PAR$NODE.SUBLK$(1) -> P$NODE.SUBLK$(0) ;

  13044  2 000141   000004 471500                    LDP1    4,,PR0
         2 000142   100003 236100                    LDQ     3,,PR1
         2 000143   200012 756100                    STQ     PTR$,,AUTO

      169    13045    3         CNT =  PTR$ -> VARY$STRUCT.CNT ;

  13045  2 000144   200012 473500                    LDP3    PTR$,,AUTO
         2 000145   000100 101500                    MRL     fill='000'O
         2 000146   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         2 000147   200007 000004                    ADSC9   CNT,,AUTO                cn=0,n=4

      170    13046    3         IF CNT > 12

  13046  2 000150   200007 235100                    LDA     CNT,,AUTO
         2 000151   000014 115007                    CMPA    12,DL
         2 000152   000160 604400 2                  TMOZ    s:13068

      171    13047    4         THEN DO ;

      172    13048        /*E* ERROR:   ASB-E$UNAME_TOO_LONG-C
      173    13049             MESSAGE: NAME can be at most 12 characters long.
      174    13050        */
      175    13051                 %SCREAM( ERR#=E$UNAME_TOO_LONG, LEVEL=ERROR, MID='B' );

  13063  2 000153   000003 630400 3                  EPPR0   3
         2 000154   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000155   000000 701000 xent               TSX1    ASH$ERROR
         2 000156   000000 011000                    NOP     0

      176    13066    4            ALTRETURN ;
PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:32   

  13066  2 000157   000000 702200 xent               TSX2  ! X66_AALT

      177    13067    4            END ; /* Then do */
      178    13068    3         KEY.U.NAME = PTR$ -> VARY$STRUCT.TEXT ;

  13068  2 000160   000100 101500                    MRL     fill='000'O
         2 000161   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         2 000162   200016 000002                    ADSC9   K+2,,AUTO                cn=0,n=2
         2 000163   200016 220100                    LDX0    K+2,,AUTO
         2 000164   200003 471500                    LDP1    @KEY,,AUTO
         2 000165   040100 100540                    MLR     fill='040'O
         2 000166   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0
         2 000167   100002 200014                    ADSC9   2,,PR1                   cn=1,n=12

      179    13069    3         KEY.CNT = CNT + 8 ;

  13069  2 000170   200007 236100                    LDQ     CNT,,AUTO
         2 000171   000010 036007                    ADLQ    8,DL
         2 000172   200016 756100                    STQ     K+2,,AUTO
         2 000173   000100 101500                    MRL     fill='000'O
         2 000174   200016 000004                    ADSC9   K+2,,AUTO                cn=0,n=4
         2 000175   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

      180    13070    3         END ;

      181    13071    2      END ;

      182    13072
      183    13073    1   IF TYPE = 21   /*  FROM_VAL */ THEN RETURN;

  13073  2 000176   200006 473500                    LDP3    @TYPE,,AUTO
         2 000177   300000 235100                    LDA     0,,PR3
         2 000200   000025 115007                    CMPA    21,DL
         2 000201   000203 601000 2                  TNZ     s:13074

  13073  2 000202   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:33   

      184    13074    1   CALL INDEX (J,'?',KEY.U.ACCT)

  13074  2 000203   000000 124500                    SCM     mask='000'O
         2 000204   100000 200010                    ADSC9   0,,PR1                   cn=1,n=8
         2 000205   000000 000001 3                  ADSC9   0                        cn=0,n=1
         2 000206   200013 000100                    ARG     J,,AUTO
         2 000207   000213 606400 2                  TTN     s:13078

      185    13075    2   WHENRETURN DO;

      186    13076    2      AS_WILD_USER = AS_TRUE;

  13076  2 000210   000000 236000 xsym               LDQ     AS_TRUE
         2 000211   400000 376003                    ANQ     -131072,DU
         2 000212   000000 756000 xsym               STQ     AS_WILD_USER

      187    13077    2      END;   /*  Whenreturn  */

      188    13078    1   CALL INDEX (K,'?',KEY.U.NAME)

  13078  2 000213   200003 470500                    LDP0    @KEY,,AUTO
         2 000214   000000 124500                    SCM     mask='000'O
         2 000215   000002 200014                    ADSC9   2,,PR0                   cn=1,n=12
         2 000216   000000 000001 3                  ADSC9   0                        cn=0,n=1
         2 000217   200014 000100                    ARG     K,,AUTO
         2 000220   000224 606400 2                  TTN     s:13082

      189    13079    2   WHENRETURN DO;

      190    13080    2      AS_WILD_USER = AS_TRUE;

  13080  2 000221   000000 236000 xsym               LDQ     AS_TRUE
         2 000222   400000 376003                    ANQ     -131072,DU
         2 000223   000000 756000 xsym               STQ     AS_WILD_USER

      191    13081    2      END;   /*  Whenreturn  */
PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:34   

      192    13082    1   AS_ACCT_MATCH = KEY.U.ACCT;

  13082  2 000224   200003 470500                    LDP0    @KEY,,AUTO
         2 000225   040000 100500                    MLR     fill='040'O
         2 000226   000000 200010                    ADSC9   0,,PR0                   cn=1,n=8
         2 000227   000000 000010 xsym               ADSC9   AS_ACCT_MATCH            cn=0,n=8

      193    13083    1   AS_NAME_MATCH = KEY.U.NAME;

  13083  2 000230   040000 100500                    MLR     fill='040'O
         2 000231   000002 200014                    ADSC9   2,,PR0                   cn=1,n=12
         2 000232   000000 000014 xsym               ADSC9   AS_NAME_MATCH            cn=0,n=12

      194    13084    2   IF AS_WILD_USER AND TYPE = 35   /*  CREATE_VAL */ THEN DO ;

  13084  2 000233   000000 234000 xsym               SZN     AS_WILD_USER
         2 000234   000251 605000 2                  TPL     s:13108
         2 000235   200006 471500                    LDP1    @TYPE,,AUTO
         2 000236   100000 235100                    LDA     0,,PR1
         2 000237   000043 115007                    CMPA    35,DL
         2 000240   000251 601000 2                  TNZ     s:13108

      195    13085        /*E* ERROR:   ASB-E$ILLEGAL_WILDCARD-C
      196    13086             MESSAGE: CREATE does not allow wildcarding.
      197    13087        */
      198    13088           %SCREAM( ERR#=E$ILLEGAL_WILDCARD, LEVEL=ERROR, MID='B' );

  13100  2 000241   000004 630400 3                  EPPR0   4
         2 000242   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000243   000000 701000 xent               TSX1    ASH$ERROR
         2 000244   000000 011000                    NOP     0

      199    13103    2      AS_WILD_USER = AS_FALSE;

  13103  2 000245   000000 236000 xsym               LDQ     AS_FALSE
         2 000246   400000 376003                    ANQ     -131072,DU
PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:35   
         2 000247   000000 756000 xsym               STQ     AS_WILD_USER

      200    13104    2      ALTRETURN ;

  13104  2 000250   000000 702200 xent               TSX2  ! X66_AALT

      201    13105    2      END ;
      202    13106
      203    13107                                                                   /**/
      204    13108    1   RETURN ;

  13108  2 000251   000000 702200 xent               TSX2  ! X66_ARET
      205    13109    1   END         ASB$KEYMAKER ;
      206    13110        %EOD ;

PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:36   
--  Include file information  --

   AS_PERR_C.:E05TOU  is referenced.
   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ASB$KEYMAKER.
PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:37   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @KEY                       4-0-0/w PTR         r     1 @PAR$NODE
     5-0-0/w PTR         r     1 @PROJ_FLAG                 6-0-0/w PTR         r     1 @TYPE
     7-0-0/w SBIN        r     1 CNT                       10-0-0/w SBIN        r     1 I
    13-0-0/w SBIN        r     1 J                         14-0-0/w SBIN        r     1 K
    *0-0-0/c STRC(189)   r     1 KEY                       *0-0-0/w STRC(144)   r     1 PAR$NODE
    *0-0-0/w BIT         r     1 PROJ_FLAG                 12-0-0/w PTR         r     1 PTR$
    *0-0-0/w UBIN        r     1 TYPE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(8)     r     1 AS_ACCT_MATCH              0-0-0/b BIT         r     1 AS_FALSE
     0-0-0/c CHAR(12)    r     1 AS_NAME_MATCH              0-0-0/b BIT         r     1 AS_TRUE
     0-0-0/b BIT         r     1 AS_WILD_USER               0-0-0/w PTR         r     1 NODE$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(144)   r     1 P$NODE                     0-0-0/c ASTR(9)     r     1 VARY$STRUCT


   Procedure ASB$KEYMAKER requires 170 words for executable code.
   Procedure ASB$KEYMAKER requires 16 words of local(AUTO) storage.
PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:38   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:39   
          MINI XREF LISTING

ASA_BRKS_LOC
      9363**DCL      9363--REDEF
ASH$ERROR
     12943**DCL-ENT 12996--CALL    13035--CALL    13063--CALL    13100--CALL
AS_ACCT_MATCH
      9368**DCL     13082<<ASSIGN
AS_DEFAULT.BANNER_PERM
     10056**DCL     10057--REDEF
AS_DEFAULT.BUDGET.MACCT
      9961**DCL      9965--REDEF
AS_DEFAULT.BUDGET.MAX_PROJECTS
      9974**DCL      9977--REDEF
AS_DEFAULT.BUDGET.PACCUM
      9957**DCL      9959--REDEF
AS_DEFAULT.BUDGET.PMAXC
      9952**DCL      9954--REDEF
AS_DEFAULT.SETUP_CHRA.TXT
     10072**DCL     10073--REDEF   10074--REDEF
AS_DEFAULT_DREC.PASSWORD
     11326**DCL     11330--REDEF
AS_DEFAULT_DREC.RENAME
     11349**DCL     11350--REDEF
AS_DFLT.BANNER_PERM
      9878**DCL      9879--REDEF
AS_DFLT.BUDGET.MACCT
      9783**DCL      9787--REDEF
AS_DFLT.BUDGET.MAX_PROJECTS
      9796**DCL      9799--REDEF
AS_DFLT.BUDGET.PACCUM
      9779**DCL      9781--REDEF
AS_DFLT.BUDGET.PMAXC
      9774**DCL      9776--REDEF
PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:40   
AS_DFLT.SETUP_CHRA.TXT
      9894**DCL      9895--REDEF    9896--REDEF
AS_FALSE
      9223**DCL     12963>>ASSIGN  13013>>ASSIGN  13103>>ASSIGN
AS_FE_MODE
      9229**DCL      9230--REDEF
AS_MODE
      9226**DCL      9228--REDEF
AS_MOD_USER.ACCESS
     12091**DCL     12092--REDEF
AS_MOD_USER.BANNER
     12078**DCL     12079--REDEF
AS_MOD_USER.BANNER_PERM
     12080**DCL     12081--REDEF
AS_MOD_USER.BILL
     12086**DCL     12087--REDEF
AS_MOD_USER.CPROC
     12082**DCL     12083--REDEF
AS_MOD_USER.FEBILL
     12162**DCL     12163--REDEF
AS_MOD_USER.FECXTMEM
     12179**DCL     12180--REDEF
AS_MOD_USER.FEMINTS
     12164**DCL     12165--REDEF
AS_MOD_USER.FEMMEM
     12175**DCL     12176--REDEF
AS_MOD_USER.FEMTIME
     12173**DCL     12174--REDEF
AS_MOD_USER.FEPPRIV
     12170**DCL     12172--REDEF
AS_MOD_USER.FEPRIV
     12167**DCL     12169--REDEF
AS_MOD_USER.FORCE_BIT
     12076**DCL     12077--REDEF
AS_MOD_USER.KEY
     12158**DCL     12160--REDEF
PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:41   
AS_MOD_USER.LASTCPROC
     12084**DCL     12085--REDEF
AS_MOD_USER.LIMITS.DO_
     12132**DCL     12133--REDEF
AS_MOD_USER.LIMITS.FPOOLS
     12148**DCL     12149--REDEF
AS_MOD_USER.LIMITS.LO
     12128**DCL     12129--REDEF
AS_MOD_USER.LIMITS.MEM
     12124**DCL     12125--REDEF
AS_MOD_USER.LIMITS.MPRIO
     12152**DCL     12153--REDEF
AS_MOD_USER.LIMITS.PDIS
     12140**DCL     12141--REDEF
AS_MOD_USER.LIMITS.PO
     12136**DCL     12137--REDEF
AS_MOD_USER.LIMITS.TDIS
     12144**DCL     12145--REDEF
AS_MOD_USER.LIMITS.TIME
     12120**DCL     12121--REDEF
AS_MOD_USER.MAXENQ
     12101**DCL     12102--REDEF
AS_MOD_USER.PERM_BIT
     12074**DCL     12075--REDEF
AS_MOD_USER.PPRIV
     12096**DCL     12098--REDEF
AS_MOD_USER.PRIOB
     12103**DCL     12104--REDEF
AS_MOD_USER.PRIV
     12093**DCL     12095--REDEF
AS_MOD_USER.QUAN
     12099**DCL     12100--REDEF
AS_MOD_USER.SETUP
     12072**DCL     12073--REDEF
AS_NAME_MATCH
      9368**DCL     13083<<ASSIGN
PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:42   
AS_PROJECT.BANNER_PERM
     10412**DCL     10413--REDEF
AS_PROJECT.BUDGET.MACCT
     10317**DCL     10321--REDEF
AS_PROJECT.BUDGET.MAX_PROJECTS
     10330**DCL     10333--REDEF
AS_PROJECT.BUDGET.PACCUM
     10313**DCL     10315--REDEF
AS_PROJECT.BUDGET.PMAXC
     10308**DCL     10310--REDEF
AS_PROJECT.SETUP_CHRA.TXT
     10428**DCL     10429--REDEF   10430--REDEF
AS_PROJECT_DFLT.BANNER_PERM
     10590**DCL     10591--REDEF
AS_PROJECT_DFLT.BUDGET.MACCT
     10495**DCL     10499--REDEF
AS_PROJECT_DFLT.BUDGET.MAX_PROJECTS
     10508**DCL     10511--REDEF
AS_PROJECT_DFLT.BUDGET.PACCUM
     10491**DCL     10493--REDEF
AS_PROJECT_DFLT.BUDGET.PMAXC
     10486**DCL     10488--REDEF
AS_PROJECT_DFLT.SETUP_CHRA.TXT
     10606**DCL     10607--REDEF   10608--REDEF
AS_PROJECT_DFLT_DREC.PASSWORD
     11812**DCL     11816--REDEF
AS_PROJECT_DFLT_DREC.RENAME
     11835**DCL     11836--REDEF
AS_PROJECT_DREC.PASSWORD
     11650**DCL     11654--REDEF
AS_PROJECT_DREC.RENAME
     11673**DCL     11674--REDEF
AS_PROJ_ADMIN.BANNER_PERM
     10234**DCL     10235--REDEF
AS_PROJ_ADMIN.BUDGET.MACCT
     10139**DCL     10143--REDEF
PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:43   
AS_PROJ_ADMIN.BUDGET.MAX_PROJECTS
     10152**DCL     10155--REDEF
AS_PROJ_ADMIN.BUDGET.PACCUM
     10135**DCL     10137--REDEF
AS_PROJ_ADMIN.BUDGET.PMAXC
     10130**DCL     10132--REDEF
AS_PROJ_ADMIN.SETUP_CHRA.TXT
     10250**DCL     10251--REDEF   10252--REDEF
AS_PROJ_ADMIN_DREC.PASSWORD
     11488**DCL     11492--REDEF
AS_PROJ_ADMIN_DREC.RENAME
     11511**DCL     11512--REDEF
AS_TRUE
      9223**DCL     13076>>ASSIGN  13080>>ASSIGN
AS_USERS.BANNER_PERM
      9700**DCL      9701--REDEF
AS_USERS.BUDGET.MACCT
      9605**DCL      9609--REDEF
AS_USERS.BUDGET.MAX_PROJECTS
      9618**DCL      9621--REDEF
AS_USERS.BUDGET.PACCUM
      9601**DCL      9603--REDEF
AS_USERS.BUDGET.PMAXC
      9596**DCL      9598--REDEF
AS_USERS.SETUP_CHRA.TXT
      9716**DCL      9717--REDEF    9718--REDEF
AS_USERS_CONSTANT.BANNER_PERM
     10768**DCL     10769--REDEF
AS_USERS_CONSTANT.BUDGET.MACCT
     10673**DCL     10677--REDEF
AS_USERS_CONSTANT.BUDGET.MAX_PROJECTS
     10686**DCL     10689--REDEF
AS_USERS_CONSTANT.BUDGET.PACCUM
     10669**DCL     10671--REDEF
AS_USERS_CONSTANT.BUDGET.PMAXC
     10664**DCL     10666--REDEF
PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:44   
AS_USERS_CONSTANT.SETUP_CHRA.TXT
     10784**DCL     10785--REDEF   10786--REDEF
AS_WILD_USER
      9368**DCL     12963<<ASSIGN  13013<<ASSIGN  13076<<ASSIGN  13080<<ASSIGN  13084>>IF      13103<<ASSIGN
CNT
     12951**DCL     12971<<ASSIGN  12976<<ASSIGN  12979>>IF      13045<<ASSIGN  13046>>IF      13069>>ASSIGN
ERR_CODE
      9358**DCL      9359--REDEF
I
     12952**DCL     13001<<ASSIGN  13002>>IF
J
     12955**DCL     13074<<CALLBLT
JUST_RET
     13012**LABEL   13003--GOTO
K
     12956**DCL     13078<<CALLBLT
KEY
     12825**DCL        25--PROC
KEY.CNT
     12826**DCL     13007<<ASSIGN  13010<<ASSIGN  13069<<ASSIGN
KEY.TEXT
     12827**DCL     12828--REDEF   12972<<ASSIGN  12977<<ASSIGN  13008<<ASSIGN
KEY.U.ACCT
     12829**DCL     12966<<ASSIGN  13003>>IF      13004>>IF      13074>>CALLBLT 13082>>ASSIGN
KEY.U.NAME
     12830**DCL     12967<<ASSIGN  13040<<ASSIGN  13068<<ASSIGN  13078>>CALLBLT 13083>>ASSIGN
KL_DEFAULT.PASSWORD
     11974**DCL     11978--REDEF
KL_DEFAULT.RENAME
     11997**DCL     11998--REDEF
KL_DFLT.PASSWORD
     11164**DCL     11168--REDEF
KL_DFLT.RENAME
     11187**DCL     11188--REDEF
KL_DREC.PASSWORD
     11002**DCL     11006--REDEF
PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:45   
KL_DREC.RENAME
     11025**DCL     11026--REDEF
KL_DREC_CNT.PASSWORD
     10889**DCL     10893--REDEF
KL_DREC_CNT.RENAME
     10912**DCL     10913--REDEF
NODE$
      9356**DCL     12892--IMP-PTR
P$NODE.CODE
     12900**DCL     12970>>IF
P$NODE.SUBLK$
     12925**DCL     12975>>ASSIGN  13044>>ASSIGN
PAR$NODE
     12842**DCL        25--PROC
PAR$NODE.NSUBLKS
     12854**DCL     12964>>IF      13001>>ASSIGN
PAR$NODE.SUBLK$
     12875**DCL     12970>>IF      12975>>ASSIGN  13044>>ASSIGN
PROJ_FLAG
     12834**DCL        25--PROC    13006>>IF
PROJ_KEY.TEXT
      9236**DCL      9236--REDEF
PROJ_KEY.TXT.PROJECT
      9236**DCL      9236--REDEF
PTR$
     12954**DCL     12975<<ASSIGN  12976>>ASSIGN  12977>>ASSIGN  12977>>ASSIGN  13044<<ASSIGN  13045>>ASSIGN
     13068>>ASSIGN  13068>>ASSIGN
REMEM_VAR
      9362**DCL      9362--REDEF
REM_FCMD
      9362**DCL      9363--REDEF
TYPE
     12835**DCL        25--PROC    13012>>IF      13018>>IF      13073>>IF      13084>>IF
USERS_KEY.TEXT
      9233**DCL      9234--REDEF    9234--REDEF    9234--REDEF    9235--REDEF
VARY$STRUCT.CNT
PL6.E3A0      #001=ASB$KEYMAKER File=ASB$EXT.:E05TSI                             TUE 07/29/97 08:57 Page:46   
     12933**DCL     12934--IMP-SIZ 12976>>ASSIGN  12977>>ASSIGN  13045>>ASSIGN  13068>>ASSIGN
VARY$STRUCT.TEXT
     12934**DCL     12977>>ASSIGN  13068>>ASSIGN

PL6.E3A0      #002=ASB$READ_SI File=ASB$EXT.:E05TSI                              TUE 07/29/97 08:58 Page:47   
      207        1        /*T***********************************************************/
      208        2        /*T*                                                         */
      209        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      210        4        /*T*                                                         */
      211        5        /*T***********************************************************/
      212        6                                                              /**/
      213        7        ASB$READ_SI: PROC(BUF, SIZE);
      214        8
      215        9        /*D*  NAME:     ASB$READ_SI
      216       10              CALL:     CALL ASB$READ_SI( BUF, SIZE );
      217       11              INPUT:    BUF        is the buffer to be used for the read.
      218       12              OUTPUT:   SIZE       is the number of characters read.
      219       13              DESCRIPTION:    Reads record through M$SI and returns the size of
      220       14                              the record read.
      221       15        */
      222       16        /*D*  NAME:     ASB$WRITE_LO
      223       17              CALL:     CALL ASB$WRITE_LO( BUF, SIZE );
      224       18              INPUT:    BUF        is the buffer to be written through M$LO.
      225       19                        SIZE       is the size of BUF in bytes.
      226       20              DESCRIPTION:    BUF is written through M$LO.
      227       21        */
      228       22        /*D*  NAME:     ASB$PAGE_LO
      229       23              CALL:     CALL ASB$PAGE_LO
      230       24              DESCRIPTION: Causes page eject on M$LO.
      231       25        */
      232       26        /*D*  NAME:     ASB$CLOSE_LO
      233       27              CALL:     CALL ASB$CLOSE_LO
      234       28              DESCRIPTION: M$LO is closed.
      235       29        */
      236       30    1   DCL BUF CHAR(255) ;
      237       31    1   DCL SIZE SBIN;
      238       32    1   DCL BUF2 CHAR(255);
      239       33    1   DCL M$SI$ PTR STATIC SYMDEF;
      240       34    1   DCL M$LO$ PTR STATIC SYMDEF ;
      241       35    1   DCL M$SI DCB;
      242       36    1   DCL M$DO DCB;
      243       37
PL6.E3A0      #002=ASB$READ_SI File=ASB$EXT.:E05TSI                              TUE 07/29/97 08:58 Page:48   
      244       38        /*********************************************************************/
      245       39        /*   Include files   include files   include files   include files   */
      246       40        /*********************************************************************/
      247       41
      248       42        %INCLUDE           AS_SUPER_C  ;
      249      477        %INCLUDE           AS_MAC_C    ;
      250      557        %INCLUDE           AS_SUBS_C   ;
      251     1971        %INCLUDE           KL_SUPER_C  ;
      252     4873        %INCLUDE           XU_MACRO_C  ;
      253     7979        %INCLUDE           XU_FORMAT_C ;
      254     8141        %INCLUDE           AS_SUPER_R  ;
      255    11157        %INCLUDE           CP_6        ;
      256    11238        %INCLUDE           CP_6_SUBS   ;
      257    11778
      258    11779        /*********************************************************************/
      259    11780        /*   Fpts            fpts            fpts            fpts            */
      260    11781        /*********************************************************************/
      261    11782
      262    11783        %FPT_OPEN(DCB=M$LO,FUN=CREATE,EXIST=NEWFILE);
      263    11892        %FPT_READ(DCB=M$SI,FPTN=RFPT);
      264    11931        %FPT_WRITE(FPTN=WFPT,DCB=M$LO);
      265    11962        %FPT_DEVICE( DCB=M$LO, PAGE=YES );
      266    11980        %FPT_CLOSE( DCB=M$LO, DISP=SAVE );
      267    12022        %F$DCB ( DCBN = F$DCB ) ;
      268    12079        %EJECT;
PL6.E3A0      #002=ASB$READ_SI File=ASB$EXT.:E05TSI                              TUE 07/29/97 08:58 Page:49   
      269    12080        /********************************************************************/
      270    12081        /*   Procedure       procedure       procedure       procedure       */
      271    12082        /*********************************************************************/
      272    12083
      273    12084    1   RFPT.BUF_.BUF$ = ADDR(BUF);
      274    12085    1   RFPT.BUF_.BOUND = 254;
      275    12086    1   BUF = ' ' ;                     /*   Blank out buffer.   */
      276    12087    2   DO INHIBIT;
      277    12088    2      INPUT_FLAG = '1'B;
      278    12089    2      END;
      279    12090    1   CALL M$READ(RFPT);
      280    12091    2   DO INHIBIT;
      281    12092    2      INPUT_FLAG = '0'B;
      282    12093    2      END;
      283    12094    1   M$SI$ = DCBADDR(DCBNUM(M$SI));
      284    12095    1   SIZE = M$SI$ -> F$DCB.ARS# ;
      285    12096    1   M$LO$ = DCBADDR( DCBNUM( M$LO ) ) ;
      286    12097                                            /*   Check if not inter. Term.  */
      287    12098    2   IF NOT M$LO$ -> F$DCB.DDEV.IC# OR NOT M$SI$ -> F$DCB.DDEV.IC# THEN DO;
      288    12099    2      BUF2 = PROMPT_CHAR;
      289    12100    2      CALL INSERT( BUF2, PROMPT_CNT, , SUBSTR(BUF,0,SIZE) );
      290    12101    2      CALL ASB$WRITE_LO( BUF2, SIZE+PROMPT_CNT ) ;
      291    12102    2      END ;   /*  Then do  */
      292    12103    1   RETURN;
      293    12104
      294    12105    1   ASB$WRITE_LO: ENTRY( BUF, SIZE );
      295    12106
      296    12107    1   IF SIZE = 0 THEN RETURN ;
      297    12108    1   WFPT.BUF_.BUF$ = ADDR(BUF);
      298    12109    1   WFPT.BUF_.BOUND = SIZE - 1;
      299    12110    1   CALL M$WRITE(WFPT);
      300    12111    1   LO_WIDTH = DCBADDR(DCBNUM(M$LO)) -> F$DCB.WIDTH#;
      301    12112    1   IF LO_WIDTH = 0 OR LO_WIDTH > 108 THEN LO_WIDTH = 108;
      302    12113    1   RETURN;
      303    12114
      304    12115    1   ASB$PAGE_LO: ENTRY ;
      305    12116
PL6.E3A0      #002=ASB$READ_SI File=ASB$EXT.:E05TSI                              TUE 07/29/97 08:58 Page:50   
      306    12117    1   CALL M$DEVICE( FPT_DEVICE ) ALTRET( RET );
      307    12118    1   RET: RETURN;
      308    12119
      309    12120
      310    12121    1   ASB$CLOSE_LO: ENTRY ;
      311    12122
      312    12123    1   CALL M$CLOSE( FPT_CLOSE );
      313    12124    1   RETURN ;
      314    12125
      315    12126
      316    12127    1   ASB$OPEN_SI_LO_DO: ENTRY;
      317    12128
      318    12129                                          /* Open M$LO */
      319    12130    1   CALL M$OPEN(FPT_OPEN) ALTRET(ABORT);
      320    12131                                          /* Open M$DO */
      321    12132    1   FPT_OPEN.V.DCB#=DCBNUM(M$DO);
      322    12133    1   CALL M$OPEN(FPT_OPEN) ALTRET(ABORT);
      323    12134                                          /* Open M$SI */
      324    12135    1   FPT_OPEN.V.DCB#=DCBNUM(M$SI);
      325    12136    1   FPT_OPEN.V.FUN#=%IN#;
      326    12137    1   CALL M$OPEN(FPT_OPEN) ALTRET(ABORT);
      327    12138    1   RETURN;
      328    12139    1   ABORT: CALL M$MERC;
      329    12140
      330    12141    1   END ASB$READ_SI;
      331    12142        %EOD ;

PL6.E3A0      #002=ASB$READ_SI File=ASB$EXT.:E05TSI                              TUE 07/29/97 08:58 Page:51   
--  Include file information  --

   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ASB$READ_SI.

   Procedure ASB$READ_SI requires 131 words for executable code.
   Procedure ASB$READ_SI requires 74 words of local(AUTO) storage.

PL6.E3A0      #002=ASB$READ_SI File=ASB$EXT.:E05TSI                              TUE 07/29/97 08:58 Page:52   

 Object Unit name= ASB$READ_SI                                File name= ASB$EXT.:E05TOU
 UTS= JUL 29 '97 08:58:58.80 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none   126    176  ASB$READ_SI
    1   DCB   even  none     0      0  M$SI
    2   DCB   even  none     0      0  M$DO
    3   DCB   even  none     0      0  M$LO
    4   DCB   even  none     0      0  M$UC
    5   Proc  even  none   131    203  ASB$READ_SI
    6  RoData even  none     2      2  ASB$READ_SI

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     5      0   yes            yes      Std        2  ASB$READ_SI
     5     76                  yes      Std        2  ASB$WRITE_LO
     5    134                  yes      Std        0  ASB$PAGE_LO
     5    143                  yes      Std        0  ASB$CLOSE_LO
     5    151                  yes      Std        0  ASB$OPEN_SI_LO_DO

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    0      0  M$SI$                              0      1  M$LO$
PL6.E3A0      #002=ASB$READ_SI File=ASB$EXT.:E05TSI                              TUE 07/29/97 08:58 Page:53   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 XU_OUTPUT_OPTIONS
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$SI                                  M$DO                             r    AS_MODE
r    AS_FE_MODE                            M$LO                                  LO_WIDTH
     INPUT_FLAG                            ERR_CODE                              REMEM_VAR
     REM_FCMD                              ASA_BRKS_LOC                          PROMPT_CHAR
     PROMPT_CNT                            M$UC                                  B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #002=ASB$READ_SI File=ASB$EXT.:E05TSI                              TUE 07/29/97 08:58 Page:54   


      207        1        /*T***********************************************************/
      208        2        /*T*                                                         */
      209        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      210        4        /*T*                                                         */
      211        5        /*T***********************************************************/
      212        6                                                              /**/
      213        7        ASB$READ_SI: PROC(BUF, SIZE);

      7  5 000000   000000 700200 xent  ASB$READ_SI  TSX0  ! X66_AUTO_2
         5 000001   000112 000002                    ZERO    74,2

      214        8
      215        9        /*D*  NAME:     ASB$READ_SI
      216       10              CALL:     CALL ASB$READ_SI( BUF, SIZE );
      217       11              INPUT:    BUF        is the buffer to be used for the read.
      218       12              OUTPUT:   SIZE       is the number of characters read.
      219       13              DESCRIPTION:    Reads record through M$SI and returns the size of
      220       14                              the record read.
      221       15        */
      222       16        /*D*  NAME:     ASB$WRITE_LO
      223       17              CALL:     CALL ASB$WRITE_LO( BUF, SIZE );
      224       18              INPUT:    BUF        is the buffer to be written through M$LO.
      225       19                        SIZE       is the size of BUF in bytes.
      226       20              DESCRIPTION:    BUF is written through M$LO.
      227       21        */
      228       22        /*D*  NAME:     ASB$PAGE_LO
      229       23              CALL:     CALL ASB$PAGE_LO
      230       24              DESCRIPTION: Causes page eject on M$LO.
      231       25        */
      232       26        /*D*  NAME:     ASB$CLOSE_LO
      233       27              CALL:     CALL ASB$CLOSE_LO
      234       28              DESCRIPTION: M$LO is closed.
      235       29        */
      236       30    1   DCL BUF CHAR(255) ;
      237       31    1   DCL SIZE SBIN;
      238       32    1   DCL BUF2 CHAR(255);
PL6.E3A0      #002=ASB$READ_SI File=ASB$EXT.:E05TSI                              TUE 07/29/97 08:58 Page:55   
      239       33    1   DCL M$SI$ PTR STATIC SYMDEF;
      240       34    1   DCL M$LO$ PTR STATIC SYMDEF ;
      241       35    1   DCL M$SI DCB;
      242       36    1   DCL M$DO DCB;
      243       37
      244       38        /*********************************************************************/
      245       39        /*   Include files   include files   include files   include files   */
      246       40        /*********************************************************************/
      247       41
      248       42        %INCLUDE           AS_SUPER_C  ;
      249      477        %INCLUDE           AS_MAC_C    ;
      250      557        %INCLUDE           AS_SUBS_C   ;
      251     1971        %INCLUDE           KL_SUPER_C  ;
      252     4873        %INCLUDE           XU_MACRO_C  ;
      253     7979        %INCLUDE           XU_FORMAT_C ;
      254     8141        %INCLUDE           AS_SUPER_R  ;
      255    11157        %INCLUDE           CP_6        ;
      256    11238        %INCLUDE           CP_6_SUBS   ;
      257    11778
      258    11779        /*********************************************************************/
      259    11780        /*   Fpts            fpts            fpts            fpts            */
      260    11781        /*********************************************************************/
      261    11782
      262    11783        %FPT_OPEN(DCB=M$LO,FUN=CREATE,EXIST=NEWFILE);
      263    11892        %FPT_READ(DCB=M$SI,FPTN=RFPT);
      264    11931        %FPT_WRITE(FPTN=WFPT,DCB=M$LO);
      265    11962        %FPT_DEVICE( DCB=M$LO, PAGE=YES );
      266    11980        %FPT_CLOSE( DCB=M$LO, DISP=SAVE );
      267    12022        %F$DCB ( DCBN = F$DCB ) ;
      268    12079        %EJECT;
PL6.E3A0      #002=ASB$READ_SI File=ASB$EXT.:E05TSI                              TUE 07/29/97 08:58 Page:56   
      269    12080        /********************************************************************/
      270    12081        /*   Procedure       procedure       procedure       procedure       */
      271    12082        /*********************************************************************/
      272    12083
      273    12084    1   RFPT.BUF_.BUF$ = ADDR(BUF);

  12084  5 000002   200003 236100                    LDQ     @BUF,,AUTO
         5 000003   000101 756000 0                  STQ     RFPT+5

      274    12085    1   RFPT.BUF_.BOUND = 254;

  12085  5 000004   000100 236000 0                  LDQ     RFPT+4
         5 000005   177777 376007                    ANQ     65535,DL
         5 000006   000000 276000 6                  ORQ     0
         5 000007   000100 756000 0                  STQ     RFPT+4

      275    12086    1   BUF = ' ' ;                     /*   Blank out buffer.   */

  12086  5 000010   200003 470500                    LDP0    @BUF,,AUTO
         5 000011   040100 100400                    MLR     fill='040'O
         5 000012   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         5 000013   000000 000377                    ADSC9   0,,PR0                   cn=0,n=255

      276    12087    2   DO INHIBIT;

      277    12088    2      INPUT_FLAG = '1'B;

  12088  5 000014   400000 236203                    LDQ   ! -131072,DU
         5 000015   000000 756200 xsym               STQ   ! INPUT_FLAG

      278    12089    2      END;

      279    12090    1   CALL M$READ(RFPT);

  12090  5 000016   000074 630400 0                  EPPR0   RFPT
         5 000017   040000 713400                    CLIMB   read
         5 000020   401400 401760                    pmme    nvectors=4
PL6.E3A0      #002=ASB$READ_SI File=ASB$EXT.:E05TSI                              TUE 07/29/97 08:58 Page:57   

      280    12091    2   DO INHIBIT;

      281    12092    2      INPUT_FLAG = '0'B;

  12092  5 000021   000000 450200 xsym               STZ   ! INPUT_FLAG

      282    12093    2      END;

      283    12094    1   M$SI$ = DCBADDR(DCBNUM(M$SI));

  12094  5 000022   000000 236007 xsym               LDQ     M$SI,DL
         5 000023   000001 470400 6                  LDP0    1
         5 000024   000000 471500                    LDP1    0,,PR0
         5 000025   100000 236106                    LDQ     0,QL,PR1
         5 000026   000000 756000 0                  STQ     M$SI$

      284    12095    1   SIZE = M$SI$ -> F$DCB.ARS# ;

  12095  5 000027   000000 473400 0                  LDP3    M$SI$
         5 000030   200004 474500                    LDP4    @SIZE,,AUTO
         5 000031   300000 235100                    LDA     0,,PR3
         5 000032   400000 755100                    STA     0,,PR4

      285    12096    1   M$LO$ = DCBADDR( DCBNUM( M$LO ) ) ;

  12096  5 000033   000000 236007 xsym               LDQ     M$LO,DL
         5 000034   100000 236106                    LDQ     0,QL,PR1
         5 000035   000001 756000 0                  STQ     M$LO$

      286    12097                                            /*   Check if not inter. Term.  */
      287    12098    2   IF NOT M$LO$ -> F$DCB.DDEV.IC# OR NOT M$SI$ -> F$DCB.DDEV.IC# THEN DO;

  12098  5 000036   000001 473400 0                  LDP3    M$LO$
         5 000037   300004 236100                    LDQ     4,,PR3
         5 000040   100000 316007                    CANQ    32768,DL
         5 000041   000046 600000 5                  TZE     s:12099
PL6.E3A0      #002=ASB$READ_SI File=ASB$EXT.:E05TSI                              TUE 07/29/97 08:58 Page:58   
         5 000042   000000 475400 0                  LDP5    M$SI$
         5 000043   500004 236100                    LDQ     4,,PR5
         5 000044   100000 316007                    CANQ    32768,DL
         5 000045   000075 601000 5                  TNZ     s:12103

      288    12099    2      BUF2 = PROMPT_CHAR;

  12099  5 000046   040100 100400                    MLR     fill='040'O
         5 000047   000000 000037 xsym               ADSC9   PROMPT_CHAR              cn=0,n=31
         5 000050   200005 000377                    ADSC9   BUF2,,AUTO               cn=0,n=255

      289    12100    2      CALL INSERT( BUF2, PROMPT_CNT, , SUBSTR(BUF,0,SIZE) );

  12100  5 000051   400000 720100                    LXL0    0,,PR4
         5 000052   000000 721000 xsym               LXL1    PROMPT_CNT
         5 000053   777400 621011                    EAX1    -256,X1
         5 000054   777777 661003                    ERX1    -1,DU
         5 000055   200003 475500                    LDP5    @BUF,,AUTO
         5 000056   000000 235000 xsym               LDA     PROMPT_CNT
         5 000057   040145 100540                    MLR     fill='040'O
         5 000060   500000 000010                    ADSC9   0,,PR5                   cn=0,n=*X0
         5 000061   200005 000011                    ADSC9   BUF2,A,AUTO              cn=0,n=*X1

      290    12101    2      CALL ASB$WRITE_LO( BUF2, SIZE+PROMPT_CNT ) ;

  12101  5 000062   400000 236100                    LDQ     0,,PR4
         5 000063   000000 036000 xsym               ADLQ    PROMPT_CNT
         5 000064   200106 756100                    STQ     BUF2+65,,AUTO
         5 000065   200106 636500                    EPPR6   BUF2+65,,AUTO
         5 000066   200111 456500                    STP6    BUF2+68,,AUTO
         5 000067   200005 637500                    EPPR7   BUF2,,AUTO
         5 000070   200110 457500                    STP7    BUF2+67,,AUTO
         5 000071   200110 630500                    EPPR0   BUF2+67,,AUTO
         5 000072   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000073   000076 701000 5                  TSX1    s:12105
         5 000074   000000 011000                    NOP     0

PL6.E3A0      #002=ASB$READ_SI File=ASB$EXT.:E05TSI                              TUE 07/29/97 08:58 Page:59   
      291    12102    2      END ;   /*  Then do  */

      292    12103    1   RETURN;

  12103  5 000075   000000 702200 xent               TSX2  ! X66_ARET

      293    12104
      294    12105    1   ASB$WRITE_LO: ENTRY( BUF, SIZE );

  12105  5 000076   000000 700200 xent  ASB$WRITE_LO TSX0  ! X66_AUTO_2
         5 000077   000112 000002                    ZERO    74,2

      295    12106
      296    12107    1   IF SIZE = 0 THEN RETURN ;

  12107  5 000100   200004 470500                    LDP0    @SIZE,,AUTO
         5 000101   000000 235100                    LDA     0,,PR0
         5 000102   000104 601000 5                  TNZ     s:12108

  12107  5 000103   000000 702200 xent               TSX2  ! X66_ARET

      297    12108    1   WFPT.BUF_.BUF$ = ADDR(BUF);

  12108  5 000104   200003 236100                    LDQ     @BUF,,AUTO
         5 000105   000117 756000 0                  STQ     WFPT+5

      298    12109    1   WFPT.BUF_.BOUND = SIZE - 1;

  12109  5 000106   000000 236100                    LDQ     0,,PR0
         5 000107   000001 136007                    SBLQ    1,DL
         5 000110   000020 736000                    QLS     16
         5 000111   000116 676000 0                  ERQ     WFPT+4
         5 000112   000034 376000 xsym               ANQ     B_VECTNIL+28
         5 000113   000116 656000 0                  ERSQ    WFPT+4

      299    12110    1   CALL M$WRITE(WFPT);

PL6.E3A0      #002=ASB$READ_SI File=ASB$EXT.:E05TSI                              TUE 07/29/97 08:58 Page:60   
  12110  5 000114   000112 630400 0                  EPPR0   WFPT
         5 000115   040001 713400                    CLIMB   write
         5 000116   401400 401760                    pmme    nvectors=4

      300    12111    1   LO_WIDTH = DCBADDR(DCBNUM(M$LO)) -> F$DCB.WIDTH#;

  12111  5 000117   000000 236007 xsym               LDQ     M$LO,DL
         5 000120   000001 470400 6                  LDP0    1
         5 000121   000000 471500                    LDP1    0,,PR0
         5 000122   100000 473506                    LDP3    0,QL,PR1
         5 000123   300004 236100                    LDQ     4,,PR3
         5 000124   000777 376007                    ANQ     511,DL
         5 000125   000000 756000 xsym               STQ     LO_WIDTH

      301    12112    1   IF LO_WIDTH = 0 OR LO_WIDTH > 108 THEN LO_WIDTH = 108;

  12112  5 000126   000131 600000 5                  TZE     s:12112+3
         5 000127   000155 116007                    CMPQ    109,DL
         5 000130   000133 602000 5                  TNC     s:12113

  12112  5 000131   000154 235007                    LDA     108,DL
         5 000132   000000 755000 xsym               STA     LO_WIDTH

      302    12113    1   RETURN;

  12113  5 000133   000000 702200 xent               TSX2  ! X66_ARET

      303    12114
      304    12115    1   ASB$PAGE_LO: ENTRY ;

  12115  5 000134   000000 700200 xent  ASB$PAGE_LO  TSX0  ! X66_AUTO_2
         5 000135   000112 000002                    ZERO    74,2

      305    12116
      306    12117    1   CALL M$DEVICE( FPT_DEVICE ) ALTRET( RET );

  12117  5 000136   000126 630400 0                  EPPR0   FPT_DEVICE
PL6.E3A0      #002=ASB$READ_SI File=ASB$EXT.:E05TSI                              TUE 07/29/97 08:58 Page:61   
         5 000137   450006 713400                    CLIMB   alt,+20486
         5 000140   401000 401760                    pmme    nvectors=3
         5 000141   000142 702000 5                  TSX2    RET

      307    12118    1   RET: RETURN;

  12118  5 000142   000000 702200 xent  RET          TSX2  ! X66_ARET

      308    12119
      309    12120
      310    12121    1   ASB$CLOSE_LO: ENTRY ;

  12121  5 000143   000000 700200 xent  ASB$CLOSE_LO TSX0  ! X66_AUTO_2
         5 000144   000112 000002                    ZERO    74,2

      311    12122
      312    12123    1   CALL M$CLOSE( FPT_CLOSE );

  12123  5 000145   000140 630400 0                  EPPR0   FPT_CLOSE
         5 000146   050001 713400                    CLIMB   close
         5 000147   406000 401760                    pmme    nvectors=13

      313    12124    1   RETURN ;

  12124  5 000150   000000 702200 xent               TSX2  ! X66_ARET

      314    12125
      315    12126
      316    12127    1   ASB$OPEN_SI_LO_DO: ENTRY;

  12127  5 000151   000000 700200 xent  ASB$OPEN_SI* TSX0  ! X66_AUTO_2
         5 000152   000112 000002                    ZERO    74,2

      317    12128
      318    12129                                          /* Open M$LO */
      319    12130    1   CALL M$OPEN(FPT_OPEN) ALTRET(ABORT);

PL6.E3A0      #002=ASB$READ_SI File=ASB$EXT.:E05TSI                              TUE 07/29/97 08:58 Page:62   
  12130  5 000153   000002 630400 0                  EPPR0   FPT_OPEN
         5 000154   450000 713400                    CLIMB   alt,open
         5 000155   410400 401760                    pmme    nvectors=18
         5 000156   000200 702000 5                  TSX2    ABORT

      320    12131                                          /* Open M$DO */
      321    12132    1   FPT_OPEN.V.DCB#=DCBNUM(M$DO);

  12132  5 000157   000000 236007 xsym               LDQ     M$DO,DL
         5 000160   000000 620006                    EAX0    0,QL
         5 000161   000046 740000 0                  STX0    FPT_OPEN+36

      322    12133    1   CALL M$OPEN(FPT_OPEN) ALTRET(ABORT);

  12133  5 000162   000002 630400 0                  EPPR0   FPT_OPEN
         5 000163   450000 713400                    CLIMB   alt,open
         5 000164   410400 401760                    pmme    nvectors=18
         5 000165   000200 702000 5                  TSX2    ABORT

      323    12134                                          /* Open M$SI */
      324    12135    1   FPT_OPEN.V.DCB#=DCBNUM(M$SI);

  12135  5 000166   000000 236007 xsym               LDQ     M$SI,DL
         5 000167   000000 620006                    EAX0    0,QL
         5 000170   000046 740000 0                  STX0    FPT_OPEN+36

      325    12136    1   FPT_OPEN.V.FUN#=%IN#;

  12136  5 000171   002000 236007                    LDQ     1024,DL
         5 000172   000047 552010 0                  STBQ    FPT_OPEN+37,'10'O

      326    12137    1   CALL M$OPEN(FPT_OPEN) ALTRET(ABORT);

  12137  5 000173   000002 630400 0                  EPPR0   FPT_OPEN
         5 000174   450000 713400                    CLIMB   alt,open
         5 000175   410400 401760                    pmme    nvectors=18
         5 000176   000200 702000 5                  TSX2    ABORT
PL6.E3A0      #002=ASB$READ_SI File=ASB$EXT.:E05TSI                              TUE 07/29/97 08:58 Page:63   

      327    12138    1   RETURN;

  12138  5 000177   000000 702200 xent               TSX2  ! X66_ARET

      328    12139    1   ABORT: CALL M$MERC;

  12139  5 000200   010007 713400       ABORT        CLIMB   4103
         5 000201   000000 401760                    pmme    nvectors=0

      329    12140
      330    12141    1   END ASB$READ_SI;

  12141  5 000202   000000 702200 xent               TSX2  ! X66_ARET
      331    12142        %EOD ;

PL6.E3A0      #002=ASB$READ_SI File=ASB$EXT.:E05TSI                              TUE 07/29/97 08:58 Page:64   
--  Include file information  --

   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ASB$READ_SI.
PL6.E3A0      #002=ASB$READ_SI File=ASB$EXT.:E05TSI                              TUE 07/29/97 08:58 Page:65   

 **** Variables and constants ****

  ****  Section 000  Data  ASB$READ_SI

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   140-0-0/d STRC(1080)  r     1 FPT_CLOSE                126-0-0/d STRC(360)   r     1 FPT_DEVICE
     2-0-0/d STRC(2088)  r     1 FPT_OPEN                   1-0-0/w PTR         r     1 M$LO$
     0-0-0/w PTR         r     1 M$SI$                     74-0-0/d STRC(504)   r     1 RFPT
   112-0-0/d STRC(432)   r     1 WFPT

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @BUF                       4-0-0/w PTR         r     1 @SIZE
    *0-0-0/c CHAR(255)   r     1 BUF                        5-0-0/c CHAR(255)   r     1 BUF2
    *0-0-0/w SBIN        r     1 SIZE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT         r     1 INPUT_FLAG                 0-0-0/w UBIN        r     1 LO_WIDTH
     0-0-0/c CHAR(31)    r     1 PROMPT_CHAR                0-0-0/w UBIN        r     1 PROMPT_CNT

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0N  NULL        r     1 M$DO
     0-0-0N  NULL        r     1 M$LO                       0-0-0N  NULL        r     1 M$SI

PL6.E3A0      #002=ASB$READ_SI File=ASB$EXT.:E05TSI                              TUE 07/29/97 08:58 Page:66   

   Procedure ASB$READ_SI requires 131 words for executable code.
   Procedure ASB$READ_SI requires 74 words of local(AUTO) storage.
PL6.E3A0      #002=ASB$READ_SI File=ASB$EXT.:E05TSI                              TUE 07/29/97 08:58 Page:67   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=ASB$READ_SI File=ASB$EXT.:E05TSI                              TUE 07/29/97 08:58 Page:68   
          MINI XREF LISTING

ABORT
     12139**LABEL   12130--CALLALT 12133--CALLALT 12137--CALLALT
ASA_BRKS_LOC
      8305**DCL      8305--REDEF
ASB$WRITE_LO
     12105**ENTRY   12101--CALL
AS_DEFAULT.BANNER_PERM
      8998**DCL      8999--REDEF
AS_DEFAULT.BUDGET.MACCT
      8903**DCL      8907--REDEF
AS_DEFAULT.BUDGET.MAX_PROJECTS
      8916**DCL      8919--REDEF
AS_DEFAULT.BUDGET.PACCUM
      8899**DCL      8901--REDEF
AS_DEFAULT.BUDGET.PMAXC
      8894**DCL      8896--REDEF
AS_DEFAULT.SETUP_CHRA.TXT
      9014**DCL      9015--REDEF    9016--REDEF
AS_DEFAULT_DREC.PASSWORD
     10268**DCL     10272--REDEF
AS_DEFAULT_DREC.RENAME
     10291**DCL     10292--REDEF
AS_DFLT.BANNER_PERM
      8820**DCL      8821--REDEF
AS_DFLT.BUDGET.MACCT
      8725**DCL      8729--REDEF
AS_DFLT.BUDGET.MAX_PROJECTS
      8738**DCL      8741--REDEF
AS_DFLT.BUDGET.PACCUM
      8721**DCL      8723--REDEF
AS_DFLT.BUDGET.PMAXC
      8716**DCL      8718--REDEF
PL6.E3A0      #002=ASB$READ_SI File=ASB$EXT.:E05TSI                              TUE 07/29/97 08:58 Page:69   
AS_DFLT.SETUP_CHRA.TXT
      8836**DCL      8837--REDEF    8838--REDEF
AS_FE_MODE
      8171**DCL      8172--REDEF
AS_MODE
      8168**DCL      8170--REDEF
AS_MOD_USER.ACCESS
     11033**DCL     11034--REDEF
AS_MOD_USER.BANNER
     11020**DCL     11021--REDEF
AS_MOD_USER.BANNER_PERM
     11022**DCL     11023--REDEF
AS_MOD_USER.BILL
     11028**DCL     11029--REDEF
AS_MOD_USER.CPROC
     11024**DCL     11025--REDEF
AS_MOD_USER.FEBILL
     11104**DCL     11105--REDEF
AS_MOD_USER.FECXTMEM
     11121**DCL     11122--REDEF
AS_MOD_USER.FEMINTS
     11106**DCL     11107--REDEF
AS_MOD_USER.FEMMEM
     11117**DCL     11118--REDEF
AS_MOD_USER.FEMTIME
     11115**DCL     11116--REDEF
AS_MOD_USER.FEPPRIV
     11112**DCL     11114--REDEF
AS_MOD_USER.FEPRIV
     11109**DCL     11111--REDEF
AS_MOD_USER.FORCE_BIT
     11018**DCL     11019--REDEF
AS_MOD_USER.KEY
     11100**DCL     11102--REDEF
AS_MOD_USER.LASTCPROC
     11026**DCL     11027--REDEF
PL6.E3A0      #002=ASB$READ_SI File=ASB$EXT.:E05TSI                              TUE 07/29/97 08:58 Page:70   
AS_MOD_USER.LIMITS.DO_
     11074**DCL     11075--REDEF
AS_MOD_USER.LIMITS.FPOOLS
     11090**DCL     11091--REDEF
AS_MOD_USER.LIMITS.LO
     11070**DCL     11071--REDEF
AS_MOD_USER.LIMITS.MEM
     11066**DCL     11067--REDEF
AS_MOD_USER.LIMITS.MPRIO
     11094**DCL     11095--REDEF
AS_MOD_USER.LIMITS.PDIS
     11082**DCL     11083--REDEF
AS_MOD_USER.LIMITS.PO
     11078**DCL     11079--REDEF
AS_MOD_USER.LIMITS.TDIS
     11086**DCL     11087--REDEF
AS_MOD_USER.LIMITS.TIME
     11062**DCL     11063--REDEF
AS_MOD_USER.MAXENQ
     11043**DCL     11044--REDEF
AS_MOD_USER.PERM_BIT
     11016**DCL     11017--REDEF
AS_MOD_USER.PPRIV
     11038**DCL     11040--REDEF
AS_MOD_USER.PRIOB
     11045**DCL     11046--REDEF
AS_MOD_USER.PRIV
     11035**DCL     11037--REDEF
AS_MOD_USER.QUAN
     11041**DCL     11042--REDEF
AS_MOD_USER.SETUP
     11014**DCL     11015--REDEF
AS_PROJECT.BANNER_PERM
      9354**DCL      9355--REDEF
AS_PROJECT.BUDGET.MACCT
      9259**DCL      9263--REDEF
PL6.E3A0      #002=ASB$READ_SI File=ASB$EXT.:E05TSI                              TUE 07/29/97 08:58 Page:71   
AS_PROJECT.BUDGET.MAX_PROJECTS
      9272**DCL      9275--REDEF
AS_PROJECT.BUDGET.PACCUM
      9255**DCL      9257--REDEF
AS_PROJECT.BUDGET.PMAXC
      9250**DCL      9252--REDEF
AS_PROJECT.SETUP_CHRA.TXT
      9370**DCL      9371--REDEF    9372--REDEF
AS_PROJECT_DFLT.BANNER_PERM
      9532**DCL      9533--REDEF
AS_PROJECT_DFLT.BUDGET.MACCT
      9437**DCL      9441--REDEF
AS_PROJECT_DFLT.BUDGET.MAX_PROJECTS
      9450**DCL      9453--REDEF
AS_PROJECT_DFLT.BUDGET.PACCUM
      9433**DCL      9435--REDEF
AS_PROJECT_DFLT.BUDGET.PMAXC
      9428**DCL      9430--REDEF
AS_PROJECT_DFLT.SETUP_CHRA.TXT
      9548**DCL      9549--REDEF    9550--REDEF
AS_PROJECT_DFLT_DREC.PASSWORD
     10754**DCL     10758--REDEF
AS_PROJECT_DFLT_DREC.RENAME
     10777**DCL     10778--REDEF
AS_PROJECT_DREC.PASSWORD
     10592**DCL     10596--REDEF
AS_PROJECT_DREC.RENAME
     10615**DCL     10616--REDEF
AS_PROJ_ADMIN.BANNER_PERM
      9176**DCL      9177--REDEF
AS_PROJ_ADMIN.BUDGET.MACCT
      9081**DCL      9085--REDEF
AS_PROJ_ADMIN.BUDGET.MAX_PROJECTS
      9094**DCL      9097--REDEF
AS_PROJ_ADMIN.BUDGET.PACCUM
      9077**DCL      9079--REDEF
PL6.E3A0      #002=ASB$READ_SI File=ASB$EXT.:E05TSI                              TUE 07/29/97 08:58 Page:72   
AS_PROJ_ADMIN.BUDGET.PMAXC
      9072**DCL      9074--REDEF
AS_PROJ_ADMIN.SETUP_CHRA.TXT
      9192**DCL      9193--REDEF    9194--REDEF
AS_PROJ_ADMIN_DREC.PASSWORD
     10430**DCL     10434--REDEF
AS_PROJ_ADMIN_DREC.RENAME
     10453**DCL     10454--REDEF
AS_USERS.BANNER_PERM
      8642**DCL      8643--REDEF
AS_USERS.BUDGET.MACCT
      8547**DCL      8551--REDEF
AS_USERS.BUDGET.MAX_PROJECTS
      8560**DCL      8563--REDEF
AS_USERS.BUDGET.PACCUM
      8543**DCL      8545--REDEF
AS_USERS.BUDGET.PMAXC
      8538**DCL      8540--REDEF
AS_USERS.SETUP_CHRA.TXT
      8658**DCL      8659--REDEF    8660--REDEF
AS_USERS_CONSTANT.BANNER_PERM
      9710**DCL      9711--REDEF
AS_USERS_CONSTANT.BUDGET.MACCT
      9615**DCL      9619--REDEF
AS_USERS_CONSTANT.BUDGET.MAX_PROJECTS
      9628**DCL      9631--REDEF
AS_USERS_CONSTANT.BUDGET.PACCUM
      9611**DCL      9613--REDEF
AS_USERS_CONSTANT.BUDGET.PMAXC
      9606**DCL      9608--REDEF
AS_USERS_CONSTANT.SETUP_CHRA.TXT
      9726**DCL      9727--REDEF    9728--REDEF
BUF
        30**DCL         7--PROC    12084--ASSIGN  12086<<ASSIGN  12100>>CALLBLT 12105--ENTRY   12108--ASSIGN
BUF2
        32**DCL     12099<<ASSIGN  12100<<CALLBLT 12101<>CALL
PL6.E3A0      #002=ASB$READ_SI File=ASB$EXT.:E05TSI                              TUE 07/29/97 08:58 Page:73   
ERR_CODE
      8300**DCL      8301--REDEF
F$DCB.ACTPOS
     12055**DCL     12055--REDEF
F$DCB.ARS#
     12029**DCL     12029--REDEF   12095>>ASSIGN
F$DCB.ATTR
     12048**DCL     12049--REDEF
F$DCB.BORROW
     12063**DCL     12063--REDEF   12063--REDEF   12063--REDEF
F$DCB.DCBNAME.L
     12077**DCL     12077--IMP-SIZ
F$DCB.DDEV.IC#
     12035**DCL     12098>>IF      12098>>IF
F$DCB.EOMCHAR#
     12033**DCL     12033--REDEF
F$DCB.FLDID
     12058**DCL     12058--REDEF
F$DCB.FORM$
     12052**DCL     12052--REDEF
F$DCB.FSECT
     12068**DCL     12068--REDEF
F$DCB.FSN#
     12045**DCL     12045--REDEF   12045--REDEF   12046--REDEF
F$DCB.HEADER$
     12051**DCL     12051--REDEF
F$DCB.IXTNSIZE#
     12049**DCL     12049--REDEF
F$DCB.LASTSTA$
     12038**DCL     12038--REDEF
F$DCB.LVL
     12064**DCL     12064--REDEF
F$DCB.NAME#.C
     12039**DCL     12039--REDEF
F$DCB.NOEOF
     12061**DCL     12061--REDEF
PL6.E3A0      #002=ASB$READ_SI File=ASB$EXT.:E05TSI                              TUE 07/29/97 08:58 Page:74   
F$DCB.NRECS#
     12050**DCL     12050--REDEF
F$DCB.NRECX
     12069**DCL     12069--REDEF
F$DCB.OHDR
     12061**DCL     12061--REDEF
F$DCB.ORG#
     12044**DCL     12044--REDEF
F$DCB.PRECNO
     12067**DCL     12067--REDEF
F$DCB.RCSZ
     12073**DCL     12073--REDEF
F$DCB.RES#
     12040**DCL     12040--REDEF
F$DCB.SETX
     12052**DCL     12052--REDEF
F$DCB.TAB$
     12052**DCL     12052--REDEF
F$DCB.TDA
     12066**DCL     12067--REDEF
F$DCB.WIDTH#
     12036**DCL     12111>>ASSIGN
F$DCB.WSN#
     12040**DCL     12040--REDEF
FPT_CLOSE
     12003**DCL     12123<>CALL
FPT_CLOSE.SN_
     12003**DCL     12003--REDEF
FPT_CLOSE.UTL_
     12004**DCL     12004--REDEF
FPT_CLOSE.V
     12008**DCL     12003--DCLINIT
FPT_CLOSE.V.EXPIRE#
     12018**DCL     12018--REDEF
FPT_CLOSE.V.TYPE#
     12016**DCL     12016--REDEF
PL6.E3A0      #002=ASB$READ_SI File=ASB$EXT.:E05TSI                              TUE 07/29/97 08:58 Page:75   
FPT_CLOSE.V.XTNSIZE#
     12013**DCL     12013--REDEF   12015--REDEF
FPT_DEVICE
     11973**DCL     12117<>CALL
FPT_DEVICE.V
     11974**DCL     11973--DCLINIT
FPT_OPEN
     11848**DCL     12130<>CALL    12133<>CALL    12137<>CALL
FPT_OPEN.ACSVEH_
     11850**DCL     11851--REDEF
FPT_OPEN.ALTKEYS_
     11856**DCL     11857--REDEF   11857--REDEF
FPT_OPEN.HDR_
     11855**DCL     11856--REDEF
FPT_OPEN.TAB_
     11854**DCL     11855--REDEF
FPT_OPEN.UHL_
     11848**DCL     11849--REDEF   11849--REDEF
FPT_OPEN.V
     11857**DCL     11848--DCLINIT
FPT_OPEN.V.DCB#
     11857**DCL     12132<<ASSIGN  12135<<ASSIGN
FPT_OPEN.V.FSN#
     11888**DCL     11888--REDEF   11888--REDEF
FPT_OPEN.V.FUN#
     11867**DCL     12136<<ASSIGN
FPT_OPEN.WSN_
     11854**DCL     11854--REDEF
INPUT_FLAG
      8298**DCL     12088<<ASSIGN  12092<<ASSIGN
KL_DEFAULT.PASSWORD
     10916**DCL     10920--REDEF
KL_DEFAULT.RENAME
     10939**DCL     10940--REDEF
KL_DFLT.PASSWORD
     10106**DCL     10110--REDEF
PL6.E3A0      #002=ASB$READ_SI File=ASB$EXT.:E05TSI                              TUE 07/29/97 08:58 Page:76   
KL_DFLT.RENAME
     10129**DCL     10130--REDEF
KL_DREC.PASSWORD
      9944**DCL      9948--REDEF
KL_DREC.RENAME
      9967**DCL      9968--REDEF
KL_DREC_CNT.PASSWORD
      9831**DCL      9835--REDEF
KL_DREC_CNT.RENAME
      9854**DCL      9855--REDEF
LO_WIDTH
      8182**DCL     12111<<ASSIGN  12112>>IF      12112>>IF      12112<<ASSIGN
M$CLOSE
     11166**DCL-ENT 12123--CALL
M$DEVICE
     11170**DCL-ENT 12117--CALL
M$DO
        36**DCL     12132>>ASSIGN
M$LO
      8175**DCL     12096--ASSIGN  12111--ASSIGN
M$LO$
        34**DCL     12096<<ASSIGN  12098>>IF
M$MERC
     11222**DCL-ENT 12139--CALL
M$OPEN
     11166**DCL-ENT 12130--CALL    12133--CALL    12137--CALL
M$READ
     11167**DCL-ENT 12090--CALL
M$SI
        35**DCL     12094--ASSIGN  12135>>ASSIGN
M$SI$
        33**DCL     12094<<ASSIGN  12095>>ASSIGN  12098>>IF
M$WRITE
     11167**DCL-ENT 12110--CALL
PROJ_KEY.TEXT
      8178**DCL      8178--REDEF
PL6.E3A0      #002=ASB$READ_SI File=ASB$EXT.:E05TSI                              TUE 07/29/97 08:58 Page:77   
PROJ_KEY.TXT.PROJECT
      8178**DCL      8178--REDEF
PROMPT_CHAR
      8306**DCL     12099>>ASSIGN
PROMPT_CNT
      8306**DCL     12100>>CALLBLT 12101>>CALL
REMEM_VAR
      8304**DCL      8304--REDEF
REM_FCMD
      8304**DCL      8305--REDEF
RET
     12118**LABEL   12117--CALLALT
RFPT
     11909**DCL     12090<>CALL
RFPT.BUF_.BOUND
     11911**DCL     12085<<ASSIGN
RFPT.BUF_.BUF$
     11912**DCL     12084<<ASSIGN
RFPT.STATION_
     11912**DCL     11913--REDEF
RFPT.V
     11913**DCL     11909--DCLINIT
RFPT.V.DVBYTE.REREAD#
     11924**DCL     11924--REDEF
RFPT.V.INDX#
     11922**DCL     11922--REDEF
SIZE
        31**DCL         7--PROC    12095<<ASSIGN  12100>>CALLBLT 12101>>CALL    12105--ENTRY   12107>>IF
     12109>>ASSIGN
USERS_KEY.TEXT
      8175**DCL      8176--REDEF    8176--REDEF    8176--REDEF    8177--REDEF
WFPT
     11948**DCL     12110<>CALL
WFPT.BUF_.BOUND
     11948**DCL     12109<<ASSIGN
WFPT.BUF_.BUF$
PL6.E3A0      #002=ASB$READ_SI File=ASB$EXT.:E05TSI                              TUE 07/29/97 08:58 Page:78   
     11950**DCL     12108<<ASSIGN
WFPT.STATION_
     11950**DCL     11950--REDEF
WFPT.V
     11951**DCL     11948--DCLINIT
WFPT.V.DVBYTE.VFC#
     11957**DCL     11957--REDEF

PL6.E3A0      #003=ASB$LEGL_CHAR File=ASB$EXT.:E05TSI                            TUE 07/29/97 09:00 Page:79   
      332        1        /*T***********************************************************/
      333        2        /*T*                                                         */
      334        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      335        4        /*T*                                                         */
      336        5        /*T***********************************************************/
      337        6        ASB$LEGL_CHAR: PROC (STRING, STR_LEN) ALTRET ;
      338        7                                                              /**/
      339        8    1   DCL STRING CHAR(STR_LEN) ;
      340        9    1   DCL STR_LEN UBIN(9) ALIGNED ;
      341       10    1   DCL NO_GOOD(0:3) CHAR(1) STATIC INIT('#','.','@','/') ;
      342       11    1   DCL I UBIN ;
      343       12    1   DCL POS UBIN ;
      344       13    1   DCL ARS UBIN ;
      345       14                                                              /**/
      346       15        %EJECT;
PL6.E3A0      #003=ASB$LEGL_CHAR File=ASB$EXT.:E05TSI                            TUE 07/29/97 09:00 Page:80   
      347       16        /********************************************************************/
      348       17        /*   Include files   include files   include files   include files   */
      349       18        /*********************************************************************/
      350       19                                                              /**/
      351       20        %INCLUDE  AS_ENTRIES_M ;
      352     1070        %INCLUDE           AS_SUPER_C  ;
      353     1505        %INCLUDE           AS_MAC_C    ;
      354     1585        %INCLUDE           AS_SUBS_C   ;
      355     2999        %INCLUDE           KL_SUPER_C  ;
      356     5901        %INCLUDE           XU_MACRO_C  ;
      357     9007        %INCLUDE           XU_FORMAT_C ;
      358     9169        %INCLUDE           AS_SUPER_R  ;
      359    12185                                                              /**/
      360    12186        %EJECT;
PL6.E3A0      #003=ASB$LEGL_CHAR File=ASB$EXT.:E05TSI                            TUE 07/29/97 09:00 Page:81   
      361    12187        /********************************************************************/
      362    12188        /*   Entry dcls      entry dcls      entry dcls      entry dcls      */
      363    12189        /*********************************************************************/
      364    12190                                                              /**/
      365    12191        %ASB$WRITE_LO ;
      366    12194                                                              /**/
      367    12195        %EJECT;
PL6.E3A0      #003=ASB$LEGL_CHAR File=ASB$EXT.:E05TSI                            TUE 07/29/97 09:00 Page:82   
      368    12196        /********************************************************************/
      369    12197        /*   Procedure       procedure       procedure       procedure       */
      370    12198        /*********************************************************************/
      371    12199                                                              /**/
      372    12200        /*
      373    12201            ***            Begin procedure                    ***
      374    12202        */
      375    12203    2   DO I = 0 TO 3 ;
      376    12204    2      CALL INDEX(POS,NO_GOOD(I),STRING) ;
      377    12205    2      IF POS ~= STR_LEN
      378    12206    2      THEN
      379    12207    3      DO ;
      380    12208    3         CALL CONCAT(OUT_BUF,NO_GOOD(I),' - IS AN ILLEGAL CHAR.') ;
      381    12209    3         ARS = 23 ;
      382    12210    3         CALL ASB$WRITE_LO (OUT_BUF, ARS) ;
      383    12211    3         ALTRETURN ;
      384    12212    3         END ;   /* Then do */
      385    12213    2      END ;     /* Do i */
      386    12214                                                              /**/
      387    12215    1   RETURN ;
      388    12216                                                              /**/
      389    12217    1   END   ASB$LEGL_CHAR ;
      390    12218        %EOD ;

PL6.E3A0      #003=ASB$LEGL_CHAR File=ASB$EXT.:E05TSI                            TUE 07/29/97 09:00 Page:83   
--  Include file information  --

   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ASB$LEGL_CHAR.

   Procedure ASB$LEGL_CHAR requires 37 words for executable code.
   Procedure ASB$LEGL_CHAR requires 10 words of local(AUTO) storage.

PL6.E3A0      #003=ASB$LEGL_CHAR File=ASB$EXT.:E05TSI                            TUE 07/29/97 09:00 Page:84   

 Object Unit name= ASB$LEGL_CHAR                              File name= ASB$EXT.:E05TOU
 UTS= JUL 29 '97 09:00:55.92 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none     1      1  ASB$LEGL_CHAR
    1   DCB   even  none     0      0  M$LO
    2  RoData even  UTS      6      6  ASB$LEGL_CHAR
    3   Proc  even  none    37     45  ASB$LEGL_CHAR
    4  RoData even  none     1      1  ASB$LEGL_CHAR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        2  ASB$LEGL_CHAR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 XU_OUTPUT_OPTIONS
         yes           Std       2 ASB$WRITE_LO
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #003=ASB$LEGL_CHAR File=ASB$EXT.:E05TSI                            TUE 07/29/97 09:00 Page:85   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    AS_MODE                          r    AS_FE_MODE                            M$LO
     OUT_BUF                               ERR_CODE                              REMEM_VAR
     REM_FCMD                              ASA_BRKS_LOC                          B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #003=ASB$LEGL_CHAR File=ASB$EXT.:E05TSI                            TUE 07/29/97 09:00 Page:86   


      332        1        /*T***********************************************************/
      333        2        /*T*                                                         */
      334        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      335        4        /*T*                                                         */
      336        5        /*T***********************************************************/
      337        6        ASB$LEGL_CHAR: PROC (STRING, STR_LEN) ALTRET ;

      6  3 000000   000000 700200 xent  ASB$LEGL_CH* TSX0  ! X66_AUTO_2
         3 000001   000012 000002                    ZERO    10,2

      338        7                                                              /**/
      339        8    1   DCL STRING CHAR(STR_LEN) ;
      340        9    1   DCL STR_LEN UBIN(9) ALIGNED ;
      341       10    1   DCL NO_GOOD(0:3) CHAR(1) STATIC INIT('#','.','@','/') ;
      342       11    1   DCL I UBIN ;
      343       12    1   DCL POS UBIN ;
      344       13    1   DCL ARS UBIN ;
      345       14                                                              /**/
      346       15        %EJECT;
PL6.E3A0      #003=ASB$LEGL_CHAR File=ASB$EXT.:E05TSI                            TUE 07/29/97 09:00 Page:87   
      347       16        /********************************************************************/
      348       17        /*   Include files   include files   include files   include files   */
      349       18        /*********************************************************************/
      350       19                                                              /**/
      351       20        %INCLUDE  AS_ENTRIES_M ;
      352     1070        %INCLUDE           AS_SUPER_C  ;
      353     1505        %INCLUDE           AS_MAC_C    ;
      354     1585        %INCLUDE           AS_SUBS_C   ;
      355     2999        %INCLUDE           KL_SUPER_C  ;
      356     5901        %INCLUDE           XU_MACRO_C  ;
      357     9007        %INCLUDE           XU_FORMAT_C ;
      358     9169        %INCLUDE           AS_SUPER_R  ;
      359    12185                                                              /**/
      360    12186        %EJECT;
PL6.E3A0      #003=ASB$LEGL_CHAR File=ASB$EXT.:E05TSI                            TUE 07/29/97 09:00 Page:88   
      361    12187        /********************************************************************/
      362    12188        /*   Entry dcls      entry dcls      entry dcls      entry dcls      */
      363    12189        /*********************************************************************/
      364    12190                                                              /**/
      365    12191        %ASB$WRITE_LO ;
      366    12194                                                              /**/
      367    12195        %EJECT;
PL6.E3A0      #003=ASB$LEGL_CHAR File=ASB$EXT.:E05TSI                            TUE 07/29/97 09:00 Page:89   
      368    12196        /********************************************************************/
      369    12197        /*   Procedure       procedure       procedure       procedure       */
      370    12198        /*********************************************************************/
      371    12199                                                              /**/
      372    12200        /*
      373    12201            ***            Begin procedure                    ***
      374    12202        */
      375    12203    2   DO I = 0 TO 3 ;

  12203  3 000002   200005 450100                    STZ     I,,AUTO

      376    12204    2      CALL INDEX(POS,NO_GOOD(I),STRING) ;

  12204  3 000003   200004 470500                    LDP0    @STR_LEN,,AUTO
         3 000004   000000 236100                    LDQ     0,,PR0
         3 000005   000033 772000                    QRL     27
         3 000006   200003 471500                    LDP1    @STRING,,AUTO
         3 000007   000000 620006                    EAX0    0,QL
         3 000010   200005 235100                    LDA     I,,AUTO
         3 000011   000005 124540                    SCM     mask='000'O
         3 000012   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         3 000013   000000 000001 0                  ADSC9   NO_GOOD,A                cn=0,n=1
         3 000014   200006 000100                    ARG     POS,,AUTO

      377    12205    2      IF POS ~= STR_LEN

  12205  3 000015   200006 116100                    CMPQ    POS,,AUTO
         3 000016   000040 600000 3                  TZE     s:12213

      378    12206    2      THEN
      379    12207    3      DO ;

      380    12208    3         CALL CONCAT(OUT_BUF,NO_GOOD(I),' - IS AN ILLEGAL CHAR.') ;

  12208  3 000017   040000 100405                    MLR     fill='040'O
         3 000020   000000 000001 0                  ADSC9   NO_GOOD,A                cn=0,n=1
         3 000021   000000 000001 xsym               ADSC9   OUT_BUF                  cn=0,n=1
PL6.E3A0      #003=ASB$LEGL_CHAR File=ASB$EXT.:E05TSI                            TUE 07/29/97 09:00 Page:90   
         3 000022   040000 100400                    MLR     fill='040'O
         3 000023   000000 000026 2                  ADSC9   0                        cn=0,n=22
         3 000024   000000 200213 xsym               ADSC9   OUT_BUF                  cn=1,n=139

      381    12209    3         ARS = 23 ;

  12209  3 000025   000027 235007                    LDA     23,DL
         3 000026   200007 755100                    STA     ARS,,AUTO

      382    12210    3         CALL ASB$WRITE_LO (OUT_BUF, ARS) ;

  12210  3 000027   200007 630500                    EPPR0   ARS,,AUTO
         3 000030   200011 450500                    STP0    ARS+2,,AUTO
         3 000031   000000 236000 4                  LDQ     0
         3 000032   200010 756100                    STQ     ARS+1,,AUTO
         3 000033   200010 630500                    EPPR0   ARS+1,,AUTO
         3 000034   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000035   000000 701000 xent               TSX1    ASB$WRITE_LO
         3 000036   000000 011000                    NOP     0

      383    12211    3         ALTRETURN ;

  12211  3 000037   000000 702200 xent               TSX2  ! X66_AALT

      384    12212    3         END ;   /* Then do */
      385    12213    2      END ;     /* Do i */

  12213  3 000040   000001 035007                    ADLA    1,DL
         3 000041   200005 755100                    STA     I,,AUTO
         3 000042   000004 115007                    CMPA    4,DL
         3 000043   000003 602000 3                  TNC     s:12204

      386    12214                                                              /**/
      387    12215    1   RETURN ;

  12215  3 000044   000000 702200 xent               TSX2  ! X66_ARET
      388    12216                                                              /**/
PL6.E3A0      #003=ASB$LEGL_CHAR File=ASB$EXT.:E05TSI                            TUE 07/29/97 09:00 Page:91   
      389    12217    1   END   ASB$LEGL_CHAR ;
      390    12218        %EOD ;

PL6.E3A0      #003=ASB$LEGL_CHAR File=ASB$EXT.:E05TSI                            TUE 07/29/97 09:00 Page:92   
--  Include file information  --

   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ASB$LEGL_CHAR.
PL6.E3A0      #003=ASB$LEGL_CHAR File=ASB$EXT.:E05TSI                            TUE 07/29/97 09:00 Page:93   

 **** Variables and constants ****

  ****  Section 000  Data  ASB$LEGL_CHAR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR        r     1 NO_GOOD(0:3)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @STRING                    4-0-0/w PTR         r     1 @STR_LEN
     7-0-0/w UBIN        r     1 ARS                        5-0-0/w UBIN        r     1 I
     6-0-0/w UBIN        r     1 POS                       *0-0-0/c ACHR        r     1 STRING
    *0-0-0/w UBIN(9)     r     1 STR_LEN

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(140)   r     1 OUT_BUF


   Procedure ASB$LEGL_CHAR requires 37 words for executable code.
   Procedure ASB$LEGL_CHAR requires 10 words of local(AUTO) storage.
PL6.E3A0      #003=ASB$LEGL_CHAR File=ASB$EXT.:E05TSI                            TUE 07/29/97 09:00 Page:94   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=ASB$LEGL_CHAR File=ASB$EXT.:E05TSI                            TUE 07/29/97 09:00 Page:95   
          MINI XREF LISTING

ARS
        13**DCL     12209<<ASSIGN  12210<>CALL
ASA_BRKS_LOC
      9333**DCL      9333--REDEF
ASB$WRITE_LO
     12192**DCL-ENT 12210--CALL
AS_DEFAULT.BANNER_PERM
     10026**DCL     10027--REDEF
AS_DEFAULT.BUDGET.MACCT
      9931**DCL      9935--REDEF
AS_DEFAULT.BUDGET.MAX_PROJECTS
      9944**DCL      9947--REDEF
AS_DEFAULT.BUDGET.PACCUM
      9927**DCL      9929--REDEF
AS_DEFAULT.BUDGET.PMAXC
      9922**DCL      9924--REDEF
AS_DEFAULT.SETUP_CHRA.TXT
     10042**DCL     10043--REDEF   10044--REDEF
AS_DEFAULT_DREC.PASSWORD
     11296**DCL     11300--REDEF
AS_DEFAULT_DREC.RENAME
     11319**DCL     11320--REDEF
AS_DFLT.BANNER_PERM
      9848**DCL      9849--REDEF
AS_DFLT.BUDGET.MACCT
      9753**DCL      9757--REDEF
AS_DFLT.BUDGET.MAX_PROJECTS
      9766**DCL      9769--REDEF
AS_DFLT.BUDGET.PACCUM
      9749**DCL      9751--REDEF
AS_DFLT.BUDGET.PMAXC
      9744**DCL      9746--REDEF
PL6.E3A0      #003=ASB$LEGL_CHAR File=ASB$EXT.:E05TSI                            TUE 07/29/97 09:00 Page:96   
AS_DFLT.SETUP_CHRA.TXT
      9864**DCL      9865--REDEF    9866--REDEF
AS_FE_MODE
      9199**DCL      9200--REDEF
AS_MODE
      9196**DCL      9198--REDEF
AS_MOD_USER.ACCESS
     12061**DCL     12062--REDEF
AS_MOD_USER.BANNER
     12048**DCL     12049--REDEF
AS_MOD_USER.BANNER_PERM
     12050**DCL     12051--REDEF
AS_MOD_USER.BILL
     12056**DCL     12057--REDEF
AS_MOD_USER.CPROC
     12052**DCL     12053--REDEF
AS_MOD_USER.FEBILL
     12132**DCL     12133--REDEF
AS_MOD_USER.FECXTMEM
     12149**DCL     12150--REDEF
AS_MOD_USER.FEMINTS
     12134**DCL     12135--REDEF
AS_MOD_USER.FEMMEM
     12145**DCL     12146--REDEF
AS_MOD_USER.FEMTIME
     12143**DCL     12144--REDEF
AS_MOD_USER.FEPPRIV
     12140**DCL     12142--REDEF
AS_MOD_USER.FEPRIV
     12137**DCL     12139--REDEF
AS_MOD_USER.FORCE_BIT
     12046**DCL     12047--REDEF
AS_MOD_USER.KEY
     12128**DCL     12130--REDEF
AS_MOD_USER.LASTCPROC
     12054**DCL     12055--REDEF
PL6.E3A0      #003=ASB$LEGL_CHAR File=ASB$EXT.:E05TSI                            TUE 07/29/97 09:00 Page:97   
AS_MOD_USER.LIMITS.DO_
     12102**DCL     12103--REDEF
AS_MOD_USER.LIMITS.FPOOLS
     12118**DCL     12119--REDEF
AS_MOD_USER.LIMITS.LO
     12098**DCL     12099--REDEF
AS_MOD_USER.LIMITS.MEM
     12094**DCL     12095--REDEF
AS_MOD_USER.LIMITS.MPRIO
     12122**DCL     12123--REDEF
AS_MOD_USER.LIMITS.PDIS
     12110**DCL     12111--REDEF
AS_MOD_USER.LIMITS.PO
     12106**DCL     12107--REDEF
AS_MOD_USER.LIMITS.TDIS
     12114**DCL     12115--REDEF
AS_MOD_USER.LIMITS.TIME
     12090**DCL     12091--REDEF
AS_MOD_USER.MAXENQ
     12071**DCL     12072--REDEF
AS_MOD_USER.PERM_BIT
     12044**DCL     12045--REDEF
AS_MOD_USER.PPRIV
     12066**DCL     12068--REDEF
AS_MOD_USER.PRIOB
     12073**DCL     12074--REDEF
AS_MOD_USER.PRIV
     12063**DCL     12065--REDEF
AS_MOD_USER.QUAN
     12069**DCL     12070--REDEF
AS_MOD_USER.SETUP
     12042**DCL     12043--REDEF
AS_PROJECT.BANNER_PERM
     10382**DCL     10383--REDEF
AS_PROJECT.BUDGET.MACCT
     10287**DCL     10291--REDEF
PL6.E3A0      #003=ASB$LEGL_CHAR File=ASB$EXT.:E05TSI                            TUE 07/29/97 09:00 Page:98   
AS_PROJECT.BUDGET.MAX_PROJECTS
     10300**DCL     10303--REDEF
AS_PROJECT.BUDGET.PACCUM
     10283**DCL     10285--REDEF
AS_PROJECT.BUDGET.PMAXC
     10278**DCL     10280--REDEF
AS_PROJECT.SETUP_CHRA.TXT
     10398**DCL     10399--REDEF   10400--REDEF
AS_PROJECT_DFLT.BANNER_PERM
     10560**DCL     10561--REDEF
AS_PROJECT_DFLT.BUDGET.MACCT
     10465**DCL     10469--REDEF
AS_PROJECT_DFLT.BUDGET.MAX_PROJECTS
     10478**DCL     10481--REDEF
AS_PROJECT_DFLT.BUDGET.PACCUM
     10461**DCL     10463--REDEF
AS_PROJECT_DFLT.BUDGET.PMAXC
     10456**DCL     10458--REDEF
AS_PROJECT_DFLT.SETUP_CHRA.TXT
     10576**DCL     10577--REDEF   10578--REDEF
AS_PROJECT_DFLT_DREC.PASSWORD
     11782**DCL     11786--REDEF
AS_PROJECT_DFLT_DREC.RENAME
     11805**DCL     11806--REDEF
AS_PROJECT_DREC.PASSWORD
     11620**DCL     11624--REDEF
AS_PROJECT_DREC.RENAME
     11643**DCL     11644--REDEF
AS_PROJ_ADMIN.BANNER_PERM
     10204**DCL     10205--REDEF
AS_PROJ_ADMIN.BUDGET.MACCT
     10109**DCL     10113--REDEF
AS_PROJ_ADMIN.BUDGET.MAX_PROJECTS
     10122**DCL     10125--REDEF
AS_PROJ_ADMIN.BUDGET.PACCUM
     10105**DCL     10107--REDEF
PL6.E3A0      #003=ASB$LEGL_CHAR File=ASB$EXT.:E05TSI                            TUE 07/29/97 09:00 Page:99   
AS_PROJ_ADMIN.BUDGET.PMAXC
     10100**DCL     10102--REDEF
AS_PROJ_ADMIN.SETUP_CHRA.TXT
     10220**DCL     10221--REDEF   10222--REDEF
AS_PROJ_ADMIN_DREC.PASSWORD
     11458**DCL     11462--REDEF
AS_PROJ_ADMIN_DREC.RENAME
     11481**DCL     11482--REDEF
AS_USERS.BANNER_PERM
      9670**DCL      9671--REDEF
AS_USERS.BUDGET.MACCT
      9575**DCL      9579--REDEF
AS_USERS.BUDGET.MAX_PROJECTS
      9588**DCL      9591--REDEF
AS_USERS.BUDGET.PACCUM
      9571**DCL      9573--REDEF
AS_USERS.BUDGET.PMAXC
      9566**DCL      9568--REDEF
AS_USERS.SETUP_CHRA.TXT
      9686**DCL      9687--REDEF    9688--REDEF
AS_USERS_CONSTANT.BANNER_PERM
     10738**DCL     10739--REDEF
AS_USERS_CONSTANT.BUDGET.MACCT
     10643**DCL     10647--REDEF
AS_USERS_CONSTANT.BUDGET.MAX_PROJECTS
     10656**DCL     10659--REDEF
AS_USERS_CONSTANT.BUDGET.PACCUM
     10639**DCL     10641--REDEF
AS_USERS_CONSTANT.BUDGET.PMAXC
     10634**DCL     10636--REDEF
AS_USERS_CONSTANT.SETUP_CHRA.TXT
     10754**DCL     10755--REDEF   10756--REDEF
ERR_CODE
      9328**DCL      9329--REDEF
I
        11**DCL     12203<<DOINDEX 12204>>CALLBLT 12208>>CALLBLT
PL6.E3A0      #003=ASB$LEGL_CHAR File=ASB$EXT.:E05TSI                            TUE 07/29/97 09:00 Page:100  
KL_DEFAULT.PASSWORD
     11944**DCL     11948--REDEF
KL_DEFAULT.RENAME
     11967**DCL     11968--REDEF
KL_DFLT.PASSWORD
     11134**DCL     11138--REDEF
KL_DFLT.RENAME
     11157**DCL     11158--REDEF
KL_DREC.PASSWORD
     10972**DCL     10976--REDEF
KL_DREC.RENAME
     10995**DCL     10996--REDEF
KL_DREC_CNT.PASSWORD
     10859**DCL     10863--REDEF
KL_DREC_CNT.RENAME
     10882**DCL     10883--REDEF
NO_GOOD
        10**DCL     12204>>CALLBLT 12208>>CALLBLT
OUT_BUF
      9325**DCL     12208<<CALLBLT 12210<>CALL
POS
        12**DCL     12204<<CALLBLT 12205>>IF
PROJ_KEY.TEXT
      9206**DCL      9206--REDEF
PROJ_KEY.TXT.PROJECT
      9206**DCL      9206--REDEF
REMEM_VAR
      9332**DCL      9332--REDEF
REM_FCMD
      9332**DCL      9333--REDEF
STRING
         8**DCL         6--PROC    12204>>CALLBLT
STR_LEN
         9**DCL         6--PROC        8--IMP-SIZ 12204>>CALLBLT 12205>>IF
USERS_KEY.TEXT
      9203**DCL      9204--REDEF    9204--REDEF    9204--REDEF    9205--REDEF

PL6.E3A0      #004=ASB$DATA_SEG File=ASB$EXT.:E05TSI                             TUE 07/29/97 09:02 Page:101  
      391        1        /*M* ASB$DATA_SEG - routines to manage data segment allocation. */
      392        2        /*T***********************************************************/
      393        3        /*T*                                                         */
      394        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      395        5        /*T*                                                         */
      396        6        /*T***********************************************************/
      397        7        /*P*  NAME:       ASB$DATA_SEG
      398        8              PURPOSE:    Routines to manage data segment allocation.
      399        9              DESCRIPTION:
      400       10                  ASB$DATA_SEG has 3 entry points:
      401       11
      402       12                  ASB$GETSEG - makes the initial allocation of 3 data segments.
      403       13                  ASB$GET_MORE_SEG - increases the size of one the data segments.
      404       14                  ASB$FREE_SEG - frees some of the space in one of the data segments.
      405       15        */
      406       16        ASB$DATA_SEG: PROC(SEG_TYPE, SEG_SIZE)  ALTRET ;
      407       17        %EJECT ;
PL6.E3A0      #004=ASB$DATA_SEG File=ASB$EXT.:E05TSI                             TUE 07/29/97 09:02 Page:102  
      408       18        /*********************************************************************/
      409       19        /*   Parameters      parameters      parameters      parameters      */
      410       20        /*********************************************************************/
      411       21
      412       22    1   DCL SEG_TYPE   UBIN;
      413       23    1   DCL SEG_SIZE   UBIN;
      414       24
      415       25        /*********************************************************************/
      416       26        /*   Include files   include files   include files   include files   */
      417       27        /*********************************************************************/
      418       28                                                              /**/
      419       29        %INCLUDE          CP_6 ;
      420      110        %INCLUDE           AS_SUPER_C  ;
      421      545        %INCLUDE           AS_MAC_C    ;
      422      625        %INCLUDE           AS_SUBS_C   ;
      423     2039        %INCLUDE           KL_SUPER_C  ;
      424     4941        %INCLUDE           XU_MACRO_C  ;
      425     8047        %INCLUDE           XU_FORMAT_C ;
      426     8209        %INCLUDE           AS_SUPER_R  ;
      427    11225        %EJECT ;
PL6.E3A0      #004=ASB$DATA_SEG File=ASB$EXT.:E05TSI                             TUE 07/29/97 09:02 Page:103  
      428    11226        /*********************************************************************/
      429    11227        /*   Static data     static data     static data     static data     */
      430    11228        /*********************************************************************/
      431    11229                                                              /**/
      432    11230    1   DCL 1 GDS1_RESULTS DALIGNED STATIC ,
      433    11231    1          2 BOUND UBIN(20) UNAL ,
      434    11232    1          2 FLAGS UBIN(16) UNAL ,                  /*  Results from gds/fds pmme.  */
      435    11233    1          2 RESULTS$ PTR INIT( ADDR( NIL ) );
      436    11234    1   DCL 1 GDS2_RESULTS DALIGNED STATIC ,
      437    11235    1          2 BOUND UBIN(20) UNAL ,
      438    11236    1          2 FLAGS UBIN(16) UNAL ,                  /*  Results from gds/fds pmme.  */
      439    11237    1          2 RESULTS$ PTR INIT( ADDR( NIL ) );
      440    11238    1   DCL 1 GDS3_RESULTS DALIGNED STATIC ,
      441    11239    1          2 BOUND UBIN(20) UNAL ,
      442    11240    1          2 FLAGS UBIN(16) UNAL ,                  /*  Results from gds/fds pmme.  */
      443    11241    1          2 RESULTS$ PTR INIT( ADDR( NIL ) );
      444    11242        %EJECT ;
PL6.E3A0      #004=ASB$DATA_SEG File=ASB$EXT.:E05TSI                             TUE 07/29/97 09:02 Page:104  
      445    11243        /*********************************************************************/
      446    11244        /*   Fpts            fpts            fpts            fpts            */
      447    11245        /*********************************************************************/
      448    11246                                                                                    /**/
      449    11247              %FPT_GDS( FPTN = FPT_GDS1 ,
      450    11248                        STCLASS = STATIC ,
      451    11249                        RESULTS = GDS1_RESULTS ,
      452    11250                        SEGSIZE = 3072 ) ;
      453    11266              %FPT_GDS( FPTN = FPT_GDS2 ,
      454    11267                        STCLASS = STATIC ,
      455    11268                        RESULTS = GDS2_RESULTS ,
      456    11269                        SEGSIZE = 3072 ) ;
      457    11285              %FPT_GDS( FPTN = FPT_GDS3 ,
      458    11286                        STCLASS = STATIC ,
      459    11287                        RESULTS = GDS3_RESULTS ,
      460    11288                        SEGSIZE = 1024 ) ;
      461    11304              %FPT_FDS( FPTN = FPT_FDS1 ,
      462    11305                        STCLASS = STATIC ,
      463    11306                        RESULTS = GDS1_RESULTS ) ;
      464    11321              %FPT_FDS( FPTN = FPT_FDS2 ,
      465    11322                        STCLASS = STATIC ,
      466    11323                        RESULTS = GDS2_RESULTS ) ;
      467    11338              %FPT_FDS( FPTN = FPT_FDS3 ,
      468    11339                        STCLASS = STATIC ,
      469    11340                        RESULTS = GDS3_RESULTS ) ;
      470    11355    1   DCL B$TCB$ PTR SYMREF ;
      471    11356        %B$TCB ;
      472    11359        %B$ALT ;
      473    11367        %EJECT ;
PL6.E3A0      #004=ASB$DATA_SEG File=ASB$EXT.:E05TSI                             TUE 07/29/97 09:02 Page:105  
      474    11368        /*********************************************************************/
      475    11369        /*   Procedure       procedure       procedure       procedure       */
      476    11370        /*********************************************************************/
      477    11371                                                              /**/
      478    11372        /*
      479    11373            ***            Begin procedure                    ***
      480    11374        */
      481    11375
      482    11376
      483    11377    1   ASB$GET_MORE_SEG: ENTRY( SEG_TYPE, SEG_SIZE ) ALTRET;
      484    11378
      485    11379
      486    11380    2   DO SELECT( SEG_TYPE );
      487    11381    2      SELECT( 1 );
      488    11382    2      FPT_GDS1.V.SEGSIZE# = (SEG_SIZE + 3) / 4;
      489    11383    2      CALL M$GDS( FPT_GDS1 ) ALTRET( GETSEG_ERR );
      490    11384    2      DSEG1SIZE = DSEG1SIZE + SEG_SIZE;
      491    11385    2      SELECT( 2 );
      492    11386    2      FPT_GDS2.V.SEGSIZE# = (SEG_SIZE + 3) / 4;
      493    11387    2      CALL M$GDS( FPT_GDS2 ) ALTRET( GETSEG_ERR );
      494    11388    2      DSEG2SIZE = DSEG2SIZE + SEG_SIZE;
      495    11389    2      SELECT( 3 );
      496    11390    2      FPT_GDS3.V.SEGSIZE# = (SEG_SIZE + 3) / 4;
      497    11391    2      CALL M$GDS( FPT_GDS3 ) ALTRET( GETSEG_ERR );
      498    11392    2      DSEG3SIZE = DSEG3SIZE + SEG_SIZE;
      499    11393    2      END;
      500    11394    1   RETURN;
      501    11395
      502    11396
      503    11397    1   ASB$FREE_SEG: ENTRY( SEG_TYPE, SEG_SIZE ) ALTRET;
      504    11398
      505    11399
      506    11400    2   DO SELECT( SEG_TYPE );
      507    11401    2      SELECT( 1 );
      508    11402    2      FPT_FDS1.V.SEGSIZE# = (SEG_SIZE + 3) / 4;
      509    11403    2      CALL M$FDS( FPT_FDS1 ) ALTRET( GETSEG_ERR );
      510    11404    2      DSEG1SIZE = DSEG1SIZE - SEG_SIZE;
PL6.E3A0      #004=ASB$DATA_SEG File=ASB$EXT.:E05TSI                             TUE 07/29/97 09:02 Page:106  
      511    11405    2      SELECT( 2 );
      512    11406    2      FPT_FDS2.V.SEGSIZE# = (SEG_SIZE + 3) / 4;
      513    11407    2      CALL M$FDS( FPT_FDS2 ) ALTRET( GETSEG_ERR );
      514    11408    2      DSEG2SIZE = DSEG2SIZE - SEG_SIZE;
      515    11409    2      SELECT( 3 );
      516    11410    2      FPT_FDS3.V.SEGSIZE# = (SEG_SIZE + 3) / 4;
      517    11411    2      CALL M$FDS( FPT_FDS3 ) ALTRET( GETSEG_ERR );
      518    11412    2      DSEG3SIZE = DSEG3SIZE - SEG_SIZE;
      519    11413    2      END;
      520    11414    1   RETURN;
      521    11415
      522    11416
      523    11417    1   ASB$GETSEG: ENTRY  ALTRET;
      524    11418
      525    11419
      526    11420    1   CALL M$GDS( FPT_GDS1 ) ALTRET( GETSEG_ERR ) ;
      527    11421    1   DSEG_FLG = AS_TRUE ;
      528    11422    1   DSEG1$ = GDS1_RESULTS.RESULTS$ ;
      529    11423    1   DSEG1SIZE = GDS1_RESULTS.BOUND + 1 ;
      530    11424    1   CALL M$GDS( FPT_GDS2 ) ALTRET( GETSEG_ERR ) ;
      531    11425    1   DSEG2$ = GDS2_RESULTS.RESULTS$ ;
      532    11426    1   DSEG2SIZE = GDS2_RESULTS.BOUND + 1 ;
      533    11427    1   CALL M$GDS( FPT_GDS3 ) ALTRET( GETSEG_ERR ) ;
      534    11428    1   DSEG3$ = GDS3_RESULTS.RESULTS$ ;
      535    11429    1   DSEG3SIZE = GDS3_RESULTS.BOUND + 1 ;
      536    11430    1   RETURN ;
      537    11431                                                              /**/
      538    11432    1   GETSEG_ERR: ;
      539    11433    1   MERR_CODE = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR ;  /*  Save error code  */
      540    11434    1   DSEG_FLG = AS_FALSE ;
      541    11435    1   ALTRETURN ;
      542    11436    1   END   ASB$DATA_SEG ;
      543    11437        %EOD ;

PL6.E3A0      #004=ASB$DATA_SEG File=ASB$EXT.:E05TSI                             TUE 07/29/97 09:02 Page:107  
--  Include file information  --

   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ASB$DATA_SEG.

   Procedure ASB$DATA_SEG requires 163 words for executable code.
   Procedure ASB$DATA_SEG requires 6 words of local(AUTO) storage.

PL6.E3A0      #004=ASB$DATA_SEG File=ASB$EXT.:E05TSI                             TUE 07/29/97 09:02 Page:108  

 Object Unit name= ASB$DATA_SEG                               File name= ASB$EXT.:E05TOU
 UTS= JUL 29 '97 09:02:41.24 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$LO
    2   Data  even  none    42     52  ASB$DATA_SEG
    3   Proc  even  none   163    243  ASB$DATA_SEG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        2  ASB$DATA_SEG
     3      3          yes     yes      Std        2  ASB$GET_MORE_SEG
     3     75          yes     yes      Std        2  ASB$FREE_SEG
     3    167          yes     yes      Std        0  ASB$GETSEG

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 XU_OUTPUT_OPTIONS
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #004=ASB$DATA_SEG File=ASB$EXT.:E05TSI                             TUE 07/29/97 09:02 Page:109  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    AS_TRUE                          r    AS_FALSE
r    AS_MODE                          r    AS_FE_MODE                            M$LO
     ERR_CODE                              REMEM_VAR                             REM_FCMD
     ASA_BRKS_LOC                          DSEG_FLG                              DSEG1$
     DSEG1SIZE                             DSEG2$                                DSEG2SIZE
     DSEG3$                                DSEG3SIZE                             B$TCB$

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #004=ASB$DATA_SEG File=ASB$EXT.:E05TSI                             TUE 07/29/97 09:02 Page:110  


      391        1        /*M* ASB$DATA_SEG - routines to manage data segment allocation. */
      392        2        /*T***********************************************************/
      393        3        /*T*                                                         */
      394        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      395        5        /*T*                                                         */
      396        6        /*T***********************************************************/
      397        7        /*P*  NAME:       ASB$DATA_SEG
      398        8              PURPOSE:    Routines to manage data segment allocation.
      399        9              DESCRIPTION:
      400       10                  ASB$DATA_SEG has 3 entry points:
      401       11
      402       12                  ASB$GETSEG - makes the initial allocation of 3 data segments.
      403       13                  ASB$GET_MORE_SEG - increases the size of one the data segments.
      404       14                  ASB$FREE_SEG - frees some of the space in one of the data segments.
      405       15        */
      406       16        ASB$DATA_SEG: PROC(SEG_TYPE, SEG_SIZE)  ALTRET ;

     16  3 000000   000000 700200 xent  ASB$DATA_SEG TSX0  ! X66_AUTO_2
         3 000001   000006 000002                    ZERO    6,2
         3 000002   000005 710000 3                  TRA     s:11380

      407       17        %EJECT ;
PL6.E3A0      #004=ASB$DATA_SEG File=ASB$EXT.:E05TSI                             TUE 07/29/97 09:02 Page:111  
      408       18        /*********************************************************************/
      409       19        /*   Parameters      parameters      parameters      parameters      */
      410       20        /*********************************************************************/
      411       21
      412       22    1   DCL SEG_TYPE   UBIN;
      413       23    1   DCL SEG_SIZE   UBIN;
      414       24
      415       25        /*********************************************************************/
      416       26        /*   Include files   include files   include files   include files   */
      417       27        /*********************************************************************/
      418       28                                                              /**/
      419       29        %INCLUDE          CP_6 ;
      420      110        %INCLUDE           AS_SUPER_C  ;
      421      545        %INCLUDE           AS_MAC_C    ;
      422      625        %INCLUDE           AS_SUBS_C   ;
      423     2039        %INCLUDE           KL_SUPER_C  ;
      424     4941        %INCLUDE           XU_MACRO_C  ;
      425     8047        %INCLUDE           XU_FORMAT_C ;
      426     8209        %INCLUDE           AS_SUPER_R  ;
      427    11225        %EJECT ;
PL6.E3A0      #004=ASB$DATA_SEG File=ASB$EXT.:E05TSI                             TUE 07/29/97 09:02 Page:112  
      428    11226        /*********************************************************************/
      429    11227        /*   Static data     static data     static data     static data     */
      430    11228        /*********************************************************************/
      431    11229                                                              /**/
      432    11230    1   DCL 1 GDS1_RESULTS DALIGNED STATIC ,
      433    11231    1          2 BOUND UBIN(20) UNAL ,
      434    11232    1          2 FLAGS UBIN(16) UNAL ,                  /*  Results from gds/fds pmme.  */
      435    11233    1          2 RESULTS$ PTR INIT( ADDR( NIL ) );
      436    11234    1   DCL 1 GDS2_RESULTS DALIGNED STATIC ,
      437    11235    1          2 BOUND UBIN(20) UNAL ,
      438    11236    1          2 FLAGS UBIN(16) UNAL ,                  /*  Results from gds/fds pmme.  */
      439    11237    1          2 RESULTS$ PTR INIT( ADDR( NIL ) );
      440    11238    1   DCL 1 GDS3_RESULTS DALIGNED STATIC ,
      441    11239    1          2 BOUND UBIN(20) UNAL ,
      442    11240    1          2 FLAGS UBIN(16) UNAL ,                  /*  Results from gds/fds pmme.  */
      443    11241    1          2 RESULTS$ PTR INIT( ADDR( NIL ) );
      444    11242        %EJECT ;
PL6.E3A0      #004=ASB$DATA_SEG File=ASB$EXT.:E05TSI                             TUE 07/29/97 09:02 Page:113  
      445    11243        /*********************************************************************/
      446    11244        /*   Fpts            fpts            fpts            fpts            */
      447    11245        /*********************************************************************/
      448    11246                                                                                    /**/
      449    11247              %FPT_GDS( FPTN = FPT_GDS1 ,
      450    11248                        STCLASS = STATIC ,
      451    11249                        RESULTS = GDS1_RESULTS ,
      452    11250                        SEGSIZE = 3072 ) ;
      453    11266              %FPT_GDS( FPTN = FPT_GDS2 ,
      454    11267                        STCLASS = STATIC ,
      455    11268                        RESULTS = GDS2_RESULTS ,
      456    11269                        SEGSIZE = 3072 ) ;
      457    11285              %FPT_GDS( FPTN = FPT_GDS3 ,
      458    11286                        STCLASS = STATIC ,
      459    11287                        RESULTS = GDS3_RESULTS ,
      460    11288                        SEGSIZE = 1024 ) ;
      461    11304              %FPT_FDS( FPTN = FPT_FDS1 ,
      462    11305                        STCLASS = STATIC ,
      463    11306                        RESULTS = GDS1_RESULTS ) ;
      464    11321              %FPT_FDS( FPTN = FPT_FDS2 ,
      465    11322                        STCLASS = STATIC ,
      466    11323                        RESULTS = GDS2_RESULTS ) ;
      467    11338              %FPT_FDS( FPTN = FPT_FDS3 ,
      468    11339                        STCLASS = STATIC ,
      469    11340                        RESULTS = GDS3_RESULTS ) ;
      470    11355    1   DCL B$TCB$ PTR SYMREF ;
      471    11356        %B$TCB ;
      472    11359        %B$ALT ;
      473    11367        %EJECT ;
PL6.E3A0      #004=ASB$DATA_SEG File=ASB$EXT.:E05TSI                             TUE 07/29/97 09:02 Page:114  
      474    11368        /*********************************************************************/
      475    11369        /*   Procedure       procedure       procedure       procedure       */
      476    11370        /*********************************************************************/
      477    11371                                                              /**/
      478    11372        /*
      479    11373            ***            Begin procedure                    ***
      480    11374        */
      481    11375
      482    11376
      483    11377    1   ASB$GET_MORE_SEG: ENTRY( SEG_TYPE, SEG_SIZE ) ALTRET;

  11377  3 000003   000000 700200 xent  ASB$GET_MOR* TSX0  ! X66_AUTO_2
         3 000004   000006 000002                    ZERO    6,2

      484    11378
      485    11379
      486    11380    2   DO SELECT( SEG_TYPE );

  11380  3 000005   200003 470500                    LDP0    @SEG_TYPE,,AUTO
         3 000006   000000 236100                    LDQ     0,,PR0
         3 000007   000002 116007                    CMPQ    2,DL
         3 000010   000015 602000 3                  TNC     s:11380+8
         3 000011   000037 600000 3                  TZE     s:11386
         3 000012   000003 116007                    CMPQ    3,DL
         3 000013   000074 601000 3                  TNZ     s:11394
         3 000014   000056 710000 3                  TRA     s:11390
         3 000015   000001 116007                    CMPQ    1,DL
         3 000016   000074 601000 3                  TNZ     s:11394
         3 000017   000020 710000 3                  TRA     s:11382

      487    11381    2      SELECT( 1 );

      488    11382    2      FPT_GDS1.V.SEGSIZE# = (SEG_SIZE + 3) / 4;

  11382  3 000020   200004 471500                    LDP1    @SEG_SIZE,,AUTO
         3 000021   100000 236100                    LDQ     0,,PR1
         3 000022   000003 036007                    ADLQ    3,DL
PL6.E3A0      #004=ASB$DATA_SEG File=ASB$EXT.:E05TSI                             TUE 07/29/97 09:02 Page:115  
         3 000023   000002 772000                    QRL     2
         3 000024   000000 620006                    EAX0    0,QL
         3 000025   000012 440000 2                  SXL0    FPT_GDS1+4

      489    11383    2      CALL M$GDS( FPT_GDS1 ) ALTRET( GETSEG_ERR );

  11383  3 000026   000006 630400 2                  EPPR0   FPT_GDS1
         3 000027   430001 713400                    CLIMB   alt,gds
         3 000030   400400 401760                    pmme    nvectors=2
         3 000031   000233 702000 3                  TSX2    GETSEG_ERR

      490    11384    2      DSEG1SIZE = DSEG1SIZE + SEG_SIZE;

  11384  3 000032   200004 470500                    LDP0    @SEG_SIZE,,AUTO
         3 000033   000000 236000 xsym               LDQ     DSEG1SIZE
         3 000034   000000 036100                    ADLQ    0,,PR0
         3 000035   000000 756000 xsym               STQ     DSEG1SIZE
         3 000036   000074 710000 3                  TRA     s:11394

      491    11385    2      SELECT( 2 );

      492    11386    2      FPT_GDS2.V.SEGSIZE# = (SEG_SIZE + 3) / 4;

  11386  3 000037   200004 471500                    LDP1    @SEG_SIZE,,AUTO
         3 000040   100000 236100                    LDQ     0,,PR1
         3 000041   000003 036007                    ADLQ    3,DL
         3 000042   000002 772000                    QRL     2
         3 000043   000000 620006                    EAX0    0,QL
         3 000044   000020 440000 2                  SXL0    FPT_GDS2+4

      493    11387    2      CALL M$GDS( FPT_GDS2 ) ALTRET( GETSEG_ERR );

  11387  3 000045   000014 630400 2                  EPPR0   FPT_GDS2
         3 000046   430001 713400                    CLIMB   alt,gds
         3 000047   400400 401760                    pmme    nvectors=2
         3 000050   000233 702000 3                  TSX2    GETSEG_ERR

PL6.E3A0      #004=ASB$DATA_SEG File=ASB$EXT.:E05TSI                             TUE 07/29/97 09:02 Page:116  
      494    11388    2      DSEG2SIZE = DSEG2SIZE + SEG_SIZE;

  11388  3 000051   200004 470500                    LDP0    @SEG_SIZE,,AUTO
         3 000052   000000 236000 xsym               LDQ     DSEG2SIZE
         3 000053   000000 036100                    ADLQ    0,,PR0
         3 000054   000000 756000 xsym               STQ     DSEG2SIZE
         3 000055   000074 710000 3                  TRA     s:11394

      495    11389    2      SELECT( 3 );

      496    11390    2      FPT_GDS3.V.SEGSIZE# = (SEG_SIZE + 3) / 4;

  11390  3 000056   200004 471500                    LDP1    @SEG_SIZE,,AUTO
         3 000057   100000 236100                    LDQ     0,,PR1
         3 000060   000003 036007                    ADLQ    3,DL
         3 000061   000002 772000                    QRL     2
         3 000062   000000 620006                    EAX0    0,QL
         3 000063   000026 440000 2                  SXL0    FPT_GDS3+4

      497    11391    2      CALL M$GDS( FPT_GDS3 ) ALTRET( GETSEG_ERR );

  11391  3 000064   000022 630400 2                  EPPR0   FPT_GDS3
         3 000065   430001 713400                    CLIMB   alt,gds
         3 000066   400400 401760                    pmme    nvectors=2
         3 000067   000233 702000 3                  TSX2    GETSEG_ERR

      498    11392    2      DSEG3SIZE = DSEG3SIZE + SEG_SIZE;

  11392  3 000070   200004 470500                    LDP0    @SEG_SIZE,,AUTO
         3 000071   000000 236000 xsym               LDQ     DSEG3SIZE
         3 000072   000000 036100                    ADLQ    0,,PR0
         3 000073   000000 756000 xsym               STQ     DSEG3SIZE

      499    11393    2      END;

      500    11394    1   RETURN;

PL6.E3A0      #004=ASB$DATA_SEG File=ASB$EXT.:E05TSI                             TUE 07/29/97 09:02 Page:117  
  11394  3 000074   000000 702200 xent               TSX2  ! X66_ARET

      501    11395
      502    11396
      503    11397    1   ASB$FREE_SEG: ENTRY( SEG_TYPE, SEG_SIZE ) ALTRET;

  11397  3 000075   000000 700200 xent  ASB$FREE_SEG TSX0  ! X66_AUTO_2
         3 000076   000006 000002                    ZERO    6,2

      504    11398
      505    11399
      506    11400    2   DO SELECT( SEG_TYPE );

  11400  3 000077   200003 470500                    LDP0    @SEG_TYPE,,AUTO
         3 000100   000000 236100                    LDQ     0,,PR0
         3 000101   000002 116007                    CMPQ    2,DL
         3 000102   000107 602000 3                  TNC     s:11400+8
         3 000103   000131 600000 3                  TZE     s:11406
         3 000104   000003 116007                    CMPQ    3,DL
         3 000105   000166 601000 3                  TNZ     s:11414
         3 000106   000150 710000 3                  TRA     s:11410
         3 000107   000001 116007                    CMPQ    1,DL
         3 000110   000166 601000 3                  TNZ     s:11414
         3 000111   000112 710000 3                  TRA     s:11402

      507    11401    2      SELECT( 1 );

      508    11402    2      FPT_FDS1.V.SEGSIZE# = (SEG_SIZE + 3) / 4;

  11402  3 000112   200004 471500                    LDP1    @SEG_SIZE,,AUTO
         3 000113   100000 236100                    LDQ     0,,PR1
         3 000114   000003 036007                    ADLQ    3,DL
         3 000115   000002 772000                    QRL     2
         3 000116   000000 620006                    EAX0    0,QL
         3 000117   000034 440000 2                  SXL0    FPT_FDS1+4

      509    11403    2      CALL M$FDS( FPT_FDS1 ) ALTRET( GETSEG_ERR );
PL6.E3A0      #004=ASB$DATA_SEG File=ASB$EXT.:E05TSI                             TUE 07/29/97 09:02 Page:118  

  11403  3 000120   000030 630400 2                  EPPR0   FPT_FDS1
         3 000121   430002 713400                    CLIMB   alt,fds
         3 000122   400400 401760                    pmme    nvectors=2
         3 000123   000233 702000 3                  TSX2    GETSEG_ERR

      510    11404    2      DSEG1SIZE = DSEG1SIZE - SEG_SIZE;

  11404  3 000124   200004 470500                    LDP0    @SEG_SIZE,,AUTO
         3 000125   000000 236000 xsym               LDQ     DSEG1SIZE
         3 000126   000000 136100                    SBLQ    0,,PR0
         3 000127   000000 756000 xsym               STQ     DSEG1SIZE
         3 000130   000166 710000 3                  TRA     s:11414

      511    11405    2      SELECT( 2 );

      512    11406    2      FPT_FDS2.V.SEGSIZE# = (SEG_SIZE + 3) / 4;

  11406  3 000131   200004 471500                    LDP1    @SEG_SIZE,,AUTO
         3 000132   100000 236100                    LDQ     0,,PR1
         3 000133   000003 036007                    ADLQ    3,DL
         3 000134   000002 772000                    QRL     2
         3 000135   000000 620006                    EAX0    0,QL
         3 000136   000042 440000 2                  SXL0    FPT_FDS2+4

      513    11407    2      CALL M$FDS( FPT_FDS2 ) ALTRET( GETSEG_ERR );

  11407  3 000137   000036 630400 2                  EPPR0   FPT_FDS2
         3 000140   430002 713400                    CLIMB   alt,fds
         3 000141   400400 401760                    pmme    nvectors=2
         3 000142   000233 702000 3                  TSX2    GETSEG_ERR

      514    11408    2      DSEG2SIZE = DSEG2SIZE - SEG_SIZE;

  11408  3 000143   200004 470500                    LDP0    @SEG_SIZE,,AUTO
         3 000144   000000 236000 xsym               LDQ     DSEG2SIZE
         3 000145   000000 136100                    SBLQ    0,,PR0
PL6.E3A0      #004=ASB$DATA_SEG File=ASB$EXT.:E05TSI                             TUE 07/29/97 09:02 Page:119  
         3 000146   000000 756000 xsym               STQ     DSEG2SIZE
         3 000147   000166 710000 3                  TRA     s:11414

      515    11409    2      SELECT( 3 );

      516    11410    2      FPT_FDS3.V.SEGSIZE# = (SEG_SIZE + 3) / 4;

  11410  3 000150   200004 471500                    LDP1    @SEG_SIZE,,AUTO
         3 000151   100000 236100                    LDQ     0,,PR1
         3 000152   000003 036007                    ADLQ    3,DL
         3 000153   000002 772000                    QRL     2
         3 000154   000000 620006                    EAX0    0,QL
         3 000155   000050 440000 2                  SXL0    FPT_FDS3+4

      517    11411    2      CALL M$FDS( FPT_FDS3 ) ALTRET( GETSEG_ERR );

  11411  3 000156   000044 630400 2                  EPPR0   FPT_FDS3
         3 000157   430002 713400                    CLIMB   alt,fds
         3 000160   400400 401760                    pmme    nvectors=2
         3 000161   000233 702000 3                  TSX2    GETSEG_ERR

      518    11412    2      DSEG3SIZE = DSEG3SIZE - SEG_SIZE;

  11412  3 000162   200004 470500                    LDP0    @SEG_SIZE,,AUTO
         3 000163   000000 236000 xsym               LDQ     DSEG3SIZE
         3 000164   000000 136100                    SBLQ    0,,PR0
         3 000165   000000 756000 xsym               STQ     DSEG3SIZE

      519    11413    2      END;

      520    11414    1   RETURN;

  11414  3 000166   000000 702200 xent               TSX2  ! X66_ARET

      521    11415
      522    11416
      523    11417    1   ASB$GETSEG: ENTRY  ALTRET;
PL6.E3A0      #004=ASB$DATA_SEG File=ASB$EXT.:E05TSI                             TUE 07/29/97 09:02 Page:120  

  11417  3 000167   000000 700200 xent  ASB$GETSEG   TSX0  ! X66_AUTO_2
         3 000170   000006 000002                    ZERO    6,2

      524    11418
      525    11419
      526    11420    1   CALL M$GDS( FPT_GDS1 ) ALTRET( GETSEG_ERR ) ;

  11420  3 000171   000006 630400 2                  EPPR0   FPT_GDS1
         3 000172   430001 713400                    CLIMB   alt,gds
         3 000173   400400 401760                    pmme    nvectors=2
         3 000174   000233 702000 3                  TSX2    GETSEG_ERR

      527    11421    1   DSEG_FLG = AS_TRUE ;

  11421  3 000175   000000 236000 xsym               LDQ     AS_TRUE
         3 000176   400000 376003                    ANQ     -131072,DU
         3 000177   000000 756000 xsym               STQ     DSEG_FLG

      528    11422    1   DSEG1$ = GDS1_RESULTS.RESULTS$ ;

  11422  3 000200   000001 236000 2                  LDQ     GDS1_RESULTS+1
         3 000201   000000 756000 xsym               STQ     DSEG1$

      529    11423    1   DSEG1SIZE = GDS1_RESULTS.BOUND + 1 ;

  11423  3 000202   000000 236000 2                  LDQ     GDS1_RESULTS
         3 000203   000020 772000                    QRL     16
         3 000204   000001 036007                    ADLQ    1,DL
         3 000205   000000 756000 xsym               STQ     DSEG1SIZE

      530    11424    1   CALL M$GDS( FPT_GDS2 ) ALTRET( GETSEG_ERR ) ;

  11424  3 000206   000014 630400 2                  EPPR0   FPT_GDS2
         3 000207   430001 713400                    CLIMB   alt,gds
         3 000210   400400 401760                    pmme    nvectors=2
         3 000211   000233 702000 3                  TSX2    GETSEG_ERR
PL6.E3A0      #004=ASB$DATA_SEG File=ASB$EXT.:E05TSI                             TUE 07/29/97 09:02 Page:121  

      531    11425    1   DSEG2$ = GDS2_RESULTS.RESULTS$ ;

  11425  3 000212   000003 236000 2                  LDQ     GDS2_RESULTS+1
         3 000213   000000 756000 xsym               STQ     DSEG2$

      532    11426    1   DSEG2SIZE = GDS2_RESULTS.BOUND + 1 ;

  11426  3 000214   000002 236000 2                  LDQ     GDS2_RESULTS
         3 000215   000020 772000                    QRL     16
         3 000216   000001 036007                    ADLQ    1,DL
         3 000217   000000 756000 xsym               STQ     DSEG2SIZE

      533    11427    1   CALL M$GDS( FPT_GDS3 ) ALTRET( GETSEG_ERR ) ;

  11427  3 000220   000022 630400 2                  EPPR0   FPT_GDS3
         3 000221   430001 713400                    CLIMB   alt,gds
         3 000222   400400 401760                    pmme    nvectors=2
         3 000223   000233 702000 3                  TSX2    GETSEG_ERR

      534    11428    1   DSEG3$ = GDS3_RESULTS.RESULTS$ ;

  11428  3 000224   000005 236000 2                  LDQ     GDS3_RESULTS+1
         3 000225   000000 756000 xsym               STQ     DSEG3$

      535    11429    1   DSEG3SIZE = GDS3_RESULTS.BOUND + 1 ;

  11429  3 000226   000004 236000 2                  LDQ     GDS3_RESULTS
         3 000227   000020 772000                    QRL     16
         3 000230   000001 036007                    ADLQ    1,DL
         3 000231   000000 756000 xsym               STQ     DSEG3SIZE

      536    11430    1   RETURN ;

  11430  3 000232   000000 702200 xent               TSX2  ! X66_ARET

  11429  3 000233                       GETSEG_ERR   null
PL6.E3A0      #004=ASB$DATA_SEG File=ASB$EXT.:E05TSI                             TUE 07/29/97 09:02 Page:122  
      537    11431                                                              /**/
      538    11432    1   GETSEG_ERR: ;
      539    11433    1   MERR_CODE = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR ;  /*  Save error code  */

  11433  3 000233   000000 470400 xsym               LDP0    B$TCB$
         3 000234   000000 471500                    LDP1    0,,PR0
         3 000235   100102 236100                    LDQ     66,,PR1
         3 000236   000000 756000 xsym               STQ     ERR_CODE

      540    11434    1   DSEG_FLG = AS_FALSE ;

  11434  3 000237   000000 236000 xsym               LDQ     AS_FALSE
         3 000240   400000 376003                    ANQ     -131072,DU
         3 000241   000000 756000 xsym               STQ     DSEG_FLG

      541    11435    1   ALTRETURN ;

  11435  3 000242   000000 702200 xent               TSX2  ! X66_AALT
      542    11436    1   END   ASB$DATA_SEG ;
      543    11437        %EOD ;

PL6.E3A0      #004=ASB$DATA_SEG File=ASB$EXT.:E05TSI                             TUE 07/29/97 09:02 Page:123  
--  Include file information  --

   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ASB$DATA_SEG.
PL6.E3A0      #004=ASB$DATA_SEG File=ASB$EXT.:E05TSI                             TUE 07/29/97 09:02 Page:124  

 **** Variables and constants ****

  ****  Section 002  Data  ASB$DATA_SEG

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    30-0-0/d STRC(216)   r     1 FPT_FDS1                  36-0-0/d STRC(216)   r     1 FPT_FDS2
    44-0-0/d STRC(216)   r     1 FPT_FDS3                   6-0-0/d STRC(216)   r     1 FPT_GDS1
    14-0-0/d STRC(216)   r     1 FPT_GDS2                  22-0-0/d STRC(216)   r     1 FPT_GDS3
     0-0-0/d STRC(72)    r     1 GDS1_RESULTS               2-0-0/d STRC(72)    r     1 GDS2_RESULTS
     4-0-0/d STRC(72)    r     1 GDS3_RESULTS

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @SEG_SIZE                  3-0-0/w PTR         r     1 @SEG_TYPE
    *0-0-0/w UBIN        r     1 SEG_SIZE                  *0-0-0/w UBIN        r     1 SEG_TYPE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT         r     1 AS_FALSE                   0-0-0/b BIT         r     1 AS_TRUE
     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w PTR         r     1 DSEG1$
     0-0-0/w UBIN        r     1 DSEG1SIZE                  0-0-0/w PTR         r     1 DSEG2$
     0-0-0/w UBIN        r     1 DSEG2SIZE                  0-0-0/w PTR         r     1 DSEG3$
     0-0-0/w UBIN        r     1 DSEG3SIZE                  0-0-0/b BIT         r     1 DSEG_FLG
     0-0-0/b STRC        r     1 ERR_CODE                   0-0-0/b STRC        r     1 MERR_CODE

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #004=ASB$DATA_SEG File=ASB$EXT.:E05TSI                             TUE 07/29/97 09:02 Page:125  

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB


   Procedure ASB$DATA_SEG requires 163 words for executable code.
   Procedure ASB$DATA_SEG requires 6 words of local(AUTO) storage.
PL6.E3A0      #004=ASB$DATA_SEG File=ASB$EXT.:E05TSI                             TUE 07/29/97 09:02 Page:126  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=ASB$DATA_SEG File=ASB$EXT.:E05TSI                             TUE 07/29/97 09:02 Page:127  
          MINI XREF LISTING

ASA_BRKS_LOC
      8373**DCL      8373--REDEF
AS_DEFAULT.BANNER_PERM
      9066**DCL      9067--REDEF
AS_DEFAULT.BUDGET.MACCT
      8971**DCL      8975--REDEF
AS_DEFAULT.BUDGET.MAX_PROJECTS
      8984**DCL      8987--REDEF
AS_DEFAULT.BUDGET.PACCUM
      8967**DCL      8969--REDEF
AS_DEFAULT.BUDGET.PMAXC
      8962**DCL      8964--REDEF
AS_DEFAULT.SETUP_CHRA.TXT
      9082**DCL      9083--REDEF    9084--REDEF
AS_DEFAULT_DREC.PASSWORD
     10336**DCL     10340--REDEF
AS_DEFAULT_DREC.RENAME
     10359**DCL     10360--REDEF
AS_DFLT.BANNER_PERM
      8888**DCL      8889--REDEF
AS_DFLT.BUDGET.MACCT
      8793**DCL      8797--REDEF
AS_DFLT.BUDGET.MAX_PROJECTS
      8806**DCL      8809--REDEF
AS_DFLT.BUDGET.PACCUM
      8789**DCL      8791--REDEF
AS_DFLT.BUDGET.PMAXC
      8784**DCL      8786--REDEF
AS_DFLT.SETUP_CHRA.TXT
      8904**DCL      8905--REDEF    8906--REDEF
AS_FALSE
      8233**DCL     11434>>ASSIGN
PL6.E3A0      #004=ASB$DATA_SEG File=ASB$EXT.:E05TSI                             TUE 07/29/97 09:02 Page:128  
AS_FE_MODE
      8239**DCL      8240--REDEF
AS_MODE
      8236**DCL      8238--REDEF
AS_MOD_USER.ACCESS
     11101**DCL     11102--REDEF
AS_MOD_USER.BANNER
     11088**DCL     11089--REDEF
AS_MOD_USER.BANNER_PERM
     11090**DCL     11091--REDEF
AS_MOD_USER.BILL
     11096**DCL     11097--REDEF
AS_MOD_USER.CPROC
     11092**DCL     11093--REDEF
AS_MOD_USER.FEBILL
     11172**DCL     11173--REDEF
AS_MOD_USER.FECXTMEM
     11189**DCL     11190--REDEF
AS_MOD_USER.FEMINTS
     11174**DCL     11175--REDEF
AS_MOD_USER.FEMMEM
     11185**DCL     11186--REDEF
AS_MOD_USER.FEMTIME
     11183**DCL     11184--REDEF
AS_MOD_USER.FEPPRIV
     11180**DCL     11182--REDEF
AS_MOD_USER.FEPRIV
     11177**DCL     11179--REDEF
AS_MOD_USER.FORCE_BIT
     11086**DCL     11087--REDEF
AS_MOD_USER.KEY
     11168**DCL     11170--REDEF
AS_MOD_USER.LASTCPROC
     11094**DCL     11095--REDEF
AS_MOD_USER.LIMITS.DO_
     11142**DCL     11143--REDEF
PL6.E3A0      #004=ASB$DATA_SEG File=ASB$EXT.:E05TSI                             TUE 07/29/97 09:02 Page:129  
AS_MOD_USER.LIMITS.FPOOLS
     11158**DCL     11159--REDEF
AS_MOD_USER.LIMITS.LO
     11138**DCL     11139--REDEF
AS_MOD_USER.LIMITS.MEM
     11134**DCL     11135--REDEF
AS_MOD_USER.LIMITS.MPRIO
     11162**DCL     11163--REDEF
AS_MOD_USER.LIMITS.PDIS
     11150**DCL     11151--REDEF
AS_MOD_USER.LIMITS.PO
     11146**DCL     11147--REDEF
AS_MOD_USER.LIMITS.TDIS
     11154**DCL     11155--REDEF
AS_MOD_USER.LIMITS.TIME
     11130**DCL     11131--REDEF
AS_MOD_USER.MAXENQ
     11111**DCL     11112--REDEF
AS_MOD_USER.PERM_BIT
     11084**DCL     11085--REDEF
AS_MOD_USER.PPRIV
     11106**DCL     11108--REDEF
AS_MOD_USER.PRIOB
     11113**DCL     11114--REDEF
AS_MOD_USER.PRIV
     11103**DCL     11105--REDEF
AS_MOD_USER.QUAN
     11109**DCL     11110--REDEF
AS_MOD_USER.SETUP
     11082**DCL     11083--REDEF
AS_PROJECT.BANNER_PERM
      9422**DCL      9423--REDEF
AS_PROJECT.BUDGET.MACCT
      9327**DCL      9331--REDEF
AS_PROJECT.BUDGET.MAX_PROJECTS
      9340**DCL      9343--REDEF
PL6.E3A0      #004=ASB$DATA_SEG File=ASB$EXT.:E05TSI                             TUE 07/29/97 09:02 Page:130  
AS_PROJECT.BUDGET.PACCUM
      9323**DCL      9325--REDEF
AS_PROJECT.BUDGET.PMAXC
      9318**DCL      9320--REDEF
AS_PROJECT.SETUP_CHRA.TXT
      9438**DCL      9439--REDEF    9440--REDEF
AS_PROJECT_DFLT.BANNER_PERM
      9600**DCL      9601--REDEF
AS_PROJECT_DFLT.BUDGET.MACCT
      9505**DCL      9509--REDEF
AS_PROJECT_DFLT.BUDGET.MAX_PROJECTS
      9518**DCL      9521--REDEF
AS_PROJECT_DFLT.BUDGET.PACCUM
      9501**DCL      9503--REDEF
AS_PROJECT_DFLT.BUDGET.PMAXC
      9496**DCL      9498--REDEF
AS_PROJECT_DFLT.SETUP_CHRA.TXT
      9616**DCL      9617--REDEF    9618--REDEF
AS_PROJECT_DFLT_DREC.PASSWORD
     10822**DCL     10826--REDEF
AS_PROJECT_DFLT_DREC.RENAME
     10845**DCL     10846--REDEF
AS_PROJECT_DREC.PASSWORD
     10660**DCL     10664--REDEF
AS_PROJECT_DREC.RENAME
     10683**DCL     10684--REDEF
AS_PROJ_ADMIN.BANNER_PERM
      9244**DCL      9245--REDEF
AS_PROJ_ADMIN.BUDGET.MACCT
      9149**DCL      9153--REDEF
AS_PROJ_ADMIN.BUDGET.MAX_PROJECTS
      9162**DCL      9165--REDEF
AS_PROJ_ADMIN.BUDGET.PACCUM
      9145**DCL      9147--REDEF
AS_PROJ_ADMIN.BUDGET.PMAXC
      9140**DCL      9142--REDEF
PL6.E3A0      #004=ASB$DATA_SEG File=ASB$EXT.:E05TSI                             TUE 07/29/97 09:02 Page:131  
AS_PROJ_ADMIN.SETUP_CHRA.TXT
      9260**DCL      9261--REDEF    9262--REDEF
AS_PROJ_ADMIN_DREC.PASSWORD
     10498**DCL     10502--REDEF
AS_PROJ_ADMIN_DREC.RENAME
     10521**DCL     10522--REDEF
AS_TRUE
      8233**DCL     11421>>ASSIGN
AS_USERS.BANNER_PERM
      8710**DCL      8711--REDEF
AS_USERS.BUDGET.MACCT
      8615**DCL      8619--REDEF
AS_USERS.BUDGET.MAX_PROJECTS
      8628**DCL      8631--REDEF
AS_USERS.BUDGET.PACCUM
      8611**DCL      8613--REDEF
AS_USERS.BUDGET.PMAXC
      8606**DCL      8608--REDEF
AS_USERS.SETUP_CHRA.TXT
      8726**DCL      8727--REDEF    8728--REDEF
AS_USERS_CONSTANT.BANNER_PERM
      9778**DCL      9779--REDEF
AS_USERS_CONSTANT.BUDGET.MACCT
      9683**DCL      9687--REDEF
AS_USERS_CONSTANT.BUDGET.MAX_PROJECTS
      9696**DCL      9699--REDEF
AS_USERS_CONSTANT.BUDGET.PACCUM
      9679**DCL      9681--REDEF
AS_USERS_CONSTANT.BUDGET.PMAXC
      9674**DCL      9676--REDEF
AS_USERS_CONSTANT.SETUP_CHRA.TXT
      9794**DCL      9795--REDEF    9796--REDEF
B$ALT.CODE
     11361**DCL     11361--REDEF   11362--REDEF   11362--REDEF
B$ALT.ERR
     11362**DCL     11433>>ASSIGN
PL6.E3A0      #004=ASB$DATA_SEG File=ASB$EXT.:E05TSI                             TUE 07/29/97 09:02 Page:132  
B$ALT.ERR.ERR#
     11363**DCL     11363--REDEF
B$ALT.EVID
     11362**DCL     11362--REDEF   11362--REDEF
B$TCB.ALT$
     11357**DCL     11433>>ASSIGN
B$TCB$
     11355**DCL     11433>>ASSIGN
DSEG1$
      8374**DCL     11422<<ASSIGN
DSEG1SIZE
      8375**DCL     11384<<ASSIGN  11384>>ASSIGN  11404<<ASSIGN  11404>>ASSIGN  11423<<ASSIGN
DSEG2$
      8375**DCL     11425<<ASSIGN
DSEG2SIZE
      8375**DCL     11388<<ASSIGN  11388>>ASSIGN  11408<<ASSIGN  11408>>ASSIGN  11426<<ASSIGN
DSEG3$
      8375**DCL     11428<<ASSIGN
DSEG3SIZE
      8375**DCL     11392<<ASSIGN  11392>>ASSIGN  11412<<ASSIGN  11412>>ASSIGN  11429<<ASSIGN
DSEG_FLG
      8374**DCL     11421<<ASSIGN  11434<<ASSIGN
ERR_CODE
      8368**DCL      8369--REDEF
FPT_FDS1
     11317**DCL     11403<>CALL
FPT_FDS1.V
     11317**DCL     11317--DCLINIT
FPT_FDS1.V.SEGSIZE#
     11319**DCL     11402<<ASSIGN
FPT_FDS2
     11334**DCL     11407<>CALL
FPT_FDS2.V
     11334**DCL     11334--DCLINIT
FPT_FDS2.V.SEGSIZE#
     11336**DCL     11406<<ASSIGN
PL6.E3A0      #004=ASB$DATA_SEG File=ASB$EXT.:E05TSI                             TUE 07/29/97 09:02 Page:133  
FPT_FDS3
     11351**DCL     11411<>CALL
FPT_FDS3.V
     11351**DCL     11351--DCLINIT
FPT_FDS3.V.SEGSIZE#
     11353**DCL     11410<<ASSIGN
FPT_GDS1
     11261**DCL     11383<>CALL    11420<>CALL
FPT_GDS1.V
     11261**DCL     11261--DCLINIT
FPT_GDS1.V.SEGSIZE#
     11264**DCL     11382<<ASSIGN
FPT_GDS2
     11280**DCL     11387<>CALL    11424<>CALL
FPT_GDS2.V
     11280**DCL     11280--DCLINIT
FPT_GDS2.V.SEGSIZE#
     11283**DCL     11386<<ASSIGN
FPT_GDS3
     11299**DCL     11391<>CALL    11427<>CALL
FPT_GDS3.V
     11299**DCL     11299--DCLINIT
FPT_GDS3.V.SEGSIZE#
     11302**DCL     11390<<ASSIGN
GDS1_RESULTS
     11230**DCL     11261--DCLINIT 11317--DCLINIT
GDS1_RESULTS.BOUND
     11231**DCL     11423>>ASSIGN
GDS1_RESULTS.RESULTS$
     11233**DCL     11422>>ASSIGN
GDS2_RESULTS
     11234**DCL     11280--DCLINIT 11334--DCLINIT
GDS2_RESULTS.BOUND
     11235**DCL     11426>>ASSIGN
GDS2_RESULTS.RESULTS$
     11237**DCL     11425>>ASSIGN
PL6.E3A0      #004=ASB$DATA_SEG File=ASB$EXT.:E05TSI                             TUE 07/29/97 09:02 Page:134  
GDS3_RESULTS
     11238**DCL     11299--DCLINIT 11351--DCLINIT
GDS3_RESULTS.BOUND
     11239**DCL     11429>>ASSIGN
GDS3_RESULTS.RESULTS$
     11241**DCL     11428>>ASSIGN
GETSEG_ERR
     11429**LABEL   11383--CALLALT 11387--CALLALT 11391--CALLALT 11403--CALLALT 11407--CALLALT 11411--CALLALT
     11420--CALLALT 11424--CALLALT 11427--CALLALT
KL_DEFAULT.PASSWORD
     10984**DCL     10988--REDEF
KL_DEFAULT.RENAME
     11007**DCL     11008--REDEF
KL_DFLT.PASSWORD
     10174**DCL     10178--REDEF
KL_DFLT.RENAME
     10197**DCL     10198--REDEF
KL_DREC.PASSWORD
     10012**DCL     10016--REDEF
KL_DREC.RENAME
     10035**DCL     10036--REDEF
KL_DREC_CNT.PASSWORD
      9899**DCL      9903--REDEF
KL_DREC_CNT.RENAME
      9922**DCL      9923--REDEF
M$FDS
        73**DCL-ENT 11403--CALL    11407--CALL    11411--CALL
M$GDS
        73**DCL-ENT 11383--CALL    11387--CALL    11391--CALL    11420--CALL    11424--CALL    11427--CALL
MERR_CODE
      8369**DCL     11433<<ASSIGN
PROJ_KEY.TEXT
      8246**DCL      8246--REDEF
PROJ_KEY.TXT.PROJECT
      8246**DCL      8246--REDEF
REMEM_VAR
PL6.E3A0      #004=ASB$DATA_SEG File=ASB$EXT.:E05TSI                             TUE 07/29/97 09:02 Page:135  
      8372**DCL      8372--REDEF
REM_FCMD
      8372**DCL      8373--REDEF
SEG_SIZE
        23**DCL        16--PROC    11377--ENTRY   11382>>ASSIGN  11384>>ASSIGN  11386>>ASSIGN  11388>>ASSIGN
     11390>>ASSIGN  11392>>ASSIGN  11397--ENTRY   11402>>ASSIGN  11404>>ASSIGN  11406>>ASSIGN  11408>>ASSIGN
     11410>>ASSIGN  11412>>ASSIGN
SEG_TYPE
        22**DCL        16--PROC    11377--ENTRY   11380>>DOSELCT 11397--ENTRY   11400>>DOSELCT
USERS_KEY.TEXT
      8243**DCL      8244--REDEF    8244--REDEF    8244--REDEF    8245--REDEF

PL6.E3A0      #005=ASB$BINCHAR File=ASB$EXT.:E05TSI                              TUE 07/29/97 09:04 Page:136  
      544        1        /*M* ASB$BINCHAR - converts a binary number into a numeric character string. */
      545        2        /*T***********************************************************/
      546        3        /*T*                                                         */
      547        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      548        5        /*T*                                                         */
      549        6        /*T***********************************************************/
      550        7                                                              /**/
      551        8        ASB$BINCHAR: PROC( BUFFER, BUF_START, TYPE, VALUE );
      552        9
      553       10
      554       11        /********************************************************************/
      555       12        /*   Include files   include files   include files   include files   */
      556       13        /*********************************************************************/
      557       14                                                              /**/
      558       15        %INCLUDE           B_MICROPS_C;
      559      187
      560      188
      561      189        /********************************************************************/
      562      190        /*   Symrefs         symrefs         symrefs         symrefs         */
      563      191        /*********************************************************************/
      564      192                                                              /**/
      565      193    1   DCL 1 AS_FIELD1 SYMREF ALIGNED,
      566      194    1          2 COUNT UBIN BYTE UNAL,
      567      195    1          2 TEXT CHAR(40) UNAL;
      568      196    1   DCL 1 AS_FIELD2 SYMREF ALIGNED,
      569      197    1          2 COUNT UBIN BYTE UNAL,
      570      198    1          2 TEXT CHAR(40) UNAL;
      571      199    1   DCL 1 AS_FIELD3 SYMREF ALIGNED,
      572      200    1          2 COUNT UBIN BYTE UNAL,
      573      201    1          2 TEXT CHAR(40) UNAL;
      574      202
      575      203        %EJECT;
PL6.E3A0      #005=ASB$BINCHAR File=ASB$EXT.:E05TSI                              TUE 07/29/97 09:04 Page:137  
      576      204        /********************************************************************/
      577      205        /*   Parameters      parameters      parameters      parameters      */
      578      206        /*********************************************************************/
      579      207                                                              /**/
      580      208    1   DCL BUFFER        CHAR(132) UNAL;
      581      209    1   DCL BUF_START     UBIN;
      582      210    1   DCL TYPE          SBIN;
      583      211    1   DCL VALUE         UBIN;
      584      212    1   DCL SBIN_VALUE REDEF VALUE SBIN;
      585      213
      586      214        %EJECT;
PL6.E3A0      #005=ASB$BINCHAR File=ASB$EXT.:E05TSI                              TUE 07/29/97 09:04 Page:138  
      587      215        /********************************************************************/
      588      216        /*   Auto data       auto data       auto data       auto data       */
      589      217        /*********************************************************************/
      590      218                                                              /**/
      591      219    1   DCL TEMP1                 CHAR(13);
      592      220    1   DCL TEMP2                 CHAR(13);
      593      221    1   DCL J                     UBIN ;
      594      222    1   DCL SIZE                  UBIN;
      595      223    1   DCL T_INDEX               UBIN;
      596      224        %EJECT;
PL6.E3A0      #005=ASB$BINCHAR File=ASB$EXT.:E05TSI                              TUE 07/29/97 09:04 Page:139  
      597      225        /*********************************************************************/
      598      226        /*   Constant data   constant data   constant data   constant data   */
      599      227        /*********************************************************************/
      600      228                                                                                      /**/
      601      229    1   DCL MOPSTR1(0:1) BIT(9) CONSTANT INIT(%MVZB12, %MVC1 );
      602      230    1   DCL MOPSTR2(0:4) BIT(9) CONSTANT INIT(%LTE3, '040'O, %MFLS11, %ENF00, %MVC1 );
      603      231
      604      232        %EJECT;
PL6.E3A0      #005=ASB$BINCHAR File=ASB$EXT.:E05TSI                              TUE 07/29/97 09:04 Page:140  
      605      233        /********************************************************************/
      606      234        /*   Procedure       procedure       procedure       procedure       */
      607      235        /*********************************************************************/
      608      236                                                              /**/
      609      237    1   CALL BINCHAR( TEMP1, VALUE );
      610      238    1   CALL EDITCHAR( TEMP2, 0, 13, MOPSTR1, TEMP1 );
      611      239    1   GOTO COMMON_CODE;
      612      240                                                              /**/
      613      241    1   ASB$BINXCHAR: ENTRY( BUFFER, BUF_START, TYPE, VALUE );
      614      242                                                              /**/
      615      243    1   CALL BINXCHAR( TEMP1, VALUE );
      616      244    1   CALL EDITXCHAR( TEMP2, 0, 13, MOPSTR2, TEMP1 );
      617      245                                                              /**/
      618      246    1   COMMON_CODE: ;
      619      247    1   CALL INDEX1R( T_INDEX, ' ', TEMP2 );
      620      248    1   IF TYPE >= 0
      621      249    2   THEN DO;
      622      250    2      IF TYPE = 0
      623      251    2      THEN SIZE = 12;
      624      252    2      ELSE SIZE = TYPE;
      625      253    2      T_INDEX = 13 - SIZE;
      626      254    2      END;
      627      255    2   ELSE DO;
      628      256    2      SIZE = 12 - T_INDEX;
      629      257    2      T_INDEX = T_INDEX + 1;
      630      258    2      J = - TYPE;
      631      259    3      DO SELECT( J );
      632      260    3         SELECT( 1 );
      633      261    3         AS_FIELD1.COUNT = SIZE;
      634      262    3         SELECT( 2 );
      635      263    3         AS_FIELD2.COUNT = SIZE;
      636      264    3         SELECT( 3 );
      637      265    3         AS_FIELD3.COUNT = SIZE;
      638      266    3         END;
      639      267    2      END;
      640      268
      641      269    1   CALL INSERT( BUFFER, BUF_START, SIZE, SUBSTR( TEMP2, T_INDEX, SIZE) );
PL6.E3A0      #005=ASB$BINCHAR File=ASB$EXT.:E05TSI                              TUE 07/29/97 09:04 Page:141  
      642      270
      643      271    1   END ASB$BINCHAR;
      644      272        %EOD;

PL6.E3A0      #005=ASB$BINCHAR File=ASB$EXT.:E05TSI                              TUE 07/29/97 09:04 Page:142  
--  Include file information  --

   B_MICROPS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ASB$BINCHAR.

   Procedure ASB$BINCHAR requires 85 words for executable code.
   Procedure ASB$BINCHAR requires 20 words of local(AUTO) storage.

PL6.E3A0      #005=ASB$BINCHAR File=ASB$EXT.:E05TSI                              TUE 07/29/97 09:04 Page:143  

 Object Unit name= ASB$BINCHAR                                File name= ASB$EXT.:E05TOU
 UTS= JUL 29 '97 09:04:01.36 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      3      3  ASB$BINCHAR
    1   Proc  even  none    85    125  ASB$BINCHAR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        4  ASB$BINCHAR
     1     16                  yes      Std        4  ASB$BINXCHAR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_4
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     AS_FIELD1                             AS_FIELD2                             AS_FIELD3
     B_VECTNIL
PL6.E3A0      #005=ASB$BINCHAR File=ASB$EXT.:E05TSI                              TUE 07/29/97 09:04 Page:144  


      544        1        /*M* ASB$BINCHAR - converts a binary number into a numeric character string. */
      545        2        /*T***********************************************************/
      546        3        /*T*                                                         */
      547        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      548        5        /*T*                                                         */
      549        6        /*T***********************************************************/
      550        7                                                              /**/
      551        8        ASB$BINCHAR: PROC( BUFFER, BUF_START, TYPE, VALUE );

      8  1 000000   000000 700200 xent  ASB$BINCHAR  TSX0  ! X66_AUTO_4
         1 000001   000024 000004                    ZERO    20,4

      552        9
      553       10
      554       11        /********************************************************************/
      555       12        /*   Include files   include files   include files   include files   */
      556       13        /*********************************************************************/
      557       14                                                              /**/
      558       15        %INCLUDE           B_MICROPS_C;
      559      187
      560      188
      561      189        /********************************************************************/
      562      190        /*   Symrefs         symrefs         symrefs         symrefs         */
      563      191        /*********************************************************************/
      564      192                                                              /**/
      565      193    1   DCL 1 AS_FIELD1 SYMREF ALIGNED,
      566      194    1          2 COUNT UBIN BYTE UNAL,
      567      195    1          2 TEXT CHAR(40) UNAL;
      568      196    1   DCL 1 AS_FIELD2 SYMREF ALIGNED,
      569      197    1          2 COUNT UBIN BYTE UNAL,
      570      198    1          2 TEXT CHAR(40) UNAL;
      571      199    1   DCL 1 AS_FIELD3 SYMREF ALIGNED,
      572      200    1          2 COUNT UBIN BYTE UNAL,
      573      201    1          2 TEXT CHAR(40) UNAL;
      574      202
      575      203        %EJECT;
PL6.E3A0      #005=ASB$BINCHAR File=ASB$EXT.:E05TSI                              TUE 07/29/97 09:04 Page:145  
      576      204        /********************************************************************/
      577      205        /*   Parameters      parameters      parameters      parameters      */
      578      206        /*********************************************************************/
      579      207                                                              /**/
      580      208    1   DCL BUFFER        CHAR(132) UNAL;
      581      209    1   DCL BUF_START     UBIN;
      582      210    1   DCL TYPE          SBIN;
      583      211    1   DCL VALUE         UBIN;
      584      212    1   DCL SBIN_VALUE REDEF VALUE SBIN;
      585      213
      586      214        %EJECT;
PL6.E3A0      #005=ASB$BINCHAR File=ASB$EXT.:E05TSI                              TUE 07/29/97 09:04 Page:146  
      587      215        /********************************************************************/
      588      216        /*   Auto data       auto data       auto data       auto data       */
      589      217        /*********************************************************************/
      590      218                                                              /**/
      591      219    1   DCL TEMP1                 CHAR(13);
      592      220    1   DCL TEMP2                 CHAR(13);
      593      221    1   DCL J                     UBIN ;
      594      222    1   DCL SIZE                  UBIN;
      595      223    1   DCL T_INDEX               UBIN;
      596      224        %EJECT;
PL6.E3A0      #005=ASB$BINCHAR File=ASB$EXT.:E05TSI                              TUE 07/29/97 09:04 Page:147  
      597      225        /*********************************************************************/
      598      226        /*   Constant data   constant data   constant data   constant data   */
      599      227        /*********************************************************************/
      600      228                                                                                      /**/
      601      229    1   DCL MOPSTR1(0:1) BIT(9) CONSTANT INIT(%MVZB12, %MVC1 );
      602      230    1   DCL MOPSTR2(0:4) BIT(9) CONSTANT INIT(%LTE3, '040'O, %MFLS11, %ENF00, %MVC1 );
      603      231
      604      232        %EJECT;
PL6.E3A0      #005=ASB$BINCHAR File=ASB$EXT.:E05TSI                              TUE 07/29/97 09:04 Page:148  
      605      233        /********************************************************************/
      606      234        /*   Procedure       procedure       procedure       procedure       */
      607      235        /*********************************************************************/
      608      236                                                              /**/
      609      237    1   CALL BINCHAR( TEMP1, VALUE );

    237  1 000002   200006 470500                    LDP0    @VALUE,,AUTO
         1 000003   000000 235100                    LDA     0,,PR0
         1 000004   000044 773000                    LRL     36
         1 000005   200022 757100                    STAQ    T_INDEX+1,,AUTO
         1 000006   000100 301500                    BTD
         1 000007   200022 000010                    NDSC9   T_INDEX+1,,AUTO          cn=0,s=lsgnf,sf=0,n=8
         1 000010   200007 030015                    NDSC9   TEMP1,,AUTO              cn=0,s=nosgn,sf=0,n=13

      610      238    1   CALL EDITCHAR( TEMP2, 0, 13, MOPSTR1, TEMP1 );

    238  1 000011   100000 024500                    MVNE
         1 000012   200007 030015                    NDSC9   TEMP1,,AUTO              cn=0,s=nosgn,sf=0,n=13
         1 000013   000000 000002 0                  ADSC9   MOPSTR1                  cn=0,n=2
         1 000014   200013 000015                    ADSC9   TEMP2,,AUTO              cn=0,n=13

      611      239    1   GOTO COMMON_CODE;

    239  1 000015   000033 710000 1                  TRA     COMMON_CODE

      612      240                                                              /**/
      613      241    1   ASB$BINXCHAR: ENTRY( BUFFER, BUF_START, TYPE, VALUE );

    241  1 000016   000000 700200 xent  ASB$BINXCHAR TSX0  ! X66_AUTO_4
         1 000017   000024 000004                    ZERO    20,4

      614      242                                                              /**/
      615      243    1   CALL BINXCHAR( TEMP1, VALUE );

    243  1 000020   200006 470500                    LDP0    @VALUE,,AUTO
         1 000021   000000 235100                    LDA     0,,PR0
         1 000022   000044 773000                    LRL     36
PL6.E3A0      #005=ASB$BINCHAR File=ASB$EXT.:E05TSI                              TUE 07/29/97 09:04 Page:149  
         1 000023   200022 757100                    STAQ    T_INDEX+1,,AUTO
         1 000024   000100 301500                    BTD
         1 000025   200022 000010                    NDSC9   T_INDEX+1,,AUTO          cn=0,s=lsgnf,sf=0,n=8
         1 000026   200007 010015                    NDSC9   TEMP1,,AUTO              cn=0,s=lsgns,sf=0,n=13

      616      244    1   CALL EDITXCHAR( TEMP2, 0, 13, MOPSTR2, TEMP1 );

    244  1 000027   100000 024500                    MVNE
         1 000030   200007 010015                    NDSC9   TEMP1,,AUTO              cn=0,s=lsgns,sf=0,n=13
         1 000031   000001 000005 0                  ADSC9   MOPSTR2                  cn=0,n=5
         1 000032   200013 000015                    ADSC9   TEMP2,,AUTO              cn=0,n=13

    244  1 000033                       COMMON_CODE  null
      617      245                                                              /**/
      618      246    1   COMMON_CODE: ;
      619      247    1   CALL INDEX1R( T_INDEX, ' ', TEMP2 );

    247  1 000033   000000 125500                    SCMR    mask='000'O
         1 000034   200013 000015                    ADSC9   TEMP2,,AUTO              cn=0,n=13
         1 000035   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         1 000036   200021 000100                    ARG     T_INDEX,,AUTO
         1 000037   000042 606400 1                  TTN     s:248
         1 000040   000014 236007                    LDQ     12,DL
         1 000041   200021 156100                    SSQ     T_INDEX,,AUTO

      620      248    1   IF TYPE >= 0

    248  1 000042   200005 471500                    LDP1    @TYPE,,AUTO
         1 000043   100000 235100                    LDA     0,,PR1
         1 000044   000056 604000 1                  TMI     s:256

      621      249    2   THEN DO;

      622      250    2      IF TYPE = 0

    250  1 000045   000051 601000 1                  TNZ     s:252

PL6.E3A0      #005=ASB$BINCHAR File=ASB$EXT.:E05TSI                              TUE 07/29/97 09:04 Page:150  
      623      251    2      THEN SIZE = 12;

    251  1 000046   000014 236007                    LDQ     12,DL
         1 000047   200020 756100                    STQ     SIZE,,AUTO
         1 000050   000052 710000 1                  TRA     s:253

      624      252    2      ELSE SIZE = TYPE;

    252  1 000051   200020 755100                    STA     SIZE,,AUTO

      625      253    2      T_INDEX = 13 - SIZE;

    253  1 000052   000015 236007                    LDQ     13,DL
         1 000053   200020 136100                    SBLQ    SIZE,,AUTO
         1 000054   200021 756100                    STQ     T_INDEX,,AUTO

      626      254    2      END;

    254  1 000055   000114 710000 1                  TRA     s:269

      627      255    2   ELSE DO;

      628      256    2      SIZE = 12 - T_INDEX;

    256  1 000056   000014 236007                    LDQ     12,DL
         1 000057   200021 136100                    SBLQ    T_INDEX,,AUTO
         1 000060   200020 756100                    STQ     SIZE,,AUTO

      629      257    2      T_INDEX = T_INDEX + 1;

    257  1 000061   200021 235100                    LDA     T_INDEX,,AUTO
         1 000062   000001 035007                    ADLA    1,DL
         1 000063   200021 755100                    STA     T_INDEX,,AUTO

      630      258    2      J = - TYPE;

    258  1 000064   100000 235100                    LDA     0,,PR1
PL6.E3A0      #005=ASB$BINCHAR File=ASB$EXT.:E05TSI                              TUE 07/29/97 09:04 Page:151  
         1 000065   000000 531000                    NEG     0
         1 000066   200017 755100                    STA     J,,AUTO

      631      259    3      DO SELECT( J );

    259  1 000067   200017 236100                    LDQ     J,,AUTO
         1 000070   000002 116007                    CMPQ    2,DL
         1 000071   000076 602000 1                  TNC     s:259+7
         1 000072   000105 600000 1                  TZE     s:263
         1 000073   000003 116007                    CMPQ    3,DL
         1 000074   000114 601000 1                  TNZ     s:269
         1 000075   000111 710000 1                  TRA     s:265
         1 000076   000001 116007                    CMPQ    1,DL
         1 000077   000114 601000 1                  TNZ     s:269
         1 000100   000101 710000 1                  TRA     s:261

      632      260    3         SELECT( 1 );

      633      261    3         AS_FIELD1.COUNT = SIZE;

    261  1 000101   200020 236100                    LDQ     SIZE,,AUTO
         1 000102   000033 736000                    QLS     27
         1 000103   000000 552040 xsym               STBQ    AS_FIELD1,'40'O
         1 000104   000114 710000 1                  TRA     s:269

      634      262    3         SELECT( 2 );

      635      263    3         AS_FIELD2.COUNT = SIZE;

    263  1 000105   200020 236100                    LDQ     SIZE,,AUTO
         1 000106   000033 736000                    QLS     27
         1 000107   000000 552040 xsym               STBQ    AS_FIELD2,'40'O
         1 000110   000114 710000 1                  TRA     s:269

      636      264    3         SELECT( 3 );

      637      265    3         AS_FIELD3.COUNT = SIZE;
PL6.E3A0      #005=ASB$BINCHAR File=ASB$EXT.:E05TSI                              TUE 07/29/97 09:04 Page:152  

    265  1 000111   200020 236100                    LDQ     SIZE,,AUTO
         1 000112   000033 736000                    QLS     27
         1 000113   000000 552040 xsym               STBQ    AS_FIELD3,'40'O

      638      266    3         END;

      639      267    2      END;

      640      268
      641      269    1   CALL INSERT( BUFFER, BUF_START, SIZE, SUBSTR( TEMP2, T_INDEX, SIZE) );

    269  1 000114   200004 473500                    LDP3    @BUF_START,,AUTO
         1 000115   300000 235100                    LDA     0,,PR3
         1 000116   200020 720100                    LXL0    SIZE,,AUTO
         1 000117   200021 236100                    LDQ     T_INDEX,,AUTO
         1 000120   200003 474500                    LDP4    @BUFFER,,AUTO
         1 000121   040145 100546                    MLR     fill='040'O
         1 000122   200013 000010                    ADSC9   TEMP2,Q,AUTO             cn=0,n=*X0
         1 000123   400000 000010                    ADSC9   0,A,PR4                  cn=0,n=*X0

      642      270
      643      271    1   END ASB$BINCHAR;

    271  1 000124   000000 702200 xent               TSX2  ! X66_ARET
      644      272        %EOD;

PL6.E3A0      #005=ASB$BINCHAR File=ASB$EXT.:E05TSI                              TUE 07/29/97 09:04 Page:153  
--  Include file information  --

   B_MICROPS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ASB$BINCHAR.
PL6.E3A0      #005=ASB$BINCHAR File=ASB$EXT.:E05TSI                              TUE 07/29/97 09:04 Page:154  

 **** Variables and constants ****

  ****  Section 000 RoData ASB$BINCHAR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT (9)     r     1 MOPSTR1(0:1)
     1-0-0/b BIT (9)     r     1 MOPSTR2(0:4)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @BUFFER                    4-0-0/w PTR         r     1 @BUF_START
     5-0-0/w PTR         r     1 @TYPE                      6-0-0/w PTR         r     1 @VALUE
    *0-0-0/c CHAR(132)   r     1 BUFFER                    *0-0-0/w UBIN        r     1 BUF_START
    17-0-0/w UBIN        r     1 J                         20-0-0/w UBIN        r     1 SIZE
     7-0-0/c CHAR(13)    r     1 TEMP1                     13-0-0/c CHAR(13)    r     1 TEMP2
    *0-0-0/w SBIN        r     1 TYPE                      21-0-0/w UBIN        r     1 T_INDEX
    *0-0-0/w UBIN        r     1 VALUE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(369)   r     1 AS_FIELD1                  0-0-0/w STRC(369)   r     1 AS_FIELD2
     0-0-0/w STRC(369)   r     1 AS_FIELD3


   Procedure ASB$BINCHAR requires 85 words for executable code.
   Procedure ASB$BINCHAR requires 20 words of local(AUTO) storage.
PL6.E3A0      #005=ASB$BINCHAR File=ASB$EXT.:E05TSI                              TUE 07/29/97 09:04 Page:155  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=ASB$BINCHAR File=ASB$EXT.:E05TSI                              TUE 07/29/97 09:04 Page:156  
          MINI XREF LISTING

AS_FIELD1.COUNT
       194**DCL       261<<ASSIGN
AS_FIELD2.COUNT
       197**DCL       263<<ASSIGN
AS_FIELD3.COUNT
       200**DCL       265<<ASSIGN
BUFFER
       208**DCL         8--PROC      241--ENTRY     269<<CALLBLT
BUF_START
       209**DCL         8--PROC      241--ENTRY     269>>CALLBLT
COMMON_CODE
       244**LABEL     239--GOTO
J
       221**DCL       258<<ASSIGN    259>>DOSELCT
MOPSTR1
       229**DCL       238>>CALLBLT
MOPSTR2
       230**DCL       244>>CALLBLT
SIZE
       222**DCL       251<<ASSIGN    252<<ASSIGN    253>>ASSIGN    256<<ASSIGN    261>>ASSIGN    263>>ASSIGN
       265>>ASSIGN    269>>CALLBLT   269>>CALLBLT
TEMP1
       219**DCL       237<<CALLBLT   238>>CALLBLT   243<<CALLBLT   244>>CALLBLT
TEMP2
       220**DCL       238<<CALLBLT   244<<CALLBLT   247>>CALLBLT   269>>CALLBLT
TYPE
       210**DCL         8--PROC      241--ENTRY     248>>IF        250>>IF        252>>ASSIGN    258>>ASSIGN
T_INDEX
       223**DCL       247<<CALLBLT   253<<ASSIGN    256>>ASSIGN    257<<ASSIGN    257>>ASSIGN    269>>CALLBLT
VALUE
       211**DCL         8--PROC      212--REDEF     237>>CALLBLT   241--ENTRY     243>>CALLBLT

PL6.E3A0      #006=ASB$BREAK File=ASB$EXT.:E05TSI                                TUE 07/29/97 09:04 Page:157  
      645        1        /*T***********************************************************/
      646        2        /*T*                                                         */
      647        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      648        4        /*T*                                                         */
      649        5        /*T***********************************************************/
      650        6        ASB$BREAK: PROC ASYNC;
      651        7        /*D* NAME: ASB$BREAK
      652        8             CALL: Called asynchronously from a break exceptional condition.
      653        9              DESCRIPTION:  This routine RETURNs from a BRK, except
      654       10              for LIST, it UNWINDs to COMMAND prompt
      655       11        */
      656       12        %INCLUDE CP_6;
      657       93        %INCLUDE AS_ENTRIES_M ;
      658     1143        %INCLUDE           AS_SUPER_C  ;
      659     1578        %INCLUDE           AS_MAC_C    ;
      660     1658        %INCLUDE           AS_SUBS_C   ;
      661     3072        %INCLUDE           KL_SUPER_C  ;
      662     5974        %INCLUDE           XU_MACRO_C  ;
      663     9080        %INCLUDE           XU_FORMAT_C ;
      664     9242        %INCLUDE           AS_SUPER_R  ;
      665    12258
      666    12259        %ASB$SET_PROMPT ;
      667    12262    1   DCL M$SI DCB ;
      668    12263        %F$DCB;
      669    12320        %FPT_READ( FPTN=READ_SI, DCB=M$SI, BUF=IN_BUF );
      670    12359        %FPT_TRMPRG(FPTN = FPT_TRMPRG,
      671    12360                    RSTBRK = YES,
      672    12361                    STCLASS = CONSTANT);
      673    12390        %FPT_WRITE( FPTN=WRITE_CR, VFC=YES, BUF=CR, DCB=M$UC );
      674    12421    1   DCL CR CHAR(0) CONSTANT INIT('a');
      675    12422    1   DCL ASA_BRKS_LOC1 REMEMBER;
      676    12423    1   DCL B$TCB$ PTR SYMREF;
      677    12424    1   DCL ARS SBIN ;
      678    12425    1   DCL BROKE BIT(1) STATIC INIT('0'B);
      679    12426        %B$TCB;
      680    12429        %B$BRK;
      681    12437    2   DO INHIBIT;                     /* Keep breaks out while in here      */
PL6.E3A0      #006=ASB$BREAK File=ASB$EXT.:E05TSI                                TUE 07/29/97 09:04 Page:158  
      682    12438    2      CALL M$TRMPRG(FPT_TRMPRG);   /* Reset break count                  */
      683    12439    3      IF ASA_BRKS_LOC_BIT = '0'B THEN DO;
      684    12440                                             /* This is not a list   */
      685    12441    4         IF INPUT_FLAG THEN DO;
      686    12442    4            CALL M$WRITE( WRITE_CR ) ALTRET(WRITE_ERR);
      687    12443    5            DO WHILE( '0'B );
      688    12444    5   WRITE_ERR:  CALL M$CLRSTK ALTRET(IGNORE1);
      689    12445    5   IGNORE1:    END;
      690    12446    4            END;
      691    12447    3         BROKE = '0'B;
      692    12448    3         RETURN ;                  /* Continue                           */
      693    12449    3         END;
      694    12450    3      ELSE DO;                   /* We are listing    */
      695    12451    3         IF BROKE THEN
      696    12452    3            CALL M$CLRSTK ALTRET(IGNORE2);
      697    12453    3         ELSE
      698    12454    3            BROKE = '1'B;
      699    12455    3   IGNORE2:
      700    12456    3         ASA_BRKS_LOC1 = ASA_BRKS_LOC;
      701    12457    3         CALL ASB$SET_PROMPT ( %PROMPT_BREAK ) ;
      702    12458    3         CALL M$READ( READ_SI ) ALTRET( IO_ERROR );
      703    12459    3         ARS = DCBADDR(DCBNUM(M$SI))->F$DCB.ARS#;
      704    12460    3         CALL ASB$SET_PROMPT ( %PROMPT_RESTORE );
      705    12461    3         IF SUBSTR(IN_BUF,0,ARS) = 'C'  OR  SUBSTR(IN_BUF,0,ARS) = 'c'
      706    12462    4         THEN DO;
      707    12463    4            BROKE = '0'B;
      708    12464    4            RETURN;
      709    12465    4            END;
      710    12466    3   IO_ERROR:
      711    12467    3         CALL M$CLRSTK ALTRET(IGNORE3);
      712    12468    3   IGNORE3:
      713    12469    3         UNWIND TO ASA_BRKS_LOC1;
      714    12470    3         END;
      715    12471    2      END;
      716    12472    1   END ASB$BREAK;
      717    12473        %EOD;

PL6.E3A0      #006=ASB$BREAK File=ASB$EXT.:E05TSI                                TUE 07/29/97 09:04 Page:159  
--  Include file information  --

   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ASB$BREAK.

   Procedure ASB$BREAK requires 66 words for executable code.
   Procedure ASB$BREAK requires 8 words of local(AUTO) storage.

PL6.E3A0      #006=ASB$BREAK File=ASB$EXT.:E05TSI                                TUE 07/29/97 09:04 Page:160  

 Object Unit name= ASB$BREAK                                  File name= ASB$EXT.:E05TOU
 UTS= JUL 29 '97 09:04:08.08 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$LO
    2   DCB   even  none     0      0  M$SI
    3   Data  even  none    27     33  ASB$BREAK
    4  RoData even  UTS      9     11  ASB$BREAK
    5   Proc  even  none    66    102  ASB$BREAK
    6  RoData even  none     7      7  ASB$BREAK

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     5      0   yes            yes     Async       0  ASB$BREAK

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 XU_OUTPUT_OPTIONS
 yes     yes           Std       3 ASB$SET_PROMPT
                       nStd      0 X66_AAUTO
                       nStd      0 X66_AARET
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AAUNWIND
PL6.E3A0      #006=ASB$BREAK File=ASB$EXT.:E05TSI                                TUE 07/29/97 09:04 Page:161  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    AS_MODE                          r    AS_FE_MODE
     M$LO                                  IN_BUF                                INPUT_FLAG
     ERR_CODE                              REMEM_VAR                             REM_FCMD
     ASA_BRKS_LOC                          M$SI                                  B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #006=ASB$BREAK File=ASB$EXT.:E05TSI                                TUE 07/29/97 09:04 Page:162  


      645        1        /*T***********************************************************/
      646        2        /*T*                                                         */
      647        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      648        4        /*T*                                                         */
      649        5        /*T***********************************************************/
      650        6        ASB$BREAK: PROC ASYNC;

      6  5 000000   000000 700200 xent  ASB$BREAK    TSX0  ! X66_AAUTO
         5 000001   000010 000000                    ZERO    8,0

      651        7        /*D* NAME: ASB$BREAK
      652        8             CALL: Called asynchronously from a break exceptional condition.
      653        9              DESCRIPTION:  This routine RETURNs from a BRK, except
      654       10              for LIST, it UNWINDs to COMMAND prompt
      655       11        */
      656       12        %INCLUDE CP_6;
      657       93        %INCLUDE AS_ENTRIES_M ;
      658     1143        %INCLUDE           AS_SUPER_C  ;
      659     1578        %INCLUDE           AS_MAC_C    ;
      660     1658        %INCLUDE           AS_SUBS_C   ;
      661     3072        %INCLUDE           KL_SUPER_C  ;
      662     5974        %INCLUDE           XU_MACRO_C  ;
      663     9080        %INCLUDE           XU_FORMAT_C ;
      664     9242        %INCLUDE           AS_SUPER_R  ;
      665    12258
      666    12259        %ASB$SET_PROMPT ;
      667    12262    1   DCL M$SI DCB ;
      668    12263        %F$DCB;
      669    12320        %FPT_READ( FPTN=READ_SI, DCB=M$SI, BUF=IN_BUF );
      670    12359        %FPT_TRMPRG(FPTN = FPT_TRMPRG,
      671    12360                    RSTBRK = YES,
      672    12361                    STCLASS = CONSTANT);
      673    12390        %FPT_WRITE( FPTN=WRITE_CR, VFC=YES, BUF=CR, DCB=M$UC );
      674    12421    1   DCL CR CHAR(0) CONSTANT INIT('a');
      675    12422    1   DCL ASA_BRKS_LOC1 REMEMBER;
      676    12423    1   DCL B$TCB$ PTR SYMREF;
PL6.E3A0      #006=ASB$BREAK File=ASB$EXT.:E05TSI                                TUE 07/29/97 09:04 Page:163  
      677    12424    1   DCL ARS SBIN ;
      678    12425    1   DCL BROKE BIT(1) STATIC INIT('0'B);
      679    12426        %B$TCB;
      680    12429        %B$BRK;
      681    12437    2   DO INHIBIT;                     /* Keep breaks out while in here      */

      682    12438    2      CALL M$TRMPRG(FPT_TRMPRG);   /* Reset break count                  */

  12438  5 000002   000000 630600 4                  EPPR0 ! FPT_TRMPRG
         5 000003   160004 713600                    CLIMB ! 57348
         5 000004   400400 401760                    pmme    nvectors=2

      683    12439    3      IF ASA_BRKS_LOC_BIT = '0'B THEN DO;

  12439  5 000005   000000 237200 xsym               LDAQ  ! ASA_BRKS_LOC
         5 000006   000000 117200 6                  CMPAQ ! 0
         5 000007   000024 601200 5                  TNZ   ! s:12451

      684    12440                                             /* This is not a list   */
      685    12441    4         IF INPUT_FLAG THEN DO;

  12441  5 000010   000000 234200 xsym               SZN   ! INPUT_FLAG
         5 000011   000022 605200 5                  TPL   ! IGNORE1

      686    12442    4            CALL M$WRITE( WRITE_CR ) ALTRET(WRITE_ERR);

  12442  5 000012   000016 630600 3                  EPPR0 ! WRITE_CR
         5 000013   440001 713600                    CLIMB ! alt,write
         5 000014   401400 401760                    pmme    nvectors=4
         5 000015   000017 702200 5                  TSX2  ! WRITE_ERR

      687    12443    5            DO WHILE( '0'B );

  12443  5 000016   000022 710200 5                  TRA   ! IGNORE1

      688    12444    5   WRITE_ERR:  CALL M$CLRSTK ALTRET(IGNORE1);

PL6.E3A0      #006=ASB$BREAK File=ASB$EXT.:E05TSI                                TUE 07/29/97 09:04 Page:164  
  12444  5 000017   410013 713600       WRITE_ERR    CLIMB ! alt,+4107
         5 000020   000000 401760                    pmme    nvectors=0
         5 000021   000022 702200 5                  TSX2  ! IGNORE1

      689    12445    5   IGNORE1:    END;

  12445  5 000022                       IGNORE1      null
      690    12446    4            END;

      691    12447    3         BROKE = '0'B;

  12447  5 000022   000032 450200 3                  STZ   ! BROKE

      692    12448    3         RETURN ;                  /* Continue                           */

  12448  5 000023   000000 702200 xent               TSX2  ! X66_AARET

      693    12449    3         END;
      694    12450    3      ELSE DO;                   /* We are listing    */

      695    12451    3         IF BROKE THEN

  12451  5 000024   000032 234200 3                  SZN   ! BROKE
         5 000025   000032 605200 5                  TPL   ! s:12454

      696    12452    3            CALL M$CLRSTK ALTRET(IGNORE2);

  12452  5 000026   410013 713600                    CLIMB ! alt,+4107
         5 000027   000000 401760                    pmme    nvectors=0
         5 000030   000034 702200 5                  TSX2  ! IGNORE2
         5 000031   000034 710200 5                  TRA   ! IGNORE2

      697    12453    3         ELSE
      698    12454    3            BROKE = '1'B;

  12454  5 000032   400000 236203                    LDQ   ! -131072,DU
         5 000033   000032 756200 3                  STQ   ! BROKE
PL6.E3A0      #006=ASB$BREAK File=ASB$EXT.:E05TSI                                TUE 07/29/97 09:04 Page:165  

      699    12455    3   IGNORE2:
      700    12456    3         ASA_BRKS_LOC1 = ASA_BRKS_LOC;

  12456  5 000034   000000 237200 xsym  IGNORE2      LDAQ  ! ASA_BRKS_LOC
         5 000035   200004 757300                    STAQ  ! ASA_BRKS_LOC1,,AUTO

      701    12457    3         CALL ASB$SET_PROMPT ( %PROMPT_BREAK ) ;

  12457  5 000036   000002 630600 6                  EPPR0 ! 2
         5 000037   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         5 000040   000000 701200 xent               TSX1  ! ASB$SET_PROMPT
         5 000041   000000 011200                    NOP   ! 0

      702    12458    3         CALL M$READ( READ_SI ) ALTRET( IO_ERROR );

  12458  5 000042   000000 630600 3                  EPPR0 ! READ_SI
         5 000043   440000 713600                    CLIMB ! alt,read
         5 000044   401400 401760                    pmme    nvectors=4
         5 000045   000073 702200 5                  TSX2  ! IO_ERROR

      703    12459    3         ARS = DCBADDR(DCBNUM(M$SI))->F$DCB.ARS#;

  12459  5 000046   000000 236207 xsym               LDQ   ! M$SI,DL
         5 000047   000003 470600 6                  LDP0  ! 3
         5 000050   000000 471700                    LDP1  ! 0,,PR0
         5 000051   100000 473706                    LDP3  ! 0,QL,PR1
         5 000052   300000 235300                    LDA   ! 0,,PR3
         5 000053   200006 755300                    STA   ! ARS,,AUTO

      704    12460    3         CALL ASB$SET_PROMPT ( %PROMPT_RESTORE );

  12460  5 000054   000004 630600 6                  EPPR0 ! 4
         5 000055   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         5 000056   000000 701200 xent               TSX1  ! ASB$SET_PROMPT
         5 000057   000000 011200                    NOP   ! 0

PL6.E3A0      #006=ASB$BREAK File=ASB$EXT.:E05TSI                                TUE 07/29/97 09:04 Page:166  
      705    12461    3         IF SUBSTR(IN_BUF,0,ARS) = 'C'  OR  SUBSTR(IN_BUF,0,ARS) = 'c'

  12461  5 000060   200006 720300                    LXL0  ! ARS,,AUTO
         5 000061   040000 106640                    CMPC  ! fill='040'O
         5 000062   000000 000010 xsym               ADSC9   IN_BUF                   cn=0,n=*X0
         5 000063   000005 000001 6                  ADSC9   5                        cn=0,n=1
         5 000064   000071 600200 5                  TZE   ! s:12463
         5 000065   040000 106640                    CMPC  ! fill='040'O
         5 000066   000000 000010 xsym               ADSC9   IN_BUF                   cn=0,n=*X0
         5 000067   000006 000001 6                  ADSC9   6                        cn=0,n=1
         5 000070   000073 601200 5                  TNZ   ! IO_ERROR

      706    12462    4         THEN DO;

      707    12463    4            BROKE = '0'B;

  12463  5 000071   000032 450200 3                  STZ   ! BROKE

      708    12464    4            RETURN;

  12464  5 000072   000000 702200 xent               TSX2  ! X66_AARET

      709    12465    4            END;
      710    12466    3   IO_ERROR:
      711    12467    3         CALL M$CLRSTK ALTRET(IGNORE3);

  12467  5 000073   410013 713600       IO_ERROR     CLIMB ! alt,+4107
         5 000074   000000 401760                    pmme    nvectors=0
         5 000075   000076 702200 5                  TSX2  ! IGNORE3

      712    12468    3   IGNORE3:
      713    12469    3         UNWIND TO ASA_BRKS_LOC1;

  12469  5 000076   200004 237300       IGNORE3      LDAQ  ! ASA_BRKS_LOC1,,AUTO
         5 000077   000000 700200 xent               TSX0  ! X66_AAUNWIND
         5 000100   000000 000200                    ZERO    0,128

PL6.E3A0      #006=ASB$BREAK File=ASB$EXT.:E05TSI                                TUE 07/29/97 09:04 Page:167  
      714    12470    3         END;
      715    12471    2      END;

      716    12472    1   END ASB$BREAK;

  12472  5 000101   000000 702200 xent               TSX2  ! X66_AARET
      717    12473        %EOD;

PL6.E3A0      #006=ASB$BREAK File=ASB$EXT.:E05TSI                                TUE 07/29/97 09:04 Page:168  
--  Include file information  --

   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ASB$BREAK.
PL6.E3A0      #006=ASB$BREAK File=ASB$EXT.:E05TSI                                TUE 07/29/97 09:04 Page:169  

 **** Variables and constants ****

  ****  Section 003  Data  ASB$BREAK

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    32-0-0/b BIT         r     1 BROKE                      0-0-0/d STRC(504)   r     1 READ_SI
    16-0-0/d STRC(432)   r     1 WRITE_CR

  ****  Section 004 RoData ASB$BREAK

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    10-0-0/c CHAR        r     1 CR                         0-0-0/d STRC(288)   r     1 FPT_TRMPRG

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w SBIN        r     1 ARS                        4-0-0/d REMB        r     1 ASA_BRKS_LOC1

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d REMB        r     1 ASA_BRKS_LOC               0-0-0/d BIT (72)    r     1 ASA_BRKS_LOC_BIT
     0-0-0/b BIT         r     1 INPUT_FLAG                 0-0-0/c CHAR(255)   r     1 IN_BUF

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #006=ASB$BREAK File=ASB$EXT.:E05TSI                                TUE 07/29/97 09:04 Page:170  
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0N  NULL        r     1 M$SI
     0-0-0N  NULL        r     1 M$UC


   Procedure ASB$BREAK requires 66 words for executable code.
   Procedure ASB$BREAK requires 8 words of local(AUTO) storage.
PL6.E3A0      #006=ASB$BREAK File=ASB$EXT.:E05TSI                                TUE 07/29/97 09:04 Page:171  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #006=ASB$BREAK File=ASB$EXT.:E05TSI                                TUE 07/29/97 09:04 Page:172  
          MINI XREF LISTING

ARS
     12424**DCL     12459<<ASSIGN  12461>>IF      12461>>IF
ASA_BRKS_LOC
      9406**DCL      9406--REDEF   12456>>ASSIGN
ASA_BRKS_LOC1
     12422**DCL     12456<<ASSIGN  12469>>UNWIND
ASA_BRKS_LOC_BIT
      9406**DCL     12439>>IF
ASB$SET_PROMPT
     12260**DCL-ENT 12457--CALL    12460--CALL
AS_DEFAULT.BANNER_PERM
     10099**DCL     10100--REDEF
AS_DEFAULT.BUDGET.MACCT
     10004**DCL     10008--REDEF
AS_DEFAULT.BUDGET.MAX_PROJECTS
     10017**DCL     10020--REDEF
AS_DEFAULT.BUDGET.PACCUM
     10000**DCL     10002--REDEF
AS_DEFAULT.BUDGET.PMAXC
      9995**DCL      9997--REDEF
AS_DEFAULT.SETUP_CHRA.TXT
     10115**DCL     10116--REDEF   10117--REDEF
AS_DEFAULT_DREC.PASSWORD
     11369**DCL     11373--REDEF
AS_DEFAULT_DREC.RENAME
     11392**DCL     11393--REDEF
AS_DFLT.BANNER_PERM
      9921**DCL      9922--REDEF
AS_DFLT.BUDGET.MACCT
      9826**DCL      9830--REDEF
AS_DFLT.BUDGET.MAX_PROJECTS
      9839**DCL      9842--REDEF
PL6.E3A0      #006=ASB$BREAK File=ASB$EXT.:E05TSI                                TUE 07/29/97 09:04 Page:173  
AS_DFLT.BUDGET.PACCUM
      9822**DCL      9824--REDEF
AS_DFLT.BUDGET.PMAXC
      9817**DCL      9819--REDEF
AS_DFLT.SETUP_CHRA.TXT
      9937**DCL      9938--REDEF    9939--REDEF
AS_FE_MODE
      9272**DCL      9273--REDEF
AS_MODE
      9269**DCL      9271--REDEF
AS_MOD_USER.ACCESS
     12134**DCL     12135--REDEF
AS_MOD_USER.BANNER
     12121**DCL     12122--REDEF
AS_MOD_USER.BANNER_PERM
     12123**DCL     12124--REDEF
AS_MOD_USER.BILL
     12129**DCL     12130--REDEF
AS_MOD_USER.CPROC
     12125**DCL     12126--REDEF
AS_MOD_USER.FEBILL
     12205**DCL     12206--REDEF
AS_MOD_USER.FECXTMEM
     12222**DCL     12223--REDEF
AS_MOD_USER.FEMINTS
     12207**DCL     12208--REDEF
AS_MOD_USER.FEMMEM
     12218**DCL     12219--REDEF
AS_MOD_USER.FEMTIME
     12216**DCL     12217--REDEF
AS_MOD_USER.FEPPRIV
     12213**DCL     12215--REDEF
AS_MOD_USER.FEPRIV
     12210**DCL     12212--REDEF
AS_MOD_USER.FORCE_BIT
     12119**DCL     12120--REDEF
PL6.E3A0      #006=ASB$BREAK File=ASB$EXT.:E05TSI                                TUE 07/29/97 09:04 Page:174  
AS_MOD_USER.KEY
     12201**DCL     12203--REDEF
AS_MOD_USER.LASTCPROC
     12127**DCL     12128--REDEF
AS_MOD_USER.LIMITS.DO_
     12175**DCL     12176--REDEF
AS_MOD_USER.LIMITS.FPOOLS
     12191**DCL     12192--REDEF
AS_MOD_USER.LIMITS.LO
     12171**DCL     12172--REDEF
AS_MOD_USER.LIMITS.MEM
     12167**DCL     12168--REDEF
AS_MOD_USER.LIMITS.MPRIO
     12195**DCL     12196--REDEF
AS_MOD_USER.LIMITS.PDIS
     12183**DCL     12184--REDEF
AS_MOD_USER.LIMITS.PO
     12179**DCL     12180--REDEF
AS_MOD_USER.LIMITS.TDIS
     12187**DCL     12188--REDEF
AS_MOD_USER.LIMITS.TIME
     12163**DCL     12164--REDEF
AS_MOD_USER.MAXENQ
     12144**DCL     12145--REDEF
AS_MOD_USER.PERM_BIT
     12117**DCL     12118--REDEF
AS_MOD_USER.PPRIV
     12139**DCL     12141--REDEF
AS_MOD_USER.PRIOB
     12146**DCL     12147--REDEF
AS_MOD_USER.PRIV
     12136**DCL     12138--REDEF
AS_MOD_USER.QUAN
     12142**DCL     12143--REDEF
AS_MOD_USER.SETUP
     12115**DCL     12116--REDEF
PL6.E3A0      #006=ASB$BREAK File=ASB$EXT.:E05TSI                                TUE 07/29/97 09:04 Page:175  
AS_PROJECT.BANNER_PERM
     10455**DCL     10456--REDEF
AS_PROJECT.BUDGET.MACCT
     10360**DCL     10364--REDEF
AS_PROJECT.BUDGET.MAX_PROJECTS
     10373**DCL     10376--REDEF
AS_PROJECT.BUDGET.PACCUM
     10356**DCL     10358--REDEF
AS_PROJECT.BUDGET.PMAXC
     10351**DCL     10353--REDEF
AS_PROJECT.SETUP_CHRA.TXT
     10471**DCL     10472--REDEF   10473--REDEF
AS_PROJECT_DFLT.BANNER_PERM
     10633**DCL     10634--REDEF
AS_PROJECT_DFLT.BUDGET.MACCT
     10538**DCL     10542--REDEF
AS_PROJECT_DFLT.BUDGET.MAX_PROJECTS
     10551**DCL     10554--REDEF
AS_PROJECT_DFLT.BUDGET.PACCUM
     10534**DCL     10536--REDEF
AS_PROJECT_DFLT.BUDGET.PMAXC
     10529**DCL     10531--REDEF
AS_PROJECT_DFLT.SETUP_CHRA.TXT
     10649**DCL     10650--REDEF   10651--REDEF
AS_PROJECT_DFLT_DREC.PASSWORD
     11855**DCL     11859--REDEF
AS_PROJECT_DFLT_DREC.RENAME
     11878**DCL     11879--REDEF
AS_PROJECT_DREC.PASSWORD
     11693**DCL     11697--REDEF
AS_PROJECT_DREC.RENAME
     11716**DCL     11717--REDEF
AS_PROJ_ADMIN.BANNER_PERM
     10277**DCL     10278--REDEF
AS_PROJ_ADMIN.BUDGET.MACCT
     10182**DCL     10186--REDEF
PL6.E3A0      #006=ASB$BREAK File=ASB$EXT.:E05TSI                                TUE 07/29/97 09:04 Page:176  
AS_PROJ_ADMIN.BUDGET.MAX_PROJECTS
     10195**DCL     10198--REDEF
AS_PROJ_ADMIN.BUDGET.PACCUM
     10178**DCL     10180--REDEF
AS_PROJ_ADMIN.BUDGET.PMAXC
     10173**DCL     10175--REDEF
AS_PROJ_ADMIN.SETUP_CHRA.TXT
     10293**DCL     10294--REDEF   10295--REDEF
AS_PROJ_ADMIN_DREC.PASSWORD
     11531**DCL     11535--REDEF
AS_PROJ_ADMIN_DREC.RENAME
     11554**DCL     11555--REDEF
AS_USERS.BANNER_PERM
      9743**DCL      9744--REDEF
AS_USERS.BUDGET.MACCT
      9648**DCL      9652--REDEF
AS_USERS.BUDGET.MAX_PROJECTS
      9661**DCL      9664--REDEF
AS_USERS.BUDGET.PACCUM
      9644**DCL      9646--REDEF
AS_USERS.BUDGET.PMAXC
      9639**DCL      9641--REDEF
AS_USERS.SETUP_CHRA.TXT
      9759**DCL      9760--REDEF    9761--REDEF
AS_USERS_CONSTANT.BANNER_PERM
     10811**DCL     10812--REDEF
AS_USERS_CONSTANT.BUDGET.MACCT
     10716**DCL     10720--REDEF
AS_USERS_CONSTANT.BUDGET.MAX_PROJECTS
     10729**DCL     10732--REDEF
AS_USERS_CONSTANT.BUDGET.PACCUM
     10712**DCL     10714--REDEF
AS_USERS_CONSTANT.BUDGET.PMAXC
     10707**DCL     10709--REDEF
AS_USERS_CONSTANT.SETUP_CHRA.TXT
     10827**DCL     10828--REDEF   10829--REDEF
PL6.E3A0      #006=ASB$BREAK File=ASB$EXT.:E05TSI                                TUE 07/29/97 09:04 Page:177  
B$BRK.CODE
     12431**DCL     12431--REDEF   12432--REDEF   12432--REDEF
B$BRK.ERR.ERR#
     12433**DCL     12433--REDEF
B$BRK.EVID
     12432**DCL     12432--REDEF   12432--REDEF
BROKE
     12425**DCL     12447<<ASSIGN  12451>>IF      12454<<ASSIGN  12463<<ASSIGN
CR
     12421**DCL     12408--DCLINIT 12409--DCLINIT
ERR_CODE
      9401**DCL      9402--REDEF
F$DCB.ACTPOS
     12296**DCL     12296--REDEF
F$DCB.ARS#
     12270**DCL     12270--REDEF   12459>>ASSIGN
F$DCB.ATTR
     12289**DCL     12290--REDEF
F$DCB.BORROW
     12304**DCL     12304--REDEF   12304--REDEF   12304--REDEF
F$DCB.DCBNAME.L
     12318**DCL     12318--IMP-SIZ
F$DCB.EOMCHAR#
     12274**DCL     12274--REDEF
F$DCB.FLDID
     12299**DCL     12299--REDEF
F$DCB.FORM$
     12293**DCL     12293--REDEF
F$DCB.FSECT
     12309**DCL     12309--REDEF
F$DCB.FSN#
     12286**DCL     12286--REDEF   12286--REDEF   12287--REDEF
F$DCB.HEADER$
     12292**DCL     12292--REDEF
F$DCB.IXTNSIZE#
     12290**DCL     12290--REDEF
PL6.E3A0      #006=ASB$BREAK File=ASB$EXT.:E05TSI                                TUE 07/29/97 09:04 Page:178  
F$DCB.LASTSTA$
     12279**DCL     12279--REDEF
F$DCB.LVL
     12305**DCL     12305--REDEF
F$DCB.NAME#.C
     12280**DCL     12280--REDEF
F$DCB.NOEOF
     12302**DCL     12302--REDEF
F$DCB.NRECS#
     12291**DCL     12291--REDEF
F$DCB.NRECX
     12310**DCL     12310--REDEF
F$DCB.OHDR
     12302**DCL     12302--REDEF
F$DCB.ORG#
     12285**DCL     12285--REDEF
F$DCB.PRECNO
     12308**DCL     12308--REDEF
F$DCB.RCSZ
     12314**DCL     12314--REDEF
F$DCB.RES#
     12281**DCL     12281--REDEF
F$DCB.SETX
     12293**DCL     12293--REDEF
F$DCB.TAB$
     12293**DCL     12293--REDEF
F$DCB.TDA
     12307**DCL     12308--REDEF
F$DCB.WSN#
     12281**DCL     12281--REDEF
FPT_TRMPRG
     12377**DCL     12438<>CALL
FPT_TRMPRG.V
     12384**DCL     12379--DCLINIT
FPT_TRMPRG.V.CTLFLG.RSTBRK#
     12385**DCL     12386--REDEF
PL6.E3A0      #006=ASB$BREAK File=ASB$EXT.:E05TSI                                TUE 07/29/97 09:04 Page:179  
IGNORE1
     12445**LABEL   12444--CALLALT
IGNORE2
     12456**LABEL   12452--CALLALT
IGNORE3
     12469**LABEL   12467--CALLALT
INPUT_FLAG
      9399**DCL     12441>>IF
IN_BUF
      9397**DCL     12339--DCLINIT 12340--DCLINIT 12461>>IF      12461>>IF
IO_ERROR
     12467**LABEL   12458--CALLALT
KL_DEFAULT.PASSWORD
     12017**DCL     12021--REDEF
KL_DEFAULT.RENAME
     12040**DCL     12041--REDEF
KL_DFLT.PASSWORD
     11207**DCL     11211--REDEF
KL_DFLT.RENAME
     11230**DCL     11231--REDEF
KL_DREC.PASSWORD
     11045**DCL     11049--REDEF
KL_DREC.RENAME
     11068**DCL     11069--REDEF
KL_DREC_CNT.PASSWORD
     10932**DCL     10936--REDEF
KL_DREC_CNT.RENAME
     10955**DCL     10956--REDEF
M$CLRSTK
        79**DCL-ENT 12444--CALL    12452--CALL    12467--CALL
M$READ
        22**DCL-ENT 12458--CALL
M$SI
     12262**DCL     12459--ASSIGN
M$TRMPRG
        46**DCL-ENT 12438--CALL
PL6.E3A0      #006=ASB$BREAK File=ASB$EXT.:E05TSI                                TUE 07/29/97 09:04 Page:180  
M$WRITE
        22**DCL-ENT 12442--CALL
PROJ_KEY.TEXT
      9279**DCL      9279--REDEF
PROJ_KEY.TXT.PROJECT
      9279**DCL      9279--REDEF
READ_SI
     12337**DCL     12458<>CALL
READ_SI.STATION_
     12340**DCL     12341--REDEF
READ_SI.V
     12341**DCL     12337--DCLINIT
READ_SI.V.DVBYTE.REREAD#
     12352**DCL     12352--REDEF
READ_SI.V.INDX#
     12350**DCL     12350--REDEF
REMEM_VAR
      9405**DCL      9405--REDEF
REM_FCMD
      9405**DCL      9406--REDEF
USERS_KEY.TEXT
      9276**DCL      9277--REDEF    9277--REDEF    9277--REDEF    9278--REDEF
WRITE_CR
     12407**DCL     12442<>CALL
WRITE_CR.STATION_
     12409**DCL     12409--REDEF
WRITE_CR.V
     12410**DCL     12407--DCLINIT
WRITE_CR.V.DVBYTE.VFC#
     12416**DCL     12416--REDEF
WRITE_ERR
     12444**LABEL   12442--CALLALT

PL6.E3A0      #007=ASB$PIG_ACCT_ATTR File=ASB$EXT.:E05TSI                        TUE 07/29/97 09:05 Page:181  
      718        1        /*M* ASB$PIG_ACCT_ATTR - processes an account attribute list to be used by PIG. */
      719        2        /*T***********************************************************/
      720        3        /*T*                                                         */
      721        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      722        5        /*T*                                                         */
      723        6        /*T***********************************************************/
      724        7        /*P*  NAME:       ASB$PIG_ACCT_ATTR
      725        8              PURPOSE:    Process an account attribute list.
      726        9              DESCRIPTION:
      727       10                  This procedure reads the account attribute list, and writes
      728       11                  the list to the PIG system ghost using comgroup I/O.  PIG
      729       12                  will verify the syntax of the account attribute list.
      730       13        */
      731       14        ASB$PIG_ACCT_ATTR: PROC( SUPER_TO_PIG ) ALTRET;
      732       15
      733       16
      734       17        %INCLUDE           AS_ENTRIES_M ;
      735     1067        %INCLUDE           AS_PERR_C    ;
      736     1669        %INCLUDE           CP_6         ;
      737     1750        %INCLUDE           AS_SUPER_C   ;
      738     2185        %INCLUDE           AS_MAC_C     ;
      739     2265        %INCLUDE           AS_SUBS_C    ;
      740     3679        %INCLUDE           KL_SUPER_C   ;
      741     6581        %INCLUDE           XU_MACRO_C   ;
      742     9687        %INCLUDE           XU_FORMAT_C  ;
      743     9849        %INCLUDE           AS_SUPER_R   ;
      744    12865        %SUPER_TO_PIG( STCLASS=" ", VARY=NO );
      745    12897
      746    12898    1   DCL NEXT      UBIN;
      747    12899    1   DCL ARS       UBIN;
      748    12900    1   DCL I         UBIN;
      749    12901    1   DCL J         UBIN;
      750    12902    1   DCL LEN       UBIN;
      751    12903    1   DCL RESULT    UBIN;
      752    12904
      753    12905        %ASB$READ_SI ;
      754    12908        %ASB$PIG ;
PL6.E3A0      #007=ASB$PIG_ACCT_ATTR File=ASB$EXT.:E05TSI                        TUE 07/29/97 09:05 Page:182  
      755    12911        %ASB$SET_PROMPT ;
      756    12914        %ASH$ERROR ;
      757    12917
      758    12918        %INCLUDE B$TABLES_C;
      759    13026        %B$SR_NON_BLANK;
      760    13030
      761    13031    1   CALL ASB$SET_PROMPT ( %PROMPT_SUB );
      762    13032    1   SUPER_TO_PIG.ATTR.COUNT = 0;
      763    13033    1   SUPER_TO_PIG.ATTR.LIST = AS_BLANK;
      764    13034    1   NEXT = 0;
      765    13035    1   CALL ASB$READ_SI( IN_BUF, ARS );
      766    13036    2   DO WHILE( IN_BUF ~= AS_BLANK );
      767    13037                                                          /* Remove excess blanks and */
      768    13038    2      J = 0;                                  /* move into attribute list */
      769    13039    3      DO WHILE( J < ARS );
      770    13040    4         IF NEXT > 4800 THEN DO;
      771    13041        /*E*  ERROR:  ASB-E$ATTR_LIST_TOO_LONG-C
      772    13042              MESSAGE: That attribute list is too long for SUPER too handle.
      773    13043                       Try re-entering a shorter list.
      774    13044        */
      775    13045                 %SCREAM( ERR#=E$ATTR_LIST_TOO_LONG, MID='B', LEVEL=ERROR );
      776    13060    4            GOTO BAD_ATTR_LIST;
      777    13061    4            END;
      778    13062    3         CALL SEARCH( I, RESULT, B$SR_NON_BLANK, IN_BUF, J) ALTRET(END_LINE);
      779    13063    3         CALL INDEX( J, AS_BLANK, IN_BUF, I );
      780    13064    3         LEN = J - I;
      781    13065    3         CALL INSERT( SUPER_TO_PIG.ATTR.LIST, NEXT, LEN, SUBSTR(IN_BUF,I,LEN) );
      782    13066    3         SUPER_TO_PIG.ATTR.COUNT = SUPER_TO_PIG.ATTR.COUNT + LEN + 1;
      783    13067    3         NEXT = NEXT + LEN + 1;
      784    13068    3         END;
      785    13069    2   END_LINE:
      786    13070    2      CALL ASB$READ_SI( IN_BUF, ARS );
      787    13071    2      END;
      788    13072                                              /* Have pig validate the attribute list */
      789    13073    2   IF NEXT > 0 THEN DO;
      790    13074    2      SUPER_TO_PIG.ATTR.COUNT = SUPER_TO_PIG.ATTR.COUNT - 1;
      791    13075    2      CALL ASB$PIG( SUPER_TO_PIG ) ALTRET(BAD_ATTR_LIST);
PL6.E3A0      #007=ASB$PIG_ACCT_ATTR File=ASB$EXT.:E05TSI                        TUE 07/29/97 09:05 Page:183  
      792    13076    2      END;
      793    13077    1   RETURN;
      794    13078
      795    13079    1   BAD_ATTR_LIST:
      796    13080    1   SUPER_TO_PIG.ATTR.COUNT = 0;
      797    13081    1   SUPER_TO_PIG.ATTR.LIST = AS_BLANK;
      798    13082    1   ALTRETURN;
      799    13083
      800    13084    1   END ASB$PIG_ACCT_ATTR;
      801    13085        %EOD;

PL6.E3A0      #007=ASB$PIG_ACCT_ATTR File=ASB$EXT.:E05TSI                        TUE 07/29/97 09:05 Page:184  
--  Include file information  --

   B$TABLES_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   AS_PERR_C.:E05TOU  is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ASB$PIG_ACCT_ATTR.

   Procedure ASB$PIG_ACCT_ATTR requires 116 words for executable code.
   Procedure ASB$PIG_ACCT_ATTR requires 12 words of local(AUTO) storage.

PL6.E3A0      #007=ASB$PIG_ACCT_ATTR File=ASB$EXT.:E05TSI                        TUE 07/29/97 09:05 Page:185  

 Object Unit name= ASB$PIG_ACCT_ATTR                          File name= ASB$EXT.:E05TOU
 UTS= JUL 29 '97 09:05:05.16 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$LO
    2  RoData even  UTS      1      1  ASB$PIG_ACCT_ATTR
    3   Proc  even  none   116    164  ASB$PIG_ACCT_ATTR
    4  RoData even  none     3      3  ASB$PIG_ACCT_ATTR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        1  ASB$PIG_ACCT_ATTR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 XU_OUTPUT_OPTIONS
         yes          ~proc      0 B_POINTER
         yes           Std       2 ASB$READ_SI
 yes     yes           Std       1 ASB$PIG
 yes     yes           Std       3 ASB$SET_PROMPT
         yes           Std       2 ASH$ERROR
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #007=ASB$PIG_ACCT_ATTR File=ASB$EXT.:E05TSI                        TUE 07/29/97 09:05 Page:186  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    AS_BLANK                         r    AS_MODE
r    AS_FE_MODE                            M$LO                                  IN_BUF
     ERR_CODE                              REMEM_VAR                             REM_FCMD
     ASA_BRKS_LOC                     r    B$SR_NON_BLANK$                       B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #007=ASB$PIG_ACCT_ATTR File=ASB$EXT.:E05TSI                        TUE 07/29/97 09:05 Page:187  


      718        1        /*M* ASB$PIG_ACCT_ATTR - processes an account attribute list to be used by PIG. */
      719        2        /*T***********************************************************/
      720        3        /*T*                                                         */
      721        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      722        5        /*T*                                                         */
      723        6        /*T***********************************************************/
      724        7        /*P*  NAME:       ASB$PIG_ACCT_ATTR
      725        8              PURPOSE:    Process an account attribute list.
      726        9              DESCRIPTION:
      727       10                  This procedure reads the account attribute list, and writes
      728       11                  the list to the PIG system ghost using comgroup I/O.  PIG
      729       12                  will verify the syntax of the account attribute list.
      730       13        */
      731       14        ASB$PIG_ACCT_ATTR: PROC( SUPER_TO_PIG ) ALTRET;

     14  3 000000   000000 700200 xent  ASB$PIG_ACC* TSX0  ! X66_AUTO_1
         3 000001   000014 000001                    ZERO    12,1

      732       15
      733       16
      734       17        %INCLUDE           AS_ENTRIES_M ;
      735     1067        %INCLUDE           AS_PERR_C    ;
      736     1669        %INCLUDE           CP_6         ;
      737     1750        %INCLUDE           AS_SUPER_C   ;
      738     2185        %INCLUDE           AS_MAC_C     ;
      739     2265        %INCLUDE           AS_SUBS_C    ;
      740     3679        %INCLUDE           KL_SUPER_C   ;
      741     6581        %INCLUDE           XU_MACRO_C   ;
      742     9687        %INCLUDE           XU_FORMAT_C  ;
      743     9849        %INCLUDE           AS_SUPER_R   ;
      744    12865        %SUPER_TO_PIG( STCLASS=" ", VARY=NO );
      745    12897
      746    12898    1   DCL NEXT      UBIN;
      747    12899    1   DCL ARS       UBIN;
      748    12900    1   DCL I         UBIN;
      749    12901    1   DCL J         UBIN;
PL6.E3A0      #007=ASB$PIG_ACCT_ATTR File=ASB$EXT.:E05TSI                        TUE 07/29/97 09:05 Page:188  
      750    12902    1   DCL LEN       UBIN;
      751    12903    1   DCL RESULT    UBIN;
      752    12904
      753    12905        %ASB$READ_SI ;
      754    12908        %ASB$PIG ;
      755    12911        %ASB$SET_PROMPT ;
      756    12914        %ASH$ERROR ;
      757    12917
      758    12918        %INCLUDE B$TABLES_C;
      759    13026        %B$SR_NON_BLANK;
      760    13030
      761    13031    1   CALL ASB$SET_PROMPT ( %PROMPT_SUB );

  13031  3 000002   000000 630400 4                  EPPR0   0
         3 000003   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000004   000000 701000 xent               TSX1    ASB$SET_PROMPT
         3 000005   000000 011000                    NOP     0

      762    13032    1   SUPER_TO_PIG.ATTR.COUNT = 0;

  13032  3 000006   000000 220003                    LDX0    0,DU
         3 000007   200003 470500                    LDP0    @SUPER_TO_PIG,,AUTO
         3 000010   000016 740100                    STX0    14,,PR0

      763    13033    1   SUPER_TO_PIG.ATTR.LIST = AS_BLANK;

  13033  3 000011   011300 221003                    LDX1    4800,DU
         3 000012   040140 100400                    MLR     fill='040'O
         3 000013   000000 000001 xsym               ADSC9   AS_BLANK                 cn=0,n=1
         3 000014   000016 400011                    ADSC9   14,,PR0                  cn=2,n=*X1

      764    13034    1   NEXT = 0;

  13034  3 000015   200004 450100                    STZ     NEXT,,AUTO

      765    13035    1   CALL ASB$READ_SI( IN_BUF, ARS );

PL6.E3A0      #007=ASB$PIG_ACCT_ATTR File=ASB$EXT.:E05TSI                        TUE 07/29/97 09:05 Page:189  
  13035  3 000016   200005 631500                    EPPR1   ARS,,AUTO
         3 000017   200013 451500                    STP1    RESULT+2,,AUTO
         3 000020   000001 236000 4                  LDQ     1
         3 000021   200012 756100                    STQ     RESULT+1,,AUTO
         3 000022   200012 630500                    EPPR0   RESULT+1,,AUTO
         3 000023   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000024   000000 701000 xent               TSX1    ASB$READ_SI
         3 000025   000000 011000                    NOP     0

      766    13036    2   DO WHILE( IN_BUF ~= AS_BLANK );

  13036  3 000026   040000 106400                    CMPC    fill='040'O
         3 000027   000000 000377 xsym               ADSC9   IN_BUF                   cn=0,n=255
         3 000030   000000 000001 xsym               ADSC9   AS_BLANK                 cn=0,n=1
         3 000031   000141 600000 3                  TZE     s:13073

      767    13037                                                          /* Remove excess blanks and */
      768    13038    2      J = 0;                                  /* move into attribute list */

  13038  3 000032   200007 450100                    STZ     J,,AUTO

      769    13039    3      DO WHILE( J < ARS );

  13039  3 000033   200007 236100                    LDQ     J,,AUTO
         3 000034   200005 116100                    CMPQ    ARS,,AUTO
         3 000035   000125 603000 3                  TRC     END_LINE

      770    13040    4         IF NEXT > 4800 THEN DO;

  13040  3 000036   200004 235100                    LDA     NEXT,,AUTO
         3 000037   011301 115007                    CMPA    4801,DL
         3 000040   000046 602000 3                  TNC     s:13062

      771    13041        /*E*  ERROR:  ASB-E$ATTR_LIST_TOO_LONG-C
      772    13042              MESSAGE: That attribute list is too long for SUPER too handle.
      773    13043                       Try re-entering a shorter list.
      774    13044        */
PL6.E3A0      #007=ASB$PIG_ACCT_ATTR File=ASB$EXT.:E05TSI                        TUE 07/29/97 09:05 Page:190  
      775    13045                 %SCREAM( ERR#=E$ATTR_LIST_TOO_LONG, MID='B', LEVEL=ERROR );

  13057  3 000041   000002 630400 4                  EPPR0   2
         3 000042   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000043   000000 701000 xent               TSX1    ASH$ERROR
         3 000044   000000 011000                    NOP     0

      776    13060    4            GOTO BAD_ATTR_LIST;

  13060  3 000045   000154 710000 3                  TRA     BAD_ATTR_LIST

      777    13061    4            END;
      778    13062    3         CALL SEARCH( I, RESULT, B$SR_NON_BLANK, IN_BUF, J) ALTRET(END_LINE);

  13062  3 000046   200007 720100                    LXL0    J,,AUTO
         3 000047   777400 620010                    EAX0    -256,X0
         3 000050   777777 660003                    ERX0    -1,DU
         3 000051   200007 236100                    LDQ     J,,AUTO
         3 000052   000000 470400 xsym               LDP0    B$SR_NON_BLANK$
         3 000053   000000 164446                    TCT
         3 000054   000000 000010 xsym               ADSC9   IN_BUF,Q                 cn=0,n=*X0
         3 000055   000000 000100                    ARG     0,,PR0
         3 000056   200006 000100                    ARG     I,,AUTO
         3 000057   200006 235100                    LDA     I,,AUTO
         3 000060   000033 771000                    ARL     27
         3 000061   200011 755100                    STA     RESULT,,AUTO
         3 000062   200006 551140                    STBA    I,'40'O,AUTO
         3 000063   200006 056100                    ASQ     I,,AUTO
         3 000064   000125 606400 3                  TTN     END_LINE

      779    13063    3         CALL INDEX( J, AS_BLANK, IN_BUF, I );

  13063  3 000065   200006 721100                    LXL1    I,,AUTO
         3 000066   777400 621011                    EAX1    -256,X1
         3 000067   777777 661003                    ERX1    -1,DU
         3 000070   200006 236100                    LDQ     I,,AUTO
         3 000071   200006 235100                    LDA     I,,AUTO
PL6.E3A0      #007=ASB$PIG_ACCT_ATTR File=ASB$EXT.:E05TSI                        TUE 07/29/97 09:05 Page:191  
         3 000072   000000 124445                    SCM     mask='000'O
         3 000073   000000 000011 xsym               ADSC9   IN_BUF,A                 cn=0,n=*X1
         3 000074   000000 000001 xsym               ADSC9   AS_BLANK                 cn=0,n=1
         3 000075   200007 000100                    ARG     J,,AUTO
         3 000076   200007 056100                    ASQ     J,,AUTO

      780    13064    3         LEN = J - I;

  13064  3 000077   200007 236100                    LDQ     J,,AUTO
         3 000100   200006 136100                    SBLQ    I,,AUTO
         3 000101   200010 756100                    STQ     LEN,,AUTO

      781    13065    3         CALL INSERT( SUPER_TO_PIG.ATTR.LIST, NEXT, LEN, SUBSTR(IN_BUF,I,LEN) );

  13065  3 000102   000000 620006                    EAX0    0,QL
         3 000103   200003 471500                    LDP1    @SUPER_TO_PIG,,AUTO
         3 000104   200010 722100                    LXL2    LEN,,AUTO
         3 000105   200004 236100                    LDQ     NEXT,,AUTO
         3 000106   040146 100445                    MLR     fill='040'O
         3 000107   000000 000010 xsym               ADSC9   IN_BUF,A                 cn=0,n=*X0
         3 000110   100016 400012                    ADSC9   14,Q,PR1                 cn=2,n=*X2

      782    13066    3         SUPER_TO_PIG.ATTR.COUNT = SUPER_TO_PIG.ATTR.COUNT + LEN + 1;

  13066  3 000111   100016 236100                    LDQ     14,,PR1
         3 000112   000022 772000                    QRL     18
         3 000113   200010 036100                    ADLQ    LEN,,AUTO
         3 000114   000001 620006                    EAX0    1,QL
         3 000115   100016 740100                    STX0    14,,PR1

      783    13067    3         NEXT = NEXT + LEN + 1;

  13067  3 000116   200004 236100                    LDQ     NEXT,,AUTO
         3 000117   200010 036100                    ADLQ    LEN,,AUTO
         3 000120   000001 036007                    ADLQ    1,DL
         3 000121   200004 756100                    STQ     NEXT,,AUTO

PL6.E3A0      #007=ASB$PIG_ACCT_ATTR File=ASB$EXT.:E05TSI                        TUE 07/29/97 09:05 Page:192  
      784    13068    3         END;

  13068  3 000122   200007 236100                    LDQ     J,,AUTO
         3 000123   200005 116100                    CMPQ    ARS,,AUTO
         3 000124   000036 602000 3                  TNC     s:13040

      785    13069    2   END_LINE:
      786    13070    2      CALL ASB$READ_SI( IN_BUF, ARS );

  13070  3 000125   200005 630500       END_LINE     EPPR0   ARS,,AUTO
         3 000126   200013 450500                    STP0    RESULT+2,,AUTO
         3 000127   000001 236000 4                  LDQ     1
         3 000130   200012 756100                    STQ     RESULT+1,,AUTO
         3 000131   200012 630500                    EPPR0   RESULT+1,,AUTO
         3 000132   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000133   000000 701000 xent               TSX1    ASB$READ_SI
         3 000134   000000 011000                    NOP     0

      787    13071    2      END;

  13071  3 000135   040000 106400                    CMPC    fill='040'O
         3 000136   000000 000377 xsym               ADSC9   IN_BUF                   cn=0,n=255
         3 000137   000000 000001 xsym               ADSC9   AS_BLANK                 cn=0,n=1
         3 000140   000032 601000 3                  TNZ     s:13038

      788    13072                                              /* Have pig validate the attribute list */
      789    13073    2   IF NEXT > 0 THEN DO;

  13073  3 000141   200004 235100                    LDA     NEXT,,AUTO
         3 000142   000153 600000 3                  TZE     s:13077

      790    13074    2      SUPER_TO_PIG.ATTR.COUNT = SUPER_TO_PIG.ATTR.COUNT - 1;

  13074  3 000143   200003 470500                    LDP0    @SUPER_TO_PIG,,AUTO
         3 000144   000016 220100                    LDX0    14,,PR0
         3 000145   777777 621010                    EAX1    -1,X0
         3 000146   000016 741100                    STX1    14,,PR0
PL6.E3A0      #007=ASB$PIG_ACCT_ATTR File=ASB$EXT.:E05TSI                        TUE 07/29/97 09:05 Page:193  

      791    13075    2      CALL ASB$PIG( SUPER_TO_PIG ) ALTRET(BAD_ATTR_LIST);

  13075  3 000147   200003 630500                    EPPR0   @SUPER_TO_PIG,,AUTO
         3 000150   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000151   000000 701000 xent               TSX1    ASB$PIG
         3 000152   000154 702000 3                  TSX2    BAD_ATTR_LIST

      792    13076    2      END;

      793    13077    1   RETURN;

  13077  3 000153   000000 702200 xent               TSX2  ! X66_ARET

      794    13078
      795    13079    1   BAD_ATTR_LIST:
      796    13080    1   SUPER_TO_PIG.ATTR.COUNT = 0;

  13080  3 000154   000000 220003       BAD_ATTR_LI* LDX0    0,DU
         3 000155   200003 470500                    LDP0    @SUPER_TO_PIG,,AUTO
         3 000156   000016 740100                    STX0    14,,PR0

      797    13081    1   SUPER_TO_PIG.ATTR.LIST = AS_BLANK;

  13081  3 000157   011300 221003                    LDX1    4800,DU
         3 000160   040140 100400                    MLR     fill='040'O
         3 000161   000000 000001 xsym               ADSC9   AS_BLANK                 cn=0,n=1
         3 000162   000016 400011                    ADSC9   14,,PR0                  cn=2,n=*X1

      798    13082    1   ALTRETURN;

  13082  3 000163   000000 702200 xent               TSX2  ! X66_AALT
      799    13083
      800    13084    1   END ASB$PIG_ACCT_ATTR;
      801    13085        %EOD;

PL6.E3A0      #007=ASB$PIG_ACCT_ATTR File=ASB$EXT.:E05TSI                        TUE 07/29/97 09:05 Page:194  
--  Include file information  --

   B$TABLES_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   AS_PERR_C.:E05TOU  is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ASB$PIG_ACCT_ATTR.
PL6.E3A0      #007=ASB$PIG_ACCT_ATTR File=ASB$EXT.:E05TSI                        TUE 07/29/97 09:05 Page:195  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @SUPER_TO_PIG              5-0-0/w UBIN        r     1 ARS
     6-0-0/w UBIN        r     1 I                          7-0-0/w UBIN        r     1 J
    10-0-0/w UBIN        r     1 LEN                        4-0-0/w UBIN        r     1 NEXT
    11-0-0/w UBIN        r     1 RESULT                    *0-0-0/w STRC(43722) r     1 SUPER_TO_PIG

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR        r     1 AS_BLANK                   0-0-0/w PTR         r     1 B$SR_NON_BLANK$
     0-0-0/c CHAR(255)   r     1 IN_BUF

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(4608)  r     1 B$SR_NON_BLANK


   Procedure ASB$PIG_ACCT_ATTR requires 116 words for executable code.
   Procedure ASB$PIG_ACCT_ATTR requires 12 words of local(AUTO) storage.
PL6.E3A0      #007=ASB$PIG_ACCT_ATTR File=ASB$EXT.:E05TSI                        TUE 07/29/97 09:05 Page:196  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #007=ASB$PIG_ACCT_ATTR File=ASB$EXT.:E05TSI                        TUE 07/29/97 09:05 Page:197  
          MINI XREF LISTING

ARS
     12899**DCL     13035<>CALL    13039>>DOWHILE 13070<>CALL
ASA_BRKS_LOC
     10013**DCL     10013--REDEF
ASB$PIG
     12909**DCL-ENT 13075--CALL
ASB$READ_SI
     12906**DCL-ENT 13035--CALL    13070--CALL
ASB$SET_PROMPT
     12912**DCL-ENT 13031--CALL
ASH$ERROR
     12915**DCL-ENT 13057--CALL
AS_BLANK
      9873**DCL     13033>>ASSIGN  13036>>DOWHILE 13063>>CALLBLT 13081>>ASSIGN
AS_DEFAULT.BANNER_PERM
     10706**DCL     10707--REDEF
AS_DEFAULT.BUDGET.MACCT
     10611**DCL     10615--REDEF
AS_DEFAULT.BUDGET.MAX_PROJECTS
     10624**DCL     10627--REDEF
AS_DEFAULT.BUDGET.PACCUM
     10607**DCL     10609--REDEF
AS_DEFAULT.BUDGET.PMAXC
     10602**DCL     10604--REDEF
AS_DEFAULT.SETUP_CHRA.TXT
     10722**DCL     10723--REDEF   10724--REDEF
AS_DEFAULT_DREC.PASSWORD
     11976**DCL     11980--REDEF
AS_DEFAULT_DREC.RENAME
     11999**DCL     12000--REDEF
AS_DFLT.BANNER_PERM
     10528**DCL     10529--REDEF
PL6.E3A0      #007=ASB$PIG_ACCT_ATTR File=ASB$EXT.:E05TSI                        TUE 07/29/97 09:05 Page:198  
AS_DFLT.BUDGET.MACCT
     10433**DCL     10437--REDEF
AS_DFLT.BUDGET.MAX_PROJECTS
     10446**DCL     10449--REDEF
AS_DFLT.BUDGET.PACCUM
     10429**DCL     10431--REDEF
AS_DFLT.BUDGET.PMAXC
     10424**DCL     10426--REDEF
AS_DFLT.SETUP_CHRA.TXT
     10544**DCL     10545--REDEF   10546--REDEF
AS_FE_MODE
      9879**DCL      9880--REDEF
AS_MODE
      9876**DCL      9878--REDEF
AS_MOD_USER.ACCESS
     12741**DCL     12742--REDEF
AS_MOD_USER.BANNER
     12728**DCL     12729--REDEF
AS_MOD_USER.BANNER_PERM
     12730**DCL     12731--REDEF
AS_MOD_USER.BILL
     12736**DCL     12737--REDEF
AS_MOD_USER.CPROC
     12732**DCL     12733--REDEF
AS_MOD_USER.FEBILL
     12812**DCL     12813--REDEF
AS_MOD_USER.FECXTMEM
     12829**DCL     12830--REDEF
AS_MOD_USER.FEMINTS
     12814**DCL     12815--REDEF
AS_MOD_USER.FEMMEM
     12825**DCL     12826--REDEF
AS_MOD_USER.FEMTIME
     12823**DCL     12824--REDEF
AS_MOD_USER.FEPPRIV
     12820**DCL     12822--REDEF
PL6.E3A0      #007=ASB$PIG_ACCT_ATTR File=ASB$EXT.:E05TSI                        TUE 07/29/97 09:05 Page:199  
AS_MOD_USER.FEPRIV
     12817**DCL     12819--REDEF
AS_MOD_USER.FORCE_BIT
     12726**DCL     12727--REDEF
AS_MOD_USER.KEY
     12808**DCL     12810--REDEF
AS_MOD_USER.LASTCPROC
     12734**DCL     12735--REDEF
AS_MOD_USER.LIMITS.DO_
     12782**DCL     12783--REDEF
AS_MOD_USER.LIMITS.FPOOLS
     12798**DCL     12799--REDEF
AS_MOD_USER.LIMITS.LO
     12778**DCL     12779--REDEF
AS_MOD_USER.LIMITS.MEM
     12774**DCL     12775--REDEF
AS_MOD_USER.LIMITS.MPRIO
     12802**DCL     12803--REDEF
AS_MOD_USER.LIMITS.PDIS
     12790**DCL     12791--REDEF
AS_MOD_USER.LIMITS.PO
     12786**DCL     12787--REDEF
AS_MOD_USER.LIMITS.TDIS
     12794**DCL     12795--REDEF
AS_MOD_USER.LIMITS.TIME
     12770**DCL     12771--REDEF
AS_MOD_USER.MAXENQ
     12751**DCL     12752--REDEF
AS_MOD_USER.PERM_BIT
     12724**DCL     12725--REDEF
AS_MOD_USER.PPRIV
     12746**DCL     12748--REDEF
AS_MOD_USER.PRIOB
     12753**DCL     12754--REDEF
AS_MOD_USER.PRIV
     12743**DCL     12745--REDEF
PL6.E3A0      #007=ASB$PIG_ACCT_ATTR File=ASB$EXT.:E05TSI                        TUE 07/29/97 09:05 Page:200  
AS_MOD_USER.QUAN
     12749**DCL     12750--REDEF
AS_MOD_USER.SETUP
     12722**DCL     12723--REDEF
AS_PROJECT.BANNER_PERM
     11062**DCL     11063--REDEF
AS_PROJECT.BUDGET.MACCT
     10967**DCL     10971--REDEF
AS_PROJECT.BUDGET.MAX_PROJECTS
     10980**DCL     10983--REDEF
AS_PROJECT.BUDGET.PACCUM
     10963**DCL     10965--REDEF
AS_PROJECT.BUDGET.PMAXC
     10958**DCL     10960--REDEF
AS_PROJECT.SETUP_CHRA.TXT
     11078**DCL     11079--REDEF   11080--REDEF
AS_PROJECT_DFLT.BANNER_PERM
     11240**DCL     11241--REDEF
AS_PROJECT_DFLT.BUDGET.MACCT
     11145**DCL     11149--REDEF
AS_PROJECT_DFLT.BUDGET.MAX_PROJECTS
     11158**DCL     11161--REDEF
AS_PROJECT_DFLT.BUDGET.PACCUM
     11141**DCL     11143--REDEF
AS_PROJECT_DFLT.BUDGET.PMAXC
     11136**DCL     11138--REDEF
AS_PROJECT_DFLT.SETUP_CHRA.TXT
     11256**DCL     11257--REDEF   11258--REDEF
AS_PROJECT_DFLT_DREC.PASSWORD
     12462**DCL     12466--REDEF
AS_PROJECT_DFLT_DREC.RENAME
     12485**DCL     12486--REDEF
AS_PROJECT_DREC.PASSWORD
     12300**DCL     12304--REDEF
AS_PROJECT_DREC.RENAME
     12323**DCL     12324--REDEF
PL6.E3A0      #007=ASB$PIG_ACCT_ATTR File=ASB$EXT.:E05TSI                        TUE 07/29/97 09:05 Page:201  
AS_PROJ_ADMIN.BANNER_PERM
     10884**DCL     10885--REDEF
AS_PROJ_ADMIN.BUDGET.MACCT
     10789**DCL     10793--REDEF
AS_PROJ_ADMIN.BUDGET.MAX_PROJECTS
     10802**DCL     10805--REDEF
AS_PROJ_ADMIN.BUDGET.PACCUM
     10785**DCL     10787--REDEF
AS_PROJ_ADMIN.BUDGET.PMAXC
     10780**DCL     10782--REDEF
AS_PROJ_ADMIN.SETUP_CHRA.TXT
     10900**DCL     10901--REDEF   10902--REDEF
AS_PROJ_ADMIN_DREC.PASSWORD
     12138**DCL     12142--REDEF
AS_PROJ_ADMIN_DREC.RENAME
     12161**DCL     12162--REDEF
AS_USERS.BANNER_PERM
     10350**DCL     10351--REDEF
AS_USERS.BUDGET.MACCT
     10255**DCL     10259--REDEF
AS_USERS.BUDGET.MAX_PROJECTS
     10268**DCL     10271--REDEF
AS_USERS.BUDGET.PACCUM
     10251**DCL     10253--REDEF
AS_USERS.BUDGET.PMAXC
     10246**DCL     10248--REDEF
AS_USERS.SETUP_CHRA.TXT
     10366**DCL     10367--REDEF   10368--REDEF
AS_USERS_CONSTANT.BANNER_PERM
     11418**DCL     11419--REDEF
AS_USERS_CONSTANT.BUDGET.MACCT
     11323**DCL     11327--REDEF
AS_USERS_CONSTANT.BUDGET.MAX_PROJECTS
     11336**DCL     11339--REDEF
AS_USERS_CONSTANT.BUDGET.PACCUM
     11319**DCL     11321--REDEF
PL6.E3A0      #007=ASB$PIG_ACCT_ATTR File=ASB$EXT.:E05TSI                        TUE 07/29/97 09:05 Page:202  
AS_USERS_CONSTANT.BUDGET.PMAXC
     11314**DCL     11316--REDEF
AS_USERS_CONSTANT.SETUP_CHRA.TXT
     11434**DCL     11435--REDEF   11436--REDEF
B$SR_NON_BLANK
     13028**DCL     13062>>CALLBLT
B$SR_NON_BLANK$
     13027**DCL     13028--IMP-PTR 13062>>CALLBLT
BAD_ATTR_LIST
     13080**LABEL   13060--GOTO    13075--CALLALT
END_LINE
     13070**LABEL   13062--CALLALT
ERR_CODE
     10008**DCL     10009--REDEF
I
     12900**DCL     13062<<CALLBLT 13063>>CALLBLT 13064>>ASSIGN  13065>>CALLBLT
IN_BUF
     10004**DCL     13035<>CALL    13036>>DOWHILE 13062>>CALLBLT 13063>>CALLBLT 13065>>CALLBLT 13070<>CALL
J
     12901**DCL     13038<<ASSIGN  13039>>DOWHILE 13062>>CALLBLT 13063<<CALLBLT 13064>>ASSIGN
KL_DEFAULT.PASSWORD
     12624**DCL     12628--REDEF
KL_DEFAULT.RENAME
     12647**DCL     12648--REDEF
KL_DFLT.PASSWORD
     11814**DCL     11818--REDEF
KL_DFLT.RENAME
     11837**DCL     11838--REDEF
KL_DREC.PASSWORD
     11652**DCL     11656--REDEF
KL_DREC.RENAME
     11675**DCL     11676--REDEF
KL_DREC_CNT.PASSWORD
     11539**DCL     11543--REDEF
KL_DREC_CNT.RENAME
     11562**DCL     11563--REDEF
PL6.E3A0      #007=ASB$PIG_ACCT_ATTR File=ASB$EXT.:E05TSI                        TUE 07/29/97 09:05 Page:203  
LEN
     12902**DCL     13064<<ASSIGN  13065>>CALLBLT 13065>>CALLBLT 13066>>ASSIGN  13067>>ASSIGN
NEXT
     12898**DCL     13034<<ASSIGN  13040>>IF      13065>>CALLBLT 13067<<ASSIGN  13067>>ASSIGN  13073>>IF
PROJ_KEY.TEXT
      9886**DCL      9886--REDEF
PROJ_KEY.TXT.PROJECT
      9886**DCL      9886--REDEF
REMEM_VAR
     10012**DCL     10012--REDEF
REM_FCMD
     10012**DCL     10013--REDEF
RESULT
     12903**DCL     13062<<CALLBLT
SUPER_TO_PIG
     12866**DCL        14--PROC    13075<>CALL
SUPER_TO_PIG.ATTR.COUNT
     12889**DCL     13032<<ASSIGN  13066<<ASSIGN  13066>>ASSIGN  13074<<ASSIGN  13074>>ASSIGN  13080<<ASSIGN
SUPER_TO_PIG.ATTR.LIST
     12894**DCL     13033<<ASSIGN  13065<<CALLBLT 13081<<ASSIGN
SUPER_TO_PIG.PROJECT
     12882**DCL     12885--REDEF
SUPER_TO_PIG.SUPER
     12878**DCL     12881--REDEF
USERS_KEY.TEXT
      9883**DCL      9884--REDEF    9884--REDEF    9884--REDEF    9885--REDEF

PL6.E3A0      #008=ASB$LIST File=ASB$EXT.:E05TSI                                 TUE 07/29/97 09:06 Page:204  
      802        1        /*T***********************************************************/
      803        2        /*T*                                                         */
      804        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      805        4        /*T*                                                         */
      806        5        /*T***********************************************************/
      807        6        ASB$LIST: PROC( KEY ) ;
      808        7
      809        8        %INCLUDE  AS_ENTRIES_M ;
      810     1058    1   DCL 1 KEY,
      811     1059    1          2 COUNT UBIN BYTE UNAL,
      812     1060    1          2 TEXT CHAR(21) UNAL ;
      813     1061
      814     1062    1   DCL I UBIN;
      815     1063    1   DCL J UBIN;
      816     1064    1   DCL TEMP CHAR(21);
      817     1065    1   DCL SIZE UBIN;
      818     1066    1   DCL TABS UBIN STATIC INIT(0) ;
      819     1067    1   DCL BUFFER CHAR(80) STATIC INIT( ' ' ) ;
      820     1068
      821     1069        %ASB$WRITE_LO ;
      822     1072
      823     1073
      824     1074    1   IF KEY.COUNT < 9
      825     1075    2   THEN DO;
      826     1076    2      TEMP = SUBSTR( KEY.TEXT, 0, KEY.COUNT );
      827     1077    2      SIZE = KEY.COUNT ;
      828     1078    2      END ;
      829     1079    2   ELSE DO ;
      830     1080    2      CALL INDEX( I, ' ', SUBSTR( KEY.TEXT,0,8) );
      831     1081    2      CALL CONCAT( TEMP, SUBSTR(KEY.TEXT,0,I), ',',
      832     1082    2           SUBSTR(KEY.TEXT,8,KEY.COUNT-8) ) ;
      833     1083    2      SIZE = KEY.COUNT + I - 7 ;
      834     1084    2      END ;
      835     1085
      836     1086    1   IF TABS*22 + SIZE > 80 THEN CALL ASB$FLUSH ;
      837     1087
      838     1088    1   CALL INSERT( BUFFER, TABS*22, , TEMP ) ;
PL6.E3A0      #008=ASB$LIST File=ASB$EXT.:E05TSI                                 TUE 07/29/97 09:06 Page:205  
      839     1089    1   TABS = TABS + 1 ;
      840     1090    1   RETURN ;
      841     1091
      842     1092        %EJECT;
PL6.E3A0      #008=ASB$LIST File=ASB$EXT.:E05TSI                                 TUE 07/29/97 09:06 Page:206  
      843     1093    1   ASB$FLUSH_ERR: ENTRY;
      844     1094
      845     1095    1   IF TABS > 0
      846     1096    2   THEN DO ;
      847     1097    2      TABS = TABS - 1;
      848     1098    2      TEMP = SUBSTR( BUFFER, TABS*22 );
      849     1099    2      CALL INSERT( BUFFER, TABS*22, , ' ' );
      850     1100    2      CALL ASB$FLUSH;
      851     1101    2      CALL ASB$WRITE_LO( TEMP, LENGTHC(TEMP) );
      852     1102    2      END;
      853     1103    1   RETURN;
      854     1104
      855     1105        %EJECT;
PL6.E3A0      #008=ASB$LIST File=ASB$EXT.:E05TSI                                 TUE 07/29/97 09:06 Page:207  
      856     1106    1   ASB$FLUSH: ENTRY ;
      857     1107
      858     1108    1   IF TABS > 0 THEN CALL ASB$WRITE_LO( BUFFER, 80 ) ;
      859     1109    1   TABS = 0 ;
      860     1110    1   BUFFER = ' ' ;
      861     1111    1   RETURN ;
      862     1112
      863     1113
      864     1114
      865     1115    1   END ASB$LIST ;
      866     1116        %EOD;

PL6.E3A0      #008=ASB$LIST File=ASB$EXT.:E05TSI                                 TUE 07/29/97 09:06 Page:208  
--  Include file information  --

   AS_ENTRIES_M.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ASB$LIST.

   Procedure ASB$LIST requires 119 words for executable code.
   Procedure ASB$LIST requires 16 words of local(AUTO) storage.

PL6.E3A0      #008=ASB$LIST File=ASB$EXT.:E05TSI                                 TUE 07/29/97 09:06 Page:209  

 Object Unit name= ASB$LIST                                   File name= ASB$EXT.:E05TOU
 UTS= JUL 29 '97 09:06:00.44 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none    21     25  ASB$LIST
    1   Proc  even  none   119    167  ASB$LIST
    2  RoData even  none     6      6  ASB$LIST

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  ASB$LIST
     1    114                  yes      Std        0  ASB$FLUSH_ERR
     1    152                  yes      Std        0  ASB$FLUSH

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 ASB$WRITE_LO
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #008=ASB$LIST File=ASB$EXT.:E05TSI                                 TUE 07/29/97 09:06 Page:210  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #008=ASB$LIST File=ASB$EXT.:E05TSI                                 TUE 07/29/97 09:06 Page:211  


      802        1        /*T***********************************************************/
      803        2        /*T*                                                         */
      804        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      805        4        /*T*                                                         */
      806        5        /*T***********************************************************/
      807        6        ASB$LIST: PROC( KEY ) ;

      6  1 000000   000000 700200 xent  ASB$LIST     TSX0  ! X66_AUTO_1
         1 000001   000020 000001                    ZERO    16,1

      808        7
      809        8        %INCLUDE  AS_ENTRIES_M ;
      810     1058    1   DCL 1 KEY,
      811     1059    1          2 COUNT UBIN BYTE UNAL,
      812     1060    1          2 TEXT CHAR(21) UNAL ;
      813     1061
      814     1062    1   DCL I UBIN;
      815     1063    1   DCL J UBIN;
      816     1064    1   DCL TEMP CHAR(21);
      817     1065    1   DCL SIZE UBIN;
      818     1066    1   DCL TABS UBIN STATIC INIT(0) ;
      819     1067    1   DCL BUFFER CHAR(80) STATIC INIT( ' ' ) ;
      820     1068
      821     1069        %ASB$WRITE_LO ;
      822     1072
      823     1073
      824     1074    1   IF KEY.COUNT < 9

   1074  1 000002   200003 470500                    LDP0    @KEY,,AUTO
         1 000003   000100 101500                    MRL     fill='000'O
         1 000004   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         1 000005   200016 000004                    ADSC9   SIZE+2,,AUTO             cn=0,n=4
         1 000006   200016 236100                    LDQ     SIZE+2,,AUTO
         1 000007   000011 116007                    CMPQ    9,DL
         1 000010   000024 605000 1                  TPL     s:1080

PL6.E3A0      #008=ASB$LIST File=ASB$EXT.:E05TSI                                 TUE 07/29/97 09:06 Page:212  
      825     1075    2   THEN DO;

      826     1076    2      TEMP = SUBSTR( KEY.TEXT, 0, KEY.COUNT );

   1076  1 000011   000100 101500                    MRL     fill='000'O
         1 000012   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         1 000013   200016 000002                    ADSC9   SIZE+2,,AUTO             cn=0,n=2
         1 000014   200016 220100                    LDX0    SIZE+2,,AUTO
         1 000015   040100 100540                    MLR     fill='040'O
         1 000016   000000 200010                    ADSC9   0,,PR0                   cn=1,n=*X0
         1 000017   200006 000025                    ADSC9   TEMP,,AUTO               cn=0,n=21

      827     1077    2      SIZE = KEY.COUNT ;

   1077  1 000020   000100 101500                    MRL     fill='000'O
         1 000021   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         1 000022   200014 000004                    ADSC9   SIZE,,AUTO               cn=0,n=4

      828     1078    2      END ;

   1078  1 000023   000067 710000 1                  TRA     s:1086

      829     1079    2   ELSE DO ;

      830     1080    2      CALL INDEX( I, ' ', SUBSTR( KEY.TEXT,0,8) );

   1080  1 000024   000000 124500                    SCM     mask='000'O
         1 000025   000000 200010                    ADSC9   0,,PR0                   cn=1,n=8
         1 000026   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         1 000027   200004 000100                    ARG     I,,AUTO

      831     1081    2      CALL CONCAT( TEMP, SUBSTR(KEY.TEXT,0,I), ',',

   1081  1 000030   000100 101500                    MRL     fill='000'O
         1 000031   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         1 000032   200016 000002                    ADSC9   SIZE+2,,AUTO             cn=0,n=2
         1 000033   200016 220100                    LDX0    SIZE+2,,AUTO
PL6.E3A0      #008=ASB$LIST File=ASB$EXT.:E05TSI                                 TUE 07/29/97 09:06 Page:213  
         1 000034   777770 621010                    EAX1    -8,X0
         1 000035   200004 722100                    LXL2    I,,AUTO
         1 000036   040100 100540                    MLR     fill='040'O
         1 000037   000000 200012                    ADSC9   0,,PR0                   cn=1,n=*X2
         1 000040   200006 000025                    ADSC9   TEMP,,AUTO               cn=0,n=21
         1 000041   200004 236100                    LDQ     I,,AUTO
         1 000042   000025 116007                    CMPQ    21,DL
         1 000043   000060 603000 1                  TRC     s:1083
         1 000044   777752 623006                    EAX3    -22,QL
         1 000045   777777 663003                    ERX3    -1,DU
         1 000046   040146 100400                    MLR     fill='040'O
         1 000047   000000 000001 2                  ADSC9   0                        cn=0,n=1
         1 000050   200006 000013                    ADSC9   TEMP,Q,AUTO              cn=0,n=*X3
         1 000051   000024 116007                    CMPQ    20,DL
         1 000052   000060 603000 1                  TRC     s:1083
         1 000053   777753 624006                    EAX4    -21,QL
         1 000054   777777 664003                    ERX4    -1,DU
         1 000055   040146 100540                    MLR     fill='040'O
         1 000056   000002 200011                    ADSC9   2,,PR0                   cn=1,n=*X1
         1 000057   200006 200014                    ADSC9   TEMP,Q,AUTO              cn=1,n=*X4

      832     1082    2           SUBSTR(KEY.TEXT,8,KEY.COUNT-8) ) ;
      833     1083    2      SIZE = KEY.COUNT + I - 7 ;

   1083  1 000060   000100 101500                    MRL     fill='000'O
         1 000061   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         1 000062   200016 000004                    ADSC9   SIZE+2,,AUTO             cn=0,n=4
         1 000063   200016 236100                    LDQ     SIZE+2,,AUTO
         1 000064   200004 036100                    ADLQ    I,,AUTO
         1 000065   000007 136007                    SBLQ    7,DL
         1 000066   200014 756100                    STQ     SIZE,,AUTO

      834     1084    2      END ;

      835     1085
      836     1086    1   IF TABS*22 + SIZE > 80 THEN CALL ASB$FLUSH ;

PL6.E3A0      #008=ASB$LIST File=ASB$EXT.:E05TSI                                 TUE 07/29/97 09:06 Page:214  
   1086  1 000067   000000 236000 0                  LDQ     TABS
         1 000070   000026 402007                    MPY     22,DL
         1 000071   200014 036100                    ADLQ    SIZE,,AUTO
         1 000072   000121 116007                    CMPQ    81,DL
         1 000073   000077 602000 1                  TNC     s:1088

   1086  1 000074   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000075   000152 701000 1                  TSX1    s:1106
         1 000076   000000 011000                    NOP     0

      837     1087
      838     1088    1   CALL INSERT( BUFFER, TABS*22, , TEMP ) ;

   1088  1 000077   000000 236003                    LDQ     0,DU
         1 000100   000000 136000 0                  SBLQ    TABS
         1 000101   000026 402007                    MPY     22,DL
         1 000102   000120 620006                    EAX0    80,QL
         1 000103   000000 236000 0                  LDQ     TABS
         1 000104   000026 402007                    MPY     22,DL
         1 000105   040046 100500                    MLR     fill='040'O
         1 000106   200006 000025                    ADSC9   TEMP,,AUTO               cn=0,n=21
         1 000107   000001 000010 0                  ADSC9   BUFFER,Q                 cn=0,n=*X0

      839     1089    1   TABS = TABS + 1 ;

   1089  1 000110   000000 235000 0                  LDA     TABS
         1 000111   000001 035007                    ADLA    1,DL
         1 000112   000000 755000 0                  STA     TABS

      840     1090    1   RETURN ;

   1090  1 000113   000000 702200 xent               TSX2  ! X66_ARET

      841     1091
      842     1092        %EJECT;
PL6.E3A0      #008=ASB$LIST File=ASB$EXT.:E05TSI                                 TUE 07/29/97 09:06 Page:215  
      843     1093    1   ASB$FLUSH_ERR: ENTRY;

   1093  1 000114   000000 700200 xent  ASB$FLUSH_E* TSX0  ! X66_AUTO_1
         1 000115   000020 000001                    ZERO    16,1

      844     1094
      845     1095    1   IF TABS > 0

   1095  1 000116   000000 235000 0                  LDA     TABS
         1 000117   000151 600000 1                  TZE     s:1103

      846     1096    2   THEN DO ;

      847     1097    2      TABS = TABS - 1;

   1097  1 000120   000001 135007                    SBLA    1,DL
         1 000121   000000 755000 0                  STA     TABS

      848     1098    2      TEMP = SUBSTR( BUFFER, TABS*22 );

   1098  1 000122   000000 236003                    LDQ     0,DU
         1 000123   000000 136000 0                  SBLQ    TABS
         1 000124   000026 402007                    MPY     22,DL
         1 000125   000120 620006                    EAX0    80,QL
         1 000126   000000 236000 0                  LDQ     TABS
         1 000127   000026 402007                    MPY     22,DL
         1 000130   040100 100446                    MLR     fill='040'O
         1 000131   000001 000010 0                  ADSC9   BUFFER,Q                 cn=0,n=*X0
         1 000132   200006 000025                    ADSC9   TEMP,,AUTO               cn=0,n=21

      849     1099    2      CALL INSERT( BUFFER, TABS*22, , ' ' );

   1099  1 000133   040046 100400                    MLR     fill='040'O
         1 000134   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         1 000135   000001 000010 0                  ADSC9   BUFFER,Q                 cn=0,n=*X0

      850     1100    2      CALL ASB$FLUSH;
PL6.E3A0      #008=ASB$LIST File=ASB$EXT.:E05TSI                                 TUE 07/29/97 09:06 Page:216  

   1100  1 000136   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000137   000152 701000 1                  TSX1    s:1106
         1 000140   000000 011000                    NOP     0

      851     1101    2      CALL ASB$WRITE_LO( TEMP, LENGTHC(TEMP) );

   1101  1 000141   000002 236000 2                  LDQ     2
         1 000142   200017 756100                    STQ     SIZE+3,,AUTO
         1 000143   200006 630500                    EPPR0   TEMP,,AUTO
         1 000144   200016 450500                    STP0    SIZE+2,,AUTO
         1 000145   200016 630500                    EPPR0   SIZE+2,,AUTO
         1 000146   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000147   000000 701000 xent               TSX1    ASB$WRITE_LO
         1 000150   000000 011000                    NOP     0

      852     1102    2      END;

      853     1103    1   RETURN;

   1103  1 000151   000000 702200 xent               TSX2  ! X66_ARET

      854     1104
      855     1105        %EJECT;
PL6.E3A0      #008=ASB$LIST File=ASB$EXT.:E05TSI                                 TUE 07/29/97 09:06 Page:217  
      856     1106    1   ASB$FLUSH: ENTRY ;

   1106  1 000152   000000 700200 xent  ASB$FLUSH    TSX0  ! X66_AUTO_1
         1 000153   000020 000001                    ZERO    16,1

      857     1107
      858     1108    1   IF TABS > 0 THEN CALL ASB$WRITE_LO( BUFFER, 80 ) ;

   1108  1 000154   000000 235000 0                  LDA     TABS
         1 000155   000162 600000 1                  TZE     s:1109

   1108  1 000156   000004 630400 2                  EPPR0   4
         1 000157   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000160   000000 701000 xent               TSX1    ASB$WRITE_LO
         1 000161   000000 011000                    NOP     0

      859     1109    1   TABS = 0 ;

   1109  1 000162   000000 450000 0                  STZ     TABS

      860     1110    1   BUFFER = ' ' ;

   1110  1 000163   040000 100400                    MLR     fill='040'O
         1 000164   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         1 000165   000001 000120 0                  ADSC9   BUFFER                   cn=0,n=80

      861     1111    1   RETURN ;

   1111  1 000166   000000 702200 xent               TSX2  ! X66_ARET
      862     1112
      863     1113
      864     1114
      865     1115    1   END ASB$LIST ;
      866     1116        %EOD;

PL6.E3A0      #008=ASB$LIST File=ASB$EXT.:E05TSI                                 TUE 07/29/97 09:06 Page:218  
--  Include file information  --

   AS_ENTRIES_M.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ASB$LIST.
PL6.E3A0      #008=ASB$LIST File=ASB$EXT.:E05TSI                                 TUE 07/29/97 09:06 Page:219  

 **** Variables and constants ****

  ****  Section 000  Data  ASB$LIST

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     1-0-0/c CHAR(80)    r     1 BUFFER                     0-0-0/w UBIN        r     1 TABS

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @KEY                       4-0-0/w UBIN        r     1 I
    *0-0-0/c STRC(198)   r     1 KEY                       14-0-0/w UBIN        r     1 SIZE
     6-0-0/c CHAR(21)    r     1 TEMP


   Procedure ASB$LIST requires 119 words for executable code.
   Procedure ASB$LIST requires 16 words of local(AUTO) storage.
PL6.E3A0      #008=ASB$LIST File=ASB$EXT.:E05TSI                                 TUE 07/29/97 09:06 Page:220  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #008=ASB$LIST File=ASB$EXT.:E05TSI                                 TUE 07/29/97 09:06 Page:221  
          MINI XREF LISTING

ASB$FLUSH
      1106**ENTRY    1086--CALL     1100--CALL
ASB$WRITE_LO
      1070**DCL-ENT  1101--CALL     1108--CALL
BUFFER
      1067**DCL      1088<<CALLBLT  1098>>ASSIGN   1099<<CALLBLT  1108<>CALL     1110<<ASSIGN
I
      1062**DCL      1080<<CALLBLT  1081>>CALLBLT  1083>>ASSIGN
KEY
      1058**DCL         6--PROC
KEY.COUNT
      1059**DCL      1074>>IF       1076>>ASSIGN   1077>>ASSIGN   1081>>CALLBLT  1083>>ASSIGN
KEY.TEXT
      1060**DCL      1076>>ASSIGN   1080>>CALLBLT  1081>>CALLBLT  1081>>CALLBLT
SIZE
      1065**DCL      1077<<ASSIGN   1083<<ASSIGN   1086>>IF
TABS
      1066**DCL      1086>>IF       1088>>CALLBLT  1089<<ASSIGN   1089>>ASSIGN   1095>>IF       1097<<ASSIGN
      1097>>ASSIGN   1098>>ASSIGN   1099>>CALLBLT  1108>>IF       1109<<ASSIGN
TEMP
      1064**DCL      1076<<ASSIGN   1081<<CALLBLT  1088>>CALLBLT  1098<<ASSIGN   1101<>CALL     1101--CALL

PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:222  
      867        1        /*M* ASB$PIG - module which does comgroup reads and writes to PIG. */
      868        2        /*T***********************************************************/
      869        3        /*T*                                                         */
      870        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      871        5        /*T*                                                         */
      872        6        /*T***********************************************************/
      873        7        ASB$PIG: PROC( SUPER_TO_PIG ) ALTRET;
      874        8
      875        9
      876       10        /********************************************************************/
      877       11        /*    Include files       include files       include files         */
      878       12        /********************************************************************/
      879       13
      880       14        %INCLUDE  AS_ENTRIES_M ;
      881     1064        %INCLUDE  AS_PERR_C;
      882     1666        %INCLUDE  CP_6;
      883     1747        %INCLUDE  B_ERRORS_C;
      884     2874        %INCLUDE  FX_PERR_C;
      885     2933        %INCLUDE           AS_SUPER_C  ;
      886     3368        %INCLUDE           AS_MAC_C    ;
      887     3448        %INCLUDE           AS_SUBS_C   ;
      888     4862        %INCLUDE           KL_SUPER_C  ;
      889     7764        %INCLUDE           XU_MACRO_C  ;
      890    10870        %INCLUDE           XU_FORMAT_C ;
      891    11032        %INCLUDE           AS_SUPER_R  ;
      892    14048        %LIST;
      893    14049        %SET LISTSUB='1'B;
      894    14050
      895    14051        /********************************************************************/
      896    14052        /*             Parameter = "SUPER_TO_PIG"                           */
      897    14053        /********************************************************************/
      898    14054
      899    14055        %SUPER_TO_PIG( STCLASS=" ", VARY=NO );
             14056    1   DCL 1 SUPER_TO_PIG ALIGNED ,
             14057    1          2 TYPE UBIN BYTE UNAL ,       /* Type of transaction */
             14058        %IF '1'B='1'B;
             14059        %EQU CREATE_ACCT   = 0;              /* Create an account       */
PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:223  
             14060        %EQU MODIFY_ACCT   = 1;              /* Modify an account       */
             14061        %EQU LIST_ACCT     = 2;              /* List an account         */
             14062        %EQU VALIDATE_ATTR = 3;              /* Validate attribute list */
             14063        %EQU DELETE_ACCT   = 4;              /* Delete an account       */
             14064        %ENDIF;
             14065    1          2 PROJ BIT(1) UNAL,           /* '1'b => project administrator
             14066                                                '0'b => system  adminstrator */
             14067    1          2 WIDTH UBIN(8) UNAL ,       /* Width of output line */
             14068    1          2 SUPER,                      /* Project or system administrator  */
             14069    1             3 ACCT CHAR(8) UNAL ,      /* who is using super. */
             14070    1             3 UNAME CHAR(12) UNAL ,
             14071    1          2 RESUPER REDEF SUPER CHAR(20) ,
             14072    1          2 PROJECT,                    /* Name of project */
             14073    1             3 ACCT CHAR(8) UNAL,
             14074    1             3 UNAME CHAR(12) UNAL,
             14075    1          2 PROJECT_TEXT REDEF PROJECT CHAR(20),
             14076    1          2 PACKSET CHAR(6) UNAL ,      /* Packset name */
             14077    1          2 ACCT CHAR(8) UNAL ,         /* File management account */
             14078    1          2 ATTR,
             14079    1             3 COUNT UBIN HALF UNAL ,   /* Length of attribute list */
             14080        %LSET STR=CONCAT(TEXTCHAR(),'     ');
             14081        %IF (((SUBSTR(STR,0,5)='BASED') OR SUBSTR(STR,0,1)=' ') AND '0'B='1'B);
             14083        %ELSE;
             14084    1             3 LIST CHAR(4800);         /* Attribute list */
             14085        %ENDIF;
      900    14087
      901    14088        /********************************************************************/
      902    14089        /*    Fpts        fpts        fpts        fpts        fpts          */
      903    14090        /********************************************************************/
      904    14091
      905    14092        %PLIST;
      906    14093        %FPT_OPEN(
      907    14094                  FPTN = OPEN_COMGROUP ,
      908    14095                  ASN = COMGROUP,
      909    14096                  DCB = M$CSCG ,
      910    14097                  SETSTA = VLP_SETSTA,
      911    14098                  NAME = VLP_NAME ,
PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:224  
      912    14099                  ACCT = FILE_ACCT ,
      913    14100                  SHARE = ALL );
      914    14209        %VLP_SETSTA(
      915    14210                  ISTATION = 'PIG' ,
      916    14211                  ILATCH = NO  ,
      917    14212                  EOFONE = NO ,
      918    14213                  EOFNONE = NO ,
      919    14214                  DIRONLY = YES ,
      920    14215                  OSTATION = 'PIG' ,
      921    14216                  OMSGTYP = 'SUPER' ,
      922    14217                  OLATCH = NO );
      923    14245        %VLP_NAME( NAME='CSCG' );
      924    14272        %FPT_WRITE( FPTN=WRITE_TO_PIG, DCB=M$CSCG );
      925    14303        %FPT_READ ( FPTN=READ_FROM_PIG, DCB=M$CSCG );
      926    14342
      927    14343        /********************************************************************/
      928    14344
      929    14345    1   DCL B$TCB$ PTR SYMREF;
      930    14346        %B$TCB;
      931    14349        %B$ALT;
      932    14357    1   DCL M$CSCG DCB;
      933    14358    1   DCL BUFFER$ PTR;
      934    14359    1   DCL I     UBIN;
      935    14360    1   DCL SIZE  UBIN;
      936    14361    1   DCL CNT UBIN;
      937    14362    1   DCL ERR UBIN;
      938    14363    1   DCL STR$ PTR;
      939    14364    1   DCL READ_OUTSTANDING BIT(1) ALIGNED STATIC INIT('0'B);
      940    14365    1   DCL 1 TXT$C BASED(STR$),
      941    14366    1          2 CNT UBIN BYTE UNAL,
      942    14367    1          2 TXT CHAR(TXT$C.CNT);
      943    14368    1   DCL 1 M_ERR_CODE ,
      944    14369    1          2 FCG_MID UBIN(18) UNAL ,
      945    14370    1          2 MON BIT(1) UNAL ,
      946    14371    1          2 CODE UBIN(14) UNAL ,
      947    14372    1          2 SEV UBIN(3) UNAL ;
      948    14373        %ASH$ERROR ;
PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:225  
      949    14376        %ASH$INFO ;
      950    14379        %ASB$WRITE_LO ;
      951    14382        %ASB$FLUSH_ERR ;
      952    14385
      953    14386        /********************************************************************/
      954    14387        /*                "PIG_TO_SUPER"                                    */
      955    14388        /********************************************************************/
      956    14389
      957    14390        %LIST;
      958    14391        %SET LISTSUB='1'B;
      959    14392        %PIG_TO_SUPER( STCLASS=AUTO );
             14393    1   DCL 1 PIG_TO_SUPER AUTO ALIGNED,
             14394    1          2 ERR UBIN ,                   /* 0 => transaction ok, else error code */
             14395    1          2 COUNT UBIN HALF UNAL,
             14396        %LSET STR=CONCAT(TEXTCHAR(AUTO),'     ');
             14397        %IF ((SUBSTR(STR,0,5)='BASED') OR (SUBSTR(STR,0,1)=' '));
             14399        %ELSE;
             14400    1          2 TEXT(0:4095) CHAR(1);  /* Largest text super will accept */
             14401        %ENDIF;
      960    14403        %PLIST;
      961    14404
      962    14405
      963    14406        %EJECT;
PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:226  
      964    14407        /********************************************************************/
      965    14408        /*    Procedure       procedure       procedure       procedure     */
      966    14409        /********************************************************************/
      967    14410        /*
      968    14411                              If there is a read from pig outstanding, read it.
      969    14412        */
      970    14413    1   READ_FROM_PIG.BUF_ = VECTOR( PIG_TO_SUPER );
      971    14414    2   IF READ_OUTSTANDING THEN DO;
      972    14415    3      DO INHIBIT;
      973    14416    3         CALL M$READ( READ_FROM_PIG ) ALTRET(READ_ERROR);
      974    14417    3         READ_OUTSTANDING = AS_FALSE;
      975    14418    3         END;
      976    14419    2      END;
      977    14420        /*
      978    14421                              Write message to pig
      979    14422        */
      980    14423    1   WRITE_TO_PIG.BUF_.BUF$ = ADDR( SUPER_TO_PIG );
      981    14424    1   WRITE_TO_PIG.BUF_.BOUND = SIZEC( SUPER_TO_PIG ) - SIZEC(SUPER_TO_PIG.ATTR)
      982    14425    1        + SUPER_TO_PIG.ATTR.COUNT + 1;
      983    14426    1   WRITE_REC:
      984    14427    2   DO INHIBIT;
      985    14428    2      CALL M$WRITE( WRITE_TO_PIG ) ALTRET( WRITE_ERROR );
      986    14429    2      READ_OUTSTANDING = AS_TRUE;
      987    14430    2      END;
      988    14431    2   IF '0'B THEN DO;
      989    14432        /*E*  ERROR:  ASB-E$UNABLE_TO_WRITE_TO_PIG-C
      990    14433              MESSAGE: Unable to write to PIG through the comgroup CG/%U1
      991    14434        */
      992    14435    2   WRITE_ERROR:
      993    14436    2      IF AS_WILD_USER THEN CALL ASB$FLUSH_ERR;
      994    14437    2      CALL CONCAT( AS_FIELD1.TEXT, VLP_NAME.NAME#, '.', FILE_ACCT.TXT );
      995    14438    2      AS_FIELD1.COUNT = VLP_NAME.L# + 9;
      996    14439    2      M_ERR_CODE = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;
      997    14440           %SCREAM( ERR#=E$UNABLE_TO_WRITE_TO_PIG, LEVEL=INFO, MID='B' );
      998    14455    2      AS_DCBNUM# = DCBNUM( M$CSCG );
      999    14456    2      CALL ASH$ERROR( M_ERR_CODE );
     1000    14457    2      ALTRETURN;
PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:227  
     1001    14458    2      END;
     1002    14459        /*
     1003    14460                                  Now read from pig
     1004    14461        */
     1005    14462    1   READ_REC:
     1006    14463    2   DO INHIBIT;
     1007    14464    2      CALL M$READ( READ_FROM_PIG ) ALTRET( READ_ERROR );
     1008    14465    2      READ_OUTSTANDING = AS_FALSE;
     1009    14466    2      END;
     1010    14467    2   DO WHILE('0'B);
     1011    14468    2   READ_ERROR:
     1012    14469    2      M_ERR_CODE = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;
     1013    14470        /*E*  ERROR:  ASB-E$UNABLE_TO_READ_FROM_PIG-C
     1014    14471              MESSAGE: Unable to read from PIG through the comgroup CG/%U1
     1015    14472        */
     1016    14473    2      CALL CONCAT( AS_FIELD1.TEXT, VLP_NAME.NAME#, '.', FILE_ACCT.TXT );
     1017    14474    2      AS_FIELD1.COUNT = VLP_NAME.L# + 9;
     1018    14475           %SCREAM( ERR#=E$UNABLE_TO_READ_FROM_PIG, LEVEL=INFO, MID='B' );
     1019    14490    2      AS_DCBNUM# = DCBNUM( M$CSCG );
     1020    14491    2      CALL ASH$ERROR( M_ERR_CODE );
     1021    14492    2      ALTRETURN;
     1022    14493    2      END;
     1023    14494    1   ERR = PIG_TO_SUPER.ERR;
     1024    14495    2   DO SELECT( SUPER_TO_PIG.TYPE );
     1025    14496    2      SELECT( %CREATE_ACCT );
     1026    14497    2      IF ERR > 0 THEN ERR_CNT = ERR_CNT + 1;
     1027    14498    2      SELECT( %MODIFY_ACCT );
     1028    14499    3      IF ERR > 0 THEN DO;
     1029    14500    3         MERR_CODE = BINBIT( ERR, 36 );
     1030    14501    3         IF MERR_CODE.CODE = %E$NOKEY  OR  MERR_CODE.CODE = 22/*E$PROJNA*/
     1031    14502    4         THEN DO;
     1032    14503    4            SUPER_TO_PIG.TYPE = %CREATE_ACCT;
     1033    14504    4            GOTO WRITE_REC;
     1034    14505    4            END;
     1035    14506    3         IF AS_WILD_USER THEN CALL ASB$FLUSH_ERR;
     1036    14507    3         ERR_CNT = ERR_CNT + 1;
     1037    14508    3         END;
PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:228  
     1038    14509    2      SELECT( %VALIDATE_ATTR );
     1039    14510    2      IF ERR = 0 THEN RETURN;
     1040    14511    2      ERR_CNT = ERR_CNT + 1;
     1041    14512    2      SELECT( %DELETE_ACCT );
     1042    14513    2      RETURN;
     1043    14514    2      END;
     1044    14515        /*
     1045    14516                                      Write the message from pig.
     1046    14517        */
     1047    14518    1   I = 0;
     1048    14519    2   DO WHILE( I < PIG_TO_SUPER.COUNT );
     1049    14520    2      STR$ = ADDR( PIG_TO_SUPER.TEXT(I) );
     1050    14521    2      OUT_BUF = TXT$C.TXT;
     1051    14522    2      CNT = TXT$C.CNT;
     1052    14523    2      IF OUT_BUF ~= ' **** COMMAND ABORTED' THEN
     1053    14524    2         CALL ASB$WRITE_LO( OUT_BUF, CNT );
     1054    14525    2      I = I + CNT + 1;
     1055    14526    2      END;
     1056    14527    1   IF ERR > 0 THEN ALTRETURN;
     1057    14528    1   RETURN;
     1058    14529
     1059    14530
     1060    14531        %EJECT;
PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:229  
     1061    14532    1   ASB$OPEN_COMGROUP: ENTRY ALTRET;
     1062    14533
     1063    14534
     1064    14535    1   CALL M$OPEN( OPEN_COMGROUP ) ALTRET( OPEN_ERROR );
     1065    14536    2   DO WHILE( '0'B );
     1066    14537        /*E*  ERROR:  ASB-E$UNABLE_TO_OPEN_CSCG-C
     1067    14538              MESSAGE: Unable to open comgroup CG/%U1
     1068    14539        */
     1069    14540    2   OPEN_ERROR:
     1070    14541    2      M_ERR_CODE = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;
     1071    14542    2      CALL CONCAT( AS_FIELD1.TEXT, VLP_NAME.NAME#, '.', FILE_ACCT.TXT );
     1072    14543    2      AS_FIELD1.COUNT = VLP_NAME.L# + 9;
     1073    14544           %SCREAM( ERR#=E$UNABLE_TO_OPEN_CSCG, LEVEL=INFO, MID='B' );
     1074    14559    2      AS_DCBNUM# = DCBNUM( M$CSCG );
     1075    14560    2      CALL ASH$ERROR( M_ERR_CODE );
     1076    14561    2      END;
     1077    14562    1   RETURN;
     1078    14563
     1079    14564
     1080    14565
     1081    14566    1   END ASB$PIG;
     1082    14567        %EOD;

PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:230  
--  Include file information  --

   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   FX_PERR_C.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   AS_PERR_C.:E05TOU  is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ASB$PIG.

   Procedure ASB$PIG requires 247 words for executable code.
   Procedure ASB$PIG requires 1040 words of local(AUTO) storage.

PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:231  

 Object Unit name= ASB$PIG                                    File name= ASB$EXT.:E05TOU
 UTS= JUL 29 '97 09:06:07.44 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$LO
    2   Data  even  none    99    143  ASB$PIG
    3   DCB   even  none     0      0  M$CSCG
    4  RoData even  UTS      9     11  ASB$PIG
    5   Proc  even  none   247    367  ASB$PIG
    6  RoData even  none     6      6  ASB$PIG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     5      0   yes    yes     yes      Std        1  ASB$PIG
     5    322          yes     yes      Std        0  ASB$OPEN_COMGROUP
PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:232  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 XU_OUTPUT_OPTIONS
         yes           Std       2 ASB$WRITE_LO
         yes           Std       2 ASH$INFO
         yes           Std       0 ASB$FLUSH_ERR
         yes           Std       2 ASH$ERROR
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    AS_TRUE                          r    AS_FALSE
r    AS_MODE                          r    AS_FE_MODE                            M$LO
     OUT_BUF                               ERR_CODE                              AS_FIELD1
     REMEM_VAR                             REM_FCMD                              ASA_BRKS_LOC
     ERR_CNT                               FILE_ACCT                             AS_WILD_USER
     AS_DCBNUM#                            B$TCB$                                M$CSCG
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:233  


      867        1        /*M* ASB$PIG - module which does comgroup reads and writes to PIG. */
      868        2        /*T***********************************************************/
      869        3        /*T*                                                         */
      870        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      871        5        /*T*                                                         */
      872        6        /*T***********************************************************/
      873        7        ASB$PIG: PROC( SUPER_TO_PIG ) ALTRET;

      7  5 000000   000000 700200 xent  ASB$PIG      TSX0  ! X66_AUTO_1
         5 000001   002020 000001                    ZERO    1040,1

      874        8
      875        9
      876       10        /********************************************************************/
      877       11        /*    Include files       include files       include files         */
      878       12        /********************************************************************/
      879       13
      880       14        %INCLUDE  AS_ENTRIES_M ;
      881     1064        %INCLUDE  AS_PERR_C;
      882     1666        %INCLUDE  CP_6;
      883     1747        %INCLUDE  B_ERRORS_C;
      884     2874        %INCLUDE  FX_PERR_C;
      885     2933        %INCLUDE           AS_SUPER_C  ;
      886     3368        %INCLUDE           AS_MAC_C    ;
      887     3448        %INCLUDE           AS_SUBS_C   ;
      888     4862        %INCLUDE           KL_SUPER_C  ;
      889     7764        %INCLUDE           XU_MACRO_C  ;
      890    10870        %INCLUDE           XU_FORMAT_C ;
      891    11032        %INCLUDE           AS_SUPER_R  ;
      892    14048        %LIST;
      893    14049        %SET LISTSUB='1'B;
      894    14050
      895    14051        /********************************************************************/
      896    14052        /*             Parameter = "SUPER_TO_PIG"                           */
      897    14053        /********************************************************************/
      898    14054
PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:234  
      899    14055        %SUPER_TO_PIG( STCLASS=" ", VARY=NO );
             14056    1   DCL 1 SUPER_TO_PIG ALIGNED ,
             14057    1          2 TYPE UBIN BYTE UNAL ,       /* Type of transaction */
             14058        %IF '1'B='1'B;
             14059        %EQU CREATE_ACCT   = 0;              /* Create an account       */
             14060        %EQU MODIFY_ACCT   = 1;              /* Modify an account       */
             14061        %EQU LIST_ACCT     = 2;              /* List an account         */
             14062        %EQU VALIDATE_ATTR = 3;              /* Validate attribute list */
             14063        %EQU DELETE_ACCT   = 4;              /* Delete an account       */
             14064        %ENDIF;
             14065    1          2 PROJ BIT(1) UNAL,           /* '1'b => project administrator
             14066                                                '0'b => system  adminstrator */
             14067    1          2 WIDTH UBIN(8) UNAL ,       /* Width of output line */
             14068    1          2 SUPER,                      /* Project or system administrator  */
             14069    1             3 ACCT CHAR(8) UNAL ,      /* who is using super. */
             14070    1             3 UNAME CHAR(12) UNAL ,
             14071    1          2 RESUPER REDEF SUPER CHAR(20) ,
             14072    1          2 PROJECT,                    /* Name of project */
             14073    1             3 ACCT CHAR(8) UNAL,
             14074    1             3 UNAME CHAR(12) UNAL,
             14075    1          2 PROJECT_TEXT REDEF PROJECT CHAR(20),
             14076    1          2 PACKSET CHAR(6) UNAL ,      /* Packset name */
             14077    1          2 ACCT CHAR(8) UNAL ,         /* File management account */
             14078    1          2 ATTR,
             14079    1             3 COUNT UBIN HALF UNAL ,   /* Length of attribute list */
             14080        %LSET STR=CONCAT(TEXTCHAR(),'     ');
             14081        %IF (((SUBSTR(STR,0,5)='BASED') OR SUBSTR(STR,0,1)=' ') AND '0'B='1'B);
             14083        %ELSE;
             14084    1             3 LIST CHAR(4800);         /* Attribute list */
             14085        %ENDIF;
      900    14087
      901    14088        /********************************************************************/
      902    14089        /*    Fpts        fpts        fpts        fpts        fpts          */
      903    14090        /********************************************************************/
      904    14091
      905    14092        %PLIST;
      906    14093        %FPT_OPEN(
PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:235  
      907    14094                  FPTN = OPEN_COMGROUP ,
      908    14095                  ASN = COMGROUP,
      909    14096                  DCB = M$CSCG ,
      910    14097                  SETSTA = VLP_SETSTA,
      911    14098                  NAME = VLP_NAME ,
      912    14099                  ACCT = FILE_ACCT ,
      913    14100                  SHARE = ALL );
      914    14209        %VLP_SETSTA(
      915    14210                  ISTATION = 'PIG' ,
      916    14211                  ILATCH = NO  ,
      917    14212                  EOFONE = NO ,
      918    14213                  EOFNONE = NO ,
      919    14214                  DIRONLY = YES ,
      920    14215                  OSTATION = 'PIG' ,
      921    14216                  OMSGTYP = 'SUPER' ,
      922    14217                  OLATCH = NO );
      923    14245        %VLP_NAME( NAME='CSCG' );
      924    14272        %FPT_WRITE( FPTN=WRITE_TO_PIG, DCB=M$CSCG );
      925    14303        %FPT_READ ( FPTN=READ_FROM_PIG, DCB=M$CSCG );
      926    14342
      927    14343        /********************************************************************/
      928    14344
      929    14345    1   DCL B$TCB$ PTR SYMREF;
      930    14346        %B$TCB;
      931    14349        %B$ALT;
      932    14357    1   DCL M$CSCG DCB;
      933    14358    1   DCL BUFFER$ PTR;
      934    14359    1   DCL I     UBIN;
      935    14360    1   DCL SIZE  UBIN;
      936    14361    1   DCL CNT UBIN;
      937    14362    1   DCL ERR UBIN;
      938    14363    1   DCL STR$ PTR;
      939    14364    1   DCL READ_OUTSTANDING BIT(1) ALIGNED STATIC INIT('0'B);
      940    14365    1   DCL 1 TXT$C BASED(STR$),
      941    14366    1          2 CNT UBIN BYTE UNAL,
      942    14367    1          2 TXT CHAR(TXT$C.CNT);
      943    14368    1   DCL 1 M_ERR_CODE ,
PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:236  
      944    14369    1          2 FCG_MID UBIN(18) UNAL ,
      945    14370    1          2 MON BIT(1) UNAL ,
      946    14371    1          2 CODE UBIN(14) UNAL ,
      947    14372    1          2 SEV UBIN(3) UNAL ;
      948    14373        %ASH$ERROR ;
      949    14376        %ASH$INFO ;
      950    14379        %ASB$WRITE_LO ;
      951    14382        %ASB$FLUSH_ERR ;
      952    14385
      953    14386        /********************************************************************/
      954    14387        /*                "PIG_TO_SUPER"                                    */
      955    14388        /********************************************************************/
      956    14389
      957    14390        %LIST;
      958    14391        %SET LISTSUB='1'B;
      959    14392        %PIG_TO_SUPER( STCLASS=AUTO );
             14393    1   DCL 1 PIG_TO_SUPER AUTO ALIGNED,
             14394    1          2 ERR UBIN ,                   /* 0 => transaction ok, else error code */
             14395    1          2 COUNT UBIN HALF UNAL,
             14396        %LSET STR=CONCAT(TEXTCHAR(AUTO),'     ');
             14397        %IF ((SUBSTR(STR,0,5)='BASED') OR (SUBSTR(STR,0,1)=' '));
             14399        %ELSE;
             14400    1          2 TEXT(0:4095) CHAR(1);  /* Largest text super will accept */
             14401        %ENDIF;
      960    14403        %PLIST;
      961    14404
      962    14405
      963    14406        %EJECT;
PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:237  
      964    14407        /********************************************************************/
      965    14408        /*    Procedure       procedure       procedure       procedure     */
      966    14409        /********************************************************************/
      967    14410        /*
      968    14411                              If there is a read from pig outstanding, read it.
      969    14412        */
      970    14413    1   READ_FROM_PIG.BUF_ = VECTOR( PIG_TO_SUPER );

  14413  5 000002   000000 235000 6                  LDA     0
         5 000003   202016 452500                    STP2    PIG_TO_SUPER+1027,,AUTO
         5 000004   202016 236100                    LDQ     PIG_TO_SUPER+1027,,AUTO
         5 000005   000013 036003                    ADLQ    11,DU
         5 000006   000130 757000 2                  STAQ    READ_FROM_PIG+4

      971    14414    2   IF READ_OUTSTANDING THEN DO;

  14414  5 000007   000142 234000 2                  SZN     READ_OUTSTANDING
         5 000010   000020 605000 5                  TPL     s:14423

      972    14415    3      DO INHIBIT;

      973    14416    3         CALL M$READ( READ_FROM_PIG ) ALTRET(READ_ERROR);

  14416  5 000011   000124 630600 2                  EPPR0 ! READ_FROM_PIG
         5 000012   440000 713600                    CLIMB ! alt,read
         5 000013   401400 401760                    pmme    nvectors=4
         5 000014   000115 702200 5                  TSX2  ! READ_ERROR

      974    14417    3         READ_OUTSTANDING = AS_FALSE;

  14417  5 000015   000000 236200 xsym               LDQ   ! AS_FALSE
         5 000016   400000 376203                    ANQ   ! -131072,DU
         5 000017   000142 756200 2                  STQ   ! READ_OUTSTANDING

      975    14418    3         END;

      976    14419    2      END;
PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:238  

      977    14420        /*
      978    14421                              Write message to pig
      979    14422        */
      980    14423    1   WRITE_TO_PIG.BUF_.BUF$ = ADDR( SUPER_TO_PIG );

  14423  5 000020   200003 236100                    LDQ     @SUPER_TO_PIG,,AUTO
         5 000021   000115 756000 2                  STQ     WRITE_TO_PIG+5

      981    14424    1   WRITE_TO_PIG.BUF_.BOUND = SIZEC( SUPER_TO_PIG ) - SIZEC(SUPER_TO_PIG.ATTR)

  14424  5 000022   200003 470500                    LDP0    @SUPER_TO_PIG,,AUTO
         5 000023   000016 236100                    LDQ     14,,PR0
         5 000024   000022 772000                    QRL     18
         5 000025   000073 036007                    ADLQ    59,DL
         5 000026   000020 736000                    QLS     16
         5 000027   000114 676000 2                  ERQ     WRITE_TO_PIG+4
         5 000030   000034 376000 xsym               ANQ     B_VECTNIL+28
         5 000031   000114 656000 2                  ERSQ    WRITE_TO_PIG+4

      982    14425    1        + SUPER_TO_PIG.ATTR.COUNT + 1;
      983    14426    1   WRITE_REC:
      984    14427    2   DO INHIBIT;

  14427  5 000032                       WRITE_REC    null
      985    14428    2      CALL M$WRITE( WRITE_TO_PIG ) ALTRET( WRITE_ERROR );

  14428  5 000032   000110 630600 2                  EPPR0 ! WRITE_TO_PIG
         5 000033   440001 713600                    CLIMB ! alt,write
         5 000034   401400 401760                    pmme    nvectors=4
         5 000035   000042 702200 5                  TSX2  ! WRITE_ERROR

      986    14429    2      READ_OUTSTANDING = AS_TRUE;

  14429  5 000036   000000 236200 xsym               LDQ   ! AS_TRUE
         5 000037   400000 376203                    ANQ   ! -131072,DU
         5 000040   000142 756200 2                  STQ   ! READ_OUTSTANDING
PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:239  

      987    14430    2      END;

      988    14431    2   IF '0'B THEN DO;

  14431  5 000041   000105 710000 5                  TRA     READ_REC

      989    14432        /*E*  ERROR:  ASB-E$UNABLE_TO_WRITE_TO_PIG-C
      990    14433              MESSAGE: Unable to write to PIG through the comgroup CG/%U1
      991    14434        */
      992    14435    2   WRITE_ERROR:
      993    14436    2      IF AS_WILD_USER THEN CALL ASB$FLUSH_ERR;

  14436  5 000042   000000 234000 xsym  WRITE_ERROR  SZN     AS_WILD_USER
         5 000043   000047 605000 5                  TPL     s:14437

  14436  5 000044   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000045   000000 701000 xent               TSX1    ASB$FLUSH_ERR
         5 000046   000000 011000                    NOP     0

      994    14437    2      CALL CONCAT( AS_FIELD1.TEXT, VLP_NAME.NAME#, '.', FILE_ACCT.TXT );

  14437  5 000047   040000 100400                    MLR     fill='040'O
         5 000050   000106 200004 2                  ADSC9   VLP_NAME                 cn=1,n=4
         5 000051   000000 200004 xsym               ADSC9   AS_FIELD1                cn=1,n=4
         5 000052   000056 236003                    LDQ     46,DU
         5 000053   000001 552020 xsym               STBQ    AS_FIELD1+1,'20'O
         5 000054   040000 100400                    MLR     fill='040'O
         5 000055   000000 000010 xsym               ADSC9   FILE_ACCT                cn=0,n=8
         5 000056   000001 400043 xsym               ADSC9   AS_FIELD1+1              cn=2,n=35

      995    14438    2      AS_FIELD1.COUNT = VLP_NAME.L# + 9;

  14438  5 000057   000106 236000 2                  LDQ     VLP_NAME
         5 000060   000033 772000                    QRL     27
         5 000061   000011 036007                    ADLQ    9,DL
         5 000062   000033 736000                    QLS     27
PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:240  
         5 000063   000000 552040 xsym               STBQ    AS_FIELD1,'40'O

      996    14439    2      M_ERR_CODE = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;

  14439  5 000064   000000 470400 xsym               LDP0    B$TCB$
         5 000065   000000 471500                    LDP1    0,,PR0
         5 000066   100102 236100                    LDQ     66,,PR1
         5 000067   200012 756100                    STQ     M_ERR_CODE,,AUTO

      997    14440           %SCREAM( ERR#=E$UNABLE_TO_WRITE_TO_PIG, LEVEL=INFO, MID='B' );

  14448  5 000070   000001 630400 6                  EPPR0   1
         5 000071   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000072   000000 701000 xent               TSX1    ASH$INFO
         5 000073   000000 011000                    NOP     0

      998    14455    2      AS_DCBNUM# = DCBNUM( M$CSCG );

  14455  5 000074   000000 236007 xsym               LDQ     M$CSCG,DL
         5 000075   000000 756000 xsym               STQ     AS_DCBNUM#

      999    14456    2      CALL ASH$ERROR( M_ERR_CODE );

  14456  5 000076   200012 630500                    EPPR0   M_ERR_CODE,,AUTO
         5 000077   202016 450500                    STP0    PIG_TO_SUPER+1027,,AUTO
         5 000100   202016 630500                    EPPR0   PIG_TO_SUPER+1027,,AUTO
         5 000101   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000102   000000 701000 xent               TSX1    ASH$ERROR
         5 000103   000000 011000                    NOP     0

     1000    14457    2      ALTRETURN;

  14457  5 000104   000000 702200 xent               TSX2  ! X66_AALT

     1001    14458    2      END;
     1002    14459        /*
     1003    14460                                  Now read from pig
PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:241  
     1004    14461        */
     1005    14462    1   READ_REC:
     1006    14463    2   DO INHIBIT;

  14463  5 000105                       READ_REC     null
     1007    14464    2      CALL M$READ( READ_FROM_PIG ) ALTRET( READ_ERROR );

  14464  5 000105   000124 630600 2                  EPPR0 ! READ_FROM_PIG
         5 000106   440000 713600                    CLIMB ! alt,read
         5 000107   401400 401760                    pmme    nvectors=4
         5 000110   000115 702200 5                  TSX2  ! READ_ERROR

     1008    14465    2      READ_OUTSTANDING = AS_FALSE;

  14465  5 000111   000000 236200 xsym               LDQ   ! AS_FALSE
         5 000112   400000 376203                    ANQ   ! -131072,DU
         5 000113   000142 756200 2                  STQ   ! READ_OUTSTANDING

     1009    14466    2      END;

     1010    14467    2   DO WHILE('0'B);

  14467  5 000114   000153 710000 5                  TRA     s:14494

     1011    14468    2   READ_ERROR:
     1012    14469    2      M_ERR_CODE = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;

  14469  5 000115   000000 470400 xsym  READ_ERROR   LDP0    B$TCB$
         5 000116   000000 471500                    LDP1    0,,PR0
         5 000117   100102 236100                    LDQ     66,,PR1
         5 000120   200012 756100                    STQ     M_ERR_CODE,,AUTO

     1013    14470        /*E*  ERROR:  ASB-E$UNABLE_TO_READ_FROM_PIG-C
     1014    14471              MESSAGE: Unable to read from PIG through the comgroup CG/%U1
     1015    14472        */
     1016    14473    2      CALL CONCAT( AS_FIELD1.TEXT, VLP_NAME.NAME#, '.', FILE_ACCT.TXT );

PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:242  
  14473  5 000121   040000 100400                    MLR     fill='040'O
         5 000122   000106 200004 2                  ADSC9   VLP_NAME                 cn=1,n=4
         5 000123   000000 200004 xsym               ADSC9   AS_FIELD1                cn=1,n=4
         5 000124   000056 236003                    LDQ     46,DU
         5 000125   000001 552020 xsym               STBQ    AS_FIELD1+1,'20'O
         5 000126   040000 100400                    MLR     fill='040'O
         5 000127   000000 000010 xsym               ADSC9   FILE_ACCT                cn=0,n=8
         5 000130   000001 400043 xsym               ADSC9   AS_FIELD1+1              cn=2,n=35

     1017    14474    2      AS_FIELD1.COUNT = VLP_NAME.L# + 9;

  14474  5 000131   000106 236000 2                  LDQ     VLP_NAME
         5 000132   000033 772000                    QRL     27
         5 000133   000011 036007                    ADLQ    9,DL
         5 000134   000033 736000                    QLS     27
         5 000135   000000 552040 xsym               STBQ    AS_FIELD1,'40'O

     1018    14475           %SCREAM( ERR#=E$UNABLE_TO_READ_FROM_PIG, LEVEL=INFO, MID='B' );

  14483  5 000136   000002 630400 6                  EPPR0   2
         5 000137   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000140   000000 701000 xent               TSX1    ASH$INFO
         5 000141   000000 011000                    NOP     0

     1019    14490    2      AS_DCBNUM# = DCBNUM( M$CSCG );

  14490  5 000142   000000 236007 xsym               LDQ     M$CSCG,DL
         5 000143   000000 756000 xsym               STQ     AS_DCBNUM#

     1020    14491    2      CALL ASH$ERROR( M_ERR_CODE );

  14491  5 000144   200012 630500                    EPPR0   M_ERR_CODE,,AUTO
         5 000145   202016 450500                    STP0    PIG_TO_SUPER+1027,,AUTO
         5 000146   202016 630500                    EPPR0   PIG_TO_SUPER+1027,,AUTO
         5 000147   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000150   000000 701000 xent               TSX1    ASH$ERROR
         5 000151   000000 011000                    NOP     0
PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:243  

     1021    14492    2      ALTRETURN;

  14492  5 000152   000000 702200 xent               TSX2  ! X66_AALT

     1022    14493    2      END;

     1023    14494    1   ERR = PIG_TO_SUPER.ERR;

  14494  5 000153   200013 235100                    LDA     PIG_TO_SUPER,,AUTO
         5 000154   200010 755100                    STA     ERR,,AUTO

     1024    14495    2   DO SELECT( SUPER_TO_PIG.TYPE );

  14495  5 000155   200003 470500                    LDP0    @SUPER_TO_PIG,,AUTO
         5 000156   000000 236100                    LDQ     0,,PR0
         5 000157   000033 772000                    QRL     27
         5 000160   000001 116007                    CMPQ    1,DL
         5 000161   000172 602000 5                  TNC     s:14495+13
         5 000162   000204 600000 5                  TZE     s:14499
         5 000163   000003 116007                    CMPQ    3,DL
         5 000164   000242 602000 5                  TNC     s:14518
         5 000165   000232 600000 5                  TZE     s:14510
         5 000166   000033 736000                    QLS     27
         5 000167   004000 116003                    CMPQ    2048,DU
         5 000170   000242 601000 5                  TNZ     s:14518
         5 000171   000241 710000 5                  TRA     s:14513
         5 000172   000000 236100                    LDQ     0,,PR0
         5 000173   777000 316003                    CANQ    -512,DU
         5 000174   000176 600000 5                  TZE     s:14497
         5 000175   000242 710000 5                  TRA     s:14518

     1025    14496    2      SELECT( %CREATE_ACCT );

     1026    14497    2      IF ERR > 0 THEN ERR_CNT = ERR_CNT + 1;

  14497  5 000176   000000 115003                    CMPA    0,DU
PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:244  
         5 000177   000242 600000 5                  TZE     s:14518

  14497  5 000200   000000 235000 xsym               LDA     ERR_CNT
         5 000201   000001 035007                    ADLA    1,DL
         5 000202   000000 755000 xsym               STA     ERR_CNT
         5 000203   000242 710000 5                  TRA     s:14518

     1027    14498    2      SELECT( %MODIFY_ACCT );

     1028    14499    3      IF ERR > 0 THEN DO;

  14499  5 000204   000000 115003                    CMPA    0,DU
         5 000205   000242 600000 5                  TZE     s:14518

     1029    14500    3         MERR_CODE = BINBIT( ERR, 36 );

  14500  5 000206   200010 236100                    LDQ     ERR,,AUTO
         5 000207   000000 756000 xsym               STQ     ERR_CODE

     1030    14501    3         IF MERR_CODE.CODE = %E$NOKEY  OR  MERR_CODE.CODE = 22/*E$PROJNA*/

  14501  5 000210   000000 236000 xsym               LDQ     ERR_CODE
         5 000211   377770 376007                    ANQ     131064,DL
         5 000212   001020 116007                    CMPQ    528,DL
         5 000213   000216 600000 5                  TZE     s:14503
         5 000214   000260 116007                    CMPQ    176,DL
         5 000215   000221 601000 5                  TNZ     s:14506

     1031    14502    4         THEN DO;

     1032    14503    4            SUPER_TO_PIG.TYPE = %CREATE_ACCT;

  14503  5 000216   000000 236003                    LDQ     0,DU
         5 000217   000000 552140                    STBQ    0,'40'O,PR0

     1033    14504    4            GOTO WRITE_REC;

PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:245  
  14504  5 000220   000032 710000 5                  TRA     WRITE_REC

     1034    14505    4            END;
     1035    14506    3         IF AS_WILD_USER THEN CALL ASB$FLUSH_ERR;

  14506  5 000221   000000 234000 xsym               SZN     AS_WILD_USER
         5 000222   000226 605000 5                  TPL     s:14507

  14506  5 000223   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000224   000000 701000 xent               TSX1    ASB$FLUSH_ERR
         5 000225   000000 011000                    NOP     0

     1036    14507    3         ERR_CNT = ERR_CNT + 1;

  14507  5 000226   000000 235000 xsym               LDA     ERR_CNT
         5 000227   000001 035007                    ADLA    1,DL
         5 000230   000000 755000 xsym               STA     ERR_CNT

     1037    14508    3         END;

  14508  5 000231   000242 710000 5                  TRA     s:14518

     1038    14509    2      SELECT( %VALIDATE_ATTR );

     1039    14510    2      IF ERR = 0 THEN RETURN;

  14510  5 000232   000000 115003                    CMPA    0,DU
         5 000233   000235 601000 5                  TNZ     s:14511

  14510  5 000234   000000 702200 xent               TSX2  ! X66_ARET

     1040    14511    2      ERR_CNT = ERR_CNT + 1;

  14511  5 000235   000000 235000 xsym               LDA     ERR_CNT
         5 000236   000001 035007                    ADLA    1,DL
         5 000237   000000 755000 xsym               STA     ERR_CNT
         5 000240   000242 710000 5                  TRA     s:14518
PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:246  

     1041    14512    2      SELECT( %DELETE_ACCT );

     1042    14513    2      RETURN;

  14513  5 000241   000000 702200 xent               TSX2  ! X66_ARET

     1043    14514    2      END;

     1044    14515        /*
     1045    14516                                      Write the message from pig.
     1046    14517        */
     1047    14518    1   I = 0;

  14518  5 000242   200005 450100                    STZ     I,,AUTO

     1048    14519    2   DO WHILE( I < PIG_TO_SUPER.COUNT );

  14519  5 000243   200014 236100                    LDQ     PIG_TO_SUPER+1,,AUTO
         5 000244   000022 772000                    QRL     18
         5 000245   200005 116100                    CMPQ    I,,AUTO
         5 000246   000316 602000 5                  TNC     s:14527
         5 000247   000316 600000 5                  TZE     s:14527

     1049    14520    2      STR$ = ADDR( PIG_TO_SUPER.TEXT(I) );

  14520  5 000250   202016 452500                    STP2    PIG_TO_SUPER+1027,,AUTO
         5 000251   200005 236100                    LDQ     I,,AUTO
         5 000252   000020 736000                    QLS     16
         5 000253   000003 036000 6                  ADLQ    3
         5 000254   202016 036100                    ADLQ    PIG_TO_SUPER+1027,,AUTO
         5 000255   200011 756100                    STQ     STR$,,AUTO

     1050    14521    2      OUT_BUF = TXT$C.TXT;

  14521  5 000256   200011 470500                    LDP0    STR$,,AUTO
         5 000257   000100 101500                    MRL     fill='000'O
PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:247  
         5 000260   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         5 000261   202016 000002                    ADSC9   PIG_TO_SUPER+1027,,AUTO  cn=0,n=2
         5 000262   202016 220100                    LDX0    PIG_TO_SUPER+1027,,AUTO
         5 000263   040000 100540                    MLR     fill='040'O
         5 000264   000000 200010                    ADSC9   0,,PR0                   cn=1,n=*X0
         5 000265   000000 000214 xsym               ADSC9   OUT_BUF                  cn=0,n=140

     1051    14522    2      CNT = TXT$C.CNT;

  14522  5 000266   000100 101500                    MRL     fill='000'O
         5 000267   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         5 000270   200007 000004                    ADSC9   CNT,,AUTO                cn=0,n=4

     1052    14523    2      IF OUT_BUF ~= ' **** COMMAND ABORTED' THEN

  14523  5 000271   040000 106400                    CMPC    fill='040'O
         5 000272   000000 000214 xsym               ADSC9   OUT_BUF                  cn=0,n=140
         5 000273   000002 000025 4                  ADSC9   2                        cn=0,n=21
         5 000274   000305 600000 5                  TZE     s:14525

     1053    14524    2         CALL ASB$WRITE_LO( OUT_BUF, CNT );

  14524  5 000275   200007 631500                    EPPR1   CNT,,AUTO
         5 000276   202017 451500                    STP1    PIG_TO_SUPER+1028,,AUTO
         5 000277   000004 236000 6                  LDQ     4
         5 000300   202016 756100                    STQ     PIG_TO_SUPER+1027,,AUTO
         5 000301   202016 630500                    EPPR0   PIG_TO_SUPER+1027,,AUTO
         5 000302   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000303   000000 701000 xent               TSX1    ASB$WRITE_LO
         5 000304   000000 011000                    NOP     0

     1054    14525    2      I = I + CNT + 1;

  14525  5 000305   200005 236100                    LDQ     I,,AUTO
         5 000306   200007 036100                    ADLQ    CNT,,AUTO
         5 000307   000001 036007                    ADLQ    1,DL
         5 000310   200005 756100                    STQ     I,,AUTO
PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:248  

     1055    14526    2      END;

  14526  5 000311   200014 236100                    LDQ     PIG_TO_SUPER+1,,AUTO
         5 000312   000022 772000                    QRL     18
         5 000313   200005 116100                    CMPQ    I,,AUTO
         5 000314   000316 600000 5                  TZE     s:14527
         5 000315   000250 603000 5                  TRC     s:14520

     1056    14527    1   IF ERR > 0 THEN ALTRETURN;

  14527  5 000316   200010 235100                    LDA     ERR,,AUTO
         5 000317   000321 600000 5                  TZE     s:14528

  14527  5 000320   000000 702200 xent               TSX2  ! X66_AALT

     1057    14528    1   RETURN;

  14528  5 000321   000000 702200 xent               TSX2  ! X66_ARET

     1058    14529
     1059    14530
     1060    14531        %EJECT;
PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:249  
     1061    14532    1   ASB$OPEN_COMGROUP: ENTRY ALTRET;

  14532  5 000322   000000 700200 xent  ASB$OPEN_CO* TSX0  ! X66_AUTO_1
         5 000323   002020 000001                    ZERO    1040,1

     1062    14533
     1063    14534
     1064    14535    1   CALL M$OPEN( OPEN_COMGROUP ) ALTRET( OPEN_ERROR );

  14535  5 000324   000000 630400 2                  EPPR0   OPEN_COMGROUP
         5 000325   450000 713400                    CLIMB   alt,open
         5 000326   410400 401760                    pmme    nvectors=18
         5 000327   000331 702000 5                  TSX2    OPEN_ERROR

     1065    14536    2   DO WHILE( '0'B );

  14536  5 000330   000366 710000 5                  TRA     s:14562

     1066    14537        /*E*  ERROR:  ASB-E$UNABLE_TO_OPEN_CSCG-C
     1067    14538              MESSAGE: Unable to open comgroup CG/%U1
     1068    14539        */
     1069    14540    2   OPEN_ERROR:
     1070    14541    2      M_ERR_CODE = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;

  14541  5 000331   000000 470400 xsym  OPEN_ERROR   LDP0    B$TCB$
         5 000332   000000 471500                    LDP1    0,,PR0
         5 000333   100102 236100                    LDQ     66,,PR1
         5 000334   200012 756100                    STQ     M_ERR_CODE,,AUTO

     1071    14542    2      CALL CONCAT( AS_FIELD1.TEXT, VLP_NAME.NAME#, '.', FILE_ACCT.TXT );

  14542  5 000335   040000 100400                    MLR     fill='040'O
         5 000336   000106 200004 2                  ADSC9   VLP_NAME                 cn=1,n=4
         5 000337   000000 200004 xsym               ADSC9   AS_FIELD1                cn=1,n=4
         5 000340   000056 236003                    LDQ     46,DU
         5 000341   000001 552020 xsym               STBQ    AS_FIELD1+1,'20'O
         5 000342   040000 100400                    MLR     fill='040'O
PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:250  
         5 000343   000000 000010 xsym               ADSC9   FILE_ACCT                cn=0,n=8
         5 000344   000001 400043 xsym               ADSC9   AS_FIELD1+1              cn=2,n=35

     1072    14543    2      AS_FIELD1.COUNT = VLP_NAME.L# + 9;

  14543  5 000345   000106 236000 2                  LDQ     VLP_NAME
         5 000346   000033 772000                    QRL     27
         5 000347   000011 036007                    ADLQ    9,DL
         5 000350   000033 736000                    QLS     27
         5 000351   000000 552040 xsym               STBQ    AS_FIELD1,'40'O

     1073    14544           %SCREAM( ERR#=E$UNABLE_TO_OPEN_CSCG, LEVEL=INFO, MID='B' );

  14552  5 000352   000005 630400 6                  EPPR0   5
         5 000353   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000354   000000 701000 xent               TSX1    ASH$INFO
         5 000355   000000 011000                    NOP     0

     1074    14559    2      AS_DCBNUM# = DCBNUM( M$CSCG );

  14559  5 000356   000000 236007 xsym               LDQ     M$CSCG,DL
         5 000357   000000 756000 xsym               STQ     AS_DCBNUM#

     1075    14560    2      CALL ASH$ERROR( M_ERR_CODE );

  14560  5 000360   200012 630500                    EPPR0   M_ERR_CODE,,AUTO
         5 000361   202016 450500                    STP0    PIG_TO_SUPER+1027,,AUTO
         5 000362   202016 630500                    EPPR0   PIG_TO_SUPER+1027,,AUTO
         5 000363   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000364   000000 701000 xent               TSX1    ASH$ERROR
         5 000365   000000 011000                    NOP     0

     1076    14561    2      END;

     1077    14562    1   RETURN;

  14562  5 000366   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:251  
     1078    14563
     1079    14564
     1080    14565
     1081    14566    1   END ASB$PIG;
     1082    14567        %EOD;

PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:252  
--  Include file information  --

   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   FX_PERR_C.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   AS_PERR_C.:E05TOU  is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ASB$PIG.
PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:253  

 **** Variables and constants ****

  ****  Section 002  Data  ASB$PIG

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(2088)  r     1 OPEN_COMGROUP            124-0-0/d STRC(504)   r     1 READ_FROM_PIG
   142-0-0/w BIT         r     1 READ_OUTSTANDING         106-0-0/c STRC(45)    r     1 VLP_NAME
    72-0-0/w STRC(432)   r     1 VLP_SETSTA               110-0-0/d STRC(432)   r     1 WRITE_TO_PIG

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @SUPER_TO_PIG              7-0-0/w UBIN        r     1 CNT
    10-0-0/w UBIN        r     1 ERR                        5-0-0/w UBIN        r     1 I
    12-0-0/b STRC        r     1 M_ERR_CODE                13-0-0/w STRC(36918) r     1 PIG_TO_SUPER
    11-0-0/w PTR         r     1 STR$                      *0-0-0/w STRC(43722) r     1 SUPER_TO_PIG

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 AS_DCBNUM#                 0-0-0/b BIT         r     1 AS_FALSE
     0-0-0/w STRC(369)   r     1 AS_FIELD1                  0-0-0/b BIT         r     1 AS_TRUE
     0-0-0/b BIT         r     1 AS_WILD_USER               0-0-0/w PTR         r     1 B$TCB$
     0-0-0/w UBIN        r     1 ERR_CNT                    0-0-0/b STRC        r     1 ERR_CODE
     0-0-0/c STRC(72)    r     1 FILE_ACCT                  0-0-0/b STRC        r     1 MERR_CODE
     0-0-0/c CHAR(140)   r     1 OUT_BUF

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:254  

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0N  NULL        r     1 M$CSCG                     0-0-0/c ASTR(9)     r     1 TXT$C


   Procedure ASB$PIG requires 247 words for executable code.
   Procedure ASB$PIG requires 1040 words of local(AUTO) storage.
PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:255  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:256  
          MINI XREF LISTING

ASA_BRKS_LOC
     11196**DCL     11196--REDEF
ASB$FLUSH_ERR
     14383**DCL-ENT 14436--CALL    14506--CALL
ASB$WRITE_LO
     14380**DCL-ENT 14524--CALL
ASH$ERROR
     14374**DCL-ENT 14456--CALL    14491--CALL    14560--CALL
ASH$INFO
     14377**DCL-ENT 14448--CALL    14483--CALL    14552--CALL
AS_DCBNUM#
     11203**DCL     14455<<ASSIGN  14490<<ASSIGN  14559<<ASSIGN
AS_DEFAULT.BANNER_PERM
     11889**DCL     11890--REDEF
AS_DEFAULT.BUDGET.MACCT
     11794**DCL     11798--REDEF
AS_DEFAULT.BUDGET.MAX_PROJECTS
     11807**DCL     11810--REDEF
AS_DEFAULT.BUDGET.PACCUM
     11790**DCL     11792--REDEF
AS_DEFAULT.BUDGET.PMAXC
     11785**DCL     11787--REDEF
AS_DEFAULT.SETUP_CHRA.TXT
     11905**DCL     11906--REDEF   11907--REDEF
AS_DEFAULT_DREC.PASSWORD
     13159**DCL     13163--REDEF
AS_DEFAULT_DREC.RENAME
     13182**DCL     13183--REDEF
AS_DFLT.BANNER_PERM
     11711**DCL     11712--REDEF
AS_DFLT.BUDGET.MACCT
     11616**DCL     11620--REDEF
PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:257  
AS_DFLT.BUDGET.MAX_PROJECTS
     11629**DCL     11632--REDEF
AS_DFLT.BUDGET.PACCUM
     11612**DCL     11614--REDEF
AS_DFLT.BUDGET.PMAXC
     11607**DCL     11609--REDEF
AS_DFLT.SETUP_CHRA.TXT
     11727**DCL     11728--REDEF   11729--REDEF
AS_FALSE
     11056**DCL     14417>>ASSIGN  14465>>ASSIGN
AS_FE_MODE
     11062**DCL     11063--REDEF
AS_FIELD1.COUNT
     11193**DCL     14438<<ASSIGN  14474<<ASSIGN  14543<<ASSIGN
AS_FIELD1.TEXT
     11193**DCL     14437<<CALLBLT 14473<<CALLBLT 14542<<CALLBLT
AS_MODE
     11059**DCL     11061--REDEF
AS_MOD_USER.ACCESS
     13924**DCL     13925--REDEF
AS_MOD_USER.BANNER
     13911**DCL     13912--REDEF
AS_MOD_USER.BANNER_PERM
     13913**DCL     13914--REDEF
AS_MOD_USER.BILL
     13919**DCL     13920--REDEF
AS_MOD_USER.CPROC
     13915**DCL     13916--REDEF
AS_MOD_USER.FEBILL
     13995**DCL     13996--REDEF
AS_MOD_USER.FECXTMEM
     14012**DCL     14013--REDEF
AS_MOD_USER.FEMINTS
     13997**DCL     13998--REDEF
AS_MOD_USER.FEMMEM
     14008**DCL     14009--REDEF
PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:258  
AS_MOD_USER.FEMTIME
     14006**DCL     14007--REDEF
AS_MOD_USER.FEPPRIV
     14003**DCL     14005--REDEF
AS_MOD_USER.FEPRIV
     14000**DCL     14002--REDEF
AS_MOD_USER.FORCE_BIT
     13909**DCL     13910--REDEF
AS_MOD_USER.KEY
     13991**DCL     13993--REDEF
AS_MOD_USER.LASTCPROC
     13917**DCL     13918--REDEF
AS_MOD_USER.LIMITS.DO_
     13965**DCL     13966--REDEF
AS_MOD_USER.LIMITS.FPOOLS
     13981**DCL     13982--REDEF
AS_MOD_USER.LIMITS.LO
     13961**DCL     13962--REDEF
AS_MOD_USER.LIMITS.MEM
     13957**DCL     13958--REDEF
AS_MOD_USER.LIMITS.MPRIO
     13985**DCL     13986--REDEF
AS_MOD_USER.LIMITS.PDIS
     13973**DCL     13974--REDEF
AS_MOD_USER.LIMITS.PO
     13969**DCL     13970--REDEF
AS_MOD_USER.LIMITS.TDIS
     13977**DCL     13978--REDEF
AS_MOD_USER.LIMITS.TIME
     13953**DCL     13954--REDEF
AS_MOD_USER.MAXENQ
     13934**DCL     13935--REDEF
AS_MOD_USER.PERM_BIT
     13907**DCL     13908--REDEF
AS_MOD_USER.PPRIV
     13929**DCL     13931--REDEF
PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:259  
AS_MOD_USER.PRIOB
     13936**DCL     13937--REDEF
AS_MOD_USER.PRIV
     13926**DCL     13928--REDEF
AS_MOD_USER.QUAN
     13932**DCL     13933--REDEF
AS_MOD_USER.SETUP
     13905**DCL     13906--REDEF
AS_PROJECT.BANNER_PERM
     12245**DCL     12246--REDEF
AS_PROJECT.BUDGET.MACCT
     12150**DCL     12154--REDEF
AS_PROJECT.BUDGET.MAX_PROJECTS
     12163**DCL     12166--REDEF
AS_PROJECT.BUDGET.PACCUM
     12146**DCL     12148--REDEF
AS_PROJECT.BUDGET.PMAXC
     12141**DCL     12143--REDEF
AS_PROJECT.SETUP_CHRA.TXT
     12261**DCL     12262--REDEF   12263--REDEF
AS_PROJECT_DFLT.BANNER_PERM
     12423**DCL     12424--REDEF
AS_PROJECT_DFLT.BUDGET.MACCT
     12328**DCL     12332--REDEF
AS_PROJECT_DFLT.BUDGET.MAX_PROJECTS
     12341**DCL     12344--REDEF
AS_PROJECT_DFLT.BUDGET.PACCUM
     12324**DCL     12326--REDEF
AS_PROJECT_DFLT.BUDGET.PMAXC
     12319**DCL     12321--REDEF
AS_PROJECT_DFLT.SETUP_CHRA.TXT
     12439**DCL     12440--REDEF   12441--REDEF
AS_PROJECT_DFLT_DREC.PASSWORD
     13645**DCL     13649--REDEF
AS_PROJECT_DFLT_DREC.RENAME
     13668**DCL     13669--REDEF
PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:260  
AS_PROJECT_DREC.PASSWORD
     13483**DCL     13487--REDEF
AS_PROJECT_DREC.RENAME
     13506**DCL     13507--REDEF
AS_PROJ_ADMIN.BANNER_PERM
     12067**DCL     12068--REDEF
AS_PROJ_ADMIN.BUDGET.MACCT
     11972**DCL     11976--REDEF
AS_PROJ_ADMIN.BUDGET.MAX_PROJECTS
     11985**DCL     11988--REDEF
AS_PROJ_ADMIN.BUDGET.PACCUM
     11968**DCL     11970--REDEF
AS_PROJ_ADMIN.BUDGET.PMAXC
     11963**DCL     11965--REDEF
AS_PROJ_ADMIN.SETUP_CHRA.TXT
     12083**DCL     12084--REDEF   12085--REDEF
AS_PROJ_ADMIN_DREC.PASSWORD
     13321**DCL     13325--REDEF
AS_PROJ_ADMIN_DREC.RENAME
     13344**DCL     13345--REDEF
AS_TRUE
     11056**DCL     14429>>ASSIGN
AS_USERS.BANNER_PERM
     11533**DCL     11534--REDEF
AS_USERS.BUDGET.MACCT
     11438**DCL     11442--REDEF
AS_USERS.BUDGET.MAX_PROJECTS
     11451**DCL     11454--REDEF
AS_USERS.BUDGET.PACCUM
     11434**DCL     11436--REDEF
AS_USERS.BUDGET.PMAXC
     11429**DCL     11431--REDEF
AS_USERS.SETUP_CHRA.TXT
     11549**DCL     11550--REDEF   11551--REDEF
AS_USERS_CONSTANT.BANNER_PERM
     12601**DCL     12602--REDEF
PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:261  
AS_USERS_CONSTANT.BUDGET.MACCT
     12506**DCL     12510--REDEF
AS_USERS_CONSTANT.BUDGET.MAX_PROJECTS
     12519**DCL     12522--REDEF
AS_USERS_CONSTANT.BUDGET.PACCUM
     12502**DCL     12504--REDEF
AS_USERS_CONSTANT.BUDGET.PMAXC
     12497**DCL     12499--REDEF
AS_USERS_CONSTANT.SETUP_CHRA.TXT
     12617**DCL     12618--REDEF   12619--REDEF
AS_WILD_USER
     11201**DCL     14436>>IF      14506>>IF
B$ALT.CODE
     14351**DCL     14351--REDEF   14352--REDEF   14352--REDEF
B$ALT.ERR
     14352**DCL     14439>>ASSIGN  14469>>ASSIGN  14541>>ASSIGN
B$ALT.ERR.ERR#
     14353**DCL     14353--REDEF
B$ALT.EVID
     14352**DCL     14352--REDEF   14352--REDEF
B$TCB.ALT$
     14347**DCL     14439>>ASSIGN  14469>>ASSIGN  14541>>ASSIGN
B$TCB$
     14345**DCL     14439>>ASSIGN  14469>>ASSIGN  14541>>ASSIGN
CNT
     14361**DCL     14522<<ASSIGN  14524<>CALL    14525>>ASSIGN
ERR
     14362**DCL     14494<<ASSIGN  14497>>IF      14499>>IF      14500>>ASSIGN  14510>>IF      14527>>IF
ERR_CNT
     11199**DCL     14497<<ASSIGN  14497>>ASSIGN  14507<<ASSIGN  14507>>ASSIGN  14511<<ASSIGN  14511>>ASSIGN
ERR_CODE
     11191**DCL     11192--REDEF
FILE_ACCT
     11199**DCL     14170--DCLINIT
FILE_ACCT.TXT
     11200**DCL     14437>>CALLBLT 14473>>CALLBLT 14542>>CALLBLT
PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:262  
I
     14359**DCL     14518<<ASSIGN  14519>>DOWHILE 14520>>ASSIGN  14525<<ASSIGN  14525>>ASSIGN
KL_DEFAULT.PASSWORD
     13807**DCL     13811--REDEF
KL_DEFAULT.RENAME
     13830**DCL     13831--REDEF
KL_DFLT.PASSWORD
     12997**DCL     13001--REDEF
KL_DFLT.RENAME
     13020**DCL     13021--REDEF
KL_DREC.PASSWORD
     12835**DCL     12839--REDEF
KL_DREC.RENAME
     12858**DCL     12859--REDEF
KL_DREC_CNT.PASSWORD
     12722**DCL     12726--REDEF
KL_DREC_CNT.RENAME
     12745**DCL     12746--REDEF
M$CSCG
     14357**DCL     14455>>ASSIGN  14490>>ASSIGN  14559>>ASSIGN
M$OPEN
      1675**DCL-ENT 14535--CALL
M$READ
      1676**DCL-ENT 14416--CALL    14464--CALL
M$WRITE
      1676**DCL-ENT 14428--CALL
MERR_CODE
     11192**DCL     14500<<ASSIGN
MERR_CODE.CODE
     11192**DCL     14501>>IF      14501>>IF
M_ERR_CODE
     14368**DCL     14439<<ASSIGN  14456<>CALL    14469<<ASSIGN  14491<>CALL    14541<<ASSIGN  14560<>CALL
OPEN_COMGROUP
     14165**DCL     14535<>CALL
OPEN_COMGROUP.ACSVEH_
     14167**DCL     14168--REDEF
PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:263  
OPEN_COMGROUP.ALTKEYS_
     14173**DCL     14174--REDEF   14174--REDEF
OPEN_COMGROUP.HDR_
     14172**DCL     14173--REDEF
OPEN_COMGROUP.TAB_
     14171**DCL     14172--REDEF
OPEN_COMGROUP.UHL_
     14165**DCL     14166--REDEF   14166--REDEF
OPEN_COMGROUP.V
     14174**DCL     14165--DCLINIT
OPEN_COMGROUP.V.FSN#
     14205**DCL     14205--REDEF   14205--REDEF
OPEN_COMGROUP.WSN_
     14171**DCL     14171--REDEF
OPEN_ERROR
     14541**LABEL   14535--CALLALT
OUT_BUF
     11188**DCL     14521<<ASSIGN  14523>>IF      14524<>CALL
PIG_TO_SUPER
     14393**DCL     14413--ASSIGN
PIG_TO_SUPER.COUNT
     14395**DCL     14519>>DOWHILE
PIG_TO_SUPER.ERR
     14394**DCL     14494>>ASSIGN
PIG_TO_SUPER.TEXT
     14400**DCL     14520--ASSIGN
PROJ_KEY.TEXT
     11069**DCL     11069--REDEF
PROJ_KEY.TXT.PROJECT
     11069**DCL     11069--REDEF
READ_ERROR
     14469**LABEL   14416--CALLALT 14464--CALLALT
READ_FROM_PIG
     14320**DCL     14416<>CALL    14464<>CALL
READ_FROM_PIG.BUF_
     14322**DCL     14413<<ASSIGN
PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:264  
READ_FROM_PIG.STATION_
     14323**DCL     14324--REDEF
READ_FROM_PIG.V
     14324**DCL     14320--DCLINIT
READ_FROM_PIG.V.DVBYTE.REREAD#
     14335**DCL     14335--REDEF
READ_FROM_PIG.V.INDX#
     14333**DCL     14333--REDEF
READ_OUTSTANDING
     14364**DCL     14414>>IF      14417<<ASSIGN  14429<<ASSIGN  14465<<ASSIGN
REMEM_VAR
     11195**DCL     11195--REDEF
REM_FCMD
     11195**DCL     11196--REDEF
STR$
     14363**DCL     14365--IMP-PTR 14520<<ASSIGN  14521>>ASSIGN  14521>>ASSIGN  14522>>ASSIGN
SUPER_TO_PIG
     14056**DCL         7--PROC    14423--ASSIGN  14424--ASSIGN
SUPER_TO_PIG.ATTR
     14078**DCL     14424--ASSIGN
SUPER_TO_PIG.ATTR.COUNT
     14079**DCL     14424>>ASSIGN
SUPER_TO_PIG.PROJECT
     14072**DCL     14075--REDEF
SUPER_TO_PIG.SUPER
     14068**DCL     14071--REDEF
SUPER_TO_PIG.TYPE
     14057**DCL     14495>>DOSELCT 14503<<ASSIGN
TXT$C.CNT
     14366**DCL     14367--IMP-SIZ 14521>>ASSIGN  14522>>ASSIGN
TXT$C.TXT
     14367**DCL     14521>>ASSIGN
USERS_KEY.TEXT
     11066**DCL     11067--REDEF   11067--REDEF   11067--REDEF   11068--REDEF
VLP_NAME
     14270**DCL     14166--DCLINIT
PL6.E3A0      #009=ASB$PIG File=ASB$EXT.:E05TSI                                  TUE 07/29/97 09:06 Page:265  
VLP_NAME.L#
     14270**DCL     14438>>ASSIGN  14474>>ASSIGN  14543>>ASSIGN
VLP_NAME.NAME#
     14270**DCL     14437>>CALLBLT 14473>>CALLBLT 14542>>CALLBLT
VLP_SETSTA
     14229**DCL     14166--DCLINIT
WRITE_ERROR
     14436**LABEL   14428--CALLALT
WRITE_REC
     14427**LABEL   14504--GOTO
WRITE_TO_PIG
     14289**DCL     14428<>CALL
WRITE_TO_PIG.BUF_.BOUND
     14289**DCL     14424<<ASSIGN
WRITE_TO_PIG.BUF_.BUF$
     14291**DCL     14423<<ASSIGN
WRITE_TO_PIG.STATION_
     14291**DCL     14291--REDEF
WRITE_TO_PIG.V
     14292**DCL     14289--DCLINIT
WRITE_TO_PIG.V.DVBYTE.VFC#
     14298**DCL     14298--REDEF

PL6.E3A0      #010=ASB$GET_HEX_VAL File=ASB$EXT.:E05TSI                          TUE 07/29/97 09:07 Page:266  
     1083        1        /*T***********************************************************/
     1084        2        /*T*                                                         */
     1085        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1086        4        /*T*                                                         */
     1087        5        /*T***********************************************************/
     1088        6        %EJECT;
PL6.E3A0      #010=ASB$GET_HEX_VAL File=ASB$EXT.:E05TSI                          TUE 07/29/97 09:07 Page:267  
     1089        7        ASB$GET_HEX_VAL: PROC( NUM_HEX, HEX_ARRAY, PTR$, OPTION ) ALTRET;
     1090        8
     1091        9        %INCLUDE AS_ENTRIES_M;
     1092     1059        %INCLUDE CP_6;
     1093     1140        %INCLUDE AS_PERR_C;
     1094     1742        %INCLUDE           AS_SUPER_C  ;
     1095     2177        %INCLUDE           AS_MAC_C    ;
     1096     2257        %INCLUDE           AS_SUBS_C   ;
     1097     3671        %INCLUDE           KL_SUPER_C  ;
     1098     6573        %INCLUDE           XU_MACRO_C  ;
     1099     9679        %INCLUDE           XU_FORMAT_C ;
     1100     9841        %INCLUDE           AS_SUPER_R  ;
     1101    12857
     1102    12858    1   DCL NUM_HEX UBIN WORD ;
     1103    12859    1   DCL HEX_ARRAY  (0:255) UBIN BYTE CALIGNED;
     1104    12860    1   DCL PTR$              PTR;
     1105    12861    1   DCL 1 OPTION,
     1106    12862    1          2 COUNT UBIN BYTE CALIGNED,
     1107    12863    1          2 TEXT  CHAR(31) CALIGNED;
     1108    12864    1   DCL VAL UBIN WORD;
     1109    12865    1   DCL 1 OCTAL REDEF VAL ALIGNED,
     1110    12866    1          2 * UBIN(20) UNAL,
     1111    12867    1          2 VAL(0:1) UBIN(8) UNAL;
     1112    12868    1   DCL SUBS               UBIN;
     1113    12869    1   DCL NUM_FOUND          UBIN;
     1114    12870    1   DCL K                 UBIN;
     1115    12871    1   DCL L                 UBIN;
     1116    12872    1   DCL BLK$ PTR ;
     1117    12873              %PARSE$SYM (  NAME=OUT$SYM ,
     1118    12874                            STCLASS="BASED(BLK$)") ;
     1119    12912              %PARSE$OUT( NAME=P$NODE, STCLASS="BASED(PTR$)",
     1120    12913                          NDTYPE=TYPE, NSUBLKS=SUBNODES) ;
     1121    12958        %ASD$HEX2OCT ;
     1122    12961        %ASH$ERROR;
     1123    12964
     1124    12965
     1125    12966    1   HEX_ARRAY = '0'B;
PL6.E3A0      #010=ASB$GET_HEX_VAL File=ASB$EXT.:E05TSI                          TUE 07/29/97 09:07 Page:268  
     1126    12967    1   NUM_FOUND = 0;
     1127    12968    1   IF PTR$->P$NODE.SUBLK$(0)->P$NODE.CODE = NONE_VAL THEN RETURN;
     1128    12969    1   SUBS = PTR$ -> P$NODE.SUBNODES ;
     1129    12970    2   IF SUBS > NUM_HEX THEN DO;
     1130    12971        /*E*  ERROR:  ASB-E$TOO_MANY_HEX-C
     1131    12972              MESSAGE: Too many hex. values for %U1.
     1132    12973              MESSAGE1: %U1 can have at most %U2 hexadecimal values.
     1133    12974        */
     1134    12975    2      AS_FIELD1 = OPTION;
     1135    12976           %NUMBER( NUM1=NUM_HEX );
             12984    2         CALL ASB$BINCHAR( AS_FIELD1.TEXT, 0, -1, NUM_HEX );
     1136    13006           %SCREAM( ERR#=E$TOO_MANY_HEX, LEVEL=ERROR, MID='B' );
     1137    13021    2      ALTRETURN;
     1138    13022    2      END;
     1139    13023    1   NUM_FOUND = 0;
     1140    13024    2   DO K = 1 TO SUBS;
     1141    13025    2      IF PTR$->P$NODE.SUBLK$(K-1)->P$NODE.CODE = %HEX_VAL THEN
     1142    13026    3      DO;
     1143    13027    3         BLK$ = PTR$ -> P$NODE.SUBLK$(K-1) -> P$NODE.SUBLK$(0) ;
     1144    13028    3         CALL ASD$HEX2OCT( OUT$SYM, VAL )
     1145    13029    4         WHENALTRETURN DO;
     1146    13030        /*E*  ERROR:  ASB-E$ILLEGALHEX-C
     1147    13031           MESSAGE: Illegal HEX character in "%U1"
     1148    13032           MESSAGE1: Hexidecimal characters are 0-9 and A-F
     1149    13033        */
     1150    13034    4            AS_FIELD1.COUNT = OUT$SYM.COUNT;
     1151    13035    4            AS_FIELD1.TEXT = OUT$SYM.TEXT;
     1152    13036                 %SCREAM( ERR#=E$ILLEGALHEX, MID='B', LEVEL=ERROR );
     1153    13051    4            ALTRETURN;
     1154    13052    4            END; /*  Whenaltreturn  */
     1155    13053    3         NUM_FOUND = NUM_FOUND + 1;
     1156    13054    3         HEX_ARRAY (NUM_FOUND) = VAL;
     1157    13055    3         END;
     1158    13056    2      ELSE IF PTR$->P$NODE.SUBLK$(K-1)->P$NODE.CODE = %HSTRING4_VAL
     1159    13057    3         THEN DO;
     1160    13058    3            BLK$ = PTR$ -> P$NODE.SUBLK$(K-1) ;
     1161    13059    3            CALL ASD$HEX2OCT( OUT$SYM, VAL )
PL6.E3A0      #010=ASB$GET_HEX_VAL File=ASB$EXT.:E05TSI                          TUE 07/29/97 09:07 Page:269  
     1162    13060    4            WHENALTRETURN DO;
     1163    13061    4               AS_FIELD1.COUNT = OUT$SYM.COUNT;
     1164    13062    4               AS_FIELD1.TEXT = OUT$SYM.TEXT;
     1165    13063                    %SCREAM( ERR#=E$ILLEGALHEX, MID='B', LEVEL=ERROR );
     1166    13078    4               ALTRETURN;
     1167    13079    4               END; /*  Whenaltreturn  */
     1168    13080    3            NUM_FOUND = NUM_FOUND + 2;
     1169    13081    3            HEX_ARRAY (NUM_FOUND-1) = OCTAL.VAL(0);
     1170    13082    3            HEX_ARRAY (NUM_FOUND) = OCTAL.VAL(1);
     1171    13083    3            END; /*  Else if HSTRING4  */
     1172    13084    2         ELSE IF PTR$->P$NODE.SUBLK$(K-1)->P$NODE.CODE = %STRING_VAL THEN
     1173    13085    3            DO;
     1174    13086    3               BLK$ = PTR$ -> P$NODE.SUBLK$(K-1);
     1175    13087    4               DO L=0 TO OUT$SYM.COUNT-1;
     1176    13088    4                  NUM_FOUND = NUM_FOUND + 1;
     1177    13089    4                  HEX_ARRAY (NUM_FOUND) = ASCBIN (SUBSTR (OUT$SYM.TEXT,L,1));
     1178    13090    4                  END; /*  Do for each character  */
     1179    13091    3               END; /*  Else if  */
     1180    13092    3            ELSE DO;
     1181    13093        /*  Error - the parser accepted something that i am not expecting  */
     1182    13094    3               END;
     1183    13095    2      END;  /*  Do k  */
     1184    13096    1   HEX_ARRAY (0) = NUM_FOUND;
     1185    13097    1   RETURN;
     1186    13098
     1187    13099    1   END ASB$GET_HEX_VAL;
     1188    13100        %EOD;

PL6.E3A0      #010=ASB$GET_HEX_VAL File=ASB$EXT.:E05TSI                          TUE 07/29/97 09:07 Page:270  
--  Include file information  --

   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   AS_PERR_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ASB$GET_HEX_VAL.

   Procedure ASB$GET_HEX_VAL requires 165 words for executable code.
   Procedure ASB$GET_HEX_VAL requires 18 words of local(AUTO) storage.

PL6.E3A0      #010=ASB$GET_HEX_VAL File=ASB$EXT.:E05TSI                          TUE 07/29/97 09:07 Page:271  

 Object Unit name= ASB$GET_HEX_VAL                            File name= ASB$EXT.:E05TOU
 UTS= JUL 29 '97 09:07:17.96 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$LO
    2  RoData even  UTS      2      2  ASB$GET_HEX_VAL
    3   Proc  even  none   165    245  ASB$GET_HEX_VAL
    4  RoData even  none     6      6  ASB$GET_HEX_VAL

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        4  ASB$GET_HEX_VAL

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 XU_OUTPUT_OPTIONS
         yes           Std       4 ASB$BINCHAR
 yes     yes           Std       2 ASD$HEX2OCT
         yes           Std       2 ASH$ERROR
                       nStd      0 X66_AUTO_4
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #010=ASB$GET_HEX_VAL File=ASB$EXT.:E05TSI                          TUE 07/29/97 09:07 Page:272  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    AS_MODE                          r    AS_FE_MODE
     M$LO                                  ERR_CODE                              AS_FIELD1
     REMEM_VAR                             REM_FCMD                              ASA_BRKS_LOC
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #010=ASB$GET_HEX_VAL File=ASB$EXT.:E05TSI                          TUE 07/29/97 09:07 Page:273  


     1083        1        /*T***********************************************************/
     1084        2        /*T*                                                         */
     1085        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1086        4        /*T*                                                         */
     1087        5        /*T***********************************************************/
     1088        6        %EJECT;
PL6.E3A0      #010=ASB$GET_HEX_VAL File=ASB$EXT.:E05TSI                          TUE 07/29/97 09:07 Page:274  
     1089        7        ASB$GET_HEX_VAL: PROC( NUM_HEX, HEX_ARRAY, PTR$, OPTION ) ALTRET;

      7  3 000000   000000 700200 xent  ASB$GET_HEX* TSX0  ! X66_AUTO_4
         3 000001   000022 000004                    ZERO    18,4

     1090        8
     1091        9        %INCLUDE AS_ENTRIES_M;
     1092     1059        %INCLUDE CP_6;
     1093     1140        %INCLUDE AS_PERR_C;
     1094     1742        %INCLUDE           AS_SUPER_C  ;
     1095     2177        %INCLUDE           AS_MAC_C    ;
     1096     2257        %INCLUDE           AS_SUBS_C   ;
     1097     3671        %INCLUDE           KL_SUPER_C  ;
     1098     6573        %INCLUDE           XU_MACRO_C  ;
     1099     9679        %INCLUDE           XU_FORMAT_C ;
     1100     9841        %INCLUDE           AS_SUPER_R  ;
     1101    12857
     1102    12858    1   DCL NUM_HEX UBIN WORD ;
     1103    12859    1   DCL HEX_ARRAY  (0:255) UBIN BYTE CALIGNED;
     1104    12860    1   DCL PTR$              PTR;
     1105    12861    1   DCL 1 OPTION,
     1106    12862    1          2 COUNT UBIN BYTE CALIGNED,
     1107    12863    1          2 TEXT  CHAR(31) CALIGNED;
     1108    12864    1   DCL VAL UBIN WORD;
     1109    12865    1   DCL 1 OCTAL REDEF VAL ALIGNED,
     1110    12866    1          2 * UBIN(20) UNAL,
     1111    12867    1          2 VAL(0:1) UBIN(8) UNAL;
     1112    12868    1   DCL SUBS               UBIN;
     1113    12869    1   DCL NUM_FOUND          UBIN;
     1114    12870    1   DCL K                 UBIN;
     1115    12871    1   DCL L                 UBIN;
     1116    12872    1   DCL BLK$ PTR ;
     1117    12873              %PARSE$SYM (  NAME=OUT$SYM ,
     1118    12874                            STCLASS="BASED(BLK$)") ;
     1119    12912              %PARSE$OUT( NAME=P$NODE, STCLASS="BASED(PTR$)",
     1120    12913                          NDTYPE=TYPE, NSUBLKS=SUBNODES) ;
     1121    12958        %ASD$HEX2OCT ;
PL6.E3A0      #010=ASB$GET_HEX_VAL File=ASB$EXT.:E05TSI                          TUE 07/29/97 09:07 Page:275  
     1122    12961        %ASH$ERROR;
     1123    12964
     1124    12965
     1125    12966    1   HEX_ARRAY = '0'B;

  12966  3 000002   200004 470500                    LDP0    @HEX_ARRAY,,AUTO
         3 000003   000100 100400                    MLR     fill='000'O
         3 000004   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         3 000005   000000 000400                    ADSC9   0,,PR0                   cn=0,n=256

     1126    12967    1   NUM_FOUND = 0;

  12967  3 000006   200011 450100                    STZ     NUM_FOUND,,AUTO

     1127    12968    1   IF PTR$->P$NODE.SUBLK$(0)->P$NODE.CODE = NONE_VAL THEN RETURN;

  12968  3 000007   200005 471500                    LDP1    @PTR$,,AUTO
         3 000010   100000 473500                    LDP3    0,,PR1
         3 000011   300003 474500                    LDP4    3,,PR3
         3 000012   400000 720100                    LXL0    0,,PR4
         3 000013   000007 100003                    CMPX0   7,DU
         3 000014   000016 601000 3                  TNZ     s:12969

  12968  3 000015   000000 702200 xent               TSX2  ! X66_ARET

     1128    12969    1   SUBS = PTR$ -> P$NODE.SUBNODES ;

  12969  3 000016   300001 236100                    LDQ     1,,PR3
         3 000017   000022 772000                    QRL     18
         3 000020   200010 756100                    STQ     SUBS,,AUTO

     1129    12970    2   IF SUBS > NUM_HEX THEN DO;

  12970  3 000021   200003 475500                    LDP5    @NUM_HEX,,AUTO
         3 000022   500000 116100                    CMPQ    0,,PR5
         3 000023   000047 602000 3                  TNC     s:13023
         3 000024   000047 600000 3                  TZE     s:13023
PL6.E3A0      #010=ASB$GET_HEX_VAL File=ASB$EXT.:E05TSI                          TUE 07/29/97 09:07 Page:276  

     1130    12971        /*E*  ERROR:  ASB-E$TOO_MANY_HEX-C
     1131    12972              MESSAGE: Too many hex. values for %U1.
     1132    12973              MESSAGE1: %U1 can have at most %U2 hexadecimal values.
     1133    12974        */
     1134    12975    2      AS_FIELD1 = OPTION;

  12975  3 000025   200006 476500                    LDP6    @OPTION,,AUTO
         3 000026   000000 100500                    MLR     fill='000'O
         3 000027   600000 000040                    ADSC9   0,,PR6                   cn=0,n=32
         3 000030   000000 000051 xsym               ADSC9   AS_FIELD1                cn=0,n=41

     1135    12976           %NUMBER( NUM1=NUM_HEX );
             12984    2         CALL ASB$BINCHAR( AS_FIELD1.TEXT, 0, -1, NUM_HEX );

  12984  3 000031   200003 236100                    LDQ     @NUM_HEX,,AUTO
         3 000032   000000 235000 4                  LDA     0
         3 000033   200020 757100                    STAQ    BLK$+4,,AUTO
         3 000034   000002 237000 4                  LDAQ    2
         3 000035   200016 757100                    STAQ    BLK$+2,,AUTO
         3 000036   200016 630500                    EPPR0   BLK$+2,,AUTO
         3 000037   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 000040   000000 701000 xent               TSX1    ASB$BINCHAR
         3 000041   000000 011000                    NOP     0

     1136    13006           %SCREAM( ERR#=E$TOO_MANY_HEX, LEVEL=ERROR, MID='B' );

  13018  3 000042   000004 630400 4                  EPPR0   4
         3 000043   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000044   000000 701000 xent               TSX1    ASH$ERROR
         3 000045   000000 011000                    NOP     0

     1137    13021    2      ALTRETURN;

  13021  3 000046   000000 702200 xent               TSX2  ! X66_AALT

     1138    13022    2      END;
PL6.E3A0      #010=ASB$GET_HEX_VAL File=ASB$EXT.:E05TSI                          TUE 07/29/97 09:07 Page:277  
     1139    13023    1   NUM_FOUND = 0;

  13023  3 000047   200011 450100                    STZ     NUM_FOUND,,AUTO

     1140    13024    2   DO K = 1 TO SUBS;

  13024  3 000050   000001 235007                    LDA     1,DL
         3 000051   200012 755100                    STA     K,,AUTO
         3 000052   000235 710000 3                  TRA     s:13095+3

     1141    13025    2      IF PTR$->P$NODE.SUBLK$(K-1)->P$NODE.CODE = %HEX_VAL THEN

  13025  3 000053   200005 470500                    LDP0    @PTR$,,AUTO
         3 000054   000000 471500                    LDP1    0,,PR0
         3 000055   200012 720100                    LXL0    K,,AUTO
         3 000056   100002 473510                    LDP3    2,X0,PR1
         3 000057   300000 721100                    LXL1    0,,PR3
         3 000060   000026 101003                    CMPX1   22,DU
         3 000061   000122 601000 3                  TNZ     s:13056

     1142    13026    3      DO;

     1143    13027    3         BLK$ = PTR$ -> P$NODE.SUBLK$(K-1) -> P$NODE.SUBLK$(0) ;

  13027  3 000062   300003 236100                    LDQ     3,,PR3
         3 000063   200014 756100                    STQ     BLK$,,AUTO

     1144    13028    3         CALL ASD$HEX2OCT( OUT$SYM, VAL )

  13028  3 000064   200007 634500                    EPPR4   VAL,,AUTO
         3 000065   200017 454500                    STP4    BLK$+3,,AUTO
         3 000066   200016 756100                    STQ     BLK$+2,,AUTO
         3 000067   200016 630500                    EPPR0   BLK$+2,,AUTO
         3 000070   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000071   000000 701000 xent               TSX1    ASD$HEX2OCT
         3 000072   000074 702000 3                  TSX2    s:13034
         3 000073   000112 710000 3                  TRA     s:13053
PL6.E3A0      #010=ASB$GET_HEX_VAL File=ASB$EXT.:E05TSI                          TUE 07/29/97 09:07 Page:278  

     1145    13029    4         WHENALTRETURN DO;

     1146    13030        /*E*  ERROR:  ASB-E$ILLEGALHEX-C
     1147    13031           MESSAGE: Illegal HEX character in "%U1"
     1148    13032           MESSAGE1: Hexidecimal characters are 0-9 and A-F
     1149    13033        */
     1150    13034    4            AS_FIELD1.COUNT = OUT$SYM.COUNT;

  13034  3 000074   200014 470500                    LDP0    BLK$,,AUTO
         3 000075   000004 236100                    LDQ     4,,PR0
         3 000076   000000 552040 xsym               STBQ    AS_FIELD1,'40'O

     1151    13035    4            AS_FIELD1.TEXT = OUT$SYM.TEXT;

  13035  3 000077   000004 236100                    LDQ     4,,PR0
         3 000100   000033 772000                    QRL     27
         3 000101   000000 620006                    EAX0    0,QL
         3 000102   040000 100540                    MLR     fill='040'O
         3 000103   000004 200010                    ADSC9   4,,PR0                   cn=1,n=*X0
         3 000104   000000 200050 xsym               ADSC9   AS_FIELD1                cn=1,n=40

     1152    13036                 %SCREAM( ERR#=E$ILLEGALHEX, MID='B', LEVEL=ERROR );

  13048  3 000105   000005 630400 4                  EPPR0   5
         3 000106   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000107   000000 701000 xent               TSX1    ASH$ERROR
         3 000110   000000 011000                    NOP     0

     1153    13051    4            ALTRETURN;

  13051  3 000111   000000 702200 xent               TSX2  ! X66_AALT

     1154    13052    4            END; /*  Whenaltreturn  */
     1155    13053    3         NUM_FOUND = NUM_FOUND + 1;

  13053  3 000112   200011 235100                    LDA     NUM_FOUND,,AUTO
PL6.E3A0      #010=ASB$GET_HEX_VAL File=ASB$EXT.:E05TSI                          TUE 07/29/97 09:07 Page:279  
         3 000113   000001 035007                    ADLA    1,DL
         3 000114   200011 755100                    STA     NUM_FOUND,,AUTO

     1156    13054    3         HEX_ARRAY (NUM_FOUND) = VAL;

  13054  3 000115   200004 470500                    LDP0    @HEX_ARRAY,,AUTO
         3 000116   000105 101500                    MRL     fill='000'O
         3 000117   200007 000004                    ADSC9   VAL,,AUTO                cn=0,n=4
         3 000120   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1

     1157    13055    3         END;

  13055  3 000121   000232 710000 3                  TRA     s:13095

     1158    13056    2      ELSE IF PTR$->P$NODE.SUBLK$(K-1)->P$NODE.CODE = %HSTRING4_VAL

  13056  3 000122   001002 101003                    CMPX1   514,DU
         3 000123   000171 601000 3                  TNZ     s:13084

     1159    13057    3         THEN DO;

     1160    13058    3            BLK$ = PTR$ -> P$NODE.SUBLK$(K-1) ;

  13058  3 000124   100002 236110                    LDQ     2,X0,PR1
         3 000125   200014 756100                    STQ     BLK$,,AUTO

     1161    13059    3            CALL ASD$HEX2OCT( OUT$SYM, VAL )

  13059  3 000126   200007 634500                    EPPR4   VAL,,AUTO
         3 000127   200017 454500                    STP4    BLK$+3,,AUTO
         3 000130   200016 756100                    STQ     BLK$+2,,AUTO
         3 000131   200016 630500                    EPPR0   BLK$+2,,AUTO
         3 000132   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000133   000000 701000 xent               TSX1    ASD$HEX2OCT
         3 000134   000136 702000 3                  TSX2    s:13061
         3 000135   000154 710000 3                  TRA     s:13080

PL6.E3A0      #010=ASB$GET_HEX_VAL File=ASB$EXT.:E05TSI                          TUE 07/29/97 09:07 Page:280  
     1162    13060    4            WHENALTRETURN DO;

     1163    13061    4               AS_FIELD1.COUNT = OUT$SYM.COUNT;

  13061  3 000136   200014 470500                    LDP0    BLK$,,AUTO
         3 000137   000004 236100                    LDQ     4,,PR0
         3 000140   000000 552040 xsym               STBQ    AS_FIELD1,'40'O

     1164    13062    4               AS_FIELD1.TEXT = OUT$SYM.TEXT;

  13062  3 000141   000004 236100                    LDQ     4,,PR0
         3 000142   000033 772000                    QRL     27
         3 000143   000000 620006                    EAX0    0,QL
         3 000144   040000 100540                    MLR     fill='040'O
         3 000145   000004 200010                    ADSC9   4,,PR0                   cn=1,n=*X0
         3 000146   000000 200050 xsym               ADSC9   AS_FIELD1                cn=1,n=40

     1165    13063                    %SCREAM( ERR#=E$ILLEGALHEX, MID='B', LEVEL=ERROR );

  13075  3 000147   000005 630400 4                  EPPR0   5
         3 000150   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000151   000000 701000 xent               TSX1    ASH$ERROR
         3 000152   000000 011000                    NOP     0

     1166    13078    4               ALTRETURN;

  13078  3 000153   000000 702200 xent               TSX2  ! X66_AALT

     1167    13079    4               END; /*  Whenaltreturn  */
     1168    13080    3            NUM_FOUND = NUM_FOUND + 2;

  13080  3 000154   200011 235100                    LDA     NUM_FOUND,,AUTO
         3 000155   000002 035007                    ADLA    2,DL
         3 000156   200011 755100                    STA     NUM_FOUND,,AUTO

     1169    13081    3            HEX_ARRAY (NUM_FOUND-1) = OCTAL.VAL(0);

PL6.E3A0      #010=ASB$GET_HEX_VAL File=ASB$EXT.:E05TSI                          TUE 07/29/97 09:07 Page:281  
  13081  3 000157   200011 236100                    LDQ     NUM_FOUND,,AUTO
         3 000160   000011 402007                    MPY     9,DL
         3 000161   200004 470500                    LDP0    @HEX_ARRAY,,AUTO
         3 000162   003106 061500                    CSR     bolr='003'O
         3 000163   200007 420010                    BDSC    VAL,,AUTO                by=2,bit=2,n=8
         3 000164   077777 600011                    BDSC    -1,Q,PR0                 by=3,bit=0,n=9

     1170    13082    3            HEX_ARRAY (NUM_FOUND) = OCTAL.VAL(1);

  13082  3 000165   003106 061500                    CSR     bolr='003'O
         3 000166   200007 610010                    BDSC    VAL,,AUTO                by=3,bit=1,n=8
         3 000167   000000 000011                    BDSC    0,Q,PR0                  by=0,bit=0,n=9

     1171    13083    3            END; /*  Else if HSTRING4  */

  13083  3 000170   000232 710000 3                  TRA     s:13095

     1172    13084    2         ELSE IF PTR$->P$NODE.SUBLK$(K-1)->P$NODE.CODE = %STRING_VAL THEN

  13084  3 000171   000030 101003                    CMPX1   24,DU
         3 000172   000232 601000 3                  TNZ     s:13095

     1173    13085    3            DO;

     1174    13086    3               BLK$ = PTR$ -> P$NODE.SUBLK$(K-1);

  13086  3 000173   100002 236110                    LDQ     2,X0,PR1
         3 000174   200014 756100                    STQ     BLK$,,AUTO

     1175    13087    4               DO L=0 TO OUT$SYM.COUNT-1;

  13087  3 000175   200013 450100                    STZ     L,,AUTO
         3 000176   000223 710000 3                  TRA     s:13090+3

     1176    13088    4                  NUM_FOUND = NUM_FOUND + 1;

  13088  3 000177   200011 235100                    LDA     NUM_FOUND,,AUTO
PL6.E3A0      #010=ASB$GET_HEX_VAL File=ASB$EXT.:E05TSI                          TUE 07/29/97 09:07 Page:282  
         3 000200   000001 035007                    ADLA    1,DL
         3 000201   200011 755100                    STA     NUM_FOUND,,AUTO

     1177    13089    4                  HEX_ARRAY (NUM_FOUND) = ASCBIN (SUBSTR (OUT$SYM.TEXT,L,1));

  13089  3 000202   200014 470500                    LDP0    BLK$,,AUTO
         3 000203   000004 236100                    LDQ     4,,PR0
         3 000204   000033 772000                    QRL     27
         3 000205   200013 235100                    LDA     L,,AUTO
         3 000206   000100 101505                    MRL     fill='000'O
         3 000207   000004 200001                    ADSC9   4,A,PR0                  cn=1,n=1
         3 000210   200016 000004                    ADSC9   BLK$+2,,AUTO             cn=0,n=4
         3 000211   200016 236100                    LDQ     BLK$+2,,AUTO
         3 000212   200017 756100                    STQ     BLK$+3,,AUTO
         3 000213   200004 471500                    LDP1    @HEX_ARRAY,,AUTO
         3 000214   200011 235100                    LDA     NUM_FOUND,,AUTO
         3 000215   000105 101500                    MRL     fill='000'O
         3 000216   200017 000004                    ADSC9   BLK$+3,,AUTO             cn=0,n=4
         3 000217   100000 000001                    ADSC9   0,A,PR1                  cn=0,n=1

     1178    13090    4                  END; /*  Do for each character  */

  13090  3 000220   200013 236100                    LDQ     L,,AUTO
         3 000221   000001 036007                    ADLQ    1,DL
         3 000222   200013 756100                    STQ     L,,AUTO
         3 000223   200014 470500                    LDP0    BLK$,,AUTO
         3 000224   000004 236100                    LDQ     4,,PR0
         3 000225   000033 772000                    QRL     27
         3 000226   200013 116100                    CMPQ    L,,AUTO
         3 000227   000231 600000 3                  TZE     s:13091
         3 000230   000177 603000 3                  TRC     s:13088

     1179    13091    3               END; /*  Else if  */

  13091  3 000231   000232 710000 3                  TRA     s:13095

     1180    13092    3            ELSE DO;
PL6.E3A0      #010=ASB$GET_HEX_VAL File=ASB$EXT.:E05TSI                          TUE 07/29/97 09:07 Page:283  

     1181    13093        /*  Error - the parser accepted something that i am not expecting  */
     1182    13094    3               END;

     1183    13095    2      END;  /*  Do k  */

  13095  3 000232   200012 235100                    LDA     K,,AUTO
         3 000233   000001 035007                    ADLA    1,DL
         3 000234   200012 755100                    STA     K,,AUTO
         3 000235   200010 236100                    LDQ     SUBS,,AUTO
         3 000236   200012 116100                    CMPQ    K,,AUTO
         3 000237   000053 603000 3                  TRC     s:13025

     1184    13096    1   HEX_ARRAY (0) = NUM_FOUND;

  13096  3 000240   200004 470500                    LDP0    @HEX_ARRAY,,AUTO
         3 000241   000100 101500                    MRL     fill='000'O
         3 000242   200011 000004                    ADSC9   NUM_FOUND,,AUTO          cn=0,n=4
         3 000243   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1

     1185    13097    1   RETURN;

  13097  3 000244   000000 702200 xent               TSX2  ! X66_ARET
     1186    13098
     1187    13099    1   END ASB$GET_HEX_VAL;
     1188    13100        %EOD;

PL6.E3A0      #010=ASB$GET_HEX_VAL File=ASB$EXT.:E05TSI                          TUE 07/29/97 09:07 Page:284  
--  Include file information  --

   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   AS_PERR_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ASB$GET_HEX_VAL.
PL6.E3A0      #010=ASB$GET_HEX_VAL File=ASB$EXT.:E05TSI                          TUE 07/29/97 09:07 Page:285  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @HEX_ARRAY                 3-0-0/w PTR         r     1 @NUM_HEX
     6-0-0/w PTR         r     1 @OPTION                    5-0-0/w PTR         r     1 @PTR$
    14-0-0/w PTR         r     1 BLK$
    *0-0-0/c UBIN(9)     r     1 HEX_ARRAY(0:255)
    12-0-0/w UBIN        r     1 K                         13-0-0/w UBIN        r     1 L
    11-0-0/w UBIN        r     1 NUM_FOUND                 *0-0-0/w UBIN        r     1 NUM_HEX
     7-0-0/w STRC        r     1 OCTAL                     *0-0-0/c STRC(288)   r     1 OPTION
    *0-0-0/w PTR         r     1 PTR$                      10-0-0/w UBIN        r     1 SUBS
     7-0-0/w UBIN        r     1 VAL

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(369)   r     1 AS_FIELD1

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w ASTR(153)   r     1 OUT$SYM                    0-0-0/w STRC(144)   r     1 P$NODE


   Procedure ASB$GET_HEX_VAL requires 165 words for executable code.
   Procedure ASB$GET_HEX_VAL requires 18 words of local(AUTO) storage.
PL6.E3A0      #010=ASB$GET_HEX_VAL File=ASB$EXT.:E05TSI                          TUE 07/29/97 09:07 Page:286  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #010=ASB$GET_HEX_VAL File=ASB$EXT.:E05TSI                          TUE 07/29/97 09:07 Page:287  
          MINI XREF LISTING

ASA_BRKS_LOC
     10005**DCL     10005--REDEF
ASB$BINCHAR
      2255**DCL-ENT 12984--CALL
ASD$HEX2OCT
     12959**DCL-ENT 13028--CALL    13059--CALL
ASH$ERROR
     12962**DCL-ENT 13018--CALL    13048--CALL    13075--CALL
AS_DEFAULT.BANNER_PERM
     10698**DCL     10699--REDEF
AS_DEFAULT.BUDGET.MACCT
     10603**DCL     10607--REDEF
AS_DEFAULT.BUDGET.MAX_PROJECTS
     10616**DCL     10619--REDEF
AS_DEFAULT.BUDGET.PACCUM
     10599**DCL     10601--REDEF
AS_DEFAULT.BUDGET.PMAXC
     10594**DCL     10596--REDEF
AS_DEFAULT.SETUP_CHRA.TXT
     10714**DCL     10715--REDEF   10716--REDEF
AS_DEFAULT_DREC.PASSWORD
     11968**DCL     11972--REDEF
AS_DEFAULT_DREC.RENAME
     11991**DCL     11992--REDEF
AS_DFLT.BANNER_PERM
     10520**DCL     10521--REDEF
AS_DFLT.BUDGET.MACCT
     10425**DCL     10429--REDEF
AS_DFLT.BUDGET.MAX_PROJECTS
     10438**DCL     10441--REDEF
AS_DFLT.BUDGET.PACCUM
     10421**DCL     10423--REDEF
PL6.E3A0      #010=ASB$GET_HEX_VAL File=ASB$EXT.:E05TSI                          TUE 07/29/97 09:07 Page:288  
AS_DFLT.BUDGET.PMAXC
     10416**DCL     10418--REDEF
AS_DFLT.SETUP_CHRA.TXT
     10536**DCL     10537--REDEF   10538--REDEF
AS_FE_MODE
      9871**DCL      9872--REDEF
AS_FIELD1
     10001**DCL     12975<<ASSIGN
AS_FIELD1.COUNT
     10002**DCL     13034<<ASSIGN  13061<<ASSIGN
AS_FIELD1.TEXT
     10002**DCL     12984<>CALL    13035<<ASSIGN  13062<<ASSIGN
AS_MODE
      9868**DCL      9870--REDEF
AS_MOD_USER.ACCESS
     12733**DCL     12734--REDEF
AS_MOD_USER.BANNER
     12720**DCL     12721--REDEF
AS_MOD_USER.BANNER_PERM
     12722**DCL     12723--REDEF
AS_MOD_USER.BILL
     12728**DCL     12729--REDEF
AS_MOD_USER.CPROC
     12724**DCL     12725--REDEF
AS_MOD_USER.FEBILL
     12804**DCL     12805--REDEF
AS_MOD_USER.FECXTMEM
     12821**DCL     12822--REDEF
AS_MOD_USER.FEMINTS
     12806**DCL     12807--REDEF
AS_MOD_USER.FEMMEM
     12817**DCL     12818--REDEF
AS_MOD_USER.FEMTIME
     12815**DCL     12816--REDEF
AS_MOD_USER.FEPPRIV
     12812**DCL     12814--REDEF
PL6.E3A0      #010=ASB$GET_HEX_VAL File=ASB$EXT.:E05TSI                          TUE 07/29/97 09:07 Page:289  
AS_MOD_USER.FEPRIV
     12809**DCL     12811--REDEF
AS_MOD_USER.FORCE_BIT
     12718**DCL     12719--REDEF
AS_MOD_USER.KEY
     12800**DCL     12802--REDEF
AS_MOD_USER.LASTCPROC
     12726**DCL     12727--REDEF
AS_MOD_USER.LIMITS.DO_
     12774**DCL     12775--REDEF
AS_MOD_USER.LIMITS.FPOOLS
     12790**DCL     12791--REDEF
AS_MOD_USER.LIMITS.LO
     12770**DCL     12771--REDEF
AS_MOD_USER.LIMITS.MEM
     12766**DCL     12767--REDEF
AS_MOD_USER.LIMITS.MPRIO
     12794**DCL     12795--REDEF
AS_MOD_USER.LIMITS.PDIS
     12782**DCL     12783--REDEF
AS_MOD_USER.LIMITS.PO
     12778**DCL     12779--REDEF
AS_MOD_USER.LIMITS.TDIS
     12786**DCL     12787--REDEF
AS_MOD_USER.LIMITS.TIME
     12762**DCL     12763--REDEF
AS_MOD_USER.MAXENQ
     12743**DCL     12744--REDEF
AS_MOD_USER.PERM_BIT
     12716**DCL     12717--REDEF
AS_MOD_USER.PPRIV
     12738**DCL     12740--REDEF
AS_MOD_USER.PRIOB
     12745**DCL     12746--REDEF
AS_MOD_USER.PRIV
     12735**DCL     12737--REDEF
PL6.E3A0      #010=ASB$GET_HEX_VAL File=ASB$EXT.:E05TSI                          TUE 07/29/97 09:07 Page:290  
AS_MOD_USER.QUAN
     12741**DCL     12742--REDEF
AS_MOD_USER.SETUP
     12714**DCL     12715--REDEF
AS_PROJECT.BANNER_PERM
     11054**DCL     11055--REDEF
AS_PROJECT.BUDGET.MACCT
     10959**DCL     10963--REDEF
AS_PROJECT.BUDGET.MAX_PROJECTS
     10972**DCL     10975--REDEF
AS_PROJECT.BUDGET.PACCUM
     10955**DCL     10957--REDEF
AS_PROJECT.BUDGET.PMAXC
     10950**DCL     10952--REDEF
AS_PROJECT.SETUP_CHRA.TXT
     11070**DCL     11071--REDEF   11072--REDEF
AS_PROJECT_DFLT.BANNER_PERM
     11232**DCL     11233--REDEF
AS_PROJECT_DFLT.BUDGET.MACCT
     11137**DCL     11141--REDEF
AS_PROJECT_DFLT.BUDGET.MAX_PROJECTS
     11150**DCL     11153--REDEF
AS_PROJECT_DFLT.BUDGET.PACCUM
     11133**DCL     11135--REDEF
AS_PROJECT_DFLT.BUDGET.PMAXC
     11128**DCL     11130--REDEF
AS_PROJECT_DFLT.SETUP_CHRA.TXT
     11248**DCL     11249--REDEF   11250--REDEF
AS_PROJECT_DFLT_DREC.PASSWORD
     12454**DCL     12458--REDEF
AS_PROJECT_DFLT_DREC.RENAME
     12477**DCL     12478--REDEF
AS_PROJECT_DREC.PASSWORD
     12292**DCL     12296--REDEF
AS_PROJECT_DREC.RENAME
     12315**DCL     12316--REDEF
PL6.E3A0      #010=ASB$GET_HEX_VAL File=ASB$EXT.:E05TSI                          TUE 07/29/97 09:07 Page:291  
AS_PROJ_ADMIN.BANNER_PERM
     10876**DCL     10877--REDEF
AS_PROJ_ADMIN.BUDGET.MACCT
     10781**DCL     10785--REDEF
AS_PROJ_ADMIN.BUDGET.MAX_PROJECTS
     10794**DCL     10797--REDEF
AS_PROJ_ADMIN.BUDGET.PACCUM
     10777**DCL     10779--REDEF
AS_PROJ_ADMIN.BUDGET.PMAXC
     10772**DCL     10774--REDEF
AS_PROJ_ADMIN.SETUP_CHRA.TXT
     10892**DCL     10893--REDEF   10894--REDEF
AS_PROJ_ADMIN_DREC.PASSWORD
     12130**DCL     12134--REDEF
AS_PROJ_ADMIN_DREC.RENAME
     12153**DCL     12154--REDEF
AS_USERS.BANNER_PERM
     10342**DCL     10343--REDEF
AS_USERS.BUDGET.MACCT
     10247**DCL     10251--REDEF
AS_USERS.BUDGET.MAX_PROJECTS
     10260**DCL     10263--REDEF
AS_USERS.BUDGET.PACCUM
     10243**DCL     10245--REDEF
AS_USERS.BUDGET.PMAXC
     10238**DCL     10240--REDEF
AS_USERS.SETUP_CHRA.TXT
     10358**DCL     10359--REDEF   10360--REDEF
AS_USERS_CONSTANT.BANNER_PERM
     11410**DCL     11411--REDEF
AS_USERS_CONSTANT.BUDGET.MACCT
     11315**DCL     11319--REDEF
AS_USERS_CONSTANT.BUDGET.MAX_PROJECTS
     11328**DCL     11331--REDEF
AS_USERS_CONSTANT.BUDGET.PACCUM
     11311**DCL     11313--REDEF
PL6.E3A0      #010=ASB$GET_HEX_VAL File=ASB$EXT.:E05TSI                          TUE 07/29/97 09:07 Page:292  
AS_USERS_CONSTANT.BUDGET.PMAXC
     11306**DCL     11308--REDEF
AS_USERS_CONSTANT.SETUP_CHRA.TXT
     11426**DCL     11427--REDEF   11428--REDEF
BLK$
     12872**DCL     12881--IMP-PTR 13027<<ASSIGN  13028>>CALL    13028>>CALL    13034>>ASSIGN  13035>>ASSIGN
     13035>>ASSIGN  13058<<ASSIGN  13059>>CALL    13059>>CALL    13061>>ASSIGN  13062>>ASSIGN  13062>>ASSIGN
     13086<<ASSIGN  13087>>DOINDEX 13089>>ASSIGN  13089>>ASSIGN
ERR_CODE
     10000**DCL     10001--REDEF
HEX_ARRAY
     12859**DCL         7--PROC    12966<<ASSIGN  13054<<ASSIGN  13081<<ASSIGN  13082<<ASSIGN  13089<<ASSIGN
     13096<<ASSIGN
K
     12870**DCL     13024<<DOINDEX 13025>>IF      13027>>ASSIGN  13056>>IF      13058>>ASSIGN  13084>>IF
     13086>>ASSIGN
KL_DEFAULT.PASSWORD
     12616**DCL     12620--REDEF
KL_DEFAULT.RENAME
     12639**DCL     12640--REDEF
KL_DFLT.PASSWORD
     11806**DCL     11810--REDEF
KL_DFLT.RENAME
     11829**DCL     11830--REDEF
KL_DREC.PASSWORD
     11644**DCL     11648--REDEF
KL_DREC.RENAME
     11667**DCL     11668--REDEF
KL_DREC_CNT.PASSWORD
     11531**DCL     11535--REDEF
KL_DREC_CNT.RENAME
     11554**DCL     11555--REDEF
L
     12871**DCL     13087<<DOINDEX 13089>>ASSIGN
NUM_FOUND
     12869**DCL     12967<<ASSIGN  13023<<ASSIGN  13053<<ASSIGN  13053>>ASSIGN  13054>>ASSIGN  13080<<ASSIGN
PL6.E3A0      #010=ASB$GET_HEX_VAL File=ASB$EXT.:E05TSI                          TUE 07/29/97 09:07 Page:293  
     13080>>ASSIGN  13081>>ASSIGN  13082>>ASSIGN  13088<<ASSIGN  13088>>ASSIGN  13089>>ASSIGN  13096>>ASSIGN
NUM_HEX
     12858**DCL         7--PROC    12970>>IF      12984<>CALL
OCTAL.VAL
     12867**DCL     13081>>ASSIGN  13082>>ASSIGN
OPTION
     12861**DCL         7--PROC    12975>>ASSIGN
OUT$SYM
     12881**DCL     13028<>CALL    13059<>CALL
OUT$SYM.COUNT
     12904**DCL     12907--IMP-SIZ 13028>>CALL    13034>>ASSIGN  13035>>ASSIGN  13059>>CALL    13061>>ASSIGN
     13062>>ASSIGN  13087>>DOINDEX 13089>>ASSIGN
OUT$SYM.TEXT
     12907**DCL     13035>>ASSIGN  13062>>ASSIGN  13089>>ASSIGN
P$NODE.CODE
     12927**DCL     12968>>IF      13025>>IF      13056>>IF      13084>>IF
P$NODE.SUBLK$
     12952**DCL     12968>>IF      13025>>IF      13027>>ASSIGN  13027>>ASSIGN  13056>>IF      13058>>ASSIGN
     13084>>IF      13086>>ASSIGN
P$NODE.SUBNODES
     12931**DCL     12969>>ASSIGN
PROJ_KEY.TEXT
      9878**DCL      9878--REDEF
PROJ_KEY.TXT.PROJECT
      9878**DCL      9878--REDEF
PTR$
     12860**DCL         7--PROC    12919--IMP-PTR 12968>>IF      12969>>ASSIGN  13025>>IF      13027>>ASSIGN
     13056>>IF      13058>>ASSIGN  13084>>IF      13086>>ASSIGN
REMEM_VAR
     10004**DCL     10004--REDEF
REM_FCMD
     10004**DCL     10005--REDEF
SUBS
     12868**DCL     12969<<ASSIGN  12970>>IF      13024>>DOINDEX
USERS_KEY.TEXT
      9875**DCL      9876--REDEF    9876--REDEF    9876--REDEF    9877--REDEF
PL6.E3A0      #010=ASB$GET_HEX_VAL File=ASB$EXT.:E05TSI                          TUE 07/29/97 09:07 Page:294  
VAL
     12864**DCL     12865--REDEF   13028<>CALL    13054>>ASSIGN  13059<>CALL

PL6.E3A0      #011=ASB$SET_PROMPT File=ASB$EXT.:E05TSI                           TUE 07/29/97 09:08 Page:295  
     1189        1        /*T***********************************************************/
     1190        2        /*T*                                                         */
     1191        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1192        4        /*T*                                                         */
     1193        5        /*T***********************************************************/
     1194        6        %EJECT;
PL6.E3A0      #011=ASB$SET_PROMPT File=ASB$EXT.:E05TSI                           TUE 07/29/97 09:08 Page:296  
     1195        7        /*D*  NAME:           ASB$SET_PROMPT
     1196        8              PURPOSE:        Sets the prompt requested, if not the current prompt
     1197        9              CALL:           CALL ASB$SET_PROMPT ( PROMPT_CODE );
     1198       10              INPUT:          PROMPT_CODE  -  sub code for the requested prompt.
     1199       11              OUTPUT:         NONE.
     1200       12              INTERFACE:      M$PROMPT    - sets up the prompt.
     1201       13                              ASH$ERROR   - reports errors
     1202       14              DESCRIPTION:    M$PROMPT is called if the requested prompt is not
     1203       15                              the current prompt.  If M$PROMPT altrets, then
     1204       16                              ASH$ERROR is called to report the error and the
     1205       17                              altreturn is taken.
     1206       18        */
     1207       19        ASB$SET_PROMPT: PROC  ( PROMPT_CODE, PROMPT_TEXT, PROMPT_LEN ) ALTRET;
     1208       20
     1209       21        %INCLUDE CP_6;
     1210      102        %INCLUDE CP_6_SUBS;
     1211      642        %INCLUDE AS_ENTRIES_M;
     1212     1692        %INCLUDE           AS_SUPER_C  ;
     1213     2127        %INCLUDE           AS_MAC_C    ;
     1214     2207        %INCLUDE           AS_SUBS_C   ;
     1215     3621        %INCLUDE           KL_SUPER_C  ;
     1216     6523        %INCLUDE           XU_MACRO_C  ;
     1217     9629        %INCLUDE           XU_FORMAT_C ;
     1218     9791        %INCLUDE           AS_SUPER_R  ;
     1219    12807
     1220    12808        %ASH$ERROR;
     1221    12811
     1222    12812        %B$TCB;
     1223    12815        %B$ALT;
     1224    12823
     1225    12824    1   DCL B$TCB$   PTR   SYMREF;
     1226    12825
     1227    12826    1   DCL PROMPT_CODE UBIN;
     1228    12827    1   DCL PROMPT_TEXT CHAR(31);
     1229    12828    1   DCL PROMPT_LEN  UBIN;
     1230    12829
     1231    12830        %FPT_PROMPT ( FPTN = CONSTANT_PROMPT ,
PL6.E3A0      #011=ASB$SET_PROMPT File=ASB$EXT.:E05TSI                           TUE 07/29/97 09:08 Page:297  
     1232    12831                      DCB = M$UC ,
     1233    12832                      TRANS = NO ,
     1234    12833                      VFC = NO ,
     1235    12834                      STCLASS = CONSTANT ) ;
     1236    12862
     1237    12863        %FPT_PROMPT ( FPTN = AUTO_PROMPT ,
     1238    12864                      STCLASS = AUTO ) ;
     1239    12892
     1240    12893    1   DCL CMD_PROMPT CHAR(4) CONSTANT INIT('CMD*') ;
     1241    12894    1   DCL OPT_PROMPT CHAR(4) CONSTANT INIT('OPT*') ;
     1242    12895    1   DCL SUB_PROMPT CHAR(4) CONSTANT INIT('SUB*') ;
     1243    12896    1   DCL TXT_PROMPT CHAR(4) CONSTANT INIT('TXT*') ;
     1244    12897    1   DCL PROJ_PROMPT CHAR(5) CONSTANT INIT('PROJ*');
     1245    12898    1   DCL BREAK_PROMPT CHAR(22) CONSTANT INIT('Enter ''C'' to continue*') ;
     1246    12899    1   DCL PACK_PROMPT CHAR(8) CONSTANT INIT('*PACKSET') ;
     1247    12900
     1248    12901    1   DCL CMD_SET  BIT(1) STATIC INIT ('0'B);
     1249    12902    1   DCL OPT_SET  BIT(1) STATIC INIT ('0'B);
     1250    12903    1   DCL SUB_SET  BIT(1) STATIC INIT ('0'B);
     1251    12904    1   DCL TXT_SET  BIT(1) STATIC INIT ('0'B);
     1252    12905    1   DCL PROJ_SET  BIT(1) STATIC INIT ('0'B);
     1253    12906    1   DCL BREAK_SET  BIT(1) STATIC INIT ('0'B);
     1254    12907    1   DCL GENERAL_SET  BIT(1) STATIC INIT ('0'B);
     1255    12908
     1256    12909        /*  Begin procedure ASB$SET_PROMPT  */
     1257    12910
     1258    12911    1   AUTO_PROMPT = CONSTANT_PROMPT;
     1259    12912    1   AUTO_PROMPT.V_ = VECTOR ( AUTO_PROMPT.V );
     1260    12913
     1261    12914    2   DO SELECT ( PROMPT_CODE );
     1262    12915
     1263    12916    2      SELECT ( %PROMPT_CMD );
     1264    12917
     1265    12918    2      IF CMD_SET THEN RETURN;
     1266    12919    2      AUTO_PROMPT.PROMPT_ = VECTOR ( CMD_PROMPT );
     1267    12920    2      PROMPT_CHAR = CMD_PROMPT ;
     1268    12921    2      PROMPT_CNT = LENGTHC( CMD_PROMPT ) ;
PL6.E3A0      #011=ASB$SET_PROMPT File=ASB$EXT.:E05TSI                           TUE 07/29/97 09:08 Page:298  
     1269    12922    2      CMD_SET = %YES#;
     1270    12923    2      OPT_SET = %NO#;
     1271    12924    2      SUB_SET = %NO#;
     1272    12925    2      TXT_SET = %NO#;
     1273    12926    2      PROJ_SET = %NO#;
     1274    12927    2      BREAK_SET = %NO#;
     1275    12928    2      GENERAL_SET = %NO#;
     1276    12929
     1277    12930    2      SELECT ( %PROMPT_OPT );
     1278    12931
     1279    12932    2      IF OPT_SET THEN RETURN;
     1280    12933    2      AUTO_PROMPT.PROMPT_ = VECTOR ( OPT_PROMPT );
     1281    12934    2      PROMPT_CHAR = OPT_PROMPT ;
     1282    12935    2      PROMPT_CNT = LENGTHC( OPT_PROMPT ) ;
     1283    12936    2      CMD_SET = %NO#;
     1284    12937    2      OPT_SET = %YES#;
     1285    12938    2      SUB_SET = %NO#;
     1286    12939    2      TXT_SET = %NO#;
     1287    12940    2      PROJ_SET = %NO#;
     1288    12941    2      BREAK_SET = %NO#;
     1289    12942    2      GENERAL_SET = %NO#;
     1290    12943
     1291    12944    2      SELECT ( %PROMPT_SUB );
     1292    12945
     1293    12946    2      IF SUB_SET THEN RETURN;
     1294    12947    2      AUTO_PROMPT.PROMPT_ = VECTOR ( SUB_PROMPT );
     1295    12948    2      PROMPT_CHAR = SUB_PROMPT ;
     1296    12949    2      PROMPT_CNT = LENGTHC( SUB_PROMPT ) ;
     1297    12950    2      CMD_SET = %NO#;
     1298    12951    2      OPT_SET = %NO#;
     1299    12952    2      SUB_SET = %YES#;
     1300    12953    2      TXT_SET = %NO#;
     1301    12954    2      PROJ_SET = %NO#;
     1302    12955    2      BREAK_SET = %NO#;
     1303    12956    2      GENERAL_SET = %NO#;
     1304    12957
     1305    12958    2      SELECT ( %PROMPT_TXT );
PL6.E3A0      #011=ASB$SET_PROMPT File=ASB$EXT.:E05TSI                           TUE 07/29/97 09:08 Page:299  
     1306    12959
     1307    12960    2      IF TXT_SET THEN RETURN;
     1308    12961    2      AUTO_PROMPT.PROMPT_ = VECTOR ( TXT_PROMPT );
     1309    12962    2      PROMPT_CHAR = TXT_PROMPT ;
     1310    12963    2      PROMPT_CNT = LENGTHC( TXT_PROMPT ) ;
     1311    12964    2      CMD_SET = %NO#;
     1312    12965    2      OPT_SET = %NO#;
     1313    12966    2      SUB_SET = %NO#;
     1314    12967    2      TXT_SET = %YES#;
     1315    12968    2      PROJ_SET = %NO#;
     1316    12969    2      BREAK_SET = %NO#;
     1317    12970    2      GENERAL_SET = %NO#;
     1318    12971
     1319    12972    2      SELECT ( %PROMPT_PROJ );
     1320    12973
     1321    12974    2      IF PROJ_SET THEN RETURN;
     1322    12975    2      AUTO_PROMPT.PROMPT_ = VECTOR ( PROJ_PROMPT );
     1323    12976    2      PROMPT_CHAR = PROJ_PROMPT ;
     1324    12977    2      PROMPT_CNT = LENGTHC( PROJ_PROMPT ) ;
     1325    12978    2      CMD_SET = %NO#;
     1326    12979    2      OPT_SET = %NO#;
     1327    12980    2      SUB_SET = %NO#;
     1328    12981    2      TXT_SET = %NO#;
     1329    12982    2      PROJ_SET = %YES#;
     1330    12983    2      BREAK_SET = %NO#;
     1331    12984    2      GENERAL_SET = %NO#;
     1332    12985
     1333    12986    2      SELECT ( %PROMPT_BREAK );
     1334    12987
     1335    12988    2      AUTO_PROMPT.PROMPT_ = VECTOR ( BREAK_PROMPT );
     1336    12989    2      BREAK_SET = %YES#;
     1337    12990
     1338    12991    2      SELECT ( %PROMPT_GENERAL );
     1339    12992
     1340    12993    2      AUTO_PROMPT.PROMPT_ = VECTOR ( SUBSTR(PROMPT_TEXT,0,PROMPT_LEN) );
     1341    12994    2      GENERAL_SET = %YES#;
     1342    12995
PL6.E3A0      #011=ASB$SET_PROMPT File=ASB$EXT.:E05TSI                           TUE 07/29/97 09:08 Page:300  
     1343    12996    2      SELECT ( %PROMPT_RESTORE );
     1344    12997
     1345    12998    2      AUTO_PROMPT.PROMPT_ = VECTOR( SUBSTR(PROMPT_CHAR,0,PROMPT_CNT) );
     1346    12999    2      BREAK_SET = %NO#;
     1347    13000    2      GENERAL_SET = %NO#;
     1348    13001    2      END;   /*  Do case ( PROMPT_CODE )  */
     1349    13002
     1350    13003    1   CALL M$PROMPT( AUTO_PROMPT );
     1351    13004
     1352    13005    1   RETURN;
     1353    13006
     1354    13007    1   END  ASB$SET_PROMPT;
     1355    13008        %EOD;

PL6.E3A0      #011=ASB$SET_PROMPT File=ASB$EXT.:E05TSI                           TUE 07/29/97 09:08 Page:301  
--  Include file information  --

   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ASB$SET_PROMPT.

   Procedure ASB$SET_PROMPT requires 158 words for executable code.
   Procedure ASB$SET_PROMPT requires 18 words of local(AUTO) storage.

PL6.E3A0      #011=ASB$SET_PROMPT File=ASB$EXT.:E05TSI                           TUE 07/29/97 09:08 Page:302  

 Object Unit name= ASB$SET_PROMPT                             File name= ASB$EXT.:E05TOU
 UTS= JUL 29 '97 09:08:14.92 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$LO
    2  RoData even  UTS     24     30  ASB$SET_PROMPT
    3   Data  even  none     7      7  ASB$SET_PROMPT
    4   Proc  even  none   158    236  ASB$SET_PROMPT
    5  RoData even  none    14     16  ASB$SET_PROMPT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes    yes     yes      Std        3  ASB$SET_PROMPT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 XU_OUTPUT_OPTIONS
                       nStd      0 X66_AUTO_3
                       nStd      0 X66_ARET
PL6.E3A0      #011=ASB$SET_PROMPT File=ASB$EXT.:E05TSI                           TUE 07/29/97 09:08 Page:303  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    AS_MODE                          r    AS_FE_MODE
     M$LO                                  ERR_CODE                              REMEM_VAR
     REM_FCMD                              ASA_BRKS_LOC                          PROMPT_CHAR
     PROMPT_CNT

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #011=ASB$SET_PROMPT File=ASB$EXT.:E05TSI                           TUE 07/29/97 09:08 Page:304  


     1189        1        /*T***********************************************************/
     1190        2        /*T*                                                         */
     1191        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1192        4        /*T*                                                         */
     1193        5        /*T***********************************************************/
     1194        6        %EJECT;
PL6.E3A0      #011=ASB$SET_PROMPT File=ASB$EXT.:E05TSI                           TUE 07/29/97 09:08 Page:305  
     1195        7        /*D*  NAME:           ASB$SET_PROMPT
     1196        8              PURPOSE:        Sets the prompt requested, if not the current prompt
     1197        9              CALL:           CALL ASB$SET_PROMPT ( PROMPT_CODE );
     1198       10              INPUT:          PROMPT_CODE  -  sub code for the requested prompt.
     1199       11              OUTPUT:         NONE.
     1200       12              INTERFACE:      M$PROMPT    - sets up the prompt.
     1201       13                              ASH$ERROR   - reports errors
     1202       14              DESCRIPTION:    M$PROMPT is called if the requested prompt is not
     1203       15                              the current prompt.  If M$PROMPT altrets, then
     1204       16                              ASH$ERROR is called to report the error and the
     1205       17                              altreturn is taken.
     1206       18        */
     1207       19        ASB$SET_PROMPT: PROC  ( PROMPT_CODE, PROMPT_TEXT, PROMPT_LEN ) ALTRET;

     19  4 000000   000000 700200 xent  ASB$SET_PRO* TSX0  ! X66_AUTO_3
         4 000001   000022 000003                    ZERO    18,3

     1208       20
     1209       21        %INCLUDE CP_6;
     1210      102        %INCLUDE CP_6_SUBS;
     1211      642        %INCLUDE AS_ENTRIES_M;
     1212     1692        %INCLUDE           AS_SUPER_C  ;
     1213     2127        %INCLUDE           AS_MAC_C    ;
     1214     2207        %INCLUDE           AS_SUBS_C   ;
     1215     3621        %INCLUDE           KL_SUPER_C  ;
     1216     6523        %INCLUDE           XU_MACRO_C  ;
     1217     9629        %INCLUDE           XU_FORMAT_C ;
     1218     9791        %INCLUDE           AS_SUPER_R  ;
     1219    12807
     1220    12808        %ASH$ERROR;
     1221    12811
     1222    12812        %B$TCB;
     1223    12815        %B$ALT;
     1224    12823
     1225    12824    1   DCL B$TCB$   PTR   SYMREF;
     1226    12825
     1227    12826    1   DCL PROMPT_CODE UBIN;
PL6.E3A0      #011=ASB$SET_PROMPT File=ASB$EXT.:E05TSI                           TUE 07/29/97 09:08 Page:306  
     1228    12827    1   DCL PROMPT_TEXT CHAR(31);
     1229    12828    1   DCL PROMPT_LEN  UBIN;
     1230    12829
     1231    12830        %FPT_PROMPT ( FPTN = CONSTANT_PROMPT ,
     1232    12831                      DCB = M$UC ,
     1233    12832                      TRANS = NO ,
     1234    12833                      VFC = NO ,
     1235    12834                      STCLASS = CONSTANT ) ;
     1236    12862
     1237    12863        %FPT_PROMPT ( FPTN = AUTO_PROMPT ,
     1238    12864                      STCLASS = AUTO ) ;
     1239    12892
     1240    12893    1   DCL CMD_PROMPT CHAR(4) CONSTANT INIT('CMD*') ;
     1241    12894    1   DCL OPT_PROMPT CHAR(4) CONSTANT INIT('OPT*') ;
     1242    12895    1   DCL SUB_PROMPT CHAR(4) CONSTANT INIT('SUB*') ;
     1243    12896    1   DCL TXT_PROMPT CHAR(4) CONSTANT INIT('TXT*') ;
     1244    12897    1   DCL PROJ_PROMPT CHAR(5) CONSTANT INIT('PROJ*');
     1245    12898    1   DCL BREAK_PROMPT CHAR(22) CONSTANT INIT('Enter ''C'' to continue*') ;
     1246    12899    1   DCL PACK_PROMPT CHAR(8) CONSTANT INIT('*PACKSET') ;
     1247    12900
     1248    12901    1   DCL CMD_SET  BIT(1) STATIC INIT ('0'B);
     1249    12902    1   DCL OPT_SET  BIT(1) STATIC INIT ('0'B);
     1250    12903    1   DCL SUB_SET  BIT(1) STATIC INIT ('0'B);
     1251    12904    1   DCL TXT_SET  BIT(1) STATIC INIT ('0'B);
     1252    12905    1   DCL PROJ_SET  BIT(1) STATIC INIT ('0'B);
     1253    12906    1   DCL BREAK_SET  BIT(1) STATIC INIT ('0'B);
     1254    12907    1   DCL GENERAL_SET  BIT(1) STATIC INIT ('0'B);
     1255    12908
     1256    12909        /*  Begin procedure ASB$SET_PROMPT  */
     1257    12910
     1258    12911    1   AUTO_PROMPT = CONSTANT_PROMPT;

  12911  4 000002   000100 100400                    MLR     fill='000'O
         4 000003   000000 000050 2                  ADSC9   CONSTANT_PROMPT          cn=0,n=40
         4 000004   200006 000050                    ADSC9   AUTO_PROMPT,,AUTO        cn=0,n=40

     1259    12912    1   AUTO_PROMPT.V_ = VECTOR ( AUTO_PROMPT.V );
PL6.E3A0      #011=ASB$SET_PROMPT File=ASB$EXT.:E05TSI                           TUE 07/29/97 09:08 Page:307  

  12912  4 000005   000000 235000 5                  LDA     0
         4 000006   200020 452500                    STP2    AUTO_PROMPT+10,,AUTO
         4 000007   200020 236100                    LDQ     AUTO_PROMPT+10,,AUTO
         4 000010   000014 036003                    ADLQ    12,DU
         4 000011   200006 757100                    STAQ    AUTO_PROMPT,,AUTO

     1260    12913
     1261    12914    2   DO SELECT ( PROMPT_CODE );

  12914  4 000012   200003 470500                    LDP0    @PROMPT_CODE,,AUTO
         4 000013   000000 236100                    LDQ     0,,PR0
         4 000014   000003 116007                    CMPQ    3,DL
         4 000015   000034 602000 4                  TNC     s:12914+18
         4 000016   000136 600000 4                  TZE     s:12960
         4 000017   000005 116007                    CMPQ    5,DL
         4 000020   000031 602000 4                  TNC     s:12914+15
         4 000021   000204 600000 4                  TZE     s:12988
         4 000022   000007 116007                    CMPQ    7,DL
         4 000023   000026 602000 4                  TNC     s:12914+12
         4 000024   000211 600000 4                  TZE     s:12993
         4 000025   000232 710000 4                  TRA     s:13003
         4 000026   000006 116007                    CMPQ    6,DL
         4 000027   000232 601000 4                  TNZ     s:13003
         4 000030   000223 710000 4                  TRA     s:12998
         4 000031   000004 116007                    CMPQ    4,DL
         4 000032   000232 601000 4                  TNZ     s:13003
         4 000033   000161 710000 4                  TRA     s:12974
         4 000034   000001 116007                    CMPQ    1,DL
         4 000035   000042 602000 4                  TNC     s:12914+24
         4 000036   000070 600000 4                  TZE     s:12932
         4 000037   000002 116007                    CMPQ    2,DL
         4 000040   000232 601000 4                  TNZ     s:13003
         4 000041   000113 710000 4                  TRA     s:12946
         4 000042   000000 116003                    CMPQ    0,DU
         4 000043   000045 600000 4                  TZE     s:12918
         4 000044   000232 710000 4                  TRA     s:13003
PL6.E3A0      #011=ASB$SET_PROMPT File=ASB$EXT.:E05TSI                           TUE 07/29/97 09:08 Page:308  

     1262    12915
     1263    12916    2      SELECT ( %PROMPT_CMD );

     1264    12917
     1265    12918    2      IF CMD_SET THEN RETURN;

  12918  4 000045   000000 234000 3                  SZN     CMD_SET
         4 000046   000050 605000 4                  TPL     s:12919

  12918  4 000047   000000 702200 xent               TSX2  ! X66_ARET

     1266    12919    2      AUTO_PROMPT.PROMPT_ = VECTOR ( CMD_PROMPT );

  12919  4 000050   000002 237000 5                  LDAQ    2
         4 000051   200012 757100                    STAQ    AUTO_PROMPT+4,,AUTO

     1267    12920    2      PROMPT_CHAR = CMD_PROMPT ;

  12920  4 000052   040000 100400                    MLR     fill='040'O
         4 000053   000012 000004 2                  ADSC9   CMD_PROMPT               cn=0,n=4
         4 000054   000000 000037 xsym               ADSC9   PROMPT_CHAR              cn=0,n=31

     1268    12921    2      PROMPT_CNT = LENGTHC( CMD_PROMPT ) ;

  12921  4 000055   000004 235007                    LDA     4,DL
         4 000056   000000 755000 xsym               STA     PROMPT_CNT

     1269    12922    2      CMD_SET = %YES#;

  12922  4 000057   400000 236003                    LDQ     -131072,DU
         4 000060   000000 756000 3                  STQ     CMD_SET

     1270    12923    2      OPT_SET = %NO#;

  12923  4 000061   000001 450000 3                  STZ     OPT_SET

PL6.E3A0      #011=ASB$SET_PROMPT File=ASB$EXT.:E05TSI                           TUE 07/29/97 09:08 Page:309  
     1271    12924    2      SUB_SET = %NO#;

  12924  4 000062   000002 450000 3                  STZ     SUB_SET

     1272    12925    2      TXT_SET = %NO#;

  12925  4 000063   000003 450000 3                  STZ     TXT_SET

     1273    12926    2      PROJ_SET = %NO#;

  12926  4 000064   000004 450000 3                  STZ     PROJ_SET

     1274    12927    2      BREAK_SET = %NO#;

  12927  4 000065   000005 450000 3                  STZ     BREAK_SET

     1275    12928    2      GENERAL_SET = %NO#;

  12928  4 000066   000006 450000 3                  STZ     GENERAL_SET
         4 000067   000232 710000 4                  TRA     s:13003

     1276    12929
     1277    12930    2      SELECT ( %PROMPT_OPT );

     1278    12931
     1279    12932    2      IF OPT_SET THEN RETURN;

  12932  4 000070   000001 234000 3                  SZN     OPT_SET
         4 000071   000073 605000 4                  TPL     s:12933

  12932  4 000072   000000 702200 xent               TSX2  ! X66_ARET

     1280    12933    2      AUTO_PROMPT.PROMPT_ = VECTOR ( OPT_PROMPT );

  12933  4 000073   000004 237000 5                  LDAQ    4
         4 000074   200012 757100                    STAQ    AUTO_PROMPT+4,,AUTO

PL6.E3A0      #011=ASB$SET_PROMPT File=ASB$EXT.:E05TSI                           TUE 07/29/97 09:08 Page:310  
     1281    12934    2      PROMPT_CHAR = OPT_PROMPT ;

  12934  4 000075   040000 100400                    MLR     fill='040'O
         4 000076   000013 000004 2                  ADSC9   OPT_PROMPT               cn=0,n=4
         4 000077   000000 000037 xsym               ADSC9   PROMPT_CHAR              cn=0,n=31

     1282    12935    2      PROMPT_CNT = LENGTHC( OPT_PROMPT ) ;

  12935  4 000100   000004 235007                    LDA     4,DL
         4 000101   000000 755000 xsym               STA     PROMPT_CNT

     1283    12936    2      CMD_SET = %NO#;

  12936  4 000102   000000 450000 3                  STZ     CMD_SET

     1284    12937    2      OPT_SET = %YES#;

  12937  4 000103   400000 236003                    LDQ     -131072,DU
         4 000104   000001 756000 3                  STQ     OPT_SET

     1285    12938    2      SUB_SET = %NO#;

  12938  4 000105   000002 450000 3                  STZ     SUB_SET

     1286    12939    2      TXT_SET = %NO#;

  12939  4 000106   000003 450000 3                  STZ     TXT_SET

     1287    12940    2      PROJ_SET = %NO#;

  12940  4 000107   000004 450000 3                  STZ     PROJ_SET

     1288    12941    2      BREAK_SET = %NO#;

  12941  4 000110   000005 450000 3                  STZ     BREAK_SET

     1289    12942    2      GENERAL_SET = %NO#;
PL6.E3A0      #011=ASB$SET_PROMPT File=ASB$EXT.:E05TSI                           TUE 07/29/97 09:08 Page:311  

  12942  4 000111   000006 450000 3                  STZ     GENERAL_SET
         4 000112   000232 710000 4                  TRA     s:13003

     1290    12943
     1291    12944    2      SELECT ( %PROMPT_SUB );

     1292    12945
     1293    12946    2      IF SUB_SET THEN RETURN;

  12946  4 000113   000002 234000 3                  SZN     SUB_SET
         4 000114   000116 605000 4                  TPL     s:12947

  12946  4 000115   000000 702200 xent               TSX2  ! X66_ARET

     1294    12947    2      AUTO_PROMPT.PROMPT_ = VECTOR ( SUB_PROMPT );

  12947  4 000116   000006 237000 5                  LDAQ    6
         4 000117   200012 757100                    STAQ    AUTO_PROMPT+4,,AUTO

     1295    12948    2      PROMPT_CHAR = SUB_PROMPT ;

  12948  4 000120   040000 100400                    MLR     fill='040'O
         4 000121   000014 000004 2                  ADSC9   SUB_PROMPT               cn=0,n=4
         4 000122   000000 000037 xsym               ADSC9   PROMPT_CHAR              cn=0,n=31

     1296    12949    2      PROMPT_CNT = LENGTHC( SUB_PROMPT ) ;

  12949  4 000123   000004 235007                    LDA     4,DL
         4 000124   000000 755000 xsym               STA     PROMPT_CNT

     1297    12950    2      CMD_SET = %NO#;

  12950  4 000125   000000 450000 3                  STZ     CMD_SET

     1298    12951    2      OPT_SET = %NO#;

PL6.E3A0      #011=ASB$SET_PROMPT File=ASB$EXT.:E05TSI                           TUE 07/29/97 09:08 Page:312  
  12951  4 000126   000001 450000 3                  STZ     OPT_SET

     1299    12952    2      SUB_SET = %YES#;

  12952  4 000127   400000 236003                    LDQ     -131072,DU
         4 000130   000002 756000 3                  STQ     SUB_SET

     1300    12953    2      TXT_SET = %NO#;

  12953  4 000131   000003 450000 3                  STZ     TXT_SET

     1301    12954    2      PROJ_SET = %NO#;

  12954  4 000132   000004 450000 3                  STZ     PROJ_SET

     1302    12955    2      BREAK_SET = %NO#;

  12955  4 000133   000005 450000 3                  STZ     BREAK_SET

     1303    12956    2      GENERAL_SET = %NO#;

  12956  4 000134   000006 450000 3                  STZ     GENERAL_SET
         4 000135   000232 710000 4                  TRA     s:13003

     1304    12957
     1305    12958    2      SELECT ( %PROMPT_TXT );

     1306    12959
     1307    12960    2      IF TXT_SET THEN RETURN;

  12960  4 000136   000003 234000 3                  SZN     TXT_SET
         4 000137   000141 605000 4                  TPL     s:12961

  12960  4 000140   000000 702200 xent               TSX2  ! X66_ARET

     1308    12961    2      AUTO_PROMPT.PROMPT_ = VECTOR ( TXT_PROMPT );

PL6.E3A0      #011=ASB$SET_PROMPT File=ASB$EXT.:E05TSI                           TUE 07/29/97 09:08 Page:313  
  12961  4 000141   000010 237000 5                  LDAQ    8
         4 000142   200012 757100                    STAQ    AUTO_PROMPT+4,,AUTO

     1309    12962    2      PROMPT_CHAR = TXT_PROMPT ;

  12962  4 000143   040000 100400                    MLR     fill='040'O
         4 000144   000015 000004 2                  ADSC9   TXT_PROMPT               cn=0,n=4
         4 000145   000000 000037 xsym               ADSC9   PROMPT_CHAR              cn=0,n=31

     1310    12963    2      PROMPT_CNT = LENGTHC( TXT_PROMPT ) ;

  12963  4 000146   000004 235007                    LDA     4,DL
         4 000147   000000 755000 xsym               STA     PROMPT_CNT

     1311    12964    2      CMD_SET = %NO#;

  12964  4 000150   000000 450000 3                  STZ     CMD_SET

     1312    12965    2      OPT_SET = %NO#;

  12965  4 000151   000001 450000 3                  STZ     OPT_SET

     1313    12966    2      SUB_SET = %NO#;

  12966  4 000152   000002 450000 3                  STZ     SUB_SET

     1314    12967    2      TXT_SET = %YES#;

  12967  4 000153   400000 236003                    LDQ     -131072,DU
         4 000154   000003 756000 3                  STQ     TXT_SET

     1315    12968    2      PROJ_SET = %NO#;

  12968  4 000155   000004 450000 3                  STZ     PROJ_SET

     1316    12969    2      BREAK_SET = %NO#;

PL6.E3A0      #011=ASB$SET_PROMPT File=ASB$EXT.:E05TSI                           TUE 07/29/97 09:08 Page:314  
  12969  4 000156   000005 450000 3                  STZ     BREAK_SET

     1317    12970    2      GENERAL_SET = %NO#;

  12970  4 000157   000006 450000 3                  STZ     GENERAL_SET
         4 000160   000232 710000 4                  TRA     s:13003

     1318    12971
     1319    12972    2      SELECT ( %PROMPT_PROJ );

     1320    12973
     1321    12974    2      IF PROJ_SET THEN RETURN;

  12974  4 000161   000004 234000 3                  SZN     PROJ_SET
         4 000162   000164 605000 4                  TPL     s:12975

  12974  4 000163   000000 702200 xent               TSX2  ! X66_ARET

     1322    12975    2      AUTO_PROMPT.PROMPT_ = VECTOR ( PROJ_PROMPT );

  12975  4 000164   000012 237000 5                  LDAQ    10
         4 000165   200012 757100                    STAQ    AUTO_PROMPT+4,,AUTO

     1323    12976    2      PROMPT_CHAR = PROJ_PROMPT ;

  12976  4 000166   040000 100400                    MLR     fill='040'O
         4 000167   000016 000005 2                  ADSC9   PROJ_PROMPT              cn=0,n=5
         4 000170   000000 000037 xsym               ADSC9   PROMPT_CHAR              cn=0,n=31

     1324    12977    2      PROMPT_CNT = LENGTHC( PROJ_PROMPT ) ;

  12977  4 000171   000005 235007                    LDA     5,DL
         4 000172   000000 755000 xsym               STA     PROMPT_CNT

     1325    12978    2      CMD_SET = %NO#;

  12978  4 000173   000000 450000 3                  STZ     CMD_SET
PL6.E3A0      #011=ASB$SET_PROMPT File=ASB$EXT.:E05TSI                           TUE 07/29/97 09:08 Page:315  

     1326    12979    2      OPT_SET = %NO#;

  12979  4 000174   000001 450000 3                  STZ     OPT_SET

     1327    12980    2      SUB_SET = %NO#;

  12980  4 000175   000002 450000 3                  STZ     SUB_SET

     1328    12981    2      TXT_SET = %NO#;

  12981  4 000176   000003 450000 3                  STZ     TXT_SET

     1329    12982    2      PROJ_SET = %YES#;

  12982  4 000177   400000 236003                    LDQ     -131072,DU
         4 000200   000004 756000 3                  STQ     PROJ_SET

     1330    12983    2      BREAK_SET = %NO#;

  12983  4 000201   000005 450000 3                  STZ     BREAK_SET

     1331    12984    2      GENERAL_SET = %NO#;

  12984  4 000202   000006 450000 3                  STZ     GENERAL_SET
         4 000203   000232 710000 4                  TRA     s:13003

     1332    12985
     1333    12986    2      SELECT ( %PROMPT_BREAK );

     1334    12987
     1335    12988    2      AUTO_PROMPT.PROMPT_ = VECTOR ( BREAK_PROMPT );

  12988  4 000204   000014 237000 5                  LDAQ    12
         4 000205   200012 757100                    STAQ    AUTO_PROMPT+4,,AUTO

     1336    12989    2      BREAK_SET = %YES#;
PL6.E3A0      #011=ASB$SET_PROMPT File=ASB$EXT.:E05TSI                           TUE 07/29/97 09:08 Page:316  

  12989  4 000206   400000 236003                    LDQ     -131072,DU
         4 000207   000005 756000 3                  STQ     BREAK_SET
         4 000210   000232 710000 4                  TRA     s:13003

     1337    12990
     1338    12991    2      SELECT ( %PROMPT_GENERAL );

     1339    12992
     1340    12993    2      AUTO_PROMPT.PROMPT_ = VECTOR ( SUBSTR(PROMPT_TEXT,0,PROMPT_LEN) );

  12993  4 000211   200005 471500                    LDP1    @PROMPT_LEN,,AUTO
         4 000212   100000 720100                    LXL0    0,,PR1
         4 000213   000000 635010                    EAA     0,X0
         4 000214   000002 771000                    ARL     2
         4 000215   000140 135007                    SBLA    96,DL
         4 000216   200004 236100                    LDQ     @PROMPT_TEXT,,AUTO
         4 000217   200012 757100                    STAQ    AUTO_PROMPT+4,,AUTO

     1341    12994    2      GENERAL_SET = %YES#;

  12994  4 000220   400000 236003                    LDQ     -131072,DU
         4 000221   000006 756000 3                  STQ     GENERAL_SET
         4 000222   000232 710000 4                  TRA     s:13003

     1342    12995
     1343    12996    2      SELECT ( %PROMPT_RESTORE );

     1344    12997
     1345    12998    2      AUTO_PROMPT.PROMPT_ = VECTOR( SUBSTR(PROMPT_CHAR,0,PROMPT_CNT) );

  12998  4 000223   000000 235000 xsym               LDA     PROMPT_CNT
         4 000224   000020 735000                    ALS     16
         4 000225   000140 135007                    SBLA    96,DL
         4 000226   000001 236000 5                  LDQ     1
         4 000227   200012 757100                    STAQ    AUTO_PROMPT+4,,AUTO

PL6.E3A0      #011=ASB$SET_PROMPT File=ASB$EXT.:E05TSI                           TUE 07/29/97 09:08 Page:317  
     1346    12999    2      BREAK_SET = %NO#;

  12999  4 000230   000005 450000 3                  STZ     BREAK_SET

     1347    13000    2      GENERAL_SET = %NO#;

  13000  4 000231   000006 450000 3                  STZ     GENERAL_SET

     1348    13001    2      END;   /*  Do case ( PROMPT_CODE )  */

     1349    13002
     1350    13003    1   CALL M$PROMPT( AUTO_PROMPT );

  13003  4 000232   200006 630500                    EPPR0   AUTO_PROMPT,,AUTO
         4 000233   160002 713400                    CLIMB   57346
         4 000234   401000 401760                    pmme    nvectors=3

     1351    13004
     1352    13005    1   RETURN;

  13005  4 000235   000000 702200 xent               TSX2  ! X66_ARET
     1353    13006
     1354    13007    1   END  ASB$SET_PROMPT;
     1355    13008        %EOD;

PL6.E3A0      #011=ASB$SET_PROMPT File=ASB$EXT.:E05TSI                           TUE 07/29/97 09:08 Page:318  
--  Include file information  --

   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ASB$SET_PROMPT.
PL6.E3A0      #011=ASB$SET_PROMPT File=ASB$EXT.:E05TSI                           TUE 07/29/97 09:08 Page:319  

 **** Variables and constants ****

  ****  Section 002 RoData ASB$SET_PROMPT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    20-0-0/c CHAR(22)    r     1 BREAK_PROMPT              12-0-0/c CHAR(4)     r     1 CMD_PROMPT
     0-0-0/d STRC(360)   r     1 CONSTANT_PROMPT           13-0-0/c CHAR(4)     r     1 OPT_PROMPT
    16-0-0/c CHAR(5)     r     1 PROJ_PROMPT               14-0-0/c CHAR(4)     r     1 SUB_PROMPT
    15-0-0/c CHAR(4)     r     1 TXT_PROMPT

  ****  Section 003  Data  ASB$SET_PROMPT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/b BIT         r     1 BREAK_SET                  0-0-0/b BIT         r     1 CMD_SET
     6-0-0/b BIT         r     1 GENERAL_SET                1-0-0/b BIT         r     1 OPT_SET
     4-0-0/b BIT         r     1 PROJ_SET                   2-0-0/b BIT         r     1 SUB_SET
     3-0-0/b BIT         r     1 TXT_SET

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @PROMPT_CODE               5-0-0/w PTR         r     1 @PROMPT_LEN
     4-0-0/w PTR         r     1 @PROMPT_TEXT               6-0-0/d STRC(360)   r     1 AUTO_PROMPT
    *0-0-0/w UBIN        r     1 PROMPT_CODE               *0-0-0/w UBIN        r     1 PROMPT_LEN
    *0-0-0/c CHAR(31)    r     1 PROMPT_TEXT

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #011=ASB$SET_PROMPT File=ASB$EXT.:E05TSI                           TUE 07/29/97 09:08 Page:320  
     0-0-0/c CHAR(31)    r     1 PROMPT_CHAR                0-0-0/w UBIN        r     1 PROMPT_CNT

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0N  NULL        r     1 M$UC


   Procedure ASB$SET_PROMPT requires 158 words for executable code.
   Procedure ASB$SET_PROMPT requires 18 words of local(AUTO) storage.
PL6.E3A0      #011=ASB$SET_PROMPT File=ASB$EXT.:E05TSI                           TUE 07/29/97 09:08 Page:321  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #011=ASB$SET_PROMPT File=ASB$EXT.:E05TSI                           TUE 07/29/97 09:08 Page:322  
          MINI XREF LISTING

ASA_BRKS_LOC
      9955**DCL      9955--REDEF
AS_DEFAULT.BANNER_PERM
     10648**DCL     10649--REDEF
AS_DEFAULT.BUDGET.MACCT
     10553**DCL     10557--REDEF
AS_DEFAULT.BUDGET.MAX_PROJECTS
     10566**DCL     10569--REDEF
AS_DEFAULT.BUDGET.PACCUM
     10549**DCL     10551--REDEF
AS_DEFAULT.BUDGET.PMAXC
     10544**DCL     10546--REDEF
AS_DEFAULT.SETUP_CHRA.TXT
     10664**DCL     10665--REDEF   10666--REDEF
AS_DEFAULT_DREC.PASSWORD
     11918**DCL     11922--REDEF
AS_DEFAULT_DREC.RENAME
     11941**DCL     11942--REDEF
AS_DFLT.BANNER_PERM
     10470**DCL     10471--REDEF
AS_DFLT.BUDGET.MACCT
     10375**DCL     10379--REDEF
AS_DFLT.BUDGET.MAX_PROJECTS
     10388**DCL     10391--REDEF
AS_DFLT.BUDGET.PACCUM
     10371**DCL     10373--REDEF
AS_DFLT.BUDGET.PMAXC
     10366**DCL     10368--REDEF
AS_DFLT.SETUP_CHRA.TXT
     10486**DCL     10487--REDEF   10488--REDEF
AS_FE_MODE
      9821**DCL      9822--REDEF
PL6.E3A0      #011=ASB$SET_PROMPT File=ASB$EXT.:E05TSI                           TUE 07/29/97 09:08 Page:323  
AS_MODE
      9818**DCL      9820--REDEF
AS_MOD_USER.ACCESS
     12683**DCL     12684--REDEF
AS_MOD_USER.BANNER
     12670**DCL     12671--REDEF
AS_MOD_USER.BANNER_PERM
     12672**DCL     12673--REDEF
AS_MOD_USER.BILL
     12678**DCL     12679--REDEF
AS_MOD_USER.CPROC
     12674**DCL     12675--REDEF
AS_MOD_USER.FEBILL
     12754**DCL     12755--REDEF
AS_MOD_USER.FECXTMEM
     12771**DCL     12772--REDEF
AS_MOD_USER.FEMINTS
     12756**DCL     12757--REDEF
AS_MOD_USER.FEMMEM
     12767**DCL     12768--REDEF
AS_MOD_USER.FEMTIME
     12765**DCL     12766--REDEF
AS_MOD_USER.FEPPRIV
     12762**DCL     12764--REDEF
AS_MOD_USER.FEPRIV
     12759**DCL     12761--REDEF
AS_MOD_USER.FORCE_BIT
     12668**DCL     12669--REDEF
AS_MOD_USER.KEY
     12750**DCL     12752--REDEF
AS_MOD_USER.LASTCPROC
     12676**DCL     12677--REDEF
AS_MOD_USER.LIMITS.DO_
     12724**DCL     12725--REDEF
AS_MOD_USER.LIMITS.FPOOLS
     12740**DCL     12741--REDEF
PL6.E3A0      #011=ASB$SET_PROMPT File=ASB$EXT.:E05TSI                           TUE 07/29/97 09:08 Page:324  
AS_MOD_USER.LIMITS.LO
     12720**DCL     12721--REDEF
AS_MOD_USER.LIMITS.MEM
     12716**DCL     12717--REDEF
AS_MOD_USER.LIMITS.MPRIO
     12744**DCL     12745--REDEF
AS_MOD_USER.LIMITS.PDIS
     12732**DCL     12733--REDEF
AS_MOD_USER.LIMITS.PO
     12728**DCL     12729--REDEF
AS_MOD_USER.LIMITS.TDIS
     12736**DCL     12737--REDEF
AS_MOD_USER.LIMITS.TIME
     12712**DCL     12713--REDEF
AS_MOD_USER.MAXENQ
     12693**DCL     12694--REDEF
AS_MOD_USER.PERM_BIT
     12666**DCL     12667--REDEF
AS_MOD_USER.PPRIV
     12688**DCL     12690--REDEF
AS_MOD_USER.PRIOB
     12695**DCL     12696--REDEF
AS_MOD_USER.PRIV
     12685**DCL     12687--REDEF
AS_MOD_USER.QUAN
     12691**DCL     12692--REDEF
AS_MOD_USER.SETUP
     12664**DCL     12665--REDEF
AS_PROJECT.BANNER_PERM
     11004**DCL     11005--REDEF
AS_PROJECT.BUDGET.MACCT
     10909**DCL     10913--REDEF
AS_PROJECT.BUDGET.MAX_PROJECTS
     10922**DCL     10925--REDEF
AS_PROJECT.BUDGET.PACCUM
     10905**DCL     10907--REDEF
PL6.E3A0      #011=ASB$SET_PROMPT File=ASB$EXT.:E05TSI                           TUE 07/29/97 09:08 Page:325  
AS_PROJECT.BUDGET.PMAXC
     10900**DCL     10902--REDEF
AS_PROJECT.SETUP_CHRA.TXT
     11020**DCL     11021--REDEF   11022--REDEF
AS_PROJECT_DFLT.BANNER_PERM
     11182**DCL     11183--REDEF
AS_PROJECT_DFLT.BUDGET.MACCT
     11087**DCL     11091--REDEF
AS_PROJECT_DFLT.BUDGET.MAX_PROJECTS
     11100**DCL     11103--REDEF
AS_PROJECT_DFLT.BUDGET.PACCUM
     11083**DCL     11085--REDEF
AS_PROJECT_DFLT.BUDGET.PMAXC
     11078**DCL     11080--REDEF
AS_PROJECT_DFLT.SETUP_CHRA.TXT
     11198**DCL     11199--REDEF   11200--REDEF
AS_PROJECT_DFLT_DREC.PASSWORD
     12404**DCL     12408--REDEF
AS_PROJECT_DFLT_DREC.RENAME
     12427**DCL     12428--REDEF
AS_PROJECT_DREC.PASSWORD
     12242**DCL     12246--REDEF
AS_PROJECT_DREC.RENAME
     12265**DCL     12266--REDEF
AS_PROJ_ADMIN.BANNER_PERM
     10826**DCL     10827--REDEF
AS_PROJ_ADMIN.BUDGET.MACCT
     10731**DCL     10735--REDEF
AS_PROJ_ADMIN.BUDGET.MAX_PROJECTS
     10744**DCL     10747--REDEF
AS_PROJ_ADMIN.BUDGET.PACCUM
     10727**DCL     10729--REDEF
AS_PROJ_ADMIN.BUDGET.PMAXC
     10722**DCL     10724--REDEF
AS_PROJ_ADMIN.SETUP_CHRA.TXT
     10842**DCL     10843--REDEF   10844--REDEF
PL6.E3A0      #011=ASB$SET_PROMPT File=ASB$EXT.:E05TSI                           TUE 07/29/97 09:08 Page:326  
AS_PROJ_ADMIN_DREC.PASSWORD
     12080**DCL     12084--REDEF
AS_PROJ_ADMIN_DREC.RENAME
     12103**DCL     12104--REDEF
AS_USERS.BANNER_PERM
     10292**DCL     10293--REDEF
AS_USERS.BUDGET.MACCT
     10197**DCL     10201--REDEF
AS_USERS.BUDGET.MAX_PROJECTS
     10210**DCL     10213--REDEF
AS_USERS.BUDGET.PACCUM
     10193**DCL     10195--REDEF
AS_USERS.BUDGET.PMAXC
     10188**DCL     10190--REDEF
AS_USERS.SETUP_CHRA.TXT
     10308**DCL     10309--REDEF   10310--REDEF
AS_USERS_CONSTANT.BANNER_PERM
     11360**DCL     11361--REDEF
AS_USERS_CONSTANT.BUDGET.MACCT
     11265**DCL     11269--REDEF
AS_USERS_CONSTANT.BUDGET.MAX_PROJECTS
     11278**DCL     11281--REDEF
AS_USERS_CONSTANT.BUDGET.PACCUM
     11261**DCL     11263--REDEF
AS_USERS_CONSTANT.BUDGET.PMAXC
     11256**DCL     11258--REDEF
AS_USERS_CONSTANT.SETUP_CHRA.TXT
     11376**DCL     11377--REDEF   11378--REDEF
AUTO_PROMPT
     12880**DCL     12911<<ASSIGN  13003<>CALL
AUTO_PROMPT.PROMPT_
     12886**DCL     12919<<ASSIGN  12933<<ASSIGN  12947<<ASSIGN  12961<<ASSIGN  12975<<ASSIGN  12988<<ASSIGN
     12993<<ASSIGN  12998<<ASSIGN
AUTO_PROMPT.V
     12888**DCL     12912--ASSIGN
AUTO_PROMPT.V_
PL6.E3A0      #011=ASB$SET_PROMPT File=ASB$EXT.:E05TSI                           TUE 07/29/97 09:08 Page:327  
     12882**DCL     12912<<ASSIGN
B$ALT.CODE
     12817**DCL     12817--REDEF   12818--REDEF   12818--REDEF
B$ALT.ERR.ERR#
     12819**DCL     12819--REDEF
B$ALT.EVID
     12818**DCL     12818--REDEF   12818--REDEF
BREAK_PROMPT
     12898**DCL     12988--ASSIGN
BREAK_SET
     12906**DCL     12927<<ASSIGN  12941<<ASSIGN  12955<<ASSIGN  12969<<ASSIGN  12983<<ASSIGN  12989<<ASSIGN
     12999<<ASSIGN
CMD_PROMPT
     12893**DCL     12919--ASSIGN  12920>>ASSIGN  12921--ASSIGN
CMD_SET
     12901**DCL     12918>>IF      12922<<ASSIGN  12936<<ASSIGN  12950<<ASSIGN  12964<<ASSIGN  12978<<ASSIGN
CONSTANT_PROMPT
     12850**DCL     12911>>ASSIGN
CONSTANT_PROMPT.V
     12858**DCL     12852--DCLINIT
ERR_CODE
      9950**DCL      9951--REDEF
GENERAL_SET
     12907**DCL     12928<<ASSIGN  12942<<ASSIGN  12956<<ASSIGN  12970<<ASSIGN  12984<<ASSIGN  12994<<ASSIGN
     13000<<ASSIGN
KL_DEFAULT.PASSWORD
     12566**DCL     12570--REDEF
KL_DEFAULT.RENAME
     12589**DCL     12590--REDEF
KL_DFLT.PASSWORD
     11756**DCL     11760--REDEF
KL_DFLT.RENAME
     11779**DCL     11780--REDEF
KL_DREC.PASSWORD
     11594**DCL     11598--REDEF
KL_DREC.RENAME
PL6.E3A0      #011=ASB$SET_PROMPT File=ASB$EXT.:E05TSI                           TUE 07/29/97 09:08 Page:328  
     11617**DCL     11618--REDEF
KL_DREC_CNT.PASSWORD
     11481**DCL     11485--REDEF
KL_DREC_CNT.RENAME
     11504**DCL     11505--REDEF
M$PROMPT
        54**DCL-ENT 13003--CALL
OPT_PROMPT
     12894**DCL     12933--ASSIGN  12934>>ASSIGN  12935--ASSIGN
OPT_SET
     12902**DCL     12923<<ASSIGN  12932>>IF      12937<<ASSIGN  12951<<ASSIGN  12965<<ASSIGN  12979<<ASSIGN
PROJ_KEY.TEXT
      9828**DCL      9828--REDEF
PROJ_KEY.TXT.PROJECT
      9828**DCL      9828--REDEF
PROJ_PROMPT
     12897**DCL     12975--ASSIGN  12976>>ASSIGN  12977--ASSIGN
PROJ_SET
     12905**DCL     12926<<ASSIGN  12940<<ASSIGN  12954<<ASSIGN  12968<<ASSIGN  12974>>IF      12982<<ASSIGN
PROMPT_CHAR
      9956**DCL     12920<<ASSIGN  12934<<ASSIGN  12948<<ASSIGN  12962<<ASSIGN  12976<<ASSIGN  12998--ASSIGN
PROMPT_CNT
      9956**DCL     12921<<ASSIGN  12935<<ASSIGN  12949<<ASSIGN  12963<<ASSIGN  12977<<ASSIGN  12998>>ASSIGN
PROMPT_CODE
     12826**DCL        19--PROC    12914>>DOSELCT
PROMPT_LEN
     12828**DCL        19--PROC    12993>>ASSIGN
PROMPT_TEXT
     12827**DCL        19--PROC    12993--ASSIGN
REMEM_VAR
      9954**DCL      9954--REDEF
REM_FCMD
      9954**DCL      9955--REDEF
SUB_PROMPT
     12895**DCL     12947--ASSIGN  12948>>ASSIGN  12949--ASSIGN
SUB_SET
PL6.E3A0      #011=ASB$SET_PROMPT File=ASB$EXT.:E05TSI                           TUE 07/29/97 09:08 Page:329  
     12903**DCL     12924<<ASSIGN  12938<<ASSIGN  12946>>IF      12952<<ASSIGN  12966<<ASSIGN  12980<<ASSIGN
TXT_PROMPT
     12896**DCL     12961--ASSIGN  12962>>ASSIGN  12963--ASSIGN
TXT_SET
     12904**DCL     12925<<ASSIGN  12939<<ASSIGN  12953<<ASSIGN  12960>>IF      12967<<ASSIGN  12981<<ASSIGN
USERS_KEY.TEXT
      9825**DCL      9826--REDEF    9826--REDEF    9826--REDEF    9827--REDEF

PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:330  
     1356        1        /*T***********************************************************/
     1357        2        /*T*                                                         */
     1358        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1359        4        /*T*                                                         */
     1360        5        /*T***********************************************************/
     1361        6        %EJECT;
PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:331  
     1362        7        ASC$CHECK_TIGR_WSN: PROC (TEXT$,WSN_INDEX)  ALTRET ;
     1363        8        %EJECT ;
PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:332  
     1364        9        /*********************************************************************/
     1365       10        /*   Parameters      parameters      parameters      parameters      */
     1366       11        /*********************************************************************/
     1367       12    1   DCL TEXT$  PTR;
     1368       13    1   DCL WSN_INDEX UBIN;
     1369       14        %EJECT;
PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:333  
     1370       15        /*********************************************************************/
     1371       16        /*   Include files   include files   include files   include files   */
     1372       17        /*********************************************************************/
     1373       18                                                                                      /**/
     1374       19              %INCLUDE AS_ENTRIES_M ;
     1375     1069              %INCLUDE AS_PERR_C ;
     1376     1671              %INCLUDE CP_6 ;
     1377     1752              %INCLUDE AS_SUPER_C ;
     1378     2187              %INCLUDE AS_MAC_C ;
     1379     2267              %INCLUDE AS_SUBS_C ;
     1380     3681              %INCLUDE KL_SUPER_C ;
     1381     6583              %INCLUDE XU_MACRO_C ;
     1382     9689              %INCLUDE XU_FORMAT_C ;
     1383     9851              %INCLUDE AS_SSUBS_C ;
     1384     9943              %INCLUDE B_ERRORS_C ;
     1385    11070              %INCLUDE TD$STRUCT ;
     1386    11171              %INCLUDE CP_6_SUBS ;
     1387    11711              %INCLUDE AS_SUPER_R ;
     1388    14727                                                                                      /**/
     1389    14728        %EJECT;
PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:334  
     1390    14729        /*********************************************************************/
     1391    14730        /*   Static data     static data     static data     static data     */
     1392    14731        /*********************************************************************/
     1393    14732                                                                                      /**/
     1394    14733    1   DCL 1 FILE_NAME CONSTANT ,
     1395    14734    1          2 COUNT UBIN(9) UNAL INIT(7) ,
     1396    14735    1          2 TEXT CHAR(31) UNAL INIT(':CONFIG') ;
     1397    14736        %EJECT ;
PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:335  
     1398    14737        /*********************************************************************/
     1399    14738        /*   Symref's        symref's        symref's        symref's        */
     1400    14739        /*********************************************************************/
     1401    14740                                                              /**/
     1402    14741    1   DCL B$TCB$ PTR SYMREF ;
     1403    14742        %EJECT ;
PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:336  
     1404    14743        /*********************************************************************/
     1405    14744        /*   Fpts            fpts            fpts            fpts            */
     1406    14745        /*********************************************************************/
     1407    14746                                                                                      /**/
     1408    14747          %FPT_OPEN(  FPTN = OPEN_FPT ,
     1409    14748                      NAME = FILE_NAME ,
     1410    14749                      ACCT = FILE_ACCT ,
     1411    14750                      ASN = FILE ,
     1412    14751                      DCB = M$CNFG ,
     1413    14752                      ACS = DIRECT ,
     1414    14753                      ORG = KEYED ,
     1415    14754                      FUN = IN ,
     1416    14755                      SHARE = ALL ) ;
     1417    14864          %FPT_CLOSE( FPTN = CLOSE_FPT ,
     1418    14865                      DCB = M$CNFG ,
     1419    14866                      DISP = SAVE ) ;
     1420    14908          %FPT_READ(  FPTN = READ_FPT ,
     1421    14909                      DCB = M$CNFG ,
     1422    14910                      KEYS = YES ) ;
     1423    14949        %EJECT ;
PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:337  
     1424    14950        /*********************************************************************/
     1425    14951        /*   Dcbs            dcbs            dcbs            dcbs            */
     1426    14952        /*********************************************************************/
     1427    14953                                                                                      /**/
     1428    14954    1   DCL M$CNFG DCB ;                              /* Read dcb for :CONFIG. */
     1429    14955        %EJECT ;
PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:338  
     1430    14956        /*********************************************************************/
     1431    14957        /*   Auto data       auto data       auto data       auto data       */
     1432    14958        /*********************************************************************/
     1433    14959                                                              /**/
     1434    14960    1   DCL TD$WSN$ PTR ;
     1435    14961    1   DCL ARS UBIN WORD ;
     1436    14962    1   DCL 1 KEY ALIGNED ,
     1437    14963    1          2 CNT UBIN BYTE UNAL ,
     1438    14964    1          2 TXT CHAR(31) UNAL ;
     1439    14965    1   DCL START2$ PTR ;
     1440    14966    1   DCL START2_SZ UBIN WORD ;
     1441    14967    1   DCL TEMPWSN CHAR(8) CALIGNED;
     1442    14968        %EJECT ;
PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:339  
     1443    14969        /*********************************************************************/
     1444    14970        /*   Entry dcls      entry dcls      entry dcls      entry dcls      */
     1445    14971        /*********************************************************************/
     1446    14972                                                              /**/
     1447    14973        %ASH$ERROR ;
     1448    14976        %ASB$GETSEG ;
     1449    14979        %EJECT ;
PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:340  
     1450    14980        /*********************************************************************/
     1451    14981        /*   Local based     local based     local based     local based     */
     1452    14982        /*********************************************************************/
     1453    14983                                                              /**/
     1454    14984              %B$ALT ;
     1455    14992              %B$TCB ;
     1456    14995              %TD$WSN(  NAME = TD$WSN ,
     1457    14996                        STCLASS="BASED( TD$WSN$ )") ;
     1458    15000    1   DCL 1 WSN   BASED (TEXT$),
     1459    15001    1          2  CNT      UBIN BYTE CALIGNED,
     1460    15002    1          2  TEXT     CHAR(8) CALIGNED;
     1461    15003        %EJECT ;
PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:341  
     1462    15004        /*********************************************************************/
     1463    15005        /*   Procedure       procedure       procedure       procedure       */
     1464    15006        /*********************************************************************/
     1465    15007                                                              /**/
     1466    15008        /*
     1467    15009            ***            Begin procedure                    ***
     1468    15010        */
     1469    15011    1   IF NOT DSEG_FLG THEN
     1470    15012    1      CALL ASB$GETSEG
     1471    15013    2      WHENALTRETURN DO;
     1472    15014              %SCREAM (ERR#=%E$GETSEGERR, LEVEL=ERROR, MID='C');
     1473    15029    2         WSN_INDEX = 4;
     1474    15030    2         RETURN ;
     1475    15031    2         END;   /*  Whenaltreturn from ASB$GETSEG  */
     1476    15032                                                              /* Open :CONFIG */
     1477    15033    1   CALL M$OPEN( OPEN_FPT ) ALTRET( ERR ) ;
     1478    15034                                                             /* get wsn rec */
     1479    15035    1   START2$ = PINCRW( DSEG1$, 1024 ) ;
     1480    15036    1   START2_SZ = DSEG1SIZE - 4 * 1024 ;
     1481    15037    1   ARS = START2_SZ ;
     1482    15038    1   TD$WSN$ = START2$ ;
     1483    15039    1   KEY.CNT = 3 ;
     1484    15040    1   KEY.TXT = 'WSN' ;
     1485    15041                                                              /**/
     1486    15042                                                              /*
     1487    15043                                                                   Set BUF$ in read fpt
     1488    15044                                                              */
     1489    15045    1   READ_FPT.BUF_.BUF$ = TD$WSN$ ;
     1490    15046    1   READ_FPT.BUF_.BOUND = ARS - 1;
     1491    15047    1   READ_FPT.KEY_ = VECTOR( KEY ) ;
     1492    15048    1   CALL M$READ( READ_FPT ) ALTRET( ERR ) ;
     1493    15049    1   TEMPWSN = ' ';
     1494    15050    1   SUBSTR(TEMPWSN,0,TEXT$->WSN.CNT) = TEXT$ -> WSN.TEXT;
     1495    15051        /*
     1496    15052          Find TEXT$ -> text in wsn rec
     1497    15053        */
     1498    15054    1   WSN_INDEX = 0;
PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:342  
     1499    15055    2   DO WHILE WSN_INDEX < 4;
     1500    15056    2      IF TD$WSN.WSNNAME(WSN_INDEX) = TEMPWSN THEN
     1501    15057    2         EXIT;
     1502    15058    2      WSN_INDEX = WSN_INDEX + 1;
     1503    15059    2      END; /*  Do while  */
     1504    15060
     1505    15061    1   CALL M$CLOSE( CLOSE_FPT ) ;
     1506    15062
     1507    15063    1   IF WSN_INDEX < 4 THEN
     1508    15064    1      RETURN;
     1509    15065    1   ELSE
     1510    15066    1      ALTRETURN;
     1511    15067                                                              /**/
     1512    15068                                                              /* Errors */
     1513    15069    1   ERR: ;
     1514    15070    1   ERR_CODE = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR ;
     1515    15071    1   CALL ASH$ERROR( ERR_CODE ) ;
     1516    15072    1   AS_DCBNUM# = OPEN_FPT.V.DCB#;
     1517    15073    1   ERR_CODE = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR ;
     1518    15074    1   ALTRETURN ;
     1519    15075                                                              /**/
     1520    15076    1   END   ASC$CHECK_TIGR_WSN ;
     1521    15077        %EOD;

PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:343  
--  Include file information  --

   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   TD$STRUCT.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   AS_SSUBS_C.:E05TOU  is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   AS_PERR_C.:E05TOU  is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ASC$CHECK_TIGR_WSN.

   Procedure ASC$CHECK_TIGR_WSN requires 108 words for executable code.
   Procedure ASC$CHECK_TIGR_WSN requires 22 words of local(AUTO) storage.

PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:344  

 Object Unit name= ASC$CHECK_TIGR_WSN                         File name= ASB$EXT.:E05TOU
 UTS= JUL 29 '97 09:09:12.24 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$LO
    2  RoData even  UTS     10     12  ASC$CHECK_TIGR_WSN
    3   Data  even  none   102    146  ASC$CHECK_TIGR_WSN
    4   DCB   even  none     0      0  M$CNFG
    5   Proc  even  none   108    154  ASC$CHECK_TIGR_WSN
    6  RoData even  none     3      3  ASC$CHECK_TIGR_WSN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     5      0   yes    yes     yes      Std        2  ASC$CHECK_TIGR_WSN

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 XU_OUTPUT_OPTIONS
 yes     yes           Std       0 ASB$GETSEG
         yes           Std       2 ASH$ERROR
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:345  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    AS_MODE                          r    AS_FE_MODE
     M$LO                                  ERR_CODE                              REMEM_VAR
     REM_FCMD                              ASA_BRKS_LOC                          DSEG_FLG
     DSEG1$                                DSEG1SIZE                             FILE_ACCT
     AS_DCBNUM#                            B$TCB$                                M$CNFG
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:346  


     1356        1        /*T***********************************************************/
     1357        2        /*T*                                                         */
     1358        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1359        4        /*T*                                                         */
     1360        5        /*T***********************************************************/
     1361        6        %EJECT;
PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:347  
     1362        7        ASC$CHECK_TIGR_WSN: PROC (TEXT$,WSN_INDEX)  ALTRET ;

      7  5 000000   000000 700200 xent  ASC$CHECK_T* TSX0  ! X66_AUTO_2
         5 000001   000026 000002                    ZERO    22,2

     1363        8        %EJECT ;
PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:348  
     1364        9        /*********************************************************************/
     1365       10        /*   Parameters      parameters      parameters      parameters      */
     1366       11        /*********************************************************************/
     1367       12    1   DCL TEXT$  PTR;
     1368       13    1   DCL WSN_INDEX UBIN;
     1369       14        %EJECT;
PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:349  
     1370       15        /*********************************************************************/
     1371       16        /*   Include files   include files   include files   include files   */
     1372       17        /*********************************************************************/
     1373       18                                                                                      /**/
     1374       19              %INCLUDE AS_ENTRIES_M ;
     1375     1069              %INCLUDE AS_PERR_C ;
     1376     1671              %INCLUDE CP_6 ;
     1377     1752              %INCLUDE AS_SUPER_C ;
     1378     2187              %INCLUDE AS_MAC_C ;
     1379     2267              %INCLUDE AS_SUBS_C ;
     1380     3681              %INCLUDE KL_SUPER_C ;
     1381     6583              %INCLUDE XU_MACRO_C ;
     1382     9689              %INCLUDE XU_FORMAT_C ;
     1383     9851              %INCLUDE AS_SSUBS_C ;
     1384     9943              %INCLUDE B_ERRORS_C ;
     1385    11070              %INCLUDE TD$STRUCT ;
     1386    11171              %INCLUDE CP_6_SUBS ;
     1387    11711              %INCLUDE AS_SUPER_R ;
     1388    14727                                                                                      /**/
     1389    14728        %EJECT;
PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:350  
     1390    14729        /*********************************************************************/
     1391    14730        /*   Static data     static data     static data     static data     */
     1392    14731        /*********************************************************************/
     1393    14732                                                                                      /**/
     1394    14733    1   DCL 1 FILE_NAME CONSTANT ,
     1395    14734    1          2 COUNT UBIN(9) UNAL INIT(7) ,
     1396    14735    1          2 TEXT CHAR(31) UNAL INIT(':CONFIG') ;
     1397    14736        %EJECT ;
PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:351  
     1398    14737        /*********************************************************************/
     1399    14738        /*   Symref's        symref's        symref's        symref's        */
     1400    14739        /*********************************************************************/
     1401    14740                                                              /**/
     1402    14741    1   DCL B$TCB$ PTR SYMREF ;
     1403    14742        %EJECT ;
PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:352  
     1404    14743        /*********************************************************************/
     1405    14744        /*   Fpts            fpts            fpts            fpts            */
     1406    14745        /*********************************************************************/
     1407    14746                                                                                      /**/
     1408    14747          %FPT_OPEN(  FPTN = OPEN_FPT ,
     1409    14748                      NAME = FILE_NAME ,
     1410    14749                      ACCT = FILE_ACCT ,
     1411    14750                      ASN = FILE ,
     1412    14751                      DCB = M$CNFG ,
     1413    14752                      ACS = DIRECT ,
     1414    14753                      ORG = KEYED ,
     1415    14754                      FUN = IN ,
     1416    14755                      SHARE = ALL ) ;
     1417    14864          %FPT_CLOSE( FPTN = CLOSE_FPT ,
     1418    14865                      DCB = M$CNFG ,
     1419    14866                      DISP = SAVE ) ;
     1420    14908          %FPT_READ(  FPTN = READ_FPT ,
     1421    14909                      DCB = M$CNFG ,
     1422    14910                      KEYS = YES ) ;
     1423    14949        %EJECT ;
PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:353  
     1424    14950        /*********************************************************************/
     1425    14951        /*   Dcbs            dcbs            dcbs            dcbs            */
     1426    14952        /*********************************************************************/
     1427    14953                                                                                      /**/
     1428    14954    1   DCL M$CNFG DCB ;                              /* Read dcb for :CONFIG. */
     1429    14955        %EJECT ;
PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:354  
     1430    14956        /*********************************************************************/
     1431    14957        /*   Auto data       auto data       auto data       auto data       */
     1432    14958        /*********************************************************************/
     1433    14959                                                              /**/
     1434    14960    1   DCL TD$WSN$ PTR ;
     1435    14961    1   DCL ARS UBIN WORD ;
     1436    14962    1   DCL 1 KEY ALIGNED ,
     1437    14963    1          2 CNT UBIN BYTE UNAL ,
     1438    14964    1          2 TXT CHAR(31) UNAL ;
     1439    14965    1   DCL START2$ PTR ;
     1440    14966    1   DCL START2_SZ UBIN WORD ;
     1441    14967    1   DCL TEMPWSN CHAR(8) CALIGNED;
     1442    14968        %EJECT ;
PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:355  
     1443    14969        /*********************************************************************/
     1444    14970        /*   Entry dcls      entry dcls      entry dcls      entry dcls      */
     1445    14971        /*********************************************************************/
     1446    14972                                                              /**/
     1447    14973        %ASH$ERROR ;
     1448    14976        %ASB$GETSEG ;
     1449    14979        %EJECT ;
PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:356  
     1450    14980        /*********************************************************************/
     1451    14981        /*   Local based     local based     local based     local based     */
     1452    14982        /*********************************************************************/
     1453    14983                                                              /**/
     1454    14984              %B$ALT ;
     1455    14992              %B$TCB ;
     1456    14995              %TD$WSN(  NAME = TD$WSN ,
     1457    14996                        STCLASS="BASED( TD$WSN$ )") ;
     1458    15000    1   DCL 1 WSN   BASED (TEXT$),
     1459    15001    1          2  CNT      UBIN BYTE CALIGNED,
     1460    15002    1          2  TEXT     CHAR(8) CALIGNED;
     1461    15003        %EJECT ;
PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:357  
     1462    15004        /*********************************************************************/
     1463    15005        /*   Procedure       procedure       procedure       procedure       */
     1464    15006        /*********************************************************************/
     1465    15007                                                              /**/
     1466    15008        /*
     1467    15009            ***            Begin procedure                    ***
     1468    15010        */
     1469    15011    1   IF NOT DSEG_FLG THEN

  15011  5 000002   000000 234000 xsym               SZN     DSEG_FLG
         5 000003   000020 604000 5                  TMI     s:15033

     1470    15012    1      CALL ASB$GETSEG

  15012  5 000004   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000005   000000 701000 xent               TSX1    ASB$GETSEG
         5 000006   000010 702000 5                  TSX2    s:15026
         5 000007   000020 710000 5                  TRA     s:15033

     1471    15013    2      WHENALTRETURN DO;

     1472    15014              %SCREAM (ERR#=%E$GETSEGERR, LEVEL=ERROR, MID='C');

  15026  5 000010   000000 630400 6                  EPPR0   0
         5 000011   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000012   000000 701000 xent               TSX1    ASH$ERROR
         5 000013   000000 011000                    NOP     0

     1473    15029    2         WSN_INDEX = 4;

  15029  5 000014   000004 235007                    LDA     4,DL
         5 000015   200004 470500                    LDP0    @WSN_INDEX,,AUTO
         5 000016   000000 755100                    STA     0,,PR0

     1474    15030    2         RETURN ;

  15030  5 000017   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:358  

     1475    15031    2         END;   /*  Whenaltreturn from ASB$GETSEG  */
     1476    15032                                                              /* Open :CONFIG */
     1477    15033    1   CALL M$OPEN( OPEN_FPT ) ALTRET( ERR ) ;

  15033  5 000020   000000 630400 3                  EPPR0   OPEN_FPT
         5 000021   450000 713400                    CLIMB   alt,open
         5 000022   410400 401760                    pmme    nvectors=18
         5 000023   000134 702000 5                  TSX2    ERR

     1478    15034                                                             /* get wsn rec */
     1479    15035    1   START2$ = PINCRW( DSEG1$, 1024 ) ;

  15035  5 000024   000000 236000 xsym               LDQ     DSEG1$
         5 000025   002000 036003                    ADLQ    1024,DU
         5 000026   200017 756100                    STQ     START2$,,AUTO

     1480    15036    1   START2_SZ = DSEG1SIZE - 4 * 1024 ;

  15036  5 000027   000000 235000 xsym               LDA     DSEG1SIZE
         5 000030   010000 135007                    SBLA    4096,DL
         5 000031   200020 755100                    STA     START2_SZ,,AUTO

     1481    15037    1   ARS = START2_SZ ;

  15037  5 000032   200006 755100                    STA     ARS,,AUTO

     1482    15038    1   TD$WSN$ = START2$ ;

  15038  5 000033   200005 756100                    STQ     TD$WSN$,,AUTO

     1483    15039    1   KEY.CNT = 3 ;

  15039  5 000034   003000 236003                    LDQ     1536,DU
         5 000035   200007 552140                    STBQ    KEY,'40'O,AUTO

     1484    15040    1   KEY.TXT = 'WSN' ;
PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:359  

  15040  5 000036   040100 100400                    MLR     fill='040'O
         5 000037   000011 000003 2                  ADSC9   FILE_NAME+9              cn=0,n=3
         5 000040   200007 200037                    ADSC9   KEY,,AUTO                cn=1,n=31

     1485    15041                                                              /**/
     1486    15042                                                              /*
     1487    15043                                                                   Set BUF$ in read fpt
     1488    15044                                                              */
     1489    15045    1   READ_FPT.BUF_.BUF$ = TD$WSN$ ;

  15045  5 000041   200005 236100                    LDQ     TD$WSN$,,AUTO
         5 000042   000135 756000 3                  STQ     READ_FPT+5

     1490    15046    1   READ_FPT.BUF_.BOUND = ARS - 1;

  15046  5 000043   200006 236100                    LDQ     ARS,,AUTO
         5 000044   000001 136007                    SBLQ    1,DL
         5 000045   000020 736000                    QLS     16
         5 000046   000134 676000 3                  ERQ     READ_FPT+4
         5 000047   000034 376000 xsym               ANQ     B_VECTNIL+28
         5 000050   000134 656000 3                  ERSQ    READ_FPT+4

     1491    15047    1   READ_FPT.KEY_ = VECTOR( KEY ) ;

  15047  5 000051   000001 235000 6                  LDA     1
         5 000052   200024 452500                    STP2    TEMPWSN+3,,AUTO
         5 000053   200024 236100                    LDQ     TEMPWSN+3,,AUTO
         5 000054   000007 036003                    ADLQ    7,DU
         5 000055   000132 757000 3                  STAQ    READ_FPT+2

     1492    15048    1   CALL M$READ( READ_FPT ) ALTRET( ERR ) ;

  15048  5 000056   000130 630400 3                  EPPR0   READ_FPT
         5 000057   440000 713400                    CLIMB   alt,read
         5 000060   401400 401760                    pmme    nvectors=4
         5 000061   000134 702000 5                  TSX2    ERR
PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:360  

     1493    15049    1   TEMPWSN = ' ';

  15049  5 000062   000035 235000 xsym               LDA     B_VECTNIL+29
         5 000063   000035 236000 xsym               LDQ     B_VECTNIL+29
         5 000064   200021 755100                    STA     TEMPWSN,,AUTO
         5 000065   200022 756100                    STQ     TEMPWSN+1,,AUTO

     1494    15050    1   SUBSTR(TEMPWSN,0,TEXT$->WSN.CNT) = TEXT$ -> WSN.TEXT;

  15050  5 000066   200003 470500                    LDP0    @TEXT$,,AUTO
         5 000067   000000 471500                    LDP1    0,,PR0
         5 000070   000100 101500                    MRL     fill='000'O
         5 000071   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         5 000072   200024 000002                    ADSC9   TEMPWSN+3,,AUTO          cn=0,n=2
         5 000073   200024 220100                    LDX0    TEMPWSN+3,,AUTO
         5 000074   000000 471500                    LDP1    0,,PR0
         5 000075   040140 100500                    MLR     fill='040'O
         5 000076   100000 200010                    ADSC9   0,,PR1                   cn=1,n=8
         5 000077   200021 000010                    ADSC9   TEMPWSN,,AUTO            cn=0,n=*X0

     1495    15051        /*
     1496    15052          Find TEXT$ -> text in wsn rec
     1497    15053        */
     1498    15054    1   WSN_INDEX = 0;

  15054  5 000100   200004 473500                    LDP3    @WSN_INDEX,,AUTO
         5 000101   300000 450100                    STZ     0,,PR3

     1499    15055    2   DO WHILE WSN_INDEX < 4;

  15055  5 000102   300000 235100                    LDA     0,,PR3
         5 000103   000004 115007                    CMPA    4,DL
         5 000104   000123 603000 5                  TRC     s:15061

     1500    15056    2      IF TD$WSN.WSNNAME(WSN_INDEX) = TEMPWSN THEN

PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:361  
  15056  5 000105   200004 470500                    LDP0    @WSN_INDEX,,AUTO
         5 000106   000000 235100                    LDA     0,,PR0
         5 000107   000001 735000                    ALS     1
         5 000110   000002 735000                    ALS     2
         5 000111   200005 471500                    LDP1    TD$WSN$,,AUTO
         5 000112   040100 106505                    CMPC    fill='040'O
         5 000113   100000 000010                    ADSC9   0,A,PR1                  cn=0,n=8
         5 000114   200021 000010                    ADSC9   TEMPWSN,,AUTO            cn=0,n=8
         5 000115   000123 600000 5                  TZE     s:15061

     1501    15057    2         EXIT;
     1502    15058    2      WSN_INDEX = WSN_INDEX + 1;

  15058  5 000116   000000 235100                    LDA     0,,PR0
         5 000117   000001 035007                    ADLA    1,DL
         5 000120   000000 755100                    STA     0,,PR0

     1503    15059    2      END; /*  Do while  */

  15059  5 000121   000004 115007                    CMPA    4,DL
         5 000122   000105 602000 5                  TNC     s:15056

     1504    15060
     1505    15061    1   CALL M$CLOSE( CLOSE_FPT ) ;

  15061  5 000123   000072 630400 3                  EPPR0   CLOSE_FPT
         5 000124   050001 713400                    CLIMB   close
         5 000125   406000 401760                    pmme    nvectors=13

     1506    15062
     1507    15063    1   IF WSN_INDEX < 4 THEN

  15063  5 000126   200004 470500                    LDP0    @WSN_INDEX,,AUTO
         5 000127   000000 235100                    LDA     0,,PR0
         5 000130   000004 115007                    CMPA    4,DL
         5 000131   000133 603000 5                  TRC     s:15066

PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:362  
     1508    15064    1      RETURN;

  15064  5 000132   000000 702200 xent               TSX2  ! X66_ARET

     1509    15065    1   ELSE
     1510    15066    1      ALTRETURN;

  15066  5 000133   000000 702200 xent               TSX2  ! X66_AALT

  15063  5 000134                       ERR          null
     1511    15067                                                              /**/
     1512    15068                                                              /* Errors */
     1513    15069    1   ERR: ;
     1514    15070    1   ERR_CODE = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR ;

  15070  5 000134   000000 470400 xsym               LDP0    B$TCB$
         5 000135   000000 471500                    LDP1    0,,PR0
         5 000136   100102 236100                    LDQ     66,,PR1
         5 000137   000000 756000 xsym               STQ     ERR_CODE

     1515    15071    1   CALL ASH$ERROR( ERR_CODE ) ;

  15071  5 000140   000002 630400 6                  EPPR0   2
         5 000141   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000142   000000 701000 xent               TSX1    ASH$ERROR
         5 000143   000000 011000                    NOP     0

     1516    15072    1   AS_DCBNUM# = OPEN_FPT.V.DCB#;

  15072  5 000144   000044 235000 3                  LDA     OPEN_FPT+36
         5 000145   000022 771000                    ARL     18
         5 000146   000000 755000 xsym               STA     AS_DCBNUM#

     1517    15073    1   ERR_CODE = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR ;

  15073  5 000147   000000 470400 xsym               LDP0    B$TCB$
         5 000150   000000 471500                    LDP1    0,,PR0
PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:363  
         5 000151   100102 236100                    LDQ     66,,PR1
         5 000152   000000 756000 xsym               STQ     ERR_CODE

     1518    15074    1   ALTRETURN ;

  15074  5 000153   000000 702200 xent               TSX2  ! X66_AALT
     1519    15075                                                              /**/
     1520    15076    1   END   ASC$CHECK_TIGR_WSN ;
     1521    15077        %EOD;

PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:364  
--  Include file information  --

   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   TD$STRUCT.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   AS_SSUBS_C.:E05TOU  is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   AS_PERR_C.:E05TOU  is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ASC$CHECK_TIGR_WSN.
PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:365  

 **** Variables and constants ****

  ****  Section 002 RoData ASC$CHECK_TIGR_WSN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(288)   r     1 FILE_NAME

  ****  Section 003  Data  ASC$CHECK_TIGR_WSN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    72-0-0/d STRC(1080)  r     1 CLOSE_FPT                  0-0-0/d STRC(2088)  r     1 OPEN_FPT
   130-0-0/d STRC(504)   r     1 READ_FPT

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @TEXT$                     4-0-0/w PTR         r     1 @WSN_INDEX
     6-0-0/w UBIN        r     1 ARS                        7-0-0/w STRC(288)   r     1 KEY
    17-0-0/w PTR         r     1 START2$                   20-0-0/w UBIN        r     1 START2_SZ
     5-0-0/w PTR         r     1 TD$WSN$                   21-0-0/c CHAR(8)     r     1 TEMPWSN
    *0-0-0/w PTR         r     1 TEXT$                     *0-0-0/w UBIN        r     1 WSN_INDEX

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 AS_DCBNUM#                 0-0-0/w PTR         r     1 B$TCB$
     0-0-0/w PTR         r     1 DSEG1$                     0-0-0/w UBIN        r     1 DSEG1SIZE
     0-0-0/b BIT         r     1 DSEG_FLG                   0-0-0/b STRC        r     1 ERR_CODE
     0-0-0/c STRC(72)    r     1 FILE_ACCT
PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:366  

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0N  NULL        r     1 M$CNFG                     0-0-0/w STRC(288)   r     1 TD$WSN
     0-0-0/c STRC(81)    r     1 WSN


   Procedure ASC$CHECK_TIGR_WSN requires 108 words for executable code.
   Procedure ASC$CHECK_TIGR_WSN requires 22 words of local(AUTO) storage.
PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:367  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:368  
          MINI XREF LISTING

ARS
     14961**DCL     15037<<ASSIGN  15046>>ASSIGN
ASA_BRKS_LOC
     11875**DCL     11875--REDEF
ASB$GETSEG
     14977**DCL-ENT 15012--CALL
ASH$ERROR
     14974**DCL-ENT 15026--CALL    15071--CALL
AS_DCBNUM#
     11882**DCL     15072<<ASSIGN
AS_DEFAULT.BANNER_PERM
     12568**DCL     12569--REDEF
AS_DEFAULT.BUDGET.MACCT
     12473**DCL     12477--REDEF
AS_DEFAULT.BUDGET.MAX_PROJECTS
     12486**DCL     12489--REDEF
AS_DEFAULT.BUDGET.PACCUM
     12469**DCL     12471--REDEF
AS_DEFAULT.BUDGET.PMAXC
     12464**DCL     12466--REDEF
AS_DEFAULT.SETUP_CHRA.TXT
     12584**DCL     12585--REDEF   12586--REDEF
AS_DEFAULT_DREC.PASSWORD
     13838**DCL     13842--REDEF
AS_DEFAULT_DREC.RENAME
     13861**DCL     13862--REDEF
AS_DFLT.BANNER_PERM
     12390**DCL     12391--REDEF
AS_DFLT.BUDGET.MACCT
     12295**DCL     12299--REDEF
AS_DFLT.BUDGET.MAX_PROJECTS
     12308**DCL     12311--REDEF
PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:369  
AS_DFLT.BUDGET.PACCUM
     12291**DCL     12293--REDEF
AS_DFLT.BUDGET.PMAXC
     12286**DCL     12288--REDEF
AS_DFLT.SETUP_CHRA.TXT
     12406**DCL     12407--REDEF   12408--REDEF
AS_FE_MODE
     11741**DCL     11742--REDEF
AS_MODE
     11738**DCL     11740--REDEF
AS_MOD_USER.ACCESS
     14603**DCL     14604--REDEF
AS_MOD_USER.BANNER
     14590**DCL     14591--REDEF
AS_MOD_USER.BANNER_PERM
     14592**DCL     14593--REDEF
AS_MOD_USER.BILL
     14598**DCL     14599--REDEF
AS_MOD_USER.CPROC
     14594**DCL     14595--REDEF
AS_MOD_USER.FEBILL
     14674**DCL     14675--REDEF
AS_MOD_USER.FECXTMEM
     14691**DCL     14692--REDEF
AS_MOD_USER.FEMINTS
     14676**DCL     14677--REDEF
AS_MOD_USER.FEMMEM
     14687**DCL     14688--REDEF
AS_MOD_USER.FEMTIME
     14685**DCL     14686--REDEF
AS_MOD_USER.FEPPRIV
     14682**DCL     14684--REDEF
AS_MOD_USER.FEPRIV
     14679**DCL     14681--REDEF
AS_MOD_USER.FORCE_BIT
     14588**DCL     14589--REDEF
PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:370  
AS_MOD_USER.KEY
     14670**DCL     14672--REDEF
AS_MOD_USER.LASTCPROC
     14596**DCL     14597--REDEF
AS_MOD_USER.LIMITS.DO_
     14644**DCL     14645--REDEF
AS_MOD_USER.LIMITS.FPOOLS
     14660**DCL     14661--REDEF
AS_MOD_USER.LIMITS.LO
     14640**DCL     14641--REDEF
AS_MOD_USER.LIMITS.MEM
     14636**DCL     14637--REDEF
AS_MOD_USER.LIMITS.MPRIO
     14664**DCL     14665--REDEF
AS_MOD_USER.LIMITS.PDIS
     14652**DCL     14653--REDEF
AS_MOD_USER.LIMITS.PO
     14648**DCL     14649--REDEF
AS_MOD_USER.LIMITS.TDIS
     14656**DCL     14657--REDEF
AS_MOD_USER.LIMITS.TIME
     14632**DCL     14633--REDEF
AS_MOD_USER.MAXENQ
     14613**DCL     14614--REDEF
AS_MOD_USER.PERM_BIT
     14586**DCL     14587--REDEF
AS_MOD_USER.PPRIV
     14608**DCL     14610--REDEF
AS_MOD_USER.PRIOB
     14615**DCL     14616--REDEF
AS_MOD_USER.PRIV
     14605**DCL     14607--REDEF
AS_MOD_USER.QUAN
     14611**DCL     14612--REDEF
AS_MOD_USER.SETUP
     14584**DCL     14585--REDEF
PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:371  
AS_PROJECT.BANNER_PERM
     12924**DCL     12925--REDEF
AS_PROJECT.BUDGET.MACCT
     12829**DCL     12833--REDEF
AS_PROJECT.BUDGET.MAX_PROJECTS
     12842**DCL     12845--REDEF
AS_PROJECT.BUDGET.PACCUM
     12825**DCL     12827--REDEF
AS_PROJECT.BUDGET.PMAXC
     12820**DCL     12822--REDEF
AS_PROJECT.SETUP_CHRA.TXT
     12940**DCL     12941--REDEF   12942--REDEF
AS_PROJECT_DFLT.BANNER_PERM
     13102**DCL     13103--REDEF
AS_PROJECT_DFLT.BUDGET.MACCT
     13007**DCL     13011--REDEF
AS_PROJECT_DFLT.BUDGET.MAX_PROJECTS
     13020**DCL     13023--REDEF
AS_PROJECT_DFLT.BUDGET.PACCUM
     13003**DCL     13005--REDEF
AS_PROJECT_DFLT.BUDGET.PMAXC
     12998**DCL     13000--REDEF
AS_PROJECT_DFLT.SETUP_CHRA.TXT
     13118**DCL     13119--REDEF   13120--REDEF
AS_PROJECT_DFLT_DREC.PASSWORD
     14324**DCL     14328--REDEF
AS_PROJECT_DFLT_DREC.RENAME
     14347**DCL     14348--REDEF
AS_PROJECT_DREC.PASSWORD
     14162**DCL     14166--REDEF
AS_PROJECT_DREC.RENAME
     14185**DCL     14186--REDEF
AS_PROJ_ADMIN.BANNER_PERM
     12746**DCL     12747--REDEF
AS_PROJ_ADMIN.BUDGET.MACCT
     12651**DCL     12655--REDEF
PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:372  
AS_PROJ_ADMIN.BUDGET.MAX_PROJECTS
     12664**DCL     12667--REDEF
AS_PROJ_ADMIN.BUDGET.PACCUM
     12647**DCL     12649--REDEF
AS_PROJ_ADMIN.BUDGET.PMAXC
     12642**DCL     12644--REDEF
AS_PROJ_ADMIN.SETUP_CHRA.TXT
     12762**DCL     12763--REDEF   12764--REDEF
AS_PROJ_ADMIN_DREC.PASSWORD
     14000**DCL     14004--REDEF
AS_PROJ_ADMIN_DREC.RENAME
     14023**DCL     14024--REDEF
AS_USERS.BANNER_PERM
     12212**DCL     12213--REDEF
AS_USERS.BUDGET.MACCT
     12117**DCL     12121--REDEF
AS_USERS.BUDGET.MAX_PROJECTS
     12130**DCL     12133--REDEF
AS_USERS.BUDGET.PACCUM
     12113**DCL     12115--REDEF
AS_USERS.BUDGET.PMAXC
     12108**DCL     12110--REDEF
AS_USERS.SETUP_CHRA.TXT
     12228**DCL     12229--REDEF   12230--REDEF
AS_USERS_CONSTANT.BANNER_PERM
     13280**DCL     13281--REDEF
AS_USERS_CONSTANT.BUDGET.MACCT
     13185**DCL     13189--REDEF
AS_USERS_CONSTANT.BUDGET.MAX_PROJECTS
     13198**DCL     13201--REDEF
AS_USERS_CONSTANT.BUDGET.PACCUM
     13181**DCL     13183--REDEF
AS_USERS_CONSTANT.BUDGET.PMAXC
     13176**DCL     13178--REDEF
AS_USERS_CONSTANT.SETUP_CHRA.TXT
     13296**DCL     13297--REDEF   13298--REDEF
PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:373  
B$ALT.CODE
     14986**DCL     14986--REDEF   14987--REDEF   14987--REDEF
B$ALT.ERR
     14987**DCL     15070>>ASSIGN  15073>>ASSIGN
B$ALT.ERR.ERR#
     14988**DCL     14988--REDEF
B$ALT.EVID
     14987**DCL     14987--REDEF   14987--REDEF
B$TCB.ALT$
     14993**DCL     15070>>ASSIGN  15073>>ASSIGN
B$TCB$
     14741**DCL     15070>>ASSIGN  15073>>ASSIGN
CLOSE_FPT
     14889**DCL     15061<>CALL
CLOSE_FPT.SN_
     14889**DCL     14889--REDEF
CLOSE_FPT.UTL_
     14890**DCL     14890--REDEF
CLOSE_FPT.V
     14894**DCL     14889--DCLINIT
CLOSE_FPT.V.EXPIRE#
     14904**DCL     14904--REDEF
CLOSE_FPT.V.TYPE#
     14902**DCL     14902--REDEF
CLOSE_FPT.V.XTNSIZE#
     14899**DCL     14899--REDEF   14901--REDEF
DSEG1$
     11876**DCL     15035>>ASSIGN
DSEG1SIZE
     11877**DCL     15036>>ASSIGN
DSEG_FLG
     11876**DCL     15011>>IF
ERR
     15063**LABEL   15033--CALLALT 15048--CALLALT
ERR_CODE
     11870**DCL     11871--REDEF   15070<<ASSIGN  15071<>CALL    15073<<ASSIGN
PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:374  
FILE_ACCT
     11878**DCL     14825--DCLINIT
FILE_NAME
     14733**DCL     14821--DCLINIT
KEY
     14962**DCL     15047--ASSIGN
KEY.CNT
     14963**DCL     15039<<ASSIGN
KEY.TXT
     14964**DCL     15040<<ASSIGN
KL_DEFAULT.PASSWORD
     14486**DCL     14490--REDEF
KL_DEFAULT.RENAME
     14509**DCL     14510--REDEF
KL_DFLT.PASSWORD
     13676**DCL     13680--REDEF
KL_DFLT.RENAME
     13699**DCL     13700--REDEF
KL_DREC.PASSWORD
     13514**DCL     13518--REDEF
KL_DREC.RENAME
     13537**DCL     13538--REDEF
KL_DREC_CNT.PASSWORD
     13401**DCL     13405--REDEF
KL_DREC_CNT.RENAME
     13424**DCL     13425--REDEF
M$CLOSE
      1680**DCL-ENT 15061--CALL
M$OPEN
      1680**DCL-ENT 15033--CALL
M$READ
      1681**DCL-ENT 15048--CALL
OPEN_FPT
     14820**DCL     15033<>CALL
OPEN_FPT.ACSVEH_
     14822**DCL     14823--REDEF
PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:375  
OPEN_FPT.ALTKEYS_
     14828**DCL     14829--REDEF   14829--REDEF
OPEN_FPT.HDR_
     14827**DCL     14828--REDEF
OPEN_FPT.TAB_
     14826**DCL     14827--REDEF
OPEN_FPT.UHL_
     14820**DCL     14821--REDEF   14821--REDEF
OPEN_FPT.V
     14829**DCL     14820--DCLINIT
OPEN_FPT.V.DCB#
     14829**DCL     15072>>ASSIGN
OPEN_FPT.V.FSN#
     14860**DCL     14860--REDEF   14860--REDEF
OPEN_FPT.WSN_
     14826**DCL     14826--REDEF
PROJ_KEY.TEXT
     11748**DCL     11748--REDEF
PROJ_KEY.TXT.PROJECT
     11748**DCL     11748--REDEF
READ_FPT
     14927**DCL     15048<>CALL
READ_FPT.BUF_.BOUND
     14929**DCL     15046<<ASSIGN
READ_FPT.BUF_.BUF$
     14930**DCL     15045<<ASSIGN
READ_FPT.KEY_
     14927**DCL     15047<<ASSIGN
READ_FPT.STATION_
     14930**DCL     14931--REDEF
READ_FPT.V
     14931**DCL     14927--DCLINIT
READ_FPT.V.DVBYTE.REREAD#
     14942**DCL     14942--REDEF
READ_FPT.V.INDX#
     14940**DCL     14940--REDEF
PL6.E3A0      #012=ASC$CHECK_TIGR_WSN File=ASB$EXT.:E05TSI                       TUE 07/29/97 09:09 Page:376  
REMEM_VAR
     11874**DCL     11874--REDEF
REM_FCMD
     11874**DCL     11875--REDEF
START2$
     14965**DCL     15035<<ASSIGN  15038>>ASSIGN
START2_SZ
     14966**DCL     15036<<ASSIGN  15037>>ASSIGN
TD$WSN.WSNNAME
     14998**DCL     15056>>IF
TD$WSN$
     14960**DCL     14997--IMP-PTR 15038<<ASSIGN  15045>>ASSIGN  15056>>IF
TEMPWSN
     14967**DCL     15049<<ASSIGN  15050<<ASSIGN  15056>>IF
TEXT$
        12**DCL         7--PROC    15000--IMP-PTR 15050>>ASSIGN  15050>>ASSIGN
USERS_KEY.TEXT
     11745**DCL     11746--REDEF   11746--REDEF   11746--REDEF   11747--REDEF
WSN.CNT
     15001**DCL     15050>>ASSIGN
WSN.TEXT
     15002**DCL     15050>>ASSIGN
WSN_INDEX
        13**DCL         7--PROC    15029<<ASSIGN  15054<<ASSIGN  15055>>DOWHILE 15056>>IF      15058<<ASSIGN
     15058>>ASSIGN  15063>>IF

PL6.E3A0      #013=ASD$HEX2OCT File=ASB$EXT.:E05TSI                              TUE 07/29/97 09:10 Page:377  
     1522        1        /*T***********************************************************/
     1523        2        /*T*                                                         */
     1524        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1525        4        /*T*                                                         */
     1526        5        /*T***********************************************************/
     1527        6        %EJECT;
PL6.E3A0      #013=ASD$HEX2OCT File=ASB$EXT.:E05TSI                              TUE 07/29/97 09:10 Page:378  
     1528        7        ASD$HEX2OCT: PROC( OUT_SYM, OCT_VAL ) ALTRET ;
     1529        8
     1530        9        /*********************************************************************/
     1531       10        /*   Include files   include files   include files   include files   */
     1532       11        /*********************************************************************/
     1533       12
     1534       13        %INCLUDE XU_MACRO_C ;
     1535     3119        %INCLUDE AS_SUBS_C;
     1536     4533
     1537     4534        /*********************************************************************/
     1538     4535        /*   Parameters      parameters      parameters      parameters      */
     1539     4536        /*********************************************************************/
     1540     4537
     1541     4538        %PARSE$SYM( NAME = OUT_SYM , STCLASS = " " ) ;
     1542     4576    1   DCL OCT_VAL UBIN WORD;
     1543     4577    1   DCL 1 OCTAL REDEF OCT_VAL ALIGNED,
     1544     4578    1          2 * UBIN(20) UNAL,
     1545     4579    1          2 VAL(0:3) UBIN(4) UNAL;
     1546     4580
     1547     4581        /********************************************************************/
     1548     4582        /*   Constant        constant        constant        constant        */
     1549     4583        /*********************************************************************/
     1550     4584
     1551     4585    1   DCL HEX_CHARS CHAR(0) CONSTANT INIT('0123456789ABCDEF');
     1552     4586
     1553     4587        /*********************************************************************/
     1554     4588        /*   Auto data       auto data       auto data       auto data       */
     1555     4589        /*********************************************************************/
     1556     4590
     1557     4591    1   DCL HEX_STR(0:3) CHAR(1) ;
     1558     4592    1   DCL R_HEX_STR REDEF HEX_STR CHAR(4) ;
     1559     4593    1   DCL VAL UBIN WORD ;
     1560     4594    1   DCL DISP UBIN WORD ;
     1561     4595    1   DCL I UBIN WORD ;
     1562     4596        %EJECT ;
PL6.E3A0      #013=ASD$HEX2OCT File=ASB$EXT.:E05TSI                              TUE 07/29/97 09:10 Page:379  
     1563     4597        /********************************************************************/
     1564     4598        /*   Procedure       procedure       procedure       procedure       */
     1565     4599        /*********************************************************************/
     1566     4600
     1567     4601        /*
     1568     4602            ***            Begin procedure                    ***
     1569     4603        */
     1570     4604    2   DO SELECT( OUT_SYM.CODE );
     1571     4605    2      SELECT( QSTRING_VAL );
     1572     4606    2      OCT_VAL = ASCBIN( OUT_SYM.TEXT );
     1573     4607    2      SELECT( %HSTRING2_VAL, %HSTRING4_VAL );
     1574     4608    2      R_HEX_STR = '0000' ;
     1575     4609    2      DISP = 4 - OUT_SYM.COUNT ;
     1576     4610    2      CALL INSERT( R_HEX_STR, DISP, , OUT_SYM.TEXT );
     1577     4611    2      OCT_VAL = 0 ;
     1578     4612    3      DO I = 0 TO 3 ;
     1579     4613    3         CALL INDEX( VAL, HEX_STR(I), HEX_CHARS ) ALTRET( ERROR );
     1580     4614    3         OCTAL.VAL(I) = VAL;
     1581     4615    3         END ; /* Do i */
     1582     4616    2      SELECT( ELSE );
     1583     4617    2   OCT_VAL = OUT_SYM.CODE;
     1584     4618    2      END ;       /* Do case */
     1585     4619
     1586     4620    1   RETURN;
     1587     4621
     1588     4622    1   ERROR:
     1589     4623    1   ALTRETURN;
     1590     4624
     1591     4625    1   END   ASD$HEX2OCT ;
     1592     4626        %EOD;

PL6.E3A0      #013=ASD$HEX2OCT File=ASB$EXT.:E05TSI                              TUE 07/29/97 09:10 Page:380  
--  Include file information  --

   AS_SUBS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ASD$HEX2OCT.

   Procedure ASD$HEX2OCT requires 65 words for executable code.
   Procedure ASD$HEX2OCT requires 10 words of local(AUTO) storage.

PL6.E3A0      #013=ASD$HEX2OCT File=ASB$EXT.:E05TSI                              TUE 07/29/97 09:10 Page:381  

 Object Unit name= ASD$HEX2OCT                                File name= ASB$EXT.:E05TOU
 UTS= JUL 29 '97 09:10:20.60 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      5      5  ASD$HEX2OCT
    1   Proc  even  none    65    101  ASD$HEX2OCT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        2  ASD$HEX2OCT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #013=ASD$HEX2OCT File=ASB$EXT.:E05TSI                              TUE 07/29/97 09:10 Page:382  


     1522        1        /*T***********************************************************/
     1523        2        /*T*                                                         */
     1524        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1525        4        /*T*                                                         */
     1526        5        /*T***********************************************************/
     1527        6        %EJECT;
PL6.E3A0      #013=ASD$HEX2OCT File=ASB$EXT.:E05TSI                              TUE 07/29/97 09:10 Page:383  
     1528        7        ASD$HEX2OCT: PROC( OUT_SYM, OCT_VAL ) ALTRET ;

      7  1 000000   000000 700200 xent  ASD$HEX2OCT  TSX0  ! X66_AUTO_2
         1 000001   000012 000002                    ZERO    10,2

     1529        8
     1530        9        /*********************************************************************/
     1531       10        /*   Include files   include files   include files   include files   */
     1532       11        /*********************************************************************/
     1533       12
     1534       13        %INCLUDE XU_MACRO_C ;
     1535     3119        %INCLUDE AS_SUBS_C;
     1536     4533
     1537     4534        /*********************************************************************/
     1538     4535        /*   Parameters      parameters      parameters      parameters      */
     1539     4536        /*********************************************************************/
     1540     4537
     1541     4538        %PARSE$SYM( NAME = OUT_SYM , STCLASS = " " ) ;
     1542     4576    1   DCL OCT_VAL UBIN WORD;
     1543     4577    1   DCL 1 OCTAL REDEF OCT_VAL ALIGNED,
     1544     4578    1          2 * UBIN(20) UNAL,
     1545     4579    1          2 VAL(0:3) UBIN(4) UNAL;
     1546     4580
     1547     4581        /********************************************************************/
     1548     4582        /*   Constant        constant        constant        constant        */
     1549     4583        /*********************************************************************/
     1550     4584
     1551     4585    1   DCL HEX_CHARS CHAR(0) CONSTANT INIT('0123456789ABCDEF');
     1552     4586
     1553     4587        /*********************************************************************/
     1554     4588        /*   Auto data       auto data       auto data       auto data       */
     1555     4589        /*********************************************************************/
     1556     4590
     1557     4591    1   DCL HEX_STR(0:3) CHAR(1) ;
     1558     4592    1   DCL R_HEX_STR REDEF HEX_STR CHAR(4) ;
     1559     4593    1   DCL VAL UBIN WORD ;
     1560     4594    1   DCL DISP UBIN WORD ;
PL6.E3A0      #013=ASD$HEX2OCT File=ASB$EXT.:E05TSI                              TUE 07/29/97 09:10 Page:384  
     1561     4595    1   DCL I UBIN WORD ;
     1562     4596        %EJECT ;
PL6.E3A0      #013=ASD$HEX2OCT File=ASB$EXT.:E05TSI                              TUE 07/29/97 09:10 Page:385  
     1563     4597        /********************************************************************/
     1564     4598        /*   Procedure       procedure       procedure       procedure       */
     1565     4599        /*********************************************************************/
     1566     4600
     1567     4601        /*
     1568     4602            ***            Begin procedure                    ***
     1569     4603        */
     1570     4604    2   DO SELECT( OUT_SYM.CODE );

   4604  1 000002   200003 470500                    LDP0    @OUT_SYM,,AUTO
         1 000003   000000 236100                    LDQ     0,,PR0
         1 000004   777777 376007                    ANQ     -1,DL
         1 000005   001001 116007                    CMPQ    513,DL
         1 000006   000014 602000 1                  TNC     s:4604+10
         1 000007   000030 600000 1                  TZE     s:4608
         1 000010   000000 720100                    LXL0    0,,PR0
         1 000011   001002 100003                    CMPX0   514,DU
         1 000012   000075 601000 1                  TNZ     s:4617
         1 000013   000030 710000 1                  TRA     s:4608
         1 000014   000000 720100                    LXL0    0,,PR0
         1 000015   001000 100003                    CMPX0   512,DU
         1 000016   000075 601000 1                  TNZ     s:4617
         1 000017   000020 710000 1                  TRA     s:4606

     1571     4605    2      SELECT( QSTRING_VAL );

     1572     4606    2      OCT_VAL = ASCBIN( OUT_SYM.TEXT );

   4606  1 000020   000004 236100                    LDQ     4,,PR0
         1 000021   000033 772000                    QRL     27
         1 000022   000004 236100                    LDQ     4,,PR0
         1 000023   000022 772000                    QRL     18
         1 000024   000777 376007                    ANQ     511,DL
         1 000025   200004 471500                    LDP1    @OCT_VAL,,AUTO
         1 000026   100000 756100                    STQ     0,,PR1
         1 000027   000077 710000 1                  TRA     s:4620

PL6.E3A0      #013=ASD$HEX2OCT File=ASB$EXT.:E05TSI                              TUE 07/29/97 09:10 Page:386  
     1573     4607    2      SELECT( %HSTRING2_VAL, %HSTRING4_VAL );

     1574     4608    2      R_HEX_STR = '0000' ;

   4608  1 000030   000004 236000 0                  LDQ     HEX_CHARS+4
         1 000031   200005 756100                    STQ     HEX_STR,,AUTO

     1575     4609    2      DISP = 4 - OUT_SYM.COUNT ;

   4609  1 000032   000004 236100                    LDQ     4,,PR0
         1 000033   000033 772000                    QRL     27
         1 000034   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 000035   000005 036007                    ADLQ    5,DL
         1 000036   200007 756100                    STQ     DISP,,AUTO

     1576     4610    2      CALL INSERT( R_HEX_STR, DISP, , OUT_SYM.TEXT );

   4610  1 000037   000004 236100                    LDQ     4,,PR0
         1 000040   000033 772000                    QRL     27
         1 000041   200007 720100                    LXL0    DISP,,AUTO
         1 000042   777773 620010                    EAX0    -5,X0
         1 000043   777777 660003                    ERX0    -1,DU
         1 000044   000000 621006                    EAX1    0,QL
         1 000045   200007 235100                    LDA     DISP,,AUTO
         1 000046   040145 100540                    MLR     fill='040'O
         1 000047   000004 200011                    ADSC9   4,,PR0                   cn=1,n=*X1
         1 000050   200005 000010                    ADSC9   HEX_STR,A,AUTO           cn=0,n=*X0

     1577     4611    2      OCT_VAL = 0 ;

   4611  1 000051   200004 471500                    LDP1    @OCT_VAL,,AUTO
         1 000052   100000 450100                    STZ     0,,PR1

     1578     4612    3      DO I = 0 TO 3 ;

   4612  1 000053   200010 450100                    STZ     I,,AUTO

PL6.E3A0      #013=ASD$HEX2OCT File=ASB$EXT.:E05TSI                              TUE 07/29/97 09:10 Page:387  
     1579     4613    3         CALL INDEX( VAL, HEX_STR(I), HEX_CHARS ) ALTRET( ERROR );

   4613  1 000054   200010 235100                    LDA     I,,AUTO
         1 000055   000105 124400                    SCM     mask='000'O
         1 000056   000000 000020 0                  ADSC9   HEX_CHARS                cn=0,n=16
         1 000057   200005 000001                    ADSC9   HEX_STR,A,AUTO           cn=0,n=1
         1 000060   200006 000100                    ARG     VAL,,AUTO
         1 000061   000100 606400 1                  TTN     ERROR

     1580     4614    3         OCTAL.VAL(I) = VAL;

   4614  1 000062   000002 735000                    ALS     2
         1 000063   200004 470500                    LDP0    @OCT_VAL,,AUTO
         1 000064   003105 061500                    CSR     bolr='003'O
         1 000065   200006 000044                    BDSC    VAL,,AUTO                by=0,bit=0,n=36
         1 000066   000000 420004                    BDSC    0,A,PR0                  by=2,bit=2,n=4

     1581     4615    3         END ; /* Do i */

   4615  1 000067   200010 236100                    LDQ     I,,AUTO
         1 000070   000001 036007                    ADLQ    1,DL
         1 000071   200010 756100                    STQ     I,,AUTO
         1 000072   000004 116007                    CMPQ    4,DL
         1 000073   000054 602000 1                  TNC     s:4613
         1 000074   000077 710000 1                  TRA     s:4620

     1582     4616    2      SELECT( ELSE );

     1583     4617    2   OCT_VAL = OUT_SYM.CODE;

   4617  1 000075   200004 471500                    LDP1    @OCT_VAL,,AUTO
         1 000076   100000 756100                    STQ     0,,PR1

     1584     4618    2      END ;       /* Do case */

     1585     4619
     1586     4620    1   RETURN;
PL6.E3A0      #013=ASD$HEX2OCT File=ASB$EXT.:E05TSI                              TUE 07/29/97 09:10 Page:388  

   4620  1 000077   000000 702200 xent               TSX2  ! X66_ARET

     1587     4621
     1588     4622    1   ERROR:
     1589     4623    1   ALTRETURN;

   4623  1 000100   000000 702200 xent  ERROR        TSX2  ! X66_AALT
     1590     4624
     1591     4625    1   END   ASD$HEX2OCT ;
     1592     4626        %EOD;

PL6.E3A0      #013=ASD$HEX2OCT File=ASB$EXT.:E05TSI                              TUE 07/29/97 09:10 Page:389  
--  Include file information  --

   AS_SUBS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ASD$HEX2OCT.
PL6.E3A0      #013=ASD$HEX2OCT File=ASB$EXT.:E05TSI                              TUE 07/29/97 09:10 Page:390  

 **** Variables and constants ****

  ****  Section 000 RoData ASD$HEX2OCT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(16)    r     1 HEX_CHARS

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @OCT_VAL                   3-0-0/w PTR         r     1 @OUT_SYM
     7-0-0/w UBIN        r     1 DISP
     5-0-0/c CHAR        r     1 HEX_STR(0:3)
    10-0-0/w UBIN        r     1 I                         *0-0-0/w STRC        r     1 OCTAL
    *0-0-0/w UBIN        r     1 OCT_VAL                   *0-0-0/w ASTR(153)   r     1 OUT_SYM
     5-0-0/c CHAR(4)     r     1 R_HEX_STR                  6-0-0/w UBIN        r     1 VAL


   Procedure ASD$HEX2OCT requires 65 words for executable code.
   Procedure ASD$HEX2OCT requires 10 words of local(AUTO) storage.
PL6.E3A0      #013=ASD$HEX2OCT File=ASB$EXT.:E05TSI                              TUE 07/29/97 09:10 Page:391  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #013=ASD$HEX2OCT File=ASB$EXT.:E05TSI                              TUE 07/29/97 09:10 Page:392  
          MINI XREF LISTING

DISP
      4594**DCL      4609<<ASSIGN   4610>>CALLBLT
ERROR
      4623**LABEL    4613--CALLALT
HEX_CHARS
      4585**DCL      4613>>CALLBLT
HEX_STR
      4591**DCL      4592--REDEF    4613>>CALLBLT
I
      4595**DCL      4612<<DOINDEX  4613>>CALLBLT  4614>>ASSIGN
OCTAL.VAL
      4579**DCL      4614<<ASSIGN
OCT_VAL
      4576**DCL         7--PROC     4577--REDEF    4606<<ASSIGN   4611<<ASSIGN   4617<<ASSIGN
OUT_SYM
      4545**DCL         7--PROC
OUT_SYM.CODE
      4551**DCL      4604>>DOSELCT  4617>>ASSIGN
OUT_SYM.COUNT
      4568**DCL      4571--IMP-SIZ  4606>>ASSIGN   4609>>ASSIGN   4610>>CALLBLT
OUT_SYM.TEXT
      4571**DCL      4606>>ASSIGN   4610>>CALLBLT
R_HEX_STR
      4592**DCL      4608<<ASSIGN   4610<<CALLBLT
VAL
      4593**DCL      4613<<CALLBLT  4614>>ASSIGN

PL6.E3A0      #014=ASF$QUERY_PSEUDO_FORMS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:10 Page:393  
     1593        1        /*T***********************************************************/
     1594        2        /*T*                                                         */
     1595        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1596        4        /*T*                                                         */
     1597        5        /*T***********************************************************/
     1598        6        %EJECT;
PL6.E3A0      #014=ASF$QUERY_PSEUDO_FORMS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:10 Page:394  
     1599        7        ASF$QUERY_PSEUDO_FORMS: PROC( FORM, PSEUDO_FORM_KEY, PSEUDO_FORM );
     1600        8
     1601        9
     1602       10    1   DCL 1 FORM,
     1603       11    1          2 CNT UBIN BYTE UNAL,
     1604       12    1          2 TXT CHAR(6) UNAL;
     1605       13    1   DCL 1 PSEUDO_FORM_KEY,
     1606       14    1          2 CNT UBIN BYTE UNAL,
     1607       15    1          2 TXT CHAR(12) UNAL;
     1608       16    1   DCL PSEUDO_FORM BIT(1) ALIGNED;
     1609       17    1   DCL ARS UBIN;
     1610       18
     1611       19        %INCLUDE AS_ENTRIES_M;
     1612     1069        %INCLUDE AS_SUPER_C;
     1613     1504        %INCLUDE KL_SUPER_C;
     1614     4406        %INCLUDE AS_SUBS_C;
     1615     5820        %INCLUDE AS_MAC_C;
     1616     5900        %INCLUDE XU_MACRO_C;
     1617     9006        %INCLUDE XU_FORMAT_C;
     1618     9168        %INCLUDE AS_SUPER_R;
     1619    12184    1   DCL PSEUDO_FORM_REC UBIN;
     1620    12185        %ASF$READ_FORM_SEQ ;
     1621    12188        %ASF$PREC_FORM ;
     1622    12191        %ASF$PREC_SKIP_FORM ;
     1623    12194
     1624    12195    1   PSEUDO_FORM = '0'B;         /* Assume there are no pseudo forms */
     1625    12196    1   USERS_KEY = FORM;
     1626    12197    1   USERS_KEY.COUNT = 7;
     1627    12198    1   CALL ASF$PREC_FORM( USERS_KEY );
     1628    12199    1   ARS = SIZEC(PSEUDO_FORM_REC);
     1629    12200    1   CALL ASF$READ_FORM_SEQ( ,ADDR(PSEUDO_FORM_REC), ARS ) ALTRET(EXIT#);
     1630    12201    1   IF USERS_KEY.COUNT = 12  AND  SUBSTR(USERS_KEY.TXTC,0,6) = FORM.TXT
     1631    12202    2   THEN DO;
     1632    12203    2      PSEUDO_FORM_KEY = USERS_KEY;
     1633    12204    2      PSEUDO_FORM = '1'B;
     1634    12205    2      END;
     1635    12206    1   EXIT#:
PL6.E3A0      #014=ASF$QUERY_PSEUDO_FORMS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:10 Page:395  
     1636    12207    1   USERS_KEY = FORM;
     1637    12208    1   CALL ASF$PREC_SKIP_FORM( USERS_KEY );
     1638    12209    1   RETURN;
     1639    12210
     1640    12211
     1641    12212    1   END ASF$QUERY_PSEUDO_FORMS;
     1642    12213        %EOD;

PL6.E3A0      #014=ASF$QUERY_PSEUDO_FORMS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:10 Page:396  
--  Include file information  --

   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ASF$QUERY_PSEUDO_FORMS.

   Procedure ASF$QUERY_PSEUDO_FORMS requires 53 words for executable code.
   Procedure ASF$QUERY_PSEUDO_FORMS requires 12 words of local(AUTO) storage.

PL6.E3A0      #014=ASF$QUERY_PSEUDO_FORMS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:10 Page:397  

 Object Unit name= ASF$QUERY_PSEUDO_FORMS                     File name= ASB$EXT.:E05TOU
 UTS= JUL 29 '97 09:10:34.28 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$LO
    1   Proc  even  none    53     65  ASF$QUERY_PSEUDO_FORMS
    2  RoData even  none     1      1  ASF$QUERY_PSEUDO_FORMS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        3  ASF$QUERY_PSEUDO_FORMS

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 XU_OUTPUT_OPTIONS
 yes     yes           Std       1 ASF$PREC_SKIP_FORM
 yes     yes           Std       1 ASF$PREC_FORM
 yes     yes           Std       3 ASF$READ_FORM_SEQ
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #014=ASF$QUERY_PSEUDO_FORMS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:10 Page:398  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    AS_MODE                          r    AS_FE_MODE                            M$LO
     USERS_KEY                             ERR_CODE                              REMEM_VAR
     REM_FCMD                              ASA_BRKS_LOC                          B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #014=ASF$QUERY_PSEUDO_FORMS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:10 Page:399  


     1593        1        /*T***********************************************************/
     1594        2        /*T*                                                         */
     1595        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1596        4        /*T*                                                         */
     1597        5        /*T***********************************************************/
     1598        6        %EJECT;
PL6.E3A0      #014=ASF$QUERY_PSEUDO_FORMS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:10 Page:400  
     1599        7        ASF$QUERY_PSEUDO_FORMS: PROC( FORM, PSEUDO_FORM_KEY, PSEUDO_FORM );

      7  1 000000   000000 700200 xent  ASF$QUERY_P* TSX0  ! X66_AUTO_3
         1 000001   000014 000003                    ZERO    12,3

     1600        8
     1601        9
     1602       10    1   DCL 1 FORM,
     1603       11    1          2 CNT UBIN BYTE UNAL,
     1604       12    1          2 TXT CHAR(6) UNAL;
     1605       13    1   DCL 1 PSEUDO_FORM_KEY,
     1606       14    1          2 CNT UBIN BYTE UNAL,
     1607       15    1          2 TXT CHAR(12) UNAL;
     1608       16    1   DCL PSEUDO_FORM BIT(1) ALIGNED;
     1609       17    1   DCL ARS UBIN;
     1610       18
     1611       19        %INCLUDE AS_ENTRIES_M;
     1612     1069        %INCLUDE AS_SUPER_C;
     1613     1504        %INCLUDE KL_SUPER_C;
     1614     4406        %INCLUDE AS_SUBS_C;
     1615     5820        %INCLUDE AS_MAC_C;
     1616     5900        %INCLUDE XU_MACRO_C;
     1617     9006        %INCLUDE XU_FORMAT_C;
     1618     9168        %INCLUDE AS_SUPER_R;
     1619    12184    1   DCL PSEUDO_FORM_REC UBIN;
     1620    12185        %ASF$READ_FORM_SEQ ;
     1621    12188        %ASF$PREC_FORM ;
     1622    12191        %ASF$PREC_SKIP_FORM ;
     1623    12194
     1624    12195    1   PSEUDO_FORM = '0'B;         /* Assume there are no pseudo forms */

  12195  1 000002   200005 470500                    LDP0    @PSEUDO_FORM,,AUTO
         1 000003   000000 450100                    STZ     0,,PR0

     1625    12196    1   USERS_KEY = FORM;

  12196  1 000004   200003 471500                    LDP1    @FORM,,AUTO
PL6.E3A0      #014=ASF$QUERY_PSEUDO_FORMS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:10 Page:401  
         1 000005   000000 100500                    MLR     fill='000'O
         1 000006   100000 000007                    ADSC9   0,,PR1                   cn=0,n=7
         1 000007   000000 000052 xsym               ADSC9   USERS_KEY                cn=0,n=42

     1626    12197    1   USERS_KEY.COUNT = 7;

  12197  1 000010   007000 236003                    LDQ     3584,DU
         1 000011   000000 552040 xsym               STBQ    USERS_KEY,'40'O

     1627    12198    1   CALL ASF$PREC_FORM( USERS_KEY );

  12198  1 000012   000000 630400 2                  EPPR0   0
         1 000013   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000014   000000 701000 xent               TSX1    ASF$PREC_FORM
         1 000015   000000 011000                    NOP     0

     1628    12199    1   ARS = SIZEC(PSEUDO_FORM_REC);

  12199  1 000016   000004 235007                    LDA     4,DL
         1 000017   200006 755100                    STA     ARS,,AUTO

     1629    12200    1   CALL ASF$READ_FORM_SEQ( ,ADDR(PSEUDO_FORM_REC), ARS ) ALTRET(EXIT#);

  12200  1 000020   200007 630500                    EPPR0   PSEUDO_FORM_REC,,AUTO
         1 000021   200010 450500                    STP0    PSEUDO_FORM_REC+1,,AUTO
         1 000022   200006 631500                    EPPR1   ARS,,AUTO
         1 000023   200013 451500                    STP1    PSEUDO_FORM_REC+4,,AUTO
         1 000024   200010 633500                    EPPR3   PSEUDO_FORM_REC+1,,AUTO
         1 000025   200012 453500                    STP3    PSEUDO_FORM_REC+3,,AUTO
         1 000026   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000027   200011 756100                    STQ     PSEUDO_FORM_REC+2,,AUTO
         1 000030   200011 630500                    EPPR0   PSEUDO_FORM_REC+2,,AUTO
         1 000031   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000032   000000 701000 xent               TSX1    ASF$READ_FORM_SEQ
         1 000033   000054 702000 1                  TSX2    EXIT#

     1630    12201    1   IF USERS_KEY.COUNT = 12  AND  SUBSTR(USERS_KEY.TXTC,0,6) = FORM.TXT
PL6.E3A0      #014=ASF$QUERY_PSEUDO_FORMS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:10 Page:402  

  12201  1 000034   000000 236000 xsym               LDQ     USERS_KEY
         1 000035   777000 376003                    ANQ     -512,DU
         1 000036   014000 116003                    CMPQ    6144,DU
         1 000037   000054 601000 1                  TNZ     EXIT#
         1 000040   200003 470500                    LDP0    @FORM,,AUTO
         1 000041   040100 106400                    CMPC    fill='040'O
         1 000042   000000 200006 xsym               ADSC9   USERS_KEY                cn=1,n=6
         1 000043   000000 200006                    ADSC9   0,,PR0                   cn=1,n=6
         1 000044   000054 601000 1                  TNZ     EXIT#

     1631    12202    2   THEN DO;

     1632    12203    2      PSEUDO_FORM_KEY = USERS_KEY;

  12203  1 000045   200004 471500                    LDP1    @PSEUDO_FORM_KEY,,AUTO
         1 000046   000100 100400                    MLR     fill='000'O
         1 000047   000000 000015 xsym               ADSC9   USERS_KEY                cn=0,n=13
         1 000050   100000 000015                    ADSC9   0,,PR1                   cn=0,n=13

     1633    12204    2      PSEUDO_FORM = '1'B;

  12204  1 000051   400000 236003                    LDQ     -131072,DU
         1 000052   200005 473500                    LDP3    @PSEUDO_FORM,,AUTO
         1 000053   300000 756100                    STQ     0,,PR3

     1634    12205    2      END;

     1635    12206    1   EXIT#:
     1636    12207    1   USERS_KEY = FORM;

  12207  1 000054   200003 470500       EXIT#        LDP0    @FORM,,AUTO
         1 000055   000000 100500                    MLR     fill='000'O
         1 000056   000000 000007                    ADSC9   0,,PR0                   cn=0,n=7
         1 000057   000000 000052 xsym               ADSC9   USERS_KEY                cn=0,n=42

     1637    12208    1   CALL ASF$PREC_SKIP_FORM( USERS_KEY );
PL6.E3A0      #014=ASF$QUERY_PSEUDO_FORMS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:10 Page:403  

  12208  1 000060   000000 630400 2                  EPPR0   0
         1 000061   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000062   000000 701000 xent               TSX1    ASF$PREC_SKIP_FORM
         1 000063   000000 011000                    NOP     0

     1638    12209    1   RETURN;

  12209  1 000064   000000 702200 xent               TSX2  ! X66_ARET
     1639    12210
     1640    12211
     1641    12212    1   END ASF$QUERY_PSEUDO_FORMS;
     1642    12213        %EOD;

PL6.E3A0      #014=ASF$QUERY_PSEUDO_FORMS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:10 Page:404  
--  Include file information  --

   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ASF$QUERY_PSEUDO_FORMS.
PL6.E3A0      #014=ASF$QUERY_PSEUDO_FORMS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:10 Page:405  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @FORM                      5-0-0/w PTR         r     1 @PSEUDO_FORM
     4-0-0/w PTR         r     1 @PSEUDO_FORM_KEY           6-0-0/w UBIN        r     1 ARS
    *0-0-0/c STRC(63)    r     1 FORM                      *0-0-0/w BIT         r     1 PSEUDO_FORM
    *0-0-0/c STRC(117)   r     1 PSEUDO_FORM_KEY            7-0-0/w UBIN        r     1 PSEUDO_FORM_REC

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(378)   r     1 USERS_KEY


   Procedure ASF$QUERY_PSEUDO_FORMS requires 53 words for executable code.
   Procedure ASF$QUERY_PSEUDO_FORMS requires 12 words of local(AUTO) storage.
PL6.E3A0      #014=ASF$QUERY_PSEUDO_FORMS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:10 Page:406  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #014=ASF$QUERY_PSEUDO_FORMS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:10 Page:407  
          MINI XREF LISTING

ARS
        17**DCL     12199<<ASSIGN  12200<>CALL
ASA_BRKS_LOC
      9332**DCL      9332--REDEF
ASF$PREC_FORM
     12189**DCL-ENT 12198--CALL
ASF$PREC_SKIP_FORM
     12192**DCL-ENT 12208--CALL
ASF$READ_FORM_SEQ
     12186**DCL-ENT 12200--CALL
AS_DEFAULT.BANNER_PERM
     10025**DCL     10026--REDEF
AS_DEFAULT.BUDGET.MACCT
      9930**DCL      9934--REDEF
AS_DEFAULT.BUDGET.MAX_PROJECTS
      9943**DCL      9946--REDEF
AS_DEFAULT.BUDGET.PACCUM
      9926**DCL      9928--REDEF
AS_DEFAULT.BUDGET.PMAXC
      9921**DCL      9923--REDEF
AS_DEFAULT.SETUP_CHRA.TXT
     10041**DCL     10042--REDEF   10043--REDEF
AS_DEFAULT_DREC.PASSWORD
     11295**DCL     11299--REDEF
AS_DEFAULT_DREC.RENAME
     11318**DCL     11319--REDEF
AS_DFLT.BANNER_PERM
      9847**DCL      9848--REDEF
AS_DFLT.BUDGET.MACCT
      9752**DCL      9756--REDEF
AS_DFLT.BUDGET.MAX_PROJECTS
      9765**DCL      9768--REDEF
PL6.E3A0      #014=ASF$QUERY_PSEUDO_FORMS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:10 Page:408  
AS_DFLT.BUDGET.PACCUM
      9748**DCL      9750--REDEF
AS_DFLT.BUDGET.PMAXC
      9743**DCL      9745--REDEF
AS_DFLT.SETUP_CHRA.TXT
      9863**DCL      9864--REDEF    9865--REDEF
AS_FE_MODE
      9198**DCL      9199--REDEF
AS_MODE
      9195**DCL      9197--REDEF
AS_MOD_USER.ACCESS
     12060**DCL     12061--REDEF
AS_MOD_USER.BANNER
     12047**DCL     12048--REDEF
AS_MOD_USER.BANNER_PERM
     12049**DCL     12050--REDEF
AS_MOD_USER.BILL
     12055**DCL     12056--REDEF
AS_MOD_USER.CPROC
     12051**DCL     12052--REDEF
AS_MOD_USER.FEBILL
     12131**DCL     12132--REDEF
AS_MOD_USER.FECXTMEM
     12148**DCL     12149--REDEF
AS_MOD_USER.FEMINTS
     12133**DCL     12134--REDEF
AS_MOD_USER.FEMMEM
     12144**DCL     12145--REDEF
AS_MOD_USER.FEMTIME
     12142**DCL     12143--REDEF
AS_MOD_USER.FEPPRIV
     12139**DCL     12141--REDEF
AS_MOD_USER.FEPRIV
     12136**DCL     12138--REDEF
AS_MOD_USER.FORCE_BIT
     12045**DCL     12046--REDEF
PL6.E3A0      #014=ASF$QUERY_PSEUDO_FORMS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:10 Page:409  
AS_MOD_USER.KEY
     12127**DCL     12129--REDEF
AS_MOD_USER.LASTCPROC
     12053**DCL     12054--REDEF
AS_MOD_USER.LIMITS.DO_
     12101**DCL     12102--REDEF
AS_MOD_USER.LIMITS.FPOOLS
     12117**DCL     12118--REDEF
AS_MOD_USER.LIMITS.LO
     12097**DCL     12098--REDEF
AS_MOD_USER.LIMITS.MEM
     12093**DCL     12094--REDEF
AS_MOD_USER.LIMITS.MPRIO
     12121**DCL     12122--REDEF
AS_MOD_USER.LIMITS.PDIS
     12109**DCL     12110--REDEF
AS_MOD_USER.LIMITS.PO
     12105**DCL     12106--REDEF
AS_MOD_USER.LIMITS.TDIS
     12113**DCL     12114--REDEF
AS_MOD_USER.LIMITS.TIME
     12089**DCL     12090--REDEF
AS_MOD_USER.MAXENQ
     12070**DCL     12071--REDEF
AS_MOD_USER.PERM_BIT
     12043**DCL     12044--REDEF
AS_MOD_USER.PPRIV
     12065**DCL     12067--REDEF
AS_MOD_USER.PRIOB
     12072**DCL     12073--REDEF
AS_MOD_USER.PRIV
     12062**DCL     12064--REDEF
AS_MOD_USER.QUAN
     12068**DCL     12069--REDEF
AS_MOD_USER.SETUP
     12041**DCL     12042--REDEF
PL6.E3A0      #014=ASF$QUERY_PSEUDO_FORMS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:10 Page:410  
AS_PROJECT.BANNER_PERM
     10381**DCL     10382--REDEF
AS_PROJECT.BUDGET.MACCT
     10286**DCL     10290--REDEF
AS_PROJECT.BUDGET.MAX_PROJECTS
     10299**DCL     10302--REDEF
AS_PROJECT.BUDGET.PACCUM
     10282**DCL     10284--REDEF
AS_PROJECT.BUDGET.PMAXC
     10277**DCL     10279--REDEF
AS_PROJECT.SETUP_CHRA.TXT
     10397**DCL     10398--REDEF   10399--REDEF
AS_PROJECT_DFLT.BANNER_PERM
     10559**DCL     10560--REDEF
AS_PROJECT_DFLT.BUDGET.MACCT
     10464**DCL     10468--REDEF
AS_PROJECT_DFLT.BUDGET.MAX_PROJECTS
     10477**DCL     10480--REDEF
AS_PROJECT_DFLT.BUDGET.PACCUM
     10460**DCL     10462--REDEF
AS_PROJECT_DFLT.BUDGET.PMAXC
     10455**DCL     10457--REDEF
AS_PROJECT_DFLT.SETUP_CHRA.TXT
     10575**DCL     10576--REDEF   10577--REDEF
AS_PROJECT_DFLT_DREC.PASSWORD
     11781**DCL     11785--REDEF
AS_PROJECT_DFLT_DREC.RENAME
     11804**DCL     11805--REDEF
AS_PROJECT_DREC.PASSWORD
     11619**DCL     11623--REDEF
AS_PROJECT_DREC.RENAME
     11642**DCL     11643--REDEF
AS_PROJ_ADMIN.BANNER_PERM
     10203**DCL     10204--REDEF
AS_PROJ_ADMIN.BUDGET.MACCT
     10108**DCL     10112--REDEF
PL6.E3A0      #014=ASF$QUERY_PSEUDO_FORMS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:10 Page:411  
AS_PROJ_ADMIN.BUDGET.MAX_PROJECTS
     10121**DCL     10124--REDEF
AS_PROJ_ADMIN.BUDGET.PACCUM
     10104**DCL     10106--REDEF
AS_PROJ_ADMIN.BUDGET.PMAXC
     10099**DCL     10101--REDEF
AS_PROJ_ADMIN.SETUP_CHRA.TXT
     10219**DCL     10220--REDEF   10221--REDEF
AS_PROJ_ADMIN_DREC.PASSWORD
     11457**DCL     11461--REDEF
AS_PROJ_ADMIN_DREC.RENAME
     11480**DCL     11481--REDEF
AS_USERS.BANNER_PERM
      9669**DCL      9670--REDEF
AS_USERS.BUDGET.MACCT
      9574**DCL      9578--REDEF
AS_USERS.BUDGET.MAX_PROJECTS
      9587**DCL      9590--REDEF
AS_USERS.BUDGET.PACCUM
      9570**DCL      9572--REDEF
AS_USERS.BUDGET.PMAXC
      9565**DCL      9567--REDEF
AS_USERS.SETUP_CHRA.TXT
      9685**DCL      9686--REDEF    9687--REDEF
AS_USERS_CONSTANT.BANNER_PERM
     10737**DCL     10738--REDEF
AS_USERS_CONSTANT.BUDGET.MACCT
     10642**DCL     10646--REDEF
AS_USERS_CONSTANT.BUDGET.MAX_PROJECTS
     10655**DCL     10658--REDEF
AS_USERS_CONSTANT.BUDGET.PACCUM
     10638**DCL     10640--REDEF
AS_USERS_CONSTANT.BUDGET.PMAXC
     10633**DCL     10635--REDEF
AS_USERS_CONSTANT.SETUP_CHRA.TXT
     10753**DCL     10754--REDEF   10755--REDEF
PL6.E3A0      #014=ASF$QUERY_PSEUDO_FORMS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:10 Page:412  
ERR_CODE
      9327**DCL      9328--REDEF
EXIT#
     12207**LABEL   12200--CALLALT
FORM
        10**DCL         7--PROC    12196>>ASSIGN  12207>>ASSIGN
FORM.TXT
        12**DCL     12201>>IF
KL_DEFAULT.PASSWORD
     11943**DCL     11947--REDEF
KL_DEFAULT.RENAME
     11966**DCL     11967--REDEF
KL_DFLT.PASSWORD
     11133**DCL     11137--REDEF
KL_DFLT.RENAME
     11156**DCL     11157--REDEF
KL_DREC.PASSWORD
     10971**DCL     10975--REDEF
KL_DREC.RENAME
     10994**DCL     10995--REDEF
KL_DREC_CNT.PASSWORD
     10858**DCL     10862--REDEF
KL_DREC_CNT.RENAME
     10881**DCL     10882--REDEF
PROJ_KEY.TEXT
      9205**DCL      9205--REDEF
PROJ_KEY.TXT.PROJECT
      9205**DCL      9205--REDEF
PSEUDO_FORM
        16**DCL         7--PROC    12195<<ASSIGN  12204<<ASSIGN
PSEUDO_FORM_KEY
        13**DCL         7--PROC    12203<<ASSIGN
PSEUDO_FORM_REC
     12184**DCL     12199--ASSIGN  12200--CALL
REMEM_VAR
      9331**DCL      9331--REDEF
PL6.E3A0      #014=ASF$QUERY_PSEUDO_FORMS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:10 Page:413  
REM_FCMD
      9331**DCL      9332--REDEF
USERS_KEY
      9202**DCL     12196<<ASSIGN  12198<>CALL    12203>>ASSIGN  12207<<ASSIGN  12208<>CALL
USERS_KEY.COUNT
      9202**DCL     12197<<ASSIGN  12201>>IF
USERS_KEY.TEXT
      9202**DCL      9203--REDEF    9203--REDEF    9203--REDEF    9204--REDEF
USERS_KEY.TXTC
      9203**DCL     12201>>IF

PL6.E3A0      #015=GET_CONFIGS_LP01_ATTRS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:11 Page:414  
     1643        1        /*T***********************************************************/
     1644        2        /*T*                                                         */
     1645        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1646        4        /*T*                                                         */
     1647        5        /*T***********************************************************/
     1648        6        %EJECT;
PL6.E3A0      #015=GET_CONFIGS_LP01_ATTRS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:11 Page:415  
     1649        7        /*I*
     1650        8             NAME: GET_CONFIGS_LP01_ATTRS
     1651        9             PURPOSE:
     1652       10                  To get the attributes of LP01 from the :CONFIG file and return them
     1653       11                  in the parameter field.
     1654       12             CALL:
     1655       13                  CALL GET_CONFIGS_LP01_ATTRS (BIT18_ATTRS) ALTRET (NO_LP01);
     1656       14             PARAMETERS:
     1657       15                  BIT18_ATTRS -A Bit (18) field which will contain the attributes of
     1658       16                  LP01.  If this routine altreturns, the contents of this field are
     1659       17                  undefined.
     1660       18             DATA:
     1661       19                  If this routine gets an unknown error (ie. the '0'O record of :CONFIG
     1662       20                  is missing, or the LP01 record is not there and should be, or open or
     1663       21                  close problems) a call is made to ASH$ERROR to handle the surprise.
     1664       22             DESCRIPTION:
     1665       23                  This routine will ONLY get the 18 bit attribute field from the LP01
     1666       24                  record in :CONFIG and return it in the parameter.  This field should
     1667       25                  be aligned.
     1668       26        */
     1669       27
     1670       28        GET_CONFIGS_LP01_ATTRS: PROC (ATTRIBUTES) ALTRET ;
     1671       29    1   DCL ATTRIBUTES BIT (18) ALIGNED;
     1672       30        %INCLUDE AS_PERR_C;
     1673      632        %INCLUDE TD$STRUCT ;
     1674      733        %INCLUDE AS_ENTRIES_M;
     1675     1783        %INCLUDE CP_6;
     1676     1864        %INCLUDE CP_6_SUBS;
     1677     2404        %INCLUDE AS_SUPER_C;
     1678     2839        %INCLUDE KL_SUPER_C;
     1679     5741        %INCLUDE AS_SUBS_C;
     1680     7155        %INCLUDE AS_MAC_C;
     1681     7235        %INCLUDE B_ERRORS_C;
     1682     8362        %INCLUDE XU_MACRO_C;
     1683    11468        %INCLUDE XU_FORMAT_C;
     1684    11630        %INCLUDE AS_SUPER_R;
     1685    14646        %INCLUDE XG_SUBS_C ;
PL6.E3A0      #015=GET_CONFIGS_LP01_ATTRS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:11 Page:416  
     1686    15140
     1687    15141    1   DCL 1 FILE_NAME CONSTANT ,
     1688    15142    1          2 COUNT UBIN(9) UNAL INIT(7) ,
     1689    15143    1          2 TEXT CHAR(31) UNAL INIT(':CONFIG') ;
     1690    15144
     1691    15145    1   DCL B$TCB$ PTR SYMREF ;
     1692    15146
     1693    15147        %FPT_OPEN(  FPTN = OPEN_FPT ,
     1694    15148                    NAME = FILE_NAME ,
     1695    15149                    ACCT = FILE_ACCT ,
     1696    15150                    ASN = FILE ,
     1697    15151                    DCB = M$CNFG ,
     1698    15152                    ACS = DIRECT ,
     1699    15153                    ORG = KEYED ,
     1700    15154                    FUN = IN ,
     1701    15155                    SHARE = ALL ) ;
     1702    15264        %FPT_CLOSE( FPTN = CLOSE_FPT ,
     1703    15265                    DCB = M$CNFG ,
     1704    15266                    DISP = SAVE ) ;
     1705    15308
     1706    15309    1   DCL M$CNFG DCB ;                  /* Read dcb for :CONFIG */
     1707    15310    1   DCL M$CNFG$ PTR ;
     1708    15311
     1709    15312    1   DCL I UBIN WORD ;
     1710    15313    1   DCL J UBIN WORD ;
     1711    15314    1   DCL HEAD$ PTR ;
     1712    15315    1   DCL ARS UBIN WORD ;
     1713    15316    1   DCL 1 KEY ALIGNED ,
     1714    15317    1          2 CNT UBIN BYTE UNAL ,
     1715    15318    1          2 TXT CHAR(12) UNAL ;
     1716    15319
     1717    15320        %ASH$ERROR ;
     1718    15323        %ASB$GETSEG ;
     1719    15326
     1720    15327        %B$ALT ;
     1721    15335        %B$TCB ;
     1722    15338        %TD$HEAD( NAME = TD$HEAD ,
PL6.E3A0      #015=GET_CONFIGS_LP01_ATTRS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:11 Page:417  
     1723    15339                  STCLASS="BASED( HEAD$ )") ;
     1724    15375        %TD$DEV(  NAME = TD$DEV ,
     1725    15376                  STCLASS="BASED( HEAD$ )") ;
     1726    15395        %EJECT ;
PL6.E3A0      #015=GET_CONFIGS_LP01_ATTRS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:11 Page:418  
     1727    15396        /*
     1728    15397            ***            Begin procedure                    ***
     1729    15398        */
     1730    15399    1   IF NOT DSEG_FLG THEN
     1731    15400    1      CALL ASB$GETSEG
     1732    15401    2      WHENALTRETURN DO;
     1733    15402              %SCREAM( ERR#=%E$GETSEGERR ,MID='F',LEVEL=ERROR);
     1734    15417    2         RETURN ;
     1735    15418    2         END ; /* Do whenaltreturn */
     1736    15419                                                        /* Open :CONFIG */
     1737    15420    1   CALL M$OPEN( OPEN_FPT ) ALTRET (UNKNOWN_ERR ) ;
     1738    15421
     1739    15422    1   HEAD$ = DSEG1$;
     1740    15423    1   ARS = DSEG1SIZE - 4 * 1024 ;
     1741    15424    1   KEY = '0'B ;
     1742    15425    1   KEY.CNT = 1 ;
     1743    15426    1   CALL READ_CONFIG( KEY, HEAD$, ARS ) ALTRET (UNKNOWN_ERR);
     1744    15427    1   IF TD$HEAD.NUMLPS = 0
     1745    15428    2   THEN DO;
     1746    15429    2      ALTRETURN;
     1747    15430    2      END;
     1748    15431    1   KEY.CNT = 8;
     1749    15432    1   KEY.TXT = TD$HEAD.DEVNAME (TD$HEAD.LP_INDX);
     1750    15433    1   CALL READ_CONFIG( KEY, HEAD$, ARS ) ALTRET (UNKNOWN_ERR);
     1751    15434    1   ATTRIBUTES = TD$DEV.ATTR;
     1752    15435
     1753    15436    1   CALL M$CLOSE( CLOSE_FPT ) ;
     1754    15437    1   RETURN ;
     1755    15438
     1756    15439        /* A monitor call altreturned, we dont know how to handle it!! */
     1757    15440    1   UNKNOWN_ERR: ;
     1758    15441    1   ERR_CODE = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR ;
     1759    15442    1   CALL ASH$ERROR( ERR_CODE ) ;
     1760    15443    1   RETURN ;
     1761    15444
     1762    15445        %EJECT ;
PL6.E3A0      #015=GET_CONFIGS_LP01_ATTRS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:11 Page:419  
     1763    15446        /*I*
     1764    15447             NAME: READ_CONFIG
     1765    15448             PURPOSE:
     1766    15449                  Read a record from the :CONFIG file and return it with the its size.
     1767    15450             CALL:
     1768    15451                  CALL READ_CONFIG (KEY, BUF$, ARS) ALTRET (MON_ERR);
     1769    15452             PARAMETERS:
     1770    15453                  KEY - the CP-6 key of the record to be read from :CONFIG.
     1771    15454                  BUF$- A pointer to the area to read the record into.
     1772    15455                  ARS - Here is where we return the size of the record read.
     1773    15456             DATA:
     1774    15457                  The altreturn is taken if the M$READ altrets.  If this occurs, the
     1775    15458                  global value ERR_CODE is set with the error code from the JIT.
     1776    15459             DESCRIPTION:
     1777    15460                  Read the record whose key is KEY into the area pointed to by BUF$,
     1778    15461                  and return the size of the record read in ARS.  If this routine
     1779    15462                  altrets, the contents of ARS are undefined.
     1780    15463        */
     1781    15464    1   READ_CONFIG: PROC( KEY, BUF$, SIZE ) ALTRET ;
     1782    15465    2   DCL 1 KEY ,
     1783    15466    2          2 CNT UBIN BYTE UNAL ,
     1784    15467    2          2 TXT CHAR(31) UNAL ;
     1785    15468    2   DCL BUF$ PTR ;
     1786    15469    2   DCL SIZE UBIN WORD ;
     1787    15470
     1788    15471        %FPT_READ(  FPTN = READ_FPT ,
     1789    15472                    DCB = M$CNFG ,
     1790    15473                    KEYS = YES ) ;
     1791    15512
     1792    15513        %INCLUDE F$DCB ;
     1793    15562        /*
     1794    15563                        Set BUF$ in read fpt
     1795    15564        */
     1796    15565    2   READ_FPT.BUF_.BUF$ = BUF$ ;
     1797    15566    2   READ_FPT.BUF_.BOUND = SIZE - 1;
     1798    15567    2   READ_FPT.KEY_ = VECTOR( KEY ) ;
     1799    15568    2   CALL M$READ( READ_FPT ) ALTRET( READ_ERR ) ;
PL6.E3A0      #015=GET_CONFIGS_LP01_ATTRS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:11 Page:420  
     1800    15569    2   M$CNFG$ = DCBADDR( DCBNUM( M$CNFG ) ) ;
     1801    15570    2   ARS = M$CNFG$ -> F$DCB.ARS ;
     1802    15571    2   RETURN ;
     1803    15572
     1804    15573    2   READ_ERR: ;
     1805    15574    2   ERR_CODE = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR ;
     1806    15575    2   ALTRETURN ;
     1807    15576
     1808    15577    2   END READ_CONFIG ;
     1809    15578    1   END GET_CONFIGS_LP01_ATTRS;

PL6.E3A0      #015=GET_CONFIGS_LP01_ATTRS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:11 Page:421  
--  Include file information  --

   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   XG_SUBS_C.:E05TOU  is referenced.
   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   TD$STRUCT.:E05TOU  is referenced.
   AS_PERR_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GET_CONFIGS_LP01_ATTRS.

   Procedure GET_CONFIGS_LP01_ATTRS requires 107 words for executable code.
   Procedure GET_CONFIGS_LP01_ATTRS requires 18 words of local(AUTO) storage.

    No errors detected in file ASB$EXT.:E05TSI    .

PL6.E3A0      #015=GET_CONFIGS_LP01_ATTRS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:11 Page:422  

 Object Unit name= GET_CONFIGS_LP01_ATTRS                     File name= ASB$EXT.:E05TOU
 UTS= JUL 29 '97 09:11:31.12 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$LO
    2  RoData even  UTS      9     11  GET_CONFIGS_LP01_ATTRS
    3   Data  even  none   102    146  GET_CONFIGS_LP01_ATTRS
    4   DCB   even  none     0      0  M$CNFG
    5   Proc  even  none   107    153  GET_CONFIGS_LP01_ATTRS
    6  RoData even  none     4      4  GET_CONFIGS_LP01_ATTRS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     5      0   yes    yes     yes      Std        1  GET_CONFIGS_LP01_ATTRS

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 XU_OUTPUT_OPTIONS
 yes     yes           Std       0 ASB$GETSEG
         yes           Std       2 ASH$ERROR
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #015=GET_CONFIGS_LP01_ATTRS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:11 Page:423  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    AS_MODE                          r    AS_FE_MODE
     M$LO                                  ERR_CODE                              REMEM_VAR
     REM_FCMD                              ASA_BRKS_LOC                          DSEG_FLG
     DSEG1$                                DSEG1SIZE                             FILE_ACCT
     B$TCB$                                M$CNFG                                B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #015=GET_CONFIGS_LP01_ATTRS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:11 Page:424  


     1643        1        /*T***********************************************************/
     1644        2        /*T*                                                         */
     1645        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1646        4        /*T*                                                         */
     1647        5        /*T***********************************************************/
     1648        6        %EJECT;
PL6.E3A0      #015=GET_CONFIGS_LP01_ATTRS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:11 Page:425  
     1649        7        /*I*
     1650        8             NAME: GET_CONFIGS_LP01_ATTRS
     1651        9             PURPOSE:
     1652       10                  To get the attributes of LP01 from the :CONFIG file and return them
     1653       11                  in the parameter field.
     1654       12             CALL:
     1655       13                  CALL GET_CONFIGS_LP01_ATTRS (BIT18_ATTRS) ALTRET (NO_LP01);
     1656       14             PARAMETERS:
     1657       15                  BIT18_ATTRS -A Bit (18) field which will contain the attributes of
     1658       16                  LP01.  If this routine altreturns, the contents of this field are
     1659       17                  undefined.
     1660       18             DATA:
     1661       19                  If this routine gets an unknown error (ie. the '0'O record of :CONFIG
     1662       20                  is missing, or the LP01 record is not there and should be, or open or
     1663       21                  close problems) a call is made to ASH$ERROR to handle the surprise.
     1664       22             DESCRIPTION:
     1665       23                  This routine will ONLY get the 18 bit attribute field from the LP01
     1666       24                  record in :CONFIG and return it in the parameter.  This field should
     1667       25                  be aligned.
     1668       26        */
     1669       27
     1670       28        GET_CONFIGS_LP01_ATTRS: PROC (ATTRIBUTES) ALTRET ;

     28  5 000000   000000 700200 xent  GET_CONFIGS* TSX0  ! X66_AUTO_1
         5 000001   000022 000001                    ZERO    18,1

     1671       29    1   DCL ATTRIBUTES BIT (18) ALIGNED;
     1672       30        %INCLUDE AS_PERR_C;
     1673      632        %INCLUDE TD$STRUCT ;
     1674      733        %INCLUDE AS_ENTRIES_M;
     1675     1783        %INCLUDE CP_6;
     1676     1864        %INCLUDE CP_6_SUBS;
     1677     2404        %INCLUDE AS_SUPER_C;
     1678     2839        %INCLUDE KL_SUPER_C;
     1679     5741        %INCLUDE AS_SUBS_C;
     1680     7155        %INCLUDE AS_MAC_C;
     1681     7235        %INCLUDE B_ERRORS_C;
PL6.E3A0      #015=GET_CONFIGS_LP01_ATTRS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:11 Page:426  
     1682     8362        %INCLUDE XU_MACRO_C;
     1683    11468        %INCLUDE XU_FORMAT_C;
     1684    11630        %INCLUDE AS_SUPER_R;
     1685    14646        %INCLUDE XG_SUBS_C ;
     1686    15140
     1687    15141    1   DCL 1 FILE_NAME CONSTANT ,
     1688    15142    1          2 COUNT UBIN(9) UNAL INIT(7) ,
     1689    15143    1          2 TEXT CHAR(31) UNAL INIT(':CONFIG') ;
     1690    15144
     1691    15145    1   DCL B$TCB$ PTR SYMREF ;
     1692    15146
     1693    15147        %FPT_OPEN(  FPTN = OPEN_FPT ,
     1694    15148                    NAME = FILE_NAME ,
     1695    15149                    ACCT = FILE_ACCT ,
     1696    15150                    ASN = FILE ,
     1697    15151                    DCB = M$CNFG ,
     1698    15152                    ACS = DIRECT ,
     1699    15153                    ORG = KEYED ,
     1700    15154                    FUN = IN ,
     1701    15155                    SHARE = ALL ) ;
     1702    15264        %FPT_CLOSE( FPTN = CLOSE_FPT ,
     1703    15265                    DCB = M$CNFG ,
     1704    15266                    DISP = SAVE ) ;
     1705    15308
     1706    15309    1   DCL M$CNFG DCB ;                  /* Read dcb for :CONFIG */
     1707    15310    1   DCL M$CNFG$ PTR ;
     1708    15311
     1709    15312    1   DCL I UBIN WORD ;
     1710    15313    1   DCL J UBIN WORD ;
     1711    15314    1   DCL HEAD$ PTR ;
     1712    15315    1   DCL ARS UBIN WORD ;
     1713    15316    1   DCL 1 KEY ALIGNED ,
     1714    15317    1          2 CNT UBIN BYTE UNAL ,
     1715    15318    1          2 TXT CHAR(12) UNAL ;
     1716    15319
     1717    15320        %ASH$ERROR ;
     1718    15323        %ASB$GETSEG ;
PL6.E3A0      #015=GET_CONFIGS_LP01_ATTRS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:11 Page:427  
     1719    15326
     1720    15327        %B$ALT ;
     1721    15335        %B$TCB ;
     1722    15338        %TD$HEAD( NAME = TD$HEAD ,
     1723    15339                  STCLASS="BASED( HEAD$ )") ;
     1724    15375        %TD$DEV(  NAME = TD$DEV ,
     1725    15376                  STCLASS="BASED( HEAD$ )") ;
     1726    15395        %EJECT ;
PL6.E3A0      #015=GET_CONFIGS_LP01_ATTRS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:11 Page:428  
     1727    15396        /*
     1728    15397            ***            Begin procedure                    ***
     1729    15398        */
     1730    15399    1   IF NOT DSEG_FLG THEN

  15399  5 000002   000000 234000 xsym               SZN     DSEG_FLG
         5 000003   000015 604000 5                  TMI     s:15420

     1731    15400    1      CALL ASB$GETSEG

  15400  5 000004   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000005   000000 701000 xent               TSX1    ASB$GETSEG
         5 000006   000010 702000 5                  TSX2    s:15414
         5 000007   000015 710000 5                  TRA     s:15420

     1732    15401    2      WHENALTRETURN DO;

     1733    15402              %SCREAM( ERR#=%E$GETSEGERR ,MID='F',LEVEL=ERROR);

  15414  5 000010   000000 630400 6                  EPPR0   0
         5 000011   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000012   000000 701000 xent               TSX1    ASH$ERROR
         5 000013   000000 011000                    NOP     0

     1734    15417    2         RETURN ;

  15417  5 000014   000000 702200 xent               TSX2  ! X66_ARET

     1735    15418    2         END ; /* Do whenaltreturn */
     1736    15419                                                        /* Open :CONFIG */
     1737    15420    1   CALL M$OPEN( OPEN_FPT ) ALTRET (UNKNOWN_ERR ) ;

  15420  5 000015   000000 630400 3                  EPPR0   OPEN_FPT
         5 000016   450000 713400                    CLIMB   alt,open
         5 000017   410400 401760                    pmme    nvectors=18
         5 000020   000100 702000 5                  TSX2    UNKNOWN_ERR

PL6.E3A0      #015=GET_CONFIGS_LP01_ATTRS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:11 Page:429  
     1738    15421
     1739    15422    1   HEAD$ = DSEG1$;

  15422  5 000021   000000 236000 xsym               LDQ     DSEG1$
         5 000022   200007 756100                    STQ     HEAD$,,AUTO

     1740    15423    1   ARS = DSEG1SIZE - 4 * 1024 ;

  15423  5 000023   000000 235000 xsym               LDA     DSEG1SIZE
         5 000024   010000 135007                    SBLA    4096,DL
         5 000025   200010 755100                    STA     ARS,,AUTO

     1741    15424    1   KEY = '0'B ;

  15424  5 000026   000100 100400                    MLR     fill='000'O
         5 000027   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         5 000030   200011 000015                    ADSC9   KEY,,AUTO                cn=0,n=13

     1742    15425    1   KEY.CNT = 1 ;

  15425  5 000031   001000 236003                    LDQ     512,DU
         5 000032   200011 552140                    STBQ    KEY,'40'O,AUTO

     1743    15426    1   CALL READ_CONFIG( KEY, HEAD$, ARS ) ALTRET (UNKNOWN_ERR);

  15426  5 000033   200010 630500                    EPPR0   ARS,,AUTO
         5 000034   200021 450500                    STP0    @BUF$+1,,AUTO
         5 000035   200007 631500                    EPPR1   HEAD$,,AUTO
         5 000036   200020 451500                    STP1    @KEY+1,,AUTO
         5 000037   200011 633500                    EPPR3   KEY,,AUTO
         5 000040   200017 453500                    STP3    KEY+6,,AUTO
         5 000041   000111 701000 5                  TSX1    READ_CONFIG
         5 000042   000100 702000 5                  TSX2    UNKNOWN_ERR

     1744    15427    1   IF TD$HEAD.NUMLPS = 0

  15427  5 000043   200007 470500                    LDP0    HEAD$,,AUTO
PL6.E3A0      #015=GET_CONFIGS_LP01_ATTRS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:11 Page:430  
         5 000044   000010 720100                    LXL0    8,,PR0
         5 000045   000047 601000 5                  TNZ     s:15431

     1745    15428    2   THEN DO;

     1746    15429    2      ALTRETURN;

  15429  5 000046   000000 702200 xent               TSX2  ! X66_AALT

     1747    15430    2      END;
     1748    15431    1   KEY.CNT = 8;

  15431  5 000047   010000 236003                    LDQ     4096,DU
         5 000050   200011 552140                    STBQ    KEY,'40'O,AUTO

     1749    15432    1   KEY.TXT = TD$HEAD.DEVNAME (TD$HEAD.LP_INDX);

  15432  5 000051   000010 220100                    LDX0    8,,PR0
         5 000052   000010 020100                    ADLX0   8,,PR0
         5 000053   000000 635010                    EAA     0,X0
         5 000054   000020 771000                    ARL     16
         5 000055   040100 100505                    MLR     fill='040'O
         5 000056   000020 000010                    ADSC9   16,A,PR0                 cn=0,n=8
         5 000057   200011 200014                    ADSC9   KEY,,AUTO                cn=1,n=12

     1750    15433    1   CALL READ_CONFIG( KEY, HEAD$, ARS ) ALTRET (UNKNOWN_ERR);

  15433  5 000060   200010 631500                    EPPR1   ARS,,AUTO
         5 000061   200021 451500                    STP1    @BUF$+1,,AUTO
         5 000062   200007 633500                    EPPR3   HEAD$,,AUTO
         5 000063   200020 453500                    STP3    @KEY+1,,AUTO
         5 000064   200011 634500                    EPPR4   KEY,,AUTO
         5 000065   200017 454500                    STP4    KEY+6,,AUTO
         5 000066   000111 701000 5                  TSX1    READ_CONFIG
         5 000067   000100 702000 5                  TSX2    UNKNOWN_ERR

     1751    15434    1   ATTRIBUTES = TD$DEV.ATTR;
PL6.E3A0      #015=GET_CONFIGS_LP01_ATTRS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:11 Page:431  

  15434  5 000070   200007 470500                    LDP0    HEAD$,,AUTO
         5 000071   000011 720100                    LXL0    9,,PR0
         5 000072   200003 471500                    LDP1    @ATTRIBUTES,,AUTO
         5 000073   100000 740100                    STX0    0,,PR1

     1752    15435
     1753    15436    1   CALL M$CLOSE( CLOSE_FPT ) ;

  15436  5 000074   000072 630400 3                  EPPR0   CLOSE_FPT
         5 000075   050001 713400                    CLIMB   close
         5 000076   406000 401760                    pmme    nvectors=13

     1754    15437    1   RETURN ;

  15437  5 000077   000000 702200 xent               TSX2  ! X66_ARET

  15434  5 000100                       UNKNOWN_ERR  null
     1755    15438
     1756    15439        /* A monitor call altreturned, we dont know how to handle it!! */
     1757    15440    1   UNKNOWN_ERR: ;
     1758    15441    1   ERR_CODE = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR ;

  15441  5 000100   000000 470400 xsym               LDP0    B$TCB$
         5 000101   000000 471500                    LDP1    0,,PR0
         5 000102   100102 236100                    LDQ     66,,PR1
         5 000103   000000 756000 xsym               STQ     ERR_CODE

     1759    15442    1   CALL ASH$ERROR( ERR_CODE ) ;

  15442  5 000104   000001 630400 6                  EPPR0   1
         5 000105   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000106   000000 701000 xent               TSX1    ASH$ERROR
         5 000107   000000 011000                    NOP     0

     1760    15443    1   RETURN ;

PL6.E3A0      #015=GET_CONFIGS_LP01_ATTRS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:11 Page:432  
  15443  5 000110   000000 702200 xent               TSX2  ! X66_ARET

     1761    15444
     1762    15445        %EJECT ;
PL6.E3A0      #015=GET_CONFIGS_LP01_ATTRS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:11 Page:433  
     1763    15446        /*I*
     1764    15447             NAME: READ_CONFIG
     1765    15448             PURPOSE:
     1766    15449                  Read a record from the :CONFIG file and return it with the its size.
     1767    15450             CALL:
     1768    15451                  CALL READ_CONFIG (KEY, BUF$, ARS) ALTRET (MON_ERR);
     1769    15452             PARAMETERS:
     1770    15453                  KEY - the CP-6 key of the record to be read from :CONFIG.
     1771    15454                  BUF$- A pointer to the area to read the record into.
     1772    15455                  ARS - Here is where we return the size of the record read.
     1773    15456             DATA:
     1774    15457                  The altreturn is taken if the M$READ altrets.  If this occurs, the
     1775    15458                  global value ERR_CODE is set with the error code from the JIT.
     1776    15459             DESCRIPTION:
     1777    15460                  Read the record whose key is KEY into the area pointed to by BUF$,
     1778    15461                  and return the size of the record read in ARS.  If this routine
     1779    15462                  altrets, the contents of ARS are undefined.
     1780    15463        */
     1781    15464    1   READ_CONFIG: PROC( KEY, BUF$, SIZE ) ALTRET ;

  15464  5 000111   200016 741300       READ_CONFIG  STX1  ! KEY+5,,AUTO

     1782    15465    2   DCL 1 KEY ,
     1783    15466    2          2 CNT UBIN BYTE UNAL ,
     1784    15467    2          2 TXT CHAR(31) UNAL ;
     1785    15468    2   DCL BUF$ PTR ;
     1786    15469    2   DCL SIZE UBIN WORD ;
     1787    15470
     1788    15471        %FPT_READ(  FPTN = READ_FPT ,
     1789    15472                    DCB = M$CNFG ,
     1790    15473                    KEYS = YES ) ;
     1791    15512
     1792    15513        %INCLUDE F$DCB ;
     1793    15562        /*
     1794    15563                        Set BUF$ in read fpt
     1795    15564        */
     1796    15565    2   READ_FPT.BUF_.BUF$ = BUF$ ;
PL6.E3A0      #015=GET_CONFIGS_LP01_ATTRS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:11 Page:434  

  15565  5 000112   200020 470500                    LDP0    @BUF$,,AUTO
         5 000113   000000 236100                    LDQ     0,,PR0
         5 000114   000135 756000 3                  STQ     READ_FPT+5

     1797    15566    2   READ_FPT.BUF_.BOUND = SIZE - 1;

  15566  5 000115   200021 471500                    LDP1    @SIZE,,AUTO
         5 000116   100000 236100                    LDQ     0,,PR1
         5 000117   000001 136007                    SBLQ    1,DL
         5 000120   000020 736000                    QLS     16
         5 000121   000134 676000 3                  ERQ     READ_FPT+4
         5 000122   000034 376000 xsym               ANQ     B_VECTNIL+28
         5 000123   000134 656000 3                  ERSQ    READ_FPT+4

     1798    15567    2   READ_FPT.KEY_ = VECTOR( KEY ) ;

  15567  5 000124   000002 235000 6                  LDA     2
         5 000125   200017 236100                    LDQ     @KEY,,AUTO
         5 000126   000132 757000 3                  STAQ    READ_FPT+2

     1799    15568    2   CALL M$READ( READ_FPT ) ALTRET( READ_ERR ) ;

  15568  5 000127   000130 630400 3                  EPPR0   READ_FPT
         5 000130   440000 713400                    CLIMB   alt,read
         5 000131   401400 401760                    pmme    nvectors=4
         5 000132   000145 702000 5                  TSX2    READ_ERR

     1800    15569    2   M$CNFG$ = DCBADDR( DCBNUM( M$CNFG ) ) ;

  15569  5 000133   000000 236007 xsym               LDQ     M$CNFG,DL
         5 000134   000003 470400 6                  LDP0    3
         5 000135   000000 471500                    LDP1    0,,PR0
         5 000136   100000 236106                    LDQ     0,QL,PR1
         5 000137   200004 756100                    STQ     M$CNFG$,,AUTO

     1801    15570    2   ARS = M$CNFG$ -> F$DCB.ARS ;
PL6.E3A0      #015=GET_CONFIGS_LP01_ATTRS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:11 Page:435  

  15570  5 000140   200004 473500                    LDP3    M$CNFG$,,AUTO
         5 000141   300000 235100                    LDA     0,,PR3
         5 000142   200010 755100                    STA     ARS,,AUTO

     1802    15571    2   RETURN ;

  15571  5 000143   200016 221300                    LDX1  ! KEY+5,,AUTO
         5 000144   000001 702211                    TSX2  ! 1,X1

  15570  5 000145                       READ_ERR     null
     1803    15572
     1804    15573    2   READ_ERR: ;
     1805    15574    2   ERR_CODE = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR ;

  15574  5 000145   000000 470400 xsym               LDP0    B$TCB$
         5 000146   000000 471500                    LDP1    0,,PR0
         5 000147   100102 236100                    LDQ     66,,PR1
         5 000150   000000 756000 xsym               STQ     ERR_CODE

     1806    15575    2   ALTRETURN ;

  15575  5 000151   200016 221300                    LDX1  ! KEY+5,,AUTO
         5 000152   000000 702211                    TSX2  ! 0,X1
     1807    15576
     1808    15577    2   END READ_CONFIG ;
     1809    15578    1   END GET_CONFIGS_LP01_ATTRS;

PL6.E3A0      #015=GET_CONFIGS_LP01_ATTRS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:11 Page:436  
--  Include file information  --

   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   XG_SUBS_C.:E05TOU  is referenced.
   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   TD$STRUCT.:E05TOU  is referenced.
   AS_PERR_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GET_CONFIGS_LP01_ATTRS.
PL6.E3A0      #015=GET_CONFIGS_LP01_ATTRS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:11 Page:437  

 **** Variables and constants ****

  ****  Section 002 RoData GET_CONFIGS_LP01_ATTRS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(288)   r     1 FILE_NAME

  ****  Section 003  Data  GET_CONFIGS_LP01_ATTRS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    72-0-0/d STRC(1080)  r     1 CLOSE_FPT                  0-0-0/d STRC(2088)  r     1 OPEN_FPT
   130-0-0/d STRC(504)   r     1 READ_FPT

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @ATTRIBUTES               20-0-0/w PTR         r     1 @BUF$
    17-0-0/w PTR         r     1 @KEY                      21-0-0/w PTR         r     1 @SIZE
    10-0-0/w UBIN        r     1 ARS                       *0-0-0/w BIT (18)    r     1 ATTRIBUTES
    *0-0-0/w PTR         r     1 BUF$                       7-0-0/w PTR         r     1 HEAD$
    11-0-0/w STRC(117)   r     1 KEY                       *0-0-0/c STRC(288)   r     1 KEY
     4-0-0/w PTR         r     1 M$CNFG$                   *0-0-0/w UBIN        r     1 SIZE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w PTR         r     1 DSEG1$
     0-0-0/w UBIN        r     1 DSEG1SIZE                  0-0-0/b BIT         r     1 DSEG_FLG
     0-0-0/b STRC        r     1 ERR_CODE                   0-0-0/c STRC(72)    r     1 FILE_ACCT
PL6.E3A0      #015=GET_CONFIGS_LP01_ATTRS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:11 Page:438  

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0N  NULL        r     1 M$CNFG
     0-0-0/w STRC(396)   r     1 TD$DEV                     0-0-0/w STRC(648)   r     1 TD$HEAD


   Procedure GET_CONFIGS_LP01_ATTRS requires 107 words for executable code.
   Procedure GET_CONFIGS_LP01_ATTRS requires 18 words of local(AUTO) storage.

    No errors detected in file ASB$EXT.:E05TSI    .
PL6.E3A0      #015=GET_CONFIGS_LP01_ATTRS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:11 Page:439  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #015=GET_CONFIGS_LP01_ATTRS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:11 Page:440  
          MINI XREF LISTING

ARS
     15315**DCL     15423<<ASSIGN  15426<>CALL    15433<>CALL    15570<<ASSIGN
ASA_BRKS_LOC
     11794**DCL     11794--REDEF
ASB$GETSEG
     15324**DCL-ENT 15400--CALL
ASH$ERROR
     15321**DCL-ENT 15414--CALL    15442--CALL
AS_DEFAULT.BANNER_PERM
     12487**DCL     12488--REDEF
AS_DEFAULT.BUDGET.MACCT
     12392**DCL     12396--REDEF
AS_DEFAULT.BUDGET.MAX_PROJECTS
     12405**DCL     12408--REDEF
AS_DEFAULT.BUDGET.PACCUM
     12388**DCL     12390--REDEF
AS_DEFAULT.BUDGET.PMAXC
     12383**DCL     12385--REDEF
AS_DEFAULT.SETUP_CHRA.TXT
     12503**DCL     12504--REDEF   12505--REDEF
AS_DEFAULT_DREC.PASSWORD
     13757**DCL     13761--REDEF
AS_DEFAULT_DREC.RENAME
     13780**DCL     13781--REDEF
AS_DFLT.BANNER_PERM
     12309**DCL     12310--REDEF
AS_DFLT.BUDGET.MACCT
     12214**DCL     12218--REDEF
AS_DFLT.BUDGET.MAX_PROJECTS
     12227**DCL     12230--REDEF
AS_DFLT.BUDGET.PACCUM
     12210**DCL     12212--REDEF
PL6.E3A0      #015=GET_CONFIGS_LP01_ATTRS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:11 Page:441  
AS_DFLT.BUDGET.PMAXC
     12205**DCL     12207--REDEF
AS_DFLT.SETUP_CHRA.TXT
     12325**DCL     12326--REDEF   12327--REDEF
AS_FE_MODE
     11660**DCL     11661--REDEF
AS_MODE
     11657**DCL     11659--REDEF
AS_MOD_USER.ACCESS
     14522**DCL     14523--REDEF
AS_MOD_USER.BANNER
     14509**DCL     14510--REDEF
AS_MOD_USER.BANNER_PERM
     14511**DCL     14512--REDEF
AS_MOD_USER.BILL
     14517**DCL     14518--REDEF
AS_MOD_USER.CPROC
     14513**DCL     14514--REDEF
AS_MOD_USER.FEBILL
     14593**DCL     14594--REDEF
AS_MOD_USER.FECXTMEM
     14610**DCL     14611--REDEF
AS_MOD_USER.FEMINTS
     14595**DCL     14596--REDEF
AS_MOD_USER.FEMMEM
     14606**DCL     14607--REDEF
AS_MOD_USER.FEMTIME
     14604**DCL     14605--REDEF
AS_MOD_USER.FEPPRIV
     14601**DCL     14603--REDEF
AS_MOD_USER.FEPRIV
     14598**DCL     14600--REDEF
AS_MOD_USER.FORCE_BIT
     14507**DCL     14508--REDEF
AS_MOD_USER.KEY
     14589**DCL     14591--REDEF
PL6.E3A0      #015=GET_CONFIGS_LP01_ATTRS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:11 Page:442  
AS_MOD_USER.LASTCPROC
     14515**DCL     14516--REDEF
AS_MOD_USER.LIMITS.DO_
     14563**DCL     14564--REDEF
AS_MOD_USER.LIMITS.FPOOLS
     14579**DCL     14580--REDEF
AS_MOD_USER.LIMITS.LO
     14559**DCL     14560--REDEF
AS_MOD_USER.LIMITS.MEM
     14555**DCL     14556--REDEF
AS_MOD_USER.LIMITS.MPRIO
     14583**DCL     14584--REDEF
AS_MOD_USER.LIMITS.PDIS
     14571**DCL     14572--REDEF
AS_MOD_USER.LIMITS.PO
     14567**DCL     14568--REDEF
AS_MOD_USER.LIMITS.TDIS
     14575**DCL     14576--REDEF
AS_MOD_USER.LIMITS.TIME
     14551**DCL     14552--REDEF
AS_MOD_USER.MAXENQ
     14532**DCL     14533--REDEF
AS_MOD_USER.PERM_BIT
     14505**DCL     14506--REDEF
AS_MOD_USER.PPRIV
     14527**DCL     14529--REDEF
AS_MOD_USER.PRIOB
     14534**DCL     14535--REDEF
AS_MOD_USER.PRIV
     14524**DCL     14526--REDEF
AS_MOD_USER.QUAN
     14530**DCL     14531--REDEF
AS_MOD_USER.SETUP
     14503**DCL     14504--REDEF
AS_PROJECT.BANNER_PERM
     12843**DCL     12844--REDEF
PL6.E3A0      #015=GET_CONFIGS_LP01_ATTRS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:11 Page:443  
AS_PROJECT.BUDGET.MACCT
     12748**DCL     12752--REDEF
AS_PROJECT.BUDGET.MAX_PROJECTS
     12761**DCL     12764--REDEF
AS_PROJECT.BUDGET.PACCUM
     12744**DCL     12746--REDEF
AS_PROJECT.BUDGET.PMAXC
     12739**DCL     12741--REDEF
AS_PROJECT.SETUP_CHRA.TXT
     12859**DCL     12860--REDEF   12861--REDEF
AS_PROJECT_DFLT.BANNER_PERM
     13021**DCL     13022--REDEF
AS_PROJECT_DFLT.BUDGET.MACCT
     12926**DCL     12930--REDEF
AS_PROJECT_DFLT.BUDGET.MAX_PROJECTS
     12939**DCL     12942--REDEF
AS_PROJECT_DFLT.BUDGET.PACCUM
     12922**DCL     12924--REDEF
AS_PROJECT_DFLT.BUDGET.PMAXC
     12917**DCL     12919--REDEF
AS_PROJECT_DFLT.SETUP_CHRA.TXT
     13037**DCL     13038--REDEF   13039--REDEF
AS_PROJECT_DFLT_DREC.PASSWORD
     14243**DCL     14247--REDEF
AS_PROJECT_DFLT_DREC.RENAME
     14266**DCL     14267--REDEF
AS_PROJECT_DREC.PASSWORD
     14081**DCL     14085--REDEF
AS_PROJECT_DREC.RENAME
     14104**DCL     14105--REDEF
AS_PROJ_ADMIN.BANNER_PERM
     12665**DCL     12666--REDEF
AS_PROJ_ADMIN.BUDGET.MACCT
     12570**DCL     12574--REDEF
AS_PROJ_ADMIN.BUDGET.MAX_PROJECTS
     12583**DCL     12586--REDEF
PL6.E3A0      #015=GET_CONFIGS_LP01_ATTRS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:11 Page:444  
AS_PROJ_ADMIN.BUDGET.PACCUM
     12566**DCL     12568--REDEF
AS_PROJ_ADMIN.BUDGET.PMAXC
     12561**DCL     12563--REDEF
AS_PROJ_ADMIN.SETUP_CHRA.TXT
     12681**DCL     12682--REDEF   12683--REDEF
AS_PROJ_ADMIN_DREC.PASSWORD
     13919**DCL     13923--REDEF
AS_PROJ_ADMIN_DREC.RENAME
     13942**DCL     13943--REDEF
AS_USERS.BANNER_PERM
     12131**DCL     12132--REDEF
AS_USERS.BUDGET.MACCT
     12036**DCL     12040--REDEF
AS_USERS.BUDGET.MAX_PROJECTS
     12049**DCL     12052--REDEF
AS_USERS.BUDGET.PACCUM
     12032**DCL     12034--REDEF
AS_USERS.BUDGET.PMAXC
     12027**DCL     12029--REDEF
AS_USERS.SETUP_CHRA.TXT
     12147**DCL     12148--REDEF   12149--REDEF
AS_USERS_CONSTANT.BANNER_PERM
     13199**DCL     13200--REDEF
AS_USERS_CONSTANT.BUDGET.MACCT
     13104**DCL     13108--REDEF
AS_USERS_CONSTANT.BUDGET.MAX_PROJECTS
     13117**DCL     13120--REDEF
AS_USERS_CONSTANT.BUDGET.PACCUM
     13100**DCL     13102--REDEF
AS_USERS_CONSTANT.BUDGET.PMAXC
     13095**DCL     13097--REDEF
AS_USERS_CONSTANT.SETUP_CHRA.TXT
     13215**DCL     13216--REDEF   13217--REDEF
ATTRIBUTES
        29**DCL        28--PROC    15434<<ASSIGN
PL6.E3A0      #015=GET_CONFIGS_LP01_ATTRS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:11 Page:445  
B$ALT.CODE
     15329**DCL     15329--REDEF   15330--REDEF   15330--REDEF
B$ALT.ERR
     15330**DCL     15441>>ASSIGN  15574>>ASSIGN
B$ALT.ERR.ERR#
     15331**DCL     15331--REDEF
B$ALT.EVID
     15330**DCL     15330--REDEF   15330--REDEF
B$TCB.ALT$
     15336**DCL     15441>>ASSIGN  15574>>ASSIGN
B$TCB$
     15145**DCL     15441>>ASSIGN  15574>>ASSIGN
BUF$ IN PROCEDURE READ_CONFIG
     15468**DCL     15464--PROC    15565>>ASSIGN
CLOSE_FPT
     15289**DCL     15436<>CALL
CLOSE_FPT.SN_
     15289**DCL     15289--REDEF
CLOSE_FPT.UTL_
     15290**DCL     15290--REDEF
CLOSE_FPT.V
     15294**DCL     15289--DCLINIT
CLOSE_FPT.V.EXPIRE#
     15304**DCL     15304--REDEF
CLOSE_FPT.V.TYPE#
     15302**DCL     15302--REDEF
CLOSE_FPT.V.XTNSIZE#
     15299**DCL     15299--REDEF   15301--REDEF
DSEG1$
     11795**DCL     15422>>ASSIGN
DSEG1SIZE
     11796**DCL     15423>>ASSIGN
DSEG_FLG
     11795**DCL     15399>>IF
ERR_CODE
     11789**DCL     11790--REDEF   15441<<ASSIGN  15442<>CALL    15574<<ASSIGN
PL6.E3A0      #015=GET_CONFIGS_LP01_ATTRS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:11 Page:446  
F$DCB.ACTPOS IN PROCEDURE READ_CONFIG
     15539**DCL     15539--REDEF
F$DCB.ARS IN PROCEDURE READ_CONFIG
     15514**DCL     15514--REDEF   15570>>ASSIGN
F$DCB.ATTR IN PROCEDURE READ_CONFIG
     15532**DCL     15533--REDEF
F$DCB.BORROW IN PROCEDURE READ_CONFIG
     15547**DCL     15547--REDEF   15547--REDEF   15547--REDEF
F$DCB.DCBNAME.L IN PROCEDURE READ_CONFIG
     15561**DCL     15561--IMP-SIZ
F$DCB.EOMCHAR IN PROCEDURE READ_CONFIG
     15518**DCL     15518--REDEF
F$DCB.FLDID IN PROCEDURE READ_CONFIG
     15542**DCL     15542--REDEF
F$DCB.FORM$ IN PROCEDURE READ_CONFIG
     15536**DCL     15536--REDEF
F$DCB.FSECT IN PROCEDURE READ_CONFIG
     15552**DCL     15552--REDEF
F$DCB.FSN IN PROCEDURE READ_CONFIG
     15529**DCL     15529--REDEF   15529--REDEF   15530--REDEF
F$DCB.HEADER$ IN PROCEDURE READ_CONFIG
     15535**DCL     15535--REDEF
F$DCB.IXTNSIZE IN PROCEDURE READ_CONFIG
     15533**DCL     15533--REDEF
F$DCB.LASTSTA$ IN PROCEDURE READ_CONFIG
     15523**DCL     15523--REDEF
F$DCB.LVL IN PROCEDURE READ_CONFIG
     15548**DCL     15548--REDEF
F$DCB.NAME.C IN PROCEDURE READ_CONFIG
     15523**DCL     15523--REDEF
F$DCB.NOEOF IN PROCEDURE READ_CONFIG
     15544**DCL     15544--REDEF
F$DCB.NRECS IN PROCEDURE READ_CONFIG
     15534**DCL     15534--REDEF
F$DCB.NRECX IN PROCEDURE READ_CONFIG
     15553**DCL     15553--REDEF
PL6.E3A0      #015=GET_CONFIGS_LP01_ATTRS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:11 Page:447  
F$DCB.OHDR IN PROCEDURE READ_CONFIG
     15545**DCL     15545--REDEF
F$DCB.ORG IN PROCEDURE READ_CONFIG
     15528**DCL     15528--REDEF
F$DCB.PRECNO IN PROCEDURE READ_CONFIG
     15551**DCL     15551--REDEF
F$DCB.RCSZ IN PROCEDURE READ_CONFIG
     15556**DCL     15556--REDEF
F$DCB.RES IN PROCEDURE READ_CONFIG
     15524**DCL     15524--REDEF
F$DCB.SETX IN PROCEDURE READ_CONFIG
     15536**DCL     15536--REDEF
F$DCB.TAB$ IN PROCEDURE READ_CONFIG
     15535**DCL     15536--REDEF
F$DCB.TDA IN PROCEDURE READ_CONFIG
     15550**DCL     15550--REDEF
F$DCB.WSN IN PROCEDURE READ_CONFIG
     15525**DCL     15525--REDEF
FILE_ACCT
     11797**DCL     15225--DCLINIT
FILE_NAME
     15141**DCL     15221--DCLINIT
HEAD$
     15314**DCL     15340--IMP-PTR 15377--IMP-PTR 15422<<ASSIGN  15426<>CALL    15427>>IF      15432>>ASSIGN
     15432>>ASSIGN  15433<>CALL    15434>>ASSIGN
KEY
     15316**DCL     15424<<ASSIGN  15426<>CALL    15433<>CALL
KEY.CNT
     15317**DCL     15425<<ASSIGN  15431<<ASSIGN
KEY.TXT
     15318**DCL     15432<<ASSIGN
KEY IN PROCEDURE READ_CONFIG
     15465**DCL     15464--PROC    15567--ASSIGN
KL_DEFAULT.PASSWORD
     14405**DCL     14409--REDEF
KL_DEFAULT.RENAME
PL6.E3A0      #015=GET_CONFIGS_LP01_ATTRS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:11 Page:448  
     14428**DCL     14429--REDEF
KL_DFLT.PASSWORD
     13595**DCL     13599--REDEF
KL_DFLT.RENAME
     13618**DCL     13619--REDEF
KL_DREC.PASSWORD
     13433**DCL     13437--REDEF
KL_DREC.RENAME
     13456**DCL     13457--REDEF
KL_DREC_CNT.PASSWORD
     13320**DCL     13324--REDEF
KL_DREC_CNT.RENAME
     13343**DCL     13344--REDEF
M$CLOSE
      1792**DCL-ENT 15436--CALL
M$CNFG
     15309**DCL     15569--ASSIGN
M$CNFG$
     15310**DCL     15569<<ASSIGN  15570>>ASSIGN
M$OPEN
      1792**DCL-ENT 15420--CALL
M$READ
      1793**DCL-ENT 15568--CALL
OPEN_FPT
     15220**DCL     15420<>CALL
OPEN_FPT.ACSVEH_
     15222**DCL     15223--REDEF
OPEN_FPT.ALTKEYS_
     15228**DCL     15229--REDEF   15229--REDEF
OPEN_FPT.HDR_
     15227**DCL     15228--REDEF
OPEN_FPT.TAB_
     15226**DCL     15227--REDEF
OPEN_FPT.UHL_
     15220**DCL     15221--REDEF   15221--REDEF
OPEN_FPT.V
PL6.E3A0      #015=GET_CONFIGS_LP01_ATTRS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:11 Page:449  
     15229**DCL     15220--DCLINIT
OPEN_FPT.V.FSN#
     15260**DCL     15260--REDEF   15260--REDEF
OPEN_FPT.WSN_
     15226**DCL     15226--REDEF
PROJ_KEY.TEXT
     11667**DCL     11667--REDEF
PROJ_KEY.TXT.PROJECT
     11667**DCL     11667--REDEF
READ_CONFIG
     15464**PROC    15426--CALL    15433--CALL
READ_ERR IN PROCEDURE READ_CONFIG
     15570**LABEL   15568--CALLALT
READ_FPT IN PROCEDURE READ_CONFIG
     15490**DCL     15568<>CALL
READ_FPT.BUF_.BOUND IN PROCEDURE READ_CONFIG
     15492**DCL     15566<<ASSIGN
READ_FPT.BUF_.BUF$ IN PROCEDURE READ_CONFIG
     15493**DCL     15565<<ASSIGN
READ_FPT.KEY_ IN PROCEDURE READ_CONFIG
     15490**DCL     15567<<ASSIGN
READ_FPT.STATION_ IN PROCEDURE READ_CONFIG
     15493**DCL     15494--REDEF
READ_FPT.V IN PROCEDURE READ_CONFIG
     15494**DCL     15490--DCLINIT
READ_FPT.V.DVBYTE.REREAD# IN PROCEDURE READ_CONFIG
     15505**DCL     15505--REDEF
READ_FPT.V.INDX# IN PROCEDURE READ_CONFIG
     15503**DCL     15503--REDEF
REMEM_VAR
     11793**DCL     11793--REDEF
REM_FCMD
     11793**DCL     11794--REDEF
SIZE IN PROCEDURE READ_CONFIG
     15469**DCL     15464--PROC    15566>>ASSIGN
TD$DEV.ATTR
PL6.E3A0      #015=GET_CONFIGS_LP01_ATTRS File=ASB$EXT.:E05TSI                   TUE 07/29/97 09:11 Page:450  
     15391**DCL     15434>>ASSIGN
TD$HEAD.DEVNAME
     15373**DCL     15432>>ASSIGN
TD$HEAD.LP_INDX
     15357**DCL     15432>>ASSIGN
TD$HEAD.NUMLPS
     15358**DCL     15427>>IF
UNKNOWN_ERR
     15434**LABEL   15420--CALLALT 15426--CALLALT 15433--CALLALT
USERS_KEY.TEXT
     11664**DCL     11665--REDEF   11665--REDEF   11665--REDEF   11666--REDEF
