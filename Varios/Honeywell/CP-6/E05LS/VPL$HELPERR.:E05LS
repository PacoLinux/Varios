VERSION E05

PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:1    
        1        1        /*M* VPL$HELPERR MODULE CONTAINS HELP AND ERROR ROUTINES                      */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DTI=1,THI=1 */
        8        8        /* NEXT AVAILABLE ERROR CODE = 50 (BY 10'S) */
        9        9        VPL$ERR_PROC: PROC(SEVERITY,CODE,MID,ERR,FIELD1_,FIELD2_,ERRDCB,RETSEV);
       10       10        /*D* NAME: VPL$ERR_PROC
       11       11             CALL: CALL VPL$ERR_PROC(SEVERITY,CODE,MID,ERR,FIELD1_,FIELD2_,ERRDCB,RETSEV);
       12       12             DESCRIPTION: VPL$ERR_PROC formats a 36 bit error code with which it calls
       13       13                          M$ERRMSG to report on said error. This error code is composed
       14       14                          of 1) the current B$ALT.ERR value if CODE=0 and ERR was
       15       15                                not specified
       16       16                             2) ERR if CODE=0 and ERR was specified
       17       17                             3) if CODE~=0, fcg of 'VP', mid of MID, code of CODE
       18       18                          the SEV field is always set to 0.
       19       19
       20       20                          SEVERITY is the error severity.  If the RETSEV field is
       21       21                          omitted, it controls the return:
       22       22                            SEVERITY     DISPOSITION
       23       23                            --------     -----------
       24       24                               0         Information only --- not an error.
       25       25                               1         Warning --- normal return.
       26       26                               2         Abort step.
       27       27                               3         Abort command.
       28       28                               4         Fatal error --- abort PCL.
       29       29                               5         Fatal error --- PCL trapped!
       30       30
       31       31                          FIELD1_ and FIELD2_ are optional and if found are used
       32       32                          as substitution fields in the call to M$ERRMSG.
       33       33
       34       34                          RETSEV controls the return from this error.  If
       35       35                          omitted, it defaults to the value of SEVERITY.
       36       36        */
       37       37        /**/
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:2    
       38       38        /*  Parameters  */
       39       39        /**/
       40       40    1   DCL ERRDCB SBIN WORD;
       41       41    1   DCL SEVERITY SBIN WORD;
       42       42    1   DCL CODE SBIN WORD;                     /* ERR.CODE TO REPORT...IF 0,         */
       43       43                                                /* USE B$ALT.ERR OR ERR               */
       44       44                                                /* IF ERR IS PRESENT                  */
       45       45    1   DCL MID BIT(6);                         /* MID OF ERROR. PRESENT ONLY IF      */
       46       46                                                /* CODE~=0                            */
       47       47    1   DCL ERR BIT(36);                        /* ERR TO USE (IF PRESENT) ONLY       */
       48       48                                                /* WHEN CODE=0                        */
       49       49    1   DCL FIELD1_ BIT(72);
       50       50    1   DCL FIELD2_ BIT(72);
       51       51    1   DCL RETSEV SBIN WORD;
       52       52        /**/
       53       53        /*  INCLUDE FILES  */
       54       54        /**/
       55       55        %INCLUDE VP_DATA_R;
       56     7042        %PARSE$OUT(NAME = OUT$BLK,STCLASS = BASED);
       57     7087        %B$TCB;
       58     7090        %B$ALT;
       59     7098        %INCLUDE F$DCB;
       60     7147 S      %INCLUDE B$JIT_C;
       61     7148        %INCLUDE B_ERRORS_C;
       62     8275        /**/
       63     8276        /*  BASED STRUCTURES  */
       64     8277        /**/
       65     8278        %B$JIT0(STCLASS="BASED(B$JIT$)");
       66     8367    1         2 * BIT(1);                       /* DON'T NEED REST OF JIT             */
       67     8368        /**/
       68     8369        /*  LOCAL AUTO  */
       69     8370        /**/
       70     8371    1   DCL I SBIN WORD;
       71     8372    1   DCL RETSEV_ SBIN WORD;
       72     8373        /**/
       73     8374        /*  LOCAL STATIC  */
       74     8375        /**/
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:3    
       75     8376    1   DCL LAST_CODE_SEV UBIN(3) STATIC;
       76     8377    1   DCL PRINT BIT(1) STATIC;
       77     8378        /* The following tables, REAL_ERROR_CODE, and FRIENDLY_ERROR_CODE
       78     8379        are used to translate some monitor error messages into something
       79     8380        more palatable to the general PCL user.  When a monitor error occurs,
       80     8381        REAL_ERROR_CODE is searched for the code of the error.  If a match is
       81     8382        found, the corresponding FRIENDLY_ERROR_CODE is substituted.
       82     8383        */
       83     8384    1   DCL REAL_ERROR_CODE(0:%MAX_ERR_SUBS#) UBIN BYTE STATIC INIT(0,
       84     8385    1   %E$FILLIM,
       85     8386    1   %E$NOCONT,
       86     8387    1   %E$RANBADBLK);
       87     8388    1   DCL FRIENDLY_ERROR_CODE(0:%MAX_ERR_SUBS#) UBIN BYTE STATIC INIT(0,
       88     8389    1   40,
       89     8390    1   30,
       90     8391    1   20);
       91     8392        /*E*   ERROR: VPL-00040
       92     8393             MESSAGE: The output file cannot hold any more records.  Try increasing
       93     8394                      the initial allocation, NUMRECORDS, or using the XTNSIZE option.
       94     8395        */
       95     8396        /*E*   ERROR: VPL-00030
       96     8397             MESSAGE: You cannot encrypt or compress a record that large.
       97     8398        */
       98     8399        /*E*   ERROR: VPL-00020
       99     8400             MESSAGE: Block number outside range of allocated space% for %FN%.
      100     8401            MESSAGE1: Check IXTNSIZE, or add the XTNSIZE option next time.
      101     8402        */
      102     8403        /**/
      103     8404        /*  ENTRY DCLS  */
      104     8405        /**/
      105     8406        %VP_ENTRIES (OMIT=VPL$ERR_PROC);
      106     8614        %INCLUDE XUG_ENTRY;
      107     8645        /**/
      108     8646
      109     8647    1           PRINT = '1'B;                   /* Print this error message           */
      110     8648    1           CALL SETDCB;
      111     8649    1           GOTO BEGIN;
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:4    
      112     8650        %EJECT;
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:5    
      113     8651    1   VPL$ERR_NO_PRINT: ENTRY(SEVERITY,CODE,MID,ERR,FIELD1_,FIELD2_,ERRDCB,RETSEV);
      114     8652        /*D* NAME: VPL$ERR_NO_PRINT
      115     8653           CALL: CALL VPL$ERR_NO_PRINT(SEVERITY,CODE,MID,ERR,FIELD1_,FIELD2_,ERRDCB,RETSEV);
      116     8654             DESCRIPTION: This is an entry point inside VPL$ERR_PROC.
      117     8655                          VPL$ERR_NO_PRINT behaves exactly like VPL$ERR_PROC except
      118     8656                          that M$ERRMSG is not called.  This is handy to format an
      119     8657                          error code (and set it to bump on '?') without printing.
      120     8658        */
      121     8659    1           PRINT = '0'B;                   /* We don't want to print             */
      122     8660    1           GOTO BEGIN;
      123     8661
      124     8662    1   VPL$ERR_FETCH: ENTRY(SEVERITY,CODE,MID,ERR,FIELD1_,FIELD2_,ERRDCB,RETSEV);
      125     8663        /*D* NAME: VPL$ERR_FETCH
      126     8664             CALL: CALL VPL$ERR_FETCH(SEVERITY,CODE,MID,ERR,FIELD1_,FIELD2_,ERRDCB,RETSEV);
      127     8665             DESCRIPTION: This is an entry point inside VPL$ERR_PROC.
      128     8666                          VPL$ERR_FETCH behaves exactly like VPL$ERR_PROC except
      129     8667                          that the error message is not printed.  It is returned in
      130     8668                          ERR_BUF.  The length in characters is returned in ERR_LEN.
      131     8669        */
      132     8670    1           FPT_ERRMSG.V.OUTDCB1# = 0;
      133     8671    1           FPT_ERRMSG.V.OUTDCB2# = 0;
      134     8672    1           PRINT = '1'B;
      135     8673
      136     8674    1   BEGIN:  CALL VPD$FINISH_NLIST;          /* Finish any dangling name list      */
      137     8675    1           IF CODE=0
      138     8676    1            THEN
      139     8677    1              IF ADDR(ERR)=ADDR(NIL)
      140     8678    1               THEN
      141     8679    2               DO;
      142     8680    2                  ERR_CODE = B$TCB$->B$TCB.ALT$->B$ALT.ERR;
      143     8681    2                  FPT_ERRMSG.V.DCB# = B$TCB$->B$TCB.ALT$->B$ALT.DCB#;
      144     8682    2                  END;
      145     8683    1               ELSE                        /* Don't look in TCB                  */
      146     8684    2               DO;
      147     8685    2                  ERR_CODE = ERR;
      148     8686    2                  FPT_ERRMSG.V.DCB# = 0;
      149     8687    2                  END;
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:6    
      150     8688    1            ELSE
      151     8689    2            DO;
      152     8690    2               ERR_CODE.FCG = '2620'O;     /* 'VP' IN SIXBIT                     */
      153     8691    2               ERR_CODE.MID = MID;
      154     8692    2               ERR_CODE.MON = %NO#;
      155     8693    2               ERR_CODE.CODE = CODE;
      156     8694    2               END;
      157     8695    1           IF ADDR(ERRDCB) ~= ADDR(NIL)
      158     8696    1            THEN
      159     8697    1              FPT_ERRMSG.V.DCB# = ERRDCB;
      160     8698    1           ERR_CODE.SEV = 0;
      161     8699    1           FPT_ERRMSG.V.SUBMESS# = %YES#;
      162     8700    1           IF ADDR(FIELD1_)~=ADDR(NIL)
      163     8701    1            THEN
      164     8702    1              FPT_ERRMSG.FIELD1_ = FIELD1_;
      165     8703    1            ELSE
      166     8704    1              FPT_ERRMSG.FIELD1_ = VECTOR(NIL);
      167     8705    1           IF ADDR(FIELD2_)~=ADDR(NIL)
      168     8706    1            THEN
      169     8707    1              FPT_ERRMSG.FIELD2_ = FIELD2_;
      170     8708    1            ELSE
      171     8709    1              FPT_ERRMSG.FIELD2_ = VECTOR(NIL);
      172     8710    1           IF ERR_CODE.MON
      173     8711    1            THEN
      174     8712    2            DO I=1 TO %MAX_ERR_SUBS#;
      175     8713    2               IF REAL_ERROR_CODE(I) = ERR_CODE.CODE
      176     8714    2                THEN
      177     8715    3                DO;
      178     8716    3                   ERR_CODE.CODE = FRIENDLY_ERROR_CODE(I);
      179     8717    3                   ERR_CODE.MON = %NO#;
      180     8718    3                   ERR_CODE.FCG = '2620'O; /* VP in six-bit                      */
      181     8719    3                   ERR_CODE.MID = '14'O;   /* L in six-bit                       */
      182     8720    3                   GOTO CONV_DONE;
      183     8721    3                   END;
      184     8722    2               END;
      185     8723    1   CONV_DONE:;
      186     8724    1           IF PRINT
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:7    
      187     8725    1            THEN                           /* This was VPL$ERR_PROC              */
      188     8726    1              IF FPT_ERRMSG.V.OUTDCB1# ~= DCBNUM(NIL) OR
      189     8727    1                FPT_ERRMSG.V.OUTDCB2# ~= DCBNUM(NIL)
      190     8728    2               THEN DO;
      191     8729    2                  GETCMD.ERR_CODE = ERR_CODE;
      192     8730    2                  GETCMD.F1_ = BITVECT(FPT_ERRMSG.FIELD1_);
      193     8731    2                  GETCMD.F2_ = BITVECT(FPT_ERRMSG.FIELD2_);
      194     8732    2                  GETCMD.ERRDCB# = FPT_ERRMSG.V.DCB#;
      195     8733    2                  CALL XUG$ERRMSG (GETCMD);
      196     8734    2                  END;
      197     8735    1               ELSE
      198     8736    2               DO;
      199     8737    2                  IF B$JIT$ -> B$JIT.MODE ~= %M_INT#
      200     8738    2                   THEN                    /* User isn't interractive            */
      201     8739    2                     ERR_CODE.SEV = 7;     /* Try highest possible, first        */
      202     8740    2                  CALL M$ERRMSG(FPT_ERRMSG) ALTRET(ERRMSG_PROBLEM);
      203     8741    3                  DO WHILE ('0'B);
      204     8742    3   ERRMSG_PROBLEM:   ERR_CODE.FCG = '2620'O; /* 'VP' in sixbit                   */
      205     8743    3                     ERR_CODE.MID = '14'O; /* 'L' in sixbit                      */
      206     8744    3                     ERR_CODE.MON = %NO#;
      207     8745    3                     ERR_CODE.CODE = 10;
      208     8746    3                     ERR_CODE.SEV = 3;     /* Abort command                      */
      209     8747    3                     CALL M$ERRMSG(FPT_ERRMSG) ALTRET(IGNORE_SECOND);
      210     8748        /*E* ERROR:   VPL-00010
      211     8749             MESSAGE: ERROR! (no message available)
      212     8750        */
      213     8751    3   IGNORE_SECOND:    ;
      214     8752    3                     END;
      215     8753    2                  ERR_CODE = VLR_ERRMSG.CODEUSED;
      216     8754    2                  END;
      217     8755    1            ELSE                           /* This was VPL$ERR_NO_PRINT          */
      218     8756    1              ERR_CODE.SEV = ERR_CODE.SEV -1; /* Make the next bump give the     */
      219     8757                                                /* first error message                */
      220     8758    1           ERROR_DCB = FPT_ERRMSG.V.DCB#;  /* Remember DCB that had error        */
      221     8759    1           IF FPT_ERRMSG.V.OUTDCB1# = 0
      222     8760    1             AND FPT_ERRMSG.V.OUTDCB2# = 0
      223     8761    1             AND PRINT
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:8    
      224     8762    1            THEN                           /* We only wanted buffer stuffed      */
      225     8763    2            DO;                            /* Find message length                */
      226     8764    2               ERR_BUF = SUBSTR(ERR_BUF,2); /* Remove leading spaces             */
      227     8765    2               ERR_LEN = LENGTHC(ERR_BUF);
      228     8766    3               DO WHILE (ERR_LEN > 0 AND SUBSTR(ERR_BUF,ERR_LEN-1,1) = ' ');
      229     8767    3                  ERR_LEN = ERR_LEN -1;
      230     8768    3                  END;
      231     8769    2               END;
      232     8770        %EJECT;
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:9    
      233     8771    1   VPL$ERR_SEV_HANDLER: ENTRY(SEVERITY,CODE,MID,ERR,FIELD1_,FIELD2_,ERRDCB,RETSEV);
      234     8772        /*D* NAME: VPL$ERR_SEV_HANDLER
      235     8773             CALL: CALL VPL$ERR_SEV_HANDLER(SEVERITY,,,,,,,RETSEV);
      236     8774             DESCRIPTION: This entry point lies inside VPL$ERR_PROC and is used
      237     8775                          to handle the return from an error condition without
      238     8776                          printing any message.  The following parameters are
      239     8777                          valid and used according to the description under
      240     8778                          VPL$ERR_PROC:
      241     8779                               SEVERITY
      242     8780                               RETSEV
      243     8781        */
      244     8782        /**/
      245     8783        /*  Maintain some information about this call.                                */
      246     8784        /**/
      247     8785    1           IF SEVERITY > 1
      248     8786    1            THEN                           /* A real error                       */
      249     8787    1              ERR_FLG = %YES#;
      250     8788    1           IF SEVERITY > HIGHEST_SEVERITY AND HIGHEST_SEVERITY ~= -1
      251     8789    1            THEN
      252     8790    1              HIGHEST_SEVERITY = SEVERITY;
      253     8791    1           IF ADDR(RETSEV) = ADDR(NIL)
      254     8792    1            THEN
      255     8793    1              RETSEV_ = SEVERITY;          /* Default to SEVERITY if not passed  */
      256     8794    1            ELSE
      257     8795    1              RETSEV_ = RETSEV;
      258     8796        /**/
      259     8797        /*  Return to the user in a manner consistant with the return severity.       */
      260     8798        /**/
      261     8799    1           IF RETSEV_ > 1 AND ERROR_SEVERITY = 1
      262     8800    1            THEN
      263     8801    1              UNWIND TO TRAP_PCL;          /* Do M$XXX                           */
      264     8802    1           IF RETSEV_ > 1 AND ERROR_SEVERITY = 3 THEN
      265     8803    1              UNWIND TO ABORT_PCL;
      266     8804    2           DO CASE(RETSEV_);
      267     8805    2            CASE(2);                       /* ABORT STEP                         */
      268     8806    2              UNWIND TO ABORT_STEP;
      269     8807    2            CASE(3);
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:10   
      270     8808    2              UNWIND TO ABORT_CMD;
      271     8809    2            CASE(4);
      272     8810    2              UNWIND TO ABORT_PCL;
      273     8811    2            CASE(5);                       /* PCL trapped!                       */
      274     8812    2              UNWIND TO TRAP_PCL;
      275     8813    2            CASE(ELSE);
      276     8814    2              RETURN;
      277     8815    2            END;
      278     8816        %EJECT;
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:11   
      279     8817    1   VPL$QUEST: ENTRY;
      280     8818        /*D* NAME: VPL$QUEST
      281     8819             CALL: CALL VPL$QUEST
      282     8820             DESCRIPTION: QUEST drives the ? and ?? commands. If ? was the command,
      283     8821                          then the next verbose message for the current ERR_CODE is
      284     8822                          output if it exists. If it does not exist, the current
      285     8823                          HELP message is output. If ?? was the command, the most
      286     8824                          verbose message for ERR_CODE or all remaining HELP_ERR_CODE
      287     8825                          is output.
      288     8826        */
      289     8827    1           IF PCB.OUT$ -> OUT$BLK.NSUBLKS > 0 /* a ?? was entered                */
      290     8828    1            THEN
      291     8829    1              CALL XUG$ALLMSG (GETCMD);
      292     8830    1            ELSE
      293     8831    1              CALL XUG$MOREMSG (GETCMD);
      294     8832    1           RETURN;
      295     8833        /**/
      296     8834    1   SETDCB: PROC;
      297     8835        /**/
      298     8836        /*  Set up DCBs for M$ERRMSG that will output  */
      299     8837        /**/
      300     8838    2           FPT_ERRMSG.V.OUTDCB1# = M$DO#;
      301     8839    2           FPT_ERRMSG.V.OUTDCB2# = M$ME#;
      302     8840    2           RETURN;
      303     8841    2   END SETDCB;
      304     8842    1   END VPL$ERR_PROC;
      305     8843        %EOD;

PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:12   
--  Include file information  --

   XUG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   VP_MACRO_C.:E05TOU  is referenced.
   XS_MACRO_C.:E05TOU  is referenced.
   VP_PERR_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VPL$ERR_PROC.

   Procedure VPL$ERR_PROC requires 286 words for executable code.
   Procedure VPL$ERR_PROC requires 18 words of local(AUTO) storage.

PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:13   

 Object Unit name= VPL$ERR_PROC                               File name= VPL$HELPERR.:E05TOU
 UTS= JUL 30 '97 07:56:10.32 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$EI
    2   DCB   even  none     0      0  M$EO
    3   DCB   even  none     0      0  M$EO1
    4   DCB   even  none     0      0  M$ME
    5   DCB   even  none     0      0  M$SI
    6   DCB   even  none     0      0  M$READFILE
    7   DCB   even  none     0      0  M$DO
    8   DCB   even  none     0      0  M$STD1
    9   DCB   even  none     0      0  M$SORT1
   10   Data  even  none    10     12  VPL$ERR_PROC
   11   Proc  even  none   286    436  VPL$ERR_PROC
   12  RoData even  none     6      6  VPL$ERR_PROC

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    11      0   yes            yes      Std        8  VPL$ERR_PROC
    11      7                  yes      Std        8  VPL$ERR_NO_PRINT
    11     13                  yes      Std        8  VPL$ERR_FETCH
    11    311                  yes      Std        8  VPL$ERR_SEV_HANDLER
    11    411                  yes      Std        0  VPL$QUEST
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:14   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 VPD$FINISH_NLIST
 yes     yes           Std       1 XUG$ERRMSG
 yes     yes           Std       1 XUG$ALLMSG
 yes     yes           Std       1 XUG$MOREMSG
                       nStd      0 X66_AUTO_N
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUNWIND
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  PCB                                   GETCMD
     ERR_FLG                               ERROR_SEVERITY                        HIGHEST_SEVERITY
     ERROR_DCB                             ERR_BUF                               ERR_LEN
     ABORT_STEP                            ABORT_CMD                             ABORT_PCL
     TRAP_PCL                              ERR_CODE                              BREAK_LOC
     BREAK_MESSAGE_REPORTER                SPEC_BUF                              IN_RES
     M$EI                                  M$EO                                  M$EO1
     M$ME                                  M$ME#                                 M$SI
     M$READFILE                            M$DO                                  M$DO#
     M$STD1                                M$SORT1                               B$TCB$
     B$JIT$                                FPT_ERRMSG                            VLR_ERRMSG
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:15   


        1        1        /*M* VPL$HELPERR MODULE CONTAINS HELP AND ERROR ROUTINES                      */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DTI=1,THI=1 */
        8        8        /* NEXT AVAILABLE ERROR CODE = 50 (BY 10'S) */
        9        9        VPL$ERR_PROC: PROC(SEVERITY,CODE,MID,ERR,FIELD1_,FIELD2_,ERRDCB,RETSEV);

      9 11 000000   000000 700200 xent  VPL$ERR_PROC TSX0  ! X66_AUTO_N
        11 000001   000022 000010                    ZERO    18,8

       10       10        /*D* NAME: VPL$ERR_PROC
       11       11             CALL: CALL VPL$ERR_PROC(SEVERITY,CODE,MID,ERR,FIELD1_,FIELD2_,ERRDCB,RETSEV);
       12       12             DESCRIPTION: VPL$ERR_PROC formats a 36 bit error code with which it calls
       13       13                          M$ERRMSG to report on said error. This error code is composed
       14       14                          of 1) the current B$ALT.ERR value if CODE=0 and ERR was
       15       15                                not specified
       16       16                             2) ERR if CODE=0 and ERR was specified
       17       17                             3) if CODE~=0, fcg of 'VP', mid of MID, code of CODE
       18       18                          the SEV field is always set to 0.
       19       19
       20       20                          SEVERITY is the error severity.  If the RETSEV field is
       21       21                          omitted, it controls the return:
       22       22                            SEVERITY     DISPOSITION
       23       23                            --------     -----------
       24       24                               0         Information only --- not an error.
       25       25                               1         Warning --- normal return.
       26       26                               2         Abort step.
       27       27                               3         Abort command.
       28       28                               4         Fatal error --- abort PCL.
       29       29                               5         Fatal error --- PCL trapped!
       30       30
       31       31                          FIELD1_ and FIELD2_ are optional and if found are used
       32       32                          as substitution fields in the call to M$ERRMSG.
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:16   
       33       33
       34       34                          RETSEV controls the return from this error.  If
       35       35                          omitted, it defaults to the value of SEVERITY.
       36       36        */
       37       37        /**/
       38       38        /*  Parameters  */
       39       39        /**/
       40       40    1   DCL ERRDCB SBIN WORD;
       41       41    1   DCL SEVERITY SBIN WORD;
       42       42    1   DCL CODE SBIN WORD;                     /* ERR.CODE TO REPORT...IF 0,         */
       43       43                                                /* USE B$ALT.ERR OR ERR               */
       44       44                                                /* IF ERR IS PRESENT                  */
       45       45    1   DCL MID BIT(6);                         /* MID OF ERROR. PRESENT ONLY IF      */
       46       46                                                /* CODE~=0                            */
       47       47    1   DCL ERR BIT(36);                        /* ERR TO USE (IF PRESENT) ONLY       */
       48       48                                                /* WHEN CODE=0                        */
       49       49    1   DCL FIELD1_ BIT(72);
       50       50    1   DCL FIELD2_ BIT(72);
       51       51    1   DCL RETSEV SBIN WORD;
       52       52        /**/
       53       53        /*  INCLUDE FILES  */
       54       54        /**/
       55       55        %INCLUDE VP_DATA_R;
       56     7042        %PARSE$OUT(NAME = OUT$BLK,STCLASS = BASED);
       57     7087        %B$TCB;
       58     7090        %B$ALT;
       59     7098        %INCLUDE F$DCB;
       60     7147 S      %INCLUDE B$JIT_C;
       61     7148        %INCLUDE B_ERRORS_C;
       62     8275        /**/
       63     8276        /*  BASED STRUCTURES  */
       64     8277        /**/
       65     8278        %B$JIT0(STCLASS="BASED(B$JIT$)");
       66     8367    1         2 * BIT(1);                       /* DON'T NEED REST OF JIT             */
       67     8368        /**/
       68     8369        /*  LOCAL AUTO  */
       69     8370        /**/
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:17   
       70     8371    1   DCL I SBIN WORD;
       71     8372    1   DCL RETSEV_ SBIN WORD;
       72     8373        /**/
       73     8374        /*  LOCAL STATIC  */
       74     8375        /**/
       75     8376    1   DCL LAST_CODE_SEV UBIN(3) STATIC;
       76     8377    1   DCL PRINT BIT(1) STATIC;
       77     8378        /* The following tables, REAL_ERROR_CODE, and FRIENDLY_ERROR_CODE
       78     8379        are used to translate some monitor error messages into something
       79     8380        more palatable to the general PCL user.  When a monitor error occurs,
       80     8381        REAL_ERROR_CODE is searched for the code of the error.  If a match is
       81     8382        found, the corresponding FRIENDLY_ERROR_CODE is substituted.
       82     8383        */
       83     8384    1   DCL REAL_ERROR_CODE(0:%MAX_ERR_SUBS#) UBIN BYTE STATIC INIT(0,
       84     8385    1   %E$FILLIM,
       85     8386    1   %E$NOCONT,
       86     8387    1   %E$RANBADBLK);
       87     8388    1   DCL FRIENDLY_ERROR_CODE(0:%MAX_ERR_SUBS#) UBIN BYTE STATIC INIT(0,
       88     8389    1   40,
       89     8390    1   30,
       90     8391    1   20);
       91     8392        /*E*   ERROR: VPL-00040
       92     8393             MESSAGE: The output file cannot hold any more records.  Try increasing
       93     8394                      the initial allocation, NUMRECORDS, or using the XTNSIZE option.
       94     8395        */
       95     8396        /*E*   ERROR: VPL-00030
       96     8397             MESSAGE: You cannot encrypt or compress a record that large.
       97     8398        */
       98     8399        /*E*   ERROR: VPL-00020
       99     8400             MESSAGE: Block number outside range of allocated space% for %FN%.
      100     8401            MESSAGE1: Check IXTNSIZE, or add the XTNSIZE option next time.
      101     8402        */
      102     8403        /**/
      103     8404        /*  ENTRY DCLS  */
      104     8405        /**/
      105     8406        %VP_ENTRIES (OMIT=VPL$ERR_PROC);
      106     8614        %INCLUDE XUG_ENTRY;
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:18   
      107     8645        /**/
      108     8646
      109     8647    1           PRINT = '1'B;                   /* Print this error message           */

   8647 11 000002   400000 236003                    LDQ     -131072,DU
        11 000003   000001 756000 10                 STQ     PRINT

      110     8648    1           CALL SETDCB;

   8648 11 000004   000430 701000 11                 TSX1    SETDCB
        11 000005   000000 011000                    NOP     0

      111     8649    1           GOTO BEGIN;

   8649 11 000006   000022 710000 11                 TRA     BEGIN

      112     8650        %EJECT;
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:19   
      113     8651    1   VPL$ERR_NO_PRINT: ENTRY(SEVERITY,CODE,MID,ERR,FIELD1_,FIELD2_,ERRDCB,RETSEV);

   8651 11 000007   000000 700200 xent  VPL$ERR_NO_* TSX0  ! X66_AUTO_N
        11 000010   000022 000010                    ZERO    18,8

      114     8652        /*D* NAME: VPL$ERR_NO_PRINT
      115     8653          CALL: CALL VPL$ERR_NO_PRINT(SEVERITY,CODE,MID,ERR,FIELD1_,FIELD2_,ERRDCB,RETSEV);
      116     8654             DESCRIPTION: This is an entry point inside VPL$ERR_PROC.
      117     8655                          VPL$ERR_NO_PRINT behaves exactly like VPL$ERR_PROC except
      118     8656                          that M$ERRMSG is not called.  This is handy to format an
      119     8657                          error code (and set it to bump on '?') without printing.
      120     8658        */
      121     8659    1           PRINT = '0'B;                   /* We don't want to print             */

   8659 11 000011   000001 450000 10                 STZ     PRINT

      122     8660    1           GOTO BEGIN;

   8660 11 000012   000022 710000 11                 TRA     BEGIN

      123     8661
      124     8662    1   VPL$ERR_FETCH: ENTRY(SEVERITY,CODE,MID,ERR,FIELD1_,FIELD2_,ERRDCB,RETSEV);

   8662 11 000013   000000 700200 xent  VPL$ERR_FET* TSX0  ! X66_AUTO_N
        11 000014   000022 000010                    ZERO    18,8

      125     8663        /*D* NAME: VPL$ERR_FETCH
      126     8664             CALL: CALL VPL$ERR_FETCH(SEVERITY,CODE,MID,ERR,FIELD1_,FIELD2_,ERRDCB,RETSEV);
      127     8665             DESCRIPTION: This is an entry point inside VPL$ERR_PROC.
      128     8666                          VPL$ERR_FETCH behaves exactly like VPL$ERR_PROC except
      129     8667                          that the error message is not printed.  It is returned in
      130     8668                          ERR_BUF.  The length in characters is returned in ERR_LEN.
      131     8669        */
      132     8670    1           FPT_ERRMSG.V.OUTDCB1# = 0;

   8670 11 000015   000000 220003                    LDX0    0,DU
        11 000016   000026 440000 xsym               SXL0    FPT_ERRMSG+22
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:20   

      133     8671    1           FPT_ERRMSG.V.OUTDCB2# = 0;

   8671 11 000017   000027 740000 xsym               STX0    FPT_ERRMSG+23

      134     8672    1           PRINT = '1'B;

   8672 11 000020   400000 236003                    LDQ     -131072,DU
        11 000021   000001 756000 10                 STQ     PRINT

      135     8673
      136     8674    1   BEGIN:  CALL VPD$FINISH_NLIST;          /* Finish any dangling name list      */

   8674 11 000022   000002 631400 xsym  BEGIN        EPPR1   B_VECTNIL+2
        11 000023   000000 701000 xent               TSX1    VPD$FINISH_NLIST
        11 000024   000000 011000                    NOP     0

      137     8675    1           IF CODE=0

   8675 11 000025   200004 470500                    LDP0    @CODE,,AUTO
        11 000026   000000 235100                    LDA     0,,PR0
        11 000027   000052 601000 11                 TNZ     s:8690

      138     8676    1            THEN
      139     8677    1              IF ADDR(ERR)=ADDR(NIL)

   8677 11 000030   200006 236100                    LDQ     @ERR,,AUTO
        11 000031   000001 116000 xsym               CMPQ    B_VECTNIL+1
        11 000032   000043 601000 11                 TNZ     s:8685

      140     8678    1               THEN
      141     8679    2               DO;

      142     8680    2                  ERR_CODE = B$TCB$->B$TCB.ALT$->B$ALT.ERR;

   8680 11 000033   000000 471400 xsym               LDP1    B$TCB$
        11 000034   100000 473500                    LDP3    0,,PR1
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:21   
        11 000035   300102 236100                    LDQ     66,,PR3
        11 000036   000000 756000 xsym               STQ     ERR_CODE

      143     8681    2                  FPT_ERRMSG.V.DCB# = B$TCB$->B$TCB.ALT$->B$ALT.DCB#;

   8681 11 000037   100000 473500                    LDP3    0,,PR1
        11 000040   300101 720100                    LXL0    65,,PR3
        11 000041   000026 740000 xsym               STX0    FPT_ERRMSG+22

      144     8682    2                  END;

   8682 11 000042   000067 710000 11                 TRA     s:8695

      145     8683    1               ELSE                        /* Don't look in TCB                  */
      146     8684    2               DO;

      147     8685    2                  ERR_CODE = ERR;

   8685 11 000043   200006 471500                    LDP1    @ERR,,AUTO
        11 000044   003000 060500                    CSL     bolr='003'O
        11 000045   100000 000044                    BDSC    0,,PR1                   by=0,bit=0,n=36
        11 000046   000000 000044 xsym               BDSC    ERR_CODE                 by=0,bit=0,n=36

      148     8686    2                  FPT_ERRMSG.V.DCB# = 0;

   8686 11 000047   000000 220003                    LDX0    0,DU
        11 000050   000026 740000 xsym               STX0    FPT_ERRMSG+22

      149     8687    2                  END;

   8687 11 000051   000067 710000 11                 TRA     s:8695

      150     8688    1            ELSE
      151     8689    2            DO;

      152     8690    2               ERR_CODE.FCG = '2620'O;     /* 'VP' IN SIXBIT                     */

PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:22   
   8690 11 000052   262000 236003                    LDQ     91136,DU
        11 000053   000000 752060 xsym               STCQ    ERR_CODE,'60'O

      153     8691    2               ERR_CODE.MID = MID;

   8691 11 000054   200005 471500                    LDP1    @MID,,AUTO
        11 000055   003000 060500                    CSL     bolr='003'O
        11 000056   100000 000006                    BDSC    0,,PR1                   by=0,bit=0,n=6
        11 000057   000000 230006 xsym               BDSC    ERR_CODE                 by=1,bit=3,n=6

      154     8692    2               ERR_CODE.MON = %NO#;

   8692 11 000060   000000 236000 12                 LDQ     0
        11 000061   000000 356000 xsym               ANSQ    ERR_CODE

      155     8693    2               ERR_CODE.CODE = CODE;

   8693 11 000062   000000 236100                    LDQ     0,,PR0
        11 000063   000003 736000                    QLS     3
        11 000064   000000 676000 xsym               ERQ     ERR_CODE
        11 000065   377770 376007                    ANQ     131064,DL
        11 000066   000000 656000 xsym               ERSQ    ERR_CODE

      156     8694    2               END;

      157     8695    1           IF ADDR(ERRDCB) ~= ADDR(NIL)

   8695 11 000067   200011 236100                    LDQ     @ERRDCB,,AUTO
        11 000070   000001 116000 xsym               CMPQ    B_VECTNIL+1
        11 000071   000075 600000 11                 TZE     s:8698

      158     8696    1            THEN
      159     8697    1              FPT_ERRMSG.V.DCB# = ERRDCB;

   8697 11 000072   200011 471500                    LDP1    @ERRDCB,,AUTO
        11 000073   100000 720100                    LXL0    0,,PR1
        11 000074   000026 740000 xsym               STX0    FPT_ERRMSG+22
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:23   

      160     8698    1           ERR_CODE.SEV = 0;

   8698 11 000075   000001 236000 12                 LDQ     1
        11 000076   000000 356000 xsym               ANSQ    ERR_CODE

      161     8699    1           FPT_ERRMSG.V.SUBMESS# = %YES#;

   8699 11 000077   001000 236003                    LDQ     512,DU
        11 000100   000030 256000 xsym               ORSQ    FPT_ERRMSG+24

      162     8700    1           IF ADDR(FIELD1_)~=ADDR(NIL)

   8700 11 000101   200007 236100                    LDQ     @FIELD1_,,AUTO
        11 000102   000001 116000 xsym               CMPQ    B_VECTNIL+1
        11 000103   000111 600000 11                 TZE     s:8704

      163     8701    1            THEN
      164     8702    1              FPT_ERRMSG.FIELD1_ = FIELD1_;

   8702 11 000104   200007 471500                    LDP1    @FIELD1_,,AUTO
        11 000105   003000 060500                    CSL     bolr='003'O
        11 000106   100000 000110                    BDSC    0,,PR1                   by=0,bit=0,n=72
        11 000107   000014 000110 xsym               BDSC    FPT_ERRMSG+12            by=0,bit=0,n=72
        11 000110   000113 710000 11                 TRA     s:8705

      165     8703    1            ELSE
      166     8704    1              FPT_ERRMSG.FIELD1_ = VECTOR(NIL);

   8704 11 000111   000002 237000 12                 LDAQ    2
        11 000112   000014 757000 xsym               STAQ    FPT_ERRMSG+12

      167     8705    1           IF ADDR(FIELD2_)~=ADDR(NIL)

   8705 11 000113   200010 236100                    LDQ     @FIELD2_,,AUTO
        11 000114   000001 116000 xsym               CMPQ    B_VECTNIL+1
        11 000115   000123 600000 11                 TZE     s:8709
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:24   

      168     8706    1            THEN
      169     8707    1              FPT_ERRMSG.FIELD2_ = FIELD2_;

   8707 11 000116   200010 471500                    LDP1    @FIELD2_,,AUTO
        11 000117   003000 060500                    CSL     bolr='003'O
        11 000120   100000 000110                    BDSC    0,,PR1                   by=0,bit=0,n=72
        11 000121   000016 000110 xsym               BDSC    FPT_ERRMSG+14            by=0,bit=0,n=72
        11 000122   000125 710000 11                 TRA     s:8710

      170     8708    1            ELSE
      171     8709    1              FPT_ERRMSG.FIELD2_ = VECTOR(NIL);

   8709 11 000123   000002 237000 12                 LDAQ    2
        11 000124   000016 757000 xsym               STAQ    FPT_ERRMSG+14

      172     8710    1           IF ERR_CODE.MON

   8710 11 000125   000000 236000 xsym               LDQ     ERR_CODE
        11 000126   400000 316007                    CANQ    -131072,DL
        11 000127   000164 600000 11                 TZE     CONV_DONE

      173     8711    1            THEN
      174     8712    2            DO I=1 TO %MAX_ERR_SUBS#;

   8712 11 000130   000001 235007                    LDA     1,DL
        11 000131   200013 755100                    STA     I,,AUTO

      175     8713    2               IF REAL_ERROR_CODE(I) = ERR_CODE.CODE

   8713 11 000132   000000 236000 xsym               LDQ     ERR_CODE
        11 000133   000003 772000                    QRL     3
        11 000134   037777 376007                    ANQ     16383,DL
        11 000135   200020 756100                    STQ     RETSEV_+4,,AUTO
        11 000136   200013 720100                    LXL0    I,,AUTO
        11 000137   000002 236010 10                 LDQ     REAL_ERROR_CODE,X0
        11 000140   000033 772000                    QRL     27
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:25   
        11 000141   200020 116100                    CMPQ    RETSEV_+4,,AUTO
        11 000142   000160 601000 11                 TNZ     s:8722

      176     8714    2                THEN
      177     8715    3                DO;

      178     8716    3                   ERR_CODE.CODE = FRIENDLY_ERROR_CODE(I);

   8716 11 000143   000006 236010 10                 LDQ     FRIENDLY_ERROR_CODE,X0
        11 000144   777000 376003                    ANQ     -512,DU
        11 000145   000030 772000                    QRL     24
        11 000146   000000 676000 xsym               ERQ     ERR_CODE
        11 000147   377770 376007                    ANQ     131064,DL
        11 000150   000000 656000 xsym               ERSQ    ERR_CODE

      179     8717    3                   ERR_CODE.MON = %NO#;

   8717 11 000151   000000 236000 12                 LDQ     0
        11 000152   000000 356000 xsym               ANSQ    ERR_CODE

      180     8718    3                   ERR_CODE.FCG = '2620'O; /* VP in six-bit                      */

   8718 11 000153   262000 236003                    LDQ     91136,DU
        11 000154   000000 752060 xsym               STCQ    ERR_CODE,'60'O

      181     8719    3                   ERR_CODE.MID = '14'O;   /* L in six-bit                       */

   8719 11 000155   000014 236003                    LDQ     12,DU
        11 000156   000000 752010 xsym               STCQ    ERR_CODE,'10'O

      182     8720    3                   GOTO CONV_DONE;

   8720 11 000157   000164 710000 11                 TRA     CONV_DONE

      183     8721    3                   END;
      184     8722    2               END;

PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:26   
   8722 11 000160   200013 054100                    AOS     I,,AUTO
        11 000161   200013 235100                    LDA     I,,AUTO
        11 000162   000003 115007                    CMPA    3,DL
        11 000163   000132 604400 11                 TMOZ    s:8713

   8720 11 000164                       CONV_DONE    null
      185     8723    1   CONV_DONE:;
      186     8724    1           IF PRINT

   8724 11 000164   000001 234000 10                 SZN     PRINT
        11 000165   000253 605000 11                 TPL     s:8756

      187     8725    1            THEN                           /* This was VPL$ERR_PROC              */
      188     8726    1              IF FPT_ERRMSG.V.OUTDCB1# ~= DCBNUM(NIL) OR

   8726 11 000166   000026 720000 xsym               LXL0    FPT_ERRMSG+22
        11 000167   000172 601000 11                 TNZ     s:8729
        11 000170   000027 221000 xsym               LDX1    FPT_ERRMSG+23
        11 000171   000212 600000 11                 TZE     s:8737

      189     8727    1                FPT_ERRMSG.V.OUTDCB2# ~= DCBNUM(NIL)
      190     8728    2               THEN DO;

      191     8729    2                  GETCMD.ERR_CODE = ERR_CODE;

   8729 11 000172   000000 236000 xsym               LDQ     ERR_CODE
        11 000173   000010 756000 xsym               STQ     GETCMD+8

      192     8730    2                  GETCMD.F1_ = BITVECT(FPT_ERRMSG.FIELD1_);

   8730 11 000174   000014 237000 xsym               LDAQ    FPT_ERRMSG+12
        11 000175   000017 755000 xsym               STA     GETCMD+15
        11 000176   000020 756000 xsym               STQ     GETCMD+16

      193     8731    2                  GETCMD.F2_ = BITVECT(FPT_ERRMSG.FIELD2_);

   8731 11 000177   000016 237000 xsym               LDAQ    FPT_ERRMSG+14
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:27   
        11 000200   000021 755000 xsym               STA     GETCMD+17
        11 000201   000022 756000 xsym               STQ     GETCMD+18

      194     8732    2                  GETCMD.ERRDCB# = FPT_ERRMSG.V.DCB#;

   8732 11 000202   000026 235000 xsym               LDA     FPT_ERRMSG+22
        11 000203   000022 771000                    ARL     18
        11 000204   000011 755000 xsym               STA     GETCMD+9

      195     8733    2                  CALL XUG$ERRMSG (GETCMD);

   8733 11 000205   000004 630400 12                 EPPR0   4
        11 000206   000017 631400 xsym               EPPR1   B_VECTNIL+15
        11 000207   000000 701000 xent               TSX1    XUG$ERRMSG
        11 000210   000000 011000                    NOP     0

      196     8734    2                  END;

   8734 11 000211   000261 710000 11                 TRA     s:8758

      197     8735    1               ELSE
      198     8736    2               DO;

      199     8737    2                  IF B$JIT$ -> B$JIT.MODE ~= %M_INT#

   8737 11 000212   000000 470400 xsym               LDP0    B$JIT$
        11 000213   000000 236100                    LDQ     0,,PR0
        11 000214   740000 376003                    ANQ     -16384,DU
        11 000215   140000 116003                    CMPQ    49152,DU
        11 000216   000221 600000 11                 TZE     s:8740

      200     8738    2                   THEN                    /* User isn't interractive            */
      201     8739    2                     ERR_CODE.SEV = 7;     /* Try highest possible, first        */

   8739 11 000217   000007 236007                    LDQ     7,DL
        11 000220   000000 256000 xsym               ORSQ    ERR_CODE

PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:28   
      202     8740    2                  CALL M$ERRMSG(FPT_ERRMSG) ALTRET(ERRMSG_PROBLEM);

   8740 11 000221   000000 630400 xsym               EPPR0   FPT_ERRMSG
        11 000222   420000 713400                    CLIMB   alt,+8192
        11 000223   405000 401760                    pmme    nvectors=11
        11 000224   000226 702000 11                 TSX2    ERRMSG_PROBLEM

      203     8741    3                  DO WHILE ('0'B);

   8741 11 000225   000250 710000 11                 TRA     IGNORE_SECOND

      204     8742    3   ERRMSG_PROBLEM:   ERR_CODE.FCG = '2620'O; /* 'VP' in sixbit                   */

   8742 11 000226   262000 236003       ERRMSG_PROB* LDQ     91136,DU
        11 000227   000000 752060 xsym               STCQ    ERR_CODE,'60'O

      205     8743    3                     ERR_CODE.MID = '14'O; /* 'L' in sixbit                      */

   8743 11 000230   000014 236003                    LDQ     12,DU
        11 000231   000000 752010 xsym               STCQ    ERR_CODE,'10'O

      206     8744    3                     ERR_CODE.MON = %NO#;

   8744 11 000232   000000 236000 12                 LDQ     0
        11 000233   000000 356000 xsym               ANSQ    ERR_CODE

      207     8745    3                     ERR_CODE.CODE = 10;

   8745 11 000234   000000 236000 xsym               LDQ     ERR_CODE
        11 000235   000005 376000 12                 ANQ     5
        11 000236   000120 276007                    ORQ     80,DL
        11 000237   000000 756000 xsym               STQ     ERR_CODE

      208     8746    3                     ERR_CODE.SEV = 3;     /* Abort command                      */

   8746 11 000240   000000 236000 xsym               LDQ     ERR_CODE
        11 000241   000001 376000 12                 ANQ     1
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:29   
        11 000242   000003 276007                    ORQ     3,DL
        11 000243   000000 756000 xsym               STQ     ERR_CODE

      209     8747    3                     CALL M$ERRMSG(FPT_ERRMSG) ALTRET(IGNORE_SECOND);

   8747 11 000244   000000 630400 xsym               EPPR0   FPT_ERRMSG
        11 000245   420000 713400                    CLIMB   alt,+8192
        11 000246   405000 401760                    pmme    nvectors=11
        11 000247   000250 702000 11                 TSX2    IGNORE_SECOND

   8746 11 000250                       IGNORE_SECO* null
      210     8748        /*E* ERROR:   VPL-00010
      211     8749             MESSAGE: ERROR! (no message available)
      212     8750        */
      213     8751    3   IGNORE_SECOND:    ;
      214     8752    3                     END;

      215     8753    2                  ERR_CODE = VLR_ERRMSG.CODEUSED;

   8753 11 000250   000003 236000 xsym               LDQ     VLR_ERRMSG+3
        11 000251   000000 756000 xsym               STQ     ERR_CODE

      216     8754    2                  END;

   8754 11 000252   000261 710000 11                 TRA     s:8758

      217     8755    1            ELSE                           /* This was VPL$ERR_NO_PRINT          */
      218     8756    1              ERR_CODE.SEV = ERR_CODE.SEV -1; /* Make the next bump give the     */

   8756 11 000253   000000 236000 xsym               LDQ     ERR_CODE
        11 000254   000007 376007                    ANQ     7,DL
        11 000255   000001 136007                    SBLQ    1,DL
        11 000256   000000 676000 xsym               ERQ     ERR_CODE
        11 000257   000007 376007                    ANQ     7,DL
        11 000260   000000 656000 xsym               ERSQ    ERR_CODE

      219     8757                                                /* first error message                */
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:30   
      220     8758    1           ERROR_DCB = FPT_ERRMSG.V.DCB#;  /* Remember DCB that had error        */

   8758 11 000261   000026 235000 xsym               LDA     FPT_ERRMSG+22
        11 000262   000022 771000                    ARL     18
        11 000263   000000 755000 xsym               STA     ERROR_DCB

      221     8759    1           IF FPT_ERRMSG.V.OUTDCB1# = 0

   8759 11 000264   000026 720000 xsym               LXL0    FPT_ERRMSG+22
        11 000265   000310 601000 11                 TNZ     s:8769
        11 000266   000027 221000 xsym               LDX1    FPT_ERRMSG+23
        11 000267   000310 601000 11                 TNZ     s:8769
        11 000270   000001 234000 10                 SZN     PRINT
        11 000271   000310 605000 11                 TPL     s:8769

      222     8760    1             AND FPT_ERRMSG.V.OUTDCB2# = 0
      223     8761    1             AND PRINT
      224     8762    1            THEN                           /* We only wanted buffer stuffed      */
      225     8763    2            DO;                            /* Find message length                */

      226     8764    2               ERR_BUF = SUBSTR(ERR_BUF,2); /* Remove leading spaces             */

   8764 11 000272   040000 100400                    MLR     fill='040'O
        11 000273   000000 400166 xsym               ADSC9   ERR_BUF                  cn=2,n=118
        11 000274   000000 000170 xsym               ADSC9   ERR_BUF                  cn=0,n=120

      227     8765    2               ERR_LEN = LENGTHC(ERR_BUF);

   8765 11 000275   000170 236007                    LDQ     120,DL
        11 000276   000000 756000 xsym               STQ     ERR_LEN

      228     8766    3               DO WHILE (ERR_LEN > 0 AND SUBSTR(ERR_BUF,ERR_LEN-1,1) = ' ');

   8766 11 000277   000302 710000 11                 TRA     s:8768

      229     8767    3                  ERR_LEN = ERR_LEN -1;

PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:31   
   8767 11 000300   000001 336007                    LCQ     1,DL
        11 000301   000000 056000 xsym               ASQ     ERR_LEN

      230     8768    3                  END;

   8768 11 000302   000000 235000 xsym               LDA     ERR_LEN
        11 000303   000310 604400 11                 TMOZ    s:8769
        11 000304   040000 106405                    CMPC    fill='040'O
        11 000305   777777 600001 xsym               ADSC9   ERR_BUF-1,A              cn=3,n=1
        11 000306   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        11 000307   000300 600000 11                 TZE     s:8767

      231     8769    2               END;

   8769 11 000310   000313 710000 11                 TRA     s:8785

      232     8770        %EJECT;
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:32   
      233     8771    1   VPL$ERR_SEV_HANDLER: ENTRY(SEVERITY,CODE,MID,ERR,FIELD1_,FIELD2_,ERRDCB,RETSEV);

   8771 11 000311   000000 700200 xent  VPL$ERR_SEV* TSX0  ! X66_AUTO_N
        11 000312   000022 000010                    ZERO    18,8

      234     8772        /*D* NAME: VPL$ERR_SEV_HANDLER
      235     8773             CALL: CALL VPL$ERR_SEV_HANDLER(SEVERITY,,,,,,,RETSEV);
      236     8774             DESCRIPTION: This entry point lies inside VPL$ERR_PROC and is used
      237     8775                          to handle the return from an error condition without
      238     8776                          printing any message.  The following parameters are
      239     8777                          valid and used according to the description under
      240     8778                          VPL$ERR_PROC:
      241     8779                               SEVERITY
      242     8780                               RETSEV
      243     8781        */
      244     8782        /**/
      245     8783        /*  Maintain some information about this call.                                */
      246     8784        /**/
      247     8785    1           IF SEVERITY > 1

   8785 11 000313   200003 470500                    LDP0    @SEVERITY,,AUTO
        11 000314   000000 235100                    LDA     0,,PR0
        11 000315   000001 115007                    CMPA    1,DL
        11 000316   000321 604400 11                 TMOZ    s:8788

      248     8786    1            THEN                           /* A real error                       */
      249     8787    1              ERR_FLG = %YES#;

   8787 11 000317   400000 236003                    LDQ     -131072,DU
        11 000320   000000 756000 xsym               STQ     ERR_FLG

      250     8788    1           IF SEVERITY > HIGHEST_SEVERITY AND HIGHEST_SEVERITY ~= -1

   8788 11 000321   000000 236100                    LDQ     0,,PR0
        11 000322   000000 116000 xsym               CMPQ    HIGHEST_SEVERITY
        11 000323   000330 604400 11                 TMOZ    s:8791
        11 000324   000000 235000 xsym               LDA     HIGHEST_SEVERITY
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:33   
        11 000325   000027 115000 xsym               CMPA    B_VECTNIL+23
        11 000326   000330 600000 11                 TZE     s:8791

      251     8789    1            THEN
      252     8790    1              HIGHEST_SEVERITY = SEVERITY;

   8790 11 000327   000000 756000 xsym               STQ     HIGHEST_SEVERITY

      253     8791    1           IF ADDR(RETSEV) = ADDR(NIL)

   8791 11 000330   200012 236100                    LDQ     @RETSEV,,AUTO
        11 000331   000001 116000 xsym               CMPQ    B_VECTNIL+1
        11 000332   000336 601000 11                 TNZ     s:8795

      254     8792    1            THEN
      255     8793    1              RETSEV_ = SEVERITY;          /* Default to SEVERITY if not passed  */

   8793 11 000333   000000 235100                    LDA     0,,PR0
        11 000334   200014 755100                    STA     RETSEV_,,AUTO
        11 000335   000341 710000 11                 TRA     s:8799

      256     8794    1            ELSE
      257     8795    1              RETSEV_ = RETSEV;

   8795 11 000336   200012 471500                    LDP1    @RETSEV,,AUTO
        11 000337   100000 235100                    LDA     0,,PR1
        11 000340   200014 755100                    STA     RETSEV_,,AUTO

      258     8796        /**/
      259     8797        /*  Return to the user in a manner consistant with the return severity.       */
      260     8798        /**/
      261     8799    1           IF RETSEV_ > 1 AND ERROR_SEVERITY = 1

   8799 11 000341   000001 115007                    CMPA    1,DL
        11 000342   000351 604400 11                 TMOZ    s:8802
        11 000343   000000 235000 xsym               LDA     ERROR_SEVERITY
        11 000344   000001 115007                    CMPA    1,DL
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:34   
        11 000345   000351 601000 11                 TNZ     s:8802

      262     8800    1            THEN
      263     8801    1              UNWIND TO TRAP_PCL;          /* Do M$XXX                           */

   8801 11 000346   000000 237200 xsym               LDAQ  ! TRAP_PCL
        11 000347   000000 700200 xent               TSX0  ! X66_AUNWIND
        11 000350   000000 000200                    ZERO    0,128

      264     8802    1           IF RETSEV_ > 1 AND ERROR_SEVERITY = 3 THEN

   8802 11 000351   200014 235100                    LDA     RETSEV_,,AUTO
        11 000352   000001 115007                    CMPA    1,DL
        11 000353   000362 604400 11                 TMOZ    s:8804
        11 000354   000000 235000 xsym               LDA     ERROR_SEVERITY
        11 000355   000003 115007                    CMPA    3,DL
        11 000356   000362 601000 11                 TNZ     s:8804

      265     8803    1              UNWIND TO ABORT_PCL;

   8803 11 000357   000000 237200 xsym               LDAQ  ! ABORT_PCL
        11 000360   000000 700200 xent               TSX0  ! X66_AUNWIND
        11 000361   000000 000200                    ZERO    0,128

      266     8804    2           DO CASE(RETSEV_);

   8804 11 000362   200014 235100                    LDA     RETSEV_,,AUTO
        11 000363   000006 115007                    CMPA    6,DL
        11 000364   000366 602005 11                 TNC     s:8804+4,AL
        11 000365   000410 710000 11                 TRA     s:8814
        11 000366   000410 710000 11                 TRA     s:8814
        11 000367   000410 710000 11                 TRA     s:8814
        11 000370   000374 710000 11                 TRA     s:8806
        11 000371   000377 710000 11                 TRA     s:8808
        11 000372   000402 710000 11                 TRA     s:8810
        11 000373   000405 710000 11                 TRA     s:8812

PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:35   
      267     8805    2            CASE(2);                       /* ABORT STEP                         */

      268     8806    2              UNWIND TO ABORT_STEP;

   8806 11 000374   000000 237200 xsym               LDAQ  ! ABORT_STEP
        11 000375   000000 700200 xent               TSX0  ! X66_AUNWIND
        11 000376   000000 000200                    ZERO    0,128

      269     8807    2            CASE(3);

      270     8808    2              UNWIND TO ABORT_CMD;

   8808 11 000377   000000 237200 xsym               LDAQ  ! ABORT_CMD
        11 000400   000000 700200 xent               TSX0  ! X66_AUNWIND
        11 000401   000000 000200                    ZERO    0,128

      271     8809    2            CASE(4);

      272     8810    2              UNWIND TO ABORT_PCL;

   8810 11 000402   000000 237200 xsym               LDAQ  ! ABORT_PCL
        11 000403   000000 700200 xent               TSX0  ! X66_AUNWIND
        11 000404   000000 000200                    ZERO    0,128

      273     8811    2            CASE(5);                       /* PCL trapped!                       */

      274     8812    2              UNWIND TO TRAP_PCL;

   8812 11 000405   000000 237200 xsym               LDAQ  ! TRAP_PCL
        11 000406   000000 700200 xent               TSX0  ! X66_AUNWIND
        11 000407   000000 000200                    ZERO    0,128

      275     8813    2            CASE(ELSE);

      276     8814    2              RETURN;

   8814 11 000410   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:36   

      277     8815    2            END;

      278     8816        %EJECT;
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:37   
      279     8817    1   VPL$QUEST: ENTRY;

   8817 11 000411   000000 700200 xent  VPL$QUEST    TSX0  ! X66_AUTO_N
        11 000412   000022 000010                    ZERO    18,8

      280     8818        /*D* NAME: VPL$QUEST
      281     8819             CALL: CALL VPL$QUEST
      282     8820             DESCRIPTION: QUEST drives the ? and ?? commands. If ? was the command,
      283     8821                          then the next verbose message for the current ERR_CODE is
      284     8822                          output if it exists. If it does not exist, the current
      285     8823                          HELP message is output. If ?? was the command, the most
      286     8824                          verbose message for ERR_CODE or all remaining HELP_ERR_CODE
      287     8825                          is output.
      288     8826        */
      289     8827    1           IF PCB.OUT$ -> OUT$BLK.NSUBLKS > 0 /* a ?? was entered                */

   8827 11 000413   000003 470400 xsym               LDP0    PCB+3
        11 000414   000001 220100                    LDX0    1,,PR0
        11 000415   000423 600000 11                 TZE     s:8831

      290     8828    1            THEN
      291     8829    1              CALL XUG$ALLMSG (GETCMD);

   8829 11 000416   000004 630400 12                 EPPR0   4
        11 000417   000017 631400 xsym               EPPR1   B_VECTNIL+15
        11 000420   000000 701000 xent               TSX1    XUG$ALLMSG
        11 000421   000000 011000                    NOP     0
        11 000422   000427 710000 11                 TRA     s:8832

      292     8830    1            ELSE
      293     8831    1              CALL XUG$MOREMSG (GETCMD);

   8831 11 000423   000004 630400 12                 EPPR0   4
        11 000424   000017 631400 xsym               EPPR1   B_VECTNIL+15
        11 000425   000000 701000 xent               TSX1    XUG$MOREMSG
        11 000426   000000 011000                    NOP     0

PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:38   
      294     8832    1           RETURN;

   8832 11 000427   000000 702200 xent               TSX2  ! X66_ARET

      295     8833        /**/
      296     8834    1   SETDCB: PROC;

   8834 11 000430   200016 741300       SETDCB       STX1  ! RETSEV_+2,,AUTO

      297     8835        /**/
      298     8836        /*  Set up DCBs for M$ERRMSG that will output  */
      299     8837        /**/
      300     8838    2           FPT_ERRMSG.V.OUTDCB1# = M$DO#;

   8838 11 000431   000000 720000 xsym               LXL0    M$DO#
        11 000432   000026 440000 xsym               SXL0    FPT_ERRMSG+22

      301     8839    2           FPT_ERRMSG.V.OUTDCB2# = M$ME#;

   8839 11 000433   000000 722000 xsym               LXL2    M$ME#
        11 000434   000027 742000 xsym               STX2    FPT_ERRMSG+23

      302     8840    2           RETURN;

   8840 11 000435   000001 702211                    TSX2  ! 1,X1
      303     8841    2   END SETDCB;
      304     8842    1   END VPL$ERR_PROC;
      305     8843        %EOD;

PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:39   
--  Include file information  --

   XUG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   VP_MACRO_C.:E05TOU  is referenced.
   XS_MACRO_C.:E05TOU  is referenced.
   VP_PERR_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VPL$ERR_PROC.
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:40   

 **** Variables and constants ****

  ****  Section 010  Data  VPL$ERR_PROC

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w UBIN(9)     r     1 FRIENDLY_ERROR_CODE(0:3)
     1-0-0/b BIT         r     1 PRINT
     2-0-0/w UBIN(9)     r     1 REAL_ERROR_CODE(0:3)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @CODE                      6-0-0/w PTR         r     1 @ERR
    11-0-0/w PTR         r     1 @ERRDCB                    7-0-0/w PTR         r     1 @FIELD1_
    10-0-0/w PTR         r     1 @FIELD2_                   5-0-0/w PTR         r     1 @MID
    12-0-0/w PTR         r     1 @RETSEV                    3-0-0/w PTR         r     1 @SEVERITY
    *0-0-0/w SBIN        r     1 CODE                      *0-0-0/b BIT         r     1 ERR
    *0-0-0/w SBIN        r     1 ERRDCB                    *0-0-0/b BIT (72)    r     1 FIELD1_
    *0-0-0/b BIT (72)    r     1 FIELD2_                   13-0-0/w SBIN        r     1 I
    *0-0-0/b BIT (6)     r     1 MID                       *0-0-0/w SBIN        r     1 RETSEV
    14-0-0/w SBIN        r     1 RETSEV_                   *0-0-0/w SBIN        r     1 SEVERITY

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d REMB        r     1 ABORT_CMD                  0-0-0/d REMB        r     1 ABORT_PCL
     0-0-0/d REMB        r     1 ABORT_STEP                 0-0-0/w PTR         r     1 B$JIT$
     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/w EPTR        r     1 BREAK_MESSAGE_REPORTER
     0-0-0/w SBIN        r     1 ERROR_DCB                  0-0-0/w SBIN        r     1 ERROR_SEVERITY
     0-0-0/c CHAR(120)   r     1 ERR_BUF                    0-0-0/b STRC        r     1 ERR_CODE
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:41   
     0-0-0/w BIT         r     1 ERR_FLG                    0-0-0/w SBIN        r     1 ERR_LEN
     0-0-0/d STRC(936)   r     1 FPT_ERRMSG                 0-0-0/d STRC(1512)  r     1 GETCMD
     0-0-0/w SBIN        r     1 HIGHEST_SEVERITY           0-0-0/w SBIN        r     1 M$DO#
     0-0-0/w SBIN        r     1 M$ME#                      0-0-0/w STRC(504)   r     1 PCB
     0-0-0/d REMB        r     1 TRAP_PCL                   0-0-0/d STRC(144)   r     1 VLR_ERRMSG

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/d STRC(865)   r     1 B$JIT
     0-0-0/w STRC(144)   r     1 B$TCB                      0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w STRC(144)   r     1 OUT$BLK


   Procedure VPL$ERR_PROC requires 286 words for executable code.
   Procedure VPL$ERR_PROC requires 18 words of local(AUTO) storage.
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:42   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:43   
          MINI XREF LISTING

ABORT_CMD
      5227**DCL      8808>>UNWIND
ABORT_PCL
      5227**DCL      8803>>UNWIND   8810>>UNWIND
ABORT_STEP
      5226**DCL      8806>>UNWIND
B$ALT.CODE
      7092**DCL      7092--REDEF    7093--REDEF    7093--REDEF
B$ALT.DCB#
      7093**DCL      8681>>ASSIGN
B$ALT.ERR
      7093**DCL      8680>>ASSIGN
B$ALT.ERR.ERR#
      7094**DCL      7094--REDEF
B$ALT.EVID
      7093**DCL      7093--REDEF    7093--REDEF
B$JIT.ERR.MID
      8285**DCL      8285--REDEF
B$JIT.MODE
      8279**DCL      8737>>IF
B$JIT$
      6027**DCL      8279--IMP-PTR  8737>>IF
B$TCB.ALT$
      7088**DCL      8680>>ASSIGN   8681>>ASSIGN
B$TCB$
      6027**DCL      8680>>ASSIGN   8681>>ASSIGN
BEGIN
      8674**LABEL    8649--GOTO     8660--GOTO
BREAK_LOC
      5262**DCL      5262--REDEF
CODE
        42**DCL         9--PROC     8651--ENTRY    8662--ENTRY    8675>>IF       8693>>ASSIGN   8771--ENTRY
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:44   
CONV_DONE
      8720**LABEL    8720--GOTO
DEF_ICB.FID.STRING
      5860**DCL      5861--REDEF
DEV_ICB.FID.STRING
      5746**DCL      5747--REDEF
EI_KEY.KEY
      5958**DCL      5958--REDEF    5958--REDEF    5958--REDEF
EO_OCB.TYPE
      5458**DCL      5459--REDEF
ERR
        47**DCL         9--PROC     8651--ENTRY    8662--ENTRY    8677--IF       8685>>ASSIGN   8771--ENTRY
ERRDCB
        40**DCL         9--PROC     8651--ENTRY    8662--ENTRY    8695--IF       8697>>ASSIGN   8771--ENTRY
ERRMSG_PROBLEM
      8742**LABEL    8740--CALLALT
ERROR_DCB
      5225**DCL      8758<<ASSIGN
ERROR_SEVERITY
      5225**DCL      8799>>IF       8802>>IF
ERR_BUF
      5226**DCL      8764<<ASSIGN   8764>>ASSIGN   8765--ASSIGN   8766>>DOWHILE
ERR_CODE
      5228**DCL      8680<<ASSIGN   8685<<ASSIGN   8729>>ASSIGN   8753<<ASSIGN
ERR_CODE.CODE
      5228**DCL      8693<<ASSIGN   8713>>IF       8716<<ASSIGN   8745<<ASSIGN
ERR_CODE.FCG
      5228**DCL      8690<<ASSIGN   8718<<ASSIGN   8742<<ASSIGN
ERR_CODE.MID
      5228**DCL      8691<<ASSIGN   8719<<ASSIGN   8743<<ASSIGN
ERR_CODE.MON
      5228**DCL      8692<<ASSIGN   8710>>IF       8717<<ASSIGN   8744<<ASSIGN
ERR_CODE.SEV
      5228**DCL      8698<<ASSIGN   8739<<ASSIGN   8746<<ASSIGN   8756<<ASSIGN   8756>>ASSIGN
ERR_FLG
      5225**DCL      8787<<ASSIGN
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:45   
ERR_LEN
      5226**DCL      8765<<ASSIGN   8766>>DOWHILE  8766>>DOWHILE  8767<<ASSIGN   8767>>ASSIGN
F$DCB.ACTPOS
      7124**DCL      7124--REDEF
F$DCB.ARS
      7099**DCL      7099--REDEF
F$DCB.ATTR
      7117**DCL      7118--REDEF
F$DCB.BORROW
      7132**DCL      7132--REDEF    7132--REDEF    7132--REDEF
F$DCB.DCBNAME.L
      7146**DCL      7146--IMP-SIZ
F$DCB.EOMCHAR
      7103**DCL      7103--REDEF
F$DCB.FLDID
      7127**DCL      7127--REDEF
F$DCB.FORM$
      7121**DCL      7121--REDEF
F$DCB.FSECT
      7137**DCL      7137--REDEF
F$DCB.FSN
      7114**DCL      7114--REDEF    7114--REDEF    7115--REDEF
F$DCB.HEADER$
      7120**DCL      7120--REDEF
F$DCB.IXTNSIZE
      7118**DCL      7118--REDEF
F$DCB.LASTSTA$
      7108**DCL      7108--REDEF
F$DCB.LVL
      7133**DCL      7133--REDEF
F$DCB.NAME.C
      7108**DCL      7108--REDEF
F$DCB.NOEOF
      7129**DCL      7129--REDEF
F$DCB.NRECS
      7119**DCL      7119--REDEF
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:46   
F$DCB.NRECX
      7138**DCL      7138--REDEF
F$DCB.OHDR
      7130**DCL      7130--REDEF
F$DCB.ORG
      7113**DCL      7113--REDEF
F$DCB.PRECNO
      7136**DCL      7136--REDEF
F$DCB.RCSZ
      7141**DCL      7141--REDEF
F$DCB.RES
      7109**DCL      7109--REDEF
F$DCB.SETX
      7121**DCL      7121--REDEF
F$DCB.TAB$
      7120**DCL      7121--REDEF
F$DCB.TDA
      7135**DCL      7135--REDEF
F$DCB.WSN
      7110**DCL      7110--REDEF
FIELD1_
        49**DCL         9--PROC     8651--ENTRY    8662--ENTRY    8700--IF       8702>>ASSIGN   8771--ENTRY
FIELD2_
        50**DCL         9--PROC     8651--ENTRY    8662--ENTRY    8705--IF       8707>>ASSIGN   8771--ENTRY
FPT_CLOSE_EI.SN_
      6799**DCL      6799--REDEF
FPT_CLOSE_EI.UTL_
      6800**DCL      6800--REDEF
FPT_CLOSE_EI.V.EXPIRE#
      6814**DCL      6814--REDEF
FPT_CLOSE_EI.V.TYPE#
      6812**DCL      6812--REDEF
FPT_CLOSE_EI.V.XTNSIZE#
      6809**DCL      6809--REDEF    6811--REDEF
FPT_CLOSE_PTL.SN_
      6925**DCL      6925--REDEF
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:47   
FPT_CLOSE_PTL.UTL_
      6926**DCL      6926--REDEF
FPT_CLOSE_PTL.V.EXPIRE#
      6940**DCL      6940--REDEF
FPT_CLOSE_PTL.V.TYPE#
      6938**DCL      6938--REDEF
FPT_CLOSE_PTL.V.XTNSIZE#
      6935**DCL      6935--REDEF    6937--REDEF
FPT_CLOSE_READ.SN_
      6841**DCL      6841--REDEF
FPT_CLOSE_READ.UTL_
      6842**DCL      6842--REDEF
FPT_CLOSE_READ.V.EXPIRE#
      6856**DCL      6856--REDEF
FPT_CLOSE_READ.V.TYPE#
      6854**DCL      6854--REDEF
FPT_CLOSE_READ.V.XTNSIZE#
      6851**DCL      6851--REDEF    6853--REDEF
FPT_CLOSE_SI.SN_
      7009**DCL      7009--REDEF
FPT_CLOSE_SI.UTL_
      7010**DCL      7010--REDEF
FPT_CLOSE_SI.V.EXPIRE#
      7024**DCL      7024--REDEF
FPT_CLOSE_SI.V.TYPE#
      7022**DCL      7022--REDEF
FPT_CLOSE_SI.V.XTNSIZE#
      7019**DCL      7019--REDEF    7021--REDEF
FPT_CLOSE_STD.SN_
      6967**DCL      6967--REDEF
FPT_CLOSE_STD.UTL_
      6968**DCL      6968--REDEF
FPT_CLOSE_STD.V.EXPIRE#
      6982**DCL      6982--REDEF
FPT_CLOSE_STD.V.TYPE#
      6980**DCL      6980--REDEF
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:48   
FPT_CLOSE_STD.V.XTNSIZE#
      6977**DCL      6977--REDEF    6979--REDEF
FPT_CLSEI_FT.SN_
      6883**DCL      6883--REDEF
FPT_CLSEI_FT.UTL_
      6884**DCL      6884--REDEF
FPT_CLSEI_FT.V.EXPIRE#
      6898**DCL      6898--REDEF
FPT_CLSEI_FT.V.TYPE#
      6896**DCL      6896--REDEF
FPT_CLSEI_FT.V.XTNSIZE#
      6893**DCL      6893--REDEF    6895--REDEF
FPT_ERRMSG
      6131**DCL      8740<>CALL     8747<>CALL
FPT_ERRMSG.FIELD1_
      6133**DCL      8702<<ASSIGN   8704<<ASSIGN   8730>>ASSIGN
FPT_ERRMSG.FIELD2_
      6134**DCL      8707<<ASSIGN   8709<<ASSIGN   8731>>ASSIGN
FPT_ERRMSG.V.DCB#
      6135**DCL      8681<<ASSIGN   8686<<ASSIGN   8697<<ASSIGN   8732>>ASSIGN   8758>>ASSIGN
FPT_ERRMSG.V.OUTDCB1#
      6136**DCL      8670<<ASSIGN   8726>>IF       8759>>IF       8838<<ASSIGN
FPT_ERRMSG.V.OUTDCB2#
      6136**DCL      8671<<ASSIGN   8726>>IF       8759>>IF       8839<<ASSIGN
FPT_ERRMSG.V.SUBMESS#
      6141**DCL      8699<<ASSIGN
FPT_OPEN_EI.ACSVEH_
      6454**DCL      6455--REDEF
FPT_OPEN_EI.ALTKEYS_
      6460**DCL      6461--REDEF    6461--REDEF
FPT_OPEN_EI.HDR_
      6459**DCL      6460--REDEF
FPT_OPEN_EI.TAB_
      6458**DCL      6459--REDEF
FPT_OPEN_EI.UHL_
      6452**DCL      6453--REDEF    6453--REDEF
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:49   
FPT_OPEN_EI.V.FSN#
      6492**DCL      6492--REDEF    6492--REDEF
FPT_OPEN_EI.WSN_
      6458**DCL      6458--REDEF
FPT_OPEN_EI_SAVE.ACSVEH_
      6563**DCL      6564--REDEF
FPT_OPEN_EI_SAVE.ALTKEYS_
      6569**DCL      6570--REDEF    6570--REDEF
FPT_OPEN_EI_SAVE.HDR_
      6568**DCL      6569--REDEF
FPT_OPEN_EI_SAVE.TAB_
      6567**DCL      6568--REDEF
FPT_OPEN_EI_SAVE.UHL_
      6561**DCL      6562--REDEF    6562--REDEF
FPT_OPEN_EI_SAVE.V.FSN#
      6601**DCL      6601--REDEF    6601--REDEF
FPT_OPEN_EI_SAVE.WSN_
      6567**DCL      6567--REDEF
FPT_OPEN_OUT.ACSVEH_
      6345**DCL      6346--REDEF
FPT_OPEN_OUT.ALTKEYS_
      6351**DCL      6352--REDEF    6352--REDEF
FPT_OPEN_OUT.HDR_
      6350**DCL      6351--REDEF
FPT_OPEN_OUT.TAB_
      6349**DCL      6350--REDEF
FPT_OPEN_OUT.UHL_
      6343**DCL      6344--REDEF    6344--REDEF
FPT_OPEN_OUT.V.FSN#
      6383**DCL      6383--REDEF    6383--REDEF
FPT_OPEN_OUT.WSN_
      6349**DCL      6349--REDEF
FPT_OPEN_OUT_SAVE.ACSVEH_
      6236**DCL      6237--REDEF
FPT_OPEN_OUT_SAVE.ALTKEYS_
      6242**DCL      6243--REDEF    6243--REDEF
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:50   
FPT_OPEN_OUT_SAVE.HDR_
      6241**DCL      6242--REDEF
FPT_OPEN_OUT_SAVE.TAB_
      6240**DCL      6241--REDEF
FPT_OPEN_OUT_SAVE.UHL_
      6234**DCL      6235--REDEF    6235--REDEF
FPT_OPEN_OUT_SAVE.V.FSN#
      6274**DCL      6274--REDEF    6274--REDEF
FPT_OPEN_OUT_SAVE.WSN_
      6240**DCL      6240--REDEF
FPT_READ_STD.STATION_
      6664**DCL      6665--REDEF
FPT_READ_STD.V.DVBYTE.REREAD#
      6676**DCL      6676--REDEF
FPT_READ_STD.V.INDX#
      6674**DCL      6674--REDEF
FPT_READ_UC.STATION_
      6625**DCL      6626--REDEF
FPT_READ_UC.V.DVBYTE.REREAD#
      6637**DCL      6637--REDEF
FPT_READ_UC.V.INDX#
      6635**DCL      6635--REDEF
FPT_WRITE_ME.STATION_
      6733**DCL      6733--REDEF
FPT_WRITE_ME.V.DVBYTE.VFC#
      6740**DCL      6740--REDEF
FPT_WRITE_OUT.STATION_
      6764**DCL      6764--REDEF
FPT_WRITE_OUT.V.DVBYTE.VFC#
      6771**DCL      6771--REDEF
FPT_WRITE_UC.STATION_
      6702**DCL      6702--REDEF
FPT_WRITE_UC.V.DVBYTE.VFC#
      6709**DCL      6709--REDEF
FRIENDLY_ERROR_CODE
      8388**DCL      8716>>ASSIGN
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:51   
FROM_SN.SN
      5608**DCL      5609--REDEF
GETCMD
      4810**DCL      8733<>CALL     8829<>CALL     8831<>CALL
GETCMD.ERRDCB#
      4969**DCL      8732<<ASSIGN
GETCMD.ERR_CODE
      4958**DCL      8729<<ASSIGN
GETCMD.F1_
      5007**DCL      8730<<ASSIGN
GETCMD.F2_
      5011**DCL      8731<<ASSIGN
GETCMD.OUT$
      4815**DCL      4821--REDEF
HIGHEST_SEVERITY
      5225**DCL      8788>>IF       8788>>IF       8790<<ASSIGN
I
      8371**DCL      8712<<DOINDEX  8713>>IF       8716>>ASSIGN
ICB.FID.STRING
      5632**DCL      5633--REDEF
IFSFA_PARAM.EOMCHAR#
      5987**DCL      5988--REDEF
IFSFA_PARAM.SIG1
      5981**DCL      5981--REDEF
IFSFA_PARAM.SIG2
      5981**DCL      5982--REDEF
IGNORE_SECOND
      8746**LABEL    8747--CALLALT
IN_RES
      5554**DCL      5554--REDEF
IN_SN.SN
      5570**DCL      5571--REDEF
M$DO#
      6026**DCL      8838>>ASSIGN
M$ERRMSG
       135**DCL-ENT  8740--CALL     8747--CALL
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:52   
M$ME#
      6024**DCL      8839>>ASSIGN
MID
        45**DCL         9--PROC     8651--ENTRY    8662--ENTRY    8691>>ASSIGN   8771--ENTRY
OCB.TYPE
      5316**DCL      5317--REDEF
OFSFA_PARAM.EOMCHAR#
      6017**DCL      6018--REDEF
OFSFA_PARAM.SIG1
      6011**DCL      6011--REDEF
OFSFA_PARAM.SIG2
      6011**DCL      6012--REDEF
OUT$BLK.NSUBLKS
      7060**DCL      8827>>IF
OUT_SN.SN
      5588**DCL      5589--REDEF
PCB.OUT$
      4629**DCL      8827>>IF
PRINT
      8377**DCL      8647<<ASSIGN   8659<<ASSIGN   8672<<ASSIGN   8724>>IF       8759>>IF
REAL_ERROR_CODE
      8384**DCL      8713>>IF
RETSEV
        51**DCL         9--PROC     8651--ENTRY    8662--ENTRY    8771--ENTRY    8791--IF       8795>>ASSIGN
RETSEV_
      8372**DCL      8793<<ASSIGN   8795<<ASSIGN   8799>>IF       8802>>IF       8804>>DOCASE
SETDCB
      8834**PROC     8648--CALL
SEVERITY
        41**DCL         9--PROC     8651--ENTRY    8662--ENTRY    8771--ENTRY    8785>>IF       8788>>IF
      8790>>ASSIGN   8793>>ASSIGN
SPEC_BUF
      5266**DCL      5266--REDEF
TRAP_PCL
      5227**DCL      8801>>UNWIND   8812>>UNWIND
VLR_ERRMSG.CODEUSED
PL6.E3A0      #001=VPL$ERR_PROC File=VPL$HELPERR.:E05TSI                         WED 07/30/97 07:56 Page:53   
      6166**DCL      8753>>ASSIGN
VPD$FINISH_NLIST
      8449**DCL-ENT  8674--CALL
XUG$ALLMSG
      8638**DCL-ENT  8829--CALL
XUG$ERRMSG
      8628**DCL-ENT  8733--CALL
XUG$MOREMSG
      8637**DCL-ENT  8831--CALL

PL6.E3A0      #002=VPL$HELP File=VPL$HELPERR.:E05TSI                             WED 07/30/97 07:58 Page:54   
      306        1        /*T***********************************************************/
      307        2        /*T*                                                         */
      308        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      309        4        /*T*                                                         */
      310        5        /*T***********************************************************/
      311        6        VPL$HELP: PROC;
      312        7        /*D* NAME: VPL$HELP
      313        8             CALL: CALL VPL$HELP
      314        9             DESCRIPTION: VPL$HELP DRIVES X$HELP TO PRODUCE PCL'S HELP MESSAGES.
      315       10        */
      316       11        %INCLUDE VP_DATA_R;
      317     6998        %INCLUDE XUH_MACRO_C;                   /* X$HELP MACROs                      */
      318     7082        %INCLUDE XU_PERR_C;                     /* X$HELP error SUBs                  */
      319     7273
      320     7274        %PARSE$OUT(NAME = OUT$BLK,STCLASS = BASED);
      321     7319        %XUH_PARAM(NAME = XUH_PARAM,
      322     7320                   STCLASS = STATIC,
      323     7321                   OUTDCB1 = M$DO,
      324     7322                   OUTDCB2 = M$ME);
      325     7383        %VP_ENTRIES (OMIT=VPL$HELP);
      326     7591        %INCLUDE XUG_ENTRY;
      327     7622    1   BEGIN:  XUH_PARAM.HELP$ = PCB.OUT$ -> OUT$BLK.SUBLK$(0) -> OUT$BLK.SUBLK$(0);
      328     7623    1           XUH_PARAM.KEYWORD_ = VECTOR(NIL);
      329     7624    1           XUH_PARAM.TOPICS# = '0'B;
      330     7625    1           GETCMD.XUH$ = ADDR(XUH_PARAM);
      331     7626    1           CALL XUG$HELP (GETCMD);
      332     7627    1           RETURN;
      333     7628    1   END VPL$HELP;
      334     7629        %EOD;

PL6.E3A0      #002=VPL$HELP File=VPL$HELPERR.:E05TSI                             WED 07/30/97 07:58 Page:55   
--  Include file information  --

   XUG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   XU_PERR_C.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   VP_MACRO_C.:E05TOU  is referenced.
   XS_MACRO_C.:E05TOU  is referenced.
   VP_PERR_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VPL$HELP.

   Procedure VPL$HELP requires 17 words for executable code.
   Procedure VPL$HELP requires 4 words of local(AUTO) storage.

PL6.E3A0      #002=VPL$HELP File=VPL$HELPERR.:E05TSI                             WED 07/30/97 07:58 Page:56   

 Object Unit name= VPL$HELP                                   File name= VPL$HELPERR.:E05TOU
 UTS= JUL 30 '97 07:58:38.04 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$EI
    2   DCB   even  none     0      0  M$EO
    3   DCB   even  none     0      0  M$EO1
    4   DCB   even  none     0      0  M$ME
    5   DCB   even  none     0      0  M$SI
    6   DCB   even  none     0      0  M$READFILE
    7   DCB   even  none     0      0  M$DO
    8   DCB   even  none     0      0  M$STD1
    9   DCB   even  none     0      0  M$SORT1
   10   Data  even  none    58     72  VPL$HELP
   11   Proc  even  none    17     21  VPL$HELP
   12  RoData even  none     5      5  VPL$HELP

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    11      0   yes            yes      Std        0  VPL$HELP
PL6.E3A0      #002=VPL$HELP File=VPL$HELPERR.:E05TSI                             WED 07/30/97 07:58 Page:57   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 XUG$HELP
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  PCB                                   GETCMD
     BREAK_LOC                             BREAK_MESSAGE_REPORTER                SPEC_BUF
     IN_RES                                M$EI                                  M$EO
     M$EO1                                 M$ME                                  M$SI
     M$READFILE                            M$DO                                  M$STD1
     M$SORT1                               B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #002=VPL$HELP File=VPL$HELPERR.:E05TSI                             WED 07/30/97 07:58 Page:58   


      306        1        /*T***********************************************************/
      307        2        /*T*                                                         */
      308        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      309        4        /*T*                                                         */
      310        5        /*T***********************************************************/
      311        6        VPL$HELP: PROC;

      6 11 000000   000000 700200 xent  VPL$HELP     TSX0  ! X66_AUTO_0
        11 000001   000004 000000                    ZERO    4,0

      312        7        /*D* NAME: VPL$HELP
      313        8             CALL: CALL VPL$HELP
      314        9             DESCRIPTION: VPL$HELP DRIVES X$HELP TO PRODUCE PCL'S HELP MESSAGES.
      315       10        */
      316       11        %INCLUDE VP_DATA_R;
      317     6998        %INCLUDE XUH_MACRO_C;                   /* X$HELP MACROs                      */
      318     7082        %INCLUDE XU_PERR_C;                     /* X$HELP error SUBs                  */
      319     7273
      320     7274        %PARSE$OUT(NAME = OUT$BLK,STCLASS = BASED);
      321     7319        %XUH_PARAM(NAME = XUH_PARAM,
      322     7320                   STCLASS = STATIC,
      323     7321                   OUTDCB1 = M$DO,
      324     7322                   OUTDCB2 = M$ME);
      325     7383        %VP_ENTRIES (OMIT=VPL$HELP);
      326     7591        %INCLUDE XUG_ENTRY;
      327     7622    1   BEGIN:  XUH_PARAM.HELP$ = PCB.OUT$ -> OUT$BLK.SUBLK$(0) -> OUT$BLK.SUBLK$(0);

   7622 11 000002   000003 470400 xsym  BEGIN        LDP0    PCB+3
        11 000003   000003 471500                    LDP1    3,,PR0
        11 000004   100003 236100                    LDQ     3,,PR1
        11 000005   000011 756000 10                 STQ     XUH_PARAM+9

      328     7623    1           XUH_PARAM.KEYWORD_ = VECTOR(NIL);

   7623 11 000006   000000 237000 12                 LDAQ    0
        11 000007   000006 757000 10                 STAQ    XUH_PARAM+6
PL6.E3A0      #002=VPL$HELP File=VPL$HELPERR.:E05TSI                             WED 07/30/97 07:58 Page:59   

      329     7624    1           XUH_PARAM.TOPICS# = '0'B;

   7624 11 000010   000002 236000 12                 LDQ     2
        11 000011   000012 356000 10                 ANSQ    XUH_PARAM+10

      330     7625    1           GETCMD.XUH$ = ADDR(XUH_PARAM);

   7625 11 000012   000003 236000 12                 LDQ     3
        11 000013   000005 756000 xsym               STQ     GETCMD+5

      331     7626    1           CALL XUG$HELP (GETCMD);

   7626 11 000014   000004 630400 12                 EPPR0   4
        11 000015   000017 631400 xsym               EPPR1   B_VECTNIL+15
        11 000016   000000 701000 xent               TSX1    XUG$HELP
        11 000017   000000 011000                    NOP     0

      332     7627    1           RETURN;

   7627 11 000020   000000 702200 xent               TSX2  ! X66_ARET
      333     7628    1   END VPL$HELP;
      334     7629        %EOD;

PL6.E3A0      #002=VPL$HELP File=VPL$HELPERR.:E05TSI                             WED 07/30/97 07:58 Page:60   
--  Include file information  --

   XUG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   XU_PERR_C.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   VP_MACRO_C.:E05TOU  is referenced.
   XS_MACRO_C.:E05TOU  is referenced.
   VP_PERR_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VPL$HELP.
PL6.E3A0      #002=VPL$HELP File=VPL$HELPERR.:E05TSI                             WED 07/30/97 07:58 Page:61   

 **** Variables and constants ****

  ****  Section 010  Data  VPL$HELP

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(2052)  r     1 XUH_PARAM

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w EPTR        r     1 BREAK_MESSAGE_REPORTER
     0-0-0/d STRC(1512)  r     1 GETCMD                     0-0-0/w STRC(504)   r     1 PCB

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0N  NULL        r     1 M$DO                       0-0-0N  NULL        r     1 M$ME
     0-0-0/w STRC(144)   r     1 OUT$BLK


   Procedure VPL$HELP requires 17 words for executable code.
   Procedure VPL$HELP requires 4 words of local(AUTO) storage.
PL6.E3A0      #002=VPL$HELP File=VPL$HELPERR.:E05TSI                             WED 07/30/97 07:58 Page:62   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=VPL$HELP File=VPL$HELPERR.:E05TSI                             WED 07/30/97 07:58 Page:63   
          MINI XREF LISTING

BREAK_LOC
      5218**DCL      5218--REDEF
DEF_ICB.FID.STRING
      5816**DCL      5817--REDEF
DEV_ICB.FID.STRING
      5702**DCL      5703--REDEF
EI_KEY.KEY
      5914**DCL      5914--REDEF    5914--REDEF    5914--REDEF
EO_OCB.TYPE
      5414**DCL      5415--REDEF
FPT_CLOSE_EI.SN_
      6755**DCL      6755--REDEF
FPT_CLOSE_EI.UTL_
      6756**DCL      6756--REDEF
FPT_CLOSE_EI.V.EXPIRE#
      6770**DCL      6770--REDEF
FPT_CLOSE_EI.V.TYPE#
      6768**DCL      6768--REDEF
FPT_CLOSE_EI.V.XTNSIZE#
      6765**DCL      6765--REDEF    6767--REDEF
FPT_CLOSE_PTL.SN_
      6881**DCL      6881--REDEF
FPT_CLOSE_PTL.UTL_
      6882**DCL      6882--REDEF
FPT_CLOSE_PTL.V.EXPIRE#
      6896**DCL      6896--REDEF
FPT_CLOSE_PTL.V.TYPE#
      6894**DCL      6894--REDEF
FPT_CLOSE_PTL.V.XTNSIZE#
      6891**DCL      6891--REDEF    6893--REDEF
FPT_CLOSE_READ.SN_
      6797**DCL      6797--REDEF
PL6.E3A0      #002=VPL$HELP File=VPL$HELPERR.:E05TSI                             WED 07/30/97 07:58 Page:64   
FPT_CLOSE_READ.UTL_
      6798**DCL      6798--REDEF
FPT_CLOSE_READ.V.EXPIRE#
      6812**DCL      6812--REDEF
FPT_CLOSE_READ.V.TYPE#
      6810**DCL      6810--REDEF
FPT_CLOSE_READ.V.XTNSIZE#
      6807**DCL      6807--REDEF    6809--REDEF
FPT_CLOSE_SI.SN_
      6965**DCL      6965--REDEF
FPT_CLOSE_SI.UTL_
      6966**DCL      6966--REDEF
FPT_CLOSE_SI.V.EXPIRE#
      6980**DCL      6980--REDEF
FPT_CLOSE_SI.V.TYPE#
      6978**DCL      6978--REDEF
FPT_CLOSE_SI.V.XTNSIZE#
      6975**DCL      6975--REDEF    6977--REDEF
FPT_CLOSE_STD.SN_
      6923**DCL      6923--REDEF
FPT_CLOSE_STD.UTL_
      6924**DCL      6924--REDEF
FPT_CLOSE_STD.V.EXPIRE#
      6938**DCL      6938--REDEF
FPT_CLOSE_STD.V.TYPE#
      6936**DCL      6936--REDEF
FPT_CLOSE_STD.V.XTNSIZE#
      6933**DCL      6933--REDEF    6935--REDEF
FPT_CLSEI_FT.SN_
      6839**DCL      6839--REDEF
FPT_CLSEI_FT.UTL_
      6840**DCL      6840--REDEF
FPT_CLSEI_FT.V.EXPIRE#
      6854**DCL      6854--REDEF
FPT_CLSEI_FT.V.TYPE#
      6852**DCL      6852--REDEF
PL6.E3A0      #002=VPL$HELP File=VPL$HELPERR.:E05TSI                             WED 07/30/97 07:58 Page:65   
FPT_CLSEI_FT.V.XTNSIZE#
      6849**DCL      6849--REDEF    6851--REDEF
FPT_OPEN_EI.ACSVEH_
      6410**DCL      6411--REDEF
FPT_OPEN_EI.ALTKEYS_
      6416**DCL      6417--REDEF    6417--REDEF
FPT_OPEN_EI.HDR_
      6415**DCL      6416--REDEF
FPT_OPEN_EI.TAB_
      6414**DCL      6415--REDEF
FPT_OPEN_EI.UHL_
      6408**DCL      6409--REDEF    6409--REDEF
FPT_OPEN_EI.V.FSN#
      6448**DCL      6448--REDEF    6448--REDEF
FPT_OPEN_EI.WSN_
      6414**DCL      6414--REDEF
FPT_OPEN_EI_SAVE.ACSVEH_
      6519**DCL      6520--REDEF
FPT_OPEN_EI_SAVE.ALTKEYS_
      6525**DCL      6526--REDEF    6526--REDEF
FPT_OPEN_EI_SAVE.HDR_
      6524**DCL      6525--REDEF
FPT_OPEN_EI_SAVE.TAB_
      6523**DCL      6524--REDEF
FPT_OPEN_EI_SAVE.UHL_
      6517**DCL      6518--REDEF    6518--REDEF
FPT_OPEN_EI_SAVE.V.FSN#
      6557**DCL      6557--REDEF    6557--REDEF
FPT_OPEN_EI_SAVE.WSN_
      6523**DCL      6523--REDEF
FPT_OPEN_OUT.ACSVEH_
      6301**DCL      6302--REDEF
FPT_OPEN_OUT.ALTKEYS_
      6307**DCL      6308--REDEF    6308--REDEF
FPT_OPEN_OUT.HDR_
      6306**DCL      6307--REDEF
PL6.E3A0      #002=VPL$HELP File=VPL$HELPERR.:E05TSI                             WED 07/30/97 07:58 Page:66   
FPT_OPEN_OUT.TAB_
      6305**DCL      6306--REDEF
FPT_OPEN_OUT.UHL_
      6299**DCL      6300--REDEF    6300--REDEF
FPT_OPEN_OUT.V.FSN#
      6339**DCL      6339--REDEF    6339--REDEF
FPT_OPEN_OUT.WSN_
      6305**DCL      6305--REDEF
FPT_OPEN_OUT_SAVE.ACSVEH_
      6192**DCL      6193--REDEF
FPT_OPEN_OUT_SAVE.ALTKEYS_
      6198**DCL      6199--REDEF    6199--REDEF
FPT_OPEN_OUT_SAVE.HDR_
      6197**DCL      6198--REDEF
FPT_OPEN_OUT_SAVE.TAB_
      6196**DCL      6197--REDEF
FPT_OPEN_OUT_SAVE.UHL_
      6190**DCL      6191--REDEF    6191--REDEF
FPT_OPEN_OUT_SAVE.V.FSN#
      6230**DCL      6230--REDEF    6230--REDEF
FPT_OPEN_OUT_SAVE.WSN_
      6196**DCL      6196--REDEF
FPT_READ_STD.STATION_
      6620**DCL      6621--REDEF
FPT_READ_STD.V.DVBYTE.REREAD#
      6632**DCL      6632--REDEF
FPT_READ_STD.V.INDX#
      6630**DCL      6630--REDEF
FPT_READ_UC.STATION_
      6581**DCL      6582--REDEF
FPT_READ_UC.V.DVBYTE.REREAD#
      6593**DCL      6593--REDEF
FPT_READ_UC.V.INDX#
      6591**DCL      6591--REDEF
FPT_WRITE_ME.STATION_
      6689**DCL      6689--REDEF
PL6.E3A0      #002=VPL$HELP File=VPL$HELPERR.:E05TSI                             WED 07/30/97 07:58 Page:67   
FPT_WRITE_ME.V.DVBYTE.VFC#
      6696**DCL      6696--REDEF
FPT_WRITE_OUT.STATION_
      6720**DCL      6720--REDEF
FPT_WRITE_OUT.V.DVBYTE.VFC#
      6727**DCL      6727--REDEF
FPT_WRITE_UC.STATION_
      6658**DCL      6658--REDEF
FPT_WRITE_UC.V.DVBYTE.VFC#
      6665**DCL      6665--REDEF
FROM_SN.SN
      5564**DCL      5565--REDEF
GETCMD
      4766**DCL      7626<>CALL
GETCMD.OUT$
      4771**DCL      4777--REDEF
GETCMD.XUH$
      4804**DCL      7625<<ASSIGN
ICB.FID.STRING
      5588**DCL      5589--REDEF
IFSFA_PARAM.EOMCHAR#
      5943**DCL      5944--REDEF
IFSFA_PARAM.SIG1
      5937**DCL      5937--REDEF
IFSFA_PARAM.SIG2
      5937**DCL      5938--REDEF
IN_RES
      5510**DCL      5510--REDEF
IN_SN.SN
      5526**DCL      5527--REDEF
OCB.TYPE
      5272**DCL      5273--REDEF
OFSFA_PARAM.EOMCHAR#
      5973**DCL      5974--REDEF
OFSFA_PARAM.SIG1
      5967**DCL      5967--REDEF
PL6.E3A0      #002=VPL$HELP File=VPL$HELPERR.:E05TSI                             WED 07/30/97 07:58 Page:68   
OFSFA_PARAM.SIG2
      5967**DCL      5968--REDEF
OUT$BLK.SUBLK$
      7313**DCL      7622>>ASSIGN   7622>>ASSIGN
OUT_SN.SN
      5544**DCL      5545--REDEF
PCB.OUT$
      4585**DCL      7622>>ASSIGN
SPEC_BUF
      5222**DCL      5222--REDEF
XUG$HELP
      7613**DCL-ENT  7626--CALL
XUH_PARAM
      7342**DCL      7625--ASSIGN
XUH_PARAM.HELP$
      7352**DCL      7622<<ASSIGN
XUH_PARAM.KEYWORD_
      7349**DCL      7623<<ASSIGN
XUH_PARAM.TOPICS#
      7356**DCL      7624<<ASSIGN

PL6.E3A0      #003=VPL$TRAP File=VPL$HELPERR.:E05TSI                             WED 07/30/97 08:00 Page:69   
      335        1        /*T***********************************************************/
      336        2        /*T*                                                         */
      337        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      338        4        /*T*                                                         */
      339        5        /*T***********************************************************/
      340        6        VPL$TRAP: PROC ASYNC;
      341        7        /*D* NAME: VPL$TRAP
      342        8             CALL: Called asynchronously from any trap condition.
      343        9             DESCRIPTION: TRAP provides documentation in the event of an
      344       10                          unexpected trap condition.  A notice is displayed
      345       11                          along with IC and trap type.
      346       12        */
      347       13        %INCLUDE VP_DATA_R;
      348     7000    1   DCL TRAP_BUF CHAR (80) STATIC;
      349     7001    1   DCL CHAR_NUM CHAR(8) STATIC;
      350     7002        %FPT_XXX(FPTN = FPT_XXX,
      351     7003                 CODE = ERR_CODE,
      352     7004                 STCLASS = STATIC);
      353     7019        %FPT_WRITE(FPTN=FPT_WRITE_TRAP,
      354     7020                   STCLASS = STATIC,
      355     7021                   DCB = M$DO,
      356     7022                   BUF = TRAP_BUF);
      357     7053        %B$TCB;
      358     7056        %B$EXCFR;
      359     7074        %VP_ENTRIES (OMIT=VPL$TRAP);
      360     7282        %EJECT;
PL6.E3A0      #003=VPL$TRAP File=VPL$HELPERR.:E05TSI                             WED 07/30/97 08:00 Page:70   
      361     7283    2           DO INHIBIT;
      362     7284    2              TRAP_COUNT = TRAP_COUNT +1;
      363     7285    3              DO CASE(TRAP_COUNT);
      364     7286    3               CASE(1);                    /* First time                         */
      365     7287    3                 CALL BINCHAR (CHAR_NUM,
      366     7288    3                   B$TCB$ -> B$TCB.STK$ -> B$EXCFR.IC); /* Sample the IC         */
      367     7289                                                /* before another frame can ruin it   */
      368     7290    3                 TRAP_BUF = 'PCL TRAPs!  Please report the following error:';
      369     7291    3                 CALL M$WRITE (FPT_WRITE_TRAP) ALTRET(WASTE_EM);
      370     7292    3                 CALL CONCAT (TRAP_BUF,'  IC = ',CHAR_NUM);
      371     7293    3                 CALL M$WRITE (FPT_WRITE_TRAP) ALTRET(WASTE_EM);
      372     7294    3                 CALL VPL$ERR_PROC(5,0,,
      373     7295    3                   B$TCB$ -> B$TCB.STK$ -> B$EXCFR.ERR); /* Abort PCL and        */
      374     7296                                                /*  use the error code in the EXCFR   */
      375     7297    3               CASE(2);                    /* Second time                        */
      376     7298    3                 TRAP_BUF = 'We TRAPped twice, cannot abort gracefully.';
      377     7299    3                 CALL M$WRITE (FPT_WRITE_TRAP) ALTRET(WASTE_EM);
      378     7300    3                 IF HIGHEST_SEVERITY ~= -1
      379     7301    3                  THEN                     /* STEPCC setting requested           */
      380     7302    3                    FPT_XXX.V.STEPCC# = HIGHEST_SEVERITY;
      381     7303    3                  ELSE                     /* No STEPCC setting requested        */
      382     7304    3                    FPT_XXX.V.STEPCC# = 0;
      383     7305    3                 CALL M$XXX (FPT_XXX);
      384     7306    3               CASE(ELSE);
      385     7307    3   WASTE_EM:     CALL M$XXX;
      386     7308    3               END;                        /* END CASE                           */
      387     7309    2              END;
      388     7310    1   END VPL$TRAP;

PL6.E3A0      #003=VPL$TRAP File=VPL$HELPERR.:E05TSI                             WED 07/30/97 08:00 Page:71   
--  Include file information  --

   B_MICROPS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   VP_MACRO_C.:E05TOU  is referenced.
   XS_MACRO_C.:E05TOU  is referenced.
   VP_PERR_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VPL$TRAP.

   Procedure VPL$TRAP requires 72 words for executable code.
   Procedure VPL$TRAP requires 8 words of local(AUTO) storage.

    No errors detected in file VPL$HELPERR.:E05TSI    .

PL6.E3A0      #003=VPL$TRAP File=VPL$HELPERR.:E05TSI                             WED 07/30/97 08:00 Page:72   

 Object Unit name= VPL$TRAP                                   File name= VPL$HELPERR.:E05TOU
 UTS= JUL 30 '97 08:00:09.44 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$EI
    2   DCB   even  none     0      0  M$EO
    3   DCB   even  none     0      0  M$EO1
    4   DCB   even  none     0      0  M$ME
    5   DCB   even  none     0      0  M$SI
    6   DCB   even  none     0      0  M$READFILE
    7   DCB   even  none     0      0  M$DO
    8   DCB   even  none     0      0  M$STD1
    9   DCB   even  none     0      0  M$SORT1
   10   Data  even  none    40     50  VPL$TRAP
   11  RoData even  UTS     25     31  VPL$TRAP
   12   Proc  even  none    72    110  VPL$TRAP
   13  RoData even  none     2      2  VPL$TRAP

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    12      0   yes            yes     Async       0  VPL$TRAP
PL6.E3A0      #003=VPL$TRAP File=VPL$HELPERR.:E05TSI                             WED 07/30/97 08:00 Page:73   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       8 VPL$ERR_PROC
                       nStd      0 X66_AAUTO
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  HIGHEST_SEVERITY                      TRAP_COUNT
     ERR_CODE                              BREAK_LOC                             BREAK_MESSAGE_REPORTER
     SPEC_BUF                              IN_RES                                M$EI
     M$EO                                  M$EO1                                 M$ME
     M$SI                                  M$READFILE                            M$DO
     M$STD1                                M$SORT1                               B$TCB$
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #003=VPL$TRAP File=VPL$HELPERR.:E05TSI                             WED 07/30/97 08:00 Page:74   


      335        1        /*T***********************************************************/
      336        2        /*T*                                                         */
      337        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      338        4        /*T*                                                         */
      339        5        /*T***********************************************************/
      340        6        VPL$TRAP: PROC ASYNC;

      6 12 000000   000000 700200 xent  VPL$TRAP     TSX0  ! X66_AAUTO
        12 000001   000010 000000                    ZERO    8,0

      341        7        /*D* NAME: VPL$TRAP
      342        8             CALL: Called asynchronously from any trap condition.
      343        9             DESCRIPTION: TRAP provides documentation in the event of an
      344       10                          unexpected trap condition.  A notice is displayed
      345       11                          along with IC and trap type.
      346       12        */
      347       13        %INCLUDE VP_DATA_R;
      348     7000    1   DCL TRAP_BUF CHAR (80) STATIC;
      349     7001    1   DCL CHAR_NUM CHAR(8) STATIC;
      350     7002        %FPT_XXX(FPTN = FPT_XXX,
      351     7003                 CODE = ERR_CODE,
      352     7004                 STCLASS = STATIC);
      353     7019        %FPT_WRITE(FPTN=FPT_WRITE_TRAP,
      354     7020                   STCLASS = STATIC,
      355     7021                   DCB = M$DO,
      356     7022                   BUF = TRAP_BUF);
      357     7053        %B$TCB;
      358     7056        %B$EXCFR;
      359     7074        %VP_ENTRIES (OMIT=VPL$TRAP);
      360     7282        %EJECT;
PL6.E3A0      #003=VPL$TRAP File=VPL$HELPERR.:E05TSI                             WED 07/30/97 08:00 Page:75   
      361     7283    2           DO INHIBIT;

      362     7284    2              TRAP_COUNT = TRAP_COUNT +1;

   7284 12 000002   000000 054200 xsym               AOS   ! TRAP_COUNT

      363     7285    3              DO CASE(TRAP_COUNT);

   7285 12 000003   000000 235200 xsym               LDA   ! TRAP_COUNT
        12 000004   000003 115207                    CMPA  ! 3,DL
        12 000005   000007 602205 12                 TNC   ! s:7285+4,AL
        12 000006   000105 710200 12                 TRA   ! WASTE_EM
        12 000007   000105 710200 12                 TRA   ! WASTE_EM
        12 000010   000012 710200 12                 TRA   ! s:7287
        12 000011   000061 710200 12                 TRA   ! s:7298

      364     7286    3               CASE(1);                    /* First time                         */

      365     7287    3                 CALL BINCHAR (CHAR_NUM,

   7287 12 000012   000000 470600 xsym               LDP0  ! B$TCB$
        12 000013   000001 471700                    LDP1  ! 1,,PR0
        12 000014   100004 236300                    LDQ   ! 4,,PR1
        12 000015   000022 772200                    QRL   ! 18
        12 000016   000000 235203                    LDA   ! 0,DU
        12 000017   200004 757300                    STAQ  ! 4,,AUTO
        12 000020   000000 301700                    BTD   !
        12 000021   200004 000010                    NDSC9   4,,AUTO                  cn=0,s=lsgnf,sf=0,n=8
        12 000022   000024 030010 10                 NDSC9   CHAR_NUM                 cn=0,s=nosgn,sf=0,n=8

      366     7288    3                   B$TCB$ -> B$TCB.STK$ -> B$EXCFR.IC); /* Sample the IC         */
      367     7289                                                /* before another frame can ruin it   */
      368     7290    3                 TRAP_BUF = 'PCL TRAPs!  Please report the following error:';

   7290 12 000023   040000 100600                    MLR   ! fill='040'O
        12 000024   000000 000056 11                 ADSC9   0                        cn=0,n=46
        12 000025   000000 000120 10                 ADSC9   TRAP_BUF                 cn=0,n=80
PL6.E3A0      #003=VPL$TRAP File=VPL$HELPERR.:E05TSI                             WED 07/30/97 08:00 Page:76   

      369     7291    3                 CALL M$WRITE (FPT_WRITE_TRAP) ALTRET(WASTE_EM);

   7291 12 000026   000034 630600 10                 EPPR0 ! FPT_WRITE_TRAP
        12 000027   440001 713600                    CLIMB ! alt,write
        12 000030   401400 401760                    pmme    nvectors=4
        12 000031   000105 702200 12                 TSX2  ! WASTE_EM

      370     7292    3                 CALL CONCAT (TRAP_BUF,'  IC = ',CHAR_NUM);

   7292 12 000032   040000 100600                    MLR   ! fill='040'O
        12 000033   000014 000007 11                 ADSC9   12                       cn=0,n=7
        12 000034   000000 000007 10                 ADSC9   TRAP_BUF                 cn=0,n=7
        12 000035   040000 100600                    MLR   ! fill='040'O
        12 000036   000024 000010 10                 ADSC9   CHAR_NUM                 cn=0,n=8
        12 000037   000001 600111 10                 ADSC9   TRAP_BUF+1               cn=3,n=73

      371     7293    3                 CALL M$WRITE (FPT_WRITE_TRAP) ALTRET(WASTE_EM);

   7293 12 000040   000034 630600 10                 EPPR0 ! FPT_WRITE_TRAP
        12 000041   440001 713600                    CLIMB ! alt,write
        12 000042   401400 401760                    pmme    nvectors=4
        12 000043   000105 702200 12                 TSX2  ! WASTE_EM

      372     7294    3                 CALL VPL$ERR_PROC(5,0,,

   7294 12 000044   000000 470600 xsym               LDP0  ! B$TCB$
        12 000045   000001 471700                    LDP1  ! 1,,PR0
        12 000046   100102 633700                    EPPR3 ! 66,,PR1
        12 000047   200007 453700                    STP3  ! 7,,AUTO
        12 000050   000001 236200 xsym               LDQ   ! B_VECTNIL+1
        12 000051   200006 756300                    STQ   ! 6,,AUTO
        12 000052   000000 237200 13                 LDAQ  ! 0
        12 000053   200004 757300                    STAQ  ! 4,,AUTO
        12 000054   200004 630700                    EPPR0 ! 4,,AUTO
        12 000055   000022 631600 xsym               EPPR1 ! B_VECTNIL+18
        12 000056   000000 701200 xent               TSX1  ! VPL$ERR_PROC
PL6.E3A0      #003=VPL$TRAP File=VPL$HELPERR.:E05TSI                             WED 07/30/97 08:00 Page:77   
        12 000057   000000 011200                    NOP   ! 0
        12 000060   000107 710200 12                 TRA   ! s:7310

      373     7295    3                   B$TCB$ -> B$TCB.STK$ -> B$EXCFR.ERR); /* Abort PCL and        */
      374     7296                                                /*  use the error code in the EXCFR   */
      375     7297    3               CASE(2);                    /* Second time                        */

      376     7298    3                 TRAP_BUF = 'We TRAPped twice, cannot abort gracefully.';

   7298 12 000061   040000 100600                    MLR   ! fill='040'O
        12 000062   000016 000052 11                 ADSC9   14                       cn=0,n=42
        12 000063   000000 000120 10                 ADSC9   TRAP_BUF                 cn=0,n=80

      377     7299    3                 CALL M$WRITE (FPT_WRITE_TRAP) ALTRET(WASTE_EM);

   7299 12 000064   000034 630600 10                 EPPR0 ! FPT_WRITE_TRAP
        12 000065   440001 713600                    CLIMB ! alt,write
        12 000066   401400 401760                    pmme    nvectors=4
        12 000067   000105 702200 12                 TSX2  ! WASTE_EM

      378     7300    3                 IF HIGHEST_SEVERITY ~= -1

   7300 12 000070   000000 235200 xsym               LDA   ! HIGHEST_SEVERITY
        12 000071   000027 115200 xsym               CMPA  ! B_VECTNIL+23
        12 000072   000077 600200 12                 TZE   ! s:7304

      379     7301    3                  THEN                     /* STEPCC setting requested           */
      380     7302    3                    FPT_XXX.V.STEPCC# = HIGHEST_SEVERITY;

   7302 12 000073   000000 236200 xsym               LDQ   ! HIGHEST_SEVERITY
        12 000074   000033 736200                    QLS   ! 27
        12 000075   000032 552240 10                 STBQ  ! FPT_XXX+4,'40'O
        12 000076   000101 710200 12                 TRA   ! s:7305

      381     7303    3                  ELSE                     /* No STEPCC setting requested        */
      382     7304    3                    FPT_XXX.V.STEPCC# = 0;

PL6.E3A0      #003=VPL$TRAP File=VPL$HELPERR.:E05TSI                             WED 07/30/97 08:00 Page:78   
   7304 12 000077   000000 236203                    LDQ   ! 0,DU
        12 000100   000032 552240 10                 STBQ  ! FPT_XXX+4,'40'O

      383     7305    3                 CALL M$XXX (FPT_XXX);

   7305 12 000101   000026 630600 10                 EPPR0 ! FPT_XXX
        12 000102   000003 713600                    CLIMB ! 3
        12 000103   400400 401760                    pmme    nvectors=2
        12 000104   000107 710200 12                 TRA   ! s:7310

      384     7306    3               CASE(ELSE);

      385     7307    3   WASTE_EM:     CALL M$XXX;

   7307 12 000105   000003 713600       WASTE_EM     CLIMB ! 3
        12 000106   000000 401760                    pmme    nvectors=0

      386     7308    3               END;                        /* END CASE                           */

      387     7309    2              END;

      388     7310    1   END VPL$TRAP;

   7310 12 000107   000000 702200 xent               TSX2  ! X66_AARET

PL6.E3A0      #003=VPL$TRAP File=VPL$HELPERR.:E05TSI                             WED 07/30/97 08:00 Page:79   
--  Include file information  --

   B_MICROPS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   VP_MACRO_C.:E05TOU  is referenced.
   XS_MACRO_C.:E05TOU  is referenced.
   VP_PERR_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VPL$TRAP.
PL6.E3A0      #003=VPL$TRAP File=VPL$HELPERR.:E05TSI                             WED 07/30/97 08:00 Page:80   

 **** Variables and constants ****

  ****  Section 010  Data  VPL$TRAP

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    24-0-0/c CHAR(8)     r     1 CHAR_NUM                  34-0-0/d STRC(432)   r     1 FPT_WRITE_TRAP
    26-0-0/d STRC(216)   r     1 FPT_XXX                    0-0-0/c CHAR(80)    r     1 TRAP_BUF

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/w EPTR        r     1 BREAK_MESSAGE_REPORTER
     0-0-0/b STRC        r     1 ERR_CODE                   0-0-0/w SBIN        r     1 HIGHEST_SEVERITY
     0-0-0/w SBIN        r     1 TRAP_COUNT

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$EXCFR                    0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0N  NULL        r     1 M$DO


   Procedure VPL$TRAP requires 72 words for executable code.
   Procedure VPL$TRAP requires 8 words of local(AUTO) storage.

    No errors detected in file VPL$HELPERR.:E05TSI    .
PL6.E3A0      #003=VPL$TRAP File=VPL$HELPERR.:E05TSI                             WED 07/30/97 08:00 Page:81   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=VPL$TRAP File=VPL$HELPERR.:E05TSI                             WED 07/30/97 08:00 Page:82   
          MINI XREF LISTING

B$EXCFR.ASL
      7057**DCL      7057--REDEF
B$EXCFR.ERR
      7071**DCL      7294<>CALL
B$EXCFR.ERR.ERR#
      7071**DCL      7071--REDEF
B$EXCFR.EVID
      7070**DCL      7070--REDEF    7071--REDEF
B$EXCFR.IC
      7058**DCL      7287>>CALLBLT
B$EXCFR.IR
      7058**DCL      7058--REDEF
B$EXCFR.PREVSZ
      7057**DCL      7057--REDEF
B$EXCFR.SUBC
      7069**DCL      7069--REDEF    7070--REDEF    7070--REDEF
B$TCB.STK$
      7054**DCL      7287>>CALLBLT  7294>>CALL
B$TCB$
      5985**DCL      7287>>CALLBLT  7294>>CALL
BREAK_LOC
      5220**DCL      5220--REDEF
CHAR_NUM
      7001**DCL      7287<<CALLBLT  7292>>CALLBLT
DEF_ICB.FID.STRING
      5818**DCL      5819--REDEF
DEV_ICB.FID.STRING
      5704**DCL      5705--REDEF
EI_KEY.KEY
      5916**DCL      5916--REDEF    5916--REDEF    5916--REDEF
EO_OCB.TYPE
      5416**DCL      5417--REDEF
PL6.E3A0      #003=VPL$TRAP File=VPL$HELPERR.:E05TSI                             WED 07/30/97 08:00 Page:83   
ERR_CODE
      5186**DCL      7015--DCLINIT
FPT_CLOSE_EI.SN_
      6757**DCL      6757--REDEF
FPT_CLOSE_EI.UTL_
      6758**DCL      6758--REDEF
FPT_CLOSE_EI.V.EXPIRE#
      6772**DCL      6772--REDEF
FPT_CLOSE_EI.V.TYPE#
      6770**DCL      6770--REDEF
FPT_CLOSE_EI.V.XTNSIZE#
      6767**DCL      6767--REDEF    6769--REDEF
FPT_CLOSE_PTL.SN_
      6883**DCL      6883--REDEF
FPT_CLOSE_PTL.UTL_
      6884**DCL      6884--REDEF
FPT_CLOSE_PTL.V.EXPIRE#
      6898**DCL      6898--REDEF
FPT_CLOSE_PTL.V.TYPE#
      6896**DCL      6896--REDEF
FPT_CLOSE_PTL.V.XTNSIZE#
      6893**DCL      6893--REDEF    6895--REDEF
FPT_CLOSE_READ.SN_
      6799**DCL      6799--REDEF
FPT_CLOSE_READ.UTL_
      6800**DCL      6800--REDEF
FPT_CLOSE_READ.V.EXPIRE#
      6814**DCL      6814--REDEF
FPT_CLOSE_READ.V.TYPE#
      6812**DCL      6812--REDEF
FPT_CLOSE_READ.V.XTNSIZE#
      6809**DCL      6809--REDEF    6811--REDEF
FPT_CLOSE_SI.SN_
      6967**DCL      6967--REDEF
FPT_CLOSE_SI.UTL_
      6968**DCL      6968--REDEF
PL6.E3A0      #003=VPL$TRAP File=VPL$HELPERR.:E05TSI                             WED 07/30/97 08:00 Page:84   
FPT_CLOSE_SI.V.EXPIRE#
      6982**DCL      6982--REDEF
FPT_CLOSE_SI.V.TYPE#
      6980**DCL      6980--REDEF
FPT_CLOSE_SI.V.XTNSIZE#
      6977**DCL      6977--REDEF    6979--REDEF
FPT_CLOSE_STD.SN_
      6925**DCL      6925--REDEF
FPT_CLOSE_STD.UTL_
      6926**DCL      6926--REDEF
FPT_CLOSE_STD.V.EXPIRE#
      6940**DCL      6940--REDEF
FPT_CLOSE_STD.V.TYPE#
      6938**DCL      6938--REDEF
FPT_CLOSE_STD.V.XTNSIZE#
      6935**DCL      6935--REDEF    6937--REDEF
FPT_CLSEI_FT.SN_
      6841**DCL      6841--REDEF
FPT_CLSEI_FT.UTL_
      6842**DCL      6842--REDEF
FPT_CLSEI_FT.V.EXPIRE#
      6856**DCL      6856--REDEF
FPT_CLSEI_FT.V.TYPE#
      6854**DCL      6854--REDEF
FPT_CLSEI_FT.V.XTNSIZE#
      6851**DCL      6851--REDEF    6853--REDEF
FPT_OPEN_EI.ACSVEH_
      6412**DCL      6413--REDEF
FPT_OPEN_EI.ALTKEYS_
      6418**DCL      6419--REDEF    6419--REDEF
FPT_OPEN_EI.HDR_
      6417**DCL      6418--REDEF
FPT_OPEN_EI.TAB_
      6416**DCL      6417--REDEF
FPT_OPEN_EI.UHL_
      6410**DCL      6411--REDEF    6411--REDEF
PL6.E3A0      #003=VPL$TRAP File=VPL$HELPERR.:E05TSI                             WED 07/30/97 08:00 Page:85   
FPT_OPEN_EI.V.FSN#
      6450**DCL      6450--REDEF    6450--REDEF
FPT_OPEN_EI.WSN_
      6416**DCL      6416--REDEF
FPT_OPEN_EI_SAVE.ACSVEH_
      6521**DCL      6522--REDEF
FPT_OPEN_EI_SAVE.ALTKEYS_
      6527**DCL      6528--REDEF    6528--REDEF
FPT_OPEN_EI_SAVE.HDR_
      6526**DCL      6527--REDEF
FPT_OPEN_EI_SAVE.TAB_
      6525**DCL      6526--REDEF
FPT_OPEN_EI_SAVE.UHL_
      6519**DCL      6520--REDEF    6520--REDEF
FPT_OPEN_EI_SAVE.V.FSN#
      6559**DCL      6559--REDEF    6559--REDEF
FPT_OPEN_EI_SAVE.WSN_
      6525**DCL      6525--REDEF
FPT_OPEN_OUT.ACSVEH_
      6303**DCL      6304--REDEF
FPT_OPEN_OUT.ALTKEYS_
      6309**DCL      6310--REDEF    6310--REDEF
FPT_OPEN_OUT.HDR_
      6308**DCL      6309--REDEF
FPT_OPEN_OUT.TAB_
      6307**DCL      6308--REDEF
FPT_OPEN_OUT.UHL_
      6301**DCL      6302--REDEF    6302--REDEF
FPT_OPEN_OUT.V.FSN#
      6341**DCL      6341--REDEF    6341--REDEF
FPT_OPEN_OUT.WSN_
      6307**DCL      6307--REDEF
FPT_OPEN_OUT_SAVE.ACSVEH_
      6194**DCL      6195--REDEF
FPT_OPEN_OUT_SAVE.ALTKEYS_
      6200**DCL      6201--REDEF    6201--REDEF
PL6.E3A0      #003=VPL$TRAP File=VPL$HELPERR.:E05TSI                             WED 07/30/97 08:00 Page:86   
FPT_OPEN_OUT_SAVE.HDR_
      6199**DCL      6200--REDEF
FPT_OPEN_OUT_SAVE.TAB_
      6198**DCL      6199--REDEF
FPT_OPEN_OUT_SAVE.UHL_
      6192**DCL      6193--REDEF    6193--REDEF
FPT_OPEN_OUT_SAVE.V.FSN#
      6232**DCL      6232--REDEF    6232--REDEF
FPT_OPEN_OUT_SAVE.WSN_
      6198**DCL      6198--REDEF
FPT_READ_STD.STATION_
      6622**DCL      6623--REDEF
FPT_READ_STD.V.DVBYTE.REREAD#
      6634**DCL      6634--REDEF
FPT_READ_STD.V.INDX#
      6632**DCL      6632--REDEF
FPT_READ_UC.STATION_
      6583**DCL      6584--REDEF
FPT_READ_UC.V.DVBYTE.REREAD#
      6595**DCL      6595--REDEF
FPT_READ_UC.V.INDX#
      6593**DCL      6593--REDEF
FPT_WRITE_ME.STATION_
      6691**DCL      6691--REDEF
FPT_WRITE_ME.V.DVBYTE.VFC#
      6698**DCL      6698--REDEF
FPT_WRITE_OUT.STATION_
      6722**DCL      6722--REDEF
FPT_WRITE_OUT.V.DVBYTE.VFC#
      6729**DCL      6729--REDEF
FPT_WRITE_TRAP
      7039**DCL      7291<>CALL     7293<>CALL     7299<>CALL
FPT_WRITE_TRAP.STATION_
      7041**DCL      7041--REDEF
FPT_WRITE_TRAP.V
      7042**DCL      7039--DCLINIT
PL6.E3A0      #003=VPL$TRAP File=VPL$HELPERR.:E05TSI                             WED 07/30/97 08:00 Page:87   
FPT_WRITE_TRAP.V.DVBYTE.VFC#
      7048**DCL      7048--REDEF
FPT_WRITE_UC.STATION_
      6660**DCL      6660--REDEF
FPT_WRITE_UC.V.DVBYTE.VFC#
      6667**DCL      6667--REDEF
FPT_XXX
      7015**DCL      7305<>CALL
FPT_XXX.V
      7015**DCL      7015--DCLINIT
FPT_XXX.V.STEPCC#
      7016**DCL      7016--REDEF    7302<<ASSIGN   7304<<ASSIGN
FROM_SN.SN
      5566**DCL      5567--REDEF
GETCMD.OUT$
      4773**DCL      4779--REDEF
HIGHEST_SEVERITY
      5183**DCL      7300>>IF       7302>>ASSIGN
ICB.FID.STRING
      5590**DCL      5591--REDEF
IFSFA_PARAM.EOMCHAR#
      5945**DCL      5946--REDEF
IFSFA_PARAM.SIG1
      5939**DCL      5939--REDEF
IFSFA_PARAM.SIG2
      5939**DCL      5940--REDEF
IN_RES
      5512**DCL      5512--REDEF
IN_SN.SN
      5528**DCL      5529--REDEF
M$WRITE
        31**DCL-ENT  7291--CALL     7293--CALL     7299--CALL
M$XXX
        42**DCL-ENT  7305--CALL     7307--CALL
OCB.TYPE
      5274**DCL      5275--REDEF
PL6.E3A0      #003=VPL$TRAP File=VPL$HELPERR.:E05TSI                             WED 07/30/97 08:00 Page:88   
OFSFA_PARAM.EOMCHAR#
      5975**DCL      5976--REDEF
OFSFA_PARAM.SIG1
      5969**DCL      5969--REDEF
OFSFA_PARAM.SIG2
      5969**DCL      5970--REDEF
OUT_SN.SN
      5546**DCL      5547--REDEF
SPEC_BUF
      5224**DCL      5224--REDEF
TRAP_BUF
      7000**DCL      7040--DCLINIT  7041--DCLINIT  7290<<ASSIGN   7292<<CALLBLT  7298<<ASSIGN
TRAP_COUNT
      5184**DCL      7284<<ASSIGN   7284>>ASSIGN   7285>>DOCASE
VPL$ERR_PROC
      7256**DCL-ENT  7294--CALL
WASTE_EM
      7307**LABEL    7291--CALLALT  7293--CALLALT  7299--CALLALT
