VERSION E05

PL6.E3A0      #001=DUX$BREAK File=DUX$BREAK.:E05TSI                              TUE 07/29/97 15:03 Page:1    
        1        1        /*M* DUX$BREAK - M$INT ENTRY FOR BREAKS IN DELTA */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*P* NAME: DUX$BREAK.
        9        9             PURPOSE: TO SET THE S_D.BREAK FLAG WHEN A BREAK IN DELTA
       10       10                  OCCURS.  THIS FLAG IS TESTED AND REPORTED ON ELSEWHERE IN
       11       11                  THE DELTA CODE. */
       12       12        DUX$BREAK: PROC ASYNC;
       13       13        %INCLUDE CP_6;
       14       94        %INCLUDE XUH_MACRO_C;
       15      178        %INCLUDE DD_SD_M;
       16     1514        %S_D;
       17     2832        %INCLUDE DD$BASED;
       18     4135        %ALL_ATTACH;
       19     4150        %INCLUDE DD_SUBS_C;
       20     4421    2        DO INHIBIT;
       21     4422    2             IF S_D.DO$ = ADDR(NIL) OR
       22     4423    2               (S_D.DO$ ~= ADDR(NIL) AND
       23     4424    2               (S_D.DO$ -> ALL_ATTACH.CMD ~= C_DUMP AND
       24     4425    2               S_D.DO$ -> ALL_ATTACH.CMD ~= C_DISPLAY AND
       25     4426    2               S_D.DO$ -> ALL_ATTACH.CMD ~= C_QUIT))
       26     4427    3             THEN DO;
       27     4428    3                  IF S_D.FPRG_CONTEXT$ ~= ADDR(NIL) AND
       28     4429    3                    NOT S_D.BREAK
       29     4430    4                  THEN DO;
       30     4431    4                       S_D.BREAK = '1'B;
       31     4432    4                       S_D.RESET_IN = '1'B;
       32     4433    4                       S_D.USVFC = '1'B;
       33     4434    4                       CALL M$CLRSTK;
       34     4435    4                       UNWIND TO S_D.REM_BREAK;
       35     4436    4                     END;
       36     4437    3                END;
       37     4438    2             S_D.BREAK = '1'B;
PL6.E3A0      #001=DUX$BREAK File=DUX$BREAK.:E05TSI                              TUE 07/29/97 15:03 Page:2    
       38     4439    2             S_D.RESET_IN = '1'B;
       39     4440    2             S_D.USVFC = '1'B;
       40     4441    2             RETURN;
       41     4442    2           END;
       42     4443    1   END DUX$BREAK;

PL6.E3A0      #001=DUX$BREAK File=DUX$BREAK.:E05TSI                              TUE 07/29/97 15:03 Page:3    
--  Include file information  --

   DD_SUBS_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure DUX$BREAK.

   Procedure DUX$BREAK requires 37 words for executable code.
   Procedure DUX$BREAK requires 4 words of local(AUTO) storage.

    No errors detected in file DUX$BREAK.:E05TSI    .

PL6.E3A0      #001=DUX$BREAK File=DUX$BREAK.:E05TSI                              TUE 07/29/97 15:03 Page:4    

 Object Unit name= DUX$BREAK                                  File name= DUX$BREAK.:E05TOU
 UTS= JUL 29 '97 15:03:37.48 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Proc  even  none    37     45  DUX$BREAK

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes     Async       0  DUX$BREAK

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AAUTO
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AAUNWIND
                       nStd      0 X66_AARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    S_D$                                  B_VECTNIL
PL6.E3A0      #001=DUX$BREAK File=DUX$BREAK.:E05TSI                              TUE 07/29/97 15:03 Page:5    


        1        1        /*M* DUX$BREAK - M$INT ENTRY FOR BREAKS IN DELTA */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*P* NAME: DUX$BREAK.
        9        9             PURPOSE: TO SET THE S_D.BREAK FLAG WHEN A BREAK IN DELTA
       10       10                  OCCURS.  THIS FLAG IS TESTED AND REPORTED ON ELSEWHERE IN
       11       11                  THE DELTA CODE. */
       12       12        DUX$BREAK: PROC ASYNC;

     12  1 000000   000000 700200 xent  DUX$BREAK    TSX0  ! X66_AAUTO
         1 000001   000004 000000                    ZERO    4,0

       13       13        %INCLUDE CP_6;
       14       94        %INCLUDE XUH_MACRO_C;
       15      178        %INCLUDE DD_SD_M;
       16     1514        %S_D;
       17     2832        %INCLUDE DD$BASED;
       18     4135        %ALL_ATTACH;
       19     4150        %INCLUDE DD_SUBS_C;
       20     4421    2        DO INHIBIT;

       21     4422    2             IF S_D.DO$ = ADDR(NIL) OR

   4422  1 000002   000000 470600 xsym               LDP0  ! S_D$
         1 000003   000031 236300                    LDQ   ! 25,,PR0
         1 000004   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         1 000005   000020 600200 1                  TZE   ! s:4428
         1 000006   000037 600200 1                  TZE   ! s:4438
         1 000007   000031 471700                    LDP1  ! 25,,PR0
         1 000010   100000 236300                    LDQ   ! 0,,PR1
         1 000011   777000 376203                    ANQ   ! -512,DU
         1 000012   007000 116203                    CMPQ  ! 3584,DU
PL6.E3A0      #001=DUX$BREAK File=DUX$BREAK.:E05TSI                              TUE 07/29/97 15:03 Page:6    
         1 000013   000037 600200 1                  TZE   ! s:4438
         1 000014   006000 116203                    CMPQ  ! 3072,DU
         1 000015   000037 600200 1                  TZE   ! s:4438
         1 000016   047000 116203                    CMPQ  ! 19968,DU
         1 000017   000037 600200 1                  TZE   ! s:4438

       22     4423    2               (S_D.DO$ ~= ADDR(NIL) AND
       23     4424    2               (S_D.DO$ -> ALL_ATTACH.CMD ~= C_DUMP AND
       24     4425    2               S_D.DO$ -> ALL_ATTACH.CMD ~= C_DISPLAY AND
       25     4426    2               S_D.DO$ -> ALL_ATTACH.CMD ~= C_QUIT))
       26     4427    3             THEN DO;

       27     4428    3                  IF S_D.FPRG_CONTEXT$ ~= ADDR(NIL) AND

   4428  1 000020   000076 236300                    LDQ   ! 62,,PR0
         1 000021   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         1 000022   000037 600200 1                  TZE   ! s:4438
         1 000023   000026 234300                    SZN   ! 22,,PR0
         1 000024   000037 604200 1                  TMI   ! s:4438

       28     4429    3                    NOT S_D.BREAK
       29     4430    4                  THEN DO;

       30     4431    4                       S_D.BREAK = '1'B;

   4431  1 000025   400000 236203                    LDQ   ! -131072,DU
         1 000026   000026 756300                    STQ   ! 22,,PR0

       31     4432    4                       S_D.RESET_IN = '1'B;

   4432  1 000027   004716 756300                    STQ   ! 2510,,PR0

       32     4433    4                       S_D.USVFC = '1'B;

   4433  1 000030   005144 756300                    STQ   ! 2660,,PR0

       33     4434    4                       CALL M$CLRSTK;
PL6.E3A0      #001=DUX$BREAK File=DUX$BREAK.:E05TSI                              TUE 07/29/97 15:03 Page:7    

   4434  1 000031   010013 713600                    CLIMB ! 4107
         1 000032   000000 401760                    pmme    nvectors=0

       34     4435    4                       UNWIND TO S_D.REM_BREAK;

   4435  1 000033   000000 470600 xsym               LDP0  ! S_D$
         1 000034   005242 237300                    LDAQ  ! 2722,,PR0
         1 000035   000000 700200 xent               TSX0  ! X66_AAUNWIND
         1 000036   000000 000200                    ZERO    0,128

       35     4436    4                     END;
       36     4437    3                END;
       37     4438    2             S_D.BREAK = '1'B;

   4438  1 000037   400000 236203                    LDQ   ! -131072,DU
         1 000040   000026 756300                    STQ   ! 22,,PR0

       38     4439    2             S_D.RESET_IN = '1'B;

   4439  1 000041   004716 756300                    STQ   ! 2510,,PR0

       39     4440    2             S_D.USVFC = '1'B;

   4440  1 000042   005144 756300                    STQ   ! 2660,,PR0

       40     4441    2             RETURN;

   4441  1 000043   000000 702200 xent               TSX2  ! X66_AARET

       41     4442    2           END;

       42     4443    1   END DUX$BREAK;

   4443  1 000044   000000 702200 xent               TSX2  ! X66_AARET

PL6.E3A0      #001=DUX$BREAK File=DUX$BREAK.:E05TSI                              TUE 07/29/97 15:03 Page:8    
--  Include file information  --

   DD_SUBS_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure DUX$BREAK.

   Procedure DUX$BREAK requires 37 words for executable code.
   Procedure DUX$BREAK requires 4 words of local(AUTO) storage.

    No errors detected in file DUX$BREAK.:E05TSI    .
PL6.E3A0      #001=DUX$BREAK File=DUX$BREAK.:E05TSI                              TUE 07/29/97 15:03 Page:9    
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DUX$BREAK File=DUX$BREAK.:E05TSI                              TUE 07/29/97 15:03 Page:10   
          MINI XREF LISTING

ALL_ATTACH.CMD
      4137**DCL      4422>>IF       4422>>IF       4422>>IF
ALL_ATTACH.UNUSED
      4140**DCL      4141--REDEF    4145--REDEF
M$CLRSTK
        80**DCL-ENT  4434--CALL
S_D.BREAK
      1563**DCL      4428>>IF       4431<<ASSIGN   4438<<ASSIGN
S_D.CURRENT_CHANNEL
      2466**DCL      2468--REDEF
S_D.DEBUGA
      1618**DCL      1620--REDEF
S_D.DO$
      1569**DCL      4422>>IF       4422>>IF       4422>>IF       4422>>IF       4422>>IF
S_D.EIS
      2576**DCL      2605--REDEF
S_D.FPRG_CONTEXT$
      1658**DCL      4428>>IF
S_D.HOST_MESSAGE_BUF_REMOTE
      2509**DCL      2510--REDEF    2524--REDEF
S_D.JDE
      2123**DCL      2124--REDEF
S_D.L$.VALUE
      1676**DCL      1682--REDEF    1690--REDEF    1693--REDEF    1696--REDEF    1699--REDEF
S_D.L$.VALUE.L
      1677**DCL      1678--REDEF    1679--REDEF
S_D.L6_MESSAGE_BUF
      2530**DCL      2532--REDEF
S_D.OUTPUT
      2496**DCL      2498--REDEF
S_D.REMOTE_MSG.FNCC
      2515**DCL      2516--REDEF
PL6.E3A0      #001=DUX$BREAK File=DUX$BREAK.:E05TSI                              TUE 07/29/97 15:03 Page:11   
S_D.REMOTE_MSG.STXC
      2511**DCL      2512--REDEF
S_D.REMOTE_MSG.SUBFNCC
      2519**DCL      2520--REDEF
S_D.REM_BREAK
      2357**DCL      4435>>UNWIND
S_D.RESET_IN
      2095**DCL      4432<<ASSIGN   4439<<ASSIGN
S_D.SV
      1575**DCL      1596--REDEF
S_D.USVFC
      2286**DCL      4433<<ASSIGN   4440<<ASSIGN
S_D$
      2827**DCL      1523--IMP-PTR  4422>>IF       4422>>IF       4422>>IF       4422>>IF       4422>>IF
      4428>>IF       4428>>IF       4431>>ASSIGN   4432>>ASSIGN   4433>>ASSIGN   4435>>UNWIND   4438>>ASSIGN
      4439>>ASSIGN   4440>>ASSIGN
PL6.E3A0      #001=DUX$BREAK File=DUX$BREAK.:E05TSI                              TUE 07/29/97 15:03 Page:12   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DUX$BREAK File=DUX$BREAK.:E05TSI                              TUE 07/29/97 15:03 Page:13   
              MINI UREF LISTING

DUX$BREAK      12**PROC
M$ACCT      39**DCL-ENT
M$ACTIVATE      42**DCL-ENT
M$ALIB      35**DCL-ENT
M$ASUSER      37**DCL-ENT
M$ATTACH      44**DCL-ENT
M$BADPP      62**DCL-ENT
M$CGCTL      43**DCL-ENT
M$CGINFO      43**DCL-ENT
M$CHECK      24**DCL-ENT
M$CHGUNIT      82**DCL-ENT
M$CLOSE      22**DCL-ENT
M$CMDVAR      91**DCL-ENT
M$CONFIG      52**DCL-ENT
M$CORRES      27**DCL-ENT
M$CPEXIT      36**DCL-ENT
M$CVM      60**DCL-ENT
M$CVOL      25**DCL-ENT
M$DCLFLD      52**DCL-ENT
M$DEACTIVATE      42**DCL-ENT
M$DELREC      24**DCL-ENT
M$DEQ      89**DCL-ENT
M$DETACH      44**DCL-ENT
M$DEVICE      26**DCL-ENT
M$DISPLAY      89**DCL-ENT
M$DISPRES      29**DCL-ENT
M$DLIB      35**DCL-ENT
M$DRIBBLE      52**DCL-ENT
M$DRTN      80**DCL-ENT
M$DSUSER      37**DCL-ENT
M$ENQ      88**DCL-ENT
M$EOM      47**DCL-ENT
PL6.E3A0      #001=DUX$BREAK File=DUX$BREAK.:E05TSI                              TUE 07/29/97 15:03 Page:14   
M$ERASE      53**DCL-ENT
M$ERR      34**DCL-ENT
M$ERRMSG      85**DCL-ENT
M$EVENT      77**DCL-ENT
M$EXHUME      86**DCL-ENT
M$EXIT      34**DCL-ENT
M$EXTEND      26**DCL-ENT
M$FDP      58**DCL-ENT
M$FDS      57**DCL-ENT
M$FEBOOT      50**DCL-ENT
M$FECTL      51**DCL-ENT
M$FEDUMP      50**DCL-ENT
M$FID      85**DCL-ENT
M$FINDPROC      39**DCL-ENT
M$FSUSER      37**DCL-ENT
M$FVP      59**DCL-ENT
M$FWCG      43**DCL-ENT
M$GBPL      63**DCL-ENT
M$GDDL      59**DCL-ENT
M$GDP      58**DCL-ENT
M$GDS      57**DCL-ENT
M$GETDCB      28**DCL-ENT
M$GETMOUSE      68**DCL-ENT
M$GETPM      69**DCL-ENT
M$GJOB      87**DCL-ENT
M$GLINEATTR      47**DCL-ENT
M$GOODPP      62**DCL-ENT
M$GPLATEN      55**DCL-ENT
M$GPROMPT      54**DCL-ENT
M$GTRMATTR      48**DCL-ENT
M$GTRMCTL      46**DCL-ENT
M$GTRMTAB      49**DCL-ENT
M$GVP      58**DCL-ENT
M$HELP      85**DCL-ENT
M$INT      77**DCL-ENT
M$INTRTN      38**DCL-ENT
PL6.E3A0      #001=DUX$BREAK File=DUX$BREAK.:E05TSI                              TUE 07/29/97 15:03 Page:15   
M$IOQ      73**DCL-ENT
M$JOBSTATS      87**DCL-ENT
M$KEYIN      27**DCL-ENT
M$LDEV      22**DCL-ENT
M$LDTRC      35**DCL-ENT
M$LIMIT      28**DCL-ENT
M$LINES      27**DCL-ENT
M$LINK      34**DCL-ENT
M$MADMUCK      30**DCL-ENT
M$MAKUSER      61**DCL-ENT
M$MBS      29**DCL-ENT
M$MDFFLD      53**DCL-ENT
M$MERC      78**DCL-ENT
M$MERCS      79**DCL-ENT
M$MIRROR      73**DCL-ENT
M$MONINFO      90**DCL-ENT
M$MPL      63**DCL-ENT
M$NODEINFO      54**DCL-ENT
M$NXTUSR      88**DCL-ENT
M$OCMSG      86**DCL-ENT
M$OLAY      34**DCL-ENT
M$OPEN      22**DCL-ENT
M$PAS      63**DCL-ENT
M$PATHCON      86**DCL-ENT
M$PDS      57**DCL-ENT
M$PFIL      24**DCL-ENT
M$PLATEN      48**DCL-ENT
M$PRECORD      26**DCL-ENT
M$PROCNAME      39**DCL-ENT
M$PROFILE      50**DCL-ENT
M$PROMPT      46**DCL-ENT
M$RACST      30**DCL-ENT
M$RDSYSLOG      71**DCL-ENT
M$READ      23**DCL-ENT
M$RELDCB      28**DCL-ENT
M$RELRES      29**DCL-ENT
PL6.E3A0      #001=DUX$BREAK File=DUX$BREAK.:E05TSI                              TUE 07/29/97 15:03 Page:16   
M$RELSTARF      31**DCL-ENT
M$REM      31**DCL-ENT
M$RENV      78**DCL-ENT
M$REQUIRE      30**DCL-ENT
M$RETRY      79**DCL-ENT
M$RETRYS      79**DCL-ENT
M$REW      25**DCL-ENT
M$RLSFLD      53**DCL-ENT
M$RPRIV      81**DCL-ENT
M$RSPP      60**DCL-ENT
M$RSWITCH      82**DCL-ENT
M$RUE      88**DCL-ENT
M$SAD      61**DCL-ENT
M$SAVE      37**DCL-ENT
M$SCON      38**DCL-ENT
M$SCREECH      36**DCL-ENT
M$SENV      78**DCL-ENT
M$SETFMA      22**DCL-ENT
M$SETFP      51**DCL-ENT
M$SINPUT      49**DCL-ENT
M$SLCFLD      54**DCL-ENT
M$SMOUSE      68**DCL-ENT
M$SMPRT      60**DCL-ENT
M$SPRIV      81**DCL-ENT
M$SSC      61**DCL-ENT
M$SSWITCH      81**DCL-ENT
M$STATE      90**DCL-ENT
M$STD      62**DCL-ENT
M$STIMER      76**DCL-ENT
M$STLPP      59**DCL-ENT
M$STRAP      76**DCL-ENT
M$STRMATTR      48**DCL-ENT
M$STRMCTL      46**DCL-ENT
M$STRMTAB      49**DCL-ENT
M$SYMBIO      87**DCL-ENT
M$SYSCON      73**DCL-ENT
PL6.E3A0      #001=DUX$BREAK File=DUX$BREAK.:E05TSI                              TUE 07/29/97 15:03 Page:17   
M$SYSID      91**DCL-ENT
M$TDCLOSE      72**DCL-ENT
M$TDIO      72**DCL-ENT
M$TDOPEN      71**DCL-ENT
M$TDREQCPU      72**DCL-ENT
M$TEMPWROC      66**DCL-ENT
M$TIME      89**DCL-ENT
M$TRAP      76**DCL-ENT
M$TRMISC      51**DCL-ENT
M$TRMPRG      47**DCL-ENT
M$TRTN      80**DCL-ENT
M$TRUNC      23**DCL-ENT
M$TTIMER      76**DCL-ENT
M$UC      46**DCL
M$UMPL      63**DCL-ENT
M$UNFID      85**DCL-ENT
M$UNLATCH      42**DCL-ENT
M$UNSHARE      39**DCL-ENT
M$USRFIELD      82**DCL-ENT
M$VIRTUAL      57**DCL-ENT
M$WAIT      80**DCL-ENT
M$WEOF      25**DCL-ENT
M$WRITE      23**DCL-ENT
M$WRSYSLOG      71**DCL-ENT
M$XCON      77**DCL-ENT
M$XCONRTN      38**DCL-ENT
M$XEQTIME      90**DCL-ENT
M$XFLUSH      31**DCL-ENT
M$XMOUSE      68**DCL-ENT
M$XXX      34**DCL-ENT
M$YC      36**DCL-ENT
