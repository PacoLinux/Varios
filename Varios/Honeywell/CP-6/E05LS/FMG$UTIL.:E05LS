VERSION E05

PL6.E3A0      #001=FMG$COMPUDLO File=FMG$UTIL.:E05TSI                            TUE 07/29/97 16:45 Page:1    
        1        1        /*M* FMG$UTIL - Miscellaneous subroutines for keyed files */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DDA */
        8        8        /*P*     NAME:     FMG$UTIL
        9        9                 PURPOSE:  Miscellaneous subroutines for keyed files
       10       10        */
       11       11        /*F*     NAME:     FMG$COMPUDLO
       12       12                 PURPOSE:  To handle overpunched sign comparisons
       13       13        */
       14       14        /*D*     NAME:     FMG$COMPUDLO
       15       15                 ENTRY:    FMG$COMPUDTO
       16       16                 CALL:     CALL FMG$COMPUDLO(FM_NUM, USER_NUM, LENGTH, RESULT)
       17       17                 INPUT:    FM_NUM - The FM overpunched number
       18       18                           USER_NUM - The user's overpunched number
       19       19                           LENGTH - The length of the numbers in bytes
       20       20                 OUTPUT:   RESULT - The comparison result; 0 - the two numbers are equal
       21       21                                    1 - The FM field is less
       22       22                                    2 - The FM field is greater
       23       23                 DESCRIPTION:
       24       24                      Call SPLIT to split the sign out of the fields.  Then call
       25       25                 FMG$COMPUDLS to compare the numbers.
       26       26        */
       27       27                 %EJECT;
PL6.E3A0      #001=FMG$COMPUDLO File=FMG$UTIL.:E05TSI                            TUE 07/29/97 16:45 Page:2    
       28       28        FMG$COMPUDLO: PROC(FM, USER, LEN, RESULT);
       29       29    1          DCL FM CHAR(64);
       30       30    1          DCL USER CHAR(64);
       31       31    1          DCL LEN SBIN;
       32       32    1          DCL RESULT UBIN;
       33       33        /* */
       34       34    1          DCL FMG$COMPUDLS ENTRY(4);
       35       35        /* */
       36       36    1          DCL POS UBIN;
       37       37    1          DCL CHAR1 CHAR(1);
       38       38    1          DCL FMTEMP CHAR(64);
       39       39    1          DCL USERTEMP CHAR(64);
       40       40    1          DCL SIGN CHAR(1);
       41       41    1          DCL DIGIT CHAR(1);
       42       42        /* */
       43       43               %EQU LEADING=0;
       44       44               %EQU TRAILING=1;
       45       45        /* */
       46       46    1          POS=%LEADING;
       47       47    1          CALL SPLIT(FMTEMP, FM);
       48       48
       49       49    1          CALL SPLIT(USERTEMP, USER);
       50       50
       51       51    1          CALL FMG$COMPUDLS(FMTEMP, USERTEMP, LEN+1, RESULT);
       52       52    1          RETURN;
       53       53               %EJECT;
PL6.E3A0      #001=FMG$COMPUDLO File=FMG$UTIL.:E05TSI                            TUE 07/29/97 16:45 Page:3    
       54       54        /*F*     NAME:     FMG$COMPUDTO
       55       55                 CALL:     CALL FMG$COMPUDTO(FM_NUM, USER_NUM, LENGTH, RESULT)
       56       56                 INPUT:    FM_NUM - The FM overpunched number
       57       57                           USER_NUM - The user's overpunched number
       58       58                           LENGTH - The length of the numbers in bytes
       59       59                 OUTPUT:   RESULT - The comparison result; 0 - the two numbers are equal
       60       60                                    1 - The FM field is less
       61       61                                    2 - The FM field is greater
       62       62                 DESCRIPTION:
       63       63                      Call SPLIT to split the sign out of the fields.  Then call
       64       64                 FMG$COMPUDLS to compare the numbers.
       65       65        */
       66       66    1   FMG$COMPUDTO: ENTRY(FM, USER, LEN, RESULT);
       67       67        /* */
       68       68    1          POS=%TRAILING;
       69       69    1          CALL SPLIT(FMTEMP, FM);
       70       70
       71       71    1          CALL SPLIT(USERTEMP, USER);
       72       72
       73       73    1          CALL FMG$COMPUDLS(FMTEMP, USERTEMP, LEN+1, RESULT);
       74       74    1          RETURN;
       75       75               %EJECT;
PL6.E3A0      #001=FMG$COMPUDLO File=FMG$UTIL.:E05TSI                            TUE 07/29/97 16:45 Page:4    
       76       76        /*I*     NAME:     SPLIT
       77       77                 PURPOSE:  To split the sign out of an overpunched number
       78       78                 DESCRIPTION:
       79       79                      First, move the overpunched sign/digit into the temp,
       80       80                 CHAR1.  Then, split it into a sign and digit.  Insert the
       81       81                 sign into the beginning of a temp, the move the rest of
       82       82                 the number into the temp.
       83       83        */
       84       84                 %EJECT;
PL6.E3A0      #001=FMG$COMPUDLO File=FMG$UTIL.:E05TSI                            TUE 07/29/97 16:45 Page:5    
       85       85    1   SPLIT: PROC(TEMP, ORIG);
       86       86    2          DCL TEMP CHAR(64);
       87       87    2          DCL ORIG CHAR(64);
       88       88        /* */
       89       89    2          IF POS = %LEADING THEN
       90       90    2             CALL INSERT(CHAR1, 0, 1, SUBSTR(ORIG, 0, 1));
       91       91    2          ELSE
       92       92    2             CALL INSERT(CHAR1, 0, 1, SUBSTR(ORIG, LEN-1, 1));
       93       93
       94       94    2          IF CHAR1 = '{' THEN
       95       95    3             DO;   /* +0 */
       96       96    3             SIGN='+';
       97       97    3             DIGIT='0';
       98       98    3             END;  /* +0 */
       99       99    2          ELSE
      100      100    2             IF CHAR1 = '}' THEN
      101      101    3                DO;   /* -0 */
      102      102    3                SIGN='-';
      103      103    3                DIGIT='0';
      104      104    3                END;  /* -0 */
      105      105    2             ELSE
      106      106    2                IF CHAR1 < 'J' THEN
      107      107    3                   DO;   /* +1 TO +9 */
      108      108    3                   SIGN='+';
      109      109    3                   DIGIT=BINASC(ASCBIN(CHAR1)-16);
      110      110    3                   END;  /* +1 TO +9 */
      111      111    2                ELSE
      112      112    3                   DO;   /* -1 TO -9 */
      113      113    3                   SIGN='-';
      114      114    3                   DIGIT=BINASC(ASCBIN(CHAR1)-25);
      115      115    3                   END;  /* -1 TO -9 */
      116      116
      117      117    2          CALL INSERT(TEMP, 0, 1, SIGN);
      118      118    2          IF POS = %LEADING THEN
      119      119    3             DO;   /* LEADING SIGN */
      120      120    3             CALL INSERT(TEMP, 1, 1, DIGIT);
      121      121    3             CALL INSERT(TEMP, 2, LEN-1, SUBSTR(ORIG, 1, LEN-1));
PL6.E3A0      #001=FMG$COMPUDLO File=FMG$UTIL.:E05TSI                            TUE 07/29/97 16:45 Page:6    
      122      122    3             END;  /* LEADING SIGN */
      123      123    2          ELSE
      124      124    3             DO;   /* TRAILING SIGN */
      125      125    3             CALL INSERT(TEMP, LEN-1, 1, DIGIT);
      126      126    3             CALL INSERT(TEMP, 1, LEN-1, SUBSTR(ORIG, 0, LEN-1));
      127      127    3             END;  /* TRAILING SIGN */
      128      128
      129      129    2          RETURN;
      130      130    2          END SPLIT;
      131      131    1          END FMG$COMPUDLO;
      132      132               %EOD;

PL6.E3A0      #001=FMG$COMPUDLO File=FMG$UTIL.:E05TSI                            TUE 07/29/97 16:45 Page:7    
      No diagnostics issued in procedure FMG$COMPUDLO.

   Procedure FMG$COMPUDLO requires 152 words for executable code.
   Procedure FMG$COMPUDLO requires 54 words of local(AUTO) storage.

PL6.E3A0      #001=FMG$COMPUDLO File=FMG$UTIL.:E05TSI                            TUE 07/29/97 16:45 Page:8    

 Object Unit name= FMG$COMPUDLO                               File name= FMG$UTIL.:E05TOU
 UTS= JUL 29 '97 16:45:33.60 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   152    230  FMG$COMPUDLO
    1  RoData even  none     1      1  FMG$COMPUDLO

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        4  FMG$COMPUDLO
     0     40                  yes      Std        4  FMG$COMPUDTO

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       4 FMG$COMPUDLS
                       nStd      0 X66_AUTO_4
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #001=FMG$COMPUDLO File=FMG$UTIL.:E05TSI                            TUE 07/29/97 16:45 Page:9    


        1        1        /*M* FMG$UTIL - Miscellaneous subroutines for keyed files */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DDA */
        8        8        /*P*     NAME:     FMG$UTIL
        9        9                 PURPOSE:  Miscellaneous subroutines for keyed files
       10       10        */
       11       11        /*F*     NAME:     FMG$COMPUDLO
       12       12                 PURPOSE:  To handle overpunched sign comparisons
       13       13        */
       14       14        /*D*     NAME:     FMG$COMPUDLO
       15       15                 ENTRY:    FMG$COMPUDTO
       16       16                 CALL:     CALL FMG$COMPUDLO(FM_NUM, USER_NUM, LENGTH, RESULT)
       17       17                 INPUT:    FM_NUM - The FM overpunched number
       18       18                           USER_NUM - The user's overpunched number
       19       19                           LENGTH - The length of the numbers in bytes
       20       20                 OUTPUT:   RESULT - The comparison result; 0 - the two numbers are equal
       21       21                                    1 - The FM field is less
       22       22                                    2 - The FM field is greater
       23       23                 DESCRIPTION:
       24       24                      Call SPLIT to split the sign out of the fields.  Then call
       25       25                 FMG$COMPUDLS to compare the numbers.
       26       26        */
       27       27                 %EJECT;
PL6.E3A0      #001=FMG$COMPUDLO File=FMG$UTIL.:E05TSI                            TUE 07/29/97 16:45 Page:10   
       28       28        FMG$COMPUDLO: PROC(FM, USER, LEN, RESULT);

     28  0 000000   000000 700200 xent  FMG$COMPUDLO TSX0  ! X66_AUTO_4
         0 000001   000066 000004                    ZERO    54,4

       29       29    1          DCL FM CHAR(64);
       30       30    1          DCL USER CHAR(64);
       31       31    1          DCL LEN SBIN;
       32       32    1          DCL RESULT UBIN;
       33       33        /* */
       34       34    1          DCL FMG$COMPUDLS ENTRY(4);
       35       35        /* */
       36       36    1          DCL POS UBIN;
       37       37    1          DCL CHAR1 CHAR(1);
       38       38    1          DCL FMTEMP CHAR(64);
       39       39    1          DCL USERTEMP CHAR(64);
       40       40    1          DCL SIGN CHAR(1);
       41       41    1          DCL DIGIT CHAR(1);
       42       42        /* */
       43       43               %EQU LEADING=0;
       44       44               %EQU TRAILING=1;
       45       45        /* */
       46       46    1          POS=%LEADING;

     46  0 000002   200007 450100                    STZ     POS,,AUTO

       47       47    1          CALL SPLIT(FMTEMP, FM);

     47  0 000003   200003 236100                    LDQ     @FM,,AUTO
         0 000004   200056 756100                    STQ     @TEMP+1,,AUTO
         0 000005   200011 630500                    EPPR0   FMTEMP,,AUTO
         0 000006   200055 450500                    STP0    DIGIT+3,,AUTO
         0 000007   000101 701000 0                  TSX1    SPLIT
         0 000010   000000 011000                    NOP     0

       48       48
       49       49    1          CALL SPLIT(USERTEMP, USER);
PL6.E3A0      #001=FMG$COMPUDLO File=FMG$UTIL.:E05TSI                            TUE 07/29/97 16:45 Page:11   

     49  0 000011   200004 236100                    LDQ     @USER,,AUTO
         0 000012   200056 756100                    STQ     @TEMP+1,,AUTO
         0 000013   200031 630500                    EPPR0   USERTEMP,,AUTO
         0 000014   200055 450500                    STP0    DIGIT+3,,AUTO
         0 000015   000101 701000 0                  TSX1    SPLIT
         0 000016   000000 011000                    NOP     0

       50       50
       51       51    1          CALL FMG$COMPUDLS(FMTEMP, USERTEMP, LEN+1, RESULT);

     51  0 000017   200005 470500                    LDP0    @LEN,,AUTO
         0 000020   000000 235100                    LDA     0,,PR0
         0 000021   000001 035007                    ADLA    1,DL
         0 000022   200060 755100                    STA     @ORIG+2,,AUTO
         0 000023   200006 236100                    LDQ     @RESULT,,AUTO
         0 000024   200065 756100                    STQ     @ORIG+7,,AUTO
         0 000025   200060 631500                    EPPR1   @ORIG+2,,AUTO
         0 000026   200064 451500                    STP1    @ORIG+6,,AUTO
         0 000027   200031 633500                    EPPR3   USERTEMP,,AUTO
         0 000030   200063 453500                    STP3    @ORIG+5,,AUTO
         0 000031   200011 634500                    EPPR4   FMTEMP,,AUTO
         0 000032   200062 454500                    STP4    @ORIG+4,,AUTO
         0 000033   200062 630500                    EPPR0   @ORIG+4,,AUTO
         0 000034   000022 631400 xsym               EPPR1   B_VECTNIL+18
         0 000035   000000 701000 xent               TSX1    FMG$COMPUDLS
         0 000036   000000 011000                    NOP     0

       52       52    1          RETURN;

     52  0 000037   000000 702200 xent               TSX2  ! X66_ARET

       53       53               %EJECT;
PL6.E3A0      #001=FMG$COMPUDLO File=FMG$UTIL.:E05TSI                            TUE 07/29/97 16:45 Page:12   
       54       54        /*F*     NAME:     FMG$COMPUDTO
       55       55                 CALL:     CALL FMG$COMPUDTO(FM_NUM, USER_NUM, LENGTH, RESULT)
       56       56                 INPUT:    FM_NUM - The FM overpunched number
       57       57                           USER_NUM - The user's overpunched number
       58       58                           LENGTH - The length of the numbers in bytes
       59       59                 OUTPUT:   RESULT - The comparison result; 0 - the two numbers are equal
       60       60                                    1 - The FM field is less
       61       61                                    2 - The FM field is greater
       62       62                 DESCRIPTION:
       63       63                      Call SPLIT to split the sign out of the fields.  Then call
       64       64                 FMG$COMPUDLS to compare the numbers.
       65       65        */
       66       66    1   FMG$COMPUDTO: ENTRY(FM, USER, LEN, RESULT);

     66  0 000040   000000 700200 xent  FMG$COMPUDTO TSX0  ! X66_AUTO_4
         0 000041   000066 000004                    ZERO    54,4

       67       67        /* */
       68       68    1          POS=%TRAILING;

     68  0 000042   000001 235007                    LDA     1,DL
         0 000043   200007 755100                    STA     POS,,AUTO

       69       69    1          CALL SPLIT(FMTEMP, FM);

     69  0 000044   200003 236100                    LDQ     @FM,,AUTO
         0 000045   200056 756100                    STQ     @TEMP+1,,AUTO
         0 000046   200011 630500                    EPPR0   FMTEMP,,AUTO
         0 000047   200055 450500                    STP0    DIGIT+3,,AUTO
         0 000050   000101 701000 0                  TSX1    SPLIT
         0 000051   000000 011000                    NOP     0

       70       70
       71       71    1          CALL SPLIT(USERTEMP, USER);

     71  0 000052   200004 236100                    LDQ     @USER,,AUTO
         0 000053   200056 756100                    STQ     @TEMP+1,,AUTO
PL6.E3A0      #001=FMG$COMPUDLO File=FMG$UTIL.:E05TSI                            TUE 07/29/97 16:45 Page:13   
         0 000054   200031 630500                    EPPR0   USERTEMP,,AUTO
         0 000055   200055 450500                    STP0    DIGIT+3,,AUTO
         0 000056   000101 701000 0                  TSX1    SPLIT
         0 000057   000000 011000                    NOP     0

       72       72
       73       73    1          CALL FMG$COMPUDLS(FMTEMP, USERTEMP, LEN+1, RESULT);

     73  0 000060   200005 470500                    LDP0    @LEN,,AUTO
         0 000061   000000 235100                    LDA     0,,PR0
         0 000062   000001 035007                    ADLA    1,DL
         0 000063   200060 755100                    STA     @ORIG+2,,AUTO
         0 000064   200006 236100                    LDQ     @RESULT,,AUTO
         0 000065   200065 756100                    STQ     @ORIG+7,,AUTO
         0 000066   200060 631500                    EPPR1   @ORIG+2,,AUTO
         0 000067   200064 451500                    STP1    @ORIG+6,,AUTO
         0 000070   200031 633500                    EPPR3   USERTEMP,,AUTO
         0 000071   200063 453500                    STP3    @ORIG+5,,AUTO
         0 000072   200011 634500                    EPPR4   FMTEMP,,AUTO
         0 000073   200062 454500                    STP4    @ORIG+4,,AUTO
         0 000074   200062 630500                    EPPR0   @ORIG+4,,AUTO
         0 000075   000022 631400 xsym               EPPR1   B_VECTNIL+18
         0 000076   000000 701000 xent               TSX1    FMG$COMPUDLS
         0 000077   000000 011000                    NOP     0

       74       74    1          RETURN;

     74  0 000100   000000 702200 xent               TSX2  ! X66_ARET

       75       75               %EJECT;
PL6.E3A0      #001=FMG$COMPUDLO File=FMG$UTIL.:E05TSI                            TUE 07/29/97 16:45 Page:14   
       76       76        /*I*     NAME:     SPLIT
       77       77                 PURPOSE:  To split the sign out of an overpunched number
       78       78                 DESCRIPTION:
       79       79                      First, move the overpunched sign/digit into the temp,
       80       80                 CHAR1.  Then, split it into a sign and digit.  Insert the
       81       81                 sign into the beginning of a temp, the move the rest of
       82       82                 the number into the temp.
       83       83        */
       84       84                 %EJECT;
PL6.E3A0      #001=FMG$COMPUDLO File=FMG$UTIL.:E05TSI                            TUE 07/29/97 16:45 Page:15   
       85       85    1   SPLIT: PROC(TEMP, ORIG);

     85  0 000101   200054 741300       SPLIT        STX1  ! DIGIT+2,,AUTO

       86       86    2          DCL TEMP CHAR(64);
       87       87    2          DCL ORIG CHAR(64);
       88       88        /* */
       89       89    2          IF POS = %LEADING THEN

     89  0 000102   200007 235100                    LDA     POS,,AUTO
         0 000103   000111 601000 0                  TNZ     s:92

       90       90    2             CALL INSERT(CHAR1, 0, 1, SUBSTR(ORIG, 0, 1));

     90  0 000104   200056 470500                    LDP0    @ORIG,,AUTO
         0 000105   040100 100500                    MLR     fill='040'O
         0 000106   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         0 000107   200010 000001                    ADSC9   CHAR1,,AUTO              cn=0,n=1
         0 000110   000117 710000 0                  TRA     s:94

       91       91    2          ELSE
       92       92    2             CALL INSERT(CHAR1, 0, 1, SUBSTR(ORIG, LEN-1, 1));

     92  0 000111   200005 470500                    LDP0    @LEN,,AUTO
         0 000112   000000 235100                    LDA     0,,PR0
         0 000113   200056 471500                    LDP1    @ORIG,,AUTO
         0 000114   040100 100505                    MLR     fill='040'O
         0 000115   177777 600001                    ADSC9   -1,A,PR1                 cn=3,n=1
         0 000116   200010 000001                    ADSC9   CHAR1,,AUTO              cn=0,n=1

       93       93
       94       94    2          IF CHAR1 = '{' THEN

     94  0 000117   200010 236100                    LDQ     CHAR1,,AUTO
         0 000120   777000 376003                    ANQ     -512,DU
         0 000121   173000 116003                    CMPQ    62976,DU
         0 000122   000130 601000 0                  TNZ     s:100
PL6.E3A0      #001=FMG$COMPUDLO File=FMG$UTIL.:E05TSI                            TUE 07/29/97 16:45 Page:16   

       95       95    3             DO;   /* +0 */

       96       96    3             SIGN='+';

     96  0 000123   053000 236003                    LDQ     22016,DU
         0 000124   200051 756100                    STQ     SIGN,,AUTO

       97       97    3             DIGIT='0';

     97  0 000125   060000 236003                    LDQ     24576,DU
         0 000126   200052 756100                    STQ     DIGIT,,AUTO

       98       98    3             END;  /* +0 */

     98  0 000127   000166 710000 0                  TRA     s:117

       99       99    2          ELSE
      100      100    2             IF CHAR1 = '}' THEN

    100  0 000130   200010 236100                    LDQ     CHAR1,,AUTO
         0 000131   777000 376003                    ANQ     -512,DU
         0 000132   175000 116003                    CMPQ    64000,DU
         0 000133   000141 601000 0                  TNZ     s:106

      101      101    3                DO;   /* -0 */

      102      102    3                SIGN='-';

    102  0 000134   055000 236003                    LDQ     23040,DU
         0 000135   200051 756100                    STQ     SIGN,,AUTO

      103      103    3                DIGIT='0';

    103  0 000136   060000 236003                    LDQ     24576,DU
         0 000137   200052 756100                    STQ     DIGIT,,AUTO

PL6.E3A0      #001=FMG$COMPUDLO File=FMG$UTIL.:E05TSI                            TUE 07/29/97 16:45 Page:17   
      104      104    3                END;  /* -0 */

    104  0 000140   000166 710000 0                  TRA     s:117

      105      105    2             ELSE
      106      106    2                IF CHAR1 < 'J' THEN

    106  0 000141   200010 236100                    LDQ     CHAR1,,AUTO
         0 000142   777000 376003                    ANQ     -512,DU
         0 000143   112000 116003                    CMPQ    37888,DU
         0 000144   000156 603000 0                  TRC     s:113

      107      107    3                   DO;   /* +1 TO +9 */

      108      108    3                   SIGN='+';

    108  0 000145   053000 236003                    LDQ     22016,DU
         0 000146   200051 756100                    STQ     SIGN,,AUTO

      109      109    3                   DIGIT=BINASC(ASCBIN(CHAR1)-16);

    109  0 000147   200010 236100                    LDQ     CHAR1,,AUTO
         0 000150   000033 772000                    QRL     27
         0 000151   000020 136007                    SBLQ    16,DL
         0 000152   000033 736000                    QLS     27
         0 000153   000000 276000 1                  ORQ     0
         0 000154   200052 756100                    STQ     DIGIT,,AUTO

      110      110    3                   END;  /* +1 TO +9 */

    110  0 000155   000166 710000 0                  TRA     s:117

      111      111    2                ELSE
      112      112    3                   DO;   /* -1 TO -9 */

      113      113    3                   SIGN='-';

PL6.E3A0      #001=FMG$COMPUDLO File=FMG$UTIL.:E05TSI                            TUE 07/29/97 16:45 Page:18   
    113  0 000156   055000 236003                    LDQ     23040,DU
         0 000157   200051 756100                    STQ     SIGN,,AUTO

      114      114    3                   DIGIT=BINASC(ASCBIN(CHAR1)-25);

    114  0 000160   200010 236100                    LDQ     CHAR1,,AUTO
         0 000161   000033 772000                    QRL     27
         0 000162   000031 136007                    SBLQ    25,DL
         0 000163   000033 736000                    QLS     27
         0 000164   000000 276000 1                  ORQ     0
         0 000165   200052 756100                    STQ     DIGIT,,AUTO

      115      115    3                   END;  /* -1 TO -9 */

      116      116
      117      117    2          CALL INSERT(TEMP, 0, 1, SIGN);

    117  0 000166   200055 470500                    LDP0    @TEMP,,AUTO
         0 000167   040100 100500                    MLR     fill='040'O
         0 000170   200051 000001                    ADSC9   SIGN,,AUTO               cn=0,n=1
         0 000171   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1

      118      118    2          IF POS = %LEADING THEN

    118  0 000172   200007 235100                    LDA     POS,,AUTO
         0 000173   000211 601000 0                  TNZ     s:125

      119      119    3             DO;   /* LEADING SIGN */

      120      120    3             CALL INSERT(TEMP, 1, 1, DIGIT);

    120  0 000174   040100 100500                    MLR     fill='040'O
         0 000175   200052 000001                    ADSC9   DIGIT,,AUTO              cn=0,n=1
         0 000176   000000 200001                    ADSC9   0,,PR0                   cn=1,n=1

      121      121    3             CALL INSERT(TEMP, 2, LEN-1, SUBSTR(ORIG, 1, LEN-1));

PL6.E3A0      #001=FMG$COMPUDLO File=FMG$UTIL.:E05TSI                            TUE 07/29/97 16:45 Page:19   
    121  0 000177   200005 471500                    LDP1    @LEN,,AUTO
         0 000200   100000 720100                    LXL0    0,,PR1
         0 000201   777777 621010                    EAX1    -1,X0
         0 000202   100000 722100                    LXL2    0,,PR1
         0 000203   777777 623012                    EAX3    -1,X2
         0 000204   200056 473500                    LDP3    @ORIG,,AUTO
         0 000205   040140 100540                    MLR     fill='040'O
         0 000206   300000 200011                    ADSC9   0,,PR3                   cn=1,n=*X1
         0 000207   000000 400013                    ADSC9   0,,PR0                   cn=2,n=*X3

      122      122    3             END;  /* LEADING SIGN */

    122  0 000210   000226 710000 0                  TRA     s:129

      123      123    2          ELSE
      124      124    3             DO;   /* TRAILING SIGN */

      125      125    3             CALL INSERT(TEMP, LEN-1, 1, DIGIT);

    125  0 000211   200005 471500                    LDP1    @LEN,,AUTO
         0 000212   100000 235100                    LDA     0,,PR1
         0 000213   040105 100500                    MLR     fill='040'O
         0 000214   200052 000001                    ADSC9   DIGIT,,AUTO              cn=0,n=1
         0 000215   077777 600001                    ADSC9   -1,A,PR0                 cn=3,n=1

      126      126    3             CALL INSERT(TEMP, 1, LEN-1, SUBSTR(ORIG, 0, LEN-1));

    126  0 000216   100000 720100                    LXL0    0,,PR1
         0 000217   777777 621010                    EAX1    -1,X0
         0 000220   100000 722100                    LXL2    0,,PR1
         0 000221   777777 623012                    EAX3    -1,X2
         0 000222   200056 473500                    LDP3    @ORIG,,AUTO
         0 000223   040140 100540                    MLR     fill='040'O
         0 000224   300000 000011                    ADSC9   0,,PR3                   cn=0,n=*X1
         0 000225   000000 200013                    ADSC9   0,,PR0                   cn=1,n=*X3

      127      127    3             END;  /* TRAILING SIGN */
PL6.E3A0      #001=FMG$COMPUDLO File=FMG$UTIL.:E05TSI                            TUE 07/29/97 16:45 Page:20   

      128      128
      129      129    2          RETURN;

    129  0 000226   200054 221300                    LDX1  ! DIGIT+2,,AUTO
         0 000227   000001 702211                    TSX2  ! 1,X1

(unnamed)
 Sect OctLoc
   1     000   000040 040040                                                    .
      130      130    2          END SPLIT;
      131      131    1          END FMG$COMPUDLO;
      132      132               %EOD;

PL6.E3A0      #001=FMG$COMPUDLO File=FMG$UTIL.:E05TSI                            TUE 07/29/97 16:45 Page:21   
      No diagnostics issued in procedure FMG$COMPUDLO.
PL6.E3A0      #001=FMG$COMPUDLO File=FMG$UTIL.:E05TSI                            TUE 07/29/97 16:45 Page:22   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @FM                        5-0-0/w PTR         r     1 @LEN
    56-0-0/w PTR         r     1 @ORIG                      6-0-0/w PTR         r     1 @RESULT
    55-0-0/w PTR         r     1 @TEMP                      4-0-0/w PTR         r     1 @USER
    10-0-0/c CHAR        r     1 CHAR1                     52-0-0/c CHAR        r     1 DIGIT
    *0-0-0/c CHAR(64)    r     1 FM                        11-0-0/c CHAR(64)    r     1 FMTEMP
    *0-0-0/w SBIN        r     1 LEN                       *0-0-0/c CHAR(64)    r     1 ORIG
     7-0-0/w UBIN        r     1 POS                       *0-0-0/w UBIN        r     1 RESULT
    51-0-0/c CHAR        r     1 SIGN                      *0-0-0/c CHAR(64)    r     1 TEMP
    *0-0-0/c CHAR(64)    r     1 USER                      31-0-0/c CHAR(64)    r     1 USERTEMP


   Procedure FMG$COMPUDLO requires 152 words for executable code.
   Procedure FMG$COMPUDLO requires 54 words of local(AUTO) storage.
PL6.E3A0      #001=FMG$COMPUDLO File=FMG$UTIL.:E05TSI                            TUE 07/29/97 16:45 Page:23   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=FMG$COMPUDLO File=FMG$UTIL.:E05TSI                            TUE 07/29/97 16:45 Page:24   
          MINI XREF LISTING

CHAR1
        37**DCL        90<<CALLBLT    92<<CALLBLT    94>>IF        100>>IF        106>>IF        109>>ASSIGN
       114>>ASSIGN
DIGIT
        41**DCL        97<<ASSIGN    103<<ASSIGN    109<<ASSIGN    114<<ASSIGN    120>>CALLBLT   125>>CALLBLT
FM
        29**DCL        28--PROC       47<>CALL       66--ENTRY      69<>CALL
FMG$COMPUDLS
        34**DCL-ENT    51--CALL       73--CALL
FMTEMP
        38**DCL        47<>CALL       51<>CALL       69<>CALL       73<>CALL
LEN
        31**DCL        28--PROC       51>>CALL       66--ENTRY      73>>CALL       92>>CALLBLT   121>>CALLBLT
       121>>CALLBLT   125>>CALLBLT   126>>CALLBLT   126>>CALLBLT
ORIG IN PROCEDURE SPLIT
        87**DCL        85--PROC       90>>CALLBLT    92>>CALLBLT   121>>CALLBLT   126>>CALLBLT
POS
        36**DCL        46<<ASSIGN     68<<ASSIGN     89>>IF        118>>IF
RESULT
        32**DCL        28--PROC       51<>CALL       66--ENTRY      73<>CALL
SIGN
        40**DCL        96<<ASSIGN    102<<ASSIGN    108<<ASSIGN    113<<ASSIGN    117>>CALLBLT
SPLIT
        85**PROC       47--CALL       49--CALL       69--CALL       71--CALL
TEMP IN PROCEDURE SPLIT
        86**DCL        85--PROC      117<<CALLBLT   120<<CALLBLT   121<<CALLBLT   125<<CALLBLT   126<<CALLBLT
USER
        30**DCL        28--PROC       49<>CALL       66--ENTRY      71<>CALL
USERTEMP
        39**DCL        49<>CALL       51<>CALL       71<>CALL       73<>CALL
PL6.E3A0      #001=FMG$COMPUDLO File=FMG$UTIL.:E05TSI                            TUE 07/29/97 16:45 Page:25   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=FMG$COMPUDLO File=FMG$UTIL.:E05TSI                            TUE 07/29/97 16:45 Page:26   
              MINI UREF LISTING

FMG$COMPUDLO      28**PROC
FMG$COMPUDTO      66**ENTRY

PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:27   
      133        1        /*T***********************************************************/
      134        2        /*T*                                                         */
      135        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      136        4        /*T*                                                         */
      137        5        /*T***********************************************************/
      138        6        /*F*     NAME:     FMG$INIT
      139        7                 PURPOSE:  To initialize a DCB for keyed files
      140        8        */
      141        9        /*D*     NAME:     FMG$INIT
      142       10                 CALL:     CALL FMG$INIT
      143       11                 DESCRIPTION:
      144       12                      Call SETUP to setup the DCB for keyed files.  If
      145       13                 F$DCB.RA is set, then the file was left open, probably
      146       14                 because we didn't go through recovery.  Call CHECK to
      147       15                 check for inconsistancies, then call SETUP again to make
      148       16                 sure everything is initialized.
      149       17        */
      150       18                 %EJECT;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:28   
      151       19        FMG$INIT: PROC ALTRET;
      152       20               %INCLUDE B$JIT;
      153      623               %INCLUDE FM$MACROS;
      154      998               %INCLUDE F$CP6V_C;
      155     1224               %INCLUDE F_ERRORS_C;
      156     1464               %INCLUDE FM_FIELD_C;
      157     1505               %INCLUDE CP_6_SUBS;
      158     2045               %INCLUDE B$OBJECT_C;
      159     5475               %MACRO F$DCB(BASED=BASED);
      160     5476               %INCLUDE F$DCB;
      161     5525               %MEND;
      162     5526               %INCLUDE FM_BUF_R; /* FM$BUF$ array */
      163     5535        /* */
      164     5536               %FITALTKEYS(FITALTKEYS=ALTKEYS, BASED="BASED(ALTKEY$)");
      165     5542               %FMG$IRKEYS(FPTN=IRKEYS, STCLASS="BASED(ALTKEY$)");
      166     5549               %FMG$KFIELD(FPTN=KFIELD, STCLASS="BASED(KFIELD$)");
      167     5552               %FM$FIELD_START(FPTN=FIELD_START, STCLASS="BASED(START$)");
      168     5574               %VLP$RECFIELD_V(FPTN=RECFIELD, BASED="BASED(RECFIELD$)");
      169     5611               %FM$GRAN(BASED="BASED(BUF$)");
      170     5615               %FM$KEYENT(BASED="BASED(KEY$)");
      171     5618               %FM$IRENT(BASED="BASED(KEY$)");
      172     5621               %FM$MISEG(BASED="BASED(SEG$)");
      173     5625               %FM$KEYTBL;
      174     5628               %FM$ULSEG(BASED="BASED(SEG$)");
      175     5631               %FM$CFU(BASED="BASED(CFU$)");
      176     5637               %F$DCB(BASED="BASED(JDCB$)");
      177     5687               %VREBL_DATATYPES;
      178     5762        /* */
      179     5763    1          DCL FAF$GETGRAN ENTRY(1) ALTRET;
      180     5764    1          DCL FMB$LOGERR ENTRY(11);
      181     5765    1          DCL FMD$GETBUF ENTRY(3);
      182     5766    1          DCL FMD$FLSHBUF ENTRY(1);
      183     5767    1          DCL FMD$REDBUF ENTRY(6) ALTRET;
      184     5768    1          DCL FMG$NXTKEY_ORG ENTRY(3) ALTRET;
      185     5769    1          DCL FMG$NXTSEG ENTRY(1) ALTRET;
      186     5770    1          DCL FMG$NXTREC ENTRY ALTRET;
      187     5771        /* */
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:29   
      188     5772    1          DCL B$JIT$ PTR SYMREF READONLY;
      189     5773    1          DCL B$ROSEG$ PTR SYMREF READONLY;
      190     5774    1          DCL FM_FRZERO SBIN SYMREF;
      191     5775        /* */
      192     5776    1          DCL JDCB$ PTR;
      193     5777    1          DCL CFU$ PTR;
      194     5778    1          DCL BUF$ PTR;
      195     5779    1          DCL KEY$ PTR;
      196     5780    1          DCL SEG$ PTR;
      197     5781    1          DCL UGRANS SBIN;
      198     5782    1          DCL DA UBIN;
      199     5783    1          DCL ONEGRAN UBIN;
      200     5784    1          DCL LDA UBIN;
      201     5785    1          DCL TDA UBIN;
      202     5786    1          DCL TDALVL UBIN;
      203     5787    1          DCL ALTKEY$ PTR;
      204     5788    1          DCL SEGCNT SBIN;
      205     5789    1          DCL KFIELD$ PTR;
      206     5790    1          DCL RECFIELD$ PTR;
      207     5791    1          DCL START$ PTR;
      208     5792    1          DCL FN SBIN;
      209     5793    1          DCL LEN SBIN;
      210     5794        /* */
      211     5795    1          DCL 1 INITKEYTBL CONSTANT,
      212     5796    1               2 * UBIN(9) UNAL INIT(280);
      213     5797        /* */
      214     5798    1          JDCB$=B$JIT.DCB$;
      215     5799    1          CFU$=F$DCB.CFU$;
      216     5800    1          ONEGRAN=0;
      217     5801
      218     5802    1          CALL SETUP ALTRET(ERR);
      219     5803
      220     5804    1          IF F$DCB.RA THEN
      221     5805    2             DO;   /* FILE LEFT OPEN */
      222     5806    2             CALL CHECK;
      223     5807    2             CALL SETUP ALTRET(ERR);
      224     5808    2             END;  /* FILE LEFT OPEN */
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:30   
      225     5809
      226     5810    1          RETURN;
      227     5811    1   ERR:   ALTRETURN;
      228     5812               %EJECT;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:31   
      229     5813        /*I*     NAME:     ADJUST
      230     5814                 PURPOSE:  To adjust SIZE to bytes
      231     5815                 DESCRIPTION:
      232     5816                 If the current field type is packed decimal, then SIZE
      233     5817                 will be in nibbles.  If the field is integer or UTS, then
      234     5818                 SIZE will be in bits.  Change both of those to bytes.
      235     5819                 If the field is any other type, SIZE is already in bytes.
      236     5820        */
      237     5821    1   ADJUST: PROC(SIZE);
      238     5822    2          DCL SIZE SBIN;
      239     5823        /* */
      240     5824    3          DO CASE(RECFIELD.FIELD.TYPE(FN));
      241     5825    3             CASE(%PDTA_DATATYPE, %PDLA_DATATYPE, %PDNS_DATATYPE,
      242     5826    3                  %PDFLT_DATATYPE, %PDLE_DATATYPE, %PDTE_DATATYPE,
      243     5827    3                  %DATE_DATATYPE, %TIME_DATATYPE);
      244     5828    3                SIZE=(SIZE+1)/2;
      245     5829
      246     5830    3             CASE(%SBIN_DATATYPE, %UBIN_DATATYPE, %UTS_DATATYPE);
      247     5831    3                SIZE=(SIZE+8)/9;
      248     5832
      249     5833    3             CASE(ELSE);
      250     5834                     /* Char, SFLT, DFLT, UDNS, UDLS, UDTS, UDLO, UDTO, and
      251     5835                        UDFLT are already sized in bytes.                */
      252     5836
      253     5837    3          END;  /* CASE */
      254     5838
      255     5839    2          RETURN;
      256     5840    2          END ADJUST;
      257     5841               %EJECT;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:32   
      258     5842        /*I*     NAME:     CHECK
      259     5843                 PURPOSE:  To check a file for inconsistancies
      260     5844                 DESCRIPTION:
      261     5845                      First, call COUNT_RECS to count the number of records
      262     5846                 in the file.  If there is a TDA, then check that also.
      263     5847
      264     5848                      If the file has alternate indexes, then check out the
      265     5849                 upper levels of the alternate indexes as well.
      266     5850
      267     5851                      During the check out process, any time we run across
      268     5852                 a DA, we check it against UGRANS.  UGRANS will have a
      269     5853                 running value of the largest disk address we've seen as
      270     5854                 we've accessed this file.
      271     5855
      272     5856                      Log an error depending on whether or not UGRANS seems
      273     5857                 to be valid.
      274     5858        */
      275     5859                 %EJECT;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:33   
      276     5860    1   CHECK: PROC;
      277     5861    2          DCL I SBIN;
      278     5862        /* */
      279     5863    2          CALL COUNT_RECS;
      280     5864
      281     5865    2          IF F$DCB.TDA ~= 0 THEN
      282     5866    3             DO;   /* CHECK TDA */
      283     5867    3             TDA=F$DCB.TDA;
      284     5868    3             TDALVL=F$DCB.TDALVL;
      285     5869    3             CALL CHECK_TDA;
      286     5870    3             F$DCB.TDA=TDA;
      287     5871    3             F$DCB.TDALVL=TDALVL;
      288     5872    3             END;  /* CHECK TDA */
      289     5873
      290     5874    2          IF ALTKEY$ ~= ADDR(NIL) THEN
      291     5875    3             DO;   /* CHECK ALTKEYS TDA */
      292     5876    3             IF F$DCB.ORG = %INDEXED# THEN
      293     5877    4                DO I=1 TO ALTKEYS.NUMENTS-1;
      294     5878    4                   TDA=ALTKEYS.K.TDA(I);
      295     5879    4                   TDALVL=ALTKEYS.K.TDALVL(I);
      296     5880    4                   IF TDA > 0 THEN
      297     5881    4                      CALL CHECK_TDA;
      298     5882    4                   ALTKEYS.K.TDA(I)=TDA;
      299     5883    4                   ALTKEYS.K.TDALVL(I)=TDALVL;
      300     5884    4                END;  /* DO I */
      301     5885    3             ELSE
      302     5886    4                DO I=1 TO IRKEYS.NKEYS-1;
      303     5887    4                   TDA=IRKEYS.K.TDA(I);
      304     5888    4                   TDALVL=IRKEYS.K.TDALVL(I);
      305     5889    4                   IF TDA > 0 THEN
      306     5890    4                      CALL CHECK_TDA;
      307     5891    4                   IRKEYS.K.TDA(I)=TDA;
      308     5892    4                   IRKEYS.K.TDALVL(I)=TDALVL;
      309     5893    4                END;
      310     5894    3             END;  /* CHECK ALTKEYS TDA */
      311     5895
      312     5896    2          UGRANS=UGRANS-FM_FRZERO+1;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:34   
      313     5897    2          IF UGRANS > 0 AND UGRANS <= FM$CFU.UGRANS+FM$CFU.NGAVAL THEN
      314     5898    3             DO;   /* UGRANS OKAY */
      315     5899    3             CALL FMB$LOGERR(%E$FREC, 70, 0, 0, CFU$, 4, 5, 7, UGRANS);
      316     5900    3             I=FM$CFU.UGRANS-UGRANS;
      317     5901    3             FM$CFU.UGRANS=FM$CFU.UGRANS-I;
      318     5902    3             FM$CFU.NGAVAL=FM$CFU.NGAVAL+I;
      319     5903    3             END;  /* UGRANS OKAY */
      320     5904    2          ELSE
      321     5905    2             CALL FMB$LOGERR(%E$FREC, 71, 0, 0, CFU$, 4, 5, 7, UGRANS);
      322     5906
      323     5907    2          FM$CFU.LDA=LDA;
      324     5908
      325     5909    2   DONE:  FM$CFU.GDA=ONEGRAN;
      326     5910    2          FM$CFU.FMOD='1'B;
      327     5911    2          IF F$DCB.BFR.DA(2) ~= F$DCB.TDA THEN
      328     5912    2             CALL FMD$FLSHBUF(2);
      329     5913    2          B$JIT.ERR='0'B;
      330     5914    2          F$DCB.TYC='0'B;
      331     5915    2          CALL FMB$LOGERR(%E$FREC, 72, 0, 0, CFU$, 4, 5, 7, ONEGRAN);
      332     5916
      333     5917    2          RETURN;
      334     5918    2          END CHECK;
      335     5919               %EJECT;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:35   
      336     5920        /*I*     NAME:     CHECK_TDA
      337     5921                 PURPOSE:  To check the upper level
      338     5922                 DESCRIPTION:
      339     5923                      Read in the TDA, then BLINK back to the beginning of
      340     5924                 this level.  NXTLVLDA will be the first disk address of
      341     5925                 the next lower level.  Now, flink along this level,
      342     5926                 checking the granules out.  If we haven't hit the bottom
      343     5927                 yet, then continue.
      344     5928        */
      345     5929                 %EJECT;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:36   
      346     5930    1   CHECK_TDA: PROC;
      347     5931    2          DCL LVL SBIN;
      348     5932    2          DCL LCDA SBIN;
      349     5933    2          DCL NXTLVLDA UBIN;
      350     5934        /* */
      351     5935    2          DA=TDA;
      352     5936    2          LVL=TDALVL;
      353     5937    2          F$DCB.LVL=LVL;
      354     5938
      355     5939    3          DO UNTIL (LVL = 0);
      356     5940    3             CALL FMD$REDBUF(BUF$, 2, DA, 0) ALTRET(NOTDA);
      357     5941
      358     5942    4             DO WHILE (FM$GRAN.BLINK ~= 0);
      359     5943    4                DA=FM$GRAN.BLINK;
      360     5944    4                LCDA=F$DCB.BFR.DA(2);
      361     5945    4                CALL FMD$REDBUF(BUF$, 2, DA, 0, LCDA) ALTRET(NOTDA);
      362     5946    4             END;  /* WHILE */
      363     5947
      364     5948    3             IF DA > UGRANS THEN
      365     5949    3                UGRANS=DA;
      366     5950
      367     5951    3             KEY$=PINCRW(BUF$, FM$GRAN.FCEX);
      368     5952    3             KEY$=PINCRW(BUF$, KEY$->FM$KEYTBL(1));
      369     5953    3             IF F$DCB.ORG = %IREL# THEN
      370     5954    3                SEG$=PINCRW(KEY$, (FM$IRENT.KLB+5)/4);
      371     5955    3             ELSE
      372     5956    3                SEG$=PINCRW(KEY$, (FM$KEYENT.KLB+4)/4);
      373     5957    3             NXTLVLDA=FM$ULSEG.DA;
      374     5958
      375     5959    4             DO WHILE (FM$GRAN.FLINK ~= 0);
      376     5960    4                DA=FM$GRAN.FLINK;
      377     5961    4                LCDA=F$DCB.BFR.DA(2);
      378     5962    4                IF DA > UGRANS THEN
      379     5963    4                   UGRANS=DA;
      380     5964    4                CALL FMD$REDBUF(BUF$, 2, DA, 0, LCDA) ALTRET(NOTDA);
      381     5965    4             END;  /* WHILE */
      382     5966
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:37   
      383     5967    3             LVL=LVL-1;
      384     5968    3             IF LVL > 0 THEN
      385     5969    4                DO;   /* NEXT LVL */
      386     5970    4                DA=NXTLVLDA;
      387     5971    4                F$DCB.LVL=LVL;
      388     5972    4                END;  /* NEXT LVL */
      389     5973    3          END;  /* UNTIL */
      390     5974
      391     5975    2          RETURN;
      392     5976    2   NOTDA: TDA=0;
      393     5977    2          TDALVL=0;
      394     5978    2          RETURN;
      395     5979    2          END CHECK_TDA;
      396     5980               %EJECT;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:38   
      397     5981        /*I*     NAME:     COUNT_ALTRECS
      398     5982                 PURPOSE:  To count records along an alternate index
      399     5983                 DESCRIPTION:
      400     5984                      Count the records along each of the alternate
      401     5985                 indexes.  First, read in the FDA, and set the counters
      402     5986                 to point to the beginning of the file.  Then, loop
      403     5987                 until we run into errors, or hit the end of the file.
      404     5988                 If the number of record along this index doesn't equal
      405     5989                 the number of records along the primary index, then
      406     5990                 assume that the alternate indexes need rebuilding.
      407     5991        */
      408     5992                 %EJECT;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:39   
      409     5993    1   COUNT_ALTRECS: PROC;
      410     5994    2          DCL NUMENTS SBIN;
      411     5995    2          DCL I SBIN;
      412     5996    2          DCL NRECS SBIN;
      413     5997    2          DCL FDA UBIN;
      414     5998    2          DCL LDA UBIN;
      415     5999        /* */
      416     6000    2          IF F$DCB.ORG = %INDEXED# THEN
      417     6001    2             NUMENTS=ALTKEYS.NUMENTS;
      418     6002    2          ELSE
      419     6003    2             NUMENTS=IRKEYS.NKEYS;
      420     6004
      421     6005    3          DO I=1 TO NUMENTS-1;
      422     6006    3             IF F$DCB.ORG = %INDEXED# THEN
      423     6007    3                FDA=ALTKEYS.K.FDA(I);
      424     6008    3             ELSE
      425     6009    3                FDA=IRKEYS.K.FDA(I);
      426     6010    3             NRECS=0;
      427     6011
      428     6012    3             F$DCB.LVL=0;
      429     6013    3             CALL FMD$REDBUF(BUF$, 1, FDA, 0, 0) ALTRET(DONE);
      430     6014    3             F$DCB.CRECX=0;
      431     6015    3             F$DCB.SEGX=0;
      432     6016    3             F$DCB.INDX=I+1;
      433     6017
      434     6018    4             DO WHILE('1'B);
      435     6019    4                IF F$DCB.BFR.DA(1) > UGRANS THEN
      436     6020    4                   UGRANS=F$DCB.BFR.DA(1);
      437     6021    4                LDA=F$DCB.BFR.DA(1);
      438     6022    4                CALL FMG$NXTREC ALTRET(DONE);
      439     6023    4                NRECS=NRECS+1;
      440     6024    4             END;  /* WHILE */
      441     6025
      442     6026    3   DONE:     IF F$DCB.ORG = %INDEXED# THEN
      443     6027    4                DO;   /* INDEXED */
      444     6028    4                ALTKEYS.K.LDA(I)=LDA;
      445     6029    4                IF NRECS ~= FM$CFU.NRECS THEN
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:40   
      446     6030    5                   DO;   /* ASSUME ALTERNATE INDEXES ARE BAD */
      447     6031    5                   ALTKEYS.ALTBLD='1'B;
      448     6032    5                   IF ALTKEYS.K.UNIQUE(I) THEN
      449     6033    5                      ALTKEYS.UNIQUEBLD='1'B;
      450     6034    5                   END;  /* ASSUME ALTERNATE INDEXES ARE BAD */
      451     6035    4                END;  /* INDEXED */
      452     6036    3             ELSE
      453     6037    4                DO;   /* IREL */
      454     6038    4                IRKEYS.K.LDA(I)=LDA;
      455     6039    4                IF NRECS ~= FM$CFU.NRECS THEN
      456     6040    5                   DO;   /* ASSUME ALTERNATE INDEXES ARE BAD */
      457     6041    5                   IRKEYS.ALTBLD='1'B;
      458     6042    5                   IF IRKEYS.K.UNIQUE(I) THEN
      459     6043    5                      IRKEYS.UNIQUEBLD='1'B;
      460     6044    5                   END;  /* ASSUME ALTERNATE INDEXES ARE BAD */
      461     6045    4                END;  /* IREL */
      462     6046    3          END;  /* DO I */
      463     6047
      464     6048    2          RETURN;
      465     6049    2          END COUNT_ALTRECS;
      466     6050               %EJECT;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:41   
      467     6051        /*I*     NAME:     COUNT_RECS
      468     6052                 PURPOSE:  To count the number of records in a file.
      469     6053                 DESCRIPTION:
      470     6054                      Read in file relative 0 and start reading records from
      471     6055                 the beginning of the file.  If a record isn't marked deleted,
      472     6056                 count it as a record.  Then, loop through the record's
      473     6057                 MISEGs.  If a data granule referenced in an MISEG has the
      474     6058                 highest disk address for any data granule found so far, read
      475     6059                 it in to be sure it's OK and to allow its NAVX to be checked
      476     6060                 later if it turns out to be the last data granule added to
      477     6061                 the file.  If the index or data granule was successfully read
      478     6062                 and its disk address is the highest found so far, update
      479     6063                 UGRANS.
      480     6064
      481     6065                      Since we may be checking this file because there was a
      482     6066                 system failure the last time it was open and we didn't make
      483     6067                 it through recovery, it's just possible that the last data
      484     6068                 granule in the file was updated but not written to disk.  If
      485     6069                 its associated index granule did manage to get written, it
      486     6070                 could be that one or more MISEGs point past NAVX on the data
      487     6071                 granule.  That could cause trouble during future attempts to
      488     6072                 update such a record.  Therefore, if this isn't a one granule
      489     6073                 (squeezed) file, we want to be sure that NAVX on the last
      490     6074                 data granule is large enough to contain all the data segments
      491     6075                 it's supposed to.  So, while looping through the MISEGs, keep
      492     6076                 track of the last data granule read so far and compute its
      493     6077                 minimal NAVX.  When we're done, the last data granule
      494     6078                 encountered should still be in buffer 0 as long as we were
      495     6079                 able to read it successfully.  If so, check it and fix up
      496     6080                 NAVX and AVAIL if they're too small.
      497     6081
      498     6082                     Then, if the file has any alternate indexes, count the
      499     6083                 records on each of those to see whether they match the count
      500     6084                 for the primary index.  If not, they need to be rebuilt.
      501     6085        */
      502     6086                 %EJECT;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:42   
      503     6087    1   COUNT_RECS: PROC;
      504     6088    2          DCL NRECS SBIN;
      505     6089    2          DCL GDA UBIN;
      506     6090    2          DCL GBUF$ PTR;
      507     6091    2          DCL LAST_GDA UBIN;
      508     6092    2          DCL NEW_NAVX UBIN;
      509     6093        /* */
      510     6094    2          NRECS=0;
      511     6095    2          NEW_NAVX=0;
      512     6096    2          F$DCB.RA='0'B;
      513     6097
      514     6098    2          CALL FMD$REDBUF(BUF$, 1, FM_FRZERO, 0, 0) ALTRET(DONE);
      515     6099    2          UGRANS=FM_FRZERO;
      516     6100    2          LDA=FM_FRZERO;
      517     6101    2          LAST_GDA=FM_FRZERO+1;
      518     6102
      519     6103    3          DO WHILE ('1'B);
      520     6104    3             CALL FMG$NXTKEY_ORG(SEG$, SEGCNT, KEY$) ALTRET(DONE);
      521     6105    3             IF NOT FM$KEYENT.D THEN
      522     6106    3                NRECS=NRECS+1;
      523     6107
      524     6108    3             IF F$DCB.BFR.DA(1) > UGRANS THEN
      525     6109    3                UGRANS=F$DCB.BFR.DA(1);
      526     6110    3             LDA=F$DCB.BFR.DA(1);
      527     6111
      528     6112    4             DO UNTIL (SEG$ = ADDR(NIL));
      529     6113    4                IF FM$MISEG.GDA >= LAST_GDA THEN
      530     6114    5                   DO;   /* Check last data granule */
      531     6115    5                   GDA=FM$MISEG.GDA;
      532     6116    5                   GBUF$=FM$BUF$(F$DCB.BFR.BUFX(0));
      533     6117    5                   IF GBUF$=ADDR(NIL) OR F$DCB.BFR.DA(0)~=GDA THEN
      534     6118    6                      DO;
      535     6119    6                      F$DCB.LVL=7;
      536     6120    6                      CALL FMD$REDBUF(GBUF$, 0, GDA, 0, 0) ALTRET(BAD_GRAN);
      537     6121    6                      END;
      538     6122    5                   IF FM$MISEG.GDA > LAST_GDA OR
      539     6123    5                      FM$MISEG.GX+FM$MISEG.GSIZ > NEW_NAVX THEN
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:43   
      540     6124    5                      NEW_NAVX=FM$MISEG.GX+FM$MISEG.GSIZ;
      541     6125    5                   LAST_GDA=FM$MISEG.GDA;
      542     6126    5                   IF LAST_GDA > UGRANS THEN
      543     6127    5                      UGRANS=LAST_GDA;
      544     6128    5   BAD_GRAN:       END;  /* Check last data granule */
      545     6129    4                ELSE
      546     6130    4                   IF FM$MISEG.GDA = FM_FRZERO THEN
      547     6131    4                      ONEGRAN=1;
      548     6132    4                CALL FMG$NXTSEG(SEG$) ALTRET(DONE);
      549     6133    4             END;  /* UNTIL */
      550     6134    3          END;  /* FOREVER */
      551     6135
      552     6136    2   DONE:;
      553     6137    2          IF ONEGRAN=0 AND NEW_NAVX > 0 THEN
      554     6138    3             DO;   /* Check NAVX on last data granule */
      555     6139    3             GBUF$=FM$BUF$(F$DCB.BFR.BUFX(0));
      556     6140    3             IF GBUF$ ~= ADDR(NIL) AND F$DCB.BFR.DA(0) = LAST_GDA THEN
      557     6141    4                DO;
      558     6142    4                IF NEW_NAVX <= 1024 AND NEW_NAVX > GBUF$->FM$GRAN.NAVX THEN
      559     6143    5                   DO;  /* Fix NAVX */
      560     6144    5                   GBUF$->FM$GRAN.NAVX=NEW_NAVX;
      561     6145    5                   GBUF$->FM$GRAN.AVAIL=1024-NEW_NAVX;
      562     6146    5                   F$DCB.BFR.BUFUP(0)='1'B;
      563     6147    5                   END; /* Fix NAVX */
      564     6148    4                END;
      565     6149    3             END;  /* Check NAVX on last data granule */
      566     6150
      567     6151    2          CALL FMD$FLSHBUF(0);
      568     6152    2          FM$CFU.NRECS=NRECS;
      569     6153    2          F$DCB.NRECS=NRECS;
      570     6154    2          LDA=F$DCB.BFR.DA(1);
      571     6155    2          IF ALTKEY$ ~= ADDR(NIL) THEN
      572     6156    2             CALL COUNT_ALTRECS;
      573     6157
      574     6158    2          IF F$DCB.BFR.DA(1) > UGRANS THEN
      575     6159    2             UGRANS=F$DCB.BFR.DA(1);
      576     6160    2          RETURN;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:44   
      577     6161    2          END COUNT_RECS;
      578     6162               %EJECT;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:45   
      579     6163        /*I*     NAME:     GETGRAN
      580     6164                 PURPOSE:  To obtain and initialize an index granule
      581     6165                 DESCRIPTION:
      582     6166                      Get a granule, then a buffer. Initialize the granule
      583     6167                 to be an index granule.
      584     6168        */
      585     6169                 %EJECT;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:46   
      586     6170    1   GETGRAN: PROC ALTRET;
      587     6171        /* */
      588     6172    2          CALL FMD$FLSHBUF(2);
      589     6173    2          CALL FAF$GETGRAN(DA) ALTRET(ERR);
      590     6174    2          CALL FMD$GETBUF(2, 1, BUF$);
      591     6175    2          F$DCB.BFR.DA(2)=DA;
      592     6176    2          F$DCB.BFR.BUFUP(2)='1'B;
      593     6177    2          F$DCB.BFR.SCRUB(2)='1'B;
      594     6178
      595     6179    2          FM$GRAN='0'B;
      596     6180    2          FM$GRAN.STAMP.HASH=F$DCB.HASH;
      597     6181    2          FM$GRAN.STAMP.GMOD=DA;
      598     6182    2          FM$GRAN.NAVX=SIZEW(FM$GRAN)+SIZEW(FM$KEYTBL);
      599     6183    2          FM$GRAN.HDR='1'B;
      600     6184    2          FM$GRAN.ORG=F$DCB.ORG;
      601     6185    2          FM$GRAN.AVAIL=1024-FM$GRAN.NAVX;
      602     6186    2          FM$GRAN.FCEX=SIZEW(FM$GRAN);
      603     6187    2          PINCRW(BUF$, SIZEW(FM$GRAN))->FM$KEYTBL=INITKEYTBL;
      604     6188    2          RETURN;
      605     6189    2   ERR:   ALTRETURN;
      606     6190    2          END GETGRAN;
      607     6191               %EJECT;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:47   
      608     6192        /*I*     NAME:     SETUP
      609     6193                 PURPOSE:  To set up a DCB for a keyed file
      610     6194                 DESCRIPTION:
      611     6195                      Set up buffer one to contain the first index granule.
      612     6196                 Tell the DCB that this is a file.  If there are any
      613     6197                 alternate indexes and the file was properly closed, then
      614     6198                 set up the alternate indexes.  The default is not load
      615     6199                 mode.  However, if the alternate indexes need to be
      616     6200                 rebuilt, might as well make it load mode.  Set the DCB
      617     6201                 to point to the beginning of the file.
      618     6202        */
      619     6203                 %EJECT;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:48   
      620     6204    1   SETUP: PROC ALTRET;
      621     6205        /* */
      622     6206    2          IF F$DCB.BFR.DA(1) ~= FM_FRZERO THEN
      623     6207    3             DO;   /* SET UP FRZERO */
      624     6208    3             CALL FMD$FLSHBUF(1);
      625     6209    3             F$DCB.BFR.DA(1)=FM_FRZERO;
      626     6210    3             END;  /* SET UP FRZERO */
      627     6211
      628     6212    2          F$DCB.GTYP=FMGTFILE;
      629     6213
      630     6214    2          IF F$DCB.ALTKEYX ~= 0 AND F$DCB.ORG ~= %KEYED# AND
      631     6215    2             F$DCB.ACS ~= %BLOCK# THEN
      632     6216    3             DO;   /* ALTKEYS SETUP */
      633     6217    3             ALTKEY$=PINCRW(B$ROSEG$, F$DCB.ALTKEYX);
      634     6218    3             IF NOT F$DCB.RA THEN
      635     6219    4                DO;   /* SETUP */
      636     6220    4                IF F$DCB.ORG = %INDEXED# THEN
      637     6221    4                   CALL SETUP_ALTKEYS;
      638     6222    4                ELSE
      639     6223    4                   CALL SETUP_IRKEYS;
      640     6224
      641     6225    4                IF FM$CFU.ALTBLD THEN
      642     6226    4                   F$DCB.LDFLG='1'B;
      643     6227    4                ELSE
      644     6228    4                   IF FM$CFU.SHARE ~= %NONE# THEN
      645     6229    4                      F$DCB.LDFLG='0'B;
      646     6230    4                   ELSE
      647     6231    4                      F$DCB.LDFLG=F$DCB.LOAD;
      648     6232    4                END;  /* SETUP */
      649     6233    3             END;  /* ALTKEYS SETUP */
      650     6234    2          ELSE
      651     6235    2             ALTKEY$=ADDR(NIL);
      652     6236
      653     6237    2          IF F$DCB.BFR.BUFX(2) ~= 0 THEN
      654     6238    2             CALL FMD$FLSHBUF(2);
      655     6239
      656     6240    2          F$DCB.BFR.DA(2)=F$DCB.TDA;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:49   
      657     6241    2          F$DCB.CRECX=0;
      658     6242    2          F$DCB.RPOS='0'B;
      659     6243    2          F$DCB.EOP=0;
      660     6244    2          F$DCB.ID='0'B;
      661     6245    2          F$DCB.LVL=0;
      662     6246    2          F$DCB.INDX=1;
      663     6247
      664     6248    2          RETURN;
      665     6249    2          END SETUP;
      666     6250               %EJECT;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:50   
      667     6251        /*I*     NAME:     SETUP_ALTKEY
      668     6252                 PURPOSE:  To handle setup of indexed files
      669     6253                 DESCRIPTION:
      670     6254                      Set up entry 0 of the array to be the same as the
      671     6255                 primary index.  Now, loop through the set of indexes.
      672     6256                 Find the key that extends farthest in the record.  This
      673     6257                 will be the minimum record size for this file.  If this
      674     6258                 index doesn't have an FDA, then try to get one.  If
      675     6259                 FM$CFU.XTX=1, then the file was open fun=in, share~=all. In
      676     6260                 that case, the FDA should be non-zero since we opened an
      677     6261                 existing file. If it isn't, it probably means that the
      678     6262                 system went down without going through recovery when the
      679     6263                 file was being created and the FIT didn't get updated.
      680     6264                 However, that type of CFU isn't set up so that we can add
      681     6265                 an extent to it, so don't even try.
      682     6266        */
      683     6267                 %EJECT;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:51   
      684     6268    1   SETUP_ALTKEYS: PROC;
      685     6269    2          DCL I SBIN;
      686     6270        /* */
      687     6271    2          ALTKEYS.K.KEYX(0)=F$DCB.KEYX;
      688     6272    2          ALTKEYS.K.KEYL(0)=F$DCB.KEYL;
      689     6273    2          ALTKEYS.K.UNIQUE(0)='1'B;
      690     6274    2          ALTKEYS.K.FDA(0)=FM_FRZERO;
      691     6275    2          ALTKEYS.K.LDA(0)=FM$CFU.LDA;
      692     6276    2          ALTKEYS.K.TDA(0)=F$DCB.TDA;
      693     6277    2          ALTKEYS.K.TDALVL(0)=F$DCB.TDALVL;
      694     6278
      695     6279    2          ALTKEYS.MINWRSIZ=0;
      696     6280    3          DO I=0 TO ALTKEYS.NUMENTS-1;
      697     6281    3             IF ALTKEYS.K.KEYX(I)+ALTKEYS.K.KEYL(I) > ALTKEYS.MINWRSIZ THEN
      698     6282    3                ALTKEYS.MINWRSIZ=ALTKEYS.K.KEYX(I)+ALTKEYS.K.KEYL(I);
      699     6283
      700     6284    3             ALTKEYS.K.RPOS(I)='0'B;
      701     6285    3             ALTKEYS.K.INDXCHNG(I)='0'B;
      702     6286    3             ALTKEYS.K.CRECX(I)=0;
      703     6287    3             ALTKEYS.K.SEGX(I)=0;
      704     6288    3             ALTKEYS.K.CDA(I)=ALTKEYS.K.FDA(I);
      705     6289
      706     6290    3             IF ALTKEYS.K.FDA(I)=0 AND (FM$CFU.XTX > 1 OR FM$CFU.NGAVAL > 0) THEN
      707     6291    4                DO;   /* GET A GRAN */
      708     6292    4                CALL GETGRAN ALTRET(NOGRAN);
      709     6293    4                ALTKEYS.K.FDA(I)=DA;
      710     6294    4                ALTKEYS.K.LDA(I)=DA;
      711     6295    4                ALTKEYS.K.CDA(I)=DA;
      712     6296    4                END;  /* GET A GRAN */
      713     6297    3   NOGRAN:   END;  /* DO I */
      714     6298
      715     6299    2          FM$CFU.ALTBLD=ALTKEYS.ALTBLD;
      716     6300    2          F$DCB.UNIQUEBLD=ALTKEYS.UNIQUEBLD;
      717     6301    2          RETURN;
      718     6302    2          END SETUP_ALTKEYS;
      719     6303               %EJECT;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:52   
      720     6304        /*I*     NAME:     SETUP_IRKEYS
      721     6305                 PURPOSE:  To handle setup for irel files
      722     6306                 DESCRIPTION:
      723     6307                      Initialize entry 0 of the array to point to the
      724     6308                 primary index.  Next, loop through all of the indexes.
      725     6309                 Loop through all of the fields associated with this key.
      726     6310                 Find the key that extends farthest in the record.  This
      727     6311                 will be the minimum record size.  Also, add up the size
      728     6312                 of this key in bytes.
      729     6313
      730     6314                      If this index doesn't have an FDA, then try to get
      731     6315                 one.  If FM$CFU.XTX=1, the file is open fun=in, share~=all.
      732     6316                 If so, the FDA should already be non-zero since we opened an
      733     6317                 existing file.  If it isn't, it probably means that the
      734     6318                 system went down without going through recovery when the
      735     6319                 file was being created and the FIT wasn't updated.  However,
      736     6320                 this type of CFU isn't set up so that an extent can be added
      737     6321                 to it, so don't even try.
      738     6322        */
      739     6323                 %EJECT;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:53   
      740     6324    1   SETUP_IRKEYS: PROC;
      741     6325    2          DCL I UBIN;
      742     6326    2          DCL J UBIN;
      743     6327    2          DCL START UBIN;
      744     6328    2          DCL SIZE SBIN;
      745     6329        /* */
      746     6330    2          KFIELD$=PINCRW(B$ROSEG$, F$DCB.KFIELDX);
      747     6331    2          RECFIELD$=PINCRW(B$ROSEG$, F$DCB.FIELDX);
      748     6332    2          START$=PINCRW(B$ROSEG$, F$DCB.STARTX);
      749     6333
      750     6334    2          IRKEYS.K.UNIQUE(0)='1'B;
      751     6335    2          IRKEYS.K.FDA(0)=FM_FRZERO;
      752     6336    2          IRKEYS.K.LDA(0)=FM$CFU.LDA;
      753     6337    2          IRKEYS.K.TDA(0)=F$DCB.TDA;
      754     6338    2          IRKEYS.K.TDALVL(0)=F$DCB.TDALVL;
      755     6339
      756     6340    2          IRKEYS.MINSIZE=0;
      757     6341    3          DO I=0 TO IRKEYS.NKEYS-1;
      758     6342    3             IRKEYS.K.KEYL(I)=0;
      759     6343
      760     6344    4             DO J=IRKEYS.K.FIRSTFIELD(I) TO IRKEYS.K.FIRSTFIELD(I)+
      761     6345    4                                            IRKEYS.K.NFIELDS(I)-1;
      762     6346    4                FN=KFIELD.FIELD(J);
      763     6347    4                CALL SET_START(START);
      764     6348    4                CALL SET_LEN;
      765     6349    4                SIZE=START+LEN;
      766     6350    4                CALL ADJUST(SIZE);
      767     6351    4                CALL ADJUST(LEN);
      768     6352    4                IF SIZE > IRKEYS.MINSIZE THEN
      769     6353    4                   IRKEYS.MINSIZE=SIZE;
      770     6354    4                IRKEYS.K.KEYL(I)=IRKEYS.K.KEYL(I)+LEN;
      771     6355    4             END;  /* DO J */
      772     6356
      773     6357    3             IRKEYS.K.RPOS(I)='0'B;
      774     6358    3             IRKEYS.K.INDXCHNG(I)='0'B;
      775     6359    3             IRKEYS.K.CRECX(I)=0;
      776     6360    3             IRKEYS.K.SEGX(I)=0;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:54   
      777     6361    3             IRKEYS.K.CDA(I)=IRKEYS.K.FDA(I);
      778     6362
      779     6363    3             IF IRKEYS.K.FDA(I)=0 AND (FM$CFU.XTX > 1 OR FM$CFU.NGAVAL > 0) THEN
      780     6364    4                DO;   /* GET A GRAN */
      781     6365    4                CALL GETGRAN ALTRET(NOGRAN);
      782     6366    4                IRKEYS.K.FDA(I)=DA;
      783     6367    4                IRKEYS.K.LDA(I)=DA;
      784     6368    4                IRKEYS.K.CDA(I)=DA;
      785     6369    4                END;  /* GET A GRAN */
      786     6370    3   NOGRAN:   END;  /* DO I */
      787     6371
      788     6372    2          FM$CFU.ALTBLD=IRKEYS.ALTBLD;
      789     6373    2          F$DCB.UNIQUEBLD=IRKEYS.UNIQUEBLD;
      790     6374    2          F$DCB.KEYX=0;
      791     6375    2          F$DCB.KEYL=IRKEYS.K.KEYL(0);
      792     6376    2          RETURN;
      793     6377    2          END SETUP_IRKEYS;
      794     6378               %EJECT;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:55   
      795     6379        /*I*     NAME:     SET_LEN
      796     6380                 PURPOSE:  To set the length for a field
      797     6381                 DESCRIPTION:
      798     6382                      Because we had to pack this information into a single
      799     6383                 word (blame Doug) the length can be in one of two places.
      800     6384                 If this is a normal data type, then it has the LEN field
      801     6385                 all to itself.  If this is a scaled decimal data type,
      802     6386                 then the field is shared with the scale factor.
      803     6387        */
      804     6388    1   SET_LEN: PROC;
      805     6389        /* */
      806     6390    3          DO CASE(RECFIELD.FIELD.TYPE(FN));
      807     6391    3             CASE(%UDLS_DATATYPE, %UDTS_DATATYPE, %UDNS_DATATYPE,
      808     6392    3                  %PDLA_DATATYPE, %PDTA_DATATYPE, %PDNS_DATATYPE,
      809     6393    3                  %UDLO_DATATYPE, %UDTO_DATATYPE, %PDLE_DATATYPE,
      810     6394    3                  %PDTE_DATATYPE, %PDFLT_DATATYPE, %UDFLT_DATATYPE,
      811     6395    3                  %DATE_DATATYPE, %TIME_DATATYPE);
      812     6396                     /* Packed decimal (including DATE and TIME) have length
      813     6397                        in nibbles. Unpacked have length in bytes.        */
      814     6398    3                LEN=RECFIELD.DECFIELD.LEN(FN);
      815     6399
      816     6400    3             CASE(ELSE);
      817     6401                     /* Types CHAR, SFLT, and DFLT have length in bytes.
      818     6402                        Types UBIN, SBIN, and UTS have length in bits.  */
      819     6403    3                LEN=RECFIELD.FIELD.LEN(FN);
      820     6404
      821     6405    3          END;  /* CASE */
      822     6406    2          RETURN;
      823     6407    2          END SET_LEN;
      824     6408        %EJECT;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:56   
      825     6409        /*I*     NAME:     SET_START
      826     6410                 PURPOSE:  To set a field's starting position in a record.
      827     6411                 DESCRIPTION:
      828     6412                 START is set to the current field's starting position in
      829     6413                 the record.  The starting position of each field is already
      830     6414                 available from FM$FIELD_START, but is in the form of a bit
      831     6415                 offset from the beginning of the record.  So that we can
      832     6416                 use START in conjunction with LEN, we want to change this
      833     6417                 bit offset to either a byte, nibble, or bit offset depending
      834     6418                 upon the data type of the field.
      835     6419        */
      836     6420    1   SET_START: PROC(START);
      837     6421        /**/
      838     6422    2          DCL START UBIN;
      839     6423        /**/
      840     6424    3          DO CASE(RECFIELD.FIELD.TYPE(FN));
      841     6425    3             CASE(%SBIN_DATATYPE, %UBIN_DATATYPE, %UTS_DATATYPE);
      842     6426                     /* Already in bits, so just use it. */
      843     6427    3                START=FIELD_START.OFFSET(FN);
      844     6428
      845     6429    3             CASE(%PDLA_DATATYPE, %PDTA_DATATYPE, %PDLE_DATATYPE,
      846     6430    3                  %PDTE_DATATYPE, %PDNS_DATATYPE, %PDFLT_DATATYPE,
      847     6431    3                  %DATE_DATATYPE, %TIME_DATATYPE);
      848     6432                     /* Adjust start to nibbles. */
      849     6433    3                IF MOD(FIELD_START.OFFSET(FN),9)=0 THEN
      850     6434    3                   START=(FIELD_START.OFFSET(FN)/9)*2;
      851     6435    3                ELSE START=(FIELD_START.OFFSET(FN)/9)*2 + 1;
      852     6436
      853     6437    3             CASE(ELSE);
      854     6438                     /* Start for types CHAR, SLFT, DFLT, UDNS, UDLS, UDTS,
      855     6439                        UDLO, UDTO, and UDFLT are adjusted to bytes.       */
      856     6440    3                START=FIELD_START.OFFSET(FN)/9;
      857     6441
      858     6442    3             END; /* CASE */
      859     6443
      860     6444    2          RETURN;
      861     6445    2          END SET_START;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:57   
      862     6446    1          END FMG$INIT;
      863     6447               %EOD;

PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:58   
--  Include file information  --

   FM_BUF_R.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   FM_FIELD_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   F$CP6V_C.:E05TOU  is referenced.
   FM$MACROS.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMG$INIT.

   Procedure FMG$INIT requires 1396 words for executable code.
   Procedure FMG$INIT requires 46 words of local(AUTO) storage.

PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:59   

 Object Unit name= FMG$INIT                                   File name= FMG$UTIL.:E05TOU
 UTS= JUL 29 '97 16:45:40.08 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      1      1  FMG$INIT
    1   Proc  even  none  1396   2564  FMG$INIT
    2  RoData even  none    32     40  FMG$INIT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        0  FMG$INIT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std      11 FMB$LOGERR
         yes           Std       1 FMD$FLSHBUF
 yes     yes           Std       6 FMD$REDBUF
 yes     yes           Std       0 FMG$NXTREC
 yes     yes           Std       3 FMG$NXTKEY_ORG
 yes     yes           Std       1 FMG$NXTSEG
 yes     yes           Std       1 FAF$GETGRAN
         yes           Std       3 FMD$GETBUF
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
                       Std       0 B_CONSPOOL_D
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:60   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     FM$BUF$                          r    B$JIT$                           r    B$ROSEG$
     FM_FRZERO                             B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:61   


      133        1        /*T***********************************************************/
      134        2        /*T*                                                         */
      135        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      136        4        /*T*                                                         */
      137        5        /*T***********************************************************/
      138        6        /*F*     NAME:     FMG$INIT
      139        7                 PURPOSE:  To initialize a DCB for keyed files
      140        8        */
      141        9        /*D*     NAME:     FMG$INIT
      142       10                 CALL:     CALL FMG$INIT
      143       11                 DESCRIPTION:
      144       12                      Call SETUP to setup the DCB for keyed files.  If
      145       13                 F$DCB.RA is set, then the file was left open, probably
      146       14                 because we didn't go through recovery.  Call CHECK to
      147       15                 check for inconsistancies, then call SETUP again to make
      148       16                 sure everything is initialized.
      149       17        */
      150       18                 %EJECT;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:62   
      151       19        FMG$INIT: PROC ALTRET;

     19  1 000000   000000 700200 xent  FMG$INIT     TSX0  ! X66_AUTO_0
         1 000001   000056 000000                    ZERO    46,0

      152       20               %INCLUDE B$JIT;
      153      623               %INCLUDE FM$MACROS;
      154      998               %INCLUDE F$CP6V_C;
      155     1224               %INCLUDE F_ERRORS_C;
      156     1464               %INCLUDE FM_FIELD_C;
      157     1505               %INCLUDE CP_6_SUBS;
      158     2045               %INCLUDE B$OBJECT_C;
      159     5475               %MACRO F$DCB(BASED=BASED);
      160     5476               %INCLUDE F$DCB;
      161     5525               %MEND;
      162     5526               %INCLUDE FM_BUF_R; /* FM$BUF$ array */
      163     5535        /* */
      164     5536               %FITALTKEYS(FITALTKEYS=ALTKEYS, BASED="BASED(ALTKEY$)");
      165     5542               %FMG$IRKEYS(FPTN=IRKEYS, STCLASS="BASED(ALTKEY$)");
      166     5549               %FMG$KFIELD(FPTN=KFIELD, STCLASS="BASED(KFIELD$)");
      167     5552               %FM$FIELD_START(FPTN=FIELD_START, STCLASS="BASED(START$)");
      168     5574               %VLP$RECFIELD_V(FPTN=RECFIELD, BASED="BASED(RECFIELD$)");
      169     5611               %FM$GRAN(BASED="BASED(BUF$)");
      170     5615               %FM$KEYENT(BASED="BASED(KEY$)");
      171     5618               %FM$IRENT(BASED="BASED(KEY$)");
      172     5621               %FM$MISEG(BASED="BASED(SEG$)");
      173     5625               %FM$KEYTBL;
      174     5628               %FM$ULSEG(BASED="BASED(SEG$)");
      175     5631               %FM$CFU(BASED="BASED(CFU$)");
      176     5637               %F$DCB(BASED="BASED(JDCB$)");
      177     5687               %VREBL_DATATYPES;
      178     5762        /* */
      179     5763    1          DCL FAF$GETGRAN ENTRY(1) ALTRET;
      180     5764    1          DCL FMB$LOGERR ENTRY(11);
      181     5765    1          DCL FMD$GETBUF ENTRY(3);
      182     5766    1          DCL FMD$FLSHBUF ENTRY(1);
      183     5767    1          DCL FMD$REDBUF ENTRY(6) ALTRET;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:63   
      184     5768    1          DCL FMG$NXTKEY_ORG ENTRY(3) ALTRET;
      185     5769    1          DCL FMG$NXTSEG ENTRY(1) ALTRET;
      186     5770    1          DCL FMG$NXTREC ENTRY ALTRET;
      187     5771        /* */
      188     5772    1          DCL B$JIT$ PTR SYMREF READONLY;
      189     5773    1          DCL B$ROSEG$ PTR SYMREF READONLY;
      190     5774    1          DCL FM_FRZERO SBIN SYMREF;
      191     5775        /* */
      192     5776    1          DCL JDCB$ PTR;
      193     5777    1          DCL CFU$ PTR;
      194     5778    1          DCL BUF$ PTR;
      195     5779    1          DCL KEY$ PTR;
      196     5780    1          DCL SEG$ PTR;
      197     5781    1          DCL UGRANS SBIN;
      198     5782    1          DCL DA UBIN;
      199     5783    1          DCL ONEGRAN UBIN;
      200     5784    1          DCL LDA UBIN;
      201     5785    1          DCL TDA UBIN;
      202     5786    1          DCL TDALVL UBIN;
      203     5787    1          DCL ALTKEY$ PTR;
      204     5788    1          DCL SEGCNT SBIN;
      205     5789    1          DCL KFIELD$ PTR;
      206     5790    1          DCL RECFIELD$ PTR;
      207     5791    1          DCL START$ PTR;
      208     5792    1          DCL FN SBIN;
      209     5793    1          DCL LEN SBIN;
      210     5794        /* */
      211     5795    1          DCL 1 INITKEYTBL CONSTANT,
      212     5796    1               2 * UBIN(9) UNAL INIT(280);
      213     5797        /* */
      214     5798    1          JDCB$=B$JIT.DCB$;

   5798  1 000002   000000 470400 xsym               LDP0    B$JIT$
         1 000003   000232 236100                    LDQ     154,,PR0
         1 000004   200003 756100                    STQ     JDCB$,,AUTO

      215     5799    1          CFU$=F$DCB.CFU$;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:64   

   5799  1 000005   200003 471500                    LDP1    JDCB$,,AUTO
         1 000006   100066 236100                    LDQ     54,,PR1
         1 000007   200004 756100                    STQ     CFU$,,AUTO

      216     5800    1          ONEGRAN=0;

   5800  1 000010   200012 450100                    STZ     ONEGRAN,,AUTO

      217     5801
      218     5802    1          CALL SETUP ALTRET(ERR);

   5802  1 000011   001501 701000 1                  TSX1    SETUP
         1 000012   000024 702000 1                  TSX2    ERR

      219     5803
      220     5804    1          IF F$DCB.RA THEN

   5804  1 000013   200003 470500                    LDP0    JDCB$,,AUTO
         1 000014   000064 236100                    LDQ     52,,PR0
         1 000015   020000 316007                    CANQ    8192,DL
         1 000016   000023 600000 1                  TZE     s:5810

      221     5805    2             DO;   /* FILE LEFT OPEN */

      222     5806    2             CALL CHECK;

   5806  1 000017   000153 701000 1                  TSX1    CHECK
         1 000020   000000 011000                    NOP     0

      223     5807    2             CALL SETUP ALTRET(ERR);

   5807  1 000021   001501 701000 1                  TSX1    SETUP
         1 000022   000024 702000 1                  TSX2    ERR

      224     5808    2             END;  /* FILE LEFT OPEN */

PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:65   
      225     5809
      226     5810    1          RETURN;

   5810  1 000023   000000 702200 xent               TSX2  ! X66_ARET

      227     5811    1   ERR:   ALTRETURN;

   5811  1 000024   000000 702200 xent  ERR          TSX2  ! X66_AALT

      228     5812               %EJECT;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:66   
      229     5813        /*I*     NAME:     ADJUST
      230     5814                 PURPOSE:  To adjust SIZE to bytes
      231     5815                 DESCRIPTION:
      232     5816                 If the current field type is packed decimal, then SIZE
      233     5817                 will be in nibbles.  If the field is integer or UTS, then
      234     5818                 SIZE will be in bits.  Change both of those to bytes.
      235     5819                 If the field is any other type, SIZE is already in bytes.
      236     5820        */
      237     5821    1   ADJUST: PROC(SIZE);

   5821  1 000025   200036 741300       ADJUST       STX1  ! NEW_NAVX+1,,AUTO

      238     5822    2          DCL SIZE SBIN;
      239     5823        /* */
      240     5824    3          DO CASE(RECFIELD.FIELD.TYPE(FN));

   5824  1 000026   200023 236100                    LDQ     FN,,AUTO
         1 000027   000003 402007                    MPY     3,DL
         1 000030   000000 116003                    CMPQ    0,DU
         1 000031   000033 605000 1                  TPL     s:5824+5
         1 000032   000006 036003                    ADLQ    6,DU
         1 000033   200021 470500                    LDP0    RECFIELD$,,AUTO
         1 000034   000100 101506                    MRL     fill='000'O
         1 000035   000001 020001                    ADSC6   1,Q,PR0                  cn=0,n=1
         1 000036   200044 020003                    ADSC6   LDA+1,,AUTO              cn=0,n=3
         1 000037   200044 220100                    LDX0    LDA+1,,AUTO
         1 000040   000072 100003                    CMPX0   58,DU
         1 000041   000043 602010 1                  TNC     s:5824+13,X0
         1 000042   000151 710000 1                  TRA     s:5839
         1 000043   000151 710000 1                  TRA     s:5839
         1 000044   000143 710000 1                  TRA     s:5831
         1 000045   000151 710000 1                  TRA     s:5839
         1 000046   000151 710000 1                  TRA     s:5839
         1 000047   000151 710000 1                  TRA     s:5839
         1 000050   000151 710000 1                  TRA     s:5839
         1 000051   000151 710000 1                  TRA     s:5839
         1 000052   000151 710000 1                  TRA     s:5839
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:67   
         1 000053   000151 710000 1                  TRA     s:5839
         1 000054   000135 710000 1                  TRA     s:5828
         1 000055   000135 710000 1                  TRA     s:5828
         1 000056   000151 710000 1                  TRA     s:5839
         1 000057   000151 710000 1                  TRA     s:5839
         1 000060   000151 710000 1                  TRA     s:5839
         1 000061   000151 710000 1                  TRA     s:5839
         1 000062   000151 710000 1                  TRA     s:5839
         1 000063   000151 710000 1                  TRA     s:5839
         1 000064   000151 710000 1                  TRA     s:5839
         1 000065   000151 710000 1                  TRA     s:5839
         1 000066   000151 710000 1                  TRA     s:5839
         1 000067   000151 710000 1                  TRA     s:5839
         1 000070   000151 710000 1                  TRA     s:5839
         1 000071   000151 710000 1                  TRA     s:5839
         1 000072   000151 710000 1                  TRA     s:5839
         1 000073   000143 710000 1                  TRA     s:5831
         1 000074   000135 710000 1                  TRA     s:5828
         1 000075   000151 710000 1                  TRA     s:5839
         1 000076   000151 710000 1                  TRA     s:5839
         1 000077   000151 710000 1                  TRA     s:5839
         1 000100   000151 710000 1                  TRA     s:5839
         1 000101   000151 710000 1                  TRA     s:5839
         1 000102   000135 710000 1                  TRA     s:5828
         1 000103   000151 710000 1                  TRA     s:5839
         1 000104   000151 710000 1                  TRA     s:5839
         1 000105   000151 710000 1                  TRA     s:5839
         1 000106   000151 710000 1                  TRA     s:5839
         1 000107   000151 710000 1                  TRA     s:5839
         1 000110   000151 710000 1                  TRA     s:5839
         1 000111   000151 710000 1                  TRA     s:5839
         1 000112   000151 710000 1                  TRA     s:5839
         1 000113   000135 710000 1                  TRA     s:5828
         1 000114   000151 710000 1                  TRA     s:5839
         1 000115   000151 710000 1                  TRA     s:5839
         1 000116   000151 710000 1                  TRA     s:5839
         1 000117   000151 710000 1                  TRA     s:5839
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:68   
         1 000120   000151 710000 1                  TRA     s:5839
         1 000121   000151 710000 1                  TRA     s:5839
         1 000122   000151 710000 1                  TRA     s:5839
         1 000123   000151 710000 1                  TRA     s:5839
         1 000124   000151 710000 1                  TRA     s:5839
         1 000125   000151 710000 1                  TRA     s:5839
         1 000126   000135 710000 1                  TRA     s:5828
         1 000127   000151 710000 1                  TRA     s:5839
         1 000130   000151 710000 1                  TRA     s:5839
         1 000131   000135 710000 1                  TRA     s:5828
         1 000132   000143 710000 1                  TRA     s:5831
         1 000133   000151 710000 1                  TRA     s:5839
         1 000134   000135 710000 1                  TRA     s:5828

      241     5825    3             CASE(%PDTA_DATATYPE, %PDLA_DATATYPE, %PDNS_DATATYPE,

      242     5826    3                  %PDFLT_DATATYPE, %PDLE_DATATYPE, %PDTE_DATATYPE,
      243     5827    3                  %DATE_DATATYPE, %TIME_DATATYPE);
      244     5828    3                SIZE=(SIZE+1)/2;

   5828  1 000135   200037 471500                    LDP1    @SIZE,,AUTO
         1 000136   100000 236100                    LDQ     0,,PR1
         1 000137   000001 036007                    ADLQ    1,DL
         1 000140   000002 506007                    DIV     2,DL
         1 000141   100000 756100                    STQ     0,,PR1
         1 000142   000151 710000 1                  TRA     s:5839

      245     5829
      246     5830    3             CASE(%SBIN_DATATYPE, %UBIN_DATATYPE, %UTS_DATATYPE);

      247     5831    3                SIZE=(SIZE+8)/9;

   5831  1 000143   200037 471500                    LDP1    @SIZE,,AUTO
         1 000144   100000 236100                    LDQ     0,,PR1
         1 000145   000010 036007                    ADLQ    8,DL
         1 000146   000011 506007                    DIV     9,DL
         1 000147   100000 756100                    STQ     0,,PR1
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:69   
         1 000150   000151 710000 1                  TRA     s:5839

      248     5832
      249     5833    3             CASE(ELSE);

      250     5834                     /* Char, SFLT, DFLT, UDNS, UDLS, UDTS, UDLO, UDTO, and
      251     5835                        UDFLT are already sized in bytes.                */
      252     5836
      253     5837    3          END;  /* CASE */

      254     5838
      255     5839    2          RETURN;

   5839  1 000151   200036 221300                    LDX1  ! NEW_NAVX+1,,AUTO
         1 000152   000001 702211                    TSX2  ! 1,X1

      256     5840    2          END ADJUST;
      257     5841               %EJECT;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:70   
      258     5842        /*I*     NAME:     CHECK
      259     5843                 PURPOSE:  To check a file for inconsistancies
      260     5844                 DESCRIPTION:
      261     5845                      First, call COUNT_RECS to count the number of records
      262     5846                 in the file.  If there is a TDA, then check that also.
      263     5847
      264     5848                      If the file has alternate indexes, then check out the
      265     5849                 upper levels of the alternate indexes as well.
      266     5850
      267     5851                      During the check out process, any time we run across
      268     5852                 a DA, we check it against UGRANS.  UGRANS will have a
      269     5853                 running value of the largest disk address we've seen as
      270     5854                 we've accessed this file.
      271     5855
      272     5856                      Log an error depending on whether or not UGRANS seems
      273     5857                 to be valid.
      274     5858        */
      275     5859                 %EJECT;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:71   
      276     5860    1   CHECK: PROC;

   5860  1 000153   200026 741300       CHECK        STX1  ! LEN+2,,AUTO

      277     5861    2          DCL I SBIN;
      278     5862        /* */
      279     5863    2          CALL COUNT_RECS;

   5863  1 000154   001107 701000 1                  TSX1    COUNT_RECS
         1 000155   000000 011000                    NOP     0

      280     5864
      281     5865    2          IF F$DCB.TDA ~= 0 THEN

   5865  1 000156   200003 470500                    LDP0    JDCB$,,AUTO
         1 000157   000070 236100                    LDQ     56,,PR0
         1 000160   000032 316000 xsym               CANQ    B_VECTNIL+26
         1 000161   000202 600000 1                  TZE     s:5874

      282     5866    3             DO;   /* CHECK TDA */

      283     5867    3             TDA=F$DCB.TDA;

   5867  1 000162   000070 236100                    LDQ     56,,PR0
         1 000163   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000164   200014 756100                    STQ     TDA,,AUTO

      284     5868    3             TDALVL=F$DCB.TDALVL;

   5868  1 000165   000067 236100                    LDQ     55,,PR0
         1 000166   000041 772000                    QRL     33
         1 000167   200015 756100                    STQ     TDALVL,,AUTO

      285     5869    3             CALL CHECK_TDA;

   5869  1 000170   000477 701000 1                  TSX1    CHECK_TDA
         1 000171   000000 011000                    NOP     0
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:72   

      286     5870    3             F$DCB.TDA=TDA;

   5870  1 000172   200003 470500                    LDP0    JDCB$,,AUTO
         1 000173   200014 236100                    LDQ     TDA,,AUTO
         1 000174   000070 552134                    STBQ    56,'34'O,PR0

      287     5871    3             F$DCB.TDALVL=TDALVL;

   5871  1 000175   200015 236100                    LDQ     TDALVL,,AUTO
         1 000176   000041 736000                    QLS     33
         1 000177   000067 676100                    ERQ     55,,PR0
         1 000200   700000 376003                    ANQ     -32768,DU
         1 000201   000067 656100                    ERSQ    55,,PR0

      288     5872    3             END;  /* CHECK TDA */

      289     5873
      290     5874    2          IF ALTKEY$ ~= ADDR(NIL) THEN

   5874  1 000202   200016 236100                    LDQ     ALTKEY$,,AUTO
         1 000203   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000204   000331 600000 1                  TZE     s:5896

      291     5875    3             DO;   /* CHECK ALTKEYS TDA */

      292     5876    3             IF F$DCB.ORG = %INDEXED# THEN

   5876  1 000205   000032 236100                    LDQ     26,,PR0
         1 000206   777000 376003                    ANQ     -512,DU
         1 000207   006000 116003                    CMPQ    3072,DU
         1 000210   000264 601000 1                  TNZ     s:5886

      293     5877    4                DO I=1 TO ALTKEYS.NUMENTS-1;

   5877  1 000211   000001 235007                    LDA     1,DL
         1 000212   200027 755100                    STA     I,,AUTO
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:73   
         1 000213   000255 710000 1                  TRA     s:5884+1

      294     5878    4                   TDA=ALTKEYS.K.TDA(I);

   5878  1 000214   200027 236100                    LDQ     I,,AUTO
         1 000215   000006 402007                    MPY     6,DL
         1 000216   200016 470500                    LDP0    ALTKEY$,,AUTO
         1 000217   000002 235106                    LDA     2,QL,PR0
         1 000220   000003 236106                    LDQ     3,QL,PR0
         1 000221   000022 773000                    LRL     18
         1 000222   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000223   200014 756100                    STQ     TDA,,AUTO

      295     5879    4                   TDALVL=ALTKEYS.K.TDALVL(I);

   5879  1 000224   200027 236100                    LDQ     I,,AUTO
         1 000225   000006 402007                    MPY     6,DL
         1 000226   000004 236106                    LDQ     4,QL,PR0
         1 000227   000033 772000                    QRL     27
         1 000230   200015 756100                    STQ     TDALVL,,AUTO

      296     5880    4                   IF TDA > 0 THEN

   5880  1 000231   200014 235100                    LDA     TDA,,AUTO
         1 000232   000235 600000 1                  TZE     s:5882

      297     5881    4                      CALL CHECK_TDA;

   5881  1 000233   000477 701000 1                  TSX1    CHECK_TDA
         1 000234   000000 011000                    NOP     0

      298     5882    4                   ALTKEYS.K.TDA(I)=TDA;

   5882  1 000235   200027 236100                    LDQ     I,,AUTO
         1 000236   000006 402007                    MPY     6,DL
         1 000237   200016 470500                    LDP0    ALTKEY$,,AUTO
         1 000240   000002 736000                    QLS     2
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:74   
         1 000241   000106 101500                    MRL     fill='000'O
         1 000242   200014 000004                    ADSC9   TDA,,AUTO                cn=0,n=4
         1 000243   000002 600003                    ADSC9   2,Q,PR0                  cn=3,n=3

      299     5883    4                   ALTKEYS.K.TDALVL(I)=TDALVL;

   5883  1 000244   200027 236100                    LDQ     I,,AUTO
         1 000245   000006 402007                    MPY     6,DL
         1 000246   000000 620006                    EAX0    0,QL
         1 000247   200015 236100                    LDQ     TDALVL,,AUTO
         1 000250   000033 736000                    QLS     27
         1 000251   000004 676110                    ERQ     4,X0,PR0
         1 000252   777000 376003                    ANQ     -512,DU
         1 000253   000004 656110                    ERSQ    4,X0,PR0

      300     5884    4                END;  /* DO I */

   5884  1 000254   200027 054100                    AOS     I,,AUTO
         1 000255   200016 470500                    LDP0    ALTKEY$,,AUTO
         1 000256   000000 236100                    LDQ     0,,PR0
         1 000257   000022 772000                    QRL     18
         1 000260   000377 376007                    ANQ     255,DL
         1 000261   200027 116100                    CMPQ    I,,AUTO
         1 000262   000214 605400 1                  TPNZ    s:5878
         1 000263   000331 710000 1                  TRA     s:5896

      301     5885    3             ELSE
      302     5886    4                DO I=1 TO IRKEYS.NKEYS-1;

   5886  1 000264   000001 235007                    LDA     1,DL
         1 000265   200027 755100                    STA     I,,AUTO
         1 000266   000324 710000 1                  TRA     s:5893+1

      303     5887    4                   TDA=IRKEYS.K.TDA(I);

   5887  1 000267   200027 236100                    LDQ     I,,AUTO
         1 000270   000007 402007                    MPY     7,DL
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:75   
         1 000271   200016 470500                    LDP0    ALTKEY$,,AUTO
         1 000272   000003 236106                    LDQ     3,QL,PR0
         1 000273   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000274   200014 756100                    STQ     TDA,,AUTO

      304     5888    4                   TDALVL=IRKEYS.K.TDALVL(I);

   5888  1 000275   200027 236100                    LDQ     I,,AUTO
         1 000276   000007 402007                    MPY     7,DL
         1 000277   000003 236106                    LDQ     3,QL,PR0
         1 000300   000033 772000                    QRL     27
         1 000301   200015 756100                    STQ     TDALVL,,AUTO

      305     5889    4                   IF TDA > 0 THEN

   5889  1 000302   200014 235100                    LDA     TDA,,AUTO
         1 000303   000306 600000 1                  TZE     s:5891

      306     5890    4                      CALL CHECK_TDA;

   5890  1 000304   000477 701000 1                  TSX1    CHECK_TDA
         1 000305   000000 011000                    NOP     0

      307     5891    4                   IRKEYS.K.TDA(I)=TDA;

   5891  1 000306   200027 236100                    LDQ     I,,AUTO
         1 000307   000007 402007                    MPY     7,DL
         1 000310   200016 470500                    LDP0    ALTKEY$,,AUTO
         1 000311   000000 620006                    EAX0    0,QL
         1 000312   200014 236100                    LDQ     TDA,,AUTO
         1 000313   000003 676110                    ERQ     3,X0,PR0
         1 000314   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000315   000003 656110                    ERSQ    3,X0,PR0

      308     5892    4                   IRKEYS.K.TDALVL(I)=TDALVL;

   5892  1 000316   200015 236100                    LDQ     TDALVL,,AUTO
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:76   
         1 000317   000033 736000                    QLS     27
         1 000320   000003 676110                    ERQ     3,X0,PR0
         1 000321   777000 376003                    ANQ     -512,DU
         1 000322   000003 656110                    ERSQ    3,X0,PR0

      309     5893    4                END;

   5893  1 000323   200027 054100                    AOS     I,,AUTO
         1 000324   200016 470500                    LDP0    ALTKEY$,,AUTO
         1 000325   000000 236100                    LDQ     0,,PR0
         1 000326   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000327   200027 116100                    CMPQ    I,,AUTO
         1 000330   000267 605400 1                  TPNZ    s:5887

      310     5894    3             END;  /* CHECK ALTKEYS TDA */

      311     5895
      312     5896    2          UGRANS=UGRANS-FM_FRZERO+1;

   5896  1 000331   200010 236100                    LDQ     UGRANS,,AUTO
         1 000332   000000 136000 xsym               SBLQ    FM_FRZERO
         1 000333   000001 036007                    ADLQ    1,DL
         1 000334   200010 756100                    STQ     UGRANS,,AUTO

      313     5897    2          IF UGRANS > 0 AND UGRANS <= FM$CFU.UGRANS+FM$CFU.NGAVAL THEN

   5897  1 000335   000407 604400 1                  TMOZ    s:5905
         1 000336   200004 470500                    LDP0    CFU$,,AUTO
         1 000337   000007 236100                    LDQ     7,,PR0
         1 000340   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000341   200044 756100                    STQ     LDA+1,,AUTO
         1 000342   000004 236100                    LDQ     4,,PR0
         1 000343   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000344   200044 036100                    ADLQ    LDA+1,,AUTO
         1 000345   000350 604000 1                  TMI     s:5899
         1 000346   200010 116100                    CMPQ    UGRANS,,AUTO
         1 000347   000407 604000 1                  TMI     s:5905
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:77   

      314     5898    3             DO;   /* UGRANS OKAY */

      315     5899    3             CALL FMB$LOGERR(%E$FREC, 70, 0, 0, CFU$, 4, 5, 7, UGRANS);

   5899  1 000350   200010 631500                    EPPR1   UGRANS,,AUTO
         1 000351   200054 451500                    STP1    LDA+9,,AUTO
         1 000352   000004 237000 2                  LDAQ    4
         1 000353   200052 757100                    STAQ    LDA+7,,AUTO
         1 000354   000003 236000 2                  LDQ     3
         1 000355   200051 756100                    STQ     LDA+6,,AUTO
         1 000356   200004 633500                    EPPR3   CFU$,,AUTO
         1 000357   200050 453500                    STP3    LDA+5,,AUTO
         1 000360   000006 237000 2                  LDAQ    6
         1 000361   200046 757100                    STAQ    LDA+3,,AUTO
         1 000362   000010 237000 2                  LDAQ    8
         1 000363   200044 757100                    STAQ    LDA+1,,AUTO
         1 000364   200044 630500                    EPPR0   LDA+1,,AUTO
         1 000365   000000 631400 2                  EPPR1   0
         1 000366   000000 701000 xent               TSX1    FMB$LOGERR
         1 000367   000000 011000                    NOP     0

      316     5900    3             I=FM$CFU.UGRANS-UGRANS;

   5900  1 000370   200004 470500                    LDP0    CFU$,,AUTO
         1 000371   000004 236100                    LDQ     4,,PR0
         1 000372   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000373   200010 136100                    SBLQ    UGRANS,,AUTO
         1 000374   200027 756100                    STQ     I,,AUTO

      317     5901    3             FM$CFU.UGRANS=FM$CFU.UGRANS-I;

   5901  1 000375   000004 236100                    LDQ     4,,PR0
         1 000376   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000377   200027 136100                    SBLQ    I,,AUTO
         1 000400   000004 552134                    STBQ    4,'34'O,PR0

PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:78   
      318     5902    3             FM$CFU.NGAVAL=FM$CFU.NGAVAL+I;

   5902  1 000401   200004 470500                    LDP0    CFU$,,AUTO
         1 000402   000007 236100                    LDQ     7,,PR0
         1 000403   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000404   200027 036100                    ADLQ    I,,AUTO
         1 000405   000007 552134                    STBQ    7,'34'O,PR0

      319     5903    3             END;  /* UGRANS OKAY */

   5903  1 000406   000427 710000 1                  TRA     s:5907

      320     5904    2          ELSE
      321     5905    2             CALL FMB$LOGERR(%E$FREC, 71, 0, 0, CFU$, 4, 5, 7, UGRANS);

   5905  1 000407   200010 630500                    EPPR0   UGRANS,,AUTO
         1 000410   200054 450500                    STP0    LDA+9,,AUTO
         1 000411   000004 237000 2                  LDAQ    4
         1 000412   200052 757100                    STAQ    LDA+7,,AUTO
         1 000413   000003 236000 2                  LDQ     3
         1 000414   200051 756100                    STQ     LDA+6,,AUTO
         1 000415   200004 631500                    EPPR1   CFU$,,AUTO
         1 000416   200050 451500                    STP1    LDA+5,,AUTO
         1 000417   000006 237000 2                  LDAQ    6
         1 000420   200046 757100                    STAQ    LDA+3,,AUTO
         1 000421   000014 237000 2                  LDAQ    12
         1 000422   200044 757100                    STAQ    LDA+1,,AUTO
         1 000423   200044 630500                    EPPR0   LDA+1,,AUTO
         1 000424   000000 631400 2                  EPPR1   0
         1 000425   000000 701000 xent               TSX1    FMB$LOGERR
         1 000426   000000 011000                    NOP     0

      322     5906
      323     5907    2          FM$CFU.LDA=LDA;

   5907  1 000427   200004 470500                    LDP0    CFU$,,AUTO
         1 000430   000100 101500                    MRL     fill='000'O
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:79   
         1 000431   200013 000004                    ADSC9   LDA,,AUTO                cn=0,n=4
         1 000432   000006 400003                    ADSC9   6,,PR0                   cn=2,n=3

      324     5908
      325     5909    2   DONE:  FM$CFU.GDA=ONEGRAN;

   5909  1 000433   200012 236100       DONE         LDQ     ONEGRAN,,AUTO
         1 000434   000005 552134                    STBQ    5,'34'O,PR0

      326     5910    2          FM$CFU.FMOD='1'B;

   5910  1 000435   004000 236003                    LDQ     2048,DU
         1 000436   000000 256100                    ORSQ    0,,PR0

      327     5911    2          IF F$DCB.BFR.DA(2) ~= F$DCB.TDA THEN

   5911  1 000437   200003 470500                    LDP0    JDCB$,,AUTO
         1 000440   000117 236100                    LDQ     79,,PR0
         1 000441   000070 676100                    ERQ     56,,PR0
         1 000442   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000443   000450 600000 1                  TZE     s:5913

      328     5912    2             CALL FMD$FLSHBUF(2);

   5912  1 000444   000013 630400 2                  EPPR0   11
         1 000445   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000446   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 000447   000000 011000                    NOP     0

      329     5913    2          B$JIT.ERR='0'B;

   5913  1 000450   000000 470400 xsym               LDP0    B$JIT$
         1 000451   000012 450100                    STZ     10,,PR0

      330     5914    2          F$DCB.TYC='0'B;

   5914  1 000452   200003 471500                    LDP1    JDCB$,,AUTO
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:80   
         1 000453   100001 450100                    STZ     1,,PR1
         1 000454   100002 450100                    STZ     2,,PR1

      331     5915    2          CALL FMB$LOGERR(%E$FREC, 72, 0, 0, CFU$, 4, 5, 7, ONEGRAN);

   5915  1 000455   200012 633500                    EPPR3   ONEGRAN,,AUTO
         1 000456   200054 453500                    STP3    LDA+9,,AUTO
         1 000457   000004 237000 2                  LDAQ    4
         1 000460   200052 757100                    STAQ    LDA+7,,AUTO
         1 000461   000003 236000 2                  LDQ     3
         1 000462   200051 756100                    STQ     LDA+6,,AUTO
         1 000463   200004 634500                    EPPR4   CFU$,,AUTO
         1 000464   200050 454500                    STP4    LDA+5,,AUTO
         1 000465   000006 237000 2                  LDAQ    6
         1 000466   200046 757100                    STAQ    LDA+3,,AUTO
         1 000467   000020 237000 2                  LDAQ    16
         1 000470   200044 757100                    STAQ    LDA+1,,AUTO
         1 000471   200044 630500                    EPPR0   LDA+1,,AUTO
         1 000472   000000 631400 2                  EPPR1   0
         1 000473   000000 701000 xent               TSX1    FMB$LOGERR
         1 000474   000000 011000                    NOP     0

      332     5916
      333     5917    2          RETURN;

   5917  1 000475   200026 221300                    LDX1  ! LEN+2,,AUTO
         1 000476   000001 702211                    TSX2  ! 1,X1

      334     5918    2          END CHECK;
      335     5919               %EJECT;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:81   
      336     5920        /*I*     NAME:     CHECK_TDA
      337     5921                 PURPOSE:  To check the upper level
      338     5922                 DESCRIPTION:
      339     5923                      Read in the TDA, then BLINK back to the beginning of
      340     5924                 this level.  NXTLVLDA will be the first disk address of
      341     5925                 the next lower level.  Now, flink along this level,
      342     5926                 checking the granules out.  If we haven't hit the bottom
      343     5927                 yet, then continue.
      344     5928        */
      345     5929                 %EJECT;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:82   
      346     5930    1   CHECK_TDA: PROC;

   5930  1 000477   200030 741300       CHECK_TDA    STX1  ! I+1,,AUTO

      347     5931    2          DCL LVL SBIN;
      348     5932    2          DCL LCDA SBIN;
      349     5933    2          DCL NXTLVLDA UBIN;
      350     5934        /* */
      351     5935    2          DA=TDA;

   5935  1 000500   200014 235100                    LDA     TDA,,AUTO
         1 000501   200011 755100                    STA     DA,,AUTO

      352     5936    2          LVL=TDALVL;

   5936  1 000502   200015 236100                    LDQ     TDALVL,,AUTO
         1 000503   200031 756100                    STQ     LVL,,AUTO

      353     5937    2          F$DCB.LVL=LVL;

   5937  1 000504   200003 470500                    LDP0    JDCB$,,AUTO
         1 000505   000036 736000                    QLS     30
         1 000506   000067 676100                    ERQ     55,,PR0
         1 000507   070000 376003                    ANQ     28672,DU
         1 000510   000067 656100                    ERSQ    55,,PR0

      354     5938
      355     5939    3          DO UNTIL (LVL = 0);

      356     5940    3             CALL FMD$REDBUF(BUF$, 2, DA, 0) ALTRET(NOTDA);

   5940  1 000511   000006 236000 2                  LDQ     6
         1 000512   200047 756100                    STQ     LDA+4,,AUTO
         1 000513   200011 630500                    EPPR0   DA,,AUTO
         1 000514   200046 450500                    STP0    LDA+3,,AUTO
         1 000515   000013 236000 2                  LDQ     11
         1 000516   200045 756100                    STQ     LDA+2,,AUTO
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:83   
         1 000517   200005 631500                    EPPR1   BUF$,,AUTO
         1 000520   200044 451500                    STP1    LDA+1,,AUTO
         1 000521   200044 630500                    EPPR0   LDA+1,,AUTO
         1 000522   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000523   000000 701000 xent               TSX1    FMD$REDBUF
         1 000524   000710 702000 1                  TSX2    NOTDA

      357     5941
      358     5942    4             DO WHILE (FM$GRAN.BLINK ~= 0);

   5942  1 000525   200005 470500                    LDP0    BUF$,,AUTO
         1 000526   000003 235100                    LDA     3,,PR0
         1 000527   000560 600000 1                  TZE     s:5948

      359     5943    4                DA=FM$GRAN.BLINK;

   5943  1 000530   200005 470500                    LDP0    BUF$,,AUTO
         1 000531   000003 235100                    LDA     3,,PR0
         1 000532   200011 755100                    STA     DA,,AUTO

      360     5944    4                LCDA=F$DCB.BFR.DA(2);

   5944  1 000533   200003 471500                    LDP1    JDCB$,,AUTO
         1 000534   100117 236100                    LDQ     79,,PR1
         1 000535   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000536   200032 756100                    STQ     LCDA,,AUTO

      361     5945    4                CALL FMD$REDBUF(BUF$, 2, DA, 0, LCDA) ALTRET(NOTDA);

   5945  1 000537   200032 633500                    EPPR3   LCDA,,AUTO
         1 000540   200050 453500                    STP3    LDA+5,,AUTO
         1 000541   000006 236000 2                  LDQ     6
         1 000542   200047 756100                    STQ     LDA+4,,AUTO
         1 000543   200011 634500                    EPPR4   DA,,AUTO
         1 000544   200046 454500                    STP4    LDA+3,,AUTO
         1 000545   000013 236000 2                  LDQ     11
         1 000546   200045 756100                    STQ     LDA+2,,AUTO
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:84   
         1 000547   200005 635500                    EPPR5   BUF$,,AUTO
         1 000550   200044 455500                    STP5    LDA+1,,AUTO
         1 000551   200044 630500                    EPPR0   LDA+1,,AUTO
         1 000552   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 000553   000000 701000 xent               TSX1    FMD$REDBUF
         1 000554   000710 702000 1                  TSX2    NOTDA

      362     5946    4             END;  /* WHILE */

   5946  1 000555   200005 470500                    LDP0    BUF$,,AUTO
         1 000556   000003 235100                    LDA     3,,PR0
         1 000557   000530 601000 1                  TNZ     s:5943

      363     5947
      364     5948    3             IF DA > UGRANS THEN

   5948  1 000560   200011 236100                    LDQ     DA,,AUTO
         1 000561   000564 604000 1                  TMI     s:5949
         1 000562   200010 116100                    CMPQ    UGRANS,,AUTO
         1 000563   000565 604400 1                  TMOZ    s:5951

      365     5949    3                UGRANS=DA;

   5949  1 000564   200010 756100                    STQ     UGRANS,,AUTO

      366     5950
      367     5951    3             KEY$=PINCRW(BUF$, FM$GRAN.FCEX);

   5951  1 000565   000002 220100                    LDX0    2,,PR0
         1 000566   000000 636010                    EAQ     0,X0
         1 000567   200005 036100                    ADLQ    BUF$,,AUTO
         1 000570   200006 756100                    STQ     KEY$,,AUTO

      368     5952    3             KEY$=PINCRW(BUF$, KEY$->FM$KEYTBL(1));

   5952  1 000571   200006 471500                    LDP1    KEY$,,AUTO
         1 000572   100000 220100                    LDX0    0,,PR1
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:85   
         1 000573   000777 360003                    ANX0    511,DU
         1 000574   000000 636010                    EAQ     0,X0
         1 000575   200005 036100                    ADLQ    BUF$,,AUTO
         1 000576   200006 756100                    STQ     KEY$,,AUTO

      369     5953    3             IF F$DCB.ORG = %IREL# THEN

   5953  1 000577   200003 471500                    LDP1    JDCB$,,AUTO
         1 000600   100032 236100                    LDQ     26,,PR1
         1 000601   777000 376003                    ANQ     -512,DU
         1 000602   015000 116003                    CMPQ    6656,DU
         1 000603   000616 601000 1                  TNZ     s:5956

      370     5954    3                SEG$=PINCRW(KEY$, (FM$IRENT.KLB+5)/4);

   5954  1 000604   200006 473500                    LDP3    KEY$,,AUTO
         1 000605   300000 236100                    LDQ     0,,PR3
         1 000606   000022 772000                    QRL     18
         1 000607   377777 376007                    ANQ     131071,DL
         1 000610   000005 036007                    ADLQ    5,DL
         1 000611   000002 772000                    QRL     2
         1 000612   000022 736000                    QLS     18
         1 000613   200006 036100                    ADLQ    KEY$,,AUTO
         1 000614   200007 756100                    STQ     SEG$,,AUTO
         1 000615   000627 710000 1                  TRA     s:5957

      371     5955    3             ELSE
      372     5956    3                SEG$=PINCRW(KEY$, (FM$KEYENT.KLB+4)/4);

   5956  1 000616   200006 473500                    LDP3    KEY$,,AUTO
         1 000617   300000 236100                    LDQ     0,,PR3
         1 000620   000033 772000                    QRL     27
         1 000621   000377 376007                    ANQ     255,DL
         1 000622   000004 036007                    ADLQ    4,DL
         1 000623   000002 772000                    QRL     2
         1 000624   000022 736000                    QLS     18
         1 000625   200006 036100                    ADLQ    KEY$,,AUTO
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:86   
         1 000626   200007 756100                    STQ     SEG$,,AUTO

      373     5957    3             NXTLVLDA=FM$ULSEG.DA;

   5957  1 000627   200007 474500                    LDP4    SEG$,,AUTO
         1 000630   400000 235100                    LDA     0,,PR4
         1 000631   200033 755100                    STA     NXTLVLDA,,AUTO

      374     5958
      375     5959    4             DO WHILE (FM$GRAN.FLINK ~= 0);

   5959  1 000632   000004 235100                    LDA     4,,PR0
         1 000633   000671 600000 1                  TZE     s:5967

      376     5960    4                DA=FM$GRAN.FLINK;

   5960  1 000634   200005 470500                    LDP0    BUF$,,AUTO
         1 000635   000004 235100                    LDA     4,,PR0
         1 000636   200011 755100                    STA     DA,,AUTO

      377     5961    4                LCDA=F$DCB.BFR.DA(2);

   5961  1 000637   200003 471500                    LDP1    JDCB$,,AUTO
         1 000640   100117 236100                    LDQ     79,,PR1
         1 000641   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000642   200032 756100                    STQ     LCDA,,AUTO

      378     5962    4                IF DA > UGRANS THEN

   5962  1 000643   200011 236100                    LDQ     DA,,AUTO
         1 000644   000647 604000 1                  TMI     s:5963
         1 000645   200010 116100                    CMPQ    UGRANS,,AUTO
         1 000646   000650 604400 1                  TMOZ    s:5964

      379     5963    4                   UGRANS=DA;

   5963  1 000647   200010 756100                    STQ     UGRANS,,AUTO
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:87   

      380     5964    4                CALL FMD$REDBUF(BUF$, 2, DA, 0, LCDA) ALTRET(NOTDA);

   5964  1 000650   200032 633500                    EPPR3   LCDA,,AUTO
         1 000651   200050 453500                    STP3    LDA+5,,AUTO
         1 000652   000006 236000 2                  LDQ     6
         1 000653   200047 756100                    STQ     LDA+4,,AUTO
         1 000654   200011 634500                    EPPR4   DA,,AUTO
         1 000655   200046 454500                    STP4    LDA+3,,AUTO
         1 000656   000013 236000 2                  LDQ     11
         1 000657   200045 756100                    STQ     LDA+2,,AUTO
         1 000660   200005 635500                    EPPR5   BUF$,,AUTO
         1 000661   200044 455500                    STP5    LDA+1,,AUTO
         1 000662   200044 630500                    EPPR0   LDA+1,,AUTO
         1 000663   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 000664   000000 701000 xent               TSX1    FMD$REDBUF
         1 000665   000710 702000 1                  TSX2    NOTDA

      381     5965    4             END;  /* WHILE */

   5965  1 000666   200005 470500                    LDP0    BUF$,,AUTO
         1 000667   000004 235100                    LDA     4,,PR0
         1 000670   000634 601000 1                  TNZ     s:5960

      382     5966
      383     5967    3             LVL=LVL-1;

   5967  1 000671   000001 336007                    LCQ     1,DL
         1 000672   200031 056100                    ASQ     LVL,,AUTO

      384     5968    3             IF LVL > 0 THEN

   5968  1 000673   000704 604400 1                  TMOZ    s:5973

      385     5969    4                DO;   /* NEXT LVL */

      386     5970    4                DA=NXTLVLDA;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:88   

   5970  1 000674   200033 235100                    LDA     NXTLVLDA,,AUTO
         1 000675   200011 755100                    STA     DA,,AUTO

      387     5971    4                F$DCB.LVL=LVL;

   5971  1 000676   200003 471500                    LDP1    JDCB$,,AUTO
         1 000677   200031 236100                    LDQ     LVL,,AUTO
         1 000700   000036 736000                    QLS     30
         1 000701   100067 676100                    ERQ     55,,PR1
         1 000702   070000 376003                    ANQ     28672,DU
         1 000703   100067 656100                    ERSQ    55,,PR1

      388     5972    4                END;  /* NEXT LVL */

      389     5973    3          END;  /* UNTIL */

   5973  1 000704   200031 235100                    LDA     LVL,,AUTO
         1 000705   000511 601000 1                  TNZ     s:5940

      390     5974
      391     5975    2          RETURN;

   5975  1 000706   200030 221300                    LDX1  ! I+1,,AUTO
         1 000707   000001 702211                    TSX2  ! 1,X1

      392     5976    2   NOTDA: TDA=0;

   5976  1 000710   200014 450100       NOTDA        STZ     TDA,,AUTO

      393     5977    2          TDALVL=0;

   5977  1 000711   200015 450100                    STZ     TDALVL,,AUTO

      394     5978    2          RETURN;

   5978  1 000712   200030 221300                    LDX1  ! I+1,,AUTO
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:89   
         1 000713   000001 702211                    TSX2  ! 1,X1

      395     5979    2          END CHECK_TDA;
      396     5980               %EJECT;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:90   
      397     5981        /*I*     NAME:     COUNT_ALTRECS
      398     5982                 PURPOSE:  To count records along an alternate index
      399     5983                 DESCRIPTION:
      400     5984                      Count the records along each of the alternate
      401     5985                 indexes.  First, read in the FDA, and set the counters
      402     5986                 to point to the beginning of the file.  Then, loop
      403     5987                 until we run into errors, or hit the end of the file.
      404     5988                 If the number of record along this index doesn't equal
      405     5989                 the number of records along the primary index, then
      406     5990                 assume that the alternate indexes need rebuilding.
      407     5991        */
      408     5992                 %EJECT;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:91   
      409     5993    1   COUNT_ALTRECS: PROC;

   5993  1 000714   200036 741300       COUNT_ALTRE* STX1  ! NEW_NAVX+1,,AUTO

      410     5994    2          DCL NUMENTS SBIN;
      411     5995    2          DCL I SBIN;
      412     5996    2          DCL NRECS SBIN;
      413     5997    2          DCL FDA UBIN;
      414     5998    2          DCL LDA UBIN;
      415     5999        /* */
      416     6000    2          IF F$DCB.ORG = %INDEXED# THEN

   6000  1 000715   200003 470500                    LDP0    JDCB$,,AUTO
         1 000716   000032 236100                    LDQ     26,,PR0
         1 000717   777000 376003                    ANQ     -512,DU
         1 000720   006000 116003                    CMPQ    3072,DU
         1 000721   000730 601000 1                  TNZ     s:6003

      417     6001    2             NUMENTS=ALTKEYS.NUMENTS;

   6001  1 000722   200016 471500                    LDP1    ALTKEY$,,AUTO
         1 000723   100000 236100                    LDQ     0,,PR1
         1 000724   000022 772000                    QRL     18
         1 000725   000377 376007                    ANQ     255,DL
         1 000726   200037 756100                    STQ     NUMENTS,,AUTO
         1 000727   000734 710000 1                  TRA     s:6005

      418     6002    2          ELSE
      419     6003    2             NUMENTS=IRKEYS.NKEYS;

   6003  1 000730   200016 471500                    LDP1    ALTKEY$,,AUTO
         1 000731   100000 236100                    LDQ     0,,PR1
         1 000732   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000733   200037 756100                    STQ     NUMENTS,,AUTO

      420     6004
      421     6005    3          DO I=1 TO NUMENTS-1;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:92   

   6005  1 000734   000001 235007                    LDA     1,DL
         1 000735   200040 755100                    STA     I,,AUTO
         1 000736   001102 710000 1                  TRA     s:6046+1

      422     6006    3             IF F$DCB.ORG = %INDEXED# THEN

   6006  1 000737   200003 470500                    LDP0    JDCB$,,AUTO
         1 000740   000032 236100                    LDQ     26,,PR0
         1 000741   777000 376003                    ANQ     -512,DU
         1 000742   006000 116003                    CMPQ    3072,DU
         1 000743   000753 601000 1                  TNZ     s:6009

      423     6007    3                FDA=ALTKEYS.K.FDA(I);

   6007  1 000744   200040 236100                    LDQ     I,,AUTO
         1 000745   000006 402007                    MPY     6,DL
         1 000746   200016 471500                    LDP1    ALTKEY$,,AUTO
         1 000747   100001 236106                    LDQ     1,QL,PR1
         1 000750   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000751   200042 756100                    STQ     FDA,,AUTO
         1 000752   000761 710000 1                  TRA     s:6010

      424     6008    3             ELSE
      425     6009    3                FDA=IRKEYS.K.FDA(I);

   6009  1 000753   200040 236100                    LDQ     I,,AUTO
         1 000754   000007 402007                    MPY     7,DL
         1 000755   200016 471500                    LDP1    ALTKEY$,,AUTO
         1 000756   100007 236106                    LDQ     7,QL,PR1
         1 000757   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000760   200042 756100                    STQ     FDA,,AUTO

      426     6010    3             NRECS=0;

   6010  1 000761   200041 450100                    STZ     NRECS,,AUTO

PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:93   
      427     6011
      428     6012    3             F$DCB.LVL=0;

   6012  1 000762   000017 236000 2                  LDQ     15
         1 000763   000067 356100                    ANSQ    55,,PR0

      429     6013    3             CALL FMD$REDBUF(BUF$, 1, FDA, 0, 0) ALTRET(DONE);

   6013  1 000764   000006 236000 2                  LDQ     6
         1 000765   200050 756100                    STQ     LDA+5,,AUTO
         1 000766   200047 756100                    STQ     LDA+4,,AUTO
         1 000767   200042 633500                    EPPR3   FDA,,AUTO
         1 000770   200046 453500                    STP3    LDA+3,,AUTO
         1 000771   000022 236000 2                  LDQ     18
         1 000772   200045 756100                    STQ     LDA+2,,AUTO
         1 000773   200005 634500                    EPPR4   BUF$,,AUTO
         1 000774   200044 454500                    STP4    LDA+1,,AUTO
         1 000775   200044 630500                    EPPR0   LDA+1,,AUTO
         1 000776   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 000777   000000 701000 xent               TSX1    FMD$REDBUF
         1 001000   001024 702000 1                  TSX2    DONE

      430     6014    3             F$DCB.CRECX=0;

   6014  1 001001   000000 220003                    LDX0    0,DU
         1 001002   200003 470500                    LDP0    JDCB$,,AUTO
         1 001003   000067 440100                    SXL0    55,,PR0

      431     6015    3             F$DCB.SEGX=0;

   6015  1 001004   000100 440100                    SXL0    64,,PR0

      432     6016    3             F$DCB.INDX=I+1;

   6016  1 001005   200040 721100                    LXL1    I,,AUTO
         1 001006   000001 622011                    EAX2    1,X1
         1 001007   000077 742100                    STX2    63,,PR0
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:94   

      433     6017
      434     6018    4             DO WHILE('1'B);

      435     6019    4                IF F$DCB.BFR.DA(1) > UGRANS THEN

   6019  1 001010   200003 470500                    LDP0    JDCB$,,AUTO
         1 001011   000116 236100                    LDQ     78,,PR0
         1 001012   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 001013   200010 116100                    CMPQ    UGRANS,,AUTO
         1 001014   001016 604400 1                  TMOZ    s:6021

      436     6020    4                   UGRANS=F$DCB.BFR.DA(1);

   6020  1 001015   200010 756100                    STQ     UGRANS,,AUTO

      437     6021    4                LDA=F$DCB.BFR.DA(1);

   6021  1 001016   200043 756100                    STQ     LDA,,AUTO

      438     6022    4                CALL FMG$NXTREC ALTRET(DONE);

   6022  1 001017   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001020   000000 701000 xent               TSX1    FMG$NXTREC
         1 001021   001024 702000 1                  TSX2    DONE

      439     6023    4                NRECS=NRECS+1;

   6023  1 001022   200041 054100                    AOS     NRECS,,AUTO

      440     6024    4             END;  /* WHILE */

   6024  1 001023   001010 710000 1                  TRA     s:6019

      441     6025
      442     6026    3   DONE:     IF F$DCB.ORG = %INDEXED# THEN

PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:95   
   6026  1 001024   200003 470500       DONE         LDP0    JDCB$,,AUTO
         1 001025   000032 236100                    LDQ     26,,PR0
         1 001026   777000 376003                    ANQ     -512,DU
         1 001027   006000 116003                    CMPQ    3072,DU
         1 001030   001056 601000 1                  TNZ     s:6038

      443     6027    4                DO;   /* INDEXED */

      444     6028    4                ALTKEYS.K.LDA(I)=LDA;

   6028  1 001031   200040 236100                    LDQ     I,,AUTO
         1 001032   000006 402007                    MPY     6,DL
         1 001033   200016 471500                    LDP1    ALTKEY$,,AUTO
         1 001034   000000 620006                    EAX0    0,QL
         1 001035   200043 236100                    LDQ     LDA,,AUTO
         1 001036   000011 736000                    QLS     9
         1 001037   100002 676110                    ERQ     2,X0,PR1
         1 001040   000023 376000 2                  ANQ     19
         1 001041   100002 656110                    ERSQ    2,X0,PR1

      445     6029    4                IF NRECS ~= FM$CFU.NRECS THEN

   6029  1 001042   200004 473500                    LDP3    CFU$,,AUTO
         1 001043   200041 236100                    LDQ     NRECS,,AUTO
         1 001044   300001 116100                    CMPQ    1,,PR3
         1 001045   001101 600000 1                  TZE     s:6046

      446     6030    5                   DO;   /* ASSUME ALTERNATE INDEXES ARE BAD */

      447     6031    5                   ALTKEYS.ALTBLD='1'B;

   6031  1 001046   000400 236003                    LDQ     256,DU
         1 001047   100000 256100                    ORSQ    0,,PR1

      448     6032    5                   IF ALTKEYS.K.UNIQUE(I) THEN

   6032  1 001050   100004 236110                    LDQ     4,X0,PR1
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:96   
         1 001051   000400 316003                    CANQ    256,DU
         1 001052   001101 600000 1                  TZE     s:6046

      449     6033    5                      ALTKEYS.UNIQUEBLD='1'B;

   6033  1 001053   400000 236007                    LDQ     -131072,DL
         1 001054   100000 256100                    ORSQ    0,,PR1

      450     6034    5                   END;  /* ASSUME ALTERNATE INDEXES ARE BAD */

      451     6035    4                END;  /* INDEXED */

   6035  1 001055   001101 710000 1                  TRA     s:6046

      452     6036    3             ELSE
      453     6037    4                DO;   /* IREL */

      454     6038    4                IRKEYS.K.LDA(I)=LDA;

   6038  1 001056   200040 236100                    LDQ     I,,AUTO
         1 001057   000007 402007                    MPY     7,DL
         1 001060   200016 471500                    LDP1    ALTKEY$,,AUTO
         1 001061   000000 620006                    EAX0    0,QL
         1 001062   200043 236100                    LDQ     LDA,,AUTO
         1 001063   100011 676110                    ERQ     9,X0,PR1
         1 001064   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 001065   100011 656110                    ERSQ    9,X0,PR1

      455     6039    4                IF NRECS ~= FM$CFU.NRECS THEN

   6039  1 001066   200004 473500                    LDP3    CFU$,,AUTO
         1 001067   200041 236100                    LDQ     NRECS,,AUTO
         1 001070   300001 116100                    CMPQ    1,,PR3
         1 001071   001101 600000 1                  TZE     s:6046

      456     6040    5                   DO;   /* ASSUME ALTERNATE INDEXES ARE BAD */

PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:97   
      457     6041    5                   IRKEYS.ALTBLD='1'B;

   6041  1 001072   400000 236003                    LDQ     -131072,DU
         1 001073   100002 256100                    ORSQ    2,,PR1

      458     6042    5                   IF IRKEYS.K.UNIQUE(I) THEN

   6042  1 001074   100006 236110                    LDQ     6,X0,PR1
         1 001075   400000 316007                    CANQ    -131072,DL
         1 001076   001101 600000 1                  TZE     s:6046

      459     6043    5                      IRKEYS.UNIQUEBLD='1'B;

   6043  1 001077   200000 236003                    LDQ     65536,DU
         1 001100   100002 256100                    ORSQ    2,,PR1

      460     6044    5                   END;  /* ASSUME ALTERNATE INDEXES ARE BAD */

      461     6045    4                END;  /* IREL */

      462     6046    3          END;  /* DO I */

   6046  1 001101   200040 054100                    AOS     I,,AUTO
         1 001102   200040 236100                    LDQ     I,,AUTO
         1 001103   200037 116100                    CMPQ    NUMENTS,,AUTO
         1 001104   000737 604000 1                  TMI     s:6006

      463     6047
      464     6048    2          RETURN;

   6048  1 001105   200036 221300                    LDX1  ! NEW_NAVX+1,,AUTO
         1 001106   000001 702211                    TSX2  ! 1,X1

      465     6049    2          END COUNT_ALTRECS;
      466     6050               %EJECT;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:98   
      467     6051        /*I*     NAME:     COUNT_RECS
      468     6052                 PURPOSE:  To count the number of records in a file.
      469     6053                 DESCRIPTION:
      470     6054                      Read in file relative 0 and start reading records from
      471     6055                 the beginning of the file.  If a record isn't marked deleted,
      472     6056                 count it as a record.  Then, loop through the record's
      473     6057                 MISEGs.  If a data granule referenced in an MISEG has the
      474     6058                 highest disk address for any data granule found so far, read
      475     6059                 it in to be sure it's OK and to allow its NAVX to be checked
      476     6060                 later if it turns out to be the last data granule added to
      477     6061                 the file.  If the index or data granule was successfully read
      478     6062                 and its disk address is the highest found so far, update
      479     6063                 UGRANS.
      480     6064
      481     6065                      Since we may be checking this file because there was a
      482     6066                 system failure the last time it was open and we didn't make
      483     6067                 it through recovery, it's just possible that the last data
      484     6068                 granule in the file was updated but not written to disk.  If
      485     6069                 its associated index granule did manage to get written, it
      486     6070                 could be that one or more MISEGs point past NAVX on the data
      487     6071                 granule.  That could cause trouble during future attempts to
      488     6072                 update such a record.  Therefore, if this isn't a one granule
      489     6073                 (squeezed) file, we want to be sure that NAVX on the last
      490     6074                 data granule is large enough to contain all the data segments
      491     6075                 it's supposed to.  So, while looping through the MISEGs, keep
      492     6076                 track of the last data granule read so far and compute its
      493     6077                 minimal NAVX.  When we're done, the last data granule
      494     6078                 encountered should still be in buffer 0 as long as we were
      495     6079                 able to read it successfully.  If so, check it and fix up
      496     6080                 NAVX and AVAIL if they're too small.
      497     6081
      498     6082                     Then, if the file has any alternate indexes, count the
      499     6083                 records on each of those to see whether they match the count
      500     6084                 for the primary index.  If not, they need to be rebuilt.
      501     6085        */
      502     6086                 %EJECT;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:99   
      503     6087    1   COUNT_RECS: PROC;

   6087  1 001107   200030 741300       COUNT_RECS   STX1  ! I+1,,AUTO

      504     6088    2          DCL NRECS SBIN;
      505     6089    2          DCL GDA UBIN;
      506     6090    2          DCL GBUF$ PTR;
      507     6091    2          DCL LAST_GDA UBIN;
      508     6092    2          DCL NEW_NAVX UBIN;
      509     6093        /* */
      510     6094    2          NRECS=0;

   6094  1 001110   200031 450100                    STZ     NRECS,,AUTO

      511     6095    2          NEW_NAVX=0;

   6095  1 001111   200035 450100                    STZ     NEW_NAVX,,AUTO

      512     6096    2          F$DCB.RA='0'B;

   6096  1 001112   200003 470500                    LDP0    JDCB$,,AUTO
         1 001113   000024 236000 2                  LDQ     20
         1 001114   000064 356100                    ANSQ    52,,PR0

      513     6097
      514     6098    2          CALL FMD$REDBUF(BUF$, 1, FM_FRZERO, 0, 0) ALTRET(DONE);

   6098  1 001115   000006 236000 2                  LDQ     6
         1 001116   200050 756100                    STQ     LDA+5,,AUTO
         1 001117   000026 237000 2                  LDAQ    22
         1 001120   200046 757100                    STAQ    LDA+3,,AUTO
         1 001121   000022 236000 2                  LDQ     18
         1 001122   200045 756100                    STQ     LDA+2,,AUTO
         1 001123   200005 631500                    EPPR1   BUF$,,AUTO
         1 001124   200044 451500                    STP1    LDA+1,,AUTO
         1 001125   200044 630500                    EPPR0   LDA+1,,AUTO
         1 001126   000023 631400 xsym               EPPR1   B_VECTNIL+19
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:100  
         1 001127   000000 701000 xent               TSX1    FMD$REDBUF
         1 001130   001303 702000 1                  TSX2    DONE

      515     6099    2          UGRANS=FM_FRZERO;

   6099  1 001131   000000 235000 xsym               LDA     FM_FRZERO
         1 001132   200010 755100                    STA     UGRANS,,AUTO

      516     6100    2          LDA=FM_FRZERO;

   6100  1 001133   200013 755100                    STA     LDA,,AUTO

      517     6101    2          LAST_GDA=FM_FRZERO+1;

   6101  1 001134   000001 035007                    ADLA    1,DL
         1 001135   200034 755100                    STA     LAST_GDA,,AUTO

      518     6102
      519     6103    3          DO WHILE ('1'B);

      520     6104    3             CALL FMG$NXTKEY_ORG(SEG$, SEGCNT, KEY$) ALTRET(DONE);

   6104  1 001136   200006 630500                    EPPR0   KEY$,,AUTO
         1 001137   200046 450500                    STP0    LDA+3,,AUTO
         1 001140   200017 631500                    EPPR1   SEGCNT,,AUTO
         1 001141   200045 451500                    STP1    LDA+2,,AUTO
         1 001142   200007 633500                    EPPR3   SEG$,,AUTO
         1 001143   200044 453500                    STP3    LDA+1,,AUTO
         1 001144   200044 630500                    EPPR0   LDA+1,,AUTO
         1 001145   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 001146   000000 701000 xent               TSX1    FMG$NXTKEY_ORG
         1 001147   001303 702000 1                  TSX2    DONE

      521     6105    3             IF NOT FM$KEYENT.D THEN

   6105  1 001150   200006 470500                    LDP0    KEY$,,AUTO
         1 001151   000000 234100                    SZN     0,,PR0
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:101  
         1 001152   001154 604000 1                  TMI     s:6108

      522     6106    3                NRECS=NRECS+1;

   6106  1 001153   200031 054100                    AOS     NRECS,,AUTO

      523     6107
      524     6108    3             IF F$DCB.BFR.DA(1) > UGRANS THEN

   6108  1 001154   200003 471500                    LDP1    JDCB$,,AUTO
         1 001155   100116 236100                    LDQ     78,,PR1
         1 001156   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 001157   200010 116100                    CMPQ    UGRANS,,AUTO
         1 001160   001162 604400 1                  TMOZ    s:6110

      525     6109    3                UGRANS=F$DCB.BFR.DA(1);

   6109  1 001161   200010 756100                    STQ     UGRANS,,AUTO

      526     6110    3             LDA=F$DCB.BFR.DA(1);

   6110  1 001162   200013 756100                    STQ     LDA,,AUTO

      527     6111
      528     6112    4             DO UNTIL (SEG$ = ADDR(NIL));

      529     6113    4                IF FM$MISEG.GDA >= LAST_GDA THEN

   6113  1 001163   200007 470500                    LDP0    SEG$,,AUTO
         1 001164   000001 236100                    LDQ     1,,PR0
         1 001165   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 001166   200034 116100                    CMPQ    LAST_GDA,,AUTO
         1 001167   001265 602000 1                  TNC     s:6130

      530     6114    5                   DO;   /* Check last data granule */

      531     6115    5                   GDA=FM$MISEG.GDA;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:102  

   6115  1 001170   200032 756100                    STQ     GDA,,AUTO

      532     6116    5                   GBUF$=FM$BUF$(F$DCB.BFR.BUFX(0));

   6116  1 001171   200003 471500                    LDP1    JDCB$,,AUTO
         1 001172   100115 236100                    LDQ     77,,PR1
         1 001173   000033 772000                    QRL     27
         1 001174   000037 376007                    ANQ     31,DL
         1 001175   000000 236006 xsym               LDQ     FM$BUF$,QL
         1 001176   200033 756100                    STQ     GBUF$,,AUTO

      533     6117    5                   IF GBUF$=ADDR(NIL) OR F$DCB.BFR.DA(0)~=GDA THEN

   6117  1 001177   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 001200   001205 600000 1                  TZE     s:6119
         1 001201   100115 236100                    LDQ     77,,PR1
         1 001202   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 001203   200032 116100                    CMPQ    GDA,,AUTO
         1 001204   001223 600000 1                  TZE     s:6122

      534     6118    6                      DO;

      535     6119    6                      F$DCB.LVL=7;

   6119  1 001205   070000 236003                    LDQ     28672,DU
         1 001206   100067 256100                    ORSQ    55,,PR1

      536     6120    6                      CALL FMD$REDBUF(GBUF$, 0, GDA, 0, 0) ALTRET(BAD_GRAN);

   6120  1 001207   000006 236000 2                  LDQ     6
         1 001210   200050 756100                    STQ     LDA+5,,AUTO
         1 001211   200047 756100                    STQ     LDA+4,,AUTO
         1 001212   200032 633500                    EPPR3   GDA,,AUTO
         1 001213   200046 453500                    STP3    LDA+3,,AUTO
         1 001214   200045 756100                    STQ     LDA+2,,AUTO
         1 001215   200033 634500                    EPPR4   GBUF$,,AUTO
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:103  
         1 001216   200044 454500                    STP4    LDA+1,,AUTO
         1 001217   200044 630500                    EPPR0   LDA+1,,AUTO
         1 001220   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 001221   000000 701000 xent               TSX1    FMD$REDBUF
         1 001222   001264 702000 1                  TSX2    BAD_GRAN

      537     6121    6                      END;

      538     6122    5                   IF FM$MISEG.GDA > LAST_GDA OR

   6122  1 001223   200007 470500                    LDP0    SEG$,,AUTO
         1 001224   000001 236100                    LDQ     1,,PR0
         1 001225   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 001226   200034 116100                    CMPQ    LAST_GDA,,AUTO
         1 001227   001231 600000 1                  TZE     s:6122+6
         1 001230   001244 603000 1                  TRC     s:6124
         1 001231   000000 236100                    LDQ     0,,PR0
         1 001232   000030 772000                    QRL     24
         1 001233   001777 376007                    ANQ     1023,DL
         1 001234   200044 756100                    STQ     LDA+1,,AUTO
         1 001235   000000 236100                    LDQ     0,,PR0
         1 001236   000014 772000                    QRL     12
         1 001237   001777 376007                    ANQ     1023,DL
         1 001240   200044 036100                    ADLQ    LDA+1,,AUTO
         1 001241   200035 116100                    CMPQ    NEW_NAVX,,AUTO
         1 001242   001255 602000 1                  TNC     s:6125
         1 001243   001255 600000 1                  TZE     s:6125

      539     6123    5                      FM$MISEG.GX+FM$MISEG.GSIZ > NEW_NAVX THEN
      540     6124    5                      NEW_NAVX=FM$MISEG.GX+FM$MISEG.GSIZ;

   6124  1 001244   000000 236100                    LDQ     0,,PR0
         1 001245   000030 772000                    QRL     24
         1 001246   001777 376007                    ANQ     1023,DL
         1 001247   200044 756100                    STQ     LDA+1,,AUTO
         1 001250   000000 236100                    LDQ     0,,PR0
         1 001251   000014 772000                    QRL     12
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:104  
         1 001252   001777 376007                    ANQ     1023,DL
         1 001253   200044 036100                    ADLQ    LDA+1,,AUTO
         1 001254   200035 756100                    STQ     NEW_NAVX,,AUTO

      541     6125    5                   LAST_GDA=FM$MISEG.GDA;

   6125  1 001255   000001 236100                    LDQ     1,,PR0
         1 001256   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 001257   200034 756100                    STQ     LAST_GDA,,AUTO

      542     6126    5                   IF LAST_GDA > UGRANS THEN

   6126  1 001260   001263 604000 1                  TMI     s:6127
         1 001261   200010 116100                    CMPQ    UGRANS,,AUTO
         1 001262   001264 604400 1                  TMOZ    BAD_GRAN

      543     6127    5                      UGRANS=LAST_GDA;

   6127  1 001263   200010 756100                    STQ     UGRANS,,AUTO

      544     6128    5   BAD_GRAN:       END;  /* Check last data granule */

   6128  1 001264   001271 710000 1     BAD_GRAN     TRA     s:6132

      545     6129    4                ELSE
      546     6130    4                   IF FM$MISEG.GDA = FM_FRZERO THEN

   6130  1 001265   000000 116000 xsym               CMPQ    FM_FRZERO
         1 001266   001271 601000 1                  TNZ     s:6132

      547     6131    4                      ONEGRAN=1;

   6131  1 001267   000001 235007                    LDA     1,DL
         1 001270   200012 755100                    STA     ONEGRAN,,AUTO

      548     6132    4                CALL FMG$NXTSEG(SEG$) ALTRET(DONE);

PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:105  
   6132  1 001271   200007 630500                    EPPR0   SEG$,,AUTO
         1 001272   200044 450500                    STP0    LDA+1,,AUTO
         1 001273   200044 630500                    EPPR0   LDA+1,,AUTO
         1 001274   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001275   000000 701000 xent               TSX1    FMG$NXTSEG
         1 001276   001303 702000 1                  TSX2    DONE

      549     6133    4             END;  /* UNTIL */

   6133  1 001277   200007 236100                    LDQ     SEG$,,AUTO
         1 001300   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 001301   001163 601000 1                  TNZ     s:6113

      550     6134    3          END;  /* FOREVER */

   6134  1 001302   001136 710000 1                  TRA     s:6104

   6131  1 001303                       DONE         null
      551     6135
      552     6136    2   DONE:;
      553     6137    2          IF ONEGRAN=0 AND NEW_NAVX > 0 THEN

   6137  1 001303   200012 235100                    LDA     ONEGRAN,,AUTO
         1 001304   001345 601000 1                  TNZ     s:6151
         1 001305   200035 236100                    LDQ     NEW_NAVX,,AUTO
         1 001306   001345 600000 1                  TZE     s:6151

      554     6138    3             DO;   /* Check NAVX on last data granule */

      555     6139    3             GBUF$=FM$BUF$(F$DCB.BFR.BUFX(0));

   6139  1 001307   200003 470500                    LDP0    JDCB$,,AUTO
         1 001310   000115 236100                    LDQ     77,,PR0
         1 001311   000033 772000                    QRL     27
         1 001312   000037 376007                    ANQ     31,DL
         1 001313   000000 236006 xsym               LDQ     FM$BUF$,QL
         1 001314   200033 756100                    STQ     GBUF$,,AUTO
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:106  

      556     6140    3             IF GBUF$ ~= ADDR(NIL) AND F$DCB.BFR.DA(0) = LAST_GDA THEN

   6140  1 001315   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 001316   001345 600000 1                  TZE     s:6151
         1 001317   000115 236100                    LDQ     77,,PR0
         1 001320   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 001321   200034 116100                    CMPQ    LAST_GDA,,AUTO
         1 001322   001345 601000 1                  TNZ     s:6151

      557     6141    4                DO;

      558     6142    4                IF NEW_NAVX <= 1024 AND NEW_NAVX > GBUF$->FM$GRAN.NAVX THEN

   6142  1 001323   200035 235100                    LDA     NEW_NAVX,,AUTO
         1 001324   002001 115007                    CMPA    1025,DL
         1 001325   001345 603000 1                  TRC     s:6151
         1 001326   200033 471500                    LDP1    GBUF$,,AUTO
         1 001327   100001 236100                    LDQ     1,,PR1
         1 001330   000022 772000                    QRL     18
         1 001331   200035 116100                    CMPQ    NEW_NAVX,,AUTO
         1 001332   001345 603000 1                  TRC     s:6151

      559     6143    5                   DO;  /* Fix NAVX */

      560     6144    5                   GBUF$->FM$GRAN.NAVX=NEW_NAVX;

   6144  1 001333   000000 620005                    EAX0    0,AL
         1 001334   100001 740100                    STX0    1,,PR1

      561     6145    5                   GBUF$->FM$GRAN.AVAIL=1024-NEW_NAVX;

   6145  1 001335   200033 471500                    LDP1    GBUF$,,AUTO
         1 001336   002000 236007                    LDQ     1024,DL
         1 001337   200035 136100                    SBLQ    NEW_NAVX,,AUTO
         1 001340   100001 676100                    ERQ     1,,PR1
         1 001341   001777 376007                    ANQ     1023,DL
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:107  
         1 001342   100001 656100                    ERSQ    1,,PR1

      562     6146    5                   F$DCB.BFR.BUFUP(0)='1'B;

   6146  1 001343   400000 236003                    LDQ     -131072,DU
         1 001344   000115 256100                    ORSQ    77,,PR0

      563     6147    5                   END; /* Fix NAVX */

      564     6148    4                END;

      565     6149    3             END;  /* Check NAVX on last data granule */

      566     6150
      567     6151    2          CALL FMD$FLSHBUF(0);

   6151  1 001345   000006 630400 2                  EPPR0   6
         1 001346   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001347   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 001350   000000 011000                    NOP     0

      568     6152    2          FM$CFU.NRECS=NRECS;

   6152  1 001351   200004 470500                    LDP0    CFU$,,AUTO
         1 001352   200031 235100                    LDA     NRECS,,AUTO
         1 001353   000001 755100                    STA     1,,PR0

      569     6153    2          F$DCB.NRECS=NRECS;

   6153  1 001354   200003 470500                    LDP0    JDCB$,,AUTO
         1 001355   000042 755100                    STA     34,,PR0

      570     6154    2          LDA=F$DCB.BFR.DA(1);

   6154  1 001356   000116 236100                    LDQ     78,,PR0
         1 001357   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 001360   200013 756100                    STQ     LDA,,AUTO
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:108  

      571     6155    2          IF ALTKEY$ ~= ADDR(NIL) THEN

   6155  1 001361   200016 236100                    LDQ     ALTKEY$,,AUTO
         1 001362   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 001363   001366 600000 1                  TZE     s:6158

      572     6156    2             CALL COUNT_ALTRECS;

   6156  1 001364   000714 701000 1                  TSX1    COUNT_ALTRECS
         1 001365   000000 011000                    NOP     0

      573     6157
      574     6158    2          IF F$DCB.BFR.DA(1) > UGRANS THEN

   6158  1 001366   200003 470500                    LDP0    JDCB$,,AUTO
         1 001367   000116 236100                    LDQ     78,,PR0
         1 001370   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 001371   200010 116100                    CMPQ    UGRANS,,AUTO
         1 001372   001374 604400 1                  TMOZ    s:6160

      575     6159    2             UGRANS=F$DCB.BFR.DA(1);

   6159  1 001373   200010 756100                    STQ     UGRANS,,AUTO

      576     6160    2          RETURN;

   6160  1 001374   200030 221300                    LDX1  ! I+1,,AUTO
         1 001375   000001 702211                    TSX2  ! 1,X1

      577     6161    2          END COUNT_RECS;
      578     6162               %EJECT;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:109  
      579     6163        /*I*     NAME:     GETGRAN
      580     6164                 PURPOSE:  To obtain and initialize an index granule
      581     6165                 DESCRIPTION:
      582     6166                      Get a granule, then a buffer. Initialize the granule
      583     6167                 to be an index granule.
      584     6168        */
      585     6169                 %EJECT;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:110  
      586     6170    1   GETGRAN: PROC ALTRET;

   6170  1 001376   200036 741300       GETGRAN      STX1  ! NEW_NAVX+1,,AUTO

      587     6171        /* */
      588     6172    2          CALL FMD$FLSHBUF(2);

   6172  1 001377   000013 630400 2                  EPPR0   11
         1 001400   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001401   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 001402   000000 011000                    NOP     0

      589     6173    2          CALL FAF$GETGRAN(DA) ALTRET(ERR);

   6173  1 001403   200011 630500                    EPPR0   DA,,AUTO
         1 001404   200044 450500                    STP0    LDA+1,,AUTO
         1 001405   200044 630500                    EPPR0   LDA+1,,AUTO
         1 001406   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001407   000000 701000 xent               TSX1    FAF$GETGRAN
         1 001410   001477 702000 1                  TSX2    ERR

      590     6174    2          CALL FMD$GETBUF(2, 1, BUF$);

   6174  1 001411   200005 630500                    EPPR0   BUF$,,AUTO
         1 001412   200046 450500                    STP0    LDA+3,,AUTO
         1 001413   000030 237000 2                  LDAQ    24
         1 001414   200044 757100                    STAQ    LDA+1,,AUTO
         1 001415   200044 630500                    EPPR0   LDA+1,,AUTO
         1 001416   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 001417   000000 701000 xent               TSX1    FMD$GETBUF
         1 001420   000000 011000                    NOP     0

      591     6175    2          F$DCB.BFR.DA(2)=DA;

   6175  1 001421   200003 470500                    LDP0    JDCB$,,AUTO
         1 001422   200011 236100                    LDQ     DA,,AUTO
         1 001423   000117 552134                    STBQ    79,'34'O,PR0
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:111  

      592     6176    2          F$DCB.BFR.BUFUP(2)='1'B;

   6176  1 001424   400000 236003                    LDQ     -131072,DU
         1 001425   000117 256100                    ORSQ    79,,PR0

      593     6177    2          F$DCB.BFR.SCRUB(2)='1'B;

   6177  1 001426   200000 236003                    LDQ     65536,DU
         1 001427   000117 256100                    ORSQ    79,,PR0

      594     6178
      595     6179    2          FM$GRAN='0'B;

   6179  1 001430   200005 471500                    LDP1    BUF$,,AUTO
         1 001431   000100 100400                    MLR     fill='000'O
         1 001432   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         1 001433   100000 000024                    ADSC9   0,,PR1                   cn=0,n=20

      596     6180    2          FM$GRAN.STAMP.HASH=F$DCB.HASH;

   6180  1 001434   200005 471500                    LDP1    BUF$,,AUTO
         1 001435   000073 236100                    LDQ     59,,PR0
         1 001436   100000 552170                    STBQ    0,'70'O,PR1

      597     6181    2          FM$GRAN.STAMP.GMOD=DA;

   6181  1 001437   200005 471500                    LDP1    BUF$,,AUTO
         1 001440   200011 236100                    LDQ     DA,,AUTO
         1 001441   100000 552104                    STBQ    0,'04'O,PR1

      598     6182    2          FM$GRAN.NAVX=SIZEW(FM$GRAN)+SIZEW(FM$KEYTBL);

   6182  1 001442   000113 220003                    LDX0    75,DU
         1 001443   200005 471500                    LDP1    BUF$,,AUTO
         1 001444   100001 740100                    STX0    1,,PR1

PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:112  
      599     6183    2          FM$GRAN.HDR='1'B;

   6183  1 001445   200005 471500                    LDP1    BUF$,,AUTO
         1 001446   400000 236007                    LDQ     -131072,DL
         1 001447   100001 256100                    ORSQ    1,,PR1

      600     6184    2          FM$GRAN.ORG=F$DCB.ORG;

   6184  1 001450   200005 471500                    LDP1    BUF$,,AUTO
         1 001451   000032 236100                    LDQ     26,,PR0
         1 001452   000021 772000                    QRL     17
         1 001453   100001 676100                    ERQ     1,,PR1
         1 001454   036000 376007                    ANQ     15360,DL
         1 001455   100001 656100                    ERSQ    1,,PR1

      601     6185    2          FM$GRAN.AVAIL=1024-FM$GRAN.NAVX;

   6185  1 001456   200005 471500                    LDP1    BUF$,,AUTO
         1 001457   100001 236100                    LDQ     1,,PR1
         1 001460   000022 772000                    QRL     18
         1 001461   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 001462   002001 036007                    ADLQ    1025,DL
         1 001463   100001 676100                    ERQ     1,,PR1
         1 001464   001777 376007                    ANQ     1023,DL
         1 001465   100001 656100                    ERSQ    1,,PR1

      602     6186    2          FM$GRAN.FCEX=SIZEW(FM$GRAN);

   6186  1 001466   000005 221003                    LDX1    5,DU
         1 001467   200005 471500                    LDP1    BUF$,,AUTO
         1 001470   100002 741100                    STX1    2,,PR1

      603     6187    2          PINCRW(BUF$, SIZEW(FM$GRAN))->FM$KEYTBL=INITKEYTBL;

   6187  1 001471   200005 471500                    LDP1    BUF$,,AUTO
         1 001472   000100 100400                    MLR     fill='000'O
         1 001473   000000 000001 0                  ADSC9   INITKEYTBL               cn=0,n=1
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:113  
         1 001474   100005 000430                    ADSC9   5,,PR1                   cn=0,n=280

      604     6188    2          RETURN;

   6188  1 001475   200036 221300                    LDX1  ! NEW_NAVX+1,,AUTO
         1 001476   000001 702211                    TSX2  ! 1,X1

      605     6189    2   ERR:   ALTRETURN;

   6189  1 001477   200036 221300       ERR          LDX1  ! NEW_NAVX+1,,AUTO
         1 001500   000000 702211                    TSX2  ! 0,X1

      606     6190    2          END GETGRAN;
      607     6191               %EJECT;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:114  
      608     6192        /*I*     NAME:     SETUP
      609     6193                 PURPOSE:  To set up a DCB for a keyed file
      610     6194                 DESCRIPTION:
      611     6195                      Set up buffer one to contain the first index granule.
      612     6196                 Tell the DCB that this is a file.  If there are any
      613     6197                 alternate indexes and the file was properly closed, then
      614     6198                 set up the alternate indexes.  The default is not load
      615     6199                 mode.  However, if the alternate indexes need to be
      616     6200                 rebuilt, might as well make it load mode.  Set the DCB
      617     6201                 to point to the beginning of the file.
      618     6202        */
      619     6203                 %EJECT;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:115  
      620     6204    1   SETUP: PROC ALTRET;

   6204  1 001501   200026 741300       SETUP        STX1  ! LEN+2,,AUTO

      621     6205        /* */
      622     6206    2          IF F$DCB.BFR.DA(1) ~= FM_FRZERO THEN

   6206  1 001502   200003 470500                    LDP0    JDCB$,,AUTO
         1 001503   000116 236100                    LDQ     78,,PR0
         1 001504   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 001505   000000 116000 xsym               CMPQ    FM_FRZERO
         1 001506   001516 600000 1                  TZE     s:6212

      623     6207    3             DO;   /* SET UP FRZERO */

      624     6208    3             CALL FMD$FLSHBUF(1);

   6208  1 001507   000022 630400 2                  EPPR0   18
         1 001510   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001511   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 001512   000000 011000                    NOP     0

      625     6209    3             F$DCB.BFR.DA(1)=FM_FRZERO;

   6209  1 001513   200003 470500                    LDP0    JDCB$,,AUTO
         1 001514   000000 236000 xsym               LDQ     FM_FRZERO
         1 001515   000116 552134                    STBQ    78,'34'O,PR0

      626     6210    3             END;  /* SET UP FRZERO */

      627     6211
      628     6212    2          F$DCB.GTYP=FMGTFILE;

   6212  1 001516   000064 236100                    LDQ     52,,PR0
         1 001517   000025 376000 2                  ANQ     21
         1 001520   030000 276003                    ORQ     12288,DU
         1 001521   000064 756100                    STQ     52,,PR0
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:116  

      629     6213
      630     6214    2          IF F$DCB.ALTKEYX ~= 0 AND F$DCB.ORG ~= %KEYED# AND

   6214  1 001522   000052 720100                    LXL0    42,,PR0
         1 001523   001602 600000 1                  TZE     s:6235
         1 001524   000032 236100                    LDQ     26,,PR0
         1 001525   777000 376003                    ANQ     -512,DU
         1 001526   002000 116003                    CMPQ    1024,DU
         1 001527   001602 600000 1                  TZE     s:6235
         1 001530   000036 236100                    LDQ     30,,PR0
         1 001531   000777 376007                    ANQ     511,DL
         1 001532   000003 116007                    CMPQ    3,DL
         1 001533   001602 600000 1                  TZE     s:6235

      631     6215    2             F$DCB.ACS ~= %BLOCK# THEN
      632     6216    3             DO;   /* ALTKEYS SETUP */

      633     6217    3             ALTKEY$=PINCRW(B$ROSEG$, F$DCB.ALTKEYX);

   6217  1 001534   000000 636010                    EAQ     0,X0
         1 001535   000000 036000 xsym               ADLQ    B$ROSEG$
         1 001536   200016 756100                    STQ     ALTKEY$,,AUTO

      634     6218    3             IF NOT F$DCB.RA THEN

   6218  1 001537   000064 236100                    LDQ     52,,PR0
         1 001540   020000 316007                    CANQ    8192,DL
         1 001541   001604 601000 1                  TNZ     s:6237

      635     6219    4                DO;   /* SETUP */

      636     6220    4                IF F$DCB.ORG = %INDEXED# THEN

   6220  1 001542   000032 236100                    LDQ     26,,PR0
         1 001543   777000 376003                    ANQ     -512,DU
         1 001544   006000 116003                    CMPQ    3072,DU
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:117  
         1 001545   001551 601000 1                  TNZ     s:6223

      637     6221    4                   CALL SETUP_ALTKEYS;

   6221  1 001546   001634 701000 1                  TSX1    SETUP_ALTKEYS
         1 001547   000000 011000                    NOP     0
         1 001550   001553 710000 1                  TRA     s:6225

      638     6222    4                ELSE
      639     6223    4                   CALL SETUP_IRKEYS;

   6223  1 001551   002022 701000 1                  TSX1    SETUP_IRKEYS
         1 001552   000000 011000                    NOP     0

      640     6224
      641     6225    4                IF FM$CFU.ALTBLD THEN

   6225  1 001553   200004 470500                    LDP0    CFU$,,AUTO
         1 001554   000006 236100                    LDQ     6,,PR0
         1 001555   000004 316003                    CANQ    4,DU
         1 001556   001563 600000 1                  TZE     s:6228

      642     6226    4                   F$DCB.LDFLG='1'B;

   6226  1 001557   200003 471500                    LDP1    JDCB$,,AUTO
         1 001560   200000 236007                    LDQ     65536,DL
         1 001561   100064 256100                    ORSQ    52,,PR1
         1 001562   001604 710000 1                  TRA     s:6237

      643     6227    4                ELSE
      644     6228    4                   IF FM$CFU.SHARE ~= %NONE# THEN

   6228  1 001563   000000 236100                    LDQ     0,,PR0
         1 001564   060000 376003                    ANQ     24576,DU
         1 001565   060000 116003                    CMPQ    24576,DU
         1 001566   001573 600000 1                  TZE     s:6231

PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:118  
      645     6229    4                      F$DCB.LDFLG='0'B;

   6229  1 001567   200003 471500                    LDP1    JDCB$,,AUTO
         1 001570   000032 236000 2                  LDQ     26
         1 001571   100064 356100                    ANSQ    52,,PR1
         1 001572   001604 710000 1                  TRA     s:6237

      646     6230    4                   ELSE
      647     6231    4                      F$DCB.LDFLG=F$DCB.LOAD;

   6231  1 001573   200003 471500                    LDP1    JDCB$,,AUTO
         1 001574   100031 236100                    LDQ     25,,PR1
         1 001575   000020 772000                    QRL     16
         1 001576   100064 676100                    ERQ     52,,PR1
         1 001577   200000 376007                    ANQ     65536,DL
         1 001600   100064 656100                    ERSQ    52,,PR1

      648     6232    4                END;  /* SETUP */

      649     6233    3             END;  /* ALTKEYS SETUP */

   6233  1 001601   001604 710000 1                  TRA     s:6237

      650     6234    2          ELSE
      651     6235    2             ALTKEY$=ADDR(NIL);

   6235  1 001602   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 001603   200016 756100                    STQ     ALTKEY$,,AUTO

      652     6236
      653     6237    2          IF F$DCB.BFR.BUFX(2) ~= 0 THEN

   6237  1 001604   200003 470500                    LDP0    JDCB$,,AUTO
         1 001605   000117 236100                    LDQ     79,,PR0
         1 001606   037000 316003                    CANQ    15872,DU
         1 001607   001614 600000 1                  TZE     s:6240

PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:119  
      654     6238    2             CALL FMD$FLSHBUF(2);

   6238  1 001610   000013 630400 2                  EPPR0   11
         1 001611   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001612   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 001613   000000 011000                    NOP     0

      655     6239
      656     6240    2          F$DCB.BFR.DA(2)=F$DCB.TDA;

   6240  1 001614   200003 470500                    LDP0    JDCB$,,AUTO
         1 001615   000070 236100                    LDQ     56,,PR0
         1 001616   000117 552134                    STBQ    79,'34'O,PR0

      657     6241    2          F$DCB.CRECX=0;

   6241  1 001617   000000 220003                    LDX0    0,DU
         1 001620   000067 440100                    SXL0    55,,PR0

      658     6242    2          F$DCB.RPOS='0'B;

   6242  1 001621   000033 236000 2                  LDQ     27
         1 001622   000064 356100                    ANSQ    52,,PR0

      659     6243    2          F$DCB.EOP=0;

   6243  1 001623   000034 236000 2                  LDQ     28
         1 001624   000064 356100                    ANSQ    52,,PR0

      660     6244    2          F$DCB.ID='0'B;

   6244  1 001625   000107 450100                    STZ     71,,PR0

      661     6245    2          F$DCB.LVL=0;

   6245  1 001626   000017 236000 2                  LDQ     15
         1 001627   000067 356100                    ANSQ    55,,PR0
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:120  

      662     6246    2          F$DCB.INDX=1;

   6246  1 001630   000001 221003                    LDX1    1,DU
         1 001631   000077 741100                    STX1    63,,PR0

      663     6247
      664     6248    2          RETURN;

   6248  1 001632   200026 221300                    LDX1  ! LEN+2,,AUTO
         1 001633   000001 702211                    TSX2  ! 1,X1

      665     6249    2          END SETUP;
      666     6250               %EJECT;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:121  
      667     6251        /*I*     NAME:     SETUP_ALTKEY
      668     6252                 PURPOSE:  To handle setup of indexed files
      669     6253                 DESCRIPTION:
      670     6254                      Set up entry 0 of the array to be the same as the
      671     6255                 primary index.  Now, loop through the set of indexes.
      672     6256                 Find the key that extends farthest in the record.  This
      673     6257                 will be the minimum record size for this file.  If this
      674     6258                 index doesn't have an FDA, then try to get one.  If
      675     6259                 FM$CFU.XTX=1, then the file was open fun=in, share~=all. In
      676     6260                 that case, the FDA should be non-zero since we opened an
      677     6261                 existing file. If it isn't, it probably means that the
      678     6262                 system went down without going through recovery when the
      679     6263                 file was being created and the FIT didn't get updated.
      680     6264                 However, that type of CFU isn't set up so that we can add
      681     6265                 an extent to it, so don't even try.
      682     6266        */
      683     6267                 %EJECT;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:122  
      684     6268    1   SETUP_ALTKEYS: PROC;

   6268  1 001634   200030 741300       SETUP_ALTKE* STX1  ! I+1,,AUTO

      685     6269    2          DCL I SBIN;
      686     6270        /* */
      687     6271    2          ALTKEYS.K.KEYX(0)=F$DCB.KEYX;

   6271  1 001635   200003 470500                    LDP0    JDCB$,,AUTO
         1 001636   000036 220100                    LDX0    30,,PR0
         1 001637   200016 471500                    LDP1    ALTKEY$,,AUTO
         1 001640   100003 440100                    SXL0    3,,PR1

      688     6272    2          ALTKEYS.K.KEYL(0)=F$DCB.KEYL;

   6272  1 001641   000036 236100                    LDQ     30,,PR0
         1 001642   000022 736000                    QLS     18
         1 001643   100001 552140                    STBQ    1,'40'O,PR1

      689     6273    2          ALTKEYS.K.UNIQUE(0)='1'B;

   6273  1 001644   000400 236003                    LDQ     256,DU
         1 001645   100004 256100                    ORSQ    4,,PR1

      690     6274    2          ALTKEYS.K.FDA(0)=FM_FRZERO;

   6274  1 001646   000000 236000 xsym               LDQ     FM_FRZERO
         1 001647   100001 552134                    STBQ    1,'34'O,PR1

      691     6275    2          ALTKEYS.K.LDA(0)=FM$CFU.LDA;

   6275  1 001650   200004 473500                    LDP3    CFU$,,AUTO
         1 001651   300006 235100                    LDA     6,,PR3
         1 001652   300007 236100                    LDQ     7,,PR3
         1 001653   000033 773000                    LRL     27
         1 001654   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 001655   000011 736000                    QLS     9
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:123  
         1 001656   100002 552170                    STBQ    2,'70'O,PR1

      692     6276    2          ALTKEYS.K.TDA(0)=F$DCB.TDA;

   6276  1 001657   000100 100500                    MLR     fill='000'O
         1 001660   000070 200003                    ADSC9   56,,PR0                  cn=1,n=3
         1 001661   100002 600003                    ADSC9   2,,PR1                   cn=3,n=3

      693     6277    2          ALTKEYS.K.TDALVL(0)=F$DCB.TDALVL;

   6277  1 001662   000067 236100                    LDQ     55,,PR0
         1 001663   700000 376003                    ANQ     -32768,DU
         1 001664   000006 772000                    QRL     6
         1 001665   100004 552140                    STBQ    4,'40'O,PR1

      694     6278
      695     6279    2          ALTKEYS.MINWRSIZ=0;

   6279  1 001666   000000 236003                    LDQ     0,DU
         1 001667   100000 752103                    STCQ    0,'03'O,PR1

      696     6280    3          DO I=0 TO ALTKEYS.NUMENTS-1;

   6280  1 001670   200031 450100                    STZ     I,,AUTO
         1 001671   001776 710000 1                  TRA     NOGRAN+1

      697     6281    3             IF ALTKEYS.K.KEYX(I)+ALTKEYS.K.KEYL(I) > ALTKEYS.MINWRSIZ THEN

   6281  1 001672   200031 236100                    LDQ     I,,AUTO
         1 001673   000006 402007                    MPY     6,DL
         1 001674   200016 470500                    LDP0    ALTKEY$,,AUTO
         1 001675   000001 236106                    LDQ     1,QL,PR0
         1 001676   000033 772000                    QRL     27
         1 001677   200044 756100                    STQ     LDA+1,,AUTO
         1 001700   200031 236100                    LDQ     I,,AUTO
         1 001701   000006 402007                    MPY     6,DL
         1 001702   000003 236106                    LDQ     3,QL,PR0
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:124  
         1 001703   777777 376007                    ANQ     -1,DL
         1 001704   200044 036100                    ADLQ    LDA+1,,AUTO
         1 001705   200045 756100                    STQ     LDA+2,,AUTO
         1 001706   000000 236100                    LDQ     0,,PR0
         1 001707   007777 376007                    ANQ     4095,DL
         1 001710   200045 116100                    CMPQ    LDA+2,,AUTO
         1 001711   001725 603000 1                  TRC     s:6284

      698     6282    3                ALTKEYS.MINWRSIZ=ALTKEYS.K.KEYX(I)+ALTKEYS.K.KEYL(I);

   6282  1 001712   200031 236100                    LDQ     I,,AUTO
         1 001713   000006 402007                    MPY     6,DL
         1 001714   000001 236106                    LDQ     1,QL,PR0
         1 001715   000033 772000                    QRL     27
         1 001716   200044 756100                    STQ     LDA+1,,AUTO
         1 001717   200031 236100                    LDQ     I,,AUTO
         1 001720   000006 402007                    MPY     6,DL
         1 001721   000003 236106                    LDQ     3,QL,PR0
         1 001722   777777 376007                    ANQ     -1,DL
         1 001723   200044 036100                    ADLQ    LDA+1,,AUTO
         1 001724   000000 752103                    STCQ    0,'03'O,PR0

      699     6283
      700     6284    3             ALTKEYS.K.RPOS(I)='0'B;

   6284  1 001725   200031 236100                    LDQ     I,,AUTO
         1 001726   000006 402007                    MPY     6,DL
         1 001727   000000 620006                    EAX0    0,QL
         1 001730   000035 236000 2                  LDQ     29
         1 001731   000004 356110                    ANSQ    4,X0,PR0

      701     6285    3             ALTKEYS.K.INDXCHNG(I)='0'B;

   6285  1 001732   000036 236000 2                  LDQ     30
         1 001733   000004 356110                    ANSQ    4,X0,PR0

      702     6286    3             ALTKEYS.K.CRECX(I)=0;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:125  

   6286  1 001734   000000 221003                    LDX1    0,DU
         1 001735   000005 741110                    STX1    5,X0,PR0

      703     6287    3             ALTKEYS.K.SEGX(I)=0;

   6287  1 001736   000005 441110                    SXL1    5,X0,PR0

      704     6288    3             ALTKEYS.K.CDA(I)=ALTKEYS.K.FDA(I);

   6288  1 001737   000001 236110                    LDQ     1,X0,PR0
         1 001740   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 001741   000006 756110                    STQ     6,X0,PR0

      705     6289
      706     6290    3             IF ALTKEYS.K.FDA(I)=0 AND (FM$CFU.XTX > 1 OR FM$CFU.NGAVAL > 0) THEN

   6290  1 001742   000001 236110                    LDQ     1,X0,PR0
         1 001743   000032 316000 xsym               CANQ    B_VECTNIL+26
         1 001744   001775 601000 1                  TNZ     NOGRAN
         1 001745   200004 471500                    LDP1    CFU$,,AUTO
         1 001746   100003 222100                    LDX2    3,,PR1
         1 001747   000002 102003                    CMPX2   2,DU
         1 001750   001754 603000 1                  TRC     s:6292
         1 001751   100007 236100                    LDQ     7,,PR1
         1 001752   000032 316000 xsym               CANQ    B_VECTNIL+26
         1 001753   001775 600000 1                  TZE     NOGRAN

      707     6291    4                DO;   /* GET A GRAN */

      708     6292    4                CALL GETGRAN ALTRET(NOGRAN);

   6292  1 001754   001376 701000 1                  TSX1    GETGRAN
         1 001755   001775 702000 1                  TSX2    NOGRAN

      709     6293    4                ALTKEYS.K.FDA(I)=DA;

PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:126  
   6293  1 001756   200031 236100                    LDQ     I,,AUTO
         1 001757   000006 402007                    MPY     6,DL
         1 001760   200016 470500                    LDP0    ALTKEY$,,AUTO
         1 001761   000000 620006                    EAX0    0,QL
         1 001762   200011 236100                    LDQ     DA,,AUTO
         1 001763   000001 676110                    ERQ     1,X0,PR0
         1 001764   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 001765   000001 656110                    ERSQ    1,X0,PR0

      710     6294    4                ALTKEYS.K.LDA(I)=DA;

   6294  1 001766   200011 236100                    LDQ     DA,,AUTO
         1 001767   000011 736000                    QLS     9
         1 001770   000002 676110                    ERQ     2,X0,PR0
         1 001771   000023 376000 2                  ANQ     19
         1 001772   000002 656110                    ERSQ    2,X0,PR0

      711     6295    4                ALTKEYS.K.CDA(I)=DA;

   6295  1 001773   200011 235100                    LDA     DA,,AUTO
         1 001774   000006 755110                    STA     6,X0,PR0

      712     6296    4                END;  /* GET A GRAN */

      713     6297    3   NOGRAN:   END;  /* DO I */

   6297  1 001775   200031 054100       NOGRAN       AOS     I,,AUTO
         1 001776   200016 470500                    LDP0    ALTKEY$,,AUTO
         1 001777   000000 236100                    LDQ     0,,PR0
         1 002000   000022 772000                    QRL     18
         1 002001   000377 376007                    ANQ     255,DL
         1 002002   200031 116100                    CMPQ    I,,AUTO
         1 002003   001672 605400 1                  TPNZ    s:6281

      714     6298
      715     6299    2          FM$CFU.ALTBLD=ALTKEYS.ALTBLD;

PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:127  
   6299  1 002004   200004 471500                    LDP1    CFU$,,AUTO
         1 002005   000000 236100                    LDQ     0,,PR0
         1 002006   000006 772000                    QRL     6
         1 002007   100006 676100                    ERQ     6,,PR1
         1 002010   000004 376003                    ANQ     4,DU
         1 002011   100006 656100                    ERSQ    6,,PR1

      716     6300    2          F$DCB.UNIQUEBLD=ALTKEYS.UNIQUEBLD;

   6300  1 002012   200003 473500                    LDP3    JDCB$,,AUTO
         1 002013   000000 236100                    LDQ     0,,PR0
         1 002014   000007 772000                    QRL     7
         1 002015   300103 676100                    ERQ     67,,PR3
         1 002016   002000 376007                    ANQ     1024,DL
         1 002017   300103 656100                    ERSQ    67,,PR3

      717     6301    2          RETURN;

   6301  1 002020   200030 221300                    LDX1  ! I+1,,AUTO
         1 002021   000001 702211                    TSX2  ! 1,X1

      718     6302    2          END SETUP_ALTKEYS;
      719     6303               %EJECT;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:128  
      720     6304        /*I*     NAME:     SETUP_IRKEYS
      721     6305                 PURPOSE:  To handle setup for irel files
      722     6306                 DESCRIPTION:
      723     6307                      Initialize entry 0 of the array to point to the
      724     6308                 primary index.  Next, loop through all of the indexes.
      725     6309                 Loop through all of the fields associated with this key.
      726     6310                 Find the key that extends farthest in the record.  This
      727     6311                 will be the minimum record size.  Also, add up the size
      728     6312                 of this key in bytes.
      729     6313
      730     6314                      If this index doesn't have an FDA, then try to get
      731     6315                 one.  If FM$CFU.XTX=1, the file is open fun=in, share~=all.
      732     6316                 If so, the FDA should already be non-zero since we opened an
      733     6317                 existing file.  If it isn't, it probably means that the
      734     6318                 system went down without going through recovery when the
      735     6319                 file was being created and the FIT wasn't updated.  However,
      736     6320                 this type of CFU isn't set up so that an extent can be added
      737     6321                 to it, so don't even try.
      738     6322        */
      739     6323                 %EJECT;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:129  
      740     6324    1   SETUP_IRKEYS: PROC;

   6324  1 002022   200030 741300       SETUP_IRKEYS STX1  ! I+1,,AUTO

      741     6325    2          DCL I UBIN;
      742     6326    2          DCL J UBIN;
      743     6327    2          DCL START UBIN;
      744     6328    2          DCL SIZE SBIN;
      745     6329        /* */
      746     6330    2          KFIELD$=PINCRW(B$ROSEG$, F$DCB.KFIELDX);

   6330  1 002023   200003 470500                    LDP0    JDCB$,,AUTO
         1 002024   000056 720100                    LXL0    46,,PR0
         1 002025   000000 636010                    EAQ     0,X0
         1 002026   000000 036000 xsym               ADLQ    B$ROSEG$
         1 002027   200020 756100                    STQ     KFIELD$,,AUTO

      747     6331    2          RECFIELD$=PINCRW(B$ROSEG$, F$DCB.FIELDX);

   6331  1 002030   000054 722100                    LXL2    44,,PR0
         1 002031   000000 636012                    EAQ     0,X2
         1 002032   000000 036000 xsym               ADLQ    B$ROSEG$
         1 002033   200021 756100                    STQ     RECFIELD$,,AUTO

      748     6332    2          START$=PINCRW(B$ROSEG$, F$DCB.STARTX);

   6332  1 002034   000057 223100                    LDX3    47,,PR0
         1 002035   000000 636013                    EAQ     0,X3
         1 002036   000000 036000 xsym               ADLQ    B$ROSEG$
         1 002037   200022 756100                    STQ     START$,,AUTO

      749     6333
      750     6334    2          IRKEYS.K.UNIQUE(0)='1'B;

   6334  1 002040   200016 471500                    LDP1    ALTKEY$,,AUTO
         1 002041   400000 236007                    LDQ     -131072,DL
         1 002042   100006 256100                    ORSQ    6,,PR1
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:130  

      751     6335    2          IRKEYS.K.FDA(0)=FM_FRZERO;

   6335  1 002043   000000 236000 xsym               LDQ     FM_FRZERO
         1 002044   100007 552134                    STBQ    7,'34'O,PR1

      752     6336    2          IRKEYS.K.LDA(0)=FM$CFU.LDA;

   6336  1 002045   200004 473500                    LDP3    CFU$,,AUTO
         1 002046   300006 235100                    LDA     6,,PR3
         1 002047   300007 236100                    LDQ     7,,PR3
         1 002050   000033 773000                    LRL     27
         1 002051   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 002052   100011 552134                    STBQ    9,'34'O,PR1

      753     6337    2          IRKEYS.K.TDA(0)=F$DCB.TDA;

   6337  1 002053   000070 236100                    LDQ     56,,PR0
         1 002054   100003 552134                    STBQ    3,'34'O,PR1

      754     6338    2          IRKEYS.K.TDALVL(0)=F$DCB.TDALVL;

   6338  1 002055   000067 236100                    LDQ     55,,PR0
         1 002056   700000 376003                    ANQ     -32768,DU
         1 002057   000006 772000                    QRL     6
         1 002060   100003 552140                    STBQ    3,'40'O,PR1

      755     6339
      756     6340    2          IRKEYS.MINSIZE=0;

   6340  1 002061   100001 450100                    STZ     1,,PR1

      757     6341    3          DO I=0 TO IRKEYS.NKEYS-1;

   6341  1 002062   200031 450100                    STZ     I,,AUTO
         1 002063   002237 710000 1                  TRA     NOGRAN+3

PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:131  
      758     6342    3             IRKEYS.K.KEYL(I)=0;

   6342  1 002064   200031 236100                    LDQ     I,,AUTO
         1 002065   000007 402007                    MPY     7,DL
         1 002066   000000 220003                    LDX0    0,DU
         1 002067   200016 470500                    LDP0    ALTKEY$,,AUTO
         1 002070   000005 740106                    STX0    5,QL,PR0

      759     6343
      760     6344    4             DO J=IRKEYS.K.FIRSTFIELD(I) TO IRKEYS.K.FIRSTFIELD(I)+

   6344  1 002071   000004 236106                    LDQ     4,QL,PR0
         1 002072   000022 772000                    QRL     18
         1 002073   200032 756100                    STQ     J,,AUTO
         1 002074   002145 710000 1                  TRA     s:6355+3

      761     6345    4                                            IRKEYS.K.NFIELDS(I)-1;
      762     6346    4                FN=KFIELD.FIELD(J);

   6346  1 002075   200020 470500                    LDP0    KFIELD$,,AUTO
         1 002076   200032 235100                    LDA     J,,AUTO
         1 002077   000100 101505                    MRL     fill='000'O
         1 002100   000002 000001                    ADSC9   2,A,PR0                  cn=0,n=1
         1 002101   200023 000004                    ADSC9   FN,,AUTO                 cn=0,n=4

      763     6347    4                CALL SET_START(START);

   6347  1 002102   200033 631500                    EPPR1   START,,AUTO
         1 002103   200037 451500                    STP1    NUMENTS,,AUTO
         1 002104   002412 701000 1                  TSX1    SET_START
         1 002105   000000 011000                    NOP     0

      764     6348    4                CALL SET_LEN;

   6348  1 002106   002270 701000 1                  TSX1    SET_LEN
         1 002107   000000 011000                    NOP     0

PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:132  
      765     6349    4                SIZE=START+LEN;

   6349  1 002110   200033 236100                    LDQ     START,,AUTO
         1 002111   200024 036100                    ADLQ    LEN,,AUTO
         1 002112   200034 756100                    STQ     SIZE,,AUTO

      766     6350    4                CALL ADJUST(SIZE);

   6350  1 002113   200034 630500                    EPPR0   SIZE,,AUTO
         1 002114   200037 450500                    STP0    NUMENTS,,AUTO
         1 002115   000025 701000 1                  TSX1    ADJUST
         1 002116   000000 011000                    NOP     0

      767     6351    4                CALL ADJUST(LEN);

   6351  1 002117   200024 630500                    EPPR0   LEN,,AUTO
         1 002120   200037 450500                    STP0    NUMENTS,,AUTO
         1 002121   000025 701000 1                  TSX1    ADJUST
         1 002122   000000 011000                    NOP     0

      768     6352    4                IF SIZE > IRKEYS.MINSIZE THEN

   6352  1 002123   200016 470500                    LDP0    ALTKEY$,,AUTO
         1 002124   000001 236100                    LDQ     1,,PR0
         1 002125   002132 604000 1                  TMI     s:6354
         1 002126   200034 116100                    CMPQ    SIZE,,AUTO
         1 002127   002132 605000 1                  TPL     s:6354

      769     6353    4                   IRKEYS.MINSIZE=SIZE;

   6353  1 002130   200034 235100                    LDA     SIZE,,AUTO
         1 002131   000001 755100                    STA     1,,PR0

      770     6354    4                IRKEYS.K.KEYL(I)=IRKEYS.K.KEYL(I)+LEN;

   6354  1 002132   200031 236100                    LDQ     I,,AUTO
         1 002133   000007 402007                    MPY     7,DL
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:133  
         1 002134   000000 620006                    EAX0    0,QL
         1 002135   000005 236106                    LDQ     5,QL,PR0
         1 002136   000022 772000                    QRL     18
         1 002137   200024 036100                    ADLQ    LEN,,AUTO
         1 002140   000000 621006                    EAX1    0,QL
         1 002141   000005 741110                    STX1    5,X0,PR0

      771     6355    4             END;  /* DO J */

   6355  1 002142   200032 235100                    LDA     J,,AUTO
         1 002143   000001 035007                    ADLA    1,DL
         1 002144   200032 755100                    STA     J,,AUTO
         1 002145   200031 236100                    LDQ     I,,AUTO
         1 002146   000007 402007                    MPY     7,DL
         1 002147   000004 236106                    LDQ     4,QL,PR0
         1 002150   777777 376007                    ANQ     -1,DL
         1 002151   200044 756100                    STQ     LDA+1,,AUTO
         1 002152   200031 236100                    LDQ     I,,AUTO
         1 002153   000007 402007                    MPY     7,DL
         1 002154   000004 236106                    LDQ     4,QL,PR0
         1 002155   000022 772000                    QRL     18
         1 002156   200044 036100                    ADLQ    LDA+1,,AUTO
         1 002157   200032 116100                    CMPQ    J,,AUTO
         1 002160   002162 600000 1                  TZE     s:6357
         1 002161   002075 603000 1                  TRC     s:6346

      772     6356
      773     6357    3             IRKEYS.K.RPOS(I)='0'B;

   6357  1 002162   200031 236100                    LDQ     I,,AUTO
         1 002163   000007 402007                    MPY     7,DL
         1 002164   000000 620006                    EAX0    0,QL
         1 002165   000032 236000 2                  LDQ     26
         1 002166   000006 356110                    ANSQ    6,X0,PR0

      774     6358    3             IRKEYS.K.INDXCHNG(I)='0'B;

PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:134  
   6358  1 002167   000037 236000 2                  LDQ     31
         1 002170   000006 356110                    ANSQ    6,X0,PR0

      775     6359    3             IRKEYS.K.CRECX(I)=0;

   6359  1 002171   000000 221003                    LDX1    0,DU
         1 002172   000006 741110                    STX1    6,X0,PR0

      776     6360    3             IRKEYS.K.SEGX(I)=0;

   6360  1 002173   000005 441110                    SXL1    5,X0,PR0

      777     6361    3             IRKEYS.K.CDA(I)=IRKEYS.K.FDA(I);

   6361  1 002174   000007 236110                    LDQ     7,X0,PR0
         1 002175   000010 676110                    ERQ     8,X0,PR0
         1 002176   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 002177   000010 656110                    ERSQ    8,X0,PR0

      778     6362
      779     6363    3             IF IRKEYS.K.FDA(I)=0 AND (FM$CFU.XTX > 1 OR FM$CFU.NGAVAL > 0) THEN

   6363  1 002200   000007 236110                    LDQ     7,X0,PR0
         1 002201   000032 316000 xsym               CANQ    B_VECTNIL+26
         1 002202   002234 601000 1                  TNZ     NOGRAN
         1 002203   200004 471500                    LDP1    CFU$,,AUTO
         1 002204   100003 222100                    LDX2    3,,PR1
         1 002205   000002 102003                    CMPX2   2,DU
         1 002206   002212 603000 1                  TRC     s:6365
         1 002207   100007 236100                    LDQ     7,,PR1
         1 002210   000032 316000 xsym               CANQ    B_VECTNIL+26
         1 002211   002234 600000 1                  TZE     NOGRAN

      780     6364    4                DO;   /* GET A GRAN */

      781     6365    4                CALL GETGRAN ALTRET(NOGRAN);

PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:135  
   6365  1 002212   001376 701000 1                  TSX1    GETGRAN
         1 002213   002234 702000 1                  TSX2    NOGRAN

      782     6366    4                IRKEYS.K.FDA(I)=DA;

   6366  1 002214   200031 236100                    LDQ     I,,AUTO
         1 002215   000007 402007                    MPY     7,DL
         1 002216   200016 470500                    LDP0    ALTKEY$,,AUTO
         1 002217   000000 620006                    EAX0    0,QL
         1 002220   200011 236100                    LDQ     DA,,AUTO
         1 002221   000007 676110                    ERQ     7,X0,PR0
         1 002222   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 002223   000007 656110                    ERSQ    7,X0,PR0

      783     6367    4                IRKEYS.K.LDA(I)=DA;

   6367  1 002224   200011 236100                    LDQ     DA,,AUTO
         1 002225   000011 676110                    ERQ     9,X0,PR0
         1 002226   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 002227   000011 656110                    ERSQ    9,X0,PR0

      784     6368    4                IRKEYS.K.CDA(I)=DA;

   6368  1 002230   200011 236100                    LDQ     DA,,AUTO
         1 002231   000010 676110                    ERQ     8,X0,PR0
         1 002232   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 002233   000010 656110                    ERSQ    8,X0,PR0

      785     6369    4                END;  /* GET A GRAN */

      786     6370    3   NOGRAN:   END;  /* DO I */

   6370  1 002234   200031 235100       NOGRAN       LDA     I,,AUTO
         1 002235   000001 035007                    ADLA    1,DL
         1 002236   200031 755100                    STA     I,,AUTO
         1 002237   200016 470500                    LDP0    ALTKEY$,,AUTO
         1 002240   000000 236100                    LDQ     0,,PR0
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:136  
         1 002241   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 002242   200031 116100                    CMPQ    I,,AUTO
         1 002243   002245 600000 1                  TZE     s:6372
         1 002244   002064 603000 1                  TRC     s:6342

      787     6371
      788     6372    2          FM$CFU.ALTBLD=IRKEYS.ALTBLD;

   6372  1 002245   200004 471500                    LDP1    CFU$,,AUTO
         1 002246   000002 236100                    LDQ     2,,PR0
         1 002247   000017 772000                    QRL     15
         1 002250   100006 676100                    ERQ     6,,PR1
         1 002251   000004 376003                    ANQ     4,DU
         1 002252   100006 656100                    ERSQ    6,,PR1

      789     6373    2          F$DCB.UNIQUEBLD=IRKEYS.UNIQUEBLD;

   6373  1 002253   200003 473500                    LDP3    JDCB$,,AUTO
         1 002254   000002 236100                    LDQ     2,,PR0
         1 002255   000030 772000                    QRL     24
         1 002256   300103 676100                    ERQ     67,,PR3
         1 002257   002000 376007                    ANQ     1024,DL
         1 002260   300103 656100                    ERSQ    67,,PR3

      790     6374    2          F$DCB.KEYX=0;

   6374  1 002261   000000 220003                    LDX0    0,DU
         1 002262   300036 740100                    STX0    30,,PR3

      791     6375    2          F$DCB.KEYL=IRKEYS.K.KEYL(0);

   6375  1 002263   000005 236100                    LDQ     5,,PR0
         1 002264   000011 772000                    QRL     9
         1 002265   300036 552110                    STBQ    30,'10'O,PR3

      792     6376    2          RETURN;

PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:137  
   6376  1 002266   200030 221300                    LDX1  ! I+1,,AUTO
         1 002267   000001 702211                    TSX2  ! 1,X1

      793     6377    2          END SETUP_IRKEYS;
      794     6378               %EJECT;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:138  
      795     6379        /*I*     NAME:     SET_LEN
      796     6380                 PURPOSE:  To set the length for a field
      797     6381                 DESCRIPTION:
      798     6382                      Because we had to pack this information into a single
      799     6383                 word (blame Doug) the length can be in one of two places.
      800     6384                 If this is a normal data type, then it has the LEN field
      801     6385                 all to itself.  If this is a scaled decimal data type,
      802     6386                 then the field is shared with the scale factor.
      803     6387        */
      804     6388    1   SET_LEN: PROC;

   6388  1 002270   200036 741300       SET_LEN      STX1  ! NEW_NAVX+1,,AUTO

      805     6389        /* */
      806     6390    3          DO CASE(RECFIELD.FIELD.TYPE(FN));

   6390  1 002271   200023 236100                    LDQ     FN,,AUTO
         1 002272   000003 402007                    MPY     3,DL
         1 002273   000000 116003                    CMPQ    0,DU
         1 002274   002276 605000 1                  TPL     s:6390+5
         1 002275   000006 036003                    ADLQ    6,DU
         1 002276   200021 470500                    LDP0    RECFIELD$,,AUTO
         1 002277   000100 101506                    MRL     fill='000'O
         1 002300   000001 020001                    ADSC6   1,Q,PR0                  cn=0,n=1
         1 002301   200044 020006                    ADSC6   LDA+1,,AUTO              cn=0,n=6
         1 002302   200044 236100                    LDQ     LDA+1,,AUTO
         1 002303   000011 136007                    SBLQ    9,DL
         1 002304   000061 116007                    CMPQ    49,DL
         1 002305   002307 602006 1                  TNC     s:6390+14,QL
         1 002306   002401 710000 1                  TRA     s:6403
         1 002307   002370 710000 1                  TRA     s:6398
         1 002310   002370 710000 1                  TRA     s:6398
         1 002311   002401 710000 1                  TRA     s:6403
         1 002312   002401 710000 1                  TRA     s:6403
         1 002313   002401 710000 1                  TRA     s:6403
         1 002314   002401 710000 1                  TRA     s:6403
         1 002315   002401 710000 1                  TRA     s:6403
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:139  
         1 002316   002401 710000 1                  TRA     s:6403
         1 002317   002401 710000 1                  TRA     s:6403
         1 002320   002401 710000 1                  TRA     s:6403
         1 002321   002401 710000 1                  TRA     s:6403
         1 002322   002401 710000 1                  TRA     s:6403
         1 002323   002401 710000 1                  TRA     s:6403
         1 002324   002401 710000 1                  TRA     s:6403
         1 002325   002401 710000 1                  TRA     s:6403
         1 002326   002401 710000 1                  TRA     s:6403
         1 002327   002370 710000 1                  TRA     s:6398
         1 002330   002401 710000 1                  TRA     s:6403
         1 002331   002401 710000 1                  TRA     s:6403
         1 002332   002401 710000 1                  TRA     s:6403
         1 002333   002401 710000 1                  TRA     s:6403
         1 002334   002401 710000 1                  TRA     s:6403
         1 002335   002370 710000 1                  TRA     s:6398
         1 002336   002401 710000 1                  TRA     s:6403
         1 002337   002401 710000 1                  TRA     s:6403
         1 002340   002401 710000 1                  TRA     s:6403
         1 002341   002401 710000 1                  TRA     s:6403
         1 002342   002401 710000 1                  TRA     s:6403
         1 002343   002401 710000 1                  TRA     s:6403
         1 002344   002401 710000 1                  TRA     s:6403
         1 002345   002401 710000 1                  TRA     s:6403
         1 002346   002370 710000 1                  TRA     s:6398
         1 002347   002370 710000 1                  TRA     s:6398
         1 002350   002370 710000 1                  TRA     s:6398
         1 002351   002370 710000 1                  TRA     s:6398
         1 002352   002370 710000 1                  TRA     s:6398
         1 002353   002370 710000 1                  TRA     s:6398
         1 002354   002401 710000 1                  TRA     s:6403
         1 002355   002401 710000 1                  TRA     s:6403
         1 002356   002401 710000 1                  TRA     s:6403
         1 002357   002401 710000 1                  TRA     s:6403
         1 002360   002370 710000 1                  TRA     s:6398
         1 002361   002370 710000 1                  TRA     s:6398
         1 002362   002401 710000 1                  TRA     s:6403
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:140  
         1 002363   002401 710000 1                  TRA     s:6403
         1 002364   002370 710000 1                  TRA     s:6398
         1 002365   002401 710000 1                  TRA     s:6403
         1 002366   002401 710000 1                  TRA     s:6403
         1 002367   002370 710000 1                  TRA     s:6398

      807     6391    3             CASE(%UDLS_DATATYPE, %UDTS_DATATYPE, %UDNS_DATATYPE,

      808     6392    3                  %PDLA_DATATYPE, %PDTA_DATATYPE, %PDNS_DATATYPE,
      809     6393    3                  %UDLO_DATATYPE, %UDTO_DATATYPE, %PDLE_DATATYPE,
      810     6394    3                  %PDTE_DATATYPE, %PDFLT_DATATYPE, %UDFLT_DATATYPE,
      811     6395    3                  %DATE_DATATYPE, %TIME_DATATYPE);
      812     6396                     /* Packed decimal (including DATE and TIME) have length
      813     6397                        in nibbles. Unpacked have length in bytes.        */
      814     6398    3                LEN=RECFIELD.DECFIELD.LEN(FN);

   6398  1 002370   200023 236100                    LDQ     FN,,AUTO
         1 002371   000003 402007                    MPY     3,DL
         1 002372   000000 116003                    CMPQ    0,DU
         1 002373   002375 605000 1                  TPL     s:6398+5
         1 002374   000006 036003                    ADLQ    6,DU
         1 002375   000100 101506                    MRL     fill='000'O
         1 002376   000001 120001                    ADSC6   1,Q,PR0                  cn=1,n=1
         1 002377   200024 020006                    ADSC6   LEN,,AUTO                cn=0,n=6
         1 002400   002411 710000 1                  TRA     s:6406

      815     6399
      816     6400    3             CASE(ELSE);

      817     6401                     /* Types CHAR, SFLT, and DFLT have length in bytes.
      818     6402                        Types UBIN, SBIN, and UTS have length in bits.  */
      819     6403    3                LEN=RECFIELD.FIELD.LEN(FN);

   6403  1 002401   200023 236100                    LDQ     FN,,AUTO
         1 002402   000003 402007                    MPY     3,DL
         1 002403   000000 116003                    CMPQ    0,DU
         1 002404   002406 605000 1                  TPL     s:6403+5
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:141  
         1 002405   000006 036003                    ADLQ    6,DU
         1 002406   000100 101506                    MRL     fill='000'O
         1 002407   000001 120002                    ADSC6   1,Q,PR0                  cn=1,n=2
         1 002410   200024 020006                    ADSC6   LEN,,AUTO                cn=0,n=6

      820     6404
      821     6405    3          END;  /* CASE */

      822     6406    2          RETURN;

   6406  1 002411   000001 702211                    TSX2  ! 1,X1

      823     6407    2          END SET_LEN;
      824     6408        %EJECT;
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:142  
      825     6409        /*I*     NAME:     SET_START
      826     6410                 PURPOSE:  To set a field's starting position in a record.
      827     6411                 DESCRIPTION:
      828     6412                 START is set to the current field's starting position in
      829     6413                 the record.  The starting position of each field is already
      830     6414                 available from FM$FIELD_START, but is in the form of a bit
      831     6415                 offset from the beginning of the record.  So that we can
      832     6416                 use START in conjunction with LEN, we want to change this
      833     6417                 bit offset to either a byte, nibble, or bit offset depending
      834     6418                 upon the data type of the field.
      835     6419        */
      836     6420    1   SET_START: PROC(START);

   6420  1 002412   200036 741300       SET_START    STX1  ! NEW_NAVX+1,,AUTO

      837     6421        /**/
      838     6422    2          DCL START UBIN;
      839     6423        /**/
      840     6424    3          DO CASE(RECFIELD.FIELD.TYPE(FN));

   6424  1 002413   200023 236100                    LDQ     FN,,AUTO
         1 002414   000003 402007                    MPY     3,DL
         1 002415   000000 116003                    CMPQ    0,DU
         1 002416   002420 605000 1                  TPL     s:6424+5
         1 002417   000006 036003                    ADLQ    6,DU
         1 002420   200021 470500                    LDP0    RECFIELD$,,AUTO
         1 002421   000100 101506                    MRL     fill='000'O
         1 002422   000001 020001                    ADSC6   1,Q,PR0                  cn=0,n=1
         1 002423   200044 020003                    ADSC6   LDA+1,,AUTO              cn=0,n=3
         1 002424   200044 220100                    LDX0    LDA+1,,AUTO
         1 002425   000072 100003                    CMPX0   58,DU
         1 002426   002430 602010 1                  TNC     s:6424+13,X0
         1 002427   002554 710000 1                  TRA     s:6440
         1 002430   002554 710000 1                  TRA     s:6440
         1 002431   002522 710000 1                  TRA     s:6427
         1 002432   002554 710000 1                  TRA     s:6440
         1 002433   002554 710000 1                  TRA     s:6440
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:143  
         1 002434   002554 710000 1                  TRA     s:6440
         1 002435   002554 710000 1                  TRA     s:6440
         1 002436   002554 710000 1                  TRA     s:6440
         1 002437   002554 710000 1                  TRA     s:6440
         1 002440   002554 710000 1                  TRA     s:6440
         1 002441   002530 710000 1                  TRA     s:6433
         1 002442   002530 710000 1                  TRA     s:6433
         1 002443   002554 710000 1                  TRA     s:6440
         1 002444   002554 710000 1                  TRA     s:6440
         1 002445   002554 710000 1                  TRA     s:6440
         1 002446   002554 710000 1                  TRA     s:6440
         1 002447   002554 710000 1                  TRA     s:6440
         1 002450   002554 710000 1                  TRA     s:6440
         1 002451   002554 710000 1                  TRA     s:6440
         1 002452   002554 710000 1                  TRA     s:6440
         1 002453   002554 710000 1                  TRA     s:6440
         1 002454   002554 710000 1                  TRA     s:6440
         1 002455   002554 710000 1                  TRA     s:6440
         1 002456   002554 710000 1                  TRA     s:6440
         1 002457   002554 710000 1                  TRA     s:6440
         1 002460   002522 710000 1                  TRA     s:6427
         1 002461   002530 710000 1                  TRA     s:6433
         1 002462   002554 710000 1                  TRA     s:6440
         1 002463   002554 710000 1                  TRA     s:6440
         1 002464   002554 710000 1                  TRA     s:6440
         1 002465   002554 710000 1                  TRA     s:6440
         1 002466   002554 710000 1                  TRA     s:6440
         1 002467   002530 710000 1                  TRA     s:6433
         1 002470   002554 710000 1                  TRA     s:6440
         1 002471   002554 710000 1                  TRA     s:6440
         1 002472   002554 710000 1                  TRA     s:6440
         1 002473   002554 710000 1                  TRA     s:6440
         1 002474   002554 710000 1                  TRA     s:6440
         1 002475   002554 710000 1                  TRA     s:6440
         1 002476   002554 710000 1                  TRA     s:6440
         1 002477   002554 710000 1                  TRA     s:6440
         1 002500   002530 710000 1                  TRA     s:6433
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:144  
         1 002501   002554 710000 1                  TRA     s:6440
         1 002502   002554 710000 1                  TRA     s:6440
         1 002503   002554 710000 1                  TRA     s:6440
         1 002504   002554 710000 1                  TRA     s:6440
         1 002505   002554 710000 1                  TRA     s:6440
         1 002506   002554 710000 1                  TRA     s:6440
         1 002507   002554 710000 1                  TRA     s:6440
         1 002510   002554 710000 1                  TRA     s:6440
         1 002511   002554 710000 1                  TRA     s:6440
         1 002512   002554 710000 1                  TRA     s:6440
         1 002513   002530 710000 1                  TRA     s:6433
         1 002514   002554 710000 1                  TRA     s:6440
         1 002515   002554 710000 1                  TRA     s:6440
         1 002516   002530 710000 1                  TRA     s:6433
         1 002517   002522 710000 1                  TRA     s:6427
         1 002520   002554 710000 1                  TRA     s:6440
         1 002521   002530 710000 1                  TRA     s:6433

      841     6425    3             CASE(%SBIN_DATATYPE, %UBIN_DATATYPE, %UTS_DATATYPE);

      842     6426                     /* Already in bits, so just use it. */
      843     6427    3                START=FIELD_START.OFFSET(FN);

   6427  1 002522   200022 471500                    LDP1    START$,,AUTO
         1 002523   200023 722100                    LXL2    FN,,AUTO
         1 002524   100001 235112                    LDA     1,X2,PR1
         1 002525   200037 473500                    LDP3    @START,,AUTO
         1 002526   300000 755100                    STA     0,,PR3
         1 002527   002562 710000 1                  TRA     s:6444

      844     6428
      845     6429    3             CASE(%PDLA_DATATYPE, %PDTA_DATATYPE, %PDLE_DATATYPE,

      846     6430    3                  %PDTE_DATATYPE, %PDNS_DATATYPE, %PDFLT_DATATYPE,
      847     6431    3                  %DATE_DATATYPE, %TIME_DATATYPE);
      848     6432                     /* Adjust start to nibbles. */
      849     6433    3                IF MOD(FIELD_START.OFFSET(FN),9)=0 THEN
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:145  

   6433  1 002530   200022 471500                    LDP1    START$,,AUTO
         1 002531   200023 722100                    LXL2    FN,,AUTO
         1 002532   100001 236112                    LDQ     1,X2,PR1
         1 002533   000011 506007                    DIV     9,DL
         1 002534   000044 733000                    LRS     36
         1 002535   000000 116003                    CMPQ    0,DU
         1 002536   002545 601000 1                  TNZ     s:6435

      850     6434    3                   START=(FIELD_START.OFFSET(FN)/9)*2;

   6434  1 002537   100001 236112                    LDQ     1,X2,PR1
         1 002540   000011 506007                    DIV     9,DL
         1 002541   000001 736000                    QLS     1
         1 002542   200037 473500                    LDP3    @START,,AUTO
         1 002543   300000 756100                    STQ     0,,PR3
         1 002544   002562 710000 1                  TRA     s:6444

      851     6435    3                ELSE START=(FIELD_START.OFFSET(FN)/9)*2 + 1;

   6435  1 002545   100001 236112                    LDQ     1,X2,PR1
         1 002546   000011 506007                    DIV     9,DL
         1 002547   000001 736000                    QLS     1
         1 002550   000001 036007                    ADLQ    1,DL
         1 002551   200037 473500                    LDP3    @START,,AUTO
         1 002552   300000 756100                    STQ     0,,PR3
         1 002553   002562 710000 1                  TRA     s:6444

      852     6436
      853     6437    3             CASE(ELSE);

      854     6438                     /* Start for types CHAR, SLFT, DFLT, UDNS, UDLS, UDTS,
      855     6439                        UDLO, UDTO, and UDFLT are adjusted to bytes.       */
      856     6440    3                START=FIELD_START.OFFSET(FN)/9;

   6440  1 002554   200022 471500                    LDP1    START$,,AUTO
         1 002555   200023 722100                    LXL2    FN,,AUTO
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:146  
         1 002556   100001 236112                    LDQ     1,X2,PR1
         1 002557   000011 506007                    DIV     9,DL
         1 002560   200037 473500                    LDP3    @START,,AUTO
         1 002561   300000 756100                    STQ     0,,PR3

      857     6441
      858     6442    3             END; /* CASE */

      859     6443
      860     6444    2          RETURN;

   6444  1 002562   200036 221300                    LDX1  ! NEW_NAVX+1,,AUTO
         1 002563   000001 702211                    TSX2  ! 1,X1

INITKEYTBL
 Sect OctLoc
   0     000   430*** ******                                                    ....

(unnamed)
 Sect OctLoc
   2     000   000011 000000   000000 000046   000000 000106   000006 006000    .......&...F....
   2     004   000007 006000   000011 006000   000002 006000   000002 006000    ................
   2     010   000001 006000   000002 006000   000000 000107   000004 006000    ...........G....
   2     014   000001 006000   000012 006000   000000 000110   707777 777777    ...........H....
   2     020   000001 006000   000016 006000   000003 006000   777777 777000    ................
   2     024   777777 757777   743777 777777   000000 006000   000002 006000    ................
   2     030   000004 006000   000003 006000   777777 577777   777777 767777    ................
   2     034   774777 777777   777577 777777   777737 777777   777777 677777    ................
      861     6445    2          END SET_START;
      862     6446    1          END FMG$INIT;
      863     6447               %EOD;

PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:147  
--  Include file information  --

   FM_BUF_R.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   FM_FIELD_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   F$CP6V_C.:E05TOU  is referenced.
   FM$MACROS.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMG$INIT.
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:148  

 **** Variables and constants ****

  ****  Section 000 RoData FMG$INIT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b STRC(9)     r     1 INITKEYTBL

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    37-0-0/w PTR         r     1 @SIZE                     37-0-0/w PTR         r     1 @START
    16-0-0/w PTR         r     1 ALTKEY$                    5-0-0/w PTR         r     1 BUF$
     4-0-0/w PTR         r     1 CFU$                      11-0-0/w UBIN        r     1 DA
    42-0-0/w UBIN        r     1 FDA                       23-0-0/w SBIN        r     1 FN
    33-0-0/w PTR         r     1 GBUF$                     32-0-0/w UBIN        r     1 GDA
    27-0-0/w SBIN        r     1 I                         40-0-0/w SBIN        r     1 I
    31-0-0/w SBIN        r     1 I                         31-0-0/w UBIN        r     1 I
    32-0-0/w UBIN        r     1 J                          3-0-0/w PTR         r     1 JDCB$
     6-0-0/w PTR         r     1 KEY$                      20-0-0/w PTR         r     1 KFIELD$
    34-0-0/w UBIN        r     1 LAST_GDA                  32-0-0/w SBIN        r     1 LCDA
    13-0-0/w UBIN        r     1 LDA                       43-0-0/w UBIN        r     1 LDA
    24-0-0/w SBIN        r     1 LEN                       31-0-0/w SBIN        r     1 LVL
    35-0-0/w UBIN        r     1 NEW_NAVX                  41-0-0/w SBIN        r     1 NRECS
    31-0-0/w SBIN        r     1 NRECS                     37-0-0/w SBIN        r     1 NUMENTS
    33-0-0/w UBIN        r     1 NXTLVLDA                  12-0-0/w UBIN        r     1 ONEGRAN
    21-0-0/w PTR         r     1 RECFIELD$                  7-0-0/w PTR         r     1 SEG$
    17-0-0/w SBIN        r     1 SEGCNT                    *0-0-0/w SBIN        r     1 SIZE
    34-0-0/w SBIN        r     1 SIZE                      33-0-0/w UBIN        r     1 START
    *0-0-0/w UBIN        r     1 START                     22-0-0/w PTR         r     1 START$
    14-0-0/w UBIN        r     1 TDA                       15-0-0/w UBIN        r     1 TDALVL
    10-0-0/w SBIN        r     1 UGRANS

  ****  SYMREF variables  ****
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:149  

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$ROSEG$
     0-0-0/w PTR         r     1 FM$BUF$(0:31)              0-0-0/w SBIN        r     1 FM_FRZERO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(4572)  r     1 ALTKEYS                    0-0-0/d STRC(8856)  r     1 B$JIT
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0/w STRC(72)    r     1 FIELD_START
     0-0-0/w STRC(288)   r     1 FM$CFU                     0-0-0/w STRC(180)   r     1 FM$GRAN
     0-0-0/w ASTR(18)    r     1 FM$IRENT                   0-0-0/w ASTR(9)     r     1 FM$KEYENT
     0-0-0/w UBIN(9)     r     1 FM$KEYTBL(0:279)
     0-0-0/w UBIN        r     1 FM$KT(0:69)                0-0-0/w STRC(72)    r     1 FM$MISEG
     0-0-0/w STRC        r     1 FM$ULSEG                   0-0-0/w STRC(360)   r     1 IRKEYS
     0-0-0/w STRC(81)    r     1 KFIELD                     0-0-0/d STRC(54)    r     1 RECFIELD


   Procedure FMG$INIT requires 1396 words for executable code.
   Procedure FMG$INIT requires 46 words of local(AUTO) storage.
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:150  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:151  
          MINI XREF LISTING

ADJUST
      5821**PROC     6350--CALL     6351--CALL
ALTKEY$
      5787**DCL      5537--IMP-PTR  5543--IMP-PTR  5874>>IF       5877>>DOINDEX  5878>>ASSIGN   5879>>ASSIGN
      5882>>ASSIGN   5883>>ASSIGN   5886>>DOINDEX  5887>>ASSIGN   5888>>ASSIGN   5891>>ASSIGN   5892>>ASSIGN
      6001>>ASSIGN   6003>>ASSIGN   6007>>ASSIGN   6009>>ASSIGN   6028>>ASSIGN   6031>>ASSIGN   6032>>IF
      6033>>ASSIGN   6038>>ASSIGN   6041>>ASSIGN   6042>>IF       6043>>ASSIGN   6155>>IF       6217<<ASSIGN
      6235<<ASSIGN   6271>>ASSIGN   6272>>ASSIGN   6273>>ASSIGN   6274>>ASSIGN   6275>>ASSIGN   6276>>ASSIGN
      6277>>ASSIGN   6279>>ASSIGN   6280>>DOINDEX  6281>>IF       6281>>IF       6281>>IF       6282>>ASSIGN
      6282>>ASSIGN   6282>>ASSIGN   6284>>ASSIGN   6285>>ASSIGN   6286>>ASSIGN   6287>>ASSIGN   6288>>ASSIGN
      6288>>ASSIGN   6290>>IF       6293>>ASSIGN   6294>>ASSIGN   6295>>ASSIGN   6299>>ASSIGN   6300>>ASSIGN
      6334>>ASSIGN   6335>>ASSIGN   6336>>ASSIGN   6337>>ASSIGN   6338>>ASSIGN   6340>>ASSIGN   6341>>DOINDEX
      6342>>ASSIGN   6344>>DOINDEX  6344>>DOINDEX  6344>>DOINDEX  6352>>IF       6353>>ASSIGN   6354>>ASSIGN
      6354>>ASSIGN   6357>>ASSIGN   6358>>ASSIGN   6359>>ASSIGN   6360>>ASSIGN   6361>>ASSIGN   6361>>ASSIGN
      6363>>IF       6366>>ASSIGN   6367>>ASSIGN   6368>>ASSIGN   6372>>ASSIGN   6373>>ASSIGN   6375>>ASSIGN
ALTKEYS.ALTBLD
      5537**DCL      6031<<ASSIGN   6299>>ASSIGN
ALTKEYS.K.CDA
      5539**DCL      6288<<ASSIGN   6295<<ASSIGN
ALTKEYS.K.CRECX
      5539**DCL      6286<<ASSIGN
ALTKEYS.K.FDA
      5538**DCL      6007>>ASSIGN   6274<<ASSIGN   6288>>ASSIGN   6290>>IF       6293<<ASSIGN
ALTKEYS.K.INDXCHNG
      5539**DCL      6285<<ASSIGN
ALTKEYS.K.KEYL
      5538**DCL      6272<<ASSIGN   6281>>IF       6282>>ASSIGN
ALTKEYS.K.KEYX
      5538**DCL      6271<<ASSIGN   6281>>IF       6282>>ASSIGN
ALTKEYS.K.LDA
      5538**DCL      6028<<ASSIGN   6275<<ASSIGN   6294<<ASSIGN
ALTKEYS.K.RPOS
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:152  
      5539**DCL      6284<<ASSIGN
ALTKEYS.K.SEGX
      5539**DCL      6287<<ASSIGN
ALTKEYS.K.TDA
      5538**DCL      5878>>ASSIGN   5882<<ASSIGN   6276<<ASSIGN
ALTKEYS.K.TDALVL
      5538**DCL      5879>>ASSIGN   5883<<ASSIGN   6277<<ASSIGN
ALTKEYS.K.UNIQUE
      5539**DCL      6032>>IF       6273<<ASSIGN
ALTKEYS.MINWRSIZ
      5537**DCL      6279<<ASSIGN   6281>>IF       6282<<ASSIGN
ALTKEYS.NUMENTS
      5537**DCL      5877>>DOINDEX  6001>>ASSIGN   6280>>DOINDEX
ALTKEYS.UNIQUEBLD
      5537**DCL      6033<<ASSIGN   6300>>ASSIGN
B$JIT.CPFLAGS1.SLEAZE
       441**DCL       441--REDEF
B$JIT.DCB$
       515**DCL      5798>>ASSIGN
B$JIT.ERR
       347**DCL      5913<<ASSIGN
B$JIT.ERR.MID
       348**DCL       348--REDEF
B$JIT.JRESPEAK
       509**DCL       510--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       618**DCL       618--REDEF     619--REDEF
B$JIT.PNR
       522**DCL       522--REDEF
B$JIT.TSLINE
       616**DCL       617--REDEF
B$JIT$
      5772**DCL       342--IMP-PTR  5798>>ASSIGN   5913>>ASSIGN
B$ROSEG$
      5773**DCL      6217>>ASSIGN   6330>>ASSIGN   6331>>ASSIGN   6332>>ASSIGN
BAD_GRAN IN PROCEDURE COUNT_RECS
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:153  
      6128**LABEL    6120--CALLALT
BUF$
      5778**DCL      5612--IMP-PTR  5940<>CALL     5942>>DOWHILE  5943>>ASSIGN   5945<>CALL     5951>>ASSIGN
      5951>>ASSIGN   5952>>ASSIGN   5959>>DOWHILE  5960>>ASSIGN   5964<>CALL     6013<>CALL     6098<>CALL
      6174<>CALL     6179>>ASSIGN   6180>>ASSIGN   6181>>ASSIGN   6182>>ASSIGN   6183>>ASSIGN   6184>>ASSIGN
      6185>>ASSIGN   6185>>ASSIGN   6186>>ASSIGN   6187>>ASSIGN
CFU$
      5777**DCL      5632--IMP-PTR  5799<<ASSIGN   5897>>IF       5897>>IF       5899<>CALL     5900>>ASSIGN
      5901>>ASSIGN   5901>>ASSIGN   5902>>ASSIGN   5902>>ASSIGN   5905<>CALL     5907>>ASSIGN   5909>>ASSIGN
      5910>>ASSIGN   5915<>CALL     6029>>IF       6039>>IF       6152>>ASSIGN   6225>>IF       6228>>IF
      6275>>ASSIGN   6290>>IF       6290>>IF       6299>>ASSIGN   6336>>ASSIGN   6363>>IF       6363>>IF
      6372>>ASSIGN
CHECK
      5860**PROC     5806--CALL
CHECK_TDA
      5930**PROC     5869--CALL     5881--CALL     5890--CALL
COUNT_ALTRECS
      5993**PROC     6156--CALL
COUNT_RECS
      6087**PROC     5863--CALL
DA
      5782**DCL      5935<<ASSIGN   5940<>CALL     5943<<ASSIGN   5945<>CALL     5948>>IF       5949>>ASSIGN
      5960<<ASSIGN   5962>>IF       5963>>ASSIGN   5964<>CALL     5970<<ASSIGN   6173<>CALL     6175>>ASSIGN
      6181>>ASSIGN   6293>>ASSIGN   6294>>ASSIGN   6295>>ASSIGN   6366>>ASSIGN   6367>>ASSIGN   6368>>ASSIGN
DONE IN PROCEDURE COUNT_ALTRECS
      6026**LABEL    6013--CALLALT  6022--CALLALT
DONE IN PROCEDURE COUNT_RECS
      6131**LABEL    6098--CALLALT  6104--CALLALT  6132--CALLALT
ERR
      5811**LABEL    5802--CALLALT  5807--CALLALT
ERR IN PROCEDURE GETGRAN
      6189**LABEL    6173--CALLALT
F$DCB.ACS
      5655**DCL      6214>>IF
F$DCB.ACTPOS
      5663**DCL      5663--REDEF
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:154  
F$DCB.ALTKEYX
      5661**DCL      6214>>IF       6217>>ASSIGN
F$DCB.ARS
      5638**DCL      5638--REDEF
F$DCB.ATTR
      5656**DCL      5657--REDEF
F$DCB.BFR.BUFUP
      5682**DCL      6146<<ASSIGN   6176<<ASSIGN
F$DCB.BFR.BUFX
      5683**DCL      6116>>ASSIGN   6139>>ASSIGN   6237>>IF
F$DCB.BFR.DA
      5683**DCL      5911>>IF       5944>>ASSIGN   5961>>ASSIGN   6019>>IF       6020>>ASSIGN   6021>>ASSIGN
      6108>>IF       6109>>ASSIGN   6110>>ASSIGN   6117>>IF       6140>>IF       6154>>ASSIGN   6158>>IF
      6159>>ASSIGN   6175<<ASSIGN   6206>>IF       6209<<ASSIGN   6240<<ASSIGN
F$DCB.BFR.SCRUB
      5682**DCL      6177<<ASSIGN
F$DCB.BORROW
      5671**DCL      5671--REDEF    5671--REDEF    5671--REDEF
F$DCB.CFU$
      5672**DCL      5799>>ASSIGN
F$DCB.CRECX
      5674**DCL      6014<<ASSIGN   6241<<ASSIGN
F$DCB.DCBNAME.L
      5685**DCL      5685--IMP-SIZ
F$DCB.EOMCHAR
      5642**DCL      5642--REDEF
F$DCB.EOP
      5667**DCL      6243<<ASSIGN
F$DCB.FIELDX
      5662**DCL      6331>>ASSIGN
F$DCB.FLDID
      5666**DCL      5666--REDEF
F$DCB.FORM$
      5660**DCL      5660--REDEF
F$DCB.FSECT
      5676**DCL      5676--REDEF
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:155  
F$DCB.FSN
      5653**DCL      5653--REDEF    5653--REDEF    5654--REDEF
F$DCB.GTYP
      5667**DCL      6212<<ASSIGN
F$DCB.HASH
      5675**DCL      6180>>ASSIGN
F$DCB.HEADER$
      5659**DCL      5659--REDEF
F$DCB.ID
      5681**DCL      6244<<ASSIGN
F$DCB.INDX
      5676**DCL      6016<<ASSIGN   6246<<ASSIGN
F$DCB.IXTNSIZE
      5657**DCL      5657--REDEF
F$DCB.KEYL
      5655**DCL      6272>>ASSIGN   6375<<ASSIGN
F$DCB.KEYX
      5654**DCL      6271>>ASSIGN   6374<<ASSIGN
F$DCB.KFIELDX
      5663**DCL      6330>>ASSIGN
F$DCB.LASTSTA$
      5647**DCL      5647--REDEF
F$DCB.LDFLG
      5669**DCL      6226<<ASSIGN   6229<<ASSIGN   6231<<ASSIGN
F$DCB.LOAD
      5649**DCL      6231>>ASSIGN
F$DCB.LVL
      5672**DCL      5672--REDEF    5937<<ASSIGN   5971<<ASSIGN   6012<<ASSIGN   6119<<ASSIGN   6245<<ASSIGN
F$DCB.NAME.C
      5647**DCL      5647--REDEF
F$DCB.NOEOF
      5668**DCL      5668--REDEF
F$DCB.NRECS
      5658**DCL      5658--REDEF    6153<<ASSIGN
F$DCB.NRECX
      5677**DCL      5677--REDEF
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:156  
F$DCB.OHDR
      5669**DCL      5669--REDEF
F$DCB.ORG
      5652**DCL      5652--REDEF    5876>>IF       5953>>IF       6000>>IF       6006>>IF       6026>>IF
      6184>>ASSIGN   6214>>IF       6220>>IF
F$DCB.PRECNO
      5675**DCL      5675--REDEF
F$DCB.RA
      5669**DCL      5804>>IF       6096<<ASSIGN   6218>>IF
F$DCB.RCSZ
      5680**DCL      5680--REDEF
F$DCB.RES
      5648**DCL      5648--REDEF
F$DCB.RPOS
      5669**DCL      6242<<ASSIGN
F$DCB.SEGX
      5677**DCL      6015<<ASSIGN
F$DCB.SETX
      5660**DCL      5660--REDEF
F$DCB.STARTX
      5663**DCL      6332>>ASSIGN
F$DCB.TAB$
      5659**DCL      5660--REDEF
F$DCB.TDA
      5674**DCL      5674--REDEF    5865>>IF       5867>>ASSIGN   5870<<ASSIGN   5911>>IF       6240>>ASSIGN
      6276>>ASSIGN   6337>>ASSIGN
F$DCB.TDALVL
      5672**DCL      5868>>ASSIGN   5871<<ASSIGN   6277>>ASSIGN   6338>>ASSIGN
F$DCB.TYC
      5638**DCL      5914<<ASSIGN
F$DCB.UNIQUEBLD
      5679**DCL      6300<<ASSIGN   6373<<ASSIGN
F$DCB.WSN
      5649**DCL      5649--REDEF
FAF$GETGRAN
      5763**DCL-ENT  6173--CALL
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:157  
FDA IN PROCEDURE COUNT_ALTRECS
      5997**DCL      6007<<ASSIGN   6009<<ASSIGN   6013<>CALL
FIELD_START.OFFSET
      5568**DCL      6427>>ASSIGN   6433>>IF       6434>>ASSIGN   6435>>ASSIGN   6440>>ASSIGN
FM$BUF$
      5534**DCL      6116>>ASSIGN   6139>>ASSIGN
FM$CFU.ACCTX
      5633**DCL      5633--REDEF
FM$CFU.ALTBLD
      5635**DCL      6225>>IF       6299<<ASSIGN   6372<<ASSIGN
FM$CFU.FMOD
      5632**DCL      5910<<ASSIGN
FM$CFU.GDA
      5634**DCL      5909<<ASSIGN
FM$CFU.LDA
      5635**DCL      5907<<ASSIGN   6275>>ASSIGN   6336>>ASSIGN
FM$CFU.NGAVAL
      5635**DCL      5897>>IF       5902<<ASSIGN   5902>>ASSIGN   6290>>IF       6363>>IF
FM$CFU.NRECS
      5633**DCL      6029>>IF       6039>>IF       6152<<ASSIGN
FM$CFU.SHARE
      5632**DCL      6228>>IF
FM$CFU.UGRANS
      5634**DCL      5897>>IF       5900>>ASSIGN   5901<<ASSIGN   5901>>ASSIGN
FM$CFU.XTX
      5634**DCL      6290>>IF       6363>>IF
FM$GRAN
      5612**DCL      6179<<ASSIGN   6182--ASSIGN   6186--ASSIGN   6187--ASSIGN
FM$GRAN.AVAIL
      5613**DCL      6145<<ASSIGN   6185<<ASSIGN
FM$GRAN.BLINK
      5613**DCL      5942>>DOWHILE  5943>>ASSIGN
FM$GRAN.FCEX
      5613**DCL      5951>>ASSIGN   6186<<ASSIGN
FM$GRAN.FLINK
      5613**DCL      5959>>DOWHILE  5960>>ASSIGN
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:158  
FM$GRAN.HDR
      5612**DCL      6183<<ASSIGN
FM$GRAN.NAVX
      5612**DCL      6142>>IF       6144<<ASSIGN   6182<<ASSIGN   6185>>ASSIGN
FM$GRAN.ORG
      5612**DCL      6184<<ASSIGN
FM$GRAN.STAMP.GMOD
      5612**DCL      6181<<ASSIGN
FM$GRAN.STAMP.HASH
      5612**DCL      6180<<ASSIGN
FM$IRENT.KLB
      5619**DCL      5619--IMP-SIZ  5954>>ASSIGN
FM$KEYENT.D
      5616**DCL      6105>>IF
FM$KEYENT.KLB
      5616**DCL      5616--IMP-SIZ  5956>>ASSIGN
FM$KEYTBL
      5626**DCL      5952>>ASSIGN   6182--ASSIGN   6187<<ASSIGN
FM$KT
      5626**DCL      5626--REDEF
FM$MISEG.GDA
      5623**DCL      6113>>IF       6115>>ASSIGN   6122>>IF       6125>>ASSIGN   6130>>IF
FM$MISEG.GSIZ
      5622**DCL      6122>>IF       6124>>ASSIGN
FM$MISEG.GX
      5622**DCL      6122>>IF       6124>>ASSIGN
FM$ULSEG.DA
      5629**DCL      5957>>ASSIGN
FMB$LOGERR
      5764**DCL-ENT  5899--CALL     5905--CALL     5915--CALL
FMD$FLSHBUF
      5766**DCL-ENT  5912--CALL     6151--CALL     6172--CALL     6208--CALL     6238--CALL
FMD$GETBUF
      5765**DCL-ENT  6174--CALL
FMD$REDBUF
      5767**DCL-ENT  5940--CALL     5945--CALL     5964--CALL     6013--CALL     6098--CALL     6120--CALL
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:159  
FMG$NXTKEY_ORG
      5768**DCL-ENT  6104--CALL
FMG$NXTREC
      5770**DCL-ENT  6022--CALL
FMG$NXTSEG
      5769**DCL-ENT  6132--CALL
FM_FRZERO
      5774**DCL      5896>>ASSIGN   6098<>CALL     6099>>ASSIGN   6100>>ASSIGN   6101>>ASSIGN   6130>>IF
      6206>>IF       6209>>ASSIGN   6274>>ASSIGN   6335>>ASSIGN
FN
      5792**DCL      5824>>DOCASE   6346<<ASSIGN   6390>>DOCASE   6398>>ASSIGN   6403>>ASSIGN   6424>>DOCASE
      6427>>ASSIGN   6433>>IF       6434>>ASSIGN   6435>>ASSIGN   6440>>ASSIGN
GBUF$ IN PROCEDURE COUNT_RECS
      6090**DCL      6116<<ASSIGN   6117>>IF       6120<>CALL     6139<<ASSIGN   6140>>IF       6142>>IF
      6144>>ASSIGN   6145>>ASSIGN
GDA IN PROCEDURE COUNT_RECS
      6089**DCL      6115<<ASSIGN   6117>>IF       6120<>CALL
GETGRAN
      6170**PROC     6292--CALL     6365--CALL
I IN PROCEDURE CHECK
      5861**DCL      5877<<DOINDEX  5878>>ASSIGN   5879>>ASSIGN   5882>>ASSIGN   5883>>ASSIGN   5886<<DOINDEX
      5887>>ASSIGN   5888>>ASSIGN   5891>>ASSIGN   5892>>ASSIGN   5900<<ASSIGN   5901>>ASSIGN   5902>>ASSIGN
I IN PROCEDURE COUNT_ALTRECS
      5995**DCL      6005<<DOINDEX  6007>>ASSIGN   6009>>ASSIGN   6016>>ASSIGN   6028>>ASSIGN   6032>>IF
      6038>>ASSIGN   6042>>IF
I IN PROCEDURE SETUP_ALTKEYS
      6269**DCL      6280<<DOINDEX  6281>>IF       6281>>IF       6282>>ASSIGN   6282>>ASSIGN   6284>>ASSIGN
      6285>>ASSIGN   6286>>ASSIGN   6287>>ASSIGN   6288>>ASSIGN   6288>>ASSIGN   6290>>IF       6293>>ASSIGN
      6294>>ASSIGN   6295>>ASSIGN
I IN PROCEDURE SETUP_IRKEYS
      6325**DCL      6341<<DOINDEX  6342>>ASSIGN   6344>>DOINDEX  6344>>DOINDEX  6344>>DOINDEX  6354>>ASSIGN
      6354>>ASSIGN   6357>>ASSIGN   6358>>ASSIGN   6359>>ASSIGN   6360>>ASSIGN   6361>>ASSIGN   6361>>ASSIGN
      6363>>IF       6366>>ASSIGN   6367>>ASSIGN   6368>>ASSIGN
INITKEYTBL
      5795**DCL      6187>>ASSIGN
IRKEYS.ALTBLD
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:160  
      5543**DCL      6041<<ASSIGN   6372>>ASSIGN
IRKEYS.K.CDA
      5546**DCL      6361<<ASSIGN   6368<<ASSIGN
IRKEYS.K.CRECX
      5545**DCL      6359<<ASSIGN
IRKEYS.K.FDA
      5546**DCL      6009>>ASSIGN   6335<<ASSIGN   6361>>ASSIGN   6363>>IF       6366<<ASSIGN
IRKEYS.K.FIRSTFIELD
      5544**DCL      6344>>DOINDEX  6344>>DOINDEX
IRKEYS.K.INDXCHNG
      5545**DCL      6358<<ASSIGN
IRKEYS.K.KEYL
      5544**DCL      6342<<ASSIGN   6354<<ASSIGN   6354>>ASSIGN   6375>>ASSIGN
IRKEYS.K.LDA
      5547**DCL      6038<<ASSIGN   6336<<ASSIGN   6367<<ASSIGN
IRKEYS.K.NFIELDS
      5544**DCL      6344>>DOINDEX
IRKEYS.K.RPOS
      5545**DCL      6357<<ASSIGN
IRKEYS.K.SEGX
      5545**DCL      6360<<ASSIGN
IRKEYS.K.TDA
      5544**DCL      5887>>ASSIGN   5891<<ASSIGN   6337<<ASSIGN
IRKEYS.K.TDALVL
      5544**DCL      5888>>ASSIGN   5892<<ASSIGN   6338<<ASSIGN
IRKEYS.K.UNIQUE
      5545**DCL      6042>>IF       6334<<ASSIGN
IRKEYS.MINSIZE
      5543**DCL      6340<<ASSIGN   6352>>IF       6353<<ASSIGN
IRKEYS.NKEYS
      5543**DCL      5886>>DOINDEX  6003>>ASSIGN   6341>>DOINDEX
IRKEYS.UNIQUEBLD
      5543**DCL      6043<<ASSIGN   6373>>ASSIGN
J IN PROCEDURE SETUP_IRKEYS
      6326**DCL      6344<<DOINDEX  6346>>ASSIGN
JDCB$
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:161  
      5776**DCL      5638--IMP-PTR  5798<<ASSIGN   5799>>ASSIGN   5804>>IF       5865>>IF       5867>>ASSIGN
      5868>>ASSIGN   5870>>ASSIGN   5871>>ASSIGN   5876>>IF       5911>>IF       5911>>IF       5914>>ASSIGN
      5937>>ASSIGN   5944>>ASSIGN   5953>>IF       5961>>ASSIGN   5971>>ASSIGN   6000>>IF       6006>>IF
      6012>>ASSIGN   6014>>ASSIGN   6015>>ASSIGN   6016>>ASSIGN   6019>>IF       6020>>ASSIGN   6021>>ASSIGN
      6026>>IF       6096>>ASSIGN   6108>>IF       6109>>ASSIGN   6110>>ASSIGN   6116>>ASSIGN   6117>>IF
      6119>>ASSIGN   6139>>ASSIGN   6140>>IF       6146>>ASSIGN   6153>>ASSIGN   6154>>ASSIGN   6158>>IF
      6159>>ASSIGN   6175>>ASSIGN   6176>>ASSIGN   6177>>ASSIGN   6180>>ASSIGN   6184>>ASSIGN   6206>>IF
      6209>>ASSIGN   6212>>ASSIGN   6214>>IF       6214>>IF       6214>>IF       6217>>ASSIGN   6218>>IF
      6220>>IF       6226>>ASSIGN   6229>>ASSIGN   6231>>ASSIGN   6231>>ASSIGN   6237>>IF       6240>>ASSIGN
      6240>>ASSIGN   6241>>ASSIGN   6242>>ASSIGN   6243>>ASSIGN   6244>>ASSIGN   6245>>ASSIGN   6246>>ASSIGN
      6271>>ASSIGN   6272>>ASSIGN   6276>>ASSIGN   6277>>ASSIGN   6300>>ASSIGN   6330>>ASSIGN   6331>>ASSIGN
      6332>>ASSIGN   6337>>ASSIGN   6338>>ASSIGN   6373>>ASSIGN   6374>>ASSIGN   6375>>ASSIGN
KEY$
      5779**DCL      5616--IMP-PTR  5619--IMP-PTR  5951<<ASSIGN   5952<<ASSIGN   5952>>ASSIGN   5954>>ASSIGN
      5954>>ASSIGN   5956>>ASSIGN   5956>>ASSIGN   6104<>CALL     6105>>IF
KFIELD.FIELD
      5550**DCL      6346>>ASSIGN
KFIELD$
      5789**DCL      5550--IMP-PTR  6330<<ASSIGN   6346>>ASSIGN
LAST_GDA IN PROCEDURE COUNT_RECS
      6091**DCL      6101<<ASSIGN   6113>>IF       6122>>IF       6125<<ASSIGN   6126>>IF       6127>>ASSIGN
      6140>>IF
LCDA IN PROCEDURE CHECK_TDA
      5932**DCL      5944<<ASSIGN   5945<>CALL     5961<<ASSIGN   5964<>CALL
LDA
      5784**DCL      5907>>ASSIGN   6100<<ASSIGN   6110<<ASSIGN   6154<<ASSIGN
LDA IN PROCEDURE COUNT_ALTRECS
      5998**DCL      6021<<ASSIGN   6028>>ASSIGN   6038>>ASSIGN
LEN
      5793**DCL      6349>>ASSIGN   6351<>CALL     6354>>ASSIGN   6398<<ASSIGN   6403<<ASSIGN
LVL IN PROCEDURE CHECK_TDA
      5931**DCL      5936<<ASSIGN   5937>>ASSIGN   5939>>DOUNTIL  5967<<ASSIGN   5967>>ASSIGN   5968>>IF
      5971>>ASSIGN
NEW_NAVX IN PROCEDURE COUNT_RECS
      6092**DCL      6095<<ASSIGN   6122>>IF       6124<<ASSIGN   6137>>IF       6142>>IF       6142>>IF
      6144>>ASSIGN   6145>>ASSIGN
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:162  
NOGRAN IN PROCEDURE SETUP_ALTKEYS
      6297**LABEL    6292--CALLALT
NOGRAN IN PROCEDURE SETUP_IRKEYS
      6370**LABEL    6365--CALLALT
NOTDA IN PROCEDURE CHECK_TDA
      5976**LABEL    5940--CALLALT  5945--CALLALT  5964--CALLALT
NRECS IN PROCEDURE COUNT_ALTRECS
      5996**DCL      6010<<ASSIGN   6023<<ASSIGN   6023>>ASSIGN   6029>>IF       6039>>IF
NRECS IN PROCEDURE COUNT_RECS
      6088**DCL      6094<<ASSIGN   6106<<ASSIGN   6106>>ASSIGN   6152>>ASSIGN   6153>>ASSIGN
NUMENTS IN PROCEDURE COUNT_ALTRECS
      5994**DCL      6001<<ASSIGN   6003<<ASSIGN   6005>>DOINDEX
NXTLVLDA IN PROCEDURE CHECK_TDA
      5933**DCL      5957<<ASSIGN   5970>>ASSIGN
ONEGRAN
      5783**DCL      5800<<ASSIGN   5909>>ASSIGN   5915<>CALL     6131<<ASSIGN   6137>>IF
RECFIELD.DECFIELD.LEN
      5587**DCL      6398>>ASSIGN
RECFIELD.FIELD
      5587**DCL      5587--REDEF
RECFIELD.FIELD.LEN
      5587**DCL      6403>>ASSIGN
RECFIELD.FIELD.TYPE
      5587**DCL      5824>>DOCASE   6390>>DOCASE   6424>>DOCASE
RECFIELD$
      5790**DCL      5580--IMP-PTR  5824>>DOCASE   6331<<ASSIGN   6390>>DOCASE   6398>>ASSIGN   6403>>ASSIGN
      6424>>DOCASE
SEG$
      5780**DCL      5622--IMP-PTR  5629--IMP-PTR  5954<<ASSIGN   5956<<ASSIGN   5957>>ASSIGN   6104<>CALL
      6112>>DOUNTIL  6113>>IF       6115>>ASSIGN   6122>>IF       6122>>IF       6122>>IF       6124>>ASSIGN
      6124>>ASSIGN   6125>>ASSIGN   6130>>IF       6132<>CALL
SEGCNT
      5788**DCL      6104<>CALL
SETUP
      6204**PROC     5802--CALL     5807--CALL
SETUP_ALTKEYS
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:163  
      6268**PROC     6221--CALL
SETUP_IRKEYS
      6324**PROC     6223--CALL
SET_LEN
      6388**PROC     6348--CALL
SET_START
      6420**PROC     6347--CALL
SIZE IN PROCEDURE ADJUST
      5822**DCL      5821--PROC     5828<<ASSIGN   5828>>ASSIGN   5831<<ASSIGN   5831>>ASSIGN
SIZE IN PROCEDURE SETUP_IRKEYS
      6328**DCL      6349<<ASSIGN   6350<>CALL     6352>>IF       6353>>ASSIGN
START IN PROCEDURE SETUP_IRKEYS
      6327**DCL      6347<>CALL     6349>>ASSIGN
START IN PROCEDURE SET_START
      6422**DCL      6420--PROC     6427<<ASSIGN   6434<<ASSIGN   6435<<ASSIGN   6440<<ASSIGN
START$
      5791**DCL      5565--IMP-PTR  6332<<ASSIGN   6427>>ASSIGN   6433>>IF       6434>>ASSIGN   6435>>ASSIGN
      6440>>ASSIGN
TDA
      5785**DCL      5867<<ASSIGN   5870>>ASSIGN   5878<<ASSIGN   5880>>IF       5882>>ASSIGN   5887<<ASSIGN
      5889>>IF       5891>>ASSIGN   5935>>ASSIGN   5976<<ASSIGN
TDALVL
      5786**DCL      5868<<ASSIGN   5871>>ASSIGN   5879<<ASSIGN   5883>>ASSIGN   5888<<ASSIGN   5892>>ASSIGN
      5936>>ASSIGN   5977<<ASSIGN
UGRANS
      5781**DCL      5896<<ASSIGN   5896>>ASSIGN   5897>>IF       5897>>IF       5899<>CALL     5900>>ASSIGN
      5905<>CALL     5948>>IF       5949<<ASSIGN   5962>>IF       5963<<ASSIGN   6019>>IF       6020<<ASSIGN
      6099<<ASSIGN   6108>>IF       6109<<ASSIGN   6126>>IF       6127<<ASSIGN   6158>>IF       6159<<ASSIGN
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:164  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #002=FMG$INIT File=FMG$UTIL.:E05TSI                                TUE 07/29/97 16:45 Page:165  
              MINI UREF LISTING

DONE IN PROCEDURE CHECK   5909**LABEL
FMG$INIT      19**PROC

PL6.E3A0      #003=FMG$IRSETUP File=FMG$UTIL.:E05TSI                             TUE 07/29/97 16:46 Page:166  
      864        1        /*T***********************************************************/
      865        2        /*T*                                                         */
      866        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      867        4        /*T*                                                         */
      868        5        /*T***********************************************************/
      869        6        /*F*     NAME:     FMG$IRSETUP
      870        7                 PURPOSE:  To handle setup for irel files
      871        8        */
      872        9        /*D*     NAME:     FMG$IRSETUP
      873       10                 CALL:     CALL FMG$IRSETUP(VLP$IRKEYS)
      874       11                 INPUT:    VLP$IRKEYS - The VLP_IRKEYS structure from the OPEN fpt,
      875       12                           the assign merge record, or the FIT.
      876       13                 DESCRIPTION:
      877       14                      The VLP_IRKEYS structure was designed to be easy for users
      878       15                 to specify in a single vector.  Unfortunately, it isn't so easy
      879       16                 for file management to use.  It would have no idea how many fields
      880       17                 define the key, or even where the key starts, without doing a
      881       18                 sequential search every time it had to access key information.
      882       19                 So, the imformation is split up into two structures, the IRKEYS
      883       20                 structure, and the KFIELD structure.  KFIELD is a lot like the
      884       21                 VLP_IRKEYS structure.  It is a sequential list of the fields that
      885       22                 define the keys.  The IRKEYS structure is an array with one entry
      886       23                 per index.  Among other things, each entry has an index into the
      887       24                 FMG$KFIELD.FIELD array for the start of this key definition,
      888       25                 and a count of how many entries in FMG$KFIELD.FIELD it takes
      889       26                 to define this key.
      890       27
      891       28                      First, we do a little field rearranging.  SBIN and
      892       29                 UBIN fields are specified in bits.  But file management
      893       30                 prefers to treat them in bytes.
      894       31
      895       32                      If more than 72 keys were defined, then use only the first
      896       33                 72 keys.  We can't fit any more than that in the FIT.  Next, get
      897       34                 enough space in the ROSEG to hold the IRKEYS information.  Next,
      898       35                 count the number of actual entries in VLP$IRKEYS.  That will tell
      899       36                 us how much space we need for the KFIELD structure.
      900       37
PL6.E3A0      #003=FMG$IRSETUP File=FMG$UTIL.:E05TSI                             TUE 07/29/97 16:46 Page:167  
      901       38                      Now, loop through the list of keys, setting the values in
      902       39                 the IRKEYS and KFIELD structures.
      903       40        */
      904       41                 %EJECT;
PL6.E3A0      #003=FMG$IRSETUP File=FMG$UTIL.:E05TSI                             TUE 07/29/97 16:46 Page:168  
      905       42        FMG$IRSETUP: PROC(VLP$IRKEYS) ALTRET;
      906       43               %INCLUDE F_CP6;
      907     1068               %INCLUDE B$JIT;
      908     1671               %MACRO F$DCB(BASED=BASED);
      909     1672               %INCLUDE F$DCB;
      910     1721               %MEND;
      911     1722               %INCLUDE FM_FIELD_C;
      912     1763               %INCLUDE B$OBJECT_C;
      913     5193               %INCLUDE F$CP6V_C;
      914     5419        /* */
      915     5420               %VLP_IRKEYS(FPTN=VLP$IRKEYS, STCLASS="");
      916     5435               %VLP_IRKEYS(FPTN=VLP_IRKEYS, STCLASS="");
      917     5450               %FMG$IRKEYS(FPTN=IRKEYS, STCLASS="BASED(ALTKEY$)");
      918     5457               %FMG$KFIELD(FPTN=KFIELD, STCLASS="BASED(KFIELD$)");
      919     5460               %F$DCB(BASED="BASED(JDCB$)");
      920     5510        /* */
      921     5511    1          DCL JDCB$ PTR;
      922     5512    1          DCL K SBIN;
      923     5513    1          DCL NKEYS SBIN;
      924     5514    1          DCL ALTKEY$ PTR;
      925     5515    1          DCL N SBIN;
      926     5516    1          DCL I SBIN;
      927     5517    1          DCL LEN SBIN;
      928     5518    1          DCL START SBIN;
      929     5519    1          DCL KFIELD$ PTR;
      930     5520        /* */
      931     5521    1          DCL 1 BLOCK BASED,
      932     5522    1               2 * CHAR(K);
      933     5523        /* */
      934     5524    1          DCL FSA$GSP ENTRY(2) ALTRET;
      935     5525    1          DCL FSA$FSP ENTRY(2) ALTRET;
      936     5526        /* */
      937     5527    1          DCL B$JIT$ PTR SYMREF;
      938     5528    1          DCL B$ROSEG$ PTR SYMREF;
      939     5529        /* */
      940     5530    1          JDCB$=B$JIT.DCB$;
      941     5531
PL6.E3A0      #003=FMG$IRSETUP File=FMG$UTIL.:E05TSI                             TUE 07/29/97 16:46 Page:169  
      942     5532    1          NKEYS=VLP$IRKEYS.NKEYS#;
      943     5533    1          IF NKEYS > 72 THEN
      944     5534    1             NKEYS=72;
      945     5535    1          K=(NKEYS*SIZEW(IRKEYS.K(0)))+3;
      946     5536    1          CALL FSA$GSP(K, ALTKEY$) ALTRET(ERR);
      947     5537    1          K=K*4;
      948     5538    1          ALTKEY$->BLOCK='0'B;
      949     5539    1          IRKEYS.NWORDS=K/4;
      950     5540    1          IRKEYS.NKEYS=NKEYS;
      951     5541    1          F$DCB.ALTKEYX=POFFW(ALTKEY$, B$ROSEG$);
      952     5542
      953     5543    1          N=0;
      954     5544    2          DO I=1 TO NKEYS;
      955     5545    3             DO UNTIL(VLP_IRKEYS.K.KEYEND#(0));
      956     5546    3                VLP_IRKEYS.K(0)=VLP$IRKEYS.K(N);
      957     5547    3                N=N+1;
      958     5548    3                END;
      959     5549    2             END;
      960     5550
      961     5551    1          K=(N+3)/4+2;
      962     5552    1          CALL FSA$GSP(K, KFIELD$) ALTRET(ERR);
      963     5553    1          K=K*4;
      964     5554    1          KFIELD$->BLOCK='0'B;
      965     5555    1          KFIELD.NWORDS=K/4;
      966     5556    1          KFIELD.NFIELDS=N;
      967     5557    1          F$DCB.KFIELDX=POFFW(KFIELD$, B$ROSEG$);
      968     5558
      969     5559    1          N=0;
      970     5560    2          DO I=0 TO NKEYS-1;
      971     5561    2             IRKEYS.K.FIRSTFIELD(I)=N;
      972     5562    2             VLP_IRKEYS.K(0)=VLP$IRKEYS.K(N);
      973     5563    2             IRKEYS.K.UNIQUE(I)=VLP_IRKEYS.K.UNIQUE#(0);
      974     5564    2             IF I = 0 THEN
      975     5565    2                IRKEYS.K.UNIQUE(I)='1'B;
      976     5566
      977     5567    2             KFIELD.FIELD(N)=VLP_IRKEYS.K.FIELDN#(0);
      978     5568    2             IRKEYS.K.NFIELDS(I)=IRKEYS.K.NFIELDS(I)+1;
PL6.E3A0      #003=FMG$IRSETUP File=FMG$UTIL.:E05TSI                             TUE 07/29/97 16:46 Page:170  
      979     5569
      980     5570    3             DO WHILE(NOT VLP_IRKEYS.K.KEYEND#(0));
      981     5571    3                N=N+1;
      982     5572    3                VLP_IRKEYS.K(0)=VLP$IRKEYS.K(N);
      983     5573    3                KFIELD.FIELD(N)=VLP_IRKEYS.K.FIELDN#(0);
      984     5574    3                IRKEYS.K.NFIELDS(I)=IRKEYS.K.NFIELDS(I)+1;
      985     5575    3                END;
      986     5576    2             N=N+1;
      987     5577    2             END;
      988     5578
      989     5579    1          RETURN;
      990     5580    1   ERR:   IF F$DCB.ALTKEYX ~= 0 THEN
      991     5581    2             DO;   /* FREE SPACE */
      992     5582    2             K=IRKEYS.NWORDS;
      993     5583    2             CALL FSA$FSP(K, ALTKEY$);
      994     5584    2             F$DCB.ALTKEYX=0;
      995     5585    2             END;  /* FREE SPACE */
      996     5586
      997     5587    1          ALTRETURN;
      998     5588    1          END FMG$IRSETUP;

PL6.E3A0      #003=FMG$IRSETUP File=FMG$UTIL.:E05TSI                             TUE 07/29/97 16:46 Page:171  
--  Include file information  --

   F$CP6V_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   FM_FIELD_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   F_CP6.:E05TOU  is referenced.
      No diagnostics issued in procedure FMG$IRSETUP.

   Procedure FMG$IRSETUP requires 184 words for executable code.
   Procedure FMG$IRSETUP requires 18 words of local(AUTO) storage.

    No errors detected in file FMG$UTIL.:E05TSI    .

PL6.E3A0      #003=FMG$IRSETUP File=FMG$UTIL.:E05TSI                             TUE 07/29/97 16:46 Page:172  

 Object Unit name= FMG$IRSETUP                                File name= FMG$UTIL.:E05TOU
 UTS= JUL 29 '97 16:46:37.60 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   184    270  FMG$IRSETUP

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        1  FMG$IRSETUP

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 FSA$GSP
 yes     yes           Std       2 FSA$FSP
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B$JIT$                                B$ROSEG$                              B_VECTNIL
PL6.E3A0      #003=FMG$IRSETUP File=FMG$UTIL.:E05TSI                             TUE 07/29/97 16:46 Page:173  


      864        1        /*T***********************************************************/
      865        2        /*T*                                                         */
      866        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      867        4        /*T*                                                         */
      868        5        /*T***********************************************************/
      869        6        /*F*     NAME:     FMG$IRSETUP
      870        7                 PURPOSE:  To handle setup for irel files
      871        8        */
      872        9        /*D*     NAME:     FMG$IRSETUP
      873       10                 CALL:     CALL FMG$IRSETUP(VLP$IRKEYS)
      874       11                 INPUT:    VLP$IRKEYS - The VLP_IRKEYS structure from the OPEN fpt,
      875       12                           the assign merge record, or the FIT.
      876       13                 DESCRIPTION:
      877       14                      The VLP_IRKEYS structure was designed to be easy for users
      878       15                 to specify in a single vector.  Unfortunately, it isn't so easy
      879       16                 for file management to use.  It would have no idea how many fields
      880       17                 define the key, or even where the key starts, without doing a
      881       18                 sequential search every time it had to access key information.
      882       19                 So, the imformation is split up into two structures, the IRKEYS
      883       20                 structure, and the KFIELD structure.  KFIELD is a lot like the
      884       21                 VLP_IRKEYS structure.  It is a sequential list of the fields that
      885       22                 define the keys.  The IRKEYS structure is an array with one entry
      886       23                 per index.  Among other things, each entry has an index into the
      887       24                 FMG$KFIELD.FIELD array for the start of this key definition,
      888       25                 and a count of how many entries in FMG$KFIELD.FIELD it takes
      889       26                 to define this key.
      890       27
      891       28                      First, we do a little field rearranging.  SBIN and
      892       29                 UBIN fields are specified in bits.  But file management
      893       30                 prefers to treat them in bytes.
      894       31
      895       32                      If more than 72 keys were defined, then use only the first
      896       33                 72 keys.  We can't fit any more than that in the FIT.  Next, get
      897       34                 enough space in the ROSEG to hold the IRKEYS information.  Next,
      898       35                 count the number of actual entries in VLP$IRKEYS.  That will tell
      899       36                 us how much space we need for the KFIELD structure.
PL6.E3A0      #003=FMG$IRSETUP File=FMG$UTIL.:E05TSI                             TUE 07/29/97 16:46 Page:174  
      900       37
      901       38                      Now, loop through the list of keys, setting the values in
      902       39                 the IRKEYS and KFIELD structures.
      903       40        */
      904       41                 %EJECT;
PL6.E3A0      #003=FMG$IRSETUP File=FMG$UTIL.:E05TSI                             TUE 07/29/97 16:46 Page:175  
      905       42        FMG$IRSETUP: PROC(VLP$IRKEYS) ALTRET;

     42  0 000000   000000 700200 xent  FMG$IRSETUP  TSX0  ! X66_AUTO_1
         0 000001   000022 000001                    ZERO    18,1

      906       43               %INCLUDE F_CP6;
      907     1068               %INCLUDE B$JIT;
      908     1671               %MACRO F$DCB(BASED=BASED);
      909     1672               %INCLUDE F$DCB;
      910     1721               %MEND;
      911     1722               %INCLUDE FM_FIELD_C;
      912     1763               %INCLUDE B$OBJECT_C;
      913     5193               %INCLUDE F$CP6V_C;
      914     5419        /* */
      915     5420               %VLP_IRKEYS(FPTN=VLP$IRKEYS, STCLASS="");
      916     5435               %VLP_IRKEYS(FPTN=VLP_IRKEYS, STCLASS="");
      917     5450               %FMG$IRKEYS(FPTN=IRKEYS, STCLASS="BASED(ALTKEY$)");
      918     5457               %FMG$KFIELD(FPTN=KFIELD, STCLASS="BASED(KFIELD$)");
      919     5460               %F$DCB(BASED="BASED(JDCB$)");
      920     5510        /* */
      921     5511    1          DCL JDCB$ PTR;
      922     5512    1          DCL K SBIN;
      923     5513    1          DCL NKEYS SBIN;
      924     5514    1          DCL ALTKEY$ PTR;
      925     5515    1          DCL N SBIN;
      926     5516    1          DCL I SBIN;
      927     5517    1          DCL LEN SBIN;
      928     5518    1          DCL START SBIN;
      929     5519    1          DCL KFIELD$ PTR;
      930     5520        /* */
      931     5521    1          DCL 1 BLOCK BASED,
      932     5522    1               2 * CHAR(K);
      933     5523        /* */
      934     5524    1          DCL FSA$GSP ENTRY(2) ALTRET;
      935     5525    1          DCL FSA$FSP ENTRY(2) ALTRET;
      936     5526        /* */
      937     5527    1          DCL B$JIT$ PTR SYMREF;
PL6.E3A0      #003=FMG$IRSETUP File=FMG$UTIL.:E05TSI                             TUE 07/29/97 16:46 Page:176  
      938     5528    1          DCL B$ROSEG$ PTR SYMREF;
      939     5529        /* */
      940     5530    1          JDCB$=B$JIT.DCB$;

   5530  0 000002   000000 470400 xsym               LDP0    B$JIT$
         0 000003   000232 236100                    LDQ     154,,PR0
         0 000004   200006 756100                    STQ     JDCB$,,AUTO

      941     5531
      942     5532    1          NKEYS=VLP$IRKEYS.NKEYS#;

   5532  0 000005   200003 471500                    LDP1    @VLP$IRKEYS,,AUTO
         0 000006   100000 235100                    LDA     0,,PR1
         0 000007   200010 755100                    STA     NKEYS,,AUTO

      943     5533    1          IF NKEYS > 72 THEN

   5533  0 000010   000110 115007                    CMPA    72,DL
         0 000011   000014 604400 0                  TMOZ    s:5535

      944     5534    1             NKEYS=72;

   5534  0 000012   000110 235007                    LDA     72,DL
         0 000013   200010 755100                    STA     NKEYS,,AUTO

      945     5535    1          K=(NKEYS*SIZEW(IRKEYS.K(0)))+3;

   5535  0 000014   200010 236100                    LDQ     NKEYS,,AUTO
         0 000015   000007 402007                    MPY     7,DL
         0 000016   000003 036007                    ADLQ    3,DL
         0 000017   200007 756100                    STQ     K,,AUTO

      946     5536    1          CALL FSA$GSP(K, ALTKEY$) ALTRET(ERR);

   5536  0 000020   200011 633500                    EPPR3   ALTKEY$,,AUTO
         0 000021   200021 453500                    STP3    KFIELD$+3,,AUTO
         0 000022   200007 634500                    EPPR4   K,,AUTO
PL6.E3A0      #003=FMG$IRSETUP File=FMG$UTIL.:E05TSI                             TUE 07/29/97 16:46 Page:177  
         0 000023   200020 454500                    STP4    KFIELD$+2,,AUTO
         0 000024   200020 630500                    EPPR0   KFIELD$+2,,AUTO
         0 000025   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000026   000000 701000 xent               TSX1    FSA$GSP
         0 000027   000245 702000 0                  TSX2    ERR

      947     5537    1          K=K*4;

   5537  0 000030   200007 235100                    LDA     K,,AUTO
         0 000031   000002 735000                    ALS     2
         0 000032   200007 755100                    STA     K,,AUTO

      948     5538    1          ALTKEY$->BLOCK='0'B;

   5538  0 000033   200011 470500                    LDP0    ALTKEY$,,AUTO
         0 000034   000000 620005                    EAX0    0,AL
         0 000035   000140 100400                    MLR     fill='000'O
         0 000036   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         0 000037   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0

      949     5539    1          IRKEYS.NWORDS=K/4;

   5539  0 000040   200007 236100                    LDQ     K,,AUTO
         0 000041   000004 506007                    DIV     4,DL
         0 000042   200011 470500                    LDP0    ALTKEY$,,AUTO
         0 000043   000033 736000                    QLS     27
         0 000044   000000 552140                    STBQ    0,'40'O,PR0

      950     5540    1          IRKEYS.NKEYS=NKEYS;

   5540  0 000045   200011 470500                    LDP0    ALTKEY$,,AUTO
         0 000046   200010 236100                    LDQ     NKEYS,,AUTO
         0 000047   000000 552134                    STBQ    0,'34'O,PR0

      951     5541    1          F$DCB.ALTKEYX=POFFW(ALTKEY$, B$ROSEG$);

   5541  0 000050   000000 235000 xsym               LDA     B$ROSEG$
PL6.E3A0      #003=FMG$IRSETUP File=FMG$UTIL.:E05TSI                             TUE 07/29/97 16:46 Page:178  
         0 000051   000022 771000                    ARL     18
         0 000052   200020 755100                    STA     KFIELD$+2,,AUTO
         0 000053   200011 236100                    LDQ     ALTKEY$,,AUTO
         0 000054   000022 772000                    QRL     18
         0 000055   200020 136100                    SBLQ    KFIELD$+2,,AUTO
         0 000056   000000 620006                    EAX0    0,QL
         0 000057   200006 470500                    LDP0    JDCB$,,AUTO
         0 000060   000052 440100                    SXL0    42,,PR0

      952     5542
      953     5543    1          N=0;

   5543  0 000061   200012 450100                    STZ     N,,AUTO

      954     5544    2          DO I=1 TO NKEYS;

   5544  0 000062   000001 236007                    LDQ     1,DL
         0 000063   200013 756100                    STQ     I,,AUTO
         0 000064   000077 710000 0                  TRA     s:5549+1

      955     5545    3             DO UNTIL(VLP_IRKEYS.K.KEYEND#(0));

      956     5546    3                VLP_IRKEYS.K(0)=VLP$IRKEYS.K(N);

   5546  0 000065   200012 235100                    LDA     N,,AUTO
         0 000066   000001 735000                    ALS     1
         0 000067   200003 470500                    LDP0    @VLP$IRKEYS,,AUTO
         0 000070   000100 100505                    MLR     fill='000'O
         0 000071   000001 000002                    ADSC9   1,A,PR0                  cn=0,n=2
         0 000072   200005 000002                    ADSC9   VLP_IRKEYS+1,,AUTO       cn=0,n=2

      957     5547    3                N=N+1;

   5547  0 000073   200012 054100                    AOS     N,,AUTO

      958     5548    3                END;

PL6.E3A0      #003=FMG$IRSETUP File=FMG$UTIL.:E05TSI                             TUE 07/29/97 16:46 Page:179  
   5548  0 000074   200005 234100                    SZN     VLP_IRKEYS+1,,AUTO
         0 000075   000065 605000 0                  TPL     s:5546

      959     5549    2             END;

   5549  0 000076   200013 054100                    AOS     I,,AUTO
         0 000077   200013 236100                    LDQ     I,,AUTO
         0 000100   200010 116100                    CMPQ    NKEYS,,AUTO
         0 000101   000065 604400 0                  TMOZ    s:5546

      960     5550
      961     5551    1          K=(N+3)/4+2;

   5551  0 000102   200012 236100                    LDQ     N,,AUTO
         0 000103   000003 036007                    ADLQ    3,DL
         0 000104   000004 506007                    DIV     4,DL
         0 000105   000002 036007                    ADLQ    2,DL
         0 000106   200007 756100                    STQ     K,,AUTO

      962     5552    1          CALL FSA$GSP(K, KFIELD$) ALTRET(ERR);

   5552  0 000107   200016 630500                    EPPR0   KFIELD$,,AUTO
         0 000110   200021 450500                    STP0    KFIELD$+3,,AUTO
         0 000111   200007 631500                    EPPR1   K,,AUTO
         0 000112   200020 451500                    STP1    KFIELD$+2,,AUTO
         0 000113   200020 630500                    EPPR0   KFIELD$+2,,AUTO
         0 000114   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000115   000000 701000 xent               TSX1    FSA$GSP
         0 000116   000245 702000 0                  TSX2    ERR

      963     5553    1          K=K*4;

   5553  0 000117   200007 235100                    LDA     K,,AUTO
         0 000120   000002 735000                    ALS     2
         0 000121   200007 755100                    STA     K,,AUTO

      964     5554    1          KFIELD$->BLOCK='0'B;
PL6.E3A0      #003=FMG$IRSETUP File=FMG$UTIL.:E05TSI                             TUE 07/29/97 16:46 Page:180  

   5554  0 000122   200016 470500                    LDP0    KFIELD$,,AUTO
         0 000123   000000 620005                    EAX0    0,AL
         0 000124   000140 100400                    MLR     fill='000'O
         0 000125   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         0 000126   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0

      965     5555    1          KFIELD.NWORDS=K/4;

   5555  0 000127   200007 236100                    LDQ     K,,AUTO
         0 000130   000004 506007                    DIV     4,DL
         0 000131   200016 470500                    LDP0    KFIELD$,,AUTO
         0 000132   000000 756100                    STQ     0,,PR0

      966     5556    1          KFIELD.NFIELDS=N;

   5556  0 000133   200012 235100                    LDA     N,,AUTO
         0 000134   200016 470500                    LDP0    KFIELD$,,AUTO
         0 000135   000001 755100                    STA     1,,PR0

      967     5557    1          F$DCB.KFIELDX=POFFW(KFIELD$, B$ROSEG$);

   5557  0 000136   000000 236000 xsym               LDQ     B$ROSEG$
         0 000137   000022 772000                    QRL     18
         0 000140   200020 756100                    STQ     KFIELD$+2,,AUTO
         0 000141   200016 236100                    LDQ     KFIELD$,,AUTO
         0 000142   000022 772000                    QRL     18
         0 000143   200020 136100                    SBLQ    KFIELD$+2,,AUTO
         0 000144   000000 620006                    EAX0    0,QL
         0 000145   200006 470500                    LDP0    JDCB$,,AUTO
         0 000146   000056 440100                    SXL0    46,,PR0

      968     5558
      969     5559    1          N=0;

   5559  0 000147   200012 450100                    STZ     N,,AUTO

PL6.E3A0      #003=FMG$IRSETUP File=FMG$UTIL.:E05TSI                             TUE 07/29/97 16:46 Page:181  
      970     5560    2          DO I=0 TO NKEYS-1;

   5560  0 000150   200013 450100                    STZ     I,,AUTO
         0 000151   000241 710000 0                  TRA     s:5577+1

      971     5561    2             IRKEYS.K.FIRSTFIELD(I)=N;

   5561  0 000152   200013 236100                    LDQ     I,,AUTO
         0 000153   000007 402007                    MPY     7,DL
         0 000154   200012 720100                    LXL0    N,,AUTO
         0 000155   200011 470500                    LDP0    ALTKEY$,,AUTO
         0 000156   000004 740106                    STX0    4,QL,PR0

      972     5562    2             VLP_IRKEYS.K(0)=VLP$IRKEYS.K(N);

   5562  0 000157   200012 235100                    LDA     N,,AUTO
         0 000160   000001 735000                    ALS     1
         0 000161   200003 470500                    LDP0    @VLP$IRKEYS,,AUTO
         0 000162   000100 100505                    MLR     fill='000'O
         0 000163   000001 000002                    ADSC9   1,A,PR0                  cn=0,n=2
         0 000164   200005 000002                    ADSC9   VLP_IRKEYS+1,,AUTO       cn=0,n=2

      973     5563    2             IRKEYS.K.UNIQUE(I)=VLP_IRKEYS.K.UNIQUE#(0);

   5563  0 000165   200011 471500                    LDP1    ALTKEY$,,AUTO
         0 000166   000000 621006                    EAX1    0,QL
         0 000167   200005 236100                    LDQ     VLP_IRKEYS+1,,AUTO
         0 000170   000021 772000                    QRL     17
         0 000171   100006 676111                    ERQ     6,X1,PR1
         0 000172   400000 376007                    ANQ     -131072,DL
         0 000173   100006 656111                    ERSQ    6,X1,PR1

      974     5564    2             IF I = 0 THEN

   5564  0 000174   200013 236100                    LDQ     I,,AUTO
         0 000175   000201 601000 0                  TNZ     s:5567

PL6.E3A0      #003=FMG$IRSETUP File=FMG$UTIL.:E05TSI                             TUE 07/29/97 16:46 Page:182  
      975     5565    2                IRKEYS.K.UNIQUE(I)='1'B;

   5565  0 000176   200011 471500                    LDP1    ALTKEY$,,AUTO
         0 000177   400000 236007                    LDQ     -131072,DL
         0 000200   100006 256111                    ORSQ    6,X1,PR1

      976     5566
      977     5567    2             KFIELD.FIELD(N)=VLP_IRKEYS.K.FIELDN#(0);

   5567  0 000201   200016 471500                    LDP1    KFIELD$,,AUTO
         0 000202   200012 236100                    LDQ     N,,AUTO
         0 000203   000106 100500                    MLR     fill='000'O
         0 000204   200005 200001                    ADSC9   VLP_IRKEYS+1,,AUTO       cn=1,n=1
         0 000205   100002 000001                    ADSC9   2,Q,PR1                  cn=0,n=1

      978     5568    2             IRKEYS.K.NFIELDS(I)=IRKEYS.K.NFIELDS(I)+1;

   5568  0 000206   200011 471500                    LDP1    ALTKEY$,,AUTO
         0 000207   100004 722111                    LXL2    4,X1,PR1
         0 000210   000001 623012                    EAX3    1,X2
         0 000211   100004 443111                    SXL3    4,X1,PR1

      979     5569
      980     5570    3             DO WHILE(NOT VLP_IRKEYS.K.KEYEND#(0));

   5570  0 000212   000235 710000 0                  TRA     s:5575

      981     5571    3                N=N+1;

   5571  0 000213   200012 054100                    AOS     N,,AUTO

      982     5572    3                VLP_IRKEYS.K(0)=VLP$IRKEYS.K(N);

   5572  0 000214   200012 235100                    LDA     N,,AUTO
         0 000215   000001 735000                    ALS     1
         0 000216   200003 470500                    LDP0    @VLP$IRKEYS,,AUTO
         0 000217   000100 100505                    MLR     fill='000'O
PL6.E3A0      #003=FMG$IRSETUP File=FMG$UTIL.:E05TSI                             TUE 07/29/97 16:46 Page:183  
         0 000220   000001 000002                    ADSC9   1,A,PR0                  cn=0,n=2
         0 000221   200005 000002                    ADSC9   VLP_IRKEYS+1,,AUTO       cn=0,n=2

      983     5573    3                KFIELD.FIELD(N)=VLP_IRKEYS.K.FIELDN#(0);

   5573  0 000222   200016 471500                    LDP1    KFIELD$,,AUTO
         0 000223   200012 236100                    LDQ     N,,AUTO
         0 000224   000106 100500                    MLR     fill='000'O
         0 000225   200005 200001                    ADSC9   VLP_IRKEYS+1,,AUTO       cn=1,n=1
         0 000226   100002 000001                    ADSC9   2,Q,PR1                  cn=0,n=1

      984     5574    3                IRKEYS.K.NFIELDS(I)=IRKEYS.K.NFIELDS(I)+1;

   5574  0 000227   200013 236100                    LDQ     I,,AUTO
         0 000230   000007 402007                    MPY     7,DL
         0 000231   200011 471500                    LDP1    ALTKEY$,,AUTO
         0 000232   100004 720106                    LXL0    4,QL,PR1
         0 000233   000001 621010                    EAX1    1,X0
         0 000234   100004 441106                    SXL1    4,QL,PR1

      985     5575    3                END;

   5575  0 000235   200005 234100                    SZN     VLP_IRKEYS+1,,AUTO
         0 000236   000213 605000 0                  TPL     s:5571

      986     5576    2             N=N+1;

   5576  0 000237   200012 054100                    AOS     N,,AUTO

      987     5577    2             END;

   5577  0 000240   200013 054100                    AOS     I,,AUTO
         0 000241   200013 236100                    LDQ     I,,AUTO
         0 000242   200010 116100                    CMPQ    NKEYS,,AUTO
         0 000243   000152 604000 0                  TMI     s:5561

      988     5578
PL6.E3A0      #003=FMG$IRSETUP File=FMG$UTIL.:E05TSI                             TUE 07/29/97 16:46 Page:184  
      989     5579    1          RETURN;

   5579  0 000244   000000 702200 xent               TSX2  ! X66_ARET

      990     5580    1   ERR:   IF F$DCB.ALTKEYX ~= 0 THEN

   5580  0 000245   200006 470500       ERR          LDP0    JDCB$,,AUTO
         0 000246   000052 720100                    LXL0    42,,PR0
         0 000247   000267 600000 0                  TZE     s:5587

      991     5581    2             DO;   /* FREE SPACE */

      992     5582    2             K=IRKEYS.NWORDS;

   5582  0 000250   200011 471500                    LDP1    ALTKEY$,,AUTO
         0 000251   100000 236100                    LDQ     0,,PR1
         0 000252   000033 772000                    QRL     27
         0 000253   200007 756100                    STQ     K,,AUTO

      993     5583    2             CALL FSA$FSP(K, ALTKEY$);

   5583  0 000254   200011 633500                    EPPR3   ALTKEY$,,AUTO
         0 000255   200021 453500                    STP3    KFIELD$+3,,AUTO
         0 000256   200007 634500                    EPPR4   K,,AUTO
         0 000257   200020 454500                    STP4    KFIELD$+2,,AUTO
         0 000260   200020 630500                    EPPR0   KFIELD$+2,,AUTO
         0 000261   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000262   000000 701000 xent               TSX1    FSA$FSP
         0 000263   000000 011000                    NOP     0

      994     5584    2             F$DCB.ALTKEYX=0;

   5584  0 000264   000000 220003                    LDX0    0,DU
         0 000265   200006 470500                    LDP0    JDCB$,,AUTO
         0 000266   000052 440100                    SXL0    42,,PR0

      995     5585    2             END;  /* FREE SPACE */
PL6.E3A0      #003=FMG$IRSETUP File=FMG$UTIL.:E05TSI                             TUE 07/29/97 16:46 Page:185  

      996     5586
      997     5587    1          ALTRETURN;

   5587  0 000267   000000 702200 xent               TSX2  ! X66_AALT
      998     5588    1          END FMG$IRSETUP;

PL6.E3A0      #003=FMG$IRSETUP File=FMG$UTIL.:E05TSI                             TUE 07/29/97 16:46 Page:186  
--  Include file information  --

   F$CP6V_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   FM_FIELD_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   F_CP6.:E05TOU  is referenced.
      No diagnostics issued in procedure FMG$IRSETUP.
PL6.E3A0      #003=FMG$IRSETUP File=FMG$UTIL.:E05TSI                             TUE 07/29/97 16:46 Page:187  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @VLP$IRKEYS               11-0-0/w PTR         r     1 ALTKEY$
    13-0-0/w SBIN        r     1 I                          6-0-0/w PTR         r     1 JDCB$
     7-0-0/w SBIN        r     1 K                         16-0-0/w PTR         r     1 KFIELD$
    12-0-0/w SBIN        r     1 N                         10-0-0/w SBIN        r     1 NKEYS
    *0-0-0/d STRC(54)    r     1 VLP$IRKEYS                 4-0-0/d STRC(54)    r     1 VLP_IRKEYS

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$ROSEG$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/c ASTR(0)     r     1 BLOCK
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0/w STRC(360)   r     1 IRKEYS
     0-0-0/w STRC(81)    r     1 KFIELD


   Procedure FMG$IRSETUP requires 184 words for executable code.
   Procedure FMG$IRSETUP requires 18 words of local(AUTO) storage.

    No errors detected in file FMG$UTIL.:E05TSI    .
PL6.E3A0      #003=FMG$IRSETUP File=FMG$UTIL.:E05TSI                             TUE 07/29/97 16:46 Page:188  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=FMG$IRSETUP File=FMG$UTIL.:E05TSI                             TUE 07/29/97 16:46 Page:189  
          MINI XREF LISTING

ALTKEY$
      5514**DCL      5451--IMP-PTR  5536<>CALL     5538>>ASSIGN   5539>>ASSIGN   5540>>ASSIGN   5541>>ASSIGN
      5561>>ASSIGN   5563>>ASSIGN   5565>>ASSIGN   5568>>ASSIGN   5568>>ASSIGN   5574>>ASSIGN   5574>>ASSIGN
      5582>>ASSIGN   5583<>CALL
B$JIT.CPFLAGS1.SLEAZE
      1489**DCL      1489--REDEF
B$JIT.DCB$
      1563**DCL      5530>>ASSIGN
B$JIT.ERR.MID
      1396**DCL      1396--REDEF
B$JIT.JRESPEAK
      1557**DCL      1558--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
      1666**DCL      1666--REDEF    1667--REDEF
B$JIT.PNR
      1570**DCL      1570--REDEF
B$JIT.TSLINE
      1664**DCL      1665--REDEF
B$JIT$
      5527**DCL      1390--IMP-PTR  5530>>ASSIGN
B$ROSEG$
      5528**DCL      5541>>ASSIGN   5557>>ASSIGN
BLOCK
      5521**DCL      5538<<ASSIGN   5554<<ASSIGN
ERR
      5580**LABEL    5536--CALLALT  5552--CALLALT
F$DCB.ACTPOS
      5486**DCL      5486--REDEF
F$DCB.ALTKEYX
      5484**DCL      5541<<ASSIGN   5580>>IF       5584<<ASSIGN
F$DCB.ARS
      5461**DCL      5461--REDEF
PL6.E3A0      #003=FMG$IRSETUP File=FMG$UTIL.:E05TSI                             TUE 07/29/97 16:46 Page:190  
F$DCB.ATTR
      5479**DCL      5480--REDEF
F$DCB.BORROW
      5494**DCL      5494--REDEF    5494--REDEF    5494--REDEF
F$DCB.DCBNAME.L
      5508**DCL      5508--IMP-SIZ
F$DCB.EOMCHAR
      5465**DCL      5465--REDEF
F$DCB.FLDID
      5489**DCL      5489--REDEF
F$DCB.FORM$
      5483**DCL      5483--REDEF
F$DCB.FSECT
      5499**DCL      5499--REDEF
F$DCB.FSN
      5476**DCL      5476--REDEF    5476--REDEF    5477--REDEF
F$DCB.HEADER$
      5482**DCL      5482--REDEF
F$DCB.IXTNSIZE
      5480**DCL      5480--REDEF
F$DCB.KFIELDX
      5486**DCL      5557<<ASSIGN
F$DCB.LASTSTA$
      5470**DCL      5470--REDEF
F$DCB.LVL
      5495**DCL      5495--REDEF
F$DCB.NAME.C
      5470**DCL      5470--REDEF
F$DCB.NOEOF
      5491**DCL      5491--REDEF
F$DCB.NRECS
      5481**DCL      5481--REDEF
F$DCB.NRECX
      5500**DCL      5500--REDEF
F$DCB.OHDR
      5492**DCL      5492--REDEF
PL6.E3A0      #003=FMG$IRSETUP File=FMG$UTIL.:E05TSI                             TUE 07/29/97 16:46 Page:191  
F$DCB.ORG
      5475**DCL      5475--REDEF
F$DCB.PRECNO
      5498**DCL      5498--REDEF
F$DCB.RCSZ
      5503**DCL      5503--REDEF
F$DCB.RES
      5471**DCL      5471--REDEF
F$DCB.SETX
      5483**DCL      5483--REDEF
F$DCB.TAB$
      5482**DCL      5483--REDEF
F$DCB.TDA
      5497**DCL      5497--REDEF
F$DCB.WSN
      5472**DCL      5472--REDEF
FSA$FSP
      5525**DCL-ENT  5583--CALL
FSA$GSP
      5524**DCL-ENT  5536--CALL     5552--CALL
I
      5516**DCL      5544<<DOINDEX  5560<<DOINDEX  5561>>ASSIGN   5563>>ASSIGN   5564>>IF       5565>>ASSIGN
      5568>>ASSIGN   5568>>ASSIGN   5574>>ASSIGN   5574>>ASSIGN
IRKEYS.K
      5452**DCL      5535--ASSIGN
IRKEYS.K.FIRSTFIELD
      5452**DCL      5561<<ASSIGN
IRKEYS.K.NFIELDS
      5452**DCL      5568<<ASSIGN   5568>>ASSIGN   5574<<ASSIGN   5574>>ASSIGN
IRKEYS.K.UNIQUE
      5453**DCL      5563<<ASSIGN   5565<<ASSIGN
IRKEYS.NKEYS
      5451**DCL      5540<<ASSIGN
IRKEYS.NWORDS
      5451**DCL      5539<<ASSIGN   5582>>ASSIGN
JDCB$
PL6.E3A0      #003=FMG$IRSETUP File=FMG$UTIL.:E05TSI                             TUE 07/29/97 16:46 Page:192  
      5511**DCL      5461--IMP-PTR  5530<<ASSIGN   5541>>ASSIGN   5557>>ASSIGN   5580>>IF       5584>>ASSIGN
K
      5512**DCL      5522--IMP-SIZ  5535<<ASSIGN   5536<>CALL     5537<<ASSIGN   5537>>ASSIGN   5538>>ASSIGN
      5539>>ASSIGN   5551<<ASSIGN   5552<>CALL     5553<<ASSIGN   5553>>ASSIGN   5554>>ASSIGN   5555>>ASSIGN
      5582<<ASSIGN   5583<>CALL
KFIELD.FIELD
      5458**DCL      5567<<ASSIGN   5573<<ASSIGN
KFIELD.NFIELDS
      5458**DCL      5556<<ASSIGN
KFIELD.NWORDS
      5458**DCL      5555<<ASSIGN
KFIELD$
      5519**DCL      5458--IMP-PTR  5552<>CALL     5554>>ASSIGN   5555>>ASSIGN   5556>>ASSIGN   5557>>ASSIGN
      5567>>ASSIGN   5573>>ASSIGN
N
      5515**DCL      5543<<ASSIGN   5546>>ASSIGN   5547<<ASSIGN   5547>>ASSIGN   5551>>ASSIGN   5556>>ASSIGN
      5559<<ASSIGN   5561>>ASSIGN   5562>>ASSIGN   5567>>ASSIGN   5571<<ASSIGN   5571>>ASSIGN   5572>>ASSIGN
      5573>>ASSIGN   5576<<ASSIGN   5576>>ASSIGN
NKEYS
      5513**DCL      5532<<ASSIGN   5533>>IF       5534<<ASSIGN   5535>>ASSIGN   5540>>ASSIGN   5544>>DOINDEX
      5560>>DOINDEX
VLP$IRKEYS
      5431**DCL        42--PROC
VLP$IRKEYS.K
      5431**DCL      5546>>ASSIGN   5562>>ASSIGN   5572>>ASSIGN
VLP$IRKEYS.NKEYS#
      5431**DCL      5532>>ASSIGN
VLP_IRKEYS.K
      5446**DCL      5546<<ASSIGN   5562<<ASSIGN   5572<<ASSIGN
VLP_IRKEYS.K.FIELDN#
      5447**DCL      5567>>ASSIGN   5573>>ASSIGN
VLP_IRKEYS.K.KEYEND#
      5446**DCL      5545>>DOUNTIL  5570>>DOWHILE
VLP_IRKEYS.K.UNIQUE#
      5447**DCL      5563>>ASSIGN
PL6.E3A0      #003=FMG$IRSETUP File=FMG$UTIL.:E05TSI                             TUE 07/29/97 16:46 Page:193  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #003=FMG$IRSETUP File=FMG$UTIL.:E05TSI                             TUE 07/29/97 16:46 Page:194  
              MINI UREF LISTING

FMG$IRSETUP      42**PROC
LEN    5517**DCL
START    5518**DCL
