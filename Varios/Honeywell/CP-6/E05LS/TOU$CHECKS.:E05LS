VERSION E05

PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:1    
        1        1        /*M* TOU$CHECKS     DEckfile Editor Routine Checksum routines */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* PLM=3,DCI=6,SQB=N,PRB=N,DTI=5,ENI=0,AND=Y,ECI=0,CSU=3,DIN=3,
        9        9             CTI=8,CRM=109,CRT=1,NLB=N,NTB=Y,MCL=110 */
       10       10
       11       11        /*P*  NAME:        TOU$CHECKS
       12       12              AUTHORS:     Scott S. Sheppard
       13       13                           Dave Augustine
       14       14              PURPOSE:     DEckfile Editor Routine CHECKSUM Handling
       15       15              DESCRIPTION: TOU$CHECKS  is  an  outer  block  which
       16       16                           contains the 3 necessary entry points &
       17       17                           the  3  necessary procedures for  TOLTS
       18       18                           deckfile   checksum  manipulation.  The
       19       19                           procedure TOU$CHECKS is never called by
       20       20                           other modules --- the entry points are.
       21       21                           Routines accessed  via  separate  entry
       22       22                           points provide for:
       23       23                            --- calculating checksums
       24       24                            --- validating checksums
       25       25                            --- recalculating checksums
       26       26              REFERENCE:   CP-6 Release C0J0
       27       27              LAST UPDATE: 06/24/83
       28       28        */
       29       29        %EJECT ;
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:2    
       30       30        /*F*  NAME:        TOU$CHECKS
       31       31              DESCRIPTION: Procedure Nesting Hierarchy
       32       32
       33       33              TOU$CHECKS: procedure (SD, S$, SZ, LOC) ALTRET
       34       34
       35       35              TOU$CHECKSUM: entry (SD, S$, SZ, LOC) ALTRET
       36       36              TOU$CHECK_CARD_CHECKSUM: entry (SD, S$, SZ, LOC) ALTRET
       37       37              TOU$REFORM_DECK_CHECKSUM: entry (SD, S$, SZ, LOC)
       38       38
       39       39                 CS_FORM_CHECKSUM: procedure (SD, S$, SZ, LOC)
       40       40                 CS_CHECK_CARD_CHECKSUM: procedure (SD, S$, SZ, LOC) ALTRET
       41       41                 CS_REFORM_DECK_CHECKSUM: procedure
       42       42
       43       43        */
       44       44        %EJECT ;
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:3    
       45       45        TOU$CHECKS: PROC (CHECKSUM_SEED,
       46       46                   CHECKSUM_START$,
       47       47                   CHECKSUM_SIZE,
       48       48                   CHECKSUM_LOCATION) ALTRET ;
       49       49
       50       50        /* Include Files */
       51       51
       52       52           %INCLUDE TOU_DEER_M ;
       53     1463           %INCLUDE TO_PERR_C ;
       54     2048
       55     2049        /* Parameters */
       56     2050
       57     2051    1      DCL CHECKSUM_SEED              UBIN WORD ALIGNED ;
       58     2052    1      DCL CHECKSUM_START$            PTR ALIGNED ;
       59     2053    1      DCL CHECKSUM_SIZE              UBIN WORD ALIGNED ;
       60     2054    1      DCL CHECKSUM_LOCATION          UBIN WORD ALIGNED ;
       61     2055
       62     2056        /* Variables */
       63     2057
       64     2058           %DUP (STCLASS = SYMREF) ;
       65     2201
       66     2202        /* External Entry Points */
       67     2203
       68     2204    1      DCL TOU$DU_USER_WRITE              ENTRY ALTRET ;
       69     2205    1      DCL TOU$DFU_DF_RD_MASTER_ENTRY     ENTRY ALTRET ;
       70     2206    1      DCL TOU$DFU_DF_RD_CATALOG_ENTRY    ENTRY ALTRET ;
       71     2207           %EJECT ;
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:4    
       72     2208        /*D*  NAME:        TOU$CHECKSUM
       73     2209              ENTRY:
       74     2210              AUTHOR:      Dave Augustine
       75     2211              INTERFACE:   CS_FORM_CHECKSUM
       76     2212              DESCRIPTION: This entry point calls procedure CS_FORM_CHECKSUM
       77     2213                           with parameters.   This entry point and procedure
       78     2214                           will never ALTRETURN to the calling mnodule.
       79     2215        */
       80     2216
       81     2217    1   TOU$CHECKSUM: ENTRY (CHECKSUM_SEED,
       82     2218    1              CHECKSUM_START$,
       83     2219    1              CHECKSUM_SIZE,
       84     2220    1              CHECKSUM_LOCATION) ALTRET ;
       85     2221
       86     2222    1      CALL CS_FORM_CHECKSUM (CHECKSUM_SEED,
       87     2223    1              CHECKSUM_START$,
       88     2224    1              CHECKSUM_SIZE,
       89     2225    1              CHECKSUM_LOCATION) ;
       90     2226    1      RETURN ;
       91     2227
       92     2228        %EJECT ;
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:5    
       93     2229        /*D*  NAME:        TOU$CHECK_CARD_CHECKSUM
       94     2230              ENTRY:
       95     2231              AUTHOR:      Dave Augustine
       96     2232              INTERFACE:   CS_CHECK_CARD_CHECKSUM
       97     2233              DESCRIPTION: This entry point calls procedure CS_CHECK_CARD_CHECKSUM
       98     2234                           with parameters. The entry point will ALTRETURN to  the
       99     2235                           calling procedure if the  CARD CHECKSUM  does not match
      100     2236                           the CALCULATED CHECKSUM.
      101     2237        */
      102     2238
      103     2239    1   TOU$CHECK_CARD_CHECKSUM: ENTRY (CHECKSUM_SEED,
      104     2240    1              CHECKSUM_START$,
      105     2241    1              CHECKSUM_SIZE,
      106     2242    1              CHECKSUM_LOCATION) ALTRET ;
      107     2243
      108     2244    1      CALL CS_CHECK_CARD_CHECKSUM (CHECKSUM_SEED,
      109     2245    1              CHECKSUM_START$,
      110     2246    1              CHECKSUM_SIZE,
      111     2247    1              CHECKSUM_LOCATION)
      112     2248    1              ALTRET (CARD_CHECKSUM_ERROR) ;
      113     2249    1      RETURN ;
      114     2250
      115     2251    1   CARD_CHECKSUM_ERROR:
      116     2252    1      ALTRETURN ;
      117     2253
      118     2254        %EJECT ;
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:6    
      119     2255        /*D*  NAME:        TOU$REFORM_DECK_CHECKSUM
      120     2256              ENTRY:       (Parameters ignored --- there for syntax purposes only.)
      121     2257              AUTHOR:      Scott S. Sheppard
      122     2258              INTERFACE:   CS_REFORM_CATALOG_CHECKSUM
      123     2259              DESCRIPTION: This entry point calls procedure CS_REFORM_DECK_CHECKSUM
      124     2260        */
      125     2261
      126     2262    1   TOU$REFORM_DECK_CHECKSUM: ENTRY (CHECKSUM_SEED,
      127     2263    1              CHECKSUM_START$,
      128     2264    1              CHECKSUM_SIZE,
      129     2265    1              CHECKSUM_LOCATION) ALTRET ;
      130     2266
      131     2267    1      CALL CS_REFORM_DECK_CHECKSUM ;
      132     2268    1      RETURN ;
      133     2269
      134     2270        %EJECT ;
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:7    
      135     2271        /*I*  NAME:        CS_FORM_CHECKSUM
      136     2272              AUTHOR:      D. Augustine
      137     2273              PURPOSE:     Forms Deckfile Checksums
      138     2274              INTERFACE:   None called.
      139     2275              INPUT:       CHECKSUM_SEED
      140     2276                           CHECKSUM_START$
      141     2277                           CHECKSUM_SIZE
      142     2278              OUTPUT:      CHECKSUM_LOCATION
      143     2279              DESCRIPTION: This procedure assigns checksum values.
      144     2280        */
      145     2281
      146     2282    1   CS_FORM_CHECKSUM: PROC (CHECKSUM_SEED,
      147     2283    1              CHECKSUM_START$,
      148     2284    1              CHECKSUM_SIZE,
      149     2285    1              CHECKSUM_LOCATION) ;
      150     2286
      151     2287        /* Parameters */
      152     2288
      153     2289    2      DCL CHECKSUM_SEED       UBIN WORD ALIGNED;
      154     2290    2      DCL 1 SEED              REDEF CHECKSUM_SEED,
      155     2291    2            2 UPPER           UBIN HALF UNAL,
      156     2292    2            2 LOWER           UBIN HALF UNAL;
      157     2293    2      DCL CHECKSUM_START$     PTR       ALIGNED;
      158     2294    2      DCL CHECKSUM_SIZE       UBIN WORD ALIGNED;
      159     2295    2      DCL CHECKSUM_LOCATION   UBIN WORD ALIGNED;
      160     2296           %EJECT ;
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:8    
      161     2297        /* Variables */
      162     2298
      163     2299    2      DCL 1 CHECKSUM ALIGNED,
      164     2300    2            2 UPPER,
      165     2301    2              3 UPPER UBIN HALF UNAL,
      166     2302    2              3 LOWER UBIN HALF UNAL,
      167     2303    2            2 UH REDEF UPPER UBIN WORD,
      168     2304    2            2 LOWER,
      169     2305    2              3 UPPER UBIN HALF UNAL,
      170     2306    2              3 LOWER UBIN HALF UNAL,
      171     2307    2            2 LH REDEF LOWER UBIN WORD;
      172     2308    2      DCL 1 CHECKSUM_DATA (0:22) BASED (CHECKSUM_START$) ALIGNED,
      173     2309    2            2 UPPER           UBIN HALF UNAL,
      174     2310    2            2 LOWER           UBIN HALF UNAL;
      175     2311    2      DCL 1 CHECKSUM_SPLIT    STATIC    ALIGNED,
      176     2312    2            2 UPPER           UBIN HALF UNAL INIT (0),
      177     2313    2            2 LOWER           UBIN HALF UNAL;
      178     2314    2      DCL CHECKSUM_BINARY REDEF CHECKSUM_SPLIT UBIN WORD ALIGNED;
      179     2315    2      DCL   M                 UBIN WORD ALIGNED;
      180     2316           %EJECT ;
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:9    
      181     2317        /* Code */
      182     2318
      183     2319    2      CHECKSUM_SPLIT.LOWER = SEED.UPPER;
      184     2320    2      CHECKSUM.UH = CHECKSUM_BINARY;
      185     2321    2      CHECKSUM_SPLIT.LOWER = SEED.LOWER;
      186     2322    2      CHECKSUM.LH = CHECKSUM_BINARY;
      187     2323
      188     2324    3      DO M = 0 TO CHECKSUM_SIZE - 1;
      189     2325    3         CHECKSUM_SPLIT.LOWER = CHECKSUM_DATA.LOWER (M);
      190     2326    3         CHECKSUM.LH = CHECKSUM.LH + CHECKSUM_BINARY;
      191     2327    3         CHECKSUM_SPLIT.LOWER = CHECKSUM_DATA.UPPER (M);
      192     2328    3         CHECKSUM.UH = CHECKSUM.UH + CHECKSUM_BINARY;
      193     2329    3      END /* DO */ ;
      194     2330
      195     2331    3      DO WHILE (CHECKSUM.LOWER.UPPER ~= 0 OR
      196     2332    3              CHECKSUM.UPPER.UPPER ~= 0);
      197     2333    3         CHECKSUM_SPLIT.LOWER = CHECKSUM.LOWER.UPPER;
      198     2334    3         CHECKSUM.UH = CHECKSUM.UH + CHECKSUM_BINARY;
      199     2335    3         CHECKSUM.LOWER.UPPER = 0;
      200     2336    3         CHECKSUM_SPLIT.LOWER = CHECKSUM.UPPER.UPPER;
      201     2337    3         CHECKSUM.LH = CHECKSUM.LH + CHECKSUM_BINARY;
      202     2338    3         CHECKSUM.UPPER.UPPER = 0;
      203     2339    3      END /* WHILE */ ;
      204     2340
      205     2341    2      CHECKSUM.LOWER.UPPER = CHECKSUM.UPPER.LOWER;
      206     2342    2      CHECKSUM_LOCATION = CHECKSUM.LH;
      207     2343    2      RETURN;
      208     2344
      209     2345    2   END CS_FORM_CHECKSUM ;
      210     2346        %EJECT ;
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:10   
      211     2347        /*I*  NAME:        CS_CHECK_CARD_CHECKSUM
      212     2348              AUTHOR:      D. Augustine
      213     2349              PURPOSE:     TOLTS Checksum Verification
      214     2350              INTERFACE:   CS_FORM_CHECKSUM
      215     2351                           TOU$DU_USER_WRITE
      216     2352              INPUT:       CHECKSUM_SEED
      217     2353                           CHECKSUM_START$
      218     2354                           CHECKSUM_SIZE
      219     2355              OUTPUT:      CHECKSUM_LOCATION
      220     2356              DESCRIPTION: This program verifies the checksum of the card.
      221     2357        */
      222     2358
      223     2359    1   CS_CHECK_CARD_CHECKSUM: PROC (CHECKSUM_SEED,
      224     2360    1              CHECKSUM_START$,
      225     2361    1              CHECKSUM_SIZE,
      226     2362    1              CHECKSUM_LOCATION) ALTRET ;
      227     2363
      228     2364        /* Parameters */
      229     2365
      230     2366    2      DCL CHECKSUM_SEED       UBIN WORD ALIGNED;
      231     2367    2      DCL CHECKSUM_START$     PTR       ALIGNED;
      232     2368    2      DCL CHECKSUM_SIZE       UBIN WORD ALIGNED;
      233     2369    2      DCL CHECKSUM_LOCATION   UBIN WORD ALIGNED;
      234     2370           %EJECT ;
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:11   
      235     2371        /* Variables */
      236     2372
      237     2373    2      DCL 1 CHECKSUM ALIGNED,
      238     2374    2            2 UPPER,
      239     2375    2              3 UPPER UBIN HALF UNAL,
      240     2376    2              3 LOWER UBIN HALF UNAL,
      241     2377    2            2 UH REDEF UPPER UBIN WORD,
      242     2378    2            2 LOWER,
      243     2379    2              3 UPPER UBIN HALF UNAL,
      244     2380    2              3 LOWER UBIN HALF UNAL,
      245     2381    2            2 LH REDEF LOWER UBIN WORD;
      246     2382    2      DCL 1 CHECKSUM_DATA (0:22) BASED (CHECKSUM_START$) ALIGNED,
      247     2383    2            2 UPPER           UBIN HALF UNAL,
      248     2384    2            2 LOWER           UBIN HALF UNAL;
      249     2385    2      DCL 1 CHECKSUM_SPLIT    STATIC    ALIGNED,
      250     2386    2            2 UPPER           UBIN HALF UNAL INIT (0),
      251     2387    2            2 LOWER           UBIN HALF UNAL;
      252     2388    2      DCL CHECKSUM_BINARY REDEF CHECKSUM_SPLIT UBIN WORD ALIGNED;
      253     2389        %EJECT ;
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:12   
      254     2390        /* Code */
      255     2391
      256     2392    2      IF (CHECKSUM_LOCATION = 0)
      257     2393    2      THEN /* Do Nothing */ ;
      258     2394    3      ELSE DO ;
      259     2395    3              CALL CS_FORM_CHECKSUM (CHECKSUM_SEED,
      260     2396    3                      CHECKSUM_START$,
      261     2397    3                      CHECKSUM_SIZE - 1,
      262     2398    3                      CHECKSUM.LH) ;
      263     2399    3              CHECKSUM.UH = 0;
      264     2400    3              CHECKSUM.UPPER.LOWER = CHECKSUM.LOWER.UPPER;
      265     2401    3              CHECKSUM.LOWER.UPPER = 0;
      266     2402    3              CHECKSUM_SPLIT.LOWER = CHECKSUM_DATA.LOWER (CHECKSUM_SIZE - 1);
      267     2403    3              CHECKSUM.LH = CHECKSUM.LH + CHECKSUM_BINARY;
      268     2404    3              CHECKSUM_SPLIT.LOWER = CHECKSUM_DATA.UPPER (CHECKSUM_SIZE - 1);
      269     2405    3              CHECKSUM.UH = CHECKSUM.UH + CHECKSUM_BINARY;
      270     2406    3              CHECKSUM_SPLIT.LOWER = CHECKSUM.LOWER.UPPER;
      271     2407    3              CHECKSUM.UH = CHECKSUM.UH + CHECKSUM_BINARY;
      272     2408    3              CHECKSUM.LOWER.UPPER = CHECKSUM.UPPER.LOWER;
      273     2409    3              IF (CHECKSUM.LH ~= CHECKSUM_LOCATION)
      274     2410    4              THEN DO ;
      275     2411    4                      DUP.MSG_CODE = %E$CS_OBJ_CHECKSUM ;
      276     2412    4                      CALL TOU$DU_USER_WRITE ;
      277     2413    4                      ALTRETURN ;
      278     2414    4                   END /* THEN */ ;
      279     2415    3              ELSE /* Continue Processing */ ;
      280     2416    3           END /* ELSE */ ;
      281     2417    2      RETURN;
      282     2418
      283     2419    2   END CS_CHECK_CARD_CHECKSUM ;
      284     2420        %EJECT ;
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:13   
      285     2421        /*I*  NAME:        CS_REFORM_DECK_CHECKSUM
      286     2422              AUTHORS:     Scott S. Sheppard
      287     2423              PURPOSE:     Reforms Object deck Checksum
      288     2424              INTERFACE:   CS_FORM_CHECKSUM
      289     2425              INPUT:       OBJECT
      290     2426                           BINARY_B
      291     2427                           BCD_B
      292     2428              OUTPUT:      OBJECT.DECK_CHECKSUM
      293     2429                           BINARY_CARD
      294     2430                           BCD_CARD
      295     2431              DESCRIPTION: This procedure recalculates the deck checksum.
      296     2432                           Normally, this is necessary when  PATCH  cards
      297     2433                           are added to the object deck.
      298     2434        */
      299     2435        %EJECT ;
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:14   
      300     2436    1   CS_REFORM_DECK_CHECKSUM: PROC ;
      301     2437
      302     2438           %OBJECT (STCLASS = SYMREF) ;
      303     2501           %BINARY_B (STCLASS = "BASED (DUP.BINARY_V.PTR$)") ;
      304     2515           %BINARY_CARD (STCLASS = SYMREF) ;
      305     2542           %BCD_B (STCLASS = "BASED (DUP.BCD_V.PTR$)") ;
      306     2554           %BCD_CARD (STCLASS = SYMREF) ;
      307     2574    2      DCL CUR#   UBIN WORD ALIGNED ;
      308     2575
      309     2576        /* Code */
      310     2577
      311     2578    2      OBJECT.DECK_CHECKSUM = 0 ;
      312     2579
      313     2580    3      DO CUR# = 0 TO OBJECT.BINARY_COUNT ;
      314     2581    3         BINARY_CARD = BINARY_B(CUR#) ;
      315     2582    3         CALL CS_FORM_CHECKSUM (OBJECT.DECK_CHECKSUM,
      316     2583    3                 ADDR (BINARY_CARD.CHECKSUM),
      317     2584    3                 1,
      318     2585    3                 OBJECT.DECK_CHECKSUM) ;
      319     2586    3      END /* DO */ ;
      320     2587
      321     2588    2      IF OBJECT.TOTAL_COUNT - OBJECT.BINARY_COUNT > 2
      322     2589    3      THEN DO CUR# = 0 TO OBJECT.TOTAL_COUNT - OBJECT.BINARY_COUNT - 3 ;
      323     2590    3              BCD_CARD_ = BCD_B(CUR#) ;
      324     2591    3              CALL CS_FORM_CHECKSUM (OBJECT.DECK_CHECKSUM,
      325     2592    3                      ADDR (BCD_CARD.CHECKSUM),
      326     2593    3                      1,
      327     2594    3                      OBJECT.DECK_CHECKSUM) ;
      328     2595    3           END /* THEN */ ;
      329     2596    2      ELSE /* No patch cards, only 1 $object, some binary, 1 $dkend */ ;
      330     2597    2      RETURN ;
      331     2598
      332     2599    2   END CS_REFORM_DECK_CHECKSUM ;
      333     2600    1   END TOU$CHECKS ;

PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:15   
--  Include file information  --

   TO_PERR_C.:E05TOU  is referenced.
   TOU_DEER_M.:E05TOU  is referenced.
      No diagnostics issued in procedure TOU$CHECKS.

   Procedure TOU$CHECKS requires 216 words for executable code.
   Procedure TOU$CHECKS requires 28 words of local(AUTO) storage.

    No errors detected in file TOU$CHECKS.:E05TSI    .

PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:16   

 Object Unit name= TOU$CHECKS                                 File name= TOU$CHECKS.:E05TOU
 UTS= JUL 30 '97 06:39:14.24 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none     2      2  TOU$CHECKS
    1   Proc  even  none   216    330  TOU$CHECKS
    2  RoData even  none     4      4  TOU$CHECKS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        4  TOU$CHECKS
     1      3          yes     yes      Std        4  TOU$CHECKSUM
     1     16          yes     yes      Std        4  TOU$CHECK_CARD_CHECKSUM
     1     32          yes     yes      Std        4  TOU$REFORM_DECK_CHECKSUM

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       0 TOU$DU_USER_WRITE
                       nStd      0 X66_AUTO_4
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
                       Std       0 B_CONSPOOL_D
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:17   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     DUP                                   OBJECT                                BINARY_CARD
     BCD_CARD                              B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:18   


        1        1        /*M* TOU$CHECKS     DEckfile Editor Routine Checksum routines */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* PLM=3,DCI=6,SQB=N,PRB=N,DTI=5,ENI=0,AND=Y,ECI=0,CSU=3,DIN=3,
        9        9             CTI=8,CRM=109,CRT=1,NLB=N,NTB=Y,MCL=110 */
       10       10
       11       11        /*P*  NAME:        TOU$CHECKS
       12       12              AUTHORS:     Scott S. Sheppard
       13       13                           Dave Augustine
       14       14              PURPOSE:     DEckfile Editor Routine CHECKSUM Handling
       15       15              DESCRIPTION: TOU$CHECKS  is  an  outer  block  which
       16       16                           contains the 3 necessary entry points &
       17       17                           the  3  necessary procedures for  TOLTS
       18       18                           deckfile   checksum  manipulation.  The
       19       19                           procedure TOU$CHECKS is never called by
       20       20                           other modules --- the entry points are.
       21       21                           Routines accessed  via  separate  entry
       22       22                           points provide for:
       23       23                            --- calculating checksums
       24       24                            --- validating checksums
       25       25                            --- recalculating checksums
       26       26              REFERENCE:   CP-6 Release C0J0
       27       27              LAST UPDATE: 06/24/83
       28       28        */
       29       29        %EJECT ;
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:19   
       30       30        /*F*  NAME:        TOU$CHECKS
       31       31              DESCRIPTION: Procedure Nesting Hierarchy
       32       32
       33       33              TOU$CHECKS: procedure (SD, S$, SZ, LOC) ALTRET
       34       34
       35       35              TOU$CHECKSUM: entry (SD, S$, SZ, LOC) ALTRET
       36       36              TOU$CHECK_CARD_CHECKSUM: entry (SD, S$, SZ, LOC) ALTRET
       37       37              TOU$REFORM_DECK_CHECKSUM: entry (SD, S$, SZ, LOC)
       38       38
       39       39                 CS_FORM_CHECKSUM: procedure (SD, S$, SZ, LOC)
       40       40                 CS_CHECK_CARD_CHECKSUM: procedure (SD, S$, SZ, LOC) ALTRET
       41       41                 CS_REFORM_DECK_CHECKSUM: procedure
       42       42
       43       43        */
       44       44        %EJECT ;
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:20   
       45       45        TOU$CHECKS: PROC (CHECKSUM_SEED,

     45  1 000000   000000 700200 xent  TOU$CHECKS   TSX0  ! X66_AUTO_4
         1 000001   000034 000004                    ZERO    28,4
         1 000002   000005 710000 1                  TRA     s:2222

       46       46                   CHECKSUM_START$,
       47       47                   CHECKSUM_SIZE,
       48       48                   CHECKSUM_LOCATION) ALTRET ;
       49       49
       50       50        /* Include Files */
       51       51
       52       52           %INCLUDE TOU_DEER_M ;
       53     1463           %INCLUDE TO_PERR_C ;
       54     2048
       55     2049        /* Parameters */
       56     2050
       57     2051    1      DCL CHECKSUM_SEED              UBIN WORD ALIGNED ;
       58     2052    1      DCL CHECKSUM_START$            PTR ALIGNED ;
       59     2053    1      DCL CHECKSUM_SIZE              UBIN WORD ALIGNED ;
       60     2054    1      DCL CHECKSUM_LOCATION          UBIN WORD ALIGNED ;
       61     2055
       62     2056        /* Variables */
       63     2057
       64     2058           %DUP (STCLASS = SYMREF) ;
       65     2201
       66     2202        /* External Entry Points */
       67     2203
       68     2204    1      DCL TOU$DU_USER_WRITE              ENTRY ALTRET ;
       69     2205    1      DCL TOU$DFU_DF_RD_MASTER_ENTRY     ENTRY ALTRET ;
       70     2206    1      DCL TOU$DFU_DF_RD_CATALOG_ENTRY    ENTRY ALTRET ;
       71     2207           %EJECT ;
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:21   
       72     2208        /*D*  NAME:        TOU$CHECKSUM
       73     2209              ENTRY:
       74     2210              AUTHOR:      Dave Augustine
       75     2211              INTERFACE:   CS_FORM_CHECKSUM
       76     2212              DESCRIPTION: This entry point calls procedure CS_FORM_CHECKSUM
       77     2213                           with parameters.   This entry point and procedure
       78     2214                           will never ALTRETURN to the calling mnodule.
       79     2215        */
       80     2216
       81     2217    1   TOU$CHECKSUM: ENTRY (CHECKSUM_SEED,

   2217  1 000003   000000 700200 xent  TOU$CHECKSUM TSX0  ! X66_AUTO_4
         1 000004   000034 000004                    ZERO    28,4

       82     2218    1              CHECKSUM_START$,
       83     2219    1              CHECKSUM_SIZE,
       84     2220    1              CHECKSUM_LOCATION) ALTRET ;
       85     2221
       86     2222    1      CALL CS_FORM_CHECKSUM (CHECKSUM_SEED,

   2222  1 000005   200006 236100                    LDQ     @CHECKSUM_LOCATION,,AUTO
         1 000006   200024 756100                    STQ     @CHECKSUM_SIZE+1,,AUTO
         1 000007   200004 237100                    LDAQ    @CHECKSUM_START$,,AUTO
         1 000010   200022 757100                    STAQ    @CHECKSUM_SEED+1,,AUTO
         1 000011   200003 236100                    LDQ     @CHECKSUM_SEED,,AUTO
         1 000012   200021 756100                    STQ     CHECKSUM+4,,AUTO
         1 000013   000037 701000 1                  TSX1    CS_FORM_CHECKSUM
         1 000014   000000 011000                    NOP     0

       87     2223    1              CHECKSUM_START$,
       88     2224    1              CHECKSUM_SIZE,
       89     2225    1              CHECKSUM_LOCATION) ;
       90     2226    1      RETURN ;

   2226  1 000015   000000 702200 xent               TSX2  ! X66_ARET

       91     2227
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:22   
       92     2228        %EJECT ;
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:23   
       93     2229        /*D*  NAME:        TOU$CHECK_CARD_CHECKSUM
       94     2230              ENTRY:
       95     2231              AUTHOR:      Dave Augustine
       96     2232              INTERFACE:   CS_CHECK_CARD_CHECKSUM
       97     2233              DESCRIPTION: This entry point calls procedure CS_CHECK_CARD_CHECKSUM
       98     2234                           with parameters. The entry point will ALTRETURN to  the
       99     2235                           calling procedure if the  CARD CHECKSUM  does not match
      100     2236                           the CALCULATED CHECKSUM.
      101     2237        */
      102     2238
      103     2239    1   TOU$CHECK_CARD_CHECKSUM: ENTRY (CHECKSUM_SEED,

   2239  1 000016   000000 700200 xent  TOU$CHECK_C* TSX0  ! X66_AUTO_4
         1 000017   000034 000004                    ZERO    28,4

      104     2240    1              CHECKSUM_START$,
      105     2241    1              CHECKSUM_SIZE,
      106     2242    1              CHECKSUM_LOCATION) ALTRET ;
      107     2243
      108     2244    1      CALL CS_CHECK_CARD_CHECKSUM (CHECKSUM_SEED,

   2244  1 000020   200006 236100                    LDQ     @CHECKSUM_LOCATION,,AUTO
         1 000021   200014 756100                    STQ     @CHECKSUM_SIZE+1,,AUTO
         1 000022   200004 237100                    LDAQ    @CHECKSUM_START$,,AUTO
         1 000023   200012 757100                    STAQ    CUR#+1,,AUTO
         1 000024   200003 236100                    LDQ     @CHECKSUM_SEED,,AUTO
         1 000025   200011 756100                    STQ     @CHECKSUM_LOCATION+3,,AUTO
         1 000026   000130 701000 1                  TSX1    CS_CHECK_CARD_CHECKSUM
         1 000027   000031 702000 1                  TSX2    CARD_CHECKSUM_ERROR

      109     2245    1              CHECKSUM_START$,
      110     2246    1              CHECKSUM_SIZE,
      111     2247    1              CHECKSUM_LOCATION)
      112     2248    1              ALTRET (CARD_CHECKSUM_ERROR) ;
      113     2249    1      RETURN ;

   2249  1 000030   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:24   

      114     2250
      115     2251    1   CARD_CHECKSUM_ERROR:
      116     2252    1      ALTRETURN ;

   2252  1 000031   000000 702200 xent  CARD_CHECKS* TSX2  ! X66_AALT

      117     2253
      118     2254        %EJECT ;
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:25   
      119     2255        /*D*  NAME:        TOU$REFORM_DECK_CHECKSUM
      120     2256              ENTRY:       (Parameters ignored --- there for syntax purposes only.)
      121     2257              AUTHOR:      Scott S. Sheppard
      122     2258              INTERFACE:   CS_REFORM_CATALOG_CHECKSUM
      123     2259              DESCRIPTION: This entry point calls procedure CS_REFORM_DECK_CHECKSUM
      124     2260        */
      125     2261
      126     2262    1   TOU$REFORM_DECK_CHECKSUM: ENTRY (CHECKSUM_SEED,

   2262  1 000032   000000 700200 xent  TOU$REFORM_* TSX0  ! X66_AUTO_4
         1 000033   000034 000004                    ZERO    28,4

      127     2263    1              CHECKSUM_START$,
      128     2264    1              CHECKSUM_SIZE,
      129     2265    1              CHECKSUM_LOCATION) ALTRET ;
      130     2266
      131     2267    1      CALL CS_REFORM_DECK_CHECKSUM ;

   2267  1 000034   000222 701000 1                  TSX1    CS_REFORM_DECK_CHECKSUM
         1 000035   000000 011000                    NOP     0

      132     2268    1      RETURN ;

   2268  1 000036   000000 702200 xent               TSX2  ! X66_ARET

      133     2269
      134     2270        %EJECT ;
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:26   
      135     2271        /*I*  NAME:        CS_FORM_CHECKSUM
      136     2272              AUTHOR:      D. Augustine
      137     2273              PURPOSE:     Forms Deckfile Checksums
      138     2274              INTERFACE:   None called.
      139     2275              INPUT:       CHECKSUM_SEED
      140     2276                           CHECKSUM_START$
      141     2277                           CHECKSUM_SIZE
      142     2278              OUTPUT:      CHECKSUM_LOCATION
      143     2279              DESCRIPTION: This procedure assigns checksum values.
      144     2280        */
      145     2281
      146     2282    1   CS_FORM_CHECKSUM: PROC (CHECKSUM_SEED,

   2282  1 000037   200020 741300       CS_FORM_CHE* STX1  ! CHECKSUM+3,,AUTO

      147     2283    1              CHECKSUM_START$,
      148     2284    1              CHECKSUM_SIZE,
      149     2285    1              CHECKSUM_LOCATION) ;
      150     2286
      151     2287        /* Parameters */
      152     2288
      153     2289    2      DCL CHECKSUM_SEED       UBIN WORD ALIGNED;
      154     2290    2      DCL 1 SEED              REDEF CHECKSUM_SEED,
      155     2291    2            2 UPPER           UBIN HALF UNAL,
      156     2292    2            2 LOWER           UBIN HALF UNAL;
      157     2293    2      DCL CHECKSUM_START$     PTR       ALIGNED;
      158     2294    2      DCL CHECKSUM_SIZE       UBIN WORD ALIGNED;
      159     2295    2      DCL CHECKSUM_LOCATION   UBIN WORD ALIGNED;
      160     2296           %EJECT ;
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:27   
      161     2297        /* Variables */
      162     2298
      163     2299    2      DCL 1 CHECKSUM ALIGNED,
      164     2300    2            2 UPPER,
      165     2301    2              3 UPPER UBIN HALF UNAL,
      166     2302    2              3 LOWER UBIN HALF UNAL,
      167     2303    2            2 UH REDEF UPPER UBIN WORD,
      168     2304    2            2 LOWER,
      169     2305    2              3 UPPER UBIN HALF UNAL,
      170     2306    2              3 LOWER UBIN HALF UNAL,
      171     2307    2            2 LH REDEF LOWER UBIN WORD;
      172     2308    2      DCL 1 CHECKSUM_DATA (0:22) BASED (CHECKSUM_START$) ALIGNED,
      173     2309    2            2 UPPER           UBIN HALF UNAL,
      174     2310    2            2 LOWER           UBIN HALF UNAL;
      175     2311    2      DCL 1 CHECKSUM_SPLIT    STATIC    ALIGNED,
      176     2312    2            2 UPPER           UBIN HALF UNAL INIT (0),
      177     2313    2            2 LOWER           UBIN HALF UNAL;
      178     2314    2      DCL CHECKSUM_BINARY REDEF CHECKSUM_SPLIT UBIN WORD ALIGNED;
      179     2315    2      DCL   M                 UBIN WORD ALIGNED;
      180     2316           %EJECT ;
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:28   
      181     2317        /* Code */
      182     2318
      183     2319    2      CHECKSUM_SPLIT.LOWER = SEED.UPPER;

   2319  1 000040   200021 470500                    LDP0    @CHECKSUM_SEED,,AUTO
         1 000041   000000 220100                    LDX0    0,,PR0
         1 000042   000000 440000 0                  SXL0    CHECKSUM_SPLIT

      184     2320    2      CHECKSUM.UH = CHECKSUM_BINARY;

   2320  1 000043   000000 235000 0                  LDA     CHECKSUM_SPLIT
         1 000044   200025 755100                    STA     CHECKSUM,,AUTO

      185     2321    2      CHECKSUM_SPLIT.LOWER = SEED.LOWER;

   2321  1 000045   000000 722100                    LXL2    0,,PR0
         1 000046   000000 442000 0                  SXL2    CHECKSUM_SPLIT

      186     2322    2      CHECKSUM.LH = CHECKSUM_BINARY;

   2322  1 000047   000000 236000 0                  LDQ     CHECKSUM_SPLIT
         1 000050   200026 756100                    STQ     CHECKSUM+1,,AUTO

      187     2323
      188     2324    3      DO M = 0 TO CHECKSUM_SIZE - 1;

   2324  1 000051   200027 450100                    STZ     M,,AUTO
         1 000052   000073 710000 1                  TRA     s:2329+3

      189     2325    3         CHECKSUM_SPLIT.LOWER = CHECKSUM_DATA.LOWER (M);

   2325  1 000053   200022 470500                    LDP0    @CHECKSUM_START$,,AUTO
         1 000054   000000 471500                    LDP1    0,,PR0
         1 000055   200027 720100                    LXL0    M,,AUTO
         1 000056   100000 721110                    LXL1    0,X0,PR1
         1 000057   000000 441000 0                  SXL1    CHECKSUM_SPLIT

PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:29   
      190     2326    3         CHECKSUM.LH = CHECKSUM.LH + CHECKSUM_BINARY;

   2326  1 000060   200026 236100                    LDQ     CHECKSUM+1,,AUTO
         1 000061   000000 036000 0                  ADLQ    CHECKSUM_SPLIT
         1 000062   200026 756100                    STQ     CHECKSUM+1,,AUTO

      191     2327    3         CHECKSUM_SPLIT.LOWER = CHECKSUM_DATA.UPPER (M);

   2327  1 000063   100000 222110                    LDX2    0,X0,PR1
         1 000064   000000 442000 0                  SXL2    CHECKSUM_SPLIT

      192     2328    3         CHECKSUM.UH = CHECKSUM.UH + CHECKSUM_BINARY;

   2328  1 000065   200025 236100                    LDQ     CHECKSUM,,AUTO
         1 000066   000000 036000 0                  ADLQ    CHECKSUM_SPLIT
         1 000067   200025 756100                    STQ     CHECKSUM,,AUTO

      193     2329    3      END /* DO */ ;

   2329  1 000070   200027 235100                    LDA     M,,AUTO
         1 000071   000001 035007                    ADLA    1,DL
         1 000072   200027 755100                    STA     M,,AUTO
         1 000073   200023 470500                    LDP0    @CHECKSUM_SIZE,,AUTO
         1 000074   200027 236100                    LDQ     M,,AUTO
         1 000075   000000 116100                    CMPQ    0,,PR0
         1 000076   000053 602000 1                  TNC     s:2325

      194     2330
      195     2331    3      DO WHILE (CHECKSUM.LOWER.UPPER ~= 0 OR

   2331  1 000077   000115 710000 1                  TRA     s:2339

      196     2332    3              CHECKSUM.UPPER.UPPER ~= 0);
      197     2333    3         CHECKSUM_SPLIT.LOWER = CHECKSUM.LOWER.UPPER;

   2333  1 000100   200026 220100                    LDX0    CHECKSUM+1,,AUTO
         1 000101   000000 440000 0                  SXL0    CHECKSUM_SPLIT
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:30   

      198     2334    3         CHECKSUM.UH = CHECKSUM.UH + CHECKSUM_BINARY;

   2334  1 000102   200025 236100                    LDQ     CHECKSUM,,AUTO
         1 000103   000000 036000 0                  ADLQ    CHECKSUM_SPLIT
         1 000104   200025 756100                    STQ     CHECKSUM,,AUTO

      199     2335    3         CHECKSUM.LOWER.UPPER = 0;

   2335  1 000105   000000 221003                    LDX1    0,DU
         1 000106   200026 741100                    STX1    CHECKSUM+1,,AUTO

      200     2336    3         CHECKSUM_SPLIT.LOWER = CHECKSUM.UPPER.UPPER;

   2336  1 000107   200025 222100                    LDX2    CHECKSUM,,AUTO
         1 000110   000000 442000 0                  SXL2    CHECKSUM_SPLIT

      201     2337    3         CHECKSUM.LH = CHECKSUM.LH + CHECKSUM_BINARY;

   2337  1 000111   200026 236100                    LDQ     CHECKSUM+1,,AUTO
         1 000112   000000 036000 0                  ADLQ    CHECKSUM_SPLIT
         1 000113   200026 756100                    STQ     CHECKSUM+1,,AUTO

      202     2338    3         CHECKSUM.UPPER.UPPER = 0;

   2338  1 000114   200025 741100                    STX1    CHECKSUM,,AUTO

      203     2339    3      END /* WHILE */ ;

   2339  1 000115   200026 220100                    LDX0    CHECKSUM+1,,AUTO
         1 000116   000100 601000 1                  TNZ     s:2333
         1 000117   200025 221100                    LDX1    CHECKSUM,,AUTO
         1 000120   000100 601000 1                  TNZ     s:2333

      204     2340
      205     2341    2      CHECKSUM.LOWER.UPPER = CHECKSUM.UPPER.LOWER;

PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:31   
   2341  1 000121   200025 723100                    LXL3    CHECKSUM,,AUTO
         1 000122   200026 743100                    STX3    CHECKSUM+1,,AUTO

      206     2342    2      CHECKSUM_LOCATION = CHECKSUM.LH;

   2342  1 000123   200024 470500                    LDP0    @CHECKSUM_LOCATION,,AUTO
         1 000124   200026 235100                    LDA     CHECKSUM+1,,AUTO
         1 000125   000000 755100                    STA     0,,PR0

      207     2343    2      RETURN;

   2343  1 000126   200020 221300                    LDX1  ! CHECKSUM+3,,AUTO
         1 000127   000001 702211                    TSX2  ! 1,X1

      208     2344
      209     2345    2   END CS_FORM_CHECKSUM ;
      210     2346        %EJECT ;
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:32   
      211     2347        /*I*  NAME:        CS_CHECK_CARD_CHECKSUM
      212     2348              AUTHOR:      D. Augustine
      213     2349              PURPOSE:     TOLTS Checksum Verification
      214     2350              INTERFACE:   CS_FORM_CHECKSUM
      215     2351                           TOU$DU_USER_WRITE
      216     2352              INPUT:       CHECKSUM_SEED
      217     2353                           CHECKSUM_START$
      218     2354                           CHECKSUM_SIZE
      219     2355              OUTPUT:      CHECKSUM_LOCATION
      220     2356              DESCRIPTION: This program verifies the checksum of the card.
      221     2357        */
      222     2358
      223     2359    1   CS_CHECK_CARD_CHECKSUM: PROC (CHECKSUM_SEED,

   2359  1 000130   200010 741300       CS_CHECK_CA* STX1  ! @CHECKSUM_LOCATION+2,,AUTO

      224     2360    1              CHECKSUM_START$,
      225     2361    1              CHECKSUM_SIZE,
      226     2362    1              CHECKSUM_LOCATION) ALTRET ;
      227     2363
      228     2364        /* Parameters */
      229     2365
      230     2366    2      DCL CHECKSUM_SEED       UBIN WORD ALIGNED;
      231     2367    2      DCL CHECKSUM_START$     PTR       ALIGNED;
      232     2368    2      DCL CHECKSUM_SIZE       UBIN WORD ALIGNED;
      233     2369    2      DCL CHECKSUM_LOCATION   UBIN WORD ALIGNED;
      234     2370           %EJECT ;
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:33   
      235     2371        /* Variables */
      236     2372
      237     2373    2      DCL 1 CHECKSUM ALIGNED,
      238     2374    2            2 UPPER,
      239     2375    2              3 UPPER UBIN HALF UNAL,
      240     2376    2              3 LOWER UBIN HALF UNAL,
      241     2377    2            2 UH REDEF UPPER UBIN WORD,
      242     2378    2            2 LOWER,
      243     2379    2              3 UPPER UBIN HALF UNAL,
      244     2380    2              3 LOWER UBIN HALF UNAL,
      245     2381    2            2 LH REDEF LOWER UBIN WORD;
      246     2382    2      DCL 1 CHECKSUM_DATA (0:22) BASED (CHECKSUM_START$) ALIGNED,
      247     2383    2            2 UPPER           UBIN HALF UNAL,
      248     2384    2            2 LOWER           UBIN HALF UNAL;
      249     2385    2      DCL 1 CHECKSUM_SPLIT    STATIC    ALIGNED,
      250     2386    2            2 UPPER           UBIN HALF UNAL INIT (0),
      251     2387    2            2 LOWER           UBIN HALF UNAL;
      252     2388    2      DCL CHECKSUM_BINARY REDEF CHECKSUM_SPLIT UBIN WORD ALIGNED;
      253     2389        %EJECT ;
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:34   
      254     2390        /* Code */
      255     2391
      256     2392    2      IF (CHECKSUM_LOCATION = 0)

   2392  1 000131   200014 470500                    LDP0    @CHECKSUM_LOCATION,,AUTO
         1 000132   000000 235100                    LDA     0,,PR0
         1 000133   000220 600000 1                  TZE     s:2417

      257     2393    2      THEN /* Do Nothing */ ;
      258     2394    3      ELSE DO ;

      259     2395    3              CALL CS_FORM_CHECKSUM (CHECKSUM_SEED,

   2395  1 000134   200013 471500                    LDP1    @CHECKSUM_SIZE,,AUTO
         1 000135   100000 235100                    LDA     0,,PR1
         1 000136   000001 135007                    SBLA    1,DL
         1 000137   200031 755100                    STA     M+2,,AUTO
         1 000140   200016 633500                    EPPR3   CHECKSUM+1,,AUTO
         1 000141   200024 453500                    STP3    @CHECKSUM_LOCATION,,AUTO
         1 000142   200031 634500                    EPPR4   M+2,,AUTO
         1 000143   200023 454500                    STP4    @CHECKSUM_SIZE,,AUTO
         1 000144   200012 236100                    LDQ     @CHECKSUM_START$,,AUTO
         1 000145   200022 756100                    STQ     @CHECKSUM_START$,,AUTO
         1 000146   200011 236100                    LDQ     @CHECKSUM_SEED,,AUTO
         1 000147   200021 756100                    STQ     @CHECKSUM_SEED,,AUTO
         1 000150   000037 701000 1                  TSX1    CS_FORM_CHECKSUM
         1 000151   000000 011000                    NOP     0

      260     2396    3                      CHECKSUM_START$,
      261     2397    3                      CHECKSUM_SIZE - 1,
      262     2398    3                      CHECKSUM.LH) ;
      263     2399    3              CHECKSUM.UH = 0;

   2399  1 000152   200015 450100                    STZ     CHECKSUM,,AUTO

      264     2400    3              CHECKSUM.UPPER.LOWER = CHECKSUM.LOWER.UPPER;

PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:35   
   2400  1 000153   200016 220100                    LDX0    CHECKSUM+1,,AUTO
         1 000154   200015 440100                    SXL0    CHECKSUM,,AUTO

      265     2401    3              CHECKSUM.LOWER.UPPER = 0;

   2401  1 000155   000000 221003                    LDX1    0,DU
         1 000156   200016 741100                    STX1    CHECKSUM+1,,AUTO

      266     2402    3              CHECKSUM_SPLIT.LOWER = CHECKSUM_DATA.LOWER (CHECKSUM_SIZE - 1);

   2402  1 000157   200012 470500                    LDP0    @CHECKSUM_START$,,AUTO
         1 000160   000000 471500                    LDP1    0,,PR0
         1 000161   200013 473500                    LDP3    @CHECKSUM_SIZE,,AUTO
         1 000162   300000 722100                    LXL2    0,,PR3
         1 000163   177777 723112                    LXL3    -1,X2,PR1
         1 000164   000001 443000 0                  SXL3    CHECKSUM_SPLIT

      267     2403    3              CHECKSUM.LH = CHECKSUM.LH + CHECKSUM_BINARY;

   2403  1 000165   200016 236100                    LDQ     CHECKSUM+1,,AUTO
         1 000166   000001 036000 0                  ADLQ    CHECKSUM_SPLIT
         1 000167   200016 756100                    STQ     CHECKSUM+1,,AUTO

      268     2404    3              CHECKSUM_SPLIT.LOWER = CHECKSUM_DATA.UPPER (CHECKSUM_SIZE - 1);

   2404  1 000170   000000 471500                    LDP1    0,,PR0
         1 000171   300000 722100                    LXL2    0,,PR3
         1 000172   177777 224112                    LDX4    -1,X2,PR1
         1 000173   000001 444000 0                  SXL4    CHECKSUM_SPLIT

      269     2405    3              CHECKSUM.UH = CHECKSUM.UH + CHECKSUM_BINARY;

   2405  1 000174   200015 236100                    LDQ     CHECKSUM,,AUTO
         1 000175   000001 036000 0                  ADLQ    CHECKSUM_SPLIT
         1 000176   200015 756100                    STQ     CHECKSUM,,AUTO

      270     2406    3              CHECKSUM_SPLIT.LOWER = CHECKSUM.LOWER.UPPER;
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:36   

   2406  1 000177   200016 220100                    LDX0    CHECKSUM+1,,AUTO
         1 000200   000001 440000 0                  SXL0    CHECKSUM_SPLIT

      271     2407    3              CHECKSUM.UH = CHECKSUM.UH + CHECKSUM_BINARY;

   2407  1 000201   000001 036000 0                  ADLQ    CHECKSUM_SPLIT
         1 000202   200015 756100                    STQ     CHECKSUM,,AUTO

      272     2408    3              CHECKSUM.LOWER.UPPER = CHECKSUM.UPPER.LOWER;

   2408  1 000203   200015 722100                    LXL2    CHECKSUM,,AUTO
         1 000204   200016 742100                    STX2    CHECKSUM+1,,AUTO

      273     2409    3              IF (CHECKSUM.LH ~= CHECKSUM_LOCATION)

   2409  1 000205   200014 471500                    LDP1    @CHECKSUM_LOCATION,,AUTO
         1 000206   200016 236100                    LDQ     CHECKSUM+1,,AUTO
         1 000207   100000 116100                    CMPQ    0,,PR1
         1 000210   000220 600000 1                  TZE     s:2417

      274     2410    4              THEN DO ;

      275     2411    4                      DUP.MSG_CODE = %E$CS_OBJ_CHECKSUM ;

   2411  1 000211   000466 235007                    LDA     310,DL
         1 000212   000020 755000 xsym               STA     DUP+16

      276     2412    4                      CALL TOU$DU_USER_WRITE ;

   2412  1 000213   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000214   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         1 000215   000000 011000                    NOP     0

      277     2413    4                      ALTRETURN ;

   2413  1 000216   200010 221300                    LDX1  ! @CHECKSUM_LOCATION+2,,AUTO
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:37   
         1 000217   000000 702211                    TSX2  ! 0,X1

      278     2414    4                   END /* THEN */ ;
      279     2415    3              ELSE /* Continue Processing */ ;
      280     2416    3           END /* ELSE */ ;
      281     2417    2      RETURN;

   2417  1 000220   200010 221300                    LDX1  ! @CHECKSUM_LOCATION+2,,AUTO
         1 000221   000001 702211                    TSX2  ! 1,X1

      282     2418
      283     2419    2   END CS_CHECK_CARD_CHECKSUM ;
      284     2420        %EJECT ;
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:38   
      285     2421        /*I*  NAME:        CS_REFORM_DECK_CHECKSUM
      286     2422              AUTHORS:     Scott S. Sheppard
      287     2423              PURPOSE:     Reforms Object deck Checksum
      288     2424              INTERFACE:   CS_FORM_CHECKSUM
      289     2425              INPUT:       OBJECT
      290     2426                           BINARY_B
      291     2427                           BCD_B
      292     2428              OUTPUT:      OBJECT.DECK_CHECKSUM
      293     2429                           BINARY_CARD
      294     2430                           BCD_CARD
      295     2431              DESCRIPTION: This procedure recalculates the deck checksum.
      296     2432                           Normally, this is necessary when  PATCH  cards
      297     2433                           are added to the object deck.
      298     2434        */
      299     2435        %EJECT ;
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:39   
      300     2436    1   CS_REFORM_DECK_CHECKSUM: PROC ;

   2436  1 000222   200010 741300       CS_REFORM_D* STX1  ! @CHECKSUM_LOCATION+2,,AUTO

      301     2437
      302     2438           %OBJECT (STCLASS = SYMREF) ;
      303     2501           %BINARY_B (STCLASS = "BASED (DUP.BINARY_V.PTR$)") ;
      304     2515           %BINARY_CARD (STCLASS = SYMREF) ;
      305     2542           %BCD_B (STCLASS = "BASED (DUP.BCD_V.PTR$)") ;
      306     2554           %BCD_CARD (STCLASS = SYMREF) ;
      307     2574    2      DCL CUR#   UBIN WORD ALIGNED ;
      308     2575
      309     2576        /* Code */
      310     2577
      311     2578    2      OBJECT.DECK_CHECKSUM = 0 ;

   2578  1 000223   000026 450000 xsym               STZ     OBJECT+22

      312     2579
      313     2580    3      DO CUR# = 0 TO OBJECT.BINARY_COUNT ;

   2580  1 000224   200011 450100                    STZ     CUR#,,AUTO
         1 000225   000253 710000 1                  TRA     s:2586+3

      314     2581    3         BINARY_CARD = BINARY_B(CUR#) ;

   2581  1 000226   200011 236100                    LDQ     CUR#,,AUTO
         1 000227   000150 402007                    MPY     104,DL
         1 000230   000101 470400 xsym               LDP0    DUP+65
         1 000231   000000 100506                    MLR     fill='000'O
         1 000232   000000 000150                    ADSC9   0,Q,PR0                  cn=0,n=104
         1 000233   000000 000150 xsym               ADSC9   BINARY_CARD              cn=0,n=104

      315     2582    3         CALL CS_FORM_CHECKSUM (OBJECT.DECK_CHECKSUM,

   2582  1 000234   000000 236000 2                  LDQ     0
         1 000235   200032 756100                    STQ     M+3,,AUTO
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:40   
         1 000236   000001 236000 2                  LDQ     1
         1 000237   200024 756100                    STQ     @CHECKSUM_LOCATION,,AUTO
         1 000240   000002 236000 2                  LDQ     2
         1 000241   200023 756100                    STQ     @CHECKSUM_SIZE,,AUTO
         1 000242   200032 631500                    EPPR1   M+3,,AUTO
         1 000243   200022 451500                    STP1    @CHECKSUM_START$,,AUTO
         1 000244   000001 236000 2                  LDQ     1
         1 000245   200021 756100                    STQ     @CHECKSUM_SEED,,AUTO
         1 000246   000037 701000 1                  TSX1    CS_FORM_CHECKSUM
         1 000247   000000 011000                    NOP     0

      316     2583    3                 ADDR (BINARY_CARD.CHECKSUM),
      317     2584    3                 1,
      318     2585    3                 OBJECT.DECK_CHECKSUM) ;
      319     2586    3      END /* DO */ ;

   2586  1 000250   200011 235100                    LDA     CUR#,,AUTO
         1 000251   000001 035007                    ADLA    1,DL
         1 000252   200011 755100                    STA     CUR#,,AUTO
         1 000253   000024 236000 xsym               LDQ     OBJECT+20
         1 000254   777777 376007                    ANQ     -1,DL
         1 000255   200011 116100                    CMPQ    CUR#,,AUTO
         1 000256   000226 603000 1                  TRC     s:2581

      320     2587
      321     2588    2      IF OBJECT.TOTAL_COUNT - OBJECT.BINARY_COUNT > 2

   2588  1 000257   200030 756100                    STQ     M+1,,AUTO
         1 000260   000025 236000 xsym               LDQ     OBJECT+21
         1 000261   000022 772000                    QRL     18
         1 000262   200030 136100                    SBLQ    M+1,,AUTO
         1 000263   000002 116007                    CMPQ    2,DL
         1 000264   000326 604400 1                  TMOZ    s:2597

      322     2589    3      THEN DO CUR# = 0 TO OBJECT.TOTAL_COUNT - OBJECT.BINARY_COUNT - 3 ;

   2589  1 000265   200011 450100                    STZ     CUR#,,AUTO
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:41   
         1 000266   000314 710000 1                  TRA     s:2595+3

      323     2590    3              BCD_CARD_ = BCD_B(CUR#) ;

   2590  1 000267   200011 236100                    LDQ     CUR#,,AUTO
         1 000270   000124 402007                    MPY     84,DL
         1 000271   000103 470400 xsym               LDP0    DUP+67
         1 000272   040000 100506                    MLR     fill='040'O
         1 000273   000000 000124                    ADSC9   0,Q,PR0                  cn=0,n=84
         1 000274   000000 000124 xsym               ADSC9   BCD_CARD                 cn=0,n=84

      324     2591    3              CALL CS_FORM_CHECKSUM (OBJECT.DECK_CHECKSUM,

   2591  1 000275   000003 236000 2                  LDQ     3
         1 000276   200033 756100                    STQ     M+4,,AUTO
         1 000277   000001 236000 2                  LDQ     1
         1 000300   200024 756100                    STQ     @CHECKSUM_LOCATION,,AUTO
         1 000301   000002 236000 2                  LDQ     2
         1 000302   200023 756100                    STQ     @CHECKSUM_SIZE,,AUTO
         1 000303   200033 631500                    EPPR1   M+4,,AUTO
         1 000304   200022 451500                    STP1    @CHECKSUM_START$,,AUTO
         1 000305   000001 236000 2                  LDQ     1
         1 000306   200021 756100                    STQ     @CHECKSUM_SEED,,AUTO
         1 000307   000037 701000 1                  TSX1    CS_FORM_CHECKSUM
         1 000310   000000 011000                    NOP     0

      325     2592    3                      ADDR (BCD_CARD.CHECKSUM),
      326     2593    3                      1,
      327     2594    3                      OBJECT.DECK_CHECKSUM) ;
      328     2595    3           END /* THEN */ ;

   2595  1 000311   200011 235100                    LDA     CUR#,,AUTO
         1 000312   000001 035007                    ADLA    1,DL
         1 000313   200011 755100                    STA     CUR#,,AUTO
         1 000314   000024 236000 xsym               LDQ     OBJECT+20
         1 000315   777777 376007                    ANQ     -1,DL
         1 000316   200030 756100                    STQ     M+1,,AUTO
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:42   
         1 000317   000025 236000 xsym               LDQ     OBJECT+21
         1 000320   000022 772000                    QRL     18
         1 000321   200030 136100                    SBLQ    M+1,,AUTO
         1 000322   000003 136007                    SBLQ    3,DL
         1 000323   000326 604000 1                  TMI     s:2597
         1 000324   200011 116100                    CMPQ    CUR#,,AUTO
         1 000325   000267 603000 1                  TRC     s:2590

      329     2596    2      ELSE /* No patch cards, only 1 $object, some binary, 1 $dkend */ ;
      330     2597    2      RETURN ;

   2597  1 000326   200010 221300                    LDX1  ! @CHECKSUM_LOCATION+2,,AUTO
         1 000327   000001 702211                    TSX2  ! 1,X1

CHECKSUM_SPLIT
 Sect OctLoc
   0     000   000000 ******                                                    ....

CHECKSUM_SPLIT
 Sect OctLoc
   0     001   000000 ******                                                    ....

(unnamed)
 Sect OctLoc
   2     000   000001 006000   000026 006000   000003 006000   000024 006000    ................
      331     2598
      332     2599    2   END CS_REFORM_DECK_CHECKSUM ;
      333     2600    1   END TOU$CHECKS ;

PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:43   
--  Include file information  --

   TO_PERR_C.:E05TOU  is referenced.
   TOU_DEER_M.:E05TOU  is referenced.
      No diagnostics issued in procedure TOU$CHECKS.
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:44   

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0    45-  2600     65    14     1      0  y y y    4   1 TOU$CHECKS
                                  1      3    y y    4     TOU$CHECKSUM
                                  1     16    y y    4     TOU$CHECK_CARD_CHECKSUM
                                  1     32    y y    4     TOU$REFORM_DECK_CHECKSUM
  1  2282-  2345     22    26     1     37  y   y    4     2 CS_FORM_CHECKSUM
  2  2359-  2419     20    21     1    130  y y y    4     2 CS_CHECK_CARD_CHECKSUM
  3  2436-  2599     12    12     1    222  y   y    0     2 CS_REFORM_DECK_CHECKSUM
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:45   

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label

              45   1      0 Proc    0                              2217   1      3 Entry   0
         $  2222   1      5 Call    0                              2226   1     15 Return  0
            2239   1     16 Entry   0                          $$  2244   1     20 Call    0
            2249   1     30 Return  0
            2252   1     31 Altret  0 CARD_CHECKSUM_ERROR
            2262   1     32 Entry   0                              2267   1     34 Call    0
            2268   1     36 Return  0                              2282   1     37 Proc    1
            2319   1     40 Assign  1                              2320   1     43 Assign  1
            2321   1     45 Assign  1                              2322   1     47 Assign  1
            2324   1     51 DoIndx  1                          $$  2325   1     53 Assign  1
            2326   1     60 Assign  1                              2327   1     63 Assign  1
            2328   1     65 Assign  1                          $$  2329   1     70 EndInd  1
            2331   1     77 DoWhil  1                              2333   1    100 Assign  1
            2334   1    102 Assign  1                              2335   1    105 Assign  1
            2336   1    107 Assign  1                              2337   1    111 Assign  1
            2338   1    114 Assign  1                              2339   1    115 EndWhi  1
            2341   1    121 Assign  1                              2342   1    123 Assign  1
            2343   1    126 Return  1                              2359   1    130 Proc    2
            2392   1    131 If      2                              2394   1    134 Do      2
     $$$$$  2395   1    134 Call    2                              2399   1    152 Assign  2
            2400   1    153 Assign  2                              2401   1    155 Assign  2
       $$$  2402   1    157 Assign  2                              2403   1    165 Assign  2
         $  2404   1    170 Assign  2                              2405   1    174 Assign  2
            2406   1    177 Assign  2                              2407   1    201 Assign  2
            2408   1    203 Assign  2                           $  2409   1    205 If      2
            2410   1    211 Do      2                              2411   1    211 Assign  2
            2412   1    213 Call    2                              2413   1    216 Altret  2
            2417   1    220 Return  2                              2436   1    222 Proc    3
            2578   1    223 Assign  3                              2580   1    224 DoIndx  3
       $$$  2581   1    226 Assign  3                         $$$  2582   1    234 Call    3
         $  2586   1    250 EndInd  3                           $  2588   1    257 If      3
            2589   1    265 DoIndx  3                         $$$  2590   1    267 Assign  3
       $$$  2591   1    275 Call    3                         $$$  2595   1    311 EndInd  3
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:46   
            2597   1    326 Return  3

  **** Statement type totals  ****

    30 Assign     7 Call       3 If         6 Return     2 Altret     3 DoIndx
     1 DoWhil     2 Do         3 EndInd     1 EndWhi     4 Proc       3 Entry
     1 Labels

 # major stmts=   52 Code/major= 4.15 # stmts=   65 Code/stmt= 3.32  Point total= 97.7
 Cost/major stmt=  3.5 Cost/stmt=  2.8 Total cost=    186.8

   0-4  $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
   4-6  $$$$$$$
   6-8  $$$$
  8-10  $$$$$$$$$
 10-12
 12-14  $
 14-16
 16-18
 18-20
 20-22
 22-??
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:47   

 **** Variables and constants ****

  ****  Section 000  Data  TOU$CHECKS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 CHECKSUM_BINARY            1-0-0/w UBIN        r     1 CHECKSUM_BINARY

  ****  Structures  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 CHECKSUM_SPLIT
     0-2-0/b UBIN(18)    r         2 LOWER

     1-0-0/w STRC        r     1 CHECKSUM_SPLIT
     1-2-0/b UBIN(18)    r         2 LOWER


  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @CHECKSUM_LOCATION        24-0-0/w PTR         r     1 @CHECKSUM_LOCATION
    14-0-0/w PTR         r     1 @CHECKSUM_LOCATION         3-0-0/w PTR         r     1 @CHECKSUM_SEED
    21-0-0/w PTR         r     1 @CHECKSUM_SEED            11-0-0/w PTR         r     1 @CHECKSUM_SEED
     5-0-0/w PTR         r     1 @CHECKSUM_SIZE            23-0-0/w PTR         r     1 @CHECKSUM_SIZE
    13-0-0/w PTR         r     1 @CHECKSUM_SIZE             4-0-0/w PTR         r     1 @CHECKSUM_START$
    22-0-0/w PTR         r     1 @CHECKSUM_START$          12-0-0/w PTR         r     1 @CHECKSUM_START$
    *0-0-0/w UBIN        r     1 CHECKSUM_LOCATION         *0-0-0/w UBIN        r     1 CHECKSUM_LOCATION
    *0-0-0/w UBIN        r     1 CHECKSUM_LOCATION         *0-0-0/w UBIN        r     1 CHECKSUM_SEED
    *0-0-0/w UBIN        r     1 CHECKSUM_SEED             *0-0-0/w UBIN        r     1 CHECKSUM_SEED
    *0-0-0/w UBIN        r     1 CHECKSUM_SIZE             *0-0-0/w UBIN        r     1 CHECKSUM_SIZE
    *0-0-0/w UBIN        r     1 CHECKSUM_SIZE             *0-0-0/w PTR         r     1 CHECKSUM_START$
    *0-0-0/w PTR         r     1 CHECKSUM_START$           *0-0-0/w PTR         r     1 CHECKSUM_START$
    11-0-0/w UBIN        r     1 CUR#                      27-0-0/w UBIN        r     1 M
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:48   

  ****  Structures  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name

    25-0-0/w STRC(72)    r     1 CHECKSUM
    25-0-0/w STRC        r         2 UPPER
    25-0-0/b UBIN(18)    r          3 UPPER
    25-2-0/b UBIN(18)    r          3 LOWER
    25-0-0/w UBIN        r         2 UH
    26-0-0/w STRC        r         2 LOWER
    26-0-0/b UBIN(18)    r          3 UPPER
    26-0-0/w UBIN        r         2 LH

    15-0-0/w STRC(72)    r     1 CHECKSUM
    15-0-0/w STRC        r         2 UPPER
    15-2-0/b UBIN(18)    r          3 LOWER
    15-0-0/w UBIN        r         2 UH
    16-0-0/w STRC        r         2 LOWER
    16-0-0/b UBIN(18)    r          3 UPPER
    16-0-0/w UBIN        r         2 LH

    *0-0-0/w STRC        r     1 SEED
     0-0-0/b UBIN(18)    r         2 UPPER
     0-2-0/b UBIN(18)    r         2 LOWER


  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w CHAR(84)    r     1 BCD_CARD_

  ****  Structures  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(756)   r     1 BCD_CARD
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:49   
    24-0-0/b UBIN        r         2 CHECKSUM

     0-0-0/w STRC(936)   r     1 BINARY_CARD
     1-0-0/w UBIN        r         2 CHECKSUM

     0-0-0/d STRC(5220)  r     1 DUP
    20-0-0/w UBIN        r         2 MSG_CODE
   100-0-0/d STRC(72)    r         2 BINARY_V
   101-0-0/b PTR         r          3 PTR$
   102-0-0/d STRC(72)    r         2 BCD_V
   103-0-0/b PTR         r          3 PTR$

     0-0-0/w STRC(864)   r     1 OBJECT
    24-2-0/b UBIN(18)    r         2 BINARY_COUNT
    25-0-0/b UBIN(18)    r         2 TOTAL_COUNT
    26-0-0/w UBIN        r         2 DECK_CHECKSUM


  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(84)    r     1 BCD_B(0:199)               0-0-0/w STRC(936)   r     1 BINARY_B(0:1023)

  ****  Structures  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 CHECKSUM_DATA(0:22)
     0-0-0/b UBIN(18)    r         2 UPPER
     0-2-0/b UBIN(18)    r         2 LOWER

     0-0-0/w STRC        r     1 CHECKSUM_DATA(0:22)
     0-0-0/b UBIN(18)    r         2 UPPER
     0-2-0/b UBIN(18)    r         2 LOWER


PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:50   

   Procedure TOU$CHECKS requires 216 words for executable code.
   Procedure TOU$CHECKS requires 28 words of local(AUTO) storage.

    No errors detected in file TOU$CHECKS.:E05TSI    .
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:51   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:52   
          MINI XREF LISTING

BCD_B IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2551**DCL      2590>>ASSIGN
BCD_CARD IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2563**DCL      2572--REDEF
BCD_CARD.BCD IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2564**DCL      2570--REDEF
BCD_CARD.CHECKSUM IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2571**DCL      2591--CALL
BCD_CARD_ IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2572**DCL      2590<<ASSIGN
BINARY_B IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2510**DCL      2581>>ASSIGN
BINARY_CARD IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2524**DCL      2539--REDEF    2581<<ASSIGN
BINARY_CARD.CHECKSUM IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2531**DCL      2582--CALL
BINARY_CARD.DATA IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2533**DCL      2534--REDEF
BINARY_CARD.LBL_SEQ IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2535**DCL      2536--REDEF
BINARY_CARD.WD1 IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2525**DCL      2530--REDEF
CARD_CHECKSUM_ERROR
      2252**LABEL    2244--CALLALT
CHECKSUM.LH IN PROCEDURE CS_CHECK_CARD_CHECKSUM
      2381**DCL      2395<>CALL     2403<<ASSIGN   2403>>ASSIGN   2409>>IF
CHECKSUM.LOWER IN PROCEDURE CS_CHECK_CARD_CHECKSUM
      2378**DCL      2381--REDEF
CHECKSUM.LOWER.UPPER IN PROCEDURE CS_CHECK_CARD_CHECKSUM
      2379**DCL      2400>>ASSIGN   2401<<ASSIGN   2406>>ASSIGN   2408<<ASSIGN
CHECKSUM.UH IN PROCEDURE CS_CHECK_CARD_CHECKSUM
      2377**DCL      2399<<ASSIGN   2405<<ASSIGN   2405>>ASSIGN   2407<<ASSIGN   2407>>ASSIGN
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:53   
CHECKSUM.UPPER IN PROCEDURE CS_CHECK_CARD_CHECKSUM
      2374**DCL      2377--REDEF
CHECKSUM.UPPER.LOWER IN PROCEDURE CS_CHECK_CARD_CHECKSUM
      2376**DCL      2400<<ASSIGN   2408>>ASSIGN
CHECKSUM.LH IN PROCEDURE CS_FORM_CHECKSUM
      2307**DCL      2322<<ASSIGN   2326<<ASSIGN   2326>>ASSIGN   2337<<ASSIGN   2337>>ASSIGN   2342>>ASSIGN
CHECKSUM.LOWER IN PROCEDURE CS_FORM_CHECKSUM
      2304**DCL      2307--REDEF
CHECKSUM.LOWER.UPPER IN PROCEDURE CS_FORM_CHECKSUM
      2305**DCL      2331>>DOWHILE  2333>>ASSIGN   2335<<ASSIGN   2341<<ASSIGN
CHECKSUM.UH IN PROCEDURE CS_FORM_CHECKSUM
      2303**DCL      2320<<ASSIGN   2328<<ASSIGN   2328>>ASSIGN   2334<<ASSIGN   2334>>ASSIGN
CHECKSUM.UPPER IN PROCEDURE CS_FORM_CHECKSUM
      2300**DCL      2303--REDEF
CHECKSUM.UPPER.LOWER IN PROCEDURE CS_FORM_CHECKSUM
      2302**DCL      2341>>ASSIGN
CHECKSUM.UPPER.UPPER IN PROCEDURE CS_FORM_CHECKSUM
      2301**DCL      2331>>DOWHILE  2336>>ASSIGN   2338<<ASSIGN
CHECKSUM_BINARY IN PROCEDURE CS_CHECK_CARD_CHECKSUM
      2388**DCL      2403>>ASSIGN   2405>>ASSIGN   2407>>ASSIGN
CHECKSUM_BINARY IN PROCEDURE CS_FORM_CHECKSUM
      2314**DCL      2320>>ASSIGN   2322>>ASSIGN   2326>>ASSIGN   2328>>ASSIGN   2334>>ASSIGN   2337>>ASSIGN
CHECKSUM_DATA.LOWER IN PROCEDURE CS_CHECK_CARD_CHECKSUM
      2384**DCL      2402>>ASSIGN
CHECKSUM_DATA.UPPER IN PROCEDURE CS_CHECK_CARD_CHECKSUM
      2383**DCL      2404>>ASSIGN
CHECKSUM_DATA.LOWER IN PROCEDURE CS_FORM_CHECKSUM
      2310**DCL      2325>>ASSIGN
CHECKSUM_DATA.UPPER IN PROCEDURE CS_FORM_CHECKSUM
      2309**DCL      2327>>ASSIGN
CHECKSUM_LOCATION
      2054**DCL        45--PROC     2217--ENTRY    2222<>CALL     2239--ENTRY    2244<>CALL     2262--ENTRY
CHECKSUM_LOCATION IN PROCEDURE CS_CHECK_CARD_CHECKSUM
      2369**DCL      2359--PROC     2392>>IF       2409>>IF
CHECKSUM_LOCATION IN PROCEDURE CS_FORM_CHECKSUM
      2295**DCL      2282--PROC     2342<<ASSIGN
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:54   
CHECKSUM_SEED
      2051**DCL        45--PROC     2217--ENTRY    2222<>CALL     2239--ENTRY    2244<>CALL     2262--ENTRY
CHECKSUM_SEED IN PROCEDURE CS_CHECK_CARD_CHECKSUM
      2366**DCL      2359--PROC     2395<>CALL
CHECKSUM_SEED IN PROCEDURE CS_FORM_CHECKSUM
      2289**DCL      2282--PROC     2290--REDEF
CHECKSUM_SIZE
      2053**DCL        45--PROC     2217--ENTRY    2222<>CALL     2239--ENTRY    2244<>CALL     2262--ENTRY
CHECKSUM_SIZE IN PROCEDURE CS_CHECK_CARD_CHECKSUM
      2368**DCL      2359--PROC     2395>>CALL     2402>>ASSIGN   2404>>ASSIGN
CHECKSUM_SIZE IN PROCEDURE CS_FORM_CHECKSUM
      2294**DCL      2282--PROC     2324>>DOINDEX
CHECKSUM_SPLIT IN PROCEDURE CS_CHECK_CARD_CHECKSUM
      2385**DCL      2388--REDEF
CHECKSUM_SPLIT.LOWER IN PROCEDURE CS_CHECK_CARD_CHECKSUM
      2387**DCL      2402<<ASSIGN   2404<<ASSIGN   2406<<ASSIGN
CHECKSUM_SPLIT IN PROCEDURE CS_FORM_CHECKSUM
      2311**DCL      2314--REDEF
CHECKSUM_SPLIT.LOWER IN PROCEDURE CS_FORM_CHECKSUM
      2313**DCL      2319<<ASSIGN   2321<<ASSIGN   2325<<ASSIGN   2327<<ASSIGN   2333<<ASSIGN   2336<<ASSIGN
CHECKSUM_START$
      2052**DCL        45--PROC     2217--ENTRY    2222<>CALL     2239--ENTRY    2244<>CALL     2262--ENTRY
CHECKSUM_START$ IN PROCEDURE CS_CHECK_CARD_CHECKSUM
      2367**DCL      2359--PROC     2382--IMP-PTR  2395<>CALL     2402>>ASSIGN   2404>>ASSIGN
CHECKSUM_START$ IN PROCEDURE CS_FORM_CHECKSUM
      2293**DCL      2282--PROC     2308--IMP-PTR  2325>>ASSIGN   2327>>ASSIGN
CS_CHECK_CARD_CHECKSUM
      2359**PROC     2244--CALL
CS_FORM_CHECKSUM
      2282**PROC     2222--CALL     2395--CALL     2582--CALL     2591--CALL
CS_REFORM_DECK_CHECKSUM
      2436**PROC     2267--CALL
CUR# IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2574**DCL      2580<<DOINDEX  2581>>ASSIGN   2589<<DOINDEX  2590>>ASSIGN
DUP.BCD_V.PTR$
      2141**DCL      2551--IMP-PTR  2590>>ASSIGN
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:55   
DUP.BINARY_V.PTR$
      2136**DCL      2510--IMP-PTR  2581>>ASSIGN
DUP.LOG_V
      2167**DCL      2172--REDEF
DUP.MSG_CODE
      2088**DCL      2411<<ASSIGN
M IN PROCEDURE CS_FORM_CHECKSUM
      2315**DCL      2324<<DOINDEX  2325>>ASSIGN   2327>>ASSIGN
OBJECT.BCD IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2448**DCL      2470--REDEF    2493--REDEF
OBJECT.BINARY_COUNT IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2495**DCL      2580>>DOINDEX  2588>>IF       2589>>DOINDEX
OBJECT.DECK_CHECKSUM IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2498**DCL      2578<<ASSIGN   2582<>CALL     2582<>CALL     2591<>CALL     2591<>CALL
OBJECT.NIO_BCD.X_OF_N IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2481**DCL      2486--REDEF
OBJECT.TOTAL_COUNT IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2496**DCL      2588>>IF       2589>>DOINDEX
SEED.LOWER IN PROCEDURE CS_FORM_CHECKSUM
      2292**DCL      2321>>ASSIGN
SEED.UPPER IN PROCEDURE CS_FORM_CHECKSUM
      2291**DCL      2319>>ASSIGN
TOU$DU_USER_WRITE
      2204**DCL-ENT  2412--CALL
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:56   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:57   
              FULL UREF LISTING

BCD_CARD.BCD.CONTROL IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2565**DCL
BCD_CARD.BCD.DATA IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2567**DCL
BCD_CARD.BCD.LBL IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2568**DCL
BCD_CARD.BCD.SEQ IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2569**DCL
BCD_CARD.BCD.TYPE IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2566**DCL
BCD_CARD.BCD_ IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2570**DCL
BINARY_B.LBL IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2512**DCL
BINARY_B.OBJ IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2511**DCL
BINARY_B.SEQ IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2513**DCL
BINARY_CARD.DATA_CHAR IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2534**DCL
BINARY_CARD.LABEL_ IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2536**DCL
BINARY_CARD.LABEL_.LBL IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2537**DCL
BINARY_CARD.LABEL_.SEQ IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2538**DCL
BINARY_CARD.RELOCATION IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2532**DCL
BINARY_CARD.WD1.ADDRESS IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2529**DCL
BINARY_CARD.WD1.SIZE IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2528**DCL
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:58   
BINARY_CARD.WD1.TYPE IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2526**DCL
BINARY_CARD.WRD_CHAR IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2530**DCL
BINARY_CARD_ IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2539**DCL
BINARY_CARD_.DATA IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2540**DCL
CHECKSUM IN PROCEDURE CS_CHECK_CARD_CHECKSUM
      2373**DCL
CHECKSUM.LOWER.LOWER IN PROCEDURE CS_CHECK_CARD_CHECKSUM
      2380**DCL
CHECKSUM.UPPER.UPPER IN PROCEDURE CS_CHECK_CARD_CHECKSUM
      2375**DCL
CHECKSUM IN PROCEDURE CS_FORM_CHECKSUM
      2299**DCL
CHECKSUM.LOWER.LOWER IN PROCEDURE CS_FORM_CHECKSUM
      2306**DCL
CHECKSUM_DATA IN PROCEDURE CS_CHECK_CARD_CHECKSUM
      2382**DCL
CHECKSUM_DATA IN PROCEDURE CS_FORM_CHECKSUM
      2308**DCL
CHECKSUM_SPLIT.UPPER IN PROCEDURE CS_CHECK_CARD_CHECKSUM
      2386**DCL
CHECKSUM_SPLIT.UPPER IN PROCEDURE CS_FORM_CHECKSUM
      2312**DCL
DUP
      2067**DCL
DUP.BATCH_MODE
      2069**DCL
DUP.BCD_V
      2138**DCL
DUP.BINARY_V
      2133**DCL
DUP.BOTTOM_LINE#
      2105**DCL
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:59   
DUP.BREAK_DISABLED
      2187**DCL
DUP.BREAK_RETURN
      2189**DCL
DUP.BREAK_TERMINATE
      2185**DCL
DUP.CMD$
      2085**DCL
DUP.CPU_TYPE
      2198**DCL
DUP.CURRENT_LINE#
      2103**DCL
DUP.CURRENT_PAGE#
      2101**DCL
DUP.DF
      2144**DCL
DUP.DF.CLOSE_TYPE
      2153**DCL
DUP.DF.ENTERED
      2145**DCL
DUP.DF.FID
      2155**DCL
DUP.DF.FID_LGTH
      2157**DCL
DUP.DF.NO_EXIST
      2147**DCL
DUP.DF.OPEN_TYPE
      2151**DCL
DUP.DF.REPORT_ERROR
      2149**DCL
DUP.DS_V
      2078**DCL
DUP.ERROR_IMAGE
      2107**DCL
DUP.FAULT_ERROR
      2073**DCL
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:60   
DUP.FORCE_NEW_PAGE
      2109**DCL
DUP.HDR_CODE
      2090**DCL
DUP.HOLD_AREA
      2180**DCL
DUP.HOLD_AREA_LGTH
      2182**DCL
DUP.IFAD
      2112**DCL
DUP.IFAD.CONFIG_TAB
      2121**DCL
DUP.IFAD.DEVICE_INPUT
      2117**DCL
DUP.IFAD.DRIVE_NUMBER
      2127**DCL
DUP.IFAD.ENTERED
      2115**DCL
DUP.IFAD.FID
      2129**DCL
DUP.IFAD.FID_LGTH
      2131**DCL
DUP.IFAD.IMU_NUMBER
      2125**DCL
DUP.IFAD.IMU_TAB
      2119**DCL
DUP.IFAD.ME_ALLOWED
      2113**DCL
DUP.IFAD.NUM_VOLUMES
      2123**DCL
DUP.LINE_VFC
      2099**DCL
DUP.LOG
      2160**DCL
DUP.LOG.CATALOG
      2163**DCL
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:61   
DUP.LOG.DECK
      2165**DCL
DUP.LOG.TYPE
      2161**DCL
DUP.LOG_V.PTR$
      2170**DCL
DUP.LOG_V_
      2172**DCL
DUP.MSG_V
      2094**DCL
DUP.MSG_V.PTR$
      2097**DCL
DUP.NUM_LINES
      2092**DCL
DUP.NUM_WORDS
      2076**DCL
DUP.PROCESS_COMPLETE
      2071**DCL
DUP.RESPONSE
      2081**DCL
DUP.RESPONSE_LGTH
      2083**DCL
DUP.SITE_ID
      2196**DCL
DUP.SITE_NAME
      2191**DCL
DUP.SITE_NAME.LGTH
      2192**DCL
DUP.SITE_NAME.TEXT
      2194**DCL
DUP.TEMP
      2174**DCL
DUP.TEMP.CLOSE_TYPE
      2177**DCL
DUP.TEMP.OPEN_TYPE
      2175**DCL
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:62   
OBJECT IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2447**DCL
OBJECT.BCD.ASSEMBLER IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2465**DCL
OBJECT.BCD.CLASS IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2453**DCL
OBJECT.BCD.CONTROL IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2449**DCL
OBJECT.BCD.DATE IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2467**DCL
OBJECT.BCD.DONT_APPLY IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2454**DCL
OBJECT.BCD.DONT_APPLY.CP6 IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2456**DCL
OBJECT.BCD.DONT_APPLY.DPS8000 IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2459**DCL
OBJECT.BCD.DONT_APPLY.DPS90 IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2458**DCL
OBJECT.BCD.FILENAME IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2463**DCL
OBJECT.BCD.GECALL IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2466**DCL
OBJECT.BCD.LBL IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2468**DCL
OBJECT.BCD.LIBRARY IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2451**DCL
OBJECT.BCD.LOAD_TYPE IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2452**DCL
OBJECT.BCD.MODEL IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2462**DCL
OBJECT.BCD.SEQ IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2469**DCL
OBJECT.BCD.TYPE IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2450**DCL
OBJECT.BCD_ IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2493**DCL
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:63   
OBJECT.CHECKSUM IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2499**DCL
OBJECT.DECK# IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2494**DCL
OBJECT.LOAD_SIZE IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2497**DCL
OBJECT.NIO_BCD IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2470**DCL
OBJECT.NIO_BCD.ASSEMBLER IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2487**DCL
OBJECT.NIO_BCD.CLASS IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2475**DCL
OBJECT.NIO_BCD.CONTROL IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2471**DCL
OBJECT.NIO_BCD.DATA IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2477**DCL
OBJECT.NIO_BCD.EQUIP_TYPE IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2479**DCL
OBJECT.NIO_BCD.FILE_NAME IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2480**DCL
OBJECT.NIO_BCD.LBL IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2491**DCL
OBJECT.NIO_BCD.LIBRARY IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2473**DCL
OBJECT.NIO_BCD.LOAD_TYPE IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2474**DCL
OBJECT.NIO_BCD.PRD_NUM_TAB IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2488**DCL
OBJECT.NIO_BCD.PRG_NUM_TAB IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2489**DCL
OBJECT.NIO_BCD.SEQ IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2492**DCL
OBJECT.NIO_BCD.TYPE IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2472**DCL
OBJECT.NIO_BCD.X_OF_N.N IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2485**DCL
PL6.E3A0      #001=TOU$CHECKS File=TOU$CHECKS.:E05TSI                            WED 07/30/97 06:39 Page:64   
OBJECT.NIO_BCD.X_OF_N.X IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2483**DCL
OBJECT.NIO_BCD.X_OF_N_ IN PROCEDURE CS_REFORM_DECK_CHECKSUM
      2486**DCL
SEED IN PROCEDURE CS_FORM_CHECKSUM
      2290**DCL
TOU$CHECKS
        45**PROC
TOU$CHECKSUM
      2217**ENTRY
TOU$CHECK_CARD_CHECKSUM
      2239**ENTRY
TOU$DFU_DF_RD_CATALOG_ENTRY
      2206**DCL-ENT
TOU$DFU_DF_RD_MASTER_ENTRY
      2205**DCL-ENT
TOU$REFORM_DECK_CHECKSUM
      2262**ENTRY
