

14:52 JUL 28 '97 KQ_SUBS_C.:E05SI                                          1    
    1      /*M* KQ_SUBS_C SUBS for COMGROUP QUEUE */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7      /*X* CRM=78,DFC */
    8      /**/
    9      /* MISCELLANEOUS SUBS */
   10      /**/
   11      %SUB FOREVER="WHILE ('1'B)";
   12      %SUB KQ_MCMAX#=3840/*KQ_MCMAX*/;        /* MESSAGE CHUNK MAX (BYTES)        */
   13      %SUB KQ_RDMAX#=4096/*KQ_RDMAX*/;        /* READ MESSAGE MAX  (BYTES)        */
   14      %EQU KQ_MAXSIZEX=5;                     /* Max value for SIZEX in KQ$DBLK   */
   15      %EQU KQ_MPMAX#=500/*KQ_MPMAX*/;         /* MAX MPRIO VALUE FOR TYP OR STA   */
   16      %EQU KQ_AUEP#=%((KQ_MPMAX#+1)*512);     /* MSG PRIO BASE FOR AU EVENTS      */
   17      %EQU KQ_MMPS#=29/*KQ_MMPS*/;            /* Max MBLKs per super-mblk         */
   18      %EQU KQ_BDMAX#=38;                      /* Max number of DSBs to bury       */
   19
   20
   21
   22      /**/
   23      /* MM SUBS */
   24      /**/
   25      %SUB KQM_MDPC#=25/*KQM_MDPC*/;          /* MAX DESCRIPTORS PER CG           */
   26
   27
   28
   29      /**/
   30      /* RBLK STATE */
   31      /**/
   32      %SUB KQRS_RSIP#=0/*KQRS_RSIP*/;         /* READ setup in progress.          */
   33      %SUB KQRS_COMP#=1/*KQRS_COMP*/;         /* Completed                        */
   34      %SUB KQRS_PEND#=2/*KQRS_PEND*/;         /* Pending                          */
   35      %SUB KQRS_XFIP#=3/*KQRS_XFIP*/;         /* Xfer in progress                 */
   36      %SUB KQRS_XFDN#=5/*KQRS_XFDN*/;         /* Xfer done (DCBs only)-           */
   37                                              /* on the way to COMP               */
14:52 JUL 28 '97 KQ_SUBS_C.:E05SI                                          2    
   38      %SUB KQRS_XFIW#=6/*KQRS_XFIW*/;         /* Xfer in KCD$WRITE (TERMs only)   */
   39      %SUB KQRS_UNLA#=7/*KQRS_UNLA*/;         /* In successful UNLATCH            */
   40      %SUB KQRS_NVGT#=8/*KQRS_NVGT*/;         /* Need to VGET                     */
   41      %SUB KQRS_NFET#=9/*KQRS_NFET*/;         /* Need to FETCH                    */
   42
   43
   44
   45      /**/
   46      /* PUT STATES */
   47      /**/
   48      %SUB KQPS_NVG#=2/*KQPS_NVG*/;           /* NEED MMS$VGET                    */
   49      %SUB KQPS_GDN#=3/*KQPS_GDN*/;           /* KIO$RDGO DONE                    */
   50      %SUB KQPS_SIP#=4/*KQPS_SIP*/;           /* SEND IN PROGRESS                 */
   51      %SUB KQPS_DIP#=5/*KQPS_DIP*/;           /* 'DONE' IN PROGRESS               */
   52      %SUB KQPS_IIP#=6/*KQPS_IIP*/;           /* INIT (PUT SETUP) IN PROGRESS     */
   53
   54
   55
   56      /**/
   57      /* PUT ERRORS */
   58      /**/
   59      %SUB KQPE_NOMBLK# =1/*KQPE_NOMBLK */;   /* NO MBLKS                         */
   60      %SUB KQPE_NOBUF#  =2/*KQPE_NOBUF  */;   /* NO BUFFER                        */
   61      %SUB KQPE_BADMTYP#=3/*KQPE_BADMTYP*/;   /* ILLEGAL MSG TYP                  */
   62      %SUB KQPE_NOSTA#  =4/*KQPE_NOSTA  */;   /* ILLEGAL DEST STATION             */
   63      %SUB KQPE_QFUL#   =5/*KQPE_QFUL   */;   /* NO QUEUE SPACE                   */
   64      %SUB KQPE_DISC#   =6/*KQPE_DISC   */;   /* DISCONNECT                       */
   65      %SUB KQPE_NODATA# =7/*KQPE_NODATA */;   /* NO DATA PASSED                   */
   66      %SUB KQPE_ILTR#   =8/*KQPE_ILTR   */;   /* MESSAGE ID later                 */
   67
   68
   69
   70      /**/
   71      /* GET ERRORS */
   72      /**/
   73                                              /* These codes are returned         */
   74                                              /* by KQG$GET and indicate          */
14:52 JUL 28 '97 KQ_SUBS_C.:E05SI                                          3    
   75                                              /* read complete.                   */
   76
   77      %SUB KQGE_QFUL#   =1/*KQGE_QFUL   */;   /* COMGROUP full                    */
   78      %SUB KQGE_BADMTYP#=2/*KQGE_BADMTYP*/;   /* BAD GET MSGTYP                   */
   79      %SUB KQGE_NOSTA#  =3/*KQGE_NOSTA  */;   /* BAD GET STATION                  */
   80      %SUB KQGE_EOF#    =4/*KQGE_EOF    */;   /* EOFNONE & no msgs                */
   81
   82                                              /* These are returned by            */
   83                                              /* by KQG$GET and indicate          */
   84                                              /* 'try again'                      */
   85
   86      %SUB KQGE_NORBLK# =5/*KQGE_NORBLK */;   /* NO RBLKS                         */
   87
   88                                              /* These are returned by            */
   89                                              /* KQG$GET and KCD$WRITE            */
   90
   91      %SUB KQGE_DISC#   =6/*KQGE_DISC   */;   /* DISCONNECTED                     */
   92
   93                                              /* These are returned by            */
   94                                              /* KCD$WRITE                        */
   95
   96      %SUB KQGE_SZ2BIG# =7/*KQGE_SZ2BIG */;   /* SIZE IS TOO BIG                  */
   97      %SUB KQGE_PCW#    =8/*KQGE_PCW    */;   /* WILL CALL PCW                    */
   98      %SUB KQGE_DLTR#   =9/*KQGE_DLTR   */;   /* WILL CALL DONE LATER             */
   99      %SUB KQGE_NGET#   =10/*KQGE_NGET  */;   /* NO NEW GET                       */
  100      %SUB KQGE_NVGT#   =11/*KQGE_NVGT  */;   /* CANT VGET                        */
  101      %SUB KQGE_QCONT#  =12/*KQGE_QCONT */;   /* QUIT CONTINUED MESSAGE           */
  102
  103
  104
  105      /**/
  106      /* TYP values for page and granule headers */
  107      /**/
  108      %EQU KQ_PTYP_DATA=1;                    /* Data granule                     */
  109      %EQU KQ_PTYP_RCVR=2;                    /* Recovery granule                 */
  110      %EQU KQ_PTYP_CTL=3;                     /* Control granule                  */
  111      %EQU KQ_PTYP_BAP=4;                     /* Block Allocation Page            */
14:52 JUL 28 '97 KQ_SUBS_C.:E05SI                                          4    
  112      %EQU KQ_PTYP_SPARE=5;                   /* Spare page                       */
  113
  114
  115
  116      /**/
  117      /* Memory request codes */
  118      /**/
  119      %SUB KQMR_MBLK#=1/*KQMR_MBLK*/;         /* MBLK                             */
  120      %SUB KQMR_RBLK#=2/*KQMR_RBLK*/;         /* RBLK                             */
  121      %SUB KQMR_RBLKT#=3/*KQMR_RBLKT*/;       /* RBLK for TERM                    */
  122      %SUB KQMR_STA#=4/*KQMR_STA*/;           /* STATION                          */
  123      %SUB KQMR_TYP#=5/*KQMR_TYP*/;           /* Message type                     */
  124      %SUB KQMR_ANY#=6/*KQMR_ANY*/;           /* ANY (KQM$GETB)                   */
  125      %SUB KQMR_ANYK#=7/*KQMR_ANYK*/;         /* ANY & kick garb (KQM$GETBK)      */
  126
  127
  128
  129      /**/
  130      /* KQD GET/FETCH ERRORS */
  131      /**/
  132      %EQU KQDE_CREG=1;                       /* Can't do REG                     */
  133      %EQU KQDE_NSPC=2;                       /* No space left in comgroup        */
  134      %EQU KQDE_STMP=3;                       /* Stamp wrong                      */
  135      %EQU KQDE_BDDA=4;                       /* Bad disk address                 */
  136      %EQU KQDE_STATE=5;                      /* DBLK state inconsistent with     */
  137                                              /* request                          */
  138      %EQU KQDE_IOERR=6;                      /* I/O error                        */
  139      %EQU KQDE_ABORT=7;                      /* Abort an in-progress defer block */
  140      %EQU KQDE_UNLOCK=8;                     /* Gate unlock - restart operation  */
  141      %EQU KQDE_BADPARMS=9;                   /* Bad parameters                   */
  142      %EQU KQDE_NDFRBLK=10;                   /* No defer blocks                  */
  143
  144
  145
  146      /**/
  147      /* Garbage collector defer codes */
  148      /**/
14:52 JUL 28 '97 KQ_SUBS_C.:E05SI                                          5    
  149      %SUB KQGD_DMSG0#=1/*KQGD_DMSG0*/;       /* DELMSG awaiting DELDDA(regular)  */
  150      %SUB KQGD_DMSG1#=2/*KQGD_DMSG1*/;       /* DELMSG awaiting DELDDA(super)    */
  151      %SUB KQGD_DMSG2#=3/*KQGD_DMSG2*/;       /* DELMSG waiting on FETCH          */
  152      %SUB KQGD_SQGG0#=4/*KQGD_SQGG0*/;       /* SQUISH GATHER get                */
  153      %SUB KQGD_SQGD0#=5/*KQGD_SQGD0*/;       /* SQUISH GATHER defer blks         */
  154      %SUB KQGD_QFULL#=6/*KQGD_QFULL*/;       /* SQUISH finishing after QFULL     */
  155      %SUB KQGD_SQCF0#=7/*KQGD_SQCF0*/;       /* SQUISH CONCAT fetch              */
  156      %SUB KQGD_SQCF1#=8/*KQGD_SQCF1*/;       /* SQUISH CONCAT fetch              */
  157      %SUB KQGD_SQCD0#=9/*KQGD_SQCD0*/;       /* SQUISH CONCAT defer blks         */
  158      %SUB KQGD_SQCD1#=10/*KQGD_SQCD1*/;      /* SQUISH CONCAT defer blks         */
  159      %SUB KQGD_SQIF0#=11/*KQGD_SQIF0*/;      /* SQUISH INSERT fetch              */
  160      %SUB KQGD_SQIF1#=12/*KQGD_SQIF1*/;      /* SQUISH INSERT fetch              */
  161      %SUB KQGD_SQIF2#=13/*KQGD_SQIF2*/;      /* SQUISH INSERT fetch              */
  162      %SUB KQGD_SQIF3#=14/*KQGD_SQIF3*/;      /* SQUISH INSERT fetch              */
  163      %SUB KQGD_SQID0#=15/*KQGD_SQID0*/;      /* SQUISH INSERT defer blks         */
  164      %SUB KQGD_SQID1#=16/*KQGD_SQID1*/;      /* SQUISH INSERT defer blks         */
  165      %SUB KQGD_SQID2#=17/*KQGD_SQID2*/;      /* SQUISH INSERT defer blks         */
  166      %SUB KQGD_SQID3#=18/*KQGD_SQID3*/;      /* SQUISH INSERT defer blks         */
  167      %SUB KQGD_SQID4#=19/*KQGD_SQID4*/;      /* SQUISH INSERT defer blks         */
  168      %SUB KQGD_SQIG0#=20/*KQGD_SQIG0*/;      /* SQUISH INSERT get                */
  169      %SUB KQGD_DMSG3#=21/*KQGD_DMSG3*/;      /* DELMSG waiting on DELDDA (INSHD) */
  170      %SUB KQGD_QRDWT#=22/*KQGD_QRDWT*/;      /* Waiting on Q reader              */
  171      %SUB KQGD_SRDWT#=23/*KQGD_SRDWT*/;      /* SQUISH waiting on station reader */
  172      %SUB KQGD_SRCVR#=24/*KQGD_SRCVR*/;      /* SQUISH recovery                  */
  173
  174
  175
  176      /**/
  177      /* Garbage collector type codes */
  178      /**/
  179      %SUB KQGT_DMSG#=0/*KQGT_DMSG*/;         /* Delete from DELMSG$ list only    */
  180      %SUB KQGT_COAZ#=1/*KQGT_COAZ*/;         /* Collect only absent & MXACT=0    */
  181      %SUB KQGT_CANS#=2/*KQGT_CANS*/;         /* Collect all; no super            */
  182      %SUB KQGT_CACS#=3/*KQGT_CACS*/;         /* Collect all; collect super       */
  183      %SUB KQGT_MAX# =3/*KQGT_MAX*/;
  184
  185
14:52 JUL 28 '97 KQ_SUBS_C.:E05SI                                          6    
  186
  187      /**/
  188      /* Garbage collector INSERT SPLIT states */
  189      /**/
  190      %SUB KQSP_CBIM0#=01/*KQSP_CBIM0*/;      /* Current blk in memory            */
  191      %SUB KQSP_CBUL#=02/*KQSP_CBUL*/;        /* Current blk unlock               */
  192      %SUB KQSP_NBIM#=03/*KQSP_NBIM*/;        /* New blk in memory                */
  193      %SUB KQSP_NBUL#=04/*KQSP_NBUL*/;        /* New blk unlock                   */
  194      %SUB KQSP_BBIM#=05/*KQSP_BBIM*/;        /* Blink blk in memory              */
  195      %SUB KQSP_BBUL#=06/*KQSP_BBUL*/;        /* Blink blk unlock                 */
  196      %SUB KQSP_CBIM1#=07/*KQSP_CBIM1*/;      /* Current blk in memory            */
  197      %SUB KQSP_FBIM#=08/*KQSP_FBIM*/;        /* Flink blk in memory              */
  198      %SUB KQSP_FBUL#=09/*KQSP_FBUL*/;        /* Flink blk unlock                 */
  199      %SUB KQSP_RLSP#=10/*KQSP_RLSP*/;        /* Release SPLIT list               */
  200      %SUB KQSP_DELD#=11/*KQSP_DELD*/;        /* Delete new blk                   */
  201
  202
  203
  204      /**/
  205      /* KQD DEFER BLOCK CODES */
  206      /**/
  207      %EQU KQDC_FETCH=1;                      /* Fetch                            */
  208      %EQU KQDC_RENEGE=2;                     /* Renege                           */
  209      %EQU KQDC_DEL=3;                        /* Fetch and delete                 */
  210      %EQU KQDC_GET=5;                        /* Get space                        */
  211      %EQU KQDC_WRITE=6;                      /* Write and release page           */
  212      %EQU KQDC_GETFREE=9;                    /* Get page from free pool          */
  213      %EQU KQDC_GETNEW=10;                    /* Get new granule                  */
  214
  215
  216
  217      /**/
  218      /* Super MBLK states */
  219      /**/
  220      %SUB KQSS_IDLE#=0/*KQSS_IDLE*/;         /* Nothing in progress              */
  221      %SUB KQSS_NDFR#=1/*KQSS_NDFR*/;         /* Need to FETCH/DELDDA             */
  222      %SUB KQSS_NMEM#=2/*KQSS_NMEM*/;         /* Need to get memory               */
14:52 JUL 28 '97 KQ_SUBS_C.:E05SI                                          7    
  223      %SUB KQSS_IOIP#=3/*KQSS_IOIP*/;         /* Reading the DBLK                 */
  224      %SUB KQSS_Q4GC#=4/*KQSS_Q4GC*/;         /* Queued for garbage collector     */
  225      %SUB KQSS_Q4EX#=5/*KQSS_Q4EX*/;         /* Queue for execution time         */
  226
  227
  228
  229      /**/
  230      /* Errlog codes */
  231      /**/
  232      %EQU KQELOG_KQD_STATE=1;                /* State error on fetch             */
  233      %EQU KQELOG_KQD_STMP=2;                 /* Stamp error on fetch             */
  234      %EQU KQELOG_KQD_RENEGE=3;               /* Error during renege              */
  235      %EQU KQELOG_KQD_DSTATE=4;               /* State error on delete            */
  236      %EQU KQELOG_KCO_GHDRBAD=7;              /* Gran header clobbered on errcls  */
  237      %EQU KQELOG_KQE_GSTMP=8;                /* Granule has bad stamp            */
  238      %EQU KQELOG_KQR_FTCH=9;                 /* Read/Get fetch err               */
  239      %EQU KQELOG_KQW_CWFTCH=10;              /* Cont write fetch err             */
  240      %EQU KQELOG_KQL_FTCH=11;                /* Super MBLK fetch in KQL          */
  241      %EQU KQELOG_KQS_FTCH=12;                /* Super MBLK fetch in KQS          */
  242      %EQU KQELOG_KQS_BLNK=13;                /* Super MBLK link failure          */
  243
  244
  245
  246      /**/
  247      /* Read Access (for delay list) codes */
  248      /**/
  249      %SUB KQRA_MBLK#=1/*KQRA_MBLK*/;         /* MBLK (message)                   */
  250      %SUB KQRA_RSTA#=2/*KQRA_RSTA*/;         /* Reading station                  */
  251
  252
  253      /**/
  254      /* Codes for TYP field when logging in circular buffer */
  255      /**/
  256      %EQU KQLOG_DCGET=1;                     /*  KQD:  Get, non-deferred         */
  257      %EQU KQLOG_DCGDFR=2;                    /*  KQD:  Deferred get              */
  258      %EQU KQLOG_DCGSAT=3;                    /*  KQD:  Satisfy deferred get      */
  259      %EQU KQLOG_FETCH=4;                     /*  KQD:  Fetch something           */
14:52 JUL 28 '97 KQ_SUBS_C.:E05SI                                          8    
  260      %EQU KQLOG_FTCHDFR=5;                   /*  KQD:  Fetch something not       */
  261                                              /*        in core                   */
  262      %EQU KQLOG_FTCHDONE=6;                  /*  KQD:  Got something that was    */
  263                                              /*        fetched from disk         */
  264      %EQU KQLOG_DFRGO=7;                     /*  KQD:  Call DEFERGO              */
  265      %EQU KQLOG_DFRWAIT=8;                   /*  KQD:  Call DEFERWAIT            */
  266      %EQU KQLOG_DELETE=9;                    /*  KQD:  Call DELETE, UNLOCK, etc. */
  267      %EQU KQLOG_GINIT=10;                    /*  GETP:  Initiate get process     */
  268      %EQU KQLOG_GPROC=11;                    /*  GETP:  Enter GETPROCESS         */
  269      %EQU KQLOG_GTRM=12;                     /*  GETP:  Terminate get process    */
  270      %EQU KQLOG_DCREAD=13;                   /*  DCIO:  Read granule             */
  271      %EQU KQLOG_DCREMP=14;                   /*  DCIO:  Remove page, no write    */
  272      %EQU KQLOG_DCWRITE=15;                  /*  DCIO:  Write page               */
  273      %EQU KQLOG_PUT=16;                      /* KQP: TERM put                    */
  274      %EQU KQLOG_GET=17;                      /* KQG: TERM get                    */
  275      %EQU KQLOG_GETC=18;                     /* KQG: TERM get complete           */
  276      %EQU KQLOG_READ=19;                     /* KQR: DCB  read                   */
  277      %EQU KQLOG_READC=20;                    /* KQR: DCB  read complete          */
  278      %EQU KQLOG_WRITE=21;                    /* KQW: DCB  write                  */
  279      %EQU KQLOG_MGET=22;                     /* KQM: memory get                  */
  280      %EQU KQLOG_MREL=23;                     /* KQM: memory rel                  */
  281      %EQU KQLOG_SFET=24;                     /* KQL: super MBLK fetch            */
  282      %EQU KQLOG_GDELM=25;                    /* KQS: DELMSG processing           */
  283      %EQU KQLOG_GSSQ=26;                     /* KQS: SQUISH begun                */
  284      %EQU KQLOG_GSMCR=27;                    /* KQS: super MBLK created          */
  285      %EQU KQLOG_GCON=28;                     /* KQS: CONCAT                      */
  286      %EQU KQLOG_GINS=29;                     /* KQS: INSERT                      */
  287      %EQU KQLOG_GISP=30;                     /* KQS: INSERT split                */
  288      %EQU KQLOG_DORQ=31;                     /* KCO: DCB open request            */
  289      %EQU KQLOG_DODN=32;                     /* KCO: DCB open done               */
  290      %EQU KQLOG_DCLS=33;                     /* KCO: DCB close                   */
  291      %EQU KQLOG_TCRQ=34;                     /* KCO: TERM connect request        */
  292      %EQU KQLOG_TCDN=35;                     /* KCO: TERM connect done           */
  293      %EQU KQLOG_TDRQ=36;                     /* KQP: TERM disc request           */
  294      %EQU KQLOG_TDDN=37;                     /* KCO: TERM disc done              */
  295      %EQU KQLOG_DFRGET=38;                   /* DFR: Get defer block             */
  296      %EQU KQLOG_DFRREL=39;                   /* DFR: Release defer block         */
14:52 JUL 28 '97 KQ_SUBS_C.:E05SI                                          9    
  297      %EQU KQLOG_GESQ=40;                     /* KQS: SQUISH end                  */
  298      %EQU KQLOG_DCRDEA=41;                   /* KQE: Disk read end-action        */
  299      %EQU KQLOG_DCWREA=42;                   /* KQE: Disk write end-action       */

