VERSION E05

PL6.E3A0      #001=KVF$SND File=KVF$MSC.:E05TSI                                  WED 07/30/97 01:57 Page:1    
        1        1        /*M* KVF$MSC miscellaneous field scanning routines                             */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
        8        8        KVF$SND: PROC;
        9        9
       10       10    1   DCL KHI$DISABLE ENTRY(1);
       11       11    1   DCL KHI$ENABLE ENTRY;
       12       12    1   DCL KVM$SND ENTRY(1) ALTRET;
       13       13
       14       14        %INCLUDE F_ERRORS_C;
       15      254        %INCLUDE KV_ERRORS_C;
       16      314 S      %INCLUDE GU_LCP6_M;
       17      315 S      %INCLUDE KV$GLB;
       18      316 S      %INCLUDE KV$GLBCTX;
       19      317 S      %INCLUDE KV$INT;
       20      318 S      %INCLUDE KV$SND;
       21      319 S      %INCLUDE KV$VDO;
       22      320 S      %INCLUDE KV$VDH;
       23      321 S      %INCLUDE KV_GLBCNS_E;
       24      322
       25      323        %KV_BFRRLSDSP_E;
       26      329        %KV_DATCTRCHRTYP_E;
       27      335        %KV_LINLST_SLCFLDSTT_E;
       28      341        %KV_PTR_STT_E;
       29      356        %KV_SND_FNC_E;
       30      372        %KV_STRTYP_E;
       31      410        %KV_VDOVLP_E;
       32      424        %KV$FLD (STCLASS="BASED(Y@FLD$)");
       33      512        %EQU KV_FLD=CHARTEXT('KV$FLD');
       34      513        %KV$FLDLST (STCLASS="BASED(Y@LSTLIN$)");
       35      537        %EQU KV_FLDLST=CHARTEXT('Y@LIN$->KV$LIN.FLDLST$->KV$FLDLST');
       36      538        %KV$LIN (STCLASS="BASED(Y@LIN$)");
       37      562        %EQU KV_LIN=CHARTEXT('KV$LIN');
PL6.E3A0      #001=KVF$SND File=KVF$MSC.:E05TSI                                  WED 07/30/97 01:57 Page:2    
       38      563        %KV$LINLST;
       39      590        %KV$MVD;
       40      634        %KV$PTR;
       41      677        %KV$SSN;
       42      756        %KV$STR;
       43      843        %KV$VDOVLP_FLDID;
       44      894
       45      895    1   DCL KH_INHLVL UBIN SYMREF;
       46      896
       47      897        %KV$FLD (NAME = KV_FLD, STCLASS = SYMREF READONLY);
       48      985        %KV$SND_DAT (NAME = KV_SND_DAT, STCLASS = SYMREF READONLY);
       49     1104        %KV$VDOVLP_FLDID (NAME=KV_VDOVLP_FLDID, STCLASS=CONSTANT, BYTSIZ=2);
       50     1155        %KV$VDOVLP_KEY (NAME=KV_VDOVLP_KEY, STCLASS=CONSTANT, BYTSIZ=2);
       51     1205
       52     1206        %KV$VDOVLP_ERR (NAME = Y_VDOVLP_ERR_EOF, STCLASS = CONSTANT,
       53     1207         FCG = KV, MID = F, MON = '1'B, ERR# = %E$EOF, SEV = 4);
       54     1304
       55     1305        /*
       56     1306        Current line pointer.
       57     1307        */
       58     1308    1   DCL Y@LIN$ PTR AUTO;
       59     1309        /*
       60     1310        Current field pointer.
       61     1311        */
       62     1312    1   DCL Y@FLD$ PTR AUTO;
       63     1313        /*
       64     1314        Last field pointer (pointer into field list to last field for
       65     1315        this line).
       66     1316        */
       67     1317    1   DCL Y@LSTFLD$ PTR AUTO;
       68     1318        /*
       69     1319        Last line pointer (pointer into line list to the last line
       70     1320        (KV$LIN) entry for this virtual device).
       71     1321        */
       72     1322    1   DCL Y@LSTLIN$ PTR AUTO;
       73     1323
       74     1324    1   DCL Y@INHLVL UBIN;
PL6.E3A0      #001=KVF$SND File=KVF$MSC.:E05TSI                                  WED 07/30/97 01:57 Page:3    
       75     1325        %KV$SND_DAT (NAME = KV@SND_DAT, STCLASS = AUTO);
       76     1444        %KV$VDOVLP_FLDID (NAME = KV@VDOVLP_FLDID, STCLASS = AUTO);
       77     1495        %KV$VDOVLP_KEY (NAME=KV@VDOVLP_KEY, STCLASS=AUTO, LAST=",");
       78     1545    1          2 LIN UBIN BYTE CALIGNED,
       79     1546    1          2 CLM UBIN BYTE CALIGNED,
       80     1547    1          2 * UBIN;                        /* For VLP_ERR redef                  */
       81     1548        %KV$VDOVLP_ERR (NAME=KV@VDOVLP_ERR REDEF KV@VDOVLP_KEY, STCLASS=);
       82     1645        %EJECT;
PL6.E3A0      #001=KVF$SND File=KVF$MSC.:E05TSI                                  WED 07/30/97 01:57 Page:4    
       83     1646    1      KV@SND_DAT = KV_SND_DAT;
       84     1647    1      KV@SND_DAT.DAT__.BYTX = LENGTHC(%KV_FLD) - 1;
       85     1648    1      KV@SND_DAT.DAT__.BFRRLSDSP = %KV_BFRRLSDSP_NON;
       86     1649    1      KV@SND_DAT.VDOVLP.FLDID$ = ADDR(KV@VDOVLP_FLDID);
       87     1650    1      KV@SND_DAT.VDOVLP.KEY$ = ADDR(KV@VDOVLP_KEY);
       88     1651
       89     1652    1      ADDR(KV@VDOVLP_KEY)->KV$VDOVLP_FLDID = KV_VDOVLP_KEY;
       90     1653    1      ADDR(KV@VDOVLP_FLDID)->KV$VDOVLP_FLDID = KV_VDOVLP_FLDID;
       91     1654
       92     1655    1      Y@INHLVL = KH_INHLVL;
       93     1656    1      CALL KHI$DISABLE (Y@INHLVL);
       94     1657
       95     1658    1      Y@LSTLIN$ = PINCRW(KV$PTR.LINLST$, %KV_LINLST.LSTENTWRDX);
       96     1659        %EJECT;
PL6.E3A0      #001=KVF$SND File=KVF$MSC.:E05TSI                                  WED 07/30/97 01:57 Page:5    
       97     1660    1      Y@LIN$ = %KV_LINLST.ONEFLDLIN$;
       98     1661    2      IF %KV_LINLST.ONEFLDWRDX~=0 THEN DO WHILE '1'B;
       99     1662        /*
      100     1663        This loop is iterated for each line in the form
      101     1664        */
      102     1665    3         IF %KV_LIN.FLDLST$~=ADDR(NIL) THEN DO;
      103     1666        /*
      104     1667        There is a field list entry for this line.
      105     1668        */
      106     1669    3            Y@LSTFLD$ = PINCRW(%KV_LIN.FLDLST$, %KV_FLDLST.LSTENTWRDX);
      107     1670    3            Y@FLD$ = PINCRW(%KV_LIN.FLDLST$, SIZEW(KV$FLDLST));
      108     1671    4            DO WHILE Y@FLD$<=Y@LSTFLD$;
      109     1672        /*
      110     1673        This loop is iterated for each field in this line.
      111     1674        */
      112     1675    5               IF %KV_FLD.SND THEN DO;
      113     1676        /*
      114     1677        We're to send the data in this field.
      115     1678        */
      116     1679    5                  KV@SND_DAT.DAT__.ADR$ = ADDR(%KV_FLD);
      117     1680    5                  KV@SND_DAT.DAT__.DATBYTSIZ = %KV_FLD.TXTSIZ;
      118     1681    5                  KV@VDOVLP_FLDID.FLDID = %KV_FLD.ID;
      119     1682    6                  IF KV@VDOVLP_FLDID.FLDID=%KV_LINLST.ERRFLDID THEN DO;
      120     1683        /*
      121     1684           Time to send the activaion info along.
      122     1685        */
      123     1686    6                     KV@SND_DAT.DATCTRCHRTYP = %KV_DATCTRCHRTYP_ACT;
      124     1687    6                     KV@SND_DAT.DATCTRCHR = BINASC(%KV_STR.ERR.VDOTYP);
      125     1688    6                     KV@SND_DAT.ACTPOS = %KV_STR.RE_REDCLM;
      126     1689    6                  END;
      127     1690    6                  ELSE DO;
      128     1691    6                     KV@SND_DAT.DATCTRCHRTYP = %KV_DATCTRCHRTYP_NON;
      129     1692    6                     KV@SND_DAT.ACTPOS = 0;
      130     1693    6                  END;
      131     1694    5                  KV@VDOVLP_KEY.LIN = %KV_LIN.VRTLIN;
      132     1695    5                  KV@VDOVLP_KEY.CLM = %KV_FLD.VRTCLM;
      133     1696    5                  CALL KVM$SND(KV@SND_DAT) ALTRET(DONE_FOR_NOW);
PL6.E3A0      #001=KVF$SND File=KVF$MSC.:E05TSI                                  WED 07/30/97 01:57 Page:6    
      134     1697        /*
      135     1698        Indicate we no longer need to send the field just sent.
      136     1699        */
      137     1700    5                  %KV_FLD.SND = '0'B;
      138     1701    5                  IF NOT %KV_SSN.REDMLT THEN GOTO DONE_FOR_NOW;
      139     1702    5                  KV@SND_DAT.KONCAT = '1'B;
      140     1703    5               END;                        /* END IF %KV_FLD.SND                 */
      141     1704    4               Y@FLD$ = PINCRW(Y@FLD$, %KV_FLD.STRWRDSIZ);
      142     1705    4            END;                           /* END WHILE Y@FLD$ <= Y@LSTFLD$      */
      143     1706    3         END;                         /* END IF %KV_LIN.FLDLST$ ~= ADDR(NIL)     */
      144     1707    2         IF %KV_LINLST.SLCFLDSTT=%KV_LINLST_SLCFLDSTT_ONE THEN EXIT;
      145     1708    2         IF Y@LIN$>=Y@LSTLIN$ THEN EXIT;
      146     1709    2         Y@LIN$ = PINCRW(Y@LIN$, SIZEW(KV$LIN));
      147     1710    2         %KV_LINLST.ONEFLDLIN$ = Y@LIN$;
      148     1711    2      END; /* END DO WHILE Y@LIN$ <= Y@LSTLIN$ */
      149     1712        /*
      150     1713        We're done sending all data to be sent in this form.
      151     1714        Tell the other end we're done.
      152     1715        */
      153     1716    1      KV@SND_DAT = KV_SND_DAT;
      154     1717    1      IF KV@VDOVLP_KEY.LIN~=0              /* Did we send anything already?      */
      155     1718    1      THEN KV@SND_DAT.KONCAT = %KV_SSN.REDMLT;
      156     1719    1      KV@SND_DAT.VDOVLP.ERR$ = ADDR(KV@VDOVLP_ERR);
      157     1720    1      KV@VDOVLP_ERR = Y_VDOVLP_ERR_EOF;
      158     1721    2      IF %KV_STR.ERR.COD~=0 THEN DO;
      159     1722    2         KV@VDOVLP_ERR.ERRCODE.ERR# = %KV_STR.ERR.COD;
      160     1723    2         %KV_STR.ERR.COD = 0;
      161     1724
      162     1725        /* Got an error - report it and default the next RE_REDCLM to where we were. */
      163     1726
      164     1727    1      END; ELSE IF %KV_LINLST.ONEFLDWRDX~=0
      165     1728    1      THEN %KV_STR.RE_REDCLM = 1;
      166     1729
      167     1730        /* No errors, report EOF and default next read normally */
      168     1731
      169     1732    1      ELSE KV@VDOVLP_ERR.ERRCODE.ERR# = %E$NO_FLDSLC;
      170     1733        /*E* ERROR: KVF-E$NO_FLDSLC-E
PL6.E3A0      #001=KVF$SND File=KVF$MSC.:E05TSI                                  WED 07/30/97 01:57 Page:7    
      171     1734             MESSAGE:No input fields selected to read% %UF%.
      172     1735             MESSAGE1:Either no fields were selected before reading% %UF%,
      173     1736                      or all of the selected fields were protected.
      174     1737        */
      175     1738    1      CALL KVM$SND (KV@SND_DAT)
      176     1739    2      WHENRETURN DO;
      177     1740        /*
      178     1741        We sent the end-of-file message successfully.
      179     1742        */
      180     1743    2         %KV_MVD.FRMSCNINH = '0'B;
      181     1744    2      END; /* END WHEN RETURN */
      182     1745    1   DONE_FOR_NOW:;
      183     1746    1      IF Y@INHLVL~=KH_INHLVL THEN CALL KHI$ENABLE;
      184     1747    1   END; /* SUBROUTINE */
      185     1748        %EOD;

PL6.E3A0      #001=KVF$SND File=KVF$MSC.:E05TSI                                  WED 07/30/97 01:57 Page:8    
--  Include file information  --

   KV_ERRORS_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is never referenced.
   KV$SND.:E05TOU  was found in the system file and is referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KVF$SND.

   Procedure KVF$SND requires 324 words for executable code.
   Procedure KVF$SND requires 44 words of local(AUTO) storage.

PL6.E3A0      #001=KVF$SND File=KVF$MSC.:E05TSI                                  WED 07/30/97 01:57 Page:9    

 Object Unit name= KVF$SND                                    File name= KVF$MSC.:E05TOU
 UTS= JUL 30 '97 01:57:45.52 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS      6      6  KVF$SND
    1   Proc  even  none   324    144  KVF$SND

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        0  KVF$SND

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 KHI$DISABLE
         yes           Std       0 KHI$ENABLE
 yes     yes           Std       1 KVM$SND
                       nStd      0 X6A_AUTO_0
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KV$PTR$                               KH_INHLVL                        r    KV_SND_DAT
r    G$ROS$
PL6.E3A0      #001=KVF$SND File=KVF$MSC.:E05TSI                                  WED 07/30/97 01:57 Page:10   


        1        1        /*M* KVF$MSC miscellaneous field scanning routines                             */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
        8        8        KVF$SND: PROC;

      8   1 000000  D380 0000 0000  xent KVF$SND         LNJ,B5   X6A_AUTO_0
          1 000003       002C 0000                       DC       44,0

        9        9
       10       10    1   DCL KHI$DISABLE ENTRY(1);
       11       11    1   DCL KHI$ENABLE ENTRY;
       12       12    1   DCL KVM$SND ENTRY(1) ALTRET;
       13       13
       14       14        %INCLUDE F_ERRORS_C;
       15      254        %INCLUDE KV_ERRORS_C;
       16      314 S      %INCLUDE GU_LCP6_M;
       17      315 S      %INCLUDE KV$GLB;
       18      316 S      %INCLUDE KV$GLBCTX;
       19      317 S      %INCLUDE KV$INT;
       20      318 S      %INCLUDE KV$SND;
       21      319 S      %INCLUDE KV$VDO;
       22      320 S      %INCLUDE KV$VDH;
       23      321 S      %INCLUDE KV_GLBCNS_E;
       24      322
       25      323        %KV_BFRRLSDSP_E;
       26      329        %KV_DATCTRCHRTYP_E;
       27      335        %KV_LINLST_SLCFLDSTT_E;
       28      341        %KV_PTR_STT_E;
       29      356        %KV_SND_FNC_E;
       30      372        %KV_STRTYP_E;
       31      410        %KV_VDOVLP_E;
       32      424        %KV$FLD (STCLASS="BASED(Y@FLD$)");
PL6.E3A0      #001=KVF$SND File=KVF$MSC.:E05TSI                                  WED 07/30/97 01:57 Page:11   
       33      512        %EQU KV_FLD=CHARTEXT('KV$FLD');
       34      513        %KV$FLDLST (STCLASS="BASED(Y@LSTLIN$)");
       35      537        %EQU KV_FLDLST=CHARTEXT('Y@LIN$->KV$LIN.FLDLST$->KV$FLDLST');
       36      538        %KV$LIN (STCLASS="BASED(Y@LIN$)");
       37      562        %EQU KV_LIN=CHARTEXT('KV$LIN');
       38      563        %KV$LINLST;
       39      590        %KV$MVD;
       40      634        %KV$PTR;
       41      677        %KV$SSN;
       42      756        %KV$STR;
       43      843        %KV$VDOVLP_FLDID;
       44      894
       45      895    1   DCL KH_INHLVL UBIN SYMREF;
       46      896
       47      897        %KV$FLD (NAME = KV_FLD, STCLASS = SYMREF READONLY);
       48      985        %KV$SND_DAT (NAME = KV_SND_DAT, STCLASS = SYMREF READONLY);
       49     1104        %KV$VDOVLP_FLDID (NAME=KV_VDOVLP_FLDID, STCLASS=CONSTANT, BYTSIZ=2);
       50     1155        %KV$VDOVLP_KEY (NAME=KV_VDOVLP_KEY, STCLASS=CONSTANT, BYTSIZ=2);
       51     1205
       52     1206        %KV$VDOVLP_ERR (NAME = Y_VDOVLP_ERR_EOF, STCLASS = CONSTANT,
       53     1207         FCG = KV, MID = F, MON = '1'B, ERR# = %E$EOF, SEV = 4);
       54     1304
       55     1305        /*
       56     1306        Current line pointer.
       57     1307        */
       58     1308    1   DCL Y@LIN$ PTR AUTO;
       59     1309        /*
       60     1310        Current field pointer.
       61     1311        */
       62     1312    1   DCL Y@FLD$ PTR AUTO;
       63     1313        /*
       64     1314        Last field pointer (pointer into field list to last field for
       65     1315        this line).
       66     1316        */
       67     1317    1   DCL Y@LSTFLD$ PTR AUTO;
       68     1318        /*
       69     1319        Last line pointer (pointer into line list to the last line
PL6.E3A0      #001=KVF$SND File=KVF$MSC.:E05TSI                                  WED 07/30/97 01:57 Page:12   
       70     1320        (KV$LIN) entry for this virtual device).
       71     1321        */
       72     1322    1   DCL Y@LSTLIN$ PTR AUTO;
       73     1323
       74     1324    1   DCL Y@INHLVL UBIN;
       75     1325        %KV$SND_DAT (NAME = KV@SND_DAT, STCLASS = AUTO);
       76     1444        %KV$VDOVLP_FLDID (NAME = KV@VDOVLP_FLDID, STCLASS = AUTO);
       77     1495        %KV$VDOVLP_KEY (NAME=KV@VDOVLP_KEY, STCLASS=AUTO, LAST=",");
       78     1545    1          2 LIN UBIN BYTE CALIGNED,
       79     1546    1          2 CLM UBIN BYTE CALIGNED,
       80     1547    1          2 * UBIN;                        /* For VLP_ERR redef                  */
       81     1548        %KV$VDOVLP_ERR (NAME=KV@VDOVLP_ERR REDEF KV@VDOVLP_KEY, STCLASS=);
       82     1645        %EJECT;
PL6.E3A0      #001=KVF$SND File=KVF$MSC.:E05TSI                                  WED 07/30/97 01:57 Page:13   
       83     1646    1      KV@SND_DAT = KV_SND_DAT;

   1646   1 000005  AB80 0000 0000  xsym                 LAB,B2   KV_SND_DAT
          1 000008  2C00                                 LDV,R2   0
          1 000009  6C2E                                 LDV,R6   46
          1 00000A  BB87                                 LAB,B3   ,AUTO
          1 00000B  3C1A                                 LDV,R3   26
          1 00000C  0008                                 MMM

       84     1647    1      KV@SND_DAT.DAT__.BYTX = LENGTHC(%KV_FLD) - 1;

   1647   1 00000D  6C0C                                 LDV,R6   12
          1 00000E  EF47 001E                            STR,R6   KV@SND_DAT+17,AUTO

       85     1648    1      KV@SND_DAT.DAT__.BFRRLSDSP = %KV_BFRRLSDSP_NON;

   1648   1 000010  8847 0021                            LBF,'00FF'X       KV@SND_DAT+20,AUTO
   1648   1 000012       00FF

       86     1649    1      KV@SND_DAT.VDOVLP.FLDID$ = ADDR(KV@VDOVLP_FLDID);

   1649   1 000013  EBC7 0024                            LAB,B6   KV@VDOVLP_FLDID,AUTO
          1 000015  EFC7 0016                            STB,B6   KV@SND_DAT+9,AUTO

       87     1650    1      KV@SND_DAT.VDOVLP.KEY$ = ADDR(KV@VDOVLP_KEY);

   1650   1 000017  DBC7 0026                            LAB,B5   KV@VDOVLP_KEY,AUTO
          1 000019  DFC7 0018                            STB,B5   KV@SND_DAT+11,AUTO

       88     1651
       89     1652    1      ADDR(KV@VDOVLP_KEY)->KV$VDOVLP_FLDID = KV_VDOVLP_KEY;

   1652   1 00001B  E800 0000 0002  00                   LDR,R6   KV_VDOVLP_KEY
          1 00001E  7C00                                 LDV,R7   0
          1 00001F  8D47 0026                            SDI      KV@VDOVLP_KEY,AUTO

       90     1653    1      ADDR(KV@VDOVLP_FLDID)->KV$VDOVLP_FLDID = KV_VDOVLP_FLDID;
PL6.E3A0      #001=KVF$SND File=KVF$MSC.:E05TSI                                  WED 07/30/97 01:57 Page:14   

   1653   1 000021  8C80 0000 0000  00                   LDI      KV_VDOVLP_FLDID
          1 000024  8D47 0024                            SDI      KV@VDOVLP_FLDID,AUTO

       91     1654
       92     1655    1      Y@INHLVL = KH_INHLVL;

   1655   1 000026  D800 0000 0000  xsym                 LDR,R5   KH_INHLVL
          1 000029  DF47 000C                            STR,R5   Y@INHLVL,AUTO

       93     1656    1      CALL KHI$DISABLE (Y@INHLVL);

   1656   1 00002B  CBC7 000C                            LAB,B4   Y@INHLVL,AUTO
          1 00002D  CFC7 002A                            STB,B4   KV@VDOVLP_KEY+4,AUTO
          1 00002F  BBC7 002A                            LAB,B3   KV@VDOVLP_KEY+4,AUTO
          1 000031  CBF0 0100                            LAB,B4   256,IMO
          1 000033  E380 0000 0000  xent                 LNJ,B6   KHI$DISABLE
          1 000036       0001                            DC       s:1658,PREL

       94     1657
       95     1658    1      Y@LSTLIN$ = PINCRW(KV$PTR.LINLST$, %KV_LINLST.LSTENTWRDX);

   1658   1 000037  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 00003A  DCC6 000E                            LDB,B5   14,B6
          1 00003C  B845 0001                            LDR,R3   1,B5
          1 00003E  CBB5                                 LAB,B4   ,B5,R3
          1 00003F  CFC7 000A                            STB,B4   Y@LSTLIN$,AUTO

       96     1659        %EJECT;
PL6.E3A0      #001=KVF$SND File=KVF$MSC.:E05TSI                                  WED 07/30/97 01:57 Page:15   
       97     1660    1      Y@LIN$ = %KV_LINLST.ONEFLDLIN$;

   1660   1 000041  BCC5 0002                            LDB,B3   2,B5
          1 000043  BFC7 0004                            STB,B3   Y@LIN$,AUTO

       98     1661    2      IF %KV_LINLST.ONEFLDWRDX~=0 THEN DO WHILE '1'B;

   1661   1 000045  E845 0004                            LDR,R6   4,B5
          1 000047  6901 0092                            BEZ,R6   s:1716,PREL

       99     1662        /*
      100     1663        This loop is iterated for each line in the form
      101     1664        */
      102     1665    3         IF %KV_LIN.FLDLST$~=ADDR(NIL) THEN DO;

   1665   1 000049  ECC7 0004                            LDB,B6   Y@LIN$,AUTO
          1 00004B  8D86                                 CMN      ,B6
          1 00004C  0901 0075                            BE       s:1707,PREL

      103     1666        /*
      104     1667        There is a field list entry for this line.
      105     1668        */
      106     1669    3            Y@LSTFLD$ = PINCRW(%KV_LIN.FLDLST$, %KV_FLDLST.LSTENTWRDX);

   1669   1 00004E  DC86                                 LDB,B5   ,B6
          1 00004F  B845 0001                            LDR,R3   1,B5
          1 000051  CBB5                                 LAB,B4   ,B5,R3
          1 000052  CFC7 0008                            STB,B4   Y@LSTFLD$,AUTO

      107     1670    3            Y@FLD$ = PINCRW(%KV_LIN.FLDLST$, SIZEW(KV$FLDLST));

   1670   1 000054  BBC5 0003                            LAB,B3   3,B5
          1 000056  BFC7 0006                            STB,B3   Y@FLD$,AUTO

      108     1671    4            DO WHILE Y@FLD$<=Y@LSTFLD$;

   1671   1 000058  BDC7 0008                            CMB,B3   Y@LSTFLD$,AUTO
PL6.E3A0      #001=KVF$SND File=KVF$MSC.:E05TSI                                  WED 07/30/97 01:57 Page:16   
          1 00005A  0301 0067                            BG       s:1707,PREL

      109     1672        /*
      110     1673        This loop is iterated for each field in this line.
      111     1674        */
      112     1675    5               IF %KV_FLD.SND THEN DO;

   1675   1 00005C  ECC7 0006                            LDB,B6   Y@FLD$,AUTO
          1 00005E  82C6 0002                            LB,'0008'X        2,B6
          1 000060       0008
          1 000061  0581 0055                            BBF      s:1704,PREL

      113     1676        /*
      114     1677        We're to send the data in this field.
      115     1678        */
      116     1679    5                  KV@SND_DAT.DAT__.ADR$ = ADDR(%KV_FLD);

   1679   1 000063  EFC7 001C                            STB,B6   KV@SND_DAT+15,AUTO

      117     1680    5                  KV@SND_DAT.DAT__.DATBYTSIZ = %KV_FLD.TXTSIZ;

   1680   1 000065  E846 0005                            LDR,R6   5,B6
          1 000067  E570 00FF                            AND,R6   255,IMO
          1 000069  EF47 001F                            STR,R6   KV@SND_DAT+18,AUTO

      118     1681    5                  KV@VDOVLP_FLDID.FLDID = %KV_FLD.ID;

   1681   1 00006B  D806                                 LDR,R5   ,B6
          1 00006C  DF47 0025                            STR,R5   KV@VDOVLP_FLDID+1,AUTO

      119     1682    6                  IF KV@VDOVLP_FLDID.FLDID=%KV_LINLST.ERRFLDID THEN DO;

   1682   1 00006E  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 000071  CCC5 000E                            LDB,B4   14,B5
          1 000073  D944 0007                            CMR,R5   7,B4
          1 000075  0981 0013                            BNE      s:1691,PREL

PL6.E3A0      #001=KVF$SND File=KVF$MSC.:E05TSI                                  WED 07/30/97 01:57 Page:17   
      120     1683        /*
      121     1684           Time to send the activaion info along.
      122     1685        */
      123     1686    6                     KV@SND_DAT.DATCTRCHRTYP = %KV_DATCTRCHRTYP_ACT;

   1686   1 000077  4C04                                 LDV,R4   4
          1 000078  CAC7 000D                            SRM,R4,'000C'X    KV@SND_DAT,AUTO
          1 00007A       000C

      124     1687    6                     KV@SND_DAT.DATCTRCHR = BINASC(%KV_STR.ERR.VDOTYP);

   1687   1 00007B  BCC5 0004                            LDB,B3   4,B5
          1 00007D  B0C3 0014                            LDH,R3   20,B3
          1 00007F  B7C7 0022                            STH,R3   KV@SND_DAT+21,AUTO

      125     1688    6                     KV@SND_DAT.ACTPOS = %KV_STR.RE_REDCLM;

   1688   1 000081  CCC5 0004                            LDB,B4   4,B5
          1 000083  A844 0012                            LDR,R2   18,B4
          1 000085  AF47 0023                            STR,R2   KV@SND_DAT+22,AUTO

      126     1689    6                  END;

   1689   1 000087  0F81 0006                            B        s:1694,PREL

      127     1690    6                  ELSE DO;

      128     1691    6                     KV@SND_DAT.DATCTRCHRTYP = %KV_DATCTRCHRTYP_NON;

   1691   1 000089  8847 000D                            LBF,'000C'X       KV@SND_DAT,AUTO
   1691   1 00008B       000C

      129     1692    6                     KV@SND_DAT.ACTPOS = 0;

   1692   1 00008C  8747 0023                            CL       KV@SND_DAT+22,AUTO

      130     1693    6                  END;
PL6.E3A0      #001=KVF$SND File=KVF$MSC.:E05TSI                                  WED 07/30/97 01:57 Page:18   

      131     1694    5                  KV@VDOVLP_KEY.LIN = %KV_LIN.VRTLIN;

   1694   1 00008E  CCC7 0004                            LDB,B4   Y@LIN$,AUTO
          1 000090  C844 0002                            LDR,R4   2,B4
          1 000092  C7C7 0027                            STH,R4   KV@VDOVLP_KEY+1,AUTO

      132     1695    5                  KV@VDOVLP_KEY.CLM = %KV_FLD.VRTCLM;

   1695   1 000094  C2C6 0002                            LLH,R4   2,B6
          1 000096  CAC7 0027                            SRM,R4,'00FF'X    KV@VDOVLP_KEY+1,AUTO
          1 000098       00FF

      133     1696    5                  CALL KVM$SND(KV@SND_DAT) ALTRET(DONE_FOR_NOW);

   1696   1 000099  BBC7 000D                            LAB,B3   KV@SND_DAT,AUTO
          1 00009B  BFC7 002A                            STB,B3   KV@VDOVLP_KEY+4,AUTO
          1 00009D  BBC7 002A                            LAB,B3   KV@VDOVLP_KEY+4,AUTO
          1 00009F  CBF0 0100                            LAB,B4   256,IMO
          1 0000A1  E380 0000 0000  xent                 LNJ,B6   KVM$SND
          1 0000A4       0090                            DC       s:1744,PREL

      134     1697        /*
      135     1698        Indicate we no longer need to send the field just sent.
      136     1699        */
      137     1700    5                  %KV_FLD.SND = '0'B;

   1700   1 0000A5  ECC7 0006                            LDB,B6   Y@FLD$,AUTO
          1 0000A7  8846 0002                            LBF,'0008'X       2,B6
          1 0000A9       0008

      138     1701    5                  IF NOT %KV_SSN.REDMLT THEN GOTO DONE_FOR_NOW;

   1701   1 0000AA  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 0000AD  CCC5 0002                            LDB,B4   2,B5
          1 0000AF  82C4 0037                            LB,'0008'X        55,B4
          1 0000B1       0008
PL6.E3A0      #001=KVF$SND File=KVF$MSC.:E05TSI                                  WED 07/30/97 01:57 Page:19   
          1 0000B2  0581 0081                            BBF      s:1744,PREL

      139     1702    5                  KV@SND_DAT.KONCAT = '1'B;

   1702   1 0000B4  8947 0022                            LBT,'0080'X       KV@SND_DAT+21,AUTO
   1702   1 0000B6       0080

      140     1703    5               END;                        /* END IF %KV_FLD.SND                 */

      141     1704    4               Y@FLD$ = PINCRW(Y@FLD$, %KV_FLD.STRWRDSIZ);

   1704   1 0000B7  B846 0001                            LDR,R3   1,B6
          1 0000B9  3008                                 SOL,R3   8
          1 0000BA  3068                                 SAR,R3   8
          1 0000BB  DBB6                                 LAB,B5   ,B6,R3
          1 0000BC  DFC7 0006                            STB,B5   Y@FLD$,AUTO

      142     1705    4            END;                           /* END WHILE Y@FLD$ <= Y@LSTFLD$      */

   1705   1 0000BE  DDC7 0008                            CMB,B5   Y@LSTFLD$,AUTO
          1 0000C0  0381 FF9B                            BLE      s:1675,PREL

      143     1706    3         END;                         /* END IF %KV_LIN.FLDLST$ ~= ADDR(NIL)     */

      144     1707    2         IF %KV_LINLST.SLCFLDSTT=%KV_LINLST_SLCFLDSTT_ONE THEN EXIT;

   1707   1 0000C2  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 0000C5  DCC6 000E                            LDB,B5   14,B6
          1 0000C7  E2C5 0005                            LLH,R6   5,B5
          1 0000C9  6D01                                 CMV,R6   1
          1 0000CA  0901 000F                            BE       s:1716,PREL

      145     1708    2         IF Y@LIN$>=Y@LSTLIN$ THEN EXIT;

   1708   1 0000CC  CCC7 0004                            LDB,B4   Y@LIN$,AUTO
          1 0000CE  CDC7 000A                            CMB,B4   Y@LSTLIN$,AUTO
          1 0000D0  0281 0009                            BGE      s:1716,PREL
PL6.E3A0      #001=KVF$SND File=KVF$MSC.:E05TSI                                  WED 07/30/97 01:57 Page:20   

      146     1709    2         Y@LIN$ = PINCRW(Y@LIN$, SIZEW(KV$LIN));

   1709   1 0000D2  BBC4 0004                            LAB,B3   4,B4
          1 0000D4  BFC7 0004                            STB,B3   Y@LIN$,AUTO

      147     1710    2         %KV_LINLST.ONEFLDLIN$ = Y@LIN$;

   1710   1 0000D6  BFC5 0002                            STB,B3   2,B5

      148     1711    2      END; /* END DO WHILE Y@LIN$ <= Y@LSTLIN$ */

   1711   1 0000D8  0F81 FF70                            B        s:1665,PREL

      149     1712        /*
      150     1713        We're done sending all data to be sent in this form.
      151     1714        Tell the other end we're done.
      152     1715        */
      153     1716    1      KV@SND_DAT = KV_SND_DAT;

   1716   1 0000DA  AB80 0000 0000  xsym                 LAB,B2   KV_SND_DAT
          1 0000DD  2C00                                 LDV,R2   0
          1 0000DE  6C2E                                 LDV,R6   46
          1 0000DF  BB87                                 LAB,B3   ,AUTO
          1 0000E0  3C1A                                 LDV,R3   26
          1 0000E1  0008                                 MMM

      154     1717    1      IF KV@VDOVLP_KEY.LIN~=0              /* Did we send anything already?      */

   1717   1 0000E2  E2C7 0027                            LLH,R6   KV@VDOVLP_KEY+1,AUTO
          1 0000E4  6901 000C                            BEZ,R6   s:1719,PREL

      155     1718    1      THEN KV@SND_DAT.KONCAT = %KV_SSN.REDMLT;

   1718   1 0000E6  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 0000E9  DCC6 0002                            LDB,B5   2,B6
          1 0000EB  D845 0037                            LDR,R5   55,B5
PL6.E3A0      #001=KVF$SND File=KVF$MSC.:E05TSI                                  WED 07/30/97 01:57 Page:21   
          1 0000ED  5004                                 SOL,R5   4
          1 0000EE  DAC7 0022                            SRM,R5,'0080'X    KV@SND_DAT+21,AUTO
          1 0000F0       0080

      156     1719    1      KV@SND_DAT.VDOVLP.ERR$ = ADDR(KV@VDOVLP_ERR);

   1719   1 0000F1  EBC7 0026                            LAB,B6   KV@VDOVLP_KEY,AUTO
          1 0000F3  EFC7 0014                            STB,B6   KV@SND_DAT+7,AUTO

      157     1720    1      KV@VDOVLP_ERR = Y_VDOVLP_ERR_EOF;

   1720   1 0000F5  AB80 0000 0000  00                   LAB,B2   KV_VDOVLP_FLDID
          1 0000F8  2C06                                 LDV,R2   6
          1 0000F9  6C06                                 LDV,R6   6
          1 0000FA  BB87                                 LAB,B3   ,AUTO
          1 0000FB  3C4C                                 LDV,R3   76
          1 0000FC  0008                                 MMM

      158     1721    2      IF %KV_STR.ERR.COD~=0 THEN DO;

   1721   1 0000FD  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 000100  DCC6 0004                            LDB,B5   4,B6
          1 000102  E845 0013                            LDR,R6   19,B5
          1 000104  6901 000B                            BEZ,R6   s:1727+2,PREL

      159     1722    2         KV@VDOVLP_ERR.ERRCODE.ERR# = %KV_STR.ERR.COD;

   1722   1 000106  6003                                 SOL,R6   3
          1 000107  EAC7 0028                            SRM,R6,'FFF8'X    KV@VDOVLP_KEY+2,AUTO
          1 000109       FFF8

      160     1723    2         %KV_STR.ERR.COD = 0;

   1723   1 00010A  DCC6 0004                            LDB,B5   4,B6
          1 00010C  8745 0013                            CL       19,B5

      161     1724
PL6.E3A0      #001=KVF$SND File=KVF$MSC.:E05TSI                                  WED 07/30/97 01:57 Page:22   
      162     1725        /* Got an error - report it and default the next RE_REDCLM to where we were. */
      163     1726
      164     1727    1      END; ELSE IF %KV_LINLST.ONEFLDWRDX~=0

   1727   1 00010E  0F81 0011                            B        s:1738,PREL

   1727   1 000110  CCC6 000E                            LDB,B4   14,B6
          1 000112  D844 0004                            LDR,R5   4,B4
          1 000114  5901 0006                            BEZ,R5   s:1732,PREL

      165     1728    1      THEN %KV_STR.RE_REDCLM = 1;

   1728   1 000116  4C01                                 LDV,R4   1
          1 000117  CF45 0012                            STR,R4   18,B5
          1 000119  0F81 0006                            B        s:1738,PREL

      166     1729
      167     1730        /* No errors, report EOF and default next read normally */
      168     1731
      169     1732    1      ELSE KV@VDOVLP_ERR.ERRCODE.ERR# = %E$NO_FLDSLC;

   1732   1 00011B  C870 2BD8                            LDR,R4   11224,IMO
          1 00011D  CAC7 0028                            SRM,R4,'FFF8'X    KV@VDOVLP_KEY+2,AUTO
          1 00011F       FFF8

      170     1733        /*E* ERROR: KVF-E$NO_FLDSLC-E
      171     1734             MESSAGE:No input fields selected to read% %UF%.
      172     1735             MESSAGE1:Either no fields were selected before reading% %UF%,
      173     1736                      or all of the selected fields were protected.
      174     1737        */
      175     1738    1      CALL KVM$SND (KV@SND_DAT)

   1738   1 000120  DBC7 000D                            LAB,B5   KV@SND_DAT,AUTO
          1 000122  DFC7 002A                            STB,B5   KV@VDOVLP_KEY+4,AUTO
          1 000124  BBC7 002A                            LAB,B3   KV@VDOVLP_KEY+4,AUTO
          1 000126  CBF0 0100                            LAB,B4   256,IMO
          1 000128  E380 0000 0000  xent                 LNJ,B6   KVM$SND
PL6.E3A0      #001=KVF$SND File=KVF$MSC.:E05TSI                                  WED 07/30/97 01:57 Page:23   
          1 00012B       0009                            DC       s:1744,PREL

      176     1739    2      WHENRETURN DO;

      177     1740        /*
      178     1741        We sent the end-of-file message successfully.
      179     1742        */
      180     1743    2         %KV_MVD.FRMSCNINH = '0'B;

   1743   1 00012C  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 00012F  DCC6 0006                            LDB,B5   6,B6
          1 000131  8845 0016                            LBF,'0010'X       22,B5
          1 000133       0010

      181     1744    2      END; /* END WHEN RETURN */

   1727   1                              DONE_FOR_NOW    null
      182     1745    1   DONE_FOR_NOW:;
      183     1746    1      IF Y@INHLVL~=KH_INHLVL THEN CALL KHI$ENABLE;

   1746   1 000134  E847 000C            DONE_FOR_NOW    LDR,R6   Y@INHLVL,AUTO
          1 000136  E900 0000 0000  xsym                 CMR,R6   KH_INHLVL
          1 000139  0901 0007                            BE       s:1747,PREL

   1746   1 00013B  CBF0 0000                            LAB,B4   0,IMO
          1 00013D  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          1 000140       0001                            DC       s:1747,PREL

      184     1747    1   END; /* SUBROUTINE */

   1747   1 000141  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      185     1748        %EOD;

PL6.E3A0      #001=KVF$SND File=KVF$MSC.:E05TSI                                  WED 07/30/97 01:57 Page:24   
--  Include file information  --

   KV_ERRORS_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is never referenced.
   KV$SND.:E05TOU  was found in the system file and is referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KVF$SND.
PL6.E3A0      #001=KVF$SND File=KVF$MSC.:E05TSI                                  WED 07/30/97 01:57 Page:25   

 **** Variables and constants ****

  ****  Section 000 RoData KVF$SND

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(32)    r     1 KV_VDOVLP_FLDID            2-0-0/w STRC(16)    r     1 KV_VDOVLP_KEY
     3-0-0/w STRC(48)    r     1 Y_VDOVLP_ERR_EOF

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     D-0-0/w STRC(368)   r     1 KV@SND_DAT                26-0-0/w STRC(48)    r     1 KV@VDOVLP_ERR
    24-0-0/w STRC(32)    r     1 KV@VDOVLP_FLDID           26-0-0/w STRC(48)    r     1 KV@VDOVLP_KEY
     6-0-0/w PTR         r     1 Y@FLD$                     C-0-0/w UBIN(16)    r     1 Y@INHLVL
     4-0-0/w PTR         r     1 Y@LIN$                     8-0-0/w PTR         r     1 Y@LSTFLD$
     A-0-0/w PTR         r     1 Y@LSTLIN$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(16)    r     1 KH_INHLVL                  0-0-0/w PTR         r     1 KV$PTR$
     0-0-0/w STRC(368)   r     1 KV_SND_DAT

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(104)   r     1 KV$FLD                     0-0-0/w STRC(48)    r     1 KV$FLDLST
     0-0-0/w STRC(64)    r     1 KV$LIN                     0-0-0/w STRC(128)   r     1 KV$LINLST
     0-0-0/w STRC(512)   r     1 KV$MVD                     0-0-0/w STRC(480)   r     1 KV$PTR
PL6.E3A0      #001=KVF$SND File=KVF$MSC.:E05TSI                                  WED 07/30/97 01:57 Page:26   
     0-0-0/w STRC(1024)  r     1 KV$SSN                     0-0-0/w STRC(512)   r     1 KV$STR
     0-0-0/w STRC(32)    r     1 KV$VDOVLP_FLDID


   Procedure KVF$SND requires 324 words for executable code.
   Procedure KVF$SND requires 44 words of local(AUTO) storage.
PL6.E3A0      #001=KVF$SND File=KVF$MSC.:E05TSI                                  WED 07/30/97 01:57 Page:27   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KVF$SND File=KVF$MSC.:E05TSI                                  WED 07/30/97 01:57 Page:28   
          MINI XREF LISTING

DONE_FOR_NOW
      1727**LABEL    1696--CALLALT  1701--GOTO
KHI$DISABLE
        10**DCL-ENT  1656--CALL
KHI$ENABLE
        11**DCL-ENT  1746--CALL
KH_INHLVL
       895**DCL      1655>>ASSIGN   1746>>IF
KV$FLD
       445**DCL      1647--ASSIGN   1679--ASSIGN
KV$FLD.ID
       445**DCL      1681>>ASSIGN
KV$FLD.SND
       447**DCL      1675>>IF       1700<<ASSIGN
KV$FLD.STRWRDSIZ
       445**DCL      1704>>ASSIGN
KV$FLD.TXTSIZ
       504**DCL      1680>>ASSIGN
KV$FLD.VRTCLM
       446**DCL      1695>>ASSIGN
KV$FLDLST
       534**DCL      1670--ASSIGN
KV$FLDLST.LSTENTWRDX
       534**DCL      1669>>ASSIGN
KV$LIN
       559**DCL      1709--ASSIGN
KV$LIN.FLDLST$
       559**DCL      1665>>IF       1669>>ASSIGN   1669>>ASSIGN   1670>>ASSIGN
KV$LIN.VRTLIN
       559**DCL      1694>>ASSIGN
KV$LINLST.ERRFLDID
       587**DCL      1682>>IF
PL6.E3A0      #001=KVF$SND File=KVF$MSC.:E05TSI                                  WED 07/30/97 01:57 Page:29   
KV$LINLST.LSTENTWRDX
       584**DCL      1658>>ASSIGN
KV$LINLST.ONEFLDLIN$
       585**DCL      1660>>ASSIGN   1710<<ASSIGN
KV$LINLST.ONEFLDWRDX
       585**DCL      1661>>IF       1727>>IF
KV$LINLST.SLCFLDSTT
       586**DCL      1707>>IF
KV$MVD.FRMSCNINH
       621**DCL      1743<<ASSIGN
KV$PTR.INPCNDPND
       661**DCL       670--REDEF     674--REDEF
KV$PTR.LINLST$
       657**DCL       658--REDEF    1658>>ASSIGN   1658>>ASSIGN   1660>>ASSIGN   1661>>IF       1682>>IF
      1707>>IF       1710>>ASSIGN   1727>>IF
KV$PTR.MVD$
       656**DCL      1743>>ASSIGN
KV$PTR.SSN$
       655**DCL      1701>>IF       1718>>ASSIGN
KV$PTR.STR$
       655**DCL      1687>>ASSIGN   1688>>ASSIGN   1721>>IF       1722>>ASSIGN   1723>>ASSIGN   1728>>ASSIGN
KV$PTR$
       649**DCL       655--IMP-PTR  1658>>ASSIGN   1658>>ASSIGN   1660>>ASSIGN   1661>>IF       1682>>IF
      1687>>ASSIGN   1688>>ASSIGN   1701>>IF       1707>>IF       1710>>ASSIGN   1718>>ASSIGN   1721>>IF
      1722>>ASSIGN   1723>>ASSIGN   1727>>IF       1728>>ASSIGN   1743>>ASSIGN
KV$SSN.REDMLT
       751**DCL      1701>>IF       1718>>ASSIGN
KV$SSN.REDRSPCNT
       706**DCL       707--REDEF
KV$STR.ERR.COD
       831**DCL      1721>>IF       1722>>ASSIGN   1723<<ASSIGN
KV$STR.ERR.VDOTYP
       831**DCL      1687>>ASSIGN
KV$STR.RE_REDCLM
       807**DCL      1688>>ASSIGN   1728<<ASSIGN
KV$VDOVLP_FLDID
PL6.E3A0      #001=KVF$SND File=KVF$MSC.:E05TSI                                  WED 07/30/97 01:57 Page:30   
       878**DCL      1652<<ASSIGN   1653<<ASSIGN
KV@SND_DAT
      1339**DCL      1646<<ASSIGN   1696<>CALL     1716<<ASSIGN   1738<>CALL
KV@SND_DAT.ACTPOS
      1442**DCL      1688<<ASSIGN   1692<<ASSIGN
KV@SND_DAT.DATCTRCHR
      1441**DCL      1687<<ASSIGN
KV@SND_DAT.DATCTRCHRTYP
      1377**DCL      1686<<ASSIGN   1691<<ASSIGN
KV@SND_DAT.DAT__.ADR$
      1437**DCL      1679<<ASSIGN
KV@SND_DAT.DAT__.BFRRLSDSP
      1439**DCL      1648<<ASSIGN
KV@SND_DAT.DAT__.BYTX
      1437**DCL      1647<<ASSIGN
KV@SND_DAT.DAT__.DATBYTSIZ
      1437**DCL      1680<<ASSIGN
KV@SND_DAT.KONCAT
      1441**DCL      1702<<ASSIGN   1718<<ASSIGN
KV@SND_DAT.VDOVLP
      1407**DCL      1410--REDEF
KV@SND_DAT.VDOVLP.ERR$
      1408**DCL      1719<<ASSIGN
KV@SND_DAT.VDOVLP.FLDID$
      1408**DCL      1649<<ASSIGN
KV@SND_DAT.VDOVLP.KEY$
      1409**DCL      1650<<ASSIGN
KV@VDOVLP_ERR
      1583**DCL      1719--ASSIGN   1720<<ASSIGN
KV@VDOVLP_ERR.ERRCODE.ERR#
      1641**DCL      1722<<ASSIGN   1732<<ASSIGN
KV@VDOVLP_FLDID
      1479**DCL      1649--ASSIGN   1653--ASSIGN
KV@VDOVLP_FLDID.FLDID
      1493**DCL      1681<<ASSIGN   1682>>IF
KV@VDOVLP_KEY
PL6.E3A0      #001=KVF$SND File=KVF$MSC.:E05TSI                                  WED 07/30/97 01:57 Page:31   
      1530**DCL      1583--REDEF    1650--ASSIGN   1652--ASSIGN
KV@VDOVLP_KEY.CLM
      1546**DCL      1695<<ASSIGN
KV@VDOVLP_KEY.LIN
      1545**DCL      1694<<ASSIGN   1717>>IF
KVM$SND
        12**DCL-ENT  1696--CALL     1738--CALL
KV_SND_DAT
       999**DCL      1646>>ASSIGN   1716>>ASSIGN
KV_SND_DAT.VDOVLP
      1067**DCL      1070--REDEF
KV_VDOVLP_FLDID
      1139**DCL      1653>>ASSIGN
KV_VDOVLP_KEY
      1190**DCL      1652>>ASSIGN
Y@FLD$
      1312**DCL       445--IMP-PTR  1670<<ASSIGN   1671>>DOWHILE  1675>>IF       1679>>ASSIGN   1680>>ASSIGN
      1681>>ASSIGN   1695>>ASSIGN   1700>>ASSIGN   1704<<ASSIGN   1704>>ASSIGN   1704>>ASSIGN
Y@INHLVL
      1324**DCL      1655<<ASSIGN   1656<>CALL     1746>>IF
Y@LIN$
      1308**DCL       559--IMP-PTR  1660<<ASSIGN   1665>>IF       1669>>ASSIGN   1669>>ASSIGN   1670>>ASSIGN
      1694>>ASSIGN   1708>>IF       1709<<ASSIGN   1709>>ASSIGN   1710>>ASSIGN
Y@LSTFLD$
      1317**DCL      1669<<ASSIGN   1671>>DOWHILE
Y@LSTLIN$
      1322**DCL       534--IMP-PTR  1658<<ASSIGN   1708>>IF
Y_VDOVLP_ERR_EOF
      1242**DCL      1720>>ASSIGN

PL6.E3A0      #002=KVF$FNDFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:58 Page:32   
      186        1        /*T***********************************************************/
      187        2        /*T*                                                         */
      188        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      189        4        /*T*                                                         */
      190        5        /*T***********************************************************/
      191        6        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
      192        7        KVF$FNDFLD: PROC ALTRET;
      193        8
      194        9        /*F* NAME: KVF$FNDFLD.
      195       10             DESCRIPTION:
      196       11           The purpose of this routine is to setup the KV$PTR structure with
      197       12           pointers to a field whose coordinates within the mvd are passed
      198       13           in KV$PTR.VRTLIN and KV$PTR.VRTCLM. In addition, KV$PTR.STT is
      199       14           setup to indicate whether or not we found the field and where
      200       15           we found the field (at the beggining of the line, the end of the
      201       16           line....etc). If the field cannot be located, KV$PTR.FLD$ is
      202       17           setup to indicate where the field should be inserted in the field
      203       18           list buffer, and KVF$FNDFLD ALTRETURNS.                                    */
      204       19
      205       20 S      %INCLUDE KV$GLB;
      206       21 S      %INCLUDE KV$GLBCTX;
      207       22 S      %INCLUDE KV_GLBCNS_E;
      208       23 S      %INCLUDE KV$INT;
      209       24
      210       25        %KV$FLD;
      211      113        %KV$FLDLST;
      212      137        %KV$LIN;
      213      161        %KV$MVD;
      214      205        %KV_PTR_STT_E;
      215      220        %KV$PTR;
      216      263        %KV$SRD;
      217      538        %KV$LINLST;
      218      565
      219      566        /* Init the status field                                                      */
      220      567
      221      568    1      KV$PTR.STT = 0;
      222      569
PL6.E3A0      #002=KVF$FNDFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:58 Page:33   
      223      570        /* Verfiy that VRTLIN and VRTCLM are within bounds of the current mvd         */
      224      571
      225      572    1      IF (KV$PTR.VRTLIN > %KV_SRD.MINLNG)
      226      573    2        OR (KV$PTR.VRTLIN <= 0) THEN DO;
      227      574    2         KV$PTR.STT = %KV_PTR_STT_ILGLIN;
      228      575    2         ALTRETURN;
      229      576    2      END; /* IF */
      230      577
      231      578    1      IF (KV$PTR.VRTCLM > %KV_SRD.WDT)
      232      579    2        OR (KV$PTR.VRTCLM <= 0) THEN DO;
      233      580    2         KV$PTR.STT = %KV_PTR_STT_ILGCLM;
      234      581    2         ALTRETURN;
      235      582    2      END; /* IF */
      236      583
      237      584        /* Set up the line list pointer before we begin                               */
      238      585
      239      586    1      KV$PTR.LINLST$ = %KV_MVD.LINLST$;
      240      587
      241      588        /* Get to the proper line list entry                                          */
      242      589
      243      590    1      KV$PTR.LIN$ = PINCRW(KV$PTR.LINLST$, SIZEW(KV$LINLST) +
      244      591    1        ((KV$PTR.VRTLIN - 1) * SIZEW(KV$LIN)));
      245      592
      246      593        /* Check to see if there are any fields on this line. If there
      247      594           arent, setup KV$PTR to indicate a null field list and return.              */
      248      595
      249      596    1      KV$PTR.STT = %KV_PTR_STT_NO_FLD;
      250      597    1      KV$PTR.FLDWRDX = SIZEW(KV$FLDLST);
      251      598    1      KV$PTR.FLDLST$ = %KV_LIN.FLDLST$;
      252      599    2      IF (KV$PTR.FLDLST$ = ADDR(NIL)) THEN DO;
      253      600    2         KV$PTR.FLD$ = ADDR(NIL);
      254      601    2         ALTRETURN;
      255      602    2      END; /* IF */
      256      603    1      KV$PTR.FLD$ = PINCRW(KV$PTR.FLDLST$, SIZEW(KV$FLDLST));
      257      604    2      IF (%KV_FLDLST.LSTENTWRDX = 0) THEN DO;
      258      605    2         ALTRETURN;
      259      606    2      END; /* IF */
PL6.E3A0      #002=KVF$FNDFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:58 Page:34   
      260      607
      261      608        /* Setup FLDLST$ and init FLDWRDX and FLD$ for a loop search of this
      262      609           field list buffer                                                          */
      263      610
      264      611    1      KV$PTR.FLDWRDX = %KV_FLDLST.LSTENTWRDX;
      265      612    1      KV$PTR.STT = %KV_PTR_STT_AFTLSTFLD;
      266      613
      267      614        /* The following loop searches down the field list buffer looking
      268      615           to see where the given field is or where it belongs                        */
      269      616
      270      617    2      DO WHILE ('1'B);                     /* LOOP START                         */
      271      618
      272      619    2         KV$PTR.FLD$ = PINCRW(KV$PTR.FLDLST$, KV$PTR.FLDWRDX);
      273      620
      274      621        /* If this is the field we are looking for, say we found the field            */
      275      622
      276      623    3         IF (%KV_FLD.VRTCLM = KV$PTR.VRTCLM) THEN DO;
      277      624    3            KV$PTR.STT = %KV_PTR_STT_IN_FLDCLM1;
      278      625    3            RETURN;
      279      626    3         END;                              /* IF                                 */
      280      627
      281      628        /* See if we have passed the column we are looking for                        */
      282      629
      283      630    3         IF (%KV_FLD.VRTCLM < KV$PTR.VRTCLM) THEN DO;
      284      631
      285      632        /* See if we are inside this field                                            */
      286      633
      287      634    4            IF KV$PTR.VRTCLM>=%KV_FLD.VRTCLM+%KV_FLD.WDT THEN DO;
      288      635    4               KV$PTR.FLDWRDX = KV$PTR.FLDWRDX + %KV_FLD.STRWRDSIZ;
      289      636    4               KV$PTR.FLD$ = PINCRW(KV$PTR.FLDLST$, KV$PTR.FLDWRDX);
      290      637    4            END; ELSE DO;
      291      638    4               KV$PTR.STT = %KV_PTR_STT_IN_FLDCLMN;
      292      639    4            END;                           /* IF                                 */
      293      640    3            ALTRETURN;
      294      641    3         END;                              /* IF                                 */
      295      642
      296      643        /* Search next field                                                          */
PL6.E3A0      #002=KVF$FNDFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:58 Page:35   
      297      644
      298      645    3         IF KV$PTR.FLDWRDX<=SIZEW(KV$FLDLST) THEN DO;
      299      646    3            KV$PTR.STT = %KV_PTR_STT_BFRFRSFLD;
      300      647    3            ALTRETURN;
      301      648    3         END;                              /* IF                                 */
      302      649    2         KV$PTR.FLDWRDX = KV$PTR.FLDWRDX - %KV_FLD.PRVSTRWRDSIZ;
      303      650    2         KV$PTR.STT = %KV_PTR_STT_BTWFLD;
      304      651    2      END; /* LOOP */
      305      652    1   END; /* SUBROUTINE */
      306      653        %EOD;

PL6.E3A0      #002=KVF$FNDFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:58 Page:36   
--  Include file information  --

   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is never referenced.
   KV$USR.:E05TOU  was found in the system file and is never referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KVF$FNDFLD.

   Procedure KVF$FNDFLD requires 180 words for executable code.
   Procedure KVF$FNDFLD requires 6 words of local(AUTO) storage.

PL6.E3A0      #002=KVF$FNDFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:58 Page:37   

 Object Unit name= KVF$FNDFLD                                 File name= KVF$MSC.:E05TOU
 UTS= JUL 30 '97 01:58:16.72 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   180     B4  KVF$FNDFLD

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        0  KVF$FNDFLD

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X6A_AUTO_0
                       nStd      0 X6A_AALT
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KV$PTR$                          r    G$ROS$
PL6.E3A0      #002=KVF$FNDFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:58 Page:38   


      186        1        /*T***********************************************************/
      187        2        /*T*                                                         */
      188        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      189        4        /*T*                                                         */
      190        5        /*T***********************************************************/
      191        6        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
      192        7        KVF$FNDFLD: PROC ALTRET;

      7   0 000000  D380 0000 0000  xent KVF$FNDFLD      LNJ,B5   X6A_AUTO_0
          0 000003       0006 0000                       DC       6,0

      193        8
      194        9        /*F* NAME: KVF$FNDFLD.
      195       10             DESCRIPTION:
      196       11           The purpose of this routine is to setup the KV$PTR structure with
      197       12           pointers to a field whose coordinates within the mvd are passed
      198       13           in KV$PTR.VRTLIN and KV$PTR.VRTCLM. In addition, KV$PTR.STT is
      199       14           setup to indicate whether or not we found the field and where
      200       15           we found the field (at the beggining of the line, the end of the
      201       16           line....etc). If the field cannot be located, KV$PTR.FLD$ is
      202       17           setup to indicate where the field should be inserted in the field
      203       18           list buffer, and KVF$FNDFLD ALTRETURNS.                                    */
      204       19
      205       20 S      %INCLUDE KV$GLB;
      206       21 S      %INCLUDE KV$GLBCTX;
      207       22 S      %INCLUDE KV_GLBCNS_E;
      208       23 S      %INCLUDE KV$INT;
      209       24
      210       25        %KV$FLD;
      211      113        %KV$FLDLST;
      212      137        %KV$LIN;
      213      161        %KV$MVD;
      214      205        %KV_PTR_STT_E;
      215      220        %KV$PTR;
      216      263        %KV$SRD;
      217      538        %KV$LINLST;
PL6.E3A0      #002=KVF$FNDFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:58 Page:39   
      218      565
      219      566        /* Init the status field                                                      */
      220      567
      221      568    1      KV$PTR.STT = 0;

    568   0 000005  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 000008  87C6 001D                            CLH      29,B6

      222      569
      223      570        /* Verfiy that VRTLIN and VRTCLM are within bounds of the current mvd         */
      224      571
      225      572    1      IF (KV$PTR.VRTLIN > %KV_SRD.MINLNG)

    572   0 00000A  DCC6 000A                            LDB,B5   10,B6
          0 00000C  E845 001E                            LDR,R6   30,B5
          0 00000E  E570 00FF                            AND,R6   255,IMO
          0 000010  E946 0019                            CMR,R6   25,B6
          0 000012  0801 0005                            BAL      s:574,PREL
          0 000014  D846 0019                            LDR,R5   25,B6
          0 000016  5A01 0007                            BGZ,R5   s:578,PREL

      226      573    2        OR (KV$PTR.VRTLIN <= 0) THEN DO;

      227      574    2         KV$PTR.STT = %KV_PTR_STT_ILGLIN;

    574   0 000018  5C07                                 LDV,R5   7
          0 000019  D7C6 001D                            STH,R5   29,B6

      228      575    2         ALTRETURN;

    575   0 00001B  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      229      576    2      END; /* IF */
      230      577
      231      578    1      IF (KV$PTR.VRTCLM > %KV_SRD.WDT)

    578   0 00001E  C846 001A                            LDR,R4   26,B6
PL6.E3A0      #002=KVF$FNDFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:58 Page:40   
          0 000020  C945 000D                            CMR,R4   13,B5
          0 000022  0301 0003                            BG       s:580,PREL
          0 000024  4981 0007                            BNEZ,R4  s:586,PREL

      232      579    2        OR (KV$PTR.VRTCLM <= 0) THEN DO;

      233      580    2         KV$PTR.STT = %KV_PTR_STT_ILGCLM;

    580   0 000026  3C06                                 LDV,R3   6
          0 000027  B7C6 001D                            STH,R3   29,B6

      234      581    2         ALTRETURN;

    581   0 000029  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      235      582    2      END; /* IF */
      236      583
      237      584        /* Set up the line list pointer before we begin                               */
      238      585
      239      586    1      KV$PTR.LINLST$ = %KV_MVD.LINLST$;

    586   0 00002C  CCC6 0006                            LDB,B4   6,B6
          0 00002E  BCC4 0010                            LDB,B3   16,B4
          0 000030  BFC6 000E                            STB,B3   14,B6

      240      587
      241      588        /* Get to the proper line list entry                                          */
      242      589
      243      590    1      KV$PTR.LIN$ = PINCRW(KV$PTR.LINLST$, SIZEW(KV$LINLST) +

    590   0 000032  B855                                 LDR,R3   R5
          0 000033  BFC7 0004                            STB,B3   +4,AUTO
          0 000035  E853                                 LDR,R6   R3
          0 000036  70F0                                 DAR,R7   16
          0 000037  7082                                 DOL,R7   2
          0 000038  8447 0004                            AID      +4,AUTO
          0 00003A  8470 0000 0004                       AID      4,IMO
PL6.E3A0      #002=KVF$FNDFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:58 Page:41   
          0 00003D  8D46 0010                            SDI      16,B6

      244      591    1        ((KV$PTR.VRTLIN - 1) * SIZEW(KV$LIN)));
      245      592
      246      593        /* Check to see if there are any fields on this line. If there
      247      594           arent, setup KV$PTR to indicate a null field list and return.              */
      248      595
      249      596    1      KV$PTR.STT = %KV_PTR_STT_NO_FLD;

    596   0 00003F  2C05                                 LDV,R2   5
          0 000040  A7C6 001D                            STH,R2   29,B6

      250      597    1      KV$PTR.FLDWRDX = SIZEW(KV$FLDLST);

    597   0 000042  1C03                                 LDV,R1   3
          0 000043  9F46 0018                            STR,R1   24,B6

      251      598    1      KV$PTR.FLDLST$ = %KV_LIN.FLDLST$;

    598   0 000045  ACC6 0010                            LDB,B2   16,B6
          0 000047  9C82                                 LDB,B1   ,B2
          0 000048  9FC6 0012                            STB,B1   18,B6

      252      599    2      IF (KV$PTR.FLDLST$ = ADDR(NIL)) THEN DO;

    599   0 00004A  8DC6 0012                            CMN      18,B6
          0 00004C  0981 000C                            BNE      s:603,PREL

      253      600    2         KV$PTR.FLD$ = ADDR(NIL);

    600   0 00004E  EB80 0000 0000                       LAB,B6   0
          0 000051  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          0 000054  EFC5 0014                            STB,B6   20,B5

      254      601    2         ALTRETURN;

    601   0 000056  C380 0000 0000  xent                 LNJ,B4   X6A_AALT
PL6.E3A0      #002=KVF$FNDFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:58 Page:42   

      255      602    2      END; /* IF */
      256      603    1      KV$PTR.FLD$ = PINCRW(KV$PTR.FLDLST$, SIZEW(KV$FLDLST));

    603   0 000059  EBC1 0003                            LAB,B6   3,B1
          0 00005B  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          0 00005E  EFC5 0014                            STB,B6   20,B5

      257      604    2      IF (%KV_FLDLST.LSTENTWRDX = 0) THEN DO;

    604   0 000060  CCC5 0012                            LDB,B4   18,B5
          0 000062  E844 0001                            LDR,R6   1,B4
          0 000064  6981 0004                            BNEZ,R6  s:611,PREL

      258      605    2         ALTRETURN;

    605   0 000066  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      259      606    2      END; /* IF */
      260      607
      261      608        /* Setup FLDLST$ and init FLDWRDX and FLD$ for a loop search of this
      262      609           field list buffer                                                          */
      263      610
      264      611    1      KV$PTR.FLDWRDX = %KV_FLDLST.LSTENTWRDX;

    611   0 000069  EF45 0018                            STR,R6   24,B5

      265      612    1      KV$PTR.STT = %KV_PTR_STT_AFTLSTFLD;

    612   0 00006B  4C04                                 LDV,R4   4
          0 00006C  C7C5 001D                            STH,R4   29,B5

      266      613
      267      614        /* The following loop searches down the field list buffer looking
      268      615           to see where the given field is or where it belongs                        */
      269      616
      270      617    2      DO WHILE ('1'B);                     /* LOOP START                         */
PL6.E3A0      #002=KVF$FNDFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:58 Page:43   

      271      618
      272      619    2         KV$PTR.FLD$ = PINCRW(KV$PTR.FLDLST$, KV$PTR.FLDWRDX);

    619   0 00006E  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 000071  B846 0018                            LDR,R3   24,B6
          0 000073  DCC6 0012                            LDB,B5   18,B6
          0 000075  CBB5                                 LAB,B4   ,B5,R3
          0 000076  CFC6 0014                            STB,B4   20,B6

      273      620
      274      621        /* If this is the field we are looking for, say we found the field            */
      275      622
      276      623    3         IF (%KV_FLD.VRTCLM = KV$PTR.VRTCLM) THEN DO;

    623   0 000078  E2C4 0002                            LLH,R6   2,B4
          0 00007A  E946 001A                            CMR,R6   26,B6
          0 00007C  0981 0006                            BNE      s:630,PREL

      277      624    3            KV$PTR.STT = %KV_PTR_STT_IN_FLDCLM1;

    624   0 00007E  87C6 001D                            CLH      29,B6

      278      625    3            RETURN;

    625   0 000080  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      279      626    3         END;                              /* IF                                 */
      280      627
      281      628        /* See if we have passed the column we are looking for                        */
      282      629
      283      630    3         IF (%KV_FLD.VRTCLM < KV$PTR.VRTCLM) THEN DO;

    630   0 000083  0281 001B                            BGE      s:645,PREL

      284      631
      285      632        /* See if we are inside this field                                            */
PL6.E3A0      #002=KVF$FNDFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:58 Page:44   
      286      633
      287      634    4            IF KV$PTR.VRTCLM>=%KV_FLD.VRTCLM+%KV_FLD.WDT THEN DO;

    634   0 000085  D2C4 0004                            LLH,R5   4,B4
          0 000087  EA55                                 ADD,R6   R5
          0 000088  E946 001A                            CMR,R6   26,B6
          0 00008A  0301 000E                            BG       s:638,PREL

      288      635    4               KV$PTR.FLDWRDX = KV$PTR.FLDWRDX + %KV_FLD.STRWRDSIZ;

    635   0 00008C  E844 0001                            LDR,R6   1,B4
          0 00008E  6008                                 SOL,R6   8
          0 00008F  6068                                 SAR,R6   8
          0 000090  EA53                                 ADD,R6   R3
          0 000091  B856                                 LDR,R3   R6
          0 000092  BF46 0018                            STR,R3   24,B6

      289      636    4               KV$PTR.FLD$ = PINCRW(KV$PTR.FLDLST$, KV$PTR.FLDWRDX);

    636   0 000094  BBB5                                 LAB,B3   ,B5,R3
          0 000095  BFC6 0014                            STB,B3   20,B6

      290      637    4            END; ELSE DO;

    637   0 000097  0F81 0004                            B        s:640,PREL

      291      638    4               KV$PTR.STT = %KV_PTR_STT_IN_FLDCLMN;

    638   0 000099  6C01                                 LDV,R6   1
          0 00009A  E7C6 001D                            STH,R6   29,B6

      292      639    4            END;                           /* IF                                 */

      293      640    3            ALTRETURN;

    640   0 00009C  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

PL6.E3A0      #002=KVF$FNDFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:58 Page:45   
      294      641    3         END;                              /* IF                                 */
      295      642
      296      643        /* Search next field                                                          */
      297      644
      298      645    3         IF KV$PTR.FLDWRDX<=SIZEW(KV$FLDLST) THEN DO;

    645   0 00009F  3D03                                 CMV,R3   3
          0 0000A0  0A01 0007                            BAG      s:649,PREL

      299      646    3            KV$PTR.STT = %KV_PTR_STT_BFRFRSFLD;

    646   0 0000A2  5C02                                 LDV,R5   2
          0 0000A3  D7C6 001D                            STH,R5   29,B6

      300      647    3            ALTRETURN;

    647   0 0000A5  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      301      648    3         END;                              /* IF                                 */
      302      649    2         KV$PTR.FLDWRDX = KV$PTR.FLDWRDX - %KV_FLD.PRVSTRWRDSIZ;

    649   0 0000A8  D0C4 0001                            LDH,R5   1,B4
          0 0000AA  D253                                 SUB,R5   R3
          0 0000AB  B855                                 LDR,R3   R5
          0 0000AC  8253                                 NEG      R3
          0 0000AD  BF46 0018                            STR,R3   24,B6

      303      650    2         KV$PTR.STT = %KV_PTR_STT_BTWFLD;

    650   0 0000AF  6C03                                 LDV,R6   3
          0 0000B0  E7C6 001D                            STH,R6   29,B6

      304      651    2      END; /* LOOP */

    651   0 0000B2  0F81 FFBB                            B        s:619,PREL
      305      652    1   END; /* SUBROUTINE */
      306      653        %EOD;
PL6.E3A0      #002=KVF$FNDFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:58 Page:46   

PL6.E3A0      #002=KVF$FNDFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:58 Page:47   
--  Include file information  --

   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is never referenced.
   KV$USR.:E05TOU  was found in the system file and is never referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KVF$FNDFLD.
PL6.E3A0      #002=KVF$FNDFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:58 Page:48   

 **** Variables and constants ****

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 KV$PTR$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(104)   r     1 KV$FLD                     0-0-0/w STRC(48)    r     1 KV$FLDLST
     0-0-0/w STRC(64)    r     1 KV$LIN                     0-0-0/w STRC(128)   r     1 KV$LINLST
     0-0-0/w STRC(512)   r     1 KV$MVD                     0-0-0/w STRC(480)   r     1 KV$PTR
     0-0-0/w STRC(496)   r     1 KV$SRD


   Procedure KVF$FNDFLD requires 180 words for executable code.
   Procedure KVF$FNDFLD requires 6 words of local(AUTO) storage.
PL6.E3A0      #002=KVF$FNDFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:58 Page:49   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=KVF$FNDFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:58 Page:50   
          MINI XREF LISTING

KV$FLD.PRVSTRWRDSIZ
        46**DCL       649>>ASSIGN
KV$FLD.STRWRDSIZ
        46**DCL       635>>ASSIGN
KV$FLD.VRTCLM
        47**DCL       623>>IF        630>>IF        634>>IF
KV$FLD.WDT
       105**DCL       634>>IF
KV$FLDLST
       134**DCL       597--ASSIGN    603--ASSIGN    645--IF
KV$FLDLST.LSTENTWRDX
       134**DCL       604>>IF        611>>ASSIGN
KV$LIN
       158**DCL       590--ASSIGN
KV$LIN.FLDLST$
       158**DCL       598>>ASSIGN
KV$LINLST
       559**DCL       590--ASSIGN
KV$MVD.LINLST$
       186**DCL       586>>ASSIGN
KV$PTR.FLD$
       245**DCL       600<<ASSIGN    603<<ASSIGN    619<<ASSIGN    623>>IF        630>>IF        634>>IF
       634>>IF        635>>ASSIGN    636<<ASSIGN    649>>ASSIGN
KV$PTR.FLDLST$
       244**DCL       598<<ASSIGN    599>>IF        603>>ASSIGN    604>>IF        611>>ASSIGN    619>>ASSIGN
       636>>ASSIGN
KV$PTR.FLDWRDX
       245**DCL       597<<ASSIGN    611<<ASSIGN    619>>ASSIGN    635<<ASSIGN    635>>ASSIGN    636>>ASSIGN
       645>>IF        649<<ASSIGN    649>>ASSIGN
KV$PTR.INPCNDPND
       247**DCL       256--REDEF     260--REDEF
KV$PTR.LIN$
PL6.E3A0      #002=KVF$FNDFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:58 Page:51   
       244**DCL       590<<ASSIGN    598>>ASSIGN
KV$PTR.LINLST$
       243**DCL       244--REDEF     586<<ASSIGN    590>>ASSIGN
KV$PTR.MVD$
       242**DCL       586>>ASSIGN
KV$PTR.SRD$
       243**DCL       572>>IF        578>>IF
KV$PTR.STT
       261**DCL       568<<ASSIGN    574<<ASSIGN    580<<ASSIGN    596<<ASSIGN    612<<ASSIGN    624<<ASSIGN
       638<<ASSIGN    646<<ASSIGN    650<<ASSIGN
KV$PTR.VRTCLM
       246**DCL       578>>IF        578>>IF        623>>IF        630>>IF        634>>IF
KV$PTR.VRTLIN
       246**DCL       572>>IF        572>>IF        590>>ASSIGN
KV$PTR$
       235**DCL       241--IMP-PTR   568>>ASSIGN    572>>IF        572>>IF        572>>IF        574>>ASSIGN
       578>>IF        578>>IF        578>>IF        580>>ASSIGN    586>>ASSIGN    586>>ASSIGN    590>>ASSIGN
       590>>ASSIGN    590>>ASSIGN    596>>ASSIGN    597>>ASSIGN    598>>ASSIGN    598>>ASSIGN    599>>IF
       600>>ASSIGN    603>>ASSIGN    603>>ASSIGN    604>>IF        611>>ASSIGN    611>>ASSIGN    612>>ASSIGN
       619>>ASSIGN    619>>ASSIGN    619>>ASSIGN    623>>IF        623>>IF        624>>ASSIGN    630>>IF
       630>>IF        634>>IF        634>>IF        634>>IF        635>>ASSIGN    635>>ASSIGN    635>>ASSIGN
       636>>ASSIGN    636>>ASSIGN    636>>ASSIGN    638>>ASSIGN    645>>IF        646>>ASSIGN    649>>ASSIGN
       649>>ASSIGN    649>>ASSIGN    650>>ASSIGN
KV$SRD.BTMRHT
       380**DCL       385--REDEF
KV$SRD.CRT
       456**DCL       461--REDEF
KV$SRD.FLDEND
       420**DCL       425--REDEF
KV$SRD.HI_NONBLN
       490**DCL       495--REDEF
KV$SRD.MINLNG
       536**DCL       572>>IF
KV$SRD.ORG
       312**DCL       317--REDEF
KV$SRD.SRDEND
PL6.E3A0      #002=KVF$FNDFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:58 Page:52   
       525**DCL       530--REDEF
KV$SRD.TOPLFT
       346**DCL       351--REDEF
KV$SRD.WDT
       388**DCL       578>>IF

PL6.E3A0      #003=KVF$ADDFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:58 Page:53   
      307        1        /*T***********************************************************/
      308        2        /*T*                                                         */
      309        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      310        4        /*T*                                                         */
      311        5        /*T***********************************************************/
      312        6        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
      313        7        KVF$ADDFLD: PROC ALTRET;
      314        8
      315        9 S      %INCLUDE KV$GLB;
      316       10 S      %INCLUDE KV$GLBCTX;
      317       11 S      %INCLUDE KV$INT;
      318       12 S      %INCLUDE KV_GLBCNS_E;
      319       13
      320       14    1   DCL KVF$UPDFLDLST ENTRY ALTRET;
      321       15
      322       16        %KV$FLD;
      323      104        %KV$FLDLST;
      324      128        %KV$LIN;
      325      152        %KV$PTR;
      326      195        %KV$RCVSSN;
      327      220        %KV_PTR_STT_E;
      328      235
      329      236
      330      237        /* Number of words in the field entry we are making room for                  */
      331      238
      332      239    1   DCL Y@FLDWRDSIZ SBIN AUTO;
      333      240
      334      241        /* Structure for making space for the new field. */
      335      242
      336      243    1   DCL Y$CHR BASED CHAR(Y@FLDWRDSIZ);
      337      244        /* Temporary word */
      338      245
      339      246    1   DCL Y@TMPWRD SBIN WORD AUTO;
      340      247
      341      248
      342      249        /* The purpose of this routine is to make room for a new field in the
      343      250           field list buffer. The KV$PTR structure contains a pointer to the
PL6.E3A0      #003=KVF$ADDFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:58 Page:54   
      344      251           field list buffer (fldlst$), a pointer to where the field itself
      345      252           fits (fld$), and an index into the buffer to where the field sits (fldwrdx)
      346      253           the number of words that the field will occupy is contained in
      347      254           KV$RCVSSN.FLDWRDSIZ (pointed to by the KV$PTR structure). Upon
      348      255           exit from this routine there will be a gap in the field list
      349      256           buffer large enough for the caller to place the field contents into.       */
      350      257
      351      258        /* Compute the required FLDLST buffer size and the current size. */
      352      259
      353      260    1      Y@TMPWRD = %KV_RCVSSN.FLDWRDSIZ+SIZEW(KV$FLDLST);
      354      261    1      Y@FLDWRDSIZ = 0;
      355      262    2      IF KV$PTR.FLDLST$~=ADDR(NIL) THEN DO;
      356      263    2         Y@FLDWRDSIZ = %KV_FLDLST.LSTCELWRDX+1;
      357      264    3         IF (%KV_FLDLST.LSTENTWRDX ~= 0) THEN DO;
      358      265
      359      266
      360      267    3            Y@TMPWRD = %KV_FLDLST.LSTENTWRDX + PINCRW(KV$PTR.FLDLST$,
      361      268    3              %KV_FLDLST.LSTENTWRDX)->KV$FLD.STRWRDSIZ + %KV_RCVSSN.FLDWRDSIZ;
      362      269    3         END;                              /* IF                                 */
      363      270    2      END;                                 /* IF                                 */
      364      271
      365      272        /* Y@TMPWRD contains the required FLDLST size for the new field.
      366      273           Y@FLDWRDSIZ contains the size of the current one.
      367      274           Get a new one if necessary. */
      368      275
      369      276    2      IF Y@TMPWRD>Y@FLDWRDSIZ THEN DO;
      370      277
      371      278        /* Round up to the nearest power of two words                                 */
      372      279
      373      280    2         Y@FLDWRDSIZ = %KV_RCVSSN.FLDWRDSIZ;
      374      281    2         %KV_RCVSSN.FLDWRDSIZ = 16;
      375      282    3         DO WHILE (Y@TMPWRD > %KV_RCVSSN.FLDWRDSIZ);
      376      283    3            %KV_RCVSSN.FLDWRDSIZ = %KV_RCVSSN.FLDWRDSIZ * 2;
      377      284    3         END;                              /* LOOP                               */
      378      285    3         CALL KVF$UPDFLDLST WHENALTRETURN DO;
      379      286    3            ALTRETURN;
      380      287    3         END;
PL6.E3A0      #003=KVF$ADDFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:58 Page:55   
      381      288
      382      289        /* Restore the real field word size and call a routine to shuffle the
      383      290           buffer to make a hole for the field in the spot it belongs in              */
      384      291
      385      292    2         %KV_RCVSSN.FLDWRDSIZ = Y@FLDWRDSIZ;
      386      293    2      END;                                 /* IF                                 */
      387      294
      388      295        /* If the last entry index is 0, we are setting up a new field list
      389      296           so dont shuffle                                                            */
      390      297
      391      298    1      IF (KV$PTR.STT = %KV_PTR_STT_NO_FLD)
      392      299    2        OR (KV$PTR.STT = %KV_PTR_STT_AFTLSTFLD) THEN DO;
      393      300    2         %KV_FLDLST.LSTENTWRDX = KV$PTR.FLDWRDX;
      394      301    2      END; ELSE DO;
      395      302
      396      303        /* We only want to shuffle if the field we are inserting is not at
      397      304           the end of the field list                                                  */
      398      305
      399      306        /* First fix PRVSTRWRDSIZ for the next entry. */
      400      307
      401      308    2         %KV_FLD.PRVSTRWRDSIZ = %KV_RCVSSN.FLDWRDSIZ;
      402      309
      403      310        /* Now move the fields above here, hole-size at a time. */
      404      311
      405      312    2         Y@FLDWRDSIZ = %KV_RCVSSN.FLDWRDSIZ*2; /* HOLE SIZE                      */
      406      313    2         Y@TMPWRD = (Y@TMPWRD-KV$PTR.FLDWRDX)*2-Y@FLDWRDSIZ; /* OLD END OFFSET   */
      407      314    3         DO WHILE Y@TMPWRD>0;
      408      315    3            Y@TMPWRD = Y@TMPWRD-Y@FLDWRDSIZ;
      409      316    3            PINCRC(KV$PTR.FLD$,Y@TMPWRD+Y@FLDWRDSIZ)->Y$CHR =
      410      317    3              PINCRC(KV$PTR.FLD$,Y@TMPWRD)->Y$CHR;
      411      318    3         END;
      412      319
      413      320        /* Update the last entry index                                                */
      414      321
      415      322    2         %KV_FLDLST.LSTENTWRDX = %KV_FLDLST.LSTENTWRDX + %KV_RCVSSN.FLDWRDSIZ;
      416      323    2      END;                                 /* IF                                 */
      417      324
PL6.E3A0      #003=KVF$ADDFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:58 Page:56   
      418      325    1   END; /* SUBROUTINE */
      419      326        %EOD;

PL6.E3A0      #003=KVF$ADDFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:58 Page:57   
--  Include file information  --

   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is never referenced.
   KV$USR.:E05TOU  was found in the system file and is never referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KVF$ADDFLD.

   Procedure KVF$ADDFLD requires 181 words for executable code.
   Procedure KVF$ADDFLD requires 7 words of local(AUTO) storage.

PL6.E3A0      #003=KVF$ADDFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:58 Page:58   

 Object Unit name= KVF$ADDFLD                                 File name= KVF$MSC.:E05TOU
 UTS= JUL 30 '97 01:58:34.20 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   181     B5  KVF$ADDFLD

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        0  KVF$ADDFLD

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       0 KVF$UPDFLDLST
                       nStd      0 X6A_AUTO_0
                       nStd      0 X6A_AALT
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KV$PTR$                               KV$RCVSSN$                       r    G$ROS$
PL6.E3A0      #003=KVF$ADDFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:58 Page:59   


      307        1        /*T***********************************************************/
      308        2        /*T*                                                         */
      309        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      310        4        /*T*                                                         */
      311        5        /*T***********************************************************/
      312        6        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
      313        7        KVF$ADDFLD: PROC ALTRET;

      7   0 000000  D380 0000 0000  xent KVF$ADDFLD      LNJ,B5   X6A_AUTO_0
          0 000003       0007 0000                       DC       7,0

      314        8
      315        9 S      %INCLUDE KV$GLB;
      316       10 S      %INCLUDE KV$GLBCTX;
      317       11 S      %INCLUDE KV$INT;
      318       12 S      %INCLUDE KV_GLBCNS_E;
      319       13
      320       14    1   DCL KVF$UPDFLDLST ENTRY ALTRET;
      321       15
      322       16        %KV$FLD;
      323      104        %KV$FLDLST;
      324      128        %KV$LIN;
      325      152        %KV$PTR;
      326      195        %KV$RCVSSN;
      327      220        %KV_PTR_STT_E;
      328      235
      329      236
      330      237        /* Number of words in the field entry we are making room for                  */
      331      238
      332      239    1   DCL Y@FLDWRDSIZ SBIN AUTO;
      333      240
      334      241        /* Structure for making space for the new field. */
      335      242
      336      243    1   DCL Y$CHR BASED CHAR(Y@FLDWRDSIZ);
      337      244        /* Temporary word */
      338      245
PL6.E3A0      #003=KVF$ADDFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:58 Page:60   
      339      246    1   DCL Y@TMPWRD SBIN WORD AUTO;
      340      247
      341      248
      342      249        /* The purpose of this routine is to make room for a new field in the
      343      250           field list buffer. The KV$PTR structure contains a pointer to the
      344      251           field list buffer (fldlst$), a pointer to where the field itself
      345      252           fits (fld$), and an index into the buffer to where the field sits (fldwrdx)
      346      253           the number of words that the field will occupy is contained in
      347      254           KV$RCVSSN.FLDWRDSIZ (pointed to by the KV$PTR structure). Upon
      348      255           exit from this routine there will be a gap in the field list
      349      256           buffer large enough for the caller to place the field contents into.       */
      350      257
      351      258        /* Compute the required FLDLST buffer size and the current size. */
      352      259
      353      260    1      Y@TMPWRD = %KV_RCVSSN.FLDWRDSIZ+SIZEW(KV$FLDLST);

    260   0 000005  EC80 0000 0000  xsym                 LDB,B6   KV$RCVSSN$
          0 000008  E806                                 LDR,R6   ,B6
          0 000009  6E03                                 ADV,R6   3
          0 00000A  EF47 0005                            STR,R6   Y@TMPWRD,AUTO

      354      261    1      Y@FLDWRDSIZ = 0;

    261   0 00000C  8747 0004                            CL       Y@FLDWRDSIZ,AUTO

      355      262    2      IF KV$PTR.FLDLST$~=ADDR(NIL) THEN DO;

    262   0 00000E  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          0 000011  8DC5 0012                            CMN      18,B5
          0 000013  0901 0014                            BE       s:276,PREL

      356      263    2         Y@FLDWRDSIZ = %KV_FLDLST.LSTCELWRDX+1;

    263   0 000015  CCC5 0012                            LDB,B4   18,B5
          0 000017  D804                                 LDR,R5   ,B4
          0 000018  5E01                                 ADV,R5   1
          0 000019  DF47 0004                            STR,R5   Y@FLDWRDSIZ,AUTO
PL6.E3A0      #003=KVF$ADDFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:58 Page:61   

      357      264    3         IF (%KV_FLDLST.LSTENTWRDX ~= 0) THEN DO;

    264   0 00001B  C844 0001                            LDR,R4   1,B4
          0 00001D  4901 000A                            BEZ,R4   s:276,PREL

      358      265
      359      266
      360      267    3            Y@TMPWRD = %KV_FLDLST.LSTENTWRDX + PINCRW(KV$PTR.FLDLST$,

    267   0 00001F  B854                                 LDR,R3   R4
          0 000020  3001                                 SOL,R3   1
          0 000021  3E03                                 ADV,R3   3
          0 000022  A0B4                                 LDH,R2   ,B4,R3
          0 000023  AA54                                 ADD,R2   R4
          0 000024  AA06                                 ADD,R2   ,B6
          0 000025  E852                                 LDR,R6   R2
          0 000026  EF47 0005                            STR,R6   Y@TMPWRD,AUTO

      361      268    3              %KV_FLDLST.LSTENTWRDX)->KV$FLD.STRWRDSIZ + %KV_RCVSSN.FLDWRDSIZ;
      362      269    3         END;                              /* IF                                 */

      363      270    2      END;                                 /* IF                                 */

      364      271
      365      272        /* Y@TMPWRD contains the required FLDLST size for the new field.
      366      273           Y@FLDWRDSIZ contains the size of the current one.
      367      274           Get a new one if necessary. */
      368      275
      369      276    2      IF Y@TMPWRD>Y@FLDWRDSIZ THEN DO;

    276   0 000028  E947 0004                            CMR,R6   Y@FLDWRDSIZ,AUTO
          0 00002A  0A81 002E                            BALE     s:298,PREL

      370      277
      371      278        /* Round up to the nearest power of two words                                 */
      372      279
PL6.E3A0      #003=KVF$ADDFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:58 Page:62   
      373      280    2         Y@FLDWRDSIZ = %KV_RCVSSN.FLDWRDSIZ;

    280   0 00002C  D806                                 LDR,R5   ,B6
          0 00002D  DF47 0004                            STR,R5   Y@FLDWRDSIZ,AUTO

      374      281    2         %KV_RCVSSN.FLDWRDSIZ = 16;

    281   0 00002F  5C10                                 LDV,R5   16
          0 000030  DF06                                 STR,R5   ,B6

      375      282    3         DO WHILE (Y@TMPWRD > %KV_RCVSSN.FLDWRDSIZ);

    282   0 000031  EC80 0000 0000  xsym                 LDB,B6   KV$RCVSSN$
          0 000034  6801 0013                            BLZ,R6   s:285,PREL
          0 000036  E906                                 CMR,R6   ,B6
          0 000037  0381 0010                            BLE      s:285,PREL

      376      283    3            %KV_RCVSSN.FLDWRDSIZ = %KV_RCVSSN.FLDWRDSIZ * 2;

    283   0 000039  EC80 0000 0000  xsym                 LDB,B6   KV$RCVSSN$
          0 00003C  E806                                 LDR,R6   ,B6
          0 00003D  6001                                 SOL,R6   1
          0 00003E  EF06                                 STR,R6   ,B6

      377      284    3         END;                              /* LOOP                               */

    284   0 00003F  EC80 0000 0000  xsym                 LDB,B6   KV$RCVSSN$
          0 000042  E847 0005                            LDR,R6   Y@TMPWRD,AUTO
          0 000044  6801 0003                            BLZ,R6   s:285,PREL
          0 000046  E906                                 CMR,R6   ,B6
          0 000047  0372                                 BG       s:283,SPREL

      378      285    3         CALL KVF$UPDFLDLST WHENALTRETURN DO;

    285   0 000048  CBF0 0000                            LAB,B4   0,IMO
          0 00004A  E380 0000 0000  xent                 LNJ,B6   KVF$UPDFLDLST
          0 00004D       0003                            DC       s:286,PREL
PL6.E3A0      #003=KVF$ADDFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:58 Page:63   
          0 00004E  0F81 0004                            B        s:292,PREL

      379      286    3            ALTRETURN;

    286   0 000050  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      380      287    3         END;
      381      288
      382      289        /* Restore the real field word size and call a routine to shuffle the
      383      290           buffer to make a hole for the field in the spot it belongs in              */
      384      291
      385      292    2         %KV_RCVSSN.FLDWRDSIZ = Y@FLDWRDSIZ;

    292   0 000053  EC80 0000 0000  xsym                 LDB,B6   KV$RCVSSN$
          0 000056  E847 0004                            LDR,R6   Y@FLDWRDSIZ,AUTO
          0 000058  EF06                                 STR,R6   ,B6

      386      293    2      END;                                 /* IF                                 */

      387      294
      388      295        /* If the last entry index is 0, we are setting up a new field list
      389      296           so dont shuffle                                                            */
      390      297
      391      298    1      IF (KV$PTR.STT = %KV_PTR_STT_NO_FLD)

    298   0 000059  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 00005C  E2C6 001D                            LLH,R6   29,B6
          0 00005E  6D05                                 CMV,R6   5
          0 00005F  0901 0004                            BE       s:300,PREL
          0 000061  6D04                                 CMV,R6   4
          0 000062  0981 0009                            BNE      s:308,PREL

      392      299    2        OR (KV$PTR.STT = %KV_PTR_STT_AFTLSTFLD) THEN DO;

      393      300    2         %KV_FLDLST.LSTENTWRDX = KV$PTR.FLDWRDX;

    300   0 000064  DCC6 0012                            LDB,B5   18,B6
PL6.E3A0      #003=KVF$ADDFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:58 Page:64   
          0 000066  D846 0018                            LDR,R5   24,B6
          0 000068  DF45 0001                            STR,R5   1,B5

      394      301    2      END; ELSE DO;

    301   0 00006A  0F81 0047                            B        s:325,PREL

      395      302
      396      303        /* We only want to shuffle if the field we are inserting is not at
      397      304           the end of the field list                                                  */
      398      305
      399      306        /* First fix PRVSTRWRDSIZ for the next entry. */
      400      307
      401      308    2         %KV_FLD.PRVSTRWRDSIZ = %KV_RCVSSN.FLDWRDSIZ;

    308   0 00006C  DCC6 0014                            LDB,B5   20,B6
          0 00006E  CC80 0000 0000  xsym                 LDB,B4   KV$RCVSSN$
          0 000071  D804                                 LDR,R5   ,B4
          0 000072  D7C5 0001                            STH,R5   1,B5

      402      309
      403      310        /* Now move the fields above here, hole-size at a time. */
      404      311
      405      312    2         Y@FLDWRDSIZ = %KV_RCVSSN.FLDWRDSIZ*2; /* HOLE SIZE                      */

    312   0 000074  EC80 0000 0000  xsym                 LDB,B6   KV$RCVSSN$
          0 000077  E806                                 LDR,R6   ,B6
          0 000078  6001                                 SOL,R6   1
          0 000079  EF47 0004                            STR,R6   Y@FLDWRDSIZ,AUTO

      406      313    2         Y@TMPWRD = (Y@TMPWRD-KV$PTR.FLDWRDX)*2-Y@FLDWRDSIZ; /* OLD END OFFSET   */

    313   0 00007B  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          0 00007E  D847 0005                            LDR,R5   Y@TMPWRD,AUTO
          0 000080  D245 0018                            SUB,R5   24,B5
          0 000082  5001                                 SOL,R5   1
          0 000083  8255                                 NEG      R5
PL6.E3A0      #003=KVF$ADDFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:58 Page:65   
          0 000084  DA56                                 ADD,R5   R6
          0 000085  8255                                 NEG      R5
          0 000086  DF47 0005                            STR,R5   Y@TMPWRD,AUTO

      407      314    3         DO WHILE Y@TMPWRD>0;

    314   0 000088  5A81 001C                            BLEZ,R5  s:322,PREL

      408      315    3            Y@TMPWRD = Y@TMPWRD-Y@FLDWRDSIZ;

    315   0 00008A  E847 0005                            LDR,R6   Y@TMPWRD,AUTO
          0 00008C  E247 0004                            SUB,R6   Y@FLDWRDSIZ,AUTO
          0 00008E  EF47 0005                            STR,R6   Y@TMPWRD,AUTO

      409      316    3            PINCRC(KV$PTR.FLD$,Y@TMPWRD+Y@FLDWRDSIZ)->Y$CHR =

    316   0 000090  EA47 0004                            ADD,R6   Y@FLDWRDSIZ,AUTO
          0 000092  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 000095  DCC6 0014                            LDB,B5   20,B6
          0 000097  AB85                                 LAB,B2   ,B5
          0 000098  A847 0005                            LDR,R2   Y@TMPWRD,AUTO
          0 00009A  EF47 0006                            STR,R6   Y@TMPWRD+1,AUTO
          0 00009C  E847 0004                            LDR,R6   Y@FLDWRDSIZ,AUTO
          0 00009E  BB85                                 LAB,B3   ,B5
          0 00009F  B847 0006                            LDR,R3   Y@TMPWRD+1,AUTO
          0 0000A1  0008                                 MMM

      410      317    3              PINCRC(KV$PTR.FLD$,Y@TMPWRD)->Y$CHR;
      411      318    3         END;

    318   0 0000A2  E847 0005                            LDR,R6   Y@TMPWRD,AUTO
          0 0000A4  6A66                                 BGZ,R6   s:315,SPREL

      412      319
      413      320        /* Update the last entry index                                                */
      414      321
      415      322    2         %KV_FLDLST.LSTENTWRDX = %KV_FLDLST.LSTENTWRDX + %KV_RCVSSN.FLDWRDSIZ;
PL6.E3A0      #003=KVF$ADDFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:58 Page:66   

    322   0 0000A5  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 0000A8  DCC6 0012                            LDB,B5   18,B6
          0 0000AA  CC80 0000 0000  xsym                 LDB,B4   KV$RCVSSN$
          0 0000AD  E845 0001                            LDR,R6   1,B5
          0 0000AF  EA04                                 ADD,R6   ,B4
          0 0000B0  EF45 0001                            STR,R6   1,B5

      416      323    2      END;                                 /* IF                                 */

      417      324
      418      325    1   END; /* SUBROUTINE */

    325   0 0000B2  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      419      326        %EOD;

PL6.E3A0      #003=KVF$ADDFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:58 Page:67   
--  Include file information  --

   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is never referenced.
   KV$USR.:E05TOU  was found in the system file and is never referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KVF$ADDFLD.
PL6.E3A0      #003=KVF$ADDFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:58 Page:68   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w SBIN(16)    r     1 Y@FLDWRDSIZ                5-0-0/w SBIN(16)    r     1 Y@TMPWRD

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 KV$PTR$                    0-0-0/w PTR         r     1 KV$RCVSSN$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(104)   r     1 KV$FLD                     0-0-0/w STRC(48)    r     1 KV$FLDLST
     0-0-0/w STRC(480)   r     1 KV$PTR                     0-0-0/w STRC(96)    r     1 KV$RCVSSN
     0-0-0/c ACHR        r     1 Y$CHR


   Procedure KVF$ADDFLD requires 181 words for executable code.
   Procedure KVF$ADDFLD requires 7 words of local(AUTO) storage.
PL6.E3A0      #003=KVF$ADDFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:58 Page:69   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=KVF$ADDFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:58 Page:70   
          MINI XREF LISTING

KV$FLD.PRVSTRWRDSIZ
        37**DCL       308<<ASSIGN
KV$FLD.STRWRDSIZ
        37**DCL       267>>ASSIGN
KV$FLDLST
       125**DCL       260--ASSIGN
KV$FLDLST.LSTCELWRDX
       125**DCL       263>>ASSIGN
KV$FLDLST.LSTENTWRDX
       125**DCL       264>>IF        267>>ASSIGN    267>>ASSIGN    300<<ASSIGN    322<<ASSIGN    322>>ASSIGN
KV$PTR.FLD$
       177**DCL       308>>ASSIGN    316>>ASSIGN    316>>ASSIGN
KV$PTR.FLDLST$
       176**DCL       262>>IF        263>>ASSIGN    264>>IF        267>>ASSIGN    267>>ASSIGN    267>>ASSIGN
       300>>ASSIGN    322>>ASSIGN    322>>ASSIGN
KV$PTR.FLDWRDX
       177**DCL       300>>ASSIGN    313>>ASSIGN
KV$PTR.INPCNDPND
       179**DCL       188--REDEF     192--REDEF
KV$PTR.LINLST$
       175**DCL       176--REDEF
KV$PTR.STT
       193**DCL       298>>IF        298>>IF
KV$PTR$
       167**DCL       173--IMP-PTR   262>>IF        263>>ASSIGN    264>>IF        267>>ASSIGN    267>>ASSIGN
       267>>ASSIGN    298>>IF        298>>IF        300>>ASSIGN    300>>ASSIGN    308>>ASSIGN    313>>ASSIGN
       316>>ASSIGN    316>>ASSIGN    322>>ASSIGN    322>>ASSIGN
KV$RCVSSN.FLDWRDSIZ
       217**DCL       260>>ASSIGN    267>>ASSIGN    280>>ASSIGN    281<<ASSIGN    282>>DOWHILE   283<<ASSIGN
       283>>ASSIGN    292<<ASSIGN    308>>ASSIGN    312>>ASSIGN    322>>ASSIGN
KV$RCVSSN$
       203**DCL       260>>ASSIGN    267>>ASSIGN    280>>ASSIGN    281>>ASSIGN    282>>DOWHILE   283>>ASSIGN
PL6.E3A0      #003=KVF$ADDFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:58 Page:71   
       283>>ASSIGN    292>>ASSIGN    308>>ASSIGN    312>>ASSIGN    322>>ASSIGN
KVF$UPDFLDLST
        14**DCL-ENT   285--CALL
Y$CHR
       243**DCL       316<<ASSIGN    316>>ASSIGN
Y@FLDWRDSIZ
       239**DCL       243--IMP-SIZ   261<<ASSIGN    263<<ASSIGN    276>>IF        280<<ASSIGN    292>>ASSIGN
       312<<ASSIGN    313>>ASSIGN    315>>ASSIGN    316>>ASSIGN    316>>ASSIGN    316>>ASSIGN
Y@TMPWRD
       246**DCL       260<<ASSIGN    267<<ASSIGN    276>>IF        282>>DOWHILE   313<<ASSIGN    313>>ASSIGN
       314>>DOWHILE   315<<ASSIGN    315>>ASSIGN    316>>ASSIGN    316>>ASSIGN

PL6.E3A0      #004=KVF$UPDFLDLST File=KVF$MSC.:E05TSI                            WED 07/30/97 01:58 Page:72   
      420        1        /*T***********************************************************/
      421        2        /*T*                                                         */
      422        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      423        4        /*T*                                                         */
      424        5        /*T***********************************************************/
      425        6        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
      426        7        KVF$UPDFLDLST: PROC ALTRET;             /* Update field list                  */
      427        8
      428        9    1   DCL KVS$GETBFR ENTRY(1) ALTRET;
      429       10    1   DCL KVS$RLSBFR ENTRY(1) ALTRET;
      430       11
      431       12 S      %INCLUDE KV$GLB;
      432       13 S      %INCLUDE KV$GLBCTX;
      433       14 S      %INCLUDE KV$INT;
      434       15 S      %INCLUDE KV$VDH;
      435       16        %INCLUDE KV_ERRORS_C;
      436       76 S      %INCLUDE KV_GLBCNS_E;
      437       77
      438       78        %KV$PTR;
      439      121        %KV$FLD;
      440      209        %KV$FLDLST;
      441      233        %KV$FLDLST (NAME=KV_FLDLST, STCLASS=CONSTANT SYMDEF);
      442      257        %KV$LIN;
      443      281        %KV$LINLST;
      444      308        %KV$RCVSSN;
      445      333        %KV$STR;
      446      420        %KV_STRTYP_E;
      447      458        /*
      448      459        Character string declaration for moving data from one field list
      449      460        buffer to another.
      450      461        */
      451      462    1   DCL Y$CHR CHAR(Y@MOVBYTSIZ) BASED;
      452      463        /*
      453      464        Pointer to the TMP FLDLST structure.
      454      465        */
      455      466    1   DCL Y@TMPFLDLST$ PTR;
      456      467        /*
PL6.E3A0      #004=KVF$UPDFLDLST File=KVF$MSC.:E05TSI                            WED 07/30/97 01:58 Page:73   
      457      468        Flags in AUTO
      458      469        */
      459      470    1   DCL 1 Y@FLG AUTO,
      460      471        /*
      461      472        Flag to indicate a field list buffer update is taking place, as opposed to
      462      473        our simply being asked to truncate the temporary field list buffer.
      463      474        */
      464      475    1          2 UPDFLDLST BIT(1),
      465      476        /*
      466      477        Flag to indicate we have to grow the current temporary field list buffer because it
      467      478        isn't big enough for an update operation.
      468      479        */
      469      480    1          2 GRWTMPFLDLST BIT(1),
      470      481        /*
      471      482        Flag to indicate we want to truncate the current temporary field list buffer
      472      483        We truncate the buffer either because we are called simply to
      473      484        truncate, or because we are moving to a different virtual line
      474      485        than that represented by the temporary field list buffer.
      475      486        */
      476      487    1          2 TRNTMPFLDLST BIT(1);
      477      488        /*
      478      489        Pointer to destination buffer, used sometimes when moving data from
      479      490        one FLDLST buffer to another.
      480      491        */
      481      492    1   DCL Y@DSTTMPFLDLST$ PTR AUTO;
      482      493        /*
      483      494        Destination TMPFLDLST LSTCELWRDX.
      484      495        */
      485      496    1   DCL Y@DSTLSTCELWRDX UBIN WORD AUTO;
      486      497        /*
      487      498        Move byte size, sometimes used when moving data from one field
      488      499        list buffer to another.
      489      500        */
      490      501    1   DCL Y@MOVBYTSIZ UBIN WORD AUTO;
      491      502
      492      503        %KV$VDH_GETBFR (NAME = KV@VDH_GETBFR, STCLASS = AUTO);
      493      568        %KV$VDH_GETBFR (NAME = KV_VDH_GETBFR, STCLASS = SYMREF READONLY);
PL6.E3A0      #004=KVF$UPDFLDLST File=KVF$MSC.:E05TSI                            WED 07/30/97 01:58 Page:74   
      494      633
      495      634        %KV$VDH_RLSBFR (NAME = KV@VDH_RLSBFR);
      496      670        %EQU VDH_RLSBFR = CHARTEXT('ADDR(KV@VDH_GETBFR)->KV@VDH_RLSBFR');
      497      671
      498      672
      499      673        /* The purpose of this routine is to manage the field list buffers. This
      500      674           the buffer management method used revolves around the use of a temporary
      501      675           buffer (actually just a dynamic buffer with a greater life span) that
      502      676           holds the field list currently being manipulated. In most cases, we
      503      677           hope that this buffer will be large enough to hold a new field when
      504      678           added, so that the number of calls to the buffer manager will
      505      679           be minimized. The temporary buffer looks just like a dynamic buffer and
      506      680           is actually pointed to by the line list for the line being manipulated.
      507      681           This routine is the only routine which can tell the buffer is a temporary
      508      682           buffer and must be managed a little differently. When we begin to
      509      683           process a new line list, the used portion of the buffer is copied
      510      684           to dynamic memory, and the field list for the new line is copied to the temporary
      511      685           buffer. The calling routines must be careful to make a call
      512      686           to this routine to truncate the temporary buffer, when they are through
      513      687           processing the current message.
      514      688
      515      689
      516      690        We enter here to grow a field list buffer. KV$PTR points to the
      517      691        field list to grow
      518      692
      519      693        Set the flags
      520      694        */
      521      695    1      Y@FLG = '111'B;
      522      696        /*
      523      697        If there is no current field list buffer (we're starting a new
      524      698        one) or if the current temporary field list buffer is not for the line
      525      699        we are about to update, leave the flag set indicating we have to truncate
      526      700        the current temporary buffer.  I.e., if the temporary buffer
      527      701        is for the line we're interested in, don't truncate it.
      528      702        */
      529      703    1      IF (KV$PTR.FLDLST$ ~= ADDR(NIL))
      530      704    1      THEN IF (%KV_FLDLST.LSTENTWRDX ~= 0)
PL6.E3A0      #004=KVF$UPDFLDLST File=KVF$MSC.:E05TSI                            WED 07/30/97 01:58 Page:75   
      531      705    2        AND (%KV_LINLST.TMPFLDLSTLIN = KV$PTR.VRTLIN) THEN DO;
      532      706    2         Y@FLG.TRNTMPFLDLST = '0'B;
      533      707    2      END; /* IF */
      534      708
      535      709    1      GOTO SUBCOMMON;                      /* LOOK BELOW                         */
      536      710        %EJECT;
PL6.E3A0      #004=KVF$UPDFLDLST File=KVF$MSC.:E05TSI                            WED 07/30/97 01:58 Page:76   
      537      711    1   KVF$TRNTMPFLDLST: ENTRY ALTRET;         /* Truncate temporary field list      */
      538      712
      539      713        /* We enter here if we just want to truncate the temporary buffer and do no
      540      714           updating                                                                   */
      541      715
      542      716    1      Y@FLG = '011'B;
      543      717
      544      718    1   SUBCOMMON: ;                            /* THERE MUST BE AN ALTENTRY ABOVE ME */
      545      719        %EJECT;
PL6.E3A0      #004=KVF$UPDFLDLST File=KVF$MSC.:E05TSI                            WED 07/30/97 01:58 Page:77   
      546      720    1      KV@VDH_GETBFR = KV_VDH_GETBFR;
      547      721    1      KV@VDH_GETBFR.STRTYP = %KV_STRTYP_FLDLST;
      548      722    1      IF %KV_LINLST.TMPFLDLSTLIN=0 THEN Y@TMPFLDLST$ = ADDR(NIL);
      549      723    2      ELSE DO;
      550      724    2         Y@TMPFLDLST$ = PINCRW(KV$PTR.LINLST$,
      551      725    2           (%KV_LINLST.TMPFLDLSTLIN-1)*SIZEW(KV$LIN)+SIZEW(KV$LINLST))->
      552      726    2           KV$LIN.FLDLST$;
      553      727    2         IF NOT Y@FLG.TRNTMPFLDLST THEN EXIT;
      554      728        /*
      555      729        We are to truncate the current temporary buffer.
      556      730        Basically, this section of code gets a 'normal' field list buffer
      557      731        just large enough to hold the contents of the temporary
      558      732        field list buffer, and then releases the temporary field
      559      733        list buffer if it is no longer useful (too small) or desired (cleaning up).
      560      734        */
      561      735    2         KV@VDH_GETBFR.DAT_.ADR$ = Y@TMPFLDLST$;
      562      736    3         IF Y@TMPFLDLST$->KV$FLDLST.LSTENTWRDX~=0 THEN DO;
      563      737        /*
      564      738        Just release the old one if there's nothing in it.
      565      739        */
      566      740    3            KV@VDH_GETBFR.BYTSIZ = (Y@TMPFLDLST$->KV$FLDLST.LSTENTWRDX +
      567      741    3              PINCRW(Y@TMPFLDLST$, Y@TMPFLDLST$->KV$FLDLST.LSTENTWRDX)->KV$FLD.
               741                       STRWRDSIZ + 1) * 2;
      568      742    3            KV@VDH_GETBFR.DAT_.BYTSIZ = KV@VDH_GETBFR.BYTSIZ;
      569      743    3            IF KV@VDH_GETBFR.BYTSIZ>Y@TMPFLDLST$->KV$FLDLST.LSTCELWRDX+1
      570      744    3            THEN GOTO NOTRUNC;             /* Don't bother for same-size buffer. */
      571      745    3            CALL KVS$GETBFR(KV@VDH_GETBFR) ALTRET(NOTRUNC);
      572      746
      573      747        /* Update LSTCELWRDX to reflect the amount of memory we actually got          */
      574      748
      575      749    3            KV@VDH_GETBFR.BFR$->KV$FLDLST.LSTCELWRDX =
      576      750    3              (KV@VDH_GETBFR.BYTSIZ) / 2 - 1;
      577      751    3         END;
      578      752
      579      753        /* Update the field list pointer                                              */
      580      754
      581      755    2         PINCRW(KV$PTR.LINLST$,
PL6.E3A0      #004=KVF$UPDFLDLST File=KVF$MSC.:E05TSI                            WED 07/30/97 01:58 Page:78   
      582      756    2           ((%KV_LINLST.TMPFLDLSTLIN - 1) * SIZEW(%KV_LIN)) + SIZEW(%KV_LINLST))
      583      757    2           ->KV$LIN.FLDLST$ = KV@VDH_GETBFR.BFR$;
      584      758    3         IF KV$PTR.FLDLST$=KV@VDH_GETBFR.DAT_.ADR$ THEN DO;
      585      759    3            KV$PTR.FLDLST$ = KV@VDH_GETBFR.BFR$;
      586      760    3            KV$PTR.FLD$ = PINCRW(KV$PTR.FLDLST$,KV$PTR.FLDWRDX);
      587      761    3         END;
      588      762    2         %KV_LINLST.TMPFLDLSTLIN = 0;
      589      763
      590      764    2         IF Y@FLG.UPDFLDLST
      591      765    2           AND ((Y@TMPFLDLST$->KV$FLDLST.LSTCELWRDX + 1)
      592      766    3           >= %KV_RCVSSN.FLDWRDSIZ) THEN DO;
      593      767        /*
      594      768        An update operation is being performed (as opposed to simply
      595      769        truncating the temporary buffer), and the temporary buffer is large
      596      770        enough to satisfy the request.  Use the temporary buffer instead
      597      771        of releasing it.
      598      772        */
      599      773    3            Y@FLG.GRWTMPFLDLST = '0'B;
      600      774    3         END; ELSE DO;
      601      775        /*
      602      776        Either we're simply to release the temporary buffer, or it isn't
      603      777        big enough.
      604      778        Release the temporary buffer.
      605      779        */
      606      780    3            %VDH_RLSBFR.BFR$ = Y@TMPFLDLST$;
      607      781    3            %VDH_RLSBFR.BYTSIZ = (Y@TMPFLDLST$->KV$FLDLST.LSTCELWRDX + 1) * 2;
      608      782    3            CALL KVS$RLSBFR (%VDH_RLSBFR);
      609      783    3            Y@TMPFLDLST$ = ADDR(NIL);
      610      784    3         END;                              /* IF                                 */
      611      785    2      END; /* IF */
      612      786    1   NOTRUNC:;
      613      787        %EJECT;
PL6.E3A0      #004=KVF$UPDFLDLST File=KVF$MSC.:E05TSI                            WED 07/30/97 01:58 Page:79   
      614      788    2      IF Y@FLG.UPDFLDLST THEN DO;
      615      789        /*
      616      790        Update the temporary buffer with a different dynamic buffer.
      617      791        */
      618      792    3         IF Y@FLG.GRWTMPFLDLST THEN DO;
      619      793        /*
      620      794        We have to aquire a larger temporary buffer before we can
      621      795        place the different dynamic buffer into it.
      622      796        */
      623      797    3            KV@VDH_GETBFR.DAT_.BYTSIZ = 0;
      624      798    3            KV@VDH_GETBFR.BYTSIZ = %KV_RCVSSN.FLDWRDSIZ * 2;
      625      799    4            CALL KVS$GETBFR(KV@VDH_GETBFR) WHENALTRETURN DO;
      626      800    4               %KV_STR.ERR.COD=%E$CANTGETCTX;
      627      801    4               ALTRETURN;
      628      802    4            END;
      629      803
      630      804        /* Save LSTCELWRDX. */
      631      805
      632      806    3            Y@DSTTMPFLDLST$ = KV@VDH_GETBFR.BFR$;
      633      807    3            Y@DSTLSTCELWRDX = (KV@VDH_GETBFR.BYTSIZ / 2) - 1;
      634      808
      635      809    3         END; ELSE DO;
      636      810
      637      811    4            IF KV$PTR.FLDLST$ ~= ADDR(NIL) THEN DO;
      638      812        /*
      639      813        We're going to do a move of the data from the KV$PTR.FLDLST$
      640      814        field list to the Y@TMPFLDLST$ later, so save
      641      815        Y@TMPFLDLST$->LSTCELWRDX for the move of LSTCELWRDX
      642      816        into the destination FLDLST later, effectively simply restoring
      643      817        it.
      644      818        */
      645      819    4               Y@DSTLSTCELWRDX = Y@TMPFLDLST$->KV$FLDLST.LSTCELWRDX;
      646      820    4            END;                           /* END IF KV$PTR.FLDLST$ ~= ADDR(NIL) */
      647      821    3            Y@DSTTMPFLDLST$ = Y@TMPFLDLST$;
      648      822    3            Y@DSTLSTCELWRDX = Y@DSTTMPFLDLST$->KV$FLDLST.LSTCELWRDX;
      649      823    3         END;                              /* IF                                 */
      650      824
PL6.E3A0      #004=KVF$UPDFLDLST File=KVF$MSC.:E05TSI                            WED 07/30/97 01:58 Page:80   
      651      825    3         IF (KV$PTR.FLDLST$ ~= ADDR(NIL)) THEN DO;
      652      826        /*
      653      827        Move the data from the old buffer to the new one.
      654      828        */
      655      829    3            IF %KV_FLDLST.LSTENTWRDX=0 THEN Y@MOVBYTSIZ = SIZEC(KV_FLDLST);
      656      830    3            ELSE Y@MOVBYTSIZ = (%KV_FLDLST.LSTENTWRDX +
      657      831    3              PINCRW(KV$PTR.FLDLST$, %KV_FLDLST.LSTENTWRDX)->KV$FLD.STRWRDSIZ)*2;
      658      832    3            Y@DSTTMPFLDLST$->Y$CHR = KV$PTR.FLDLST$->Y$CHR;
      659      833
      660      834        /* Free the old buffer pointed to by KV$PTR.FLDLST$
               834              */
      661      835
      662      836    3            %VDH_RLSBFR.BFR$ = KV$PTR.FLDLST$;
      663      837    3            %VDH_RLSBFR.BYTSIZ = (%KV_FLDLST.LSTCELWRDX + 1) * 2;
      664      838    3            CALL KVS$RLSBFR (%VDH_RLSBFR);
      665      839
      666      840    3         END;                              /* IF                                 */
      667      841    3         ELSE DO;
      668      842
      669      843        /* There was no FLDLST, make a null one. */
      670      844
      671      845    3            Y@DSTTMPFLDLST$->KV$FLDLST = KV_FLDLST;
      672      846    3         END;
      673      847
      674      848        /* Update the field list pointers.                                            */
      675      849
      676      850    2         KV$PTR.FLDLST$ = Y@DSTTMPFLDLST$;
      677      851    2         KV$PTR.FLD$ = PINCRW(Y@DSTTMPFLDLST$, KV$PTR.FLDWRDX);
      678      852    2         %KV_LIN.FLDLST$ = Y@DSTTMPFLDLST$;
      679      853    2         Y@DSTTMPFLDLST$->KV$FLDLST.LSTCELWRDX = Y@DSTLSTCELWRDX;
      680      854
      681      855        /* Update KV$LINLST with the current line in temporary storage                   */
      682      856
      683      857    2         %KV_LINLST.TMPFLDLSTLIN = KV$PTR.VRTLIN;
      684      858
      685      859    2      END; /* IF */
      686      860    1   END; /* SUBROUTINE */
PL6.E3A0      #004=KVF$UPDFLDLST File=KVF$MSC.:E05TSI                            WED 07/30/97 01:58 Page:81   
      687      861        %EOD;

PL6.E3A0      #004=KVF$UPDFLDLST File=KVF$MSC.:E05TSI                            WED 07/30/97 01:58 Page:82   
--  Include file information  --

   KV_ERRORS_C.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is never referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KVF$UPDFLDLST.

   Procedure KVF$UPDFLDLST requires 406 words for executable code.
   Procedure KVF$UPDFLDLST requires 26 words of local(AUTO) storage.

PL6.E3A0      #004=KVF$UPDFLDLST File=KVF$MSC.:E05TSI                            WED 07/30/97 01:58 Page:83   

 Object Unit name= KVF$UPDFLDLST                              File name= KVF$MSC.:E05TOU
 UTS= JUL 30 '97 01:58:47.44 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS      3      3  KVF$UPDFLDLST
    1   Proc  even  none   406    196  KVF$UPDFLDLST

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        0  KVF$UPDFLDLST
     1     24          yes     yes      Std        0  KVF$TRNTMPFLDLST

  ****  Data defs  ****

 Sect HexLoc  Name                           Sect HexLoc  Name
    0      0  KV_FLDLST

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 KVS$GETBFR
 yes     yes           Std       1 KVS$RLSBFR
                       nStd      0 X6A_AUTO_0
                       nStd      0 X6A_AALT
                       nStd      0 X6A_ARET
PL6.E3A0      #004=KVF$UPDFLDLST File=KVF$MSC.:E05TSI                            WED 07/30/97 01:58 Page:84   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KV$PTR$                               KV$RCVSSN$                       r    KV_VDH_GETBFR
r    G$ROS$
PL6.E3A0      #004=KVF$UPDFLDLST File=KVF$MSC.:E05TSI                            WED 07/30/97 01:58 Page:85   


      420        1        /*T***********************************************************/
      421        2        /*T*                                                         */
      422        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      423        4        /*T*                                                         */
      424        5        /*T***********************************************************/
      425        6        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
      426        7        KVF$UPDFLDLST: PROC ALTRET;             /* Update field list                  */

      7   1 000000  D380 0000 0000  xent KVF$UPDFLDLST   LNJ,B5   X6A_AUTO_0
          1 000003       001A 0000                       DC       26,0

      427        8
      428        9    1   DCL KVS$GETBFR ENTRY(1) ALTRET;
      429       10    1   DCL KVS$RLSBFR ENTRY(1) ALTRET;
      430       11
      431       12 S      %INCLUDE KV$GLB;
      432       13 S      %INCLUDE KV$GLBCTX;
      433       14 S      %INCLUDE KV$INT;
      434       15 S      %INCLUDE KV$VDH;
      435       16        %INCLUDE KV_ERRORS_C;
      436       76 S      %INCLUDE KV_GLBCNS_E;
      437       77
      438       78        %KV$PTR;
      439      121        %KV$FLD;
      440      209        %KV$FLDLST;
      441      233        %KV$FLDLST (NAME=KV_FLDLST, STCLASS=CONSTANT SYMDEF);
      442      257        %KV$LIN;
      443      281        %KV$LINLST;
      444      308        %KV$RCVSSN;
      445      333        %KV$STR;
      446      420        %KV_STRTYP_E;
      447      458        /*
      448      459        Character string declaration for moving data from one field list
      449      460        buffer to another.
      450      461        */
      451      462    1   DCL Y$CHR CHAR(Y@MOVBYTSIZ) BASED;
PL6.E3A0      #004=KVF$UPDFLDLST File=KVF$MSC.:E05TSI                            WED 07/30/97 01:58 Page:86   
      452      463        /*
      453      464        Pointer to the TMP FLDLST structure.
      454      465        */
      455      466    1   DCL Y@TMPFLDLST$ PTR;
      456      467        /*
      457      468        Flags in AUTO
      458      469        */
      459      470    1   DCL 1 Y@FLG AUTO,
      460      471        /*
      461      472        Flag to indicate a field list buffer update is taking place, as opposed to
      462      473        our simply being asked to truncate the temporary field list buffer.
      463      474        */
      464      475    1          2 UPDFLDLST BIT(1),
      465      476        /*
      466      477        Flag to indicate we have to grow the current temporary field list buffer because it
      467      478        isn't big enough for an update operation.
      468      479        */
      469      480    1          2 GRWTMPFLDLST BIT(1),
      470      481        /*
      471      482        Flag to indicate we want to truncate the current temporary field list buffer
      472      483        We truncate the buffer either because we are called simply to
      473      484        truncate, or because we are moving to a different virtual line
      474      485        than that represented by the temporary field list buffer.
      475      486        */
      476      487    1          2 TRNTMPFLDLST BIT(1);
      477      488        /*
      478      489        Pointer to destination buffer, used sometimes when moving data from
      479      490        one FLDLST buffer to another.
      480      491        */
      481      492    1   DCL Y@DSTTMPFLDLST$ PTR AUTO;
      482      493        /*
      483      494        Destination TMPFLDLST LSTCELWRDX.
      484      495        */
      485      496    1   DCL Y@DSTLSTCELWRDX UBIN WORD AUTO;
      486      497        /*
      487      498        Move byte size, sometimes used when moving data from one field
      488      499        list buffer to another.
PL6.E3A0      #004=KVF$UPDFLDLST File=KVF$MSC.:E05TSI                            WED 07/30/97 01:58 Page:87   
      489      500        */
      490      501    1   DCL Y@MOVBYTSIZ UBIN WORD AUTO;
      491      502
      492      503        %KV$VDH_GETBFR (NAME = KV@VDH_GETBFR, STCLASS = AUTO);
      493      568        %KV$VDH_GETBFR (NAME = KV_VDH_GETBFR, STCLASS = SYMREF READONLY);
      494      633
      495      634        %KV$VDH_RLSBFR (NAME = KV@VDH_RLSBFR);
      496      670        %EQU VDH_RLSBFR = CHARTEXT('ADDR(KV@VDH_GETBFR)->KV@VDH_RLSBFR');
      497      671
      498      672
      499      673        /* The purpose of this routine is to manage the field list buffers. This
      500      674           the buffer management method used revolves around the use of a temporary
      501      675           buffer (actually just a dynamic buffer with a greater life span) that
      502      676           holds the field list currently being manipulated. In most cases, we
      503      677           hope that this buffer will be large enough to hold a new field when
      504      678           added, so that the number of calls to the buffer manager will
      505      679           be minimized. The temporary buffer looks just like a dynamic buffer and
      506      680           is actually pointed to by the line list for the line being manipulated.
      507      681           This routine is the only routine which can tell the buffer is a temporary
      508      682           buffer and must be managed a little differently. When we begin to
      509      683           process a new line list, the used portion of the buffer is copied
      510      684          to dynamic memory, and the field list for the new line is copied to the temporary
      511      685           buffer. The calling routines must be careful to make a call
      512      686           to this routine to truncate the temporary buffer, when they are through
      513      687           processing the current message.
      514      688
      515      689
      516      690        We enter here to grow a field list buffer. KV$PTR points to the
      517      691        field list to grow
      518      692
      519      693        Set the flags
      520      694        */
      521      695    1      Y@FLG = '111'B;

    695   1 000005  8947 0006                            LBT,'E000'X       Y@FLG,AUTO
    695   1 000007       E000

PL6.E3A0      #004=KVF$UPDFLDLST File=KVF$MSC.:E05TSI                            WED 07/30/97 01:58 Page:88   
      522      696        /*
      523      697        If there is no current field list buffer (we're starting a new
      524      698        one) or if the current temporary field list buffer is not for the line
      525      699        we are about to update, leave the flag set indicating we have to truncate
      526      700        the current temporary buffer.  I.e., if the temporary buffer
      527      701        is for the line we're interested in, don't truncate it.
      528      702        */
      529      703    1      IF (KV$PTR.FLDLST$ ~= ADDR(NIL))

    703   1 000008  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 00000B  8DC6 0012                            CMN      18,B6
          1 00000D  0901 0014                            BE       s:709,PREL

      530      704    1      THEN IF (%KV_FLDLST.LSTENTWRDX ~= 0)

    704   1 00000F  DCC6 0012                            LDB,B5   18,B6
          1 000011  E845 0001                            LDR,R6   1,B5
          1 000013  6901 000E                            BEZ,R6   s:709,PREL
          1 000015  CCC6 000E                            LDB,B4   14,B6
          1 000017  D844 0006                            LDR,R5   6,B4
          1 000019  5801 0008                            BLZ,R5   s:709,PREL
          1 00001B  D946 0019                            CMR,R5   25,B6
          1 00001D  0981 0004                            BNE      s:709,PREL

      531      705    2        AND (%KV_LINLST.TMPFLDLSTLIN = KV$PTR.VRTLIN) THEN DO;

      532      706    2         Y@FLG.TRNTMPFLDLST = '0'B;

    706   1 00001F  8847 0006                            LBF,'2000'X       Y@FLG,AUTO
    706   1 000021       2000

      533      707    2      END; /* IF */

      534      708
      535      709    1      GOTO SUBCOMMON;                      /* LOOK BELOW                         */

    709   1 000022  0F81 000A                            B        s:716,PREL
PL6.E3A0      #004=KVF$UPDFLDLST File=KVF$MSC.:E05TSI                            WED 07/30/97 01:58 Page:89   

      536      710        %EJECT;
PL6.E3A0      #004=KVF$UPDFLDLST File=KVF$MSC.:E05TSI                            WED 07/30/97 01:58 Page:90   
      537      711    1   KVF$TRNTMPFLDLST: ENTRY ALTRET;         /* Truncate temporary field list      */

    711   1 000024  D380 0000 0000  xent KVF$TRNTMPFLDLSTLNJ,B5   X6A_AUTO_0
          1 000027       001A 0000                       DC       26,0

      538      712
      539      713        /* We enter here if we just want to truncate the temporary buffer and do no
      540      714           updating                                                                   */
      541      715
      542      716    1      Y@FLG = '011'B;

    716   1 000029  E870 6000                            LDR,R6   24576,IMO
          1 00002B  EF47 0006                            STR,R6   Y@FLG,AUTO

    716   1                              SUBCOMMON       null
      543      717
      544      718    1   SUBCOMMON: ;                            /* THERE MUST BE AN ALTENTRY ABOVE ME */
      545      719        %EJECT;
PL6.E3A0      #004=KVF$UPDFLDLST File=KVF$MSC.:E05TSI                            WED 07/30/97 01:58 Page:91   
      546      720    1      KV@VDH_GETBFR = KV_VDH_GETBFR;

    720   1 00002D  AB80 0000 0000  xsym SUBCOMMON       LAB,B2   KV_VDH_GETBFR
          1 000030  2C00                                 LDV,R2   0
          1 000031  6C16                                 LDV,R6   22
          1 000032  BB87                                 LAB,B3   ,AUTO
          1 000033  3C16                                 LDV,R3   22
          1 000034  0008                                 MMM

      547      721    1      KV@VDH_GETBFR.STRTYP = %KV_STRTYP_FLDLST;

    721   1 000035  6C06                                 LDV,R6   6
          1 000036  E7C7 0011                            STH,R6   KV@VDH_GETBFR+6,AUTO

      548      722    1      IF %KV_LINLST.TMPFLDLSTLIN=0 THEN Y@TMPFLDLST$ = ADDR(NIL);

    722   1 000038  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 00003B  DCC6 000E                            LDB,B5   14,B6
          1 00003D  D845 0006                            LDR,R5   6,B5
          1 00003F  5981 0008                            BNEZ,R5  s:724,PREL

    722   1 000041  CB80 0000 0000                       LAB,B4   0
          1 000044  CFC7 0004                            STB,B4   Y@TMPFLDLST$,AUTO
          1 000046  0F81 00A2                            B        s:785,PREL

      549      723    2      ELSE DO;

      550      724    2         Y@TMPFLDLST$ = PINCRW(KV$PTR.LINLST$,

    724   1 000048  B855                                 LDR,R3   R5
          1 000049  DFC7 0016                            STB,B5   KV@VDH_GETBFR+11,AUTO
          1 00004B  F853                                 LDR,R7   R3
          1 00004C  6C00                                 LDV,R6   0
          1 00004D  7082                                 DOL,R7   2
          1 00004E  8447 0016                            AID      KV@VDH_GETBFR+11,AUTO
          1 000050  8470 0000 0004                       AID      4,IMO
          1 000053  8D47 0018                            SDI      KV@VDH_GETBFR+13,AUTO
PL6.E3A0      #004=KVF$UPDFLDLST File=KVF$MSC.:E05TSI                            WED 07/30/97 01:58 Page:92   
          1 000055  CCC7 0018                            LDB,B4   KV@VDH_GETBFR+13,AUTO
          1 000057  AC84                                 LDB,B2   ,B4
          1 000058  AFC7 0004                            STB,B2   Y@TMPFLDLST$,AUTO

      551      725    2           (%KV_LINLST.TMPFLDLSTLIN-1)*SIZEW(KV$LIN)+SIZEW(KV$LINLST))->
      552      726    2           KV$LIN.FLDLST$;
      553      727    2         IF NOT Y@FLG.TRNTMPFLDLST THEN EXIT;

    727   1 00005A  82C7 0006                            LB,'2000'X        Y@FLG,AUTO
    727   1 00005C       2000
          1 00005D  0581 008B                            BBF      s:785,PREL

      554      728        /*
      555      729        We are to truncate the current temporary buffer.
      556      730        Basically, this section of code gets a 'normal' field list buffer
      557      731        just large enough to hold the contents of the temporary
      558      732        field list buffer, and then releases the temporary field
      559      733        list buffer if it is no longer useful (too small) or desired (cleaning up).
      560      734        */
      561      735    2         KV@VDH_GETBFR.DAT_.ADR$ = Y@TMPFLDLST$;

    735   1 00005F  AFC7 0012                            STB,B2   KV@VDH_GETBFR+7,AUTO

      562      736    3         IF Y@TMPFLDLST$->KV$FLDLST.LSTENTWRDX~=0 THEN DO;

    736   1 000061  C842 0001                            LDR,R4   1,B2
          1 000063  4901 0026                            BEZ,R4   s:755,PREL

      563      737        /*
      564      738        Just release the old one if there's nothing in it.
      565      739        */
      566      740    3            KV@VDH_GETBFR.BYTSIZ = (Y@TMPFLDLST$->KV$FLDLST.LSTENTWRDX +

    740   1 000065  A854                                 LDR,R2   R4
          1 000066  2001                                 SOL,R2   1
          1 000067  2E03                                 ADV,R2   3
          1 000068  90A2                                 LDH,R1   ,B2,R2
PL6.E3A0      #004=KVF$UPDFLDLST File=KVF$MSC.:E05TSI                            WED 07/30/97 01:58 Page:93   
          1 000069  9A54                                 ADD,R1   R4
          1 00006A  1001                                 SOL,R1   1
          1 00006B  1E02                                 ADV,R1   2
          1 00006C  9F47 000E                            STR,R1   KV@VDH_GETBFR+3,AUTO

      567      741    3              PINCRW(Y@TMPFLDLST$, Y@TMPFLDLST$->KV$FLDLST.LSTENTWRDX)->KV$FLD.
               741                       STRWRDSIZ + 1) * 2;
      568      742    3            KV@VDH_GETBFR.DAT_.BYTSIZ = KV@VDH_GETBFR.BYTSIZ;

    742   1 00006E  9F47 0015                            STR,R1   KV@VDH_GETBFR+10,AUTO

      569      743    3            IF KV@VDH_GETBFR.BYTSIZ>Y@TMPFLDLST$->KV$FLDLST.LSTCELWRDX+1

    743   1 000070  A802                                 LDR,R2   ,B2
          1 000071  2E01                                 ADV,R2   1
          1 000072  2801 0076                            BLZ,R2   s:785,PREL
          1 000074  A951                                 CMR,R2   R1
          1 000075  0201 0073                            BL       s:785,PREL

      570      744    3            THEN GOTO NOTRUNC;             /* Don't bother for same-size buffer. */
      571      745    3            CALL KVS$GETBFR(KV@VDH_GETBFR) ALTRET(NOTRUNC);

    745   1 000077  CBC7 000B                            LAB,B4   KV@VDH_GETBFR,AUTO
          1 000079  CFC7 0016                            STB,B4   KV@VDH_GETBFR+11,AUTO
          1 00007B  BBC7 0016                            LAB,B3   KV@VDH_GETBFR+11,AUTO
          1 00007D  CBF0 0100                            LAB,B4   256,IMO
          1 00007F  E380 0000 0000  xent                 LNJ,B6   KVS$GETBFR
          1 000082       0067                            DC       s:785,PREL

      572      746
      573      747        /* Update LSTCELWRDX to reflect the amount of memory we actually got          */
      574      748
      575      749    3            KV@VDH_GETBFR.BFR$->KV$FLDLST.LSTCELWRDX =

    749   1 000083  E847 000E                            LDR,R6   KV@VDH_GETBFR+3,AUTO
          1 000085  6041                                 SOR,R6   1
          1 000086  ECC7 000C                            LDB,B6   KV@VDH_GETBFR+1,AUTO
PL6.E3A0      #004=KVF$UPDFLDLST File=KVF$MSC.:E05TSI                            WED 07/30/97 01:58 Page:94   
          1 000088  6EFF                                 ADV,R6   -1
          1 000089  EF06                                 STR,R6   ,B6

      576      750    3              (KV@VDH_GETBFR.BYTSIZ) / 2 - 1;
      577      751    3         END;

      578      752
      579      753        /* Update the field list pointer                                              */
      580      754
      581      755    2         PINCRW(KV$PTR.LINLST$,

    755   1 00008A  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 00008D  DCC6 000E                            LDB,B5   14,B6
          1 00008F  CCC6 0010                            LDB,B4   16,B6
          1 000091  B845 0006                            LDR,R3   6,B5
          1 000093  DFC7 0016                            STB,B5   KV@VDH_GETBFR+11,AUTO
          1 000095  F853                                 LDR,R7   R3
          1 000096  6C00                                 LDV,R6   0
          1 000097  7082                                 DOL,R7   2
          1 000098  8447 0016                            AID      KV@VDH_GETBFR+11,AUTO
          1 00009A  8470 0000 0004                       AID      4,IMO
          1 00009D  CCC7 000C                            LDB,B4   KV@VDH_GETBFR+1,AUTO
          1 00009F  8D47 0018                            SDI      KV@VDH_GETBFR+13,AUTO
          1 0000A1  BCC7 0018                            LDB,B3   KV@VDH_GETBFR+13,AUTO
          1 0000A3  CF83                                 STB,B4   ,B3

      582      756    2           ((%KV_LINLST.TMPFLDLSTLIN - 1) * SIZEW(%KV_LIN)) + SIZEW(%KV_LINLST))
      583      757    2           ->KV$LIN.FLDLST$ = KV@VDH_GETBFR.BFR$;
      584      758    3         IF KV$PTR.FLDLST$=KV@VDH_GETBFR.DAT_.ADR$ THEN DO;

    758   1 0000A4  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 0000A7  DCC6 0012                            LDB,B5   18,B6
          1 0000A9  DDC7 0012                            CMB,B5   KV@VDH_GETBFR+7,AUTO
          1 0000AB  0981 000A                            BNE      s:762,PREL

      585      759    3            KV$PTR.FLDLST$ = KV@VDH_GETBFR.BFR$;

PL6.E3A0      #004=KVF$UPDFLDLST File=KVF$MSC.:E05TSI                            WED 07/30/97 01:58 Page:95   
    759   1 0000AD  CCC7 000C                            LDB,B4   KV@VDH_GETBFR+1,AUTO
          1 0000AF  CFC6 0012                            STB,B4   18,B6

      586      760    3            KV$PTR.FLD$ = PINCRW(KV$PTR.FLDLST$,KV$PTR.FLDWRDX);

    760   1 0000B1  B846 0018                            LDR,R3   24,B6
          1 0000B3  DBB4                                 LAB,B5   ,B4,R3
          1 0000B4  DFC6 0014                            STB,B5   20,B6

      587      761    3         END;

      588      762    2         %KV_LINLST.TMPFLDLSTLIN = 0;

    762   1 0000B6  DCC6 000E                            LDB,B5   14,B6
          1 0000B8  8745 0006                            CL       6,B5

      589      763
      590      764    2         IF Y@FLG.UPDFLDLST

    764   1 0000BA  89C7 0006                            CMZ      Y@FLG,AUTO
          1 0000BC  0881 0012                            BAGE     s:780,PREL
          1 0000BE  DC80 0000 0000  xsym                 LDB,B5   KV$RCVSSN$
          1 0000C1  CCC7 0004                            LDB,B4   Y@TMPFLDLST$,AUTO
          1 0000C3  E804                                 LDR,R6   ,B4
          1 0000C4  6E01                                 ADV,R6   1
          1 0000C5  6801 0009                            BLZ,R6   s:780,PREL
          1 0000C7  E905                                 CMR,R6   ,B5
          1 0000C8  0201 0006                            BL       s:780,PREL

      591      765    2           AND ((Y@TMPFLDLST$->KV$FLDLST.LSTCELWRDX + 1)
      592      766    3           >= %KV_RCVSSN.FLDWRDSIZ) THEN DO;

      593      767        /*
      594      768        An update operation is being performed (as opposed to simply
      595      769        truncating the temporary buffer), and the temporary buffer is large
      596      770        enough to satisfy the request.  Use the temporary buffer instead
      597      771        of releasing it.
PL6.E3A0      #004=KVF$UPDFLDLST File=KVF$MSC.:E05TSI                            WED 07/30/97 01:58 Page:96   
      598      772        */
      599      773    3            Y@FLG.GRWTMPFLDLST = '0'B;

    773   1 0000CA  8847 0006                            LBF,'4000'X       Y@FLG,AUTO
    773   1 0000CC       4000

      600      774    3         END; ELSE DO;

    774   1 0000CD  0F81 001B                            B        s:785,PREL

      601      775        /*
      602      776        Either we're simply to release the temporary buffer, or it isn't
      603      777        big enough.
      604      778        Release the temporary buffer.
      605      779        */
      606      780    3            %VDH_RLSBFR.BFR$ = Y@TMPFLDLST$;

    780   1 0000CF  DCC7 0004                            LDB,B5   Y@TMPFLDLST$,AUTO
          1 0000D1  DFC7 000C                            STB,B5   KV@VDH_GETBFR+1,AUTO

      607      781    3            %VDH_RLSBFR.BYTSIZ = (Y@TMPFLDLST$->KV$FLDLST.LSTCELWRDX + 1) * 2;

    781   1 0000D3  E805                                 LDR,R6   ,B5
          1 0000D4  6001                                 SOL,R6   1
          1 0000D5  6E02                                 ADV,R6   2
          1 0000D6  EF47 000E                            STR,R6   KV@VDH_GETBFR+3,AUTO

      608      782    3            CALL KVS$RLSBFR (%VDH_RLSBFR);

    782   1 0000D8  CBC7 000B                            LAB,B4   KV@VDH_GETBFR,AUTO
          1 0000DA  CFC7 0016                            STB,B4   KV@VDH_GETBFR+11,AUTO
          1 0000DC  BBC7 0016                            LAB,B3   KV@VDH_GETBFR+11,AUTO
          1 0000DE  CBF0 0100                            LAB,B4   256,IMO
          1 0000E0  E380 0000 0000  xent                 LNJ,B6   KVS$RLSBFR
          1 0000E3       0001                            DC       s:783,PREL

      609      783    3            Y@TMPFLDLST$ = ADDR(NIL);
PL6.E3A0      #004=KVF$UPDFLDLST File=KVF$MSC.:E05TSI                            WED 07/30/97 01:58 Page:97   

    783   1 0000E4  EB80 0000 0000                       LAB,B6   0
          1 0000E7  EFC7 0004                            STB,B6   Y@TMPFLDLST$,AUTO

      610      784    3         END;                              /* IF                                 */

      611      785    2      END; /* IF */

    780   1                              NOTRUNC         null
      612      786    1   NOTRUNC:;
      613      787        %EJECT;
PL6.E3A0      #004=KVF$UPDFLDLST File=KVF$MSC.:E05TSI                            WED 07/30/97 01:58 Page:98   
      614      788    2      IF Y@FLG.UPDFLDLST THEN DO;

    788   1 0000E9  89C7 0006            NOTRUNC         CMZ      Y@FLG,AUTO
          1 0000EB  0881 00A7                            BAGE     s:860,PREL

      615      789        /*
      616      790        Update the temporary buffer with a different dynamic buffer.
      617      791        */
      618      792    3         IF Y@FLG.GRWTMPFLDLST THEN DO;

    792   1 0000ED  82C7 0006                            LB,'4000'X        Y@FLG,AUTO
    792   1 0000EF       4000
          1 0000F0  0581 0030                            BBF      s:811,PREL

      619      793        /*
      620      794        We have to aquire a larger temporary buffer before we can
      621      795        place the different dynamic buffer into it.
      622      796        */
      623      797    3            KV@VDH_GETBFR.DAT_.BYTSIZ = 0;

    797   1 0000F2  8747 0015                            CL       KV@VDH_GETBFR+10,AUTO

      624      798    3            KV@VDH_GETBFR.BYTSIZ = %KV_RCVSSN.FLDWRDSIZ * 2;

    798   1 0000F4  EC80 0000 0000  xsym                 LDB,B6   KV$RCVSSN$
          1 0000F7  E806                                 LDR,R6   ,B6
          1 0000F8  6001                                 SOL,R6   1
          1 0000F9  EF47 000E                            STR,R6   KV@VDH_GETBFR+3,AUTO

      625      799    4            CALL KVS$GETBFR(KV@VDH_GETBFR) WHENALTRETURN DO;

    799   1 0000FB  DBC7 000B                            LAB,B5   KV@VDH_GETBFR,AUTO
          1 0000FD  DFC7 0016                            STB,B5   KV@VDH_GETBFR+11,AUTO
          1 0000FF  BBC7 0016                            LAB,B3   KV@VDH_GETBFR+11,AUTO
          1 000101  CBF0 0100                            LAB,B4   256,IMO
          1 000103  E380 0000 0000  xent                 LNJ,B6   KVS$GETBFR
          1 000106       0003                            DC       s:800,PREL
PL6.E3A0      #004=KVF$UPDFLDLST File=KVF$MSC.:E05TSI                            WED 07/30/97 01:58 Page:99   
          1 000107  0F81 000D                            B        s:806,PREL

      626      800    4               %KV_STR.ERR.COD=%E$CANTGETCTX;

    800   1 000109  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 00010C  DCC6 0004                            LDB,B5   4,B6
          1 00010E  E870 05C8                            LDR,R6   1480,IMO
          1 000110  EF45 0013                            STR,R6   19,B5

      627      801    4               ALTRETURN;

    801   1 000112  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      628      802    4            END;
      629      803
      630      804        /* Save LSTCELWRDX. */
      631      805
      632      806    3            Y@DSTTMPFLDLST$ = KV@VDH_GETBFR.BFR$;

    806   1 000115  ECC7 000C                            LDB,B6   KV@VDH_GETBFR+1,AUTO
          1 000117  EFC7 0007                            STB,B6   Y@DSTTMPFLDLST$,AUTO

      633      807    3            Y@DSTLSTCELWRDX = (KV@VDH_GETBFR.BYTSIZ / 2) - 1;

    807   1 000119  E847 000E                            LDR,R6   KV@VDH_GETBFR+3,AUTO
          1 00011B  6041                                 SOR,R6   1
          1 00011C  6EFF                                 ADV,R6   -1
          1 00011D  EF47 0009                            STR,R6   Y@DSTLSTCELWRDX,AUTO

      634      808
      635      809    3         END; ELSE DO;

    809   1 00011F  0F81 0014                            B        s:825,PREL

      636      810
      637      811    4            IF KV$PTR.FLDLST$ ~= ADDR(NIL) THEN DO;

PL6.E3A0      #004=KVF$UPDFLDLST File=KVF$MSC.:E05TSI                            WED 07/30/97 01:58 Page:100  
    811   1 000121  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 000124  8DC6 0012                            CMN      18,B6
          1 000126  0901 0006                            BE       s:821,PREL

      638      812        /*
      639      813        We're going to do a move of the data from the KV$PTR.FLDLST$
      640      814        field list to the Y@TMPFLDLST$ later, so save
      641      815        Y@TMPFLDLST$->LSTCELWRDX for the move of LSTCELWRDX
      642      816        into the destination FLDLST later, effectively simply restoring
      643      817        it.
      644      818        */
      645      819    4               Y@DSTLSTCELWRDX = Y@TMPFLDLST$->KV$FLDLST.LSTCELWRDX;

    819   1 000128  DCC7 0004                            LDB,B5   Y@TMPFLDLST$,AUTO
          1 00012A  E805                                 LDR,R6   ,B5
          1 00012B  EF47 0009                            STR,R6   Y@DSTLSTCELWRDX,AUTO

      646      820    4            END;                           /* END IF KV$PTR.FLDLST$ ~= ADDR(NIL) */

      647      821    3            Y@DSTTMPFLDLST$ = Y@TMPFLDLST$;

    821   1 00012D  DCC7 0004                            LDB,B5   Y@TMPFLDLST$,AUTO
          1 00012F  DFC7 0007                            STB,B5   Y@DSTTMPFLDLST$,AUTO

      648      822    3            Y@DSTLSTCELWRDX = Y@DSTTMPFLDLST$->KV$FLDLST.LSTCELWRDX;

    822   1 000131  E805                                 LDR,R6   ,B5
          1 000132  EF47 0009                            STR,R6   Y@DSTLSTCELWRDX,AUTO

      649      823    3         END;                              /* IF                                 */

      650      824
      651      825    3         IF (KV$PTR.FLDLST$ ~= ADDR(NIL)) THEN DO;

    825   1 000134  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 000137  8DC6 0012                            CMN      18,B6
          1 000139  0901 0035                            BE       s:845,PREL
PL6.E3A0      #004=KVF$UPDFLDLST File=KVF$MSC.:E05TSI                            WED 07/30/97 01:58 Page:101  

      652      826        /*
      653      827        Move the data from the old buffer to the new one.
      654      828        */
      655      829    3            IF %KV_FLDLST.LSTENTWRDX=0 THEN Y@MOVBYTSIZ = SIZEC(KV_FLDLST);

    829   1 00013B  DCC6 0012                            LDB,B5   18,B6
          1 00013D  D845 0001                            LDR,R5   1,B5
          1 00013F  5981 0006                            BNEZ,R5  s:830,PREL

    829   1 000141  4C06                                 LDV,R4   6
          1 000142  CF47 000A                            STR,R4   Y@MOVBYTSIZ,AUTO
          1 000144  0F81 0009                            B        s:832,PREL

      656      830    3            ELSE Y@MOVBYTSIZ = (%KV_FLDLST.LSTENTWRDX +

    830   1 000146  B855                                 LDR,R3   R5
          1 000147  3001                                 SOL,R3   1
          1 000148  3E03                                 ADV,R3   3
          1 000149  C0B5                                 LDH,R4   ,B5,R3
          1 00014A  CA55                                 ADD,R4   R5
          1 00014B  4001                                 SOL,R4   1
          1 00014C  CF47 000A                            STR,R4   Y@MOVBYTSIZ,AUTO

      657      831    3              PINCRW(KV$PTR.FLDLST$, %KV_FLDLST.LSTENTWRDX)->KV$FLD.STRWRDSIZ)*2;
      658      832    3            Y@DSTTMPFLDLST$->Y$CHR = KV$PTR.FLDLST$->Y$CHR;

    832   1 00014E  AB85                                 LAB,B2   ,B5
          1 00014F  2C00                                 LDV,R2   0
          1 000150  E854                                 LDR,R6   R4
          1 000151  BCC7 0007                            LDB,B3   Y@DSTTMPFLDLST$,AUTO
          1 000153  3C00                                 LDV,R3   0
          1 000154  0008                                 MMM

      659      833
      660      834        /* Free the old buffer pointed to by KV$PTR.FLDLST$
               834              */
PL6.E3A0      #004=KVF$UPDFLDLST File=KVF$MSC.:E05TSI                            WED 07/30/97 01:58 Page:102  
      661      835
      662      836    3            %VDH_RLSBFR.BFR$ = KV$PTR.FLDLST$;

    836   1 000155  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 000158  CCC6 0012                            LDB,B4   18,B6
          1 00015A  CFC7 000C                            STB,B4   KV@VDH_GETBFR+1,AUTO

      663      837    3            %VDH_RLSBFR.BYTSIZ = (%KV_FLDLST.LSTCELWRDX + 1) * 2;

    837   1 00015C  E804                                 LDR,R6   ,B4
          1 00015D  6001                                 SOL,R6   1
          1 00015E  6E02                                 ADV,R6   2
          1 00015F  EF47 000E                            STR,R6   KV@VDH_GETBFR+3,AUTO

      664      838    3            CALL KVS$RLSBFR (%VDH_RLSBFR);

    838   1 000161  BBC7 000B                            LAB,B3   KV@VDH_GETBFR,AUTO
          1 000163  BFC7 0016                            STB,B3   KV@VDH_GETBFR+11,AUTO
          1 000165  BBC7 0016                            LAB,B3   KV@VDH_GETBFR+11,AUTO
          1 000167  CBF0 0100                            LAB,B4   256,IMO
          1 000169  E380 0000 0000  xent                 LNJ,B6   KVS$RLSBFR
          1 00016C       0001                            DC       s:840,PREL

      665      839
      666      840    3         END;                              /* IF                                 */

    840   1 00016D  0F81 000A                            B        s:850,PREL

      667      841    3         ELSE DO;

      668      842
      669      843        /* There was no FLDLST, make a null one. */
      670      844
      671      845    3            Y@DSTTMPFLDLST$->KV$FLDLST = KV_FLDLST;

    845   1 00016F  AB80 0000 0000  00                   LAB,B2   KV_FLDLST
          1 000172  2C00                                 LDV,R2   0
PL6.E3A0      #004=KVF$UPDFLDLST File=KVF$MSC.:E05TSI                            WED 07/30/97 01:58 Page:103  
          1 000173  6C06                                 LDV,R6   6
          1 000174  BCC7 0007                            LDB,B3   Y@DSTTMPFLDLST$,AUTO
          1 000176  3C00                                 LDV,R3   0
          1 000177  0008                                 MMM

      672      846    3         END;

      673      847
      674      848        /* Update the field list pointers.                                            */
      675      849
      676      850    2         KV$PTR.FLDLST$ = Y@DSTTMPFLDLST$;

    850   1 000178  ECC7 0007                            LDB,B6   Y@DSTTMPFLDLST$,AUTO
          1 00017A  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 00017D  EFC5 0012                            STB,B6   18,B5

      677      851    2         KV$PTR.FLD$ = PINCRW(Y@DSTTMPFLDLST$, KV$PTR.FLDWRDX);

    851   1 00017F  B845 0018                            LDR,R3   24,B5
          1 000181  CBB6                                 LAB,B4   ,B6,R3
          1 000182  CFC5 0014                            STB,B4   20,B5

      678      852    2         %KV_LIN.FLDLST$ = Y@DSTTMPFLDLST$;

    852   1 000184  BCC5 0010                            LDB,B3   16,B5
          1 000186  EF83                                 STB,B6   ,B3

      679      853    2         Y@DSTTMPFLDLST$->KV$FLDLST.LSTCELWRDX = Y@DSTLSTCELWRDX;

    853   1 000187  E847 0009                            LDR,R6   Y@DSTLSTCELWRDX,AUTO
          1 000189  EF06                                 STR,R6   ,B6

      680      854
      681      855        /* Update KV$LINLST with the current line in temporary storage                   */
      682      856
      683      857    2         %KV_LINLST.TMPFLDLSTLIN = KV$PTR.VRTLIN;

PL6.E3A0      #004=KVF$UPDFLDLST File=KVF$MSC.:E05TSI                            WED 07/30/97 01:58 Page:104  
    857   1 00018A  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 00018D  CCC5 000E                            LDB,B4   14,B5
          1 00018F  D845 0019                            LDR,R5   25,B5
          1 000191  DF44 0006                            STR,R5   6,B4

      684      858
      685      859    2      END; /* IF */

      686      860    1   END; /* SUBROUTINE */

    860   1 000193  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      687      861        %EOD;

PL6.E3A0      #004=KVF$UPDFLDLST File=KVF$MSC.:E05TSI                            WED 07/30/97 01:58 Page:105  
--  Include file information  --

   KV_ERRORS_C.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is never referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KVF$UPDFLDLST.
PL6.E3A0      #004=KVF$UPDFLDLST File=KVF$MSC.:E05TSI                            WED 07/30/97 01:58 Page:106  

 **** Variables and constants ****

  ****  Section 000 RoData KVF$UPDFLDLST

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(48)    r     1 KV_FLDLST

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     B-0-0/w STRC(176)   r     1 KV@VDH_GETBFR              9-0-0/w UBIN(16)    r     1 Y@DSTLSTCELWRDX
     7-0-0/w PTR         r     1 Y@DSTTMPFLDLST$            6-0-0/b STRC(3)     r     1 Y@FLG
     A-0-0/w UBIN(16)    r     1 Y@MOVBYTSIZ                4-0-0/w PTR         r     1 Y@TMPFLDLST$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 KV$PTR$                    0-0-0/w PTR         r     1 KV$RCVSSN$
     0-0-0/w STRC(176)   r     1 KV_VDH_GETBFR

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(104)   r     1 KV$FLD                     0-0-0/w STRC(48)    r     1 KV$FLDLST
     0-0-0/w STRC(64)    r     1 KV$LIN                     0-0-0/w STRC(128)   r     1 KV$LINLST
     0-0-0/w STRC(480)   r     1 KV$PTR                     0-0-0/w STRC(96)    r     1 KV$RCVSSN
     0-0-0/w STRC(512)   r     1 KV$STR                     0-0-0/w STRC(112)   r     1 KV@VDH_RLSBFR
     0-0-0/c ACHR        r     1 Y$CHR

PL6.E3A0      #004=KVF$UPDFLDLST File=KVF$MSC.:E05TSI                            WED 07/30/97 01:58 Page:107  

   Procedure KVF$UPDFLDLST requires 406 words for executable code.
   Procedure KVF$UPDFLDLST requires 26 words of local(AUTO) storage.
PL6.E3A0      #004=KVF$UPDFLDLST File=KVF$MSC.:E05TSI                            WED 07/30/97 01:58 Page:108  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=KVF$UPDFLDLST File=KVF$MSC.:E05TSI                            WED 07/30/97 01:58 Page:109  
          MINI XREF LISTING

KV$FLD.STRWRDSIZ
       142**DCL       740>>ASSIGN    830>>ASSIGN
KV$FLDLST
       230**DCL       845<<ASSIGN
KV$FLDLST.LSTCELWRDX
       230**DCL       743>>IF        749<<ASSIGN    764>>IF        781>>ASSIGN    819>>ASSIGN    822>>ASSIGN
       837>>ASSIGN    853<<ASSIGN
KV$FLDLST.LSTENTWRDX
       230**DCL       704>>IF        736>>IF        740>>ASSIGN    740>>ASSIGN    829>>IF        830>>ASSIGN
       830>>ASSIGN
KV$LIN
       278**DCL       724--ASSIGN    755--ASSIGN
KV$LIN.FLDLST$
       278**DCL       724>>ASSIGN    755<<ASSIGN    852<<ASSIGN
KV$LINLST
       302**DCL       724--ASSIGN    755--ASSIGN
KV$LINLST.TMPFLDLSTLIN
       305**DCL       704>>IF        722>>IF        724>>ASSIGN    755>>ASSIGN    762<<ASSIGN    857<<ASSIGN
KV$PTR.FLD$
       103**DCL       760<<ASSIGN    851<<ASSIGN
KV$PTR.FLDLST$
       102**DCL       703>>IF        704>>IF        758>>IF        759<<ASSIGN    760>>ASSIGN    811>>IF
       825>>IF        829>>IF        830>>ASSIGN    830>>ASSIGN    830>>ASSIGN    832>>ASSIGN    836>>ASSIGN
       837>>ASSIGN    850<<ASSIGN
KV$PTR.FLDWRDX
       103**DCL       760>>ASSIGN    851>>ASSIGN
KV$PTR.INPCNDPND
       105**DCL       114--REDEF     118--REDEF
KV$PTR.LIN$
       102**DCL       755>>ASSIGN    852>>ASSIGN
KV$PTR.LINLST$
       101**DCL       102--REDEF     704>>IF        722>>IF        724>>ASSIGN    724>>ASSIGN    755>>ASSIGN
PL6.E3A0      #004=KVF$UPDFLDLST File=KVF$MSC.:E05TSI                            WED 07/30/97 01:58 Page:110  
       755>>ASSIGN    755>>ASSIGN    762>>ASSIGN    857>>ASSIGN
KV$PTR.STR$
        99**DCL       800>>ASSIGN
KV$PTR.VRTLIN
       104**DCL       704>>IF        857>>ASSIGN
KV$PTR$
        93**DCL        99--IMP-PTR   703>>IF        704>>IF        704>>IF        704>>IF        722>>IF
       724>>ASSIGN    724>>ASSIGN    755>>ASSIGN    755>>ASSIGN    755>>ASSIGN    755>>ASSIGN    758>>IF
       759>>ASSIGN    760>>ASSIGN    760>>ASSIGN    760>>ASSIGN    762>>ASSIGN    800>>ASSIGN    811>>IF
       825>>IF        829>>IF        830>>ASSIGN    830>>ASSIGN    830>>ASSIGN    832>>ASSIGN    836>>ASSIGN
       837>>ASSIGN    850>>ASSIGN    851>>ASSIGN    851>>ASSIGN    852>>ASSIGN    857>>ASSIGN    857>>ASSIGN
KV$RCVSSN.FLDWRDSIZ
       330**DCL       764>>IF        798>>ASSIGN
KV$RCVSSN$
       316**DCL       764>>IF        798>>ASSIGN
KV$STR.ERR.COD
       408**DCL       800<<ASSIGN
KV@VDH_GETBFR
       530**DCL       720<<ASSIGN    745<>CALL      780--ASSIGN    781--ASSIGN    782--CALL      799<>CALL
       836--ASSIGN    837--ASSIGN    838--CALL
KV@VDH_GETBFR.BFR$
       536**DCL       749>>ASSIGN    755>>ASSIGN    759>>ASSIGN    806>>ASSIGN
KV@VDH_GETBFR.BYTSIZ
       536**DCL       740<<ASSIGN    742>>ASSIGN    743>>IF        749>>ASSIGN    798<<ASSIGN    807>>ASSIGN
KV@VDH_GETBFR.DAT_.ADR$
       564**DCL       735<<ASSIGN    758>>IF
KV@VDH_GETBFR.DAT_.BYTSIZ
       564**DCL       742<<ASSIGN    797<<ASSIGN
KV@VDH_GETBFR.STRTYP
       536**DCL       721<<ASSIGN
KV@VDH_RLSBFR
       661**DCL       782<>CALL      838<>CALL
KV@VDH_RLSBFR.BFR$
       667**DCL       780<<ASSIGN    836<<ASSIGN
KV@VDH_RLSBFR.BYTSIZ
       667**DCL       781<<ASSIGN    837<<ASSIGN
PL6.E3A0      #004=KVF$UPDFLDLST File=KVF$MSC.:E05TSI                            WED 07/30/97 01:58 Page:111  
KVS$GETBFR
         9**DCL-ENT   745--CALL      799--CALL
KVS$RLSBFR
        10**DCL-ENT   782--CALL      838--CALL
KV_FLDLST
       254**DCL       829--ASSIGN    845>>ASSIGN
KV_VDH_GETBFR
       595**DCL       720>>ASSIGN
NOTRUNC
       780**LABEL     744--GOTO      745--CALLALT
SUBCOMMON
       716**LABEL     709--GOTO
Y$CHR
       462**DCL       832<<ASSIGN    832>>ASSIGN
Y@DSTLSTCELWRDX
       496**DCL       807<<ASSIGN    819<<ASSIGN    822<<ASSIGN    853>>ASSIGN
Y@DSTTMPFLDLST$
       492**DCL       806<<ASSIGN    821<<ASSIGN    822>>ASSIGN    832>>ASSIGN    845>>ASSIGN    850>>ASSIGN
       851>>ASSIGN    852>>ASSIGN    853>>ASSIGN
Y@FLG
       470**DCL       695<<ASSIGN    716<<ASSIGN
Y@FLG.GRWTMPFLDLST
       480**DCL       773<<ASSIGN    792>>IF
Y@FLG.TRNTMPFLDLST
       487**DCL       706<<ASSIGN    727>>IF
Y@FLG.UPDFLDLST
       475**DCL       764>>IF        788>>IF
Y@MOVBYTSIZ
       501**DCL       462--IMP-SIZ   829<<ASSIGN    830<<ASSIGN    832>>ASSIGN    832>>ASSIGN
Y@TMPFLDLST$
       466**DCL       722<<ASSIGN    724<<ASSIGN    735>>ASSIGN    736>>IF        740>>ASSIGN    740>>ASSIGN
       740>>ASSIGN    743>>IF        764>>IF        780>>ASSIGN    781>>ASSIGN    783<<ASSIGN    819>>ASSIGN
       821>>ASSIGN

PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:112  
      688        1        /*T***********************************************************/
      689        2        /*T*                                                         */
      690        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      691        4        /*T*                                                         */
      692        5        /*T***********************************************************/
      693        6        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
      694        7        KVF$NXTFLD: PROC(PRM) ALTRET;
                 7            /* PRM is a KV$PTR.  Next field (change pointers, etc.) */
      695        8
      696        9    1   DCL KVF$PST ENTRY(1);
      697       10    1   DCL KVF$TOPPAG ENTRY;
      698       11    1   DCL KVF$UPDFRM_CRT ENTRY;
      699       12
      700       13 S      %INCLUDE KV$GLB;
      701       14 S      %INCLUDE KV_GLBCNS_E;
      702       15 S      %INCLUDE KV$GLBCTX;
      703       16 S      %INCLUDE KV$INT;
      704       17 S      %INCLUDE KV$VDH;
      705       18
      706       19        %KV_INPUNT_E;
      707       24        %KV_LINLST_SLCFLDSTT_E;
      708       30        %KV_PTR_STT_E;
      709       45        %KV_STRTYP_E;
      710       83        %KV$PTR;
      711      126        %KV$PTR (NAME = KV@PTR, STCLASS = AUTO);
      712      169        %KV$PTR (NAME = Y$PTR, STCLASS = "BASED(KV@PTR$)");
      713      212        /*
      714      213        Generic definition of a parameter.
      715      214        */
      716      215    1   DCL PRM CHAR(PRMSIZ) PARAM;
      717      216        /*
      718      217        Dummy word, used only for the definition of PRM, which
      719      218        in turn is used only to allow alternate PARAMs.
      720      219        */
      721      220    1   DCL PRMSIZ REDEF PRM UBIN;
      722      221        /*
      723      222        Parameter passing a KV$PTR.
PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:113  
      724      223        */
      725      224        %KV$PTR (NAME = PRM_PTR, STCLASS = REDEF PRM);
      726      267        /*
      727      268        Parameter passing the original stream ID.
      728      269        */
      729      270    1   DCL PRM_ORGSTRID REDEF PRM UBIN WORD;
      730      271        /*
      731      272        Parameter passing FLDID for search.
      732      273        */
      733      274    1   DCL PRM_FLDID REDEF PRM UBIN WORD;
      734      275        %KV$MVD;
      735      319        %KV$SRD;
      736      594        %KV$STR;
      737      681        %KV$SSN;
      738      760        %KV$LIN;
      739      784        %KV$LINLST;
      740      811        %KV$FLD;
      741      899        %KV$FLDLST;
      742      923        %KV$VDI;
      743      994        /*
      744      995        Pointer to whatever KV$PTR structure to use (could be in our AUTO,
      745      996        passed in as an argument, or could even be the 'real' KV$PTR pointed
      746      997        to by KV$PTR$).
      747      998        */
      748      999    1   DCL KV@PTR$ PTR AUTO;
      749     1000
      750     1001        %KV$VDH_PST (NAME = KV_VDH_PST_VRT, STCLASS = SYMREF READONLY);
      751     1075        %EJECT;
PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:114  
      752     1076    1      KV@PTR$ = ADDR(PRM_PTR);
      753     1077    2      CALL Y$NXTFLD WHENALTRETURN DO; ALTRETURN; END;
      754     1078    1      RETURN;
      755     1079        %EJECT;
PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:115  
      756     1080    1   KVF$NXTSLCFLD: ENTRY(PRM) ALTRET;       /* Find nect selected field.          */
      757     1081
      758     1082    1      KV@PTR$ = ADDR(PRM_PTR);
      759     1083    2      DO WHILE '1'B;
      760     1084    3         CALL Y$NXTFLD WHENALTRETURN DO; ALTRETURN; END;
      761     1085    2         IF Y$PTR.LINLST$->KV$LINLST.SLCFLDSTT=%KV_LINLST_SLCFLDSTT_ALL
      762     1086    2           OR Y$PTR.FLD$->KV$FLD.SLC THEN RETURN;
      763     1087    2      END;
      764     1088        %EJECT;
PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:116  
      765     1089    1   KVF$FNDFLDID: ENTRY(PRM) ALTRET;        /* Find field given its ID.           */
      766     1090
      767     1091    1      KV@PTR = KV$PTR;
      768     1092    1      KV@PTR$ = ADDR(KV@PTR);
      769     1093    1      KV@PTR.FLDWRDX = 0;
      770     1094    1      KV$PTR.STT = %KV_PTR_STT_NO_FLD;
      771     1095    2      DO WHILE '1'B;
      772     1096    2         CALL Y$NXTFLD
      773     1097    3         WHENALTRETURN DO; ALTRETURN; END;
      774     1098    3         IF KV@PTR.FLD$->KV$FLD.ID=PRM_FLDID THEN DO;
      775     1099    3            KV$PTR = KV@PTR;
      776     1100    3            KV$PTR.STT = %KV_PTR_STT_IN_FLDCLM1;
      777     1101    3            KV$PTR.VRTLIN = %KV_LIN.VRTLIN;
      778     1102    3            KV$PTR.VRTCLM = %KV_FLD.VRTCLM;
      779     1103    3            RETURN;
      780     1104    3         END;
      781     1105    2      END;
      782     1106        %EJECT;
PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:117  
      783     1107    1   KVF$RE_TYPFRM: ENTRY ALTRET;            /* Re-type form                       */
      784     1108
      785     1109    2      IF NOT %KV_MVD.RETYPOVR THEN DO;
      786     1110
      787     1111        /* Do a write - page for hard copy                                              */
      788     1112
      789     1113    2         CALL KVF$TOPPAG;
      790     1114    2      END; ELSE DO;
      791     1115    2         KV@PTR$ = ADDR(KV@PTR);
      792     1116    2         KV@PTR = KV$PTR;
      793     1117    2         KV@PTR.FLDWRDX = 0;
      794     1118    3         DO WHILE '1'B;
      795     1119    3            CALL Y$NXTFLD ALTRET(Y$ENDFLDLOP);
      796     1120    3            KV@PTR.FLD$->KV$FLD.UPD = '11'B;
      797     1121    3            KV@PTR.FLD$->KV$FLD.HI_NONBLNCLM = KV@PTR.FLD$->KV$FLD.VRTCLM-1;
      798     1122    3            IF KV@PTR.FLD$->KV$FLD.ATRCLM=0
      799     1123    3            THEN KV@PTR.FLD$->KV$FLD.ATRCLM = KV@PTR.FLD$->KV$FLD.VRTCLM;
      800     1124    3            KV@PTR.FLD$->KV$FLD.NEW = '1'B;
      801     1125    3            KV@PTR.LIN$->KV$LIN.UPDFLDCNT = 1;
      802     1126    3            KV@PTR.LIN$->KV$LIN.FLDLST$->KV$FLDLST.ATRCNT = 0;
      803     1127    3         END;                              /* LOOP                               */
      804     1128    2   Y$ENDFLDLOP:;
      805     1129    2         %KV_LINLST.FRMDSP = '0'B;
      806     1130    3         IF %KV_STR.ID=%KV_SSN.REDSTRID THEN DO;
      807     1131    3            CALL KVF$PST(KV_VDH_PST_VRT);
      808     1132    3         END; ELSE DO;
      809     1133    3            CALL KVF$UPDFRM_CRT;
      810     1134    3         END;                              /* IF                                 */
      811     1135    2      END; /* END ELSE IF NOT KV$MVD.RETYPOVR */
      812     1136    1      RETURN;
      813     1137        %EJECT;
PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:118  
      814     1138    1   KVF$ALLFLD_RSTRED: ENTRY ALTRET;        /* All fields, reset KV$FLD.RED, etc. */
      815     1139    1      KV@PTR = KV$PTR;
      816     1140    1      KV@PTR$ = ADDR(KV@PTR);
      817     1141    1      KV@PTR.FLDWRDX = 0;
      818     1142    2      DO WHILE ('1'B);                     /* LOOP START                         */
      819     1143    2         CALL Y$NXTFLD
      820     1144    3         WHENALTRETURN DO; RETURN; END;
      821     1145
      822     1146    3         IF KV@PTR.FLD$->KV$FLD.RED THEN DO;
      823     1147    3            KV@PTR.FLD$->KV$FLD.RED = '0'B;
      824     1148
      825     1149    3            IF (%KV_VDI.INPUNT = %KV_INPUNT_BLK)
      826     1150    3              OR (KV@PTR.FLD$->KV$FLD.TXTSIZ = 0)
      827     1151    3              AND (KV@PTR.FLD$->KV$FLD.GRPRND.RVRVID
      828     1152    4              OR KV@PTR.FLD$->KV$FLD.GRPRND.UNDSCR) THEN DO;
      829     1153
      830     1154    4               IF (KV@PTR.FLD$->KV$FLD.TXTSIZ = 0)
      831     1155    4               THEN KV@PTR.FLD$->KV$FLD.UPD.TXT = '1'B;
      832     1156
      833     1157    4               KV@PTR.FLD$->KV$FLD.QLF.PRT = '1'B;
      834     1158    4               KV@PTR.FLD$->KV$FLD.UPD.ATR = '1'B;
      835     1159    4               KV@PTR.LIN$->KV$LIN.UPDFLDCNT = 255;
      836     1160    4            END;                           /* IF                                 */
      837     1161    3         END;                              /* IF                                 */
      838     1162    2      END;                                 /* LOOP                               */
      839     1163        %EJECT;
PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:119  
      840     1164    1   KVF$ALLFLD_RSTSLC: ENTRY ALTRET;
      841     1165    1      KV@PTR = KV$PTR;
      842     1166    1      KV@PTR$ = ADDR(KV@PTR);
      843     1167    1      KV@PTR.FLDWRDX = 0;
      844     1168    2      DO WHILE '1'B;
      845     1169    2         CALL Y$NXTFLD
      846     1170    3         WHENALTRETURN DO; RETURN; END;
      847     1171    2         KV@PTR.FLD$->KV$FLD.SLC = '0'B;
      848     1172    2      END; /* END DO WHILE '1'B */
      849     1173        %EJECT;
PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:120  
      850     1174    1   Y$NXTFLD: PROC ALTRET;                  /* Next field (change pointers, etc.) */
      851     1175        /*
      852     1176        If Y$PTR.FLDWRDX = 0, start at the begining.
      853     1177        Otherwise, Y$PTR.FLDWRDX/Y$PTR.FLD$ has this field,
      854     1178        Y$PTR.LIN$ this line.
      855     1179        */
      856     1180    3      IF (Y$PTR.FLDWRDX = 0) THEN DO;
      857     1181        /*
      858     1182        We're to initialize the pointers, as this is the first time in to this routine.
      859     1183        */
      860     1184    3         Y$PTR.LIN$ = PINCRW(Y$PTR.LINLST$, SIZEW(KV$LINLST));
      861     1185    3         Y$PTR.FLDLST$ = Y$PTR.LIN$->KV$LIN.FLDLST$;
      862     1186    3         Y$PTR.FLDWRDX = SIZEW(KV$FLDLST);
      863     1187    3      END; ELSE DO;                        /* ELSE IF Y$PTR.FLDWRDX = 0          */
      864     1188        /*
      865     1189        We're continuing a previous scan.  Just increment to the next field.
      866     1190        */
      867     1191    3         Y$PTR.FLDWRDX = Y$PTR.FLDWRDX + Y$PTR.FLD$->KV$FLD.STRWRDSIZ;
      868     1192    3      END; /* END IF Y$PTR.FLDWRDX = 0 */
      869     1193    3      DO WHILE ('1'B);                     /* LOOP START                         */
      870     1194    4         IF (Y$PTR.FLDLST$ ~= ADDR(NIL)) THEN DO;
      871     1195    5            IF (Y$PTR.FLDWRDX <= Y$PTR.FLDLST$->KV$FLDLST.LSTENTWRDX) THEN DO;
      872     1196    5               Y$PTR.FLD$ = PINCRW(Y$PTR.FLDLST$, Y$PTR.FLDWRDX);
      873     1197    5               RETURN;
      874     1198    5            END;                           /* IF                                 */
      875     1199    4         END;                              /* IF                                 */
      876     1200    3         IF (Y$PTR.LIN$
      877     1201    4           >= PINCRW(Y$PTR.LINLST$, Y$PTR.LINLST$->KV$LINLST.LSTENTWRDX)) THEN DO;
      878     1202    4            Y$PTR.FLD$ = ADDR(NIL);
      879     1203    4            ALTRETURN;
      880     1204    4         END;                              /* IF                                 */
      881     1205    3         Y$PTR.LIN$ = PINCRW(Y$PTR.LIN$, SIZEW(KV$LIN));
      882     1206    3         Y$PTR.FLDLST$ = Y$PTR.LIN$->KV$LIN.FLDLST$;
      883     1207    3         Y$PTR.FLDWRDX = SIZEW(KV$FLDLST);
      884     1208    3      END; /* LOOP */
      885     1209    2   END Y$NXTFLD;                           /* SUBROUTINE                         */
      886     1210    1   END KVF$NXTFLD;                         /* END SUBROUTINE                     */
PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:121  

PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:122  
--  Include file information  --

   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is never referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KVF$NXTFLD.

   Procedure KVF$NXTFLD requires 451 words for executable code.
   Procedure KVF$NXTFLD requires 42 words of local(AUTO) storage.

    No errors detected in file KVF$MSC.:E05TSI    .

PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:123  

 Object Unit name= KVF$NXTFLD                                 File name= KVF$MSC.:E05TOU
 UTS= JUL 30 '97 01:59:14.12 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   451    1C3  KVF$NXTFLD
    1  RoData even  none     2      2  KVF$NXTFLD

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        1  KVF$NXTFLD
     0     14          yes     yes      Std        1  KVF$NXTSLCFLD
     0     37          yes     yes      Std        1  KVF$FNDFLDID
     0     7B          yes     yes      Std        0  KVF$RE_TYPFRM
     0     EF          yes     yes      Std        0  KVF$ALLFLD_RSTRED
     0    149          yes     yes      Std        0  KVF$ALLFLD_RSTSLC

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 KVF$TOPPAG
         yes           Std       1 KVF$PST
         yes           Std       0 KVF$UPDFRM_CRT
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_AALT
                       nStd      0 X6A_ARET
PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:124  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KV$PTR$                          r    KV_VDH_PST_VRT                   r    G$ROS$
PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:125  


      688        1        /*T***********************************************************/
      689        2        /*T*                                                         */
      690        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      691        4        /*T*                                                         */
      692        5        /*T***********************************************************/
      693        6        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
      694        7        KVF$NXTFLD: PROC(PRM) ALTRET;
                 7            /* PRM is a KV$PTR.  Next field (change pointers, etc.) */

      7   0 000000  D380 0000 0000  xent KVF$NXTFLD      LNJ,B5   X6A_AUTO_1
          0 000003       002A 0001                       DC       42,1

      695        8
      696        9    1   DCL KVF$PST ENTRY(1);
      697       10    1   DCL KVF$TOPPAG ENTRY;
      698       11    1   DCL KVF$UPDFRM_CRT ENTRY;
      699       12
      700       13 S      %INCLUDE KV$GLB;
      701       14 S      %INCLUDE KV_GLBCNS_E;
      702       15 S      %INCLUDE KV$GLBCTX;
      703       16 S      %INCLUDE KV$INT;
      704       17 S      %INCLUDE KV$VDH;
      705       18
      706       19        %KV_INPUNT_E;
      707       24        %KV_LINLST_SLCFLDSTT_E;
      708       30        %KV_PTR_STT_E;
      709       45        %KV_STRTYP_E;
      710       83        %KV$PTR;
      711      126        %KV$PTR (NAME = KV@PTR, STCLASS = AUTO);
      712      169        %KV$PTR (NAME = Y$PTR, STCLASS = "BASED(KV@PTR$)");
      713      212        /*
      714      213        Generic definition of a parameter.
      715      214        */
      716      215    1   DCL PRM CHAR(PRMSIZ) PARAM;
      717      216        /*
      718      217        Dummy word, used only for the definition of PRM, which
PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:126  
      719      218        in turn is used only to allow alternate PARAMs.
      720      219        */
      721      220    1   DCL PRMSIZ REDEF PRM UBIN;
      722      221        /*
      723      222        Parameter passing a KV$PTR.
      724      223        */
      725      224        %KV$PTR (NAME = PRM_PTR, STCLASS = REDEF PRM);
      726      267        /*
      727      268        Parameter passing the original stream ID.
      728      269        */
      729      270    1   DCL PRM_ORGSTRID REDEF PRM UBIN WORD;
      730      271        /*
      731      272        Parameter passing FLDID for search.
      732      273        */
      733      274    1   DCL PRM_FLDID REDEF PRM UBIN WORD;
      734      275        %KV$MVD;
      735      319        %KV$SRD;
      736      594        %KV$STR;
      737      681        %KV$SSN;
      738      760        %KV$LIN;
      739      784        %KV$LINLST;
      740      811        %KV$FLD;
      741      899        %KV$FLDLST;
      742      923        %KV$VDI;
      743      994        /*
      744      995        Pointer to whatever KV$PTR structure to use (could be in our AUTO,
      745      996        passed in as an argument, or could even be the 'real' KV$PTR pointed
      746      997        to by KV$PTR$).
      747      998        */
      748      999    1   DCL KV@PTR$ PTR AUTO;
      749     1000
      750     1001        %KV$VDH_PST (NAME = KV_VDH_PST_VRT, STCLASS = SYMREF READONLY);
      751     1075        %EJECT;
PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:127  
      752     1076    1      KV@PTR$ = ADDR(PRM_PTR);

   1076   0 000005  ECC7 0004                            LDB,B6   @PRM,AUTO
          0 000007  EFC7 0024                            STB,B6   KV@PTR$,AUTO

      753     1077    2      CALL Y$NXTFLD WHENALTRETURN DO; ALTRETURN; END;

   1077   0 000009  E3C0 0160                            LNJ,B6   s:0,PREL
          0 00000B       0003                            DC       s:1077+5,PREL
          0 00000C  0F81 0004                            B        s:1078,PREL

   1077   0 00000E  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      754     1078    1      RETURN;

   1078   0 000011  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      755     1079        %EJECT;
PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:128  
      756     1080    1   KVF$NXTSLCFLD: ENTRY(PRM) ALTRET;       /* Find nect selected field.          */

   1080   0 000014  D380 0000 0000  xent KVF$NXTSLCFLD   LNJ,B5   X6A_AUTO_1
          0 000017       002A 0001                       DC       42,1

      757     1081
      758     1082    1      KV@PTR$ = ADDR(PRM_PTR);

   1082   0 000019  ECC7 0004                            LDB,B6   @PRM,AUTO
          0 00001B  EFC7 0024                            STB,B6   KV@PTR$,AUTO

      759     1083    2      DO WHILE '1'B;

      760     1084    3         CALL Y$NXTFLD WHENALTRETURN DO; ALTRETURN; END;

   1084   0 00001D  E3C0 014C                            LNJ,B6   s:0,PREL
          0 00001F       0003                            DC       s:1084+5,PREL
          0 000020  0F81 0004                            B        s:1085,PREL

   1084   0 000022  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      761     1085    2         IF Y$PTR.LINLST$->KV$LINLST.SLCFLDSTT=%KV_LINLST_SLCFLDSTT_ALL

   1085   0 000025  ECC7 0024                            LDB,B6   KV@PTR$,AUTO
          0 000027  DCC6 000E                            LDB,B5   14,B6
          0 000029  E2C5 0005                            LLH,R6   5,B5
          0 00002B  6D03                                 CMV,R6   3
          0 00002C  0901 0007                            BE       s:1086,PREL
          0 00002E  CCC6 0014                            LDB,B4   20,B6
          0 000030  82C4 0002                            LB,'0020'X        2,B4
          0 000032       0020
          0 000033  05EA                                 BBF      s:1084,SPREL

      762     1086    2           OR Y$PTR.FLD$->KV$FLD.SLC THEN RETURN;

   1086   0 000034  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:129  
      763     1087    2      END;

      764     1088        %EJECT;
PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:130  
      765     1089    1   KVF$FNDFLDID: ENTRY(PRM) ALTRET;        /* Find field given its ID.           */

   1089   0 000037  D380 0000 0000  xent KVF$FNDFLDID    LNJ,B5   X6A_AUTO_1
          0 00003A       002A 0001                       DC       42,1

      766     1090
      767     1091    1      KV@PTR = KV$PTR;

   1091   0 00003C  AC80 0000 0000  xsym                 LDB,B2   KV$PTR$
          0 00003F  2C00                                 LDV,R2   0
          0 000040  6C3C                                 LDV,R6   60
          0 000041  BB87                                 LAB,B3   ,AUTO
          0 000042  3C0C                                 LDV,R3   12
          0 000043  0008                                 MMM

      768     1092    1      KV@PTR$ = ADDR(KV@PTR);

   1092   0 000044  EBC7 0006                            LAB,B6   KV@PTR,AUTO
          0 000046  EFC7 0024                            STB,B6   KV@PTR$,AUTO

      769     1093    1      KV@PTR.FLDWRDX = 0;

   1093   0 000048  8747 001E                            CL       KV@PTR+24,AUTO

      770     1094    1      KV$PTR.STT = %KV_PTR_STT_NO_FLD;

   1094   0 00004A  6C05                                 LDV,R6   5
          0 00004B  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          0 00004E  E7C5 001D                            STH,R6   29,B5

      771     1095    2      DO WHILE '1'B;

      772     1096    2         CALL Y$NXTFLD

   1096   0 000050  E3C0 0119                            LNJ,B6   s:0,PREL
          0 000052       0003                            DC       s:1097,PREL
          0 000053  0F81 0004                            B        s:1098,PREL
PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:131  

      773     1097    3         WHENALTRETURN DO; ALTRETURN; END;

   1097   0 000055  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      774     1098    3         IF KV@PTR.FLD$->KV$FLD.ID=PRM_FLDID THEN DO;

   1098   0 000058  ECC7 001A                            LDB,B6   KV@PTR+20,AUTO
          0 00005A  DCC7 0004                            LDB,B5   @PRM,AUTO
          0 00005C  E806                                 LDR,R6   ,B6
          0 00005D  E905                                 CMR,R6   ,B5
          0 00005E  09F2                                 BNE      s:1096,SPREL

      775     1099    3            KV$PTR = KV@PTR;

   1099   0 00005F  AB87                                 LAB,B2   ,AUTO
          0 000060  2C0C                                 LDV,R2   12
          0 000061  6C3C                                 LDV,R6   60
          0 000062  BC80 0000 0000  xsym                 LDB,B3   KV$PTR$
          0 000065  3C00                                 LDV,R3   0
          0 000066  0008                                 MMM

      776     1100    3            KV$PTR.STT = %KV_PTR_STT_IN_FLDCLM1;

   1100   0 000067  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 00006A  87C6 001D                            CLH      29,B6

      777     1101    3            KV$PTR.VRTLIN = %KV_LIN.VRTLIN;

   1101   0 00006C  CCC6 0010                            LDB,B4   16,B6
          0 00006E  E844 0002                            LDR,R6   2,B4
          0 000070  EF46 0019                            STR,R6   25,B6

      778     1102    3            KV$PTR.VRTCLM = %KV_FLD.VRTCLM;

   1102   0 000072  BCC6 0014                            LDB,B3   20,B6
          0 000074  D2C3 0002                            LLH,R5   2,B3
PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:132  
          0 000076  DF46 001A                            STR,R5   26,B6

      779     1103    3            RETURN;

   1103   0 000078  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      780     1104    3         END;
      781     1105    2      END;

      782     1106        %EJECT;
PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:133  
      783     1107    1   KVF$RE_TYPFRM: ENTRY ALTRET;            /* Re-type form                       */

   1107   0 00007B  D380 0000 0000  xent KVF$RE_TYPFRM   LNJ,B5   X6A_AUTO_1
          0 00007E       002A 0001                       DC       42,1

      784     1108
      785     1109    2      IF NOT %KV_MVD.RETYPOVR THEN DO;

   1109   0 000080  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 000083  DCC6 0006                            LDB,B5   6,B6
          0 000085  82C5 0016                            LB,'0080'X        22,B5
          0 000087       0080
          0 000088  0501 0009                            BBT      s:1115,PREL

      786     1110
      787     1111        /* Do a write - page for hard copy                                              */
      788     1112
      789     1113    2         CALL KVF$TOPPAG;

   1113   0 00008A  CBF0 0000                            LAB,B4   0,IMO
          0 00008C  E380 0000 0000  xent                 LNJ,B6   KVF$TOPPAG
          0 00008F       0001                            DC       s:1114,PREL

      790     1114    2      END; ELSE DO;

   1114   0 000090  0F81 005B                            B        s:1136,PREL

      791     1115    2         KV@PTR$ = ADDR(KV@PTR);

   1115   0 000092  CBC7 0006                            LAB,B4   KV@PTR,AUTO
          0 000094  CFC7 0024                            STB,B4   KV@PTR$,AUTO

      792     1116    2         KV@PTR = KV$PTR;

   1116   0 000096  AB86                                 LAB,B2   ,B6
          0 000097  2C00                                 LDV,R2   0
          0 000098  6C3C                                 LDV,R6   60
PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:134  
          0 000099  BB87                                 LAB,B3   ,AUTO
          0 00009A  3C0C                                 LDV,R3   12
          0 00009B  0008                                 MMM

      793     1117    2         KV@PTR.FLDWRDX = 0;

   1117   0 00009C  8747 001E                            CL       KV@PTR+24,AUTO

      794     1118    3         DO WHILE '1'B;

      795     1119    3            CALL Y$NXTFLD ALTRET(Y$ENDFLDLOP);

   1119   0 00009E  E3C0 00CB                            LNJ,B6   s:0,PREL
          0 0000A0       0028                            DC       s:1123,PREL

      796     1120    3            KV@PTR.FLD$->KV$FLD.UPD = '11'B;

   1120   0 0000A1  ECC7 001A                            LDB,B6   KV@PTR+20,AUTO
          0 0000A3  8946 0002                            LBT,'00C0'X       2,B6
          0 0000A5       00C0

      797     1121    3            KV@PTR.FLD$->KV$FLD.HI_NONBLNCLM = KV@PTR.FLD$->KV$FLD.VRTCLM-1;

   1121   0 0000A6  ECC7 001A                            LDB,B6   KV@PTR+20,AUTO
          0 0000A8  E2C6 0002                            LLH,R6   2,B6
          0 0000AA  6EFF                                 ADV,R6   -1
          0 0000AB  EAC6 0004                            SRM,R6,'00FF'X    4,B6
          0 0000AD       00FF

      798     1122    3            IF KV@PTR.FLD$->KV$FLD.ATRCLM=0

   1122   0 0000AE  ECC7 001A                            LDB,B6   KV@PTR+20,AUTO
          0 0000B0  E2C6 0005                            LLH,R6   5,B6
          0 0000B2  6981 0005                            BNEZ,R6  s:1124,PREL

      799     1123    3            THEN KV@PTR.FLD$->KV$FLD.ATRCLM = KV@PTR.FLD$->KV$FLD.VRTCLM;

PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:135  
   1123   0 0000B4  D2C6 0002                            LLH,R5   2,B6
          0 0000B6  D7C6 0005                            STH,R5   5,B6

      800     1124    3            KV@PTR.FLD$->KV$FLD.NEW = '1'B;

   1124   0 0000B8  ECC7 001A                            LDB,B6   KV@PTR+20,AUTO
          0 0000BA  8946 0002                            LBT,'0002'X       2,B6
          0 0000BC       0002

      801     1125    3            KV@PTR.LIN$->KV$LIN.UPDFLDCNT = 1;

   1125   0 0000BD  6C01                                 LDV,R6   1
          0 0000BE  ECC7 0016                            LDB,B6   KV@PTR+16,AUTO
          0 0000C0  E7C6 0003                            STH,R6   3,B6

      802     1126    3            KV@PTR.LIN$->KV$LIN.FLDLST$->KV$FLDLST.ATRCNT = 0;

   1126   0 0000C2  ECC7 0016                            LDB,B6   KV@PTR+16,AUTO
          0 0000C4  DC86                                 LDB,B5   ,B6
          0 0000C5  8745 0002                            CL       2,B5

      803     1127    3         END;                              /* LOOP                               */

   1127   0 0000C7  0FD7                                 B        s:1119,SPREL

   1123   0                              Y$ENDFLDLOP     null
      804     1128    2   Y$ENDFLDLOP:;
      805     1129    2         %KV_LINLST.FRMDSP = '0'B;

   1129   0 0000C8  EC80 0000 0000  xsym Y$ENDFLDLOP     LDB,B6   KV$PTR$
          0 0000CB  DCC6 000E                            LDB,B5   14,B6
          0 0000CD  8845 0005                            LBF,'0040'X       5,B5
          0 0000CF       0040

      806     1130    3         IF %KV_STR.ID=%KV_SSN.REDSTRID THEN DO;

   1130   0 0000D0  DCC6 0004                            LDB,B5   4,B6
PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:136  
          0 0000D2  CCC6 0002                            LDB,B4   2,B6
          0 0000D4  E2C5 001C                            LLH,R6   28,B5
          0 0000D6  D2C4 0038                            LLH,R5   56,B4
          0 0000D8  E955                                 CMR,R6   R5
          0 0000D9  0981 000C                            BNE      s:1133,PREL

      807     1131    3            CALL KVF$PST(KV_VDH_PST_VRT);

   1131   0 0000DB  BB80 0000 0000  01                   LAB,B3   0
          0 0000DE  CBF0 0100                            LAB,B4   256,IMO
          0 0000E0  E380 0000 0000  xent                 LNJ,B6   KVF$PST
          0 0000E3       0001                            DC       s:1132,PREL

      808     1132    3         END; ELSE DO;

   1132   0 0000E4  0F81 0007                            B        s:1136,PREL

      809     1133    3            CALL KVF$UPDFRM_CRT;

   1133   0 0000E6  CBF0 0000                            LAB,B4   0,IMO
          0 0000E8  E380 0000 0000  xent                 LNJ,B6   KVF$UPDFRM_CRT
          0 0000EB       0001                            DC       s:1136,PREL

      810     1134    3         END;                              /* IF                                 */

      811     1135    2      END; /* END ELSE IF NOT KV$MVD.RETYPOVR */

      812     1136    1      RETURN;

   1136   0 0000EC  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      813     1137        %EJECT;
PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:137  
      814     1138    1   KVF$ALLFLD_RSTRED: ENTRY ALTRET;        /* All fields, reset KV$FLD.RED, etc. */

   1138   0 0000EF  D380 0000 0000  xent KVF$ALLFLD_RSTR*LNJ,B5   X6A_AUTO_1
          0 0000F2       002A 0001                       DC       42,1

      815     1139    1      KV@PTR = KV$PTR;

   1139   0 0000F4  AC80 0000 0000  xsym                 LDB,B2   KV$PTR$
          0 0000F7  2C00                                 LDV,R2   0
          0 0000F8  6C3C                                 LDV,R6   60
          0 0000F9  BB87                                 LAB,B3   ,AUTO
          0 0000FA  3C0C                                 LDV,R3   12
          0 0000FB  0008                                 MMM

      816     1140    1      KV@PTR$ = ADDR(KV@PTR);

   1140   0 0000FC  EBC7 0006                            LAB,B6   KV@PTR,AUTO
          0 0000FE  EFC7 0024                            STB,B6   KV@PTR$,AUTO

      817     1141    1      KV@PTR.FLDWRDX = 0;

   1141   0 000100  8747 001E                            CL       KV@PTR+24,AUTO

      818     1142    2      DO WHILE ('1'B);                     /* LOOP START                         */

      819     1143    2         CALL Y$NXTFLD

   1143   0 000102  E3C0 0067                            LNJ,B6   s:0,PREL
          0 000104       0003                            DC       s:1144,PREL
          0 000105  0F81 0004                            B        s:1146,PREL

      820     1144    3         WHENALTRETURN DO; RETURN; END;

   1144   0 000107  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      821     1145
      822     1146    3         IF KV@PTR.FLD$->KV$FLD.RED THEN DO;
PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:138  

   1146   0 00010A  ECC7 001A                            LDB,B6   KV@PTR+20,AUTO
          0 00010C  82C6 0002                            LB,'0004'X        2,B6
          0 00010E       0004
          0 00010F  05F3                                 BBF      s:1143,SPREL

      823     1147    3            KV@PTR.FLD$->KV$FLD.RED = '0'B;

   1147   0 000110  8846 0002                            LBF,'0004'X       2,B6
   1147   0 000112       0004

      824     1148
      825     1149    3            IF (%KV_VDI.INPUNT = %KV_INPUNT_BLK)

   1149   0 000113  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 000116  DC86                                 LDB,B5   ,B6
          0 000117  E845 001D                            LDR,R6   29,B5
          0 000119  6045                                 SOR,R6   5
          0 00011A  E570 0003                            AND,R6   3,IMO
          0 00011C  6D03                                 CMV,R6   3
          0 00011D  0901 0010                            BE       s:1154,PREL
          0 00011F  CCC7 001A                            LDB,B4   KV@PTR+20,AUTO
          0 000121  82C4 0005                            LB,'00FF'X        5,B4
          0 000123       00FF
          0 000124  055E                                 BBT      s:1143,SPREL
          0 000125  82C4 0003                            LB,'0001'X        3,B4
          0 000127       0001
          0 000128  0501 0005                            BBT      s:1154,PREL
          0 00012A  82C4 0003                            LB,'0008'X        3,B4
          0 00012C       0008
          0 00012D  05D5                                 BBF      s:1143,SPREL

      826     1150    3              OR (KV@PTR.FLD$->KV$FLD.TXTSIZ = 0)
      827     1151    3              AND (KV@PTR.FLD$->KV$FLD.GRPRND.RVRVID
      828     1152    4              OR KV@PTR.FLD$->KV$FLD.GRPRND.UNDSCR) THEN DO;

      829     1153
PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:139  
      830     1154    4               IF (KV@PTR.FLD$->KV$FLD.TXTSIZ = 0)

   1154   0 00012E  CCC7 001A                            LDB,B4   KV@PTR+20,AUTO
          0 000130  82C4 0005                            LB,'00FF'X        5,B4
          0 000132       00FF
          0 000133  0501 0004                            BBT      s:1157,PREL

      831     1155    4               THEN KV@PTR.FLD$->KV$FLD.UPD.TXT = '1'B;

   1155   0 000135  8944 0002                            LBT,'0040'X       2,B4
   1155   0 000137       0040

      832     1156
      833     1157    4               KV@PTR.FLD$->KV$FLD.QLF.PRT = '1'B;

   1157   0 000138  DCC7 001A                            LDB,B5   KV@PTR+20,AUTO
          0 00013A  8945 0003                            LBT,'0400'X       3,B5
          0 00013C       0400

      834     1158    4               KV@PTR.FLD$->KV$FLD.UPD.ATR = '1'B;

   1158   0 00013D  DCC7 001A                            LDB,B5   KV@PTR+20,AUTO
          0 00013F  8945 0002                            LBT,'0080'X       2,B5
          0 000141       0080

      835     1159    4               KV@PTR.LIN$->KV$LIN.UPDFLDCNT = 255;

   1159   0 000142  DCC7 0016                            LDB,B5   KV@PTR+16,AUTO
          0 000144  8945 0003                            LBT,'FF00'X       3,B5
          0 000146       FF00

      836     1160    4            END;                           /* IF                                 */

      837     1161    3         END;                              /* IF                                 */

      838     1162    2      END;                                 /* LOOP                               */

PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:140  
   1162   0 000147  0F81 FFBA                            B        s:1143,PREL

      839     1163        %EJECT;
PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:141  
      840     1164    1   KVF$ALLFLD_RSTSLC: ENTRY ALTRET;

   1164   0 000149  D380 0000 0000  xent KVF$ALLFLD_RSTS*LNJ,B5   X6A_AUTO_1
          0 00014C       002A 0001                       DC       42,1

      841     1165    1      KV@PTR = KV$PTR;

   1165   0 00014E  AC80 0000 0000  xsym                 LDB,B2   KV$PTR$
          0 000151  2C00                                 LDV,R2   0
          0 000152  6C3C                                 LDV,R6   60
          0 000153  BB87                                 LAB,B3   ,AUTO
          0 000154  3C0C                                 LDV,R3   12
          0 000155  0008                                 MMM

      842     1166    1      KV@PTR$ = ADDR(KV@PTR);

   1166   0 000156  EBC7 0006                            LAB,B6   KV@PTR,AUTO
          0 000158  EFC7 0024                            STB,B6   KV@PTR$,AUTO

      843     1167    1      KV@PTR.FLDWRDX = 0;

   1167   0 00015A  8747 001E                            CL       KV@PTR+24,AUTO

      844     1168    2      DO WHILE '1'B;

      845     1169    2         CALL Y$NXTFLD

   1169   0 00015C  E3C0 000D                            LNJ,B6   s:0,PREL
          0 00015E       0003                            DC       s:1170,PREL
          0 00015F  0F81 0004                            B        s:1171,PREL

      846     1170    3         WHENALTRETURN DO; RETURN; END;

   1170   0 000161  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      847     1171    2         KV@PTR.FLD$->KV$FLD.SLC = '0'B;

PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:142  
   1171   0 000164  ECC7 001A                            LDB,B6   KV@PTR+20,AUTO
          0 000166  8846 0002                            LBF,'0020'X       2,B6
          0 000168       0020

      848     1172    2      END; /* END DO WHILE '1'B */

   1172   0 000169  0FF3                                 B        s:1169,SPREL

      849     1173        %EJECT;
PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:143  
      850     1174    1   Y$NXTFLD: PROC ALTRET;                  /* Next field (change pointers, etc.) */

   1174   0 00016A  EFC7 0026            Y$NXTFLD        STB,B6   KV@PTR$+2,AUTO

      851     1175        /*
      852     1176        If Y$PTR.FLDWRDX = 0, start at the begining.
      853     1177        Otherwise, Y$PTR.FLDWRDX/Y$PTR.FLD$ has this field,
      854     1178        Y$PTR.LIN$ this line.
      855     1179        */
      856     1180    3      IF (Y$PTR.FLDWRDX = 0) THEN DO;

   1180   0 00016C  DCC7 0024                            LDB,B5   KV@PTR$,AUTO
          0 00016E  E845 0018                            LDR,R6   24,B5
          0 000170  6981 000F                            BNEZ,R6  s:1191,PREL

      857     1181        /*
      858     1182        We're to initialize the pointers, as this is the first time in to this routine.
      859     1183        */
      860     1184    3         Y$PTR.LIN$ = PINCRW(Y$PTR.LINLST$, SIZEW(KV$LINLST));

   1184   0 000172  CCC5 000E                            LDB,B4   14,B5
          0 000174  BBC4 0008                            LAB,B3   8,B4
          0 000176  BFC5 0010                            STB,B3   16,B5

      861     1185    3         Y$PTR.FLDLST$ = Y$PTR.LIN$->KV$LIN.FLDLST$;

   1185   0 000178  EC83                                 LDB,B6   ,B3
          0 000179  EFC5 0012                            STB,B6   18,B5

      862     1186    3         Y$PTR.FLDWRDX = SIZEW(KV$FLDLST);

   1186   0 00017B  6C03                                 LDV,R6   3
          0 00017C  EF45 0018                            STR,R6   24,B5

      863     1187    3      END; ELSE DO;                        /* ELSE IF Y$PTR.FLDWRDX = 0          */

   1187   0 00017E  0F81 000B                            B        s:1194,PREL
PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:144  

      864     1188        /*
      865     1189        We're continuing a previous scan.  Just increment to the next field.
      866     1190        */
      867     1191    3         Y$PTR.FLDWRDX = Y$PTR.FLDWRDX + Y$PTR.FLD$->KV$FLD.STRWRDSIZ;

   1191   0 000180  CCC5 0014                            LDB,B4   20,B5
          0 000182  D844 0001                            LDR,R5   1,B4
          0 000184  5008                                 SOL,R5   8
          0 000185  5068                                 SAR,R5   8
          0 000186  DA56                                 ADD,R5   R6
          0 000187  E855                                 LDR,R6   R5
          0 000188  EF45 0018                            STR,R6   24,B5

      868     1192    3      END; /* END IF Y$PTR.FLDWRDX = 0 */

      869     1193    3      DO WHILE ('1'B);                     /* LOOP START                         */

      870     1194    4         IF (Y$PTR.FLDLST$ ~= ADDR(NIL)) THEN DO;

   1194   0 00018A  ECC7 0024                            LDB,B6   KV@PTR$,AUTO
          0 00018C  8DC6 0012                            CMN      18,B6
          0 00018E  0901 0011                            BE       s:1200,PREL

      871     1195    5            IF (Y$PTR.FLDWRDX <= Y$PTR.FLDLST$->KV$FLDLST.LSTENTWRDX) THEN DO;

   1195   0 000190  DCC6 0012                            LDB,B5   18,B6
          0 000192  E846 0018                            LDR,R6   24,B6
          0 000194  E945 0001                            CMR,R6   1,B5
          0 000196  0A01 0009                            BAG      s:1200,PREL

      872     1196    5               Y$PTR.FLD$ = PINCRW(Y$PTR.FLDLST$, Y$PTR.FLDWRDX);

   1196   0 000198  B856                                 LDR,R3   R6
          0 000199  CBB5                                 LAB,B4   ,B5,R3
          0 00019A  CFC6 0014                            STB,B4   20,B6

PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:145  
      873     1197    5               RETURN;

   1197   0 00019C  ECC7 0026                            LDB,B6   KV@PTR$+2,AUTO
          0 00019E  C3C6 0001                            LNJ,B4   1,B6

      874     1198    5            END;                           /* IF                                 */
      875     1199    4         END;                              /* IF                                 */
      876     1200    3         IF (Y$PTR.LIN$

   1200   0 0001A0  DCC6 000E                            LDB,B5   14,B6
          0 0001A2  B845 0001                            LDR,R3   1,B5
          0 0001A4  CCC6 0010                            LDB,B4   16,B6
          0 0001A6  BBB5                                 LAB,B3   ,B5,R3
          0 0001A7  BFC7 0028                            STB,B3   KV@PTR$+4,AUTO
          0 0001A9  CDC7 0028                            CMB,B4   KV@PTR$+4,AUTO
          0 0001AB  0201 000A                            BL       s:1205,PREL

      877     1201    4           >= PINCRW(Y$PTR.LINLST$, Y$PTR.LINLST$->KV$LINLST.LSTENTWRDX)) THEN DO;

      878     1202    4            Y$PTR.FLD$ = ADDR(NIL);

   1202   0 0001AD  DB80 0000 0000                       LAB,B5   0
          0 0001B0  DFC6 0014                            STB,B5   20,B6

      879     1203    4            ALTRETURN;

   1203   0 0001B2  ECC7 0026                            LDB,B6   KV@PTR$+2,AUTO
          0 0001B4  B806                                 LDR,R3   ,B6
          0 0001B5  C3B6                                 LNJ,B4   ,B6,R3

      880     1204    4         END;                              /* IF                                 */
      881     1205    3         Y$PTR.LIN$ = PINCRW(Y$PTR.LIN$, SIZEW(KV$LIN));

   1205   0 0001B6  DCC6 0010                            LDB,B5   16,B6
          0 0001B8  CBC5 0004                            LAB,B4   4,B5
          0 0001BA  CFC6 0010                            STB,B4   16,B6

PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:146  
      882     1206    3         Y$PTR.FLDLST$ = Y$PTR.LIN$->KV$LIN.FLDLST$;

   1206   0 0001BC  DC84                                 LDB,B5   ,B4
          0 0001BD  DFC6 0012                            STB,B5   18,B6

      883     1207    3         Y$PTR.FLDWRDX = SIZEW(KV$FLDLST);

   1207   0 0001BF  6C03                                 LDV,R6   3
          0 0001C0  EF46 0018                            STR,R6   24,B6

      884     1208    3      END; /* LOOP */

   1208   0 0001C2  0FC8                                 B        s:1194,SPREL
      885     1209    2   END Y$NXTFLD;                           /* SUBROUTINE                         */
      886     1210    1   END KVF$NXTFLD;                         /* END SUBROUTINE                     */

PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:147  
--  Include file information  --

   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is never referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KVF$NXTFLD.
PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:148  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @PRM                       6-0-0/w STRC(480)   r     1 KV@PTR
    24-0-0/w PTR         r     1 KV@PTR$                   *0-0-0/w ACHR        r     1 PRM
    *0-0-0/w UBIN(16)    r     1 PRMSIZ                    *0-0-0/w UBIN(16)    r     1 PRM_FLDID
    *0-0-0/w STRC(480)   r     1 PRM_PTR

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 KV$PTR$                    0-0-0/w STRC(64)    r     1 KV_VDH_PST_VRT

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(104)   r     1 KV$FLD                     0-0-0/w STRC(48)    r     1 KV$FLDLST
     0-0-0/w STRC(64)    r     1 KV$LIN                     0-0-0/w STRC(128)   r     1 KV$LINLST
     0-0-0/w STRC(512)   r     1 KV$MVD                     0-0-0/w STRC(480)   r     1 KV$PTR
     0-0-0/w STRC(1024)  r     1 KV$SSN                     0-0-0/w STRC(512)   r     1 KV$STR
     0-0-0/w STRC(512)   r     1 KV$VDI                     0-0-0/w STRC(480)   r     1 Y$PTR


   Procedure KVF$NXTFLD requires 451 words for executable code.
   Procedure KVF$NXTFLD requires 42 words of local(AUTO) storage.

    No errors detected in file KVF$MSC.:E05TSI    .
PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:149  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:150  
          MINI XREF LISTING

KV$FLD.ATRCLM
       891**DCL      1122>>IF       1123<<ASSIGN
KV$FLD.GRPRND.RVRVID
       889**DCL      1149>>IF
KV$FLD.GRPRND.UNDSCR
       888**DCL      1149>>IF
KV$FLD.HI_NONBLNCLM
       891**DCL      1121<<ASSIGN
KV$FLD.ID
       832**DCL      1098>>IF
KV$FLD.NEW
       835**DCL      1124<<ASSIGN
KV$FLD.QLF.PRT
       860**DCL      1157<<ASSIGN
KV$FLD.RED
       834**DCL      1146>>IF       1147<<ASSIGN
KV$FLD.SLC
       834**DCL      1085>>IF       1171<<ASSIGN
KV$FLD.STRWRDSIZ
       832**DCL      1191>>ASSIGN
KV$FLD.TXTSIZ
       891**DCL      1149>>IF       1154>>IF
KV$FLD.UPD
       833**DCL      1120<<ASSIGN
KV$FLD.UPD.ATR
       833**DCL      1158<<ASSIGN
KV$FLD.UPD.TXT
       833**DCL      1155<<ASSIGN
KV$FLD.VRTCLM
       833**DCL      1102>>ASSIGN   1121>>ASSIGN   1123>>ASSIGN
KV$FLDLST
       920**DCL      1186--ASSIGN   1207--ASSIGN
PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:151  
KV$FLDLST.ATRCNT
       921**DCL      1126<<ASSIGN
KV$FLDLST.LSTENTWRDX
       920**DCL      1195>>IF
KV$LIN
       781**DCL      1205--ASSIGN
KV$LIN.FLDLST$
       781**DCL      1126>>ASSIGN   1185>>ASSIGN   1206>>ASSIGN
KV$LIN.UPDFLDCNT
       782**DCL      1125<<ASSIGN   1159<<ASSIGN
KV$LIN.VRTLIN
       781**DCL      1101>>ASSIGN
KV$LINLST
       805**DCL      1184--ASSIGN
KV$LINLST.FRMDSP
       807**DCL      1129<<ASSIGN
KV$LINLST.LSTENTWRDX
       805**DCL      1200>>IF
KV$LINLST.SLCFLDSTT
       807**DCL      1085>>IF
KV$MVD.RETYPOVR
       305**DCL      1109>>IF
KV$PTR
       104**DCL      1091>>ASSIGN   1099<<ASSIGN   1116>>ASSIGN   1139>>ASSIGN   1165>>ASSIGN
KV$PTR.FLD$
       108**DCL      1102>>ASSIGN
KV$PTR.INPCNDPND
       110**DCL       119--REDEF     123--REDEF
KV$PTR.LIN$
       107**DCL      1101>>ASSIGN
KV$PTR.LINLST$
       106**DCL       107--REDEF    1129>>ASSIGN
KV$PTR.MVD$
       105**DCL      1109>>IF
KV$PTR.SSN$
       104**DCL      1130>>IF
PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:152  
KV$PTR.STR$
       104**DCL      1130>>IF
KV$PTR.STT
       124**DCL      1094<<ASSIGN   1100<<ASSIGN
KV$PTR.VDI$
       104**DCL      1149>>IF
KV$PTR.VRTCLM
       109**DCL      1102<<ASSIGN
KV$PTR.VRTLIN
       109**DCL      1101<<ASSIGN
KV$PTR$
        98**DCL       104--IMP-PTR  1091>>ASSIGN   1094>>ASSIGN   1099>>ASSIGN   1100>>ASSIGN   1101>>ASSIGN
      1101>>ASSIGN   1102>>ASSIGN   1102>>ASSIGN   1109>>IF       1116>>ASSIGN   1129>>ASSIGN   1130>>IF
      1130>>IF       1139>>ASSIGN   1149>>IF       1165>>ASSIGN
KV$SRD.BTMRHT
       436**DCL       441--REDEF
KV$SRD.CRT
       512**DCL       517--REDEF
KV$SRD.FLDEND
       476**DCL       481--REDEF
KV$SRD.HI_NONBLN
       546**DCL       551--REDEF
KV$SRD.ORG
       368**DCL       373--REDEF
KV$SRD.SRDEND
       581**DCL       586--REDEF
KV$SRD.TOPLFT
       402**DCL       407--REDEF
KV$SSN.REDRSPCNT
       710**DCL       711--REDEF
KV$SSN.REDSTRID
       756**DCL      1130>>IF
KV$STR.ID
       675**DCL      1130>>IF
KV$VDI.INPUNT
       985**DCL      1149>>IF
PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:153  
KV@PTR
       147**DCL      1091<<ASSIGN   1092--ASSIGN   1099>>ASSIGN   1115--ASSIGN   1116<<ASSIGN   1139<<ASSIGN
      1140--ASSIGN   1165<<ASSIGN   1166--ASSIGN
KV@PTR.FLD$
       151**DCL      1098>>IF       1120>>ASSIGN   1121>>ASSIGN   1121>>ASSIGN   1122>>IF       1123>>ASSIGN
      1123>>ASSIGN   1124>>ASSIGN   1146>>IF       1147>>ASSIGN   1149>>IF       1149>>IF       1149>>IF
      1154>>IF       1155>>ASSIGN   1157>>ASSIGN   1158>>ASSIGN   1171>>ASSIGN
KV@PTR.FLDWRDX
       151**DCL      1093<<ASSIGN   1117<<ASSIGN   1141<<ASSIGN   1167<<ASSIGN
KV@PTR.INPCNDPND
       153**DCL       162--REDEF     166--REDEF
KV@PTR.LIN$
       150**DCL      1125>>ASSIGN   1126>>ASSIGN   1159>>ASSIGN
KV@PTR.LINLST$
       149**DCL       150--REDEF
KV@PTR$
       999**DCL       190--IMP-PTR  1076<<ASSIGN   1082<<ASSIGN   1085>>IF       1085>>IF       1092<<ASSIGN
      1115<<ASSIGN   1140<<ASSIGN   1166<<ASSIGN   1180>>IF       1184>>ASSIGN   1184>>ASSIGN   1185>>ASSIGN
      1185>>ASSIGN   1186>>ASSIGN   1191>>ASSIGN   1191>>ASSIGN   1191>>ASSIGN   1194>>IF       1195>>IF
      1195>>IF       1196>>ASSIGN   1196>>ASSIGN   1196>>ASSIGN   1200>>IF       1200>>IF       1200>>IF
      1202>>ASSIGN   1205>>ASSIGN   1205>>ASSIGN   1206>>ASSIGN   1206>>ASSIGN   1207>>ASSIGN
KVF$PST
         9**DCL-ENT  1131--CALL
KVF$TOPPAG
        10**DCL-ENT  1113--CALL
KVF$UPDFRM_CRT
        11**DCL-ENT  1133--CALL
KV_VDH_PST_VRT
      1028**DCL      1131<>CALL
KV_VDH_PST_VRT.PSTVAL
      1066**DCL      1071--REDEF
PRM
       215**DCL         7--PROC      220--REDEF     245--REDEF     270--REDEF     274--REDEF    1080--ENTRY
      1089--ENTRY
PRMSIZ
       220**DCL       215--IMP-SIZ
PL6.E3A0      #005=KVF$NXTFLD File=KVF$MSC.:E05TSI                               WED 07/30/97 01:59 Page:154  
PRM_FLDID
       274**DCL      1098>>IF
PRM_PTR
       245**DCL      1076--ASSIGN   1082--ASSIGN
PRM_PTR.INPCNDPND
       251**DCL       260--REDEF     264--REDEF
PRM_PTR.LINLST$
       247**DCL       248--REDEF
Y$ENDFLDLOP
      1123**LABEL    1119--CALLALT
Y$NXTFLD
      1174**PROC     1077--CALL     1084--CALL     1096--CALL     1119--CALL     1143--CALL     1169--CALL
Y$PTR.FLD$
       194**DCL      1085>>IF       1191>>ASSIGN   1196<<ASSIGN   1202<<ASSIGN
Y$PTR.FLDLST$
       193**DCL      1185<<ASSIGN   1194>>IF       1195>>IF       1196>>ASSIGN   1206<<ASSIGN
Y$PTR.FLDWRDX
       194**DCL      1180>>IF       1186<<ASSIGN   1191<<ASSIGN   1191>>ASSIGN   1195>>IF       1196>>ASSIGN
      1207<<ASSIGN
Y$PTR.INPCNDPND
       196**DCL       205--REDEF     209--REDEF
Y$PTR.LIN$
       193**DCL      1184<<ASSIGN   1185>>ASSIGN   1200>>IF       1205<<ASSIGN   1205>>ASSIGN   1206>>ASSIGN
Y$PTR.LINLST$
       192**DCL       193--REDEF    1085>>IF       1184>>ASSIGN   1200>>IF       1200>>IF
