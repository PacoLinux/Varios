VERSION E05

PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:1    
        1        1        /*M* Level 1 MM routines for allocating WSQ-relative virtual pages. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=8,IND=2,THI=2,ENU=2,CSU=2,DTI=4,DCI=4,ECU=4,AND */
        8        8        MME$GVPNOPP: PROC(WSQ,VPNO,DATA1,DATA2) ALTRET;
        9        9        %SET LISTSUB = '1'B;
       10       10        %INCLUDE B$MAP;
       11      109        %B$MAP(NAME=B$NMAP);
       12      127        %MACRO PTR_STRUCT(NAME=PTR_STRUCT,STCLASS="STATIC SYMDEF");
       13      128        /**/
       14      129           %LSET STR = CONCAT (TEXTCHAR(STCLASS),'        ');
       15      130           %IF (SUBSTR(STR,0,6) = 'STATIC')     OR
       16      131                 (SUBSTR(STR,0,8) = 'CONSTANT') OR
       17      132                 (SUBSTR(STR,0,3) = 'EXT');
       18      133              %LSET INIT = CHARTEXT('INIT');
       19      134           %ELSE;
       20      135              %LSET INIT = CHARTEXT('/*');
       21      136           %ENDIF;
       22      137        /**/
       23      138        DCL 1 NAME STCLASS ALIGNED,
       24      139              2 WOFFS UBIN(18) UNAL %INIT(0)%CHARTEXT('/**/'),
       25      140              2 BYTEPOS UBIN(2) UNAL %INIT(0)%CHARTEXT('/**/'),
       26      141              2 BITPOS UBIN(4) UNAL %INIT(0)%CHARTEXT('/**/'),
       27      142              2 S_D_FIELD BIT(12) UNAL %INIT('6000'O)%CHARTEXT('/**/');
       28      143        %MEND;
       29      144        /**/
       30      145    1   DCL WSQ UBIN;
       31      146    1   DCL WSQS REDEF WSQ SBIN;
       32      147    1   DCL VPNO UBIN;
       33      148    1   DCL 1 RVPNO REDEF VPNO,
       34      149    1         2 * BIT(14) UNAL,
       35      150    1         2 SECT UBIN(12) UNAL,
       36      151    1         2 PGNO UBIN(10) UNAL;
       37      152    1   DCL PTBASE UBIN;
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:2    
       38      153    1   DCL SECT$ PTR;
       39      154    1   DCL VP UBIN;
       40      155    1   DCL DATA1 SBIN;                         /* Use dependent on entry point       */
       41      156    1   DCL DATA2 SBIN;                         /* Use dependent on entry point       */
       42      157    1   DCL MAP$ PTR;
       43      158        %PTR_STRUCT(NAME=MAP_PTR,STCLASS="REDEF MAP$");
       44      175    1   DCL USIZE UBIN;
       45      176    1   DCL PPNO UBIN;
       46      177    1   DCL JITP$ PTR;
       47      178    1   DCL JITPX REDEF JITP$ UBIN;
       48      179    1   DCL TEMP1 SBIN;
       49      180    1   DCL PRIV BIT(1);                        /* Set true if mon. Or exmm user      */
       50      181    1   DCL PPKEEP BIT(36);
       51      182    1   DCL FVP_NOW BIT(1);
       52      183    1   DCL I SBIN;
       53      184    1   DCL CTRL UBIN;
       54      185        /**/
       55      186    1   DCL B$JIT$ PTR SYMREF READONLY;
       56      187    1   DCL B$MONJIT$ PTR SYMREF READONLY;
       57      188    1   DCL B$PPUT$ PTR SYMREF READONLY;
       58      189    1   DCL B$MASTPT$ PTR SYMREF READONLY;
       59      190    1   DCL B$UPT$ PTR SYMREF READONLY;
       60      191    1   DCL B$MPT$ PTR SYMREF READONLY;
       61      192    1   DCL B$WINDOW$ PTR SYMREF READONLY;
       62      193    1   DCL B$IPHYMAP$ PTR SYMREF READONLY;
       63      194    1   DCL B$WSQ0PT$ PTR SYMREF READONLY;
       64      195    1   DCL 1 B$PGTBL(0:0) BASED ALIGNED,  /* Need to look at WSQ0 PT  not using MAP$ */
       65      196    1         2 RPN   UBIN HALF HALIGNED,
       66      197    1         2 SCTRL BIT(10) UNAL,
       67      198    1         2 *     UBIN(2) UNAL,
       68      199    1         2 CTRL  BIT(6) UNAL;
       69      200    1   DCL S_CUN UBIN SYMREF;
       70      201    1   DCL S_NSCPU UBIN SYMREF;
       71      202    1   DCL IT_CP6UP UBIN WORD SYMREF;
       72      203        /**/
       73      204        %EJECT;
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:3    
       74      205        /**/
       75      206    1   DCL HFC$ASSOCCLR ENTRY(3);
       76      207    1   DCL MMB$GPP ENTRY(2) ALTRET;            /* Get physical page routine          */
       77      208    1   DCL MMB$FPP ENTRY(1) ALTRET;            /* Free physical page routine         */
       78      209    1   DCL MM0$CHKSIZE ENTRY(4) ALTRET;
       79      210    1   DCL MMV$TRUNC ENTRY(1) ALTRET;
       80      211    1   DCL SC_MM11 ENTRY CONV(2,0);
       81      212    1   DCL SC_MM15 ENTRY CONV(2,0);
       82      213    1   DCL SC_MM18 ENTRY CONV(2,0);
       83      214    1   DCL SC_MM19 ENTRY CONV(2,0);
       84      215    1   DCL SC_MM20 ENTRY CONV(2,0);
       85      216    1   DCL SC_MM10_E ENTRY CONV(2,0);
       86      217    1   DCL SSR$REG ENTRY(3) ALTRET;       /* Report event & give up sched. Entry     */
       87      218    1   DCL SSS$BLOCKM ENTRY;
       88      219        /**/
       89      220        %INCLUDE B_MACROS_C;                    /* Macros for various purposes        */
       90      331        %INCLUDE HF_LOCK_C;
       91      345        %INCLUDE M_ERRORS_C;
       92      409        %INCLUDE HF_DATA_R;
       93      452        %INCLUDE S_WSPTD_R;                     /* Include the WSPDT                  */
       94      468        %INCLUDE M$JIT_C;                       /* Mm jit definitions                 */
       95      988        %INCLUDE B$USER;                        /* Definition of user tables          */
       96     1204        %B$USERREFS;
       97     1208        %INCLUDE MM_DATA_R;                     /* Mm data references                 */
       98     1728        %INCLUDE SS_SCHED_C;                    /* Scheduler event definitions        */
       99     1961        /**/
      100     1962        /* Some locally-used string SUBSTITUTIONS: */
      101     1963        %SUB   IN_FMSEG ="((VPNO  <= %FMSEGHI) AND (VPNO >= %FMSEGLO) AND WSQ <= %USERWSQ)";
      102     1964        %SUB   IN_ISEG ="((VP  >= %ISEGLO) AND (VP <= %ISEGHI))";
      103     1965        %SUB   IN_PROCEDURE =
              1965            "((VPNO >=JITP$->B$JIT.PLL) AND (VPNO<=JITP$->B$JIT.PUL) AND WSQ<=%USERWSQ)";
      104     1966        %SUB   IN_PROC_VP =
              1966            "((VP >=JITP$->B$JIT.PLL) AND (VP<=JITP$->B$JIT.PUL) AND WSQ<=%USERWSQ)";
      105     1967        %SUB   IN_DATA ="((VPNO >=B$JIT$->B$JIT.DLL) AND (VPNO<=B$JIT$->B$JIT.DUL))";
      106     1968        %SUB   IN_DYNDATA ="((VPNO >=B$JIT$->B$JIT.DDLL) AND (VPNO<=B$JIT$->B$JIT.DDUL))";
      107     1969        %SUB   IN_CPDATA ="((VPNO >= %CPDSEGLO) AND (VPNO <= %CPDSEGHI))";
      108     1970        %SUB   MM$PPUT = B$PPUT$->MM$PPUT;
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:4    
      109     1971        %SUB    B$MAP=MAP$->B$MAP;
      110     1972        /**/
      111     1973        %EJECT;
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:5    
      112     1974        /*F*  NAME: MME$GVPNOPP */
      113     1975        /*F*  PURPOSE: To allocate a virtual page to a specified PP */
      114     1976
      115     1977    1           PPNO = DATA1;
      116     1978    1           CTRL = BITBIN(%PGINMEM | %PGIOM | %PGWRITE);
      117     1979    1           GOTO COMMON;
      118     1980
      119     1981        /*F*   NAME:   MME$WGVP                                            */
      120     1982        /*F*   PURPOSE: To allocate a specified virtual page to a process.  */
      121     1983    1   MME$WGVP: ENTRY(WSQ,VPNO,DATA1,DATA2) ALTRET; /* Data1 = access ctrl bits     */
      122     1984                                                /* Data2 = err code                   */
      123     1985    1           PPNO = 0;
      124     1986    1           CTRL = DATA1;                   /* Access from data1                  */
      125     1987
      126     1988    1   COMMON: ;
      127     1989    2           IF S_WSPTD.T(WSQ)='01'B THEN DO; /* If this WSQ uses a section table  */
      128     1990                      %FINDMAP(WSQ=WSQ,P$=SECT$);
      129     1993    2                 MAP$ = SECT$;
      130     1994    2                 PTBASE=SECT$->B$SECT.PTBASE(RVPNO.SECT);
      131     1995    2                 TEMP1 = %VS1PGTBL + (WSQS - 9) * 16;
      132     1996    3                 DO I = TEMP1 TO TEMP1 + %MM_MAXPTENTS - 1;
      133     1997    3                   IF PTBASE = B$UPT$->B$NMAP.RPN(I) THEN
      134     1998    3                     GOTO FOUND_PTBASE;
      135     1999    3                 END;
      136     2000    2                 CALL SC_MM11;
      137     2001    2   FOUND_PTBASE:
      138     2002    2                 MAP_PTR.WOFFS = MAP_PTR.WOFFS + (I - TEMP1) * 1024;
      139     2003    2                 VP=RVPNO.PGNO;
      140     2004    2               END;
      141     2005    2             ELSE DO;
      142     2006    2                 VP=VPNO;
      143     2007                      %FINDMAP(WSQ=WSQ,P$=MAP$);
      144     2010    2               END;
      145     2011        /*S*    SCREECH_CODE: MME-S$MM11                                   */
      146     2012        /*S*   TYPE:   SCREECH                                             */
      147     2013        /*S*   MESSAGE: Bad virtual page number passed to MM.              */
      148     2014    1           IF NOT MAP$->B$MAP.RPN(VP) = MM_FPMC.RPN
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:6    
      149     2015        /* Altreturn if vpno already allocated */
      150     2016    2             THEN DO;
      151     2017        /*E*   ERROR:  -E$NOTFREE-0
      152     2018               MESSAGE: That page is already allocated.                    */
      153     2019    2                 DATA2 = %E$NOTFREE;       /* Page already allocated             */
      154     2020    2   NOT_FREE:
      155     2021    2                 ALTRETURN;                /* Bye y'all                          */
      156     2022    2               END;
      157     2023        /* If request is for a monitor page, then make sure we use the     */
      158     2024        /* Monitor jit for keeping track of THINGS...                      */
      159     2025    1           IF WSQ = %MONWSQ
      160     2026    1             THEN JITP$ = B$MONJIT$;       /* Point at monitor jit               */
      161     2027    2             ELSE DO;
      162     2028    2                 JITP$ = B$JIT$;           /* Point at user jit                  */
      163     2029    2               END;
      164     2030        /* If the user is already at his max core size, altreturn.         */
      165     2031
      166     2032    1   TRY_MEMLIMIT_AGAIN: ;
      167     2033    1           CALL MM0$CHKSIZE(WSQ,VP,USIZE,TEMP1) ALTRET(MEMLIM);
      168     2034    2           DO WHILE ('0'B);
      169     2035    2   MEMLIM:
      170     2036
      171     2037        /*   If this is a get for other than the monitor try to
      172     2038             trunc virtual segments and go on.
      173     2039         */
      174     2040    2             CALL MMV$TRUNC (%VS1WSQ)
      175     2041    3               WHENRETURN DO; GOTO TRY_MEMLIMIT_AGAIN; END;
      176     2042    2             CALL MMV$TRUNC (%VS2WSQ)
      177     2043    3               WHENRETURN DO; GOTO TRY_MEMLIMIT_AGAIN; END;
      178     2044    2             CALL MMV$TRUNC (%VS3WSQ)
      179     2045    3               WHENRETURN DO; GOTO TRY_MEMLIMIT_AGAIN; END;
      180     2046        /*E*   ERROR:  -E$MEMLIMIT-0
      181     2047                MESSAGE: User- or installation-set memory limit reached.   */
      182     2048    2             DATA2 = %E$MEMLIMIT;          /* Page limit reached                 */
      183     2049    2             IF NOT ((JITP$->B$JIT.MMFLGS.FREE_PPGS) AND ((VP >=JITP$->B$JIT.PLL) AND (
              2049                      VP<=JITP$->B$JIT.PUL) AND WSQ<=%USERWSQ))
      184     2050    3               THEN DO;
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:7    
      185     2051    3                   ALTRETURN;
      186     2052    3                 END;
      187     2053    2           END;
      188     2054        /* Now get a physical page */
      189     2055    1           IF PPNO = 0                     /* Must get physical page             */
      190     2056    1             THEN
      191     2057    1             CALL MMB$GPP(PPNO,WSQ) ALTRET (USER_BREAK);
      192     2058    1           IF (PPNO = 0)                   /* If we didn't get ONE...            */
      193     2059    1             THEN IF (WSQ ~= %MONWSQ)
      194     2060    2               THEN DO;
      195     2061    2                   CALL SC_MM15;
      196     2062    2                 END;
      197     2063        /*S*    SCREECH_CODE: MME-S$MM15                                   */
      198     2064        /*S*   TYPE:   SCREECH                                             */
      199     2065        /*S*   MESSAGE: Unable to get physical page guaranteed by CKSIZE.  */
      200     2066        /**/
      201     2067    2               ELSE DO;               /* Otherwise its a monitor request WE...   */
      202     2068    2                   DATA2 = %E$MONPP;       /* ...can't satisfy right now.        */
      203     2069    2                   ALTRETURN;
      204     2070    2                 END;
      205     2071        /* Switch to master to keep JIT counts straight until all slave    */
      206     2072        /* JIT descriptors point to the master CPU's JIT.                  */
      207     2073    1           IF WSQ = %MONWSQ
      208     2074    2             THEN DO;
      209     2075    2                 CALL SSS$BLOCKM;
      210     2076    2                 B$PPUT$->MM$PPUT.USER# (PPNO) = 0;
      211     2077    2               END;
      212     2078    2             ELSE DO;
      213     2079    2                 B$PPUT$->MM$PPUT.USER# (PPNO) = S_CUN;
      214     2080                      %INCR (VAR = S$CU$->B$U.PCT);
      215     2083    2               END;
      216     2084
      217     2085        /* Now map in the page and set up its access control flags */
      218     2086    1           IF HW_WSQ0PT THEN
      219     2087    1             MAP$->B$MAP.RPN(VP)=B$WSQ0PT$->B$PGTBL.RPN(PPNO);
      220     2088    1             ELSE
      221     2089    1             MAP$->B$MAP.RPN(VP) = PPNO;
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:8    
      222     2090    1           MAP$->B$MAP.CTRL(VP) = BINBIT(CTRL,6);
      223     2091
      224     2092    1           B$PPUT$->MM$PPUT.USER (PPNO) = '1'B;
              2092                    /* SET PAGE BELONGS TO USER           */
      225     2093                %INCR(VAR=JITP$->B$JIT.PPC);
      226     2096
      227     2097        /* Now, set the software control flags appropriately for this page */
      228     2098    1           MAP$->B$MAP.SCTRL (VP) =      %SCUSER;
              2098                    /* Page will belong to user           */
      229     2099
      230     2100        /* Now, select the correct counter to bump... */
      231     2101    1           IF WSQ >= %VS1WSQ AND WSQ <= %VS3WSQ
      232     2102    1             THEN
      233     2103                  %INCR(VAR=JITP$->B$JIT.PCV);
      234     2106    1             ELSE
      235     2107    1             IF ((VP  >= %ISEGLO) AND (VP <= %ISEGHI))
      236     2108    2               THEN DO;                    /* Do if page is in instr. seg.       */
      237     2109    2                   IF VP <= JITP$->B$JIT.DUL
      238     2110    2                     THEN
      239     2111                          %INCR(VAR=JITP$->B$JIT.PCD);
      240     2114    2                     ELSE IF VP <= JITP$->B$JIT.PUL
      241     2115    2                       THEN
      242     2116                            %INCR(VAR=JITP$->B$JIT.PCP);
      243     2119    2                       ELSE IF VP <= JITP$->B$JIT.DDUL
      244     2120    2                         THEN
      245     2121                              %INCR(VAR=JITP$->B$JIT.PCDD);
      246     2124    2                         ELSE IF VP <= JITP$->B$JIT.LUL
      247     2125    2                           THEN
      248     2126                                %INCR(VAR=JITP$->B$JIT.PCL);
      249     2129    2                 END;
      250     2130        /* Bump user,asl,debugger data seg page count, if that's where it is. */
      251     2131    1               ELSE IF (VP >= %UDSEGLO)
      252     2132    1                 THEN
      253     2133                      %INCR(VAR = JITP$->B$JIT.PCDS);
      254     2136        /* Bump read-only seg. Page count, if that's where it is */
      255     2137    1                 ELSE IF ((VP >=%ROSEGLO) AND (VP<=%ROSEGHI))
      256     2138    1                   THEN
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:9    
      257     2139                        %INCR(VAR = JITP$->B$JIT.PCROS);
      258     2142                                                /* Bump debuger's pages               */
      259     2143    1                   ELSE IF ((VP>=%DBDSEGLO) AND (VP<=%DBDSEGHI))
      260     2144    1                     THEN
      261     2145                          %INCR(VAR = JITP$->B$JIT.PCDDS);
      262     2148                                                /* Bump ASL data segment              */
      263     2149    1                     ELSE IF ((VP>=%ASLSEGLO) AND (VP<=%ASLSEGHI))
      264     2150    1                       THEN
      265     2151                            %INCR(VAR =JITP$->B$JIT.PCADS);
      266     2154    1                       ELSE
      267     2155                            %INCR(VAR = JITP$->B$JIT.PCC);
      268     2158    1           RETURN;
      269     2159
      270     2160        /* User is breaking out of a memory request */
      271     2161
      272     2162    1   USER_BREAK: ;
      273     2163    1           DATA2 = %E$BRKCTY;              /* BREAK OR CONTROL Y                 */
      274     2164    1           ALTRETURN;
      275     2165        %EJECT;
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:10   
      276     2166        /**/
      277     2167        /*F*   NAME:   MME$RVNP                                            */
      278     2168        /*F*   PURPOSE: To release a virtual page but not the associated   */
      279     2169        /*,*           physical page.                                      */
      280     2170    1   MME$RVNP: ENTRY(WSQ,VPNO,DATA1,DATA2) ALTRET;
      281     2171                                           /* Data1 = returned physical page number   */
      282     2172                                           /* Data2 = error code if altreturn taken   */
      283     2173    1           PPKEEP = %TRUE;                 /* Flag to keep physical page         */
      284     2174    1           FVP_NOW = %FALSE;
      285     2175    1           GOTO MME$WFVP1;
      286     2176        /**/
      287     2177        /**/
      288     2178        /*F*   NAME:   MME$WFVP_NOW                                        */
      289     2179        /*F*   PURPOSE: To free a specified WSQ-relative virtual page      */
      290     2180        /*,*             unconditionally.                                  */
      291     2181    1   MME$WFVP_NOW: ENTRY(WSQ,VPNO,DATA1,DATA2) ALTRET; /* Data1 is unused          */
      292     2182                                                /* Data2 = error code                 */
      293     2183    1           PPKEEP = %FALSE;                /* Don't keep physical page           */
      294     2184    1           FVP_NOW = %TRUE;
      295     2185    1           GOTO MME$WFVP1;
      296     2186        /**/
      297     2187        /*F*   NAME:   MME$WFVP                                            */
      298     2188        /*F*   PURPOSE: To free a specified WSQ-relative virtual page.     */
      299     2189    1   MME$WFVP: ENTRY(WSQ,VPNO,DATA1,DATA2) ALTRET; /* Data1 is unused              */
      300     2190                                                /* Data2 = error code                 */
      301     2191    1           PPKEEP = %FALSE;                /* Don't keep physical page           */
      302     2192    1           FVP_NOW = %FALSE;
      303     2193        /**/
      304     2194    1   MME$WFVP1: ;
      305     2195    2           IF S_WSPTD.T(WSQ)='01'B THEN DO;
      306     2196                      %FINDMAP(WSQ=WSQ,P$=SECT$);
      307     2199    2                 PTBASE=SECT$->B$SECT.PTBASE(RVPNO.SECT);
      308     2200    2                 MAP$ = SECT$;
      309     2201    2                 TEMP1 = %VS1PGTBL + (WSQS - 9) * 16;
      310     2202    3                 DO I = TEMP1 TO TEMP1 + %MM_MAXPTENTS - 1;
      311     2203    3                   IF PTBASE = B$UPT$->B$NMAP.RPN(I) THEN
      312     2204    3                     GOTO FOUND_BASEPT;
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:11   
      313     2205    3                 END;
      314     2206    2                 CALL SC_MM11;
      315     2207    2   FOUND_BASEPT:
      316     2208    2                 MAP_PTR.WOFFS = MAP_PTR.WOFFS + (I - TEMP1) * 1024;
      317     2209    2                 VP=RVPNO.PGNO;
      318     2210    2               END;
      319     2211    2             ELSE DO;
      320     2212    2                 VP = VPNO;
      321     2213                      %FINDMAP(P$ = MAP$);      /* Get ptr to pg tbl                  */
      322     2216    2               END;
      323     2217    1           PPNO = MAP$->B$MAP.RPN(VP);
      324     2218        /* Altreturn if vpno not already allocated */
      325     2219    1           IF (PPNO = MM_FPMC.RPN) OR (MAP$->B$MAP.SCTRL(VP) & %SCCVM)
      326     2220    2             THEN DO;
      327     2221        /*E*   ERROR:  -E$HANDSOFF-0
      328     2222               MESSAGE: That page does not belong to you.                  */
      329     2223    2                 DATA2 = %E$HANDSOFF;      /* Page does not belong to user       */
      330     2224    2                 ALTRETURN;
      331     2225    2               END;
      332     2226        /* Now we run thru the iphymap if there is one - after %FPMC check */
      333     2227    1           IF HW_WSQ0PT THEN PPNO=B$IPHYMAP$->MM$IPHY_MAP(PPNO);
      334     2228        /* If request is for a monitor page, then make sure we use the     */
      335     2229        /* Monitor jit for keeping track of THINGS...                      */
      336     2230    1           IF WSQ = %MONWSQ
      337     2231    2             THEN DO;
      338     2232    2                 JITP$ = B$MONJIT$;
      339     2233    2                 CALL SSS$BLOCKM;
      340     2234        /* If its the monitor getting data segment pages, we've gotta run  */
      341     2235        /* on the master cpu - its got the jit with the counts.            */
      342     2236    2               END;
      343     2237    2             ELSE DO;
      344     2238    2                 JITP$ = B$JIT$;
      345     2239        /* Make sure master function count is zero before freeing anything */
      346     2240        /* In case this guy is doing no-wait i/o from the affected page(s) */
      347     2241        /* (but if he's privileged, we'll let him do it anyway)            */
      348     2242    2                 IF NOT (B$JIT$->B$JIT.PRIV.ACTIVE & %PR_EXMM#) THEN
      349     2243    2                   IF WSQ = %USERWSQ AND NOT FVP_NOW THEN
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:12   
      350     2244    2                     IF (S$CU$->B$U.CMF ~= 0) THEN
      351     2245    2                       IF ((VP >= %ISEGLO AND VP < %SBUF2PG) OR
      352     2246    2                         (VP > %SBUF1PG AND VP < %VS1PGTBL) OR VP >= %UDSEGLO)
      353     2247    3                         THEN DO;
      354     2248        /*E*   ERROR:  -E$IOACTIVE-0
      355     2249               MESSAGE: Attempt to free page with master function count > 0*/
      356     2250    3                             DATA2 = %E$IOACTIVE;
      357     2251    3                             ALTRETURN;
      358     2252    3                           END;
      359     2253    2                         ELSE;
      360     2254    3                       ELSE DO WHILE(S$CU$->B$U.MF ~= 0);
      361     2255    3                           CALL SSR$REG(%SS_QMF);
      362     2256    3                         END;
      363     2257    2               END;
      364     2258        /*S*    SCREECH_CODE: MME-S$MM18                                   */
      365     2259        /*S*   TYPE:   SCREECH                                             */
      366     2260        /*S*   MESSAGE: The virtual page being freed does not belong to the user. */
      367     2261        /*S*   REMARKS: The physical page mapped to the virtual page being */
      368     2262        /*,*           freed does not belong to the user.                */
      369     2263    1           IF (WSQ>=%VS1WSQ AND WSQ<=%VS3WSQ) THEN GOTO DECR_PPC;
      370     2264                                                /*  Don't check USER# for virt arrays */
      371     2265    1           IF S_CUN ~= B$PPUT$->MM$PPUT.USER#(PPNO)
      372     2266    1             OR NOT B$PPUT$->MM$PPUT.USER(PPNO)
      373     2267    2             THEN DO;
      374     2268    2                 IF (WSQ = %MONWSQ) AND (VP < %ISEGHI OR B$PPUT$->MM$PPUT.USER#(PPNO)=0
              2268                          ) THEN GOTO A_OK;
      375     2269    2                 CALL SC_MM18;
      376     2270    2                 ALTRETURN;
      377     2271    2               END;
      378     2272    1   DECR_PPC:
      379     2273                %DECR(VAR=JITP$->B$JIT.PPC);
      380     2276    1   A_OK:   ;
      381     2277    1           IF PPKEEP
      382     2278    1             THEN DATA1 = PPNO;            /* Return phy. Page number            */
      383     2279    1             ELSE CALL MMB$FPP(PPNO);      /* Otherwise, free the page           */
      384     2280        /* Reset page table entry to just %FPMC */
      385     2281    1           MAP$->B$MAP(VP) = MM_FPMC;
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:13   
      386     2282    1           IF WSQ > %MONWSQ THEN
      387     2283                  %DECR(VAR = S$CU$->B$U.PCT);
      388     2286        /* Now, select the correct counter to decrement... */
      389     2287    1           IF WSQ >= %VS1WSQ AND WSQ <= %VS3WSQ
      390     2288    1             THEN
      391     2289                  %DECR (VAR = JITP$->B$JIT.PCV);
      392     2292    1             ELSE
      393     2293    1             IF ((VP  >= %ISEGLO) AND (VP <= %ISEGHI))
      394     2294    2               THEN DO;                    /* Do if page is in instr. seg.       */
      395     2295    2                   IF VP <= JITP$->B$JIT.DUL
      396     2296    2                     THEN
      397     2297                          %DECR(VAR=JITP$->B$JIT.PCD);
      398     2300    2                     ELSE IF VP <= JITP$->B$JIT.PUL
      399     2301    2                       THEN
      400     2302                            %DECR(VAR=JITP$->B$JIT.PCP);
      401     2305    2                       ELSE IF VP <= JITP$->B$JIT.DDUL
      402     2306    2                         THEN
      403     2307                              %DECR(VAR=JITP$->B$JIT.PCDD);
      404     2310    2                         ELSE IF VP <= JITP$->B$JIT.LUL
      405     2311    2                           THEN
      406     2312                                %DECR(VAR=JITP$->B$JIT.PCL);
      407     2315    2                 END;
      408     2316        /* Decr user,asl,debugger data seg page count, if that's where it is. */
      409     2317    1               ELSE IF (VP >= %UDSEGLO)
      410     2318    1                 THEN
      411     2319                      %DECR(VAR = JITP$->B$JIT.PCDS);
      412     2322        /* Decr. read-only seg. Page count, if that's where it is */
      413     2323    1                 ELSE IF ((VP>=%ROSEGLO) AND (VP<=%ROSEGHI))
      414     2324    1                   THEN
      415     2325                        %DECR(VAR = JITP$->B$JIT.PCROS);
      416     2328                                                /* Decrement debuger's pages          */
      417     2329    1                   ELSE IF ((VP>=%DBDSEGLO) AND (VP<=%DBDSEGHI))
      418     2330    1                     THEN
      419     2331                          %DECR(VAR = JITP$->B$JIT.PCDDS);
      420     2334                                                /* Decrement ASL data segment         */
      421     2335    1                     ELSE IF ((VP>=%ASLSEGLO) AND (VP<=%ASLSEGHI))
      422     2336    1                       THEN
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:14   
      423     2337                            %DECR(VAR = JITP$->B$JIT.PCADS);
      424     2340    2                       ELSE DO;
      425     2341                                %DECR(VAR = JITP$->B$JIT.PCC);
      426     2344    2                         END;
      427     2345
      428     2346    1           CALL MM0$CHKSIZE(WSQ,VP,USIZE,TEMP1);
      429     2347    1           IF H_S1000_FLG THEN
      430     2348    1             CALL HFC$ASSOCCLR(WSQ,VPNO,1);
      431     2349    1             ELSE
      432     2350    1             CALL HFC$ASSOCCLR;
      433     2351        /**/
      434     2352    1           RETURN;
      435     2353        /**/
      436     2354        %EJECT;
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:15   
      437     2355        /*F*   NAME:   MME$CVM                                             */
      438     2356        /*F*   PURPOSE: To map or unmap a physical page onto a specified   */
      439     2357        /*F*           virtual page in a WSQ.                              */
      440     2358    1   MME$CVM: ENTRY(WSQ,VPNO,DATA1,DATA2) ALTRET;
      441     2359                                                /* Data1 = physical page number       */
      442     2360                                                /* Data2 = returned error code        */
      443     2361    1           IF (DATA1 > 0) THEN
      444     2362    1             IF (DATA1 > MM_PCORE ) OR
      445     2363    1               (B$PPUT$->MM$PPUT.STOLEN(DATA1) AND B$PPUT$->MM$PPUT.USER#(DATA1) = 511)
              2363                        THEN
      446     2364    2                 DO;                       /* ERR: Bad physical pg no.           */
      447     2365        /*E*   ERROR:  -E$BADPP-0
      448     2366               MESSAGE: That physical page does not exist.                 */
      449     2367    2                   DATA2 = %E$BADPP;       /* Physical page doesn't exist        */
      450     2368    2                   ALTRETURN;
      451     2369    2                 END;
      452     2370                %FINDMAP(P$ = MAP$);            /* Get ptr to page tbl                */
      453     2373    1           IF (MAP$->B$MAP.RPN(VPNO) ~= MM_FPMC.RPN) THEN
              2373                    /* If vp allocated           */
      454     2374    1             IF NOT (MAP$->B$MAP.SCTRL(VPNO) & %SCCVM) THEN
              2374                      /* And isnt cvm'ed         */
      455     2375    2                 DO;                       /* ERR: Can't cvm an allocated V.P.   */
      456     2376        /*E*   ERROR:  -E$PGINUSE-0
      457     2377               MESSAGE: You cannot CVM a previously allocated virtual page. */
      458     2378    2                   DATA2 = %E$PGINUSE;     /* Page already assigned              */
      459     2379    2                   ALTRETURN;
      460     2380    2                 END;
      461     2381    2               ELSE DO;
      462     2382    2                   IF DATA1 >= 0 THEN
      463     2383    2                     IF H_S1000_FLG THEN
      464     2384    2                       CALL HFC$ASSOCCLR(WSQ,VPNO,1);
      465     2385    2                       ELSE
      466     2386    2                       CALL HFC$ASSOCCLR;
      467     2387    2                 END;
      468     2388    1           IF DATA1 < 0
      469     2389    2             THEN DO;                      /* Request to unmap the page          */
      470     2390    2                 MAP$->B$MAP (VPNO) = MM_FPMC;
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:16   
      471     2391    2                 IF H_S1000_FLG THEN
      472     2392    2                   CALL HFC$ASSOCCLR(WSQ,VPNO,1);
      473     2393    2                   ELSE
      474     2394    2                   CALL HFC$ASSOCCLR;
      475     2395    2               END;
      476     2396    2             ELSE DO;                      /* Request to map onto a page         */
      477     2397    2                 IF HW_WSQ0PT THEN
      478     2398    2                   MAP$->B$MAP.RPN(VPNO)=B$WSQ0PT$->B$PGTBL.RPN(DATA1);
      479     2399    2                   ELSE
      480     2400    2                   MAP$->B$MAP.RPN(VPNO) = DATA1;
              2400                            /* Use passed ppno                   */
      481     2401        /* If extended mm privileged user or monitor, give full write      */
      482     2402        /* Access to the cvm'ed page. Otherwise give read-only access.     */
      483     2403    2                 IF (WSQ = %MONWSQ) OR
      484     2404    2                   (B$JIT$->B$JIT.PRIV.ACTIVE & %PR_EXMM#) OR
      485     2405    2                   VPNO = %SBUF1PG OR VPNO = %SBUF2PG
      486     2406    2                   THEN MAP$->B$MAP.CTRL(VPNO) = %PGINMEM | %PGWRITE | %PGIOM;
      487     2407    2                   ELSE MAP$->B$MAP.CTRL(VPNO) = %PGINMEM | %PGIOM;
      488     2408    2                 MAP$->B$MAP.SCTRL(VPNO) = %SCCVM;
      489     2409    2               END;
      490     2410        /* Update slave page tables if its a monitor CVM */
      491     2411    1           IF (WSQ = %MONWSQ) AND (IT_CP6UP ~= 0)
      492     2412    1             AND (VPNO < %WINDOWLO OR VPNO > %WINDOWHI) THEN
      493     2413    2               DO;
      494     2414    2                 JITP$ = B$MASTPT$;
      495     2415    3                 DO I = 0 TO S_NSCPU;
      496     2416    3                   JITP$->B$PAGE.WRD(VPNO) = MAP$->B$PAGE.WRD(VPNO);
      497     2417    3                   JITPX = JITPX + 1;
      498     2418    3                 END;
      499     2419    2               END;
      500     2420    1           RETURN;
      501     2421        /**/
      502     2422        %EJECT;
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:17   
      503     2423        /*F*   NAME:   MME$SMPRT                                           */
      504     2424        /*F*   PURPOSE: To establish memory protection, or affect the      */
      505     2425        /*,*           page table access control bits in general, for pre- */
      506     2426        /*,*           viously allocated virtual pages, based on the priv- */
      507     2427        /*,*           ilege of the caller.                                */
      508     2428    1   MME$SMPRT: ENTRY(WSQ,VPNO,DATA1,DATA2) ALTRET;
      509     2429                                                /* Data1 = access ctrl bits           */
      510     2430                                                /* Data2 = returned error code        */
      511     2431                %FINDMAP(P$ = MAP$);            /* Get ptr to page tbl                */
      512     2434    1           IF WSQ = %MONWSQ THEN CALL SSS$BLOCKM;
      513     2435        /* Set 'PRIV' to true if either a user with extended mm privilege  */
      514     2436        /* Or the monitor is making this request.                          */
      515     2437    1           IF (WSQ = %MONWSQ) OR (B$JIT$->B$JIT.PRIV.ACTIVE & %PR_EXMM#)
      516     2438    1             THEN PRIV = %TRUE;
      517     2439    1             ELSE PRIV = %FALSE;
      518     2440        /* Make sure that procedure access is OK */
      519     2441    1           IF NOT PRIV AND (((VPNO >=JITP$->B$JIT.PLL) AND (VPNO<=JITP$->B$JIT.PUL) AND
              2441                    WSQ<=%USERWSQ)) THEN
      520     2442    1             IF (BINBIT(DATA1,6) & %PGWRITE)
      521     2443    2               THEN DO;               /* Can't allow write access on procedure   */
      522     2444        /*E*   ERROR:  -E$MMPRIV-0
      523     2445               MESSAGE: Insufficient privilege for the requested service.  */
      524     2446    2                   DATA2 = %E$MMPRIV;      /* Insuff. Privilege                  */
      525     2447    2                   ALTRETURN;
      526     2448    2                 END;
      527     2449        /* If the virtual page is in the file mgmt buffer segment, don't   */
      528     2450        /* Allow its access to be changed.                                 */
      529     2451    1           IF ((VPNO  <= %FMSEGHI) AND (VPNO >= %FMSEGLO) AND WSQ <= %USERWSQ)
      530     2452    2             THEN DO;
      531     2453        /*E*   ERROR:  -E$FPOOL-0
      532     2454               MESSAGE: A file management buffer cannot have its access
      533     2455                        modified.                                          */
      534     2456    2                 DATA2 = %E$FPOOL;         /* Fpool access illegal               */
      535     2457    2                 ALTRETURN;
      536     2458    2               END;
      537     2459        /* Make sure the virtual page has been allocated                   */
      538     2460    1           IF NOT ((MAP$->B$MAP.RPN(VPNO) ~= MM_FPMC.RPN) AND
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:18   
      539     2461    1             (MAP$->B$MAP.SCTRL(VPNO) & (%SCUSER | %SCFPOOL)))
      540     2462    2             THEN DO;
      541     2463        /*E*   ERROR:  -E$BADAREA-0
      542     2464               MESSAGE: The specified area contains pages which aren't yours.*/
      543     2465    2                 DATA2 = %E$BADAREA;       /* Page not owned by user             */
      544     2466    2                 ALTRETURN;
      545     2467    2               END;
      546     2468        /* Don't allow access to be changed on jit or hjit pages           */
      547     2469    1           IF VPNO <= %HJITPG              /* Catch AJIT (TSTACK) page too       */
      548     2470    2             THEN DO;
      549     2471        /*E*   ERROR:  -E$JIT-0
      550     2472               MESSAGE: The JIT, HJIT, AND PAGE TABLE cannot have their access modified.  */
      551     2473    2                 DATA2 = %E$JIT;           /* Cant change jit access             */
      552     2474    2                 ALTRETURN;
      553     2475    2               END;
      554     2476        /* If the user is not privileged, only change the top two bits     */
      555     2477        /* Of the control field, otherwise stuff whatever was passed       */
      556     2478    1           PPKEEP = BINBIT(DATA1,6);
      557     2479    1           IF NOT PRIV THEN
      558     2480    1             PPKEEP = (MAP$->B$MAP.CTRL(VPNO) & '17'O)|(PPKEEP & '60'O);
      559     2481    1           MAP$->B$MAP.CTRL(VPNO) = PPKEEP;
      560     2482    1           IF H_S1000_FLG THEN
      561     2483    1             CALL HFC$ASSOCCLR(WSQ,VPNO,1);
      562     2484    1             ELSE
      563     2485    1             CALL HFC$ASSOCCLR;
      564     2486    1           RETURN;
      565     2487        /**/
      566     2488    1   END MME$GVPNOPP;

PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:19   
--  Include file information  --

   SS_SCHED_C.:E05TOU  is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   M$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   S_WSPTD_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   M_ERRORS_C.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$MAP.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure MME$GVPNOPP.

   Procedure MME$GVPNOPP requires 897 words for executable code.
   Procedure MME$GVPNOPP requires 24 words of local(AUTO) storage.

    No errors detected in file MME$VMEM.:E05TSI    .

PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:20   

 Object Unit name= MME$GVPNOPP                                File name= MME$VMEM.:E05TOU
 UTS= JUL 30 '97 03:20:27.92 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   897   1601  MME$GVPNOPP
    1  RoData even  none     8     10  MME$GVPNOPP

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        4  MME$GVPNOPP
     0     10          yes     yes      Std        4  MME$WGVP
     0    455          yes     yes      Std        4  MME$RVNP
     0    463          yes     yes      Std        4  MME$WFVP_NOW
     0    471          yes     yes      Std        4  MME$WFVP
     0   1153          yes     yes      Std        4  MME$CVM
     0   1411          yes     yes      Std        4  MME$SMPRT
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:21   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 MMB$GPP
 yes     yes           Std       3 SSR$REG
         yes           Std       3 HFC$ASSOCCLR
 yes     yes           Std       4 MM0$CHKSIZE
 yes     yes           Std       1 MMV$TRUNC
 yes     yes           Std       1 MMB$FPP
         yes           Std       0 SSS$BLOCKM
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_4
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SC_MM11                               SC_MM18                               SC_MM15
r    B$JIT$                           r    B$MONJIT$                        r    B$PPUT$
r    B$MASTPT$                        r    B$UPT$                           r    B$IPHYMAP$
r    B$WSQ0PT$                             S_CUN                                 S_NSCPU
     IT_CP6UP                              H_S1000_FLG                           HW_WSQ0PT
     S_WSPTD                               S$CU$                            r    MM_BYP$
     MM_PCORE                              MM_FPMC                          r    MM_PTPTRS$
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ASLENTSID                             ISSID
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:22   


        1        1        /*M* Level 1 MM routines for allocating WSQ-relative virtual pages. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=8,IND=2,THI=2,ENU=2,CSU=2,DTI=4,DCI=4,ECU=4,AND */
        8        8        MME$GVPNOPP: PROC(WSQ,VPNO,DATA1,DATA2) ALTRET;

      8  0 000000   000000 700200 xent  MME$GVPNOPP  TSX0  ! X66_AUTO_4
         0 000001   000030 000004                    ZERO    24,4

        9        9        %SET LISTSUB = '1'B;
       10       10        %INCLUDE B$MAP;
       11      109        %B$MAP(NAME=B$NMAP);
       12      127        %MACRO PTR_STRUCT(NAME=PTR_STRUCT,STCLASS="STATIC SYMDEF");
       13      128        /**/
       14      129           %LSET STR = CONCAT (TEXTCHAR(STCLASS),'        ');
       15      130           %IF (SUBSTR(STR,0,6) = 'STATIC')     OR
       16      131                 (SUBSTR(STR,0,8) = 'CONSTANT') OR
       17      132                 (SUBSTR(STR,0,3) = 'EXT');
       18      133              %LSET INIT = CHARTEXT('INIT');
       19      134           %ELSE;
       20      135              %LSET INIT = CHARTEXT('/*');
       21      136           %ENDIF;
       22      137        /**/
       23      138        DCL 1 NAME STCLASS ALIGNED,
       24      139              2 WOFFS UBIN(18) UNAL %INIT(0)%CHARTEXT('/**/'),
       25      140              2 BYTEPOS UBIN(2) UNAL %INIT(0)%CHARTEXT('/**/'),
       26      141              2 BITPOS UBIN(4) UNAL %INIT(0)%CHARTEXT('/**/'),
       27      142              2 S_D_FIELD BIT(12) UNAL %INIT('6000'O)%CHARTEXT('/**/');
       28      143        %MEND;
       29      144        /**/
       30      145    1   DCL WSQ UBIN;
       31      146    1   DCL WSQS REDEF WSQ SBIN;
       32      147    1   DCL VPNO UBIN;
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:23   
       33      148    1   DCL 1 RVPNO REDEF VPNO,
       34      149    1         2 * BIT(14) UNAL,
       35      150    1         2 SECT UBIN(12) UNAL,
       36      151    1         2 PGNO UBIN(10) UNAL;
       37      152    1   DCL PTBASE UBIN;
       38      153    1   DCL SECT$ PTR;
       39      154    1   DCL VP UBIN;
       40      155    1   DCL DATA1 SBIN;                         /* Use dependent on entry point       */
       41      156    1   DCL DATA2 SBIN;                         /* Use dependent on entry point       */
       42      157    1   DCL MAP$ PTR;
       43      158        %PTR_STRUCT(NAME=MAP_PTR,STCLASS="REDEF MAP$");
       44      175    1   DCL USIZE UBIN;
       45      176    1   DCL PPNO UBIN;
       46      177    1   DCL JITP$ PTR;
       47      178    1   DCL JITPX REDEF JITP$ UBIN;
       48      179    1   DCL TEMP1 SBIN;
       49      180    1   DCL PRIV BIT(1);                        /* Set true if mon. Or exmm user      */
       50      181    1   DCL PPKEEP BIT(36);
       51      182    1   DCL FVP_NOW BIT(1);
       52      183    1   DCL I SBIN;
       53      184    1   DCL CTRL UBIN;
       54      185        /**/
       55      186    1   DCL B$JIT$ PTR SYMREF READONLY;
       56      187    1   DCL B$MONJIT$ PTR SYMREF READONLY;
       57      188    1   DCL B$PPUT$ PTR SYMREF READONLY;
       58      189    1   DCL B$MASTPT$ PTR SYMREF READONLY;
       59      190    1   DCL B$UPT$ PTR SYMREF READONLY;
       60      191    1   DCL B$MPT$ PTR SYMREF READONLY;
       61      192    1   DCL B$WINDOW$ PTR SYMREF READONLY;
       62      193    1   DCL B$IPHYMAP$ PTR SYMREF READONLY;
       63      194    1   DCL B$WSQ0PT$ PTR SYMREF READONLY;
       64      195    1   DCL 1 B$PGTBL(0:0) BASED ALIGNED,  /* Need to look at WSQ0 PT  not using MAP$ */
       65      196    1         2 RPN   UBIN HALF HALIGNED,
       66      197    1         2 SCTRL BIT(10) UNAL,
       67      198    1         2 *     UBIN(2) UNAL,
       68      199    1         2 CTRL  BIT(6) UNAL;
       69      200    1   DCL S_CUN UBIN SYMREF;
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:24   
       70      201    1   DCL S_NSCPU UBIN SYMREF;
       71      202    1   DCL IT_CP6UP UBIN WORD SYMREF;
       72      203        /**/
       73      204        %EJECT;
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:25   
       74      205        /**/
       75      206    1   DCL HFC$ASSOCCLR ENTRY(3);
       76      207    1   DCL MMB$GPP ENTRY(2) ALTRET;            /* Get physical page routine          */
       77      208    1   DCL MMB$FPP ENTRY(1) ALTRET;            /* Free physical page routine         */
       78      209    1   DCL MM0$CHKSIZE ENTRY(4) ALTRET;
       79      210    1   DCL MMV$TRUNC ENTRY(1) ALTRET;
       80      211    1   DCL SC_MM11 ENTRY CONV(2,0);
       81      212    1   DCL SC_MM15 ENTRY CONV(2,0);
       82      213    1   DCL SC_MM18 ENTRY CONV(2,0);
       83      214    1   DCL SC_MM19 ENTRY CONV(2,0);
       84      215    1   DCL SC_MM20 ENTRY CONV(2,0);
       85      216    1   DCL SC_MM10_E ENTRY CONV(2,0);
       86      217    1   DCL SSR$REG ENTRY(3) ALTRET;       /* Report event & give up sched. Entry     */
       87      218    1   DCL SSS$BLOCKM ENTRY;
       88      219        /**/
       89      220        %INCLUDE B_MACROS_C;                    /* Macros for various purposes        */
       90      331        %INCLUDE HF_LOCK_C;
       91      345        %INCLUDE M_ERRORS_C;
       92      409        %INCLUDE HF_DATA_R;
       93      452        %INCLUDE S_WSPTD_R;                     /* Include the WSPDT                  */
       94      468        %INCLUDE M$JIT_C;                       /* Mm jit definitions                 */
       95      988        %INCLUDE B$USER;                        /* Definition of user tables          */
       96     1204        %B$USERREFS;
       97     1208        %INCLUDE MM_DATA_R;                     /* Mm data references                 */
       98     1728        %INCLUDE SS_SCHED_C;                    /* Scheduler event definitions        */
       99     1961        /**/
      100     1962        /* Some locally-used string SUBSTITUTIONS: */
      101     1963        %SUB   IN_FMSEG ="((VPNO <= %FMSEGHI) AND (VPNO >= %FMSEGLO) AND WSQ <= %USERWSQ)";
      102     1964        %SUB   IN_ISEG ="((VP  >= %ISEGLO) AND (VP <= %ISEGHI))";
      103     1965        %SUB   IN_PROCEDURE =
              1965            "((VPNO >=JITP$->B$JIT.PLL) AND (VPNO<=JITP$->B$JIT.PUL) AND WSQ<=%USERWSQ)";
      104     1966        %SUB   IN_PROC_VP =
              1966            "((VP >=JITP$->B$JIT.PLL) AND (VP<=JITP$->B$JIT.PUL) AND WSQ<=%USERWSQ)";
      105     1967        %SUB   IN_DATA ="((VPNO >=B$JIT$->B$JIT.DLL) AND (VPNO<=B$JIT$->B$JIT.DUL))";
      106     1968        %SUB   IN_DYNDATA ="((VPNO >=B$JIT$->B$JIT.DDLL) AND (VPNO<=B$JIT$->B$JIT.DDUL))";
      107     1969        %SUB   IN_CPDATA ="((VPNO >= %CPDSEGLO) AND (VPNO <= %CPDSEGHI))";
      108     1970        %SUB   MM$PPUT = B$PPUT$->MM$PPUT;
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:26   
      109     1971        %SUB    B$MAP=MAP$->B$MAP;
      110     1972        /**/
      111     1973        %EJECT;
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:27   
      112     1974        /*F*  NAME: MME$GVPNOPP */
      113     1975        /*F*  PURPOSE: To allocate a virtual page to a specified PP */
      114     1976
      115     1977    1           PPNO = DATA1;

   1977  0 000002   200005 470500                    LDP0    @DATA1,,AUTO
         0 000003   000000 235100                    LDA     0,,PR0
         0 000004   200014 755100                    STA     PPNO,,AUTO

      116     1978    1           CTRL = BITBIN(%PGINMEM | %PGIOM | %PGWRITE);

   1978  0 000005   000064 236007                    LDQ     52,DL
         0 000006   200023 756100                    STQ     CTRL,,AUTO

      117     1979    1           GOTO COMMON;

   1979  0 000007   000016 710000 0                  TRA     COMMON

      118     1980
      119     1981        /*F*   NAME:   MME$WGVP                                            */
      120     1982        /*F*   PURPOSE: To allocate a specified virtual page to a process.  */
      121     1983    1   MME$WGVP: ENTRY(WSQ,VPNO,DATA1,DATA2) ALTRET; /* Data1 = access ctrl bits     */

   1983  0 000010   000000 700200 xent  MME$WGVP     TSX0  ! X66_AUTO_4
         0 000011   000030 000004                    ZERO    24,4

      122     1984                                                /* Data2 = err code                   */
      123     1985    1           PPNO = 0;

   1985  0 000012   200014 450100                    STZ     PPNO,,AUTO

      124     1986    1           CTRL = DATA1;                   /* Access from data1                  */

   1986  0 000013   200005 470500                    LDP0    @DATA1,,AUTO
         0 000014   000000 235100                    LDA     0,,PR0
         0 000015   200023 755100                    STA     CTRL,,AUTO

PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:28   
   1986  0 000016                       COMMON       null
      125     1987
      126     1988    1   COMMON: ;
      127     1989    2           IF S_WSPTD.T(WSQ)='01'B THEN DO; /* If this WSQ uses a section table  */

   1989  0 000016   200003 471500                    LDP1    @WSQ,,AUTO
         0 000017   100000 720100                    LXL0    0,,PR1
         0 000020   000000 236010 xsym               LDQ     S_WSPTD,X0
         0 000021   060000 376007                    ANQ     24576,DL
         0 000022   020000 116007                    CMPQ    8192,DL
         0 000023   000100 601000 0                  TNZ     s:2006

      128     1990                      %FINDMAP(WSQ=WSQ,P$=SECT$);

   1991  0 000024   000000 236010 xsym               LDQ     MM_PTPTRS$,X0
         0 000025   200010 756100                    STQ     SECT$,,AUTO

      129     1993    2                 MAP$ = SECT$;

   1993  0 000026   200012 756100                    STQ     MAP$,,AUTO

      130     1994    2                 PTBASE=SECT$->B$SECT.PTBASE(RVPNO.SECT);

   1994  0 000027   200004 473500                    LDP3    @VPNO,,AUTO
         0 000030   300000 236100                    LDQ     0,,PR3
         0 000031   000012 772000                    QRL     10
         0 000032   007777 376007                    ANQ     4095,DL
         0 000033   200010 474500                    LDP4    SECT$,,AUTO
         0 000034   400000 236106                    LDQ     0,QL,PR4
         0 000035   000022 772000                    QRL     18
         0 000036   200007 756100                    STQ     PTBASE,,AUTO

      131     1995    2                 TEMP1 = %VS1PGTBL + (WSQS - 9) * 16;

   1995  0 000037   100000 235100                    LDA     0,,PR1
         0 000040   000004 735000                    ALS     4
         0 000041   000630 035007                    ADLA    408,DL
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:29   
         0 000042   200016 755100                    STA     TEMP1,,AUTO

      132     1996    3                 DO I = TEMP1 TO TEMP1 + %MM_MAXPTENTS - 1;

   1996  0 000043   200022 755100                    STA     I,,AUTO
         0 000044   000054 710000 0                  TRA     s:1999+1

      133     1997    3                   IF PTBASE = B$UPT$->B$NMAP.RPN(I) THEN

   1997  0 000045   000000 470400 xsym               LDP0    B$UPT$
         0 000046   200022 720100                    LXL0    I,,AUTO
         0 000047   000000 236110                    LDQ     0,X0,PR0
         0 000050   000022 772000                    QRL     18
         0 000051   200007 116100                    CMPQ    PTBASE,,AUTO
         0 000052   000062 600000 0                  TZE     FOUND_PTBASE

      134     1998    3                     GOTO FOUND_PTBASE;
      135     1999    3                 END;

   1999  0 000053   200022 054100                    AOS     I,,AUTO
         0 000054   200016 236100                    LDQ     TEMP1,,AUTO
         0 000055   000017 036007                    ADLQ    15,DL
         0 000056   200022 116100                    CMPQ    I,,AUTO
         0 000057   000045 605000 0                  TPL     s:1997

      136     2000    2                 CALL SC_MM11;

   2000  0 000060   000000 713400 xsym               CLIMB   SC_MM11
         0 000061   000000 600000 xsid               climb   nvectors=         0

      137     2001    2   FOUND_PTBASE:
      138     2002    2                 MAP_PTR.WOFFS = MAP_PTR.WOFFS + (I - TEMP1) * 1024;

   2002  0 000062   200022 236100       FOUND_PTBASE LDQ     I,,AUTO
         0 000063   200016 136100                    SBLQ    TEMP1,,AUTO
         0 000064   200012 235100                    LDA     MAP$,,AUTO
         0 000065   000022 771000                    ARL     18
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:30   
         0 000066   200024 755100                    STA     CTRL+1,,AUTO
         0 000067   000012 736000                    QLS     10
         0 000070   200024 036100                    ADLQ    CTRL+1,,AUTO
         0 000071   000000 620006                    EAX0    0,QL
         0 000072   200012 740100                    STX0    MAP$,,AUTO

      139     2003    2                 VP=RVPNO.PGNO;

   2003  0 000073   200004 470500                    LDP0    @VPNO,,AUTO
         0 000074   000000 236100                    LDQ     0,,PR0
         0 000075   001777 376007                    ANQ     1023,DL
         0 000076   200011 756100                    STQ     VP,,AUTO

      140     2004    2               END;

   2004  0 000077   000106 710000 0                  TRA     s:2014

      141     2005    2             ELSE DO;

      142     2006    2                 VP=VPNO;

   2006  0 000100   200004 473500                    LDP3    @VPNO,,AUTO
         0 000101   300000 235100                    LDA     0,,PR3
         0 000102   200011 755100                    STA     VP,,AUTO

      143     2007                      %FINDMAP(WSQ=WSQ,P$=MAP$);

   2008  0 000103   100000 720100                    LXL0    0,,PR1
         0 000104   000000 236010 xsym               LDQ     MM_PTPTRS$,X0
         0 000105   200012 756100                    STQ     MAP$,,AUTO

      144     2010    2               END;

      145     2011        /*S*    SCREECH_CODE: MME-S$MM11                                   */
      146     2012        /*S*   TYPE:   SCREECH                                             */
      147     2013        /*S*   MESSAGE: Bad virtual page number passed to MM.              */
      148     2014    1           IF NOT MAP$->B$MAP.RPN(VP) = MM_FPMC.RPN
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:31   

   2014  0 000106   200012 470500                    LDP0    MAP$,,AUTO
         0 000107   200011 720100                    LXL0    VP,,AUTO
         0 000110   000000 221110                    LDX1    0,X0,PR0
         0 000111   000000 101000 xsym               CMPX1   MM_FPMC
         0 000112   000117 600000 0                  TZE     s:2025

      149     2015        /* Altreturn if vpno already allocated */
      150     2016    2             THEN DO;

      151     2017        /*E*   ERROR:  -E$NOTFREE-0
      152     2018               MESSAGE: That page is already allocated.                    */
      153     2019    2                 DATA2 = %E$NOTFREE;       /* Page already allocated             */

   2019  0 000113   001141 235007                    LDA     609,DL
         0 000114   200006 471500                    LDP1    @DATA2,,AUTO
         0 000115   100000 755100                    STA     0,,PR1

      154     2020    2   NOT_FREE:
      155     2021    2                 ALTRETURN;                /* Bye y'all                          */

   2021  0 000116   000000 702200 xent  NOT_FREE     TSX2  ! X66_AALT

      156     2022    2               END;
      157     2023        /* If request is for a monitor page, then make sure we use the     */
      158     2024        /* Monitor jit for keeping track of THINGS...                      */
      159     2025    1           IF WSQ = %MONWSQ

   2025  0 000117   200003 471500                    LDP1    @WSQ,,AUTO
         0 000120   100000 235100                    LDA     0,,PR1
         0 000121   000001 115007                    CMPA    1,DL
         0 000122   000126 601000 0                  TNZ     s:2028

      160     2026    1             THEN JITP$ = B$MONJIT$;       /* Point at monitor jit               */

   2026  0 000123   000000 236000 xsym               LDQ     B$MONJIT$
         0 000124   200015 756100                    STQ     JITP$,,AUTO
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:32   
         0 000125   000130 710000 0                  TRA     TRY_MEMLIMIT_AGAIN

      161     2027    2             ELSE DO;

      162     2028    2                 JITP$ = B$JIT$;           /* Point at user jit                  */

   2028  0 000126   000000 236000 xsym               LDQ     B$JIT$
         0 000127   200015 756100                    STQ     JITP$,,AUTO

      163     2029    2               END;

   2025  0 000130                       TRY_MEMLIMI* null
      164     2030        /* If the user is already at his max core size, altreturn.         */
      165     2031
      166     2032    1   TRY_MEMLIMIT_AGAIN: ;
      167     2033    1           CALL MM0$CHKSIZE(WSQ,VP,USIZE,TEMP1) ALTRET(MEMLIM);

   2033  0 000130   200016 630500                    EPPR0   TEMP1,,AUTO
         0 000131   200027 450500                    STP0    CTRL+4,,AUTO
         0 000132   200013 631500                    EPPR1   USIZE,,AUTO
         0 000133   200026 451500                    STP1    CTRL+3,,AUTO
         0 000134   200011 633500                    EPPR3   VP,,AUTO
         0 000135   200025 453500                    STP3    CTRL+2,,AUTO
         0 000136   200003 236100                    LDQ     @WSQ,,AUTO
         0 000137   200024 756100                    STQ     CTRL+1,,AUTO
         0 000140   200024 630500                    EPPR0   CTRL+1,,AUTO
         0 000141   000022 631400 xsym               EPPR1   B_VECTNIL+18
         0 000142   000000 701000 xent               TSX1    MM0$CHKSIZE
         0 000143   000145 702000 0                  TSX2    MEMLIM

      168     2034    2           DO WHILE ('0'B);

   2034  0 000144   000210 710000 0                  TRA     s:2055

      169     2035    2   MEMLIM:
      170     2036
      171     2037        /*   If this is a get for other than the monitor try to
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:33   
      172     2038             trunc virtual segments and go on.
      173     2039         */
      174     2040    2             CALL MMV$TRUNC (%VS1WSQ)

   2040  0 000145   000000 630400 1     MEMLIM       EPPR0   0
         0 000146   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000147   000000 701000 xent               TSX1    MMV$TRUNC
         0 000150   000152 702000 0                  TSX2    s:2042

      175     2041    3               WHENRETURN DO; GOTO TRY_MEMLIMIT_AGAIN; END;

   2041  0 000151   000130 710000 0                  TRA     TRY_MEMLIMIT_AGAIN

      176     2042    2             CALL MMV$TRUNC (%VS2WSQ)

   2042  0 000152   000001 630400 1                  EPPR0   1
         0 000153   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000154   000000 701000 xent               TSX1    MMV$TRUNC
         0 000155   000157 702000 0                  TSX2    s:2044

      177     2043    3               WHENRETURN DO; GOTO TRY_MEMLIMIT_AGAIN; END;

   2043  0 000156   000130 710000 0                  TRA     TRY_MEMLIMIT_AGAIN

      178     2044    2             CALL MMV$TRUNC (%VS3WSQ)

   2044  0 000157   000002 630400 1                  EPPR0   2
         0 000160   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000161   000000 701000 xent               TSX1    MMV$TRUNC
         0 000162   000164 702000 0                  TSX2    s:2048

      179     2045    3               WHENRETURN DO; GOTO TRY_MEMLIMIT_AGAIN; END;

   2045  0 000163   000130 710000 0                  TRA     TRY_MEMLIMIT_AGAIN

      180     2046        /*E*   ERROR:  -E$MEMLIMIT-0
      181     2047                MESSAGE: User- or installation-set memory limit reached.   */
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:34   
      182     2048    2             DATA2 = %E$MEMLIMIT;          /* Page limit reached                 */

   2048  0 000164   001135 235007                    LDA     605,DL
         0 000165   200006 470500                    LDP0    @DATA2,,AUTO
         0 000166   000000 755100                    STA     0,,PR0

      183     2049    2            IF NOT ((JITP$->B$JIT.MMFLGS.FREE_PPGS) AND ((VP >=JITP$->B$JIT.PLL) AND (
              2049                      VP<=JITP$->B$JIT.PUL) AND WSQ<=%USERWSQ))

   2049  0 000167   200015 471500                    LDP1    JITP$,,AUTO
         0 000170   100206 234100                    SZN     134,,PR1
         0 000171   000207 605000 0                  TPL     s:2051
         0 000172   100176 236100                    LDQ     126,,PR1
         0 000173   000022 772000                    QRL     18
         0 000174   200011 116100                    CMPQ    VP,,AUTO
         0 000175   000177 600000 0                  TZE     s:2049+8
         0 000176   000207 603000 0                  TRC     s:2051
         0 000177   100176 236100                    LDQ     126,,PR1
         0 000200   777777 376007                    ANQ     -1,DL
         0 000201   200011 116100                    CMPQ    VP,,AUTO
         0 000202   000207 602000 0                  TNC     s:2051
         0 000203   200003 473500                    LDP3    @WSQ,,AUTO
         0 000204   300000 235100                    LDA     0,,PR3
         0 000205   000011 115007                    CMPA    9,DL
         0 000206   000210 602000 0                  TNC     s:2055

      184     2050    3               THEN DO;

      185     2051    3                   ALTRETURN;

   2051  0 000207   000000 702200 xent               TSX2  ! X66_AALT

      186     2052    3                 END;
      187     2053    2           END;

      188     2054        /* Now get a physical page */
      189     2055    1           IF PPNO = 0                     /* Must get physical page             */
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:35   

   2055  0 000210   200014 235100                    LDA     PPNO,,AUTO
         0 000211   000222 601000 0                  TNZ     s:2058

      190     2056    1             THEN
      191     2057    1             CALL MMB$GPP(PPNO,WSQ) ALTRET (USER_BREAK);

   2057  0 000212   200003 236100                    LDQ     @WSQ,,AUTO
         0 000213   200025 756100                    STQ     CTRL+2,,AUTO
         0 000214   200014 630500                    EPPR0   PPNO,,AUTO
         0 000215   200024 450500                    STP0    CTRL+1,,AUTO
         0 000216   200024 630500                    EPPR0   CTRL+1,,AUTO
         0 000217   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000220   000000 701000 xent               TSX1    MMB$GPP
         0 000221   000451 702000 0                  TSX2    USER_BREAK

      192     2058    1           IF (PPNO = 0)                   /* If we didn't get ONE...            */

   2058  0 000222   200014 235100                    LDA     PPNO,,AUTO
         0 000223   000237 601000 0                  TNZ     s:2073

      193     2059    1             THEN IF (WSQ ~= %MONWSQ)

   2059  0 000224   200003 470500                    LDP0    @WSQ,,AUTO
         0 000225   000000 235100                    LDA     0,,PR0
         0 000226   000001 115007                    CMPA    1,DL
         0 000227   000233 600000 0                  TZE     s:2068

      194     2060    2               THEN DO;

      195     2061    2                   CALL SC_MM15;

   2061  0 000230   000000 713400 xsym               CLIMB   SC_MM15
         0 000231   000000 600000 xsid               climb   nvectors=         0

      196     2062    2                 END;

PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:36   
   2062  0 000232   000237 710000 0                  TRA     s:2073

      197     2063        /*S*    SCREECH_CODE: MME-S$MM15                                   */
      198     2064        /*S*   TYPE:   SCREECH                                             */
      199     2065        /*S*   MESSAGE: Unable to get physical page guaranteed by CKSIZE.  */
      200     2066        /**/
      201     2067    2               ELSE DO;               /* Otherwise its a monitor request WE...   */

      202     2068    2                   DATA2 = %E$MONPP;       /* ...can't satisfy right now.        */

   2068  0 000233   001161 236007                    LDQ     625,DL
         0 000234   200006 471500                    LDP1    @DATA2,,AUTO
         0 000235   100000 756100                    STQ     0,,PR1

      203     2069    2                   ALTRETURN;

   2069  0 000236   000000 702200 xent               TSX2  ! X66_AALT

      204     2070    2                 END;
      205     2071        /* Switch to master to keep JIT counts straight until all slave    */
      206     2072        /* JIT descriptors point to the master CPU's JIT.                  */
      207     2073    1           IF WSQ = %MONWSQ

   2073  0 000237   200003 470500                    LDP0    @WSQ,,AUTO
         0 000240   000000 235100                    LDA     0,,PR0
         0 000241   000001 115007                    CMPA    1,DL
         0 000242   000253 601000 0                  TNZ     s:2079

      208     2074    2             THEN DO;

      209     2075    2                 CALL SSS$BLOCKM;

   2075  0 000243   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000244   000000 701000 xent               TSX1    SSS$BLOCKM
         0 000245   000000 011000                    NOP     0

      210     2076    2                 B$PPUT$->MM$PPUT.USER# (PPNO) = 0;
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:37   

   2076  0 000246   000000 470400 xsym               LDP0    B$PPUT$
         0 000247   200014 720100                    LXL0    PPNO,,AUTO
         0 000250   000003 236000 1                  LDQ     3
         0 000251   000000 356110                    ANSQ    0,X0,PR0

      211     2077    2               END;

   2077  0 000252   000266 710000 0                  TRA     s:2086

      212     2078    2             ELSE DO;

      213     2079    2                 B$PPUT$->MM$PPUT.USER# (PPNO) = S_CUN;

   2079  0 000253   000000 471400 xsym               LDP1    B$PPUT$
         0 000254   200014 720100                    LXL0    PPNO,,AUTO
         0 000255   000000 236000 xsym               LDQ     S_CUN
         0 000256   000022 736000                    QLS     18
         0 000257   100000 676110                    ERQ     0,X0,PR1
         0 000260   000777 376003                    ANQ     511,DU
         0 000261   100000 656110                    ERSQ    0,X0,PR1

      214     2080                      %INCR (VAR = S$CU$->B$U.PCT);

   2081  0 000262   000000 473400 xsym               LDP3    S$CU$
         0 000263   300010 220100                    LDX0    8,,PR3
         0 000264   000001 621010                    EAX1    1,X0
         0 000265   300010 741100                    STX1    8,,PR3

      215     2083    2               END;

      216     2084
      217     2085        /* Now map in the page and set up its access control flags */
      218     2086    1           IF HW_WSQ0PT THEN

   2086  0 000266   000000 234000 xsym               SZN     HW_WSQ0PT
         0 000267   000277 605000 0                  TPL     s:2089
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:38   

      219     2087    1             MAP$->B$MAP.RPN(VP)=B$WSQ0PT$->B$PGTBL.RPN(PPNO);

   2087  0 000270   000000 470400 xsym               LDP0    B$WSQ0PT$
         0 000271   200014 720100                    LXL0    PPNO,,AUTO
         0 000272   000000 221110                    LDX1    0,X0,PR0
         0 000273   200012 471500                    LDP1    MAP$,,AUTO
         0 000274   200011 722100                    LXL2    VP,,AUTO
         0 000275   100000 741112                    STX1    0,X2,PR1
         0 000276   000303 710000 0                  TRA     s:2090

      220     2088    1             ELSE
      221     2089    1             MAP$->B$MAP.RPN(VP) = PPNO;

   2089  0 000277   200014 720100                    LXL0    PPNO,,AUTO
         0 000300   200012 470500                    LDP0    MAP$,,AUTO
         0 000301   200011 721100                    LXL1    VP,,AUTO
         0 000302   000000 740111                    STX0    0,X1,PR0

      222     2090    1           MAP$->B$MAP.CTRL(VP) = BINBIT(CTRL,6);

   2090  0 000303   200023 236100                    LDQ     CTRL,,AUTO
         0 000304   000036 736000                    QLS     30
         0 000305   200012 470500                    LDP0    MAP$,,AUTO
         0 000306   200011 720100                    LXL0    VP,,AUTO
         0 000307   000036 772000                    QRL     30
         0 000310   000000 676110                    ERQ     0,X0,PR0
         0 000311   000077 376007                    ANQ     63,DL
         0 000312   000000 656110                    ERSQ    0,X0,PR0

      223     2091
      224     2092    1           B$PPUT$->MM$PPUT.USER (PPNO) = '1'B;
              2092                    /* SET PAGE BELONGS TO USER           */

   2092  0 000313   000000 471400 xsym               LDP1    B$PPUT$
         0 000314   200014 720100                    LXL0    PPNO,,AUTO
         0 000315   020000 236003                    LDQ     8192,DU
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:39   
         0 000316   100000 256110                    ORSQ    0,X0,PR1

      225     2093                %INCR(VAR=JITP$->B$JIT.PPC);

   2094  0 000317   200015 473500                    LDP3    JITP$,,AUTO
         0 000320   300207 720100                    LXL0    135,,PR3
         0 000321   000001 621010                    EAX1    1,X0
         0 000322   300207 441100                    SXL1    135,,PR3

      226     2096
      227     2097        /* Now, set the software control flags appropriately for this page */
      228     2098    1           MAP$->B$MAP.SCTRL (VP) =      %SCUSER;
              2098                    /* Page will belong to user           */

   2098  0 000323   200011 720100                    LXL0    VP,,AUTO
         0 000324   000000 236110                    LDQ     0,X0,PR0
         0 000325   000004 376000 1                  ANQ     4
         0 000326   000400 276007                    ORQ     256,DL
         0 000327   000000 756110                    STQ     0,X0,PR0

      229     2099
      230     2100        /* Now, select the correct counter to bump... */
      231     2101    1           IF WSQ >= %VS1WSQ AND WSQ <= %VS3WSQ

   2101  0 000330   200003 474500                    LDP4    @WSQ,,AUTO
         0 000331   400000 235100                    LDA     0,,PR4
         0 000332   000011 115007                    CMPA    9,DL
         0 000333   000342 602000 0                  TNC     s:2107
         0 000334   000014 115007                    CMPA    12,DL
         0 000335   000342 603000 0                  TRC     s:2107

      232     2102    1             THEN
      233     2103                  %INCR(VAR=JITP$->B$JIT.PCV);

   2104  0 000336   300216 220100                    LDX0    142,,PR3
         0 000337   000001 621010                    EAX1    1,X0
         0 000340   300216 741100                    STX1    142,,PR3
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:40   
         0 000341   000450 710000 0                  TRA     s:2158

      234     2106    1             ELSE
      235     2107    1             IF ((VP  >= %ISEGLO) AND (VP <= %ISEGHI))

   2107  0 000342   200011 236100                    LDQ     VP,,AUTO
         0 000343   000100 116007                    CMPQ    64,DL
         0 000344   000407 602000 0                  TNC     s:2131
         0 000345   000500 116007                    CMPQ    320,DL
         0 000346   000407 603000 0                  TRC     s:2131

      236     2108    2               THEN DO;                    /* Do if page is in instr. seg.       */

      237     2109    2                   IF VP <= JITP$->B$JIT.DUL

   2109  0 000347   300177 236100                    LDQ     127,,PR3
         0 000350   777777 376007                    ANQ     -1,DL
         0 000351   200011 116100                    CMPQ    VP,,AUTO
         0 000352   000357 602000 0                  TNC     s:2114

      238     2110    2                     THEN
      239     2111                          %INCR(VAR=JITP$->B$JIT.PCD);

   2112  0 000353   300201 720100                    LXL0    129,,PR3
         0 000354   000001 621010                    EAX1    1,X0
         0 000355   300201 441100                    SXL1    129,,PR3
         0 000356   000450 710000 0                  TRA     s:2158

      240     2114    2                     ELSE IF VP <= JITP$->B$JIT.PUL

   2114  0 000357   300176 236100                    LDQ     126,,PR3
         0 000360   777777 376007                    ANQ     -1,DL
         0 000361   200011 116100                    CMPQ    VP,,AUTO
         0 000362   000367 602000 0                  TNC     s:2119

      241     2115    2                       THEN
      242     2116                            %INCR(VAR=JITP$->B$JIT.PCP);
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:41   

   2117  0 000363   300201 220100                    LDX0    129,,PR3
         0 000364   000001 621010                    EAX1    1,X0
         0 000365   300201 741100                    STX1    129,,PR3
         0 000366   000450 710000 0                  TRA     s:2158

      243     2119    2                       ELSE IF VP <= JITP$->B$JIT.DDUL

   2119  0 000367   300200 236100                    LDQ     128,,PR3
         0 000370   777777 376007                    ANQ     -1,DL
         0 000371   200011 116100                    CMPQ    VP,,AUTO
         0 000372   000377 602000 0                  TNC     s:2124

      244     2120    2                         THEN
      245     2121                              %INCR(VAR=JITP$->B$JIT.PCDD);

   2122  0 000373   300203 720100                    LXL0    131,,PR3
         0 000374   000001 621010                    EAX1    1,X0
         0 000375   300203 441100                    SXL1    131,,PR3
         0 000376   000450 710000 0                  TRA     s:2158

      246     2124    2                         ELSE IF VP <= JITP$->B$JIT.LUL

   2124  0 000377   300215 236100                    LDQ     141,,PR3
         0 000400   000022 772000                    QRL     18
         0 000401   200011 116100                    CMPQ    VP,,AUTO
         0 000402   000450 602000 0                  TNC     s:2158

      247     2125    2                           THEN
      248     2126                                %INCR(VAR=JITP$->B$JIT.PCL);

   2127  0 000403   300215 720100                    LXL0    141,,PR3
         0 000404   000001 621010                    EAX1    1,X0
         0 000405   300215 441100                    SXL1    141,,PR3

      249     2129    2                 END;

PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:42   
   2129  0 000406   000450 710000 0                  TRA     s:2158

      250     2130        /* Bump user,asl,debugger data seg page count, if that's where it is. */
      251     2131    1               ELSE IF (VP >= %UDSEGLO)

   2131  0 000407   001130 116007                    CMPQ    600,DL
         0 000410   000415 602000 0                  TNC     s:2137

      252     2132    1                 THEN
      253     2133                      %INCR(VAR = JITP$->B$JIT.PCDS);

   2134  0 000411   300202 220100                    LDX0    130,,PR3
         0 000412   000001 621010                    EAX1    1,X0
         0 000413   300202 741100                    STX1    130,,PR3
         0 000414   000450 710000 0                  TRA     s:2158

      254     2136        /* Bump read-only seg. Page count, if that's where it is */
      255     2137    1                 ELSE IF ((VP >=%ROSEGLO) AND (VP<=%ROSEGHI))

   2137  0 000415   000057 116007                    CMPQ    47,DL
         0 000416   000425 602000 0                  TNC     s:2143
         0 000417   000075 116007                    CMPQ    61,DL
         0 000420   000425 603000 0                  TRC     s:2143

      256     2138    1                   THEN
      257     2139                        %INCR(VAR = JITP$->B$JIT.PCROS);

   2140  0 000421   300203 220100                    LDX0    131,,PR3
         0 000422   000001 621010                    EAX1    1,X0
         0 000423   300203 741100                    STX1    131,,PR3
         0 000424   000450 710000 0                  TRA     s:2158

      258     2142                                                /* Bump debuger's pages               */
      259     2143    1                   ELSE IF ((VP>=%DBDSEGLO) AND (VP<=%DBDSEGHI))

   2143  0 000425   000510 116007                    CMPQ    328,DL
         0 000426   000435 602000 0                  TNC     s:2149
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:43   
         0 000427   000610 116007                    CMPQ    392,DL
         0 000430   000435 603000 0                  TRC     s:2149

      260     2144    1                     THEN
      261     2145                          %INCR(VAR = JITP$->B$JIT.PCDDS);

   2146  0 000431   300213 720100                    LXL0    139,,PR3
         0 000432   000001 621010                    EAX1    1,X0
         0 000433   300213 441100                    SXL1    139,,PR3
         0 000434   000450 710000 0                  TRA     s:2158

      262     2148                                                /* Bump ASL data segment              */
      263     2149    1                     ELSE IF ((VP>=%ASLSEGLO) AND (VP<=%ASLSEGHI))

   2149  0 000435   000610 116007                    CMPQ    392,DL
         0 000436   000445 602000 0                  TNC     s:2156
         0 000437   001010 116007                    CMPQ    520,DL
         0 000440   000445 603000 0                  TRC     s:2156

      264     2150    1                       THEN
      265     2151                            %INCR(VAR =JITP$->B$JIT.PCADS);

   2152  0 000441   300214 220100                    LDX0    140,,PR3
         0 000442   000001 621010                    EAX1    1,X0
         0 000443   300214 741100                    STX1    140,,PR3
         0 000444   000450 710000 0                  TRA     s:2158

      266     2154    1                       ELSE
      267     2155                            %INCR(VAR = JITP$->B$JIT.PCC);

   2156  0 000445   300202 720100                    LXL0    130,,PR3
         0 000446   000001 621010                    EAX1    1,X0
         0 000447   300202 441100                    SXL1    130,,PR3

      268     2158    1           RETURN;

   2158  0 000450   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:44   

   2156  0 000451                       USER_BREAK   null
      269     2159
      270     2160        /* User is breaking out of a memory request */
      271     2161
      272     2162    1   USER_BREAK: ;
      273     2163    1           DATA2 = %E$BRKCTY;              /* BREAK OR CONTROL Y                 */

   2163  0 000451   001207 235007                    LDA     647,DL
         0 000452   200006 470500                    LDP0    @DATA2,,AUTO
         0 000453   000000 755100                    STA     0,,PR0

      274     2164    1           ALTRETURN;

   2164  0 000454   000000 702200 xent               TSX2  ! X66_AALT

      275     2165        %EJECT;
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:45   
      276     2166        /**/
      277     2167        /*F*   NAME:   MME$RVNP                                            */
      278     2168        /*F*   PURPOSE: To release a virtual page but not the associated   */
      279     2169        /*,*           physical page.                                      */
      280     2170    1   MME$RVNP: ENTRY(WSQ,VPNO,DATA1,DATA2) ALTRET;

   2170  0 000455   000000 700200 xent  MME$RVNP     TSX0  ! X66_AUTO_4
         0 000456   000030 000004                    ZERO    24,4

      281     2171                                           /* Data1 = returned physical page number   */
      282     2172                                           /* Data2 = error code if altreturn taken   */
      283     2173    1           PPKEEP = %TRUE;                 /* Flag to keep physical page         */

   2173  0 000457   400000 236003                    LDQ     -131072,DU
         0 000460   200020 756100                    STQ     PPKEEP,,AUTO

      284     2174    1           FVP_NOW = %FALSE;

   2174  0 000461   200021 450100                    STZ     FVP_NOW,,AUTO

      285     2175    1           GOTO MME$WFVP1;

   2175  0 000462   000475 710000 0                  TRA     MME$WFVP1

      286     2176        /**/
      287     2177        /**/
      288     2178        /*F*   NAME:   MME$WFVP_NOW                                        */
      289     2179        /*F*   PURPOSE: To free a specified WSQ-relative virtual page      */
      290     2180        /*,*             unconditionally.                                  */
      291     2181    1   MME$WFVP_NOW: ENTRY(WSQ,VPNO,DATA1,DATA2) ALTRET; /* Data1 is unused          */

   2181  0 000463   000000 700200 xent  MME$WFVP_NOW TSX0  ! X66_AUTO_4
         0 000464   000030 000004                    ZERO    24,4

      292     2182                                                /* Data2 = error code                 */
      293     2183    1           PPKEEP = %FALSE;                /* Don't keep physical page           */

PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:46   
   2183  0 000465   200020 450100                    STZ     PPKEEP,,AUTO

      294     2184    1           FVP_NOW = %TRUE;

   2184  0 000466   400000 236003                    LDQ     -131072,DU
         0 000467   200021 756100                    STQ     FVP_NOW,,AUTO

      295     2185    1           GOTO MME$WFVP1;

   2185  0 000470   000475 710000 0                  TRA     MME$WFVP1

      296     2186        /**/
      297     2187        /*F*   NAME:   MME$WFVP                                            */
      298     2188        /*F*   PURPOSE: To free a specified WSQ-relative virtual page.     */
      299     2189    1   MME$WFVP: ENTRY(WSQ,VPNO,DATA1,DATA2) ALTRET; /* Data1 is unused              */

   2189  0 000471   000000 700200 xent  MME$WFVP     TSX0  ! X66_AUTO_4
         0 000472   000030 000004                    ZERO    24,4

      300     2190                                                /* Data2 = error code                 */
      301     2191    1           PPKEEP = %FALSE;                /* Don't keep physical page           */

   2191  0 000473   200020 450100                    STZ     PPKEEP,,AUTO

      302     2192    1           FVP_NOW = %FALSE;

   2192  0 000474   200021 450100                    STZ     FVP_NOW,,AUTO

   2192  0 000475                       MME$WFVP1    null
      303     2193        /**/
      304     2194    1   MME$WFVP1: ;
      305     2195    2           IF S_WSPTD.T(WSQ)='01'B THEN DO;

   2195  0 000475   200003 470500                    LDP0    @WSQ,,AUTO
         0 000476   000000 720100                    LXL0    0,,PR0
         0 000477   000000 236010 xsym               LDQ     S_WSPTD,X0
         0 000500   060000 376007                    ANQ     24576,DL
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:47   
         0 000501   020000 116007                    CMPQ    8192,DL
         0 000502   000560 601000 0                  TNZ     s:2212

      306     2196                      %FINDMAP(WSQ=WSQ,P$=SECT$);

   2197  0 000503   000000 236010 xsym               LDQ     MM_PTPTRS$,X0
         0 000504   200010 756100                    STQ     SECT$,,AUTO

      307     2199    2                 PTBASE=SECT$->B$SECT.PTBASE(RVPNO.SECT);

   2199  0 000505   200004 471500                    LDP1    @VPNO,,AUTO
         0 000506   100000 236100                    LDQ     0,,PR1
         0 000507   000012 772000                    QRL     10
         0 000510   007777 376007                    ANQ     4095,DL
         0 000511   200010 473500                    LDP3    SECT$,,AUTO
         0 000512   300000 236106                    LDQ     0,QL,PR3
         0 000513   000022 772000                    QRL     18
         0 000514   200007 756100                    STQ     PTBASE,,AUTO

      308     2200    2                 MAP$ = SECT$;

   2200  0 000515   200010 236100                    LDQ     SECT$,,AUTO
         0 000516   200012 756100                    STQ     MAP$,,AUTO

      309     2201    2                 TEMP1 = %VS1PGTBL + (WSQS - 9) * 16;

   2201  0 000517   000000 235100                    LDA     0,,PR0
         0 000520   000004 735000                    ALS     4
         0 000521   000630 035007                    ADLA    408,DL
         0 000522   200016 755100                    STA     TEMP1,,AUTO

      310     2202    3                 DO I = TEMP1 TO TEMP1 + %MM_MAXPTENTS - 1;

   2202  0 000523   200022 755100                    STA     I,,AUTO
         0 000524   000534 710000 0                  TRA     s:2205+1

      311     2203    3                   IF PTBASE = B$UPT$->B$NMAP.RPN(I) THEN
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:48   

   2203  0 000525   000000 470400 xsym               LDP0    B$UPT$
         0 000526   200022 720100                    LXL0    I,,AUTO
         0 000527   000000 236110                    LDQ     0,X0,PR0
         0 000530   000022 772000                    QRL     18
         0 000531   200007 116100                    CMPQ    PTBASE,,AUTO
         0 000532   000542 600000 0                  TZE     FOUND_BASEPT

      312     2204    3                     GOTO FOUND_BASEPT;
      313     2205    3                 END;

   2205  0 000533   200022 054100                    AOS     I,,AUTO
         0 000534   200016 236100                    LDQ     TEMP1,,AUTO
         0 000535   000017 036007                    ADLQ    15,DL
         0 000536   200022 116100                    CMPQ    I,,AUTO
         0 000537   000525 605000 0                  TPL     s:2203

      314     2206    2                 CALL SC_MM11;

   2206  0 000540   000000 713400 xsym               CLIMB   SC_MM11
         0 000541   000000 600000 xsid               climb   nvectors=         0

      315     2207    2   FOUND_BASEPT:
      316     2208    2                 MAP_PTR.WOFFS = MAP_PTR.WOFFS + (I - TEMP1) * 1024;

   2208  0 000542   200022 236100       FOUND_BASEPT LDQ     I,,AUTO
         0 000543   200016 136100                    SBLQ    TEMP1,,AUTO
         0 000544   200012 235100                    LDA     MAP$,,AUTO
         0 000545   000022 771000                    ARL     18
         0 000546   200024 755100                    STA     CTRL+1,,AUTO
         0 000547   000012 736000                    QLS     10
         0 000550   200024 036100                    ADLQ    CTRL+1,,AUTO
         0 000551   000000 620006                    EAX0    0,QL
         0 000552   200012 740100                    STX0    MAP$,,AUTO

      317     2209    2                 VP=RVPNO.PGNO;

PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:49   
   2209  0 000553   200004 470500                    LDP0    @VPNO,,AUTO
         0 000554   000000 236100                    LDQ     0,,PR0
         0 000555   001777 376007                    ANQ     1023,DL
         0 000556   200011 756100                    STQ     VP,,AUTO

      318     2210    2               END;

   2210  0 000557   000566 710000 0                  TRA     s:2217

      319     2211    2             ELSE DO;

      320     2212    2                 VP = VPNO;

   2212  0 000560   200004 471500                    LDP1    @VPNO,,AUTO
         0 000561   100000 235100                    LDA     0,,PR1
         0 000562   200011 755100                    STA     VP,,AUTO

      321     2213                      %FINDMAP(P$ = MAP$);      /* Get ptr to pg tbl                  */

   2214  0 000563   000000 720100                    LXL0    0,,PR0
         0 000564   000000 236010 xsym               LDQ     MM_PTPTRS$,X0
         0 000565   200012 756100                    STQ     MAP$,,AUTO

      322     2216    2               END;

      323     2217    1           PPNO = MAP$->B$MAP.RPN(VP);

   2217  0 000566   200012 470500                    LDP0    MAP$,,AUTO
         0 000567   200011 720100                    LXL0    VP,,AUTO
         0 000570   000000 236110                    LDQ     0,X0,PR0
         0 000571   000022 772000                    QRL     18
         0 000572   200014 756100                    STQ     PPNO,,AUTO

      324     2218        /* Altreturn if vpno not already allocated */
      325     2219    1           IF (PPNO = MM_FPMC.RPN) OR (MAP$->B$MAP.SCTRL(VP) & %SCCVM)

   2219  0 000573   000000 236000 xsym               LDQ     MM_FPMC
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:50   
         0 000574   000022 772000                    QRL     18
         0 000575   200014 116100                    CMPQ    PPNO,,AUTO
         0 000576   000604 600000 0                  TZE     s:2223
         0 000577   000000 236110                    LDQ     0,X0,PR0
         0 000600   000022 736000                    QLS     18
         0 000601   777400 376003                    ANQ     -256,DU
         0 000602   001000 376003                    ANQ     512,DU
         0 000603   000610 600000 0                  TZE     s:2227

      326     2220    2             THEN DO;

      327     2221        /*E*   ERROR:  -E$HANDSOFF-0
      328     2222               MESSAGE: That page does not belong to you.                  */
      329     2223    2                 DATA2 = %E$HANDSOFF;      /* Page does not belong to user       */

   2223  0 000604   001143 235007                    LDA     611,DL
         0 000605   200006 471500                    LDP1    @DATA2,,AUTO
         0 000606   100000 755100                    STA     0,,PR1

      330     2224    2                 ALTRETURN;

   2224  0 000607   000000 702200 xent               TSX2  ! X66_AALT

      331     2225    2               END;
      332     2226        /* Now we run thru the iphymap if there is one - after %FPMC check */
      333     2227    1           IF HW_WSQ0PT THEN PPNO=B$IPHYMAP$->MM$IPHY_MAP(PPNO);

   2227  0 000610   000000 234000 xsym               SZN     HW_WSQ0PT
         0 000611   000620 605000 0                  TPL     s:2230

   2227  0 000612   200014 235100                    LDA     PPNO,,AUTO
         0 000613   000001 735000                    ALS     1
         0 000614   000000 471400 xsym               LDP1    B$IPHYMAP$
         0 000615   000100 101505                    MRL     fill='000'O
         0 000616   100000 000002                    ADSC9   0,A,PR1                  cn=0,n=2
         0 000617   200014 000004                    ADSC9   PPNO,,AUTO               cn=0,n=4

PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:51   
      334     2228        /* If request is for a monitor page, then make sure we use the     */
      335     2229        /* Monitor jit for keeping track of THINGS...                      */
      336     2230    1           IF WSQ = %MONWSQ

   2230  0 000620   200003 471500                    LDP1    @WSQ,,AUTO
         0 000621   100000 235100                    LDA     0,,PR1
         0 000622   000001 115007                    CMPA    1,DL
         0 000623   000632 601000 0                  TNZ     s:2238

      337     2231    2             THEN DO;

      338     2232    2                 JITP$ = B$MONJIT$;

   2232  0 000624   000000 236000 xsym               LDQ     B$MONJIT$
         0 000625   200015 756100                    STQ     JITP$,,AUTO

      339     2233    2                 CALL SSS$BLOCKM;

   2233  0 000626   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000627   000000 701000 xent               TSX1    SSS$BLOCKM
         0 000630   000000 011000                    NOP     0

      340     2234        /* If its the monitor getting data segment pages, we've gotta run  */
      341     2235        /* on the master cpu - its got the jit with the counts.            */
      342     2236    2               END;

   2236  0 000631   000702 710000 0                  TRA     s:2263

      343     2237    2             ELSE DO;

      344     2238    2                 JITP$ = B$JIT$;

   2238  0 000632   000000 236000 xsym               LDQ     B$JIT$
         0 000633   200015 756100                    STQ     JITP$,,AUTO

      345     2239        /* Make sure master function count is zero before freeing anything */
      346     2240        /* In case this guy is doing no-wait i/o from the affected page(s) */
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:52   
      347     2241        /* (but if he's privileged, we'll let him do it anyway)            */
      348     2242    2                 IF NOT (B$JIT$->B$JIT.PRIV.ACTIVE & %PR_EXMM#) THEN

   2242  0 000634   000000 473400 xsym               LDP3    B$JIT$
         0 000635   300013 236100                    LDQ     11,,PR3
         0 000636   000004 376000 xsym               ANQ     B_VECTNIL+4
         0 000637   000702 601000 0                  TNZ     s:2263

      349     2243    2                   IF WSQ = %USERWSQ AND NOT FVP_NOW THEN

   2243  0 000640   000010 115007                    CMPA    8,DL
         0 000641   000702 601000 0                  TNZ     s:2263
         0 000642   200021 234100                    SZN     FVP_NOW,,AUTO
         0 000643   000702 604000 0                  TMI     s:2263

      350     2244    2                     IF (S$CU$->B$U.CMF ~= 0) THEN

   2244  0 000644   000000 474400 xsym               LDP4    S$CU$
         0 000645   400007 236100                    LDQ     7,,PR4
         0 000646   000077 316007                    CANQ    63,DL
         0 000647   000667 600000 0                  TZE     s:2254

      351     2245    2                       IF ((VP >= %ISEGLO AND VP < %SBUF2PG) OR

   2245  0 000650   200011 235100                    LDA     VP,,AUTO
         0 000651   000100 115007                    CMPA    64,DL
         0 000652   000655 602000 0                  TNC     s:2245+5
         0 000653   000500 115007                    CMPA    320,DL
         0 000654   000663 602000 0                  TNC     s:2250
         0 000655   000502 115007                    CMPA    322,DL
         0 000656   000661 602000 0                  TNC     s:2245+9
         0 000657   001050 115007                    CMPA    552,DL
         0 000660   000663 602000 0                  TNC     s:2250
         0 000661   001130 115007                    CMPA    600,DL
         0 000662   000702 602000 0                  TNC     s:2263

      352     2246    2                         (VP > %SBUF1PG AND VP < %VS1PGTBL) OR VP >= %UDSEGLO)
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:53   
      353     2247    3                         THEN DO;

      354     2248        /*E*   ERROR:  -E$IOACTIVE-0
      355     2249               MESSAGE: Attempt to free page with master function count > 0*/
      356     2250    3                             DATA2 = %E$IOACTIVE;

   2250  0 000663   001160 235007                    LDA     624,DL
         0 000664   200006 475500                    LDP5    @DATA2,,AUTO
         0 000665   500000 755100                    STA     0,,PR5

      357     2251    3                             ALTRETURN;

   2251  0 000666   000000 702200 xent               TSX2  ! X66_AALT

      358     2252    3                           END;
      359     2253    2                         ELSE;
      360     2254    3                       ELSE DO WHILE(S$CU$->B$U.MF ~= 0);

   2254  0 000667   400006 236100                    LDQ     6,,PR4
         0 000670   777000 316003                    CANQ    -512,DU
         0 000671   000702 600000 0                  TZE     s:2263

      361     2255    3                           CALL SSR$REG(%SS_QMF);

   2255  0 000672   000005 630400 1                  EPPR0   5
         0 000673   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000674   000000 701000 xent               TSX1    SSR$REG
         0 000675   000000 011000                    NOP     0

      362     2256    3                         END;

   2256  0 000676   000000 470400 xsym               LDP0    S$CU$
         0 000677   000006 236100                    LDQ     6,,PR0
         0 000700   777000 316003                    CANQ    -512,DU
         0 000701   000672 601000 0                  TNZ     s:2255

      363     2257    2               END;
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:54   

      364     2258        /*S*    SCREECH_CODE: MME-S$MM18                                   */
      365     2259        /*S*   TYPE:   SCREECH                                             */
      366     2260        /*S*   MESSAGE: The virtual page being freed does not belong to the user. */
      367     2261        /*S*   REMARKS: The physical page mapped to the virtual page being */
      368     2262        /*,*           freed does not belong to the user.                */
      369     2263    1           IF (WSQ>=%VS1WSQ AND WSQ<=%VS3WSQ) THEN GOTO DECR_PPC;

   2263  0 000702   200003 470500                    LDP0    @WSQ,,AUTO
         0 000703   000000 235100                    LDA     0,,PR0
         0 000704   000011 115007                    CMPA    9,DL
         0 000705   000710 602000 0                  TNC     s:2265
         0 000706   000014 115007                    CMPA    12,DL
         0 000707   000735 602000 0                  TNC     DECR_PPC

      370     2264                                                /*  Don't check USER# for virt arrays */
      371     2265    1           IF S_CUN ~= B$PPUT$->MM$PPUT.USER#(PPNO)

   2265  0 000710   000000 471400 xsym               LDP1    B$PPUT$
         0 000711   200014 720100                    LXL0    PPNO,,AUTO
         0 000712   100000 236110                    LDQ     0,X0,PR1
         0 000713   000022 772000                    QRL     18
         0 000714   000777 376007                    ANQ     511,DL
         0 000715   000000 116000 xsym               CMPQ    S_CUN
         0 000716   000722 601000 0                  TNZ     s:2268
         0 000717   100000 236110                    LDQ     0,X0,PR1
         0 000720   020000 316003                    CANQ    8192,DU
         0 000721   000735 601000 0                  TNZ     DECR_PPC

      372     2266    1             OR NOT B$PPUT$->MM$PPUT.USER(PPNO)
      373     2267    2             THEN DO;

      374     2268    2                IF (WSQ = %MONWSQ) AND (VP < %ISEGHI OR B$PPUT$->MM$PPUT.USER#(PPNO)=0
              2268                          ) THEN GOTO A_OK;

   2268  0 000722   000001 115007                    CMPA    1,DL
         0 000723   000732 601000 0                  TNZ     s:2269
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:55   
         0 000724   200011 236100                    LDQ     VP,,AUTO
         0 000725   000477 116007                    CMPQ    319,DL
         0 000726   000741 602000 0                  TNC     A_OK
         0 000727   100000 236110                    LDQ     0,X0,PR1
         0 000730   000777 316003                    CANQ    511,DU
         0 000731   000741 600000 0                  TZE     A_OK

      375     2269    2                 CALL SC_MM18;

   2269  0 000732   000000 713400 xsym               CLIMB   SC_MM18
         0 000733   000000 600000 xsid               climb   nvectors=         0

      376     2270    2                 ALTRETURN;

   2270  0 000734   000000 702200 xent               TSX2  ! X66_AALT

      377     2271    2               END;
      378     2272    1   DECR_PPC:
      379     2273                %DECR(VAR=JITP$->B$JIT.PPC);

   2274  0 000735   200015 471500       DECR_PPC     LDP1    JITP$,,AUTO
         0 000736   100207 720100                    LXL0    135,,PR1
         0 000737   777777 621010                    EAX1    -1,X0
         0 000740   100207 441100                    SXL1    135,,PR1

   2269  0 000741                       A_OK         null
      380     2276    1   A_OK:   ;
      381     2277    1           IF PPKEEP

   2277  0 000741   200020 235100                    LDA     PPKEEP,,AUTO
         0 000742   000747 600000 0                  TZE     s:2279

      382     2278    1             THEN DATA1 = PPNO;            /* Return phy. Page number            */

   2278  0 000743   200014 236100                    LDQ     PPNO,,AUTO
         0 000744   200005 471500                    LDP1    @DATA1,,AUTO
         0 000745   100000 756100                    STQ     0,,PR1
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:56   
         0 000746   000755 710000 0                  TRA     s:2281

      383     2279    1             ELSE CALL MMB$FPP(PPNO);      /* Otherwise, free the page           */

   2279  0 000747   200014 631500                    EPPR1   PPNO,,AUTO
         0 000750   200024 451500                    STP1    CTRL+1,,AUTO
         0 000751   200024 630500                    EPPR0   CTRL+1,,AUTO
         0 000752   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000753   000000 701000 xent               TSX1    MMB$FPP
         0 000754   000000 011000                    NOP     0

      384     2280        /* Reset page table entry to just %FPMC */
      385     2281    1           MAP$->B$MAP(VP) = MM_FPMC;

   2281  0 000755   000000 236000 xsym               LDQ     MM_FPMC
         0 000756   200012 470500                    LDP0    MAP$,,AUTO
         0 000757   200011 720100                    LXL0    VP,,AUTO
         0 000760   000000 756110                    STQ     0,X0,PR0

      386     2282    1           IF WSQ > %MONWSQ THEN

   2282  0 000761   200003 471500                    LDP1    @WSQ,,AUTO
         0 000762   100000 235100                    LDA     0,,PR1
         0 000763   000002 115007                    CMPA    2,DL
         0 000764   000771 602000 0                  TNC     s:2287

      387     2283                  %DECR(VAR = S$CU$->B$U.PCT);

   2284  0 000765   000000 473400 xsym               LDP3    S$CU$
         0 000766   300010 220100                    LDX0    8,,PR3
         0 000767   777777 621010                    EAX1    -1,X0
         0 000770   300010 741100                    STX1    8,,PR3

      388     2286        /* Now, select the correct counter to decrement... */
      389     2287    1           IF WSQ >= %VS1WSQ AND WSQ <= %VS3WSQ

   2287  0 000771   100000 235100                    LDA     0,,PR1
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:57   
         0 000772   000011 115007                    CMPA    9,DL
         0 000773   001003 602000 0                  TNC     s:2293
         0 000774   000014 115007                    CMPA    12,DL
         0 000775   001003 603000 0                  TRC     s:2293

      390     2288    1             THEN
      391     2289                  %DECR (VAR = JITP$->B$JIT.PCV);

   2290  0 000776   200015 473500                    LDP3    JITP$,,AUTO
         0 000777   300216 220100                    LDX0    142,,PR3
         0 001000   777777 621010                    EAX1    -1,X0
         0 001001   300216 741100                    STX1    142,,PR3
         0 001002   001117 710000 0                  TRA     s:2346

      392     2292    1             ELSE
      393     2293    1             IF ((VP  >= %ISEGLO) AND (VP <= %ISEGHI))

   2293  0 001003   200011 236100                    LDQ     VP,,AUTO
         0 001004   000100 116007                    CMPQ    64,DL
         0 001005   001051 602000 0                  TNC     s:2317
         0 001006   000500 116007                    CMPQ    320,DL
         0 001007   001051 603000 0                  TRC     s:2317

      394     2294    2               THEN DO;                    /* Do if page is in instr. seg.       */

      395     2295    2                   IF VP <= JITP$->B$JIT.DUL

   2295  0 001010   200015 473500                    LDP3    JITP$,,AUTO
         0 001011   300177 236100                    LDQ     127,,PR3
         0 001012   777777 376007                    ANQ     -1,DL
         0 001013   200011 116100                    CMPQ    VP,,AUTO
         0 001014   001021 602000 0                  TNC     s:2300

      396     2296    2                     THEN
      397     2297                          %DECR(VAR=JITP$->B$JIT.PCD);

   2298  0 001015   300201 720100                    LXL0    129,,PR3
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:58   
         0 001016   777777 621010                    EAX1    -1,X0
         0 001017   300201 441100                    SXL1    129,,PR3
         0 001020   001117 710000 0                  TRA     s:2346

      398     2300    2                     ELSE IF VP <= JITP$->B$JIT.PUL

   2300  0 001021   300176 236100                    LDQ     126,,PR3
         0 001022   777777 376007                    ANQ     -1,DL
         0 001023   200011 116100                    CMPQ    VP,,AUTO
         0 001024   001031 602000 0                  TNC     s:2305

      399     2301    2                       THEN
      400     2302                            %DECR(VAR=JITP$->B$JIT.PCP);

   2303  0 001025   300201 220100                    LDX0    129,,PR3
         0 001026   777777 621010                    EAX1    -1,X0
         0 001027   300201 741100                    STX1    129,,PR3
         0 001030   001117 710000 0                  TRA     s:2346

      401     2305    2                       ELSE IF VP <= JITP$->B$JIT.DDUL

   2305  0 001031   300200 236100                    LDQ     128,,PR3
         0 001032   777777 376007                    ANQ     -1,DL
         0 001033   200011 116100                    CMPQ    VP,,AUTO
         0 001034   001041 602000 0                  TNC     s:2310

      402     2306    2                         THEN
      403     2307                              %DECR(VAR=JITP$->B$JIT.PCDD);

   2308  0 001035   300203 720100                    LXL0    131,,PR3
         0 001036   777777 621010                    EAX1    -1,X0
         0 001037   300203 441100                    SXL1    131,,PR3
         0 001040   001117 710000 0                  TRA     s:2346

      404     2310    2                         ELSE IF VP <= JITP$->B$JIT.LUL

   2310  0 001041   300215 236100                    LDQ     141,,PR3
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:59   
         0 001042   000022 772000                    QRL     18
         0 001043   200011 116100                    CMPQ    VP,,AUTO
         0 001044   001117 602000 0                  TNC     s:2346

      405     2311    2                           THEN
      406     2312                                %DECR(VAR=JITP$->B$JIT.PCL);

   2313  0 001045   300215 720100                    LXL0    141,,PR3
         0 001046   777777 621010                    EAX1    -1,X0
         0 001047   300215 441100                    SXL1    141,,PR3

      407     2315    2                 END;

   2315  0 001050   001117 710000 0                  TRA     s:2346

      408     2316        /* Decr user,asl,debugger data seg page count, if that's where it is. */
      409     2317    1               ELSE IF (VP >= %UDSEGLO)

   2317  0 001051   001130 116007                    CMPQ    600,DL
         0 001052   001060 602000 0                  TNC     s:2323

      410     2318    1                 THEN
      411     2319                      %DECR(VAR = JITP$->B$JIT.PCDS);

   2320  0 001053   200015 473500                    LDP3    JITP$,,AUTO
         0 001054   300202 220100                    LDX0    130,,PR3
         0 001055   777777 621010                    EAX1    -1,X0
         0 001056   300202 741100                    STX1    130,,PR3
         0 001057   001117 710000 0                  TRA     s:2346

      412     2322        /* Decr. read-only seg. Page count, if that's where it is */
      413     2323    1                 ELSE IF ((VP>=%ROSEGLO) AND (VP<=%ROSEGHI))

   2323  0 001060   000057 116007                    CMPQ    47,DL
         0 001061   001071 602000 0                  TNC     s:2329
         0 001062   000075 116007                    CMPQ    61,DL
         0 001063   001071 603000 0                  TRC     s:2329
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:60   

      414     2324    1                   THEN
      415     2325                        %DECR(VAR = JITP$->B$JIT.PCROS);

   2326  0 001064   200015 473500                    LDP3    JITP$,,AUTO
         0 001065   300203 220100                    LDX0    131,,PR3
         0 001066   777777 621010                    EAX1    -1,X0
         0 001067   300203 741100                    STX1    131,,PR3
         0 001070   001117 710000 0                  TRA     s:2346

      416     2328                                                /* Decrement debuger's pages          */
      417     2329    1                   ELSE IF ((VP>=%DBDSEGLO) AND (VP<=%DBDSEGHI))

   2329  0 001071   000510 116007                    CMPQ    328,DL
         0 001072   001102 602000 0                  TNC     s:2335
         0 001073   000610 116007                    CMPQ    392,DL
         0 001074   001102 603000 0                  TRC     s:2335

      418     2330    1                     THEN
      419     2331                          %DECR(VAR = JITP$->B$JIT.PCDDS);

   2332  0 001075   200015 473500                    LDP3    JITP$,,AUTO
         0 001076   300213 720100                    LXL0    139,,PR3
         0 001077   777777 621010                    EAX1    -1,X0
         0 001100   300213 441100                    SXL1    139,,PR3
         0 001101   001117 710000 0                  TRA     s:2346

      420     2334                                                /* Decrement ASL data segment         */
      421     2335    1                     ELSE IF ((VP>=%ASLSEGLO) AND (VP<=%ASLSEGHI))

   2335  0 001102   000610 116007                    CMPQ    392,DL
         0 001103   001113 602000 0                  TNC     s:2342
         0 001104   001010 116007                    CMPQ    520,DL
         0 001105   001113 603000 0                  TRC     s:2342

      422     2336    1                       THEN
      423     2337                            %DECR(VAR = JITP$->B$JIT.PCADS);
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:61   

   2338  0 001106   200015 473500                    LDP3    JITP$,,AUTO
         0 001107   300214 220100                    LDX0    140,,PR3
         0 001110   777777 621010                    EAX1    -1,X0
         0 001111   300214 741100                    STX1    140,,PR3
         0 001112   001117 710000 0                  TRA     s:2346

      424     2340    2                       ELSE DO;

      425     2341                                %DECR(VAR = JITP$->B$JIT.PCC);

   2342  0 001113   200015 473500                    LDP3    JITP$,,AUTO
         0 001114   300202 720100                    LXL0    130,,PR3
         0 001115   777777 621010                    EAX1    -1,X0
         0 001116   300202 441100                    SXL1    130,,PR3

      426     2344    2                         END;

      427     2345
      428     2346    1           CALL MM0$CHKSIZE(WSQ,VP,USIZE,TEMP1);

   2346  0 001117   200016 634500                    EPPR4   TEMP1,,AUTO
         0 001120   200027 454500                    STP4    CTRL+4,,AUTO
         0 001121   200013 635500                    EPPR5   USIZE,,AUTO
         0 001122   200026 455500                    STP5    CTRL+3,,AUTO
         0 001123   200011 636500                    EPPR6   VP,,AUTO
         0 001124   200025 456500                    STP6    CTRL+2,,AUTO
         0 001125   200003 236100                    LDQ     @WSQ,,AUTO
         0 001126   200024 756100                    STQ     CTRL+1,,AUTO
         0 001127   200024 630500                    EPPR0   CTRL+1,,AUTO
         0 001130   000022 631400 xsym               EPPR1   B_VECTNIL+18
         0 001131   000000 701000 xent               TSX1    MM0$CHKSIZE
         0 001132   000000 011000                    NOP     0

      429     2347    1           IF H_S1000_FLG THEN

   2347  0 001133   000000 234000 xsym               SZN     H_S1000_FLG
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:62   
         0 001134   001147 605000 0                  TPL     s:2350

      430     2348    1             CALL HFC$ASSOCCLR(WSQ,VPNO,1);

   2348  0 001135   000006 236000 1                  LDQ     6
         0 001136   200026 756100                    STQ     CTRL+3,,AUTO
         0 001137   200004 236100                    LDQ     @VPNO,,AUTO
         0 001140   200003 235100                    LDA     @WSQ,,AUTO
         0 001141   200024 757100                    STAQ    CTRL+1,,AUTO
         0 001142   200024 630500                    EPPR0   CTRL+1,,AUTO
         0 001143   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 001144   000000 701000 xent               TSX1    HFC$ASSOCCLR
         0 001145   000000 011000                    NOP     0
         0 001146   001152 710000 0                  TRA     s:2352

      431     2349    1             ELSE
      432     2350    1             CALL HFC$ASSOCCLR;

   2350  0 001147   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 001150   000000 701000 xent               TSX1    HFC$ASSOCCLR
         0 001151   000000 011000                    NOP     0

      433     2351        /**/
      434     2352    1           RETURN;

   2352  0 001152   000000 702200 xent               TSX2  ! X66_ARET

      435     2353        /**/
      436     2354        %EJECT;
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:63   
      437     2355        /*F*   NAME:   MME$CVM                                             */
      438     2356        /*F*   PURPOSE: To map or unmap a physical page onto a specified   */
      439     2357        /*F*           virtual page in a WSQ.                              */
      440     2358    1   MME$CVM: ENTRY(WSQ,VPNO,DATA1,DATA2) ALTRET;

   2358  0 001153   000000 700200 xent  MME$CVM      TSX0  ! X66_AUTO_4
         0 001154   000030 000004                    ZERO    24,4

      441     2359                                                /* Data1 = physical page number       */
      442     2360                                                /* Data2 = returned error code        */
      443     2361    1           IF (DATA1 > 0) THEN

   2361  0 001155   200005 470500                    LDP0    @DATA1,,AUTO
         0 001156   000000 235100                    LDA     0,,PR0
         0 001157   001177 604400 0                  TMOZ    s:2371

      444     2362    1             IF (DATA1 > MM_PCORE ) OR

   2362  0 001160   000000 236100                    LDQ     0,,PR0
         0 001161   000000 116000 xsym               CMPQ    MM_PCORE
         0 001162   001173 605400 0                  TPNZ    s:2367
         0 001163   000000 471400 xsym               LDP1    B$PPUT$
         0 001164   100000 236106                    LDQ     0,QL,PR1
         0 001165   002000 316003                    CANQ    1024,DU
         0 001166   001177 600000 0                  TZE     s:2371
         0 001167   100000 236105                    LDQ     0,AL,PR1
         0 001170   000777 376003                    ANQ     511,DU
         0 001171   000777 116003                    CMPQ    511,DU
         0 001172   001177 601000 0                  TNZ     s:2371

      445     2363    1              (B$PPUT$->MM$PPUT.STOLEN(DATA1) AND B$PPUT$->MM$PPUT.USER#(DATA1) = 511)
              2363                        THEN
      446     2364    2                 DO;                       /* ERR: Bad physical pg no.           */

      447     2365        /*E*   ERROR:  -E$BADPP-0
      448     2366               MESSAGE: That physical page does not exist.                 */
      449     2367    2                   DATA2 = %E$BADPP;       /* Physical page doesn't exist        */
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:64   

   2367  0 001173   001154 235007                    LDA     620,DL
         0 001174   200006 471500                    LDP1    @DATA2,,AUTO
         0 001175   100000 755100                    STA     0,,PR1

      450     2368    2                   ALTRETURN;

   2368  0 001176   000000 702200 xent               TSX2  ! X66_AALT

      451     2369    2                 END;
      452     2370                %FINDMAP(P$ = MAP$);            /* Get ptr to page tbl                */

   2371  0 001177   200003 471500                    LDP1    @WSQ,,AUTO
         0 001200   100000 720100                    LXL0    0,,PR1
         0 001201   000000 236010 xsym               LDQ     MM_PTPTRS$,X0
         0 001202   200012 756100                    STQ     MAP$,,AUTO

      453     2373    1           IF (MAP$->B$MAP.RPN(VPNO) ~= MM_FPMC.RPN) THEN
              2373                    /* If vp allocated           */

   2373  0 001203   200004 473500                    LDP3    @VPNO,,AUTO
         0 001204   300000 721100                    LXL1    0,,PR3
         0 001205   200012 474500                    LDP4    MAP$,,AUTO
         0 001206   400000 222111                    LDX2    0,X1,PR4
         0 001207   000000 102000 xsym               CMPX2   MM_FPMC
         0 001210   001243 600000 0                  TZE     s:2388

      454     2374    1             IF NOT (MAP$->B$MAP.SCTRL(VPNO) & %SCCVM) THEN
              2374                      /* And isnt cvm'ed         */

   2374  0 001211   400000 236111                    LDQ     0,X1,PR4
         0 001212   000022 736000                    QLS     18
         0 001213   777400 376003                    ANQ     -256,DU
         0 001214   001000 376003                    ANQ     512,DU
         0 001215   001222 601000 0                  TNZ     s:2382

      455     2375    2                 DO;                       /* ERR: Can't cvm an allocated V.P.   */
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:65   

      456     2376        /*E*   ERROR:  -E$PGINUSE-0
      457     2377               MESSAGE: You cannot CVM a previously allocated virtual page. */
      458     2378    2                   DATA2 = %E$PGINUSE;     /* Page already assigned              */

   2378  0 001216   001153 235007                    LDA     619,DL
         0 001217   200006 475500                    LDP5    @DATA2,,AUTO
         0 001220   500000 755100                    STA     0,,PR5

      459     2379    2                   ALTRETURN;

   2379  0 001221   000000 702200 xent               TSX2  ! X66_AALT

      460     2380    2                 END;
      461     2381    2               ELSE DO;

      462     2382    2                   IF DATA1 >= 0 THEN

   2382  0 001222   000000 235100                    LDA     0,,PR0
         0 001223   001243 604000 0                  TMI     s:2388

      463     2383    2                     IF H_S1000_FLG THEN

   2383  0 001224   000000 234000 xsym               SZN     H_S1000_FLG
         0 001225   001240 605000 0                  TPL     s:2386

      464     2384    2                       CALL HFC$ASSOCCLR(WSQ,VPNO,1);

   2384  0 001226   000006 236000 1                  LDQ     6
         0 001227   200026 756100                    STQ     CTRL+3,,AUTO
         0 001230   200004 236100                    LDQ     @VPNO,,AUTO
         0 001231   200003 235100                    LDA     @WSQ,,AUTO
         0 001232   200024 757100                    STAQ    CTRL+1,,AUTO
         0 001233   200024 630500                    EPPR0   CTRL+1,,AUTO
         0 001234   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 001235   000000 701000 xent               TSX1    HFC$ASSOCCLR
         0 001236   000000 011000                    NOP     0
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:66   
         0 001237   001243 710000 0                  TRA     s:2388

      465     2385    2                       ELSE
      466     2386    2                       CALL HFC$ASSOCCLR;

   2386  0 001240   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 001241   000000 701000 xent               TSX1    HFC$ASSOCCLR
         0 001242   000000 011000                    NOP     0

      467     2387    2                 END;

      468     2388    1           IF DATA1 < 0

   2388  0 001243   200005 470500                    LDP0    @DATA1,,AUTO
         0 001244   000000 235100                    LDA     0,,PR0
         0 001245   001273 605000 0                  TPL     s:2397

      469     2389    2             THEN DO;                      /* Request to unmap the page          */

      470     2390    2                 MAP$->B$MAP (VPNO) = MM_FPMC;

   2390  0 001246   200004 471500                    LDP1    @VPNO,,AUTO
         0 001247   100000 720100                    LXL0    0,,PR1
         0 001250   000000 236000 xsym               LDQ     MM_FPMC
         0 001251   200012 473500                    LDP3    MAP$,,AUTO
         0 001252   300000 756110                    STQ     0,X0,PR3

      471     2391    2                 IF H_S1000_FLG THEN

   2391  0 001253   000000 234000 xsym               SZN     H_S1000_FLG
         0 001254   001267 605000 0                  TPL     s:2394

      472     2392    2                   CALL HFC$ASSOCCLR(WSQ,VPNO,1);

   2392  0 001255   000006 236000 1                  LDQ     6
         0 001256   200026 756100                    STQ     CTRL+3,,AUTO
         0 001257   200004 236100                    LDQ     @VPNO,,AUTO
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:67   
         0 001260   200003 235100                    LDA     @WSQ,,AUTO
         0 001261   200024 757100                    STAQ    CTRL+1,,AUTO
         0 001262   200024 630500                    EPPR0   CTRL+1,,AUTO
         0 001263   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 001264   000000 701000 xent               TSX1    HFC$ASSOCCLR
         0 001265   000000 011000                    NOP     0
         0 001266   001352 710000 0                  TRA     s:2411

      473     2393    2                   ELSE
      474     2394    2                   CALL HFC$ASSOCCLR;

   2394  0 001267   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 001270   000000 701000 xent               TSX1    HFC$ASSOCCLR
         0 001271   000000 011000                    NOP     0

      475     2395    2               END;

   2395  0 001272   001352 710000 0                  TRA     s:2411

      476     2396    2             ELSE DO;                      /* Request to map onto a page         */

      477     2397    2                 IF HW_WSQ0PT THEN

   2397  0 001273   000000 234000 xsym               SZN     HW_WSQ0PT
         0 001274   001305 605000 0                  TPL     s:2400

      478     2398    2                   MAP$->B$MAP.RPN(VPNO)=B$WSQ0PT$->B$PGTBL.RPN(DATA1);

   2398  0 001275   200004 471500                    LDP1    @VPNO,,AUTO
         0 001276   100000 720100                    LXL0    0,,PR1
         0 001277   000000 721100                    LXL1    0,,PR0
         0 001300   000000 473400 xsym               LDP3    B$WSQ0PT$
         0 001301   300000 222111                    LDX2    0,X1,PR3
         0 001302   200012 474500                    LDP4    MAP$,,AUTO
         0 001303   400000 742110                    STX2    0,X0,PR4
         0 001304   001312 710000 0                  TRA     s:2403

PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:68   
      479     2399    2                   ELSE
      480     2400    2                   MAP$->B$MAP.RPN(VPNO) = DATA1;
              2400                            /* Use passed ppno                   */

   2400  0 001305   200004 471500                    LDP1    @VPNO,,AUTO
         0 001306   100000 720100                    LXL0    0,,PR1
         0 001307   000000 721100                    LXL1    0,,PR0
         0 001310   200012 473500                    LDP3    MAP$,,AUTO
         0 001311   300000 741110                    STX1    0,X0,PR3

      481     2401        /* If extended mm privileged user or monitor, give full write      */
      482     2402        /* Access to the cvm'ed page. Otherwise give read-only access.     */
      483     2403    2                 IF (WSQ = %MONWSQ) OR

   2403  0 001312   200003 473500                    LDP3    @WSQ,,AUTO
         0 001313   300000 235100                    LDA     0,,PR3
         0 001314   000001 115007                    CMPA    1,DL
         0 001315   001327 600000 0                  TZE     s:2406
         0 001316   000000 474400 xsym               LDP4    B$JIT$
         0 001317   400013 236100                    LDQ     11,,PR4
         0 001320   000004 376000 xsym               ANQ     B_VECTNIL+4
         0 001321   001327 601000 0                  TNZ     s:2406
         0 001322   100000 235100                    LDA     0,,PR1
         0 001323   000501 115007                    CMPA    321,DL
         0 001324   001327 600000 0                  TZE     s:2406
         0 001325   000500 115007                    CMPA    320,DL
         0 001326   001336 601000 0                  TNZ     s:2407

      484     2404    2                   (B$JIT$->B$JIT.PRIV.ACTIVE & %PR_EXMM#) OR
      485     2405    2                   VPNO = %SBUF1PG OR VPNO = %SBUF2PG
      486     2406    2                   THEN MAP$->B$MAP.CTRL(VPNO) = %PGINMEM | %PGWRITE | %PGIOM;

   2406  0 001327   100000 720100                    LXL0    0,,PR1
         0 001330   200012 474500                    LDP4    MAP$,,AUTO
         0 001331   400000 236110                    LDQ     0,X0,PR4
         0 001332   000007 376000 1                  ANQ     7
         0 001333   000064 276007                    ORQ     52,DL
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:69   
         0 001334   400000 756110                    STQ     0,X0,PR4
         0 001335   001344 710000 0                  TRA     s:2408

      487     2407    2                   ELSE MAP$->B$MAP.CTRL(VPNO) = %PGINMEM | %PGIOM;

   2407  0 001336   100000 720100                    LXL0    0,,PR1
         0 001337   200012 475500                    LDP5    MAP$,,AUTO
         0 001340   500000 236110                    LDQ     0,X0,PR5
         0 001341   000007 376000 1                  ANQ     7
         0 001342   000044 276007                    ORQ     36,DL
         0 001343   500000 756110                    STQ     0,X0,PR5

      488     2408    2                 MAP$->B$MAP.SCTRL(VPNO) = %SCCVM;

   2408  0 001344   100000 720100                    LXL0    0,,PR1
         0 001345   200012 474500                    LDP4    MAP$,,AUTO
         0 001346   400000 236110                    LDQ     0,X0,PR4
         0 001347   000004 376000 1                  ANQ     4
         0 001350   001000 276007                    ORQ     512,DL
         0 001351   400000 756110                    STQ     0,X0,PR4

      489     2409    2               END;

      490     2410        /* Update slave page tables if its a monitor CVM */
      491     2411    1           IF (WSQ = %MONWSQ) AND (IT_CP6UP ~= 0)

   2411  0 001352   200003 470500                    LDP0    @WSQ,,AUTO
         0 001353   000000 235100                    LDA     0,,PR0
         0 001354   000001 115007                    CMPA    1,DL
         0 001355   001410 601000 0                  TNZ     s:2420
         0 001356   000000 236000 xsym               LDQ     IT_CP6UP
         0 001357   001410 600000 0                  TZE     s:2420
         0 001360   200004 471500                    LDP1    @VPNO,,AUTO
         0 001361   100000 235100                    LDA     0,,PR1
         0 001362   000063 115007                    CMPA    51,DL
         0 001363   001366 602000 0                  TNC     s:2414
         0 001364   000075 115007                    CMPA    61,DL
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:70   
         0 001365   001410 602000 0                  TNC     s:2420

      492     2412    1             AND (VPNO < %WINDOWLO OR VPNO > %WINDOWHI) THEN
      493     2413    2               DO;

      494     2414    2                 JITP$ = B$MASTPT$;

   2414  0 001366   000000 236000 xsym               LDQ     B$MASTPT$
         0 001367   200015 756100                    STQ     JITP$,,AUTO

      495     2415    3                 DO I = 0 TO S_NSCPU;

   2415  0 001370   200022 450100                    STZ     I,,AUTO
         0 001371   001404 710000 0                  TRA     s:2418+1

      496     2416    3                   JITP$->B$PAGE.WRD(VPNO) = MAP$->B$PAGE.WRD(VPNO);

   2416  0 001372   200004 470500                    LDP0    @VPNO,,AUTO
         0 001373   000000 720100                    LXL0    0,,PR0
         0 001374   200012 471500                    LDP1    MAP$,,AUTO
         0 001375   200015 473500                    LDP3    JITP$,,AUTO
         0 001376   100000 235110                    LDA     0,X0,PR1
         0 001377   300000 755110                    STA     0,X0,PR3

      497     2417    3                   JITPX = JITPX + 1;

   2417  0 001400   200015 235100                    LDA     JITP$,,AUTO
         0 001401   000001 035007                    ADLA    1,DL
         0 001402   200015 755100                    STA     JITP$,,AUTO

      498     2418    3                 END;

   2418  0 001403   200022 054100                    AOS     I,,AUTO
         0 001404   000000 236000 xsym               LDQ     S_NSCPU
         0 001405   001372 604000 0                  TMI     s:2416
         0 001406   200022 116100                    CMPQ    I,,AUTO
         0 001407   001372 605000 0                  TPL     s:2416
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:71   

      499     2419    2               END;

      500     2420    1           RETURN;

   2420  0 001410   000000 702200 xent               TSX2  ! X66_ARET

      501     2421        /**/
      502     2422        %EJECT;
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:72   
      503     2423        /*F*   NAME:   MME$SMPRT                                           */
      504     2424        /*F*   PURPOSE: To establish memory protection, or affect the      */
      505     2425        /*,*           page table access control bits in general, for pre- */
      506     2426        /*,*           viously allocated virtual pages, based on the priv- */
      507     2427        /*,*           ilege of the caller.                                */
      508     2428    1   MME$SMPRT: ENTRY(WSQ,VPNO,DATA1,DATA2) ALTRET;

   2428  0 001411   000000 700200 xent  MME$SMPRT    TSX0  ! X66_AUTO_4
         0 001412   000030 000004                    ZERO    24,4

      509     2429                                                /* Data1 = access ctrl bits           */
      510     2430                                                /* Data2 = returned error code        */
      511     2431                %FINDMAP(P$ = MAP$);            /* Get ptr to page tbl                */

   2432  0 001413   200003 470500                    LDP0    @WSQ,,AUTO
         0 001414   000000 720100                    LXL0    0,,PR0
         0 001415   000000 236010 xsym               LDQ     MM_PTPTRS$,X0
         0 001416   200012 756100                    STQ     MAP$,,AUTO

      512     2434    1           IF WSQ = %MONWSQ THEN CALL SSS$BLOCKM;

   2434  0 001417   000000 235100                    LDA     0,,PR0
         0 001420   000001 115007                    CMPA    1,DL
         0 001421   001425 601000 0                  TNZ     s:2437

   2434  0 001422   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 001423   000000 701000 xent               TSX1    SSS$BLOCKM
         0 001424   000000 011000                    NOP     0

      513     2435        /* Set 'PRIV' to true if either a user with extended mm privilege  */
      514     2436        /* Or the monitor is making this request.                          */
      515     2437    1           IF (WSQ = %MONWSQ) OR (B$JIT$->B$JIT.PRIV.ACTIVE & %PR_EXMM#)

   2437  0 001425   200003 470500                    LDP0    @WSQ,,AUTO
         0 001426   000000 235100                    LDA     0,,PR0
         0 001427   000001 115007                    CMPA    1,DL
         0 001430   001435 600000 0                  TZE     s:2438
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:73   
         0 001431   000000 471400 xsym               LDP1    B$JIT$
         0 001432   100013 236100                    LDQ     11,,PR1
         0 001433   000004 376000 xsym               ANQ     B_VECTNIL+4
         0 001434   001440 600000 0                  TZE     s:2439

      516     2438    1             THEN PRIV = %TRUE;

   2438  0 001435   400000 236003                    LDQ     -131072,DU
         0 001436   200017 756100                    STQ     PRIV,,AUTO
         0 001437   001441 710000 0                  TRA     s:2441

      517     2439    1             ELSE PRIV = %FALSE;

   2439  0 001440   200017 450100                    STZ     PRIV,,AUTO

      518     2440        /* Make sure that procedure access is OK */
      519     2441    1          IF NOT PRIV AND (((VPNO >=JITP$->B$JIT.PLL) AND (VPNO<=JITP$->B$JIT.PUL) AND
              2441                    WSQ<=%USERWSQ)) THEN

   2441  0 001441   200017 234100                    SZN     PRIV,,AUTO
         0 001442   001473 604000 0                  TMI     s:2451
         0 001443   200004 471500                    LDP1    @VPNO,,AUTO
         0 001444   200015 473500                    LDP3    JITP$,,AUTO
         0 001445   300176 236100                    LDQ     126,,PR3
         0 001446   000022 772000                    QRL     18
         0 001447   100000 116100                    CMPQ    0,,PR1
         0 001450   001452 600000 0                  TZE     s:2441+9
         0 001451   001473 603000 0                  TRC     s:2451
         0 001452   300176 236100                    LDQ     126,,PR3
         0 001453   777777 376007                    ANQ     -1,DL
         0 001454   100000 116100                    CMPQ    0,,PR1
         0 001455   001473 602000 0                  TNC     s:2451
         0 001456   000011 115007                    CMPA    9,DL
         0 001457   001473 603000 0                  TRC     s:2451

      520     2442    1             IF (BINBIT(DATA1,6) & %PGWRITE)

PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:74   
   2442  0 001460   200005 474500                    LDP4    @DATA1,,AUTO
         0 001461   400000 236100                    LDQ     0,,PR4
         0 001462   000036 736000                    QLS     30
         0 001463   000022 772000                    QRL     18
         0 001464   000000 620006                    EAX0    0,QL
         0 001465   200000 360003                    ANX0    65536,DU
         0 001466   001473 600000 0                  TZE     s:2451

      521     2443    2               THEN DO;               /* Can't allow write access on procedure   */

      522     2444        /*E*   ERROR:  -E$MMPRIV-0
      523     2445               MESSAGE: Insufficient privilege for the requested service.  */
      524     2446    2                   DATA2 = %E$MMPRIV;      /* Insuff. Privilege                  */

   2446  0 001467   001144 236007                    LDQ     612,DL
         0 001470   200006 475500                    LDP5    @DATA2,,AUTO
         0 001471   500000 756100                    STQ     0,,PR5

      525     2447    2                   ALTRETURN;

   2447  0 001472   000000 702200 xent               TSX2  ! X66_AALT

      526     2448    2                 END;
      527     2449        /* If the virtual page is in the file mgmt buffer segment, don't   */
      528     2450        /* Allow its access to be changed.                                 */
      529     2451    1           IF ((VPNO  <= %FMSEGHI) AND (VPNO >= %FMSEGLO) AND WSQ <= %USERWSQ)

   2451  0 001473   200004 471500                    LDP1    @VPNO,,AUTO
         0 001474   100000 235100                    LDA     0,,PR1
         0 001475   000057 115007                    CMPA    47,DL
         0 001476   001510 603000 0                  TRC     s:2460
         0 001477   000020 115007                    CMPA    16,DL
         0 001500   001510 602000 0                  TNC     s:2460
         0 001501   000000 235100                    LDA     0,,PR0
         0 001502   000011 115007                    CMPA    9,DL
         0 001503   001510 603000 0                  TRC     s:2460

PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:75   
      530     2452    2             THEN DO;

      531     2453        /*E*   ERROR:  -E$FPOOL-0
      532     2454               MESSAGE: A file management buffer cannot have its access
      533     2455                        modified.                                          */
      534     2456    2                 DATA2 = %E$FPOOL;         /* Fpool access illegal               */

   2456  0 001504   001152 236007                    LDQ     618,DL
         0 001505   200006 473500                    LDP3    @DATA2,,AUTO
         0 001506   300000 756100                    STQ     0,,PR3

      535     2457    2                 ALTRETURN;

   2457  0 001507   000000 702200 xent               TSX2  ! X66_AALT

      536     2458    2               END;
      537     2459        /* Make sure the virtual page has been allocated                   */
      538     2460    1           IF NOT ((MAP$->B$MAP.RPN(VPNO) ~= MM_FPMC.RPN) AND

   2460  0 001510   100000 720100                    LXL0    0,,PR1
         0 001511   200012 473500                    LDP3    MAP$,,AUTO
         0 001512   300000 221110                    LDX1    0,X0,PR3
         0 001513   000000 101000 xsym               CMPX1   MM_FPMC
         0 001514   001522 600000 0                  TZE     s:2465
         0 001515   300000 236110                    LDQ     0,X0,PR3
         0 001516   000022 736000                    QLS     18
         0 001517   777400 376003                    ANQ     -256,DU
         0 001520   002400 376003                    ANQ     1280,DU
         0 001521   001526 601000 0                  TNZ     s:2469

      539     2461    1             (MAP$->B$MAP.SCTRL(VPNO) & (%SCUSER | %SCFPOOL)))
      540     2462    2             THEN DO;

      541     2463        /*E*   ERROR:  -E$BADAREA-0
      542     2464               MESSAGE: The specified area contains pages which aren't yours.*/
      543     2465    2                 DATA2 = %E$BADAREA;       /* Page not owned by user             */

PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:76   
   2465  0 001522   001147 235007                    LDA     615,DL
         0 001523   200006 474500                    LDP4    @DATA2,,AUTO
         0 001524   400000 755100                    STA     0,,PR4

      544     2466    2                 ALTRETURN;

   2466  0 001525   000000 702200 xent               TSX2  ! X66_AALT

      545     2467    2               END;
      546     2468        /* Don't allow access to be changed on jit or hjit pages           */
      547     2469    1           IF VPNO <= %HJITPG              /* Catch AJIT (TSTACK) page too       */

   2469  0 001526   100000 235100                    LDA     0,,PR1
         0 001527   000016 115007                    CMPA    14,DL
         0 001530   001535 603000 0                  TRC     s:2478

      548     2470    2             THEN DO;

      549     2471        /*E*   ERROR:  -E$JIT-0
      550     2472               MESSAGE: The JIT, HJIT, AND PAGE TABLE cannot have their access modified. */
      551     2473    2                 DATA2 = %E$JIT;           /* Cant change jit access             */

   2473  0 001531   001151 236007                    LDQ     617,DL
         0 001532   200006 474500                    LDP4    @DATA2,,AUTO
         0 001533   400000 756100                    STQ     0,,PR4

      552     2474    2                 ALTRETURN;

   2474  0 001534   000000 702200 xent               TSX2  ! X66_AALT

      553     2475    2               END;
      554     2476        /* If the user is not privileged, only change the top two bits     */
      555     2477        /* Of the control field, otherwise stuff whatever was passed       */
      556     2478    1           PPKEEP = BINBIT(DATA1,6);

   2478  0 001535   200005 474500                    LDP4    @DATA1,,AUTO
         0 001536   400000 236100                    LDQ     0,,PR4
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:77   
         0 001537   000036 736000                    QLS     30
         0 001540   200020 756100                    STQ     PPKEEP,,AUTO

      557     2479    1           IF NOT PRIV THEN

   2479  0 001541   200017 234100                    SZN     PRIV,,AUTO
         0 001542   001553 604000 0                  TMI     s:2481

      558     2480    1             PPKEEP = (MAP$->B$MAP.CTRL(VPNO) & '17'O)|(PPKEEP & '60'O);

   2480  0 001543   300000 236110                    LDQ     0,X0,PR3
         0 001544   000036 736000                    QLS     30
         0 001545   170000 376003                    ANQ     61440,DU
         0 001546   200024 756100                    STQ     CTRL+1,,AUTO
         0 001547   200020 236100                    LDQ     PPKEEP,,AUTO
         0 001550   600000 376003                    ANQ     -65536,DU
         0 001551   200024 276100                    ORQ     CTRL+1,,AUTO
         0 001552   200020 756100                    STQ     PPKEEP,,AUTO

      559     2481    1           MAP$->B$MAP.CTRL(VPNO) = PPKEEP;

   2481  0 001553   100000 720100                    LXL0    0,,PR1
         0 001554   200020 236100                    LDQ     PPKEEP,,AUTO
         0 001555   000036 772000                    QRL     30
         0 001556   300000 676110                    ERQ     0,X0,PR3
         0 001557   000077 376007                    ANQ     63,DL
         0 001560   300000 656110                    ERSQ    0,X0,PR3

      560     2482    1           IF H_S1000_FLG THEN

   2482  0 001561   000000 234000 xsym               SZN     H_S1000_FLG
         0 001562   001575 605000 0                  TPL     s:2485

      561     2483    1             CALL HFC$ASSOCCLR(WSQ,VPNO,1);

   2483  0 001563   000006 236000 1                  LDQ     6
         0 001564   200026 756100                    STQ     CTRL+3,,AUTO
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:78   
         0 001565   200004 236100                    LDQ     @VPNO,,AUTO
         0 001566   200003 235100                    LDA     @WSQ,,AUTO
         0 001567   200024 757100                    STAQ    CTRL+1,,AUTO
         0 001570   200024 630500                    EPPR0   CTRL+1,,AUTO
         0 001571   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 001572   000000 701000 xent               TSX1    HFC$ASSOCCLR
         0 001573   000000 011000                    NOP     0
         0 001574   001600 710000 0                  TRA     s:2486

      562     2484    1             ELSE
      563     2485    1             CALL HFC$ASSOCCLR;

   2485  0 001575   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 001576   000000 701000 xent               TSX1    HFC$ASSOCCLR
         0 001577   000000 011000                    NOP     0

      564     2486    1           RETURN;

   2486  0 001600   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   1     000   000013 006000   000014 006000   000015 006000   777000 777777    ................
   1     004   777777 000377   000005 006000   000003 006000   777777 777700    ................
      565     2487        /**/
      566     2488    1   END MME$GVPNOPP;

PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:79   
--  Include file information  --

   SS_SCHED_C.:E05TOU  is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   M$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   S_WSPTD_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   M_ERRORS_C.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$MAP.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure MME$GVPNOPP.
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:80   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w PTR         r     1 @DATA1                     6-0-0/w PTR         r     1 @DATA2
     4-0-0/w PTR         r     1 @VPNO                      3-0-0/w PTR         r     1 @WSQ
    23-0-0/w UBIN        r     1 CTRL                      *0-0-0/w SBIN        r     1 DATA1
    *0-0-0/w SBIN        r     1 DATA2                     21-0-0/b BIT         r     1 FVP_NOW
    22-0-0/w SBIN        r     1 I                         15-0-0/w PTR         r     1 JITP$
    15-0-0/w UBIN        r     1 JITPX                     12-0-0/w PTR         r     1 MAP$
    12-0-0/w STRC        r     1 MAP_PTR                   20-0-0/b BIT         r     1 PPKEEP
    14-0-0/w UBIN        r     1 PPNO                      17-0-0/b BIT         r     1 PRIV
     7-0-0/w UBIN        r     1 PTBASE                    *0-0-0/w STRC        r     1 RVPNO
    10-0-0/w PTR         r     1 SECT$                     16-0-0/w SBIN        r     1 TEMP1
    13-0-0/w UBIN        r     1 USIZE                     11-0-0/w UBIN        r     1 VP
    *0-0-0/w UBIN        r     1 VPNO                      *0-0-0/w UBIN        r     1 WSQ
    *0-0-0/w SBIN        r     1 WSQS

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$IPHYMAP$                 0-0-0/w PTR         r     1 B$JIT$
     0-0-0/w PTR         r     1 B$MASTPT$                  0-0-0/w PTR         r     1 B$MONJIT$
     0-0-0/w PTR         r     1 B$PPUT$                    0-0-0/w PTR         r     1 B$UPT$
     0-0-0/w PTR         r     1 B$WSQ0PT$                  0-0-0/w BIT         r     1 HW_WSQ0PT
     0-0-0/w BIT         r     1 H_S1000_FLG                0-0-0/w UBIN        r     1 IT_CP6UP
     0-0-0/w PTR         r     1 MM_BYP$                    0-0-0/b STRC        r     1 MM_FPMC
     0-0-0/w SBIN        r     1 MM_PCORE
     0-0-0/w PTR         r     1 MM_PTPTRS$(0:16)
     0-0-0/w PTR         r     1 S$CU$                      0-0-0/w UBIN        r     1 S_CUN
     0-0-0/w UBIN        r     1 S_NSCPU                    0-0-0/w STRC        r     1 S_WSPTD(0:28)

PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:81   
  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/w STRC        r     1 B$MAP(0:1023)
     0-0-0/w STRC        r     1 B$NMAP(0:1023)             0-0-0/w STRC(36864) r     1 B$PAGE
     0-0-0/w STRC        r     1 B$PGTBL(0:0)
     0-0-0/w STRC        r     1 B$SECT(0:1023)             0-0-0/d STRC(576)   r     1 B$U
     0-0-0/h UBIN(18)    r     1 MM$IPHY_MAP(0:0)
     0-0-0/w STRC        r     1 MM$PPUT(0:0)


   Procedure MME$GVPNOPP requires 897 words for executable code.
   Procedure MME$GVPNOPP requires 24 words of local(AUTO) storage.

    No errors detected in file MME$VMEM.:E05TSI    .
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:82   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:83   
          MINI XREF LISTING

A_OK
      2269**LABEL    2268--GOTO
B$DO.ECCINFO
      1139**DCL      1140--REDEF
B$IPHYMAP$
       193**DCL      2227>>ASSIGN
B$JIT.DDUL
       882**DCL      2119>>IF       2305>>IF
B$JIT.DUL
       882**DCL      2109>>IF       2295>>IF
B$JIT.ERR.MID
       796**DCL       796--REDEF
B$JIT.JRESPEAK
       886**DCL       887--REDEF
B$JIT.LUL
       888**DCL      2124>>IF       2310>>IF
B$JIT.MMFLGS.FREE_PPGS
       885**DCL      2049>>IF
B$JIT.PCADS
       888**DCL      2152<<ASSIGN   2152>>ASSIGN   2338<<ASSIGN   2338>>ASSIGN
B$JIT.PCC
       883**DCL      2156<<ASSIGN   2156>>ASSIGN   2342<<ASSIGN   2342>>ASSIGN
B$JIT.PCD
       883**DCL      2112<<ASSIGN   2112>>ASSIGN   2298<<ASSIGN   2298>>ASSIGN
B$JIT.PCDD
       884**DCL      2122<<ASSIGN   2122>>ASSIGN   2308<<ASSIGN   2308>>ASSIGN
B$JIT.PCDDS
       887**DCL      2146<<ASSIGN   2146>>ASSIGN   2332<<ASSIGN   2332>>ASSIGN
B$JIT.PCDS
       883**DCL      2134<<ASSIGN   2134>>ASSIGN   2320<<ASSIGN   2320>>ASSIGN
B$JIT.PCL
       888**DCL      2127<<ASSIGN   2127>>ASSIGN   2313<<ASSIGN   2313>>ASSIGN
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:84   
B$JIT.PCP
       883**DCL      2117<<ASSIGN   2117>>ASSIGN   2303<<ASSIGN   2303>>ASSIGN
B$JIT.PCROS
       883**DCL      2140<<ASSIGN   2140>>ASSIGN   2326<<ASSIGN   2326>>ASSIGN
B$JIT.PCV
       888**DCL      2104<<ASSIGN   2104>>ASSIGN   2290<<ASSIGN   2290>>ASSIGN
B$JIT.PLL
       882**DCL      2049>>IF       2441>>IF
B$JIT.PPC
       885**DCL      2094<<ASSIGN   2094>>ASSIGN   2274<<ASSIGN   2274>>ASSIGN
B$JIT.PRIV.ACTIVE
       796**DCL      2242>>IF       2403>>IF       2437>>IF
B$JIT.PUL
       882**DCL      2049>>IF       2114>>IF       2300>>IF       2441>>IF
B$JIT$
       186**DCL       790--IMP-PTR  2028>>ASSIGN   2238>>ASSIGN   2242>>IF       2403>>IF       2437>>IF
B$MAP
        51**DCL      2281<<ASSIGN   2390<<ASSIGN
B$MAP.CTRL
        56**DCL      2090<<ASSIGN   2406<<ASSIGN   2407<<ASSIGN   2480>>ASSIGN   2481<<ASSIGN
B$MAP.RPN
        52**DCL      2014>>IF       2087<<ASSIGN   2089<<ASSIGN   2217>>ASSIGN   2373>>IF       2398<<ASSIGN
      2400<<ASSIGN   2460>>IF
B$MAP.SCTRL
        53**DCL        54--REDEF    2098<<ASSIGN   2219>>IF       2374>>IF       2408<<ASSIGN   2460>>IF
B$MASTPT$
       189**DCL      2414>>ASSIGN
B$MONJIT$
       187**DCL      2026>>ASSIGN   2232>>ASSIGN
B$NMAP.RPN
       121**DCL      1997>>IF       2203>>IF
B$NMAP.SCTRL
       122**DCL       123--REDEF
B$PAGE.WRD
       103**DCL      2416<<ASSIGN   2416>>ASSIGN
B$PGTBL.RPN
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:85   
       196**DCL      2087>>ASSIGN   2398>>ASSIGN
B$PPUT$
       188**DCL      2076>>ASSIGN   2079>>ASSIGN   2092>>ASSIGN   2265>>IF       2265>>IF       2268>>IF
      2362>>IF       2362>>IF
B$SECT.PTBASE
        93**DCL      1994>>ASSIGN   2199>>ASSIGN
B$U.CMF
      1101**DCL      2244>>IF
B$U.MF
      1094**DCL      2254>>DOWHILE
B$U.MISC
      1118**DCL      1119--REDEF
B$U.PCT
      1102**DCL      2081<<ASSIGN   2081>>ASSIGN   2284<<ASSIGN   2284>>ASSIGN
B$UPT$
       190**DCL      1997>>IF       2203>>IF
B$USER.MISC
      1194**DCL      1195--REDEF
B$WSQ0PT$
       194**DCL      2087>>ASSIGN   2398>>ASSIGN
COMMON
      1986**LABEL    1979--GOTO
CTRL
       184**DCL      1978<<ASSIGN   1986<<ASSIGN   2090>>ASSIGN
DATA1
       155**DCL         8--PROC     1977>>ASSIGN   1983--ENTRY    1986>>ASSIGN   2170--ENTRY    2181--ENTRY
      2189--ENTRY    2278<<ASSIGN   2358--ENTRY    2361>>IF       2362>>IF       2362>>IF       2362>>IF
      2382>>IF       2388>>IF       2398>>ASSIGN   2400>>ASSIGN   2428--ENTRY    2442>>IF       2478>>ASSIGN
DATA2
       156**DCL         8--PROC     1983--ENTRY    2019<<ASSIGN   2048<<ASSIGN   2068<<ASSIGN   2163<<ASSIGN
      2170--ENTRY    2181--ENTRY    2189--ENTRY    2223<<ASSIGN   2250<<ASSIGN   2358--ENTRY    2367<<ASSIGN
      2378<<ASSIGN   2428--ENTRY    2446<<ASSIGN   2456<<ASSIGN   2465<<ASSIGN   2473<<ASSIGN
DECR_PPC
      2274**LABEL    2263--GOTO
FOUND_BASEPT
      2208**LABEL    2204--GOTO
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:86   
FOUND_PTBASE
      2002**LABEL    1998--GOTO
FVP_NOW
       182**DCL      2174<<ASSIGN   2184<<ASSIGN   2192<<ASSIGN   2243>>IF
HFC$ASSOCCLR
       206**DCL-ENT  2348--CALL     2350--CALL     2384--CALL     2386--CALL     2392--CALL     2394--CALL
      2483--CALL     2485--CALL
HW_WSQ0PT
       447**DCL      2086>>IF       2227>>IF       2397>>IF
H_S1000_FLG
       421**DCL      2347>>IF       2383>>IF       2391>>IF       2482>>IF
I
       183**DCL      1996<<DOINDEX  1997>>IF       2002>>ASSIGN   2202<<DOINDEX  2203>>IF       2208>>ASSIGN
      2415<<DOINDEX
IT_CP6UP
       202**DCL      2411>>IF
JITP$
       177**DCL       178--REDEF    2026<<ASSIGN   2028<<ASSIGN   2049>>IF       2049>>IF       2049>>IF
      2094>>ASSIGN   2094>>ASSIGN   2104>>ASSIGN   2104>>ASSIGN   2109>>IF       2112>>ASSIGN   2112>>ASSIGN
      2114>>IF       2117>>ASSIGN   2117>>ASSIGN   2119>>IF       2122>>ASSIGN   2122>>ASSIGN   2124>>IF
      2127>>ASSIGN   2127>>ASSIGN   2134>>ASSIGN   2134>>ASSIGN   2140>>ASSIGN   2140>>ASSIGN   2146>>ASSIGN
      2146>>ASSIGN   2152>>ASSIGN   2152>>ASSIGN   2156>>ASSIGN   2156>>ASSIGN   2232<<ASSIGN   2238<<ASSIGN
      2274>>ASSIGN   2274>>ASSIGN   2290>>ASSIGN   2290>>ASSIGN   2295>>IF       2298>>ASSIGN   2298>>ASSIGN
      2300>>IF       2303>>ASSIGN   2303>>ASSIGN   2305>>IF       2308>>ASSIGN   2308>>ASSIGN   2310>>IF
      2313>>ASSIGN   2313>>ASSIGN   2320>>ASSIGN   2320>>ASSIGN   2326>>ASSIGN   2326>>ASSIGN   2332>>ASSIGN
      2332>>ASSIGN   2338>>ASSIGN   2338>>ASSIGN   2342>>ASSIGN   2342>>ASSIGN   2414<<ASSIGN   2416>>ASSIGN
      2441>>IF       2441>>IF
JITPX
       178**DCL      2417<<ASSIGN   2417>>ASSIGN
MAP$
       157**DCL       169--REDEF    1993<<ASSIGN   2008<<ASSIGN   2014>>IF       2087>>ASSIGN   2089>>ASSIGN
      2090>>ASSIGN   2098>>ASSIGN   2200<<ASSIGN   2214<<ASSIGN   2217>>ASSIGN   2219>>IF       2281>>ASSIGN
      2371<<ASSIGN   2373>>IF       2374>>IF       2390>>ASSIGN   2398>>ASSIGN   2400>>ASSIGN   2406>>ASSIGN
      2407>>ASSIGN   2408>>ASSIGN   2416>>ASSIGN   2432<<ASSIGN   2460>>IF       2460>>IF       2480>>ASSIGN
      2481>>ASSIGN
MAP_PTR.WOFFS
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:87   
       170**DCL      2002<<ASSIGN   2002>>ASSIGN   2208<<ASSIGN   2208>>ASSIGN
MEMLIM
      2040**LABEL    2033--CALLALT
MM$DESC.BOUND
      1679**DCL      1680--REDEF
MM$DESC.FLGS
      1680**DCL      1680--REDEF
MM$IPHY_MAP
       107**DCL      2227>>ASSIGN
MM$PPUT.STOLEN
      1667**DCL      2362>>IF
MM$PPUT.USER
      1667**DCL      2092<<ASSIGN   2265>>IF
MM$PPUT.USER#
      1668**DCL      1668--REDEF    2076<<ASSIGN   2079<<ASSIGN   2265>>IF       2268>>IF       2362>>IF
MM0$CHKSIZE
       209**DCL-ENT  2033--CALL     2346--CALL
MMB$FPP
       208**DCL-ENT  2279--CALL
MMB$GPP
       207**DCL-ENT  2057--CALL
MME$WFVP1
      2192**LABEL    2175--GOTO     2185--GOTO
MMV$TRUNC
       210**DCL-ENT  2040--CALL     2042--CALL     2044--CALL
MM_BYP$
      1599**DCL      1599--IMP-PTR
MM_FPMC
      1605**DCL      2281>>ASSIGN   2390>>ASSIGN
MM_FPMC.RPN
      1605**DCL      2014>>IF       2219>>IF       2373>>IF       2460>>IF
MM_PCORE
      1601**DCL      2362>>IF
MM_PTPTRS$
      1679**DCL      1991>>ASSIGN   2008>>ASSIGN   2197>>ASSIGN   2214>>ASSIGN   2371>>ASSIGN   2432>>ASSIGN
PPKEEP
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:88   
       181**DCL      2173<<ASSIGN   2183<<ASSIGN   2191<<ASSIGN   2277>>IF       2478<<ASSIGN   2480<<ASSIGN
      2480>>ASSIGN   2481>>ASSIGN
PPNO
       176**DCL      1977<<ASSIGN   1985<<ASSIGN   2055>>IF       2057<>CALL     2058>>IF       2076>>ASSIGN
      2079>>ASSIGN   2087>>ASSIGN   2089>>ASSIGN   2092>>ASSIGN   2217<<ASSIGN   2219>>IF       2227<<ASSIGN
      2227>>ASSIGN   2265>>IF       2265>>IF       2268>>IF       2278>>ASSIGN   2279<>CALL
PRIV
       180**DCL      2438<<ASSIGN   2439<<ASSIGN   2441>>IF       2479>>IF
PTBASE
       152**DCL      1994<<ASSIGN   1997>>IF       2199<<ASSIGN   2203>>IF
RVPNO.PGNO
       151**DCL      2003>>ASSIGN   2209>>ASSIGN
RVPNO.SECT
       150**DCL      1994>>ASSIGN   2199>>ASSIGN
S$CU$
      1205**DCL      2081>>ASSIGN   2081>>ASSIGN   2244>>IF       2254>>DOWHILE  2284>>ASSIGN   2284>>ASSIGN
SC_MM11
       211**DCL-ENT  2000--CALL     2206--CALL
SC_MM15
       212**DCL-ENT  2061--CALL
SC_MM18
       213**DCL-ENT  2269--CALL
SECT$
       153**DCL      1991<<ASSIGN   1993>>ASSIGN   1994>>ASSIGN   2197<<ASSIGN   2199>>ASSIGN   2200>>ASSIGN
SSR$REG
       217**DCL-ENT  2255--CALL
SSS$BLOCKM
       218**DCL-ENT  2075--CALL     2233--CALL     2434--CALL
S_CUN
       200**DCL      2079>>ASSIGN   2265>>IF
S_NSCPU
       201**DCL      2415>>DOINDEX
S_WSPTD.T
       460**DCL      1989>>IF       2195>>IF
TEMP1
       179**DCL      1995<<ASSIGN   1996>>DOINDEX  1996>>DOINDEX  2002>>ASSIGN   2033<>CALL     2201<<ASSIGN
PL6.E3A0      #001=MME$GVPNOPP File=MME$VMEM.:E05TSI                             WED 07/30/97 03:20 Page:89   
      2202>>DOINDEX  2202>>DOINDEX  2208>>ASSIGN   2346<>CALL
TRY_MEMLIMIT_AGAIN
      2025**LABEL    2041--GOTO     2043--GOTO     2045--GOTO
USER_BREAK
      2156**LABEL    2057--CALLALT
USIZE
       175**DCL      2033<>CALL     2346<>CALL
VP
       154**DCL      2003<<ASSIGN   2006<<ASSIGN   2014>>IF       2033<>CALL     2049>>IF       2049>>IF
      2087>>ASSIGN   2089>>ASSIGN   2090>>ASSIGN   2098>>ASSIGN   2107>>IF       2107>>IF       2109>>IF
      2114>>IF       2119>>IF       2124>>IF       2131>>IF       2137>>IF       2137>>IF       2143>>IF
      2143>>IF       2149>>IF       2149>>IF       2209<<ASSIGN   2212<<ASSIGN   2217>>ASSIGN   2219>>IF
      2245>>IF       2245>>IF       2245>>IF       2245>>IF       2245>>IF       2268>>IF       2281>>ASSIGN
      2293>>IF       2293>>IF       2295>>IF       2300>>IF       2305>>IF       2310>>IF       2317>>IF
      2323>>IF       2323>>IF       2329>>IF       2329>>IF       2335>>IF       2335>>IF       2346<>CALL
VPNO
       147**DCL         8--PROC      148--REDEF    1983--ENTRY    2006>>ASSIGN   2170--ENTRY    2181--ENTRY
      2189--ENTRY    2212>>ASSIGN   2348<>CALL     2358--ENTRY    2373>>IF       2374>>IF       2384<>CALL
      2390>>ASSIGN   2392<>CALL     2398>>ASSIGN   2400>>ASSIGN   2403>>IF       2403>>IF       2406>>ASSIGN
      2407>>ASSIGN   2408>>ASSIGN   2411>>IF       2411>>IF       2416>>ASSIGN   2416>>ASSIGN   2428--ENTRY
      2441>>IF       2441>>IF       2451>>IF       2451>>IF       2460>>IF       2460>>IF       2469>>IF
      2480>>ASSIGN   2481>>ASSIGN   2483<>CALL
WSQ
       145**DCL         8--PROC      146--REDEF    1983--ENTRY    1989>>IF       1991>>ASSIGN   2008>>ASSIGN
      2025>>IF       2033<>CALL     2049>>IF       2057<>CALL     2059>>IF       2073>>IF       2101>>IF
      2101>>IF       2170--ENTRY    2181--ENTRY    2189--ENTRY    2195>>IF       2197>>ASSIGN   2214>>ASSIGN
      2230>>IF       2243>>IF       2263>>IF       2263>>IF       2268>>IF       2282>>IF       2287>>IF
      2287>>IF       2346<>CALL     2348<>CALL     2358--ENTRY    2371>>ASSIGN   2384<>CALL     2392<>CALL
      2403>>IF       2411>>IF       2428--ENTRY    2432>>ASSIGN   2434>>IF       2437>>IF       2441>>IF
      2451>>IF       2483<>CALL
WSQS
       146**DCL      1995>>ASSIGN   2201>>ASSIGN
