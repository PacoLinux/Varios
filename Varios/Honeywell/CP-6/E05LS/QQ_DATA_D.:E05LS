VERSION E05

PL6.E3A0      #001=QQ_DATA_D File=QQ_DATA_D.:E05TSI                              WED 07/30/97 05:44 Page:1    
        1        1        /*M* QQ_DATA_D - TPA global data */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* IND=2, DCI=4, CSU=2, ECU=4, DTI=2, CTI=4, AND */
        8        8        QQ_DATA_D:
        9        9                PROC;
       10       10        /*  ! !  */
       11       11        %INCLUDE Q_PAGE_C;
       12       43        %SET LISTEXP = '1'B;
       13       44        %PAGE(ARG="Includes");

                61        /***************************************************************************
                62         *                                                                         *
                63         *                                  Includes                               *
                64         *                                                                         *
                65         ***************************************************************************/

       14       69        %INCLUDE B_SEGIDS_C;
       15      608        %INCLUDE CP_6;
       16      689        %INCLUDE QQ_MACROS_C;
       17     1114        %PAGE(ARG="Symrefs");

              1131    1   /***************************************************************************
              1132    1    *                                                                         *
              1133    1    *                                  Symrefs                                *
              1134    1    *                                                                         *
              1135    1    ***************************************************************************/

       18     1139        /*  !R!  */
       19     1140    1   DCL QQ_NODES0 UBIN WORD SYMREF;
       20     1141    1   DCL QQ_NODES1 UBIN WORD SYMREF;
       21     1142    1   DCL QQ_NODES2 UBIN WORD SYMREF;
       22     1143        /*DCL QQ_NODES3 UBIN WORD SYMREF;*/
       23     1144        /*  ! !  */
PL6.E3A0      #001=QQ_DATA_D File=QQ_DATA_D.:E05TSI                              WED 07/30/97 05:44 Page:2    
       24     1145        %PAGE(ARG="Symdefs");

              1162    1   /***************************************************************************
              1163    1    *                                                                         *
              1164    1    *                                  Symdefs                                *
              1165    1    *                                                                         *
              1166    1    ***************************************************************************/

       25     1170        /*  !R!  */
       26     1171        /* QQ_CMDBLK - This structure contains all the information about
       27     1172           the command that is currently being processed.  From this
       28     1173           structure you can find out what command is being processed and
       29     1174           who it is being processed for. */
       30     1175
       31     1176    1   DCL 1 QQ_CMDBLK STATIC SYMDEF,
       32     1177    1         2 MAJOR_ERR BIT(36),
       33     1178             /* Major error that occurred while processing command (CP6 error code)   */
       34     1179    1         2 MINOR_ERR BIT(36),
       35     1180             /* Minor error that occurred while processing command (CP6 error code)   */
       36     1181    1         2 MAJOR_ERR_USED BIT(1) ALIGNED,
       37     1182                                           /* Set if major error has been printed     */
       38     1183    1         2 TEXT$ PTR,
       39     1184                                                /* Ptr -> text of the command         */
       40     1185    1         2 S$ PTR,
       41     1186                                 /* Ptr -> context of station that issued the command */
       42     1187    1         2 OUT$ PTR,
       43     1188                                                /* Ptr -> to parser output            */
       44     1189    1         2 CODE UBIN WORD,
       45     1190                                                /* Code of the command see QQ_SUBS_C  */
       46     1191    1         2 ORIGIN UBIN HALF UNAL,
       47     1192                  /* Type of place that gave the command e.g., console, TP station    */
       48     1193    1         2 ARS SBIN HALF UNAL,
       49     1194                                                /* Size of the command in bytes       */
       50     1195    1         2 CADDR BIT(18) UNAL,
       51     1196                            /* Console address if a console submitted this command    */
       52     1197    1         2 FLAGS,
       53     1198                                      /* Flags about the processing of the command    */
PL6.E3A0      #001=QQ_DATA_D File=QQ_DATA_D.:E05TSI                              WED 07/30/97 05:44 Page:3    
       54     1199    1           3 ERR BIT(1) UNAL,
       55     1200                            /* Set if an error occurred while processing the command  */
       56     1201    1           3 * BIT(8) UNAL;
       57     1202                                                /* Spares                             */
       58     1203
       59     1204        /* QQ_GLOBAL - Depository for general TPA static data.  This
       60     1205           structure contains the statistics area, pointers to data
       61     1206           that resides in data segments, flags and counters. */
       62     1207
       63     1208    1   DCL 1 QQ_GLOBAL STATIC SYMDEF,
       64     1209    1         2 ERR BIT(36) INIT('0'B),
       65     1210                            /* CP6 error code, reason for TPA abort; must be first    */
       66     1211    1         2 SCREECH BIT(1) ALIGNED INIT('0'B),
       67     1212                                           /* Set if are in the process of screeching */
       68     1213    1         2 ACCOUNTING BIT(1) ALIGNED INIT('0'B),
       69     1214                                      /* Set if TPUs are to perform step accounting   */
       70     1215    1         2 HISTORY BIT(1) ALIGNED INIT('0'B),
       71     1216                       /* Set if we are supposed to write to history file (unused)    */
       72     1217    1         2 JOURNAL BIT(1) ALIGNED INIT('0'B),
       73     1218                                      /* Set if we are supposed to open the Journal   */
       74     1219    1         2 LOG BIT(1) ALIGNED INIT('0'B),
       75     1220                       /* Set if we are supposed to log MCT messages on TP consoles   */
       76     1221    1         2 TESTMODE BIT(1) ALIGNED INIT('0'B),
       77     1222                                      /* Set if this is a TESTMODE instance (unused)  */
       78     1223    1         2 BREAK BIT(1) ALIGNED INIT('0'B),
       79     1224                       /* Set if someone hit break, while we were printing a dump     */
       80     1225    1         2 NEWCG BIT(1) ALIGNED INIT('0'B),
       81     1226                       /* Set if we are supposed to start the comgroup anew this time */
       82     1227    1         2 PASS1_CMDS BIT(1) ALIGNED INIT('0'B),
       83     1228                       /* Set if commands exist in the star file for later processing */
       84     1229    1         2 DCBCON BIT(1) ALIGNED INIT('0'B),
       85     1230                                 /* Set if stranger DCBs may connect to this instance */
       86     1231    1         2 INSTANCE_UP BIT(1) ALIGNED INIT('0'B),
       87     1232                                           /* Set after initialization is completed   */
       88     1233    1         2 SCHEDULE BIT(1) ALIGNED INIT('0'B),
       89     1234                                 /* Set if we are to perform TPU scheduling (unused)  */
       90     1235    1         2 TERMINATE BIT(1) ALIGNED INIT('0'B),
PL6.E3A0      #001=QQ_DATA_D File=QQ_DATA_D.:E05TSI                              WED 07/30/97 05:44 Page:4    
       91     1236                                      /* Set if we are in the process of stopping TP  */
       92     1237    1         2 TPUINITIAL UBIN WORD INIT(1),
       93     1238                                                /* # of general TPUs to start         */
       94     1239    1         2 CGPAGEMAX UBIN WORD INIT(0),
       95     1240                            /* Maximum # of pages of memory the comgroup can grow to  */
       96     1241    1         2 CGPAGEMIN UBIN WORD INIT(0),
       97     1242                  /* Minimum (initial)  # of pages of memory the comgroup can have    */
       98     1243    1         2 CGSIZEMAX UBIN WORD INIT(3840),
       99     1244                                      /* Maximum size of messages in the comgroup     */
      100     1245    1         2 CGDISKWARN UBIN WORD INIT(25),
      101     1246             /* Free diskspace avaliable in comgroup warning level, unit in granuls   */
      102     1247    1         2 CGMEMWARN UBIN WORD INIT(5),
      103     1248                  /* Free memspace avaliable in comgroup warning level, unit in pages */
      104     1249    1         2 TRMRDSIZ UBIN WORD INIT(3840),
      105     1250                                 /* Maximum size of messages coming from FPL programs */
      106     1251    1         2 TPUMIN UBIN WORD INIT(0),
      107     1252                                      /* Minimum # of TPUs to keep around (unused)    */
      108     1253    1         2 TPUMAX UBIN WORD INIT(9999),
      109     1254                                 /* Maximum # of TPUs that may be scheduled (unused)  */
      110     1255    1         2 STATIONMAX UBIN WORD INIT(9999),
      111     1256                                      /* Maximum # of stations that may be connected  */
      112     1257    1         2 STRANGERMAX UBIN WORD INIT(9999),
      113     1258                                 /* Maximum # of stranger DCBs that may be connected  */
      114     1259    1         2 SCHEDINT UBIN WORD INIT(60),
      115     1260             /* # of seconds in interval between schedules (statistics gathering)     */
      116     1261    1         2 STATION_CNT UBIN WORD INIT(0),
      117     1262                                                /* # of stations currently connected  */
      118     1263    1         2 DISAB_CNT UBIN WORD INIT(0),
      119     1264                                                /* # of items currently disabled      */
      120     1265    1         2 XTEND_CNT UBIN WORD INIT(0),
      121     1266                                      /* # of disk M$EXTENDS done for the comgroup    */
      122     1267    1         2 CGPGXTEND_CNT UBIN WORD INIT(0),
      123     1268                                 /* # of memory page extends done for the comgroup    */
      124     1269    1         2 TPU_CNT UBIN WORD INIT(0),
      125     1270                                                /* # of TPUs currently running        */
      126     1271    1         2 CMD_CNT UBIN WORD INIT(0),
      127     1272                                                /* # of commands executed             */
PL6.E3A0      #001=QQ_DATA_D File=QQ_DATA_D.:E05TSI                              WED 07/30/97 05:44 Page:5    
      128     1273    1         2 ERROR_CNT UBIN WORD INIT(0),
      129     1274                                      /* # of commands in error during initialization */
      130     1275    1         2 FPREQ_CNT UBIN WORD INIT(0),
      131     1276                                                /* # of forms program requests        */
      132     1277    1         2 EVENT_CNT UBIN WORD INIT(0),
      133     1278                                                /* # of events processed              */
      134     1279    1         2 STRANGER_CNT UBIN WORD INIT(0),
      135     1280                                           /* # of stranger DCBs currently connected  */
      136     1281    1         2 STATIONSLOTS UBIN WORD INIT(0),
      137     1282                                 /* # of station slots free in station context area   */
      138     1283    1         2 POOLSIZE UBIN WORD INIT(2048),
      139     1284                                                /* # of words in the global data pool */
      140     1285    1         2 STIMER_UTS UBIN WORD,
      141     1286                                                /* UTS of last schedule               */
      142     1287    1         2 SLEEP_SECS UBIN WORD,
      143     1288                                                /* # of seconds to sleep in QQA$TPA   */
      144     1289    1         2 INIT_PASS UBIN WORD INIT(0),
      145     1290                       /* Which pass are we in for commands during initialization     */
      146     1291    1         2 EVENT$ PTR,
      147     1292                                                /* Ptr -> event queue                 */
      148     1293    1         2 CMDBUF$ PTR INIT(ADDR(NIL)),
      149     1294                                      /* Ptr -> buffer used in reading TP comgroup    */
      150     1295    1         2 KEYINBUF$ PTR INIT(ADDR(NIL)),
      151     1296                                                /* Ptr -> buffer used in reading CSCG */
      152     1297    1         2 DEBUGCMD$ PTR,
      153     1298                       /* Ptr -> buffer used in reading commands when a break is hit  */
      154     1299    1         2 DISAB$ PTR,
      155     1300                                           /* Ptr -> linked list of disabled items    */
      156     1301    1         2 EVENT_DEPTH UBIN WORD INIT(0),
      157     1302                                                /* # of events on the event queue     */
      158     1303    1         2 TRASHBUF$ PTR INIT(ADDR(NIL)),
      159     1304                                 /* Ptr -> buffer used in reading short term junk     */
      160     1305    1         2 TRASHBUF_SIZE UBIN WORD,
      161     1306                                                /* Size in byes of the trash buffer   */
      162     1307    1         2 IXTNSIZE UBIN WORD INIT(400),
      163     1308                            /* # of granules for the initial ixtent of the comgroup   */
      164     1309    1         2 XTNSIZE UBIN WORD INIT(50),
PL6.E3A0      #001=QQ_DATA_D File=QQ_DATA_D.:E05TSI                              WED 07/30/97 05:44 Page:6    
      165     1310                       /* # of granules to add to the comgroup when doing M$EXTEND    */
      166     1311    1         2 CGPGXTNSIZE UBIN WORD INIT(4),
      167     1312                       /* # of pages to add to comgroup when it runs out of memory    */
      168     1313    1         2 IDLE_LOOP REMEMBER,
      169     1314                                           /* Unwind location of idle loop in QQA$TPA */
      170     1315    1         2 DEBUG BIT(1) ALIGNED INIT('0'B),
      171     1316                  /* Set if you don't want to call M$SCREECH when TPA is aborting     */
      172     1317    1         2 UETIME UBIN WORD,
      173     1318                            /* Uexpired time in seconds after waking up in QQA$TPA    */
      174     1319    1         2 HELP_S$ PTR INIT(ADDR(NIL)),
      175     1320    1         2 STATS_CNT UBIN WORD INIT(0),
      176     1321        /* number of STAT commands since last schedule event */
      177     1322    1         2 * (0:45) UBIN WORD INIT(0 * 46),
      178     1323                                                /* Spares                             */
      179     1324    1         2 DS1$_BITS,
      180     1325    1           3 * BIT(24) UNAL INIT('0'B),
      181     1326    1           3 * BIT(12) UNAL INIT('6004'O),
      182     1327    1         2 AUTO$ REDEF DS1$_BITS PTR,
      183     1328                                                /* Ptr -> auto segment                */
      184     1329    1         2 DS2$_BITS,
      185     1330    1           3 * BIT(24) UNAL INIT('0'B),
      186     1331    1           3 * BIT(12) UNAL INIT('6005'O),
      187     1332    1         2 STATION$ REDEF DS2$_BITS PTR,
      188     1333                                           /* Ptr -> station context data segment     */
      189     1334    1         2 DS3$_BITS,
      190     1335    1           3 * BIT(24) UNAL INIT('0'B),
      191     1336    1           3 * BIT(12) UNAL INIT('6006'O),
      192     1337    1         2 POOL$ REDEF DS3$_BITS PTR,
      193     1338                                                /* Ptr -> global data pool            */
      194     1339    1         2 DS4$_BITS,
      195     1340    1           3 * BIT(24) UNAL INIT('0'B),
      196     1341    1           3 * BIT(12) UNAL INIT('6007'O),
      197     1342    1         2 CONTROL$ REDEF DS4$_BITS PTR,
      198     1343                                           /* Ptr -> shared data segment control file */
      199     1344    1         2 PC$INSTANCE$ PTR,
      200     1345                  /* Ptr -> to this instance in the shared data segment control file  */
      201     1346    1         2 TPU$ PTR,
PL6.E3A0      #001=QQ_DATA_D File=QQ_DATA_D.:E05TSI                              WED 07/30/97 05:44 Page:7    
      202     1347                                 /* Ptr -> linked list of info about current TPUs     */
      203     1348    1         2 * UBIN WORD INIT(0),
      204     1349        %QQ_STATS(FPTN=OLD_STATS, LAST_LAST=",");
      205     1386                                      /* Statistics structure for last time interval  */
      206     1387        %QQ_STATS(FPTN=DELTA_STATS, LAST_LAST=",");
      207     1424                  /* Statistics structure for difference between this and last period */
      208     1425    1         2 MCTID CHAR(8) INIT(' '),
      209     1426                  /* Id of the MCT so we can send messages event if not logged on     */
      210     1427    1         2 INSTANCE_NAME CHAR(8),
      211     1428                                           /* Account that the instance is running in */
      212     1429    1         2 TRADER_FID,
      213     1430    1           3 L# UBIN(9) UNAL,
      214     1431    1           3 NAME# CHAR(80) INIT (' '),
      215     1432                                                /* The FID for the TRADER file        */
      216     1433    1         2 TPCP_RU ALIGNED,
      217     1434    1           3 L# UBIN(9) UNAL INIT(4),
      218     1435    1           3 NAME# CHAR(11) INIT ('TPCP'),
      219     1436        /* The name of the run unit for TPCP < 11 characters for special shared processors
              1436        */
      220     1437    1         2 CFP_RU,
      221     1438    1           3 NAME,
      222     1439    1             4 L# UBIN(9) UNAL INIT(10),
      223     1440    1             4 NAME# CHAR(31) UNAL INIT('COMMAND_FP'),
      224     1441    1           3 ACCT CHAR(8) INIT(':SYS'),
      225     1442    1           3 PASS CHAR(8) INIT(' '),
      226     1443    1           3 PSN  CHAR(6) INIT(' ');
      227     1444        /* Default command forms program to run */
      228     1445
      229     1446        /* QQ_NODES$ - This array contains the addresses of the different
      230     1447           parse trees use to process TP commands */
      231     1448
      232     1449    1   DCL QQ_NODES$(0:7) PTR STATIC SYMDEF INIT(ADDR(QQ_NODES0),
      233     1450    1       ADDR(QQ_NODES1), ADDR(QQ_NODES2), ADDR(NIL) * 5);
      234     1451
      235     1452        /* QQ_TP$STATION_INIT - This structure is the station context to
      236     1453           be used when processing initialization commands */
      237     1454
PL6.E3A0      #001=QQ_DATA_D File=QQ_DATA_D.:E05TSI                              WED 07/30/97 05:44 Page:8    
      238     1455        %TP$STATION(FPTN=QQ_TP$STATION_INIT, STCLASS="STATIC SYMDEF",
      239     1456        USERID='INIT', PRIVILEGED=YES);
      240     1529
      241     1530        /* QQ_TP$STATION_CONSOLE - This structure is the station context
      242     1531           to use when procesing a command for a console */
      243     1532
      244     1533        %TP$STATION(FPTN=QQ_TP$STATION_CONSOLE, STCLASS="STATIC SYMDEF",
      245     1534        USERID='CONSOLE', PRIVILEGED=YES);
      246     1607
      247     1608        /*  QQ_ERRMAP  - This structure is a bit map of which TPA
      248     1609            commands to clear off the command line after they are done
      249     1610            being processed.  Due to the way TP handles it's response
      250     1611            to these commands, the table is based on the error code
      251     1612            TPA passes back to QQC$SNDMSG.  Any additions or deletions
      252     1613            should also follow that rule.                               */
      253     1614
      254     1615    1   DCL  QQ_ERRMAP(0:511) UNAL BIT(1) CONSTANT SYMDEF INIT
      255     1616    1       ('1'B,                              /* DATE, TIME, and HELP               */
      256     1617    1        '0'B*100,                          /* 001-0100 UNUSED by QQ              */
      257     1618    1        '0'B*12,                           /* 101-112                            */
      258     1619    1        '1'B,                              /* 113                                */
      259     1620    1        '0'B*21,                           /* 114-134                            */
      260     1621    1        '1'B*2,                            /* 135-136                            */
      261     1622    1        '0'B*14,                           /* 137-150                            */
      262     1623    1        '1'B*22,                           /* 151-172                            */
      263     1624    1        '0'B*10,                           /* 173-182                            */
      264     1625    1        '1'B,                              /* 183                                */
      265     1626    1        '0'B,                              /* 184                                */
      266     1627    1        '1'B*3,                            /* 185-187                            */
      267     1628    1        '0'B*4,                            /* 188-191                            */
      268     1629    1        '1'B*8,                            /* 192-199                            */
      269     1630    1        '0'B*2,                            /* 200-201                            */
      270     1631    1        '1'B,                              /* 202                                */
      271     1632    1        '0'B*9,                            /* 203-211                            */
      272     1633    1        '1'B,                              /* 212                                */
      273     1634    1        '0'B*2,                            /* 213-214                            */
      274     1635    1        '1'B*3,                            /* 215-217                            */
PL6.E3A0      #001=QQ_DATA_D File=QQ_DATA_D.:E05TSI                              WED 07/30/97 05:44 Page:9    
      275     1636    1        '0'B,                              /* 218                                */
      276     1637    1        '1'B,                              /* 219                                */
      277     1638    1        '0'B*10,                           /* 220-229                            */
      278     1639    1        '1'B,                              /* 230                                */
      279     1640    1        '0'B*6,                            /* 231-236                            */
      280     1641    1        '1'B,                              /* 237                                */
      281     1642    1        '0'B*4,                            /* 238-241                            */
      282     1643    1        '1'B,                              /* 242                                */
      283     1644    1        '0'B*2,                            /* 243-244                            */
      284     1645    1        '0'B*156,                          /* 245-400 UNUSED                     */
      285     1646    1        '1'B*23,                           /* 401-423                            */
      286     1647    1        '0'B*26,                           /* 424-449 UNUSED                     */
      287     1648    1        '1'B,                              /* 450                                */
      288     1649    1        '0'B*61                            /* 451-511 UNUSED                     */
      289     1650    1         );
      290     1651    1   END QQ_DATA_D;

PL6.E3A0      #001=QQ_DATA_D File=QQ_DATA_D.:E05TSI                              WED 07/30/97 05:44 Page:10   
--  Include file information  --

   QQ_MACROS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   Q_PAGE_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure QQ_DATA_D.

   No code generated for procedure QQ_DATA_D .
   Procedure QQ_DATA_D requires 4 words of local(AUTO) storage.

    No errors detected in file QQ_DATA_D.:E05TSI    .

PL6.E3A0      #001=QQ_DATA_D File=QQ_DATA_D.:E05TSI                              WED 07/30/97 05:44 Page:11   

 Object Unit name= QQ_DATA_D                                  File name= QQ_DATA_D.:E05TOU
 UTS= JUL 30 '97 05:44:21.00 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none   324    504  QQ_DATA_D
    2  RoData even  UTS     15     17  QQ_DATA_D
    3   Proc  even  none     0      0  QQ_DATA_D

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes            yes     ~proc       0  QQ_DATA_D

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    1      0  QQ_CMDBLK                          1     12  QQ_GLOBAL
    1    410  QQ_NODES$                          1    420  QQ_TP$STATION_INIT
    1    452  QQ_TP$STATION_CONSOLE              2      0  QQ_ERRMAP

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  QQ_NODES0                             QQ_NODES1
     QQ_NODES2
PL6.E3A0      #001=QQ_DATA_D File=QQ_DATA_D.:E05TSI                              WED 07/30/97 05:44 Page:12   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=QQ_DATA_D File=QQ_DATA_D.:E05TSI                              WED 07/30/97 05:44 Page:13   

        1        1        /*M* QQ_DATA_D - TPA global data */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* IND=2, DCI=4, CSU=2, ECU=4, DTI=2, CTI=4, AND */
        8        8        QQ_DATA_D:
        9        9                PROC;
       10       10        /*  ! !  */
       11       11        %INCLUDE Q_PAGE_C;
       12       43        %SET LISTEXP = '1'B;
       13       44        %PAGE(ARG="Includes");

                61        /***************************************************************************
                62         *                                                                         *
                63         *                                  Includes                               *
                64         *                                                                         *
                65         ***************************************************************************/

       14       69        %INCLUDE B_SEGIDS_C;
       15      608        %INCLUDE CP_6;
       16      689        %INCLUDE QQ_MACROS_C;
       17     1114        %PAGE(ARG="Symrefs");

              1131    1   /***************************************************************************
              1132    1    *                                                                         *
              1133    1    *                                  Symrefs                                *
              1134    1    *                                                                         *
              1135    1    ***************************************************************************/

       18     1139        /*  !R!  */
       19     1140    1   DCL QQ_NODES0 UBIN WORD SYMREF;
       20     1141    1   DCL QQ_NODES1 UBIN WORD SYMREF;
       21     1142    1   DCL QQ_NODES2 UBIN WORD SYMREF;
       22     1143        /*DCL QQ_NODES3 UBIN WORD SYMREF;*/
       23     1144        /*  ! !  */
PL6.E3A0      #001=QQ_DATA_D File=QQ_DATA_D.:E05TSI                              WED 07/30/97 05:44 Page:14   
       24     1145        %PAGE(ARG="Symdefs");

              1162    1   /***************************************************************************
              1163    1    *                                                                         *
              1164    1    *                                  Symdefs                                *
              1165    1    *                                                                         *
              1166    1    ***************************************************************************/

       25     1170        /*  !R!  */
       26     1171        /* QQ_CMDBLK - This structure contains all the information about
       27     1172           the command that is currently being processed.  From this
       28     1173           structure you can find out what command is being processed and
       29     1174           who it is being processed for. */
       30     1175
       31     1176    1   DCL 1 QQ_CMDBLK STATIC SYMDEF,
       32     1177    1         2 MAJOR_ERR BIT(36),
       33     1178             /* Major error that occurred while processing command (CP6 error code)   */
       34     1179    1         2 MINOR_ERR BIT(36),
       35     1180             /* Minor error that occurred while processing command (CP6 error code)   */
       36     1181    1         2 MAJOR_ERR_USED BIT(1) ALIGNED,
       37     1182                                           /* Set if major error has been printed     */
       38     1183    1         2 TEXT$ PTR,
       39     1184                                                /* Ptr -> text of the command         */
       40     1185    1         2 S$ PTR,
       41     1186                                 /* Ptr -> context of station that issued the command */
       42     1187    1         2 OUT$ PTR,
       43     1188                                                /* Ptr -> to parser output            */
       44     1189    1         2 CODE UBIN WORD,
       45     1190                                                /* Code of the command see QQ_SUBS_C  */
       46     1191    1         2 ORIGIN UBIN HALF UNAL,
       47     1192                  /* Type of place that gave the command e.g., console, TP station    */
       48     1193    1         2 ARS SBIN HALF UNAL,
       49     1194                                                /* Size of the command in bytes       */
       50     1195    1         2 CADDR BIT(18) UNAL,
       51     1196                            /* Console address if a console submitted this command    */
       52     1197    1         2 FLAGS,
       53     1198                                      /* Flags about the processing of the command    */
PL6.E3A0      #001=QQ_DATA_D File=QQ_DATA_D.:E05TSI                              WED 07/30/97 05:44 Page:15   
       54     1199    1           3 ERR BIT(1) UNAL,
       55     1200                            /* Set if an error occurred while processing the command  */
       56     1201    1           3 * BIT(8) UNAL;
       57     1202                                                /* Spares                             */
       58     1203
       59     1204        /* QQ_GLOBAL - Depository for general TPA static data.  This
       60     1205           structure contains the statistics area, pointers to data
       61     1206           that resides in data segments, flags and counters. */
       62     1207
       63     1208    1   DCL 1 QQ_GLOBAL STATIC SYMDEF,
       64     1209    1         2 ERR BIT(36) INIT('0'B),
       65     1210                            /* CP6 error code, reason for TPA abort; must be first    */
       66     1211    1         2 SCREECH BIT(1) ALIGNED INIT('0'B),
       67     1212                                           /* Set if are in the process of screeching */
       68     1213    1         2 ACCOUNTING BIT(1) ALIGNED INIT('0'B),
       69     1214                                      /* Set if TPUs are to perform step accounting   */
       70     1215    1         2 HISTORY BIT(1) ALIGNED INIT('0'B),
       71     1216                       /* Set if we are supposed to write to history file (unused)    */
       72     1217    1         2 JOURNAL BIT(1) ALIGNED INIT('0'B),
       73     1218                                      /* Set if we are supposed to open the Journal   */
       74     1219    1         2 LOG BIT(1) ALIGNED INIT('0'B),
       75     1220                       /* Set if we are supposed to log MCT messages on TP consoles   */
       76     1221    1         2 TESTMODE BIT(1) ALIGNED INIT('0'B),
       77     1222                                      /* Set if this is a TESTMODE instance (unused)  */
       78     1223    1         2 BREAK BIT(1) ALIGNED INIT('0'B),
       79     1224                       /* Set if someone hit break, while we were printing a dump     */
       80     1225    1         2 NEWCG BIT(1) ALIGNED INIT('0'B),
       81     1226                       /* Set if we are supposed to start the comgroup anew this time */
       82     1227    1         2 PASS1_CMDS BIT(1) ALIGNED INIT('0'B),
       83     1228                       /* Set if commands exist in the star file for later processing */
       84     1229    1         2 DCBCON BIT(1) ALIGNED INIT('0'B),
       85     1230                                 /* Set if stranger DCBs may connect to this instance */
       86     1231    1         2 INSTANCE_UP BIT(1) ALIGNED INIT('0'B),
       87     1232                                           /* Set after initialization is completed   */
       88     1233    1         2 SCHEDULE BIT(1) ALIGNED INIT('0'B),
       89     1234                                 /* Set if we are to perform TPU scheduling (unused)  */
       90     1235    1         2 TERMINATE BIT(1) ALIGNED INIT('0'B),
PL6.E3A0      #001=QQ_DATA_D File=QQ_DATA_D.:E05TSI                              WED 07/30/97 05:44 Page:16   
       91     1236                                      /* Set if we are in the process of stopping TP  */
       92     1237    1         2 TPUINITIAL UBIN WORD INIT(1),
       93     1238                                                /* # of general TPUs to start         */
       94     1239    1         2 CGPAGEMAX UBIN WORD INIT(0),
       95     1240                            /* Maximum # of pages of memory the comgroup can grow to  */
       96     1241    1         2 CGPAGEMIN UBIN WORD INIT(0),
       97     1242                  /* Minimum (initial)  # of pages of memory the comgroup can have    */
       98     1243    1         2 CGSIZEMAX UBIN WORD INIT(3840),
       99     1244                                      /* Maximum size of messages in the comgroup     */
      100     1245    1         2 CGDISKWARN UBIN WORD INIT(25),
      101     1246             /* Free diskspace avaliable in comgroup warning level, unit in granuls   */
      102     1247    1         2 CGMEMWARN UBIN WORD INIT(5),
      103     1248                  /* Free memspace avaliable in comgroup warning level, unit in pages */
      104     1249    1         2 TRMRDSIZ UBIN WORD INIT(3840),
      105     1250                                 /* Maximum size of messages coming from FPL programs */
      106     1251    1         2 TPUMIN UBIN WORD INIT(0),
      107     1252                                      /* Minimum # of TPUs to keep around (unused)    */
      108     1253    1         2 TPUMAX UBIN WORD INIT(9999),
      109     1254                                 /* Maximum # of TPUs that may be scheduled (unused)  */
      110     1255    1         2 STATIONMAX UBIN WORD INIT(9999),
      111     1256                                      /* Maximum # of stations that may be connected  */
      112     1257    1         2 STRANGERMAX UBIN WORD INIT(9999),
      113     1258                                 /* Maximum # of stranger DCBs that may be connected  */
      114     1259    1         2 SCHEDINT UBIN WORD INIT(60),
      115     1260             /* # of seconds in interval between schedules (statistics gathering)     */
      116     1261    1         2 STATION_CNT UBIN WORD INIT(0),
      117     1262                                                /* # of stations currently connected  */
      118     1263    1         2 DISAB_CNT UBIN WORD INIT(0),
      119     1264                                                /* # of items currently disabled      */
      120     1265    1         2 XTEND_CNT UBIN WORD INIT(0),
      121     1266                                      /* # of disk M$EXTENDS done for the comgroup    */
      122     1267    1         2 CGPGXTEND_CNT UBIN WORD INIT(0),
      123     1268                                 /* # of memory page extends done for the comgroup    */
      124     1269    1         2 TPU_CNT UBIN WORD INIT(0),
      125     1270                                                /* # of TPUs currently running        */
      126     1271    1         2 CMD_CNT UBIN WORD INIT(0),
      127     1272                                                /* # of commands executed             */
PL6.E3A0      #001=QQ_DATA_D File=QQ_DATA_D.:E05TSI                              WED 07/30/97 05:44 Page:17   
      128     1273    1         2 ERROR_CNT UBIN WORD INIT(0),
      129     1274                                      /* # of commands in error during initialization */
      130     1275    1         2 FPREQ_CNT UBIN WORD INIT(0),
      131     1276                                                /* # of forms program requests        */
      132     1277    1         2 EVENT_CNT UBIN WORD INIT(0),
      133     1278                                                /* # of events processed              */
      134     1279    1         2 STRANGER_CNT UBIN WORD INIT(0),
      135     1280                                           /* # of stranger DCBs currently connected  */
      136     1281    1         2 STATIONSLOTS UBIN WORD INIT(0),
      137     1282                                 /* # of station slots free in station context area   */
      138     1283    1         2 POOLSIZE UBIN WORD INIT(2048),
      139     1284                                                /* # of words in the global data pool */
      140     1285    1         2 STIMER_UTS UBIN WORD,
      141     1286                                                /* UTS of last schedule               */
      142     1287    1         2 SLEEP_SECS UBIN WORD,
      143     1288                                                /* # of seconds to sleep in QQA$TPA   */
      144     1289    1         2 INIT_PASS UBIN WORD INIT(0),
      145     1290                       /* Which pass are we in for commands during initialization     */
      146     1291    1         2 EVENT$ PTR,
      147     1292                                                /* Ptr -> event queue                 */
      148     1293    1         2 CMDBUF$ PTR INIT(ADDR(NIL)),
      149     1294                                      /* Ptr -> buffer used in reading TP comgroup    */
      150     1295    1         2 KEYINBUF$ PTR INIT(ADDR(NIL)),
      151     1296                                                /* Ptr -> buffer used in reading CSCG */
      152     1297    1         2 DEBUGCMD$ PTR,
      153     1298                       /* Ptr -> buffer used in reading commands when a break is hit  */
      154     1299    1         2 DISAB$ PTR,
      155     1300                                           /* Ptr -> linked list of disabled items    */
      156     1301    1         2 EVENT_DEPTH UBIN WORD INIT(0),
      157     1302                                                /* # of events on the event queue     */
      158     1303    1         2 TRASHBUF$ PTR INIT(ADDR(NIL)),
      159     1304                                 /* Ptr -> buffer used in reading short term junk     */
      160     1305    1         2 TRASHBUF_SIZE UBIN WORD,
      161     1306                                                /* Size in byes of the trash buffer   */
      162     1307    1         2 IXTNSIZE UBIN WORD INIT(400),
      163     1308                            /* # of granules for the initial ixtent of the comgroup   */
      164     1309    1         2 XTNSIZE UBIN WORD INIT(50),
PL6.E3A0      #001=QQ_DATA_D File=QQ_DATA_D.:E05TSI                              WED 07/30/97 05:44 Page:18   
      165     1310                       /* # of granules to add to the comgroup when doing M$EXTEND    */
      166     1311    1         2 CGPGXTNSIZE UBIN WORD INIT(4),
      167     1312                       /* # of pages to add to comgroup when it runs out of memory    */
      168     1313    1         2 IDLE_LOOP REMEMBER,
      169     1314                                           /* Unwind location of idle loop in QQA$TPA */
      170     1315    1         2 DEBUG BIT(1) ALIGNED INIT('0'B),
      171     1316                  /* Set if you don't want to call M$SCREECH when TPA is aborting     */
      172     1317    1         2 UETIME UBIN WORD,
      173     1318                            /* Uexpired time in seconds after waking up in QQA$TPA    */
      174     1319    1         2 HELP_S$ PTR INIT(ADDR(NIL)),
      175     1320    1         2 STATS_CNT UBIN WORD INIT(0),
      176     1321        /* number of STAT commands since last schedule event */
      177     1322    1         2 * (0:45) UBIN WORD INIT(0 * 46),
      178     1323                                                /* Spares                             */
      179     1324    1         2 DS1$_BITS,
      180     1325    1           3 * BIT(24) UNAL INIT('0'B),
      181     1326    1           3 * BIT(12) UNAL INIT('6004'O),
      182     1327    1         2 AUTO$ REDEF DS1$_BITS PTR,
      183     1328                                                /* Ptr -> auto segment                */
      184     1329    1         2 DS2$_BITS,
      185     1330    1           3 * BIT(24) UNAL INIT('0'B),
      186     1331    1           3 * BIT(12) UNAL INIT('6005'O),
      187     1332    1         2 STATION$ REDEF DS2$_BITS PTR,
      188     1333                                           /* Ptr -> station context data segment     */
      189     1334    1         2 DS3$_BITS,
      190     1335    1           3 * BIT(24) UNAL INIT('0'B),
      191     1336    1           3 * BIT(12) UNAL INIT('6006'O),
      192     1337    1         2 POOL$ REDEF DS3$_BITS PTR,
      193     1338                                                /* Ptr -> global data pool            */
      194     1339    1         2 DS4$_BITS,
      195     1340    1           3 * BIT(24) UNAL INIT('0'B),
      196     1341    1           3 * BIT(12) UNAL INIT('6007'O),
      197     1342    1         2 CONTROL$ REDEF DS4$_BITS PTR,
      198     1343                                           /* Ptr -> shared data segment control file */
      199     1344    1         2 PC$INSTANCE$ PTR,
      200     1345                  /* Ptr -> to this instance in the shared data segment control file  */
      201     1346    1         2 TPU$ PTR,
PL6.E3A0      #001=QQ_DATA_D File=QQ_DATA_D.:E05TSI                              WED 07/30/97 05:44 Page:19   
      202     1347                                 /* Ptr -> linked list of info about current TPUs     */
      203     1348    1         2 * UBIN WORD INIT(0),
      204     1349        %QQ_STATS(FPTN=OLD_STATS, LAST_LAST=",");
      205     1386                                      /* Statistics structure for last time interval  */
      206     1387        %QQ_STATS(FPTN=DELTA_STATS, LAST_LAST=",");
      207     1424                  /* Statistics structure for difference between this and last period */
      208     1425    1         2 MCTID CHAR(8) INIT(' '),
      209     1426                  /* Id of the MCT so we can send messages event if not logged on     */
      210     1427    1         2 INSTANCE_NAME CHAR(8),
      211     1428                                           /* Account that the instance is running in */
      212     1429    1         2 TRADER_FID,
      213     1430    1           3 L# UBIN(9) UNAL,
      214     1431    1           3 NAME# CHAR(80) INIT (' '),
      215     1432                                                /* The FID for the TRADER file        */
      216     1433    1         2 TPCP_RU ALIGNED,
      217     1434    1           3 L# UBIN(9) UNAL INIT(4),
      218     1435    1           3 NAME# CHAR(11) INIT ('TPCP'),
      219     1436        /* The name of the run unit for TPCP < 11 characters for special shared processors
              1436        */
      220     1437    1         2 CFP_RU,
      221     1438    1           3 NAME,
      222     1439    1             4 L# UBIN(9) UNAL INIT(10),
      223     1440    1             4 NAME# CHAR(31) UNAL INIT('COMMAND_FP'),
      224     1441    1           3 ACCT CHAR(8) INIT(':SYS'),
      225     1442    1           3 PASS CHAR(8) INIT(' '),
      226     1443    1           3 PSN  CHAR(6) INIT(' ');
      227     1444        /* Default command forms program to run */
      228     1445
      229     1446        /* QQ_NODES$ - This array contains the addresses of the different
      230     1447           parse trees use to process TP commands */
      231     1448
      232     1449    1   DCL QQ_NODES$(0:7) PTR STATIC SYMDEF INIT(ADDR(QQ_NODES0),
      233     1450    1       ADDR(QQ_NODES1), ADDR(QQ_NODES2), ADDR(NIL) * 5);
      234     1451
      235     1452        /* QQ_TP$STATION_INIT - This structure is the station context to
      236     1453           be used when processing initialization commands */
      237     1454
PL6.E3A0      #001=QQ_DATA_D File=QQ_DATA_D.:E05TSI                              WED 07/30/97 05:44 Page:20   
      238     1455        %TP$STATION(FPTN=QQ_TP$STATION_INIT, STCLASS="STATIC SYMDEF",
      239     1456        USERID='INIT', PRIVILEGED=YES);
      240     1529
      241     1530        /* QQ_TP$STATION_CONSOLE - This structure is the station context
      242     1531           to use when procesing a command for a console */
      243     1532
      244     1533        %TP$STATION(FPTN=QQ_TP$STATION_CONSOLE, STCLASS="STATIC SYMDEF",
      245     1534        USERID='CONSOLE', PRIVILEGED=YES);
      246     1607
      247     1608        /*  QQ_ERRMAP  - This structure is a bit map of which TPA
      248     1609            commands to clear off the command line after they are done
      249     1610            being processed.  Due to the way TP handles it's response
      250     1611            to these commands, the table is based on the error code
      251     1612            TPA passes back to QQC$SNDMSG.  Any additions or deletions
      252     1613            should also follow that rule.                               */
      253     1614
      254     1615    1   DCL  QQ_ERRMAP(0:511) UNAL BIT(1) CONSTANT SYMDEF INIT
      255     1616    1       ('1'B,                              /* DATE, TIME, and HELP               */
      256     1617    1        '0'B*100,                          /* 001-0100 UNUSED by QQ              */
      257     1618    1        '0'B*12,                           /* 101-112                            */
      258     1619    1        '1'B,                              /* 113                                */
      259     1620    1        '0'B*21,                           /* 114-134                            */
      260     1621    1        '1'B*2,                            /* 135-136                            */
      261     1622    1        '0'B*14,                           /* 137-150                            */
      262     1623    1        '1'B*22,                           /* 151-172                            */
      263     1624    1        '0'B*10,                           /* 173-182                            */
      264     1625    1        '1'B,                              /* 183                                */
      265     1626    1        '0'B,                              /* 184                                */
      266     1627    1        '1'B*3,                            /* 185-187                            */
      267     1628    1        '0'B*4,                            /* 188-191                            */
      268     1629    1        '1'B*8,                            /* 192-199                            */
      269     1630    1        '0'B*2,                            /* 200-201                            */
      270     1631    1        '1'B,                              /* 202                                */
      271     1632    1        '0'B*9,                            /* 203-211                            */
      272     1633    1        '1'B,                              /* 212                                */
      273     1634    1        '0'B*2,                            /* 213-214                            */
      274     1635    1        '1'B*3,                            /* 215-217                            */
PL6.E3A0      #001=QQ_DATA_D File=QQ_DATA_D.:E05TSI                              WED 07/30/97 05:44 Page:21   
      275     1636    1        '0'B,                              /* 218                                */
      276     1637    1        '1'B,                              /* 219                                */
      277     1638    1        '0'B*10,                           /* 220-229                            */
      278     1639    1        '1'B,                              /* 230                                */
      279     1640    1        '0'B*6,                            /* 231-236                            */
      280     1641    1        '1'B,                              /* 237                                */
      281     1642    1        '0'B*4,                            /* 238-241                            */
      282     1643    1        '1'B,                              /* 242                                */
      283     1644    1        '0'B*2,                            /* 243-244                            */
      284     1645    1        '0'B*156,                          /* 245-400 UNUSED                     */
      285     1646    1        '1'B*23,                           /* 401-423                            */
      286     1647    1        '0'B*26,                           /* 424-449 UNUSED                     */
      287     1648    1        '1'B,                              /* 450                                */
      288     1649    1        '0'B*61                            /* 451-511 UNUSED                     */
      289     1650    1         );
      290     1651    1   END QQ_DATA_D;

PL6.E3A0      #001=QQ_DATA_D File=QQ_DATA_D.:E05TSI                              WED 07/30/97 05:44 Page:22   
--  Include file information  --

   QQ_MACROS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   Q_PAGE_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure QQ_DATA_D.
PL6.E3A0      #001=QQ_DATA_D File=QQ_DATA_D.:E05TSI                              WED 07/30/97 05:44 Page:23   

 **** Variables and constants ****

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 QQ_NODES0                  0-0-0/w UBIN        r     1 QQ_NODES1
     0-0-0/w UBIN        r     1 QQ_NODES2


   No code generated for procedure QQ_DATA_D .
   Procedure QQ_DATA_D requires 4 words of local(AUTO) storage.

    No errors detected in file QQ_DATA_D.:E05TSI    .
PL6.E3A0      #001=QQ_DATA_D File=QQ_DATA_D.:E05TSI                              WED 07/30/97 05:44 Page:24   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=QQ_DATA_D File=QQ_DATA_D.:E05TSI                              WED 07/30/97 05:44 Page:25   
          MINI XREF LISTING

QQ_GLOBAL.DS1$_BITS
      1324**DCL      1327--REDEF
QQ_GLOBAL.DS2$_BITS
      1329**DCL      1332--REDEF
QQ_GLOBAL.DS3$_BITS
      1334**DCL      1337--REDEF
QQ_GLOBAL.DS4$_BITS
      1339**DCL      1342--REDEF
QQ_NODES0
      1140**DCL      1449--DCLINIT
QQ_NODES1
      1141**DCL      1450--DCLINIT
QQ_NODES2
      1142**DCL      1450--DCLINIT
