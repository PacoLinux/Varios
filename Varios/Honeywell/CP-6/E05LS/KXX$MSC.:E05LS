VERSION E05

PL6.E3A0      #001=KXX$DFRINP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:32 Page:1    
        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        /*P*
        7        7             NAME: KXX$DFRINP
        8        8             PURPOSE: X.29 VC setup is done or VDH is free again.
        9        9                      Take care of buffered input data.
       10       10        */
       11       11        /*X*   PLM = 4, IND=3, CTI=3, DCI=6, IAD=0, DTI=6, AND=Y, CSI=3, THI=3, STI=3, DMC=Y
                11         */
       12       12        KXX$DFRINP: PROC ( KX$X29 );
       13       13
       14       14        %EJECT;
PL6.E3A0      #001=KXX$DFRINP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:32 Page:2    
       15       15
       16       16        /*****************************************************************
       17       17        *                                                                *
       18       18        *                           Include files                        *
       19       19        *                                                                *
       20       20        *****************************************************************/
       21       21
       22       22        %INCLUDE LCP_6;
       23     4301        %INCLUDE KX_SCODE_C;
       24     4367        %INCLUDE KX_MACROS_M;
       25     5138        %INCLUDE KXX_MACROS_M;
       26     5480        %INCLUDE KA_GLB_E;
       27     5558        %KA_HLTOTP_E;
       28     5567        %INCLUDE KX_EQUS_E;
       29     6006        %INCLUDE KH$STT;
       30     6036        %INCLUDE KL_MACRO_C;
       31     9388
       32     9389        /*****************************************************************
       33     9390        *                                                                *
       34     9391        *                           Auto                                 *
       35     9392        *                                                                *
       36     9393        *****************************************************************/
       37     9394
       38     9395        %KX$X29 ( STCLASS = );
       39     9435        %FPT_X25 ( FPTN = CALL_FPT );
       40     9479
       41     9480    1   DCL KVBSIZ UBIN;
       42     9481    1   DCL DAT$ PTR;
       43     9482
       44     9483        /*****************************************************************
       45     9484        *                                                                *
       46     9485        *                           Based                                *
       47     9486        *                                                                *
       48     9487        *****************************************************************/
       49     9488
       50     9489        %KX$X29_INPBFR ( STCLASS = "BASED (DAT$)" );
       51     9553        %VLP_SCODE ( FPTN=B$SCODE, STCLASS=BASED );
PL6.E3A0      #001=KXX$DFRINP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:32 Page:3    
       52     9614
       53     9615        /*****************************************************************
       54     9616        *                                                                *
       55     9617        *                           Entry references                     *
       56     9618        *                                                                *
       57     9619        *****************************************************************/
       58     9620
       59     9621    1   DCL KVB$RLSSYS ENTRY(2) ALTRET;
       60     9622    1   DCL KHD$SCREECH ENTRY (1) ;
       61     9623    1   DCL KXX$X29 ENTRY (1);
       62     9624    1   DCL KXP$PACKET ENTRY (1) ALTRET;
       63     9625
       64     9626        %EJECT;
PL6.E3A0      #001=KXX$DFRINP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:32 Page:4    
       65     9627        /*****************************************************************
       66     9628        *                                                                *
       67     9629        *                           Constant/Symref                      *
       68     9630        *                                                                *
       69     9631        *****************************************************************/
       70     9632
       71     9633        %VLP_SCODE (FPTN=Y_NO_RLS,STCLASS=CONSTANT,FCG=KX,MID=X,ERR#=%S$KX_NO_RLS#);
       72     9694        %KX_STATS_X29;
       73    10035        %EJECT;
PL6.E3A0      #001=KXX$DFRINP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:32 Page:5    
       74    10036
       75    10037        /*****************************************************************
       76    10038        *                                                                *
       77    10039        *                           Procedure                            *
       78    10040        *                                                                *
       79    10041        *****************************************************************/
       80    10042
       81    10043    2       DO WHILE ( KX$X29.INPBFR.HED$ ~= ADDR(NIL) );
       82    10044    2          DAT$ = KX$X29.INPBFR.HED$;
       83    10045    2          KX$X29.INPBFR.HED$ = KX$X29_INPBFR.FPT.PRM1$;
       84    10046    2          KX$X29_INPBFR.FPT.PRM1$ = ADDR(NIL);
       85    10047    2          KVBSIZ = KX$X29_INPBFR.FPT.PRM1;
       86    10048    2          KX$X29_INPBFR.FPT.PRM1 = 0;
       87    10049    2          KX$X29_INPBFR.FPT.PRS.PRM2 = '1'B;
       88    10050    2          CALL_FPT = KX$X29_INPBFR.FPT;
       89    10051    2          CALL KX$X29.SBR$ ( CALL_FPT ) ; /* Calling x.29 or x.28 */
       90    10052        /*
       91    10053           Now we can release the buffer.
       92    10054        */
       93    10055    2          CALL KVB$RLSSYS ( KVBSIZ, DAT$ )
       94    10056    2             WHENALTRETURN
       95    10057    3                DO;
       96    10058    3                   CALL KHD$SCREECH ( Y_NO_RLS );
       97    10059    3                END;
       98    10060    2          KX_STATS_X29.KHSTT.INPBFRBYTUTL = KX_STATS_X29.KHSTT.INPBFRBYTUTL - KVBSIZ*2;
       99    10061    2       END;
      100    10062
      101    10063    1       KX$X29.INPBFR.TAL$ = ADDR(NIL);
      102    10064
      103    10065    1       RETURN;
      104    10066
      105    10067    1   END KXX$DFRINP;
      106    10068
      107    10069        %EOD;

PL6.E3A0      #001=KXX$DFRINP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:32 Page:6    
--  Include file information  --

   KL_MACRO_C.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
   KA_GLB_E.:E05TOU  is referenced.
   KXX_MACROS_M.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   KX_SCODE_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure KXX$DFRINP.

   Procedure KXX$DFRINP requires 109 words for executable code.
   Procedure KXX$DFRINP requires 14 words of local(AUTO) storage.

PL6.E3A0      #001=KXX$DFRINP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:32 Page:7    

 Object Unit name= KXX$DFRINP                                 File name= KXX$MSC.:E05TOU
 UTS= JUL 30 '97 02:32:21.56 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Data  even  none    16     10  KXX$DFRINP
    1  RoData even  UTS      3      3  KXX$DFRINP
    2   Proc  even  none   109     6D  KXX$DFRINP
    3  RoData even  none     4      4  KXX$DFRINP

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        1  KXX$DFRINP

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 KVB$RLSSYS
         yes           Std       1 KHD$SCREECH
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KX_STATS_X29                     r    G$ROS$
PL6.E3A0      #001=KXX$DFRINP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:32 Page:8    


        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        /*P*
        7        7             NAME: KXX$DFRINP
        8        8             PURPOSE: X.29 VC setup is done or VDH is free again.
        9        9                      Take care of buffered input data.
       10       10        */
       11       11        /*X*  PLM = 4, IND=3, CTI=3, DCI=6, IAD=0, DTI=6, AND=Y, CSI=3, THI=3, STI=3, DMC=Y
                11         */
       12       12        KXX$DFRINP: PROC ( KX$X29 );

     12   2 000000  D380 0000 0000  xent KXX$DFRINP      LNJ,B5   X6A_AUTO_1
          2 000003       000E 0001                       DC       14,1

       13       13
       14       14        %EJECT;
PL6.E3A0      #001=KXX$DFRINP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:32 Page:9    
       15       15
       16       16        /*****************************************************************
       17       17        *                                                                *
       18       18        *                           Include files                        *
       19       19        *                                                                *
       20       20        *****************************************************************/
       21       21
       22       22        %INCLUDE LCP_6;
       23     4301        %INCLUDE KX_SCODE_C;
       24     4367        %INCLUDE KX_MACROS_M;
       25     5138        %INCLUDE KXX_MACROS_M;
       26     5480        %INCLUDE KA_GLB_E;
       27     5558        %KA_HLTOTP_E;
       28     5567        %INCLUDE KX_EQUS_E;
       29     6006        %INCLUDE KH$STT;
       30     6036        %INCLUDE KL_MACRO_C;
       31     9388
       32     9389        /*****************************************************************
       33     9390        *                                                                *
       34     9391        *                           Auto                                 *
       35     9392        *                                                                *
       36     9393        *****************************************************************/
       37     9394
       38     9395        %KX$X29 ( STCLASS = );
       39     9435        %FPT_X25 ( FPTN = CALL_FPT );
       40     9479
       41     9480    1   DCL KVBSIZ UBIN;
       42     9481    1   DCL DAT$ PTR;
       43     9482
       44     9483        /*****************************************************************
       45     9484        *                                                                *
       46     9485        *                           Based                                *
       47     9486        *                                                                *
       48     9487        *****************************************************************/
       49     9488
       50     9489        %KX$X29_INPBFR ( STCLASS = "BASED (DAT$)" );
       51     9553        %VLP_SCODE ( FPTN=B$SCODE, STCLASS=BASED );
PL6.E3A0      #001=KXX$DFRINP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:32 Page:10   
       52     9614
       53     9615        /*****************************************************************
       54     9616        *                                                                *
       55     9617        *                           Entry references                     *
       56     9618        *                                                                *
       57     9619        *****************************************************************/
       58     9620
       59     9621    1   DCL KVB$RLSSYS ENTRY(2) ALTRET;
       60     9622    1   DCL KHD$SCREECH ENTRY (1) ;
       61     9623    1   DCL KXX$X29 ENTRY (1);
       62     9624    1   DCL KXP$PACKET ENTRY (1) ALTRET;
       63     9625
       64     9626        %EJECT;
PL6.E3A0      #001=KXX$DFRINP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:32 Page:11   
       65     9627        /*****************************************************************
       66     9628        *                                                                *
       67     9629        *                           Constant/Symref                      *
       68     9630        *                                                                *
       69     9631        *****************************************************************/
       70     9632
       71     9633        %VLP_SCODE (FPTN=Y_NO_RLS,STCLASS=CONSTANT,FCG=KX,MID=X,ERR#=%S$KX_NO_RLS#);
       72     9694        %KX_STATS_X29;
       73    10035        %EJECT;
PL6.E3A0      #001=KXX$DFRINP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:32 Page:12   
       74    10036
       75    10037        /*****************************************************************
       76    10038        *                                                                *
       77    10039        *                           Procedure                            *
       78    10040        *                                                                *
       79    10041        *****************************************************************/
       80    10042
       81    10043    2       DO WHILE ( KX$X29.INPBFR.HED$ ~= ADDR(NIL) );

  10043   2 000005  0F81 0059                            B        s:10061,PREL

       82    10044    2          DAT$ = KX$X29.INPBFR.HED$;

  10044   2 000007  ECC7 0004                            LDB,B6   @KX$X29,AUTO
          2 000009  DCC6 0008                            LDB,B5   8,B6
          2 00000B  DFC7 0007                            STB,B5   DAT$,AUTO

       83    10045    2          KX$X29.INPBFR.HED$ = KX$X29_INPBFR.FPT.PRM1$;

  10045   2 00000D  CCC5 0007                            LDB,B4   7,B5
          2 00000F  CFC6 0008                            STB,B4   8,B6

       84    10046    2          KX$X29_INPBFR.FPT.PRM1$ = ADDR(NIL);

  10046   2 000011  DB80 0000 0000                       LAB,B5   0
          2 000014  BCC7 0007                            LDB,B3   DAT$,AUTO
          2 000016  DFC3 0007                            STB,B5   7,B3

       85    10047    2          KVBSIZ = KX$X29_INPBFR.FPT.PRM1;

  10047   2 000018  DCC7 0007                            LDB,B5   DAT$,AUTO
          2 00001A  E845 0005                            LDR,R6   5,B5
          2 00001C  EF47 0006                            STR,R6   KVBSIZ,AUTO

       86    10048    2          KX$X29_INPBFR.FPT.PRM1 = 0;

  10048   2 00001E  8745 0005                            CL       5,B5
PL6.E3A0      #001=KXX$DFRINP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:32 Page:13   

       87    10049    2          KX$X29_INPBFR.FPT.PRS.PRM2 = '1'B;

  10049   2 000020  DCC7 0007                            LDB,B5   DAT$,AUTO
          2 000022  8945 000F                            LBT,'4000'X       15,B5
          2 000024       4000

       88    10050    2          CALL_FPT = KX$X29_INPBFR.FPT;

  10050   2 000025  AB85                                 LAB,B2   ,B5
          2 000026  2C00                                 LDV,R2   0
          2 000027  6C20                                 LDV,R6   32
          2 000028  BB80 0000 0000  00                   LAB,B3   CALL_FPT
          2 00002B  3C00                                 LDV,R3   0
          2 00002C  0008                                 MMM

       89    10051    2          CALL KX$X29.SBR$ ( CALL_FPT ) ; /* Calling x.29 or x.28 */

  10051   2 00002D  BB80 0000 0000  03                   LAB,B3   0
          2 000030  9C86                                 LDB,B1   ,B6
          2 000031  CBF0 0100                            LAB,B4   256,IMO
          2 000033  E381                                 LNJ,B6   ,B1
          2 000034       0001                            DC       s:10055,PREL

       90    10052        /*
       91    10053           Now we can release the buffer.
       92    10054        */
       93    10055    2          CALL KVB$RLSSYS ( KVBSIZ, DAT$ )

  10055   2 000035  EBC7 0007                            LAB,B6   DAT$,AUTO
          2 000037  EFC7 000C                            STB,B6   DAT$+5,AUTO
          2 000039  DBC7 0006                            LAB,B5   KVBSIZ,AUTO
          2 00003B  DFC7 000A                            STB,B5   DAT$+3,AUTO
          2 00003D  BBC7 000A                            LAB,B3   DAT$+3,AUTO
          2 00003F  CBF0 0200                            LAB,B4   512,IMO
          2 000041  E380 0000 0000  xent                 LNJ,B6   KVB$RLSSYS
          2 000044       0003                            DC       s:10058,PREL
PL6.E3A0      #001=KXX$DFRINP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:32 Page:14   
          2 000045  0F81 000A                            B        s:10060,PREL

       94    10056    2             WHENALTRETURN
       95    10057    3                DO;

       96    10058    3                   CALL KHD$SCREECH ( Y_NO_RLS );

  10058   2 000047  BB80 0000 0002  03                   LAB,B3   +2
          2 00004A  CBF0 0100                            LAB,B4   256,IMO
          2 00004C  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          2 00004F       0001                            DC       s:10060,PREL

       97    10059    3                END;

       98    10060    2         KX_STATS_X29.KHSTT.INPBFRBYTUTL = KX_STATS_X29.KHSTT.INPBFRBYTUTL - KVBSIZ*2;

  10060   2 000050  F847 0006                            LDR,R7   KVBSIZ,AUTO
          2 000052  6C00                                 LDV,R6   0
          2 000053  7081                                 DOL,R7   1
          2 000054  8656                                 CPL      R6
          2 000055  8657                                 CPL      R7
          2 000056  8470 0000 0001                       AID      1,IMO
          2 000059  8400 0000 001C  xsym                 AID      KX_STATS_X29+28
          2 00005C  8D00 0000 001C  xsym                 SDI      KX_STATS_X29+28

       99    10061    2       END;

  10061   2 00005F  ECC7 0004                            LDB,B6   @KX$X29,AUTO
          2 000061  8DC6 0008                            CMN      8,B6
          2 000063  0981 FFA3                            BNE      s:10044,PREL

      100    10062
      101    10063    1       KX$X29.INPBFR.TAL$ = ADDR(NIL);

  10063   2 000065  DB80 0000 0000                       LAB,B5   0
          2 000068  DFC6 000A                            STB,B5   10,B6

PL6.E3A0      #001=KXX$DFRINP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:32 Page:15   
      102    10064
      103    10065    1       RETURN;

  10065   2 00006A  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      104    10066
      105    10067    1   END KXX$DFRINP;
      106    10068
      107    10069        %EOD;

PL6.E3A0      #001=KXX$DFRINP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:32 Page:16   
--  Include file information  --

   KL_MACRO_C.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
   KA_GLB_E.:E05TOU  is referenced.
   KXX_MACROS_M.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   KX_SCODE_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure KXX$DFRINP.
PL6.E3A0      #001=KXX$DFRINP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:32 Page:17   

 **** Variables and constants ****

  ****  Section 000  Data  KXX$DFRINP

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(256)   r     1 CALL_FPT

  ****  Section 001 RoData KXX$DFRINP

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(48)    r     1 Y_NO_RLS

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @KX$X29                    7-0-0/w PTR         r     1 DAT$
     6-0-0/w UBIN(16)    r     1 KVBSIZ                    *0-0-0/w STRC(576)   r     1 KX$X29

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(1248)  r     1 KX_STATS_X29

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(256)   r     1 KX$X29_INPBFR
PL6.E3A0      #001=KXX$DFRINP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:32 Page:18   


   Procedure KXX$DFRINP requires 109 words for executable code.
   Procedure KXX$DFRINP requires 14 words of local(AUTO) storage.
PL6.E3A0      #001=KXX$DFRINP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:32 Page:19   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KXX$DFRINP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:32 Page:20   
          MINI XREF LISTING

CALL_FPT
      9462**DCL     10050<<ASSIGN  10051<>CALL
CALL_FPT.PRM1$
      9467**DCL      9468--REDEF
CALL_FPT.PRM2$
      9469**DCL      9469--REDEF
DAT$
      9481**DCL      9503--IMP-PTR 10044<<ASSIGN  10045>>ASSIGN  10046>>ASSIGN  10047>>ASSIGN  10048>>ASSIGN
     10049>>ASSIGN  10050>>ASSIGN  10055<>CALL
KHD$SCREECH
      9622**DCL-ENT 10058--CALL
KVB$RLSSYS
      9621**DCL-ENT 10055--CALL
KVBSIZ
      9480**DCL     10047<<ASSIGN  10055<>CALL    10060>>ASSIGN
KX$X29
      9414**DCL        12--PROC
KX$X29.HLTOTP
      9424**DCL      9424--REDEF
KX$X29.HLTOTPNXTBFR
      9427**DCL      9428--REDEF
KX$X29.INPBFR.HED$
      9419**DCL     10043>>DOWHILE 10044>>ASSIGN  10045<<ASSIGN
KX$X29.INPBFR.TAL$
      9420**DCL     10063<<ASSIGN
KX$X29.SBR$
      9418**DCL     10051>>CALL
KX$X29_INPBFR.FPT
      9537**DCL     10050>>ASSIGN
KX$X29_INPBFR.FPT.PRM1
      9540**DCL     10047>>ASSIGN  10048<<ASSIGN
KX$X29_INPBFR.FPT.PRM1$
PL6.E3A0      #001=KXX$DFRINP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:32 Page:21   
      9540**DCL      9541--REDEF   10045>>ASSIGN  10046<<ASSIGN
KX$X29_INPBFR.FPT.PRM2$
      9542**DCL      9542--REDEF
KX$X29_INPBFR.FPT.PRS.PRM2
      9545**DCL     10049<<ASSIGN
KX_STATS_X29.KHSTT.INPBFRBYTUTL
     10027**DCL     10060<<ASSIGN  10060>>ASSIGN
KX_STATS_X29.REQSTATS.DSPMSK
      9955**DCL      9961--REDEF
KX_STATS_X29.REQSTATS.SLCMSK
      9996**DCL     10003--REDEF
Y_NO_RLS
      9660**DCL     10058<>CALL

PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:22   
      108        1        /*T***********************************************************/
      109        2        /*T*                                                         */
      110        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      111        4        /*T*                                                         */
      112        5        /*T***********************************************************/
      113        6        %EJECT;
PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:23   
      114        7
      115        8        /*P*
      116        9             NAME: KXX$SNDX29MSG
      117       10             PURPOSE: Send the requested X.29 message.
      118       11        */
      119       12        /*X*   PLM = 4, IND=3, CTI=3, DCI=6, IAD=0, DTI=6, AND=Y, CSI=3, THI=3, STI=3, DMC=Y
                12         */
      120       13        KXX$SNDX29MSG: PROC ( X29MSGTYP, KX$X29ORX28 ) ALTRET;
      121       14
      122       15        %EJECT;
PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:24   
      123       16
      124       17        /*****************************************************************
      125       18        *                                                                *
      126       19        *                           Include files                        *
      127       20        *                                                                *
      128       21        *****************************************************************/
      129       22
      130       23        %INCLUDE LCP_6;
      131     4302        %INCLUDE KX_EQUS_E;
      132     4741        %INCLUDE KX_SCODE_C;
      133     4807        %INCLUDE KX_MACROS_M;
      134     5578        %INCLUDE KXX_MACROS_M;
      135     5920        %INCLUDE KA_GLB_E;
      136     5998        %KA_HLTOTP_E;
      137     6007        %INCLUDE KA_GLB;
      138     6084        %INCLUDE KV$GLB;
      139     6503        %INCLUDE KV$GLBCTX;
      140     6948        %INCLUDE KV_ASCCHR_E;
      141     7085        %INCLUDE KL_CONTROL_C;
      142     7465        %INCLUDE KV_GLBCNS_E;
      143     7806        %KV_USR_EVT_ID_E;
      144     7826        %INCLUDE KH_MACRO_C;
      145     8569        %INCLUDE KH$STT;
      146     8599        %INCLUDE KL_MACRO_C;
      147    11951
      148    11952
      149    11953        /*****************************************************************
      150    11954        *                                                                *
      151    11955        *                           Based                                *
      152    11956        *                                                                *
      153    11957        *****************************************************************/
      154    11958
      155    11959        %KX$X29_OTPBFR ( STCLASS = "BASED ( DAT$ )" );
      156    11982        %KX$VC_OTPBFR ( STCLASS = "BASED(DAT$)" );
      157    12009    1   DCL BYT_ARY(0:2000) UBIN BYTE CALIGNED BASED ( DAT$ );
      158    12010        %KV$VDI ( STCLASS = " BASED ( VDI$ ) " );
      159    12081    1   DCL BASED_WORD UBIN WORD BASED;
PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:25   
      160    12082        %KH$CTLTBL ( FPTN = KH_CTLTBL, STCLASS = "BASED ( KH_CTLTBL$ )" );
      161    12294    1   DCL UBNBSD(0:10) UBIN BYTE CALIGNED BASED ;
      162    12295        %VLP_SCODE ( STCLASS = BASED, FPTN = B$SCODE );
      163    12356
      164    12357        /*****************************************************************
      165    12358        *                                                                *
      166    12359        *                           Constant/Symref/Static               *
      167    12360        *                                                                *
      168    12361        *****************************************************************/
      169    12362
      170    12363        /*
      171    12364           Note that the following array has to be aligned with the equates
      172    12365           of KX_X29MSGTYP_x.
      173    12366        */
      174    12367    1   DCL KX_X29MSGTYP_BYTSIZ(0:%KX_X29MSGTYP_HI#) UBIN BYTE CALIGNED
      175    12368    1     CONSTANT INIT (99,1,0,3,%(KX_X3PRMX_HI#*2+3),3,35,3,15,3);
             12368              /* 99 means variable size */
      176    12369        /*
      177    12370           Since we may be called by x.28 or x.29 to send messages, let's
      178    12371           use this array to validate the caller.
      179    12372        */
      180    12373    1   DCL KX_X29MSGTYP_VAL(0:%KX_X29MSGTYP_HI#) UBIN BYTE CALIGNED
      181    12374    1     CONSTANT INIT ( %KXX_TYP_X28#,%KXX_TYP_X29#*2,
      182    12375    1                     %KXX_TYP_X28#,%KXX_TYP_X29#,
      183    12376    1                     %KXX_TYP_X28#,%KXX_TYP_X29#*0 );
      184    12377    1   DCL KX_X29MSGCOD(0:%KX_X29MSGTYP_HI#) UBIN BYTE CALIGNED
      185    12378    1     CONSTANT INIT (0,1,2,3,4,5,6,2,6,4);
      186    12379        %KX_STATS_X29;
      187    12720        %KA_MSC;
      188    12742    1   DCL KH_CTLTBL$ PTR SYMREF;
      189    12743
      190    12744        %VLP_SCODE (FPTN=Y_NO_GET,STCLASS=CONSTANT,FCG=KX,MID=X,ERR#=%S$KX_NO_GET#);
      191    12805        %VLP_SCODE (FPTN=Y_UNKSNDX29RQS,STCLASS=CONSTANT,FCG=KX,MID=X,ERR#=
             12805            %S$KX_UNKSNDX29RQS#);
      192    12866
      193    12867        %FPT_X25 ( FPTN = CALL_L3, STCLASS = STATIC, EVN = %KX_P_EV_DATAVL# );
      194    12911        /*****************************************************************
PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:26   
      195    12912        *                                                                *
      196    12913        *                           Auto                                 *
      197    12914        *                                                                *
      198    12915        *****************************************************************/
      199    12916
      200    12917    1   DCL DAT$ PTR;
      201    12918    1   DCL KX$X29ORX28 CHAR(DUMMY) ALIGNED;
      202    12919    1   DCL DUMMY REDEF KX$X29ORX28 UBIN;
      203    12920        %KX$X29 ( STCLASS = REDEF KX$X29ORX28 );
      204    12960        %KX$VC ( STCLASS = REDEF KX$X29ORX28 );
      205    13051    1   DCL X29MSGTYP UBIN;
      206    13052    1   DCL I UBIN;
      207    13053    1   DCL BYTX UBIN;
      208    13054    1   DCL LEVEL UBIN;
      209    13055    1   DCL KVBSIZ UBIN;
      210    13056    1   DCL VDI$ PTR;
      211    13057    1   DCL CNC_TYP UBIN AUTO;
      212    13058    1   DCL WRDSIZ2N UBIN;
      213    13059
      214    13060        /*****************************************************************
      215    13061        *                                                                *
      216    13062        *                           External Procs                       *
      217    13063        *                                                                *
      218    13064        *****************************************************************/
      219    13065
      220    13066    1   DCL KXX$TRNOTP ENTRY (1) ALTRET;
      221    13067    1   DCL KXV$VCVDH ENTRY (1) ALTRET;
      222    13068    1   DCL KXX$X29 ENTRY (1);
      223    13069    1   DCL KHD$SCREECH ENTRY (1);
      224    13070    1   DCL KVB$GETSYS ENTRY (2) ALTRET;
      225    13071    1   DCL KVB$GET2NSYS ENTRY(2) ALTRET;
      226    13072    1   DCL KHI$DISABLE ENTRY (1);
      227    13073    1   DCL KHI$ENABLE ENTRY;
      228    13074    1   DCL KXP$PACKET ENTRY (1) ALTRET;
      229    13075        %EJECT;
PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:27   
      230    13076
      231    13077
      232    13078        /*****************************************************************
      233    13079        *                                                                *
      234    13080        *                           Procedure                            *
      235    13081        *                                                                *
      236    13082        *****************************************************************/
      237    13083
      238    13084    1       IF KX$X29.L3$ = ADDR(NIL)
      239    13085    1          THEN
      240    13086    1             RETURN;
      241    13087    1       IF KX$X29.SBR$ = ENTADDR(KXX$X29)
      242    13088    1          THEN
      243    13089    2             DO;
      244    13090    2                IF KX$X29.STATE > %KX_X29_ST_NRM#
      245    13091    2                   THEN
      246    13092    2                      RETURN;
      247    13093    2                CNC_TYP = %KXX_TYP_X29#;
      248    13094    2             END;
      249    13095    1          ELSE
      250    13096    1             IF KX$VC.SBR$ = ENTADDR(KXV$VCVDH) AND KX$VC.X28
      251    13097    1                THEN
      252    13098    2                   DO;
      253    13099    2                      IF KX$VC.STATE > %KX_VC_ST_NRM#
      254    13100    2                         THEN
      255    13101    2                            RETURN;
      256    13102    2                      CNC_TYP = %KXX_TYP_X28#;
      257    13103    2                   END;
      258    13104    1                ELSE
      259    13105    1                   GOTO SCREECH;
      260    13106        /*
      261    13107           Validate this request.
      262    13108        */
      263    13109    1       IF KX_X29MSGTYP_BYTSIZ ( X29MSGTYP ) = 0 OR
      264    13110    1          KX_X29MSGTYP_VAL(X29MSGTYP) ~= CNC_TYP
      265    13111    1          THEN
      266    13112    1             GOTO SCREECH;
PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:28   
      267    13113        /*
      268    13114           If the output buffer byte count is excessive, assume we're out
      269    13115           of control and altreturn.
      270    13116        */
      271    13117    1       VDI$ = KX$X29.VDI$;
      272    13118    1       IF CNC_TYP = %KXX_TYP_X29#
      273    13119    1          THEN
      274    13120    2             DO;
      275    13121    2                IF VDI$ ~= ADDR(NIL)
      276    13122    2                   THEN
      277    13123    3                      DO;
      278    13124    3                         IF ( KX$X29.OTPBFRBYTCNT > KA_OTPBLKLMT(KV$VDI.LINSPD) * 2 -
      279    13125    3                            KA_OTPUN_BLKLMT(KV$VDI.LINSPD) + 5000 )
      280    13126    3                            THEN
      281    13127    3                               ALTRETURN;
      282    13128        /*
      283    13129           Truncate the current buffer and get a new buffer for the
      284    13130           X.29 message.
      285    13131        */
      286    13132    3                         CALL KXX$TRNOTP ( KV$VDI );
      287    13133    3                      END;
      288    13134    2                KVBSIZ = 64;
      289    13135    2                CALL KVB$GET2NSYS ( KVBSIZ/2, DAT$ ) WHENALTRETURN
      290    13136    3                      DO;
      291    13137    3   L_NOMEM:              CALL KHD$SCREECH ( Y_NO_GET );
      292    13138    3                      END;
      293    13139    2                KX$X29_OTPBFR = '0'B;
      294    13140    2                KX$X29_OTPBFR.Q = '1'B;
      295    13141    2                KX$X29_OTPBFR.BYTCNT = KX_X29MSGTYP_BYTSIZ ( X29MSGTYP );
      296    13142    2                KX$X29_OTPBFR.BYTSIZLOG2 = 6;
      297    13143    2                KX$X29.OTPBFRBYTCNT = KX$X29.OTPBFRBYTCNT + KVBSIZ;
      298    13144    2                BYTX = LENGTHC ( KX$X29_OTPBFR )  + 1 ;
      299    13145    2             END;
      300    13146    1          ELSE
      301    13147    2             DO;         /* need to figure out the exact bytsiz */
      302    13148    2                KVBSIZ = KX_X29MSGTYP_BYTSIZ ( X29MSGTYP );
      303    13149    2                IF KVBSIZ = 99   /* it's a param_ind */
PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:29   
      304    13150    2                   THEN
      305    13151    3                      DO;
      306    13152    3                         KVBSIZ = 1;
      307    13153    4                         DO I = 0 TO %KX_X3PRMX_HI#;
      308    13154    4                            IF KX$VC.X3_PRM_BIT(I) OR KX$VC.X3_PRM_ALL
      309    13155    4                               THEN
      310    13156    4                                  KVBSIZ = KVBSIZ + 2;
      311    13157    4                         END;
      312    13158    3                      END;
      313    13159    2                KVBSIZ = KVBSIZ + LENGTHC(KX$VC_OTPBFR);
      314    13160    2                WRDSIZ2N = (KVBSIZ+1)/2;
      315    13161    2                CALL KVB$GET2NSYS ( WRDSIZ2N, DAT$ ) ALTRET ( L_NOMEM );
      316    13162    2                KX$VC_OTPBFR = '0'B;
      317    13163    2                KX$VC_OTPBFR.Q = '1'B;
      318    13164    2                KX$VC_OTPBFR.RLSWRDSIZ = WRDSIZ2N;
      319    13165    2                KX$VC_OTPBFR.BFRBYTSIZ = KVBSIZ;
      320    13166    2                KX$VC.OTPBFRBYTCNT = KX$VC.OTPBFRBYTCNT + KVBSIZ;
      321    13167    2                BYTX = LENGTHC(KX$VC_OTPBFR) + 1;
      322    13168    2             END;
      323    13169    1       KX_STATS_X29.KHSTT.OTPBFRBYTUTL = KX_STATS_X29.KHSTT.OTPBFRBYTUTL + KVBSIZ;
      324    13170    1       BYT_ARY ( BYTX - 1 ) = KX_X29MSGCOD ( X29MSGTYP );
      325    13171    2       DO CASE ( X29MSGTYP );
      326    13172
      327    13173    2          CASE ( %KX_X29MSGTYP_PRMIND# );
      328    13174
      329    13175    3             DO I = 0 TO %KX_X3PRMX_HI#;
      330    13176    3                IF ( KX$VC.X3_PRM_BIT(I) OR KX$VC.X3_PRM_ALL )
      331    13177    3                   THEN
      332    13178    4                      DO;
      333    13179    4                         KX$VC.X3_PRM_BIT(I) = '0'B;
      334    13180    4                         BYT_ARY(BYTX) = I + 1;
      335    13181    4                         BYTX = BYTX + 1;
      336    13182    4                         BYT_ARY(BYTX) = KX$VC.X3PRM(I);
      337    13183    4                         BYTX = BYTX + 1;
      338    13184    4                      END;
      339    13185    3             END;
      340    13186    2             KX$VC.X3_PRM_ALL = '0'B;
PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:30   
      341    13187
      342    13188    2          CASE ( %KX_X29MSGTYP_ERRPAD# );
      343    13189
      344    13190    2             BYT_ARY ( LENGTHC(KX$VC_OTPBFR)+1 ) = KX$VC.ERRPADTYP;
      345    13191    2             BYT_ARY ( LENGTHC(KX$VC_OTPBFR)+2 ) = KX$VC.ERRPADCOD;
      346    13192
      347    13193    2          CASE ( %KX_X29MSGTYP_BRKIND# );
      348    13194
      349    13195    2             BYT_ARY ( LENGTHC(KX$VC_OTPBFR)+1 ) = %KX_X3PRMX_DSCOTP# + 1;
      350    13196    2             BYT_ARY ( LENGTHC(KX$VC_OTPBFR)+2 ) = KX$VC.X3PRM ( %KX_X3PRMX_DSCOTP# );
      351    13197    2          CASE ( %KX_X29MSGTYP_INV2CLR# );
      352    13198
      353    13199        /*
      354    13200           This is a one byte (the message type) message. Nothing to do.
      355    13201        */
      356    13202
      357    13203    2          CASE ( %KX_X29MSGTYP_REDX3# );
      358    13204
      359    13205    3             DO I = 0 TO %KX_X3PRMX_HI# ;
      360    13206    3                BYT_ARY ( BYTX ) = I + 1 ;
      361    13207    3                BYTX = BYTX + 1;
      362    13208    3                BYT_ARY ( BYTX ) = 0;
      363    13209    3                BYTX = BYTX + 1;
      364    13210    3             END;
      365    13211    2          CASE ( %KX_X29MSGTYP_RSMOTP# );
      366    13212    2             BYT_ARY ( LENGTHC(KX$X29_OTPBFR)+1 ) = %KX_X3PRMX_DSCOTP# + 1;
      367    13213    2             BYT_ARY ( LENGTHC(KX$X29_OTPBFR)+2 ) = 0;
      368    13214    2             KX$X29.X3PRM ( %KX_X3PRMX_DSCOTP# ) = 0;
      369    13215    2          CASE ( %KX_X29MSGTYP_1ST_SETREDX3# );
      370    13216    2             ADDR(BYT_ARY ( LENGTHC(KX$X29_OTPBFR)+4 ))->UBNBSD = '0'B ;
      371    13217    2             BYT_ARY ( LENGTHC(KX$X29_OTPBFR)+1 ) = %KX_X3PRMX_ACTBRK# + 1;
      372    13218    2             BYT_ARY ( LENGTHC(KX$X29_OTPBFR)+2 ) = 21;
      373    13219    2             BYT_ARY ( LENGTHC(KX$X29_OTPBFR)+3 ) = %KX_X3PRMX_CRPADD# + 1;
      374    13220    2             BYT_ARY ( LENGTHC(KX$X29_OTPBFR)+5 ) = %KX_X3PRMX_LFPADD# + 1;
      375    13221    2             BYT_ARY ( LENGTHC(KX$X29_OTPBFR)+7 ) = %KX_X3PRMX_LFAFTCR# + 1;
      376    13222    2             BYT_ARY ( LENGTHC(KX$X29_OTPBFR)+9 ) = %KX_X3PRMX_DATFRWSGN# + 1;
      377    13223    2             BYT_ARY ( LENGTHC(KX$X29_OTPBFR)+11 ) = %KX_X3PRMX_LINFLD# + 1;
PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:31   
      378    13224    2             BYT_ARY ( LENGTHC(KX$X29_OTPBFR)+13 ) = %KX_X3PRMX_EDT# + 1;
      379    13225    2             BYT_ARY ( LENGTHC(KX$X29_OTPBFR)+10 ) = 127;
      380    13226    2             KX$X29.X3PRM ( %KX_X3PRMX_ACTBRK# ) = 21;
      381    13227    2             KX$X29.X3PRM ( %KX_X3PRMX_CRPADD# ) = 0;
      382    13228    2             KX$X29.X3PRM ( %KX_X3PRMX_LFPADD# ) = 0;
      383    13229    2             KX$X29.X3PRM ( %KX_X3PRMX_LFAFTCR# ) = 0;
      384    13230    2             KX$X29.X3PRM ( %KX_X3PRMX_DATFRWSGN# ) = 127;
      385    13231    2             KX$X29.X3PRM ( %KX_X3PRMX_LINFLD# ) = 0;
      386    13232    2             KX$X29.X3PRM ( %KX_X3PRMX_EDT# ) = 0;
      387    13233    2          CASE ( %KX_X29MSGTYP_SETREDX3# );
      388    13234    3             DO I = 0 TO %KX_X3PRMX_HI#;
      389    13235    3                IF I ~= %KX_X3PRMX_LINSPD#
      390    13236    3                   THEN
      391    13237    4                      DO;
      392    13238    4                         BYT_ARY ( BYTX ) = I + 1;
      393    13239    4                         BYTX = BYTX + 1;
      394    13240    4                         BYT_ARY ( BYTX ) = KX$X29.X3PRM ( I );
      395    13241    4                         BYTX = BYTX + 1;
      396    13242    4                      END;
      397    13243    3             END;
      398    13244    2          CASE ( %KX_X29MSGTYP_HLTMRK# );
      399    13245    2             BYT_ARY ( LENGTHC(KX$X29_OTPBFR)+1 ) = %KX_X3PRMX_HLTMRK#;
      400    13246    2             BYT_ARY ( LENGTHC(KX$X29_OTPBFR)+2 ) = 0;
      401    13247    2          CASE ( ELSE );
      402    13248        /*S* SCREECH_CODE: KXX-S$KX_UNKSNDX29RQS#
      403    13249             MESSAGE: The X.29 message requested to be sent is bad.
      404    13250        */
      405    13251    2   SCREECH:  CALL KHD$SCREECH ( Y_UNKSNDX29RQS );
      406    13252    2       END; /* DO CASE ... */
      407    13253        /*
      408    13254           Update the output buffer chain.
      409    13255        */
      410    13256    1       IF ( KX$X29.SND.TAL$ = ADDR(NIL) )
      411    13257    1          THEN
      412    13258    2             DO;
      413    13259    2                KX$X29.SND.HED$ = DAT$;
      414    13260    2                KX$X29.SND.NXTLOD$ = DAT$;
PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:32   
      415    13261    2             END;
      416    13262    1          ELSE
      417    13263    2             DO;
      418    13264    2                KX$X29.SND.TAL$->KX$X29_OTPBFR.LNK$ = DAT$;
      419    13265    2                IF ( KX$X29.SND.NXTLOD$ = ADDR(NIL) )
      420    13266    2                   THEN
      421    13267    2                      KX$X29.SND.NXTLOD$ = DAT$;
      422    13268    2             END;
      423    13269    1       KX$X29.SND.TAL$ = DAT$;
      424    13270    1       KX$X29_OTPBFR.LNK$ = ADDR(NIL);
      425    13271        /*
      426    13272           Tell L3 that we want to send packets.
      427    13273        */
      428    13274    1       CALL_L3.CAL$ = ADDR(KX$X29ORX28);
      429    13275    1       CALL_L3.RCV$ = KX$X29.L3$;
      430    13276    1       CALL KXP$PACKET ( CALL_L3 ) WHENALTRETURN
      431    13277    2             DO;
      432    13278    2                CALL KHD$SCREECH ( CALL_L3.PRM1$->B$SCODE );
      433    13279    2             END;
      434    13280    1   END KXX$SNDX29MSG;
      435    13281
      436    13282        %EOD;

PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:33   
--  Include file information  --

   KL_MACRO_C.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   KH_MACRO_C.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KL_CONTROL_C.:E05TOU  is referenced.
   KV_ASCCHR_E.:E05TOU  is referenced.
   KV$GLBCTX.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KA_GLB.:E05TOU  is referenced.
   KA_GLB_E.:E05TOU  is referenced.
   KXX_MACROS_M.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   KX_SCODE_C.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure KXX$SNDX29MSG.

   Procedure KXX$SNDX29MSG requires 665 words for executable code.
   Procedure KXX$SNDX29MSG requires 23 words of local(AUTO) storage.

PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:34   

 Object Unit name= KXX$SNDX29MSG                              File name= KXX$MSC.:E05TOU
 UTS= JUL 30 '97 02:33:10.08 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS     21     15  KXX$SNDX29MSG
    1   Data  even  none    16     10  KXX$SNDX29MSG
    2   Proc  even  none   665    299  KXX$SNDX29MSG
    3  RoData even  none     6      6  KXX$SNDX29MSG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        2  KXX$SNDX29MSG

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 KXX$X29
 yes     yes           Std       1 KXV$VCVDH
 yes     yes           Std       1 KXX$TRNOTP
 yes     yes           Std       2 KVB$GET2NSYS
 yes     yes           Std       1 KXP$PACKET
         yes           Std       1 KHD$SCREECH
                       nStd      0 X6A_AUTO_2
                       nStd      0 X6A_ARET
                       nStd      0 X6A_AALT
PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:35   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KX_STATS_X29                          KA_OTPUN_BLKLMT                       KA_OTPBLKLMT
     KH_CTLTBL$                       r    G$ROS$
PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:36   


      108        1        /*T***********************************************************/
      109        2        /*T*                                                         */
      110        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      111        4        /*T*                                                         */
      112        5        /*T***********************************************************/
      113        6        %EJECT;
PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:37   
      114        7
      115        8        /*P*
      116        9             NAME: KXX$SNDX29MSG
      117       10             PURPOSE: Send the requested X.29 message.
      118       11        */
      119       12        /*X*  PLM = 4, IND=3, CTI=3, DCI=6, IAD=0, DTI=6, AND=Y, CSI=3, THI=3, STI=3, DMC=Y
                12         */
      120       13        KXX$SNDX29MSG: PROC ( X29MSGTYP, KX$X29ORX28 ) ALTRET;

     13   2 000000  D380 0000 0000  xent KXX$SNDX29MSG   LNJ,B5   X6A_AUTO_2
          2 000003       0017 0002                       DC       23,2

      121       14
      122       15        %EJECT;
PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:38   
      123       16
      124       17        /*****************************************************************
      125       18        *                                                                *
      126       19        *                           Include files                        *
      127       20        *                                                                *
      128       21        *****************************************************************/
      129       22
      130       23        %INCLUDE LCP_6;
      131     4302        %INCLUDE KX_EQUS_E;
      132     4741        %INCLUDE KX_SCODE_C;
      133     4807        %INCLUDE KX_MACROS_M;
      134     5578        %INCLUDE KXX_MACROS_M;
      135     5920        %INCLUDE KA_GLB_E;
      136     5998        %KA_HLTOTP_E;
      137     6007        %INCLUDE KA_GLB;
      138     6084        %INCLUDE KV$GLB;
      139     6503        %INCLUDE KV$GLBCTX;
      140     6948        %INCLUDE KV_ASCCHR_E;
      141     7085        %INCLUDE KL_CONTROL_C;
      142     7465        %INCLUDE KV_GLBCNS_E;
      143     7806        %KV_USR_EVT_ID_E;
      144     7826        %INCLUDE KH_MACRO_C;
      145     8569        %INCLUDE KH$STT;
      146     8599        %INCLUDE KL_MACRO_C;
      147    11951
      148    11952
      149    11953        /*****************************************************************
      150    11954        *                                                                *
      151    11955        *                           Based                                *
      152    11956        *                                                                *
      153    11957        *****************************************************************/
      154    11958
      155    11959        %KX$X29_OTPBFR ( STCLASS = "BASED ( DAT$ )" );
      156    11982        %KX$VC_OTPBFR ( STCLASS = "BASED(DAT$)" );
      157    12009    1   DCL BYT_ARY(0:2000) UBIN BYTE CALIGNED BASED ( DAT$ );
      158    12010        %KV$VDI ( STCLASS = " BASED ( VDI$ ) " );
      159    12081    1   DCL BASED_WORD UBIN WORD BASED;
PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:39   
      160    12082        %KH$CTLTBL ( FPTN = KH_CTLTBL, STCLASS = "BASED ( KH_CTLTBL$ )" );
      161    12294    1   DCL UBNBSD(0:10) UBIN BYTE CALIGNED BASED ;
      162    12295        %VLP_SCODE ( STCLASS = BASED, FPTN = B$SCODE );
      163    12356
      164    12357        /*****************************************************************
      165    12358        *                                                                *
      166    12359        *                           Constant/Symref/Static               *
      167    12360        *                                                                *
      168    12361        *****************************************************************/
      169    12362
      170    12363        /*
      171    12364           Note that the following array has to be aligned with the equates
      172    12365           of KX_X29MSGTYP_x.
      173    12366        */
      174    12367    1   DCL KX_X29MSGTYP_BYTSIZ(0:%KX_X29MSGTYP_HI#) UBIN BYTE CALIGNED
      175    12368    1     CONSTANT INIT (99,1,0,3,%(KX_X3PRMX_HI#*2+3),3,35,3,15,3);
             12368              /* 99 means variable size */
      176    12369        /*
      177    12370           Since we may be called by x.28 or x.29 to send messages, let's
      178    12371           use this array to validate the caller.
      179    12372        */
      180    12373    1   DCL KX_X29MSGTYP_VAL(0:%KX_X29MSGTYP_HI#) UBIN BYTE CALIGNED
      181    12374    1     CONSTANT INIT ( %KXX_TYP_X28#,%KXX_TYP_X29#*2,
      182    12375    1                     %KXX_TYP_X28#,%KXX_TYP_X29#,
      183    12376    1                     %KXX_TYP_X28#,%KXX_TYP_X29#*0 );
      184    12377    1   DCL KX_X29MSGCOD(0:%KX_X29MSGTYP_HI#) UBIN BYTE CALIGNED
      185    12378    1     CONSTANT INIT (0,1,2,3,4,5,6,2,6,4);
      186    12379        %KX_STATS_X29;
      187    12720        %KA_MSC;
      188    12742    1   DCL KH_CTLTBL$ PTR SYMREF;
      189    12743
      190    12744        %VLP_SCODE (FPTN=Y_NO_GET,STCLASS=CONSTANT,FCG=KX,MID=X,ERR#=%S$KX_NO_GET#);
      191    12805        %VLP_SCODE (FPTN=Y_UNKSNDX29RQS,STCLASS=CONSTANT,FCG=KX,MID=X,ERR#=
             12805            %S$KX_UNKSNDX29RQS#);
      192    12866
      193    12867        %FPT_X25 ( FPTN = CALL_L3, STCLASS = STATIC, EVN = %KX_P_EV_DATAVL# );
      194    12911        /*****************************************************************
PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:40   
      195    12912        *                                                                *
      196    12913        *                           Auto                                 *
      197    12914        *                                                                *
      198    12915        *****************************************************************/
      199    12916
      200    12917    1   DCL DAT$ PTR;
      201    12918    1   DCL KX$X29ORX28 CHAR(DUMMY) ALIGNED;
      202    12919    1   DCL DUMMY REDEF KX$X29ORX28 UBIN;
      203    12920        %KX$X29 ( STCLASS = REDEF KX$X29ORX28 );
      204    12960        %KX$VC ( STCLASS = REDEF KX$X29ORX28 );
      205    13051    1   DCL X29MSGTYP UBIN;
      206    13052    1   DCL I UBIN;
      207    13053    1   DCL BYTX UBIN;
      208    13054    1   DCL LEVEL UBIN;
      209    13055    1   DCL KVBSIZ UBIN;
      210    13056    1   DCL VDI$ PTR;
      211    13057    1   DCL CNC_TYP UBIN AUTO;
      212    13058    1   DCL WRDSIZ2N UBIN;
      213    13059
      214    13060        /*****************************************************************
      215    13061        *                                                                *
      216    13062        *                           External Procs                       *
      217    13063        *                                                                *
      218    13064        *****************************************************************/
      219    13065
      220    13066    1   DCL KXX$TRNOTP ENTRY (1) ALTRET;
      221    13067    1   DCL KXV$VCVDH ENTRY (1) ALTRET;
      222    13068    1   DCL KXX$X29 ENTRY (1);
      223    13069    1   DCL KHD$SCREECH ENTRY (1);
      224    13070    1   DCL KVB$GETSYS ENTRY (2) ALTRET;
      225    13071    1   DCL KVB$GET2NSYS ENTRY(2) ALTRET;
      226    13072    1   DCL KHI$DISABLE ENTRY (1);
      227    13073    1   DCL KHI$ENABLE ENTRY;
      228    13074    1   DCL KXP$PACKET ENTRY (1) ALTRET;
      229    13075        %EJECT;
PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:41   
      230    13076
      231    13077
      232    13078        /*****************************************************************
      233    13079        *                                                                *
      234    13080        *                           Procedure                            *
      235    13081        *                                                                *
      236    13082        *****************************************************************/
      237    13083
      238    13084    1       IF KX$X29.L3$ = ADDR(NIL)

  13084   2 000005  ECC7 0006                            LDB,B6   @KX$X29ORX28,AUTO
          2 000007  8DC6 0006                            CMN      6,B6
          2 000009  0981 0004                            BNE      s:13087,PREL

      239    13085    1          THEN
      240    13086    1             RETURN;

  13086   2 00000B  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      241    13087    1       IF KX$X29.SBR$ = ENTADDR(KXX$X29)

  13087   2 00000E  DB80 0000 0000  xent                 LAB,B5   KXX$X29
          2 000011  CC86                                 LDB,B4   ,B6
          2 000012  DFC7 0012                            STB,B5   WRDSIZ2N+1,AUTO
          2 000014  CDC7 0012                            CMB,B4   WRDSIZ2N+1,AUTO
          2 000016  0981 0010                            BNE      s:13096,PREL

      242    13088    1          THEN
      243    13089    2             DO;

      244    13090    2                IF KX$X29.STATE > %KX_X29_ST_NRM#

  13090   2 000018  E846 0018                            LDR,R6   24,B6
          2 00001A  E570 00FF                            AND,R6   255,IMO
          2 00001C  6D04                                 CMV,R6   4
          2 00001D  0381 0004                            BLE      s:13093,PREL

PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:42   
      245    13091    2                   THEN
      246    13092    2                      RETURN;

  13092   2 00001F  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      247    13093    2                CNC_TYP = %KXX_TYP_X29#;

  13093   2 000022  5C01                                 LDV,R5   1
          2 000023  DF47 0010                            STR,R5   CNC_TYP,AUTO

      248    13094    2             END;

  13094   2 000025  0F81 001D                            B        s:13109,PREL

      249    13095    1          ELSE
      250    13096    1             IF KX$VC.SBR$ = ENTADDR(KXV$VCVDH) AND KX$VC.X28

  13096   2 000027  CB80 0000 0000  xent                 LAB,B4   KXV$VCVDH
          2 00002A  BC86                                 LDB,B3   ,B6
          2 00002B  CFC7 0012                            STB,B4   WRDSIZ2N+1,AUTO
          2 00002D  BDC7 0012                            CMB,B3   WRDSIZ2N+1,AUTO
          2 00002F  0981 021E                            BNE      s:13247,PREL
          2 000031  82C6 0016                            LB,'0010'X        22,B6
          2 000033       0010
          2 000034  0581 0219                            BBF      s:13247,PREL

      251    13097    1                THEN
      252    13098    2                   DO;

      253    13099    2                      IF KX$VC.STATE > %KX_VC_ST_NRM#

  13099   2 000036  E2C6 0033                            LLH,R6   51,B6
          2 000038  6D06                                 CMV,R6   6
          2 000039  0381 0004                            BLE      s:13102,PREL

      254    13100    2                         THEN
      255    13101    2                            RETURN;
PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:43   

  13101   2 00003B  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      256    13102    2                      CNC_TYP = %KXX_TYP_X28#;

  13102   2 00003E  5C04                                 LDV,R5   4
          2 00003F  DF47 0010                            STR,R5   CNC_TYP,AUTO

      257    13103    2                   END;

  13103   2 000041  0F81 0001                            B        s:13109,PREL

      258    13104    1                ELSE
      259    13105    1                   GOTO SCREECH;
      260    13106        /*
      261    13107           Validate this request.
      262    13108        */
      263    13109    1       IF KX_X29MSGTYP_BYTSIZ ( X29MSGTYP ) = 0 OR

  13109   2 000043  DCC7 0004                            LDB,B5   @X29MSGTYP,AUTO
          2 000045  B805                                 LDR,R3   ,B5
          2 000046  E2B0 0000 0000  00                   LLH,R6   KX_X29MSGTYP_BYTSIZ,R3
          2 000049  6901 0204                            BEZ,R6   s:13247,PREL
          2 00004B  C2B0 0000 0005  00                   LLH,R4   KX_X29MSGTYP_VAL,R3
          2 00004E  C955                                 CMR,R4   R5
          2 00004F  0981 01FE                            BNE      s:13247,PREL

      264    13110    1          KX_X29MSGTYP_VAL(X29MSGTYP) ~= CNC_TYP
      265    13111    1          THEN
      266    13112    1             GOTO SCREECH;
      267    13113        /*
      268    13114           If the output buffer byte count is excessive, assume we're out
      269    13115           of control and altreturn.
      270    13116        */
      271    13117    1       VDI$ = KX$X29.VDI$;

  13117   2 000051  CCC6 0002                            LDB,B4   2,B6
PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:44   
          2 000053  CFC7 000E                            STB,B4   VDI$,AUTO

      272    13118    1       IF CNC_TYP = %KXX_TYP_X29#

  13118   2 000055  5D01                                 CMV,R5   1
          2 000056  0981 0071                            BNE      s:13148,PREL

      273    13119    1          THEN
      274    13120    2             DO;

      275    13121    2                IF VDI$ ~= ADDR(NIL)

  13121   2 000058  8DC7 000E                            CMN      VDI$,AUTO
          2 00005A  0901 001F                            BE       s:13134,PREL

      276    13122    2                   THEN
      277    13123    3                      DO;

      278    13124    3                         IF ( KX$X29.OTPBFRBYTCNT > KA_OTPBLKLMT(KV$VDI.LINSPD) * 2 -

  13124   2 00005C  A2C4 001E                            LLH,R2   30,B4
          2 00005E  9820 0000 0000  xsym                 LDR,R1   KA_OTPBLKLMT,R2
          2 000061  1001                                 SOL,R1   1
          2 000062  8251                                 NEG      R1
          2 000063  9A20 0000 0000  xsym                 ADD,R1   KA_OTPUN_BLKLMT,R2
          2 000066  8251                                 NEG      R1
          2 000067  9A70 1388                            ADD,R1   5000,IMO
          2 000069  1801 0005                            BLZ,R1   s:13127,PREL
          2 00006B  9946 0012                            CMR,R1   18,B6
          2 00006D  0281 0004                            BGE      s:13132,PREL

      279    13125    3                            KA_OTPUN_BLKLMT(KV$VDI.LINSPD) + 5000 )
      280    13126    3                            THEN
      281    13127    3                               ALTRETURN;

  13127   2 00006F  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:45   
      282    13128        /*
      283    13129           Truncate the current buffer and get a new buffer for the
      284    13130           X.29 message.
      285    13131        */
      286    13132    3                         CALL KXX$TRNOTP ( KV$VDI );

  13132   2 000072  BBC7 000E                            LAB,B3   VDI$,AUTO
          2 000074  CBF0 0100                            LAB,B4   256,IMO
          2 000076  E380 0000 0000  xent                 LNJ,B6   KXX$TRNOTP
          2 000079       0001                            DC       s:13134,PREL

      287    13133    3                      END;

      288    13134    2                KVBSIZ = 64;

  13134   2 00007A  6C40                                 LDV,R6   64
          2 00007B  EF47 000D                            STR,R6   KVBSIZ,AUTO

      289    13135    2                CALL KVB$GET2NSYS ( KVBSIZ/2, DAT$ ) WHENALTRETURN

  13135   2 00007D  6041                                 SOR,R6   1
          2 00007E  EF47 0012                            STR,R6   WRDSIZ2N+1,AUTO
          2 000080  EBC7 0008                            LAB,B6   DAT$,AUTO
          2 000082  EFC7 0015                            STB,B6   WRDSIZ2N+4,AUTO
          2 000084  DBC7 0012                            LAB,B5   WRDSIZ2N+1,AUTO
          2 000086  DFC7 0013                            STB,B5   WRDSIZ2N+2,AUTO
          2 000088  BBC7 0013                            LAB,B3   WRDSIZ2N+2,AUTO
          2 00008A  CBF0 0200                            LAB,B4   512,IMO
          2 00008C  E380 0000 0000  xent                 LNJ,B6   KVB$GET2NSYS
          2 00008F       0003                            DC       s:13136,PREL
          2 000090  0F81 000A                            B        s:13139,PREL

      290    13136    3                      DO;

      291    13137    3   L_NOMEM:              CALL KHD$SCREECH ( Y_NO_GET );

  13137   2 000092  BB80 0000 0000  03   L_NOMEM         LAB,B3   0
PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:46   
          2 000095  CBF0 0100                            LAB,B4   256,IMO
          2 000097  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          2 00009A       0001                            DC       s:13139,PREL

      292    13138    3                      END;

      293    13139    2                KX$X29_OTPBFR = '0'B;

  13139   2 00009B  ECC7 0008                            LDB,B6   DAT$,AUTO
          2 00009D  5C08                                 LDV,R5   8
          2 00009E  0021                                 ALR      ;
          2 00009F       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          2 0000A1       4006 0000                                ALPHANUM(0,B6,,R5,FILL)

      294    13140    2                KX$X29_OTPBFR.Q = '1'B;

  13140   2 0000A3  437F                                 CSYNC    s:13139+7,SPREL
          2 0000A4  ECC7 0008                            LDB,B6   DAT$,AUTO
          2 0000A6  8946 0003                            LBT,'0080'X       3,B6
          2 0000A8       0080

      295    13141    2                KX$X29_OTPBFR.BYTCNT = KX_X29MSGTYP_BYTSIZ ( X29MSGTYP );

  13141   2 0000A9  ECC7 0004                            LDB,B6   @X29MSGTYP,AUTO
          2 0000AB  B806                                 LDR,R3   ,B6
          2 0000AC  E2B0 0000 0000  00                   LLH,R6   KX_X29MSGTYP_BYTSIZ,R3
          2 0000AF  DCC7 0008                            LDB,B5   DAT$,AUTO
          2 0000B1  EAC5 0002                            SRM,R6,'03FF'X    2,B5
          2 0000B3       03FF

      296    13142    2                KX$X29_OTPBFR.BYTSIZLOG2 = 6;

  13142   2 0000B4  E870 1800                            LDR,R6   6144,IMO
          2 0000B6  DCC7 0008                            LDB,B5   DAT$,AUTO
          2 0000B8  EAC5 0002                            SRM,R6,'3C00'X    2,B5
          2 0000BA       3C00

PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:47   
      297    13143    2                KX$X29.OTPBFRBYTCNT = KX$X29.OTPBFRBYTCNT + KVBSIZ;

  13143   2 0000BB  DCC7 0006                            LDB,B5   @KX$X29ORX28,AUTO
          2 0000BD  C845 0012                            LDR,R4   18,B5
          2 0000BF  CA47 000D                            ADD,R4   KVBSIZ,AUTO
          2 0000C1  CF45 0012                            STR,R4   18,B5

      298    13144    2                BYTX = LENGTHC ( KX$X29_OTPBFR )  + 1 ;

  13144   2 0000C3  3C09                                 LDV,R3   9
          2 0000C4  BF47 000B                            STR,R3   BYTX,AUTO

      299    13145    2             END;

  13145   2 0000C6  0F81 0061                            B        s:13169,PREL

      300    13146    1          ELSE
      301    13147    2             DO;         /* need to figure out the exact bytsiz */

      302    13148    2                KVBSIZ = KX_X29MSGTYP_BYTSIZ ( X29MSGTYP );

  13148   2 0000C8  EF47 000D                            STR,R6   KVBSIZ,AUTO

      303    13149    2                IF KVBSIZ = 99   /* it's a param_ind */

  13149   2 0000CA  6D63                                 CMV,R6   99
          2 0000CB  0981 001F                            BNE      s:13159,PREL

      304    13150    2                   THEN
      305    13151    3                      DO;

      306    13152    3                         KVBSIZ = 1;

  13152   2 0000CD  6C01                                 LDV,R6   1
          2 0000CE  EF47 000D                            STR,R6   KVBSIZ,AUTO

      307    13153    4                         DO I = 0 TO %KX_X3PRMX_HI#;
PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:48   

  13153   2 0000D0  8747 000A                            CL       I,AUTO

      308    13154    4                            IF KX$VC.X3_PRM_BIT(I) OR KX$VC.X3_PRM_ALL

  13154   2 0000D2  ECC7 0006                            LDB,B6   @KX$X29ORX28,AUTO
          2 0000D4  DBC6 0017                            LAB,B5   23,B6
          2 0000D6  B847 000A                            LDR,R3   I,AUTO
          2 0000D8  82B5                                 LB       ,B5,R3
          2 0000D9  0501 0006                            BBT      s:13156,PREL
          2 0000DB  82C6 0016                            LB,'0002'X        22,B6
          2 0000DD       0002
          2 0000DE  0581 0006                            BBF      s:13157,PREL

      309    13155    4                               THEN
      310    13156    4                                  KVBSIZ = KVBSIZ + 2;

  13156   2 0000E0  E847 000D                            LDR,R6   KVBSIZ,AUTO
          2 0000E2  6E02                                 ADV,R6   2
          2 0000E3  EF47 000D                            STR,R6   KVBSIZ,AUTO

      311    13157    4                         END;

  13157   2 0000E5  8AC7 000A                            INC      I,AUTO
          2 0000E7  E847 000A                            LDR,R6   I,AUTO
          2 0000E9  6D15                                 CMV,R6   21
          2 0000EA  03E8                                 BLE      s:13154,SPREL

      312    13158    3                      END;

      313    13159    2                KVBSIZ = KVBSIZ + LENGTHC(KX$VC_OTPBFR);

  13159   2 0000EB  E847 000D                            LDR,R6   KVBSIZ,AUTO
          2 0000ED  6E0A                                 ADV,R6   10
          2 0000EE  EF47 000D                            STR,R6   KVBSIZ,AUTO

      314    13160    2                WRDSIZ2N = (KVBSIZ+1)/2;
PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:49   

  13160   2 0000F0  6E01                                 ADV,R6   1
          2 0000F1  6041                                 SOR,R6   1
          2 0000F2  EF47 0011                            STR,R6   WRDSIZ2N,AUTO

      315    13161    2                CALL KVB$GET2NSYS ( WRDSIZ2N, DAT$ ) ALTRET ( L_NOMEM );

  13161   2 0000F4  DBC7 0008                            LAB,B5   DAT$,AUTO
          2 0000F6  DFC7 0014                            STB,B5   WRDSIZ2N+3,AUTO
          2 0000F8  CBC7 0011                            LAB,B4   WRDSIZ2N,AUTO
          2 0000FA  CFC7 0012                            STB,B4   WRDSIZ2N+1,AUTO
          2 0000FC  BBC7 0012                            LAB,B3   WRDSIZ2N+1,AUTO
          2 0000FE  CBF0 0200                            LAB,B4   512,IMO
          2 000100  E380 0000 0000  xent                 LNJ,B6   KVB$GET2NSYS
          2 000103       FF8F                            DC       s:13136,PREL

      316    13162    2                KX$VC_OTPBFR = '0'B;

  13162   2 000104  ECC7 0008                            LDB,B6   DAT$,AUTO
          2 000106  5C0A                                 LDV,R5   10
          2 000107  0021                                 ALR      ;
          2 000108       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          2 00010A       4006 0000                                ALPHANUM(0,B6,,R5,FILL)

      317    13163    2                KX$VC_OTPBFR.Q = '1'B;

  13163   2 00010C  437F                                 CSYNC    s:13162+7,SPREL
          2 00010D  ECC7 0008                            LDB,B6   DAT$,AUTO
          2 00010F  8946 0002                            LBT,'8000'X       2,B6
          2 000111       8000

      318    13164    2                KX$VC_OTPBFR.RLSWRDSIZ = WRDSIZ2N;

  13164   2 000112  ECC7 0008                            LDB,B6   DAT$,AUTO
          2 000114  E847 0011                            LDR,R6   WRDSIZ2N,AUTO
          2 000116  EF46 0004                            STR,R6   4,B6

PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:50   
      319    13165    2                KX$VC_OTPBFR.BFRBYTSIZ = KVBSIZ;

  13165   2 000118  E847 000D                            LDR,R6   KVBSIZ,AUTO
          2 00011A  ECC7 0008                            LDB,B6   DAT$,AUTO
          2 00011C  EAC6 0002                            SRM,R6,'3FFF'X    2,B6
          2 00011E       3FFF

      320    13166    2                KX$VC.OTPBFRBYTCNT = KX$VC.OTPBFRBYTCNT + KVBSIZ;

  13166   2 00011F  ECC7 0006                            LDB,B6   @KX$X29ORX28,AUTO
          2 000121  EA46 0014                            ADD,R6   20,B6
          2 000123  EF46 0014                            STR,R6   20,B6

      321    13167    2                BYTX = LENGTHC(KX$VC_OTPBFR) + 1;

  13167   2 000125  4C0B                                 LDV,R4   11
          2 000126  CF47 000B                            STR,R4   BYTX,AUTO

      322    13168    2             END;

      323    13169    1       KX_STATS_X29.KHSTT.OTPBFRBYTUTL = KX_STATS_X29.KHSTT.OTPBFRBYTUTL + KVBSIZ;

  13169   2 000128  F847 000D                            LDR,R7   KVBSIZ,AUTO
          2 00012A  6C00                                 LDV,R6   0
          2 00012B  8400 0000 001E  xsym                 AID      KX_STATS_X29+30
          2 00012E  8D00 0000 001E  xsym                 SDI      KX_STATS_X29+30

      324    13170    1       BYT_ARY ( BYTX - 1 ) = KX_X29MSGCOD ( X29MSGTYP );

  13170   2 000131  ECC7 0004                            LDB,B6   @X29MSGTYP,AUTO
          2 000133  B806                                 LDR,R3   ,B6
          2 000134  D2B0 0000 000A  00                   LLH,R5   KX_X29MSGCOD,R3
          2 000137  DCC7 0008                            LDB,B5   DAT$,AUTO
          2 000139  A847 000B                            LDR,R2   BYTX,AUTO
          2 00013B  2EFF                                 ADV,R2   -1
          2 00013C  D7A5                                 STH,R5   ,B5,R2

PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:51   
      325    13171    2       DO CASE ( X29MSGTYP );

  13171   2 00013D  B806                                 LDR,R3   ,B6
          2 00013E  3D0A                                 CMV,R3   10
          2 00013F  0281 010E                            BGE      s:13247,PREL
          2 000141  9830 0000 0147  02                   LDR,R1   s:13171+10,R3
          2 000144  8390 0000 0151  02                   JMP      s:13175,R1
          2 000147       0000                            DC       s:13175,PREL
          2 000148       0106                            DC       s:13256,PREL
          2 000149       00FD                            DC       s:13247,PREL
          2 00014A       0042                            DC       s:13195,PREL
          2 00014B       0052                            DC       s:13205,PREL
          2 00014C       0031                            DC       s:13190,PREL
          2 00014D       00CD                            DC       s:13234,PREL
          2 00014E       006D                            DC       s:13212,PREL
          2 00014F       007E                            DC       s:13216,PREL
          2 000150       00F1                            DC       s:13245,PREL

      326    13172
      327    13173    2          CASE ( %KX_X29MSGTYP_PRMIND# );

      328    13174
      329    13175    3             DO I = 0 TO %KX_X3PRMX_HI#;

  13175   2 000151  8747 000A                            CL       I,AUTO

      330    13176    3                IF ( KX$VC.X3_PRM_BIT(I) OR KX$VC.X3_PRM_ALL )

  13176   2 000153  ECC7 0006                            LDB,B6   @KX$X29ORX28,AUTO
          2 000155  DBC6 0017                            LAB,B5   23,B6
          2 000157  B847 000A                            LDR,R3   I,AUTO
          2 000159  82B5                                 LB       ,B5,R3
          2 00015A  0501 0006                            BBT      s:13179,PREL
          2 00015C  82C6 0016                            LB,'0002'X        22,B6
          2 00015E       0002
          2 00015F  0581 0017                            BBF      s:13185,PREL

PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:52   
      331    13177    3                   THEN
      332    13178    4                      DO;

      333    13179    4                         KX$VC.X3_PRM_BIT(I) = '0'B;

  13179   2 000161  DBC6 0017                            LAB,B5   23,B6
          2 000163  8835                                 LBF      ,B5,R3

      334    13180    4                         BYT_ARY(BYTX) = I + 1;

  13180   2 000164  3E01                                 ADV,R3   1
          2 000165  DCC7 0008                            LDB,B5   DAT$,AUTO
          2 000167  A847 000B                            LDR,R2   BYTX,AUTO
          2 000169  B7A5                                 STH,R3   ,B5,R2

      335    13181    4                         BYTX = BYTX + 1;

  13181   2 00016A  8AC7 000B                            INC      BYTX,AUTO

      336    13182    4                         BYT_ARY(BYTX) = KX$VC.X3PRM(I);

  13182   2 00016C  A847 000A                            LDR,R2   I,AUTO
          2 00016E  2E31                                 ADV,R2   49
          2 00016F  E2A6                                 LLH,R6   ,B6,R2
          2 000170  DCC7 0008                            LDB,B5   DAT$,AUTO
          2 000172  9847 000B                            LDR,R1   BYTX,AUTO
          2 000174  E795                                 STH,R6   ,B5,R1

      337    13183    4                         BYTX = BYTX + 1;

  13183   2 000175  8AC7 000B                            INC      BYTX,AUTO

      338    13184    4                      END;

      339    13185    3             END;

  13185   2 000177  8AC7 000A                            INC      I,AUTO
PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:53   
          2 000179  E847 000A                            LDR,R6   I,AUTO
          2 00017B  6D15                                 CMV,R6   21
          2 00017C  03D7                                 BLE      s:13176,SPREL

      340    13186    2             KX$VC.X3_PRM_ALL = '0'B;

  13186   2 00017D  8846 0016                            LBF,'0002'X       22,B6
  13186   2 00017F       0002
          2 000180  0F81 00D6                            B        s:13256,PREL

      341    13187
      342    13188    2          CASE ( %KX_X29MSGTYP_ERRPAD# );

      343    13189
      344    13190    2             BYT_ARY ( LENGTHC(KX$VC_OTPBFR)+1 ) = KX$VC.ERRPADTYP;

  13190   2 000182  DCC7 0006                            LDB,B5   @KX$X29ORX28,AUTO
          2 000184  CCC7 0008                            LDB,B4   DAT$,AUTO
          2 000186  E845 0023                            LDR,R6   35,B5
          2 000188  EAC4 0005                            SRM,R6,'00FF'X    5,B4
          2 00018A       00FF

      345    13191    2             BYT_ARY ( LENGTHC(KX$VC_OTPBFR)+2 ) = KX$VC.ERRPADCOD;

  13191   2 00018B  E2C5 0024                            LLH,R6   36,B5
          2 00018D  CCC7 0008                            LDB,B4   DAT$,AUTO
          2 00018F  E7C4 0006                            STH,R6   6,B4
          2 000191  0F81 00C5                            B        s:13256,PREL

      346    13192
      347    13193    2          CASE ( %KX_X29MSGTYP_BRKIND# );

      348    13194
      349    13195    2             BYT_ARY ( LENGTHC(KX$VC_OTPBFR)+1 ) = %KX_X3PRMX_DSCOTP# + 1;

  13195   2 000193  6C08                                 LDV,R6   8
          2 000194  DCC7 0008                            LDB,B5   DAT$,AUTO
PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:54   
          2 000196  EAC5 0005                            SRM,R6,'00FF'X    5,B5
          2 000198       00FF

      350    13196    2             BYT_ARY ( LENGTHC(KX$VC_OTPBFR)+2 ) = KX$VC.X3PRM ( %KX_X3PRMX_DSCOTP# );

  13196   2 000199  DCC7 0006                            LDB,B5   @KX$X29ORX28,AUTO
          2 00019B  D2C5 001C                            LLH,R5   28,B5
          2 00019D  CCC7 0008                            LDB,B4   DAT$,AUTO
          2 00019F  D7C4 0006                            STH,R5   6,B4
          2 0001A1  0F81 00B5                            B        s:13256,PREL

      351    13197    2          CASE ( %KX_X29MSGTYP_INV2CLR# );

      352    13198
      353    13199        /*
      354    13200           This is a one byte (the message type) message. Nothing to do.
      355    13201        */
      356    13202
      357    13203    2          CASE ( %KX_X29MSGTYP_REDX3# );

      358    13204
      359    13205    3             DO I = 0 TO %KX_X3PRMX_HI# ;

  13205   2 0001A3  8747 000A                            CL       I,AUTO

      360    13206    3                BYT_ARY ( BYTX ) = I + 1 ;

  13206   2 0001A5  E847 000A                            LDR,R6   I,AUTO
          2 0001A7  6E01                                 ADV,R6   1
          2 0001A8  ECC7 0008                            LDB,B6   DAT$,AUTO
          2 0001AA  B847 000B                            LDR,R3   BYTX,AUTO
          2 0001AC  E7B6                                 STH,R6   ,B6,R3

      361    13207    3                BYTX = BYTX + 1;

  13207   2 0001AD  8AC7 000B                            INC      BYTX,AUTO

PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:55   
      362    13208    3                BYT_ARY ( BYTX ) = 0;

  13208   2 0001AF  ECC7 0008                            LDB,B6   DAT$,AUTO
          2 0001B1  B847 000B                            LDR,R3   BYTX,AUTO
          2 0001B3  87B6                                 CLH      ,B6,R3

      363    13209    3                BYTX = BYTX + 1;

  13209   2 0001B4  8AC7 000B                            INC      BYTX,AUTO

      364    13210    3             END;

  13210   2 0001B6  8AC7 000A                            INC      I,AUTO
          2 0001B8  E847 000A                            LDR,R6   I,AUTO
          2 0001BA  6D15                                 CMV,R6   21
          2 0001BB  03EA                                 BLE      s:13206,SPREL
          2 0001BC  0F81 009A                            B        s:13256,PREL

      365    13211    2          CASE ( %KX_X29MSGTYP_RSMOTP# );

      366    13212    2             BYT_ARY ( LENGTHC(KX$X29_OTPBFR)+1 ) = %KX_X3PRMX_DSCOTP# + 1;

  13212   2 0001BE  6C08                                 LDV,R6   8
          2 0001BF  DCC7 0008                            LDB,B5   DAT$,AUTO
          2 0001C1  EAC5 0004                            SRM,R6,'00FF'X    4,B5
          2 0001C3       00FF

      367    13213    2             BYT_ARY ( LENGTHC(KX$X29_OTPBFR)+2 ) = 0;

  13213   2 0001C4  DCC7 0008                            LDB,B5   DAT$,AUTO
          2 0001C6  87C5 0005                            CLH      5,B5

      368    13214    2             KX$X29.X3PRM ( %KX_X3PRMX_DSCOTP# ) = 0;

  13214   2 0001C8  DCC7 0006                            LDB,B5   @KX$X29ORX28,AUTO
          2 0001CA  8845 001E                            LBF,'00FF'X       30,B5
          2 0001CC       00FF
PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:56   
          2 0001CD  0F81 0089                            B        s:13256,PREL

      369    13215    2          CASE ( %KX_X29MSGTYP_1ST_SETREDX3# );

      370    13216    2             ADDR(BYT_ARY ( LENGTHC(KX$X29_OTPBFR)+4 ))->UBNBSD = '0'B ;

  13216   2 0001CF  DCC7 0008                            LDB,B5   DAT$,AUTO
          2 0001D1  5C0B                                 LDV,R5   11
          2 0001D2  0021                                 ALR      ;
          2 0001D3       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          2 0001D5       4005 0006                                ALPHANUM(6,B5,,R5,FILL)

      371    13217    2             BYT_ARY ( LENGTHC(KX$X29_OTPBFR)+1 ) = %KX_X3PRMX_ACTBRK# + 1;

  13217   2 0001D7  6C07                                 LDV,R6   7
          2 0001D8  437F                                 CSYNC    s:13217,SPREL
          2 0001D9  DCC7 0008                            LDB,B5   DAT$,AUTO
          2 0001DB  EAC5 0004                            SRM,R6,'00FF'X    4,B5
          2 0001DD       00FF

      372    13218    2             BYT_ARY ( LENGTHC(KX$X29_OTPBFR)+2 ) = 21;

  13218   2 0001DE  4C15                                 LDV,R4   21
          2 0001DF  DCC7 0008                            LDB,B5   DAT$,AUTO
          2 0001E1  C7C5 0005                            STH,R4   5,B5

      373    13219    2             BYT_ARY ( LENGTHC(KX$X29_OTPBFR)+3 ) = %KX_X3PRMX_CRPADD# + 1;

  13219   2 0001E3  3C09                                 LDV,R3   9
          2 0001E4  DCC7 0008                            LDB,B5   DAT$,AUTO
          2 0001E6  BAC5 0005                            SRM,R3,'00FF'X    5,B5
          2 0001E8       00FF

      374    13220    2             BYT_ARY ( LENGTHC(KX$X29_OTPBFR)+5 ) = %KX_X3PRMX_LFPADD# + 1;

  13220   2 0001E9  2C0E                                 LDV,R2   14
          2 0001EA  DCC7 0008                            LDB,B5   DAT$,AUTO
PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:57   
          2 0001EC  AAC5 0006                            SRM,R2,'00FF'X    6,B5
          2 0001EE       00FF

      375    13221    2             BYT_ARY ( LENGTHC(KX$X29_OTPBFR)+7 ) = %KX_X3PRMX_LFAFTCR# + 1;

  13221   2 0001EF  1C0D                                 LDV,R1   13
          2 0001F0  DCC7 0008                            LDB,B5   DAT$,AUTO
          2 0001F2  9AC5 0007                            SRM,R1,'00FF'X    7,B5
          2 0001F4       00FF

      376    13222    2             BYT_ARY ( LENGTHC(KX$X29_OTPBFR)+9 ) = %KX_X3PRMX_DATFRWSGN# + 1;

  13222   2 0001F5  6C03                                 LDV,R6   3
          2 0001F6  DCC7 0008                            LDB,B5   DAT$,AUTO
          2 0001F8  EAC5 0008                            SRM,R6,'00FF'X    8,B5
          2 0001FA       00FF

      377    13223    2             BYT_ARY ( LENGTHC(KX$X29_OTPBFR)+11 ) = %KX_X3PRMX_LINFLD# + 1;

  13223   2 0001FB  6C0A                                 LDV,R6   10
          2 0001FC  DCC7 0008                            LDB,B5   DAT$,AUTO
          2 0001FE  EAC5 0009                            SRM,R6,'00FF'X    9,B5
          2 000200       00FF

      378    13224    2             BYT_ARY ( LENGTHC(KX$X29_OTPBFR)+13 ) = %KX_X3PRMX_EDT# + 1;

  13224   2 000201  6C0F                                 LDV,R6   15
          2 000202  DCC7 0008                            LDB,B5   DAT$,AUTO
          2 000204  EAC5 000A                            SRM,R6,'00FF'X    10,B5
          2 000206       00FF

      379    13225    2             BYT_ARY ( LENGTHC(KX$X29_OTPBFR)+10 ) = 127;

  13225   2 000207  6C7F                                 LDV,R6   127
          2 000208  E7C5 0009                            STH,R6   9,B5

      380    13226    2             KX$X29.X3PRM ( %KX_X3PRMX_ACTBRK# ) = 21;
PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:58   

  13226   2 00020A  DCC7 0006                            LDB,B5   @KX$X29ORX28,AUTO
          2 00020C  C7C5 001E                            STH,R4   30,B5

      381    13227    2             KX$X29.X3PRM ( %KX_X3PRMX_CRPADD# ) = 0;

  13227   2 00020E  87C5 001F                            CLH      31,B5

      382    13228    2             KX$X29.X3PRM ( %KX_X3PRMX_LFPADD# ) = 0;

  13228   2 000210  8845 0021                            LBF,'00FF'X       33,B5
  13228   2 000212       00FF

      383    13229    2             KX$X29.X3PRM ( %KX_X3PRMX_LFAFTCR# ) = 0;

  13229   2 000213  87C5 0021                            CLH      33,B5

      384    13230    2             KX$X29.X3PRM ( %KX_X3PRMX_DATFRWSGN# ) = 127;

  13230   2 000215  E7C5 001C                            STH,R6   28,B5

      385    13231    2             KX$X29.X3PRM ( %KX_X3PRMX_LINFLD# ) = 0;

  13231   2 000217  8845 001F                            LBF,'00FF'X       31,B5
  13231   2 000219       00FF

      386    13232    2             KX$X29.X3PRM ( %KX_X3PRMX_EDT# ) = 0;

  13232   2 00021A  87C5 0022                            CLH      34,B5
          2 00021C  0F81 003A                            B        s:13256,PREL

      387    13233    2          CASE ( %KX_X29MSGTYP_SETREDX3# );

      388    13234    3             DO I = 0 TO %KX_X3PRMX_HI#;

  13234   2 00021E  8747 000A                            CL       I,AUTO

PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:59   
      389    13235    3                IF I ~= %KX_X3PRMX_LINSPD#

  13235   2 000220  E847 000A                            LDR,R6   I,AUTO
          2 000222  6D0A                                 CMV,R6   10
          2 000223  0901 0016                            BE       s:13243,PREL

      390    13236    3                   THEN
      391    13237    4                      DO;

      392    13238    4                         BYT_ARY ( BYTX ) = I + 1;

  13238   2 000225  6E01                                 ADV,R6   1
          2 000226  ECC7 0008                            LDB,B6   DAT$,AUTO
          2 000228  B847 000B                            LDR,R3   BYTX,AUTO
          2 00022A  E7B6                                 STH,R6   ,B6,R3

      393    13239    4                         BYTX = BYTX + 1;

  13239   2 00022B  8AC7 000B                            INC      BYTX,AUTO

      394    13240    4                         BYT_ARY ( BYTX ) = KX$X29.X3PRM ( I );

  13240   2 00022D  ECC7 0006                            LDB,B6   @KX$X29ORX28,AUTO
          2 00022F  B847 000A                            LDR,R3   I,AUTO
          2 000231  3E36                                 ADV,R3   54
          2 000232  D2B6                                 LLH,R5   ,B6,R3
          2 000233  DCC7 0008                            LDB,B5   DAT$,AUTO
          2 000235  A847 000B                            LDR,R2   BYTX,AUTO
          2 000237  D7A5                                 STH,R5   ,B5,R2

      395    13241    4                         BYTX = BYTX + 1;

  13241   2 000238  8AC7 000B                            INC      BYTX,AUTO

      396    13242    4                      END;

      397    13243    3             END;
PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:60   

  13243   2 00023A  8AC7 000A                            INC      I,AUTO
          2 00023C  E847 000A                            LDR,R6   I,AUTO
          2 00023E  6D15                                 CMV,R6   21
          2 00023F  03E1                                 BLE      s:13235,SPREL
          2 000240  0F81 0016                            B        s:13256,PREL

      398    13244    2          CASE ( %KX_X29MSGTYP_HLTMRK# );

      399    13245    2             BYT_ARY ( LENGTHC(KX$X29_OTPBFR)+1 ) = %KX_X3PRMX_HLTMRK#;

  13245   2 000242  6C06                                 LDV,R6   6
          2 000243  DCC7 0008                            LDB,B5   DAT$,AUTO
          2 000245  EAC5 0004                            SRM,R6,'00FF'X    4,B5
          2 000247       00FF

      400    13246    2             BYT_ARY ( LENGTHC(KX$X29_OTPBFR)+2 ) = 0;

  13246   2 000248  DCC7 0008                            LDB,B5   DAT$,AUTO
          2 00024A  87C5 0005                            CLH      5,B5
          2 00024C  0F81 000A                            B        s:13256,PREL

      401    13247    2          CASE ( ELSE );

      402    13248        /*S* SCREECH_CODE: KXX-S$KX_UNKSNDX29RQS#
      403    13249             MESSAGE: The X.29 message requested to be sent is bad.
      404    13250        */
      405    13251    2   SCREECH:  CALL KHD$SCREECH ( Y_UNKSNDX29RQS );

  13251   2 00024E  BB80 0000 0002  03   SCREECH         LAB,B3   +2
          2 000251  CBF0 0100                            LAB,B4   256,IMO
          2 000253  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          2 000256       0001                            DC       s:13256,PREL

      406    13252    2       END; /* DO CASE ... */

      407    13253        /*
PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:61   
      408    13254           Update the output buffer chain.
      409    13255        */
      410    13256    1       IF ( KX$X29.SND.TAL$ = ADDR(NIL) )

  13256   2 000257  ECC7 0006                            LDB,B6   @KX$X29ORX28,AUTO
          2 000259  8DC6 0010                            CMN      16,B6
          2 00025B  0981 0009                            BNE      s:13264,PREL

      411    13257    1          THEN
      412    13258    2             DO;

      413    13259    2                KX$X29.SND.HED$ = DAT$;

  13259   2 00025D  DCC7 0008                            LDB,B5   DAT$,AUTO
          2 00025F  DFC6 000C                            STB,B5   12,B6

      414    13260    2                KX$X29.SND.NXTLOD$ = DAT$;

  13260   2 000261  DFC6 000E                            STB,B5   14,B6

      415    13261    2             END;

  13261   2 000263  0F81 000E                            B        s:13269,PREL

      416    13262    1          ELSE
      417    13263    2             DO;

      418    13264    2                KX$X29.SND.TAL$->KX$X29_OTPBFR.LNK$ = DAT$;

  13264   2 000265  DCC6 0010                            LDB,B5   16,B6
          2 000267  CCC7 0008                            LDB,B4   DAT$,AUTO
          2 000269  CF85                                 STB,B4   ,B5

      419    13265    2                IF ( KX$X29.SND.NXTLOD$ = ADDR(NIL) )

  13265   2 00026A  8DC6 000E                            CMN      14,B6
          2 00026C  0981 0005                            BNE      s:13269,PREL
PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:62   

      420    13266    2                   THEN
      421    13267    2                      KX$X29.SND.NXTLOD$ = DAT$;

  13267   2 00026E  DCC7 0008                            LDB,B5   DAT$,AUTO
          2 000270  DFC6 000E                            STB,B5   14,B6

      422    13268    2             END;

      423    13269    1       KX$X29.SND.TAL$ = DAT$;

  13269   2 000272  DCC7 0008                            LDB,B5   DAT$,AUTO
          2 000274  DFC6 0010                            STB,B5   16,B6

      424    13270    1       KX$X29_OTPBFR.LNK$ = ADDR(NIL);

  13270   2 000276  CB80 0000 0000                       LAB,B4   0
          2 000279  CF85                                 STB,B4   ,B5

      425    13271        /*
      426    13272           Tell L3 that we want to send packets.
      427    13273        */
      428    13274    1       CALL_L3.CAL$ = ADDR(KX$X29ORX28);

  13274   2 00027A  EF80 0000 0001  01                   STB,B6   CALL_L3+1

      429    13275    1       CALL_L3.RCV$ = KX$X29.L3$;

  13275   2 00027D  DCC6 0006                            LDB,B5   6,B6
          2 00027F  DF80 0000 0003  01                   STB,B5   CALL_L3+3

      430    13276    1       CALL KXP$PACKET ( CALL_L3 ) WHENALTRETURN

  13276   2 000282  BB80 0000 0004  03                   LAB,B3   +4
          2 000285  CBF0 0100                            LAB,B4   256,IMO
          2 000287  E380 0000 0000  xent                 LNJ,B6   KXP$PACKET
          2 00028A       0003                            DC       s:13278,PREL
PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:63   
          2 00028B  0F81 000A                            B        s:13280,PREL

      431    13277    2             DO;

      432    13278    2                CALL KHD$SCREECH ( CALL_L3.PRM1$->B$SCODE );

  13278   2 00028D  BB80 0000 0007  01                   LAB,B3   CALL_L3+7
          2 000290  CBF0 0100                            LAB,B4   256,IMO
          2 000292  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          2 000295       0001                            DC       s:13280,PREL

      433    13279    2             END;

      434    13280    1   END KXX$SNDX29MSG;

  13280   2 000296  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      435    13281
      436    13282        %EOD;

PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:64   
--  Include file information  --

   KL_MACRO_C.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   KH_MACRO_C.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KL_CONTROL_C.:E05TOU  is referenced.
   KV_ASCCHR_E.:E05TOU  is referenced.
   KV$GLBCTX.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KA_GLB.:E05TOU  is referenced.
   KA_GLB_E.:E05TOU  is referenced.
   KXX_MACROS_M.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   KX_SCODE_C.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure KXX$SNDX29MSG.
PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:65   

 **** Variables and constants ****

  ****  Section 000 RoData KXX$SNDX29MSG

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     A-0-0/c UBIN(8)     r     1 KX_X29MSGCOD(0:9)
     0-0-0/c UBIN(8)     r     1 KX_X29MSGTYP_BYTSIZ(0:9)
     5-0-0/c UBIN(8)     r     1 KX_X29MSGTYP_VAL(0:9)
     F-0-0/w STRC(48)    r     1 Y_NO_GET                  12-0-0/w STRC(48)    r     1 Y_UNKSNDX29RQS

  ****  Section 001  Data  KXX$SNDX29MSG

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(256)   r     1 CALL_L3

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @KX$X29ORX28               4-0-0/w PTR         r     1 @X29MSGTYP
     B-0-0/w UBIN(16)    r     1 BYTX                      10-0-0/w UBIN(16)    r     1 CNC_TYP
     8-0-0/w PTR         r     1 DAT$                      *0-0-0/w UBIN(16)    r     1 DUMMY
     A-0-0/w UBIN(16)    r     1 I                          D-0-0/w UBIN(16)    r     1 KVBSIZ
    *0-0-0/w STRC(824)   r     1 KX$VC                     *0-0-0/w STRC(576)   r     1 KX$X29
    *0-0-0/w ACHR        r     1 KX$X29ORX28                E-0-0/w PTR         r     1 VDI$
    11-0-0/w UBIN(16)    r     1 WRDSIZ2N                  *0-0-0/w UBIN(16)    r     1 X29MSGTYP

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:66   
     0-0-0/w UBIN(16)    r     1 KA_OTPBLKLMT(0:15)
     0-0-0/w UBIN(16)    r     1 KA_OTPUN_BLKLMT(0:15)
     0-0-0/w PTR         r     1 KH_CTLTBL$                 0-0-0/w STRC(1248)  r     1 KX_STATS_X29

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(48)    r     1 B$SCODE                    0-0-0/c UBIN(8)     r     1 BYT_ARY(0:2000)
     0-0-0/w STRC(512)   r     1 KV$VDI                     0-0-0/w STRC(80)    r     1 KX$VC_OTPBFR
     0-0-0/w STRC(64)    r     1 KX$X29_OTPBFR              0-0-0/c UBIN(8)     r     1 UBNBSD(0:10)


   Procedure KXX$SNDX29MSG requires 665 words for executable code.
   Procedure KXX$SNDX29MSG requires 23 words of local(AUTO) storage.
PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:67   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:68   
          MINI XREF LISTING

B$SCODE
     12322**DCL     13278<>CALL
BYTX
     13053**DCL     13144<<ASSIGN  13167<<ASSIGN  13170>>ASSIGN  13180>>ASSIGN  13181<<ASSIGN  13181>>ASSIGN
     13182>>ASSIGN  13183<<ASSIGN  13183>>ASSIGN  13206>>ASSIGN  13207<<ASSIGN  13207>>ASSIGN  13208>>ASSIGN
     13209<<ASSIGN  13209>>ASSIGN  13238>>ASSIGN  13239<<ASSIGN  13239>>ASSIGN  13240>>ASSIGN  13241<<ASSIGN
     13241>>ASSIGN
BYT_ARY
     12009**DCL     13170<<ASSIGN  13180<<ASSIGN  13182<<ASSIGN  13190<<ASSIGN  13191<<ASSIGN  13195<<ASSIGN
     13196<<ASSIGN  13206<<ASSIGN  13208<<ASSIGN  13212<<ASSIGN  13213<<ASSIGN  13216--ASSIGN  13217<<ASSIGN
     13218<<ASSIGN  13219<<ASSIGN  13220<<ASSIGN  13221<<ASSIGN  13222<<ASSIGN  13223<<ASSIGN  13224<<ASSIGN
     13225<<ASSIGN  13238<<ASSIGN  13240<<ASSIGN  13245<<ASSIGN  13246<<ASSIGN
CALL_L3
     12894**DCL     13276<>CALL
CALL_L3.CAL$
     12898**DCL     13274<<ASSIGN
CALL_L3.PRM1$
     12899**DCL     12900--REDEF   13278>>CALL
CALL_L3.PRM2$
     12901**DCL     12901--REDEF
CALL_L3.RCV$
     12898**DCL     13275<<ASSIGN
CNC_TYP
     13057**DCL     13093<<ASSIGN  13102<<ASSIGN  13109>>IF      13118>>IF
DAT$
     12917**DCL     11973--IMP-PTR 12001--IMP-PTR 12009--IMP-PTR 13135<>CALL    13139>>ASSIGN  13140>>ASSIGN
     13141>>ASSIGN  13142>>ASSIGN  13161<>CALL    13162>>ASSIGN  13163>>ASSIGN  13164>>ASSIGN  13165>>ASSIGN
     13170>>ASSIGN  13180>>ASSIGN  13182>>ASSIGN  13190>>ASSIGN  13191>>ASSIGN  13195>>ASSIGN  13196>>ASSIGN
     13206>>ASSIGN  13208>>ASSIGN  13212>>ASSIGN  13213>>ASSIGN  13216>>ASSIGN  13217>>ASSIGN  13218>>ASSIGN
     13219>>ASSIGN  13220>>ASSIGN  13221>>ASSIGN  13222>>ASSIGN  13223>>ASSIGN  13224>>ASSIGN  13225>>ASSIGN
     13238>>ASSIGN  13240>>ASSIGN  13245>>ASSIGN  13246>>ASSIGN  13259>>ASSIGN  13260>>ASSIGN  13264>>ASSIGN
     13267>>ASSIGN  13269>>ASSIGN  13270>>ASSIGN
PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:69   
DUMMY
     12919**DCL     12918--IMP-SIZ
I
     13052**DCL     13153<<DOINDEX 13154>>IF      13175<<DOINDEX 13176>>IF      13179>>ASSIGN  13180>>ASSIGN
     13182>>ASSIGN  13205<<DOINDEX 13206>>ASSIGN  13234<<DOINDEX 13235>>IF      13238>>ASSIGN  13240>>ASSIGN
KA_OTPBLKLMT
     12735**DCL     13124>>IF
KA_OTPUN_BLKLMT
     12734**DCL     13124>>IF
KHD$SCREECH
     13069**DCL-ENT 13137--CALL    13251--CALL    13278--CALL
KH_CTLTBL$
     12742**DCL     12099--IMP-PTR
KV$VDI
     12031**DCL     13132<>CALL
KV$VDI.LINSPD
     12073**DCL     13124>>IF      13124>>IF
KVB$GET2NSYS
     13071**DCL-ENT 13135--CALL    13161--CALL
KVBSIZ
     13055**DCL     13134<<ASSIGN  13135>>CALL    13143>>ASSIGN  13148<<ASSIGN  13149>>IF      13152<<ASSIGN
     13156<<ASSIGN  13156>>ASSIGN  13159<<ASSIGN  13159>>ASSIGN  13160>>ASSIGN  13165>>ASSIGN  13166>>ASSIGN
     13169>>ASSIGN
KX$VC.CALCNFPND
     12989**DCL     12990--REDEF
KX$VC.ERRPADCOD
     12995**DCL     13191>>ASSIGN
KX$VC.ERRPADTYP
     12995**DCL     13190>>ASSIGN
KX$VC.OTPBFRBYTCNT
     12987**DCL     13166<<ASSIGN  13166>>ASSIGN
KX$VC.RLCID
     13000**DCL     13000--REDEF
KX$VC.SBR$
     12983**DCL     13096>>IF
KX$VC.STATE
PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:70   
     13049**DCL     13099>>IF
KX$VC.X28
     12992**DCL     13096>>IF
KX$VC.X3PRM
     12994**DCL     13182>>ASSIGN  13196>>ASSIGN
KX$VC.X3_PRM_ALL
     12993**DCL     13154>>IF      13176>>IF      13186<<ASSIGN
KX$VC.X3_PRM_BIT
     12994**DCL     13154>>IF      13176>>IF      13179<<ASSIGN
KX$VC.X3_PRM_BITS
     12993**DCL     12994--REDEF
KX$VC_OTPBFR
     12001**DCL     13159--ASSIGN  13162<<ASSIGN  13167--ASSIGN  13190--ASSIGN  13191--ASSIGN  13195--ASSIGN
     13196--ASSIGN
KX$VC_OTPBFR.BFRBYTSIZ
     12005**DCL     13165<<ASSIGN
KX$VC_OTPBFR.Q
     12005**DCL     13163<<ASSIGN
KX$VC_OTPBFR.RLSWRDSIZ
     12006**DCL     13164<<ASSIGN
KX$X29.HLTOTP
     12949**DCL     12949--REDEF
KX$X29.HLTOTPNXTBFR
     12952**DCL     12953--REDEF
KX$X29.L3$
     12944**DCL     13084>>IF      13275>>ASSIGN
KX$X29.OTPBFRBYTCNT
     12947**DCL     13124>>IF      13143<<ASSIGN  13143>>ASSIGN
KX$X29.SBR$
     12943**DCL     13087>>IF
KX$X29.SND.HED$
     12945**DCL     13259<<ASSIGN
KX$X29.SND.NXTLOD$
     12946**DCL     13260<<ASSIGN  13265>>IF      13267<<ASSIGN
KX$X29.SND.TAL$
     12946**DCL     13256>>IF      13264>>ASSIGN  13269<<ASSIGN
PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:71   
KX$X29.STATE
     12956**DCL     13090>>IF
KX$X29.VDI$
     12943**DCL     13117>>ASSIGN
KX$X29.X3PRM
     12957**DCL     13214<<ASSIGN  13226<<ASSIGN  13227<<ASSIGN  13228<<ASSIGN  13229<<ASSIGN  13230<<ASSIGN
     13231<<ASSIGN  13232<<ASSIGN  13240>>ASSIGN
KX$X29ORX28
     12918**DCL        13--PROC    12919--REDEF   12939--REDEF   12979--REDEF   13274--ASSIGN
KX$X29_OTPBFR
     11973**DCL     13139<<ASSIGN  13144--ASSIGN  13212--ASSIGN  13213--ASSIGN  13216--ASSIGN  13217--ASSIGN
     13218--ASSIGN  13219--ASSIGN  13220--ASSIGN  13221--ASSIGN  13222--ASSIGN  13223--ASSIGN  13224--ASSIGN
     13225--ASSIGN  13245--ASSIGN  13246--ASSIGN
KX$X29_OTPBFR.BYTCNT
     11978**DCL     13141<<ASSIGN
KX$X29_OTPBFR.BYTSIZLOG2
     11978**DCL     13142<<ASSIGN
KX$X29_OTPBFR.HLTOTP
     11977**DCL     11978--REDEF
KX$X29_OTPBFR.LNK$
     11977**DCL     13264<<ASSIGN  13270<<ASSIGN
KX$X29_OTPBFR.Q
     11979**DCL     13140<<ASSIGN
KXP$PACKET
     13074**DCL-ENT 13276--CALL
KXV$VCVDH
     13067**DCL-ENT 13096--IF
KXX$TRNOTP
     13066**DCL-ENT 13132--CALL
KXX$X29
     13068**DCL-ENT 13087--IF
KX_STATS_X29.KHSTT.OTPBFRBYTUTL
     12712**DCL     13169<<ASSIGN  13169>>ASSIGN
KX_STATS_X29.REQSTATS.DSPMSK
     12640**DCL     12646--REDEF
KX_STATS_X29.REQSTATS.SLCMSK
PL6.E3A0      #002=KXX$SNDX29MSG File=KXX$MSC.:E05TSI                            WED 07/30/97 02:33 Page:72   
     12681**DCL     12688--REDEF
KX_X29MSGCOD
     12377**DCL     13170>>ASSIGN
KX_X29MSGTYP_BYTSIZ
     12367**DCL     13109>>IF      13141>>ASSIGN  13148>>ASSIGN
KX_X29MSGTYP_VAL
     12373**DCL     13109>>IF
L_NOMEM
     13137**LABEL   13161--CALLALT
SCREECH
     13251**LABEL   13105--GOTO    13112--GOTO
UBNBSD
     12294**DCL     13216<<ASSIGN
VDI$
     13056**DCL     12031--IMP-PTR 13117<<ASSIGN  13121>>IF      13124>>IF      13124>>IF      13132>>CALL
WRDSIZ2N
     13058**DCL     13160<<ASSIGN  13161<>CALL    13164>>ASSIGN
X29MSGTYP
     13051**DCL        13--PROC    13109>>IF      13109>>IF      13141>>ASSIGN  13148>>ASSIGN  13170>>ASSIGN
     13171>>DOCASE
Y_NO_GET
     12771**DCL     13137<>CALL
Y_UNKSNDX29RQS
     12832**DCL     13251<>CALL

PL6.E3A0      #003=KXX$MRK File=KXX$MSC.:E05TSI                                  WED 07/30/97 02:34 Page:73   
      437        1        /*T***********************************************************/
      438        2        /*T*                                                         */
      439        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      440        4        /*T*                                                         */
      441        5        /*T***********************************************************/
      442        6        %EJECT;
PL6.E3A0      #003=KXX$MRK File=KXX$MSC.:E05TSI                                  WED 07/30/97 02:34 Page:74   
      443        7        /*P*
      444        8            NAME: KXX$MRK
      445        9            PURPOSE:
      446       10                  To return markers in output buffers to VDH.
      447       11        */
      448       12        /*D*
      449       13            NAME: KXX$MRK
      450       14            CALL: CALL KXX$MRK(KX$X29_OTPBFR)
      451       15                  There is no altret.
      452       16            PARAMETERS:
      453       17                  The parameter is an X.29 output buffer (KX$X29_OTPBFR).
      454       18            INTERFACE:
      455       19                  It calls KVV$VDI to return the markers to VDH.
      456       20            DESCRIPTION:
      457       21                  Markers are stacked in reverse order (last marker in
      458       22                  lower physical memory) at the bottom of the output
      459       23                  buffers. KXX$MRK looks at the buffer header bits ACKD
      460       24                  and NAKD, and then
      461       25                  calls KVV$VDI with the marker data and the appropiate
      462       26                  completion code (completed or deleted).
      463       27        */
      464       28        /*X*   PLM = 4, IND=3, CTI=3, DCI=6, IAD=0, DTI=6, AND=Y, CSI=3, THI=3, STI=3, DMC=Y
                28         */
      465       29        KXX$MRK: PROC(KX$X29_OTPBFR);
      466       30
      467       31
      468       32        %EJECT;
PL6.E3A0      #003=KXX$MRK File=KXX$MSC.:E05TSI                                  WED 07/30/97 02:34 Page:75   
      469       33
      470       34        /*****************************************************************
      471       35        *                                                                *
      472       36        *                           Include files                        *
      473       37        *                                                                *
      474       38        *****************************************************************/
      475       39
      476       40        %INCLUDE KX_EQUS_E;
      477      479        %INCLUDE KX_MACROS_M;
      478     1250        %INCLUDE KXX_MACROS_M;
      479     1592        %INCLUDE KA_GLB_E;
      480     1670        %KA_HLTOTP_E;
      481     1679        %INCLUDE KV_GLBCNS_E;
      482     2020        %KV_CMPCOD_E;                           /* marker completion codes            */
      483     2034
      484     2035        %INCLUDE KV$GLB;
      485     2454        %INCLUDE KV$VDH;
      486     2885
      487     2886        /*****************************************************************
      488     2887        *                                                                *
      489     2888        *                           Based                                *
      490     2889        *                                                                *
      491     2890        *****************************************************************/
      492     2891
      493     2892        %KV$OTPMRK ( STCLASS = "BASED ( Y@MRK$ )" );
      494     2919
      495     2920        /*****************************************************************
      496     2921        *                                                                *
      497     2922        *                           Auto                                 *
      498     2923        *                                                                *
      499     2924        *****************************************************************/
      500     2925
      501     2926        %KV$VDH_OTPMRK(NAME = KV@VDH_OTPMRK, STCLASS = AUTO);
      502     2988        %KX$X29_OTPBFR(STCLASS = PARAM);
      503     3011    1   DCL CMPCOD UBIN;
      504     3012    1   DCL Y@MRK$ PTR;
      505     3013    1   DCL I UBIN;
PL6.E3A0      #003=KXX$MRK File=KXX$MSC.:E05TSI                                  WED 07/30/97 02:34 Page:76   
      506     3014
      507     3015        %EJECT;
PL6.E3A0      #003=KXX$MRK File=KXX$MSC.:E05TSI                                  WED 07/30/97 02:34 Page:77   
      508     3016
      509     3017        /*****************************************************************
      510     3018        *                                                                *
      511     3019        *                           Constant                             *
      512     3020        *                                                                *
      513     3021        *****************************************************************/
      514     3022
      515     3023        %KV$VDH_OTPMRK(NAME = KV_VDH_OTPMRK, STCLASS = CONSTANT);
      516     3085
      517     3086        /* constant array containing powers of 2 */
      518     3087
      519     3088    1   DCL Y_POWER_OF_2(0:15) UBIN WORD CONSTANT INIT(1,2,4,8,16,32,64,128,
      520     3089    1    256,512,1024,2048,4096,8192,16384,32768);
      521     3090
      522     3091
      523     3092        /*****************************************************************
      524     3093        *                                                                *
      525     3094        *                           Entry references                     *
      526     3095        *                                                                *
      527     3096        *****************************************************************/
      528     3097
      529     3098    1   DCL KVV$VDI ENTRY(1) ALTRET;
      530     3099
      531     3100        /*****************************************************************
      532     3101        *                                                                *
      533     3102        *                           Procedure                            *
      534     3103        *                                                                *
      535     3104        *****************************************************************/
      536     3105
      537     3106
      538     3107        /* nothing to do if there are no markers in the buffer. */
      539     3108
      540     3109    1       IF KX$X29_OTPBFR.NMBMRK = 0 THEN RETURN;
      541     3110
      542     3111        /* loop to go thru all the markers */
      543     3112
      544     3113    1       IF KX$X29_OTPBFR.DLT
PL6.E3A0      #003=KXX$MRK File=KXX$MSC.:E05TSI                                  WED 07/30/97 02:34 Page:78   
      545     3114    1          THEN
      546     3115    1             CMPCOD = %KV_CMPCOD_DLT;
      547     3116    1          ELSE
      548     3117    1             CMPCOD = %KV_CMPCOD_NRM;
      549     3118    1       KV@VDH_OTPMRK = KV_VDH_OTPMRK;
      550     3119    1       Y@MRK$ = PINCRW(ADDR(KX$X29_OTPBFR), Y_POWER_OF_2(KX$X29_OTPBFR.BYTSIZLOG2)/2);
      551     3120    2       DO I = 1 TO KX$X29_OTPBFR.NMBMRK;
      552     3121    2          Y@MRK$ = PINCRW(Y@MRK$, -SIZEW(KV$OTPMRK));
      553     3122    2          KV@VDH_OTPMRK.DAT = KV$OTPMRK;
      554     3123    2          KV@VDH_OTPMRK.CMPCOD = CMPCOD;
      555     3124    2          CALL KVV$VDI(KV@VDH_OTPMRK);
      556     3125    2       END; /* DO I = .... */
      557     3126    1       RETURN;
      558     3127    1   END KXX$MRK;
      559     3128
      560     3129        %EOD;

PL6.E3A0      #003=KXX$MRK File=KXX$MSC.:E05TSI                                  WED 07/30/97 02:34 Page:79   
--  Include file information  --

   KV$VDH.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KA_GLB_E.:E05TOU  is referenced.
   KXX_MACROS_M.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
      No diagnostics issued in procedure KXX$MRK.

   Procedure KXX$MRK requires 94 words for executable code.
   Procedure KXX$MRK requires 18 words of local(AUTO) storage.

PL6.E3A0      #003=KXX$MRK File=KXX$MSC.:E05TSI                                  WED 07/30/97 02:34 Page:80   

 Object Unit name= KXX$MRK                                    File name= KXX$MSC.:E05TOU
 UTS= JUL 30 '97 02:34:18.88 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS     21     15  KXX$MRK
    1   Proc  even  none    94     5E  KXX$MRK

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  KXX$MRK

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 KVV$VDI
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    G$ROS$
PL6.E3A0      #003=KXX$MRK File=KXX$MSC.:E05TSI                                  WED 07/30/97 02:34 Page:81   


      437        1        /*T***********************************************************/
      438        2        /*T*                                                         */
      439        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      440        4        /*T*                                                         */
      441        5        /*T***********************************************************/
      442        6        %EJECT;
PL6.E3A0      #003=KXX$MRK File=KXX$MSC.:E05TSI                                  WED 07/30/97 02:34 Page:82   
      443        7        /*P*
      444        8            NAME: KXX$MRK
      445        9            PURPOSE:
      446       10                  To return markers in output buffers to VDH.
      447       11        */
      448       12        /*D*
      449       13            NAME: KXX$MRK
      450       14            CALL: CALL KXX$MRK(KX$X29_OTPBFR)
      451       15                  There is no altret.
      452       16            PARAMETERS:
      453       17                  The parameter is an X.29 output buffer (KX$X29_OTPBFR).
      454       18            INTERFACE:
      455       19                  It calls KVV$VDI to return the markers to VDH.
      456       20            DESCRIPTION:
      457       21                  Markers are stacked in reverse order (last marker in
      458       22                  lower physical memory) at the bottom of the output
      459       23                  buffers. KXX$MRK looks at the buffer header bits ACKD
      460       24                  and NAKD, and then
      461       25                  calls KVV$VDI with the marker data and the appropiate
      462       26                  completion code (completed or deleted).
      463       27        */
      464       28        /*X*  PLM = 4, IND=3, CTI=3, DCI=6, IAD=0, DTI=6, AND=Y, CSI=3, THI=3, STI=3, DMC=Y
                28         */
      465       29        KXX$MRK: PROC(KX$X29_OTPBFR);

     29   1 000000  D380 0000 0000  xent KXX$MRK         LNJ,B5   X6A_AUTO_1
          1 000003       0012 0001                       DC       18,1

      466       30
      467       31
      468       32        %EJECT;
PL6.E3A0      #003=KXX$MRK File=KXX$MSC.:E05TSI                                  WED 07/30/97 02:34 Page:83   
      469       33
      470       34        /*****************************************************************
      471       35        *                                                                *
      472       36        *                           Include files                        *
      473       37        *                                                                *
      474       38        *****************************************************************/
      475       39
      476       40        %INCLUDE KX_EQUS_E;
      477      479        %INCLUDE KX_MACROS_M;
      478     1250        %INCLUDE KXX_MACROS_M;
      479     1592        %INCLUDE KA_GLB_E;
      480     1670        %KA_HLTOTP_E;
      481     1679        %INCLUDE KV_GLBCNS_E;
      482     2020        %KV_CMPCOD_E;                           /* marker completion codes            */
      483     2034
      484     2035        %INCLUDE KV$GLB;
      485     2454        %INCLUDE KV$VDH;
      486     2885
      487     2886        /*****************************************************************
      488     2887        *                                                                *
      489     2888        *                           Based                                *
      490     2889        *                                                                *
      491     2890        *****************************************************************/
      492     2891
      493     2892        %KV$OTPMRK ( STCLASS = "BASED ( Y@MRK$ )" );
      494     2919
      495     2920        /*****************************************************************
      496     2921        *                                                                *
      497     2922        *                           Auto                                 *
      498     2923        *                                                                *
      499     2924        *****************************************************************/
      500     2925
      501     2926        %KV$VDH_OTPMRK(NAME = KV@VDH_OTPMRK, STCLASS = AUTO);
      502     2988        %KX$X29_OTPBFR(STCLASS = PARAM);
      503     3011    1   DCL CMPCOD UBIN;
      504     3012    1   DCL Y@MRK$ PTR;
      505     3013    1   DCL I UBIN;
PL6.E3A0      #003=KXX$MRK File=KXX$MSC.:E05TSI                                  WED 07/30/97 02:34 Page:84   
      506     3014
      507     3015        %EJECT;
PL6.E3A0      #003=KXX$MRK File=KXX$MSC.:E05TSI                                  WED 07/30/97 02:34 Page:85   
      508     3016
      509     3017        /*****************************************************************
      510     3018        *                                                                *
      511     3019        *                           Constant                             *
      512     3020        *                                                                *
      513     3021        *****************************************************************/
      514     3022
      515     3023        %KV$VDH_OTPMRK(NAME = KV_VDH_OTPMRK, STCLASS = CONSTANT);
      516     3085
      517     3086        /* constant array containing powers of 2 */
      518     3087
      519     3088    1   DCL Y_POWER_OF_2(0:15) UBIN WORD CONSTANT INIT(1,2,4,8,16,32,64,128,
      520     3089    1    256,512,1024,2048,4096,8192,16384,32768);
      521     3090
      522     3091
      523     3092        /*****************************************************************
      524     3093        *                                                                *
      525     3094        *                           Entry references                     *
      526     3095        *                                                                *
      527     3096        *****************************************************************/
      528     3097
      529     3098    1   DCL KVV$VDI ENTRY(1) ALTRET;
      530     3099
      531     3100        /*****************************************************************
      532     3101        *                                                                *
      533     3102        *                           Procedure                            *
      534     3103        *                                                                *
      535     3104        *****************************************************************/
      536     3105
      537     3106
      538     3107        /* nothing to do if there are no markers in the buffer. */
      539     3108
      540     3109    1       IF KX$X29_OTPBFR.NMBMRK = 0 THEN RETURN;

   3109   1 000005  ECC7 0004                            LDB,B6   @KX$X29_OTPBFR,AUTO
          1 000007  E2C6 0003                            LLH,R6   3,B6
          1 000009  6981 0004                            BNEZ,R6  s:3113,PREL
PL6.E3A0      #003=KXX$MRK File=KXX$MSC.:E05TSI                                  WED 07/30/97 02:34 Page:86   

   3109   1 00000B  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      541     3110
      542     3111        /* loop to go thru all the markers */
      543     3112
      544     3113    1       IF KX$X29_OTPBFR.DLT

   3113   1 00000E  82C6 0003                            LB,'0040'X        3,B6
   3113   1 000010       0040
          1 000011  0581 0006                            BBF      s:3117,PREL

      545     3114    1          THEN
      546     3115    1             CMPCOD = %KV_CMPCOD_DLT;

   3115   1 000013  5C0C                                 LDV,R5   12
          1 000014  DF47 000B                            STR,R5   CMPCOD,AUTO
          1 000016  0F81 0003                            B        s:3118,PREL

      547     3116    1          ELSE
      548     3117    1             CMPCOD = %KV_CMPCOD_NRM;

   3117   1 000018  8747 000B                            CL       CMPCOD,AUTO

      549     3118    1       KV@VDH_OTPMRK = KV_VDH_OTPMRK;

   3118   1 00001A  AB80 0000 0000  00                   LAB,B2   KV_VDH_OTPMRK
          1 00001D  2C00                                 LDV,R2   0
          1 00001E  6C0A                                 LDV,R6   10
          1 00001F  BB87                                 LAB,B3   ,AUTO
          1 000020  3C0C                                 LDV,R3   12
          1 000021  0008                                 MMM

      550     3119    1       Y@MRK$ = PINCRW(ADDR(KX$X29_OTPBFR), Y_POWER_OF_2(KX$X29_OTPBFR.BYTSIZLOG2)/2);

   3119   1 000022  B846 0002                            LDR,R3   2,B6
          1 000024  304A                                 SOR,R3   10
PL6.E3A0      #003=KXX$MRK File=KXX$MSC.:E05TSI                                  WED 07/30/97 02:34 Page:87   
          1 000025  B570 000F                            AND,R3   15,IMO
          1 000027  E830 0000 0005  00                   LDR,R6   Y_POWER_OF_2,R3
          1 00002A  6041                                 SOR,R6   1
          1 00002B  F856                                 LDR,R7   R6
          1 00002C  6C00                                 LDV,R6   0
          1 00002D  8447 0004                            AID      @KX$X29_OTPBFR,AUTO
          1 00002F  8D47 000C                            SDI      Y@MRK$,AUTO

      551     3120    2       DO I = 1 TO KX$X29_OTPBFR.NMBMRK;

   3120   1 000031  5C01                                 LDV,R5   1
          1 000032  DF47 000E                            STR,R5   I,AUTO
          1 000034  0F81 001F                            B        s:3125+2,PREL

      552     3121    2          Y@MRK$ = PINCRW(Y@MRK$, -SIZEW(KV$OTPMRK));

   3121   1 000036  ECC7 000C                            LDB,B6   Y@MRK$,AUTO
          1 000038  DBC6 FFFD                            LAB,B5   -3,B6
          1 00003A  DFC7 000C                            STB,B5   Y@MRK$,AUTO

      553     3122    2          KV@VDH_OTPMRK.DAT = KV$OTPMRK;

   3122   1 00003C  AB85                                 LAB,B2   ,B5
          1 00003D  2C00                                 LDV,R2   0
          1 00003E  6C06                                 LDV,R6   6
          1 00003F  BB87                                 LAB,B3   ,AUTO
          1 000040  3C0E                                 LDV,R3   14
          1 000041  0008                                 MMM

      554     3123    2          KV@VDH_OTPMRK.CMPCOD = CMPCOD;

   3123   1 000042  E847 000B                            LDR,R6   CMPCOD,AUTO
          1 000044  EF47 000A                            STR,R6   KV@VDH_OTPMRK+4,AUTO

      555     3124    2          CALL KVV$VDI(KV@VDH_OTPMRK);

   3124   1 000046  EBC7 0006                            LAB,B6   KV@VDH_OTPMRK,AUTO
PL6.E3A0      #003=KXX$MRK File=KXX$MSC.:E05TSI                                  WED 07/30/97 02:34 Page:88   
          1 000048  EFC7 0010                            STB,B6   I+2,AUTO
          1 00004A  BBC7 0010                            LAB,B3   I+2,AUTO
          1 00004C  CBF0 0100                            LAB,B4   256,IMO
          1 00004E  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          1 000051       0001                            DC       s:3125,PREL

      556     3125    2       END; /* DO I = .... */

   3125   1 000052  8AC7 000E                            INC      I,AUTO
          1 000054  ECC7 0004                            LDB,B6   @KX$X29_OTPBFR,AUTO
          1 000056  E2C6 0003                            LLH,R6   3,B6
          1 000058  E947 000E                            CMR,R6   I,AUTO
          1 00005A  02DC                                 BGE      s:3121,SPREL

      557     3126    1       RETURN;

   3126   1 00005B  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      558     3127    1   END KXX$MRK;
      559     3128
      560     3129        %EOD;

PL6.E3A0      #003=KXX$MRK File=KXX$MSC.:E05TSI                                  WED 07/30/97 02:34 Page:89   
--  Include file information  --

   KV$VDH.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KA_GLB_E.:E05TOU  is referenced.
   KXX_MACROS_M.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
      No diagnostics issued in procedure KXX$MRK.
PL6.E3A0      #003=KXX$MRK File=KXX$MSC.:E05TSI                                  WED 07/30/97 02:34 Page:90   

 **** Variables and constants ****

  ****  Section 000 RoData KXX$MRK

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(80)    r     1 KV_VDH_OTPMRK
     5-0-0/w UBIN(16)    r     1 Y_POWER_OF_2(0:15)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @KX$X29_OTPBFR             B-0-0/w UBIN(16)    r     1 CMPCOD
     E-0-0/w UBIN(16)    r     1 I                          6-0-0/w STRC(80)    r     1 KV@VDH_OTPMRK
    *0-0-0/w STRC(64)    r     1 KX$X29_OTPBFR              C-0-0/w PTR         r     1 Y@MRK$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(48)    r     1 KV$OTPMRK


   Procedure KXX$MRK requires 94 words for executable code.
   Procedure KXX$MRK requires 18 words of local(AUTO) storage.
PL6.E3A0      #003=KXX$MRK File=KXX$MSC.:E05TSI                                  WED 07/30/97 02:34 Page:91   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=KXX$MRK File=KXX$MSC.:E05TSI                                  WED 07/30/97 02:34 Page:92   
          MINI XREF LISTING

CMPCOD
      3011**DCL      3115<<ASSIGN   3117<<ASSIGN   3123>>ASSIGN
I
      3013**DCL      3120<<DOINDEX
KV$OTPMRK
      2911**DCL      3121--ASSIGN   3122>>ASSIGN
KV$OTPMRK.ID
      2916**DCL      2916--REDEF    2917--REDEF
KV@VDH_OTPMRK
      2953**DCL      3118<<ASSIGN   3124<>CALL
KV@VDH_OTPMRK.CMPCOD
      2986**DCL      3123<<ASSIGN
KV@VDH_OTPMRK.DAT
      2980**DCL      3122<<ASSIGN
KV@VDH_OTPMRK.DAT.ID
      2983**DCL      2983--REDEF    2984--REDEF
KVV$VDI
      3098**DCL-ENT  3124--CALL
KV_VDH_OTPMRK
      3050**DCL      3118>>ASSIGN
KV_VDH_OTPMRK.DAT.ID
      3080**DCL      3080--REDEF    3081--REDEF
KX$X29_OTPBFR
      3002**DCL        29--PROC     3119--ASSIGN
KX$X29_OTPBFR.BYTSIZLOG2
      3007**DCL      3119>>ASSIGN
KX$X29_OTPBFR.DLT
      3008**DCL      3113>>IF
KX$X29_OTPBFR.HLTOTP
      3006**DCL      3007--REDEF
KX$X29_OTPBFR.NMBMRK
      3008**DCL      3109>>IF       3120>>DOINDEX
PL6.E3A0      #003=KXX$MRK File=KXX$MSC.:E05TSI                                  WED 07/30/97 02:34 Page:93   
Y@MRK$
      3012**DCL      2911--IMP-PTR  3119<<ASSIGN   3121<<ASSIGN   3121>>ASSIGN   3122>>ASSIGN
Y_POWER_OF_2
      3088**DCL      3119>>ASSIGN

PL6.E3A0      #004=KXX$TRNOTP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:34 Page:94   
      561        1        /*T***********************************************************/
      562        2        /*T*                                                         */
      563        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      564        4        /*T*                                                         */
      565        5        /*T***********************************************************/
      566        6        %EJECT;
PL6.E3A0      #004=KXX$TRNOTP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:34 Page:95   
      567        7
      568        8        /*X*   PLM = 4, IND=3, CTI=3, DCI=6, IAD=0, DTI=6, AND=Y, CSI=3, THI=3, STI=3, DMC=Y
                 8         */
      569        9        KXX$TRNOTP: PROC ( KV$VDI ) ALTRET;
      570       10        /*P*
      571       11             NAME: KXX$TRNOTP
      572       12             PURPOSE: Truncate the current output buffer and take care of
      573       13                      output parity generation.
      574       14        */
      575       15
      576       16        %EJECT;
PL6.E3A0      #004=KXX$TRNOTP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:34 Page:96   
      577       17
      578       18        /*****************************************************************
      579       19        *                                                                *
      580       20        *                           Include files                        *
      581       21        *                                                                *
      582       22        *****************************************************************/
      583       23
      584       24        %INCLUDE LCP_6;
      585     4303        %INCLUDE KX_EQUS_E;
      586     4742        %INCLUDE KX_DATA_C;
      587     4810        %INCLUDE KX_MACROS_M;
      588     5581        %INCLUDE KV$GLB;
      589     6000        %INCLUDE KXX_MACROS_M;
      590     6342        %INCLUDE KA_GLB_E;
      591     6420        %KA_HLTOTP_E;
      592     6429        %INCLUDE KV$GLBCTX;
      593     6874        %INCLUDE KV_GLBCNS_E;
      594     7215        %KV_PRTTYP_E;
      595     7222        %INCLUDE K_ID_E;
      596     7272        %K#ENTID_E;
      597     7291        %K#LYRID_E;
      598     7298        %INCLUDE KL_MACRO_C;
      599    10650        %INCLUDE KL_AFCN_C;
      600    10751        %INCLUDE KH$STT;
      601    10781        %INCLUDE KV_ASCCHR_E;
      602    10918        %INCLUDE KA_GLB;
      603    10995        %KA_MSC;
      604    11017
      605    11018        /*****************************************************************
      606    11019        *                                                                *
      607    11020        *                           Auto                                 *
      608    11021        *                                                                *
      609    11022        *****************************************************************/
      610    11023
      611    11024    1   DCL Y@BYTCNT UBIN;
      612    11025    1   DCL CHRCNT UBIN;
      613    11026    1   DCL PRTTBL$ PTR;
PL6.E3A0      #004=KXX$TRNOTP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:34 Page:97   
      614    11027    1   DCL VDI$ PTR;
      615    11028    1   DCL DAT$ PTR;
      616    11029    1   DCL X29$ PTR;
      617    11030        %KV$VDI ( STCLASS = );
      618    11101
      619    11102        /*****************************************************************
      620    11103        *                                                                *
      621    11104        *                           Based                                *
      622    11105        *                                                                *
      623    11106        *****************************************************************/
      624    11107
      625    11108        %KX$X29 ( STCLASS = "BASED(X29$)" );
      626    11148        %KX$X29_OTPBFR ( STCLASS = " BASED ( DAT$ ) " );
      627    11171    1   DCL PRTTBL(0:127) CHAR(1) BASED (PRTTBL$) CALIGNED;
      628    11172
      629    11173    1   DCL CHRSTR CHAR(2000) BASED CALIGNED;
      630    11174
      631    11175        /*****************************************************************
      632    11176        *                                                                *
      633    11177        *                           Static                               *
      634    11178        *                                                                *
      635    11179        *****************************************************************/
      636    11180
      637    11181        %KX_STATS_X29;
      638    11522
      639    11523
      640    11524        /* constant array containing powers of 2 */
      641    11525
      642    11526    1   DCL Y_POWER_OF_2(0:15) UBIN WORD CONSTANT INIT(1,2,4,8,16,32,64,128,
      643    11527    1    256,512,1024,2048,4096,8192,16384,32768);
      644    11528
      645    11529        /*****************************************************************
      646    11530        *                                                                *
      647    11531        *                           Symref                               *
      648    11532        *                                                                *
      649    11533        *****************************************************************/
      650    11534
PL6.E3A0      #004=KXX$TRNOTP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:34 Page:98   
      651    11535        %KX_PRTTBL;
      652    11563
      653    11564        %EJECT;
PL6.E3A0      #004=KXX$TRNOTP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:34 Page:99   
      654    11565
      655    11566        /*****************************************************************
      656    11567        *                                                                *
      657    11568        *                           Procedure                            *
      658    11569        *                                                                *
      659    11570        *****************************************************************/
      660    11571        /* TRUNCATE THE CURRENT OUTPUT BUFFER, AND TAKE CARE OF PARITY GENERATION. */
      661    11572
      662    11573    1       X29$ = KV$VDI.USRCTX$;
      663    11574    1       IF (KV$VDI.OTPBFR_.ADR$ = ADDR(NIL))
      664    11575    1          THEN
      665    11576    1             RETURN;
      666    11577
      667    11578        /* THE CURRENT BUFFER HASN'T BEEN TRUNCATED YET.                              */
      668    11579
      669    11580    1       DAT$ = KX$X29.SND.TAL$;
      670    11581    1       KX$X29_OTPBFR.BYTCNT = KV$VDI.OTPBFR_.BYTX-LENGTHC(KX$X29_OTPBFR);
      671    11582    1       Y@BYTCNT = KX$X29_OTPBFR.BYTCNT;
      672    11583    1       IF Y@BYTCNT~=0 OR KX$X29_OTPBFR.NMBMRK~=0
      673    11584    1          THEN
      674    11585    2             DO;
      675    11586
      676    11587        /*
      677    11588           See if we should generate parity.
      678    11589        */
      679    11590    2                CHRCNT = KV$VDI.OTPBFR_.BYTX - KX$X29.PRTX;
      680    11591    2                IF CHRCNT > 0 AND KV$VDI.PRTTYP ~= %KV_PRTTYP_NONE
      681    11592    2                   AND KV$VDI.PRTTYP ~= %KV_PRTTYP_ZERO
      682    11593    2                   THEN
      683    11594    3                      DO;
      684    11595    3                         PRTTBL$ = KX_PRT_$ ( KV$VDI.PRTTYP );
      685    11596    3                         CALL XLATE ( SUBSTR ( KV$VDI.OTPBFR_.ADR$->CHRSTR, KX$X29.PRTX
             11596                                  , CHRCNT ),
      686    11597    3                            PRTTBL, SUBSTR ( KV$VDI.OTPBFR_.ADR$->CHRSTR, KX$X29.PRTX,
             11597                                     CHRCNT ) );
      687    11598    3                      END;
      688    11599    2                KX$X29.PRTX = LENGTHC ( KX$X29_OTPBFR ) - 1;
PL6.E3A0      #004=KXX$TRNOTP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:34 Page:100  
      689    11600        /* The buffer has data in it, so take it away from VDH.                      */
      690    11601
      691    11602    2                KV$VDI.OTPBFR_.ADR$ = ADDR(NIL);
      692    11603    2                KV$VDI.OTPBFR_.BYTSIZ = 0;
      693    11604    2                Y@BYTCNT = Y@BYTCNT + LENGTHC(KX$X29_OTPBFR);
      694    11605    2                IF (Y@BYTCNT >= KA_OTPBFRBYTSIZ_SML)
      695    11606    2                   THEN
      696    11607    3                      DO;
      697    11608
      698    11609        /* This output buffer's data exceeds (or equals) what fits in                 */
      699    11610        /* a small buffer. Remember that for the next output buffer                   */
      700    11611        /* get operation.                                                             */
      701    11612
      702    11613    3                         KX$X29.PRVOTPBFRDATEXCSML = '1'B;
      703    11614    3                         IF (Y@BYTCNT >= Y_POWER_OF_2(KX$X29_OTPBFR.BYTSIZLOG2))
      704    11615    3                            THEN
      705    11616
      706    11617        /* This output buffer is full.                                                */
      707    11618
      708    11619    3                               IF (KX$X29_OTPBFR.BYTSIZLOG2 = KA_OTPBFRBYTSIZ_SMLLOG2)
      709    11620    3                                  THEN
      710    11621
      711    11622        /* This is a small output buffer.                                             */
      712    11623
      713    11624    3                                     KX_STATS_X29.OTPBFRFULCNT_SML = KX_STATS_X29.
             11624                                              OTPBFRFULCNT_SML+1;
      714    11625    3                                  ELSE
      715    11626
      716    11627        /* This is a big output buffer.                                               */
      717    11628
      718    11629    3                                     KX_STATS_X29.OTPBFRFULCNT_BIG = KX_STATS_X29.
             11629                                              OTPBFRFULCNT_BIG+1;
      719    11630    3                      END;
      720    11631    2                   ELSE
      721    11632    3                      DO;
      722    11633    3                         KX$X29.PRVOTPBFRDATEXCSML = '0'B;
      723    11634    3                      END /* IF */;
PL6.E3A0      #004=KXX$TRNOTP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:34 Page:101  
      724    11635    2                RETURN;
      725    11636    2             END /* IF */;
      726    11637    1          ELSE
      727    11638    1             ALTRETURN;   /*  No buffer truncated. */
      728    11639    1   END KXX$TRNOTP;
      729    11640
      730    11641        %EOD;

PL6.E3A0      #004=KXX$TRNOTP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:34 Page:102  
--  Include file information  --

   KA_GLB.:E05TOU  is referenced.
   KV_ASCCHR_E.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KV$GLBCTX.:E05TOU  is referenced.
   KA_GLB_E.:E05TOU  is referenced.
   KXX_MACROS_M.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   KX_DATA_C.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure KXX$TRNOTP.

   Procedure KXX$TRNOTP requires 156 words for executable code.
   Procedure KXX$TRNOTP requires 19 words of local(AUTO) storage.

PL6.E3A0      #004=KXX$TRNOTP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:34 Page:103  

 Object Unit name= KXX$TRNOTP                                 File name= KXX$MSC.:E05TOU
 UTS= JUL 30 '97 02:34:34.92 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS     16     10  KXX$TRNOTP
    1   Proc  even  none   156     9C  KXX$TRNOTP
    2  RoData even  none     1      1  KXX$TRNOTP

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        1  KXX$TRNOTP

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET
                       nStd      0 X6C_MAT
                       nStd      0 X6A_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KA_OTPBFRBYTSIZ_SML                   KA_OTPBFRBYTSIZ_SMLLOG2               KX_STATS_X29
     KX_PRT_$                         r    G$ROS$
PL6.E3A0      #004=KXX$TRNOTP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:34 Page:104  


      561        1        /*T***********************************************************/
      562        2        /*T*                                                         */
      563        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      564        4        /*T*                                                         */
      565        5        /*T***********************************************************/
      566        6        %EJECT;
PL6.E3A0      #004=KXX$TRNOTP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:34 Page:105  
      567        7
      568        8        /*X*  PLM = 4, IND=3, CTI=3, DCI=6, IAD=0, DTI=6, AND=Y, CSI=3, THI=3, STI=3, DMC=Y
                 8         */
      569        9        KXX$TRNOTP: PROC ( KV$VDI ) ALTRET;

      9   1 000000  D380 0000 0000  xent KXX$TRNOTP      LNJ,B5   X6A_AUTO_1
          1 000003       0013 0001                       DC       19,1

      570       10        /*P*
      571       11             NAME: KXX$TRNOTP
      572       12             PURPOSE: Truncate the current output buffer and take care of
      573       13                      output parity generation.
      574       14        */
      575       15
      576       16        %EJECT;
PL6.E3A0      #004=KXX$TRNOTP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:34 Page:106  
      577       17
      578       18        /*****************************************************************
      579       19        *                                                                *
      580       20        *                           Include files                        *
      581       21        *                                                                *
      582       22        *****************************************************************/
      583       23
      584       24        %INCLUDE LCP_6;
      585     4303        %INCLUDE KX_EQUS_E;
      586     4742        %INCLUDE KX_DATA_C;
      587     4810        %INCLUDE KX_MACROS_M;
      588     5581        %INCLUDE KV$GLB;
      589     6000        %INCLUDE KXX_MACROS_M;
      590     6342        %INCLUDE KA_GLB_E;
      591     6420        %KA_HLTOTP_E;
      592     6429        %INCLUDE KV$GLBCTX;
      593     6874        %INCLUDE KV_GLBCNS_E;
      594     7215        %KV_PRTTYP_E;
      595     7222        %INCLUDE K_ID_E;
      596     7272        %K#ENTID_E;
      597     7291        %K#LYRID_E;
      598     7298        %INCLUDE KL_MACRO_C;
      599    10650        %INCLUDE KL_AFCN_C;
      600    10751        %INCLUDE KH$STT;
      601    10781        %INCLUDE KV_ASCCHR_E;
      602    10918        %INCLUDE KA_GLB;
      603    10995        %KA_MSC;
      604    11017
      605    11018        /*****************************************************************
      606    11019        *                                                                *
      607    11020        *                           Auto                                 *
      608    11021        *                                                                *
      609    11022        *****************************************************************/
      610    11023
      611    11024    1   DCL Y@BYTCNT UBIN;
      612    11025    1   DCL CHRCNT UBIN;
      613    11026    1   DCL PRTTBL$ PTR;
PL6.E3A0      #004=KXX$TRNOTP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:34 Page:107  
      614    11027    1   DCL VDI$ PTR;
      615    11028    1   DCL DAT$ PTR;
      616    11029    1   DCL X29$ PTR;
      617    11030        %KV$VDI ( STCLASS = );
      618    11101
      619    11102        /*****************************************************************
      620    11103        *                                                                *
      621    11104        *                           Based                                *
      622    11105        *                                                                *
      623    11106        *****************************************************************/
      624    11107
      625    11108        %KX$X29 ( STCLASS = "BASED(X29$)" );
      626    11148        %KX$X29_OTPBFR ( STCLASS = " BASED ( DAT$ ) " );
      627    11171    1   DCL PRTTBL(0:127) CHAR(1) BASED (PRTTBL$) CALIGNED;
      628    11172
      629    11173    1   DCL CHRSTR CHAR(2000) BASED CALIGNED;
      630    11174
      631    11175        /*****************************************************************
      632    11176        *                                                                *
      633    11177        *                           Static                               *
      634    11178        *                                                                *
      635    11179        *****************************************************************/
      636    11180
      637    11181        %KX_STATS_X29;
      638    11522
      639    11523
      640    11524        /* constant array containing powers of 2 */
      641    11525
      642    11526    1   DCL Y_POWER_OF_2(0:15) UBIN WORD CONSTANT INIT(1,2,4,8,16,32,64,128,
      643    11527    1    256,512,1024,2048,4096,8192,16384,32768);
      644    11528
      645    11529        /*****************************************************************
      646    11530        *                                                                *
      647    11531        *                           Symref                               *
      648    11532        *                                                                *
      649    11533        *****************************************************************/
      650    11534
PL6.E3A0      #004=KXX$TRNOTP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:34 Page:108  
      651    11535        %KX_PRTTBL;
      652    11563
      653    11564        %EJECT;
PL6.E3A0      #004=KXX$TRNOTP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:34 Page:109  
      654    11565
      655    11566        /*****************************************************************
      656    11567        *                                                                *
      657    11568        *                           Procedure                            *
      658    11569        *                                                                *
      659    11570        *****************************************************************/
      660    11571        /* TRUNCATE THE CURRENT OUTPUT BUFFER, AND TAKE CARE OF PARITY GENERATION. */
      661    11572
      662    11573    1       X29$ = KV$VDI.USRCTX$;

  11573   1 000005  ECC7 0004                            LDB,B6   @KV$VDI,AUTO
          1 000007  DCC6 0002                            LDB,B5   2,B6
          1 000009  DFC7 000E                            STB,B5   X29$,AUTO

      663    11574    1       IF (KV$VDI.OTPBFR_.ADR$ = ADDR(NIL))

  11574   1 00000B  8DC6 000A                            CMN      10,B6
          1 00000D  0981 0004                            BNE      s:11580,PREL

      664    11575    1          THEN
      665    11576    1             RETURN;

  11576   1 00000F  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      666    11577
      667    11578        /* THE CURRENT BUFFER HASN'T BEEN TRUNCATED YET.                              */
      668    11579
      669    11580    1       DAT$ = KX$X29.SND.TAL$;

  11580   1 000012  CCC5 0010                            LDB,B4   16,B5
          1 000014  CFC7 000C                            STB,B4   DAT$,AUTO

      670    11581    1       KX$X29_OTPBFR.BYTCNT = KV$VDI.OTPBFR_.BYTX-LENGTHC(KX$X29_OTPBFR);

  11581   1 000016  E846 000C                            LDR,R6   12,B6
          1 000018  6EF8                                 ADV,R6   -8
          1 000019  EAC4 0002                            SRM,R6,'03FF'X    2,B4
PL6.E3A0      #004=KXX$TRNOTP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:34 Page:110  
          1 00001B       03FF

      671    11582    1       Y@BYTCNT = KX$X29_OTPBFR.BYTCNT;

  11582   1 00001C  E844 0002                            LDR,R6   2,B4
          1 00001E  E570 03FF                            AND,R6   1023,IMO
          1 000020  EF47 0006                            STR,R6   Y@BYTCNT,AUTO

      672    11583    1       IF Y@BYTCNT~=0 OR KX$X29_OTPBFR.NMBMRK~=0

  11583   1 000022  6981 0005                            BNEZ,R6  s:11590,PREL
          1 000024  D2C4 0003                            LLH,R5   3,B4
          1 000026  5901 0072                            BEZ,R5   s:11638,PREL

      673    11584    1          THEN
      674    11585    2             DO;

      675    11586
      676    11587        /*
      677    11588           See if we should generate parity.
      678    11589        */
      679    11590    2                CHRCNT = KV$VDI.OTPBFR_.BYTX - KX$X29.PRTX;

  11590   1 000028  D846 000C                            LDR,R5   12,B6
          1 00002A  D245 0019                            SUB,R5   25,B5
          1 00002C  DF47 0007                            STR,R5   CHRCNT,AUTO

      680    11591    2                IF CHRCNT > 0 AND KV$VDI.PRTTYP ~= %KV_PRTTYP_NONE

  11591   1 00002E  5901 0028                            BEZ,R5   s:11599,PREL
          1 000030  C2C6 0019                            LLH,R4   25,B6
          1 000032  4901 0024                            BEZ,R4   s:11599,PREL
          1 000034  4D04                                 CMV,R4   4
          1 000035  0901 0021                            BE       s:11599,PREL

      681    11592    2                   AND KV$VDI.PRTTYP ~= %KV_PRTTYP_ZERO
      682    11593    2                   THEN
PL6.E3A0      #004=KXX$TRNOTP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:34 Page:111  
      683    11594    3                      DO;

      684    11595    3                         PRTTBL$ = KX_PRT_$ ( KV$VDI.PRTTYP );

  11595   1 000037  B854                                 LDR,R3   R4
          1 000038  BCB0 0000 0000  xsym                 LDB,B3   KX_PRT_$,R3
          1 00003B  BFC7 0008                            STB,B3   PRTTBL$,AUTO

      685    11596    3                        CALL XLATE ( SUBSTR ( KV$VDI.OTPBFR_.ADR$->CHRSTR, KX$X29.PRTX
             11596                                  , CHRCNT ),

  11596   1 00003D  ACC6 000A                            LDB,B2   10,B6
          1 00003F  A845 0019                            LDR,R2   25,B5
          1 000041  9800 0000 0000  02                   LDR,R1   0
          1 000044  EB90 0000 0000  01                   LAB,B6   s:9,R1
          1 000047  AF47 0010                            STR,R2   X29$+2,AUTO
          1 000049  AFC7 0011                            STB,B2   X29$+3,AUTO
          1 00004B  E855                                 LDR,R6   R5
          1 00004C  BB82                                 LAB,B3   ,B2
          1 00004D  B852                                 LDR,R3   R2
          1 00004E  F855                                 LDR,R7   R5
          1 00004F  9CC7 0008                            LDB,B1   PRTTBL$,AUTO
          1 000051  1C00                                 LDV,R1   0
          1 000052  D870 00FF                            LDR,R5   255,IMO
          1 000054  D380 0000 0000  xent                 LNJ,B5   X6C_MAT

      686    11597    3                            PRTTBL, SUBSTR ( KV$VDI.OTPBFR_.ADR$->CHRSTR, KX$X29.PRTX,
             11597                                     CHRCNT ) );
      687    11598    3                      END;

      688    11599    2                KX$X29.PRTX = LENGTHC ( KX$X29_OTPBFR ) - 1;

  11599   1 000057  ECC7 000E                            LDB,B6   X29$,AUTO
          1 000059  6C07                                 LDV,R6   7
          1 00005A  EF46 0019                            STR,R6   25,B6

      689    11600        /* The buffer has data in it, so take it away from VDH.                      */
PL6.E3A0      #004=KXX$TRNOTP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:34 Page:112  
      690    11601
      691    11602    2                KV$VDI.OTPBFR_.ADR$ = ADDR(NIL);

  11602   1 00005C  DB80 0000 0000                       LAB,B5   0
          1 00005F  CCC7 0004                            LDB,B4   @KV$VDI,AUTO
          1 000061  DFC4 000A                            STB,B5   10,B4

      692    11603    2                KV$VDI.OTPBFR_.BYTSIZ = 0;

  11603   1 000063  8744 000D                            CL       13,B4

      693    11604    2                Y@BYTCNT = Y@BYTCNT + LENGTHC(KX$X29_OTPBFR);

  11604   1 000065  D847 0006                            LDR,R5   Y@BYTCNT,AUTO
          1 000067  5E08                                 ADV,R5   8
          1 000068  DF47 0006                            STR,R5   Y@BYTCNT,AUTO

      694    11605    2                IF (Y@BYTCNT >= KA_OTPBFRBYTSIZ_SML)

  11605   1 00006A  D900 0000 0000  xsym                 CMR,R5   KA_OTPBFRBYTSIZ_SML
          1 00006D  0201 0025                            BL       s:11633,PREL

      695    11606    2                   THEN
      696    11607    3                      DO;

      697    11608
      698    11609        /* This output buffer's data exceeds (or equals) what fits in                 */
      699    11610        /* a small buffer. Remember that for the next output buffer                   */
      700    11611        /* get operation.                                                             */
      701    11612
      702    11613    3                         KX$X29.PRVOTPBFRDATEXCSML = '1'B;

  11613   1 00006F  8946 0015                            LBT,'2000'X       21,B6
  11613   1 000071       2000

      703    11614    3                         IF (Y@BYTCNT >= Y_POWER_OF_2(KX$X29_OTPBFR.BYTSIZLOG2))

PL6.E3A0      #004=KXX$TRNOTP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:34 Page:113  
  11614   1 000072  DCC7 000C                            LDB,B5   DAT$,AUTO
          1 000074  B845 0002                            LDR,R3   2,B5
          1 000076  304A                                 SOR,R3   10
          1 000077  B570 000F                            AND,R3   15,IMO
          1 000079  D930 0000 0000  00                   CMR,R5   Y_POWER_OF_2,R3
          1 00007C  0201 0019                            BL       s:11635,PREL

      704    11615    3                            THEN
      705    11616
      706    11617        /* This output buffer is full.                                                */
      707    11618
      708    11619    3                               IF (KX$X29_OTPBFR.BYTSIZLOG2 = KA_OTPBFRBYTSIZ_SMLLOG2)

  11619   1 00007E  B900 0000 0000  xsym                 CMR,R3   KA_OTPBFRBYTSIZ_SMLLOG2
          1 000081  0981 0009                            BNE      s:11629,PREL

      709    11620    3                                  THEN
      710    11621
      711    11622        /* This is a small output buffer.                                             */
      712    11623
      713    11624    3                                     KX_STATS_X29.OTPBFRFULCNT_SML = KX_STATS_X29.
             11624                                              OTPBFRFULCNT_SML+1;

  11624   1 000083  8A80 0000 0047  xsym                 INC      KX_STATS_X29+71
          1 000086  8E80 0000 0046  xsym                 CAD      KX_STATS_X29+70
          1 000089  0F81 000C                            B        s:11635,PREL

      714    11625    3                                  ELSE
      715    11626
      716    11627        /* This is a big output buffer.                                               */
      717    11628
      718    11629    3                                     KX_STATS_X29.OTPBFRFULCNT_BIG = KX_STATS_X29.
             11629                                              OTPBFRFULCNT_BIG+1;

  11629   1 00008B  8A80 0000 0049  xsym                 INC      KX_STATS_X29+73
          1 00008E  8E80 0000 0048  xsym                 CAD      KX_STATS_X29+72

PL6.E3A0      #004=KXX$TRNOTP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:34 Page:114  
      719    11630    3                      END;

  11630   1 000091  0F81 0004                            B        s:11635,PREL

      720    11631    2                   ELSE
      721    11632    3                      DO;

      722    11633    3                         KX$X29.PRVOTPBFRDATEXCSML = '0'B;

  11633   1 000093  8846 0015                            LBF,'2000'X       21,B6
  11633   1 000095       2000

      723    11634    3                      END /* IF */;

      724    11635    2                RETURN;

  11635   1 000096  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      725    11636    2             END /* IF */;
      726    11637    1          ELSE
      727    11638    1             ALTRETURN;   /*  No buffer truncated. */

  11638   1 000099  C380 0000 0000  xent                 LNJ,B4   X6A_AALT
      728    11639    1   END KXX$TRNOTP;
      729    11640
      730    11641        %EOD;

PL6.E3A0      #004=KXX$TRNOTP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:34 Page:115  
--  Include file information  --

   KA_GLB.:E05TOU  is referenced.
   KV_ASCCHR_E.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KV$GLBCTX.:E05TOU  is referenced.
   KA_GLB_E.:E05TOU  is referenced.
   KXX_MACROS_M.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   KX_DATA_C.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure KXX$TRNOTP.
PL6.E3A0      #004=KXX$TRNOTP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:34 Page:116  

 **** Variables and constants ****

  ****  Section 000 RoData KXX$TRNOTP

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(16)    r     1 Y_POWER_OF_2(0:15)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @KV$VDI                    7-0-0/w UBIN(16)    r     1 CHRCNT
     C-0-0/w PTR         r     1 DAT$                      *0-0-0/w STRC(512)   r     1 KV$VDI
     8-0-0/w PTR         r     1 PRTTBL$                    E-0-0/w PTR         r     1 X29$
     6-0-0/w UBIN(16)    r     1 Y@BYTCNT

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(16)    r     1 KA_OTPBFRBYTSIZ_SML
     0-0-0/w UBIN(16)    r     1 KA_OTPBFRBYTSIZ_SMLLOG2
     0-0-0/w PTR         r     1 KX_PRT_$(0:4)
     0-0-0/w STRC(1248)  r     1 KX_STATS_X29

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(2000)  r     1 CHRSTR                     0-0-0/w STRC(576)   r     1 KX$X29
     0-0-0/w STRC(64)    r     1 KX$X29_OTPBFR              0-0-0/c CHAR        r     1 PRTTBL(0:127)

PL6.E3A0      #004=KXX$TRNOTP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:34 Page:117  

   Procedure KXX$TRNOTP requires 156 words for executable code.
   Procedure KXX$TRNOTP requires 19 words of local(AUTO) storage.
PL6.E3A0      #004=KXX$TRNOTP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:34 Page:118  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=KXX$TRNOTP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:34 Page:119  
          MINI XREF LISTING

CHRCNT
     11025**DCL     11590<<ASSIGN  11591>>IF      11596>>CALLBLT 11596>>CALLBLT
CHRSTR
     11173**DCL     11596<<CALLBLT 11596>>CALLBLT
DAT$
     11028**DCL     11162--IMP-PTR 11580<<ASSIGN  11581>>ASSIGN  11582>>ASSIGN  11583>>IF      11614>>IF
     11619>>IF
KA_OTPBFRBYTSIZ_SML
     11008**DCL     11605>>IF
KA_OTPBFRBYTSIZ_SMLLOG2
     11009**DCL     11619>>IF
KV$VDI
     11051**DCL         9--PROC
KV$VDI.OTPBFR_.ADR$
     11077**DCL     11574>>IF      11596>>CALLBLT 11596>>CALLBLT 11602<<ASSIGN
KV$VDI.OTPBFR_.BYTSIZ
     11077**DCL     11603<<ASSIGN
KV$VDI.OTPBFR_.BYTX
     11077**DCL     11581>>ASSIGN  11590>>ASSIGN
KV$VDI.PRTTYP
     11085**DCL     11591>>IF      11591>>IF      11595>>ASSIGN
KV$VDI.USRCTX$
     11051**DCL     11573>>ASSIGN
KX$X29.HLTOTP
     11137**DCL     11137--REDEF
KX$X29.HLTOTPNXTBFR
     11140**DCL     11141--REDEF
KX$X29.PRTX
     11144**DCL     11590>>ASSIGN  11596>>CALLBLT 11596>>CALLBLT 11599<<ASSIGN
KX$X29.PRVOTPBFRDATEXCSML
     11138**DCL     11613<<ASSIGN  11633<<ASSIGN
KX$X29.SND.TAL$
PL6.E3A0      #004=KXX$TRNOTP File=KXX$MSC.:E05TSI                               WED 07/30/97 02:34 Page:120  
     11134**DCL     11580>>ASSIGN
KX$X29_OTPBFR
     11162**DCL     11581--ASSIGN  11599--ASSIGN  11604--ASSIGN
KX$X29_OTPBFR.BYTCNT
     11167**DCL     11581<<ASSIGN  11582>>ASSIGN
KX$X29_OTPBFR.BYTSIZLOG2
     11167**DCL     11614>>IF      11619>>IF
KX$X29_OTPBFR.HLTOTP
     11166**DCL     11167--REDEF
KX$X29_OTPBFR.NMBMRK
     11168**DCL     11583>>IF
KX_PRT_$
     11560**DCL     11595>>ASSIGN
KX_STATS_X29.OTPBFRFULCNT_BIG
     11519**DCL     11629<<ASSIGN  11629>>ASSIGN
KX_STATS_X29.OTPBFRFULCNT_SML
     11518**DCL     11624<<ASSIGN  11624>>ASSIGN
KX_STATS_X29.REQSTATS.DSPMSK
     11442**DCL     11448--REDEF
KX_STATS_X29.REQSTATS.SLCMSK
     11483**DCL     11490--REDEF
PRTTBL
     11171**DCL     11596>>CALLBLT
PRTTBL$
     11026**DCL     11171--IMP-PTR 11595<<ASSIGN  11596>>CALLBLT
X29$
     11029**DCL     11127--IMP-PTR 11573<<ASSIGN  11580>>ASSIGN  11590>>ASSIGN  11596>>CALLBLT 11596>>CALLBLT
     11599>>ASSIGN  11613>>ASSIGN  11633>>ASSIGN
Y@BYTCNT
     11024**DCL     11582<<ASSIGN  11583>>IF      11604<<ASSIGN  11604>>ASSIGN  11605>>IF      11614>>IF
Y_POWER_OF_2
     11526**DCL     11614>>IF

PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:121  
      731        1        /*T***********************************************************/
      732        2        /*T*                                                         */
      733        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      734        4        /*T*                                                         */
      735        5        /*T***********************************************************/
      736        6        %EJECT;
PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:122  
      737        7        /*P*
      738        8             NAME: KXX$INTCNC
      739        9             PURPOSE: Call VDH to get VDI context and then do the actual
      740       10                      connect.
      741       11        */
      742       12
      743       13        KXX$INTCNC: PROC ( PRM_DUMMY, RLCID ) ALTRET;
      744       14
      745       15
      746       16        /*****************************************************************
      747       17        *                                                                *
      748       18        *                           Include files                        *
      749       19        *                                                                *
      750       20        *****************************************************************/
      751       21
      752       22        %INCLUDE LCP_6;
      753     4301        %INCLUDE KH_MACRO_C;
      754     5044        %INCLUDE KX_MACROS_M;
      755     5815        %INCLUDE KXX_MACROS_M;
      756     6157        %INCLUDE KA_GLB_E;
      757     6235        %KA_HLTOTP_E;
      758     6244        %INCLUDE KX_EQUS_E;
      759     6683        %INCLUDE KV$GLB;
      760     7102        %INCLUDE KV$GLBCTX;
      761     7547        %INCLUDE KV_GLB_M;
      762     7669        %INCLUDE KV$VDH;
      763     8100        %INCLUDE KV_GLBCNS_E;
      764     8441        %KV_VDH_EVT_ID_E;
      765     8447        %KV_INPUNT_E;
      766     8452        %KV_USR_EVT_ID_E;
      767     8472        %INCLUDE KH$CHN;
      768     8594        %INCLUDE KH_CHN;
      769     8634        %INCLUDE K_ID_E;
      770     8684        %K#ENTID_E;
      771     8703        %K#LYRID_E;
      772     8710        %INCLUDE KL_MACRO_C;
      773    12062        %INCLUDE KL_AFCN_C;
PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:123  
      774    12163        %INCLUDE KL_SUPER_C;
      775    15065        %INCLUDE KH$STT;
      776    15095
      777    15096        %INCLUDE CP_6_SUBS;
      778    15636        %INCLUDE KA_GLB;
      779    15713        %INCLUDE KV_ASCCHR_E;
      780    15850        %EJECT;
PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:124  
      781    15851        /*****************************************************************
      782    15852        *                                                                *
      783    15853        *                           Auto/param                           *
      784    15854        *                                                                *
      785    15855        *****************************************************************/
      786    15856
      787    15857    1   DCL PRM_DUMMY CHAR(DUMMY) ALIGNED;
      788    15858    1   DCL DUMMY REDEF PRM_DUMMY UBIN ALIGNED;
      789    15859        %KX$X29 ( STCLASS = REDEF PRM_DUMMY );
      790    15899        %KX$LINKDEV ( STCLASS = REDEF PRM_DUMMY );
      791    15926    1   DCL 1 RLCID,    /* this is how VDH defines RLCID */
      792    15927    1         2 * BIT (16),
      793    15928    1         2 LDCTX UBIN WORD;
      794    15929
      795    15930    1   DCL 1 LGN_,
      796    15931    1         2 LNG UBIN ALIGNED,
      797    15932    1         2 ADR PTR ALIGNED;
      798    15933    1   DCL LGNVEC REDEF LGN_ VECTOR;
      799    15934    1   DCL LINSPDX UBIN;
      800    15935        %KV$VDH_INT ( NAME = KV@VDH_INT, STCLASS = AUTO );
      801    15972        %KV$VDH_CNC ( NAME = KV@VDH_CNC, STCLASS = AUTO );
      802    16064    1   DCL VDI$ PTR;
      803    16065        %FPT_X25 ( FPTN = CALL_FPT, STCLASS = AUTO );
      804    16109        %KV@USRENT;
      805    16129        %EQU KV_VDI = CHARTEXT('KV$PTR.VDI$->KV$VDI');
      806    16130    1   DCL CNC_TYP UBIN;
      807    16131
      808    16132        %EJECT;
PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:125  
      809    16133        /*****************************************************************
      810    16134        *                                                                *
      811    16135        *                           Based                                *
      812    16136        *                                                                *
      813    16137        *****************************************************************/
      814    16138
      815    16139        %KV$VDI ( STCLASS = "BASED (VDI$)" );
      816    16210        %KV$STT;
      817    16604        %KV$PTR;
      818    16647    1   DCL 1 BVECTOR BASED ALIGNED,
      819    16648    1         2 BOUND UBIN,
      820    16649    1         2 ADR$ PTR;
      821    16650        %KV$MRD;
      822    16697        %KH$CHN;
      823    16821        %VLP_SCODE ( FPTN=B$SCODE, STCLASS=BASED );
      824    16882        %EJECT;
PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:126  
      825    16883        /*****************************************************************
      826    16884        *                                                                *
      827    16885        *                           Constant/Symref                      *
      828    16886        *                                                                *
      829    16887        *****************************************************************/
      830    16888
      831    16889        %KH_CHNDAT;
      832    16907    1   DCL KX_LINSPDX_X3_TO_CP6(0:18) UBIN BYTE CALIGNED SYMREF;
      833    16908        %KV$USRPRM ( NAME = KX_USRPRM, STCLASS = SYMREF );
      834    16959        %KX_STATS_X29;
      835    17300        %KV$VDH_INT ( NAME = KV_VDH_INT, STCLASS = SYMREF );
      836    17337        %KV$VDH_CNC ( NAME = KV_VDH_CNC, STCLASS = SYMREF );
      837    17429        %KV$VDH_EVT ( ID = KV_VDH_EVT_ID_RLSVDI, NAME = KV_VDH_EVT_RLSVDI, STCLASS = SYMREF
             17429            );
      838    17464
      839    17465        %KA_MSC;
      840    17487
      841    17488
      842    17489        %EJECT;
PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:127  
      843    17490        /*****************************************************************
      844    17491        *                                                                *
      845    17492        *                           Entry references                     *
      846    17493        *                                                                *
      847    17494        *****************************************************************/
      848    17495
      849    17496    1   DCL KXP$PACKET ENTRY(1) ALTRET;
      850    17497    1   DCL KXX$X29 ENTRY(1);
      851    17498    1   DCL KXX$RLSCTX ENTRY(1);
      852    17499    1   DCL KVV$INT ENTRY(1) ALTRET;
      853    17500    1   DCL KVV$VDI ENTRY (1) ALTRET;
      854    17501    1   DCL KHD$SCREECH ENTRY (1);
      855    17502
      856    17503        %EJECT;
PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:128  
      857    17504
      858    17505        /*****************************************************************
      859    17506        *                                                                *
      860    17507        *                           Procedure                            *
      861    17508        *                                                                *
      862    17509        *****************************************************************/
      863    17510
      864    17511
      865    17512
      866    17513    1       IF KX$X29.SBR$ = ENTADDR(KXX$X29)
      867    17514    1          THEN
      868    17515    1             CNC_TYP = %KXX_TYP_X29#;
      869    17516    1          ELSE
      870    17517    1             IF KX$X29.SBR$ = ENTADDR(NIL)
      871    17518    1                THEN
      872    17519    1                   CNC_TYP = %KXX_TYP_CNTL#;
      873    17520    1                ELSE
      874    17521    1                   CNC_TYP = %KXX_TYP_LINKDEV#;
      875    17522    1       KV@VDH_INT = KV_VDH_INT;
      876    17523    1       KV@VDH_INT.CHN$ = KX$X29.CHN$;
      877    17524    1       KV@VDH_INT.USRCTX$ = ADDR(KX$X29);
      878    17525    1       KV@VDH_INT.USRPRM$ = ADDR(KX_USRPRM);
      879    17526        /*
      880    17527           Get the line speed from the X.3 params.
      881    17528        */
      882    17529    1       IF CNC_TYP = %KXX_TYP_X29#
      883    17530    1          THEN
      884    17531    2             DO;
      885    17532    2                LINSPDX = KX$X29.X3PRM ( %KX_X3PRMX_LINSPD# );
      886    17533    2                LINSPDX = KX_LINSPDX_X3_TO_CP6 ( LINSPDX );
      887    17534    2             END;
      888    17535    1          ELSE
      889    17536    1             LINSPDX = 15;
      890    17537    1       KV@VDH_INT.RCVFLWCTRMAXCRD = KA_OTPBLKLMT ( LINSPDX );
      891    17538        /* CALL VDI TO GET THE KV$VDI BLOCK                                           */
      892    17539
      893    17540            %KV$USRENT ( VDI$ = "ADDR(NIL)" );
PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:129  
             17546    1              KV@USRENT.SVDPTR$ = KV$PTR$;
      894    17566    1       CALL KVV$INT (KV@VDH_INT)
      895    17567    1          WHENALTRETURN
      896    17568    2             DO;
      897    17569        /*N*  Should send "no context... " message like async. But simply
      898    17570              clear VC for now.
      899    17571        */
      900    17572    2                IF CNC_TYP = %KXX_TYP_X29#
      901    17573    2                   THEN
      902    17574    3                      DO;
      903    17575    3                         CALL Y$CAL_PAC ;
      904    17576    3                         CALL KXX$RLSCTX (KX$X29);
      905    17577    3                      END;
      906    17578
      907    17579    2                ALTRETURN;
      908    17580    2             END; /* WHENALTRETURN */
      909    17581    1       KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_DLTOTP) = '1'B;
      910    17582    1       KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_DSC) = '1'B;
      911    17583    1       KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_GETSTR) = '1'B;
      912    17584    1       KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_HLTOTP) = '1'B;
      913    17585    1       KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_RLSSTR) = '1'B;
      914    17586    1       KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_RLSVDI) = '1'B;
      915    17587    1       KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_SCH) = '1'B;
      916    17588    1       KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_VDHEXT) = '1'B;
      917    17589    1       KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_ENDSETPRM) = '1'B;
      918    17590    1       KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_LGNRJC) = '1'B;
      919    17591    1       KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_LGNACP) = '1'B;
      920    17592    1       IF CNC_TYP = %KXX_TYP_CNTL#
      921    17593    1          THEN
      922    17594    2             DO;
      923    17595    2                KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_CLS) = '1'B;
      924    17596    2                KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_OPN) = '1'B;
      925    17597    2             END;
      926    17598    1       IF CNC_TYP ~= %KXX_TYP_X29#
      927    17599    1          THEN
      928    17600    2             DO;
      929    17601    2                KV@VDH_INT.VDI$->KV$VDI.USEOTPBFRTRN = '0'B;
PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:130  
      930    17602    2                KV@VDH_INT.VDI$->KV$VDI.USEOTPBFRBNR = '0'B;
      931    17603    2                KV@VDH_INT.VDI$->KV$VDI.INPUNT = %KV_INPUNT_RCR;
      932    17604    2             END;
      933    17605    1          ELSE
      934    17606    1             KV@VDH_INT.VDI$->KV$VDI.INPUNT = %KV_INPUNT_CHR;
      935    17607
      936    17608        /* SAVE POINTER TO VDI BLOCK                                                  */
      937    17609
      938    17610    1       KX$X29.VDI$ = KV@VDH_INT.VDI$;
      939    17611
      940    17612
      941    17613        /* CALL KVV$VDI TO DO ACTUAL CONNECT                                          */
      942    17614
      943    17615    1       KV@VDH_CNC = KV_VDH_CNC;
      944    17616    1       KV@VDH_CNC.PRF_.ADR$ = ADDR(KH_PROFILE_)->BVECTOR.ADR$;
      945    17617    1       KV@VDH_CNC.PRF_.BYTSIZ = ADDR(KH_PROFILE_)->BVECTOR.BOUND+1;
      946    17618    1       KV@VDH_CNC.LINSPD = LINSPDX;
      947    17619    1       KV@VDH_CNC.LCLENDPNTID = KX$X29.CHN$ -> KH$CHN.TERMID;
      948    17620    1       KV@VDH_CNC.LCLENDPNTID.TERM.TERM_NAME = '        ';
      949    17621    1       KV@VDH_CNC.LCLENDPNTID.TTYP = %KLTY_TTY#;  /*N* What TTYP should be used? */
      950    17622    1       IF CNC_TYP = %KXX_TYP_CNTL# /* control connection for LINKDEV */
      951    17623    1          THEN
      952    17624    2             DO;
      953    17625    2                LGN_.LNG = LENGTHC(KX$LINKDEV.LOGON) - 1;
      954    17626    2                LGN_.ADR = ADDR(KX$LINKDEV.LOGON);
      955    17627    2                KV@VDH_CNC.LGN_ = LGNVEC;
      956    17628    2             END;
      957    17629    1       IF ADDR(RLCID) ~= ADDR(NIL)   /* a circuit belonging to a LINKDEV */
      958    17630    1          THEN
      959    17631    1             KV@VDH_CNC.DSTNTWADR = RLCID;
      960    17632    1       CALL KVV$VDI (KV@VDH_CNC)
      961    17633    1          WHENALTRETURN
      962    17634    2             DO;
      963    17635        /*N*  Should print "no context... " message like async. For now,
      964    17636           clear the VC.
      965    17637        */
      966    17638    2                IF CNC_TYP = %KXX_TYP_X29#
PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:131  
      967    17639    2                   THEN
      968    17640    3                      DO;
      969    17641    3                         CALL Y$CAL_PAC ;
      970    17642    3                         KX$X29.STATE = %KX_X29_ST_BGNPHSDSC#;
      971    17643    3                      END;
      972    17644
      973    17645    2                CALL KVV$VDI ( KV_VDH_EVT_RLSVDI );
      974    17646                     %KV$USREXT ( VDI$ = "ADDR(NIL)" );
             17654    2           KV$PTR$ = KV@USRENT.SVDPTR$;
      975    17656    2                ALTRETURN;
      976    17657    2             END; /* WHENALTRETURN */
      977    17658    1       %KV_MRD.INPUT = '1'B;
      978    17659    1       %KV_MRD.OUTPUT = '1'B;
      979    17660            %KV$USREXT ( VDI$ = "ADDR(NIL)" );
             17668    1           KV$PTR$ = KV@USRENT.SVDPTR$;
      980    17670    1       RETURN;
      981    17671        %EJECT;
PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:132  
      982    17672    1   Y$CAL_PAC: PROC ;
      983    17673    2       CALL_FPT = '0'B;
      984    17674    2       CALL_FPT.CAL$ = ADDR(KX$X29);
      985    17675    2       CALL_FPT.RCV$ = KX$X29.L3$;
      986    17676    2       CALL_FPT.EVN = %KX_P_EV_VCLST#;
      987    17677    2       CALL KXP$PACKET ( CALL_FPT )
      988    17678    3          WHENALTRETURN DO;
      989    17679    3                CALL KHD$SCREECH ( CALL_FPT.PRM1$->B$SCODE );
      990    17680    3             END;
      991    17681    2       RETURN ;
      992    17682    2   END ;
      993    17683
      994    17684    1   END KXX$INTCNC;
      995    17685
      996    17686        %EOD;

PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:133  
--  Include file information  --

   KV_ASCCHR_E.:E05TOU  is referenced.
   KA_GLB.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KH_CHN.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KV$VDH.:E05TOU  is referenced.
   KV_GLB_M.:E05TOU  is referenced.
   KV$GLBCTX.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
   KA_GLB_E.:E05TOU  is referenced.
   KXX_MACROS_M.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   KH_MACRO_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure KXX$INTCNC.

   Procedure KXX$INTCNC requires 369 words for executable code.
   Procedure KXX$INTCNC requires 74 words of local(AUTO) storage.
PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:134  

PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:135  

 Object Unit name= KXX$INTCNC                                 File name= KXX$MSC.:E05TOU
 UTS= JUL 30 '97 02:35:18.36 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS      4      4  KXX$INTCNC
    1   Proc  even  none   369    171  KXX$INTCNC
    2  RoData even  none     4      4  KXX$INTCNC

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        2  KXX$INTCNC

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 KXX$X29
 yes     yes           Std       1 KVV$INT
 yes     yes           Std       1 KVV$VDI
         yes           Std       1 KXX$RLSCTX
 yes     yes           Std       1 KXP$PACKET
         yes           Std       1 KHD$SCREECH
                       nStd      0 X6A_AUTO_2
                       nStd      0 X6A_AALT
                       nStd      0 X6A_ARET
PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:136  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KV$PTR$                          r    KH_CHNHI                         r    KH_CHNLOW
r    KH_PROFILE_                           KX_LINSPDX_X3_TO_CP6                  KX_USRPRM
     KV_VDH_INT                            KV_VDH_CNC                            KV_VDH_EVT_RLSVDI
     KA_OTPBLKLMT                     r    G$ROS$
PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:137  


      731        1        /*T***********************************************************/
      732        2        /*T*                                                         */
      733        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      734        4        /*T*                                                         */
      735        5        /*T***********************************************************/
      736        6        %EJECT;
PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:138  
      737        7        /*P*
      738        8             NAME: KXX$INTCNC
      739        9             PURPOSE: Call VDH to get VDI context and then do the actual
      740       10                      connect.
      741       11        */
      742       12
      743       13        KXX$INTCNC: PROC ( PRM_DUMMY, RLCID ) ALTRET;

     13   1 000000  D380 0000 0000  xent KXX$INTCNC      LNJ,B5   X6A_AUTO_2
          1 000003       004A 0002                       DC       74,2

      744       14
      745       15
      746       16        /*****************************************************************
      747       17        *                                                                *
      748       18        *                           Include files                        *
      749       19        *                                                                *
      750       20        *****************************************************************/
      751       21
      752       22        %INCLUDE LCP_6;
      753     4301        %INCLUDE KH_MACRO_C;
      754     5044        %INCLUDE KX_MACROS_M;
      755     5815        %INCLUDE KXX_MACROS_M;
      756     6157        %INCLUDE KA_GLB_E;
      757     6235        %KA_HLTOTP_E;
      758     6244        %INCLUDE KX_EQUS_E;
      759     6683        %INCLUDE KV$GLB;
      760     7102        %INCLUDE KV$GLBCTX;
      761     7547        %INCLUDE KV_GLB_M;
      762     7669        %INCLUDE KV$VDH;
      763     8100        %INCLUDE KV_GLBCNS_E;
      764     8441        %KV_VDH_EVT_ID_E;
      765     8447        %KV_INPUNT_E;
      766     8452        %KV_USR_EVT_ID_E;
      767     8472        %INCLUDE KH$CHN;
      768     8594        %INCLUDE KH_CHN;
      769     8634        %INCLUDE K_ID_E;
PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:139  
      770     8684        %K#ENTID_E;
      771     8703        %K#LYRID_E;
      772     8710        %INCLUDE KL_MACRO_C;
      773    12062        %INCLUDE KL_AFCN_C;
      774    12163        %INCLUDE KL_SUPER_C;
      775    15065        %INCLUDE KH$STT;
      776    15095
      777    15096        %INCLUDE CP_6_SUBS;
      778    15636        %INCLUDE KA_GLB;
      779    15713        %INCLUDE KV_ASCCHR_E;
      780    15850        %EJECT;
PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:140  
      781    15851        /*****************************************************************
      782    15852        *                                                                *
      783    15853        *                           Auto/param                           *
      784    15854        *                                                                *
      785    15855        *****************************************************************/
      786    15856
      787    15857    1   DCL PRM_DUMMY CHAR(DUMMY) ALIGNED;
      788    15858    1   DCL DUMMY REDEF PRM_DUMMY UBIN ALIGNED;
      789    15859        %KX$X29 ( STCLASS = REDEF PRM_DUMMY );
      790    15899        %KX$LINKDEV ( STCLASS = REDEF PRM_DUMMY );
      791    15926    1   DCL 1 RLCID,    /* this is how VDH defines RLCID */
      792    15927    1         2 * BIT (16),
      793    15928    1         2 LDCTX UBIN WORD;
      794    15929
      795    15930    1   DCL 1 LGN_,
      796    15931    1         2 LNG UBIN ALIGNED,
      797    15932    1         2 ADR PTR ALIGNED;
      798    15933    1   DCL LGNVEC REDEF LGN_ VECTOR;
      799    15934    1   DCL LINSPDX UBIN;
      800    15935        %KV$VDH_INT ( NAME = KV@VDH_INT, STCLASS = AUTO );
      801    15972        %KV$VDH_CNC ( NAME = KV@VDH_CNC, STCLASS = AUTO );
      802    16064    1   DCL VDI$ PTR;
      803    16065        %FPT_X25 ( FPTN = CALL_FPT, STCLASS = AUTO );
      804    16109        %KV@USRENT;
      805    16129        %EQU KV_VDI = CHARTEXT('KV$PTR.VDI$->KV$VDI');
      806    16130    1   DCL CNC_TYP UBIN;
      807    16131
      808    16132        %EJECT;
PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:141  
      809    16133        /*****************************************************************
      810    16134        *                                                                *
      811    16135        *                           Based                                *
      812    16136        *                                                                *
      813    16137        *****************************************************************/
      814    16138
      815    16139        %KV$VDI ( STCLASS = "BASED (VDI$)" );
      816    16210        %KV$STT;
      817    16604        %KV$PTR;
      818    16647    1   DCL 1 BVECTOR BASED ALIGNED,
      819    16648    1         2 BOUND UBIN,
      820    16649    1         2 ADR$ PTR;
      821    16650        %KV$MRD;
      822    16697        %KH$CHN;
      823    16821        %VLP_SCODE ( FPTN=B$SCODE, STCLASS=BASED );
      824    16882        %EJECT;
PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:142  
      825    16883        /*****************************************************************
      826    16884        *                                                                *
      827    16885        *                           Constant/Symref                      *
      828    16886        *                                                                *
      829    16887        *****************************************************************/
      830    16888
      831    16889        %KH_CHNDAT;
      832    16907    1   DCL KX_LINSPDX_X3_TO_CP6(0:18) UBIN BYTE CALIGNED SYMREF;
      833    16908        %KV$USRPRM ( NAME = KX_USRPRM, STCLASS = SYMREF );
      834    16959        %KX_STATS_X29;
      835    17300        %KV$VDH_INT ( NAME = KV_VDH_INT, STCLASS = SYMREF );
      836    17337        %KV$VDH_CNC ( NAME = KV_VDH_CNC, STCLASS = SYMREF );
      837    17429        %KV$VDH_EVT ( ID = KV_VDH_EVT_ID_RLSVDI, NAME = KV_VDH_EVT_RLSVDI, STCLASS = SYMREF
             17429            );
      838    17464
      839    17465        %KA_MSC;
      840    17487
      841    17488
      842    17489        %EJECT;
PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:143  
      843    17490        /*****************************************************************
      844    17491        *                                                                *
      845    17492        *                           Entry references                     *
      846    17493        *                                                                *
      847    17494        *****************************************************************/
      848    17495
      849    17496    1   DCL KXP$PACKET ENTRY(1) ALTRET;
      850    17497    1   DCL KXX$X29 ENTRY(1);
      851    17498    1   DCL KXX$RLSCTX ENTRY(1);
      852    17499    1   DCL KVV$INT ENTRY(1) ALTRET;
      853    17500    1   DCL KVV$VDI ENTRY (1) ALTRET;
      854    17501    1   DCL KHD$SCREECH ENTRY (1);
      855    17502
      856    17503        %EJECT;
PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:144  
      857    17504
      858    17505        /*****************************************************************
      859    17506        *                                                                *
      860    17507        *                           Procedure                            *
      861    17508        *                                                                *
      862    17509        *****************************************************************/
      863    17510
      864    17511
      865    17512
      866    17513    1       IF KX$X29.SBR$ = ENTADDR(KXX$X29)

  17513   1 000005  EB80 0000 0000  xent                 LAB,B6   KXX$X29
          1 000008  DCC7 0004                            LDB,B5   @PRM_DUMMY,AUTO
          1 00000A  CC85                                 LDB,B4   ,B5
          1 00000B  EFC7 0048                            STB,B6   CNC_TYP+4,AUTO
          1 00000D  CDC7 0048                            CMB,B4   CNC_TYP+4,AUTO
          1 00000F  0981 0006                            BNE      s:17517,PREL

      867    17514    1          THEN
      868    17515    1             CNC_TYP = %KXX_TYP_X29#;

  17515   1 000011  6C01                                 LDV,R6   1
          1 000012  EF47 0044                            STR,R6   CNC_TYP,AUTO
          1 000014  0F81 000F                            B        s:17522,PREL

      869    17516    1          ELSE
      870    17517    1             IF KX$X29.SBR$ = ENTADDR(NIL)

  17517   1 000016  CC85                                 LDB,B4   ,B5
          1 000017  CD80 0000 0000  02                   CMB,B4   0
          1 00001A  0981 0006                            BNE      s:17521,PREL

      871    17518    1                THEN
      872    17519    1                   CNC_TYP = %KXX_TYP_CNTL#;

  17519   1 00001C  6C02                                 LDV,R6   2
          1 00001D  EF47 0044                            STR,R6   CNC_TYP,AUTO
PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:145  
          1 00001F  0F81 0004                            B        s:17522,PREL

      873    17520    1                ELSE
      874    17521    1                   CNC_TYP = %KXX_TYP_LINKDEV#;

  17521   1 000021  6C03                                 LDV,R6   3
          1 000022  EF47 0044                            STR,R6   CNC_TYP,AUTO

      875    17522    1       KV@VDH_INT = KV_VDH_INT;

  17522   1 000024  AB80 0000 0000  xsym                 LAB,B2   KV_VDH_INT
          1 000027  2C00                                 LDV,R2   0
          1 000028  6C16                                 LDV,R6   22
          1 000029  BB87                                 LAB,B3   ,AUTO
          1 00002A  3C18                                 LDV,R3   24
          1 00002B  0008                                 MMM

      876    17523    1       KV@VDH_INT.CHN$ = KX$X29.CHN$;

  17523   1 00002C  ECC5 0004                            LDB,B6   4,B5
          1 00002E  EFC7 000D                            STB,B6   KV@VDH_INT+1,AUTO

      877    17524    1       KV@VDH_INT.USRCTX$ = ADDR(KX$X29);

  17524   1 000030  DFC7 000F                            STB,B5   KV@VDH_INT+3,AUTO

      878    17525    1       KV@VDH_INT.USRPRM$ = ADDR(KX_USRPRM);

  17525   1 000032  CB80 0000 0000  xsym                 LAB,B4   KX_USRPRM
          1 000035  CFC7 0013                            STB,B4   KV@VDH_INT+7,AUTO

      879    17526        /*
      880    17527           Get the line speed from the X.3 params.
      881    17528        */
      882    17529    1       IF CNC_TYP = %KXX_TYP_X29#

  17529   1 000037  E847 0044                            LDR,R6   CNC_TYP,AUTO
PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:146  
          1 000039  6D01                                 CMV,R6   1
          1 00003A  0981 000D                            BNE      s:17536,PREL

      883    17530    1          THEN
      884    17531    2             DO;

      885    17532    2                LINSPDX = KX$X29.X3PRM ( %KX_X3PRMX_LINSPD# );

  17532   1 00003C  D2C5 0020                            LLH,R5   32,B5
          1 00003E  DF47 000B                            STR,R5   LINSPDX,AUTO

      886    17533    2                LINSPDX = KX_LINSPDX_X3_TO_CP6 ( LINSPDX );

  17533   1 000040  B855                                 LDR,R3   R5
          1 000041  D2B0 0000 0000  xsym                 LLH,R5   KX_LINSPDX_X3_TO_CP6,R3
          1 000044  DF47 000B                            STR,R5   LINSPDX,AUTO

      887    17534    2             END;

  17534   1 000046  0F81 0004                            B        s:17537,PREL

      888    17535    1          ELSE
      889    17536    1             LINSPDX = 15;

  17536   1 000048  5C0F                                 LDV,R5   15
          1 000049  DF47 000B                            STR,R5   LINSPDX,AUTO

      890    17537    1       KV@VDH_INT.RCVFLWCTRMAXCRD = KA_OTPBLKLMT ( LINSPDX );

  17537   1 00004B  B855                                 LDR,R3   R5
          1 00004C  C830 0000 0000  xsym                 LDR,R4   KA_OTPBLKLMT,R3
          1 00004F  CF47 0015                            STR,R4   KV@VDH_INT+9,AUTO

      891    17538        /* CALL VDI TO GET THE KV$VDI BLOCK                                           */
      892    17539
      893    17540            %KV$USRENT ( VDI$ = "ADDR(NIL)" );
             17546    1              KV@USRENT.SVDPTR$ = KV$PTR$;
PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:147  

  17546   1 000051  AC80 0000 0000  xsym                 LDB,B2   KV$PTR$
          1 000054  AFC7 0042                            STB,B2   KV@USRENT,AUTO

      894    17566    1       CALL KVV$INT (KV@VDH_INT)

  17566   1 000056  9BC7 000C                            LAB,B1   KV@VDH_INT,AUTO
          1 000058  9FC7 0048                            STB,B1   CNC_TYP+4,AUTO
          1 00005A  BBC7 0048                            LAB,B3   CNC_TYP+4,AUTO
          1 00005C  CBF0 0100                            LAB,B4   256,IMO
          1 00005E  E380 0000 0000  xent                 LNJ,B6   KVV$INT
          1 000061       0003                            DC       s:17572,PREL
          1 000062  0F81 0014                            B        s:17581,PREL

      895    17567    1          WHENALTRETURN
      896    17568    2             DO;

      897    17569        /*N*  Should send "no context... " message like async. But simply
      898    17570              clear VC for now.
      899    17571        */
      900    17572    2                IF CNC_TYP = %KXX_TYP_X29#

  17572   1 000064  E847 0044                            LDR,R6   CNC_TYP,AUTO
          1 000066  6D01                                 CMV,R6   1
          1 000067  0981 000C                            BNE      s:17579,PREL

      901    17573    2                   THEN
      902    17574    3                      DO;

      903    17575    3                         CALL Y$CAL_PAC ;

  17575   1 000069  E3C0 00D9                            LNJ,B6   s:0,PREL
          1 00006B       0001                            DC       s:17576,PREL

      904    17576    3                         CALL KXX$RLSCTX (KX$X29);

  17576   1 00006C  BBC7 0004                            LAB,B3   @PRM_DUMMY,AUTO
PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:148  
          1 00006E  CBF0 0100                            LAB,B4   256,IMO
          1 000070  E380 0000 0000  xent                 LNJ,B6   KXX$RLSCTX
          1 000073       0001                            DC       s:17579,PREL

      905    17577    3                      END;

      906    17578
      907    17579    2                ALTRETURN;

  17579   1 000074  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      908    17580    2             END; /* WHENALTRETURN */
      909    17581    1       KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_DLTOTP) = '1'B;

  17581   1 000077  ECC7 0011                            LDB,B6   KV@VDH_INT+5,AUTO
          1 000079  8946 001E                            LBT,'0010'X       30,B6
          1 00007B       0010

      910    17582    1       KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_DSC) = '1'B;

  17582   1 00007C  8946 001E                            LBT,'0008'X       30,B6
  17582   1 00007E       0008

      911    17583    1       KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_GETSTR) = '1'B;

  17583   1 00007F  8946 001E                            LBT,'0002'X       30,B6
  17583   1 000081       0002

      912    17584    1       KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_HLTOTP) = '1'B;

  17584   1 000082  8946 001E                            LBT,'0001'X       30,B6
  17584   1 000084       0001

      913    17585    1       KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_RLSSTR) = '1'B;

  17585   1 000085  8946 001F                            LBT,'1000'X       31,B6
  17585   1 000087       1000
PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:149  

      914    17586    1       KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_RLSVDI) = '1'B;

  17586   1 000088  8946 001F                            LBT,'0100'X       31,B6
  17586   1 00008A       0100

      915    17587    1       KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_SCH) = '1'B;

  17587   1 00008B  8946 001F                            LBT,'0800'X       31,B6
  17587   1 00008D       0800

      916    17588    1       KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_VDHEXT) = '1'B;

  17588   1 00008E  8946 001F                            LBT,'0200'X       31,B6
  17588   1 000090       0200

      917    17589    1       KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_ENDSETPRM) = '1'B;

  17589   1 000091  8946 001E                            LBT,'0004'X       30,B6
  17589   1 000093       0004

      918    17590    1       KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_LGNRJC) = '1'B;

  17590   1 000094  8946 001F                            LBT,'4000'X       31,B6
  17590   1 000096       4000

      919    17591    1       KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_LGNACP) = '1'B;

  17591   1 000097  8946 001F                            LBT,'8000'X       31,B6
  17591   1 000099       8000

      920    17592    1       IF CNC_TYP = %KXX_TYP_CNTL#

  17592   1 00009A  E847 0044                            LDR,R6   CNC_TYP,AUTO
          1 00009C  6D02                                 CMV,R6   2
          1 00009D  0981 0007                            BNE      s:17598,PREL

PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:150  
      921    17593    1          THEN
      922    17594    2             DO;

      923    17595    2                KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_CLS) = '1'B;

  17595   1 00009F  8946 001E                            LBT,'0020'X       30,B6
  17595   1 0000A1       0020

      924    17596    2                KV@VDH_INT.VDI$->KV$VDI.USREVTENB(%KV_USR_EVT_ID_OPN) = '1'B;

  17596   1 0000A2  8946 001F                            LBT,'2000'X       31,B6
  17596   1 0000A4       2000

      925    17597    2             END;

      926    17598    1       IF CNC_TYP ~= %KXX_TYP_X29#

  17598   1 0000A5  6D01                                 CMV,R6   1
          1 0000A6  0901 000D                            BE       s:17606,PREL

      927    17599    1          THEN
      928    17600    2             DO;

      929    17601    2                KV@VDH_INT.VDI$->KV$VDI.USEOTPBFRTRN = '0'B;

  17601   1 0000A8  8846 001D                            LBF,'0080'X       29,B6
  17601   1 0000AA       0080

      930    17602    2                KV@VDH_INT.VDI$->KV$VDI.USEOTPBFRBNR = '0'B;

  17602   1 0000AB  8846 001D                            LBF,'0100'X       29,B6
  17602   1 0000AD       0100

      931    17603    2                KV@VDH_INT.VDI$->KV$VDI.INPUNT = %KV_INPUNT_RCR;

  17603   1 0000AE  5C40                                 LDV,R5   64
          1 0000AF  DAC6 001D                            SRM,R5,'0060'X    29,B6
PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:151  
          1 0000B1       0060

      932    17604    2             END;

  17604   1 0000B2  0F81 0005                            B        s:17610,PREL

      933    17605    1          ELSE
      934    17606    1             KV@VDH_INT.VDI$->KV$VDI.INPUNT = %KV_INPUNT_CHR;

  17606   1 0000B4  5C20                                 LDV,R5   32
          1 0000B5  DAC6 001D                            SRM,R5,'0060'X    29,B6
          1 0000B7       0060

      935    17607
      936    17608        /* SAVE POINTER TO VDI BLOCK                                                  */
      937    17609
      938    17610    1       KX$X29.VDI$ = KV@VDH_INT.VDI$;

  17610   1 0000B8  DCC7 0004                            LDB,B5   @PRM_DUMMY,AUTO
          1 0000BA  EFC5 0002                            STB,B6   2,B5

      939    17611
      940    17612
      941    17613        /* CALL KVV$VDI TO DO ACTUAL CONNECT                                          */
      942    17614
      943    17615    1       KV@VDH_CNC = KV_VDH_CNC;

  17615   1 0000BC  AB80 0000 0000  xsym                 LAB,B2   KV_VDH_CNC
          1 0000BF  2C00                                 LDV,R2   0
          1 0000C0  6C32                                 LDV,R6   50
          1 0000C1  BB87                                 LAB,B3   ,AUTO
          1 0000C2  3C2E                                 LDV,R3   46
          1 0000C3  0008                                 MMM

      944    17616    1       KV@VDH_CNC.PRF_.ADR$ = ADDR(KH_PROFILE_)->BVECTOR.ADR$;

  17616   1 0000C4  EC80 0000 0001  xsym                 LDB,B6   KH_PROFILE_+1
PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:152  
          1 0000C7  EFC7 0018                            STB,B6   KV@VDH_CNC+1,AUTO

      945    17617    1       KV@VDH_CNC.PRF_.BYTSIZ = ADDR(KH_PROFILE_)->BVECTOR.BOUND+1;

  17617   1 0000C9  E800 0000 0000  xsym                 LDR,R6   KH_PROFILE_
          1 0000CC  6E01                                 ADV,R6   1
          1 0000CD  EF47 001B                            STR,R6   KV@VDH_CNC+4,AUTO

      946    17618    1       KV@VDH_CNC.LINSPD = LINSPDX;

  17618   1 0000CF  D847 000B                            LDR,R5   LINSPDX,AUTO
          1 0000D1  DAC7 0021                            SRM,R5,'00FF'X    KV@VDH_CNC+10,AUTO
          1 0000D3       00FF

      947    17619    1       KV@VDH_CNC.LCLENDPNTID = KX$X29.CHN$ -> KH$CHN.TERMID;

  17619   1 0000D4  CCC5 0004                            LDB,B4   4,B5
          1 0000D6  AB84                                 LAB,B2   ,B4
          1 0000D7  2C24                                 LDV,R2   36
          1 0000D8  6C10                                 LDV,R6   16
          1 0000D9  BB87                                 LAB,B3   ,AUTO
          1 0000DA  3C44                                 LDV,R3   68
          1 0000DB  0008                                 MMM

      948    17620    1       KV@VDH_CNC.LCLENDPNTID.TERM.TERM_NAME = '        ';

  17620   1 0000DC  AB80 0000 0000  00                   LAB,B2   0
          1 0000DF  2C00                                 LDV,R2   0
          1 0000E0  6C08                                 LDV,R6   8
          1 0000E1  BB87                                 LAB,B3   ,AUTO
          1 0000E2  3C4C                                 LDV,R3   76
          1 0000E3  0008                                 MMM

      949    17621    1       KV@VDH_CNC.LCLENDPNTID.TTYP = %KLTY_TTY#;  /*N* What TTYP should be used? */

  17621   1 0000E4  6C02                                 LDV,R6   2
          1 0000E5  E7C7 0022                            STH,R6   KV@VDH_CNC+11,AUTO
PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:153  

      950    17622    1       IF CNC_TYP = %KXX_TYP_CNTL# /* control connection for LINKDEV */

  17622   1 0000E7  D847 0044                            LDR,R5   CNC_TYP,AUTO
          1 0000E9  5D02                                 CMV,R5   2
          1 0000EA  0981 000E                            BNE      s:17629,PREL

      951    17623    1          THEN
      952    17624    2             DO;

      953    17625    2                LGN_.LNG = LENGTHC(KX$LINKDEV.LOGON) - 1;

  17625   1 0000EC  4C07                                 LDV,R4   7
          1 0000ED  CF47 0008                            STR,R4   LGN_,AUTO

      954    17626    2                LGN_.ADR = ADDR(KX$LINKDEV.LOGON);

  17626   1 0000EF  EBC5 0013                            LAB,B6   19,B5
          1 0000F1  EFC7 0009                            STB,B6   LGN_+1,AUTO

      955    17627    2                KV@VDH_CNC.LGN_ = LGNVEC;

  17627   1 0000F3  AB87                                 LAB,B2   ,AUTO
          1 0000F4  2C10                                 LDV,R2   16
          1 0000F5  6C06                                 LDV,R6   6
          1 0000F6  BB87                                 LAB,B3   ,AUTO
          1 0000F7  3C3C                                 LDV,R3   60
          1 0000F8  0008                                 MMM

      956    17628    2             END;

      957    17629    1       IF ADDR(RLCID) ~= ADDR(NIL)   /* a circuit belonging to a LINKDEV */

  17629   1 0000F9  ECC7 0006                            LDB,B6   @RLCID,AUTO
          1 0000FB  8DD6                                 CMN      B6
          1 0000FC  0901 0004                            BE       s:17632,PREL

PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:154  
      958    17630    1          THEN
      959    17631    1             KV@VDH_CNC.DSTNTWADR = RLCID;

  17631   1 0000FE  8C86                                 LDI      ,B6
          1 0000FF  8D47 002A                            SDI      KV@VDH_CNC+19,AUTO

      960    17632    1       CALL KVV$VDI (KV@VDH_CNC)

  17632   1 000101  ABC7 0017                            LAB,B2   KV@VDH_CNC,AUTO
          1 000103  AFC7 0048                            STB,B2   CNC_TYP+4,AUTO
          1 000105  BBC7 0048                            LAB,B3   CNC_TYP+4,AUTO
          1 000107  CBF0 0100                            LAB,B4   256,IMO
          1 000109  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          1 00010C       0003                            DC       s:17638,PREL
          1 00010D  0F81 0020                            B        s:17658,PREL

      961    17633    1          WHENALTRETURN
      962    17634    2             DO;

      963    17635        /*N*  Should print "no context... " message like async. For now,
      964    17636           clear the VC.
      965    17637        */
      966    17638    2                IF CNC_TYP = %KXX_TYP_X29#

  17638   1 00010F  E847 0044                            LDR,R6   CNC_TYP,AUTO
          1 000111  6D01                                 CMV,R6   1
          1 000112  0981 000A                            BNE      s:17645,PREL

      967    17639    2                   THEN
      968    17640    3                      DO;

      969    17641    3                         CALL Y$CAL_PAC ;

  17641   1 000114  E3C0 002E                            LNJ,B6   s:0,PREL
          1 000116       0001                            DC       s:17642,PREL

      970    17642    3                         KX$X29.STATE = %KX_X29_ST_BGNPHSDSC#;
PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:155  

  17642   1 000117  6C05                                 LDV,R6   5
          1 000118  ECC7 0004                            LDB,B6   @PRM_DUMMY,AUTO
          1 00011A  EAC6 0018                            SRM,R6,'00FF'X    24,B6
          1 00011C       00FF

      971    17643    3                      END;

      972    17644
      973    17645    2                CALL KVV$VDI ( KV_VDH_EVT_RLSVDI );

  17645   1 00011D  BB80 0000 0002  02                   LAB,B3   +2
          1 000120  CBF0 0100                            LAB,B4   256,IMO
          1 000122  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          1 000125       0001                            DC       s:17654,PREL

      974    17646                     %KV$USREXT ( VDI$ = "ADDR(NIL)" );
             17654    2           KV$PTR$ = KV@USRENT.SVDPTR$;

  17654   1 000126  ECC7 0042                            LDB,B6   KV@USRENT,AUTO
          1 000128  EF80 0000 0000  xsym                 STB,B6   KV$PTR$

      975    17656    2                ALTRETURN;

  17656   1 00012B  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      976    17657    2             END; /* WHENALTRETURN */
      977    17658    1       %KV_MRD.INPUT = '1'B;

  17658   1 00012E  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 000131  DCC6 0008                            LDB,B5   8,B6
          1 000133  8945 0016                            LBT,'0010'X       22,B5
          1 000135       0010

      978    17659    1       %KV_MRD.OUTPUT = '1'B;

  17659   1 000136  DCC6 0008                            LDB,B5   8,B6
PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:156  
          1 000138  8945 0016                            LBT,'0008'X       22,B5
          1 00013A       0008

      979    17660            %KV$USREXT ( VDI$ = "ADDR(NIL)" );
             17668    1           KV$PTR$ = KV@USRENT.SVDPTR$;

  17668   1 00013B  DCC7 0042                            LDB,B5   KV@USRENT,AUTO
          1 00013D  DF80 0000 0000  xsym                 STB,B5   KV$PTR$

      980    17670    1       RETURN;

  17670   1 000140  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      981    17671        %EJECT;
PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:157  
      982    17672    1   Y$CAL_PAC: PROC ;

  17672   1 000143  EFC7 0046            Y$CAL_PAC       STB,B6   CNC_TYP+2,AUTO

      983    17673    2       CALL_FPT = '0'B;

  17673   1 000145  5C20                                 LDV,R5   32
          1 000146  0021                                 ALR      ;
          1 000147       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          1 000149       4007 0032                                ALPHANUM(CALL_FPT,AUTO,,R5,FILL)

      984    17674    2       CALL_FPT.CAL$ = ADDR(KX$X29);

  17674   1 00014B  ECC7 0004                            LDB,B6   @PRM_DUMMY,AUTO
          1 00014D  437F                                 CSYNC    s:17674+1,SPREL
          1 00014E  EFC7 0033                            STB,B6   CALL_FPT+1,AUTO

      985    17675    2       CALL_FPT.RCV$ = KX$X29.L3$;

  17675   1 000150  DCC6 0006                            LDB,B5   6,B6
          1 000152  DFC7 0035                            STB,B5   CALL_FPT+3,AUTO

      986    17676    2       CALL_FPT.EVN = %KX_P_EV_VCLST#;

  17676   1 000154  6C09                                 LDV,R6   9
          1 000155  EF47 0032                            STR,R6   CALL_FPT,AUTO

      987    17677    2       CALL KXP$PACKET ( CALL_FPT )

  17677   1 000157  CBC7 0032                            LAB,B4   CALL_FPT,AUTO
          1 000159  CFC7 0048                            STB,B4   CNC_TYP+4,AUTO
          1 00015B  BBC7 0048                            LAB,B3   CNC_TYP+4,AUTO
          1 00015D  CBF0 0100                            LAB,B4   256,IMO
          1 00015F  E380 0000 0000  xent                 LNJ,B6   KXP$PACKET
          1 000162       0003                            DC       s:17679,PREL
          1 000163  0F81 0009                            B        s:17681,PREL

PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:158  
      988    17678    3          WHENALTRETURN DO;

      989    17679    3                CALL KHD$SCREECH ( CALL_FPT.PRM1$->B$SCODE );

  17679   1 000165  BBC7 0039                            LAB,B3   CALL_FPT+7,AUTO
          1 000167  CBF0 0100                            LAB,B4   256,IMO
          1 000169  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          1 00016C       0001                            DC       s:17681,PREL

      990    17680    3             END;

      991    17681    2       RETURN ;

  17681   1 00016D  ECC7 0046                            LDB,B6   CNC_TYP+2,AUTO
          1 00016F  C3C6 0001                            LNJ,B4   1,B6
      992    17682    2   END ;
      993    17683
      994    17684    1   END KXX$INTCNC;
      995    17685
      996    17686        %EOD;

PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:159  
--  Include file information  --

   KV_ASCCHR_E.:E05TOU  is referenced.
   KA_GLB.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KH_CHN.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KV$VDH.:E05TOU  is referenced.
   KV_GLB_M.:E05TOU  is referenced.
   KV$GLBCTX.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
   KA_GLB_E.:E05TOU  is referenced.
   KXX_MACROS_M.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   KH_MACRO_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure KXX$INTCNC.
PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:160  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @PRM_DUMMY                 6-0-0/w PTR         r     1 @RLCID
    32-0-0/w STRC(256)   r     1 CALL_FPT                  44-0-0/w UBIN(16)    r     1 CNC_TYP
    *0-0-0/w UBIN(16)    r     1 DUMMY                     42-0-0/w STRC(32)    r     1 KV@USRENT
    17-0-0/w STRC(400)   r     1 KV@VDH_CNC                 C-0-0/w STRC(176)   r     1 KV@VDH_INT
    *0-0-0/w STRC(384)   r     1 KX$LINKDEV                *0-0-0/w STRC(576)   r     1 KX$X29
     8-0-0/w VECT        r     1 LGNVEC                     8-0-0/w STRC(48)    r     1 LGN_
     B-0-0/w UBIN(16)    r     1 LINSPDX                   *0-0-0/w ACHR        r     1 PRM_DUMMY
    *0-0-0/w STRC(32)    r     1 RLCID                     30-0-0/w PTR         r     1 VDI$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(16)    r     1 KA_OTPBLKLMT(0:15)
     0-0-0/w VECT        r     1 KH_PROFILE_                0-0-0/w PTR         r     1 KV$PTR$
     0-0-0/w STRC(400)   r     1 KV_VDH_CNC                 0-0-0/w STRC(32)    r     1 KV_VDH_EVT_RLSVDI
     0-0-0/w STRC(176)   r     1 KV_VDH_INT
     0-0-0/c UBIN(8)     r     1 KX_LINSPDX_X3_TO_CP6(0:18)
     0-0-0/w STRC(912)   r     1 KX_USRPRM

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(48)    r     1 B$SCODE                    0-0-0/w STRC(48)    r     1 BVECTOR
     0-0-0/w STRC(512)   r     1 KH$CHN                     0-0-0/w STRC(512)   r     1 KV$MRD
     0-0-0/w STRC(480)   r     1 KV$PTR                     0-0-0/w STRC(512)   r     1 KV$VDI

PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:161  

   Procedure KXX$INTCNC requires 369 words for executable code.
   Procedure KXX$INTCNC requires 74 words of local(AUTO) storage.
PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:162  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:163  
          MINI XREF LISTING

B$SCODE
     16848**DCL     17679<>CALL
BVECTOR.ADR$
     16649**DCL     17616>>ASSIGN
BVECTOR.BOUND
     16648**DCL     17617>>ASSIGN
CALL_FPT
     16092**DCL     17673<<ASSIGN  17677<>CALL
CALL_FPT.CAL$
     16096**DCL     17674<<ASSIGN
CALL_FPT.EVN
     16096**DCL     17676<<ASSIGN
CALL_FPT.PRM1$
     16097**DCL     16098--REDEF   17679>>CALL
CALL_FPT.PRM2$
     16099**DCL     16099--REDEF
CALL_FPT.RCV$
     16096**DCL     17675<<ASSIGN
CNC_TYP
     16130**DCL     17515<<ASSIGN  17519<<ASSIGN  17521<<ASSIGN  17529>>IF      17572>>IF      17592>>IF
     17598>>IF      17622>>IF      17638>>IF
DUMMY
     15858**DCL     15857--IMP-SIZ
KA_OTPBLKLMT
     17480**DCL     17537>>ASSIGN
KH$CHN.TERMID
     16806**DCL     17619>>ASSIGN
KH$CHN.TERMID.TERM
     16808**DCL     16817--REDEF
KHD$SCREECH
     17501**DCL-ENT 17679--CALL
KH_CHNHI
PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:164  
     16902**DCL     16903--REDEF
KH_CHNLOW
     16903**DCL     16904--REDEF
KH_PROFILE_
     16904**DCL     17616--ASSIGN  17617--ASSIGN
KV$MRD.INPUT
     16678**DCL     17658<<ASSIGN
KV$MRD.OUTPUT
     16678**DCL     17659<<ASSIGN
KV$PTR.INPCNDPND
     16631**DCL     16640--REDEF   16644--REDEF
KV$PTR.LINLST$
     16627**DCL     16628--REDEF
KV$PTR.MRD$
     16626**DCL     17658>>ASSIGN  17659>>ASSIGN
KV$PTR$
     16619**DCL     16625--IMP-PTR 17546>>ASSIGN  17654<<ASSIGN  17658>>ASSIGN  17659>>ASSIGN  17668<<ASSIGN
KV$STT.REQSTATS.DSPMSK
     16483**DCL     16489--REDEF
KV$STT.REQSTATS.SLCMSK
     16524**DCL     16531--REDEF
KV$VDI.INPUNT
     16201**DCL     17603<<ASSIGN  17606<<ASSIGN
KV$VDI.USEOTPBFRBNR
     16200**DCL     17602<<ASSIGN
KV$VDI.USEOTPBFRTRN
     16201**DCL     17601<<ASSIGN
KV$VDI.USREVTENB
     16203**DCL     17581<<ASSIGN  17582<<ASSIGN  17583<<ASSIGN  17584<<ASSIGN  17585<<ASSIGN  17586<<ASSIGN
     17587<<ASSIGN  17588<<ASSIGN  17589<<ASSIGN  17590<<ASSIGN  17591<<ASSIGN  17595<<ASSIGN  17596<<ASSIGN
KV@USRENT.SVDPTR$
     16127**DCL     17546<<ASSIGN  17654>>ASSIGN  17668>>ASSIGN
KV@VDH_CNC
     15999**DCL     17615<<ASSIGN  17632<>CALL
KV@VDH_CNC.DSTNTWADR
     16062**DCL     17631<<ASSIGN
PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:165  
KV@VDH_CNC.LCLENDPNTID
     16049**DCL     17619<<ASSIGN
KV@VDH_CNC.LCLENDPNTID.TERM
     16051**DCL     16060--REDEF
KV@VDH_CNC.LCLENDPNTID.TERM.TERM_NAME
     16060**DCL     17620<<ASSIGN
KV@VDH_CNC.LCLENDPNTID.TTYP
     16051**DCL     17621<<ASSIGN
KV@VDH_CNC.LGN_
     16031**DCL     17627<<ASSIGN
KV@VDH_CNC.LINSPD
     16032**DCL     17618<<ASSIGN
KV@VDH_CNC.PRF_.ADR$
     16028**DCL     17616<<ASSIGN
KV@VDH_CNC.PRF_.BYTSIZ
     16028**DCL     17617<<ASSIGN
KV@VDH_INT
     15962**DCL     17522<<ASSIGN  17566<>CALL
KV@VDH_INT.CHN$
     15968**DCL     17523<<ASSIGN
KV@VDH_INT.RCVFLWCTRMAXCRD
     15969**DCL     17537<<ASSIGN
KV@VDH_INT.USRCTX$
     15968**DCL     17524<<ASSIGN
KV@VDH_INT.USRPRM$
     15969**DCL     17525<<ASSIGN
KV@VDH_INT.VDI$
     15969**DCL     17581>>ASSIGN  17582>>ASSIGN  17583>>ASSIGN  17584>>ASSIGN  17585>>ASSIGN  17586>>ASSIGN
     17587>>ASSIGN  17588>>ASSIGN  17589>>ASSIGN  17590>>ASSIGN  17591>>ASSIGN  17595>>ASSIGN  17596>>ASSIGN
     17601>>ASSIGN  17602>>ASSIGN  17603>>ASSIGN  17606>>ASSIGN  17610>>ASSIGN
KVV$INT
     17499**DCL-ENT 17566--CALL
KVV$VDI
     17500**DCL-ENT 17632--CALL    17645--CALL
KV_VDH_CNC
     17364**DCL     17615>>ASSIGN
PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:166  
KV_VDH_CNC.LCLENDPNTID.TERM
     17416**DCL     17425--REDEF
KV_VDH_EVT_RLSVDI
     17456**DCL     17645<>CALL
KV_VDH_INT
     17327**DCL     17522>>ASSIGN
KX$LINKDEV.LOGON
     15921**DCL     17625--ASSIGN  17626--ASSIGN
KX$X29
     15878**DCL     17524--ASSIGN  17576<>CALL    17674--ASSIGN
KX$X29.CHN$
     15882**DCL     17523>>ASSIGN  17619>>ASSIGN
KX$X29.HLTOTP
     15888**DCL     15888--REDEF
KX$X29.HLTOTPNXTBFR
     15891**DCL     15892--REDEF
KX$X29.L3$
     15883**DCL     17675>>ASSIGN
KX$X29.SBR$
     15882**DCL     17513>>IF      17517>>IF
KX$X29.STATE
     15895**DCL     17642<<ASSIGN
KX$X29.VDI$
     15882**DCL     17610<<ASSIGN
KX$X29.X3PRM
     15896**DCL     17532>>ASSIGN
KXP$PACKET
     17496**DCL-ENT 17677--CALL
KXX$RLSCTX
     17498**DCL-ENT 17576--CALL
KXX$X29
     17497**DCL-ENT 17513--IF
KX_LINSPDX_X3_TO_CP6
     16907**DCL     17533>>ASSIGN
KX_STATS_X29.REQSTATS.DSPMSK
     17220**DCL     17226--REDEF
PL6.E3A0      #005=KXX$INTCNC File=KXX$MSC.:E05TSI                               WED 07/30/97 02:35 Page:167  
KX_STATS_X29.REQSTATS.SLCMSK
     17261**DCL     17268--REDEF
KX_USRPRM
     16929**DCL     17525--ASSIGN
LGNVEC
     15933**DCL     17627>>ASSIGN
LGN_
     15930**DCL     15933--REDEF
LGN_.ADR
     15932**DCL     17626<<ASSIGN
LGN_.LNG
     15931**DCL     17625<<ASSIGN
LINSPDX
     15934**DCL     17532<<ASSIGN  17533<<ASSIGN  17533>>ASSIGN  17536<<ASSIGN  17537>>ASSIGN  17618>>ASSIGN
PRM_DUMMY
     15857**DCL        13--PROC    15858--REDEF   15878--REDEF   15917--REDEF
RLCID
     15926**DCL        13--PROC    17629--IF      17631>>ASSIGN
VDI$
     16064**DCL     16160--IMP-PTR
Y$CAL_PAC
     17672**PROC    17575--CALL    17641--CALL

PL6.E3A0      #006=KXX$RLSCTX File=KXX$MSC.:E05TSI                               WED 07/30/97 02:36 Page:168  
      997        1        /*T***********************************************************/
      998        2        /*T*                                                         */
      999        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1000        4        /*T*                                                         */
     1001        5        /*T***********************************************************/
     1002        6        %EJECT;
PL6.E3A0      #006=KXX$RLSCTX File=KXX$MSC.:E05TSI                               WED 07/30/97 02:36 Page:169  
     1003        7        /*P*
     1004        8             NAME: KXX$RLSCTX
     1005        9             PURPOSE: Release KX$X29 or KX$X28
     1006       10        */
     1007       11        KXX$RLSCTX: PROC ( KX$X29 );
     1008       12        /*
     1009       13           INCLUDES
     1010       14        */
     1011       15        %INCLUDE LCP_6;
     1012     4294        %INCLUDE KX_EQUS_E;
     1013     4733        %INCLUDE KX_MACROS_M;
     1014     5504        %INCLUDE KXX_MACROS_M;
     1015     5846        %INCLUDE KX_SCODE_C;
     1016     5912        %INCLUDE KX_DATA_C;
     1017     5980        %INCLUDE KH_MACRO_C;
     1018     6723        %INCLUDE KHA_FNC_E;
     1019     6823        %INCLUDE KA_GLB_E;
     1020     6901        %KA_HLTOTP_E;
     1021     6910        %INCLUDE KV$GLB;
     1022     7329        %INCLUDE KV$GLBCTX;
     1023     7774        %INCLUDE KV_GLBCNS_E;
     1024     8115        %KV#CQ_HNDID_E;
     1025     8120        %INCLUDE KH$CHN;
     1026     8242        %INCLUDE K_ID_E;
     1027     8292        %K#ENTID_E;
     1028     8311        %K#LYRID_E;
     1029     8318        %INCLUDE KL_MACRO_C;
     1030    11670        %INCLUDE KL_AFCN_C;
     1031    11771        %INCLUDE KL_SUPER_C;
     1032    14673        %INCLUDE KL_CONTROL_C;
     1033    15053        %INCLUDE KH$STT;
     1034    15083        %INCLUDE K_ADDRESS_M;
     1035    15586        %INCLUDE KNH_MACRO_C;
     1036    15869        /*
     1037    15870           Auto
     1038    15871        */
     1039    15872    1   DCL VDI$ PTR;
PL6.E3A0      #006=KXX$RLSCTX File=KXX$MSC.:E05TSI                               WED 07/30/97 02:36 Page:170  
     1040    15873    1   DCL L3$ PTR;
     1041    15874    1   DCL Y@ERROR UBIN;
     1042    15875    1   DCL LEVEL UBIN;
     1043    15876    1   DCL RLSWRDSIZ UBIN;
     1044    15877        %KX$X29 ( STCLASS = );
     1045    15917        %KX$VC;
     1046    16008        %KX$LINKDEV ( STCLASS = "BASED(CNTL$)" );
     1047    16035    1   DCL DAT$ PTR;
     1048    16036    1   DCL KVBSIZ UBIN;
     1049    16037    1   DCL LINSPDX UBIN;
     1050    16038    1   DCL CNC_TYP UBIN;
     1051    16039    1   DCL CNTL$ PTR;
     1052    16040        /*
     1053    16041           Based
     1054    16042        */
     1055    16043        %KV$VDI ( STCLASS = "BASED ( VDI$ )" );
     1056    16114        %KX$L3 ( STCLASS = "BASED ( L3$ )" );
     1057    16517        %KX$L2;
     1058    16884        %KH$CHN;
     1059    17008    1   DCL BASED_WORD UBIN BASED;
     1060    17009        %KX$X29_INPBFR ( STCLASS = "BASED(DAT$)" );
     1061    17073        %KX$X29_OTPBFR ( STCLASS = "BASED(DAT$)" );
     1062    17096        %KX$VC_OTPBFR ( STCLASS = "BASED(DAT$)" );
     1063    17123        /*
     1064    17124           Static
     1065    17125        */
     1066    17126        %KX_STATS_X29;
     1067    17467        %KH$CTLTBL ( FPTN = KH_CTLTBL, STCLASS = SYMREF );
     1068    17679        /*
     1069    17680           Constant
     1070    17681        */
     1071    17682    1   DCL KX_LINSPDX_X3_TO_CP6(0:18) UBIN BYTE CALIGNED SYMREF;
     1072    17683    1   DCL Y_POWER_OF_2 (0:15) UBIN WORD CONSTANT INIT (1,2,4,8,16,32,64,128,
     1073    17684    1     256,512,1024,2048,4096,8192,16384,32768);
     1074    17685        %KX_DATA;
     1075    18375        /*
     1076    18376           Entry references
PL6.E3A0      #006=KXX$RLSCTX File=KXX$MSC.:E05TSI                               WED 07/30/97 02:36 Page:171  
     1077    18377        */
     1078    18378    1   DCL KVB$RLSSYS ENTRY (2) ALTRET;
     1079    18379    1   DCL KHA$DVCADM ENTRY (6) ALTRET;
     1080    18380    1   DCL KHI$DISABLE ENTRY (1);
     1081    18381    1   DCL KHI$ENABLE ENTRY (1);
     1082    18382    1   DCL KXX$X29 ENTRY(1);
     1083    18383        %EQU KX_VC = CHARTEXT ( 'ADDR(KX$X29)->KX$VC' );
     1084    18384    1   DCL KHD$SCREECH ENTRY(1);
     1085    18385        /*
     1086    18386           Procedure
     1087    18387        */
     1088    18388
     1089    18389    1       IF KX$X29.L3$ ~= ADDR(NIL)
     1090    18390    1          THEN
     1091    18391    1             KX$X29.L3$->KX$L3.CM$ = ADDR(NIL);
     1092    18392    1       IF KX$X29.SBR$ ~= ENTADDR(KXX$X29)
     1093    18393    1          THEN
     1094    18394    2             DO;
     1095    18395    2                CNC_TYP = %KXX_TYP_LINKDEV#;
     1096    18396    2                RLSWRDSIZ = SIZEW(KX$VC);
     1097    18397    2                LINSPDX = 15;
     1098    18398    2             END;
     1099    18399    1          ELSE
     1100    18400    2             DO;
     1101    18401    2                CNC_TYP = %KXX_TYP_X29#;
     1102    18402    2                LINSPDX = KX_LINSPDX_X3_TO_CP6(KX$X29.X3PRM(%KX_X3PRMX_LINSPD#));
     1103    18403    2                RLSWRDSIZ = SIZEW(KX$X29);
     1104    18404    2             END;
     1105    18405    1       KX_STATS_X29.LINSPDDST(LINSPDX) = KX_STATS_X29.LINSPDDST(LINSPDX) - 1;
     1106    18406    1       KX_STATS_X29.CIRCUITS = KX_STATS_X29.CIRCUITS - 1;
     1107    18407    1       KX_STATS_X29.KHSTT.CTXBYTUTL = KX_STATS_X29.KHSTT.CTXBYTUTL - RLSWRDSIZ*2;
     1108    18408            %DISABLE;
     1109    18411    1       IF CNC_TYP = %KXX_TYP_X29#
     1110    18412    1          THEN
     1111    18413    2             DO;
     1112    18414    3                DO WHILE ( KX$X29.INPBFR.HED$ ~= ADDR(NIL) );
     1113    18415    3                   DAT$ = KX$X29.INPBFR.HED$;
PL6.E3A0      #006=KXX$RLSCTX File=KXX$MSC.:E05TSI                               WED 07/30/97 02:36 Page:172  
     1114    18416    3                   KX$X29.INPBFR.HED$ = KX$X29_INPBFR.FPT.PRM1$;
     1115    18417    3                   KVBSIZ = KX$X29_INPBFR.FPT.PRM1;
     1116    18418    3                   CALL KVB$RLSSYS ( KVBSIZ, DAT$ );
     1117    18419    3                   KX_STATS_X29.KHSTT.INPBFRBYTUTL = KX_STATS_X29.KHSTT.INPBFRBYTUTL -
             18419                            KVBSIZ*2;
     1118    18420    3                END;
     1119    18421    2             END;
     1120    18422    1          ELSE
     1121    18423    2             DO;
     1122    18424    2                IF %KX_VC.CALPKT$ ~= ADDR(NIL)
     1123    18425    2                   THEN
     1124    18426    2                      CALL KVB$RLSSYS ( (%KX_VC.CALMSGBYTSIZ+1)/2, %KX_VC.CALPKT$ );
     1125    18427    2                IF %KX_VC.INTPKT$ ~= ADDR(NIL)
     1126    18428    2                   THEN
     1127    18429    2                      CALL KVB$RLSSYS ( (%KX_VC.INTMSGBYTSIZ+1)/2, %KX_VC.INTPKT$ );
     1128    18430    2                IF %KX_VC.CLRPKT$ ~= ADDR(NIL)
     1129    18431    2                   THEN
     1130    18432    2                      CALL KVB$RLSSYS ( (%KX_VC.CLRMSGBYTSIZ+1)/2, %KX_VC.CLRPKT$ );
     1131    18433    2                CNTL$ = %KX_VC.CNTL$;
     1132    18434    2                IF CNTL$ ~= ADDR(NIL)
     1133    18435    2                   THEN
     1134    18436    3                      DO;
     1135    18437    3                         KX$LINKDEV.CRCCNT = KX$LINKDEV.CRCCNT - 1;
     1136    18438    3                         IF ADDR(KX$X29) = KX$LINKDEV.L4_HEAD$
     1137    18439    3                            THEN
     1138    18440    3                               KX$LINKDEV.L4_HEAD$ = %KX_VC.FLNK$;
     1139    18441    3                            ELSE
     1140    18442    3                               %KX_VC.BLNK$->KX$VC.FLNK$ = %KX_VC.FLNK$;
     1141    18443    3                         IF ADDR(KX$X29) = KX$LINKDEV.L4_TAIL$
     1142    18444    3                            THEN
     1143    18445    3                               KX$LINKDEV.L4_TAIL$ = %KX_VC.BLNK$;
     1144    18446    3                            ELSE
     1145    18447    3                               %KX_VC.FLNK$->KX$VC.BLNK$ = %KX_VC.BLNK$;
     1146    18448    3                      END;
     1147    18449    2             END;
     1148    18450    1       CALL KVB$RLSSYS ( RLSWRDSIZ, ADDR(KX$X29) );
     1149    18451            %ENABLE;
PL6.E3A0      #006=KXX$RLSCTX File=KXX$MSC.:E05TSI                               WED 07/30/97 02:36 Page:173  
     1150    18454
     1151    18455    1       RETURN;
     1152    18456
     1153    18457    1   END KXX$RLSCTX;

PL6.E3A0      #006=KXX$RLSCTX File=KXX$MSC.:E05TSI                               WED 07/30/97 02:36 Page:174  
--  Include file information  --

   KNH_MACRO_C.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   KL_CONTROL_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KV$GLBCTX.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KA_GLB_E.:E05TOU  is referenced.
   KHA_FNC_E.:E05TOU  is referenced.
   KH_MACRO_C.:E05TOU  is referenced.
   KX_DATA_C.:E05TOU  is referenced.
   KX_SCODE_C.:E05TOU  is referenced.
   KXX_MACROS_M.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure KXX$RLSCTX.

   Procedure KXX$RLSCTX requires 329 words for executable code.
   Procedure KXX$RLSCTX requires 26 words of local(AUTO) storage.
PL6.E3A0      #006=KXX$RLSCTX File=KXX$MSC.:E05TSI                               WED 07/30/97 02:36 Page:175  

    No errors detected in file KXX$MSC.:E05TSI    .

PL6.E3A0      #006=KXX$RLSCTX File=KXX$MSC.:E05TSI                               WED 07/30/97 02:36 Page:176  

 Object Unit name= KXX$RLSCTX                                 File name= KXX$MSC.:E05TOU
 UTS= JUL 30 '97 02:36:36.40 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS     16     10  KXX$RLSCTX
    1   Proc  even  none   329    149  KXX$RLSCTX

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  KXX$RLSCTX

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 KXX$X29
         yes           Std       1 KHI$DISABLE
         yes           Std       1 KHI$ENABLE
 yes     yes           Std       2 KVB$RLSSYS
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KX_STATS_X29                          KH_CTLTBL                             KX_LINSPDX_X3_TO_CP6
     KX_PM$                           r    G$ROS$
PL6.E3A0      #006=KXX$RLSCTX File=KXX$MSC.:E05TSI                               WED 07/30/97 02:36 Page:177  


      997        1        /*T***********************************************************/
      998        2        /*T*                                                         */
      999        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1000        4        /*T*                                                         */
     1001        5        /*T***********************************************************/
     1002        6        %EJECT;
PL6.E3A0      #006=KXX$RLSCTX File=KXX$MSC.:E05TSI                               WED 07/30/97 02:36 Page:178  
     1003        7        /*P*
     1004        8             NAME: KXX$RLSCTX
     1005        9             PURPOSE: Release KX$X29 or KX$X28
     1006       10        */
     1007       11        KXX$RLSCTX: PROC ( KX$X29 );

     11   1 000000  D380 0000 0000  xent KXX$RLSCTX      LNJ,B5   X6A_AUTO_1
          1 000003       001A 0001                       DC       26,1

     1008       12        /*
     1009       13           INCLUDES
     1010       14        */
     1011       15        %INCLUDE LCP_6;
     1012     4294        %INCLUDE KX_EQUS_E;
     1013     4733        %INCLUDE KX_MACROS_M;
     1014     5504        %INCLUDE KXX_MACROS_M;
     1015     5846        %INCLUDE KX_SCODE_C;
     1016     5912        %INCLUDE KX_DATA_C;
     1017     5980        %INCLUDE KH_MACRO_C;
     1018     6723        %INCLUDE KHA_FNC_E;
     1019     6823        %INCLUDE KA_GLB_E;
     1020     6901        %KA_HLTOTP_E;
     1021     6910        %INCLUDE KV$GLB;
     1022     7329        %INCLUDE KV$GLBCTX;
     1023     7774        %INCLUDE KV_GLBCNS_E;
     1024     8115        %KV#CQ_HNDID_E;
     1025     8120        %INCLUDE KH$CHN;
     1026     8242        %INCLUDE K_ID_E;
     1027     8292        %K#ENTID_E;
     1028     8311        %K#LYRID_E;
     1029     8318        %INCLUDE KL_MACRO_C;
     1030    11670        %INCLUDE KL_AFCN_C;
     1031    11771        %INCLUDE KL_SUPER_C;
     1032    14673        %INCLUDE KL_CONTROL_C;
     1033    15053        %INCLUDE KH$STT;
     1034    15083        %INCLUDE K_ADDRESS_M;
     1035    15586        %INCLUDE KNH_MACRO_C;
PL6.E3A0      #006=KXX$RLSCTX File=KXX$MSC.:E05TSI                               WED 07/30/97 02:36 Page:179  
     1036    15869        /*
     1037    15870           Auto
     1038    15871        */
     1039    15872    1   DCL VDI$ PTR;
     1040    15873    1   DCL L3$ PTR;
     1041    15874    1   DCL Y@ERROR UBIN;
     1042    15875    1   DCL LEVEL UBIN;
     1043    15876    1   DCL RLSWRDSIZ UBIN;
     1044    15877        %KX$X29 ( STCLASS = );
     1045    15917        %KX$VC;
     1046    16008        %KX$LINKDEV ( STCLASS = "BASED(CNTL$)" );
     1047    16035    1   DCL DAT$ PTR;
     1048    16036    1   DCL KVBSIZ UBIN;
     1049    16037    1   DCL LINSPDX UBIN;
     1050    16038    1   DCL CNC_TYP UBIN;
     1051    16039    1   DCL CNTL$ PTR;
     1052    16040        /*
     1053    16041           Based
     1054    16042        */
     1055    16043        %KV$VDI ( STCLASS = "BASED ( VDI$ )" );
     1056    16114        %KX$L3 ( STCLASS = "BASED ( L3$ )" );
     1057    16517        %KX$L2;
     1058    16884        %KH$CHN;
     1059    17008    1   DCL BASED_WORD UBIN BASED;
     1060    17009        %KX$X29_INPBFR ( STCLASS = "BASED(DAT$)" );
     1061    17073        %KX$X29_OTPBFR ( STCLASS = "BASED(DAT$)" );
     1062    17096        %KX$VC_OTPBFR ( STCLASS = "BASED(DAT$)" );
     1063    17123        /*
     1064    17124           Static
     1065    17125        */
     1066    17126        %KX_STATS_X29;
     1067    17467        %KH$CTLTBL ( FPTN = KH_CTLTBL, STCLASS = SYMREF );
     1068    17679        /*
     1069    17680           Constant
     1070    17681        */
     1071    17682    1   DCL KX_LINSPDX_X3_TO_CP6(0:18) UBIN BYTE CALIGNED SYMREF;
     1072    17683    1   DCL Y_POWER_OF_2 (0:15) UBIN WORD CONSTANT INIT (1,2,4,8,16,32,64,128,
PL6.E3A0      #006=KXX$RLSCTX File=KXX$MSC.:E05TSI                               WED 07/30/97 02:36 Page:180  
     1073    17684    1     256,512,1024,2048,4096,8192,16384,32768);
     1074    17685        %KX_DATA;
     1075    18375        /*
     1076    18376           Entry references
     1077    18377        */
     1078    18378    1   DCL KVB$RLSSYS ENTRY (2) ALTRET;
     1079    18379    1   DCL KHA$DVCADM ENTRY (6) ALTRET;
     1080    18380    1   DCL KHI$DISABLE ENTRY (1);
     1081    18381    1   DCL KHI$ENABLE ENTRY (1);
     1082    18382    1   DCL KXX$X29 ENTRY(1);
     1083    18383        %EQU KX_VC = CHARTEXT ( 'ADDR(KX$X29)->KX$VC' );
     1084    18384    1   DCL KHD$SCREECH ENTRY(1);
     1085    18385        /*
     1086    18386           Procedure
     1087    18387        */
     1088    18388
     1089    18389    1       IF KX$X29.L3$ ~= ADDR(NIL)

  18389   1 000005  ECC7 0004                            LDB,B6   @KX$X29,AUTO
          1 000007  8DC6 0006                            CMN      6,B6
          1 000009  0901 0008                            BE       s:18392,PREL

     1090    18390    1          THEN
     1091    18391    1             KX$X29.L3$->KX$L3.CM$ = ADDR(NIL);

  18391   1 00000B  DCC6 0006                            LDB,B5   6,B6
          1 00000D  CB80 0000 0000                       LAB,B4   0
          1 000010  CFC5 0004                            STB,B4   4,B5

     1092    18392    1       IF KX$X29.SBR$ ~= ENTADDR(KXX$X29)

  18392   1 000012  DB80 0000 0000  xent                 LAB,B5   KXX$X29
          1 000015  CC86                                 LDB,B4   ,B6
          1 000016  DFC7 0014                            STB,B5   CNTL$+2,AUTO
          1 000018  CDC7 0014                            CMB,B4   CNTL$+2,AUTO
          1 00001A  0901 000C                            BE       s:18401,PREL

PL6.E3A0      #006=KXX$RLSCTX File=KXX$MSC.:E05TSI                               WED 07/30/97 02:36 Page:181  
     1093    18393    1          THEN
     1094    18394    2             DO;

     1095    18395    2                CNC_TYP = %KXX_TYP_LINKDEV#;

  18395   1 00001C  6C03                                 LDV,R6   3
          1 00001D  EF47 0011                            STR,R6   CNC_TYP,AUTO

     1096    18396    2                RLSWRDSIZ = SIZEW(KX$VC);

  18396   1 00001F  5C34                                 LDV,R5   52
          1 000020  DF47 000C                            STR,R5   RLSWRDSIZ,AUTO

     1097    18397    2                LINSPDX = 15;

  18397   1 000022  4C0F                                 LDV,R4   15
          1 000023  CF47 0010                            STR,R4   LINSPDX,AUTO

     1098    18398    2             END;

  18398   1 000025  0F81 000E                            B        s:18405,PREL

     1099    18399    1          ELSE
     1100    18400    2             DO;

     1101    18401    2                CNC_TYP = %KXX_TYP_X29#;

  18401   1 000027  6C01                                 LDV,R6   1
          1 000028  EF47 0011                            STR,R6   CNC_TYP,AUTO

     1102    18402    2                LINSPDX = KX_LINSPDX_X3_TO_CP6(KX$X29.X3PRM(%KX_X3PRMX_LINSPD#));

  18402   1 00002A  B2C6 0020                            LLH,R3   32,B6
          1 00002C  D2B0 0000 0000  xsym                 LLH,R5   KX_LINSPDX_X3_TO_CP6,R3
          1 00002F  DF47 0010                            STR,R5   LINSPDX,AUTO

     1103    18403    2                RLSWRDSIZ = SIZEW(KX$X29);
PL6.E3A0      #006=KXX$RLSCTX File=KXX$MSC.:E05TSI                               WED 07/30/97 02:36 Page:182  

  18403   1 000031  4C24                                 LDV,R4   36
          1 000032  CF47 000C                            STR,R4   RLSWRDSIZ,AUTO

     1104    18404    2             END;

     1105    18405    1       KX_STATS_X29.LINSPDDST(LINSPDX) = KX_STATS_X29.LINSPDDST(LINSPDX) - 1;

  18405   1 000034  B847 0010                            LDR,R3   LINSPDX,AUTO
          1 000036  8CB0 0000 0022  xsym                 LDI      KX_STATS_X29+34,R3
          1 000039  8470 FFFF FFFF                       AID      -1,IMO
          1 00003C  8D30 0000 0022  xsym                 SDI      KX_STATS_X29+34,R3

     1106    18406    1       KX_STATS_X29.CIRCUITS = KX_STATS_X29.CIRCUITS - 1;

  18406   1 00003F  8C80 0000 004A  xsym                 LDI      KX_STATS_X29+74
          1 000042  8470 FFFF FFFF                       AID      -1,IMO
          1 000045  8D00 0000 004A  xsym                 SDI      KX_STATS_X29+74

     1107    18407    1       KX_STATS_X29.KHSTT.CTXBYTUTL = KX_STATS_X29.KHSTT.CTXBYTUTL - RLSWRDSIZ*2;

  18407   1 000048  F847 000C                            LDR,R7   RLSWRDSIZ,AUTO
          1 00004A  6C00                                 LDV,R6   0
          1 00004B  7081                                 DOL,R7   1
          1 00004C  8656                                 CPL      R6
          1 00004D  8657                                 CPL      R7
          1 00004E  8470 0000 0001                       AID      1,IMO
          1 000051  8400 0000 0020  xsym                 AID      KX_STATS_X29+32
          1 000054  8D00 0000 0020  xsym                 SDI      KX_STATS_X29+32

     1108    18408            %DISABLE;

  18409   1 000057  CC80 0000 0002  xsym                 LDB,B4   KH_CTLTBL+2
          1 00005A  D804                                 LDR,R5   ,B4
          1 00005B  DF47 000B                            STR,R5   LEVEL,AUTO

  18409   1 00005D  BBC7 000B                            LAB,B3   LEVEL,AUTO
PL6.E3A0      #006=KXX$RLSCTX File=KXX$MSC.:E05TSI                               WED 07/30/97 02:36 Page:183  
          1 00005F  BFC7 0014                            STB,B3   CNTL$+2,AUTO
          1 000061  BBC7 0014                            LAB,B3   CNTL$+2,AUTO
          1 000063  CBF0 0100                            LAB,B4   256,IMO
          1 000065  E380 0000 0000  xent                 LNJ,B6   KHI$DISABLE
          1 000068       0001                            DC       s:18411,PREL

     1109    18411    1       IF CNC_TYP = %KXX_TYP_X29#

  18411   1 000069  E847 0011                            LDR,R6   CNC_TYP,AUTO
          1 00006B  6D01                                 CMV,R6   1
          1 00006C  0981 0039                            BNE      s:18424,PREL

     1110    18412    1          THEN
     1111    18413    2             DO;

     1112    18414    3                DO WHILE ( KX$X29.INPBFR.HED$ ~= ADDR(NIL) );

  18414   1 00006E  0F81 0030                            B        s:18420,PREL

     1113    18415    3                   DAT$ = KX$X29.INPBFR.HED$;

  18415   1 000070  ECC7 0004                            LDB,B6   @KX$X29,AUTO
          1 000072  DCC6 0008                            LDB,B5   8,B6
          1 000074  DFC7 000D                            STB,B5   DAT$,AUTO

     1114    18416    3                   KX$X29.INPBFR.HED$ = KX$X29_INPBFR.FPT.PRM1$;

  18416   1 000076  CCC5 0007                            LDB,B4   7,B5
          1 000078  CFC6 0008                            STB,B4   8,B6

     1115    18417    3                   KVBSIZ = KX$X29_INPBFR.FPT.PRM1;

  18417   1 00007A  DCC7 000D                            LDB,B5   DAT$,AUTO
          1 00007C  E845 0005                            LDR,R6   5,B5
          1 00007E  EF47 000F                            STR,R6   KVBSIZ,AUTO

     1116    18418    3                   CALL KVB$RLSSYS ( KVBSIZ, DAT$ );
PL6.E3A0      #006=KXX$RLSCTX File=KXX$MSC.:E05TSI                               WED 07/30/97 02:36 Page:184  

  18418   1 000080  CBC7 000D                            LAB,B4   DAT$,AUTO
          1 000082  CFC7 0016                            STB,B4   CNTL$+4,AUTO
          1 000084  BBC7 000F                            LAB,B3   KVBSIZ,AUTO
          1 000086  BFC7 0014                            STB,B3   CNTL$+2,AUTO
          1 000088  BBC7 0014                            LAB,B3   CNTL$+2,AUTO
          1 00008A  CBF0 0200                            LAB,B4   512,IMO
          1 00008C  E380 0000 0000  xent                 LNJ,B6   KVB$RLSSYS
          1 00008F       0001                            DC       s:18419,PREL

     1117    18419    3                   KX_STATS_X29.KHSTT.INPBFRBYTUTL = KX_STATS_X29.KHSTT.INPBFRBYTUTL -
             18419                            KVBSIZ*2;

  18419   1 000090  F847 000F                            LDR,R7   KVBSIZ,AUTO
          1 000092  6C00                                 LDV,R6   0
          1 000093  7081                                 DOL,R7   1
          1 000094  8656                                 CPL      R6
          1 000095  8657                                 CPL      R7
          1 000096  8470 0000 0001                       AID      1,IMO
          1 000099  8400 0000 001C  xsym                 AID      KX_STATS_X29+28
          1 00009C  8D00 0000 001C  xsym                 SDI      KX_STATS_X29+28

     1118    18420    3                END;

  18420   1 00009F  ECC7 0004                            LDB,B6   @KX$X29,AUTO
          1 0000A1  8DC6 0008                            CMN      8,B6
          1 0000A3  09CD                                 BNE      s:18415,SPREL

     1119    18421    2             END;

  18421   1 0000A4  0F81 0081                            B        s:18450,PREL

     1120    18422    1          ELSE
     1121    18423    2             DO;

     1122    18424    2                IF %KX_VC.CALPKT$ ~= ADDR(NIL)

PL6.E3A0      #006=KXX$RLSCTX File=KXX$MSC.:E05TSI                               WED 07/30/97 02:36 Page:185  
  18424   1 0000A6  ECC7 0004                            LDB,B6   @KX$X29,AUTO
          1 0000A8  8DC6 0026                            CMN      38,B6
          1 0000AA  0901 0017                            BE       s:18427,PREL

     1123    18425    2                   THEN
     1124    18426    2                      CALL KVB$RLSSYS ( (%KX_VC.CALMSGBYTSIZ+1)/2, %KX_VC.CALPKT$ );

  18426   1 0000AC  D846 0028                            LDR,R5   40,B6
          1 0000AE  5E01                                 ADV,R5   1
          1 0000AF  5041                                 SOR,R5   1
          1 0000B0  DF47 0014                            STR,R5   CNTL$+2,AUTO
          1 0000B2  DBC6 0026                            LAB,B5   38,B6
          1 0000B4  DFC7 0017                            STB,B5   CNTL$+5,AUTO
          1 0000B6  CBC7 0014                            LAB,B4   CNTL$+2,AUTO
          1 0000B8  CFC7 0015                            STB,B4   CNTL$+3,AUTO
          1 0000BA  BBC7 0015                            LAB,B3   CNTL$+3,AUTO
          1 0000BC  CBF0 0200                            LAB,B4   512,IMO
          1 0000BE  E380 0000 0000  xent                 LNJ,B6   KVB$RLSSYS
          1 0000C1       0001                            DC       s:18427,PREL

     1125    18427    2                IF %KX_VC.INTPKT$ ~= ADDR(NIL)

  18427   1 0000C2  ECC7 0004                            LDB,B6   @KX$X29,AUTO
          1 0000C4  8DC6 002C                            CMN      44,B6
          1 0000C6  0901 0017                            BE       s:18430,PREL

     1126    18428    2                   THEN
     1127    18429    2                      CALL KVB$RLSSYS ( (%KX_VC.INTMSGBYTSIZ+1)/2, %KX_VC.INTPKT$ );

  18429   1 0000C8  E846 002E                            LDR,R6   46,B6
          1 0000CA  6E01                                 ADV,R6   1
          1 0000CB  6041                                 SOR,R6   1
          1 0000CC  EF47 0014                            STR,R6   CNTL$+2,AUTO
          1 0000CE  DBC6 002C                            LAB,B5   44,B6
          1 0000D0  DFC7 0017                            STB,B5   CNTL$+5,AUTO
          1 0000D2  CBC7 0014                            LAB,B4   CNTL$+2,AUTO
          1 0000D4  CFC7 0015                            STB,B4   CNTL$+3,AUTO
PL6.E3A0      #006=KXX$RLSCTX File=KXX$MSC.:E05TSI                               WED 07/30/97 02:36 Page:186  
          1 0000D6  BBC7 0015                            LAB,B3   CNTL$+3,AUTO
          1 0000D8  CBF0 0200                            LAB,B4   512,IMO
          1 0000DA  E380 0000 0000  xent                 LNJ,B6   KVB$RLSSYS
          1 0000DD       0001                            DC       s:18430,PREL

     1128    18430    2                IF %KX_VC.CLRPKT$ ~= ADDR(NIL)

  18430   1 0000DE  ECC7 0004                            LDB,B6   @KX$X29,AUTO
          1 0000E0  8DC6 0029                            CMN      41,B6
          1 0000E2  0901 0017                            BE       s:18433,PREL

     1129    18431    2                   THEN
     1130    18432    2                      CALL KVB$RLSSYS ( (%KX_VC.CLRMSGBYTSIZ+1)/2, %KX_VC.CLRPKT$ );

  18432   1 0000E4  E846 002B                            LDR,R6   43,B6
          1 0000E6  6E01                                 ADV,R6   1
          1 0000E7  6041                                 SOR,R6   1
          1 0000E8  EF47 0014                            STR,R6   CNTL$+2,AUTO
          1 0000EA  DBC6 0029                            LAB,B5   41,B6
          1 0000EC  DFC7 0017                            STB,B5   CNTL$+5,AUTO
          1 0000EE  CBC7 0014                            LAB,B4   CNTL$+2,AUTO
          1 0000F0  CFC7 0015                            STB,B4   CNTL$+3,AUTO
          1 0000F2  BBC7 0015                            LAB,B3   CNTL$+3,AUTO
          1 0000F4  CBF0 0200                            LAB,B4   512,IMO
          1 0000F6  E380 0000 0000  xent                 LNJ,B6   KVB$RLSSYS
          1 0000F9       0001                            DC       s:18433,PREL

     1131    18433    2                CNTL$ = %KX_VC.CNTL$;

  18433   1 0000FA  ECC7 0004                            LDB,B6   @KX$X29,AUTO
          1 0000FC  DCC6 0012                            LDB,B5   18,B6
          1 0000FE  DFC7 0012                            STB,B5   CNTL$,AUTO

     1132    18434    2                IF CNTL$ ~= ADDR(NIL)

  18434   1 000100  8DC7 0012                            CMN      CNTL$,AUTO
          1 000102  0901 0023                            BE       s:18450,PREL
PL6.E3A0      #006=KXX$RLSCTX File=KXX$MSC.:E05TSI                               WED 07/30/97 02:36 Page:187  

     1133    18435    2                   THEN
     1134    18436    3                      DO;

     1135    18437    3                         KX$LINKDEV.CRCCNT = KX$LINKDEV.CRCCNT - 1;

  18437   1 000104  88C5 0011                            DEC      17,B5

     1136    18438    3                         IF ADDR(KX$X29) = KX$LINKDEV.L4_HEAD$

  18438   1 000106  EDC5 000C                            CMB,B6   12,B5
          1 000108  0981 0007                            BNE      s:18442,PREL

     1137    18439    3                            THEN
     1138    18440    3                               KX$LINKDEV.L4_HEAD$ = %KX_VC.FLNK$;

  18440   1 00010A  CCC6 0008                            LDB,B4   8,B6
          1 00010C  CFC5 000C                            STB,B4   12,B5
          1 00010E  0F81 0007                            B        s:18443,PREL

     1139    18441    3                            ELSE
     1140    18442    3                               %KX_VC.BLNK$->KX$VC.FLNK$ = %KX_VC.FLNK$;

  18442   1 000110  CCC6 000A                            LDB,B4   10,B6
          1 000112  BCC6 0008                            LDB,B3   8,B6
          1 000114  BFC4 0008                            STB,B3   8,B4

     1141    18443    3                         IF ADDR(KX$X29) = KX$LINKDEV.L4_TAIL$

  18443   1 000116  EDC5 000E                            CMB,B6   14,B5
          1 000118  0981 0007                            BNE      s:18447,PREL

     1142    18444    3                            THEN
     1143    18445    3                               KX$LINKDEV.L4_TAIL$ = %KX_VC.BLNK$;

  18445   1 00011A  CCC6 000A                            LDB,B4   10,B6
          1 00011C  CFC5 000E                            STB,B4   14,B5
PL6.E3A0      #006=KXX$RLSCTX File=KXX$MSC.:E05TSI                               WED 07/30/97 02:36 Page:188  
          1 00011E  0F81 0007                            B        s:18450,PREL

     1144    18446    3                            ELSE
     1145    18447    3                               %KX_VC.FLNK$->KX$VC.BLNK$ = %KX_VC.BLNK$;

  18447   1 000120  CCC6 0008                            LDB,B4   8,B6
          1 000122  BCC6 000A                            LDB,B3   10,B6
          1 000124  BFC4 000A                            STB,B3   10,B4

     1146    18448    3                      END;

     1147    18449    2             END;

     1148    18450    1       CALL KVB$RLSSYS ( RLSWRDSIZ, ADDR(KX$X29) );

  18450   1 000126  EFC7 0014                            STB,B6   CNTL$+2,AUTO
          1 000128  DBC7 0014                            LAB,B5   CNTL$+2,AUTO
          1 00012A  DFC7 0018                            STB,B5   CNTL$+6,AUTO
          1 00012C  CBC7 000C                            LAB,B4   RLSWRDSIZ,AUTO
          1 00012E  CFC7 0016                            STB,B4   CNTL$+4,AUTO
          1 000130  BBC7 0016                            LAB,B3   CNTL$+4,AUTO
          1 000132  CBF0 0200                            LAB,B4   512,IMO
          1 000134  E380 0000 0000  xent                 LNJ,B6   KVB$RLSSYS
          1 000137       0001                            DC       s:18452,PREL

     1149    18451            %ENABLE;

  18452   1 000138  EC80 0000 0002  xsym                 LDB,B6   KH_CTLTBL+2
          1 00013B  E847 000B                            LDR,R6   LEVEL,AUTO
          1 00013D  E906                                 CMR,R6   ,B6
          1 00013E  0901 0007                            BE       s:18455,PREL

  18452   1 000140  CBF0 0000                            LAB,B4   0,IMO
          1 000142  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          1 000145       0001                            DC       s:18455,PREL

     1150    18454
PL6.E3A0      #006=KXX$RLSCTX File=KXX$MSC.:E05TSI                               WED 07/30/97 02:36 Page:189  
     1151    18455    1       RETURN;

  18455   1 000146  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
     1152    18456
     1153    18457    1   END KXX$RLSCTX;

PL6.E3A0      #006=KXX$RLSCTX File=KXX$MSC.:E05TSI                               WED 07/30/97 02:36 Page:190  
--  Include file information  --

   KNH_MACRO_C.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   KL_CONTROL_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KV$GLBCTX.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KA_GLB_E.:E05TOU  is referenced.
   KHA_FNC_E.:E05TOU  is referenced.
   KH_MACRO_C.:E05TOU  is referenced.
   KX_DATA_C.:E05TOU  is referenced.
   KX_SCODE_C.:E05TOU  is referenced.
   KXX_MACROS_M.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure KXX$RLSCTX.
PL6.E3A0      #006=KXX$RLSCTX File=KXX$MSC.:E05TSI                               WED 07/30/97 02:36 Page:191  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @KX$X29                   11-0-0/w UBIN(16)    r     1 CNC_TYP
    12-0-0/w PTR         r     1 CNTL$                      D-0-0/w PTR         r     1 DAT$
     F-0-0/w UBIN(16)    r     1 KVBSIZ                    *0-0-0/w STRC(576)   r     1 KX$X29
     8-0-0/w PTR         r     1 L3$                        B-0-0/w UBIN(16)    r     1 LEVEL
    10-0-0/w UBIN(16)    r     1 LINSPDX                    C-0-0/w UBIN(16)    r     1 RLSWRDSIZ
     6-0-0/w PTR         r     1 VDI$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(64)    r     1 KH_CTLTBL
     0-0-0/c UBIN(8)     r     1 KX_LINSPDX_X3_TO_CP6(0:18)
     0-0-0/b EPTR        r     1 KX_PM$(0:2)                0-0-0/w STRC(1248)  r     1 KX_STATS_X29

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(16)    r     1 BASED_WORD                 0-0-0/w STRC(2320)  r     1 KX$L3
     0-0-0/w STRC(384)   r     1 KX$LINKDEV                 0-0-0/w STRC(824)   r     1 KX$VC
     0-0-0/w STRC(256)   r     1 KX$X29_INPBFR


   Procedure KXX$RLSCTX requires 329 words for executable code.
   Procedure KXX$RLSCTX requires 26 words of local(AUTO) storage.
PL6.E3A0      #006=KXX$RLSCTX File=KXX$MSC.:E05TSI                               WED 07/30/97 02:36 Page:192  

    No errors detected in file KXX$MSC.:E05TSI    .
PL6.E3A0      #006=KXX$RLSCTX File=KXX$MSC.:E05TSI                               WED 07/30/97 02:36 Page:193  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #006=KXX$RLSCTX File=KXX$MSC.:E05TSI                               WED 07/30/97 02:36 Page:194  
          MINI XREF LISTING

BASED_WORD
     17008**DCL     18409>>ASSIGN  18452>>IF
CNC_TYP
     16038**DCL     18395<<ASSIGN  18401<<ASSIGN  18411>>IF
CNTL$
     16039**DCL     16026--IMP-PTR 18433<<ASSIGN  18434>>IF      18437>>ASSIGN  18437>>ASSIGN  18438>>IF
     18440>>ASSIGN  18443>>IF      18445>>ASSIGN
DAT$
     16035**DCL     17023--IMP-PTR 17087--IMP-PTR 17115--IMP-PTR 18415<<ASSIGN  18416>>ASSIGN  18417>>ASSIGN
     18418<>CALL
KH$CHN.TERMID.TERM
     16995**DCL     17004--REDEF
KHI$DISABLE
     18380**DCL-ENT 18409--CALL
KHI$ENABLE
     18381**DCL-ENT 18452--CALL
KH_CTLTBL.PARM.PTR$
     17610**DCL     18409>>ASSIGN  18452>>IF
KVB$RLSSYS
     18378**DCL-ENT 18418--CALL    18426--CALL    18429--CALL    18432--CALL    18450--CALL
KVBSIZ
     16036**DCL     18417<<ASSIGN  18418<>CALL    18419>>ASSIGN
KX$L2.DFLVCPRF.TRADEL
     16675**DCL     16685--REDEF
KX$L2.DSTSNPA.ADR_STRING
     16866**DCL     16866--REDEF
KX$L2.FRMR_NSNR
     16652**DCL     16653--REDEF
KX$L2.NTWADR.ADR_STRING
     16586**DCL     16586--REDEF
KX$L2.STATES
     16564**DCL     16564--REDEF
PL6.E3A0      #006=KXX$RLSCTX File=KXX$MSC.:E05TSI                               WED 07/30/97 02:36 Page:195  
KX$L3.CALL_OPTS.RCVADR.ADR_STRING
     16174**DCL     16174--REDEF
KX$L3.CM$
     16134**DCL     18391<<ASSIGN
KX$L3.CM_OPTS.RCVADR.ADR_STRING
     16209**DCL     16209--REDEF
KX$L3.CUG
     16252**DCL     16253--REDEF
KX$L3.DFL_OPTS.RCVADR.ADR_STRING
     16244**DCL     16244--REDEF
KX$L3.LCLADR.ADR_STRING
     16369**DCL     16369--REDEF
KX$L3.LCLNSAP
     16386**DCL     16442--REDEF
KX$L3.LCLNSAP.NSAP.ADDRESS_N
     16437**DCL     16438--REDEF
KX$L3.LCN#
     16251**DCL     16252--REDEF
KX$L3.RMTNSAP
     16459**DCL     16515--REDEF
KX$L3.RMTNSAP.NSAP.ADDRESS_N
     16510**DCL     16511--REDEF
KX$L3.STATES
     16257**DCL     16257--REDEF
KX$L3.TRNDLY
     16253**DCL     16254--REDEF
KX$L3.TRNDLYIND
     16254**DCL     16255--REDEF
KX$LINKDEV.CRCCNT
     16029**DCL     18437<<ASSIGN  18437>>ASSIGN
KX$LINKDEV.L4_HEAD$
     16028**DCL     18438>>IF      18440<<ASSIGN
KX$LINKDEV.L4_TAIL$
     16028**DCL     18443>>IF      18445<<ASSIGN
KX$VC
     15936**DCL     18396--ASSIGN
PL6.E3A0      #006=KXX$RLSCTX File=KXX$MSC.:E05TSI                               WED 07/30/97 02:36 Page:196  
KX$VC.BLNK$
     15942**DCL     18442>>ASSIGN  18445>>ASSIGN  18447<<ASSIGN  18447>>ASSIGN
KX$VC.CALCNFPND
     15946**DCL     15947--REDEF
KX$VC.CALMSGBYTSIZ
     15954**DCL     18426>>CALL
KX$VC.CALPKT$
     15954**DCL     18424>>IF      18426<>CALL
KX$VC.CLRMSGBYTSIZ
     15955**DCL     18432>>CALL
KX$VC.CLRPKT$
     15955**DCL     18430>>IF      18432<>CALL
KX$VC.CNTL$
     15943**DCL     18433>>ASSIGN
KX$VC.FLNK$
     15941**DCL     18440>>ASSIGN  18442<<ASSIGN  18442>>ASSIGN  18447>>ASSIGN
KX$VC.INTMSGBYTSIZ
     15956**DCL     18429>>CALL
KX$VC.INTPKT$
     15956**DCL     18427>>IF      18429<>CALL
KX$VC.RLCID
     15957**DCL     15957--REDEF
KX$VC.X3_PRM_BITS
     15950**DCL     15951--REDEF
KX$X29
     15896**DCL        11--PROC    18403--ASSIGN  18424--IF      18426--CALL    18426--CALL    18427--IF
     18429--CALL    18429--CALL    18430--IF      18432--CALL    18432--CALL    18433--ASSIGN  18438--IF
     18440--ASSIGN  18442--ASSIGN  18442--ASSIGN  18443--IF      18445--ASSIGN  18447--ASSIGN  18447--ASSIGN
     18450--CALL
KX$X29.HLTOTP
     15906**DCL     15906--REDEF
KX$X29.HLTOTPNXTBFR
     15909**DCL     15910--REDEF
KX$X29.INPBFR.HED$
     15901**DCL     18414>>DOWHILE 18415>>ASSIGN  18416<<ASSIGN
KX$X29.L3$
PL6.E3A0      #006=KXX$RLSCTX File=KXX$MSC.:E05TSI                               WED 07/30/97 02:36 Page:197  
     15901**DCL     18389>>IF      18391>>ASSIGN
KX$X29.SBR$
     15900**DCL     18392>>IF
KX$X29.X3PRM
     15914**DCL     18402>>ASSIGN
KX$X29_INPBFR.FPT.PRM1
     17060**DCL     18417>>ASSIGN
KX$X29_INPBFR.FPT.PRM1$
     17060**DCL     17061--REDEF   18416>>ASSIGN
KX$X29_INPBFR.FPT.PRM2$
     17062**DCL     17062--REDEF
KX$X29_OTPBFR.HLTOTP
     17091**DCL     17092--REDEF
KXX$X29
     18382**DCL-ENT 18392--IF
KX_LINSPDX_X3_TO_CP6
     17682**DCL     18402>>ASSIGN
KX_STATS_HDLC.REQSTATS.DSPMSK
     17972**DCL     17978--REDEF
KX_STATS_HDLC.REQSTATS.SLCMSK
     18013**DCL     18020--REDEF
KX_STATS_X25.REQSTATS.DSPMSK
     18297**DCL     18303--REDEF
KX_STATS_X25.REQSTATS.SLCMSK
     18338**DCL     18345--REDEF
KX_STATS_X29.CIRCUITS
     17464**DCL     18406<<ASSIGN  18406>>ASSIGN
KX_STATS_X29.KHSTT.CTXBYTUTL
     17460**DCL     18407<<ASSIGN  18407>>ASSIGN
KX_STATS_X29.KHSTT.INPBFRBYTUTL
     17459**DCL     18419<<ASSIGN  18419>>ASSIGN
KX_STATS_X29.LINSPDDST
     17462**DCL     18405<<ASSIGN  18405>>ASSIGN
KX_STATS_X29.REQSTATS.DSPMSK
     17387**DCL     17393--REDEF
KX_STATS_X29.REQSTATS.SLCMSK
PL6.E3A0      #006=KXX$RLSCTX File=KXX$MSC.:E05TSI                               WED 07/30/97 02:36 Page:198  
     17428**DCL     17435--REDEF
L3$
     15873**DCL     16134--IMP-PTR
LEVEL
     15875**DCL     18409<<ASSIGN  18409<>CALL    18452>>IF
LINSPDX
     16037**DCL     18397<<ASSIGN  18402<<ASSIGN  18405>>ASSIGN  18405>>ASSIGN
RLSWRDSIZ
     15876**DCL     18396<<ASSIGN  18403<<ASSIGN  18407>>ASSIGN  18450<>CALL
VDI$
     15872**DCL     16064--IMP-PTR
