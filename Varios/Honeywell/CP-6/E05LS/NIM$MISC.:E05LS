VERSION E05

 03:34 07/30/97  FILE=NIM$MISC.:E05TSI                                                                   1    BMAP - B00     
                                         1  *M*   NIM$MISC - MISCELLANEOUS BMAP ROUTINES FOR I/O SYSTEM
                                         2  *T***********************************************************
                                         3  *T*                                                         *
                                         4  *T* Copyright (c) Bull HN Information Systems Inc., 1997    *
                                         5  *T*                                                         *
                                         6  *T***********************************************************
                                         7  *
                                         8  * EXTERNAL REFERENCES
                                         9  *
                                        10         ENTREF  X66_AUTO_0,X66_AUTO_2,X66_ARET
                                        11         ENTREF  HFC$BMAP_CLOCK
                                        12         SYMREF  S_WSPTD
                                        13         SYMREF  HW_PTB_UNITS
                                        14         SEGREF  MPTSID,NULLSID,LOWMEMSID
                                        15         SYMREF  B$ISB$
                                        16  *
                                        17         LODM    B_BMACROS_C
                                        18         DETAIL  OFF
             000000000000               19         MAGIC
                                        20         DETAIL  ON
                                        21  *
                                        22  * REGISTER DEFINITIONS
                                        23  *
             000000000000               24  PR0    EQU     0
             000000000001               25  PR1    EQU     1
             000000000002               26  PR2    EQU     2
             000000000003               27  PR3    EQU     3
             000000000004               28  PR4    EQU     4
             000000000005               29  PR5    EQU     5
             000000000006               30  PR6    EQU     6
             000000000007               31  PR7    EQU     7
                                        32  *
             000000000002               33  AUTO$  EQU     PR2
             000000000000               34  ARG$   EQU     PR0
             000000000001               35  ADSC$  EQU     PR1
                                        36  *

 03:34 07/30/97  FILE=NIM$MISC.:E05TSI                                                                   2    BMAP - B00     
                                        37         EJECT
                                        38  *      ALIGN macro is used to reserve space up to the desired
                                        39  *      place within a four word block. The containing section
                                        40  *      must have the attribute EIGHT for ALIGN to work properly.
                                        41  *      Invoked as follows:
                                        42  *      ALIGN   {1,2,3,4}
                                        43  *
                                        44  ALIGN  MACRO
                                        45  _1     SET     *-NIM$MISC
                                        46  _2     SET     _1/4*4
                                        47  _2     SET     _1-_2
                                        48  _2     SET     4+#1-_2
                                        49         IFE     _2,1
                                        50         NOP
                                        51         IFE     _2,2,2
                                        52         TRA     2,IC
                                        53         NOP
                                        54         IFE     _2,3,3
                                        55         TRA     3,IC
                                        56         NOP
                                        57         NOP
                                        58         IFE     _2,5
                                        59         NOP
                                        60         IFE     _2,6,2
                                        61         TRA     2,IC
                                        62         NOP
                                        63         IFE     _2,7,3
                                        64         TRA     3,IC
                                        65         NOP
                                        66         NOP
                                        67         ENDM    ALIGN

 03:34 07/30/97  FILE=NIM$MISC.:E05TSI        NIM$CVTPTR - CONVERT POINTER TO VIRTUAL ADDRESS            3    BMAP - B00     
                                        68         TTL     NIM$CVTPTR - CONVERT POINTER TO VIRTUAL ADDRESS
                                        69  *
                                        70  *D*    NAME:   NIM$CVTPTR
                                        71  *,*
                                        72  *,*    CALL:   CALL NIM$CVTPTR(BUF$,VA,PTP)
                                        73  *,*
                                        74  *,*    INPUT:  BUF$ - Pointer to be converted.
                                        75  *,*            VA - Receives byte offset into WSQ. (UBIN WORD)
                                        76  *,*            PTP - Receives page table pointer (UBIN WORD)
                                        77  *,*
                                        78  *,*    DESCRIPTION:   The input pointer is converted to a byte
                                        79  *,*                   offset less than 256K bytes and a page
                                        80  *,*                   table pointer.
                                        81  *,*
                                        82  *
 0 000000                               83         USE     NIM$MISC,1              PROCEDURE
                                        84         INHIB   OFF
                                        85         ENTDEF  NIM$MISC
                                        86         ENTDEF  NIM$CVTPTR              CONVERTS PTR TO VIRT ADDRESS
                                        87         SYMREF  HW_IMX
                                        88         SYMREF  H_ENMASK
                                        89         SYMREF  NI$DS
             000000000004               90  DESC   SET     4
             000000000006               91  WSR    SET     6
             000000000010               92  AUTOSZ SET     8
                                        93         EIGHT
   000000                               94  NIM$MISC NULL
   000000                               95  NIM$CVTPTR NULL
   000000  X 000000 7000 00             96         TSX0    X66_AUTO_0
   000001    000010 000000              97         ZERO    AUTOSZ,0
   000002    0 00000 4755 00            98         LDP5    0,,ARG$         PTR TO BUF$
   000003    0 00001 4765 00            99         LDP6    1,,ARG$         PTR TO VA
   000004    0 00002 4775 00           100         LDP7    2,,ARG$         PTR TO PTP
   000005    5 00000 4745 00           101         LDP4    0,,PR5          PR4 <- BUF$
   000006    2 00004 0545 00           102         STD4    DESC,,AUTO$
   000007    5 00000 2351 00           103         LDA     0,,PR5          A <- BUF$
   000010    000000 2360 07            104         LDQ     0,DL
 03:34 07/30/97  FILE=NIM$MISC.:E05TSI        NIM$CVTPTR - CONVERT POINTER TO VIRTUAL ADDRESS            4    BMAP - B00     
   000011    000020 7710 00            105         ARL     16              A <- BYTE OFFSET OF BUF$
   000012    2 00005 0751 00           106         ADA     DESC+1,,AUTO$   ADD DESCRIPTOR BASE
   000013    000022 7730 00            107         LRL     18              A <- BYTE OFFSET/256 K BYTES
   000014    2 00005 7551 00           108         STA     DESC+1,,AUTO$   SAVE FOR A WHILE
   000015    000022 7720 00            109         QRL     18              Q <- MOD(BYTE OFFSET,256K)
   000016    6 00000 7561 00           110         STQ     0,,PR6          RETURN VA
   000017    2 00004 2351 00           111         LDA     DESC,,AUTO$     GET TYPE AND WSR/WSQ
   000020    000004 7730 00            112         LRL     4               SEPARATE THEM
   000021    000777 3750 07            113         ANA     =O777,DL        ASSUME WSQ IN AL
   000022    700000 3160 03            114         CANQ    =O700000,DU     IS TYPE > 1?
   000023 (0)000034 6010 00            115         TNZ     GOTWSQ          T/ YEP
   000024    000007 3750 07            116         ANA     7,DL            GET WSR
   000025    2 00006 7525 00           117         STWS    WSR,,AUTO$      SAVE WSR0-3
   000026    2 00007 7525 00           118         STWS    WSR+1,,AUTO$    SAVE WSR4-7
   000027    000 0 100 1005 05         119         MLR     (1,,,AL),(1,,,) PICK UP WSQ FROM CORRECT WSR
   000030    2 00006 0 0 0 0001        120         ADSC9   WSR,0,1,AUTO$
   000031    2 00006 0 0 0 0001        121         ADSC9   WSR,0,1,AUTO$
   000032    2 00006 2351 00           122         LDA     WSR,,AUTO$
   000033    000033 7710 00            123         ARL     27
   000034                              124  GOTWSQ NULL
   000034  X 000000 2360 05            125         LDQ     S_WSPTD,AL
   000035    000022 7720 00            126         QRL     18              Q <- PTP OF DESCRIPTOR
   000036    2 00007 7561 00           127         STQ     WSR+1,,AUTO$    THE FNO IS 72 BIT
                                       128         INHIB   ON
   000037    2 00006 7543 00           129         STI     WSR,,AUTO$       SQUIRELL IR AWAY - WERE DONE WITH WSRS
   000040    000200 6342 03            130         LDI     =O200,DU          BINARY FLT MODE+MASTER MODE
   000041    000000 4112 03            131         LDE     0,DU              ZERO $E
   000042  X 000000 2352 00            132         LDA     HW_PTB_UNITS      GET UNITS IN $A
   000043    000000 5732 00            133         FNO                       ADD UP -BIT POSITIONS IN $E
   000044    2 00006 6343 00           134         LDI     WSR,,AUTO$        PUT $IR BACK
                                       135         INHIB   OFF
   000045    2 00006 4561 00           136         STE     WSR,,AUTO$      STORE $E
   000046    2 00006 2351 00           137         LDA     WSR,,AUTO$      AND PUT IT IN $A
   000047    000034 7310 00            138         ARS     28                MOVE -BIT SHIFTS INTO AL
   000050    000034 0350 07            139         ADLA    28,DL             SUBTRACT BIT SHIFTS FROM 28.
   000051    2 00007 2361 00           140         LDQ     WSR+1,,AUTO$    PICK $Q BACK UP
   000052    000000 7360 05            141         QLS     0,AL              WE NOW HAVE THE RIGHT MOD FOR CPU
 03:34 07/30/97  FILE=NIM$MISC.:E05TSI        NIM$CVTPTR - CONVERT POINTER TO VIRTUAL ADDRESS            5    BMAP - B00     
   000053    2 00005 0761 00           142         ADQ     DESC+1,,AUTO$   ADJUST FOR MOD 256K BYTES
   000054    7 00000 7561 00           143         STQ     0,,PR7          RETURN PTP
   000055  X 000000 2340 00            144         SZN     HW_IMX                  ARE WE ON AN IMX (RPM)
   000056  X 000000 6050 00            145         TPL     X66_ARET                T/ NOPE
   000057    000006 7360 00            146         QLS     6                       FOR IMX WE WANT A VA < 4096
   000060    6 00000 2351 00           147         LDA     0,,6                    GET VA BACK IN A
   000061    000014 7710 00            148         ARL     12                      GET BITS OVER 4096
   000062    2 00006 7551 00           149         STA     6,,PR2                  STORE THE BITS OVER 4096
   000063    2 00006 0761 00           150         ADQ     6,,PR2                  ADD THE BITS TO Q
   000064    7 00000 7561 00           151         STQ     0,,7                    STORE PTP AGAIN
   000065    6 00000 2351 00           152         LDA     0,,6                    GET VA AGAIN
   000066    007777 3750 07            153         ANA     =O7777,DL               MASK OFF UPPER BITS
   000067    6 00000 7551 00           154         STA     0,,6                    STORE BACK INTO VA
   000070  X 000000 7100 00            155         TRA     X66_ARET                NOW WE CAN GO BACK

 03:34 07/30/97  FILE=NIM$MISC.:E05TSI        NIM$WRENBL - ENABLE WRITE OF READ-ONLY PAGE(S)             6    BMAP - B00     
                                       156         TTL     NIM$WRENBL - ENABLE WRITE OF READ-ONLY PAGE(S)
                                       157  *
                                       158  * CALL NIM$WRENBL(FIRST,LAST)
                                       159  *
                                       160  * WHERE: FIRST IS FIRST WORD OF TABLE
                                       161  *        LAST  IS LAST WORD OF TABLE
                                       162  *
                                       163  * MUST BE IN PRIVILEGED MASTER MODE
                                       164  *
                                       165  *
   000071                              166         USE     NIM$MISC
                                       167         INHIB   OFF
                                       168         ENTDEF  NIM$WRENBL
   000071                              169  NIM$WRENBL NULL
   000071  X 000000 7000 00            170         TSX0    X66_AUTO_2
   000072    000010 000002             171         ZERO    8,2
   000073  X 000000 4714 07            172         LDP1    MPTSID,DL               -> MONITOR PAGE TABLE
   000074    000001 2200 03            173         LDX0    1,DU
   000075                              174  WRENBL1 NULL
   000075    2 00003 4705 10           175         LDP0    3,X0,AUTO$              -> PARAMETER
   000076    2 00006 0505 00           176         STD0    6,,AUTO$                STORE DESCRIPTOR
   000077    2 00003 2351 10           177         LDA     3,X0,AUTO$
   000100    000020 7710 00            178         ARL     16                      BYTE ADDRESS OF PARAMETER
   000101    2 00007 0751 00           179         ADA     7,,AUTO$                +DESCR. BASE = VIRTUAL BYTE ADDRESS
   000102    000014 7710 00            180         ARL     12                      VIRTUAL PAGE NUMBER
   000103    000020 2360 07            181         LDQ     =O20,DL                 SET WRITE CONTROL BIT
   000104    1 00000 2561 05           182         ORSQ    0,AL,PR1                IN PAGE TABLE WORD
   000105    777777 0600 03            183         ADX0    -1,DU
   000106 (0)000075 6050 00            184         TPL     WRENBL1                 LOOP BACK TO PROCESS OTHER PARAMETER
   000107    000002 5324 00            185         CAMP    2
   000110  X 000000 7100 00            186         TRA     X66_ARET                RETURN

 03:34 07/30/97  FILE=NIM$MISC.:E05TSI        NIM$WRDSBL - DISABLE WRITE OF READ-ONLY PAGE(S)            7    BMAP - B00     
                                       187         TTL     NIM$WRDSBL - DISABLE WRITE OF READ-ONLY PAGE(S)
                                       188  *
                                       189  * CALL NIM$WRDSBL(FIRST,LAST)
                                       190  *
                                       191  * WHERE: FIRST IS FIRST WORD OF TABLE
                                       192  *        LAST  IS LAST WORD OF TABLE
                                       193  *
                                       194  * MUST BE IN PRIVILEGED MASTER MODE
                                       195  *
   000111                              196         USE     NIM$MISC
                                       197         INHIB   OFF
                                       198         ENTDEF  NIM$WRDSBL
   000111                              199  NIM$WRDSBL NULL
   000111  X 000000 7000 00            200         TSX0    X66_AUTO_2
   000112    000010 000002             201         ZERO    8,2
   000113  X 000000 4714 07            202         LDP1    MPTSID,DL               -> MONITOR PAGE TABLE
   000114    000001 2200 03            203         LDX0    1,DU
   000115                              204  WRDSBL1 NULL
   000115    2 00003 4705 10           205         LDP0    3,X0,AUTO$              -> PARAMETER
   000116    2 00006 0505 00           206         STD0    6,,AUTO$                STORE DESCRIPTOR
   000117    2 00003 2351 10           207         LDA     3,X0,AUTO$
   000120    000020 7710 00            208         ARL     16                      BYTE ADDRESS OF PARAMETER
   000121    2 00007 0751 00           209         ADA     7,,AUTO$                +DESCR. BASE = VIRTUAL BYTE ADDRESS
   000122    000014 7710 00            210         ARL     12                      VIRTUAL PAGE NUMBER
   000123    000021 3360 07            211         LCQ     =O21,DL                 CLEAR WRITE CONTROL BIT
   000124    1 00000 3561 05           212         ANSQ    0,AL,PR1                IN PAGE TABLE WORD
   000125    777777 0600 03            213         ADX0    -1,DU
   000126 (0)000115 6050 00            214         TPL     WRDSBL1                 LOOP BACK TO PROCESS OTHER PARAMETER
   000127    000002 5324 00            215         CAMP    2
   000130  X 000000 7100 00            216         TRA     X66_ARET                RETURN

 03:34 07/30/97  FILE=NIM$MISC.:E05TSI        NIM$DEQUEUE - Dequeue packet                               8    BMAP - B00     
                                       217         TTL     NIM$DEQUEUE - Dequeue packet
                                       218  *
                                       219  * CALLING SEQUENCE:
                                       220  *
                                       221  *      CALL NIM$DEQUEUE(PACKET$,QUEUE$) ALTRET(QUEUE$ EMPTY);
                                       222  *
                                       223  * WHERE:
                                       224  *      PACKET$ = THE LOCATION TO RETURN THE PACKET POINTER
                                       225  *      QUEUE$  = THE QUEUE HEADER
                                       226  *
   000131                              227         USE     NIM$MISC,1
                                       228         INHIB   ON
                                       229         ENTDEF  NIM$DEQUEUE
   000131                              230  NIM$DEQUEUE NULL
   000131    0 00000 4717 00           231         LDP1    0,,ARG$         P1 <- PACKET$
   000132    0 00001 4737 00           232         LDP3    1,,ARG$         P3 <- QUE$
   000133  X 000000 2352 07            233         LDA     NULLSID,DL
   000134    3 00000 1153 00           234         CMPA    0,,PR3          IS QUEUE EMPTY?
   000135 (0)000140 6012 00            235         TNZ     DEQ1
   000136    1 00000 7553 00           236         STA     0,,PR1                  YES: PACKET$=NULL
   000137    000000 7102 11            237         TRA     0,X1                    ALTRETURN
                                       238  *
   000140                              239  DEQ1   NULL                            NO:
   000140    3 00000 4747 00           240         LDP4    0,,PR3                  PACKET$=QUEUE$->0
   000141    4 00000 2363 00           241         LDQ     0,,PR4
   000142    1 00000 7563 00           242         STQ     0,,PR1
   000143    1 00000 4707 00           243         LDP0    0,,PR1
   000144    3 00000 1163 00           244         CMPQ    0,,PR3                  IS QUEUE$ NOW EMPTY?
   000145 (0)000151 6012 00            245         TNZ     DEQ2
   000146    3 00000 7553 00           246         STA     0,,PR3                  YES: QUEUE$=NULL
   000147    0 00000 7553 00           247         STA     0,,PR0                  PACKET$->0=NULL
   000150    000001 7102 11            248         TRA     1,X1
                                       249  *
   000151                              250  DEQ2   NULL                            NO:
   000151    0 00000 2363 00           251         LDQ     0,,PR0                  QUEUE$->0=PACKET$->0
   000152    4 00000 7563 00           252         STQ     0,,PR4
   000153    0 00000 7553 00           253         STA     0,,PR0                  PACKET$->0=NULL
 03:34 07/30/97  FILE=NIM$MISC.:E05TSI        NIM$DEQUEUE - Dequeue packet                               9    BMAP - B00     
   000154    000001 7102 11            254         TRA     1,X1

 03:34 07/30/97  FILE=NIM$MISC.:E05TSI        NIM$ENQUEUE - Enqueue packet                               10   BMAP - B00     
                                       255         TTL     NIM$ENQUEUE - Enqueue packet
                                       256  *
                                       257  * CALLING SEQUENCE:
                                       258  *
                                       259  *      CALL NIM$ENQUEUE(PACKET,QUEUE$);
                                       260  *
                                       261  * WHERE:
                                       262  *      PACKET = THE PACKET TO BE ENQUEUED
                                       263  *      QUEUE$ = THE QUEUE HEADER
                                       264  *
   000155                              265         USE     NIM$MISC,1
                                       266         INHIB   ON
                                       267         ENTDEF  NIM$ENQUEUE
   000155                              268  NIM$ENQUEUE NULL
   000155    0 00000 4717 00           269         LDP1    0,,ARG$         P1 <- PACKET
   000156    0 00001 4737 00           270         LDP3    1,,ARG$         P3 <- QUE$
   000157    3 00000 2363 00           271         LDQ     0,,PR3                  IS QUEUE$ EMPTY?
   000160  X 000000 1162 07            272         CMPQ    NULLSID,DL
   000161 (0)000165 6012 00            273         TNZ     ENQ1
   000162    1 00000 4517 00           274         STP1    0,,PR1                  YES: PACKET.FL$=ADDR(PACKET)
   000163    3 00000 4517 00           275         STP1    0,,PR3                  QUEUE$=ADDR(PACKET);
   000164    000001 7102 11            276         TRA     1,X1                    RETURN
                                       277  *
   000165                              278  ENQ1   NULL                            NO:
   000165    3 00000 4707 00           279         LDP0    0,,PR3                  PACKET.FL$=QUEUE$->0
   000166    0 00000 2363 00           280         LDQ     0,,PR0
   000167    1 00000 7563 00           281         STQ     0,,PR1
   000170    0 00000 4517 00           282         STP1    0,,PR0                  QUEUE$->0=ADDR(PACKET)
   000171    3 00000 4517 00           283         STP1    0,,PR3                  QUEUE$=ADDR(PACKET);
   000172    000001 7102 11            284         TRA     1,X1                    RETURN

 03:34 07/30/97  FILE=NIM$MISC.:E05TSI        NIM$REQUEUE - Enqueue packet at head of queue              11   BMAP - B00     
                                       285         TTL     NIM$REQUEUE - Enqueue packet at head of queue
                                       286  *
                                       287  * CALLING SEQUENCE:
                                       288  *
                                       289  *      CALL NIM$REQUEUE(PACKET,QUEUE$);
                                       290  *
                                       291  * WHERE:
                                       292  *      PACKET = THE PACKET TO BE ENQUEUED
                                       293  *      QUEUE$ = THE QUEUE HEADER
                                       294  *
   000173                              295         USE     NIM$MISC,1
                                       296         INHIB   ON
                                       297         ENTDEF  NIM$REQUEUE
   000173                              298  NIM$REQUEUE NULL
   000173    0 00000 4717 00           299         LDP1    0,,ARG$         P1 <- PACKET
   000174    0 00001 4737 00           300         LDP3    1,,ARG$         P3 <- QUE$
   000175    3 00000 2363 00           301         LDQ     0,,PR3                  IS QUEUE$ EMPTY?
   000176  X 000000 1162 07            302         CMPQ    NULLSID,DL
   000177 (0)000203 6012 00            303         TNZ     REQ1
   000200    1 00000 4517 00           304         STP1    0,,PR1                  YES: PACKET.FL$=ADDR(PACKET)
   000201    3 00000 4517 00           305         STP1    0,,PR3                  QUEUE$=ADDR(PACKET);
   000202    000001 7102 11            306         TRA     1,X1                    RETURN
                                       307  *
   000203                              308  REQ1   NULL                            NO:
   000203    3 00000 4707 00           309         LDP0    0,,PR3                  PACKET.FL$=QUEUE$->0
   000204    0 00000 2363 00           310         LDQ     0,,PR0
   000205    1 00000 7563 00           311         STQ     0,,PR1
   000206    0 00000 4517 00           312         STP1    0,,PR0                  QUEUE$->0=ADDR(PACKET)
   000207    000001 7102 11            313         TRA     1,X1                    RETURN
                                       314  *

 03:34 07/30/97  FILE=NIM$MISC.:E05TSI        NIM$CONNECT - ISSUE I/O CONNECT                            12   BMAP - B00     
                                       315         TTL     NIM$CONNECT - ISSUE I/O CONNECT
                                       316  *
                                       317  * CALLING SEQUENCE:
                                       318  *
                                       319  *      CALL NIM$CONNECT
                                       320  *
   000210                              321         USE     NIM$MISC,1
                                       322         INHIB   ON
                                       323         ENTDEF  NIM$CONNECT
                                       324         SYMREF  NI_CONADDR
   000210                              325  NIM$CONNECT NULL
   000210  X 000000 0152 00            326         CIOC    NI_CONADDR
   000211    000001 7102 11            327         TRA     1,X1
                                       328  *

 03:34 07/30/97  FILE=NIM$MISC.:E05TSI        NIM$IMXCONNECT - ISSUE IMX IO CONNECT                      13   BMAP - B00     
                                       329         TTL     NIM$IMXCONNECT - ISSUE IMX IO CONNECT
                                       330  *
                                       331  * CALLING SEQUENCE:
                                       332  *
                                       333  *      CALL NIM$IMXCONNECT
                                       334  *
   000212                              335         USE     NIM$MISC,1
                                       336         INHIB   ON
                                       337         ENTDEF  NIM$IMXCONNECT
                                       338         SYMREF  NI_IMX_CCW
   000212                              339  NIM$IMXCONNECT NULL
   000212  X 000000 4716 00            340         LDP1    NI_CONADDR              GET PTR TO MBX
   000213  X 000000 2352 00            341         LDA     NI_IMX_CCW              LDA WITH CCW
   000214    000010 0352 07            342         ADLA    8,DL                    ADD 8 (SEE IMX EPS)
   000215    1 00000 0153 00           343         CIOC    0,,1                    DO CONNECT
   000216    000001 7102 11            344         TRA     1,X1
                                       345  *

 03:34 07/30/97  FILE=NIM$MISC.:E05TSI        NIM$CHNGAARD - CHANGE AARDVARKS DCTS                       14   BMAP - B00     
                                       346         TTL     NIM$CHNGAARD - CHANGE AARDVARKS DCTS
                                       347  *
                                       348  * CALLING SEQUENCE:
                                       349  *
                                       350  *      CALL NIM$CHNGAARD
                                       351  *
   000217                              352         USE     NIM$MISC,1
                                       353         INHIB   ON
                                       354         ENTDEF  NIM$CHNGAARD
                                       355        SEGREF      ISRSID
             000000020000              356  MINIQ  BOOL    20000
   000217                              357  NIM$CHNGAARD NULL
   000217  X 000000 4706 07            358         LDP0    LOWMEMSID,DL
   000220  X 000000 4776 07            359         LDP7    ISRSID,DL
   000221    000000 2352 07            360         LDA     0,DL
   000222    0 20000 7073 00           361         TSX7    MINIQ,,PR0
   000223    000000 7102 11            362         TRA     0,X1
   000224    000001 7102 11            363         TRA     1,X1
                                       364  *

 03:34 07/30/97  FILE=NIM$MISC.:E05TSI        NIM$INTDIS - Interrupt Distributor                         15   BMAP - B00     
                                       365         TTL     NIM$INTDIS - Interrupt Distributor
                                       366  *
                                       367  *D* NAME:      NIM$INTDIS
                                       368  *
                                       369  *D* CALL:      Wired-in   CLIMB through entry descriptor at location 30(octal).
                                       370  *
                                       371  *D* ENVIRONMENT: Privileged Master Mode, interrupts inhibited.
                                       372  *
                                       373  *D* DESCRIPTION: NIM$INTDIS determines the interrupting channel and
                                       374  *,*            calls   the appropriate Device Interrupt Routine.
                                       375  *
                                       376  * AUTO FRAME
                                       377  *
             000000000003              378  IMW    SET     3
             000000000004              379  SSR    SET     4
             000000000006              380  IMXIW  SET     6
             000000000010              381  INTLVL SET     8
             000000000011              382  CHANBASE SET   9
             000000000012              383  CHANNO SET     10
             000000000013              384  IOM$   SET     11
             000000000014              385  TIMR   SET     12
             000000000015              386  ARGLIST SET    13              ARGUMENT LIST FOR POSTER CALL
             000000000015              387  DQH$   SET     ARGLIST         FIRST ARGUMENT
             000000000016              388  INTLVL$ SET    ARGLIST+1       SECOND ARGUMENT
             000000000017              389  MAGICARG SET   15
             000000000020              390  MAGICS SET     16
             000000000034              391  NEXT   SET     MAGICS+MAGIC.ND*2
             000000000035              392  XXX    SET     NEXT+1
             000000000016              393  XXX    SET     XXX/2
             000000000036              394  AUTOSZ SET     XXX+XXX+2
                                       395  *
                                       396  *      OFFSETS TO IO TABLE ITEMS (UGH!)
                                       397  *
             000000000014              398  DQH.IO$ EQU    12
             000000000015              399  DQH.MPC$ EQU   13
             000000000021              400  DQH.MBX$ EQU   17
             000000000002              401  REQ.DCT$ EQU   2
 03:34 07/30/97  FILE=NIM$MISC.:E05TSI        NIM$INTDIS - Interrupt Distributor                         16   BMAP - B00     
             000000000011              402  IMXMBX.IOSTAT1 EQU 9
             000000000013              403  IMXMBX.IOSTAT3 EQU 11
                                       404  *
                                       405  *
                                       406         ENTDEF  NIM$INTDIS
                                       407         SYMREF  IRM_SSF
                                       408         SYMREF  SC_NOTIOINT
                                       409         SYMREF  SC_NISSSF
                                       410         SYMREF  S_TIMR
                                       411         SYMREF  H_MIXED_INT
                                       412         SYMREF  H_SAVE_SS,S_INT_SS
                                       413         SYMREF  NI$CHT$
                                       414         SYMREF  NI$IMW$
                                       415         SYMREF  NI$IOM$
                                       416         SYMREF  NI_INTLVL
                                       417         SYMREF  NI_COMPHD$
                                       418         SYMREF  S_MONSSR
                                       419         SYMREF  S_PNO
                                       420         SYMREF  S_PTYPE
                                       421         SYMREF  S_SSPTYPE
                                       422         SYMREF  S_CNODE
                                       423         SYMREF  NI_OVERLAY
                                       424         ENTREF  JSN$FIXSS
                                       425         ENTREF  NIW$POSTER
                                       426         ENTREF  NIF$IMXFAULT
                                       427         ENTREF  NIF$IMXSPEC
                                       428         ENTREF  KIQ$FEINT
                                       429         ENTREF  NIO$COMPQUE
                                       430         ENTREF  SSC$SASYNC
                                       431         ENTREF  SSS$SEXIT
                                       432         ENTREF  UDN$MGSAVE
                                       433         ENTREF  UDN$MGRES
                                       434         ENTREF  B$COLLINS
                                       435         ENTREF  B$KRASNY
                                       436         ENTREF  B$KEYS
                                       437         ENTREF  B$MARTNER
                                       438         ENTREF  B$ROGERS
 03:34 07/30/97  FILE=NIM$MISC.:E05TSI        NIM$INTDIS - Interrupt Distributor                         17   BMAP - B00     
                                       439         ENTREF  B$BJERKE
                                       440         ENTREF  B$ANDERSON
                                       441         ENTREF  B$SHAMMEL
                                       442         ENTREF  B$PHOENIX
                                       443         SEGREF  CDTFSID
                                       444         SEGREF  TSTACKSID
                                       445         SEGREF  MTSTACKSID
                                       446         SEGREF  SCUSID
                                       447         SEGREF  SSRSID
                                       448         SEGREF  DR6SID
                                       449         SEGREF  SCRCHENTSID     SCREECH ENTRY
                                       450  *
                                       451  * SAFE STORE FRAME OFFSETS
                                       452  *
             000000000001              453  AUTOLOC EQU    1               PREVIOUS AUTO OFFSET
             000000000004              454  ICIR   EQU     4               IC/IR OFFSET IN SAFE STORE
             000000000005              455  INTCODE EQU    5               WORD CONTAINING INTERRUPT CODE
             000000000006              456  CPUTYP EQU     6               IF MULTIWORD INTERRUPT BIT SET,
                                       457  *                                BIT 18 IS SET
                                       458  *                                BIT 19-23 - CPU TYPE
             000000000010              459  ISR    EQU     8               ISR OFFSET IN SAFE STORE
             000000000076              460  TSTAMP BOOL    76              52-BIT REAL-TIME CLOCK FROM SCU
                                       461  *
                                       462         INHIB   ON
   000225    000003 7102 04            463         ALIGN   4
   000226    000000 0112 00
   000227    000000 0112 00
   000230                              464  NIM$INTDIS NULL
   000230    004000 6342 07            465         LDI     =O4000,DL       INDICATORS OFF
   000231  X 000000 4766 07            466         LDP6    SSRSID,DL       FETCH SAFE-STORE STACK DESCRIPTOR
   000232  X 000000 4766 07            467         LDP6    CDTFSID,DL      CHANGE TO TYPE 0
   000233  X 000000 4706 07            468         LDP0    SCUSID,DL
   000234  X 000000 7042 00            469         TSX4    HFC$BMAP_CLOCK  READ 52-BIT REAL-TIME CLOCK
   000235    6 00076 7573 00           470         STAQ    TSTAMP,,PR6     SAVE IN SAFE STORE FRAME
   000236    6 00004 2363 00           471         LDQ     ICIR,,PR6
   000237    000040 3762 07            472         ANQ     =O40,DL         TEST EIS MULTIWORD INT BIT
   000240    6 00006 5523 10           473         STBQ    CPUTYP,10,PR6   ZERO BYTE 2 OF CPUTYP WORD IN SS
 03:34 07/30/97  FILE=NIM$MISC.:E05TSI        NIM$INTDIS - Interrupt Distributor                         18   BMAP - B00     
   000241 (0)000260 6002 00            474         TZE     INTDIS0         B IF MIR NOT SET
   000242  X 000000 2342 00            475         SZN     H_SAVE_SS       IS SAFE STORE SAVE MODE SET?
   000243 (0)000247 6002 00            476         TZE     *+4             NO
   000244    000 0 000 1007 00         477         MLR     (1)             YES -> SAVE INTERRUPTED SS FRAME
   000245    6 00000 0 0 0 0400        478         ADSC9   0,,256,PR6
   000246  X 000000 0 0 0 0400         479         ADSC9   S_INT_SS,,256
   000247    6 00010 2353 00           480         LDA     ISR,,PR6
   000250    000160 3752 07            481         ANA     =O160,DL        DID WE INTERRUPT MONITOR?
   000251 (0)000260 6002 00            482         TZE     INTDIS0         YES -> NO NEED TO STAMP FRAME
   000252  X 000000 2352 00            483         LDA     S_PNO           PROCESSOR NUMBER
   000253  X 000000 2762 05            484         ORQ     S_SSPTYPE,AL    MERGE IN CPU SAFE STORE TYPE
   000254    000014 7362 00            485         QLS     12              MOVE TO BIT 18-23
   000255    6 00006 2563 00           486         ORSQ    CPUTYP,,PR6     MERGE INTO CPUTYP WORD IN SS
   000256  X 000000 2362 05            487         LDQ     S_PTYPE,AL      PROCESSOR TYPE
   000257  X 000000 0542 06            488         AOS     H_MIXED_INT,QL  INCREMENT MIR USER INT COUNTER
                                       489  *
   000260                              490  INTDIS0 NULL
   000260    000000 0116 00            491         CCAC                    CLEAR CACHE
   000261  X 000000 2342 00            492         SZN     HW_IMX
   000262 (0)000300 6042 00            493         TMI     INTDIS1     FOR IMX, RIW WILL GET THE INTERUPT WORDS.
   000263    000100 2362 03            494         LDQ     =O000100,DU     IS THIS I/O INTERRUPT
   000264    6 00005 3163 00           495         CANQ    5,,PR6
   000265 (0)000300 6002 00            496         TZE     INTDIS1                 NO: PROCEED
   000266    6 00005 2363 00           497         LDQ     5,,PR6          YES:  FETCH IMW CELL #
   000267    000023 7722 00            498         QRL     19
   000270    000037 3762 07            499         ANQ     =O37,DL
   000271  X 000000 4756 00            500         LDP5    NI$IMW$
   000272    5 00000 2353 06           501         LDA     0,QL,PR5                READ IMW
   000273 (0)000300 6012 00            502         TNZ     INTDIS1                 ANYTHING THERE?  YES: PROCEED
   000274    5 00000 2353 06           503         LDA     0,QL,PR5                NO: TRY AGAIN
   000275 (0)000300 6012 00            504         TNZ     INTDIS1                 BIT(S) SET: PROCEED
   000276    000000 7134 00            505         EXIT                            NO BIT(S) SET: RETURN TO INTERRUPTED ROUTINE
   000277    0 000 000 01 0000
                                       506         SYMDEF  NIS_IDL
             000000000050              507  NIS_IDL EQU    *-NIM$INTDIS            LENGTH OF CRITICAL PORTION
                                       508  *
   000300                              509  INTDIS1 NULL
 03:34 07/30/97  FILE=NIM$MISC.:E05TSI        NIM$INTDIS - Interrupt Distributor                         19   BMAP - B00     
   000300  X 000000 4726 07            510         LDP     AUTO$,MTSTACKSID,DL    USE MONITOR TSTACK
   000301    2 00000 7213 00           511         LXL1    0,,AUTO$
   000302    6 00001 4413 00           512         SXL1    AUTOLOC,,PR6
   000303    2 00001 5276 11           513         SWDX    1,1,AUTO$
   000304    000000 2212 07            514         LDX1    0,DL
   000305  X 000000 7002 00            515         TSX0    X66_AUTO_0
   000306    000036 000000             516         ZERO    AUTOSZ,0
   000307    2 00002 4403 00           517         SXL0    2,,AUTO$
   000310    2 00004 7537 00           518         STSS    SSR,,AUTO$      SAVE SSR
   000311    2 00020 6317 00           519         EPPR1   MAGICS,,AUTO$
   000312    2 00017 4517 00           520         STP1    MAGICARG,,AUTO$
   000313    2 00017 6307 00           521         EPPR0   MAGICARG,,AUTO$
   000314 (0)000672 6316 00            522         EPPR1   1ARG
   000315  X 000000 7012 00            523         TSX1    UDN$MGSAVE      SAVE ASR
   000316    000000 0112 00            524         NOP     0
   000317    2 00010 6307 00           525         EPPR0   INTLVL,,AUTO$
   000320    2 00016 4507 00           526         STP0    INTLVL$,,AUTO$  SAVE FOR CALLS TO POSTERS
   000321  X 000000 2352 00            527         LDA     S_TIMR
   000322    2 00014 7553 00           528         STA     TIMR,,AUTO$     SAVE PREVIOUS S_TIMR IN AUTO
   000323    000002 1152 07            529         CMPA    2,DL
   000324 (0)000332 6002 00            530         TZE     INTDIS5         B IF MONITOR EXECUTION
   000325 (0)000671 6316 00            531         EPPR1   0ARGS
   000326  X 000000 7012 00            532         TSX1    SSC$SASYNC      SET MONITOR EXECUTION
   000327    000000 0112 00            533         NOP
                                       534  *
   000330                              535  INTDIS4 NULL
   000330  X 000000 4766 07            536         LDP6    SSRSID,DL
   000331  X 000000 4766 07            537         LDP6    CDTFSID,DL
                                       538  *
   000332                              539  INTDIS5 NULL
   000332    6 00005 2353 00           540         LDA     INTCODE,,PR6
   000333    2 00004 2363 00           541         LDQ     SSR,,AUTO$
   000334    000200 3152 03            542         CANA    =O200,DU        SAFE STORE FULL?
   000335 (0)000650 6012 00            543         TNZ     SSF             YES
   000336    000160 3162 07            544         CANQ    =O160,DL        NO -> MONITOR SSR?
   000337 (0)000341 6002 00            545         TZE     MONSSR          YES
   000340  X 000000 7736 00            546         LDSS    S_MONSSR        NO -> USE MONITOR SSR
 03:34 07/30/97  FILE=NIM$MISC.:E05TSI        NIM$INTDIS - Interrupt Distributor                         20   BMAP - B00     
                                       547  *
   000341                              548  MONSSR NULL
   000341    000100 3152 03            549         CANA    =O100,DU        IS THIS AN INTERRUPT?
   000342 (0)000667 6002 00            550         TZE     NOTINTSCRCH     NO -> SCREECH
   000343  X 000000 0542 00            551         AOS     NI_INTLVL
   000344  X 000000 2342 00            552         SZN     HW_IMX
   000345 (0)000451 6042 00            553         TMI     IMXDIS2                 INTDIS2 FOR IMX
   000346    6 00005 2363 00           554         LDQ     5,,PR6          GET IMW CELL #
   000347    000023 7722 00            555         QRL     19
   000350    000037 3762 07            556         ANQ     =O37,DL
   000351  X 000000 4756 00            557         LDP5    NI$IMW$
   000352    5 00000 0343 06           558         LDAC    0,QL,PR5                READ INTERRUPT MASK WORD
   000353    000003 6012 04            559         TNZ     3,IC                    ANYTHING THERE?
   000354    5 00000 0343 06           560         LDAC    0,QL,PR5                NO: TRY AGAIN
   000355 (0)000570 6002 00            561         TZE     INTDISX                 STILL NOTHING: EXIT
   000356    2 00003 7553 00           562         STA     IMW,,AUTO$      SAVE IMW
   000357    000017 7362 00            563         QLS     15              Q(16-17)=INTLVL
   000360    2 00010 7563 00           564         STQ     INTLVL,,AUTO$   SAVE INTERRUPT LEVEL
   000361    000000 2352 03            565         LDA     0,DU
   000362    400000 3162 07            566         CANQ    =O400000,DL             LOWER GROUP?
   000363    000002 6012 04            567         TNZ     2,IC                    YES: CHANNEL BASE = 0
   000364    000040 2352 03            568         LDA     32,DU                   NO: CHANNEL BASE = 32
   000365    2 00011 7553 00           569         STA     CHANBASE,,AUTO$ SAVE CHANNEL BASE
   000366    000017 7722 00            570         QRL     15
   000367    000003 3762 07            571         ANQ     3,DL            GET IOM#
   000370  X 000000 4746 06            572         LDP4    NI$IOM$,QL
   000371    2 00013 4547 00           573         STP4    IOM$,,AUTO$     SAVE ->IOM PACKET
   000372    000031 7362 00            574         QLS     25              QU = IOM#*%N_MAXCHANS
   000373    2 00011 0563 00           575         ASQ     CHANBASE,,AUTO$         BASECHAN=BASECHAN+%N_MAXCHANS*IOM
   000374                              576  INTDIS2 NULL
   000374    2 00003 2353 00           577         LDA     IMW,,AUTO$
   000375 (0)000570 6002 00            578         TZE     INTDISX                 NO MORE INTERRUPTS: EXIT
   000376    000001 7712 00            579         ARL     1                       POSITION 0 BIT TO RIGHT OF SIGN
   000377    000200 6342 07            580         LDI     =O200,DL                INDICATORS OFF, MASTER MODE, BINARY F.P.
   000400    000000 4112 03            581         LDE     0,DU
   000401    000000 5732 00            582         FNO                             SCAN FOR FIRST INTERRUPTING CHANNEL
   000402    2 00012 4563 00           583         STE     CHANNO,,AUTO$           - CHAN#
 03:34 07/30/97  FILE=NIM$MISC.:E05TSI        NIM$INTDIS - Interrupt Distributor                         21   BMAP - B00     
   000403    2 00012 2363 00           584         LDQ     CHANNO,,AUTO$
   000404    000012 7322 00            585         QRS     10              QU = -CHAN
   000405    777777 3762 03            586         ANQ     -1,DU
   000406 (1)000000 2352 00            587         LDA     =O377777777777
   000407    000044 7752 02            588         ALR     36,QU
   000410    2 00003 3553 00           589         ANSA    IMW,,AUTO$              CLEAR THIS BIT IN IMW
   000411    000000 5332 00            590         NEGL
   000412    777777 3762 03            591         ANQ    -1,DU
   000413    2 00011 0763 00           592         ADQ    CHANBASE,,AUTO$
   000414    000001 7362 00            593         QLS     1               INDEX INTO CHANNEL TABLE
   000415  X 000000 4706 00            594         LDP0    NI$CHT$
   000416    0 00000 2353 02           595         LDA     0,QU,PR0        GET DQH$
   000417    2 00015 7553 00           596         STA     DQH$,,AUTO$
   000420    0 00001 2203 02           597         LDX0    1,QU,PR0        GET POSTER ADDRESS
   000421 (0)000374 6002 00            598         TZE     INTDIS2         EPTR IS NULL
   000422    2 00015 4717 00           599         LDP1    DQH$,,AUTO$
   000423    2 00010 2213 00           600         LDX1    INTLVL,,AUTO$
   000424    000001 1012 03            601         CMPX1   1,DU            TERMINATION INTERRUPT?
   000425 (0)000444 6012 00            602         TNZ     INTDIS3         NOPE
   000426    1 00014 2353 00           603         LDA     DQH.IO$,,PR1
   000427    777777 3752 07            604         ANA     =O777777,DL
   000430  X 000000 1152 07            605         CMPA    NULLSID,DL      IF DQH.IO$~=NULL
   000431 (0)000444 6002 00            606         TZE     NOTMPC
   000432    1 00014 4707 00           607         LDP0    DQH.IO$,,PR1    THEN P0 POINTS TO REQUEST
   000433    0 00002 2363 00           608         LDQ     REQ.DCT$,,PR0   Q = REQ DCT
   000434    1 00015 1163 00           609         CMPQ    DQH.MPC$,,PR1
   000435 (0)000444 6012 00            610         TNZ     NOTMPC          REQ WAS NOT FOR MPC
   000436    0 00002 4707 00           611         LDP0    REQ.DCT$,,PR0   IS IT AP CONTROLLER?
   000437    0 00007 2363 00           612         LDQ     7,,PR0             (DCT.CTYP = %C_APC)
   000440    070000 3762 03            613         ANQ     =O070000,DU
   000441    030000 1162 03            614         CMPQ    =O030000,DU
   000442 (0)000444 6002 00            615         TZE     NOTMPC
   000443  X 000000 2202 03            616         LDX0    NIW$POSTER,DU   FAKE IT WITH MPC POSTER
   000444                              617  NOTMPC NULL
   000444                              618  INTDIS3 NULL
   000444    2 00015 6307 00           619         EPPR0   ARGLIST,,AUTO$
   000445 (0)000673 6316 00            620         EPPR1   2ARGS
 03:34 07/30/97  FILE=NIM$MISC.:E05TSI        NIM$INTDIS - Interrupt Distributor                         22   BMAP - B00     
   000446    000000 7012 10            621         TSX1    0,X0            CALL DEVICE POSTER
   000447    000000 0112 00            622         NOP
   000450 (0)000374 7102 00            623         TRA     INTDIS2                 LOOP BACK FOR OTHER INTERRUPTS
                                       624  *
                                       625  *
                                       626  *     Code for the IMX, not used unless HW_IMX.
                                       627  *
                                       628  *      This code is dependent on the interrupt definitions for direct
                                       629  *      channels described in KIQ$QMGR.  Under the current definition,
                                       630  *      direct chan interrupts come in as terminates and specials.  Since
                                       631  *      specials are handled in a new manner for the IMX, specific code
                                       632  *      exists to handle dir chan specials.
                                       633  *
   000451                              634  IMXDIS2  NULL
   000451    000000 4122 00            635         RIW                             GET INTERUPT WORDS
   000452 (0)000564 6002 00            636         TZE     INTDISX0                ALL DONE
   000453    2 00006 7573 00           637         STAQ    IMXIW,,AUTO$            STORE FOR LATER
   000454    000015 7352 00            638         ALS     13                      INTLVL/2 INTO...
   000455    000003 3752 03            639         ANA     3,DU                    ...AU
   000456 (0)000457 7102 01            640         TRA     *+1,AU                  TRA INTO JUMP TABLE (INTLVL/2)
   000457 (0)000501 7102 00            641         TRA     IMXSPC                  FAULTS (0) WILL SPLIT IN IMXSPC
   000460 (0)000514 7102 00            642         TRA     IMXTRM                  TERMINATE (1)
   000461 (0)000514 7102 00            643         TRA     IMXTRM                  MARKER (2) - SAME AS TERM
   000462                              644  IMXDIR NULL                            SPECIAL (3) - CHECK FOR DIR CHAN SPEC
   000462    2 00010 7553 00           645         STA     INTLVL,,AUTO$           STORE INTLVL/2 FOR POSTER
   000463    2 00006 2373 00           646         LDAQ    IMXIW,,AUTO$            GET A-Q PAIR FROM RIW
   000464    000022 7772 00            647         LLR     18                      SPLIT IMXID(A) AND CHAN(Q)
   000465    000035 7362 00            648         QLS     27+2                    WE NOW SHIFT A LOT...
   000466    000033 7712 00            649         ARL     27                      ...IN ORDER TO...
   000467    000003 3752 07            650         ANA     3,DL                    ...GET IOCHAN*2 INTO...
   000470    000034 7732 00            651         LRL     27+1                    ...QL (WHICH IT IS NOW)
   000471  X 000000 4706 00            652         LDP0    NI$CHT$                 POINTER TO CHANNEL TABLE
   000472    0 00001 2203 06           653         LDX0    1,QL,0                  GET POSTER ENTADDR
   000473  X 000000 1002 03            654         CMPX0   KIQ$FEINT,DU            IS THIS A DIR CHAN INTERRUPT?
   000474 (0)000501 6012 00            655         TNZ     IMXSPC                  T/ NOPE - MUST BE AN INDIRECT SPEC
   000475    0 00000 2353 06           656         LDA     0,QL,0                  GET DQH$ (STA FASTER THAN STP)
   000476    2 00015 7553 00           657         STA     DQH$,,AUTO$             STORE IT FOR POSTER PASS.
 03:34 07/30/97  FILE=NIM$MISC.:E05TSI        NIM$INTDIS - Interrupt Distributor                         23   BMAP - B00     
   000477    2 00015 4717 00           658         LDP1    DQH$,,AUTO$             LOAD IT AS A POINTER
   000500 (0)000557 7102 00            659         TRA     IMXDIS3                 FAST PATH FOR DIR CHAN SPECIALS
   000501                              660  IMXSPC NULL                            SPECIAL (3) AND FAULT (0)
   000501    2 00006 2373 00           661         LDAQ    IMXIW,,AUTO$            GET A-Q PAIR FROM RIW
   000502    2 00003 7553 00           662         STA     IMW,,AUTO$              USE IMW CELL FOR $A
   000503    2 00003 6307 00           663         EPPR0   IMW,,AUTO$              AND SET UP THE...
   000504    2 00015 4507 00           664         STP0    DQH$,,AUTO$             ...POINTER TO IT
   000505    2 00010 7563 00           665         STQ     INTLVL,,AUTO$           STORE SECOND WORD(Q)
   000506    000140 3752 07            666         ANA     =O000140,DL             MASK OFF INTLVL/2...
   000507 (0)000512 6002 00            667         TZE     IMXFLT                  ...ZERO MEANS SYSTEM FAULT
   000510  X 000000 6202 00            668         EAX0    NIF$IMXSPEC             NIF$SPEC FOR THE IMX
   000511 (0)000557 7102 00            669         TRA     IMXDIS3                 GOTO "POSTER"
   000512                              670  IMXFLT NULL                            SYSTEM FAULT ENTRY
   000512  X 000000 6202 00            671         EAX0    NIF$IMXFAULT            NIF$FAULT FOR THE IMX
   000513 (0)000557 7102 00            672         TRA     IMXDIS3                 GOTO "POSTER"
                                       673  *
   000514                              674  IMXTRM NULL                            HANDLE TERMINATES AND MARKERS
   000514    2 00010 7553 00           675         STA     INTLVL,,AUTO$           STORE INTLVL/2 FOR POSTER
   000515    2 00006 2373 00           676         LDAQ    IMXIW,,AUTO$            GET A-Q PAIR FROM RIW
   000516    000022 7772 00            677         LLR     18                      SPLIT IMXID(A) AND CHAN(Q)
   000517    000035 7362 00            678         QLS     27+2                    WE NOW SHIFT A LOT...
   000520    000033 7712 00            679         ARL     27                      ...IN ORDER TO...
   000521    000003 3752 07            680         ANA     3,DL                    ...GET IOCHAN*2 INTO...
   000522    000034 7732 00            681         LRL     27+1                    ...QL (WHICH IT IS NOW)
   000523  X 000000 4706 00            682         LDP0    NI$CHT$                 POINTER TO CHANNEL TABLE
   000524    0 00001 2203 06           683         LDX0    1,QL,0                  GET POSTER ENTADDR
   000525 (0)000451 6002 00            684         TZE     IMXDIS2                 NO POSTER, TRY FOR ANOTHER
   000526    0 00000 2353 06           685         LDA     0,QL,0                  GET DQH$ (STA FASTER THAN STP)
   000527    2 00015 7553 00           686         STA     DQH$,,AUTO$             STORE IT FOR POSTER PASS.
   000530    2 00015 4717 00           687         LDP1    DQH$,,AUTO$             LOAD IT AS A POINTER
   000531    1 00021 2353 00           688         LDA     DQH.MBX$,,PR1           IS DQH.MBX$ ADDR(NIL)
   000532    006014 1152 07            689         CMPA    =O6014,DL                COULD BE SPURIOUS - POSTER WILL LOG
   000533 (0)000557 6002 00            690         TZE     IMXDIS3                 T/ YES, DON'T TRY TO ACCESS MBX
   000534    1 00021 4707 00           691         LDP0    DQH.MBX$,,PR1           POINTER TO MAILBOX
   000535    0 00011 2353 00           692         LDA     IMXMBX.IOSTAT1,,PR0     NOW WE...
   000536    0 00013 2363 00           693         LDQ     IMXMBX.IOSTAT3,,PR0     ...WANT TO SWITCH...
   000537    0 00013 7553 00           694         STA     IMXMBX.IOSTAT3,,PR0     ...IOSTATUS WORDS...
 03:34 07/30/97  FILE=NIM$MISC.:E05TSI        NIM$INTDIS - Interrupt Distributor                         24   BMAP - B00     
   000540    0 00011 7563 00           695         STQ     IMXMBX.IOSTAT1,,PR0     ...1 AND 3
   000541    1 00014 2353 00           696         LDA     DQH.IO$,,PR1            POINTER TO REQ PACKET
   000542    777777 3752 07            697         ANA     -1,DL                   GET SEGID OF POINTER
   000543  X 000000 1152 07            698         CMPA    NULLSID,DL              IS IT ADDR(NIL)?
   000544 (0)000557 6002 00            699         TZE     IMXDIS3                 T/ DQH.IO$=ADDR(NIL)
   000545    1 00014 4707 00           700         LDP0    DQH.IO$,,PR1            POINTER TO REQ PACKET AS PR
   000546    0 00002 2363 00           701         LDQ     REQ.DCT$,,PR0           POINTER TO DCT FROM REQ PACKET
   000547    1 00015 1163 00           702         CMPQ    DQH.MPC$,,PR1           IS IT DCT.MPC$?
   000550 (0)000557 6012 00            703         TNZ     IMXDIS3                 T/ DQH.MPC$~=DQH.IO$->REQ.DCT$
   000551    0 00002 4707 00           704         LDP0    REQ.DCT$,,PR0           DCT FROM REQ PACKET AS PR
   000552    0 00007 2363 00           705         LDQ     7,,PR0                  CHECKING FOR AP
   000553    007700 3762 07            706         ANQ     =O7700,DL               GET DCT.TYPE
   000554    001000 1162 07            707         CMPQ    =O1000,DL               %DV_AP
   000555 (0)000557 6002 00            708         TZE     IMXDIS3                 T/ NOT AN AP DEVICE
   000556  X 000000 6202 00            709         EAX0    NIW$POSTER              MPC POSTER
   000557                              710  IMXDIS3 NULL
   000557    2 00015 6307 00           711         EPPR0   ARGLIST,,AUTO$          PR0 TO ARG LIST
   000560 (0)000673 6316 00            712         EPPR1   2ARGS                   PR1 TO 'ZERO .2,.0'
   000561    000000 7012 10            713         TSX1    0,X0                    CALL POSTER
   000562    000000 0112 00            714         NOP                             IGNORE ALTRET
   000563 (0)000451 7102 00            715         TRA     IMXDIS2                 RIW AGAIN.
                                       716  *
   000564                              717  INTDISX0 NULL
   000564  X 000000 2342 00            718         SZN     NI$DS                   SHOULD INTERRPUPTS BE ENABLED?
   000565 (0)000570 6012 00            719         TNZ     INTDISX                 T/ NOPE, WE'RE LOCKED OR SOMETHING
   000566  X 000000 2372 00            720         LDAQ    H_ENMASK                ENABLE INTERRUPTS AGAIN.
   000567    000000 5532 00            721         LIMR
                                       722  *
                                       723  * INTERRUPT PROCESSING COMPLETED
                                       724  *
   000570                              725  INTDISX NULL
   000570  X 000000 2352 00            726         LDA     NI_INTLVL
   000571    000001 1752 07            727         SBA     1,DL
   000572 (0)000602 6012 00            728         TNZ     INTDISX1
   000573  X 000000 2362 00            729         LDQ     NI_COMPHD$
   000574  X 000000 1162 07            730         CMPQ    NULLSID,DL
   000575 (0)000602 6002 00            731         TZE     INTDISX1
 03:34 07/30/97  FILE=NIM$MISC.:E05TSI        NIM$INTDIS - Interrupt Distributor                         25   BMAP - B00     
   000576 (0)000671 6316 00            732         EPPR1   0ARGS
   000577  X 000000 7012 00            733         TSX1    NIO$COMPQUE
   000600    000000 0112 00            734         NOP     0
   000601    000000 2352 07            735         LDA     0,DL
   000602                              736  INTDISX1 NULL
   000602  X 000000 7552 00            737         STA     NI_INTLVL
   000603    2 00001 2363 00           738         LDQ     1,,AUTO$                ACTIVE OVERLAY WHEN WE WERE INTERRUPTED
   000604  X 000000 1162 00            739         CMPQ    S_CNODE                 DID SOMEONE CHANGE OVERLAY?
   000605 (0)000624 6002 00            740         TZE     OLAYDONE                T/ NOPE, DON'T NEED TO DO ANYTHING
   000606  X 000000 0542 00            741         AOS     NI_OVERLAY              KEEP TRACK OF HOW OFTEN WE'RE DOING THIS
   000607 (0)000612 7012 06            742         TSX1    OLAY,QL                 RESTORE OLD OVERLAY
   000610    000000 0112 00            743         NOP
   000611 (0)000624 7102 00            744         TRA     OLAYDONE
   000612                              745  OLAY   NULL
   000612    000001 7102 11            746         TRA     1,X1
   000613  X 000000 7102 00            747         TRA     B$COLLINS
   000614  X 000000 7102 00            748         TRA     B$KRASNY
   000615  X 000000 7102 00            749         TRA     B$KEYS
   000616  X 000000 7102 00            750         TRA     B$MARTNER
   000617  X 000000 7102 00            751         TRA     B$ROGERS
   000620  X 000000 7102 00            752         TRA     B$BJERKE
   000621  X 000000 7102 00            753         TRA     B$ANDERSON
   000622  X 000000 7102 00            754         TRA     B$SHAMMEL
   000623  X 000000 7102 00            755         TRA     B$PHOENIX
   000624                              756  OLAYDONE NULL
   000624    2 00017 6307 00           757         EPPR0   MAGICARG,,AUTO$
   000625 (0)000672 6316 00            758         EPPR1   1ARG
   000626  X 000000 7012 00            759         TSX1    UDN$MGRES       RESTORE ASR
   000627    000000 0112 00            760         NOP     0
   000630    2 00014 2353 00           761         LDA     TIMR,,AUTO$     S_TIMR ON INTERRUPT ENTRY
   000631    2 00004 7737 00           762         LDSS    SSR,,AUTO$              RESTORE SSR
   000632  X 000000 4766 07            763         LDP6    SSRSID,DL               FETCH SSF PTR
   000633  X 000000 4766 07            764         LDP6    CDTFSID,DL
   000634    6 00001 7213 00           765         LXL1    AUTOLOC,,PR6            RESTORE MONITOR AUTO PTR
   000635  X 000000 4726 07            766         LDP     AUTO$,MTSTACKSID,DL
   000636    2 00000 4413 00           767         SXL1    0,,AUTO$
   000637    2 00001 5276 11           768         SWDX     1,1,AUTO$
 03:34 07/30/97  FILE=NIM$MISC.:E05TSI        NIM$INTDIS - Interrupt Distributor                         26   BMAP - B00     
   000640    000002 1152 07            769         CMPA    2,DL            WAS MONITOR RUNNING?
   000641 (0)000644 6042 00            770         TMI     NOTMON          NO -> RETURN THROUGH SSS$SEXIT
   000642    000000 7134 00            771         EXIT                    YES -> RETURN DIRECTLY
   000643    0 000 000 01 0000
   000644                              772  NOTMON NULL
   000644  X 000000 4726 07            773         LDP     AUTO$,TSTACKSID,DL  RESTORE USER TSTACK
   000645    2 00000 7213 00           774         LXL1    0,,AUTO$
   000646    2 00001 5276 11           775         SWDX    1,X1,AUTO$
   000647  X 000000 7102 00            776         TRA     SSS$SEXIT               EXIT TO JOB SCHEDULER
                                       777  *
   000650                              778  SSF    NULL                    SAFE STORE FULL
   000650    000160 3162 07            779         CANQ    =O160,DL        USING MONITOR SSR?
   000651 (0)000663 6002 00            780         TZE     SSFSCRCH        YES -> SCREECH
   000652    6 00010 2363 00           781         LDQ     ISR,,PR6
   000653    000160 3762 07            782         ANQ     =O160,DL        ISR.WSR
   000654    000160 1162 07            783         CMPQ    =O160,DL        USING USER ISR?
   000655 (0)000663 6012 00            784         TNZ     SSFSCRCH        NO -> SCREECH
   000656 (0)000671 6316 00            785         EPPR1   0ARGS           USER SSF IN USER SSR
   000657  X 000000 7012 00            786         TSX1    JSN$FIXSS       FLUSH SS AND SET RNST FOR SEXIT
   000660    000000 0112 00            787         NOP
   000661    2 00004 7537 00           788         STSS    SSR,,AUTO$
   000662 (0)000330 7102 00            789         TRA     INTDIS4
                                       790  *
   000663                              791  SSFSCRCH NULL
   000663  X 000000 7536 00            792         STSS    IRM_SSF         PUT SSR WHERE DELTA CAN FIND IT
   000664  X 000000 7736 00            793         LDSS    S_MONSSR        USE MONITOR SSR
   000665  X 000000 7134 00            794         GOTO    SCRCHENTSID,0,SC_NISSSF
   000666    0 000 000 63 X 0000
                                       795  *S*   SCREECH_CODE:   NIS-S$SSFULL-7
                                       796  *,*   TYPE:     SCREECH
                                       797  *,*   MESSAGE:  The monitor's Safe-Store Stack is full
                                       798  *,*             on entry to the Interrupt Handler.
                                       799  *
   000667                              800  NOTINTSCRCH NULL
   000667  X 000000 7134 00            801         GOTO    SCRCHENTSID,0,SC_NOTIOINT
   000670    0 000 000 63 X 0000
                                       802  *S*   SCREECH_CODE:   NIS-S$NOTIOINT-7
 03:34 07/30/97  FILE=NIM$MISC.:E05TSI        NIM$INTDIS - Interrupt Distributor                         27   BMAP - B00     
                                       803  *,*   TYPE:     SCREECH
                                       804  *,*   MESSAGE:   The Interrupt Handler was entered with
                                       805  *,*              the Fault/Interrupt bit in the Safe-Store
                                       806  *,*              Frame set to zero.
                                       807  *
   000671    000000 000000             808  0ARGS  ZERO    0,0
   000672    000001 000000             809  1ARG   ZERO    1,0
   000673    000002 000000             810  2ARGS  ZERO    2,0
                                       811         END
 1 000000    377777777777

  CONTROL SECTION TABLE

   0 CODE   EIGHT 000674 NIM$MISC
   1 RODATA EVEN  000001 LITERALS

 03:34 07/30/97  FILE=NIM$MISC.:E05TSI        SYMBOL TABLE                                               28   BMAP - B00     
 01101000 000000000671 0ARGS          531       732       785      *808
 01101000 000000000672 1ARG           522       758      *809
 01101000 000000000673 2ARGS          620       712      *810
 40000000 000000000001 ADSC$          *35
 41000000 000000000000 ARG$           *34        98        99       100       231       232       269
                                      270       299       300
 61000000 000000000015 ARGLIST       *386       387       388       619       711
 41000000 000000000002 AUTO$          *33       102       106       108       111       117       118
                                      120       121       122       127       129       134       136
                                      137       140       142       175       176       177       179
                                      205       206       207       209       510       511       513
                                      517       518       519       520       521       525       526
                                      528       541       562       564       569       573       575
                                      577       583       584       589       592       596       599
                                      600       619       637       645       646       657       658
                                      661       662       663       664       665       675       676
                                      686       687       711       738       757       761       762
                                      766       767       768       773       774       775       788
 41000000 000000000001 AUTOLOC       *453       512       765
 61000000 000000000036 AUTOSZ         *92        97      *394       516
 03201020 000000000000 B$ANDERSON    *440       753
 03201019 000000000000 B$BJERKE      *439       752
 03201014 000000000000 B$COLLINS     *434       747
 02301002 000000000000 B$ISB$         *15
 03201016 000000000000 B$KEYS        *436       749
 03201015 000000000000 B$KRASNY      *435       748
 03201017 000000000000 B$MARTNER     *437       750
 03201022 000000000000 B$PHOENIX     *442       755
 03201018 000000000000 B$ROGERS      *438       751
 03201021 000000000000 B$SHAMMEL     *441       754
 03601004 000000000000 CDTFSID       *443       467       537       764
 61000000 000000000011 CHANBASE      *382       569       575       592
 61000000 000000000012 CHANNO        *383       583       584
 41000000 000000000006 CPUTYP        *456       473       486
 01101000 000000000140 DEQ1           235      *239
 01101000 000000000151 DEQ2           245      *250
 61000000 000000000004 DESC           *90       102       106       108       111       142
 03:34 07/30/97  FILE=NIM$MISC.:E05TSI        SYMBOL TABLE                                               29   BMAP - B00     
 61000000 000000000015 DQH$          *387       596       599       657       658       664       686
                                      687
 41000000 000000000014 DQH.IO$       *398       603       607       696       700
 41000000 000000000021 DQH.MBX$      *400       688       691
 41000000 000000000015 DQH.MPC$      *399       609       702
 02601009 000000000000 DR6SID        *448
 01101000 000000000165 ENQ1           273      *278
 01101000 000000000034 GOTWSQ         115      *124
 03201003 000000000000 HFC$BMAP_CLOCK           *11       469
 03301003 000000000000 HW_IMX         *87       144       492       552
 03301001 000000000000 HW_PTB_UNITS   *13       132
 03301004 000000000000 H_ENMASK       *88       720
 03301012 000000000000 H_MIXED_INT   *411       488
 03301013 000000000000 H_SAVE_SS     *412       475
 41000000 000000000004 ICIR          *454       471
 61000000 000000000003 IMW           *378       562       577       589       662       663
 00101000 000000000462 IMXDIR        *644
 01101000 000000000451 IMXDIS2        553      *634       684       715
 01101000 000000000557 IMXDIS3        659       669       672       690       699       703       708
                                     *710
 01101000 000000000512 IMXFLT         667      *670
 61000000 000000000006 IMXIW         *380       637       646       661       676
 41000000 000000000011 IMXMBX.IOSTAT1          *402       692       695
 41000000 000000000013 IMXMBX.IOSTAT3          *403       693       694
 01101000 000000000501 IMXSPC         641       655      *660
 01101000 000000000514 IMXTRM         642       643      *674
 41000000 000000000005 INTCODE       *455       540
 01101000 000000000260 INTDIS0        474       482      *490
 01101000 000000000300 INTDIS1        493       496       502       504      *509
 01101000 000000000374 INTDIS2       *576       598       623
 01101000 000000000444 INTDIS3        602      *618
 01101000 000000000330 INTDIS4       *535       789
 01101000 000000000332 INTDIS5        530      *539
 01101000 000000000570 INTDISX        561       578       719      *725
 01101000 000000000564 INTDISX0       636      *717
 01101000 000000000602 INTDISX1       728       731      *736
 61000000 000000000010 INTLVL        *381       525       564       600       645       665       675
 03:34 07/30/97  FILE=NIM$MISC.:E05TSI        SYMBOL TABLE                                               30   BMAP - B00     
 61000000 000000000016 INTLVL$       *388       526
 61000000 000000000013 IOM$          *384       573
 03301008 000000000000 IRM_SSF       *407       792
 41000000 000000000010 ISR           *459       480       781
 03601003 000000000000 ISRSID        *355       359
 03201004 000000000000 JSN$FIXSS     *424       786
 03201008 000000000000 KIQ$FEINT     *428       654
 03601002 000000000000 LOWMEMSID      *14       358
 41000000 000000000006 MAGIC.ND       *19       391
 61000000 000000000017 MAGICARG      *389       520       521       757
 61000000 000000000020 MAGICS        *390       391       519
 41000000 000000020000 MINIQ         *356       361
 01101000 000000000341 MONSSR         545      *548
 41000000 000000000002 MPT.AS         *19
 41000000 000000000010 MPT.ASDESC     *19
 41000000 000000000005 MPT.ECCB       *19
 40000000 000000000013 MPT.ECCBDESC   *19
 41000000 000000000001 MPT.LS         *19
 41000000 000000000007 MPT.LSDESC     *19
 41000000 000000000003 MPT.PS         *19
 41000000 000000000011 MPT.PSDESC     *19
 41000000 000000000000 MPT.SS         *19
 41000000 000000000006 MPT.SSDESC     *19
 41000000 000000000004 MPT.TCB        *19
 41000000 000000000012 MPT.TCBDESC    *19
 03601000 000000000000 MPTSID         *14       172       202
 03601006 000000000000 MTSTACKSID    *445       510       766
 61000000 000000000034 NEXT          *391       392
 03301015 000000000000 NI$CHT$       *413       594       652       682
 03301005 000000000000 NI$DS          *89       718
 03301016 000000000000 NI$IMW$       *414       500       557
 03301017 000000000000 NI$IOM$       *415       572
 03201006 000000000000 NIF$IMXFAULT  *426       671
 03201007 000000000000 NIF$IMXSPEC   *427       668
 12101000 000000000217 NIM$CHNGAARD   354      *357
 12101000 000000000210 NIM$CONNECT    323      *325
 12101000 000000000000 NIM$CVTPTR      86       *95
 03:34 07/30/97  FILE=NIM$MISC.:E05TSI        SYMBOL TABLE                                               31   BMAP - B00     
 12101000 000000000131 NIM$DEQUEUE    229      *230
 12101000 000000000155 NIM$ENQUEUE    267      *268
 12101000 000000000212 NIM$IMXCONNECT           337      *339
 13101000 000000000230 NIM$INTDIS     406      *464       507
 13101000 000000000000 NIM$MISC        85       *94       463
 12101000 000000000173 NIM$REQUEUE    297      *298
 12101000 000000000111 NIM$WRDSBL     198      *199
 12101000 000000000071 NIM$WRENBL     168      *169
 03201009 000000000000 NIO$COMPQUE   *429       733
 46000000 000000000050 NIS_IDL        506      *507
 03201005 000000000000 NIW$POSTER    *425       616       709
 03301019 000000000000 NI_COMPHD$    *417       729
 03301006 000000000000 NI_CONADDR    *324       326       340
 03301007 000000000000 NI_IMX_CCW    *338       341
 03301018 000000000000 NI_INTLVL     *416       551       726       737
 03301025 000000000000 NI_OVERLAY    *423       741
 01101000 000000000667 NOTINTSCRCH    550      *800
 01101000 000000000644 NOTMON         770      *772
 01101000 000000000444 NOTMPC         606       610       615      *617
 03601001 000000000000 NULLSID        *14       233       272       302       605       698       730
 01101000 000000000612 OLAY           742      *745
 01101000 000000000624 OLAYDONE       740       744      *756
 41000000 000000000000 PR0            *24        34       247       251       253       280       282
                                      310       312       361       595       597       608       611
                                      612       692       693       694       695       701       704
                                      705
 41000000 000000000001 PR1            *25        35       182       212       236       242       243
                                      274       281       304       311       603       607       609
                                      688       691       696       700       702
 41000000 000000000002 PR2            *26        33       149       150
 41000000 000000000003 PR3            *27       234       240       244       246       271       275
                                      279       283       301       305       309
 41000000 000000000004 PR4            *28       241       252
 41000000 000000000005 PR5            *29       101       103       501       503       558       560
 41000000 000000000006 PR6            *30       110       470       471       473       478       480
                                      486       495       497       512       540       554       765
                                      781
 03:34 07/30/97  FILE=NIM$MISC.:E05TSI        SYMBOL TABLE                                               32   BMAP - B00     
 41000000 000000000007 PR7            *31       143
 41000000 000000000002 REQ.DCT$      *401       608       611       701       704
 01101000 000000000203 REQ1           303      *308
 03601010 000000000000 SCRCHENTSID   *449       794       801
 03601007 000000000000 SCUSID        *446       468
 03301010 000000000000 SC_NISSSF     *409       794
 03301009 000000000000 SC_NOTIOINT   *408       801
 03201010 000000000000 SSC$SASYNC    *430       532
 01101000 000000000650 SSF            543      *778
 01101000 000000000663 SSFSCRCH       780       784      *791
 61000000 000000000004 SSR           *379       518       541       762       788
 03601008 000000000000 SSRSID        *447       466       536       763
 03201011 000000000000 SSS$SEXIT     *431       776
 03301024 000000000000 S_CNODE       *422       739
 03301014 000000000000 S_INT_SS      *412       479
 03301020 000000000000 S_MONSSR      *418       546       793
 03301021 000000000000 S_PNO         *419       483
 03301022 000000000000 S_PTYPE       *420       487
 03301023 000000000000 S_SSPTYPE     *421       484
 03301011 000000000000 S_TIMR        *410       527
 03301000 000000000000 S_WSPTD        *12       125
 61000000 000000000014 TIMR          *385       528       761
 03601005 000000000000 TSTACKSID     *444       773
 41000000 000000000076 TSTAMP        *460       470
 03201013 000000000000 UDN$MGRES     *433       759
 03201012 000000000000 UDN$MGSAVE    *432       523
 01101000 000000000115 WRDSBL1       *204       214
 01101000 000000000075 WRENBL1       *174       184
 61000000 000000000006 WSR            *91       117       118       120       121       122       127
                                      129       134       136       137       140
 03201002 000000000000 X66_ARET       *10       145       155       186       216
 03201000 000000000000 X66_AUTO_0     *10        96       515
 03201001 000000000000 X66_AUTO_2     *10       170       200
 61000000 000000000016 XXX           *392      *393       394
 61000000 000000000225 _1            *463
 61000000 000000000007 _2            *463

 03:34 07/30/97  FILE=NIM$MISC.:E05TSI        SYMBOL TABLE                                               33   BMAP - B00     
     162 SYMBOLS

 03:34 07/30/97  FILE=NIM$MISC.:E05TSI        MACRO TABLE                                                34   BMAP - B00     
 ALIGN          463
 MAGIC           19

      17 MACROS

    SYMBOL SPACE USED  2443 WORDS
     MACRO SPACE USED  3390 WORDS
   INPUT RECORDS READ  2077
 STATEMENTS PROCESSED   795
         ELAPSED TIME  0:24.40
             CPU TIME     6.69 SEC.
        ASSEMBLY RATE  7130 STATEMENTS/CPU MIN.

      NO ERRORS

