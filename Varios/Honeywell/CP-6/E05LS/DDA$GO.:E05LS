VERSION E05

PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:1    
        1        1        /*M* DDA$GO GO ROUTINE */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        %SET LISTSUB='1'B;
        9        9        /*P* NAME:    DDA$GO
       10       10             PURPOSE: TO PREPARE THE USER'S PROGRAM FOR A RETURN TO IT
       11       11                      FROM DELTA.  THE PREPARATION
       12       12                      DEPENDS UPON HOW DELTA WAS ENTERED.  IF ENTRY WAS
       13       13                      DUE TO A USER FAULT,
       14       14                      THERE IS NO DERAILED INSTRUCTION TO HANDLE.  IF
       15       15                      ENTRY WAS DUE TO A DELTA DERAIL
       16       16                      (AT, ONCALL, TRACE CALLS) THE DERAILED INSTRUCTION MUST
       17       17                      BE EXECUTED (IN ADDITION TO REESTABLISHING THE
       18       18                      BREAKPOINT ).  IN ALL CASES GOIC (USED BY USERGO) IS SET TO POINT
       19       19                      TO THE NEXT INSTRUCTION.  THE STORED COMMAND DERAILS ARE
       20       20                      REPLANTED. DDA$GO RETURNS TO THE CALLER.
       21       21                      */
       22       22        /*D*  NAME:   DDA$GO
       23       23              CALL:   CALL DDA$GO   ALTRET(NOGO)
       24       24                      ALTERNATE RETURN IF SOME CONDITION PREVENTS RETURN
       25       25                      TO THE USER.
       26       26              INPUT:
       27       27                      DO$ POINTS TO THE DELTA COMMAND WHICH CAUSED ENTRY TO DOGO.
       28       28                      DO$ POINTS TO A GO FRAME OR IT IS NIL.  A GO FRAME
       29       29                      CAME EITHER FROM THE SCANNER (A DIRECT COMMAND) OR
       30       30                      FROM AN ATTACHMENT IN A STORED COMMAND.  DO$ =
       31       31                      NIL IMPLIES THAT THE ATTACHMENT DRIVER
       32       32                      (DDA$ATTACH) ENCOUNTERED NEITHER A GO NOR A STOP
       33       33                      FRAME AND THEREFORE, USED THE DEFAULT PROCEED
       34       34                      MODE ON STORED COMMANDS.
       35       35                      WITH GO FLAG SET.
       36       36                      FAULTCMD$ IS NIL OR POINTS TO A STORED DELTA COMMAND.
       37       37              OUTPUT: GOIC IS SET TO EITHER SAVEIC OR SL.  SAVEIC RESUMES
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:2    
       38       38                      EXECUTION FROM THE POINT OF ENTRY TO DELTA OR HAS BEEN
       39       39                      ALTERED BY THE USER.  SL (SPECIAL LOCATION) POINTS TO
       40       40                      THE DERAILED INSTRUCTION WHICH HAS BEEN MOVED THERE
       41       41                      FOLLOWED BY TRA SAVEIC+1.
       42       42              DESCRIPTION:  FAULTCMD$ DETERMINES WHICH SET OF PREPARATIONS
       43       43              IS TO BE
       44       44                      APPLIED TO THE USER PROGRAM.  IT REFLECTS THE REASON
       45       45                      THAT DELTA WAS ENTERED.  THE CASES, DERIVED FROM FAULTCMD$,
       46       46                      ARE: FAULTCMD   = NIL
       47       47                                      = AT
       48       48                                      = TRACE CALLS
       49       49                                      = ON CALL NAME
       50       50                      */
       51       51        DDA$GO: PROC ALTRET;
       52       52        %SUB @ON = '1'B/*@ON*/;
       53       53        %SUB @OFF = '0'B/*@OFF*/;
       54       54    1   DCL FATT$ PTR;
       55       55    1   DCL SAVEINS$ PTR;
       56       56    1   DCL DRL$ PTR;
       57       57    1   DCL T$ PTR;
       58       58    1   DCL FLTINS SBIN;
       59       59    1   DCL S$ PTR;
       60       60    1   DCL JUNK UBIN;
       61       61    1   DCL TEMP SBIN;
       62       62    1   DCL TRAICP1 SBIN;
       63       63    1   DCL LSE SBIN;
       64       64    1   DCL TYPE SBIN;
       65       65    1   DCL LENGTH SBIN;
       66       66    1   DCL IC SBIN;
       67       67    1   DCL PRIM$ PTR;
       68       68    1   DCL SAVEIC SBIN;
       69       69    1   DCL ALTRET_BIT BIT(1) BASED ALIGNED;
       70       70    1   DCL UBIN36 UBIN BASED;
       71       71        %INCLUDE DD_SUBS_C;
       72      342        %INCLUDE DD$BASED;
       73     1645        %GO;
       74     1665        %FIXCOM (NAME="FXCM");
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:3    
       75     1681        %AT_FIRST;
       76     1709        %HOST_INSTR(NAME=INSTR);
       77     1731        %OP$TAB (STCLASS=AUTO);
       78     1758        %IND$VALUES (STCLASS=BASED);
       79     1776        %HOST_REG$VALUES (NAME=REG$VALUES,STCLASS=BASED);
       80     1789        %TSX_INSTR;
       81     1797        %INCLUDE B$OBJECT_C;
       82     5227        %B$EDEF;
       83     5297        %SUB_CST;
       84     5313        %SUB_LINKFLAGS;
       85     5322        %INCLUDE DD_ERR_C;
       86     5719        %INCLUDE XUH_MACRO_C;
       87     5803        %INCLUDE DD_SD_M;
       88     7139        %S_D;
       89     8457        %INCLUDE CP_6;
       90     8538        %FPT_DRTN (FPTN=FPT$DRTN, STCLASS=BASED);
       91     8562        %INCLUDE B$JIT;
       92     8852    1   DCL B$JIT$ PTR SYMREF;
       93     8853    1   DCL D_SYMBOLS BIT(1) ALIGNED SYMREF;
       94     8854    1   DCL UIS$ PTR SYMREF;
       95     8855    1   DCL D_XDELTA BIT(1) SYMREF;
       96     8856        /*****************EXTERNAL ROUTINES USED**************************/
       97     8857    1   DCL DDB$PLANT ENTRY ALTRET;
       98     8858    1   DCL DDB$OCTAL_TO_INSTR ENTRY(2) ALTRET;
       99     8859    1   DCL DDB$INTERP ENTRY(3);
      100     8860    1   DCL DDE$ERROR ENTRY;
      101     8861    1   DCL DDB$PLANTONE ENTRY(4) ALTRET;
      102     8862    1   DCL DDT$ITAGS ENTRY(1) ALTRET;
      103     8863    1   DCL DDS$EQCS# ENTRY(1) ALTRET;
      104     8864    1   DCL DDF$FIND_PEDEF ENTRY(2) ALTRET;
      105     8865    1   DCL DDC$PUTONE ENTRY(2) ALTRET;
      106     8866    1   DCL DXA$SSF ENTRY ALTRET;
      107     8867    1   DCL DXB$CUSE ENTRY;
      108     8868    1   DCL DXB$UNODE ENTRY(1);
      109     8869        /***************END DCLS*******************************************/
      110     8870    1        S_D.GO_MODE = '1'B;                /* SET GO MODE 'ON' */
      111     8871                                                /* DONT GO IF SAFE STORE IS FULL */
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:4    
      112     8872    1        CALL DXA$SSF ALTRET(NOGO);
      113     8873                                                /**/
      114     8874                                                /* IF KILL DELTA, OR DLIB AND WE AREN'T
      115     8875                                                COMMING BACK, DON'T PLANT, JUST GO */
      116     8876                                                /**/
      117     8877    1        IF NOT D_XDELTA THEN
      118     8878    1             IF S_D.DRTN$->FPT$DRTN.V.KLDELTA#
      119     8879    1               OR (NOT (B$JIT.JUNK & %JJ_UDELTA#)
      120     8880    1               AND NOT S_D.DRTN$->FPT$DRTN.V.KPDELTA#)
      121     8881    2             THEN DO;
      122     8882        /*N* CALL UNPLANT FAULT_TAGS */
      123     8883    2                  S_D.GOIC = S_D.SAVEIC;
      124     8884    2                  GOTO R_ETURN;
      125     8885    2                END;
      126     8886        /*D*         IF A POSITION  WAS SPECIFIED IN THE GO COMMAND, SAVEIC
      127     8887                     IS CHANGED TO THE VALUE SPECIFIED.  FAULTCMD IS SET NIL
      128     8888                     BECAUSE CHANGING THE IC OBVIATES THE NEED TO EXECUTE
      129     8889                     ANY DERAILED INSTRUCTION.
      130     8890                     */
      131     8891    2        IF S_D.DO$ ~= ADDR(NIL) THEN DO;
      132     8892    2             IF S_D.DO$->GO.CMD = 11   /*C_GOTO*/
      133     8893    2               AND S_D.DO$->GO.GOPOS
      134     8894    3             THEN DO;            /* If its a go command with position specified */
      135     8895    3                  S_D.SAVEIC = S_D.DO$->GO.POSITION + S_D.ISBASE;
      136     8896    3                  S_D.FAULTCMD$ = ADDR(NIL);
      137     8897    3                END;
      138     8898    2           END;
      139     8899        /*D*        FAULTCMD = NIL MEANS THAT DELTA WAS ENTERED DUE TO:
      140     8900                    XEQ, STEP, USER FAULT...OR THE IC WAS CHANGED BY THE
      141     8901                    USER (AS IN GOTO POSITION)...ORTHE STORED COMMAND WHICH
      142     8902                    CAUSED ENTRY TO DELTA WAS KILLED DURING THIS INTER-
      143     8903                    ACTION.  IN EACH OF THESE CASES, THERE IS NO DERAILED
      144     8904                    INSTRUCTION TO HANDLE.  THE DERAILS ARE PLANTED.  S_D.GOIC IS
      145     8905                    SET TO S_D.SAVEIC.  DDA$GO RETURNS TO THE CALLER.
      146     8906                    */
      147     8907    1        S_D.ACCESS = '1'B;
      148     8908    1        REMEMBER S_FAULT IN S_D.REM_ACCESS;
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:5    
      149     8909    1        IF NOT D_XDELTA THEN JUNK = PINCRW(UIS$,S_D.SAVEIC)->UBIN36;
              8909                 /* Make sure we can access this */
      150     8910    1        S_D.ACCESS = '0'B;
      151     8911    1        S_D.DO$ = ADDR(NIL);
      152     8912    2        IF D_XDELTA THEN DO;
      153     8913    2             S_D.IND$->IND$VALUES.MIR = '0'B; /*Clear multi-inst inter bit */
      154     8914    2             CALL DXB$CUSE;
      155     8915    2             CALL DXB$UNODE(S_D.UNODE.CURRENT);
      156     8916    2           END;
      157     8917    1        IF NOT D_SYMBOLS THEN GOTO NO_SCHEMA;
      158     8918                       /* IF THE TRACE IS ON AND THE TRACE TYPE IS CALLS (ALL), THEN
      159     8919                       PLANT INTERNAL FAULT TAGS FOR THIS MODULE
      160     8920                       IF THEY ARE NOT ALREADY THERE.  */
      161     8921    1        IF S_D.TR$INFO.ACTIVE AND S_D.TR$INFO.TYPE = 46 /*C_TC*/
      162     8922    1          AND S_D.TR$INFO.X = '0'B
      163     8923    2        THEN DO;
      164     8924    2             SAVEIC = S_D.SAVEIC;
      165     8925    2             CALL DDF$FIND_PEDEF(SAVEIC,PRIM$) ALTRET(BAD_IC);
      166     8926    2             IF ( PRIM$->B$EDEF.CST = %STD#
      167     8927    2               OR PRIM$->B$EDEF.CST = %ASYNC#
      168     8928    2               OR PRIM$->B$EDEF.CST = %FUNC#
      169     8929    2               OR PRIM$->B$EDEF.CST = %XSTD#
      170     8930    2               OR PRIM$->B$EDEF.CST = %XASYNC#
      171     8931    2               OR PRIM$->B$EDEF.CST = %XFUNC# )
      172     8932    2               AND ( PRIM$->B$EDEF.LFLAGS.SOURCE = %SOURCE_OBJECT#
      173     8933    2               OR PRIM$->B$EDEF.LFLAGS.SOURCE = %SOURCE_ULIB# )
      174     8934    2             THEN IF PRIM$->B$EDEF.LFLAGS.FAULTAGS = '0'B/*@OFF*/
      175     8935    3                  THEN DO;
      176     8936    3                       CALL DDS$EQCS#( POFFW( PRIM$, S_D.EDEF$ ) / SIZEW(B$EDEF) )
              8936                                ALTRET( NO_SCHEMA );
      177     8937    3                       CALL DDT$ITAGS( 2 /* @PLANT_TAGS */ ) ALTRET( NO_SCHEMA );
      178     8938    3                     END;
      179     8939    2           END;
      180     8940    1   NO_SCHEMA: ;
      181     8941    1        IF S_D.FAULTCMD$ = ADDR(NIL) THEN
      182     8942    2        DO;
      183     8943    2             CALL DDB$PLANT ALTRET(BAD_PUT);
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:6    
      184     8944    2             S_D.GOIC = S_D.SAVEIC;
      185     8945    2             GOTO R_ETURN;
      186     8946    2           END;
      187     8947    1        LSE = S_D.FAULTCMD$->FXCM.CMD;
      188     8948    1        IF LSE = 34 OR LSE = 30 OR LSE = 32 OR LSE = 54 OR LSE=67
              8948                 /*C_ONN, C_OA, C_OE, C_ONNODES, C_WHEN*/
      189     8949    2        THEN DO;       /* DON'T DO ANYTHING SPECIAL FOR ON NODE, ABORT, EXIT */
      190     8950    2             S_D.FAULTCMD$ = ADDR(NIL);
      191     8951    2             GOTO NO_SCHEMA;
      192     8952    2           END;
      193     8953    1        FLTINS = S_D.FAULTINS$->UBIN36;
      194     8954    1        S_D.FAULTINS = FLTINS;             /* We'll need this is a call to shared
      195     8955                                                     code, and trace transfer is on */
      196     8956    1        T$ = ADDR(FLTINS);
      197     8957        /*D*        FAULTCMD = AT.  A DERAILED INSTRUCTION IS TO BE EXECUTED
      198     8958                    WITHOUT DISENGAGING THE AT BREAKPOINT.  THIS IS
      199     8959                    DONE IN TWO WAYS, DEPENDING ON THE TYPE OF INSTRUCTION WHICH
      200     8960                    HAS BEEN BREAKPOINTED: EIS-MULTIWORD OR NOT (EIS-MULTIWORD).
      201     8961                    DDB$INTERP IS CALLED TO DETERMINE INSTRUCTION TYPE.
      202     8962                    ATEIS OR ATNEIS IS THEN CALLED DEPENDING ON TYPE.
      203     8963                    */
      204     8964    1        CALL DDB$INTERP(T$,TYPE,LENGTH);
      205     8965    1        IF LSE = 2 OR LSE = 31        /* C_AT, C_OC */
      206     8966    2        THEN DO;
      207     8967    2             IF TYPE = 1/*T_EIS*/ OR (TYPE = 4/*T_SPECIAL*/ AND LENGTH = 2)
              8967                      /*REGULAR EIS IR CLIMB */
      208     8968    2               OR S_D.ISBASE ~= 0
      209     8969    3             THEN DO;
      210     8970    3                  CALL ATEIS ALTRET(BAD_PUT);
      211     8971    3                END;
      212     8972    3             ELSE DO;
      213     8973    3                  CALL ATNEIS ALTRET(NOGO);
      214     8974    3                END;
      215     8975    2             GOTO R_ETURN;
      216     8976    2           END;
      217     8977    1        IF LSE = 46 OR LSE = 53   /* C_TC, C_ONCALLS */
      218     8978    2        THEN DO;
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:7    
      219     8979    2             T$->INSTR.TAGG = 0/*PL6_TAG*/;     /*PL6_TAG*/
      220     8980    2             CALL ATNEIS ALTRET(NOGO);
      221     8981    2             GOTO R_ETURN;
      222     8982    2           END;
      223     8983    1        S_D.ERROR = 502;    /* E@DELBUG - WHAT FAULTCMD IS THIS ANYWAYS */
      224     8984    1        CALL DDE$ERROR;
      225     8985    1   NOGO: GOTO A_LTRETURN;
      226     8986    1   S_FAULT: ;
      227     8987    1        S_D.ACCESS = '0'B;
      228     8988    1        S_D.ERROR = 25;              /*E@UERR25*/
      229     8989    1        CALL DDE$ERROR;
      230     8990    1        GOTO NOGO;
      231     8991        /*D*       ATEIS IS ENTERED BECAUSE A MULTIWORD EIS INSTRUCTION WAS
      232     8992                   DERAILED BY AN AT AND IS NOW TO BE EXECUTED.  THIS IS DONE
      233     8993                   BY PLANTING A SPECIAL DERAIL CALLED AN EIS-STOPPER AFTER
      234     8994                   THE EIS INSTRUCTION.  THE FLOW IN ATEIS IS AS FOLLOWS. THE
      235     8995                   REGULAR DERAILS (STORED COMMANDS) ARE PLANTED (INCLUDING
      236     8996                   THE ONE OF CURRENT INTEREST). THE CURRENT ONE IS RESTORED.
      237     8997                   THE EIS STOPPER IS PLANTED AND SET ACTIVE.  S_D.GOIC IS SET
      238     8998                   TO S_D.SAVEIC WHICH IS POINTING TO THE EIS INSTRUCTION IN
      239     8999                   THE USER'S PROGRAM.) ATEIS RETURNS TO THE CALLER.
      240     9000                   */
      241     9001    1   ATEIS: PROC ALTRET;
      242     9002    2        CALL DDB$PLANT ALTRET(BAD_PUT);
      243     9003    2        FATT$ = PINCRW(S_D.VARCOM$,S_D.FAULTCMD$->FXCM.FAI);
      244     9004    2        CALL DDC$PUTONE(S_D.FAULTINS$,FATT$->AT_FIRST.ORIG_INSTR)
      245     9005    2          ALTRET(CALL_ERR);
      246     9006    3        IF D_XDELTA THEN DO;               /* DON'T INHIBIT USER DELTA */
      247     9007    3             T$->INSTR.I = '1'B;
      248     9008    3             CALL DDC$PUTONE(S_D.FAULTINS$, FLTINS) ALTRET(CALL_ERR);
      249     9009    3           END;
      250     9010    2        DRL$ = PINCRW(S_D.FAULTINS$,LENGTH);
      251     9011    2        SAVEINS$ = ADDR(S_D.E$IS.SAVED);
      252     9012    3        IF NOT S_D.S$TEP.ACTIVE THEN DO;
      253     9013    3             S_D.E$IS.LOC = S_D.FAULTCMD$->FXCM.CDF+LENGTH;
      254     9014    3             CALL DDB$PLANTONE(DRL$,S_D.IXFIX,2/*DRL_EIS*/,SAVEINS$) ALTRET(BAD_PUT);
      255     9015    3             S_D.E$IS.ACTIVE = '1'B/*@ON*/;
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:8    
      256     9016    3             IF TYPE = 4/*T_SPECIAL*/ AND S_D.FAULTINS$->ALTRET_BIT = '1'B
              9016                      /* CLIMB WITH ALTRET */
      257     9017    4             THEN DO;
      258     9018    4                  S_D.E$IS.C.JUNK(0) = 1;  /* TURN ON CLIMB FLAG */
      259     9019    4                  CALL DDB$PLANTONE( PINCRW(DRL$,1), S_D.IXFIX, 2/*DRL_EIS*/,
      260     9020    4                    ADDR(S_D.E$IS.C.JUNK(1))) ALTRET (BAD_PUT);
      261     9021    4                END;
      262     9022    3             ELSE S_D.E$IS.C.JUNK(0) = 0;
      263     9023    3           END;
      264     9024    2        S_D.GOIC = S_D.SAVEIC;
      265     9025    2        RETURN;
      266     9026    2   BAD_PUT: ALTRETURN;
      267     9027    2   CALL_ERR: CALL DDE$ERROR;
      268     9028    2        ALTRETURN;
      269     9029    2   END ATEIS;
      270     9030        /*D*     ATNEIS IS ENTERED BECAUSE AN INSTRUCTION WHICH IS NOT A
      271     9031                   MULTIWORD EIS INSTRUCTION WAS DERAILED BY AN AT AND IS NOW
      272     9032                   TO BE EXECUTED.  THIS IS DONE BY MOVING THE INSTRUCTION OVER
      273     9033                   TO A SPECIAL LOCATION WITHIN THE USER'S INSTRUCTION SEGMENT
      274     9034                   THIS SPECIAL LOCATION IS POINTED TO BY SL$ AND WAS ALLOCATED
      275     9035                   BY THE LINKER.  IN ORDER TO PERFORM THIS MOVE, CERTAIN
      276     9036                   MODIFICATIONS MAY BE MADE TO THE INSTRUCTION.  FIRST, A
      277     9037                  FEW (ONE TO DATE) INSTRUCTIONS CAN NOT BE HANDLED AT
      278     9038                  ALL. IF THE INSTRUCTION IS AN EXU, THE USER MUST KILL
      279     9039                  THE BREAKPOINT BEFORE GO (BACK TO HIS PROGRAM).
      280     9040                  IF THE INSTRUCTION HAS INDIRECT OPERANDS A WARNING IS
      281     9041                  GIVEN.  IF THE INSTRUCTION HAS IC MODIFICATION, S_D.SAVEIC
      282     9042                  IS ADDED TO THE Y FIELD, AND THE TAG IS CHANGED TO NONE.
      283     9043                  IF THE INSTRUCTION IS A TSX, THE APPROPRIATE XR IS LOADED
      284     9044                  WITH S_D.SAVEIC+1 AND THE OP CODE IS CHANGED TO TRA. IN ALL
      285     9045                  CASES THE INSTRUCTION AT SL$ IS FOLLOWED BY A TRA S_D.SAVEIC+1.
      286     9046                  THE DERAILS ARE PLANTED.  S_D.GOIC IS SET TO SL$->SL. ATNEIS
      287     9047                  RETURNS TO THE CALLER.
      288     9048                  */
      289     9049    1   ATNEIS: PROC  ALTRET;
      290     9050    2        IF TYPE = 4/*T_SPECIAL*/
      291     9051    3        THEN DO;
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:9    
      292     9052    3             S_D.ERROR = 509;  /* E@MUST_KILL_BRK */
      293     9053    3             CALL DDE$ERROR;
      294     9054    3             ALTRETURN;
      295     9055    3           END;
      296     9056    2        IF T$->INSTR.TAG.TM ~= 0/*R_MOD*/ AND T$->INSTR.TAG.TM ~= 2 /* FAULT TAG */
      297     9057    3        THEN DO;
      298     9058    3             S_D.ERROR = 510;      /* E@RISKY_BRK - RISKY BREAKPOINT */
      299     9059    3             CALL DDE$ERROR;
      300     9060    3           END;
      301     9061    3        ELSE DO;
      302     9062    3             IF T$->INSTR.TAG.TD = 4/*IC_MOD*/
      303     9063    4             THEN DO;
      304     9064    4                  IF (T$->INSTR.AR = '1'B)
      305     9065    4                    AND (S_D.TIC+T$->INSTR.YFIELD.YY > BITBIN('77777'O) )
      306     9066    5                  THEN DO;
      307     9067    5                       S_D.ERROR = 509; /* E@MUST_KILL_BRK */
      308     9068    5                       CALL DDE$ERROR;
      309     9069    5                       ALTRETURN;
      310     9070    5                     END;
      311     9071                                           /* CANT CLUDGE IC MODIFICATION IF IC>.77777*/
      312     9072                                      /* Locate the instruction in the op code table. */
      313     9073    4                  CALL DDB$OCTAL_TO_INSTR (T$->INSTR, OP$TAB) ALTRET(DELBUG);
      314     9074                                                /* Check for STBQ, STBA, STCQ, or STCA.
      315     9075                                                   Not really IC modification.           */
      316     9076    4                  IF NOT(OP$TAB.NIS.STCA)
      317     9077    5                  THEN DO;
      318     9078    6                       DO WHILE ('0'B);
      319     9079    6   DELBUG:                                 /* Output message and continue */
      320     9080    6                            S_D.ERROR = 502; /* E@DELBUG */
      321     9081    6                            CALL DDE$ERROR;
      322     9082    6                          END;
      323     9083    5                       T$->INSTR.Y = T$->INSTR.Y+S_D.TIC;
      324     9084    5                       T$->INSTR.TAG.TD = 0/*NONE_MOD*/;
      325     9085    5                     END;
      326     9086    4                END;
      327     9087    3           END;
      328     9088    2        IF T$->TSX_INSTR.OP = BITBIN('70'O)/*T_TSX*/
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:10   
      329     9089    3        THEN DO;
      330     9090    3             IC = S_D.SAVEIC+1;
      331     9091    3             IF T$ -> INSTR.TAG.TM = 0 AND
      332     9092    3               T$ -> INSTR.TAG.TDD.I
      333     9093    4             THEN DO;
      334     9094    4                  TEMP = T$ -> INSTR.TAG.TDD.XR;
      335     9095    4                  TEMP = S_D.UREG$ -> REG$VALUES.X(TEMP);
      336     9096    4                  IF T$ -> INSTR.AR = '1'B
      337     9097    5                  THEN DO;
      338     9098    5                       IF (TEMP + T$ -> INSTR.YFIELD.YY > BITBIN('77777'O))
      339     9099    6                       THEN DO;
      340     9100    6                            S_D.ERROR = 509; /* E@MUST_KILL_BRK */
      341     9101    6                            CALL DDE$ERROR;
      342     9102    6                            ALTRETURN;
      343     9103    6                          END;
      344     9104    5                     END;
      345     9105    4                  T$ -> INSTR.Y = T$ -> INSTR.Y + TEMP;
      346     9106    4                  T$ -> INSTR.TAG.TD = 0;
      347     9107    4                END;
      348     9108    3             S_D.UREG$->REG$VALUES.X(T$->TSX_INSTR.XR) = IC;
      349     9109    3             T$->INSTR.OP = BITBIN('1620'O)/*T_TRA*/;
      350     9110    3           END;
      351     9111    2        T$->INSTR.I = '1'B;                /* Ihibit the special location.  We
      352     9112                                           don't want to break here, or let an event
      353     9113                                           get reported.  DDA$DELTA stops events if
      354     9114                                           the goic instruction is inhibited. */
      355     9115    2        IF T$->INSTR.TAG.TM = 2 AND S_D.ONCALLS ~= 0 AND S_D.DID_ATTACH
      356     9116    2          AND (LSE = 2 OR LSE= 31)    /* C_AT, C_OC */
      357     9117    2        THEN T$->INSTR.TAG.TM = 0;         /* If this instruction has
      358     9118                                           a fault tag, and on calls mode is on, and
      359     9119                                           a breakpoint was hit with true conditions,
      360     9120                                           then we don't want to report an oncalls
      361     9121                                           this time.  Reset the fault in the special
      362     9122                                           location. */
      363     9123    2        CALL DDC$PUTONE(S_D.SL$,FLTINS) ALTRET(CALL_ERR);
      364     9124    2        S$ = ADDR(TRAICP1);
      365     9125                       /* PLACE THE INSTRUCTION 'TRA IC+1' AFTER THE USER'S INSTR.  */
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:11   
      366     9126    2        S$->UBIN36 = 0;
      367     9127    2        S$->INSTR.OP = BITBIN('1620'O)/*T_TRA*/;
      368     9128    2        S$->INSTR.Y = S_D.SAVEIC+1;
      369     9129    2        S$->INSTR.I = '1'B;
      370     9130    2        CALL DDC$PUTONE (S_D.SLP1$, TRAICP1) ALTRET(CALL_ERR);
      371     9131    2        CALL DDB$PLANT ALTRET(BAD_PUT);
      372     9132    2        S_D.GOIC = S_D.SL;
      373     9133    2        RETURN;
      374     9134    2   BAD_PUT: ALTRETURN;
      375     9135    2   CALL_ERR: CALL DDE$ERROR;
      376     9136    2        ALTRETURN;
      377     9137    2   END ATNEIS;
      378     9138    1   BAD_IC: ;
      379     9139    1        S_D.ERROR = 506;               /* E@BADIC - BAD IC VALUE.  WARNING */
      380     9140    1        CALL DDE$ERROR;
      381     9141    1        GOTO R_ETURN;
      382     9142    1   BAD_PUT: ;
      383     9143                                           /* CANT PUT THIS ONE IN...EITHER MISSING PAGE
      384     9144                                           OR DESCRIPTOR STORAGE */
      385     9145    1        GOTO A_LTRETURN;
      386     9146    1   R_ETURN:
      387     9147    1        S_D.GO_MODE = '0'B;
      388     9148    1        S_D.DID_ATTACH = '0'B;
      389     9149    1        RETURN;
      390     9150    1   A_LTRETURN:
      391     9151    1        S_D.GO_MODE = '0'B;
      392     9152    1        S_D.DID_ATTACH = '0'B;
      393     9153    1        ALTRETURN;
      394     9154    1   END DDA$GO;

PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:12   
--  Include file information  --

   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   DD_ERR_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure DDA$GO.

   Procedure DDA$GO requires 549 words for executable code.
   Procedure DDA$GO requires 30 words of local(AUTO) storage.

    No errors detected in file DDA$GO.:E05TSI    .

PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:13   

 Object Unit name= DDA$GO                                     File name= DDA$GO.:E05TOU
 UTS= JUL 29 '97 13:28:42.64 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Proc  even  none   549   1045  DDA$GO
    2  RoData even  none     5      5  DDA$GO

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        0  DDA$GO
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:14   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       0 DXA$SSF
         yes           Std       0 DXB$CUSE
         yes           Std       1 DXB$UNODE
 yes     yes           Std       2 DDF$FIND_PEDEF
 yes     yes           Std       0 DDB$PLANT
 yes     yes           Std       1 DDS$EQCS#
 yes     yes           Std       1 DDT$ITAGS
         yes           Std       0 DDE$ERROR
         yes           Std       3 DDB$INTERP
 yes     yes           Std       2 DDC$PUTONE
 yes     yes           Std       4 DDB$PLANTONE
 yes     yes           Std       2 DDB$OCTAL_TO_INSTR
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    S_D$                                  M$UC                                  B$JIT$
     D_SYMBOLS                             UIS$                                  D_XDELTA
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:15   


        1        1        /*M* DDA$GO GO ROUTINE */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        %SET LISTSUB='1'B;
        9        9        /*P* NAME:    DDA$GO
       10       10             PURPOSE: TO PREPARE THE USER'S PROGRAM FOR A RETURN TO IT
       11       11                      FROM DELTA.  THE PREPARATION
       12       12                      DEPENDS UPON HOW DELTA WAS ENTERED.  IF ENTRY WAS
       13       13                      DUE TO A USER FAULT,
       14       14                      THERE IS NO DERAILED INSTRUCTION TO HANDLE.  IF
       15       15                      ENTRY WAS DUE TO A DELTA DERAIL
       16       16                      (AT, ONCALL, TRACE CALLS) THE DERAILED INSTRUCTION MUST
       17       17                      BE EXECUTED (IN ADDITION TO REESTABLISHING THE
       18       18                      BREAKPOINT ).  IN ALL CASES GOIC (USED BY USERGO) IS SET TO POINT
       19       19                      TO THE NEXT INSTRUCTION.  THE STORED COMMAND DERAILS ARE
       20       20                      REPLANTED. DDA$GO RETURNS TO THE CALLER.
       21       21                      */
       22       22        /*D*  NAME:   DDA$GO
       23       23              CALL:   CALL DDA$GO   ALTRET(NOGO)
       24       24                      ALTERNATE RETURN IF SOME CONDITION PREVENTS RETURN
       25       25                      TO THE USER.
       26       26              INPUT:
       27       27                      DO$ POINTS TO THE DELTA COMMAND WHICH CAUSED ENTRY TO DOGO.
       28       28                      DO$ POINTS TO A GO FRAME OR IT IS NIL.  A GO FRAME
       29       29                      CAME EITHER FROM THE SCANNER (A DIRECT COMMAND) OR
       30       30                      FROM AN ATTACHMENT IN A STORED COMMAND.  DO$ =
       31       31                      NIL IMPLIES THAT THE ATTACHMENT DRIVER
       32       32                      (DDA$ATTACH) ENCOUNTERED NEITHER A GO NOR A STOP
       33       33                      FRAME AND THEREFORE, USED THE DEFAULT PROCEED
       34       34                      MODE ON STORED COMMANDS.
       35       35                      WITH GO FLAG SET.
       36       36                      FAULTCMD$ IS NIL OR POINTS TO A STORED DELTA COMMAND.
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:16   
       37       37              OUTPUT: GOIC IS SET TO EITHER SAVEIC OR SL.  SAVEIC RESUMES
       38       38                      EXECUTION FROM THE POINT OF ENTRY TO DELTA OR HAS BEEN
       39       39                      ALTERED BY THE USER.  SL (SPECIAL LOCATION) POINTS TO
       40       40                      THE DERAILED INSTRUCTION WHICH HAS BEEN MOVED THERE
       41       41                      FOLLOWED BY TRA SAVEIC+1.
       42       42              DESCRIPTION:  FAULTCMD$ DETERMINES WHICH SET OF PREPARATIONS
       43       43              IS TO BE
       44       44                      APPLIED TO THE USER PROGRAM.  IT REFLECTS THE REASON
       45       45                      THAT DELTA WAS ENTERED.  THE CASES, DERIVED FROM FAULTCMD$,
       46       46                      ARE: FAULTCMD   = NIL
       47       47                                      = AT
       48       48                                      = TRACE CALLS
       49       49                                      = ON CALL NAME
       50       50                      */
       51       51        DDA$GO: PROC ALTRET;

     51  1 000000   000000 700200 xent  DDA$GO       TSX0  ! X66_AUTO_0
         1 000001   000036 000000                    ZERO    30,0

       52       52        %SUB @ON = '1'B/*@ON*/;
       53       53        %SUB @OFF = '0'B/*@OFF*/;
       54       54    1   DCL FATT$ PTR;
       55       55    1   DCL SAVEINS$ PTR;
       56       56    1   DCL DRL$ PTR;
       57       57    1   DCL T$ PTR;
       58       58    1   DCL FLTINS SBIN;
       59       59    1   DCL S$ PTR;
       60       60    1   DCL JUNK UBIN;
       61       61    1   DCL TEMP SBIN;
       62       62    1   DCL TRAICP1 SBIN;
       63       63    1   DCL LSE SBIN;
       64       64    1   DCL TYPE SBIN;
       65       65    1   DCL LENGTH SBIN;
       66       66    1   DCL IC SBIN;
       67       67    1   DCL PRIM$ PTR;
       68       68    1   DCL SAVEIC SBIN;
       69       69    1   DCL ALTRET_BIT BIT(1) BASED ALIGNED;
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:17   
       70       70    1   DCL UBIN36 UBIN BASED;
       71       71        %INCLUDE DD_SUBS_C;
       72      342        %INCLUDE DD$BASED;
       73     1645        %GO;
       74     1665        %FIXCOM (NAME="FXCM");
       75     1681        %AT_FIRST;
       76     1709        %HOST_INSTR(NAME=INSTR);
       77     1731        %OP$TAB (STCLASS=AUTO);
       78     1758        %IND$VALUES (STCLASS=BASED);
       79     1776        %HOST_REG$VALUES (NAME=REG$VALUES,STCLASS=BASED);
       80     1789        %TSX_INSTR;
       81     1797        %INCLUDE B$OBJECT_C;
       82     5227        %B$EDEF;
       83     5297        %SUB_CST;
       84     5313        %SUB_LINKFLAGS;
       85     5322        %INCLUDE DD_ERR_C;
       86     5719        %INCLUDE XUH_MACRO_C;
       87     5803        %INCLUDE DD_SD_M;
       88     7139        %S_D;
       89     8457        %INCLUDE CP_6;
       90     8538        %FPT_DRTN (FPTN=FPT$DRTN, STCLASS=BASED);
       91     8562        %INCLUDE B$JIT;
       92     8852    1   DCL B$JIT$ PTR SYMREF;
       93     8853    1   DCL D_SYMBOLS BIT(1) ALIGNED SYMREF;
       94     8854    1   DCL UIS$ PTR SYMREF;
       95     8855    1   DCL D_XDELTA BIT(1) SYMREF;
       96     8856        /*****************EXTERNAL ROUTINES USED**************************/
       97     8857    1   DCL DDB$PLANT ENTRY ALTRET;
       98     8858    1   DCL DDB$OCTAL_TO_INSTR ENTRY(2) ALTRET;
       99     8859    1   DCL DDB$INTERP ENTRY(3);
      100     8860    1   DCL DDE$ERROR ENTRY;
      101     8861    1   DCL DDB$PLANTONE ENTRY(4) ALTRET;
      102     8862    1   DCL DDT$ITAGS ENTRY(1) ALTRET;
      103     8863    1   DCL DDS$EQCS# ENTRY(1) ALTRET;
      104     8864    1   DCL DDF$FIND_PEDEF ENTRY(2) ALTRET;
      105     8865    1   DCL DDC$PUTONE ENTRY(2) ALTRET;
      106     8866    1   DCL DXA$SSF ENTRY ALTRET;
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:18   
      107     8867    1   DCL DXB$CUSE ENTRY;
      108     8868    1   DCL DXB$UNODE ENTRY(1);
      109     8869        /***************END DCLS*******************************************/
      110     8870    1        S_D.GO_MODE = '1'B;                /* SET GO MODE 'ON' */

   8870  1 000002   400000 236003                    LDQ     -131072,DU
         1 000003   000000 470400 xsym               LDP0    S_D$
         1 000004   000020 756100                    STQ     16,,PR0

      111     8871                                                /* DONT GO IF SAFE STORE IS FULL */
      112     8872    1        CALL DXA$SSF ALTRET(NOGO);

   8872  1 000005   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000006   000000 701000 xent               TSX1    DXA$SSF
         1 000007   000330 702000 1                  TSX2    NOGO

      113     8873                                                /**/
      114     8874                                                /* IF KILL DELTA, OR DLIB AND WE AREN'T
      115     8875                                                COMMING BACK, DON'T PLANT, JUST GO */
      116     8876                                                /**/
      117     8877    1        IF NOT D_XDELTA THEN

   8877  1 000010   000000 234000 xsym               SZN     D_XDELTA
         1 000011   000030 604000 1                  TMI     s:8891

      118     8878    1             IF S_D.DRTN$->FPT$DRTN.V.KLDELTA#

   8878  1 000012   000000 470400 xsym               LDP0    S_D$
         1 000013   004704 471500                    LDP1    2500,,PR0
         1 000014   100013 236100                    LDQ     11,,PR1
         1 000015   002000 316003                    CANQ    1024,DU
         1 000016   000025 601000 1                  TNZ     s:8883
         1 000017   000000 473400 xsym               LDP3    B$JIT$
         1 000020   300315 220100                    LDX0    205,,PR3
         1 000021   200000 360003                    ANX0    65536,DU
         1 000022   000030 601000 1                  TNZ     s:8891
         1 000023   100013 430100                    FSZN    11,,PR1
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:19   
         1 000024   000030 604000 1                  TMI     s:8891

      119     8879    1               OR (NOT (B$JIT.JUNK & %JJ_UDELTA#)
      120     8880    1               AND NOT S_D.DRTN$->FPT$DRTN.V.KPDELTA#)
      121     8881    2             THEN DO;

      122     8882        /*N* CALL UNPLANT FAULT_TAGS */
      123     8883    2                  S_D.GOIC = S_D.SAVEIC;

   8883  1 000025   000002 235100                    LDA     2,,PR0
         1 000026   000001 755100                    STA     1,,PR0

      124     8884    2                  GOTO R_ETURN;

   8884  1 000027   001035 710000 1                  TRA     R_ETURN

      125     8885    2                END;
      126     8886        /*D*         IF A POSITION  WAS SPECIFIED IN THE GO COMMAND, SAVEIC
      127     8887                     IS CHANGED TO THE VALUE SPECIFIED.  FAULTCMD IS SET NIL
      128     8888                     BECAUSE CHANGING THE IC OBVIATES THE NEED TO EXECUTE
      129     8889                     ANY DERAILED INSTRUCTION.
      130     8890                     */
      131     8891    2        IF S_D.DO$ ~= ADDR(NIL) THEN DO;

   8891  1 000030   000000 470400 xsym               LDP0    S_D$
         1 000031   000031 236100                    LDQ     25,,PR0
         1 000032   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000033   000051 600000 1                  TZE     s:8907

      132     8892    2             IF S_D.DO$->GO.CMD = 11   /*C_GOTO*/

   8892  1 000034   000031 471500                    LDP1    25,,PR0
         1 000035   100000 236100                    LDQ     0,,PR1
         1 000036   777000 376003                    ANQ     -512,DU
         1 000037   013000 116003                    CMPQ    5632,DU
         1 000040   000051 601000 1                  TNZ     s:8907
         1 000041   100001 236100                    LDQ     1,,PR1
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:20   
         1 000042   400000 316007                    CANQ    -131072,DL
         1 000043   000051 600000 1                  TZE     s:8907

      133     8893    2               AND S_D.DO$->GO.GOPOS
      134     8894    3             THEN DO;            /* If its a go command with position specified */

      135     8895    3                  S_D.SAVEIC = S_D.DO$->GO.POSITION + S_D.ISBASE;

   8895  1 000044   100002 236100                    LDQ     2,,PR1
         1 000045   000720 036100                    ADLQ    464,,PR0
         1 000046   000002 756100                    STQ     2,,PR0

      136     8896    3                  S_D.FAULTCMD$ = ADDR(NIL);

   8896  1 000047   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000050   000004 756100                    STQ     4,,PR0

      137     8897    3                END;

      138     8898    2           END;

      139     8899        /*D*        FAULTCMD = NIL MEANS THAT DELTA WAS ENTERED DUE TO:
      140     8900                    XEQ, STEP, USER FAULT...OR THE IC WAS CHANGED BY THE
      141     8901                    USER (AS IN GOTO POSITION)...ORTHE STORED COMMAND WHICH
      142     8902                    CAUSED ENTRY TO DELTA WAS KILLED DURING THIS INTER-
      143     8903                    ACTION.  IN EACH OF THESE CASES, THERE IS NO DERAILED
      144     8904                    INSTRUCTION TO HANDLE.  THE DERAILS ARE PLANTED.  S_D.GOIC IS
      145     8905                    SET TO S_D.SAVEIC.  DDA$GO RETURNS TO THE CALLER.
      146     8906                    */
      147     8907    1        S_D.ACCESS = '1'B;

   8907  1 000051   400000 236003                    LDQ     -131072,DU
         1 000052   000016 756100                    STQ     14,,PR0

      148     8908    1        REMEMBER S_FAULT IN S_D.REM_ACCESS;

   8908  1 000053   000331 635000 1                  EAA     S_FAULT
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:21   
         1 000054   000024 452500                    STP2    20,,PR0
         1 000055   000025 755100                    STA     21,,PR0

      149     8909    1        IF NOT D_XDELTA THEN JUNK = PINCRW(UIS$,S_D.SAVEIC)->UBIN36;
              8909                 /* Make sure we can access this */

   8909  1 000056   000000 234000 xsym               SZN     D_XDELTA
         1 000057   000064 604000 1                  TMI     s:8910

   8909  1 000060   000002 720100                    LXL0    2,,PR0
         1 000061   000000 471400 xsym               LDP1    UIS$
         1 000062   100000 235110                    LDA     0,X0,PR1
         1 000063   200011 755100                    STA     JUNK,,AUTO

      150     8910    1        S_D.ACCESS = '0'B;

   8910  1 000064   000016 450100                    STZ     14,,PR0

      151     8911    1        S_D.DO$ = ADDR(NIL);

   8911  1 000065   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000066   000031 756100                    STQ     25,,PR0

      152     8912    2        IF D_XDELTA THEN DO;

   8912  1 000067   000000 234000 xsym               SZN     D_XDELTA
         1 000070   000106 605000 1                  TPL     s:8917

      153     8913    2             S_D.IND$->IND$VALUES.MIR = '0'B; /*Clear multi-inst inter bit */

   8913  1 000071   000046 471500                    LDP1    38,,PR0
         1 000072   000000 236000 2                  LDQ     0
         1 000073   100000 356100                    ANSQ    0,,PR1

      154     8914    2             CALL DXB$CUSE;

   8914  1 000074   000002 631400 xsym               EPPR1   B_VECTNIL+2
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:22   
         1 000075   000000 701000 xent               TSX1    DXB$CUSE
         1 000076   000000 011000                    NOP     0

      155     8915    2             CALL DXB$UNODE(S_D.UNODE.CURRENT);

   8915  1 000077   000000 236000 xsym               LDQ     S_D$
         1 000100   004757 036003                    ADLQ    2543,DU
         1 000101   200030 756100                    STQ     OP$TAB+6,,AUTO
         1 000102   200030 630500                    EPPR0   OP$TAB+6,,AUTO
         1 000103   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000104   000000 701000 xent               TSX1    DXB$UNODE
         1 000105   000000 011000                    NOP     0

      156     8916    2           END;

      157     8917    1        IF NOT D_SYMBOLS THEN GOTO NO_SCHEMA;

   8917  1 000106   000000 234000 xsym               SZN     D_SYMBOLS
         1 000107   000206 605000 1                  TPL     NO_SCHEMA

      158     8918                       /* IF THE TRACE IS ON AND THE TRACE TYPE IS CALLS (ALL), THEN
      159     8919                       PLANT INTERNAL FAULT TAGS FOR THIS MODULE
      160     8920                       IF THEY ARE NOT ALREADY THERE.  */
      161     8921    1        IF S_D.TR$INFO.ACTIVE AND S_D.TR$INFO.TYPE = 46 /*C_TC*/

   8921  1 000110   000000 470400 xsym               LDP0    S_D$
         1 000111   004630 234100                    SZN     2456,,PR0
         1 000112   000206 605000 1                  TPL     NO_SCHEMA
         1 000113   004634 235100                    LDA     2460,,PR0
         1 000114   000056 115007                    CMPA    46,DL
         1 000115   000206 601000 1                  TNZ     NO_SCHEMA
         1 000116   004632 234100                    SZN     2458,,PR0
         1 000117   000206 604000 1                  TMI     NO_SCHEMA

      162     8922    1          AND S_D.TR$INFO.X = '0'B
      163     8923    2        THEN DO;

PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:23   
      164     8924    2             SAVEIC = S_D.SAVEIC;

   8924  1 000120   000002 235100                    LDA     2,,PR0
         1 000121   200021 755100                    STA     SAVEIC,,AUTO

      165     8925    2             CALL DDF$FIND_PEDEF(SAVEIC,PRIM$) ALTRET(BAD_IC);

   8925  1 000122   200020 631500                    EPPR1   PRIM$,,AUTO
         1 000123   200031 451500                    STP1    OP$TAB+7,,AUTO
         1 000124   200021 633500                    EPPR3   SAVEIC,,AUTO
         1 000125   200030 453500                    STP3    OP$TAB+6,,AUTO
         1 000126   200030 630500                    EPPR0   OP$TAB+6,,AUTO
         1 000127   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000130   000000 701000 xent               TSX1    DDF$FIND_PEDEF
         1 000131   001025 702000 1                  TSX2    BAD_IC

      166     8926    2             IF ( PRIM$->B$EDEF.CST = %STD#

   8926  1 000132   200020 470500                    LDP0    PRIM$,,AUTO
         1 000133   000001 236100                    LDQ     1,,PR0
         1 000134   074000 316007                    CANQ    30720,DL
         1 000135   000152 600000 1                  TZE     s:8926+16
         1 000136   000001 236100                    LDQ     1,,PR0
         1 000137   074000 376007                    ANQ     30720,DL
         1 000140   014000 116007                    CMPQ    6144,DL
         1 000141   000152 600000 1                  TZE     s:8926+16
         1 000142   020000 116007                    CMPQ    8192,DL
         1 000143   000152 600000 1                  TZE     s:8926+16
         1 000144   024000 116007                    CMPQ    10240,DL
         1 000145   000152 600000 1                  TZE     s:8926+16
         1 000146   040000 116007                    CMPQ    16384,DL
         1 000147   000152 600000 1                  TZE     s:8926+16
         1 000150   044000 116007                    CMPQ    18432,DL
         1 000151   000206 601000 1                  TNZ     NO_SCHEMA
         1 000152   000000 236100                    LDQ     0,,PR0
         1 000153   700000 316003                    CANQ    -32768,DU
         1 000154   000161 600000 1                  TZE     s:8934
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:24   
         1 000155   000000 236100                    LDQ     0,,PR0
         1 000156   700000 376003                    ANQ     -32768,DU
         1 000157   300000 116003                    CMPQ    98304,DU
         1 000160   000206 601000 1                  TNZ     NO_SCHEMA

      167     8927    2               OR PRIM$->B$EDEF.CST = %ASYNC#
      168     8928    2               OR PRIM$->B$EDEF.CST = %FUNC#
      169     8929    2               OR PRIM$->B$EDEF.CST = %XSTD#
      170     8930    2               OR PRIM$->B$EDEF.CST = %XASYNC#
      171     8931    2               OR PRIM$->B$EDEF.CST = %XFUNC# )
      172     8932    2               AND ( PRIM$->B$EDEF.LFLAGS.SOURCE = %SOURCE_OBJECT#
      173     8933    2               OR PRIM$->B$EDEF.LFLAGS.SOURCE = %SOURCE_ULIB# )
      174     8934    2             THEN IF PRIM$->B$EDEF.LFLAGS.FAULTAGS = '0'B/*@OFF*/

   8934  1 000161   000000 430100                    FSZN    0,,PR0
         1 000162   000206 604000 1                  TMI     NO_SCHEMA

      175     8935    3                  THEN DO;

      176     8936    3                       CALL DDS$EQCS#( POFFW( PRIM$, S_D.EDEF$ ) / SIZEW(B$EDEF) )
              8936                                ALTRET( NO_SCHEMA );

   8936  1 000163   000000 471400 xsym               LDP1    S_D$
         1 000164   101042 236100                    LDQ     546,,PR1
         1 000165   000022 772000                    QRL     18
         1 000166   200030 756100                    STQ     OP$TAB+6,,AUTO
         1 000167   200020 236100                    LDQ     PRIM$,,AUTO
         1 000170   000022 772000                    QRL     18
         1 000171   200030 136100                    SBLQ    OP$TAB+6,,AUTO
         1 000172   000002 506007                    DIV     2,DL
         1 000173   200031 756100                    STQ     OP$TAB+7,,AUTO
         1 000174   200031 633500                    EPPR3   OP$TAB+7,,AUTO
         1 000175   200032 453500                    STP3    OP$TAB+8,,AUTO
         1 000176   200032 630500                    EPPR0   OP$TAB+8,,AUTO
         1 000177   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000200   000000 701000 xent               TSX1    DDS$EQCS#
         1 000201   000206 702000 1                  TSX2    NO_SCHEMA
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:25   

      177     8937    3                       CALL DDT$ITAGS( 2 /* @PLANT_TAGS */ ) ALTRET( NO_SCHEMA );

   8937  1 000202   000001 630400 2                  EPPR0   1
         1 000203   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000204   000000 701000 xent               TSX1    DDT$ITAGS
         1 000205   000206 702000 1                  TSX2    NO_SCHEMA

      178     8938    3                     END;

      179     8939    2           END;

   8937  1 000206                       NO_SCHEMA    null
      180     8940    1   NO_SCHEMA: ;
      181     8941    1        IF S_D.FAULTCMD$ = ADDR(NIL) THEN

   8941  1 000206   000000 470400 xsym               LDP0    S_D$
         1 000207   000004 236100                    LDQ     4,,PR0
         1 000210   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000211   000221 601000 1                  TNZ     s:8947

      182     8942    2        DO;

      183     8943    2             CALL DDB$PLANT ALTRET(BAD_PUT);

   8943  1 000212   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000213   000000 701000 xent               TSX1    DDB$PLANT
         1 000214   001034 702000 1                  TSX2    BAD_PUT

      184     8944    2             S_D.GOIC = S_D.SAVEIC;

   8944  1 000215   000000 470400 xsym               LDP0    S_D$
         1 000216   000002 235100                    LDA     2,,PR0
         1 000217   000001 755100                    STA     1,,PR0

      185     8945    2             GOTO R_ETURN;

PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:26   
   8945  1 000220   001035 710000 1                  TRA     R_ETURN

      186     8946    2           END;
      187     8947    1        LSE = S_D.FAULTCMD$->FXCM.CMD;

   8947  1 000221   000004 471500                    LDP1    4,,PR0
         1 000222   100000 236100                    LDQ     0,,PR1
         1 000223   000033 772000                    QRL     27
         1 000224   200014 756100                    STQ     LSE,,AUTO

      188     8948    1        IF LSE = 34 OR LSE = 30 OR LSE = 32 OR LSE = 54 OR LSE=67
              8948                 /*C_ONN, C_OA, C_OE, C_ONNODES, C_WHEN*/

   8948  1 000225   000042 116007                    CMPQ    34,DL
         1 000226   000237 600000 1                  TZE     s:8950
         1 000227   000036 116007                    CMPQ    30,DL
         1 000230   000237 600000 1                  TZE     s:8950
         1 000231   000040 116007                    CMPQ    32,DL
         1 000232   000237 600000 1                  TZE     s:8950
         1 000233   000066 116007                    CMPQ    54,DL
         1 000234   000237 600000 1                  TZE     s:8950
         1 000235   000103 116007                    CMPQ    67,DL
         1 000236   000242 601000 1                  TNZ     s:8953

      189     8949    2        THEN DO;       /* DON'T DO ANYTHING SPECIAL FOR ON NODE, ABORT, EXIT */

      190     8950    2             S_D.FAULTCMD$ = ADDR(NIL);

   8950  1 000237   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000240   000004 756100                    STQ     4,,PR0

      191     8951    2             GOTO NO_SCHEMA;

   8951  1 000241   000206 710000 1                  TRA     NO_SCHEMA

      192     8952    2           END;
      193     8953    1        FLTINS = S_D.FAULTINS$->UBIN36;
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:27   

   8953  1 000242   000003 473500                    LDP3    3,,PR0
         1 000243   300000 235100                    LDA     0,,PR3
         1 000244   200007 755100                    STA     FLTINS,,AUTO

      194     8954    1        S_D.FAULTINS = FLTINS;             /* We'll need this is a call to shared

   8954  1 000245   005330 755100                    STA     2776,,PR0

      195     8955                                                     code, and trace transfer is on */
      196     8956    1        T$ = ADDR(FLTINS);

   8956  1 000246   200007 631500                    EPPR1   FLTINS,,AUTO
         1 000247   200006 451500                    STP1    T$,,AUTO

      197     8957        /*D*        FAULTCMD = AT.  A DERAILED INSTRUCTION IS TO BE EXECUTED
      198     8958                    WITHOUT DISENGAGING THE AT BREAKPOINT.  THIS IS
      199     8959                    DONE IN TWO WAYS, DEPENDING ON THE TYPE OF INSTRUCTION WHICH
      200     8960                    HAS BEEN BREAKPOINTED: EIS-MULTIWORD OR NOT (EIS-MULTIWORD).
      201     8961                    DDB$INTERP IS CALLED TO DETERMINE INSTRUCTION TYPE.
      202     8962                    ATEIS OR ATNEIS IS THEN CALLED DEPENDING ON TYPE.
      203     8963                    */
      204     8964    1        CALL DDB$INTERP(T$,TYPE,LENGTH);

   8964  1 000250   200016 633500                    EPPR3   LENGTH,,AUTO
         1 000251   200032 453500                    STP3    OP$TAB+8,,AUTO
         1 000252   200015 634500                    EPPR4   TYPE,,AUTO
         1 000253   200031 454500                    STP4    OP$TAB+7,,AUTO
         1 000254   200006 635500                    EPPR5   T$,,AUTO
         1 000255   200030 455500                    STP5    OP$TAB+6,,AUTO
         1 000256   200030 630500                    EPPR0   OP$TAB+6,,AUTO
         1 000257   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000260   000000 701000 xent               TSX1    DDB$INTERP
         1 000261   000000 011000                    NOP     0

      205     8965    1        IF LSE = 2 OR LSE = 31        /* C_AT, C_OC */

PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:28   
   8965  1 000262   200014 235100                    LDA     LSE,,AUTO
         1 000263   000002 115007                    CMPA    2,DL
         1 000264   000267 600000 1                  TZE     s:8967
         1 000265   000037 115007                    CMPA    31,DL
         1 000266   000310 601000 1                  TNZ     s:8977

      206     8966    2        THEN DO;

      207     8967    2             IF TYPE = 1/*T_EIS*/ OR (TYPE = 4/*T_SPECIAL*/ AND LENGTH = 2)
              8967                      /*REGULAR EIS IR CLIMB */

   8967  1 000267   200015 236100                    LDQ     TYPE,,AUTO
         1 000270   000001 116007                    CMPQ    1,DL
         1 000271   000302 600000 1                  TZE     s:8970
         1 000272   000004 116007                    CMPQ    4,DL
         1 000273   000277 601000 1                  TNZ     s:8967+8
         1 000274   200016 235100                    LDA     LENGTH,,AUTO
         1 000275   000002 115007                    CMPA    2,DL
         1 000276   000302 600000 1                  TZE     s:8970
         1 000277   000000 470400 xsym               LDP0    S_D$
         1 000300   000720 235100                    LDA     464,,PR0
         1 000301   000305 600000 1                  TZE     s:8973

      208     8968    2               OR S_D.ISBASE ~= 0
      209     8969    3             THEN DO;

      210     8970    3                  CALL ATEIS ALTRET(BAD_PUT);

   8970  1 000302   000341 701000 1                  TSX1    ATEIS
         1 000303   001034 702000 1                  TSX2    BAD_PUT

      211     8971    3                END;

   8971  1 000304   000307 710000 1                  TRA     s:8975

      212     8972    3             ELSE DO;

PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:29   
      213     8973    3                  CALL ATNEIS ALTRET(NOGO);

   8973  1 000305   000512 701000 1                  TSX1    ATNEIS
         1 000306   000330 702000 1                  TSX2    NOGO

      214     8974    3                END;

      215     8975    2             GOTO R_ETURN;

   8975  1 000307   001035 710000 1                  TRA     R_ETURN

      216     8976    2           END;
      217     8977    1        IF LSE = 46 OR LSE = 53   /* C_TC, C_ONCALLS */

   8977  1 000310   000056 115007                    CMPA    46,DL
         1 000311   000314 600000 1                  TZE     s:8979
         1 000312   000065 115007                    CMPA    53,DL
         1 000313   000322 601000 1                  TNZ     s:8983

      218     8978    2        THEN DO;

      219     8979    2             T$->INSTR.TAGG = 0/*PL6_TAG*/;     /*PL6_TAG*/

   8979  1 000314   200006 470500                    LDP0    T$,,AUTO
         1 000315   000000 236003                    LDQ     0,DU
         1 000316   000000 752101                    STCQ    0,'01'O,PR0

      220     8980    2             CALL ATNEIS ALTRET(NOGO);

   8980  1 000317   000512 701000 1                  TSX1    ATNEIS
         1 000320   000330 702000 1                  TSX2    NOGO

      221     8981    2             GOTO R_ETURN;

   8981  1 000321   001035 710000 1                  TRA     R_ETURN

      222     8982    2           END;
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:30   
      223     8983    1        S_D.ERROR = 502;    /* E@DELBUG - WHAT FAULTCMD IS THIS ANYWAYS */

   8983  1 000322   000766 236007                    LDQ     502,DL
         1 000323   000000 470400 xsym               LDP0    S_D$
         1 000324   000013 756100                    STQ     11,,PR0

      224     8984    1        CALL DDE$ERROR;

   8984  1 000325   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000326   000000 701000 xent               TSX1    DDE$ERROR
         1 000327   000000 011000                    NOP     0

      225     8985    1   NOGO: GOTO A_LTRETURN;

   8985  1 000330   001041 710000 1     NOGO         TRA     A_LTRETURN

   8983  1 000331                       S_FAULT      null
      226     8986    1   S_FAULT: ;
      227     8987    1        S_D.ACCESS = '0'B;

   8987  1 000331   000000 470400 xsym               LDP0    S_D$
         1 000332   000016 450100                    STZ     14,,PR0

      228     8988    1        S_D.ERROR = 25;              /*E@UERR25*/

   8988  1 000333   000031 235007                    LDA     25,DL
         1 000334   000013 755100                    STA     11,,PR0

      229     8989    1        CALL DDE$ERROR;

   8989  1 000335   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000336   000000 701000 xent               TSX1    DDE$ERROR
         1 000337   000000 011000                    NOP     0

      230     8990    1        GOTO NOGO;

   8990  1 000340   000330 710000 1                  TRA     NOGO
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:31   

      231     8991        /*D*       ATEIS IS ENTERED BECAUSE A MULTIWORD EIS INSTRUCTION WAS
      232     8992                   DERAILED BY AN AT AND IS NOW TO BE EXECUTED.  THIS IS DONE
      233     8993                   BY PLANTING A SPECIAL DERAIL CALLED AN EIS-STOPPER AFTER
      234     8994                   THE EIS INSTRUCTION.  THE FLOW IN ATEIS IS AS FOLLOWS. THE
      235     8995                   REGULAR DERAILS (STORED COMMANDS) ARE PLANTED (INCLUDING
      236     8996                   THE ONE OF CURRENT INTEREST). THE CURRENT ONE IS RESTORED.
      237     8997                   THE EIS STOPPER IS PLANTED AND SET ACTIVE.  S_D.GOIC IS SET
      238     8998                   TO S_D.SAVEIC WHICH IS POINTING TO THE EIS INSTRUCTION IN
      239     8999                   THE USER'S PROGRAM.) ATEIS RETURNS TO THE CALLER.
      240     9000                   */
      241     9001    1   ATEIS: PROC ALTRET;

   9001  1 000341   200026 741300       ATEIS        STX1  ! OP$TAB+4,,AUTO

      242     9002    2        CALL DDB$PLANT ALTRET(BAD_PUT);

   9002  1 000342   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000343   000000 701000 xent               TSX1    DDB$PLANT
         1 000344   000503 702000 1                  TSX2    BAD_PUT

      243     9003    2        FATT$ = PINCRW(S_D.VARCOM$,S_D.FAULTCMD$->FXCM.FAI);

   9003  1 000345   000000 470400 xsym               LDP0    S_D$
         1 000346   000004 471500                    LDP1    4,,PR0
         1 000347   100002 720100                    LXL0    2,,PR1
         1 000350   004622 473500                    LDP3    2450,,PR0
         1 000351   300000 634510                    EPPR4   0,X0,PR3
         1 000352   200003 454500                    STP4    FATT$,,AUTO

      244     9004    2        CALL DDC$PUTONE(S_D.FAULTINS$,FATT$->AT_FIRST.ORIG_INSTR)

   9004  1 000353   200003 236100                    LDQ     FATT$,,AUTO
         1 000354   000002 036003                    ADLQ    2,DU
         1 000355   200031 756100                    STQ     OP$TAB+7,,AUTO
         1 000356   000000 236000 xsym               LDQ     S_D$
         1 000357   000003 036003                    ADLQ    3,DU
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:32   
         1 000360   200030 756100                    STQ     OP$TAB+6,,AUTO
         1 000361   200030 630500                    EPPR0   OP$TAB+6,,AUTO
         1 000362   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000363   000000 701000 xent               TSX1    DDC$PUTONE
         1 000364   000505 702000 1                  TSX2    CALL_ERR

      245     9005    2          ALTRET(CALL_ERR);
      246     9006    3        IF D_XDELTA THEN DO;               /* DON'T INHIBIT USER DELTA */

   9006  1 000365   000000 234000 xsym               SZN     D_XDELTA
         1 000366   000403 605000 1                  TPL     s:9010

      247     9007    3             T$->INSTR.I = '1'B;

   9007  1 000367   200006 470500                    LDP0    T$,,AUTO
         1 000370   000200 236007                    LDQ     128,DL
         1 000371   000000 256100                    ORSQ    0,,PR0

      248     9008    3             CALL DDC$PUTONE(S_D.FAULTINS$, FLTINS) ALTRET(CALL_ERR);

   9008  1 000372   200007 630500                    EPPR0   FLTINS,,AUTO
         1 000373   200031 450500                    STP0    OP$TAB+7,,AUTO
         1 000374   000000 236000 xsym               LDQ     S_D$
         1 000375   000003 036003                    ADLQ    3,DU
         1 000376   200030 756100                    STQ     OP$TAB+6,,AUTO
         1 000377   200030 630500                    EPPR0   OP$TAB+6,,AUTO
         1 000400   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000401   000000 701000 xent               TSX1    DDC$PUTONE
         1 000402   000505 702000 1                  TSX2    CALL_ERR

      249     9009    3           END;

      250     9010    2        DRL$ = PINCRW(S_D.FAULTINS$,LENGTH);

   9010  1 000403   000000 470400 xsym               LDP0    S_D$
         1 000404   000003 471500                    LDP1    3,,PR0
         1 000405   200016 720100                    LXL0    LENGTH,,AUTO
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:33   
         1 000406   100000 633510                    EPPR3   0,X0,PR1
         1 000407   200005 453500                    STP3    DRL$,,AUTO

      251     9011    2        SAVEINS$ = ADDR(S_D.E$IS.SAVED);

   9011  1 000410   000000 236000 xsym               LDQ     S_D$
         1 000411   004661 036003                    ADLQ    2481,DU
         1 000412   200004 756100                    STQ     SAVEINS$,,AUTO

      252     9012    3        IF NOT S_D.S$TEP.ACTIVE THEN DO;

   9012  1 000413   005276 234100                    SZN     2750,,PR0
         1 000414   000476 604000 1                  TMI     s:9024

      253     9013    3             S_D.E$IS.LOC = S_D.FAULTCMD$->FXCM.CDF+LENGTH;

   9013  1 000415   000004 471500                    LDP1    4,,PR0
         1 000416   100001 236100                    LDQ     1,,PR1
         1 000417   200016 036100                    ADLQ    LENGTH,,AUTO
         1 000420   004660 756100                    STQ     2480,,PR0

      254     9014    3             CALL DDB$PLANTONE(DRL$,S_D.IXFIX,2/*DRL_EIS*/,SAVEINS$) ALTRET(BAD_PUT);

   9014  1 000421   200004 634500                    EPPR4   SAVEINS$,,AUTO
         1 000422   200033 454500                    STP4    OP$TAB+9,,AUTO
         1 000423   000001 236000 2                  LDQ     1
         1 000424   200032 756100                    STQ     OP$TAB+8,,AUTO
         1 000425   000000 236000 xsym               LDQ     S_D$
         1 000426   000015 036003                    ADLQ    13,DU
         1 000427   200031 756100                    STQ     OP$TAB+7,,AUTO
         1 000430   200005 631500                    EPPR1   DRL$,,AUTO
         1 000431   200030 451500                    STP1    OP$TAB+6,,AUTO
         1 000432   200030 630500                    EPPR0   OP$TAB+6,,AUTO
         1 000433   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000434   000000 701000 xent               TSX1    DDB$PLANTONE
         1 000435   000503 702000 1                  TSX2    BAD_PUT

PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:34   
      255     9015    3             S_D.E$IS.ACTIVE = '1'B/*@ON*/;

   9015  1 000436   400000 236003                    LDQ     -131072,DU
         1 000437   000000 470400 xsym               LDP0    S_D$
         1 000440   004657 756100                    STQ     2479,,PR0

      256     9016    3             IF TYPE = 4/*T_SPECIAL*/ AND S_D.FAULTINS$->ALTRET_BIT = '1'B
              9016                      /* CLIMB WITH ALTRET */

   9016  1 000441   200015 235100                    LDA     TYPE,,AUTO
         1 000442   000004 115007                    CMPA    4,DL
         1 000443   000475 601000 1                  TNZ     s:9022
         1 000444   000003 471500                    LDP1    3,,PR0
         1 000445   100000 234100                    SZN     0,,PR1
         1 000446   000475 605000 1                  TPL     s:9022

      257     9017    4             THEN DO;

      258     9018    4                  S_D.E$IS.C.JUNK(0) = 1;  /* TURN ON CLIMB FLAG */

   9018  1 000447   000001 235007                    LDA     1,DL
         1 000450   004662 755100                    STA     2482,,PR0

      259     9019    4                  CALL DDB$PLANTONE( PINCRW(DRL$,1), S_D.IXFIX, 2/*DRL_EIS*/,

   9019  1 000451   200005 236100                    LDQ     DRL$,,AUTO
         1 000452   000001 036003                    ADLQ    1,DU
         1 000453   200030 756100                    STQ     OP$TAB+6,,AUTO
         1 000454   000000 236000 xsym               LDQ     S_D$
         1 000455   004663 036003                    ADLQ    2483,DU
         1 000456   200031 756100                    STQ     OP$TAB+7,,AUTO
         1 000457   200031 631500                    EPPR1   OP$TAB+7,,AUTO
         1 000460   200035 451500                    STP1    OP$TAB+11,,AUTO
         1 000461   000001 236000 2                  LDQ     1
         1 000462   200034 756100                    STQ     OP$TAB+10,,AUTO
         1 000463   000000 236000 xsym               LDQ     S_D$
         1 000464   000015 036003                    ADLQ    13,DU
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:35   
         1 000465   200033 756100                    STQ     OP$TAB+9,,AUTO
         1 000466   200030 633500                    EPPR3   OP$TAB+6,,AUTO
         1 000467   200032 453500                    STP3    OP$TAB+8,,AUTO
         1 000470   200032 630500                    EPPR0   OP$TAB+8,,AUTO
         1 000471   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000472   000000 701000 xent               TSX1    DDB$PLANTONE
         1 000473   000503 702000 1                  TSX2    BAD_PUT

      260     9020    4                    ADDR(S_D.E$IS.C.JUNK(1))) ALTRET (BAD_PUT);
      261     9021    4                END;

   9021  1 000474   000476 710000 1                  TRA     s:9024

      262     9022    3             ELSE S_D.E$IS.C.JUNK(0) = 0;

   9022  1 000475   004662 450100                    STZ     2482,,PR0

      263     9023    3           END;

      264     9024    2        S_D.GOIC = S_D.SAVEIC;

   9024  1 000476   000000 470400 xsym               LDP0    S_D$
         1 000477   000002 235100                    LDA     2,,PR0
         1 000500   000001 755100                    STA     1,,PR0

      265     9025    2        RETURN;

   9025  1 000501   200026 221300                    LDX1  ! OP$TAB+4,,AUTO
         1 000502   000001 702211                    TSX2  ! 1,X1

      266     9026    2   BAD_PUT: ALTRETURN;

   9026  1 000503   200026 221300       BAD_PUT      LDX1  ! OP$TAB+4,,AUTO
         1 000504   000000 702211                    TSX2  ! 0,X1

      267     9027    2   CALL_ERR: CALL DDE$ERROR;

PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:36   
   9027  1 000505   000002 631400 xsym  CALL_ERR     EPPR1   B_VECTNIL+2
         1 000506   000000 701000 xent               TSX1    DDE$ERROR
         1 000507   000000 011000                    NOP     0

      268     9028    2        ALTRETURN;

   9028  1 000510   200026 221300                    LDX1  ! OP$TAB+4,,AUTO
         1 000511   000000 702211                    TSX2  ! 0,X1

      269     9029    2   END ATEIS;
      270     9030        /*D*     ATNEIS IS ENTERED BECAUSE AN INSTRUCTION WHICH IS NOT A
      271     9031                   MULTIWORD EIS INSTRUCTION WAS DERAILED BY AN AT AND IS NOW
      272     9032                   TO BE EXECUTED.  THIS IS DONE BY MOVING THE INSTRUCTION OVER
      273     9033                   TO A SPECIAL LOCATION WITHIN THE USER'S INSTRUCTION SEGMENT
      274     9034                   THIS SPECIAL LOCATION IS POINTED TO BY SL$ AND WAS ALLOCATED
      275     9035                   BY THE LINKER.  IN ORDER TO PERFORM THIS MOVE, CERTAIN
      276     9036                   MODIFICATIONS MAY BE MADE TO THE INSTRUCTION.  FIRST, A
      277     9037                  FEW (ONE TO DATE) INSTRUCTIONS CAN NOT BE HANDLED AT
      278     9038                  ALL. IF THE INSTRUCTION IS AN EXU, THE USER MUST KILL
      279     9039                  THE BREAKPOINT BEFORE GO (BACK TO HIS PROGRAM).
      280     9040                  IF THE INSTRUCTION HAS INDIRECT OPERANDS A WARNING IS
      281     9041                  GIVEN.  IF THE INSTRUCTION HAS IC MODIFICATION, S_D.SAVEIC
      282     9042                  IS ADDED TO THE Y FIELD, AND THE TAG IS CHANGED TO NONE.
      283     9043                  IF THE INSTRUCTION IS A TSX, THE APPROPRIATE XR IS LOADED
      284     9044                  WITH S_D.SAVEIC+1 AND THE OP CODE IS CHANGED TO TRA. IN ALL
      285     9045                  CASES THE INSTRUCTION AT SL$ IS FOLLOWED BY A TRA S_D.SAVEIC+1.
      286     9046                  THE DERAILS ARE PLANTED.  S_D.GOIC IS SET TO SL$->SL. ATNEIS
      287     9047                  RETURNS TO THE CALLER.
      288     9048                  */
      289     9049    1   ATNEIS: PROC  ALTRET;

   9049  1 000512   200026 741300       ATNEIS       STX1  ! OP$TAB+4,,AUTO

      290     9050    2        IF TYPE = 4/*T_SPECIAL*/

   9050  1 000513   200015 235100                    LDA     TYPE,,AUTO
         1 000514   000004 115007                    CMPA    4,DL
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:37   
         1 000515   000526 601000 1                  TNZ     s:9056

      291     9051    3        THEN DO;

      292     9052    3             S_D.ERROR = 509;  /* E@MUST_KILL_BRK */

   9052  1 000516   000775 236007                    LDQ     509,DL
         1 000517   000000 470400 xsym               LDP0    S_D$
         1 000520   000013 756100                    STQ     11,,PR0

      293     9053    3             CALL DDE$ERROR;

   9053  1 000521   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000522   000000 701000 xent               TSX1    DDE$ERROR
         1 000523   000000 011000                    NOP     0

      294     9054    3             ALTRETURN;

   9054  1 000524   200026 221300                    LDX1  ! OP$TAB+4,,AUTO
         1 000525   000000 702211                    TSX2  ! 0,X1

      295     9055    3           END;
      296     9056    2        IF T$->INSTR.TAG.TM ~= 0/*R_MOD*/ AND T$->INSTR.TAG.TM ~= 2 /* FAULT TAG */

   9056  1 000526   200006 470500                    LDP0    T$,,AUTO
         1 000527   000000 236100                    LDQ     0,,PR0
         1 000530   000060 316007                    CANQ    48,DL
         1 000531   000545 600000 1                  TZE     s:9062
         1 000532   000000 236100                    LDQ     0,,PR0
         1 000533   000060 376007                    ANQ     48,DL
         1 000534   000040 116007                    CMPQ    32,DL
         1 000535   000545 600000 1                  TZE     s:9062

      297     9057    3        THEN DO;

      298     9058    3             S_D.ERROR = 510;      /* E@RISKY_BRK - RISKY BREAKPOINT */

PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:38   
   9058  1 000536   000776 235007                    LDA     510,DL
         1 000537   000000 471400 xsym               LDP1    S_D$
         1 000540   100013 755100                    STA     11,,PR1

      299     9059    3             CALL DDE$ERROR;

   9059  1 000541   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000542   000000 701000 xent               TSX1    DDE$ERROR
         1 000543   000000 011000                    NOP     0

      300     9060    3           END;

   9060  1 000544   000626 710000 1                  TRA     s:9088

      301     9061    3        ELSE DO;

      302     9062    3             IF T$->INSTR.TAG.TD = 4/*IC_MOD*/

   9062  1 000545   000000 236100                    LDQ     0,,PR0
         1 000546   000017 376007                    ANQ     15,DL
         1 000547   000004 116007                    CMPQ    4,DL
         1 000550   000626 601000 1                  TNZ     s:9088

      303     9063    4             THEN DO;

      304     9064    4                  IF (T$->INSTR.AR = '1'B)

   9064  1 000551   000000 236100                    LDQ     0,,PR0
         1 000552   000100 316007                    CANQ    64,DL
         1 000553   000572 600000 1                  TZE     s:9073
         1 000554   000000 471400 xsym               LDP1    S_D$
         1 000555   000000 236100                    LDQ     0,,PR0
         1 000556   000003 736000                    QLS     3
         1 000557   000025 732000                    QRS     21
         1 000560   100027 036100                    ADLQ    23,,PR1
         1 000561   077777 116007                    CMPQ    32767,DL
         1 000562   000572 604400 1                  TMOZ    s:9073
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:39   

      305     9065    4                    AND (S_D.TIC+T$->INSTR.YFIELD.YY > BITBIN('77777'O) )
      306     9066    5                  THEN DO;

      307     9067    5                       S_D.ERROR = 509; /* E@MUST_KILL_BRK */

   9067  1 000563   000775 236007                    LDQ     509,DL
         1 000564   100013 756100                    STQ     11,,PR1

      308     9068    5                       CALL DDE$ERROR;

   9068  1 000565   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000566   000000 701000 xent               TSX1    DDE$ERROR
         1 000567   000000 011000                    NOP     0

      309     9069    5                       ALTRETURN;

   9069  1 000570   200026 221300                    LDX1  ! OP$TAB+4,,AUTO
         1 000571   000000 702211                    TSX2  ! 0,X1

      310     9070    5                     END;
      311     9071                                           /* CANT CLUDGE IC MODIFICATION IF IC>.77777*/
      312     9072                                      /* Locate the instruction in the op code table. */
      313     9073    4                  CALL DDB$OCTAL_TO_INSTR (T$->INSTR, OP$TAB) ALTRET(DELBUG);

   9073  1 000572   200022 631500                    EPPR1   OP$TAB,,AUTO
         1 000573   200031 451500                    STP1    OP$TAB+7,,AUTO
         1 000574   200006 236100                    LDQ     T$,,AUTO
         1 000575   200030 756100                    STQ     OP$TAB+6,,AUTO
         1 000576   200030 630500                    EPPR0   OP$TAB+6,,AUTO
         1 000577   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000600   000000 701000 xent               TSX1    DDB$OCTAL_TO_INSTR
         1 000601   000606 702000 1                  TSX2    DELBUG

      314     9074                                                /* Check for STBQ, STBA, STCQ, or STCA.
      315     9075                                                   Not really IC modification.           */
      316     9076    4                  IF NOT(OP$TAB.NIS.STCA)
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:40   

   9076  1 000602   200022 236100                    LDQ     OP$TAB,,AUTO
         1 000603   020000 316003                    CANQ    8192,DU
         1 000604   000626 601000 1                  TNZ     s:9088

      317     9077    5                  THEN DO;

      318     9078    6                       DO WHILE ('0'B);

   9078  1 000605   000614 710000 1                  TRA     s:9083

      319     9079    6   DELBUG:                                 /* Output message and continue */
      320     9080    6                            S_D.ERROR = 502; /* E@DELBUG */

   9080  1 000606   000766 235007       DELBUG       LDA     502,DL
         1 000607   000000 470400 xsym               LDP0    S_D$
         1 000610   000013 755100                    STA     11,,PR0

      321     9081    6                            CALL DDE$ERROR;

   9081  1 000611   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000612   000000 701000 xent               TSX1    DDE$ERROR
         1 000613   000000 011000                    NOP     0

      322     9082    6                          END;

      323     9083    5                       T$->INSTR.Y = T$->INSTR.Y+S_D.TIC;

   9083  1 000614   000000 470400 xsym               LDP0    S_D$
         1 000615   200006 471500                    LDP1    T$,,AUTO
         1 000616   100000 236100                    LDQ     0,,PR1
         1 000617   000022 772000                    QRL     18
         1 000620   000027 036100                    ADLQ    23,,PR0
         1 000621   000000 620006                    EAX0    0,QL
         1 000622   100000 740100                    STX0    0,,PR1

      324     9084    5                       T$->INSTR.TAG.TD = 0/*NONE_MOD*/;
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:41   

   9084  1 000623   200006 471500                    LDP1    T$,,AUTO
         1 000624   000002 236000 2                  LDQ     2
         1 000625   100000 356100                    ANSQ    0,,PR1

      325     9085    5                     END;

      326     9086    4                END;

      327     9087    3           END;

      328     9088    2        IF T$->TSX_INSTR.OP = BITBIN('70'O)/*T_TSX*/

   9088  1 000626   200006 470500                    LDP0    T$,,AUTO
         1 000627   000000 236100                    LDQ     0,,PR0
         1 000630   770000 376007                    ANQ     -4096,DL
         1 000631   700000 116007                    CMPQ    -32768,DL
         1 000632   000723 601000 1                  TNZ     s:9111

      329     9089    3        THEN DO;

      330     9090    3             IC = S_D.SAVEIC+1;

   9090  1 000633   000000 471400 xsym               LDP1    S_D$
         1 000634   100002 235100                    LDA     2,,PR1
         1 000635   000001 035007                    ADLA    1,DL
         1 000636   200017 755100                    STA     IC,,AUTO

      331     9091    3             IF T$ -> INSTR.TAG.TM = 0 AND

   9091  1 000637   000000 236100                    LDQ     0,,PR0
         1 000640   000060 316007                    CANQ    48,DL
         1 000641   000705 601000 1                  TNZ     s:9108
         1 000642   000010 316007                    CANQ    8,DL
         1 000643   000705 600000 1                  TZE     s:9108

      332     9092    3               T$ -> INSTR.TAG.TDD.I
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:42   
      333     9093    4             THEN DO;

      334     9094    4                  TEMP = T$ -> INSTR.TAG.TDD.XR;

   9094  1 000644   000000 236100                    LDQ     0,,PR0
         1 000645   000007 376007                    ANQ     7,DL
         1 000646   200012 756100                    STQ     TEMP,,AUTO

      335     9095    4                  TEMP = S_D.UREG$ -> REG$VALUES.X(TEMP);

   9095  1 000647   100045 473500                    LDP3    37,,PR1
         1 000650   200012 235100                    LDA     TEMP,,AUTO
         1 000651   000001 735000                    ALS     1
         1 000652   000100 101505                    MRL     fill='000'O
         1 000653   300000 000002                    ADSC9   0,A,PR3                  cn=0,n=2
         1 000654   200012 000004                    ADSC9   TEMP,,AUTO               cn=0,n=4

      336     9096    4                  IF T$ -> INSTR.AR = '1'B

   9096  1 000655   000000 236100                    LDQ     0,,PR0
         1 000656   000100 316007                    CANQ    64,DL
         1 000657   000675 600000 1                  TZE     s:9105

      337     9097    5                  THEN DO;

      338     9098    5                       IF (TEMP + T$ -> INSTR.YFIELD.YY > BITBIN('77777'O))

   9098  1 000660   000000 236100                    LDQ     0,,PR0
         1 000661   000003 736000                    QLS     3
         1 000662   000025 732000                    QRS     21
         1 000663   200012 036100                    ADLQ    TEMP,,AUTO
         1 000664   077777 116007                    CMPQ    32767,DL
         1 000665   000675 604400 1                  TMOZ    s:9105

      339     9099    6                       THEN DO;

      340     9100    6                            S_D.ERROR = 509; /* E@MUST_KILL_BRK */
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:43   

   9100  1 000666   000775 235007                    LDA     509,DL
         1 000667   100013 755100                    STA     11,,PR1

      341     9101    6                            CALL DDE$ERROR;

   9101  1 000670   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000671   000000 701000 xent               TSX1    DDE$ERROR
         1 000672   000000 011000                    NOP     0

      342     9102    6                            ALTRETURN;

   9102  1 000673   200026 221300                    LDX1  ! OP$TAB+4,,AUTO
         1 000674   000000 702211                    TSX2  ! 0,X1

      343     9103    6                          END;
      344     9104    5                     END;
      345     9105    4                  T$ -> INSTR.Y = T$ -> INSTR.Y + TEMP;

   9105  1 000675   000000 236100                    LDQ     0,,PR0
         1 000676   000022 772000                    QRL     18
         1 000677   200012 036100                    ADLQ    TEMP,,AUTO
         1 000700   000000 620006                    EAX0    0,QL
         1 000701   000000 740100                    STX0    0,,PR0

      346     9106    4                  T$ -> INSTR.TAG.TD = 0;

   9106  1 000702   200006 470500                    LDP0    T$,,AUTO
         1 000703   000002 236000 2                  LDQ     2
         1 000704   000000 356100                    ANSQ    0,,PR0

      347     9107    4                END;

      348     9108    3             S_D.UREG$->REG$VALUES.X(T$->TSX_INSTR.XR) = IC;

   9108  1 000705   100045 470500                    LDP0    37,,PR1
         1 000706   200006 473500                    LDP3    T$,,AUTO
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:44   
         1 000707   300000 236100                    LDQ     0,,PR3
         1 000710   000011 772000                    QRL     9
         1 000711   000007 376007                    ANQ     7,DL
         1 000712   000001 736000                    QLS     1
         1 000713   000106 101500                    MRL     fill='000'O
         1 000714   200017 000004                    ADSC9   IC,,AUTO                 cn=0,n=4
         1 000715   000000 000002                    ADSC9   0,Q,PR0                  cn=0,n=2

      349     9109    3             T$->INSTR.OP = BITBIN('1620'O)/*T_TRA*/;

   9109  1 000716   200006 470500                    LDP0    T$,,AUTO
         1 000717   000000 236100                    LDQ     0,,PR0
         1 000720   000003 376000 2                  ANQ     3
         1 000721   710000 276007                    ORQ     -28672,DL
         1 000722   000000 756100                    STQ     0,,PR0

      350     9110    3           END;

      351     9111    2        T$->INSTR.I = '1'B;                /* Ihibit the special location.  We

   9111  1 000723   200006 470500                    LDP0    T$,,AUTO
         1 000724   000200 236007                    LDQ     128,DL
         1 000725   000000 256100                    ORSQ    0,,PR0

      352     9112                                           don't want to break here, or let an event
      353     9113                                           get reported.  DDA$DELTA stops events if
      354     9114                                           the goic instruction is inhibited. */
      355     9115    2        IF T$->INSTR.TAG.TM = 2 AND S_D.ONCALLS ~= 0 AND S_D.DID_ATTACH

   9115  1 000726   200006 470500                    LDP0    T$,,AUTO
         1 000727   000000 236100                    LDQ     0,,PR0
         1 000730   000060 376007                    ANQ     48,DL
         1 000731   000040 116007                    CMPQ    32,DL
         1 000732   000747 601000 1                  TNZ     s:9123
         1 000733   000000 471400 xsym               LDP1    S_D$
         1 000734   104745 235100                    LDA     2533,,PR1
         1 000735   000747 600000 1                  TZE     s:9123
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:45   
         1 000736   104674 234100                    SZN     2492,,PR1
         1 000737   000747 605000 1                  TPL     s:9123
         1 000740   200014 235100                    LDA     LSE,,AUTO
         1 000741   000002 115007                    CMPA    2,DL
         1 000742   000745 600000 1                  TZE     s:9117
         1 000743   000037 115007                    CMPA    31,DL
         1 000744   000747 601000 1                  TNZ     s:9123

      356     9116    2          AND (LSE = 2 OR LSE= 31)    /* C_AT, C_OC */
      357     9117    2        THEN T$->INSTR.TAG.TM = 0;         /* If this instruction has

   9117  1 000745   000004 236000 2                  LDQ     4
         1 000746   000000 356100                    ANSQ    0,,PR0

      358     9118                                           a fault tag, and on calls mode is on, and
      359     9119                                           a breakpoint was hit with true conditions,
      360     9120                                           then we don't want to report an oncalls
      361     9121                                           this time.  Reset the fault in the special
      362     9122                                           location. */
      363     9123    2        CALL DDC$PUTONE(S_D.SL$,FLTINS) ALTRET(CALL_ERR);

   9123  1 000747   200007 630500                    EPPR0   FLTINS,,AUTO
         1 000750   200031 450500                    STP0    OP$TAB+7,,AUTO
         1 000751   000000 236000 xsym               LDQ     S_D$
         1 000752   000006 036003                    ADLQ    6,DU
         1 000753   200030 756100                    STQ     OP$TAB+6,,AUTO
         1 000754   200030 630500                    EPPR0   OP$TAB+6,,AUTO
         1 000755   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000756   000000 701000 xent               TSX1    DDC$PUTONE
         1 000757   001020 702000 1                  TSX2    CALL_ERR

      364     9124    2        S$ = ADDR(TRAICP1);

   9124  1 000760   200013 630500                    EPPR0   TRAICP1,,AUTO
         1 000761   200010 450500                    STP0    S$,,AUTO

      365     9125                       /* PLACE THE INSTRUCTION 'TRA IC+1' AFTER THE USER'S INSTR.  */
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:46   
      366     9126    2        S$->UBIN36 = 0;

   9126  1 000762   000000 450100                    STZ     0,,PR0

      367     9127    2        S$->INSTR.OP = BITBIN('1620'O)/*T_TRA*/;

   9127  1 000763   000000 236100                    LDQ     0,,PR0
         1 000764   000003 376000 2                  ANQ     3
         1 000765   710000 276007                    ORQ     -28672,DL
         1 000766   000000 756100                    STQ     0,,PR0

      368     9128    2        S$->INSTR.Y = S_D.SAVEIC+1;

   9128  1 000767   000000 471400 xsym               LDP1    S_D$
         1 000770   100002 720100                    LXL0    2,,PR1
         1 000771   000001 621010                    EAX1    1,X0
         1 000772   000000 741100                    STX1    0,,PR0

      369     9129    2        S$->INSTR.I = '1'B;

   9129  1 000773   000200 236007                    LDQ     128,DL
         1 000774   000000 256100                    ORSQ    0,,PR0

      370     9130    2        CALL DDC$PUTONE (S_D.SLP1$, TRAICP1) ALTRET(CALL_ERR);

   9130  1 000775   200013 633500                    EPPR3   TRAICP1,,AUTO
         1 000776   200031 453500                    STP3    OP$TAB+7,,AUTO
         1 000777   000000 236000 xsym               LDQ     S_D$
         1 001000   000007 036003                    ADLQ    7,DU
         1 001001   200030 756100                    STQ     OP$TAB+6,,AUTO
         1 001002   200030 630500                    EPPR0   OP$TAB+6,,AUTO
         1 001003   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 001004   000000 701000 xent               TSX1    DDC$PUTONE
         1 001005   001020 702000 1                  TSX2    CALL_ERR

      371     9131    2        CALL DDB$PLANT ALTRET(BAD_PUT);

PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:47   
   9131  1 001006   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001007   000000 701000 xent               TSX1    DDB$PLANT
         1 001010   001016 702000 1                  TSX2    BAD_PUT

      372     9132    2        S_D.GOIC = S_D.SL;

   9132  1 001011   000000 470400 xsym               LDP0    S_D$
         1 001012   000010 235100                    LDA     8,,PR0
         1 001013   000001 755100                    STA     1,,PR0

      373     9133    2        RETURN;

   9133  1 001014   200026 221300                    LDX1  ! OP$TAB+4,,AUTO
         1 001015   000001 702211                    TSX2  ! 1,X1

      374     9134    2   BAD_PUT: ALTRETURN;

   9134  1 001016   200026 221300       BAD_PUT      LDX1  ! OP$TAB+4,,AUTO
         1 001017   000000 702211                    TSX2  ! 0,X1

      375     9135    2   CALL_ERR: CALL DDE$ERROR;

   9135  1 001020   000002 631400 xsym  CALL_ERR     EPPR1   B_VECTNIL+2
         1 001021   000000 701000 xent               TSX1    DDE$ERROR
         1 001022   000000 011000                    NOP     0

      376     9136    2        ALTRETURN;

   9136  1 001023   200026 221300                    LDX1  ! OP$TAB+4,,AUTO
         1 001024   000000 702211                    TSX2  ! 0,X1

   9136  1 001025                       BAD_IC       null
      377     9137    2   END ATNEIS;
      378     9138    1   BAD_IC: ;
      379     9139    1        S_D.ERROR = 506;               /* E@BADIC - BAD IC VALUE.  WARNING */

   9139  1 001025   000772 235007                    LDA     506,DL
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:48   
         1 001026   000000 470400 xsym               LDP0    S_D$
         1 001027   000013 755100                    STA     11,,PR0

      380     9140    1        CALL DDE$ERROR;

   9140  1 001030   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001031   000000 701000 xent               TSX1    DDE$ERROR
         1 001032   000000 011000                    NOP     0

      381     9141    1        GOTO R_ETURN;

   9141  1 001033   001035 710000 1                  TRA     R_ETURN

   9139  1 001034                       BAD_PUT      null
      382     9142    1   BAD_PUT: ;
      383     9143                                           /* CANT PUT THIS ONE IN...EITHER MISSING PAGE
      384     9144                                           OR DESCRIPTOR STORAGE */
      385     9145    1        GOTO A_LTRETURN;

   9145  1 001034   001041 710000 1                  TRA     A_LTRETURN

      386     9146    1   R_ETURN:
      387     9147    1        S_D.GO_MODE = '0'B;

   9147  1 001035   000000 470400 xsym  R_ETURN      LDP0    S_D$
         1 001036   000020 450100                    STZ     16,,PR0

      388     9148    1        S_D.DID_ATTACH = '0'B;

   9148  1 001037   004674 450100                    STZ     2492,,PR0

      389     9149    1        RETURN;

   9149  1 001040   000000 702200 xent               TSX2  ! X66_ARET

      390     9150    1   A_LTRETURN:
      391     9151    1        S_D.GO_MODE = '0'B;
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:49   

   9151  1 001041   000000 470400 xsym  A_LTRETURN   LDP0    S_D$
         1 001042   000020 450100                    STZ     16,,PR0

      392     9152    1        S_D.DID_ATTACH = '0'B;

   9152  1 001043   004674 450100                    STZ     2492,,PR0

      393     9153    1        ALTRETURN;

   9153  1 001044   000000 702200 xent               TSX2  ! X66_AALT

(unnamed)
 Sect OctLoc
   2     000   777777 777737   000004 006000   777777 777760   777777 000377    ................
   2     004   777777 777717                                                    ....
      394     9154    1   END DDA$GO;

PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:50   
--  Include file information  --

   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   DD_ERR_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure DDA$GO.

   Procedure DDA$GO requires 549 words for executable code.
   Procedure DDA$GO requires 30 words of local(AUTO) storage.

    No errors detected in file DDA$GO.:E05TSI    .
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:51   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:52   
          MINI XREF LISTING

ALTRET_BIT
        69**DCL      9016>>IF
ATEIS
      9001**PROC     8970--CALL
ATNEIS
      9049**PROC     8973--CALL     8980--CALL
AT_FIRST.ORIG_INSTR
      1695**DCL      9004<>CALL
AT_FIRST.UNUSED
      1686**DCL      1687--REDEF    1691--REDEF
A_LTRETURN
      9151**LABEL    8985--GOTO     9145--GOTO
B$EDEF
      5228**DCL      8936--CALL
B$EDEF.CST
      5274**DCL      8926>>IF       8926>>IF       8926>>IF       8926>>IF       8926>>IF       8926>>IF
B$EDEF.LFLAGS.FAULTAGS
      5243**DCL      8934>>IF
B$EDEF.LFLAGS.SOURCE
      5233**DCL      8926>>IF       8926>>IF
B$EDEF.OU
      5245**DCL      5251--REDEF
B$JIT.CPFLAGS1.SLEAZE
      8670**DCL      8670--REDEF
B$JIT.ERR.MID
      8577**DCL      8577--REDEF
B$JIT.JRESPEAK
      8738**DCL      8739--REDEF
B$JIT.JUNK
      8776**DCL      8878>>IF
B$JIT.ORIGINATOR_PORT.FROM_CR
      8847**DCL      8847--REDEF    8848--REDEF
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:53   
B$JIT.PNR
      8751**DCL      8751--REDEF
B$JIT.TSLINE
      8845**DCL      8846--REDEF
B$JIT$
      8852**DCL      8571--IMP-PTR  8878>>IF
BAD_IC
      9136**LABEL    8925--CALLALT
BAD_PUT
      9139**LABEL    8943--CALLALT  8970--CALLALT
BAD_PUT IN PROCEDURE ATEIS
      9026**LABEL    9002--CALLALT  9014--CALLALT  9019--CALLALT
BAD_PUT IN PROCEDURE ATNEIS
      9134**LABEL    9131--CALLALT
CALL_ERR IN PROCEDURE ATEIS
      9027**LABEL    9004--CALLALT  9008--CALLALT
CALL_ERR IN PROCEDURE ATNEIS
      9135**LABEL    9123--CALLALT  9130--CALLALT
DDB$INTERP
      8859**DCL-ENT  8964--CALL
DDB$OCTAL_TO_INSTR
      8858**DCL-ENT  9073--CALL
DDB$PLANT
      8857**DCL-ENT  8943--CALL     9002--CALL     9131--CALL
DDB$PLANTONE
      8861**DCL-ENT  9014--CALL     9019--CALL
DDC$PUTONE
      8865**DCL-ENT  9004--CALL     9008--CALL     9123--CALL     9130--CALL
DDE$ERROR
      8860**DCL-ENT  8984--CALL     8989--CALL     9027--CALL     9053--CALL     9059--CALL     9068--CALL
      9081--CALL     9101--CALL     9135--CALL     9140--CALL
DDF$FIND_PEDEF
      8864**DCL-ENT  8925--CALL
DDS$EQCS#
      8863**DCL-ENT  8936--CALL
DDT$ITAGS
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:54   
      8862**DCL-ENT  8937--CALL
DELBUG IN PROCEDURE ATNEIS
      9080**LABEL    9073--CALLALT
DRL$
        56**DCL      9010<<ASSIGN   9014<>CALL     9019>>CALL
DXA$SSF
      8866**DCL-ENT  8872--CALL
DXB$CUSE
      8867**DCL-ENT  8914--CALL
DXB$UNODE
      8868**DCL-ENT  8915--CALL
D_SYMBOLS
      8853**DCL      8917>>IF
D_XDELTA
      8855**DCL      8877>>IF       8909>>IF       8912>>IF       9006>>IF
FATT$
        54**DCL      9003<<ASSIGN   9004>>CALL
FLTINS
        58**DCL      8953<<ASSIGN   8954>>ASSIGN   8956--ASSIGN   9008<>CALL     9123<>CALL
FPT$DRTN.V.IR#
      8551**DCL      8551--REDEF
FPT$DRTN.V.KLDELTA#
      8556**DCL      8878>>IF
FPT$DRTN.V.KPDELTA#
      8556**DCL      8878>>IF
FXCM.CDF
      1675**DCL      9013>>ASSIGN
FXCM.CMD
      1667**DCL      8947>>ASSIGN
FXCM.FAI
      1677**DCL      9003>>ASSIGN
GO.CMD
      1647**DCL      8892>>IF
GO.GOPOS
      1651**DCL      8892>>IF
GO.POSITION
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:55   
      1661**DCL      8895>>ASSIGN
IC
        66**DCL      9090<<ASSIGN   9108>>ASSIGN
IND$VALUES.MIR
      1773**DCL      8913<<ASSIGN
INSTR
      1710**DCL      9073<>CALL
INSTR.AR
      1722**DCL      9064>>IF       9096>>IF
INSTR.I
      1721**DCL      9007<<ASSIGN   9111<<ASSIGN   9129<<ASSIGN
INSTR.OP
      1720**DCL      9109<<ASSIGN   9127<<ASSIGN
INSTR.TAG.TD
      1726**DCL      1727--REDEF    9062>>IF       9084<<ASSIGN   9106<<ASSIGN
INSTR.TAG.TDD.I
      1728**DCL      9091>>IF
INSTR.TAG.TDD.XR
      1729**DCL      9094>>ASSIGN
INSTR.TAG.TM
      1725**DCL      9056>>IF       9056>>IF       9091>>IF       9115>>IF       9117<<ASSIGN
INSTR.TAGG
      1723**DCL      1724--REDEF    8979<<ASSIGN
INSTR.Y
      1711**DCL      1712--REDEF    1715--REDEF    9083<<ASSIGN   9083>>ASSIGN   9105<<ASSIGN   9105>>ASSIGN
      9128<<ASSIGN
INSTR.YFIELD.YY
      1714**DCL      9064>>IF       9098>>IF
JUNK
        60**DCL      8909<<ASSIGN
LENGTH
        65**DCL      8964<>CALL     8967>>IF       9010>>ASSIGN   9013>>ASSIGN
LSE
        63**DCL      8947<<ASSIGN   8948>>IF       8948>>IF       8948>>IF       8948>>IF       8948>>IF
      8965>>IF       8965>>IF       8977>>IF       8977>>IF       9115>>IF       9115>>IF
NOGO
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:56   
      8985**LABEL    8872--CALLALT  8973--CALLALT  8980--CALLALT  8990--GOTO
NO_SCHEMA
      8937**LABEL    8917--GOTO     8936--CALLALT  8937--CALLALT  8951--GOTO
OP$TAB
      1732**DCL      9073<>CALL
OP$TAB.EIS
      1734**DCL      1742--REDEF
OP$TAB.NIS.STCA
      1745**DCL      9076>>IF
PRIM$
        67**DCL      8925<>CALL     8926>>IF       8926>>IF       8926>>IF       8926>>IF       8926>>IF
      8926>>IF       8926>>IF       8926>>IF       8934>>IF       8936>>CALL
REG$VALUES.A
      1779**DCL      1780--REDEF
REG$VALUES.Q
      1783**DCL      1784--REDEF
REG$VALUES.X
      1778**DCL      9095>>ASSIGN   9108<<ASSIGN
R_ETURN
      9147**LABEL    8884--GOTO     8945--GOTO     8975--GOTO     8981--GOTO     9141--GOTO
S$
        59**DCL      9124<<ASSIGN   9126>>ASSIGN   9127>>ASSIGN   9128>>ASSIGN   9129>>ASSIGN
SAVEIC
        68**DCL      8924<<ASSIGN   8925<>CALL
SAVEINS$
        55**DCL      9011<<ASSIGN   9014<>CALL
S_D.ACCESS
      7178**DCL      8907<<ASSIGN   8910<<ASSIGN   8987<<ASSIGN
S_D.CURRENT_CHANNEL
      8091**DCL      8093--REDEF
S_D.DEBUGA
      7243**DCL      7245--REDEF
S_D.DID_ATTACH
      7677**DCL      9115>>IF       9148<<ASSIGN   9152<<ASSIGN
S_D.DO$
      7194**DCL      8891>>IF       8892>>IF       8892>>IF       8895>>ASSIGN   8911<<ASSIGN
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:57   
S_D.DRTN$
      7696**DCL      8878>>IF       8878>>IF
S_D.E$IS.ACTIVE
      7656**DCL      9015<<ASSIGN
S_D.E$IS.C.JUNK
      7660**DCL      9018<<ASSIGN   9019--CALL     9022<<ASSIGN
S_D.E$IS.LOC
      7657**DCL      9013<<ASSIGN
S_D.E$IS.SAVED
      7658**DCL      9011--ASSIGN
S_D.EDEF$
      7587**DCL      8936>>CALL
S_D.EIS
      8201**DCL      8230--REDEF
S_D.ERROR
      7172**DCL      8983<<ASSIGN   8988<<ASSIGN   9052<<ASSIGN   9058<<ASSIGN   9067<<ASSIGN   9080<<ASSIGN
      9100<<ASSIGN   9139<<ASSIGN
S_D.FAULTCMD$
      7158**DCL      8896<<ASSIGN   8941>>IF       8947>>ASSIGN   8950<<ASSIGN   9003>>ASSIGN   9013>>ASSIGN
S_D.FAULTINS
      8112**DCL      8954<<ASSIGN
S_D.FAULTINS$
      7156**DCL      8953>>ASSIGN   9004<>CALL     9008<>CALL     9010>>ASSIGN   9016>>IF
S_D.GOIC
      7152**DCL      8883<<ASSIGN   8944<<ASSIGN   9024<<ASSIGN   9132<<ASSIGN
S_D.GO_MODE
      7182**DCL      8870<<ASSIGN   9147<<ASSIGN   9151<<ASSIGN
S_D.HOST_MESSAGE_BUF_REMOTE
      8134**DCL      8135--REDEF    8149--REDEF
S_D.IND$
      7233**DCL      8913>>ASSIGN
S_D.ISBASE
      7421**DCL      8895>>ASSIGN   8967>>IF
S_D.IXFIX
      7176**DCL      9014<>CALL     9019<>CALL
S_D.JDE
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:58   
      7748**DCL      7749--REDEF
S_D.L$.VALUE
      7301**DCL      7307--REDEF    7315--REDEF    7318--REDEF    7321--REDEF    7324--REDEF
S_D.L$.VALUE.L
      7302**DCL      7303--REDEF    7304--REDEF
S_D.L6_MESSAGE_BUF
      8155**DCL      8157--REDEF
S_D.ONCALLS
      7773**DCL      9115>>IF
S_D.OUTPUT
      8121**DCL      8123--REDEF
S_D.REMOTE_MSG.FNCC
      8140**DCL      8141--REDEF
S_D.REMOTE_MSG.STXC
      8136**DCL      8137--REDEF
S_D.REMOTE_MSG.SUBFNCC
      8144**DCL      8145--REDEF
S_D.REM_ACCESS
      7186**DCL      8908<<REMEMBR
S_D.S$TEP.ACTIVE
      8043**DCL      9012>>IF
S_D.SAVEIC
      7154**DCL      8883>>ASSIGN   8895<<ASSIGN   8909>>ASSIGN   8924>>ASSIGN   8944>>ASSIGN   9024>>ASSIGN
      9090>>ASSIGN   9128>>ASSIGN
S_D.SL
      7166**DCL      9132>>ASSIGN
S_D.SL$
      7162**DCL      9123<>CALL
S_D.SLP1$
      7164**DCL      9130<>CALL
S_D.SV
      7200**DCL      7221--REDEF
S_D.TIC
      7190**DCL      9064>>IF       9083>>ASSIGN
S_D.TR$INFO.ACTIVE
      7627**DCL      8921>>IF
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:59   
S_D.TR$INFO.TYPE
      7635**DCL      8921>>IF
S_D.TR$INFO.X
      7631**DCL      8921>>IF
S_D.UNODE.CURRENT
      7795**DCL      8915<>CALL
S_D.UREG$
      7231**DCL      9095>>ASSIGN   9108>>ASSIGN
S_D.VARCOM$
      7612**DCL      9003>>ASSIGN
S_D$
      8452**DCL      7148--IMP-PTR  8870>>ASSIGN   8878>>IF       8878>>IF       8883>>ASSIGN   8883>>ASSIGN
      8891>>IF       8892>>IF       8892>>IF       8895>>ASSIGN   8895>>ASSIGN   8895>>ASSIGN   8896>>ASSIGN
      8907>>ASSIGN   8908>>REMEMBR  8909>>ASSIGN   8910>>ASSIGN   8911>>ASSIGN   8913>>ASSIGN   8915>>CALL
      8921>>IF       8921>>IF       8921>>IF       8924>>ASSIGN   8936>>CALL     8941>>IF       8944>>ASSIGN
      8944>>ASSIGN   8947>>ASSIGN   8950>>ASSIGN   8953>>ASSIGN   8954>>ASSIGN   8967>>IF       8983>>ASSIGN
      8987>>ASSIGN   8988>>ASSIGN   9003>>ASSIGN   9003>>ASSIGN   9004>>CALL     9008>>CALL     9010>>ASSIGN
      9011>>ASSIGN   9012>>IF       9013>>ASSIGN   9013>>ASSIGN   9014>>CALL     9015>>ASSIGN   9016>>IF
      9018>>ASSIGN   9019>>CALL     9019>>CALL     9022>>ASSIGN   9024>>ASSIGN   9024>>ASSIGN   9052>>ASSIGN
      9058>>ASSIGN   9064>>IF       9067>>ASSIGN   9080>>ASSIGN   9083>>ASSIGN   9090>>ASSIGN   9095>>ASSIGN
      9100>>ASSIGN   9108>>ASSIGN   9115>>IF       9115>>IF       9123>>CALL     9128>>ASSIGN   9130>>CALL
      9132>>ASSIGN   9132>>ASSIGN   9139>>ASSIGN   9147>>ASSIGN   9148>>ASSIGN   9151>>ASSIGN   9152>>ASSIGN
S_FAULT
      8983**LABEL    8908--REMEMBR
T$
        57**DCL      8956<<ASSIGN   8964<>CALL     8979>>ASSIGN   9007>>ASSIGN   9056>>IF       9056>>IF
      9062>>IF       9064>>IF       9064>>IF       9073>>CALL     9083>>ASSIGN   9083>>ASSIGN   9084>>ASSIGN
      9088>>IF       9091>>IF       9091>>IF       9094>>ASSIGN   9096>>IF       9098>>IF       9105>>ASSIGN
      9105>>ASSIGN   9106>>ASSIGN   9108>>ASSIGN   9109>>ASSIGN   9111>>ASSIGN   9115>>IF       9117>>ASSIGN
TEMP
        61**DCL      9094<<ASSIGN   9095<<ASSIGN   9095>>ASSIGN   9098>>IF       9105>>ASSIGN
TRAICP1
        62**DCL      9124--ASSIGN   9130<>CALL
TSX_INSTR.OP
      1792**DCL      9088>>IF
TSX_INSTR.XR
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:60   
      1793**DCL      9108>>ASSIGN
TYPE
        64**DCL      8964<>CALL     8967>>IF       8967>>IF       9016>>IF       9050>>IF
UBIN36
        70**DCL      8909>>ASSIGN   8953>>ASSIGN   9126<<ASSIGN
UIS$
      8854**DCL      8909>>ASSIGN
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:61   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:62   
              MINI UREF LISTING

DDA$GO      51**PROC
M$ACCT    8483**DCL-ENT
M$ACTIVATE    8486**DCL-ENT
M$ALIB    8479**DCL-ENT
M$ASUSER    8481**DCL-ENT
M$ATTACH    8488**DCL-ENT
M$BADPP    8506**DCL-ENT
M$CGCTL    8487**DCL-ENT
M$CGINFO    8487**DCL-ENT
M$CHECK    8468**DCL-ENT
M$CHGUNIT    8526**DCL-ENT
M$CLOSE    8466**DCL-ENT
M$CLRSTK    8524**DCL-ENT
M$CMDVAR    8535**DCL-ENT
M$CONFIG    8496**DCL-ENT
M$CORRES    8471**DCL-ENT
M$CPEXIT    8480**DCL-ENT
M$CVM    8504**DCL-ENT
M$CVOL    8469**DCL-ENT
M$DCLFLD    8496**DCL-ENT
M$DEACTIVATE    8486**DCL-ENT
M$DELREC    8468**DCL-ENT
M$DEQ    8533**DCL-ENT
M$DETACH    8488**DCL-ENT
M$DEVICE    8470**DCL-ENT
M$DISPLAY    8533**DCL-ENT
M$DISPRES    8473**DCL-ENT
M$DLIB    8479**DCL-ENT
M$DRIBBLE    8496**DCL-ENT
M$DRTN    8524**DCL-ENT
M$DSUSER    8481**DCL-ENT
M$ENQ    8532**DCL-ENT
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:63   
M$EOM    8491**DCL-ENT
M$ERASE    8497**DCL-ENT
M$ERR    8478**DCL-ENT
M$ERRMSG    8529**DCL-ENT
M$EVENT    8521**DCL-ENT
M$EXHUME    8530**DCL-ENT
M$EXIT    8478**DCL-ENT
M$EXTEND    8470**DCL-ENT
M$FDP    8502**DCL-ENT
M$FDS    8501**DCL-ENT
M$FEBOOT    8494**DCL-ENT
M$FECTL    8495**DCL-ENT
M$FEDUMP    8494**DCL-ENT
M$FID    8529**DCL-ENT
M$FINDPROC    8483**DCL-ENT
M$FSUSER    8481**DCL-ENT
M$FVP    8503**DCL-ENT
M$FWCG    8487**DCL-ENT
M$GBPL    8507**DCL-ENT
M$GDDL    8503**DCL-ENT
M$GDP    8502**DCL-ENT
M$GDS    8501**DCL-ENT
M$GETDCB    8472**DCL-ENT
M$GETMOUSE    8512**DCL-ENT
M$GETPM    8513**DCL-ENT
M$GJOB    8531**DCL-ENT
M$GLINEATTR    8491**DCL-ENT
M$GOODPP    8506**DCL-ENT
M$GPLATEN    8499**DCL-ENT
M$GPROMPT    8498**DCL-ENT
M$GTRMATTR    8492**DCL-ENT
M$GTRMCTL    8490**DCL-ENT
M$GTRMTAB    8493**DCL-ENT
M$GVP    8502**DCL-ENT
M$HELP    8529**DCL-ENT
M$INT    8521**DCL-ENT
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:64   
M$INTRTN    8482**DCL-ENT
M$IOQ    8517**DCL-ENT
M$JOBSTATS    8531**DCL-ENT
M$KEYIN    8471**DCL-ENT
M$LDEV    8466**DCL-ENT
M$LDTRC    8479**DCL-ENT
M$LIMIT    8472**DCL-ENT
M$LINES    8471**DCL-ENT
M$LINK    8478**DCL-ENT
M$MADMUCK    8474**DCL-ENT
M$MAKUSER    8505**DCL-ENT
M$MBS    8473**DCL-ENT
M$MDFFLD    8497**DCL-ENT
M$MERC    8522**DCL-ENT
M$MERCS    8523**DCL-ENT
M$MIRROR    8517**DCL-ENT
M$MONINFO    8534**DCL-ENT
M$MPL    8507**DCL-ENT
M$NODEINFO    8498**DCL-ENT
M$NXTUSR    8532**DCL-ENT
M$OCMSG    8530**DCL-ENT
M$OLAY    8478**DCL-ENT
M$OPEN    8466**DCL-ENT
M$PAS    8507**DCL-ENT
M$PATHCON    8530**DCL-ENT
M$PDS    8501**DCL-ENT
M$PFIL    8468**DCL-ENT
M$PLATEN    8492**DCL-ENT
M$PRECORD    8470**DCL-ENT
M$PROCNAME    8483**DCL-ENT
M$PROFILE    8494**DCL-ENT
M$PROMPT    8490**DCL-ENT
M$RACST    8474**DCL-ENT
M$RDSYSLOG    8515**DCL-ENT
M$READ    8467**DCL-ENT
M$RELDCB    8472**DCL-ENT
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:65   
M$RELRES    8473**DCL-ENT
M$RELSTARF    8475**DCL-ENT
M$REM    8475**DCL-ENT
M$RENV    8522**DCL-ENT
M$REQUIRE    8474**DCL-ENT
M$RETRY    8523**DCL-ENT
M$RETRYS    8523**DCL-ENT
M$REW    8469**DCL-ENT
M$RLSFLD    8497**DCL-ENT
M$RPRIV    8525**DCL-ENT
M$RSPP    8504**DCL-ENT
M$RSWITCH    8526**DCL-ENT
M$RUE    8532**DCL-ENT
M$SAD    8505**DCL-ENT
M$SAVE    8481**DCL-ENT
M$SCON    8482**DCL-ENT
M$SCREECH    8480**DCL-ENT
M$SENV    8522**DCL-ENT
M$SETFMA    8466**DCL-ENT
M$SETFP    8495**DCL-ENT
M$SINPUT    8493**DCL-ENT
M$SLCFLD    8498**DCL-ENT
M$SMOUSE    8512**DCL-ENT
M$SMPRT    8504**DCL-ENT
M$SPRIV    8525**DCL-ENT
M$SSC    8505**DCL-ENT
M$SSWITCH    8525**DCL-ENT
M$STATE    8534**DCL-ENT
M$STD    8506**DCL-ENT
M$STIMER    8520**DCL-ENT
M$STLPP    8503**DCL-ENT
M$STRAP    8520**DCL-ENT
M$STRMATTR    8492**DCL-ENT
M$STRMCTL    8490**DCL-ENT
M$STRMTAB    8493**DCL-ENT
M$SYMBIO    8531**DCL-ENT
PL6.E3A0      #001=DDA$GO File=DDA$GO.:E05TSI                                    TUE 07/29/97 13:28 Page:66   
M$SYSCON    8517**DCL-ENT
M$SYSID    8535**DCL-ENT
M$TDCLOSE    8516**DCL-ENT
M$TDIO    8516**DCL-ENT
M$TDOPEN    8515**DCL-ENT
M$TDREQCPU    8516**DCL-ENT
M$TEMPWROC    8510**DCL-ENT
M$TIME    8533**DCL-ENT
M$TRAP    8520**DCL-ENT
M$TRMISC    8495**DCL-ENT
M$TRMPRG    8491**DCL-ENT
M$TRTN    8524**DCL-ENT
M$TRUNC    8467**DCL-ENT
M$TTIMER    8520**DCL-ENT
M$UC    8490**DCL
M$UMPL    8507**DCL-ENT
M$UNFID    8529**DCL-ENT
M$UNLATCH    8486**DCL-ENT
M$UNSHARE    8483**DCL-ENT
M$USRFIELD    8526**DCL-ENT
M$VIRTUAL    8501**DCL-ENT
M$WAIT    8524**DCL-ENT
M$WEOF    8469**DCL-ENT
M$WRITE    8467**DCL-ENT
M$WRSYSLOG    8515**DCL-ENT
M$XCON    8521**DCL-ENT
M$XCONRTN    8482**DCL-ENT
M$XEQTIME    8534**DCL-ENT
M$XFLUSH    8475**DCL-ENT
M$XMOUSE    8512**DCL-ENT
M$XXX    8478**DCL-ENT
M$YC    8480**DCL-ENT
