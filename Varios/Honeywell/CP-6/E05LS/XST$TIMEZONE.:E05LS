VERSION E05

PL6.E3A0      #001=XST$TIMEZONE File=XST$TIMEZONE.:E05TSI                        WED 07/30/97 09:10 Page:1    
        1        1        /*M*    XST$TIMEZONE    Manipulate timezone names, acronyms, offsets    */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=4,IND=4,DCI=8,DTI=0,ENI=4,ECI=4,CSI=4,DIN=4,SDI=0 */
        8        8        /*P*    NAME:   XST$TIMEZONE
        9        9                PURPOSE:  This module contains routines for the manipulation of
       10       10                        timezone names and offsets.
       11       11                DESCRIPTION:  See documentation for each routine.
       12       12        */
       13       13        /*F*    NAME:   XST$TIMEZONE
       14       14                PURPOSE:  To convert a timezone name to a UTC offset.
       15       15                DESCRIPTION:  This routine allows conversion of the 'name' of a
       16       16                        timezone, in any of three formats, into an offset from UTC
       17       17                        and an acronym.
       18       18
       19       19                        The three formats supported for input name are...
       20       20                        'offset' format: an optional plus or minus sign followed by
       21       21                                up to four digits representing HHMM,
       22       22                        'military' format: a single uppercase alphabetic character
       23       23                                indicating a particular timezone,
       24       24                        'common' format: a three-character acronym.
       25       25        */
       26       26        /*D*    NAME:   XST$TIMEZONE
       27       27                CALL:   CALL XST$TIMEZONE( NODE$, OFFSET, ACRONYM) ALTRET( LABEL);
       28       28                INPUT:  NODE$ - pointer to parse node identifying input 'name'
       29       29                OUTPUT: OFFSET - signed offset from UTC in centiseconds
       30       30                        ACRONYM - three-character timezone acronym, or blanks
       31       31                ERRORS: The ALTRETURN is taken for any of the following reasons:
       32       32                        'offset' format: for HHMM input, HHMM>1200 or MM>59, or
       33       33                                char preceding HHMM, if present, is not '+' or '-'.
       34       34                        'military' format: the input character is not a valid military
       35       35                                timezone designation.
       36       36                        'common' format: none, since the parser would have already
       37       37                                caught any problem with this.
PL6.E3A0      #001=XST$TIMEZONE File=XST$TIMEZONE.:E05TSI                        WED 07/30/97 09:10 Page:2    
       38       38                        ACRONYM is always set to blanks if the input is in offset or
       39       39                        military format.
       40       40        */
       41       41        XST$TIMEZONE: PROC( NODE$, OFFSET, ACRONYM) ALTRET;
       42       42        %INCLUDE XST_NODES_E;
       43       53        %INCLUDE XUD_UTS_M;
       44      135            %XUD_UTS_EQU;
       45      146        %INCLUDE XU_MACRO_C;
       46     3252            %PARSE$OUT( NAME=OUT, STCLASS=BASED);
       47     3297            %PARSE$SYM( NAME=SYM, STCLASS=BASED);
       48     3335
       49     3336    1       DCL ACRONYM CHAR(3);
       50     3337    1       DCL ACRONYMS(0:9) CHAR(3) CONSTANT INIT( /* must match XST_NODES_D ordering */
       51     3338    1           'UTC', 'GMT', 'EST', 'EDT', 'CST', 'CDT', 'MST', 'MDT', 'PST', 'PDT');
       52     3339    1       DCL CMN2UTS(0:9) SBIN CONSTANT INIT( /* must match ACRONYMS ordering */
       53     3340    1           0, 0, -5, -4, -6, -5, -7, -6, -8, -7);
       54     3341    1       DCL NODE$ PTR;
       55     3342    1       DCL OFFSET SBIN;
       56     3343    1       DCL TEMP SBIN;
       57     3344
       58     3345    1       OFFSET = 0;
       59     3346    1       ACRONYM = '   ';
       60     3347    2       DO CASE( NODE$->SYM.CODE);
       61     3348    2           CASE( %UTOFFSET);
       62     3349    2               CALL CHARBIN( TEMP, NODE$->OUT.SUBLK$(1)->SYM.TEXT);
       63     3350    2               IF TEMP > 1200 OR MOD( TEMP, 100) > 59 THEN
       64     3351    2                   GOTO OOPS;
       65     3352    2               OFFSET = ((TEMP/100)*%UTS_CSEC_HOUR#)+MOD(TEMP,100)*%UTS_CSEC_MIN#;
       66     3353    2               IF NODE$->OUT.SUBLK$(0)->SYM.COUNT > 0 THEN
       67     3354    3               DO SELECT( SUBSTR( NODE$->OUT.SUBLK$(0)->SYM.TEXT, 0, 1));
       68     3355    3                   SELECT( '-');
       69     3356    3                   OFFSET = -OFFSET;
       70     3357    3                   SELECT( '+');
       71     3358    3                   SELECT( ELSE);
       72     3359    3               GOTO OOPS;
       73     3360    3                   END;
       74     3361    2           CASE( %MILITARY);
PL6.E3A0      #001=XST$TIMEZONE File=XST$TIMEZONE.:E05TSI                        WED 07/30/97 09:10 Page:3    
       75     3362    2               CALL INDEX( TEMP,
       76     3363    2                 SUBSTR( NODE$->OUT.SUBLK$(0)->SYM.TEXT, 0, 1),
       77     3364    2                 'MLKIHGFEDCBAZNOPQRSTUVWXY') ALTRET( OOPS);
       78     3365    2               OFFSET = (TEMP-12)*%UTS_CSEC_HOUR#;
       79     3366    2           CASE( %COMMON);
       80     3367    2               TEMP = NODE$->OUT.SUBLK$(0)->SYM.CODE;
       81     3368    2               OFFSET = CMN2UTS( TEMP)*%UTS_CSEC_HOUR#;
       82     3369    2               ACRONYM = ACRONYMS( TEMP);
       83     3370    2           CASE( ELSE);
       84     3371    2   OOPS:
       85     3372    2               ALTRETURN;
       86     3373    2           END;
       87     3374    1       RETURN;
       88     3375
       89     3376    1   END XST$TIMEZONE;

PL6.E3A0      #001=XST$TIMEZONE File=XST$TIMEZONE.:E05TSI                        WED 07/30/97 09:10 Page:4    
--  Include file information  --

   XU_MACRO_C.:E05TOU  is referenced.
   XUD_UTS_M.:E05TOU  is referenced.
   XST_NODES_E.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure XST$TIMEZONE.

   Procedure XST$TIMEZONE requires 99 words for executable code.
   Procedure XST$TIMEZONE requires 10 words of local(AUTO) storage.

    No errors detected in file XST$TIMEZONE.:E05TSI    .

PL6.E3A0      #001=XST$TIMEZONE File=XST$TIMEZONE.:E05TSI                        WED 07/30/97 09:10 Page:5    

 Object Unit name= XST$TIMEZONE                               File name= XST$TIMEZONE.:E05TOU
 UTS= JUL 30 '97 09:10:59.84 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS     26     32  XST$TIMEZONE
    1   Proc  even  none    99    143  XST$TIMEZONE
    2  RoData even  none     2      2  XST$TIMEZONE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        3  XST$TIMEZONE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_3
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #001=XST$TIMEZONE File=XST$TIMEZONE.:E05TSI                        WED 07/30/97 09:10 Page:6    


        1        1        /*M*    XST$TIMEZONE    Manipulate timezone names, acronyms, offsets    */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=4,IND=4,DCI=8,DTI=0,ENI=4,ECI=4,CSI=4,DIN=4,SDI=0 */
        8        8        /*P*    NAME:   XST$TIMEZONE
        9        9                PURPOSE:  This module contains routines for the manipulation of
       10       10                        timezone names and offsets.
       11       11                DESCRIPTION:  See documentation for each routine.
       12       12        */
       13       13        /*F*    NAME:   XST$TIMEZONE
       14       14                PURPOSE:  To convert a timezone name to a UTC offset.
       15       15                DESCRIPTION:  This routine allows conversion of the 'name' of a
       16       16                        timezone, in any of three formats, into an offset from UTC
       17       17                        and an acronym.
       18       18
       19       19                        The three formats supported for input name are...
       20       20                        'offset' format: an optional plus or minus sign followed by
       21       21                                up to four digits representing HHMM,
       22       22                        'military' format: a single uppercase alphabetic character
       23       23                                indicating a particular timezone,
       24       24                        'common' format: a three-character acronym.
       25       25        */
       26       26        /*D*    NAME:   XST$TIMEZONE
       27       27                CALL:   CALL XST$TIMEZONE( NODE$, OFFSET, ACRONYM) ALTRET( LABEL);
       28       28                INPUT:  NODE$ - pointer to parse node identifying input 'name'
       29       29                OUTPUT: OFFSET - signed offset from UTC in centiseconds
       30       30                        ACRONYM - three-character timezone acronym, or blanks
       31       31                ERRORS: The ALTRETURN is taken for any of the following reasons:
       32       32                        'offset' format: for HHMM input, HHMM>1200 or MM>59, or
       33       33                                char preceding HHMM, if present, is not '+' or '-'.
       34       34                        'military' format: the input character is not a valid military
       35       35                                timezone designation.
       36       36                        'common' format: none, since the parser would have already
PL6.E3A0      #001=XST$TIMEZONE File=XST$TIMEZONE.:E05TSI                        WED 07/30/97 09:10 Page:7    
       37       37                                caught any problem with this.
       38       38                        ACRONYM is always set to blanks if the input is in offset or
       39       39                        military format.
       40       40        */
       41       41        XST$TIMEZONE: PROC( NODE$, OFFSET, ACRONYM) ALTRET;

     41  1 000000   000000 700200 xent  XST$TIMEZONE TSX0  ! X66_AUTO_3
         1 000001   000012 000003                    ZERO    10,3

       42       42        %INCLUDE XST_NODES_E;
       43       53        %INCLUDE XUD_UTS_M;
       44      135            %XUD_UTS_EQU;
       45      146        %INCLUDE XU_MACRO_C;
       46     3252            %PARSE$OUT( NAME=OUT, STCLASS=BASED);
       47     3297            %PARSE$SYM( NAME=SYM, STCLASS=BASED);
       48     3335
       49     3336    1       DCL ACRONYM CHAR(3);
       50     3337    1       DCL ACRONYMS(0:9) CHAR(3) CONSTANT INIT( /* must match XST_NODES_D ordering */
       51     3338    1           'UTC', 'GMT', 'EST', 'EDT', 'CST', 'CDT', 'MST', 'MDT', 'PST', 'PDT');
       52     3339    1       DCL CMN2UTS(0:9) SBIN CONSTANT INIT( /* must match ACRONYMS ordering */
       53     3340    1           0, 0, -5, -4, -6, -5, -7, -6, -8, -7);
       54     3341    1       DCL NODE$ PTR;
       55     3342    1       DCL OFFSET SBIN;
       56     3343    1       DCL TEMP SBIN;
       57     3344
       58     3345    1       OFFSET = 0;

   3345  1 000002   200004 470500                    LDP0    @OFFSET,,AUTO
         1 000003   000000 450100                    STZ     0,,PR0

       59     3346    1       ACRONYM = '   ';

   3346  1 000004   200005 471500                    LDP1    @ACRONYM,,AUTO
         1 000005   040100 100400                    MLR     fill='040'O
         1 000006   000022 000003 0                  ADSC9   CMN2UTS+10               cn=0,n=3
         1 000007   100000 000003                    ADSC9   0,,PR1                   cn=0,n=3

PL6.E3A0      #001=XST$TIMEZONE File=XST$TIMEZONE.:E05TSI                        WED 07/30/97 09:10 Page:8    
       60     3347    2       DO CASE( NODE$->SYM.CODE);

   3347  1 000010   200003 473500                    LDP3    @NODE$,,AUTO
         1 000011   300000 474500                    LDP4    0,,PR3
         1 000012   400000 720100                    LXL0    0,,PR4
         1 000013   000004 100003                    CMPX0   4,DU
         1 000014   000016 602010 1                  TNC     s:3347+6,X0
         1 000015   000141 710000 1                  TRA     OOPS
         1 000016   000141 710000 1                  TRA     OOPS
         1 000017   000022 710000 1                  TRA     s:3349
         1 000020   000107 710000 1                  TRA     s:3362
         1 000021   000124 710000 1                  TRA     s:3367

       61     3348    2           CASE( %UTOFFSET);

       62     3349    2               CALL CHARBIN( TEMP, NODE$->OUT.SUBLK$(1)->SYM.TEXT);

   3349  1 000022   400004 475500                    LDP5    4,,PR4
         1 000023   500004 236100                    LDQ     4,,PR5
         1 000024   000033 772000                    QRL     27
         1 000025   000000 621006                    EAX1    0,QL
         1 000026   000100 305540                    DTB
         1 000027   500004 230011                    NDSC9   4,,PR5                   cn=1,s=nosgn,sf=0,n=*X1
         1 000030   200006 000004                    NDSC9   TEMP,,AUTO               cn=0,s=lsgnf,sf=0,n=4

       63     3350    2               IF TEMP > 1200 OR MOD( TEMP, 100) > 59 THEN

   3350  1 000031   200006 235100                    LDA     TEMP,,AUTO
         1 000032   002260 115007                    CMPA    1200,DL
         1 000033   000141 605400 1                  TPNZ    OOPS
         1 000034   200006 236100                    LDQ     TEMP,,AUTO
         1 000035   000144 506007                    DIV     100,DL
         1 000036   000044 733000                    LRS     36
         1 000037   000073 116007                    CMPQ    59,DL
         1 000040   000141 605400 1                  TPNZ    OOPS

       64     3351    2                   GOTO OOPS;
PL6.E3A0      #001=XST$TIMEZONE File=XST$TIMEZONE.:E05TSI                        WED 07/30/97 09:10 Page:9    
       65     3352    2               OFFSET = ((TEMP/100)*%UTS_CSEC_HOUR#)+MOD(TEMP,100)*%UTS_CSEC_MIN#;

   3352  1 000041   200006 236100                    LDQ     TEMP,,AUTO
         1 000042   000144 506007                    DIV     100,DL
         1 000043   200010 756100                    STQ     TEMP+2,,AUTO
         1 000044   200006 236100                    LDQ     TEMP,,AUTO
         1 000045   000144 506007                    DIV     100,DL
         1 000046   200011 755100                    STA     TEMP+3,,AUTO
         1 000047   200010 236100                    LDQ     TEMP+2,,AUTO
         1 000050   000074 402007                    MPY     60,DL
         1 000051   200011 036100                    ADLQ    TEMP+3,,AUTO
         1 000052   013560 402007                    MPY     6000,DL
         1 000053   000000 756100                    STQ     0,,PR0

       66     3353    2               IF NODE$->OUT.SUBLK$(0)->SYM.COUNT > 0 THEN

   3353  1 000054   300000 474500                    LDP4    0,,PR3
         1 000055   400003 475500                    LDP5    3,,PR4
         1 000056   500004 236100                    LDQ     4,,PR5
         1 000057   777000 316003                    CANQ    -512,DU
         1 000060   000142 600000 1                  TZE     s:3374

       67     3354    3               DO SELECT( SUBSTR( NODE$->OUT.SUBLK$(0)->SYM.TEXT, 0, 1));

   3354  1 000061   500004 236100                    LDQ     4,,PR5
         1 000062   000033 772000                    QRL     27
         1 000063   500004 236100                    LDQ     4,,PR5
         1 000064   000777 376003                    ANQ     511,DU
         1 000065   000055 116003                    CMPQ    45,DU
         1 000066   000074 602000 1                  TNC     s:3354+11
         1 000067   500004 236100                    LDQ     4,,PR5
         1 000070   000777 376003                    ANQ     511,DU
         1 000071   000055 116003                    CMPQ    45,DU
         1 000072   000101 600000 1                  TZE     s:3356
         1 000073   000106 710000 1                  TRA     s:3359
         1 000074   500004 236100                    LDQ     4,,PR5
         1 000075   000777 376003                    ANQ     511,DU
PL6.E3A0      #001=XST$TIMEZONE File=XST$TIMEZONE.:E05TSI                        WED 07/30/97 09:10 Page:10   
         1 000076   000053 116003                    CMPQ    43,DU
         1 000077   000106 601000 1                  TNZ     s:3359
         1 000100   000105 710000 1                  TRA     s:3357

       68     3355    3                   SELECT( '-');

       69     3356    3                   OFFSET = -OFFSET;

   3356  1 000101   000000 235100                    LDA     0,,PR0
         1 000102   000000 531000                    NEG     0
         1 000103   000000 755100                    STA     0,,PR0
         1 000104   000142 710000 1                  TRA     s:3374

       70     3357    3                   SELECT( '+');

   3357  1 000105   000142 710000 1                  TRA     s:3374

       71     3358    3                   SELECT( ELSE);

       72     3359    3               GOTO OOPS;

   3359  1 000106   000141 710000 1                  TRA     OOPS

       73     3360    3                   END;

       74     3361    2           CASE( %MILITARY);

       75     3362    2               CALL INDEX( TEMP,

   3362  1 000107   400003 475500                    LDP5    3,,PR4
         1 000110   500004 236100                    LDQ     4,,PR5
         1 000111   000033 772000                    QRL     27
         1 000112   000100 124400                    SCM     mask='000'O
         1 000113   000023 000031 0                  ADSC9   CMN2UTS+11               cn=0,n=25
         1 000114   500004 200001                    ADSC9   4,,PR5                   cn=1,n=1
         1 000115   200006 000100                    ARG     TEMP,,AUTO
         1 000116   000141 606400 1                  TTN     OOPS
PL6.E3A0      #001=XST$TIMEZONE File=XST$TIMEZONE.:E05TSI                        WED 07/30/97 09:10 Page:11   

       76     3363    2                 SUBSTR( NODE$->OUT.SUBLK$(0)->SYM.TEXT, 0, 1),
       77     3364    2                 'MLKIHGFEDCBAZNOPQRSTUVWXY') ALTRET( OOPS);
       78     3365    2               OFFSET = (TEMP-12)*%UTS_CSEC_HOUR#;

   3365  1 000117   200006 236100                    LDQ     TEMP,,AUTO
         1 000120   000000 402000 2                  MPY     0
         1 000121   000001 136000 2                  SBLQ    1
         1 000122   000000 756100                    STQ     0,,PR0
         1 000123   000142 710000 1                  TRA     s:3374

       79     3366    2           CASE( %COMMON);

       80     3367    2               TEMP = NODE$->OUT.SUBLK$(0)->SYM.CODE;

   3367  1 000124   400003 475500                    LDP5    3,,PR4
         1 000125   500000 236100                    LDQ     0,,PR5
         1 000126   777777 376007                    ANQ     -1,DL
         1 000127   200006 756100                    STQ     TEMP,,AUTO

       81     3368    2               OFFSET = CMN2UTS( TEMP)*%UTS_CSEC_HOUR#;

   3368  1 000130   000010 236006 0                  LDQ     CMN2UTS,QL
         1 000131   000000 402000 2                  MPY     0
         1 000132   000000 756100                    STQ     0,,PR0

       82     3369    2               ACRONYM = ACRONYMS( TEMP);

   3369  1 000133   200006 236100                    LDQ     TEMP,,AUTO
         1 000134   000003 402007                    MPY     3,DL
         1 000135   040100 100406                    MLR     fill='040'O
         1 000136   000000 000003 0                  ADSC9   ACRONYMS,Q               cn=0,n=3
         1 000137   100000 000003                    ADSC9   0,,PR1                   cn=0,n=3
         1 000140   000142 710000 1                  TRA     s:3374

       83     3370    2           CASE( ELSE);

PL6.E3A0      #001=XST$TIMEZONE File=XST$TIMEZONE.:E05TSI                        WED 07/30/97 09:10 Page:12   
       84     3371    2   OOPS:
       85     3372    2               ALTRETURN;

   3372  1 000141   000000 702200 xent  OOPS         TSX2  ! X66_AALT

       86     3373    2           END;

       87     3374    1       RETURN;

   3374  1 000142   000000 702200 xent               TSX2  ! X66_ARET

ACRONYMS
 Sect OctLoc
   0     000   125124 103107   115124 105123   124105 104124   103123 124103    UTCGMTESTEDTCSTC
   0     004   104124 115123   124115 104124   120123 124120   104124 ******    DTMSTMDTPSTPDT..

CMN2UTS
 Sect OctLoc
   0     010   000000 000000   000000 000000   777777 777773   777777 777774    ................
   0     014   777777 777772   777777 777773   777777 777771   777777 777772    ................
   0     020   777777 777770   777777 777771                                    ........

(unnamed)
 Sect OctLoc
   0     022   040040 040040   115114 113111   110107 106105   104103 102101        MLKIHGFEDCBA
   0     026   132116 117120   121122 123124   125126 127130   131040 040040    ZNOPQRSTUVWXY

(unnamed)
 Sect OctLoc
   2     000   000001 277100   000020 365400                                    ...@....
       88     3375
       89     3376    1   END XST$TIMEZONE;

PL6.E3A0      #001=XST$TIMEZONE File=XST$TIMEZONE.:E05TSI                        WED 07/30/97 09:10 Page:13   
--  Include file information  --

   XU_MACRO_C.:E05TOU  is referenced.
   XUD_UTS_M.:E05TOU  is referenced.
   XST_NODES_E.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure XST$TIMEZONE.

   Procedure XST$TIMEZONE requires 99 words for executable code.
   Procedure XST$TIMEZONE requires 10 words of local(AUTO) storage.

    No errors detected in file XST$TIMEZONE.:E05TSI    .
PL6.E3A0      #001=XST$TIMEZONE File=XST$TIMEZONE.:E05TSI                        WED 07/30/97 09:10 Page:14   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=XST$TIMEZONE File=XST$TIMEZONE.:E05TSI                        WED 07/30/97 09:10 Page:15   
          MINI XREF LISTING

ACRONYM
      3336**DCL        41--PROC     3346<<ASSIGN   3369<<ASSIGN
ACRONYMS
      3337**DCL      3369>>ASSIGN
CMN2UTS
      3339**DCL      3368>>ASSIGN
NODE$
      3341**DCL        41--PROC     3347>>DOCASE   3349>>CALLBLT  3349>>CALLBLT  3353>>IF       3354>>DOSELCT
      3354>>DOSELCT  3362>>CALLBLT  3362>>CALLBLT  3367>>ASSIGN
OFFSET
      3342**DCL        41--PROC     3345<<ASSIGN   3352<<ASSIGN   3356<<ASSIGN   3356>>ASSIGN   3365<<ASSIGN
      3368<<ASSIGN
OOPS
      3372**LABEL    3351--GOTO     3359--GOTO     3362--CALLALT
OUT.SUBLK$
      3291**DCL      3349>>CALLBLT  3349>>CALLBLT  3353>>IF       3354>>DOSELCT  3354>>DOSELCT  3362>>CALLBLT
      3362>>CALLBLT  3367>>ASSIGN
SYM.CODE
      3310**DCL      3347>>DOCASE   3367>>ASSIGN
SYM.COUNT
      3327**DCL      3330--IMP-SIZ  3349>>CALLBLT  3353>>IF       3354>>DOSELCT  3362>>CALLBLT
SYM.TEXT
      3330**DCL      3349>>CALLBLT  3354>>DOSELCT  3362>>CALLBLT
TEMP
      3343**DCL      3349<<CALLBLT  3350>>IF       3350>>IF       3352>>ASSIGN   3352>>ASSIGN   3362<<CALLBLT
      3365>>ASSIGN   3367<<ASSIGN   3368>>ASSIGN   3369>>ASSIGN
PL6.E3A0      #001=XST$TIMEZONE File=XST$TIMEZONE.:E05TSI                        WED 07/30/97 09:10 Page:16   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=XST$TIMEZONE File=XST$TIMEZONE.:E05TSI                        WED 07/30/97 09:10 Page:17   
              MINI UREF LISTING

XST$TIMEZONE      41**PROC
