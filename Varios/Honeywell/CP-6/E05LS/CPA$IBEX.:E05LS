VERSION E05

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:1    
        1        1        /*M*   CPA$IBEX   Interactive and Batch EXecutive   */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  DMC,PLM=2,CSI=1   */
        8        8        /*P*   NAME:   CPA$IBEX
        9        9               PURPOSE: To serve as the BATCH, on-line, and ghost user interface for
       10       10                       CP-6 services. CPA$IBEX reads and interprets commands and
       11       11                       is the main driving routine for IBEX. Some of the major functions
       12       12                       performed by CPA$IBEX are:
       13       13                       1. Call user programs and system processors.
       14       14                       2. Read and process control commands and call the appropriate
       15       15                          routine to perform the function.
       16       16                       3. Associate DELTA or other debuggers.
       17       17                       4. Generates step accounting and termination accounting
       18       18                           records.
       19       19               DESCRIPTION:
       20       20               REFERENCE: Programmers Reference Manual
       21       21        */
       22       22        /***********************************************************************/
       23       23                   %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:2    
       24       24        CPA$IBEX: PROC;
       25       25        /*******************************************************************************
       26       26          **
       27       27                Dcbs -
       28       28                      how used in IBEX
       29       29          **
       30       30             M$IBEX, M$IBEX1, M$UC and M$DO are always available.
       31       31             Any dynamic dcbs should always be available, except
       32       32             possibly at control-y time.
       33       33          **
       34       34             M$IBEX should always be open to the command stream. If
       35       35             necessary, it may be used after closing. It should be
       36       36             reopened by calling CPB$OPENCS before return to CPA$IBEX.
       37       37          **
       38       38             M$IBEX1 is for general use and should be opened by the
       39       39             current routine and closed before returning to CPA$IBEX.
       40       40          **
       41       41             M$IBEX2 is reserved for I/O purposes described below.
       42       42        **
       43       43             M$LL may be a dynamic dcb or M$IBEX2.
       44       44             When IBEX needs to write thru M$LL CPC$OPEN_LL is
       45       45             called. If there is a rununit under IBEX then it may
       46       46             have a M$LL dcb and IBEX should use that one. Therefore,
       47       47             CPC$OPEN_LL tries to get a dynamic dcb. If that fails it
       48       48             falls back and uses M$IBEX2. Whichever dcb is used, that
       49       49             dcbnumber is stored into SEG$2.LLDCB# for later use. When
       50       50             IBEX exits, this and other dcbs are closed and released.
       51       51          **
       52       52             M$UC is used if in control-y mode. Both for reads from the
       53       53             terminal and writes to the terminal.
       54       54          **
       55       55             M$DO is used to output error messages thru.
       56       56          **
       57       57        *******************************************************************************/
       58       58        %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:3    
       59       59        /*******************************************************************************
       60       60          **
       61       61                Flags -
       62       62                         how used in IBEX
       63       63          **
       64       64             The flags ( B$JIT.CPFLAGS1 ) are used to remember information
       65       65             from job step to job step.
       66       66          **
       67       67             Such as...
       68       68               CP_BRK#      - break received
       69       69               CP_BUFFULL#  - command in B$JIT.CCBUF
       70       70               CP_CFREAD#   - read from XEQ file
       71       71               CP_DONTRFEXT3# - This flag tells IBEX not to RESET FEXT bit for #3
       72       72                                because the file name was *G.  This is for when
       73       73                                IBEX is at JOBSTEP.
       74       74               CP_DELTA#    - !U cmd found
       75       75               CP_DRIBBLE#  - A DRIBBLE command exists
       76       76               CP_ECHO#     - echo cmds from XEQ
       77       77               CP_EXIT#     - The processor exited normally (abnormally)
       78       78               CP_NOTIFY#   - NOTIFY user of changes in BATCH jobs
       79       79               CP_PROCACCT# - processor accounting
       80       80               CP_PROTECT#  - dont prompt !quit
       81       81               CP_SKIPABORT# - Don't abort user at this time
       82       82               CP_SOMENOTIFY#   - there is something to NOTIFY about.
       83       83               CP_STARPROC# - snap(s) in *S
       84       84               CP_STEPACCT# - step accounting
       85       85               CP_STEPLMT#  - step limits in effect
       86       86               CP_TRMNATE#  - Logoff this user after rundown
       87       87          **
       88       88             Information returned to IBEX in CPFLAGS1...
       89       89               CP_JSTEP#  - at job step
       90       90               CP_LOGOFF# - aborted by operator
       91       91               CP_LOGON#  - user already logged on
       92       92               CP_RUND#   - user ready to run down
       93       93               CP_YC#     - Program interrupted by control-y
       94       94               CP_YCPMME# - entry by control-y pmme
       95       95               CP_LNKPMME# - entry by M$LINK pmme.
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:4    
       96       96               CP_FIRSTCP# - IBEX is first command processor
       97       97               CP_LASTCP#  - IBEX is last command processor
       98       98               CP_LASTCPEXISTS# - last command processor exists
       99       99          **
      100      100        *******************************************************************************/
      101      101        /*******************************************************************************
      102      102          **
      103      103                Flags in SEG$2 -
      104      104                                  How some of the internal flags are used
      105      105                                  ie SEG$2.FLAGS.xxx
      106      106          **
      107      107                  USE_REMEM   - A flag that IBEX uses to tell what it should do
      108      108                                if the user hits Control-Y.  If the flag is
      109      109                                set, then SEG$2.REMEM$ should hold the REMEMBER
      110      110                                location the CPC$BREAK will unwind to.  If the flag
      111      111                                is reset, IBEX will treat the Control-Y as a
      112      112                                BREAK.  IBEX must be careful of the setting of
      113      113                                this flag due to the consequences of the UNWIND.
      114      114          **
      115      115        *******************************************************************************/
      116      116        %EJECT ;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:5    
      117      117        %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:6    
      118      118                   %INCLUDE AZ_MACRO_C;
      119     2705                   %INCLUDE AZ_SUBS_C;
      120     2774                   %INCLUDE B$JIT;
      121     3064                   %INCLUDE B_MACROS_C;
      122     3175                   %INCLUDE CP_6;
      123     3256                   %INCLUDE CP_SUBS_C;
      124     4173                   %INCLUDE CP_PERR_C;
      125     4511                   %INCLUDE F_ERRORS_C;
      126     4751                   %INCLUDE KV_ERRORS_C;
      127     4811                   %INCLUDE UM_ERRORS_C;
      128     4845                   %INCLUDE CP_6_SUBS;
      129     5385                   %INCLUDE CP_MACROS_C;
      130     6137                   %INCLUDE XU_MACRO_C;
      131     9243                   %INCLUDE AS_SUPER_C;
      132     9678                   %INCLUDE XU_PERR_C;
      133     9869                   %INCLUDE XU_SUBS_C;
      134     9961                   %INCLUDE B$TABLES_C ;
      135    10069                   %INCLUDE XUH_MACRO_C;
      136    10153                   %INCLUDE KL_SUPER_C;
      137    13055                   %INCLUDE JP_SUBS_C;
      138    13080                   %INCLUDE JS$CP6V_C ;
      139    13143                   %INCLUDE NK_VFC_C;
      140    13217                   %INCLUDE CP_DATA_R;
      141    15780                   %INCLUDE CX_SUBS_C ;
      142    15793                   %INCLUDE CX_MACROS_M;
      143    15844    1   DCL CPA$BACKUP     ENTRY(1)  ALTRET;
      144    15845    1   DCL AZA$LOGOFF     ENTRY(1)  ALTRET;
      145    15846    1   DCL CPA$BYE        ENTRY(1)  ALTRET;
      146    15847    1   DCL CPG$CHK_WHEN_CONDITION ENTRY(1) ALTRET ;
      147    15848    1   DCL CPA$CONTINUE   ENTRY(1);
      148    15849    1   DCL CPA$DEBUG      ENTRY(1)  ALTRET;
      149    15850    1   DCL CPA$EDIT       ENTRY(1)  ALTRET;
      150    15851    1   DCL CPA$ECHOCC     ENTRY(2);
      151    15852    1   DCL CPA$EFT        ENTRY(1)  ALTRET;
      152    15853    1   DCL CPA$EXIT       ENTRY(1)  ALTRET;
      153    15854    1   DCL CPA$FEPLINK    ENTRY(1)  ALTRET;
      154    15855    1   DCL CPA$FLUSH      ENTRY;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:7    
      155    15856    1   DCL CPA$GET        ENTRY(1)  ALTRET;
      156    15857    1   DCL CPA$GETRES     ENTRY     ALTRET;
      157    15858    1   DCL CPA$GO         ENTRY(1)  ALTRET;
      158    15859    1   DCL CPA$INFORM     ENTRY(1)  ALTRET;
      159    15860    1   DCL CPA$JOIN       ENTRY(1)  ALTRET;
      160    15861    1   DCL CPJ$LIMIT      ENTRY(1)  ALTRET;
      161    15862    1   DCL CPA$LINK       ENTRY(1)  ALTRET;
      162    15863    1   DCL CPA$LOGON      ENTRY(1)  ALTRET;
      163    15864    1   DCL CPA$PCL        ENTRY(1)  ALTRET;
      164    15865    1   DCL CPA$PMD        ENTRY(1)  ALTRET;
      165    15866    1   DCL CPA$QUIT       ENTRY(1)  ALTRET;
      166    15867    1   DCL CPA$READCC     ENTRY(2)  ALTRET;
      167    15868    1   DCL CPA$RUNIT      ENTRY(1)  ALTRET;
      168    15869    1   DCL CPA$SAVE       ENTRY(1)  ALTRET;
      169    15870    1   DCL CPA$SIXEDIT    ENTRY(1)  ALTRET;
      170    15871    1   DCL CPA$START      ENTRY(1)  ALTRET;
      171    15872    1   DCL CPA$UNDER      ENTRY(1)  ALTRET;
      172    15873    1   DCL CPA$WR_CONTFILE ENTRY(3)  ALTRET;
      173    15874    1   DCL CPB$ATITLE     ENTRY(1)  ALTRET;
      174    15875    1   DCL CPB$COUPLE     ENTRY(1)  ALTRET;
      175    15876    1   DCL CPB$DECOUPLE   ENTRY(1)  ALTRET;
      176    15877    1   DCL CXB$DELAM      ENTRY(4) ;
      177    15878    1   DCL CPB$ERASE#     ENTRY(1)  ALTRET;
      178    15879    1   DCL CPB$ERROR      ENTRY(1)  ALTRET;
      179    15880    1   DCL CPB$LOCATE     ENTRY(1)  ALTRET;
      180    15881    1   DCL CPB$OPENCS     ENTRY;
      181    15882    1   DCL CPB$MESSAGE    ENTRY(1)  ALTRET;
      182    15883    1   DCL CPB$PLATEN     ENTRY(1)  ALTRET;
      183    15884    1   DCL CPB$REPORT     ENTRY(1)  ALTRET;
      184    15885    1   DCL CPB$SEND       ENTRY(1)  ALTRET;
      185    15886    1   DCL CPB$STATUS     ENTRY(1)  ALTRET;
      186    15887    1   DCL CPB$TABS       ENTRY(1)  ALTRET;
      187    15888    1   DCL CPB$TERMINAL   ENTRY(1)  ALTRET;
      188    15889    1   DCL CPB$TITLE      ENTRY(1)  ALTRET;
      189    15890    1   DCL CPC$EXIT       ENTRY     ALTRET;
      190    15891    1   DCL CPC$GETDCB     ENTRY(2);
      191    15892    1   DCL CPC$RELDCB     ENTRY(1);
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:8    
      192    15893    1   DCL CPC$GETSEG     ENTRY(2)  ALTRET;
      193    15894    1   DCL CPC$OPEN_LL    ENTRY;
      194    15895    1   DCL CPC$QUIT       ENTRY     ALTRET;
      195    15896    1   DCL CPC$RDUSERS    ENTRY(2)  ALTRET;
      196    15897    1   DCL CPC$RELSEG     ENTRY(1);
      197    15898    1   DCL CPC$SCREECH    ENTRY(2);
      198    15899    1   DCL CPC$SETIQUIT   ENTRY;
      199    15900    1   DCL CPC$UNIMPCMD   ENTRY;
      200    15901    1   DCL CPC$WRITEMSGE  ENTRY(6);
      201    15902    1   DCL CPD$SYNTAX     ENTRY(1)  ALTRET;
      202    15903    1   DCL CPD$SYNTRY     ENTRY(1);
      203    15904    1   DCL CPE$COMMENT    ENTRY(1)  ALTRET;
      204    15905    1   DCL CPE$DISPLAY    ENTRY(1)  ALTRET;
      205    15906    1   DCL CPE$DIAGOUT    ENTRY(1)  ALTRET;
      206    15907    1   DCL CPE$DONT       ENTRY(1)  ALTRET;
      207    15908    1   DCL CPE$ECHO       ENTRY(1)  ALTRET;
      208    15909    1   DCL CPE$EJECT      ENTRY(1)  ALTRET;
      209    15910    1   DCL CPE$EXPOUND    ENTRY(1) ALTRET;
      210    15911    1   DCL CPE$LIST       ENTRY(1)  ALTRET;
      211    15912    1   DCL CPE$LISTOUT    ENTRY(1)  ALTRET;
      212    15913    1   DCL CPE$OUTPUT     ENTRY(1)  ALTRET;
      213    15914    1   DCL CPE$PASSWORD   ENTRY(1)  ALTRET;
      214    15915    1   DCL CPE$POINT      ENTRY(1) ALTRET;
      215    15916    1   DCL CPE$POSITION   ENTRY(1) ALTRET;
      216    15917    1   DCL CPE$PROTECT    ENTRY(1)  ALTRET;
      217    15918    1   DCL CPE$RZEROS     ENTRY(3);
      218    15919    1   DCL CPE$TIME       ENTRY(1)  ALTRET;
      219    15920    1   DCL CPF$PRIV       ENTRY(1)  ALTRET;
      220    15921    1   DCL CPF$PROFILE    ENTRY(1)  ALTRET;
      221    15922    1   DCL CPF$SWITCH     ENTRY(1)  ALTRET;
      222    15923    1   DCL CPF$TERMINAL   ENTRY(1)  ALTRET;
      223    15924    1   DCL CPG$FUN$$      ENTRY(1) ;
      224    15925    1   DCL CPG$GOTO       ENTRY(1)  ALTRET;
      225    15926    1   DCL CPG$IF         ENTRY(1)  ALTRET;
      226    15927    1   DCL CPG$LET        ENTRY(1)  ALTRET;
      227    15928    1   DCL CPG$OUTPUT     ENTRY(1)  ALTRET;
      228    15929    1   DCL CPG$WHEN       ENTRY(1)  ALTRET;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:9    
      229    15930    1   DCL CPH$BATXEQ     ENTRY(1)  ALTRET;
      230    15931    1   DCL CPH$GLOBAL     ENTRY(1)  ALTRET;
      231    15932    1   DCL CPI$ACCEPT     ENTRY(1)  ALTRET;
      232    15933    1   DCL CPI$DIRECTORY  ENTRY(1)  ALTRET;
      233    15934    1   DCL CPI$DRIBBLE    ENTRY(1)  ALTRET;
      234    15935    1   DCL CPI$PRIORITY   ENTRY(1)  ALTRET;
      235    15936    1   DCL CPI$SETUP      ENTRY(2)  ALTRET;
      236    15937    1   DCL CPI$TABS       ENTRY(1)  ALTRET;
      237    15938    1   DCL CPJ$ESTCUM     ENTRY(2)  ALTRET;
      238    15939    1   DCL CPK$CANCEL     ENTRY(1)  ALTRET;
      239    15940    1   DCL CPK$CHECK      ENTRY(1)  ALTRET;
      240    15941    1   DCL CPK$NOTIFY     ENTRY(1)  ALTRET;
      241    15942    1   DCL CPO$ACQUIRE    ENTRY(1)  ALTRET;
      242    15943    1   DCL CPO$ORES       ENTRY(1)  ALTRET;
      243    15944    1   DCL CPO$RELEASE    ENTRY(1)  ALTRET;
      244    15945    1   DCL CPM$MINI ENTRY ALTRET;
      245    15946    1   DCL CXP$POSTERR    ENTRY(5);
      246    15947    1   DCL CPR$RPTERR     ENTRY(2);
      247    15948    1   DCL CPR$RPTERR_2   ENTRY(2);
      248    15949    1   DCL CPX$FIRST_PASS ENTRY (1);
      249    15950    1   DCL CPA$CHK_IF_A_DISALLOWED_CMD ENTRY ALTRET;
      250    15951    1   DCL CXC$COMMAND    ENTRY(2) ALTRET ;
      251    15952    1   DCL X$PRE_PROCESS  ENTRY(1)  ALTRET;
      252    15953    1   DCL CPF$PROMPT  ENTRY(1) ALTRET;
      253    15954    1   DCL CPF$SET_PROMPT ENTRY(2);
      254    15955        %INCLUDE CXG_ENTRY ;
      255    15967        /***** Ubin/Sbin words *****/
      256    15968    1   DCL PREV_CMND UBIN WORD;
      257    15969    1   DCL CMD_PARSING UBIN WORD;
      258    15970    1   DCL I SBIN;                             /*Temp. Loc. For indexes*/
      259    15971    1   DCL J SBIN;                             /*Temp. Loc for indexes*/
      260    15972    1   DCL K SBIN;                             /*Temp. Location*/
      261    15973    1   DCL USRDCB UBIN WORD;                   /* Save job step passed dcb */
      262    15974    1   DCL CMD_SOURCE UBIN WORD;
      263    15975    1   DCL DCB# UBIN;
      264    15976    1   DCL 1 IGNORED,
      265    15977    1         2 CNT UBIN BYTE UNAL,
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:10   
      266    15978    1         2 TXT CHAR(7) UNAL,
      267    15979    1         2 TXTA(0:6) REDEF TXT CHAR(1) UNAL;
      268    15980        /***** Remember *****/
      269    15981    1   DCL REMEM_VAR REMEMBER ;
      270    15982    1   DCL REMEM_CONTEXT_ERR REMEMBER ;
      271    15983    1   DCL REMEM$VAR REMEMBER BASED ;
      272    15984        /***** Ptrs *****/
      273    15985    1   DCL TEMP$ PTR AUTO;
      274    15986    1   DCL BLK$ PTR AUTO;
      275    15987    1   DCL P$PCB$ PTR ;
      276    15988    1   DCL XUG$ PTR ;
      277    15989        /***** Bit data *****/
      278    15990    1   DCL FIRST_SYNTAX_ERR BIT(1) ;
      279    15991    1   DCL TRIED_2_XPAND_WND BIT(1) ;
      280    15992        /***** Character data *****/
      281    15993    1   DCL TEMPBUF CHAR(%CPBUFFSIZE) AUTO;
      282    15994        /***** Symref date *****/
      283    15995    1   DCL IBEX_CMD BIT(36) SYMREF;
      284    15996    1   DCL XUE_PREEXP BIT(36) SYMREF;
      285    15997    1   DCL LINKPMME_CMD BIT(36) SYMREF;
      286    15998    1   DCL  RU_ BIT(36) SYMREF;
      287    15999        /***** Local structures *****/
      288    16000          %FPT_OPEN (STCLASS=AUTO);
      289    16109          %FPT_TRMCTL (FPTN=FPT_TRMCTL, STCLASS=AUTO);
      290    16136          %VLP_ERRCODE (FPTN=ERR_CODE,STCLASS=AUTO);
      291    16181          %ERR_BLK (NAME=ERR$BLK,STCLASS=BASED);
      292    16206          %XUH_PARAM (NAME=CXUH_PARAM,PROCNAME=IBEX_NAME,PROCACCT=SYS,STCLASS=CONSTANT);
      293    16267          %XUH_PARAM (NAME=X$PARAM,STCLASS=AUTO);
      294    16328          %VLP_ACCT (FPTN=SYS,ACCT=':SYS',STCLASS=CONSTANT);
      295    16341          %VLP_VECTOR(FPTN=RESULTS,STCLASS=AUTO);
      296    16356          %VLP_WINDOW(FPTN=VLP_WINDOW, STCLASS=AUTO);
      297    16400          %B$TCB (STCLASS="BASED(B$TCB$)");
      298    16403          %B$ALT;
      299    16411          %TEXTC (NAME=X$STRING);
      300    16416          %PARSE$OUT (NAME=P$B);
      301    16461          %PARSE$SYM (NAME=P$S);
      302    16499          %F$DCB;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:11   
      303    16556          %CP$BUFF (NAME=CP$BUFF,STCLASS=BASED);
      304    16559          %CPSL_COMMAND_PARAMETERS (NAME=CPSL_PARAM, STCLASS=AUTO) ;
      305    16577          %B$XL_UPPER (NAME=TRANSTBL) ;
      306    16581        /***** Based Fpts *****/
      307    16582          %FPT_CLOSE(FPTN=FPT$CLOSE,STCLASS=BASED);
      308    16624          %FPT_READ(FPTN=FPT$READ,STCLASS=BASED);
      309    16663          %FPT_WRITE(FPTN=FPT$WRITE,STCLASS=BASED);
      310    16694          %FPT_CPEXIT(FPTN=FPT$CPEXIT,STCLASS=BASED);
      311    16720          %FPT$YC_V(FPTN=FPTV$YC);
      312    16723          %VLR_YC (FPTN=VLR$YC, STCLASS=BASED) ;
      313    16730          %XUG_GETCMD (NAME=GET$CMD, STCLASS=BASED) ;
      314    17068          %XUG_INIT (NAME=XUG$INIT, STCLASS=BASED) ;
      315    17481          %XUG_PARAMS (NAME=XUG$PARAMS, STCLASS="BASED(XUG$)") ;
      316    17925        %XUG_RLT (NAME=XUG$RLT) ;
      317    17932          %P$PCB (NAME=P$PCB, STCLASS="BASED(P$PCB$)") ;
      318    18133                   %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:12   
      319    18134        /*         The following macro defines the layout of IBEX's data segment*/
      320    18135        /*         Utilized for static data and pointed to by SEG2$. */
      321    18136        /*         A change to the macro may require a change to the routine*/
      322    18137        /*         Which initializes the data SEGMENT.*/
      323    18138                   %LIST;
      324    18139                   %SEG$2(NAME=SEG$2);
             18140    1   DCL 1 NAME ALIGNED STCLASS,
             18141    1         2 FLAGS,
             18142    1           3 USERS BIT(1) UNAL,            /* SEG$2.USERS$ is valid              */
             18143    1           3 HLP BIT(1) UNAL,              /* SEG$2.HLP$ is valid                */
             18144    1           3 RES BIT(1) UNAL,              /* SEG$2.PSEUDO$ & SEG$2.PHYS valid   */
             18145    1           3 SKIP_ECHO BIT(1) UNAL,        /* Do not echo this command           */
             18146    1           3 NOM$LLDCB BIT(1) UNAL,        /* No M$LL dcb yet                    */
             18147    1           3 IGNORE_XXX BIT(1) UNAL,       /* Ignore abort for M$XXX             */
             18148    1           3 SKIP_ERRS BIT(1) UNAL,        /* Dont print errs                    */
             18149    1           3 CONTINUED BIT(1) UNAL,        /* This command was continued         */
             18150    1           3 RUNITCMD BIT(1) UNAL,         /* This is a RUN UNIT cmd.            */
             18151    1           3 ABORT BIT(1) UNAL,            /* ABORT processing.                  */
             18152    1           3 CMD_STR_INT BIT(1) UNAL,      /* COMMAND STREAM was interrupted     */
             18153    1           3 YCPMME_INT BIT(1) UNAL,       /* M$YC was interrupted with a Y-C    */
             18154    1           3 CPBUFFULL_AT_CSINT BIT(1) UNAL, /* CPBUFF was full when CS interupt.*/
             18155    1           3 USE_REMEM BIT(1) UNAL,  /* Use the REMEMBER variable for UNWIND. */
             18156    1           3 USE_CCBUF_IF_YC BIT(1) UNAL,  /* Use CCBUF if during YC. */
             18157    1           3 IBEX_OWNS_M$LL BIT(1) UNAL,
             18158    1           3 GOT_WHEN_CNTL_REC BIT(1) UNAL,/* We already got WHEN_CNTL_REC*/
             18159    1           3 * BIT(1) UNAL,
             18160    1         2 LLDCB# UBIN(18) UNAL,
             18161    1         2 NCHARS UBIN(18) UNAL,          /* CURRENT RECD. SIZE (CHARS.)        */
             18162    1         2 USERS_SZ UBIN(18) UNAL,        /* ACTUAL LEN IN CHARS OF :USERS REC  */
             18163    1         2 HLP_SZ UBIN(18) UNAL,          /* ACTUAL LEN IN CHARS OF :HLP REC    */
             18164    1         2 LASTPROMPT UBIN HALF UNAL,     /* Last prompt displayed */
             18165    1         2 ERRBUF (0:99) UBIN WORD,
             18166    1         2 DBUG_NAME ALIGNED,
             18167    1           3 CNT UBIN(9) UNAL,
             18168    1           3 TXT CHAR(11),
             18169    1         2 USERS$               PTR ALIGNED,
             18170    1         2 HLP$                 PTR ALIGNED,
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:13   
             18171    1         2 PSEUDO$              PTR ALIGNED,
             18172    1         2 PHYS$                PTR ALIGNED,
             18173    1         2 FPT_READUC$          PTR ALIGNED,
             18174    1         2 FPT_WRITEUC$         PTR ALIGNED,
             18175    1         2 FPT_READCC$          PTR ALIGNED,
             18176    1         2 FPT_WRITECC$         PTR ALIGNED,
             18177    1         2 FPT_OPEN$            PTR ALIGNED,
             18178    1         2 FPT_CLOSE$           PTR ALIGNED,
             18179    1         2 FPT_READ$            PTR ALIGNED,
             18180    1         2 FPT_WRITE$           PTR ALIGNED,
             18181    1         2 FPT_CPEXIT$          PTR ALIGNED,
             18182    1         2 FPT_FID$             PTR ALIGNED,
             18183    1         2 FPT_TIME$            PTR ALIGNED,
             18184    1         2 CPBUFF$              PTR ALIGNED,
             18185    1         2 XUG_INIT$            PTR ALIGNED,
             18186    1         2 GETCMD$              PTR ALIGNED,
             18187    1         2 REMEM$               PTR ALIGNED,
             18188    1         2 WHEN_CNTL_REC$       PTR ALIGNED,
             18189    1         2 ACCUM_CHG            UBIN WORD ,
             18190    1         2 SPROMPT$             PTR ALIGNED,
             18191    1         2 PROMPT$              PTR ALIGNED,
             18192    1         2 XUC$                 PTR ALIGNED,
             18193    1         2 WRITTEN              BIT(1) ALIGNED,
             18194    1         2 LINECOUNT            SBIN ALIGNED,
             18195    1         2 TABVAL               SBIN ALIGNED,
             18196    1         2 PROMPT_TYPE          UBIN ALIGNED,
             18197    1         2 XUC_BUFF             CHAR(160) ALIGNED;
      325    18199                   %PLIST;
      326    18200                   %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:14   
      327    18201        /***** Fpts *****/
      328    18202          %FPT_XXX (FPTN=FPT_XXX,STCLASS=AUTO);
      329    18217          %U$PARAM (NAME=U$PARAM,STCLASS=AUTO);
      330    18233          %LOGOFF$PARAM (NAME=LOGOFF,STCLASS=AUTO);
      331    18274                      %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:15   
      332    18275                /***** Error codes *****/
      333    18276        %ERR_CODE (NAME=E_CSINT,MID#=CPA$IBEXMID,CODE#=E$CSINT,STCLASS=CONSTANT);
      334    18296        %ERR_CODE (NAME=E_YCPMMEBRK,MID#=CPA$IBEXMID,CODE#=E$YCPMMEBRK,STCLASS=CONSTANT);
      335    18316        %ERR_CODE (NAME=E_ABRTBATCH,MID#=CPA$IBEXMID,CODE#=E$ABRTBATCH,STCLASS=CONSTANT);
      336    18336        %ERR_CODE (NAME=E_YC_RUND,MID#=CPA$IBEXMID,CODE#=E$YC_RUND,STCLASS=CONSTANT);
      337    18356        %ERR_CODE (NAME=E_CONT,MID#=CPA$IBEXMID,CODE#=E$CONT,STCLASS=CONSTANT);
      338    18376        %ERR_CODE (NAME=E_RECS_IGNORED,MID#=CPA$IBEXMID,CODE#=E$RECS_IGNORED,STCLASS=
             18376            CONSTANT);
      339    18396        %ERR_CODE (NAME=E_INPUT,MID#=CPA$IBEXMID,CODE#=E$INPUT,STCLASS=CONSTANT);
      340    18416        %ERR_CODE (NAME=E_LIMEXC,MID#=CPA$IBEXMID,CODE#=E$LIMEXC,STCLASS=CONSTANT);
      341    18436        %ERR_CODE (NAME=E_MPRESOURCE,MID#=CPA$IBEXMID,CODE#=E$MPRESOURCE,STCLASS=CONSTANT);
      342    18456        %ERR_CODE (NAME=E_RESINVALID,MID#=CPA$IBEXMID,CODE#=E$RESINVALID,STCLASS=CONSTANT);
      343    18476        %ERR_CODE (NAME=E_ILLRUFID,MID#=CPA$IBEXMID,CODE#=E$ILLRUFID,STCLASS=CONSTANT);
      344    18496        %ERR_CODE (NAME=E_NO_MORE,MID#=CPA$IBEXMID,CODE#=E$NO_MORE,STCLASS=CONSTANT);
      345    18516        %ERR_CODE (NAME=E_CMDDISALLOWED,MID#=CPA$IBEXMID,CODE#=E$CMDDISALLOWED,STCLASS=
             18516            CONSTANT);
      346    18536        %VLP_ERRCODE (FPTN=E_BANG_EOD,MID=D,ERR#=%E$EOF,FCG=FS,MON='1'B,SEV=2,STCLASS=
             18536            CONSTANT);
      347    18581        %VLP_ERRCODE (FPTN=E_NJOBSTEP,MID=A,ERR#=E$NJOBSTEP,FCG=CP,STCLASS=CONSTANT);
      348    18626        %VLP_ERRCODE (FPTN=E_EMPTYWND,MID=A,ERR#=E$EMPTYWND,FCG=CP,STCLASS=CONSTANT);
      349    18671        %VLP_ERRCODE (FPTN=E_BDQUITCMND,MID=A,ERR#=E$BDQUITCMND,FCG=CP,STCLASS=CONSTANT);
      350    18716                   %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:16   
      351    18717        /*******************************************************************************
      352    18718        *                               Begin procedure                                *
      353    18719        *******************************************************************************/
      354    18720        /*
      355    18721          **** Preserve dcb num temp. For error msge. In syserr routine
      356    18722        */
      357    18723    1     USRDCB = B$JIT.USRDCB;
      358    18724        /*
      359    18725            **** Get M$IBEX and M$IBEX1 - two dcbs IBEX is guaranteed
      360    18726        */
      361    18727    1     CALL CPC$GETDCB(M$IBEX_NUM, IBEXTXTC);
      362    18728    1     CALL CPC$GETDCB(M$IBEX1_NUM, IBEX1TXTC);
      363    18729        /*
      364    18730             ***** Reset first command processor bit
      365    18731        */
      366    18732    1     B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 & ~%CP_FIRSTCP#;
      367    18733        /*
      368    18734             ***** Reset CMD_STR_INT (COMMAND STREAM interrupted flag) ...
      369    18735        */
      370    18736    1     SEG$2.FLAGS.CMD_STR_INT = %NO#;
      371    18737        /*
      372    18738             ***** Open M$IBEX and setup proper PROMPT...
      373    18739        */
      374    18740    1     IF NOT B$JIT.CPFLAGS1.LOGOFF OR B$JIT.CPFLAGS1.YCPMME
      375    18741    1       OR B$JIT.CPFLAGS1.LNKPMME
      376    18742    1     THEN            /* Init if NOT aborted by operator or M$YCPPME
      377    18743                                                               or M$LINK */
      378    18744    1        CALL OPENINPUT ALTRET(ERRTRN); /* setup for read of command stream */
      379    18745        /*
      380    18746             ***** Initialize SEG$2.ERRBUF ...
      381    18747        */
      382    18748    1     ADDR(SEG$2.ERRBUF) -> ERR$BLK.SIZE = 10;
      383    18749    1     ADDR(SEG$2.ERRBUF) -> ERR$BLK.FIRST = 0;
      384    18750    1     ADDR(SEG$2.ERRBUF) -> ERR$BLK.NEXT = 0;
      385    18751        /*
      386    18752             ***** If entered via M$YC pmme then skip all the accounting
      387    18753                   and dcb cleanup...
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:17   
      388    18754        */
      389    18755    1     IF B$JIT.CPFLAGS1 & (%CP_YCPMME# | %CP_LNKPMME#)
      390    18756    1     THEN
      391    18757    1        GOTO YCINIT;
      392    18758        /*
      393    18759          ****     Inform user on command stream interruption
      394    18760        */
      395    18761    1     IF B$JIT.NEXTCC = %CC_FROMXEQ#
      396    18762    1     THEN
      397    18763    1        IF B$JIT.CPFLAGS1.YC AND NOT B$JIT.CPFLAGS1.YCGET
      398    18764    1        THEN
      399    18765    2        DO;
      400    18766        /*E*       ERROR:   CPA-E$CSINT-E
      401    18767                   MESSAGE: *** Command stream interrupted ***
      402    18768                   DESCRIPTION: Command stream execution was interrupted by the
      403    18769                                user performing a control-y.
      404    18770        */
      405    18771    2           CALL CPC$WRITEMSGE (E_CSINT);
      406    18772    2           SEG$2.FLAGS.CMD_STR_INT = %YES#;
      407    18773    2           END;
      408    18774        /*
      409    18775             ***** If B$JIT.USRERR.CODE is non-zero,
      410    18776                   then report it...
      411    18777        */
      412    18778    1     IF B$JIT.USRERR.CODE ~= 0
      413    18779    1     THEN
      414    18780    2     DO;
      415    18781    2        CALL LIMIT_ERR ALTRET(ERRTRN);
      416    18782    2        IF B$JIT.CPFLAGS1.EXIT#
      417    18783    3        THEN DO;   /* Save error for ? processing */
      418    18784    3           SEG$2.GETCMD$ -> GET$CMD.ERR_CODE = B$JIT.USRERR;
      419    18785    3           CALL CXG$SETERRMSG (SEG$2.GETCMD$ -> GET$CMD);
      420    18786    3           END;
      421    18787    2        ELSE   /* Report it now */
      422    18788    2           CALL CPA$CHK_IF_A_DISALLOWED_CMD WHENRETURN
      423    18789    3           DO;
      424    18790    3              ERR_CODE = E_CMDDISALLOWED;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:18   
      425    18791    3              CALL CPC$WRITEMSGE (ERR_CODE,,,,,%YES#);
      426    18792    3              END;    /* Whenreturn Do */
      427    18793    2           WHENALTRETURN
      428    18794    3           DO;
      429    18795    3              CALL CPC$WRITEMSGE (B$JIT.USRERR,USRDCB,,,,%YES#);
      430    18796    3              END;    /* Whenaltreturn Do */
      431    18797    2        END;
      432    18798        /**/
      433    18799        /*E*    ERROR:   CPA-E$CMDDISALLOWED-0
      434    18800                MESSAGE: This command has been disallowed.
      435    18801                DESCRIPTION: The user tried to do an IBEX command that has
      436    18802                            disallowed.
      437    18803        */
      438    18804        /*
      439    18805             ***** Log user off if last command processor flag set
      440    18806        */
      441    18807    1     IF B$JIT.CPFLAGS1.LASTCP
      442    18808    1     THEN
      443    18809    1        CALL CPA$BYE;
      444    18810        /*
      445    18811             ***** If step accounting, budget accounting or step reporting
      446    18812                   has been specified then call AZA$LOGOFF...
      447    18813                   UNLESS... this is before the first job step or not
      448    18814                   at job step.
      449    18815        */
      450    18816    1     IF ((B$JIT.CPFLAGS1.STEPACCT ) /* step accounting?? */
      451    18817    1       OR (B$JIT.CPFLAGS1.STARPROC    /* Proprietary accounting?? */
      452    18818    1       AND B$JIT.PSLEV ~= %AZ_NONE#)
      453    18819    1       OR (B$JIT.SSLEV ~= %AZ_NONE#) /* step reporting?? */
      454    18820    1       OR (B$JIT.BUDLIM > 0)) /* budget accounting?? */
      455    18821    1       AND (B$JIT.CPFLAGS1.JSTEP )
      456    18822    1       AND (B$JIT.STEPS > 0) /* only do after first step */
      457    18823    1     THEN
      458    18824    2     DO;
      459    18825    2        IF B$JIT.SSLEV ~= %AZ_NONE#
      460    18826    2          OR (B$JIT.PSLEV ~= %AZ_NONE# AND
      461    18827    2          B$JIT.CPFLAGS1.STARPROC )
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:19   
      462    18828    2        THEN
      463    18829    3        DO;   /* Get M$LL */
      464    18830    3           CALL CPC$OPEN_LL;
      465    18831    3           LOGOFF.DCB_LL = SEG$2.LLDCB#;
      466    18832    3           END;
      467    18833    2        ELSE
      468    18834    2           LOGOFF.DCB_LL = 0;
      469    18835    2        LOGOFF.CODE = %AZ$STEP;
      470    18836    2        LOGOFF.ERR = 0;
      471    18837    2        LOGOFF.DCB1 = M$IBEX1_NUM;
      472    18838    2        CALL AZA$LOGOFF (LOGOFF) ALTRET(LOGOFF_ERR);
      473    18839    2        SEG$2.ACCUM_CHG = LOGOFF.ACCUM_CHG ;
      474    18840    3        DO WHILE(%NO#);
      475    18841    3   LOGOFF_ERR:
      476    18842    3           CALL CPC$WRITEMSGE(B$JIT.USRERR,B$JIT.USRDCB);
      477    18843    3           IF LOGOFF.ERR ~= %AZ$STATSERR THEN
      478    18844    3              CALL CPA$BYE;                          /* log the user off */
      479    18845    3           END;
      480    18846    2        END;
      481    18847        /**/
      482    18848    1     IF (B$JIT.CPFLAGS1.LOGOFF )
      483    18849    1       OR (B$JIT.CPFLAGS1.TRMNATE )
      484    18850    1     THEN
      485    18851    1        CALL CPA$BYE;
      486    18852        /**/
      487    18853        /*
      488    18854              ***** Check if this user needs to be RUNDOWN and if a WHEN
      489    18855                    command has been issued.
      490    18856        */
      491    18857    1     IF B$JIT.CPFLAGS1.RUND AND B$JIT.CPFLAGS1.WHEN_INPUT
      492    18858    1     THEN
      493    18859    2     DO ;
      494    18860    2        BLK$ = ADDR(NIL) ; /* Fake out PREV_CMND */
      495    18861    2        CALL CPG$CHK_WHEN_CONDITION(P$PCB) WHENALTRETURN
      496    18862    3        DO;
      497    18863    3           CALL WHEN_ERR;
      498    18864    3           END;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:20   
      499    18865    2        END ; /* Then Do */
      500    18866        /*
      501    18867          ****     Misc. Functions to be performed at job step.
      502    18868        */
      503    18869    1     IF (B$JIT.CPFLAGS1.JSTEP )
      504    18870    1     THEN
      505    18871    2     DO;
      506    18872        /*
      507    18873             ***** If NOTIFY then call CPK$CHECK ...
      508    18874                   Do not pass P$PCB ...
      509    18875        */
      510    18876    2        IF B$JIT.CPFLAGS1.NOTIFY
      511    18877    2        THEN
      512    18878    2           CALL CPK$CHECK ALTRET(CHKERR);
      513    18879    3        DO WHILE (%NO#) ;
      514    18880    3   CHKERR:
      515    18881    3           CALL CPR$RPTERR (SEG$2.ERRBUF, 0) ;
      516    18882    3           END ;  /* DO WHILE */
      517    18883        /*
      518    18884              ***** Check to see if a WHEN command has been input.
      519    18885        */
      520    18886    2        IF B$JIT.CPFLAGS1.WHEN_INPUT AND (NOT B$JIT.CPFLAGS1.BUFFULL)
      521    18887    2        THEN
      522    18888    3        DO ;
      523    18889    3           BLK$ = ADDR(NIL) ; /* Fake out PREV_CMND */
      524    18890    3           CALL CPG$CHK_WHEN_CONDITION(P$PCB) WHENALTRETURN
      525    18891    4           DO;
      526    18892    4              CALL WHEN_ERR;
      527    18893    4              END;
      528    18894    3           END ; /* Then Do */
      529    18895        /*
      530    18896             ***** Reset #1, #2, #3 and #4 dcbs ...
      531    18897        */
      532    18898    2        B$JIT.USRERR = %NO# ;
      533    18899    2        CPSL_PARAM = %NO# ;
      534    18900    2        IF (B$JIT.PRFLAGS.SI)
      535    18901    2        THEN
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:21   
      536    18902    3        DO;      /* Reset #1 */
      537    18903    3           CALL CXB$DELAM(ADDR(SOURCEDCB),ADDR(SOURCEDCB),M$IBEX1_NUM,CPSL_PARAM) ;
      538    18904    3           IF B$JIT.USRERR ~= %NO#
      539    18905    3           THEN
      540    18906    4           DO ;
      541    18907    4              IF CPSL_PARAM.FLAGS.REPORTED_TO_USER
      542    18908    4              THEN
      543    18909    4                 B$JIT.USRERR = %NO# ;
      544    18910    4              GOTO ERRTRN ;
      545    18911    4              END ;
      546    18912    3           B$JIT.PRFLAGS.SI = %NO#;
      547    18913    3           END;
      548    18914    2        IF (B$JIT.PRFLAGS.UI)
      549    18915    2        THEN
      550    18916    3        DO;      /* Reset #2 */
      551    18917    3           CALL CXB$DELAM(ADDR(UPDATEDCB),ADDR(UPDATEDCB),M$IBEX1_NUM) ;
      552    18918    3           IF B$JIT.USRERR ~= %NO#
      553    18919    3           THEN
      554    18920    4           DO ;
      555    18921    4              IF CPSL_PARAM.FLAGS.REPORTED_TO_USER
      556    18922    4              THEN
      557    18923    4                 B$JIT.USRERR = %NO# ;
      558    18924    4              GOTO ERRTRN ;
      559    18925    4              END ;
      560    18926    3           B$JIT.PRFLAGS.UI = %NO#;
      561    18927    3           END;
      562    18928    2        IF (B$JIT.PRFLAGS.OU)
      563    18929    2        THEN
      564    18930    3        DO;      /* Reset #3 */
      565    18931    3           CALL CXB$DELAM(ADDR(OBJECTDCB),ADDR(OBJECTDCB),M$IBEX1_NUM) ;
      566    18932    3           IF B$JIT.USRERR ~= %NO#
      567    18933    3           THEN
      568    18934    4           DO ;
      569    18935    4              IF CPSL_PARAM.FLAGS.REPORTED_TO_USER
      570    18936    4              THEN
      571    18937    4                 B$JIT.USRERR = %NO# ;
      572    18938    4              GOTO ERRTRN ;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:22   
      573    18939    4              END ;
      574    18940    3           B$JIT.PRFLAGS.OU = %NO#;
      575    18941    3           IF B$JIT.CPFLAGS1.DONTRFEXT3
      576    18942    3           THEN
      577    18943    3              B$JIT.CPFLAGS1.DONTRFEXT3 = %NO# ;
      578    18944    3           ELSE
      579    18945    3              B$JIT.FEXT(FEXT_OBJECT) = %NO#;
      580    18946    3           END;
      581    18947    2        IF (B$JIT.PRFLAGS.LS)
      582    18948    2        THEN
      583    18949    3        DO;      /* Reset  #4 */
      584    18950    3           CALL CXB$DELAM(ADDR(LISTDCB),ADDR(LISTDCB),M$IBEX1_NUM) ;
      585    18951    3           IF B$JIT.USRERR ~= %NO#
      586    18952    3           THEN
      587    18953    4           DO ;
      588    18954    4              IF CPSL_PARAM.FLAGS.REPORTED_TO_USER
      589    18955    4              THEN
      590    18956    4                 B$JIT.USRERR = %NO# ;
      591    18957    4              GOTO ERRTRN ;
      592    18958    4              END ;
      593    18959    3           B$JIT.PRFLAGS.LS = %NO#;
      594    18960    3           B$JIT.FEXT(FEXT_LIST) = %NO#;
      595    18961    3           END;
      596    18962        /* ****    Set processor flag defaults ... Always on at job step */
      597    18963    2        B$JIT.PRFLAGS.LIST=%YES#;
      598    18964    2        B$JIT.PRFLAGS.OUTPUT=%YES#;
      599    18965    2        B$JIT.PRFLAGS.COMMENT=%YES#;
      600    18966        /* ****    Reset processor non-standard syntax flag  */
      601    18967    2        B$JIT.PRFLAGS.NSSYNTAX = %NO#;
      602    18968        /*
      603    18969             ***** Reset flag that specifies rununit continuation
      604    18970                   and delete the file containing the command ...
      605    18971        */
      606    18972    2        IF B$JIT.PRFLAGS.CONTINUED
      607    18973    2        THEN
      608    18974    3        DO;
      609    18975    3           FPT_OPEN = CFPT_OPEN;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:23   
      610    18976    3           FPT_OPEN.V_ = VECTOR(FPT_OPEN.V);
      611    18977    3           FPT_OPEN.V.DCB# = M$IBEX1_NUM;
      612    18978    3           FPT_OPEN.V.ASN# = %FILE#;
      613    18979    3           FPT_OPEN.V.DELETE# = %YES#;
      614    18980    3           FPT_OPEN.NAME_ = VECTOR(CONTINUATION_COMMANDS);
      615    18981    3           CALL M$OPEN (FPT_OPEN) ALTRET(DELETE_CFILE);
      616    18982    3   DELETE_CFILE: ;   /* Ignore any altret */
      617    18983    3           B$JIT.PRFLAGS.CONTINUED = %NO#;
      618    18984    3           END;
      619    18985        /*
      620    18986          ****     Establish cumulative values for previous step if step limits
      621    18987          ****     Were in effect.
      622    18988        */
      623    18989    2        IF (B$JIT.CPFLAGS1.STEPLMT )
      624    18990    2        THEN
      625    18991    2           CALL CPJ$ESTCUM(%YES#) ALTRET(ERRTRN);
      626    18992    2        END;
      627    18993        /*
      628    18994          ***** set up U$PARAM so errors can be handled
      629    18995        */
      630    18996    1   YCINIT:
      631    18997    1     U$PARAM.ERRBUF$ = ADDR(SEG$2.ERRBUF);
      632    18998    1     U$PARAM.USERS$ = ADDR(NIL);
      633    18999    1     U$PARAM.CNTU$$ = ENTADDR(CPA$CONTINUE);
      634    19000    1     REMEMBER ERRTRN IN REMEM_VAR ;
      635    19001    1     U$PARAM.REMEM$ = ADDR(REMEM_VAR) ;
      636    19002    1     REMEMBER CONTEXT_ERR_UNWIND IN REMEM_CONTEXT_ERR;
      637    19003    1     U$PARAM.REMEM_CONTEXT_ERR$ = ADDR(REMEM_CONTEXT_ERR);
      638    19004    1     U$PARAM.SPCL$$ = ENTADDR(NIL);
      639    19005    1     U$PARAM.GETCMD$ = SEG$2.GETCMD$ ;
      640    19006    1     U$PARAM.FID_CNT = 0 ;
      641    19007    1     FIRST_SYNTAX_ERR = %YES# ;
      642    19008    2     DO I = 0 TO %MAX_FID_BLKS - 1 ;
      643    19009    2        U$PARAM.FID_BLK$(I) = ADDR(NIL) ;
      644    19010    2        END ; /* Do I */
      645    19011        /*
      646    19012             ***** remember what the last command was...
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:24   
      647    19013        */
      648    19014    1     IF B$JIT.STEPS = 0
      649    19015    1     THEN   /* Assume !JOB */
      650    19016    1        PREV_CMND = JOBCMND;
      651    19017    1     ELSE
      652    19018    1        PREV_CMND = RUNITCMND;
      653    19019        /*
      654    19020             ***** Get the next command from the user ...
      655    19021                   Also check for exceeded LIMITs ...
      656    19022        */
      657    19023    1   PROMPT:
      658    19024    1     IF B$JIT.RNST = %RS_LIMX#
      659    19025    1     THEN   /* Some LIMIT was exceeded in IBEX */
      660    19026    2     DO;
      661    19027    2        ERR_CODE = B$JIT.ERR;
      662    19028    2        IF B$JIT.CPFLAGS1 & (%CP_YCPMME# | %CP_LNKPMME#)
      663    19029    2        THEN   /* Return to user program */
      664    19030    2           GOTO E_M$YCPMME;
      665    19031    2        IF B$JIT.CPFLAGS1.YC
      666    19032    2        THEN   /* User program still under us */
      667    19033    3        DO;
      668    19034    3           FPT_XXX = CFPT_XXX;
      669    19035    3           FPT_XXX.CODE_ = VECTOR(ERR_CODE);
      670    19036    3           CALL M$XXX (FPT_XXX);
      671    19037    3           END;
      672    19038        /*
      673    19039             ***** Otherwise, logoff the user ...
      674    19040        */
      675    19041    2        B$JIT.USRRNST = B$JIT.RNST;
      676    19042    2        CALL LIMIT_ERR;
      677    19043    2        IF B$JIT.MODE = %M_BATCH#
      678    19044    2          OR B$JIT.MODE = %M_GHOST#
      679    19045    2        THEN   /* Logoff the user */
      680    19046    2           CALL CPA$BYE;
      681    19047    2        END;
      682    19048        /*
      683    19049             ***** Throw away ptr to last command.
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:25   
      684    19050                   Necessary for PREV_CMD logic ...
      685    19051        */
      686    19052    1   SETUP_READCC:
      687    19053    1     BLK$ = ADDR(NIL);
      688    19054        /*
      689    19055             ***** Read next command ...
      690    19056        */
      691    19057    1     SEG$2.GETCMD$->GET$CMD.PCB$->P$PCB.USER$ = ADDR(U$PARAM);
      692    19058    1     IF B$JIT.CPFLAGS1 & %CP_LNKPMME#
      693    19059    1     THEN
      694    19060    1        SEG$2.GETCMD$->GET$CMD.NODES$ = ADDR(LINKPMME_CMD) ;
      695    19061    1     ELSE
      696    19062    1        SEG$2.GETCMD$->GET$CMD.NODES$ = ADDR(IBEX_CMD) ;
      697    19063    1     SEG$2.GETCMD$->GET$CMD.CONTINUE_OK# = %NO# ;
      698    19064    1     SEG$2.GETCMD$->GET$CMD.PP_FUN$$ = ENTADDR(CPG$FUN$$) ;
      699    19065    1     SEG$2.GETCMD$->GET$CMD.SFROUTINE$ = ENTADDR(CPX$FIRST_PASS);
      700    19066    1     SEG$2.GETCMD$->GET$CMD.PASS = %LEAVE_PASS# ;
      701    19067    1     U$PARAM.MODE = IBEX_MODE;
      702    19068    1     SEG$2.FLAGS.CONTINUED = %NO#;
      703    19069    1     SEG$2.FLAGS.ABORT = %NO#;
      704    19070    1     CALL CPC$OPEN_LL ;
      705    19071
      706    19072    1   READCC:
      707    19073    1     SEG$2.GETCMD$->GET$CMD.OUTDCB# = SEG$2.LLDCB#;
      708    19074    1     CALL CPA$READCC (SEG$2.GETCMD$->GET$CMD,CMD_SOURCE) ALTRET (E_READCC);
      709    19075                                /* XUG$ and P$PCB$ INITed in OPENINPUT. */
      710    19076    1     FIRST_SYNTAX_ERR = %YES# ;
      711    19077    1     TRIED_2_XPAND_WND = %NO# ;
      712    19078    1     SEG$2.CPBUFF$->CP$BUFF = SUBSTR(VBASE(XUG$PARAMS.LAST)->CP$BUFF,0,
      713    19079    1       VBOUND(XUG$PARAMS.LAST)+1) ;
      714    19080    1     SEG$2.NCHARS = P$PCB.NCHARS;
      715    19081    1     IF P$PCB.NCHARS = 0
      716    19082
      717    19083    1     THEN /* null command */
      718    19084    1        GOTO CHK_BREAK;
      719    19085        %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:26   
      720    19086        /*
      721    19087        *****   If the command just read came from a command stream (as opposed to an
      722    19088        *****   interactive terminal), it must begin with a bang ('!') in column 1;
      723    19089        *****   any other case is assumed to be data intended for another program;
      724    19090        *****   in any case, IBEX will print the first record and count subsequent
      725    19091        *****   records until a valid command is encountered, i.e. one which has the
      726    19092        *****   bang in column 1.  A count of skipped records will be output.
      727    19093        */
      728    19094    2     DO CASE (CMD_SOURCE);
      729    19095    2      CASE (XEQFILE,BATCHJCL);
      730    19096    2        IF NOT SEG$2.GETCMD$->GET$CMD.RCVD_PROMPT#
      731    19097    2        THEN
      732    19098    3        DO;   /* Complain */
      733    19099    3   DATA_IGNORED_LOOP:
      734    19100    3           REMEMBER CNTL_Y_INT IN SEG$2.REMEM$->REMEM$VAR ;
      735    19101    3           SEG$2.FLAGS.USE_REMEM = %YES# ;
      736    19102    3           ERR_CODE = %NO# ;
      737    19103    3           SEG$2.FPT_WRITECC$ -> FPT$WRITE.BUF_ =
      738    19104    3             VECTOR(SEG$2.CPBUFF$ -> CP$BUFF);
      739    19105    3           CALL CONCAT (SEG$2.CPBUFF$ -> CP$BUFF,
      740    19106    3             'Data ignored:  ',SUBSTR(VBASE(XUG$PARAMS.LAST)->CP$BUFF,
      741    19107    3             0,VBOUND(XUG$PARAMS.LAST)+1)) ;
      742    19108    3           CALL CPE$DIAGOUT (SEG$2.FPT_WRITECC$);
      743    19109        /*
      744    19110             ***** Count how many data records ...
      745    19111        */
      746    19112    3           I = 1;
      747    19113    3           SEG$2.GETCMD$->GET$CMD.NODES$ = ADDR(IBEX_CMD) ;
      748    19114    3           SEG$2.GETCMD$->GET$CMD.PCB$->P$PCB.USER$ = ADDR(U$PARAM) ;
      749    19115    4           DO WHILE (NOT SEG$2.GETCMD$->GET$CMD.RCVD_PROMPT#) ;
      750    19116    4              IF B$JIT.NEXTCC = %CC_FROMUC#
      751    19117    4                OR B$JIT.NEXTCC = %CC_FROMNO#
      752    19118    4                OR ERR_CODE = E_BANG_EOD
      753    19119    4              THEN
      754    19120    4                 GOTO TOTAL_RECORDS_IGNORED;
      755    19121    4              ERR_CODE = %NO# ;
      756    19122    4              CALL CPA$READCC (SEG$2.GETCMD$->GET$CMD,CMD_SOURCE)
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:27   
      757    19123    4              WHENALTRETURN
      758    19124    5              DO ;
      759    19125    5                 ERR_CODE = SEG$2.GETCMD$->GET$CMD.ERR# ;
      760    19126    5                 SEG$2.GETCMD$->GET$CMD.PCB$->
      761    19127    5                   P$PCB.USER$ = ADDR(U$PARAM) ;
      762    19128    5                 END ; /* Whenaltreturn Do */
      763    19129    4              XUG$ = SEG$2.XUG_INIT$->XUG$INIT.PARAMS$ ;
      764    19130    4              SEG$2.CPBUFF$->CP$BUFF = SUBSTR(VBASE(XUG$PARAMS.LAST)->
      765    19131    4                CP$BUFF,0,VBOUND(XUG$PARAMS.LAST)+1) ;
      766    19132    4              SEG$2.NCHARS = P$PCB.NCHARS;
      767    19133    4              I = I + 1;
      768    19134    4              END;   /* Do while ... end */
      769    19135    3           I = I - 1;
      770    19136    3   TOTAL_RECORDS_IGNORED:
      771    19137    3           CALL BINCHAR(IGNORED.TXT,I);
      772    19138    3           CALL CPE$RZEROS(IGNORED.TXT,7,I);
      773    19139    3           IGNORED.CNT = I;
      774    19140    3           CALL CPC$WRITEMSGE(E_RECS_IGNORED,,IGNORED,,,%YES#);
      775    19141    3           SEG$2.FLAGS.USE_REMEM = %NO# ;
      776    19142    3           IF NOT SEG$2.GETCMD$->GET$CMD.RCVD_PROMPT#
      777    19143    3           THEN   /* Can't parse this record */
      778    19144    3              GOTO CHK_BREAK;
      779    19145    3           IF ERR_CODE ~= %NO#
      780    19146    3           THEN
      781    19147    3              GOTO E_READCC ;
      782    19148        /**/
      783    19149        /*E*    ERROR:   CPA-E$RECS_IGNORED-C
      784    19150                MESSAGE:  %U1 records ignored
      785    19151        */
      786    19152    3           END;   /* Do ... Complain ... end */
      787    19153    2      END;  /* Do case ... end */
      788    19154        %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:28   
      789    19155        /*
      790    19156            ***** Command ok to parse ...
      791    19157        */
      792    19158        /*
      793    19159             ***** Do initial parse and determine which command ...
      794    19160        */
      795    19161    1     SEG$2.FLAGS.RUNITCMD = %NO#;
      796    19162    1     SEG$2.FLAGS.CONTINUED = %NO#;
      797    19163    1     BLK$ = SEG$2.GETCMD$->GET$CMD.OUT$;
      798    19164        /*
      799    19165             ***** If this command has a label then BLK$ must
      800    19166                   be modified to point to the command node
      801    19167                   not the label, and OFFSET must point to the
      802    19168                   first character of the command. This offset
      803    19169                   is needed for reporting errors so that the
      804    19170                   arrows will point to the correct position ...
      805    19171        */
      806    19172    1     IF BLK$ -> P$B.TEMP
      807    19173
      808    19174    1     THEN   /* Label. Fix BLK$ */
      809    19175    2     DO;
      810    19176    2        BLK$ = BLK$ -> P$B.SUBLK$(1);
      811    19177    2        END;
      812    19178        /*
      813    19179        **** Check if run unit type is a debugger and change code to debugcmnd.
      814    19180        */
      815    19181    1     CMD_PARSING = BLK$ -> P$B.CODE;
      816    19182    1     IF CMD_PARSING = RUNITCMND
      817    19183    1     THEN
      818    19184    1        CALL CHK_RUTYPE(BLK$ -> P$B) ALTRET (CONTEXT_ERR) ;
      819    19185        /*
      820    19186             ***** If at yc, then may want to rundown/flush cmd stream...
      821    19187        */
      822    19188    1     IF B$JIT.CPFLAGS1.YC
      823    19189    1       OR SEG$2.FLAGS.CMD_STR_INT
      824    19190    1     THEN
      825    19191    1        CALL CHKQUIT (BLK$ -> P$B) ALTRET(PROMPT);
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:29   
      826    19192        /*
      827    19193             ***** If the last rununit aborted, then
      828    19194                   flush the command stream, unless the next
      829    19195                   command is: Delta, pmd or if. This means that
      830    19196                   BATCH jobs are logged off, and XEQ canceled...
      831    19197        */
      832    19198    1     IF (B$JIT.USRRNST = %RS_XXX#     /* Aborted by User pgm */
      833    19199    1       OR B$JIT.USRRNST = %RS_SSP#   /* Aborted by Special Shared Proc */
      834    19200    1       OR B$JIT.USRRNST = %RS_ABRT#) /* Aborted by Monitor */
      835    19201    1       AND NOT(B$JIT.CPFLAGS1.YCPMME )
      836    19202    1       AND NOT(B$JIT.CPFLAGS1.LNKPMME )
      837    19203    1       AND NOT(B$JIT.CPFLAGS1.SKIPABORT )
      838    19204    1       AND (B$JIT.MODE = %M_BATCH# OR CMD_SOURCE = XEQFILE)
      839    19205
      840    19206    1     THEN
      841    19207    2     DO CASE (CMD_PARSING);
      842    19208    2      CASE (DEBUGCMND,
      843    19209    2       NULLCMND,
      844    19210    2       PMDCMND);
      845    19211    2        B$JIT.CPFLAGS1.SKIPABORT = %YES#;
      846    19212    2        GOTO CHK_SYNTAX;
      847    19213    2      CASE (IFCMND);
      848    19214    2        GOTO CHK_SYNTAX;
      849    19215    2      CASE (ELSE);
      850    19216    2        CALL CPC$WRITEMSGE (E_ABRTBATCH);
      851    19217    2        CALL CPA$FLUSH;
      852    19218    2        IF B$JIT.STEPCC = 0
      853    19219    2        THEN
      854    19220    2           B$JIT.STEPCC = %CC_XXX# ;
      855    19221    2        GOTO CHK_BREAK;
      856    19222    2      END;
      857    19223        /*
      858    19224             ***** If already at JOBSTEP then skip this RUNDOWN code...
      859    19225        */
      860    19226    1     IF B$JIT.CPFLAGS1.JSTEP
      861    19227    1     THEN
      862    19228    1        GOTO CHK_SYNTAX;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:30   
      863    19229        /*
      864    19230             ***** If this command is a rununit, then rundown the user...
      865    19231        */
      866    19232    2     DO CASE(CMD_PARSING);
      867    19233    2      CASE (EDITCMND,
      868    19234    2       SIXEDITCMND,
      869    19235    2       EFTCMND,
      870    19236    2       FEPLINKCMND,
      871    19237    2       LINKCMND,
      872    19238    2       PCLCMND,
      873    19239    2       RUMCMND,
      874    19240    2       RUNITCMND,
      875    19241    2       STARTCMND,
      876    19242    2       UCMND);
      877    19243        /*
      878    19244             ***** Users of M$YC must set the LINK bit in the FPT_YC if they wish to
      879    19245                   pass a command which would cause the current program to be run down.
      880    19246                   If FPT_YC.F.LINK is set, a linking-flavored M$CPEXIT is issued;  if
      881    19247                   LINK is not set, an immediate ALTRETURN to the caller occurs.
      882    19248        */
      883    19249    2        IF B$JIT.CPFLAGS1.YCPMME
      884    19250
      885    19251    2        THEN
      886    19252    2           IF B$PS1$ -> FPTV$YC.LINK
      887    19253    2           THEN
      888    19254    3           DO ;
      889    19255    4              DO CASE(CMD_PARSING) ;
      890    19256    4               CASE (  RUMCMND,
      891    19257    4                STARTCMND,
      892    19258    4                UCMND) ;
      893    19259    4                 ERR_CODE = E_NJOBSTEP ;
      894    19260    4                 GOTO E_M$YCPMME ;
      895    19261    4               END ; /* Do Case */
      896    19262        /*E*    ERROR: CPA-E$NJOBSTEP-0
      897    19263                MESSAGE: That command is allowed only at Job Step.
      898    19264                DESCRIPTION: User is not allowed to use selected commands
      899    19265                             when using the M$YC pmme to call IBEX with the
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:31   
      900    19266                             LINK# bit set.
      901    19267        */
      902    19268        /*
      903    19269               ***** If we have M$LL and we own it
      904    19270                     release it before exiting ...
      905    19271          */
      906    19272    3              IF SEG$2.LLDCB# ~= 0
      907    19273    3                AND SEG$2.FLAGS.IBEX_OWNS_M$LL
      908    19274    3                AND SEG$2.LLDCB# ~= M$UC_NUM
      909    19275    3                AND SEG$2.LLDCB# ~= M$IBEX2_NUM
      910    19276    3              THEN
      911    19277    4              DO;   /* Release M$LL */
      912    19278    4                 CALL CPC$RELDCB (M$LL_NUM);
      913    19279    4                 END;
      914    19280    3              SEG$2.FPT_CPEXIT$->FPT$CPEXIT = CFPT_CPEXIT;
      915    19281    3              SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V_ =
      916    19282    3                VECTOR(SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V);
      917    19283    3              SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V.LINK# = '1'B;
      918    19284    3              CALL M$CPEXIT (SEG$2.FPT_CPEXIT$->FPT$CPEXIT) WHENALTRETURN
      919    19285    4              DO ;
      920    19286    4                 ERR_CODE = B$JIT.ERR ;
      921    19287    4                 GOTO E_M$YCPMME ;
      922    19288    4                 END ; /* Whenaltreturn Do */
      923    19289        /*
      924    19290            **** Get M$IBEX and M$IBEX1 - two dcbs IBEX is guaranteed
      925    19291        */
      926    19292    3              IF SEG$2.LLDCB# = 0
      927    19293    3              THEN  /* Need to get M$LL again */
      928    19294    4              DO ;
      929    19295    4                 CALL CPC$OPEN_LL;
      930    19296    4                 SEG$2.GETCMD$->GET$CMD.OUTDCB# = SEG$2.LLDCB#;
      931    19297    4                 END ; /* Then Do */
      932    19298    3              CALL CPC$GETDCB (M$IBEX_NUM, IBEXTXTC);
      933    19299    3              CALL CPC$GETDCB (M$IBEX1_NUM, IBEX1TXTC);
      934    19300    3              END ; /* Then Do */
      935    19301    2           ELSE
      936    19302    3           DO ;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:32   
      937    19303        /*E*    ERROR: CPA-E$YC_RUND-0
      938    19304                MESSAGE: That command would cause your program to be aborted.
      939    19305                DESCRIPTION: User is not allowed to use selected commands
      940    19306                             when using the M$YC pmme to call IBEX
      941    19307        */
      942    19308    3              ERR_CODE = E_YC_RUND;
      943    19309    3              GOTO E_M$YCPMME;
      944    19310    3              END; /* Else Do */
      945    19311    2        IF SEG$2.GETCMD$->GET$CMD.RCVD_PROMPT# AND NOT B$JIT.CPFLAGS1.YCPMME
      946    19312    2        THEN
      947    19313    3        DO ;
      948    19314    3           CALL CONCAT(B$JIT.CCBUF, '!', SUBSTR(VBASE(XUG$PARAMS.LAST)->
      949    19315    3             CP$BUFF,0,VBOUND(XUG$PARAMS.LAST)+1)) ;
      950    19316    3           B$JIT.CCARS = P$PCB.NCHARS + 1 ;
      951    19317    3           K =  1 ;
      952    19318    3           END ; /* Then Do */
      953    19319    2        ELSE
      954    19320    3        DO ;
      955    19321    3           B$JIT.CCBUF = SUBSTR(VBASE(XUG$PARAMS.LAST)->CP$BUFF,0,
      956    19322    3             VBOUND(XUG$PARAMS.LAST)+1) ;
      957    19323    3           B$JIT.CCARS = P$PCB.NCHARS ;
      958    19324    3           K =  0 ;
      959    19325    3           END ; /* Else Do */
      960    19326    2        IF SEG$2.GETCMD$->GET$CMD.CONTINUED#
      961    19327    2        THEN
      962    19328    2           CALL INSERT(B$JIT.CCBUF, VBASE(XUG$PARAMS.RLTVEC)->XUG$RLT(1)+K-1, 1,
      963    19329    2             ';') ;
      964    19330    2        B$JIT.CPFLAGS1.BUFFULL = %YES#;
      965    19331    2        IF NOT (B$JIT.CPFLAGS1 & %(CP_YCPMME# | CP_LNKPMME#) )
      966    19332    2        THEN
      967    19333    2           CALL CPC$QUIT ;
      968    19334             /* CPC$QUIT re-enters this code at the top */
      969    19335    2        B$JIT.PRFLAGS.NSSYNTAX = %NO# ;
      970    19336    2        B$JIT.PRFLAGS.SI = %NO# ;
      971    19337    2        B$JIT.PRFLAGS.UI = %NO# ;
      972    19338    2        B$JIT.PRFLAGS.OU = %NO# ;
      973    19339    2        B$JIT.PRFLAGS.LS = %NO# ;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:33   
      974    19340    2      END; /* do case ... end */
      975    19341        /*
      976    19342             ***** Parse the command...
      977    19343                   First setup info for context checking...
      978    19344        */
      979    19345    1   CHK_SYNTAX:
      980    19346        /*
      981    19347             ***** Do any setup necessary for the call to CPD$SYNTAX...
      982    19348                   All commands except ? or ?? must pass thru CPD$SYNTAX
      983    19349                   commands which are ignored by IBEX are not
      984    19350                   checked by CPD$SYNTAX. Control passes directly
      985    19351                   to CMND_CASE so that these commands may be echoed...
      986    19352        */
      987    19353    2     DO CASE(CMD_PARSING);
      988    19354    2      CASE(LIMITCMND,ORESCMND,RELEASECMND,ACQUIRECMND);
      989    19355        /*
      990    19356             ***** BATCH and TP users are not allowed to use
      991    19357                   !ORES and !ACQUIRE commands ...
      992    19358        */
      993    19359    2        IF (CMD_PARSING = ORESCMND
      994    19360    2          OR CMD_PARSING = ACQUIRECMND)
      995    19361    2          AND (B$JIT.MODE = %M_BATCH#
      996    19362    2          OR B$JIT.MODE = %M_TP#)
      997    19363    2        THEN   /* Dont process */
      998    19364    3        DO;   /* Make NULL. Parse, echo and nothing else */
      999    19365    3   IGNORE_RES: ;
     1000    19366    3           CMD_PARSING = NULLCMND;
     1001    19367    3           END;
     1002    19368    2        CALL CPC$RDUSERS (M$IBEX1_NUM,%IN#) ALTRET(ERRTRN);
     1003    19369    2        CALL CPA$GETRES ALTRET(ERRTRN);
     1004    19370    2        U$PARAM.USERS$ = SEG$2.USERS$;
     1005    19371    2        U$PARAM.PSEUDO$ = SEG$2.PSEUDO$;
     1006    19372    2        U$PARAM.PHYS$ = SEG$2.PHYS$;
     1007    19373    2      CASE(RESOURCECMND);
     1008    19374        /*E*    ERROR: CPA-E$RESINVALID-0
     1009    19375                MESSAGE: The !RESOURCE command is only valid in batch.
     1010    19376                MESSAGE1: You may want to use the !ORES command.
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:34   
     1011    19377        */
     1012    19378    2        IF CMD_SOURCE = XEQFILE
     1013    19379    2        THEN
     1014    19380    2           GOTO IGNORE_RES; /* Always ignore from XEQ */
     1015    19381    2        IF B$JIT.MODE ~= %M_BATCH#
     1016    19382    2        THEN   /* Bitch at user */
     1017    19383    3        DO ;
     1018    19384    3           CALL CPC$WRITEMSGE (E_RESINVALID);
     1019    19385    3           GOTO IGNORE_RES;
     1020    19386    3           END ;  /* Then Do */
     1021    19387        /*E*    ERROR: CPA-E$MPRESOURCE-C
     1022    19388                MESSAGE: !RESOURCE command must immediately follow the !JOB command
     1023    19389        */
     1024    19390    2        IF B$JIT.MODE = %M_BATCH#
     1025    19391    2          AND PREV_CMND ~= JOBCMND
     1026    19392    2          AND DCBADDR(DCBNUM(M$UC))->F$DCB.CRECNO > 2
     1027    19393
     1028    19394    2        THEN /* Resource cmd in wrong place */
     1029    19395    2           CALL CPC$WRITEMSGE (E_MPRESOURCE);
     1030    19396    2        GOTO IGNORE_RES; /* parse and echo but ignore the cmnd */
     1031    19397    2      CASE(NULLCMND,DEFAULTCMND);
     1032    19398    2        ADDR(SEG$2.ERRBUF) -> ERR$BLK.FIRST = 0;
     1033    19399    2        ADDR(SEG$2.ERRBUF) -> ERR$BLK.NEXT = 0;
     1034    19400    2        GOTO CMND_CASE; /* echo but ignore the cmnd */
     1035    19401    2      CASE(JOBCMND);
     1036    19402    2        IF B$JIT.MODE = %M_BATCH# AND CMD_SOURCE = BATCHJCL
     1037    19403    2        THEN    /* Write heading line */
     1038    19404    2           CALL CPE$TIME(P$PCB);
     1039    19405    2        CMD_PARSING = NULLCMND; /* parse and echo but ignore the cmnd */
     1040    19406    2      CASE(QUES1CMND);
     1041    19407    2        CALL CXG$MOREMSG(SEG$2.GETCMD$->GET$CMD) WHENALTRETURN
     1042    19408    3        DO ;
     1043    19409    3           SEG$2.GETCMD$->GET$CMD.ERR_CODE = E_NO_MORE ;
     1044    19410    3           CALL CXG$ERRMSG(SEG$2.GETCMD$->GET$CMD) ;
     1045    19411    3           END ; /* Whenaltreturn Do */
     1046    19412        /*E*   ERROR:   CPA-E$NO_MORE
     1047    19413               MESSAGE: No messages available.
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:35   
     1048    19414               MESSAGE1: Th Th Th That's all fffolks!
     1049    19415                                                                          */
     1050    19416    2        BLK$ -> P$B.CODE = PREV_CMND;
     1051    19417    2        CMD_PARSING = PREV_CMND;
     1052    19418    2        GOTO CHK_BREAK;
     1053    19419    2      CASE(QUES2CMND);
     1054    19420    2        CALL CXG$ALLMSG(SEG$2.GETCMD$->GET$CMD) WHENALTRETURN
     1055    19421    3        DO ;
     1056    19422    3           SEG$2.GETCMD$->GET$CMD.ERR_CODE = E_NO_MORE ;
     1057    19423    3           CALL CXG$ERRMSG(SEG$2.GETCMD$->GET$CMD) ;
     1058    19424    3           END ; /* Whenaltreturn Do */
     1059    19425    2        GOTO CHK_BREAK;
     1060    19426    2      CASE (MINICMND,RUNITCMND);
     1061    19427        /*
     1062    19428             ***** The MINI command is a restricted command.
     1063    19429                   CPM$MINI determines if it may be used and
     1064    19430                   ALTRETURNS if not allowed. If not allowed then
     1065    19431                   it should be treated as a runitcmnd ...
     1066    19432        */
     1067    19433    2        IF CMD_PARSING = MINICMND
     1068    19434    2        THEN
     1069    19435    3        DO;
     1070    19436    3           CALL CPM$MINI ALTRET(E_MINI);
     1071    19437    3           GOTO CMND_CASE;   /* echo but ignore the cmnd */
     1072    19438    3           END;
     1073    19439    2        ELSE   /* It's a rununit */
     1074    19440    3        DO;
     1075    19441    3   E_MINI:
     1076    19442    3           SEG$2.FLAGS.RUNITCMD = %YES#;
     1077    19443    3           BLK$ -> P$B.CODE = RUNITCMND;
     1078    19444    3           CMD_PARSING = RUNITCMND;
     1079    19445    3           TEMPBUF = SUBSTR(VBASE(XUG$PARAMS.LAST) -> CP$BUFF,0,
     1080    19446    3             VBOUND(XUG$PARAMS.LAST)+1) ;             /* First rec */
     1081    19447    3           K = P$PCB.NCHARS;
     1082    19448    3           END;
     1083    19449    2      CASE(ADJUSTCMND, ERASECMND, HOLDCMND, LDEVCMND, PRINTCMND, RESETCMND,
     1084    19450    2             SETCMND, TERMINALCMND, UNHOLDCMND) ;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:36   
     1085    19451    2        BLK$ = SEG$2.GETCMD$->GET$CMD.OUT$ ;
     1086    19452    2        CMD_PARSING = BLK$ -> P$B.CODE;
     1087    19453    2        CPSL_PARAM = %NO# ;
     1088    19454    2        CPSL_PARAM.FLAGS.INHIBIT_ERRMSG = SEG$2.FLAGS.SKIP_ERRS ;
     1089    19455    2        CPSL_PARAM.WORK_DCB# = M$IBEX1_NUM ;
     1090    19456    2        IF SEG$2.GETCMD$->GET$CMD.RCVD_PROMPT#
     1091    19457    3        THEN DO; /* Need to put the prompt back in for CXC$COMMAND */
     1092    19458    3           CALL CONCAT(SEG$2.CPBUFF$->CP$BUFF, '!', SUBSTR(VBASE(XUG$PARAMS.LAST)
     1093    19459    3             ->CP$BUFF,0,VBOUND(XUG$PARAMS.LAST)+1)) ;
     1094    19460    3           VBOUND(XUG$PARAMS.LAST) = VBOUND(XUG$PARAMS.LAST)+1;
     1095    19461    3           END;
     1096    19462    2        SEG$2.GETCMD$->GET$CMD.TEXT_ = XUG$PARAMS.LAST ;
     1097    19463    2        VBASE(SEG$2.GETCMD$->GET$CMD.TEXT_) = SEG$2.CPBUFF$ ;
     1098    19464    2        SEG$2.GETCMD$->GET$CMD.CONTINUE_OK# = %YES# ;
     1099    19465    2        IF CMD_SOURCE = BATCHJCL OR (CMD_SOURCE = XEQFILE AND
     1100    19466    2          (B$JIT.CPFLAGS1 & %CP_ECHO#))
     1101    19467    2        THEN
     1102    19468    2           IF SEG$2.FLAGS.SKIP_ECHO
     1103    19469    2           THEN
     1104    19470    2              CPSL_PARAM.FLAGS.ECHO = %DONT_ECHO ;
     1105    19471    2           ELSE
     1106    19472    2              CPSL_PARAM.FLAGS.ECHO = %ECHO_IT ;
     1107    19473    2        ELSE
     1108    19474    2           CPSL_PARAM.FLAGS.ECHO = %ECHO_IF_ERROR ;
     1109    19475    2        IF CMD_SOURCE = XEQFILE
     1110    19476    2        THEN
     1111    19477    2           CALL CPF$SET_PROMPT (SEG$2.GETCMD$->GET$CMD.RPROMPT_, PRMT_R);
     1112    19478    2        ELSE
     1113    19479    2           SEG$2.GETCMD$->GET$CMD.RPROMPT_ = VECTOR(NIL) ;
     1114    19480    2        CALL CXC$COMMAND(SEG$2.GETCMD$->GET$CMD,CPSL_PARAM) WHENALTRETURN
     1115    19481    3        DO ;
     1116    19482    3           B$JIT.USRERR = %NO# ;
     1117    19483    3           SEG$2.GETCMD$->GET$CMD.TEXT_ = VECTOR(NIL) ;
     1118    19484    3           IF CPSL_PARAM.FLAGS.REPORTED_TO_USER
     1119    19485    3           THEN
     1120    19486    3              GOTO ERRXIT ; /* echo not required */
     1121    19487    3           ELSE
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:37   
     1122    19488    4           DO ;
     1123    19489    4              CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF),
     1124    19490    4                CPSL_PARAM.ERR_CPOS,CPSL_PARAM.ERRCODE);
     1125    19491    4              GOTO CONTEXT_ERR ;
     1126    19492    4              END ;
     1127    19493    3           END ; /* Whenaltreturn Do */
     1128    19494    2        SEG$2.GETCMD$->GET$CMD.TEXT_ = VECTOR(NIL) ;
     1129    19495    2        GOTO CHK_BREAK ;
     1130    19496    2      CASE(DITERMINALCMND);
     1131    19497    2        CALL CPA$ECHOCC(CMD_SOURCE,%NO#) ;
     1132    19498    2        CALL CPF$TERMINAL(P$PCB) ALTRET(ERRTRN);
     1133    19499    2        GOTO CHK_BREAK ;
     1134    19500    2      CASE(WHENCMND,WHENLEVEL0CMND,WHENSHORTCMND) ;
     1135    19501    2        CALL CPA$ECHOCC(CMD_SOURCE,%NO#) ;
     1136    19502    2        CALL CPG$WHEN(P$PCB) ALTRET (ERRTRN) ;
     1137    19503    2        GOTO CHK_BREAK ;
     1138    19504        /**/
     1139    19505    2      END; /* do case ... end */
     1140    19506        /*
     1141    19507             ***** Before checking for syntax and context errors
     1142    19508                   it is necessary to throw away any old errors...
     1143    19509        */
     1144    19510    1   CALL_SYNTAX_CHECKER:
     1145    19511    1     ADDR(SEG$2.ERRBUF) -> ERR$BLK.FIRST = 0;
     1146    19512    1     ADDR(SEG$2.ERRBUF) -> ERR$BLK.NEXT = 0;
     1147    19513    1     SEG$2.GETCMD$->GET$CMD.SFROUTINE$ = ENTADDR(CPD$SYNTRY) ;
     1148    19514
     1149    19515    1     CALL CPD$SYNTAX (SEG$2.GETCMD$->GET$CMD) WHENALTRETURN
     1150    19516    2     DO;
     1151    19517    2        IF CMD_PARSING = NULLCMND THEN
     1152    19518    3        DO;
     1153    19519    3           SEG$2.FLAGS.SKIP_ECHO = %NO#;
     1154    19520    3           GOTO CHK_BREAK;
     1155    19521    3           END;
     1156    19522    2        GOTO SYNTAX_ERR;
     1157    19523    2        END;
     1158    19524        /**/
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:38   
     1159    19525    1     IF SEG$2.FLAGS.RUNITCMD AND SEG$2.FLAGS.CONTINUED
     1160    19526    1     THEN
     1161    19527    1        CALL CPA$WR_CONTFILE (SEG$2.GETCMD$->GET$CMD, %NO#)
     1162    19528    1        WHENALTRETURN
     1163    19529    2        DO ;
     1164    19530    2           SEG$2.GETCMD$->GET$CMD.ERR# = B$TCB.ALT$ -> B$ALT.ERR ;
     1165    19531    2           GOTO E_READCC ;
     1166    19532    2           END ; /* Whenaltreturn Do */
     1167    19533    1     BLK$ = SEG$2.GETCMD$->GET$CMD.OUT$; /* Final Parse output ptr */
     1168    19534        /*
     1169    19535             ***** If this is only being parsed to ignore it, ignore any errors too.
     1170    19536        */
     1171    19537    1     IF CMD_PARSING = NULLCMND
     1172    19538    1     THEN
     1173    19539    2     DO;
     1174    19540    2        IF P$PCB.OUT$->P$B.CODE ~= IFCMND
     1175    19541    2        THEN /* But keep parsing IF command objects until they run out */
     1176    19542    2           GOTO CMND_CASE;
     1177    19543    2        P$PCB.OUT$ = P$PCB.OUT$->P$B.SUBLK$(1)->P$B.SUBLK$(0);
     1178    19544    2        SUBSTR(P$PCB.TEXT$->CP$BUFF,0,P$PCB.OUT$->P$B.CPOS) = ' ';
     1179    19545    2        P$PCB.CONTINUE = '1'B;
     1180    19546    3        DO CASE (P$PCB.OUT$->P$B.CODE);
     1181    19547    3         CASE (LIMITCMND,ORESCMND,ACQUIRECMND,RELEASECMND,RESOURCECMND);
     1182    19548    3           GOTO IGNORE_RES;
     1183    19549    3         END;
     1184    19550    2        GOTO CALL_SYNTAX_CHECKER;
     1185    19551    2        END;
     1186    19552        /*
     1187    19553             ***** If this command is a RUN UNIT call then don't
     1188    19554                   worry about SYNTAX/CONTEXT errors. It is a
     1189    19555                   non-standard syntax ...
     1190    19556        */
     1191    19557    1     IF ADDR(SEG$2.ERRBUF) -> ERR$BLK.FIRST ~= 0
     1192    19558    1     THEN
     1193    19559    2     DO;   /* Some CONTEXT errors found */
     1194    19560    2        IF SEG$2.FLAGS.RUNITCMD
     1195    19561    2        THEN
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:39   
     1196    19562    3        DO;   /* Make into NON-STANDARD syntax */
     1197    19563    3           B$JIT.PRFLAGS.NSSYNTAX = %YES#;
     1198    19564    3           P$PCB.OUT$ -> P$B.NSUBLKS = 1;   /* Only RUNUNIT name */
     1199    19565    3           ADDR(SEG$2.ERRBUF) -> ERR$BLK.FIRST = 0 ;
     1200    19566    3           ADDR(SEG$2.ERRBUF) -> ERR$BLK.NEXT = 0 ;
     1201    19567    3           END;
     1202    19568    2        ELSE  /* Point out error of their ways */
     1203    19569    2           GOTO CONTEXT_ERR;
     1204    19570    2        END;
     1205    19571    1     CMD_PARSING = BLK$ -> P$B.CODE;
     1206    19572        /*
     1207    19573             ***** Only rununit type commands may be started under a
     1208    19574                   debugger. The SKIPABORT flag in CPFLAGS1 must be reset ...
     1209    19575        */
     1210    19576    2     DO CASE(CMD_PARSING);
     1211    19577    2      CASE(RUNITCMND,
     1212    19578    2       PCLCMND,
     1213    19579    2       EDITCMND,
     1214    19580    2       SIXEDITCMND,
     1215    19581    2       EFTCMND,
     1216    19582    2       FEPLINKCMND,
     1217    19583    2       LINKCMND);
     1218    19584    2        B$JIT.CPFLAGS1.SKIPABORT = %NO#;
     1219    19585    2      CASE(ELSE);
     1220    19586    2        B$JIT.CPFLAGS1.DELTA = %NO#;
     1221    19587    2      END;
     1222    19588                   %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:40   
     1223    19589    1   CMND_CASE:
     1224    19590        /*
     1225    19591             ***** BLANK any PASSWORDs....
     1226    19592        */
     1227    19593    1     CALL CXG$BLANK_PASSWORD(SEG$2.GETCMD$->GET$CMD, BLK$->P$B) ALTRET(E_READCC) ;
     1228    19594        /*
     1229    19595             ***** Echo the command...
     1230    19596        */
     1231    19597    1     CALL CPA$ECHOCC (CMD_SOURCE,%NO#); /* Echo thru M$LL */
     1232    19598        /*
     1233    19599             ***** If a BREAK or Y-c was hit,
     1234    19600                   then don't execut the command ...
     1235    19601        */
     1236    19602    1     IF B$JIT.CPFLAGS1.BRK
     1237    19603    1     THEN
     1238    19604    1        GOTO CHK_BREAK;
     1239    19605        /*
     1240    19606             ***** reset B$JIT.USERERR ...
     1241    19607        */
     1242    19608        /**/
     1243    19609    1     IF CMD_PARSING ~= PMDCMND       /* PMD wants to repeat the errmsg */
     1244    19610    1     THEN
     1245    19611    1        B$JIT.USRERR = %NO# ;
     1246    19612        /**/
     1247    19613        /*
     1248    19614             ***** Call the routine to handle this command...
     1249    19615        */
     1250    19616    2     DO CASE(CMD_PARSING);
     1251    19617        /**/
     1252    19618    2      CASE(ACCEPTCMND);
     1253    19619    2        CALL CPI$ACCEPT(P$PCB) ALTRET(ERRTRN);
     1254    19620        /**/
     1255    19621    2      CASE(ACQUIRECMND);
     1256    19622    2        CALL CPO$ACQUIRE(P$PCB) ALTRET(ERRTRN);
     1257    19623        /**/
     1258    19624        /**/
     1259    19625    2      CASE(ATITLECMND);
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:41   
     1260    19626    2        CALL CPB$ATITLE(P$PCB)       ALTRET(ERRTRN);
     1261    19627        /**/
     1262    19628    2      CASE(BACKUPCMND);
     1263    19629    2        CALL CPA$BACKUP(P$PCB) ALTRET(ERRTRN);
     1264    19630        /**/
     1265    19631    2      CASE(BATCHCMND);
     1266    19632    2        CALL CPH$BATXEQ(P$PCB) ALTRET(ERRTRN);
     1267    19633        /**/
     1268    19634    2      CASE(BYECMND);
     1269    19635        /*
     1270    19636          ****     Reset usrrnst if not BATCH user so we only get 'OFF' on oc.
     1271    19637        */
     1272    19638    2        IF B$JIT.MODE ~= %M_BATCH#
     1273    19639    2        THEN
     1274    19640    2           B$JIT.USRRNST = '0'B;
     1275    19641    2        CALL CPA$BYE(P$PCB);
     1276    19642        /**/
     1277    19643    2      CASE(CANCELCMND);
     1278    19644    2        CALL CPK$CANCEL(P$PCB) ALTRET(ERRTRN);
     1279    19645        /**/
     1280    19646    2      CASE(CHECKCMND);
     1281    19647    2        CALL CPK$CHECK(P$PCB) ALTRET(ERRTRN);
     1282    19648        /**/
     1283    19649    2      CASE(COMMENTCMND);
     1284    19650    2        CALL CPE$COMMENT(P$PCB) ALTRET(ERRTRN);
     1285    19651        /**/
     1286    19652    2      CASE(COUPLECMND);
     1287    19653    2        CALL CPC$UNIMPCMD;
     1288    19654    2        CALL CPB$COUPLE(P$PCB) ALTRET(ERRTRN);
     1289    19655        /**/
     1290    19656    2      CASE(DECOUPLECMND);
     1291    19657    2        CALL CPC$UNIMPCMD;
     1292    19658    2        CALL CPB$DECOUPLE(P$PCB) ALTRET(ERRTRN);
     1293    19659        /**/
     1294    19660    2      CASE(DEBUGCMND,
     1295    19661    2          RUMCMND);
     1296    19662    2        B$JIT.CPFLAGS1.YCGET = '0'B;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:42   
     1297    19663    2        CALL CPA$DEBUG(P$PCB) ALTRET(ERRTRN);
     1298    19664        /**/
     1299    19665    2      CASE(DIRECTORYCMND);
     1300    19666    2        CALL CPI$DIRECTORY(P$PCB) ALTRET(ERRTRN);
     1301    19667        /**/
     1302    19668    2      CASE(DISPLAYCMND);
     1303    19669    2        CALL CPE$DISPLAY(P$PCB) ALTRET(ERRTRN);
     1304    19670        /**/
     1305    19671    2      CASE(DONTCMND);
     1306    19672    2        CALL CPE$DONT(P$PCB) ALTRET(ERRTRN);
     1307    19673        /**/
     1308    19674    2      CASE(DRIBBLECMND);
     1309    19675    2        CALL CPI$DRIBBLE(P$PCB) ALTRET(ERRTRN);
     1310    19676        /**/
     1311    19677    2      CASE(ECHOCMND);
     1312    19678    2        CALL CPE$ECHO(P$PCB);
     1313    19679        /**/
     1314    19680    2      CASE(EDITCMND);
     1315    19681    2        CALL CPA$EDIT(P$PCB) ALTRET(ERRTRN);
     1316    19682        /**/
     1317    19683    2      CASE(EFTCMND);
     1318    19684    2        CALL CPA$EFT(P$PCB) ALTRET(ERRTRN);
     1319    19685        /**/
     1320    19686    2      CASE(EJECTCMND) ;
     1321    19687    2        CALL CPE$EJECT(P$PCB) ALTRET(ERRTRN);
     1322    19688        /**/
     1323    19689    2      CASE(EXPOUNDCMND);
     1324    19690    2        CALL CPE$EXPOUND (P$PCB) ALTRET(ERRTRN) ;
     1325    19691        /**/
     1326    19692    2      CASE(EXITCMND);
     1327    19693    2        CALL CPA$EXIT(P$PCB) ALTRET(ERRTRN) ;
     1328    19694        /**/
     1329    19695    2      CASE(FEPLINKCMND);
     1330    19696    2        CALL CPA$FEPLINK(P$PCB) ALTRET(ERRTRN);
     1331    19697        /**/
     1332    19698    2      CASE(GETCMND);
     1333    19699    2        CALL CPA$GET(P$PCB) ALTRET(ERRTRN);
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:43   
     1334    19700        /**/
     1335    19701    2      CASE(GLOBALCMND);
     1336    19702    2        CALL CPH$GLOBAL(P$PCB) ALTRET(ERRTRN);
     1337    19703        /**/
     1338    19704    2      CASE(GOCMND);
     1339    19705    2        B$JIT.CPFLAGS1.YCGET = '0'B;
     1340    19706    2        IF B$JIT.CPFLAGS1.YC OR B$JIT.CPFLAGS1.YCPMME
     1341    19707    2        THEN
     1342    19708    2           CALL CPA$GO(P$PCB) ALTRET(ERRTRN);
     1343    19709        /**/
     1344    19710    2        SEG$2.PROMPT_TYPE = PRMT_N;
     1345    19711        /*
     1346    19712        *****   Re-connect the command-read fpt to the M$IBEX dcb, which should be
     1347    19713        *****   open to the command stream; if the user has interrupted a command
     1348    19714        *****   stream to get to this point, read the next command from it.  If he
     1349    19715        *****   thinks there is something to continue and there is not, give him the
     1350    19716        *****   appropriate error message.
     1351    19717        */
     1352    19718    2        SEG$2.GETCMD$->GET$CMD.INDCB# = M$IBEX_NUM;
     1353    19719    2        SEG$2.FLAGS.CMD_STR_INT = %NO#;
     1354    19720        /**/
     1355    19721    2        IF B$JIT.NEXTCC ~= %CC_FROMXEQ#
     1356    19722
     1357    19723    2        THEN
     1358    19724    2           CALL CPC$WRITEMSGE (E_CONT);
     1359    19725    2        IF B$JIT.NEXTCC = %CC_FROMXEQ# AND SEG$2.FLAGS.CPBUFFULL_AT_CSINT
     1360    19726    2        THEN
     1361    19727    3        DO ;
     1362    19728    3           B$JIT.CPFLAGS1.BUFFULL = %YES# ;
     1363    19729    3           SEG$2.FLAGS.CPBUFFULL_AT_CSINT = %NO# ;
     1364    19730    3           END ; /* Then Do */
     1365    19731        /**/
     1366    19732        /*E*    ERROR: CPA-E$CONT-C
     1367    19733                MESSAGE: Nothing to continue.
     1368    19734        */
     1369    19735        /**/
     1370    19736    2      CASE(GOTOCMND);
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:44   
     1371    19737    2        CALL CPG$GOTO (P$PCB) ALTRET (ERRTRN);
     1372    19738        /**/
     1373    19739    2      CASE(HELPCMND);
     1374    19740    2        X$PARAM = CXUH_PARAM ;
     1375    19741    2        CALL CPC$OPEN_LL ;
     1376    19742    2        X$PARAM.OUTDCB1# = SEG$2.LLDCB# ;
     1377    19743    2        X$PARAM.HELP$ = BLK$ -> P$B.SUBLK$(0) -> P$S.TEXTC$ ;
     1378    19744    2        SEG$2.GETCMD$->GET$CMD.XUH$ = ADDR(X$PARAM) ;
     1379    19745    2        CALL CXG$HELP (SEG$2.GETCMD$->GET$CMD) ALTRET (EAT_HELP_ALT) ;
     1380    19746    2   EAT_HELP_ALT: ;
     1381    19747        /**/
     1382    19748    2      CASE(IFCMND);
     1383    19749    2        CALL CPG$IF(P$PCB) ALTRET(ERRTRN);
     1384    19750    2        IF P$PCB.HI_CHAR = 0
     1385    19751    2        THEN
     1386    19752    3        DO;  /* Parse to get to the end if it's going to get skipped. */
     1387    19753    3           SEG$2.GETCMD$->GET$CMD.NODES$ = ADDR(IBEX_CMD);
     1388    19754    3           SEG$2.GETCMD$->GET$CMD.SFROUTINE$ = ENTADDR(CPX$FIRST_PASS);
     1389    19755    3           SEG$2.FLAGS.SKIP_ECHO = %YES#; /* dont echo a skipped one */
     1390    19756    3           CALL CPA$READCC (SEG$2.GETCMD$->GET$CMD,CMD_SOURCE) ALTRET (E_READCC) ;
     1391    19757    3           CMD_PARSING = NULLCMND;
     1392    19758    4           DO CASE (SEG$2.GETCMD$->GET$CMD.OUT$->P$B.CODE);
     1393    19759    4            CASE (LIMITCMND,ORESCMND,ACQUIRECMND,RELEASECMND,RESOURCECMND);
     1394    19760    4              GOTO IGNORE_RES;
     1395    19761    4            END;
     1396    19762    3           GOTO CALL_SYNTAX_CHECKER;
     1397    19763    3           END;
     1398    19764        /**/
     1399    19765    2      CASE(JOINCMND);
     1400    19766    2        CALL CPC$UNIMPCMD;
     1401    19767    2        CALL CPA$JOIN(P$PCB) ALTRET(ERRTRN);
     1402    19768        /**/
     1403    19769    2      CASE(LETCMND);
     1404    19770    2        CALL CPG$LET(P$PCB) ALTRET(ERRTRN);
     1405    19771        /**/
     1406    19772    2      CASE(LIMITCMND);
     1407    19773    2        CALL CPJ$LIMIT(P$PCB) ALTRET(ERRTRN);
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:45   
     1408    19774        /**/
     1409    19775    2      CASE(LINKCMND);
     1410    19776    2        CALL CPA$LINK(P$PCB) ALTRET(ERRTRN);
     1411    19777        /**/
     1412    19778    2      CASE(LISTCMND);
     1413    19779    2        CALL CPE$LIST(P$PCB) ALTRET(ERRTRN);
     1414    19780        /**/
     1415    19781    2      CASE(LOCATECMND);
     1416    19782    2        CALL CPC$UNIMPCMD;
     1417    19783    2        CALL CPB$LOCATE(P$PCB) ALTRET(ERRTRN);
     1418    19784        /**/
     1419    19785    2      CASE(MESSAGECMND);
     1420    19786    2        CALL CPB$MESSAGE(P$PCB)       ALTRET(ERRTRN);
     1421    19787        /**/
     1422    19788    2      CASE(NOTIFYCMND);
     1423    19789    2        CALL CPK$NOTIFY (P$PCB) ALTRET(ERRTRN) ;
     1424    19790        /**/
     1425    19791    2      CASE(NULLCMND);
     1426    19792    2        ADDR(SEG$2.ERRBUF)->ERR$BLK.FIRST = 0; /* Just ignore context errors */
     1427    19793        /**/
     1428    19794    2      CASE(ORESCMND);
     1429    19795    2        IF B$JIT.MODE ~= %M_BATCH#
     1430    19796
     1431    19797    2        THEN
     1432    19798    2           CALL CPO$ORES(P$PCB) ALTRET (ERRTRN);
     1433    19799        /**/
     1434    19800    2      CASE(OUTPUTCMND);
     1435    19801    2        CALL CPG$OUTPUT(P$PCB) ALTRET(ERRTRN);
     1436    19802        /**/
     1437    19803    2      CASE(PASSWORDCMND);
     1438    19804    2        CALL CPE$PASSWORD(P$PCB) ALTRET(ERRTRN);
     1439    19805        /**/
     1440    19806    2      CASE(PCLCMND);
     1441    19807    2        CALL CPA$PCL(P$PCB) ALTRET(ERRTRN);
     1442    19808        /**/
     1443    19809    2      CASE(PLATENCMND);
     1444    19810    2        CALL CPB$PLATEN(P$PCB) ALTRET(ERRTRN);
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:46   
     1445    19811        /**/
     1446    19812    2      CASE(PMDCMND);
     1447    19813    2        CALL CPA$PMD(P$PCB) ALTRET(ERRTRN);
     1448    19814        /**/
     1449    19815    2      CASE(POINTCMND);
     1450    19816    2        CALL CPE$POINT (P$PCB) ALTRET(ERRTRN);
     1451    19817        /**/
     1452    19818    2      CASE(POSITIONCMND);
     1453    19819    2        CALL CPE$POSITION (P$PCB) ALTRET(ERRTRN);
     1454    19820        /**/
     1455    19821    2      CASE(PRIORITYCMND);
     1456    19822    2        CALL CPI$PRIORITY(P$PCB) ALTRET(ERRTRN);
     1457    19823        /**/
     1458    19824    2      CASE(PRIVCMND);
     1459    19825    2        CALL CPF$PRIV(P$PCB) ALTRET(ERRTRN);
     1460    19826        /**/
     1461    19827    2      CASE(PROFILECMND);
     1462    19828    2        CALL CPF$PROFILE(P$PCB) ALTRET(ERRTRN);
     1463    19829        /**/
     1464    19830    2      CASE (PROMPTCMND);
     1465    19831    2        CALL CPF$PROMPT(P$PCB) ALTRET(ERRTRN);
     1466    19832        /**/
     1467    19833    2      CASE(PROTECTCMND);
     1468    19834    2        CALL CPE$PROTECT(P$PCB) ALTRET(ERRTRN);
     1469    19835        /**/
     1470    19836    2      CASE(QUITCMND);
     1471    19837    2        IF BLK$ -> P$B.NSUBLKS > 0
     1472    19838    2        THEN
     1473    19839    2           IF BLK$ -> P$B.SUBLK$(0) -> P$S.COUNT > 0
     1474    19840    2           THEN
     1475    19841    3           DO ;
     1476    19842    3              I = BLK$ -> P$B.SUBLK$(0) -> P$S.CPOS ;
     1477    19843    3              CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF), I, E_BDQUITCMND) ;
     1478    19844    3              GOTO ERRTRN ;
     1479    19845    3              END ; /* Then Do */
     1480    19846        /**/
     1481    19847        /*E*    ERROR: CPA-E$BDQUITCMND-0
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:47   
     1482    19848                MESSAGE: Expected the end of command (possibly with a "comment").
     1483    19849                DESCRIPTION: User input a QUIT command with something on the end of
     1484    19850                              the line.
     1485    19851        */
     1486    19852    2        B$JIT.CPFLAGS1.YCGET = '0'B;
     1487    19853    2        IF B$JIT.MODE ~= %M_INT#
     1488    19854    2        THEN
     1489    19855    2           CALL CPA$BYE;
     1490    19856        /**/
     1491    19857    2        CALL CPA$FLUSH;
     1492    19858    2        SEG$2.FLAGS.CMD_STR_INT = %NO#;
     1493    19859    2        SEG$2.FLAGS.CPBUFFULL_AT_CSINT = %NO#;
     1494    19860        /**/
     1495    19861    2        IF B$JIT.CPFLAGS1.JSTEP
     1496    19862
     1497    19863    2        THEN
     1498    19864    3        DO;
     1499    19865    3           SEG$2.PROMPT_TYPE = PRMT_N;
     1500    19866    3           END;
     1501    19867    2        ELSE /* rundown */
     1502    19868    2           CALL CPC$QUIT ALTRET(ERRTRN);
     1503    19869        /*
     1504    19870             ***** Next read should be thru M$IBEX...
     1505    19871        */
     1506    19872    2        SEG$2.GETCMD$->GET$CMD.INDCB# = M$IBEX_NUM;
     1507    19873        /**/
     1508    19874    2      CASE(RELEASECMND);
     1509    19875    2        CALL CPO$RELEASE(P$PCB) ALTRET(ERRTRN);
     1510    19876        /**/
     1511    19877    2      CASE(REPORTCMND);
     1512    19878    2        CALL CPB$REPORT(P$PCB) ALTRET(ERRTRN);
     1513    19879        /**/
     1514    19880    2      CASE(SAVECMND);
     1515    19881    2        CALL CPA$SAVE(P$PCB) ALTRET(ERRTRN);
     1516    19882        /**/
     1517    19883    2      CASE(SETUPCMND);
     1518    19884    2        CALL CPI$SETUP(P$PCB) ALTRET(ERRTRN);
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:48   
     1519    19885        /**/
     1520    19886    2      CASE(SIXEDITCMND);
     1521    19887    2        CALL CPA$SIXEDIT(P$PCB) ALTRET(ERRTRN);
     1522    19888        /**/
     1523    19889    2      CASE(STARTCMND);
     1524    19890    2        CALL CPA$START(P$PCB) ALTRET(ERRTRN);
     1525    19891        /**/
     1526    19892    2      CASE(STATUSCMND);
     1527    19893    2        CALL CPB$STATUS(P$PCB) ALTRET(ERRTRN);
     1528    19894        /**/
     1529    19895    2      CASE(SWITCHCMND);
     1530    19896    2        CALL CPF$SWITCH(P$PCB) ALTRET(ERRTRN);
     1531    19897        /**/
     1532    19898    2      CASE(TABSCMND);
     1533    19899    2        CALL CPI$TABS(P$PCB) ALTRET(ERRTRN);
     1534    19900        /**/
     1535    19901    2      CASE(UCMND);
     1536    19902    2        CALL CPA$UNDER(P$PCB) ALTRET(ERRTRN);
     1537    19903        /**/
     1538    19904    2      CASE(TIMECMND);
     1539    19905    2        CALL CPE$TIME(P$PCB) ALTRET(ERRTRN);
     1540    19906        /**/
     1541    19907    2      CASE(TITLECMND);
     1542    19908    2        CALL CPB$TITLE(P$PCB) ALTRET(ERRTRN);
     1543    19909        /**/
     1544    19910    2      CASE(XEQCMND);
     1545    19911    2        B$JIT.USRRNST = %RS_EXIT#;
     1546    19912    2        CALL CPH$BATXEQ(P$PCB) ALTRET(ERRTRN);
     1547    19913        /**/
     1548    19914    2      CASE(XMITCMND);
     1549    19915    2        B$JIT.USRRNST = %RS_EXIT#;
     1550    19916    2        CALL CPH$BATXEQ(P$PCB) ALTRET(ERRTRN);
     1551    19917        /**/
     1552    19918    2      CASE(RUNITCMND);
     1553    19919    2        IF SEG$2.FLAGS.CONTINUED
     1554    19920    2        THEN   /* Close the XEQ file */
     1555    19921    3        DO;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:49   
     1556    19922    3           B$JIT.PRFLAGS.CONTINUED = %YES#;
     1557    19923        /**/
     1558    19924    3           SEG$2.FPT_CLOSE$ -> FPT$CLOSE.V.DCB# = M$IBEX1_NUM;
     1559    19925    3           SEG$2.FPT_CLOSE$ -> FPT$CLOSE.V.DISP# = %SAVE#;
     1560    19926    3           CALL M$CLOSE (SEG$2.FPT_CLOSE$ -> FPT$CLOSE);
     1561    19927    3           K = P$PCB.NCHARS ; /* Remember total length of record. */
     1562    19928    3           END;
     1563    19929    2        SEG$2.CPBUFF$ -> CP$BUFF = TEMPBUF ;        /*RESTORE FIRST RECORD*/
     1564    19930    2        P$PCB.NCHARS = K;         /*RESTORE FIRST RECORD SIZE*/
     1565    19931    2        B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 & ~%CP_BUFFULL# ;
     1566    19932    2        CALL CPA$RUNIT(P$PCB) ALTRET(ERRTRN);
     1567    19933    2      END;
     1568    19934        /**/
     1569    19935    1     IF ADDR(SEG$2.ERRBUF)->ERR$BLK.FIRST ~= 0
     1570    19936    1     THEN
     1571    19937    1        GOTO ERRTRN;
     1572    19938        %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:50   
     1573    19939    1   CHK_BREAK:
     1574    19940        /*
     1575    19941             ***** If a break was received, handle it here...
     1576    19942        */
     1577    19943    1     IF B$JIT.CPFLAGS1 & %CP_BRK#
     1578    19944
     1579    19945    1     THEN
     1580    19946    2     DO;
     1581    19947    2        B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 & ~%CP_BRK#;
     1582    19948        /*
     1583    19949             ***** If M$YC pmme then altreturn (via M$CPEXIT) to the program...
     1584    19950        */
     1585    19951        /*E*    ERROR: CPA-E$YCPMMEBRK-E
     1586    19952                MESSAGE0: Break or control-Y while processing M$YC.
     1587    19953                DESCRIPTION: Allow break or control-Y durring M$YC processing
     1588    19954                             to cause altreturn to caller to be able to interrupt
     1589    19955                             the user who does nothing but M$YCs; e.g. FUMBLE.
     1590    19956        */
     1591    19957    2        IF B$JIT.CPFLAGS1 & %CP_YCPMME#
     1592    19958
     1593    19959    2        THEN
     1594    19960    3        DO;
     1595    19961    3           ERR_CODE = E_YCPMMEBRK;
     1596    19962    3           GOTO E_M$YCPMME;
     1597    19963    3           END;
     1598    19964    2        IF B$JIT.CPFLAGS1.YC AND NOT B$JIT.CPFLAGS1.YCGET
     1599    19965
     1600    19966    2        THEN /* !! prompt already setup */
     1601    19967    2           GOTO PROMPT;
     1602    19968        /*
     1603    19969             ***** If in XEQ and break received
     1604    19970                   then change prompt to !!
     1605    19971        */
     1606    19972    2        IF B$JIT.NEXTCC = %CC_FROMXEQ#
     1607    19973    2        THEN
     1608    19974    3        DO;
     1609    19975    3           CALL CPC$WRITEMSGE (E_CSINT);
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:51   
     1610    19976    3           SEG$2.PROMPT_TYPE = PRMT_I;
     1611    19977    3           SEG$2.GETCMD$->GET$CMD.INDCB# = M$UC_NUM;
     1612    19978    3           SEG$2.FLAGS.CMD_STR_INT = %YES#;
     1613    19979    3           IF B$JIT.CPFLAGS1 & %CP_BUFFULL#
     1614    19980    3           THEN
     1615    19981    4           DO ;
     1616    19982                                  /* Need to set a flag for CPBUFF in case we need
     1617    19983                                      to GO.
     1618    19984                                  */
     1619    19985    4              SEG$2.FLAGS.CPBUFFULL_AT_CSINT = %YES#;
     1620    19986    4              B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 & ~%CP_BUFFULL# ;
     1621    19987    4              END ; /* Then Do */
     1622    19988    3           END;
     1623    19989    2        END; /* if CP_BRK then do ... end */
     1624    19990        %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:52   
     1625    19991        /*
     1626    19992             ***** If M$YC pmme then return (via M$CPEXIT) to the program...
     1627    19993                  Unless B$JIT.CPFLAGS1 has CP_BUFFULL set...probably the
     1628    19994                  THEN part of an !IF command.
     1629    19995        */
     1630    19996    1     IF B$JIT.CPFLAGS1 & %CP_YCPMME#
     1631    19997
     1632    19998    1     THEN
     1633    19999    2     DO;
     1634    20000    2        IF B$JIT.CPFLAGS1 & %CP_BUFFULL#
     1635    20001    2        THEN
     1636    20002    3        DO ;
     1637    20003    3           SEG$2.FLAGS.SKIP_ECHO = ~(B$PS1$ -> FPTV$YC.ECHO);
     1638    20004    3           SEG$2.FLAGS.SKIP_ERRS = B$PS1$ -> FPTV$YC.NOERR;
     1639    20005    3           GOTO SETUP_READCC ;
     1640    20006    3           END ; /* Then Do */
     1641    20007    2        SEG$2.FPT_CPEXIT$->FPT$CPEXIT = CFPT_CPEXIT;
     1642    20008    2        SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V_ =
     1643    20009    2          VECTOR(SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V);
     1644    20010    2        SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V.CONT# = '1'B;
     1645    20011    2        CALL CPC$EXIT;
     1646    20012    2        CALL CPC$SCREECH(E$SUAYCRTN,CPA$IBEXMID);
     1647    20013        /**/
     1648    20014        /*E*    ERROR:   CPA-E$SUAYCRTN-A
     1649    20015                MESSAGE:    IBEX ABORT:  Unable to return to caller after M$YC entry.
     1650    20016        */
     1651    20017    2        END;
     1652    20018        /*
     1653    20019             ***** Update PREV_CMND ...
     1654    20020        */
     1655    20021    1     IF BLK$ ~= ADDR(NIL)
     1656    20022    1     THEN   /* Parsed ok */
     1657    20023    1        PREV_CMND = BLK$ -> P$B.CODE;
     1658    20024        /*
     1659    20025             ***** Go get next command ...
     1660    20026        */
     1661    20027    1     GOTO PROMPT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:53   
     1662    20028                   %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:54   
     1663    20029    1   CNTL_Y_INT:
     1664    20030    1     SEG$2.FLAGS.USE_REMEM = %NO# ;
     1665    20031    1     CALL CPA$FLUSH ;
     1666    20032    1     CALL CPC$WRITEMSGE (E_CSINT) ;
     1667    20033    1     GOTO CHK_BREAK ;
     1668    20034        %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:55   
     1669    20035    1   E_READCC:
     1670    20036    1     ERR_CODE = SEG$2.GETCMD$->GET$CMD.ERR# ;
     1671    20037    1     IF NOT ERR_CODE.MON
     1672    20038    1     THEN
     1673    20039    1        GOTO SYNTAX_ERR ;
     1674    20040        /*
     1675    20041              ***** If a PREPROCESSOR error and WHEN command
     1676    20042                    shut off PREPROCESSing and try again.
     1677    20043        */
     1678    20044    1     IF ERR_CODE.ERR# = %E$NOTCMDNAME OR
     1679    20045    1       ERR_CODE.ERR# = %E$BADCMDNAME
     1680    20046    1     THEN
     1681    20047    2     DO ;
     1682    20048    2        CALL CHK_4_WHEN_CMD ALTRET(NOT_WHEN_CMD) ;
     1683    20049    2        SEG$2.GETCMD$->GET$CMD.SKIP_PREPROCESS# = %YES# ;
     1684    20050    2        SEG$2.GETCMD$->GET$CMD.TEXT_ = XUG$PARAMS.LAST ;
     1685    20051    2        GOTO READCC ;
     1686    20052    2        END ; /* Then Do */
     1687    20053
     1688    20054    1   NOT_WHEN_CMD:
     1689    20055        /*
     1690    20056              ***** If M$YC, get back properly.
     1691    20057        */
     1692    20058    1     IF B$JIT.CPFLAGS1.YCPMME
     1693    20059    1     THEN
     1694    20060    1        GOTO SYNTAX_ERR ;
     1695    20061        /*
     1696    20062              ***** If !EOD then ignore the error. *****
     1697    20063        */
     1698    20064    1     IF ERR_CODE.FCG = E_BANG_EOD.FCG AND
     1699    20065    1       ERR_CODE.MID = E_BANG_EOD.MID AND
     1700    20066    1       ERR_CODE.ERR# = E_BANG_EOD.ERR#
     1701    20067    1     THEN
     1702    20068    1        GOTO CHK_BREAK ;
     1703    20069    2     DO SELECT (B$TCB.ALT$->B$ALT.ERR.CODE) ;
     1704    20070        /*
     1705    20071             ***** If IBEX cannot read from the terminal or
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:56   
     1706    20072                   write to it then logoff the user ...
     1707    20073        */
     1708    20074    2        SELECT (%E$READ, %E$WRITE);
     1709    20075    2        CALL CPA$BYE;
     1710    20076        /*
     1711    20077             ***** If END-OF-FILE then online users get an error msg.
     1712    20078                   All others get logged off ...
     1713    20079        */
     1714    20080    2        SELECT (%E$EOF);
     1715    20081    3        DO CASE(B$JIT.MODE);
     1716    20082    3         CASE(%M_BATCH#, %M_GHOST#, %M_TP#);
     1717    20083    3           CALL CPA$BYE;
     1718    20084    3         CASE(ELSE);
     1719    20085    3           CALL CPC$WRITEMSGE (E_INPUT) ;
     1720    20086    3           GOTO CHK_BREAK ;
     1721    20087    3         END;
     1722    20088        /*E*    ERROR: CPA-E$INPUT-0
     1723    20089                MESSAGE:   Input error - retry
     1724    20090                DESCRIPTION: User typed an esc f
     1725    20091        */
     1726    20092    2        END; /* do select */
     1727    20093        /**/
     1728    20094    2     DO SELECT (B$TCB.ALT$->B$ALT.ERR.CODE) ;
     1729    20095    2        SELECT (%E$LDSC, %E$DACTR);
     1730    20096    2        CALL CPA$BYE;
     1731    20097
     1732    20098
     1733    20099    2        SELECT (%E$LD, %E$IOERR, %E$DI) ;
     1734    20100    2        CALL CPC$WRITEMSGE (E_INPUT) ;
     1735    20101
     1736    20102    2        SELECT (%E$DATDLT_OPTWND) ;
     1737    20103    2        IF TRIED_2_XPAND_WND
     1738    20104    2        THEN              /* Stop IBEX from looping. */
     1739    20105    2           CALL CPA$BYE ;
     1740    20106    2        FPT_TRMCTL = CFPT_TRMCTL ;
     1741    20107    2        FPT_TRMCTL.V_ = VECTOR(FPT_TRMCTL.V) ;
     1742    20108    2        FPT_TRMCTL.V.DCB# = B$TCB.ALT$->B$ALT.DCB# ;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:57   
     1743    20109    2        FPT_TRMCTL.V.VLPTYPE# = %TRMCTL_WINDOW# ;
     1744    20110    2        FPT_TRMCTL.TRMCTL_ = VECTOR(VLP_WINDOW) ;
     1745    20111    2        VLP_WINDOW = CVLP_WINDOW ;
     1746    20112    2        VLP_WINDOW.WIDTH# = 80 + %WINDOW_ABSVAL# ;
     1747    20113    2        VLP_WINDOW.LENGTH# = 2 + %WINDOW_ABSVAL# ;
     1748    20114    3        CALL M$STRMCTL (FPT_TRMCTL) WHENRETURN DO ;
     1749    20115    3           ERR_CODE = E_EMPTYWND ;
     1750    20116    3           END ; /* Whenreturn Do */
     1751    20117    3        WHENALTRETURN DO ;
     1752    20118    3           ERR_CODE = B$TCB.ALT$->B$ALT.ERR ;
     1753    20119    3           END ; /* Whenaltreturn Do */
     1754    20120    2        TRIED_2_XPAND_WND = %YES# ;
     1755    20121    2        CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF), 511, ERR_CODE) ;
     1756    20122    2        CALL CPR$RPTERR (SEG$2.ERRBUF, 0) ;
     1757    20123    2        ADDR(SEG$2.ERRBUF)->ERR$BLK.FIRST = 0 ;
     1758    20124    2        ADDR(SEG$2.ERRBUF)->ERR$BLK.NEXT = 0 ;
     1759    20125
     1760    20126        /*E*       ERROR:   CPA-E$EMPTYWND-E
     1761    20127                   MESSAGE: IBEX has expanded its window length to 2.
     1762    20128            MESSAGE1: IBEX tried to read from an empty window.  IBEX opened a 2 line window.
     1763    20129                   DESCRIPTION: IBEX tried to read from an empty window.
     1764    20130                                IBEX opened a two line window.
     1765    20131        */
     1766    20132
     1767    20133    2        SELECT (ELSE) ;
     1768    20134    2     CALL CPA$ECHOCC (CMD_SOURCE,%NO#) ; /* Echo thru M$LL */
     1769    20135    2     CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF), P$PCB.HI_CHAR,
     1770    20136    2       SEG$2.GETCMD$->GET$CMD.ERR#) ;
     1771    20137    2     CALL CPR$RPTERR (SEG$2.ERRBUF, 0) ;
     1772    20138    2     ADDR(SEG$2.ERRBUF) -> ERR$BLK.FIRST = 0 ;
     1773    20139    2     ADDR(SEG$2.ERRBUF) -> ERR$BLK.NEXT = 0 ;
     1774    20140
     1775    20141    2     SELECT (%E$PMMEINT) ;
     1776    20142
     1777    20143    2        END ; /* Do Select */
     1778    20144    1     GOTO CHK_BREAK;
     1779    20145        %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:58   
     1780    20146        /**********************************************************************
     1781    20147        **     PURPOSE: To process errors detected by X$PARSE
     1782    20148               CALL:   Altret(parserr)
     1783    20149               INTERFACE: CPC$WRITEMSGE
     1784    20150               INPUT:  PCB.ERROR
     1785    20151               OUTPUT: Error message output to user
     1786    20152               DESCRIPTION: If a syntax error is detected while parsing the command
     1787    20153                       line, parserr  is called by X$PARSE altret for error
     1788    20154                       processing. The error returned by the parser is output
     1789    20155                       to the user. Batch users are aborted. Users of M$YC are
     1790    20156                       altreturned to, all others are prompted for next command.
     1791    20157        **
     1792    20158        **********************************************************************/
     1793    20159    1   SYNTAX_ERR:
     1794    20160    1     ADDR(SEG$2.ERRBUF) -> ERR$BLK.FIRST = 0;   /* Only X$PARSE errors impt */
     1795    20161    1     ADDR(SEG$2.ERRBUF) -> ERR$BLK.NEXT = 0;   /* Only X$PARSE errors impt */
     1796    20162        /*
     1797    20163             ***** If a syntax error then call CXP$POSTERR so
     1798    20164                   that an arrow can be printed under the echoed command...
     1799    20165        */
     1800    20166    1     ERR_CODE = SEG$2.GETCMD$->GET$CMD.ERR# ;
     1801    20167    1     IF ERR_CODE.ERR# = %E$SYNERR
     1802    20168    1     THEN
     1803    20169    1        IF FIRST_SYNTAX_ERR AND
     1804    20170    1          SEG$2.LASTPROMPT = PRMT_I AND
     1805    20171    1          SUBSTR(VBASE(XUG$PARAMS.BUFVEC)->CP$BUFF,0,1) = '!'
     1806    20172    1        THEN
     1807    20173    2        DO ;
     1808    20174    2           SEG$2.CPBUFF$->CP$BUFF = SUBSTR(VBASE(XUG$PARAMS.BUFVEC)->CP$BUFF,
     1809    20175    2             1,VBASE(XUG$PARAMS.RLTVEC)->XUG$RLT(1)-1) ;
     1810    20176    2           VBASE(SEG$2.GETCMD$->GET$CMD.TEXT_) = SEG$2.CPBUFF$ ;
     1811    20177    2           VBOUND(SEG$2.GETCMD$->GET$CMD.TEXT_) =
     1812    20178    2             VBASE(XUG$PARAMS.RLTVEC)->XUG$RLT(1)-2;
     1813    20179    2           SEG$2.GETCMD$->GET$CMD.SKIP_PREPROCESS# = %YES# ;
     1814    20180    2           FIRST_SYNTAX_ERR = %NO# ;
     1815    20181    2           GOTO PROMPT ;
     1816    20182    2           END;  /* Then Do */
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:59   
     1817    20183    1        ELSE
     1818    20184    2        DO ;
     1819    20185    2           IF (CMD_SOURCE = XEQFILE OR CMD_SOURCE = BATCHJCL)
     1820    20186    2             AND NOT SEG$2.GETCMD$->GET$CMD.RCVD_PROMPT#
     1821    20187    2           THEN
     1822    20188    2              GOTO DATA_IGNORED_LOOP ;
     1823    20189    2           IF P$PCB.ERROR ~= '0'B
     1824    20190    2           THEN
     1825    20191    2              CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF),P$PCB.HI_CHAR,P$PCB.ERROR);
     1826    20192    2           ELSE              /* Just post Syntax Error */
     1827    20193    2              CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF),P$PCB.HI_CHAR,ERR_CODE);
     1828    20194    2           END ; /* Else Do */
     1829    20195    1     ELSE
     1830    20196    1        IF ERR_CODE.FCG ~= '0320'O   /* Not 'CP' type. */
     1831    20197    1        THEN
     1832    20198    1           CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF),511,ERR_CODE);
     1833    20199    1   CONTEXT_ERR:
     1834    20200    1     B$JIT.STEPCC = %CC_ERR# ;
     1835    20201    1     CALL CPA$ECHOCC (CMD_SOURCE,%NO#) ; /* Echo thru M$LL */
     1836    20202        /*
     1837    20203             ***** Print error messages ...
     1838    20204        */
     1839    20205    1     IF ADDR(SEG$2.ERRBUF) -> ERR$BLK.FIRST ~= 0
     1840    20206    1     THEN   /* Print errors */
     1841    20207    2     DO;
     1842    20208    2        P$PCB.HI_CHAR = ADDR(SEG$2.ERRBUF) -> ERR$BLK.BLK.CHARPOS(1);
     1843    20209    2        IF B$JIT.CPFLAGS1.YCPMME
     1844    20210    2        THEN
     1845    20211    2           IF NOT B$PS1$ -> FPTV$YC.NOERR
     1846    20212    2           THEN
     1847    20213    3           DO;
     1848    20214    3              SEG$2.GETCMD$->GET$CMD.EPOS# = P$PCB.HI_CHAR;
     1849    20215    3              SEG$2.GETCMD$->GET$CMD.USE_EPOS# = %YES#;
     1850    20216    3              CALL CXG$ERRPTR (SEG$2.GETCMD$->GET$CMD) WHENALTRETURN
     1851    20217    4              DO;
     1852    20218    4                 END;
     1853    20219    3              END;  /* Then Do */
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:60   
     1854    20220    2           ELSE;
     1855    20221    2        ELSE
     1856    20222    2           CALL CPR$RPTERR (SEG$2.ERRBUF,0);
     1857    20223    2        ERR_CODE = ADDR(SEG$2.ERRBUF) -> ERR$BLK.BLK.ERROR(1);
     1858    20224    2        ADDR(SEG$2.ERRBUF) -> ERR$BLK.FIRST = 0;
     1859    20225    2        ADDR(SEG$2.ERRBUF) -> ERR$BLK.NEXT = 0;
     1860    20226    2        END;
     1861    20227    1     ELSE /* some other error */
     1862    20228    1        IF NOT B$JIT.CPFLAGS1.YCPMME
     1863    20229    1        THEN
     1864    20230    1           CALL CPC$WRITEMSGE (ERR_CODE);
     1865    20231        /*
     1866    20232             ***** Post error position for M$YC with RESULTS requested.
     1867    20233        */
     1868    20234    1     IF (B$JIT.CPFLAGS1.YCPMME ) AND B$JIT.YC2SZ >0
     1869    20235    1     THEN
     1870    20236    1        B$PS2$->VLR$YC.CPOS = P$PCB.HI_CHAR ;
     1871    20237
     1872    20238    1   ERRXIT: ;
     1873    20239        /*
     1874    20240             ***** If M$YC pmme user, then altreturn...
     1875    20241        */
     1876    20242    1     IF B$JIT.CPFLAGS1 & (%CP_YCPMME# | %CP_LNKPMME#)
     1877    20243    1     THEN
     1878    20244    2     DO ;
     1879    20245    2        GOTO E_M$YCPMME;
     1880    20246    2        END ; /* Then Do */
     1881    20247        /*
     1882    20248             ***** Batch users are logged off...
     1883    20249        */
     1884    20250        /*E*    ERROR: CPA-E$ABRTBATCH-C
     1885    20251                MESSAGE: BATCH/XEQ has been aborted because of errors.
     1886    20252        */
     1887    20253        /*
     1888    20254             ***** If SEG$2.FLAGS.ABORT has been set then
     1889    20255                   abort BATCH or XEQ streams ...
     1890    20256        */
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:61   
     1891    20257    1     IF SEG$2.FLAGS.ABORT
     1892    20258    1     THEN
     1893    20259    2     DO;
     1894    20260    2        IF B$JIT.MODE = %M_BATCH#
     1895    20261    2        THEN
     1896    20262    3        DO;
     1897    20263    3           CALL CPC$WRITEMSGE (E_ABRTBATCH);
     1898    20264    3           B$JIT.USRRNST = %RS_ABRT#;
     1899    20265    3           IF B$JIT.STEPCC = 0
     1900    20266    3           THEN
     1901    20267    3              B$JIT.STEPCC = %CC_XXX# ;
     1902    20268    3           CALL CPA$BYE;
     1903    20269    3           END;
     1904    20270    2        IF CMD_SOURCE = XEQFILE
     1905    20271    2        THEN
     1906    20272    3        DO;
     1907    20273    3           CALL CPC$WRITEMSGE (E_ABRTBATCH);
     1908    20274    3           CALL CPA$FLUSH;
     1909    20275    3           IF B$JIT.STEPCC = 0
     1910    20276    3           THEN
     1911    20277    3              B$JIT.STEPCC = %CC_XXX# ;
     1912    20278    3           END;
     1913    20279    2        END;
     1914    20280        /*
     1915    20281             ***** Check for BREAK...
     1916    20282        */
     1917    20283    1     GOTO CHK_BREAK;
     1918    20284                   %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:62   
     1919    20285        /**********************************************************************
     1920    20286        **     PURPOSE: To process errors detected in a CPX$CONTEXTn module.
     1921    20287               CALL:   UNWIND(U$PARAM.REMEM_CONTEXT_ERR$)
     1922    20288               INTERFACE:
     1923    20289               INPUT:
     1924    20290               OUTPUT: CONTEXT_ERR_UNWIND must set GETCMD.TEXT_ to vector(nil).
     1925    20291               DESCRIPTION: If a context error is detected while parsing the command
     1926    20292                       line, the given CPX$CONTEXTn routine will UNWIND to
     1927    20293                       CONTEXT_ERR_UNWIND.  GETCMD.TEXT_ must be set to vector(nil).
     1928    20294                       The control is given to CONTEXT_ERR to handle the normal
     1929    20295                       context error.
     1930    20296        **
     1931    20297        **********************************************************************/
     1932    20298    1   CONTEXT_ERR_UNWIND:
     1933    20299    1     SEG$2.GETCMD$->GET$CMD.TEXT_ = VECTOR(NIL) ;
     1934    20300    1     GOTO CONTEXT_ERR;
     1935    20301                   %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:63   
     1936    20302    1   E_M$YCPMME:
     1937    20303    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT = CFPT_CPEXIT;
     1938    20304    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V_ =
     1939    20305    1       VECTOR(SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V);
     1940    20306    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V.ALTRTN# = '1'B;
     1941    20307    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V.JERR = ERR_CODE;
     1942    20308    1     IF B$JIT.CPFLAGS1.YCPMME
     1943    20309    1     THEN
     1944    20310    1        IF B$PS1$->FPTV$YC.NOERR
     1945    20311    1        THEN
     1946    20312    1           B$JIT.CPFLAGS1.EXIT# = '0'B ;
     1947    20313    1        ELSE
     1948    20314    2        DO ;
     1949    20315    2           B$JIT.CPFLAGS1.EXIT# = '1'B ;
     1950    20316    2           CALL CPC$WRITEMSGE(ERR_CODE,,,,,'1'B) ;
     1951    20317    2           END ; /* Else Do */
     1952    20318    1     B$JIT.USRERR = '0'B ;
     1953    20319    1     CALL CPC$EXIT;
     1954    20320    1     CALL CPC$SCREECH(E$SUAYCRTN,CPA$IBEXMID);
     1955    20321        %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:64   
     1956    20322        /**********************************************************************/
     1957    20323        /*I    NAME:   ERRTRN
     1958    20324               PURPOSE: Common returning point for altreturns from called procedures
     1959    20325               CALL:   Altret(errtrn)
     1960    20326               interface:
     1961    20327               Input:
     1962    20328               Output:
     1963    20329               DESCRIPTION: A determination is made if the current user is a BATCH
     1964    20330                       user or other type of user. If a BATCH user, the job is
     1965    20331                       aborted. Otherwise, a return is made for another command.
     1966    20332        */
     1967    20333        /**********************************************************************/
     1968    20334    1   ERRTRN:
     1969    20335    1     I = B$JIT.DCBNO;                         /*Preserve DCB#*/
     1970    20336    1     IF CMD_SOURCE = M$LNKPMME
     1971    20337    1       OR CMD_SOURCE = XEQFILE AND (NOT(B$JIT.CPFLAGS1.ECHO))
     1972    20338
     1973    20339    1     THEN /* Echo */
     1974    20340    1        CALL CPA$ECHOCC (CMD_SOURCE,%YES#);
     1975    20341        /*
     1976    20342             ***** Print error messages ...
     1977    20343        */
     1978    20344    1     IF ADDR(SEG$2.ERRBUF) -> ERR$BLK.FIRST ~= 0 OR B$JIT.USRERR.CODE = 0
     1979    20345    1     THEN   /* Print errors */
     1980    20346    2     DO;
     1981    20347    2        IF NOT B$JIT.CPFLAGS1.YCPMME
     1982    20348    2        THEN
     1983    20349    2           CALL CPR$RPTERR (SEG$2.ERRBUF,0);
     1984    20350    2        ELSE IF B$JIT.YC2SZ>0
     1985    20351    2           THEN
     1986    20352    2              B$PS2$ -> VLR$YC.CPOS =
     1987    20353    2                ADDR(SEG$2.ERRBUF) -> ERR$BLK.BLK.CHARPOS(1);
     1988    20354    2        ERR_CODE = ADDR(SEG$2.ERRBUF) -> ERR$BLK.BLK.ERROR(1);
     1989    20355    2        ADDR(SEG$2.ERRBUF) -> ERR$BLK.FIRST = 0;
     1990    20356    2        ADDR(SEG$2.ERRBUF) -> ERR$BLK.NEXT = 0;
     1991    20357    2        END;
     1992    20358    1     IF B$JIT.USRERR.CODE ~= 0
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:65   
     1993    20359    1     THEN   /* Print any other error messages */
     1994    20360    2     DO;
     1995    20361    2        ERR_CODE = B$JIT.USRERR;
     1996    20362    2        IF NOT B$JIT.CPFLAGS1.YCPMME
     1997    20363    2        THEN
     1998    20364    2           CALL CPC$WRITEMSGE (ERR_CODE,I);
     1999    20365    2        END;
     2000    20366    1     GOTO ERRXIT;
     2001    20367                   %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:66   
     2002    20368        /*
     2003    20369             *****    Internal subroutines
     2004    20370        */
     2005    20371        /**********************************************************************/
     2006    20372        /*I*   NAME:   OPENINPUT
     2007    20373               PURPOSE: To initialize the appropriate open,read and prompt fpts
     2008    20374               INTERFACE:
     2009    20375               INPUT:  B$JIT.CPFLAGS1 - CP_YC set or reset
     2010    20376                       B$JIT.MODE - user type
     2011    20377               OUTPUT: FPT$OPEN,FPT$READ and FPT$PROMPT fpts initialized
     2012    20378               DESCRIPTION: The M$IBEX dcb is obtained and opened to read
     2013    20379                       JCL when not in interactive mode(control_y). However when
     2014    20380                       a user is in interactive mode, the M$UC dcb is used for
     2015    20381                       reading JCL and is opened by the monitor.
     2016    20382                       The prompt character is set to a single '!' if not in
     2017    20383                       interactive mode and set to '!!' if otherwise.
     2018    20384        */
     2019    20385        /************************************************************************/
     2020    20386    1   OPENINPUT: PROC ALTRET ;
     2021    20387    2   DCL DCB# UBIN WORD;
     2022    20388        /*
     2023    20389           **** Init. Parameters common to interactive and regular mode for
     2024    20390                XUG_GETCMD and XUG_INIT fpts.
     2025    20391        */
     2026    20392    2     SEG$2.XUG_INIT$->XUG$INIT.PP_DCB# = M$IBEX1_NUM ;
     2027    20393    2     CALL CXG$INIT (SEG$2.GETCMD$->GET$CMD,
     2028    20394    2       SEG$2.XUG_INIT$->XUG$INIT) ALTRET(INIT_ERR) ;
     2029    20395    2     P$PCB$ = SEG$2.GETCMD$->GET$CMD.PCB$ ;
     2030    20396    2     XUG$ = SEG$2.XUG_INIT$->XUG$INIT.PARAMS$ ;
     2031    20397    2     CALL CPC$OPEN_LL ;
     2032    20398    2     SEG$2.GETCMD$->GET$CMD.OUTDCB# = SEG$2.LLDCB# ;
     2033    20399    2     SEG$2.GETCMD$->GET$CMD.PP_ROOT$ = ADDR(XUE_PREEXP) ;
     2034    20400        /*
     2035    20401           **** If interactive mode, read jcl through M$UC
     2036    20402        */
     2037    20403    2     IF B$JIT.CPFLAGS1.YC
     2038    20404    2       AND (NOT B$JIT.CPFLAGS1.YCGET OR B$JIT.NEXTCC = %CC_FROMUC#)
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:67   
     2039    20405    2     THEN
     2040    20406    3     DO;
     2041    20407    3        SEG$2.GETCMD$->GET$CMD.INDCB# = M$UC_NUM;
     2042    20408    3        SEG$2.PROMPT_TYPE = PRMT_I;
     2043    20409    3        END;
     2044    20410    2     ELSE
     2045    20411        /*
     2046    20412           **** Regular mode, read jcl through M$IBEX
     2047    20413        */
     2048    20414    3     DO;
     2049    20415    3        SEG$2.PROMPT_TYPE = PRMT_N;
     2050    20416    3        IF DCBADDR(M$IBEX_NUM) -> F$DCB.FCD#
     2051    20417    3        THEN   /* If M$IBEX is open, assume wrong */
     2052    20418    4        DO;   /* Close it */
     2053    20419    4           SEG$2.FPT_CLOSE$ -> FPT$CLOSE.V.DCB# = M$IBEX_NUM;
     2054    20420    4           SEG$2.FPT_CLOSE$ -> FPT$CLOSE.V.DISP# = %SAVE#;
     2055    20421    4           CALL M$CLOSE (SEG$2.FPT_CLOSE$->FPT$CLOSE);
     2056    20422    4           END;
     2057    20423    3        IF DCBADDR(M$IBEX1_NUM) -> F$DCB.FCD#
     2058    20424    3        THEN   /* If M$IBEX1 is open, assume wrong */
     2059    20425    4        DO;   /* Close it */
     2060    20426    4           SEG$2.FPT_CLOSE$ -> FPT$CLOSE.V.DCB# = M$IBEX1_NUM;
     2061    20427    4           SEG$2.FPT_CLOSE$ -> FPT$CLOSE.V.DISP# = %SAVE#;
     2062    20428    4           CALL M$CLOSE (SEG$2.FPT_CLOSE$->FPT$CLOSE);
     2063    20429    4           END;
     2064    20430    3        CALL CPB$OPENCS;
     2065    20431    3        SEG$2.GETCMD$->GET$CMD.INDCB# = M$IBEX_NUM;
     2066    20432    3        END;
     2067    20433    2     RETURN;
     2068    20434    2   INIT_ERR:
     2069    20435    2     CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF),511,SEG$2.GETCMD$->GET$CMD.ERR#) ;
     2070    20436    2     ALTRETURN ;
     2071    20437    2   END OPENINPUT;
     2072    20438                   %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:68   
     2073    20439        /******************************************************************************/
     2074    20440        /*I*   NAME:    CHKQUIT
     2075    20441               PURPOSE:    To determine whether the user actually wishes to terminate
     2076    20442                        his previous job step (which was interrupted by Control-Y) or
     2077    20443                        abort the command which he has just entered.
     2078    20444               INPUT:   P$B  -  the block generated by X$PARSE for the command.
     2079    20445               OUTPUT:  Procedure ALTRETURNs if he does not wish to zap current job step.
     2080    20446                        Procedure performs an M$RUND on the user and then exits
     2081    20447                        normally if he does want to abort current job step with the
     2082    20448                        current command.
     2083    20449               DESCRIPTION:   The message QUIT? is written through the M$UC dcb and
     2084    20450                           the reply checked; Y[ES], New-line, or Carriage-return all
     2085    20451                           cause current step to be run down and the normal RETURN
     2086    20452                           taken; any other response takes the ALTRETURN.
     2087    20453        */
     2088    20454    1   CHKQUIT:
     2089    20455    1     PROC(P$B)  ALTRET;
     2090    20456        /**/
     2091    20457               %PARSE$OUT(NAME=P$B,STCLASS="");
     2092    20502    2   DCL    QUITMSG  CHAR(0)  INIT('Quit?')  CONSTANT;
     2093    20503    2   DCL ARS UBIN ;
     2094    20504    2   DCL 1 PROMPT BASED CALIGNED,
     2095    20505    2         2 VFC CHAR(1),
     2096    20506    2         2 TEXT CHAR (ARS);
     2097    20507        /**/
     2098    20508        /*
     2099    20509        *****  Begin procedure
     2100    20510        */
     2101    20511    3     DO CASE(P$B.CODE);
     2102    20512        /*
     2103    20513        *****  The following commands are permitted only at job step so we must
     2104    20514        *****  ask the user if he wishes to quit what he is doing before processing
     2105    20515        *****  his last command.
     2106    20516        *****  Any zero-byte read will cause current job step to be run down.
     2107    20517        *****  Any other response will prompt the user with another read without
     2108    20518        *****  running him down.
     2109    20519        */
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:69   
     2110    20520    3      CASE( GETCMND,
     2111    20521    3       JOINCMND,
     2112    20522    3       STARTCMND,
     2113    20523    3       EDITCMND,
     2114    20524    3       SIXEDITCMND,
     2115    20525    3       RUMCMND,
     2116    20526    3       PCLCMND,
     2117    20527    3       LINKCMND,
     2118    20528    3       GOTOCMND,
     2119    20529    3       RUNITCMND,
     2120    20530    3       UCMND,
     2121    20531    3       EFTCMND,
     2122    20532    3       FEPLINKCMND);
     2123    20533        /**/
     2124    20534    3        IF P$B.CODE = GOTOCMND AND B$JIT.CPFLAGS1.YCGET
     2125    20535    3        THEN
     2126    20536    3           RETURN;
     2127    20537    3        IF B$JIT.CPFLAGS1.PROTECT AND SEG$2.GETCMD$->GET$CMD.INDCB# = M$UC_NUM
     2128    20538    3        THEN
     2129    20539    4        DO;
     2130    20540    4           SEG$2.FPT_WRITEUC$->FPT$WRITE.BUF_ = VECTOR(QUITMSG);
     2131    20541    4           CALL M$WRITE(SEG$2.FPT_WRITEUC$->FPT$WRITE) ALTRET(CHKQUIT10);
     2132    20542    4   CHKQUIT10:
     2133    20543    4           SEG$2.FPT_READUC$->FPT$READ.BUF_ = VECTOR(SEG$2.CPBUFF$ -> CP$BUFF);
     2134    20544    4           CALL M$READ(SEG$2.FPT_READUC$->FPT$READ) ALTRET(CHKQUIT20);
     2135    20545    4   CHKQUIT20:
     2136    20546    4           IF DCBADDR(M$UC_NUM)->F$DCB.ARS# ~= 0
     2137    20547    4           THEN
     2138    20548    5           DO;
     2139    20549    5              ARS = DCBADDR(M$UC_NUM)->F$DCB.ARS# ;
     2140    20550    5              SEG$2.GETCMD$->GET$CMD.TEXT_ =
     2141    20551    5                VECTOR(SUBSTR(SEG$2.CPBUFF$->CP$BUFF,
     2142    20552    5                0, ARS)) ;
     2143    20553    5              ALTRETURN;
     2144    20554    5              END;
     2145    20555    4           END;
     2146    20556        /*
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:70   
     2147    20557        *****   We have decided to abort the current process in favor of the one
     2148    20558        *****   represented by the command in cpbuff; if there is an active command
     2149    20559        *****   stream, it should be flushed.
     2150    20560        */
     2151    20561    3        IF SEG$2.GETCMD$->GET$CMD.INDCB# = M$UC_NUM
     2152    20562    3        THEN
     2153    20563    3           CALL CPA$FLUSH;
     2154    20564    3        SEG$2.FLAGS.CMD_STR_INT = %NO#;
     2155    20565    3        SEG$2.FLAGS.CPBUFFULL_AT_CSINT = %NO#;
     2156    20566        /**/
     2157    20567    3        IF SEG$2.GETCMD$->GET$CMD.INDCB# = M$UC_NUM
     2158    20568    3        THEN ARS = 0;
     2159    20569    3        ELSE ARS = VBOUND(SEG$2.GETCMD$->GET$CMD.PROMPT_);
     2160    20570    3        CALL CONCAT (B$JIT.CCBUF,
     2161    20571    3          VBASE(SEG$2.GETCMD$->GET$CMD.PROMPT_)->PROMPT.TEXT,
     2162    20572    3          SEG$2.CPBUFF$ -> CP$BUFF);
     2163    20573    3        B$JIT.CCARS = P$PCB.NCHARS+ARS;
     2164    20574    3        B$JIT.CCDISP = B$JIT.CCARS;
     2165    20575    3        B$JIT.CPFLAGS1.BUFFULL = '1'B;
     2166    20576    3        CALL CPC$QUIT ALTRET(E_CHK_C$QUIT);
     2167    20577        /**/
     2168    20578    3        RETURN;
     2169    20579        /**/
     2170    20580    3      CASE(ELSE);
     2171    20581    3        RETURN;
     2172    20582    3      END;
     2173    20583    2   E_CHK_C$QUIT:
     2174    20584    2     ALTRETURN;
     2175    20585    2   END CHKQUIT;
     2176    20586        %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:71   
     2177    20587        /**********************************************************************/
     2178    20588        /*I*    NAME:    LIMIT_ERR
     2179    20589                PURPOSE: To print any/all errors associated with exceeded LIMITS
     2180    20590                CALL:    CALL LIMIT_ERR
     2181    20591               INTERFACE: CPC$WRITEMSGE
     2182    20592               INPUT:  B$JIT.USRERR - ERROR CODE OF MESSAGE TO BE OUTPUT
     2183    20593               INPUT:  B$JIT.USRRNST - USER RUN STATUS
     2184    20594               OUTPUT: Error message output to user
     2185    20595               DESCRIPTION: If a system or user error is detected, the appropriate error
     2186    20596                       message is output. If step limits were in effect, cumulative
     2187    20597                       values will be established for the limits in effect.
     2188    20598        */
     2189    20599        /********************************************************************/
     2190    20600    1   LIMIT_ERR:
     2191    20601    1     PROC  ALTRET;
     2192    20602    2   DCL 1 XL_NAME,
     2193    20603    2         2 COUNT UBIN(9) UNAL,
     2194    20604    2         2 TEXT CHAR(6) UNAL;
     2195    20605    2   DCL 1 XLIM_TBL(0:8) CONSTANT ALIGNED,  /*LIMIT EXCEEDED TABLE*/
     2196    20606    2         2 LEN UBIN BYTE UNAL INIT
     2197    20607    2            (4,5,4,5,5,2,2,6,2),
     2198    20608    2         2 HDR CHAR(6) UNAL INIT
     2199    20609    2            ('time','stack','tape','tdisk','pdisk','DO','LO','memory','PO'),
     2200    20610    2         2 MASK BIT(9) UNAL INIT
     2201    20611    2            (%XL_TIME#,%XL_STACK#,%XL_TAPE#,%XL_TDISC#,%XL_PDISC#,%XL_DO#,
     2202    20612    2             %XL_LO#,%XL_MEM#,%XL_PO#);
     2203    20613    2   DCL STEP_LMTX BIT(1) UNAL;                       /*Step lmt excded flag*/
     2204    20614        /**/
     2205    20615        /*
     2206    20616          ****     Process limit errors
     2207    20617        */
     2208    20618    2     IF (B$JIT.USRRNST & %RS_LIMX#)
     2209    20619    2     THEN
     2210    20620    3     DO;
     2211    20621    4        DO I=0 TO SIZEC(XLIM_TBL)/SIZEC(XLIM_TBL(0))-1;
     2212    20622    4           IF B$JIT.XLIMFLG & XLIM_TBL.MASK(I)
     2213    20623    4           THEN
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:72   
     2214    20624    5           DO;
     2215    20625    5              XL_NAME.COUNT = XLIM_TBL.LEN(I);
     2216    20626    5              XL_NAME.TEXT = XLIM_TBL.HDR(I);
     2217    20627        /*E*       ERROR:  CPA-E$LIMEXC-E
     2218    20628                   MESSAGE: Limit exceeded - %U1
     2219    20629                   DESCRIPTION: The limit was exceeded on the specified resource
     2220    20630                                or service limit.
     2221    20631        */
     2222    20632    5              CALL CPC$WRITEMSGE (E_LIMEXC,,XL_NAME);
     2223    20633    5              END;
     2224    20634    4           END;
     2225    20635        /*
     2226    20636          ****     Establish cumulative values if step limits were in effect
     2227    20637        */
     2228    20638    3        STEP_LMTX = %NO#;
     2229    20639    3        IF (B$JIT.CPFLAGS1 & %CP_STEPLMT#)
     2230    20640    3        THEN
     2231    20641    3           CALL CPJ$ESTCUM(%YES#,STEP_LMTX) ALTRET(E_LIMIT);
     2232    20642        /*
     2233    20643          ****     If only step limits were exceeded, reset RNST's LIMX flag.
     2234    20644        */
     2235    20645    3        IF NOT B$JIT.XLIMFLG
     2236    20646    3        THEN
     2237    20647    3           B$JIT.RNST = B$JIT.RNST &%(~RS_LIMX#);
     2238    20648        /*
     2239    20649          ****     If BATCH, abort job if the limit exceeded wasn't a step limit.
     2240    20650          ****     Otherwise, process the next job step.
     2241    20651        */
     2242    20652    3        IF ((B$JIT.MODE=%M_BATCH#)  AND (STEP_LMTX=%NO#))
     2243    20653    3        THEN
     2244    20654    3           CALL CPA$BYE ALTRET(E_LIMIT);
     2245    20655    3        ELSE
     2246    20656    3           RETURN;
     2247    20657    3        END;
     2248    20658    2     RETURN;
     2249    20659    2   E_LIMIT:
     2250    20660    2     ALTRETURN;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:73   
     2251    20661    2   END LIMIT_ERR;
     2252    20662                   %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:74   
     2253    20663        /******************************************************************************/
     2254    20664        /*I*   NAME:    CHK_RUTYPE
     2255    20665               PURPOSE:    To determine if the specified run unit command is a debugger.
     2256    20666               INPUT:   P$B  -  the block generated by X$PARSE for the command.
     2257    20667               OUTPUT:  P$B.CODE - changed to debugcmd if a debugger
     2258    20668               DESCRIPTION:   If the run unit is a debugger, the p$b.code is changed
     2259    20669                           to debugcmnd. Otherwise, no change is made. This is done
     2260    20670                           to allow for special processing performed for debugger type
     2261    20671                           run units found in :sys.
     2262    20672        */
     2263    20673    1   CHK_RUTYPE: PROC(P$BLOCK) ALTRET ;
     2264    20674        %PARSE$SYM(NAME=P$S);
     2265    20712        %PARSE$OUT (NAME=P$BLOCK,STCLASS="");
     2266    20757        %FPT_FINDPROC (FPTN=FPT_FINDPROC,STCLASS=AUTO);
     2267    20773        %FPT_FID (FPTN=FPT$FID,STCLASS=BASED);
     2268    20796        %VLP_NAME (FPTN=FID_NAME,LEN=31,STCLASS=AUTO);
     2269    20823        %VLP_ACCT (FPTN=FID_ACCT,STCLASS=AUTO);
     2270    20836        %VLP_PASS (FPTN=FID_PASS,STCLASS=AUTO);
     2271    20849        %VLP_SN (FPTN=FID_SN,N=4,STCLASS=AUTO);
     2272    20862        %VLP_WSN (FPTN=FID_WSN,STCLASS=AUTO);
     2273    20875        %VLR_FID(FPTN=FID_RESULTS,STCLASS=AUTO);
     2274    20894    2   DCL FID_ASN UBIN(9);
     2275    20895    2   DCL FID_RES CHAR(4);
     2276    20896        /**/
     2277    20897        /**/
     2278    20898    2     SEG$2.FPT_FID$->FPT$FID = CFPT_FID;
     2279    20899    2     SEG$2.FPT_FID$->FPT$FID.V_ = VECTOR(SEG$2.FPT_FID$->FPT$FID.V);
     2280    20900    2     SEG$2.FPT_FID$->FPT$FID.TEXTFID_=VECTOR(P$BLOCK.SUBLK$(0)->P$S.TEXT);
     2281    20901    2     SEG$2.FPT_FID$->FPT$FID.NAME_=VECTOR(FID_NAME);
     2282    20902    2     SEG$2.FPT_FID$->FPT$FID.ACCT_=VECTOR(FID_ACCT);
     2283    20903    2     SEG$2.FPT_FID$->FPT$FID.PASS_=VECTOR(FID_PASS);
     2284    20904    2     SEG$2.FPT_FID$->FPT$FID.SN_=VECTOR(FID_SN);
     2285    20905    2     SEG$2.FPT_FID$->FPT$FID.WSN_=VECTOR(FID_WSN);
     2286    20906    2     SEG$2.FPT_FID$->FPT$FID.ASN_=VECTOR(FID_ASN);
     2287    20907    2     SEG$2.FPT_FID$->FPT$FID.RES_=VECTOR(FID_RES);
     2288    20908    2     SEG$2.FPT_FID$->FPT$FID.RESULTS_=VECTOR(FID_RESULTS);
     2289    20909    2     CALL M$FID(SEG$2.FPT_FID$->FPT$FID) ALTRET(RET);
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:75   
     2290    20910    2     IF FID_ASN ~= %FILE# OR FID_NAME.L# = 0
     2291    20911    2     THEN
     2292    20912    3     DO ;
     2293    20913    3        CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF),511,E_ILLRUFID) ;
     2294    20914    3        ALTRETURN ;
     2295    20915    3        END ; /* Then Do */
     2296    20916        /*E*    ERROR: CPA-E$ILLRUFID-0
     2297    20917                MESSAGE:   Illegal rununit name.
     2298    20918                MESSAGE1:   The rununit name must be a file name.
     2299    20919                DESCRIPTION: User input an illegal rununit name.
     2300    20920        */
     2301    20921    2     IF (FID_RESULTS.ACCT = %NO#) OR (FID_ACCT.ACCT# = ':SYS')
     2302    20922    3     THEN DO;
     2303    20923    3        CALL XLATE(FID_NAME.NAME#,TRANSTBL,FID_NAME.NAME#);
     2304    20924    3        FPT_FINDPROC = CFPT_FINDPROC;
     2305    20925    3        FPT_FINDPROC.V_ = VECTOR(FPT_FINDPROC.V);
     2306    20926    3        FPT_FINDPROC.NAME_ = VECTOR(FID_NAME);
     2307    20927    3        CALL M$FINDPROC (FPT_FINDPROC)   ALTRET(RET);
     2308    20928    3        CMD_PARSING = DEBUGCMND;
     2309    20929    3        P$BLOCK.CODE = DEBUGCMND;
     2310    20930    3        P$BLOCK.SUBLK$(0)->P$S.COUNT=FID_NAME.L#;
     2311    20931    3        P$BLOCK.SUBLK$(0)->P$S.TEXT=FID_NAME.NAME#;
     2312    20932    3        END;
     2313    20933    2   RET: RETURN;
     2314    20934    2   END CHK_RUTYPE;
     2315    20935        %EJECT ;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:76   
     2316    20936        /******************************************************************************/
     2317    20937        /*I*   NAME:    CHK_4_WHEN_CMD
     2318    20938               PURPOSE:    To determine if the specified command is a WHEN comand.
     2319    20939               INPUT:   XUG.LAST The vector that points to the record input.
     2320    20940               OUTPUT:
     2321    20941               DESCRIPTION:   IBEX has gotten a preprocessor error and is now checking
     2322    20942                           to see if the command input was a WHEN command. If it is
     2323    20943                           RETURN to the caller, if not, ALTRETURN to the user.
     2324    20944        */
     2325    20945    1   CHK_4_WHEN_CMD: PROC ALTRET ;
     2326    20946
     2327    20947    2     K = VBOUND(XUG$PARAMS.LAST)+1 ;
     2328    20948    2     TEMPBUF = SUBSTR(VBASE(XUG$PARAMS.LAST)->CP$BUFF,0,K) ;
     2329    20949    2     CALL XLATE(TEMPBUF, TRANSTBL, TEMPBUF) ;
     2330    20950    2     CALL INDEX (I, 'WHEN ', TEMPBUF) ALTRET(NOT_WHEN_CMD) ;
     2331    20951    2     IF I > 0
     2332    20952    2     THEN
     2333    20953    2        IF SUBSTR(TEMPBUF,0,I) ~= ' '
     2334    20954    2        THEN
     2335    20955    2           GOTO NOT_WHEN_CMD ;
     2336    20956    2     RETURN ;
     2337    20957
     2338    20958    2   NOT_WHEN_CMD:
     2339    20959    2     ALTRETURN ;
     2340    20960
     2341    20961    2   END   CHK_4_WHEN_CMD ;
     2342    20962        %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:77   
     2343    20963        /**********************************************************************/
     2344    20964        /*I    NAME:   WHEN_ERR
     2345    20965               PURPOSE: A routine to report errors for the WHEN command.
     2346    20966               CALL:   CALL WHEN_ERR
     2347    20967               interface:
     2348    20968               Input:
     2349    20969               Output:
     2350    20970               DESCRIPTION: The errors are output to the user.
     2351    20971        */
     2352    20972        /**********************************************************************/
     2353    20973    1   WHEN_ERR: PROC;
     2354    20974    2     I = B$JIT.DCBNO;                         /*Preserve DCB#*/
     2355    20975    2     IF CMD_SOURCE = XEQFILE
     2356    20976    2       AND (NOT(B$JIT.CPFLAGS1 & %CP_ECHO#))
     2357    20977
     2358    20978    2     THEN /* Echo */
     2359    20979    2        CALL CPA$ECHOCC (CMD_SOURCE,%YES#);
     2360    20980        /*
     2361    20981             ***** Print error messages ...
     2362    20982        */
     2363    20983    2     IF ADDR(SEG$2.ERRBUF) -> ERR$BLK.FIRST ~= 0
     2364    20984    2     THEN   /* Print errors */
     2365    20985    3     DO;
     2366    20986    3        CALL CPR$RPTERR (SEG$2.ERRBUF,0);
     2367    20987    3        ERR_CODE = ADDR(SEG$2.ERRBUF) -> ERR$BLK.BLK.ERROR(1);
     2368    20988    3        ADDR(SEG$2.ERRBUF) -> ERR$BLK.FIRST = 0;
     2369    20989    3        ADDR(SEG$2.ERRBUF) -> ERR$BLK.NEXT = 0;
     2370    20990    3        END;
     2371    20991    2     IF B$JIT.USRERR.CODE ~= 0
     2372    20992    2     THEN   /* Print any other error messages */
     2373    20993    3     DO;
     2374    20994    3        ERR_CODE = B$JIT.USRERR;
     2375    20995    3        CALL CPC$WRITEMSGE (ERR_CODE,I);
     2376    20996    3        END;
     2377    20997
     2378    20998    2     RETURN;
     2379    20999    2   END   WHEN_ERR;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:78   
     2380    21000    1   END CPA$IBEX;

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:79   
--  Include file information  --

   CXG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   CX_MACROS_M.:E05TOU  is referenced.
   CX_SUBS_C.:E05TOU  is referenced.
   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   NK_VFC_C.:E05TOU  is referenced.
   JS$CP6V_C.:E05TOU  is referenced.
   JP_SUBS_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$TABLES_C.:E05TOU  cannot be made into a system file and is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   XU_PERR_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   UM_ERRORS_C.:E05TOU  is referenced.
   KV_ERRORS_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   AZ_SUBS_C.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   AZ_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPA$IBEX.

   Procedure CPA$IBEX requires 3699 words for executable code.
   Procedure CPA$IBEX requires 312 words of local(AUTO) storage.
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:80   

    No errors detected in file CPA$IBEX.:E05TSI    .

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:81   

 Object Unit name= CPA$IBEX                                   File name= CPA$IBEX.:E05TOU
 UTS= JUL 29 '97 11:15:41.80 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS    109    155  CPA$IBEX
    2   Proc  even  none  3699   7163  CPA$IBEX
    3  RoData even  none    66    102  CPA$IBEX

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        0  CPA$IBEX
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:82   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 B_POINTER
         yes           Std       4 CXB$DELAM
         yes           Std       3 CPE$RZEROS
 yes     yes           Std       0 CPA$GETRES
 yes     yes           Std       1 CPE$EXPOUND
 yes     yes           Std       1 CXG$ALLMSG
 yes     yes           Std       1 CPA$DEBUG
 yes     yes           Std       1 CPA$LINK
 yes     yes           Std       1 CPF$PROFILE
         yes           Std       2 CPC$SCREECH
 yes     yes           Std       1 CPA$SAVE
 yes     yes           Std       1 CPI$DRIBBLE
 yes     yes           Std       1 CPF$SWITCH
 yes     yes           Std       2 CXC$COMMAND
 yes     yes           Std       1 CPA$JOIN
 yes     yes           Std       1 CPG$WHEN
 yes     yes           Std       1 CPB$ATITLE
 yes     yes           Std       1 CPB$PLATEN
         yes           Std       2 CPC$GETDCB
 yes     yes           Std       0 CPC$QUIT
 yes     yes           Std       1 CPE$TIME
 yes     yes           Std       1 CPD$SYNTAX
 yes     yes           Std       1 CPE$DISPLAY
 yes     yes           Std       1 CPF$PRIV
 yes     yes           Std       1 CPF$TERMINAL
 yes     yes           Std       1 CPA$EDIT
         yes           Std       6 CPC$WRITEMSGE
 yes     yes           Std       1 CPK$CHECK
         yes           Std       2 CPF$SET_PROMPT
 yes     yes           Std       1 CPE$ECHO
 yes     yes           Std       1 CPG$OUTPUT
 yes     yes           Std       1 CPA$SIXEDIT
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:83   
 yes     yes           Std       1 CPB$TITLE
 yes     yes           Std       1 CPI$DIRECTORY
 yes     yes           Std       1 CPE$PROTECT
 yes     yes           Std       0 CPM$MINI
         yes           Std       1 CPD$SYNTRY
 yes     yes           Std       1 CXG$HELP
 yes     yes           Std       1 CPG$IF
 yes     yes           Std       1 CPA$PCL
 yes     yes           Std       2 CPJ$ESTCUM
 yes     yes           Std       1 CPE$PASSWORD
 yes     yes           Std       2 CPC$RDUSERS
 yes     yes           Std       1 CXG$MOREMSG
 yes     yes           Std       1 CXG$ERRMSG
 yes     yes           Std       1 CPO$ACQUIRE
 yes     yes           Std       1 CPA$RUNIT
 yes     yes           Std       1 CPA$EXIT
 yes     yes           Std       1 CPF$PROMPT
 yes     yes           Std       1 CPI$TABS
 yes     yes           Std       1 CPH$BATXEQ
 yes     yes           Std       1 CPB$DECOUPLE
 yes     yes           Std       1 CPB$STATUS
 yes     yes           Std       1 CPG$LET
 yes     yes           Std       1 CPJ$LIMIT
 yes     yes           Std       1 CPE$POSITION
 yes     yes           Std       1 CPK$CANCEL
 yes     yes           Std       1 CPA$GET
 yes     yes           Std       1 CPK$NOTIFY
 yes     yes           Std       1 CXG$SETERRMSG
         yes           Std       0 CPC$OPEN_LL
 yes     yes           Std       1 CPG$CHK_WHEN_CONDITION
 yes     yes           Std       1 CPE$DONT
         yes           Std       1 CPG$FUN$$
         yes           Std       1 CPX$FIRST_PASS
         yes           Std       5 CXP$POSTERR
 yes     yes           Std       2 CXG$BLANK_PASSWORD
 yes     yes           Std       1 CPA$START
 yes     yes           Std       3 CPA$WR_CONTFILE
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:84   
 yes     yes           Std       1 CPE$LIST
 yes     yes           Std       1 CPE$POINT
 yes     yes           Std       1 CPO$ORES
 yes     yes           Std       1 CXG$ERRPTR
 yes     yes           Std       1 CPA$FEPLINK
 yes     yes           Std       1 CPG$GOTO
 yes     yes           Std       1 CPI$PRIORITY
 yes     yes           Std       2 CPI$SETUP
 yes     yes           Std       0 CPA$CHK_IF_A_DISALLOWED_CMD
 yes     yes           Std       1 CPA$BYE
 yes     yes           Std       1 AZA$LOGOFF
         yes           Std       2 CPR$RPTERR
         yes           Std       0 CPA$FLUSH
 yes     yes           Std       1 CPI$ACCEPT
 yes     yes           Std       1 CPE$EJECT
 yes     yes           Std       1 CPA$GO
 yes     yes           Std       1 CPH$GLOBAL
 yes     yes           Std       1 CPE$COMMENT
 yes     yes           Std       1 CPB$MESSAGE
 yes     yes           Std       1 CPO$RELEASE
 yes     yes           Std       1 CPB$COUPLE
 yes     yes           Std       1 CPB$LOCATE
 yes     yes           Std       1 CPB$REPORT
         yes           Std       1 CPA$CONTINUE
 yes     yes           Std       1 CPE$DIAGOUT
         yes           Std       2 CPA$ECHOCC
 yes     yes           Std       1 CPA$EFT
 yes     yes           Std       0 CPC$EXIT
         yes           Std       1 CPC$RELDCB
 yes     yes           Std       1 CPA$BACKUP
         yes           Std       0 CPC$UNIMPCMD
 yes     yes           Std       1 CPA$UNDER
 yes     yes           Std       2 CPA$READCC
 yes     yes           Std       1 CPA$PMD
 yes     yes           Std       2 CXG$INIT
         yes           Std       0 CPB$OPENCS
                       Std       0 B_CONSPOOL_D
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:85   
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_INDEX

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  CFPT_OPEN                             CFPT_CPEXIT
     CFPT_FID                              CONTINUATION_COMMANDS                 IBEX_NAME
     CFPT_TRMCTL                           CVLP_WINDOW                           CFPT_FINDPROC
     CFPT_XXX                         r    SEG2$                            r    B$PS1$
r    B$PS2$                           r    B$JIT$                           r    B$TCB$
     M$UC_NUM                              M$IBEX_NUM                            M$IBEX1_NUM
     M$IBEX2_NUM                           M$LL_NUM                              IBEXTXTC
     IBEX1TXTC                             SOURCEDCB                             UPDATEDCB
     OBJECTDCB                             LISTDCB                               IBEX_CMD
     XUE_PREEXP                            LINKPMME_CMD                     r    B$XL_UPPER$
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:86   


        1        1        /*M*   CPA$IBEX   Interactive and Batch EXecutive   */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  DMC,PLM=2,CSI=1   */
        8        8        /*P*   NAME:   CPA$IBEX
        9        9               PURPOSE: To serve as the BATCH, on-line, and ghost user interface for
       10       10                       CP-6 services. CPA$IBEX reads and interprets commands and
       11       11                       is the main driving routine for IBEX. Some of the major functions
       12       12                       performed by CPA$IBEX are:
       13       13                       1. Call user programs and system processors.
       14       14                       2. Read and process control commands and call the appropriate
       15       15                          routine to perform the function.
       16       16                       3. Associate DELTA or other debuggers.
       17       17                       4. Generates step accounting and termination accounting
       18       18                           records.
       19       19               DESCRIPTION:
       20       20               REFERENCE: Programmers Reference Manual
       21       21        */
       22       22        /***********************************************************************/
       23       23                   %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:87   
       24       24        CPA$IBEX: PROC;

     24  2 000000   000000 700200 xent  CPA$IBEX     TSX0  ! X66_AUTO_0
         2 000001   000470 000000                    ZERO    312,0

       25       25        /*******************************************************************************
       26       26          **
       27       27                Dcbs -
       28       28                      how used in IBEX
       29       29          **
       30       30             M$IBEX, M$IBEX1, M$UC and M$DO are always available.
       31       31             Any dynamic dcbs should always be available, except
       32       32             possibly at control-y time.
       33       33          **
       34       34             M$IBEX should always be open to the command stream. If
       35       35             necessary, it may be used after closing. It should be
       36       36             reopened by calling CPB$OPENCS before return to CPA$IBEX.
       37       37          **
       38       38             M$IBEX1 is for general use and should be opened by the
       39       39             current routine and closed before returning to CPA$IBEX.
       40       40          **
       41       41             M$IBEX2 is reserved for I/O purposes described below.
       42       42        **
       43       43             M$LL may be a dynamic dcb or M$IBEX2.
       44       44             When IBEX needs to write thru M$LL CPC$OPEN_LL is
       45       45             called. If there is a rununit under IBEX then it may
       46       46             have a M$LL dcb and IBEX should use that one. Therefore,
       47       47             CPC$OPEN_LL tries to get a dynamic dcb. If that fails it
       48       48             falls back and uses M$IBEX2. Whichever dcb is used, that
       49       49             dcbnumber is stored into SEG$2.LLDCB# for later use. When
       50       50             IBEX exits, this and other dcbs are closed and released.
       51       51          **
       52       52             M$UC is used if in control-y mode. Both for reads from the
       53       53             terminal and writes to the terminal.
       54       54          **
       55       55             M$DO is used to output error messages thru.
       56       56          **
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:88   
       57       57        *******************************************************************************/
       58       58        %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:89   
       59       59        /*******************************************************************************
       60       60          **
       61       61                Flags -
       62       62                         how used in IBEX
       63       63          **
       64       64             The flags ( B$JIT.CPFLAGS1 ) are used to remember information
       65       65             from job step to job step.
       66       66          **
       67       67             Such as...
       68       68               CP_BRK#      - break received
       69       69               CP_BUFFULL#  - command in B$JIT.CCBUF
       70       70               CP_CFREAD#   - read from XEQ file
       71       71               CP_DONTRFEXT3# - This flag tells IBEX not to RESET FEXT bit for #3
       72       72                                because the file name was *G.  This is for when
       73       73                                IBEX is at JOBSTEP.
       74       74               CP_DELTA#    - !U cmd found
       75       75               CP_DRIBBLE#  - A DRIBBLE command exists
       76       76               CP_ECHO#     - echo cmds from XEQ
       77       77               CP_EXIT#     - The processor exited normally (abnormally)
       78       78               CP_NOTIFY#   - NOTIFY user of changes in BATCH jobs
       79       79               CP_PROCACCT# - processor accounting
       80       80               CP_PROTECT#  - dont prompt !quit
       81       81               CP_SKIPABORT# - Don't abort user at this time
       82       82               CP_SOMENOTIFY#   - there is something to NOTIFY about.
       83       83               CP_STARPROC# - snap(s) in *S
       84       84               CP_STEPACCT# - step accounting
       85       85               CP_STEPLMT#  - step limits in effect
       86       86               CP_TRMNATE#  - Logoff this user after rundown
       87       87          **
       88       88             Information returned to IBEX in CPFLAGS1...
       89       89               CP_JSTEP#  - at job step
       90       90               CP_LOGOFF# - aborted by operator
       91       91               CP_LOGON#  - user already logged on
       92       92               CP_RUND#   - user ready to run down
       93       93               CP_YC#     - Program interrupted by control-y
       94       94               CP_YCPMME# - entry by control-y pmme
       95       95               CP_LNKPMME# - entry by M$LINK pmme.
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:90   
       96       96               CP_FIRSTCP# - IBEX is first command processor
       97       97               CP_LASTCP#  - IBEX is last command processor
       98       98               CP_LASTCPEXISTS# - last command processor exists
       99       99          **
      100      100        *******************************************************************************/
      101      101        /*******************************************************************************
      102      102          **
      103      103                Flags in SEG$2 -
      104      104                                  How some of the internal flags are used
      105      105                                  ie SEG$2.FLAGS.xxx
      106      106          **
      107      107                  USE_REMEM   - A flag that IBEX uses to tell what it should do
      108      108                                if the user hits Control-Y.  If the flag is
      109      109                                set, then SEG$2.REMEM$ should hold the REMEMBER
      110      110                                location the CPC$BREAK will unwind to.  If the flag
      111      111                                is reset, IBEX will treat the Control-Y as a
      112      112                                BREAK.  IBEX must be careful of the setting of
      113      113                                this flag due to the consequences of the UNWIND.
      114      114          **
      115      115        *******************************************************************************/
      116      116        %EJECT ;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:91   
      117      117        %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:92   
      118      118                   %INCLUDE AZ_MACRO_C;
      119     2705                   %INCLUDE AZ_SUBS_C;
      120     2774                   %INCLUDE B$JIT;
      121     3064                   %INCLUDE B_MACROS_C;
      122     3175                   %INCLUDE CP_6;
      123     3256                   %INCLUDE CP_SUBS_C;
      124     4173                   %INCLUDE CP_PERR_C;
      125     4511                   %INCLUDE F_ERRORS_C;
      126     4751                   %INCLUDE KV_ERRORS_C;
      127     4811                   %INCLUDE UM_ERRORS_C;
      128     4845                   %INCLUDE CP_6_SUBS;
      129     5385                   %INCLUDE CP_MACROS_C;
      130     6137                   %INCLUDE XU_MACRO_C;
      131     9243                   %INCLUDE AS_SUPER_C;
      132     9678                   %INCLUDE XU_PERR_C;
      133     9869                   %INCLUDE XU_SUBS_C;
      134     9961                   %INCLUDE B$TABLES_C ;
      135    10069                   %INCLUDE XUH_MACRO_C;
      136    10153                   %INCLUDE KL_SUPER_C;
      137    13055                   %INCLUDE JP_SUBS_C;
      138    13080                   %INCLUDE JS$CP6V_C ;
      139    13143                   %INCLUDE NK_VFC_C;
      140    13217                   %INCLUDE CP_DATA_R;
      141    15780                   %INCLUDE CX_SUBS_C ;
      142    15793                   %INCLUDE CX_MACROS_M;
      143    15844    1   DCL CPA$BACKUP     ENTRY(1)  ALTRET;
      144    15845    1   DCL AZA$LOGOFF     ENTRY(1)  ALTRET;
      145    15846    1   DCL CPA$BYE        ENTRY(1)  ALTRET;
      146    15847    1   DCL CPG$CHK_WHEN_CONDITION ENTRY(1) ALTRET ;
      147    15848    1   DCL CPA$CONTINUE   ENTRY(1);
      148    15849    1   DCL CPA$DEBUG      ENTRY(1)  ALTRET;
      149    15850    1   DCL CPA$EDIT       ENTRY(1)  ALTRET;
      150    15851    1   DCL CPA$ECHOCC     ENTRY(2);
      151    15852    1   DCL CPA$EFT        ENTRY(1)  ALTRET;
      152    15853    1   DCL CPA$EXIT       ENTRY(1)  ALTRET;
      153    15854    1   DCL CPA$FEPLINK    ENTRY(1)  ALTRET;
      154    15855    1   DCL CPA$FLUSH      ENTRY;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:93   
      155    15856    1   DCL CPA$GET        ENTRY(1)  ALTRET;
      156    15857    1   DCL CPA$GETRES     ENTRY     ALTRET;
      157    15858    1   DCL CPA$GO         ENTRY(1)  ALTRET;
      158    15859    1   DCL CPA$INFORM     ENTRY(1)  ALTRET;
      159    15860    1   DCL CPA$JOIN       ENTRY(1)  ALTRET;
      160    15861    1   DCL CPJ$LIMIT      ENTRY(1)  ALTRET;
      161    15862    1   DCL CPA$LINK       ENTRY(1)  ALTRET;
      162    15863    1   DCL CPA$LOGON      ENTRY(1)  ALTRET;
      163    15864    1   DCL CPA$PCL        ENTRY(1)  ALTRET;
      164    15865    1   DCL CPA$PMD        ENTRY(1)  ALTRET;
      165    15866    1   DCL CPA$QUIT       ENTRY(1)  ALTRET;
      166    15867    1   DCL CPA$READCC     ENTRY(2)  ALTRET;
      167    15868    1   DCL CPA$RUNIT      ENTRY(1)  ALTRET;
      168    15869    1   DCL CPA$SAVE       ENTRY(1)  ALTRET;
      169    15870    1   DCL CPA$SIXEDIT    ENTRY(1)  ALTRET;
      170    15871    1   DCL CPA$START      ENTRY(1)  ALTRET;
      171    15872    1   DCL CPA$UNDER      ENTRY(1)  ALTRET;
      172    15873    1   DCL CPA$WR_CONTFILE ENTRY(3)  ALTRET;
      173    15874    1   DCL CPB$ATITLE     ENTRY(1)  ALTRET;
      174    15875    1   DCL CPB$COUPLE     ENTRY(1)  ALTRET;
      175    15876    1   DCL CPB$DECOUPLE   ENTRY(1)  ALTRET;
      176    15877    1   DCL CXB$DELAM      ENTRY(4) ;
      177    15878    1   DCL CPB$ERASE#     ENTRY(1)  ALTRET;
      178    15879    1   DCL CPB$ERROR      ENTRY(1)  ALTRET;
      179    15880    1   DCL CPB$LOCATE     ENTRY(1)  ALTRET;
      180    15881    1   DCL CPB$OPENCS     ENTRY;
      181    15882    1   DCL CPB$MESSAGE    ENTRY(1)  ALTRET;
      182    15883    1   DCL CPB$PLATEN     ENTRY(1)  ALTRET;
      183    15884    1   DCL CPB$REPORT     ENTRY(1)  ALTRET;
      184    15885    1   DCL CPB$SEND       ENTRY(1)  ALTRET;
      185    15886    1   DCL CPB$STATUS     ENTRY(1)  ALTRET;
      186    15887    1   DCL CPB$TABS       ENTRY(1)  ALTRET;
      187    15888    1   DCL CPB$TERMINAL   ENTRY(1)  ALTRET;
      188    15889    1   DCL CPB$TITLE      ENTRY(1)  ALTRET;
      189    15890    1   DCL CPC$EXIT       ENTRY     ALTRET;
      190    15891    1   DCL CPC$GETDCB     ENTRY(2);
      191    15892    1   DCL CPC$RELDCB     ENTRY(1);
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:94   
      192    15893    1   DCL CPC$GETSEG     ENTRY(2)  ALTRET;
      193    15894    1   DCL CPC$OPEN_LL    ENTRY;
      194    15895    1   DCL CPC$QUIT       ENTRY     ALTRET;
      195    15896    1   DCL CPC$RDUSERS    ENTRY(2)  ALTRET;
      196    15897    1   DCL CPC$RELSEG     ENTRY(1);
      197    15898    1   DCL CPC$SCREECH    ENTRY(2);
      198    15899    1   DCL CPC$SETIQUIT   ENTRY;
      199    15900    1   DCL CPC$UNIMPCMD   ENTRY;
      200    15901    1   DCL CPC$WRITEMSGE  ENTRY(6);
      201    15902    1   DCL CPD$SYNTAX     ENTRY(1)  ALTRET;
      202    15903    1   DCL CPD$SYNTRY     ENTRY(1);
      203    15904    1   DCL CPE$COMMENT    ENTRY(1)  ALTRET;
      204    15905    1   DCL CPE$DISPLAY    ENTRY(1)  ALTRET;
      205    15906    1   DCL CPE$DIAGOUT    ENTRY(1)  ALTRET;
      206    15907    1   DCL CPE$DONT       ENTRY(1)  ALTRET;
      207    15908    1   DCL CPE$ECHO       ENTRY(1)  ALTRET;
      208    15909    1   DCL CPE$EJECT      ENTRY(1)  ALTRET;
      209    15910    1   DCL CPE$EXPOUND    ENTRY(1) ALTRET;
      210    15911    1   DCL CPE$LIST       ENTRY(1)  ALTRET;
      211    15912    1   DCL CPE$LISTOUT    ENTRY(1)  ALTRET;
      212    15913    1   DCL CPE$OUTPUT     ENTRY(1)  ALTRET;
      213    15914    1   DCL CPE$PASSWORD   ENTRY(1)  ALTRET;
      214    15915    1   DCL CPE$POINT      ENTRY(1) ALTRET;
      215    15916    1   DCL CPE$POSITION   ENTRY(1) ALTRET;
      216    15917    1   DCL CPE$PROTECT    ENTRY(1)  ALTRET;
      217    15918    1   DCL CPE$RZEROS     ENTRY(3);
      218    15919    1   DCL CPE$TIME       ENTRY(1)  ALTRET;
      219    15920    1   DCL CPF$PRIV       ENTRY(1)  ALTRET;
      220    15921    1   DCL CPF$PROFILE    ENTRY(1)  ALTRET;
      221    15922    1   DCL CPF$SWITCH     ENTRY(1)  ALTRET;
      222    15923    1   DCL CPF$TERMINAL   ENTRY(1)  ALTRET;
      223    15924    1   DCL CPG$FUN$$      ENTRY(1) ;
      224    15925    1   DCL CPG$GOTO       ENTRY(1)  ALTRET;
      225    15926    1   DCL CPG$IF         ENTRY(1)  ALTRET;
      226    15927    1   DCL CPG$LET        ENTRY(1)  ALTRET;
      227    15928    1   DCL CPG$OUTPUT     ENTRY(1)  ALTRET;
      228    15929    1   DCL CPG$WHEN       ENTRY(1)  ALTRET;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:95   
      229    15930    1   DCL CPH$BATXEQ     ENTRY(1)  ALTRET;
      230    15931    1   DCL CPH$GLOBAL     ENTRY(1)  ALTRET;
      231    15932    1   DCL CPI$ACCEPT     ENTRY(1)  ALTRET;
      232    15933    1   DCL CPI$DIRECTORY  ENTRY(1)  ALTRET;
      233    15934    1   DCL CPI$DRIBBLE    ENTRY(1)  ALTRET;
      234    15935    1   DCL CPI$PRIORITY   ENTRY(1)  ALTRET;
      235    15936    1   DCL CPI$SETUP      ENTRY(2)  ALTRET;
      236    15937    1   DCL CPI$TABS       ENTRY(1)  ALTRET;
      237    15938    1   DCL CPJ$ESTCUM     ENTRY(2)  ALTRET;
      238    15939    1   DCL CPK$CANCEL     ENTRY(1)  ALTRET;
      239    15940    1   DCL CPK$CHECK      ENTRY(1)  ALTRET;
      240    15941    1   DCL CPK$NOTIFY     ENTRY(1)  ALTRET;
      241    15942    1   DCL CPO$ACQUIRE    ENTRY(1)  ALTRET;
      242    15943    1   DCL CPO$ORES       ENTRY(1)  ALTRET;
      243    15944    1   DCL CPO$RELEASE    ENTRY(1)  ALTRET;
      244    15945    1   DCL CPM$MINI ENTRY ALTRET;
      245    15946    1   DCL CXP$POSTERR    ENTRY(5);
      246    15947    1   DCL CPR$RPTERR     ENTRY(2);
      247    15948    1   DCL CPR$RPTERR_2   ENTRY(2);
      248    15949    1   DCL CPX$FIRST_PASS ENTRY (1);
      249    15950    1   DCL CPA$CHK_IF_A_DISALLOWED_CMD ENTRY ALTRET;
      250    15951    1   DCL CXC$COMMAND    ENTRY(2) ALTRET ;
      251    15952    1   DCL X$PRE_PROCESS  ENTRY(1)  ALTRET;
      252    15953    1   DCL CPF$PROMPT  ENTRY(1) ALTRET;
      253    15954    1   DCL CPF$SET_PROMPT ENTRY(2);
      254    15955        %INCLUDE CXG_ENTRY ;
      255    15967        /***** Ubin/Sbin words *****/
      256    15968    1   DCL PREV_CMND UBIN WORD;
      257    15969    1   DCL CMD_PARSING UBIN WORD;
      258    15970    1   DCL I SBIN;                             /*Temp. Loc. For indexes*/
      259    15971    1   DCL J SBIN;                             /*Temp. Loc for indexes*/
      260    15972    1   DCL K SBIN;                             /*Temp. Location*/
      261    15973    1   DCL USRDCB UBIN WORD;                   /* Save job step passed dcb */
      262    15974    1   DCL CMD_SOURCE UBIN WORD;
      263    15975    1   DCL DCB# UBIN;
      264    15976    1   DCL 1 IGNORED,
      265    15977    1         2 CNT UBIN BYTE UNAL,
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:96   
      266    15978    1         2 TXT CHAR(7) UNAL,
      267    15979    1         2 TXTA(0:6) REDEF TXT CHAR(1) UNAL;
      268    15980        /***** Remember *****/
      269    15981    1   DCL REMEM_VAR REMEMBER ;
      270    15982    1   DCL REMEM_CONTEXT_ERR REMEMBER ;
      271    15983    1   DCL REMEM$VAR REMEMBER BASED ;
      272    15984        /***** Ptrs *****/
      273    15985    1   DCL TEMP$ PTR AUTO;
      274    15986    1   DCL BLK$ PTR AUTO;
      275    15987    1   DCL P$PCB$ PTR ;
      276    15988    1   DCL XUG$ PTR ;
      277    15989        /***** Bit data *****/
      278    15990    1   DCL FIRST_SYNTAX_ERR BIT(1) ;
      279    15991    1   DCL TRIED_2_XPAND_WND BIT(1) ;
      280    15992        /***** Character data *****/
      281    15993    1   DCL TEMPBUF CHAR(%CPBUFFSIZE) AUTO;
      282    15994        /***** Symref date *****/
      283    15995    1   DCL IBEX_CMD BIT(36) SYMREF;
      284    15996    1   DCL XUE_PREEXP BIT(36) SYMREF;
      285    15997    1   DCL LINKPMME_CMD BIT(36) SYMREF;
      286    15998    1   DCL  RU_ BIT(36) SYMREF;
      287    15999        /***** Local structures *****/
      288    16000          %FPT_OPEN (STCLASS=AUTO);
      289    16109          %FPT_TRMCTL (FPTN=FPT_TRMCTL, STCLASS=AUTO);
      290    16136          %VLP_ERRCODE (FPTN=ERR_CODE,STCLASS=AUTO);
      291    16181          %ERR_BLK (NAME=ERR$BLK,STCLASS=BASED);
      292    16206          %XUH_PARAM (NAME=CXUH_PARAM,PROCNAME=IBEX_NAME,PROCACCT=SYS,STCLASS=CONSTANT);
      293    16267          %XUH_PARAM (NAME=X$PARAM,STCLASS=AUTO);
      294    16328          %VLP_ACCT (FPTN=SYS,ACCT=':SYS',STCLASS=CONSTANT);
      295    16341          %VLP_VECTOR(FPTN=RESULTS,STCLASS=AUTO);
      296    16356          %VLP_WINDOW(FPTN=VLP_WINDOW, STCLASS=AUTO);
      297    16400          %B$TCB (STCLASS="BASED(B$TCB$)");
      298    16403          %B$ALT;
      299    16411          %TEXTC (NAME=X$STRING);
      300    16416          %PARSE$OUT (NAME=P$B);
      301    16461          %PARSE$SYM (NAME=P$S);
      302    16499          %F$DCB;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:97   
      303    16556          %CP$BUFF (NAME=CP$BUFF,STCLASS=BASED);
      304    16559          %CPSL_COMMAND_PARAMETERS (NAME=CPSL_PARAM, STCLASS=AUTO) ;
      305    16577          %B$XL_UPPER (NAME=TRANSTBL) ;
      306    16581        /***** Based Fpts *****/
      307    16582          %FPT_CLOSE(FPTN=FPT$CLOSE,STCLASS=BASED);
      308    16624          %FPT_READ(FPTN=FPT$READ,STCLASS=BASED);
      309    16663          %FPT_WRITE(FPTN=FPT$WRITE,STCLASS=BASED);
      310    16694          %FPT_CPEXIT(FPTN=FPT$CPEXIT,STCLASS=BASED);
      311    16720          %FPT$YC_V(FPTN=FPTV$YC);
      312    16723          %VLR_YC (FPTN=VLR$YC, STCLASS=BASED) ;
      313    16730          %XUG_GETCMD (NAME=GET$CMD, STCLASS=BASED) ;
      314    17068          %XUG_INIT (NAME=XUG$INIT, STCLASS=BASED) ;
      315    17481          %XUG_PARAMS (NAME=XUG$PARAMS, STCLASS="BASED(XUG$)") ;
      316    17925        %XUG_RLT (NAME=XUG$RLT) ;
      317    17932          %P$PCB (NAME=P$PCB, STCLASS="BASED(P$PCB$)") ;
      318    18133                   %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:98   
      319    18134        /*         The following macro defines the layout of IBEX's data segment*/
      320    18135        /*         Utilized for static data and pointed to by SEG2$. */
      321    18136        /*         A change to the macro may require a change to the routine*/
      322    18137        /*         Which initializes the data SEGMENT.*/
      323    18138                   %LIST;
      324    18139                   %SEG$2(NAME=SEG$2);
             18140    1   DCL 1 NAME ALIGNED STCLASS,
             18141    1         2 FLAGS,
             18142    1           3 USERS BIT(1) UNAL,            /* SEG$2.USERS$ is valid              */
             18143    1           3 HLP BIT(1) UNAL,              /* SEG$2.HLP$ is valid                */
             18144    1           3 RES BIT(1) UNAL,              /* SEG$2.PSEUDO$ & SEG$2.PHYS valid   */
             18145    1           3 SKIP_ECHO BIT(1) UNAL,        /* Do not echo this command           */
             18146    1           3 NOM$LLDCB BIT(1) UNAL,        /* No M$LL dcb yet                    */
             18147    1           3 IGNORE_XXX BIT(1) UNAL,       /* Ignore abort for M$XXX             */
             18148    1           3 SKIP_ERRS BIT(1) UNAL,        /* Dont print errs                    */
             18149    1           3 CONTINUED BIT(1) UNAL,        /* This command was continued         */
             18150    1           3 RUNITCMD BIT(1) UNAL,         /* This is a RUN UNIT cmd.            */
             18151    1           3 ABORT BIT(1) UNAL,            /* ABORT processing.                  */
             18152    1           3 CMD_STR_INT BIT(1) UNAL,      /* COMMAND STREAM was interrupted     */
             18153    1           3 YCPMME_INT BIT(1) UNAL,       /* M$YC was interrupted with a Y-C    */
             18154    1           3 CPBUFFULL_AT_CSINT BIT(1) UNAL, /* CPBUFF was full when CS interupt.*/
             18155    1           3 USE_REMEM BIT(1) UNAL,  /* Use the REMEMBER variable for UNWIND. */
             18156    1           3 USE_CCBUF_IF_YC BIT(1) UNAL,  /* Use CCBUF if during YC. */
             18157    1           3 IBEX_OWNS_M$LL BIT(1) UNAL,
             18158    1           3 GOT_WHEN_CNTL_REC BIT(1) UNAL,/* We already got WHEN_CNTL_REC*/
             18159    1           3 * BIT(1) UNAL,
             18160    1         2 LLDCB# UBIN(18) UNAL,
             18161    1         2 NCHARS UBIN(18) UNAL,          /* CURRENT RECD. SIZE (CHARS.)        */
             18162    1         2 USERS_SZ UBIN(18) UNAL,        /* ACTUAL LEN IN CHARS OF :USERS REC  */
             18163    1         2 HLP_SZ UBIN(18) UNAL,          /* ACTUAL LEN IN CHARS OF :HLP REC    */
             18164    1         2 LASTPROMPT UBIN HALF UNAL,     /* Last prompt displayed */
             18165    1         2 ERRBUF (0:99) UBIN WORD,
             18166    1         2 DBUG_NAME ALIGNED,
             18167    1           3 CNT UBIN(9) UNAL,
             18168    1           3 TXT CHAR(11),
             18169    1         2 USERS$               PTR ALIGNED,
             18170    1         2 HLP$                 PTR ALIGNED,
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:99   
             18171    1         2 PSEUDO$              PTR ALIGNED,
             18172    1         2 PHYS$                PTR ALIGNED,
             18173    1         2 FPT_READUC$          PTR ALIGNED,
             18174    1         2 FPT_WRITEUC$         PTR ALIGNED,
             18175    1         2 FPT_READCC$          PTR ALIGNED,
             18176    1         2 FPT_WRITECC$         PTR ALIGNED,
             18177    1         2 FPT_OPEN$            PTR ALIGNED,
             18178    1         2 FPT_CLOSE$           PTR ALIGNED,
             18179    1         2 FPT_READ$            PTR ALIGNED,
             18180    1         2 FPT_WRITE$           PTR ALIGNED,
             18181    1         2 FPT_CPEXIT$          PTR ALIGNED,
             18182    1         2 FPT_FID$             PTR ALIGNED,
             18183    1         2 FPT_TIME$            PTR ALIGNED,
             18184    1         2 CPBUFF$              PTR ALIGNED,
             18185    1         2 XUG_INIT$            PTR ALIGNED,
             18186    1         2 GETCMD$              PTR ALIGNED,
             18187    1         2 REMEM$               PTR ALIGNED,
             18188    1         2 WHEN_CNTL_REC$       PTR ALIGNED,
             18189    1         2 ACCUM_CHG            UBIN WORD ,
             18190    1         2 SPROMPT$             PTR ALIGNED,
             18191    1         2 PROMPT$              PTR ALIGNED,
             18192    1         2 XUC$                 PTR ALIGNED,
             18193    1         2 WRITTEN              BIT(1) ALIGNED,
             18194    1         2 LINECOUNT            SBIN ALIGNED,
             18195    1         2 TABVAL               SBIN ALIGNED,
             18196    1         2 PROMPT_TYPE          UBIN ALIGNED,
             18197    1         2 XUC_BUFF             CHAR(160) ALIGNED;
      325    18199                   %PLIST;
      326    18200                   %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:100  
      327    18201        /***** Fpts *****/
      328    18202          %FPT_XXX (FPTN=FPT_XXX,STCLASS=AUTO);
      329    18217          %U$PARAM (NAME=U$PARAM,STCLASS=AUTO);
      330    18233          %LOGOFF$PARAM (NAME=LOGOFF,STCLASS=AUTO);
      331    18274                      %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:101  
      332    18275                /***** Error codes *****/
      333    18276        %ERR_CODE (NAME=E_CSINT,MID#=CPA$IBEXMID,CODE#=E$CSINT,STCLASS=CONSTANT);
      334    18296        %ERR_CODE (NAME=E_YCPMMEBRK,MID#=CPA$IBEXMID,CODE#=E$YCPMMEBRK,STCLASS=CONSTANT);
      335    18316        %ERR_CODE (NAME=E_ABRTBATCH,MID#=CPA$IBEXMID,CODE#=E$ABRTBATCH,STCLASS=CONSTANT);
      336    18336        %ERR_CODE (NAME=E_YC_RUND,MID#=CPA$IBEXMID,CODE#=E$YC_RUND,STCLASS=CONSTANT);
      337    18356        %ERR_CODE (NAME=E_CONT,MID#=CPA$IBEXMID,CODE#=E$CONT,STCLASS=CONSTANT);
      338    18376        %ERR_CODE (NAME=E_RECS_IGNORED,MID#=CPA$IBEXMID,CODE#=E$RECS_IGNORED,STCLASS=
             18376            CONSTANT);
      339    18396        %ERR_CODE (NAME=E_INPUT,MID#=CPA$IBEXMID,CODE#=E$INPUT,STCLASS=CONSTANT);
      340    18416        %ERR_CODE (NAME=E_LIMEXC,MID#=CPA$IBEXMID,CODE#=E$LIMEXC,STCLASS=CONSTANT);
      341    18436        %ERR_CODE (NAME=E_MPRESOURCE,MID#=CPA$IBEXMID,CODE#=E$MPRESOURCE,STCLASS=CONSTANT);
      342    18456        %ERR_CODE (NAME=E_RESINVALID,MID#=CPA$IBEXMID,CODE#=E$RESINVALID,STCLASS=CONSTANT);
      343    18476        %ERR_CODE (NAME=E_ILLRUFID,MID#=CPA$IBEXMID,CODE#=E$ILLRUFID,STCLASS=CONSTANT);
      344    18496        %ERR_CODE (NAME=E_NO_MORE,MID#=CPA$IBEXMID,CODE#=E$NO_MORE,STCLASS=CONSTANT);
      345    18516        %ERR_CODE (NAME=E_CMDDISALLOWED,MID#=CPA$IBEXMID,CODE#=E$CMDDISALLOWED,STCLASS=
             18516            CONSTANT);
      346    18536        %VLP_ERRCODE (FPTN=E_BANG_EOD,MID=D,ERR#=%E$EOF,FCG=FS,MON='1'B,SEV=2,STCLASS=
             18536            CONSTANT);
      347    18581        %VLP_ERRCODE (FPTN=E_NJOBSTEP,MID=A,ERR#=E$NJOBSTEP,FCG=CP,STCLASS=CONSTANT);
      348    18626        %VLP_ERRCODE (FPTN=E_EMPTYWND,MID=A,ERR#=E$EMPTYWND,FCG=CP,STCLASS=CONSTANT);
      349    18671        %VLP_ERRCODE (FPTN=E_BDQUITCMND,MID=A,ERR#=E$BDQUITCMND,FCG=CP,STCLASS=CONSTANT);
      350    18716                   %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:102  
      351    18717        /*******************************************************************************
      352    18718        *                               Begin procedure                                *
      353    18719        *******************************************************************************/
      354    18720        /*
      355    18721          **** Preserve dcb num temp. For error msge. In syserr routine
      356    18722        */
      357    18723    1     USRDCB = B$JIT.USRDCB;

  18723  2 000002   000000 470400 xsym               LDP0    B$JIT$
         2 000003   000153 236100                    LDQ     107,,PR0
         2 000004   000777 376007                    ANQ     511,DL
         2 000005   200010 756100                    STQ     USRDCB,,AUTO

      358    18724        /*
      359    18725            **** Get M$IBEX and M$IBEX1 - two dcbs IBEX is guaranteed
      360    18726        */
      361    18727    1     CALL CPC$GETDCB(M$IBEX_NUM, IBEXTXTC);

  18727  2 000006   000000 630400 3                  EPPR0   0
         2 000007   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000010   000000 701000 xent               TSX1    CPC$GETDCB
         2 000011   000000 011000                    NOP     0

      362    18728    1     CALL CPC$GETDCB(M$IBEX1_NUM, IBEX1TXTC);

  18728  2 000012   000002 630400 3                  EPPR0   2
         2 000013   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000014   000000 701000 xent               TSX1    CPC$GETDCB
         2 000015   000000 011000                    NOP     0

      363    18729        /*
      364    18730             ***** Reset first command processor bit
      365    18731        */
      366    18732    1     B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 & ~%CP_FIRSTCP#;

  18732  2 000016   000020 236000 xsym               LDQ     B_VECTNIL+16
         2 000017   000027 676000 xsym               ERQ     B_VECTNIL+23
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:103  
         2 000020   000000 470400 xsym               LDP0    B$JIT$
         2 000021   000143 376100                    ANQ     99,,PR0
         2 000022   000143 756100                    STQ     99,,PR0

      367    18733        /*
      368    18734             ***** Reset CMD_STR_INT (COMMAND STREAM interrupted flag) ...
      369    18735        */
      370    18736    1     SEG$2.FLAGS.CMD_STR_INT = %NO#;

  18736  2 000023   000000 471400 xsym               LDP1    SEG2$
         2 000024   000004 236000 3                  LDQ     4
         2 000025   100000 356100                    ANSQ    0,,PR1

      371    18737        /*
      372    18738             ***** Open M$IBEX and setup proper PROMPT...
      373    18739        */
      374    18740    1     IF NOT B$JIT.CPFLAGS1.LOGOFF OR B$JIT.CPFLAGS1.YCPMME

  18740  2 000026   000143 234100                    SZN     99,,PR0
         2 000027   000035 605000 2                  TPL     s:18744
         2 000030   000143 236100                    LDQ     99,,PR0
         2 000031   020000 316003                    CANQ    8192,DU
         2 000032   000035 601000 2                  TNZ     s:18744
         2 000033   004000 316003                    CANQ    2048,DU
         2 000034   000037 600000 2                  TZE     s:18748

      375    18741    1       OR B$JIT.CPFLAGS1.LNKPMME
      376    18742    1     THEN            /* Init if NOT aborted by operator or M$YCPPME
      377    18743                                                               or M$LINK */
      378    18744    1        CALL OPENINPUT ALTRET(ERRTRN); /* setup for read of command stream */

  18744  2 000035   006033 701000 2                  TSX1    OPENINPUT
         2 000036   005726 702000 2                  TSX2    ERRTRN

      379    18745        /*
      380    18746             ***** Initialize SEG$2.ERRBUF ...
      381    18747        */
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:104  
      382    18748    1     ADDR(SEG$2.ERRBUF) -> ERR$BLK.SIZE = 10;

  18748  2 000037   000012 235007                    LDA     10,DL
         2 000040   000000 470400 xsym               LDP0    SEG2$
         2 000041   000003 755100                    STA     3,,PR0

      383    18749    1     ADDR(SEG$2.ERRBUF) -> ERR$BLK.FIRST = 0;

  18749  2 000042   000004 450100                    STZ     4,,PR0

      384    18750    1     ADDR(SEG$2.ERRBUF) -> ERR$BLK.NEXT = 0;

  18750  2 000043   000005 450100                    STZ     5,,PR0

      385    18751        /*
      386    18752             ***** If entered via M$YC pmme then skip all the accounting
      387    18753                   and dcb cleanup...
      388    18754        */
      389    18755    1     IF B$JIT.CPFLAGS1 & (%CP_YCPMME# | %CP_LNKPMME#)

  18755  2 000044   000141 236000 1                  LDQ     XLIM_TBL+18
         2 000045   000142 276000 1                  ORQ     XLIM_TBL+19
         2 000046   000000 471400 xsym               LDP1    B$JIT$
         2 000047   100143 376100                    ANQ     99,,PR1
         2 000050   000632 601000 2                  TNZ     YCINIT

      390    18756    1     THEN
      391    18757    1        GOTO YCINIT;
      392    18758        /*
      393    18759          ****     Inform user on command stream interruption
      394    18760        */
      395    18761    1     IF B$JIT.NEXTCC = %CC_FROMXEQ#

  18761  2 000051   100151 236100                    LDQ     105,,PR1
         2 000052   000777 376003                    ANQ     511,DU
         2 000053   000002 116003                    CMPQ    2,DU
         2 000054   000071 601000 2                  TNZ     s:18778
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:105  

      396    18762    1     THEN
      397    18763    1        IF B$JIT.CPFLAGS1.YC AND NOT B$JIT.CPFLAGS1.YCGET

  18763  2 000055   100143 236100                    LDQ     99,,PR1
         2 000056   040000 316003                    CANQ    16384,DU
         2 000057   000071 600000 2                  TZE     s:18778
         2 000060   100143 430100                    FSZN    99,,PR1
         2 000061   000071 604000 2                  TMI     s:18778

      398    18764    1        THEN
      399    18765    2        DO;

      400    18766        /*E*       ERROR:   CPA-E$CSINT-E
      401    18767                   MESSAGE: *** Command stream interrupted ***
      402    18768                   DESCRIPTION: Command stream execution was interrupted by the
      403    18769                                user performing a control-y.
      404    18770        */
      405    18771    2           CALL CPC$WRITEMSGE (E_CSINT);

  18771  2 000062   000005 630400 3                  EPPR0   5
         2 000063   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000064   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 000065   000000 011000                    NOP     0

      406    18772    2           SEG$2.FLAGS.CMD_STR_INT = %YES#;

  18772  2 000066   000000 470400 xsym               LDP0    SEG2$
         2 000067   000200 236003                    LDQ     128,DU
         2 000070   000000 256100                    ORSQ    0,,PR0

      407    18773    2           END;

      408    18774        /*
      409    18775             ***** If B$JIT.USRERR.CODE is non-zero,
      410    18776                   then report it...
      411    18777        */
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:106  
      412    18778    1     IF B$JIT.USRERR.CODE ~= 0

  18778  2 000071   000000 471400 xsym               LDP1    B$JIT$
         2 000072   100144 236100                    LDQ     100,,PR1
         2 000073   377770 316007                    CANQ    131064,DL
         2 000074   000161 600000 2                  TZE     s:18807

      413    18779    1     THEN
      414    18780    2     DO;

      415    18781    2        CALL LIMIT_ERR ALTRET(ERRTRN);

  18781  2 000075   006502 701000 2                  TSX1    LIMIT_ERR
         2 000076   005726 702000 2                  TSX2    ERRTRN

      416    18782    2        IF B$JIT.CPFLAGS1.EXIT#

  18782  2 000077   000000 470400 xsym               LDP0    B$JIT$
         2 000100   000143 236100                    LDQ     99,,PR0
         2 000101   020000 316007                    CANQ    8192,DL
         2 000102   000116 600000 2                  TZE     s:18788

      417    18783    3        THEN DO;   /* Save error for ? processing */

      418    18784    3           SEG$2.GETCMD$ -> GET$CMD.ERR_CODE = B$JIT.USRERR;

  18784  2 000103   000000 471400 xsym               LDP1    SEG2$
         2 000104   100173 473500                    LDP3    123,,PR1
         2 000105   000144 236100                    LDQ     100,,PR0
         2 000106   300010 756100                    STQ     8,,PR3

      419    18785    3           CALL CXG$SETERRMSG (SEG$2.GETCMD$ -> GET$CMD);

  18785  2 000107   100173 473500                    LDP3    123,,PR1
         2 000110   200462 453500                    STP3    FID_RES+1,,AUTO
         2 000111   200462 630500                    EPPR0   FID_RES+1,,AUTO
         2 000112   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:107  
         2 000113   000000 701000 xent               TSX1    CXG$SETERRMSG
         2 000114   000000 011000                    NOP     0

      420    18786    3           END;

  18786  2 000115   000161 710000 2                  TRA     s:18807

      421    18787    2        ELSE   /* Report it now */
      422    18788    2           CALL CPA$CHK_IF_A_DISALLOWED_CMD WHENRETURN

  18788  2 000116   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000117   000000 701000 xent               TSX1    CPA$CHK_IF_A_DISALLOWED_CMD
         2 000120   000142 702000 2                  TSX2    s:18795

      423    18789    3           DO;

      424    18790    3              ERR_CODE = E_CMDDISALLOWED;

  18790  2 000121   000110 236000 1                  LDQ     E_CMDDISALLOWED
         2 000122   200232 756100                    STQ     ERR_CODE,,AUTO

      425    18791    3              CALL CPC$WRITEMSGE (ERR_CODE,,,,,%YES#);

  18791  2 000123   000006 236000 3                  LDQ     6
         2 000124   000001 235000 xsym               LDA     B_VECTNIL+1
         2 000125   200466 757100                    STAQ    FID_RES+5,,AUTO
         2 000126   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000127   000001 235000 xsym               LDA     B_VECTNIL+1
         2 000130   200464 757100                    STAQ    FID_RES+3,,AUTO
         2 000131   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000132   200463 756100                    STQ     FID_RES+2,,AUTO
         2 000133   200232 630500                    EPPR0   ERR_CODE,,AUTO
         2 000134   200462 450500                    STP0    FID_RES+1,,AUTO
         2 000135   200462 630500                    EPPR0   FID_RES+1,,AUTO
         2 000136   000024 631400 xsym               EPPR1   B_VECTNIL+20
         2 000137   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 000140   000000 011000                    NOP     0
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:108  

      426    18792    3              END;    /* Whenreturn Do */

  18792  2 000141   000161 710000 2                  TRA     s:18807

      427    18793    2           WHENALTRETURN
      428    18794    3           DO;

      429    18795    3              CALL CPC$WRITEMSGE (B$JIT.USRERR,USRDCB,,,,%YES#);

  18795  2 000142   000006 236000 3                  LDQ     6
         2 000143   000001 235000 xsym               LDA     B_VECTNIL+1
         2 000144   200466 757100                    STAQ    FID_RES+5,,AUTO
         2 000145   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000146   000001 235000 xsym               LDA     B_VECTNIL+1
         2 000147   200464 757100                    STAQ    FID_RES+3,,AUTO
         2 000150   200010 630500                    EPPR0   USRDCB,,AUTO
         2 000151   200463 450500                    STP0    FID_RES+2,,AUTO
         2 000152   000000 236000 xsym               LDQ     B$JIT$
         2 000153   000144 036003                    ADLQ    100,DU
         2 000154   200462 756100                    STQ     FID_RES+1,,AUTO
         2 000155   200462 630500                    EPPR0   FID_RES+1,,AUTO
         2 000156   000024 631400 xsym               EPPR1   B_VECTNIL+20
         2 000157   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 000160   000000 011000                    NOP     0

      430    18796    3              END;    /* Whenaltreturn Do */

      431    18797    2        END;

      432    18798        /**/
      433    18799        /*E*    ERROR:   CPA-E$CMDDISALLOWED-0
      434    18800                MESSAGE: This command has been disallowed.
      435    18801                DESCRIPTION: The user tried to do an IBEX command that has
      436    18802                            disallowed.
      437    18803        */
      438    18804        /*
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:109  
      439    18805             ***** Log user off if last command processor flag set
      440    18806        */
      441    18807    1     IF B$JIT.CPFLAGS1.LASTCP

  18807  2 000161   000000 470400 xsym               LDP0    B$JIT$
         2 000162   000143 236100                    LDQ     99,,PR0
         2 000163   000004 316003                    CANQ    4,DU
         2 000164   000170 600000 2                  TZE     s:18816

      442    18808    1     THEN
      443    18809    1        CALL CPA$BYE;

  18809  2 000165   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000166   000000 701000 xent               TSX1    CPA$BYE
         2 000167   000000 011000                    NOP     0

      444    18810        /*
      445    18811             ***** If step accounting, budget accounting or step reporting
      446    18812                   has been specified then call AZA$LOGOFF...
      447    18813                   UNLESS... this is before the first job step or not
      448    18814                   at job step.
      449    18815        */
      450    18816    1     IF ((B$JIT.CPFLAGS1.STEPACCT ) /* step accounting?? */

  18816  2 000170   000000 470400 xsym               LDP0    B$JIT$
         2 000171   000143 236100                    LDQ     99,,PR0
         2 000172   000400 316007                    CANQ    256,DL
         2 000173   000210 601000 2                  TNZ     s:18816+16
         2 000174   000001 316003                    CANQ    1,DU
         2 000175   000202 600000 2                  TZE     s:18816+10
         2 000176   000151 236100                    LDQ     105,,PR0
         2 000177   070000 376003                    ANQ     28672,DU
         2 000200   030000 116003                    CMPQ    12288,DU
         2 000201   000210 601000 2                  TNZ     s:18816+16
         2 000202   000151 236100                    LDQ     105,,PR0
         2 000203   007000 376003                    ANQ     3584,DU
         2 000204   003000 116003                    CMPQ    1536,DU
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:110  
         2 000205   000210 601000 2                  TNZ     s:18816+16
         2 000206   000147 235100                    LDA     103,,PR0
         2 000207   000300 604400 2                  TMOZ    s:18848
         2 000210   000143 236100                    LDQ     99,,PR0
         2 000211   200000 316003                    CANQ    65536,DU
         2 000212   000300 600000 2                  TZE     s:18848
         2 000213   000315 720100                    LXL0    205,,PR0
         2 000214   000300 604400 2                  TMOZ    s:18848

      451    18817    1       OR (B$JIT.CPFLAGS1.STARPROC    /* Proprietary accounting?? */
      452    18818    1       AND B$JIT.PSLEV ~= %AZ_NONE#)
      453    18819    1       OR (B$JIT.SSLEV ~= %AZ_NONE#) /* step reporting?? */
      454    18820    1       OR (B$JIT.BUDLIM > 0)) /* budget accounting?? */
      455    18821    1       AND (B$JIT.CPFLAGS1.JSTEP )
      456    18822    1       AND (B$JIT.STEPS > 0) /* only do after first step */
      457    18823    1     THEN
      458    18824    2     DO;

      459    18825    2        IF B$JIT.SSLEV ~= %AZ_NONE#

  18825  2 000215   000151 236100                    LDQ     105,,PR0
         2 000216   007000 376003                    ANQ     3584,DU
         2 000217   003000 116003                    CMPQ    1536,DU
         2 000220   000230 601000 2                  TNZ     s:18830
         2 000221   000151 236100                    LDQ     105,,PR0
         2 000222   070000 376003                    ANQ     28672,DU
         2 000223   030000 116003                    CMPQ    12288,DU
         2 000224   000237 600000 2                  TZE     s:18834
         2 000225   000143 236100                    LDQ     99,,PR0
         2 000226   000001 316003                    CANQ    1,DU
         2 000227   000237 600000 2                  TZE     s:18834

      460    18826    2          OR (B$JIT.PSLEV ~= %AZ_NONE# AND
      461    18827    2          B$JIT.CPFLAGS1.STARPROC )
      462    18828    2        THEN
      463    18829    3        DO;   /* Get M$LL */

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:111  
      464    18830    3           CALL CPC$OPEN_LL;

  18830  2 000230   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000231   000000 701000 xent               TSX1    CPC$OPEN_LL
         2 000232   000000 011000                    NOP     0

      465    18831    3           LOGOFF.DCB_LL = SEG$2.LLDCB#;

  18831  2 000233   000000 470400 xsym               LDP0    SEG2$
         2 000234   000000 720100                    LXL0    0,,PR0
         2 000235   200376 440100                    SXL0    LOGOFF+2,,AUTO

      466    18832    3           END;

  18832  2 000236   000241 710000 2                  TRA     s:18835

      467    18833    2        ELSE
      468    18834    2           LOGOFF.DCB_LL = 0;

  18834  2 000237   000000 221003                    LDX1    0,DU
         2 000240   200376 441100                    SXL1    LOGOFF+2,,AUTO

      469    18835    2        LOGOFF.CODE = %AZ$STEP;

  18835  2 000241   000004 235007                    LDA     4,DL
         2 000242   200374 755100                    STA     LOGOFF,,AUTO

      470    18836    2        LOGOFF.ERR = 0;

  18836  2 000243   200375 450100                    STZ     LOGOFF+1,,AUTO

      471    18837    2        LOGOFF.DCB1 = M$IBEX1_NUM;

  18837  2 000244   000000 720000 xsym               LXL0    M$IBEX1_NUM
         2 000245   200376 740100                    STX0    LOGOFF+2,,AUTO

      472    18838    2        CALL AZA$LOGOFF (LOGOFF) ALTRET(LOGOFF_ERR);
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:112  

  18838  2 000246   200374 630500                    EPPR0   LOGOFF,,AUTO
         2 000247   200462 450500                    STP0    FID_RES+1,,AUTO
         2 000250   200462 630500                    EPPR0   FID_RES+1,,AUTO
         2 000251   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000252   000000 701000 xent               TSX1    AZA$LOGOFF
         2 000253   000260 702000 2                  TSX2    LOGOFF_ERR

      473    18839    2        SEG$2.ACCUM_CHG = LOGOFF.ACCUM_CHG ;

  18839  2 000254   000000 470400 xsym               LDP0    SEG2$
         2 000255   200401 235100                    LDA     LOGOFF+5,,AUTO
         2 000256   000176 755100                    STA     126,,PR0

      474    18840    3        DO WHILE(%NO#);

  18840  2 000257   000300 710000 2                  TRA     s:18848

      475    18841    3   LOGOFF_ERR:
      476    18842    3           CALL CPC$WRITEMSGE(B$JIT.USRERR,B$JIT.USRDCB);

  18842  2 000260   000000 236000 xsym  LOGOFF_ERR   LDQ     B$JIT$
         2 000261   000007 036000 3                  ADLQ    7
         2 000262   200463 756100                    STQ     FID_RES+2,,AUTO
         2 000263   000000 236000 xsym               LDQ     B$JIT$
         2 000264   000144 036003                    ADLQ    100,DU
         2 000265   200462 756100                    STQ     FID_RES+1,,AUTO
         2 000266   200462 630500                    EPPR0   FID_RES+1,,AUTO
         2 000267   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000270   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 000271   000000 011000                    NOP     0

      477    18843    3           IF LOGOFF.ERR ~= %AZ$STATSERR THEN

  18843  2 000272   200375 235100                    LDA     LOGOFF+1,,AUTO
         2 000273   000001 115007                    CMPA    1,DL
         2 000274   000300 600000 2                  TZE     s:18848
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:113  

      478    18844    3              CALL CPA$BYE;                          /* log the user off */

  18844  2 000275   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000276   000000 701000 xent               TSX1    CPA$BYE
         2 000277   000000 011000                    NOP     0

      479    18845    3           END;

      480    18846    2        END;

      481    18847        /**/
      482    18848    1     IF (B$JIT.CPFLAGS1.LOGOFF )

  18848  2 000300   000000 470400 xsym               LDP0    B$JIT$
         2 000301   000143 234100                    SZN     99,,PR0
         2 000302   000306 604000 2                  TMI     s:18851
         2 000303   000143 236100                    LDQ     99,,PR0
         2 000304   004000 316007                    CANQ    2048,DL
         2 000305   000311 600000 2                  TZE     s:18857

      483    18849    1       OR (B$JIT.CPFLAGS1.TRMNATE )
      484    18850    1     THEN
      485    18851    1        CALL CPA$BYE;

  18851  2 000306   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000307   000000 701000 xent               TSX1    CPA$BYE
         2 000310   000000 011000                    NOP     0

      486    18852        /**/
      487    18853        /*
      488    18854              ***** Check if this user needs to be RUNDOWN and if a WHEN
      489    18855                    command has been issued.
      490    18856        */
      491    18857    1     IF B$JIT.CPFLAGS1.RUND AND B$JIT.CPFLAGS1.WHEN_INPUT

  18857  2 000311   000000 470400 xsym               LDP0    B$JIT$
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:114  
         2 000312   000143 236100                    LDQ     99,,PR0
         2 000313   100000 316003                    CANQ    32768,DU
         2 000314   000330 600000 2                  TZE     s:18869
         2 000315   000400 316003                    CANQ    256,DU
         2 000316   000330 600000 2                  TZE     s:18869

      492    18858    1     THEN
      493    18859    2     DO ;

      494    18860    2        BLK$ = ADDR(NIL) ; /* Fake out PREV_CMND */

  18860  2 000317   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000320   200023 756100                    STQ     BLK$,,AUTO

      495    18861    2        CALL CPG$CHK_WHEN_CONDITION(P$PCB) WHENALTRETURN

  18861  2 000321   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 000322   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000323   000000 701000 xent               TSX1    CPG$CHK_WHEN_CONDITION
         2 000324   000326 702000 2                  TSX2    s:18863
         2 000325   000330 710000 2                  TRA     s:18869

      496    18862    3        DO;

      497    18863    3           CALL WHEN_ERR;

  18863  2 000326   007100 701000 2                  TSX1    WHEN_ERR
         2 000327   000000 011000                    NOP     0

      498    18864    3           END;

      499    18865    2        END ; /* Then Do */

      500    18866        /*
      501    18867          ****     Misc. Functions to be performed at job step.
      502    18868        */
      503    18869    1     IF (B$JIT.CPFLAGS1.JSTEP )
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:115  

  18869  2 000330   000000 470400 xsym               LDP0    B$JIT$
         2 000331   000143 236100                    LDQ     99,,PR0
         2 000332   200000 316003                    CANQ    65536,DU
         2 000333   000632 600000 2                  TZE     YCINIT

      504    18870    1     THEN
      505    18871    2     DO;

      506    18872        /*
      507    18873             ***** If NOTIFY then call CPK$CHECK ...
      508    18874                   Do not pass P$PCB ...
      509    18875        */
      510    18876    2        IF B$JIT.CPFLAGS1.NOTIFY

  18876  2 000334   002000 316007                    CANQ    1024,DL
         2 000335   000341 600000 2                  TZE     s:18879

      511    18877    2        THEN
      512    18878    2           CALL CPK$CHECK ALTRET(CHKERR);

  18878  2 000336   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000337   000000 701000 xent               TSX1    CPK$CHECK
         2 000340   000342 702000 2                  TSX2    CHKERR

      513    18879    3        DO WHILE (%NO#) ;

  18879  2 000341   000353 710000 2                  TRA     s:18886

      514    18880    3   CHKERR:
      515    18881    3           CALL CPR$RPTERR (SEG$2.ERRBUF, 0) ;

  18881  2 000342   000010 236000 3     CHKERR       LDQ     8
         2 000343   200463 756100                    STQ     FID_RES+2,,AUTO
         2 000344   000000 236000 xsym               LDQ     SEG2$
         2 000345   000003 036003                    ADLQ    3,DU
         2 000346   200462 756100                    STQ     FID_RES+1,,AUTO
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:116  
         2 000347   200462 630500                    EPPR0   FID_RES+1,,AUTO
         2 000350   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000351   000000 701000 xent               TSX1    CPR$RPTERR
         2 000352   000000 011000                    NOP     0

      516    18882    3           END ;  /* DO WHILE */

      517    18883        /*
      518    18884              ***** Check to see if a WHEN command has been input.
      519    18885        */
      520    18886    2        IF B$JIT.CPFLAGS1.WHEN_INPUT AND (NOT B$JIT.CPFLAGS1.BUFFULL)

  18886  2 000353   000000 470400 xsym               LDP0    B$JIT$
         2 000354   000143 236100                    LDQ     99,,PR0
         2 000355   000400 316003                    CANQ    256,DU
         2 000356   000372 600000 2                  TZE     s:18898
         2 000357   000040 316007                    CANQ    32,DL
         2 000360   000372 601000 2                  TNZ     s:18898

      521    18887    2        THEN
      522    18888    3        DO ;

      523    18889    3           BLK$ = ADDR(NIL) ; /* Fake out PREV_CMND */

  18889  2 000361   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000362   200023 756100                    STQ     BLK$,,AUTO

      524    18890    3           CALL CPG$CHK_WHEN_CONDITION(P$PCB) WHENALTRETURN

  18890  2 000363   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 000364   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000365   000000 701000 xent               TSX1    CPG$CHK_WHEN_CONDITION
         2 000366   000370 702000 2                  TSX2    s:18892
         2 000367   000372 710000 2                  TRA     s:18898

      525    18891    4           DO;

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:117  
      526    18892    4              CALL WHEN_ERR;

  18892  2 000370   007100 701000 2                  TSX1    WHEN_ERR
         2 000371   000000 011000                    NOP     0

      527    18893    4              END;

      528    18894    3           END ; /* Then Do */

      529    18895        /*
      530    18896             ***** Reset #1, #2, #3 and #4 dcbs ...
      531    18897        */
      532    18898    2        B$JIT.USRERR = %NO# ;

  18898  2 000372   000000 470400 xsym               LDP0    B$JIT$
         2 000373   000144 450100                    STZ     100,,PR0

      533    18899    2        CPSL_PARAM = %NO# ;

  18899  2 000374   000100 100400                    MLR     fill='000'O
         2 000375   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         2 000376   200340 000024                    ADSC9   CPSL_PARAM,,AUTO         cn=0,n=20

      534    18900    2        IF (B$JIT.PRFLAGS.SI)

  18900  2 000377   000030 234100                    SZN     24,,PR0
         2 000400   000432 605000 2                  TPL     s:18914

      535    18901    2        THEN
      536    18902    3        DO;      /* Reset #1 */

      537    18903    3           CALL CXB$DELAM(ADDR(SOURCEDCB),ADDR(SOURCEDCB),M$IBEX1_NUM,CPSL_PARAM) ;

  18903  2 000401   000011 236000 3                  LDQ     9
         2 000402   200462 756100                    STQ     FID_RES+1,,AUTO
         2 000403   200463 756100                    STQ     FID_RES+2,,AUTO
         2 000404   200340 631500                    EPPR1   CPSL_PARAM,,AUTO
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:118  
         2 000405   200467 451500                    STP1    FID_RES+6,,AUTO
         2 000406   000002 236000 3                  LDQ     2
         2 000407   200466 756100                    STQ     FID_RES+5,,AUTO
         2 000410   200463 633500                    EPPR3   FID_RES+2,,AUTO
         2 000411   200465 453500                    STP3    FID_RES+4,,AUTO
         2 000412   200462 634500                    EPPR4   FID_RES+1,,AUTO
         2 000413   200464 454500                    STP4    FID_RES+3,,AUTO
         2 000414   200464 630500                    EPPR0   FID_RES+3,,AUTO
         2 000415   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 000416   000000 701000 xent               TSX1    CXB$DELAM
         2 000417   000000 011000                    NOP     0

      538    18904    3           IF B$JIT.USRERR ~= %NO#

  18904  2 000420   000000 470400 xsym               LDP0    B$JIT$
         2 000421   000144 235100                    LDA     100,,PR0
         2 000422   000430 600000 2                  TZE     s:18912

      539    18905    3           THEN
      540    18906    4           DO ;

      541    18907    4              IF CPSL_PARAM.FLAGS.REPORTED_TO_USER

  18907  2 000423   200341 236100                    LDQ     CPSL_PARAM+1,,AUTO
         2 000424   100000 316003                    CANQ    32768,DU
         2 000425   000427 600000 2                  TZE     s:18910

      542    18908    4              THEN
      543    18909    4                 B$JIT.USRERR = %NO# ;

  18909  2 000426   000144 450100                    STZ     100,,PR0

      544    18910    4              GOTO ERRTRN ;

  18910  2 000427   005726 710000 2                  TRA     ERRTRN

      545    18911    4              END ;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:119  
      546    18912    3           B$JIT.PRFLAGS.SI = %NO#;

  18912  2 000430   000031 236000 xsym               LDQ     B_VECTNIL+25
         2 000431   000030 356100                    ANSQ    24,,PR0

      547    18913    3           END;

      548    18914    2        IF (B$JIT.PRFLAGS.UI)

  18914  2 000432   000030 236100                    LDQ     24,,PR0
         2 000433   200000 316003                    CANQ    65536,DU
         2 000434   000464 600000 2                  TZE     s:18928

      549    18915    2        THEN
      550    18916    3        DO;      /* Reset #2 */

      551    18917    3           CALL CXB$DELAM(ADDR(UPDATEDCB),ADDR(UPDATEDCB),M$IBEX1_NUM) ;

  18917  2 000435   000012 236000 3                  LDQ     10
         2 000436   200462 756100                    STQ     FID_RES+1,,AUTO
         2 000437   200463 756100                    STQ     FID_RES+2,,AUTO
         2 000440   000002 236000 3                  LDQ     2
         2 000441   200466 756100                    STQ     FID_RES+5,,AUTO
         2 000442   200463 631500                    EPPR1   FID_RES+2,,AUTO
         2 000443   200465 451500                    STP1    FID_RES+4,,AUTO
         2 000444   200462 633500                    EPPR3   FID_RES+1,,AUTO
         2 000445   200464 453500                    STP3    FID_RES+3,,AUTO
         2 000446   200464 630500                    EPPR0   FID_RES+3,,AUTO
         2 000447   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000450   000000 701000 xent               TSX1    CXB$DELAM
         2 000451   000000 011000                    NOP     0

      552    18918    3           IF B$JIT.USRERR ~= %NO#

  18918  2 000452   000000 470400 xsym               LDP0    B$JIT$
         2 000453   000144 235100                    LDA     100,,PR0
         2 000454   000462 600000 2                  TZE     s:18926
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:120  

      553    18919    3           THEN
      554    18920    4           DO ;

      555    18921    4              IF CPSL_PARAM.FLAGS.REPORTED_TO_USER

  18921  2 000455   200341 236100                    LDQ     CPSL_PARAM+1,,AUTO
         2 000456   100000 316003                    CANQ    32768,DU
         2 000457   000461 600000 2                  TZE     s:18924

      556    18922    4              THEN
      557    18923    4                 B$JIT.USRERR = %NO# ;

  18923  2 000460   000144 450100                    STZ     100,,PR0

      558    18924    4              GOTO ERRTRN ;

  18924  2 000461   005726 710000 2                  TRA     ERRTRN

      559    18925    4              END ;
      560    18926    3           B$JIT.PRFLAGS.UI = %NO#;

  18926  2 000462   000013 236000 3                  LDQ     11
         2 000463   000030 356100                    ANSQ    24,,PR0

      561    18927    3           END;

      562    18928    2        IF (B$JIT.PRFLAGS.OU)

  18928  2 000464   000030 236100                    LDQ     24,,PR0
         2 000465   100000 316003                    CANQ    32768,DU
         2 000466   000526 600000 2                  TZE     s:18947

      563    18929    2        THEN
      564    18930    3        DO;      /* Reset #3 */

      565    18931    3           CALL CXB$DELAM(ADDR(OBJECTDCB),ADDR(OBJECTDCB),M$IBEX1_NUM) ;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:121  

  18931  2 000467   000014 236000 3                  LDQ     12
         2 000470   200462 756100                    STQ     FID_RES+1,,AUTO
         2 000471   200463 756100                    STQ     FID_RES+2,,AUTO
         2 000472   000002 236000 3                  LDQ     2
         2 000473   200466 756100                    STQ     FID_RES+5,,AUTO
         2 000474   200463 631500                    EPPR1   FID_RES+2,,AUTO
         2 000475   200465 451500                    STP1    FID_RES+4,,AUTO
         2 000476   200462 633500                    EPPR3   FID_RES+1,,AUTO
         2 000477   200464 453500                    STP3    FID_RES+3,,AUTO
         2 000500   200464 630500                    EPPR0   FID_RES+3,,AUTO
         2 000501   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000502   000000 701000 xent               TSX1    CXB$DELAM
         2 000503   000000 011000                    NOP     0

      566    18932    3           IF B$JIT.USRERR ~= %NO#

  18932  2 000504   000000 470400 xsym               LDP0    B$JIT$
         2 000505   000144 235100                    LDA     100,,PR0
         2 000506   000514 600000 2                  TZE     s:18940

      567    18933    3           THEN
      568    18934    4           DO ;

      569    18935    4              IF CPSL_PARAM.FLAGS.REPORTED_TO_USER

  18935  2 000507   200341 236100                    LDQ     CPSL_PARAM+1,,AUTO
         2 000510   100000 316003                    CANQ    32768,DU
         2 000511   000513 600000 2                  TZE     s:18938

      570    18936    4              THEN
      571    18937    4                 B$JIT.USRERR = %NO# ;

  18937  2 000512   000144 450100                    STZ     100,,PR0

      572    18938    4              GOTO ERRTRN ;

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:122  
  18938  2 000513   005726 710000 2                  TRA     ERRTRN

      573    18939    4              END ;
      574    18940    3           B$JIT.PRFLAGS.OU = %NO#;

  18940  2 000514   000015 236000 3                  LDQ     13
         2 000515   000030 356100                    ANSQ    24,,PR0

      575    18941    3           IF B$JIT.CPFLAGS1.DONTRFEXT3

  18941  2 000516   000143 236100                    LDQ     99,,PR0
         2 000517   000100 316003                    CANQ    64,DU
         2 000520   000524 600000 2                  TZE     s:18945

      576    18942    3           THEN
      577    18943    3              B$JIT.CPFLAGS1.DONTRFEXT3 = %NO# ;

  18943  2 000521   000016 236000 3                  LDQ     14
         2 000522   000143 356100                    ANSQ    99,,PR0
         2 000523   000526 710000 2                  TRA     s:18947

      578    18944    3           ELSE
      579    18945    3              B$JIT.FEXT(FEXT_OBJECT) = %NO#;

  18945  2 000524   000017 236000 3                  LDQ     15
         2 000525   000220 356100                    ANSQ    144,,PR0

      580    18946    3           END;

      581    18947    2        IF (B$JIT.PRFLAGS.LS)

  18947  2 000526   000030 236100                    LDQ     24,,PR0
         2 000527   040000 316003                    CANQ    16384,DU
         2 000530   000562 600000 2                  TZE     s:18963

      582    18948    2        THEN
      583    18949    3        DO;      /* Reset  #4 */
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:123  

      584    18950    3           CALL CXB$DELAM(ADDR(LISTDCB),ADDR(LISTDCB),M$IBEX1_NUM) ;

  18950  2 000531   000020 236000 3                  LDQ     16
         2 000532   200462 756100                    STQ     FID_RES+1,,AUTO
         2 000533   200463 756100                    STQ     FID_RES+2,,AUTO
         2 000534   000002 236000 3                  LDQ     2
         2 000535   200466 756100                    STQ     FID_RES+5,,AUTO
         2 000536   200463 631500                    EPPR1   FID_RES+2,,AUTO
         2 000537   200465 451500                    STP1    FID_RES+4,,AUTO
         2 000540   200462 633500                    EPPR3   FID_RES+1,,AUTO
         2 000541   200464 453500                    STP3    FID_RES+3,,AUTO
         2 000542   200464 630500                    EPPR0   FID_RES+3,,AUTO
         2 000543   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000544   000000 701000 xent               TSX1    CXB$DELAM
         2 000545   000000 011000                    NOP     0

      585    18951    3           IF B$JIT.USRERR ~= %NO#

  18951  2 000546   000000 470400 xsym               LDP0    B$JIT$
         2 000547   000144 235100                    LDA     100,,PR0
         2 000550   000556 600000 2                  TZE     s:18959

      586    18952    3           THEN
      587    18953    4           DO ;

      588    18954    4              IF CPSL_PARAM.FLAGS.REPORTED_TO_USER

  18954  2 000551   200341 236100                    LDQ     CPSL_PARAM+1,,AUTO
         2 000552   100000 316003                    CANQ    32768,DU
         2 000553   000555 600000 2                  TZE     s:18957

      589    18955    4              THEN
      590    18956    4                 B$JIT.USRERR = %NO# ;

  18956  2 000554   000144 450100                    STZ     100,,PR0

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:124  
      591    18957    4              GOTO ERRTRN ;

  18957  2 000555   005726 710000 2                  TRA     ERRTRN

      592    18958    4              END ;
      593    18959    3           B$JIT.PRFLAGS.LS = %NO#;

  18959  2 000556   000017 236000 3                  LDQ     15
         2 000557   000030 356100                    ANSQ    24,,PR0

      594    18960    3           B$JIT.FEXT(FEXT_LIST) = %NO#;

  18960  2 000560   000021 236000 3                  LDQ     17
         2 000561   000220 356100                    ANSQ    144,,PR0

      595    18961    3           END;

      596    18962        /* ****    Set processor flag defaults ... Always on at job step */
      597    18963    2        B$JIT.PRFLAGS.LIST=%YES#;

  18963  2 000562   010000 236003                    LDQ     4096,DU
         2 000563   000030 256100                    ORSQ    24,,PR0

      598    18964    2        B$JIT.PRFLAGS.OUTPUT=%YES#;

  18964  2 000564   004000 236003                    LDQ     2048,DU
         2 000565   000030 256100                    ORSQ    24,,PR0

      599    18965    2        B$JIT.PRFLAGS.COMMENT=%YES#;

  18965  2 000566   020000 236003                    LDQ     8192,DU
         2 000567   000030 256100                    ORSQ    24,,PR0

      600    18966        /* ****    Reset processor non-standard syntax flag  */
      601    18967    2        B$JIT.PRFLAGS.NSSYNTAX = %NO#;

  18967  2 000570   000022 236000 3                  LDQ     18
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:125  
         2 000571   000030 356100                    ANSQ    24,,PR0

      602    18968        /*
      603    18969             ***** Reset flag that specifies rununit continuation
      604    18970                   and delete the file containing the command ...
      605    18971        */
      606    18972    2        IF B$JIT.PRFLAGS.CONTINUED

  18972  2 000572   000030 430100                    FSZN    24,,PR0
         2 000573   000623 605000 2                  TPL     s:18989

      607    18973    2        THEN
      608    18974    3        DO;

      609    18975    3           FPT_OPEN = CFPT_OPEN;

  18975  2 000574   000100 100400                    MLR     fill='000'O
         2 000575   000000 000350 xsym               ADSC9   CFPT_OPEN                cn=0,n=232
         2 000576   200130 000350                    ADSC9   FPT_OPEN,,AUTO           cn=0,n=232

      610    18976    3           FPT_OPEN.V_ = VECTOR(FPT_OPEN.V);

  18976  2 000577   000023 235000 3                  LDA     19
         2 000600   200462 452500                    STP2    FID_RES+1,,AUTO
         2 000601   200462 236100                    LDQ     FID_RES+1,,AUTO
         2 000602   000174 036003                    ADLQ    124,DU
         2 000603   200130 757100                    STAQ    FPT_OPEN,,AUTO

      611    18977    3           FPT_OPEN.V.DCB# = M$IBEX1_NUM;

  18977  2 000604   000000 720000 xsym               LXL0    M$IBEX1_NUM
         2 000605   200174 740100                    STX0    FPT_OPEN+36,,AUTO

      612    18978    3           FPT_OPEN.V.ASN# = %FILE#;

  18978  2 000606   000001 236007                    LDQ     1,DL
         2 000607   200175 552104                    STBQ    FPT_OPEN+37,'04'O,AUTO
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:126  

      613    18979    3           FPT_OPEN.V.DELETE# = %YES#;

  18979  2 000610   040000 236007                    LDQ     16384,DL
         2 000611   200174 256100                    ORSQ    FPT_OPEN+36,,AUTO

      614    18980    3           FPT_OPEN.NAME_ = VECTOR(CONTINUATION_COMMANDS);

  18980  2 000612   000024 237000 3                  LDAQ    20
         2 000613   200136 757100                    STAQ    FPT_OPEN+6,,AUTO

      615    18981    3           CALL M$OPEN (FPT_OPEN) ALTRET(DELETE_CFILE);

  18981  2 000614   200130 630500                    EPPR0   FPT_OPEN,,AUTO
         2 000615   450000 713400                    CLIMB   alt,open
         2 000616   410400 401760                    pmme    nvectors=18
         2 000617   000620 702000 2                  TSX2    DELETE_CFILE

  18980  2 000620                       DELETE_CFILE null
      616    18982    3   DELETE_CFILE: ;   /* Ignore any altret */
      617    18983    3           B$JIT.PRFLAGS.CONTINUED = %NO#;

  18983  2 000620   000000 470400 xsym               LDP0    B$JIT$
         2 000621   000026 236000 3                  LDQ     22
         2 000622   000030 356100                    ANSQ    24,,PR0

      618    18984    3           END;

      619    18985        /*
      620    18986          ****     Establish cumulative values for previous step if step limits
      621    18987          ****     Were in effect.
      622    18988        */
      623    18989    2        IF (B$JIT.CPFLAGS1.STEPLMT )

  18989  2 000623   000143 236100                    LDQ     99,,PR0
         2 000624   000200 316007                    CANQ    128,DL
         2 000625   000632 600000 2                  TZE     YCINIT
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:127  

      624    18990    2        THEN
      625    18991    2           CALL CPJ$ESTCUM(%YES#) ALTRET(ERRTRN);

  18991  2 000626   000006 630400 3                  EPPR0   6
         2 000627   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000630   000000 701000 xent               TSX1    CPJ$ESTCUM
         2 000631   005726 702000 2                  TSX2    ERRTRN

      626    18992    2        END;

      627    18993        /*
      628    18994          ***** set up U$PARAM so errors can be handled
      629    18995        */
      630    18996    1   YCINIT:
      631    18997    1     U$PARAM.ERRBUF$ = ADDR(SEG$2.ERRBUF);

  18997  2 000632   000000 236000 xsym  YCINIT       LDQ     SEG2$
         2 000633   000003 036003                    ADLQ    3,DU
         2 000634   200354 756100                    STQ     U$PARAM,,AUTO

      632    18998    1     U$PARAM.USERS$ = ADDR(NIL);

  18998  2 000635   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000636   200355 756100                    STQ     U$PARAM+1,,AUTO

      633    18999    1     U$PARAM.CNTU$$ = ENTADDR(CPA$CONTINUE);

  18999  2 000637   000000 636000 xent               EAQ     CPA$CONTINUE
         2 000640   200356 756100                    STQ     U$PARAM+2,,AUTO

      634    19000    1     REMEMBER ERRTRN IN REMEM_VAR ;

  19000  2 000641   005726 635000 2                  EAA     ERRTRN
         2 000642   200016 452500                    STP2    REMEM_VAR,,AUTO
         2 000643   200017 755100                    STA     REMEM_VAR+1,,AUTO

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:128  
      635    19001    1     U$PARAM.REMEM$ = ADDR(REMEM_VAR) ;

  19001  2 000644   200016 630500                    EPPR0   REMEM_VAR,,AUTO
         2 000645   200372 450500                    STP0    U$PARAM+14,,AUTO

      636    19002    1     REMEMBER CONTEXT_ERR_UNWIND IN REMEM_CONTEXT_ERR;

  19002  2 000646   005635 635000 2                  EAA     CONTEXT_ERR_UNWIND
         2 000647   200020 452500                    STP2    REMEM_CONTEXT_ERR,,AUTO
         2 000650   200021 755100                    STA     REMEM_CONTEXT_ERR+1,,AUTO

      637    19003    1     U$PARAM.REMEM_CONTEXT_ERR$ = ADDR(REMEM_CONTEXT_ERR);

  19003  2 000651   200020 631500                    EPPR1   REMEM_CONTEXT_ERR,,AUTO
         2 000652   200373 451500                    STP1    U$PARAM+15,,AUTO

      638    19004    1     U$PARAM.SPCL$$ = ENTADDR(NIL);

  19004  2 000653   000002 236000 xsym               LDQ     B_VECTNIL+2
         2 000654   200357 756100                    STQ     U$PARAM+3,,AUTO

      639    19005    1     U$PARAM.GETCMD$ = SEG$2.GETCMD$ ;

  19005  2 000655   000000 473400 xsym               LDP3    SEG2$
         2 000656   300173 236100                    LDQ     123,,PR3
         2 000657   200370 756100                    STQ     U$PARAM+12,,AUTO

      640    19006    1     U$PARAM.FID_CNT = 0 ;

  19006  2 000660   000000 236003                    LDQ     0,DU
         2 000661   200362 552120                    STBQ    U$PARAM+6,'20'O,AUTO

      641    19007    1     FIRST_SYNTAX_ERR = %YES# ;

  19007  2 000662   400000 236003                    LDQ     -131072,DU
         2 000663   200026 756100                    STQ     FIRST_SYNTAX_ERR,,AUTO

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:129  
      642    19008    2     DO I = 0 TO %MAX_FID_BLKS - 1 ;

  19008  2 000664   200005 450100                    STZ     I,,AUTO
         2 000665   000672 710000 2                  TRA     s:19010+1

      643    19009    2        U$PARAM.FID_BLK$(I) = ADDR(NIL) ;

  19009  2 000666   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000667   200005 720100                    LXL0    I,,AUTO
         2 000670   200363 756110                    STQ     U$PARAM+7,X0,AUTO

      644    19010    2        END ; /* Do I */

  19010  2 000671   200005 054100                    AOS     I,,AUTO
         2 000672   200005 235100                    LDA     I,,AUTO
         2 000673   000004 115007                    CMPA    4,DL
         2 000674   000666 604400 2                  TMOZ    s:19009

      645    19011        /*
      646    19012             ***** remember what the last command was...
      647    19013        */
      648    19014    1     IF B$JIT.STEPS = 0

  19014  2 000675   000000 470400 xsym               LDP0    B$JIT$
         2 000676   000315 720100                    LXL0    205,,PR0
         2 000677   000703 601000 2                  TNZ     s:19018

      649    19015    1     THEN   /* Assume !JOB */
      650    19016    1        PREV_CMND = JOBCMND;

  19016  2 000700   000037 236007                    LDQ     31,DL
         2 000701   200003 756100                    STQ     PREV_CMND,,AUTO
         2 000702   000705 710000 2                  TRA     PROMPT

      651    19017    1     ELSE
      652    19018    1        PREV_CMND = RUNITCMND;

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:130  
  19018  2 000703   000075 236007                    LDQ     61,DL
         2 000704   200003 756100                    STQ     PREV_CMND,,AUTO

      653    19019        /*
      654    19020             ***** Get the next command from the user ...
      655    19021                   Also check for exceeded LIMITs ...
      656    19022        */
      657    19023    1   PROMPT:
      658    19024    1     IF B$JIT.RNST = %RS_LIMX#

  19024  2 000705   000000 470400 xsym  PROMPT       LDP0    B$JIT$
         2 000706   000314 236100                    LDQ     204,,PR0
         2 000707   777000 376003                    ANQ     -512,DU
         2 000710   100000 116003                    CMPQ    32768,DU
         2 000711   000756 601000 2                  TNZ     SETUP_READCC

      659    19025    1     THEN   /* Some LIMIT was exceeded in IBEX */
      660    19026    2     DO;

      661    19027    2        ERR_CODE = B$JIT.ERR;

  19027  2 000712   000012 236100                    LDQ     10,,PR0
         2 000713   200232 756100                    STQ     ERR_CODE,,AUTO

      662    19028    2        IF B$JIT.CPFLAGS1 & (%CP_YCPMME# | %CP_LNKPMME#)

  19028  2 000714   000141 236000 1                  LDQ     XLIM_TBL+18
         2 000715   000142 276000 1                  ORQ     XLIM_TBL+19
         2 000716   000143 376100                    ANQ     99,,PR0
         2 000717   005642 601000 2                  TNZ     E_M$YCPMME

      663    19029    2        THEN   /* Return to user program */
      664    19030    2           GOTO E_M$YCPMME;
      665    19031    2        IF B$JIT.CPFLAGS1.YC

  19031  2 000720   000143 236100                    LDQ     99,,PR0
         2 000721   040000 316003                    CANQ    16384,DU
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:131  
         2 000722   000736 600000 2                  TZE     s:19041

      666    19032    2        THEN   /* User program still under us */
      667    19033    3        DO;

      668    19034    3           FPT_XXX = CFPT_XXX;

  19034  2 000723   000100 100400                    MLR     fill='000'O
         2 000724   000000 000030 xsym               ADSC9   CFPT_XXX                 cn=0,n=24
         2 000725   200346 000030                    ADSC9   FPT_XXX,,AUTO            cn=0,n=24

      669    19035    3           FPT_XXX.CODE_ = VECTOR(ERR_CODE);

  19035  2 000726   777640 235007                    LDA     -96,DL
         2 000727   200462 452500                    STP2    FID_RES+1,,AUTO
         2 000730   200462 236100                    LDQ     FID_RES+1,,AUTO
         2 000731   000232 036003                    ADLQ    154,DU
         2 000732   200350 757100                    STAQ    FPT_XXX+2,,AUTO

      670    19036    3           CALL M$XXX (FPT_XXX);

  19036  2 000733   200346 630500                    EPPR0   FPT_XXX,,AUTO
         2 000734   000003 713400                    CLIMB   3
         2 000735   400400 401760                    pmme    nvectors=2

      671    19037    3           END;

      672    19038        /*
      673    19039             ***** Otherwise, logoff the user ...
      674    19040        */
      675    19041    2        B$JIT.USRRNST = B$JIT.RNST;

  19041  2 000736   000000 470400 xsym               LDP0    B$JIT$
         2 000737   000314 236100                    LDQ     204,,PR0
         2 000740   000022 772000                    QRL     18
         2 000741   000145 552110                    STBQ    101,'10'O,PR0

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:132  
      676    19042    2        CALL LIMIT_ERR;

  19042  2 000742   006502 701000 2                  TSX1    LIMIT_ERR
         2 000743   000000 011000                    NOP     0

      677    19043    2        IF B$JIT.MODE = %M_BATCH#

  19043  2 000744   000000 470400 xsym               LDP0    B$JIT$
         2 000745   000000 236100                    LDQ     0,,PR0
         2 000746   740000 376003                    ANQ     -16384,DU
         2 000747   040000 116003                    CMPQ    16384,DU
         2 000750   000753 600000 2                  TZE     s:19046
         2 000751   100000 116003                    CMPQ    32768,DU
         2 000752   000756 601000 2                  TNZ     SETUP_READCC

      678    19044    2          OR B$JIT.MODE = %M_GHOST#
      679    19045    2        THEN   /* Logoff the user */
      680    19046    2           CALL CPA$BYE;

  19046  2 000753   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000754   000000 701000 xent               TSX1    CPA$BYE
         2 000755   000000 011000                    NOP     0

      681    19047    2        END;

      682    19048        /*
      683    19049             ***** Throw away ptr to last command.
      684    19050                   Necessary for PREV_CMD logic ...
      685    19051        */
      686    19052    1   SETUP_READCC:
      687    19053    1     BLK$ = ADDR(NIL);

  19053  2 000756   000001 236000 xsym  SETUP_READCC LDQ     B_VECTNIL+1
         2 000757   200023 756100                    STQ     BLK$,,AUTO

      688    19054        /*
      689    19055             ***** Read next command ...
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:133  
      690    19056        */
      691    19057    1     SEG$2.GETCMD$->GET$CMD.PCB$->P$PCB.USER$ = ADDR(U$PARAM);

  19057  2 000760   000000 470400 xsym               LDP0    SEG2$
         2 000761   000173 471500                    LDP1    123,,PR0
         2 000762   100003 473500                    LDP3    3,,PR1
         2 000763   200354 634500                    EPPR4   U$PARAM,,AUTO
         2 000764   300014 454500                    STP4    12,,PR3

      692    19058    1     IF B$JIT.CPFLAGS1 & %CP_LNKPMME#

  19058  2 000765   000000 471400 xsym               LDP1    B$JIT$
         2 000766   100143 236100                    LDQ     99,,PR1
         2 000767   000142 376000 1                  ANQ     XLIM_TBL+19
         2 000770   000775 600000 2                  TZE     s:19062

      693    19059    1     THEN
      694    19060    1        SEG$2.GETCMD$->GET$CMD.NODES$ = ADDR(LINKPMME_CMD) ;

  19060  2 000771   000173 473500                    LDP3    123,,PR0
         2 000772   000027 236000 3                  LDQ     23
         2 000773   300000 756100                    STQ     0,,PR3
         2 000774   001000 710000 2                  TRA     s:19063

      695    19061    1     ELSE
      696    19062    1        SEG$2.GETCMD$->GET$CMD.NODES$ = ADDR(IBEX_CMD) ;

  19062  2 000775   000173 473500                    LDP3    123,,PR0
         2 000776   000030 236000 3                  LDQ     24
         2 000777   300000 756100                    STQ     0,,PR3

      697    19063    1     SEG$2.GETCMD$->GET$CMD.CONTINUE_OK# = %NO# ;

  19063  2 001000   000173 473500                    LDP3    123,,PR0
         2 001001   000017 236000 3                  LDQ     15
         2 001002   300006 356100                    ANSQ    6,,PR3

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:134  
      698    19064    1     SEG$2.GETCMD$->GET$CMD.PP_FUN$$ = ENTADDR(CPG$FUN$$) ;

  19064  2 001003   000173 473500                    LDP3    123,,PR0
         2 001004   000000 636000 xent               EAQ     CPG$FUN$$
         2 001005   300031 756100                    STQ     25,,PR3

      699    19065    1     SEG$2.GETCMD$->GET$CMD.SFROUTINE$ = ENTADDR(CPX$FIRST_PASS);

  19065  2 001006   000173 473500                    LDP3    123,,PR0
         2 001007   000000 636000 xent               EAQ     CPX$FIRST_PASS
         2 001010   300033 756100                    STQ     27,,PR3

      700    19066    1     SEG$2.GETCMD$->GET$CMD.PASS = %LEAVE_PASS# ;

  19066  2 001011   000173 473500                    LDP3    123,,PR0
         2 001012   000031 236000 3                  LDQ     25
         2 001013   300007 356100                    ANSQ    7,,PR3

      701    19067    1     U$PARAM.MODE = IBEX_MODE;

  19067  2 001014   001000 236003                    LDQ     512,DU
         2 001015   200362 552140                    STBQ    U$PARAM+6,'40'O,AUTO

      702    19068    1     SEG$2.FLAGS.CONTINUED = %NO#;

  19068  2 001016   000022 236000 3                  LDQ     18
         2 001017   000000 356100                    ANSQ    0,,PR0

      703    19069    1     SEG$2.FLAGS.ABORT = %NO#;

  19069  2 001020   000032 236000 3                  LDQ     26
         2 001021   000000 356100                    ANSQ    0,,PR0

      704    19070    1     CALL CPC$OPEN_LL ;

  19070  2 001022   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001023   000000 701000 xent               TSX1    CPC$OPEN_LL
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:135  
         2 001024   000000 011000                    NOP     0

      705    19071
      706    19072    1   READCC:
      707    19073    1     SEG$2.GETCMD$->GET$CMD.OUTDCB# = SEG$2.LLDCB#;

  19073  2 001025   000000 470400 xsym  READCC       LDP0    SEG2$
         2 001026   000173 471500                    LDP1    123,,PR0
         2 001027   000000 236100                    LDQ     0,,PR0
         2 001030   777777 376007                    ANQ     -1,DL
         2 001031   100013 756100                    STQ     11,,PR1

      708    19074    1     CALL CPA$READCC (SEG$2.GETCMD$->GET$CMD,CMD_SOURCE) ALTRET (E_READCC);

  19074  2 001032   000173 471500                    LDP1    123,,PR0
         2 001033   200011 633500                    EPPR3   CMD_SOURCE,,AUTO
         2 001034   200463 453500                    STP3    FID_RES+2,,AUTO
         2 001035   200462 451500                    STP1    FID_RES+1,,AUTO
         2 001036   200462 630500                    EPPR0   FID_RES+1,,AUTO
         2 001037   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 001040   000000 701000 xent               TSX1    CPA$READCC
         2 001041   004717 702000 2                  TSX2    E_READCC

      709    19075                                /* XUG$ and P$PCB$ INITed in OPENINPUT. */
      710    19076    1     FIRST_SYNTAX_ERR = %YES# ;

  19076  2 001042   400000 236003                    LDQ     -131072,DU
         2 001043   200026 756100                    STQ     FIRST_SYNTAX_ERR,,AUTO

      711    19077    1     TRIED_2_XPAND_WND = %NO# ;

  19077  2 001044   200027 450100                    STZ     TRIED_2_XPAND_WND,,AUTO

      712    19078    1     SEG$2.CPBUFF$->CP$BUFF = SUBSTR(VBASE(XUG$PARAMS.LAST)->CP$BUFF,0,

  19078  2 001045   000000 470400 xsym               LDP0    SEG2$
         2 001046   000171 471500                    LDP1    121,,PR0
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:136  
         2 001047   200025 473500                    LDP3    XUG$,,AUTO
         2 001050   300005 474500                    LDP4    5,,PR3
         2 001051   300004 236100                    LDQ     4,,PR3
         2 001052   000020 772000                    QRL     16
         2 001053   000001 620006                    EAX0    1,QL
         2 001054   040100 100540                    MLR     fill='040'O
         2 001055   400000 000010                    ADSC9   0,,PR4                   cn=0,n=*X0
         2 001056   100000 000400                    ADSC9   0,,PR1                   cn=0,n=256

      713    19079    1       VBOUND(XUG$PARAMS.LAST)+1) ;
      714    19080    1     SEG$2.NCHARS = P$PCB.NCHARS;

  19080  2 001057   200024 471500                    LDP1    P$PCB$,,AUTO
         2 001060   100011 720100                    LXL0    9,,PR1
         2 001061   000001 740100                    STX0    1,,PR0

      715    19081    1     IF P$PCB.NCHARS = 0

  19081  2 001062   100011 235100                    LDA     9,,PR1
         2 001063   004545 600000 2                  TZE     CHK_BREAK

      716    19082
      717    19083    1     THEN /* null command */
      718    19084    1        GOTO CHK_BREAK;
      719    19085        %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:137  
      720    19086        /*
      721    19087        *****   If the command just read came from a command stream (as opposed to an
      722    19088        *****   interactive terminal), it must begin with a bang ('!') in column 1;
      723    19089        *****   any other case is assumed to be data intended for another program;
      724    19090        *****   in any case, IBEX will print the first record and count subsequent
      725    19091        *****   records until a valid command is encountered, i.e. one which has the
      726    19092        *****   bang in column 1.  A count of skipped records will be output.
      727    19093        */
      728    19094    2     DO CASE (CMD_SOURCE);

  19094  2 001064   200011 236100                    LDQ     CMD_SOURCE,,AUTO
         2 001065   000004 116007                    CMPQ    4,DL
         2 001066   001070 602006 2                  TNC     s:19094+4,QL
         2 001067   001311 710000 2                  TRA     s:19161
         2 001070   001311 710000 2                  TRA     s:19161
         2 001071   001311 710000 2                  TRA     s:19161
         2 001072   001074 710000 2                  TRA     s:19096
         2 001073   001074 710000 2                  TRA     s:19096

      729    19095    2      CASE (XEQFILE,BATCHJCL);

      730    19096    2        IF NOT SEG$2.GETCMD$->GET$CMD.RCVD_PROMPT#

  19096  2 001074   000173 474500                    LDP4    123,,PR0
         2 001075   400006 236100                    LDQ     6,,PR4
         2 001076   020000 316003                    CANQ    8192,DU
         2 001077   001311 601000 2                  TNZ     s:19161

      731    19097    2        THEN
      732    19098    3        DO;   /* Complain */

      733    19099    3   DATA_IGNORED_LOOP:
      734    19100    3           REMEMBER CNTL_Y_INT IN SEG$2.REMEM$->REMEM$VAR ;

  19100  2 001100   000000 470400 xsym  DATA_IGNORE* LDP0    SEG2$
         2 001101   000174 471500                    LDP1    124,,PR0
         2 001102   004704 635000 2                  EAA     CNTL_Y_INT
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:138  
         2 001103   100000 452500                    STP2    0,,PR1
         2 001104   100001 755100                    STA     1,,PR1

      735    19101    3           SEG$2.FLAGS.USE_REMEM = %YES# ;

  19101  2 001105   000020 236003                    LDQ     16,DU
         2 001106   000000 256100                    ORSQ    0,,PR0

      736    19102    3           ERR_CODE = %NO# ;

  19102  2 001107   200232 450100                    STZ     ERR_CODE,,AUTO

      737    19103    3           SEG$2.FPT_WRITECC$ -> FPT$WRITE.BUF_ =

  19103  2 001110   000161 471500                    LDP1    113,,PR0
         2 001111   000171 473500                    LDP3    121,,PR0
         2 001112   000033 235000 3                  LDA     27
         2 001113   200462 453500                    STP3    FID_RES+1,,AUTO
         2 001114   200462 236100                    LDQ     FID_RES+1,,AUTO
         2 001115   100004 757100                    STAQ    4,,PR1

      738    19104    3             VECTOR(SEG$2.CPBUFF$ -> CP$BUFF);
      739    19105    3           CALL CONCAT (SEG$2.CPBUFF$ -> CP$BUFF,

  19105  2 001116   000171 471500                    LDP1    121,,PR0
         2 001117   200025 473500                    LDP3    XUG$,,AUTO
         2 001120   300005 474500                    LDP4    5,,PR3
         2 001121   300004 236100                    LDQ     4,,PR3
         2 001122   000020 772000                    QRL     16
         2 001123   000001 620006                    EAX0    1,QL
         2 001124   040100 100400                    MLR     fill='040'O
         2 001125   000143 000017 1                  ADSC9   XLIM_TBL+20              cn=0,n=15
         2 001126   100000 000017                    ADSC9   0,,PR1                   cn=0,n=15
         2 001127   040100 100540                    MLR     fill='040'O
         2 001130   400000 000010                    ADSC9   0,,PR4                   cn=0,n=*X0
         2 001131   100003 600361                    ADSC9   3,,PR1                   cn=3,n=241

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:139  
      740    19106    3             'Data ignored:  ',SUBSTR(VBASE(XUG$PARAMS.LAST)->CP$BUFF,
      741    19107    3             0,VBOUND(XUG$PARAMS.LAST)+1)) ;
      742    19108    3           CALL CPE$DIAGOUT (SEG$2.FPT_WRITECC$);

  19108  2 001132   000000 236000 xsym               LDQ     SEG2$
         2 001133   000161 036003                    ADLQ    113,DU
         2 001134   200462 756100                    STQ     FID_RES+1,,AUTO
         2 001135   200462 630500                    EPPR0   FID_RES+1,,AUTO
         2 001136   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001137   000000 701000 xent               TSX1    CPE$DIAGOUT
         2 001140   000000 011000                    NOP     0

      743    19109        /*
      744    19110             ***** Count how many data records ...
      745    19111        */
      746    19112    3           I = 1;

  19112  2 001141   000001 235007                    LDA     1,DL
         2 001142   200005 755100                    STA     I,,AUTO

      747    19113    3           SEG$2.GETCMD$->GET$CMD.NODES$ = ADDR(IBEX_CMD) ;

  19113  2 001143   000000 470400 xsym               LDP0    SEG2$
         2 001144   000173 471500                    LDP1    123,,PR0
         2 001145   000030 236000 3                  LDQ     24
         2 001146   100000 756100                    STQ     0,,PR1

      748    19114    3           SEG$2.GETCMD$->GET$CMD.PCB$->P$PCB.USER$ = ADDR(U$PARAM) ;

  19114  2 001147   000173 471500                    LDP1    123,,PR0
         2 001150   100003 473500                    LDP3    3,,PR1
         2 001151   200354 634500                    EPPR4   U$PARAM,,AUTO
         2 001152   300014 454500                    STP4    12,,PR3

      749    19115    4           DO WHILE (NOT SEG$2.GETCMD$->GET$CMD.RCVD_PROMPT#) ;

  19115  2 001153   001233 710000 2                  TRA     s:19134
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:140  

      750    19116    4              IF B$JIT.NEXTCC = %CC_FROMUC#

  19116  2 001154   000000 470400 xsym               LDP0    B$JIT$
         2 001155   000151 236100                    LDQ     105,,PR0
         2 001156   000777 376003                    ANQ     511,DU
         2 001157   000003 116003                    CMPQ    3,DU
         2 001160   001241 600000 2                  TZE     TOTAL_RECORDS_IGNORED
         2 001161   000151 236100                    LDQ     105,,PR0
         2 001162   000777 316003                    CANQ    511,DU
         2 001163   001241 600000 2                  TZE     TOTAL_RECORDS_IGNORED
         2 001164   200232 236100                    LDQ     ERR_CODE,,AUTO
         2 001165   000111 116000 1                  CMPQ    E_BANG_EOD
         2 001166   001241 600000 2                  TZE     TOTAL_RECORDS_IGNORED

      751    19117    4                OR B$JIT.NEXTCC = %CC_FROMNO#
      752    19118    4                OR ERR_CODE = E_BANG_EOD
      753    19119    4              THEN
      754    19120    4                 GOTO TOTAL_RECORDS_IGNORED;
      755    19121    4              ERR_CODE = %NO# ;

  19121  2 001167   200232 450100                    STZ     ERR_CODE,,AUTO

      756    19122    4              CALL CPA$READCC (SEG$2.GETCMD$->GET$CMD,CMD_SOURCE)

  19122  2 001170   000000 471400 xsym               LDP1    SEG2$
         2 001171   100173 473500                    LDP3    123,,PR1
         2 001172   200011 634500                    EPPR4   CMD_SOURCE,,AUTO
         2 001173   200463 454500                    STP4    FID_RES+2,,AUTO
         2 001174   200462 453500                    STP3    FID_RES+1,,AUTO
         2 001175   200462 630500                    EPPR0   FID_RES+1,,AUTO
         2 001176   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 001177   000000 701000 xent               TSX1    CPA$READCC
         2 001200   001202 702000 2                  TSX2    s:19125
         2 001201   001212 710000 2                  TRA     s:19129

      757    19123    4              WHENALTRETURN
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:141  
      758    19124    5              DO ;

      759    19125    5                 ERR_CODE = SEG$2.GETCMD$->GET$CMD.ERR# ;

  19125  2 001202   000000 470400 xsym               LDP0    SEG2$
         2 001203   000173 471500                    LDP1    123,,PR0
         2 001204   100001 236100                    LDQ     1,,PR1
         2 001205   200232 756100                    STQ     ERR_CODE,,AUTO

      760    19126    5                 SEG$2.GETCMD$->GET$CMD.PCB$->

  19126  2 001206   000173 471500                    LDP1    123,,PR0
         2 001207   100003 473500                    LDP3    3,,PR1
         2 001210   200354 634500                    EPPR4   U$PARAM,,AUTO
         2 001211   300014 454500                    STP4    12,,PR3

      761    19127    5                   P$PCB.USER$ = ADDR(U$PARAM) ;
      762    19128    5                 END ; /* Whenaltreturn Do */

      763    19129    4              XUG$ = SEG$2.XUG_INIT$->XUG$INIT.PARAMS$ ;

  19129  2 001212   000000 470400 xsym               LDP0    SEG2$
         2 001213   000172 471500                    LDP1    122,,PR0
         2 001214   100014 236100                    LDQ     12,,PR1
         2 001215   200025 756100                    STQ     XUG$,,AUTO

      764    19130    4              SEG$2.CPBUFF$->CP$BUFF = SUBSTR(VBASE(XUG$PARAMS.LAST)->

  19130  2 001216   000171 473500                    LDP3    121,,PR0
         2 001217   200025 474500                    LDP4    XUG$,,AUTO
         2 001220   400005 475500                    LDP5    5,,PR4
         2 001221   400004 236100                    LDQ     4,,PR4
         2 001222   000020 772000                    QRL     16
         2 001223   000001 620006                    EAX0    1,QL
         2 001224   040100 100540                    MLR     fill='040'O
         2 001225   500000 000010                    ADSC9   0,,PR5                   cn=0,n=*X0
         2 001226   300000 000400                    ADSC9   0,,PR3                   cn=0,n=256
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:142  

      765    19131    4                CP$BUFF,0,VBOUND(XUG$PARAMS.LAST)+1) ;
      766    19132    4              SEG$2.NCHARS = P$PCB.NCHARS;

  19132  2 001227   200024 471500                    LDP1    P$PCB$,,AUTO
         2 001230   100011 720100                    LXL0    9,,PR1
         2 001231   000001 740100                    STX0    1,,PR0

      767    19133    4              I = I + 1;

  19133  2 001232   200005 054100                    AOS     I,,AUTO

      768    19134    4              END;   /* Do while ... end */

  19134  2 001233   000173 471500                    LDP1    123,,PR0
         2 001234   100006 236100                    LDQ     6,,PR1
         2 001235   020000 316003                    CANQ    8192,DU
         2 001236   001154 600000 2                  TZE     s:19116

      769    19135    3           I = I - 1;

  19135  2 001237   000001 336007                    LCQ     1,DL
         2 001240   200005 056100                    ASQ     I,,AUTO

      770    19136    3   TOTAL_RECORDS_IGNORED:
      771    19137    3           CALL BINCHAR(IGNORED.TXT,I);

  19137  2 001241   000100 301500       TOTAL_RECOR* BTD
         2 001242   200005 000004                    NDSC9   I,,AUTO                  cn=0,s=lsgnf,sf=0,n=4
         2 001243   200013 230007                    NDSC9   IGNORED,,AUTO            cn=1,s=nosgn,sf=0,n=7

      772    19138    3           CALL CPE$RZEROS(IGNORED.TXT,7,I);

  19138  2 001244   200005 630500                    EPPR0   I,,AUTO
         2 001245   200464 450500                    STP0    FID_RES+3,,AUTO
         2 001246   000034 236000 3                  LDQ     28
         2 001247   200463 756100                    STQ     FID_RES+2,,AUTO
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:143  
         2 001250   200465 452500                    STP2    FID_RES+4,,AUTO
         2 001251   200465 236100                    LDQ     FID_RES+4,,AUTO
         2 001252   000035 036000 3                  ADLQ    29
         2 001253   200462 756100                    STQ     FID_RES+1,,AUTO
         2 001254   200462 630500                    EPPR0   FID_RES+1,,AUTO
         2 001255   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 001256   000000 701000 xent               TSX1    CPE$RZEROS
         2 001257   000000 011000                    NOP     0

      773    19139    3           IGNORED.CNT = I;

  19139  2 001260   200005 236100                    LDQ     I,,AUTO
         2 001261   000033 736000                    QLS     27
         2 001262   200013 552140                    STBQ    IGNORED,'40'O,AUTO

      774    19140    3           CALL CPC$WRITEMSGE(E_RECS_IGNORED,,IGNORED,,,%YES#);

  19140  2 001263   000006 236000 3                  LDQ     6
         2 001264   000001 235000 xsym               LDA     B_VECTNIL+1
         2 001265   200466 757100                    STAQ    FID_RES+5,,AUTO
         2 001266   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 001267   200465 756100                    STQ     FID_RES+4,,AUTO
         2 001270   200013 630500                    EPPR0   IGNORED,,AUTO
         2 001271   200464 450500                    STP0    FID_RES+3,,AUTO
         2 001272   000036 235000 3                  LDA     30
         2 001273   200462 757100                    STAQ    FID_RES+1,,AUTO
         2 001274   200462 630500                    EPPR0   FID_RES+1,,AUTO
         2 001275   000024 631400 xsym               EPPR1   B_VECTNIL+20
         2 001276   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 001277   000000 011000                    NOP     0

      775    19141    3           SEG$2.FLAGS.USE_REMEM = %NO# ;

  19141  2 001300   000000 470400 xsym               LDP0    SEG2$
         2 001301   000037 236000 3                  LDQ     31
         2 001302   000000 356100                    ANSQ    0,,PR0

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:144  
      776    19142    3           IF NOT SEG$2.GETCMD$->GET$CMD.RCVD_PROMPT#

  19142  2 001303   000173 471500                    LDP1    123,,PR0
         2 001304   100006 236100                    LDQ     6,,PR1
         2 001305   020000 316003                    CANQ    8192,DU
         2 001306   004545 600000 2                  TZE     CHK_BREAK

      777    19143    3           THEN   /* Can't parse this record */
      778    19144    3              GOTO CHK_BREAK;
      779    19145    3           IF ERR_CODE ~= %NO#

  19145  2 001307   200232 235100                    LDA     ERR_CODE,,AUTO
         2 001310   004717 601000 2                  TNZ     E_READCC

      780    19146    3           THEN
      781    19147    3              GOTO E_READCC ;
      782    19148        /**/
      783    19149        /*E*    ERROR:   CPA-E$RECS_IGNORED-C
      784    19150                MESSAGE:  %U1 records ignored
      785    19151        */
      786    19152    3           END;   /* Do ... Complain ... end */

      787    19153    2      END;  /* Do case ... end */

      788    19154        %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:145  
      789    19155        /*
      790    19156            ***** Command ok to parse ...
      791    19157        */
      792    19158        /*
      793    19159             ***** Do initial parse and determine which command ...
      794    19160        */
      795    19161    1     SEG$2.FLAGS.RUNITCMD = %NO#;

  19161  2 001311   000026 236000 3                  LDQ     22
         2 001312   000000 356100                    ANSQ    0,,PR0

      796    19162    1     SEG$2.FLAGS.CONTINUED = %NO#;

  19162  2 001313   000022 236000 3                  LDQ     18
         2 001314   000000 356100                    ANSQ    0,,PR0

      797    19163    1     BLK$ = SEG$2.GETCMD$->GET$CMD.OUT$;

  19163  2 001315   000173 471500                    LDP1    123,,PR0
         2 001316   100001 236100                    LDQ     1,,PR1
         2 001317   200023 756100                    STQ     BLK$,,AUTO

      798    19164        /*
      799    19165             ***** If this command has a label then BLK$ must
      800    19166                   be modified to point to the command node
      801    19167                   not the label, and OFFSET must point to the
      802    19168                   first character of the command. This offset
      803    19169                   is needed for reporting errors so that the
      804    19170                   arrows will point to the correct position ...
      805    19171        */
      806    19172    1     IF BLK$ -> P$B.TEMP

  19172  2 001320   200023 473500                    LDP3    BLK$,,AUTO
         2 001321   300000 234100                    SZN     0,,PR3
         2 001322   001325 605000 2                  TPL     s:19181

      807    19173
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:146  
      808    19174    1     THEN   /* Label. Fix BLK$ */
      809    19175    2     DO;

      810    19176    2        BLK$ = BLK$ -> P$B.SUBLK$(1);

  19176  2 001323   300004 236100                    LDQ     4,,PR3
         2 001324   200023 756100                    STQ     BLK$,,AUTO

      811    19177    2        END;

      812    19178        /*
      813    19179        **** Check if run unit type is a debugger and change code to debugcmnd.
      814    19180        */
      815    19181    1     CMD_PARSING = BLK$ -> P$B.CODE;

  19181  2 001325   200023 473500                    LDP3    BLK$,,AUTO
         2 001326   300000 236100                    LDQ     0,,PR3
         2 001327   777777 376007                    ANQ     -1,DL
         2 001330   200004 756100                    STQ     CMD_PARSING,,AUTO

      816    19182    1     IF CMD_PARSING = RUNITCMND

  19182  2 001331   000075 116007                    CMPQ    61,DL
         2 001332   001337 601000 2                  TNZ     s:19188

      817    19183    1     THEN
      818    19184    1        CALL CHK_RUTYPE(BLK$ -> P$B) ALTRET (CONTEXT_ERR) ;

  19184  2 001333   200023 236100                    LDQ     BLK$,,AUTO
         2 001334   200403 756100                    STQ     LOGOFF+7,,AUTO
         2 001335   006617 701000 2                  TSX1    CHK_RUTYPE
         2 001336   005444 702000 2                  TSX2    CONTEXT_ERR

      819    19185        /*
      820    19186             ***** If at yc, then may want to rundown/flush cmd stream...
      821    19187        */
      822    19188    1     IF B$JIT.CPFLAGS1.YC
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:147  

  19188  2 001337   000000 470400 xsym               LDP0    B$JIT$
         2 001340   000143 236100                    LDQ     99,,PR0
         2 001341   040000 316003                    CANQ    16384,DU
         2 001342   001347 601000 2                  TNZ     s:19191
         2 001343   000000 471400 xsym               LDP1    SEG2$
         2 001344   100000 236100                    LDQ     0,,PR1
         2 001345   000200 316003                    CANQ    128,DU
         2 001346   001353 600000 2                  TZE     s:19198

      823    19189    1       OR SEG$2.FLAGS.CMD_STR_INT
      824    19190    1     THEN
      825    19191    1        CALL CHKQUIT (BLK$ -> P$B) ALTRET(PROMPT);

  19191  2 001347   200023 236100                    LDQ     BLK$,,AUTO
         2 001350   200403 756100                    STQ     LOGOFF+7,,AUTO
         2 001351   006210 701000 2                  TSX1    CHKQUIT
         2 001352   000705 702000 2                  TSX2    PROMPT

      826    19192        /*
      827    19193             ***** If the last rununit aborted, then
      828    19194                   flush the command stream, unless the next
      829    19195                   command is: Delta, pmd or if. This means that
      830    19196                   BATCH jobs are logged off, and XEQ canceled...
      831    19197        */
      832    19198    1     IF (B$JIT.USRRNST = %RS_XXX#     /* Aborted by User pgm */

  19198  2 001353   000000 470400 xsym               LDP0    B$JIT$
         2 001354   000145 236100                    LDQ     101,,PR0
         2 001355   777000 376007                    ANQ     -512,DL
         2 001356   002000 116007                    CMPQ    1024,DL
         2 001357   001370 600000 2                  TZE     s:19198+13
         2 001360   000145 236100                    LDQ     101,,PR0
         2 001361   777000 376007                    ANQ     -512,DL
         2 001362   004000 116007                    CMPQ    2048,DL
         2 001363   001370 600000 2                  TZE     s:19198+13
         2 001364   000145 236100                    LDQ     101,,PR0
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:148  
         2 001365   777000 376007                    ANQ     -512,DL
         2 001366   010000 116007                    CMPQ    4096,DL
         2 001367   001500 601000 2                  TNZ     s:19226
         2 001370   000143 236100                    LDQ     99,,PR0
         2 001371   020000 316003                    CANQ    8192,DU
         2 001372   001500 601000 2                  TNZ     s:19226
         2 001373   004000 316003                    CANQ    2048,DU
         2 001374   001500 601000 2                  TNZ     s:19226
         2 001375   040000 316007                    CANQ    16384,DL
         2 001376   001500 601000 2                  TNZ     s:19226
         2 001377   000000 236100                    LDQ     0,,PR0
         2 001400   740000 376003                    ANQ     -16384,DU
         2 001401   040000 116003                    CMPQ    16384,DU
         2 001402   001406 600000 2                  TZE     s:19207
         2 001403   200011 235100                    LDA     CMD_SOURCE,,AUTO
         2 001404   000003 115007                    CMPA    3,DL
         2 001405   001500 601000 2                  TNZ     s:19226

      833    19199    1       OR B$JIT.USRRNST = %RS_SSP#   /* Aborted by Special Shared Proc */
      834    19200    1       OR B$JIT.USRRNST = %RS_ABRT#) /* Aborted by Monitor */
      835    19201    1       AND NOT(B$JIT.CPFLAGS1.YCPMME )
      836    19202    1       AND NOT(B$JIT.CPFLAGS1.LNKPMME )
      837    19203    1       AND NOT(B$JIT.CPFLAGS1.SKIPABORT )
      838    19204    1       AND (B$JIT.MODE = %M_BATCH# OR CMD_SOURCE = XEQFILE)
      839    19205
      840    19206    1     THEN
      841    19207    2     DO CASE (CMD_PARSING);

  19207  2 001406   200004 235100                    LDA     CMD_PARSING,,AUTO
         2 001407   000015 135007                    SBLA    13,DL
         2 001410   000043 115007                    CMPA    35,DL
         2 001411   001413 602005 2                  TNC     s:19207+5,AL
         2 001412   001462 710000 2                  TRA     s:19216
         2 001413   001456 710000 2                  TRA     s:19211
         2 001414   001462 710000 2                  TRA     s:19216
         2 001415   001462 710000 2                  TRA     s:19216
         2 001416   001462 710000 2                  TRA     s:19216
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:149  
         2 001417   001462 710000 2                  TRA     s:19216
         2 001420   001462 710000 2                  TRA     s:19216
         2 001421   001462 710000 2                  TRA     s:19216
         2 001422   001462 710000 2                  TRA     s:19216
         2 001423   001462 710000 2                  TRA     s:19216
         2 001424   001462 710000 2                  TRA     s:19216
         2 001425   001462 710000 2                  TRA     s:19216
         2 001426   001462 710000 2                  TRA     s:19216
         2 001427   001462 710000 2                  TRA     s:19216
         2 001430   001462 710000 2                  TRA     s:19216
         2 001431   001462 710000 2                  TRA     s:19216
         2 001432   001462 710000 2                  TRA     s:19216
         2 001433   001461 710000 2                  TRA     s:19214
         2 001434   001462 710000 2                  TRA     s:19216
         2 001435   001462 710000 2                  TRA     s:19216
         2 001436   001462 710000 2                  TRA     s:19216
         2 001437   001462 710000 2                  TRA     s:19216
         2 001440   001462 710000 2                  TRA     s:19216
         2 001441   001462 710000 2                  TRA     s:19216
         2 001442   001462 710000 2                  TRA     s:19216
         2 001443   001462 710000 2                  TRA     s:19216
         2 001444   001462 710000 2                  TRA     s:19216
         2 001445   001462 710000 2                  TRA     s:19216
         2 001446   001462 710000 2                  TRA     s:19216
         2 001447   001456 710000 2                  TRA     s:19211
         2 001450   001462 710000 2                  TRA     s:19216
         2 001451   001462 710000 2                  TRA     s:19216
         2 001452   001462 710000 2                  TRA     s:19216
         2 001453   001462 710000 2                  TRA     s:19216
         2 001454   001462 710000 2                  TRA     s:19216
         2 001455   001456 710000 2                  TRA     s:19211

      842    19208    2      CASE (DEBUGCMND,

      843    19209    2       NULLCMND,
      844    19210    2       PMDCMND);
      845    19211    2        B$JIT.CPFLAGS1.SKIPABORT = %YES#;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:150  

  19211  2 001456   040000 236007                    LDQ     16384,DL
         2 001457   000143 256100                    ORSQ    99,,PR0

      846    19212    2        GOTO CHK_SYNTAX;

  19212  2 001460   002064 710000 2                  TRA     CHK_SYNTAX

      847    19213    2      CASE (IFCMND);

      848    19214    2        GOTO CHK_SYNTAX;

  19214  2 001461   002064 710000 2                  TRA     CHK_SYNTAX

      849    19215    2      CASE (ELSE);

      850    19216    2        CALL CPC$WRITEMSGE (E_ABRTBATCH);

  19216  2 001462   000040 630400 3                  EPPR0   32
         2 001463   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001464   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 001465   000000 011000                    NOP     0

      851    19217    2        CALL CPA$FLUSH;

  19217  2 001466   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001467   000000 701000 xent               TSX1    CPA$FLUSH
         2 001470   000000 011000                    NOP     0

      852    19218    2        IF B$JIT.STEPCC = 0

  19218  2 001471   000000 470400 xsym               LDP0    B$JIT$
         2 001472   000316 236100                    LDQ     206,,PR0
         2 001473   000777 316003                    CANQ    511,DU
         2 001474   001477 601000 2                  TNZ     s:19221

      853    19219    2        THEN
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:151  
      854    19220    2           B$JIT.STEPCC = %CC_XXX# ;

  19220  2 001475   000006 236003                    LDQ     6,DU
         2 001476   000316 552120                    STBQ    206,'20'O,PR0

      855    19221    2        GOTO CHK_BREAK;

  19221  2 001477   004545 710000 2                  TRA     CHK_BREAK

      856    19222    2      END;

      857    19223        /*
      858    19224             ***** If already at JOBSTEP then skip this RUNDOWN code...
      859    19225        */
      860    19226    1     IF B$JIT.CPFLAGS1.JSTEP

  19226  2 001500   000143 236100                    LDQ     99,,PR0
         2 001501   200000 316003                    CANQ    65536,DU
         2 001502   002064 601000 2                  TNZ     CHK_SYNTAX

      861    19227    1     THEN
      862    19228    1        GOTO CHK_SYNTAX;
      863    19229        /*
      864    19230             ***** If this command is a rununit, then rundown the user...
      865    19231        */
      866    19232    2     DO CASE(CMD_PARSING);

  19232  2 001503   200004 235100                    LDA     CMD_PARSING,,AUTO
         2 001504   000025 135007                    SBLA    21,DL
         2 001505   000106 115007                    CMPA    70,DL
         2 001506   001510 602005 2                  TNC     s:19232+5,AL
         2 001507   002064 710000 2                  TRA     CHK_SYNTAX
         2 001510   001616 710000 2                  TRA     s:19249
         2 001511   001616 710000 2                  TRA     s:19249
         2 001512   002064 710000 2                  TRA     CHK_SYNTAX
         2 001513   002064 710000 2                  TRA     CHK_SYNTAX
         2 001514   002064 710000 2                  TRA     CHK_SYNTAX
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:152  
         2 001515   002064 710000 2                  TRA     CHK_SYNTAX
         2 001516   002064 710000 2                  TRA     CHK_SYNTAX
         2 001517   002064 710000 2                  TRA     CHK_SYNTAX
         2 001520   002064 710000 2                  TRA     CHK_SYNTAX
         2 001521   002064 710000 2                  TRA     CHK_SYNTAX
         2 001522   002064 710000 2                  TRA     CHK_SYNTAX
         2 001523   002064 710000 2                  TRA     CHK_SYNTAX
         2 001524   002064 710000 2                  TRA     CHK_SYNTAX
         2 001525   002064 710000 2                  TRA     CHK_SYNTAX
         2 001526   002064 710000 2                  TRA     CHK_SYNTAX
         2 001527   001616 710000 2                  TRA     s:19249
         2 001530   002064 710000 2                  TRA     CHK_SYNTAX
         2 001531   002064 710000 2                  TRA     CHK_SYNTAX
         2 001532   002064 710000 2                  TRA     CHK_SYNTAX
         2 001533   002064 710000 2                  TRA     CHK_SYNTAX
         2 001534   002064 710000 2                  TRA     CHK_SYNTAX
         2 001535   002064 710000 2                  TRA     CHK_SYNTAX
         2 001536   002064 710000 2                  TRA     CHK_SYNTAX
         2 001537   002064 710000 2                  TRA     CHK_SYNTAX
         2 001540   001616 710000 2                  TRA     s:19249
         2 001541   002064 710000 2                  TRA     CHK_SYNTAX
         2 001542   002064 710000 2                  TRA     CHK_SYNTAX
         2 001543   002064 710000 2                  TRA     CHK_SYNTAX
         2 001544   002064 710000 2                  TRA     CHK_SYNTAX
         2 001545   002064 710000 2                  TRA     CHK_SYNTAX
         2 001546   002064 710000 2                  TRA     CHK_SYNTAX
         2 001547   002064 710000 2                  TRA     CHK_SYNTAX
         2 001550   002064 710000 2                  TRA     CHK_SYNTAX
         2 001551   002064 710000 2                  TRA     CHK_SYNTAX
         2 001552   002064 710000 2                  TRA     CHK_SYNTAX
         2 001553   002064 710000 2                  TRA     CHK_SYNTAX
         2 001554   002064 710000 2                  TRA     CHK_SYNTAX
         2 001555   002064 710000 2                  TRA     CHK_SYNTAX
         2 001556   002064 710000 2                  TRA     CHK_SYNTAX
         2 001557   001616 710000 2                  TRA     s:19249
         2 001560   001616 710000 2                  TRA     s:19249
         2 001561   002064 710000 2                  TRA     CHK_SYNTAX
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:153  
         2 001562   002064 710000 2                  TRA     CHK_SYNTAX
         2 001563   002064 710000 2                  TRA     CHK_SYNTAX
         2 001564   001616 710000 2                  TRA     s:19249
         2 001565   002064 710000 2                  TRA     CHK_SYNTAX
         2 001566   002064 710000 2                  TRA     CHK_SYNTAX
         2 001567   002064 710000 2                  TRA     CHK_SYNTAX
         2 001570   002064 710000 2                  TRA     CHK_SYNTAX
         2 001571   002064 710000 2                  TRA     CHK_SYNTAX
         2 001572   002064 710000 2                  TRA     CHK_SYNTAX
         2 001573   001616 710000 2                  TRA     s:19249
         2 001574   002064 710000 2                  TRA     CHK_SYNTAX
         2 001575   002064 710000 2                  TRA     CHK_SYNTAX
         2 001576   002064 710000 2                  TRA     CHK_SYNTAX
         2 001577   002064 710000 2                  TRA     CHK_SYNTAX
         2 001600   002064 710000 2                  TRA     CHK_SYNTAX
         2 001601   001616 710000 2                  TRA     s:19249
         2 001602   002064 710000 2                  TRA     CHK_SYNTAX
         2 001603   002064 710000 2                  TRA     CHK_SYNTAX
         2 001604   002064 710000 2                  TRA     CHK_SYNTAX
         2 001605   002064 710000 2                  TRA     CHK_SYNTAX
         2 001606   002064 710000 2                  TRA     CHK_SYNTAX
         2 001607   002064 710000 2                  TRA     CHK_SYNTAX
         2 001610   002064 710000 2                  TRA     CHK_SYNTAX
         2 001611   002064 710000 2                  TRA     CHK_SYNTAX
         2 001612   002064 710000 2                  TRA     CHK_SYNTAX
         2 001613   002064 710000 2                  TRA     CHK_SYNTAX
         2 001614   002064 710000 2                  TRA     CHK_SYNTAX
         2 001615   001616 710000 2                  TRA     s:19249

      867    19233    2      CASE (EDITCMND,

      868    19234    2       SIXEDITCMND,
      869    19235    2       EFTCMND,
      870    19236    2       FEPLINKCMND,
      871    19237    2       LINKCMND,
      872    19238    2       PCLCMND,
      873    19239    2       RUMCMND,
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:154  
      874    19240    2       RUNITCMND,
      875    19241    2       STARTCMND,
      876    19242    2       UCMND);
      877    19243        /*
      878    19244             ***** Users of M$YC must set the LINK bit in the FPT_YC if they wish to
      879    19245                   pass a command which would cause the current program to be run down.
      880    19246                   If FPT_YC.F.LINK is set, a linking-flavored M$CPEXIT is issued;  if
      881    19247                   LINK is not set, an immediate ALTRETURN to the caller occurs.
      882    19248        */
      883    19249    2        IF B$JIT.CPFLAGS1.YCPMME

  19249  2 001616   020000 316003                    CANQ    8192,DU
         2 001617   001750 600000 2                  TZE     s:19311

      884    19250
      885    19251    2        THEN
      886    19252    2           IF B$PS1$ -> FPTV$YC.LINK

  19252  2 001620   000000 471400 xsym               LDP1    B$PS1$
         2 001621   100000 236100                    LDQ     0,,PR1
         2 001622   100000 316003                    CANQ    32768,DU
         2 001623   001745 600000 2                  TZE     s:19308

      887    19253    2           THEN
      888    19254    3           DO ;

      889    19255    4              DO CASE(CMD_PARSING) ;

  19255  2 001624   200004 235100                    LDA     CMD_PARSING,,AUTO
         2 001625   000074 135007                    SBLA    60,DL
         2 001626   000015 115007                    CMPA    13,DL
         2 001627   001631 602005 2                  TNC     s:19255+5,AL
         2 001630   001651 710000 2                  TRA     s:19272
         2 001631   001646 710000 2                  TRA     s:19259
         2 001632   001651 710000 2                  TRA     s:19272
         2 001633   001651 710000 2                  TRA     s:19272
         2 001634   001651 710000 2                  TRA     s:19272
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:155  
         2 001635   001651 710000 2                  TRA     s:19272
         2 001636   001646 710000 2                  TRA     s:19259
         2 001637   001651 710000 2                  TRA     s:19272
         2 001640   001651 710000 2                  TRA     s:19272
         2 001641   001651 710000 2                  TRA     s:19272
         2 001642   001651 710000 2                  TRA     s:19272
         2 001643   001651 710000 2                  TRA     s:19272
         2 001644   001651 710000 2                  TRA     s:19272
         2 001645   001646 710000 2                  TRA     s:19259

      890    19256    4               CASE (  RUMCMND,

      891    19257    4                STARTCMND,
      892    19258    4                UCMND) ;
      893    19259    4                 ERR_CODE = E_NJOBSTEP ;

  19259  2 001646   000112 236000 1                  LDQ     E_NJOBSTEP
         2 001647   200232 756100                    STQ     ERR_CODE,,AUTO

      894    19260    4                 GOTO E_M$YCPMME ;

  19260  2 001650   005642 710000 2                  TRA     E_M$YCPMME

      895    19261    4               END ; /* Do Case */

      896    19262        /*E*    ERROR: CPA-E$NJOBSTEP-0
      897    19263                MESSAGE: That command is allowed only at Job Step.
      898    19264                DESCRIPTION: User is not allowed to use selected commands
      899    19265                             when using the M$YC pmme to call IBEX with the
      900    19266                             LINK# bit set.
      901    19267        */
      902    19268        /*
      903    19269               ***** If we have M$LL and we own it
      904    19270                     release it before exiting ...
      905    19271          */
      906    19272    3              IF SEG$2.LLDCB# ~= 0

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:156  
  19272  2 001651   000000 473400 xsym               LDP3    SEG2$
         2 001652   300000 720100                    LXL0    0,,PR3
         2 001653   001671 600000 2                  TZE     s:19280
         2 001654   300000 236100                    LDQ     0,,PR3
         2 001655   000004 316003                    CANQ    4,DU
         2 001656   001671 600000 2                  TZE     s:19280
         2 001657   300000 236100                    LDQ     0,,PR3
         2 001660   777777 376007                    ANQ     -1,DL
         2 001661   000000 116000 xsym               CMPQ    M$UC_NUM
         2 001662   001671 600000 2                  TZE     s:19280
         2 001663   000000 116000 xsym               CMPQ    M$IBEX2_NUM
         2 001664   001671 600000 2                  TZE     s:19280

      907    19273    3                AND SEG$2.FLAGS.IBEX_OWNS_M$LL
      908    19274    3                AND SEG$2.LLDCB# ~= M$UC_NUM
      909    19275    3                AND SEG$2.LLDCB# ~= M$IBEX2_NUM
      910    19276    3              THEN
      911    19277    4              DO;   /* Release M$LL */

      912    19278    4                 CALL CPC$RELDCB (M$LL_NUM);

  19278  2 001665   000041 630400 3                  EPPR0   33
         2 001666   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001667   000000 701000 xent               TSX1    CPC$RELDCB
         2 001670   000000 011000                    NOP     0

      913    19279    4                 END;

      914    19280    3              SEG$2.FPT_CPEXIT$->FPT$CPEXIT = CFPT_CPEXIT;

  19280  2 001671   000000 470400 xsym               LDP0    SEG2$
         2 001672   000166 471500                    LDP1    118,,PR0
         2 001673   000100 100400                    MLR     fill='000'O
         2 001674   000000 000070 xsym               ADSC9   CFPT_CPEXIT              cn=0,n=56
         2 001675   100000 000070                    ADSC9   0,,PR1                   cn=0,n=56

      915    19281    3              SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V_ =
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:157  

  19281  2 001676   000166 471500                    LDP1    118,,PR0
         2 001677   000042 235000 3                  LDA     34
         2 001700   200462 451500                    STP1    FID_RES+1,,AUTO
         2 001701   200462 236100                    LDQ     FID_RES+1,,AUTO
         2 001702   000014 036003                    ADLQ    12,DU
         2 001703   100012 757100                    STAQ    10,,PR1

      916    19282    3                VECTOR(SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V);
      917    19283    3              SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V.LINK# = '1'B;

  19283  2 001704   000166 471500                    LDP1    118,,PR0
         2 001705   004000 236003                    LDQ     2048,DU
         2 001706   100014 256100                    ORSQ    12,,PR1

      918    19284    3              CALL M$CPEXIT (SEG$2.FPT_CPEXIT$->FPT$CPEXIT) WHENALTRETURN

  19284  2 001707   000166 471500                    LDP1    118,,PR0
         2 001710   100000 630500                    EPPR0   0,,PR1
         2 001711   400012 713400                    CLIMB   alt,+10
         2 001712   402400 401760                    pmme    nvectors=6
         2 001713   001715 702000 2                  TSX2    s:19286
         2 001714   001721 710000 2                  TRA     s:19292

      919    19285    4              DO ;

      920    19286    4                 ERR_CODE = B$JIT.ERR ;

  19286  2 001715   000000 470400 xsym               LDP0    B$JIT$
         2 001716   000012 236100                    LDQ     10,,PR0
         2 001717   200232 756100                    STQ     ERR_CODE,,AUTO

      921    19287    4                 GOTO E_M$YCPMME ;

  19287  2 001720   005642 710000 2                  TRA     E_M$YCPMME

      922    19288    4                 END ; /* Whenaltreturn Do */
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:158  
      923    19289        /*
      924    19290            **** Get M$IBEX and M$IBEX1 - two dcbs IBEX is guaranteed
      925    19291        */
      926    19292    3              IF SEG$2.LLDCB# = 0

  19292  2 001721   000000 470400 xsym               LDP0    SEG2$
         2 001722   000000 720100                    LXL0    0,,PR0
         2 001723   001734 601000 2                  TNZ     s:19298

      927    19293    3              THEN  /* Need to get M$LL again */
      928    19294    4              DO ;

      929    19295    4                 CALL CPC$OPEN_LL;

  19295  2 001724   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001725   000000 701000 xent               TSX1    CPC$OPEN_LL
         2 001726   000000 011000                    NOP     0

      930    19296    4                 SEG$2.GETCMD$->GET$CMD.OUTDCB# = SEG$2.LLDCB#;

  19296  2 001727   000000 470400 xsym               LDP0    SEG2$
         2 001730   000173 471500                    LDP1    123,,PR0
         2 001731   000000 236100                    LDQ     0,,PR0
         2 001732   777777 376007                    ANQ     -1,DL
         2 001733   100013 756100                    STQ     11,,PR1

      931    19297    4                 END ; /* Then Do */

      932    19298    3              CALL CPC$GETDCB (M$IBEX_NUM, IBEXTXTC);

  19298  2 001734   000000 630400 3                  EPPR0   0
         2 001735   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 001736   000000 701000 xent               TSX1    CPC$GETDCB
         2 001737   000000 011000                    NOP     0

      933    19299    3              CALL CPC$GETDCB (M$IBEX1_NUM, IBEX1TXTC);

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:159  
  19299  2 001740   000002 630400 3                  EPPR0   2
         2 001741   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 001742   000000 701000 xent               TSX1    CPC$GETDCB
         2 001743   000000 011000                    NOP     0

      934    19300    3              END ; /* Then Do */

  19300  2 001744   001750 710000 2                  TRA     s:19311

      935    19301    2           ELSE
      936    19302    3           DO ;

      937    19303        /*E*    ERROR: CPA-E$YC_RUND-0
      938    19304                MESSAGE: That command would cause your program to be aborted.
      939    19305                DESCRIPTION: User is not allowed to use selected commands
      940    19306                             when using the M$YC pmme to call IBEX
      941    19307        */
      942    19308    3              ERR_CODE = E_YC_RUND;

  19308  2 001745   000077 236000 1                  LDQ     E_YC_RUND
         2 001746   200232 756100                    STQ     ERR_CODE,,AUTO

      943    19309    3              GOTO E_M$YCPMME;

  19309  2 001747   005642 710000 2                  TRA     E_M$YCPMME

      944    19310    3              END; /* Else Do */
      945    19311    2        IF SEG$2.GETCMD$->GET$CMD.RCVD_PROMPT# AND NOT B$JIT.CPFLAGS1.YCPMME

  19311  2 001750   000000 470400 xsym               LDP0    SEG2$
         2 001751   000173 471500                    LDP1    123,,PR0
         2 001752   100006 236100                    LDQ     6,,PR1
         2 001753   020000 316003                    CANQ    8192,DU
         2 001754   002003 600000 2                  TZE     s:19321
         2 001755   000000 473400 xsym               LDP3    B$JIT$
         2 001756   300143 236100                    LDQ     99,,PR3
         2 001757   020000 316003                    CANQ    8192,DU
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:160  
         2 001760   002003 601000 2                  TNZ     s:19321

      946    19312    2        THEN
      947    19313    3        DO ;

      948    19314    3           CALL CONCAT(B$JIT.CCBUF, '!', SUBSTR(VBASE(XUG$PARAMS.LAST)->

  19314  2 001761   200025 474500                    LDP4    XUG$,,AUTO
         2 001762   400005 475500                    LDP5    5,,PR4
         2 001763   400004 236100                    LDQ     4,,PR4
         2 001764   000020 772000                    QRL     16
         2 001765   000001 620006                    EAX0    1,QL
         2 001766   041000 236003                    LDQ     16896,DU
         2 001767   300033 552140                    STBQ    27,'40'O,PR3
         2 001770   040100 100540                    MLR     fill='040'O
         2 001771   500000 000010                    ADSC9   0,,PR5                   cn=0,n=*X0
         2 001772   300033 200377                    ADSC9   27,,PR3                  cn=1,n=255

      949    19315    3             CP$BUFF,0,VBOUND(XUG$PARAMS.LAST)+1)) ;
      950    19316    3           B$JIT.CCARS = P$PCB.NCHARS + 1 ;

  19316  2 001773   200024 470500                    LDP0    P$PCB$,,AUTO
         2 001774   000011 720100                    LXL0    9,,PR0
         2 001775   000001 621010                    EAX1    1,X0
         2 001776   000000 471400 xsym               LDP1    B$JIT$
         2 001777   100032 741100                    STX1    26,,PR1

      951    19317    3           K =  1 ;

  19317  2 002000   000001 235007                    LDA     1,DL
         2 002001   200007 755100                    STA     K,,AUTO

      952    19318    3           END ; /* Then Do */

  19318  2 002002   002020 710000 2                  TRA     s:19326

      953    19319    2        ELSE
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:161  
      954    19320    3        DO ;

      955    19321    3           B$JIT.CCBUF = SUBSTR(VBASE(XUG$PARAMS.LAST)->CP$BUFF,0,

  19321  2 002003   200025 473500                    LDP3    XUG$,,AUTO
         2 002004   300005 474500                    LDP4    5,,PR3
         2 002005   300004 236100                    LDQ     4,,PR3
         2 002006   000020 772000                    QRL     16
         2 002007   000001 620006                    EAX0    1,QL
         2 002010   000000 475400 xsym               LDP5    B$JIT$
         2 002011   040100 100540                    MLR     fill='040'O
         2 002012   400000 000010                    ADSC9   0,,PR4                   cn=0,n=*X0
         2 002013   500033 000400                    ADSC9   27,,PR5                  cn=0,n=256

      956    19322    3             VBOUND(XUG$PARAMS.LAST)+1) ;
      957    19323    3           B$JIT.CCARS = P$PCB.NCHARS ;

  19323  2 002014   200024 471500                    LDP1    P$PCB$,,AUTO
         2 002015   100011 720100                    LXL0    9,,PR1
         2 002016   500032 740100                    STX0    26,,PR5

      958    19324    3           K =  0 ;

  19324  2 002017   200007 450100                    STZ     K,,AUTO

      959    19325    3           END ; /* Else Do */

      960    19326    2        IF SEG$2.GETCMD$->GET$CMD.CONTINUED#

  19326  2 002020   000000 470400 xsym               LDP0    SEG2$
         2 002021   000173 471500                    LDP1    123,,PR0
         2 002022   100006 236100                    LDQ     6,,PR1
         2 002023   100000 316003                    CANQ    32768,DU
         2 002024   002040 600000 2                  TZE     s:19330

      961    19327    2        THEN
      962    19328    2           CALL INSERT(B$JIT.CCBUF, VBASE(XUG$PARAMS.RLTVEC)->XUG$RLT(1)+K-1, 1,
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:162  

  19328  2 002025   200025 473500                    LDP3    XUG$,,AUTO
         2 002026   300013 474500                    LDP4    11,,PR3
         2 002027   000100 101500                    MRL     fill='000'O
         2 002030   400000 200001                    ADSC9   0,,PR4                   cn=1,n=1
         2 002031   200462 000004                    ADSC9   FID_RES+1,,AUTO          cn=0,n=4
         2 002032   200462 236100                    LDQ     FID_RES+1,,AUTO
         2 002033   200007 036100                    ADLQ    K,,AUTO
         2 002034   000000 471400 xsym               LDP1    B$JIT$
         2 002035   040106 100400                    MLR     fill='040'O
         2 002036   000043 000001 3                  ADSC9   35                       cn=0,n=1
         2 002037   100032 600001                    ADSC9   26,Q,PR1                 cn=3,n=1

      963    19329    2             ';') ;
      964    19330    2        B$JIT.CPFLAGS1.BUFFULL = %YES#;

  19330  2 002040   000000 471400 xsym               LDP1    B$JIT$
         2 002041   000040 236007                    LDQ     32,DL
         2 002042   100143 256100                    ORSQ    99,,PR1

      965    19331    2        IF NOT (B$JIT.CPFLAGS1 & %(CP_YCPMME# | CP_LNKPMME#) )

  19331  2 002043   100143 236100                    LDQ     99,,PR1
         2 002044   000147 376000 1                  ANQ     XLIM_TBL+24
         2 002045   002051 601000 2                  TNZ     s:19335

      966    19332    2        THEN
      967    19333    2           CALL CPC$QUIT ;

  19333  2 002046   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 002047   000000 701000 xent               TSX1    CPC$QUIT
         2 002050   000000 011000                    NOP     0

      968    19334             /* CPC$QUIT re-enters this code at the top */
      969    19335    2        B$JIT.PRFLAGS.NSSYNTAX = %NO# ;

  19335  2 002051   000000 470400 xsym               LDP0    B$JIT$
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:163  
         2 002052   000022 236000 3                  LDQ     18
         2 002053   000030 356100                    ANSQ    24,,PR0

      970    19336    2        B$JIT.PRFLAGS.SI = %NO# ;

  19336  2 002054   000031 236000 xsym               LDQ     B_VECTNIL+25
         2 002055   000030 356100                    ANSQ    24,,PR0

      971    19337    2        B$JIT.PRFLAGS.UI = %NO# ;

  19337  2 002056   000013 236000 3                  LDQ     11
         2 002057   000030 356100                    ANSQ    24,,PR0

      972    19338    2        B$JIT.PRFLAGS.OU = %NO# ;

  19338  2 002060   000015 236000 3                  LDQ     13
         2 002061   000030 356100                    ANSQ    24,,PR0

      973    19339    2        B$JIT.PRFLAGS.LS = %NO# ;

  19339  2 002062   000017 236000 3                  LDQ     15
         2 002063   000030 356100                    ANSQ    24,,PR0

      974    19340    2      END; /* do case ... end */

      975    19341        /*
      976    19342             ***** Parse the command...
      977    19343                   First setup info for context checking...
      978    19344        */
      979    19345    1   CHK_SYNTAX:
      980    19346        /*
      981    19347             ***** Do any setup necessary for the call to CPD$SYNTAX...
      982    19348                   All commands except ? or ?? must pass thru CPD$SYNTAX
      983    19349                   commands which are ignored by IBEX are not
      984    19350                   checked by CPD$SYNTAX. Control passes directly
      985    19351                   to CMND_CASE so that these commands may be echoed...
      986    19352        */
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:164  
      987    19353    2     DO CASE(CMD_PARSING);

  19353  2 002064   200004 235100       CHK_SYNTAX   LDA     CMD_PARSING,,AUTO
         2 002065   000132 115007                    CMPA    90,DL
         2 002066   002070 602005 2                  TNC     CHK_SYNTAX+4,AL
         2 002067   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002070   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002071   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002072   002222 710000 2                  TRA     s:19359
         2 002073   002440 710000 2                  TRA     s:19451
         2 002074   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002075   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002076   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002077   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002100   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002101   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002102   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002103   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002104   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002105   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002106   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002107   002311 710000 2                  TRA     s:19398
         2 002110   002406 710000 2                  TRA     s:19433
         2 002111   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002112   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002113   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002114   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002115   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002116   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002117   002440 710000 2                  TRA     s:19451
         2 002120   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002121   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002122   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002123   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002124   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002125   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002126   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:165  
         2 002127   002315 710000 2                  TRA     s:19402
         2 002130   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002131   002440 710000 2                  TRA     s:19451
         2 002132   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002133   002222 710000 2                  TRA     s:19359
         2 002134   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002135   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002136   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002137   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002140   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002141   002311 710000 2                  TRA     s:19398
         2 002142   002222 710000 2                  TRA     s:19359
         2 002143   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002144   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002145   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002146   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002147   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002150   002440 710000 2                  TRA     s:19451
         2 002151   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002152   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002153   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002154   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002155   002333 710000 2                  TRA     s:19407
         2 002156   002363 710000 2                  TRA     s:19420
         2 002157   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002160   002222 710000 2                  TRA     s:19359
         2 002161   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002162   002440 710000 2                  TRA     s:19451
         2 002163   002255 710000 2                  TRA     s:19378
         2 002164   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002165   002406 710000 2                  TRA     s:19433
         2 002166   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002167   002440 710000 2                  TRA     s:19451
         2 002170   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002171   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002172   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002173   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:166  
         2 002174   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002175   002440 710000 2                  TRA     s:19451
         2 002176   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002177   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002200   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002201   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002202   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002203   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002204   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002205   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002206   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002207   002636 710000 2                  TRA     s:19497
         2 002210   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002211   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002212   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002213   002440 710000 2                  TRA     s:19451
         2 002214   002440 710000 2                  TRA     s:19451
         2 002215   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002216   002653 710000 2                  TRA     s:19501
         2 002217   002653 710000 2                  TRA     s:19501
         2 002220   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER
         2 002221   002653 710000 2                  TRA     s:19501

      988    19354    2      CASE(LIMITCMND,ORESCMND,RELEASECMND,ACQUIRECMND);

      989    19355        /*
      990    19356             ***** BATCH and TP users are not allowed to use
      991    19357                   !ORES and !ACQUIRE commands ...
      992    19358        */
      993    19359    2        IF (CMD_PARSING = ORESCMND

  19359  2 002222   000052 115007                    CMPA    42,DL
         2 002223   002226 600000 2                  TZE     s:19359+4
         2 002224   000002 115007                    CMPA    2,DL
         2 002225   002236 601000 2                  TNZ     s:19368
         2 002226   000000 236100                    LDQ     0,,PR0
         2 002227   740000 376003                    ANQ     -16384,DU
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:167  
         2 002230   040000 116003                    CMPQ    16384,DU
         2 002231   002234 600000 2                  TZE     IGNORE_RES
         2 002232   200000 116003                    CMPQ    65536,DU
         2 002233   002236 601000 2                  TNZ     s:19368

      994    19360    2          OR CMD_PARSING = ACQUIRECMND)
      995    19361    2          AND (B$JIT.MODE = %M_BATCH#
      996    19362    2          OR B$JIT.MODE = %M_TP#)
      997    19363    2        THEN   /* Dont process */
      998    19364    3        DO;   /* Make NULL. Parse, echo and nothing else */

  19361  2 002234                       IGNORE_RES   null
      999    19365    3   IGNORE_RES: ;
     1000    19366    3           CMD_PARSING = NULLCMND;

  19366  2 002234   000051 235007                    LDA     41,DL
         2 002235   200004 755100                    STA     CMD_PARSING,,AUTO

     1001    19367    3           END;

     1002    19368    2        CALL CPC$RDUSERS (M$IBEX1_NUM,%IN#) ALTRET(ERRTRN);

  19368  2 002236   000044 630400 3                  EPPR0   36
         2 002237   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 002240   000000 701000 xent               TSX1    CPC$RDUSERS
         2 002241   005726 702000 2                  TSX2    ERRTRN

     1003    19369    2        CALL CPA$GETRES ALTRET(ERRTRN);

  19369  2 002242   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 002243   000000 701000 xent               TSX1    CPA$GETRES
         2 002244   005726 702000 2                  TSX2    ERRTRN

     1004    19370    2        U$PARAM.USERS$ = SEG$2.USERS$;

  19370  2 002245   000000 470400 xsym               LDP0    SEG2$
         2 002246   000152 236100                    LDQ     106,,PR0
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:168  
         2 002247   200355 756100                    STQ     U$PARAM+1,,AUTO

     1005    19371    2        U$PARAM.PSEUDO$ = SEG$2.PSEUDO$;

  19371  2 002250   000154 236100                    LDQ     108,,PR0
         2 002251   200360 756100                    STQ     U$PARAM+4,,AUTO

     1006    19372    2        U$PARAM.PHYS$ = SEG$2.PHYS$;

  19372  2 002252   000155 236100                    LDQ     109,,PR0
         2 002253   200361 756100                    STQ     U$PARAM+5,,AUTO
         2 002254   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER

     1007    19373    2      CASE(RESOURCECMND);

     1008    19374        /*E*    ERROR: CPA-E$RESINVALID-0
     1009    19375                MESSAGE: The !RESOURCE command is only valid in batch.
     1010    19376                MESSAGE1: You may want to use the !ORES command.
     1011    19377        */
     1012    19378    2        IF CMD_SOURCE = XEQFILE

  19378  2 002255   200011 236100                    LDQ     CMD_SOURCE,,AUTO
         2 002256   000003 116007                    CMPQ    3,DL
         2 002257   002234 600000 2                  TZE     IGNORE_RES

     1013    19379    2        THEN
     1014    19380    2           GOTO IGNORE_RES; /* Always ignore from XEQ */
     1015    19381    2        IF B$JIT.MODE ~= %M_BATCH#

  19381  2 002260   000000 236100                    LDQ     0,,PR0
         2 002261   740000 376003                    ANQ     -16384,DU
         2 002262   040000 116003                    CMPQ    16384,DU
         2 002263   002271 600000 2                  TZE     s:19390

     1016    19382    2        THEN   /* Bitch at user */
     1017    19383    3        DO ;

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:169  
     1018    19384    3           CALL CPC$WRITEMSGE (E_RESINVALID);

  19384  2 002264   000046 630400 3                  EPPR0   38
         2 002265   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 002266   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 002267   000000 011000                    NOP     0

     1019    19385    3           GOTO IGNORE_RES;

  19385  2 002270   002234 710000 2                  TRA     IGNORE_RES

     1020    19386    3           END ;  /* Then Do */
     1021    19387        /*E*    ERROR: CPA-E$MPRESOURCE-C
     1022    19388                MESSAGE: !RESOURCE command must immediately follow the !JOB command
     1023    19389        */
     1024    19390    2        IF B$JIT.MODE = %M_BATCH#

  19390  2 002271   002310 601000 2                  TNZ     s:19396
         2 002272   200003 235100                    LDA     PREV_CMND,,AUTO
         2 002273   000037 115007                    CMPA    31,DL
         2 002274   002310 600000 2                  TZE     s:19396
         2 002275   000000 236007 xsym               LDQ     M$UC,DL
         2 002276   000047 471400 3                  LDP1    39
         2 002277   100000 473500                    LDP3    0,,PR1
         2 002300   300000 474506                    LDP4    0,QL,PR3
         2 002301   400071 235100                    LDA     57,,PR4
         2 002302   000002 115007                    CMPA    2,DL
         2 002303   002310 604400 2                  TMOZ    s:19396

     1025    19391    2          AND PREV_CMND ~= JOBCMND
     1026    19392    2          AND DCBADDR(DCBNUM(M$UC))->F$DCB.CRECNO > 2
     1027    19393
     1028    19394    2        THEN /* Resource cmd in wrong place */
     1029    19395    2           CALL CPC$WRITEMSGE (E_MPRESOURCE);

  19395  2 002304   000050 630400 3                  EPPR0   40
         2 002305   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:170  
         2 002306   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 002307   000000 011000                    NOP     0

     1030    19396    2        GOTO IGNORE_RES; /* parse and echo but ignore the cmnd */

  19396  2 002310   002234 710000 2                  TRA     IGNORE_RES

     1031    19397    2      CASE(NULLCMND,DEFAULTCMND);

     1032    19398    2        ADDR(SEG$2.ERRBUF) -> ERR$BLK.FIRST = 0;

  19398  2 002311   000000 471400 xsym               LDP1    SEG2$
         2 002312   100004 450100                    STZ     4,,PR1

     1033    19399    2        ADDR(SEG$2.ERRBUF) -> ERR$BLK.NEXT = 0;

  19399  2 002313   100005 450100                    STZ     5,,PR1

     1034    19400    2        GOTO CMND_CASE; /* echo but ignore the cmnd */

  19400  2 002314   003240 710000 2                  TRA     CMND_CASE

     1035    19401    2      CASE(JOBCMND);

     1036    19402    2        IF B$JIT.MODE = %M_BATCH# AND CMD_SOURCE = BATCHJCL

  19402  2 002315   000000 236100                    LDQ     0,,PR0
         2 002316   740000 376003                    ANQ     -16384,DU
         2 002317   040000 116003                    CMPQ    16384,DU
         2 002320   002330 601000 2                  TNZ     s:19405
         2 002321   200011 235100                    LDA     CMD_SOURCE,,AUTO
         2 002322   000002 115007                    CMPA    2,DL
         2 002323   002330 601000 2                  TNZ     s:19405

     1037    19403    2        THEN    /* Write heading line */
     1038    19404    2           CALL CPE$TIME(P$PCB);

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:171  
  19404  2 002324   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 002325   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 002326   000000 701000 xent               TSX1    CPE$TIME
         2 002327   000000 011000                    NOP     0

     1039    19405    2        CMD_PARSING = NULLCMND; /* parse and echo but ignore the cmnd */

  19405  2 002330   000051 235007                    LDA     41,DL
         2 002331   200004 755100                    STA     CMD_PARSING,,AUTO
         2 002332   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER

     1040    19406    2      CASE(QUES1CMND);

     1041    19407    2        CALL CXG$MOREMSG(SEG$2.GETCMD$->GET$CMD) WHENALTRETURN

  19407  2 002333   000000 471400 xsym               LDP1    SEG2$
         2 002334   100173 473500                    LDP3    123,,PR1
         2 002335   200462 453500                    STP3    FID_RES+1,,AUTO
         2 002336   200462 630500                    EPPR0   FID_RES+1,,AUTO
         2 002337   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 002340   000000 701000 xent               TSX1    CXG$MOREMSG
         2 002341   002343 702000 2                  TSX2    s:19409
         2 002342   002355 710000 2                  TRA     s:19416

     1042    19408    3        DO ;

     1043    19409    3           SEG$2.GETCMD$->GET$CMD.ERR_CODE = E_NO_MORE ;

  19409  2 002343   000000 470400 xsym               LDP0    SEG2$
         2 002344   000173 471500                    LDP1    123,,PR0
         2 002345   000107 236000 1                  LDQ     E_NO_MORE
         2 002346   100010 756100                    STQ     8,,PR1

     1044    19410    3           CALL CXG$ERRMSG(SEG$2.GETCMD$->GET$CMD) ;

  19410  2 002347   000173 471500                    LDP1    123,,PR0
         2 002350   200462 451500                    STP1    FID_RES+1,,AUTO
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:172  
         2 002351   200462 630500                    EPPR0   FID_RES+1,,AUTO
         2 002352   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 002353   000000 701000 xent               TSX1    CXG$ERRMSG
         2 002354   000000 011000                    NOP     0

     1045    19411    3           END ; /* Whenaltreturn Do */

     1046    19412        /*E*   ERROR:   CPA-E$NO_MORE
     1047    19413               MESSAGE: No messages available.
     1048    19414               MESSAGE1: Th Th Th That's all fffolks!
     1049    19415                                                                          */
     1050    19416    2        BLK$ -> P$B.CODE = PREV_CMND;

  19416  2 002355   200003 720100                    LXL0    PREV_CMND,,AUTO
         2 002356   200023 470500                    LDP0    BLK$,,AUTO
         2 002357   000000 440100                    SXL0    0,,PR0

     1051    19417    2        CMD_PARSING = PREV_CMND;

  19417  2 002360   200003 235100                    LDA     PREV_CMND,,AUTO
         2 002361   200004 755100                    STA     CMD_PARSING,,AUTO

     1052    19418    2        GOTO CHK_BREAK;

  19418  2 002362   004545 710000 2                  TRA     CHK_BREAK

     1053    19419    2      CASE(QUES2CMND);

     1054    19420    2        CALL CXG$ALLMSG(SEG$2.GETCMD$->GET$CMD) WHENALTRETURN

  19420  2 002363   000000 471400 xsym               LDP1    SEG2$
         2 002364   100173 473500                    LDP3    123,,PR1
         2 002365   200462 453500                    STP3    FID_RES+1,,AUTO
         2 002366   200462 630500                    EPPR0   FID_RES+1,,AUTO
         2 002367   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 002370   000000 701000 xent               TSX1    CXG$ALLMSG
         2 002371   002373 702000 2                  TSX2    s:19422
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:173  
         2 002372   002405 710000 2                  TRA     s:19425

     1055    19421    3        DO ;

     1056    19422    3           SEG$2.GETCMD$->GET$CMD.ERR_CODE = E_NO_MORE ;

  19422  2 002373   000000 470400 xsym               LDP0    SEG2$
         2 002374   000173 471500                    LDP1    123,,PR0
         2 002375   000107 236000 1                  LDQ     E_NO_MORE
         2 002376   100010 756100                    STQ     8,,PR1

     1057    19423    3           CALL CXG$ERRMSG(SEG$2.GETCMD$->GET$CMD) ;

  19423  2 002377   000173 471500                    LDP1    123,,PR0
         2 002400   200462 451500                    STP1    FID_RES+1,,AUTO
         2 002401   200462 630500                    EPPR0   FID_RES+1,,AUTO
         2 002402   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 002403   000000 701000 xent               TSX1    CXG$ERRMSG
         2 002404   000000 011000                    NOP     0

     1058    19424    3           END ; /* Whenaltreturn Do */

     1059    19425    2        GOTO CHK_BREAK;

  19425  2 002405   004545 710000 2                  TRA     CHK_BREAK

     1060    19426    2      CASE (MINICMND,RUNITCMND);

     1061    19427        /*
     1062    19428             ***** The MINI command is a restricted command.
     1063    19429                   CPM$MINI determines if it may be used and
     1064    19430                   ALTRETURNS if not allowed. If not allowed then
     1065    19431                   it should be treated as a runitcmnd ...
     1066    19432        */
     1067    19433    2        IF CMD_PARSING = MINICMND

  19433  2 002406   000020 115007                    CMPA    16,DL
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:174  
         2 002407   002414 601000 2                  TNZ     E_MINI

     1068    19434    2        THEN
     1069    19435    3        DO;

     1070    19436    3           CALL CPM$MINI ALTRET(E_MINI);

  19436  2 002410   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 002411   000000 701000 xent               TSX1    CPM$MINI
         2 002412   002414 702000 2                  TSX2    E_MINI

     1071    19437    3           GOTO CMND_CASE;   /* echo but ignore the cmnd */

  19437  2 002413   003240 710000 2                  TRA     CMND_CASE

     1072    19438    3           END;
     1073    19439    2        ELSE   /* It's a rununit */
     1074    19440    3        DO;

     1075    19441    3   E_MINI:
     1076    19442    3           SEG$2.FLAGS.RUNITCMD = %YES#;

  19442  2 002414   000000 470400 xsym  E_MINI       LDP0    SEG2$
         2 002415   001000 236003                    LDQ     512,DU
         2 002416   000000 256100                    ORSQ    0,,PR0

     1077    19443    3           BLK$ -> P$B.CODE = RUNITCMND;

  19443  2 002417   000075 220003                    LDX0    61,DU
         2 002420   200023 471500                    LDP1    BLK$,,AUTO
         2 002421   100000 440100                    SXL0    0,,PR1

     1078    19444    3           CMD_PARSING = RUNITCMND;

  19444  2 002422   000075 235007                    LDA     61,DL
         2 002423   200004 755100                    STA     CMD_PARSING,,AUTO

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:175  
     1079    19445    3           TEMPBUF = SUBSTR(VBASE(XUG$PARAMS.LAST) -> CP$BUFF,0,

  19445  2 002424   200025 473500                    LDP3    XUG$,,AUTO
         2 002425   300005 474500                    LDP4    5,,PR3
         2 002426   300004 236100                    LDQ     4,,PR3
         2 002427   000020 772000                    QRL     16
         2 002430   000001 621006                    EAX1    1,QL
         2 002431   040100 100540                    MLR     fill='040'O
         2 002432   400000 000011                    ADSC9   0,,PR4                   cn=0,n=*X1
         2 002433   200030 000400                    ADSC9   TEMPBUF,,AUTO            cn=0,n=256

     1080    19446    3             VBOUND(XUG$PARAMS.LAST)+1) ;             /* First rec */
     1081    19447    3           K = P$PCB.NCHARS;

  19447  2 002434   200024 475500                    LDP5    P$PCB$,,AUTO
         2 002435   500011 235100                    LDA     9,,PR5
         2 002436   200007 755100                    STA     K,,AUTO

     1082    19448    3           END;

  19448  2 002437   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER

     1083    19449    2      CASE(ADJUSTCMND, ERASECMND, HOLDCMND, LDEVCMND, PRINTCMND, RESETCMND,

     1084    19450    2             SETCMND, TERMINALCMND, UNHOLDCMND) ;
     1085    19451    2        BLK$ = SEG$2.GETCMD$->GET$CMD.OUT$ ;

  19451  2 002440   000000 471400 xsym               LDP1    SEG2$
         2 002441   100173 473500                    LDP3    123,,PR1
         2 002442   300001 236100                    LDQ     1,,PR3
         2 002443   200023 756100                    STQ     BLK$,,AUTO

     1086    19452    2        CMD_PARSING = BLK$ -> P$B.CODE;

  19452  2 002444   200023 474500                    LDP4    BLK$,,AUTO
         2 002445   400000 236100                    LDQ     0,,PR4
         2 002446   777777 376007                    ANQ     -1,DL
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:176  
         2 002447   200004 756100                    STQ     CMD_PARSING,,AUTO

     1087    19453    2        CPSL_PARAM = %NO# ;

  19453  2 002450   000100 100400                    MLR     fill='000'O
         2 002451   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         2 002452   200340 000024                    ADSC9   CPSL_PARAM,,AUTO         cn=0,n=20

     1088    19454    2        CPSL_PARAM.FLAGS.INHIBIT_ERRMSG = SEG$2.FLAGS.SKIP_ERRS ;

  19454  2 002453   100000 236100                    LDQ     0,,PR1
         2 002454   000005 736000                    QLS     5
         2 002455   200341 676100                    ERQ     CPSL_PARAM+1,,AUTO
         2 002456   200000 376003                    ANQ     65536,DU
         2 002457   200341 656100                    ERSQ    CPSL_PARAM+1,,AUTO

     1089    19455    2        CPSL_PARAM.WORK_DCB# = M$IBEX1_NUM ;

  19455  2 002460   000000 235000 xsym               LDA     M$IBEX1_NUM
         2 002461   200340 755100                    STA     CPSL_PARAM,,AUTO

     1090    19456    2        IF SEG$2.GETCMD$->GET$CMD.RCVD_PROMPT#

  19456  2 002462   100173 473500                    LDP3    123,,PR1
         2 002463   300006 236100                    LDQ     6,,PR3
         2 002464   020000 316003                    CANQ    8192,DU
         2 002465   002511 600000 2                  TZE     s:19462

     1091    19457    3        THEN DO; /* Need to put the prompt back in for CXC$COMMAND */

     1092    19458    3           CALL CONCAT(SEG$2.CPBUFF$->CP$BUFF, '!', SUBSTR(VBASE(XUG$PARAMS.LAST)

  19458  2 002466   100171 475500                    LDP5    121,,PR1
         2 002467   200025 476500                    LDP6    XUG$,,AUTO
         2 002470   600005 477500                    LDP7    5,,PR6
         2 002471   600004 236100                    LDQ     4,,PR6
         2 002472   000020 772000                    QRL     16
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:177  
         2 002473   000001 620006                    EAX0    1,QL
         2 002474   041000 236003                    LDQ     16896,DU
         2 002475   500000 756100                    STQ     0,,PR5
         2 002476   040100 100540                    MLR     fill='040'O
         2 002477   700000 000010                    ADSC9   0,,PR7                   cn=0,n=*X0
         2 002500   500000 200377                    ADSC9   0,,PR5                   cn=1,n=255

     1093    19459    3             ->CP$BUFF,0,VBOUND(XUG$PARAMS.LAST)+1)) ;
     1094    19460    3           VBOUND(XUG$PARAMS.LAST) = VBOUND(XUG$PARAMS.LAST)+1;

  19460  2 002501   200025 470500                    LDP0    XUG$,,AUTO
         2 002502   000004 236100                    LDQ     4,,PR0
         2 002503   000020 772000                    QRL     16
         2 002504   000001 036007                    ADLQ    1,DL
         2 002505   000020 736000                    QLS     16
         2 002506   000004 676100                    ERQ     4,,PR0
         2 002507   000034 376000 xsym               ANQ     B_VECTNIL+28
         2 002510   000004 656100                    ERSQ    4,,PR0

     1095    19461    3           END;

     1096    19462    2        SEG$2.GETCMD$->GET$CMD.TEXT_ = XUG$PARAMS.LAST ;

  19462  2 002511   000000 470400 xsym               LDP0    SEG2$
         2 002512   000173 471500                    LDP1    123,,PR0
         2 002513   200025 473500                    LDP3    XUG$,,AUTO
         2 002514   300004 237100                    LDAQ    4,,PR3
         2 002515   100034 757100                    STAQ    28,,PR1

     1097    19463    2        VBASE(SEG$2.GETCMD$->GET$CMD.TEXT_) = SEG$2.CPBUFF$ ;

  19463  2 002516   000173 471500                    LDP1    123,,PR0
         2 002517   000171 236100                    LDQ     121,,PR0
         2 002520   100035 756100                    STQ     29,,PR1

     1098    19464    2        SEG$2.GETCMD$->GET$CMD.CONTINUE_OK# = %YES# ;

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:178  
  19464  2 002521   000173 471500                    LDP1    123,,PR0
         2 002522   040000 236003                    LDQ     16384,DU
         2 002523   100006 256100                    ORSQ    6,,PR1

     1099    19465    2        IF CMD_SOURCE = BATCHJCL OR (CMD_SOURCE = XEQFILE AND

  19465  2 002524   200011 235100                    LDA     CMD_SOURCE,,AUTO
         2 002525   000002 115007                    CMPA    2,DL
         2 002526   002535 600000 2                  TZE     s:19468
         2 002527   000003 115007                    CMPA    3,DL
         2 002530   002546 601000 2                  TNZ     s:19474
         2 002531   000000 471400 xsym               LDP1    B$JIT$
         2 002532   100143 236100                    LDQ     99,,PR1
         2 002533   000012 376000 xsym               ANQ     B_VECTNIL+10
         2 002534   002546 600000 2                  TZE     s:19474

     1100    19466    2          (B$JIT.CPFLAGS1 & %CP_ECHO#))
     1101    19467    2        THEN
     1102    19468    2           IF SEG$2.FLAGS.SKIP_ECHO

  19468  2 002535   000000 236100                    LDQ     0,,PR0
         2 002536   040000 316003                    CANQ    16384,DU
         2 002537   002543 600000 2                  TZE     s:19472

     1103    19469    2           THEN
     1104    19470    2              CPSL_PARAM.FLAGS.ECHO = %DONT_ECHO ;

  19470  2 002540   000000 236003                    LDQ     0,DU
         2 002541   200341 552104                    STBQ    CPSL_PARAM+1,'04'O,AUTO
         2 002542   002550 710000 2                  TRA     s:19475

     1105    19471    2           ELSE
     1106    19472    2              CPSL_PARAM.FLAGS.ECHO = %ECHO_IT ;

  19472  2 002543   000002 236007                    LDQ     2,DL
         2 002544   200341 552104                    STBQ    CPSL_PARAM+1,'04'O,AUTO
         2 002545   002550 710000 2                  TRA     s:19475
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:179  

     1107    19473    2        ELSE
     1108    19474    2           CPSL_PARAM.FLAGS.ECHO = %ECHO_IF_ERROR ;

  19474  2 002546   000001 236007                    LDQ     1,DL
         2 002547   200341 552104                    STBQ    CPSL_PARAM+1,'04'O,AUTO

     1109    19475    2        IF CMD_SOURCE = XEQFILE

  19475  2 002550   000003 115007                    CMPA    3,DL
         2 002551   002564 601000 2                  TNZ     s:19479

     1110    19476    2        THEN
     1111    19477    2           CALL CPF$SET_PROMPT (SEG$2.GETCMD$->GET$CMD.RPROMPT_, PRMT_R);

  19477  2 002552   000173 471500                    LDP1    123,,PR0
         2 002553   000051 236000 3                  LDQ     41
         2 002554   200463 756100                    STQ     FID_RES+2,,AUTO
         2 002555   100027 634500                    EPPR4   23,,PR1
         2 002556   200462 454500                    STP4    FID_RES+1,,AUTO
         2 002557   200462 630500                    EPPR0   FID_RES+1,,AUTO
         2 002560   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 002561   000000 701000 xent               TSX1    CPF$SET_PROMPT
         2 002562   000000 011000                    NOP     0
         2 002563   002570 710000 2                  TRA     s:19480

     1112    19478    2        ELSE
     1113    19479    2           SEG$2.GETCMD$->GET$CMD.RPROMPT_ = VECTOR(NIL) ;

  19479  2 002564   000173 471500                    LDP1    123,,PR0
         2 002565   000052 237000 3                  LDAQ    42
         2 002566   100027 755100                    STA     23,,PR1
         2 002567   100030 756100                    STQ     24,,PR1

     1114    19480    2        CALL CXC$COMMAND(SEG$2.GETCMD$->GET$CMD,CPSL_PARAM) WHENALTRETURN

  19480  2 002570   000000 470400 xsym               LDP0    SEG2$
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:180  
         2 002571   000173 471500                    LDP1    123,,PR0
         2 002572   200340 633500                    EPPR3   CPSL_PARAM,,AUTO
         2 002573   200463 453500                    STP3    FID_RES+2,,AUTO
         2 002574   200462 451500                    STP1    FID_RES+1,,AUTO
         2 002575   200462 630500                    EPPR0   FID_RES+1,,AUTO
         2 002576   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 002577   000000 701000 xent               TSX1    CXC$COMMAND
         2 002600   002602 702000 2                  TSX2    s:19482
         2 002601   002631 710000 2                  TRA     s:19494

     1115    19481    3        DO ;

     1116    19482    3           B$JIT.USRERR = %NO# ;

  19482  2 002602   000000 470400 xsym               LDP0    B$JIT$
         2 002603   000144 450100                    STZ     100,,PR0

     1117    19483    3           SEG$2.GETCMD$->GET$CMD.TEXT_ = VECTOR(NIL) ;

  19483  2 002604   000000 471400 xsym               LDP1    SEG2$
         2 002605   100173 473500                    LDP3    123,,PR1
         2 002606   000052 237000 3                  LDAQ    42
         2 002607   300034 757100                    STAQ    28,,PR3

     1118    19484    3           IF CPSL_PARAM.FLAGS.REPORTED_TO_USER

  19484  2 002610   200341 236100                    LDQ     CPSL_PARAM+1,,AUTO
         2 002611   100000 316003                    CANQ    32768,DU
         2 002612   005557 601000 2                  TNZ     ERRXIT

     1119    19485    3           THEN
     1120    19486    3              GOTO ERRXIT ; /* echo not required */
     1121    19487    3           ELSE
     1122    19488    4           DO ;

     1123    19489    4              CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF),

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:181  
  19489  2 002613   000000 236000 xsym               LDQ     SEG2$
         2 002614   000003 036003                    ADLQ    3,DU
         2 002615   200462 756100                    STQ     FID_RES+1,,AUTO
         2 002616   200342 633500                    EPPR3   CPSL_PARAM+2,,AUTO
         2 002617   200465 453500                    STP3    FID_RES+4,,AUTO
         2 002620   200343 634500                    EPPR4   CPSL_PARAM+3,,AUTO
         2 002621   200464 454500                    STP4    FID_RES+3,,AUTO
         2 002622   200462 635500                    EPPR5   FID_RES+1,,AUTO
         2 002623   200463 455500                    STP5    FID_RES+2,,AUTO
         2 002624   200463 630500                    EPPR0   FID_RES+2,,AUTO
         2 002625   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 002626   000000 701000 xent               TSX1    CXP$POSTERR
         2 002627   000000 011000                    NOP     0

     1124    19490    4                CPSL_PARAM.ERR_CPOS,CPSL_PARAM.ERRCODE);
     1125    19491    4              GOTO CONTEXT_ERR ;

  19491  2 002630   005444 710000 2                  TRA     CONTEXT_ERR

     1126    19492    4              END ;
     1127    19493    3           END ; /* Whenaltreturn Do */
     1128    19494    2        SEG$2.GETCMD$->GET$CMD.TEXT_ = VECTOR(NIL) ;

  19494  2 002631   000000 470400 xsym               LDP0    SEG2$
         2 002632   000173 471500                    LDP1    123,,PR0
         2 002633   000052 237000 3                  LDAQ    42
         2 002634   100034 757100                    STAQ    28,,PR1

     1129    19495    2        GOTO CHK_BREAK ;

  19495  2 002635   004545 710000 2                  TRA     CHK_BREAK

     1130    19496    2      CASE(DITERMINALCMND);

     1131    19497    2        CALL CPA$ECHOCC(CMD_SOURCE,%NO#) ;

  19497  2 002636   000010 236000 3                  LDQ     8
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:182  
         2 002637   200463 756100                    STQ     FID_RES+2,,AUTO
         2 002640   200011 631500                    EPPR1   CMD_SOURCE,,AUTO
         2 002641   200462 451500                    STP1    FID_RES+1,,AUTO
         2 002642   200462 630500                    EPPR0   FID_RES+1,,AUTO
         2 002643   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 002644   000000 701000 xent               TSX1    CPA$ECHOCC
         2 002645   000000 011000                    NOP     0

     1132    19498    2        CALL CPF$TERMINAL(P$PCB) ALTRET(ERRTRN);

  19498  2 002646   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 002647   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 002650   000000 701000 xent               TSX1    CPF$TERMINAL
         2 002651   005726 702000 2                  TSX2    ERRTRN

     1133    19499    2        GOTO CHK_BREAK ;

  19499  2 002652   004545 710000 2                  TRA     CHK_BREAK

     1134    19500    2      CASE(WHENCMND,WHENLEVEL0CMND,WHENSHORTCMND) ;

     1135    19501    2        CALL CPA$ECHOCC(CMD_SOURCE,%NO#) ;

  19501  2 002653   000010 236000 3                  LDQ     8
         2 002654   200463 756100                    STQ     FID_RES+2,,AUTO
         2 002655   200011 631500                    EPPR1   CMD_SOURCE,,AUTO
         2 002656   200462 451500                    STP1    FID_RES+1,,AUTO
         2 002657   200462 630500                    EPPR0   FID_RES+1,,AUTO
         2 002660   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 002661   000000 701000 xent               TSX1    CPA$ECHOCC
         2 002662   000000 011000                    NOP     0

     1136    19502    2        CALL CPG$WHEN(P$PCB) ALTRET (ERRTRN) ;

  19502  2 002663   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 002664   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 002665   000000 701000 xent               TSX1    CPG$WHEN
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:183  
         2 002666   005726 702000 2                  TSX2    ERRTRN

     1137    19503    2        GOTO CHK_BREAK ;

  19503  2 002667   004545 710000 2                  TRA     CHK_BREAK

     1138    19504        /**/
     1139    19505    2      END; /* do case ... end */

     1140    19506        /*
     1141    19507             ***** Before checking for syntax and context errors
     1142    19508                   it is necessary to throw away any old errors...
     1143    19509        */
     1144    19510    1   CALL_SYNTAX_CHECKER:
     1145    19511    1     ADDR(SEG$2.ERRBUF) -> ERR$BLK.FIRST = 0;

  19511  2 002670   000000 470400 xsym  CALL_SYNTAX* LDP0    SEG2$
         2 002671   000004 450100                    STZ     4,,PR0

     1146    19512    1     ADDR(SEG$2.ERRBUF) -> ERR$BLK.NEXT = 0;

  19512  2 002672   000005 450100                    STZ     5,,PR0

     1147    19513    1     SEG$2.GETCMD$->GET$CMD.SFROUTINE$ = ENTADDR(CPD$SYNTRY) ;

  19513  2 002673   000173 471500                    LDP1    123,,PR0
         2 002674   000000 636000 xent               EAQ     CPD$SYNTRY
         2 002675   100033 756100                    STQ     27,,PR1

     1148    19514
     1149    19515    1     CALL CPD$SYNTAX (SEG$2.GETCMD$->GET$CMD) WHENALTRETURN

  19515  2 002676   000173 471500                    LDP1    123,,PR0
         2 002677   200462 451500                    STP1    FID_RES+1,,AUTO
         2 002700   200462 630500                    EPPR0   FID_RES+1,,AUTO
         2 002701   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 002702   000000 701000 xent               TSX1    CPD$SYNTAX
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:184  
         2 002703   002705 702000 2                  TSX2    s:19517
         2 002704   002715 710000 2                  TRA     s:19525

     1150    19516    2     DO;

     1151    19517    2        IF CMD_PARSING = NULLCMND THEN

  19517  2 002705   200004 235100                    LDA     CMD_PARSING,,AUTO
         2 002706   000051 115007                    CMPA    41,DL
         2 002707   002714 601000 2                  TNZ     s:19522

     1152    19518    3        DO;

     1153    19519    3           SEG$2.FLAGS.SKIP_ECHO = %NO#;

  19519  2 002710   000000 470400 xsym               LDP0    SEG2$
         2 002711   000017 236000 3                  LDQ     15
         2 002712   000000 356100                    ANSQ    0,,PR0

     1154    19520    3           GOTO CHK_BREAK;

  19520  2 002713   004545 710000 2                  TRA     CHK_BREAK

     1155    19521    3           END;
     1156    19522    2        GOTO SYNTAX_ERR;

  19522  2 002714   005266 710000 2                  TRA     SYNTAX_ERR

     1157    19523    2        END;
     1158    19524        /**/
     1159    19525    1     IF SEG$2.FLAGS.RUNITCMD AND SEG$2.FLAGS.CONTINUED

  19525  2 002715   000000 470400 xsym               LDP0    SEG2$
         2 002716   000000 430100                    FSZN    0,,PR0
         2 002717   002743 605000 2                  TPL     s:19533
         2 002720   000000 236100                    LDQ     0,,PR0
         2 002721   002000 316003                    CANQ    1024,DU
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:185  
         2 002722   002743 600000 2                  TZE     s:19533

     1160    19526    1     THEN
     1161    19527    1        CALL CPA$WR_CONTFILE (SEG$2.GETCMD$->GET$CMD, %NO#)

  19527  2 002723   000173 471500                    LDP1    123,,PR0
         2 002724   000010 236000 3                  LDQ     8
         2 002725   200463 756100                    STQ     FID_RES+2,,AUTO
         2 002726   200462 451500                    STP1    FID_RES+1,,AUTO
         2 002727   200462 630500                    EPPR0   FID_RES+1,,AUTO
         2 002730   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 002731   000000 701000 xent               TSX1    CPA$WR_CONTFILE
         2 002732   002734 702000 2                  TSX2    s:19530
         2 002733   002743 710000 2                  TRA     s:19533

     1162    19528    1        WHENALTRETURN
     1163    19529    2        DO ;

     1164    19530    2           SEG$2.GETCMD$->GET$CMD.ERR# = B$TCB.ALT$ -> B$ALT.ERR ;

  19530  2 002734   000000 470400 xsym               LDP0    SEG2$
         2 002735   000173 471500                    LDP1    123,,PR0
         2 002736   000000 473400 xsym               LDP3    B$TCB$
         2 002737   300000 474500                    LDP4    0,,PR3
         2 002740   400102 236100                    LDQ     66,,PR4
         2 002741   100001 756100                    STQ     1,,PR1

     1165    19531    2           GOTO E_READCC ;

  19531  2 002742   004717 710000 2                  TRA     E_READCC

     1166    19532    2           END ; /* Whenaltreturn Do */
     1167    19533    1     BLK$ = SEG$2.GETCMD$->GET$CMD.OUT$; /* Final Parse output ptr */

  19533  2 002743   000000 470400 xsym               LDP0    SEG2$
         2 002744   000173 471500                    LDP1    123,,PR0
         2 002745   100001 236100                    LDQ     1,,PR1
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:186  
         2 002746   200023 756100                    STQ     BLK$,,AUTO

     1168    19534        /*
     1169    19535             ***** If this is only being parsed to ignore it, ignore any errors too.
     1170    19536        */
     1171    19537    1     IF CMD_PARSING = NULLCMND

  19537  2 002747   200004 235100                    LDA     CMD_PARSING,,AUTO
         2 002750   000051 115007                    CMPA    41,DL
         2 002751   003075 601000 2                  TNZ     s:19557

     1172    19538    1     THEN
     1173    19539    2     DO;

     1174    19540    2        IF P$PCB.OUT$->P$B.CODE ~= IFCMND

  19540  2 002752   200024 473500                    LDP3    P$PCB$,,AUTO
         2 002753   300003 474500                    LDP4    3,,PR3
         2 002754   400000 720100                    LXL0    0,,PR4
         2 002755   000035 100003                    CMPX0   29,DU
         2 002756   003240 601000 2                  TNZ     CMND_CASE

     1175    19541    2        THEN /* But keep parsing IF command objects until they run out */
     1176    19542    2           GOTO CMND_CASE;
     1177    19543    2        P$PCB.OUT$ = P$PCB.OUT$->P$B.SUBLK$(1)->P$B.SUBLK$(0);

  19543  2 002757   400004 475500                    LDP5    4,,PR4
         2 002760   500003 236100                    LDQ     3,,PR5
         2 002761   300003 756100                    STQ     3,,PR3

     1178    19544    2        SUBSTR(P$PCB.TEXT$->CP$BUFF,0,P$PCB.OUT$->P$B.CPOS) = ' ';

  19544  2 002762   300000 471500                    LDP1    0,,PR3
         2 002763   300003 474500                    LDP4    3,,PR3
         2 002764   400002 720100                    LXL0    2,,PR4
         2 002765   040140 100400                    MLR     fill='040'O
         2 002766   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:187  
         2 002767   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0

     1179    19545    2        P$PCB.CONTINUE = '1'B;

  19545  2 002770   200000 236007                    LDQ     65536,DL
         2 002771   300005 256100                    ORSQ    5,,PR3

     1180    19546    3        DO CASE (P$PCB.OUT$->P$B.CODE);

  19546  2 002772   300003 471500                    LDP1    3,,PR3
         2 002773   100000 720100                    LXL0    0,,PR1
         2 002774   000074 100003                    CMPX0   60,DU
         2 002775   002777 602010 2                  TNC     s:19546+5,X0
         2 002776   003074 710000 2                  TRA     s:19550
         2 002777   003074 710000 2                  TRA     s:19550
         2 003000   003074 710000 2                  TRA     s:19550
         2 003001   003073 710000 2                  TRA     s:19548
         2 003002   003074 710000 2                  TRA     s:19550
         2 003003   003074 710000 2                  TRA     s:19550
         2 003004   003074 710000 2                  TRA     s:19550
         2 003005   003074 710000 2                  TRA     s:19550
         2 003006   003074 710000 2                  TRA     s:19550
         2 003007   003074 710000 2                  TRA     s:19550
         2 003010   003074 710000 2                  TRA     s:19550
         2 003011   003074 710000 2                  TRA     s:19550
         2 003012   003074 710000 2                  TRA     s:19550
         2 003013   003074 710000 2                  TRA     s:19550
         2 003014   003074 710000 2                  TRA     s:19550
         2 003015   003074 710000 2                  TRA     s:19550
         2 003016   003074 710000 2                  TRA     s:19550
         2 003017   003074 710000 2                  TRA     s:19550
         2 003020   003074 710000 2                  TRA     s:19550
         2 003021   003074 710000 2                  TRA     s:19550
         2 003022   003074 710000 2                  TRA     s:19550
         2 003023   003074 710000 2                  TRA     s:19550
         2 003024   003074 710000 2                  TRA     s:19550
         2 003025   003074 710000 2                  TRA     s:19550
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:188  
         2 003026   003074 710000 2                  TRA     s:19550
         2 003027   003074 710000 2                  TRA     s:19550
         2 003030   003074 710000 2                  TRA     s:19550
         2 003031   003074 710000 2                  TRA     s:19550
         2 003032   003074 710000 2                  TRA     s:19550
         2 003033   003074 710000 2                  TRA     s:19550
         2 003034   003074 710000 2                  TRA     s:19550
         2 003035   003074 710000 2                  TRA     s:19550
         2 003036   003074 710000 2                  TRA     s:19550
         2 003037   003074 710000 2                  TRA     s:19550
         2 003040   003074 710000 2                  TRA     s:19550
         2 003041   003074 710000 2                  TRA     s:19550
         2 003042   003073 710000 2                  TRA     s:19548
         2 003043   003074 710000 2                  TRA     s:19550
         2 003044   003074 710000 2                  TRA     s:19550
         2 003045   003074 710000 2                  TRA     s:19550
         2 003046   003074 710000 2                  TRA     s:19550
         2 003047   003074 710000 2                  TRA     s:19550
         2 003050   003074 710000 2                  TRA     s:19550
         2 003051   003073 710000 2                  TRA     s:19548
         2 003052   003074 710000 2                  TRA     s:19550
         2 003053   003074 710000 2                  TRA     s:19550
         2 003054   003074 710000 2                  TRA     s:19550
         2 003055   003074 710000 2                  TRA     s:19550
         2 003056   003074 710000 2                  TRA     s:19550
         2 003057   003074 710000 2                  TRA     s:19550
         2 003060   003074 710000 2                  TRA     s:19550
         2 003061   003074 710000 2                  TRA     s:19550
         2 003062   003074 710000 2                  TRA     s:19550
         2 003063   003074 710000 2                  TRA     s:19550
         2 003064   003074 710000 2                  TRA     s:19550
         2 003065   003074 710000 2                  TRA     s:19550
         2 003066   003074 710000 2                  TRA     s:19550
         2 003067   003073 710000 2                  TRA     s:19548
         2 003070   003074 710000 2                  TRA     s:19550
         2 003071   003074 710000 2                  TRA     s:19550
         2 003072   003073 710000 2                  TRA     s:19548
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:189  

     1181    19547    3         CASE (LIMITCMND,ORESCMND,ACQUIRECMND,RELEASECMND,RESOURCECMND);

     1182    19548    3           GOTO IGNORE_RES;

  19548  2 003073   002234 710000 2                  TRA     IGNORE_RES

     1183    19549    3         END;

     1184    19550    2        GOTO CALL_SYNTAX_CHECKER;

  19550  2 003074   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER

     1185    19551    2        END;
     1186    19552        /*
     1187    19553             ***** If this command is a RUN UNIT call then don't
     1188    19554                   worry about SYNTAX/CONTEXT errors. It is a
     1189    19555                   non-standard syntax ...
     1190    19556        */
     1191    19557    1     IF ADDR(SEG$2.ERRBUF) -> ERR$BLK.FIRST ~= 0

  19557  2 003075   000004 235100                    LDA     4,,PR0
         2 003076   003113 600000 2                  TZE     s:19571

     1192    19558    1     THEN
     1193    19559    2     DO;   /* Some CONTEXT errors found */

     1194    19560    2        IF SEG$2.FLAGS.RUNITCMD

  19560  2 003077   000000 430100                    FSZN    0,,PR0
         2 003100   005444 605000 2                  TPL     CONTEXT_ERR

     1195    19561    2        THEN
     1196    19562    3        DO;   /* Make into NON-STANDARD syntax */

     1197    19563    3           B$JIT.PRFLAGS.NSSYNTAX = %YES#;

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:190  
  19563  2 003101   000000 473400 xsym               LDP3    B$JIT$
         2 003102   002000 236003                    LDQ     1024,DU
         2 003103   300030 256100                    ORSQ    24,,PR3

     1198    19564    3           P$PCB.OUT$ -> P$B.NSUBLKS = 1;   /* Only RUNUNIT name */

  19564  2 003104   200024 471500                    LDP1    P$PCB$,,AUTO
         2 003105   100003 474500                    LDP4    3,,PR1
         2 003106   000001 220003                    LDX0    1,DU
         2 003107   400001 740100                    STX0    1,,PR4

     1199    19565    3           ADDR(SEG$2.ERRBUF) -> ERR$BLK.FIRST = 0 ;

  19565  2 003110   000004 450100                    STZ     4,,PR0

     1200    19566    3           ADDR(SEG$2.ERRBUF) -> ERR$BLK.NEXT = 0 ;

  19566  2 003111   000005 450100                    STZ     5,,PR0

     1201    19567    3           END;

  19567  2 003112   003113 710000 2                  TRA     s:19571

     1202    19568    2        ELSE  /* Point out error of their ways */
     1203    19569    2           GOTO CONTEXT_ERR;
     1204    19570    2        END;
     1205    19571    1     CMD_PARSING = BLK$ -> P$B.CODE;

  19571  2 003113   200023 471500                    LDP1    BLK$,,AUTO
         2 003114   100000 236100                    LDQ     0,,PR1
         2 003115   777777 376007                    ANQ     -1,DL
         2 003116   200004 756100                    STQ     CMD_PARSING,,AUTO

     1206    19572        /*
     1207    19573             ***** Only rununit type commands may be started under a
     1208    19574                   debugger. The SKIPABORT flag in CPFLAGS1 must be reset ...
     1209    19575        */
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:191  
     1210    19576    2     DO CASE(CMD_PARSING);

  19576  2 003117   000025 136007                    SBLQ    21,DL
         2 003120   000106 116007                    CMPQ    70,DL
         2 003121   003123 602006 2                  TNC     s:19576+4,QL
         2 003122   003235 710000 2                  TRA     s:19586
         2 003123   003231 710000 2                  TRA     s:19584
         2 003124   003231 710000 2                  TRA     s:19584
         2 003125   003235 710000 2                  TRA     s:19586
         2 003126   003235 710000 2                  TRA     s:19586
         2 003127   003235 710000 2                  TRA     s:19586
         2 003130   003235 710000 2                  TRA     s:19586
         2 003131   003235 710000 2                  TRA     s:19586
         2 003132   003235 710000 2                  TRA     s:19586
         2 003133   003235 710000 2                  TRA     s:19586
         2 003134   003235 710000 2                  TRA     s:19586
         2 003135   003235 710000 2                  TRA     s:19586
         2 003136   003235 710000 2                  TRA     s:19586
         2 003137   003235 710000 2                  TRA     s:19586
         2 003140   003235 710000 2                  TRA     s:19586
         2 003141   003235 710000 2                  TRA     s:19586
         2 003142   003231 710000 2                  TRA     s:19584
         2 003143   003235 710000 2                  TRA     s:19586
         2 003144   003235 710000 2                  TRA     s:19586
         2 003145   003235 710000 2                  TRA     s:19586
         2 003146   003235 710000 2                  TRA     s:19586
         2 003147   003235 710000 2                  TRA     s:19586
         2 003150   003235 710000 2                  TRA     s:19586
         2 003151   003235 710000 2                  TRA     s:19586
         2 003152   003235 710000 2                  TRA     s:19586
         2 003153   003231 710000 2                  TRA     s:19584
         2 003154   003235 710000 2                  TRA     s:19586
         2 003155   003235 710000 2                  TRA     s:19586
         2 003156   003235 710000 2                  TRA     s:19586
         2 003157   003235 710000 2                  TRA     s:19586
         2 003160   003235 710000 2                  TRA     s:19586
         2 003161   003235 710000 2                  TRA     s:19586
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:192  
         2 003162   003235 710000 2                  TRA     s:19586
         2 003163   003235 710000 2                  TRA     s:19586
         2 003164   003235 710000 2                  TRA     s:19586
         2 003165   003235 710000 2                  TRA     s:19586
         2 003166   003235 710000 2                  TRA     s:19586
         2 003167   003235 710000 2                  TRA     s:19586
         2 003170   003235 710000 2                  TRA     s:19586
         2 003171   003235 710000 2                  TRA     s:19586
         2 003172   003235 710000 2                  TRA     s:19586
         2 003173   003231 710000 2                  TRA     s:19584
         2 003174   003235 710000 2                  TRA     s:19586
         2 003175   003235 710000 2                  TRA     s:19586
         2 003176   003235 710000 2                  TRA     s:19586
         2 003177   003235 710000 2                  TRA     s:19586
         2 003200   003235 710000 2                  TRA     s:19586
         2 003201   003235 710000 2                  TRA     s:19586
         2 003202   003235 710000 2                  TRA     s:19586
         2 003203   003235 710000 2                  TRA     s:19586
         2 003204   003235 710000 2                  TRA     s:19586
         2 003205   003235 710000 2                  TRA     s:19586
         2 003206   003235 710000 2                  TRA     s:19586
         2 003207   003235 710000 2                  TRA     s:19586
         2 003210   003235 710000 2                  TRA     s:19586
         2 003211   003235 710000 2                  TRA     s:19586
         2 003212   003235 710000 2                  TRA     s:19586
         2 003213   003235 710000 2                  TRA     s:19586
         2 003214   003231 710000 2                  TRA     s:19584
         2 003215   003235 710000 2                  TRA     s:19586
         2 003216   003235 710000 2                  TRA     s:19586
         2 003217   003235 710000 2                  TRA     s:19586
         2 003220   003235 710000 2                  TRA     s:19586
         2 003221   003235 710000 2                  TRA     s:19586
         2 003222   003235 710000 2                  TRA     s:19586
         2 003223   003235 710000 2                  TRA     s:19586
         2 003224   003235 710000 2                  TRA     s:19586
         2 003225   003235 710000 2                  TRA     s:19586
         2 003226   003235 710000 2                  TRA     s:19586
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:193  
         2 003227   003235 710000 2                  TRA     s:19586
         2 003230   003231 710000 2                  TRA     s:19584

     1211    19577    2      CASE(RUNITCMND,

     1212    19578    2       PCLCMND,
     1213    19579    2       EDITCMND,
     1214    19580    2       SIXEDITCMND,
     1215    19581    2       EFTCMND,
     1216    19582    2       FEPLINKCMND,
     1217    19583    2       LINKCMND);
     1218    19584    2        B$JIT.CPFLAGS1.SKIPABORT = %NO#;

  19584  2 003231   000000 473400 xsym               LDP3    B$JIT$
         2 003232   000054 236000 3                  LDQ     44
         2 003233   300143 356100                    ANSQ    99,,PR3
         2 003234   003240 710000 2                  TRA     CMND_CASE

     1219    19585    2      CASE(ELSE);

     1220    19586    2        B$JIT.CPFLAGS1.DELTA = %NO#;

  19586  2 003235   000000 473400 xsym               LDP3    B$JIT$
         2 003236   000055 236000 3                  LDQ     45
         2 003237   300143 356100                    ANSQ    99,,PR3

     1221    19587    2      END;

     1222    19588                   %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:194  
     1223    19589    1   CMND_CASE:
     1224    19590        /*
     1225    19591             ***** BLANK any PASSWORDs....
     1226    19592        */
     1227    19593    1     CALL CXG$BLANK_PASSWORD(SEG$2.GETCMD$->GET$CMD, BLK$->P$B) ALTRET(E_READCC) ;

  19593  2 003240   000000 470400 xsym  CMND_CASE    LDP0    SEG2$
         2 003241   000173 471500                    LDP1    123,,PR0
         2 003242   200023 236100                    LDQ     BLK$,,AUTO
         2 003243   200463 756100                    STQ     FID_RES+2,,AUTO
         2 003244   200462 451500                    STP1    FID_RES+1,,AUTO
         2 003245   200462 630500                    EPPR0   FID_RES+1,,AUTO
         2 003246   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 003247   000000 701000 xent               TSX1    CXG$BLANK_PASSWORD
         2 003250   004717 702000 2                  TSX2    E_READCC

     1228    19594        /*
     1229    19595             ***** Echo the command...
     1230    19596        */
     1231    19597    1     CALL CPA$ECHOCC (CMD_SOURCE,%NO#); /* Echo thru M$LL */

  19597  2 003251   000010 236000 3                  LDQ     8
         2 003252   200463 756100                    STQ     FID_RES+2,,AUTO
         2 003253   200011 630500                    EPPR0   CMD_SOURCE,,AUTO
         2 003254   200462 450500                    STP0    FID_RES+1,,AUTO
         2 003255   200462 630500                    EPPR0   FID_RES+1,,AUTO
         2 003256   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 003257   000000 701000 xent               TSX1    CPA$ECHOCC
         2 003260   000000 011000                    NOP     0

     1232    19598        /*
     1233    19599             ***** If a BREAK or Y-c was hit,
     1234    19600                   then don't execut the command ...
     1235    19601        */
     1236    19602    1     IF B$JIT.CPFLAGS1.BRK

  19602  2 003261   000000 470400 xsym               LDP0    B$JIT$
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:195  
         2 003262   000143 236100                    LDQ     99,,PR0
         2 003263   000004 316007                    CANQ    4,DL
         2 003264   004545 601000 2                  TNZ     CHK_BREAK

     1237    19603    1     THEN
     1238    19604    1        GOTO CHK_BREAK;
     1239    19605        /*
     1240    19606             ***** reset B$JIT.USERERR ...
     1241    19607        */
     1242    19608        /**/
     1243    19609    1     IF CMD_PARSING ~= PMDCMND       /* PMD wants to repeat the errmsg */

  19609  2 003265   200004 235100                    LDA     CMD_PARSING,,AUTO
         2 003266   000057 115007                    CMPA    47,DL
         2 003267   003271 600000 2                  TZE     s:19616

     1244    19610    1     THEN
     1245    19611    1        B$JIT.USRERR = %NO# ;

  19611  2 003270   000144 450100                    STZ     100,,PR0

     1246    19612        /**/
     1247    19613        /*
     1248    19614             ***** Call the routine to handle this command...
     1249    19615        */
     1250    19616    2     DO CASE(CMD_PARSING);

  19616  2 003271   000133 115007                    CMPA    91,DL
         2 003272   003274 602005 2                  TNC     s:19616+3,AL
         2 003273   004542 710000 2                  TRA     s:19935
         2 003274   004542 710000 2                  TRA     s:19935
         2 003275   003427 710000 2                  TRA     s:19619
         2 003276   003434 710000 2                  TRA     s:19622
         2 003277   004542 710000 2                  TRA     s:19935
         2 003300   003441 710000 2                  TRA     s:19626
         2 003301   003446 710000 2                  TRA     s:19629
         2 003302   003453 710000 2                  TRA     s:19632
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:196  
         2 003303   003460 710000 2                  TRA     s:19638
         2 003304   003473 710000 2                  TRA     s:19644
         2 003305   003500 710000 2                  TRA     s:19647
         2 003306   004542 710000 2                  TRA     s:19935
         2 003307   003505 710000 2                  TRA     s:19650
         2 003310   003512 710000 2                  TRA     s:19653
         2 003311   003532 710000 2                  TRA     s:19662
         2 003312   003522 710000 2                  TRA     s:19657
         2 003313   004542 710000 2                  TRA     s:19935
         2 003314   004542 710000 2                  TRA     s:19935
         2 003315   003541 710000 2                  TRA     s:19666
         2 003316   003546 710000 2                  TRA     s:19669
         2 003317   003553 710000 2                  TRA     s:19672
         2 003320   003565 710000 2                  TRA     s:19678
         2 003321   003572 710000 2                  TRA     s:19681
         2 003322   003577 710000 2                  TRA     s:19684
         2 003323   004542 710000 2                  TRA     s:19935
         2 003324   003630 710000 2                  TRA     s:19699
         2 003325   003635 710000 2                  TRA     s:19702
         2 003326   003642 710000 2                  TRA     s:19705
         2 003327   003714 710000 2                  TRA     s:19737
         2 003330   003721 710000 2                  TRA     s:19740
         2 003331   003750 710000 2                  TRA     s:19749
         2 003332   004542 710000 2                  TRA     s:19935
         2 003333   004542 710000 2                  TRA     s:19935
         2 003334   004107 710000 2                  TRA     s:19766
         2 003335   004542 710000 2                  TRA     s:19935
         2 003336   004117 710000 2                  TRA     s:19770
         2 003337   004124 710000 2                  TRA     s:19773
         2 003340   004131 710000 2                  TRA     s:19776
         2 003341   004136 710000 2                  TRA     s:19779
         2 003342   004143 710000 2                  TRA     s:19782
         2 003343   004153 710000 2                  TRA     s:19786
         2 003344   004160 710000 2                  TRA     s:19789
         2 003345   004165 710000 2                  TRA     s:19792
         2 003346   004170 710000 2                  TRA     s:19795
         2 003347   004201 710000 2                  TRA     s:19801
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:197  
         2 003350   004206 710000 2                  TRA     s:19804
         2 003351   004213 710000 2                  TRA     s:19807
         2 003352   004220 710000 2                  TRA     s:19810
         2 003353   004225 710000 2                  TRA     s:19813
         2 003354   004542 710000 2                  TRA     s:19935
         2 003355   004244 710000 2                  TRA     s:19822
         2 003356   004251 710000 2                  TRA     s:19825
         2 003357   004256 710000 2                  TRA     s:19828
         2 003360   004270 710000 2                  TRA     s:19834
         2 003361   004542 710000 2                  TRA     s:19935
         2 003362   004542 710000 2                  TRA     s:19935
         2 003363   004275 710000 2                  TRA     s:19837
         2 003364   004364 710000 2                  TRA     s:19875
         2 003365   004371 710000 2                  TRA     s:19878
         2 003366   004542 710000 2                  TRA     s:19935
         2 003367   004542 710000 2                  TRA     s:19935
         2 003370   003532 710000 2                  TRA     s:19662
         2 003371   004476 710000 2                  TRA     s:19919
         2 003372   004376 710000 2                  TRA     s:19881
         2 003373   004542 710000 2                  TRA     s:19935
         2 003374   004403 710000 2                  TRA     s:19884
         2 003375   004415 710000 2                  TRA     s:19890
         2 003376   004422 710000 2                  TRA     s:19893
         2 003377   004427 710000 2                  TRA     s:19896
         2 003400   004434 710000 2                  TRA     s:19899
         2 003401   004542 710000 2                  TRA     s:19935
         2 003402   004446 710000 2                  TRA     s:19905
         2 003403   004453 710000 2                  TRA     s:19908
         2 003404   004441 710000 2                  TRA     s:19902
         2 003405   004460 710000 2                  TRA     s:19911
         2 003406   004467 710000 2                  TRA     s:19915
         2 003407   004542 710000 2                  TRA     s:19935
         2 003410   003560 710000 2                  TRA     s:19675
         2 003411   004263 710000 2                  TRA     s:19831
         2 003412   003623 710000 2                  TRA     s:19696
         2 003413   004542 710000 2                  TRA     s:19935
         2 003414   003611 710000 2                  TRA     s:19690
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:198  
         2 003415   004232 710000 2                  TRA     s:19816
         2 003416   004237 710000 2                  TRA     s:19819
         2 003417   004542 710000 2                  TRA     s:19935
         2 003420   004542 710000 2                  TRA     s:19935
         2 003421   003604 710000 2                  TRA     s:19687
         2 003422   004542 710000 2                  TRA     s:19935
         2 003423   004542 710000 2                  TRA     s:19935
         2 003424   003616 710000 2                  TRA     s:19693
         2 003425   004542 710000 2                  TRA     s:19935
         2 003426   004410 710000 2                  TRA     s:19887

     1251    19617        /**/
     1252    19618    2      CASE(ACCEPTCMND);

     1253    19619    2        CALL CPI$ACCEPT(P$PCB) ALTRET(ERRTRN);

  19619  2 003427   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 003430   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003431   000000 701000 xent               TSX1    CPI$ACCEPT
         2 003432   005726 702000 2                  TSX2    ERRTRN
         2 003433   004542 710000 2                  TRA     s:19935

     1254    19620        /**/
     1255    19621    2      CASE(ACQUIRECMND);

     1256    19622    2        CALL CPO$ACQUIRE(P$PCB) ALTRET(ERRTRN);

  19622  2 003434   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 003435   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003436   000000 701000 xent               TSX1    CPO$ACQUIRE
         2 003437   005726 702000 2                  TSX2    ERRTRN
         2 003440   004542 710000 2                  TRA     s:19935

     1257    19623        /**/
     1258    19624        /**/
     1259    19625    2      CASE(ATITLECMND);

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:199  
     1260    19626    2        CALL CPB$ATITLE(P$PCB)       ALTRET(ERRTRN);

  19626  2 003441   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 003442   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003443   000000 701000 xent               TSX1    CPB$ATITLE
         2 003444   005726 702000 2                  TSX2    ERRTRN
         2 003445   004542 710000 2                  TRA     s:19935

     1261    19627        /**/
     1262    19628    2      CASE(BACKUPCMND);

     1263    19629    2        CALL CPA$BACKUP(P$PCB) ALTRET(ERRTRN);

  19629  2 003446   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 003447   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003450   000000 701000 xent               TSX1    CPA$BACKUP
         2 003451   005726 702000 2                  TSX2    ERRTRN
         2 003452   004542 710000 2                  TRA     s:19935

     1264    19630        /**/
     1265    19631    2      CASE(BATCHCMND);

     1266    19632    2        CALL CPH$BATXEQ(P$PCB) ALTRET(ERRTRN);

  19632  2 003453   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 003454   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003455   000000 701000 xent               TSX1    CPH$BATXEQ
         2 003456   005726 702000 2                  TSX2    ERRTRN
         2 003457   004542 710000 2                  TRA     s:19935

     1267    19633        /**/
     1268    19634    2      CASE(BYECMND);

     1269    19635        /*
     1270    19636          ****     Reset usrrnst if not BATCH user so we only get 'OFF' on oc.
     1271    19637        */
     1272    19638    2        IF B$JIT.MODE ~= %M_BATCH#
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:200  

  19638  2 003460   000000 236100                    LDQ     0,,PR0
         2 003461   740000 376003                    ANQ     -16384,DU
         2 003462   040000 116003                    CMPQ    16384,DU
         2 003463   003466 600000 2                  TZE     s:19641

     1273    19639    2        THEN
     1274    19640    2           B$JIT.USRRNST = '0'B;

  19640  2 003464   000000 236003                    LDQ     0,DU
         2 003465   000145 552110                    STBQ    101,'10'O,PR0

     1275    19641    2        CALL CPA$BYE(P$PCB);

  19641  2 003466   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 003467   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003470   000000 701000 xent               TSX1    CPA$BYE
         2 003471   000000 011000                    NOP     0
         2 003472   004542 710000 2                  TRA     s:19935

     1276    19642        /**/
     1277    19643    2      CASE(CANCELCMND);

     1278    19644    2        CALL CPK$CANCEL(P$PCB) ALTRET(ERRTRN);

  19644  2 003473   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 003474   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003475   000000 701000 xent               TSX1    CPK$CANCEL
         2 003476   005726 702000 2                  TSX2    ERRTRN
         2 003477   004542 710000 2                  TRA     s:19935

     1279    19645        /**/
     1280    19646    2      CASE(CHECKCMND);

     1281    19647    2        CALL CPK$CHECK(P$PCB) ALTRET(ERRTRN);

  19647  2 003500   200024 630500                    EPPR0   P$PCB$,,AUTO
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:201  
         2 003501   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003502   000000 701000 xent               TSX1    CPK$CHECK
         2 003503   005726 702000 2                  TSX2    ERRTRN
         2 003504   004542 710000 2                  TRA     s:19935

     1282    19648        /**/
     1283    19649    2      CASE(COMMENTCMND);

     1284    19650    2        CALL CPE$COMMENT(P$PCB) ALTRET(ERRTRN);

  19650  2 003505   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 003506   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003507   000000 701000 xent               TSX1    CPE$COMMENT
         2 003510   005726 702000 2                  TSX2    ERRTRN
         2 003511   004542 710000 2                  TRA     s:19935

     1285    19651        /**/
     1286    19652    2      CASE(COUPLECMND);

     1287    19653    2        CALL CPC$UNIMPCMD;

  19653  2 003512   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 003513   000000 701000 xent               TSX1    CPC$UNIMPCMD
         2 003514   000000 011000                    NOP     0

     1288    19654    2        CALL CPB$COUPLE(P$PCB) ALTRET(ERRTRN);

  19654  2 003515   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 003516   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003517   000000 701000 xent               TSX1    CPB$COUPLE
         2 003520   005726 702000 2                  TSX2    ERRTRN
         2 003521   004542 710000 2                  TRA     s:19935

     1289    19655        /**/
     1290    19656    2      CASE(DECOUPLECMND);

     1291    19657    2        CALL CPC$UNIMPCMD;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:202  

  19657  2 003522   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 003523   000000 701000 xent               TSX1    CPC$UNIMPCMD
         2 003524   000000 011000                    NOP     0

     1292    19658    2        CALL CPB$DECOUPLE(P$PCB) ALTRET(ERRTRN);

  19658  2 003525   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 003526   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003527   000000 701000 xent               TSX1    CPB$DECOUPLE
         2 003530   005726 702000 2                  TSX2    ERRTRN
         2 003531   004542 710000 2                  TRA     s:19935

     1293    19659        /**/
     1294    19660    2      CASE(DEBUGCMND,

     1295    19661    2          RUMCMND);
     1296    19662    2        B$JIT.CPFLAGS1.YCGET = '0'B;

  19662  2 003532   000026 236000 3                  LDQ     22
         2 003533   000143 356100                    ANSQ    99,,PR0

     1297    19663    2        CALL CPA$DEBUG(P$PCB) ALTRET(ERRTRN);

  19663  2 003534   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 003535   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003536   000000 701000 xent               TSX1    CPA$DEBUG
         2 003537   005726 702000 2                  TSX2    ERRTRN
         2 003540   004542 710000 2                  TRA     s:19935

     1298    19664        /**/
     1299    19665    2      CASE(DIRECTORYCMND);

     1300    19666    2        CALL CPI$DIRECTORY(P$PCB) ALTRET(ERRTRN);

  19666  2 003541   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 003542   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:203  
         2 003543   000000 701000 xent               TSX1    CPI$DIRECTORY
         2 003544   005726 702000 2                  TSX2    ERRTRN
         2 003545   004542 710000 2                  TRA     s:19935

     1301    19667        /**/
     1302    19668    2      CASE(DISPLAYCMND);

     1303    19669    2        CALL CPE$DISPLAY(P$PCB) ALTRET(ERRTRN);

  19669  2 003546   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 003547   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003550   000000 701000 xent               TSX1    CPE$DISPLAY
         2 003551   005726 702000 2                  TSX2    ERRTRN
         2 003552   004542 710000 2                  TRA     s:19935

     1304    19670        /**/
     1305    19671    2      CASE(DONTCMND);

     1306    19672    2        CALL CPE$DONT(P$PCB) ALTRET(ERRTRN);

  19672  2 003553   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 003554   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003555   000000 701000 xent               TSX1    CPE$DONT
         2 003556   005726 702000 2                  TSX2    ERRTRN
         2 003557   004542 710000 2                  TRA     s:19935

     1307    19673        /**/
     1308    19674    2      CASE(DRIBBLECMND);

     1309    19675    2        CALL CPI$DRIBBLE(P$PCB) ALTRET(ERRTRN);

  19675  2 003560   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 003561   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003562   000000 701000 xent               TSX1    CPI$DRIBBLE
         2 003563   005726 702000 2                  TSX2    ERRTRN
         2 003564   004542 710000 2                  TRA     s:19935

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:204  
     1310    19676        /**/
     1311    19677    2      CASE(ECHOCMND);

     1312    19678    2        CALL CPE$ECHO(P$PCB);

  19678  2 003565   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 003566   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003567   000000 701000 xent               TSX1    CPE$ECHO
         2 003570   000000 011000                    NOP     0
         2 003571   004542 710000 2                  TRA     s:19935

     1313    19679        /**/
     1314    19680    2      CASE(EDITCMND);

     1315    19681    2        CALL CPA$EDIT(P$PCB) ALTRET(ERRTRN);

  19681  2 003572   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 003573   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003574   000000 701000 xent               TSX1    CPA$EDIT
         2 003575   005726 702000 2                  TSX2    ERRTRN
         2 003576   004542 710000 2                  TRA     s:19935

     1316    19682        /**/
     1317    19683    2      CASE(EFTCMND);

     1318    19684    2        CALL CPA$EFT(P$PCB) ALTRET(ERRTRN);

  19684  2 003577   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 003600   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003601   000000 701000 xent               TSX1    CPA$EFT
         2 003602   005726 702000 2                  TSX2    ERRTRN
         2 003603   004542 710000 2                  TRA     s:19935

     1319    19685        /**/
     1320    19686    2      CASE(EJECTCMND) ;

     1321    19687    2        CALL CPE$EJECT(P$PCB) ALTRET(ERRTRN);
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:205  

  19687  2 003604   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 003605   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003606   000000 701000 xent               TSX1    CPE$EJECT
         2 003607   005726 702000 2                  TSX2    ERRTRN
         2 003610   004542 710000 2                  TRA     s:19935

     1322    19688        /**/
     1323    19689    2      CASE(EXPOUNDCMND);

     1324    19690    2        CALL CPE$EXPOUND (P$PCB) ALTRET(ERRTRN) ;

  19690  2 003611   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 003612   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003613   000000 701000 xent               TSX1    CPE$EXPOUND
         2 003614   005726 702000 2                  TSX2    ERRTRN
         2 003615   004542 710000 2                  TRA     s:19935

     1325    19691        /**/
     1326    19692    2      CASE(EXITCMND);

     1327    19693    2        CALL CPA$EXIT(P$PCB) ALTRET(ERRTRN) ;

  19693  2 003616   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 003617   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003620   000000 701000 xent               TSX1    CPA$EXIT
         2 003621   005726 702000 2                  TSX2    ERRTRN
         2 003622   004542 710000 2                  TRA     s:19935

     1328    19694        /**/
     1329    19695    2      CASE(FEPLINKCMND);

     1330    19696    2        CALL CPA$FEPLINK(P$PCB) ALTRET(ERRTRN);

  19696  2 003623   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 003624   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003625   000000 701000 xent               TSX1    CPA$FEPLINK
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:206  
         2 003626   005726 702000 2                  TSX2    ERRTRN
         2 003627   004542 710000 2                  TRA     s:19935

     1331    19697        /**/
     1332    19698    2      CASE(GETCMND);

     1333    19699    2        CALL CPA$GET(P$PCB) ALTRET(ERRTRN);

  19699  2 003630   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 003631   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003632   000000 701000 xent               TSX1    CPA$GET
         2 003633   005726 702000 2                  TSX2    ERRTRN
         2 003634   004542 710000 2                  TRA     s:19935

     1334    19700        /**/
     1335    19701    2      CASE(GLOBALCMND);

     1336    19702    2        CALL CPH$GLOBAL(P$PCB) ALTRET(ERRTRN);

  19702  2 003635   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 003636   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003637   000000 701000 xent               TSX1    CPH$GLOBAL
         2 003640   005726 702000 2                  TSX2    ERRTRN
         2 003641   004542 710000 2                  TRA     s:19935

     1337    19703        /**/
     1338    19704    2      CASE(GOCMND);

     1339    19705    2        B$JIT.CPFLAGS1.YCGET = '0'B;

  19705  2 003642   000026 236000 3                  LDQ     22
         2 003643   000143 356100                    ANSQ    99,,PR0

     1340    19706    2        IF B$JIT.CPFLAGS1.YC OR B$JIT.CPFLAGS1.YCPMME

  19706  2 003644   000143 236100                    LDQ     99,,PR0
         2 003645   040000 316003                    CANQ    16384,DU
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:207  
         2 003646   003651 601000 2                  TNZ     s:19708
         2 003647   020000 316003                    CANQ    8192,DU
         2 003650   003655 600000 2                  TZE     s:19710

     1341    19707    2        THEN
     1342    19708    2           CALL CPA$GO(P$PCB) ALTRET(ERRTRN);

  19708  2 003651   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 003652   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003653   000000 701000 xent               TSX1    CPA$GO
         2 003654   005726 702000 2                  TSX2    ERRTRN

     1343    19709        /**/
     1344    19710    2        SEG$2.PROMPT_TYPE = PRMT_N;

  19710  2 003655   000001 235007                    LDA     1,DL
         2 003656   000000 470400 xsym               LDP0    SEG2$
         2 003657   000205 755100                    STA     133,,PR0

     1345    19711        /*
     1346    19712        *****   Re-connect the command-read fpt to the M$IBEX dcb, which should be
     1347    19713        *****   open to the command stream; if the user has interrupted a command
     1348    19714        *****   stream to get to this point, read the next command from it.  If he
     1349    19715        *****   thinks there is something to continue and there is not, give him the
     1350    19716        *****   appropriate error message.
     1351    19717        */
     1352    19718    2        SEG$2.GETCMD$->GET$CMD.INDCB# = M$IBEX_NUM;

  19718  2 003660   000173 471500                    LDP1    123,,PR0
         2 003661   000000 236000 xsym               LDQ     M$IBEX_NUM
         2 003662   100012 756100                    STQ     10,,PR1

     1353    19719    2        SEG$2.FLAGS.CMD_STR_INT = %NO#;

  19719  2 003663   000004 236000 3                  LDQ     4
         2 003664   000000 356100                    ANSQ    0,,PR0

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:208  
     1354    19720        /**/
     1355    19721    2        IF B$JIT.NEXTCC ~= %CC_FROMXEQ#

  19721  2 003665   000000 471400 xsym               LDP1    B$JIT$
         2 003666   100151 236100                    LDQ     105,,PR1
         2 003667   000777 376003                    ANQ     511,DU
         2 003670   000002 116003                    CMPQ    2,DU
         2 003671   003676 600000 2                  TZE     s:19725

     1356    19722
     1357    19723    2        THEN
     1358    19724    2           CALL CPC$WRITEMSGE (E_CONT);

  19724  2 003672   000056 630400 3                  EPPR0   46
         2 003673   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003674   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 003675   000000 011000                    NOP     0

     1359    19725    2        IF B$JIT.NEXTCC = %CC_FROMXEQ# AND SEG$2.FLAGS.CPBUFFULL_AT_CSINT

  19725  2 003676   000000 470400 xsym               LDP0    B$JIT$
         2 003677   000151 236100                    LDQ     105,,PR0
         2 003700   000777 376003                    ANQ     511,DU
         2 003701   000002 116003                    CMPQ    2,DU
         2 003702   004542 601000 2                  TNZ     s:19935
         2 003703   000000 471400 xsym               LDP1    SEG2$
         2 003704   100000 236100                    LDQ     0,,PR1
         2 003705   000040 316003                    CANQ    32,DU
         2 003706   004542 600000 2                  TZE     s:19935

     1360    19726    2        THEN
     1361    19727    3        DO ;

     1362    19728    3           B$JIT.CPFLAGS1.BUFFULL = %YES# ;

  19728  2 003707   000040 236007                    LDQ     32,DL
         2 003710   000143 256100                    ORSQ    99,,PR0
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:209  

     1363    19729    3           SEG$2.FLAGS.CPBUFFULL_AT_CSINT = %NO# ;

  19729  2 003711   000057 236000 3                  LDQ     47
         2 003712   100000 356100                    ANSQ    0,,PR1

     1364    19730    3           END ; /* Then Do */

  19730  2 003713   004542 710000 2                  TRA     s:19935

     1365    19731        /**/
     1366    19732        /*E*    ERROR: CPA-E$CONT-C
     1367    19733                MESSAGE: Nothing to continue.
     1368    19734        */
     1369    19735        /**/
     1370    19736    2      CASE(GOTOCMND);

     1371    19737    2        CALL CPG$GOTO (P$PCB) ALTRET (ERRTRN);

  19737  2 003714   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 003715   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003716   000000 701000 xent               TSX1    CPG$GOTO
         2 003717   005726 702000 2                  TSX2    ERRTRN
         2 003720   004542 710000 2                  TRA     s:19935

     1372    19738        /**/
     1373    19739    2      CASE(HELPCMND);

     1374    19740    2        X$PARAM = CXUH_PARAM ;

  19740  2 003721   000100 100400                    MLR     fill='000'O
         2 003722   000000 000344 1                  ADSC9   CXUH_PARAM               cn=0,n=228
         2 003723   200234 000344                    ADSC9   X$PARAM,,AUTO            cn=0,n=228

     1375    19741    2        CALL CPC$OPEN_LL ;

  19741  2 003724   000002 631400 xsym               EPPR1   B_VECTNIL+2
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:210  
         2 003725   000000 701000 xent               TSX1    CPC$OPEN_LL
         2 003726   000000 011000                    NOP     0

     1376    19742    2        X$PARAM.OUTDCB1# = SEG$2.LLDCB# ;

  19742  2 003727   000000 470400 xsym               LDP0    SEG2$
         2 003730   000000 720100                    LXL0    0,,PR0
         2 003731   200244 740100                    STX0    X$PARAM+8,,AUTO

     1377    19743    2        X$PARAM.HELP$ = BLK$ -> P$B.SUBLK$(0) -> P$S.TEXTC$ ;

  19743  2 003732   200023 471500                    LDP1    BLK$,,AUTO
         2 003733   100003 473500                    LDP3    3,,PR1
         2 003734   300003 236100                    LDQ     3,,PR3
         2 003735   200245 756100                    STQ     X$PARAM+9,,AUTO

     1378    19744    2        SEG$2.GETCMD$->GET$CMD.XUH$ = ADDR(X$PARAM) ;

  19744  2 003736   000173 473500                    LDP3    123,,PR0
         2 003737   200234 634500                    EPPR4   X$PARAM,,AUTO
         2 003740   300005 454500                    STP4    5,,PR3

     1379    19745    2        CALL CXG$HELP (SEG$2.GETCMD$->GET$CMD) ALTRET (EAT_HELP_ALT) ;

  19745  2 003741   000173 473500                    LDP3    123,,PR0
         2 003742   200462 453500                    STP3    FID_RES+1,,AUTO
         2 003743   200462 630500                    EPPR0   FID_RES+1,,AUTO
         2 003744   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003745   000000 701000 xent               TSX1    CXG$HELP
         2 003746   003747 702000 2                  TSX2    EAT_HELP_ALT

  19744  2 003747   004542 710000 2     EAT_HELP_ALT TRA     s:19935

     1380    19746    2   EAT_HELP_ALT: ;
     1381    19747        /**/
     1382    19748    2      CASE(IFCMND);

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:211  
     1383    19749    2        CALL CPG$IF(P$PCB) ALTRET(ERRTRN);

  19749  2 003750   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 003751   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003752   000000 701000 xent               TSX1    CPG$IF
         2 003753   005726 702000 2                  TSX2    ERRTRN

     1384    19750    2        IF P$PCB.HI_CHAR = 0

  19750  2 003754   200024 470500                    LDP0    P$PCB$,,AUTO
         2 003755   000012 235100                    LDA     10,,PR0
         2 003756   004542 601000 2                  TNZ     s:19935

     1385    19751    2        THEN
     1386    19752    3        DO;  /* Parse to get to the end if it's going to get skipped. */

     1387    19753    3           SEG$2.GETCMD$->GET$CMD.NODES$ = ADDR(IBEX_CMD);

  19753  2 003757   000000 471400 xsym               LDP1    SEG2$
         2 003760   100173 473500                    LDP3    123,,PR1
         2 003761   000030 236000 3                  LDQ     24
         2 003762   300000 756100                    STQ     0,,PR3

     1388    19754    3           SEG$2.GETCMD$->GET$CMD.SFROUTINE$ = ENTADDR(CPX$FIRST_PASS);

  19754  2 003763   100173 473500                    LDP3    123,,PR1
         2 003764   000000 636000 xent               EAQ     CPX$FIRST_PASS
         2 003765   300033 756100                    STQ     27,,PR3

     1389    19755    3           SEG$2.FLAGS.SKIP_ECHO = %YES#; /* dont echo a skipped one */

  19755  2 003766   040000 236003                    LDQ     16384,DU
         2 003767   100000 256100                    ORSQ    0,,PR1

     1390    19756    3           CALL CPA$READCC (SEG$2.GETCMD$->GET$CMD,CMD_SOURCE) ALTRET (E_READCC) ;

  19756  2 003770   100173 473500                    LDP3    123,,PR1
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:212  
         2 003771   200011 634500                    EPPR4   CMD_SOURCE,,AUTO
         2 003772   200463 454500                    STP4    FID_RES+2,,AUTO
         2 003773   200462 453500                    STP3    FID_RES+1,,AUTO
         2 003774   200462 630500                    EPPR0   FID_RES+1,,AUTO
         2 003775   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 003776   000000 701000 xent               TSX1    CPA$READCC
         2 003777   004717 702000 2                  TSX2    E_READCC

     1391    19757    3           CMD_PARSING = NULLCMND;

  19757  2 004000   000051 235007                    LDA     41,DL
         2 004001   200004 755100                    STA     CMD_PARSING,,AUTO

     1392    19758    4           DO CASE (SEG$2.GETCMD$->GET$CMD.OUT$->P$B.CODE);

  19758  2 004002   000000 470400 xsym               LDP0    SEG2$
         2 004003   000173 471500                    LDP1    123,,PR0
         2 004004   100001 473500                    LDP3    1,,PR1
         2 004005   300000 720100                    LXL0    0,,PR3
         2 004006   000074 100003                    CMPX0   60,DU
         2 004007   004011 602010 2                  TNC     s:19758+7,X0
         2 004010   004106 710000 2                  TRA     s:19762
         2 004011   004106 710000 2                  TRA     s:19762
         2 004012   004106 710000 2                  TRA     s:19762
         2 004013   004105 710000 2                  TRA     s:19760
         2 004014   004106 710000 2                  TRA     s:19762
         2 004015   004106 710000 2                  TRA     s:19762
         2 004016   004106 710000 2                  TRA     s:19762
         2 004017   004106 710000 2                  TRA     s:19762
         2 004020   004106 710000 2                  TRA     s:19762
         2 004021   004106 710000 2                  TRA     s:19762
         2 004022   004106 710000 2                  TRA     s:19762
         2 004023   004106 710000 2                  TRA     s:19762
         2 004024   004106 710000 2                  TRA     s:19762
         2 004025   004106 710000 2                  TRA     s:19762
         2 004026   004106 710000 2                  TRA     s:19762
         2 004027   004106 710000 2                  TRA     s:19762
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:213  
         2 004030   004106 710000 2                  TRA     s:19762
         2 004031   004106 710000 2                  TRA     s:19762
         2 004032   004106 710000 2                  TRA     s:19762
         2 004033   004106 710000 2                  TRA     s:19762
         2 004034   004106 710000 2                  TRA     s:19762
         2 004035   004106 710000 2                  TRA     s:19762
         2 004036   004106 710000 2                  TRA     s:19762
         2 004037   004106 710000 2                  TRA     s:19762
         2 004040   004106 710000 2                  TRA     s:19762
         2 004041   004106 710000 2                  TRA     s:19762
         2 004042   004106 710000 2                  TRA     s:19762
         2 004043   004106 710000 2                  TRA     s:19762
         2 004044   004106 710000 2                  TRA     s:19762
         2 004045   004106 710000 2                  TRA     s:19762
         2 004046   004106 710000 2                  TRA     s:19762
         2 004047   004106 710000 2                  TRA     s:19762
         2 004050   004106 710000 2                  TRA     s:19762
         2 004051   004106 710000 2                  TRA     s:19762
         2 004052   004106 710000 2                  TRA     s:19762
         2 004053   004106 710000 2                  TRA     s:19762
         2 004054   004105 710000 2                  TRA     s:19760
         2 004055   004106 710000 2                  TRA     s:19762
         2 004056   004106 710000 2                  TRA     s:19762
         2 004057   004106 710000 2                  TRA     s:19762
         2 004060   004106 710000 2                  TRA     s:19762
         2 004061   004106 710000 2                  TRA     s:19762
         2 004062   004106 710000 2                  TRA     s:19762
         2 004063   004105 710000 2                  TRA     s:19760
         2 004064   004106 710000 2                  TRA     s:19762
         2 004065   004106 710000 2                  TRA     s:19762
         2 004066   004106 710000 2                  TRA     s:19762
         2 004067   004106 710000 2                  TRA     s:19762
         2 004070   004106 710000 2                  TRA     s:19762
         2 004071   004106 710000 2                  TRA     s:19762
         2 004072   004106 710000 2                  TRA     s:19762
         2 004073   004106 710000 2                  TRA     s:19762
         2 004074   004106 710000 2                  TRA     s:19762
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:214  
         2 004075   004106 710000 2                  TRA     s:19762
         2 004076   004106 710000 2                  TRA     s:19762
         2 004077   004106 710000 2                  TRA     s:19762
         2 004100   004106 710000 2                  TRA     s:19762
         2 004101   004105 710000 2                  TRA     s:19760
         2 004102   004106 710000 2                  TRA     s:19762
         2 004103   004106 710000 2                  TRA     s:19762
         2 004104   004105 710000 2                  TRA     s:19760

     1393    19759    4            CASE (LIMITCMND,ORESCMND,ACQUIRECMND,RELEASECMND,RESOURCECMND);

     1394    19760    4              GOTO IGNORE_RES;

  19760  2 004105   002234 710000 2                  TRA     IGNORE_RES

     1395    19761    4            END;

     1396    19762    3           GOTO CALL_SYNTAX_CHECKER;

  19762  2 004106   002670 710000 2                  TRA     CALL_SYNTAX_CHECKER

     1397    19763    3           END;
     1398    19764        /**/
     1399    19765    2      CASE(JOINCMND);

     1400    19766    2        CALL CPC$UNIMPCMD;

  19766  2 004107   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 004110   000000 701000 xent               TSX1    CPC$UNIMPCMD
         2 004111   000000 011000                    NOP     0

     1401    19767    2        CALL CPA$JOIN(P$PCB) ALTRET(ERRTRN);

  19767  2 004112   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 004113   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004114   000000 701000 xent               TSX1    CPA$JOIN
         2 004115   005726 702000 2                  TSX2    ERRTRN
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:215  
         2 004116   004542 710000 2                  TRA     s:19935

     1402    19768        /**/
     1403    19769    2      CASE(LETCMND);

     1404    19770    2        CALL CPG$LET(P$PCB) ALTRET(ERRTRN);

  19770  2 004117   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 004120   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004121   000000 701000 xent               TSX1    CPG$LET
         2 004122   005726 702000 2                  TSX2    ERRTRN
         2 004123   004542 710000 2                  TRA     s:19935

     1405    19771        /**/
     1406    19772    2      CASE(LIMITCMND);

     1407    19773    2        CALL CPJ$LIMIT(P$PCB) ALTRET(ERRTRN);

  19773  2 004124   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 004125   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004126   000000 701000 xent               TSX1    CPJ$LIMIT
         2 004127   005726 702000 2                  TSX2    ERRTRN
         2 004130   004542 710000 2                  TRA     s:19935

     1408    19774        /**/
     1409    19775    2      CASE(LINKCMND);

     1410    19776    2        CALL CPA$LINK(P$PCB) ALTRET(ERRTRN);

  19776  2 004131   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 004132   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004133   000000 701000 xent               TSX1    CPA$LINK
         2 004134   005726 702000 2                  TSX2    ERRTRN
         2 004135   004542 710000 2                  TRA     s:19935

     1411    19777        /**/
     1412    19778    2      CASE(LISTCMND);
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:216  

     1413    19779    2        CALL CPE$LIST(P$PCB) ALTRET(ERRTRN);

  19779  2 004136   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 004137   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004140   000000 701000 xent               TSX1    CPE$LIST
         2 004141   005726 702000 2                  TSX2    ERRTRN
         2 004142   004542 710000 2                  TRA     s:19935

     1414    19780        /**/
     1415    19781    2      CASE(LOCATECMND);

     1416    19782    2        CALL CPC$UNIMPCMD;

  19782  2 004143   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 004144   000000 701000 xent               TSX1    CPC$UNIMPCMD
         2 004145   000000 011000                    NOP     0

     1417    19783    2        CALL CPB$LOCATE(P$PCB) ALTRET(ERRTRN);

  19783  2 004146   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 004147   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004150   000000 701000 xent               TSX1    CPB$LOCATE
         2 004151   005726 702000 2                  TSX2    ERRTRN
         2 004152   004542 710000 2                  TRA     s:19935

     1418    19784        /**/
     1419    19785    2      CASE(MESSAGECMND);

     1420    19786    2        CALL CPB$MESSAGE(P$PCB)       ALTRET(ERRTRN);

  19786  2 004153   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 004154   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004155   000000 701000 xent               TSX1    CPB$MESSAGE
         2 004156   005726 702000 2                  TSX2    ERRTRN
         2 004157   004542 710000 2                  TRA     s:19935

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:217  
     1421    19787        /**/
     1422    19788    2      CASE(NOTIFYCMND);

     1423    19789    2        CALL CPK$NOTIFY (P$PCB) ALTRET(ERRTRN) ;

  19789  2 004160   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 004161   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004162   000000 701000 xent               TSX1    CPK$NOTIFY
         2 004163   005726 702000 2                  TSX2    ERRTRN
         2 004164   004542 710000 2                  TRA     s:19935

     1424    19790        /**/
     1425    19791    2      CASE(NULLCMND);

     1426    19792    2        ADDR(SEG$2.ERRBUF)->ERR$BLK.FIRST = 0; /* Just ignore context errors */

  19792  2 004165   000000 471400 xsym               LDP1    SEG2$
         2 004166   100004 450100                    STZ     4,,PR1
         2 004167   004542 710000 2                  TRA     s:19935

     1427    19793        /**/
     1428    19794    2      CASE(ORESCMND);

     1429    19795    2        IF B$JIT.MODE ~= %M_BATCH#

  19795  2 004170   000000 236100                    LDQ     0,,PR0
         2 004171   740000 376003                    ANQ     -16384,DU
         2 004172   040000 116003                    CMPQ    16384,DU
         2 004173   004542 600000 2                  TZE     s:19935

     1430    19796
     1431    19797    2        THEN
     1432    19798    2           CALL CPO$ORES(P$PCB) ALTRET (ERRTRN);

  19798  2 004174   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 004175   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004176   000000 701000 xent               TSX1    CPO$ORES
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:218  
         2 004177   005726 702000 2                  TSX2    ERRTRN
         2 004200   004542 710000 2                  TRA     s:19935

     1433    19799        /**/
     1434    19800    2      CASE(OUTPUTCMND);

     1435    19801    2        CALL CPG$OUTPUT(P$PCB) ALTRET(ERRTRN);

  19801  2 004201   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 004202   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004203   000000 701000 xent               TSX1    CPG$OUTPUT
         2 004204   005726 702000 2                  TSX2    ERRTRN
         2 004205   004542 710000 2                  TRA     s:19935

     1436    19802        /**/
     1437    19803    2      CASE(PASSWORDCMND);

     1438    19804    2        CALL CPE$PASSWORD(P$PCB) ALTRET(ERRTRN);

  19804  2 004206   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 004207   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004210   000000 701000 xent               TSX1    CPE$PASSWORD
         2 004211   005726 702000 2                  TSX2    ERRTRN
         2 004212   004542 710000 2                  TRA     s:19935

     1439    19805        /**/
     1440    19806    2      CASE(PCLCMND);

     1441    19807    2        CALL CPA$PCL(P$PCB) ALTRET(ERRTRN);

  19807  2 004213   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 004214   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004215   000000 701000 xent               TSX1    CPA$PCL
         2 004216   005726 702000 2                  TSX2    ERRTRN
         2 004217   004542 710000 2                  TRA     s:19935

     1442    19808        /**/
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:219  
     1443    19809    2      CASE(PLATENCMND);

     1444    19810    2        CALL CPB$PLATEN(P$PCB) ALTRET(ERRTRN);

  19810  2 004220   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 004221   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004222   000000 701000 xent               TSX1    CPB$PLATEN
         2 004223   005726 702000 2                  TSX2    ERRTRN
         2 004224   004542 710000 2                  TRA     s:19935

     1445    19811        /**/
     1446    19812    2      CASE(PMDCMND);

     1447    19813    2        CALL CPA$PMD(P$PCB) ALTRET(ERRTRN);

  19813  2 004225   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 004226   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004227   000000 701000 xent               TSX1    CPA$PMD
         2 004230   005726 702000 2                  TSX2    ERRTRN
         2 004231   004542 710000 2                  TRA     s:19935

     1448    19814        /**/
     1449    19815    2      CASE(POINTCMND);

     1450    19816    2        CALL CPE$POINT (P$PCB) ALTRET(ERRTRN);

  19816  2 004232   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 004233   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004234   000000 701000 xent               TSX1    CPE$POINT
         2 004235   005726 702000 2                  TSX2    ERRTRN
         2 004236   004542 710000 2                  TRA     s:19935

     1451    19817        /**/
     1452    19818    2      CASE(POSITIONCMND);

     1453    19819    2        CALL CPE$POSITION (P$PCB) ALTRET(ERRTRN);

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:220  
  19819  2 004237   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 004240   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004241   000000 701000 xent               TSX1    CPE$POSITION
         2 004242   005726 702000 2                  TSX2    ERRTRN
         2 004243   004542 710000 2                  TRA     s:19935

     1454    19820        /**/
     1455    19821    2      CASE(PRIORITYCMND);

     1456    19822    2        CALL CPI$PRIORITY(P$PCB) ALTRET(ERRTRN);

  19822  2 004244   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 004245   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004246   000000 701000 xent               TSX1    CPI$PRIORITY
         2 004247   005726 702000 2                  TSX2    ERRTRN
         2 004250   004542 710000 2                  TRA     s:19935

     1457    19823        /**/
     1458    19824    2      CASE(PRIVCMND);

     1459    19825    2        CALL CPF$PRIV(P$PCB) ALTRET(ERRTRN);

  19825  2 004251   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 004252   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004253   000000 701000 xent               TSX1    CPF$PRIV
         2 004254   005726 702000 2                  TSX2    ERRTRN
         2 004255   004542 710000 2                  TRA     s:19935

     1460    19826        /**/
     1461    19827    2      CASE(PROFILECMND);

     1462    19828    2        CALL CPF$PROFILE(P$PCB) ALTRET(ERRTRN);

  19828  2 004256   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 004257   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004260   000000 701000 xent               TSX1    CPF$PROFILE
         2 004261   005726 702000 2                  TSX2    ERRTRN
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:221  
         2 004262   004542 710000 2                  TRA     s:19935

     1463    19829        /**/
     1464    19830    2      CASE (PROMPTCMND);

     1465    19831    2        CALL CPF$PROMPT(P$PCB) ALTRET(ERRTRN);

  19831  2 004263   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 004264   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004265   000000 701000 xent               TSX1    CPF$PROMPT
         2 004266   005726 702000 2                  TSX2    ERRTRN
         2 004267   004542 710000 2                  TRA     s:19935

     1466    19832        /**/
     1467    19833    2      CASE(PROTECTCMND);

     1468    19834    2        CALL CPE$PROTECT(P$PCB) ALTRET(ERRTRN);

  19834  2 004270   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 004271   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004272   000000 701000 xent               TSX1    CPE$PROTECT
         2 004273   005726 702000 2                  TSX2    ERRTRN
         2 004274   004542 710000 2                  TRA     s:19935

     1469    19835        /**/
     1470    19836    2      CASE(QUITCMND);

     1471    19837    2        IF BLK$ -> P$B.NSUBLKS > 0

  19837  2 004275   200023 471500                    LDP1    BLK$,,AUTO
         2 004276   100001 220100                    LDX0    1,,PR1
         2 004277   004324 600000 2                  TZE     s:19852

     1472    19838    2        THEN
     1473    19839    2           IF BLK$ -> P$B.SUBLK$(0) -> P$S.COUNT > 0

  19839  2 004300   100003 473500                    LDP3    3,,PR1
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:222  
         2 004301   300004 236100                    LDQ     4,,PR3
         2 004302   777000 316003                    CANQ    -512,DU
         2 004303   004324 600000 2                  TZE     s:19852

     1474    19840    2           THEN
     1475    19841    3           DO ;

     1476    19842    3              I = BLK$ -> P$B.SUBLK$(0) -> P$S.CPOS ;

  19842  2 004304   300002 235100                    LDA     2,,PR3
         2 004305   200005 755100                    STA     I,,AUTO

     1477    19843    3              CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF), I, E_BDQUITCMND) ;

  19843  2 004306   000000 236000 xsym               LDQ     SEG2$
         2 004307   000003 036003                    ADLQ    3,DU
         2 004310   200462 756100                    STQ     FID_RES+1,,AUTO
         2 004311   000060 236000 3                  LDQ     48
         2 004312   200465 756100                    STQ     FID_RES+4,,AUTO
         2 004313   200005 633500                    EPPR3   I,,AUTO
         2 004314   200464 453500                    STP3    FID_RES+3,,AUTO
         2 004315   200462 634500                    EPPR4   FID_RES+1,,AUTO
         2 004316   200463 454500                    STP4    FID_RES+2,,AUTO
         2 004317   200463 630500                    EPPR0   FID_RES+2,,AUTO
         2 004320   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 004321   000000 701000 xent               TSX1    CXP$POSTERR
         2 004322   000000 011000                    NOP     0

     1478    19844    3              GOTO ERRTRN ;

  19844  2 004323   005726 710000 2                  TRA     ERRTRN

     1479    19845    3              END ; /* Then Do */
     1480    19846        /**/
     1481    19847        /*E*    ERROR: CPA-E$BDQUITCMND-0
     1482    19848                MESSAGE: Expected the end of command (possibly with a "comment").
     1483    19849                DESCRIPTION: User input a QUIT command with something on the end of
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:223  
     1484    19850                              the line.
     1485    19851        */
     1486    19852    2        B$JIT.CPFLAGS1.YCGET = '0'B;

  19852  2 004324   000026 236000 3                  LDQ     22
         2 004325   000143 356100                    ANSQ    99,,PR0

     1487    19853    2        IF B$JIT.MODE ~= %M_INT#

  19853  2 004326   000000 236100                    LDQ     0,,PR0
         2 004327   740000 376003                    ANQ     -16384,DU
         2 004330   140000 116003                    CMPQ    49152,DU
         2 004331   004335 600000 2                  TZE     s:19857

     1488    19854    2        THEN
     1489    19855    2           CALL CPA$BYE;

  19855  2 004332   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 004333   000000 701000 xent               TSX1    CPA$BYE
         2 004334   000000 011000                    NOP     0

     1490    19856        /**/
     1491    19857    2        CALL CPA$FLUSH;

  19857  2 004335   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 004336   000000 701000 xent               TSX1    CPA$FLUSH
         2 004337   000000 011000                    NOP     0

     1492    19858    2        SEG$2.FLAGS.CMD_STR_INT = %NO#;

  19858  2 004340   000000 470400 xsym               LDP0    SEG2$
         2 004341   000004 236000 3                  LDQ     4
         2 004342   000000 356100                    ANSQ    0,,PR0

     1493    19859    2        SEG$2.FLAGS.CPBUFFULL_AT_CSINT = %NO#;

  19859  2 004343   000057 236000 3                  LDQ     47
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:224  
         2 004344   000000 356100                    ANSQ    0,,PR0

     1494    19860        /**/
     1495    19861    2        IF B$JIT.CPFLAGS1.JSTEP

  19861  2 004345   000000 471400 xsym               LDP1    B$JIT$
         2 004346   100143 236100                    LDQ     99,,PR1
         2 004347   200000 316003                    CANQ    65536,DU
         2 004350   004354 600000 2                  TZE     s:19868

     1496    19862
     1497    19863    2        THEN
     1498    19864    3        DO;

     1499    19865    3           SEG$2.PROMPT_TYPE = PRMT_N;

  19865  2 004351   000001 235007                    LDA     1,DL
         2 004352   000205 755100                    STA     133,,PR0

     1500    19866    3           END;

  19866  2 004353   004357 710000 2                  TRA     s:19872

     1501    19867    2        ELSE /* rundown */
     1502    19868    2           CALL CPC$QUIT ALTRET(ERRTRN);

  19868  2 004354   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 004355   000000 701000 xent               TSX1    CPC$QUIT
         2 004356   005726 702000 2                  TSX2    ERRTRN

     1503    19869        /*
     1504    19870             ***** Next read should be thru M$IBEX...
     1505    19871        */
     1506    19872    2        SEG$2.GETCMD$->GET$CMD.INDCB# = M$IBEX_NUM;

  19872  2 004357   000000 470400 xsym               LDP0    SEG2$
         2 004360   000173 471500                    LDP1    123,,PR0
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:225  
         2 004361   000000 235000 xsym               LDA     M$IBEX_NUM
         2 004362   100012 755100                    STA     10,,PR1
         2 004363   004542 710000 2                  TRA     s:19935

     1507    19873        /**/
     1508    19874    2      CASE(RELEASECMND);

     1509    19875    2        CALL CPO$RELEASE(P$PCB) ALTRET(ERRTRN);

  19875  2 004364   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 004365   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004366   000000 701000 xent               TSX1    CPO$RELEASE
         2 004367   005726 702000 2                  TSX2    ERRTRN
         2 004370   004542 710000 2                  TRA     s:19935

     1510    19876        /**/
     1511    19877    2      CASE(REPORTCMND);

     1512    19878    2        CALL CPB$REPORT(P$PCB) ALTRET(ERRTRN);

  19878  2 004371   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 004372   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004373   000000 701000 xent               TSX1    CPB$REPORT
         2 004374   005726 702000 2                  TSX2    ERRTRN
         2 004375   004542 710000 2                  TRA     s:19935

     1513    19879        /**/
     1514    19880    2      CASE(SAVECMND);

     1515    19881    2        CALL CPA$SAVE(P$PCB) ALTRET(ERRTRN);

  19881  2 004376   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 004377   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004400   000000 701000 xent               TSX1    CPA$SAVE
         2 004401   005726 702000 2                  TSX2    ERRTRN
         2 004402   004542 710000 2                  TRA     s:19935

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:226  
     1516    19882        /**/
     1517    19883    2      CASE(SETUPCMND);

     1518    19884    2        CALL CPI$SETUP(P$PCB) ALTRET(ERRTRN);

  19884  2 004403   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 004404   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004405   000000 701000 xent               TSX1    CPI$SETUP
         2 004406   005726 702000 2                  TSX2    ERRTRN
         2 004407   004542 710000 2                  TRA     s:19935

     1519    19885        /**/
     1520    19886    2      CASE(SIXEDITCMND);

     1521    19887    2        CALL CPA$SIXEDIT(P$PCB) ALTRET(ERRTRN);

  19887  2 004410   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 004411   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004412   000000 701000 xent               TSX1    CPA$SIXEDIT
         2 004413   005726 702000 2                  TSX2    ERRTRN
         2 004414   004542 710000 2                  TRA     s:19935

     1522    19888        /**/
     1523    19889    2      CASE(STARTCMND);

     1524    19890    2        CALL CPA$START(P$PCB) ALTRET(ERRTRN);

  19890  2 004415   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 004416   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004417   000000 701000 xent               TSX1    CPA$START
         2 004420   005726 702000 2                  TSX2    ERRTRN
         2 004421   004542 710000 2                  TRA     s:19935

     1525    19891        /**/
     1526    19892    2      CASE(STATUSCMND);

     1527    19893    2        CALL CPB$STATUS(P$PCB) ALTRET(ERRTRN);
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:227  

  19893  2 004422   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 004423   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004424   000000 701000 xent               TSX1    CPB$STATUS
         2 004425   005726 702000 2                  TSX2    ERRTRN
         2 004426   004542 710000 2                  TRA     s:19935

     1528    19894        /**/
     1529    19895    2      CASE(SWITCHCMND);

     1530    19896    2        CALL CPF$SWITCH(P$PCB) ALTRET(ERRTRN);

  19896  2 004427   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 004430   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004431   000000 701000 xent               TSX1    CPF$SWITCH
         2 004432   005726 702000 2                  TSX2    ERRTRN
         2 004433   004542 710000 2                  TRA     s:19935

     1531    19897        /**/
     1532    19898    2      CASE(TABSCMND);

     1533    19899    2        CALL CPI$TABS(P$PCB) ALTRET(ERRTRN);

  19899  2 004434   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 004435   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004436   000000 701000 xent               TSX1    CPI$TABS
         2 004437   005726 702000 2                  TSX2    ERRTRN
         2 004440   004542 710000 2                  TRA     s:19935

     1534    19900        /**/
     1535    19901    2      CASE(UCMND);

     1536    19902    2        CALL CPA$UNDER(P$PCB) ALTRET(ERRTRN);

  19902  2 004441   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 004442   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004443   000000 701000 xent               TSX1    CPA$UNDER
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:228  
         2 004444   005726 702000 2                  TSX2    ERRTRN
         2 004445   004542 710000 2                  TRA     s:19935

     1537    19903        /**/
     1538    19904    2      CASE(TIMECMND);

     1539    19905    2        CALL CPE$TIME(P$PCB) ALTRET(ERRTRN);

  19905  2 004446   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 004447   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004450   000000 701000 xent               TSX1    CPE$TIME
         2 004451   005726 702000 2                  TSX2    ERRTRN
         2 004452   004542 710000 2                  TRA     s:19935

     1540    19906        /**/
     1541    19907    2      CASE(TITLECMND);

     1542    19908    2        CALL CPB$TITLE(P$PCB) ALTRET(ERRTRN);

  19908  2 004453   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 004454   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004455   000000 701000 xent               TSX1    CPB$TITLE
         2 004456   005726 702000 2                  TSX2    ERRTRN
         2 004457   004542 710000 2                  TRA     s:19935

     1543    19909        /**/
     1544    19910    2      CASE(XEQCMND);

     1545    19911    2        B$JIT.USRRNST = %RS_EXIT#;

  19911  2 004460   000000 236003                    LDQ     0,DU
         2 004461   000145 552110                    STBQ    101,'10'O,PR0

     1546    19912    2        CALL CPH$BATXEQ(P$PCB) ALTRET(ERRTRN);

  19912  2 004462   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 004463   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:229  
         2 004464   000000 701000 xent               TSX1    CPH$BATXEQ
         2 004465   005726 702000 2                  TSX2    ERRTRN
         2 004466   004542 710000 2                  TRA     s:19935

     1547    19913        /**/
     1548    19914    2      CASE(XMITCMND);

     1549    19915    2        B$JIT.USRRNST = %RS_EXIT#;

  19915  2 004467   000000 236003                    LDQ     0,DU
         2 004470   000145 552110                    STBQ    101,'10'O,PR0

     1550    19916    2        CALL CPH$BATXEQ(P$PCB) ALTRET(ERRTRN);

  19916  2 004471   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 004472   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004473   000000 701000 xent               TSX1    CPH$BATXEQ
         2 004474   005726 702000 2                  TSX2    ERRTRN
         2 004475   004542 710000 2                  TRA     s:19935

     1551    19917        /**/
     1552    19918    2      CASE(RUNITCMND);

     1553    19919    2        IF SEG$2.FLAGS.CONTINUED

  19919  2 004476   000000 471400 xsym               LDP1    SEG2$
         2 004477   100000 236100                    LDQ     0,,PR1
         2 004500   002000 316003                    CANQ    1024,DU
         2 004501   004521 600000 2                  TZE     s:19929

     1554    19920    2        THEN   /* Close the XEQ file */
     1555    19921    3        DO;

     1556    19922    3           B$JIT.PRFLAGS.CONTINUED = %YES#;

  19922  2 004502   001000 236003                    LDQ     512,DU
         2 004503   000030 256100                    ORSQ    24,,PR0
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:230  

     1557    19923        /**/
     1558    19924    3           SEG$2.FPT_CLOSE$ -> FPT$CLOSE.V.DCB# = M$IBEX1_NUM;

  19924  2 004504   100163 473500                    LDP3    115,,PR1
         2 004505   000000 720000 xsym               LXL0    M$IBEX1_NUM
         2 004506   300032 740100                    STX0    26,,PR3

     1559    19925    3           SEG$2.FPT_CLOSE$ -> FPT$CLOSE.V.DISP# = %SAVE#;

  19925  2 004507   100163 473500                    LDP3    115,,PR1
         2 004510   000002 236007                    LDQ     2,DL
         2 004511   300032 552104                    STBQ    26,'04'O,PR3

     1560    19926    3           CALL M$CLOSE (SEG$2.FPT_CLOSE$ -> FPT$CLOSE);

  19926  2 004512   100163 473500                    LDP3    115,,PR1
         2 004513   300000 630500                    EPPR0   0,,PR3
         2 004514   050001 713400                    CLIMB   close
         2 004515   406000 401760                    pmme    nvectors=13

     1561    19927    3           K = P$PCB.NCHARS ; /* Remember total length of record. */

  19927  2 004516   200024 470500                    LDP0    P$PCB$,,AUTO
         2 004517   000011 235100                    LDA     9,,PR0
         2 004520   200007 755100                    STA     K,,AUTO

     1562    19928    3           END;

     1563    19929    2        SEG$2.CPBUFF$ -> CP$BUFF = TEMPBUF ;        /*RESTORE FIRST RECORD*/

  19929  2 004521   000000 470400 xsym               LDP0    SEG2$
         2 004522   000171 471500                    LDP1    121,,PR0
         2 004523   040100 100500                    MLR     fill='040'O
         2 004524   200030 000400                    ADSC9   TEMPBUF,,AUTO            cn=0,n=256
         2 004525   100000 000400                    ADSC9   0,,PR1                   cn=0,n=256

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:231  
     1564    19930    2        P$PCB.NCHARS = K;         /*RESTORE FIRST RECORD SIZE*/

  19930  2 004526   200007 235100                    LDA     K,,AUTO
         2 004527   200024 471500                    LDP1    P$PCB$,,AUTO
         2 004530   100011 755100                    STA     9,,PR1

     1565    19931    2        B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 & ~%CP_BUFFULL# ;

  19931  2 004531   000150 236000 1                  LDQ     XLIM_TBL+25
         2 004532   000027 676000 xsym               ERQ     B_VECTNIL+23
         2 004533   000000 473400 xsym               LDP3    B$JIT$
         2 004534   300143 376100                    ANQ     99,,PR3
         2 004535   300143 756100                    STQ     99,,PR3

     1566    19932    2        CALL CPA$RUNIT(P$PCB) ALTRET(ERRTRN);

  19932  2 004536   200024 630500                    EPPR0   P$PCB$,,AUTO
         2 004537   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004540   000000 701000 xent               TSX1    CPA$RUNIT
         2 004541   005726 702000 2                  TSX2    ERRTRN

     1567    19933    2      END;

     1568    19934        /**/
     1569    19935    1     IF ADDR(SEG$2.ERRBUF)->ERR$BLK.FIRST ~= 0

  19935  2 004542   000000 470400 xsym               LDP0    SEG2$
         2 004543   000004 235100                    LDA     4,,PR0
         2 004544   005726 601000 2                  TNZ     ERRTRN

     1570    19936    1     THEN
     1571    19937    1        GOTO ERRTRN;
     1572    19938        %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:232  
     1573    19939    1   CHK_BREAK:
     1574    19940        /*
     1575    19941             ***** If a break was received, handle it here...
     1576    19942        */
     1577    19943    1     IF B$JIT.CPFLAGS1 & %CP_BRK#

  19943  2 004545   000000 470400 xsym  CHK_BREAK    LDP0    B$JIT$
         2 004546   000143 236100                    LDQ     99,,PR0
         2 004547   000006 376000 xsym               ANQ     B_VECTNIL+6
         2 004550   004621 600000 2                  TZE     s:19996

     1578    19944
     1579    19945    1     THEN
     1580    19946    2     DO;

     1581    19947    2        B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 & ~%CP_BRK#;

  19947  2 004551   000006 236000 xsym               LDQ     B_VECTNIL+6
         2 004552   000027 676000 xsym               ERQ     B_VECTNIL+23
         2 004553   000143 376100                    ANQ     99,,PR0
         2 004554   000143 756100                    STQ     99,,PR0

     1582    19948        /*
     1583    19949             ***** If M$YC pmme then altreturn (via M$CPEXIT) to the program...
     1584    19950        */
     1585    19951        /*E*    ERROR: CPA-E$YCPMMEBRK-E
     1586    19952                MESSAGE0: Break or control-Y while processing M$YC.
     1587    19953                DESCRIPTION: Allow break or control-Y durring M$YC processing
     1588    19954                             to cause altreturn to caller to be able to interrupt
     1589    19955                             the user who does nothing but M$YCs; e.g. FUMBLE.
     1590    19956        */
     1591    19957    2        IF B$JIT.CPFLAGS1 & %CP_YCPMME#

  19957  2 004555   000141 376000 1                  ANQ     XLIM_TBL+18
         2 004556   004562 600000 2                  TZE     s:19964

     1592    19958
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:233  
     1593    19959    2        THEN
     1594    19960    3        DO;

     1595    19961    3           ERR_CODE = E_YCPMMEBRK;

  19961  2 004557   000075 236000 1                  LDQ     E_YCPMMEBRK
         2 004560   200232 756100                    STQ     ERR_CODE,,AUTO

     1596    19962    3           GOTO E_M$YCPMME;

  19962  2 004561   005642 710000 2                  TRA     E_M$YCPMME

     1597    19963    3           END;
     1598    19964    2        IF B$JIT.CPFLAGS1.YC AND NOT B$JIT.CPFLAGS1.YCGET

  19964  2 004562   000143 236100                    LDQ     99,,PR0
         2 004563   040000 316003                    CANQ    16384,DU
         2 004564   004567 600000 2                  TZE     s:19972
         2 004565   000143 430100                    FSZN    99,,PR0
         2 004566   000705 605000 2                  TPL     PROMPT

     1599    19965
     1600    19966    2        THEN /* !! prompt already setup */
     1601    19967    2           GOTO PROMPT;
     1602    19968        /*
     1603    19969             ***** If in XEQ and break received
     1604    19970                   then change prompt to !!
     1605    19971        */
     1606    19972    2        IF B$JIT.NEXTCC = %CC_FROMXEQ#

  19972  2 004567   000151 236100                    LDQ     105,,PR0
         2 004570   000777 376003                    ANQ     511,DU
         2 004571   000002 116003                    CMPQ    2,DU
         2 004572   004621 601000 2                  TNZ     s:19996

     1607    19973    2        THEN
     1608    19974    3        DO;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:234  

     1609    19975    3           CALL CPC$WRITEMSGE (E_CSINT);

  19975  2 004573   000005 630400 3                  EPPR0   5
         2 004574   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004575   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 004576   000000 011000                    NOP     0

     1610    19976    3           SEG$2.PROMPT_TYPE = PRMT_I;

  19976  2 004577   000002 235007                    LDA     2,DL
         2 004600   000000 470400 xsym               LDP0    SEG2$
         2 004601   000205 755100                    STA     133,,PR0

     1611    19977    3           SEG$2.GETCMD$->GET$CMD.INDCB# = M$UC_NUM;

  19977  2 004602   000173 471500                    LDP1    123,,PR0
         2 004603   000000 236000 xsym               LDQ     M$UC_NUM
         2 004604   100012 756100                    STQ     10,,PR1

     1612    19978    3           SEG$2.FLAGS.CMD_STR_INT = %YES#;

  19978  2 004605   000200 236003                    LDQ     128,DU
         2 004606   000000 256100                    ORSQ    0,,PR0

     1613    19979    3           IF B$JIT.CPFLAGS1 & %CP_BUFFULL#

  19979  2 004607   000000 471400 xsym               LDP1    B$JIT$
         2 004610   100143 236100                    LDQ     99,,PR1
         2 004611   000150 376000 1                  ANQ     XLIM_TBL+25
         2 004612   004621 600000 2                  TZE     s:19996

     1614    19980    3           THEN
     1615    19981    4           DO ;

     1616    19982                                  /* Need to set a flag for CPBUFF in case we need
     1617    19983                                      to GO.
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:235  
     1618    19984                                  */
     1619    19985    4              SEG$2.FLAGS.CPBUFFULL_AT_CSINT = %YES#;

  19985  2 004613   000040 236003                    LDQ     32,DU
         2 004614   000000 256100                    ORSQ    0,,PR0

     1620    19986    4              B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 & ~%CP_BUFFULL# ;

  19986  2 004615   000150 236000 1                  LDQ     XLIM_TBL+25
         2 004616   000027 676000 xsym               ERQ     B_VECTNIL+23
         2 004617   100143 376100                    ANQ     99,,PR1
         2 004620   100143 756100                    STQ     99,,PR1

     1621    19987    4              END ; /* Then Do */

     1622    19988    3           END;

     1623    19989    2        END; /* if CP_BRK then do ... end */

     1624    19990        %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:236  
     1625    19991        /*
     1626    19992             ***** If M$YC pmme then return (via M$CPEXIT) to the program...
     1627    19993                  Unless B$JIT.CPFLAGS1 has CP_BUFFULL set...probably the
     1628    19994                  THEN part of an !IF command.
     1629    19995        */
     1630    19996    1     IF B$JIT.CPFLAGS1 & %CP_YCPMME#

  19996  2 004621   000000 470400 xsym               LDP0    B$JIT$
         2 004622   000143 236100                    LDQ     99,,PR0
         2 004623   000141 376000 1                  ANQ     XLIM_TBL+18
         2 004624   004674 600000 2                  TZE     s:20021

     1631    19997
     1632    19998    1     THEN
     1633    19999    2     DO;

     1634    20000    2        IF B$JIT.CPFLAGS1 & %CP_BUFFULL#

  20000  2 004625   000143 236100                    LDQ     99,,PR0
         2 004626   000150 376000 1                  ANQ     XLIM_TBL+25
         2 004627   004647 600000 2                  TZE     s:20007

     1635    20001    2        THEN
     1636    20002    3        DO ;

     1637    20003    3           SEG$2.FLAGS.SKIP_ECHO = ~(B$PS1$ -> FPTV$YC.ECHO);

  20003  2 004630   000000 471400 xsym               LDP1    B$PS1$
         2 004631   100000 236100                    LDQ     0,,PR1
         2 004632   400000 376003                    ANQ     -131072,DU
         2 004633   400000 676003                    ERQ     -131072,DU
         2 004634   000000 473400 xsym               LDP3    SEG2$
         2 004635   000003 772000                    QRL     3
         2 004636   300000 676100                    ERQ     0,,PR3
         2 004637   040000 376003                    ANQ     16384,DU
         2 004640   300000 656100                    ERSQ    0,,PR3

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:237  
     1638    20004    3           SEG$2.FLAGS.SKIP_ERRS = B$PS1$ -> FPTV$YC.NOERR;

  20004  2 004641   100000 236100                    LDQ     0,,PR1
         2 004642   000005 772000                    QRL     5
         2 004643   300000 676100                    ERQ     0,,PR3
         2 004644   004000 376003                    ANQ     2048,DU
         2 004645   300000 656100                    ERSQ    0,,PR3

     1639    20005    3           GOTO SETUP_READCC ;

  20005  2 004646   000756 710000 2                  TRA     SETUP_READCC

     1640    20006    3           END ; /* Then Do */
     1641    20007    2        SEG$2.FPT_CPEXIT$->FPT$CPEXIT = CFPT_CPEXIT;

  20007  2 004647   000000 471400 xsym               LDP1    SEG2$
         2 004650   100166 473500                    LDP3    118,,PR1
         2 004651   000100 100400                    MLR     fill='000'O
         2 004652   000000 000070 xsym               ADSC9   CFPT_CPEXIT              cn=0,n=56
         2 004653   300000 000070                    ADSC9   0,,PR3                   cn=0,n=56

     1642    20008    2        SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V_ =

  20008  2 004654   100166 473500                    LDP3    118,,PR1
         2 004655   000042 235000 3                  LDA     34
         2 004656   200462 453500                    STP3    FID_RES+1,,AUTO
         2 004657   200462 236100                    LDQ     FID_RES+1,,AUTO
         2 004660   000014 036003                    ADLQ    12,DU
         2 004661   300012 757100                    STAQ    10,,PR3

     1643    20009    2          VECTOR(SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V);
     1644    20010    2        SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V.CONT# = '1'B;

  20010  2 004662   100166 473500                    LDP3    118,,PR1
         2 004663   400000 236003                    LDQ     -131072,DU
         2 004664   300014 256100                    ORSQ    12,,PR3

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:238  
     1645    20011    2        CALL CPC$EXIT;

  20011  2 004665   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 004666   000000 701000 xent               TSX1    CPC$EXIT
         2 004667   000000 011000                    NOP     0

     1646    20012    2        CALL CPC$SCREECH(E$SUAYCRTN,CPA$IBEXMID);

  20012  2 004670   000063 630400 3                  EPPR0   51
         2 004671   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 004672   000000 701000 xent               TSX1    CPC$SCREECH
         2 004673   000000 011000                    NOP     0

     1647    20013        /**/
     1648    20014        /*E*    ERROR:   CPA-E$SUAYCRTN-A
     1649    20015                MESSAGE:    IBEX ABORT:  Unable to return to caller after M$YC entry.
     1650    20016        */
     1651    20017    2        END;

     1652    20018        /*
     1653    20019             ***** Update PREV_CMND ...
     1654    20020        */
     1655    20021    1     IF BLK$ ~= ADDR(NIL)

  20021  2 004674   200023 236100                    LDQ     BLK$,,AUTO
         2 004675   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 004676   004703 600000 2                  TZE     s:20027

     1656    20022    1     THEN   /* Parsed ok */
     1657    20023    1        PREV_CMND = BLK$ -> P$B.CODE;

  20023  2 004677   200023 470500                    LDP0    BLK$,,AUTO
         2 004700   000000 236100                    LDQ     0,,PR0
         2 004701   777777 376007                    ANQ     -1,DL
         2 004702   200003 756100                    STQ     PREV_CMND,,AUTO

     1658    20024        /*
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:239  
     1659    20025             ***** Go get next command ...
     1660    20026        */
     1661    20027    1     GOTO PROMPT;

  20027  2 004703   000705 710000 2                  TRA     PROMPT

     1662    20028                   %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:240  
     1663    20029    1   CNTL_Y_INT:
     1664    20030    1     SEG$2.FLAGS.USE_REMEM = %NO# ;

  20030  2 004704   000000 470400 xsym  CNTL_Y_INT   LDP0    SEG2$
         2 004705   000037 236000 3                  LDQ     31
         2 004706   000000 356100                    ANSQ    0,,PR0

     1665    20031    1     CALL CPA$FLUSH ;

  20031  2 004707   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 004710   000000 701000 xent               TSX1    CPA$FLUSH
         2 004711   000000 011000                    NOP     0

     1666    20032    1     CALL CPC$WRITEMSGE (E_CSINT) ;

  20032  2 004712   000005 630400 3                  EPPR0   5
         2 004713   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004714   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 004715   000000 011000                    NOP     0

     1667    20033    1     GOTO CHK_BREAK ;

  20033  2 004716   004545 710000 2                  TRA     CHK_BREAK

     1668    20034        %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:241  
     1669    20035    1   E_READCC:
     1670    20036    1     ERR_CODE = SEG$2.GETCMD$->GET$CMD.ERR# ;

  20036  2 004717   000000 470400 xsym  E_READCC     LDP0    SEG2$
         2 004720   000173 471500                    LDP1    123,,PR0
         2 004721   100001 236100                    LDQ     1,,PR1
         2 004722   200232 756100                    STQ     ERR_CODE,,AUTO

     1671    20037    1     IF NOT ERR_CODE.MON

  20037  2 004723   400000 316007                    CANQ    -131072,DL
         2 004724   005266 600000 2                  TZE     SYNTAX_ERR

     1672    20038    1     THEN
     1673    20039    1        GOTO SYNTAX_ERR ;
     1674    20040        /*
     1675    20041              ***** If a PREPROCESSOR error and WHEN command
     1676    20042                    shut off PREPROCESSing and try again.
     1677    20043        */
     1678    20044    1     IF ERR_CODE.ERR# = %E$NOTCMDNAME OR

  20044  2 004725   200232 236100                    LDQ     ERR_CODE,,AUTO
         2 004726   377770 376007                    ANQ     131064,DL
         2 004727   015050 116007                    CMPQ    6696,DL
         2 004730   004733 600000 2                  TZE     s:20048
         2 004731   015060 116007                    CMPQ    6704,DL
         2 004732   004746 601000 2                  TNZ     NOT_WHEN_CMD

     1679    20045    1       ERR_CODE.ERR# = %E$BADCMDNAME
     1680    20046    1     THEN
     1681    20047    2     DO ;

     1682    20048    2        CALL CHK_4_WHEN_CMD ALTRET(NOT_WHEN_CMD) ;

  20048  2 004733   007035 701000 2                  TSX1    CHK_4_WHEN_CMD
         2 004734   004746 702000 2                  TSX2    NOT_WHEN_CMD

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:242  
     1683    20049    2        SEG$2.GETCMD$->GET$CMD.SKIP_PREPROCESS# = %YES# ;

  20049  2 004735   000000 470400 xsym               LDP0    SEG2$
         2 004736   000173 471500                    LDP1    123,,PR0
         2 004737   004000 236003                    LDQ     2048,DU
         2 004740   100006 256100                    ORSQ    6,,PR1

     1684    20050    2        SEG$2.GETCMD$->GET$CMD.TEXT_ = XUG$PARAMS.LAST ;

  20050  2 004741   000173 471500                    LDP1    123,,PR0
         2 004742   200025 473500                    LDP3    XUG$,,AUTO
         2 004743   300004 237100                    LDAQ    4,,PR3
         2 004744   100034 757100                    STAQ    28,,PR1

     1685    20051    2        GOTO READCC ;

  20051  2 004745   001025 710000 2                  TRA     READCC

     1686    20052    2        END ; /* Then Do */
     1687    20053
     1688    20054    1   NOT_WHEN_CMD:
     1689    20055        /*
     1690    20056              ***** If M$YC, get back properly.
     1691    20057        */
     1692    20058    1     IF B$JIT.CPFLAGS1.YCPMME

  20058  2 004746   000000 470400 xsym  NOT_WHEN_CMD LDP0    B$JIT$
         2 004747   000143 236100                    LDQ     99,,PR0
         2 004750   020000 316003                    CANQ    8192,DU
         2 004751   005266 601000 2                  TNZ     SYNTAX_ERR

     1693    20059    1     THEN
     1694    20060    1        GOTO SYNTAX_ERR ;
     1695    20061        /*
     1696    20062              ***** If !EOD then ignore the error. *****
     1697    20063        */
     1698    20064    1     IF ERR_CODE.FCG = E_BANG_EOD.FCG AND
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:243  

  20064  2 004752   200232 236100                    LDQ     ERR_CODE,,AUTO
         2 004753   000111 676000 1                  ERQ     E_BANG_EOD
         2 004754   777700 376003                    ANQ     -64,DU
         2 004755   004766 601000 2                  TNZ     s:20069
         2 004756   200232 236100                    LDQ     ERR_CODE,,AUTO
         2 004757   000111 676000 1                  ERQ     E_BANG_EOD
         2 004760   000077 376003                    ANQ     63,DU
         2 004761   004766 601000 2                  TNZ     s:20069
         2 004762   200232 236100                    LDQ     ERR_CODE,,AUTO
         2 004763   000111 676000 1                  ERQ     E_BANG_EOD
         2 004764   377770 376007                    ANQ     131064,DL
         2 004765   004545 600000 2                  TZE     CHK_BREAK

     1699    20065    1       ERR_CODE.MID = E_BANG_EOD.MID AND
     1700    20066    1       ERR_CODE.ERR# = E_BANG_EOD.ERR#
     1701    20067    1     THEN
     1702    20068    1        GOTO CHK_BREAK ;
     1703    20069    2     DO SELECT (B$TCB.ALT$->B$ALT.ERR.CODE) ;

  20069  2 004766   000000 471400 xsym               LDP1    B$TCB$
         2 004767   100000 473500                    LDP3    0,,PR1
         2 004770   300102 236100                    LDQ     66,,PR3
         2 004771   000003 772000                    QRL     3
         2 004772   037777 376007                    ANQ     16383,DL
         2 004773   000067 116007                    CMPQ    55,DL
         2 004774   005002 602000 2                  TNC     s:20069+12
         2 004775   005007 600000 2                  TZE     s:20075
         2 004776   000003 736000                    QLS     3
         2 004777   000700 116007                    CMPQ    448,DL
         2 005000   005036 601000 2                  TNZ     s:20094
         2 005001   005007 710000 2                  TRA     s:20075
         2 005002   300102 236100                    LDQ     66,,PR3
         2 005003   377770 376007                    ANQ     131064,DL
         2 005004   000060 116007                    CMPQ    48,DL
         2 005005   005036 601000 2                  TNZ     s:20094
         2 005006   005013 710000 2                  TRA     s:20081
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:244  

     1704    20070        /*
     1705    20071             ***** If IBEX cannot read from the terminal or
     1706    20072                   write to it then logoff the user ...
     1707    20073        */
     1708    20074    2        SELECT (%E$READ, %E$WRITE);

     1709    20075    2        CALL CPA$BYE;

  20075  2 005007   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 005010   000000 701000 xent               TSX1    CPA$BYE
         2 005011   000000 011000                    NOP     0
         2 005012   005036 710000 2                  TRA     s:20094

     1710    20076        /*
     1711    20077             ***** If END-OF-FILE then online users get an error msg.
     1712    20078                   All others get logged off ...
     1713    20079        */
     1714    20080    2        SELECT (%E$EOF);

     1715    20081    3        DO CASE(B$JIT.MODE);

  20081  2 005013   000000 236100                    LDQ     0,,PR0
         2 005014   000040 772000                    QRL     32
         2 005015   000005 116007                    CMPQ    5,DL
         2 005016   005020 602006 2                  TNC     s:20081+5,QL
         2 005017   005031 710000 2                  TRA     s:20085
         2 005020   005031 710000 2                  TRA     s:20085
         2 005021   005025 710000 2                  TRA     s:20083
         2 005022   005025 710000 2                  TRA     s:20083
         2 005023   005031 710000 2                  TRA     s:20085
         2 005024   005025 710000 2                  TRA     s:20083

     1716    20082    3         CASE(%M_BATCH#, %M_GHOST#, %M_TP#);

     1717    20083    3           CALL CPA$BYE;

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:245  
  20083  2 005025   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 005026   000000 701000 xent               TSX1    CPA$BYE
         2 005027   000000 011000                    NOP     0
         2 005030   005036 710000 2                  TRA     s:20094

     1718    20084    3         CASE(ELSE);

     1719    20085    3           CALL CPC$WRITEMSGE (E_INPUT) ;

  20085  2 005031   000065 630400 3                  EPPR0   53
         2 005032   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 005033   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 005034   000000 011000                    NOP     0

     1720    20086    3           GOTO CHK_BREAK ;

  20086  2 005035   004545 710000 2                  TRA     CHK_BREAK

     1721    20087    3         END;

     1722    20088        /*E*    ERROR: CPA-E$INPUT-0
     1723    20089                MESSAGE:   Input error - retry
     1724    20090                DESCRIPTION: User typed an esc f
     1725    20091        */
     1726    20092    2        END; /* do select */

     1727    20093        /**/
     1728    20094    2     DO SELECT (B$TCB.ALT$->B$ALT.ERR.CODE) ;

  20094  2 005036   000000 470400 xsym               LDP0    B$TCB$
         2 005037   000000 471500                    LDP1    0,,PR0
         2 005040   100102 236100                    LDQ     66,,PR1
         2 005041   000003 772000                    QRL     3
         2 005042   037777 376007                    ANQ     16383,DL
         2 005043   000014 116007                    CMPQ    12,DL
         2 005044   005062 602000 2                  TNC     s:20094+20
         2 005045   005101 600000 2                  TZE     s:20096
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:246  
         2 005046   000123 116007                    CMPQ    83,DL
         2 005047   005055 602000 2                  TNC     s:20094+15
         2 005050   005265 600000 2                  TZE     s:20144
         2 005051   000003 736000                    QLS     3
         2 005052   026500 116007                    CMPQ    11584,DL
         2 005053   005220 601000 2                  TNZ     s:20134
         2 005054   005112 710000 2                  TRA     s:20103
         2 005055   100102 236100                    LDQ     66,,PR1
         2 005056   377770 376007                    ANQ     131064,DL
         2 005057   000150 116007                    CMPQ    104,DL
         2 005060   005220 601000 2                  TNZ     s:20134
         2 005061   005101 710000 2                  TRA     s:20096
         2 005062   100102 236100                    LDQ     66,,PR1
         2 005063   000003 772000                    QRL     3
         2 005064   037777 376007                    ANQ     16383,DL
         2 005065   000010 116007                    CMPQ    8,DL
         2 005066   005074 602000 2                  TNC     s:20094+30
         2 005067   005105 600000 2                  TZE     s:20100
         2 005070   000003 736000                    QLS     3
         2 005071   000110 116007                    CMPQ    72,DL
         2 005072   005220 601000 2                  TNZ     s:20134
         2 005073   005105 710000 2                  TRA     s:20100
         2 005074   100102 236100                    LDQ     66,,PR1
         2 005075   377770 376007                    ANQ     131064,DL
         2 005076   000070 116007                    CMPQ    56,DL
         2 005077   005220 601000 2                  TNZ     s:20134
         2 005100   005105 710000 2                  TRA     s:20100

     1729    20095    2        SELECT (%E$LDSC, %E$DACTR);

     1730    20096    2        CALL CPA$BYE;

  20096  2 005101   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 005102   000000 701000 xent               TSX1    CPA$BYE
         2 005103   000000 011000                    NOP     0
         2 005104   005265 710000 2                  TRA     s:20144

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:247  
     1731    20097
     1732    20098
     1733    20099    2        SELECT (%E$LD, %E$IOERR, %E$DI) ;

     1734    20100    2        CALL CPC$WRITEMSGE (E_INPUT) ;

  20100  2 005105   000065 630400 3                  EPPR0   53
         2 005106   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 005107   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 005110   000000 011000                    NOP     0
         2 005111   005265 710000 2                  TRA     s:20144

     1735    20101
     1736    20102    2        SELECT (%E$DATDLT_OPTWND) ;

     1737    20103    2        IF TRIED_2_XPAND_WND

  20103  2 005112   200027 234100                    SZN     TRIED_2_XPAND_WND,,AUTO
         2 005113   005117 605000 2                  TPL     s:20106

     1738    20104    2        THEN              /* Stop IBEX from looping. */
     1739    20105    2           CALL CPA$BYE ;

  20105  2 005114   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 005115   000000 701000 xent               TSX1    CPA$BYE
         2 005116   000000 011000                    NOP     0

     1740    20106    2        FPT_TRMCTL = CFPT_TRMCTL ;

  20106  2 005117   000100 100400                    MLR     fill='000'O
         2 005120   000000 000040 xsym               ADSC9   CFPT_TRMCTL              cn=0,n=32
         2 005121   200222 000040                    ADSC9   FPT_TRMCTL,,AUTO         cn=0,n=32

     1741    20107    2        FPT_TRMCTL.V_ = VECTOR(FPT_TRMCTL.V) ;

  20107  2 005122   000042 235000 3                  LDA     34
         2 005123   200462 452500                    STP2    FID_RES+1,,AUTO
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:248  
         2 005124   200462 236100                    LDQ     FID_RES+1,,AUTO
         2 005125   000230 036003                    ADLQ    152,DU
         2 005126   200222 757100                    STAQ    FPT_TRMCTL,,AUTO

     1742    20108    2        FPT_TRMCTL.V.DCB# = B$TCB.ALT$->B$ALT.DCB# ;

  20108  2 005127   000000 470400 xsym               LDP0    B$TCB$
         2 005130   000000 471500                    LDP1    0,,PR0
         2 005131   100101 720100                    LXL0    65,,PR1
         2 005132   200230 740100                    STX0    FPT_TRMCTL+6,,AUTO

     1743    20109    2        FPT_TRMCTL.V.VLPTYPE# = %TRMCTL_WINDOW# ;

  20109  2 005133   000001 221003                    LDX1    1,DU
         2 005134   200230 441100                    SXL1    FPT_TRMCTL+6,,AUTO

     1744    20110    2        FPT_TRMCTL.TRMCTL_ = VECTOR(VLP_WINDOW) ;

  20110  2 005135   000024 235000 3                  LDA     20
         2 005136   200462 452500                    STP2    FID_RES+1,,AUTO
         2 005137   200462 236100                    LDQ     FID_RES+1,,AUTO
         2 005140   000330 036003                    ADLQ    216,DU
         2 005141   200226 757100                    STAQ    FPT_TRMCTL+4,,AUTO

     1745    20111    2        VLP_WINDOW = CVLP_WINDOW ;

  20111  2 005142   000100 100400                    MLR     fill='000'O
         2 005143   000000 000040 xsym               ADSC9   CVLP_WINDOW              cn=0,n=32
         2 005144   200330 000040                    ADSC9   VLP_WINDOW,,AUTO         cn=0,n=32

     1746    20112    2        VLP_WINDOW.WIDTH# = 80 + %WINDOW_ABSVAL# ;

  20112  2 005145   020120 222003                    LDX2    8272,DU
         2 005146   200331 442100                    SXL2    VLP_WINDOW+1,,AUTO

     1747    20113    2        VLP_WINDOW.LENGTH# = 2 + %WINDOW_ABSVAL# ;

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:249  
  20113  2 005147   020002 223003                    LDX3    8194,DU
         2 005150   200331 743100                    STX3    VLP_WINDOW+1,,AUTO

     1748    20114    3        CALL M$STRMCTL (FPT_TRMCTL) WHENRETURN DO ;

  20114  2 005151   200222 630500                    EPPR0   FPT_TRMCTL,,AUTO
         2 005152   560000 713400                    CLIMB   alt,+57344
         2 005153   401000 401760                    pmme    nvectors=3
         2 005154   005160 702000 2                  TSX2    s:20118

     1749    20115    3           ERR_CODE = E_EMPTYWND ;

  20115  2 005155   000113 236000 1                  LDQ     E_EMPTYWND
         2 005156   200232 756100                    STQ     ERR_CODE,,AUTO

     1750    20116    3           END ; /* Whenreturn Do */

  20116  2 005157   005164 710000 2                  TRA     s:20120

     1751    20117    3        WHENALTRETURN DO ;

     1752    20118    3           ERR_CODE = B$TCB.ALT$->B$ALT.ERR ;

  20118  2 005160   000000 470400 xsym               LDP0    B$TCB$
         2 005161   000000 471500                    LDP1    0,,PR0
         2 005162   100102 236100                    LDQ     66,,PR1
         2 005163   200232 756100                    STQ     ERR_CODE,,AUTO

     1753    20119    3           END ; /* Whenaltreturn Do */

     1754    20120    2        TRIED_2_XPAND_WND = %YES# ;

  20120  2 005164   400000 236003                    LDQ     -131072,DU
         2 005165   200027 756100                    STQ     TRIED_2_XPAND_WND,,AUTO

     1755    20121    2        CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF), 511, ERR_CODE) ;

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:250  
  20121  2 005166   000000 236000 xsym               LDQ     SEG2$
         2 005167   000003 036003                    ADLQ    3,DU
         2 005170   200462 756100                    STQ     FID_RES+1,,AUTO
         2 005171   200232 630500                    EPPR0   ERR_CODE,,AUTO
         2 005172   200465 450500                    STP0    FID_RES+4,,AUTO
         2 005173   000067 236000 3                  LDQ     55
         2 005174   200464 756100                    STQ     FID_RES+3,,AUTO
         2 005175   200462 631500                    EPPR1   FID_RES+1,,AUTO
         2 005176   200463 451500                    STP1    FID_RES+2,,AUTO
         2 005177   200463 630500                    EPPR0   FID_RES+2,,AUTO
         2 005200   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 005201   000000 701000 xent               TSX1    CXP$POSTERR
         2 005202   000000 011000                    NOP     0

     1756    20122    2        CALL CPR$RPTERR (SEG$2.ERRBUF, 0) ;

  20122  2 005203   000010 236000 3                  LDQ     8
         2 005204   200463 756100                    STQ     FID_RES+2,,AUTO
         2 005205   000000 236000 xsym               LDQ     SEG2$
         2 005206   000003 036003                    ADLQ    3,DU
         2 005207   200462 756100                    STQ     FID_RES+1,,AUTO
         2 005210   200462 630500                    EPPR0   FID_RES+1,,AUTO
         2 005211   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 005212   000000 701000 xent               TSX1    CPR$RPTERR
         2 005213   000000 011000                    NOP     0

     1757    20123    2        ADDR(SEG$2.ERRBUF)->ERR$BLK.FIRST = 0 ;

  20123  2 005214   000000 470400 xsym               LDP0    SEG2$
         2 005215   000004 450100                    STZ     4,,PR0

     1758    20124    2        ADDR(SEG$2.ERRBUF)->ERR$BLK.NEXT = 0 ;

  20124  2 005216   000005 450100                    STZ     5,,PR0
         2 005217   005265 710000 2                  TRA     s:20144

     1759    20125
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:251  
     1760    20126        /*E*       ERROR:   CPA-E$EMPTYWND-E
     1761    20127                   MESSAGE: IBEX has expanded its window length to 2.
     1762    20128            MESSAGE1: IBEX tried to read from an empty window. IBEX opened a 2 line window.
     1763    20129                   DESCRIPTION: IBEX tried to read from an empty window.
     1764    20130                                IBEX opened a two line window.
     1765    20131        */
     1766    20132
     1767    20133    2        SELECT (ELSE) ;

     1768    20134    2     CALL CPA$ECHOCC (CMD_SOURCE,%NO#) ; /* Echo thru M$LL */

  20134  2 005220   000010 236000 3                  LDQ     8
         2 005221   200463 756100                    STQ     FID_RES+2,,AUTO
         2 005222   200011 631500                    EPPR1   CMD_SOURCE,,AUTO
         2 005223   200462 451500                    STP1    FID_RES+1,,AUTO
         2 005224   200462 630500                    EPPR0   FID_RES+1,,AUTO
         2 005225   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 005226   000000 701000 xent               TSX1    CPA$ECHOCC
         2 005227   000000 011000                    NOP     0

     1769    20135    2     CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF), P$PCB.HI_CHAR,

  20135  2 005230   000000 470400 xsym               LDP0    SEG2$
         2 005231   000173 471500                    LDP1    123,,PR0
         2 005232   000000 236000 xsym               LDQ     SEG2$
         2 005233   000003 036003                    ADLQ    3,DU
         2 005234   200462 756100                    STQ     FID_RES+1,,AUTO
         2 005235   100001 633500                    EPPR3   1,,PR1
         2 005236   200465 453500                    STP3    FID_RES+4,,AUTO
         2 005237   200024 236100                    LDQ     P$PCB$,,AUTO
         2 005240   000012 036003                    ADLQ    10,DU
         2 005241   200464 756100                    STQ     FID_RES+3,,AUTO
         2 005242   200462 631500                    EPPR1   FID_RES+1,,AUTO
         2 005243   200463 451500                    STP1    FID_RES+2,,AUTO
         2 005244   200463 630500                    EPPR0   FID_RES+2,,AUTO
         2 005245   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 005246   000000 701000 xent               TSX1    CXP$POSTERR
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:252  
         2 005247   000000 011000                    NOP     0

     1770    20136    2       SEG$2.GETCMD$->GET$CMD.ERR#) ;
     1771    20137    2     CALL CPR$RPTERR (SEG$2.ERRBUF, 0) ;

  20137  2 005250   000010 236000 3                  LDQ     8
         2 005251   200463 756100                    STQ     FID_RES+2,,AUTO
         2 005252   000000 236000 xsym               LDQ     SEG2$
         2 005253   000003 036003                    ADLQ    3,DU
         2 005254   200462 756100                    STQ     FID_RES+1,,AUTO
         2 005255   200462 630500                    EPPR0   FID_RES+1,,AUTO
         2 005256   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 005257   000000 701000 xent               TSX1    CPR$RPTERR
         2 005260   000000 011000                    NOP     0

     1772    20138    2     ADDR(SEG$2.ERRBUF) -> ERR$BLK.FIRST = 0 ;

  20138  2 005261   000000 470400 xsym               LDP0    SEG2$
         2 005262   000004 450100                    STZ     4,,PR0

     1773    20139    2     ADDR(SEG$2.ERRBUF) -> ERR$BLK.NEXT = 0 ;

  20139  2 005263   000005 450100                    STZ     5,,PR0
         2 005264   005265 710000 2                  TRA     s:20144

     1774    20140
     1775    20141    2     SELECT (%E$PMMEINT) ;

     1776    20142
     1777    20143    2        END ; /* Do Select */

     1778    20144    1     GOTO CHK_BREAK;

  20144  2 005265   004545 710000 2                  TRA     CHK_BREAK

     1779    20145        %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:253  
     1780    20146        /**********************************************************************
     1781    20147        **     PURPOSE: To process errors detected by X$PARSE
     1782    20148               CALL:   Altret(parserr)
     1783    20149               INTERFACE: CPC$WRITEMSGE
     1784    20150               INPUT:  PCB.ERROR
     1785    20151               OUTPUT: Error message output to user
     1786    20152               DESCRIPTION: If a syntax error is detected while parsing the command
     1787    20153                       line, parserr  is called by X$PARSE altret for error
     1788    20154                       processing. The error returned by the parser is output
     1789    20155                       to the user. Batch users are aborted. Users of M$YC are
     1790    20156                       altreturned to, all others are prompted for next command.
     1791    20157        **
     1792    20158        **********************************************************************/
     1793    20159    1   SYNTAX_ERR:
     1794    20160    1     ADDR(SEG$2.ERRBUF) -> ERR$BLK.FIRST = 0;   /* Only X$PARSE errors impt */

  20160  2 005266   000000 470400 xsym  SYNTAX_ERR   LDP0    SEG2$
         2 005267   000004 450100                    STZ     4,,PR0

     1795    20161    1     ADDR(SEG$2.ERRBUF) -> ERR$BLK.NEXT = 0;   /* Only X$PARSE errors impt */

  20161  2 005270   000005 450100                    STZ     5,,PR0

     1796    20162        /*
     1797    20163             ***** If a syntax error then call CXP$POSTERR so
     1798    20164                   that an arrow can be printed under the echoed command...
     1799    20165        */
     1800    20166    1     ERR_CODE = SEG$2.GETCMD$->GET$CMD.ERR# ;

  20166  2 005271   000173 471500                    LDP1    123,,PR0
         2 005272   100001 236100                    LDQ     1,,PR1
         2 005273   200232 756100                    STQ     ERR_CODE,,AUTO

     1801    20167    1     IF ERR_CODE.ERR# = %E$SYNERR

  20167  2 005274   200232 236100                    LDQ     ERR_CODE,,AUTO
         2 005275   377770 376007                    ANQ     131064,DL
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:254  
         2 005276   000010 116007                    CMPQ    8,DL
         2 005277   005423 601000 2                  TNZ     s:20196

     1802    20168    1     THEN
     1803    20169    1        IF FIRST_SYNTAX_ERR AND

  20169  2 005300   200026 234100                    SZN     FIRST_SYNTAX_ERR,,AUTO
         2 005301   005350 605000 2                  TPL     s:20185
         2 005302   000002 720100                    LXL0    2,,PR0
         2 005303   000002 100003                    CMPX0   2,DU
         2 005304   005350 601000 2                  TNZ     s:20185
         2 005305   200025 471500                    LDP1    XUG$,,AUTO
         2 005306   100001 473500                    LDP3    1,,PR1
         2 005307   300000 236100                    LDQ     0,,PR3
         2 005310   777000 376003                    ANQ     -512,DU
         2 005311   041000 116003                    CMPQ    16896,DU
         2 005312   005350 601000 2                  TNZ     s:20185

     1804    20170    1          SEG$2.LASTPROMPT = PRMT_I AND
     1805    20171    1          SUBSTR(VBASE(XUG$PARAMS.BUFVEC)->CP$BUFF,0,1) = '!'
     1806    20172    1        THEN
     1807    20173    2        DO ;

     1808    20174    2           SEG$2.CPBUFF$->CP$BUFF = SUBSTR(VBASE(XUG$PARAMS.BUFVEC)->CP$BUFF,

  20174  2 005313   000171 474500                    LDP4    121,,PR0
         2 005314   100013 475500                    LDP5    11,,PR1
         2 005315   000100 101500                    MRL     fill='000'O
         2 005316   500000 200001                    ADSC9   0,,PR5                   cn=1,n=1
         2 005317   200462 000002                    ADSC9   FID_RES+1,,AUTO          cn=0,n=2
         2 005320   200462 220100                    LDX0    FID_RES+1,,AUTO
         2 005321   777777 621010                    EAX1    -1,X0
         2 005322   040100 100540                    MLR     fill='040'O
         2 005323   300000 200011                    ADSC9   0,,PR3                   cn=1,n=*X1
         2 005324   400000 000400                    ADSC9   0,,PR4                   cn=0,n=256

     1809    20175    2             1,VBASE(XUG$PARAMS.RLTVEC)->XUG$RLT(1)-1) ;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:255  
     1810    20176    2           VBASE(SEG$2.GETCMD$->GET$CMD.TEXT_) = SEG$2.CPBUFF$ ;

  20176  2 005325   000173 473500                    LDP3    123,,PR0
         2 005326   000171 236100                    LDQ     121,,PR0
         2 005327   300035 756100                    STQ     29,,PR3

     1811    20177    2           VBOUND(SEG$2.GETCMD$->GET$CMD.TEXT_) =

  20177  2 005330   000173 473500                    LDP3    123,,PR0
         2 005331   100013 474500                    LDP4    11,,PR1
         2 005332   000100 101500                    MRL     fill='000'O
         2 005333   400000 200001                    ADSC9   0,,PR4                   cn=1,n=1
         2 005334   200462 000004                    ADSC9   FID_RES+1,,AUTO          cn=0,n=4
         2 005335   200462 236100                    LDQ     FID_RES+1,,AUTO
         2 005336   000002 136007                    SBLQ    2,DL
         2 005337   000020 736000                    QLS     16
         2 005340   300034 676100                    ERQ     28,,PR3
         2 005341   000034 376000 xsym               ANQ     B_VECTNIL+28
         2 005342   300034 656100                    ERSQ    28,,PR3

     1812    20178    2             VBASE(XUG$PARAMS.RLTVEC)->XUG$RLT(1)-2;
     1813    20179    2           SEG$2.GETCMD$->GET$CMD.SKIP_PREPROCESS# = %YES# ;

  20179  2 005343   000173 473500                    LDP3    123,,PR0
         2 005344   004000 236003                    LDQ     2048,DU
         2 005345   300006 256100                    ORSQ    6,,PR3

     1814    20180    2           FIRST_SYNTAX_ERR = %NO# ;

  20180  2 005346   200026 450100                    STZ     FIRST_SYNTAX_ERR,,AUTO

     1815    20181    2           GOTO PROMPT ;

  20181  2 005347   000705 710000 2                  TRA     PROMPT

     1816    20182    2           END;  /* Then Do */
     1817    20183    1        ELSE
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:256  
     1818    20184    2        DO ;

     1819    20185    2           IF (CMD_SOURCE = XEQFILE OR CMD_SOURCE = BATCHJCL)

  20185  2 005350   200011 235100                    LDA     CMD_SOURCE,,AUTO
         2 005351   000003 115007                    CMPA    3,DL
         2 005352   005355 600000 2                  TZE     s:20185+5
         2 005353   000002 115007                    CMPA    2,DL
         2 005354   005361 601000 2                  TNZ     s:20189
         2 005355   000173 471500                    LDP1    123,,PR0
         2 005356   100006 236100                    LDQ     6,,PR1
         2 005357   020000 316003                    CANQ    8192,DU
         2 005360   001100 600000 2                  TZE     DATA_IGNORED_LOOP

     1820    20186    2             AND NOT SEG$2.GETCMD$->GET$CMD.RCVD_PROMPT#
     1821    20187    2           THEN
     1822    20188    2              GOTO DATA_IGNORED_LOOP ;
     1823    20189    2           IF P$PCB.ERROR ~= '0'B

  20189  2 005361   200024 471500                    LDP1    P$PCB$,,AUTO
         2 005362   100006 235100                    LDA     6,,PR1
         2 005363   005404 600000 2                  TZE     s:20193

     1824    20190    2           THEN
     1825    20191    2              CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF),P$PCB.HI_CHAR,P$PCB.ERROR);

  20191  2 005364   000000 236000 xsym               LDQ     SEG2$
         2 005365   000003 036003                    ADLQ    3,DU
         2 005366   200462 756100                    STQ     FID_RES+1,,AUTO
         2 005367   200024 236100                    LDQ     P$PCB$,,AUTO
         2 005370   000006 036003                    ADLQ    6,DU
         2 005371   200465 756100                    STQ     FID_RES+4,,AUTO
         2 005372   200024 236100                    LDQ     P$PCB$,,AUTO
         2 005373   000012 036003                    ADLQ    10,DU
         2 005374   200464 756100                    STQ     FID_RES+3,,AUTO
         2 005375   200462 633500                    EPPR3   FID_RES+1,,AUTO
         2 005376   200463 453500                    STP3    FID_RES+2,,AUTO
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:257  
         2 005377   200463 630500                    EPPR0   FID_RES+2,,AUTO
         2 005400   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 005401   000000 701000 xent               TSX1    CXP$POSTERR
         2 005402   000000 011000                    NOP     0
         2 005403   005444 710000 2                  TRA     CONTEXT_ERR

     1826    20192    2           ELSE              /* Just post Syntax Error */
     1827    20193    2              CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF),P$PCB.HI_CHAR,ERR_CODE);

  20193  2 005404   000000 236000 xsym               LDQ     SEG2$
         2 005405   000003 036003                    ADLQ    3,DU
         2 005406   200462 756100                    STQ     FID_RES+1,,AUTO
         2 005407   200232 633500                    EPPR3   ERR_CODE,,AUTO
         2 005410   200465 453500                    STP3    FID_RES+4,,AUTO
         2 005411   200024 236100                    LDQ     P$PCB$,,AUTO
         2 005412   000012 036003                    ADLQ    10,DU
         2 005413   200464 756100                    STQ     FID_RES+3,,AUTO
         2 005414   200462 634500                    EPPR4   FID_RES+1,,AUTO
         2 005415   200463 454500                    STP4    FID_RES+2,,AUTO
         2 005416   200463 630500                    EPPR0   FID_RES+2,,AUTO
         2 005417   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 005420   000000 701000 xent               TSX1    CXP$POSTERR
         2 005421   000000 011000                    NOP     0

     1828    20194    2           END ; /* Else Do */

  20194  2 005422   005444 710000 2                  TRA     CONTEXT_ERR

     1829    20195    1     ELSE
     1830    20196    1        IF ERR_CODE.FCG ~= '0320'O   /* Not 'CP' type. */

  20196  2 005423   200232 236100                    LDQ     ERR_CODE,,AUTO
         2 005424   777700 376003                    ANQ     -64,DU
         2 005425   032000 116003                    CMPQ    13312,DU
         2 005426   005444 600000 2                  TZE     CONTEXT_ERR

     1831    20197    1        THEN
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:258  
     1832    20198    1           CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF),511,ERR_CODE);

  20198  2 005427   000000 236000 xsym               LDQ     SEG2$
         2 005430   000003 036003                    ADLQ    3,DU
         2 005431   200462 756100                    STQ     FID_RES+1,,AUTO
         2 005432   200232 631500                    EPPR1   ERR_CODE,,AUTO
         2 005433   200465 451500                    STP1    FID_RES+4,,AUTO
         2 005434   000067 236000 3                  LDQ     55
         2 005435   200464 756100                    STQ     FID_RES+3,,AUTO
         2 005436   200462 633500                    EPPR3   FID_RES+1,,AUTO
         2 005437   200463 453500                    STP3    FID_RES+2,,AUTO
         2 005440   200463 630500                    EPPR0   FID_RES+2,,AUTO
         2 005441   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 005442   000000 701000 xent               TSX1    CXP$POSTERR
         2 005443   000000 011000                    NOP     0

     1833    20199    1   CONTEXT_ERR:
     1834    20200    1     B$JIT.STEPCC = %CC_ERR# ;

  20200  2 005444   000000 470400 xsym  CONTEXT_ERR  LDP0    B$JIT$
         2 005445   000004 236003                    LDQ     4,DU
         2 005446   000316 552120                    STBQ    206,'20'O,PR0

     1835    20201    1     CALL CPA$ECHOCC (CMD_SOURCE,%NO#) ; /* Echo thru M$LL */

  20201  2 005447   000010 236000 3                  LDQ     8
         2 005450   200463 756100                    STQ     FID_RES+2,,AUTO
         2 005451   200011 631500                    EPPR1   CMD_SOURCE,,AUTO
         2 005452   200462 451500                    STP1    FID_RES+1,,AUTO
         2 005453   200462 630500                    EPPR0   FID_RES+1,,AUTO
         2 005454   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 005455   000000 701000 xent               TSX1    CPA$ECHOCC
         2 005456   000000 011000                    NOP     0

     1836    20202        /*
     1837    20203             ***** Print error messages ...
     1838    20204        */
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:259  
     1839    20205    1     IF ADDR(SEG$2.ERRBUF) -> ERR$BLK.FIRST ~= 0

  20205  2 005457   000000 470400 xsym               LDP0    SEG2$
         2 005460   000004 235100                    LDA     4,,PR0
         2 005461   005533 600000 2                  TZE     s:20228

     1840    20206    1     THEN   /* Print errors */
     1841    20207    2     DO;

     1842    20208    2        P$PCB.HI_CHAR = ADDR(SEG$2.ERRBUF) -> ERR$BLK.BLK.CHARPOS(1);

  20208  2 005462   200024 471500                    LDP1    P$PCB$,,AUTO
         2 005463   000010 236100                    LDQ     8,,PR0
         2 005464   000033 772000                    QRL     27
         2 005465   100012 756100                    STQ     10,,PR1

     1843    20209    2        IF B$JIT.CPFLAGS1.YCPMME

  20209  2 005466   000000 473400 xsym               LDP3    B$JIT$
         2 005467   300143 236100                    LDQ     99,,PR3
         2 005470   020000 316003                    CANQ    8192,DU
         2 005471   005514 600000 2                  TZE     s:20222

     1844    20210    2        THEN
     1845    20211    2           IF NOT B$PS1$ -> FPTV$YC.NOERR

  20211  2 005472   000000 474400 xsym               LDP4    B$PS1$
         2 005473   400000 236100                    LDQ     0,,PR4
         2 005474   200000 316003                    CANQ    65536,DU
         2 005475   005525 601000 2                  TNZ     s:20223

     1846    20212    2           THEN
     1847    20213    3           DO;

     1848    20214    3              SEG$2.GETCMD$->GET$CMD.EPOS# = P$PCB.HI_CHAR;

  20214  2 005476   000173 475500                    LDP5    123,,PR0
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:260  
         2 005477   100012 720100                    LXL0    10,,PR1
         2 005500   500006 440100                    SXL0    6,,PR5

     1849    20215    3              SEG$2.GETCMD$->GET$CMD.USE_EPOS# = %YES#;

  20215  2 005501   000173 475500                    LDP5    123,,PR0
         2 005502   400000 236003                    LDQ     -131072,DU
         2 005503   500006 256100                    ORSQ    6,,PR5

     1850    20216    3              CALL CXG$ERRPTR (SEG$2.GETCMD$->GET$CMD) WHENALTRETURN

  20216  2 005504   000173 475500                    LDP5    123,,PR0
         2 005505   200462 455500                    STP5    FID_RES+1,,AUTO
         2 005506   200462 630500                    EPPR0   FID_RES+1,,AUTO
         2 005507   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 005510   000000 701000 xent               TSX1    CXG$ERRPTR
         2 005511   005513 702000 2                  TSX2    s:20219
         2 005512   005513 710000 2                  TRA     s:20219

     1851    20217    4              DO;

     1852    20218    4                 END;

     1853    20219    3              END;  /* Then Do */

  20219  2 005513   005525 710000 2                  TRA     s:20223

     1854    20220    2           ELSE;
     1855    20221    2        ELSE
     1856    20222    2           CALL CPR$RPTERR (SEG$2.ERRBUF,0);

  20222  2 005514   000010 236000 3                  LDQ     8
         2 005515   200463 756100                    STQ     FID_RES+2,,AUTO
         2 005516   000000 236000 xsym               LDQ     SEG2$
         2 005517   000003 036003                    ADLQ    3,DU
         2 005520   200462 756100                    STQ     FID_RES+1,,AUTO
         2 005521   200462 630500                    EPPR0   FID_RES+1,,AUTO
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:261  
         2 005522   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 005523   000000 701000 xent               TSX1    CPR$RPTERR
         2 005524   000000 011000                    NOP     0

     1857    20223    2        ERR_CODE = ADDR(SEG$2.ERRBUF) -> ERR$BLK.BLK.ERROR(1);

  20223  2 005525   000000 470400 xsym               LDP0    SEG2$
         2 005526   000011 236100                    LDQ     9,,PR0
         2 005527   200232 756100                    STQ     ERR_CODE,,AUTO

     1858    20224    2        ADDR(SEG$2.ERRBUF) -> ERR$BLK.FIRST = 0;

  20224  2 005530   000004 450100                    STZ     4,,PR0

     1859    20225    2        ADDR(SEG$2.ERRBUF) -> ERR$BLK.NEXT = 0;

  20225  2 005531   000005 450100                    STZ     5,,PR0

     1860    20226    2        END;

  20226  2 005532   005545 710000 2                  TRA     s:20234

     1861    20227    1     ELSE /* some other error */
     1862    20228    1        IF NOT B$JIT.CPFLAGS1.YCPMME

  20228  2 005533   000000 471400 xsym               LDP1    B$JIT$
         2 005534   100143 236100                    LDQ     99,,PR1
         2 005535   020000 316003                    CANQ    8192,DU
         2 005536   005545 601000 2                  TNZ     s:20234

     1863    20229    1        THEN
     1864    20230    1           CALL CPC$WRITEMSGE (ERR_CODE);

  20230  2 005537   200232 633500                    EPPR3   ERR_CODE,,AUTO
         2 005540   200462 453500                    STP3    FID_RES+1,,AUTO
         2 005541   200462 630500                    EPPR0   FID_RES+1,,AUTO
         2 005542   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:262  
         2 005543   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 005544   000000 011000                    NOP     0

     1865    20231        /*
     1866    20232             ***** Post error position for M$YC with RESULTS requested.
     1867    20233        */
     1868    20234    1     IF (B$JIT.CPFLAGS1.YCPMME ) AND B$JIT.YC2SZ >0

  20234  2 005545   000000 470400 xsym               LDP0    B$JIT$
         2 005546   000143 236100                    LDQ     99,,PR0
         2 005547   020000 316003                    CANQ    8192,DU
         2 005550   005557 600000 2                  TZE     ERRXIT
         2 005551   000170 720100                    LXL0    120,,PR0
         2 005552   005557 600000 2                  TZE     ERRXIT

     1869    20235    1     THEN
     1870    20236    1        B$PS2$->VLR$YC.CPOS = P$PCB.HI_CHAR ;

  20236  2 005553   200024 471500                    LDP1    P$PCB$,,AUTO
         2 005554   000000 473400 xsym               LDP3    B$PS2$
         2 005555   100012 235100                    LDA     10,,PR1
         2 005556   300000 755100                    STA     0,,PR3

  20234  2 005557                       ERRXIT       null
     1871    20237
     1872    20238    1   ERRXIT: ;
     1873    20239        /*
     1874    20240             ***** If M$YC pmme user, then altreturn...
     1875    20241        */
     1876    20242    1     IF B$JIT.CPFLAGS1 & (%CP_YCPMME# | %CP_LNKPMME#)

  20242  2 005557   000141 236000 1                  LDQ     XLIM_TBL+18
         2 005560   000142 276000 1                  ORQ     XLIM_TBL+19
         2 005561   000000 470400 xsym               LDP0    B$JIT$
         2 005562   000143 376100                    ANQ     99,,PR0
         2 005563   005565 600000 2                  TZE     s:20257

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:263  
     1877    20243    1     THEN
     1878    20244    2     DO ;

     1879    20245    2        GOTO E_M$YCPMME;

  20245  2 005564   005642 710000 2                  TRA     E_M$YCPMME

     1880    20246    2        END ; /* Then Do */
     1881    20247        /*
     1882    20248             ***** Batch users are logged off...
     1883    20249        */
     1884    20250        /*E*    ERROR: CPA-E$ABRTBATCH-C
     1885    20251                MESSAGE: BATCH/XEQ has been aborted because of errors.
     1886    20252        */
     1887    20253        /*
     1888    20254             ***** If SEG$2.FLAGS.ABORT has been set then
     1889    20255                   abort BATCH or XEQ streams ...
     1890    20256        */
     1891    20257    1     IF SEG$2.FLAGS.ABORT

  20257  2 005565   000000 471400 xsym               LDP1    SEG2$
         2 005566   100000 236100                    LDQ     0,,PR1
         2 005567   000400 316003                    CANQ    256,DU
         2 005570   005634 600000 2                  TZE     s:20283

     1892    20258    1     THEN
     1893    20259    2     DO;

     1894    20260    2        IF B$JIT.MODE = %M_BATCH#

  20260  2 005571   000000 236100                    LDQ     0,,PR0
         2 005572   740000 376003                    ANQ     -16384,DU
         2 005573   040000 116003                    CMPQ    16384,DU
         2 005574   005614 601000 2                  TNZ     s:20270

     1895    20261    2        THEN
     1896    20262    3        DO;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:264  

     1897    20263    3           CALL CPC$WRITEMSGE (E_ABRTBATCH);

  20263  2 005575   000040 630400 3                  EPPR0   32
         2 005576   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 005577   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 005600   000000 011000                    NOP     0

     1898    20264    3           B$JIT.USRRNST = %RS_ABRT#;

  20264  2 005601   000000 470400 xsym               LDP0    B$JIT$
         2 005602   010000 236007                    LDQ     4096,DL
         2 005603   000145 552110                    STBQ    101,'10'O,PR0

     1899    20265    3           IF B$JIT.STEPCC = 0

  20265  2 005604   000316 236100                    LDQ     206,,PR0
         2 005605   000777 316003                    CANQ    511,DU
         2 005606   005611 601000 2                  TNZ     s:20268

     1900    20266    3           THEN
     1901    20267    3              B$JIT.STEPCC = %CC_XXX# ;

  20267  2 005607   000006 236003                    LDQ     6,DU
         2 005610   000316 552120                    STBQ    206,'20'O,PR0

     1902    20268    3           CALL CPA$BYE;

  20268  2 005611   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 005612   000000 701000 xent               TSX1    CPA$BYE
         2 005613   000000 011000                    NOP     0

     1903    20269    3           END;

     1904    20270    2        IF CMD_SOURCE = XEQFILE

  20270  2 005614   200011 235100                    LDA     CMD_SOURCE,,AUTO
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:265  
         2 005615   000003 115007                    CMPA    3,DL
         2 005616   005634 601000 2                  TNZ     s:20283

     1905    20271    2        THEN
     1906    20272    3        DO;

     1907    20273    3           CALL CPC$WRITEMSGE (E_ABRTBATCH);

  20273  2 005617   000040 630400 3                  EPPR0   32
         2 005620   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 005621   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 005622   000000 011000                    NOP     0

     1908    20274    3           CALL CPA$FLUSH;

  20274  2 005623   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 005624   000000 701000 xent               TSX1    CPA$FLUSH
         2 005625   000000 011000                    NOP     0

     1909    20275    3           IF B$JIT.STEPCC = 0

  20275  2 005626   000000 470400 xsym               LDP0    B$JIT$
         2 005627   000316 236100                    LDQ     206,,PR0
         2 005630   000777 316003                    CANQ    511,DU
         2 005631   005634 601000 2                  TNZ     s:20283

     1910    20276    3           THEN
     1911    20277    3              B$JIT.STEPCC = %CC_XXX# ;

  20277  2 005632   000006 236003                    LDQ     6,DU
         2 005633   000316 552120                    STBQ    206,'20'O,PR0

     1912    20278    3           END;

     1913    20279    2        END;

     1914    20280        /*
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:266  
     1915    20281             ***** Check for BREAK...
     1916    20282        */
     1917    20283    1     GOTO CHK_BREAK;

  20283  2 005634   004545 710000 2                  TRA     CHK_BREAK

     1918    20284                   %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:267  
     1919    20285        /**********************************************************************
     1920    20286        **     PURPOSE: To process errors detected in a CPX$CONTEXTn module.
     1921    20287               CALL:   UNWIND(U$PARAM.REMEM_CONTEXT_ERR$)
     1922    20288               INTERFACE:
     1923    20289               INPUT:
     1924    20290               OUTPUT: CONTEXT_ERR_UNWIND must set GETCMD.TEXT_ to vector(nil).
     1925    20291               DESCRIPTION: If a context error is detected while parsing the command
     1926    20292                       line, the given CPX$CONTEXTn routine will UNWIND to
     1927    20293                       CONTEXT_ERR_UNWIND.  GETCMD.TEXT_ must be set to vector(nil).
     1928    20294                       The control is given to CONTEXT_ERR to handle the normal
     1929    20295                       context error.
     1930    20296        **
     1931    20297        **********************************************************************/
     1932    20298    1   CONTEXT_ERR_UNWIND:
     1933    20299    1     SEG$2.GETCMD$->GET$CMD.TEXT_ = VECTOR(NIL) ;

  20299  2 005635   000000 470400 xsym  CONTEXT_ERR* LDP0    SEG2$
         2 005636   000173 471500                    LDP1    123,,PR0
         2 005637   000052 237000 3                  LDAQ    42
         2 005640   100034 757100                    STAQ    28,,PR1

     1934    20300    1     GOTO CONTEXT_ERR;

  20300  2 005641   005444 710000 2                  TRA     CONTEXT_ERR

     1935    20301                   %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:268  
     1936    20302    1   E_M$YCPMME:
     1937    20303    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT = CFPT_CPEXIT;

  20303  2 005642   000000 471400 xsym  E_M$YCPMME   LDP1    SEG2$
         2 005643   100166 473500                    LDP3    118,,PR1
         2 005644   000100 100400                    MLR     fill='000'O
         2 005645   000000 000070 xsym               ADSC9   CFPT_CPEXIT              cn=0,n=56
         2 005646   300000 000070                    ADSC9   0,,PR3                   cn=0,n=56

     1938    20304    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V_ =

  20304  2 005647   100166 473500                    LDP3    118,,PR1
         2 005650   000042 235000 3                  LDA     34
         2 005651   200462 453500                    STP3    FID_RES+1,,AUTO
         2 005652   200462 236100                    LDQ     FID_RES+1,,AUTO
         2 005653   000014 036003                    ADLQ    12,DU
         2 005654   300012 757100                    STAQ    10,,PR3

     1939    20305    1       VECTOR(SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V);
     1940    20306    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V.ALTRTN# = '1'B;

  20306  2 005655   100166 473500                    LDP3    118,,PR1
         2 005656   100000 236003                    LDQ     32768,DU
         2 005657   300014 256100                    ORSQ    12,,PR3

     1941    20307    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V.JERR = ERR_CODE;

  20307  2 005660   100166 473500                    LDP3    118,,PR1
         2 005661   200232 236100                    LDQ     ERR_CODE,,AUTO
         2 005662   300015 756100                    STQ     13,,PR3

     1942    20308    1     IF B$JIT.CPFLAGS1.YCPMME

  20308  2 005663   000143 236100                    LDQ     99,,PR0
         2 005664   020000 316003                    CANQ    8192,DU
         2 005665   005715 600000 2                  TZE     s:20318

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:269  
     1943    20309    1     THEN
     1944    20310    1        IF B$PS1$->FPTV$YC.NOERR

  20310  2 005666   000000 473400 xsym               LDP3    B$PS1$
         2 005667   300000 236100                    LDQ     0,,PR3
         2 005670   200000 316003                    CANQ    65536,DU
         2 005671   005675 600000 2                  TZE     s:20315

     1945    20311    1        THEN
     1946    20312    1           B$JIT.CPFLAGS1.EXIT# = '0'B ;

  20312  2 005672   000070 236000 3                  LDQ     56
         2 005673   000143 356100                    ANSQ    99,,PR0
         2 005674   005715 710000 2                  TRA     s:20318

     1947    20313    1        ELSE
     1948    20314    2        DO ;

     1949    20315    2           B$JIT.CPFLAGS1.EXIT# = '1'B ;

  20315  2 005675   020000 236007                    LDQ     8192,DL
         2 005676   000143 256100                    ORSQ    99,,PR0

     1950    20316    2           CALL CPC$WRITEMSGE(ERR_CODE,,,,,'1'B) ;

  20316  2 005677   000006 236000 3                  LDQ     6
         2 005700   000001 235000 xsym               LDA     B_VECTNIL+1
         2 005701   200466 757100                    STAQ    FID_RES+5,,AUTO
         2 005702   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 005703   000001 235000 xsym               LDA     B_VECTNIL+1
         2 005704   200464 757100                    STAQ    FID_RES+3,,AUTO
         2 005705   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 005706   200463 756100                    STQ     FID_RES+2,,AUTO
         2 005707   200232 634500                    EPPR4   ERR_CODE,,AUTO
         2 005710   200462 454500                    STP4    FID_RES+1,,AUTO
         2 005711   200462 630500                    EPPR0   FID_RES+1,,AUTO
         2 005712   000024 631400 xsym               EPPR1   B_VECTNIL+20
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:270  
         2 005713   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 005714   000000 011000                    NOP     0

     1951    20317    2           END ; /* Else Do */

     1952    20318    1     B$JIT.USRERR = '0'B ;

  20318  2 005715   000000 470400 xsym               LDP0    B$JIT$
         2 005716   000144 450100                    STZ     100,,PR0

     1953    20319    1     CALL CPC$EXIT;

  20319  2 005717   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 005720   000000 701000 xent               TSX1    CPC$EXIT
         2 005721   000000 011000                    NOP     0

     1954    20320    1     CALL CPC$SCREECH(E$SUAYCRTN,CPA$IBEXMID);

  20320  2 005722   000063 630400 3                  EPPR0   51
         2 005723   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 005724   000000 701000 xent               TSX1    CPC$SCREECH
         2 005725   000000 011000                    NOP     0

     1955    20321        %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:271  
     1956    20322        /**********************************************************************/
     1957    20323        /*I    NAME:   ERRTRN
     1958    20324               PURPOSE: Common returning point for altreturns from called procedures
     1959    20325               CALL:   Altret(errtrn)
     1960    20326               interface:
     1961    20327               Input:
     1962    20328               Output:
     1963    20329               DESCRIPTION: A determination is made if the current user is a BATCH
     1964    20330                       user or other type of user. If a BATCH user, the job is
     1965    20331                       aborted. Otherwise, a return is made for another command.
     1966    20332        */
     1967    20333        /**********************************************************************/
     1968    20334    1   ERRTRN:
     1969    20335    1     I = B$JIT.DCBNO;                         /*Preserve DCB#*/

  20335  2 005726   000000 470400 xsym  ERRTRN       LDP0    B$JIT$
         2 005727   000022 236100                    LDQ     18,,PR0
         2 005730   000777 376007                    ANQ     511,DL
         2 005731   200005 756100                    STQ     I,,AUTO

     1970    20336    1     IF CMD_SOURCE = M$LNKPMME

  20336  2 005732   200011 235100                    LDA     CMD_SOURCE,,AUTO
         2 005733   000005 115007                    CMPA    5,DL
         2 005734   005742 600000 2                  TZE     s:20340
         2 005735   000003 115007                    CMPA    3,DL
         2 005736   005752 601000 2                  TNZ     s:20344
         2 005737   000143 236100                    LDQ     99,,PR0
         2 005740   000010 316007                    CANQ    8,DL
         2 005741   005752 601000 2                  TNZ     s:20344

     1971    20337    1       OR CMD_SOURCE = XEQFILE AND (NOT(B$JIT.CPFLAGS1.ECHO))
     1972    20338
     1973    20339    1     THEN /* Echo */
     1974    20340    1        CALL CPA$ECHOCC (CMD_SOURCE,%YES#);

  20340  2 005742   000006 236000 3                  LDQ     6
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:272  
         2 005743   200463 756100                    STQ     FID_RES+2,,AUTO
         2 005744   200011 631500                    EPPR1   CMD_SOURCE,,AUTO
         2 005745   200462 451500                    STP1    FID_RES+1,,AUTO
         2 005746   200462 630500                    EPPR0   FID_RES+1,,AUTO
         2 005747   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 005750   000000 701000 xent               TSX1    CPA$ECHOCC
         2 005751   000000 011000                    NOP     0

     1975    20341        /*
     1976    20342             ***** Print error messages ...
     1977    20343        */
     1978    20344    1     IF ADDR(SEG$2.ERRBUF) -> ERR$BLK.FIRST ~= 0 OR B$JIT.USRERR.CODE = 0

  20344  2 005752   000000 470400 xsym               LDP0    SEG2$
         2 005753   000004 235100                    LDA     4,,PR0
         2 005754   005761 601000 2                  TNZ     s:20347
         2 005755   000000 471400 xsym               LDP1    B$JIT$
         2 005756   100144 236100                    LDQ     100,,PR1
         2 005757   377770 316007                    CANQ    131064,DL
         2 005760   006012 601000 2                  TNZ     s:20358

     1979    20345    1     THEN   /* Print errors */
     1980    20346    2     DO;

     1981    20347    2        IF NOT B$JIT.CPFLAGS1.YCPMME

  20347  2 005761   000000 471400 xsym               LDP1    B$JIT$
         2 005762   100143 236100                    LDQ     99,,PR1
         2 005763   020000 316003                    CANQ    8192,DU
         2 005764   005777 601000 2                  TNZ     s:20350

     1982    20348    2        THEN
     1983    20349    2           CALL CPR$RPTERR (SEG$2.ERRBUF,0);

  20349  2 005765   000010 236000 3                  LDQ     8
         2 005766   200463 756100                    STQ     FID_RES+2,,AUTO
         2 005767   000000 236000 xsym               LDQ     SEG2$
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:273  
         2 005770   000003 036003                    ADLQ    3,DU
         2 005771   200462 756100                    STQ     FID_RES+1,,AUTO
         2 005772   200462 630500                    EPPR0   FID_RES+1,,AUTO
         2 005773   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 005774   000000 701000 xent               TSX1    CPR$RPTERR
         2 005775   000000 011000                    NOP     0
         2 005776   006005 710000 2                  TRA     s:20354

     1984    20350    2        ELSE IF B$JIT.YC2SZ>0

  20350  2 005777   100170 720100                    LXL0    120,,PR1
         2 006000   006005 600000 2                  TZE     s:20354

     1985    20351    2           THEN
     1986    20352    2              B$PS2$ -> VLR$YC.CPOS =

  20352  2 006001   000000 473400 xsym               LDP3    B$PS2$
         2 006002   000010 236100                    LDQ     8,,PR0
         2 006003   000033 772000                    QRL     27
         2 006004   300000 756100                    STQ     0,,PR3

     1987    20353    2                ADDR(SEG$2.ERRBUF) -> ERR$BLK.BLK.CHARPOS(1);
     1988    20354    2        ERR_CODE = ADDR(SEG$2.ERRBUF) -> ERR$BLK.BLK.ERROR(1);

  20354  2 006005   000000 470400 xsym               LDP0    SEG2$
         2 006006   000011 236100                    LDQ     9,,PR0
         2 006007   200232 756100                    STQ     ERR_CODE,,AUTO

     1989    20355    2        ADDR(SEG$2.ERRBUF) -> ERR$BLK.FIRST = 0;

  20355  2 006010   000004 450100                    STZ     4,,PR0

     1990    20356    2        ADDR(SEG$2.ERRBUF) -> ERR$BLK.NEXT = 0;

  20356  2 006011   000005 450100                    STZ     5,,PR0

     1991    20357    2        END;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:274  

     1992    20358    1     IF B$JIT.USRERR.CODE ~= 0

  20358  2 006012   000000 471400 xsym               LDP1    B$JIT$
         2 006013   100144 236100                    LDQ     100,,PR1
         2 006014   377770 316007                    CANQ    131064,DL
         2 006015   006032 600000 2                  TZE     s:20366

     1993    20359    1     THEN   /* Print any other error messages */
     1994    20360    2     DO;

     1995    20361    2        ERR_CODE = B$JIT.USRERR;

  20361  2 006016   200232 756100                    STQ     ERR_CODE,,AUTO

     1996    20362    2        IF NOT B$JIT.CPFLAGS1.YCPMME

  20362  2 006017   100143 236100                    LDQ     99,,PR1
         2 006020   020000 316003                    CANQ    8192,DU
         2 006021   006032 601000 2                  TNZ     s:20366

     1997    20363    2        THEN
     1998    20364    2           CALL CPC$WRITEMSGE (ERR_CODE,I);

  20364  2 006022   200005 633500                    EPPR3   I,,AUTO
         2 006023   200463 453500                    STP3    FID_RES+2,,AUTO
         2 006024   200232 634500                    EPPR4   ERR_CODE,,AUTO
         2 006025   200462 454500                    STP4    FID_RES+1,,AUTO
         2 006026   200462 630500                    EPPR0   FID_RES+1,,AUTO
         2 006027   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 006030   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 006031   000000 011000                    NOP     0

     1999    20365    2        END;

     2000    20366    1     GOTO ERRXIT;

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:275  
  20366  2 006032   005557 710000 2                  TRA     ERRXIT

     2001    20367                   %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:276  
     2002    20368        /*
     2003    20369             *****    Internal subroutines
     2004    20370        */
     2005    20371        /**********************************************************************/
     2006    20372        /*I*   NAME:   OPENINPUT
     2007    20373               PURPOSE: To initialize the appropriate open,read and prompt fpts
     2008    20374               INTERFACE:
     2009    20375               INPUT:  B$JIT.CPFLAGS1 - CP_YC set or reset
     2010    20376                       B$JIT.MODE - user type
     2011    20377               OUTPUT: FPT$OPEN,FPT$READ and FPT$PROMPT fpts initialized
     2012    20378               DESCRIPTION: The M$IBEX dcb is obtained and opened to read
     2013    20379                       JCL when not in interactive mode(control_y). However when
     2014    20380                       a user is in interactive mode, the M$UC dcb is used for
     2015    20381                       reading JCL and is opened by the monitor.
     2016    20382                       The prompt character is set to a single '!' if not in
     2017    20383                       interactive mode and set to '!!' if otherwise.
     2018    20384        */
     2019    20385        /************************************************************************/
     2020    20386    1   OPENINPUT: PROC ALTRET ;

  20386  2 006033   200402 741300       OPENINPUT    STX1  ! LOGOFF+6,,AUTO

     2021    20387    2   DCL DCB# UBIN WORD;
     2022    20388        /*
     2023    20389           **** Init. Parameters common to interactive and regular mode for
     2024    20390                XUG_GETCMD and XUG_INIT fpts.
     2025    20391        */
     2026    20392    2     SEG$2.XUG_INIT$->XUG$INIT.PP_DCB# = M$IBEX1_NUM ;

  20392  2 006034   000000 470400 xsym               LDP0    SEG2$
         2 006035   000172 471500                    LDP1    122,,PR0
         2 006036   000000 236000 xsym               LDQ     M$IBEX1_NUM
         2 006037   000011 736000                    QLS     9
         2 006040   100025 552110                    STBQ    21,'10'O,PR1

     2027    20393    2     CALL CXG$INIT (SEG$2.GETCMD$->GET$CMD,

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:277  
  20393  2 006041   000173 471500                    LDP1    123,,PR0
         2 006042   000172 473500                    LDP3    122,,PR0
         2 006043   200463 453500                    STP3    FID_RES+2,,AUTO
         2 006044   200462 451500                    STP1    FID_RES+1,,AUTO
         2 006045   200462 630500                    EPPR0   FID_RES+1,,AUTO
         2 006046   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 006047   000000 701000 xent               TSX1    CXG$INIT
         2 006050   006167 702000 2                  TSX2    INIT_ERR

     2028    20394    2       SEG$2.XUG_INIT$->XUG$INIT) ALTRET(INIT_ERR) ;
     2029    20395    2     P$PCB$ = SEG$2.GETCMD$->GET$CMD.PCB$ ;

  20395  2 006051   000000 470400 xsym               LDP0    SEG2$
         2 006052   000173 471500                    LDP1    123,,PR0
         2 006053   100003 236100                    LDQ     3,,PR1
         2 006054   200024 756100                    STQ     P$PCB$,,AUTO

     2030    20396    2     XUG$ = SEG$2.XUG_INIT$->XUG$INIT.PARAMS$ ;

  20396  2 006055   000172 473500                    LDP3    122,,PR0
         2 006056   300014 236100                    LDQ     12,,PR3
         2 006057   200025 756100                    STQ     XUG$,,AUTO

     2031    20397    2     CALL CPC$OPEN_LL ;

  20397  2 006060   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 006061   000000 701000 xent               TSX1    CPC$OPEN_LL
         2 006062   000000 011000                    NOP     0

     2032    20398    2     SEG$2.GETCMD$->GET$CMD.OUTDCB# = SEG$2.LLDCB# ;

  20398  2 006063   000000 470400 xsym               LDP0    SEG2$
         2 006064   000173 471500                    LDP1    123,,PR0
         2 006065   000000 236100                    LDQ     0,,PR0
         2 006066   777777 376007                    ANQ     -1,DL
         2 006067   100013 756100                    STQ     11,,PR1

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:278  
     2033    20399    2     SEG$2.GETCMD$->GET$CMD.PP_ROOT$ = ADDR(XUE_PREEXP) ;

  20399  2 006070   000173 471500                    LDP1    123,,PR0
         2 006071   000071 236000 3                  LDQ     57
         2 006072   100045 756100                    STQ     37,,PR1

     2034    20400        /*
     2035    20401           **** If interactive mode, read jcl through M$UC
     2036    20402        */
     2037    20403    2     IF B$JIT.CPFLAGS1.YC

  20403  2 006073   000000 471400 xsym               LDP1    B$JIT$
         2 006074   100143 236100                    LDQ     99,,PR1
         2 006075   040000 316003                    CANQ    16384,DU
         2 006076   006113 600000 2                  TZE     s:20415
         2 006077   100143 430100                    FSZN    99,,PR1
         2 006100   006105 605000 2                  TPL     s:20407
         2 006101   100151 236100                    LDQ     105,,PR1
         2 006102   000777 376003                    ANQ     511,DU
         2 006103   000003 116003                    CMPQ    3,DU
         2 006104   006113 601000 2                  TNZ     s:20415

     2038    20404    2       AND (NOT B$JIT.CPFLAGS1.YCGET OR B$JIT.NEXTCC = %CC_FROMUC#)
     2039    20405    2     THEN
     2040    20406    3     DO;

     2041    20407    3        SEG$2.GETCMD$->GET$CMD.INDCB# = M$UC_NUM;

  20407  2 006105   000173 473500                    LDP3    123,,PR0
         2 006106   000000 235000 xsym               LDA     M$UC_NUM
         2 006107   300012 755100                    STA     10,,PR3

     2042    20408    3        SEG$2.PROMPT_TYPE = PRMT_I;

  20408  2 006110   000002 236007                    LDQ     2,DL
         2 006111   000205 756100                    STQ     133,,PR0

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:279  
     2043    20409    3        END;

  20409  2 006112   006165 710000 2                  TRA     s:20433

     2044    20410    2     ELSE
     2045    20411        /*
     2046    20412           **** Regular mode, read jcl through M$IBEX
     2047    20413        */
     2048    20414    3     DO;

     2049    20415    3        SEG$2.PROMPT_TYPE = PRMT_N;

  20415  2 006113   000001 235007                    LDA     1,DL
         2 006114   000205 755100                    STA     133,,PR0

     2050    20416    3        IF DCBADDR(M$IBEX_NUM) -> F$DCB.FCD#

  20416  2 006115   000047 473400 3                  LDP3    39
         2 006116   300000 474500                    LDP4    0,,PR3
         2 006117   000000 720000 xsym               LXL0    M$IBEX_NUM
         2 006120   400000 475510                    LDP5    0,X0,PR4
         2 006121   500031 236100                    LDQ     25,,PR5
         2 006122   020000 316007                    CANQ    8192,DL
         2 006123   006135 600000 2                  TZE     s:20423

     2051    20417    3        THEN   /* If M$IBEX is open, assume wrong */
     2052    20418    4        DO;   /* Close it */

     2053    20419    4           SEG$2.FPT_CLOSE$ -> FPT$CLOSE.V.DCB# = M$IBEX_NUM;

  20419  2 006124   000163 476500                    LDP6    115,,PR0
         2 006125   600032 740100                    STX0    26,,PR6

     2054    20420    4           SEG$2.FPT_CLOSE$ -> FPT$CLOSE.V.DISP# = %SAVE#;

  20420  2 006126   000163 476500                    LDP6    115,,PR0
         2 006127   000002 236007                    LDQ     2,DL
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:280  
         2 006130   600032 552104                    STBQ    26,'04'O,PR6

     2055    20421    4           CALL M$CLOSE (SEG$2.FPT_CLOSE$->FPT$CLOSE);

  20421  2 006131   000163 476500                    LDP6    115,,PR0
         2 006132   600000 630500                    EPPR0   0,,PR6
         2 006133   050001 713400                    CLIMB   close
         2 006134   406000 401760                    pmme    nvectors=13

     2056    20422    4           END;

     2057    20423    3        IF DCBADDR(M$IBEX1_NUM) -> F$DCB.FCD#

  20423  2 006135   000047 470400 3                  LDP0    39
         2 006136   000000 471500                    LDP1    0,,PR0
         2 006137   000000 720000 xsym               LXL0    M$IBEX1_NUM
         2 006140   100000 473510                    LDP3    0,X0,PR1
         2 006141   300031 236100                    LDQ     25,,PR3
         2 006142   020000 316007                    CANQ    8192,DL
         2 006143   006156 600000 2                  TZE     s:20430

     2058    20424    3        THEN   /* If M$IBEX1 is open, assume wrong */
     2059    20425    4        DO;   /* Close it */

     2060    20426    4           SEG$2.FPT_CLOSE$ -> FPT$CLOSE.V.DCB# = M$IBEX1_NUM;

  20426  2 006144   000000 474400 xsym               LDP4    SEG2$
         2 006145   400163 475500                    LDP5    115,,PR4
         2 006146   500032 740100                    STX0    26,,PR5

     2061    20427    4           SEG$2.FPT_CLOSE$ -> FPT$CLOSE.V.DISP# = %SAVE#;

  20427  2 006147   400163 475500                    LDP5    115,,PR4
         2 006150   000002 236007                    LDQ     2,DL
         2 006151   500032 552104                    STBQ    26,'04'O,PR5

     2062    20428    4           CALL M$CLOSE (SEG$2.FPT_CLOSE$->FPT$CLOSE);
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:281  

  20428  2 006152   400163 475500                    LDP5    115,,PR4
         2 006153   500000 630500                    EPPR0   0,,PR5
         2 006154   050001 713400                    CLIMB   close
         2 006155   406000 401760                    pmme    nvectors=13

     2063    20429    4           END;

     2064    20430    3        CALL CPB$OPENCS;

  20430  2 006156   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 006157   000000 701000 xent               TSX1    CPB$OPENCS
         2 006160   000000 011000                    NOP     0

     2065    20431    3        SEG$2.GETCMD$->GET$CMD.INDCB# = M$IBEX_NUM;

  20431  2 006161   000000 470400 xsym               LDP0    SEG2$
         2 006162   000173 471500                    LDP1    123,,PR0
         2 006163   000000 235000 xsym               LDA     M$IBEX_NUM
         2 006164   100012 755100                    STA     10,,PR1

     2066    20432    3        END;

     2067    20433    2     RETURN;

  20433  2 006165   200402 221300                    LDX1  ! LOGOFF+6,,AUTO
         2 006166   000001 702211                    TSX2  ! 1,X1

     2068    20434    2   INIT_ERR:
     2069    20435    2     CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF),511,SEG$2.GETCMD$->GET$CMD.ERR#) ;

  20435  2 006167   000000 470400 xsym  INIT_ERR     LDP0    SEG2$
         2 006170   000173 471500                    LDP1    123,,PR0
         2 006171   000000 236000 xsym               LDQ     SEG2$
         2 006172   000003 036003                    ADLQ    3,DU
         2 006173   200462 756100                    STQ     FID_RES+1,,AUTO
         2 006174   100001 633500                    EPPR3   1,,PR1
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:282  
         2 006175   200465 453500                    STP3    FID_RES+4,,AUTO
         2 006176   000067 236000 3                  LDQ     55
         2 006177   200464 756100                    STQ     FID_RES+3,,AUTO
         2 006200   200462 631500                    EPPR1   FID_RES+1,,AUTO
         2 006201   200463 451500                    STP1    FID_RES+2,,AUTO
         2 006202   200463 630500                    EPPR0   FID_RES+2,,AUTO
         2 006203   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 006204   000000 701000 xent               TSX1    CXP$POSTERR
         2 006205   000000 011000                    NOP     0

     2070    20436    2     ALTRETURN ;

  20436  2 006206   200402 221300                    LDX1  ! LOGOFF+6,,AUTO
         2 006207   000000 702211                    TSX2  ! 0,X1

     2071    20437    2   END OPENINPUT;
     2072    20438                   %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:283  
     2073    20439        /******************************************************************************/
     2074    20440        /*I*   NAME:    CHKQUIT
     2075    20441               PURPOSE:    To determine whether the user actually wishes to terminate
     2076    20442                        his previous job step (which was interrupted by Control-Y) or
     2077    20443                        abort the command which he has just entered.
     2078    20444               INPUT:   P$B  -  the block generated by X$PARSE for the command.
     2079    20445               OUTPUT:  Procedure ALTRETURNs if he does not wish to zap current job step.
     2080    20446                        Procedure performs an M$RUND on the user and then exits
     2081    20447                        normally if he does want to abort current job step with the
     2082    20448                        current command.
     2083    20449               DESCRIPTION:   The message QUIT? is written through the M$UC dcb and
     2084    20450                           the reply checked; Y[ES], New-line, or Carriage-return all
     2085    20451                           cause current step to be run down and the normal RETURN
     2086    20452                           taken; any other response takes the ALTRETURN.
     2087    20453        */
     2088    20454    1   CHKQUIT:

  20454  2 006210   200402 741300       CHKQUIT      STX1  ! LOGOFF+6,,AUTO

     2089    20455    1     PROC(P$B)  ALTRET;
     2090    20456        /**/
     2091    20457               %PARSE$OUT(NAME=P$B,STCLASS="");
     2092    20502    2   DCL    QUITMSG  CHAR(0)  INIT('Quit?')  CONSTANT;
     2093    20503    2   DCL ARS UBIN ;
     2094    20504    2   DCL 1 PROMPT BASED CALIGNED,
     2095    20505    2         2 VFC CHAR(1),
     2096    20506    2         2 TEXT CHAR (ARS);
     2097    20507        /**/
     2098    20508        /*
     2099    20509        *****  Begin procedure
     2100    20510        */
     2101    20511    3     DO CASE(P$B.CODE);

  20511  2 006211   200403 470500                    LDP0    @P$B,,AUTO
         2 006212   000000 236100                    LDQ     0,,PR0
         2 006213   777777 376007                    ANQ     -1,DL
         2 006214   000025 136007                    SBLQ    21,DL
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:284  
         2 006215   000106 116007                    CMPQ    70,DL
         2 006216   006220 602006 2                  TNC     s:20511+7,QL
         2 006217   006477 710000 2                  TRA     s:20581
         2 006220   006326 710000 2                  TRA     s:20534
         2 006221   006326 710000 2                  TRA     s:20534
         2 006222   006477 710000 2                  TRA     s:20581
         2 006223   006326 710000 2                  TRA     s:20534
         2 006224   006477 710000 2                  TRA     s:20581
         2 006225   006477 710000 2                  TRA     s:20581
         2 006226   006326 710000 2                  TRA     s:20534
         2 006227   006477 710000 2                  TRA     s:20581
         2 006230   006477 710000 2                  TRA     s:20581
         2 006231   006477 710000 2                  TRA     s:20581
         2 006232   006477 710000 2                  TRA     s:20581
         2 006233   006326 710000 2                  TRA     s:20534
         2 006234   006477 710000 2                  TRA     s:20581
         2 006235   006477 710000 2                  TRA     s:20581
         2 006236   006477 710000 2                  TRA     s:20581
         2 006237   006326 710000 2                  TRA     s:20534
         2 006240   006477 710000 2                  TRA     s:20581
         2 006241   006477 710000 2                  TRA     s:20581
         2 006242   006477 710000 2                  TRA     s:20581
         2 006243   006477 710000 2                  TRA     s:20581
         2 006244   006477 710000 2                  TRA     s:20581
         2 006245   006477 710000 2                  TRA     s:20581
         2 006246   006477 710000 2                  TRA     s:20581
         2 006247   006477 710000 2                  TRA     s:20581
         2 006250   006326 710000 2                  TRA     s:20534
         2 006251   006477 710000 2                  TRA     s:20581
         2 006252   006477 710000 2                  TRA     s:20581
         2 006253   006477 710000 2                  TRA     s:20581
         2 006254   006477 710000 2                  TRA     s:20581
         2 006255   006477 710000 2                  TRA     s:20581
         2 006256   006477 710000 2                  TRA     s:20581
         2 006257   006477 710000 2                  TRA     s:20581
         2 006260   006477 710000 2                  TRA     s:20581
         2 006261   006477 710000 2                  TRA     s:20581
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:285  
         2 006262   006477 710000 2                  TRA     s:20581
         2 006263   006477 710000 2                  TRA     s:20581
         2 006264   006477 710000 2                  TRA     s:20581
         2 006265   006477 710000 2                  TRA     s:20581
         2 006266   006477 710000 2                  TRA     s:20581
         2 006267   006326 710000 2                  TRA     s:20534
         2 006270   006326 710000 2                  TRA     s:20534
         2 006271   006477 710000 2                  TRA     s:20581
         2 006272   006477 710000 2                  TRA     s:20581
         2 006273   006477 710000 2                  TRA     s:20581
         2 006274   006326 710000 2                  TRA     s:20534
         2 006275   006477 710000 2                  TRA     s:20581
         2 006276   006477 710000 2                  TRA     s:20581
         2 006277   006477 710000 2                  TRA     s:20581
         2 006300   006477 710000 2                  TRA     s:20581
         2 006301   006477 710000 2                  TRA     s:20581
         2 006302   006477 710000 2                  TRA     s:20581
         2 006303   006326 710000 2                  TRA     s:20534
         2 006304   006477 710000 2                  TRA     s:20581
         2 006305   006477 710000 2                  TRA     s:20581
         2 006306   006477 710000 2                  TRA     s:20581
         2 006307   006477 710000 2                  TRA     s:20581
         2 006310   006477 710000 2                  TRA     s:20581
         2 006311   006326 710000 2                  TRA     s:20534
         2 006312   006477 710000 2                  TRA     s:20581
         2 006313   006477 710000 2                  TRA     s:20581
         2 006314   006477 710000 2                  TRA     s:20581
         2 006315   006477 710000 2                  TRA     s:20581
         2 006316   006477 710000 2                  TRA     s:20581
         2 006317   006477 710000 2                  TRA     s:20581
         2 006320   006477 710000 2                  TRA     s:20581
         2 006321   006477 710000 2                  TRA     s:20581
         2 006322   006477 710000 2                  TRA     s:20581
         2 006323   006477 710000 2                  TRA     s:20581
         2 006324   006477 710000 2                  TRA     s:20581
         2 006325   006326 710000 2                  TRA     s:20534

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:286  
     2102    20512        /*
     2103    20513        *****  The following commands are permitted only at job step so we must
     2104    20514        *****  ask the user if he wishes to quit what he is doing before processing
     2105    20515        *****  his last command.
     2106    20516        *****  Any zero-byte read will cause current job step to be run down.
     2107    20517        *****  Any other response will prompt the user with another read without
     2108    20518        *****  running him down.
     2109    20519        */
     2110    20520    3      CASE( GETCMND,

     2111    20521    3       JOINCMND,
     2112    20522    3       STARTCMND,
     2113    20523    3       EDITCMND,
     2114    20524    3       SIXEDITCMND,
     2115    20525    3       RUMCMND,
     2116    20526    3       PCLCMND,
     2117    20527    3       LINKCMND,
     2118    20528    3       GOTOCMND,
     2119    20529    3       RUNITCMND,
     2120    20530    3       UCMND,
     2121    20531    3       EFTCMND,
     2122    20532    3       FEPLINKCMND);
     2123    20533        /**/
     2124    20534    3        IF P$B.CODE = GOTOCMND AND B$JIT.CPFLAGS1.YCGET

  20534  2 006326   000000 720100                    LXL0    0,,PR0
         2 006327   000033 100003                    CMPX0   27,DU
         2 006330   006335 601000 2                  TNZ     s:20537
         2 006331   000000 471400 xsym               LDP1    B$JIT$
         2 006332   100143 430100                    FSZN    99,,PR1
         2 006333   006335 605000 2                  TPL     s:20537

     2125    20535    3        THEN
     2126    20536    3           RETURN;

  20536  2 006334   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:287  
     2127    20537    3        IF B$JIT.CPFLAGS1.PROTECT AND SEG$2.GETCMD$->GET$CMD.INDCB# = M$UC_NUM

  20537  2 006335   000000 471400 xsym               LDP1    B$JIT$
         2 006336   100143 236100                    LDQ     99,,PR1
         2 006337   000100 316007                    CANQ    64,DL
         2 006340   006414 600000 2                  TZE     s:20561
         2 006341   000000 473400 xsym               LDP3    SEG2$
         2 006342   300173 474500                    LDP4    123,,PR3
         2 006343   400012 236100                    LDQ     10,,PR4
         2 006344   006414 604000 2                  TMI     s:20561
         2 006345   000000 116000 xsym               CMPQ    M$UC_NUM
         2 006346   006414 601000 2                  TNZ     s:20561

     2128    20538    3        THEN
     2129    20539    4        DO;

     2130    20540    4           SEG$2.FPT_WRITEUC$->FPT$WRITE.BUF_ = VECTOR(QUITMSG);

  20540  2 006347   300157 475500                    LDP5    111,,PR3
         2 006350   000072 237000 3                  LDAQ    58
         2 006351   500004 757100                    STAQ    4,,PR5

     2131    20541    4           CALL M$WRITE(SEG$2.FPT_WRITEUC$->FPT$WRITE) ALTRET(CHKQUIT10);

  20541  2 006352   300157 474500                    LDP4    111,,PR3
         2 006353   400000 630500                    EPPR0   0,,PR4
         2 006354   440001 713400                    CLIMB   alt,write
         2 006355   401400 401760                    pmme    nvectors=4
         2 006356   006357 702000 2                  TSX2    CHKQUIT10

     2132    20542    4   CHKQUIT10:
     2133    20543    4           SEG$2.FPT_READUC$->FPT$READ.BUF_ = VECTOR(SEG$2.CPBUFF$ -> CP$BUFF);

  20543  2 006357   000000 470400 xsym  CHKQUIT10    LDP0    SEG2$
         2 006360   000156 471500                    LDP1    110,,PR0
         2 006361   000171 473500                    LDP3    121,,PR0
         2 006362   000033 235000 3                  LDA     27
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:288  
         2 006363   200462 453500                    STP3    FID_RES+1,,AUTO
         2 006364   200462 236100                    LDQ     FID_RES+1,,AUTO
         2 006365   100004 757100                    STAQ    4,,PR1

     2134    20544    4           CALL M$READ(SEG$2.FPT_READUC$->FPT$READ) ALTRET(CHKQUIT20);

  20544  2 006366   000156 471500                    LDP1    110,,PR0
         2 006367   100000 630500                    EPPR0   0,,PR1
         2 006370   440000 713400                    CLIMB   alt,read
         2 006371   401400 401760                    pmme    nvectors=4
         2 006372   006373 702000 2                  TSX2    CHKQUIT20

     2135    20545    4   CHKQUIT20:
     2136    20546    4           IF DCBADDR(M$UC_NUM)->F$DCB.ARS# ~= 0

  20546  2 006373   000047 470400 3     CHKQUIT20    LDP0    39
         2 006374   000000 471500                    LDP1    0,,PR0
         2 006375   000000 720000 xsym               LXL0    M$UC_NUM
         2 006376   100000 473510                    LDP3    0,X0,PR1
         2 006377   300000 235100                    LDA     0,,PR3
         2 006400   006414 600000 2                  TZE     s:20561

     2137    20547    4           THEN
     2138    20548    5           DO;

     2139    20549    5              ARS = DCBADDR(M$UC_NUM)->F$DCB.ARS# ;

  20549  2 006401   200404 755100                    STA     ARS,,AUTO

     2140    20550    5              SEG$2.GETCMD$->GET$CMD.TEXT_ =

  20550  2 006402   000000 474400 xsym               LDP4    SEG2$
         2 006403   400173 475500                    LDP5    123,,PR4
         2 006404   400171 476500                    LDP6    121,,PR4
         2 006405   000020 735000                    ALS     16
         2 006406   000140 135007                    SBLA    96,DL
         2 006407   200462 456500                    STP6    FID_RES+1,,AUTO
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:289  
         2 006410   200462 236100                    LDQ     FID_RES+1,,AUTO
         2 006411   500034 757100                    STAQ    28,,PR5

     2141    20551    5                VECTOR(SUBSTR(SEG$2.CPBUFF$->CP$BUFF,
     2142    20552    5                0, ARS)) ;
     2143    20553    5              ALTRETURN;

  20553  2 006412   200402 221300                    LDX1  ! LOGOFF+6,,AUTO
         2 006413   000000 702211                    TSX2  ! 0,X1

     2144    20554    5              END;
     2145    20555    4           END;
     2146    20556        /*
     2147    20557        *****   We have decided to abort the current process in favor of the one
     2148    20558        *****   represented by the command in cpbuff; if there is an active command
     2149    20559        *****   stream, it should be flushed.
     2150    20560        */
     2151    20561    3        IF SEG$2.GETCMD$->GET$CMD.INDCB# = M$UC_NUM

  20561  2 006414   000000 470400 xsym               LDP0    SEG2$
         2 006415   000173 471500                    LDP1    123,,PR0
         2 006416   100012 236100                    LDQ     10,,PR1
         2 006417   006425 604000 2                  TMI     s:20564
         2 006420   000000 116000 xsym               CMPQ    M$UC_NUM
         2 006421   006425 601000 2                  TNZ     s:20564

     2152    20562    3        THEN
     2153    20563    3           CALL CPA$FLUSH;

  20563  2 006422   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 006423   000000 701000 xent               TSX1    CPA$FLUSH
         2 006424   000000 011000                    NOP     0

     2154    20564    3        SEG$2.FLAGS.CMD_STR_INT = %NO#;

  20564  2 006425   000000 470400 xsym               LDP0    SEG2$
         2 006426   000004 236000 3                  LDQ     4
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:290  
         2 006427   000000 356100                    ANSQ    0,,PR0

     2155    20565    3        SEG$2.FLAGS.CPBUFFULL_AT_CSINT = %NO#;

  20565  2 006430   000057 236000 3                  LDQ     47
         2 006431   000000 356100                    ANSQ    0,,PR0

     2156    20566        /**/
     2157    20567    3        IF SEG$2.GETCMD$->GET$CMD.INDCB# = M$UC_NUM

  20567  2 006432   000173 471500                    LDP1    123,,PR0
         2 006433   100012 236100                    LDQ     10,,PR1
         2 006434   006441 604000 2                  TMI     s:20569
         2 006435   000000 116000 xsym               CMPQ    M$UC_NUM
         2 006436   006441 601000 2                  TNZ     s:20569

     2158    20568    3        THEN ARS = 0;

  20568  2 006437   200404 450100                    STZ     ARS,,AUTO
         2 006440   006444 710000 2                  TRA     s:20570

     2159    20569    3        ELSE ARS = VBOUND(SEG$2.GETCMD$->GET$CMD.PROMPT_);

  20569  2 006441   100025 236100                    LDQ     21,,PR1
         2 006442   000020 772000                    QRL     16
         2 006443   200404 756100                    STQ     ARS,,AUTO

     2160    20570    3        CALL CONCAT (B$JIT.CCBUF,

  20570  2 006444   100026 473500                    LDP3    22,,PR1
         2 006445   000171 474500                    LDP4    121,,PR0
         2 006446   200404 720100                    LXL0    ARS,,AUTO
         2 006447   000000 475400 xsym               LDP5    B$JIT$
         2 006450   040100 100540                    MLR     fill='040'O
         2 006451   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0
         2 006452   500033 000400                    ADSC9   27,,PR5                  cn=0,n=256
         2 006453   200404 236100                    LDQ     ARS,,AUTO
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:291  
         2 006454   000400 116007                    CMPQ    256,DL
         2 006455   006463 603000 2                  TRC     s:20573
         2 006456   777377 621006                    EAX1    -257,QL
         2 006457   777777 661003                    ERX1    -1,DU
         2 006460   040146 100500                    MLR     fill='040'O
         2 006461   400000 000400                    ADSC9   0,,PR4                   cn=0,n=256
         2 006462   500033 000011                    ADSC9   27,Q,PR5                 cn=0,n=*X1

     2161    20571    3          VBASE(SEG$2.GETCMD$->GET$CMD.PROMPT_)->PROMPT.TEXT,
     2162    20572    3          SEG$2.CPBUFF$ -> CP$BUFF);
     2163    20573    3        B$JIT.CCARS = P$PCB.NCHARS+ARS;

  20573  2 006463   200024 471500                    LDP1    P$PCB$,,AUTO
         2 006464   100011 036100                    ADLQ    9,,PR1
         2 006465   000000 621006                    EAX1    0,QL
         2 006466   500032 741100                    STX1    26,,PR5

     2164    20574    3        B$JIT.CCDISP = B$JIT.CCARS;

  20574  2 006467   500032 441100                    SXL1    26,,PR5

     2165    20575    3        B$JIT.CPFLAGS1.BUFFULL = '1'B;

  20575  2 006470   000040 236007                    LDQ     32,DL
         2 006471   500143 256100                    ORSQ    99,,PR5

     2166    20576    3        CALL CPC$QUIT ALTRET(E_CHK_C$QUIT);

  20576  2 006472   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 006473   000000 701000 xent               TSX1    CPC$QUIT
         2 006474   006500 702000 2                  TSX2    E_CHK_C$QUIT

     2167    20577        /**/
     2168    20578    3        RETURN;

  20578  2 006475   200402 221300                    LDX1  ! LOGOFF+6,,AUTO
         2 006476   000001 702211                    TSX2  ! 1,X1
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:292  

     2169    20579        /**/
     2170    20580    3      CASE(ELSE);

     2171    20581    3        RETURN;

  20581  2 006477   000001 702211                    TSX2  ! 1,X1

     2172    20582    3      END;

     2173    20583    2   E_CHK_C$QUIT:
     2174    20584    2     ALTRETURN;

  20584  2 006500   200402 221300       E_CHK_C$QUIT LDX1  ! LOGOFF+6,,AUTO
         2 006501   000000 702211                    TSX2  ! 0,X1

     2175    20585    2   END CHKQUIT;
     2176    20586        %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:293  
     2177    20587        /**********************************************************************/
     2178    20588        /*I*    NAME:    LIMIT_ERR
     2179    20589                PURPOSE: To print any/all errors associated with exceeded LIMITS
     2180    20590                CALL:    CALL LIMIT_ERR
     2181    20591               INTERFACE: CPC$WRITEMSGE
     2182    20592               INPUT:  B$JIT.USRERR - ERROR CODE OF MESSAGE TO BE OUTPUT
     2183    20593               INPUT:  B$JIT.USRRNST - USER RUN STATUS
     2184    20594               OUTPUT: Error message output to user
     2185    20595               DESCRIPTION: If a system or user error is detected, the appropriate error
     2186    20596                       message is output. If step limits were in effect, cumulative
     2187    20597                       values will be established for the limits in effect.
     2188    20598        */
     2189    20599        /********************************************************************/
     2190    20600    1   LIMIT_ERR:

  20600  2 006502   200402 741300       LIMIT_ERR    STX1  ! LOGOFF+6,,AUTO

     2191    20601    1     PROC  ALTRET;
     2192    20602    2   DCL 1 XL_NAME,
     2193    20603    2         2 COUNT UBIN(9) UNAL,
     2194    20604    2         2 TEXT CHAR(6) UNAL;
     2195    20605    2   DCL 1 XLIM_TBL(0:8) CONSTANT ALIGNED,  /*LIMIT EXCEEDED TABLE*/
     2196    20606    2         2 LEN UBIN BYTE UNAL INIT
     2197    20607    2            (4,5,4,5,5,2,2,6,2),
     2198    20608    2         2 HDR CHAR(6) UNAL INIT
     2199    20609    2            ('time','stack','tape','tdisk','pdisk','DO','LO','memory','PO'),
     2200    20610    2         2 MASK BIT(9) UNAL INIT
     2201    20611    2            (%XL_TIME#,%XL_STACK#,%XL_TAPE#,%XL_TDISC#,%XL_PDISC#,%XL_DO#,
     2202    20612    2             %XL_LO#,%XL_MEM#,%XL_PO#);
     2203    20613    2   DCL STEP_LMTX BIT(1) UNAL;                       /*Step lmt excded flag*/
     2204    20614        /**/
     2205    20615        /*
     2206    20616          ****     Process limit errors
     2207    20617        */
     2208    20618    2     IF (B$JIT.USRRNST & %RS_LIMX#)

  20618  2 006503   000000 470400 xsym               LDP0    B$JIT$
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:294  
         2 006504   000145 236100                    LDQ     101,,PR0
         2 006505   000022 736000                    QLS     18
         2 006506   777000 376003                    ANQ     -512,DU
         2 006507   100000 376003                    ANQ     32768,DU
         2 006510   006613 600000 2                  TZE     s:20658

     2209    20619    2     THEN
     2210    20620    3     DO;

     2211    20621    4        DO I=0 TO SIZEC(XLIM_TBL)/SIZEC(XLIM_TBL(0))-1;

  20621  2 006511   200005 450100                    STZ     I,,AUTO
         2 006512   006547 710000 2                  TRA     s:20634+1

     2212    20622    4           IF B$JIT.XLIMFLG & XLIM_TBL.MASK(I)

  20622  2 006513   200005 235100                    LDA     I,,AUTO
         2 006514   000001 735000                    ALS     1
         2 006515   000120 236005 1                  LDQ     XLIM_TBL+1,AL
         2 006516   000033 736000                    QLS     27
         2 006517   200462 756100                    STQ     FID_RES+1,,AUTO
         2 006520   000000 470400 xsym               LDP0    B$JIT$
         2 006521   000316 236100                    LDQ     206,,PR0
         2 006522   000022 736000                    QLS     18
         2 006523   777000 376003                    ANQ     -512,DU
         2 006524   200462 376100                    ANQ     FID_RES+1,,AUTO
         2 006525   006546 600000 2                  TZE     s:20634

     2213    20623    4           THEN
     2214    20624    5           DO;

     2215    20625    5              XL_NAME.COUNT = XLIM_TBL.LEN(I);

  20625  2 006526   000117 236005 1                  LDQ     XLIM_TBL,AL
         2 006527   200403 552140                    STBQ    XL_NAME,'40'O,AUTO

     2216    20626    5              XL_NAME.TEXT = XLIM_TBL.HDR(I);
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:295  

  20626  2 006530   200005 235100                    LDA     I,,AUTO
         2 006531   000003 735000                    ALS     3
         2 006532   040100 100405                    MLR     fill='040'O
         2 006533   000117 200006 1                  ADSC9   XLIM_TBL,A               cn=1,n=6
         2 006534   200403 200006                    ADSC9   XL_NAME,,AUTO            cn=1,n=6

     2217    20627        /*E*       ERROR:  CPA-E$LIMEXC-E
     2218    20628                   MESSAGE: Limit exceeded - %U1
     2219    20629                   DESCRIPTION: The limit was exceeded on the specified resource
     2220    20630                                or service limit.
     2221    20631        */
     2222    20632    5              CALL CPC$WRITEMSGE (E_LIMEXC,,XL_NAME);

  20632  2 006535   200403 631500                    EPPR1   XL_NAME,,AUTO
         2 006536   200464 451500                    STP1    FID_RES+3,,AUTO
         2 006537   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 006540   000074 235000 3                  LDA     60
         2 006541   200462 757100                    STAQ    FID_RES+1,,AUTO
         2 006542   200462 630500                    EPPR0   FID_RES+1,,AUTO
         2 006543   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 006544   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 006545   000000 011000                    NOP     0

     2223    20633    5              END;

     2224    20634    4           END;

  20634  2 006546   200005 054100                    AOS     I,,AUTO
         2 006547   200005 235100                    LDA     I,,AUTO
         2 006550   000010 115007                    CMPA    8,DL
         2 006551   006513 604400 2                  TMOZ    s:20622

     2225    20635        /*
     2226    20636          ****     Establish cumulative values if step limits were in effect
     2227    20637        */
     2228    20638    3        STEP_LMTX = %NO#;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:296  

  20638  2 006552   200405 450100                    STZ     STEP_LMTX,,AUTO

     2229    20639    3        IF (B$JIT.CPFLAGS1 & %CP_STEPLMT#)

  20639  2 006553   000000 470400 xsym               LDP0    B$JIT$
         2 006554   000143 236100                    LDQ     99,,PR0
         2 006555   000151 376000 1                  ANQ     XLIM_TBL+26
         2 006556   006567 600000 2                  TZE     s:20645

     2230    20640    3        THEN
     2231    20641    3           CALL CPJ$ESTCUM(%YES#,STEP_LMTX) ALTRET(E_LIMIT);

  20641  2 006557   200405 631500                    EPPR1   STEP_LMTX,,AUTO
         2 006560   200463 451500                    STP1    FID_RES+2,,AUTO
         2 006561   000006 236000 3                  LDQ     6
         2 006562   200462 756100                    STQ     FID_RES+1,,AUTO
         2 006563   200462 630500                    EPPR0   FID_RES+1,,AUTO
         2 006564   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 006565   000000 701000 xent               TSX1    CPJ$ESTCUM
         2 006566   006615 702000 2                  TSX2    E_LIMIT

     2232    20642        /*
     2233    20643          ****     If only step limits were exceeded, reset RNST's LIMX flag.
     2234    20644        */
     2235    20645    3        IF NOT B$JIT.XLIMFLG

  20645  2 006567   000000 470400 xsym               LDP0    B$JIT$
         2 006570   000316 236100                    LDQ     206,,PR0
         2 006571   777000 316007                    CANQ    -512,DL
         2 006572   006577 601000 2                  TNZ     s:20652

     2236    20646    3        THEN
     2237    20647    3           B$JIT.RNST = B$JIT.RNST &%(~RS_LIMX#);

  20647  2 006573   000314 236100                    LDQ     204,,PR0
         2 006574   777000 376003                    ANQ     -512,DU
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:297  
         2 006575   677000 376003                    ANQ     -33280,DU
         2 006576   000314 552140                    STBQ    204,'40'O,PR0

     2238    20648        /*
     2239    20649          ****     If BATCH, abort job if the limit exceeded wasn't a step limit.
     2240    20650          ****     Otherwise, process the next job step.
     2241    20651        */
     2242    20652    3        IF ((B$JIT.MODE=%M_BATCH#)  AND (STEP_LMTX=%NO#))

  20652  2 006577   000000 236100                    LDQ     0,,PR0
         2 006600   740000 376003                    ANQ     -16384,DU
         2 006601   040000 116003                    CMPQ    16384,DU
         2 006602   006611 601000 2                  TNZ     s:20656
         2 006603   200405 234100                    SZN     STEP_LMTX,,AUTO
         2 006604   006611 604000 2                  TMI     s:20656

     2243    20653    3        THEN
     2244    20654    3           CALL CPA$BYE ALTRET(E_LIMIT);

  20654  2 006605   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 006606   000000 701000 xent               TSX1    CPA$BYE
         2 006607   006615 702000 2                  TSX2    E_LIMIT
         2 006610   006613 710000 2                  TRA     s:20658

     2245    20655    3        ELSE
     2246    20656    3           RETURN;

  20656  2 006611   200402 221300                    LDX1  ! LOGOFF+6,,AUTO
         2 006612   000001 702211                    TSX2  ! 1,X1

     2247    20657    3        END;
     2248    20658    2     RETURN;

  20658  2 006613   200402 221300                    LDX1  ! LOGOFF+6,,AUTO
         2 006614   000001 702211                    TSX2  ! 1,X1

     2249    20659    2   E_LIMIT:
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:298  
     2250    20660    2     ALTRETURN;

  20660  2 006615   200402 221300       E_LIMIT      LDX1  ! LOGOFF+6,,AUTO
         2 006616   000000 702211                    TSX2  ! 0,X1

     2251    20661    2   END LIMIT_ERR;
     2252    20662                   %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:299  
     2253    20663        /******************************************************************************/
     2254    20664        /*I*   NAME:    CHK_RUTYPE
     2255    20665               PURPOSE:    To determine if the specified run unit command is a debugger.
     2256    20666               INPUT:   P$B  -  the block generated by X$PARSE for the command.
     2257    20667               OUTPUT:  P$B.CODE - changed to debugcmd if a debugger
     2258    20668               DESCRIPTION:   If the run unit is a debugger, the p$b.code is changed
     2259    20669                           to debugcmnd. Otherwise, no change is made. This is done
     2260    20670                           to allow for special processing performed for debugger type
     2261    20671                           run units found in :sys.
     2262    20672        */
     2263    20673    1   CHK_RUTYPE: PROC(P$BLOCK) ALTRET ;

  20673  2 006617   200402 741300       CHK_RUTYPE   STX1  ! LOGOFF+6,,AUTO

     2264    20674        %PARSE$SYM(NAME=P$S);
     2265    20712        %PARSE$OUT (NAME=P$BLOCK,STCLASS="");
     2266    20757        %FPT_FINDPROC (FPTN=FPT_FINDPROC,STCLASS=AUTO);
     2267    20773        %FPT_FID (FPTN=FPT$FID,STCLASS=BASED);
     2268    20796        %VLP_NAME (FPTN=FID_NAME,LEN=31,STCLASS=AUTO);
     2269    20823        %VLP_ACCT (FPTN=FID_ACCT,STCLASS=AUTO);
     2270    20836        %VLP_PASS (FPTN=FID_PASS,STCLASS=AUTO);
     2271    20849        %VLP_SN (FPTN=FID_SN,N=4,STCLASS=AUTO);
     2272    20862        %VLP_WSN (FPTN=FID_WSN,STCLASS=AUTO);
     2273    20875        %VLR_FID(FPTN=FID_RESULTS,STCLASS=AUTO);
     2274    20894    2   DCL FID_ASN UBIN(9);
     2275    20895    2   DCL FID_RES CHAR(4);
     2276    20896        /**/
     2277    20897        /**/
     2278    20898    2     SEG$2.FPT_FID$->FPT$FID = CFPT_FID;

  20898  2 006620   000000 470400 xsym               LDP0    SEG2$
         2 006621   000167 471500                    LDP1    119,,PR0
         2 006622   000100 100400                    MLR     fill='000'O
         2 006623   000000 000140 xsym               ADSC9   CFPT_FID                 cn=0,n=96
         2 006624   100000 000140                    ADSC9   0,,PR1                   cn=0,n=96

     2279    20899    2     SEG$2.FPT_FID$->FPT$FID.V_ = VECTOR(SEG$2.FPT_FID$->FPT$FID.V);
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:300  

  20899  2 006625   000167 471500                    LDP1    119,,PR0
         2 006626   000075 235000 3                  LDA     61
         2 006627   200462 451500                    STP1    FID_RES+1,,AUTO
         2 006630   200462 236100                    LDQ     FID_RES+1,,AUTO
         2 006631   000024 036003                    ADLQ    20,DU
         2 006632   100000 757100                    STAQ    0,,PR1

     2280    20900    2     SEG$2.FPT_FID$->FPT$FID.TEXTFID_=VECTOR(P$BLOCK.SUBLK$(0)->P$S.TEXT);

  20900  2 006633   000167 471500                    LDP1    119,,PR0
         2 006634   200403 473500                    LDP3    @P$BLOCK,,AUTO
         2 006635   300003 474500                    LDP4    3,,PR3
         2 006636   400004 236100                    LDQ     4,,PR4
         2 006637   000033 772000                    QRL     27
         2 006640   000064 737000                    LLS     52
         2 006641   000140 135007                    SBLA    96,DL
         2 006642   200462 454500                    STP4    FID_RES+1,,AUTO
         2 006643   200462 236100                    LDQ     FID_RES+1,,AUTO
         2 006644   000076 036000 3                  ADLQ    62
         2 006645   100002 757100                    STAQ    2,,PR1

     2281    20901    2     SEG$2.FPT_FID$->FPT$FID.NAME_=VECTOR(FID_NAME);

  20901  2 006646   000167 471500                    LDP1    119,,PR0
         2 006647   000024 235000 3                  LDA     20
         2 006650   200462 452500                    STP2    FID_RES+1,,AUTO
         2 006651   200462 236100                    LDQ     FID_RES+1,,AUTO
         2 006652   000420 036003                    ADLQ    272,DU
         2 006653   100004 757100                    STAQ    4,,PR1

     2282    20902    2     SEG$2.FPT_FID$->FPT$FID.ACCT_=VECTOR(FID_ACCT);

  20902  2 006654   000167 471500                    LDP1    119,,PR0
         2 006655   000042 235000 3                  LDA     34
         2 006656   200462 452500                    STP2    FID_RES+1,,AUTO
         2 006657   200462 236100                    LDQ     FID_RES+1,,AUTO
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:301  
         2 006660   000430 036003                    ADLQ    280,DU
         2 006661   100006 757100                    STAQ    6,,PR1

     2283    20903    2     SEG$2.FPT_FID$->FPT$FID.PASS_=VECTOR(FID_PASS);

  20903  2 006662   000167 471500                    LDP1    119,,PR0
         2 006663   000042 235000 3                  LDA     34
         2 006664   200462 452500                    STP2    FID_RES+1,,AUTO
         2 006665   200462 236100                    LDQ     FID_RES+1,,AUTO
         2 006666   000432 036003                    ADLQ    282,DU
         2 006667   100010 757100                    STAQ    8,,PR1

     2284    20904    2     SEG$2.FPT_FID$->FPT$FID.SN_=VECTOR(FID_SN);

  20904  2 006670   000167 471500                    LDP1    119,,PR0
         2 006671   000024 235000 3                  LDA     20
         2 006672   200462 452500                    STP2    FID_RES+1,,AUTO
         2 006673   200462 236100                    LDQ     FID_RES+1,,AUTO
         2 006674   000434 036003                    ADLQ    284,DU
         2 006675   100012 757100                    STAQ    10,,PR1

     2285    20905    2     SEG$2.FPT_FID$->FPT$FID.WSN_=VECTOR(FID_WSN);

  20905  2 006676   000167 471500                    LDP1    119,,PR0
         2 006677   000042 235000 3                  LDA     34
         2 006700   200462 452500                    STP2    FID_RES+1,,AUTO
         2 006701   200462 236100                    LDQ     FID_RES+1,,AUTO
         2 006702   000444 036003                    ADLQ    292,DU
         2 006703   100014 757100                    STAQ    12,,PR1

     2286    20906    2     SEG$2.FPT_FID$->FPT$FID.ASN_=VECTOR(FID_ASN);

  20906  2 006704   000167 471500                    LDP1    119,,PR0
         2 006705   777640 235007                    LDA     -96,DL
         2 006706   200462 452500                    STP2    FID_RES+1,,AUTO
         2 006707   200462 236100                    LDQ     FID_RES+1,,AUTO
         2 006710   000460 036003                    ADLQ    304,DU
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:302  
         2 006711   100016 757100                    STAQ    14,,PR1

     2287    20907    2     SEG$2.FPT_FID$->FPT$FID.RES_=VECTOR(FID_RES);

  20907  2 006712   000167 471500                    LDP1    119,,PR0
         2 006713   777640 235007                    LDA     -96,DL
         2 006714   200462 452500                    STP2    FID_RES+1,,AUTO
         2 006715   200462 236100                    LDQ     FID_RES+1,,AUTO
         2 006716   000461 036003                    ADLQ    305,DU
         2 006717   100020 757100                    STAQ    16,,PR1

     2288    20908    2     SEG$2.FPT_FID$->FPT$FID.RESULTS_=VECTOR(FID_RESULTS);

  20908  2 006720   000167 471500                    LDP1    119,,PR0
         2 006721   000077 235000 3                  LDA     63
         2 006722   200462 452500                    STP2    FID_RES+1,,AUTO
         2 006723   200462 236100                    LDQ     FID_RES+1,,AUTO
         2 006724   000446 036003                    ADLQ    294,DU
         2 006725   100022 757100                    STAQ    18,,PR1

     2289    20909    2     CALL M$FID(SEG$2.FPT_FID$->FPT$FID) ALTRET(RET);

  20909  2 006726   000167 471500                    LDP1    119,,PR0
         2 006727   100000 630500                    EPPR0   0,,PR1
         2 006730   420001 713400                    CLIMB   alt,+8193
         2 006731   404400 401760                    pmme    nvectors=10
         2 006732   007033 702000 2                  TSX2    RET

     2290    20910    2     IF FID_ASN ~= %FILE# OR FID_NAME.L# = 0

  20910  2 006733   200460 236100                    LDQ     FID_ASN,,AUTO
         2 006734   777000 376003                    ANQ     -512,DU
         2 006735   001000 116003                    CMPQ    512,DU
         2 006736   006742 601000 2                  TNZ     s:20913
         2 006737   200420 236100                    LDQ     FID_NAME,,AUTO
         2 006740   777000 316003                    CANQ    -512,DU
         2 006741   006757 601000 2                  TNZ     s:20921
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:303  

     2291    20911    2     THEN
     2292    20912    3     DO ;

     2293    20913    3        CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF),511,E_ILLRUFID) ;

  20913  2 006742   000000 236000 xsym               LDQ     SEG2$
         2 006743   000003 036003                    ADLQ    3,DU
         2 006744   200462 756100                    STQ     FID_RES+1,,AUTO
         2 006745   000100 237000 3                  LDAQ    64
         2 006746   200464 757100                    STAQ    FID_RES+3,,AUTO
         2 006747   200462 630500                    EPPR0   FID_RES+1,,AUTO
         2 006750   200463 450500                    STP0    FID_RES+2,,AUTO
         2 006751   200463 630500                    EPPR0   FID_RES+2,,AUTO
         2 006752   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 006753   000000 701000 xent               TSX1    CXP$POSTERR
         2 006754   000000 011000                    NOP     0

     2294    20914    3        ALTRETURN ;

  20914  2 006755   200402 221300                    LDX1  ! LOGOFF+6,,AUTO
         2 006756   000000 702211                    TSX2  ! 0,X1

     2295    20915    3        END ; /* Then Do */
     2296    20916        /*E*    ERROR: CPA-E$ILLRUFID-0
     2297    20917                MESSAGE:   Illegal rununit name.
     2298    20918                MESSAGE1:   The rununit name must be a file name.
     2299    20919                DESCRIPTION: User input an illegal rununit name.
     2300    20920        */
     2301    20921    2     IF (FID_RESULTS.ACCT = %NO#) OR (FID_ACCT.ACCT# = ':SYS')

  20921  2 006757   200446 236100                    LDQ     FID_RESULTS,,AUTO
         2 006760   200000 316003                    CANQ    65536,DU
         2 006761   006766 600000 2                  TZE     s:20923
         2 006762   040000 106500                    CMPC    fill='040'O
         2 006763   200430 000010                    ADSC9   FID_ACCT,,AUTO           cn=0,n=8
         2 006764   000152 000004 1                  ADSC9   XLIM_TBL+27              cn=0,n=4
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:304  
         2 006765   007033 601000 2                  TNZ     RET

     2302    20922    3     THEN DO;

     2303    20923    3        CALL XLATE(FID_NAME.NAME#,TRANSTBL,FID_NAME.NAME#);

  20923  2 006766   000000 470400 xsym               LDP0    B$XL_UPPER$
         2 006767   040100 160500                    MVT     fill='040'O
         2 006770   200420 200037                    ADSC9   FID_NAME,,AUTO           cn=1,n=31
         2 006771   200420 200037                    ADSC9   FID_NAME,,AUTO           cn=1,n=31
         2 006772   000000 000100                    ARG     0,,PR0

     2304    20924    3        FPT_FINDPROC = CFPT_FINDPROC;

  20924  2 006773   000100 100400                    MLR     fill='000'O
         2 006774   000000 000060 xsym               ADSC9   CFPT_FINDPROC            cn=0,n=48
         2 006775   200404 000060                    ADSC9   FPT_FINDPROC,,AUTO       cn=0,n=48

     2305    20925    3        FPT_FINDPROC.V_ = VECTOR(FPT_FINDPROC.V);

  20925  2 006776   000042 235000 3                  LDA     34
         2 006777   200462 452500                    STP2    FID_RES+1,,AUTO
         2 007000   200462 236100                    LDQ     FID_RES+1,,AUTO
         2 007001   000416 036003                    ADLQ    270,DU
         2 007002   200404 757100                    STAQ    FPT_FINDPROC,,AUTO

     2306    20926    3        FPT_FINDPROC.NAME_ = VECTOR(FID_NAME);

  20926  2 007003   000024 235000 3                  LDA     20
         2 007004   200462 452500                    STP2    FID_RES+1,,AUTO
         2 007005   200462 236100                    LDQ     FID_RES+1,,AUTO
         2 007006   000420 036003                    ADLQ    272,DU
         2 007007   200406 757100                    STAQ    STEP_LMTX+1,,AUTO

     2307    20927    3        CALL M$FINDPROC (FPT_FINDPROC)   ALTRET(RET);

  20927  2 007010   200404 630500                    EPPR0   FPT_FINDPROC,,AUTO
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:305  
         2 007011   400024 713400                    CLIMB   alt,+20
         2 007012   402000 401760                    pmme    nvectors=5
         2 007013   007033 702000 2                  TSX2    RET

     2308    20928    3        CMD_PARSING = DEBUGCMND;

  20928  2 007014   000015 235007                    LDA     13,DL
         2 007015   200004 755100                    STA     CMD_PARSING,,AUTO

     2309    20929    3        P$BLOCK.CODE = DEBUGCMND;

  20929  2 007016   000015 220003                    LDX0    13,DU
         2 007017   200403 470500                    LDP0    @P$BLOCK,,AUTO
         2 007020   000000 440100                    SXL0    0,,PR0

     2310    20930    3        P$BLOCK.SUBLK$(0)->P$S.COUNT=FID_NAME.L#;

  20930  2 007021   000003 471500                    LDP1    3,,PR0
         2 007022   200420 236100                    LDQ     FID_NAME,,AUTO
         2 007023   100004 552140                    STBQ    4,'40'O,PR1

     2311    20931    3        P$BLOCK.SUBLK$(0)->P$S.TEXT=FID_NAME.NAME#;

  20931  2 007024   000003 471500                    LDP1    3,,PR0
         2 007025   100004 236100                    LDQ     4,,PR1
         2 007026   000033 772000                    QRL     27
         2 007027   000000 621006                    EAX1    0,QL
         2 007030   040140 100500                    MLR     fill='040'O
         2 007031   200420 200037                    ADSC9   FID_NAME,,AUTO           cn=1,n=31
         2 007032   100004 200011                    ADSC9   4,,PR1                   cn=1,n=*X1

     2312    20932    3        END;

     2313    20933    2   RET: RETURN;

  20933  2 007033   200402 221300       RET          LDX1  ! LOGOFF+6,,AUTO
         2 007034   000001 702211                    TSX2  ! 1,X1
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:306  

     2314    20934    2   END CHK_RUTYPE;
     2315    20935        %EJECT ;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:307  
     2316    20936        /******************************************************************************/
     2317    20937        /*I*   NAME:    CHK_4_WHEN_CMD
     2318    20938               PURPOSE:    To determine if the specified command is a WHEN comand.
     2319    20939               INPUT:   XUG.LAST The vector that points to the record input.
     2320    20940               OUTPUT:
     2321    20941               DESCRIPTION:   IBEX has gotten a preprocessor error and is now checking
     2322    20942                           to see if the command input was a WHEN command. If it is
     2323    20943                           RETURN to the caller, if not, ALTRETURN to the user.
     2324    20944        */
     2325    20945    1   CHK_4_WHEN_CMD: PROC ALTRET ;

  20945  2 007035   200402 741300       CHK_4_WHEN_* STX1  ! LOGOFF+6,,AUTO

     2326    20946
     2327    20947    2     K = VBOUND(XUG$PARAMS.LAST)+1 ;

  20947  2 007036   200025 470500                    LDP0    XUG$,,AUTO
         2 007037   000004 236100                    LDQ     4,,PR0
         2 007040   000020 772000                    QRL     16
         2 007041   000001 036007                    ADLQ    1,DL
         2 007042   200007 756100                    STQ     K,,AUTO

     2328    20948    2     TEMPBUF = SUBSTR(VBASE(XUG$PARAMS.LAST)->CP$BUFF,0,K) ;

  20948  2 007043   000005 471500                    LDP1    5,,PR0
         2 007044   000000 620006                    EAX0    0,QL
         2 007045   040100 100540                    MLR     fill='040'O
         2 007046   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         2 007047   200030 000400                    ADSC9   TEMPBUF,,AUTO            cn=0,n=256

     2329    20949    2     CALL XLATE(TEMPBUF, TRANSTBL, TEMPBUF) ;

  20949  2 007050   000000 473400 xsym               LDP3    B$XL_UPPER$
         2 007051   040100 160500                    MVT     fill='040'O
         2 007052   200030 000400                    ADSC9   TEMPBUF,,AUTO            cn=0,n=256
         2 007053   200030 000400                    ADSC9   TEMPBUF,,AUTO            cn=0,n=256
         2 007054   300000 000100                    ARG     0,,PR3
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:308  

     2330    20950    2     CALL INDEX (I, 'WHEN ', TEMPBUF) ALTRET(NOT_WHEN_CMD) ;

  20950  2 007055   200005 631500                    EPPR1   I,,AUTO
         2 007056   000153 633400 1                  EPPR3   XLIM_TBL+28
         2 007057   000005 223003                    LDX3    5,DU
         2 007060   200030 630500                    EPPR0   TEMPBUF,,AUTO
         2 007061   000400 220003                    LDX0    256,DU
         2 007062   000000 236003                    LDQ     0,DU
         2 007063   000000 701000 xent               TSX1    X66_INDEX
         2 007064   007076 710000 2                  TRA     NOT_WHEN_CMD

     2331    20951    2     IF I > 0

  20951  2 007065   200005 235100                    LDA     I,,AUTO
         2 007066   007074 604400 2                  TMOZ    s:20956

     2332    20952    2     THEN
     2333    20953    2        IF SUBSTR(TEMPBUF,0,I) ~= ' '

  20953  2 007067   000000 621005                    EAX1    0,AL
         2 007070   040000 106540                    CMPC    fill='040'O
         2 007071   200030 000011                    ADSC9   TEMPBUF,,AUTO            cn=0,n=*X1
         2 007072   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 007073   007076 601000 2                  TNZ     NOT_WHEN_CMD

     2334    20954    2        THEN
     2335    20955    2           GOTO NOT_WHEN_CMD ;
     2336    20956    2     RETURN ;

  20956  2 007074   200402 221300                    LDX1  ! LOGOFF+6,,AUTO
         2 007075   000001 702211                    TSX2  ! 1,X1

     2337    20957
     2338    20958    2   NOT_WHEN_CMD:
     2339    20959    2     ALTRETURN ;

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:309  
  20959  2 007076   200402 221300       NOT_WHEN_CMD LDX1  ! LOGOFF+6,,AUTO
         2 007077   000000 702211                    TSX2  ! 0,X1

     2340    20960
     2341    20961    2   END   CHK_4_WHEN_CMD ;
     2342    20962        %EJECT;
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:310  
     2343    20963        /**********************************************************************/
     2344    20964        /*I    NAME:   WHEN_ERR
     2345    20965               PURPOSE: A routine to report errors for the WHEN command.
     2346    20966               CALL:   CALL WHEN_ERR
     2347    20967               interface:
     2348    20968               Input:
     2349    20969               Output:
     2350    20970               DESCRIPTION: The errors are output to the user.
     2351    20971        */
     2352    20972        /**********************************************************************/
     2353    20973    1   WHEN_ERR: PROC;

  20973  2 007100   200402 741300       WHEN_ERR     STX1  ! LOGOFF+6,,AUTO

     2354    20974    2     I = B$JIT.DCBNO;                         /*Preserve DCB#*/

  20974  2 007101   000000 470400 xsym               LDP0    B$JIT$
         2 007102   000022 236100                    LDQ     18,,PR0
         2 007103   000777 376007                    ANQ     511,DL
         2 007104   200005 756100                    STQ     I,,AUTO

     2355    20975    2     IF CMD_SOURCE = XEQFILE

  20975  2 007105   200011 235100                    LDA     CMD_SOURCE,,AUTO
         2 007106   000003 115007                    CMPA    3,DL
         2 007107   007123 601000 2                  TNZ     s:20983
         2 007110   000143 236100                    LDQ     99,,PR0
         2 007111   000012 376000 xsym               ANQ     B_VECTNIL+10
         2 007112   007123 601000 2                  TNZ     s:20983

     2356    20976    2       AND (NOT(B$JIT.CPFLAGS1 & %CP_ECHO#))
     2357    20977
     2358    20978    2     THEN /* Echo */
     2359    20979    2        CALL CPA$ECHOCC (CMD_SOURCE,%YES#);

  20979  2 007113   000006 236000 3                  LDQ     6
         2 007114   200463 756100                    STQ     FID_RES+2,,AUTO
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:311  
         2 007115   200011 631500                    EPPR1   CMD_SOURCE,,AUTO
         2 007116   200462 451500                    STP1    FID_RES+1,,AUTO
         2 007117   200462 630500                    EPPR0   FID_RES+1,,AUTO
         2 007120   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 007121   000000 701000 xent               TSX1    CPA$ECHOCC
         2 007122   000000 011000                    NOP     0

     2360    20980        /*
     2361    20981             ***** Print error messages ...
     2362    20982        */
     2363    20983    2     IF ADDR(SEG$2.ERRBUF) -> ERR$BLK.FIRST ~= 0

  20983  2 007123   000000 470400 xsym               LDP0    SEG2$
         2 007124   000004 235100                    LDA     4,,PR0
         2 007125   007144 600000 2                  TZE     s:20991

     2364    20984    2     THEN   /* Print errors */
     2365    20985    3     DO;

     2366    20986    3        CALL CPR$RPTERR (SEG$2.ERRBUF,0);

  20986  2 007126   000010 236000 3                  LDQ     8
         2 007127   200463 756100                    STQ     FID_RES+2,,AUTO
         2 007130   000000 236000 xsym               LDQ     SEG2$
         2 007131   000003 036003                    ADLQ    3,DU
         2 007132   200462 756100                    STQ     FID_RES+1,,AUTO
         2 007133   200462 630500                    EPPR0   FID_RES+1,,AUTO
         2 007134   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 007135   000000 701000 xent               TSX1    CPR$RPTERR
         2 007136   000000 011000                    NOP     0

     2367    20987    3        ERR_CODE = ADDR(SEG$2.ERRBUF) -> ERR$BLK.BLK.ERROR(1);

  20987  2 007137   000000 470400 xsym               LDP0    SEG2$
         2 007140   000011 236100                    LDQ     9,,PR0
         2 007141   200232 756100                    STQ     ERR_CODE,,AUTO

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:312  
     2368    20988    3        ADDR(SEG$2.ERRBUF) -> ERR$BLK.FIRST = 0;

  20988  2 007142   000004 450100                    STZ     4,,PR0

     2369    20989    3        ADDR(SEG$2.ERRBUF) -> ERR$BLK.NEXT = 0;

  20989  2 007143   000005 450100                    STZ     5,,PR0

     2370    20990    3        END;

     2371    20991    2     IF B$JIT.USRERR.CODE ~= 0

  20991  2 007144   000000 471400 xsym               LDP1    B$JIT$
         2 007145   100144 236100                    LDQ     100,,PR1
         2 007146   377770 316007                    CANQ    131064,DL
         2 007147   007161 600000 2                  TZE     s:20998

     2372    20992    2     THEN   /* Print any other error messages */
     2373    20993    3     DO;

     2374    20994    3        ERR_CODE = B$JIT.USRERR;

  20994  2 007150   200232 756100                    STQ     ERR_CODE,,AUTO

     2375    20995    3        CALL CPC$WRITEMSGE (ERR_CODE,I);

  20995  2 007151   200005 633500                    EPPR3   I,,AUTO
         2 007152   200463 453500                    STP3    FID_RES+2,,AUTO
         2 007153   200232 634500                    EPPR4   ERR_CODE,,AUTO
         2 007154   200462 454500                    STP4    FID_RES+1,,AUTO
         2 007155   200462 630500                    EPPR0   FID_RES+1,,AUTO
         2 007156   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 007157   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 007160   000000 011000                    NOP     0

     2376    20996    3        END;

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:313  
     2377    20997
     2378    20998    2     RETURN;

  20998  2 007161   200402 221300                    LDX1  ! LOGOFF+6,,AUTO
         2 007162   000001 702211                    TSX2  ! 1,X1
     2379    20999    2   END   WHEN_ERR;
     2380    21000    1   END CPA$IBEX;

PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:314  
--  Include file information  --

   CXG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   CX_MACROS_M.:E05TOU  is referenced.
   CX_SUBS_C.:E05TOU  is referenced.
   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   NK_VFC_C.:E05TOU  is referenced.
   JS$CP6V_C.:E05TOU  is referenced.
   JP_SUBS_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$TABLES_C.:E05TOU  cannot be made into a system file and is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   XU_PERR_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   UM_ERRORS_C.:E05TOU  is referenced.
   KV_ERRORS_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   AZ_SUBS_C.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   AZ_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPA$IBEX.
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:315  

 **** Variables and constants ****

  ****  Section 001 RoData CPA$IBEX

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(2052)  r     1 CXUH_PARAM                76-0-0/w STRC        r     1 E_ABRTBATCH
   111-0-0/w STRC        r     1 E_BANG_EOD               114-0-0/w STRC        r     1 E_BDQUITCMND
   110-0-0/w STRC        r     1 E_CMDDISALLOWED          100-0-0/w STRC        r     1 E_CONT
    74-0-0/w STRC        r     1 E_CSINT                  113-0-0/w STRC        r     1 E_EMPTYWND
   106-0-0/w STRC        r     1 E_ILLRUFID               102-0-0/w STRC        r     1 E_INPUT
   103-0-0/w STRC        r     1 E_LIMEXC                 104-0-0/w STRC        r     1 E_MPRESOURCE
   112-0-0/w STRC        r     1 E_NJOBSTEP               107-0-0/w STRC        r     1 E_NO_MORE
   101-0-0/w STRC        r     1 E_RECS_IGNORED           105-0-0/w STRC        r     1 E_RESINVALID
    75-0-0/w STRC        r     1 E_YCPMMEBRK               77-0-0/w STRC        r     1 E_YC_RUND
   115-0-0/c CHAR(5)     r     1 QUITMSG                   72-0-0/c STRC(72)    r     1 SYS
   117-0-0/w STRC(72)    r     1 XLIM_TBL(0:8)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   403-0-0/w PTR         r     1 @P$B                     403-0-0/w PTR         r     1 @P$BLOCK
   404-0-0/w UBIN        r     1 ARS                       23-0-0/w PTR         r     1 BLK$
     4-0-0/w UBIN        r     1 CMD_PARSING               11-0-0/w UBIN        r     1 CMD_SOURCE
   340-0-0/w STRC(180)   r     1 CPSL_PARAM               232-0-0/w STRC        r     1 ERR_CODE
   430-0-0/c STRC(72)    r     1 FID_ACCT                 460-0-0/w UBIN(9)     r     1 FID_ASN
   420-0-0/c STRC(288)   r     1 FID_NAME                 432-0-0/c STRC(72)    r     1 FID_PASS
   461-0-0/c CHAR(4)     r     1 FID_RES                  446-0-0/d STRC(324)   r     1 FID_RESULTS
   434-0-0/d STRC(252)   r     1 FID_SN                   444-0-0/c STRC(72)    r     1 FID_WSN
    26-0-0/b BIT         r     1 FIRST_SYNTAX_ERR         404-0-0/d STRC(432)   r     1 FPT_FINDPROC
   130-0-0/d STRC(2088)  r     1 FPT_OPEN                 222-0-0/d STRC(288)   r     1 FPT_TRMCTL
   346-0-0/d STRC(216)   r     1 FPT_XXX                    5-0-0/w SBIN        r     1 I
    13-0-0/c STRC(72)    r     1 IGNORED                    7-0-0/w SBIN        r     1 K
   374-0-0/w STRC(216)   r     1 LOGOFF                    *0-0-0/w STRC(144)   r     1 P$B
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:316  
    *0-0-0/w STRC(144)   r     1 P$BLOCK                   24-0-0/w PTR         r     1 P$PCB$
     3-0-0/w UBIN        r     1 PREV_CMND                 20-0-0/d REMB        r     1 REMEM_CONTEXT_ERR
    16-0-0/d REMB        r     1 REMEM_VAR                405-0-0/b BIT         r     1 STEP_LMTX
    30-0-0/c CHAR(256)   r     1 TEMPBUF                   27-0-0/b BIT         r     1 TRIED_2_XPAND_WND
   354-0-0/w STRC(576)   r     1 U$PARAM                   10-0-0/w UBIN        r     1 USRDCB
   330-0-0/d STRC(288)   r     1 VLP_WINDOW               234-0-0/d STRC(2052)  r     1 X$PARAM
   403-0-0/c STRC(63)    r     1 XL_NAME                   25-0-0/w PTR         r     1 XUG$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$PS1$
     0-0-0/w PTR         r     1 B$PS2$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/w PTR         r     1 B$XL_UPPER$                0-0-0/d STRC(504)   r     1 CFPT_CPEXIT
     0-0-0/d STRC(864)   r     1 CFPT_FID                   0-0-0/d STRC(432)   r     1 CFPT_FINDPROC
     0-0-0/d STRC(2088)  r     1 CFPT_OPEN                  0-0-0/d STRC(288)   r     1 CFPT_TRMCTL
     0-0-0/d STRC(216)   r     1 CFPT_XXX
     0-0-0/c STRC(288)   r     1 CONTINUATION_COMMANDS
     0-0-0/d STRC(288)   r     1 CVLP_WINDOW                0-0-0/d STRC(72)    r     1 IBEX1TXTC
     0-0-0/d STRC(63)    r     1 IBEXTXTC                   0-0-0/b BIT         r     1 IBEX_CMD
     0-0-0/c STRC(45)    r     1 IBEX_NAME                  0-0-0/b BIT         r     1 LINKPMME_CMD
     0-0-0/d STRC(27)    r     1 LISTDCB                    0-0-0/w UBIN        r     1 M$IBEX1_NUM
     0-0-0/w UBIN        r     1 M$IBEX2_NUM                0-0-0/w UBIN        r     1 M$IBEX_NUM
     0-0-0/w UBIN        r     1 M$LL_NUM                   0-0-0/w UBIN        r     1 M$UC_NUM
     0-0-0/d STRC(27)    r     1 OBJECTDCB                  0-0-0/w PTR         r     1 SEG2$
     0-0-0/d STRC(27)    r     1 SOURCEDCB                  0-0-0/d STRC(27)    r     1 UPDATEDCB
     0-0-0/b BIT         r     1 XUE_PREEXP

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/d STRC(8856)  r     1 B$JIT
     0-0-0/w STRC(144)   r     1 B$TCB                      0-0-0/w CHAR(256)   r     1 CP$BUFF
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:317  
     0-0-0/w STRC(828)   r     1 ERR$BLK                    0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/d STRC(1080)  r     1 FPT$CLOSE                  0-0-0/d STRC(504)   r     1 FPT$CPEXIT
     0-0-0/d STRC(864)   r     1 FPT$FID                    0-0-0/d STRC(504)   r     1 FPT$READ
     0-0-0/d STRC(432)   r     1 FPT$WRITE                  0-0-0/d STRC        r     1 FPTV$YC
     0-0-0/d STRC(1512)  r     1 GET$CMD                    0-0-0N  NULL        r     1 M$UC
     0-0-0/w STRC(144)   r     1 P$B                        0-0-0/w STRC(504)   r     1 P$PCB
     0-0-0/w ASTR(153)   r     1 P$S                        0-0-0/w ASTR(153)   r     1 P$S
     0-0-0/c ASTR(9)     r     1 PROMPT                     0-0-0/d REMB        r     1 REMEM$VAR
     0-0-0/w STRC(6264)  r     1 SEG$2                      0-0-0/d STRC(4608)  r     1 TRANSTBL
     0-0-0/d STRC(72)    r     1 VLR$YC                     0-0-0/c ASTR(9)     r     1 X$STRING
     0-0-0/d STRC(1296)  r     1 XUG$INIT                   0-0-0/d STRC(9612)  r     1 XUG$PARAMS
     0-0-0/c UBIN(9)     r     1 XUG$RLT(0:0)


   Procedure CPA$IBEX requires 3699 words for executable code.
   Procedure CPA$IBEX requires 312 words of local(AUTO) storage.

    No errors detected in file CPA$IBEX.:E05TSI    .
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:318  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:319  
          MINI XREF LISTING

ARS IN PROCEDURE CHKQUIT
     20503**DCL     20506--IMP-SIZ 20549<<ASSIGN  20550>>ASSIGN  20568<<ASSIGN  20569<<ASSIGN  20570>>CALLBLT
     20573>>ASSIGN
AZA$LOGOFF
     15845**DCL-ENT 18838--CALL
B$ALT.CODE
     16405**DCL     16405--REDEF   16406--REDEF   16406--REDEF
B$ALT.DCB#
     16406**DCL     20108>>ASSIGN
B$ALT.ERR
     16406**DCL     19530>>ASSIGN  20118>>ASSIGN
B$ALT.ERR.CODE
     16407**DCL     20069>>DOSELCT 20094>>DOSELCT
B$ALT.ERR.ERR#
     16407**DCL     16407--REDEF
B$ALT.EVID
     16406**DCL     16406--REDEF   16406--REDEF
B$JIT.BUDLIM
      2925**DCL     18816>>IF
B$JIT.CCARS
      2876**DCL     19316<<ASSIGN  19323<<ASSIGN  20573<<ASSIGN  20574>>ASSIGN
B$JIT.CCBUF
      2876**DCL     19314<<CALLBLT 19321<<ASSIGN  19328<<CALLBLT 20570<<CALLBLT
B$JIT.CCDISP
      2876**DCL     20574<<ASSIGN
B$JIT.CPFLAGS1
      2877**DCL     18732<<ASSIGN  18732>>ASSIGN  18755>>IF      19028>>IF      19058>>IF      19331>>IF
     19465>>IF      19931<<ASSIGN  19931>>ASSIGN  19943>>IF      19947<<ASSIGN  19947>>ASSIGN  19957>>IF
     19979>>IF      19986<<ASSIGN  19986>>ASSIGN  19996>>IF      20000>>IF      20242>>IF      20639>>IF
     20975>>IF
B$JIT.CPFLAGS1.BRK
      2881**DCL     19602>>IF
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:320  
B$JIT.CPFLAGS1.BUFFULL
      2881**DCL     18886>>IF      19330<<ASSIGN  19728<<ASSIGN  20575<<ASSIGN
B$JIT.CPFLAGS1.DELTA
      2882**DCL     19586<<ASSIGN
B$JIT.CPFLAGS1.DONTRFEXT3
      2878**DCL     18941>>IF      18943<<ASSIGN
B$JIT.CPFLAGS1.ECHO
      2881**DCL     20336>>IF
B$JIT.CPFLAGS1.EXIT#
      2880**DCL     18782>>IF      20312<<ASSIGN  20315<<ASSIGN
B$JIT.CPFLAGS1.JSTEP
      2877**DCL     18816>>IF      18869>>IF      19226>>IF      19861>>IF
B$JIT.CPFLAGS1.LASTCP
      2879**DCL     18807>>IF
B$JIT.CPFLAGS1.LNKPMME
      2878**DCL     18740>>IF      19198>>IF
B$JIT.CPFLAGS1.LOGOFF
      2877**DCL     18740>>IF      18848>>IF
B$JIT.CPFLAGS1.NOTIFY
      2880**DCL     18876>>IF
B$JIT.CPFLAGS1.PROTECT
      2881**DCL     20537>>IF
B$JIT.CPFLAGS1.RUND
      2877**DCL     18857>>IF
B$JIT.CPFLAGS1.SKIPABORT
      2880**DCL     19198>>IF      19211<<ASSIGN  19584<<ASSIGN
B$JIT.CPFLAGS1.SLEAZE
      2882**DCL      2882--REDEF
B$JIT.CPFLAGS1.STARPROC
      2879**DCL     18816>>IF      18825>>IF
B$JIT.CPFLAGS1.STEPACCT
      2881**DCL     18816>>IF
B$JIT.CPFLAGS1.STEPLMT
      2881**DCL     18989>>IF
B$JIT.CPFLAGS1.TRMNATE
      2880**DCL     18848>>IF
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:321  
B$JIT.CPFLAGS1.WHEN_INPUT
      2878**DCL     18857>>IF      18886>>IF
B$JIT.CPFLAGS1.YC
      2877**DCL     18763>>IF      19031>>IF      19188>>IF      19706>>IF      19964>>IF      20403>>IF
B$JIT.CPFLAGS1.YCGET
      2878**DCL     18763>>IF      19662<<ASSIGN  19705<<ASSIGN  19852<<ASSIGN  19964>>IF      20403>>IF
     20534>>IF
B$JIT.CPFLAGS1.YCPMME
      2878**DCL     18740>>IF      19198>>IF      19249>>IF      19311>>IF      19706>>IF      20058>>IF
     20209>>IF      20228>>IF      20234>>IF      20308>>IF      20347>>IF      20362>>IF
B$JIT.DCBNO
      2869**DCL     20335>>ASSIGN  20974>>ASSIGN
B$JIT.ERR
      2788**DCL     19027>>ASSIGN  19286>>ASSIGN
B$JIT.ERR.MID
      2789**DCL      2789--REDEF
B$JIT.FEXT
      2956**DCL     18945<<ASSIGN  18960<<ASSIGN
B$JIT.JRESPEAK
      2950**DCL      2951--REDEF
B$JIT.MODE
      2783**DCL     19043>>IF      19043>>IF      19198>>IF      19359>>IF      19359>>IF      19381>>IF
     19390>>IF      19402>>IF      19638>>IF      19795>>IF      19853>>IF      20081>>DOCASE  20260>>IF
     20652>>IF
B$JIT.NEXTCC
      2930**DCL     18761>>IF      19116>>IF      19116>>IF      19721>>IF      19725>>IF      19972>>IF
     20403>>IF
B$JIT.ORIGINATOR_PORT.FROM_CR
      3059**DCL      3059--REDEF    3060--REDEF
B$JIT.PNR
      2963**DCL      2963--REDEF
B$JIT.PRFLAGS.COMMENT
      2872**DCL     18965<<ASSIGN
B$JIT.PRFLAGS.CONTINUED
      2872**DCL     18972>>IF      18983<<ASSIGN  19922<<ASSIGN
B$JIT.PRFLAGS.LIST
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:322  
      2872**DCL     18963<<ASSIGN
B$JIT.PRFLAGS.LS
      2872**DCL     18947>>IF      18959<<ASSIGN  19339<<ASSIGN
B$JIT.PRFLAGS.NSSYNTAX
      2872**DCL     18967<<ASSIGN  19335<<ASSIGN  19563<<ASSIGN
B$JIT.PRFLAGS.OU
      2872**DCL     18928>>IF      18940<<ASSIGN  19338<<ASSIGN
B$JIT.PRFLAGS.OUTPUT
      2872**DCL     18964<<ASSIGN
B$JIT.PRFLAGS.SI
      2872**DCL     18900>>IF      18912<<ASSIGN  19336<<ASSIGN
B$JIT.PRFLAGS.UI
      2872**DCL     18914>>IF      18926<<ASSIGN  19337<<ASSIGN
B$JIT.PSLEV
      2925**DCL     18816>>IF      18825>>IF
B$JIT.RNST
      2967**DCL     19024>>IF      19041>>ASSIGN  20647<<ASSIGN  20647>>ASSIGN
B$JIT.SSLEV
      2925**DCL     18816>>IF      18825>>IF
B$JIT.STEPCC
      3015**DCL     19218>>IF      19220<<ASSIGN  20200<<ASSIGN  20265>>IF      20267<<ASSIGN  20275>>IF
     20277<<ASSIGN
B$JIT.STEPS
      3009**DCL     18816>>IF      19014>>IF
B$JIT.TSLINE
      3057**DCL      3058--REDEF
B$JIT.USRDCB
      2937**DCL     18723>>ASSIGN  18842<>CALL
B$JIT.USRERR
      2924**DCL     18784>>ASSIGN  18795<>CALL    18842<>CALL    18898<<ASSIGN  18904>>IF      18909<<ASSIGN
     18918>>IF      18923<<ASSIGN  18932>>IF      18937<<ASSIGN  18951>>IF      18956<<ASSIGN  19482<<ASSIGN
     19611<<ASSIGN  20318<<ASSIGN  20361>>ASSIGN  20994>>ASSIGN
B$JIT.USRERR.CODE
      2924**DCL     18778>>IF      20344>>IF      20358>>IF      20991>>IF
B$JIT.USRRNST
      2924**DCL     19041<<ASSIGN  19198>>IF      19198>>IF      19198>>IF      19640<<ASSIGN  19911<<ASSIGN
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:323  
     19915<<ASSIGN  20264<<ASSIGN  20618>>IF
B$JIT.XLIMFLG
      3019**DCL     20622>>IF      20645>>IF
B$JIT.YC2SZ
      2943**DCL     20234>>IF      20350>>IF
B$JIT$
     15713**DCL      2783--IMP-PTR 18723>>ASSIGN  18732>>ASSIGN  18732>>ASSIGN  18740>>IF      18740>>IF
     18740>>IF      18755>>IF      18761>>IF      18763>>IF      18763>>IF      18778>>IF      18782>>IF
     18784>>ASSIGN  18795>>CALL    18807>>IF      18816>>IF      18816>>IF      18816>>IF      18816>>IF
     18816>>IF      18816>>IF      18816>>IF      18825>>IF      18825>>IF      18825>>IF      18842>>CALL
     18842>>CALL    18848>>IF      18848>>IF      18857>>IF      18857>>IF      18869>>IF      18876>>IF
     18886>>IF      18886>>IF      18898>>ASSIGN  18900>>IF      18904>>IF      18909>>ASSIGN  18912>>ASSIGN
     18914>>IF      18918>>IF      18923>>ASSIGN  18926>>ASSIGN  18928>>IF      18932>>IF      18937>>ASSIGN
     18940>>ASSIGN  18941>>IF      18943>>ASSIGN  18945>>ASSIGN  18947>>IF      18951>>IF      18956>>ASSIGN
     18959>>ASSIGN  18960>>ASSIGN  18963>>ASSIGN  18964>>ASSIGN  18965>>ASSIGN  18967>>ASSIGN  18972>>IF
     18983>>ASSIGN  18989>>IF      19014>>IF      19024>>IF      19027>>ASSIGN  19028>>IF      19031>>IF
     19041>>ASSIGN  19041>>ASSIGN  19043>>IF      19043>>IF      19058>>IF      19116>>IF      19116>>IF
     19188>>IF      19198>>IF      19198>>IF      19198>>IF      19198>>IF      19198>>IF      19198>>IF
     19198>>IF      19211>>ASSIGN  19218>>IF      19220>>ASSIGN  19226>>IF      19249>>IF      19286>>ASSIGN
     19311>>IF      19314>>CALLBLT 19316>>ASSIGN  19321>>ASSIGN  19323>>ASSIGN  19328>>CALLBLT 19330>>ASSIGN
     19331>>IF      19335>>ASSIGN  19336>>ASSIGN  19337>>ASSIGN  19338>>ASSIGN  19339>>ASSIGN  19359>>IF
     19359>>IF      19381>>IF      19390>>IF      19402>>IF      19465>>IF      19482>>ASSIGN  19563>>ASSIGN
     19584>>ASSIGN  19586>>ASSIGN  19602>>IF      19611>>ASSIGN  19638>>IF      19640>>ASSIGN  19662>>ASSIGN
     19705>>ASSIGN  19706>>IF      19706>>IF      19721>>IF      19725>>IF      19728>>ASSIGN  19795>>IF
     19852>>ASSIGN  19853>>IF      19861>>IF      19911>>ASSIGN  19915>>ASSIGN  19922>>ASSIGN  19931>>ASSIGN
     19931>>ASSIGN  19943>>IF      19947>>ASSIGN  19947>>ASSIGN  19957>>IF      19964>>IF      19964>>IF
     19972>>IF      19979>>IF      19986>>ASSIGN  19986>>ASSIGN  19996>>IF      20000>>IF      20058>>IF
     20081>>DOCASE  20200>>ASSIGN  20209>>IF      20228>>IF      20234>>IF      20234>>IF      20242>>IF
     20260>>IF      20264>>ASSIGN  20265>>IF      20267>>ASSIGN  20275>>IF      20277>>ASSIGN  20308>>IF
     20312>>ASSIGN  20315>>ASSIGN  20318>>ASSIGN  20335>>ASSIGN  20336>>IF      20344>>IF      20347>>IF
     20350>>IF      20358>>IF      20361>>ASSIGN  20362>>IF      20403>>IF      20403>>IF      20403>>IF
     20534>>IF      20537>>IF      20570>>CALLBLT 20573>>ASSIGN  20574>>ASSIGN  20574>>ASSIGN  20575>>ASSIGN
     20618>>IF      20622>>IF      20639>>IF      20645>>IF      20647>>ASSIGN  20647>>ASSIGN  20652>>IF
     20974>>ASSIGN  20975>>IF      20991>>IF      20994>>ASSIGN
B$PS1$
     15711**DCL     19252>>IF      20003>>ASSIGN  20004>>ASSIGN  20211>>IF      20310>>IF
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:324  
B$PS2$
     15712**DCL     20236>>ASSIGN  20352>>ASSIGN
B$TCB.ALT$
     16401**DCL     19530>>ASSIGN  20069>>DOSELCT 20094>>DOSELCT 20108>>ASSIGN  20118>>ASSIGN
B$TCB$
     15715**DCL     16401--IMP-PTR 19530>>ASSIGN  20069>>DOSELCT 20094>>DOSELCT 20108>>ASSIGN  20118>>ASSIGN
B$XL_UPPER$
     16578**DCL     16579--IMP-PTR 20923>>CALLBLT 20949>>CALLBLT
BLK$
     15986**DCL     16422--IMP-PTR 16468--IMP-PTR 18860<<ASSIGN  18889<<ASSIGN  19053<<ASSIGN  19163<<ASSIGN
     19172>>IF      19176<<ASSIGN  19176>>ASSIGN  19181>>ASSIGN  19184>>CALL    19191>>CALL    19416>>ASSIGN
     19443>>ASSIGN  19451<<ASSIGN  19452>>ASSIGN  19533<<ASSIGN  19571>>ASSIGN  19593>>CALL    19743>>ASSIGN
     19837>>IF      19839>>IF      19842>>ASSIGN  20021>>IF      20023>>ASSIGN  20681--IMP-PTR
CALL_SYNTAX_CHECKER
     19511**LABEL   19550--GOTO    19762--GOTO
CAMR_REC.ACSVEH_
     14752**DCL     14753--REDEF
CAMR_REC.ALTKEYS_
     14758**DCL     14759--REDEF   14759--REDEF
CAMR_REC.HDR_
     14757**DCL     14758--REDEF
CAMR_REC.TAB_
     14756**DCL     14757--REDEF
CAMR_REC.UHL_
     14750**DCL     14751--REDEF   14751--REDEF
CAMR_REC.V.FSN#
     14790**DCL     14790--REDEF   14790--REDEF
CAMR_REC.WSN_
     14756**DCL     14756--REDEF
CFPT_CLOSE.SN_
     13594**DCL     13594--REDEF
CFPT_CLOSE.UTL_
     13595**DCL     13595--REDEF
CFPT_CLOSE.V.EXPIRE#
     13609**DCL     13609--REDEF
CFPT_CLOSE.V.TYPE#
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:325  
     13607**DCL     13607--REDEF
CFPT_CLOSE.V.XTNSIZE#
     13604**DCL     13604--REDEF   13606--REDEF
CFPT_CPEXIT
     13877**DCL     19280>>ASSIGN  20007>>ASSIGN  20303>>ASSIGN
CFPT_FID
     13901**DCL     20898>>ASSIGN
CFPT_FINDPROC
     14908**DCL     20924>>ASSIGN
CFPT_OPEN
     13527**DCL     18975>>ASSIGN
CFPT_OPEN.ACSVEH_
     13529**DCL     13530--REDEF
CFPT_OPEN.ALTKEYS_
     13535**DCL     13536--REDEF   13536--REDEF
CFPT_OPEN.HDR_
     13534**DCL     13535--REDEF
CFPT_OPEN.TAB_
     13533**DCL     13534--REDEF
CFPT_OPEN.UHL_
     13527**DCL     13528--REDEF   13528--REDEF
CFPT_OPEN.V.FSN#
     13567**DCL     13567--REDEF   13567--REDEF
CFPT_OPEN.WSN_
     13533**DCL     13533--REDEF
CFPT_READ.STATION_
     13633**DCL     13634--REDEF
CFPT_READ.V.DVBYTE.REREAD#
     13645**DCL     13645--REDEF
CFPT_READ.V.INDX#
     13643**DCL     13643--REDEF
CFPT_READUC.STATION_
     14003**DCL     14004--REDEF
CFPT_READUC.V.DVBYTE.REREAD#
     14015**DCL     14015--REDEF
CFPT_READUC.V.INDX#
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:326  
     14013**DCL     14013--REDEF
CFPT_TRMCTL
     14453**DCL     20106>>ASSIGN
CFPT_TRTN.V.IR#
     14239**DCL     14240--REDEF
CFPT_WRITE.STATION_
     13671**DCL     13671--REDEF
CFPT_WRITE.V.DVBYTE.VFC#
     13678**DCL     13678--REDEF
CFPT_WRITEUC.STATION_
     13971**DCL     13971--REDEF
CFPT_WRITEUC.V.DVBYTE.VFC#
     13978**DCL     13978--REDEF
CFPT_XXX
     14950**DCL     19034>>ASSIGN
CFPT_XXX.V.STEPCC#
     14951**DCL     14951--REDEF
CGETCMD.OUT$
     14972**DCL     14978--REDEF
CHKERR
     18881**LABEL   18878--CALLALT
CHKQUIT
     20455**PROC    19191--CALL
CHKQUIT10 IN PROCEDURE CHKQUIT
     20543**LABEL   20541--CALLALT
CHKQUIT20 IN PROCEDURE CHKQUIT
     20546**LABEL   20544--CALLALT
CHK_4_WHEN_CMD
     20945**PROC    20048--CALL
CHK_BREAK
     19943**LABEL   19084--GOTO    19144--GOTO    19221--GOTO    19418--GOTO    19425--GOTO    19495--GOTO
     19499--GOTO    19503--GOTO    19520--GOTO    19604--GOTO    20033--GOTO    20068--GOTO    20086--GOTO
     20144--GOTO    20283--GOTO
CHK_RUTYPE
     20673**PROC    19184--CALL
CHK_SYNTAX
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:327  
     19353**LABEL   19212--GOTO    19214--GOTO    19228--GOTO
CMD_PARSING
     15969**DCL     19181<<ASSIGN  19182>>IF      19207>>DOCASE  19232>>DOCASE  19255>>DOCASE  19353>>DOCASE
     19359>>IF      19359>>IF      19366<<ASSIGN  19405<<ASSIGN  19417<<ASSIGN  19433>>IF      19444<<ASSIGN
     19452<<ASSIGN  19517>>IF      19537>>IF      19571<<ASSIGN  19576>>DOCASE  19609>>IF      19616>>DOCASE
     19757<<ASSIGN  20928<<ASSIGN
CMD_SOURCE
     15974**DCL     19074<>CALL    19094>>DOCASE  19122<>CALL    19198>>IF      19378>>IF      19402>>IF
     19465>>IF      19465>>IF      19475>>IF      19497<>CALL    19501<>CALL    19597<>CALL    19756<>CALL
     20134<>CALL    20185>>IF      20185>>IF      20201<>CALL    20270>>IF      20336>>IF      20336>>IF
     20340<>CALL    20975>>IF      20979<>CALL
CMND_CASE
     19593**LABEL   19400--GOTO    19437--GOTO    19542--GOTO
CNTL_Y_INT
     20030**LABEL   19100--REMEMBR
CONTEXT_ERR
     20200**LABEL   19184--CALLALT 19491--GOTO    19569--GOTO    20300--GOTO
CONTEXT_ERR_UNWIND
     20299**LABEL   19002--REMEMBR
CONTINUATION_COMMANDS
     14300**DCL     18980--ASSIGN
CP$BUFF
     16557**DCL     19078<<ASSIGN  19078>>ASSIGN  19103--ASSIGN  19105<<CALLBLT 19105>>CALLBLT 19130<<ASSIGN
     19130>>ASSIGN  19314>>CALLBLT 19321>>ASSIGN  19445>>ASSIGN  19458<<CALLBLT 19458>>CALLBLT 19544<<ASSIGN
     19929<<ASSIGN  20169>>IF      20174<<ASSIGN  20174>>ASSIGN  20543--ASSIGN  20550--ASSIGN  20570>>CALLBLT
     20948>>ASSIGN
CPA$BACKUP
     15844**DCL-ENT 19629--CALL
CPA$BYE
     15846**DCL-ENT 18809--CALL    18844--CALL    18851--CALL    19046--CALL    19641--CALL    19855--CALL
     20075--CALL    20083--CALL    20096--CALL    20105--CALL    20268--CALL    20654--CALL
CPA$CHK_IF_A_DISALLOWED_CMD
     15950**DCL-ENT 18788--CALL
CPA$CONTINUE
     15848**DCL-ENT 18999--ASSIGN
CPA$DEBUG
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:328  
     15849**DCL-ENT 19663--CALL
CPA$ECHOCC
     15851**DCL-ENT 19497--CALL    19501--CALL    19597--CALL    20134--CALL    20201--CALL    20340--CALL
     20979--CALL
CPA$EDIT
     15850**DCL-ENT 19681--CALL
CPA$EFT
     15852**DCL-ENT 19684--CALL
CPA$EXIT
     15853**DCL-ENT 19693--CALL
CPA$FEPLINK
     15854**DCL-ENT 19696--CALL
CPA$FLUSH
     15855**DCL-ENT 19217--CALL    19857--CALL    20031--CALL    20274--CALL    20563--CALL
CPA$GET
     15856**DCL-ENT 19699--CALL
CPA$GETRES
     15857**DCL-ENT 19369--CALL
CPA$GO
     15858**DCL-ENT 19708--CALL
CPA$JOIN
     15860**DCL-ENT 19767--CALL
CPA$LINK
     15862**DCL-ENT 19776--CALL
CPA$PCL
     15864**DCL-ENT 19807--CALL
CPA$PMD
     15865**DCL-ENT 19813--CALL
CPA$READCC
     15867**DCL-ENT 19074--CALL    19122--CALL    19756--CALL
CPA$RUNIT
     15868**DCL-ENT 19932--CALL
CPA$SAVE
     15869**DCL-ENT 19881--CALL
CPA$SIXEDIT
     15870**DCL-ENT 19887--CALL
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:329  
CPA$START
     15871**DCL-ENT 19890--CALL
CPA$UNDER
     15872**DCL-ENT 19902--CALL
CPA$WR_CONTFILE
     15873**DCL-ENT 19527--CALL
CPB$ATITLE
     15874**DCL-ENT 19626--CALL
CPB$COUPLE
     15875**DCL-ENT 19654--CALL
CPB$DECOUPLE
     15876**DCL-ENT 19658--CALL
CPB$LOCATE
     15880**DCL-ENT 19783--CALL
CPB$MESSAGE
     15882**DCL-ENT 19786--CALL
CPB$OPENCS
     15881**DCL-ENT 20430--CALL
CPB$PLATEN
     15883**DCL-ENT 19810--CALL
CPB$REPORT
     15884**DCL-ENT 19878--CALL
CPB$STATUS
     15886**DCL-ENT 19893--CALL
CPB$TITLE
     15889**DCL-ENT 19908--CALL
CPC$EXIT
     15890**DCL-ENT 20011--CALL    20319--CALL
CPC$GETDCB
     15891**DCL-ENT 18727--CALL    18728--CALL    19298--CALL    19299--CALL
CPC$OPEN_LL
     15894**DCL-ENT 18830--CALL    19070--CALL    19295--CALL    19741--CALL    20397--CALL
CPC$QUIT
     15895**DCL-ENT 19333--CALL    19868--CALL    20576--CALL
CPC$RDUSERS
     15896**DCL-ENT 19368--CALL
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:330  
CPC$RELDCB
     15892**DCL-ENT 19278--CALL
CPC$SCREECH
     15898**DCL-ENT 20012--CALL    20320--CALL
CPC$UNIMPCMD
     15900**DCL-ENT 19653--CALL    19657--CALL    19766--CALL    19782--CALL
CPC$WRITEMSGE
     15901**DCL-ENT 18771--CALL    18791--CALL    18795--CALL    18842--CALL    19140--CALL    19216--CALL
     19384--CALL    19395--CALL    19724--CALL    19975--CALL    20032--CALL    20085--CALL    20100--CALL
     20230--CALL    20263--CALL    20273--CALL    20316--CALL    20364--CALL    20632--CALL    20995--CALL
CPD$SYNTAX
     15902**DCL-ENT 19515--CALL
CPD$SYNTRY
     15903**DCL-ENT 19513--ASSIGN
CPE$COMMENT
     15904**DCL-ENT 19650--CALL
CPE$DIAGOUT
     15906**DCL-ENT 19108--CALL
CPE$DISPLAY
     15905**DCL-ENT 19669--CALL
CPE$DONT
     15907**DCL-ENT 19672--CALL
CPE$ECHO
     15908**DCL-ENT 19678--CALL
CPE$EJECT
     15909**DCL-ENT 19687--CALL
CPE$EXPOUND
     15910**DCL-ENT 19690--CALL
CPE$LIST
     15911**DCL-ENT 19779--CALL
CPE$PASSWORD
     15914**DCL-ENT 19804--CALL
CPE$POINT
     15915**DCL-ENT 19816--CALL
CPE$POSITION
     15916**DCL-ENT 19819--CALL
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:331  
CPE$PROTECT
     15917**DCL-ENT 19834--CALL
CPE$RZEROS
     15918**DCL-ENT 19138--CALL
CPE$TIME
     15919**DCL-ENT 19404--CALL    19905--CALL
CPF$PRIV
     15920**DCL-ENT 19825--CALL
CPF$PROFILE
     15921**DCL-ENT 19828--CALL
CPF$PROMPT
     15953**DCL-ENT 19831--CALL
CPF$SET_PROMPT
     15954**DCL-ENT 19477--CALL
CPF$SWITCH
     15922**DCL-ENT 19896--CALL
CPF$TERMINAL
     15923**DCL-ENT 19498--CALL
CPG$CHK_WHEN_CONDITION
     15847**DCL-ENT 18861--CALL    18890--CALL
CPG$FUN$$
     15924**DCL-ENT 19064--ASSIGN
CPG$GOTO
     15925**DCL-ENT 19737--CALL
CPG$IF
     15926**DCL-ENT 19749--CALL
CPG$LET
     15927**DCL-ENT 19770--CALL
CPG$OUTPUT
     15928**DCL-ENT 19801--CALL
CPG$WHEN
     15929**DCL-ENT 19502--CALL
CPH$BATXEQ
     15930**DCL-ENT 19632--CALL    19912--CALL    19916--CALL
CPH$GLOBAL
     15931**DCL-ENT 19702--CALL
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:332  
CPI$ACCEPT
     15932**DCL-ENT 19619--CALL
CPI$DIRECTORY
     15933**DCL-ENT 19666--CALL
CPI$DRIBBLE
     15934**DCL-ENT 19675--CALL
CPI$PRIORITY
     15935**DCL-ENT 19822--CALL
CPI$SETUP
     15936**DCL-ENT 19884--CALL
CPI$TABS
     15937**DCL-ENT 19899--CALL
CPJ$ESTCUM
     15938**DCL-ENT 18991--CALL    20641--CALL
CPJ$LIMIT
     15861**DCL-ENT 19773--CALL
CPK$CANCEL
     15939**DCL-ENT 19644--CALL
CPK$CHECK
     15940**DCL-ENT 18878--CALL    19647--CALL
CPK$NOTIFY
     15941**DCL-ENT 19789--CALL
CPM$MINI
     15945**DCL-ENT 19436--CALL
CPO$ACQUIRE
     15942**DCL-ENT 19622--CALL
CPO$ORES
     15943**DCL-ENT 19798--CALL
CPO$RELEASE
     15944**DCL-ENT 19875--CALL
CPR$RPTERR
     15947**DCL-ENT 18881--CALL    20122--CALL    20137--CALL    20222--CALL    20349--CALL    20986--CALL
CPSL_PARAM
     16560**DCL     18899<<ASSIGN  18903<>CALL    19453<<ASSIGN  19480<>CALL
CPSL_PARAM.ERRCODE
     16568**DCL     19489<>CALL
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:333  
CPSL_PARAM.ERR_CPOS
     16574**DCL     19489<>CALL
CPSL_PARAM.FLAGS.ECHO
     16567**DCL     19470<<ASSIGN  19472<<ASSIGN  19474<<ASSIGN
CPSL_PARAM.FLAGS.INHIBIT_ERRMSG
     16564**DCL     19454<<ASSIGN
CPSL_PARAM.FLAGS.REPORTED_TO_USER
     16565**DCL     18907>>IF      18921>>IF      18935>>IF      18954>>IF      19484>>IF
CPSL_PARAM.WORK_DCB#
     16561**DCL     19455<<ASSIGN
CPX$FIRST_PASS
     15949**DCL-ENT 19065--ASSIGN  19754--ASSIGN
CVLP_TRMCTL.BREAKCOUNT
     14563**DCL     14564--REDEF
CVLP_WINDOW
     14659**DCL     20111>>ASSIGN
CVLP_WINDOW.FWINDOW#
     14659**DCL     14659--REDEF   14660--REDEF
CXB$DELAM
     15877**DCL-ENT 18903--CALL    18917--CALL    18931--CALL    18950--CALL
CXC$COMMAND
     15951**DCL-ENT 19480--CALL
CXG$ALLMSG
     15965**DCL-ENT 19420--CALL
CXG$BLANK_PASSWORD
     15966**DCL-ENT 19593--CALL
CXG$ERRMSG
     15963**DCL-ENT 19410--CALL    19423--CALL
CXG$ERRPTR
     15962**DCL-ENT 20216--CALL
CXG$HELP
     15965**DCL-ENT 19745--CALL
CXG$INIT
     15962**DCL-ENT 20393--CALL
CXG$MOREMSG
     15965**DCL-ENT 19407--CALL
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:334  
CXG$SETERRMSG
     15963**DCL-ENT 18785--CALL
CXP$POSTERR
     15946**DCL-ENT 19489--CALL    19843--CALL    20121--CALL    20135--CALL    20191--CALL    20193--CALL
     20198--CALL    20435--CALL    20913--CALL
CXUH_PARAM
     16226**DCL     19740>>ASSIGN
DATA_IGNORED_LOOP
     19100**LABEL   20188--GOTO
DELETE_CFILE
     18980**LABEL   18981--CALLALT
EAT_HELP_ALT
     19744**LABEL   19745--CALLALT
ERR$BLK.BLK.CHARPOS
     16200**DCL     20208>>ASSIGN  20352>>ASSIGN
ERR$BLK.BLK.ERROR
     16204**DCL     20223>>ASSIGN  20354>>ASSIGN  20987>>ASSIGN
ERR$BLK.FIRST
     16197**DCL     18749<<ASSIGN  19398<<ASSIGN  19511<<ASSIGN  19557>>IF      19565<<ASSIGN  19792<<ASSIGN
     19935>>IF      20123<<ASSIGN  20138<<ASSIGN  20160<<ASSIGN  20205>>IF      20224<<ASSIGN  20344>>IF
     20355<<ASSIGN  20983>>IF      20988<<ASSIGN
ERR$BLK.NEXT
     16198**DCL     18750<<ASSIGN  19399<<ASSIGN  19512<<ASSIGN  19566<<ASSIGN  20124<<ASSIGN  20139<<ASSIGN
     20161<<ASSIGN  20225<<ASSIGN  20356<<ASSIGN  20989<<ASSIGN
ERR$BLK.SIZE
     16196**DCL     18748<<ASSIGN
ERRTRN
     20335**LABEL   18744--CALLALT 18781--CALLALT 18910--GOTO    18924--GOTO    18938--GOTO    18957--GOTO
     18991--CALLALT 19000--REMEMBR 19368--CALLALT 19369--CALLALT 19498--CALLALT 19502--CALLALT 19619--CALLALT
     19622--CALLALT 19626--CALLALT 19629--CALLALT 19632--CALLALT 19644--CALLALT 19647--CALLALT 19650--CALLALT
     19654--CALLALT 19658--CALLALT 19663--CALLALT 19666--CALLALT 19669--CALLALT 19672--CALLALT 19675--CALLALT
     19681--CALLALT 19684--CALLALT 19687--CALLALT 19690--CALLALT 19693--CALLALT 19696--CALLALT 19699--CALLALT
     19702--CALLALT 19708--CALLALT 19737--CALLALT 19749--CALLALT 19767--CALLALT 19770--CALLALT 19773--CALLALT
     19776--CALLALT 19779--CALLALT 19783--CALLALT 19786--CALLALT 19789--CALLALT 19798--CALLALT 19801--CALLALT
     19804--CALLALT 19807--CALLALT 19810--CALLALT 19813--CALLALT 19816--CALLALT 19819--CALLALT 19822--CALLALT
     19825--CALLALT 19828--CALLALT 19831--CALLALT 19834--CALLALT 19844--GOTO    19868--CALLALT 19875--CALLALT
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:335  
     19878--CALLALT 19881--CALLALT 19884--CALLALT 19887--CALLALT 19890--CALLALT 19893--CALLALT 19896--CALLALT
     19899--CALLALT 19902--CALLALT 19905--CALLALT 19908--CALLALT 19912--CALLALT 19916--CALLALT 19932--CALLALT
     19937--GOTO
ERRXIT
     20234**LABEL   19486--GOTO    20366--GOTO
ERR_CODE
     16148**DCL     18790<<ASSIGN  18791<>CALL    19027<<ASSIGN  19035--ASSIGN  19102<<ASSIGN  19116>>IF
     19121<<ASSIGN  19125<<ASSIGN  19145>>IF      19259<<ASSIGN  19286<<ASSIGN  19308<<ASSIGN  19961<<ASSIGN
     20036<<ASSIGN  20115<<ASSIGN  20118<<ASSIGN  20121<>CALL    20166<<ASSIGN  20193<>CALL    20198<>CALL
     20223<<ASSIGN  20230<>CALL    20307>>ASSIGN  20316<>CALL    20354<<ASSIGN  20361<<ASSIGN  20364<>CALL
     20987<<ASSIGN  20994<<ASSIGN  20995<>CALL
ERR_CODE.ERR#
     16178**DCL     20044>>IF      20044>>IF      20064>>IF      20167>>IF
ERR_CODE.FCG
     16164**DCL     20064>>IF      20196>>IF
ERR_CODE.MID
     16177**DCL     20064>>IF
ERR_CODE.MON
     16177**DCL     20037>>IF
E_ABRTBATCH
     18329**DCL     19216<>CALL    20263<>CALL    20273<>CALL
E_BANG_EOD
     18548**DCL     19116>>IF
E_BANG_EOD.ERR#
     18578**DCL     20064>>IF
E_BANG_EOD.FCG
     18564**DCL     20064>>IF
E_BANG_EOD.MID
     18577**DCL     20064>>IF
E_BDQUITCMND
     18683**DCL     19843<>CALL
E_CHK_C$QUIT IN PROCEDURE CHKQUIT
     20584**LABEL   20576--CALLALT
E_CMDDISALLOWED
     18529**DCL     18790>>ASSIGN
E_CONT
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:336  
     18369**DCL     19724<>CALL
E_CSINT
     18289**DCL     18771<>CALL    19975<>CALL    20032<>CALL
E_EMPTYWND
     18638**DCL     20115>>ASSIGN
E_ILLRUFID
     18489**DCL     20913<>CALL
E_INPUT
     18409**DCL     20085<>CALL    20100<>CALL
E_LIMEXC
     18429**DCL     20632<>CALL
E_LIMIT IN PROCEDURE LIMIT_ERR
     20660**LABEL   20641--CALLALT 20654--CALLALT
E_M$YCPMME
     20303**LABEL   19030--GOTO    19260--GOTO    19287--GOTO    19309--GOTO    19962--GOTO    20245--GOTO
E_MINI
     19442**LABEL   19436--CALLALT
E_MPRESOURCE
     18449**DCL     19395<>CALL
E_NJOBSTEP
     18593**DCL     19259>>ASSIGN
E_NO_MORE
     18509**DCL     19409>>ASSIGN  19422>>ASSIGN
E_READCC
     20036**LABEL   19074--CALLALT 19147--GOTO    19531--GOTO    19593--CALLALT 19756--CALLALT
E_RECS_IGNORED
     18389**DCL     19140<>CALL
E_RESINVALID
     18469**DCL     19384<>CALL
E_YCPMMEBRK
     18309**DCL     19961>>ASSIGN
E_YC_RUND
     18349**DCL     19308>>ASSIGN
F$DCB.ACTPOS
     16532**DCL     16532--REDEF
F$DCB.ARS#
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:337  
     16506**DCL     16506--REDEF   20546>>IF      20549>>ASSIGN
F$DCB.ATTR
     16525**DCL     16526--REDEF
F$DCB.BORROW
     16540**DCL     16540--REDEF   16540--REDEF   16540--REDEF
F$DCB.CRECNO
     16544**DCL     19390>>IF
F$DCB.DCBNAME.L
     16554**DCL     16554--IMP-SIZ
F$DCB.EOMCHAR#
     16510**DCL     16510--REDEF
F$DCB.FCD#
     16519**DCL     20416>>IF      20423>>IF
F$DCB.FLDID
     16535**DCL     16535--REDEF
F$DCB.FORM$
     16529**DCL     16529--REDEF
F$DCB.FSECT
     16545**DCL     16545--REDEF
F$DCB.FSN#
     16522**DCL     16522--REDEF   16522--REDEF   16523--REDEF
F$DCB.HEADER$
     16528**DCL     16528--REDEF
F$DCB.IXTNSIZE#
     16526**DCL     16526--REDEF
F$DCB.LASTSTA$
     16515**DCL     16515--REDEF
F$DCB.LVL
     16541**DCL     16541--REDEF
F$DCB.NAME#.C
     16516**DCL     16516--REDEF
F$DCB.NOEOF
     16538**DCL     16538--REDEF
F$DCB.NRECS#
     16527**DCL     16527--REDEF
F$DCB.NRECX
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:338  
     16546**DCL     16546--REDEF
F$DCB.OHDR
     16538**DCL     16538--REDEF
F$DCB.ORG#
     16521**DCL     16521--REDEF
F$DCB.PRECNO
     16544**DCL     16544--REDEF
F$DCB.RCSZ
     16550**DCL     16550--REDEF
F$DCB.RES#
     16517**DCL     16517--REDEF
F$DCB.SETX
     16529**DCL     16529--REDEF
F$DCB.TAB$
     16529**DCL     16529--REDEF
F$DCB.TDA
     16543**DCL     16544--REDEF
F$DCB.WSN#
     16517**DCL     16517--REDEF
FID_ACCT IN PROCEDURE CHK_RUTYPE
     20834**DCL     20902--ASSIGN
FID_ACCT.ACCT# IN PROCEDURE CHK_RUTYPE
     20834**DCL     20921>>IF
FID_ASN IN PROCEDURE CHK_RUTYPE
     20894**DCL     20906--ASSIGN  20910>>IF
FID_NAME IN PROCEDURE CHK_RUTYPE
     20821**DCL     20901--ASSIGN  20926--ASSIGN
FID_NAME.L# IN PROCEDURE CHK_RUTYPE
     20821**DCL     20910>>IF      20930>>ASSIGN
FID_NAME.NAME# IN PROCEDURE CHK_RUTYPE
     20821**DCL     20923<<CALLBLT 20923>>CALLBLT 20931>>ASSIGN
FID_PASS IN PROCEDURE CHK_RUTYPE
     20847**DCL     20903--ASSIGN
FID_RES IN PROCEDURE CHK_RUTYPE
     20895**DCL     20907--ASSIGN
FID_RESULTS IN PROCEDURE CHK_RUTYPE
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:339  
     20886**DCL     20908--ASSIGN
FID_RESULTS.ACCT IN PROCEDURE CHK_RUTYPE
     20886**DCL     20921>>IF
FID_SN IN PROCEDURE CHK_RUTYPE
     20860**DCL     20904--ASSIGN
FID_WSN IN PROCEDURE CHK_RUTYPE
     20873**DCL     20905--ASSIGN
FIRST_SYNTAX_ERR
     15990**DCL     19007<<ASSIGN  19076<<ASSIGN  20169>>IF      20180<<ASSIGN
FPT$CLOSE
     16605**DCL     19926<>CALL    20421<>CALL    20428<>CALL
FPT$CLOSE.SN_
     16605**DCL     16605--REDEF
FPT$CLOSE.UTL_
     16606**DCL     16606--REDEF
FPT$CLOSE.V.DCB#
     16611**DCL     19924<<ASSIGN  20419<<ASSIGN  20426<<ASSIGN
FPT$CLOSE.V.DISP#
     16614**DCL     19925<<ASSIGN  20420<<ASSIGN  20427<<ASSIGN
FPT$CLOSE.V.EXPIRE#
     16620**DCL     16620--REDEF
FPT$CLOSE.V.TYPE#
     16618**DCL     16618--REDEF
FPT$CLOSE.V.XTNSIZE#
     16615**DCL     16615--REDEF   16617--REDEF
FPT$CPEXIT
     16707**DCL     19280<<ASSIGN  19284<>CALL    20007<<ASSIGN  20303<<ASSIGN
FPT$CPEXIT.V
     16710**DCL     19281--ASSIGN  20008--ASSIGN  20304--ASSIGN
FPT$CPEXIT.V.ALTRTN#
     16715**DCL     20306<<ASSIGN
FPT$CPEXIT.V.CONT#
     16715**DCL     20010<<ASSIGN
FPT$CPEXIT.V.JERR
     16717**DCL     20307<<ASSIGN
FPT$CPEXIT.V.LINK#
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:340  
     16716**DCL     19283<<ASSIGN
FPT$CPEXIT.V_
     16710**DCL     19281<<ASSIGN  20008<<ASSIGN  20304<<ASSIGN
FPT$FID IN PROCEDURE CHK_RUTYPE
     20784**DCL     20898<<ASSIGN  20909<>CALL
FPT$FID.ACCT_ IN PROCEDURE CHK_RUTYPE
     20785**DCL     20902<<ASSIGN
FPT$FID.ASN_ IN PROCEDURE CHK_RUTYPE
     20787**DCL     20906<<ASSIGN
FPT$FID.NAME_ IN PROCEDURE CHK_RUTYPE
     20785**DCL     20901<<ASSIGN
FPT$FID.PASS_ IN PROCEDURE CHK_RUTYPE
     20785**DCL     20903<<ASSIGN
FPT$FID.RESULTS_ IN PROCEDURE CHK_RUTYPE
     20787**DCL     20908<<ASSIGN
FPT$FID.RES_ IN PROCEDURE CHK_RUTYPE
     20787**DCL     20907<<ASSIGN
FPT$FID.SN_ IN PROCEDURE CHK_RUTYPE
     20786**DCL     20904<<ASSIGN
FPT$FID.TEXTFID_ IN PROCEDURE CHK_RUTYPE
     20784**DCL     20900<<ASSIGN
FPT$FID.V IN PROCEDURE CHK_RUTYPE
     20788**DCL     20899--ASSIGN
FPT$FID.V_ IN PROCEDURE CHK_RUTYPE
     20784**DCL     20899<<ASSIGN
FPT$FID.WSN_ IN PROCEDURE CHK_RUTYPE
     20786**DCL     20905<<ASSIGN
FPT$READ
     16641**DCL     20544<>CALL
FPT$READ.BUF_
     16643**DCL     20543<<ASSIGN
FPT$READ.STATION_
     16644**DCL     16645--REDEF
FPT$READ.V.DVBYTE.REREAD#
     16656**DCL     16656--REDEF
FPT$READ.V.INDX#
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:341  
     16654**DCL     16654--REDEF
FPT$WRITE
     16680**DCL     20541<>CALL
FPT$WRITE.BUF_
     16680**DCL     19103<<ASSIGN  20540<<ASSIGN
FPT$WRITE.STATION_
     16682**DCL     16682--REDEF
FPT$WRITE.V.DVBYTE.VFC#
     16689**DCL     16689--REDEF
FPTV$YC.ECHO
     16721**DCL     20003>>ASSIGN
FPTV$YC.LINK
     16721**DCL     19252>>IF
FPTV$YC.NOERR
     16721**DCL     20004>>ASSIGN  20211>>IF      20310>>IF
FPT_FINDPROC IN PROCEDURE CHK_RUTYPE
     20768**DCL     20924<<ASSIGN  20927<>CALL
FPT_FINDPROC.NAME_ IN PROCEDURE CHK_RUTYPE
     20768**DCL     20926<<ASSIGN
FPT_FINDPROC.V IN PROCEDURE CHK_RUTYPE
     20770**DCL     20925--ASSIGN
FPT_FINDPROC.V_ IN PROCEDURE CHK_RUTYPE
     20768**DCL     20925<<ASSIGN
FPT_OPEN
     16065**DCL     18975<<ASSIGN  18981<>CALL
FPT_OPEN.ACSVEH_
     16067**DCL     16068--REDEF
FPT_OPEN.ALTKEYS_
     16073**DCL     16074--REDEF   16074--REDEF
FPT_OPEN.HDR_
     16072**DCL     16073--REDEF
FPT_OPEN.NAME_
     16066**DCL     18980<<ASSIGN
FPT_OPEN.TAB_
     16071**DCL     16072--REDEF
FPT_OPEN.UHL_
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:342  
     16065**DCL     16066--REDEF   16066--REDEF
FPT_OPEN.V
     16074**DCL     18976--ASSIGN
FPT_OPEN.V.ASN#
     16084**DCL     18978<<ASSIGN
FPT_OPEN.V.DCB#
     16074**DCL     18977<<ASSIGN
FPT_OPEN.V.DELETE#
     16076**DCL     18979<<ASSIGN
FPT_OPEN.V.FSN#
     16105**DCL     16105--REDEF   16105--REDEF
FPT_OPEN.V_
     16065**DCL     18976<<ASSIGN
FPT_OPEN.WSN_
     16071**DCL     16071--REDEF
FPT_TRMCTL
     16125**DCL     20106<<ASSIGN  20114<>CALL
FPT_TRMCTL.TRMCTL_
     16131**DCL     20110<<ASSIGN
FPT_TRMCTL.V
     16133**DCL     20107--ASSIGN
FPT_TRMCTL.V.DCB#
     16133**DCL     20108<<ASSIGN
FPT_TRMCTL.V.VLPTYPE#
     16133**DCL     20109<<ASSIGN
FPT_TRMCTL.V_
     16127**DCL     20107<<ASSIGN
FPT_XXX
     18213**DCL     19034<<ASSIGN  19036<>CALL
FPT_XXX.CODE_
     18213**DCL     19035<<ASSIGN
FPT_XXX.V.STEPCC#
     18214**DCL     18214--REDEF
GET$CMD
     16743**DCL     18785<>CALL    19074<>CALL    19122<>CALL    19407<>CALL    19410<>CALL    19420<>CALL
     19423<>CALL    19480<>CALL    19515<>CALL    19527<>CALL    19593<>CALL    19745<>CALL    19756<>CALL
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:343  
     20216<>CALL    20393<>CALL
GET$CMD.CONTINUED#
     16803**DCL     19326>>IF
GET$CMD.CONTINUE_OK#
     16807**DCL     19063<<ASSIGN  19464<<ASSIGN
GET$CMD.EPOS#
     16853**DCL     20214<<ASSIGN
GET$CMD.ERR#
     16754**DCL     19125>>ASSIGN  19530<<ASSIGN  20036>>ASSIGN  20135<>CALL    20166>>ASSIGN  20435<>CALL
GET$CMD.ERR_CODE
     16891**DCL     18784<<ASSIGN  19409<<ASSIGN  19422<<ASSIGN
GET$CMD.INDCB#
     16914**DCL     19718<<ASSIGN  19872<<ASSIGN  19977<<ASSIGN  20407<<ASSIGN  20431<<ASSIGN  20537>>IF
     20561>>IF      20567>>IF
GET$CMD.NODES$
     16744**DCL     19060<<ASSIGN  19062<<ASSIGN  19113<<ASSIGN  19753<<ASSIGN
GET$CMD.OUT$
     16748**DCL     16754--REDEF   19163>>ASSIGN  19451>>ASSIGN  19533>>ASSIGN  19758>>DOCASE
GET$CMD.OUTDCB#
     16919**DCL     19073<<ASSIGN  19296<<ASSIGN  20398<<ASSIGN
GET$CMD.PASS
     16873**DCL     19066<<ASSIGN
GET$CMD.PCB$
     16768**DCL     19057>>ASSIGN  19114>>ASSIGN  19126>>ASSIGN  20395>>ASSIGN
GET$CMD.PP_FUN$$
     16961**DCL     19064<<ASSIGN
GET$CMD.PP_ROOT$
     17048**DCL     20399<<ASSIGN
GET$CMD.PROMPT_
     16952**DCL     20569>>ASSIGN  20570>>CALLBLT
GET$CMD.RCVD_PROMPT#
     16813**DCL     19096>>IF      19115>>DOWHILE 19142>>IF      19311>>IF      19456>>IF      20185>>IF
GET$CMD.RPROMPT_
     16956**DCL     19477<>CALL    19479<<ASSIGN
GET$CMD.SFROUTINE$
     16993**DCL     19065<<ASSIGN  19513<<ASSIGN  19754<<ASSIGN
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:344  
GET$CMD.SKIP_PREPROCESS#
     16824**DCL     20049<<ASSIGN  20179<<ASSIGN
GET$CMD.TEXT_
     17006**DCL     19462<<ASSIGN  19463<<ASSIGN  19483<<ASSIGN  19494<<ASSIGN  20050<<ASSIGN  20176<<ASSIGN
     20177<<ASSIGN  20299<<ASSIGN  20550<<ASSIGN
GET$CMD.USE_EPOS#
     16786**DCL     20215<<ASSIGN
GET$CMD.XUH$
     16781**DCL     19744<<ASSIGN
I
     15970**DCL     19008<<DOINDEX 19009>>ASSIGN  19112<<ASSIGN  19133<<ASSIGN  19133>>ASSIGN  19135<<ASSIGN
     19135>>ASSIGN  19137>>CALLBLT 19138<>CALL    19139>>ASSIGN  19842<<ASSIGN  19843<>CALL    20335<<ASSIGN
     20364<>CALL    20621<<DOINDEX 20622>>IF      20625>>ASSIGN  20626>>ASSIGN  20950<<CALLBLT 20951>>IF
     20953>>IF      20974<<ASSIGN  20995<>CALL
IBEX1TXTC
     15725**DCL     18728<>CALL    19299<>CALL
IBEXTXTC
     15722**DCL     18727<>CALL    19298<>CALL
IBEX_CMD
     15995**DCL     19062--ASSIGN  19113--ASSIGN  19753--ASSIGN
IBEX_NAME
     14421**DCL     16230--DCLINIT
IGNORED
     15976**DCL     19140<>CALL
IGNORED.CNT
     15977**DCL     19139<<ASSIGN
IGNORED.TXT
     15978**DCL     15979--REDEF   19137<<CALLBLT 19138<>CALL
IGNORE_RES
     19361**LABEL   19380--GOTO    19385--GOTO    19396--GOTO    19548--GOTO    19760--GOTO
INIT_ERR IN PROCEDURE OPENINPUT
     20435**LABEL   20393--CALLALT
K
     15972**DCL     19317<<ASSIGN  19324<<ASSIGN  19328>>CALLBLT 19447<<ASSIGN  19927<<ASSIGN  19930>>ASSIGN
     20947<<ASSIGN  20948>>ASSIGN
LIMIT_ERR
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:345  
     20601**PROC    18781--CALL    19042--CALL
LINKPMME_CMD
     15997**DCL     19060--ASSIGN
LISTDCB
     15768**DCL     18950--CALL    18950--CALL
LOGOFF
     18238**DCL     18838<>CALL
LOGOFF.ACCUM_CHG
     18268**DCL     18839>>ASSIGN
LOGOFF.CODE
     18239**DCL     18835<<ASSIGN
LOGOFF.DCB1
     18250**DCL     18837<<ASSIGN
LOGOFF.DCB_LL
     18254**DCL     18831<<ASSIGN  18834<<ASSIGN
LOGOFF.ERR
     18244**DCL     18836<<ASSIGN  18843>>IF
LOGOFF_ERR
     18842**LABEL   18838--CALLALT
M$CLOSE
      3184**DCL-ENT 19926--CALL    20421--CALL    20428--CALL
M$CPEXIT
      3198**DCL-ENT 19284--CALL
M$FID
      3247**DCL-ENT 20909--CALL
M$FINDPROC
      3201**DCL-ENT 20927--CALL
M$IBEX1_NUM
     15719**DCL     18728<>CALL    18837>>ASSIGN  18903<>CALL    18917<>CALL    18931<>CALL    18950<>CALL
     18977>>ASSIGN  19299<>CALL    19368<>CALL    19455>>ASSIGN  19924>>ASSIGN  20392>>ASSIGN  20423--IF
     20426>>ASSIGN
M$IBEX2_NUM
     15720**DCL     19272>>IF
M$IBEX_NUM
     15718**DCL     18727<>CALL    19298<>CALL    19718>>ASSIGN  19872>>ASSIGN  20416--IF      20419>>ASSIGN
     20431>>ASSIGN
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:346  
M$LL_NUM
     15721**DCL     19278<>CALL
M$OPEN
      3184**DCL-ENT 18981--CALL
M$READ
      3185**DCL-ENT 20544--CALL
M$STRMCTL
      3208**DCL-ENT 20114--CALL
M$UC
      3208**DCL     19390--IF
M$UC_NUM
     15716**DCL     19272>>IF      19977>>ASSIGN  20407>>ASSIGN  20537>>IF      20546--IF      20549--ASSIGN
     20561>>IF      20567>>IF
M$WRITE
      3185**DCL-ENT 20541--CALL
M$XXX
      3196**DCL-ENT 19036--CALL
NOT_WHEN_CMD
     20058**LABEL   20048--CALLALT
NOT_WHEN_CMD IN PROCEDURE CHK_4_WHEN_CMD
     20959**LABEL   20950--CALLALT 20955--GOTO
OBJECTDCB
     15765**DCL     18931--CALL    18931--CALL
OPENINPUT
     20386**PROC    18744--CALL
P$B
     16422**DCL     19184<>CALL    19191<>CALL    19593<>CALL
P$B.CODE
     16430**DCL     19181>>ASSIGN  19416<<ASSIGN  19443<<ASSIGN  19452>>ASSIGN  19540>>IF      19546>>DOCASE
     19571>>ASSIGN  19758>>DOCASE  20023>>ASSIGN
P$B.CPOS
     16448**DCL     19544>>ASSIGN
P$B.NSUBLKS
     16434**DCL     19564<<ASSIGN  19837>>IF
P$B.SUBLK$
     16455**DCL     19176>>ASSIGN  19543>>ASSIGN  19543>>ASSIGN  19743>>ASSIGN  19839>>IF      19842>>ASSIGN
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:347  
P$B.TEMP
     16423**DCL     19172>>IF
P$B IN PROCEDURE CHKQUIT
     20463**DCL     20455--PROC
P$B.CODE IN PROCEDURE CHKQUIT
     20471**DCL     20511>>DOCASE  20534>>IF
P$BLOCK IN PROCEDURE CHK_RUTYPE
     20718**DCL     20673--PROC
P$BLOCK.CODE IN PROCEDURE CHK_RUTYPE
     20726**DCL     20929<<ASSIGN
P$BLOCK.SUBLK$ IN PROCEDURE CHK_RUTYPE
     20751**DCL     20900>>ASSIGN  20900>>ASSIGN  20930>>ASSIGN  20931>>ASSIGN  20931>>ASSIGN
P$PCB
     17951**DCL     18861<>CALL    18890<>CALL    19404<>CALL    19498<>CALL    19502<>CALL    19619<>CALL
     19622<>CALL    19626<>CALL    19629<>CALL    19632<>CALL    19641<>CALL    19644<>CALL    19647<>CALL
     19650<>CALL    19654<>CALL    19658<>CALL    19663<>CALL    19666<>CALL    19669<>CALL    19672<>CALL
     19675<>CALL    19678<>CALL    19681<>CALL    19684<>CALL    19687<>CALL    19690<>CALL    19693<>CALL
     19696<>CALL    19699<>CALL    19702<>CALL    19708<>CALL    19737<>CALL    19749<>CALL    19767<>CALL
     19770<>CALL    19773<>CALL    19776<>CALL    19779<>CALL    19783<>CALL    19786<>CALL    19789<>CALL
     19798<>CALL    19801<>CALL    19804<>CALL    19807<>CALL    19810<>CALL    19813<>CALL    19816<>CALL
     19819<>CALL    19822<>CALL    19825<>CALL    19828<>CALL    19831<>CALL    19834<>CALL    19875<>CALL
     19878<>CALL    19881<>CALL    19884<>CALL    19887<>CALL    19890<>CALL    19893<>CALL    19896<>CALL
     19899<>CALL    19902<>CALL    19905<>CALL    19908<>CALL    19912<>CALL    19916<>CALL    19932<>CALL
P$PCB.CONTINUE
     17992**DCL     19545<<ASSIGN
P$PCB.ERROR
     18055**DCL     20189>>IF      20191<>CALL
P$PCB.HI_CHAR
     18102**DCL     19750>>IF      20135<>CALL    20191<>CALL    20193<>CALL    20208<<ASSIGN  20214>>ASSIGN
     20236>>ASSIGN
P$PCB.NCHARS
     18098**DCL     19080>>ASSIGN  19081>>IF      19132>>ASSIGN  19316>>ASSIGN  19323>>ASSIGN  19447>>ASSIGN
     19927>>ASSIGN  19930<<ASSIGN  20573>>ASSIGN
P$PCB.OUT$
     17964**DCL     19540>>IF      19543<<ASSIGN  19543>>ASSIGN  19544>>ASSIGN  19546>>DOCASE  19564>>ASSIGN
P$PCB.TEXT$
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:348  
     17952**DCL     19544>>ASSIGN
P$PCB.USER$
     18118**DCL     19057<<ASSIGN  19114<<ASSIGN  19126<<ASSIGN
P$PCB$
     15987**DCL     17951--IMP-PTR 18861>>CALL    18890>>CALL    19080>>ASSIGN  19081>>IF      19132>>ASSIGN
     19316>>ASSIGN  19323>>ASSIGN  19404>>CALL    19447>>ASSIGN  19498>>CALL    19502>>CALL    19540>>IF
     19543>>ASSIGN  19543>>ASSIGN  19544>>ASSIGN  19544>>ASSIGN  19545>>ASSIGN  19546>>DOCASE  19564>>ASSIGN
     19619>>CALL    19622>>CALL    19626>>CALL    19629>>CALL    19632>>CALL    19641>>CALL    19644>>CALL
     19647>>CALL    19650>>CALL    19654>>CALL    19658>>CALL    19663>>CALL    19666>>CALL    19669>>CALL
     19672>>CALL    19675>>CALL    19678>>CALL    19681>>CALL    19684>>CALL    19687>>CALL    19690>>CALL
     19693>>CALL    19696>>CALL    19699>>CALL    19702>>CALL    19708>>CALL    19737>>CALL    19749>>CALL
     19750>>IF      19767>>CALL    19770>>CALL    19773>>CALL    19776>>CALL    19779>>CALL    19783>>CALL
     19786>>CALL    19789>>CALL    19798>>CALL    19801>>CALL    19804>>CALL    19807>>CALL    19810>>CALL
     19813>>CALL    19816>>CALL    19819>>CALL    19822>>CALL    19825>>CALL    19828>>CALL    19831>>CALL
     19834>>CALL    19875>>CALL    19878>>CALL    19881>>CALL    19884>>CALL    19887>>CALL    19890>>CALL
     19893>>CALL    19896>>CALL    19899>>CALL    19902>>CALL    19905>>CALL    19908>>CALL    19912>>CALL
     19916>>CALL    19927>>ASSIGN  19930>>ASSIGN  19932>>CALL    20135>>CALL    20189>>IF      20191>>CALL
     20191>>CALL    20193>>CALL    20208>>ASSIGN  20214>>ASSIGN  20236>>ASSIGN  20395<<ASSIGN  20573>>ASSIGN
P$S.COUNT
     16491**DCL     16494--IMP-SIZ 19839>>IF
P$S.CPOS
     16483**DCL     19842>>ASSIGN
P$S.TEXTC$
     16486**DCL     19743>>ASSIGN
P$S.COUNT IN PROCEDURE CHK_RUTYPE
     20704**DCL     20707--IMP-SIZ 20900>>ASSIGN  20930<<ASSIGN  20931>>ASSIGN
P$S.TEXT IN PROCEDURE CHK_RUTYPE
     20707**DCL     20900--ASSIGN  20931<<ASSIGN
PREV_CMND
     15968**DCL     19016<<ASSIGN  19018<<ASSIGN  19390>>IF      19416>>ASSIGN  19417>>ASSIGN  20023<<ASSIGN
PROMPT
     19024**LABEL   19191--CALLALT 19967--GOTO    20027--GOTO    20181--GOTO
PROMPT.TEXT IN PROCEDURE CHKQUIT
     20506**DCL     20570>>CALLBLT
QUITMSG IN PROCEDURE CHKQUIT
     20502**DCL     20540--ASSIGN
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:349  
READCC
     19073**LABEL   20051--GOTO
REMEM$VAR
     15983**DCL     19100<<REMEMBR
REMEM_CONTEXT_ERR
     15982**DCL     19002<<REMEMBR 19003--ASSIGN
REMEM_VAR
     15981**DCL     19000<<REMEMBR 19001--ASSIGN
RESULTS.W2
     16353**DCL     16354--REDEF
RET IN PROCEDURE CHK_RUTYPE
     20933**LABEL   20909--CALLALT 20927--CALLALT
SEG$2.ACCUM_CHG
     18189**DCL     18839<<ASSIGN
SEG$2.CPBUFF$
     18184**DCL     19078>>ASSIGN  19103>>ASSIGN  19105>>CALLBLT 19130>>ASSIGN  19458>>CALLBLT 19463>>ASSIGN
     19929>>ASSIGN  20174>>ASSIGN  20176>>ASSIGN  20543>>ASSIGN  20550>>ASSIGN  20570>>CALLBLT
SEG$2.ERRBUF
     18165**DCL     18748--ASSIGN  18749--ASSIGN  18750--ASSIGN  18881<>CALL    18997--ASSIGN  19398--ASSIGN
     19399--ASSIGN  19489--CALL    19511--ASSIGN  19512--ASSIGN  19557--IF      19565--ASSIGN  19566--ASSIGN
     19792--ASSIGN  19843--CALL    19935--IF      20121--CALL    20122<>CALL    20123--ASSIGN  20124--ASSIGN
     20135--CALL    20137<>CALL    20138--ASSIGN  20139--ASSIGN  20160--ASSIGN  20161--ASSIGN  20191--CALL
     20193--CALL    20198--CALL    20205--IF      20208--ASSIGN  20222<>CALL    20223--ASSIGN  20224--ASSIGN
     20225--ASSIGN  20344--IF      20349<>CALL    20352--ASSIGN  20354--ASSIGN  20355--ASSIGN  20356--ASSIGN
     20435--CALL    20913--CALL    20983--IF      20986<>CALL    20987--ASSIGN  20988--ASSIGN  20989--ASSIGN
SEG$2.FLAGS.ABORT
     18151**DCL     19069<<ASSIGN  20257>>IF
SEG$2.FLAGS.CMD_STR_INT
     18152**DCL     18736<<ASSIGN  18772<<ASSIGN  19188>>IF      19719<<ASSIGN  19858<<ASSIGN  19978<<ASSIGN
     20564<<ASSIGN
SEG$2.FLAGS.CONTINUED
     18149**DCL     19068<<ASSIGN  19162<<ASSIGN  19525>>IF      19919>>IF
SEG$2.FLAGS.CPBUFFULL_AT_CSINT
     18154**DCL     19725>>IF      19729<<ASSIGN  19859<<ASSIGN  19985<<ASSIGN  20565<<ASSIGN
SEG$2.FLAGS.IBEX_OWNS_M$LL
     18157**DCL     19272>>IF
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:350  
SEG$2.FLAGS.RUNITCMD
     18150**DCL     19161<<ASSIGN  19442<<ASSIGN  19525>>IF      19560>>IF
SEG$2.FLAGS.SKIP_ECHO
     18145**DCL     19468>>IF      19519<<ASSIGN  19755<<ASSIGN  20003<<ASSIGN
SEG$2.FLAGS.SKIP_ERRS
     18148**DCL     19454>>ASSIGN  20004<<ASSIGN
SEG$2.FLAGS.USE_REMEM
     18155**DCL     19101<<ASSIGN  19141<<ASSIGN  20030<<ASSIGN
SEG$2.FPT_CLOSE$
     18178**DCL     19924>>ASSIGN  19925>>ASSIGN  19926>>CALL    20419>>ASSIGN  20420>>ASSIGN  20421>>CALL
     20426>>ASSIGN  20427>>ASSIGN  20428>>CALL
SEG$2.FPT_CPEXIT$
     18181**DCL     19280>>ASSIGN  19281>>ASSIGN  19281>>ASSIGN  19283>>ASSIGN  19284>>CALL    20007>>ASSIGN
     20008>>ASSIGN  20008>>ASSIGN  20010>>ASSIGN  20303>>ASSIGN  20304>>ASSIGN  20304>>ASSIGN  20306>>ASSIGN
     20307>>ASSIGN
SEG$2.FPT_FID$
     18182**DCL     20898>>ASSIGN  20899>>ASSIGN  20899>>ASSIGN  20900>>ASSIGN  20901>>ASSIGN  20902>>ASSIGN
     20903>>ASSIGN  20904>>ASSIGN  20905>>ASSIGN  20906>>ASSIGN  20907>>ASSIGN  20908>>ASSIGN  20909>>CALL
SEG$2.FPT_READUC$
     18173**DCL     20543>>ASSIGN  20544>>CALL
SEG$2.FPT_WRITECC$
     18176**DCL     19103>>ASSIGN  19108<>CALL
SEG$2.FPT_WRITEUC$
     18174**DCL     20540>>ASSIGN  20541>>CALL
SEG$2.GETCMD$
     18186**DCL     18784>>ASSIGN  18785>>CALL    19005>>ASSIGN  19057>>ASSIGN  19060>>ASSIGN  19062>>ASSIGN
     19063>>ASSIGN  19064>>ASSIGN  19065>>ASSIGN  19066>>ASSIGN  19073>>ASSIGN  19074>>CALL    19096>>IF
     19113>>ASSIGN  19114>>ASSIGN  19115>>DOWHILE 19122>>CALL    19125>>ASSIGN  19126>>ASSIGN  19142>>IF
     19163>>ASSIGN  19296>>ASSIGN  19311>>IF      19326>>IF      19407>>CALL    19409>>ASSIGN  19410>>CALL
     19420>>CALL    19422>>ASSIGN  19423>>CALL    19451>>ASSIGN  19456>>IF      19462>>ASSIGN  19463>>ASSIGN
     19464>>ASSIGN  19477>>CALL    19479>>ASSIGN  19480>>CALL    19483>>ASSIGN  19494>>ASSIGN  19513>>ASSIGN
     19515>>CALL    19527>>CALL    19530>>ASSIGN  19533>>ASSIGN  19593>>CALL    19718>>ASSIGN  19744>>ASSIGN
     19745>>CALL    19753>>ASSIGN  19754>>ASSIGN  19756>>CALL    19758>>DOCASE  19872>>ASSIGN  19977>>ASSIGN
     20036>>ASSIGN  20049>>ASSIGN  20050>>ASSIGN  20135>>CALL    20166>>ASSIGN  20176>>ASSIGN  20177>>ASSIGN
     20179>>ASSIGN  20185>>IF      20214>>ASSIGN  20215>>ASSIGN  20216>>CALL    20299>>ASSIGN  20393>>CALL
     20395>>ASSIGN  20398>>ASSIGN  20399>>ASSIGN  20407>>ASSIGN  20431>>ASSIGN  20435>>CALL    20537>>IF
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:351  
     20550>>ASSIGN  20561>>IF      20567>>IF      20569>>ASSIGN  20570>>CALLBLT
SEG$2.LASTPROMPT
     18164**DCL     20169>>IF
SEG$2.LLDCB#
     18160**DCL     18831>>ASSIGN  19073>>ASSIGN  19272>>IF      19272>>IF      19272>>IF      19292>>IF
     19296>>ASSIGN  19742>>ASSIGN  20398>>ASSIGN
SEG$2.NCHARS
     18161**DCL     19080<<ASSIGN  19132<<ASSIGN
SEG$2.PHYS$
     18172**DCL     19372>>ASSIGN
SEG$2.PROMPT_TYPE
     18196**DCL     19710<<ASSIGN  19865<<ASSIGN  19976<<ASSIGN  20408<<ASSIGN  20415<<ASSIGN
SEG$2.PSEUDO$
     18171**DCL     19371>>ASSIGN
SEG$2.REMEM$
     18187**DCL     19100>>REMEMBR
SEG$2.USERS$
     18169**DCL     19370>>ASSIGN
SEG$2.XUG_INIT$
     18185**DCL     19129>>ASSIGN  20392>>ASSIGN  20393>>CALL    20396>>ASSIGN
SEG2$
     15706**DCL     18140--IMP-PTR 18736>>ASSIGN  18748>>ASSIGN  18749>>ASSIGN  18750>>ASSIGN  18772>>ASSIGN
     18784>>ASSIGN  18785>>CALL    18831>>ASSIGN  18839>>ASSIGN  18881>>CALL    18997>>ASSIGN  19005>>ASSIGN
     19057>>ASSIGN  19060>>ASSIGN  19062>>ASSIGN  19063>>ASSIGN  19064>>ASSIGN  19065>>ASSIGN  19066>>ASSIGN
     19068>>ASSIGN  19069>>ASSIGN  19073>>ASSIGN  19073>>ASSIGN  19074>>CALL    19078>>ASSIGN  19080>>ASSIGN
     19096>>IF      19100>>REMEMBR 19101>>ASSIGN  19103>>ASSIGN  19103>>ASSIGN  19105>>CALLBLT 19108>>CALL
     19113>>ASSIGN  19114>>ASSIGN  19115>>DOWHILE 19122>>CALL    19125>>ASSIGN  19126>>ASSIGN  19129>>ASSIGN
     19130>>ASSIGN  19132>>ASSIGN  19141>>ASSIGN  19142>>IF      19161>>ASSIGN  19162>>ASSIGN  19163>>ASSIGN
     19188>>IF      19272>>IF      19272>>IF      19272>>IF      19272>>IF      19280>>ASSIGN  19281>>ASSIGN
     19281>>ASSIGN  19283>>ASSIGN  19284>>CALL    19292>>IF      19296>>ASSIGN  19296>>ASSIGN  19311>>IF
     19326>>IF      19370>>ASSIGN  19371>>ASSIGN  19372>>ASSIGN  19398>>ASSIGN  19399>>ASSIGN  19407>>CALL
     19409>>ASSIGN  19410>>CALL    19420>>CALL    19422>>ASSIGN  19423>>CALL    19442>>ASSIGN  19451>>ASSIGN
     19454>>ASSIGN  19456>>IF      19458>>CALLBLT 19462>>ASSIGN  19463>>ASSIGN  19463>>ASSIGN  19464>>ASSIGN
     19468>>IF      19477>>CALL    19479>>ASSIGN  19480>>CALL    19483>>ASSIGN  19489>>CALL    19494>>ASSIGN
     19511>>ASSIGN  19512>>ASSIGN  19513>>ASSIGN  19515>>CALL    19519>>ASSIGN  19525>>IF      19525>>IF
     19527>>CALL    19530>>ASSIGN  19533>>ASSIGN  19557>>IF      19560>>IF      19565>>ASSIGN  19566>>ASSIGN
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:352  
     19593>>CALL    19710>>ASSIGN  19718>>ASSIGN  19719>>ASSIGN  19725>>IF      19729>>ASSIGN  19742>>ASSIGN
     19744>>ASSIGN  19745>>CALL    19753>>ASSIGN  19754>>ASSIGN  19755>>ASSIGN  19756>>CALL    19758>>DOCASE
     19792>>ASSIGN  19843>>CALL    19858>>ASSIGN  19859>>ASSIGN  19865>>ASSIGN  19872>>ASSIGN  19919>>IF
     19924>>ASSIGN  19925>>ASSIGN  19926>>CALL    19929>>ASSIGN  19935>>IF      19976>>ASSIGN  19977>>ASSIGN
     19978>>ASSIGN  19985>>ASSIGN  20003>>ASSIGN  20004>>ASSIGN  20007>>ASSIGN  20008>>ASSIGN  20008>>ASSIGN
     20010>>ASSIGN  20030>>ASSIGN  20036>>ASSIGN  20049>>ASSIGN  20050>>ASSIGN  20121>>CALL    20122>>CALL
     20123>>ASSIGN  20124>>ASSIGN  20135>>CALL    20135>>CALL    20137>>CALL    20138>>ASSIGN  20139>>ASSIGN
     20160>>ASSIGN  20161>>ASSIGN  20166>>ASSIGN  20169>>IF      20174>>ASSIGN  20176>>ASSIGN  20176>>ASSIGN
     20177>>ASSIGN  20179>>ASSIGN  20185>>IF      20191>>CALL    20193>>CALL    20198>>CALL    20205>>IF
     20208>>ASSIGN  20214>>ASSIGN  20215>>ASSIGN  20216>>CALL    20222>>CALL    20223>>ASSIGN  20224>>ASSIGN
     20225>>ASSIGN  20257>>IF      20299>>ASSIGN  20303>>ASSIGN  20304>>ASSIGN  20304>>ASSIGN  20306>>ASSIGN
     20307>>ASSIGN  20344>>IF      20349>>CALL    20352>>ASSIGN  20354>>ASSIGN  20355>>ASSIGN  20356>>ASSIGN
     20392>>ASSIGN  20393>>CALL    20393>>CALL    20395>>ASSIGN  20396>>ASSIGN  20398>>ASSIGN  20398>>ASSIGN
     20399>>ASSIGN  20407>>ASSIGN  20408>>ASSIGN  20415>>ASSIGN  20419>>ASSIGN  20420>>ASSIGN  20421>>CALL
     20426>>ASSIGN  20427>>ASSIGN  20428>>CALL    20431>>ASSIGN  20435>>CALL    20435>>CALL    20537>>IF
     20540>>ASSIGN  20541>>CALL    20543>>ASSIGN  20543>>ASSIGN  20544>>CALL    20550>>ASSIGN  20550>>ASSIGN
     20561>>IF      20564>>ASSIGN  20565>>ASSIGN  20567>>IF      20569>>ASSIGN  20570>>CALLBLT 20570>>CALLBLT
     20898>>ASSIGN  20899>>ASSIGN  20899>>ASSIGN  20900>>ASSIGN  20901>>ASSIGN  20902>>ASSIGN  20903>>ASSIGN
     20904>>ASSIGN  20905>>ASSIGN  20906>>ASSIGN  20907>>ASSIGN  20908>>ASSIGN  20909>>CALL    20913>>CALL
     20983>>IF      20986>>CALL    20987>>ASSIGN  20988>>ASSIGN  20989>>ASSIGN
SETUP_READCC
     19053**LABEL   20005--GOTO
SOURCEDCB
     15759**DCL     18903--CALL    18903--CALL
STEP_LMTX IN PROCEDURE LIMIT_ERR
     20613**DCL     20638<<ASSIGN  20641<>CALL    20652>>IF
SYNTAX_ERR
     20160**LABEL   19522--GOTO    20039--GOTO    20060--GOTO
SYS
     16339**DCL     16231--DCLINIT
TEMPBUF
     15993**DCL     19445<<ASSIGN  19929>>ASSIGN  20948<<ASSIGN  20949<<CALLBLT 20949>>CALLBLT 20950>>CALLBLT
     20953>>IF
TOTAL_RECORDS_IGNORED
     19137**LABEL   19120--GOTO
TRANSTBL
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:353  
     16579**DCL     20923>>CALLBLT 20949>>CALLBLT
TRIED_2_XPAND_WND
     15991**DCL     19077<<ASSIGN  20103>>IF      20120<<ASSIGN
U$PARAM
     18218**DCL     19057--ASSIGN  19114--ASSIGN  19126--ASSIGN
U$PARAM.CNTU$$
     18221**DCL     18999<<ASSIGN
U$PARAM.ERRBUF$
     18219**DCL     18997<<ASSIGN
U$PARAM.FID_BLK$
     18227**DCL     19009<<ASSIGN
U$PARAM.FID_CNT
     18226**DCL     19006<<ASSIGN
U$PARAM.GETCMD$
     18228**DCL     19005<<ASSIGN
U$PARAM.MODE
     18225**DCL     19067<<ASSIGN
U$PARAM.PHYS$
     18224**DCL     19372<<ASSIGN
U$PARAM.PSEUDO$
     18223**DCL     19371<<ASSIGN
U$PARAM.REMEM$
     18230**DCL     19001<<ASSIGN
U$PARAM.REMEM_CONTEXT_ERR$
     18231**DCL     19003<<ASSIGN
U$PARAM.SPCL$$
     18222**DCL     19004<<ASSIGN
U$PARAM.USERS$
     18220**DCL     18998<<ASSIGN  19370<<ASSIGN
UPDATEDCB
     15762**DCL     18917--CALL    18917--CALL
USRDCB
     15973**DCL     18723<<ASSIGN  18795<>CALL
VLP_WINDOW
     16374**DCL     20110--ASSIGN  20111<<ASSIGN
VLP_WINDOW.FWINDOW#
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:354  
     16374**DCL     16374--REDEF   16375--REDEF
VLP_WINDOW.LENGTH#
     16388**DCL     20113<<ASSIGN
VLP_WINDOW.WIDTH#
     16388**DCL     20112<<ASSIGN
VLR$YC.CPOS
     16728**DCL     20236<<ASSIGN  20352<<ASSIGN
WHEN_ERR
     20973**PROC    18863--CALL    18892--CALL
X$PARAM
     16287**DCL     19740<<ASSIGN  19744--ASSIGN
X$PARAM.HELP$
     16297**DCL     19743<<ASSIGN
X$PARAM.OUTDCB1#
     16295**DCL     19742<<ASSIGN
X$STRING.SIZ
     16413**DCL     16414--IMP-SIZ
XLIM_TBL IN PROCEDURE LIMIT_ERR
     20605**DCL     20621--DOINDEX 20621--DOINDEX
XLIM_TBL.HDR IN PROCEDURE LIMIT_ERR
     20608**DCL     20626>>ASSIGN
XLIM_TBL.LEN IN PROCEDURE LIMIT_ERR
     20606**DCL     20625>>ASSIGN
XLIM_TBL.MASK IN PROCEDURE LIMIT_ERR
     20610**DCL     20622>>IF
XL_NAME IN PROCEDURE LIMIT_ERR
     20602**DCL     20632<>CALL
XL_NAME.COUNT IN PROCEDURE LIMIT_ERR
     20603**DCL     20625<<ASSIGN
XL_NAME.TEXT IN PROCEDURE LIMIT_ERR
     20604**DCL     20626<<ASSIGN
XUE_PREEXP
     15996**DCL     20399--ASSIGN
XUG$
     15988**DCL     17484--IMP-PTR 19078>>ASSIGN  19078>>ASSIGN  19105>>CALLBLT 19105>>CALLBLT 19129<<ASSIGN
     19130>>ASSIGN  19130>>ASSIGN  19314>>CALLBLT 19314>>CALLBLT 19321>>ASSIGN  19321>>ASSIGN  19328>>CALLBLT
PL6.E3A0      #001=CPA$IBEX File=CPA$IBEX.:E05TSI                                TUE 07/29/97 11:15 Page:355  
     19445>>ASSIGN  19445>>ASSIGN  19458>>CALLBLT 19458>>CALLBLT 19460>>ASSIGN  19460>>ASSIGN  19462>>ASSIGN
     20050>>ASSIGN  20169>>IF      20174>>ASSIGN  20174>>ASSIGN  20177>>ASSIGN  20396<<ASSIGN  20947>>ASSIGN
     20948>>ASSIGN
XUG$INIT
     17090**DCL     20393<>CALL
XUG$INIT.PARAMS$
     17206**DCL     19129>>ASSIGN  20396>>ASSIGN
XUG$INIT.PP_DCB#
     17279**DCL     20392<<ASSIGN
XUG$PARAMS.BUF
     17920**DCL     17923--REDEF
XUG$PARAMS.BUFVEC
     17485**DCL     20169>>IF      20174>>ASSIGN
XUG$PARAMS.LAST
     17492**DCL     19078>>ASSIGN  19078>>ASSIGN  19105>>CALLBLT 19105>>CALLBLT 19130>>ASSIGN  19130>>ASSIGN
     19314>>CALLBLT 19314>>CALLBLT 19321>>ASSIGN  19321>>ASSIGN  19445>>ASSIGN  19445>>ASSIGN  19458>>CALLBLT
     19458>>CALLBLT 19460<<ASSIGN  19460>>ASSIGN  19462>>ASSIGN  20050>>ASSIGN  20947>>ASSIGN  20948>>ASSIGN
XUG$PARAMS.RLTVEC
     17502**DCL     19328>>CALLBLT 20174>>ASSIGN  20177>>ASSIGN
XUG$RLT
     17928**DCL     19328>>CALLBLT 20174>>ASSIGN  20177>>ASSIGN
YCINIT
     18997**LABEL   18757--GOTO
