VERSION E05

PL6.E3A0      #001=DDD$BUMP_D$ File=DDD$BUMP_D$.:E05TSI                          TUE 07/29/97 13:52 Page:1    
        1        1        /*M*  DDD$BUMP_D$ - INCREMENTS S_D.D$ AND CHECKS S_D.DESCL$  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        DDD$BUMP_D$: PROC(N) ALTRET;
        9        9    1   DCL N SBIN;
       10       10    1   DCL NUM SBIN;
       11       11    1   DCL DD_VARCOM$ PTR SYMREF;
       12       12    1   DCL DDM$GETMEM ENTRY(3) ALTRET;
       13       13             %INCLUDE XUH_MACRO_C;
       14       97             %INCLUDE DD_SD_M;
       15     1433             %S_D;
       16     2751             %INCLUDE DD_ERR_C;
       17     3148    1        IF ADDR(N) = ADDR(NIL)
       18     3149    1        THEN NUM=1;
       19     3150    1        ELSE NUM=N;
       20     3151    1        S_D.D$ = PINCRW(S_D.D$, NUM);
       21     3152    1        IF S_D.D$ > S_D.DESCL$
       22     3153    2        THEN DO;
       23     3154    2             IF S_D.STORED ~= 0
       24     3155    3             THEN DO;
       25     3156    4                  DO WHILE (S_D.D$ > PINCRW(S_D.DESCL$,1));
       26     3157    4                       CALL DDM$GETMEM(DD_VARCOM$, 1024) ALTRET (NOROOM);
       27     3158    4                       S_D.VARCOM_HIGH$ = PINCRW(S_D.VARCOM_HIGH$, 1024);
       28     3159    4                       S_D.DESCL$ = S_D.VARCOM_HIGH$;
       29     3160    4                     END;
       30     3161    3                END;
       31     3162    3             ELSE DO;
       32     3163    3   NOROOM:        S_D.ERROR = E@NOROOM;    /* E@NOROOM */
       33     3164    3                  ALTRETURN;
       34     3165    3                END;
       35     3166    2           END;
       36     3167    1        RETURN;
       37     3168    1   END DDD$BUMP_D$;
PL6.E3A0      #001=DDD$BUMP_D$ File=DDD$BUMP_D$.:E05TSI                          TUE 07/29/97 13:52 Page:2    

PL6.E3A0      #001=DDD$BUMP_D$ File=DDD$BUMP_D$.:E05TSI                          TUE 07/29/97 13:52 Page:3    
--  Include file information  --

   DD_ERR_C.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDD$BUMP_D$.

   Procedure DDD$BUMP_D$ requires 39 words for executable code.
   Procedure DDD$BUMP_D$ requires 6 words of local(AUTO) storage.

    No errors detected in file DDD$BUMP_D$.:E05TSI    .

PL6.E3A0      #001=DDD$BUMP_D$ File=DDD$BUMP_D$.:E05TSI                          TUE 07/29/97 13:52 Page:4    

 Object Unit name= DDD$BUMP_D$                                File name= DDD$BUMP_D$.:E05TOU
 UTS= JUL 29 '97 13:52:30.08 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    39     47  DDD$BUMP_D$
    1  RoData even  none     3      3  DDD$BUMP_D$

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        1  DDD$BUMP_D$

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       3 DDM$GETMEM
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     DD_VARCOM$                       r    S_D$                                  B_VECTNIL
PL6.E3A0      #001=DDD$BUMP_D$ File=DDD$BUMP_D$.:E05TSI                          TUE 07/29/97 13:52 Page:5    

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=DDD$BUMP_D$ File=DDD$BUMP_D$.:E05TSI                          TUE 07/29/97 13:52 Page:6    


        1        1        /*M*  DDD$BUMP_D$ - INCREMENTS S_D.D$ AND CHECKS S_D.DESCL$  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        DDD$BUMP_D$: PROC(N) ALTRET;

      8  0 000000   000000 700200 xent  DDD$BUMP_D$  TSX0  ! X66_AUTO_1
         0 000001   000006 000001                    ZERO    6,1

        9        9    1   DCL N SBIN;
       10       10    1   DCL NUM SBIN;
       11       11    1   DCL DD_VARCOM$ PTR SYMREF;
       12       12    1   DCL DDM$GETMEM ENTRY(3) ALTRET;
       13       13             %INCLUDE XUH_MACRO_C;
       14       97             %INCLUDE DD_SD_M;
       15     1433             %S_D;
       16     2751             %INCLUDE DD_ERR_C;
       17     3148    1        IF ADDR(N) = ADDR(NIL)

   3148  0 000002   200003 236100                    LDQ     @N,,AUTO
         0 000003   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000004   000010 601000 0                  TNZ     s:3150

       18     3149    1        THEN NUM=1;

   3149  0 000005   000001 235007                    LDA     1,DL
         0 000006   200004 755100                    STA     NUM,,AUTO
         0 000007   000013 710000 0                  TRA     s:3151

       19     3150    1        ELSE NUM=N;

   3150  0 000010   200003 470500                    LDP0    @N,,AUTO
         0 000011   000000 235100                    LDA     0,,PR0
PL6.E3A0      #001=DDD$BUMP_D$ File=DDD$BUMP_D$.:E05TSI                          TUE 07/29/97 13:52 Page:7    
         0 000012   200004 755100                    STA     NUM,,AUTO

       20     3151    1        S_D.D$ = PINCRW(S_D.D$, NUM);

   3151  0 000013   000000 470400 xsym               LDP0    S_D$
         0 000014   000044 471500                    LDP1    36,,PR0
         0 000015   100000 633505                    EPPR3   0,AL,PR1
         0 000016   000044 453500                    STP3    36,,PR0

       21     3152    1        IF S_D.D$ > S_D.DESCL$

   3152  0 000017   000042 236100                    LDQ     34,,PR0
         0 000020   000044 116100                    CMPQ    36,,PR0
         0 000021   000046 603000 0                  TRC     s:3167

       22     3153    2        THEN DO;

       23     3154    2             IF S_D.STORED ~= 0

   3154  0 000022   000135 235100                    LDA     93,,PR0
         0 000023   000042 600000 0                  TZE     NOROOM

       24     3155    3             THEN DO;

       25     3156    4                  DO WHILE (S_D.D$ > PINCRW(S_D.DESCL$,1));

   3156  0 000024   000036 710000 0                  TRA     s:3160

       26     3157    4                       CALL DDM$GETMEM(DD_VARCOM$, 1024) ALTRET (NOROOM);

   3157  0 000025   000001 630400 1                  EPPR0   1
         0 000026   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000027   000000 701000 xent               TSX1    DDM$GETMEM
         0 000030   000042 702000 0                  TSX2    NOROOM

       27     3158    4                       S_D.VARCOM_HIGH$ = PINCRW(S_D.VARCOM_HIGH$, 1024);

PL6.E3A0      #001=DDD$BUMP_D$ File=DDD$BUMP_D$.:E05TSI                          TUE 07/29/97 13:52 Page:8    
   3158  0 000031   000000 470400 xsym               LDP0    S_D$
         0 000032   004623 236100                    LDQ     2451,,PR0
         0 000033   002000 036003                    ADLQ    1024,DU
         0 000034   004623 756100                    STQ     2451,,PR0

       28     3159    4                       S_D.DESCL$ = S_D.VARCOM_HIGH$;

   3159  0 000035   000042 756100                    STQ     34,,PR0

       29     3160    4                     END;

   3160  0 000036   000001 036003                    ADLQ    1,DU
         0 000037   000044 116100                    CMPQ    36,,PR0
         0 000040   000025 602000 0                  TNC     s:3157

       30     3161    3                END;

   3161  0 000041   000046 710000 0                  TRA     s:3167

       31     3162    3             ELSE DO;

       32     3163    3   NOROOM:        S_D.ERROR = E@NOROOM;    /* E@NOROOM */

   3163  0 000042   000010 235007       NOROOM       LDA     8,DL
         0 000043   000000 470400 xsym               LDP0    S_D$
         0 000044   000013 755100                    STA     11,,PR0

       33     3164    3                  ALTRETURN;

   3164  0 000045   000000 702200 xent               TSX2  ! X66_AALT

       34     3165    3                END;
       35     3166    2           END;
       36     3167    1        RETURN;

   3167  0 000046   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=DDD$BUMP_D$ File=DDD$BUMP_D$.:E05TSI                          TUE 07/29/97 13:52 Page:9    
(unnamed)
 Sect OctLoc
   1     000   000000 002000   000000 006000   000000 006000                    ............
       37     3168    1   END DDD$BUMP_D$;

PL6.E3A0      #001=DDD$BUMP_D$ File=DDD$BUMP_D$.:E05TSI                          TUE 07/29/97 13:52 Page:10   
--  Include file information  --

   DD_ERR_C.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDD$BUMP_D$.

   Procedure DDD$BUMP_D$ requires 39 words for executable code.
   Procedure DDD$BUMP_D$ requires 6 words of local(AUTO) storage.

    No errors detected in file DDD$BUMP_D$.:E05TSI    .
PL6.E3A0      #001=DDD$BUMP_D$ File=DDD$BUMP_D$.:E05TSI                          TUE 07/29/97 13:52 Page:11   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDD$BUMP_D$ File=DDD$BUMP_D$.:E05TSI                          TUE 07/29/97 13:52 Page:12   
          MINI XREF LISTING

DDM$GETMEM
        12**DCL-ENT  3157--CALL
DD_VARCOM$
        11**DCL      3157<>CALL
N
         9**DCL         8--PROC     3148--IF       3150>>ASSIGN
NOROOM
      3163**LABEL    3157--CALLALT
NUM
        10**DCL      3149<<ASSIGN   3150<<ASSIGN   3151>>ASSIGN
S_D.CURRENT_CHANNEL
      2385**DCL      2387--REDEF
S_D.D$
      1523**DCL      3151<<ASSIGN   3151>>ASSIGN   3152>>IF       3156>>DOWHILE
S_D.DEBUGA
      1537**DCL      1539--REDEF
S_D.DESCL$
      1519**DCL      3152>>IF       3156>>DOWHILE  3159<<ASSIGN
S_D.EIS
      2495**DCL      2524--REDEF
S_D.ERROR
      1466**DCL      3163<<ASSIGN
S_D.HOST_MESSAGE_BUF_REMOTE
      2428**DCL      2429--REDEF    2443--REDEF
S_D.JDE
      2042**DCL      2043--REDEF
S_D.L$.VALUE
      1595**DCL      1601--REDEF    1609--REDEF    1612--REDEF    1615--REDEF    1618--REDEF
S_D.L$.VALUE.L
      1596**DCL      1597--REDEF    1598--REDEF
S_D.L6_MESSAGE_BUF
      2449**DCL      2451--REDEF
PL6.E3A0      #001=DDD$BUMP_D$ File=DDD$BUMP_D$.:E05TSI                          TUE 07/29/97 13:52 Page:13   
S_D.OUTPUT
      2415**DCL      2417--REDEF
S_D.REMOTE_MSG.FNCC
      2434**DCL      2435--REDEF
S_D.REMOTE_MSG.STXC
      2430**DCL      2431--REDEF
S_D.REMOTE_MSG.SUBFNCC
      2438**DCL      2439--REDEF
S_D.STORED
      1631**DCL      3154>>IF
S_D.SV
      1494**DCL      1515--REDEF
S_D.VARCOM_HIGH$
      1908**DCL      3158<<ASSIGN   3158>>ASSIGN   3159>>ASSIGN
S_D$
      2746**DCL      1442--IMP-PTR  3151>>ASSIGN   3151>>ASSIGN   3152>>IF       3152>>IF       3154>>IF
      3156>>DOWHILE  3156>>DOWHILE  3158>>ASSIGN   3158>>ASSIGN   3159>>ASSIGN   3159>>ASSIGN   3163>>ASSIGN
PL6.E3A0      #001=DDD$BUMP_D$ File=DDD$BUMP_D$.:E05TSI                          TUE 07/29/97 13:52 Page:14   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDD$BUMP_D$ File=DDD$BUMP_D$.:E05TSI                          TUE 07/29/97 13:52 Page:15   
              MINI UREF LISTING

DDD$BUMP_D$       8**PROC
