

09:09 AUG 09 '97 LR_GRAM_EXT.:Z8A6SI                                       1    
    1      /*M* GRAM_EXT => INCLUDE FILE FOR GRAMMAR TABLE EXTERNAL DATA */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7
    8
    9
   10      %INCLUDE LR_IO_EXT;
   11
   12      %SUB TRUE='1'B;
   13      %SUB FALSE='0'B;
   14      %SUB BOOLEAN="BIT(1)";
   15
   16
   17      %SUB NR_SYMS_MAX=1400;
   18      %SUB NR_TERM_MAX=700;
   19      %SUB NR_PROD_MAX=1500;
   20      %SUB NR_RIGHT_MAX=8000;
   21      %SUB MAX_PROD_LEN=50;
   22
   23      /* GLOBAL DATA */
   24
   25      DCL SYM_PTRS(0:NR_SYMS_MAX) PTR EXT;
   26
   27      DCL RIGHT_PARTS (0:NR_RIGHT_MAX) SBIN HALF HALIGNED EXT;
   28
   29      DCL 1 SYMBOL BASED,
   30            2 HASH_FLINK PTR,
   31            2 SYM_INDX SBIN,
   32            2 SYM_TYPE SBIN,
   33            2 NULL_BECAUSE_S SBIN HALF HALIGNED, /* EITHER THIS SYMBOL OR
   34                                    NON-TERMINAL THAT'S FIRST IN A
   35                                    STRING THAT CAUSES THIS NON-T TO
   36                                    BE CONSIDERED NULLABLE. */
   37            2 NULL_BECAUSE_P SBIN HALF HALIGNED,
09:09 AUG 09 '97 LR_GRAM_EXT.:Z8A6SI                                       2    
   38            2 NULLABLE BOOLEAN UNAL,
   39            2 ON_LEFT BOOLEAN UNAL,
   40            2 ON_RIGHT BOOLEAN UNAL,
   41            2 ORDER_SPECIFIED BOOLEAN UNAL,
   42            2 COSTS_SPECIFIED BOOLEAN UNAL,
   43            2 SEM_PROD_REQ BOOLEAN UNAL,
   44            2 LEFT_ASSOC BOOLEAN UNAL,
   45            2 RIGHT_ASSOC BOOLEAN UNAL,
   46            2 QUOTED_REP BOOLEAN UNAL,
   47                                              /* FILLER ADDED */
   48            2 ORDER SBIN HALF HALIGNED, /* TERMINAL ORDER REQUESTED */
   49            2 COST,
   50              3 INS SBIN HALF HALIGNED,  /* Insertion cost for terminal */
   51              3 NT REDEF INS SBIN HALF HALIGNED,   /* Cost function for non_terminals */
   52              3 DEL SBIN HALF HALIGNED,   /* Deletion cost for terminal */
   53              3 PROD REDEF DEL SBIN HALF HALIGNED, /* PROD THAT WAS LEAST COST FOR NON-TERMINALS */
   54            2 PROD_INDX SBIN,
   55            2 PROD_CNT SBIN,
   56            2 SYMLEN SBIN ,
   57            2 TEXTCHR CHAR(3) UNAL;
   58      %SUB SYM_TYPE_TERM=0;
   59      %SUB SYM_TYPE_NT=1;
   60      %SUB SYM_TYPE_ACT=2;
   61
   62
   63      DCL 1 PROD (0:NR_PROD_MAX) EXT,
   64            2 GOAL_SYM_INDX SBIN HALF HALIGNED,
   65           2 TRAILING_SEM_ACT BOOLEAN UNAL,
   66               /* FILLER ADDED */
   67            2 RIGHT_CNT SBIN HALF HALIGNED,
   68            2 RIGHT_START SBIN HALF HALIGNED;
   69
   70      /* VARIABLES LEFT BEHIND BY READG */
   71      DCL NR_PROD SBIN EXT;
   72      DCL NR_SYMS SBIN EXT;
   73      DCL NR_TERM SBIN EXT;
   74      DCL LAST_ACT SBIN EXT;
09:09 AUG 09 '97 LR_GRAM_EXT.:Z8A6SI                                       3    
   75      DCL LAST_NULL SBIN EXT;
   76      DCL NR_ONRIGHT SBIN EXT;
   77      DCL NR_NT SBIN EXT;
   78      DCL PROD_LEN_MAX_EVER SBIN EXT;
   79      DCL LAST_ORDER_SPECIFIED SBIN EXT INIT(0); /* LAST TERMINAL ORDERING SPECIFIED */
   80      DCL SEMANTIC_ORDERING BOOLEAN EXT INIT(FALSE);
   81
   82      DCL ERR_SEV SBIN EXT;
   83                            /* Severity code is as follows:
   84                                 15     => Requires immediate termination.
   85                                 7-14   => Terminate at end of phase
   86                                 2-6    => Process everything but LALR1 checking and table generation
   87                                 1      => Informational only - does not affect processing
   88                            */
   89      DCL SET_LENGTHB SBIN EXT;
   90      DCL SET_LENGTHW SBIN EXT;
   91
   92      /* Cost defaults for error correction tables */
   93      %SUB DEFAULT_INS_COST = 10;
   94      %SUB DEFAULT_DEL_COST = 10;
   95      %SUB INFINITE_COST = 99999;
   96
   97
   98      /* POINTERS TO SPECIAL TERMINALS THAT WE WOULD LIKE TO TRACK */
   99      DCL EOF_SYMBOL_PTR PTR EXT INIT(ADDR(NIL));  /* =END_OF_FILE= */
  100      DCL ERROR_SYMBOL_PTR PTR EXT INIT(ADDR(NIL));  /* ERROR SYMBOL =ERROR=, NIL IF NOT USED */
  101      DCL BOF_SYMBOL_PTR PTR EXT INIT(ADDR(NIL));  /* =BEGINNING_OF_FILE= */
  102
  103
  104      /* FOR SPEEDY ANALYSIS, THE SYMBOLS ARE
  105         "LOOKED UP" VIA A HASH TABLE */
  106
  107      %SUB HASH_MOD=257;
  108      %SUB HASH_MUL=47;
  109
  110
  111
09:09 AUG 09 '97 LR_GRAM_EXT.:Z8A6SI                                       4    
  112      /* OPTIONS FLAGS */
  113      DCL OPTIONS (0:25) BOOLEAN EXT;
  114
  115      %SUB LS_OPT=0;
  116      %SUB LG_OPT=1;
  117      %SUB OU_OPT=2;
  118      %SUB CS_OPT=3;
  119      %SUB DTS_OPT=4;
  120      %SUB AN_OPT=5;
  121      %SUB UI_OPT=6;
  122      %SUB ST_OPT=7;
  123      %SUB XREF_OPT=10;
  124      %SUB ERROR_TABLE_OPT = 11;
  125      %SUB ERROR_LIST_S_OPT = 12;
  126      %SUB ERROR_LIST_E_OPT = 13;
  127      %SUB OS_OPT = 14;
  128      %SUB OT_OPT = 15;
  129
  130      DCL OPTIONS_TEXT(0:25) CHAR(4) EXT INIT
  131
  132
  133        ('LS','LG','OU','CS','DTS','AN','UI','ST',
  134         '  ','  ','XR','LC','LCS','LCP','OS','OT',' '*0);
  135
  136      /* THE INPUT LINE VARIABLES ARE COMMON BETWEEN DIAG AND SCAN */
  137      DCL INSTR (0:511) CHAR(1) UNAL EXT;
  138      DCL INSTRCHR REDEF INSTR CHAR(512);
  139      DCL INSTR_LISTED BOOLEAN EXT;
  140      DCL INSTR_LEN SBIN EXT INIT(0);
  141      DCL INSTR_INDX SBIN EXT;
  142      DCL EOF_FLAG BOOLEAN EXT;
  143      DCL KEY_REC CHAR(10) EXT;
  144
  145      /* EXTERNAL PROCEDURES */
  146      DCL OUTPUT ENTRY(2) ;
  147      DCL GETNEW ENTRY(2) ;
  148      DCL GETNEW2 ENTRY(2);
09:09 AUG 09 '97 LR_GRAM_EXT.:Z8A6SI                                       5    
  149      DCL MEM_TRUNC ENTRY(2);
  150
  151      /* BIT FUNCTIONS */
  152      DCL BITAND ENTRY(3);
  153      DCL BITOR ENTRY(3);
  154      DCL BITEOR ENTRY(3);
  155      DCL BITNOT ENTRY(3);
  156      DCL BITMOVE ENTRY(3);                   /* MOVES BITS   */
  157      DCL BITZAP ENTRY(2);     /* SETS BIT STRING TO ZERO     */
  158      DCL BITNZT ENTRY(3);     /* BITstring Non-Zero Test     */
  159
  160
  161      /* I/O VARIABLES */
  162      %SUB TEXTLIMIT = 109;
  163      DCL LINE CHAR(TEXTLIMIT) EXT;
  164      DCL LINELEN SBIN WORD EXT INIT(0);
  165
  166
  167      /* DATA FOR STATISTICS AND TABLE CONFIGURATION */
  168
  169      %MACRO TSINF(PIMP=FALSE,PMAXV=0,PMINV=0);
  170              3 IMP      BOOLEAN INIT(PIMP),
  171              3 MAXV     SBIN WORD INIT(PMAXV),
  172              3 MINV     SBIN WORD INIT(PMINV),
  173              3 LEN      SBIN WORD,
  174              3 SIGNED   BOOLEAN,
  175              3 NBITS    SBIN WORD,
  176      %MEND;
  177
  178      DCL 1 TSTATS EXT,
  179            2 GOAL,
  180              %TSINF(PIMP=TRUE);
  181            2 PSS,
  182              %TSINF(PIMP=TRUE);
  183            2 SEM,
  184              %TSINF(PIMP=TRUE);
  185            2 ASDEF,
09:09 AUG 09 '97 LR_GRAM_EXT.:Z8A6SI                                       6    
  186              %TSINF(PIMP=TRUE);
  187            2 ASBAS,
  188              %TSINF(PIMP=TRUE);
  189            2 ANCNXT,
  190              %TSINF(PIMP=TRUE);
  191            2 ANCCHK,
  192              %TSINF(PIMP=TRUE);
  193            2 GTDEF,
  194              %TSINF(PIMP=TRUE);
  195            2 GTBAS,
  196              %TSINF(PIMP=TRUE);
  197            2 GNCNXT,
  198              %TSINF(PIMP=TRUE);
  199            2 GNCCHK,
  200              %TSINF(PIMP=TRUE);
  201            2 SSTATE,
  202              %TSINF;
  203            2 SITEM,
  204              %TSINF;
  205            2 IINDX,
  206              %TSINF;
  207            2 ILEN,
  208              %TSINF;
  209            2 SI_BASIS,
  210              %TSINF;
  211            2 SI_CLOSURE,
  212              %TSINF;
  213            2 P_INDX,
  214              %TSINF;
  215            2 P_LEN,
  216              %TSINF;
  217            2 PATH_ELEM,
  218              %TSINF;
  219            2 T_S_INDX,
  220              %TSINF;
  221            2 T_S_LEN,
  222              %TSINF;
09:09 AUG 09 '97 LR_GRAM_EXT.:Z8A6SI                                       7    
  223            2 TS_SP,
  224              %TSINF;
  225            2 DEL_COST,
  226              %TSINF;
  227            2 LCS_COST,
  228              %TSINF;
  229            2 LCS_INDX,
  230              %TSINF;
  231            2 LCS_LEN,
  232              %TSINF;
  233            2 LCS_ELEM,
  234              %TSINF;
  235            2 LCP_NT,
  236              %TSINF(PIMP=TRUE);
  237            2 LCP_COST,
  238              %TSINF;
  239            2 LCP_LEN,
  240              %TSINF;
  241            2 LCP_INDX,
  242              %TSINF;
  243            2 LCP_UBOUND,
  244              %TSINF;
  245            2 LCP_ELEM,
  246              %TSINF;
  247            2 DUMMY SBIN;
  248
  249      %MACRO OUTLINE(S=" ");
  250      DO;
  251        CALL OUT_STR(S,%(LENGTHC(S)));
  252        CALL FLUSH;
  253      END;
  254      %MEND;
  255
  256      %MACRO OUT_STR(S="' '");
  257      CALL OUT_STR(S,%(LENGTHC(S)));
  258      %MEND;
  259
09:09 AUG 09 '97 LR_GRAM_EXT.:Z8A6SI                                       8    
  260      %MACRO OUT_TOKEN(S="' '");
  261      CALL OUT_TOKEN(S,%(LENGTHC(S)));
  262      %MEND;
  263
  264
  265      %MACRO BOUNDS(T=" ",V=0);
  266        DO;
  267          TSTATS.T.MINV = MINIMUM(TSTATS.T.MINV,V);
  268          TSTATS.T.MAXV = MAXIMUM(TSTATS.T.MAXV,V);
  269        END;
  270      %MEND;
  271
  272      %MACRO STAT_LENGTH(T=" ",V=0);
  273        TSTATS.T.LEN = V;
  274      %MEND;

