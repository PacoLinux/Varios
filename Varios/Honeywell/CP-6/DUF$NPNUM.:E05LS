VERSION E05

PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:1    
        1        1        /*M* DUF$NPNUM Schema access routines for User Delta */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*P* NAME: DUF$NPNUM
        9        9             PURPOSE: To house routines that get Next, Previous, and entry # entrys
       10       10                      in the paged schema for executable statements, internal entrys,
       11       11                      variables, and debug names records.
       12       12             DESCRIPTION: These routines are functionally identical, the only
       13       13                          difference being the entry point name, and the record
       14       14                          that is being accessed. Variables in "static data" record
       15       15                          which page of each type of record is in memory. The desired
       16       16                          entry is either in the current in memory page, or the
       17       17                          appropriate page is obtained (overlaying the old page).
       18       18                          The "static data" pointers are maintained in either case.
       19       19                          These routines have all been coded separately, rather
       20       20                          than DO CASEing on record type, for execution speed, since
       21       21                          the searches could be lengthly, affecting interactive
       22       22                          response. */
       23       23        %EJECT;
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:2    
       24       24        /*F* NAME: DDF$N_EXST
       25       25             PURPOSE: To get the next entry in the executable statements table.
       26       26             DESCRIPTION: If the next entry is within the current page, then
       27       27                          the given pointer is incremented by 1 entry. Else,
       28       28                          the page that contains the next entry is read into memory.
       29       29                          The input pointer is then set to the beginning of the
       30       30                          page. RETURNs when done. ALTRETURNs if the next entry
       31       31                          is out of limits, or if the read routine ALTRETs. */
       32       32        /*D* NAME: DDF$N_EXST
       33       33             ENTRY: DDF$N_EXST
       34       34             CALL: CALL DDF$N_EXST( PTR$ );
       35       35             INTERFACE: DDQ$READLM
       36       36             ENVIRONMENT: User Delta.
       37       37             INPUT: PTR$ - Pointer to current entry.
       38       38                    S_D.EXST$ - Pointer to first entry in current page.
       39       39                    S_D.EXST_PAGE - Current page in memory.
       40       40                    S_D.EXST_END$ - Pointer to last entry in current page.
       41       41             OUTPUT: PTR$ - Pointer to next entry.
       42       42                     S_D.EXST_PAGE - Current page in memory.
       43       43                     S_D.EXST_END$ - Pointer to last entry in current page.
       44       44             SCRATCH: Local AUTO only.
       45       45             DESCRIPTION: If the next entry is within the current page, then
       46       46                          the given pointer is incremented by 1 entry. Else,
       47       47                          the page that contains the next entry is read into memory.
       48       48                          The input pointer is then set to the beginning of the
       49       49                          page. RETURNs when done. ALTRETURNs if the next entry
       50       50                          is out of limits, or if the read routine ALTRETs. */
       51       51                                                /**/
       52       52        DDF$N_EXST: PROC( PTR$ ) ALTRET;
       53       53                                                /**/
       54       54    1   DCL PTR$ PTR;
       55       55    1   DCL PSIZ SBIN;
       56       56    1   DCL BNTRYPP UBIN;
       57       57    1   DCL ARS SBIN;
       58       58        %INCLUDE B$OBJECT_C;
       59     3488        %B$RECORDSUBS;
       60     3516        %B$LBNTRY1;
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:3    
       61     3543        %B$EXST;
       62     3650        %B$INTNTRY;
       63     3708        %B$VREBL;
       64     3872        %INCLUDE XUH_MACRO_C;
       65     3956        %INCLUDE DD_SD_M;
       66     5292        %S_D;
       67     6610    1   DCL DDQ$READLM ENTRY(7) ALTRET;
       68     6611                                                /**/
       69     6612    1        IF PTR$ < S_D.EXST_END$
       70     6613    2        THEN DO;
       71     6614    2             PTR$ = PINCRW( PTR$, SIZEW( B$EXST ) );
       72     6615    2             RETURN;
       73     6616    2           END;
       74     6617                                                /**/
       75     6618    1        PSIZ = S_D.LB1$ -> B$LBNTRY1.STMNTPSIZ;
       76     6619    1        IF ( S_D.EXST_PAGE + 1 ) * PSIZ >= S_D.LB1$ -> B$LBNTRY1.STMNTSIZ
       77     6620    1        THEN ALTRETURN;                    /* Ran off of end */
       78     6621    1        S_D.EXST_PAGE = S_D.EXST_PAGE + 1;
       79     6622    1        ARS = 0;
       80     6623    1        BNTRYPP = PSIZ * SIZEC( PSIZ );
       81     6624    1        CALL DDQ$READLM( %TYPEXST, S_D.EXST_PAGE, S_D.QSCH.NODE, S_D.EXST$, BNTRYPP,
              6624                 ARS, S_D.QSCH.NPOINTER ) ALTRET( EXSTARET );
       82     6625    1        PTR$ = S_D.EXST$;
       83     6626    1        S_D.EXST_END$ = PINCRC( S_D.EXST$, ARS - SIZEC( B$EXST ) );
       84     6627                                                /**/
       85     6628    1        RETURN;
       86     6629                                                /**/
       87     6630    1   EXSTARET:
       88     6631    1        S_D.EXST_PAGE = -1;
       89     6632    1        ALTRETURN;
       90     6633        %EJECT;
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:4    
       91     6634        /*F* NAME: DDF$P_EXST
       92     6635             PURPOSE: To get the previous entry in the executable statements table.
       93     6636             DESCRIPTION: If the previous entry is within thee current page, then
       94     6637                          the given pointer is decremented by 1 entry. Else,
       95     6638                          the page that contains then previous entry is read into
       96     6639                          memory. The input pointer is then set to the last entry
       97     6640                          in the page. RETURNs when done. ALTRETURNs if the previous
       98     6641                          entry is out of limits, or if the read routine ALTRETs. */
       99     6642        /*D* NAME: DDF$P_EXST
      100     6643             ENTRY: DDF$P_EXST
      101     6644             CALL: CALL DDF$P_EXST( PTR$ );
      102     6645             INTERFACE: DDQ$READLM
      103     6646             ENVIRONMENT: User Delta.
      104     6647             INPUT: PTR$ - Pointer to current entry.
      105     6648                    S_D.EXST$ - Pointer to first entry in current page.
      106     6649                    S_D.EXST_PAGE - Current page in memory.
      107     6650                    S_D.EXST_END$ - Pointer to last entry in current page.
      108     6651             OUTPUT: PTR$ - Pointer to next entry.
      109     6652                     S_D.EXST_PAGE - Current page in memory.
      110     6653                     S_D.EXST_END$ - Pointer to last entry in current page.
      111     6654             SCRATCH: Local AUTO only.
      112     6655             DESCRIPTION: If the previous entry is within thee current page, then
      113     6656                          the given pointer is decremented by 1 entry. Else,
      114     6657                          the page that contains then previous entry is read into
      115     6658                          memory. The input pointer is then set to the last entry
      116     6659                          in the page. RETURNs when done. ALTRETURNs if the previous
      117     6660                          entry is out of limits, or if the read routine ALTRETs. */
      118     6661                                                /**/
      119     6662    1   DDF$P_EXST: ENTRY( PTR$ ) ALTRET;
      120     6663                                                /**/
      121     6664    1        IF PTR$ > S_D.EXST$
      122     6665    2        THEN DO;
      123     6666    2             PTR$ = PINCRW( PTR$, -SIZEW( B$EXST ) );
      124     6667    2             RETURN;
      125     6668    2           END;
      126     6669                                                /**/
      127     6670    1        IF S_D.EXST_PAGE = 0
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:5    
      128     6671    1        THEN ALTRETURN;                    /* Ran out of entrys */
      129     6672    1        S_D.EXST_PAGE = S_D.EXST_PAGE - 1;
      130     6673    1        ARS = 0;
      131     6674    1        BNTRYPP = S_D.LB1$ -> B$LBNTRY1.STMNTPSIZ * SIZEC( BNTRYPP );
      132     6675    1        CALL DDQ$READLM( %TYPEXST, S_D.EXST_PAGE, S_D.QSCH.NODE, S_D.EXST$, BNTRYPP,
              6675                 ARS, S_D.QSCH.NPOINTER ) ALTRET( EXSTARET );
      133     6676    1        PTR$ = PINCRC( S_D.EXST$, ARS - SIZEC( B$EXST ) );
      134     6677    1        S_D.EXST_END$ = PTR$;
      135     6678                                                /**/
      136     6679    1        RETURN;
      137     6680        %EJECT;
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:6    
      138     6681        /*F* NAME: DDF$N_IE
      139     6682             PURPOSE: To get the next entry in the internal entrys table.
      140     6683             DESCRIPTION: If the next entry is within the current page, then
      141     6684                          the given pointer is incremented by 1 entry. Else,
      142     6685                          the page that contains the next entry is read into memory.
      143     6686                          The input pointer is then set to the beginning of the
      144     6687                          page. RETURNs when done. ALTRETURNs if the next entry
      145     6688                          is out of limits, or if the read routine ALTRETs. */
      146     6689        /*D* NAME: DDF$N_IE
      147     6690             ENTRY: DDF$N_IE
      148     6691             CALL: CALL DDF$N_IE( PTR$ );
      149     6692             INTERFACE: DDQ$READLM
      150     6693             ENVIRONMENT: User Delta.
      151     6694             INPUT: PTR$ - Pointer to current entry.
      152     6695                    S_D.IE$ - Pointer to first entry in current page.
      153     6696                    S_D.IE_PAGE - Current page in memory.
      154     6697                    S_D.IE_END$ - Pointer to last entry in current page.
      155     6698             OUTPUT: PTR$ - Pointer to next entry.
      156     6699                     S_D.IE_PAGE - Current page in memory.
      157     6700                     S_D.IE_END$ - Pointer to last entry in current page.
      158     6701             SCRATCH: Local AUTO only.
      159     6702             DESCRIPTION: If the next entry is within the current page, then
      160     6703                          the given pointer is incremented by 1 entry. Else,
      161     6704                          the page that contains the next entry is read into memory.
      162     6705                          The input pointer is then set to the beginning of the
      163     6706                          page. RETURNs when done. ALTRETURNs if the next entry
      164     6707                          is out of limits, or if the read routine ALTRETs. */
      165     6708                                                /**/
      166     6709    1   DDF$N_IE: ENTRY( PTR$ ) ALTRET;
      167     6710                                                /**/
      168     6711    1        IF PTR$ < S_D.IE_END$
      169     6712    2        THEN DO;
      170     6713    2             PTR$ = PINCRW( PTR$, SIZEW( B$INTNTRY ) );
      171     6714    2             RETURN;
      172     6715    2           END;
      173     6716                                                /**/
      174     6717    1        PSIZ = S_D.LB1$ -> B$LBNTRY1.INTRYPSIZ;
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:7    
      175     6718    1        IF ( S_D.IE_PAGE + 1 ) * PSIZ >= S_D.LB1$ -> B$LBNTRY1.INTRYSIZ
      176     6719    1        THEN ALTRETURN;                    /* Ran off of end */
      177     6720    1        S_D.IE_PAGE = S_D.IE_PAGE + 1;
      178     6721    1        ARS = 0;
      179     6722    1        BNTRYPP = PSIZ * SIZEC( PSIZ );
      180     6723    1        CALL DDQ$READLM( %TYPINTNTRY, S_D.IE_PAGE, S_D.QSCH.NODE, S_D.IE$, BNTRYPP, ARS
              6723                 , S_D.QSCH.NPOINTER ) ALTRET( IEARET );
      181     6724    1        PTR$ = S_D.IE$;
      182     6725    1        S_D.IE_END$ = PINCRC( S_D.IE$, ARS - SIZEC( B$INTNTRY ) );
      183     6726                                                /**/
      184     6727    1        RETURN;
      185     6728                                                /**/
      186     6729    1   IEARET:
      187     6730    1        S_D.IE_PAGE = -1;
      188     6731    1        ALTRETURN;
      189     6732        %EJECT;
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:8    
      190     6733        /*F* NAME: DDF$P_IE
      191     6734             PURPOSE: To get the previous entry in the internal entrys table.
      192     6735             DESCRIPTION: If the previous entry is within thee current page, then
      193     6736                          the given pointer is decremented by 1 entry. Else,
      194     6737                          the page that contains then previous entry is read into
      195     6738                          memory. The input pointer is then set to the last entry
      196     6739                          in the page. RETURNs when done. ALTRETURNs if the previous
      197     6740                          entry is out of limits, or if the read routine ALTRETs. */
      198     6741        /*D* NAME: DDF$P_IE
      199     6742             ENTRY: DDF$P_IE
      200     6743             CALL: CALL DDF$P_IE( PTR$ );
      201     6744             INTERFACE: DDQ$READLM
      202     6745             ENVIRONMENT: User Delta.
      203     6746             INPUT: PTR$ - Pointer to current entry.
      204     6747                    S_D.IE$ - Pointer to first entry in current page.
      205     6748                    S_D.IE_PAGE - Current page in memory.
      206     6749                    S_D.IE_END$ - Pointer to last entry in current page.
      207     6750             OUTPUT: PTR$ - Pointer to next entry.
      208     6751                     S_D.IE_PAGE - Current page in memory.
      209     6752                     S_D.IE_END$ - Pointer to last entry in current page.
      210     6753             SCRATCH: Local AUTO only.
      211     6754             DESCRIPTION: If the previous entry is within thee current page, then
      212     6755                          the given pointer is decremented by 1 entry. Else,
      213     6756                          the page that contains then previous entry is read into
      214     6757                          memory. The input pointer is then set to the last entry
      215     6758                          in the page. RETURNs when done. ALTRETURNs if the previous
      216     6759                          entry is out of limits, or if the read routine ALTRETs. */
      217     6760                                                /**/
      218     6761    1   DDF$P_IE: ENTRY( PTR$ ) ALTRET;
      219     6762                                                /**/
      220     6763    1        IF PTR$ > S_D.IE$
      221     6764    2        THEN DO;
      222     6765    2             PTR$ = PINCRW( PTR$, -SIZEW( B$INTNTRY ) );
      223     6766    2             RETURN;
      224     6767    2           END;
      225     6768                                                /**/
      226     6769    1        IF S_D.IE_PAGE = 0
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:9    
      227     6770    1        THEN ALTRETURN;                    /* Ran out of entrys */
      228     6771    1        S_D.IE_PAGE = S_D.IE_PAGE - 1;
      229     6772    1        ARS = 0;
      230     6773    1        BNTRYPP = S_D.LB1$ -> B$LBNTRY1.INTRYPSIZ * SIZEC( BNTRYPP );
      231     6774    1        CALL DDQ$READLM( %TYPINTNTRY, S_D.IE_PAGE, S_D.QSCH.NODE, S_D.IE$, BNTRYPP, ARS
              6774                 , S_D.QSCH.NPOINTER ) ALTRET( IEARET );
      232     6775    1        PTR$ = PINCRC( S_D.IE$, ARS - SIZEC( B$INTNTRY ) );
      233     6776    1        S_D.IE_END$ = PTR$;
      234     6777                                                /**/
      235     6778    1        RETURN;
      236     6779        %EJECT;
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:10   
      237     6780        /*F* NAME: DDF$N_VREBL
      238     6781             PURPOSE: To get the next entry in the program variables table.
      239     6782             DESCRIPTION: If the next entry is within the current page, then
      240     6783                          the given pointer is incremented by 1 entry. Else,
      241     6784                          the page that contains the next entry is read into memory.
      242     6785                          The input pointer is then set to the beginning of the
      243     6786                          page. RETURNs when done. ALTRETURNs if the next entry
      244     6787                          is out of limits, or if the read routine ALTRETs. */
      245     6788        /*D* NAME: DDF$N_VREBL
      246     6789             ENTRY: DDF$N_VREBL
      247     6790             CALL: CALL DDF$N_VREBL( PTR$ );
      248     6791             INTERFACE: DDQ$READLM
      249     6792             ENVIRONMENT: User Delta.
      250     6793             INPUT: PTR$ - Pointer to current entry.
      251     6794                    S_D.VREBL$ - Pointer to first entry in current page.
      252     6795                    S_D.VREBL_PAGE - Current page in memory.
      253     6796                    S_D.VREBL_END$ - Pointer to last entry in current page.
      254     6797             OUTPUT: PTR$ - Pointer to next entry.
      255     6798                     S_D.VREBL_PAGE - Current page in memory.
      256     6799                     S_D.VREBL_END$ - Pointer to last entry in current page.
      257     6800             SCRATCH: Local AUTO only.
      258     6801             DESCRIPTION: If the next entry is within the current page, then
      259     6802                          the given pointer is incremented by 1 entry. Else,
      260     6803                          the page that contains the next entry is read into memory.
      261     6804                          The input pointer is then set to the beginning of the
      262     6805                          page. RETURNs when done. ALTRETURNs if the next entry
      263     6806                          is out of limits, or if the read routine ALTRETs. */
      264     6807                                                /**/
      265     6808    1   DDF$N_VREBL: ENTRY( PTR$ ) ALTRET;
      266     6809                                                /**/
      267     6810    1        IF PTR$ < S_D.VREBL_END$
      268     6811    2        THEN DO;
      269     6812    2             PTR$ = PINCRW( PTR$, SIZEW( B$VREBL ) );
      270     6813    2             RETURN;
      271     6814    2           END;
      272     6815                                                /**/
      273     6816    1        PSIZ = S_D.LB1$ -> B$LBNTRY1.VREBLPSIZ;
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:11   
      274     6817    1        IF ( S_D.VREBL_PAGE + 1 ) * PSIZ >= S_D.LB1$ -> B$LBNTRY1.VREBLSIZ
      275     6818    1        THEN ALTRETURN;                    /* Ran off of end */
      276     6819    1        S_D.VREBL_PAGE = S_D.VREBL_PAGE + 1;
      277     6820    1        ARS = 0;
      278     6821    1        BNTRYPP = PSIZ * SIZEC( PSIZ );
      279     6822    1        CALL DDQ$READLM( %TYPVREBL, S_D.VREBL_PAGE, S_D.QSCH.NODE, S_D.VREBL$, BNTRYPP,
              6822                 ARS, S_D.QSCH.NPOINTER ) ALTRET( VREBLARET );
      280     6823    1        PTR$ = S_D.VREBL$;
      281     6824    1        S_D.VREBL_END$ = PINCRC( S_D.VREBL$, ARS - SIZEC( B$VREBL ) );
      282     6825                                                /**/
      283     6826    1        RETURN;
      284     6827                                                /**/
      285     6828    1   VREBLARET:
      286     6829    1        S_D.VREBL_PAGE = -1;
      287     6830    1        ALTRETURN;
      288     6831        %EJECT;
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:12   
      289     6832        /*F* NAME: DDF$P_VREBL
      290     6833             PURPOSE: To get the previous entry in the program variables table.
      291     6834             DESCRIPTION: If the previous entry is within thee current page, then
      292     6835                          the given pointer is decremented by 1 entry. Else,
      293     6836                          the page that contains then previous entry is read into
      294     6837                          memory. The input pointer is then set to the last entry
      295     6838                          in the page. RETURNs when done. ALTRETURNs if the previous
      296     6839                          entry is out of limits, or if the read routine ALTRETs. */
      297     6840        /*D* NAME: DDF$P_VREBL
      298     6841             ENTRY: DDF$P_VREBL
      299     6842             CALL: CALL DDF$P_VREBL( PTR$ );
      300     6843             INTERFACE: DDQ$READLM
      301     6844             ENVIRONMENT: User Delta.
      302     6845             INPUT: PTR$ - Pointer to current entry.
      303     6846                    S_D.VREBL$ - Pointer to first entry in current page.
      304     6847                    S_D.VREBL_PAGE - Current page in memory.
      305     6848                    S_D.VREBL_END$ - Pointer to last entry in current page.
      306     6849             OUTPUT: PTR$ - Pointer to next entry.
      307     6850                     S_D.VREBL_PAGE - Current page in memory.
      308     6851                     S_D.VREBL_END$ - Pointer to last entry in current page.
      309     6852             SCRATCH: Local AUTO only.
      310     6853             DESCRIPTION: If the previous entry is within thee current page, then
      311     6854                          the given pointer is decremented by 1 entry. Else,
      312     6855                          the page that contains then previous entry is read into
      313     6856                          memory. The input pointer is then set to the last entry
      314     6857                          in the page. RETURNs when done. ALTRETURNs if the previous
      315     6858                          entry is out of limits, or if the read routine ALTRETs. */
      316     6859                                                /**/
      317     6860    1   DDF$P_VREBL: ENTRY( PTR$ ) ALTRET;
      318     6861                                                /**/
      319     6862    1        IF PTR$ > S_D.VREBL$
      320     6863    2        THEN DO;
      321     6864    2             PTR$ = PINCRW( PTR$, -SIZEW( B$VREBL ) );
      322     6865    2             RETURN;
      323     6866    2           END;
      324     6867                                                /**/
      325     6868    1        IF S_D.VREBL_PAGE = 0
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:13   
      326     6869    1        THEN ALTRETURN;                    /* Ran out of entrys */
      327     6870    1        S_D.VREBL_PAGE = S_D.VREBL_PAGE - 1;
      328     6871    1        ARS = 0;
      329     6872    1        BNTRYPP = S_D.LB1$ -> B$LBNTRY1.VREBLPSIZ * SIZEC( BNTRYPP );
      330     6873    1        CALL DDQ$READLM( %TYPVREBL, S_D.VREBL_PAGE, S_D.QSCH.NODE, S_D.VREBL$, BNTRYPP,
              6873                 ARS, S_D.QSCH.NPOINTER ) ALTRET( VREBLARET );
      331     6874    1        PTR$ = PINCRC( S_D.VREBL$, ARS - SIZEC( B$VREBL ) );
      332     6875    1        S_D.VREBL_END$ = PTR$;
      333     6876                                                /**/
      334     6877    1        RETURN;
      335     6878                                                /**/
      336     6879    1   END DDF$N_EXST;
      337     6880        %EOD;

PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:14   
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDF$N_EXST.

   Procedure DDF$N_EXST requires 372 words for executable code.
   Procedure DDF$N_EXST requires 16 words of local(AUTO) storage.

PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:15   

 Object Unit name= DDF$N_EXST                                 File name= DUF$NPNUM.:E05TOU
 UTS= JUL 29 '97 14:52:10.08 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   372    564  DDF$N_EXST
    1  RoData even  none     7      7  DDF$N_EXST

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        1  DDF$N_EXST
     0    104          yes     yes      Std        1  DDF$P_EXST
     0    174          yes     yes      Std        1  DDF$N_IE
     0    300          yes     yes      Std        1  DDF$P_IE
     0    370          yes     yes      Std        1  DDF$N_VREBL
     0    474          yes     yes      Std        1  DDF$P_VREBL

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       7 DDQ$READLM
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:16   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    S_D$                                  B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:17   


        1        1        /*M* DUF$NPNUM Schema access routines for User Delta */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*P* NAME: DUF$NPNUM
        9        9             PURPOSE: To house routines that get Next, Previous, and entry # entrys
       10       10                      in the paged schema for executable statements, internal entrys,
       11       11                      variables, and debug names records.
       12       12             DESCRIPTION: These routines are functionally identical, the only
       13       13                          difference being the entry point name, and the record
       14       14                          that is being accessed. Variables in "static data" record
       15       15                          which page of each type of record is in memory. The desired
       16       16                          entry is either in the current in memory page, or the
       17       17                          appropriate page is obtained (overlaying the old page).
       18       18                          The "static data" pointers are maintained in either case.
       19       19                          These routines have all been coded separately, rather
       20       20                          than DO CASEing on record type, for execution speed, since
       21       21                          the searches could be lengthly, affecting interactive
       22       22                          response. */
       23       23        %EJECT;
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:18   
       24       24        /*F* NAME: DDF$N_EXST
       25       25             PURPOSE: To get the next entry in the executable statements table.
       26       26             DESCRIPTION: If the next entry is within the current page, then
       27       27                          the given pointer is incremented by 1 entry. Else,
       28       28                          the page that contains the next entry is read into memory.
       29       29                          The input pointer is then set to the beginning of the
       30       30                          page. RETURNs when done. ALTRETURNs if the next entry
       31       31                          is out of limits, or if the read routine ALTRETs. */
       32       32        /*D* NAME: DDF$N_EXST
       33       33             ENTRY: DDF$N_EXST
       34       34             CALL: CALL DDF$N_EXST( PTR$ );
       35       35             INTERFACE: DDQ$READLM
       36       36             ENVIRONMENT: User Delta.
       37       37             INPUT: PTR$ - Pointer to current entry.
       38       38                    S_D.EXST$ - Pointer to first entry in current page.
       39       39                    S_D.EXST_PAGE - Current page in memory.
       40       40                    S_D.EXST_END$ - Pointer to last entry in current page.
       41       41             OUTPUT: PTR$ - Pointer to next entry.
       42       42                     S_D.EXST_PAGE - Current page in memory.
       43       43                     S_D.EXST_END$ - Pointer to last entry in current page.
       44       44             SCRATCH: Local AUTO only.
       45       45             DESCRIPTION: If the next entry is within the current page, then
       46       46                          the given pointer is incremented by 1 entry. Else,
       47       47                          the page that contains the next entry is read into memory.
       48       48                          The input pointer is then set to the beginning of the
       49       49                          page. RETURNs when done. ALTRETURNs if the next entry
       50       50                          is out of limits, or if the read routine ALTRETs. */
       51       51                                                /**/
       52       52        DDF$N_EXST: PROC( PTR$ ) ALTRET;

     52  0 000000   000000 700200 xent  DDF$N_EXST   TSX0  ! X66_AUTO_1
         0 000001   000020 000001                    ZERO    16,1

       53       53                                                /**/
       54       54    1   DCL PTR$ PTR;
       55       55    1   DCL PSIZ SBIN;
       56       56    1   DCL BNTRYPP UBIN;
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:19   
       57       57    1   DCL ARS SBIN;
       58       58        %INCLUDE B$OBJECT_C;
       59     3488        %B$RECORDSUBS;
       60     3516        %B$LBNTRY1;
       61     3543        %B$EXST;
       62     3650        %B$INTNTRY;
       63     3708        %B$VREBL;
       64     3872        %INCLUDE XUH_MACRO_C;
       65     3956        %INCLUDE DD_SD_M;
       66     5292        %S_D;
       67     6610    1   DCL DDQ$READLM ENTRY(7) ALTRET;
       68     6611                                                /**/
       69     6612    1        IF PTR$ < S_D.EXST_END$

   6612  0 000002   200003 470500                    LDP0    @PTR$,,AUTO
         0 000003   000000 471400 xsym               LDP1    S_D$
         0 000004   000000 236100                    LDQ     0,,PR0
         0 000005   101011 116100                    CMPQ    521,,PR1
         0 000006   000012 603000 0                  TRC     s:6618

       70     6613    2        THEN DO;

       71     6614    2             PTR$ = PINCRW( PTR$, SIZEW( B$EXST ) );

   6614  0 000007   000003 036003                    ADLQ    3,DU
         0 000010   000000 756100                    STQ     0,,PR0

       72     6615    2             RETURN;

   6615  0 000011   000000 702200 xent               TSX2  ! X66_ARET

       73     6616    2           END;
       74     6617                                                /**/
       75     6618    1        PSIZ = S_D.LB1$ -> B$LBNTRY1.STMNTPSIZ;

   6618  0 000012   101036 473500                    LDP3    542,,PR1
         0 000013   300001 236100                    LDQ     1,,PR3
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:20   
         0 000014   777777 376007                    ANQ     -1,DL
         0 000015   200004 756100                    STQ     PSIZ,,AUTO

       76     6619    1        IF ( S_D.EXST_PAGE + 1 ) * PSIZ >= S_D.LB1$ -> B$LBNTRY1.STMNTSIZ

   6619  0 000016   101012 236100                    LDQ     522,,PR1
         0 000017   000001 036007                    ADLQ    1,DL
         0 000020   200004 402100                    MPY     PSIZ,,AUTO
         0 000021   200010 756100                    STQ     ARS+2,,AUTO
         0 000022   300001 236100                    LDQ     1,,PR3
         0 000023   000022 772000                    QRL     18
         0 000024   200011 756100                    STQ     ARS+3,,AUTO
         0 000025   200010 236100                    LDQ     ARS+2,,AUTO
         0 000026   200011 116100                    CMPQ    ARS+3,,AUTO
         0 000027   000031 604000 0                  TMI     s:6621

       77     6620    1        THEN ALTRETURN;                    /* Ran off of end */

   6620  0 000030   000000 702200 xent               TSX2  ! X66_AALT

       78     6621    1        S_D.EXST_PAGE = S_D.EXST_PAGE + 1;

   6621  0 000031   101012 054100                    AOS     522,,PR1

       79     6622    1        ARS = 0;

   6622  0 000032   200006 450100                    STZ     ARS,,AUTO

       80     6623    1        BNTRYPP = PSIZ * SIZEC( PSIZ );

   6623  0 000033   200004 235100                    LDA     PSIZ,,AUTO
         0 000034   000002 735000                    ALS     2
         0 000035   200005 755100                    STA     BNTRYPP,,AUTO

       81     6624    1        CALL DDQ$READLM( %TYPEXST, S_D.EXST_PAGE, S_D.QSCH.NODE, S_D.EXST$, BNTRYPP,
              6624                 ARS, S_D.QSCH.NPOINTER ) ALTRET( EXSTARET );

PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:21   
   6624  0 000036   000000 236000 xsym               LDQ     S_D$
         0 000037   000736 036003                    ADLQ    478,DU
         0 000040   200016 756100                    STQ     ARS+8,,AUTO
         0 000041   200006 634500                    EPPR4   ARS,,AUTO
         0 000042   200015 454500                    STP4    ARS+7,,AUTO
         0 000043   200005 635500                    EPPR5   BNTRYPP,,AUTO
         0 000044   200014 455500                    STP5    ARS+6,,AUTO
         0 000045   000000 236000 xsym               LDQ     S_D$
         0 000046   001010 036003                    ADLQ    520,DU
         0 000047   200013 756100                    STQ     ARS+5,,AUTO
         0 000050   000000 236000 xsym               LDQ     S_D$
         0 000051   000735 036003                    ADLQ    477,DU
         0 000052   200012 756100                    STQ     ARS+4,,AUTO
         0 000053   000000 236000 xsym               LDQ     S_D$
         0 000054   001012 036003                    ADLQ    522,DU
         0 000055   000001 235000 1                  LDA     1
         0 000056   200010 757100                    STAQ    ARS+2,,AUTO
         0 000057   200010 630500                    EPPR0   ARS+2,,AUTO
         0 000060   000025 631400 xsym               EPPR1   B_VECTNIL+21
         0 000061   000000 701000 xent               TSX1    DDQ$READLM
         0 000062   000100 702000 0                  TSX2    EXSTARET

       82     6625    1        PTR$ = S_D.EXST$;

   6625  0 000063   000000 470400 xsym               LDP0    S_D$
         0 000064   001010 236100                    LDQ     520,,PR0
         0 000065   200003 471500                    LDP1    @PTR$,,AUTO
         0 000066   100000 756100                    STQ     0,,PR1

       83     6626    1        S_D.EXST_END$ = PINCRC( S_D.EXST$, ARS - SIZEC( B$EXST ) );

   6626  0 000067   001010 473500                    LDP3    520,,PR0
         0 000070   200006 236100                    LDQ     ARS,,AUTO
         0 000071   000011 402007                    MPY     9,DL
         0 000072   000000 116003                    CMPQ    0,DU
         0 000073   000075 605000 0                  TPL     s:6626+6
         0 000074   000044 036003                    ADLQ    36,DU
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:22   
         0 000075   377775 503506                    ABD     -3,QL,PR3
         0 000076   001011 453500                    STP3    521,,PR0

       84     6627                                                /**/
       85     6628    1        RETURN;

   6628  0 000077   000000 702200 xent               TSX2  ! X66_ARET

       86     6629                                                /**/
       87     6630    1   EXSTARET:
       88     6631    1        S_D.EXST_PAGE = -1;

   6631  0 000100   000001 335007       EXSTARET     LCA     1,DL
         0 000101   000000 470400 xsym               LDP0    S_D$
         0 000102   001012 755100                    STA     522,,PR0

       89     6632    1        ALTRETURN;

   6632  0 000103   000000 702200 xent               TSX2  ! X66_AALT

       90     6633        %EJECT;
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:23   
       91     6634        /*F* NAME: DDF$P_EXST
       92     6635             PURPOSE: To get the previous entry in the executable statements table.
       93     6636             DESCRIPTION: If the previous entry is within thee current page, then
       94     6637                          the given pointer is decremented by 1 entry. Else,
       95     6638                          the page that contains then previous entry is read into
       96     6639                          memory. The input pointer is then set to the last entry
       97     6640                          in the page. RETURNs when done. ALTRETURNs if the previous
       98     6641                          entry is out of limits, or if the read routine ALTRETs. */
       99     6642        /*D* NAME: DDF$P_EXST
      100     6643             ENTRY: DDF$P_EXST
      101     6644             CALL: CALL DDF$P_EXST( PTR$ );
      102     6645             INTERFACE: DDQ$READLM
      103     6646             ENVIRONMENT: User Delta.
      104     6647             INPUT: PTR$ - Pointer to current entry.
      105     6648                    S_D.EXST$ - Pointer to first entry in current page.
      106     6649                    S_D.EXST_PAGE - Current page in memory.
      107     6650                    S_D.EXST_END$ - Pointer to last entry in current page.
      108     6651             OUTPUT: PTR$ - Pointer to next entry.
      109     6652                     S_D.EXST_PAGE - Current page in memory.
      110     6653                     S_D.EXST_END$ - Pointer to last entry in current page.
      111     6654             SCRATCH: Local AUTO only.
      112     6655             DESCRIPTION: If the previous entry is within thee current page, then
      113     6656                          the given pointer is decremented by 1 entry. Else,
      114     6657                          the page that contains then previous entry is read into
      115     6658                          memory. The input pointer is then set to the last entry
      116     6659                          in the page. RETURNs when done. ALTRETURNs if the previous
      117     6660                          entry is out of limits, or if the read routine ALTRETs. */
      118     6661                                                /**/
      119     6662    1   DDF$P_EXST: ENTRY( PTR$ ) ALTRET;

   6662  0 000104   000000 700200 xent  DDF$P_EXST   TSX0  ! X66_AUTO_1
         0 000105   000020 000001                    ZERO    16,1

      120     6663                                                /**/
      121     6664    1        IF PTR$ > S_D.EXST$

   6664  0 000106   000000 470400 xsym               LDP0    S_D$
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:24   
         0 000107   200003 471500                    LDP1    @PTR$,,AUTO
         0 000110   001010 236100                    LDQ     520,,PR0
         0 000111   100000 116100                    CMPQ    0,,PR1
         0 000112   000117 603000 0                  TRC     s:6670

      122     6665    2        THEN DO;

      123     6666    2             PTR$ = PINCRW( PTR$, -SIZEW( B$EXST ) );

   6666  0 000113   100000 236100                    LDQ     0,,PR1
         0 000114   777775 036003                    ADLQ    -3,DU
         0 000115   100000 756100                    STQ     0,,PR1

      124     6667    2             RETURN;

   6667  0 000116   000000 702200 xent               TSX2  ! X66_ARET

      125     6668    2           END;
      126     6669                                                /**/
      127     6670    1        IF S_D.EXST_PAGE = 0

   6670  0 000117   001012 235100                    LDA     522,,PR0
         0 000120   000122 601000 0                  TNZ     s:6672

      128     6671    1        THEN ALTRETURN;                    /* Ran out of entrys */

   6671  0 000121   000000 702200 xent               TSX2  ! X66_AALT

      129     6672    1        S_D.EXST_PAGE = S_D.EXST_PAGE - 1;

   6672  0 000122   000001 336007                    LCQ     1,DL
         0 000123   001012 056100                    ASQ     522,,PR0

      130     6673    1        ARS = 0;

   6673  0 000124   200006 450100                    STZ     ARS,,AUTO

PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:25   
      131     6674    1        BNTRYPP = S_D.LB1$ -> B$LBNTRY1.STMNTPSIZ * SIZEC( BNTRYPP );

   6674  0 000125   001036 473500                    LDP3    542,,PR0
         0 000126   300001 236100                    LDQ     1,,PR3
         0 000127   000002 736000                    QLS     2
         0 000130   000002 376000 1                  ANQ     2
         0 000131   200005 756100                    STQ     BNTRYPP,,AUTO

      132     6675    1        CALL DDQ$READLM( %TYPEXST, S_D.EXST_PAGE, S_D.QSCH.NODE, S_D.EXST$, BNTRYPP,
              6675                 ARS, S_D.QSCH.NPOINTER ) ALTRET( EXSTARET );

   6675  0 000132   000000 236000 xsym               LDQ     S_D$
         0 000133   000736 036003                    ADLQ    478,DU
         0 000134   200016 756100                    STQ     ARS+8,,AUTO
         0 000135   200006 634500                    EPPR4   ARS,,AUTO
         0 000136   200015 454500                    STP4    ARS+7,,AUTO
         0 000137   200005 635500                    EPPR5   BNTRYPP,,AUTO
         0 000140   200014 455500                    STP5    ARS+6,,AUTO
         0 000141   000000 236000 xsym               LDQ     S_D$
         0 000142   001010 036003                    ADLQ    520,DU
         0 000143   200013 756100                    STQ     ARS+5,,AUTO
         0 000144   000000 236000 xsym               LDQ     S_D$
         0 000145   000735 036003                    ADLQ    477,DU
         0 000146   200012 756100                    STQ     ARS+4,,AUTO
         0 000147   000000 236000 xsym               LDQ     S_D$
         0 000150   001012 036003                    ADLQ    522,DU
         0 000151   000001 235000 1                  LDA     1
         0 000152   200010 757100                    STAQ    ARS+2,,AUTO
         0 000153   200010 630500                    EPPR0   ARS+2,,AUTO
         0 000154   000025 631400 xsym               EPPR1   B_VECTNIL+21
         0 000155   000000 701000 xent               TSX1    DDQ$READLM
         0 000156   000100 702000 0                  TSX2    EXSTARET

      133     6676    1        PTR$ = PINCRC( S_D.EXST$, ARS - SIZEC( B$EXST ) );

   6676  0 000157   000000 470400 xsym               LDP0    S_D$
         0 000160   001010 471500                    LDP1    520,,PR0
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:26   
         0 000161   200006 236100                    LDQ     ARS,,AUTO
         0 000162   000011 402007                    MPY     9,DL
         0 000163   000000 116003                    CMPQ    0,DU
         0 000164   000166 605000 0                  TPL     s:6676+7
         0 000165   000044 036003                    ADLQ    36,DU
         0 000166   177775 503506                    ABD     -3,QL,PR1
         0 000167   200003 473500                    LDP3    @PTR$,,AUTO
         0 000170   300000 451500                    STP1    0,,PR3

      134     6677    1        S_D.EXST_END$ = PTR$;

   6677  0 000171   300000 236100                    LDQ     0,,PR3
         0 000172   001011 756100                    STQ     521,,PR0

      135     6678                                                /**/
      136     6679    1        RETURN;

   6679  0 000173   000000 702200 xent               TSX2  ! X66_ARET

      137     6680        %EJECT;
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:27   
      138     6681        /*F* NAME: DDF$N_IE
      139     6682             PURPOSE: To get the next entry in the internal entrys table.
      140     6683             DESCRIPTION: If the next entry is within the current page, then
      141     6684                          the given pointer is incremented by 1 entry. Else,
      142     6685                          the page that contains the next entry is read into memory.
      143     6686                          The input pointer is then set to the beginning of the
      144     6687                          page. RETURNs when done. ALTRETURNs if the next entry
      145     6688                          is out of limits, or if the read routine ALTRETs. */
      146     6689        /*D* NAME: DDF$N_IE
      147     6690             ENTRY: DDF$N_IE
      148     6691             CALL: CALL DDF$N_IE( PTR$ );
      149     6692             INTERFACE: DDQ$READLM
      150     6693             ENVIRONMENT: User Delta.
      151     6694             INPUT: PTR$ - Pointer to current entry.
      152     6695                    S_D.IE$ - Pointer to first entry in current page.
      153     6696                    S_D.IE_PAGE - Current page in memory.
      154     6697                    S_D.IE_END$ - Pointer to last entry in current page.
      155     6698             OUTPUT: PTR$ - Pointer to next entry.
      156     6699                     S_D.IE_PAGE - Current page in memory.
      157     6700                     S_D.IE_END$ - Pointer to last entry in current page.
      158     6701             SCRATCH: Local AUTO only.
      159     6702             DESCRIPTION: If the next entry is within the current page, then
      160     6703                          the given pointer is incremented by 1 entry. Else,
      161     6704                          the page that contains the next entry is read into memory.
      162     6705                          The input pointer is then set to the beginning of the
      163     6706                          page. RETURNs when done. ALTRETURNs if the next entry
      164     6707                          is out of limits, or if the read routine ALTRETs. */
      165     6708                                                /**/
      166     6709    1   DDF$N_IE: ENTRY( PTR$ ) ALTRET;

   6709  0 000174   000000 700200 xent  DDF$N_IE     TSX0  ! X66_AUTO_1
         0 000175   000020 000001                    ZERO    16,1

      167     6710                                                /**/
      168     6711    1        IF PTR$ < S_D.IE_END$

   6711  0 000176   200003 470500                    LDP0    @PTR$,,AUTO
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:28   
         0 000177   000000 471400 xsym               LDP1    S_D$
         0 000200   000000 236100                    LDQ     0,,PR0
         0 000201   101014 116100                    CMPQ    524,,PR1
         0 000202   000206 603000 0                  TRC     s:6717

      169     6712    2        THEN DO;

      170     6713    2             PTR$ = PINCRW( PTR$, SIZEW( B$INTNTRY ) );

   6713  0 000203   000002 036003                    ADLQ    2,DU
         0 000204   000000 756100                    STQ     0,,PR0

      171     6714    2             RETURN;

   6714  0 000205   000000 702200 xent               TSX2  ! X66_ARET

      172     6715    2           END;
      173     6716                                                /**/
      174     6717    1        PSIZ = S_D.LB1$ -> B$LBNTRY1.INTRYPSIZ;

   6717  0 000206   101036 473500                    LDP3    542,,PR1
         0 000207   300003 236100                    LDQ     3,,PR3
         0 000210   777777 376007                    ANQ     -1,DL
         0 000211   200004 756100                    STQ     PSIZ,,AUTO

      175     6718    1        IF ( S_D.IE_PAGE + 1 ) * PSIZ >= S_D.LB1$ -> B$LBNTRY1.INTRYSIZ

   6718  0 000212   101015 236100                    LDQ     525,,PR1
         0 000213   000001 036007                    ADLQ    1,DL
         0 000214   200004 402100                    MPY     PSIZ,,AUTO
         0 000215   200010 756100                    STQ     ARS+2,,AUTO
         0 000216   300003 236100                    LDQ     3,,PR3
         0 000217   000022 772000                    QRL     18
         0 000220   200011 756100                    STQ     ARS+3,,AUTO
         0 000221   200010 236100                    LDQ     ARS+2,,AUTO
         0 000222   200011 116100                    CMPQ    ARS+3,,AUTO
         0 000223   000225 604000 0                  TMI     s:6720
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:29   

      176     6719    1        THEN ALTRETURN;                    /* Ran off of end */

   6719  0 000224   000000 702200 xent               TSX2  ! X66_AALT

      177     6720    1        S_D.IE_PAGE = S_D.IE_PAGE + 1;

   6720  0 000225   101015 054100                    AOS     525,,PR1

      178     6721    1        ARS = 0;

   6721  0 000226   200006 450100                    STZ     ARS,,AUTO

      179     6722    1        BNTRYPP = PSIZ * SIZEC( PSIZ );

   6722  0 000227   200004 235100                    LDA     PSIZ,,AUTO
         0 000230   000002 735000                    ALS     2
         0 000231   200005 755100                    STA     BNTRYPP,,AUTO

      180     6723    1       CALL DDQ$READLM( %TYPINTNTRY, S_D.IE_PAGE, S_D.QSCH.NODE, S_D.IE$, BNTRYPP, ARS
              6723                 , S_D.QSCH.NPOINTER ) ALTRET( IEARET );

   6723  0 000232   000000 236000 xsym               LDQ     S_D$
         0 000233   000736 036003                    ADLQ    478,DU
         0 000234   200016 756100                    STQ     ARS+8,,AUTO
         0 000235   200006 634500                    EPPR4   ARS,,AUTO
         0 000236   200015 454500                    STP4    ARS+7,,AUTO
         0 000237   200005 635500                    EPPR5   BNTRYPP,,AUTO
         0 000240   200014 455500                    STP5    ARS+6,,AUTO
         0 000241   000000 236000 xsym               LDQ     S_D$
         0 000242   001013 036003                    ADLQ    523,DU
         0 000243   200013 756100                    STQ     ARS+5,,AUTO
         0 000244   000000 236000 xsym               LDQ     S_D$
         0 000245   000735 036003                    ADLQ    477,DU
         0 000246   200012 756100                    STQ     ARS+4,,AUTO
         0 000247   000000 236000 xsym               LDQ     S_D$
         0 000250   001015 036003                    ADLQ    525,DU
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:30   
         0 000251   000004 235000 1                  LDA     4
         0 000252   200010 757100                    STAQ    ARS+2,,AUTO
         0 000253   200010 630500                    EPPR0   ARS+2,,AUTO
         0 000254   000025 631400 xsym               EPPR1   B_VECTNIL+21
         0 000255   000000 701000 xent               TSX1    DDQ$READLM
         0 000256   000274 702000 0                  TSX2    IEARET

      181     6724    1        PTR$ = S_D.IE$;

   6724  0 000257   000000 470400 xsym               LDP0    S_D$
         0 000260   001013 236100                    LDQ     523,,PR0
         0 000261   200003 471500                    LDP1    @PTR$,,AUTO
         0 000262   100000 756100                    STQ     0,,PR1

      182     6725    1        S_D.IE_END$ = PINCRC( S_D.IE$, ARS - SIZEC( B$INTNTRY ) );

   6725  0 000263   001013 473500                    LDP3    523,,PR0
         0 000264   200006 236100                    LDQ     ARS,,AUTO
         0 000265   000011 402007                    MPY     9,DL
         0 000266   000000 116003                    CMPQ    0,DU
         0 000267   000271 605000 0                  TPL     s:6725+6
         0 000270   000044 036003                    ADLQ    36,DU
         0 000271   377776 503506                    ABD     -2,QL,PR3
         0 000272   001014 453500                    STP3    524,,PR0

      183     6726                                                /**/
      184     6727    1        RETURN;

   6727  0 000273   000000 702200 xent               TSX2  ! X66_ARET

      185     6728                                                /**/
      186     6729    1   IEARET:
      187     6730    1        S_D.IE_PAGE = -1;

   6730  0 000274   000001 335007       IEARET       LCA     1,DL
         0 000275   000000 470400 xsym               LDP0    S_D$
         0 000276   001015 755100                    STA     525,,PR0
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:31   

      188     6731    1        ALTRETURN;

   6731  0 000277   000000 702200 xent               TSX2  ! X66_AALT

      189     6732        %EJECT;
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:32   
      190     6733        /*F* NAME: DDF$P_IE
      191     6734             PURPOSE: To get the previous entry in the internal entrys table.
      192     6735             DESCRIPTION: If the previous entry is within thee current page, then
      193     6736                          the given pointer is decremented by 1 entry. Else,
      194     6737                          the page that contains then previous entry is read into
      195     6738                          memory. The input pointer is then set to the last entry
      196     6739                          in the page. RETURNs when done. ALTRETURNs if the previous
      197     6740                          entry is out of limits, or if the read routine ALTRETs. */
      198     6741        /*D* NAME: DDF$P_IE
      199     6742             ENTRY: DDF$P_IE
      200     6743             CALL: CALL DDF$P_IE( PTR$ );
      201     6744             INTERFACE: DDQ$READLM
      202     6745             ENVIRONMENT: User Delta.
      203     6746             INPUT: PTR$ - Pointer to current entry.
      204     6747                    S_D.IE$ - Pointer to first entry in current page.
      205     6748                    S_D.IE_PAGE - Current page in memory.
      206     6749                    S_D.IE_END$ - Pointer to last entry in current page.
      207     6750             OUTPUT: PTR$ - Pointer to next entry.
      208     6751                     S_D.IE_PAGE - Current page in memory.
      209     6752                     S_D.IE_END$ - Pointer to last entry in current page.
      210     6753             SCRATCH: Local AUTO only.
      211     6754             DESCRIPTION: If the previous entry is within thee current page, then
      212     6755                          the given pointer is decremented by 1 entry. Else,
      213     6756                          the page that contains then previous entry is read into
      214     6757                          memory. The input pointer is then set to the last entry
      215     6758                          in the page. RETURNs when done. ALTRETURNs if the previous
      216     6759                          entry is out of limits, or if the read routine ALTRETs. */
      217     6760                                                /**/
      218     6761    1   DDF$P_IE: ENTRY( PTR$ ) ALTRET;

   6761  0 000300   000000 700200 xent  DDF$P_IE     TSX0  ! X66_AUTO_1
         0 000301   000020 000001                    ZERO    16,1

      219     6762                                                /**/
      220     6763    1        IF PTR$ > S_D.IE$

   6763  0 000302   000000 470400 xsym               LDP0    S_D$
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:33   
         0 000303   200003 471500                    LDP1    @PTR$,,AUTO
         0 000304   001013 236100                    LDQ     523,,PR0
         0 000305   100000 116100                    CMPQ    0,,PR1
         0 000306   000313 603000 0                  TRC     s:6769

      221     6764    2        THEN DO;

      222     6765    2             PTR$ = PINCRW( PTR$, -SIZEW( B$INTNTRY ) );

   6765  0 000307   100000 236100                    LDQ     0,,PR1
         0 000310   777776 036003                    ADLQ    -2,DU
         0 000311   100000 756100                    STQ     0,,PR1

      223     6766    2             RETURN;

   6766  0 000312   000000 702200 xent               TSX2  ! X66_ARET

      224     6767    2           END;
      225     6768                                                /**/
      226     6769    1        IF S_D.IE_PAGE = 0

   6769  0 000313   001015 235100                    LDA     525,,PR0
         0 000314   000316 601000 0                  TNZ     s:6771

      227     6770    1        THEN ALTRETURN;                    /* Ran out of entrys */

   6770  0 000315   000000 702200 xent               TSX2  ! X66_AALT

      228     6771    1        S_D.IE_PAGE = S_D.IE_PAGE - 1;

   6771  0 000316   000001 336007                    LCQ     1,DL
         0 000317   001015 056100                    ASQ     525,,PR0

      229     6772    1        ARS = 0;

   6772  0 000320   200006 450100                    STZ     ARS,,AUTO

PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:34   
      230     6773    1        BNTRYPP = S_D.LB1$ -> B$LBNTRY1.INTRYPSIZ * SIZEC( BNTRYPP );

   6773  0 000321   001036 473500                    LDP3    542,,PR0
         0 000322   300003 236100                    LDQ     3,,PR3
         0 000323   000002 736000                    QLS     2
         0 000324   000002 376000 1                  ANQ     2
         0 000325   200005 756100                    STQ     BNTRYPP,,AUTO

      231     6774    1       CALL DDQ$READLM( %TYPINTNTRY, S_D.IE_PAGE, S_D.QSCH.NODE, S_D.IE$, BNTRYPP, ARS
              6774                 , S_D.QSCH.NPOINTER ) ALTRET( IEARET );

   6774  0 000326   000000 236000 xsym               LDQ     S_D$
         0 000327   000736 036003                    ADLQ    478,DU
         0 000330   200016 756100                    STQ     ARS+8,,AUTO
         0 000331   200006 634500                    EPPR4   ARS,,AUTO
         0 000332   200015 454500                    STP4    ARS+7,,AUTO
         0 000333   200005 635500                    EPPR5   BNTRYPP,,AUTO
         0 000334   200014 455500                    STP5    ARS+6,,AUTO
         0 000335   000000 236000 xsym               LDQ     S_D$
         0 000336   001013 036003                    ADLQ    523,DU
         0 000337   200013 756100                    STQ     ARS+5,,AUTO
         0 000340   000000 236000 xsym               LDQ     S_D$
         0 000341   000735 036003                    ADLQ    477,DU
         0 000342   200012 756100                    STQ     ARS+4,,AUTO
         0 000343   000000 236000 xsym               LDQ     S_D$
         0 000344   001015 036003                    ADLQ    525,DU
         0 000345   000004 235000 1                  LDA     4
         0 000346   200010 757100                    STAQ    ARS+2,,AUTO
         0 000347   200010 630500                    EPPR0   ARS+2,,AUTO
         0 000350   000025 631400 xsym               EPPR1   B_VECTNIL+21
         0 000351   000000 701000 xent               TSX1    DDQ$READLM
         0 000352   000274 702000 0                  TSX2    IEARET

      232     6775    1        PTR$ = PINCRC( S_D.IE$, ARS - SIZEC( B$INTNTRY ) );

   6775  0 000353   000000 470400 xsym               LDP0    S_D$
         0 000354   001013 471500                    LDP1    523,,PR0
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:35   
         0 000355   200006 236100                    LDQ     ARS,,AUTO
         0 000356   000011 402007                    MPY     9,DL
         0 000357   000000 116003                    CMPQ    0,DU
         0 000360   000362 605000 0                  TPL     s:6775+7
         0 000361   000044 036003                    ADLQ    36,DU
         0 000362   177776 503506                    ABD     -2,QL,PR1
         0 000363   200003 473500                    LDP3    @PTR$,,AUTO
         0 000364   300000 451500                    STP1    0,,PR3

      233     6776    1        S_D.IE_END$ = PTR$;

   6776  0 000365   300000 236100                    LDQ     0,,PR3
         0 000366   001014 756100                    STQ     524,,PR0

      234     6777                                                /**/
      235     6778    1        RETURN;

   6778  0 000367   000000 702200 xent               TSX2  ! X66_ARET

      236     6779        %EJECT;
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:36   
      237     6780        /*F* NAME: DDF$N_VREBL
      238     6781             PURPOSE: To get the next entry in the program variables table.
      239     6782             DESCRIPTION: If the next entry is within the current page, then
      240     6783                          the given pointer is incremented by 1 entry. Else,
      241     6784                          the page that contains the next entry is read into memory.
      242     6785                          The input pointer is then set to the beginning of the
      243     6786                          page. RETURNs when done. ALTRETURNs if the next entry
      244     6787                          is out of limits, or if the read routine ALTRETs. */
      245     6788        /*D* NAME: DDF$N_VREBL
      246     6789             ENTRY: DDF$N_VREBL
      247     6790             CALL: CALL DDF$N_VREBL( PTR$ );
      248     6791             INTERFACE: DDQ$READLM
      249     6792             ENVIRONMENT: User Delta.
      250     6793             INPUT: PTR$ - Pointer to current entry.
      251     6794                    S_D.VREBL$ - Pointer to first entry in current page.
      252     6795                    S_D.VREBL_PAGE - Current page in memory.
      253     6796                    S_D.VREBL_END$ - Pointer to last entry in current page.
      254     6797             OUTPUT: PTR$ - Pointer to next entry.
      255     6798                     S_D.VREBL_PAGE - Current page in memory.
      256     6799                     S_D.VREBL_END$ - Pointer to last entry in current page.
      257     6800             SCRATCH: Local AUTO only.
      258     6801             DESCRIPTION: If the next entry is within the current page, then
      259     6802                          the given pointer is incremented by 1 entry. Else,
      260     6803                          the page that contains the next entry is read into memory.
      261     6804                          The input pointer is then set to the beginning of the
      262     6805                          page. RETURNs when done. ALTRETURNs if the next entry
      263     6806                          is out of limits, or if the read routine ALTRETs. */
      264     6807                                                /**/
      265     6808    1   DDF$N_VREBL: ENTRY( PTR$ ) ALTRET;

   6808  0 000370   000000 700200 xent  DDF$N_VREBL  TSX0  ! X66_AUTO_1
         0 000371   000020 000001                    ZERO    16,1

      266     6809                                                /**/
      267     6810    1        IF PTR$ < S_D.VREBL_END$

   6810  0 000372   200003 470500                    LDP0    @PTR$,,AUTO
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:37   
         0 000373   000000 471400 xsym               LDP1    S_D$
         0 000374   000000 236100                    LDQ     0,,PR0
         0 000375   101017 116100                    CMPQ    527,,PR1
         0 000376   000402 603000 0                  TRC     s:6816

      268     6811    2        THEN DO;

      269     6812    2             PTR$ = PINCRW( PTR$, SIZEW( B$VREBL ) );

   6812  0 000377   000005 036003                    ADLQ    5,DU
         0 000400   000000 756100                    STQ     0,,PR0

      270     6813    2             RETURN;

   6813  0 000401   000000 702200 xent               TSX2  ! X66_ARET

      271     6814    2           END;
      272     6815                                                /**/
      273     6816    1        PSIZ = S_D.LB1$ -> B$LBNTRY1.VREBLPSIZ;

   6816  0 000402   101036 473500                    LDP3    542,,PR1
         0 000403   300002 236100                    LDQ     2,,PR3
         0 000404   777777 376007                    ANQ     -1,DL
         0 000405   200004 756100                    STQ     PSIZ,,AUTO

      274     6817    1        IF ( S_D.VREBL_PAGE + 1 ) * PSIZ >= S_D.LB1$ -> B$LBNTRY1.VREBLSIZ

   6817  0 000406   101020 236100                    LDQ     528,,PR1
         0 000407   000001 036007                    ADLQ    1,DL
         0 000410   200004 402100                    MPY     PSIZ,,AUTO
         0 000411   200010 756100                    STQ     ARS+2,,AUTO
         0 000412   300002 236100                    LDQ     2,,PR3
         0 000413   000022 772000                    QRL     18
         0 000414   200011 756100                    STQ     ARS+3,,AUTO
         0 000415   200010 236100                    LDQ     ARS+2,,AUTO
         0 000416   200011 116100                    CMPQ    ARS+3,,AUTO
         0 000417   000421 604000 0                  TMI     s:6819
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:38   

      275     6818    1        THEN ALTRETURN;                    /* Ran off of end */

   6818  0 000420   000000 702200 xent               TSX2  ! X66_AALT

      276     6819    1        S_D.VREBL_PAGE = S_D.VREBL_PAGE + 1;

   6819  0 000421   101020 054100                    AOS     528,,PR1

      277     6820    1        ARS = 0;

   6820  0 000422   200006 450100                    STZ     ARS,,AUTO

      278     6821    1        BNTRYPP = PSIZ * SIZEC( PSIZ );

   6821  0 000423   200004 235100                    LDA     PSIZ,,AUTO
         0 000424   000002 735000                    ALS     2
         0 000425   200005 755100                    STA     BNTRYPP,,AUTO

      279     6822    1       CALL DDQ$READLM( %TYPVREBL, S_D.VREBL_PAGE, S_D.QSCH.NODE, S_D.VREBL$, BNTRYPP,
              6822                 ARS, S_D.QSCH.NPOINTER ) ALTRET( VREBLARET );

   6822  0 000426   000000 236000 xsym               LDQ     S_D$
         0 000427   000736 036003                    ADLQ    478,DU
         0 000430   200016 756100                    STQ     ARS+8,,AUTO
         0 000431   200006 634500                    EPPR4   ARS,,AUTO
         0 000432   200015 454500                    STP4    ARS+7,,AUTO
         0 000433   200005 635500                    EPPR5   BNTRYPP,,AUTO
         0 000434   200014 455500                    STP5    ARS+6,,AUTO
         0 000435   000000 236000 xsym               LDQ     S_D$
         0 000436   001016 036003                    ADLQ    526,DU
         0 000437   200013 756100                    STQ     ARS+5,,AUTO
         0 000440   000000 236000 xsym               LDQ     S_D$
         0 000441   000735 036003                    ADLQ    477,DU
         0 000442   200012 756100                    STQ     ARS+4,,AUTO
         0 000443   000000 236000 xsym               LDQ     S_D$
         0 000444   001020 036003                    ADLQ    528,DU
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:39   
         0 000445   000006 235000 1                  LDA     6
         0 000446   200010 757100                    STAQ    ARS+2,,AUTO
         0 000447   200010 630500                    EPPR0   ARS+2,,AUTO
         0 000450   000025 631400 xsym               EPPR1   B_VECTNIL+21
         0 000451   000000 701000 xent               TSX1    DDQ$READLM
         0 000452   000470 702000 0                  TSX2    VREBLARET

      280     6823    1        PTR$ = S_D.VREBL$;

   6823  0 000453   000000 470400 xsym               LDP0    S_D$
         0 000454   001016 236100                    LDQ     526,,PR0
         0 000455   200003 471500                    LDP1    @PTR$,,AUTO
         0 000456   100000 756100                    STQ     0,,PR1

      281     6824    1        S_D.VREBL_END$ = PINCRC( S_D.VREBL$, ARS - SIZEC( B$VREBL ) );

   6824  0 000457   001016 473500                    LDP3    526,,PR0
         0 000460   200006 236100                    LDQ     ARS,,AUTO
         0 000461   000011 402007                    MPY     9,DL
         0 000462   000000 116003                    CMPQ    0,DU
         0 000463   000465 605000 0                  TPL     s:6824+6
         0 000464   000044 036003                    ADLQ    36,DU
         0 000465   377773 503506                    ABD     -5,QL,PR3
         0 000466   001017 453500                    STP3    527,,PR0

      282     6825                                                /**/
      283     6826    1        RETURN;

   6826  0 000467   000000 702200 xent               TSX2  ! X66_ARET

      284     6827                                                /**/
      285     6828    1   VREBLARET:
      286     6829    1        S_D.VREBL_PAGE = -1;

   6829  0 000470   000001 335007       VREBLARET    LCA     1,DL
         0 000471   000000 470400 xsym               LDP0    S_D$
         0 000472   001020 755100                    STA     528,,PR0
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:40   

      287     6830    1        ALTRETURN;

   6830  0 000473   000000 702200 xent               TSX2  ! X66_AALT

      288     6831        %EJECT;
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:41   
      289     6832        /*F* NAME: DDF$P_VREBL
      290     6833             PURPOSE: To get the previous entry in the program variables table.
      291     6834             DESCRIPTION: If the previous entry is within thee current page, then
      292     6835                          the given pointer is decremented by 1 entry. Else,
      293     6836                          the page that contains then previous entry is read into
      294     6837                          memory. The input pointer is then set to the last entry
      295     6838                          in the page. RETURNs when done. ALTRETURNs if the previous
      296     6839                          entry is out of limits, or if the read routine ALTRETs. */
      297     6840        /*D* NAME: DDF$P_VREBL
      298     6841             ENTRY: DDF$P_VREBL
      299     6842             CALL: CALL DDF$P_VREBL( PTR$ );
      300     6843             INTERFACE: DDQ$READLM
      301     6844             ENVIRONMENT: User Delta.
      302     6845             INPUT: PTR$ - Pointer to current entry.
      303     6846                    S_D.VREBL$ - Pointer to first entry in current page.
      304     6847                    S_D.VREBL_PAGE - Current page in memory.
      305     6848                    S_D.VREBL_END$ - Pointer to last entry in current page.
      306     6849             OUTPUT: PTR$ - Pointer to next entry.
      307     6850                     S_D.VREBL_PAGE - Current page in memory.
      308     6851                     S_D.VREBL_END$ - Pointer to last entry in current page.
      309     6852             SCRATCH: Local AUTO only.
      310     6853             DESCRIPTION: If the previous entry is within thee current page, then
      311     6854                          the given pointer is decremented by 1 entry. Else,
      312     6855                          the page that contains then previous entry is read into
      313     6856                          memory. The input pointer is then set to the last entry
      314     6857                          in the page. RETURNs when done. ALTRETURNs if the previous
      315     6858                          entry is out of limits, or if the read routine ALTRETs. */
      316     6859                                                /**/
      317     6860    1   DDF$P_VREBL: ENTRY( PTR$ ) ALTRET;

   6860  0 000474   000000 700200 xent  DDF$P_VREBL  TSX0  ! X66_AUTO_1
         0 000475   000020 000001                    ZERO    16,1

      318     6861                                                /**/
      319     6862    1        IF PTR$ > S_D.VREBL$

   6862  0 000476   000000 470400 xsym               LDP0    S_D$
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:42   
         0 000477   200003 471500                    LDP1    @PTR$,,AUTO
         0 000500   001016 236100                    LDQ     526,,PR0
         0 000501   100000 116100                    CMPQ    0,,PR1
         0 000502   000507 603000 0                  TRC     s:6868

      320     6863    2        THEN DO;

      321     6864    2             PTR$ = PINCRW( PTR$, -SIZEW( B$VREBL ) );

   6864  0 000503   100000 236100                    LDQ     0,,PR1
         0 000504   777773 036003                    ADLQ    -5,DU
         0 000505   100000 756100                    STQ     0,,PR1

      322     6865    2             RETURN;

   6865  0 000506   000000 702200 xent               TSX2  ! X66_ARET

      323     6866    2           END;
      324     6867                                                /**/
      325     6868    1        IF S_D.VREBL_PAGE = 0

   6868  0 000507   001020 235100                    LDA     528,,PR0
         0 000510   000512 601000 0                  TNZ     s:6870

      326     6869    1        THEN ALTRETURN;                    /* Ran out of entrys */

   6869  0 000511   000000 702200 xent               TSX2  ! X66_AALT

      327     6870    1        S_D.VREBL_PAGE = S_D.VREBL_PAGE - 1;

   6870  0 000512   000001 336007                    LCQ     1,DL
         0 000513   001020 056100                    ASQ     528,,PR0

      328     6871    1        ARS = 0;

   6871  0 000514   200006 450100                    STZ     ARS,,AUTO

PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:43   
      329     6872    1        BNTRYPP = S_D.LB1$ -> B$LBNTRY1.VREBLPSIZ * SIZEC( BNTRYPP );

   6872  0 000515   001036 473500                    LDP3    542,,PR0
         0 000516   300002 236100                    LDQ     2,,PR3
         0 000517   000002 736000                    QLS     2
         0 000520   000002 376000 1                  ANQ     2
         0 000521   200005 756100                    STQ     BNTRYPP,,AUTO

      330     6873    1       CALL DDQ$READLM( %TYPVREBL, S_D.VREBL_PAGE, S_D.QSCH.NODE, S_D.VREBL$, BNTRYPP,
              6873                 ARS, S_D.QSCH.NPOINTER ) ALTRET( VREBLARET );

   6873  0 000522   000000 236000 xsym               LDQ     S_D$
         0 000523   000736 036003                    ADLQ    478,DU
         0 000524   200016 756100                    STQ     ARS+8,,AUTO
         0 000525   200006 634500                    EPPR4   ARS,,AUTO
         0 000526   200015 454500                    STP4    ARS+7,,AUTO
         0 000527   200005 635500                    EPPR5   BNTRYPP,,AUTO
         0 000530   200014 455500                    STP5    ARS+6,,AUTO
         0 000531   000000 236000 xsym               LDQ     S_D$
         0 000532   001016 036003                    ADLQ    526,DU
         0 000533   200013 756100                    STQ     ARS+5,,AUTO
         0 000534   000000 236000 xsym               LDQ     S_D$
         0 000535   000735 036003                    ADLQ    477,DU
         0 000536   200012 756100                    STQ     ARS+4,,AUTO
         0 000537   000000 236000 xsym               LDQ     S_D$
         0 000540   001020 036003                    ADLQ    528,DU
         0 000541   000006 235000 1                  LDA     6
         0 000542   200010 757100                    STAQ    ARS+2,,AUTO
         0 000543   200010 630500                    EPPR0   ARS+2,,AUTO
         0 000544   000025 631400 xsym               EPPR1   B_VECTNIL+21
         0 000545   000000 701000 xent               TSX1    DDQ$READLM
         0 000546   000470 702000 0                  TSX2    VREBLARET

      331     6874    1        PTR$ = PINCRC( S_D.VREBL$, ARS - SIZEC( B$VREBL ) );

   6874  0 000547   000000 470400 xsym               LDP0    S_D$
         0 000550   001016 471500                    LDP1    526,,PR0
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:44   
         0 000551   200006 236100                    LDQ     ARS,,AUTO
         0 000552   000011 402007                    MPY     9,DL
         0 000553   000000 116003                    CMPQ    0,DU
         0 000554   000556 605000 0                  TPL     s:6874+7
         0 000555   000044 036003                    ADLQ    36,DU
         0 000556   177773 503506                    ABD     -5,QL,PR1
         0 000557   200003 473500                    LDP3    @PTR$,,AUTO
         0 000560   300000 451500                    STP1    0,,PR3

      332     6875    1        S_D.VREBL_END$ = PTR$;

   6875  0 000561   300000 236100                    LDQ     0,,PR3
         0 000562   001017 756100                    STQ     527,,PR0

      333     6876                                                /**/
      334     6877    1        RETURN;

   6877  0 000563   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   1     000   000000 000015   000000 006000   000003 777774   000000 000014    ................
   1     004   000003 006000   000000 000016   000005 006000                    ............
      335     6878                                                /**/
      336     6879    1   END DDF$N_EXST;
      337     6880        %EOD;

PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:45   
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDF$N_EXST.

   Procedure DDF$N_EXST requires 372 words for executable code.
   Procedure DDF$N_EXST requires 16 words of local(AUTO) storage.
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:46   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:47   
          MINI XREF LISTING

ARS
        57**DCL      6622<<ASSIGN   6624<>CALL     6626>>ASSIGN   6673<<ASSIGN   6675<>CALL     6676>>ASSIGN
      6721<<ASSIGN   6723<>CALL     6725>>ASSIGN   6772<<ASSIGN   6774<>CALL     6775>>ASSIGN   6820<<ASSIGN
      6822<>CALL     6824>>ASSIGN   6871<<ASSIGN   6873<>CALL     6874>>ASSIGN
B$EXST
      3544**DCL      6614--ASSIGN   6626--ASSIGN   6666--ASSIGN   6676--ASSIGN
B$EXST.OU
      3553**DCL      3559--REDEF
B$INTNTRY
      3651**DCL      6713--ASSIGN   6725--ASSIGN   6765--ASSIGN   6775--ASSIGN
B$INTNTRY.OU
      3655**DCL      3662--REDEF
B$LBNTRY1.INTRYPSIZ
      3539**DCL      6717>>ASSIGN   6773>>ASSIGN
B$LBNTRY1.INTRYSIZ
      3536**DCL      6718>>IF
B$LBNTRY1.STMNTPSIZ
      3527**DCL      6618>>ASSIGN   6674>>ASSIGN
B$LBNTRY1.STMNTSIZ
      3524**DCL      6619>>IF
B$LBNTRY1.VREBLPSIZ
      3533**DCL      6816>>ASSIGN   6872>>ASSIGN
B$LBNTRY1.VREBLSIZ
      3530**DCL      6817>>IF
B$VREBL
      3709**DCL      6812--ASSIGN   6824--ASSIGN   6864--ASSIGN   6874--ASSIGN
B$VREBL.ADR
      3710**DCL      3722--REDEF
BNTRYPP
        56**DCL      6623<<ASSIGN   6624<>CALL     6674<<ASSIGN   6674--ASSIGN   6675<>CALL     6722<<ASSIGN
      6723<>CALL     6773<<ASSIGN   6773--ASSIGN   6774<>CALL     6821<<ASSIGN   6822<>CALL     6872<<ASSIGN
      6872--ASSIGN   6873<>CALL
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:48   
DDQ$READLM
      6610**DCL-ENT  6624--CALL     6675--CALL     6723--CALL     6774--CALL     6822--CALL     6873--CALL
EXSTARET
      6631**LABEL    6624--CALLALT  6675--CALLALT
IEARET
      6730**LABEL    6723--CALLALT  6774--CALLALT
PSIZ
        55**DCL      6618<<ASSIGN   6619>>IF       6623>>ASSIGN   6623--ASSIGN   6717<<ASSIGN   6718>>IF
      6722>>ASSIGN   6722--ASSIGN   6816<<ASSIGN   6817>>IF       6821>>ASSIGN   6821--ASSIGN
PTR$
        54**DCL        52--PROC     6612>>IF       6614<<ASSIGN   6614>>ASSIGN   6625<<ASSIGN   6662--ENTRY
      6664>>IF       6666<<ASSIGN   6666>>ASSIGN   6676<<ASSIGN   6677>>ASSIGN   6709--ENTRY    6711>>IF
      6713<<ASSIGN   6713>>ASSIGN   6724<<ASSIGN   6761--ENTRY    6763>>IF       6765<<ASSIGN   6765>>ASSIGN
      6775<<ASSIGN   6776>>ASSIGN   6808--ENTRY    6810>>IF       6812<<ASSIGN   6812>>ASSIGN   6823<<ASSIGN
      6860--ENTRY    6862>>IF       6864<<ASSIGN   6864>>ASSIGN   6874<<ASSIGN   6875>>ASSIGN
S_D.CURRENT_CHANNEL
      6244**DCL      6246--REDEF
S_D.DEBUGA
      5396**DCL      5398--REDEF
S_D.EIS
      6354**DCL      6383--REDEF
S_D.EXST$
      5700**DCL      6624<>CALL     6625>>ASSIGN   6626>>ASSIGN   6664>>IF       6675<>CALL     6676>>ASSIGN
S_D.EXST_END$
      5702**DCL      6612>>IF       6626<<ASSIGN   6677<<ASSIGN
S_D.EXST_PAGE
      5704**DCL      6619>>IF       6621<<ASSIGN   6621>>ASSIGN   6624<>CALL     6631<<ASSIGN   6670>>IF
      6672<<ASSIGN   6672>>ASSIGN   6675<>CALL
S_D.HOST_MESSAGE_BUF_REMOTE
      6287**DCL      6288--REDEF    6302--REDEF
S_D.IE$
      5706**DCL      6723<>CALL     6724>>ASSIGN   6725>>ASSIGN   6763>>IF       6774<>CALL     6775>>ASSIGN
S_D.IE_END$
      5708**DCL      6711>>IF       6725<<ASSIGN   6776<<ASSIGN
S_D.IE_PAGE
      5710**DCL      6718>>IF       6720<<ASSIGN   6720>>ASSIGN   6723<>CALL     6730<<ASSIGN   6769>>IF
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:49   
      6771<<ASSIGN   6771>>ASSIGN   6774<>CALL
S_D.JDE
      5901**DCL      5902--REDEF
S_D.L$.VALUE
      5454**DCL      5460--REDEF    5468--REDEF    5471--REDEF    5474--REDEF    5477--REDEF
S_D.L$.VALUE.L
      5455**DCL      5456--REDEF    5457--REDEF
S_D.L6_MESSAGE_BUF
      6308**DCL      6310--REDEF
S_D.LB1$
      5732**DCL      6618>>ASSIGN   6619>>IF       6674>>ASSIGN   6717>>ASSIGN   6718>>IF       6773>>ASSIGN
      6816>>ASSIGN   6817>>IF       6872>>ASSIGN
S_D.OUTPUT
      6274**DCL      6276--REDEF
S_D.QSCH.NODE
      5604**DCL      6624<>CALL     6675<>CALL     6723<>CALL     6774<>CALL     6822<>CALL     6873<>CALL
S_D.QSCH.NPOINTER
      5606**DCL      6624<>CALL     6675<>CALL     6723<>CALL     6774<>CALL     6822<>CALL     6873<>CALL
S_D.REMOTE_MSG.FNCC
      6293**DCL      6294--REDEF
S_D.REMOTE_MSG.STXC
      6289**DCL      6290--REDEF
S_D.REMOTE_MSG.SUBFNCC
      6297**DCL      6298--REDEF
S_D.SV
      5353**DCL      5374--REDEF
S_D.VREBL$
      5712**DCL      6822<>CALL     6823>>ASSIGN   6824>>ASSIGN   6862>>IF       6873<>CALL     6874>>ASSIGN
S_D.VREBL_END$
      5714**DCL      6810>>IF       6824<<ASSIGN   6875<<ASSIGN
S_D.VREBL_PAGE
      5716**DCL      6817>>IF       6819<<ASSIGN   6819>>ASSIGN   6822<>CALL     6829<<ASSIGN   6868>>IF
      6870<<ASSIGN   6870>>ASSIGN   6873<>CALL
S_D$
      6605**DCL      5301--IMP-PTR  6612>>IF       6618>>ASSIGN   6619>>IF       6619>>IF       6621>>ASSIGN
      6621>>ASSIGN   6624>>CALL     6624>>CALL     6624>>CALL     6624>>CALL     6625>>ASSIGN   6626>>ASSIGN
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:50   
      6626>>ASSIGN   6631>>ASSIGN   6664>>IF       6670>>IF       6672>>ASSIGN   6672>>ASSIGN   6674>>ASSIGN
      6675>>CALL     6675>>CALL     6675>>CALL     6675>>CALL     6676>>ASSIGN   6677>>ASSIGN   6711>>IF
      6717>>ASSIGN   6718>>IF       6718>>IF       6720>>ASSIGN   6720>>ASSIGN   6723>>CALL     6723>>CALL
      6723>>CALL     6723>>CALL     6724>>ASSIGN   6725>>ASSIGN   6725>>ASSIGN   6730>>ASSIGN   6763>>IF
      6769>>IF       6771>>ASSIGN   6771>>ASSIGN   6773>>ASSIGN   6774>>CALL     6774>>CALL     6774>>CALL
      6774>>CALL     6775>>ASSIGN   6776>>ASSIGN   6810>>IF       6816>>ASSIGN   6817>>IF       6817>>IF
      6819>>ASSIGN   6819>>ASSIGN   6822>>CALL     6822>>CALL     6822>>CALL     6822>>CALL     6823>>ASSIGN
      6824>>ASSIGN   6824>>ASSIGN   6829>>ASSIGN   6862>>IF       6868>>IF       6870>>ASSIGN   6870>>ASSIGN
      6872>>ASSIGN   6873>>CALL     6873>>CALL     6873>>CALL     6873>>CALL     6874>>ASSIGN   6875>>ASSIGN
VREBLARET
      6829**LABEL    6822--CALLALT  6873--CALLALT
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:51   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDF$N_EXST File=DUF$NPNUM.:E05TSI                             TUE 07/29/97 14:52 Page:52   
              MINI UREF LISTING

DDF$N_EXST      52**PROC
DDF$N_IE    6709**ENTRY
DDF$N_VREBL    6808**ENTRY
DDF$P_EXST    6662**ENTRY
DDF$P_IE    6761**ENTRY
DDF$P_VREBL    6860**ENTRY

PL6.E3A0      #002=DDF$DBG_# File=DUF$NPNUM.:E05TSI                              TUE 07/29/97 14:52 Page:53   
      338        1        /*T***********************************************************/
      339        2        /*T*                                                         */
      340        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      341        4        /*T*                                                         */
      342        5        /*T***********************************************************/
      343        6        /*F* NAME: DDF$DBG_#
      344        7             PURPOSE: To get the requested entry in the debug names table into memory.
      345        8             DESCRIPTION: If the requested entry is already in memory then a pointer
      346        9                          to its location is computed. Otherwise, the page containing
      347       10                          the requested entry is read into memory (into the page
      348       11                          size buffer). RETURNs when done. ALTRETURNs if the requested
      349       12                          entry is out of limits, or if the read routine ALTRETs. */
      350       13        /*D* NAME: DDF$DBG_#
      351       14             ENTRY: DDF$DBG_#
      352       15             INTERFACE: DDQ$READLM
      353       16                        DDE$ERROR
      354       17             ENVIRONMENT: User Delta.
      355       18             INPUT: NTRY# - Desired entry number.
      356       19                    S_D.DBG$ - Pointer to page buffer.
      357       20                    S_D.DBG_PAGE - Current page in memory.
      358       21                    S_D.DBG_LAST - Offset to last word in current page.
      359       22             OUTPUT: PTR$ - Pointer to desired entry.
      360       23                     S_D.DBG_PAGE - Current page in memory.
      361       24                     S_D.DBG_LAST - Offset to last word in current page.
      362       25             SCRATCH: Local AUTO only.
      363       26             DESCRIPTION: If the requested entry is already in memory then a pointer
      364       27                          to its location is computed. Otherwise, the page containing
      365       28                          the requested entry is read into memory (into the page
      366       29                          size buffer). RETURNs when done. ALTRETURNs if the requested
      367       30                          entry is out of limits, or if the read routine ALTRETs. */
      368       31                                                /**/
      369       32        DDF$DBG_#: PROC( NTRY#, PTR$ ) ALTRET;
      370       33                                                /**/
      371       34    1   DCL NTRY# SBIN;
      372       35    1   DCL PTR$ PTR;
      373       36    1   DCL PSIZ SBIN;
      374       37    1   DCL PAGE UBIN;
PL6.E3A0      #002=DDF$DBG_# File=DUF$NPNUM.:E05TSI                              TUE 07/29/97 14:52 Page:54   
      375       38    1   DCL NTRYPP SBIN;
      376       39    1   DCL REM UBIN;
      377       40    1   DCL REM$ PTR;
      378       41    1   DCL ARS SBIN;
      379       42        %INCLUDE B$OBJECT_C;
      380     3472        %B$RECORDSUBS;
      381     3500        %B$LBNTRY1;
      382     3527        %B$EXST;
      383     3634        %B$INTNTRY;
      384     3692        %B$VREBL;
      385     3856        %INCLUDE XUH_MACRO_C;
      386     3940        %INCLUDE DD_SD_M;
      387     5276        %S_D;
      388     6594        %INCLUDE DD_ERR_C;
      389     6991    1   DCL DDE$ERROR ENTRY(0);
      390     6992    1   DCL DDQ$READLM ENTRY(7) ALTRET;
      391     6993                                                /**/
      392     6994    1        IF NTRY# >= S_D.LB1$ -> B$LBNTRY1.NAMESIZ
      393     6995    1        THEN ALTRETURN;
      394     6996    1        PSIZ = S_D.LB1$ -> B$LBNTRY1.NAMPSIZ;
      395     6997    1        PAGE = NTRY# / PSIZ;
      396     6998    1        IF PAGE = S_D.DBG_PAGE
      397     6999    1        THEN
      398     7000    2   IN_DPAGE: DO;
      399     7001    2             REM = MOD( NTRY#, PSIZ);
      400     7002    2             IF REM <= S_D.DBG_LAST
      401     7003    3             THEN DO;
      402     7004    3                  PTR$ = PINCRW( S_D.DBG$, REM );
      403     7005    3                  RETURN;
      404     7006    3                END;
      405     7007    3             ELSE DO;
      406     7008    3                  S_D.ERROR = E@UERR11;    /* E@UERR11 */
      407     7009    3                  CALL DDE$ERROR;
      408     7010    3                  ALTRETURN;
      409     7011    3                END;
      410     7012    2           END;
      411     7013    1        ARS = 0;
PL6.E3A0      #002=DDF$DBG_# File=DUF$NPNUM.:E05TSI                              TUE 07/29/97 14:52 Page:55   
      412     7014    1        S_D.DBG_PAGE = PAGE;
      413     7015    1        CALL DDQ$READLM( %TYPDBGNAM, S_D.DBG_PAGE, S_D.QSCH.NODE, S_D.DBG$, PSIZ * 4,
              7015                 ARS, S_D.QSCH.NPOINTER ) ALTRET( DBGARET );
      414     7016    1        S_D.DBG_LAST = ( ARS - 1 ) / 4;
      415     7017    1        GOTO IN_DPAGE;
      416     7018                                                /**/
      417     7019    1   DBGARET:
      418     7020    1        S_D.DBG_PAGE = -1;
      419     7021    1        ALTRETURN;
      420     7022        %EJECT;
PL6.E3A0      #002=DDF$DBG_# File=DUF$NPNUM.:E05TSI                              TUE 07/29/97 14:52 Page:56   
      421     7023        /*F* NAME: DDF$EXST_#
      422     7024         PURPOSE: To get the requested entry in the executable statements table into memory.
      423     7025             DESCRIPTION: If the requested entry is already in memory then a pointer
      424     7026                          to its location is computed. Otherwise, the page containing
      425     7027                          the requested entry is read into memory (into the page
      426     7028                          size buffer). RETURNs when done. ALTRETURNs if the requested
      427     7029                          entry is out of limits, or if the read routine ALTRETs. */
      428     7030        /*D* NAME: DDF$EXST_#
      429     7031             ENTRY: DDF$EXST_#
      430     7032             INTERFACE: DDQ$READLM
      431     7033                        DDE$ERROR
      432     7034             ENVIRONMENT: User Delta.
      433     7035             INPUT: NTRY# - Desired entry number.
      434     7036                    S_D.EXST$ - Pointer to page buffer.
      435     7037                    S_D.EXST_PAGE - Current page in memory.
      436     7038                    S_D.EXST_END$ - Pointer to last entry in current page.
      437     7039             OUTPUT: PTR$ - Pointer to desired entry.
      438     7040                     S_D.EXST_PAGE - Current page in memory.
      439     7041                     S_D.EXST_END$ - Pointer to last entry in current page.
      440     7042             SCRATCH: Local AUTO only.
      441     7043             DESCRIPTION: If the requested entry is already in memory then a pointer
      442     7044                          to its location is computed. Otherwise, the page containing
      443     7045                          the requested entry is read into memory (into the page
      444     7046                          size buffer). RETURNs when done. ALTRETURNs if the requested
      445     7047                          entry is out of limits, or if the read routine ALTRETs. */
      446     7048                                                /**/
      447     7049    1   DDF$EXST_#: ENTRY( NTRY#, PTR$ ) ALTRET;
      448     7050                                                /**/
      449     7051    1        IF NTRY# >= S_D.LB1$ -> B$LBNTRY1.STMNTSIZ
      450     7052    1        THEN ALTRETURN;
      451     7053    1        PSIZ = S_D.LB1$ -> B$LBNTRY1.STMNTPSIZ;
      452     7054    1        NTRYPP = PSIZ / SIZEW( B$EXST );
      453     7055    1        PAGE = NTRY# / NTRYPP;
      454     7056    1        IF PAGE = S_D.EXST_PAGE
      455     7057    1        THEN
      456     7058    2   IN_EPAGE: DO;
      457     7059    2             REM$ = PINCRW( S_D.EXST$, MOD( NTRY#, NTRYPP ) * SIZEW( B$EXST ) );
PL6.E3A0      #002=DDF$DBG_# File=DUF$NPNUM.:E05TSI                              TUE 07/29/97 14:52 Page:57   
      458     7060    2             IF REM$ <= S_D.EXST_END$
      459     7061    3             THEN DO;
      460     7062    3                  PTR$ = REM$;
      461     7063    3                  RETURN;
      462     7064    3                END;
      463     7065    3             ELSE DO;
      464     7066    3                  ALTRETURN;
      465     7067    3                END;
      466     7068    2           END;
      467     7069    1        ARS = 0;
      468     7070    1        S_D.EXST_PAGE = PAGE;
      469     7071    1        CALL DDQ$READLM( %TYPEXST, S_D.EXST_PAGE, S_D.QSCH.NODE, S_D.EXST$, PSIZ * 4,
              7071                 ARS, S_D.QSCH.NPOINTER ) ALTRET( EXSTARET );
      470     7072    1        S_D.EXST_END$ = PINCRC( S_D.EXST$, ARS - SIZEC( B$EXST ) );
      471     7073    1        GOTO IN_EPAGE;
      472     7074                                                /**/
      473     7075    1   EXSTARET:
      474     7076    1        S_D.EXST_PAGE = -1;
      475     7077    1        ALTRETURN;
      476     7078        %EJECT;
PL6.E3A0      #002=DDF$DBG_# File=DUF$NPNUM.:E05TSI                              TUE 07/29/97 14:52 Page:58   
      477     7079        /*F* NAME: DDF$IE_#
      478     7080             PURPOSE: To get the requested entry in the internal entrys table into memory.
      479     7081             DESCRIPTION: If the requested entry is already in memory then a pointer
      480     7082                          to its location is computed. Otherwise, the page containing
      481     7083                          the requested entry is read into memory (into the page
      482     7084                          size buffer). RETURNs when done. ALTRETURNs if the requested
      483     7085                          entry is out of limits, or if the read routine ALTRETs. */
      484     7086        /*D* NAME: DDF$IE_#
      485     7087             ENTRY: DDF$IE_#
      486     7088             INTERFACE: DDQ$READLM
      487     7089                        DDE$ERROR
      488     7090             ENVIRONMENT: User Delta.
      489     7091             INPUT: NTRY# - Desired entry number.
      490     7092                    S_D.IE$ - Pointer to page buffer.
      491     7093                    S_D.IE_PAGE - Current page in memory.
      492     7094                    S_D.IE_END$ - Pointer to last entry in current page.
      493     7095             OUTPUT: PTR$ - Pointer to desired entry.
      494     7096                     S_D.IE_PAGE - Current page in memory.
      495     7097                     S_D.IE_END$ - Pointer to last entry in current page.
      496     7098             SCRATCH: Local AUTO only.
      497     7099             DESCRIPTION: If the requested entry is already in memory then a pointer
      498     7100                          to its location is computed. Otherwise, the page containing
      499     7101                          the requested entry is read into memory (into the page
      500     7102                          size buffer). RETURNs when done. ALTRETURNs if the requested
      501     7103                          entry is out of limits, or if the read routine ALTRETs. */
      502     7104                                                /**/
      503     7105    1   DDF$IE_#: ENTRY( NTRY#, PTR$ ) ALTRET;
      504     7106                                                /**/
      505     7107    1        IF NTRY# >= S_D.LB1$ -> B$LBNTRY1.INTRYSIZ
      506     7108    1        THEN ALTRETURN;
      507     7109    1        PSIZ = S_D.LB1$ -> B$LBNTRY1.INTRYPSIZ;
      508     7110    1        NTRYPP = PSIZ / SIZEW( B$INTNTRY );
      509     7111    1        PAGE = NTRY# / NTRYPP;
      510     7112    1        IF PAGE = S_D.IE_PAGE
      511     7113    1        THEN
      512     7114    2   IN_IPAGE: DO;
      513     7115    2             REM$ = PINCRW( S_D.IE$, MOD( NTRY#, NTRYPP ) * SIZEW( B$INTNTRY ) );
PL6.E3A0      #002=DDF$DBG_# File=DUF$NPNUM.:E05TSI                              TUE 07/29/97 14:52 Page:59   
      514     7116    2             IF REM$ <= S_D.IE_END$
      515     7117    3             THEN DO;
      516     7118    3                  PTR$ = REM$;
      517     7119    3                  RETURN;
      518     7120    3                END;
      519     7121    3             ELSE DO;
      520     7122    3                  ALTRETURN;
      521     7123    3                END;
      522     7124    2           END;
      523     7125    1        ARS = 0;
      524     7126    1        S_D.IE_PAGE = PAGE;
      525     7127    1        CALL DDQ$READLM( %TYPINTNTRY, S_D.IE_PAGE, S_D.QSCH.NODE, S_D.IE$, PSIZ * 4,
              7127                 ARS, S_D.QSCH.NPOINTER ) ALTRET( IEARET );
      526     7128    1        S_D.IE_END$ = PINCRC( S_D.IE$, ARS - SIZEC( B$INTNTRY ) );
      527     7129    1        GOTO IN_IPAGE;
      528     7130                                                /**/
      529     7131    1   IEARET:
      530     7132    1        S_D.IE_PAGE = -1;
      531     7133    1        ALTRETURN;
      532     7134        %EJECT;
PL6.E3A0      #002=DDF$DBG_# File=DUF$NPNUM.:E05TSI                              TUE 07/29/97 14:52 Page:60   
      533     7135        /*F* NAME: DDF$VREBL_#
      534     7136             PURPOSE: To get the requested entry in the program variables table into memory.
      535     7137             DESCRIPTION: If the requested entry is already in memory then a pointer
      536     7138                          to its location is computed. Otherwise, the page containing
      537     7139                          the requested entry is read into memory (into the page
      538     7140                          size buffer). RETURNs when done. ALTRETURNs if the requested
      539     7141                          entry is out of limits, or if the read routine ALTRETs. */
      540     7142        /*D* NAME: DDF$VREBL_#
      541     7143             ENTRY: DDF$VREBL_#
      542     7144             INTERFACE: DDQ$READLM
      543     7145                        DDE$ERROR
      544     7146             ENVIRONMENT: User Delta.
      545     7147             INPUT: NTRY# - Desired entry number.
      546     7148                    S_D.VREBL$ - Pointer to page buffer.
      547     7149                    S_D.VREBL_PAGE - Current page in memory.
      548     7150                    S_D.VREBL_END$ - Pointer to last entry in current page.
      549     7151             OUTPUT: PTR$ - Pointer to desired entry.
      550     7152                     S_D.VREBL_PAGE - Current page in memory.
      551     7153                     S_D.VREBL_END$ - Pointer to last entry in current page.
      552     7154             SCRATCH: Local AUTO only.
      553     7155             DESCRIPTION: If the requested entry is already in memory then a pointer
      554     7156                          to its location is computed. Otherwise, the page containing
      555     7157                          the requested entry is read into memory (into the page
      556     7158                          size buffer). RETURNs when done. ALTRETURNs if the requested
      557     7159                          entry is out of limits, or if the read routine ALTRETs. */
      558     7160                                                /**/
      559     7161    1   DDF$VREBL_#: ENTRY( NTRY#, PTR$ ) ALTRET;
      560     7162                                                /**/
      561     7163    1        IF NTRY# >= S_D.LB1$ -> B$LBNTRY1.VREBLSIZ
      562     7164    1        THEN ALTRETURN;
      563     7165    1        PSIZ = S_D.LB1$ -> B$LBNTRY1.VREBLPSIZ;
      564     7166    1        NTRYPP = PSIZ / SIZEW( B$VREBL );
      565     7167    1        PAGE = NTRY# / NTRYPP;
      566     7168    1        IF PAGE = S_D.VREBL_PAGE
      567     7169    1        THEN
      568     7170    2   IN_VPAGE: DO;
      569     7171    2             REM$ = PINCRW( S_D.VREBL$, MOD( NTRY#, NTRYPP ) * SIZEW( B$VREBL ) );
PL6.E3A0      #002=DDF$DBG_# File=DUF$NPNUM.:E05TSI                              TUE 07/29/97 14:52 Page:61   
      570     7172    2             IF REM$ <= S_D.VREBL_END$
      571     7173    3             THEN DO;
      572     7174    3                  PTR$ = REM$;
      573     7175    3                  RETURN;
      574     7176    3                END;
      575     7177    3             ELSE DO;
      576     7178    3                  ALTRETURN;
      577     7179    3                END;
      578     7180    2           END;
      579     7181    1        ARS = 0;
      580     7182    1        S_D.VREBL_PAGE = PAGE;
      581     7183    1        CALL DDQ$READLM( %TYPVREBL, S_D.VREBL_PAGE, S_D.QSCH.NODE, S_D.VREBL$, PSIZ * 4
              7183                 , ARS, S_D.QSCH.NPOINTER ) ALTRET( VREBLARET );
      582     7184    1        S_D.VREBL_END$ = PINCRC( S_D.VREBL$, ARS - SIZEC( B$VREBL ) );
      583     7185    1        GOTO IN_VPAGE;
      584     7186                                                /**/
      585     7187    1   VREBLARET:
      586     7188    1        S_D.VREBL_PAGE = -1;
      587     7189    1        ALTRETURN;
      588     7190                                                /**/
      589     7191    1   END DDF$DBG_#;

PL6.E3A0      #002=DDF$DBG_# File=DUF$NPNUM.:E05TSI                              TUE 07/29/97 14:52 Page:62   
--  Include file information  --

   DD_ERR_C.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDF$DBG_#.

   Procedure DDF$DBG_# requires 315 words for executable code.
   Procedure DDF$DBG_# requires 20 words of local(AUTO) storage.

    No errors detected in file DUF$NPNUM.:E05TSI    .

PL6.E3A0      #002=DDF$DBG_# File=DUF$NPNUM.:E05TSI                              TUE 07/29/97 14:52 Page:63   

 Object Unit name= DDF$DBG_#                                  File name= DUF$NPNUM.:E05TOU
 UTS= JUL 29 '97 14:52:24.72 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   315    473  DDF$DBG_#
    1  RoData even  none     8     10  DDF$DBG_#

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        2  DDF$DBG_#
     0    114          yes     yes      Std        2  DDF$EXST_#
     0    234          yes     yes      Std        2  DDF$IE_#
     0    353          yes     yes      Std        2  DDF$VREBL_#

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 DDE$ERROR
 yes     yes           Std       7 DDQ$READLM
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
PL6.E3A0      #002=DDF$DBG_# File=DUF$NPNUM.:E05TSI                              TUE 07/29/97 14:52 Page:64   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    S_D$                                  B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #002=DDF$DBG_# File=DUF$NPNUM.:E05TSI                              TUE 07/29/97 14:52 Page:65   


      338        1        /*T***********************************************************/
      339        2        /*T*                                                         */
      340        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      341        4        /*T*                                                         */
      342        5        /*T***********************************************************/
      343        6        /*F* NAME: DDF$DBG_#
      344        7             PURPOSE: To get the requested entry in the debug names table into memory.
      345        8             DESCRIPTION: If the requested entry is already in memory then a pointer
      346        9                          to its location is computed. Otherwise, the page containing
      347       10                          the requested entry is read into memory (into the page
      348       11                          size buffer). RETURNs when done. ALTRETURNs if the requested
      349       12                          entry is out of limits, or if the read routine ALTRETs. */
      350       13        /*D* NAME: DDF$DBG_#
      351       14             ENTRY: DDF$DBG_#
      352       15             INTERFACE: DDQ$READLM
      353       16                        DDE$ERROR
      354       17             ENVIRONMENT: User Delta.
      355       18             INPUT: NTRY# - Desired entry number.
      356       19                    S_D.DBG$ - Pointer to page buffer.
      357       20                    S_D.DBG_PAGE - Current page in memory.
      358       21                    S_D.DBG_LAST - Offset to last word in current page.
      359       22             OUTPUT: PTR$ - Pointer to desired entry.
      360       23                     S_D.DBG_PAGE - Current page in memory.
      361       24                     S_D.DBG_LAST - Offset to last word in current page.
      362       25             SCRATCH: Local AUTO only.
      363       26             DESCRIPTION: If the requested entry is already in memory then a pointer
      364       27                          to its location is computed. Otherwise, the page containing
      365       28                          the requested entry is read into memory (into the page
      366       29                          size buffer). RETURNs when done. ALTRETURNs if the requested
      367       30                          entry is out of limits, or if the read routine ALTRETs. */
      368       31                                                /**/
      369       32        DDF$DBG_#: PROC( NTRY#, PTR$ ) ALTRET;

     32  0 000000   000000 700200 xent  DDF$DBG_#    TSX0  ! X66_AUTO_2
         0 000001   000024 000002                    ZERO    20,2

PL6.E3A0      #002=DDF$DBG_# File=DUF$NPNUM.:E05TSI                              TUE 07/29/97 14:52 Page:66   
      370       33                                                /**/
      371       34    1   DCL NTRY# SBIN;
      372       35    1   DCL PTR$ PTR;
      373       36    1   DCL PSIZ SBIN;
      374       37    1   DCL PAGE UBIN;
      375       38    1   DCL NTRYPP SBIN;
      376       39    1   DCL REM UBIN;
      377       40    1   DCL REM$ PTR;
      378       41    1   DCL ARS SBIN;
      379       42        %INCLUDE B$OBJECT_C;
      380     3472        %B$RECORDSUBS;
      381     3500        %B$LBNTRY1;
      382     3527        %B$EXST;
      383     3634        %B$INTNTRY;
      384     3692        %B$VREBL;
      385     3856        %INCLUDE XUH_MACRO_C;
      386     3940        %INCLUDE DD_SD_M;
      387     5276        %S_D;
      388     6594        %INCLUDE DD_ERR_C;
      389     6991    1   DCL DDE$ERROR ENTRY(0);
      390     6992    1   DCL DDQ$READLM ENTRY(7) ALTRET;
      391     6993                                                /**/
      392     6994    1        IF NTRY# >= S_D.LB1$ -> B$LBNTRY1.NAMESIZ

   6994  0 000002   000000 470400 xsym               LDP0    S_D$
         0 000003   001036 471500                    LDP1    542,,PR0
         0 000004   200003 473500                    LDP3    @NTRY#,,AUTO
         0 000005   100000 236100                    LDQ     0,,PR1
         0 000006   000022 772000                    QRL     18
         0 000007   300000 116100                    CMPQ    0,,PR3
         0 000010   000012 605400 0                  TPNZ    s:6996

      393     6995    1        THEN ALTRETURN;

   6995  0 000011   000000 702200 xent               TSX2  ! X66_AALT

      394     6996    1        PSIZ = S_D.LB1$ -> B$LBNTRY1.NAMPSIZ;
PL6.E3A0      #002=DDF$DBG_# File=DUF$NPNUM.:E05TSI                              TUE 07/29/97 14:52 Page:67   

   6996  0 000012   100000 236100                    LDQ     0,,PR1
         0 000013   777777 376007                    ANQ     -1,DL
         0 000014   200005 756100                    STQ     PSIZ,,AUTO

      395     6997    1        PAGE = NTRY# / PSIZ;

   6997  0 000015   300000 236100                    LDQ     0,,PR3
         0 000016   200005 506100                    DIV     PSIZ,,AUTO
         0 000017   200006 756100                    STQ     PAGE,,AUTO

      396     6998    1        IF PAGE = S_D.DBG_PAGE

   6998  0 000020   000000 116003                    CMPQ    0,DU
         0 000021   000047 604000 0                  TMI     s:7013
         0 000022   001007 116100                    CMPQ    519,,PR0
         0 000023   000047 601000 0                  TNZ     s:7013

      397     6999    1        THEN
      398     7000    2   IN_DPAGE: DO;

   7000  0 000024                       IN_DPAGE     null
      399     7001    2             REM = MOD( NTRY#, PSIZ);

   7001  0 000024   200003 470500                    LDP0    @NTRY#,,AUTO
         0 000025   000000 236100                    LDQ     0,,PR0
         0 000026   200005 506100                    DIV     PSIZ,,AUTO
         0 000027   200010 755100                    STA     REM,,AUTO

      400     7002    2             IF REM <= S_D.DBG_LAST

   7002  0 000030   000000 471400 xsym               LDP1    S_D$
         0 000031   101006 236100                    LDQ     518,,PR1
         0 000032   200010 116100                    CMPQ    REM,,AUTO
         0 000033   000041 602000 0                  TNC     s:7008

      401     7003    3             THEN DO;
PL6.E3A0      #002=DDF$DBG_# File=DUF$NPNUM.:E05TSI                              TUE 07/29/97 14:52 Page:68   

      402     7004    3                  PTR$ = PINCRW( S_D.DBG$, REM );

   7004  0 000034   101005 473500                    LDP3    517,,PR1
         0 000035   300000 634505                    EPPR4   0,AL,PR3
         0 000036   200004 475500                    LDP5    @PTR$,,AUTO
         0 000037   500000 454500                    STP4    0,,PR5

      403     7005    3                  RETURN;

   7005  0 000040   000000 702200 xent               TSX2  ! X66_ARET

      404     7006    3                END;
      405     7007    3             ELSE DO;

      406     7008    3                  S_D.ERROR = E@UERR11;    /* E@UERR11 */

   7008  0 000041   000026 235007                    LDA     22,DL
         0 000042   100013 755100                    STA     11,,PR1

      407     7009    3                  CALL DDE$ERROR;

   7009  0 000043   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000044   000000 701000 xent               TSX1    DDE$ERROR
         0 000045   000000 011000                    NOP     0

      408     7010    3                  ALTRETURN;

   7010  0 000046   000000 702200 xent               TSX2  ! X66_AALT

      409     7011    3                END;
      410     7012    2           END;
      411     7013    1        ARS = 0;

   7013  0 000047   200012 450100                    STZ     ARS,,AUTO

      412     7014    1        S_D.DBG_PAGE = PAGE;
PL6.E3A0      #002=DDF$DBG_# File=DUF$NPNUM.:E05TSI                              TUE 07/29/97 14:52 Page:69   

   7014  0 000050   001007 756100                    STQ     519,,PR0

      413     7015    1        CALL DDQ$READLM( %TYPDBGNAM, S_D.DBG_PAGE, S_D.QSCH.NODE, S_D.DBG$, PSIZ * 4,
              7015                 ARS, S_D.QSCH.NPOINTER ) ALTRET( DBGARET );

   7015  0 000051   200005 235100                    LDA     PSIZ,,AUTO
         0 000052   000002 735000                    ALS     2
         0 000053   200014 755100                    STA     ARS+2,,AUTO
         0 000054   000000 236000 xsym               LDQ     S_D$
         0 000055   000736 036003                    ADLQ    478,DU
         0 000056   200023 756100                    STQ     ARS+9,,AUTO
         0 000057   200012 634500                    EPPR4   ARS,,AUTO
         0 000060   200022 454500                    STP4    ARS+8,,AUTO
         0 000061   200014 635500                    EPPR5   ARS+2,,AUTO
         0 000062   200021 455500                    STP5    ARS+7,,AUTO
         0 000063   000000 236000 xsym               LDQ     S_D$
         0 000064   001005 036003                    ADLQ    517,DU
         0 000065   200020 756100                    STQ     ARS+6,,AUTO
         0 000066   000000 236000 xsym               LDQ     S_D$
         0 000067   000735 036003                    ADLQ    477,DU
         0 000070   200017 756100                    STQ     ARS+5,,AUTO
         0 000071   000000 236000 xsym               LDQ     S_D$
         0 000072   001007 036003                    ADLQ    519,DU
         0 000073   200016 756100                    STQ     ARS+4,,AUTO
         0 000074   000001 236000 1                  LDQ     1
         0 000075   200015 756100                    STQ     ARS+3,,AUTO
         0 000076   200015 630500                    EPPR0   ARS+3,,AUTO
         0 000077   000025 631400 xsym               EPPR1   B_VECTNIL+21
         0 000100   000000 701000 xent               TSX1    DDQ$READLM
         0 000101   000110 702000 0                  TSX2    DBGARET

      414     7016    1        S_D.DBG_LAST = ( ARS - 1 ) / 4;

   7016  0 000102   200012 236100                    LDQ     ARS,,AUTO
         0 000103   000001 136007                    SBLQ    1,DL
         0 000104   000004 506007                    DIV     4,DL
PL6.E3A0      #002=DDF$DBG_# File=DUF$NPNUM.:E05TSI                              TUE 07/29/97 14:52 Page:70   
         0 000105   000000 470400 xsym               LDP0    S_D$
         0 000106   001006 756100                    STQ     518,,PR0

      415     7017    1        GOTO IN_DPAGE;

   7017  0 000107   000024 710000 0                  TRA     IN_DPAGE

      416     7018                                                /**/
      417     7019    1   DBGARET:
      418     7020    1        S_D.DBG_PAGE = -1;

   7020  0 000110   000001 335007       DBGARET      LCA     1,DL
         0 000111   000000 470400 xsym               LDP0    S_D$
         0 000112   001007 755100                    STA     519,,PR0

      419     7021    1        ALTRETURN;

   7021  0 000113   000000 702200 xent               TSX2  ! X66_AALT

      420     7022        %EJECT;
PL6.E3A0      #002=DDF$DBG_# File=DUF$NPNUM.:E05TSI                              TUE 07/29/97 14:52 Page:71   
      421     7023        /*F* NAME: DDF$EXST_#
      422     7024        PURPOSE: To get the requested entry in the executable statements table into memory.
      423     7025             DESCRIPTION: If the requested entry is already in memory then a pointer
      424     7026                          to its location is computed. Otherwise, the page containing
      425     7027                          the requested entry is read into memory (into the page
      426     7028                          size buffer). RETURNs when done. ALTRETURNs if the requested
      427     7029                          entry is out of limits, or if the read routine ALTRETs. */
      428     7030        /*D* NAME: DDF$EXST_#
      429     7031             ENTRY: DDF$EXST_#
      430     7032             INTERFACE: DDQ$READLM
      431     7033                        DDE$ERROR
      432     7034             ENVIRONMENT: User Delta.
      433     7035             INPUT: NTRY# - Desired entry number.
      434     7036                    S_D.EXST$ - Pointer to page buffer.
      435     7037                    S_D.EXST_PAGE - Current page in memory.
      436     7038                    S_D.EXST_END$ - Pointer to last entry in current page.
      437     7039             OUTPUT: PTR$ - Pointer to desired entry.
      438     7040                     S_D.EXST_PAGE - Current page in memory.
      439     7041                     S_D.EXST_END$ - Pointer to last entry in current page.
      440     7042             SCRATCH: Local AUTO only.
      441     7043             DESCRIPTION: If the requested entry is already in memory then a pointer
      442     7044                          to its location is computed. Otherwise, the page containing
      443     7045                          the requested entry is read into memory (into the page
      444     7046                          size buffer). RETURNs when done. ALTRETURNs if the requested
      445     7047                          entry is out of limits, or if the read routine ALTRETs. */
      446     7048                                                /**/
      447     7049    1   DDF$EXST_#: ENTRY( NTRY#, PTR$ ) ALTRET;

   7049  0 000114   000000 700200 xent  DDF$EXST_#   TSX0  ! X66_AUTO_2
         0 000115   000024 000002                    ZERO    20,2

      448     7050                                                /**/
      449     7051    1        IF NTRY# >= S_D.LB1$ -> B$LBNTRY1.STMNTSIZ

   7051  0 000116   000000 470400 xsym               LDP0    S_D$
         0 000117   001036 471500                    LDP1    542,,PR0
         0 000120   200003 473500                    LDP3    @NTRY#,,AUTO
PL6.E3A0      #002=DDF$DBG_# File=DUF$NPNUM.:E05TSI                              TUE 07/29/97 14:52 Page:72   
         0 000121   100001 236100                    LDQ     1,,PR1
         0 000122   000022 772000                    QRL     18
         0 000123   300000 116100                    CMPQ    0,,PR3
         0 000124   000126 605400 0                  TPNZ    s:7053

      450     7052    1        THEN ALTRETURN;

   7052  0 000125   000000 702200 xent               TSX2  ! X66_AALT

      451     7053    1        PSIZ = S_D.LB1$ -> B$LBNTRY1.STMNTPSIZ;

   7053  0 000126   100001 236100                    LDQ     1,,PR1
         0 000127   777777 376007                    ANQ     -1,DL
         0 000130   200005 756100                    STQ     PSIZ,,AUTO

      452     7054    1        NTRYPP = PSIZ / SIZEW( B$EXST );

   7054  0 000131   000003 506007                    DIV     3,DL
         0 000132   200007 756100                    STQ     NTRYPP,,AUTO

      453     7055    1        PAGE = NTRY# / NTRYPP;

   7055  0 000133   300000 236100                    LDQ     0,,PR3
         0 000134   200007 506100                    DIV     NTRYPP,,AUTO
         0 000135   200006 756100                    STQ     PAGE,,AUTO

      454     7056    1        IF PAGE = S_D.EXST_PAGE

   7056  0 000136   000000 116003                    CMPQ    0,DU
         0 000137   000163 604000 0                  TMI     s:7069
         0 000140   001012 116100                    CMPQ    522,,PR0
         0 000141   000163 601000 0                  TNZ     s:7069

      455     7057    1        THEN
      456     7058    2   IN_EPAGE: DO;

   7058  0 000142                       IN_EPAGE     null
PL6.E3A0      #002=DDF$DBG_# File=DUF$NPNUM.:E05TSI                              TUE 07/29/97 14:52 Page:73   
      457     7059    2             REM$ = PINCRW( S_D.EXST$, MOD( NTRY#, NTRYPP ) * SIZEW( B$EXST ) );

   7059  0 000142   200003 470500                    LDP0    @NTRY#,,AUTO
         0 000143   000000 236100                    LDQ     0,,PR0
         0 000144   200007 506100                    DIV     NTRYPP,,AUTO
         0 000145   000000 471400 xsym               LDP1    S_D$
         0 000146   101010 473500                    LDP3    520,,PR1
         0 000147   000044 733000                    LRS     36
         0 000150   000003 402007                    MPY     3,DL
         0 000151   300000 634506                    EPPR4   0,QL,PR3
         0 000152   200011 454500                    STP4    REM$,,AUTO

      458     7060    2             IF REM$ <= S_D.EXST_END$

   7060  0 000153   101011 236100                    LDQ     521,,PR1
         0 000154   200011 116100                    CMPQ    REM$,,AUTO
         0 000155   000162 602000 0                  TNC     s:7066

      459     7061    3             THEN DO;

      460     7062    3                  PTR$ = REM$;

   7062  0 000156   200011 236100                    LDQ     REM$,,AUTO
         0 000157   200004 475500                    LDP5    @PTR$,,AUTO
         0 000160   500000 756100                    STQ     0,,PR5

      461     7063    3                  RETURN;

   7063  0 000161   000000 702200 xent               TSX2  ! X66_ARET

      462     7064    3                END;
      463     7065    3             ELSE DO;

      464     7066    3                  ALTRETURN;

   7066  0 000162   000000 702200 xent               TSX2  ! X66_AALT

PL6.E3A0      #002=DDF$DBG_# File=DUF$NPNUM.:E05TSI                              TUE 07/29/97 14:52 Page:74   
      465     7067    3                END;
      466     7068    2           END;
      467     7069    1        ARS = 0;

   7069  0 000163   200012 450100                    STZ     ARS,,AUTO

      468     7070    1        S_D.EXST_PAGE = PAGE;

   7070  0 000164   001012 756100                    STQ     522,,PR0

      469     7071    1        CALL DDQ$READLM( %TYPEXST, S_D.EXST_PAGE, S_D.QSCH.NODE, S_D.EXST$, PSIZ * 4,
              7071                 ARS, S_D.QSCH.NPOINTER ) ALTRET( EXSTARET );

   7071  0 000165   200005 235100                    LDA     PSIZ,,AUTO
         0 000166   000002 735000                    ALS     2
         0 000167   200014 755100                    STA     ARS+2,,AUTO
         0 000170   000000 236000 xsym               LDQ     S_D$
         0 000171   000736 036003                    ADLQ    478,DU
         0 000172   200023 756100                    STQ     ARS+9,,AUTO
         0 000173   200012 634500                    EPPR4   ARS,,AUTO
         0 000174   200022 454500                    STP4    ARS+8,,AUTO
         0 000175   200014 635500                    EPPR5   ARS+2,,AUTO
         0 000176   200021 455500                    STP5    ARS+7,,AUTO
         0 000177   000000 236000 xsym               LDQ     S_D$
         0 000200   001010 036003                    ADLQ    520,DU
         0 000201   200020 756100                    STQ     ARS+6,,AUTO
         0 000202   000000 236000 xsym               LDQ     S_D$
         0 000203   000735 036003                    ADLQ    477,DU
         0 000204   200017 756100                    STQ     ARS+5,,AUTO
         0 000205   000000 236000 xsym               LDQ     S_D$
         0 000206   001012 036003                    ADLQ    522,DU
         0 000207   200016 756100                    STQ     ARS+4,,AUTO
         0 000210   000003 236000 1                  LDQ     3
         0 000211   200015 756100                    STQ     ARS+3,,AUTO
         0 000212   200015 630500                    EPPR0   ARS+3,,AUTO
         0 000213   000025 631400 xsym               EPPR1   B_VECTNIL+21
         0 000214   000000 701000 xent               TSX1    DDQ$READLM
PL6.E3A0      #002=DDF$DBG_# File=DUF$NPNUM.:E05TSI                              TUE 07/29/97 14:52 Page:75   
         0 000215   000230 702000 0                  TSX2    EXSTARET

      470     7072    1        S_D.EXST_END$ = PINCRC( S_D.EXST$, ARS - SIZEC( B$EXST ) );

   7072  0 000216   000000 470400 xsym               LDP0    S_D$
         0 000217   001010 471500                    LDP1    520,,PR0
         0 000220   200012 236100                    LDQ     ARS,,AUTO
         0 000221   000011 402007                    MPY     9,DL
         0 000222   000000 116003                    CMPQ    0,DU
         0 000223   000225 605000 0                  TPL     s:7072+7
         0 000224   000044 036003                    ADLQ    36,DU
         0 000225   177775 503506                    ABD     -3,QL,PR1
         0 000226   001011 451500                    STP1    521,,PR0

      471     7073    1        GOTO IN_EPAGE;

   7073  0 000227   000142 710000 0                  TRA     IN_EPAGE

      472     7074                                                /**/
      473     7075    1   EXSTARET:
      474     7076    1        S_D.EXST_PAGE = -1;

   7076  0 000230   000001 335007       EXSTARET     LCA     1,DL
         0 000231   000000 470400 xsym               LDP0    S_D$
         0 000232   001012 755100                    STA     522,,PR0

      475     7077    1        ALTRETURN;

   7077  0 000233   000000 702200 xent               TSX2  ! X66_AALT

      476     7078        %EJECT;
PL6.E3A0      #002=DDF$DBG_# File=DUF$NPNUM.:E05TSI                              TUE 07/29/97 14:52 Page:76   
      477     7079        /*F* NAME: DDF$IE_#
      478     7080             PURPOSE: To get the requested entry in the internal entrys table into memory.
      479     7081             DESCRIPTION: If the requested entry is already in memory then a pointer
      480     7082                          to its location is computed. Otherwise, the page containing
      481     7083                          the requested entry is read into memory (into the page
      482     7084                          size buffer). RETURNs when done. ALTRETURNs if the requested
      483     7085                          entry is out of limits, or if the read routine ALTRETs. */
      484     7086        /*D* NAME: DDF$IE_#
      485     7087             ENTRY: DDF$IE_#
      486     7088             INTERFACE: DDQ$READLM
      487     7089                        DDE$ERROR
      488     7090             ENVIRONMENT: User Delta.
      489     7091             INPUT: NTRY# - Desired entry number.
      490     7092                    S_D.IE$ - Pointer to page buffer.
      491     7093                    S_D.IE_PAGE - Current page in memory.
      492     7094                    S_D.IE_END$ - Pointer to last entry in current page.
      493     7095             OUTPUT: PTR$ - Pointer to desired entry.
      494     7096                     S_D.IE_PAGE - Current page in memory.
      495     7097                     S_D.IE_END$ - Pointer to last entry in current page.
      496     7098             SCRATCH: Local AUTO only.
      497     7099             DESCRIPTION: If the requested entry is already in memory then a pointer
      498     7100                          to its location is computed. Otherwise, the page containing
      499     7101                          the requested entry is read into memory (into the page
      500     7102                          size buffer). RETURNs when done. ALTRETURNs if the requested
      501     7103                          entry is out of limits, or if the read routine ALTRETs. */
      502     7104                                                /**/
      503     7105    1   DDF$IE_#: ENTRY( NTRY#, PTR$ ) ALTRET;

   7105  0 000234   000000 700200 xent  DDF$IE_#     TSX0  ! X66_AUTO_2
         0 000235   000024 000002                    ZERO    20,2

      504     7106                                                /**/
      505     7107    1        IF NTRY# >= S_D.LB1$ -> B$LBNTRY1.INTRYSIZ

   7107  0 000236   000000 470400 xsym               LDP0    S_D$
         0 000237   001036 471500                    LDP1    542,,PR0
         0 000240   200003 473500                    LDP3    @NTRY#,,AUTO
PL6.E3A0      #002=DDF$DBG_# File=DUF$NPNUM.:E05TSI                              TUE 07/29/97 14:52 Page:77   
         0 000241   100003 236100                    LDQ     3,,PR1
         0 000242   000022 772000                    QRL     18
         0 000243   300000 116100                    CMPQ    0,,PR3
         0 000244   000246 605400 0                  TPNZ    s:7109

      506     7108    1        THEN ALTRETURN;

   7108  0 000245   000000 702200 xent               TSX2  ! X66_AALT

      507     7109    1        PSIZ = S_D.LB1$ -> B$LBNTRY1.INTRYPSIZ;

   7109  0 000246   100003 236100                    LDQ     3,,PR1
         0 000247   777777 376007                    ANQ     -1,DL
         0 000250   200005 756100                    STQ     PSIZ,,AUTO

      508     7110    1        NTRYPP = PSIZ / SIZEW( B$INTNTRY );

   7110  0 000251   000002 506007                    DIV     2,DL
         0 000252   200007 756100                    STQ     NTRYPP,,AUTO

      509     7111    1        PAGE = NTRY# / NTRYPP;

   7111  0 000253   300000 236100                    LDQ     0,,PR3
         0 000254   200007 506100                    DIV     NTRYPP,,AUTO
         0 000255   200006 756100                    STQ     PAGE,,AUTO

      510     7112    1        IF PAGE = S_D.IE_PAGE

   7112  0 000256   000000 116003                    CMPQ    0,DU
         0 000257   000302 604000 0                  TMI     s:7125
         0 000260   001015 116100                    CMPQ    525,,PR0
         0 000261   000302 601000 0                  TNZ     s:7125

      511     7113    1        THEN
      512     7114    2   IN_IPAGE: DO;

   7114  0 000262                       IN_IPAGE     null
PL6.E3A0      #002=DDF$DBG_# File=DUF$NPNUM.:E05TSI                              TUE 07/29/97 14:52 Page:78   
      513     7115    2             REM$ = PINCRW( S_D.IE$, MOD( NTRY#, NTRYPP ) * SIZEW( B$INTNTRY ) );

   7115  0 000262   200003 470500                    LDP0    @NTRY#,,AUTO
         0 000263   000000 236100                    LDQ     0,,PR0
         0 000264   200007 506100                    DIV     NTRYPP,,AUTO
         0 000265   000000 471400 xsym               LDP1    S_D$
         0 000266   101013 473500                    LDP3    523,,PR1
         0 000267   000001 735000                    ALS     1
         0 000270   300000 634505                    EPPR4   0,AL,PR3
         0 000271   200011 454500                    STP4    REM$,,AUTO

      514     7116    2             IF REM$ <= S_D.IE_END$

   7116  0 000272   101014 236100                    LDQ     524,,PR1
         0 000273   200011 116100                    CMPQ    REM$,,AUTO
         0 000274   000301 602000 0                  TNC     s:7122

      515     7117    3             THEN DO;

      516     7118    3                  PTR$ = REM$;

   7118  0 000275   200011 236100                    LDQ     REM$,,AUTO
         0 000276   200004 475500                    LDP5    @PTR$,,AUTO
         0 000277   500000 756100                    STQ     0,,PR5

      517     7119    3                  RETURN;

   7119  0 000300   000000 702200 xent               TSX2  ! X66_ARET

      518     7120    3                END;
      519     7121    3             ELSE DO;

      520     7122    3                  ALTRETURN;

   7122  0 000301   000000 702200 xent               TSX2  ! X66_AALT

      521     7123    3                END;
PL6.E3A0      #002=DDF$DBG_# File=DUF$NPNUM.:E05TSI                              TUE 07/29/97 14:52 Page:79   
      522     7124    2           END;
      523     7125    1        ARS = 0;

   7125  0 000302   200012 450100                    STZ     ARS,,AUTO

      524     7126    1        S_D.IE_PAGE = PAGE;

   7126  0 000303   001015 756100                    STQ     525,,PR0

      525     7127    1        CALL DDQ$READLM( %TYPINTNTRY, S_D.IE_PAGE, S_D.QSCH.NODE, S_D.IE$, PSIZ * 4,
              7127                 ARS, S_D.QSCH.NPOINTER ) ALTRET( IEARET );

   7127  0 000304   200005 235100                    LDA     PSIZ,,AUTO
         0 000305   000002 735000                    ALS     2
         0 000306   200014 755100                    STA     ARS+2,,AUTO
         0 000307   000000 236000 xsym               LDQ     S_D$
         0 000310   000736 036003                    ADLQ    478,DU
         0 000311   200023 756100                    STQ     ARS+9,,AUTO
         0 000312   200012 634500                    EPPR4   ARS,,AUTO
         0 000313   200022 454500                    STP4    ARS+8,,AUTO
         0 000314   200014 635500                    EPPR5   ARS+2,,AUTO
         0 000315   200021 455500                    STP5    ARS+7,,AUTO
         0 000316   000000 236000 xsym               LDQ     S_D$
         0 000317   001013 036003                    ADLQ    523,DU
         0 000320   200020 756100                    STQ     ARS+6,,AUTO
         0 000321   000000 236000 xsym               LDQ     S_D$
         0 000322   000735 036003                    ADLQ    477,DU
         0 000323   200017 756100                    STQ     ARS+5,,AUTO
         0 000324   000000 236000 xsym               LDQ     S_D$
         0 000325   001015 036003                    ADLQ    525,DU
         0 000326   200016 756100                    STQ     ARS+4,,AUTO
         0 000327   000005 236000 1                  LDQ     5
         0 000330   200015 756100                    STQ     ARS+3,,AUTO
         0 000331   200015 630500                    EPPR0   ARS+3,,AUTO
         0 000332   000025 631400 xsym               EPPR1   B_VECTNIL+21
         0 000333   000000 701000 xent               TSX1    DDQ$READLM
         0 000334   000347 702000 0                  TSX2    IEARET
PL6.E3A0      #002=DDF$DBG_# File=DUF$NPNUM.:E05TSI                              TUE 07/29/97 14:52 Page:80   

      526     7128    1        S_D.IE_END$ = PINCRC( S_D.IE$, ARS - SIZEC( B$INTNTRY ) );

   7128  0 000335   000000 470400 xsym               LDP0    S_D$
         0 000336   001013 471500                    LDP1    523,,PR0
         0 000337   200012 236100                    LDQ     ARS,,AUTO
         0 000340   000011 402007                    MPY     9,DL
         0 000341   000000 116003                    CMPQ    0,DU
         0 000342   000344 605000 0                  TPL     s:7128+7
         0 000343   000044 036003                    ADLQ    36,DU
         0 000344   177776 503506                    ABD     -2,QL,PR1
         0 000345   001014 451500                    STP1    524,,PR0

      527     7129    1        GOTO IN_IPAGE;

   7129  0 000346   000262 710000 0                  TRA     IN_IPAGE

      528     7130                                                /**/
      529     7131    1   IEARET:
      530     7132    1        S_D.IE_PAGE = -1;

   7132  0 000347   000001 335007       IEARET       LCA     1,DL
         0 000350   000000 470400 xsym               LDP0    S_D$
         0 000351   001015 755100                    STA     525,,PR0

      531     7133    1        ALTRETURN;

   7133  0 000352   000000 702200 xent               TSX2  ! X66_AALT

      532     7134        %EJECT;
PL6.E3A0      #002=DDF$DBG_# File=DUF$NPNUM.:E05TSI                              TUE 07/29/97 14:52 Page:81   
      533     7135        /*F* NAME: DDF$VREBL_#
      534     7136            PURPOSE: To get the requested entry in the program variables table into memory.
      535     7137             DESCRIPTION: If the requested entry is already in memory then a pointer
      536     7138                          to its location is computed. Otherwise, the page containing
      537     7139                          the requested entry is read into memory (into the page
      538     7140                          size buffer). RETURNs when done. ALTRETURNs if the requested
      539     7141                          entry is out of limits, or if the read routine ALTRETs. */
      540     7142        /*D* NAME: DDF$VREBL_#
      541     7143             ENTRY: DDF$VREBL_#
      542     7144             INTERFACE: DDQ$READLM
      543     7145                        DDE$ERROR
      544     7146             ENVIRONMENT: User Delta.
      545     7147             INPUT: NTRY# - Desired entry number.
      546     7148                    S_D.VREBL$ - Pointer to page buffer.
      547     7149                    S_D.VREBL_PAGE - Current page in memory.
      548     7150                    S_D.VREBL_END$ - Pointer to last entry in current page.
      549     7151             OUTPUT: PTR$ - Pointer to desired entry.
      550     7152                     S_D.VREBL_PAGE - Current page in memory.
      551     7153                     S_D.VREBL_END$ - Pointer to last entry in current page.
      552     7154             SCRATCH: Local AUTO only.
      553     7155             DESCRIPTION: If the requested entry is already in memory then a pointer
      554     7156                          to its location is computed. Otherwise, the page containing
      555     7157                          the requested entry is read into memory (into the page
      556     7158                          size buffer). RETURNs when done. ALTRETURNs if the requested
      557     7159                          entry is out of limits, or if the read routine ALTRETs. */
      558     7160                                                /**/
      559     7161    1   DDF$VREBL_#: ENTRY( NTRY#, PTR$ ) ALTRET;

   7161  0 000353   000000 700200 xent  DDF$VREBL_#  TSX0  ! X66_AUTO_2
         0 000354   000024 000002                    ZERO    20,2

      560     7162                                                /**/
      561     7163    1        IF NTRY# >= S_D.LB1$ -> B$LBNTRY1.VREBLSIZ

   7163  0 000355   000000 470400 xsym               LDP0    S_D$
         0 000356   001036 471500                    LDP1    542,,PR0
         0 000357   200003 473500                    LDP3    @NTRY#,,AUTO
PL6.E3A0      #002=DDF$DBG_# File=DUF$NPNUM.:E05TSI                              TUE 07/29/97 14:52 Page:82   
         0 000360   100002 236100                    LDQ     2,,PR1
         0 000361   000022 772000                    QRL     18
         0 000362   300000 116100                    CMPQ    0,,PR3
         0 000363   000365 605400 0                  TPNZ    s:7165

      562     7164    1        THEN ALTRETURN;

   7164  0 000364   000000 702200 xent               TSX2  ! X66_AALT

      563     7165    1        PSIZ = S_D.LB1$ -> B$LBNTRY1.VREBLPSIZ;

   7165  0 000365   100002 236100                    LDQ     2,,PR1
         0 000366   777777 376007                    ANQ     -1,DL
         0 000367   200005 756100                    STQ     PSIZ,,AUTO

      564     7166    1        NTRYPP = PSIZ / SIZEW( B$VREBL );

   7166  0 000370   000005 506007                    DIV     5,DL
         0 000371   200007 756100                    STQ     NTRYPP,,AUTO

      565     7167    1        PAGE = NTRY# / NTRYPP;

   7167  0 000372   300000 236100                    LDQ     0,,PR3
         0 000373   200007 506100                    DIV     NTRYPP,,AUTO
         0 000374   200006 756100                    STQ     PAGE,,AUTO

      566     7168    1        IF PAGE = S_D.VREBL_PAGE

   7168  0 000375   000000 116003                    CMPQ    0,DU
         0 000376   000422 604000 0                  TMI     s:7181
         0 000377   001020 116100                    CMPQ    528,,PR0
         0 000400   000422 601000 0                  TNZ     s:7181

      567     7169    1        THEN
      568     7170    2   IN_VPAGE: DO;

   7170  0 000401                       IN_VPAGE     null
PL6.E3A0      #002=DDF$DBG_# File=DUF$NPNUM.:E05TSI                              TUE 07/29/97 14:52 Page:83   
      569     7171    2             REM$ = PINCRW( S_D.VREBL$, MOD( NTRY#, NTRYPP ) * SIZEW( B$VREBL ) );

   7171  0 000401   200003 470500                    LDP0    @NTRY#,,AUTO
         0 000402   000000 236100                    LDQ     0,,PR0
         0 000403   200007 506100                    DIV     NTRYPP,,AUTO
         0 000404   000000 471400 xsym               LDP1    S_D$
         0 000405   101016 473500                    LDP3    526,,PR1
         0 000406   000044 733000                    LRS     36
         0 000407   000005 402007                    MPY     5,DL
         0 000410   300000 634506                    EPPR4   0,QL,PR3
         0 000411   200011 454500                    STP4    REM$,,AUTO

      570     7172    2             IF REM$ <= S_D.VREBL_END$

   7172  0 000412   101017 236100                    LDQ     527,,PR1
         0 000413   200011 116100                    CMPQ    REM$,,AUTO
         0 000414   000421 602000 0                  TNC     s:7178

      571     7173    3             THEN DO;

      572     7174    3                  PTR$ = REM$;

   7174  0 000415   200011 236100                    LDQ     REM$,,AUTO
         0 000416   200004 475500                    LDP5    @PTR$,,AUTO
         0 000417   500000 756100                    STQ     0,,PR5

      573     7175    3                  RETURN;

   7175  0 000420   000000 702200 xent               TSX2  ! X66_ARET

      574     7176    3                END;
      575     7177    3             ELSE DO;

      576     7178    3                  ALTRETURN;

   7178  0 000421   000000 702200 xent               TSX2  ! X66_AALT

PL6.E3A0      #002=DDF$DBG_# File=DUF$NPNUM.:E05TSI                              TUE 07/29/97 14:52 Page:84   
      577     7179    3                END;
      578     7180    2           END;
      579     7181    1        ARS = 0;

   7181  0 000422   200012 450100                    STZ     ARS,,AUTO

      580     7182    1        S_D.VREBL_PAGE = PAGE;

   7182  0 000423   001020 756100                    STQ     528,,PR0

      581     7183    1       CALL DDQ$READLM( %TYPVREBL, S_D.VREBL_PAGE, S_D.QSCH.NODE, S_D.VREBL$, PSIZ * 4
              7183                 , ARS, S_D.QSCH.NPOINTER ) ALTRET( VREBLARET );

   7183  0 000424   200005 235100                    LDA     PSIZ,,AUTO
         0 000425   000002 735000                    ALS     2
         0 000426   200014 755100                    STA     ARS+2,,AUTO
         0 000427   000000 236000 xsym               LDQ     S_D$
         0 000430   000736 036003                    ADLQ    478,DU
         0 000431   200023 756100                    STQ     ARS+9,,AUTO
         0 000432   200012 634500                    EPPR4   ARS,,AUTO
         0 000433   200022 454500                    STP4    ARS+8,,AUTO
         0 000434   200014 635500                    EPPR5   ARS+2,,AUTO
         0 000435   200021 455500                    STP5    ARS+7,,AUTO
         0 000436   000000 236000 xsym               LDQ     S_D$
         0 000437   001016 036003                    ADLQ    526,DU
         0 000440   200020 756100                    STQ     ARS+6,,AUTO
         0 000441   000000 236000 xsym               LDQ     S_D$
         0 000442   000735 036003                    ADLQ    477,DU
         0 000443   200017 756100                    STQ     ARS+5,,AUTO
         0 000444   000000 236000 xsym               LDQ     S_D$
         0 000445   001020 036003                    ADLQ    528,DU
         0 000446   200016 756100                    STQ     ARS+4,,AUTO
         0 000447   000007 236000 1                  LDQ     7
         0 000450   200015 756100                    STQ     ARS+3,,AUTO
         0 000451   200015 630500                    EPPR0   ARS+3,,AUTO
         0 000452   000025 631400 xsym               EPPR1   B_VECTNIL+21
         0 000453   000000 701000 xent               TSX1    DDQ$READLM
PL6.E3A0      #002=DDF$DBG_# File=DUF$NPNUM.:E05TSI                              TUE 07/29/97 14:52 Page:85   
         0 000454   000467 702000 0                  TSX2    VREBLARET

      582     7184    1        S_D.VREBL_END$ = PINCRC( S_D.VREBL$, ARS - SIZEC( B$VREBL ) );

   7184  0 000455   000000 470400 xsym               LDP0    S_D$
         0 000456   001016 471500                    LDP1    526,,PR0
         0 000457   200012 236100                    LDQ     ARS,,AUTO
         0 000460   000011 402007                    MPY     9,DL
         0 000461   000000 116003                    CMPQ    0,DU
         0 000462   000464 605000 0                  TPL     s:7184+7
         0 000463   000044 036003                    ADLQ    36,DU
         0 000464   177773 503506                    ABD     -5,QL,PR1
         0 000465   001017 451500                    STP1    527,,PR0

      583     7185    1        GOTO IN_VPAGE;

   7185  0 000466   000401 710000 0                  TRA     IN_VPAGE

      584     7186                                                /**/
      585     7187    1   VREBLARET:
      586     7188    1        S_D.VREBL_PAGE = -1;

   7188  0 000467   000001 335007       VREBLARET    LCA     1,DL
         0 000470   000000 470400 xsym               LDP0    S_D$
         0 000471   001020 755100                    STA     528,,PR0

      587     7189    1        ALTRETURN;

   7189  0 000472   000000 702200 xent               TSX2  ! X66_AALT

(unnamed)
 Sect OctLoc
   1     000   000000 000017   000000 006000   000000 000015   000002 006000    ................
   1     004   000000 000014   000004 006000   000000 000016   000006 006000    ................
      588     7190                                                /**/
      589     7191    1   END DDF$DBG_#;

PL6.E3A0      #002=DDF$DBG_# File=DUF$NPNUM.:E05TSI                              TUE 07/29/97 14:52 Page:86   
--  Include file information  --

   DD_ERR_C.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDF$DBG_#.

   Procedure DDF$DBG_# requires 315 words for executable code.
   Procedure DDF$DBG_# requires 20 words of local(AUTO) storage.

    No errors detected in file DUF$NPNUM.:E05TSI    .
PL6.E3A0      #002=DDF$DBG_# File=DUF$NPNUM.:E05TSI                              TUE 07/29/97 14:52 Page:87   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=DDF$DBG_# File=DUF$NPNUM.:E05TSI                              TUE 07/29/97 14:52 Page:88   
          MINI XREF LISTING

ARS
        41**DCL      7013<<ASSIGN   7015<>CALL     7016>>ASSIGN   7069<<ASSIGN   7071<>CALL     7072>>ASSIGN
      7125<<ASSIGN   7127<>CALL     7128>>ASSIGN   7181<<ASSIGN   7183<>CALL     7184>>ASSIGN
B$EXST
      3528**DCL      7054--ASSIGN   7059--ASSIGN   7072--ASSIGN
B$EXST.OU
      3537**DCL      3543--REDEF
B$INTNTRY
      3635**DCL      7110--ASSIGN   7115--ASSIGN   7128--ASSIGN
B$INTNTRY.OU
      3639**DCL      3646--REDEF
B$LBNTRY1.INTRYPSIZ
      3523**DCL      7109>>ASSIGN
B$LBNTRY1.INTRYSIZ
      3520**DCL      7107>>IF
B$LBNTRY1.NAMESIZ
      3502**DCL      6994>>IF
B$LBNTRY1.NAMPSIZ
      3505**DCL      6996>>ASSIGN
B$LBNTRY1.STMNTPSIZ
      3511**DCL      7053>>ASSIGN
B$LBNTRY1.STMNTSIZ
      3508**DCL      7051>>IF
B$LBNTRY1.VREBLPSIZ
      3517**DCL      7165>>ASSIGN
B$LBNTRY1.VREBLSIZ
      3514**DCL      7163>>IF
B$VREBL
      3693**DCL      7166--ASSIGN   7171--ASSIGN   7184--ASSIGN
B$VREBL.ADR
      3694**DCL      3706--REDEF
DBGARET
PL6.E3A0      #002=DDF$DBG_# File=DUF$NPNUM.:E05TSI                              TUE 07/29/97 14:52 Page:89   
      7020**LABEL    7015--CALLALT
DDE$ERROR
      6991**DCL-ENT  7009--CALL
DDQ$READLM
      6992**DCL-ENT  7015--CALL     7071--CALL     7127--CALL     7183--CALL
EXSTARET
      7076**LABEL    7071--CALLALT
IEARET
      7132**LABEL    7127--CALLALT
IN_DPAGE
      7000**LABEL    7017--GOTO
IN_EPAGE
      7058**LABEL    7073--GOTO
IN_IPAGE
      7114**LABEL    7129--GOTO
IN_VPAGE
      7170**LABEL    7185--GOTO
NTRY#
        34**DCL        32--PROC     6994>>IF       6997>>ASSIGN   7001>>ASSIGN   7049--ENTRY    7051>>IF
      7055>>ASSIGN   7059>>ASSIGN   7105--ENTRY    7107>>IF       7111>>ASSIGN   7115>>ASSIGN   7161--ENTRY
      7163>>IF       7167>>ASSIGN   7171>>ASSIGN
NTRYPP
        38**DCL      7054<<ASSIGN   7055>>ASSIGN   7059>>ASSIGN   7110<<ASSIGN   7111>>ASSIGN   7115>>ASSIGN
      7166<<ASSIGN   7167>>ASSIGN   7171>>ASSIGN
PAGE
        37**DCL      6997<<ASSIGN   6998>>IF       7014>>ASSIGN   7055<<ASSIGN   7056>>IF       7070>>ASSIGN
      7111<<ASSIGN   7112>>IF       7126>>ASSIGN   7167<<ASSIGN   7168>>IF       7182>>ASSIGN
PSIZ
        36**DCL      6996<<ASSIGN   6997>>ASSIGN   7001>>ASSIGN   7015>>CALL     7053<<ASSIGN   7054>>ASSIGN
      7071>>CALL     7109<<ASSIGN   7110>>ASSIGN   7127>>CALL     7165<<ASSIGN   7166>>ASSIGN   7183>>CALL
PTR$
        35**DCL        32--PROC     7004<<ASSIGN   7049--ENTRY    7062<<ASSIGN   7105--ENTRY    7118<<ASSIGN
      7161--ENTRY    7174<<ASSIGN
REM
        39**DCL      7001<<ASSIGN   7002>>IF       7004>>ASSIGN
REM$
PL6.E3A0      #002=DDF$DBG_# File=DUF$NPNUM.:E05TSI                              TUE 07/29/97 14:52 Page:90   
        40**DCL      7059<<ASSIGN   7060>>IF       7062>>ASSIGN   7115<<ASSIGN   7116>>IF       7118>>ASSIGN
      7171<<ASSIGN   7172>>IF       7174>>ASSIGN
S_D.CURRENT_CHANNEL
      6228**DCL      6230--REDEF
S_D.DBG$
      5678**DCL      7004>>ASSIGN   7015<>CALL
S_D.DBG_LAST
      5680**DCL      7002>>IF       7016<<ASSIGN
S_D.DBG_PAGE
      5682**DCL      6998>>IF       7014<<ASSIGN   7015<>CALL     7020<<ASSIGN
S_D.DEBUGA
      5380**DCL      5382--REDEF
S_D.EIS
      6338**DCL      6367--REDEF
S_D.ERROR
      5309**DCL      7008<<ASSIGN
S_D.EXST$
      5684**DCL      7059>>ASSIGN   7071<>CALL     7072>>ASSIGN
S_D.EXST_END$
      5686**DCL      7060>>IF       7072<<ASSIGN
S_D.EXST_PAGE
      5688**DCL      7056>>IF       7070<<ASSIGN   7071<>CALL     7076<<ASSIGN
S_D.HOST_MESSAGE_BUF_REMOTE
      6271**DCL      6272--REDEF    6286--REDEF
S_D.IE$
      5690**DCL      7115>>ASSIGN   7127<>CALL     7128>>ASSIGN
S_D.IE_END$
      5692**DCL      7116>>IF       7128<<ASSIGN
S_D.IE_PAGE
      5694**DCL      7112>>IF       7126<<ASSIGN   7127<>CALL     7132<<ASSIGN
S_D.JDE
      5885**DCL      5886--REDEF
S_D.L$.VALUE
      5438**DCL      5444--REDEF    5452--REDEF    5455--REDEF    5458--REDEF    5461--REDEF
S_D.L$.VALUE.L
      5439**DCL      5440--REDEF    5441--REDEF
PL6.E3A0      #002=DDF$DBG_# File=DUF$NPNUM.:E05TSI                              TUE 07/29/97 14:52 Page:91   
S_D.L6_MESSAGE_BUF
      6292**DCL      6294--REDEF
S_D.LB1$
      5716**DCL      6994>>IF       6996>>ASSIGN   7051>>IF       7053>>ASSIGN   7107>>IF       7109>>ASSIGN
      7163>>IF       7165>>ASSIGN
S_D.OUTPUT
      6258**DCL      6260--REDEF
S_D.QSCH.NODE
      5588**DCL      7015<>CALL     7071<>CALL     7127<>CALL     7183<>CALL
S_D.QSCH.NPOINTER
      5590**DCL      7015<>CALL     7071<>CALL     7127<>CALL     7183<>CALL
S_D.REMOTE_MSG.FNCC
      6277**DCL      6278--REDEF
S_D.REMOTE_MSG.STXC
      6273**DCL      6274--REDEF
S_D.REMOTE_MSG.SUBFNCC
      6281**DCL      6282--REDEF
S_D.SV
      5337**DCL      5358--REDEF
S_D.VREBL$
      5696**DCL      7171>>ASSIGN   7183<>CALL     7184>>ASSIGN
S_D.VREBL_END$
      5698**DCL      7172>>IF       7184<<ASSIGN
S_D.VREBL_PAGE
      5700**DCL      7168>>IF       7182<<ASSIGN   7183<>CALL     7188<<ASSIGN
S_D$
      6589**DCL      5285--IMP-PTR  6994>>IF       6996>>ASSIGN   6998>>IF       7002>>IF       7004>>ASSIGN
      7008>>ASSIGN   7014>>ASSIGN   7015>>CALL     7015>>CALL     7015>>CALL     7015>>CALL     7016>>ASSIGN
      7020>>ASSIGN   7051>>IF       7053>>ASSIGN   7056>>IF       7059>>ASSIGN   7060>>IF       7070>>ASSIGN
      7071>>CALL     7071>>CALL     7071>>CALL     7071>>CALL     7072>>ASSIGN   7072>>ASSIGN   7076>>ASSIGN
      7107>>IF       7109>>ASSIGN   7112>>IF       7115>>ASSIGN   7116>>IF       7126>>ASSIGN   7127>>CALL
      7127>>CALL     7127>>CALL     7127>>CALL     7128>>ASSIGN   7128>>ASSIGN   7132>>ASSIGN   7163>>IF
      7165>>ASSIGN   7168>>IF       7171>>ASSIGN   7172>>IF       7182>>ASSIGN   7183>>CALL     7183>>CALL
      7183>>CALL     7183>>CALL     7184>>ASSIGN   7184>>ASSIGN   7188>>ASSIGN
VREBLARET
      7188**LABEL    7183--CALLALT
PL6.E3A0      #002=DDF$DBG_# File=DUF$NPNUM.:E05TSI                              TUE 07/29/97 14:52 Page:92   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #002=DDF$DBG_# File=DUF$NPNUM.:E05TSI                              TUE 07/29/97 14:52 Page:93   
              MINI UREF LISTING

DDF$DBG_#      32**PROC
DDF$EXST_#    7049**ENTRY
DDF$IE_#    7105**ENTRY
DDF$VREBL_#    7161**ENTRY
