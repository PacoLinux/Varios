VERSION E05

PL6.E3A0      #001=FLI$INIT File=FLI$UTIL.:E05TSI                                TUE 07/29/97 15:59 Page:1    
        1        1        /*M* FLI$UTIL - EFT I/O routines - utility routines */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* THI=1,PLM=3 */
        8        8        FLI$INIT: PROC( PARTIAL );
        9        9        /*F*  NAME: FLI$INIT
       10       10              PURPOSE: Initialization for EFT's I/O routines
       11       11         */
       12       12        /***
       13       13         *** Parameter
       14       14         ***/
       15       15
       16       16    1   DCL PARTIAL BIT(1) ALIGNED;        /* Indicates partial initialization only   */
       17       17
       18       18         /***
       19       19          *** INCLUDE
       20       20          ***/
       21       21
       22       22        %INCLUDE CP_6;
       23     5581        %INCLUDE FLI_DATA_R;
       24     6995
       25     6996         /***
       26     6997          *** ENTRY
       27     6998          ***/
       28     6999
       29     7000    1   DCL FLI$ALLOC ENTRY(2);
       30     7001    1   DCL FLI$ALLOC_BUF ENTRY(2);
       31     7002    1   DCL FLI$EVENT_HANDLER ENTRY ASYNC;
       32     7003
       33     7004         /***
       34     7005          *** FPT
       35     7006          ***/
       36     7007
       37     7008        %FPT_EVENT( FPTN=SET_EVENT_HANDLER,
PL6.E3A0      #001=FLI$INIT File=FLI$UTIL.:E05TSI                                TUE 07/29/97 15:59 Page:2    
       38     7009                    UENTRY=FLI$EVENT_HANDLER );
       39     7023
       40     7024        /****************************************/
       41     7025
       42     7026         /***
       43     7027          *** Reinitialize pointers.
       44     7028          ***/
       45     7029
       46     7030    1      IF ADDR(PARTIAL) = ADDR(NIL)
       47     7031    2       THEN DO;
       48     7032    2         CALL FLI$ALLOC;                   /* Get rid of SN list area            */
       49     7033    2         LAST_SNLISTINFO$ = ADDR(NIL);
       50     7034    2         NBR_SNLISTS = 0;
       51     7035    2         TAPE_DCBLIST$ = ADDR(NIL);
       52     7036    2         END;
       53     7037    1      EOVOL_DETECTED = '0'B;
       54     7038
       55     7039    1      CALL M$TIME( GET_NOW_UTS );
       56     7040    1      START_UTS = NOW_UTS;                 /* Remember when we started           */
       57     7041    1      ACCUMULATED_MOUNT_TIME = 0;
       58     7042    1      ACCUMULATED_SPIN_TIME = 0;
       59     7043    1      ACCUMULATED_BREAK_TIME = 0;
       60     7044
       61     7045         /***
       62     7046          *** Set up handlers.
       63     7047          ***/
       64     7048
       65     7049    1      CALL M$EVENT( SET_EVENT_HANDLER );
       66     7050
       67     7051         /***
       68     7052          *** Release obtained memory.
       69     7053          ***/
       70     7054
       71     7055    1      CALL FLI$ALLOC_BUF;
       72     7056    1      RETURN;
       73     7057
       74     7058    1   END FLI$INIT;
PL6.E3A0      #001=FLI$INIT File=FLI$UTIL.:E05TSI                                TUE 07/29/97 15:59 Page:3    
       75     7059        %EOD;

PL6.E3A0      #001=FLI$INIT File=FLI$UTIL.:E05TSI                                TUE 07/29/97 15:59 Page:4    
--  Include file information  --

   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FLI$INIT.

   Procedure FLI$INIT requires 28 words for executable code.
   Procedure FLI$INIT requires 4 words of local(AUTO) storage.

PL6.E3A0      #001=FLI$INIT File=FLI$UTIL.:E05TSI                                TUE 07/29/97 15:59 Page:5    

 Object Unit name= FLI$INIT                                   File name= FLI$UTIL.:E05TOU
 UTS= JUL 29 '97 15:59:03.12 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$PRE_RET
    2   Data  even  none    10     12  FLI$INIT
    3   Proc  even  none    28     34  FLI$INIT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes            yes      Std        1  FLI$INIT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          Async      0 FLI$EVENT_HANDLER
         yes           Std       2 FLI$ALLOC
         yes           Std       2 FLI$ALLOC_BUF
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=FLI$INIT File=FLI$UTIL.:E05TSI                                TUE 07/29/97 15:59 Page:6    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  LAST_SNLISTINFO$                      NBR_SNLISTS
     TAPE_DCBLIST$                         SNVECLIST$                            EOVOL_DETECTED
     NOW_UTS                               GET_NOW_UTS                           START_UTS
     ACCUMULATED_MOUNT_TIME                ACCUMULATED_SPIN_TIME                 ACCUMULATED_BREAK_TIME
     DPLIST$                               DPRESLIST$                            DISK_FILE_SPEC$
     SPECCHARS                             EFTWORD                               M$PRE_RET
     RET_CMDS_NAME                         B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=FLI$INIT File=FLI$UTIL.:E05TSI                                TUE 07/29/97 15:59 Page:7    


        1        1        /*M* FLI$UTIL - EFT I/O routines - utility routines */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* THI=1,PLM=3 */
        8        8        FLI$INIT: PROC( PARTIAL );

      8  3 000000   000000 700200 xent  FLI$INIT     TSX0  ! X66_AUTO_1
         3 000001   000004 000001                    ZERO    4,1

        9        9        /*F*  NAME: FLI$INIT
       10       10              PURPOSE: Initialization for EFT's I/O routines
       11       11         */
       12       12        /***
       13       13         *** Parameter
       14       14         ***/
       15       15
       16       16    1   DCL PARTIAL BIT(1) ALIGNED;        /* Indicates partial initialization only   */
       17       17
       18       18         /***
       19       19          *** INCLUDE
       20       20          ***/
       21       21
       22       22        %INCLUDE CP_6;
       23     5581        %INCLUDE FLI_DATA_R;
       24     6995
       25     6996         /***
       26     6997          *** ENTRY
       27     6998          ***/
       28     6999
       29     7000    1   DCL FLI$ALLOC ENTRY(2);
       30     7001    1   DCL FLI$ALLOC_BUF ENTRY(2);
       31     7002    1   DCL FLI$EVENT_HANDLER ENTRY ASYNC;
       32     7003
PL6.E3A0      #001=FLI$INIT File=FLI$UTIL.:E05TSI                                TUE 07/29/97 15:59 Page:8    
       33     7004         /***
       34     7005          *** FPT
       35     7006          ***/
       36     7007
       37     7008        %FPT_EVENT( FPTN=SET_EVENT_HANDLER,
       38     7009                    UENTRY=FLI$EVENT_HANDLER );
       39     7023
       40     7024        /****************************************/
       41     7025
       42     7026         /***
       43     7027          *** Reinitialize pointers.
       44     7028          ***/
       45     7029
       46     7030    1      IF ADDR(PARTIAL) = ADDR(NIL)

   7030  3 000002   200003 236100                    LDQ     @PARTIAL,,AUTO
         3 000003   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000004   000014 601000 3                  TNZ     s:7037

       47     7031    2       THEN DO;

       48     7032    2         CALL FLI$ALLOC;                   /* Get rid of SN list area            */

   7032  3 000005   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000006   000000 701000 xent               TSX1    FLI$ALLOC
         3 000007   000000 011000                    NOP     0

       49     7033    2         LAST_SNLISTINFO$ = ADDR(NIL);

   7033  3 000010   000001 236000 xsym               LDQ     B_VECTNIL+1
         3 000011   000000 756000 xsym               STQ     LAST_SNLISTINFO$

       50     7034    2         NBR_SNLISTS = 0;

   7034  3 000012   000000 450000 xsym               STZ     NBR_SNLISTS

       51     7035    2         TAPE_DCBLIST$ = ADDR(NIL);
PL6.E3A0      #001=FLI$INIT File=FLI$UTIL.:E05TSI                                TUE 07/29/97 15:59 Page:9    

   7035  3 000013   000000 756000 xsym               STQ     TAPE_DCBLIST$

       52     7036    2         END;

       53     7037    1      EOVOL_DETECTED = '0'B;

   7037  3 000014   000000 450000 xsym               STZ     EOVOL_DETECTED

       54     7038
       55     7039    1      CALL M$TIME( GET_NOW_UTS );

   7039  3 000015   000000 630400 xsym               EPPR0   GET_NOW_UTS
         3 000016   020004 713400                    CLIMB   8196
         3 000017   402000 401760                    pmme    nvectors=5

       56     7040    1      START_UTS = NOW_UTS;                 /* Remember when we started           */

   7040  3 000020   000000 235000 xsym               LDA     NOW_UTS
         3 000021   000000 755000 xsym               STA     START_UTS

       57     7041    1      ACCUMULATED_MOUNT_TIME = 0;

   7041  3 000022   000000 450000 xsym               STZ     ACCUMULATED_MOUNT_TIME

       58     7042    1      ACCUMULATED_SPIN_TIME = 0;

   7042  3 000023   000000 450000 xsym               STZ     ACCUMULATED_SPIN_TIME

       59     7043    1      ACCUMULATED_BREAK_TIME = 0;

   7043  3 000024   000000 450000 xsym               STZ     ACCUMULATED_BREAK_TIME

       60     7044
       61     7045         /***
       62     7046          *** Set up handlers.
       63     7047          ***/
PL6.E3A0      #001=FLI$INIT File=FLI$UTIL.:E05TSI                                TUE 07/29/97 15:59 Page:10   
       64     7048
       65     7049    1      CALL M$EVENT( SET_EVENT_HANDLER );

   7049  3 000025   000006 630400 2                  EPPR0   SET_EVENT_HANDLER
         3 000026   010001 713400                    CLIMB   4097
         3 000027   400000 401760                    pmme    nvectors=1

       66     7050
       67     7051         /***
       68     7052          *** Release obtained memory.
       69     7053          ***/
       70     7054
       71     7055    1      CALL FLI$ALLOC_BUF;

   7055  3 000030   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000031   000000 701000 xent               TSX1    FLI$ALLOC_BUF
         3 000032   000000 011000                    NOP     0

       72     7056    1      RETURN;

   7056  3 000033   000000 702200 xent               TSX2  ! X66_ARET
       73     7057
       74     7058    1   END FLI$INIT;
       75     7059        %EOD;

PL6.E3A0      #001=FLI$INIT File=FLI$UTIL.:E05TSI                                TUE 07/29/97 15:59 Page:11   
--  Include file information  --

   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FLI$INIT.
PL6.E3A0      #001=FLI$INIT File=FLI$UTIL.:E05TSI                                TUE 07/29/97 15:59 Page:12   

 **** Variables and constants ****

  ****  Section 002  Data  FLI$INIT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/d STRC(144)   r     1 SET_EVENT_HANDLER

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @PARTIAL                  *0-0-0/w BIT         r     1 PARTIAL

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 ACCUMULATED_BREAK_TIME
     0-0-0/w UBIN        r     1 ACCUMULATED_MOUNT_TIME
     0-0-0/w UBIN        r     1 ACCUMULATED_SPIN_TIME
     0-0-0/w PTR         r     1 DISK_FILE_SPEC$            0-0-0/w PTR         r     1 DPLIST$
     0-0-0/w PTR         r     1 DPRESLIST$                 0-0-0/b BIT         r     1 EOVOL_DETECTED
     0-0-0/d STRC(432)   r     1 GET_NOW_UTS                0-0-0/w PTR         r     1 LAST_SNLISTINFO$
     0-0-0/w SBIN        r     1 NBR_SNLISTS                0-0-0/w UBIN        r     1 NOW_UTS
     0-0-0/c ASTR(9)     r     1 RET_CMDS_NAME              0-0-0/w PTR         r     1 SNVECLIST$
     0-0-0/w UBIN        r     1 START_UTS                  0-0-0/w PTR         r     1 TAPE_DCBLIST$


   Procedure FLI$INIT requires 28 words for executable code.
   Procedure FLI$INIT requires 4 words of local(AUTO) storage.
PL6.E3A0      #001=FLI$INIT File=FLI$UTIL.:E05TSI                                TUE 07/29/97 15:59 Page:13   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=FLI$INIT File=FLI$UTIL.:E05TSI                                TUE 07/29/97 15:59 Page:14   
          MINI XREF LISTING

ACCUMULATED_BREAK_TIME
      6541**DCL      7043<<ASSIGN
ACCUMULATED_MOUNT_TIME
      6541**DCL      7041<<ASSIGN
ACCUMULATED_SPIN_TIME
      6541**DCL      7042<<ASSIGN
DISK_CLOSE.SN_
      6192**DCL      6192--REDEF
DISK_CLOSE.UTL_
      6193**DCL      6193--REDEF
DISK_CLOSE.V.EXPIRE#
      6207**DCL      6207--REDEF
DISK_CLOSE.V.TYPE#
      6205**DCL      6205--REDEF
DISK_CLOSE.V.XTNSIZE#
      6202**DCL      6202--REDEF    6204--REDEF
DISK_FILE_SPEC.SPEC
      6557**DCL      6559--REDEF
DISK_FILE_SPEC.SPEC.START
      6558**DCL      6558--REDEF
DISK_FILE_SPEC.SPEC.STOP
      6559**DCL      6559--REDEF
DISK_FILE_SPEC$
      6556**DCL      6557--IMP-PTR
DISK_OPEN.ACSVEH_
      6057**DCL      6058--REDEF
DISK_OPEN.ALTKEYS_
      6063**DCL      6064--REDEF    6064--REDEF
DISK_OPEN.HDR_
      6062**DCL      6063--REDEF
DISK_OPEN.TAB_
      6061**DCL      6062--REDEF
PL6.E3A0      #001=FLI$INIT File=FLI$UTIL.:E05TSI                                TUE 07/29/97 15:59 Page:15   
DISK_OPEN.UHL_
      6055**DCL      6056--REDEF    6056--REDEF
DISK_OPEN.V.FSN#
      6095**DCL      6095--REDEF    6095--REDEF
DISK_OPEN.WSN_
      6061**DCL      6061--REDEF
DISK_READ.STATION_
      6119**DCL      6120--REDEF
DISK_READ.V.DVBYTE.REREAD#
      6131**DCL      6131--REDEF
DISK_READ.V.INDX#
      6129**DCL      6129--REDEF
DISK_WRITE.STATION_
      6157**DCL      6157--REDEF
DISK_WRITE.V.DVBYTE.VFC#
      6164**DCL      6164--REDEF
DPLIST$
      6542**DCL      6554--IMP-PTR
DPRESLIST$
      6556**DCL      6556--IMP-PTR
EFTWORD
      6677**DCL      6677--REDEF
EOVOL_DETECTED
      6520**DCL      7037<<ASSIGN
FLI$ALLOC
      7000**DCL-ENT  7032--CALL
FLI$ALLOC_BUF
      7001**DCL-ENT  7055--CALL
FLI$EVENT_HANDLER
      7002**DCL-ENT  7020--DCLINIT
FPT_EXIT.V.STEPCC#
      5982**DCL      5982--REDEF
GET_NOW_UTS
      6533**DCL      7039<>CALL
LAST_SNLISTINFO$
      5965**DCL      7033<<ASSIGN
PL6.E3A0      #001=FLI$INIT File=FLI$UTIL.:E05TSI                                TUE 07/29/97 15:59 Page:16   
M$EVENT
      5564**DCL-ENT  7049--CALL
M$TIME
      5576**DCL-ENT  7039--CALL
NBR_SNLISTS
      5969**DCL      7034<<ASSIGN
NOW_UTS
      6521**DCL      7040>>ASSIGN
PARTIAL
        16**DCL         8--PROC     7030--IF
PRE_RET_CLOSE.SN_
      6920**DCL      6920--REDEF
PRE_RET_CLOSE.UTL_
      6921**DCL      6921--REDEF
PRE_RET_CLOSE.V.EXPIRE#
      6935**DCL      6935--REDEF
PRE_RET_CLOSE.V.TYPE#
      6933**DCL      6933--REDEF
PRE_RET_CLOSE.V.XTNSIZE#
      6930**DCL      6930--REDEF    6932--REDEF
PRE_RET_OPEN.ACSVEH_
      6855**DCL      6856--REDEF
PRE_RET_OPEN.ALTKEYS_
      6861**DCL      6862--REDEF    6862--REDEF
PRE_RET_OPEN.HDR_
      6860**DCL      6861--REDEF
PRE_RET_OPEN.TAB_
      6859**DCL      6860--REDEF
PRE_RET_OPEN.UHL_
      6853**DCL      6854--REDEF    6854--REDEF
PRE_RET_OPEN.V.FSN#
      6893**DCL      6893--REDEF    6893--REDEF
PRE_RET_OPEN.WSN_
      6859**DCL      6859--REDEF
PRE_RET_READ.STATION_
      6710**DCL      6711--REDEF
PL6.E3A0      #001=FLI$INIT File=FLI$UTIL.:E05TSI                                TUE 07/29/97 15:59 Page:17   
PRE_RET_READ.V.DVBYTE.REREAD#
      6722**DCL      6722--REDEF
PRE_RET_READ.V.INDX#
      6720**DCL      6720--REDEF
PRE_RET_WRITE.STATION_
      6748**DCL      6748--REDEF
PRE_RET_WRITE.V.DVBYTE.VFC#
      6755**DCL      6755--REDEF
RET_CMDS_NAME.L#
      6964**DCL      6964--IMP-SIZ
SET_EVENT_HANDLER
      7020**DCL      7049<>CALL
SET_EVENT_HANDLER.V
      7020**DCL      7020--DCLINIT
SNVECLIST$
      6496**DCL      6496--IMP-PTR
SPEC.START
      6560**DCL      6561--REDEF
SPEC.STOP
      6561**DCL      6562--REDEF
SPECCHARS
      6560**DCL      6560--REDEF
START_UTS
      6541**DCL      7040<<ASSIGN
TAPE_CLOSE.SN_
      6413**DCL      6413--REDEF
TAPE_CLOSE.UTL_
      6414**DCL      6414--REDEF
TAPE_CLOSE.V.EXPIRE#
      6428**DCL      6428--REDEF
TAPE_CLOSE.V.TYPE#
      6426**DCL      6426--REDEF
TAPE_CLOSE.V.XTNSIZE#
      6423**DCL      6423--REDEF    6425--REDEF
TAPE_DCBLIST$
      5969**DCL      5969--IMP-PTR  7035<<ASSIGN
PL6.E3A0      #001=FLI$INIT File=FLI$UTIL.:E05TSI                                TUE 07/29/97 15:59 Page:18   
TAPE_OPEN.ACSVEH_
      6278**DCL      6279--REDEF
TAPE_OPEN.ALTKEYS_
      6284**DCL      6285--REDEF    6285--REDEF
TAPE_OPEN.HDR_
      6283**DCL      6284--REDEF
TAPE_OPEN.TAB_
      6282**DCL      6283--REDEF
TAPE_OPEN.UHL_
      6276**DCL      6277--REDEF    6277--REDEF
TAPE_OPEN.V.FSN#
      6316**DCL      6316--REDEF    6316--REDEF
TAPE_OPEN.WSN_
      6282**DCL      6282--REDEF
TAPE_READ.STATION_
      6340**DCL      6341--REDEF
TAPE_READ.V.DVBYTE.REREAD#
      6352**DCL      6352--REDEF
TAPE_READ.V.INDX#
      6350**DCL      6350--REDEF
TAPE_WRITE.STATION_
      6378**DCL      6378--REDEF
TAPE_WRITE.V.DVBYTE.VFC#
      6385**DCL      6385--REDEF
TVECTOR.W2
      6509**DCL      6510--REDEF

PL6.E3A0      #002=FLI$ELAPSED_UTS_TO_TIME File=FLI$UTIL.:E05TSI                 TUE 07/29/97 15:59 Page:19   
       76        1        /*T***********************************************************/
       77        2        /*T*                                                         */
       78        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       79        4        /*T*                                                         */
       80        5        /*T***********************************************************/
       81        6        FLI$ELAPSED_UTS_TO_TIME: PROC( UTS, TIME );
       82        7        /*F*  NAME: FLI$ELAPSED_UTS_TO_TIME
       83        8              PURPOSE: Converts elapsed UTS to textual time.
       84        9         */
       85       10
       86       11    1   DCL UTS UBIN WORD ALIGNED;              /* Elapsed UTS                        */
       87       12    1   DCL 1 TIME CALIGNED,                    /* Returned textual representation    */
       88       13    1         2 HH CHAR(2),
       89       14    1         2 COL1 CHAR(1),
       90       15    1         2 MM CHAR(2),
       91       16    1         2 COL2 CHAR(1),
       92       17    1         2 SS CHAR(2),
       93       18    1         2 COL3 CHAR(1),
       94       19    1         2 SS100 CHAR(2);
       95       20
       96       21         /***
       97       22          *** AUTO
       98       23          ***/
       99       24
      100       25    1   DCL REMAINDER UBIN AUTO;
      101       26    1   DCL QUOTIENT UBIN AUTO;
      102       27
      103       28        /****************************************/
      104       29
      105       30    1      TIME.COL1 = ':';
      106       31    1      TIME.COL2 = ':';
      107       32    1      TIME.COL3 = '.';
      108       33
      109       34    1      QUOTIENT = UTS / 360000;             /* Number of hours                    */
      110       35    1      CALL BINCHAR( TIME.HH, QUOTIENT );
      111       36    1      REMAINDER = UTS - QUOTIENT * 360000;
      112       37    1      QUOTIENT = REMAINDER / 6000;         /* Number of minutes                  */
PL6.E3A0      #002=FLI$ELAPSED_UTS_TO_TIME File=FLI$UTIL.:E05TSI                 TUE 07/29/97 15:59 Page:20   
      113       38    1      CALL BINCHAR( TIME.MM, QUOTIENT );
      114       39    1      REMAINDER = REMAINDER - QUOTIENT * 6000;
      115       40    1      QUOTIENT = REMAINDER / 100;
      116       41    1      CALL BINCHAR( TIME.SS, QUOTIENT );
      117       42    1      REMAINDER = REMAINDER - QUOTIENT * 100;
      118       43    1      CALL BINCHAR( TIME.SS100, REMAINDER );
      119       44    1      RETURN;
      120       45
      121       46    1   END FLI$ELAPSED_UTS_TO_TIME;
      122       47        %EOD;

PL6.E3A0      #002=FLI$ELAPSED_UTS_TO_TIME File=FLI$UTIL.:E05TSI                 TUE 07/29/97 15:59 Page:21   
      No diagnostics issued in procedure FLI$ELAPSED_UTS_TO_TIME.

   Procedure FLI$ELAPSED_UTS_TO_TIME requires 59 words for executable code.
   Procedure FLI$ELAPSED_UTS_TO_TIME requires 10 words of local(AUTO) storage.

PL6.E3A0      #002=FLI$ELAPSED_UTS_TO_TIME File=FLI$UTIL.:E05TSI                 TUE 07/29/97 15:59 Page:22   

 Object Unit name= FLI$ELAPSED_UTS_TO_TIME                    File name= FLI$UTIL.:E05TOU
 UTS= JUL 29 '97 15:59:22.52 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    59     73  FLI$ELAPSED_UTS_TO_TIME
    1  RoData even  none     3      3  FLI$ELAPSED_UTS_TO_TIME

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        2  FLI$ELAPSED_UTS_TO_TIME

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET
PL6.E3A0      #002=FLI$ELAPSED_UTS_TO_TIME File=FLI$UTIL.:E05TSI                 TUE 07/29/97 15:59 Page:23   


       76        1        /*T***********************************************************/
       77        2        /*T*                                                         */
       78        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       79        4        /*T*                                                         */
       80        5        /*T***********************************************************/
       81        6        FLI$ELAPSED_UTS_TO_TIME: PROC( UTS, TIME );

      6  0 000000   000000 700200 xent  FLI$ELAPSED* TSX0  ! X66_AUTO_2
         0 000001   000012 000002                    ZERO    10,2

       82        7        /*F*  NAME: FLI$ELAPSED_UTS_TO_TIME
       83        8              PURPOSE: Converts elapsed UTS to textual time.
       84        9         */
       85       10
       86       11    1   DCL UTS UBIN WORD ALIGNED;              /* Elapsed UTS                        */
       87       12    1   DCL 1 TIME CALIGNED,                    /* Returned textual representation    */
       88       13    1         2 HH CHAR(2),
       89       14    1         2 COL1 CHAR(1),
       90       15    1         2 MM CHAR(2),
       91       16    1         2 COL2 CHAR(1),
       92       17    1         2 SS CHAR(2),
       93       18    1         2 COL3 CHAR(1),
       94       19    1         2 SS100 CHAR(2);
       95       20
       96       21         /***
       97       22          *** AUTO
       98       23          ***/
       99       24
      100       25    1   DCL REMAINDER UBIN AUTO;
      101       26    1   DCL QUOTIENT UBIN AUTO;
      102       27
      103       28        /****************************************/
      104       29
      105       30    1      TIME.COL1 = ':';

     30  0 000002   200004 470500                    LDP0    @TIME,,AUTO
PL6.E3A0      #002=FLI$ELAPSED_UTS_TO_TIME File=FLI$UTIL.:E05TSI                 TUE 07/29/97 15:59 Page:24   
         0 000003   040100 100400                    MLR     fill='040'O
         0 000004   000000 000001 1                  ADSC9   0                        cn=0,n=1
         0 000005   000000 400001                    ADSC9   0,,PR0                   cn=2,n=1

      106       31    1      TIME.COL2 = ':';

     31  0 000006   040100 100400                    MLR     fill='040'O
         0 000007   000000 000001 1                  ADSC9   0                        cn=0,n=1
         0 000010   000001 200001                    ADSC9   1,,PR0                   cn=1,n=1

      107       32    1      TIME.COL3 = '.';

     32  0 000011   040100 100400                    MLR     fill='040'O
         0 000012   000001 000001 1                  ADSC9   1                        cn=0,n=1
         0 000013   000002 000001                    ADSC9   2,,PR0                   cn=0,n=1

      108       33
      109       34    1      QUOTIENT = UTS / 360000;             /* Number of hours                    */

     34  0 000014   200003 471500                    LDP1    @UTS,,AUTO
         0 000015   100000 236100                    LDQ     0,,PR1
         0 000016   000001 772000                    QRL     1
         0 000017   537440 506007                    DIV     -82144,DL
         0 000020   200006 756100                    STQ     QUOTIENT,,AUTO

      110       35    1      CALL BINCHAR( TIME.HH, QUOTIENT );

     35  0 000021   000000 235003                    LDA     0,DU
         0 000022   200010 757100                    STAQ    QUOTIENT+2,,AUTO
         0 000023   000100 301500                    BTD
         0 000024   200010 000010                    NDSC9   QUOTIENT+2,,AUTO         cn=0,s=lsgnf,sf=0,n=8
         0 000025   000000 030002                    NDSC9   0,,PR0                   cn=0,s=nosgn,sf=0,n=2

      111       36    1      REMAINDER = UTS - QUOTIENT * 360000;

     36  0 000026   000000 236003                    LDQ     0,DU
         0 000027   200006 136100                    SBLQ    QUOTIENT,,AUTO
PL6.E3A0      #002=FLI$ELAPSED_UTS_TO_TIME File=FLI$UTIL.:E05TSI                 TUE 07/29/97 15:59 Page:25   
         0 000030   000002 402000 1                  MPY     2
         0 000031   100000 036100                    ADLQ    0,,PR1
         0 000032   200005 756100                    STQ     REMAINDER,,AUTO

      112       37    1      QUOTIENT = REMAINDER / 6000;         /* Number of minutes                  */

     37  0 000033   000001 772000                    QRL     1
         0 000034   005670 506007                    DIV     3000,DL
         0 000035   200006 756100                    STQ     QUOTIENT,,AUTO

      113       38    1      CALL BINCHAR( TIME.MM, QUOTIENT );

     38  0 000036   000000 235003                    LDA     0,DU
         0 000037   200010 757100                    STAQ    QUOTIENT+2,,AUTO
         0 000040   000100 301500                    BTD
         0 000041   200010 000010                    NDSC9   QUOTIENT+2,,AUTO         cn=0,s=lsgnf,sf=0,n=8
         0 000042   000000 630002                    NDSC9   0,,PR0                   cn=3,s=nosgn,sf=0,n=2

      114       39    1      REMAINDER = REMAINDER - QUOTIENT * 6000;

     39  0 000043   000000 236003                    LDQ     0,DU
         0 000044   200006 136100                    SBLQ    QUOTIENT,,AUTO
         0 000045   013560 402007                    MPY     6000,DL
         0 000046   200005 036100                    ADLQ    REMAINDER,,AUTO
         0 000047   200005 756100                    STQ     REMAINDER,,AUTO

      115       40    1      QUOTIENT = REMAINDER / 100;

     40  0 000050   000001 772000                    QRL     1
         0 000051   000062 506007                    DIV     50,DL
         0 000052   200006 756100                    STQ     QUOTIENT,,AUTO

      116       41    1      CALL BINCHAR( TIME.SS, QUOTIENT );

     41  0 000053   000000 235003                    LDA     0,DU
         0 000054   200010 757100                    STAQ    QUOTIENT+2,,AUTO
         0 000055   000100 301500                    BTD
PL6.E3A0      #002=FLI$ELAPSED_UTS_TO_TIME File=FLI$UTIL.:E05TSI                 TUE 07/29/97 15:59 Page:26   
         0 000056   200010 000010                    NDSC9   QUOTIENT+2,,AUTO         cn=0,s=lsgnf,sf=0,n=8
         0 000057   000001 430002                    NDSC9   1,,PR0                   cn=2,s=nosgn,sf=0,n=2

      117       42    1      REMAINDER = REMAINDER - QUOTIENT * 100;

     42  0 000060   000000 236003                    LDQ     0,DU
         0 000061   200006 136100                    SBLQ    QUOTIENT,,AUTO
         0 000062   000144 402007                    MPY     100,DL
         0 000063   200005 036100                    ADLQ    REMAINDER,,AUTO
         0 000064   200005 756100                    STQ     REMAINDER,,AUTO

      118       43    1      CALL BINCHAR( TIME.SS100, REMAINDER );

     43  0 000065   000000 235003                    LDA     0,DU
         0 000066   200010 757100                    STAQ    QUOTIENT+2,,AUTO
         0 000067   000100 301500                    BTD
         0 000070   200010 000010                    NDSC9   QUOTIENT+2,,AUTO         cn=0,s=lsgnf,sf=0,n=8
         0 000071   000002 230002                    NDSC9   2,,PR0                   cn=1,s=nosgn,sf=0,n=2

      119       44    1      RETURN;

     44  0 000072   000000 702200 xent               TSX2  ! X66_ARET
      120       45
      121       46    1   END FLI$ELAPSED_UTS_TO_TIME;
      122       47        %EOD;

PL6.E3A0      #002=FLI$ELAPSED_UTS_TO_TIME File=FLI$UTIL.:E05TSI                 TUE 07/29/97 15:59 Page:27   
      No diagnostics issued in procedure FLI$ELAPSED_UTS_TO_TIME.
PL6.E3A0      #002=FLI$ELAPSED_UTS_TO_TIME File=FLI$UTIL.:E05TSI                 TUE 07/29/97 15:59 Page:28   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @TIME                      3-0-0/w PTR         r     1 @UTS
     6-0-0/w UBIN        r     1 QUOTIENT                   5-0-0/w UBIN        r     1 REMAINDER
    *0-0-0/c STRC(99)    r     1 TIME                      *0-0-0/w UBIN        r     1 UTS


   Procedure FLI$ELAPSED_UTS_TO_TIME requires 59 words for executable code.
   Procedure FLI$ELAPSED_UTS_TO_TIME requires 10 words of local(AUTO) storage.
PL6.E3A0      #002=FLI$ELAPSED_UTS_TO_TIME File=FLI$UTIL.:E05TSI                 TUE 07/29/97 15:59 Page:29   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=FLI$ELAPSED_UTS_TO_TIME File=FLI$UTIL.:E05TSI                 TUE 07/29/97 15:59 Page:30   
          MINI XREF LISTING

QUOTIENT
        26**DCL        34<<ASSIGN     35>>CALLBLT    36>>ASSIGN     37<<ASSIGN     38>>CALLBLT    39>>ASSIGN
        40<<ASSIGN     41>>CALLBLT    42>>ASSIGN
REMAINDER
        25**DCL        36<<ASSIGN     37>>ASSIGN     39<<ASSIGN     39>>ASSIGN     40>>ASSIGN     42<<ASSIGN
        42>>ASSIGN     43>>CALLBLT
TIME
        12**DCL         6--PROC
TIME.COL1
        14**DCL        30<<ASSIGN
TIME.COL2
        16**DCL        31<<ASSIGN
TIME.COL3
        18**DCL        32<<ASSIGN
TIME.HH
        13**DCL        35<<CALLBLT
TIME.MM
        15**DCL        38<<CALLBLT
TIME.SS
        17**DCL        41<<CALLBLT
TIME.SS100
        19**DCL        43<<CALLBLT
UTS
        11**DCL         6--PROC       34>>ASSIGN     36>>ASSIGN

PL6.E3A0      #003=FLI$STATS File=FLI$UTIL.:E05TSI                               TUE 07/29/97 15:59 Page:31   
      123        1        /*T***********************************************************/
      124        2        /*T*                                                         */
      125        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      126        4        /*T*                                                         */
      127        5        /*T***********************************************************/
      128        6        FLI$STATS: PROC;
      129        7        /*F*  NAME: FLI$STATS
      130        8              PURPOSE: Print statistics of run.
      131        9         */
      132       10
      133       11         /***
      134       12          *** INCLUDE
      135       13          ***/
      136       14
      137       15        %INCLUDE CP_6;
      138     5574        %INCLUDE FLI_DATA_R;
      139     6988        %INCLUDE XUD_UTS_M;
      140     7070
      141     7071         /***
      142     7072          *** ENTRY
      143     7073          ***/
      144     7074
      145     7075    1   DCL FLI$ELAPSED_UTS_TO_TIME ENTRY(2);
      146     7076        %XUD$UTS_ENTRIES;
      147     7108
      148     7109         /***
      149     7110          *** DCB
      150     7111          ***/
      151     7112
      152     7113    1   DCL M$LO DCB;
      153     7114
      154     7115         /***
      155     7116          *** STATIC
      156     7117          ***/
      157     7118
      158     7119    1   DCL 1 TIME_MSG STATIC,
      159     7120    1         2 ITEM_NAME CHAR(17),
PL6.E3A0      #003=FLI$STATS File=FLI$UTIL.:E05TSI                               TUE 07/29/97 15:59 Page:32   
      160     7121    1         2 TIME CHAR(11);
      161     7122
      162     7123        /***
      163     7124         *** CONSTANT
      164     7125         ***/
      165     7126
      166     7127    1   DCL BLANK CHAR(1) CONSTANT INIT(' ');
      167     7128
      168     7129        /***
      169     7130         *** AUTO
      170     7131         ***/
      171     7132
      172     7133    1   DCL TEMP SBIN AUTO;
      173     7134
      174     7135         /***
      175     7136          *** FPT
      176     7137          ***/
      177     7138
      178     7139        %FPT_WRITE( FPTN=TELL_TIME_MSG,
      179     7140                    DCB=M$LO );
      180     7171
      181     7172        /***************************************/
      182     7173
      183     7174    1      CALL M$TIME( GET_NOW_UTS );
      184     7175
      185     7176    1      TELL_TIME_MSG.BUF_ = VECTOR(BLANK);
      186     7177    1      CALL M$WRITE( TELL_TIME_MSG );
      187     7178    1      TELL_TIME_MSG.BUF_ = VECTOR(TIME_MSG);
      188     7179
      189     7180    1      IF TOTAL_FILES > 0
      190     7181    2       THEN DO;
      191     7182    2         TIME_MSG.ITEM_NAME = 'Total files';
      192     7183    2         CALL BINCHAR( TIME_MSG.TIME, TOTAL_FILES);
      193     7184    2         CALL EDITCHAR( TIME_MSG.TIME, , , NO_10_LEADING_ZEROS, TIME_MSG.TIME );
      194     7185    2         CALL M$WRITE( TELL_TIME_MSG );
      195     7186    2         TIME_MSG.ITEM_NAME = 'Total granules';
      196     7187    2         CALL BINCHAR( TIME_MSG.TIME, TOTAL_GRANS);
PL6.E3A0      #003=FLI$STATS File=FLI$UTIL.:E05TSI                               TUE 07/29/97 15:59 Page:33   
      197     7188    2         CALL EDITCHAR( TIME_MSG.TIME, , , NO_10_LEADING_ZEROS, TIME_MSG.TIME );
      198     7189    2         CALL M$WRITE( TELL_TIME_MSG );
      199     7190    2         END;
      200     7191
      201     7192    1      CALL XUD$UTS_DIFF(TEMP,NOW_UTS,START_UTS);
      202     7193    1      IF TEMP > 0 AND NOT TEST_MODE
      203     7194    2       THEN DO;
      204     7195    2         TIME_MSG.ITEM_NAME = 'Elapsed time ';
      205     7196    2         CALL FLI$ELAPSED_UTS_TO_TIME( TEMP, TIME_MSG.TIME );
      206     7197    2         CALL M$WRITE( TELL_TIME_MSG );
      207     7198    2         END;
      208     7199
      209     7200    1      IF ACCUMULATED_MOUNT_TIME > 0 AND NOT TEST_MODE
      210     7201    2       THEN DO;
      211     7202    2         TIME_MSG.ITEM_NAME = 'Mount time ';
      212     7203    2         CALL FLI$ELAPSED_UTS_TO_TIME( ACCUMULATED_MOUNT_TIME, TIME_MSG.TIME );
      213     7204    2         CALL M$WRITE( TELL_TIME_MSG );
      214     7205    2         END;
      215     7206
      216     7207    1      IF ACCUMULATED_SPIN_TIME > 0 AND NOT TEST_MODE
      217     7208    2       THEN DO;
      218     7209    2         TIME_MSG.ITEM_NAME = 'Spin time ';
      219     7210    2         CALL FLI$ELAPSED_UTS_TO_TIME( ACCUMULATED_SPIN_TIME, TIME_MSG.TIME );
      220     7211    2         CALL M$WRITE( TELL_TIME_MSG );
      221     7212    2         END;
      222     7213
      223     7214    1      IF ACCUMULATED_BREAK_TIME > 0 AND NOT TEST_MODE
      224     7215    2       THEN DO;
      225     7216    2         TIME_MSG.ITEM_NAME = 'Break time ';
      226     7217    2         CALL FLI$ELAPSED_UTS_TO_TIME( ACCUMULATED_BREAK_TIME, TIME_MSG.TIME );
      227     7218    2         CALL M$WRITE( TELL_TIME_MSG );
      228     7219    2         END;
      229     7220
      230     7221    1      RETURN;
      231     7222
      232     7223    1   END FLI$STATS;
      233     7224        %EOD;
PL6.E3A0      #003=FLI$STATS File=FLI$UTIL.:E05TSI                               TUE 07/29/97 15:59 Page:34   

PL6.E3A0      #003=FLI$STATS File=FLI$UTIL.:E05TSI                               TUE 07/29/97 15:59 Page:35   
--  Include file information  --

   XUD_UTS_M.:E05TOU  is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FLI$STATS.

   Procedure FLI$STATS requires 111 words for executable code.
   Procedure FLI$STATS requires 8 words of local(AUTO) storage.

PL6.E3A0      #003=FLI$STATS File=FLI$UTIL.:E05TSI                               TUE 07/29/97 15:59 Page:36   

 Object Unit name= FLI$STATS                                  File name= FLI$UTIL.:E05TOU
 UTS= JUL 29 '97 15:59:24.36 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$PRE_RET
    2   Data  even  none    26     32  FLI$STATS
    3   DCB   even  none     0      0  M$LO
    4  RoData even  UTS     21     25  FLI$STATS
    5   Proc  even  none   111    157  FLI$STATS
    6  RoData even  none    13     15  FLI$STATS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     5      0   yes            yes      Std        0  FLI$STATS

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       3 XUD$UTS_DIFF
         yes           Std       2 FLI$ELAPSED_UTS_TO_TIME
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #003=FLI$STATS File=FLI$UTIL.:E05TSI                               TUE 07/29/97 15:59 Page:37   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  TAPE_DCBLIST$                         SNVECLIST$
     NOW_UTS                               GET_NOW_UTS                           START_UTS
     ACCUMULATED_MOUNT_TIME                ACCUMULATED_SPIN_TIME                 ACCUMULATED_BREAK_TIME
     DPLIST$                               DPRESLIST$                            DISK_FILE_SPEC$
     SPECCHARS                             EFTWORD                               TOTAL_FILES
     TOTAL_GRANS                      r    NO_10_LEADING_ZEROS                   M$PRE_RET
     RET_CMDS_NAME                         TEST_MODE                             M$LO
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #003=FLI$STATS File=FLI$UTIL.:E05TSI                               TUE 07/29/97 15:59 Page:38   


      123        1        /*T***********************************************************/
      124        2        /*T*                                                         */
      125        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      126        4        /*T*                                                         */
      127        5        /*T***********************************************************/
      128        6        FLI$STATS: PROC;

      6  5 000000   000000 700200 xent  FLI$STATS    TSX0  ! X66_AUTO_0
         5 000001   000010 000000                    ZERO    8,0

      129        7        /*F*  NAME: FLI$STATS
      130        8              PURPOSE: Print statistics of run.
      131        9         */
      132       10
      133       11         /***
      134       12          *** INCLUDE
      135       13          ***/
      136       14
      137       15        %INCLUDE CP_6;
      138     5574        %INCLUDE FLI_DATA_R;
      139     6988        %INCLUDE XUD_UTS_M;
      140     7070
      141     7071         /***
      142     7072          *** ENTRY
      143     7073          ***/
      144     7074
      145     7075    1   DCL FLI$ELAPSED_UTS_TO_TIME ENTRY(2);
      146     7076        %XUD$UTS_ENTRIES;
      147     7108
      148     7109         /***
      149     7110          *** DCB
      150     7111          ***/
      151     7112
      152     7113    1   DCL M$LO DCB;
      153     7114
      154     7115         /***
PL6.E3A0      #003=FLI$STATS File=FLI$UTIL.:E05TSI                               TUE 07/29/97 15:59 Page:39   
      155     7116          *** STATIC
      156     7117          ***/
      157     7118
      158     7119    1   DCL 1 TIME_MSG STATIC,
      159     7120    1         2 ITEM_NAME CHAR(17),
      160     7121    1         2 TIME CHAR(11);
      161     7122
      162     7123        /***
      163     7124         *** CONSTANT
      164     7125         ***/
      165     7126
      166     7127    1   DCL BLANK CHAR(1) CONSTANT INIT(' ');
      167     7128
      168     7129        /***
      169     7130         *** AUTO
      170     7131         ***/
      171     7132
      172     7133    1   DCL TEMP SBIN AUTO;
      173     7134
      174     7135         /***
      175     7136          *** FPT
      176     7137          ***/
      177     7138
      178     7139        %FPT_WRITE( FPTN=TELL_TIME_MSG,
      179     7140                    DCB=M$LO );
      180     7171
      181     7172        /***************************************/
      182     7173
      183     7174    1      CALL M$TIME( GET_NOW_UTS );

   7174  5 000002   000000 630400 xsym               EPPR0   GET_NOW_UTS
         5 000003   020004 713400                    CLIMB   8196
         5 000004   402000 401760                    pmme    nvectors=5

      184     7175
      185     7176    1      TELL_TIME_MSG.BUF_ = VECTOR(BLANK);

PL6.E3A0      #003=FLI$STATS File=FLI$UTIL.:E05TSI                               TUE 07/29/97 15:59 Page:40   
   7176  5 000005   000000 237000 6                  LDAQ    0
         5 000006   000022 757000 2                  STAQ    TELL_TIME_MSG+4

      186     7177    1      CALL M$WRITE( TELL_TIME_MSG );

   7177  5 000007   000016 630400 2                  EPPR0   TELL_TIME_MSG
         5 000010   040001 713400                    CLIMB   write
         5 000011   401400 401760                    pmme    nvectors=4

      187     7178    1      TELL_TIME_MSG.BUF_ = VECTOR(TIME_MSG);

   7178  5 000012   000002 237000 6                  LDAQ    2
         5 000013   000022 757000 2                  STAQ    TELL_TIME_MSG+4

      188     7179
      189     7180    1      IF TOTAL_FILES > 0

   7180  5 000014   000000 235000 xsym               LDA     TOTAL_FILES
         5 000015   000050 604400 5                  TMOZ    s:7192

      190     7181    2       THEN DO;

      191     7182    2         TIME_MSG.ITEM_NAME = 'Total files';

   7182  5 000016   040000 100400                    MLR     fill='040'O
         5 000017   000001 000013 4                  ADSC9   BLANK+1                  cn=0,n=11
         5 000020   000006 000021 2                  ADSC9   TIME_MSG                 cn=0,n=17

      192     7183    2         CALL BINCHAR( TIME_MSG.TIME, TOTAL_FILES);

   7183  5 000021   000000 301400                    BTD
         5 000022   000000 000004 xsym               NDSC9   TOTAL_FILES              cn=0,s=lsgnf,sf=0,n=4
         5 000023   000012 230013 2                  NDSC9   TIME_MSG+4               cn=1,s=nosgn,sf=0,n=11

      193     7184    2         CALL EDITCHAR( TIME_MSG.TIME, , , NO_10_LEADING_ZEROS, TIME_MSG.TIME );

   7184  5 000024   000000 024400                    MVNE
PL6.E3A0      #003=FLI$STATS File=FLI$UTIL.:E05TSI                               TUE 07/29/97 15:59 Page:41   
         5 000025   000012 230013 2                  NDSC9   TIME_MSG+4               cn=1,s=nosgn,sf=0,n=11
         5 000026   000000 000003 xsym               ADSC9   NO_10_LEADING_ZEROS      cn=0,n=3
         5 000027   000012 200013 2                  ADSC9   TIME_MSG+4               cn=1,n=11

      194     7185    2         CALL M$WRITE( TELL_TIME_MSG );

   7185  5 000030   000016 630400 2                  EPPR0   TELL_TIME_MSG
         5 000031   040001 713400                    CLIMB   write
         5 000032   401400 401760                    pmme    nvectors=4

      195     7186    2         TIME_MSG.ITEM_NAME = 'Total granules';

   7186  5 000033   040000 100400                    MLR     fill='040'O
         5 000034   000004 000016 4                  ADSC9   BLANK+4                  cn=0,n=14
         5 000035   000006 000021 2                  ADSC9   TIME_MSG                 cn=0,n=17

      196     7187    2         CALL BINCHAR( TIME_MSG.TIME, TOTAL_GRANS);

   7187  5 000036   000000 301400                    BTD
         5 000037   000000 000004 xsym               NDSC9   TOTAL_GRANS              cn=0,s=lsgnf,sf=0,n=4
         5 000040   000012 230013 2                  NDSC9   TIME_MSG+4               cn=1,s=nosgn,sf=0,n=11

      197     7188    2         CALL EDITCHAR( TIME_MSG.TIME, , , NO_10_LEADING_ZEROS, TIME_MSG.TIME );

   7188  5 000041   000000 024400                    MVNE
         5 000042   000012 230013 2                  NDSC9   TIME_MSG+4               cn=1,s=nosgn,sf=0,n=11
         5 000043   000000 000003 xsym               ADSC9   NO_10_LEADING_ZEROS      cn=0,n=3
         5 000044   000012 200013 2                  ADSC9   TIME_MSG+4               cn=1,n=11

      198     7189    2         CALL M$WRITE( TELL_TIME_MSG );

   7189  5 000045   000016 630400 2                  EPPR0   TELL_TIME_MSG
         5 000046   040001 713400                    CLIMB   write
         5 000047   401400 401760                    pmme    nvectors=4

      199     7190    2         END;

PL6.E3A0      #003=FLI$STATS File=FLI$UTIL.:E05TSI                               TUE 07/29/97 15:59 Page:42   
      200     7191
      201     7192    1      CALL XUD$UTS_DIFF(TEMP,NOW_UTS,START_UTS);

   7192  5 000050   000004 236000 6                  LDQ     4
         5 000051   200006 756100                    STQ     TEMP+3,,AUTO
         5 000052   000005 236000 6                  LDQ     5
         5 000053   200005 756100                    STQ     TEMP+2,,AUTO
         5 000054   200003 630500                    EPPR0   TEMP,,AUTO
         5 000055   200004 450500                    STP0    TEMP+1,,AUTO
         5 000056   200004 630500                    EPPR0   TEMP+1,,AUTO
         5 000057   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 000060   000000 701000 xent               TSX1    XUD$UTS_DIFF
         5 000061   000000 011000                    NOP     0

      202     7193    1      IF TEMP > 0 AND NOT TEST_MODE

   7193  5 000062   200003 235100                    LDA     TEMP,,AUTO
         5 000063   000104 604400 5                  TMOZ    s:7200
         5 000064   000000 234000 xsym               SZN     TEST_MODE
         5 000065   000104 604000 5                  TMI     s:7200

      203     7194    2       THEN DO;

      204     7195    2         TIME_MSG.ITEM_NAME = 'Elapsed time ';

   7195  5 000066   040000 100400                    MLR     fill='040'O
         5 000067   000010 000015 4                  ADSC9   BLANK+8                  cn=0,n=13
         5 000070   000006 000021 2                  ADSC9   TIME_MSG                 cn=0,n=17

      205     7196    2         CALL FLI$ELAPSED_UTS_TO_TIME( TEMP, TIME_MSG.TIME );

   7196  5 000071   000006 236000 6                  LDQ     6
         5 000072   200005 756100                    STQ     TEMP+2,,AUTO
         5 000073   200003 630500                    EPPR0   TEMP,,AUTO
         5 000074   200004 450500                    STP0    TEMP+1,,AUTO
         5 000075   200004 630500                    EPPR0   TEMP+1,,AUTO
         5 000076   000020 631400 xsym               EPPR1   B_VECTNIL+16
PL6.E3A0      #003=FLI$STATS File=FLI$UTIL.:E05TSI                               TUE 07/29/97 15:59 Page:43   
         5 000077   000000 701000 xent               TSX1    FLI$ELAPSED_UTS_TO_TIME
         5 000100   000000 011000                    NOP     0

      206     7197    2         CALL M$WRITE( TELL_TIME_MSG );

   7197  5 000101   000016 630400 2                  EPPR0   TELL_TIME_MSG
         5 000102   040001 713400                    CLIMB   write
         5 000103   401400 401760                    pmme    nvectors=4

      207     7198    2         END;

      208     7199
      209     7200    1      IF ACCUMULATED_MOUNT_TIME > 0 AND NOT TEST_MODE

   7200  5 000104   000000 235000 xsym               LDA     ACCUMULATED_MOUNT_TIME
         5 000105   000122 600000 5                  TZE     s:7207
         5 000106   000000 234000 xsym               SZN     TEST_MODE
         5 000107   000122 604000 5                  TMI     s:7207

      210     7201    2       THEN DO;

      211     7202    2         TIME_MSG.ITEM_NAME = 'Mount time ';

   7202  5 000110   040000 100400                    MLR     fill='040'O
         5 000111   000014 000013 4                  ADSC9   BLANK+12                 cn=0,n=11
         5 000112   000006 000021 2                  ADSC9   TIME_MSG                 cn=0,n=17

      212     7203    2         CALL FLI$ELAPSED_UTS_TO_TIME( ACCUMULATED_MOUNT_TIME, TIME_MSG.TIME );

   7203  5 000113   000007 630400 6                  EPPR0   7
         5 000114   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000115   000000 701000 xent               TSX1    FLI$ELAPSED_UTS_TO_TIME
         5 000116   000000 011000                    NOP     0

      213     7204    2         CALL M$WRITE( TELL_TIME_MSG );

   7204  5 000117   000016 630400 2                  EPPR0   TELL_TIME_MSG
PL6.E3A0      #003=FLI$STATS File=FLI$UTIL.:E05TSI                               TUE 07/29/97 15:59 Page:44   
         5 000120   040001 713400                    CLIMB   write
         5 000121   401400 401760                    pmme    nvectors=4

      214     7205    2         END;

      215     7206
      216     7207    1      IF ACCUMULATED_SPIN_TIME > 0 AND NOT TEST_MODE

   7207  5 000122   000000 235000 xsym               LDA     ACCUMULATED_SPIN_TIME
         5 000123   000140 600000 5                  TZE     s:7214
         5 000124   000000 234000 xsym               SZN     TEST_MODE
         5 000125   000140 604000 5                  TMI     s:7214

      217     7208    2       THEN DO;

      218     7209    2         TIME_MSG.ITEM_NAME = 'Spin time ';

   7209  5 000126   040000 100400                    MLR     fill='040'O
         5 000127   000017 000012 4                  ADSC9   BLANK+15                 cn=0,n=10
         5 000130   000006 000021 2                  ADSC9   TIME_MSG                 cn=0,n=17

      219     7210    2         CALL FLI$ELAPSED_UTS_TO_TIME( ACCUMULATED_SPIN_TIME, TIME_MSG.TIME );

   7210  5 000131   000011 630400 6                  EPPR0   9
         5 000132   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000133   000000 701000 xent               TSX1    FLI$ELAPSED_UTS_TO_TIME
         5 000134   000000 011000                    NOP     0

      220     7211    2         CALL M$WRITE( TELL_TIME_MSG );

   7211  5 000135   000016 630400 2                  EPPR0   TELL_TIME_MSG
         5 000136   040001 713400                    CLIMB   write
         5 000137   401400 401760                    pmme    nvectors=4

      221     7212    2         END;

      222     7213
PL6.E3A0      #003=FLI$STATS File=FLI$UTIL.:E05TSI                               TUE 07/29/97 15:59 Page:45   
      223     7214    1      IF ACCUMULATED_BREAK_TIME > 0 AND NOT TEST_MODE

   7214  5 000140   000000 235000 xsym               LDA     ACCUMULATED_BREAK_TIME
         5 000141   000156 600000 5                  TZE     s:7221
         5 000142   000000 234000 xsym               SZN     TEST_MODE
         5 000143   000156 604000 5                  TMI     s:7221

      224     7215    2       THEN DO;

      225     7216    2         TIME_MSG.ITEM_NAME = 'Break time ';

   7216  5 000144   040000 100400                    MLR     fill='040'O
         5 000145   000022 000013 4                  ADSC9   BLANK+18                 cn=0,n=11
         5 000146   000006 000021 2                  ADSC9   TIME_MSG                 cn=0,n=17

      226     7217    2         CALL FLI$ELAPSED_UTS_TO_TIME( ACCUMULATED_BREAK_TIME, TIME_MSG.TIME );

   7217  5 000147   000013 630400 6                  EPPR0   11
         5 000150   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000151   000000 701000 xent               TSX1    FLI$ELAPSED_UTS_TO_TIME
         5 000152   000000 011000                    NOP     0

      227     7218    2         CALL M$WRITE( TELL_TIME_MSG );

   7218  5 000153   000016 630400 2                  EPPR0   TELL_TIME_MSG
         5 000154   040001 713400                    CLIMB   write
         5 000155   401400 401760                    pmme    nvectors=4

      228     7219    2         END;

      229     7220
      230     7221    1      RETURN;

   7221  5 000156   000000 702200 xent               TSX2  ! X66_ARET
      231     7222
      232     7223    1   END FLI$STATS;
      233     7224        %EOD;
PL6.E3A0      #003=FLI$STATS File=FLI$UTIL.:E05TSI                               TUE 07/29/97 15:59 Page:46   

PL6.E3A0      #003=FLI$STATS File=FLI$UTIL.:E05TSI                               TUE 07/29/97 15:59 Page:47   
--  Include file information  --

   XUD_UTS_M.:E05TOU  is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FLI$STATS.
PL6.E3A0      #003=FLI$STATS File=FLI$UTIL.:E05TSI                               TUE 07/29/97 15:59 Page:48   

 **** Variables and constants ****

  ****  Section 002  Data  FLI$STATS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    16-0-0/d STRC(432)   r     1 TELL_TIME_MSG              6-0-0/c STRC(252)   r     1 TIME_MSG

  ****  Section 004 RoData FLI$STATS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR        r     1 BLANK

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w SBIN        r     1 TEMP

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 ACCUMULATED_BREAK_TIME
     0-0-0/w UBIN        r     1 ACCUMULATED_MOUNT_TIME
     0-0-0/w UBIN        r     1 ACCUMULATED_SPIN_TIME
     0-0-0/w PTR         r     1 DISK_FILE_SPEC$            0-0-0/w PTR         r     1 DPLIST$
     0-0-0/w PTR         r     1 DPRESLIST$                 0-0-0/d STRC(432)   r     1 GET_NOW_UTS
     0-0-0/w UBIN        r     1 NOW_UTS
     0-0-0/c BIT (9)     r     1 NO_10_LEADING_ZEROS(0:2)
     0-0-0/c ASTR(9)     r     1 RET_CMDS_NAME              0-0-0/w PTR         r     1 SNVECLIST$
     0-0-0/w UBIN        r     1 START_UTS                  0-0-0/w PTR         r     1 TAPE_DCBLIST$
PL6.E3A0      #003=FLI$STATS File=FLI$UTIL.:E05TSI                               TUE 07/29/97 15:59 Page:49   
     0-0-0/b BIT         r     1 TEST_MODE                  0-0-0/w SBIN        r     1 TOTAL_FILES
     0-0-0/w SBIN        r     1 TOTAL_GRANS

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0N  NULL        r     1 M$LO


   Procedure FLI$STATS requires 111 words for executable code.
   Procedure FLI$STATS requires 8 words of local(AUTO) storage.
PL6.E3A0      #003=FLI$STATS File=FLI$UTIL.:E05TSI                               TUE 07/29/97 15:59 Page:50   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=FLI$STATS File=FLI$UTIL.:E05TSI                               TUE 07/29/97 15:59 Page:51   
          MINI XREF LISTING

ACCUMULATED_BREAK_TIME
      6534**DCL      7214>>IF       7217<>CALL
ACCUMULATED_MOUNT_TIME
      6534**DCL      7200>>IF       7203<>CALL
ACCUMULATED_SPIN_TIME
      6534**DCL      7207>>IF       7210<>CALL
BLANK
      7127**DCL      7176--ASSIGN
DISK_CLOSE.SN_
      6185**DCL      6185--REDEF
DISK_CLOSE.UTL_
      6186**DCL      6186--REDEF
DISK_CLOSE.V.EXPIRE#
      6200**DCL      6200--REDEF
DISK_CLOSE.V.TYPE#
      6198**DCL      6198--REDEF
DISK_CLOSE.V.XTNSIZE#
      6195**DCL      6195--REDEF    6197--REDEF
DISK_FILE_SPEC.SPEC
      6550**DCL      6552--REDEF
DISK_FILE_SPEC.SPEC.START
      6551**DCL      6551--REDEF
DISK_FILE_SPEC.SPEC.STOP
      6552**DCL      6552--REDEF
DISK_FILE_SPEC$
      6549**DCL      6550--IMP-PTR
DISK_OPEN.ACSVEH_
      6050**DCL      6051--REDEF
DISK_OPEN.ALTKEYS_
      6056**DCL      6057--REDEF    6057--REDEF
DISK_OPEN.HDR_
      6055**DCL      6056--REDEF
PL6.E3A0      #003=FLI$STATS File=FLI$UTIL.:E05TSI                               TUE 07/29/97 15:59 Page:52   
DISK_OPEN.TAB_
      6054**DCL      6055--REDEF
DISK_OPEN.UHL_
      6048**DCL      6049--REDEF    6049--REDEF
DISK_OPEN.V.FSN#
      6088**DCL      6088--REDEF    6088--REDEF
DISK_OPEN.WSN_
      6054**DCL      6054--REDEF
DISK_READ.STATION_
      6112**DCL      6113--REDEF
DISK_READ.V.DVBYTE.REREAD#
      6124**DCL      6124--REDEF
DISK_READ.V.INDX#
      6122**DCL      6122--REDEF
DISK_WRITE.STATION_
      6150**DCL      6150--REDEF
DISK_WRITE.V.DVBYTE.VFC#
      6157**DCL      6157--REDEF
DPLIST$
      6535**DCL      6547--IMP-PTR
DPRESLIST$
      6549**DCL      6549--IMP-PTR
EFTWORD
      6670**DCL      6670--REDEF
FLI$ELAPSED_UTS_TO_TIME
      7075**DCL-ENT  7196--CALL     7203--CALL     7210--CALL     7217--CALL
FPT_EXIT.V.STEPCC#
      5975**DCL      5975--REDEF
GET_NOW_UTS
      6526**DCL      7174<>CALL
M$TIME
      5569**DCL-ENT  7174--CALL
M$WRITE
      5503**DCL-ENT  7177--CALL     7185--CALL     7189--CALL     7197--CALL     7204--CALL     7211--CALL
      7218--CALL
NOW_UTS
PL6.E3A0      #003=FLI$STATS File=FLI$UTIL.:E05TSI                               TUE 07/29/97 15:59 Page:53   
      6514**DCL      7192<>CALL
NO_10_LEADING_ZEROS
      6676**DCL      7184>>CALLBLT  7188>>CALLBLT
PRE_RET_CLOSE.SN_
      6913**DCL      6913--REDEF
PRE_RET_CLOSE.UTL_
      6914**DCL      6914--REDEF
PRE_RET_CLOSE.V.EXPIRE#
      6928**DCL      6928--REDEF
PRE_RET_CLOSE.V.TYPE#
      6926**DCL      6926--REDEF
PRE_RET_CLOSE.V.XTNSIZE#
      6923**DCL      6923--REDEF    6925--REDEF
PRE_RET_OPEN.ACSVEH_
      6848**DCL      6849--REDEF
PRE_RET_OPEN.ALTKEYS_
      6854**DCL      6855--REDEF    6855--REDEF
PRE_RET_OPEN.HDR_
      6853**DCL      6854--REDEF
PRE_RET_OPEN.TAB_
      6852**DCL      6853--REDEF
PRE_RET_OPEN.UHL_
      6846**DCL      6847--REDEF    6847--REDEF
PRE_RET_OPEN.V.FSN#
      6886**DCL      6886--REDEF    6886--REDEF
PRE_RET_OPEN.WSN_
      6852**DCL      6852--REDEF
PRE_RET_READ.STATION_
      6703**DCL      6704--REDEF
PRE_RET_READ.V.DVBYTE.REREAD#
      6715**DCL      6715--REDEF
PRE_RET_READ.V.INDX#
      6713**DCL      6713--REDEF
PRE_RET_WRITE.STATION_
      6741**DCL      6741--REDEF
PRE_RET_WRITE.V.DVBYTE.VFC#
PL6.E3A0      #003=FLI$STATS File=FLI$UTIL.:E05TSI                               TUE 07/29/97 15:59 Page:54   
      6748**DCL      6748--REDEF
RET_CMDS_NAME.L#
      6957**DCL      6957--IMP-SIZ
SNVECLIST$
      6489**DCL      6489--IMP-PTR
SPEC.START
      6553**DCL      6554--REDEF
SPEC.STOP
      6554**DCL      6555--REDEF
SPECCHARS
      6553**DCL      6553--REDEF
START_UTS
      6534**DCL      7192<>CALL
TAPE_CLOSE.SN_
      6406**DCL      6406--REDEF
TAPE_CLOSE.UTL_
      6407**DCL      6407--REDEF
TAPE_CLOSE.V.EXPIRE#
      6421**DCL      6421--REDEF
TAPE_CLOSE.V.TYPE#
      6419**DCL      6419--REDEF
TAPE_CLOSE.V.XTNSIZE#
      6416**DCL      6416--REDEF    6418--REDEF
TAPE_DCBLIST$
      5962**DCL      5962--IMP-PTR
TAPE_OPEN.ACSVEH_
      6271**DCL      6272--REDEF
TAPE_OPEN.ALTKEYS_
      6277**DCL      6278--REDEF    6278--REDEF
TAPE_OPEN.HDR_
      6276**DCL      6277--REDEF
TAPE_OPEN.TAB_
      6275**DCL      6276--REDEF
TAPE_OPEN.UHL_
      6269**DCL      6270--REDEF    6270--REDEF
TAPE_OPEN.V.FSN#
PL6.E3A0      #003=FLI$STATS File=FLI$UTIL.:E05TSI                               TUE 07/29/97 15:59 Page:55   
      6309**DCL      6309--REDEF    6309--REDEF
TAPE_OPEN.WSN_
      6275**DCL      6275--REDEF
TAPE_READ.STATION_
      6333**DCL      6334--REDEF
TAPE_READ.V.DVBYTE.REREAD#
      6345**DCL      6345--REDEF
TAPE_READ.V.INDX#
      6343**DCL      6343--REDEF
TAPE_WRITE.STATION_
      6371**DCL      6371--REDEF
TAPE_WRITE.V.DVBYTE.VFC#
      6378**DCL      6378--REDEF
TELL_TIME_MSG
      7157**DCL      7177<>CALL     7185<>CALL     7189<>CALL     7197<>CALL     7204<>CALL     7211<>CALL
      7218<>CALL
TELL_TIME_MSG.BUF_
      7157**DCL      7176<<ASSIGN   7178<<ASSIGN
TELL_TIME_MSG.STATION_
      7159**DCL      7159--REDEF
TELL_TIME_MSG.V
      7160**DCL      7157--DCLINIT
TELL_TIME_MSG.V.DVBYTE.VFC#
      7166**DCL      7166--REDEF
TEMP
      7133**DCL      7192<>CALL     7193>>IF       7196<>CALL
TEST_MODE
      6987**DCL      7193>>IF       7200>>IF       7207>>IF       7214>>IF
TIME_MSG
      7119**DCL      7178--ASSIGN
TIME_MSG.ITEM_NAME
      7120**DCL      7182<<ASSIGN   7186<<ASSIGN   7195<<ASSIGN   7202<<ASSIGN   7209<<ASSIGN   7216<<ASSIGN
TIME_MSG.TIME
      7121**DCL      7183<<CALLBLT  7184<<CALLBLT  7184>>CALLBLT  7187<<CALLBLT  7188<<CALLBLT  7188>>CALLBLT
      7196<>CALL     7203<>CALL     7210<>CALL     7217<>CALL
TOTAL_FILES
PL6.E3A0      #003=FLI$STATS File=FLI$UTIL.:E05TSI                               TUE 07/29/97 15:59 Page:56   
      6675**DCL      7180>>IF       7183>>CALLBLT
TOTAL_GRANS
      6675**DCL      7187>>CALLBLT
TVECTOR.W2
      6502**DCL      6503--REDEF
XUD$UTS_DIFF
      7077**DCL-ENT  7192--CALL

PL6.E3A0      #004=FLI$SPIN_CHK File=FLI$UTIL.:E05TSI                            TUE 07/29/97 15:59 Page:57   
      234        1        /*T***********************************************************/
      235        2        /*T*                                                         */
      236        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      237        4        /*T*                                                         */
      238        5        /*T***********************************************************/
      239        6        FLI$SPIN_CHK: PROC( SINCE_UTS, BIX );
      240        7        /*F*  NAME: FLI$SPIN_CHK
      241        8              PURPOSE: Checks for spinning too long.  Asks operator
      242        9                 for instructions.
      243       10         */
      244       11
      245       12    1   DCL SINCE_UTS UBIN WORD ALIGNED;        /* UTS when wait began                */
      246       13    1   DCL BIX SBIN ALIGNED;                   /* Index of outstanding I/O           */
      247       14
      248       15        %INCLUDE CP_6;
      249     5574        %INCLUDE FLI_DATA_R;
      250     6988        %INCLUDE XUD_UTS_M;
      251     7070
      252     7071         /***
      253     7072          *** ENTRY
      254     7073          ***/
      255     7074
      256     7075    1   DCL FLI$ELAPSED_UTS_TO_TIME ENTRY(2);
      257     7076        %XUD$UTS_ENTRIES;
      258     7108
      259     7109         /***
      260     7110          *** CONSTANT
      261     7111          ***/
      262     7112
      263     7113    1   DCL 1 TELL_OPER_1 STATIC,
      264     7114    1         2 * CHAR(0) INIT( ' *** EFT has been stuck waiting for I/O for ' ),
      265     7115    1         2 TIME CHAR(8),
      266     7116    1         2 * CHAR(0) INIT( ' ***' );
      267     7117    1   DCL 1 TELL_OPER_2 STATIC,
      268     7118    1         2 * CHAR(0) INIT( ' *** Please ready affected device or X me ***' );
      269     7119
      270     7120         /***
PL6.E3A0      #004=FLI$SPIN_CHK File=FLI$UTIL.:E05TSI                            TUE 07/29/97 15:59 Page:58   
      271     7121          *** AUTO
      272     7122          ***/
      273     7123
      274     7124    1   DCL ELAPSED_UTS UBIN WORD AUTO;
      275     7125    1   DCL I SBIN AUTO;
      276     7126    1   DCL NOT_READY BIT(1) AUTO;
      277     7127
      278     7128         /***
      279     7129          *** FPT
      280     7130          ***/
      281     7131
      282     7132        %FPT_KEYIN( FPTN=ASK_OPER,
      283     7133                    REPLY=NIL );
      284     7152
      285     7153        /****************************************/
      286     7154
      287     7155    1      IF ADDR(BIX) = ADDR(NIL)
      288     7156    2       THEN DO;                            /* Not waiting for any particular I/O */
      289     7157    2         NOT_READY = '0'B;
      290     7158    3         DO I=1 TO MAX_IOS;
      291     7159    3            IF OUTSTANDING_IO.NOT_READY(I)
      292     7160    4             THEN DO;                      /* Found one that we're waiting for   */
      293     7161    4               NOT_READY = '1'B;
      294     7162    4               END;
      295     7163    3            END;
      296     7164    2         IF NOT NOT_READY
      297     7165    2          THEN CALL M$XXX;                 /* What, then, are we waiting for???  */
      298     7166    2         END;
      299     7167
      300     7168    1      CALL M$TIME( GET_NOW_UTS );
      301     7169    1      CALL XUD$UTS_DIFF(ELAPSED_UTS,NOW_UTS,SINCE_UTS);
      302     7170
      303     7171    1      IF ELAPSED_UTS < 12000
      304     7172    1       THEN RETURN;                        /* Waiting for less than two minutes  */
      305     7173
      306     7174    1      CALL FLI$ELAPSED_UTS_TO_TIME( ELAPSED_UTS, TELL_OPER_1.TIME );
      307     7175
PL6.E3A0      #004=FLI$SPIN_CHK File=FLI$UTIL.:E05TSI                            TUE 07/29/97 15:59 Page:59   
      308     7176    1      ASK_OPER.MESS_ = VECTOR(TELL_OPER_1);
      309     7177    1      CALL M$KEYIN( ASK_OPER );
      310     7178
      311     7179    1      ASK_OPER.MESS_ = VECTOR(TELL_OPER_2);
      312     7180    1      CALL M$KEYIN( ASK_OPER );
      313     7181
      314     7182    1      RETURN;
      315     7183
      316     7184    1   END FLI$SPIN_CHK;
      317     7185        %EOD;

PL6.E3A0      #004=FLI$SPIN_CHK File=FLI$UTIL.:E05TSI                            TUE 07/29/97 15:59 Page:60   
--  Include file information  --

   XUD_UTS_M.:E05TOU  is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FLI$SPIN_CHK.

   Procedure FLI$SPIN_CHK requires 60 words for executable code.
   Procedure FLI$SPIN_CHK requires 12 words of local(AUTO) storage.

PL6.E3A0      #004=FLI$SPIN_CHK File=FLI$UTIL.:E05TSI                            TUE 07/29/97 15:59 Page:61   

 Object Unit name= FLI$SPIN_CHK                               File name= FLI$UTIL.:E05TOU
 UTS= JUL 29 '97 15:59:44.64 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$PRE_RET
    2   Data  even  none    46     56  FLI$SPIN_CHK
    3   Proc  even  none    60     74  FLI$SPIN_CHK
    4  RoData even  none     6      6  FLI$SPIN_CHK

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes            yes      Std        2  FLI$SPIN_CHK

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       3 XUD$UTS_DIFF
         yes           Std       2 FLI$ELAPSED_UTS_TO_TIME
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #004=FLI$SPIN_CHK File=FLI$UTIL.:E05TSI                            TUE 07/29/97 15:59 Page:62   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  TAPE_DCBLIST$                         SNVECLIST$
     MAX_IOS                               OUTSTANDING_IO                        NOW_UTS
     GET_NOW_UTS                           DPLIST$                               DPRESLIST$
     DISK_FILE_SPEC$                       SPECCHARS                             EFTWORD
     M$PRE_RET                             RET_CMDS_NAME                         B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #004=FLI$SPIN_CHK File=FLI$UTIL.:E05TSI                            TUE 07/29/97 15:59 Page:63   


      234        1        /*T***********************************************************/
      235        2        /*T*                                                         */
      236        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      237        4        /*T*                                                         */
      238        5        /*T***********************************************************/
      239        6        FLI$SPIN_CHK: PROC( SINCE_UTS, BIX );

      6  3 000000   000000 700200 xent  FLI$SPIN_CHK TSX0  ! X66_AUTO_2
         3 000001   000014 000002                    ZERO    12,2

      240        7        /*F*  NAME: FLI$SPIN_CHK
      241        8              PURPOSE: Checks for spinning too long.  Asks operator
      242        9                 for instructions.
      243       10         */
      244       11
      245       12    1   DCL SINCE_UTS UBIN WORD ALIGNED;        /* UTS when wait began                */
      246       13    1   DCL BIX SBIN ALIGNED;                   /* Index of outstanding I/O           */
      247       14
      248       15        %INCLUDE CP_6;
      249     5574        %INCLUDE FLI_DATA_R;
      250     6988        %INCLUDE XUD_UTS_M;
      251     7070
      252     7071         /***
      253     7072          *** ENTRY
      254     7073          ***/
      255     7074
      256     7075    1   DCL FLI$ELAPSED_UTS_TO_TIME ENTRY(2);
      257     7076        %XUD$UTS_ENTRIES;
      258     7108
      259     7109         /***
      260     7110          *** CONSTANT
      261     7111          ***/
      262     7112
      263     7113    1   DCL 1 TELL_OPER_1 STATIC,
      264     7114    1         2 * CHAR(0) INIT( ' *** EFT has been stuck waiting for I/O for ' ),
      265     7115    1         2 TIME CHAR(8),
PL6.E3A0      #004=FLI$SPIN_CHK File=FLI$UTIL.:E05TSI                            TUE 07/29/97 15:59 Page:64   
      266     7116    1         2 * CHAR(0) INIT( ' ***' );
      267     7117    1   DCL 1 TELL_OPER_2 STATIC,
      268     7118    1         2 * CHAR(0) INIT( ' *** Please ready affected device or X me ***' );
      269     7119
      270     7120         /***
      271     7121          *** AUTO
      272     7122          ***/
      273     7123
      274     7124    1   DCL ELAPSED_UTS UBIN WORD AUTO;
      275     7125    1   DCL I SBIN AUTO;
      276     7126    1   DCL NOT_READY BIT(1) AUTO;
      277     7127
      278     7128         /***
      279     7129          *** FPT
      280     7130          ***/
      281     7131
      282     7132        %FPT_KEYIN( FPTN=ASK_OPER,
      283     7133                    REPLY=NIL );
      284     7152
      285     7153        /****************************************/
      286     7154
      287     7155    1      IF ADDR(BIX) = ADDR(NIL)

   7155  3 000002   200004 236100                    LDQ     @BIX,,AUTO
         3 000003   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000004   000030 601000 3                  TNZ     s:7168

      288     7156    2       THEN DO;                            /* Not waiting for any particular I/O */

      289     7157    2         NOT_READY = '0'B;

   7157  3 000005   200007 450100                    STZ     NOT_READY,,AUTO

      290     7158    3         DO I=1 TO MAX_IOS;

   7158  3 000006   000001 235007                    LDA     1,DL
         3 000007   200006 755100                    STA     I,,AUTO
PL6.E3A0      #004=FLI$SPIN_CHK File=FLI$UTIL.:E05TSI                            TUE 07/29/97 15:59 Page:65   
         3 000010   000021 710000 3                  TRA     s:7163+1

      291     7159    3            IF OUTSTANDING_IO.NOT_READY(I)

   7159  3 000011   200006 236100                    LDQ     I,,AUTO
         3 000012   000006 402007                    MPY     6,DL
         3 000013   000002 236006 xsym               LDQ     OUTSTANDING_IO+2,QL
         3 000014   000001 316007                    CANQ    1,DL
         3 000015   000020 600000 3                  TZE     s:7163

      292     7160    4             THEN DO;                      /* Found one that we're waiting for   */

      293     7161    4               NOT_READY = '1'B;

   7161  3 000016   400000 236003                    LDQ     -131072,DU
         3 000017   200007 756100                    STQ     NOT_READY,,AUTO

      294     7162    4               END;

      295     7163    3            END;

   7163  3 000020   200006 054100                    AOS     I,,AUTO
         3 000021   200006 236100                    LDQ     I,,AUTO
         3 000022   000000 116000 xsym               CMPQ    MAX_IOS
         3 000023   000011 604400 3                  TMOZ    s:7159

      296     7164    2         IF NOT NOT_READY

   7164  3 000024   200007 234100                    SZN     NOT_READY,,AUTO
         3 000025   000030 604000 3                  TMI     s:7168

      297     7165    2          THEN CALL M$XXX;                 /* What, then, are we waiting for???  */

   7165  3 000026   000003 713400                    CLIMB   3
         3 000027   000000 401760                    pmme    nvectors=0

      298     7166    2         END;
PL6.E3A0      #004=FLI$SPIN_CHK File=FLI$UTIL.:E05TSI                            TUE 07/29/97 15:59 Page:66   

      299     7167
      300     7168    1      CALL M$TIME( GET_NOW_UTS );

   7168  3 000030   000000 630400 xsym               EPPR0   GET_NOW_UTS
         3 000031   020004 713400                    CLIMB   8196
         3 000032   402000 401760                    pmme    nvectors=5

      301     7169    1      CALL XUD$UTS_DIFF(ELAPSED_UTS,NOW_UTS,SINCE_UTS);

   7169  3 000033   200003 236100                    LDQ     @SINCE_UTS,,AUTO
         3 000034   200012 756100                    STQ     NOT_READY+3,,AUTO
         3 000035   000000 236000 4                  LDQ     0
         3 000036   200011 756100                    STQ     NOT_READY+2,,AUTO
         3 000037   200005 630500                    EPPR0   ELAPSED_UTS,,AUTO
         3 000040   200010 450500                    STP0    NOT_READY+1,,AUTO
         3 000041   200010 630500                    EPPR0   NOT_READY+1,,AUTO
         3 000042   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 000043   000000 701000 xent               TSX1    XUD$UTS_DIFF
         3 000044   000000 011000                    NOP     0

      302     7170
      303     7171    1      IF ELAPSED_UTS < 12000

   7171  3 000045   200005 235100                    LDA     ELAPSED_UTS,,AUTO
         3 000046   027340 115007                    CMPA    12000,DL
         3 000047   000051 603000 3                  TRC     s:7174

      304     7172    1       THEN RETURN;                        /* Waiting for less than two minutes  */

   7172  3 000050   000000 702200 xent               TSX2  ! X66_ARET

      305     7173
      306     7174    1      CALL FLI$ELAPSED_UTS_TO_TIME( ELAPSED_UTS, TELL_OPER_1.TIME );

   7174  3 000051   000001 236000 4                  LDQ     1
         3 000052   200011 756100                    STQ     NOT_READY+2,,AUTO
PL6.E3A0      #004=FLI$SPIN_CHK File=FLI$UTIL.:E05TSI                            TUE 07/29/97 15:59 Page:67   
         3 000053   200005 630500                    EPPR0   ELAPSED_UTS,,AUTO
         3 000054   200010 450500                    STP0    NOT_READY+1,,AUTO
         3 000055   200010 630500                    EPPR0   NOT_READY+1,,AUTO
         3 000056   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000057   000000 701000 xent               TSX1    FLI$ELAPSED_UTS_TO_TIME
         3 000060   000000 011000                    NOP     0

      307     7175
      308     7176    1      ASK_OPER.MESS_ = VECTOR(TELL_OPER_1);

   7176  3 000061   000002 237000 4                  LDAQ    2
         3 000062   000042 757000 2                  STAQ    ASK_OPER+2

      309     7177    1      CALL M$KEYIN( ASK_OPER );

   7177  3 000063   000040 630400 2                  EPPR0   ASK_OPER
         3 000064   120000 713400                    CLIMB   40960
         3 000065   401400 401760                    pmme    nvectors=4

      310     7178
      311     7179    1      ASK_OPER.MESS_ = VECTOR(TELL_OPER_2);

   7179  3 000066   000004 237000 4                  LDAQ    4
         3 000067   000042 757000 2                  STAQ    ASK_OPER+2

      312     7180    1      CALL M$KEYIN( ASK_OPER );

   7180  3 000070   000040 630400 2                  EPPR0   ASK_OPER
         3 000071   120000 713400                    CLIMB   40960
         3 000072   401400 401760                    pmme    nvectors=4

      313     7181
      314     7182    1      RETURN;

   7182  3 000073   000000 702200 xent               TSX2  ! X66_ARET
      315     7183
      316     7184    1   END FLI$SPIN_CHK;
PL6.E3A0      #004=FLI$SPIN_CHK File=FLI$UTIL.:E05TSI                            TUE 07/29/97 15:59 Page:68   
      317     7185        %EOD;

PL6.E3A0      #004=FLI$SPIN_CHK File=FLI$UTIL.:E05TSI                            TUE 07/29/97 15:59 Page:69   
--  Include file information  --

   XUD_UTS_M.:E05TOU  is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FLI$SPIN_CHK.
PL6.E3A0      #004=FLI$SPIN_CHK File=FLI$UTIL.:E05TSI                            TUE 07/29/97 15:59 Page:70   

 **** Variables and constants ****

  ****  Section 002  Data  FLI$SPIN_CHK

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    40-0-0/d STRC(504)   r     1 ASK_OPER                   6-0-0/c STRC(504)   r     1 TELL_OPER_1
    24-0-0/c STRC(405)   r     1 TELL_OPER_2

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @BIX                       3-0-0/w PTR         r     1 @SINCE_UTS
    *0-0-0/w SBIN        r     1 BIX                        5-0-0/w UBIN        r     1 ELAPSED_UTS
     6-0-0/w SBIN        r     1 I                          7-0-0/b BIT         r     1 NOT_READY
    *0-0-0/w UBIN        r     1 SINCE_UTS

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 DISK_FILE_SPEC$            0-0-0/w PTR         r     1 DPLIST$
     0-0-0/w PTR         r     1 DPRESLIST$                 0-0-0/d STRC(432)   r     1 GET_NOW_UTS
     0-0-0/w SBIN        r     1 MAX_IOS                    0-0-0/w UBIN        r     1 NOW_UTS
     0-0-0/d STRC(216)   r     1 OUTSTANDING_IO(0:8191)
     0-0-0/c ASTR(9)     r     1 RET_CMDS_NAME              0-0-0/w PTR         r     1 SNVECLIST$
     0-0-0/w PTR         r     1 TAPE_DCBLIST$


   Procedure FLI$SPIN_CHK requires 60 words for executable code.
   Procedure FLI$SPIN_CHK requires 12 words of local(AUTO) storage.
PL6.E3A0      #004=FLI$SPIN_CHK File=FLI$UTIL.:E05TSI                            TUE 07/29/97 15:59 Page:71   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=FLI$SPIN_CHK File=FLI$UTIL.:E05TSI                            TUE 07/29/97 15:59 Page:72   
          MINI XREF LISTING

ASK_OPER
      7144**DCL      7177<>CALL     7180<>CALL
ASK_OPER.MESS_
      7144**DCL      7176<<ASSIGN   7179<<ASSIGN
ASK_OPER.V
      7147**DCL      7144--DCLINIT
BIX
        13**DCL         6--PROC     7155--IF
DISK_CLOSE.SN_
      6185**DCL      6185--REDEF
DISK_CLOSE.UTL_
      6186**DCL      6186--REDEF
DISK_CLOSE.V.EXPIRE#
      6200**DCL      6200--REDEF
DISK_CLOSE.V.TYPE#
      6198**DCL      6198--REDEF
DISK_CLOSE.V.XTNSIZE#
      6195**DCL      6195--REDEF    6197--REDEF
DISK_FILE_SPEC.SPEC
      6550**DCL      6552--REDEF
DISK_FILE_SPEC.SPEC.START
      6551**DCL      6551--REDEF
DISK_FILE_SPEC.SPEC.STOP
      6552**DCL      6552--REDEF
DISK_FILE_SPEC$
      6549**DCL      6550--IMP-PTR
DISK_OPEN.ACSVEH_
      6050**DCL      6051--REDEF
DISK_OPEN.ALTKEYS_
      6056**DCL      6057--REDEF    6057--REDEF
DISK_OPEN.HDR_
      6055**DCL      6056--REDEF
PL6.E3A0      #004=FLI$SPIN_CHK File=FLI$UTIL.:E05TSI                            TUE 07/29/97 15:59 Page:73   
DISK_OPEN.TAB_
      6054**DCL      6055--REDEF
DISK_OPEN.UHL_
      6048**DCL      6049--REDEF    6049--REDEF
DISK_OPEN.V.FSN#
      6088**DCL      6088--REDEF    6088--REDEF
DISK_OPEN.WSN_
      6054**DCL      6054--REDEF
DISK_READ.STATION_
      6112**DCL      6113--REDEF
DISK_READ.V.DVBYTE.REREAD#
      6124**DCL      6124--REDEF
DISK_READ.V.INDX#
      6122**DCL      6122--REDEF
DISK_WRITE.STATION_
      6150**DCL      6150--REDEF
DISK_WRITE.V.DVBYTE.VFC#
      6157**DCL      6157--REDEF
DPLIST$
      6535**DCL      6547--IMP-PTR
DPRESLIST$
      6549**DCL      6549--IMP-PTR
EFTWORD
      6670**DCL      6670--REDEF
ELAPSED_UTS
      7124**DCL      7169<>CALL     7171>>IF       7174<>CALL
FLI$ELAPSED_UTS_TO_TIME
      7075**DCL-ENT  7174--CALL
FPT_EXIT.V.STEPCC#
      5975**DCL      5975--REDEF
GET_NOW_UTS
      6526**DCL      7168<>CALL
I
      7125**DCL      7158<<DOINDEX  7159>>IF
M$KEYIN
      5507**DCL-ENT  7177--CALL     7180--CALL
PL6.E3A0      #004=FLI$SPIN_CHK File=FLI$UTIL.:E05TSI                            TUE 07/29/97 15:59 Page:74   
M$TIME
      5569**DCL-ENT  7168--CALL
M$XXX
      5514**DCL-ENT  7165--CALL
MAX_IOS
      6512**DCL      7158>>DOINDEX
NOT_READY
      7126**DCL      7157<<ASSIGN   7161<<ASSIGN   7164>>IF
NOW_UTS
      6514**DCL      7169<>CALL
OUTSTANDING_IO.NOT_READY
      6513**DCL      7159>>IF
PRE_RET_CLOSE.SN_
      6913**DCL      6913--REDEF
PRE_RET_CLOSE.UTL_
      6914**DCL      6914--REDEF
PRE_RET_CLOSE.V.EXPIRE#
      6928**DCL      6928--REDEF
PRE_RET_CLOSE.V.TYPE#
      6926**DCL      6926--REDEF
PRE_RET_CLOSE.V.XTNSIZE#
      6923**DCL      6923--REDEF    6925--REDEF
PRE_RET_OPEN.ACSVEH_
      6848**DCL      6849--REDEF
PRE_RET_OPEN.ALTKEYS_
      6854**DCL      6855--REDEF    6855--REDEF
PRE_RET_OPEN.HDR_
      6853**DCL      6854--REDEF
PRE_RET_OPEN.TAB_
      6852**DCL      6853--REDEF
PRE_RET_OPEN.UHL_
      6846**DCL      6847--REDEF    6847--REDEF
PRE_RET_OPEN.V.FSN#
      6886**DCL      6886--REDEF    6886--REDEF
PRE_RET_OPEN.WSN_
      6852**DCL      6852--REDEF
PL6.E3A0      #004=FLI$SPIN_CHK File=FLI$UTIL.:E05TSI                            TUE 07/29/97 15:59 Page:75   
PRE_RET_READ.STATION_
      6703**DCL      6704--REDEF
PRE_RET_READ.V.DVBYTE.REREAD#
      6715**DCL      6715--REDEF
PRE_RET_READ.V.INDX#
      6713**DCL      6713--REDEF
PRE_RET_WRITE.STATION_
      6741**DCL      6741--REDEF
PRE_RET_WRITE.V.DVBYTE.VFC#
      6748**DCL      6748--REDEF
RET_CMDS_NAME.L#
      6957**DCL      6957--IMP-SIZ
SINCE_UTS
        12**DCL         6--PROC     7169<>CALL
SNVECLIST$
      6489**DCL      6489--IMP-PTR
SPEC.START
      6553**DCL      6554--REDEF
SPEC.STOP
      6554**DCL      6555--REDEF
SPECCHARS
      6553**DCL      6553--REDEF
TAPE_CLOSE.SN_
      6406**DCL      6406--REDEF
TAPE_CLOSE.UTL_
      6407**DCL      6407--REDEF
TAPE_CLOSE.V.EXPIRE#
      6421**DCL      6421--REDEF
TAPE_CLOSE.V.TYPE#
      6419**DCL      6419--REDEF
TAPE_CLOSE.V.XTNSIZE#
      6416**DCL      6416--REDEF    6418--REDEF
TAPE_DCBLIST$
      5962**DCL      5962--IMP-PTR
TAPE_OPEN.ACSVEH_
      6271**DCL      6272--REDEF
PL6.E3A0      #004=FLI$SPIN_CHK File=FLI$UTIL.:E05TSI                            TUE 07/29/97 15:59 Page:76   
TAPE_OPEN.ALTKEYS_
      6277**DCL      6278--REDEF    6278--REDEF
TAPE_OPEN.HDR_
      6276**DCL      6277--REDEF
TAPE_OPEN.TAB_
      6275**DCL      6276--REDEF
TAPE_OPEN.UHL_
      6269**DCL      6270--REDEF    6270--REDEF
TAPE_OPEN.V.FSN#
      6309**DCL      6309--REDEF    6309--REDEF
TAPE_OPEN.WSN_
      6275**DCL      6275--REDEF
TAPE_READ.STATION_
      6333**DCL      6334--REDEF
TAPE_READ.V.DVBYTE.REREAD#
      6345**DCL      6345--REDEF
TAPE_READ.V.INDX#
      6343**DCL      6343--REDEF
TAPE_WRITE.STATION_
      6371**DCL      6371--REDEF
TAPE_WRITE.V.DVBYTE.VFC#
      6378**DCL      6378--REDEF
TELL_OPER_1
      7113**DCL      7176--ASSIGN
TELL_OPER_1.TIME
      7115**DCL      7174<>CALL
TELL_OPER_2
      7117**DCL      7179--ASSIGN
TVECTOR.W2
      6502**DCL      6503--REDEF
XUD$UTS_DIFF
      7077**DCL-ENT  7169--CALL

PL6.E3A0      #005=FLI$EVENT_HANDLER File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:00 Page:77   
      318        1        /*T***********************************************************/
      319        2        /*T*                                                         */
      320        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      321        4        /*T*                                                         */
      322        5        /*T***********************************************************/
      323        6        FLI$EVENT_HANDLER: PROC ASYNC;
      324        7        /*F*  NAME: FLI$EVENT_HANDLER
      325        8              PURPOSE: Handles no-wait I/O events.
      326        9         */
      327       10
      328       11         /***
      329       12          *** INCLUDE
      330       13          ***/
      331       14
      332       15        %INCLUDE B_ERRORS_C;
      333     1142        %INCLUDE CP_6;
      334     6701        %INCLUDE FLI_DATA_R;
      335     8115
      336     8116         /***
      337     8117          *** AUTO
      338     8118          ***/
      339     8119
      340     8120    1   DCL EVENTIX SBIN AUTO;
      341     8121
      342     8122         /***
      343     8123          *** BASED
      344     8124          ***/
      345     8125
      346     8126        %B$TCB;
      347     8129        %B$NWIO;
      348     8214
      349     8215        /****************************************/
      350     8216
      351     8217    1      EVENTIX = B$TCB$->B$TCB.STK$->B$NWIO.EVID;
      352     8218    1      IF NOT OUTSTANDING_IO.NOT_READY(EVENTIX)
      353     8219    1        OR NBR_OUTSTANDING_IOS <= 0
      354     8220    2       THEN DO;
PL6.E3A0      #005=FLI$EVENT_HANDLER File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:00 Page:78   
      355     8221    2         CALL M$XXX;
      356     8222    2         END;
      357     8223
      358     8224         /***
      359     8225          *** Update outstanding I/O entry with completion information.
      360     8226          *** This doesn't really have to be inhibited as long as NOT_READY
      361     8227          *** is reset after all other items are set.  Otherwise, another routine
      362     8228          *** might believe that the entry is ready even though other data has
      363     8229          *** not yet been correctly set up.
      364     8230          ***/
      365     8231
      366     8232    2      DO INHIBIT;
      367     8233    2         NBR_OUTSTANDING_IOS = NBR_OUTSTANDING_IOS - 1;
      368     8234    2         OUTSTANDING_IO.ERR(EVENTIX) = B$TCB$->B$TCB.STK$->B$NWIO.ERR;
      369     8235    2         IF OUTSTANDING_IO.RELEASED(EVENTIX)
      370     8236    3          THEN DO;                         /* "Independent" no wait I/O          */
      371     8237    3            IF NOT RELEASED_BUF_ERR
      372     8238    3             THEN RELEASED_BUF_ERR = OUTSTANDING_IO.ERR(EVENTIX);
      373     8239                                                /*** Link back onto free chain ***/
      374     8240    3            OUTSTANDING_IO.NEXT_IX(EVENTIX) = LAST_FREE_IX;
      375     8241    3            LAST_FREE_IX = EVENTIX;
      376     8242    3            OUTSTANDING_IO.RELEASED(EVENTIX) = '0'B;
      377     8243    3            END;
      378     8244    3          ELSE DO;
      379     8245    3            IF NOT USED_BUF_ERR AND OUTSTANDING_IO.ERR.CODE(EVENTIX) ~= %E$DI
      380     8246    3             THEN USED_BUF_ERR = OUTSTANDING_IO.ERR(EVENTIX);
      381     8247    3            END;
      382     8248    2         OUTSTANDING_IO.ARS(EVENTIX) = B$TCB$->B$TCB.STK$->B$NWIO.ARS;
      383     8249    2         OUTSTANDING_IO.NOT_READY(EVENTIX) = '0'B;
      384     8250    2         END;
      385     8251    1      RETURN;
      386     8252
      387     8253    1   END FLI$EVENT_HANDLER;
      388     8254        %EOD;

PL6.E3A0      #005=FLI$EVENT_HANDLER File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:00 Page:79   
--  Include file information  --

   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure FLI$EVENT_HANDLER.

   Procedure FLI$EVENT_HANDLER requires 52 words for executable code.
   Procedure FLI$EVENT_HANDLER requires 4 words of local(AUTO) storage.

PL6.E3A0      #005=FLI$EVENT_HANDLER File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:00 Page:80   

 Object Unit name= FLI$EVENT_HANDLER                          File name= FLI$UTIL.:E05TOU
 UTS= JUL 29 '97 16:00:10.76 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$PRE_RET
    2   Data  even  none     6      6  FLI$EVENT_HANDLER
    3   Proc  even  none    52     64  FLI$EVENT_HANDLER
    4  RoData even  none     2      2  FLI$EVENT_HANDLER

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes            yes     Async       0  FLI$EVENT_HANDLER

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AAUTO
                       nStd      0 X66_AARET
PL6.E3A0      #005=FLI$EVENT_HANDLER File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:00 Page:81   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  TAPE_DCBLIST$                         SNVECLIST$
     B$TCB$                                NBR_OUTSTANDING_IOS                   LAST_FREE_IX
     USED_BUF_ERR                          RELEASED_BUF_ERR                      OUTSTANDING_IO
     DPLIST$                               DPRESLIST$                            DISK_FILE_SPEC$
     SPECCHARS                             EFTWORD                               M$PRE_RET
     RET_CMDS_NAME
PL6.E3A0      #005=FLI$EVENT_HANDLER File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:00 Page:82   


      318        1        /*T***********************************************************/
      319        2        /*T*                                                         */
      320        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      321        4        /*T*                                                         */
      322        5        /*T***********************************************************/
      323        6        FLI$EVENT_HANDLER: PROC ASYNC;

      6  3 000000   000000 700200 xent  FLI$EVENT_H* TSX0  ! X66_AAUTO
         3 000001   000004 000000                    ZERO    4,0

      324        7        /*F*  NAME: FLI$EVENT_HANDLER
      325        8              PURPOSE: Handles no-wait I/O events.
      326        9         */
      327       10
      328       11         /***
      329       12          *** INCLUDE
      330       13          ***/
      331       14
      332       15        %INCLUDE B_ERRORS_C;
      333     1142        %INCLUDE CP_6;
      334     6701        %INCLUDE FLI_DATA_R;
      335     8115
      336     8116         /***
      337     8117          *** AUTO
      338     8118          ***/
      339     8119
      340     8120    1   DCL EVENTIX SBIN AUTO;
      341     8121
      342     8122         /***
      343     8123          *** BASED
      344     8124          ***/
      345     8125
      346     8126        %B$TCB;
      347     8129        %B$NWIO;
      348     8214
      349     8215        /****************************************/
PL6.E3A0      #005=FLI$EVENT_HANDLER File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:00 Page:83   
      350     8216
      351     8217    1      EVENTIX = B$TCB$->B$TCB.STK$->B$NWIO.EVID;

   8217  3 000002   000000 470400 xsym               LDP0    B$TCB$
         3 000003   000001 471500                    LDP1    1,,PR0
         3 000004   100101 235100                    LDA     65,,PR1
         3 000005   200003 755100                    STA     EVENTIX,,AUTO

      352     8218    1      IF NOT OUTSTANDING_IO.NOT_READY(EVENTIX)

   8218  3 000006   200003 236100                    LDQ     EVENTIX,,AUTO
         3 000007   000006 402007                    MPY     6,DL
         3 000010   000002 236006 xsym               LDQ     OUTSTANDING_IO+2,QL
         3 000011   000001 316007                    CANQ    1,DL
         3 000012   000015 600000 3                  TZE     s:8221
         3 000013   000000 235000 xsym               LDA     NBR_OUTSTANDING_IOS
         3 000014   000017 605400 3                  TPNZ    s:8233

      353     8219    1        OR NBR_OUTSTANDING_IOS <= 0
      354     8220    2       THEN DO;

      355     8221    2         CALL M$XXX;

   8221  3 000015   000003 713400                    CLIMB   3
         3 000016   000000 401760                    pmme    nvectors=0

      356     8222    2         END;

      357     8223
      358     8224         /***
      359     8225          *** Update outstanding I/O entry with completion information.
      360     8226          *** This doesn't really have to be inhibited as long as NOT_READY
      361     8227          *** is reset after all other items are set.  Otherwise, another routine
      362     8228          *** might believe that the entry is ready even though other data has
      363     8229          *** not yet been correctly set up.
      364     8230          ***/
      365     8231
PL6.E3A0      #005=FLI$EVENT_HANDLER File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:00 Page:84   
      366     8232    2      DO INHIBIT;

      367     8233    2         NBR_OUTSTANDING_IOS = NBR_OUTSTANDING_IOS - 1;

   8233  3 000017   000001 336207                    LCQ   ! 1,DL
         3 000020   000000 056200 xsym               ASQ   ! NBR_OUTSTANDING_IOS

      368     8234    2         OUTSTANDING_IO.ERR(EVENTIX) = B$TCB$->B$TCB.STK$->B$NWIO.ERR;

   8234  3 000021   200003 236300                    LDQ   ! EVENTIX,,AUTO
         3 000022   000006 402207                    MPY   ! 6,DL
         3 000023   000000 470600 xsym               LDP0  ! B$TCB$
         3 000024   000001 471700                    LDP1  ! 1,,PR0
         3 000025   000000 620206                    EAX0  ! 0,QL
         3 000026   100102 236300                    LDQ   ! 66,,PR1
         3 000027   000003 756210 xsym               STQ   ! OUTSTANDING_IO+3,X0

      369     8235    2         IF OUTSTANDING_IO.RELEASED(EVENTIX)

   8235  3 000030   000002 236210 xsym               LDQ   ! OUTSTANDING_IO+2,X0
         3 000031   000002 316207                    CANQ  ! 2,DL
         3 000032   000046 600200 3                  TZE   ! s:8245

      370     8236    3          THEN DO;                         /* "Independent" no wait I/O          */

      371     8237    3            IF NOT RELEASED_BUF_ERR

   8237  3 000033   000000 235200 xsym               LDA   ! RELEASED_BUF_ERR
         3 000034   000037 601200 3                  TNZ   ! s:8240

      372     8238    3             THEN RELEASED_BUF_ERR = OUTSTANDING_IO.ERR(EVENTIX);

   8238  3 000035   000003 236210 xsym               LDQ   ! OUTSTANDING_IO+3,X0
         3 000036   000000 756200 xsym               STQ   ! RELEASED_BUF_ERR

      373     8239                                                /*** Link back onto free chain ***/
      374     8240    3            OUTSTANDING_IO.NEXT_IX(EVENTIX) = LAST_FREE_IX;
PL6.E3A0      #005=FLI$EVENT_HANDLER File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:00 Page:85   

   8240  3 000037   000000 235200 xsym               LDA   ! LAST_FREE_IX
         3 000040   000004 755210 xsym               STA   ! OUTSTANDING_IO+4,X0

      375     8241    3            LAST_FREE_IX = EVENTIX;

   8241  3 000041   200003 236300                    LDQ   ! EVENTIX,,AUTO
         3 000042   000000 756200 xsym               STQ   ! LAST_FREE_IX

      376     8242    3            OUTSTANDING_IO.RELEASED(EVENTIX) = '0'B;

   8242  3 000043   000000 236200 4                  LDQ   ! 0
         3 000044   000002 356210 xsym               ANSQ  ! OUTSTANDING_IO+2,X0

      377     8243    3            END;

   8243  3 000045   000056 710200 3                  TRA   ! s:8248

      378     8244    3          ELSE DO;

      379     8245    3            IF NOT USED_BUF_ERR AND OUTSTANDING_IO.ERR.CODE(EVENTIX) ~= %E$DI

   8245  3 000046   000000 235200 xsym               LDA   ! USED_BUF_ERR
         3 000047   000056 601200 3                  TNZ   ! s:8248
         3 000050   000003 236210 xsym               LDQ   ! OUTSTANDING_IO+3,X0
         3 000051   377770 376207                    ANQ   ! 131064,DL
         3 000052   000110 116207                    CMPQ  ! 72,DL
         3 000053   000056 600200 3                  TZE   ! s:8248

      380     8246    3             THEN USED_BUF_ERR = OUTSTANDING_IO.ERR(EVENTIX);

   8246  3 000054   000003 236210 xsym               LDQ   ! OUTSTANDING_IO+3,X0
         3 000055   000000 756200 xsym               STQ   ! USED_BUF_ERR

      381     8247    3            END;

      382     8248    2         OUTSTANDING_IO.ARS(EVENTIX) = B$TCB$->B$TCB.STK$->B$NWIO.ARS;
PL6.E3A0      #005=FLI$EVENT_HANDLER File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:00 Page:86   

   8248  3 000056   000001 471700                    LDP1  ! 1,,PR0
         3 000057   100105 235300                    LDA   ! 69,,PR1
         3 000060   000005 755210 xsym               STA   ! OUTSTANDING_IO+5,X0

      383     8249    2         OUTSTANDING_IO.NOT_READY(EVENTIX) = '0'B;

   8249  3 000061   000001 236200 4                  LDQ   ! 1
         3 000062   000002 356210 xsym               ANSQ  ! OUTSTANDING_IO+2,X0

      384     8250    2         END;

      385     8251    1      RETURN;

   8251  3 000063   000000 702200 xent               TSX2  ! X66_AARET
      386     8252
      387     8253    1   END FLI$EVENT_HANDLER;
      388     8254        %EOD;

PL6.E3A0      #005=FLI$EVENT_HANDLER File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:00 Page:87   
--  Include file information  --

   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure FLI$EVENT_HANDLER.
PL6.E3A0      #005=FLI$EVENT_HANDLER File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:00 Page:88   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w SBIN        r     1 EVENTIX

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w PTR         r     1 DISK_FILE_SPEC$
     0-0-0/w PTR         r     1 DPLIST$                    0-0-0/w PTR         r     1 DPRESLIST$
     0-0-0/w SBIN        r     1 LAST_FREE_IX               0-0-0/w SBIN        r     1 NBR_OUTSTANDING_IOS
     0-0-0/d STRC(216)   r     1 OUTSTANDING_IO(0:8191)
     0-0-0/b BIT         r     1 RELEASED_BUF_ERR           0-0-0/c ASTR(9)     r     1 RET_CMDS_NAME
     0-0-0/w PTR         r     1 SNVECLIST$                 0-0-0/w PTR         r     1 TAPE_DCBLIST$
     0-0-0/b BIT         r     1 USED_BUF_ERR

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2880)  r     1 B$NWIO                     0-0-0/w STRC(144)   r     1 B$TCB


   Procedure FLI$EVENT_HANDLER requires 52 words for executable code.
   Procedure FLI$EVENT_HANDLER requires 4 words of local(AUTO) storage.
PL6.E3A0      #005=FLI$EVENT_HANDLER File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:00 Page:89   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=FLI$EVENT_HANDLER File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:00 Page:90   
          MINI XREF LISTING

B$NWIO.ARS
      8139**DCL      8248>>ASSIGN
B$NWIO.CGPARM.MSGIDXT
      8163**DCL      8166--REDEF
B$NWIO.CODE
      8132**DCL      8132--REDEF    8133--REDEF    8133--REDEF
B$NWIO.ERR
      8133**DCL      8234>>ASSIGN
B$NWIO.ERR.ERR#
      8134**DCL      8134--REDEF
B$NWIO.EVID
      8133**DCL      8133--REDEF    8133--REDEF    8217>>ASSIGN
B$TCB.STK$
      8127**DCL      8217>>ASSIGN   8234>>ASSIGN   8248>>ASSIGN
B$TCB$
      7632**DCL      8217>>ASSIGN   8234>>ASSIGN   8248>>ASSIGN
DISK_CLOSE.SN_
      7312**DCL      7312--REDEF
DISK_CLOSE.UTL_
      7313**DCL      7313--REDEF
DISK_CLOSE.V.EXPIRE#
      7327**DCL      7327--REDEF
DISK_CLOSE.V.TYPE#
      7325**DCL      7325--REDEF
DISK_CLOSE.V.XTNSIZE#
      7322**DCL      7322--REDEF    7324--REDEF
DISK_FILE_SPEC.SPEC
      7677**DCL      7679--REDEF
DISK_FILE_SPEC.SPEC.START
      7678**DCL      7678--REDEF
DISK_FILE_SPEC.SPEC.STOP
      7679**DCL      7679--REDEF
PL6.E3A0      #005=FLI$EVENT_HANDLER File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:00 Page:91   
DISK_FILE_SPEC$
      7676**DCL      7677--IMP-PTR
DISK_OPEN.ACSVEH_
      7177**DCL      7178--REDEF
DISK_OPEN.ALTKEYS_
      7183**DCL      7184--REDEF    7184--REDEF
DISK_OPEN.HDR_
      7182**DCL      7183--REDEF
DISK_OPEN.TAB_
      7181**DCL      7182--REDEF
DISK_OPEN.UHL_
      7175**DCL      7176--REDEF    7176--REDEF
DISK_OPEN.V.FSN#
      7215**DCL      7215--REDEF    7215--REDEF
DISK_OPEN.WSN_
      7181**DCL      7181--REDEF
DISK_READ.STATION_
      7239**DCL      7240--REDEF
DISK_READ.V.DVBYTE.REREAD#
      7251**DCL      7251--REDEF
DISK_READ.V.INDX#
      7249**DCL      7249--REDEF
DISK_WRITE.STATION_
      7277**DCL      7277--REDEF
DISK_WRITE.V.DVBYTE.VFC#
      7284**DCL      7284--REDEF
DPLIST$
      7662**DCL      7674--IMP-PTR
DPRESLIST$
      7676**DCL      7676--IMP-PTR
EFTWORD
      7797**DCL      7797--REDEF
EVENTIX
      8120**DCL      8217<<ASSIGN   8218>>IF       8234>>ASSIGN   8235>>IF       8238>>ASSIGN   8240>>ASSIGN
      8241>>ASSIGN   8242>>ASSIGN   8245>>IF       8246>>ASSIGN   8248>>ASSIGN   8249>>ASSIGN
FPT_EXIT.V.STEPCC#
PL6.E3A0      #005=FLI$EVENT_HANDLER File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:00 Page:92   
      7102**DCL      7102--REDEF
LAST_FREE_IX
      7633**DCL      8240>>ASSIGN   8241<<ASSIGN
M$XXX
      6641**DCL-ENT  8221--CALL
NBR_OUTSTANDING_IOS
      7633**DCL      8218>>IF       8233<<ASSIGN   8233>>ASSIGN
OUTSTANDING_IO.ARS
      7640**DCL      8248<<ASSIGN
OUTSTANDING_IO.ERR
      7640**DCL      8234<<ASSIGN   8238>>ASSIGN   8246>>ASSIGN
OUTSTANDING_IO.ERR.CODE
      7640**DCL      8245>>IF
OUTSTANDING_IO.NEXT_IX
      7640**DCL      8240<<ASSIGN
OUTSTANDING_IO.NOT_READY
      7640**DCL      8218>>IF       8249<<ASSIGN
OUTSTANDING_IO.RELEASED
      7639**DCL      8235>>IF       8242<<ASSIGN
PRE_RET_CLOSE.SN_
      8040**DCL      8040--REDEF
PRE_RET_CLOSE.UTL_
      8041**DCL      8041--REDEF
PRE_RET_CLOSE.V.EXPIRE#
      8055**DCL      8055--REDEF
PRE_RET_CLOSE.V.TYPE#
      8053**DCL      8053--REDEF
PRE_RET_CLOSE.V.XTNSIZE#
      8050**DCL      8050--REDEF    8052--REDEF
PRE_RET_OPEN.ACSVEH_
      7975**DCL      7976--REDEF
PRE_RET_OPEN.ALTKEYS_
      7981**DCL      7982--REDEF    7982--REDEF
PRE_RET_OPEN.HDR_
      7980**DCL      7981--REDEF
PRE_RET_OPEN.TAB_
PL6.E3A0      #005=FLI$EVENT_HANDLER File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:00 Page:93   
      7979**DCL      7980--REDEF
PRE_RET_OPEN.UHL_
      7973**DCL      7974--REDEF    7974--REDEF
PRE_RET_OPEN.V.FSN#
      8013**DCL      8013--REDEF    8013--REDEF
PRE_RET_OPEN.WSN_
      7979**DCL      7979--REDEF
PRE_RET_READ.STATION_
      7830**DCL      7831--REDEF
PRE_RET_READ.V.DVBYTE.REREAD#
      7842**DCL      7842--REDEF
PRE_RET_READ.V.INDX#
      7840**DCL      7840--REDEF
PRE_RET_WRITE.STATION_
      7868**DCL      7868--REDEF
PRE_RET_WRITE.V.DVBYTE.VFC#
      7875**DCL      7875--REDEF
RELEASED_BUF_ERR
      7634**DCL      8237>>IF       8238<<ASSIGN
RET_CMDS_NAME.L#
      8084**DCL      8084--IMP-SIZ
SNVECLIST$
      7616**DCL      7616--IMP-PTR
SPEC.START
      7680**DCL      7681--REDEF
SPEC.STOP
      7681**DCL      7682--REDEF
SPECCHARS
      7680**DCL      7680--REDEF
TAPE_CLOSE.SN_
      7533**DCL      7533--REDEF
TAPE_CLOSE.UTL_
      7534**DCL      7534--REDEF
TAPE_CLOSE.V.EXPIRE#
      7548**DCL      7548--REDEF
TAPE_CLOSE.V.TYPE#
PL6.E3A0      #005=FLI$EVENT_HANDLER File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:00 Page:94   
      7546**DCL      7546--REDEF
TAPE_CLOSE.V.XTNSIZE#
      7543**DCL      7543--REDEF    7545--REDEF
TAPE_DCBLIST$
      7089**DCL      7089--IMP-PTR
TAPE_OPEN.ACSVEH_
      7398**DCL      7399--REDEF
TAPE_OPEN.ALTKEYS_
      7404**DCL      7405--REDEF    7405--REDEF
TAPE_OPEN.HDR_
      7403**DCL      7404--REDEF
TAPE_OPEN.TAB_
      7402**DCL      7403--REDEF
TAPE_OPEN.UHL_
      7396**DCL      7397--REDEF    7397--REDEF
TAPE_OPEN.V.FSN#
      7436**DCL      7436--REDEF    7436--REDEF
TAPE_OPEN.WSN_
      7402**DCL      7402--REDEF
TAPE_READ.STATION_
      7460**DCL      7461--REDEF
TAPE_READ.V.DVBYTE.REREAD#
      7472**DCL      7472--REDEF
TAPE_READ.V.INDX#
      7470**DCL      7470--REDEF
TAPE_WRITE.STATION_
      7498**DCL      7498--REDEF
TAPE_WRITE.V.DVBYTE.VFC#
      7505**DCL      7505--REDEF
TVECTOR.W2
      7629**DCL      7630--REDEF
USED_BUF_ERR
      7634**DCL      8245>>IF       8246<<ASSIGN

PL6.E3A0      #006=FLI$BUILD_$$EFT File=FLI$UTIL.:E05TSI                         TUE 07/29/97 16:01 Page:95   
      389        1        /*T***********************************************************/
      390        2        /*T*                                                         */
      391        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      392        4        /*T*                                                         */
      393        5        /*T***********************************************************/
      394        6        FLI$BUILD_$$EFT:PROC ( DP_NAME ) ALTRET;
      395        7        /*F*  NAME: FLE$BUILD_$$EFT
      396        8              PURPOSE:  Build the $$EFT account on designated packset
      397        9        ***/
      398       10
      399       11        /***
      400       12         *** INCLUDE FILES
      401       13         ***/
      402       14        %INCLUDE CP_6;
      403     5573        %INCLUDE CP_6_SUBS;
      404     6113        %INCLUDE FLS_DATA_R;
      405     7913        %INCLUDE FLI_DATA_R;
      406     9327        %INCLUDE FM$FIT;
      407     9548
      408     9549        /***
      409     9550         *** ENTRIES
      410     9551         ***/
      411     9552    1   DCL FLI$ALLOC_BUF ENTRY(2);
      412     9553    1   DCL FLI$RPT_ERR ENTRY(5);
      413     9554
      414     9555        /***
      415     9556         *** LOCAL VARIABLES
      416     9557         ***/
      417     9558    1   DCL PTR$ PTR;
      418     9559    1   DCL PTR1$ PTR;
      419     9560    1   DCL DP_NAME CHAR(6);
      420     9561
      421     9562        /***
      422     9563         *** MACRO
      423     9564         ***/
      424     9565        %VLP_SN ( FPTN = DPSN,
      425     9566                  N = 1,
PL6.E3A0      #006=FLI$BUILD_$$EFT File=FLI$UTIL.:E05TSI                         TUE 07/29/97 16:01 Page:96   
      426     9567                  STCLASS = STATIC );
      427     9580        %FM$FIT(BASED="BASED(PTR1$)");
      428     9583        %CODE14(BASED="BASED(PTR1$)");
      429     9593        %CODE09(BASED="BASED(PTR1$)");
      430     9597        %FM$FIT(FM$FIT=BUILD_FIT,
      431     9598                N = 2,
      432     9599                BASED = CONSTANT);
      433     9602    1   DCL BLANK1024 (0:1023) UBIN WORD ALIGNED BASED;
      434     9603        %FPT_OPEN ( FPTN=CHECK_$$EFT,
      435     9604                    DCB=M$CHECK_$$EFT,
      436     9605                    SN=DPSN,
      437     9606                    ACCT=ARCHIVE_ACCT,
      438     9607                    NAME=ERASE,
      439     9608                    RES='DP',
      440     9609                    FUN=IN,
      441     9610                    ASN=DEVICE,
      442     9611                    SCRUB=YES,
      443     9612                    REASSIGN=NO,
      444     9613                    STCLASS=STATIC );
      445     9722
      446     9723        %FPT_OPEN (FPTN = OPEN_ARCHIVE_ACCOUNT,
      447     9724                   DCB = M$ARCHIVE,
      448     9725                   ASN = DEVICE,
      449     9726                   FUN = CREATE,
      450     9727                   NAME = ERASE,
      451     9728                   ACCT = ARCHIVE_ACCT,
      452     9729                   SN = DPSN,
      453     9730                   RES = 'DP',
      454     9731                   IFPARAM = NIL,
      455     9732                   STCLASS = STATIC);
      456     9841    1   DCL M$CHECK_$$EFT DCB;
      457     9842
      458     9843        /************************************/
      459     9844
      460     9845    1      DPSN.SN#(0) = DP_NAME;
      461     9846        /*
      462     9847           **** Note! FPARAM must be specified on an OPEN in order to receive
PL6.E3A0      #006=FLI$BUILD_$$EFT File=FLI$UTIL.:E05TSI                         TUE 07/29/97 16:01 Page:97   
      463     9848                an altreturn when checking for account existence.
      464     9849        */
      465     9850    1      CALL FLI$ALLOC_BUF(FIT_AREA,1);
      466     9851    1      CHECK_$$EFT.FPARAM_ = FIT_AREA;
      467     9852    1      CALL M$OPEN ( CHECK_$$EFT )
      468     9853    2       WHENRETURN DO;
      469     9854    2         RETURN;
      470     9855    2         END;
      471     9856    1      PTR1$ = FIT_AREA.PTR$;
      472     9857    1      PTR1$->BLANK1024 = '0'B;
      473     9858    1      FM$FIT = BUILD_FIT;
      474     9859    1      FM$FIT.CODES.CODE(0) = 2;
      475     9860    1      FM$FIT.CODES.CODE(1) = 14;
      476     9861    1      FM$FIT.CODES.CODE(2) = 9;
      477     9862    1      FM$FIT.CODES.NAW(0) = SIZEW(CODE14) + SIZEW(CODE09);
      478     9863    1      FM$FIT.CODES.NAW(1) = SIZEW(CODE14);
      479     9864    1      FM$FIT.CODES.NAW(2) = SIZEW(CODE09);
      480     9865    1      FM$FIT.CODES.NDW(0) = SIZEW(CODE09) + SIZEW(CODE14);
      481     9866    1      FM$FIT.CODES.NDW(2) = SIZEW(CODE09);
      482     9867    1      FM$FIT.CODES.NDW(1) = SIZEW(CODE14);
      483     9868    1      FM$FIT.CODES.ITEMX(0) = 0;
      484     9869    1      FM$FIT.CODES.ITEMX(1) = SIZEW(BUILD_FIT);
      485     9870    1      FM$FIT.CODES.ITEMX(2) = SIZEW(BUILD_FIT) + SIZEW(CODE14);
      486     9871    1      PTR1$ = PINCRW(PTR1$,SIZEW(BUILD_FIT));
      487     9872        /*          CODE14.ACCESS.WCDATA = '1'B;*/
      488     9873        /*          CODE14.ACCESS.WRCMP = '1'B;*/
      489     9874    1      CODE14.ACCESS.BUPF = '1'B;
      490     9875    1      CODE14.ACCESS.BUPM = '1'B;
      491     9876    1      CODE14.ACCESS.OWNERF = '1'B;
      492     9877    1      CODE14.MGRANS = 250;
      493     9878    1      CODE14.OWNER.NAME(0) = ' ';
      494     9879    1      CODE14.OWNER.ACCT(0) = ' ';
      495     9880    1      PTR1$ = PINCRW(PTR1$,SIZEW(CODE14));
      496     9881    1      CODE09.ACCT = ' ';
      497     9882    1      OPEN_ARCHIVE_ACCOUNT.IFPARAM_ = FIT_AREA;
      498     9883    1      CALL M$OPEN ( OPEN_ARCHIVE_ACCOUNT )
      499     9884    2       WHENRETURN DO;
PL6.E3A0      #006=FLI$BUILD_$$EFT File=FLI$UTIL.:E05TSI                         TUE 07/29/97 16:01 Page:98   
      500     9885    2         RETURN;
      501     9886    2         END;
      502     9887    2       WHENALTRETURN DO;
      503     9888    2         CALL FLI$RPT_ERR;
      504     9889    2         ALTRETURN;
      505     9890    2         END;
      506     9891
      507     9892    1   END FLI$BUILD_$$EFT;
      508     9893        %EOD;

PL6.E3A0      #006=FLI$BUILD_$$EFT File=FLI$UTIL.:E05TSI                         TUE 07/29/97 16:01 Page:99   
--  Include file information  --

   FM$FIT.:E05TOU  is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FLS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FLI$BUILD_$$EFT.

   Procedure FLI$BUILD_$$EFT requires 110 words for executable code.
   Procedure FLI$BUILD_$$EFT requires 6 words of local(AUTO) storage.

PL6.E3A0      #006=FLI$BUILD_$$EFT File=FLI$UTIL.:E05TSI                         TUE 07/29/97 16:01 Page:100  

 Object Unit name= FLI$BUILD_$$EFT                            File name= FLI$UTIL.:E05TOU
 UTS= JUL 29 '97 16:01:29.92 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$TSN_USED
    2   DCB   even  none     0      0  M$STATUS
    3   DCB   even  none     0      0  M$REBUILD
    4   DCB   even  none     0      0  M$ARCHIVE
    5   DCB   even  none     0      0  M$NODATA_LIST
    6   Data  even  none   140    214  FLI$BUILD_$$EFT
    7   DCB   even  none     0      0  M$PRE_RET
    8  RoData even  UTS      3      3  FLI$BUILD_$$EFT
    9   DCB   even  none     0      0  M$CHECK_$$EFT
   10   Proc  even  none   110    156  FLI$BUILD_$$EFT
   11  RoData even  none     6      6  FLI$BUILD_$$EFT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    10      0   yes    yes     yes      Std        1  FLI$BUILD_$$EFT
PL6.E3A0      #006=FLI$BUILD_$$EFT File=FLI$UTIL.:E05TSI                         TUE 07/29/97 16:01 Page:101  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 FLI$ALLOC_BUF
         yes           Std       5 FLI$RPT_ERR
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$TSN_USED                            M$STATUS
     M$REBUILD                             M$ARCHIVE                             M$NODATA_LIST
     BLK_TAG$                              BLK_TAG0$                             NBR_BYTES_TO_MOVE
     DISK_GRAN$                            BLOCK_GRAN$                      r    EFT_CVOL_FILE
r    EFT_RESTRICT_FILE                     TSN_USED_NAME                         BACKUP_NAME
r    ARCHIVE_NAME                     r    ARCHIVE_ACCT                     r    PRIME_FILE
r    DUAL_FILE                             REBUILD_NAME                          REBUILD_DIR_KEY
     REBUILD_KEY                           NODATA_FILE_NAME                      NODATA_KEY
     TAPE_DCBLIST$                         SNVECLIST$                            DPLIST$
     DPRESLIST$                            DISK_FILE_SPEC$                       SPECCHARS
     EFTWORD                               M$PRE_RET                             RET_CMDS_NAME
     M$CHECK_$$EFT                         B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #006=FLI$BUILD_$$EFT File=FLI$UTIL.:E05TSI                         TUE 07/29/97 16:01 Page:102  


      389        1        /*T***********************************************************/
      390        2        /*T*                                                         */
      391        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      392        4        /*T*                                                         */
      393        5        /*T***********************************************************/
      394        6        FLI$BUILD_$$EFT:PROC ( DP_NAME ) ALTRET;

      6 10 000000   000000 700200 xent  FLI$BUILD_$* TSX0  ! X66_AUTO_1
        10 000001   000006 000001                    ZERO    6,1

      395        7        /*F*  NAME: FLE$BUILD_$$EFT
      396        8              PURPOSE:  Build the $$EFT account on designated packset
      397        9        ***/
      398       10
      399       11        /***
      400       12         *** INCLUDE FILES
      401       13         ***/
      402       14        %INCLUDE CP_6;
      403     5573        %INCLUDE CP_6_SUBS;
      404     6113        %INCLUDE FLS_DATA_R;
      405     7913        %INCLUDE FLI_DATA_R;
      406     9327        %INCLUDE FM$FIT;
      407     9548
      408     9549        /***
      409     9550         *** ENTRIES
      410     9551         ***/
      411     9552    1   DCL FLI$ALLOC_BUF ENTRY(2);
      412     9553    1   DCL FLI$RPT_ERR ENTRY(5);
      413     9554
      414     9555        /***
      415     9556         *** LOCAL VARIABLES
      416     9557         ***/
      417     9558    1   DCL PTR$ PTR;
      418     9559    1   DCL PTR1$ PTR;
      419     9560    1   DCL DP_NAME CHAR(6);
      420     9561
PL6.E3A0      #006=FLI$BUILD_$$EFT File=FLI$UTIL.:E05TSI                         TUE 07/29/97 16:01 Page:103  
      421     9562        /***
      422     9563         *** MACRO
      423     9564         ***/
      424     9565        %VLP_SN ( FPTN = DPSN,
      425     9566                  N = 1,
      426     9567                  STCLASS = STATIC );
      427     9580        %FM$FIT(BASED="BASED(PTR1$)");
      428     9583        %CODE14(BASED="BASED(PTR1$)");
      429     9593        %CODE09(BASED="BASED(PTR1$)");
      430     9597        %FM$FIT(FM$FIT=BUILD_FIT,
      431     9598                N = 2,
      432     9599                BASED = CONSTANT);
      433     9602    1   DCL BLANK1024 (0:1023) UBIN WORD ALIGNED BASED;
      434     9603        %FPT_OPEN ( FPTN=CHECK_$$EFT,
      435     9604                    DCB=M$CHECK_$$EFT,
      436     9605                    SN=DPSN,
      437     9606                    ACCT=ARCHIVE_ACCT,
      438     9607                    NAME=ERASE,
      439     9608                    RES='DP',
      440     9609                    FUN=IN,
      441     9610                    ASN=DEVICE,
      442     9611                    SCRUB=YES,
      443     9612                    REASSIGN=NO,
      444     9613                    STCLASS=STATIC );
      445     9722
      446     9723        %FPT_OPEN (FPTN = OPEN_ARCHIVE_ACCOUNT,
      447     9724                   DCB = M$ARCHIVE,
      448     9725                   ASN = DEVICE,
      449     9726                   FUN = CREATE,
      450     9727                   NAME = ERASE,
      451     9728                   ACCT = ARCHIVE_ACCT,
      452     9729                   SN = DPSN,
      453     9730                   RES = 'DP',
      454     9731                   IFPARAM = NIL,
      455     9732                   STCLASS = STATIC);
      456     9841    1   DCL M$CHECK_$$EFT DCB;
      457     9842
PL6.E3A0      #006=FLI$BUILD_$$EFT File=FLI$UTIL.:E05TSI                         TUE 07/29/97 16:01 Page:104  
      458     9843        /************************************/
      459     9844
      460     9845    1      DPSN.SN#(0) = DP_NAME;

   9845 10 000002   200003 470500                    LDP0    @DP_NAME,,AUTO
        10 000003   040000 100500                    MLR     fill='040'O
        10 000004   000000 000006                    ADSC9   0,,PR0                   cn=0,n=6
        10 000005   000025 000006 6                  ADSC9   DPSN+1                   cn=0,n=6

      461     9846        /*
      462     9847           **** Note! FPARAM must be specified on an OPEN in order to receive
      463     9848                an altreturn when checking for account existence.
      464     9849        */
      465     9850    1      CALL FLI$ALLOC_BUF(FIT_AREA,1);

   9850 10 000006   000000 630400 11                 EPPR0   0
        10 000007   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 000010   000000 701000 xent               TSX1    FLI$ALLOC_BUF
        10 000011   000000 011000                    NOP     0

      466     9851    1      CHECK_$$EFT.FPARAM_ = FIT_AREA;

   9851 10 000012   000000 237000 6                  LDAQ    FIT_AREA
        10 000013   000060 757000 6                  STAQ    CHECK_$$EFT+24

      467     9852    1      CALL M$OPEN ( CHECK_$$EFT )

   9852 10 000014   000030 630400 6                  EPPR0   CHECK_$$EFT
        10 000015   450000 713400                    CLIMB   alt,open
        10 000016   410400 401760                    pmme    nvectors=18
        10 000017   000021 702000 10                 TSX2    s:9856

      468     9853    2       WHENRETURN DO;

      469     9854    2         RETURN;

   9854 10 000020   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #006=FLI$BUILD_$$EFT File=FLI$UTIL.:E05TSI                         TUE 07/29/97 16:01 Page:105  

      470     9855    2         END;
      471     9856    1      PTR1$ = FIT_AREA.PTR$;

   9856 10 000021   000001 236000 6                  LDQ     FIT_AREA+1
        10 000022   200005 756100                    STQ     PTR1$,,AUTO

      472     9857    1      PTR1$->BLANK1024 = '0'B;

   9857 10 000023   200005 470500                    LDP0    PTR1$,,AUTO
        10 000024   010000 220003                    LDX0    4096,DU
        10 000025   000140 100400                    MLR     fill='000'O
        10 000026   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
        10 000027   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0

      473     9858    1      FM$FIT = BUILD_FIT;

   9858 10 000030   000100 100400                    MLR     fill='000'O
        10 000031   000000 000014 8                  ADSC9   BUILD_FIT                cn=0,n=12
        10 000032   000000 000174                    ADSC9   0,,PR0                   cn=0,n=124

      474     9859    1      FM$FIT.CODES.CODE(0) = 2;

   9859 10 000033   000000 236100                    LDQ     0,,PR0
        10 000034   000002 376000 11                 ANQ     2
        10 000035   040000 276003                    ORQ     16384,DU
        10 000036   000000 756100                    STQ     0,,PR0

      475     9860    1      FM$FIT.CODES.CODE(1) = 14;

   9860 10 000037   000001 236100                    LDQ     1,,PR0
        10 000040   000002 376000 11                 ANQ     2
        10 000041   340000 276003                    ORQ     114688,DU
        10 000042   000001 756100                    STQ     1,,PR0

      476     9861    1      FM$FIT.CODES.CODE(2) = 9;

PL6.E3A0      #006=FLI$BUILD_$$EFT File=FLI$UTIL.:E05TSI                         TUE 07/29/97 16:01 Page:106  
   9861 10 000043   000002 236100                    LDQ     2,,PR0
        10 000044   000002 376000 11                 ANQ     2
        10 000045   220000 276003                    ORQ     73728,DU
        10 000046   000002 756100                    STQ     2,,PR0

      477     9862    1      FM$FIT.CODES.NAW(0) = SIZEW(CODE14) + SIZEW(CODE09);

   9862 10 000047   000000 236100                    LDQ     0,,PR0
        10 000050   000003 376000 11                 ANQ     3
        10 000051   000054 276003                    ORQ     44,DU
        10 000052   000000 756100                    STQ     0,,PR0

      478     9863    1      FM$FIT.CODES.NAW(1) = SIZEW(CODE14);

   9863 10 000053   000001 236100                    LDQ     1,,PR0
        10 000054   000003 376000 11                 ANQ     3
        10 000055   000040 276003                    ORQ     32,DU
        10 000056   000001 756100                    STQ     1,,PR0

      479     9864    1      FM$FIT.CODES.NAW(2) = SIZEW(CODE09);

   9864 10 000057   000002 236100                    LDQ     2,,PR0
        10 000060   000003 376000 11                 ANQ     3
        10 000061   000014 276003                    ORQ     12,DU
        10 000062   000002 756100                    STQ     2,,PR0

      480     9865    1      FM$FIT.CODES.NDW(0) = SIZEW(CODE09) + SIZEW(CODE14);

   9865 10 000063   000000 236100                    LDQ     0,,PR0
        10 000064   000004 376000 11                 ANQ     4
        10 000065   026000 276007                    ORQ     11264,DL
        10 000066   000000 756100                    STQ     0,,PR0

      481     9866    1      FM$FIT.CODES.NDW(2) = SIZEW(CODE09);

   9866 10 000067   000002 236100                    LDQ     2,,PR0
        10 000070   000004 376000 11                 ANQ     4
PL6.E3A0      #006=FLI$BUILD_$$EFT File=FLI$UTIL.:E05TSI                         TUE 07/29/97 16:01 Page:107  
        10 000071   006000 276007                    ORQ     3072,DL
        10 000072   000002 756100                    STQ     2,,PR0

      482     9867    1      FM$FIT.CODES.NDW(1) = SIZEW(CODE14);

   9867 10 000073   000001 236100                    LDQ     1,,PR0
        10 000074   000004 376000 11                 ANQ     4
        10 000075   020000 276007                    ORQ     8192,DL
        10 000076   000001 756100                    STQ     1,,PR0

      483     9868    1      FM$FIT.CODES.ITEMX(0) = 0;

   9868 10 000077   000005 236000 11                 LDQ     5
        10 000100   000000 356100                    ANSQ    0,,PR0

      484     9869    1      FM$FIT.CODES.ITEMX(1) = SIZEW(BUILD_FIT);

   9869 10 000101   000001 236100                    LDQ     1,,PR0
        10 000102   000005 376000 11                 ANQ     5
        10 000103   000003 276007                    ORQ     3,DL
        10 000104   000001 756100                    STQ     1,,PR0

      485     9870    1      FM$FIT.CODES.ITEMX(2) = SIZEW(BUILD_FIT) + SIZEW(CODE14);

   9870 10 000105   000002 236100                    LDQ     2,,PR0
        10 000106   000005 376000 11                 ANQ     5
        10 000107   000013 276007                    ORQ     11,DL
        10 000110   000002 756100                    STQ     2,,PR0

      486     9871    1      PTR1$ = PINCRW(PTR1$,SIZEW(BUILD_FIT));

   9871 10 000111   200005 236100                    LDQ     PTR1$,,AUTO
        10 000112   000003 036003                    ADLQ    3,DU
        10 000113   200005 756100                    STQ     PTR1$,,AUTO

      487     9872        /*          CODE14.ACCESS.WCDATA = '1'B;*/
      488     9873        /*          CODE14.ACCESS.WRCMP = '1'B;*/
PL6.E3A0      #006=FLI$BUILD_$$EFT File=FLI$UTIL.:E05TSI                         TUE 07/29/97 16:01 Page:108  
      489     9874    1      CODE14.ACCESS.BUPF = '1'B;

   9874 10 000114   200005 470500                    LDP0    PTR1$,,AUTO
        10 000115   040000 236003                    LDQ     16384,DU
        10 000116   000000 256100                    ORSQ    0,,PR0

      490     9875    1      CODE14.ACCESS.BUPM = '1'B;

   9875 10 000117   020000 236003                    LDQ     8192,DU
        10 000120   000000 256100                    ORSQ    0,,PR0

      491     9876    1      CODE14.ACCESS.OWNERF = '1'B;

   9876 10 000121   004000 236003                    LDQ     2048,DU
        10 000122   000000 256100                    ORSQ    0,,PR0

      492     9877    1      CODE14.MGRANS = 250;

   9877 10 000123   000372 236007                    LDQ     250,DL
        10 000124   000001 552134                    STBQ    1,'34'O,PR0

      493     9878    1      CODE14.OWNER.NAME(0) = ' ';

   9878 10 000125   040100 100400                    MLR     fill='040'O
        10 000126   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        10 000127   000005 000014                    ADSC9   5,,PR0                   cn=0,n=12

      494     9879    1      CODE14.OWNER.ACCT(0) = ' ';

   9879 10 000130   000035 235000 xsym               LDA     B_VECTNIL+29
        10 000131   000035 236000 xsym               LDQ     B_VECTNIL+29
        10 000132   000003 755100                    STA     3,,PR0
        10 000133   000004 756100                    STQ     4,,PR0

      495     9880    1      PTR1$ = PINCRW(PTR1$,SIZEW(CODE14));

   9880 10 000134   200005 236100                    LDQ     PTR1$,,AUTO
PL6.E3A0      #006=FLI$BUILD_$$EFT File=FLI$UTIL.:E05TSI                         TUE 07/29/97 16:01 Page:109  
        10 000135   000010 036003                    ADLQ    8,DU
        10 000136   200005 756100                    STQ     PTR1$,,AUTO

      496     9881    1      CODE09.ACCT = ' ';

   9881 10 000137   200005 470500                    LDP0    PTR1$,,AUTO
        10 000140   040100 100400                    MLR     fill='040'O
        10 000141   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        10 000142   000000 400010                    ADSC9   0,,PR0                   cn=2,n=8

      497     9882    1      OPEN_ARCHIVE_ACCOUNT.IFPARAM_ = FIT_AREA;

   9882 10 000143   000000 237000 6                  LDAQ    FIT_AREA
        10 000144   000150 757000 6                  STAQ    OPEN_ARCHIVE_ACCOUNT+22

      498     9883    1      CALL M$OPEN ( OPEN_ARCHIVE_ACCOUNT )

   9883 10 000145   000122 630400 6                  EPPR0   OPEN_ARCHIVE_ACCOUNT
        10 000146   450000 713400                    CLIMB   alt,open
        10 000147   410400 401760                    pmme    nvectors=18
        10 000150   000152 702000 10                 TSX2    s:9888

      499     9884    2       WHENRETURN DO;

      500     9885    2         RETURN;

   9885 10 000151   000000 702200 xent               TSX2  ! X66_ARET

      501     9886    2         END;
      502     9887    2       WHENALTRETURN DO;

      503     9888    2         CALL FLI$RPT_ERR;

   9888 10 000152   000002 631400 xsym               EPPR1   B_VECTNIL+2
        10 000153   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 000154   000000 011000                    NOP     0

PL6.E3A0      #006=FLI$BUILD_$$EFT File=FLI$UTIL.:E05TSI                         TUE 07/29/97 16:01 Page:110  
      504     9889    2         ALTRETURN;

   9889 10 000155   000000 702200 xent               TSX2  ! X66_AALT
      505     9890    2         END;
      506     9891
      507     9892    1   END FLI$BUILD_$$EFT;
      508     9893        %EOD;

PL6.E3A0      #006=FLI$BUILD_$$EFT File=FLI$UTIL.:E05TSI                         TUE 07/29/97 16:01 Page:111  
--  Include file information  --

   FM$FIT.:E05TOU  is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FLS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FLI$BUILD_$$EFT.
PL6.E3A0      #006=FLI$BUILD_$$EFT File=FLI$UTIL.:E05TSI                         TUE 07/29/97 16:01 Page:112  

 **** Variables and constants ****

  ****  Section 006  Data  FLI$BUILD_$$EFT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    30-0-0/d STRC(2088)  r     1 CHECK_$$EFT                4-0-0/d STRC(360)   r     1 DEL_NODATA_REC
    24-0-0/d STRC(90)    r     1 DPSN                       0-0-0/d STRC(72)    r     1 FIT_AREA
   122-0-0/d STRC(2088)  r     1 OPEN_ARCHIVE_ACCOUNT

  ****  Section 008 RoData FLI$BUILD_$$EFT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(108)   r     1 BUILD_FIT

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @DP_NAME                  *0-0-0/c CHAR(6)     r     1 DP_NAME
     5-0-0/w PTR         r     1 PTR1$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(72)    r     1 ARCHIVE_ACCT               0-0-0/c ASTR(9)     r     1 ARCHIVE_NAME
     0-0-0/c ASTR(9)     r     1 BACKUP_NAME                0-0-0/w PTR         r     1 BLK_TAG$
     0-0-0/w PTR         r     1 BLK_TAG0$                  0-0-0/w PTR         r     1 BLOCK_GRAN$
     0-0-0/w PTR         r     1 DISK_FILE_SPEC$            0-0-0/w PTR         r     1 DISK_GRAN$
     0-0-0/w PTR         r     1 DPLIST$                    0-0-0/w PTR         r     1 DPRESLIST$
     0-0-0/c ASTR(9)     r     1 DUAL_FILE                  0-0-0/c ASTR(9)     r     1 EFT_CVOL_FILE
PL6.E3A0      #006=FLI$BUILD_$$EFT File=FLI$UTIL.:E05TSI                         TUE 07/29/97 16:01 Page:113  
     0-0-0/c ASTR(9)     r     1 EFT_RESTRICT_FILE          0-0-0/w SBIN        r     1 NBR_BYTES_TO_MOVE
     0-0-0/c ASTR(9)     r     1 NODATA_FILE_NAME           0-0-0/c STRC(369)   r     1 NODATA_KEY
     0-0-0/c ASTR(9)     r     1 PRIME_FILE                 0-0-0/c ASTR(9)     r     1 REBUILD_DIR_KEY
     0-0-0/c ASTR(9)     r     1 REBUILD_KEY                0-0-0/c ASTR(9)     r     1 REBUILD_NAME
     0-0-0/c ASTR(9)     r     1 RET_CMDS_NAME              0-0-0/w PTR         r     1 SNVECLIST$
     0-0-0/w PTR         r     1 TAPE_DCBLIST$              0-0-0/c ASTR(9)     r     1 TSN_USED_NAME

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 BLANK1024(0:1023)          0-0-0/c STRC(90)    r     1 CODE09
     0-0-0/w STRC(288)   r     1 CODE14                     0-0-0/w STRC(1116)  r     1 FM$FIT
     0-0-0N  NULL        r     1 M$ARCHIVE                  0-0-0N  NULL        r     1 M$CHECK_$$EFT
     0-0-0N  NULL        r     1 M$NODATA_LIST


   Procedure FLI$BUILD_$$EFT requires 110 words for executable code.
   Procedure FLI$BUILD_$$EFT requires 6 words of local(AUTO) storage.
PL6.E3A0      #006=FLI$BUILD_$$EFT File=FLI$UTIL.:E05TSI                         TUE 07/29/97 16:01 Page:114  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #006=FLI$BUILD_$$EFT File=FLI$UTIL.:E05TSI                         TUE 07/29/97 16:01 Page:115  
          MINI XREF LISTING

ARCHIVE_ACCT
      7018**DCL      9683--DCLINIT  9802--DCLINIT
ARCHIVE_NAME.L#
      7005**DCL      7005--IMP-SIZ
BACKUP_NAME.L#
      6649**DCL      6649--IMP-SIZ
BLANK1024
      9602**DCL      9857<<ASSIGN
BLK_TAG.NAME
      6141**DCL      6141--REDEF
BLK_TAG$
      6138**DCL      6138--IMP-PTR
BLK_TAG0.NAME
      6147**DCL      6147--REDEF
BLK_TAG0$
      6144**DCL      6144--IMP-PTR
BLOCK_GRAN$
      6151**DCL      6152--IMP-PTR
BUILD_FIT
      9600**DCL      9858>>ASSIGN   9869--ASSIGN   9870--ASSIGN   9871--ASSIGN
CHECK_$$EFT
      9678**DCL      9852<>CALL
CHECK_$$EFT.ACSVEH_
      9680**DCL      9681--REDEF
CHECK_$$EFT.ALTKEYS_
      9686**DCL      9687--REDEF    9687--REDEF
CHECK_$$EFT.FPARAM_
      9683**DCL      9851<<ASSIGN
CHECK_$$EFT.HDR_
      9685**DCL      9686--REDEF
CHECK_$$EFT.TAB_
      9684**DCL      9685--REDEF
PL6.E3A0      #006=FLI$BUILD_$$EFT File=FLI$UTIL.:E05TSI                         TUE 07/29/97 16:01 Page:116  
CHECK_$$EFT.UHL_
      9678**DCL      9679--REDEF    9679--REDEF
CHECK_$$EFT.V
      9687**DCL      9678--DCLINIT
CHECK_$$EFT.V.FSN#
      9718**DCL      9718--REDEF    9718--REDEF
CHECK_$$EFT.WSN_
      9684**DCL      9684--REDEF
CLOSE_NODATA_LIST.SN_
      7803**DCL      7803--REDEF
CLOSE_NODATA_LIST.UTL_
      7804**DCL      7804--REDEF
CLOSE_NODATA_LIST.V.EXPIRE#
      7818**DCL      7818--REDEF
CLOSE_NODATA_LIST.V.TYPE#
      7816**DCL      7816--REDEF
CLOSE_NODATA_LIST.V.XTNSIZE#
      7813**DCL      7813--REDEF    7815--REDEF
CLOSE_PRIME_DUAL.SN_
      7280**DCL      7280--REDEF
CLOSE_PRIME_DUAL.UTL_
      7281**DCL      7281--REDEF
CLOSE_PRIME_DUAL.V.EXPIRE#
      7295**DCL      7295--REDEF
CLOSE_PRIME_DUAL.V.TYPE#
      7293**DCL      7293--REDEF
CLOSE_PRIME_DUAL.V.XTNSIZE#
      7290**DCL      7290--REDEF    7292--REDEF
CLOSE_REBUILD.SN_
      7555**DCL      7555--REDEF
CLOSE_REBUILD.UTL_
      7556**DCL      7556--REDEF
CLOSE_REBUILD.V.EXPIRE#
      7570**DCL      7570--REDEF
CLOSE_REBUILD.V.TYPE#
      7568**DCL      7568--REDEF
PL6.E3A0      #006=FLI$BUILD_$$EFT File=FLI$UTIL.:E05TSI                         TUE 07/29/97 16:01 Page:117  
CLOSE_REBUILD.V.XTNSIZE#
      7565**DCL      7565--REDEF    7567--REDEF
CLOSE_STATUS.SN_
      6770**DCL      6770--REDEF
CLOSE_STATUS.UTL_
      6771**DCL      6771--REDEF
CLOSE_STATUS.V.EXPIRE#
      6785**DCL      6785--REDEF
CLOSE_STATUS.V.TYPE#
      6783**DCL      6783--REDEF
CLOSE_STATUS.V.XTNSIZE#
      6780**DCL      6780--REDEF    6782--REDEF
CLOSE_TSN_USED.SN_
      6480**DCL      6480--REDEF
CLOSE_TSN_USED.UTL_
      6481**DCL      6481--REDEF
CLOSE_TSN_USED.V.EXPIRE#
      6495**DCL      6495--REDEF
CLOSE_TSN_USED.V.TYPE#
      6493**DCL      6493--REDEF
CLOSE_TSN_USED.V.XTNSIZE#
      6490**DCL      6490--REDEF    6492--REDEF
CODE09
      9594**DCL      9862--ASSIGN   9864--ASSIGN   9865--ASSIGN   9866--ASSIGN
CODE09.ACCT
      9595**DCL      9881<<ASSIGN
CODE14
      9586**DCL      9862--ASSIGN   9863--ASSIGN   9865--ASSIGN   9867--ASSIGN   9870--ASSIGN   9880--ASSIGN
CODE14.ACCESS.BUPF
      9588**DCL      9874<<ASSIGN
CODE14.ACCESS.BUPM
      9588**DCL      9875<<ASSIGN
CODE14.ACCESS.OWNERF
      9588**DCL      9876<<ASSIGN
CODE14.MGRANS
      9591**DCL      9877<<ASSIGN
PL6.E3A0      #006=FLI$BUILD_$$EFT File=FLI$UTIL.:E05TSI                         TUE 07/29/97 16:01 Page:118  
CODE14.OWNER.ACCT
      9591**DCL      9879<<ASSIGN
CODE14.OWNER.NAME
      9591**DCL      9878<<ASSIGN
CON_CLOSE_ARCHIVE.SN_
      6812**DCL      6812--REDEF
CON_CLOSE_ARCHIVE.UTL_
      6813**DCL      6813--REDEF
CON_CLOSE_ARCHIVE.V.EXPIRE#
      6827**DCL      6827--REDEF
CON_CLOSE_ARCHIVE.V.TYPE#
      6825**DCL      6825--REDEF
CON_CLOSE_ARCHIVE.V.XTNSIZE#
      6822**DCL      6822--REDEF    6824--REDEF
CON_OPEN_ARCHIVE_FILE.ACSVEH_
      6899**DCL      6900--REDEF
CON_OPEN_ARCHIVE_FILE.ALTKEYS_
      6905**DCL      6906--REDEF    6906--REDEF
CON_OPEN_ARCHIVE_FILE.HDR_
      6904**DCL      6905--REDEF
CON_OPEN_ARCHIVE_FILE.TAB_
      6903**DCL      6904--REDEF
CON_OPEN_ARCHIVE_FILE.UHL_
      6897**DCL      6898--REDEF    6898--REDEF
CON_OPEN_ARCHIVE_FILE.V.FSN#
      6937**DCL      6937--REDEF    6937--REDEF
CON_OPEN_ARCHIVE_FILE.WSN_
      6903**DCL      6903--REDEF
CON_READ_ARCHIVE_FILE.STATION_
      6961**DCL      6962--REDEF
CON_READ_ARCHIVE_FILE.V.DVBYTE.REREAD#
      6973**DCL      6973--REDEF
CON_READ_ARCHIVE_FILE.V.INDX#
      6971**DCL      6971--REDEF
CVOL_UTL.ULBL#
      6240**DCL      6240--REDEF
PL6.E3A0      #006=FLI$BUILD_$$EFT File=FLI$UTIL.:E05TSI                         TUE 07/29/97 16:01 Page:119  
DEL_NODATA_REC.V
      7906**DCL      7903--DCLINIT
DISK_CLOSE.SN_
      8524**DCL      8524--REDEF
DISK_CLOSE.UTL_
      8525**DCL      8525--REDEF
DISK_CLOSE.V.EXPIRE#
      8539**DCL      8539--REDEF
DISK_CLOSE.V.TYPE#
      8537**DCL      8537--REDEF
DISK_CLOSE.V.XTNSIZE#
      8534**DCL      8534--REDEF    8536--REDEF
DISK_FILE_SPEC.SPEC
      8889**DCL      8891--REDEF
DISK_FILE_SPEC.SPEC.START
      8890**DCL      8890--REDEF
DISK_FILE_SPEC.SPEC.STOP
      8891**DCL      8891--REDEF
DISK_FILE_SPEC$
      8888**DCL      8889--IMP-PTR
DISK_GRAN$
      6151**DCL      6151--IMP-PTR
DISK_OPEN.ACSVEH_
      8389**DCL      8390--REDEF
DISK_OPEN.ALTKEYS_
      8395**DCL      8396--REDEF    8396--REDEF
DISK_OPEN.HDR_
      8394**DCL      8395--REDEF
DISK_OPEN.TAB_
      8393**DCL      8394--REDEF
DISK_OPEN.UHL_
      8387**DCL      8388--REDEF    8388--REDEF
DISK_OPEN.V.FSN#
      8427**DCL      8427--REDEF    8427--REDEF
DISK_OPEN.WSN_
      8393**DCL      8393--REDEF
PL6.E3A0      #006=FLI$BUILD_$$EFT File=FLI$UTIL.:E05TSI                         TUE 07/29/97 16:01 Page:120  
DISK_READ.STATION_
      8451**DCL      8452--REDEF
DISK_READ.V.DVBYTE.REREAD#
      8463**DCL      8463--REDEF
DISK_READ.V.INDX#
      8461**DCL      8461--REDEF
DISK_WRITE.STATION_
      8489**DCL      8489--REDEF
DISK_WRITE.V.DVBYTE.VFC#
      8496**DCL      8496--REDEF
DPLIST$
      8874**DCL      8886--IMP-PTR
DPRESLIST$
      8888**DCL      8888--IMP-PTR
DPSN
      9578**DCL      9678--DCLINIT  9797--DCLINIT
DPSN.SN#
      9578**DCL      9845<<ASSIGN
DP_NAME
      9560**DCL         6--PROC     9845>>ASSIGN
DUAL_FILE.L#
      7076**DCL      7076--IMP-SIZ
EFTWORD
      9009**DCL      9009--REDEF
EFT_CVOL_FILE.L#
      6200**DCL      6200--IMP-SIZ
EFT_RESTRICT_FILE.L#
      6227**DCL      6227--IMP-SIZ
FIT_AREA
      6510**DCL      9850<>CALL     9851>>ASSIGN   9882>>ASSIGN
FIT_AREA.PTR$
      6512**DCL      9856>>ASSIGN
FIT_AREA.W2
      6511**DCL      6512--REDEF
FLI$ALLOC_BUF
      9552**DCL-ENT  9850--CALL
PL6.E3A0      #006=FLI$BUILD_$$EFT File=FLI$UTIL.:E05TSI                         TUE 07/29/97 16:01 Page:121  
FLI$RPT_ERR
      9553**DCL-ENT  9888--CALL
FM$FIT
      9581**DCL      9858<<ASSIGN
FM$FIT.CODES.CODE
      9581**DCL      9859<<ASSIGN   9860<<ASSIGN   9861<<ASSIGN
FM$FIT.CODES.ITEMX
      9581**DCL      9868<<ASSIGN   9869<<ASSIGN   9870<<ASSIGN
FM$FIT.CODES.NAW
      9581**DCL      9862<<ASSIGN   9863<<ASSIGN   9864<<ASSIGN
FM$FIT.CODES.NDW
      9581**DCL      9865<<ASSIGN   9866<<ASSIGN   9867<<ASSIGN
FPT_EXIT.V.STEPCC#
      8314**DCL      8314--REDEF
M$OPEN
      5501**DCL-ENT  9852--CALL     9883--CALL
NBR_BYTES_TO_MOVE
      6150**DCL      6151--IMP-SIZ  6152--IMP-SIZ
NODATA_FILE_NAME.L#
      7765**DCL      7765--IMP-SIZ
NODATA_KEY
      7911**DCL      7903--DCLINIT  7904--DCLINIT
OPEN_ARCHIVE_ACCOUNT
      9797**DCL      9883<>CALL
OPEN_ARCHIVE_ACCOUNT.ACSVEH_
      9799**DCL      9800--REDEF
OPEN_ARCHIVE_ACCOUNT.ALTKEYS_
      9805**DCL      9806--REDEF    9806--REDEF
OPEN_ARCHIVE_ACCOUNT.HDR_
      9804**DCL      9805--REDEF
OPEN_ARCHIVE_ACCOUNT.IFPARAM_
      9802**DCL      9882<<ASSIGN
OPEN_ARCHIVE_ACCOUNT.TAB_
      9803**DCL      9804--REDEF
OPEN_ARCHIVE_ACCOUNT.UHL_
      9797**DCL      9798--REDEF    9798--REDEF
PL6.E3A0      #006=FLI$BUILD_$$EFT File=FLI$UTIL.:E05TSI                         TUE 07/29/97 16:01 Page:122  
OPEN_ARCHIVE_ACCOUNT.V
      9806**DCL      9797--DCLINIT
OPEN_ARCHIVE_ACCOUNT.V.FSN#
      9837**DCL      9837--REDEF    9837--REDEF
OPEN_ARCHIVE_ACCOUNT.WSN_
      9803**DCL      9803--REDEF
OPEN_NODATA_LIST.ACSVEH_
      7698**DCL      7699--REDEF
OPEN_NODATA_LIST.ALTKEYS_
      7704**DCL      7705--REDEF    7705--REDEF
OPEN_NODATA_LIST.HDR_
      7703**DCL      7704--REDEF
OPEN_NODATA_LIST.TAB_
      7702**DCL      7703--REDEF
OPEN_NODATA_LIST.UHL_
      7696**DCL      7697--REDEF    7697--REDEF
OPEN_NODATA_LIST.V.FSN#
      7736**DCL      7736--REDEF    7736--REDEF
OPEN_NODATA_LIST.WSN_
      7702**DCL      7702--REDEF
OPEN_PRIME_DUAL.ACSVEH_
      7145**DCL      7146--REDEF
OPEN_PRIME_DUAL.ALTKEYS_
      7151**DCL      7152--REDEF    7152--REDEF
OPEN_PRIME_DUAL.HDR_
      7150**DCL      7151--REDEF
OPEN_PRIME_DUAL.TAB_
      7149**DCL      7150--REDEF
OPEN_PRIME_DUAL.UHL_
      7143**DCL      7144--REDEF    7144--REDEF
OPEN_PRIME_DUAL.V.FSN#
      7183**DCL      7183--REDEF    7183--REDEF
OPEN_PRIME_DUAL.WSN_
      7149**DCL      7149--REDEF
OPEN_REBUILD.ACSVEH_
      7380**DCL      7381--REDEF
PL6.E3A0      #006=FLI$BUILD_$$EFT File=FLI$UTIL.:E05TSI                         TUE 07/29/97 16:01 Page:123  
OPEN_REBUILD.ALTKEYS_
      7386**DCL      7387--REDEF    7387--REDEF
OPEN_REBUILD.HDR_
      7385**DCL      7386--REDEF
OPEN_REBUILD.TAB_
      7384**DCL      7385--REDEF
OPEN_REBUILD.UHL_
      7378**DCL      7379--REDEF    7379--REDEF
OPEN_REBUILD.V.FSN#
      7418**DCL      7418--REDEF    7418--REDEF
OPEN_REBUILD.WSN_
      7384**DCL      7384--REDEF
OPEN_STATUS.ACSVEH_
      6582**DCL      6583--REDEF
OPEN_STATUS.ALTKEYS_
      6588**DCL      6589--REDEF    6589--REDEF
OPEN_STATUS.HDR_
      6587**DCL      6588--REDEF
OPEN_STATUS.TAB_
      6586**DCL      6587--REDEF
OPEN_STATUS.UHL_
      6580**DCL      6581--REDEF    6581--REDEF
OPEN_STATUS.V.FSN#
      6620**DCL      6620--REDEF    6620--REDEF
OPEN_STATUS.WSN_
      6586**DCL      6586--REDEF
OPEN_TSN_USED.ACSVEH_
      6318**DCL      6319--REDEF
OPEN_TSN_USED.ALTKEYS_
      6324**DCL      6325--REDEF    6325--REDEF
OPEN_TSN_USED.HDR_
      6323**DCL      6324--REDEF
OPEN_TSN_USED.TAB_
      6322**DCL      6323--REDEF
OPEN_TSN_USED.UHL_
      6316**DCL      6317--REDEF    6317--REDEF
PL6.E3A0      #006=FLI$BUILD_$$EFT File=FLI$UTIL.:E05TSI                         TUE 07/29/97 16:01 Page:124  
OPEN_TSN_USED.V.FSN#
      6356**DCL      6356--REDEF    6356--REDEF
OPEN_TSN_USED.WSN_
      6322**DCL      6322--REDEF
PRE_RET_CLOSE.SN_
      9252**DCL      9252--REDEF
PRE_RET_CLOSE.UTL_
      9253**DCL      9253--REDEF
PRE_RET_CLOSE.V.EXPIRE#
      9267**DCL      9267--REDEF
PRE_RET_CLOSE.V.TYPE#
      9265**DCL      9265--REDEF
PRE_RET_CLOSE.V.XTNSIZE#
      9262**DCL      9262--REDEF    9264--REDEF
PRE_RET_OPEN.ACSVEH_
      9187**DCL      9188--REDEF
PRE_RET_OPEN.ALTKEYS_
      9193**DCL      9194--REDEF    9194--REDEF
PRE_RET_OPEN.HDR_
      9192**DCL      9193--REDEF
PRE_RET_OPEN.TAB_
      9191**DCL      9192--REDEF
PRE_RET_OPEN.UHL_
      9185**DCL      9186--REDEF    9186--REDEF
PRE_RET_OPEN.V.FSN#
      9225**DCL      9225--REDEF    9225--REDEF
PRE_RET_OPEN.WSN_
      9191**DCL      9191--REDEF
PRE_RET_READ.STATION_
      9042**DCL      9043--REDEF
PRE_RET_READ.V.DVBYTE.REREAD#
      9054**DCL      9054--REDEF
PRE_RET_READ.V.INDX#
      9052**DCL      9052--REDEF
PRE_RET_WRITE.STATION_
      9080**DCL      9080--REDEF
PL6.E3A0      #006=FLI$BUILD_$$EFT File=FLI$UTIL.:E05TSI                         TUE 07/29/97 16:01 Page:125  
PRE_RET_WRITE.V.DVBYTE.VFC#
      9087**DCL      9087--REDEF
PRIME_FILE.L#
      7049**DCL      7049--IMP-SIZ
PTR1$
      9559**DCL      9581--IMP-PTR  9586--IMP-PTR  9594--IMP-PTR  9856<<ASSIGN   9857>>ASSIGN   9858>>ASSIGN
      9859>>ASSIGN   9860>>ASSIGN   9861>>ASSIGN   9862>>ASSIGN   9863>>ASSIGN   9864>>ASSIGN   9865>>ASSIGN
      9866>>ASSIGN   9867>>ASSIGN   9868>>ASSIGN   9869>>ASSIGN   9870>>ASSIGN   9871<<ASSIGN   9871>>ASSIGN
      9874>>ASSIGN   9875>>ASSIGN   9876>>ASSIGN   9877>>ASSIGN   9878>>ASSIGN   9879>>ASSIGN   9880<<ASSIGN
      9880>>ASSIGN   9881>>ASSIGN
READ_NODATA_LIST.STATION_
      7842**DCL      7843--REDEF
READ_NODATA_LIST.V.DVBYTE.REREAD#
      7854**DCL      7854--REDEF
READ_NODATA_LIST.V.INDX#
      7852**DCL      7852--REDEF
READ_PRIME_DUAL.STATION_
      7207**DCL      7208--REDEF
READ_PRIME_DUAL.V.DVBYTE.REREAD#
      7219**DCL      7219--REDEF
READ_PRIME_DUAL.V.INDX#
      7217**DCL      7217--REDEF
READ_REBUILD.STATION_
      7513**DCL      7514--REDEF
READ_REBUILD.V.DVBYTE.REREAD#
      7525**DCL      7525--REDEF
READ_REBUILD.V.INDX#
      7523**DCL      7523--REDEF
READ_STATUS.STATION_
      6728**DCL      6729--REDEF
READ_STATUS.V.DVBYTE.REREAD#
      6740**DCL      6740--REDEF
READ_STATUS.V.INDX#
      6738**DCL      6738--REDEF
READ_TSN_USED.STATION_
      6438**DCL      6439--REDEF
PL6.E3A0      #006=FLI$BUILD_$$EFT File=FLI$UTIL.:E05TSI                         TUE 07/29/97 16:01 Page:126  
READ_TSN_USED.V.DVBYTE.REREAD#
      6450**DCL      6450--REDEF
READ_TSN_USED.V.INDX#
      6448**DCL      6448--REDEF
REBUILD_DIR_KEY.L#
      7599**DCL      7599--IMP-SIZ
REBUILD_KEY.L#
      7626**DCL      7626--IMP-SIZ
REBUILD_NAME.L#
      7447**DCL      7447--IMP-SIZ
RET_CMDS_NAME.L#
      9296**DCL      9296--IMP-SIZ
SNVECLIST$
      8828**DCL      8828--IMP-PTR
SPEC.START
      8892**DCL      8893--REDEF
SPEC.STOP
      8893**DCL      8894--REDEF
SPECCHARS
      8892**DCL      8892--REDEF
TAPE_BLOCK_.W2
      6166**DCL      6167--REDEF
TAPE_CLOSE.SN_
      8745**DCL      8745--REDEF
TAPE_CLOSE.UTL_
      8746**DCL      8746--REDEF
TAPE_CLOSE.V.EXPIRE#
      8760**DCL      8760--REDEF
TAPE_CLOSE.V.TYPE#
      8758**DCL      8758--REDEF
TAPE_CLOSE.V.XTNSIZE#
      8755**DCL      8755--REDEF    8757--REDEF
TAPE_DCBLIST$
      8301**DCL      8301--IMP-PTR
TAPE_OPEN.ACSVEH_
      8610**DCL      8611--REDEF
PL6.E3A0      #006=FLI$BUILD_$$EFT File=FLI$UTIL.:E05TSI                         TUE 07/29/97 16:01 Page:127  
TAPE_OPEN.ALTKEYS_
      8616**DCL      8617--REDEF    8617--REDEF
TAPE_OPEN.HDR_
      8615**DCL      8616--REDEF
TAPE_OPEN.TAB_
      8614**DCL      8615--REDEF
TAPE_OPEN.UHL_
      8608**DCL      8609--REDEF    8609--REDEF
TAPE_OPEN.V.FSN#
      8648**DCL      8648--REDEF    8648--REDEF
TAPE_OPEN.WSN_
      8614**DCL      8614--REDEF
TAPE_READ.STATION_
      8672**DCL      8673--REDEF
TAPE_READ.V.DVBYTE.REREAD#
      8684**DCL      8684--REDEF
TAPE_READ.V.INDX#
      8682**DCL      8682--REDEF
TAPE_WRITE.STATION_
      8710**DCL      8710--REDEF
TAPE_WRITE.V.DVBYTE.VFC#
      8717**DCL      8717--REDEF
TSN_USED_NAME.L#
      6385**DCL      6385--IMP-SIZ
TVECTOR.W2
      8841**DCL      8842--REDEF
WRITE_NODATA_LIST.STATION_
      7880**DCL      7880--REDEF
WRITE_NODATA_LIST.V.DVBYTE.VFC#
      7887**DCL      7887--REDEF
WRITE_PRIME_DUAL.STATION_
      7245**DCL      7245--REDEF
WRITE_PRIME_DUAL.V.DVBYTE.VFC#
      7252**DCL      7252--REDEF
WRITE_REBUILD.STATION_
      7481**DCL      7481--REDEF
PL6.E3A0      #006=FLI$BUILD_$$EFT File=FLI$UTIL.:E05TSI                         TUE 07/29/97 16:01 Page:128  
WRITE_REBUILD.V.DVBYTE.VFC#
      7488**DCL      7488--REDEF
WRITE_STATUS.STATION_
      6696**DCL      6696--REDEF
WRITE_STATUS.V.DVBYTE.VFC#
      6703**DCL      6703--REDEF
WRITE_TSN_USED.STATION_
      6406**DCL      6406--REDEF
WRITE_TSN_USED.V.DVBYTE.VFC#
      6413**DCL      6413--REDEF

PL6.E3A0      #007=FLI$DISMNT_TAPES File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:03 Page:129  
      509        1        /*T***********************************************************/
      510        2        /*T*                                                         */
      511        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      512        4        /*T*                                                         */
      513        5        /*T***********************************************************/
      514        6        FLI$DISMNT_TAPES: PROC ( SNLIST$, DISP );
      515        7        /*F*  NAME: FLI$DISMNT_TAPES
      516        8              PURPOSE: Dismounts or rewinds all tapes contained in a serial number list.
      517        9        ***/
      518       10
      519       11    1   DCL SNLIST$ PTR; /* Pointer to list of serial numbers to be released/rewound  */
      520       12    1   DCL DISP UBIN;                          /* Disposition                        */
      521       13
      522       14        /***
      523       15         *** INCLUDE FILES
      524       16         ***/
      525       17        %INCLUDE CP_6;
      526     5576        %INCLUDE FLI_DATA_R;
      527     6990        %INCLUDE B_ERRORS_C;
      528     8117        %INCLUDE CP_6_SUBS;
      529     8657
      530     8658        /***
      531     8659         *** ENTRY
      532     8660         ***/
      533     8661    1   DCL FLI$RPT_ERR ENTRY(5);
      534     8662
      535     8663        /***
      536     8664         *** AUTO
      537     8665         ***/
      538     8666    1   DCL DONE_ONE BIT(1) AUTO;
      539     8667    1   DCL I SBIN AUTO;
      540     8668
      541     8669        /***
      542     8670         *** MACROS
      543     8671         ***/
      544     8672        %VLP_SN( STCLASS="BASED(SNLIST$)");
      545     8685        %FPT_REM( FPTN=REM_LT );
PL6.E3A0      #007=FLI$DISMNT_TAPES File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:03 Page:130  
      546     8699        %B$TCB( STCLASS="BASED(B$TCB$)" );
      547     8702        %B$ALT;
      548     8710
      549     8711        /******************************/
      550     8712
      551     8713    1      REM_LT.V.DISP# = DISP;
      552     8714    1      DONE_ONE = '0'B;
      553     8715
      554     8716    2      DO I=0 TO VLP_SN.NUM# - 1;
      555     8717    2         REM_LT.V.PSN# = VLP_SN.SN#(I);
      556     8718    2         CALL M$REM( REM_LT )
      557     8719    3          WHENRETURN DO;
      558     8720    3            DONE_ONE = '1'B;
      559     8721    3            END;
      560     8722    3          WHENALTRETURN DO;
      561     8723    3            IF B$TCB.ALT$->B$ALT.ERR.CODE ~= %E$NOTUR
      562     8724    3              OR (B$TCB.ALT$->B$ALT.ERR.CODE = %E$NOTUR
      563     8725    3              AND VLP_SN.NUM# = 1)
      564     8726    4             THEN DO;
      565     8727    4               CALL FLI$RPT_ERR;
      566     8728    4               DONE_ONE = '1'B;
      567     8729    4               END;
      568     8730    3            END;
      569     8731    2         END;
      570     8732
      571     8733    1      IF NOT DONE_ONE
      572     8734    1       THEN CALL FLI$RPT_ERR;
      573     8735    1      RETURN;
      574     8736
      575     8737    1   END FLI$DISMNT_TAPES;
      576     8738        %EOD;

PL6.E3A0      #007=FLI$DISMNT_TAPES File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:03 Page:131  
--  Include file information  --

   CP_6_SUBS.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FLI$DISMNT_TAPES.

   Procedure FLI$DISMNT_TAPES requires 52 words for executable code.
   Procedure FLI$DISMNT_TAPES requires 8 words of local(AUTO) storage.

PL6.E3A0      #007=FLI$DISMNT_TAPES File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:03 Page:132  

 Object Unit name= FLI$DISMNT_TAPES                           File name= FLI$UTIL.:E05TOU
 UTS= JUL 29 '97 16:03:58.80 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$PRE_RET
    2   Data  even  none    10     12  FLI$DISMNT_TAPES
    3   Proc  even  none    52     64  FLI$DISMNT_TAPES

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes            yes      Std        2  FLI$DISMNT_TAPES

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       5 FLI$RPT_ERR
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #007=FLI$DISMNT_TAPES File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:03 Page:133  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  TAPE_DCBLIST$                         SNVECLIST$
     B$TCB$                                DPLIST$                               DPRESLIST$
     DISK_FILE_SPEC$                       SPECCHARS                             EFTWORD
     M$PRE_RET                             RET_CMDS_NAME                         B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #007=FLI$DISMNT_TAPES File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:03 Page:134  


      509        1        /*T***********************************************************/
      510        2        /*T*                                                         */
      511        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      512        4        /*T*                                                         */
      513        5        /*T***********************************************************/
      514        6        FLI$DISMNT_TAPES: PROC ( SNLIST$, DISP );

      6  3 000000   000000 700200 xent  FLI$DISMNT_* TSX0  ! X66_AUTO_2
         3 000001   000010 000002                    ZERO    8,2

      515        7        /*F*  NAME: FLI$DISMNT_TAPES
      516        8              PURPOSE: Dismounts or rewinds all tapes contained in a serial number list.
      517        9        ***/
      518       10
      519       11    1   DCL SNLIST$ PTR; /* Pointer to list of serial numbers to be released/rewound  */
      520       12    1   DCL DISP UBIN;                          /* Disposition                        */
      521       13
      522       14        /***
      523       15         *** INCLUDE FILES
      524       16         ***/
      525       17        %INCLUDE CP_6;
      526     5576        %INCLUDE FLI_DATA_R;
      527     6990        %INCLUDE B_ERRORS_C;
      528     8117        %INCLUDE CP_6_SUBS;
      529     8657
      530     8658        /***
      531     8659         *** ENTRY
      532     8660         ***/
      533     8661    1   DCL FLI$RPT_ERR ENTRY(5);
      534     8662
      535     8663        /***
      536     8664         *** AUTO
      537     8665         ***/
      538     8666    1   DCL DONE_ONE BIT(1) AUTO;
      539     8667    1   DCL I SBIN AUTO;
      540     8668
PL6.E3A0      #007=FLI$DISMNT_TAPES File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:03 Page:135  
      541     8669        /***
      542     8670         *** MACROS
      543     8671         ***/
      544     8672        %VLP_SN( STCLASS="BASED(SNLIST$)");
      545     8685        %FPT_REM( FPTN=REM_LT );
      546     8699        %B$TCB( STCLASS="BASED(B$TCB$)" );
      547     8702        %B$ALT;
      548     8710
      549     8711        /******************************/
      550     8712
      551     8713    1      REM_LT.V.DISP# = DISP;

   8713  3 000002   200004 470500                    LDP0    @DISP,,AUTO
         3 000003   000000 236100                    LDQ     0,,PR0
         3 000004   000033 736000                    QLS     27
         3 000005   000010 552040 2                  STBQ    REM_LT+2,'40'O

      552     8714    1      DONE_ONE = '0'B;

   8714  3 000006   200005 450100                    STZ     DONE_ONE,,AUTO

      553     8715
      554     8716    2      DO I=0 TO VLP_SN.NUM# - 1;

   8716  3 000007   200006 450100                    STZ     I,,AUTO
         3 000010   000051 710000 3                  TRA     s:8731+1

      555     8717    2         REM_LT.V.PSN# = VLP_SN.SN#(I);

   8717  3 000011   200003 470500                    LDP0    @SNLIST$,,AUTO
         3 000012   000000 471500                    LDP1    0,,PR0
         3 000013   200006 236100                    LDQ     I,,AUTO
         3 000014   000006 402007                    MPY     6,DL
         3 000015   040000 100506                    MLR     fill='040'O
         3 000016   100001 000006                    ADSC9   1,Q,PR1                  cn=0,n=6
         3 000017   000010 400006 2                  ADSC9   REM_LT+2                 cn=2,n=6

PL6.E3A0      #007=FLI$DISMNT_TAPES File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:03 Page:136  
      556     8718    2         CALL M$REM( REM_LT )

   8718  3 000020   000006 630400 2                  EPPR0   REM_LT
         3 000021   460006 713400                    CLIMB   alt,+24582
         3 000022   400000 401760                    pmme    nvectors=1
         3 000023   000027 702000 3                  TSX2    s:8723

      557     8719    3          WHENRETURN DO;

      558     8720    3            DONE_ONE = '1'B;

   8720  3 000024   400000 236003                    LDQ     -131072,DU
         3 000025   200005 756100                    STQ     DONE_ONE,,AUTO

      559     8721    3            END;

   8721  3 000026   000050 710000 3                  TRA     s:8731

      560     8722    3          WHENALTRETURN DO;

      561     8723    3            IF B$TCB.ALT$->B$ALT.ERR.CODE ~= %E$NOTUR

   8723  3 000027   000000 470400 xsym               LDP0    B$TCB$
         3 000030   000000 471500                    LDP1    0,,PR0
         3 000031   100102 236100                    LDQ     66,,PR1
         3 000032   377770 376007                    ANQ     131064,DL
         3 000033   012220 116007                    CMPQ    5264,DL
         3 000034   000043 601000 3                  TNZ     s:8727
         3 000035   000050 601000 3                  TNZ     s:8731
         3 000036   200003 473500                    LDP3    @SNLIST$,,AUTO
         3 000037   300000 474500                    LDP4    0,,PR3
         3 000040   400000 235100                    LDA     0,,PR4
         3 000041   000001 115007                    CMPA    1,DL
         3 000042   000050 601000 3                  TNZ     s:8731

      562     8724    3              OR (B$TCB.ALT$->B$ALT.ERR.CODE = %E$NOTUR
      563     8725    3              AND VLP_SN.NUM# = 1)
PL6.E3A0      #007=FLI$DISMNT_TAPES File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:03 Page:137  
      564     8726    4             THEN DO;

      565     8727    4               CALL FLI$RPT_ERR;

   8727  3 000043   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000044   000000 701000 xent               TSX1    FLI$RPT_ERR
         3 000045   000000 011000                    NOP     0

      566     8728    4               DONE_ONE = '1'B;

   8728  3 000046   400000 236003                    LDQ     -131072,DU
         3 000047   200005 756100                    STQ     DONE_ONE,,AUTO

      567     8729    4               END;

      568     8730    3            END;

      569     8731    2         END;

   8731  3 000050   200006 054100                    AOS     I,,AUTO
         3 000051   200003 470500                    LDP0    @SNLIST$,,AUTO
         3 000052   000000 471500                    LDP1    0,,PR0
         3 000053   200006 236100                    LDQ     I,,AUTO
         3 000054   100000 116100                    CMPQ    0,,PR1
         3 000055   000011 604000 3                  TMI     s:8717

      570     8732
      571     8733    1      IF NOT DONE_ONE

   8733  3 000056   200005 234100                    SZN     DONE_ONE,,AUTO
         3 000057   000063 604000 3                  TMI     s:8735

      572     8734    1       THEN CALL FLI$RPT_ERR;

   8734  3 000060   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000061   000000 701000 xent               TSX1    FLI$RPT_ERR
         3 000062   000000 011000                    NOP     0
PL6.E3A0      #007=FLI$DISMNT_TAPES File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:03 Page:138  

      573     8735    1      RETURN;

   8735  3 000063   000000 702200 xent               TSX2  ! X66_ARET
      574     8736
      575     8737    1   END FLI$DISMNT_TAPES;
      576     8738        %EOD;

PL6.E3A0      #007=FLI$DISMNT_TAPES File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:03 Page:139  
--  Include file information  --

   CP_6_SUBS.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FLI$DISMNT_TAPES.
PL6.E3A0      #007=FLI$DISMNT_TAPES File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:03 Page:140  

 **** Variables and constants ****

  ****  Section 002  Data  FLI$DISMNT_TAPES

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/d STRC(144)   r     1 REM_LT

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @DISP                      3-0-0/w PTR         r     1 @SNLIST$
    *0-0-0/w UBIN        r     1 DISP                       5-0-0/b BIT         r     1 DONE_ONE
     6-0-0/w SBIN        r     1 I                         *0-0-0/w PTR         r     1 SNLIST$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w PTR         r     1 DISK_FILE_SPEC$
     0-0-0/w PTR         r     1 DPLIST$                    0-0-0/w PTR         r     1 DPRESLIST$
     0-0-0/c ASTR(9)     r     1 RET_CMDS_NAME              0-0-0/w PTR         r     1 SNVECLIST$
     0-0-0/w PTR         r     1 TAPE_DCBLIST$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/d STRC(90)    r     1 VLP_SN

PL6.E3A0      #007=FLI$DISMNT_TAPES File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:03 Page:141  

   Procedure FLI$DISMNT_TAPES requires 52 words for executable code.
   Procedure FLI$DISMNT_TAPES requires 8 words of local(AUTO) storage.
PL6.E3A0      #007=FLI$DISMNT_TAPES File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:03 Page:142  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #007=FLI$DISMNT_TAPES File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:03 Page:143  
          MINI XREF LISTING

B$ALT.CODE
      8704**DCL      8704--REDEF    8705--REDEF    8705--REDEF
B$ALT.ERR.CODE
      8706**DCL      8723>>IF       8723>>IF
B$ALT.ERR.ERR#
      8706**DCL      8706--REDEF
B$ALT.EVID
      8705**DCL      8705--REDEF    8705--REDEF
B$TCB.ALT$
      8700**DCL      8723>>IF       8723>>IF
B$TCB$
      6507**DCL      8700--IMP-PTR  8723>>IF       8723>>IF
DISK_CLOSE.SN_
      6187**DCL      6187--REDEF
DISK_CLOSE.UTL_
      6188**DCL      6188--REDEF
DISK_CLOSE.V.EXPIRE#
      6202**DCL      6202--REDEF
DISK_CLOSE.V.TYPE#
      6200**DCL      6200--REDEF
DISK_CLOSE.V.XTNSIZE#
      6197**DCL      6197--REDEF    6199--REDEF
DISK_FILE_SPEC.SPEC
      6552**DCL      6554--REDEF
DISK_FILE_SPEC.SPEC.START
      6553**DCL      6553--REDEF
DISK_FILE_SPEC.SPEC.STOP
      6554**DCL      6554--REDEF
DISK_FILE_SPEC$
      6551**DCL      6552--IMP-PTR
DISK_OPEN.ACSVEH_
      6052**DCL      6053--REDEF
PL6.E3A0      #007=FLI$DISMNT_TAPES File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:03 Page:144  
DISK_OPEN.ALTKEYS_
      6058**DCL      6059--REDEF    6059--REDEF
DISK_OPEN.HDR_
      6057**DCL      6058--REDEF
DISK_OPEN.TAB_
      6056**DCL      6057--REDEF
DISK_OPEN.UHL_
      6050**DCL      6051--REDEF    6051--REDEF
DISK_OPEN.V.FSN#
      6090**DCL      6090--REDEF    6090--REDEF
DISK_OPEN.WSN_
      6056**DCL      6056--REDEF
DISK_READ.STATION_
      6114**DCL      6115--REDEF
DISK_READ.V.DVBYTE.REREAD#
      6126**DCL      6126--REDEF
DISK_READ.V.INDX#
      6124**DCL      6124--REDEF
DISK_WRITE.STATION_
      6152**DCL      6152--REDEF
DISK_WRITE.V.DVBYTE.VFC#
      6159**DCL      6159--REDEF
DISP
        12**DCL         6--PROC     8713>>ASSIGN
DONE_ONE
      8666**DCL      8714<<ASSIGN   8720<<ASSIGN   8728<<ASSIGN   8733>>IF
DPLIST$
      6537**DCL      6549--IMP-PTR
DPRESLIST$
      6551**DCL      6551--IMP-PTR
EFTWORD
      6672**DCL      6672--REDEF
FLI$RPT_ERR
      8661**DCL-ENT  8727--CALL     8734--CALL
FPT_EXIT.V.STEPCC#
      5977**DCL      5977--REDEF
PL6.E3A0      #007=FLI$DISMNT_TAPES File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:03 Page:145  
I
      8667**DCL      8716<<DOINDEX  8717>>ASSIGN
M$REM
      5513**DCL-ENT  8718--CALL
PRE_RET_CLOSE.SN_
      6915**DCL      6915--REDEF
PRE_RET_CLOSE.UTL_
      6916**DCL      6916--REDEF
PRE_RET_CLOSE.V.EXPIRE#
      6930**DCL      6930--REDEF
PRE_RET_CLOSE.V.TYPE#
      6928**DCL      6928--REDEF
PRE_RET_CLOSE.V.XTNSIZE#
      6925**DCL      6925--REDEF    6927--REDEF
PRE_RET_OPEN.ACSVEH_
      6850**DCL      6851--REDEF
PRE_RET_OPEN.ALTKEYS_
      6856**DCL      6857--REDEF    6857--REDEF
PRE_RET_OPEN.HDR_
      6855**DCL      6856--REDEF
PRE_RET_OPEN.TAB_
      6854**DCL      6855--REDEF
PRE_RET_OPEN.UHL_
      6848**DCL      6849--REDEF    6849--REDEF
PRE_RET_OPEN.V.FSN#
      6888**DCL      6888--REDEF    6888--REDEF
PRE_RET_OPEN.WSN_
      6854**DCL      6854--REDEF
PRE_RET_READ.STATION_
      6705**DCL      6706--REDEF
PRE_RET_READ.V.DVBYTE.REREAD#
      6717**DCL      6717--REDEF
PRE_RET_READ.V.INDX#
      6715**DCL      6715--REDEF
PRE_RET_WRITE.STATION_
      6743**DCL      6743--REDEF
PL6.E3A0      #007=FLI$DISMNT_TAPES File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:03 Page:146  
PRE_RET_WRITE.V.DVBYTE.VFC#
      6750**DCL      6750--REDEF
REM_LT
      8696**DCL      8718<>CALL
REM_LT.V
      8696**DCL      8696--DCLINIT
REM_LT.V.DISP#
      8696**DCL      8713<<ASSIGN
REM_LT.V.PSN#
      8697**DCL      8717<<ASSIGN
RET_CMDS_NAME.L#
      6959**DCL      6959--IMP-SIZ
SNLIST$
        11**DCL         6--PROC     8683--IMP-PTR  8716>>DOINDEX  8717>>ASSIGN   8723>>IF
SNVECLIST$
      6491**DCL      6491--IMP-PTR
SPEC.START
      6555**DCL      6556--REDEF
SPEC.STOP
      6556**DCL      6557--REDEF
SPECCHARS
      6555**DCL      6555--REDEF
TAPE_CLOSE.SN_
      6408**DCL      6408--REDEF
TAPE_CLOSE.UTL_
      6409**DCL      6409--REDEF
TAPE_CLOSE.V.EXPIRE#
      6423**DCL      6423--REDEF
TAPE_CLOSE.V.TYPE#
      6421**DCL      6421--REDEF
TAPE_CLOSE.V.XTNSIZE#
      6418**DCL      6418--REDEF    6420--REDEF
TAPE_DCBLIST$
      5964**DCL      5964--IMP-PTR
TAPE_OPEN.ACSVEH_
      6273**DCL      6274--REDEF
PL6.E3A0      #007=FLI$DISMNT_TAPES File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:03 Page:147  
TAPE_OPEN.ALTKEYS_
      6279**DCL      6280--REDEF    6280--REDEF
TAPE_OPEN.HDR_
      6278**DCL      6279--REDEF
TAPE_OPEN.TAB_
      6277**DCL      6278--REDEF
TAPE_OPEN.UHL_
      6271**DCL      6272--REDEF    6272--REDEF
TAPE_OPEN.V.FSN#
      6311**DCL      6311--REDEF    6311--REDEF
TAPE_OPEN.WSN_
      6277**DCL      6277--REDEF
TAPE_READ.STATION_
      6335**DCL      6336--REDEF
TAPE_READ.V.DVBYTE.REREAD#
      6347**DCL      6347--REDEF
TAPE_READ.V.INDX#
      6345**DCL      6345--REDEF
TAPE_WRITE.STATION_
      6373**DCL      6373--REDEF
TAPE_WRITE.V.DVBYTE.VFC#
      6380**DCL      6380--REDEF
TVECTOR.W2
      6504**DCL      6505--REDEF
VLP_SN.NUM#
      8683**DCL      8716>>DOINDEX  8723>>IF
VLP_SN.SN#
      8683**DCL      8717>>ASSIGN

PL6.E3A0      #008=FLI$CNVRT_ARCHIVE File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:04 Page:148  
      577        1        /*T***********************************************************/
      578        2        /*T*                                                         */
      579        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      580        4        /*T*                                                         */
      581        5        /*T***********************************************************/
      582        6        FLI$CNVRT_ARCHIVE: PROC ( OLD_ARCH$, NEW_ARCH$ );
      583        7        /*F*  NAME: FLI$CNVRT_ARCHIVE
      584        8              PURPOSE:  Convert the pre-D00 :ARCHIVE record to D00 format and
      585        9                        return a pointer to the new record.
      586       10        ***/
      587       11
      588       12        /***
      589       13         *** INCLUDE FILES
      590       14         ***/
      591       15        %INCLUDE CP_6;
      592     5574        %INCLUDE CP_6_SUBS;
      593     6114        %INCLUDE FLS_DATA_R;
      594     7914        /***
      595     7915         *** LOCAL VARIABLES
      596     7916         ***/
      597     7917    1   DCL OLD_ARCH$ PTR;                      /* Pointer to old :ARCHIVE record     */
      598     7918    1   DCL NEW_ARCH$ PTR;                      /* Pointer to new :ARCHIVE record     */
      599     7919    1   DCL I UBIN WORD;
      600     7920    1   DCL TEMP$ PTR;
      601     7921    1   DCL START$ PTR;
      602     7922    1   DCL DPSIZE UBIN WORD;
      603     7923    1   DCL SNSIZE UBIN WORD;
      604     7924    1   DCL SIZE UBIN WORD;
      605     7925        /***
      606     7926         *** EXTERNAL PROCEDURES
      607     7927         ***/
      608     7928    1   DCL FLI$ALLOC ENTRY(2);
      609     7929        /***
      610     7930         *** MACROS
      611     7931         ***/
      612     7932        %VLP_SN(STCLASS=BASED);
      613     7945
PL6.E3A0      #008=FLI$CNVRT_ARCHIVE File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:04 Page:149  
      614     7946    1   DCL 1 OLD_ARCHIVE_LIST BASED ALIGNED,   /* Pre-D00 archive list               */
      615     7947    1         2 OFFSET,
      616     7948    1           3 DPLIST UBIN,                  /* Offset of Disk packset list        */
      617     7949    1           3 SNLIST UBIN,                  /* Offset of tape set list            */
      618     7950    1           3 VOLUME   UBIN,                /* Offset of volume used for ARCHIVE  */
      619     7951    1         2 OPTION,                         /* As tape option                     */
      620     7952    1           3 DEN UBIN,
      621     7953    1           3 VOLA UBIN,
      622     7954    1           3 EXP SBIN,
      623     7955    1           3 BLOCK UBIN,
      624     7956    1         2 XTEND UBIN;
      625     7957
      626     7958    1   DCL B_VERSION CHAR(1) SYMREF;
      627     7959    1   DCL 1 B$VERSION BASED,
      628     7960    1         2 L# UBIN BYTE CALIGNED,
      629     7961    1         2 NAME# CHAR(B$VERSION.L#) CALIGNED;
      630     7962
      631     7963
      632     7964        /******************************/
      633     7965
      634     7966    1      DPSIZE = OLD_ARCH$->OLD_ARCHIVE_LIST.OFFSET.SNLIST - OLD_ARCH$->OLD_ARCHIVE_LIST.
              7966               OFFSET.DPLIST;
      635     7967    1      TEMP$ = PINCRW(OLD_ARCH$,OLD_ARCH$->OLD_ARCHIVE_LIST.OFFSET.SNLIST);
      636     7968    1      SNSIZE = (LENGTHC(TEMP$->VLP_SN.NUM#) + TEMP$->VLP_SN.NUM# * LENGTHC(TEMP$->
              7968               VLP_SN.SN#(0)) + 3)/4;
      637     7969    1      SIZE = SIZEW(ARCHIVE_LIST) + DPSIZE + SNSIZE;
      638     7970    1      CALL FLI$ALLOC( SIZE, NEW_ARCH$);
      639     7971
      640     7972    1      NEW_ARCH$->ARCHIVE_LIST.VERSION.FLAG = BITBIN('777'O); /* Post-D00         */
      641     7973    1      NEW_ARCH$->ARCHIVE_LIST.VERSION.SIZE = ADDR(B_VERSION)->B$VERSION.L#;
      642     7974    1      NEW_ARCH$->ARCHIVE_LIST.VERSION.TEXT = SUBSTR(ADDR(B_VERSION)->B$VERSION.NAME#,0,
              7974               ADDR(B_VERSION)->B$VERSION.L#);
      643     7975    1      NEW_ARCH$->ARCHIVE_LIST.SIZE = SIZE;
      644     7976    1      NEW_ARCH$->ARCHIVE_LIST.OFFSET.DPLIST = SIZEW(ARCHIVE_LIST);
      645     7977    1      NEW_ARCH$->ARCHIVE_LIST.OFFSET.SNLIST = SIZEW(ARCHIVE_LIST) + DPSIZE;
      646     7978    1      NEW_ARCH$->ARCHIVE_LIST.OFFSET.SNLIST2 = 0;
      647     7979    1      NEW_ARCH$->ARCHIVE_LIST.VOLUME = 0;  /* Unused                             */
PL6.E3A0      #008=FLI$CNVRT_ARCHIVE File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:04 Page:150  
      648     7980    1      IF OLD_ARCH$->OLD_ARCHIVE_LIST.XTEND = 0
      649     7981    1       THEN
      650     7982    1         NEW_ARCH$->ARCHIVE_LIST.XTEND = %NO#;
      651     7983    1       ELSE
      652     7984    1         NEW_ARCH$->ARCHIVE_LIST.XTEND = %YES#;
      653     7985    1      NEW_ARCH$->ARCHIVE_LIST.OD = %NO#;
      654     7986    1      NEW_ARCH$->ARCHIVE_LIST.OPTION.DEN = OLD_ARCH$->OLD_ARCHIVE_LIST.OPTION.DEN;
      655     7987    1      NEW_ARCH$->ARCHIVE_LIST.OPTION.VOLA = OLD_ARCH$->OLD_ARCHIVE_LIST.OPTION.VOLA;
      656     7988    1      NEW_ARCH$->ARCHIVE_LIST.OPTION.CHECK = %NO#;
      657     7989    1      NEW_ARCH$->ARCHIVE_LIST.OPTION.BLOCK = OLD_ARCH$->OLD_ARCHIVE_LIST.OPTION.BLOCK;
      658     7990    1      NEW_ARCH$->ARCHIVE_LIST.OPTION.EXP = OLD_ARCH$->OLD_ARCHIVE_LIST.OPTION.EXP;
      659     7991
      660     7992    1      TEMP$ = PINCRW(OLD_ARCH$,SIZEW(OLD_ARCHIVE_LIST));
      661     7993    1      START$ = PINCRW(NEW_ARCH$,SIZEW(ARCHIVE_LIST));
      662     7994    2      DO I=0 TO TEMP$->VLP_SN.NUM#-1;
      663     7995    2         START$->VLP_SN.SN#(I) = TEMP$->VLP_SN.SN#(I);
      664     7996    2         END;
      665     7997    1      START$->VLP_SN.NUM# = TEMP$->VLP_SN.NUM#;
      666     7998
      667     7999    1      TEMP$ = PINCRW(OLD_ARCH$,OLD_ARCH$->OLD_ARCHIVE_LIST.OFFSET.SNLIST);
      668     8000    1      START$ = PINCRW(START$,DPSIZE);
      669     8001    2      DO I=0 TO TEMP$->VLP_SN.NUM#-1;
      670     8002    2         START$->VLP_SN.SN#(I) = TEMP$->VLP_SN.SN#(I);
      671     8003    2         END;
      672     8004    1      START$->VLP_SN.NUM# = TEMP$->VLP_SN.NUM#;
      673     8005
      674     8006    1      RETURN;
      675     8007    1   END FLI$CNVRT_ARCHIVE;
      676     8008        %EOD;

PL6.E3A0      #008=FLI$CNVRT_ARCHIVE File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:04 Page:151  
--  Include file information  --

   FLS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FLI$CNVRT_ARCHIVE.

   Procedure FLI$CNVRT_ARCHIVE requires 149 words for executable code.
   Procedure FLI$CNVRT_ARCHIVE requires 14 words of local(AUTO) storage.

PL6.E3A0      #008=FLI$CNVRT_ARCHIVE File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:04 Page:152  

 Object Unit name= FLI$CNVRT_ARCHIVE                          File name= FLI$UTIL.:E05TOU
 UTS= JUL 29 '97 16:04:58.64 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$TSN_USED
    2   DCB   even  none     0      0  M$STATUS
    3   DCB   even  none     0      0  M$REBUILD
    4   DCB   even  none     0      0  M$ARCHIVE
    5   DCB   even  none     0      0  M$NODATA_LIST
    6   Data  even  none    14     16  FLI$CNVRT_ARCHIVE
    7   Proc  even  none   149    225  FLI$CNVRT_ARCHIVE
    8  RoData even  none     2      2  FLI$CNVRT_ARCHIVE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     7      0   yes            yes      Std        2  FLI$CNVRT_ARCHIVE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 FLI$ALLOC
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #008=FLI$CNVRT_ARCHIVE File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:04 Page:153  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$TSN_USED                            M$STATUS
     M$REBUILD                             M$ARCHIVE                             M$NODATA_LIST
     BLK_TAG$                              BLK_TAG0$                             NBR_BYTES_TO_MOVE
     DISK_GRAN$                            BLOCK_GRAN$                      r    EFT_CVOL_FILE
r    EFT_RESTRICT_FILE                     TSN_USED_NAME                         BACKUP_NAME
r    ARCHIVE_NAME                     r    PRIME_FILE                       r    DUAL_FILE
     REBUILD_NAME                          REBUILD_DIR_KEY                       REBUILD_KEY
     NODATA_FILE_NAME                      NODATA_KEY                            B_VERSION
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #008=FLI$CNVRT_ARCHIVE File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:04 Page:154  


      577        1        /*T***********************************************************/
      578        2        /*T*                                                         */
      579        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      580        4        /*T*                                                         */
      581        5        /*T***********************************************************/
      582        6        FLI$CNVRT_ARCHIVE: PROC ( OLD_ARCH$, NEW_ARCH$ );

      6  7 000000   000000 700200 xent  FLI$CNVRT_A* TSX0  ! X66_AUTO_2
         7 000001   000016 000002                    ZERO    14,2

      583        7        /*F*  NAME: FLI$CNVRT_ARCHIVE
      584        8              PURPOSE:  Convert the pre-D00 :ARCHIVE record to D00 format and
      585        9                        return a pointer to the new record.
      586       10        ***/
      587       11
      588       12        /***
      589       13         *** INCLUDE FILES
      590       14         ***/
      591       15        %INCLUDE CP_6;
      592     5574        %INCLUDE CP_6_SUBS;
      593     6114        %INCLUDE FLS_DATA_R;
      594     7914        /***
      595     7915         *** LOCAL VARIABLES
      596     7916         ***/
      597     7917    1   DCL OLD_ARCH$ PTR;                      /* Pointer to old :ARCHIVE record     */
      598     7918    1   DCL NEW_ARCH$ PTR;                      /* Pointer to new :ARCHIVE record     */
      599     7919    1   DCL I UBIN WORD;
      600     7920    1   DCL TEMP$ PTR;
      601     7921    1   DCL START$ PTR;
      602     7922    1   DCL DPSIZE UBIN WORD;
      603     7923    1   DCL SNSIZE UBIN WORD;
      604     7924    1   DCL SIZE UBIN WORD;
      605     7925        /***
      606     7926         *** EXTERNAL PROCEDURES
      607     7927         ***/
      608     7928    1   DCL FLI$ALLOC ENTRY(2);
PL6.E3A0      #008=FLI$CNVRT_ARCHIVE File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:04 Page:155  
      609     7929        /***
      610     7930         *** MACROS
      611     7931         ***/
      612     7932        %VLP_SN(STCLASS=BASED);
      613     7945
      614     7946    1   DCL 1 OLD_ARCHIVE_LIST BASED ALIGNED,   /* Pre-D00 archive list               */
      615     7947    1         2 OFFSET,
      616     7948    1           3 DPLIST UBIN,                  /* Offset of Disk packset list        */
      617     7949    1           3 SNLIST UBIN,                  /* Offset of tape set list            */
      618     7950    1           3 VOLUME   UBIN,                /* Offset of volume used for ARCHIVE  */
      619     7951    1         2 OPTION,                         /* As tape option                     */
      620     7952    1           3 DEN UBIN,
      621     7953    1           3 VOLA UBIN,
      622     7954    1           3 EXP SBIN,
      623     7955    1           3 BLOCK UBIN,
      624     7956    1         2 XTEND UBIN;
      625     7957
      626     7958    1   DCL B_VERSION CHAR(1) SYMREF;
      627     7959    1   DCL 1 B$VERSION BASED,
      628     7960    1         2 L# UBIN BYTE CALIGNED,
      629     7961    1         2 NAME# CHAR(B$VERSION.L#) CALIGNED;
      630     7962
      631     7963
      632     7964        /******************************/
      633     7965
      634     7966    1     DPSIZE = OLD_ARCH$->OLD_ARCHIVE_LIST.OFFSET.SNLIST - OLD_ARCH$->OLD_ARCHIVE_LIST.
              7966               OFFSET.DPLIST;

   7966  7 000002   200003 470500                    LDP0    @OLD_ARCH$,,AUTO
         7 000003   000000 471500                    LDP1    0,,PR0
         7 000004   100001 236100                    LDQ     1,,PR1
         7 000005   100000 136100                    SBLQ    0,,PR1
         7 000006   200010 756100                    STQ     DPSIZE,,AUTO

      635     7967    1      TEMP$ = PINCRW(OLD_ARCH$,OLD_ARCH$->OLD_ARCHIVE_LIST.OFFSET.SNLIST);

   7967  7 000007   100001 720100                    LXL0    1,,PR1
PL6.E3A0      #008=FLI$CNVRT_ARCHIVE File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:04 Page:156  
         7 000010   100000 633510                    EPPR3   0,X0,PR1
         7 000011   200006 453500                    STP3    TEMP$,,AUTO

      636     7968    1      SNSIZE = (LENGTHC(TEMP$->VLP_SN.NUM#) + TEMP$->VLP_SN.NUM# * LENGTHC(TEMP$->
              7968               VLP_SN.SN#(0)) + 3)/4;

   7968  7 000012   300000 236100                    LDQ     0,,PR3
         7 000013   000006 402007                    MPY     6,DL
         7 000014   000007 036007                    ADLQ    7,DL
         7 000015   000004 506007                    DIV     4,DL
         7 000016   200011 756100                    STQ     SNSIZE,,AUTO

      637     7969    1      SIZE = SIZEW(ARCHIVE_LIST) + DPSIZE + SNSIZE;

   7969  7 000017   200010 036100                    ADLQ    DPSIZE,,AUTO
         7 000020   000011 036007                    ADLQ    9,DL
         7 000021   200012 756100                    STQ     SIZE,,AUTO

      638     7970    1      CALL FLI$ALLOC( SIZE, NEW_ARCH$);

   7970  7 000022   200004 236100                    LDQ     @NEW_ARCH$,,AUTO
         7 000023   200015 756100                    STQ     SIZE+3,,AUTO
         7 000024   200012 631500                    EPPR1   SIZE,,AUTO
         7 000025   200014 451500                    STP1    SIZE+2,,AUTO
         7 000026   200014 630500                    EPPR0   SIZE+2,,AUTO
         7 000027   000020 631400 xsym               EPPR1   B_VECTNIL+16
         7 000030   000000 701000 xent               TSX1    FLI$ALLOC
         7 000031   000000 011000                    NOP     0

      639     7971
      640     7972    1      NEW_ARCH$->ARCHIVE_LIST.VERSION.FLAG = BITBIN('777'O); /* Post-D00         */

   7972  7 000032   200004 470500                    LDP0    @NEW_ARCH$,,AUTO
         7 000033   000000 471500                    LDP1    0,,PR0
         7 000034   777000 236003                    LDQ     -512,DU
         7 000035   100000 552140                    STBQ    0,'40'O,PR1

PL6.E3A0      #008=FLI$CNVRT_ARCHIVE File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:04 Page:157  
      641     7973    1      NEW_ARCH$->ARCHIVE_LIST.VERSION.SIZE = ADDR(B_VERSION)->B$VERSION.L#;

   7973  7 000036   000000 471500                    LDP1    0,,PR0
         7 000037   000000 236000 xsym               LDQ     B_VERSION
         7 000040   000011 772000                    QRL     9
         7 000041   100000 552120                    STBQ    0,'20'O,PR1

      642     7974    1     NEW_ARCH$->ARCHIVE_LIST.VERSION.TEXT = SUBSTR(ADDR(B_VERSION)->B$VERSION.NAME#,0,
              7974               ADDR(B_VERSION)->B$VERSION.L#);

   7974  7 000042   000000 471500                    LDP1    0,,PR0
         7 000043   000000 236000 xsym               LDQ     B_VERSION
         7 000044   000033 772000                    QRL     27
         7 000045   000000 620006                    EAX0    0,QL
         7 000046   040100 100440                    MLR     fill='040'O
         7 000047   000000 200010 xsym               ADSC9   B_VERSION                cn=1,n=*X0
         7 000050   100000 400006                    ADSC9   0,,PR1                   cn=2,n=6

      643     7975    1      NEW_ARCH$->ARCHIVE_LIST.SIZE = SIZE;

   7975  7 000051   000000 471500                    LDP1    0,,PR0
         7 000052   200012 235100                    LDA     SIZE,,AUTO
         7 000053   100002 755100                    STA     2,,PR1

      644     7976    1      NEW_ARCH$->ARCHIVE_LIST.OFFSET.DPLIST = SIZEW(ARCHIVE_LIST);

   7976  7 000054   000000 471500                    LDP1    0,,PR0
         7 000055   000011 235007                    LDA     9,DL
         7 000056   100003 755100                    STA     3,,PR1

      645     7977    1      NEW_ARCH$->ARCHIVE_LIST.OFFSET.SNLIST = SIZEW(ARCHIVE_LIST) + DPSIZE;

   7977  7 000057   000000 471500                    LDP1    0,,PR0
         7 000060   200010 236100                    LDQ     DPSIZE,,AUTO
         7 000061   000011 036007                    ADLQ    9,DL
         7 000062   100004 756100                    STQ     4,,PR1

PL6.E3A0      #008=FLI$CNVRT_ARCHIVE File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:04 Page:158  
      646     7978    1      NEW_ARCH$->ARCHIVE_LIST.OFFSET.SNLIST2 = 0;

   7978  7 000063   000000 471500                    LDP1    0,,PR0
         7 000064   100005 450100                    STZ     5,,PR1

      647     7979    1      NEW_ARCH$->ARCHIVE_LIST.VOLUME = 0;  /* Unused                             */

   7979  7 000065   000000 471500                    LDP1    0,,PR0
         7 000066   000000 236003                    LDQ     0,DU
         7 000067   100006 552140                    STBQ    6,'40'O,PR1

      648     7980    1      IF OLD_ARCH$->OLD_ARCHIVE_LIST.XTEND = 0

   7980  7 000070   200003 471500                    LDP1    @OLD_ARCH$,,AUTO
         7 000071   100000 473500                    LDP3    0,,PR1
         7 000072   300007 235100                    LDA     7,,PR3
         7 000073   000100 601000 7                  TNZ     s:7984

      649     7981    1       THEN
      650     7982    1         NEW_ARCH$->ARCHIVE_LIST.XTEND = %NO#;

   7982  7 000074   000000 474500                    LDP4    0,,PR0
         7 000075   000000 236000 8                  LDQ     0
         7 000076   400006 356100                    ANSQ    6,,PR4
         7 000077   000103 710000 7                  TRA     s:7985

      651     7983    1       ELSE
      652     7984    1         NEW_ARCH$->ARCHIVE_LIST.XTEND = %YES#;

   7984  7 000100   000000 474500                    LDP4    0,,PR0
         7 000101   000400 236003                    LDQ     256,DU
         7 000102   400006 256100                    ORSQ    6,,PR4

      653     7985    1      NEW_ARCH$->ARCHIVE_LIST.OD = %NO#;

   7985  7 000103   000000 473500                    LDP3    0,,PR0
         7 000104   000001 236000 8                  LDQ     1
PL6.E3A0      #008=FLI$CNVRT_ARCHIVE File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:04 Page:159  
         7 000105   300006 356100                    ANSQ    6,,PR3

      654     7986    1      NEW_ARCH$->ARCHIVE_LIST.OPTION.DEN = OLD_ARCH$->OLD_ARCHIVE_LIST.OPTION.DEN;

   7986  7 000106   000000 473500                    LDP3    0,,PR0
         7 000107   100000 474500                    LDP4    0,,PR1
         7 000110   400003 236100                    LDQ     3,,PR4
         7 000111   000036 736000                    QLS     30
         7 000112   300007 752140                    STCQ    7,'40'O,PR3

      655     7987    1      NEW_ARCH$->ARCHIVE_LIST.OPTION.VOLA = OLD_ARCH$->OLD_ARCHIVE_LIST.OPTION.VOLA;

   7987  7 000113   000000 473500                    LDP3    0,,PR0
         7 000114   100000 474500                    LDP4    0,,PR1
         7 000115   400004 236100                    LDQ     4,,PR4
         7 000116   000033 736000                    QLS     27
         7 000117   300007 676100                    ERQ     7,,PR3
         7 000120   007000 376003                    ANQ     3584,DU
         7 000121   300007 656100                    ERSQ    7,,PR3

      656     7988    1      NEW_ARCH$->ARCHIVE_LIST.OPTION.CHECK = %NO#;

   7988  7 000122   000000 473500                    LDP3    0,,PR0
         7 000123   000000 236000 8                  LDQ     0
         7 000124   300007 356100                    ANSQ    7,,PR3

      657     7989    1      NEW_ARCH$->ARCHIVE_LIST.OPTION.BLOCK = OLD_ARCH$->OLD_ARCHIVE_LIST.OPTION.BLOCK;

   7989  7 000125   000000 473500                    LDP3    0,,PR0
         7 000126   100000 474500                    LDP4    0,,PR1
         7 000127   400006 720100                    LXL0    6,,PR4
         7 000130   300007 440100                    SXL0    7,,PR3

      658     7990    1      NEW_ARCH$->ARCHIVE_LIST.OPTION.EXP = OLD_ARCH$->OLD_ARCHIVE_LIST.OPTION.EXP;

   7990  7 000131   000000 473500                    LDP3    0,,PR0
         7 000132   100000 474500                    LDP4    0,,PR1
PL6.E3A0      #008=FLI$CNVRT_ARCHIVE File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:04 Page:160  
         7 000133   400005 235100                    LDA     5,,PR4
         7 000134   300010 755100                    STA     8,,PR3

      659     7991
      660     7992    1      TEMP$ = PINCRW(OLD_ARCH$,SIZEW(OLD_ARCHIVE_LIST));

   7992  7 000135   100000 236100                    LDQ     0,,PR1
         7 000136   000010 036003                    ADLQ    8,DU
         7 000137   200006 756100                    STQ     TEMP$,,AUTO

      661     7993    1      START$ = PINCRW(NEW_ARCH$,SIZEW(ARCHIVE_LIST));

   7993  7 000140   000000 236100                    LDQ     0,,PR0
         7 000141   000011 036003                    ADLQ    9,DU
         7 000142   200007 756100                    STQ     START$,,AUTO

      662     7994    2      DO I=0 TO TEMP$->VLP_SN.NUM#-1;

   7994  7 000143   200005 450100                    STZ     I,,AUTO
         7 000144   000157 710000 7                  TRA     s:7996+3

      663     7995    2         START$->VLP_SN.SN#(I) = TEMP$->VLP_SN.SN#(I);

   7995  7 000145   200005 236100                    LDQ     I,,AUTO
         7 000146   000006 402007                    MPY     6,DL
         7 000147   200006 470500                    LDP0    TEMP$,,AUTO
         7 000150   200007 471500                    LDP1    START$,,AUTO
         7 000151   040106 100506                    MLR     fill='040'O
         7 000152   000001 000006                    ADSC9   1,Q,PR0                  cn=0,n=6
         7 000153   100001 000006                    ADSC9   1,Q,PR1                  cn=0,n=6

      664     7996    2         END;

   7996  7 000154   200005 235100                    LDA     I,,AUTO
         7 000155   000001 035007                    ADLA    1,DL
         7 000156   200005 755100                    STA     I,,AUTO
         7 000157   200006 470500                    LDP0    TEMP$,,AUTO
PL6.E3A0      #008=FLI$CNVRT_ARCHIVE File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:04 Page:161  
         7 000160   200005 236100                    LDQ     I,,AUTO
         7 000161   000164 604000 7                  TMI     s:7997
         7 000162   000000 116100                    CMPQ    0,,PR0
         7 000163   000145 604000 7                  TMI     s:7995

      665     7997    1      START$->VLP_SN.NUM# = TEMP$->VLP_SN.NUM#;

   7997  7 000164   200007 471500                    LDP1    START$,,AUTO
         7 000165   000000 235100                    LDA     0,,PR0
         7 000166   100000 755100                    STA     0,,PR1

      666     7998
      667     7999    1      TEMP$ = PINCRW(OLD_ARCH$,OLD_ARCH$->OLD_ARCHIVE_LIST.OFFSET.SNLIST);

   7999  7 000167   200003 473500                    LDP3    @OLD_ARCH$,,AUTO
         7 000170   300000 474500                    LDP4    0,,PR3
         7 000171   400001 720100                    LXL0    1,,PR4
         7 000172   400000 635510                    EPPR5   0,X0,PR4
         7 000173   200006 455500                    STP5    TEMP$,,AUTO

      668     8000    1      START$ = PINCRW(START$,DPSIZE);

   8000  7 000174   200010 236100                    LDQ     DPSIZE,,AUTO
         7 000175   000022 736000                    QLS     18
         7 000176   200007 036100                    ADLQ    START$,,AUTO
         7 000177   200007 756100                    STQ     START$,,AUTO

      669     8001    2      DO I=0 TO TEMP$->VLP_SN.NUM#-1;

   8001  7 000200   200005 450100                    STZ     I,,AUTO
         7 000201   000214 710000 7                  TRA     s:8003+3

      670     8002    2         START$->VLP_SN.SN#(I) = TEMP$->VLP_SN.SN#(I);

   8002  7 000202   200005 236100                    LDQ     I,,AUTO
         7 000203   000006 402007                    MPY     6,DL
         7 000204   200006 470500                    LDP0    TEMP$,,AUTO
PL6.E3A0      #008=FLI$CNVRT_ARCHIVE File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:04 Page:162  
         7 000205   200007 471500                    LDP1    START$,,AUTO
         7 000206   040106 100506                    MLR     fill='040'O
         7 000207   000001 000006                    ADSC9   1,Q,PR0                  cn=0,n=6
         7 000210   100001 000006                    ADSC9   1,Q,PR1                  cn=0,n=6

      671     8003    2         END;

   8003  7 000211   200005 235100                    LDA     I,,AUTO
         7 000212   000001 035007                    ADLA    1,DL
         7 000213   200005 755100                    STA     I,,AUTO
         7 000214   200006 470500                    LDP0    TEMP$,,AUTO
         7 000215   200005 236100                    LDQ     I,,AUTO
         7 000216   000221 604000 7                  TMI     s:8004
         7 000217   000000 116100                    CMPQ    0,,PR0
         7 000220   000202 604000 7                  TMI     s:8002

      672     8004    1      START$->VLP_SN.NUM# = TEMP$->VLP_SN.NUM#;

   8004  7 000221   200007 471500                    LDP1    START$,,AUTO
         7 000222   000000 235100                    LDA     0,,PR0
         7 000223   100000 755100                    STA     0,,PR1

      673     8005
      674     8006    1      RETURN;

   8006  7 000224   000000 702200 xent               TSX2  ! X66_ARET
      675     8007    1   END FLI$CNVRT_ARCHIVE;
      676     8008        %EOD;

PL6.E3A0      #008=FLI$CNVRT_ARCHIVE File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:04 Page:163  
--  Include file information  --

   FLS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FLI$CNVRT_ARCHIVE.
PL6.E3A0      #008=FLI$CNVRT_ARCHIVE File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:04 Page:164  

 **** Variables and constants ****

  ****  Section 006  Data  FLI$CNVRT_ARCHIVE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/d STRC(360)   r     1 DEL_NODATA_REC

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @NEW_ARCH$                 3-0-0/w PTR         r     1 @OLD_ARCH$
    10-0-0/w UBIN        r     1 DPSIZE                     5-0-0/w UBIN        r     1 I
    *0-0-0/w PTR         r     1 NEW_ARCH$                 *0-0-0/w PTR         r     1 OLD_ARCH$
    12-0-0/w UBIN        r     1 SIZE                      11-0-0/w UBIN        r     1 SNSIZE
     7-0-0/w PTR         r     1 START$                     6-0-0/w PTR         r     1 TEMP$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c ASTR(9)     r     1 ARCHIVE_NAME               0-0-0/c ASTR(9)     r     1 BACKUP_NAME
     0-0-0/w PTR         r     1 BLK_TAG$                   0-0-0/w PTR         r     1 BLK_TAG0$
     0-0-0/w PTR         r     1 BLOCK_GRAN$                0-0-0/c CHAR        r     1 B_VERSION
     0-0-0/w PTR         r     1 DISK_GRAN$                 0-0-0/c ASTR(9)     r     1 DUAL_FILE
     0-0-0/c ASTR(9)     r     1 EFT_CVOL_FILE              0-0-0/c ASTR(9)     r     1 EFT_RESTRICT_FILE
     0-0-0/w SBIN        r     1 NBR_BYTES_TO_MOVE          0-0-0/c ASTR(9)     r     1 NODATA_FILE_NAME
     0-0-0/c STRC(369)   r     1 NODATA_KEY                 0-0-0/c ASTR(9)     r     1 PRIME_FILE
     0-0-0/c ASTR(9)     r     1 REBUILD_DIR_KEY            0-0-0/c ASTR(9)     r     1 REBUILD_KEY
     0-0-0/c ASTR(9)     r     1 REBUILD_NAME               0-0-0/c ASTR(9)     r     1 TSN_USED_NAME

  ****  BASED and DCB variables  ****

PL6.E3A0      #008=FLI$CNVRT_ARCHIVE File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:04 Page:165  
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(324)   r     1 ARCHIVE_LIST               0-0-0/c ASTR(9)     r     1 B$VERSION
     0-0-0N  NULL        r     1 M$NODATA_LIST              0-0-0/w STRC(288)   r     1 OLD_ARCHIVE_LIST
     0-0-0/d STRC(90)    r     1 VLP_SN


   Procedure FLI$CNVRT_ARCHIVE requires 149 words for executable code.
   Procedure FLI$CNVRT_ARCHIVE requires 14 words of local(AUTO) storage.
PL6.E3A0      #008=FLI$CNVRT_ARCHIVE File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:04 Page:166  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #008=FLI$CNVRT_ARCHIVE File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:04 Page:167  
          MINI XREF LISTING

ARCHIVE_LIST
      7021**DCL      7969--ASSIGN   7976--ASSIGN   7977--ASSIGN   7993--ASSIGN
ARCHIVE_LIST.OD
      7022**DCL      7985<<ASSIGN
ARCHIVE_LIST.OFFSET.DPLIST
      7022**DCL      7976<<ASSIGN
ARCHIVE_LIST.OFFSET.SNLIST
      7022**DCL      7977<<ASSIGN
ARCHIVE_LIST.OFFSET.SNLIST2
      7022**DCL      7978<<ASSIGN
ARCHIVE_LIST.OPTION.BLOCK
      7023**DCL      7989<<ASSIGN
ARCHIVE_LIST.OPTION.CHECK
      7023**DCL      7988<<ASSIGN
ARCHIVE_LIST.OPTION.DEN
      7022**DCL      7986<<ASSIGN
ARCHIVE_LIST.OPTION.EXP
      7023**DCL      7990<<ASSIGN
ARCHIVE_LIST.OPTION.VOLA
      7023**DCL      7987<<ASSIGN
ARCHIVE_LIST.SIZE
      7021**DCL      7975<<ASSIGN
ARCHIVE_LIST.VERSION.FLAG
      7021**DCL      7972<<ASSIGN
ARCHIVE_LIST.VERSION.SIZE
      7021**DCL      7973<<ASSIGN
ARCHIVE_LIST.VERSION.TEXT
      7021**DCL      7974<<ASSIGN
ARCHIVE_LIST.VOLUME
      7022**DCL      7979<<ASSIGN
ARCHIVE_LIST.XTEND
      7022**DCL      7982<<ASSIGN   7984<<ASSIGN
PL6.E3A0      #008=FLI$CNVRT_ARCHIVE File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:04 Page:168  
ARCHIVE_NAME.L#
      7006**DCL      7006--IMP-SIZ
B$VERSION.L#
      7960**DCL      7961--IMP-SIZ  7973>>ASSIGN   7974>>ASSIGN   7974>>ASSIGN
B$VERSION.NAME#
      7961**DCL      7974>>ASSIGN
BACKUP_NAME.L#
      6650**DCL      6650--IMP-SIZ
BLK_TAG.NAME
      6142**DCL      6142--REDEF
BLK_TAG$
      6139**DCL      6139--IMP-PTR
BLK_TAG0.NAME
      6148**DCL      6148--REDEF
BLK_TAG0$
      6145**DCL      6145--IMP-PTR
BLOCK_GRAN$
      6152**DCL      6153--IMP-PTR
B_VERSION
      7958**DCL      7973--ASSIGN   7974--ASSIGN   7974--ASSIGN   7974--ASSIGN
CLOSE_NODATA_LIST.SN_
      7804**DCL      7804--REDEF
CLOSE_NODATA_LIST.UTL_
      7805**DCL      7805--REDEF
CLOSE_NODATA_LIST.V.EXPIRE#
      7819**DCL      7819--REDEF
CLOSE_NODATA_LIST.V.TYPE#
      7817**DCL      7817--REDEF
CLOSE_NODATA_LIST.V.XTNSIZE#
      7814**DCL      7814--REDEF    7816--REDEF
CLOSE_PRIME_DUAL.SN_
      7281**DCL      7281--REDEF
CLOSE_PRIME_DUAL.UTL_
      7282**DCL      7282--REDEF
CLOSE_PRIME_DUAL.V.EXPIRE#
      7296**DCL      7296--REDEF
PL6.E3A0      #008=FLI$CNVRT_ARCHIVE File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:04 Page:169  
CLOSE_PRIME_DUAL.V.TYPE#
      7294**DCL      7294--REDEF
CLOSE_PRIME_DUAL.V.XTNSIZE#
      7291**DCL      7291--REDEF    7293--REDEF
CLOSE_REBUILD.SN_
      7556**DCL      7556--REDEF
CLOSE_REBUILD.UTL_
      7557**DCL      7557--REDEF
CLOSE_REBUILD.V.EXPIRE#
      7571**DCL      7571--REDEF
CLOSE_REBUILD.V.TYPE#
      7569**DCL      7569--REDEF
CLOSE_REBUILD.V.XTNSIZE#
      7566**DCL      7566--REDEF    7568--REDEF
CLOSE_STATUS.SN_
      6771**DCL      6771--REDEF
CLOSE_STATUS.UTL_
      6772**DCL      6772--REDEF
CLOSE_STATUS.V.EXPIRE#
      6786**DCL      6786--REDEF
CLOSE_STATUS.V.TYPE#
      6784**DCL      6784--REDEF
CLOSE_STATUS.V.XTNSIZE#
      6781**DCL      6781--REDEF    6783--REDEF
CLOSE_TSN_USED.SN_
      6481**DCL      6481--REDEF
CLOSE_TSN_USED.UTL_
      6482**DCL      6482--REDEF
CLOSE_TSN_USED.V.EXPIRE#
      6496**DCL      6496--REDEF
CLOSE_TSN_USED.V.TYPE#
      6494**DCL      6494--REDEF
CLOSE_TSN_USED.V.XTNSIZE#
      6491**DCL      6491--REDEF    6493--REDEF
CON_CLOSE_ARCHIVE.SN_
      6813**DCL      6813--REDEF
PL6.E3A0      #008=FLI$CNVRT_ARCHIVE File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:04 Page:170  
CON_CLOSE_ARCHIVE.UTL_
      6814**DCL      6814--REDEF
CON_CLOSE_ARCHIVE.V.EXPIRE#
      6828**DCL      6828--REDEF
CON_CLOSE_ARCHIVE.V.TYPE#
      6826**DCL      6826--REDEF
CON_CLOSE_ARCHIVE.V.XTNSIZE#
      6823**DCL      6823--REDEF    6825--REDEF
CON_OPEN_ARCHIVE_FILE.ACSVEH_
      6900**DCL      6901--REDEF
CON_OPEN_ARCHIVE_FILE.ALTKEYS_
      6906**DCL      6907--REDEF    6907--REDEF
CON_OPEN_ARCHIVE_FILE.HDR_
      6905**DCL      6906--REDEF
CON_OPEN_ARCHIVE_FILE.TAB_
      6904**DCL      6905--REDEF
CON_OPEN_ARCHIVE_FILE.UHL_
      6898**DCL      6899--REDEF    6899--REDEF
CON_OPEN_ARCHIVE_FILE.V.FSN#
      6938**DCL      6938--REDEF    6938--REDEF
CON_OPEN_ARCHIVE_FILE.WSN_
      6904**DCL      6904--REDEF
CON_READ_ARCHIVE_FILE.STATION_
      6962**DCL      6963--REDEF
CON_READ_ARCHIVE_FILE.V.DVBYTE.REREAD#
      6974**DCL      6974--REDEF
CON_READ_ARCHIVE_FILE.V.INDX#
      6972**DCL      6972--REDEF
CVOL_UTL.ULBL#
      6241**DCL      6241--REDEF
DEL_NODATA_REC.V
      7907**DCL      7904--DCLINIT
DISK_GRAN$
      6152**DCL      6152--IMP-PTR
DPSIZE
      7922**DCL      7966<<ASSIGN   7969>>ASSIGN   7977>>ASSIGN   8000>>ASSIGN
PL6.E3A0      #008=FLI$CNVRT_ARCHIVE File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:04 Page:171  
DUAL_FILE.L#
      7077**DCL      7077--IMP-SIZ
EFT_CVOL_FILE.L#
      6201**DCL      6201--IMP-SIZ
EFT_RESTRICT_FILE.L#
      6228**DCL      6228--IMP-SIZ
FIT_AREA.W2
      6512**DCL      6513--REDEF
FLI$ALLOC
      7928**DCL-ENT  7970--CALL
I
      7919**DCL      7994<<DOINDEX  7995>>ASSIGN   7995>>ASSIGN   8001<<DOINDEX  8002>>ASSIGN   8002>>ASSIGN
NBR_BYTES_TO_MOVE
      6151**DCL      6152--IMP-SIZ  6153--IMP-SIZ
NEW_ARCH$
      7918**DCL         6--PROC     7970<>CALL     7972>>ASSIGN   7973>>ASSIGN   7974>>ASSIGN   7975>>ASSIGN
      7976>>ASSIGN   7977>>ASSIGN   7978>>ASSIGN   7979>>ASSIGN   7982>>ASSIGN   7984>>ASSIGN   7985>>ASSIGN
      7986>>ASSIGN   7987>>ASSIGN   7988>>ASSIGN   7989>>ASSIGN   7990>>ASSIGN   7993>>ASSIGN
NODATA_FILE_NAME.L#
      7766**DCL      7766--IMP-SIZ
NODATA_KEY
      7912**DCL      7904--DCLINIT  7905--DCLINIT
OLD_ARCH$
      7917**DCL         6--PROC     7966>>ASSIGN   7966>>ASSIGN   7967>>ASSIGN   7967>>ASSIGN   7980>>IF
      7986>>ASSIGN   7987>>ASSIGN   7989>>ASSIGN   7990>>ASSIGN   7992>>ASSIGN   7999>>ASSIGN   7999>>ASSIGN
OLD_ARCHIVE_LIST
      7946**DCL      7992--ASSIGN
OLD_ARCHIVE_LIST.OFFSET.DPLIST
      7948**DCL      7966>>ASSIGN
OLD_ARCHIVE_LIST.OFFSET.SNLIST
      7949**DCL      7966>>ASSIGN   7967>>ASSIGN   7999>>ASSIGN
OLD_ARCHIVE_LIST.OPTION.BLOCK
      7955**DCL      7989>>ASSIGN
OLD_ARCHIVE_LIST.OPTION.DEN
      7952**DCL      7986>>ASSIGN
OLD_ARCHIVE_LIST.OPTION.EXP
PL6.E3A0      #008=FLI$CNVRT_ARCHIVE File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:04 Page:172  
      7954**DCL      7990>>ASSIGN
OLD_ARCHIVE_LIST.OPTION.VOLA
      7953**DCL      7987>>ASSIGN
OLD_ARCHIVE_LIST.XTEND
      7956**DCL      7980>>IF
OPEN_NODATA_LIST.ACSVEH_
      7699**DCL      7700--REDEF
OPEN_NODATA_LIST.ALTKEYS_
      7705**DCL      7706--REDEF    7706--REDEF
OPEN_NODATA_LIST.HDR_
      7704**DCL      7705--REDEF
OPEN_NODATA_LIST.TAB_
      7703**DCL      7704--REDEF
OPEN_NODATA_LIST.UHL_
      7697**DCL      7698--REDEF    7698--REDEF
OPEN_NODATA_LIST.V.FSN#
      7737**DCL      7737--REDEF    7737--REDEF
OPEN_NODATA_LIST.WSN_
      7703**DCL      7703--REDEF
OPEN_PRIME_DUAL.ACSVEH_
      7146**DCL      7147--REDEF
OPEN_PRIME_DUAL.ALTKEYS_
      7152**DCL      7153--REDEF    7153--REDEF
OPEN_PRIME_DUAL.HDR_
      7151**DCL      7152--REDEF
OPEN_PRIME_DUAL.TAB_
      7150**DCL      7151--REDEF
OPEN_PRIME_DUAL.UHL_
      7144**DCL      7145--REDEF    7145--REDEF
OPEN_PRIME_DUAL.V.FSN#
      7184**DCL      7184--REDEF    7184--REDEF
OPEN_PRIME_DUAL.WSN_
      7150**DCL      7150--REDEF
OPEN_REBUILD.ACSVEH_
      7381**DCL      7382--REDEF
OPEN_REBUILD.ALTKEYS_
PL6.E3A0      #008=FLI$CNVRT_ARCHIVE File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:04 Page:173  
      7387**DCL      7388--REDEF    7388--REDEF
OPEN_REBUILD.HDR_
      7386**DCL      7387--REDEF
OPEN_REBUILD.TAB_
      7385**DCL      7386--REDEF
OPEN_REBUILD.UHL_
      7379**DCL      7380--REDEF    7380--REDEF
OPEN_REBUILD.V.FSN#
      7419**DCL      7419--REDEF    7419--REDEF
OPEN_REBUILD.WSN_
      7385**DCL      7385--REDEF
OPEN_STATUS.ACSVEH_
      6583**DCL      6584--REDEF
OPEN_STATUS.ALTKEYS_
      6589**DCL      6590--REDEF    6590--REDEF
OPEN_STATUS.HDR_
      6588**DCL      6589--REDEF
OPEN_STATUS.TAB_
      6587**DCL      6588--REDEF
OPEN_STATUS.UHL_
      6581**DCL      6582--REDEF    6582--REDEF
OPEN_STATUS.V.FSN#
      6621**DCL      6621--REDEF    6621--REDEF
OPEN_STATUS.WSN_
      6587**DCL      6587--REDEF
OPEN_TSN_USED.ACSVEH_
      6319**DCL      6320--REDEF
OPEN_TSN_USED.ALTKEYS_
      6325**DCL      6326--REDEF    6326--REDEF
OPEN_TSN_USED.HDR_
      6324**DCL      6325--REDEF
OPEN_TSN_USED.TAB_
      6323**DCL      6324--REDEF
OPEN_TSN_USED.UHL_
      6317**DCL      6318--REDEF    6318--REDEF
OPEN_TSN_USED.V.FSN#
PL6.E3A0      #008=FLI$CNVRT_ARCHIVE File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:04 Page:174  
      6357**DCL      6357--REDEF    6357--REDEF
OPEN_TSN_USED.WSN_
      6323**DCL      6323--REDEF
PRIME_FILE.L#
      7050**DCL      7050--IMP-SIZ
READ_NODATA_LIST.STATION_
      7843**DCL      7844--REDEF
READ_NODATA_LIST.V.DVBYTE.REREAD#
      7855**DCL      7855--REDEF
READ_NODATA_LIST.V.INDX#
      7853**DCL      7853--REDEF
READ_PRIME_DUAL.STATION_
      7208**DCL      7209--REDEF
READ_PRIME_DUAL.V.DVBYTE.REREAD#
      7220**DCL      7220--REDEF
READ_PRIME_DUAL.V.INDX#
      7218**DCL      7218--REDEF
READ_REBUILD.STATION_
      7514**DCL      7515--REDEF
READ_REBUILD.V.DVBYTE.REREAD#
      7526**DCL      7526--REDEF
READ_REBUILD.V.INDX#
      7524**DCL      7524--REDEF
READ_STATUS.STATION_
      6729**DCL      6730--REDEF
READ_STATUS.V.DVBYTE.REREAD#
      6741**DCL      6741--REDEF
READ_STATUS.V.INDX#
      6739**DCL      6739--REDEF
READ_TSN_USED.STATION_
      6439**DCL      6440--REDEF
READ_TSN_USED.V.DVBYTE.REREAD#
      6451**DCL      6451--REDEF
READ_TSN_USED.V.INDX#
      6449**DCL      6449--REDEF
REBUILD_DIR_KEY.L#
PL6.E3A0      #008=FLI$CNVRT_ARCHIVE File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:04 Page:175  
      7600**DCL      7600--IMP-SIZ
REBUILD_KEY.L#
      7627**DCL      7627--IMP-SIZ
REBUILD_NAME.L#
      7448**DCL      7448--IMP-SIZ
SIZE
      7924**DCL      7969<<ASSIGN   7970<>CALL     7975>>ASSIGN
SNSIZE
      7923**DCL      7968<<ASSIGN   7969>>ASSIGN
START$
      7921**DCL      7993<<ASSIGN   7995>>ASSIGN   7997>>ASSIGN   8000<<ASSIGN   8000>>ASSIGN   8002>>ASSIGN
      8004>>ASSIGN
TAPE_BLOCK_.W2
      6167**DCL      6168--REDEF
TEMP$
      7920**DCL      7967<<ASSIGN   7968>>ASSIGN   7968>>ASSIGN   7968>>ASSIGN   7992<<ASSIGN   7994>>DOINDEX
      7995>>ASSIGN   7997>>ASSIGN   7999<<ASSIGN   8001>>DOINDEX  8002>>ASSIGN   8004>>ASSIGN
TSN_USED_NAME.L#
      6386**DCL      6386--IMP-SIZ
VLP_SN.NUM#
      7943**DCL      7968>>ASSIGN   7968--ASSIGN   7994>>DOINDEX  7997<<ASSIGN   7997>>ASSIGN   8001>>DOINDEX
      8004<<ASSIGN   8004>>ASSIGN
VLP_SN.SN#
      7943**DCL      7968--ASSIGN   7995<<ASSIGN   7995>>ASSIGN   8002<<ASSIGN   8002>>ASSIGN
WRITE_NODATA_LIST.STATION_
      7881**DCL      7881--REDEF
WRITE_NODATA_LIST.V.DVBYTE.VFC#
      7888**DCL      7888--REDEF
WRITE_PRIME_DUAL.STATION_
      7246**DCL      7246--REDEF
WRITE_PRIME_DUAL.V.DVBYTE.VFC#
      7253**DCL      7253--REDEF
WRITE_REBUILD.STATION_
      7482**DCL      7482--REDEF
WRITE_REBUILD.V.DVBYTE.VFC#
      7489**DCL      7489--REDEF
PL6.E3A0      #008=FLI$CNVRT_ARCHIVE File=FLI$UTIL.:E05TSI                       TUE 07/29/97 16:04 Page:176  
WRITE_STATUS.STATION_
      6697**DCL      6697--REDEF
WRITE_STATUS.V.DVBYTE.VFC#
      6704**DCL      6704--REDEF
WRITE_TSN_USED.STATION_
      6407**DCL      6407--REDEF
WRITE_TSN_USED.V.DVBYTE.VFC#
      6414**DCL      6414--REDEF

PL6.E3A0      #009=FLI$NUMFREEGRANS File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:06 Page:177  
      677        1        /*T***********************************************************/
      678        2        /*T*                                                         */
      679        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      680        4        /*T*                                                         */
      681        5        /*T***********************************************************/
      682        6        FLI$NUMFREEGRANS: PROC ( DPSN$, FREE#, ERR ) ALTRET;
      683        7        /*F*  NAME: FLI$NUMFREEGRANS
      684        8              PURPOSE: Finds the available free space on a shared pack. Handles
      685        9                       single and multiple volume packsets.
      686       10        ***/
      687       11
      688       12    1   DCL DPSN$ PTR;                          /* Packset SN                         */
      689       13    1   DCL FREE# SBIN;               /* Returned number of free granules on packset  */
      690       14    1   DCL ERR BIT(36) ALIGNED;                /* Returned error                     */
      691       15
      692       16        /***
      693       17         *** INCLUDE FILES
      694       18         ***/
      695       19        %INCLUDE CP_6;
      696     5578        %INCLUDE FM$FIT;
      697     5799        %INCLUDE FM$SET;
      698     5826        %INCLUDE FM$CFU;
      699     5871        %INCLUDE FM$GRAN;
      700     5940        %INCLUDE B$JIT;
      701     6543        %INCLUDE B_SEGIDS_C;
      702     7082        %INCLUDE FLE_DATA_R;
      703    13033        %INCLUDE FLI_DATA_R;
      704    14447
      705    14448        /***
      706    14449         *** ENTRY
      707    14450         ***/
      708    14451    1   DCL FLI$RPT_ERR ENTRY(5);
      709    14452
      710    14453        /***
      711    14454         *** LOCAL VARIABLES
      712    14455         ***/
      713    14456    1   DCL DCB# UBIN;
PL6.E3A0      #009=FLI$NUMFREEGRANS File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:06 Page:178  
      714    14457    1   DCL NEXT# UBIN;
      715    14458    1   DCL GRANULE UBIN STATIC;
      716    14459    1   DCL XTNDIST(0:18) UBIN;
      717    14460    1   DCL NVOL# UBIN;
      718    14461    1   DCL FGRANS UBIN;
      719    14462    1   DCL AGRANS UBIN;
      720    14463    1   DCL VOLGRAN(0:19) UBIN;
      721    14464    1   DCL XTN$ PTR;
      722    14465    1   DCL IND# UBIN;
      723    14466    1   DCL BITX UBIN;
      724    14467    1   DCL FM_SRZERO UBIN CONSTANT INIT(67174400);
      725    14468    1   DCL BITS (0:35) BIT(36) CONSTANT INIT(
      726    14469    1                      '4'O,           '2'O,           '1'O,
      727    14470    1                     '04'O,          '02'O,          '01'O,
      728    14471    1                    '004'O,         '002'O,         '001'O,
      729    14472    1                   '0004'O,        '0002'O,        '0001'O,
      730    14473    1                  '00004'O,       '00002'O,       '00001'O,
      731    14474    1                 '000004'O,      '000002'O,      '000001'O,
      732    14475    1                '0000004'O,     '0000002'O,     '0000001'O,
      733    14476    1               '00000004'O,    '00000002'O,    '00000001'O,
      734    14477    1              '000000004'O,   '000000002'O,   '000000001'O,
      735    14478    1             '0000000004'O,  '0000000002'O,  '0000000001'O,
      736    14479    1            '00000000004'O, '00000000002'O, '00000000001'O,
      737    14480    1           '000000000004'O,'000000000002'O,'000000000001'O);
      738    14481    1   DCL F$CFU_ UBIN CONSTANT INIT(BITBIN(%SPCL5SID));
      739    14482    1   DCL F$CFU$ REDEF F$CFU_ PTR;
      740    14483    1   DCL M$DP DCB;
      741    14484
      742    14485        /***
      743    14486         *** MACROS
      744    14487         ***/
      745    14488        %B$ALT;
      746    14496        %B$TCB(STCLASS="BASED(B$TCB$)");
      747    14499        %FM$SET(BASED="BASED(F$CFU$)");
      748    14504        %FM$CFUX;
      749    14509        %FM$VID(BASED=STATIC);
      750    14515        %FM$GRAN(BASED="REDEF FM$VID",FLINK="FLINK UBIN, 2 * (0:1018)");
PL6.E3A0      #009=FLI$NUMFREEGRANS File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:06 Page:179  
      751    14519        %FM$FIT(BASED="REDEF FM$VID, 2 * (0:4) UBIN",N=1018);
      752    14522        %FM$GP(BASED="BASED(XTN$)");
      753    14526        %VLP_SN(FPTN=VLP_SN,
      754    14527                N=1,
      755    14528                STCLASS=STATIC);
      756    14541        %VLP_SN(FPTN=DP_SN,
      757    14542                STCLASS="BASED(DPSN$)");
      758    14555        %FPT_OPEN(FPTN=OPEN#DP,
      759    14556                ACCT=VLP_ACCT,
      760    14557                ASN=DEVICE,
      761    14558                DCB=M$DP,
      762    14559                FUN=IN,
      763    14560                RES='DP',
      764    14561                SN=VLP_SN);
      765    14670        %FPT_READ(FPTN=READ#DP,
      766    14671                BUF=FM$FIT,
      767    14672                DCB=M$DP,
      768    14673                KEY=GRANULE,
      769    14674                KEYS=YES);
      770    14713        %FPT_CLOSE(DCB=M$DP,
      771    14714                DISP=SAVE);
      772    14756        %VLP_ACCT;
      773    14769        %FPT_SAD(MONSID=%DS1SID,
      774    14770                USERSID=%SPCL5SID);
      775    14785
      776    14786        /******************************/
      777    14787
      778    14788    1      FREE# = 0;
      779    14789    1      VLP_SN.SN#(0) = DP_SN.SN#(0);
      780    14790    1      CALL M$SAD( FPT_SAD ) ALTRET(JUSTALT);
      781    14791    1      NEXT# = FM$CFUX.SETH;
      782    14792
      783    14793    1   MAINL:
      784    14794    2      DO WHILE(NEXT# ~= 0);
      785    14795    2         IF FM$SET.PSN(NEXT#) = VLP_SN.SN#(0)
      786    14796    3          THEN DO;
      787    14797    3            GRANULE = 0;
PL6.E3A0      #009=FLI$NUMFREEGRANS File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:06 Page:180  
      788    14798    3            XTNDIST = '0'B;
      789    14799    3            CALL M$OPEN(OPEN#DP);
      790    14800    3            CALL M$READ(READ#DP);
      791    14801    3            NVOL# = FM$VID.VOLCNT;
      792    14802    3            FGRANS = 0;
      793    14803    3            IND# = 0;
      794    14804    3            FM$GRAN.BLINK = 0;
      795    14805    3            GRANULE = 1 + FM_SRZERO;
      796    14806    3            VOLGRAN = '0'B;
      797    14807    4            DO WHILE(GRANULE ~= 0);
      798    14808    4               CALL M$READ(READ#DP) ALTRET(JUSTALT);
      799    14809    4               IF IND# ~= FM$GRAN.BLINK AND IND# ~= 0
      800    14810    5                THEN DO;
      801    14811    5                  DCB# = DCBNUM(M$DP);     /* Bad granule pool                   */
      802    14812    5                  ERR = E_BAD_GP;
      803    14813    5                  ALTRETURN;
      804    14814    5                  END;
      805    14815    4               XTN$ = ADDR(FM$FIT.CODES);
      806    14816    5               DO WHILE(FM$GRAN.NAVX > POFFW(XTN$,ADDR(FM$FIT)));
      807    14817    5                  IF FM$GP.XTNS < FM$GRAN.NAVX-POFFW(XTN$,ADDR(FM$FIT))
      808    14818    6                   THEN DO;
      809    14819    6                     IND# = MOD(FM$GP.VOL,SIZEW(VOLGRAN));
      810    14820    6                     VOLGRAN(IND#) = VOLGRAN(IND#) - FGRANS;
      811    14821    7                     DO IND# = 0 TO FM$GP.XTNS-2;
      812    14822    7                        AGRANS = FM$GP.XTN.EADR(IND#) - FM$GP.XTN.ADR(IND#);
      813    14823    7                        IF AGRANS > 0
      814    14824    7                         THEN FGRANS = FGRANS + AGRANS;
      815    14825    7                        BITX = 18;
      816    14826    8                        DO WHILE(AGRANS <= BITBIN(BITS(BITX)) AND BITX < 36);
      817    14827    8                           BITX = BITX + 1;
      818    14828    8                           END;
      819    14829    7                        XTNDIST(BITX-18) = XTNDIST(BITX-18) + 1;
      820    14830    7                        END;
      821    14831    6                     IND# = MOD(FM$GP.VOL,SIZEW(VOLGRAN));
      822    14832    6                     VOLGRAN(IND#) = VOLGRAN(IND#) + FGRANS;
      823    14833    6                     XTN$ = PINCRW(XTN$,FM$GP.XTNS+1);
      824    14834    6                     END;
PL6.E3A0      #009=FLI$NUMFREEGRANS File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:06 Page:181  
      825    14835    5                   ELSE
      826    14836    5                     XTN$ = ADDR(FM$FIT.CODES(FM$GRAN.NAVX));
      827    14837    5                  END;
      828    14838    4               IND# = GRANULE;
      829    14839    4               GRANULE = FM$GRAN.FLINK;
      830    14840    4               END;
      831    14841    3            CALL M$CLOSE(FPT_CLOSE) ALTRET(JUSTALT);
      832    14842    4            DO IND# = 1 TO NVOL#;
      833    14843    4               FREE# = FREE# + VOLGRAN(IND#);
      834    14844    4               END;
      835    14845    3            EXIT MAINL;
      836    14846    3            END;
      837    14847    2         NEXT# = FM$SET.SETL(NEXT#);
      838    14848    2         END MAINL;
      839    14849    1      RETURN;
      840    14850
      841    14851    1   JUSTALT:
      842    14852    1      ERR = B$TCB.ALT$->B$ALT.ERR;
      843    14853    1      ALTRETURN;
      844    14854    1   END FLI$NUMFREEGRANS;

PL6.E3A0      #009=FLI$NUMFREEGRANS File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:06 Page:182  
--  Include file information  --

   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FL_PERR_C.:E05TOU  is referenced.
   FLE_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   FM$GRAN.:E05TOU  is referenced.
   FM$CFU.:E05TOU  is referenced.
   FM$SET.:E05TOU  is referenced.
   FM$FIT.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FLI$NUMFREEGRANS.

   Procedure FLI$NUMFREEGRANS requires 195 words for executable code.
   Procedure FLI$NUMFREEGRANS requires 58 words of local(AUTO) storage.

    No errors detected in file FLI$UTIL.:E05TSI    .

PL6.E3A0      #009=FLI$NUMFREEGRANS File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:06 Page:183  

 Object Unit name= FLI$NUMFREEGRANS                           File name= FLI$UTIL.:E05TOU
 UTS= JUL 29 '97 16:06:27.80 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$PRE_RET
    2   Data  even  none  1144   2170  FLI$NUMFREEGRANS
    3  RoData even  UTS     38     46  FLI$NUMFREEGRANS
    4   DCB   even  none     0      0  M$DP
    5   Proc  even  none   195    303  FLI$NUMFREEGRANS
    6  RoData even  none     2      2  FLI$NUMFREEGRANS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     5      0   yes    yes     yes      Std        3  FLI$NUMFREEGRANS

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #009=FLI$NUMFREEGRANS File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:06 Page:184  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    E_BAD_GP                              TAPE_DCBLIST$
     SNVECLIST$                            B$JIT$                                B$TCB$
     DPLIST$                               DPRESLIST$                            DISK_FILE_SPEC$
     SPECCHARS                             EFTWORD                               M$PRE_RET
     RET_CMDS_NAME                         M$DP                                  B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #009=FLI$NUMFREEGRANS File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:06 Page:185  


      677        1        /*T***********************************************************/
      678        2        /*T*                                                         */
      679        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      680        4        /*T*                                                         */
      681        5        /*T***********************************************************/
      682        6        FLI$NUMFREEGRANS: PROC ( DPSN$, FREE#, ERR ) ALTRET;

      6  5 000000   000000 700200 xent  FLI$NUMFREE* TSX0  ! X66_AUTO_3
         5 000001   000072 000003                    ZERO    58,3

      683        7        /*F*  NAME: FLI$NUMFREEGRANS
      684        8              PURPOSE: Finds the available free space on a shared pack. Handles
      685        9                       single and multiple volume packsets.
      686       10        ***/
      687       11
      688       12    1   DCL DPSN$ PTR;                          /* Packset SN                         */
      689       13    1   DCL FREE# SBIN;               /* Returned number of free granules on packset  */
      690       14    1   DCL ERR BIT(36) ALIGNED;                /* Returned error                     */
      691       15
      692       16        /***
      693       17         *** INCLUDE FILES
      694       18         ***/
      695       19        %INCLUDE CP_6;
      696     5578        %INCLUDE FM$FIT;
      697     5799        %INCLUDE FM$SET;
      698     5826        %INCLUDE FM$CFU;
      699     5871        %INCLUDE FM$GRAN;
      700     5940        %INCLUDE B$JIT;
      701     6543        %INCLUDE B_SEGIDS_C;
      702     7082        %INCLUDE FLE_DATA_R;
      703    13033        %INCLUDE FLI_DATA_R;
      704    14447
      705    14448        /***
      706    14449         *** ENTRY
      707    14450         ***/
      708    14451    1   DCL FLI$RPT_ERR ENTRY(5);
PL6.E3A0      #009=FLI$NUMFREEGRANS File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:06 Page:186  
      709    14452
      710    14453        /***
      711    14454         *** LOCAL VARIABLES
      712    14455         ***/
      713    14456    1   DCL DCB# UBIN;
      714    14457    1   DCL NEXT# UBIN;
      715    14458    1   DCL GRANULE UBIN STATIC;
      716    14459    1   DCL XTNDIST(0:18) UBIN;
      717    14460    1   DCL NVOL# UBIN;
      718    14461    1   DCL FGRANS UBIN;
      719    14462    1   DCL AGRANS UBIN;
      720    14463    1   DCL VOLGRAN(0:19) UBIN;
      721    14464    1   DCL XTN$ PTR;
      722    14465    1   DCL IND# UBIN;
      723    14466    1   DCL BITX UBIN;
      724    14467    1   DCL FM_SRZERO UBIN CONSTANT INIT(67174400);
      725    14468    1   DCL BITS (0:35) BIT(36) CONSTANT INIT(
      726    14469    1                      '4'O,           '2'O,           '1'O,
      727    14470    1                     '04'O,          '02'O,          '01'O,
      728    14471    1                    '004'O,         '002'O,         '001'O,
      729    14472    1                   '0004'O,        '0002'O,        '0001'O,
      730    14473    1                  '00004'O,       '00002'O,       '00001'O,
      731    14474    1                 '000004'O,      '000002'O,      '000001'O,
      732    14475    1                '0000004'O,     '0000002'O,     '0000001'O,
      733    14476    1               '00000004'O,    '00000002'O,    '00000001'O,
      734    14477    1              '000000004'O,   '000000002'O,   '000000001'O,
      735    14478    1             '0000000004'O,  '0000000002'O,  '0000000001'O,
      736    14479    1            '00000000004'O, '00000000002'O, '00000000001'O,
      737    14480    1           '000000000004'O,'000000000002'O,'000000000001'O);
      738    14481    1   DCL F$CFU_ UBIN CONSTANT INIT(BITBIN(%SPCL5SID));
      739    14482    1   DCL F$CFU$ REDEF F$CFU_ PTR;
      740    14483    1   DCL M$DP DCB;
      741    14484
      742    14485        /***
      743    14486         *** MACROS
      744    14487         ***/
      745    14488        %B$ALT;
PL6.E3A0      #009=FLI$NUMFREEGRANS File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:06 Page:187  
      746    14496        %B$TCB(STCLASS="BASED(B$TCB$)");
      747    14499        %FM$SET(BASED="BASED(F$CFU$)");
      748    14504        %FM$CFUX;
      749    14509        %FM$VID(BASED=STATIC);
      750    14515        %FM$GRAN(BASED="REDEF FM$VID",FLINK="FLINK UBIN, 2 * (0:1018)");
      751    14519        %FM$FIT(BASED="REDEF FM$VID, 2 * (0:4) UBIN",N=1018);
      752    14522        %FM$GP(BASED="BASED(XTN$)");
      753    14526        %VLP_SN(FPTN=VLP_SN,
      754    14527                N=1,
      755    14528                STCLASS=STATIC);
      756    14541        %VLP_SN(FPTN=DP_SN,
      757    14542                STCLASS="BASED(DPSN$)");
      758    14555        %FPT_OPEN(FPTN=OPEN#DP,
      759    14556                ACCT=VLP_ACCT,
      760    14557                ASN=DEVICE,
      761    14558                DCB=M$DP,
      762    14559                FUN=IN,
      763    14560                RES='DP',
      764    14561                SN=VLP_SN);
      765    14670        %FPT_READ(FPTN=READ#DP,
      766    14671                BUF=FM$FIT,
      767    14672                DCB=M$DP,
      768    14673                KEY=GRANULE,
      769    14674                KEYS=YES);
      770    14713        %FPT_CLOSE(DCB=M$DP,
      771    14714                DISP=SAVE);
      772    14756        %VLP_ACCT;
      773    14769        %FPT_SAD(MONSID=%DS1SID,
      774    14770                USERSID=%SPCL5SID);
      775    14785
      776    14786        /******************************/
      777    14787
      778    14788    1      FREE# = 0;

  14788  5 000002   200004 470500                    LDP0    @FREE#,,AUTO
         5 000003   000000 450100                    STZ     0,,PR0

PL6.E3A0      #009=FLI$NUMFREEGRANS File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:06 Page:188  
      779    14789    1      VLP_SN.SN#(0) = DP_SN.SN#(0);

  14789  5 000004   200003 471500                    LDP1    @DPSN$,,AUTO
         5 000005   100000 473500                    LDP3    0,,PR1
         5 000006   040000 100500                    MLR     fill='040'O
         5 000007   300001 000006                    ADSC9   1,,PR3                   cn=0,n=6
         5 000010   002011 000006 2                  ADSC9   VLP_SN+1                 cn=0,n=6

      780    14790    1      CALL M$SAD( FPT_SAD ) ALTRET(JUSTALT);

  14790  5 000011   002164 630400 2                  EPPR0   FPT_SAD
         5 000012   430015 713400                    CLIMB   alt,+12301
         5 000013   400000 401760                    pmme    nvectors=1
         5 000014   000275 702000 5                  TSX2    JUSTALT

      781    14791    1      NEXT# = FM$CFUX.SETH;

  14791  5 000015   000045 470400 3                  LDP0    F$CFU_
         5 000016   000005 236100                    LDQ     5,,PR0
         5 000017   000022 772000                    QRL     18
         5 000020   200007 756100                    STQ     NEXT#,,AUTO

      782    14792
      783    14793    1   MAINL:
      784    14794    2      DO WHILE(NEXT# ~= 0);

  14794  5 000021   000274 600000 5     MAINL        TZE     s:14849

      785    14795    2         IF FM$SET.PSN(NEXT#) = VLP_SN.SN#(0)

  14795  5 000022   200007 235100                    LDA     NEXT#,,AUTO
         5 000023   000005 735000                    ALS     5
         5 000024   000045 470400 3                  LDP0    F$CFU_
         5 000025   040000 106505                    CMPC    fill='040'O
         5 000026   000000 400006                    ADSC9   0,A,PR0                  cn=2,n=6
         5 000027   002011 000006 2                  ADSC9   VLP_SN+1                 cn=0,n=6
         5 000030   000266 601000 5                  TNZ     s:14847
PL6.E3A0      #009=FLI$NUMFREEGRANS File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:06 Page:189  

      786    14796    3          THEN DO;

      787    14797    3            GRANULE = 0;

  14797  5 000031   000006 450000 2                  STZ     GRANULE

      788    14798    3            XTNDIST = '0'B;

  14798  5 000032   000100 100400                    MLR     fill='000'O
         5 000033   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         5 000034   200010 000114                    ADSC9   XTNDIST,,AUTO            cn=0,n=76

      789    14799    3            CALL M$OPEN(OPEN#DP);

  14799  5 000035   002014 630400 2                  EPPR0   OPEN#DP
         5 000036   050000 713400                    CLIMB   open
         5 000037   410400 401760                    pmme    nvectors=18

      790    14800    3            CALL M$READ(READ#DP);

  14800  5 000040   002106 630400 2                  EPPR0   READ#DP
         5 000041   040000 713400                    CLIMB   read
         5 000042   401400 401760                    pmme    nvectors=4

      791    14801    3            NVOL# = FM$VID.VOLCNT;

  14801  5 000043   000013 236000 2                  LDQ     FM$VID+4
         5 000044   777777 376007                    ANQ     -1,DL
         5 000045   200033 756100                    STQ     NVOL#,,AUTO

      792    14802    3            FGRANS = 0;

  14802  5 000046   200034 450100                    STZ     FGRANS,,AUTO

      793    14803    3            IND# = 0;

PL6.E3A0      #009=FLI$NUMFREEGRANS File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:06 Page:190  
  14803  5 000047   200063 450100                    STZ     IND#,,AUTO

      794    14804    3            FM$GRAN.BLINK = 0;

  14804  5 000050   000012 450000 2                  STZ     FM$VID+3

      795    14805    3            GRANULE = 1 + FM_SRZERO;

  14805  5 000051   000000 235000 3                  LDA     FM_SRZERO
         5 000052   000001 035007                    ADLA    1,DL
         5 000053   000006 755000 2                  STA     GRANULE

      796    14806    3            VOLGRAN = '0'B;

  14806  5 000054   000100 100400                    MLR     fill='000'O
         5 000055   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         5 000056   200036 000120                    ADSC9   VOLGRAN,,AUTO            cn=0,n=80

      797    14807    4            DO WHILE(GRANULE ~= 0);

  14807  5 000057   000243 600000 5                  TZE     s:14841

      798    14808    4               CALL M$READ(READ#DP) ALTRET(JUSTALT);

  14808  5 000060   002106 630400 2                  EPPR0   READ#DP
         5 000061   440000 713400                    CLIMB   alt,read
         5 000062   401400 401760                    pmme    nvectors=4
         5 000063   000275 702000 5                  TSX2    JUSTALT

      799    14809    4               IF IND# ~= FM$GRAN.BLINK AND IND# ~= 0

  14809  5 000064   200063 236100                    LDQ     IND#,,AUTO
         5 000065   000070 604000 5                  TMI     s:14809+4
         5 000066   000012 116000 2                  CMPQ    FM$VID+3
         5 000067   000100 600000 5                  TZE     s:14815
         5 000070   000000 116003                    CMPQ    0,DU
         5 000071   000100 600000 5                  TZE     s:14815
PL6.E3A0      #009=FLI$NUMFREEGRANS File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:06 Page:191  

      800    14810    5                THEN DO;

      801    14811    5                  DCB# = DCBNUM(M$DP);     /* Bad granule pool                   */

  14811  5 000072   000000 236007 xsym               LDQ     M$DP,DL
         5 000073   200006 756100                    STQ     DCB#,,AUTO

      802    14812    5                  ERR = E_BAD_GP;

  14812  5 000074   000000 236000 xsym               LDQ     E_BAD_GP
         5 000075   200005 470500                    LDP0    @ERR,,AUTO
         5 000076   000000 756100                    STQ     0,,PR0

      803    14813    5                  ALTRETURN;

  14813  5 000077   000000 702200 xent               TSX2  ! X66_AALT

      804    14814    5                  END;
      805    14815    4               XTN$ = ADDR(FM$FIT.CODES);

  14815  5 000100   000000 236000 6                  LDQ     0
         5 000101   200062 756100                    STQ     XTN$,,AUTO

      806    14816    5               DO WHILE(FM$GRAN.NAVX > POFFW(XTN$,ADDR(FM$FIT)));

  14816  5 000102   000223 710000 5                  TRA     s:14837

      807    14817    5                  IF FM$GP.XTNS < FM$GRAN.NAVX-POFFW(XTN$,ADDR(FM$FIT))

  14817  5 000103   000001 236000 6                  LDQ     1
         5 000104   000022 772000                    QRL     18
         5 000105   200066 756100                    STQ     BITX+2,,AUTO
         5 000106   200062 236100                    LDQ     XTN$,,AUTO
         5 000107   000022 772000                    QRL     18
         5 000110   200066 136100                    SBLQ    BITX+2,,AUTO
         5 000111   200067 756100                    STQ     BITX+3,,AUTO
PL6.E3A0      #009=FLI$NUMFREEGRANS File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:06 Page:192  
         5 000112   000010 236000 2                  LDQ     FM$VID+1
         5 000113   000022 772000                    QRL     18
         5 000114   200067 136100                    SBLQ    BITX+3,,AUTO
         5 000115   200070 756100                    STQ     BITX+4,,AUTO
         5 000116   200062 470500                    LDP0    XTN$,,AUTO
         5 000117   000000 236100                    LDQ     0,,PR0
         5 000120   777777 376007                    ANQ     -1,DL
         5 000121   200070 116100                    CMPQ    BITX+4,,AUTO
         5 000122   000220 605000 5                  TPL     s:14836

      808    14818    6                   THEN DO;

      809    14819    6                     IND# = MOD(FM$GP.VOL,SIZEW(VOLGRAN));

  14819  5 000123   000000 236100                    LDQ     0,,PR0
         5 000124   000033 772000                    QRL     27
         5 000125   000024 506007                    DIV     20,DL
         5 000126   200063 755100                    STA     IND#,,AUTO

      810    14820    6                     VOLGRAN(IND#) = VOLGRAN(IND#) - FGRANS;

  14820  5 000127   200036 236105                    LDQ     VOLGRAN,AL,AUTO
         5 000130   200034 136100                    SBLQ    FGRANS,,AUTO
         5 000131   200063 720100                    LXL0    IND#,,AUTO
         5 000132   200036 756110                    STQ     VOLGRAN,X0,AUTO

      811    14821    7                     DO IND# = 0 TO FM$GP.XTNS-2;

  14821  5 000133   200063 450100                    STZ     IND#,,AUTO
         5 000134   000174 710000 5                  TRA     s:14830+3

      812    14822    7                        AGRANS = FM$GP.XTN.EADR(IND#) - FM$GP.XTN.ADR(IND#);

  14822  5 000135   200062 470500                    LDP0    XTN$,,AUTO
         5 000136   200063 720100                    LXL0    IND#,,AUTO
         5 000137   000001 236110                    LDQ     1,X0,PR0
         5 000140   000022 772000                    QRL     18
PL6.E3A0      #009=FLI$NUMFREEGRANS File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:06 Page:193  
         5 000141   200066 756100                    STQ     BITX+2,,AUTO
         5 000142   000001 236110                    LDQ     1,X0,PR0
         5 000143   777777 376007                    ANQ     -1,DL
         5 000144   200066 136100                    SBLQ    BITX+2,,AUTO
         5 000145   200035 756100                    STQ     AGRANS,,AUTO

      813    14823    7                        IF AGRANS > 0

  14823  5 000146   000151 600000 5                  TZE     s:14825

      814    14824    7                         THEN FGRANS = FGRANS + AGRANS;

  14824  5 000147   200034 036100                    ADLQ    FGRANS,,AUTO
         5 000150   200034 756100                    STQ     FGRANS,,AUTO

      815    14825    7                        BITX = 18;

  14825  5 000151   000022 235007                    LDA     18,DL
         5 000152   200064 755100                    STA     BITX,,AUTO

      816    14826    8                        DO WHILE(AGRANS <= BITBIN(BITS(BITX)) AND BITX < 36);

  14826  5 000153   000157 710000 5                  TRA     s:14828

      817    14827    8                           BITX = BITX + 1;

  14827  5 000154   200064 235100                    LDA     BITX,,AUTO
         5 000155   000001 035007                    ADLA    1,DL
         5 000156   200064 755100                    STA     BITX,,AUTO

      818    14828    8                           END;

  14828  5 000157   000001 236005 3                  LDQ     BITS,AL
         5 000160   200035 116100                    CMPQ    AGRANS,,AUTO
         5 000161   000165 602000 5                  TNC     s:14829
         5 000162   200064 235100                    LDA     BITX,,AUTO
         5 000163   000044 115007                    CMPA    36,DL
PL6.E3A0      #009=FLI$NUMFREEGRANS File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:06 Page:194  
         5 000164   000154 602000 5                  TNC     s:14827

      819    14829    7                        XTNDIST(BITX-18) = XTNDIST(BITX-18) + 1;

  14829  5 000165   200064 720100                    LXL0    BITX,,AUTO
         5 000166   277766 235110                    LDA     BITX-62,X0,AUTO
         5 000167   000001 035007                    ADLA    1,DL
         5 000170   277766 755110                    STA     BITX-62,X0,AUTO

      820    14830    7                        END;

  14830  5 000171   200063 236100                    LDQ     IND#,,AUTO
         5 000172   000001 036007                    ADLQ    1,DL
         5 000173   200063 756100                    STQ     IND#,,AUTO
         5 000174   200062 470500                    LDP0    XTN$,,AUTO
         5 000175   000000 236100                    LDQ     0,,PR0
         5 000176   777777 376007                    ANQ     -1,DL
         5 000177   000002 136007                    SBLQ    2,DL
         5 000200   000203 604000 5                  TMI     s:14831
         5 000201   200063 116100                    CMPQ    IND#,,AUTO
         5 000202   000135 603000 5                  TRC     s:14822

      821    14831    6                     IND# = MOD(FM$GP.VOL,SIZEW(VOLGRAN));

  14831  5 000203   000000 236100                    LDQ     0,,PR0
         5 000204   000033 772000                    QRL     27
         5 000205   000024 506007                    DIV     20,DL
         5 000206   200063 755100                    STA     IND#,,AUTO

      822    14832    6                     VOLGRAN(IND#) = VOLGRAN(IND#) + FGRANS;

  14832  5 000207   200036 236105                    LDQ     VOLGRAN,AL,AUTO
         5 000210   200034 036100                    ADLQ    FGRANS,,AUTO
         5 000211   200063 720100                    LXL0    IND#,,AUTO
         5 000212   200036 756110                    STQ     VOLGRAN,X0,AUTO

      823    14833    6                     XTN$ = PINCRW(XTN$,FM$GP.XTNS+1);
PL6.E3A0      #009=FLI$NUMFREEGRANS File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:06 Page:195  

  14833  5 000213   000000 721100                    LXL1    0,,PR0
         5 000214   000001 636011                    EAQ     1,X1
         5 000215   200062 036100                    ADLQ    XTN$,,AUTO
         5 000216   200062 756100                    STQ     XTN$,,AUTO

      824    14834    6                     END;

  14834  5 000217   000223 710000 5                  TRA     s:14837

      825    14835    5                   ELSE
      826    14836    5                     XTN$ = ADDR(FM$FIT.CODES(FM$GRAN.NAVX));

  14836  5 000220   000010 220000 2                  LDX0    FM$VID+1
         5 000221   000014 631410 2                  EPPR1   FM$VID+5,X0
         5 000222   200062 451500                    STP1    XTN$,,AUTO

      827    14837    5                  END;

  14837  5 000223   000001 236000 6                  LDQ     1
         5 000224   000022 772000                    QRL     18
         5 000225   200066 756100                    STQ     BITX+2,,AUTO
         5 000226   200062 236100                    LDQ     XTN$,,AUTO
         5 000227   000022 772000                    QRL     18
         5 000230   200066 136100                    SBLQ    BITX+2,,AUTO
         5 000231   200067 756100                    STQ     BITX+3,,AUTO
         5 000232   000010 236000 2                  LDQ     FM$VID+1
         5 000233   000022 772000                    QRL     18
         5 000234   200067 116100                    CMPQ    BITX+3,,AUTO
         5 000235   000103 605400 5                  TPNZ    s:14817

      828    14838    4               IND# = GRANULE;

  14838  5 000236   000006 235000 2                  LDA     GRANULE
         5 000237   200063 755100                    STA     IND#,,AUTO

      829    14839    4               GRANULE = FM$GRAN.FLINK;
PL6.E3A0      #009=FLI$NUMFREEGRANS File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:06 Page:196  

  14839  5 000240   000013 235000 2                  LDA     FM$VID+4
         5 000241   000006 755000 2                  STA     GRANULE

      830    14840    4               END;

  14840  5 000242   000060 601000 5                  TNZ     s:14808

      831    14841    3            CALL M$CLOSE(FPT_CLOSE) ALTRET(JUSTALT);

  14841  5 000243   002124 630400 2                  EPPR0   FPT_CLOSE
         5 000244   450001 713400                    CLIMB   alt,close
         5 000245   406000 401760                    pmme    nvectors=13
         5 000246   000275 702000 5                  TSX2    JUSTALT

      832    14842    4            DO IND# = 1 TO NVOL#;

  14842  5 000247   000001 235007                    LDA     1,DL
         5 000250   200063 755100                    STA     IND#,,AUTO
         5 000251   000262 710000 5                  TRA     s:14844+3

      833    14843    4               FREE# = FREE# + VOLGRAN(IND#);

  14843  5 000252   200004 470500                    LDP0    @FREE#,,AUTO
         5 000253   200063 720100                    LXL0    IND#,,AUTO
         5 000254   000000 236100                    LDQ     0,,PR0
         5 000255   200036 036110                    ADLQ    VOLGRAN,X0,AUTO
         5 000256   000000 756100                    STQ     0,,PR0

      834    14844    4               END;

  14844  5 000257   200063 235100                    LDA     IND#,,AUTO
         5 000260   000001 035007                    ADLA    1,DL
         5 000261   200063 755100                    STA     IND#,,AUTO
         5 000262   200033 236100                    LDQ     NVOL#,,AUTO
         5 000263   200063 116100                    CMPQ    IND#,,AUTO
         5 000264   000252 603000 5                  TRC     s:14843
PL6.E3A0      #009=FLI$NUMFREEGRANS File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:06 Page:197  

      835    14845    3            EXIT MAINL;

  14845  5 000265   000274 710000 5                  TRA     s:14849

      836    14846    3            END;
      837    14847    2         NEXT# = FM$SET.SETL(NEXT#);

  14847  5 000266   200007 236100                    LDQ     NEXT#,,AUTO
         5 000267   000003 736000                    QLS     3
         5 000270   000005 236106                    LDQ     5,QL,PR0
         5 000271   000022 772000                    QRL     18
         5 000272   200007 756100                    STQ     NEXT#,,AUTO

      838    14848    2         END MAINL;

  14848  5 000273   000022 601000 5                  TNZ     s:14795

      839    14849    1      RETURN;

  14849  5 000274   000000 702200 xent               TSX2  ! X66_ARET

      840    14850
      841    14851    1   JUSTALT:
      842    14852    1      ERR = B$TCB.ALT$->B$ALT.ERR;

  14852  5 000275   000000 470400 xsym  JUSTALT      LDP0    B$TCB$
         5 000276   000000 471500                    LDP1    0,,PR0
         5 000277   100102 236100                    LDQ     66,,PR1
         5 000300   200005 473500                    LDP3    @ERR,,AUTO
         5 000301   300000 756100                    STQ     0,,PR3

      843    14853    1      ALTRETURN;

  14853  5 000302   000000 702200 xent               TSX2  ! X66_AALT
      844    14854    1   END FLI$NUMFREEGRANS;

PL6.E3A0      #009=FLI$NUMFREEGRANS File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:06 Page:198  
--  Include file information  --

   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FL_PERR_C.:E05TOU  is referenced.
   FLE_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   FM$GRAN.:E05TOU  is referenced.
   FM$CFU.:E05TOU  is referenced.
   FM$SET.:E05TOU  is referenced.
   FM$FIT.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FLI$NUMFREEGRANS.
PL6.E3A0      #009=FLI$NUMFREEGRANS File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:06 Page:199  

 **** Variables and constants ****

  ****  Section 002  Data  FLI$NUMFREEGRANS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     7-0-0/w STRC(36864) r     1 FM$FIT                     7-0-0/w STRC(36864) r     1 FM$GRAN
     7-0-0/w STRC(36864) r     1 FM$VID                  2124-0-0/d STRC(1080)  r     1 FPT_CLOSE
  2164-0-0/d STRC(144)   r     1 FPT_SAD                    6-0-0/w UBIN        r     1 GRANULE
  2014-0-0/d STRC(2088)  r     1 OPEN#DP                 2106-0-0/d STRC(504)   r     1 READ#DP
  2162-0-0/c STRC(72)    r     1 VLP_ACCT                2010-0-0/d STRC(90)    r     1 VLP_SN

  ****  Section 003 RoData FLI$NUMFREEGRANS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     1-0-0/b BIT         r     1 BITS(0:35)                45-0-0/w PTR         r     1 F$CFU$
    45-0-0/w UBIN        r     1 F$CFU_                     0-0-0/w UBIN        r     1 FM_SRZERO

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @DPSN$                     5-0-0/w PTR         r     1 @ERR
     4-0-0/w PTR         r     1 @FREE#                    35-0-0/w UBIN        r     1 AGRANS
    64-0-0/w UBIN        r     1 BITX                       6-0-0/w UBIN        r     1 DCB#
    *0-0-0/w PTR         r     1 DPSN$                     *0-0-0/w BIT         r     1 ERR
    34-0-0/w UBIN        r     1 FGRANS                    *0-0-0/w SBIN        r     1 FREE#
    63-0-0/w UBIN        r     1 IND#                       7-0-0/w UBIN        r     1 NEXT#
    33-0-0/w UBIN        r     1 NVOL#                     36-0-0/w UBIN        r     1 VOLGRAN(0:19)
    62-0-0/w PTR         r     1 XTN$                      10-0-0/w UBIN        r     1 XTNDIST(0:18)

  ****  SYMREF variables  ****

PL6.E3A0      #009=FLI$NUMFREEGRANS File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:06 Page:200  
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/w PTR         r     1 DISK_FILE_SPEC$            0-0-0/w PTR         r     1 DPLIST$
     0-0-0/w PTR         r     1 DPRESLIST$                 0-0-0/w STRC        r     1 E_BAD_GP
     0-0-0/c ASTR(9)     r     1 RET_CMDS_NAME              0-0-0/w PTR         r     1 SNVECLIST$
     0-0-0/w PTR         r     1 TAPE_DCBLIST$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/d STRC(90)    r     1 DP_SN                      0-0-0/w STRC(288)   r     1 FM$CFUX
     0-0-0/w STRC(72)    r     1 FM$GP                      0-0-0/w STRC(288)   r     1 FM$SET(0:0)
     0-0-0N  NULL        r     1 M$DP


   Procedure FLI$NUMFREEGRANS requires 195 words for executable code.
   Procedure FLI$NUMFREEGRANS requires 58 words of local(AUTO) storage.

    No errors detected in file FLI$UTIL.:E05TSI    .
PL6.E3A0      #009=FLI$NUMFREEGRANS File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:06 Page:201  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #009=FLI$NUMFREEGRANS File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:06 Page:202  
          MINI XREF LISTING

AGRANS
     14462**DCL     14822<<ASSIGN  14823>>IF      14824>>ASSIGN  14826>>DOWHILE
B$ALT.CODE
     14490**DCL     14490--REDEF   14491--REDEF   14491--REDEF
B$ALT.ERR
     14491**DCL     14852>>ASSIGN
B$ALT.ERR.ERR#
     14492**DCL     14492--REDEF
B$ALT.EVID
     14491**DCL     14491--REDEF   14491--REDEF
B$JIT.CPFLAGS1.SLEAZE
      6361**DCL      6361--REDEF
B$JIT.ERR.MID
      6268**DCL      6268--REDEF
B$JIT.JRESPEAK
      6429**DCL      6430--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
      6538**DCL      6538--REDEF    6539--REDEF
B$JIT.PNR
      6442**DCL      6442--REDEF
B$JIT.TSLINE
      6536**DCL      6537--REDEF
B$JIT$
     13964**DCL      6262--IMP-PTR
B$TCB.ALT$
     14497**DCL     14852>>ASSIGN
B$TCB$
     13964**DCL     14497--IMP-PTR 14852>>ASSIGN
BITS
     14468**DCL     14826>>DOWHILE
BITX
     14466**DCL     14825<<ASSIGN  14826>>DOWHILE 14826>>DOWHILE 14827<<ASSIGN  14827>>ASSIGN  14829>>ASSIGN
PL6.E3A0      #009=FLI$NUMFREEGRANS File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:06 Page:203  
     14829>>ASSIGN
DCB#
     14456**DCL     14811<<ASSIGN
DISK_CLOSE.SN_
     13644**DCL     13644--REDEF
DISK_CLOSE.UTL_
     13645**DCL     13645--REDEF
DISK_CLOSE.V.EXPIRE#
     13659**DCL     13659--REDEF
DISK_CLOSE.V.TYPE#
     13657**DCL     13657--REDEF
DISK_CLOSE.V.XTNSIZE#
     13654**DCL     13654--REDEF   13656--REDEF
DISK_FILE_SPEC.SPEC
     14009**DCL     14011--REDEF
DISK_FILE_SPEC.SPEC.START
     14010**DCL     14010--REDEF
DISK_FILE_SPEC.SPEC.STOP
     14011**DCL     14011--REDEF
DISK_FILE_SPEC$
     14008**DCL     14009--IMP-PTR
DISK_OPEN.ACSVEH_
     13509**DCL     13510--REDEF
DISK_OPEN.ALTKEYS_
     13515**DCL     13516--REDEF   13516--REDEF
DISK_OPEN.HDR_
     13514**DCL     13515--REDEF
DISK_OPEN.TAB_
     13513**DCL     13514--REDEF
DISK_OPEN.UHL_
     13507**DCL     13508--REDEF   13508--REDEF
DISK_OPEN.V.FSN#
     13547**DCL     13547--REDEF   13547--REDEF
DISK_OPEN.WSN_
     13513**DCL     13513--REDEF
DISK_READ.STATION_
PL6.E3A0      #009=FLI$NUMFREEGRANS File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:06 Page:204  
     13571**DCL     13572--REDEF
DISK_READ.V.DVBYTE.REREAD#
     13583**DCL     13583--REDEF
DISK_READ.V.INDX#
     13581**DCL     13581--REDEF
DISK_WRITE.STATION_
     13609**DCL     13609--REDEF
DISK_WRITE.V.DVBYTE.VFC#
     13616**DCL     13616--REDEF
DPLIST$
     13994**DCL     14006--IMP-PTR
DPRESLIST$
     14008**DCL     14008--IMP-PTR
DPSN$
        12**DCL         6--PROC    14553--IMP-PTR 14789>>ASSIGN
DP_SN.SN#
     14553**DCL     14789>>ASSIGN
EFTWORD
     14129**DCL     14129--REDEF
ERR
        14**DCL         6--PROC    14812<<ASSIGN  14852<<ASSIGN
E_BAD_GP
     12460**DCL     14812>>ASSIGN
F$CFU$
     14482**DCL     14500--IMP-PTR 14505--IMP-PTR 14791>>ASSIGN  14795>>IF      14847>>ASSIGN
F$CFU_
     14481**DCL     14482--REDEF
FGRANS
     14461**DCL     14802<<ASSIGN  14820>>ASSIGN  14824<<ASSIGN  14824>>ASSIGN  14832>>ASSIGN
FM$CFUX.SETH
     14506**DCL     14791>>ASSIGN
FM$FIT
     14520**DCL     14693--DCLINIT 14694--DCLINIT 14816--DOWHILE 14817--IF
FM$FIT.CODES
     14520**DCL     14815--ASSIGN  14836--ASSIGN
FM$GP.VOL
PL6.E3A0      #009=FLI$NUMFREEGRANS File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:06 Page:205  
     14523**DCL     14819>>ASSIGN  14831>>ASSIGN
FM$GP.XTN.ADR
     14523**DCL     14822>>ASSIGN
FM$GP.XTN.EADR
     14523**DCL     14822>>ASSIGN
FM$GP.XTNS
     14523**DCL     14817>>IF      14821>>DOINDEX 14833>>ASSIGN
FM$GRAN.BLINK
     14517**DCL     14804<<ASSIGN  14809>>IF
FM$GRAN.FLINK
     14517**DCL     14839>>ASSIGN
FM$GRAN.NAVX
     14516**DCL     14816>>DOWHILE 14817>>IF      14836>>ASSIGN
FM$SET.PSN
     14500**DCL     14795>>IF
FM$SET.SETL
     14502**DCL     14847>>ASSIGN
FM$SET.USERLIST
     14501**DCL     14501--REDEF
FM$VID
     14510**DCL     14516--REDEF   14520--REDEF
FM$VID.DTT
     14512**DCL     14512--REDEF
FM$VID.VOLCNT
     14510**DCL     14801>>ASSIGN
FM_SRZERO
     14467**DCL     14805>>ASSIGN
FPT_CLOSE
     14737**DCL     14841<>CALL
FPT_CLOSE.SN_
     14737**DCL     14737--REDEF
FPT_CLOSE.UTL_
     14738**DCL     14738--REDEF
FPT_CLOSE.V
     14742**DCL     14737--DCLINIT
FPT_CLOSE.V.EXPIRE#
PL6.E3A0      #009=FLI$NUMFREEGRANS File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:06 Page:206  
     14752**DCL     14752--REDEF
FPT_CLOSE.V.TYPE#
     14750**DCL     14750--REDEF
FPT_CLOSE.V.XTNSIZE#
     14747**DCL     14747--REDEF   14749--REDEF
FPT_EXIT.V.STEPCC#
     13434**DCL     13434--REDEF
FPT_SAD
     14781**DCL     14790<>CALL
FPT_SAD.V
     14781**DCL     14781--DCLINIT
FREE#
        13**DCL         6--PROC    14788<<ASSIGN  14843<<ASSIGN  14843>>ASSIGN
GRANULE
     14458**DCL     14691--DCLINIT 14692--DCLINIT 14797<<ASSIGN  14805<<ASSIGN  14807>>DOWHILE 14838>>ASSIGN
     14839<<ASSIGN
IND#
     14465**DCL     14803<<ASSIGN  14809>>IF      14809>>IF      14819<<ASSIGN  14820>>ASSIGN  14820>>ASSIGN
     14821<<DOINDEX 14822>>ASSIGN  14822>>ASSIGN  14831<<ASSIGN  14832>>ASSIGN  14832>>ASSIGN  14838<<ASSIGN
     14842<<DOINDEX 14843>>ASSIGN
JUSTALT
     14852**LABEL   14790--CALLALT 14808--CALLALT 14841--CALLALT
M$CLOSE
      5506**DCL-ENT 14841--CALL
M$DP
     14483**DCL     14811>>ASSIGN
M$OPEN
      5506**DCL-ENT 14799--CALL
M$READ
      5507**DCL-ENT 14800--CALL    14808--CALL
M$SAD
      5545**DCL-ENT 14790--CALL
MAINL
     14794**LABEL   14845--EXIT
NEXT#
     14457**DCL     14791<<ASSIGN  14794>>DOWHILE 14795>>IF      14847<<ASSIGN  14847>>ASSIGN
PL6.E3A0      #009=FLI$NUMFREEGRANS File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:06 Page:207  
NVOL#
     14460**DCL     14801<<ASSIGN  14842>>DOINDEX
OPEN#DP
     14626**DCL     14799<>CALL
OPEN#DP.ACSVEH_
     14628**DCL     14629--REDEF
OPEN#DP.ALTKEYS_
     14634**DCL     14635--REDEF   14635--REDEF
OPEN#DP.HDR_
     14633**DCL     14634--REDEF
OPEN#DP.TAB_
     14632**DCL     14633--REDEF
OPEN#DP.UHL_
     14626**DCL     14627--REDEF   14627--REDEF
OPEN#DP.V
     14635**DCL     14626--DCLINIT
OPEN#DP.V.FSN#
     14666**DCL     14666--REDEF   14666--REDEF
OPEN#DP.WSN_
     14632**DCL     14632--REDEF
PRE_RET_CLOSE.SN_
     14372**DCL     14372--REDEF
PRE_RET_CLOSE.UTL_
     14373**DCL     14373--REDEF
PRE_RET_CLOSE.V.EXPIRE#
     14387**DCL     14387--REDEF
PRE_RET_CLOSE.V.TYPE#
     14385**DCL     14385--REDEF
PRE_RET_CLOSE.V.XTNSIZE#
     14382**DCL     14382--REDEF   14384--REDEF
PRE_RET_OPEN.ACSVEH_
     14307**DCL     14308--REDEF
PRE_RET_OPEN.ALTKEYS_
     14313**DCL     14314--REDEF   14314--REDEF
PRE_RET_OPEN.HDR_
     14312**DCL     14313--REDEF
PL6.E3A0      #009=FLI$NUMFREEGRANS File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:06 Page:208  
PRE_RET_OPEN.TAB_
     14311**DCL     14312--REDEF
PRE_RET_OPEN.UHL_
     14305**DCL     14306--REDEF   14306--REDEF
PRE_RET_OPEN.V.FSN#
     14345**DCL     14345--REDEF   14345--REDEF
PRE_RET_OPEN.WSN_
     14311**DCL     14311--REDEF
PRE_RET_READ.STATION_
     14162**DCL     14163--REDEF
PRE_RET_READ.V.DVBYTE.REREAD#
     14174**DCL     14174--REDEF
PRE_RET_READ.V.INDX#
     14172**DCL     14172--REDEF
PRE_RET_WRITE.STATION_
     14200**DCL     14200--REDEF
PRE_RET_WRITE.V.DVBYTE.VFC#
     14207**DCL     14207--REDEF
READ#DP
     14691**DCL     14800<>CALL    14808<>CALL
READ#DP.STATION_
     14694**DCL     14695--REDEF
READ#DP.V
     14695**DCL     14691--DCLINIT
READ#DP.V.DVBYTE.REREAD#
     14706**DCL     14706--REDEF
READ#DP.V.INDX#
     14704**DCL     14704--REDEF
RET_CMDS_NAME.L#
     14416**DCL     14416--IMP-SIZ
SNVECLIST$
     13948**DCL     13948--IMP-PTR
SPEC.START
     14012**DCL     14013--REDEF
SPEC.STOP
     14013**DCL     14014--REDEF
PL6.E3A0      #009=FLI$NUMFREEGRANS File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:06 Page:209  
SPECCHARS
     14012**DCL     14012--REDEF
TAPE_CLOSE.SN_
     13865**DCL     13865--REDEF
TAPE_CLOSE.UTL_
     13866**DCL     13866--REDEF
TAPE_CLOSE.V.EXPIRE#
     13880**DCL     13880--REDEF
TAPE_CLOSE.V.TYPE#
     13878**DCL     13878--REDEF
TAPE_CLOSE.V.XTNSIZE#
     13875**DCL     13875--REDEF   13877--REDEF
TAPE_DCBLIST$
     13421**DCL     13421--IMP-PTR
TAPE_OPEN.ACSVEH_
     13730**DCL     13731--REDEF
TAPE_OPEN.ALTKEYS_
     13736**DCL     13737--REDEF   13737--REDEF
TAPE_OPEN.HDR_
     13735**DCL     13736--REDEF
TAPE_OPEN.TAB_
     13734**DCL     13735--REDEF
TAPE_OPEN.UHL_
     13728**DCL     13729--REDEF   13729--REDEF
TAPE_OPEN.V.FSN#
     13768**DCL     13768--REDEF   13768--REDEF
TAPE_OPEN.WSN_
     13734**DCL     13734--REDEF
TAPE_READ.STATION_
     13792**DCL     13793--REDEF
TAPE_READ.V.DVBYTE.REREAD#
     13804**DCL     13804--REDEF
TAPE_READ.V.INDX#
     13802**DCL     13802--REDEF
TAPE_WRITE.STATION_
     13830**DCL     13830--REDEF
PL6.E3A0      #009=FLI$NUMFREEGRANS File=FLI$UTIL.:E05TSI                        TUE 07/29/97 16:06 Page:210  
TAPE_WRITE.V.DVBYTE.VFC#
     13837**DCL     13837--REDEF
TVECTOR.W2
     13961**DCL     13962--REDEF
VLP_ACCT
     14767**DCL     14631--DCLINIT
VLP_SN
     14539**DCL     14626--DCLINIT
VLP_SN.SN#
     14539**DCL     14789<<ASSIGN  14795>>IF
VOLGRAN
     14463**DCL     14806<<ASSIGN  14819--ASSIGN  14820<<ASSIGN  14820>>ASSIGN  14831--ASSIGN  14832<<ASSIGN
     14832>>ASSIGN  14843>>ASSIGN
XTN$
     14464**DCL     14523--IMP-PTR 14815<<ASSIGN  14816>>DOWHILE 14817>>IF      14817>>IF      14819>>ASSIGN
     14821>>DOINDEX 14822>>ASSIGN  14822>>ASSIGN  14831>>ASSIGN  14833<<ASSIGN  14833>>ASSIGN  14833>>ASSIGN
     14836<<ASSIGN
XTNDIST
     14459**DCL     14798<<ASSIGN  14829<<ASSIGN  14829>>ASSIGN
