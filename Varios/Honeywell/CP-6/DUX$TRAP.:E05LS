VERSION E05

PL6.E3A0      #001=DUX$TRAP File=DUX$TRAP.:E05TSI                                TUE 07/29/97 15:04 Page:1    
        1        1        /*M*     DUX$TRAP ENTRY FOR M$TRAP CALL FROM DUA$DELTA */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        %SET LISTSUB='1'B;
        9        9        /*P* NAME: DUX$TRAP
       10       10             PURPOSE: RECIEVER FOR ALL TRAPS IN DELTA.
       11       11             DESCRIPTION:  IF DELTA WAS PERFORMING AN ACCESS FOR THE
       12       12                  USER, CLEAR THE STACK AND UNWIND TO THE ACCESS ROUTINE.
       13       13                  IF NOT, THE FAULT IS A DELTA BUG.  CALL DUR$ECCRPT TO TELL
       14       14                  US WHY.  IF WE ARE IN THE DO_SCAN PHASE, UNWIND TO SCAN_COMMAND
       15       15                  IN DUA$DELTA, OTHERWISE CRY FOR HELP AND ABORT. */
       16       16        DUX$TRAP: PROC;
       17       17    1   DCL SWITCH CHAR(4) BASED;
       18       18        %INCLUDE XUH_MACRO_C;
       19      102        %INCLUDE DD_SD_M;
       20     1438        %S_D;
       21     2756        %INCLUDE CP_6;
       22     2837    1   DCL B$JIT$ PTR SYMREF;
       23     2838    1   DCL B$TCB$ PTR SYMREF;
       24     2839        %B$TCB;
       25     2842        %B$EXCFR;
       26     2860        %SUB_EXC;
       27     2907        %INCLUDE B$JIT;
       28     3197        %INCLUDE DU_SCODE_C;
       29     3210        %INCLUDE IR_DATA_M;
       30     3374        %FPT_SCREECH (FPTN=SNAP_FPT, STCLASS=CONSTANT);
       31     3388        %VLP_SCODE (FPTN=SC_TRAPDS, STCLASS=CONSTANT SYMDEF, FCG=DU, MID=X,
       32     3389               MON=NO, CODE=%S$DUTRAPDS, SEV=SEV_SNAP, CUSR=YES, ROSEG=YES,
       33     3390               ISEG=YES, DDSEG=YES, DBSEG=YES, ASLSEG=YES);
       34     3451        %VLP_SCODE (FPTN=SC_TRAP, STCLASS=CONSTANT SYMDEF, FCG=DU, MID=X,
       35     3452               MON=NO, CODE=%S$DUTRAP, SEV=SEV_SNAP, CUSR=YES, ROSEG=YES,
       36     3453               ISEG=YES, DDSEG=YES, DBSEG=YES, ASLSEG=YES);
       37     3514        %RV_DFNAME (NAME=DUMP_FILE_NAME,
PL6.E3A0      #001=DUX$TRAP File=DUX$TRAP.:E05TSI                                TUE 07/29/97 15:04 Page:2    
       38     3515                    STCLASS=AUTO);
       39     3519        %FPT_SCREECH (FPTN=FPT_SCREECH,
       40     3520                      STCLASS=AUTO);
       41     3534        %FPT_TRTN (STCLASS=AUTO);
       42     3551        %FPT_TRTN (FPTN=TRTN_FPT, STCLASS=CONSTANT);
       43     3568        %VLP_REGS (STCLASS=AUTO);
       44     3583        %VLP_DRS (STCLASS=AUTO);
       45     3598    1   DCL DDQ$WRITE ENTRY(2);
       46     3599    1   DCL DUD$MINITRAP ENTRY(1);
       47     3600    1   DCL DDR$MOVE ENTRY(4) ALTRET;
       48     3601    1   DCL REM UBIN;
       49     3602    1   DCL OUT$ PTR;
       50     3603    1   DCL MSG_LENGTH UBIN;
       51     3604    1   DCL DUR$ECCRPT ENTRY(1);
       52     3605    1   DCL X66_TRTN ENTRY(1);
       53     3606    1        FPT_SCREECH = SNAP_FPT;
       54     3607    1        FPT_SCREECH.SCREECHID_ = VECTOR(DUMP_FILE_NAME);
       55     3608    1        REM = LENGTHC(S_D.OUTPUT);
       56     3609    1        OUT$ = ADDR(S_D.OUTPUT);
       57     3610    1        S_D.USVFC = '1'B;                  /* Asynchronous entry */
       58     3611    1        IF S_D.DEBUG OR ADDR(B$JIT$->B$JIT.SWITCH(0))->SWITCH = 'TST1'
       59     3612    2               THEN DO;
       60     3613    2               FPT_TRTN = TRTN_FPT;
       61     3614    2               FPT_TRTN.V_ = VECTOR(FPT_TRTN.V);
       62     3615    2        FPT_TRTN.REGS_ = VECTOR(VLP_REGS);
       63     3616    2        FPT_TRTN.DRS_ = VECTOR(VLP_DRS);
       64     3617    2        VLP_REGS = B$TCB$->B$TCB.STK$->B$EXCFR.REGS;
       65     3618    2        VLP_DRS = B$TCB$->B$TCB.STK$->B$EXCFR.PRS;
       66     3619    2        FPT_TRTN.V.IC# = B$TCB$->B$TCB.STK$->B$EXCFR.IC;
       67     3620    2        FPT_TRTN.V.IR# = B$TCB$->B$TCB.STK$->B$EXCFR.IR;
       68     3621    2        CALL DUD$MINITRAP (FPT_TRTN);
       69     3622    2        S_D.PROMPT_SIZE = 0;               /* Reset current prompt */
       70     3623    2        CALL X66_TRTN (FPT_TRTN);
       71     3624    2   END;
       72     3625    1        IF S_D.ACCESS                      /* Access in progress */
       73     3626    2        THEN DO;
       74     3627    2             IF B$TCB$->B$TCB.STK$->B$EXCFR.ECC = %ECC_ERROR#
PL6.E3A0      #001=DUX$TRAP File=DUX$TRAP.:E05TSI                                TUE 07/29/97 15:04 Page:3    
       75     3628    2               AND B$TCB$->B$TCB.STK$->B$EXCFR.SUBC = %SUBC_IPR#
       76     3629    2             THEN S_D.IPRFLT = '1'B;
       77     3630    2             ELSE S_D.IPRFLT = '0'B;
       78     3631    2             CALL M$CLRSTK;                /* Take this frame off our tcb */
       79     3632    2             UNWIND TO S_D.REM_ACCESS;     /* Sneak back to the access */
       80     3633    2           END;
       81     3634    1        CALL DUR$ECCRPT(1);           /* Print the fault codes as delta fault */
       82     3635    2        IF S_D.DO_SCAN THEN DO;
       83     3636        /*S* SCREECH_CODE: DUX-S$DUTRAPDS
       84     3637             TYPE: SNAP
       85     3638             MESSAGE: DELTA trapped during DO-SCAN phase
       86     3639             REMARKS: This trap is ignored, i.e., we unwind back into DDA$DELTA
       87     3640                      even though out internal tables could have been clobbered.
       88     3641                      The assumption is that someone forgot to set S_D.ACCESS
       89     3642                      and that's why we trapped. Hopefully, this SCREECH dump
       90     3643                      will allow us to find and correct the problem. */
       91     3644    2             FPT_SCREECH.SCODE_ = VECTOR( SC_TRAPDS );
       92     3645    2             CALL M$SCREECH(FPT_SCREECH) ALTRET(CLRSTK);
       93     3646    2             CALL OUTPUT_DUMPFILE;
       94     3647    2   CLRSTK:   CALL M$CLRSTK;
       95     3648    2             UNWIND TO S_D.REM_DO_SCAN;
       96     3649    2           END;
       97     3650        /*S* SCREECH_CODE: DUX-S$DUTRAP
       98     3651             TYPE: SNAP
       99     3652             MESSAGE: Unknown reason for trap in DELTA
      100     3653             REMARKS: Just before DELTA does an M$XXX in its M$TRAP control
      101     3654                      routine, it issues an M$SCREECH so that a snap dump is
      102     3655                      is taken. */
      103     3656    1        FPT_SCREECH.SCODE_ = VECTOR( SC_TRAP );
      104     3657    1        CALL M$SCREECH(FPT_SCREECH) ALTRET(MSG);
      105     3658    1        CALL OUTPUT_DUMPFILE;
      106     3659    1   MSG: S_D.SNAP_TAKEN = '1'B;
      107     3660    1        S_D.OUTPUT='DELTA FAULT WAS NOT IN DO_SCAN RANGE -- HELP!';
      108     3661    1        CALL DDQ$WRITE(ADDR(S_D.OUTPUT),45);
      109     3662    1        CALL M$XXX;                   /* Let someone else print error messages */
      110     3663        %EJECT;
PL6.E3A0      #001=DUX$TRAP File=DUX$TRAP.:E05TSI                                TUE 07/29/97 15:04 Page:4    
      111     3664    1   OUTPUT_DUMPFILE: PROC;
      112     3665    2        CALL DDR$MOVE ( '*** ', LENGTHC('*** '), OUT$, REM);
      113     3666    2        MSG_LENGTH = DUMP_FILE_NAME.L;
      114     3667    2        CALL DDR$MOVE ( DUMP_FILE_NAME.N1, MSG_LENGTH, OUT$, REM);
      115     3668    2        CALL DDR$MOVE ( ' is M$SCREECH dump file ID.',
      116     3669    2          LENGTHC(' is M$SCREECH dump file ID.'), OUT$,REM);
      117     3670    2        MSG_LENGTH = POFFC(OUT$, ADDR(S_D.OUTPUT) );
      118     3671    2        CALL DDQ$WRITE (ADDR(S_D.OUTPUT), MSG_LENGTH);
      119     3672    2   END OUTPUT_DUMPFILE;
      120     3673    1        END DUX$TRAP;
      121     3674
      122     3675

PL6.E3A0      #001=DUX$TRAP File=DUX$TRAP.:E05TSI                                TUE 07/29/97 15:04 Page:5    
--  Include file information  --

   IR_DATA_M.:E05TOU  is referenced.
   DU_SCODE_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure DUX$TRAP.

   Procedure DUX$TRAP requires 201 words for executable code.
   Procedure DUX$TRAP requires 50 words of local(AUTO) storage.

    No errors detected in file DUX$TRAP.:E05TSI    .

PL6.E3A0      #001=DUX$TRAP File=DUX$TRAP.:E05TSI                                TUE 07/29/97 15:04 Page:6    

 Object Unit name= DUX$TRAP                                   File name= DUX$TRAP.:E05TOU
 UTS= JUL 29 '97 15:04:19.12 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS     39     47  DUX$TRAP
    2   Proc  even  none   201    311  DUX$TRAP
    3  RoData even  none    16     20  DUX$TRAP

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        0  DUX$TRAP

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    1      6  SC_TRAPDS                          1     10  SC_TRAP
PL6.E3A0      #001=DUX$TRAP File=DUX$TRAP.:E05TSI                                TUE 07/29/97 15:04 Page:7    

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 DUD$MINITRAP
         yes           Std       1 X66_TRTN
         yes           Std       1 DUR$ECCRPT
         yes           Std       2 DDQ$WRITE
 yes     yes           Std       4 DDR$MOVE
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUNWIND
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    S_D$                                  M$UC                                  B$JIT$
     B$TCB$                                B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=DUX$TRAP File=DUX$TRAP.:E05TSI                                TUE 07/29/97 15:04 Page:8    


        1        1        /*M*     DUX$TRAP ENTRY FOR M$TRAP CALL FROM DUA$DELTA */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        %SET LISTSUB='1'B;
        9        9        /*P* NAME: DUX$TRAP
       10       10             PURPOSE: RECIEVER FOR ALL TRAPS IN DELTA.
       11       11             DESCRIPTION:  IF DELTA WAS PERFORMING AN ACCESS FOR THE
       12       12                  USER, CLEAR THE STACK AND UNWIND TO THE ACCESS ROUTINE.
       13       13                  IF NOT, THE FAULT IS A DELTA BUG.  CALL DUR$ECCRPT TO TELL
       14       14                  US WHY.  IF WE ARE IN THE DO_SCAN PHASE, UNWIND TO SCAN_COMMAND
       15       15                  IN DUA$DELTA, OTHERWISE CRY FOR HELP AND ABORT. */
       16       16        DUX$TRAP: PROC;

     16  2 000000   000000 700200 xent  DUX$TRAP     TSX0  ! X66_AUTO_0
         2 000001   000062 000000                    ZERO    50,0

       17       17    1   DCL SWITCH CHAR(4) BASED;
       18       18        %INCLUDE XUH_MACRO_C;
       19      102        %INCLUDE DD_SD_M;
       20     1438        %S_D;
       21     2756        %INCLUDE CP_6;
       22     2837    1   DCL B$JIT$ PTR SYMREF;
       23     2838    1   DCL B$TCB$ PTR SYMREF;
       24     2839        %B$TCB;
       25     2842        %B$EXCFR;
       26     2860        %SUB_EXC;
       27     2907        %INCLUDE B$JIT;
       28     3197        %INCLUDE DU_SCODE_C;
       29     3210        %INCLUDE IR_DATA_M;
       30     3374        %FPT_SCREECH (FPTN=SNAP_FPT, STCLASS=CONSTANT);
       31     3388        %VLP_SCODE (FPTN=SC_TRAPDS, STCLASS=CONSTANT SYMDEF, FCG=DU, MID=X,
       32     3389               MON=NO, CODE=%S$DUTRAPDS, SEV=SEV_SNAP, CUSR=YES, ROSEG=YES,
PL6.E3A0      #001=DUX$TRAP File=DUX$TRAP.:E05TSI                                TUE 07/29/97 15:04 Page:9    
       33     3390               ISEG=YES, DDSEG=YES, DBSEG=YES, ASLSEG=YES);
       34     3451        %VLP_SCODE (FPTN=SC_TRAP, STCLASS=CONSTANT SYMDEF, FCG=DU, MID=X,
       35     3452               MON=NO, CODE=%S$DUTRAP, SEV=SEV_SNAP, CUSR=YES, ROSEG=YES,
       36     3453               ISEG=YES, DDSEG=YES, DBSEG=YES, ASLSEG=YES);
       37     3514        %RV_DFNAME (NAME=DUMP_FILE_NAME,
       38     3515                    STCLASS=AUTO);
       39     3519        %FPT_SCREECH (FPTN=FPT_SCREECH,
       40     3520                      STCLASS=AUTO);
       41     3534        %FPT_TRTN (STCLASS=AUTO);
       42     3551        %FPT_TRTN (FPTN=TRTN_FPT, STCLASS=CONSTANT);
       43     3568        %VLP_REGS (STCLASS=AUTO);
       44     3583        %VLP_DRS (STCLASS=AUTO);
       45     3598    1   DCL DDQ$WRITE ENTRY(2);
       46     3599    1   DCL DUD$MINITRAP ENTRY(1);
       47     3600    1   DCL DDR$MOVE ENTRY(4) ALTRET;
       48     3601    1   DCL REM UBIN;
       49     3602    1   DCL OUT$ PTR;
       50     3603    1   DCL MSG_LENGTH UBIN;
       51     3604    1   DCL DUR$ECCRPT ENTRY(1);
       52     3605    1   DCL X66_TRTN ENTRY(1);
       53     3606    1        FPT_SCREECH = SNAP_FPT;

   3606  2 000002   000100 100400                    MLR     fill='000'O
         2 000003   000000 000030 1                  ADSC9   SNAP_FPT                 cn=0,n=24
         2 000004   200010 000030                    ADSC9   FPT_SCREECH,,AUTO        cn=0,n=24

       54     3607    1        FPT_SCREECH.SCREECHID_ = VECTOR(DUMP_FILE_NAME);

   3607  2 000005   000000 235000 3                  LDA     0
         2 000006   200054 452500                    STP2    MSG_LENGTH+4,,AUTO
         2 000007   200054 236100                    LDQ     MSG_LENGTH+4,,AUTO
         2 000010   000004 036003                    ADLQ    4,DU
         2 000011   200014 757100                    STAQ    FPT_SCREECH+4,,AUTO

       55     3608    1        REM = LENGTHC(S_D.OUTPUT);

   3608  2 000012   004000 235007                    LDA     2048,DL
PL6.E3A0      #001=DUX$TRAP File=DUX$TRAP.:E05TSI                                TUE 07/29/97 15:04 Page:10   
         2 000013   200046 755100                    STA     REM,,AUTO

       56     3609    1        OUT$ = ADDR(S_D.OUTPUT);

   3609  2 000014   000000 236000 xsym               LDQ     S_D$
         2 000015   005335 036003                    ADLQ    2781,DU
         2 000016   200047 756100                    STQ     OUT$,,AUTO

       57     3610    1        S_D.USVFC = '1'B;                  /* Asynchronous entry */

   3610  2 000017   400000 236003                    LDQ     -131072,DU
         2 000020   000000 470400 xsym               LDP0    S_D$
         2 000021   005144 756100                    STQ     2660,,PR0

       58     3611    1        IF S_D.DEBUG OR ADDR(B$JIT$->B$JIT.SWITCH(0))->SWITCH = 'TST1'

   3611  2 000022   004732 234100                    SZN     2522,,PR0
         2 000023   000030 604000 2                  TMI     s:3613
         2 000024   000000 471400 xsym               LDP1    B$JIT$
         2 000025   100031 236100                    LDQ     25,,PR1
         2 000026   000022 116000 1                  CMPQ    TRTN_FPT+8
         2 000027   000107 601000 2                  TNZ     s:3625

       59     3612    2               THEN DO;

       60     3613    2               FPT_TRTN = TRTN_FPT;

   3613  2 000030   000100 100400                    MLR     fill='000'O
         2 000031   000012 000040 1                  ADSC9   TRTN_FPT                 cn=0,n=32
         2 000032   200016 000040                    ADSC9   FPT_TRTN,,AUTO           cn=0,n=32

       61     3614    2               FPT_TRTN.V_ = VECTOR(FPT_TRTN.V);

   3614  2 000033   000001 235000 3                  LDA     1
         2 000034   200054 452500                    STP2    MSG_LENGTH+4,,AUTO
         2 000035   200054 236100                    LDQ     MSG_LENGTH+4,,AUTO
         2 000036   000024 036003                    ADLQ    20,DU
PL6.E3A0      #001=DUX$TRAP File=DUX$TRAP.:E05TSI                                TUE 07/29/97 15:04 Page:11   
         2 000037   200022 757100                    STAQ    FPT_TRTN+4,,AUTO

       62     3615    2        FPT_TRTN.REGS_ = VECTOR(VLP_REGS);

   3615  2 000040   000002 235000 3                  LDA     2
         2 000041   200054 452500                    STP2    MSG_LENGTH+4,,AUTO
         2 000042   200054 236100                    LDQ     MSG_LENGTH+4,,AUTO
         2 000043   000026 036003                    ADLQ    22,DU
         2 000044   200016 757100                    STAQ    FPT_TRTN,,AUTO

       63     3616    2        FPT_TRTN.DRS_ = VECTOR(VLP_DRS);

   3616  2 000045   000002 235000 3                  LDA     2
         2 000046   200054 452500                    STP2    MSG_LENGTH+4,,AUTO
         2 000047   200054 236100                    LDQ     MSG_LENGTH+4,,AUTO
         2 000050   000036 036003                    ADLQ    30,DU
         2 000051   200020 757100                    STAQ    FPT_TRTN+2,,AUTO

       64     3617    2        VLP_REGS = B$TCB$->B$TCB.STK$->B$EXCFR.REGS;

   3617  2 000052   000000 471400 xsym               LDP1    B$TCB$
         2 000053   100001 473500                    LDP3    1,,PR1
         2 000054   000100 100500                    MLR     fill='000'O
         2 000055   300050 000034                    ADSC9   40,,PR3                  cn=0,n=28
         2 000056   200026 000034                    ADSC9   VLP_REGS,,AUTO           cn=0,n=28

       65     3618    2        VLP_DRS = B$TCB$->B$TCB.STK$->B$EXCFR.PRS;

   3618  2 000057   100001 473500                    LDP3    1,,PR1
         2 000060   000100 100500                    MLR     fill='000'O
         2 000061   300020 000040                    ADSC9   16,,PR3                  cn=0,n=32
         2 000062   200036 000040                    ADSC9   VLP_DRS,,AUTO            cn=0,n=32

       66     3619    2        FPT_TRTN.V.IC# = B$TCB$->B$TCB.STK$->B$EXCFR.IC;

   3619  2 000063   100001 473500                    LDP3    1,,PR1
         2 000064   300004 220100                    LDX0    4,,PR3
PL6.E3A0      #001=DUX$TRAP File=DUX$TRAP.:E05TSI                                TUE 07/29/97 15:04 Page:12   
         2 000065   200024 740100                    STX0    FPT_TRTN+6,,AUTO

       67     3620    2        FPT_TRTN.V.IR# = B$TCB$->B$TCB.STK$->B$EXCFR.IR;

   3620  2 000066   100001 473500                    LDP3    1,,PR1
         2 000067   300004 721100                    LXL1    4,,PR3
         2 000070   200024 441100                    SXL1    FPT_TRTN+6,,AUTO

       68     3621    2        CALL DUD$MINITRAP (FPT_TRTN);

   3621  2 000071   200016 633500                    EPPR3   FPT_TRTN,,AUTO
         2 000072   200054 453500                    STP3    MSG_LENGTH+4,,AUTO
         2 000073   200054 630500                    EPPR0   MSG_LENGTH+4,,AUTO
         2 000074   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000075   000000 701000 xent               TSX1    DUD$MINITRAP
         2 000076   000000 011000                    NOP     0

       69     3622    2        S_D.PROMPT_SIZE = 0;               /* Reset current prompt */

   3622  2 000077   000000 470400 xsym               LDP0    S_D$
         2 000100   005147 450100                    STZ     2663,,PR0

       70     3623    2        CALL X66_TRTN (FPT_TRTN);

   3623  2 000101   200016 631500                    EPPR1   FPT_TRTN,,AUTO
         2 000102   200054 451500                    STP1    MSG_LENGTH+4,,AUTO
         2 000103   200054 630500                    EPPR0   MSG_LENGTH+4,,AUTO
         2 000104   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000105   000000 701000 xent               TSX1    X66_TRTN
         2 000106   000000 011000                    NOP     0

       71     3624    2   END;

       72     3625    1        IF S_D.ACCESS                      /* Access in progress */

   3625  2 000107   000000 470400 xsym               LDP0    S_D$
         2 000110   000016 234100                    SZN     14,,PR0
PL6.E3A0      #001=DUX$TRAP File=DUX$TRAP.:E05TSI                                TUE 07/29/97 15:04 Page:13   
         2 000111   000134 605000 2                  TPL     s:3634

       73     3626    2        THEN DO;

       74     3627    2             IF B$TCB$->B$TCB.STK$->B$EXCFR.ECC = %ECC_ERROR#

   3627  2 000112   000000 471400 xsym               LDP1    B$TCB$
         2 000113   100001 473500                    LDP3    1,,PR1
         2 000114   300000 720100                    LXL0    0,,PR3
         2 000115   000007 100003                    CMPX0   7,DU
         2 000116   000125 601000 2                  TNZ     s:3630
         2 000117   300100 721100                    LXL1    64,,PR3
         2 000120   000003 101003                    CMPX1   3,DU
         2 000121   000125 601000 2                  TNZ     s:3630

       75     3628    2               AND B$TCB$->B$TCB.STK$->B$EXCFR.SUBC = %SUBC_IPR#
       76     3629    2             THEN S_D.IPRFLT = '1'B;

   3629  2 000122   400000 236003                    LDQ     -131072,DU
         2 000123   005326 756100                    STQ     2774,,PR0
         2 000124   000126 710000 2                  TRA     s:3631

       77     3630    2             ELSE S_D.IPRFLT = '0'B;

   3630  2 000125   005326 450100                    STZ     2774,,PR0

       78     3631    2             CALL M$CLRSTK;                /* Take this frame off our tcb */

   3631  2 000126   010013 713400                    CLIMB   4107
         2 000127   000000 401760                    pmme    nvectors=0

       79     3632    2             UNWIND TO S_D.REM_ACCESS;     /* Sneak back to the access */

   3632  2 000130   000000 470600 xsym               LDP0  ! S_D$
         2 000131   000024 237300                    LDAQ  ! 20,,PR0
         2 000132   000000 700200 xent               TSX0  ! X66_AUNWIND
         2 000133   000000 000200                    ZERO    0,128
PL6.E3A0      #001=DUX$TRAP File=DUX$TRAP.:E05TSI                                TUE 07/29/97 15:04 Page:14   

       80     3633    2           END;
       81     3634    1        CALL DUR$ECCRPT(1);           /* Print the fault codes as delta fault */

   3634  2 000134   000003 630400 3                  EPPR0   3
         2 000135   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000136   000000 701000 xent               TSX1    DUR$ECCRPT
         2 000137   000000 011000                    NOP     0

       82     3635    2        IF S_D.DO_SCAN THEN DO;

   3635  2 000140   000000 470400 xsym               LDP0    S_D$
         2 000141   000017 234100                    SZN     15,,PR0
         2 000142   000161 605000 2                  TPL     s:3656

       83     3636        /*S* SCREECH_CODE: DUX-S$DUTRAPDS
       84     3637             TYPE: SNAP
       85     3638             MESSAGE: DELTA trapped during DO-SCAN phase
       86     3639             REMARKS: This trap is ignored, i.e., we unwind back into DDA$DELTA
       87     3640                      even though out internal tables could have been clobbered.
       88     3641                      The assumption is that someone forgot to set S_D.ACCESS
       89     3642                      and that's why we trapped. Hopefully, this SCREECH dump
       90     3643                      will allow us to find and correct the problem. */
       91     3644    2             FPT_SCREECH.SCODE_ = VECTOR( SC_TRAPDS );

   3644  2 000143   000004 237000 3                  LDAQ    4
         2 000144   200010 757100                    STAQ    FPT_SCREECH,,AUTO

       92     3645    2             CALL M$SCREECH(FPT_SCREECH) ALTRET(CLRSTK);

   3645  2 000145   200010 630500                    EPPR0   FPT_SCREECH,,AUTO
         2 000146   400013 713400                    CLIMB   alt,+11
         2 000147   401000 401760                    pmme    nvectors=3
         2 000150   000153 702000 2                  TSX2    CLRSTK

       93     3646    2             CALL OUTPUT_DUMPFILE;

PL6.E3A0      #001=DUX$TRAP File=DUX$TRAP.:E05TSI                                TUE 07/29/97 15:04 Page:15   
   3646  2 000151   000215 701000 2                  TSX1    OUTPUT_DUMPFILE
         2 000152   000000 011000                    NOP     0

       94     3647    2   CLRSTK:   CALL M$CLRSTK;

   3647  2 000153   010013 713400       CLRSTK       CLIMB   4107
         2 000154   000000 401760                    pmme    nvectors=0

       95     3648    2             UNWIND TO S_D.REM_DO_SCAN;

   3648  2 000155   000000 470600 xsym               LDP0  ! S_D$
         2 000156   000022 237300                    LDAQ  ! 18,,PR0
         2 000157   000000 700200 xent               TSX0  ! X66_AUNWIND
         2 000160   000000 000200                    ZERO    0,128

       96     3649    2           END;
       97     3650        /*S* SCREECH_CODE: DUX-S$DUTRAP
       98     3651             TYPE: SNAP
       99     3652             MESSAGE: Unknown reason for trap in DELTA
      100     3653             REMARKS: Just before DELTA does an M$XXX in its M$TRAP control
      101     3654                      routine, it issues an M$SCREECH so that a snap dump is
      102     3655                      is taken. */
      103     3656    1        FPT_SCREECH.SCODE_ = VECTOR( SC_TRAP );

   3656  2 000161   000006 237000 3                  LDAQ    6
         2 000162   200010 757100                    STAQ    FPT_SCREECH,,AUTO

      104     3657    1        CALL M$SCREECH(FPT_SCREECH) ALTRET(MSG);

   3657  2 000163   200010 630500                    EPPR0   FPT_SCREECH,,AUTO
         2 000164   400013 713400                    CLIMB   alt,+11
         2 000165   401000 401760                    pmme    nvectors=3
         2 000166   000171 702000 2                  TSX2    MSG

      105     3658    1        CALL OUTPUT_DUMPFILE;

   3658  2 000167   000215 701000 2                  TSX1    OUTPUT_DUMPFILE
PL6.E3A0      #001=DUX$TRAP File=DUX$TRAP.:E05TSI                                TUE 07/29/97 15:04 Page:16   
         2 000170   000000 011000                    NOP     0

      106     3659    1   MSG: S_D.SNAP_TAKEN = '1'B;

   3659  2 000171   400000 236003       MSG          LDQ     -131072,DU
         2 000172   000000 470400 xsym               LDP0    S_D$
         2 000173   004673 756100                    STQ     2491,,PR0

      107     3660    1        S_D.OUTPUT='DELTA FAULT WAS NOT IN DO_SCAN RANGE -- HELP!';

   3660  2 000174   040100 100400                    MLR     fill='040'O
         2 000175   000023 000055 1                  ADSC9   TRTN_FPT+9               cn=0,n=45
         2 000176   005335 004000                    ADSC9   2781,,PR0                cn=0,n=2048

      108     3661    1        CALL DDQ$WRITE(ADDR(S_D.OUTPUT),45);

   3661  2 000177   000000 236000 xsym               LDQ     S_D$
         2 000200   005335 036003                    ADLQ    2781,DU
         2 000201   200054 756100                    STQ     MSG_LENGTH+4,,AUTO
         2 000202   000011 236000 3                  LDQ     9
         2 000203   200057 756100                    STQ     MSG_LENGTH+7,,AUTO
         2 000204   200054 631500                    EPPR1   MSG_LENGTH+4,,AUTO
         2 000205   200056 451500                    STP1    MSG_LENGTH+6,,AUTO
         2 000206   200056 630500                    EPPR0   MSG_LENGTH+6,,AUTO
         2 000207   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000210   000000 701000 xent               TSX1    DDQ$WRITE
         2 000211   000000 011000                    NOP     0

      109     3662    1        CALL M$XXX;                   /* Let someone else print error messages */

   3662  2 000212   000003 713400                    CLIMB   3
         2 000213   000000 401760                    pmme    nvectors=0
         2 000214   000310 710000 2                  TRA     s:3673

      110     3663        %EJECT;
PL6.E3A0      #001=DUX$TRAP File=DUX$TRAP.:E05TSI                                TUE 07/29/97 15:04 Page:17   
      111     3664    1   OUTPUT_DUMPFILE: PROC;

   3664  2 000215   200052 741300       OUTPUT_DUMP* STX1  ! MSG_LENGTH+2,,AUTO

      112     3665    2        CALL DDR$MOVE ( '*** ', LENGTHC('*** '), OUT$, REM);

   3665  2 000216   200046 630500                    EPPR0   REM,,AUTO
         2 000217   200057 450500                    STP0    MSG_LENGTH+7,,AUTO
         2 000220   200047 631500                    EPPR1   OUT$,,AUTO
         2 000221   200056 451500                    STP1    MSG_LENGTH+6,,AUTO
         2 000222   000012 237000 3                  LDAQ    10
         2 000223   200054 757100                    STAQ    MSG_LENGTH+4,,AUTO
         2 000224   200054 630500                    EPPR0   MSG_LENGTH+4,,AUTO
         2 000225   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 000226   000000 701000 xent               TSX1    DDR$MOVE
         2 000227   000000 011000                    NOP     0

      113     3666    2        MSG_LENGTH = DUMP_FILE_NAME.L;

   3666  2 000230   200004 236100                    LDQ     DUMP_FILE_NAME,,AUTO
         2 000231   000033 772000                    QRL     27
         2 000232   200050 756100                    STQ     MSG_LENGTH,,AUTO

      114     3667    2        CALL DDR$MOVE ( DUMP_FILE_NAME.N1, MSG_LENGTH, OUT$, REM);

   3667  2 000233   200046 630500                    EPPR0   REM,,AUTO
         2 000234   200057 450500                    STP0    MSG_LENGTH+7,,AUTO
         2 000235   200047 631500                    EPPR1   OUT$,,AUTO
         2 000236   200056 451500                    STP1    MSG_LENGTH+6,,AUTO
         2 000237   200050 633500                    EPPR3   MSG_LENGTH,,AUTO
         2 000240   200055 453500                    STP3    MSG_LENGTH+5,,AUTO
         2 000241   200060 452500                    STP2    MSG_LENGTH+8,,AUTO
         2 000242   200060 236100                    LDQ     MSG_LENGTH+8,,AUTO
         2 000243   000014 036000 3                  ADLQ    12
         2 000244   200054 756100                    STQ     MSG_LENGTH+4,,AUTO
         2 000245   200054 630500                    EPPR0   MSG_LENGTH+4,,AUTO
         2 000246   000022 631400 xsym               EPPR1   B_VECTNIL+18
PL6.E3A0      #001=DUX$TRAP File=DUX$TRAP.:E05TSI                                TUE 07/29/97 15:04 Page:18   
         2 000247   000000 701000 xent               TSX1    DDR$MOVE
         2 000250   000000 011000                    NOP     0

      115     3668    2        CALL DDR$MOVE ( ' is M$SCREECH dump file ID.',

   3668  2 000251   200046 630500                    EPPR0   REM,,AUTO
         2 000252   200057 450500                    STP0    MSG_LENGTH+7,,AUTO
         2 000253   200047 631500                    EPPR1   OUT$,,AUTO
         2 000254   200056 451500                    STP1    MSG_LENGTH+6,,AUTO
         2 000255   000016 237000 3                  LDAQ    14
         2 000256   200054 757100                    STAQ    MSG_LENGTH+4,,AUTO
         2 000257   200054 630500                    EPPR0   MSG_LENGTH+4,,AUTO
         2 000260   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 000261   000000 701000 xent               TSX1    DDR$MOVE
         2 000262   000000 011000                    NOP     0

      116     3669    2          LENGTHC(' is M$SCREECH dump file ID.'), OUT$,REM);
      117     3670    2        MSG_LENGTH = POFFC(OUT$, ADDR(S_D.OUTPUT) );

   3670  2 000263   000000 236000 xsym               LDQ     S_D$
         2 000264   005335 036003                    ADLQ    2781,DU
         2 000265   000020 772000                    QRL     16
         2 000266   200054 756100                    STQ     MSG_LENGTH+4,,AUTO
         2 000267   200047 236100                    LDQ     OUT$,,AUTO
         2 000270   000020 772000                    QRL     16
         2 000271   200054 136100                    SBLQ    MSG_LENGTH+4,,AUTO
         2 000272   200050 756100                    STQ     MSG_LENGTH,,AUTO

      118     3671    2        CALL DDQ$WRITE (ADDR(S_D.OUTPUT), MSG_LENGTH);

   3671  2 000273   000000 236000 xsym               LDQ     S_D$
         2 000274   005335 036003                    ADLQ    2781,DU
         2 000275   200054 756100                    STQ     MSG_LENGTH+4,,AUTO
         2 000276   200050 630500                    EPPR0   MSG_LENGTH,,AUTO
         2 000277   200057 450500                    STP0    MSG_LENGTH+7,,AUTO
         2 000300   200054 631500                    EPPR1   MSG_LENGTH+4,,AUTO
         2 000301   200056 451500                    STP1    MSG_LENGTH+6,,AUTO
PL6.E3A0      #001=DUX$TRAP File=DUX$TRAP.:E05TSI                                TUE 07/29/97 15:04 Page:19   
         2 000302   200056 630500                    EPPR0   MSG_LENGTH+6,,AUTO
         2 000303   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000304   000000 701000 xent               TSX1    DDQ$WRITE
         2 000305   000000 011000                    NOP     0

      119     3672    2   END OUTPUT_DUMPFILE;

   3672  2 000306   200052 221300                    LDX1  ! MSG_LENGTH+2,,AUTO
         2 000307   000001 702211                    TSX2  ! 1,X1

      120     3673    1        END DUX$TRAP;

   3673  2 000310   000000 702200 xent               TSX2  ! X66_ARET

SNAP_FPT
 Sect OctLoc
   1     000   000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     004   000000 177640   000000 006014                                    ........

SC_TRAPDS
 Sect OctLoc
   1     006   042530 013275   000000 101740                                    ".....A.

SC_TRAP
 Sect OctLoc
   1     010   042530 013305   000000 101740                                    ".....A.

TRTN_FPT
 Sect OctLoc
   1     012   000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     016   000001 777640   000020 006000   000000 000000   000000 000000    ................

(unnamed)
 Sect OctLoc
   1     022   124123 124061   104105 114124   101040 106101   125114 124040    TST1DELTA FAULT
   1     026   127101 123040   116117 124040   111116 040104   117137 123103    WAS NOT IN DO_SC
   1     032   101116 040122   101116 107105   040055 055040   110105 114120    AN RANGE -- HELP
PL6.E3A0      #001=DUX$TRAP File=DUX$TRAP.:E05TSI                                TUE 07/29/97 15:04 Page:20   
   1     036   041040 040040   052052 052040   040151 163040   115044 123103    !   ***  is M$SC
   1     042   122105 105103   110040 144165   155160 040146   151154 145040    REECH dump file
   1     046   111104 056040                                                    ID.

(unnamed)
 Sect OctLoc
   3     000   000003 777640   000001 777640   000007 777640   000003 006000    ................
   3     004   000001 777640   000006 006000   000001 777640   000010 006000    ................
   3     010   000000 000055   000010 006000   000037 006000   000006 006000    ...-............
   3     014   000004 200000   000000 000033   000040 006000   000015 006000    ......... ......
      121     3674
      122     3675

PL6.E3A0      #001=DUX$TRAP File=DUX$TRAP.:E05TSI                                TUE 07/29/97 15:04 Page:21   
--  Include file information  --

   IR_DATA_M.:E05TOU  is referenced.
   DU_SCODE_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure DUX$TRAP.

   Procedure DUX$TRAP requires 201 words for executable code.
   Procedure DUX$TRAP requires 50 words of local(AUTO) storage.

    No errors detected in file DUX$TRAP.:E05TSI    .
PL6.E3A0      #001=DUX$TRAP File=DUX$TRAP.:E05TSI                                TUE 07/29/97 15:04 Page:22   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DUX$TRAP File=DUX$TRAP.:E05TSI                                TUE 07/29/97 15:04 Page:23   
          MINI XREF LISTING

B$EXCFR.ASL
      2843**DCL      2843--REDEF
B$EXCFR.ECC
      2843**DCL      3627>>IF
B$EXCFR.ERR.ERR#
      2857**DCL      2857--REDEF
B$EXCFR.EVID
      2856**DCL      2856--REDEF    2857--REDEF
B$EXCFR.IC
      2844**DCL      3619>>ASSIGN
B$EXCFR.IR
      2844**DCL      2844--REDEF    3620>>ASSIGN
B$EXCFR.PREVSZ
      2843**DCL      2843--REDEF
B$EXCFR.PRS
      2854**DCL      3618>>ASSIGN
B$EXCFR.REGS
      2854**DCL      3617>>ASSIGN
B$EXCFR.SUBC
      2855**DCL      2855--REDEF    2856--REDEF    2856--REDEF    3627>>IF
B$JIT.CPFLAGS1.SLEAZE
      3015**DCL      3015--REDEF
B$JIT.ERR.MID
      2922**DCL      2922--REDEF
B$JIT.JRESPEAK
      3083**DCL      3084--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
      3192**DCL      3192--REDEF    3193--REDEF
B$JIT.PNR
      3096**DCL      3096--REDEF
B$JIT.SWITCH
      3009**DCL      3611--IF
PL6.E3A0      #001=DUX$TRAP File=DUX$TRAP.:E05TSI                                TUE 07/29/97 15:04 Page:24   
B$JIT.TSLINE
      3190**DCL      3191--REDEF
B$JIT$
      2837**DCL      2916--IMP-PTR  3611>>IF
B$TCB.STK$
      2840**DCL      3617>>ASSIGN   3618>>ASSIGN   3619>>ASSIGN   3620>>ASSIGN   3627>>IF       3627>>IF
B$TCB$
      2838**DCL      3617>>ASSIGN   3618>>ASSIGN   3619>>ASSIGN   3620>>ASSIGN   3627>>IF       3627>>IF
CLRSTK
      3647**LABEL    3645--CALLALT
DDQ$WRITE
      3598**DCL-ENT  3661--CALL     3671--CALL
DDR$MOVE
      3600**DCL-ENT  3665--CALL     3667--CALL     3668--CALL
DUD$MINITRAP
      3599**DCL-ENT  3621--CALL
DUMP_FILE_NAME
      3516**DCL      3607--ASSIGN
DUMP_FILE_NAME.L
      3516**DCL      3666>>ASSIGN
DUMP_FILE_NAME.MONID
      3516**DCL      3516--REDEF
DUMP_FILE_NAME.N1
      3516**DCL      3667<>CALL
DUR$ECCRPT
      3604**DCL-ENT  3634--CALL
FPT_SCREECH
      3531**DCL      3606<<ASSIGN   3645<>CALL     3657<>CALL
FPT_SCREECH.SCODE_
      3531**DCL      3644<<ASSIGN   3656<<ASSIGN
FPT_SCREECH.SCREECHID_
      3532**DCL      3607<<ASSIGN
FPT_TRTN
      3545**DCL      3613<<ASSIGN   3621<>CALL     3623<>CALL
FPT_TRTN.DRS_
      3545**DCL      3616<<ASSIGN
PL6.E3A0      #001=DUX$TRAP File=DUX$TRAP.:E05TSI                                TUE 07/29/97 15:04 Page:25   
FPT_TRTN.REGS_
      3545**DCL      3615<<ASSIGN
FPT_TRTN.V
      3546**DCL      3614--ASSIGN
FPT_TRTN.V.IC#
      3546**DCL      3619<<ASSIGN
FPT_TRTN.V.IR#
      3546**DCL      3547--REDEF    3620<<ASSIGN
FPT_TRTN.V_
      3545**DCL      3614<<ASSIGN
M$CLRSTK
      2823**DCL-ENT  3631--CALL     3647--CALL
M$SCREECH
      2779**DCL-ENT  3645--CALL     3657--CALL
M$XXX
      2777**DCL-ENT  3662--CALL
MSG
      3659**LABEL    3657--CALLALT
MSG_LENGTH
      3603**DCL      3666<<ASSIGN   3667<>CALL     3670<<ASSIGN   3671<>CALL
OUT$
      3602**DCL      3609<<ASSIGN   3665<>CALL     3667<>CALL     3668<>CALL     3670>>ASSIGN
OUTPUT_DUMPFILE
      3664**PROC     3646--CALL     3658--CALL
REM
      3601**DCL      3608<<ASSIGN   3665<>CALL     3667<>CALL     3668<>CALL
SC_TRAP
      3468**DCL      3656--ASSIGN
SC_TRAPDS
      3405**DCL      3644--ASSIGN
SNAP_FPT
      3385**DCL      3606>>ASSIGN
SWITCH
        17**DCL      3611>>IF
S_D.ACCESS
      1477**DCL      3625>>IF
PL6.E3A0      #001=DUX$TRAP File=DUX$TRAP.:E05TSI                                TUE 07/29/97 15:04 Page:26   
S_D.CURRENT_CHANNEL
      2390**DCL      2392--REDEF
S_D.DEBUG
      2045**DCL      3611>>IF
S_D.DEBUGA
      1542**DCL      1544--REDEF
S_D.DO_SCAN
      1479**DCL      3635>>IF
S_D.EIS
      2500**DCL      2529--REDEF
S_D.HOST_MESSAGE_BUF_REMOTE
      2433**DCL      2434--REDEF    2448--REDEF
S_D.IPRFLT
      2403**DCL      3629<<ASSIGN   3630<<ASSIGN
S_D.JDE
      2047**DCL      2048--REDEF
S_D.L$.VALUE
      1600**DCL      1606--REDEF    1614--REDEF    1617--REDEF    1620--REDEF    1623--REDEF
S_D.L$.VALUE.L
      1601**DCL      1602--REDEF    1603--REDEF
S_D.L6_MESSAGE_BUF
      2454**DCL      2456--REDEF
S_D.OUTPUT
      2420**DCL      2422--REDEF    3608--ASSIGN   3609--ASSIGN   3660<<ASSIGN   3661--CALL     3670--ASSIGN
      3671--CALL
S_D.PROMPT_SIZE
      2216**DCL      3622<<ASSIGN
S_D.REMOTE_MSG.FNCC
      2439**DCL      2440--REDEF
S_D.REMOTE_MSG.STXC
      2435**DCL      2436--REDEF
S_D.REMOTE_MSG.SUBFNCC
      2443**DCL      2444--REDEF
S_D.REM_ACCESS
      1485**DCL      3632>>UNWIND
S_D.REM_DO_SCAN
PL6.E3A0      #001=DUX$TRAP File=DUX$TRAP.:E05TSI                                TUE 07/29/97 15:04 Page:27   
      1483**DCL      3648>>UNWIND
S_D.SNAP_TAKEN
      1974**DCL      3659<<ASSIGN
S_D.SV
      1499**DCL      1520--REDEF
S_D.USVFC
      2210**DCL      3610<<ASSIGN
S_D$
      2751**DCL      1447--IMP-PTR  3609>>ASSIGN   3610>>ASSIGN   3611>>IF       3622>>ASSIGN   3625>>IF
      3629>>ASSIGN   3630>>ASSIGN   3632>>UNWIND   3635>>IF       3648>>UNWIND   3659>>ASSIGN   3660>>ASSIGN
      3661>>CALL     3670>>ASSIGN   3671>>CALL
TRTN_FPT
      3562**DCL      3613>>ASSIGN
TRTN_FPT.V
      3563**DCL      3563--DCLINIT
TRTN_FPT.V.IR#
      3563**DCL      3564--REDEF
VLP_DRS
      3594**DCL      3616--ASSIGN   3618<<ASSIGN
VLP_REGS
      3579**DCL      3615--ASSIGN   3617<<ASSIGN
VLP_REGS.XREGS
      3579**DCL      3579--REDEF
X66_TRTN
      3605**DCL-ENT  3623--CALL
PL6.E3A0      #001=DUX$TRAP File=DUX$TRAP.:E05TSI                                TUE 07/29/97 15:04 Page:28   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DUX$TRAP File=DUX$TRAP.:E05TSI                                TUE 07/29/97 15:04 Page:29   
              MINI UREF LISTING

DUX$TRAP      16**PROC
M$ACCT    2782**DCL-ENT
M$ACTIVATE    2785**DCL-ENT
M$ALIB    2778**DCL-ENT
M$ASUSER    2780**DCL-ENT
M$ATTACH    2787**DCL-ENT
M$BADPP    2805**DCL-ENT
M$CGCTL    2786**DCL-ENT
M$CGINFO    2786**DCL-ENT
M$CHECK    2767**DCL-ENT
M$CHGUNIT    2825**DCL-ENT
M$CLOSE    2765**DCL-ENT
M$CMDVAR    2834**DCL-ENT
M$CONFIG    2795**DCL-ENT
M$CORRES    2770**DCL-ENT
M$CPEXIT    2779**DCL-ENT
M$CVM    2803**DCL-ENT
M$CVOL    2768**DCL-ENT
M$DCLFLD    2795**DCL-ENT
M$DEACTIVATE    2785**DCL-ENT
M$DELREC    2767**DCL-ENT
M$DEQ    2832**DCL-ENT
M$DETACH    2787**DCL-ENT
M$DEVICE    2769**DCL-ENT
M$DISPLAY    2832**DCL-ENT
M$DISPRES    2772**DCL-ENT
M$DLIB    2778**DCL-ENT
M$DRIBBLE    2795**DCL-ENT
M$DRTN    2823**DCL-ENT
M$DSUSER    2780**DCL-ENT
M$ENQ    2831**DCL-ENT
M$EOM    2790**DCL-ENT
PL6.E3A0      #001=DUX$TRAP File=DUX$TRAP.:E05TSI                                TUE 07/29/97 15:04 Page:30   
M$ERASE    2796**DCL-ENT
M$ERR    2777**DCL-ENT
M$ERRMSG    2828**DCL-ENT
M$EVENT    2820**DCL-ENT
M$EXHUME    2829**DCL-ENT
M$EXIT    2777**DCL-ENT
M$EXTEND    2769**DCL-ENT
M$FDP    2801**DCL-ENT
M$FDS    2800**DCL-ENT
M$FEBOOT    2793**DCL-ENT
M$FECTL    2794**DCL-ENT
M$FEDUMP    2793**DCL-ENT
M$FID    2828**DCL-ENT
M$FINDPROC    2782**DCL-ENT
M$FSUSER    2780**DCL-ENT
M$FVP    2802**DCL-ENT
M$FWCG    2786**DCL-ENT
M$GBPL    2806**DCL-ENT
M$GDDL    2802**DCL-ENT
M$GDP    2801**DCL-ENT
M$GDS    2800**DCL-ENT
M$GETDCB    2771**DCL-ENT
M$GETMOUSE    2811**DCL-ENT
M$GETPM    2812**DCL-ENT
M$GJOB    2830**DCL-ENT
M$GLINEATTR    2790**DCL-ENT
M$GOODPP    2805**DCL-ENT
M$GPLATEN    2798**DCL-ENT
M$GPROMPT    2797**DCL-ENT
M$GTRMATTR    2791**DCL-ENT
M$GTRMCTL    2789**DCL-ENT
M$GTRMTAB    2792**DCL-ENT
M$GVP    2801**DCL-ENT
M$HELP    2828**DCL-ENT
M$INT    2820**DCL-ENT
M$INTRTN    2781**DCL-ENT
PL6.E3A0      #001=DUX$TRAP File=DUX$TRAP.:E05TSI                                TUE 07/29/97 15:04 Page:31   
M$IOQ    2816**DCL-ENT
M$JOBSTATS    2830**DCL-ENT
M$KEYIN    2770**DCL-ENT
M$LDEV    2765**DCL-ENT
M$LDTRC    2778**DCL-ENT
M$LIMIT    2771**DCL-ENT
M$LINES    2770**DCL-ENT
M$LINK    2777**DCL-ENT
M$MADMUCK    2773**DCL-ENT
M$MAKUSER    2804**DCL-ENT
M$MBS    2772**DCL-ENT
M$MDFFLD    2796**DCL-ENT
M$MERC    2821**DCL-ENT
M$MERCS    2822**DCL-ENT
M$MIRROR    2816**DCL-ENT
M$MONINFO    2833**DCL-ENT
M$MPL    2806**DCL-ENT
M$NODEINFO    2797**DCL-ENT
M$NXTUSR    2831**DCL-ENT
M$OCMSG    2829**DCL-ENT
M$OLAY    2777**DCL-ENT
M$OPEN    2765**DCL-ENT
M$PAS    2806**DCL-ENT
M$PATHCON    2829**DCL-ENT
M$PDS    2800**DCL-ENT
M$PFIL    2767**DCL-ENT
M$PLATEN    2791**DCL-ENT
M$PRECORD    2769**DCL-ENT
M$PROCNAME    2782**DCL-ENT
M$PROFILE    2793**DCL-ENT
M$PROMPT    2789**DCL-ENT
M$RACST    2773**DCL-ENT
M$RDSYSLOG    2814**DCL-ENT
M$READ    2766**DCL-ENT
M$RELDCB    2771**DCL-ENT
M$RELRES    2772**DCL-ENT
PL6.E3A0      #001=DUX$TRAP File=DUX$TRAP.:E05TSI                                TUE 07/29/97 15:04 Page:32   
M$RELSTARF    2774**DCL-ENT
M$REM    2774**DCL-ENT
M$RENV    2821**DCL-ENT
M$REQUIRE    2773**DCL-ENT
M$RETRY    2822**DCL-ENT
M$RETRYS    2822**DCL-ENT
M$REW    2768**DCL-ENT
M$RLSFLD    2796**DCL-ENT
M$RPRIV    2824**DCL-ENT
M$RSPP    2803**DCL-ENT
M$RSWITCH    2825**DCL-ENT
M$RUE    2831**DCL-ENT
M$SAD    2804**DCL-ENT
M$SAVE    2780**DCL-ENT
M$SCON    2781**DCL-ENT
M$SENV    2821**DCL-ENT
M$SETFMA    2765**DCL-ENT
M$SETFP    2794**DCL-ENT
M$SINPUT    2792**DCL-ENT
M$SLCFLD    2797**DCL-ENT
M$SMOUSE    2811**DCL-ENT
M$SMPRT    2803**DCL-ENT
M$SPRIV    2824**DCL-ENT
M$SSC    2804**DCL-ENT
M$SSWITCH    2824**DCL-ENT
M$STATE    2833**DCL-ENT
M$STD    2805**DCL-ENT
M$STIMER    2819**DCL-ENT
M$STLPP    2802**DCL-ENT
M$STRAP    2819**DCL-ENT
M$STRMATTR    2791**DCL-ENT
M$STRMCTL    2789**DCL-ENT
M$STRMTAB    2792**DCL-ENT
M$SYMBIO    2830**DCL-ENT
M$SYSCON    2816**DCL-ENT
M$SYSID    2834**DCL-ENT
PL6.E3A0      #001=DUX$TRAP File=DUX$TRAP.:E05TSI                                TUE 07/29/97 15:04 Page:33   
M$TDCLOSE    2815**DCL-ENT
M$TDIO    2815**DCL-ENT
M$TDOPEN    2814**DCL-ENT
M$TDREQCPU    2815**DCL-ENT
M$TEMPWROC    2809**DCL-ENT
M$TIME    2832**DCL-ENT
M$TRAP    2819**DCL-ENT
M$TRMISC    2794**DCL-ENT
M$TRMPRG    2790**DCL-ENT
M$TRTN    2823**DCL-ENT
M$TRUNC    2766**DCL-ENT
M$TTIMER    2819**DCL-ENT
M$UC    2789**DCL
M$UMPL    2806**DCL-ENT
M$UNFID    2828**DCL-ENT
M$UNLATCH    2785**DCL-ENT
M$UNSHARE    2782**DCL-ENT
M$USRFIELD    2825**DCL-ENT
M$VIRTUAL    2800**DCL-ENT
M$WAIT    2823**DCL-ENT
M$WEOF    2768**DCL-ENT
M$WRITE    2766**DCL-ENT
M$WRSYSLOG    2814**DCL-ENT
M$XCON    2820**DCL-ENT
M$XCONRTN    2781**DCL-ENT
M$XEQTIME    2833**DCL-ENT
M$XFLUSH    2774**DCL-ENT
M$XMOUSE    2811**DCL-ENT
M$YC    2779**DCL-ENT
