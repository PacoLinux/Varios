/*M* GANTPARS parsing entry for GANTRAF */
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
/*X* DMR,PLM=5,IND=5,CTI=5,SDI=5,MCL=10,CSI=0,ECI=0 */
 
GANTPARS: PROC (STRING1_ , ARRAY_, TITLE_, OPT_ );
                                   /*
                                        Author: J.L.Joseph, LADC
                                        Date: 3/84                */
%SET LISTSUB='1'B;
                                   /*
                                        ARGUMENTS
                                                                  */
DCL STRING1_ CHAR(80);
DCL OPT_ CHAR(80);
DCL ARRAY_ (0:5) CHAR(4);
DCL TITLE_ CHAR(80);
                                   /*
                                        INCLUDES
                                                                  */
     %INCLUDE XU_MACRO_C;
     %INCLUDE XU_SUBS_C;
     %INCLUDE XU_PERR_C;
                                   /*
                                        EXTERNALs
                                                                  */
DCL GANTNODES SBIN WORD SYMREF;
DCL X$PARSE ENTRY(1) ALTRET;
                              /*
                                   mysterious and misused temps
                                                                  */
DCL I SBIN WORD STATIC ALIGNED INIT(0);
DCL J SBIN WORD STATIC ALIGNED INIT(0);
DCL GANT_WORKSPACE(0:80) SBIN WORD STATIC SYMDEF;
DCL PARSE$ PTR STATIC;
                                   /*
                                        STRUCTURES
                                                                  */
     %P_PCB         (NAME=GANT_PCB,
                         STCLASS="STATIC SYMDEF",
                         R=NIL,
                         W=GANT_WORKSPACE,
                         U$=NIL,
                         WSZ=81,
                         N#=0);
                                   /*
                                        BASED definitions
                                                                  */
     %PARSE$SYM     (NAME=GANT$SYM,
                         STCLASS="BASED");
 
     %PARSE$OUT     (NAME=GANT$OUTBLK,
                         STCLASS="BASED");
%EJECT;
 
 
     GANT_PCB.ROOT$ = ADDR(GANTNODES);
 
     GANT_PCB.TEXT$ = ADDR(STRING1_);
     GANT_PCB.NCHARS = SIZEC(STRING1_);
     OPT_ = ' ';
 
     CALL X$PARSE (GANT_PCB)
     WHENALTRETURN
     DO;
          DO I=0 TO 5;
               ARRAY_(I) = '????';
             END;                       /* DO I */
          RETURN;
        END;                            /* DO IF ALTRETURN */
 
     J = 0;
     DO I = 0 TO GANT_PCB.OUT$ -> GANT$OUTBLK.NSUBLKS - 1;
          PARSE$ = GANT_PCB.OUT$ ->
               GANT$OUTBLK.SUBLK$(I);
 
          DO CASE (I);
 
          CASE (0);
             TITLE_ =
                  PARSE$ -> GANT$SYM.TEXT;
 
          CASE (1,2,3,4,5,6);
             ARRAY_(J) =
                  PARSE$ -> GANT$SYM.TEXT;
             J = J + 1;
 
          CASE (7);
             OPT_ =
                  PARSE$ -> GANT$SYM.TEXT;
 
          END;                          /* DO CASE ON PARSE.NCODE */
 
        END;                            /* DO I = 0 TO NSUBLKS - 1 */
 
     RETURN;
 
END GANTPARS;
%EOD;
/*M* GRAFAGANT_SI6  CCBUFF STUFF for GRAFAGANT */
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
/*X* DMR,PLM=5,IND=5,CTI=5,SDI=5,MCL=10,CSI=0,ECI=0 */
 
 
%SET LISTSUB='1'B;
 
CCBUF: PROC (ARRAY_);
 
%INCLUDE XU_MACRO_C;
%INCLUDE XU_PERR_C;
%INCLUDE XU_SUBS_C;
 
%INCLUDE B$JIT_C;
 
                                        /* ARGUMENTS */
DCL ARRAY_(0:15) SBIN;
 
                                        /* MACRO JUNK */
 
DCL X$PARSE ENTRY(1) ALTRET;
 
DCL B$JIT$ PTR SYMREF;
 
     %PARSE$SYM     (NAME=GANTG$SYM,
                         STCLASS="BASED");
 
     %PARSE$OUT     (NAME=GANTG$OUTBLK,
                         STCLASS="BASED");
 
     %B$JIT0;
     %U$JIT1;
     %A$JIT6X;
 
DCL GANTT_NODES SBIN SYMREF;
 
DCL GANTT_WORKSPACE(0:199) SBIN STATIC;
DCL I SBIN;
 
     %P_PCB    (NAME=GANTT_PCB,
                         STCLASS="STATIC SYMDEF",
                         R=NIL,
                         W=GANTT_WORKSPACE,
                         U$=NIL,
                         WSZ=200,
                         N#=0);
 
%EJECT;
 
     GANTT_PCB.ROOT$ = ADDR(GANTT_NODES);
     DO I=0 TO SIZEW(ARRAY_);
          ARRAY_(I)=0;
        END;
 
     IF B$JIT$->B$JIT.CCARS > B$JIT$->B$JIT.CCDISP
     THEN
     DO;
          GANTT_PCB.TEXT$ = PINCRC(ADDR(B$JIT.CCBUF),B$JIT.CCDISP+1);
          GANTT_PCB.NCHARS = B$JIT.CCARS - B$JIT.CCDISP - 1;
 
          CALL X$PARSE (GANTT_PCB) ALTRET (WHOOPS);
 
          DO WHILE ('0'B);
WHOOPS:        ;
               ARRAY_(0)=9999;
               RETURN;
             END;
 
          DO I = 0 TO GANTT_PCB.OUT$ -> GANTG$OUTBLK.NSUBLKS - 1;
 
               DO CASE (GANTT_PCB.OUT$ -> GANTG$OUTBLK.SUBLK$(I) ->
                    GANTG$OUTBLK.CODE);
 
               CASE (1);
                  ARRAY_(0)=1;
 
               CASE (2);
                  ARRAY_(1)=1;
 
               CASE(3);
                  ARRAY_(2) = 1;
 
               END;                     /* DO CASE */
             END;                       /* DO I */
 
        END;                            /* DO IF SOMETHING IN CCBUF */
     RETURN;
 
END CCBUF;
