VERSION E05

 11:04 07/29/97  FILE=AZB$MTH3D2B.:E05TSI                                                                1    BMAP - B00     
                                         1  *M* AZB$MTH3D2B  BMAP code necessary to do floating point arithmetic for LOGOFF
                                         2  *T***********************************************************
                                         3  *T*                                                         *
                                         4  *T* Copyright (c) Bull HN Information Systems Inc., 1997    *
                                         5  *T*                                                         *
                                         6  *T***********************************************************
                                         7  ***********************************************************
                                         8  *D* NAME: AZB$MTH3D2B
                                         9  *   CALL: CALL AZB$MTH3D2B(RESULT,DEC1,DEC2,DEC3,BINFLT,DIV1,FLT);
                                        10  *       where RESULT and DIV1 are binary numbers and
                                        11  *       DEC1, DEC2, and DEC3 are signed, floating point packed decimal numbers
                                        12  *       of 72 bits each and
                                        13  *       FLT is a BIT(1) value specifying if set that BINFLT is a 36-bit
                                        14  *       floating point value; if reset that BINFLT is a binary word value
                                        15  *
                                        16  *   PURPOSE: To set RESULT = (10000 * DEC1 * DEC2 * DEC3 * BINFLT)/DIV1
                                        17  ***********************************************************
                                        18  *       AZB$MTH3D2B
                                        19  ***********************************************************
                                        20              ENTDEF  AZB$MTH3D2B
                                        21              ENTDEF  AZB$FAD
                                        22              ENTDEF  AZB$FSB
                                        23              ENTDEF  AZB$FLOAT
                                        24              ENTDEF  AZB$FDV
                                        25              ENTDEF  AZB$FMP
                                        26              ENTREF  AZA$FLTTODEC
                                        27              ENTREF  X66_AUTO_N
                                        28              ENTREF  X66_ARET
             000000000002               29  P2          EQU     2
             000000000003               30  P3          EQU     3
             000000000004               31  P4          EQU     4
             000000000003               32  OP1         EQU     3
             000000000004               33  OP2         EQU     4
             000000000003               34  RESULT      EQU     3
             000000000004               35  DEC1        EQU     4
             000000000005               36  DEC2        EQU     5
             000000000006               37  DEC3        EQU     6
 11:04 07/29/97  FILE=AZB$MTH3D2B.:E05TSI                                                                2    BMAP - B00     
             000000000007               38  BINFLT      EQU     7
             000000000010               39  DIV1        EQU     8
             000000000011               40  FLT         EQU     9
             000000000012               41  DRES        EQU     10                       Decimal result floating
             000000000014               42  DRES1       EQU     12                       Decimal result scaled
             000000000016               43  DTMP        EQU     14                       Decimal temp value
             000000000021               44  SPARE       EQU     17                       Not used
             000000000022               45  PARM0       EQU     18                       Calling parameter #0
             000000000023               46  PARM1       EQU     19                       Calling parameter #1
 0 000000    14 01 000 000 000          47  BIGNM       VFD     O5/14,4/1,9/0,9/0,9/0    10000 AS DECIMAL NUMBER
   000001    14 00 000 000 000          48  ZEROV       VFD     O5/14,4/0,9/0,9/0,9/0    0 AS DECIMAL NUMBER
   000002    000002 000000              49  CALLPARM    ZERO    2,0
                                        50  ***********************************************
   000003  X 000000 7000 00             51  AZB$MTH3D2B TSX0    X66_AUTO_N               Receiving sequence with
   000004    000024 000007              52              ZERO    20,7                     20 words of AUTO and 7 parms
   000005    2 00004 4735 00            53              LDP3    DEC1,,P2
   000006    2 00005 4745 00            54              LDP4    DEC2,,P2
   000007    0 100 0 0 100 2265 00      55              MP3D    (1),(1),(1)              DRES = DEC1 * DEC2
   000010    3 00000 0 1 0 00 20        56              NDSC4   0,0,16,0,0,P3
   000011    4 00000 0 1 0 00 20        57              NDSC4   0,0,16,0,0,P4
   000012    2 00012 0 1 0 00 20        58              NDSC4   DRES,0,16,0,0,P2
   000013    2 00006 4735 00            59              LDP3    DEC3,,P2
   000014    0 000 0 0 100 2065 00      60              MP2D    (1),(1)                  DRES = DEC3 * DRES
   000015    3 00000 0 1 0 00 20        61              NDSC4   0,0,16,0,0,P3
   000016    2 00012 0 1 0 00 20        62              NDSC4   DRES,0,16,0,0,P2
   000017    2 00007 4735 00            63              LDP3    BINFLT,,P2
   000020    2 00011 4745 00            64              LDP4    FLT,,P2
   000021    4 00000 2361 00            65              LDQ     0,,P4
   000022 (0)000040 6050 00             66              TPL     BINARY                   BINFLT is binary, not floating
   000023    2 00016 6305 00            67              EPPR0   DTMP,,P2
   000024    2 00023 4505 00            68              STP0    PARM1,,P2
   000025    3 00000 6305 00            69              EPPR0   0,,P3
   000026    2 00022 4505 00            70              STP0    PARM0,,P2
   000027    2 00022 6305 00            71              EPPR0   PARM0,,P2
   000030 (0)000002 6314 00             72              EPPR1   CALLPARM
   000031  X 000000 7010 00             73              TSX1    AZA$FLTTODEC             CALL AZA$FLTTODEC(BINFLT,DTMP);
   000032    000000 0110 00             74              NOP     0
 11:04 07/29/97  FILE=AZB$MTH3D2B.:E05TSI                                                                3    BMAP - B00     
   000033    0 100 0 0 100 2224 00      75              AD3D    (0),(1),(1)              CONVERT DTMP TO PACKED DECIMAL
   000034 (0)000001 0 1 0 00 10         76              NDSC4   ZEROV,0,8,0
   000035    2 00016 0 0 0 00 14        77              NDSC9   DTMP,0,12,0,0,P2
   000036    2 00016 0 1 0 00 20        78              NDSC4   DTMP,0,16,0,0,P2
   000037 (0)000047 7100 00             79              TRA     BF
   000040    0 000 100 3015 00          80  BINARY      BTD     (1),(1)
   000041    3 00000 0 0 0 00 04        81              NDSC9   0,0,4,0,0,P3
   000042    2 00016 0 1 1 00 20        82              NDSC4   DTMP,0,16,1,0,P2
   000043    0 100 0 0 100 2224 00      83              AD3D    (0),(1),(1)              CONVERT DTMP FROM SCALED TO FLOAT
   000044 (0)000001 0 1 0 00 10         84              NDSC4   ZEROV,0,8,0
   000045    2 00016 0 1 1 00 20        85              NDSC4   DTMP,0,16,1,0,P2
   000046    2 00016 0 1 0 00 20        86              NDSC4   DTMP,0,16,0,0,P2
   000047    0 000 0 0 100 2065 00      87  BF          MP2D    (1),(1)                  DRES = BINFLT * DRES
   000050    2 00016 0 1 0 00 20        88              NDSC4   DTMP,0,16,0,0,P2
   000051    2 00012 0 1 0 00 20        89              NDSC4   DRES,0,16,0,0,P2
   000052    2 00010 4735 00            90              LDP3    DIV1,,P2
   000053    0 000 100 3015 00          91              BTD     (1),(1)
   000054    3 00000 0 0 0 00 04        92              NDSC9   0,0,4,0,0,P3
   000055    2 00016 0 1 1 00 20        93              NDSC4   DTMP,0,16,1,0,P2
   000056    0 000 0 0 100 2075 00      94              DV2D    (1),(1)                  DRES = DRES / DIV1
   000057    2 00016 0 1 1 00 20        95              NDSC4   DTMP,0,16,1,0,P2
   000060    2 00012 0 1 0 00 20        96              NDSC4   DRES,0,16,0,0,P2
   000061    0 100 0 0 100 2264 00      97              MP3D    (0),(1),(1)              DRES1 = 10000 * DRES
   000062 (0)000000 0 1 0 00 10         98              NDSC4   BIGNM,0,8,0
   000063    2 00012 0 1 0 00 20        99              NDSC4   DRES,0,16,0,0,P2
   000064    2 00014 0 1 1 00 20       100              NDSC4   DRES1,0,16,1,0,P2
   000065    2 00003 4735 00           101              LDP3    RESULT,,P2
   000066    000 100 3055 00           102              DTB     (1),(1)                  Stuff RESULT with binary num
   000067    2 00014 0 1 1 00 20       103              NDSC4   DRES1,0,16,1,0,P2
   000070    3 00000 0 0 0 00 04       104              NDSC9   0,0,4,0,0,P3
   000071  X 000000 7100 00            105              TRA     X66_ARET
                                       106  ***********************************************************
                                       107  *D* NAME:         AZB$FAD
                                       108  *   PURPOSE:      To add two floating point numbers
                                       109  *   CALL:         CALL AZB$FAD(OP1,OP2);
                                       110  *                    where OP1 and OP2 are floating point values
                                       111  *   DESCRIPTION:  OP1 = OP2+OP1;
 11:04 07/29/97  FILE=AZB$MTH3D2B.:E05TSI                                                                4    BMAP - B00     
                                       112  ***********************************************************
   000072  X 000000 7000 00            113  AZB$FAD     TSX0    X66_AUTO_N
   000073    000002 000002             114              ZERO    2,2
   000074    2 00004 4735 00           115              LDP3    OP2,,P2
   000075    3 00000 4311 00           116              FLD     0,,P3
   000076    2 00003 4735 00           117              LDP3    OP1,,P2
   000077    3 00000 4751 00           118              FAD     0,,P3                    OP2+OP1
   000100    3 00000 4701 00           119              FSTR    0,,P3
   000101  X 000000 7100 00            120              TRA     X66_ARET
                                       121  ***********************************************************
                                       122  *D* NAME:         AZB$FSB
                                       123  *   PURPOSE:      To subtract two floating point numbers
                                       124  *   CALL:         CALL AZB$FSB(OP1,OP2);
                                       125  *                    where OP1 and OP2 are floating point values
                                       126  *   DESCRIPTION:  OP1 = OP1-OP2;
                                       127  ***********************************************************
   000102  X 000000 7000 00            128  AZB$FSB     TSX0    X66_AUTO_N
   000103    000002 000002             129              ZERO    2,2
   000104    2 00003 4745 00           130              LDP4    OP1,,P2
   000105    4 00000 4311 00           131              FLD     0,,P4
   000106    2 00004 4735 00           132              LDP3    OP2,,P2
   000107    3 00000 5751 00           133              FSB     0,,P3                    OP1-OP2
   000110    4 00000 4701 00           134              FSTR    0,,P4
   000111  X 000000 7100 00            135              TRA     X66_ARET
                                       136  ***********************************************************
                                       137  *D* NAME:         AZB$FLOAT
                                       138  *   PURPOSE:      To float a binary number
                                       139  *   CALL:         CALL AZB$FLOAT(OP1,OP2);
                                       140  *                    where: OP1 is a BINARY input value
                                       141  *                           OP2 is a floating point value
                                       142  *   DESCRIPTION:  OP1 will be converted to floating point and
                                       143  *                 returned in OP2.
                                       144  ***********************************************************
   000112  X 000000 7000 00            145  AZB$FLOAT  TSX0    X66_AUTO_N
   000113    000002 000002             146             ZERO    2,2
   000114    2 00003 4735 00           147             LDP3    OP1,,P2
   000115    3 00000 2351 00           148             LDA     0,,P3
 11:04 07/29/97  FILE=AZB$MTH3D2B.:E05TSI                                                                5    BMAP - B00     
   000116    000000 2360 07            149             LDQ     0,DL
   000117    000001 7330 00            150             LRS     1
   000120    022000 4110 03            151             LDE     9*1024,DU
   000121    400000 4750 03            152             FAD     =O400000,DU
   000122    2 00004 4735 00           153             LDP3    OP2,,P2
   000123    3 00000 4701 00           154             FSTR    0,,P3
   000124  X 000000 7100 00            155             TRA     X66_ARET
                                       156  ***********************************************************
                                       157  *D* NAME:         AZB$FDV
                                       158  *   PURPOSE:      To divide two floating point numbers
                                       159  *   CALL:         CALL AZB$FDV (OP1,OP2);
                                       160  *                    where: OP1 and OP2 are floating point values
                                       161  *   DESCRIPTION:  OP1 = OP1/OP2;
                                       162  ***********************************************************
   000125  X 000000 7000 00            163  AZB$FDV    TSX0    X66_AUTO_N
   000126    000002 000002             164             ZERO    2,2
   000127    2 00003 4745 00           165             LDP4    OP1,,P2
   000130    4 00000 4311 00           166             FLD     0,,P4
   000131    2 00004 4735 00           167             LDP3    OP2,,P2
   000132    3 00000 5651 00           168             FDV     0,,P3
   000133    4 00000 4701 00           169             FSTR    0,,P4
   000134  X 000000 7100 00            170             TRA     X66_ARET
                                       171  ***********************************************************
                                       172  *D* NAME:         AZB$FMP
                                       173  *   PURPOSE:      To multiply two floating point numbers
                                       174  *   CALL:         CALL AZB$FMP (OP1,OP2);
                                       175  *                    where: OP1 and OP2 are floating point values
                                       176  *   DESCRIPTION:  OP1 = OP1*OP2;
                                       177  ***********************************************************
   000135  X 000000 7000 00            178  AZB$FMP    TSX0    X66_AUTO_N
   000136    000002 000002             179             ZERO    2,2
   000137    2 00003 4745 00           180             LDP4    OP1,,P2
   000140    4 00000 4311 00           181             FLD     0,,P4
   000141    2 00004 4735 00           182             LDP3    OP2,,P2
   000142    3 00000 4611 00           183             FMP     0,,P3
   000143    4 00000 4701 00           184             FSTR    0,,P4
   000144  X 000000 7100 00            185             TRA     X66_ARET
 11:04 07/29/97  FILE=AZB$MTH3D2B.:E05TSI                                                                6    BMAP - B00     
                                       186              END

  CONTROL SECTION TABLE

   0 CODE   EVEN  000145
   1 RODATA EVEN  000000 LITERALS

 11:04 07/29/97  FILE=AZB$MTH3D2B.:E05TSI     SYMBOL TABLE                                               7    BMAP - B00     
 03201000 000000000000 AZA$FLTTODEC   *26        73
 12101000 000000000072 AZB$FAD         21      *113
 12101000 000000000125 AZB$FDV         24      *163
 12101000 000000000112 AZB$FLOAT       23      *145
 12101000 000000000135 AZB$FMP         25      *178
 12101000 000000000102 AZB$FSB         22      *128
 12101000 000000000003 AZB$MTH3D2B     20       *51
 01101000 000000000047 BF              79       *87
 01101000 000000000000 BIGNM          *47        98
 01101000 000000000040 BINARY          66       *80
 41000000 000000000007 BINFLT         *38        63
 01101000 000000000002 CALLPARM       *49        72
 41000000 000000000004 DEC1           *35        53
 41000000 000000000005 DEC2           *36        54
 41000000 000000000006 DEC3           *37        59
 41000000 000000000010 DIV1           *39        90
 41000000 000000000012 DRES           *41        58        62        89        96        99
 41000000 000000000014 DRES1          *42       100       103
 41000000 000000000016 DTMP           *43        67        77        78        82        85        86
                                       88        93        95
 41000000 000000000011 FLT            *40        64
 41000000 000000000003 OP1            *32       117       130       147       165       180
 41000000 000000000004 OP2            *33       115       132       153       167       182
 41000000 000000000002 P2             *29        53        54        58        59        62        63
                                       64        67        68        70        71        77        78
                                       82        85        86        88        89        90        93
                                       95        96        99       100       101       103       115
                                      117       130       132       147       153       165       167
                                      180       182
 41000000 000000000003 P3             *30        56        61        69        81        92       104
                                      116       118       119       133       148       154       168
                                      183
 41000000 000000000004 P4             *31        57        65       131       134       166       169
                                      181       184
 41000000 000000000022 PARM0          *45        70        71
 41000000 000000000023 PARM1          *46        68
 41000000 000000000003 RESULT         *34       101
 11:04 07/29/97  FILE=AZB$MTH3D2B.:E05TSI     SYMBOL TABLE                                               8    BMAP - B00     
 40000000 000000000021 SPARE          *44
 03201002 000000000000 X66_ARET       *28       105       120       135       155       170       185
 03201001 000000000000 X66_AUTO_N     *27        51       113       128       145       163       178
 01101000 000000000001 ZEROV          *48        76        84

      32 SYMBOLS

       0 MACROS

    SYMBOL SPACE USED   536 WORDS
     MACRO SPACE USED     0 WORDS
   INPUT RECORDS READ   372
 STATEMENTS PROCESSED   150
         ELAPSED TIME  0:01.80
             CPU TIME     1.47 SEC.
        ASSEMBLY RATE  6122 STATEMENTS/CPU MIN.

      NO ERRORS

