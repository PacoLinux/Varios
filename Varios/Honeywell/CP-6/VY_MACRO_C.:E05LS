

15:22 JUL 28 '97 VY_MACRO_C.:E05SI                                         1    
    1      /*T***********************************************************/
    2      /*T*                                                         */
    3      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    4      /*T*                                                         */
    5      /*T***********************************************************/
    6      %MACRO CTEXT(NAME="*",SIZE=0,STRING="'*'",LAST=",");
    7            2 NAME     ALIGNED,
    8              3 *           UBIN( 9)  UNAL           INIT(SIZE),
    9              3 *           CHAR( SIZE)  UNAL           INIT(STRING)LAST
   10      %MEND;
   11      %MACRO HTEXT(NAME="*",SIZE=0,STRING="'*'",LAST=",");
   12            2 NAME     ALIGNED,
   13              3 *           UBIN(18)  UNAL           INIT(SIZE),
   14              3 *           CHAR( SIZE)  UNAL           INIT(STRING)LAST
   15      %MEND;
   16      %MACRO WTEXT(NAME="*",SIZE=0,STRING="'*'",LAST=",");
   17            2 NAME     ALIGNED,
   18              3 *           UBIN(36)  UNAL           INIT(SIZE),
   19              3 *           CHAR( SIZE)  UNAL           INIT(STRING)LAST
   20      %MEND;
   21      %MACRO T$H;
   22      %LSET LISTDIR='0'B;
   23      %LSET LISTMAC='1'B;
   24      %BANNER(ARG=T$H);
   25      %T$H_;
   26      %MEND;
   27      %MACRO T$H_;
   28      DCL 1 T$H           BASED     ALIGNED,  /* Text half-word                     */
   29            2 COUNT        UBIN(18) UNAL,
   30            2 CHARS        CHAR( T$H.COUNT )   UNAL;
   31      %MEND;
   32      %MACRO T$C;
   33      %LSET LISTDIR='0'B;
   34      %LSET LISTEXP='1'B;
   35      %LSET LISTMAC='1'B;
   36      %BANNER(ARG=T$C);
   37      %T$C_;
15:22 JUL 28 '97 VY_MACRO_C.:E05SI                                         2    
   38      %MEND;
   39      %MACRO T$C_;
   40      DCL 1 T$C           BASED     ALIGNED,  /* Text count                         */
   41            2 COUNT        UBIN( 9) UNAL,
   42            2 CHARS        CHAR( T$C.COUNT )   UNAL;
   43      DCL 1 T$C_UNAL      BASED     UNAL,     /* Text count                         */
   44            2 COUNT        UBIN( 9) UNAL,
   45            2 CHARS        CHAR( T$C_UNAL.COUNT ) UNAL;
   46      %MEND;
   47      %MACRO TXT$H;
   48      DCL 1 TEXT$H          BASED ALIGNED,
   49            2 COUNT        UBIN(18) UNAL,
   50            2 CHARS(0:0)   CHAR(1) UNAL;
   51      %MEND;
   52      %MACRO TXT$C;
   53      DCL 1 TEXT$C          BASED ALIGNED,
   54            2 COUNT        UBIN(9)  UNAL,
   55            2 CHARS(0:0)   CHAR(1)  UNAL;
   56      %MEND;
   57      %MACRO MAK_DEF(
   58            NAME="*",
   59            NAME1="*",          INIT1="0",
   60            NAME2="*",          INIT2="0",
   61            NAME3="*",          INIT3="0",
   62            NAME4="*",          INIT4="0",
   63            NAME5="*",          INIT5="0",
   64            NAME6="*",          INIT6="0",
   65                                                    LAST=",");
   66            2 NAME                   ALIGNED,
   67              3 NAME1       UBIN(18)  UNAL      INIT(INIT1),
   68              3 NAME2       UBIN(18)  UNAL      INIT(INIT2),
   69              3 NAME3       UBIN(18)  UNAL      INIT(INIT3),
   70              3 NAME4       UBIN(18)  UNAL      INIT(INIT4),
   71              3 NAME5       UBIN(18)  UNAL      INIT(INIT5),
   72              3 NAME6       UBIN(18)  UNAL      INIT(INIT6)LAST
   73      %MEND;
   74      %MACRO BAN_NER( ARG=ARG, SPACEVALUE=1 );
15:22 JUL 28 '97 VY_MACRO_C.:E05SI                                         3    
   75      %LSET LISTDIR='0'B;
   76      %LSET LISTSUB='1'B;
   77      %LSET LISTEXP='1'B;
   78      %SPACE SPACEVALUE;
   79      %CHARTEXT('/*')******************************************************************************
   80      *                                                                              *
   81      *                          ARG                                                 *
   82      *                                                                              *
   83      ******************************************************************************%CHARTEXT('*/')
   84      %SPACE SPACEVALUE;
   85      %MEND;
   86      %MACRO BANNER(ARG= ,SPACEVALUE=1);
   87      %LSET LISTDIR='0'B;
   88      %LSET LISTMAC='1'B;
   89      %BAN_NER(ARG=ARG,SPACEVALUE=SPACEVALUE);
   90      %MEND;
   91      %MACRO B;
   92      %LSET LISTDIR='0'B;
   93      %LSET LISTMAC='1'B;
   94      %BAN_NER(ARG=BIT,SPACEVALUE=1);
   95      %MEND;
   96      %MACRO C;
   97      %LSET LISTDIR='0'B;
   98      %LSET LISTMAC='1'B;
   99      %BAN_NER(ARG=CHAR,SPACEVALUE=1);
  100      %MEND;
  101      %MACRO E;
  102      %LSET LISTDIR='0'B;
  103      %LSET LISTMAC='1'B;
  104      %BAN_NER(ARG=ENTRY,SPACEVALUE=1);
  105      %MEND;
  106      %MACRO P;
  107      %LSET LISTDIR='0'B;
  108      %LSET LISTMAC='1'B;
  109      %BAN_NER(ARG=PARAMETERS,SPACEVALUE=1);
  110      %MEND;
  111      %MACRO PTR;
15:22 JUL 28 '97 VY_MACRO_C.:E05SI                                         4    
  112      %LSET LISTDIR='0'B;
  113      %LSET LISTMAC='1'B;
  114      %BAN_NER(ARG=PTR,SPACEVALUE=1);
  115      %MEND;
  116      %MACRO S;
  117      %LSET LISTDIR='0'B;
  118      %LSET LISTMAC='1'B;
  119      %BAN_NER(ARG=SBIN,SPACEVALUE=1);
  120      %MEND;
  121      %MACRO U;
  122      %LSET LISTDIR='0'B;
  123      %LSET LISTMAC='1'B;
  124      %BAN_NER(ARG=UBIN,SPACEVALUE=1);
  125      %MEND;
  126      %MACRO R;
  127      %LSET LISTDIR='0'B;
  128      %LSET LISTMAC='1'B;
  129      %BAN_NER(ARG="REF'S",SPACEVALUE=1);
  130      %MEND;
  131      %MACRO INDEX;
  132      DCL I          UBIN(36) ALIGNED AUTO;
  133      DCL SI REDEF I SBIN WORD ALIGNED;
  134      DCL J          UBIN(36) ALIGNED AUTO;
  135      DCL SJ REDEF J SBIN WORD ALIGNED;
  136      DCL K          UBIN(36) ALIGNED AUTO;
  137      DCL SK REDEF K SBIN WORD ALIGNED;
  138      DCL L          UBIN(36) ALIGNED AUTO;
  139      DCL SL REDEF L    SBIN WORD ALIGNED;
  140      %MEND;
  141      %MACRO POINTER;
  142      DCL P$         PTR       ALIGNED AUTO;
  143      DCL Q$         PTR       ALIGNED AUTO;
  144      DCL R$         PTR       ALIGNED AUTO;
  145      %MEND;
  146      %MACRO VY$NODE(NAME=VY$NODE,STCLASS=BASED);
  147      %LSET LISTDIR='0'B;
  148      %LSET LISTEXP='1'B;
15:22 JUL 28 '97 VY_MACRO_C.:E05SI                                         5    
  149      %LSET LISTMAC='1'B;
  150      %BANNER(ARG=NAME);
  151      %VY$NODE_(NAME=NAME,STCLASS=STCLASS);
  152      %SPACE 1;
  153      %MEND;
  154
  155      %MACRO VY$NODE_(NAME=VY$NODE, STCLASS=BASED);
  156      %LSET LISTDIR='0'B;
  157      %LSET LISTEXP='1'B;
  158      %LSET LISTSUB='1'B;
  159      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
  160      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
  161      %LSET INIT1=CHARTEXT('INIT');
  162      %LSET INIT2=CHARTEXT(' ');
  163      %ELSE;
  164      %LSET INIT1=CHARTEXT('/*');
  165      %LSET INIT2=CHARTEXT('*/');
  166      %ENDIF;
  167      DCL 1 NAME      ALIGNED    STCLASS,
  168            2 SON$ PTR %INIT1(ADDR(NIL))%INIT2, /* Son pointer                      */
  169            2 BROTHER$ PTR %INIT1(ADDR(NIL))%INIT2, /* Brother pointer              */
  170            2 FATHER$ PTR %INIT1(ADDR(NIL))%INIT2, /* Father pointer                */
  171            2 PATH$ PTR %INIT1(ADDR(NIL))%INIT2, /* Path   pointer                  */
  172            2 HEAD$       PTR %INIT1(ADDR(NIL))%INIT2, /* Head pointer to
  173                            to list of file nodes for this node            */
  174            2 TAIL$ PTR %INIT1(ADDR(NIL))%INIT2, /* Tail pointer to list            */
  175            2 SHARED_LIB_HEAD$ PTR %INIT1(ADDR(NIL))%INIT2, /* Head pointer to shared library list */
  176            2 LIB_HEAD$         PTR %INIT1(ADDR(NIL))%INIT2, /* Head pointer to list of shared libraries
  177                                        which have been mapped to included libraries */
  178            2 NUM          UBIN(36)  UNAL,    /* Node number                        */
  179            2 DEPTH          UBIN(36)  UNAL,  /* Depth; ROOT=0*/
  180            2 ADDR_START_A(0:@ROS) SBIN WORD %INIT1(0*3)%INIT2, /* Array            */
  181            2 ADDR_START REDEF  ADDR_START_A,
  182              3 RDATA       SBIN WORD,   /* First address for this node in data     */
  183              3 RPROC       SBIN WORD,   /* First address for this node in proc     */
  184              3 ROS       SBIN WORD,          /* Last address for program in ros    */
  185            2 ADDR_STOP_A(0:@ROS) SBIN WORD %INIT1(-1*3)%INIT2, /* Array            */
15:22 JUL 28 '97 VY_MACRO_C.:E05SI                                         6    
  186            2 ADDR_STOP  REDEF  ADDR_STOP_A,
  187              3 RDATA       SBIN WORD,        /* Last address for this node in data */
  188              3 RPROC       SBIN WORD,        /* Last address for this node in proc */
  189              3 ROS       SBIN WORD,          /* Last address for program in ros    */
  190            2 START_PAGE#_A(0:@ROS) SBIN WORD %INIT1(0*3)%INIT2, /* Array           */
  191            2 START_PAGE# REDEF START_PAGE#_A,
  192              3 RDATA       SBIN WORD,   /* First page    for this node in data     */
  193              3 RPROC       SBIN WORD,   /* First page    for this node in proc     */
  194              3 ROS       SBIN WORD,          /* First page   for program in ros    */
  195            2 STOP_PAGE#_A(0:@ROS) SBIN WORD %INIT1(-1*3)%INIT2, /* Array*/
  196            2 STOP_PAGE#  REDEF STOP_PAGE#_A,
  197              3 RDATA       SBIN WORD,   /* Last  page    for this node in data     */
  198              3 RPROC       SBIN WORD,   /* Last  page    for this node in proc     */
  199              3 ROS       SBIN WORD,          /* Last  page   for program in ros    */
  200            2 START_SC_ALL$ PTR %INIT1(ADDR(NIL))%INIT2, /* Starting pointer for common sections for this node */
  201            2 STOP_SC_ALL$ PTR %INIT1(ADDR(NIL))%INIT2, /* Stopping pointer for common sections for this node */
  202            2 L_START,
  203              3 SN$ PTR %INIT1(ADDR(NIL))%INIT2, /* Segment definition names        */
  204              3 DN$ PTR %INIT1(ADDR(NIL))%INIT2, /* Def names                       */
  205              3 RN$ PTR %INIT1(ADDR(NIL))%INIT2, /* Ref names                       */
  206              3 SC$ PTR %INIT1(ADDR(NIL))%INIT2, /* Sections                        */
  207              3 ED$ PTR %INIT1(ADDR(NIL))%INIT2, /* Entry defs*/
  208              3 ER$ PTR %INIT1(ADDR(NIL))%INIT2, /* Entry refs*/
  209              3 DD$ PTR %INIT1(ADDR(NIL))%INIT2, /* Data defs                       */
  210              3 DR$ PTR %INIT1(ADDR(NIL))%INIT2, /* Data refs                       */
  211              3 SD$ PTR %INIT1(ADDR(NIL))%INIT2, /* Seg defs                        */
  212              3 SR$ PTR %INIT1(ADDR(NIL))%INIT2, /* Seg refs                        */
  213            2 L_START_A$(0:9)     REDEF L_START PTR,
  214            2 L_STOP,
  215              3 SN$ PTR %INIT1(ADDR(NIL))%INIT2, /* Segment definition names        */
  216              3 DN$ PTR %INIT1(ADDR(NIL))%INIT2, /* Def names                       */
  217              3 RN$ PTR %INIT1(ADDR(NIL))%INIT2, /* Ref names                       */
  218              3 SC$ PTR %INIT1(ADDR(NIL))%INIT2, /* Sections                        */
  219              3 ED$ PTR %INIT1(ADDR(NIL))%INIT2, /* Entry defs*/
  220              3 ER$ PTR %INIT1(ADDR(NIL))%INIT2, /* Entry refs*/
  221              3 DD$ PTR %INIT1(ADDR(NIL))%INIT2, /* Data defs                       */
  222              3 DR$ PTR %INIT1(ADDR(NIL))%INIT2, /* Data refs                       */
15:22 JUL 28 '97 VY_MACRO_C.:E05SI                                         7    
  223              3 SD$ PTR %INIT1(ADDR(NIL))%INIT2, /* Seg defs                        */
  224              3 SR$ PTR %INIT1(ADDR(NIL))%INIT2, /* Seg refs                        */
  225            2 L_STOP_A$(0:9) REDEF   L_STOP    PTR,
  226            2 L_SIZE,
  227              3 SN      UBIN %INIT1(0)%INIT2, /* Segment definition names           */
  228              3 DN      UBIN %INIT1(0)%INIT2, /* Def names                          */
  229              3 RN      UBIN %INIT1(0)%INIT2, /* Ref names                          */
  230              3 SC      UBIN %INIT1(0)%INIT2, /* Sections                           */
  231              3 ED      UBIN %INIT1(0)%INIT2, /* Entry defs*/
  232              3 ER      UBIN %INIT1(0)%INIT2, /* Entry refs*/
  233              3 DD      UBIN %INIT1(0)%INIT2, /* Data defs                          */
  234              3 DR      UBIN %INIT1(0)%INIT2, /* Data refs                          */
  235              3 SD      UBIN %INIT1(0)%INIT2, /* Seg defs                           */
  236              3 SR      UBIN %INIT1(0)%INIT2, /* Seg refs                           */
  237            2 L_SIZE_A(0:9)  REDEF   L_SIZE    UBIN,
  238            2 L_PREV_SIZE,
  239              3 SN      UBIN %INIT1(0)%INIT2, /* Segment definition names           */
  240              3 DN      UBIN %INIT1(0)%INIT2, /* Def names                          */
  241              3 RN      UBIN %INIT1(0)%INIT2, /* Ref names                          */
  242              3 SC      UBIN %INIT1(0)%INIT2, /* Sections                           */
  243              3 ED      UBIN %INIT1(0)%INIT2, /* Entry defs*/
  244              3 ER      UBIN %INIT1(0)%INIT2, /* Entry refs*/
  245              3 DD      UBIN %INIT1(0)%INIT2, /* Data defs                          */
  246              3 DR      UBIN %INIT1(0)%INIT2, /* Data refs                          */
  247              3 SD      UBIN %INIT1(0)%INIT2, /* Seg defs                           */
  248              3 SR      UBIN %INIT1(0)%INIT2, /* Seg refs                           */
  249            2 L_PREV_SIZE_A(0:9)  REDEF   L_PREV_SIZE    UBIN,
  250            2 BIT_MAP                ALIGNED,
  251              3 DATA                  ALIGNED,
  252                4 BITS(0:255)          BIT(1)    UNAL %INIT1('0'B*256)%INIT2,
  253              3 RPROC                 ALIGNED,
  254                4 BITS(0:255)          BIT(1)    UNAL %INIT1('0'B*256)%INIT2,
  255              3 ROS                   ALIGNED,
  256                4 BITS(0:255)          BIT(1)    UNAL %INIT1('0'B*256)%INIT2,
  257            2 L_SC_START,
  258              3 SC_BLK_COM$ PTR %INIT1(ADDR(NIL))%INIT2, /* Blank common            */
  259              3 SC_ROOT_LBL_COM$ PTR %INIT1(ADDR(NIL))%INIT2, /* Root labelled common */
15:22 JUL 28 '97 VY_MACRO_C.:E05SI                                         8    
  260              3 SC_LBL_COM$ PTR %INIT1(ADDR(NIL))%INIT2, /* Labelled common         */
  261              3 SC_DCB$ PTR %INIT1(ADDR(NIL))%INIT2, /* Dcbs                        */
  262            2 L_SC_START_A$(0:3)  REDEF L_SC_START PTR,
  263            2 L_SC_STOP,
  264              3 SC_BLK_COM$ PTR %INIT1(ADDR(NIL))%INIT2, /* Blank common            */
  265              3 SC_ROOT_LBL_COM$ PTR %INIT1(ADDR(NIL))%INIT2, /* Root labelled common */
  266              3 SC_LBL_COM$ PTR %INIT1(ADDR(NIL))%INIT2, /* Labelled common         */
  267              3 SC_DCB$ PTR %INIT1(ADDR(NIL))%INIT2, /* Dcbs                        */
  268            2 L_SC_STOP_A$(0:3)   REDEF L_SC_STOP  PTR,
  269            2 PROMOTE_HEAD,
  270              3 BLK_COM$              PTR %INIT1(ADDR(NIL))%INIT2,
  271              3 LBL_COM$              PTR %INIT1(ADDR(NIL))%INIT2,
  272            2 PROMOTE_HEAD_A$(0:1) REDEF PROMOTE_HEAD     PTR,
  273            2 PROMOTE_TAIL,
  274              3 BLK_COM$              PTR %INIT1(ADDR(NIL))%INIT2,
  275              3 LBL_COM$              PTR %INIT1(ADDR(NIL))%INIT2,
  276            2 PROMOTE_TAIL_A$(0:1) REDEF PROMOTE_TAIL     PTR,
  277            2 HAVE_ASL          BIT(1)    UNAL %INIT1('0'B)%INIT2,
  278            2 ALL_BLK_COM          BIT(1)    UNAL %INIT1('0'B)%INIT2,
  279            2 *                 BIT(34)   UNAL %INIT1('0'B)%INIT2,
  280            2 BLANK_COMMON$     PTR       ALIGNED %INIT1(ADDR(NIL))%INIT2;
  281      %MEND;
  282      %MACRO VY$LST;
  283      %LSET LISTDIR='0'B;
  284      %LSET LISTEXP='1'B;
  285      %LSET LISTMAC='1'B;
  286      %BANNER(ARG=VY$LST);
  287      %VY$LST_;
  288      %MEND;
  289      %MACRO VY$LST_;
  290      DCL 1 VY$LST                        ALIGNED BASED,
  291            2 LINK$        PTR,               /* Link to next item                  */
  292            2 TYPE         UBIN( 18) UNAL,    /* Type                               */
  293            2 SUB_TYPE     UBIN( 18) UNAL,    /* Sub-type                           */
  294            2 OBJECT_NAME$ PTR,               /* Pointer to object unit name        */
  295            2 SC_HEAD$     PTR,               /* Head pointer to section link list  */
  296            2 SC_TAIL$     PTR,               /* Tail pointer to section link list  */
15:22 JUL 28 '97 VY_MACRO_C.:E05SI                                         9    
  297            2 P,
  298              3 NAME_       ALIGNED,
  299                4 BOUND      UBIN(20)  UNAL,
  300                4 FLAGSV     UBIN(11)  UNAL,
  301                4 *          BIT(5)    UNAL,
  302                4 NAME$      PTR,
  303              3 ACCT_       ALIGNED,
  304                4 BOUND      UBIN(20)  UNAL,
  305                4 FLAGSV     UBIN(11)  UNAL,
  306                4 *          BIT(5)    UNAL,
  307                4 ACCT$      PTR,
  308              3 PASS_       ALIGNED,
  309                4 BOUND      UBIN(20)  UNAL,
  310                4 FLAGSV     UBIN(11)  UNAL,
  311                4 *          BIT(5)    UNAL,
  312                4 PASS$      PTR,
  313              3 SN_         ALIGNED,
  314                4 BOUND      UBIN(20)  UNAL,
  315                4 FLAGSV     UBIN(11)  UNAL,
  316                4 *          BIT(5)    UNAL,
  317                4 SN$        PTR,
  318              3 WSN_        ALIGNED,
  319                4 BOUND      UBIN(20)  UNAL,
  320                4 FLAGSV     UBIN(11)  UNAL,
  321                4 *          BIT(5)    UNAL,
  322                4 WSN$       PTR,
  323              3 B           ALIGNED,
  324                4 RES        BIT(1)    UNAL,
  325                4 ASN        BIT(1)    UNAL,
  326                4 *          BIT(34)   UNAL,
  327              3 RES         CHAR(4)   ALIGNED,
  328              3 ASN         UBIN(36)  ALIGNED;
  329      %MEND;
  330      %MACRO TMPLT;
  331      %LSET LISTDIR='0'B;
  332      %LSET LISTEXP='1'B;
  333      %LSET LISTMAC='1'B;
15:22 JUL 28 '97 VY_MACRO_C.:E05SI                                         10   
  334      %BANNER(ARG=TMPLT);
  335      %TMPLT_;
  336      %MEND;
  337      %MACRO TMPLT_;
  338      DCL 1 VY$TMPLT           ALIGNED BASED, /* Template for defs                  */
  339            2 A(0:3)       UBIN(18)  UNAL,    /* Array access                       */
  340            2 A_SBIN(0:3) REDEF A    SBIN HALF UNAL,
  341            2 W       REDEF     A,            /* By name                            */
  342              3 WORD0       UBIN(36)  UNAL,   /* First word                         */
  343              3 WORD1       UBIN(36)  UNAL;   /* Second word                        */
  344      %MEND;
  345      %MACRO VYD$TMPLT;
  346      %LSET LISTDIR='0'B;
  347      %LSET LISTEXP='1'B;
  348      %LSET LISTMAC='1'B;
  349      %BANNER(ARG=VYD$TMPLT);
  350      %VYD$TMPLT_;
  351      %MEND;
  352      %MACRO VYD$TMPLT_;
  353      DCL 1 VYD$TMPLT          ALIGNED BASED, /* Template for defs                  */
  354            2 A(0:3)       UBIN(18)  UNAL,    /* Array ...                          */
  355            2 A_SBIN(0:3) REDEF A    SBIN HALF UNAL,
  356            2 I       REDEF     A,            /* Items                              */
  357              3 WHERE        UBIN( 3) UNAL,   /* Source of def                      */
  358                                                              /* Value from
  359                                                                   0   object
  360                                                                   1   library */
  361              3 DEFINED      BIT( 1) UNAL,    /* Defined or not                     */
  362              3 B                      UNAL,
  363                4 MULTIPLY    BIT(1) UNAL,    /* Multiply defined                   */
  364              3 SC#          UBIN(13) UNAL,   /* Section #                          */
  365              3 AFTER        REDEF SC#      UNAL,
  366                4 USED        BIT(1) UNAL,    /* Used or not                        */
  367                4 *           BIT(12) UNAL,
  368              3 OFFSET      UBIN(18) UNAL,    /* Offset/address                     */
  369              3 NAME_DISP   UBIN(18) UNAL,    /* Displacement to name(in words)     */
  370              3 NAME_DISP_SBIN REDEF NAME_DISP   SBIN HALF UNAL,
15:22 JUL 28 '97 VY_MACRO_C.:E05SI                                         11   
  371              3 P           UBIN( 1) UNAL,    /* Primary entdef                     */
  372              3 C REDEF P   BIT(  1) UNAL,    /* Constant bit for symdefs           */
  373              3 A           UBIN( 1) UNAL,    /* Altret specified                   */
  374              3 MULTIPLY REDEF A BIT(1) UNAL, /* Multiply defined for constant sym defs */
  375              3 I           BIT(  1) UNAL,    /* Argument/parameter check           */
  376              3 USED    REDEF I  BIT(1) UNAL, /* Used or not for constant sym defs  */
  377              3 CST         UBIN( 4) UNAL,    /* Calling sequence type              */
  378              3 WHERE_C REDEF CST UBIN(4) UNAL, /* Source of def for constant sym defs */
  379              3 NP          UBIN(11) UNAL,    /* # of parameters                    */
  380              3 IS_DCB  REDEF     NP,
  381                4 DCB_BIT     BIT(1)    UNAL,
  382                4 *           BIT(10)   UNAL,
  383            2 SEG REDEF A,
  384              3 *             UBIN      UNAL,
  385              3 NPOINTER      UBIN(18)  UNAL,
  386              3 CONSTNT       BIT(1)    UNAL,
  387              3 TYPE          UBIN(5)   UNAL,
  388              3 SEGID         UBIN(12)  UNAL,
  389            2 V REDEF A,
  390              3 VALUE       UBIN(36) UNAL,    /* Value if C=1                       */
  391              3 *           UBIN(36) UNAL,
  392            2 S  REDEF  A,                    /* Value if C=1                       */
  393              3 *         UBIN(24) UNAL,
  394              3 SEGID     UBIN(12) UNAL,
  395              3 *         UBIN     UNAL;
  396      %MEND;
  397      /* Macro to generate a template for a 2-WORD nsa vector */
  398      %MACRO VECTOR(NAME=B$VECTOR,STCLASS=BASED,INT_U=" ",INT_B=" ");
  399      %LSET LISTDIR='0'B;
  400      %LSET LISTEXP='1'B;
  401      %LSET LISTMAC='1'B;
  402      %LSET LISTSUB='1'B;
  403      %BANNER(ARG=TEMPLATE FOR 2-WORD NSA VECTOR);
  404      %VECTOR_(NAME=NAME,STCLASS=STCLASS,INT_U=INT_U,INT_B=INT_B);
  405      %MEND;
  406      %MACRO VECTOR_(NAME=B$VECTOR,STCLASS=BASED,INT_U=" ",INT_B=" ");
  407      DCL 1 NAME STCLASS ALIGNED,
15:22 JUL 28 '97 VY_MACRO_C.:E05SI                                         12   
  408            2 VSIZE UBIN(20) UNAL INT_U,      /* Size field of vector               */
  409            2 FLAGS BIT(9) UNAL INT_B,        /* FLAGS...                           */
  410            2 V BIT(2) UNAL INT_B,            /* Vector type field                  */
  411            2 Z5 BIT(5) UNAL INT_B,           /* Unused                             */
  412            2 F,
  413              3 BASE UBIN(20) UNAL INT_U,     /* Base for vector                    */
  414              3 Z4 BIT(4) UNAL INT_B,         /* Unused                             */
  415              3 SEGID UBIN(12) UNAL INT_U,    /* Segid                              */
  416            2 P       REDEF     F,            /* To extract the pointer             */
  417              3 POINTER          PTR UNAL;
  418      %MEND;
  419      %MACRO ENTRIES;
  420      DCL VYE$ERROR       ENTRY(4);
  421      DCL VYE$ERR         ENTRY(3);
  422      DCL VYE$MERC        ENTRY;
  423      DCL VYE$ERRMSG      ENTRY(1);
  424      DCL VYR$READ        ENTRY( 3 ) ALTRET;
  425      DCL VYW$WRITE       ENTRY( 3 ) ALTRET;
  426      DCL VYW$WRITE_DO    ENTRY( 2 ) ALTRET;
  427      DCL VYD$B2C         ENTRY( 5 );
  428      DCL VYD$C2B         ENTRY( 3 );
  429      DCL VYA$GET         ENTRY( 3 );
  430      DCL VYF$FREE        ENTRY( 3 );
  431      DCL VYQ$SORT        ENTRY( 7 );
  432      DCL VYY$YESNO       ENTRY( 1 );
  433      %MEND;
  434      %MACRO FILE;
  435      DCL 1 F$NAME_                 BASED,
  436            2 COUNT             UBIN( 9) UNAL,
  437            2 CHARS             CHAR( F$NAME_.COUNT ) UNAL;
  438      DCL F$ACCT_         CHAR(@F_ACCT_SIZEC) BASED;
  439      DCL F$ACCT_A(0:@F_ACCT_SIZEC1)     CHAR(1)   BASED;
  440      DCL F$PASS_         CHAR(@F_PASS_SIZEC) BASED;
  441      DCL F$PASS_A(0:@F_PASS_SIZEC1)     CHAR(1)   BASED;
  442      %MEND;
  443      %MACRO O_KEY_BUF(
  444            KEYBUF=KEYBUF,
15:22 JUL 28 '97 VY_MACRO_C.:E05SI                                         13   
  445            STCLASS="STATIC",
  446            INT="  ");
  447      DCL 1 KEYBUF ALIGNED STCLASS ,
  448             2 FORM0 ,
  449              3 COUNT       UBIN( 9)  UNAL INT,
  450              3 CHARS       CHAR(512) UNAL,
  451            2 FORM1        REDEF     FORM0,
  452              3 COUNT       UBIN( 9)  UNAL,
  453              3 O777        UBIN( 9)  UNAL,   /* <- '777'O                          */
  454              3 UTS         UBIN(36)  UNAL,
  455              3 REC_TYPE    UBIN( 9)  UNAL,
  456              3 PAGE#       UBIN( 9)  UNAL,
  457              3 *           CHAR(505),
  458            2 FORM2        REDEF     FORM0,
  459              3 COUNT       UBIN( 9)  UNAL,
  460              3 O777        UBIN( 9)  UNAL,   /* <- '777'O                          */
  461              3 UTS         UBIN(36)  UNAL,
  462              3 D10         UBIN( 9)  UNAL,   /* <- 10                              */
  463              3 SECT#       UBIN(18)  UNAL,
  464              3 OFFSET      UBIN(18)  UNAL,
  465              3 STYPE       UBIN( 9)  UNAL,
  466              3 SEQUENCE    UBIN( 9)  UNAL,
  467              3 *           CHAR(500) ;
  468            %MEND;
  469      %MACRO R_KEY_BUF(
  470            KEYBUF=KEYBUF,
  471            STCLASS="STATIC",
  472            INT=" ");
  473      DCL 1 KEYBUF                        STCLASS,
  474            2 FORM0                  ALIGNED,
  475              3 COUNT       UBIN( 9)  UNAL INT,
  476              3 CHARS       CHAR( 4)  UNAL,
  477              3 *           CHAR( 7)  UNAL,
  478            2 FORM1        REDEF     FORM0,
  479              3 COUNT       UBIN( 9)  UNAL,
  480              3 REC_TYPE    UBIN( 9)  UNAL,
  481              3 NODE#       UBIN(18)  UNAL,
15:22 JUL 28 '97 VY_MACRO_C.:E05SI                                         14   
  482              3 OFFSET      UBIN(18)  UNAL,
  483              3 *           CHAR( 6)  UNAL,
  484            2 FORM2        REDEF     FORM0,
  485              3 COUNT       UBIN( 9)  UNAL,
  486              3 O777        UBIN( 9)  UNAL,   /* <- '777'O                          */
  487              3 NODE#       UBIN(18)  UNAL,
  488              3 P_ENTDEF    UBIN(18)  UNAL,
  489              3 REC_TYPE    UBIN( 9)  UNAL,
  490              3 PAGE#       UBIN( 9)  UNAL,
  491              3 *           CHAR( 4)  UNAL;
  492            %MEND;
  493      %MACRO KEY_VARS(
  494            KEYVARS=KEYVARS,
  495            STCLASS=STATIC,
  496            INT_C=" ",
  497            INT1=" ",
  498            INT=" ");
  499      DCL 1 KEYVARS                  STCLASS,
  500            2 KFILE                  UBIN(36) ALIGNED INT,
  501            2 KTYPE                  SBIN WORD ALIGNED INT1,
  502            2 KRTYPE                 UBIN(36) ALIGNED INT,
  503            2 KPAGE#                 SBIN WORD ALIGNED INT1,
  504            2 KOFSET                 UBIN(36) ALIGNED INT,
  505            2 KSTYPE                 UBIN(36) ALIGNED INT,
  506            2 KSEQUENCE              SBIN WORD ALIGNED INT1,
  507            2 KSECT#                 UBIN(36) ALIGNED INT,
  508            2 KNODE#                 UBIN(36) ALIGNED INT,
  509            2 KPEDX                  UBIN(36) ALIGNED INT,
  510            2 KATYPE                 SBIN WORD ALIGNED INT1,
  511            2 OUNAME,
  512              3 COUNT                UBIN(9) UNAL INT,
  513              3 CHARS                CHAR(511) UNAL INT_C,
  514            2 FILE                   ALIGNED,
  515              3 OFNAME                ALIGNED,
  516                4 COUNT                UBIN(9)   UNAL INT,
  517                4 CHARS                CHAR(40)  UNAL INT_C,
  518              3 RFNAME                ALIGNED,
15:22 JUL 28 '97 VY_MACRO_C.:E05SI                                         15   
  519                4 COUNT                UBIN(9)   UNAL INT,
  520                4 CHARS                CHAR(40)  UNAL INT_C;
  521      %MEND;
  522              %MACRO CHECK( SEV = SEV );
  523              IF VY_ERR_SEV < SEV THEN VY_ERR_SEV = SEV;
  524      %MEND;
  525
  526              %MACRO SCREAM( ERR#=0, LEVEL=%%@E$S_VY, MID=@E$DEFAULT_MID_VY, AUX=0 );
  527              CALL VYE$ERROR( ERR#, LEVEL, AUX, MID );
  528      %MEND;
  529
  530      %MACRO NUMBER(
  531                NUM1="VY_DUMMY",
  532                NUM2="VY_DUMMY",
  533                NUM3="VY_DUMMY",
  534                BUF1 ="VY_EFIELD1.CHARS_A",
  535                BUF2 ="VY_EFIELD2.CHARS_A",
  536                BUF3 ="VY_EFIELD3.CHARS_A",
  537                SIZE1=2,SIZE2=2,SIZE3=2,
  538                BASE1 = 10,
  539                BASE2 = 10,
  540                BASE3 = 10 );
  541      %CHARTEXT('/*');
  542            SIZE1 SIZE2 SIZE3
  543      %CHARTEXT('*/');
  544              %LSET STR = CONCAT( TEXTCHAR(NUM1), '        ' );
  545              %IF (SUBSTR( STR, 0, 8 ) ~= 'VY_DUMMY');
  546              CALL VYD$B2C( BUF1, 0, -1, NUM1, BASE1 );
  547              %ENDIF;
  548              %LSET STR = CONCAT( TEXTCHAR(NUM2), '        ' );
  549              %IF (SUBSTR( STR, 0, 8 ) ~= 'VY_DUMMY');
  550              CALL VYD$B2C( BUF2, 0, -2, NUM2, BASE2 );
  551              %ENDIF;
  552              %LSET STR = CONCAT( TEXTCHAR(NUM3), '        ' );
  553              %IF (SUBSTR( STR, 0, 8 ) ~= 'VY_DUMMY');
  554              CALL VYD$B2C( BUF3, 0, -3, NUM3, BASE3 );
  555              %ENDIF;
15:22 JUL 28 '97 VY_MACRO_C.:E05SI                                         16   
  556      %MEND;
  557              %MACRO IMAGE_BUFFERS(
  558                NAME=VY_IMAGE,
  559                STCLASS=STATIC,
  560                INT_PTR=" ",
  561                INT_UBIN=" ",
  562                INT_SBIN=" ");
  563      DCL 1 NAME           ALIGNED        STCLASS,
  564            2 CPAGE#_A(0:1) SBIN WORD ALIGNED INT_SBIN, /* Current page # in buffer # */
  565            2 CPAGE# REDEF CPAGE#_A,
  566              3 BUF0                  SBIN WORD ALIGNED,
  567              3 BUF1                  SBIN WORD ALIGNED,
  568            2 START_A$(0:1) PTR ALIGNED INT_PTR, /* Pointer to start of buffer #    */
  569            2 START$ REDEF START_A$,
  570              3 BUF0$                 PTR       ALIGNED,
  571              3 BUF1$                 PTR       ALIGNED,
  572            2 STOP_A$(0:1)           PTR       ALIGNED INT_PTR,
  573            2 STOP$  REDEF STOP_A$,           /* Pointer to end of buffer #         */
  574              3 BUF0$                 PTR       ALIGNED,
  575              3 BUF1$                 PTR       ALIGNED,
  576            2 NODE_A$(0:1) PTR ALIGNED INT_PTR, /* Pointer to node  of buffer #     */
  577            2 NODE$  REDEF NODE_A$,
  578              3 BUF0$                 PTR       ALIGNED,
  579              3 BUF1$                 PTR       ALIGNED,
  580            2 BEGIN$                 PTR       ALIGNED,
  581            2 END$                   PTR       ALIGNED,
  582            2 SPAGE#                 UBIN(36)  ALIGNED INT_UBIN,
  583            2 EPAGE#                 UBIN(36)  ALIGNED INT_UBIN;
  584      %MEND;
  585      %MACRO BIT_MAP(
  586            NAME=VY_BIT_MAP,
  587            STCLASS=STATIC,
  588            INT_BIT=" ");
  589      DCL NAME(0:@MAX_IS_K1)         BIT(1)    UNAL STCLASS   INT_BIT;
  590      %MEND;
  591      %MACRO MOVE_TMPLT(
  592            TNAME = VY$TARGET_B,
15:22 JUL 28 '97 VY_MACRO_C.:E05SI                                         17   
  593            TCOUNT = VY_TARGET_COUNT,
  594            TSTCLASS ="BASED",
  595            SNAME = VY$SOURCE_B,
  596            SCOUNT = VY_SOURCE_COUNT,
  597            SSTCLASS ="BASED",
  598            TNAME_C = VY$TARGET_C,
  599            TCOUNT_C = VY_TARGET_COUNT,
  600            TSTCLASS_C ="BASED",
  601            SNAME_C = VY$SOURCE_C,
  602            SCOUNT_C = VY_SOURCE_COUNT,
  603            SSTCLASS_C ="BASED");
  604      DCL TNAME           BIT( TCOUNT ) ALIGNED    TSTCLASS;
  605      DCL SNAME           BIT( SCOUNT ) ALIGNED    SSTCLASS;
  606      DCL TNAME_C         CHAR( TCOUNT_C ) ALIGNED TSTCLASS_C;
  607      DCL SNAME_C         CHAR( SCOUNT_C ) ALIGNED SSTCLASS_C;
  608      %MEND;
  609      %MACRO ERROR_IT;
  610              UNWIND TO VY_UNWIND;
  611      %MEND;
  612              %MACRO ENTRIES_IO;
  613      DCL VYF$OPEN        ENTRY(4)    ALTRET;
  614      DCL VYF$CLOSE       ENTRY(3);
  615      DCL VYU$PREAD       ENTRY(12)  ALTRET;
  616      DCL VYK$KEY         ENTRY(4);
  617      DCL VYI$READ        ENTRY(5)  ALTRET;
  618      DCL VYI$WRITE       ENTRY(5)  ALTRET;
  619      DCL VYI$WRITE_C     ENTRY(5)  ALTRET;
  620      %MEND;
  621      %MACRO VY$LLIST;
  622      %LSET LISTDIR='0'B;
  623      %LSET LISTEXP='1'B;
  624      %LSET LISTMAC='1'B;
  625      %BANNER(ARG=VY$LLIST);
  626      %VY$LLIST_;
  627      %MEND;
  628      %MACRO VY$LLIST_;
  629      DCL 1 VY$LLIST                BASED     ALIGNED,
15:22 JUL 28 '97 VY_MACRO_C.:E05SI                                         18   
  630            2 LINK$                  PTR  ALIGNED,
  631            2 ITEM$                  PTR  ALIGNED;
  632      %MEND;
  633      %MACRO VY$LLIST_SC(NAME=VY$LLIST_SC);
  634      %LSET LISTDIR='0'B;
  635      %LSET LISTEXP='1'B;
  636      %LSET LISTMAC='1'B;
  637      %BANNER(ARG=VY$LLIST_SC);
  638      %VY$LLIST_SC_(NAME=NAME);
  639      %MEND;
  640      %MACRO VY$LLIST_SC_(
  641            NAME=VY$LLIST_SC);
  642      DCL 1 NAME               BASED     ALIGNED,
  643            2 LINK$             PTR,
  644            2 BASE$             PTR,
  645            2 COUNT             UBIN(36);
  646      %MEND;
  647      %MACRO VY$WORD(PTR=" ");
  648      %LSET LISTDIR='0'B;
  649      %LSET LISTEXP='1'B;
  650      %LSET LISTMAC='1'B;
  651      %BANNER(ARG=VY$WORD);
  652      %VY$WORD_(PTR=PTR);
  653      %MEND;
  654      %MACRO VY$WORD_(PTR=" ");
  655      DCL VY$WORD_A(0:0)       UBIN(36) ALIGNED    BASED PTR;
  656      DCL VY$HALF_A(0:0)       UBIN(18) HALIGNED   BASED PTR;
  657      DCL VY$BYTE_A(0:0)       UBIN( 9) CALIGNED   BASED PTR;
  658      DCL VY$CHAR_A(0:0)       CHAR( 1) UNAL       BASED PTR;
  659      /**/
  660      DCL VY$WORD_SBIN_A(0:0)  SBIN WORD ALIGNED   BASED     PTR;
  661      DCL VY$HALF_SBIN_A(0:0)  SBIN HALF HALIGNED  BASED     PTR;
  662      DCL VY$BYTE_SBIN_A(0:0)  SBIN HALF CALIGNED  BASED     PTR;
  663      DCL VY$BIT_A(0:0)        BIT(36)   ALIGNED   BASED     PTR;
  664      %MEND;
  665      %MACRO VY$SC(LINK_NAME=VY$SC,EXTERNAL_NAME=VY$SECT);
  666      %LSET LISTDIR='0'B;
15:22 JUL 28 '97 VY_MACRO_C.:E05SI                                         19   
  667      %LSET LISTEXP='1'B;
  668      %LSET LISTMAC='1'B;
  669      %LSET LISTSUB='1'B;
  670      %VY$SC_(LINK_NAME=LINK_NAME,EXTERNAL_NAME=EXTERNAL_NAME);
  671      %MEND;
  672      %MACRO  VY$SC_(LINK_NAME=VY$SC,EXTERNAL_NAME=VY$SECT);
  673      %BANNER(ARG=LINK_NAME);
  674      DCL 1 LINK_NAME               BASED     ALIGNED,
  675            2 TYPE              UBIN(9)   UNAL,
  676            2 EMPTY             BIT (1)   UNAL,
  677            2 ATTR                        UNAL,
  678              3 INT              UBIN(2)   UNAL,
  679              3 SEGMENT          BIT(1)    UNAL,
  680              3 ALL              BIT(1)    UNAL,
  681              3 PRE_DCB          BIT(1) UNAL, /* '1'B => true; '0'B => false        */
  682              3 MES_INIT         BIT (1)   UNAL,
  683              3 ALIGN            UBIN(2)   UNAL,
  684            2 ADDRESS           UBIN(18)  UNAL,
  685            2 NAME_DISP         SBIN HALF UNAL,
  686            2 SIZE              UBIN(18)  UNAL,
  687            2 NODE#             UBIN(18)  UNAL,
  688            2 COM_LINK          UBIN(18)  UNAL;
  689      %BANNER(ARG=EXTERNAL_NAME);
  690      DCL 1 EXTERNAL_NAME       BASED     ALIGNED,
  691            2 TYPE              UBIN(9)   UNAL,
  692            2 EMPTY             BIT (1)   UNAL,
  693            2 ATTR                        UNAL,
  694              3 INT              UBIN(2)  UNAL,
  695              3 SEGMENT          BIT (1)  UNAL,
  696              3 *                UBIN(3)  UNAL,
  697              3 ALIGN            UBIN(2)  UNAL,
  698            2 SIZE              UBIN(18)  UNAL,
  699            2 NAME_DISP         SBIN HALF UNAL,
  700            2 SEG_NPOINTER      UBIN(18)  UNAL;
  701      %MEND;
  702      %MACRO MAK_DUP(PTR=PTR$);
  703              IF RTYPE = @DD AND WHICH$ -> VYD$TMPLT.I.C THEN DO; /* A constant data def */
15:22 JUL 28 '97 VY_MACRO_C.:E05SI                                         20   
  704                 WHICH$ -> VYD$TMPLT.I.MULTIPLY = @YES_B; /* Also here              */
  705                 END;
  706              ELSE DO;
  707                 WHICH$ -> VYD$TMPLT.I.B.MULTIPLY = @YES_B; /* Also here            */
  708                 END;
  709              SAVE_NAME_DISP = PTR -> VYD$TMPLT.I.NAME_DISP;
  710              PTR -> VYD$TMPLT = WHICH$ -> VYD$TMPLT;
  711              PTR -> VYD$TMPLT.I.NAME_DISP = SAVE_NAME_DISP;
  712      %MEND;
  713              %MACRO DUP_STATS;
  714              VY_ERRORS.MULTIPLE = VY_ERRORS.MULTIPLE + 1;
  715      %MEND;
  716              %MACRO VYR$TMPLT(NAME=VYR$TMPLT);
  717              %LSET LISTDIR='0'B;
  718              %LSET LISTEXP='1'B;
  719              %LSET LISTMAC='1'B;
  720              %LSET LISTSUB='1'B;
  721              %VYR$TMPLT_(NAME=NAME);
  722      %MEND;
  723              %MACRO VYR$TMPLT_(NAME=VYR$TMPLT);
  724               %BANNER( ARG=VYR$TMPLT );
  725      DCL 1 NAME                                         BASED ALIGNED,
  726            2 NAME_DISP              UBIN(18)       UNAL,
  727            2 ER                                    UNAL,
  728              3 SREF                  BIT (1)        UNAL,
  729              3 A                     UBIN(1)        UNAL,
  730              3 I                     BIT(1)         UNAL,
  731              3 CST                   UBIN(4)        UNAL,
  732              3 NP                    UBIN(11)       UNAL,
  733            2 CAND    REDEF     ER,
  734              3 SREF                  BIT (1)        UNAL,
  735              3 READ_ONLY             BIT(1)         UNAL,
  736              3 STATE                 BIT(1)         UNAL,
  737              3 *                     UBIN(15)       UNAL,
  738            2 OU_NAME_DISP REDEF     ER,
  739              3 SREF                  BIT (1)        UNAL,
  740              3 READ_ONLY             BIT(1)         UNAL,
15:22 JUL 28 '97 VY_MACRO_C.:E05SI                                         21   
  741              3 GOT                   BIT(1)         UNAL,
  742              3 NAME_DISP             UBIN(15)       UNAL,
  743            2 SAT     REDEF     ER,
  744              3 BREF                  BIT ( 1)       UNAL,
  745              3 *                     BIT (17)       UNAL;
  746      %BANNER( ARG=VYR$SAT );
  747      DCL 1 VYR$SAT                 ALIGNED   BASED,
  748            2 VALUE        UBIN(36)  ALIGNED,
  749            2 SEG   REDEF  VALUE,
  750              3 OFFSET     UBIN(18)  UNAL,
  751              3 *          BIT(6)    UNAL,
  752              3 SEGID      UBIN(12)  UNAL,
  753            2 BELOW        BIT(1)    UNAL,
  754            2 *            BIT(17)   UNAL,
  755            2 NODE#        UBIN(18)  UNAL;
  756      %MEND;
  757              %MACRO CC( LINES = 1 );
  758              VY_EBUF.CHARS = ' ';
  759              DO VY_DUMMY = 1 TO LINES;
  760                 CALL VYW$WRITE( VY_EBUF.CHARS, 2, 0 );
  761                 END;
  762      %MEND;
  763              %MACRO M_NUMBER_DCL(
  764                THREE$BITS=THREE$BITS,
  765                WORK_BUF=WORK_BUF,
  766                SIG=SIG,
  767                K_INDEX=K_INDEX,
  768                L_INDEX=L_INDEX);
  769      DCL THREE$BITS(0:11)          BIT(3)    UNAL BASED;
  770      DCL 1 WORK_BUF           ALIGNED   STATIC,
  771            2 COMPOSITE         ALIGNED,
  772              3 H                UBIN(6)   UNAL INIT( BITBIN('06'O) ),
  773              3 UBN              UBIN(3)   UNAL,
  774            2 CHR REDEF COMPOSITE    CHAR(1) ALIGNED;
  775      DCL SIG                  BIT(1)    ALIGNED   STATIC    INIT('0'B);
  776      DCL K_INDEX              UBIN(36)  ALIGNED   AUTO;
  777      DCL L_INDEX              UBIN(36)  ALIGNED   AUTO;
15:22 JUL 28 '97 VY_MACRO_C.:E05SI                                         22   
  778      %MEND;
  779      %MACRO M_NUMBER(
  780                 VAR=VAR,
  781                 START=START,
  782                 FLD_SIZE=6,
  783                 THREE$BITS=THREE$BITS,
  784                 WORK_BUF=WORK_BUF,
  785                 SIG=SIG,
  786                 K_INDEX=K_INDEX,
  787                 L_INDEX=L_INDEX);
  788              VAR
  789                SIG ='0'B;
  790              DO K_INDEX = 0 TO FLD_SIZE -1 ;
  791                 L_INDEX = K_INDEX + START;
  792                 WORK_BUF.COMPOSITE.UBN = BITBIN( R$ -> THREE$BITS(K_INDEX) );
  793                 IF WORK_BUF.COMPOSITE.UBN = 0 THEN DO;
  794                    IF SIG THEN VY_MBUF.CHARS_A(L_INDEX) = '0'; /* Have significance start */
  795                    ELSE IF K_INDEX = FLD_SIZE - 1 THEN VY_MBUF.CHARS_A(L_INDEX) = '0';
  796                       ELSE VY_MBUF.CHARS_A(L_INDEX) =' ';
  797                    END;
  798                 ELSE DO;
  799                    SIG = '1'B;
  800                    VY_MBUF.CHARS_A(L_INDEX) = WORK_BUF.CHR;
  801                    END;
  802                 END;                         /* Do k = 0 to FLD_SIZE - 1 ;         */
  803      %MEND;
  804              %MACRO M_WRITE(
  805                             BEFORE=" ",
  806                             CLEAR="VY_MBUF.CHARS='A ';",
  807                             DIAG(YES='1'B,NO='0'B)='0'B,
  808                             ZERO="VY_CTAB=0;");
  809              BEFORE
  810              CALL M$WRITE( VY_MAP_LO_FPT_WRITE)      ALTRET(MAP_IO_ERROR);
  811              %IF DIAG='1'B;
  812              IF VY_LO_DO_DIFFER THEN CALL M$WRITE(DIAG_FPT_WRITE) ALTRET(MAP_IO_ERROR);
  813              %ENDIF;
  814              CLEAR
15:22 JUL 28 '97 VY_MACRO_C.:E05SI                                         23   
  815              ZERO
  816      %MEND;
  817              %MACRO MOVE_NAME_DCL(
  818                                 T$VAR=T$VAR,
  819                                 MOVE_SIZE=MOVE_SIZE,
  820                                 SOURCE$=SOURCE$);
  821      DCL MOVE_SIZE           UBIN  ALIGNED   AUTO;
  822      DCL T$VAR             CHAR(MOVE_SIZE)   BASED;
  823      DCL SOURCE$              PTR  ALIGNED   AUTO;
  824      %MEND;
  825      %MACRO MOVE_NAME(
  826            SOURCE$ =SOURCE$,
  827            PTR$="P$ ->",
  828            TABBER=TABBER,
  829            REF1="VY$TMPLT.A(2)");
  830              SOURCE$ = PINCRW( NAME$, PTR$ REF1 );
  831              CALL INSERT(VY_MBUF.CHARS, TABBER, SOURCE$->B$DNAME.COUNT, SOURCE$->B$DNAME.TEXT);
  832      %MEND;
  833              %MACRO WR_LIT(DIAG(YES='1'B,NO='0'B)='0'B, MES1=MES1);
  834              VY_MAP_LIT_LO_FPT_WRITE.BUF_ = VECTOR( MES1 );
  835              CALL M$WRITE( VY_MAP_LIT_LO_FPT_WRITE ) ALTRET(MAP_IO_ERROR);
  836              %IF  DIAG='1'B;
  837              IF VY_LO_DO_DIFFER  THEN DO;
  838                  DIAG_LIT_FPT_WRITE.BUF_ = VECTOR( MES1 );
  839                  CALL M$WRITE( DIAG_LIT_FPT_WRITE ) ALTRET(MAP_IO_ERROR);
  840                  END;
  841              %ENDIF;
  842                %MEND;
  843              %MACRO BUMP_CTAB_DCL(
  844                LAST_TAB=LAST_TAB);
  845      DCL LAST_TAB             UBIN(36)  ALIGNED   AUTO;
  846      %MEND;
  847      %MACRO BUMP_CTAB(
  848                     TAB_A=VY_MAP_TABS_A,
  849                     SPACE=11,
  850                     INC=INC);
  851              LAST_TAB = TAB_A(VY_CTAB) + INC + SPACE;
15:22 JUL 28 '97 VY_MACRO_C.:E05SI                                         24   
  852              DO WHILE ( LAST_TAB > TAB_A( VY_CTAB ) );
  853                 VY_CTAB = VY_CTAB + 1;
  854                 END;
  855      %MEND;
  856              %MACRO MOVE_PAGE_DCL(
  857                MOVE_PAGE_REMAIN=MOVE_PAGE_REMAIN,
  858                MOVE_TARGET$=MOVE_TARGET$,
  859                MOVE_ADR_TEMP=MOVE_ADR_TEMP,
  860                MOVE_SRC$=MOVE_SRC$,
  861                MOVE_TEMP=MOVE_TEMP);
  862      DCL MOVE_PAGE_REMAIN          SBIN WORD ALIGNED   AUTO;
  863      DCL MOVE_TARGET$              PTR       ALIGNED   AUTO;
  864      DCL MOVE_ADR_TEMP             UBIN(36)  ALIGNED   AUTO;
  865      DCL MOVE_SRC$                 PTR       ALIGNED   AUTO;
  866      DCL MOVE_TEMP                 UBIN(36)  ALIGNED   AUTO;
  867      %MEND;
  868      %MACRO MOVE_PAGE(
  869            MOVE_SOURCE$=MOVE_SOURCE$,
  870            MOVE_UNIT=@BUF_SIZE,
  871            MOVE_PAGE_SIZE=MOVE_PAGE_SIZE,
  872            MOVE_TARGET$=MOVE_TARGET$,
  873            MOVE_BUFTYP=MOVE_BUFTYP,
  874            MOVE_ADR=MOVE_ADR,
  875            MOVE_NODE#=MOVE_NODE#,
  876            MOVE_PAGE_REMAIN=MOVE_PAGE_REMAIN,
  877            MOVE_SRC$=MOVE_SRC$,
  878            MOVE_TEMP=MOVE_TEMP);
  879      /**/
  880      /**/
  881              MOVE_ADR_TEMP = MOVE_ADR;
  882              MOVE_PAGE_REMAIN = MOVE_PAGE_SIZE;
  883              MOVE_SRC$ = MOVE_SOURCE$;
  884              DO WHILE( MOVE_PAGE_REMAIN > 0 );
  885                 IF MOVE_PAGE_REMAIN >= MOVE_UNIT THEN MOVE_TEMP = MOVE_UNIT;
  886                 ELSE MOVE_TEMP = MOVE_PAGE_REMAIN;
  887                 CALL VYU$SETUP( MOVE_TARGET$, MOVE_BUFTYP, MOVE_ADR_TEMP, MOVE_TEMP, MOVE_NODE# );
  888                 VY_TARGET_COUNT = MOVE_TEMP * @CHAR_WORD;
15:22 JUL 28 '97 VY_MACRO_C.:E05SI                                         25   
  889                 VY_SOURCE_COUNT = VY_TARGET_COUNT;
  890                 MOVE_TARGET$ -> VY$TARGET_C = MOVE_SRC$ -> VY$SOURCE_C;
  891                 MOVE_SRC$  = PINCRW( MOVE_SRC$,  MOVE_TEMP );
  892                 MOVE_PAGE_REMAIN = MOVE_PAGE_REMAIN - MOVE_TEMP;
  893                 MOVE_ADR_TEMP = MOVE_ADR_TEMP + MOVE_TEMP;
  894                 END;
  895      %MEND;
  896              %MACRO TEXTC_SIZEW( CNT   = 0 );
  897            ( CNT   + @CHAR_WORD ) / @CHAR_WORD
  898      %MEND;
  899              %MACRO TEXTH_SIZEW( CNT   = 0 );
  900            ( CNT   + @CHAR_WORD + 1 ) / @CHAR_WORD
  901      %MEND;
  902              %MACRO VY$DCB;
  903      DCL 1 VY$DCB                       ALIGNED   BASED,
  904            2 A(0:@DCB_SIZE)              ALIGNED,
  905              3 *                          ALIGNED   UBIN WORD,
  906            2 I  REDEF     A,
  907              3 DUMMY(0:3)                 ALIGNED   UBIN WORD,
  908              3 BLANKS                     ALIGNED   CHAR(64),
  909              3 DUMMY1(0:47)               ALIGNED   UBIN WORD,
  910      /* End of actual DCB; now for NAME: Just one word in this description */
  911              3 DCB_NAME                   ALIGNED   UBIN WORD;
  912      /* Dcb name description */
  913      DCL 1 VY$DCB$T$C                   ALIGNED   BASED,
  914            2 LOGICAL_DCB_NUM             UBIN(3)   UNAL,
  915            2 INT                         BIT(1)    UNAL,      /* '1'=> no relocation
  916                                                                      '0' => relocation */
  917            2 COUNT                       UBIN(5)   UNAL,
  918            2 CHARS                       CHAR( VY$DCB$T$C.COUNT ) UNAL;
  919      %MEND;
  920      %MACRO VY$PTR$;
  921      DCL VY$PTR$(0:0)         PTR  ALIGNED   BASED( VY_SC_X_NODE$ );
  922                                    /* Section allocated NODE# to node pointer map  */
  923      %MEND;
  924      %MACRO VY$BREF(
  925            NAME=VY$BREF,
15:22 JUL 28 '97 VY_MACRO_C.:E05SI                                         26   
  926            PTR="(VY_NEXT_BREF$)");
  927      DCL 1 NAME                    ALIGNED     BASED PTR,
  928            2 WORD_A(0:1)       UBIN(36)  ALIGNED,
  929            2 I  REDEF     WORD_A         ALIGNED,
  930              3 WORD0            UBIN(36)  ALIGNED,
  931              3 WORD1            UBIN(36)  ALIGNED;
  932      %MEND;
  933      %MACRO INHIBIT(
  934            INDEX=INDEX,
  935            GEN=" ",
  936            NEG=" ");
  937              GEN
  938                IF VY_SPC.FAULT > 0 THEN VY_BIAS.I.DATA = VY_BIAS.I.DATA
  939                -
  940                @SPC_FAULT_AREA_SIZEW;
  941              NEG
  942                VY_SPC.FAULT = -1;
  943              GEN
  944                IF VY_SPC.TCBSIZE > 0 THEN VY_BIAS.I.DATA = VY_BIAS.I.DATA - VY_SPC.TCBSIZE;
  945              NEG
  946                VY_SPC.TCBSIZE = -1;
  947              DO INDEX = 0 TO SIZEW( VY_SPC.B$.NAME_A$ ) - 1;
  948                 GEN
  949                   IF VY_SPC.B$.MINE_A( INDEX ) = 1 THEN DO;
  950                 VY_BIAS.I.RPROC = VY_BIAS.I.RPROC - 1;
  951                 NEG
  952                   VY_SPC.B$.SKIP_A( INDEX ) = @YES;
  953                 VY_SPC.B$.MINE_A( INDEX ) = @NO;
  954                 GEN
  955                   IF INDEX = 1 THEN DO;
  956                 VY_BIAS.I.DATA = VY_BIAS.I.DATA - @SPC_DELTA_AREA_SIZEW;
  957                 VY_SPC.DELTA_DATA_AREA = 0;
  958                 END;
  959              END;
  960              NEG
  961                END;
  962              GEN
15:22 JUL 28 '97 VY_MACRO_C.:E05SI                                         27   
  963                IF VY_BIAS.I.DATA < 0 THEN VY_BIAS.I.DATA = 0;
  964              IF VY_BIAS.I.RPROC < 0 THEN VY_BIAS.I.RPROC = 0;
  965              NEG
  966      %MEND;
  967              %MACRO ALLOCATE(
  968                PTR$=PTR$,
  969                TYPE=TYPE,
  970                SIZE=SIZE);
  971              IF SIZE <= VY_M_ALL(TYPE) - VY_M_FREE(TYPE) THEN DO;
  972                 PTR$ = PINCRW( VY_M_BASE_PTR(TYPE), VY_M_FREE(TYPE) );
  973                 VY_M_FREE(TYPE) = VY_M_FREE(TYPE) + SIZE;
  974                 END;
  975              ELSE CALL VYA$GET( PTR$, TYPE, SIZE );
  976      %MEND;
  977            %MACRO OPTIONS(NAME=VY,STCLASS=SYMREF,DTYPE="UBIN(36)");
  978      %LSET LISTEXP='1'B;
  979      %LSET LISTSUB='1'B;
  980      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'         ');
  981      %LSET STR1=CONCAT(TEXTCHAR(DTYPE),'     ');
  982      %IF (SUBSTR(STR1,0,3)='BIT');
  983                 %LSET ATYPE=CHARTEXT('UNAL');
  984                 %LSET MAP_HB=35;
  985                 %LSET DUPL_HB=35;
  986                 %LSET SEV_HB=35;
  987                 %LSET PRI_HB=35;
  988      %ELSE;
  989      %LSET ATYPE=CHARTEXT('ALIGNED');
  990      %LSET MAP_HB=9;
  991      %LSET DUPL_HB=2;
  992      %LSET SEV_HB=0;
  993      %LSET PRI_HB=3;
  994      %ENDIF;
  995      %IF (SUBSTR(STR,0,6)='STATIC') OR
  996            (SUBSTR(STR,0,8)='CONSTANT') OR
  997            (SUBSTR(STR,0,3)='EXT');
  998            %LSET INIT=CHARTEXT('INIT');
  999            %IF ( SUBSTR(STR1,0,3)='PTR');
15:22 JUL 28 '97 VY_MACRO_C.:E05SI                                         28   
 1000                  %LSET I_MAP    = CHARTEXT('ADDR(N_MAP_KEY_WORD)');
 1001                  %LSET I_DUPLICATE  = CHARTEXT('ADDR(N_DUPLICATE_KEY_WORD)');
 1002                  %LSET I_SEVERITY  = CHARTEXT('ADDR(N_SEVERITY_KEY_WORD)');
 1003                  %LSET I_NODEBUG  = CHARTEXT('ADDR(N_NODEBUG_KEY_WORD)');
 1004                  %LSET I_VALUE  = CHARTEXT('ADDR(NIL)');
 1005                  %LSET I_DEF    = CHARTEXT('ADDR(N_DEF_KEY_WORD)');
 1006                  %LSET I_REF    = CHARTEXT('ADDR(N_REF_KEY_WORD)');
 1007                  %LSET I_EDEF   = CHARTEXT('ADDR(N_EDEF_KEY_WORD)');
 1008                  %LSET I_EREF   = CHARTEXT('ADDR(N_EREF_KEY_WORD)');
 1009                  %LSET I_DDEF   = CHARTEXT('ADDR(N_DDEF_KEY_WORD)');
 1010                  %LSET I_DREF   = CHARTEXT('ADDR(N_DREF_KEY_WORD)');
 1011                  %LSET I_SDEF   = CHARTEXT('ADDR(N_SDEF_KEY_WORD)');
 1012                  %LSET I_SREF   = CHARTEXT('ADDR(N_SREF_KEY_WORD)');
 1013                  %LSET I_INQUIRE  = CHARTEXT('ADDR(N_INQUIRE_KEY_WORD)');
 1014                  %LSET I_OVERWRITE  = CHARTEXT('ADDR(N_OVERWRITE_KEY_WORD)');
 1015                  %LSET I_ERR    = CHARTEXT('ADDR(N_ERROR_KEY_WORD)');
 1016                  %LSET I_VAL    = CHARTEXT('ADDR(NIL)');
 1017      DCL N_MAP_KEY_WORD UBIN(36) ALIGNED SYMREF;
 1018      DCL N_DUPLICATE_KEY_WORD UBIN(36) ALIGNED SYMREF;
 1019      DCL N_SEVERITY_KEY_WORD UBIN(36) ALIGNED SYMREF;
 1020      DCL N_NODEBUG_KEY_WORD UBIN(36) ALIGNED SYMREF;
 1021      DCL N_DEF_KEY_WORD UBIN(36) ALIGNED SYMREF;
 1022      DCL N_REF_KEY_WORD UBIN(36) ALIGNED SYMREF;
 1023      DCL N_EDEF_KEY_WORD UBIN(36) ALIGNED SYMREF;
 1024      DCL N_EREF_KEY_WORD UBIN(36) ALIGNED SYMREF;
 1025      DCL N_DDEF_KEY_WORD UBIN(36) ALIGNED SYMREF;
 1026      DCL N_DREF_KEY_WORD UBIN(36) ALIGNED SYMREF;
 1027      DCL N_SDEF_KEY_WORD UBIN(36) ALIGNED SYMREF;
 1028      DCL N_SREF_KEY_WORD UBIN(36) ALIGNED SYMREF;
 1029      DCL N_INQUIRE_KEY_WORD UBIN(36) ALIGNED SYMREF;
 1030      DCL N_OVERWRITE_KEY_WORD UBIN(36) ALIGNED SYMREF;
 1031      DCL N_ERROR_KEY_WORD UBIN(36) ALIGNED SYMREF;
 1032                 %ELSE;
 1033                      %IF ( SUBSTR(STR1,0,4 )='UBIN' );
 1034                  %LSET I_MAP    = 0;
 1035                  %LSET I_DUPLICATE  = 0;
 1036                  %LSET I_SEVERITY  = 4;
15:22 JUL 28 '97 VY_MACRO_C.:E05SI                                         29   
 1037                  %LSET I_NODEBUG  = 0;
 1038                  %LSET I_VALUE  = 0;
 1039                  %LSET I_DEF    = 0;
 1040                  %LSET I_REF    = 0;
 1041                  %LSET I_EDEF   = 0;
 1042                  %LSET I_EREF   = 0;
 1043                  %LSET I_DDEF   = 0;
 1044                  %LSET I_DREF   = 0;
 1045                  %LSET I_SDEF   = 0;
 1046                  %LSET I_SREF   = 0;
 1047                  %LSET I_INQUIRE  = 0;
 1048                  %LSET I_OVERWRITE  = 0;
 1049                  %LSET I_ERR    = 0;
 1050                  %LSET I_VAL    = 0;
 1051                 %ELSE;
 1052                      %IF ( SUBSTR(STR1,0,3)='BIT' );
 1053                  %LSET I_MAP    = '0'B;
 1054                  %LSET I_DUPLICATE  = '0'B;
 1055                  %LSET I_SEVERITY  = '0'B;
 1056                  %LSET I_NODEBUG  = '0'B;
 1057                  %LSET I_VALUE  = '0'B;
 1058                  %LSET I_DEF    = '0'B;
 1059                  %LSET I_REF    = '0'B;
 1060                  %LSET I_EDEF   = '0'B;
 1061                  %LSET I_EREF   = '0'B;
 1062                  %LSET I_DDEF   = '0'B;
 1063                  %LSET I_DREF   = '0'B;
 1064                  %LSET I_SDEF   = '0'B;
 1065                  %LSET I_SREF   = '0'B;
 1066                  %LSET I_INQUIRE  = '0'B;
 1067                  %LSET I_OVERWRITE  = '0'B;
 1068                  %LSET I_ERR    = '0'B;
 1069                  %LSET I_VAL    = '0'B;
 1070            %ENDIF;
 1071            %ENDIF;
 1072      %ENDIF;
 1073         %ELSE;
15:22 JUL 28 '97 VY_MACRO_C.:E05SI                                         30   
 1074            %LSET INIT=CHARTEXT('/*');
 1075                  %LSET I_MAP    = CHARTEXT(' ');
 1076                  %LSET I_DUPLICATE  = CHARTEXT(' ');
 1077                  %LSET I_SEVERITY  = CHARTEXT(' ');
 1078                  %LSET I_NODEBUG  = CHARTEXT(' ');
 1079                  %LSET I_VALUE  = CHARTEXT(' ');
 1080                  %LSET I_DEF    = CHARTEXT(' ');
 1081                  %LSET I_REF    = CHARTEXT(' ');
 1082                  %LSET I_EDEF   = CHARTEXT(' ');
 1083                  %LSET I_EREF   = CHARTEXT(' ');
 1084                  %LSET I_DDEF   = CHARTEXT(' ');
 1085                  %LSET I_DREF   = CHARTEXT(' ');
 1086                  %LSET I_SDEF   = CHARTEXT(' ');
 1087                  %LSET I_SREF   = CHARTEXT(' ');
 1088                  %LSET I_INQUIRE  = CHARTEXT(' ');
 1089                  %LSET I_OVERWRITE  = CHARTEXT(' ');
 1090                  %LSET I_ERR    = CHARTEXT(' ');
 1091                  %LSET I_VAL    = CHARTEXT(' ');
 1092      %ENDIF;
 1093            DCL 1 NAME          STCLASS   ALIGNED,
 1094                 2 PRIMARY_OPTION    ALIGNED,
 1095                  3 MAP         DTYPE  %ATYPE   %INIT(%I_MAP)%CHARTEXT('/**/'),
 1096                  3 DUPLICATE   DTYPE  %ATYPE   %INIT(%I_DUPLICATE)%CHARTEXT('/**/'),
 1097                  3 SEVERITY    DTYPE  %ATYPE   %INIT(%I_SEVERITY)%CHARTEXT('/**/'),
 1098                  3 NODEBUG     DTYPE  %ATYPE   %INIT(%I_NODEBUG)%CHARTEXT('/**/'),
 1099                 2 PRIMARY_OPTION_A(0:%PRI_HB) REDEF     PRIMARY_OPTION DTYPE,
 1100                 2 MAP_ATTCH           ALIGNED,
 1101                  3 *           DTYPE  %ATYPE   %INIT(%I_VALUE)%CHARTEXT('/**/'),
 1102                  3 DEF         DTYPE  %ATYPE   %INIT(%I_DEF)%CHARTEXT('/**/'),
 1103                  3 REF         DTYPE  %ATYPE   %INIT(%I_REF)%CHARTEXT('/**/'),
 1104                  3 *           DTYPE  %ATYPE   %INIT(%I_VALUE)%CHARTEXT('/**/'),
 1105                  3 EDEF        DTYPE  %ATYPE   %INIT(%I_EDEF)%CHARTEXT('/**/'),
 1106                  3 EREF        DTYPE  %ATYPE   %INIT(%I_EREF)%CHARTEXT('/**/'),
 1107                  3 DDEF        DTYPE  %ATYPE   %INIT(%I_DDEF)%CHARTEXT('/**/'),
 1108                  3 DREF        DTYPE  %ATYPE   %INIT(%I_DREF)%CHARTEXT('/**/'),
 1109                  3 SDEF        DTYPE  %ATYPE   %INIT(%I_SDEF)%CHARTEXT('/**/'),
 1110                  3 SREF        DTYPE  %ATYPE   %INIT(%I_SREF)%CHARTEXT('/**/'),
15:22 JUL 28 '97 VY_MACRO_C.:E05SI                                         31   
 1111                 2 MAP_A(0:%MAP_HB)          REDEF MAP_ATTCH   DTYPE,
 1112                 2 DUPL_ATTCH   ALIGNED,
 1113                  3 INQUIRE     DTYPE  %ATYPE   %INIT(%I_INQUIRE)%CHARTEXT('/**/'),
 1114                  3 OVERWRITE   DTYPE  %ATYPE   %INIT(%I_OVERWRITE)%CHARTEXT('/**/'),
 1115                  3 ERR         DTYPE  %ATYPE   %INIT(%I_ERR)%CHARTEXT('/**/'),
 1116                 2 DUPL_A(0:%DUPL_HB)         REDEF DUPL_ATTCH  DTYPE,
 1117                 2 SEV_ATTCH    ALIGNED,
 1118                  3 VAL         DTYPE  %ATYPE   %INIT(%I_VAL)%CHARTEXT('/**/'),
 1119                 2 SEV_A(0:%SEV_HB)          REDEF SEV_ATTCH   DTYPE;
 1120      %MEND;
 1121      %MACRO VY$UTS;
 1122      %LSET LISTDIR='0'B;
 1123      %LSET LISTMAC='1'B;
 1124      %LSET LISTSUB='1'B;
 1125      %LSET LISTEXP='1'B;
 1126      %BANNER(ARG=VY$UTS);
 1127      %VY$UTS_;
 1128      %MEND;
 1129      %MACRO VY$UTS_;
 1130      DCL 1 VY$UTS           BASED,
 1131            2 I,
 1132              3 LEMUR    UBIN(36) ALIGNED,
 1133              3 COMPILER UBIN(36) ALIGNED,
 1134            2 A(0:1) REDEF I UBIN(36);
 1135      %MEND;

