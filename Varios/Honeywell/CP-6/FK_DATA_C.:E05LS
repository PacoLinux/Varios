

14:24 JUL 28 '97 FK_DATA_C.:E05SI                                          1    
    1      /*M* FK_DATA_C - Macros and equates for altkey stuff */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7      /**/
    8      /* Structure for passing information between ALTKEY and the
    9         monitor. */
   10      /**/
   11      %MACRO FK$ALTKEY_BFR(FPTN=FKA_ALTKEY_BFR, STCLASS=" ");
   12      DCL 1 FPTN STCLASS DALIGNED,
   13           2 DCB# UBIN,
   14                  /* DCB# - DCB number */
   15           2 CFU$ PTR,
   16                  /* CFU$ - Pointer to CFU */
   17           2 CODE UBIN,
   18                  /* CODE - Code of the operation to be performed. */
   19           2 DA UBIN,
   20                  /* DA - Disk Address of new granules */
   21           2 SETX UBIN,
   22                  /* SETX - SETX of file */
   23           2 RELG BIT(1) UNAL,
   24                 /* RELG - RELG option from user's close fpt */
   25           2 DELF BIT(1) UNAL,
   26                 /* DELF - F$DCB.FFLG.DELF from user's dcb */
   27           2 *    BIT(34) UNAL,
   28           2 FPARAM(0:1023) UBIN;
   29                  /* FPARAM - FIT information buffer */
   30      %MEND;
   31      /**/
   32      /* Information passed in CCBUF */
   33      /**/
   34      %MACRO FK$CCBUF(FPTN=CCBUF, STCLASS=BASED);
   35      DCL 1 FPTN STCLASS,
   36           2 SIZE UBIN(9) CALIGNED,
   37                  /* SIZE - Size for TEXTC CCBUF */
14:24 JUL 28 '97 FK_DATA_C.:E05SI                                          2    
   38           2 ALTKEY CHAR(8) CALIGNED,
   39                  /* ALTKEY - Name of RU for CCBUF */
   40           2 CFU$ PTR CALIGNED,
   41                  /* CFU$ - Pointer to CFU */
   42           2 SETX UBIN CALIGNED,
   43                  /* SETX - SETX of file */
   44           2 CLOSERR BIT(36) CALIGNED,
   45                  /* CLOSERR - B$JIT.ERR just prior to M$LINK to ALTKEY.
   46                     So ALTKEY can report a previous close error if nothing
   47                     more horrible happens during the alt build.        */
   48           2 RELG BIT(1),
   49                  /* RELG - FPT_CLOSE.OPER.RELG of user's close fpt */
   50           2 DELF BIT(1),
   51                  /* DELF - F$DCB.FFLG.DELF of user's DCB */
   52           2 *    BIT(7),
   53           2 PAREN CHAR(1) CALIGNED;
   54                  /* PAREN - Right parenthesis for CCBUF */
   55      %MEND;
   56      /**/
   57      /* Equates for FK$ALTKEY_BFR.CODE */
   58      /**/
   59      %EQU ALTKEY_OPEN# = 0;
   60      %EQU ALTKEY_EXTEND# = 1;
   61      %EQU ALTKEY_CLOSE# = 2;
   62      /**/
   63      /* Structure for passing error codes */
   64      /**/
   65      %MACRO FKA$ERR(FPTN=FKA$ERR,STCLASS=" ");
   66      DCL 1 FPTN STCLASS ALIGNED,
   67            2 ERR  BIT(36),
   68            2 TYPE UBIN HALF HALIGNED,
   69            2 DCB# UBIN HALF HALIGNED;
   70      %MEND;
   71      /**/
   72      /* Equates for close error types */
   73      /**/
   74      %EQU UNEXPECTED=1;
14:24 JUL 28 '97 FK_DATA_C.:E05SI                                          3    
   75      %EQU OLDERR    =2;
   76      %EQU CANTRELG  =3;

