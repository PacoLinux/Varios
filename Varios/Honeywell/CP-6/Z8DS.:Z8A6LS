VERSION A06

PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:1    
        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        Z8DS$SPAN__CALC: PROC (QLT$$) ; /* Recursive */
        7        7
        8        8        /*M* Z8DS$SPAN__CALC  Recursive, calculates spans of all array items.    */
        9        9
       10       10        /*P*
       11       11               NAME:  Z8DS$SPAN__CALC
       12       12             AUTHOR:  Greg Myers
       13       13            PURPOSE:  This procedure calculates the spans for all dims items
       14       14                      within an 01 structure.  It is called recursively
       15       15                      to calculate the spans through all the levels.
       16       16        */
       17       17
       18       18        /*D*
       19       19               NAME:  Z8DS$SPAN__CALC
       20       20               CALL:  CALL Z8DS$SPAN__CALC(QUAL$);
       21       21          INTERFACE:  This routine calls itself as it is recursive.
       22       22
       23       23              INPUT:  QLT$$  --  Pointer to QLT entry for item being computed.
       24       24                      This procedure accesses the QLT, ST, and LTS tables.
       25       25             OUTPUT:  DIMS.D.SPAN  --  Element size
       26       26            SCRATCH:  LTS$  --  Pointer to LTS entries.
       27       27                      QLT$  --  Pointer to QLT entries.
       28       28                      QLT$$ --  Pointer to QLT entries.
       29       29                      ST$   --  Pointer to ST entries.
       30       30
       31       31        DESCRIPTION:  Using the QLT and ST.ADSC.N, the span of each dims item
       32       32                      is calculate.  It is in terms of words, bytes, or digits depending
       33       33                      on the type of variable.  This program is called recursively to go
       34       34                      deeper and deeper within the structure.
       35       35        */
       36       36        %EJECT ;
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:2    
       37       37        %EQU PHASE = 1 ;
       38       38        %EQU DIGIT_ALIGNED = 1 ;
       39       39        %INCLUDE Z8A_DEFC ;
       40      107        %INCLUDE Z8A_COMCOM ;
       41      757        %INCLUDE Z8E_STACKS;
       42     3023        %INCLUDE Z8A_TYPES;
       43     3197        %INCLUDE Z8E_O1COM ;
       44     3958        %INCLUDE Z8A_SUPP_MAC ;
       45     6358        %INCLUDE Z8A_ST ;
       46    10017        %INCLUDE Z8A_QLT ;
       47    10123        %INCLUDE Z8A_LTS ;
       48    12200
       49    12201    1   DCL   QLT$$     PTR ; /* Parameter */
       50    12202    1   DCL   QUAL$     PTR ;
       51    12203    1   DCL   BRO$      PTR; /* Walks the BROTHER's beneath a FD */
       52    12204    1   DCL   LTSS$     PTR ;
       53    12205    1   DCL   PREV_ST$  PTR AUTO ; /* Previous ST item  */
       54    12206    1   DCL   PREV_LTS$ PTR AUTO ; /* Previous LTS item */
       55    12207    1   DCL   LAST_DIM  UBIN WORD AUTO ;
       56    12208    1   DCL   I         SBIN WORD AUTO ;
       57    12209    1   DCL   Z8DO$LINK_WITH_LTS  ENTRY (2) ; /* Fill in ST.LTS$ */
       58    12210        %EJECT ;
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:3    
       59    12211        /*V*
       60    12212            CONV_PREVIOUS_SPAN_MACROS -- These macros are used to convert the spans
       61    12213                                         that were copied from the item's father.
       62    12214                                                The reason it is in bytes is that
       63    12215                                         the father is a group item (TYA) and thus its
       64    12216                                         span is in bytes.
       65    12217        */
       66    12218
       67    12219        %MACRO CONV_SPAN_IN_BYTES_TO_WORDS(@LAST_ITEM=LAST_DIM) ;
       68    12220                 DO I = 1 TO @LAST_ITEM ;
       69    12221                   LTS$->DIMS.D.SPAN (I) = LTS$->DIMS.D.SPAN (I) / %BYTES_PER_WORD ;
       70    12222                 END ;
       71    12223        %MEND ;
       72    12224
       73    12225        %MACRO CONV_SPAN_IN_BYTES_TO_CHARS(@LAST_ITEM=LAST_DIM) ;
       74    12226                 DO I = 1 TO @LAST_ITEM ;
       75    12227                   LTS$->DIMS.D.SPAN (I) = LTS$->DIMS.D.SPAN (I) * 3 / 2 ;
       76    12228                 END ;
       77    12229        %MEND ;
       78    12230
       79    12231        %MACRO CONV_SPAN_IN_BYTES_TO_DIGITS(@LAST_ITEM=LAST_DIM) ;
       80    12232                 DO I = 1 TO @LAST_ITEM ;
       81    12233                   LTS$->DIMS.D.SPAN (I) = LTS$->DIMS.D.SPAN (I) * %DIGITS_PER_BYTE ;
       82    12234                 END ;
       83    12235        %MEND ;
       84    12236
       85    12237        %EJECT;
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:4    
       86    12238        /*V*
       87    12239            COPY_PREVIOUS_SPAN_MACROS -- These macros are used to copy the spans from
       88    12240                                         the item's father into the item's DIMS item.
       89    12241                                         It also may be converted into words or digits
       90    12242                                         from bytes.  The reason it is in bytes is that
       91    12243                                         the father is a group item (TYA) and thus its
       92    12244                                         span is in bytes.
       93    12245        */
       94    12246
       95    12247        %MACRO COPY_SPAN_IN_BYTES_TO_WORDS(@LAST_ITEM=LAST_DIM) ;
       96    12248               DO ;
       97    12249                 IF PREV_LTS$ ~= ADDR(NIL) THEN
       98    12250                   DO I = 1 TO @LAST_ITEM ;
       99    12251                     LTS$->DIMS.D.SPAN (I) = PREV_LTS$->DIMS.D.SPAN (I) / %BYTES_PER_WORD ;
      100    12252                   END ;
      101    12253               END ;
      102    12254        %MEND ;
      103    12255
      104    12256        %MACRO COPY_SPAN_IN_BYTES_TO_CHARS(@LAST_ITEM=LAST_DIM) ;
      105    12257               DO ;
      106    12258                 IF PREV_LTS$ ~= ADDR(NIL) THEN
      107    12259                   DO I = 1 TO @LAST_ITEM ;
      108    12260                     LTS$->DIMS.D.SPAN (I) = PREV_LTS$->DIMS.D.SPAN (I) * 3 / 2 ;
      109    12261                   END ;
      110    12262               END ;
      111    12263        %MEND ;
      112    12264
      113    12265        %MACRO COPY_SPAN_IN_BYTES_TO_DIGITS(@LAST_ITEM=LAST_DIM) ;
      114    12266               DO ;
      115    12267                 IF PREV_LTS$ ~= ADDR(NIL) THEN
      116    12268                   DO I = 1 TO @LAST_ITEM ;
      117    12269                     LTS$->DIMS.D.SPAN (I) = PREV_LTS$->DIMS.D.SPAN (I) * %DIGITS_PER_BYTE ;
      118    12270                   END ;
      119    12271               END ;
      120    12272        %MEND ;
      121    12273
      122    12274        %MACRO COPY_SPAN(@LAST_ITEM=LAST_DIM) ;
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:5    
      123    12275               DO ;
      124    12276                 IF PREV_LTS$ ~= ADDR(NIL) THEN
      125    12277                   DO I = 1 TO @LAST_ITEM ;
      126    12278                     LTS$->DIMS.D.SPAN (I) = PREV_LTS$->DIMS.D.SPAN (I) ;
      127    12279                   END ;
      128    12280               END ;
      129    12281        %MEND ;
      130    12282        %EJECT ;
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:6    
      131    12283        /*V*
      132    12284             INITIALIZATION -- The symbol table pointer is assigned for the data item and
      133    12285                               LTS$ is preset to nil.  QLT$ is assigned to point to the
      134    12286                               item's fathers and then we determine if there are any
      135    12287                               outer occurs.
      136    12288
      137    12289                               We check if the father is dimensioned and if so we assign
      138    12290                               a pointer to the DIMS entry in the LTS.  This is needed
      139    12291                               so that we can copy the dimensions into the DIMS entry
      140    12292                               of the outer dimensions.
      141    12293        */
      142    12294
      143    12295    1        QUAL$ = QLT$$ ;
      144    12296
      145    12297    2        DO WHILE (QUAL$ ~= ADDR(NIL)) ; /* Iterate thru brothers */
      146    12298
      147    12299    2          ST$ = QUAL$->QLT.ST$ ;
      148    12300
      149    12301    3          DO CASE (QUAL$ -> QLT.FATHER -> QLT.ST$ -> ST.ID);
      150    12302
      151    12303    3            CASE (
      152    12304                       %ST_ITEMS_WITH_STORAGE;
      153    12316    3                 );
      154    12317                   /* All ok - fall thru */
      155    12318    3            CASE (ELSE);
      156    12319    3              RETURN;
      157    12320    3          END; /* Case of st.id */
      158    12321    2          LTS$ = ADDR(NIL) ;
      159    12322    2          QLT$ = QUAL$->QLT.FATHER ;
      160    12323
      161    12324    2          IF QLT$->QLT.ST$->VARIABLE.ID = %ARRAY THEN
      162    12325    3            DO ;
      163    12326    3              PREV_ST$ = QLT$->QLT.ST$ ;
      164    12327                   %GET_LTS (@ID = %DIMS, @ST$ = PREV_ST$, @RETURN$ = PREV_LTS$) ;
      165    12370    3            END ;
      166    12371    2          ELSE
      167    12372    2            PREV_LTS$ = ADDR(NIL) ;
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:7    
      168    12373        %EJECT ;
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:8    
      169    12374
      170    12375        /*V*
      171    12376            HAS_OCCURS_CLAUSE  --  Item has an occurs clause:  copy over inherited spans
      172    12377                                   and convert into correct units and calculate span for
      173    12378                                   last dimension.  We do the initialization of
      174    12379                                   information here.  This involves finding the pointer
      175    12380                                   to the DIMS item and calculating the last dimension.
      176    12381        */
      177    12382
      178    12383    2          IF QUAL$->QLT.B.OCCURS THEN
      179    12384    3            DO ;
      180    12385                   %GET_LTS (@ID = %DIMS, @ST$=ST$, @RETURN$=LTS$) ;
      181    12428                   %FIND_LAST_DIM(POINTER=LTS$, VARIABLE=LAST_DIM) ;
      182    12433        %EJECT ;
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:9    
      183    12434
      184    12435        /*V*
      185    12436            CALCULATE_LAST_SPAN -- Calculate span of last dimension and convert
      186    12437                                   all spans to the proper units depending on the
      187    12438                                   type of item.
      188    12439
      189    12440                                   Span in digits:
      190    12441                                       TYD when length is in terms of digits
      191    12442                                         (ST$->VARIABLE.NDSC.TN = TRUE).
      192    12443
      193    12444                                   Span in 6-bit characters:
      194    12445                                       TYB and TYC
      195    12446
      196    12447                                   Span in words:
      197    12448                                       TYI, TYR, TYQ, TYP, and TYX.
      198    12449
      199    12450                                   Span in bytes:
      200    12451                                       All other entries.
      201    12452        */
      202    12453
      203    12454        %EJECT ;
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:10   
      204    12455    4              DO CASE(ST$->VARIABLE.TYPE) ;
      205    12456
      206    12457    4                CASE(%TYI, %TYR, %TYQ, %TYP, %TYX) ;
      207    12458    4                  LTS$->DIMS.D.SPAN(LAST_DIM) = ST$->VARIABLE.NDSC.N / %BYTES_PER_WORD
             12458                           ;
      208    12459                       %COPY_SPAN_IN_BYTES_TO_WORDS(@LAST_ITEM="LAST_DIM-1") ;
      209    12467
      210    12468    4                CASE(%TYA, %TYN, %TYE) ;
      211    12469    4                  IF ST$->VARIABLE.B.LENGTH_4096 THEN
      212    12470    5                    DO ;
      213    12471                           %GET_LTS (@ID = %LONG,@ST$=ST$, @RETURN$ = LTSS$) ;
      214    12514    5                      LTS$->DIMS.D.SPAN(LAST_DIM) = LTSS$->LONG.LENGTH ;
      215    12515    5                    END ;
      216    12516    4                  ELSE
      217    12517    4                    LTS$->DIMS.D.SPAN(LAST_DIM) = ST$->VARIABLE.ADSC.N ;
      218    12518
      219    12519                       %COPY_SPAN(@LAST_ITEM="LAST_DIM-1") ;
      220    12527
      221    12528    4                CASE(%TYB) ;
      222    12529    4                  IF ST$->VARIABLE.B.LENGTH_4096 THEN
      223    12530    5                    DO ;
      224    12531                           %GET_LTS (@ID = %LONG,@ST$=ST$, @RETURN$ = LTSS$) ;
      225    12574    5                      LTS$->DIMS.D.SPAN(LAST_DIM) = LTSS$->LONG.LENGTH ;
      226    12575    5                    END ;
      227    12576    4                  ELSE
      228    12577    4                    LTS$->DIMS.D.SPAN(LAST_DIM) = ST$->VARIABLE.ADSC.N ;
      229    12578
      230    12579                       %COPY_SPAN_IN_BYTES_TO_CHARS(@LAST_ITEM="LAST_DIM-1") ;
      231    12587
      232    12588    4                CASE(%TYC);
      233    12589    4                  LTS$->DIMS.D.SPAN(LAST_DIM) = ST$->VARIABLE.NDSC.N;
      234    12590                       %COPY_SPAN_IN_BYTES_TO_CHARS(@LAST_ITEM="LAST_DIM-1") ;
      235    12598
      236    12599    4                CASE(%TYH) ;
      237    12600    4                  IF QUAL$->QLT.B.SYNC THEN
      238    12601    4                    LTS$->DIMS.D.SPAN(LAST_DIM) = ST$->VARIABLE.NDSC.N + %(
             12601                             BYTES_PER_WORD / 2) ;
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:11   
      239    12602    4                  ELSE
      240    12603    4                    LTS$->DIMS.D.SPAN(LAST_DIM) = ST$->VARIABLE.NDSC.N ;
      241    12604
      242    12605                       %COPY_SPAN(@LAST_ITEM="LAST_DIM-1") ;
      243    12613
      244    12614    4                CASE(%TYD) ;
      245    12615    4                  IF ST$->VARIABLE.NDSC.TN THEN
      246    12616    5                    DO ;
      247    12617
      248    12618    5                      IF NOT (QUAL$->QLT.B.DIGIT) AND MOD(ST$->VARIABLE.NDSC.N,2) = %
             12618                               DIGIT_ALIGNED THEN
      249    12619    5                        LTS$->DIMS.D.SPAN(LAST_DIM) = ST$->VARIABLE.NDSC.N + 1 ;
      250    12620    5                      ELSE
      251    12621    5                        LTS$->DIMS.D.SPAN (LAST_DIM) = ST$->VARIABLE.NDSC.N ;
      252    12622
      253    12623                           %COPY_SPAN_IN_BYTES_TO_DIGITS(@LAST_ITEM="LAST_DIM-1") ;
      254    12631
      255    12632    5                    END ;
      256    12633    4                  ELSE
      257    12634    5                    DO ;
      258    12635    5                      LTS$->DIMS.D.SPAN(LAST_DIM) = ST$->VARIABLE.NDSC.N ;
      259    12636                           %COPY_SPAN(@LAST_ITEM="LAST_DIM-1") ;
      260    12644    5                    END ;
      261    12645
      262    12646    4                CASE(ELSE) ;
      263    12647    4                  LTS$->DIMS.D.SPAN(LAST_DIM) = ST$->VARIABLE.NDSC.N ;
      264    12648                       %COPY_SPAN(@LAST_ITEM="LAST_DIM-1") ;
      265    12656
      266    12657    4              END /* CASE */ ;
      267    12658
      268    12659    3            END;
      269    12660        %EJECT ;
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:12   
      270    12661        /*V*
      271    12662            NO_OCCURS_CLAUSE  --  Item has no occurs cause:  copy over inherited spans
      272    12663                                  and convert into correct units.
      273    12664        */
      274    12665
      275    12666    2          ELSE
      276    12667    3            DO ; /* B.OCCURS = FALSE */
      277    12668
      278    12669        /*V*
      279    12670            SET_UP_LTS_AND_INITIALIZE -- Create a DIMS item of the same length as the
      280    12671                                         item's father.  The ID, length, and DN2 value
      281    12672                                         are copied over.  The dimensions and indices
      282    12673                                         for all of the dimensions are also copied over.
      283    12674        */
      284    12675
      285    12676    3              IF  PREV_LTS$ ~= ADDR(NIL)
      286    12677    3              AND QUAL$->QLT.LEVEL_NO ~= 88 THEN
      287    12678    4                DO ;
      288    12679                       %NEW_DIMS (@POINTER = LTS$,
      289    12680                                  @SIZE = "PREV_LTS$ ->LTS.N",
      290    12681                                  @DN2$ = "PREV_LTS$ -> DIMS.DN2") ;
      291    12774
      292    12775                       %FIND_LAST_DIM(POINTER=LTS$, VARIABLE=LAST_DIM) ;
      293    12780
      294    12781    5                  DO I = 1 TO LAST_DIM;
      295    12782                         %FILL_DIMS (@DIMS$  = LTS$,
      296    12783                                     @SS#    = I,
      297    12784                                     @INDEX$ = "PREV_LTS$ -> DIMS.D.INDEX$(I)",
      298    12785                                     @SPAN   = "PREV_LTS$ -> DIMS.D.SPAN(I)",
      299    12786                                     @DIM    = "PREV_LTS$ -> DIMS.D.DIM(I)") ;
      300    12793        %EJECT ;
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:13   
      301    12794    5                  END;
      302    12795        /*V*
      303    12796            CHANGE_SCALAR_TO_ARRAY -- The symbol table id is changed from a scalar item
      304    12797                                      to an array item as well as it being marked.
      305    12798
      306    12799                                      The symbol table is also given access to the DIMS
      307    12800                                      entry.  If no previous LTS entry has been created
      308    12801                                      for the data item the DIMS pointer is stored
      309    12802                                      straight into the symbol table otherwise the DIMS
      310    12803                                      pointer is stored in a LTSS item.
      311    12804
      312    12805                                      If no LTSS item was needed before then one is
      313    12806                                      created and the NEL pointer or LONG pointer is
      314    12807                                      stored in the LONG item as well.
      315    12808        */
      316    12809
      317    12810    4                  ST$->VARIABLE.ID = %ARRAY ;
      318    12811
      319    12812    4                  CALL Z8DO$LINK_WITH_LTS (ST$ -> VARIABLE.LTS$, LTS$) ;
      320    12813        %EJECT ;
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:14   
      321    12814        /*V*
      322    12815            CONVERT_PREVIOUS_SPANS -- Convert all spans to the proper units depending
      323    12816                                      on the type of item.
      324    12817
      325    12818
      326    12819                                      Span in digits:
      327    12820                                          TYD when length is in terms of digits
      328    12821                                            (ST$->VARIABLE.NDSC.TN = TRUE).
      329    12822
      330    12823                                   Span in 6-bit characters:
      331    12824                                       TYB and TYC
      332    12825
      333    12826                                      Span in words:
      334    12827                                          TYI, TYR, TYQ, TYP, and TYX.
      335    12828
      336    12829                                      Span in bytes:
      337    12830                                          All other entries.
      338    12831           */
      339    12832
      340    12833    5                  DO CASE(ST$->VARIABLE.TYPE) ;
      341    12834
      342    12835    5                    CASE(%TYI, %TYR, %TYQ, %TYP, %TYX) ;
      343    12836                           %CONV_SPAN_IN_BYTES_TO_WORDS(@LAST_ITEM=LAST_DIM) ;
      344    12841
      345    12842    5                    CASE(%TYD) ;
      346    12843    5                      IF ST$->VARIABLE.NDSC.TN THEN
      347    12844                             %CONV_SPAN_IN_BYTES_TO_DIGITS(@LAST_ITEM=LAST_DIM) ;
      348    12849
      349    12850    5                    CASE(%TYB, %TYC) ;
      350    12851                           %CONV_SPAN_IN_BYTES_TO_CHARS(@LAST_ITEM=LAST_DIM) ;
      351    12856
      352    12857    5                    CASE(ELSE) ;
      353    12858                           /* No conversion needed */
      354    12859
      355    12860    5                  END ;
      356    12861    4                END ; /* PREV_LTS$ <> Nil & Level <> 88 */
      357    12862    3            END ; /* B.OCCURS = FALSE */
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:15   
      358    12863        %EJECT ;
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:16   
      359    12864        /*V*
      360    12865            OFFSET_OFF_TRIAD -- Compute the fudge offset for the OFF triad.
      361    12866                                This will be stored in TOTAL_SPAN.  The fudge offset
      362    12867                                is the length of the zero element of the
      363    12868                                array. This is used to find inner members of the
      364    12869                                array.  If the total span is larger than the maximum
      365    12870                                span size then the maximum span size is stored.
      366    12871                                After TOTAL_SPAN is calculated it is compared to 256k, if
      367    12872                                the total span exceeds this limit then ST.B.GREATER_256K
      368    12873                                is set to true.  This is done as code generation will
      369    12874                                handle large items with another register.
      370    12875        */
      371    12876
      372    12877    2          IF LTS$ ~= ADDR(NIL) THEN
      373    12878    3            DO ;
      374    12879
      375    12880    4              DO I = 1 TO LAST_DIM ;
      376    12881    4                IF (LTS$->DIMS.OD.TOTAL_SPAN + LTS$->DIMS.D.SPAN(I)) > %(#256K * 8)
             12881                         THEN
      377    12882    4                  LTS$->DIMS.OD.TOTAL_SPAN = %(#256K * 8) ;
      378    12883    4                ELSE
      379    12884    4                  LTS$->DIMS.OD.TOTAL_SPAN = LTS$->DIMS.OD.TOTAL_SPAN + LTS$->DIMS.D.
             12884                           SPAN(I) ;
      380    12885    4              END ;
      381    12886
      382    12887    3              IF LTS$->DIMS.D.DIM(1) * LTS$->DIMS.D.SPAN(1) >= %#256K THEN
      383    12888    3                ST$->VARIABLE.B.GREATER_256K = TRUE ;
      384    12889
      385    12890    3            END ;
      386    12891        %EJECT ;
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:17   
      387    12892        /*V*
      388    12893            CALL_Z8DS -- Call Z8DS passing the son as a parameter if one exists
      389    12894                         and call Z8DS passing the brother as a parameter if
      390    12895                         one exists.
      391    12896        */
      392    12897
      393    12898    2          IF QUAL$->QLT.SON ~= ADDR(NIL) AND NOT QUAL$->QLT.B.RENAMES THEN
      394    12899    2            CALL Z8DS$SPAN__CALC (QUAL$->QLT.SON) ;
      395    12900
      396    12901    2          QUAL$ = QUAL$ -> QLT.BROTHER ;
      397    12902
      398    12903    2        END ; /* Do While QUAL$ is non-nil */
      399    12904
      400    12905    1   END Z8DS$SPAN__CALC ;

PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:18   
--  Include file information  --

   Z8A_LTS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_QLT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ST.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8E_O1COM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_TYPES.:Z8A6TOU  is referenced.
   Z8A_LEX_SYMB.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_STACKS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8DS$SPAN__CALC.

   Procedure Z8DS$SPAN__CALC requires 630 words for executable code.
   Procedure Z8DS$SPAN__CALC requires 14 words of local(AUTO) storage.

    No errors detected in file Z8DS.:Z8A6TSI    .

PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:19   

 Object Unit name= Z8DS$SPAN__CALC                            File name= Z8DS.:Z8A6TOU
 UTS= AUG 09 '97 11:19:08.12 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none     1      1  ITERATION
    1  LblCom even  none    90    132  LEX_SYMBOL
    2  LblCom even  none     1      1  CURRENT_LEX_SYMBOL$
    3  LblCom even  none    90    132  TEMP_LEX_SYMBOL
    4  LblCom even  none    90    132  TEMP_LEX_SYMBOL2
    5  LblCom even  none     1      1  ST$
    6  LblCom even  none     5      5  ST_
    7  LblCom even  none     1      1  QLT$
    8  LblCom even  none     1      1  PREV_01_QLT$
    9  LblCom even  none     5      5  QLT_
   10  LblCom even  none     1      1  LTS$
   11  LblCom even  none     5      5  LTS_
   12   Proc  even  none   630   1166  Z8DS$SPAN__CALC
   13  RoData even  none     5      5  Z8DS$SPAN__CALC

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    12      0   yes            yes      Std        1  Z8DS$SPAN__CALC
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:20   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 Z8AR$RESERVER
         yes           Std       2 Z8DO$LINK_WITH_LTS
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     COMCOM                                O1COM                                 HIER_STK_PTR
     HIER_STK                              PAGE_FORMAT                           REP_STK_PTR
     REP_STK                          r    LTS_STEP

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:21   


        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        Z8DS$SPAN__CALC: PROC (QLT$$) ; /* Recursive */

      6 12 000000   000000 700200 xent  Z8DS$SPAN__* TSX0  ! X66_AUTO_1
        12 000001   000016 000001                    ZERO    14,1

        7        7
        8        8        /*M* Z8DS$SPAN__CALC  Recursive, calculates spans of all array items.    */
        9        9
       10       10        /*P*
       11       11               NAME:  Z8DS$SPAN__CALC
       12       12             AUTHOR:  Greg Myers
       13       13            PURPOSE:  This procedure calculates the spans for all dims items
       14       14                      within an 01 structure.  It is called recursively
       15       15                      to calculate the spans through all the levels.
       16       16        */
       17       17
       18       18        /*D*
       19       19               NAME:  Z8DS$SPAN__CALC
       20       20               CALL:  CALL Z8DS$SPAN__CALC(QUAL$);
       21       21          INTERFACE:  This routine calls itself as it is recursive.
       22       22
       23       23              INPUT:  QLT$$  --  Pointer to QLT entry for item being computed.
       24       24                      This procedure accesses the QLT, ST, and LTS tables.
       25       25             OUTPUT:  DIMS.D.SPAN  --  Element size
       26       26            SCRATCH:  LTS$  --  Pointer to LTS entries.
       27       27                      QLT$  --  Pointer to QLT entries.
       28       28                      QLT$$ --  Pointer to QLT entries.
       29       29                      ST$   --  Pointer to ST entries.
       30       30
       31       31        DESCRIPTION:  Using the QLT and ST.ADSC.N, the span of each dims item
       32       32                      is calculate.  It is in terms of words, bytes, or digits depending
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:22   
       33       33                      on the type of variable.  This program is called recursively to go
       34       34                      deeper and deeper within the structure.
       35       35        */
       36       36        %EJECT ;
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:23   
       37       37        %EQU PHASE = 1 ;
       38       38        %EQU DIGIT_ALIGNED = 1 ;
       39       39        %INCLUDE Z8A_DEFC ;
       40      107        %INCLUDE Z8A_COMCOM ;
       41      757        %INCLUDE Z8E_STACKS;
       42     3023        %INCLUDE Z8A_TYPES;
       43     3197        %INCLUDE Z8E_O1COM ;
       44     3958        %INCLUDE Z8A_SUPP_MAC ;
       45     6358        %INCLUDE Z8A_ST ;
       46    10017        %INCLUDE Z8A_QLT ;
       47    10123        %INCLUDE Z8A_LTS ;
       48    12200
       49    12201    1   DCL   QLT$$     PTR ; /* Parameter */
       50    12202    1   DCL   QUAL$     PTR ;
       51    12203    1   DCL   BRO$      PTR; /* Walks the BROTHER's beneath a FD */
       52    12204    1   DCL   LTSS$     PTR ;
       53    12205    1   DCL   PREV_ST$  PTR AUTO ; /* Previous ST item  */
       54    12206    1   DCL   PREV_LTS$ PTR AUTO ; /* Previous LTS item */
       55    12207    1   DCL   LAST_DIM  UBIN WORD AUTO ;
       56    12208    1   DCL   I         SBIN WORD AUTO ;
       57    12209    1   DCL   Z8DO$LINK_WITH_LTS  ENTRY (2) ; /* Fill in ST.LTS$ */
       58    12210        %EJECT ;
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:24   
       59    12211        /*V*
       60    12212            CONV_PREVIOUS_SPAN_MACROS -- These macros are used to convert the spans
       61    12213                                         that were copied from the item's father.
       62    12214                                                The reason it is in bytes is that
       63    12215                                         the father is a group item (TYA) and thus its
       64    12216                                         span is in bytes.
       65    12217        */
       66    12218
       67    12219        %MACRO CONV_SPAN_IN_BYTES_TO_WORDS(@LAST_ITEM=LAST_DIM) ;
       68    12220                 DO I = 1 TO @LAST_ITEM ;
       69    12221                   LTS$->DIMS.D.SPAN (I) = LTS$->DIMS.D.SPAN (I) / %BYTES_PER_WORD ;
       70    12222                 END ;
       71    12223        %MEND ;
       72    12224
       73    12225        %MACRO CONV_SPAN_IN_BYTES_TO_CHARS(@LAST_ITEM=LAST_DIM) ;
       74    12226                 DO I = 1 TO @LAST_ITEM ;
       75    12227                   LTS$->DIMS.D.SPAN (I) = LTS$->DIMS.D.SPAN (I) * 3 / 2 ;
       76    12228                 END ;
       77    12229        %MEND ;
       78    12230
       79    12231        %MACRO CONV_SPAN_IN_BYTES_TO_DIGITS(@LAST_ITEM=LAST_DIM) ;
       80    12232                 DO I = 1 TO @LAST_ITEM ;
       81    12233                   LTS$->DIMS.D.SPAN (I) = LTS$->DIMS.D.SPAN (I) * %DIGITS_PER_BYTE ;
       82    12234                 END ;
       83    12235        %MEND ;
       84    12236
       85    12237        %EJECT;
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:25   
       86    12238        /*V*
       87    12239            COPY_PREVIOUS_SPAN_MACROS -- These macros are used to copy the spans from
       88    12240                                         the item's father into the item's DIMS item.
       89    12241                                         It also may be converted into words or digits
       90    12242                                         from bytes.  The reason it is in bytes is that
       91    12243                                         the father is a group item (TYA) and thus its
       92    12244                                         span is in bytes.
       93    12245        */
       94    12246
       95    12247        %MACRO COPY_SPAN_IN_BYTES_TO_WORDS(@LAST_ITEM=LAST_DIM) ;
       96    12248               DO ;
       97    12249                 IF PREV_LTS$ ~= ADDR(NIL) THEN
       98    12250                   DO I = 1 TO @LAST_ITEM ;
       99    12251                     LTS$->DIMS.D.SPAN (I) = PREV_LTS$->DIMS.D.SPAN (I) / %BYTES_PER_WORD ;
      100    12252                   END ;
      101    12253               END ;
      102    12254        %MEND ;
      103    12255
      104    12256        %MACRO COPY_SPAN_IN_BYTES_TO_CHARS(@LAST_ITEM=LAST_DIM) ;
      105    12257               DO ;
      106    12258                 IF PREV_LTS$ ~= ADDR(NIL) THEN
      107    12259                   DO I = 1 TO @LAST_ITEM ;
      108    12260                     LTS$->DIMS.D.SPAN (I) = PREV_LTS$->DIMS.D.SPAN (I) * 3 / 2 ;
      109    12261                   END ;
      110    12262               END ;
      111    12263        %MEND ;
      112    12264
      113    12265        %MACRO COPY_SPAN_IN_BYTES_TO_DIGITS(@LAST_ITEM=LAST_DIM) ;
      114    12266               DO ;
      115    12267                 IF PREV_LTS$ ~= ADDR(NIL) THEN
      116    12268                   DO I = 1 TO @LAST_ITEM ;
      117    12269                    LTS$->DIMS.D.SPAN (I) = PREV_LTS$->DIMS.D.SPAN (I) * %DIGITS_PER_BYTE ;
      118    12270                   END ;
      119    12271               END ;
      120    12272        %MEND ;
      121    12273
      122    12274        %MACRO COPY_SPAN(@LAST_ITEM=LAST_DIM) ;
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:26   
      123    12275               DO ;
      124    12276                 IF PREV_LTS$ ~= ADDR(NIL) THEN
      125    12277                   DO I = 1 TO @LAST_ITEM ;
      126    12278                     LTS$->DIMS.D.SPAN (I) = PREV_LTS$->DIMS.D.SPAN (I) ;
      127    12279                   END ;
      128    12280               END ;
      129    12281        %MEND ;
      130    12282        %EJECT ;
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:27   
      131    12283        /*V*
      132    12284             INITIALIZATION -- The symbol table pointer is assigned for the data item and
      133    12285                               LTS$ is preset to nil.  QLT$ is assigned to point to the
      134    12286                               item's fathers and then we determine if there are any
      135    12287                               outer occurs.
      136    12288
      137    12289                               We check if the father is dimensioned and if so we assign
      138    12290                               a pointer to the DIMS entry in the LTS.  This is needed
      139    12291                               so that we can copy the dimensions into the DIMS entry
      140    12292                               of the outer dimensions.
      141    12293        */
      142    12294
      143    12295    1        QUAL$ = QLT$$ ;

  12295 12 000002   200003 470500                    LDP0    @QLT$$,,AUTO
        12 000003   000000 236100                    LDQ     0,,PR0
        12 000004   200004 756100                    STQ     QUAL$,,AUTO

      144    12296
      145    12297    2        DO WHILE (QUAL$ ~= ADDR(NIL)) ; /* Iterate thru brothers */

  12297 12 000005   001163 710000 12                 TRA     s:12903

      146    12298
      147    12299    2          ST$ = QUAL$->QLT.ST$ ;

  12299 12 000006   200004 470500                    LDP0    QUAL$,,AUTO
        12 000007   000004 236100                    LDQ     4,,PR0
        12 000010   000000 756000 5                  STQ     ST$

      148    12300
      149    12301    3          DO CASE (QUAL$ -> QLT.FATHER -> QLT.ST$ -> ST.ID);

  12301 12 000011   000001 471500                    LDP1    1,,PR0
        12 000012   100004 473500                    LDP3    4,,PR1
        12 000013   300000 236100                    LDQ     0,,PR3
        12 000014   000022 772000                    QRL     18
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:28   
        12 000015   000751 136007                    SBLQ    489,DL
        12 000016   000035 116007                    CMPQ    29,DL
        12 000017   000021 602006 12                 TNC     s:12301+8,QL
        12 000020   000056 710000 12                 TRA     s:12319
        12 000021   000057 710000 12                 TRA     s:12321
        12 000022   000056 710000 12                 TRA     s:12319
        12 000023   000056 710000 12                 TRA     s:12319
        12 000024   000056 710000 12                 TRA     s:12319
        12 000025   000056 710000 12                 TRA     s:12319
        12 000026   000056 710000 12                 TRA     s:12319
        12 000027   000056 710000 12                 TRA     s:12319
        12 000030   000057 710000 12                 TRA     s:12321
        12 000031   000056 710000 12                 TRA     s:12319
        12 000032   000056 710000 12                 TRA     s:12319
        12 000033   000056 710000 12                 TRA     s:12319
        12 000034   000056 710000 12                 TRA     s:12319
        12 000035   000057 710000 12                 TRA     s:12321
        12 000036   000057 710000 12                 TRA     s:12321
        12 000037   000057 710000 12                 TRA     s:12321
        12 000040   000056 710000 12                 TRA     s:12319
        12 000041   000056 710000 12                 TRA     s:12319
        12 000042   000056 710000 12                 TRA     s:12319
        12 000043   000056 710000 12                 TRA     s:12319
        12 000044   000056 710000 12                 TRA     s:12319
        12 000045   000056 710000 12                 TRA     s:12319
        12 000046   000056 710000 12                 TRA     s:12319
        12 000047   000057 710000 12                 TRA     s:12321
        12 000050   000056 710000 12                 TRA     s:12319
        12 000051   000056 710000 12                 TRA     s:12319
        12 000052   000057 710000 12                 TRA     s:12321
        12 000053   000057 710000 12                 TRA     s:12321
        12 000054   000057 710000 12                 TRA     s:12321
        12 000055   000057 710000 12                 TRA     s:12321

      150    12302
      151    12303    3            CASE (

PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:29   
      152    12304                       %ST_ITEMS_WITH_STORAGE;
      153    12316    3                 );
      154    12317                   /* All ok - fall thru */
      155    12318    3            CASE (ELSE);

      156    12319    3              RETURN;

  12319 12 000056   000000 702200 xent               TSX2  ! X66_ARET

      157    12320    3          END; /* Case of st.id */

      158    12321    2          LTS$ = ADDR(NIL) ;

  12321 12 000057   000000 236000 13                 LDQ     0
        12 000060   000000 756000 10                 STQ     LTS$

      159    12322    2          QLT$ = QUAL$->QLT.FATHER ;

  12322 12 000061   000001 236100                    LDQ     1,,PR0
        12 000062   000000 756000 7                  STQ     QLT$

      160    12323
      161    12324    2          IF QLT$->QLT.ST$->VARIABLE.ID = %ARRAY THEN

  12324 12 000063   000000 474400 7                  LDP4    QLT$
        12 000064   400004 475500                    LDP5    4,,PR4
        12 000065   500000 220100                    LDX0    0,,PR5
        12 000066   000765 100003                    CMPX0   501,DU
        12 000067   000120 601000 12                 TNZ     s:12372

      162    12325    3            DO ;

      163    12326    3              PREV_ST$ = QLT$->QLT.ST$ ;

  12326 12 000070   400004 236100                    LDQ     4,,PR4
        12 000071   200007 756100                    STQ     PREV_ST$,,AUTO

PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:30   
      164    12327                   %GET_LTS (@ID = %DIMS, @ST$ = PREV_ST$, @RETURN$ = PREV_LTS$) ;

  12329 12 000072   200007 476500                    LDP6    PREV_ST$,,AUTO
        12 000073   600005 236100                    LDQ     5,,PR6
        12 000074   000000 116000 13                 CMPQ    0
        12 000075   000105 600000 12                 TZE     s:12363
        12 000076   600005 477500                    LDP7    5,,PR6
        12 000077   700000 221100                    LDX1    0,,PR7
        12 000100   001105 101003                    CMPX1   581,DU
        12 000101   000105 601000 12                 TNZ     s:12363

  12333 12 000102   700001 236100                    LDQ     1,,PR7
        12 000103   200010 756100                    STQ     PREV_LTS$,,AUTO

  12361 12 000104   000122 710000 12                 TRA     s:12383

  12363 12 000105   000000 116000 13                 CMPQ    0
        12 000106   000115 600000 12                 TZE     s:12367
        12 000107   600005 477500                    LDP7    5,,PR6
        12 000110   700000 221100                    LDX1    0,,PR7
        12 000111   001104 101003                    CMPX1   580,DU
        12 000112   000115 601000 12                 TNZ     s:12367

  12365 12 000113   200010 756100                    STQ     PREV_LTS$,,AUTO
        12 000114   000122 710000 12                 TRA     s:12383

  12367 12 000115   000000 236000 13                 LDQ     0
        12 000116   200010 756100                    STQ     PREV_LTS$,,AUTO

      165    12370    3            END ;

  12370 12 000117   000122 710000 12                 TRA     s:12383

      166    12371    2          ELSE
      167    12372    2            PREV_LTS$ = ADDR(NIL) ;

  12372 12 000120   000000 236000 13                 LDQ     0
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:31   
        12 000121   200010 756100                    STQ     PREV_LTS$,,AUTO

      168    12373        %EJECT ;
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:32   
      169    12374
      170    12375        /*V*
      171    12376            HAS_OCCURS_CLAUSE  --  Item has an occurs clause:  copy over inherited spans
      172    12377                                   and convert into correct units and calculate span for
      173    12378                                   last dimension.  We do the initialization of
      174    12379                                   information here.  This involves finding the pointer
      175    12380                                   to the DIMS item and calculating the last dimension.
      176    12381        */
      177    12382
      178    12383    2          IF QUAL$->QLT.B.OCCURS THEN

  12383 12 000122   000000 236100                    LDQ     0,,PR0
        12 000123   400000 316007                    CANQ    -131072,DL
        12 000124   000647 600000 12                 TZE     s:12676

      179    12384    3            DO ;

      180    12385                   %GET_LTS (@ID = %DIMS, @ST$=ST$, @RETURN$=LTS$) ;

  12387 12 000125   000000 476400 5                  LDP6    ST$
        12 000126   600005 236100                    LDQ     5,,PR6
        12 000127   000000 116000 13                 CMPQ    0
        12 000130   000140 600000 12                 TZE     s:12421
        12 000131   600005 477500                    LDP7    5,,PR6
        12 000132   700000 221100                    LDX1    0,,PR7
        12 000133   001105 101003                    CMPX1   581,DU
        12 000134   000140 601000 12                 TNZ     s:12421

  12391 12 000135   700001 236100                    LDQ     1,,PR7
        12 000136   000000 756000 10                 STQ     LTS$

  12419 12 000137   000152 710000 12                 TRA     s:12430

  12421 12 000140   000000 116000 13                 CMPQ    0
        12 000141   000150 600000 12                 TZE     s:12425
        12 000142   600005 477500                    LDP7    5,,PR6
        12 000143   700000 221100                    LDX1    0,,PR7
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:33   
        12 000144   001104 101003                    CMPX1   580,DU
        12 000145   000150 601000 12                 TNZ     s:12425

  12423 12 000146   000000 756000 10                 STQ     LTS$
        12 000147   000152 710000 12                 TRA     s:12430

  12425 12 000150   000000 236000 13                 LDQ     0
        12 000151   000000 756000 10                 STQ     LTS$

      181    12428                   %FIND_LAST_DIM(POINTER=LTS$, VARIABLE=LAST_DIM) ;

  12430 12 000152   000000 477400 10                 LDP7    LTS$
        12 000153   700000 236100                    LDQ     0,,PR7
        12 000154   777777 376007                    ANQ     -1,DL
        12 000155   000005 136007                    SBLQ    5,DL
        12 000156   000003 506007                    DIV     3,DL
        12 000157   200011 756100                    STQ     LAST_DIM,,AUTO

      182    12433        %EJECT ;
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:34   
      183    12434
      184    12435        /*V*
      185    12436            CALCULATE_LAST_SPAN -- Calculate span of last dimension and convert
      186    12437                                   all spans to the proper units depending on the
      187    12438                                   type of item.
      188    12439
      189    12440                                   Span in digits:
      190    12441                                       TYD when length is in terms of digits
      191    12442                                         (ST$->VARIABLE.NDSC.TN = TRUE).
      192    12443
      193    12444                                   Span in 6-bit characters:
      194    12445                                       TYB and TYC
      195    12446
      196    12447                                   Span in words:
      197    12448                                       TYI, TYR, TYQ, TYP, and TYX.
      198    12449
      199    12450                                   Span in bytes:
      200    12451                                       All other entries.
      201    12452        */
      202    12453
      203    12454        %EJECT ;
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:35   
      204    12455    4              DO CASE(ST$->VARIABLE.TYPE) ;

  12455 12 000160   600002 220100                    LDX0    2,,PR6
        12 000161   000024 100003                    CMPX0   20,DU
        12 000162   000164 602010 12                 TNC     s:12455+4,X0
        12 000163   000620 710000 12                 TRA     s:12647
        12 000164   000514 710000 12                 TRA     s:12615
        12 000165   000210 710000 12                 TRA     s:12458
        12 000166   000620 710000 12                 TRA     s:12647
        12 000167   000620 710000 12                 TRA     s:12647
        12 000170   000210 710000 12                 TRA     s:12458
        12 000171   000210 710000 12                 TRA     s:12458
        12 000172   000242 710000 12                 TRA     s:12469
        12 000173   000451 710000 12                 TRA     s:12600
        12 000174   000242 710000 12                 TRA     s:12469
        12 000175   000210 710000 12                 TRA     s:12458
        12 000176   000620 710000 12                 TRA     s:12647
        12 000177   000620 710000 12                 TRA     s:12647
        12 000200   000327 710000 12                 TRA     s:12529
        12 000201   000620 710000 12                 TRA     s:12647
        12 000202   000242 710000 12                 TRA     s:12469
        12 000203   000620 710000 12                 TRA     s:12647
        12 000204   000620 710000 12                 TRA     s:12647
        12 000205   000620 710000 12                 TRA     s:12647
        12 000206   000210 710000 12                 TRA     s:12458
        12 000207   000417 710000 12                 TRA     s:12589

      205    12456
      206    12457    4                CASE(%TYI, %TYR, %TYQ, %TYP, %TYX) ;

      207    12458    4                  LTS$->DIMS.D.SPAN(LAST_DIM) = ST$->VARIABLE.NDSC.N / %BYTES_PER_WORD
             12458                           ;

  12458 12 000210   000003 402007                    MPY     3,DL
        12 000211   000000 621006                    EAX1    0,QL
        12 000212   600001 236100                    LDQ     1,,PR6
        12 000213   000077 376007                    ANQ     63,DL
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:36   
        12 000214   000002 772000                    QRL     2
        12 000215   700002 756111                    STQ     2,X1,PR7

      208    12459                       %COPY_SPAN_IN_BYTES_TO_WORDS(@LAST_ITEM="LAST_DIM-1") ;

  12461 12 000216   200010 236100                    LDQ     PREV_LTS$,,AUTO
        12 000217   000000 116000 13                 CMPQ    0
        12 000220   001100 600000 12                 TZE     s:12877

  12462 12 000221   000001 235007                    LDA     1,DL
        12 000222   200012 755100                    STA     I,,AUTO
        12 000223   000235 710000 12                 TRA     s:12464+1

  12463 12 000224   200012 236100                    LDQ     I,,AUTO
        12 000225   000003 402007                    MPY     3,DL
        12 000226   200010 470500                    LDP0    PREV_LTS$,,AUTO
        12 000227   000000 620006                    EAX0    0,QL
        12 000230   000002 236106                    LDQ     2,QL,PR0
        12 000231   000002 772000                    QRL     2
        12 000232   000000 471400 10                 LDP1    LTS$
        12 000233   100002 756110                    STQ     2,X0,PR1

  12464 12 000234   200012 054100                    AOS     I,,AUTO
        12 000235   200012 236100                    LDQ     I,,AUTO
        12 000236   000224 604000 12                 TMI     s:12463
        12 000237   200011 116100                    CMPQ    LAST_DIM,,AUTO
        12 000240   000224 602000 12                 TNC     s:12463

  12465 12 000241   001100 710000 12                 TRA     s:12877

      209    12467
      210    12468    4                CASE(%TYA, %TYN, %TYE) ;

      211    12469    4                  IF ST$->VARIABLE.B.LENGTH_4096 THEN

  12469 12 000242   600003 236100                    LDQ     3,,PR6
        12 000243   004000 316003                    CANQ    2048,DU
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:37   
        12 000244   000277 600000 12                 TZE     s:12517

      212    12470    5                    DO ;

      213    12471                           %GET_LTS (@ID = %LONG,@ST$=ST$, @RETURN$ = LTSS$) ;

  12473 12 000245   600005 236100                    LDQ     5,,PR6
        12 000246   000000 116000 13                 CMPQ    0
        12 000247   000257 600000 12                 TZE     s:12507
        12 000250   600005 470500                    LDP0    5,,PR6
        12 000251   000000 221100                    LDX1    0,,PR0
        12 000252   001105 101003                    CMPX1   581,DU
        12 000253   000257 601000 12                 TNZ     s:12507

  12481 12 000254   000003 236100                    LDQ     3,,PR0
        12 000255   200006 756100                    STQ     LTSS$,,AUTO

  12505 12 000256   000271 710000 12                 TRA     s:12514

  12507 12 000257   000000 116000 13                 CMPQ    0
        12 000260   000267 600000 12                 TZE     s:12511
        12 000261   600005 470500                    LDP0    5,,PR6
        12 000262   000000 221100                    LDX1    0,,PR0
        12 000263   001110 101003                    CMPX1   584,DU
        12 000264   000267 601000 12                 TNZ     s:12511

  12509 12 000265   200006 756100                    STQ     LTSS$,,AUTO
        12 000266   000271 710000 12                 TRA     s:12514

  12511 12 000267   000000 236000 13                 LDQ     0
        12 000270   200006 756100                    STQ     LTSS$,,AUTO

      214    12514    5                      LTS$->DIMS.D.SPAN(LAST_DIM) = LTSS$->LONG.LENGTH ;

  12514 12 000271   200011 236100                    LDQ     LAST_DIM,,AUTO
        12 000272   000003 402007                    MPY     3,DL
        12 000273   200006 470500                    LDP0    LTSS$,,AUTO
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:38   
        12 000274   000001 235100                    LDA     1,,PR0
        12 000275   700002 755106                    STA     2,QL,PR7

      215    12515    5                    END ;

  12515 12 000276   000305 710000 12                 TRA     s:12521

      216    12516    4                  ELSE
      217    12517    4                    LTS$->DIMS.D.SPAN(LAST_DIM) = ST$->VARIABLE.ADSC.N ;

  12517 12 000277   200011 236100                    LDQ     LAST_DIM,,AUTO
        12 000300   000003 402007                    MPY     3,DL
        12 000301   000000 621006                    EAX1    0,QL
        12 000302   600001 236100                    LDQ     1,,PR6
        12 000303   007777 376007                    ANQ     4095,DL
        12 000304   700002 756111                    STQ     2,X1,PR7

      218    12518
      219    12519                       %COPY_SPAN(@LAST_ITEM="LAST_DIM-1") ;

  12521 12 000305   200010 236100                    LDQ     PREV_LTS$,,AUTO
        12 000306   000000 116000 13                 CMPQ    0
        12 000307   001100 600000 12                 TZE     s:12877

  12522 12 000310   000001 235007                    LDA     1,DL
        12 000311   200012 755100                    STA     I,,AUTO
        12 000312   000322 710000 12                 TRA     s:12524+1

  12523 12 000313   200012 236100                    LDQ     I,,AUTO
        12 000314   000003 402007                    MPY     3,DL
        12 000315   200010 470500                    LDP0    PREV_LTS$,,AUTO
        12 000316   000000 471400 10                 LDP1    LTS$
        12 000317   000002 235106                    LDA     2,QL,PR0
        12 000320   100002 755106                    STA     2,QL,PR1

  12524 12 000321   200012 054100                    AOS     I,,AUTO
        12 000322   200012 236100                    LDQ     I,,AUTO
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:39   
        12 000323   000313 604000 12                 TMI     s:12523
        12 000324   200011 116100                    CMPQ    LAST_DIM,,AUTO
        12 000325   000313 602000 12                 TNC     s:12523

  12525 12 000326   001100 710000 12                 TRA     s:12877

      220    12527
      221    12528    4                CASE(%TYB) ;

      222    12529    4                  IF ST$->VARIABLE.B.LENGTH_4096 THEN

  12529 12 000327   600003 236100                    LDQ     3,,PR6
        12 000330   004000 316003                    CANQ    2048,DU
        12 000331   000364 600000 12                 TZE     s:12577

      223    12530    5                    DO ;

      224    12531                           %GET_LTS (@ID = %LONG,@ST$=ST$, @RETURN$ = LTSS$) ;

  12533 12 000332   600005 236100                    LDQ     5,,PR6
        12 000333   000000 116000 13                 CMPQ    0
        12 000334   000344 600000 12                 TZE     s:12567
        12 000335   600005 470500                    LDP0    5,,PR6
        12 000336   000000 221100                    LDX1    0,,PR0
        12 000337   001105 101003                    CMPX1   581,DU
        12 000340   000344 601000 12                 TNZ     s:12567

  12541 12 000341   000003 236100                    LDQ     3,,PR0
        12 000342   200006 756100                    STQ     LTSS$,,AUTO

  12565 12 000343   000356 710000 12                 TRA     s:12574

  12567 12 000344   000000 116000 13                 CMPQ    0
        12 000345   000354 600000 12                 TZE     s:12571
        12 000346   600005 470500                    LDP0    5,,PR6
        12 000347   000000 221100                    LDX1    0,,PR0
        12 000350   001110 101003                    CMPX1   584,DU
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:40   
        12 000351   000354 601000 12                 TNZ     s:12571

  12569 12 000352   200006 756100                    STQ     LTSS$,,AUTO
        12 000353   000356 710000 12                 TRA     s:12574

  12571 12 000354   000000 236000 13                 LDQ     0
        12 000355   200006 756100                    STQ     LTSS$,,AUTO

      225    12574    5                      LTS$->DIMS.D.SPAN(LAST_DIM) = LTSS$->LONG.LENGTH ;

  12574 12 000356   200011 236100                    LDQ     LAST_DIM,,AUTO
        12 000357   000003 402007                    MPY     3,DL
        12 000360   200006 470500                    LDP0    LTSS$,,AUTO
        12 000361   000001 235100                    LDA     1,,PR0
        12 000362   700002 755106                    STA     2,QL,PR7

      226    12575    5                    END ;

  12575 12 000363   000372 710000 12                 TRA     s:12581

      227    12576    4                  ELSE
      228    12577    4                    LTS$->DIMS.D.SPAN(LAST_DIM) = ST$->VARIABLE.ADSC.N ;

  12577 12 000364   200011 236100                    LDQ     LAST_DIM,,AUTO
        12 000365   000003 402007                    MPY     3,DL
        12 000366   000000 621006                    EAX1    0,QL
        12 000367   600001 236100                    LDQ     1,,PR6
        12 000370   007777 376007                    ANQ     4095,DL
        12 000371   700002 756111                    STQ     2,X1,PR7

      229    12578
      230    12579                       %COPY_SPAN_IN_BYTES_TO_CHARS(@LAST_ITEM="LAST_DIM-1") ;

  12581 12 000372   200010 236100                    LDQ     PREV_LTS$,,AUTO
        12 000373   000000 116000 13                 CMPQ    0
        12 000374   001100 600000 12                 TZE     s:12877

PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:41   
  12582 12 000375   000001 235007                    LDA     1,DL
        12 000376   200012 755100                    STA     I,,AUTO
        12 000377   000412 710000 12                 TRA     s:12584+1

  12583 12 000400   200012 236100                    LDQ     I,,AUTO
        12 000401   000003 402007                    MPY     3,DL
        12 000402   200010 470500                    LDP0    PREV_LTS$,,AUTO
        12 000403   000000 620006                    EAX0    0,QL
        12 000404   000002 236106                    LDQ     2,QL,PR0
        12 000405   000003 402007                    MPY     3,DL
        12 000406   000001 772000                    QRL     1
        12 000407   000000 471400 10                 LDP1    LTS$
        12 000410   100002 756110                    STQ     2,X0,PR1

  12584 12 000411   200012 054100                    AOS     I,,AUTO
        12 000412   200012 236100                    LDQ     I,,AUTO
        12 000413   000400 604000 12                 TMI     s:12583
        12 000414   200011 116100                    CMPQ    LAST_DIM,,AUTO
        12 000415   000400 602000 12                 TNC     s:12583

  12585 12 000416   001100 710000 12                 TRA     s:12877

      231    12587
      232    12588    4                CASE(%TYC);

      233    12589    4                  LTS$->DIMS.D.SPAN(LAST_DIM) = ST$->VARIABLE.NDSC.N;

  12589 12 000417   000003 402007                    MPY     3,DL
        12 000420   000000 621006                    EAX1    0,QL
        12 000421   600001 236100                    LDQ     1,,PR6
        12 000422   000077 376007                    ANQ     63,DL
        12 000423   700002 756111                    STQ     2,X1,PR7

      234    12590                       %COPY_SPAN_IN_BYTES_TO_CHARS(@LAST_ITEM="LAST_DIM-1") ;

  12592 12 000424   200010 236100                    LDQ     PREV_LTS$,,AUTO
        12 000425   000000 116000 13                 CMPQ    0
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:42   
        12 000426   001100 600000 12                 TZE     s:12877

  12593 12 000427   000001 235007                    LDA     1,DL
        12 000430   200012 755100                    STA     I,,AUTO
        12 000431   000444 710000 12                 TRA     s:12595+1

  12594 12 000432   200012 236100                    LDQ     I,,AUTO
        12 000433   000003 402007                    MPY     3,DL
        12 000434   200010 470500                    LDP0    PREV_LTS$,,AUTO
        12 000435   000000 620006                    EAX0    0,QL
        12 000436   000002 236106                    LDQ     2,QL,PR0
        12 000437   000003 402007                    MPY     3,DL
        12 000440   000001 772000                    QRL     1
        12 000441   000000 471400 10                 LDP1    LTS$
        12 000442   100002 756110                    STQ     2,X0,PR1

  12595 12 000443   200012 054100                    AOS     I,,AUTO
        12 000444   200012 236100                    LDQ     I,,AUTO
        12 000445   000432 604000 12                 TMI     s:12594
        12 000446   200011 116100                    CMPQ    LAST_DIM,,AUTO
        12 000447   000432 602000 12                 TNC     s:12594

  12596 12 000450   001100 710000 12                 TRA     s:12877

      235    12598
      236    12599    4                CASE(%TYH) ;

      237    12600    4                  IF QUAL$->QLT.B.SYNC THEN

  12600 12 000451   000000 236100                    LDQ     0,,PR0
        12 000452   200000 316007                    CANQ    65536,DL
        12 000453   000464 600000 12                 TZE     s:12603

      238    12601    4                    LTS$->DIMS.D.SPAN(LAST_DIM) = ST$->VARIABLE.NDSC.N + %(
             12601                             BYTES_PER_WORD / 2) ;

  12601 12 000454   200011 236100                    LDQ     LAST_DIM,,AUTO
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:43   
        12 000455   000003 402007                    MPY     3,DL
        12 000456   000000 621006                    EAX1    0,QL
        12 000457   600001 236100                    LDQ     1,,PR6
        12 000460   000077 376007                    ANQ     63,DL
        12 000461   000002 036007                    ADLQ    2,DL
        12 000462   700002 756111                    STQ     2,X1,PR7
        12 000463   000472 710000 12                 TRA     s:12607

      239    12602    4                  ELSE
      240    12603    4                    LTS$->DIMS.D.SPAN(LAST_DIM) = ST$->VARIABLE.NDSC.N ;

  12603 12 000464   200011 236100                    LDQ     LAST_DIM,,AUTO
        12 000465   000003 402007                    MPY     3,DL
        12 000466   000000 621006                    EAX1    0,QL
        12 000467   600001 236100                    LDQ     1,,PR6
        12 000470   000077 376007                    ANQ     63,DL
        12 000471   700002 756111                    STQ     2,X1,PR7

      241    12604
      242    12605                       %COPY_SPAN(@LAST_ITEM="LAST_DIM-1") ;

  12607 12 000472   200010 236100                    LDQ     PREV_LTS$,,AUTO
        12 000473   000000 116000 13                 CMPQ    0
        12 000474   001100 600000 12                 TZE     s:12877

  12608 12 000475   000001 235007                    LDA     1,DL
        12 000476   200012 755100                    STA     I,,AUTO
        12 000477   000507 710000 12                 TRA     s:12610+1

  12609 12 000500   200012 236100                    LDQ     I,,AUTO
        12 000501   000003 402007                    MPY     3,DL
        12 000502   200010 470500                    LDP0    PREV_LTS$,,AUTO
        12 000503   000000 471400 10                 LDP1    LTS$
        12 000504   000002 235106                    LDA     2,QL,PR0
        12 000505   100002 755106                    STA     2,QL,PR1

  12610 12 000506   200012 054100                    AOS     I,,AUTO
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:44   
        12 000507   200012 236100                    LDQ     I,,AUTO
        12 000510   000500 604000 12                 TMI     s:12609
        12 000511   200011 116100                    CMPQ    LAST_DIM,,AUTO
        12 000512   000500 602000 12                 TNC     s:12609

  12611 12 000513   001100 710000 12                 TRA     s:12877

      243    12613
      244    12614    4                CASE(%TYD) ;

      245    12615    4                  IF ST$->VARIABLE.NDSC.TN THEN

  12615 12 000514   600001 236100                    LDQ     1,,PR6
        12 000515   040000 316007                    CANQ    16384,DL
        12 000516   000570 600000 12                 TZE     s:12635

      246    12616    5                    DO ;

      247    12617
      248    12618    5                      IF NOT (QUAL$->QLT.B.DIGIT) AND MOD(ST$->VARIABLE.NDSC.N,2) = %
             12618                               DIGIT_ALIGNED THEN

  12618 12 000517   000000 236100                    LDQ     0,,PR0
        12 000520   100000 316007                    CANQ    32768,DL
        12 000521   000537 601000 12                 TNZ     s:12621
        12 000522   600001 236100                    LDQ     1,,PR6
        12 000523   000077 376007                    ANQ     63,DL
        12 000524   000001 376007                    ANQ     1,DL
        12 000525   000001 116007                    CMPQ    1,DL
        12 000526   000537 601000 12                 TNZ     s:12621

      249    12619    5                        LTS$->DIMS.D.SPAN(LAST_DIM) = ST$->VARIABLE.NDSC.N + 1 ;

  12619 12 000527   200011 236100                    LDQ     LAST_DIM,,AUTO
        12 000530   000003 402007                    MPY     3,DL
        12 000531   000000 621006                    EAX1    0,QL
        12 000532   600001 236100                    LDQ     1,,PR6
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:45   
        12 000533   000077 376007                    ANQ     63,DL
        12 000534   000001 036007                    ADLQ    1,DL
        12 000535   700002 756111                    STQ     2,X1,PR7
        12 000536   000545 710000 12                 TRA     s:12625

      250    12620    5                      ELSE
      251    12621    5                        LTS$->DIMS.D.SPAN (LAST_DIM) = ST$->VARIABLE.NDSC.N ;

  12621 12 000537   200011 236100                    LDQ     LAST_DIM,,AUTO
        12 000540   000003 402007                    MPY     3,DL
        12 000541   000000 621006                    EAX1    0,QL
        12 000542   600001 236100                    LDQ     1,,PR6
        12 000543   000077 376007                    ANQ     63,DL
        12 000544   700002 756111                    STQ     2,X1,PR7

      252    12622
      253    12623                           %COPY_SPAN_IN_BYTES_TO_DIGITS(@LAST_ITEM="LAST_DIM-1") ;

  12625 12 000545   200010 236100                    LDQ     PREV_LTS$,,AUTO
        12 000546   000000 116000 13                 CMPQ    0
        12 000547   001100 600000 12                 TZE     s:12877

  12626 12 000550   000001 235007                    LDA     1,DL
        12 000551   200012 755100                    STA     I,,AUTO
        12 000552   000563 710000 12                 TRA     s:12628+1

  12627 12 000553   200012 236100                    LDQ     I,,AUTO
        12 000554   000003 402007                    MPY     3,DL
        12 000555   200010 470500                    LDP0    PREV_LTS$,,AUTO
        12 000556   000000 471400 10                 LDP1    LTS$
        12 000557   000002 235106                    LDA     2,QL,PR0
        12 000560   000001 735000                    ALS     1
        12 000561   100002 755106                    STA     2,QL,PR1

  12628 12 000562   200012 054100                    AOS     I,,AUTO
        12 000563   200012 236100                    LDQ     I,,AUTO
        12 000564   000553 604000 12                 TMI     s:12627
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:46   
        12 000565   200011 116100                    CMPQ    LAST_DIM,,AUTO
        12 000566   000553 602000 12                 TNC     s:12627

      254    12631
      255    12632    5                    END ;

  12632 12 000567   001100 710000 12                 TRA     s:12877

      256    12633    4                  ELSE
      257    12634    5                    DO ;

      258    12635    5                      LTS$->DIMS.D.SPAN(LAST_DIM) = ST$->VARIABLE.NDSC.N ;

  12635 12 000570   200011 236100                    LDQ     LAST_DIM,,AUTO
        12 000571   000003 402007                    MPY     3,DL
        12 000572   000000 621006                    EAX1    0,QL
        12 000573   600001 236100                    LDQ     1,,PR6
        12 000574   000077 376007                    ANQ     63,DL
        12 000575   700002 756111                    STQ     2,X1,PR7

      259    12636                           %COPY_SPAN(@LAST_ITEM="LAST_DIM-1") ;

  12638 12 000576   200010 236100                    LDQ     PREV_LTS$,,AUTO
        12 000577   000000 116000 13                 CMPQ    0
        12 000600   001100 600000 12                 TZE     s:12877

  12639 12 000601   000001 235007                    LDA     1,DL
        12 000602   200012 755100                    STA     I,,AUTO
        12 000603   000613 710000 12                 TRA     s:12641+1

  12640 12 000604   200012 236100                    LDQ     I,,AUTO
        12 000605   000003 402007                    MPY     3,DL
        12 000606   200010 470500                    LDP0    PREV_LTS$,,AUTO
        12 000607   000000 471400 10                 LDP1    LTS$
        12 000610   000002 235106                    LDA     2,QL,PR0
        12 000611   100002 755106                    STA     2,QL,PR1

PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:47   
  12641 12 000612   200012 054100                    AOS     I,,AUTO
        12 000613   200012 236100                    LDQ     I,,AUTO
        12 000614   000604 604000 12                 TMI     s:12640
        12 000615   200011 116100                    CMPQ    LAST_DIM,,AUTO
        12 000616   000604 602000 12                 TNC     s:12640

      260    12644    5                    END ;

  12644 12 000617   001100 710000 12                 TRA     s:12877

      261    12645
      262    12646    4                CASE(ELSE) ;

      263    12647    4                  LTS$->DIMS.D.SPAN(LAST_DIM) = ST$->VARIABLE.NDSC.N ;

  12647 12 000620   000003 402007                    MPY     3,DL
        12 000621   000000 621006                    EAX1    0,QL
        12 000622   600001 236100                    LDQ     1,,PR6
        12 000623   000077 376007                    ANQ     63,DL
        12 000624   700002 756111                    STQ     2,X1,PR7

      264    12648                       %COPY_SPAN(@LAST_ITEM="LAST_DIM-1") ;

  12650 12 000625   200010 236100                    LDQ     PREV_LTS$,,AUTO
        12 000626   000000 116000 13                 CMPQ    0
        12 000627   001100 600000 12                 TZE     s:12877

  12651 12 000630   000001 235007                    LDA     1,DL
        12 000631   200012 755100                    STA     I,,AUTO
        12 000632   000642 710000 12                 TRA     s:12653+1

  12652 12 000633   200012 236100                    LDQ     I,,AUTO
        12 000634   000003 402007                    MPY     3,DL
        12 000635   200010 470500                    LDP0    PREV_LTS$,,AUTO
        12 000636   000000 471400 10                 LDP1    LTS$
        12 000637   000002 235106                    LDA     2,QL,PR0
        12 000640   100002 755106                    STA     2,QL,PR1
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:48   

  12653 12 000641   200012 054100                    AOS     I,,AUTO
        12 000642   200012 236100                    LDQ     I,,AUTO
        12 000643   000633 604000 12                 TMI     s:12652
        12 000644   200011 116100                    CMPQ    LAST_DIM,,AUTO
        12 000645   000633 602000 12                 TNC     s:12652

      265    12656
      266    12657    4              END /* CASE */ ;

      267    12658
      268    12659    3            END;

  12659 12 000646   001100 710000 12                 TRA     s:12877

      269    12660        %EJECT ;
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:49   
      270    12661        /*V*
      271    12662            NO_OCCURS_CLAUSE  --  Item has no occurs cause:  copy over inherited spans
      272    12663                                  and convert into correct units.
      273    12664        */
      274    12665
      275    12666    2          ELSE
      276    12667    3            DO ; /* B.OCCURS = FALSE */

      277    12668
      278    12669        /*V*
      279    12670            SET_UP_LTS_AND_INITIALIZE -- Create a DIMS item of the same length as the
      280    12671                                         item's father.  The ID, length, and DN2 value
      281    12672                                         are copied over.  The dimensions and indices
      282    12673                                         for all of the dimensions are also copied over.
      283    12674        */
      284    12675
      285    12676    3              IF  PREV_LTS$ ~= ADDR(NIL)

  12676 12 000647   200010 236100                    LDQ     PREV_LTS$,,AUTO
        12 000650   000000 116000 13                 CMPQ    0
        12 000651   001100 600000 12                 TZE     s:12877
        12 000652   000000 236100                    LDQ     0,,PR0
        12 000653   000777 376007                    ANQ     511,DL
        12 000654   000130 116007                    CMPQ    88,DL
        12 000655   001100 600000 12                 TZE     s:12877

      286    12677    3              AND QUAL$->QLT.LEVEL_NO ~= 88 THEN
      287    12678    4                DO ;

      288    12679                       %NEW_DIMS (@POINTER = LTS$,
      289    12680                                  @SIZE = "PREV_LTS$ ->LTS.N",
      290    12681                                  @DN2$ = "PREV_LTS$ -> DIMS.DN2") ;

  12683 12 000656   200010 476500                    LDP6    PREV_LTS$,,AUTO
        12 000657   600000 236100                    LDQ     0,,PR6
        12 000660   777777 376007                    ANQ     -1,DL
        12 000661   000000 756000 0                  STQ     ITERATION
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:50   

  12761 12 000662   000002 036000 11                 ADLQ    LTS_+2
        12 000663   000003 116000 11                 CMPQ    LTS_+3
        12 000664   000675 604000 12                 TMI     s:12763

  12762 12 000665   000002 236000 13                 LDQ     2
        12 000666   200014 756100                    STQ     I+2,,AUTO
        12 000667   200014 631500                    EPPR1   I+2,,AUTO
        12 000670   200015 451500                    STP1    I+3,,AUTO
        12 000671   200015 630500                    EPPR0   I+3,,AUTO
        12 000672   000001 631400 13                 EPPR1   1
        12 000673   000000 701000 xent               TSX1    Z8AR$RESERVER
        12 000674   000000 011000                    NOP     0

  12763 12 000675   000002 236000 11                 LDQ     LTS_+2
        12 000676   000022 736000                    QLS     18
        12 000677   000001 036000 11                 ADLQ    LTS_+1
        12 000700   000000 756000 10                 STQ     LTS$

  12764 12 000701   000002 236000 11                 LDQ     LTS_+2
        12 000702   000000 036000 0                  ADLQ    ITERATION
        12 000703   000002 756000 11                 STQ     LTS_+2

  12765 12 000704   001104 220003                    LDX0    580,DU
        12 000705   000000 470400 10                 LDP0    LTS$
        12 000706   000000 740100                    STX0    0,,PR0

  12767 12 000707   000000 721000 0                  LXL1    ITERATION
        12 000710   000000 470400 10                 LDP0    LTS$
        12 000711   000000 441100                    SXL1    0,,PR0

  12771 12 000712   200010 470500                    LDP0    PREV_LTS$,,AUTO
        12 000713   000001 236100                    LDQ     1,,PR0
        12 000714   000000 471400 10                 LDP1    LTS$
        12 000715   100001 756100                    STQ     1,,PR1

      291    12774
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:51   
      292    12775                       %FIND_LAST_DIM(POINTER=LTS$, VARIABLE=LAST_DIM) ;

  12777 12 000716   100000 236100                    LDQ     0,,PR1
        12 000717   777777 376007                    ANQ     -1,DL
        12 000720   000005 136007                    SBLQ    5,DL
        12 000721   000003 506007                    DIV     3,DL
        12 000722   200011 756100                    STQ     LAST_DIM,,AUTO

      293    12780
      294    12781    5                  DO I = 1 TO LAST_DIM;

  12781 12 000723   000001 235007                    LDA     1,DL
        12 000724   200012 755100                    STA     I,,AUTO
        12 000725   000744 710000 12                 TRA     s:12794+1

      295    12782                         %FILL_DIMS (@DIMS$  = LTS$,
      296    12783                                     @SS#    = I,
      297    12784                                     @INDEX$ = "PREV_LTS$ -> DIMS.D.INDEX$(I)",
      298    12785                                     @SPAN   = "PREV_LTS$ -> DIMS.D.SPAN(I)",
      299    12786                                     @DIM    = "PREV_LTS$ -> DIMS.D.DIM(I)") ;

  12788 12 000726   200012 236100                    LDQ     I,,AUTO
        12 000727   000003 402007                    MPY     3,DL
        12 000730   200010 470500                    LDP0    PREV_LTS$,,AUTO
        12 000731   000000 620006                    EAX0    0,QL
        12 000732   000004 236106                    LDQ     4,QL,PR0
        12 000733   000000 471400 10                 LDP1    LTS$
        12 000734   100004 756110                    STQ     4,X0,PR1

  12789 12 000735   000000 471400 10                 LDP1    LTS$
        12 000736   000002 235110                    LDA     2,X0,PR0
        12 000737   100002 755110                    STA     2,X0,PR1

  12790 12 000740   000000 471400 10                 LDP1    LTS$
        12 000741   000003 235110                    LDA     3,X0,PR0
        12 000742   100003 755110                    STA     3,X0,PR1

PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:52   
      300    12793        %EJECT ;
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:53   
      301    12794    5                  END;

  12794 12 000743   200012 054100                    AOS     I,,AUTO
        12 000744   200011 236100                    LDQ     LAST_DIM,,AUTO
        12 000745   000726 604000 12                 TMI     s:12788
        12 000746   200012 116100                    CMPQ    I,,AUTO
        12 000747   000726 605000 12                 TPL     s:12788

      302    12795        /*V*
      303    12796            CHANGE_SCALAR_TO_ARRAY -- The symbol table id is changed from a scalar item
      304    12797                                      to an array item as well as it being marked.
      305    12798
      306    12799                                      The symbol table is also given access to the DIMS
      307    12800                                      entry.  If no previous LTS entry has been created
      308    12801                                      for the data item the DIMS pointer is stored
      309    12802                                      straight into the symbol table otherwise the DIMS
      310    12803                                      pointer is stored in a LTSS item.
      311    12804
      312    12805                                      If no LTSS item was needed before then one is
      313    12806                                      created and the NEL pointer or LONG pointer is
      314    12807                                      stored in the LONG item as well.
      315    12808        */
      316    12809
      317    12810    4                  ST$->VARIABLE.ID = %ARRAY ;

  12810 12 000750   000765 220003                    LDX0    501,DU
        12 000751   000000 471400 5                  LDP1    ST$
        12 000752   100000 740100                    STX0    0,,PR1

      318    12811
      319    12812    4                  CALL Z8DO$LINK_WITH_LTS (ST$ -> VARIABLE.LTS$, LTS$) ;

  12812 12 000753   000004 236000 13                 LDQ     4
        12 000754   200015 756100                    STQ     I+3,,AUTO
        12 000755   000000 236000 5                  LDQ     ST$
        12 000756   000005 036003                    ADLQ    5,DU
        12 000757   200014 756100                    STQ     I+2,,AUTO
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:54   
        12 000760   200014 630500                    EPPR0   I+2,,AUTO
        12 000761   000003 631400 13                 EPPR1   3
        12 000762   000000 701000 xent               TSX1    Z8DO$LINK_WITH_LTS
        12 000763   000000 011000                    NOP     0

      320    12813        %EJECT ;
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:55   
      321    12814        /*V*
      322    12815            CONVERT_PREVIOUS_SPANS -- Convert all spans to the proper units depending
      323    12816                                      on the type of item.
      324    12817
      325    12818
      326    12819                                      Span in digits:
      327    12820                                          TYD when length is in terms of digits
      328    12821                                            (ST$->VARIABLE.NDSC.TN = TRUE).
      329    12822
      330    12823                                   Span in 6-bit characters:
      331    12824                                       TYB and TYC
      332    12825
      333    12826                                      Span in words:
      334    12827                                          TYI, TYR, TYQ, TYP, and TYX.
      335    12828
      336    12829                                      Span in bytes:
      337    12830                                          All other entries.
      338    12831           */
      339    12832
      340    12833    5                  DO CASE(ST$->VARIABLE.TYPE) ;

  12833 12 000764   000000 470400 5                  LDP0    ST$
        12 000765   000002 220100                    LDX0    2,,PR0
        12 000766   000024 100003                    CMPX0   20,DU
        12 000767   000771 602010 12                 TNC     s:12833+5,X0
        12 000770   001100 710000 12                 TRA     s:12877
        12 000771   001035 710000 12                 TRA     s:12843
        12 000772   001015 710000 12                 TRA     s:12837
        12 000773   001100 710000 12                 TRA     s:12877
        12 000774   001100 710000 12                 TRA     s:12877
        12 000775   001015 710000 12                 TRA     s:12837
        12 000776   001015 710000 12                 TRA     s:12837
        12 000777   001100 710000 12                 TRA     s:12877
        12 001000   001100 710000 12                 TRA     s:12877
        12 001001   001100 710000 12                 TRA     s:12877
        12 001002   001015 710000 12                 TRA     s:12837
        12 001003   001100 710000 12                 TRA     s:12877
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:56   
        12 001004   001100 710000 12                 TRA     s:12877
        12 001005   001057 710000 12                 TRA     s:12852
        12 001006   001100 710000 12                 TRA     s:12877
        12 001007   001100 710000 12                 TRA     s:12877
        12 001010   001100 710000 12                 TRA     s:12877
        12 001011   001100 710000 12                 TRA     s:12877
        12 001012   001100 710000 12                 TRA     s:12877
        12 001013   001015 710000 12                 TRA     s:12837
        12 001014   001057 710000 12                 TRA     s:12852

      341    12834
      342    12835    5                    CASE(%TYI, %TYR, %TYQ, %TYP, %TYX) ;

      343    12836                           %CONV_SPAN_IN_BYTES_TO_WORDS(@LAST_ITEM=LAST_DIM) ;

  12837 12 001015   000001 235007                    LDA     1,DL
        12 001016   200012 755100                    STA     I,,AUTO
        12 001017   001030 710000 12                 TRA     s:12839+1

  12838 12 001020   200012 236100                    LDQ     I,,AUTO
        12 001021   000003 402007                    MPY     3,DL
        12 001022   000000 470400 10                 LDP0    LTS$
        12 001023   000000 620006                    EAX0    0,QL
        12 001024   000002 236106                    LDQ     2,QL,PR0
        12 001025   000002 772000                    QRL     2
        12 001026   000002 756110                    STQ     2,X0,PR0

  12839 12 001027   200012 054100                    AOS     I,,AUTO
        12 001030   200011 236100                    LDQ     LAST_DIM,,AUTO
        12 001031   001020 604000 12                 TMI     s:12838
        12 001032   200012 116100                    CMPQ    I,,AUTO
        12 001033   001020 605000 12                 TPL     s:12838
        12 001034   001100 710000 12                 TRA     s:12877

      344    12841
      345    12842    5                    CASE(%TYD) ;

PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:57   
      346    12843    5                      IF ST$->VARIABLE.NDSC.TN THEN

  12843 12 001035   000001 236100                    LDQ     1,,PR0
        12 001036   040000 316007                    CANQ    16384,DL
        12 001037   001100 600000 12                 TZE     s:12877

      347    12844                             %CONV_SPAN_IN_BYTES_TO_DIGITS(@LAST_ITEM=LAST_DIM) ;

  12845 12 001040   000001 235007                    LDA     1,DL
        12 001041   200012 755100                    STA     I,,AUTO
        12 001042   001052 710000 12                 TRA     s:12847+1

  12846 12 001043   200012 236100                    LDQ     I,,AUTO
        12 001044   000003 402007                    MPY     3,DL
        12 001045   000000 470400 10                 LDP0    LTS$
        12 001046   000002 235106                    LDA     2,QL,PR0
        12 001047   000001 735000                    ALS     1
        12 001050   000002 755106                    STA     2,QL,PR0

  12847 12 001051   200012 054100                    AOS     I,,AUTO
        12 001052   200011 236100                    LDQ     LAST_DIM,,AUTO
        12 001053   001043 604000 12                 TMI     s:12846
        12 001054   200012 116100                    CMPQ    I,,AUTO
        12 001055   001043 605000 12                 TPL     s:12846
        12 001056   001100 710000 12                 TRA     s:12877

      348    12849
      349    12850    5                    CASE(%TYB, %TYC) ;

      350    12851                           %CONV_SPAN_IN_BYTES_TO_CHARS(@LAST_ITEM=LAST_DIM) ;

  12852 12 001057   000001 235007                    LDA     1,DL
        12 001060   200012 755100                    STA     I,,AUTO
        12 001061   001073 710000 12                 TRA     s:12854+1

  12853 12 001062   200012 236100                    LDQ     I,,AUTO
        12 001063   000003 402007                    MPY     3,DL
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:58   
        12 001064   000000 470400 10                 LDP0    LTS$
        12 001065   000000 620006                    EAX0    0,QL
        12 001066   000002 236106                    LDQ     2,QL,PR0
        12 001067   000003 402007                    MPY     3,DL
        12 001070   000001 772000                    QRL     1
        12 001071   000002 756110                    STQ     2,X0,PR0

  12854 12 001072   200012 054100                    AOS     I,,AUTO
        12 001073   200011 236100                    LDQ     LAST_DIM,,AUTO
        12 001074   001062 604000 12                 TMI     s:12853
        12 001075   200012 116100                    CMPQ    I,,AUTO
        12 001076   001062 605000 12                 TPL     s:12853
        12 001077   001100 710000 12                 TRA     s:12877

      351    12856
      352    12857    5                    CASE(ELSE) ;

      353    12858                           /* No conversion needed */
      354    12859
      355    12860    5                  END ;

      356    12861    4                END ; /* PREV_LTS$ <> Nil & Level <> 88 */

      357    12862    3            END ; /* B.OCCURS = FALSE */

      358    12863        %EJECT ;
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:59   
      359    12864        /*V*
      360    12865            OFFSET_OFF_TRIAD -- Compute the fudge offset for the OFF triad.
      361    12866                                This will be stored in TOTAL_SPAN.  The fudge offset
      362    12867                                is the length of the zero element of the
      363    12868                                array. This is used to find inner members of the
      364    12869                                array.  If the total span is larger than the maximum
      365    12870                                span size then the maximum span size is stored.
      366    12871                                After TOTAL_SPAN is calculated it is compared to 256k, if
      367    12872                                the total span exceeds this limit then ST.B.GREATER_256K
      368    12873                                is set to true.  This is done as code generation will
      369    12874                                handle large items with another register.
      370    12875        */
      371    12876
      372    12877    2          IF LTS$ ~= ADDR(NIL) THEN

  12877 12 001100   000000 236000 10                 LDQ     LTS$
        12 001101   000000 116000 13                 CMPQ    0
        12 001102   001142 600000 12                 TZE     s:12898

      373    12878    3            DO ;

      374    12879
      375    12880    4              DO I = 1 TO LAST_DIM ;

  12880 12 001103   000001 235007                    LDA     1,DL
        12 001104   200012 755100                    STA     I,,AUTO
        12 001105   001126 710000 12                 TRA     s:12885+1

      376    12881    4                IF (LTS$->DIMS.OD.TOTAL_SPAN + LTS$->DIMS.D.SPAN(I)) > %(#256K * 8)
             12881                         THEN

  12881 12 001106   000000 470400 10                 LDP0    LTS$
        12 001107   200012 236100                    LDQ     I,,AUTO
        12 001110   000003 402007                    MPY     3,DL
        12 001111   000002 236106                    LDQ     2,QL,PR0
        12 001112   000004 036100                    ADLQ    4,,PR0
        12 001113   000010 116003                    CMPQ    8,DU
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:60   
        12 001114   001120 604400 12                 TMOZ    s:12884

      377    12882    4                  LTS$->DIMS.OD.TOTAL_SPAN = %(#256K * 8) ;

  12882 12 001115   000010 235003                    LDA     8,DU
        12 001116   000004 755100                    STA     4,,PR0
        12 001117   001125 710000 12                 TRA     s:12885

      378    12883    4                ELSE
      379    12884    4                  LTS$->DIMS.OD.TOTAL_SPAN = LTS$->DIMS.OD.TOTAL_SPAN + LTS$->DIMS.D.
             12884                           SPAN(I) ;

  12884 12 001120   200012 236100                    LDQ     I,,AUTO
        12 001121   000003 402007                    MPY     3,DL
        12 001122   000002 236106                    LDQ     2,QL,PR0
        12 001123   000004 036100                    ADLQ    4,,PR0
        12 001124   000004 756100                    STQ     4,,PR0

      380    12885    4              END ;

  12885 12 001125   200012 054100                    AOS     I,,AUTO
        12 001126   200011 236100                    LDQ     LAST_DIM,,AUTO
        12 001127   001106 604000 12                 TMI     s:12881
        12 001130   200012 116100                    CMPQ    I,,AUTO
        12 001131   001106 605000 12                 TPL     s:12881

      381    12886
      382    12887    3              IF LTS$->DIMS.D.DIM(1) * LTS$->DIMS.D.SPAN(1) >= %#256K THEN

  12887 12 001132   000000 470400 10                 LDP0    LTS$
        12 001133   000006 236100                    LDQ     6,,PR0
        12 001134   000005 402100                    MPY     5,,PR0
        12 001135   000001 116003                    CMPQ    1,DU
        12 001136   001142 602000 12                 TNC     s:12898

      383    12888    3                ST$->VARIABLE.B.GREATER_256K = TRUE ;

PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:61   
  12888 12 001137   000000 471400 5                  LDP1    ST$
        12 001140   020000 236003                    LDQ     8192,DU
        12 001141   100003 256100                    ORSQ    3,,PR1

      384    12889
      385    12890    3            END ;

      386    12891        %EJECT ;
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:62   
      387    12892        /*V*
      388    12893            CALL_Z8DS -- Call Z8DS passing the son as a parameter if one exists
      389    12894                         and call Z8DS passing the brother as a parameter if
      390    12895                         one exists.
      391    12896        */
      392    12897
      393    12898    2          IF QUAL$->QLT.SON ~= ADDR(NIL) AND NOT QUAL$->QLT.B.RENAMES THEN

  12898 12 001142   200004 470500                    LDP0    QUAL$,,AUTO
        12 001143   000003 236100                    LDQ     3,,PR0
        12 001144   000000 116000 13                 CMPQ    0
        12 001145   001160 600000 12                 TZE     s:12901
        12 001146   000000 236100                    LDQ     0,,PR0
        12 001147   040000 316007                    CANQ    16384,DL
        12 001150   001160 601000 12                 TNZ     s:12901

      394    12899    2            CALL Z8DS$SPAN__CALC (QUAL$->QLT.SON) ;

  12899 12 001151   200004 236100                    LDQ     QUAL$,,AUTO
        12 001152   000003 036003                    ADLQ    3,DU
        12 001153   200014 756100                    STQ     I+2,,AUTO
        12 001154   200014 630500                    EPPR0   I+2,,AUTO
        12 001155   000001 631400 13                 EPPR1   1
        12 001156   000000 701000 12                 TSX1    s:6
        12 001157   000000 011000                    NOP     0

      395    12900
      396    12901    2          QUAL$ = QUAL$ -> QLT.BROTHER ;

  12901 12 001160   200004 470500                    LDP0    QUAL$,,AUTO
        12 001161   000002 236100                    LDQ     2,,PR0
        12 001162   200004 756100                    STQ     QUAL$,,AUTO

      397    12902
      398    12903    2        END ; /* Do While QUAL$ is non-nil */

  12903 12 001163   000000 116000 13                 CMPQ    0
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:63   
        12 001164   000006 601000 12                 TNZ     s:12299

      399    12904
      400    12905    1   END Z8DS$SPAN__CALC ;

  12905 12 001165   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:64   
--  Include file information  --

   Z8A_LTS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_QLT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ST.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8E_O1COM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_TYPES.:Z8A6TOU  is referenced.
   Z8A_LEX_SYMB.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_STACKS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8DS$SPAN__CALC.
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:65   

 **** Variables and constants ****

  ****  Section 000 LblCom ITERATION

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 ITERATION

  ****  Section 001 LblCom LEX_SYMBOL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)  r     1 LEX_SYMBOL                 0-0-0/w STRC(3240)        1 LEX_SYMBOL_WORDS

  ****  Section 002 LblCom CURRENT_LEX_SYMBOL$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 CURRENT_LEX_SYMBOL$

  ****  Section 003 LblCom TEMP_LEX_SYMBOL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)        1 TEMP_LEX_SYMBOL

  ****  Section 004 LblCom TEMP_LEX_SYMBOL2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)        1 TEMP_LEX_SYMBOL2

PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:66   
  ****  Section 005 LblCom ST$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 ST$

  ****  Section 006 LblCom ST_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 ST_

  ****  Section 007 LblCom QLT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 QLT$

  ****  Section 008 LblCom PREV_01_QLT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 PREV_01_QLT$

  ****  Section 009 LblCom QLT_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 QLT_

  ****  Section 010 LblCom LTS$

PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:67   
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 LONG_ITEM$                 0-0-0/w PTR         r     1 LTS$

  ****  Section 011 LblCom LTS_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)   r     1 LTS_

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @QLT$$                     5-0-0/w PTR               1 BRO$
    12-0-0/w SBIN        r     1 I                         11-0-0/w UBIN        r     1 LAST_DIM
     6-0-0/w PTR         r     1 LTSS$                     10-0-0/w PTR         r     1 PREV_LTS$
     7-0-0/w PTR         r     1 PREV_ST$                  *0-0-0/w PTR         r     1 QLT$$
     4-0-0/w PTR         r     1 QUAL$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(13248)       1 COMCOM
     0-0-0/w STRC(180)         1 HIER_STK(0:50)
     0-0-0/w SBIN              1 HIER_STK_PTR
     0-0-0/w UBIN              1 LTS_STEP(0:37)
     0-0-0/d STRC(11580)       1 O1COM                      0-0-0/w STRC(144)         1 PAGE_FORMAT
     0-0-0/w STRC(153)         1 REP_STK(0:50)              0-0-0/w SBIN              1 REP_STK_PTR

  ****  BASED and DCB variables  ****

PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:68   
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(288)         1 ADD_STMT                   0-0-0/w STRC(396)         1 ALPHABET
     0-0-0/w STRC(144)         1 ALTER_LTS                  0-0-0/w STRC(3672)        1 ALT_KEY
     0-0-0/w STRC(36864)       1 ARGLIST                    0-0-0/w STRC(396)         1 ARRAY
     0-0-0/w STRC(180)         1 ARRAY_PRESET_LTS           0-0-0/w ASTR(324)   r     1 BASED_LEX_SYMBOL
     0-0-0/w STRC(360)         1 BASED_LEX_SYMBOL_WORDS
     0-0-0/w STRC(288)         1 BASE_LTS                   0-0-0/w STRC(288)         1 BINARY_OP
     0-0-0/w STRC(396)         1 BLOCK                      0-0-0/w STRC(144)         1 BT
     0-0-0/w STRC(288)         1 CALL_STMT                  0-0-0/w STRC(396)         1 CD
     0-0-0/w STRC(288)         1 CD_LTS                     0-0-0/w CHAR(4096)        1 CHARS
     0-0-0/w STRC(396)         1 CLASS                      0-0-0/w STRC(288)         1 COMPUTE_STMT
     0-0-0/w STRC(396)         1 CONDITION                  0-0-0/w STRC(396)         1 CONST
     0-0-0/w STRC(72)          1 CONT                       0-0-0/w STRC(540)         1 CONTROL_NAME_LTS
     0-0-0/w STRC(1872)        1 COPY_FILE                  0-0-0/w STRC(396)         1 DB
     0-0-0/w STRC(396)         1 DCB_                       0-0-0/w STRC(288)         1 DEFERED_IDENTIFIER
     0-0-0/w STRC(252)         1 DEFERED_ID_TREE            0-0-0/w STRC(288)         1 DEFERED_QUAL_ID
     0-0-0/w STRC(288)         1 DEFERED_SUM_CLAUSE
     0-0-0/w STRC(288)         1 DEFERED_SUM_CLAUSE_LIST
     0-0-0/w STRC(288)         1 DELETE_STMT                0-0-0/w STRC(108)         1 DEPENDING_SIZE
     0-0-0/w STRC(5472)  r     1 DIMS                       0-0-0/w STRC(288)         1 DIVIDE_STMT
     0-0-0/w STRC(396)         1 DML_ITEM                   0-0-0/w STRC(216)         1 DML_REC
     0-0-0/w STRC(73836)       1 EVALUATE                   0-0-0/w STRC(396)         1 FD
     0-0-0/w STRC(1692)        1 FILE_LTS                   0-0-0/w STRC(288)         1 ILS_LIST
     0-0-0/w STRC(108)         1 INDEXES                    0-0-0/w STRC(360)         1 INIT_LTS
     0-0-0/w STRC(288)         1 INSPECT_1_STMT             0-0-0/w STRC(288)         1 INSPECT_2_STMT
     0-0-0/w STRC(288)         1 INSPECT_4_STMT             0-0-0/w STRC(396)         1 INTDEF
     0-0-0/w STRC(180)         1 IO_RESTORE_CHAIN           0-0-0/w STRC(144)         1 KEY
     0-0-0/w STRC(396)         1 LABEL                      0-0-0/w STRC(288)         1 LA_ITEM
     0-0-0/w STRC(36864)       1 LCNST                      0-0-0/w STRC(72)    r     1 LONG
     0-0-0/w STRC        r     1 LTS                        0-0-0/w STRC(360)   r     1 LTSS
     0-0-0/w STRC(36936)       1 LTS_PTR_ARRAY              0-0-0/w STRC(504)         1 LX_CD_INPUT
     0-0-0/w STRC(324)         1 LX_CD_I_O                  0-0-0/w STRC(396)         1 LX_CD_OUTPUT
     0-0-0/w STRC(288)         1 LX_ETT_ITEM                0-0-0/w STRC(288)         1 LX_ITEM
     0-0-0/w STRC(288)         1 LX_LARGE                   0-0-0/w STRC(288)         1 LX_LIST
     0-0-0/w STRC(1224)        1 LX_REC_DECL                0-0-0/w STRC(864)         1 LX_REPORT_REC
PL6.E3A0      #001=Z8DS$SPAN__CALC File=Z8DS.:Z8A6TSI                            SAT 08/09/97 11:19 Page:69   
     0-0-0/w STRC(288)         1 LX_TERMINAL                0-0-0/w STRC(396)         1 MNEMONIC
     0-0-0/w STRC(288)         1 MULTIPLY_STMT              0-0-0/w STRC(144)         1 NEL
     0-0-0/w STRC(216)         1 OPEN_LTS                   0-0-0/w STRC(36864)       1 PAGE
     0-0-0/w STRC(396)         1 PARA                       0-0-0/w STRC(144)         1 PRIME
     0-0-0/w STRC(396)         1 PROC_                      0-0-0/w STRC(396)         1 PROC_DEF
     0-0-0/w STRC(900)         1 PROC_SUPP                  0-0-0/w STRC(216)   r     1 QLT
     0-0-0/w STRC(396)         1 RD                         0-0-0/w STRC(288)         1 READ_STMT
     0-0-0/w STRC(216)         1 REF                        0-0-0/w STRC(108)         1 RENAMES
     0-0-0/w STRC(720)         1 REPORT_01_LTS              0-0-0/w STRC(432)         1 REPORT_ELEM_LTS
     0-0-0/w STRC(252)         1 REPORT_GRP_LTS             0-0-0/w STRC(1332)        1 REPORT_LTS
     0-0-0/w STRC(288)         1 REWRITE_STMT               0-0-0/w STRC(144)         1 RVA_LTS
     0-0-0/w STRC(396)         1 SCALAR                     0-0-0/w STRC(396)         1 SD
     0-0-0/w STRC(396)         1 SECTION                    0-0-0/w STRC(396)         1 SEGMENT
     0-0-0/w STRC(360)         1 SEGMENT_LTS                0-0-0/w STRC(396)   r     1 ST
     0-0-0/w STRC(288)         1 START_STMT                 0-0-0/w STRC(252)         1 STRING_STMT
     0-0-0/w STRC(288)         1 SUBTRACT_STMT              0-0-0/w STRC(252)         1 SUM_LTS
     0-0-0/w STRC(396)         1 SWITCH                     0-0-0/w STRC(396)         1 SYMBOLIC_CHAR
     0-0-0/w STRC(396)         1 SYMDEF_                    0-0-0/w STRC(396)         1 SYMREF_
     0-0-0/w STRC(396)         1 TEMP                       0-0-0/w STRC(288)         1 UNARY_OP
     0-0-0/w STRC(288)         1 UNSTRING_STMT              0-0-0/d STRC(612)         1 USE
     0-0-0/w STRC(252)         1 USE_SUPP                   0-0-0/w STRC(396)   r     1 VARIABLE
     0-0-0/w STRC(288)         1 WRITE_STMT


   Procedure Z8DS$SPAN__CALC requires 630 words for executable code.
   Procedure Z8DS$SPAN__CALC requires 14 words of local(AUTO) storage.

    No errors detected in file Z8DS.:Z8A6TSI    .
