VERSION E05

PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:1    
        1        1        /*M* QBS$SUBSCRIPT:  resolve a subscripted reference.  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=4,IND=0,DCI=4,CSI=2,IAD=2,DTI=2,AND,ECI=0,DIN=2,STI=2 */
        8        8
        9        9        /*P*  NAME:         QBS$SUBSCRIPT
       10       10              PURPOSE:      Resolve a subscripted reference.
       11       11              DESCRIPTION:  Execute a SUBSCR op-code, whose arguments are
       12       12                            a multi-dimensional DAD, a DAD whose value is
       13       13                            the element number to resolve to, and a "dummy"
       14       14                            DAD (in the data section) which is to be set up
       15       15                            by this routine to represent the individual
       16       16                            array element desired, and which will be referenced
       17       17                            by some future op-code.
       18       18        */
       19       19
       20       20        QBS$SUBSCRIPT: PROC;
       21       21
       22       22        /*D*  NAME:         QBS$SUBSCRIPT
       23       23              CALL:         CALL QBS$SUBSCRIPT;
       24       24              PARAMETERS:   None.
       25       25              INTERFACE:    Called by QAT$TALLYHO when a SUBSCR op-code is
       26       26                            encountered.
       27       27              ENVIRONMENT:  This op-code is usually placed directly before the
       28       28                            op-code which will reference the "dummy" DAD which
       29       29                            this routine fills in.
       30       30              INPUT:        QI_1,
       31       31                            FPL rununit static data following the op-code.
       32       32              OUTPUT:       Target ("dummy") DAD filled up appropriately.
       33       33              SCRATCH:      Various otter data.
       34       34              DESCRIPTION:  The compiler is real dumb about this stuff.
       35       35                            Anytime a program references ITEM ( SUBSCRIPT ),
       36       36                            the compiler gens something like:
       37       37                                VECT     C_SUBSCR
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:2    
       38       38                                ADRL     ITEM
       39       39                                ADRL     SUBSCRIPT
       40       40                                ADRL     dumy0
       41       41                            then, when the result actually gets used
       42       42                            (e.g., MOVE 0 TO ITEM ( SUBSCRIPT ) ):
       43       43                                VECT     C_MOVN
       44       44                                ADRL     ltrl0
       45       45                                ADRL     dumy0
       46       46                            The compiler *never* remembers what dumy0 contains
       47       47                            for anything after the op-code which it was generated
       48       48                            for (in this case, C_MOVN).  So if there's a lot of
       49       49                            subscripted references, we'll go through here A LOT.
       50       50                            Basically, we're just pretending we're the compiler,
       51       51                            and building a DAD for something which we've calculated
       52       52                            all the necessary offsets and flags and stuff for.
       53       53        */
       54       54
       55       55          %INCLUDE LCP_6;
       56      246
       57      247          %INCLUDE QG_MACRO_M;
       58      384          %INCLUDE QI_EQUATES_E;
       59      743          %INCLUDE QI_PERR_C;
       60      911          %INCLUDE QI_MACROS_M;
       61     5969          %QI$ALL;
       62    17082
       63    17083    1     DCL ARRAY_DESCRIPTOR$ PTR;
       64    17084    1     DCL ARRAY_OFFSET UBIN;
       65    17085    1     DCL ARRAY_SOURCE$ PTR;
       66    17086    1     DCL ARRAY_SOURCE_STATUS$ PTR;
       67    17087    1     DCL BYTE_DISPLACEMENT UBIN(32);
       68    17088    1     DCL DIMENSION$ PTR;
       69    17089    1     DCL DIMENSION_COUNT UBIN;
       70    17090    1     DCL DUMMY_RESULT$ PTR;
       71    17091    1     DCL DUMMY_RESULT_DESCRIPTOR$ PTR;
       72    17092    1     DCL DUMMY_RESULT_STATUS$ PTR;
       73    17093    1     DCL INTERMEDIATE_32_BIT_RESULT UBIN(32);
       74    17094    1     DCL PRESENCE$ PTR;
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:3    
       75    17095    1     DCL PRESENCE_INDEX UBIN;
       76    17096    1     DCL P_ITEM_INDEX UBIN;
       77    17097    1     DCL REPEATS_INDEX SBIN;
       78    17098    1     DCL SUBSCRIPT$ PTR;
       79    17099    1     DCL SUBSCRIPT_A(0:%(QI#MAXIMUM_DIMENSION-1)) UBIN;
       80    17100    1     DCL SUBSCRIPT_INDEX UBIN;
       81    17101    1     DCL 1 U1,
       82    17102    1           2 LENGTH UBIN BYTE UNAL,
       83    17103    1           2 TEXT CHAR(5);
       84    17104    1     DCL 1 U2,
       85    17105    1           2 LENGTH UBIN BYTE UNAL,
       86    17106    1           2 TEXT CHAR(5);
       87    17107
       88    17108    1     DCL QCC$CBD ENTRY (1) ALTRET;
       89    17109    1     DCL QCC$CDB ENTRY (1) ALTRET;
       90    17110    1     DCL QCE$ERROR ENTRY (4);
       91    17111    1     DCL QCE$ERROR_INTERNAL ENTRY (4);
       92    17112        %EJECT;
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:4    
       93    17113            %PROC_ADDRESS ( THING@P = "QI_1.INSTR$ -> QI$OP_SUBSCR.ARRAY_SOURCE@P",
       94    17114                            CHECK_FOR_INDIRECTION = YES,
       95    17115                            RESULT$ = ARRAY_SOURCE$ );
       96    17152
       97    17153    1       QI_1.DAD.S$ = ARRAY_SOURCE$;
       98    17154    1       DIMENSION_COUNT = ARRAY_SOURCE$ -> QI$DAD.WORD0_FLAGS.DIMENSION_COUNT;
       99    17155
      100    17156    2       DO SUBSCRIPT_INDEX = 0 TO DIMENSION_COUNT - 1;
      101    17157
      102    17158    2         CALL EVALUATE_SUBSCRIPT ALTRET ( ARRAY_BOUND_EXCEEDED_SHEESH );
      103    17159
      104    17160    2       END;
      105    17161
      106    17162            /* QI$OP_SUBSCR.SUBSCRIPT_A@P (DIMENSION_COUNT) is really where
      107    17163               QI$OP_SUBSCR.DUMMY_RESULT@P is.  */
      108    17164            %PROC_ADDRESS ( THING@P =
             17164                "QI_1.INSTR$ -> QI$OP_SUBSCR.SUBSCRIPT_A@P (DIMENSION_COUNT)",
      109    17165            CHECK_FOR_INDIRECTION = YES,
      110    17166            RESULT$ = DUMMY_RESULT$ );
      111    17203
      112    17204    1       DUMMY_RESULT$ -> QI$DAD.WORD0 = ARRAY_SOURCE$ -> QI$DAD.WORD0;
      113    17205    1       DUMMY_RESULT$ -> QI$DAD.PSEUDO_CIP_A (0) = ARRAY_SOURCE$ -> QI$DAD.PSEUDO_CIP_A
             17205                (0);
      114    17206
      115    17207    1       IF ARRAY_SOURCE$ -> QI$DAD.WORD0_FLAGS.IS_FORM_VARIABLE
      116    17208    1       THEN
      117    17209    1         DIMENSION$ = ADDR ( ARRAY_SOURCE$ -> QI$FIELD_DAD.VARIABLE_LENGTH_ITEMS.
             17209                  LEVEL_MULTIPLIERS );
      118    17210    1       ELSE
      119    17211    1         DIMENSION$ = ADDR ( ARRAY_SOURCE$ -> QI$COBOL_DAD.VARIABLE_LENGTH_ITEMS.
             17211                  LEVEL_MULTIPLIERS );
      120    17212
      121    17213    1       BYTE_DISPLACEMENT = 0;
      122    17214
      123    17215    2       DO SUBSCRIPT_INDEX = 0 TO DIMENSION_COUNT - 1;
      124    17216
      125    17217    2         IF SUBSCRIPT_A ( SUBSCRIPT_INDEX ) = %BITBIN ( 'FFFF'X )
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:5    
      126    17218    2         THEN
      127    17219    2           GOTO ARRAY_BOUND_INSUFFICIENT;
      128    17220
      129    17221              /*  QI$AREA_A@ ( SUBSCRIPT_INDEX * 2 ) is really something like
      130    17222                  QI$whatever_DAD.VARIABLE_LENGTH_ITEMS.LEVEL_MULTIPLIER_A.
      131    17223                  ELEMENT_COUNT, i.e., it's the maximum value allowable for
      132    17224                  an index into that dimension of the variable.
      133    17225                  If any of the subscripts (already evaluated) are larger
      134    17226                  than their respective ELEMENT_COUNT, then it's
      135    17227                  (hopefully) a user error.  */
      136    17228    2         IF SUBSCRIPT_A ( SUBSCRIPT_INDEX )
      137    17229    2           > DIMENSION$ -> QI$AREA_A@ ( SUBSCRIPT_INDEX * 2 ) - 1
      138    17230    2         THEN
      139    17231    2           GOTO ARRAY_BOUND_EXCEEDED;
      140    17232
      141    17233              /*  QI$AREA_A@ ( ( SUBSCRIPT_INDEX * 2 ) + 1 ) is really like
      142    17234                  QI$whatever_DAD.VARIABLE_LENGTH_ITEMS.LEVEL_MULTIPLIER_A.
      143    17235                  ELEMENT_LENGTH, i.e., it's the level_multiplier to use as
      144    17236                  a length for indexing into that dimension of the variable.
      145    17237                  If it's too big, then it's our problem.  */
      146    17238    2         INTERMEDIATE_32_BIT_RESULT = DIMENSION$ -> QI$AREA_A@ ( ( SUBSCRIPT_INDEX * 2
             17238                  ) + 1 )
      147    17239    2           * SUBSCRIPT_A ( SUBSCRIPT_INDEX );
      148    17240
      149    17241              %IF QI#DEBUG;
      150    17242
      151    17243    2         IF INTERMEDIATE_32_BIT_RESULT > %BITBIN ( '1FFFF'X )
      152    17244    2         THEN
      153    17245    2           CALL QCE$ERROR_INTERNAL ( %E$INTERNAL_COMPILER_ERROR );
      154    17246
      155    17247              %ENDIF;
      156    17248
      157    17249    2         BYTE_DISPLACEMENT = BYTE_DISPLACEMENT
      158    17250    2           + INTERMEDIATE_32_BIT_RESULT;
      159    17251
      160    17252    2       END;
      161    17253
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:6    
      162    17254            /*  In calculating the address of the dummy's data, we'll add
      163    17255                the BYTE_DISPLACEMENT to the original DATA@ (word address)
      164    17256                and OFFSET (byte offset).
      165    17257                The new DATA@ is the result of the addition, divided by 2;
      166    17258                the new OFFSET is the result of the addition, mod 2.
      167    17259                How does this ever work for PACKED items?
      168    17260                Because each element of a PACKED array, and each PACKED element
      169    17261                of any array, will be byte-aligned.  For example:
      170    17262                01  ICK1.
      171    17263                    02  ICK2 PIC 9 COMP OCCURS 3.
      172    17264                Will generate:
      173    17265                ICK2 (1) located in word 0, byte 0, right justified;
      174    17266                ICK2 (2) located in word 0, byte 1, right justified;
      175    17267                ICK2 (3) located in word 1, byte 0, right justified.
      176    17268                        word 0                       word 1
      177    17269                   byte 0    byte 1             byte 0    byte 1
      178    17270                ---------------------        ---------------------
      179    17271                |0000|2(1)|0000|2(2)|        |0000|2(3)|....|....|
      180    17272                ---------------------        ---------------------
      181    17273
      182    17274                Similarly:
      183    17275                01  ICK1.
      184    17276                    02  ICK2 OCCURS 2.
      185    17277                        03  ICK3 PIC 9 COMP.
      186    17278                        03  ICK4 PIC X.
      187    17279                Will generate:
      188    17280                ICK3 (1) located in word 0, byte 0, right justified;
      189    17281                ICK4 (1) located in word 0, byte 1;
      190    17282                ICK3 (2) located in word 1, byte 0, right justified;
      191    17283                ICK4 (2) located in word 1, byte 1.
      192    17284                        word 0                       word 1
      193    17285                   byte 0    byte 1             byte 0    byte 1
      194    17286                ---------------------        ---------------------
      195    17287                |0000|3(1)|  4(1)   |        |0000|3(2)|  4(2)   |
      196    17288                ---------------------        ---------------------
      197    17289
      198    17290                So, the QI$COBOL_DAD.PSEUDO_CIP.NUMERIC.CP.OFFSET
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:7    
      199    17291                (the 2-bit offset for PACKED items) always retains its
      200    17292                rightmost (least significant) bit:  this is the "nibble"
      201    17293                offset into the first byte of the array.
      202    17294                Which means that, when building the dummy,
      203    17295                QI$COBOL_DAD.PSEUDO_CIP.ALPHANUMERIC.CA.OFFSET is filled in
      204    17296                for items of all types, thereby replacing the entire offset
      205    17297                for DISPLAY (alphanumeric and numeric) and BINARY items, and
      206    17298                only the most significant offset bit for PACKED items.
      207    17299                This took me a long time to figure out...I hope it's right.
      208    17300                (JJL, C00).  */
      209    17301    1       IF NOT ARRAY_SOURCE$ -> QI$DAD.WORD0_FLAGS.IS_FORM_VARIABLE
      210    17302    1         AND ARRAY_SOURCE$ -> QI$COBOL_DAD.WORD0_FLAGS.IS_LINKAGE_ARGUMENT
      211    17303    1       THEN
      212    17304    1   EVALUATE_ARGUMENT_ADDRESS:
      213    17305    2         DO;
      214    17306                %PROC_ADDRESS ( THING@P = "ARRAY_SOURCE$ -> QI$COBOL_DAD.PSEUDO_CIP.DATA@",
      215    17307                CHECK_FOR_INDIRECTION = NO,
      216    17308                RESULT$ = ARRAY_DESCRIPTOR$ );
      217    17345
      218    17346    2           BYTE_DISPLACEMENT = BYTE_DISPLACEMENT
      219    17347    2             + ARRAY_SOURCE$ -> QI$COBOL_DAD.PSEUDO_CIP.ALPHANUMERIC.CA.OFFSET
      220    17348    2             + ( ARRAY_DESCRIPTOR$ -> QI$LINKAGE_ARGUMENT_DESCRIPTOR.
             17348                      WORD_OFFSET_FROM_01_ITEM * 2 );
      221    17349
      222    17350                %IF QI#DEBUG;
      223    17351
      224    17352    2           IF BYTE_DISPLACEMENT > %BITBIN ( '1FFFF'X )
      225    17353    2           THEN
      226    17354    2             CALL QCE$ERROR_INTERNAL ( %E$INTERNAL_COMPILER_ERROR );
      227    17355
      228    17356                %ENDIF;
      229    17357
      230    17358    2           DUMMY_RESULT$ -> QI$COBOL_DAD.PSEUDO_CIP.ALPHANUMERIC.CA.OFFSET =
      231    17359    2             MOD ( BYTE_DISPLACEMENT, 2 );
      232    17360
      233    17361                /*  Since we're not sure quite where the
      234    17362                    QI$LINKAGE_ARGUMENT_DESCRIPTOR will end up being generated
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:8    
      235    17363                    for this dummy yet, we'll defer filling in .DATA@.
      236    17364                    One thing's for sure:  it'll be @D.  */
      237    17365    2           DUMMY_RESULT$ -> QI$COBOL_DAD.WORD0_FLAGS.IS_CONSTANT = %NO;
      238    17366    2         END EVALUATE_ARGUMENT_ADDRESS;
      239    17367    1       ELSE
      240    17368    1   EVALUATE_VARIABLE_ADDRESS:
      241    17369    2         DO;
      242    17370    2           BYTE_DISPLACEMENT = BYTE_DISPLACEMENT
      243    17371    2             + ARRAY_SOURCE$ -> QI$DAD.PSEUDO_CIP.ALPHANUMERIC.CA.OFFSET
      244    17372    2             + ( ARRAY_SOURCE$ -> QI$DAD.PSEUDO_CIP.DATA@ * 2 );
      245    17373
      246    17374                %IF QI#DEBUG;
      247    17375
      248    17376    2           IF BYTE_DISPLACEMENT > %BITBIN ( '1FFFF'X )
      249    17377    2           THEN
      250    17378    2             CALL QCE$ERROR_INTERNAL ( %E$INTERNAL_COMPILER_ERROR );
      251    17379
      252    17380                %ENDIF;
      253    17381
      254    17382    2           DUMMY_RESULT$ -> QI$DAD.PSEUDO_CIP.ALPHANUMERIC.CA.OFFSET =
      255    17383    2             MOD ( BYTE_DISPLACEMENT, 2 );
      256    17384    2           DUMMY_RESULT$ -> QI$DAD.PSEUDO_CIP.DATA@ =
      257    17385    2             BYTE_DISPLACEMENT / 2;
      258    17386    2         END EVALUATE_VARIABLE_ADDRESS;
      259    17387
      260    17388    1       DUMMY_RESULT$ -> QI$DAD.WORD0_FLAGS.DIMENSION_COUNT = 0;
      261    17389
      262    17390    1       IF ARRAY_SOURCE$ -> QI$DAD.WORD0_FLAGS.IS_FORM_VARIABLE
      263    17391    1       THEN
      264    17392    1   ITS_A_FIELD_KIND_OF_DAD:
      265    17393    2         DO;
      266    17394
      267    17395    2           DUMMY_RESULT$ -> QI$FIELD_DAD.PICTURE_STRING@P =
      268    17396    2             ARRAY_SOURCE$ -> QI$FIELD_DAD.PICTURE_STRING@P;
      269    17397    2           DUMMY_RESULT$ -> QI$FIELD_DAD.BROTHER@P =
      270    17398    2             ARRAY_SOURCE$ -> QI$FIELD_DAD.BROTHER@P;
      271    17399    2           DUMMY_RESULT$ -> QI$FIELD_DAD.FATHER@P =
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:9    
      272    17400    2             ARRAY_SOURCE$ -> QI$FIELD_DAD.FATHER@P;
      273    17401    2           DUMMY_RESULT$ -> QI$FIELD_DAD.IDENTIFIER@P =
      274    17402    2             ARRAY_SOURCE$ -> QI$FIELD_DAD.IDENTIFIER@P;
      275    17403    2           DUMMY_RESULT$ -> QI$FIELD_DAD.POSITION =
      276    17404    2             ARRAY_SOURCE$ -> QI$FIELD_DAD.POSITION;
      277    17405    2           DUMMY_RESULT$ -> QI$FIELD_DAD.VISUAL_ATTRIBUTE =
      278    17406    2             ARRAY_SOURCE$ -> QI$FIELD_DAD.VISUAL_ATTRIBUTE;
      279    17407
      280    17408                /*  Increment past any level_multipliers to get to the
      281    17409                    P_ITEM_A stuff.  */
      282    17410    2           PRESENCE$ = ADDR ( ARRAY_SOURCE$ -> QI$FIELD_DAD.VARIABLE_LENGTH_ITEMS.
             17410                    LEVEL_MULTIPLIER_A ( DIMENSION_COUNT ) );
      283    17411    2           P_ITEM_INDEX = 0;
      284    17412
      285    17413    2           DO PRESENCE_INDEX = %QI#P_FIELD_FIRST_INDEX
      286    17414    3             TO %QI#P_PROMPT_INDEX;
      287    17415
      288    17416    3             IF PRESENCE$ -> QI$FIELD_DAD_P.P_A ( PRESENCE_INDEX )
      289    17417    3             THEN
      290    17418    4               DO;
      291    17419    4                 DUMMY_RESULT$ -> QI$FIELD_DAD.ELEMENTARY_ITEM.P_ITEM_A ( P_ITEM_INDEX
             17419                          ) =
      292    17420    4                   PRESENCE$ -> QI$FIELD_DAD_P.P_ITEM_A ( P_ITEM_INDEX );
      293    17421    4                 P_ITEM_INDEX = P_ITEM_INDEX + 1;
      294    17422    4               END;
      295    17423
      296    17424    3           END;
      297    17425
      298    17426    2           DUMMY_RESULT$ -> QI$FIELD_DAD.ELEMENTARY_ITEM.P =
      299    17427    2             PRESENCE$ -> QI$FIELD_DAD_P.P & '3C'X;
      300    17428
      301    17429    2           DUMMY_RESULT$ -> QI$FIELD_DAD.ELEMENTARY_ITEM.CLASS_TYPE =
      302    17430    2             PRESENCE$ -> QI$FIELD_DAD_P.CLASS_TYPE;
      303    17431
      304    17432                /* The status area'll start with the first word after the last
      305    17433                   of the P_items.  */
      306    17434    2           DUMMY_RESULT_STATUS$ =
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:10   
      307    17435    2             ADDR ( DUMMY_RESULT$ -> QI$FIELD_DAD.ELEMENTARY_ITEM.P_ITEM_A (
             17435                      P_ITEM_INDEX + 1 ) );
      308    17436
      309    17437    2           DUMMY_RESULT$ -> QI$FIELD_DAD.STATUS_AREA@D =
      310    17438    2             POFFW ( DUMMY_RESULT_STATUS$,
      311    17439    2             QI_1.BASE.DATA$ );
      312    17440
      313    17441                %DATA_ADDRESS ( THING@D = "ARRAY_SOURCE$ -> QI$FIELD_DAD.STATUS_AREA@D",
      314    17442                CHECK_FOR_INDIRECTION = NO,
      315    17443                RESULT$ = ARRAY_SOURCE_STATUS$ );
      316    17480
      317    17481    3           DO CASE ( DIMENSION_COUNT );
      318    17482
      319    17483    3             CASE ( %QI#ONE_DIMENSIONAL_ITEM );
      320    17484    3               ARRAY_OFFSET = SUBSCRIPT_A (0);
      321    17485
      322    17486    3             CASE ( %QI#TWO_DIMENSIONAL_ITEM );
      323    17487    3               IF ARRAY_SOURCE$ -> QI$FIELD_DAD.TWO_DIMENSIONAL_ITEM.P.REPEATS
      324    17488    3               THEN
      325    17489    3   IT_REPEATS:
      326    17490    4                 DO;
      327    17491
      328    17492                        %PRESENCE_DISPLACEMENT (
      329    17493                        PRESENCE_THING$ =
      330    17494                        "ADDR ( ARRAY_SOURCE$ -> QI$FIELD_DAD.TWO_DIMENSIONAL_ITEM.P )",
      331    17495                        INDEX = PRESENCE_INDEX,
      332    17496                        START = %QI#P_FIELD_FIRST_INDEX,
      333    17497                        STOP = %QI#P_REPEATS_INDEX,
      334    17498                        RESULT = REPEATS_INDEX
      335    17499                        );
      336    17531    4                   ARRAY_OFFSET = ARRAY_SOURCE$ -> QI$FIELD_DAD.TWO_DIMENSIONAL_ITEM.
             17531                            P_ITEM_A ( REPEATS_INDEX );
      337    17532
      338    17533    4                 END IT_REPEATS;
      339    17534    3               ELSE
      340    17535    3   IT_DOESNT_REPEAT:
      341    17536    4                 DO;
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:11   
      342    17537
      343    17538    4   FIND_NEAREST_REPEATED_MINOR:
      344    17539    5                   DO %FOREVER;
      345    17540
      346    17541                          %PROC_ADDRESS ( THING@P = "ARRAY_SOURCE$ -> QI$FIELD_DAD.FATHER@P"
             17541                              ,
      347    17542                          CHECK_FOR_INDIRECTION = YES,
      348    17543                          RESULT$ = ARRAY_SOURCE$ );
      349    17580
      350    17581    5                     IF ARRAY_SOURCE$ -> QI$FIELD_DAD.WORD0_FLAGS.TYPE = %QI#TYPE_MINOR
      351    17582    5                     THEN
      352    17583    5                       IF ARRAY_SOURCE$ -> QI$MINOR_NODE.REPEATS > 0
      353    17584    5                       THEN
      354    17585    5                         EXIT FIND_NEAREST_REPEATED_MINOR;
      355    17586
      356    17587    5                   END FIND_NEAREST_REPEATED_MINOR;
      357    17588
      358    17589    4                   ARRAY_OFFSET = ARRAY_SOURCE$ -> QI$MINOR_NODE.REPEATS;
      359    17590
      360    17591    4                 END IT_DOESNT_REPEAT;
      361    17592
      362    17593    3               ARRAY_OFFSET =
      363    17594    3                 ( ARRAY_OFFSET
      364    17595    3                 * SUBSCRIPT_A (0) )
      365    17596    3                 + SUBSCRIPT_A (1);
      366    17597
      367    17598    3           END;
      368    17599
      369    17600    2           DUMMY_RESULT_STATUS$ -> QI$FIELD_STATUS.GZ.FIELD_START_INDEX =
      370    17601    2             ARRAY_SOURCE_STATUS$ -> QI$FIELD_STATUS.GZ.FIELD_START_INDEX
      371    17602    2             + ARRAY_OFFSET;
      372    17603
      373    17604    2           DUMMY_RESULT_STATUS$ -> QI$FIELD_STATUS.GZ.FIELD_STOP_INDEX =
      374    17605    2             DUMMY_RESULT_STATUS$ -> QI$FIELD_STATUS.GZ.FIELD_START_INDEX;
      375    17606
      376    17607    2         END ITS_A_FIELD_KIND_OF_DAD;
      377    17608    1       ELSE
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:12   
      378    17609    1   ITS_A_COBOL_KIND_OF_DAD:
      379    17610    2         DO;
      380    17611                /*  Increment past any level_multipliers to get to the
      381    17612                    P.whatever flags.  */
      382    17613    2           PRESENCE$ = ADDR ( ARRAY_SOURCE$ -> QI$COBOL_DAD.VARIABLE_LENGTH_ITEMS.
             17613                    LEVEL_MULTIPLIER_A ( DIMENSION_COUNT ) );
      383    17614    2           P_ITEM_INDEX = 0;
      384    17615
      385    17616    2           DO PRESENCE_INDEX = %QI#P_COBOL_FIRST_INDEX
      386    17617    3             TO %QI#P_COBOL_LAST_INDEX;
      387    17618
      388    17619    3             IF ARRAY_SOURCE$ -> QI$COBOL_DAD.P_A ( PRESENCE_INDEX )
      389    17620    3             THEN
      390    17621    4               DO;
      391    17622    4                 DUMMY_RESULT$ -> QI$COBOL_DAD.ELEMENTARY_ITEM.P_ITEM_A ( P_ITEM_INDEX
             17622                          ) =
      392    17623    4                   PRESENCE$ -> QI$COBOL_DAD_P_ITEMS.P_ITEM_A ( P_ITEM_INDEX );
      393    17624    4                 P_ITEM_INDEX = P_ITEM_INDEX + 1;
      394    17625    4               END;
      395    17626
      396    17627    3           END;
      397    17628
      398    17629                /*  If this is a LINKAGE SECTION item, we're not done yet.
      399    17630                    DATA@ is the offset into data of the
      400    17631                    QI$LINKAGE_ARGUMENT_DESCRIPTOR, which is built following
      401    17632                    the P_ITEM_A stuff.  */
      402    17633    2           IF ARRAY_SOURCE$ -> QI$COBOL_DAD.WORD0_FLAGS.IS_LINKAGE_ARGUMENT
      403    17634    2           THEN
      404    17635    2   BUILD_LINKAGE_DESCRIPTOR:
      405    17636    3             DO;
      406    17637    3               DUMMY_RESULT_DESCRIPTOR$ =
      407    17638    3                 ADDR ( DUMMY_RESULT$ -> QI$COBOL_DAD.ELEMENTARY_ITEM.P_ITEM_A (
             17638                          P_ITEM_INDEX + 1 ) );
      408    17639
      409    17640    3               DUMMY_RESULT$ -> QI$COBOL_DAD.PSEUDO_CIP.DATA@ =
      410    17641    3                 POFFW ( DUMMY_RESULT_DESCRIPTOR$,
      411    17642    3                 QI_1.BASE.DATA$ );
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:13   
      412    17643
      413    17644    3               DUMMY_RESULT_DESCRIPTOR$ -> QI$LINKAGE_ARGUMENT_DESCRIPTOR.
             17644                        ARGUMENT_NUMBER =
      414    17645    3                 ARRAY_DESCRIPTOR$ -> QI$LINKAGE_ARGUMENT_DESCRIPTOR.ARGUMENT_NUMBER;
      415    17646    3               DUMMY_RESULT_DESCRIPTOR$ -> QI$LINKAGE_ARGUMENT_DESCRIPTOR.
             17646                        WORD_OFFSET_FROM_01_ITEM =
      416    17647    3                 BYTE_DISPLACEMENT / 2;
      417    17648    3             END BUILD_LINKAGE_DESCRIPTOR;
      418    17649
      419    17650    2         END ITS_A_COBOL_KIND_OF_DAD;
      420    17651
      421    17652    1       QI_1.INSTR$ = PINCRW ( QI_1.INSTR$, DIMENSION_COUNT + 3 );
      422    17653
      423    17654    1       RETURN;
      424    17655
      425    17656    1   ARRAY_BOUND_EXCEEDED:
      426    17657    1       U1.LENGTH = 5;
      427    17658    1       CALL BINCHAR ( U1.TEXT,
      428    17659    1         SUBSCRIPT_A ( SUBSCRIPT_INDEX ) + 1 );
      429    17660
      430    17661    1       U2.LENGTH = 5;
      431    17662    1       CALL BINCHAR ( U2.TEXT,
      432    17663    1         DIMENSION$ -> QI$AREA_A@ ( SUBSCRIPT_INDEX * 2 ) );
      433    17664
      434    17665    1       CALL QCE$ERROR ( %E$SUBSCRIPT_OUT_OF_RANGE,
      435    17666    1         U1,
      436    17667    1         U2 );
      437    17668
      438    17669    1   ARRAY_BOUND_EXCEEDED_SHEESH:
      439    17670    1       CALL QCE$ERROR ( %E$SUBSCRIPT_OUT_OF_SIGHT );
      440    17671
      441    17672    1   ARRAY_BOUND_INSUFFICIENT:
      442    17673    1       CALL QCE$ERROR ( %E$SUBSCRIPT_ZERO );
      443    17674
      444    17675        %EJECT;
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:14   
      445    17676    1   EVALUATE_SUBSCRIPT: PROC ALTRET;
      446    17677
      447    17678        /*I*  NAME:         EVALUATE_SUBSCRIPT
      448    17679              PURPOSE:      Translate a QI$OP_SUBSCR.SUBSCRIPT_A@P to BINARY.
      449    17680              CALL:         CALL EVALUATE_SUBSCRIPT;
      450    17681              PARAMETERS:   None.
      451    17682              DATA:         QI_1,
      452    17683                            SUBSCRIPT_INDEX from above.
      453    17684              DESCRIPTION:  Convert the DAD's subscripting value,
      454    17685                            e.g., "3" for "MOVE A ( 3 ) TO B.",
      455    17686                            to BINARY so's we can use it to index into the data
      456    17687                            corresponding to "A" to find where "A ( 3 )" really starts.
      457    17688        */
      458    17689
      459    17690          %QI@OTTER_SPACE;
      460    17718
      461    17719            %PROC_ADDRESS ( THING@P =
             17719                "QI_1.INSTR$ -> QI$OP_SUBSCR.SUBSCRIPT_A@P ( SUBSCRIPT_INDEX )",
      462    17720                            CHECK_FOR_INDIRECTION = YES,
      463    17721                            RESULT$ = SUBSCRIPT$ );
      464    17758
      465    17759    2       QI_1.OP.CIP.S_A (0) = SUBSCRIPT$ -> QI$DAD.PSEUDO_CIP_A (0);
      466    17760    2       QI_1.OP.CIP.S.AS = %QI#CIP_DEFAULT_AS;
      467    17761
      468    17762    2       IF SUBSCRIPT$ -> QI$DAD.WORD0_FLAGS.IS_CONSTANT
      469    17763    2       THEN
      470    17764              %PROC_ADDRESS ( THING@P = "SUBSCRIPT$ -> QI$DAD.PSEUDO_CIP.DATA@",
      471    17765                CHECK_FOR_INDIRECTION = NO,
      472    17766                RESULT$ = "QI_1.OP.DATA.S$" );
      473    17803    2       ELSE
      474    17804              %DATA_ADDRESS ( THING@D = "SUBSCRIPT$ -> QI$DAD.PSEUDO_CIP.DATA@",
      475    17805                CHECK_FOR_INDIRECTION = NO,
      476    17806                RESULT$ = "QI_1.OP.DATA.S$" );
      477    17843
      478    17844    3       DO SELECT ( SUBSCRIPT$ -> QI$DAD.WORD0_FLAGS.TYPE );
      479    17845
      480    17846    3         SELECT ( %QI#TYPE_DISPLAY, %QI#TYPE_PACKED );
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:15   
      481    17847                /* We're going from DISPLAY or PACKED to BINARY:
      482    17848                   lucky us.  Just do the conversion.  */
      483    17849    3         QI_1.OP.CIP.T_A (0) = QI_16_BIT_BINARY_A (0);
      484    17850    3         QI_1.OP.DEC.T = 0;
      485    17851    3         QI_1.OP.DATA.T$ = ADDR ( SUBSCRIPT_A ( SUBSCRIPT_INDEX ) );
      486    17852
      487    17853    3         CALL QCC$CDB ( QI_1.OP )
      488    17854    4         WHENALTRETURN DO;
      489    17855    4             ALTRETURN;
      490    17856    4           END;
      491    17857
      492    17858    3         SELECT ( %QI#TYPE_BINARY );
      493    17859                /* We've got a BINARY source, but it might be too
      494    17860                   long or too big or offset within the word or...
      495    17861                   so we'll just do an intermediate operation to
      496    17862                   make it PACKED, then make it BINARY again.  */
      497    17863    3         QI_1.OP.CIP.T_A (0) = QI_31_DIGIT_ST_PACKED_A (0);
      498    17864    3         QI_1.OP.DEC.T = 0;
      499    17865    3         QI_1.OP.DATA.T$ = ADDR ( QI@OTTER_SPACE );
      500    17866
      501    17867    3         CALL QCC$CBD ( QI_1.OP )
      502    17868    4         WHENALTRETURN DO;
      503    17869    4             ALTRETURN;
      504    17870    4           END;
      505    17871
      506    17872    3         QI_1.OP.CIP.S_A (0) = QI_1.OP.CIP.T_A (0);
      507    17873    3         QI_1.OP.DEC.S = 0;
      508    17874    3         QI_1.OP.DATA.S$ = QI_1.OP.DATA.T$;
      509    17875
      510    17876    3         QI_1.OP.CIP.T_A (0) = QI_16_BIT_BINARY_A (0);
      511    17877    3         QI_1.OP.DATA.T$ = ADDR ( SUBSCRIPT_A ( SUBSCRIPT_INDEX ) );
      512    17878
      513    17879    3         CALL QCC$CDB ( QI_1.OP )
      514    17880    4         WHENALTRETURN DO;
      515    17881    4             ALTRETURN;
      516    17882    4           END;
      517    17883
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:16   
      518    17884    3       END;
      519    17885
      520    17886            /* Oh, yeah.  COBOL-like rules say that element (1) of an
      521    17887               array is the foist, but PL6 says element (0) is.
      522    17888               Fudge it.  */
      523    17889    2       SUBSCRIPT_A ( SUBSCRIPT_INDEX ) = SUBSCRIPT_A ( SUBSCRIPT_INDEX ) - 1;
      524    17890
      525    17891    2       RETURN;
      526    17892
      527    17893    2   END EVALUATE_SUBSCRIPT;
      528    17894
      529    17895    1   END QBS$SUBSCRIPT;

PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:17   
--  Include file information  --

   QI_MACROS_M.:E05TOU  is referenced.
   QI_PERR_C.:E05TOU  is referenced.
   QI_EQUATES_E.:E05TOU  is referenced.
   QG_MACRO_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure QBS$SUBSCRIPT.

   Procedure QBS$SUBSCRIPT requires 925 words for executable code.
   Procedure QBS$SUBSCRIPT requires 58 words of local(AUTO) storage.

    No errors detected in file QBS$SUBSCRIPT.:E05TSI    .

PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:18   

 Object Unit name= QBS$SUBSCRIPT                              File name= QBS$SUBSCRIPT.:E05TOU
 UTS= JUL 30 '97 04:57:20.20 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   925    39D  QBS$SUBSCRIPT
    1  RoData even  none    11      B  QBS$SUBSCRIPT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        0  QBS$SUBSCRIPT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       4 QCE$ERROR_INTERNAL
         yes           Std       4 QCE$ERROR
 yes     yes           Std       1 QCC$CDB
 yes     yes           Std       1 QCC$CBD
                       nStd      0 X6A_AUTO_0
                       nStd      0 X6A_ARET
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:19   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     QI_1                                  QI_4_CHAR_ALPHANUMERIC                QI_31_DIGIT_SLS_DISPLAY
     QI_16_BIT_BINARY                      QI_32_BIT_BINARY                      QI_31_DIGIT_ST_PACKED
     QI_PICTURE_STRING                r    G$ROS$
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:20   


        1        1        /*M* QBS$SUBSCRIPT:  resolve a subscripted reference.  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=4,IND=0,DCI=4,CSI=2,IAD=2,DTI=2,AND,ECI=0,DIN=2,STI=2 */
        8        8
        9        9        /*P*  NAME:         QBS$SUBSCRIPT
       10       10              PURPOSE:      Resolve a subscripted reference.
       11       11              DESCRIPTION:  Execute a SUBSCR op-code, whose arguments are
       12       12                            a multi-dimensional DAD, a DAD whose value is
       13       13                            the element number to resolve to, and a "dummy"
       14       14                            DAD (in the data section) which is to be set up
       15       15                            by this routine to represent the individual
       16       16                            array element desired, and which will be referenced
       17       17                            by some future op-code.
       18       18        */
       19       19
       20       20        QBS$SUBSCRIPT: PROC;

     20   0 000000  D380 0000 0000  xent QBS$SUBSCRIPT   LNJ,B5   X6A_AUTO_0
          0 000003       003A 0000                       DC       58,0

       21       21
       22       22        /*D*  NAME:         QBS$SUBSCRIPT
       23       23              CALL:         CALL QBS$SUBSCRIPT;
       24       24              PARAMETERS:   None.
       25       25              INTERFACE:    Called by QAT$TALLYHO when a SUBSCR op-code is
       26       26                            encountered.
       27       27              ENVIRONMENT:  This op-code is usually placed directly before the
       28       28                            op-code which will reference the "dummy" DAD which
       29       29                            this routine fills in.
       30       30              INPUT:        QI_1,
       31       31                            FPL rununit static data following the op-code.
       32       32              OUTPUT:       Target ("dummy") DAD filled up appropriately.
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:21   
       33       33              SCRATCH:      Various otter data.
       34       34              DESCRIPTION:  The compiler is real dumb about this stuff.
       35       35                            Anytime a program references ITEM ( SUBSCRIPT ),
       36       36                            the compiler gens something like:
       37       37                                VECT     C_SUBSCR
       38       38                                ADRL     ITEM
       39       39                                ADRL     SUBSCRIPT
       40       40                                ADRL     dumy0
       41       41                            then, when the result actually gets used
       42       42                            (e.g., MOVE 0 TO ITEM ( SUBSCRIPT ) ):
       43       43                                VECT     C_MOVN
       44       44                                ADRL     ltrl0
       45       45                                ADRL     dumy0
       46       46                            The compiler *never* remembers what dumy0 contains
       47       47                            for anything after the op-code which it was generated
       48       48                            for (in this case, C_MOVN).  So if there's a lot of
       49       49                            subscripted references, we'll go through here A LOT.
       50       50                            Basically, we're just pretending we're the compiler,
       51       51                            and building a DAD for something which we've calculated
       52       52                            all the necessary offsets and flags and stuff for.
       53       53        */
       54       54
       55       55          %INCLUDE LCP_6;
       56      246
       57      247          %INCLUDE QG_MACRO_M;
       58      384          %INCLUDE QI_EQUATES_E;
       59      743          %INCLUDE QI_PERR_C;
       60      911          %INCLUDE QI_MACROS_M;
       61     5969          %QI$ALL;
       62    17082
       63    17083    1     DCL ARRAY_DESCRIPTOR$ PTR;
       64    17084    1     DCL ARRAY_OFFSET UBIN;
       65    17085    1     DCL ARRAY_SOURCE$ PTR;
       66    17086    1     DCL ARRAY_SOURCE_STATUS$ PTR;
       67    17087    1     DCL BYTE_DISPLACEMENT UBIN(32);
       68    17088    1     DCL DIMENSION$ PTR;
       69    17089    1     DCL DIMENSION_COUNT UBIN;
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:22   
       70    17090    1     DCL DUMMY_RESULT$ PTR;
       71    17091    1     DCL DUMMY_RESULT_DESCRIPTOR$ PTR;
       72    17092    1     DCL DUMMY_RESULT_STATUS$ PTR;
       73    17093    1     DCL INTERMEDIATE_32_BIT_RESULT UBIN(32);
       74    17094    1     DCL PRESENCE$ PTR;
       75    17095    1     DCL PRESENCE_INDEX UBIN;
       76    17096    1     DCL P_ITEM_INDEX UBIN;
       77    17097    1     DCL REPEATS_INDEX SBIN;
       78    17098    1     DCL SUBSCRIPT$ PTR;
       79    17099    1     DCL SUBSCRIPT_A(0:%(QI#MAXIMUM_DIMENSION-1)) UBIN;
       80    17100    1     DCL SUBSCRIPT_INDEX UBIN;
       81    17101    1     DCL 1 U1,
       82    17102    1           2 LENGTH UBIN BYTE UNAL,
       83    17103    1           2 TEXT CHAR(5);
       84    17104    1     DCL 1 U2,
       85    17105    1           2 LENGTH UBIN BYTE UNAL,
       86    17106    1           2 TEXT CHAR(5);
       87    17107
       88    17108    1     DCL QCC$CBD ENTRY (1) ALTRET;
       89    17109    1     DCL QCC$CDB ENTRY (1) ALTRET;
       90    17110    1     DCL QCE$ERROR ENTRY (4);
       91    17111    1     DCL QCE$ERROR_INTERNAL ENTRY (4);
       92    17112        %EJECT;
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:23   
       93    17113            %PROC_ADDRESS ( THING@P = "QI_1.INSTR$ -> QI$OP_SUBSCR.ARRAY_SOURCE@P",
       94    17114                            CHECK_FOR_INDIRECTION = YES,
       95    17115                            RESULT$ = ARRAY_SOURCE$ );

  17133   0 000005  EC80 0000 0006  xsym                 LDB,B6   QI_1+6
          0 000008  B846 0001                            LDR,R3   1,B6
          0 00000A  F853                                 LDR,R7   R3
          0 00000B  6C00                                 LDV,R6   0
          0 00000C  8400 0000 0002  xsym                 AID      QI_1+2
          0 00000F  8D47 0007                            SDI      ARRAY_SOURCE$,AUTO

  17135   0 000011  DCC7 0007                            LDB,B5   ARRAY_SOURCE$,AUTO
          0 000013  8985                                 CMZ      ,B5
          0 000014  0881 0019                            BAGE     s:17153,PREL

  17136   0 000016  ECC7 0007                            LDB,B6   ARRAY_SOURCE$,AUTO
          0 000018  E806                                 LDR,R6   ,B6
          0 000019  6046                                 SOR,R6   6
          0 00001A  E570 0001                            AND,R6   1,IMO
          0 00001C  B846 0002                            LDR,R3   2,B6
          0 00001E  A856                                 LDR,R2   R6
          0 00001F  DCA0 0000 0000  xsym                 LDB,B5   QI_1,R2
          0 000022  DFC7 0034                            STB,B5   QI@OTTER_SPACE+8,AUTO
          0 000024  F853                                 LDR,R7   R3
          0 000025  6C00                                 LDV,R6   0
          0 000026  8447 0034                            AID      QI@OTTER_SPACE+8,AUTO
          0 000028  8D47 0007                            SDI      ARRAY_SOURCE$,AUTO

  17140   0 00002A  ECC7 0007                            LDB,B6   ARRAY_SOURCE$,AUTO
          0 00002C  8986                                 CMZ      ,B6
          0 00002D  0869                                 BAL      s:17136,SPREL

       96    17152
       97    17153    1       QI_1.DAD.S$ = ARRAY_SOURCE$;

  17153   0 00002E  ECC7 0007                            LDB,B6   ARRAY_SOURCE$,AUTO
          0 000030  EF80 0000 0032  xsym                 STB,B6   QI_1+50
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:24   

       98    17154    1       DIMENSION_COUNT = ARRAY_SOURCE$ -> QI$DAD.WORD0_FLAGS.DIMENSION_COUNT;

  17154   0 000033  D806                                 LDR,R5   ,B6
          0 000034  5044                                 SOR,R5   4
          0 000035  D570 0003                            AND,R5   3,IMO
          0 000037  DF47 000F                            STR,R5   DIMENSION_COUNT,AUTO

       99    17155
      100    17156    2       DO SUBSCRIPT_INDEX = 0 TO DIMENSION_COUNT - 1;

  17156   0 000039  8747 0022                            CL       SUBSCRIPT_INDEX,AUTO
          0 00003B  0F81 0006                            B        s:17160+2,PREL

      101    17157
      102    17158    2         CALL EVALUATE_SUBSCRIPT ALTRET ( ARRAY_BOUND_EXCEEDED_SHEESH );

  17158   0 00003D  E3C0 0284                            LNJ,B6   s:0,PREL
          0 00003F       026F                            DC       s:17670,PREL

      103    17159
      104    17160    2       END;

  17160   0 000040  8AC7 0022                            INC      SUBSCRIPT_INDEX,AUTO
          0 000042  E847 0022                            LDR,R6   SUBSCRIPT_INDEX,AUTO
          0 000044  E947 000F                            CMR,R6   DIMENSION_COUNT,AUTO
          0 000046  0277                                 BL       s:17158,SPREL

      105    17161
      106    17162            /* QI$OP_SUBSCR.SUBSCRIPT_A@P (DIMENSION_COUNT) is really where
      107    17163               QI$OP_SUBSCR.DUMMY_RESULT@P is.  */
      108    17164            %PROC_ADDRESS ( THING@P =
             17164                "QI_1.INSTR$ -> QI$OP_SUBSCR.SUBSCRIPT_A@P (DIMENSION_COUNT)",
      109    17165            CHECK_FOR_INDIRECTION = YES,
      110    17166            RESULT$ = DUMMY_RESULT$ );

  17184   0 000047  EC80 0000 0006  xsym                 LDB,B6   QI_1+6
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:25   
          0 00004A  B847 000F                            LDR,R3   DIMENSION_COUNT,AUTO
          0 00004C  3E02                                 ADV,R3   2
          0 00004D  A836                                 LDR,R2   ,B6,R3
          0 00004E  F852                                 LDR,R7   R2
          0 00004F  6C00                                 LDV,R6   0
          0 000050  8400 0000 0002  xsym                 AID      QI_1+2
          0 000053  8D47 0010                            SDI      DUMMY_RESULT$,AUTO

  17186   0 000055  DCC7 0010                            LDB,B5   DUMMY_RESULT$,AUTO
          0 000057  8985                                 CMZ      ,B5
          0 000058  0881 0019                            BAGE     s:17204,PREL

  17187   0 00005A  ECC7 0010                            LDB,B6   DUMMY_RESULT$,AUTO
          0 00005C  E806                                 LDR,R6   ,B6
          0 00005D  6046                                 SOR,R6   6
          0 00005E  E570 0001                            AND,R6   1,IMO
          0 000060  B846 0002                            LDR,R3   2,B6
          0 000062  A856                                 LDR,R2   R6
          0 000063  DCA0 0000 0000  xsym                 LDB,B5   QI_1,R2
          0 000066  DFC7 0034                            STB,B5   QI@OTTER_SPACE+8,AUTO
          0 000068  F853                                 LDR,R7   R3
          0 000069  6C00                                 LDV,R6   0
          0 00006A  8447 0034                            AID      QI@OTTER_SPACE+8,AUTO
          0 00006C  8D47 0010                            SDI      DUMMY_RESULT$,AUTO

  17191   0 00006E  ECC7 0010                            LDB,B6   DUMMY_RESULT$,AUTO
          0 000070  8986                                 CMZ      ,B6
          0 000071  0869                                 BAL      s:17187,SPREL

      111    17203
      112    17204    1       DUMMY_RESULT$ -> QI$DAD.WORD0 = ARRAY_SOURCE$ -> QI$DAD.WORD0;

  17204   0 000072  ECC7 0010                            LDB,B6   DUMMY_RESULT$,AUTO
          0 000074  DCC7 0007                            LDB,B5   ARRAY_SOURCE$,AUTO
          0 000076  D805                                 LDR,R5   ,B5
          0 000077  DF06                                 STR,R5   ,B6

PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:26   
      113    17205    1       DUMMY_RESULT$ -> QI$DAD.PSEUDO_CIP_A (0) = ARRAY_SOURCE$ -> QI$DAD.PSEUDO_CIP_A
             17205                (0);

  17205   0 000078  C845 0001                            LDR,R4   1,B5
          0 00007A  CF46 0001                            STR,R4   1,B6

      114    17206
      115    17207    1       IF ARRAY_SOURCE$ -> QI$DAD.WORD0_FLAGS.IS_FORM_VARIABLE

  17207   0 00007C  8285                                 LB,'0080'X        ,B5
  17207   0 00007D       0080
          0 00007E  0581 0007                            BBF      s:17211,PREL

      116    17208    1       THEN
      117    17209    1         DIMENSION$ = ADDR ( ARRAY_SOURCE$ -> QI$FIELD_DAD.VARIABLE_LENGTH_ITEMS.
             17209                  LEVEL_MULTIPLIERS );

  17209   0 000080  CBC5 000B                            LAB,B4   11,B5
          0 000082  CFC7 000D                            STB,B4   DIMENSION$,AUTO
          0 000084  0F81 0005                            B        s:17213,PREL

      118    17210    1       ELSE
      119    17211    1         DIMENSION$ = ADDR ( ARRAY_SOURCE$ -> QI$COBOL_DAD.VARIABLE_LENGTH_ITEMS.
             17211                  LEVEL_MULTIPLIERS );

  17211   0 000086  CBC5 0003                            LAB,B4   3,B5
          0 000088  CFC7 000D                            STB,B4   DIMENSION$,AUTO

      120    17212
      121    17213    1       BYTE_DISPLACEMENT = 0;

  17213   0 00008A  8747 000B                            CL       BYTE_DISPLACEMENT,AUTO
          0 00008C  8747 000C                            CL       BYTE_DISPLACEMENT+1,AUTO

      122    17214
      123    17215    2       DO SUBSCRIPT_INDEX = 0 TO DIMENSION_COUNT - 1;

PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:27   
  17215   0 00008E  8747 0022                            CL       SUBSCRIPT_INDEX,AUTO
          0 000090  0F81 0030                            B        s:17252+2,PREL

      124    17216
      125    17217    2         IF SUBSCRIPT_A ( SUBSCRIPT_INDEX ) = %BITBIN ( 'FFFF'X )

  17217   0 000092  B847 0022                            LDR,R3   SUBSCRIPT_INDEX,AUTO
          0 000094  3E1F                                 ADV,R3   31
          0 000095  E837                                 LDR,R6   ,AUTO,R3
          0 000096  E970 FFFF                            CMR,R6   -1,IMO
          0 000098  0901 021E                            BE       s:17673,PREL

      126    17218    2         THEN
      127    17219    2           GOTO ARRAY_BOUND_INSUFFICIENT;
      128    17220
      129    17221              /*  QI$AREA_A@ ( SUBSCRIPT_INDEX * 2 ) is really something like
      130    17222                  QI$whatever_DAD.VARIABLE_LENGTH_ITEMS.LEVEL_MULTIPLIER_A.
      131    17223                  ELEMENT_COUNT, i.e., it's the maximum value allowable for
      132    17224                  an index into that dimension of the variable.
      133    17225                  If any of the subscripts (already evaluated) are larger
      134    17226                  than their respective ELEMENT_COUNT, then it's
      135    17227                  (hopefully) a user error.  */
      136    17228    2         IF SUBSCRIPT_A ( SUBSCRIPT_INDEX )

  17228   0 00009A  ECC7 000D                            LDB,B6   DIMENSION$,AUTO
          0 00009C  A847 0022                            LDR,R2   SUBSCRIPT_INDEX,AUTO
          0 00009E  2001                                 SOL,R2   1
          0 00009F  E926                                 CMR,R6   ,B6,R2
          0 0000A0  0281 01DD                            BGE      s:17657,PREL

      137    17229    2           > DIMENSION$ -> QI$AREA_A@ ( SUBSCRIPT_INDEX * 2 ) - 1
      138    17230    2         THEN
      139    17231    2           GOTO ARRAY_BOUND_EXCEEDED;
      140    17232
      141    17233              /*  QI$AREA_A@ ( ( SUBSCRIPT_INDEX * 2 ) + 1 ) is really like
      142    17234                  QI$whatever_DAD.VARIABLE_LENGTH_ITEMS.LEVEL_MULTIPLIER_A.
      143    17235                  ELEMENT_LENGTH, i.e., it's the level_multiplier to use as
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:28   
      144    17236                  a length for indexing into that dimension of the variable.
      145    17237                  If it's too big, then it's our problem.  */
      146    17238    2         INTERMEDIATE_32_BIT_RESULT = DIMENSION$ -> QI$AREA_A@ ( ( SUBSCRIPT_INDEX * 2
             17238                  ) + 1 )

  17238   0 0000A2  2E01                                 ADV,R2   1
          0 0000A3  F856                                 LDR,R7   R6
          0 0000A4  FB26                                 MUL,R7   ,B6,R2
          0 0000A5  8D47 0016                            SDI      INTERMEDIATE_32_BIT_RESULT,AUTO

      147    17239    2           * SUBSCRIPT_A ( SUBSCRIPT_INDEX );
      148    17240
      149    17241              %IF QI#DEBUG;
      150    17242
      151    17243    2         IF INTERMEDIATE_32_BIT_RESULT > %BITBIN ( '1FFFF'X )

  17243   0 0000A7  84F0 0001 FFFF                       SID      131071,IMO
          0 0000AA  0681 000E                            BCF      s:17249,PREL
          0 0000AC  6981 0003                            BNEZ,R6  s:17245,PREL
          0 0000AE  7901 000A                            BEZ,R7   s:17249,PREL

      152    17244    2         THEN
      153    17245    2           CALL QCE$ERROR_INTERNAL ( %E$INTERNAL_COMPILER_ERROR );

  17245   0 0000B0  BB80 0000 0001  01                   LAB,B3   +1
          0 0000B3  CBF0 0100                            LAB,B4   256,IMO
          0 0000B5  E380 0000 0000  xent                 LNJ,B6   QCE$ERROR_INTERNAL
          0 0000B8       0001                            DC       s:17249,PREL

      154    17246
      155    17247              %ENDIF;
      156    17248
      157    17249    2         BYTE_DISPLACEMENT = BYTE_DISPLACEMENT

  17249   0 0000B9  8CC7 000B                            LDI      BYTE_DISPLACEMENT,AUTO
          0 0000BB  8447 0016                            AID      INTERMEDIATE_32_BIT_RESULT,AUTO
          0 0000BD  8D47 000B                            SDI      BYTE_DISPLACEMENT,AUTO
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:29   

      158    17250    2           + INTERMEDIATE_32_BIT_RESULT;
      159    17251
      160    17252    2       END;

  17252   0 0000BF  8AC7 0022                            INC      SUBSCRIPT_INDEX,AUTO
          0 0000C1  E847 0022                            LDR,R6   SUBSCRIPT_INDEX,AUTO
          0 0000C3  E947 000F                            CMR,R6   DIMENSION_COUNT,AUTO
          0 0000C5  024D                                 BL       s:17217,SPREL

      161    17253
      162    17254            /*  In calculating the address of the dummy's data, we'll add
      163    17255                the BYTE_DISPLACEMENT to the original DATA@ (word address)
      164    17256                and OFFSET (byte offset).
      165    17257                The new DATA@ is the result of the addition, divided by 2;
      166    17258                the new OFFSET is the result of the addition, mod 2.
      167    17259                How does this ever work for PACKED items?
      168    17260                Because each element of a PACKED array, and each PACKED element
      169    17261                of any array, will be byte-aligned.  For example:
      170    17262                01  ICK1.
      171    17263                    02  ICK2 PIC 9 COMP OCCURS 3.
      172    17264                Will generate:
      173    17265                ICK2 (1) located in word 0, byte 0, right justified;
      174    17266                ICK2 (2) located in word 0, byte 1, right justified;
      175    17267                ICK2 (3) located in word 1, byte 0, right justified.
      176    17268                        word 0                       word 1
      177    17269                   byte 0    byte 1             byte 0    byte 1
      178    17270                ---------------------        ---------------------
      179    17271                |0000|2(1)|0000|2(2)|        |0000|2(3)|....|....|
      180    17272                ---------------------        ---------------------
      181    17273
      182    17274                Similarly:
      183    17275                01  ICK1.
      184    17276                    02  ICK2 OCCURS 2.
      185    17277                        03  ICK3 PIC 9 COMP.
      186    17278                        03  ICK4 PIC X.
      187    17279                Will generate:
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:30   
      188    17280                ICK3 (1) located in word 0, byte 0, right justified;
      189    17281                ICK4 (1) located in word 0, byte 1;
      190    17282                ICK3 (2) located in word 1, byte 0, right justified;
      191    17283                ICK4 (2) located in word 1, byte 1.
      192    17284                        word 0                       word 1
      193    17285                   byte 0    byte 1             byte 0    byte 1
      194    17286                ---------------------        ---------------------
      195    17287                |0000|3(1)|  4(1)   |        |0000|3(2)|  4(2)   |
      196    17288                ---------------------        ---------------------
      197    17289
      198    17290                So, the QI$COBOL_DAD.PSEUDO_CIP.NUMERIC.CP.OFFSET
      199    17291                (the 2-bit offset for PACKED items) always retains its
      200    17292                rightmost (least significant) bit:  this is the "nibble"
      201    17293                offset into the first byte of the array.
      202    17294                Which means that, when building the dummy,
      203    17295                QI$COBOL_DAD.PSEUDO_CIP.ALPHANUMERIC.CA.OFFSET is filled in
      204    17296                for items of all types, thereby replacing the entire offset
      205    17297                for DISPLAY (alphanumeric and numeric) and BINARY items, and
      206    17298                only the most significant offset bit for PACKED items.
      207    17299                This took me a long time to figure out...I hope it's right.
      208    17300                (JJL, C00).  */
      209    17301    1       IF NOT ARRAY_SOURCE$ -> QI$DAD.WORD0_FLAGS.IS_FORM_VARIABLE

  17301   0 0000C6  ECC7 0007                            LDB,B6   ARRAY_SOURCE$,AUTO
          0 0000C8  8286                                 LB,'0080'X        ,B6
          0 0000C9       0080
          0 0000CA  0501 0041                            BBT      s:17369,PREL
          0 0000CC  8286                                 LB,'0800'X        ,B6
          0 0000CD       0800
          0 0000CE  0581 003D                            BBF      s:17369,PREL

      210    17302    1         AND ARRAY_SOURCE$ -> QI$COBOL_DAD.WORD0_FLAGS.IS_LINKAGE_ARGUMENT
      211    17303    1       THEN
      212    17304    1   EVALUATE_ARGUMENT_ADDRESS:
      213    17305    2         DO;

  17305   0                              EVALUATE_ARGUME*null
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:31   
      214    17306                %PROC_ADDRESS ( THING@P = "ARRAY_SOURCE$ -> QI$COBOL_DAD.PSEUDO_CIP.DATA@",
      215    17307                CHECK_FOR_INDIRECTION = NO,
      216    17308                RESULT$ = ARRAY_DESCRIPTOR$ );

  17326   0 0000D0  B846 0002            EVALUATE_ARGUME*LDR,R3   2,B6
          0 0000D2  F853                                 LDR,R7   R3
          0 0000D3  6C00                                 LDV,R6   0
          0 0000D4  8400 0000 0002  xsym                 AID      QI_1+2
          0 0000D7  8D47 0004                            SDI      ARRAY_DESCRIPTOR$,AUTO

      217    17345
      218    17346    2           BYTE_DISPLACEMENT = BYTE_DISPLACEMENT

  17346   0 0000D9  F846 0001                            LDR,R7   1,B6
          0 0000DB  704F                                 SOR,R7   15
          0 0000DC  6C00                                 LDV,R6   0
          0 0000DD  8447 000B                            AID      BYTE_DISPLACEMENT,AUTO
          0 0000DF  8D47 0034                            SDI      QI@OTTER_SPACE+8,AUTO
          0 0000E1  DCC7 0004                            LDB,B5   ARRAY_DESCRIPTOR$,AUTO
          0 0000E3  F845 0001                            LDR,R7   1,B5
          0 0000E5  6C00                                 LDV,R6   0
          0 0000E6  7081                                 DOL,R7   1
          0 0000E7  8447 0034                            AID      QI@OTTER_SPACE+8,AUTO
          0 0000E9  8D47 000B                            SDI      BYTE_DISPLACEMENT,AUTO

      219    17347    2             + ARRAY_SOURCE$ -> QI$COBOL_DAD.PSEUDO_CIP.ALPHANUMERIC.CA.OFFSET
      220    17348    2             + ( ARRAY_DESCRIPTOR$ -> QI$LINKAGE_ARGUMENT_DESCRIPTOR.
             17348                      WORD_OFFSET_FROM_01_ITEM * 2 );
      221    17349
      222    17350                %IF QI#DEBUG;
      223    17351
      224    17352    2           IF BYTE_DISPLACEMENT > %BITBIN ( '1FFFF'X )

  17352   0 0000EB  84F0 0001 FFFF                       SID      131071,IMO
          0 0000EE  0681 000E                            BCF      s:17358,PREL
          0 0000F0  6981 0003                            BNEZ,R6  s:17354,PREL
          0 0000F2  7901 000A                            BEZ,R7   s:17358,PREL
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:32   

      225    17353    2           THEN
      226    17354    2             CALL QCE$ERROR_INTERNAL ( %E$INTERNAL_COMPILER_ERROR );

  17354   0 0000F4  BB80 0000 0001  01                   LAB,B3   +1
          0 0000F7  CBF0 0100                            LAB,B4   256,IMO
          0 0000F9  E380 0000 0000  xent                 LNJ,B6   QCE$ERROR_INTERNAL
          0 0000FC       0001                            DC       s:17358,PREL

      227    17355
      228    17356                %ENDIF;
      229    17357
      230    17358    2           DUMMY_RESULT$ -> QI$COBOL_DAD.PSEUDO_CIP.ALPHANUMERIC.CA.OFFSET =

  17358   0 0000FD  8CC7 000B                            LDI      BYTE_DISPLACEMENT,AUTO
          0 0000FF  E857                                 LDR,R6   R7
          0 000100  E570 0001                            AND,R6   1,IMO
          0 000102  600F                                 SOL,R6   15
          0 000103  ECC7 0010                            LDB,B6   DUMMY_RESULT$,AUTO
          0 000105  EAC6 0001                            SRM,R6,'8000'X    1,B6
          0 000107       8000

      231    17359    2             MOD ( BYTE_DISPLACEMENT, 2 );
      232    17360
      233    17361                /*  Since we're not sure quite where the
      234    17362                    QI$LINKAGE_ARGUMENT_DESCRIPTOR will end up being generated
      235    17363                    for this dummy yet, we'll defer filling in .DATA@.
      236    17364                    One thing's for sure:  it'll be @D.  */
      237    17365    2           DUMMY_RESULT$ -> QI$COBOL_DAD.WORD0_FLAGS.IS_CONSTANT = %NO;

  17365   0 000108  8806                                 LBF,'0040'X       ,B6
  17365   0 000109       0040

      238    17366    2         END EVALUATE_ARGUMENT_ADDRESS;

  17366   0 00010A  0F81 0034                            B        s:17388,PREL

PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:33   
      239    17367    1       ELSE
      240    17368    1   EVALUATE_VARIABLE_ADDRESS:
      241    17369    2         DO;

  17369   0                              EVALUATE_VARIAB*null
      242    17370    2           BYTE_DISPLACEMENT = BYTE_DISPLACEMENT

  17370   0 00010C  F846 0001            EVALUATE_VARIAB*LDR,R7   1,B6
          0 00010E  704F                                 SOR,R7   15
          0 00010F  6C00                                 LDV,R6   0
          0 000110  8447 000B                            AID      BYTE_DISPLACEMENT,AUTO
          0 000112  8D47 0034                            SDI      QI@OTTER_SPACE+8,AUTO
          0 000114  F846 0002                            LDR,R7   2,B6
          0 000116  6C00                                 LDV,R6   0
          0 000117  7081                                 DOL,R7   1
          0 000118  8447 0034                            AID      QI@OTTER_SPACE+8,AUTO
          0 00011A  8D47 000B                            SDI      BYTE_DISPLACEMENT,AUTO

      243    17371    2             + ARRAY_SOURCE$ -> QI$DAD.PSEUDO_CIP.ALPHANUMERIC.CA.OFFSET
      244    17372    2             + ( ARRAY_SOURCE$ -> QI$DAD.PSEUDO_CIP.DATA@ * 2 );
      245    17373
      246    17374                %IF QI#DEBUG;
      247    17375
      248    17376    2           IF BYTE_DISPLACEMENT > %BITBIN ( '1FFFF'X )

  17376   0 00011C  84F0 0001 FFFF                       SID      131071,IMO
          0 00011F  0681 000E                            BCF      s:17382,PREL
          0 000121  6981 0003                            BNEZ,R6  s:17378,PREL
          0 000123  7901 000A                            BEZ,R7   s:17382,PREL

      249    17377    2           THEN
      250    17378    2             CALL QCE$ERROR_INTERNAL ( %E$INTERNAL_COMPILER_ERROR );

  17378   0 000125  BB80 0000 0001  01                   LAB,B3   +1
          0 000128  CBF0 0100                            LAB,B4   256,IMO
          0 00012A  E380 0000 0000  xent                 LNJ,B6   QCE$ERROR_INTERNAL
          0 00012D       0001                            DC       s:17382,PREL
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:34   

      251    17379
      252    17380                %ENDIF;
      253    17381
      254    17382    2           DUMMY_RESULT$ -> QI$DAD.PSEUDO_CIP.ALPHANUMERIC.CA.OFFSET =

  17382   0 00012E  8CC7 000B                            LDI      BYTE_DISPLACEMENT,AUTO
          0 000130  E857                                 LDR,R6   R7
          0 000131  E570 0001                            AND,R6   1,IMO
          0 000133  600F                                 SOL,R6   15
          0 000134  ECC7 0010                            LDB,B6   DUMMY_RESULT$,AUTO
          0 000136  EAC6 0001                            SRM,R6,'8000'X    1,B6
          0 000138       8000

      255    17383    2             MOD ( BYTE_DISPLACEMENT, 2 );
      256    17384    2           DUMMY_RESULT$ -> QI$DAD.PSEUDO_CIP.DATA@ =

  17384   0 000139  8CC7 000B                            LDI      BYTE_DISPLACEMENT,AUTO
          0 00013B  70C1                                 DOR,R7   1
          0 00013C  E857                                 LDR,R6   R7
          0 00013D  EF46 0002                            STR,R6   2,B6

      257    17385    2             BYTE_DISPLACEMENT / 2;
      258    17386    2         END EVALUATE_VARIABLE_ADDRESS;

      259    17387
      260    17388    1       DUMMY_RESULT$ -> QI$DAD.WORD0_FLAGS.DIMENSION_COUNT = 0;

  17388   0 00013F  8806                                 LBF,'0030'X       ,B6
  17388   0 000140       0030

      261    17389
      262    17390    1       IF ARRAY_SOURCE$ -> QI$DAD.WORD0_FLAGS.IS_FORM_VARIABLE

  17390   0 000141  DCC7 0007                            LDB,B5   ARRAY_SOURCE$,AUTO
          0 000143  8285                                 LB,'0080'X        ,B5
          0 000144       0080
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:35   
          0 000145  0581 00E5                            BBF      s:17610,PREL

      263    17391    1       THEN
      264    17392    1   ITS_A_FIELD_KIND_OF_DAD:
      265    17393    2         DO;

  17393   0                              ITS_A_FIELD_KIN*null
      266    17394
      267    17395    2           DUMMY_RESULT$ -> QI$FIELD_DAD.PICTURE_STRING@P =

  17395   0 000147  E845 0003            ITS_A_FIELD_KIN*LDR,R6   3,B5
          0 000149  EF46 0003                            STR,R6   3,B6

      268    17396    2             ARRAY_SOURCE$ -> QI$FIELD_DAD.PICTURE_STRING@P;
      269    17397    2           DUMMY_RESULT$ -> QI$FIELD_DAD.BROTHER@P =

  17397   0 00014B  D845 0004                            LDR,R5   4,B5
          0 00014D  DF46 0004                            STR,R5   4,B6

      270    17398    2             ARRAY_SOURCE$ -> QI$FIELD_DAD.BROTHER@P;
      271    17399    2           DUMMY_RESULT$ -> QI$FIELD_DAD.FATHER@P =

  17399   0 00014F  C845 0005                            LDR,R4   5,B5
          0 000151  CF46 0005                            STR,R4   5,B6

      272    17400    2             ARRAY_SOURCE$ -> QI$FIELD_DAD.FATHER@P;
      273    17401    2           DUMMY_RESULT$ -> QI$FIELD_DAD.IDENTIFIER@P =

  17401   0 000153  B845 0007                            LDR,R3   7,B5
          0 000155  BF46 0007                            STR,R3   7,B6

      274    17402    2             ARRAY_SOURCE$ -> QI$FIELD_DAD.IDENTIFIER@P;
      275    17403    2           DUMMY_RESULT$ -> QI$FIELD_DAD.POSITION =

  17403   0 000157  8CC5 0008                            LDI      8,B5
          0 000159  8D46 0008                            SDI      8,B6

PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:36   
      276    17404    2             ARRAY_SOURCE$ -> QI$FIELD_DAD.POSITION;
      277    17405    2           DUMMY_RESULT$ -> QI$FIELD_DAD.VISUAL_ATTRIBUTE =

  17405   0 00015B  A845 000A                            LDR,R2   10,B5
          0 00015D  AAC6 000A                            SRM,R2,'00FF'X    10,B6
          0 00015F       00FF

      278    17406    2             ARRAY_SOURCE$ -> QI$FIELD_DAD.VISUAL_ATTRIBUTE;
      279    17407
      280    17408                /*  Increment past any level_multipliers to get to the
      281    17409                    P_ITEM_A stuff.  */
      282    17410    2           PRESENCE$ = ADDR ( ARRAY_SOURCE$ -> QI$FIELD_DAD.VARIABLE_LENGTH_ITEMS.
             17410                    LEVEL_MULTIPLIER_A ( DIMENSION_COUNT ) );

  17410   0 000160  A847 000F                            LDR,R2   DIMENSION_COUNT,AUTO
          0 000162  2001                                 SOL,R2   1
          0 000163  2E0B                                 ADV,R2   11
          0 000164  CBA5                                 LAB,B4   ,B5,R2
          0 000165  CFC7 0018                            STB,B4   PRESENCE$,AUTO

      283    17411    2           P_ITEM_INDEX = 0;

  17411   0 000167  8747 001B                            CL       P_ITEM_INDEX,AUTO

      284    17412
      285    17413    2           DO PRESENCE_INDEX = %QI#P_FIELD_FIRST_INDEX
      286    17414    3             TO %QI#P_PROMPT_INDEX;

  17414   0 000169  8747 001A                            CL       PRESENCE_INDEX,AUTO

      287    17415
      288    17416    3             IF PRESENCE$ -> QI$FIELD_DAD_P.P_A ( PRESENCE_INDEX )

  17416   0 00016B  ECC7 0018                            LDB,B6   PRESENCE$,AUTO
          0 00016D  B847 001A                            LDR,R3   PRESENCE_INDEX,AUTO
          0 00016F  82B6                                 LB       ,B6,R3
          0 000170  0581 000D                            BBF      s:17424,PREL
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:37   

      289    17417    3             THEN
      290    17418    4               DO;

      291    17419    4                 DUMMY_RESULT$ -> QI$FIELD_DAD.ELEMENTARY_ITEM.P_ITEM_A ( P_ITEM_INDEX
             17419                          ) =

  17419   0 000172  DCC7 0010                            LDB,B5   DUMMY_RESULT$,AUTO
          0 000174  A847 001B                            LDR,R2   P_ITEM_INDEX,AUTO
          0 000176  2E0C                                 ADV,R2   12
          0 000177  9847 001B                            LDR,R1   P_ITEM_INDEX,AUTO
          0 000179  1E01                                 ADV,R1   1
          0 00017A  E816                                 LDR,R6   ,B6,R1
          0 00017B  EF25                                 STR,R6   ,B5,R2

      292    17420    4                   PRESENCE$ -> QI$FIELD_DAD_P.P_ITEM_A ( P_ITEM_INDEX );
      293    17421    4                 P_ITEM_INDEX = P_ITEM_INDEX + 1;

  17421   0 00017C  8AC7 001B                            INC      P_ITEM_INDEX,AUTO

      294    17422    4               END;

      295    17423
      296    17424    3           END;

  17424   0 00017E  8AC7 001A                            INC      PRESENCE_INDEX,AUTO
          0 000180  E847 001A                            LDR,R6   PRESENCE_INDEX,AUTO
          0 000182  6D03                                 CMV,R6   3
          0 000183  03E8                                 BLE      s:17416,SPREL

      297    17425
      298    17426    2           DUMMY_RESULT$ -> QI$FIELD_DAD.ELEMENTARY_ITEM.P =

  17426   0 000184  D806                                 LDR,R5   ,B6
          0 000185  D570 FC00                            AND,R5   -1024,IMO
          0 000187  D570 3C00                            AND,R5   15360,IMO
          0 000189  DCC7 0010                            LDB,B5   DUMMY_RESULT$,AUTO
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:38   
          0 00018B  DAC5 000B                            SRM,R5,'FC00'X    11,B5
          0 00018D       FC00

      299    17427    2             PRESENCE$ -> QI$FIELD_DAD_P.P & '3C'X;
      300    17428
      301    17429    2           DUMMY_RESULT$ -> QI$FIELD_DAD.ELEMENTARY_ITEM.CLASS_TYPE =

  17429   0 00018E  D806                                 LDR,R5   ,B6
          0 00018F  DAC5 000B                            SRM,R5,'0007'X    11,B5
          0 000191       0007

      302    17430    2             PRESENCE$ -> QI$FIELD_DAD_P.CLASS_TYPE;
      303    17431
      304    17432                /* The status area'll start with the first word after the last
      305    17433                   of the P_items.  */
      306    17434    2           DUMMY_RESULT_STATUS$ =

  17434   0 000192  B847 001B                            LDR,R3   P_ITEM_INDEX,AUTO
          0 000194  3E0D                                 ADV,R3   13
          0 000195  CBB5                                 LAB,B4   ,B5,R3
          0 000196  CFC7 0014                            STB,B4   DUMMY_RESULT_STATUS$,AUTO

      307    17435    2             ADDR ( DUMMY_RESULT$ -> QI$FIELD_DAD.ELEMENTARY_ITEM.P_ITEM_A (
             17435                      P_ITEM_INDEX + 1 ) );
      308    17436
      309    17437    2           DUMMY_RESULT$ -> QI$FIELD_DAD.STATUS_AREA@D =

  17437   0 000198  8CC7 0014                            LDI      DUMMY_RESULT_STATUS$,AUTO
          0 00019A  8480 0000 0000  xsym                 SID      QI_1
          0 00019D  E857                                 LDR,R6   R7
          0 00019E  EF45 0006                            STR,R6   6,B5

      310    17438    2             POFFW ( DUMMY_RESULT_STATUS$,
      311    17439    2             QI_1.BASE.DATA$ );
      312    17440
      313    17441                %DATA_ADDRESS ( THING@D = "ARRAY_SOURCE$ -> QI$FIELD_DAD.STATUS_AREA@D",
      314    17442                CHECK_FOR_INDIRECTION = NO,
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:39   
      315    17443                RESULT$ = ARRAY_SOURCE_STATUS$ );

  17461   0 0001A0  BCC7 0007                            LDB,B3   ARRAY_SOURCE$,AUTO
          0 0001A2  A843 0006                            LDR,R2   6,B3
          0 0001A4  F852                                 LDR,R7   R2
          0 0001A5  6C00                                 LDV,R6   0
          0 0001A6  8400 0000 0000  xsym                 AID      QI_1
          0 0001A9  8D47 0009                            SDI      ARRAY_SOURCE_STATUS$,AUTO

      316    17480
      317    17481    3           DO CASE ( DIMENSION_COUNT );

  17481   0 0001AB  9847 000F                            LDR,R1   DIMENSION_COUNT,AUTO
          0 0001AD  1D03                                 CMV,R1   3
          0 0001AE  0281 0070                            BGE      s:17600,PREL
          0 0001B0  B810 0000 01B6  00                   LDR,R3   s:17481+11,R1
          0 0001B3  83B0 0000 01B9  00                   JMP      s:17484,R3
          0 0001B6       0066                            DC       s:17600,PREL
          0 0001B7       0000                            DC       s:17484,PREL
          0 0001B8       0006                            DC       s:17487,PREL

      318    17482
      319    17483    3             CASE ( %QI#ONE_DIMENSIONAL_ITEM );

      320    17484    3               ARRAY_OFFSET = SUBSCRIPT_A (0);

  17484   0 0001B9  D847 001F                            LDR,R5   SUBSCRIPT_A,AUTO
          0 0001BB  DF47 0006                            STR,R5   ARRAY_OFFSET,AUTO
          0 0001BD  0F81 0061                            B        s:17600,PREL

      321    17485
      322    17486    3             CASE ( %QI#TWO_DIMENSIONAL_ITEM );

      323    17487    3               IF ARRAY_SOURCE$ -> QI$FIELD_DAD.TWO_DIMENSIONAL_ITEM.P.REPEATS

  17487   0 0001BF  82C3 000F                            LB,'0800'X        15,B3
  17487   0 0001C1       0800
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:40   
          0 0001C2  0581 001F                            BBF      s:17536,PREL

      324    17488    3               THEN
      325    17489    3   IT_REPEATS:
      326    17490    4                 DO;

  17490   0                              IT_REPEATS      null
      327    17491
      328    17492                        %PRESENCE_DISPLACEMENT (
      329    17493                        PRESENCE_THING$ =
      330    17494                        "ADDR ( ARRAY_SOURCE$ -> QI$FIELD_DAD.TWO_DIMENSIONAL_ITEM.P )",
      331    17495                        INDEX = PRESENCE_INDEX,
      332    17496                        START = %QI#P_FIELD_FIRST_INDEX,
      333    17497                        STOP = %QI#P_REPEATS_INDEX,
      334    17498                        RESULT = REPEATS_INDEX
      335    17499                        );

  17515   0 0001C4  8947 001C            IT_REPEATS      LBT,'FFFF'X       REPEATS_INDEX,AUTO
  17515   0 0001C6       FFFF

  17516   0 0001C7  8747 001A                            CL       PRESENCE_INDEX,AUTO

  17517   0 0001C9  ECC7 0007                            LDB,B6   ARRAY_SOURCE$,AUTO
          0 0001CB  DBC6 000F                            LAB,B5   15,B6
          0 0001CD  B847 001A                            LDR,R3   PRESENCE_INDEX,AUTO
          0 0001CF  82B5                                 LB       ,B5,R3
          0 0001D0  0581 0003                            BBF      s:17520,PREL

  17519   0 0001D2  8AC7 001C                            INC      REPEATS_INDEX,AUTO

  17520   0 0001D4  8AC7 001A                            INC      PRESENCE_INDEX,AUTO
          0 0001D6  E847 001A                            LDR,R6   PRESENCE_INDEX,AUTO
          0 0001D8  6D04                                 CMV,R6   4
          0 0001D9  03F0                                 BLE      s:17517,SPREL

      336    17531    4                   ARRAY_OFFSET = ARRAY_SOURCE$ -> QI$FIELD_DAD.TWO_DIMENSIONAL_ITEM.
             17531                            P_ITEM_A ( REPEATS_INDEX );
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:41   

  17531   0 0001DA  B847 001C                            LDR,R3   REPEATS_INDEX,AUTO
          0 0001DC  3E10                                 ADV,R3   16
          0 0001DD  D836                                 LDR,R5   ,B6,R3
          0 0001DE  DF47 0006                            STR,R5   ARRAY_OFFSET,AUTO

      337    17532
      338    17533    4                 END IT_REPEATS;

  17533   0 0001E0  0F81 0035                            B        s:17593,PREL

      339    17534    3               ELSE
      340    17535    3   IT_DOESNT_REPEAT:
      341    17536    4                 DO;

  17536   0                              IT_DOESNT_REPEATnull
      342    17537
      343    17538    4   FIND_NEAREST_REPEATED_MINOR:
      344    17539    5                   DO %FOREVER;

  17539   0                              FIND_NEAREST_RE*null
      345    17540
      346    17541                         %PROC_ADDRESS ( THING@P = "ARRAY_SOURCE$ -> QI$FIELD_DAD.FATHER@P"
             17541                              ,
      347    17542                          CHECK_FOR_INDIRECTION = YES,
      348    17543                          RESULT$ = ARRAY_SOURCE$ );

  17561   0 0001E2  ECC7 0007            FIND_NEAREST_RE*LDB,B6   ARRAY_SOURCE$,AUTO
          0 0001E4  B846 0005                            LDR,R3   5,B6
          0 0001E6  F853                                 LDR,R7   R3
          0 0001E7  6C00                                 LDV,R6   0
          0 0001E8  8400 0000 0002  xsym                 AID      QI_1+2
          0 0001EB  8D47 0007                            SDI      ARRAY_SOURCE$,AUTO

  17563   0 0001ED  ECC7 0007                            LDB,B6   ARRAY_SOURCE$,AUTO
          0 0001EF  8986                                 CMZ      ,B6
          0 0001F0  0881 0019                            BAGE     s:17581,PREL
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:42   

  17564   0 0001F2  ECC7 0007                            LDB,B6   ARRAY_SOURCE$,AUTO
          0 0001F4  E806                                 LDR,R6   ,B6
          0 0001F5  6046                                 SOR,R6   6
          0 0001F6  E570 0001                            AND,R6   1,IMO
          0 0001F8  B846 0002                            LDR,R3   2,B6
          0 0001FA  A856                                 LDR,R2   R6
          0 0001FB  DCA0 0000 0000  xsym                 LDB,B5   QI_1,R2
          0 0001FE  DFC7 0034                            STB,B5   QI@OTTER_SPACE+8,AUTO
          0 000200  F853                                 LDR,R7   R3
          0 000201  6C00                                 LDV,R6   0
          0 000202  8447 0034                            AID      QI@OTTER_SPACE+8,AUTO
          0 000204  8D47 0007                            SDI      ARRAY_SOURCE$,AUTO

  17568   0 000206  ECC7 0007                            LDB,B6   ARRAY_SOURCE$,AUTO
          0 000208  8986                                 CMZ      ,B6
          0 000209  0869                                 BAL      s:17564,SPREL

      349    17580
      350    17581    5                    IF ARRAY_SOURCE$ -> QI$FIELD_DAD.WORD0_FLAGS.TYPE = %QI#TYPE_MINOR

  17581   0 00020A  D806                                 LDR,R5   ,B6
          0 00020B  D570 000F                            AND,R5   15,IMO
          0 00020D  5D08                                 CMV,R5   8
          0 00020E  09D4                                 BNE      s:17536,SPREL

      351    17582    5                     THEN
      352    17583    5                       IF ARRAY_SOURCE$ -> QI$MINOR_NODE.REPEATS > 0

  17583   0 00020F  C846 0001                            LDR,R4   1,B6
          0 000211  4981 0002                            BNEZ,R4  s:17589,PREL

      353    17584    5                       THEN
      354    17585    5                         EXIT FIND_NEAREST_REPEATED_MINOR;
      355    17586
      356    17587    5                   END FIND_NEAREST_REPEATED_MINOR;

PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:43   
  17587   0 000213  0FCF                                 B        s:17536,SPREL

      357    17588
      358    17589    4                   ARRAY_OFFSET = ARRAY_SOURCE$ -> QI$MINOR_NODE.REPEATS;

  17589   0 000214  CF47 0006                            STR,R4   ARRAY_OFFSET,AUTO

      359    17590
      360    17591    4                 END IT_DOESNT_REPEAT;

      361    17592
      362    17593    3               ARRAY_OFFSET =

  17593   0 000216  F847 0006                            LDR,R7   ARRAY_OFFSET,AUTO
          0 000218  FB47 001F                            MUL,R7   SUBSCRIPT_A,AUTO
          0 00021A  E857                                 LDR,R6   R7
          0 00021B  EA47 0020                            ADD,R6   SUBSCRIPT_A+1,AUTO
          0 00021D  EF47 0006                            STR,R6   ARRAY_OFFSET,AUTO

      363    17594    3                 ( ARRAY_OFFSET
      364    17595    3                 * SUBSCRIPT_A (0) )
      365    17596    3                 + SUBSCRIPT_A (1);
      366    17597
      367    17598    3           END;

      368    17599
      369    17600    2           DUMMY_RESULT_STATUS$ -> QI$FIELD_STATUS.GZ.FIELD_START_INDEX =

  17600   0 00021F  ECC7 0009                            LDB,B6   ARRAY_SOURCE_STATUS$,AUTO
          0 000221  E806                                 LDR,R6   ,B6
          0 000222  EA47 0006                            ADD,R6   ARRAY_OFFSET,AUTO
          0 000224  DCC7 0014                            LDB,B5   DUMMY_RESULT_STATUS$,AUTO
          0 000226  EF05                                 STR,R6   ,B5

      370    17601    2             ARRAY_SOURCE_STATUS$ -> QI$FIELD_STATUS.GZ.FIELD_START_INDEX
      371    17602    2             + ARRAY_OFFSET;
      372    17603
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:44   
      373    17604    2           DUMMY_RESULT_STATUS$ -> QI$FIELD_STATUS.GZ.FIELD_STOP_INDEX =

  17604   0 000227  EF45 0001                            STR,R6   1,B5

      374    17605    2             DUMMY_RESULT_STATUS$ -> QI$FIELD_STATUS.GZ.FIELD_START_INDEX;
      375    17606
      376    17607    2         END ITS_A_FIELD_KIND_OF_DAD;

  17607   0 000229  0F81 0045                            B        s:17652,PREL

      377    17608    1       ELSE
      378    17609    1   ITS_A_COBOL_KIND_OF_DAD:
      379    17610    2         DO;

  17610   0                              ITS_A_COBOL_KIN*null
      380    17611                /*  Increment past any level_multipliers to get to the
      381    17612                    P.whatever flags.  */
      382    17613    2           PRESENCE$ = ADDR ( ARRAY_SOURCE$ -> QI$COBOL_DAD.VARIABLE_LENGTH_ITEMS.
             17613                    LEVEL_MULTIPLIER_A ( DIMENSION_COUNT ) );

  17613   0 00022B  B847 000F            ITS_A_COBOL_KIN*LDR,R3   DIMENSION_COUNT,AUTO
          0 00022D  3001                                 SOL,R3   1
          0 00022E  3E03                                 ADV,R3   3
          0 00022F  CBB5                                 LAB,B4   ,B5,R3
          0 000230  CFC7 0018                            STB,B4   PRESENCE$,AUTO

      383    17614    2           P_ITEM_INDEX = 0;

  17614   0 000232  8747 001B                            CL       P_ITEM_INDEX,AUTO

      384    17615
      385    17616    2           DO PRESENCE_INDEX = %QI#P_COBOL_FIRST_INDEX
      386    17617    3             TO %QI#P_COBOL_LAST_INDEX;

  17617   0 000234  6C01                                 LDV,R6   1
          0 000235  EF47 001A                            STR,R6   PRESENCE_INDEX,AUTO

PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:45   
      387    17618
      388    17619    3             IF ARRAY_SOURCE$ -> QI$COBOL_DAD.P_A ( PRESENCE_INDEX )

  17619   0 000237  ECC7 0007                            LDB,B6   ARRAY_SOURCE$,AUTO
          0 000239  B847 001A                            LDR,R3   PRESENCE_INDEX,AUTO
          0 00023B  82B6                                 LB       ,B6,R3
          0 00023C  0581 000E                            BBF      s:17627,PREL

      389    17620    3             THEN
      390    17621    4               DO;

      391    17622    4                 DUMMY_RESULT$ -> QI$COBOL_DAD.ELEMENTARY_ITEM.P_ITEM_A ( P_ITEM_INDEX
             17622                          ) =

  17622   0 00023E  DCC7 0010                            LDB,B5   DUMMY_RESULT$,AUTO
          0 000240  A847 001B                            LDR,R2   P_ITEM_INDEX,AUTO
          0 000242  2E03                                 ADV,R2   3
          0 000243  CCC7 0018                            LDB,B4   PRESENCE$,AUTO
          0 000245  9847 001B                            LDR,R1   P_ITEM_INDEX,AUTO
          0 000247  E814                                 LDR,R6   ,B4,R1
          0 000248  EF25                                 STR,R6   ,B5,R2

      392    17623    4                   PRESENCE$ -> QI$COBOL_DAD_P_ITEMS.P_ITEM_A ( P_ITEM_INDEX );
      393    17624    4                 P_ITEM_INDEX = P_ITEM_INDEX + 1;

  17624   0 000249  8AC7 001B                            INC      P_ITEM_INDEX,AUTO

      394    17625    4               END;

      395    17626
      396    17627    3           END;

  17627   0 00024B  8AC7 001A                            INC      PRESENCE_INDEX,AUTO
          0 00024D  E847 001A                            LDR,R6   PRESENCE_INDEX,AUTO
          0 00024F  6D03                                 CMV,R6   3
          0 000250  03E7                                 BLE      s:17619,SPREL

PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:46   
      397    17628
      398    17629                /*  If this is a LINKAGE SECTION item, we're not done yet.
      399    17630                    DATA@ is the offset into data of the
      400    17631                    QI$LINKAGE_ARGUMENT_DESCRIPTOR, which is built following
      401    17632                    the P_ITEM_A stuff.  */
      402    17633    2           IF ARRAY_SOURCE$ -> QI$COBOL_DAD.WORD0_FLAGS.IS_LINKAGE_ARGUMENT

  17633   0 000251  8286                                 LB,'0800'X        ,B6
  17633   0 000252       0800
          0 000253  0581 001B                            BBF      s:17652,PREL

      403    17634    2           THEN
      404    17635    2   BUILD_LINKAGE_DESCRIPTOR:
      405    17636    3             DO;

  17636   0                              BUILD_LINKAGE_D*null
      406    17637    3               DUMMY_RESULT_DESCRIPTOR$ =

  17637   0 000255  DCC7 0010            BUILD_LINKAGE_D*LDB,B5   DUMMY_RESULT$,AUTO
          0 000257  B847 001B                            LDR,R3   P_ITEM_INDEX,AUTO
          0 000259  3E04                                 ADV,R3   4
          0 00025A  CBB5                                 LAB,B4   ,B5,R3
          0 00025B  CFC7 0012                            STB,B4   DUMMY_RESULT_DESCRIPTOR$,AUTO

      407    17638    3                 ADDR ( DUMMY_RESULT$ -> QI$COBOL_DAD.ELEMENTARY_ITEM.P_ITEM_A (
             17638                          P_ITEM_INDEX + 1 ) );
      408    17639
      409    17640    3               DUMMY_RESULT$ -> QI$COBOL_DAD.PSEUDO_CIP.DATA@ =

  17640   0 00025D  8CC7 0012                            LDI      DUMMY_RESULT_DESCRIPTOR$,AUTO
          0 00025F  8480 0000 0000  xsym                 SID      QI_1
          0 000262  E857                                 LDR,R6   R7
          0 000263  EF45 0002                            STR,R6   2,B5

      410    17641    3                 POFFW ( DUMMY_RESULT_DESCRIPTOR$,
      411    17642    3                 QI_1.BASE.DATA$ );
      412    17643
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:47   
      413    17644    3               DUMMY_RESULT_DESCRIPTOR$ -> QI$LINKAGE_ARGUMENT_DESCRIPTOR.
             17644                        ARGUMENT_NUMBER =

  17644   0 000265  BCC7 0004                            LDB,B3   ARRAY_DESCRIPTOR$,AUTO
          0 000267  D803                                 LDR,R5   ,B3
          0 000268  DF04                                 STR,R5   ,B4

      414    17645    3                 ARRAY_DESCRIPTOR$ -> QI$LINKAGE_ARGUMENT_DESCRIPTOR.ARGUMENT_NUMBER;
      415    17646    3               DUMMY_RESULT_DESCRIPTOR$ -> QI$LINKAGE_ARGUMENT_DESCRIPTOR.
             17646                        WORD_OFFSET_FROM_01_ITEM =

  17646   0 000269  8CC7 000B                            LDI      BYTE_DISPLACEMENT,AUTO
          0 00026B  70C1                                 DOR,R7   1
          0 00026C  E857                                 LDR,R6   R7
          0 00026D  EF44 0001                            STR,R6   1,B4

      416    17647    3                 BYTE_DISPLACEMENT / 2;
      417    17648    3             END BUILD_LINKAGE_DESCRIPTOR;

      418    17649
      419    17650    2         END ITS_A_COBOL_KIND_OF_DAD;

      420    17651
      421    17652    1       QI_1.INSTR$ = PINCRW ( QI_1.INSTR$, DIMENSION_COUNT + 3 );

  17652   0 00026F  F847 000F                            LDR,R7   DIMENSION_COUNT,AUTO
          0 000271  6C00                                 LDV,R6   0
          0 000272  8400 0000 0006  xsym                 AID      QI_1+6
          0 000275  8470 0000 0003                       AID      3,IMO
          0 000278  8D00 0000 0006  xsym                 SDI      QI_1+6

      422    17653
      423    17654    1       RETURN;

  17654   0 00027B  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      424    17655
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:48   
      425    17656    1   ARRAY_BOUND_EXCEEDED:
      426    17657    1       U1.LENGTH = 5;

  17657   0 00027E  5C05                 ARRAY_BOUND_EXC*LDV,R5   5
          0 00027F  D7C7 0023                            STH,R5   U1,AUTO

      427    17658    1       CALL BINCHAR ( U1.TEXT,

  17658   0 000281  F837                                 LDR,R7   ,AUTO,R3
          0 000282  6C00                                 LDV,R6   0
          0 000283  8470 0000 0001                       AID      1,IMO
          0 000286  8D47 0034                            SDI      QI@OTTER_SPACE+8,AUTO
          0 000288  0027                                 CBD      ;
          0 000289       0407 0034                                BINARY(QI@OTTER_SPACE+8,AUTO,,4),;
          0 00028B       8507 0023                                UNPACKED(U1,AUTO,1,5,UNSIGNED)

      428    17659    1         SUBSCRIPT_A ( SUBSCRIPT_INDEX ) + 1 );
      429    17660
      430    17661    1       U2.LENGTH = 5;

  17661   0 00028D  D7C7 0026                            STH,R5   U2,AUTO

      431    17662    1       CALL BINCHAR ( U2.TEXT,

  17662   0 00028F  437F                                 CSYNC    s:17661+1,SPREL
          0 000290  F826                                 LDR,R7   ,B6,R2
          0 000291  6C00                                 LDV,R6   0
          0 000292  8D47 0034                            SDI      QI@OTTER_SPACE+8,AUTO
          0 000294  0027                                 CBD      ;
          0 000295       0407 0034                                BINARY(QI@OTTER_SPACE+8,AUTO,,4),;
          0 000297       8507 0026                                UNPACKED(U2,AUTO,1,5,UNSIGNED)

      432    17663    1         DIMENSION$ -> QI$AREA_A@ ( SUBSCRIPT_INDEX * 2 ) );
      433    17664
      434    17665    1       CALL QCE$ERROR ( %E$SUBSCRIPT_OUT_OF_RANGE,

  17665   0 000299  DBF0 0017                            LAB,B5   23,IMO
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:49   
          0 00029B  CBC7 0026                            LAB,B4   U2,AUTO
          0 00029D  CFC7 0038                            STB,B4   QI@OTTER_SPACE+12,AUTO
          0 00029F  BBC7 0023                            LAB,B3   U1,AUTO
          0 0002A1  BFC7 0036                            STB,B3   QI@OTTER_SPACE+10,AUTO
          0 0002A3  437F                                 CSYNC    s:17665+9,SPREL
          0 0002A4  DFC7 0034                            STB,B5   QI@OTTER_SPACE+8,AUTO
          0 0002A6  BBC7 0034                            LAB,B3   QI@OTTER_SPACE+8,AUTO
          0 0002A8  CBF0 0300                            LAB,B4   768,IMO
          0 0002AA  E380 0000 0000  xent                 LNJ,B6   QCE$ERROR
          0 0002AD       0001                            DC       s:17670,PREL

      435    17666    1         U1,
      436    17667    1         U2 );
      437    17668
      438    17669    1   ARRAY_BOUND_EXCEEDED_SHEESH:
      439    17670    1       CALL QCE$ERROR ( %E$SUBSCRIPT_OUT_OF_SIGHT );

  17670   0 0002AE  BB80 0000 0004  01   ARRAY_BOUND_EXC*LAB,B3   +4
          0 0002B1  CBF0 0100                            LAB,B4   256,IMO
          0 0002B3  E380 0000 0000  xent                 LNJ,B6   QCE$ERROR
          0 0002B6       0001                            DC       s:17673,PREL

      440    17671
      441    17672    1   ARRAY_BOUND_INSUFFICIENT:
      442    17673    1       CALL QCE$ERROR ( %E$SUBSCRIPT_ZERO );

  17673   0 0002B7  BB80 0000 0007  01   ARRAY_BOUND_INS*LAB,B3   +7
          0 0002BA  CBF0 0100                            LAB,B4   256,IMO
          0 0002BC  E380 0000 0000  xent                 LNJ,B6   QCE$ERROR
          0 0002BF       0001                            DC       s:17673+9,PREL
          0 0002C0  0F81 00D9                            B        s:17895,PREL

      443    17674
      444    17675        %EJECT;
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:50   
      445    17676    1   EVALUATE_SUBSCRIPT: PROC ALTRET;

  17676   0 0002C2  EFC7 002A            EVALUATE_SUBSCR*STB,B6   U2+4,AUTO

      446    17677
      447    17678        /*I*  NAME:         EVALUATE_SUBSCRIPT
      448    17679              PURPOSE:      Translate a QI$OP_SUBSCR.SUBSCRIPT_A@P to BINARY.
      449    17680              CALL:         CALL EVALUATE_SUBSCRIPT;
      450    17681              PARAMETERS:   None.
      451    17682              DATA:         QI_1,
      452    17683                            SUBSCRIPT_INDEX from above.
      453    17684              DESCRIPTION:  Convert the DAD's subscripting value,
      454    17685                            e.g., "3" for "MOVE A ( 3 ) TO B.",
      455    17686                            to BINARY so's we can use it to index into the data
      456    17687                            corresponding to "A" to find where "A ( 3 )" really starts.
      457    17688        */
      458    17689
      459    17690          %QI@OTTER_SPACE;
      460    17718
      461    17719            %PROC_ADDRESS ( THING@P =
             17719                "QI_1.INSTR$ -> QI$OP_SUBSCR.SUBSCRIPT_A@P ( SUBSCRIPT_INDEX )",
      462    17720                            CHECK_FOR_INDIRECTION = YES,
      463    17721                            RESULT$ = SUBSCRIPT$ );

  17739   0 0002C4  DC80 0000 0006  xsym                 LDB,B5   QI_1+6
          0 0002C7  B847 0022                            LDR,R3   SUBSCRIPT_INDEX,AUTO
          0 0002C9  3E02                                 ADV,R3   2
          0 0002CA  A835                                 LDR,R2   ,B5,R3
          0 0002CB  F852                                 LDR,R7   R2
          0 0002CC  6C00                                 LDV,R6   0
          0 0002CD  8400 0000 0002  xsym                 AID      QI_1+2
          0 0002D0  8D47 001D                            SDI      SUBSCRIPT$,AUTO

  17741   0 0002D2  CCC7 001D                            LDB,B4   SUBSCRIPT$,AUTO
          0 0002D4  8984                                 CMZ      ,B4
          0 0002D5  0881 0019                            BAGE     s:17759,PREL

PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:51   
  17742   0 0002D7  ECC7 001D                            LDB,B6   SUBSCRIPT$,AUTO
          0 0002D9  E806                                 LDR,R6   ,B6
          0 0002DA  6046                                 SOR,R6   6
          0 0002DB  E570 0001                            AND,R6   1,IMO
          0 0002DD  B846 0002                            LDR,R3   2,B6
          0 0002DF  A856                                 LDR,R2   R6
          0 0002E0  DCA0 0000 0000  xsym                 LDB,B5   QI_1,R2
          0 0002E3  DFC7 0034                            STB,B5   QI@OTTER_SPACE+8,AUTO
          0 0002E5  F853                                 LDR,R7   R3
          0 0002E6  6C00                                 LDV,R6   0
          0 0002E7  8447 0034                            AID      QI@OTTER_SPACE+8,AUTO
          0 0002E9  8D47 001D                            SDI      SUBSCRIPT$,AUTO

  17746   0 0002EB  ECC7 001D                            LDB,B6   SUBSCRIPT$,AUTO
          0 0002ED  8986                                 CMZ      ,B6
          0 0002EE  0869                                 BAL      s:17742,SPREL

      464    17758
      465    17759    2       QI_1.OP.CIP.S_A (0) = SUBSCRIPT$ -> QI$DAD.PSEUDO_CIP_A (0);

  17759   0 0002EF  ECC7 001D                            LDB,B6   SUBSCRIPT$,AUTO
          0 0002F1  D846 0001                            LDR,R5   1,B6
          0 0002F3  DF00 0000 001A  xsym                 STR,R5   QI_1+26

      466    17760    2       QI_1.OP.CIP.S.AS = %QI#CIP_DEFAULT_AS;

  17760   0 0002F6  4C0B                                 LDV,R4   11
          0 0002F7  CA80 0000 001A  xsym                 SRM,R4,'007F'X    QI_1+26
          0 0002FA       007F

      467    17761
      468    17762    2       IF SUBSCRIPT$ -> QI$DAD.WORD0_FLAGS.IS_CONSTANT

  17762   0 0002FB  8286                                 LB,'0040'X        ,B6
  17762   0 0002FC       0040
          0 0002FD  0581 000D                            BBF      s:17824,PREL

PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:52   
      469    17763    2       THEN
      470    17764              %PROC_ADDRESS ( THING@P = "SUBSCRIPT$ -> QI$DAD.PSEUDO_CIP.DATA@",
      471    17765                CHECK_FOR_INDIRECTION = NO,
      472    17766                RESULT$ = "QI_1.OP.DATA.S$" );

  17784   0 0002FF  B846 0002                            LDR,R3   2,B6
          0 000301  F853                                 LDR,R7   R3
          0 000302  6C00                                 LDV,R6   0
          0 000303  8400 0000 0002  xsym                 AID      QI_1+2
          0 000306  8D00 0000 0020  xsym                 SDI      QI_1+32

  17793   0 000309  0F81 000B                            B        s:17844,PREL

      473    17803    2       ELSE
      474    17804              %DATA_ADDRESS ( THING@D = "SUBSCRIPT$ -> QI$DAD.PSEUDO_CIP.DATA@",
      475    17805                CHECK_FOR_INDIRECTION = NO,
      476    17806                RESULT$ = "QI_1.OP.DATA.S$" );

  17824   0 00030B  B846 0002                            LDR,R3   2,B6
          0 00030D  F853                                 LDR,R7   R3
          0 00030E  6C00                                 LDV,R6   0
          0 00030F  8400 0000 0000  xsym                 AID      QI_1
          0 000312  8D00 0000 0020  xsym                 SDI      QI_1+32

      477    17843
      478    17844    3       DO SELECT ( SUBSCRIPT$ -> QI$DAD.WORD0_FLAGS.TYPE );

  17844   0 000315  D806                                 LDR,R5   ,B6
          0 000316  D570 000F                            AND,R5   15,IMO
          0 000318  D970 0001                            CMR,R5   1,IMO
          0 00031A  0201 0008                            BL       s:17844+14,PREL
          0 00031C  0901 000C                            BE       s:17849,PREL
          0 00031E  5D02                                 CMV,R5   2
          0 00031F  0981 0072                            BNE      s:17889,PREL
          0 000321  0F81 0028                            B        s:17863,PREL
          0 000323  8286                                 LB,'000F'X        ,B6
          0 000324       000F
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:53   
          0 000325  0581 0003                            BBF      s:17849,PREL
          0 000327  0F81 006A                            B        s:17889,PREL

      479    17845
      480    17846    3         SELECT ( %QI#TYPE_DISPLAY, %QI#TYPE_PACKED );

      481    17847                /* We're going from DISPLAY or PACKED to BINARY:
      482    17848                   lucky us.  Just do the conversion.  */
      483    17849    3         QI_1.OP.CIP.T_A (0) = QI_16_BIT_BINARY_A (0);

  17849   0 000329  A800 0000 0000  xsym                 LDR,R2   QI_16_BIT_BINARY
          0 00032C  AF00 0000 001C  xsym                 STR,R2   QI_1+28

      484    17850    3         QI_1.OP.DEC.T = 0;

  17850   0 00032F  8700 0000 002A  xsym                 CL       QI_1+42

      485    17851    3         QI_1.OP.DATA.T$ = ADDR ( SUBSCRIPT_A ( SUBSCRIPT_INDEX ) );

  17851   0 000332  9847 0022                            LDR,R1   SUBSCRIPT_INDEX,AUTO
          0 000334  1E1F                                 ADV,R1   31
          0 000335  DB97                                 LAB,B5   ,AUTO,R1
          0 000336  DF80 0000 0022  xsym                 STB,B5   QI_1+34

      486    17852
      487    17853    3         CALL QCC$CDB ( QI_1.OP )

  17853   0 000339  BB80 0000 0009  01                   LAB,B3   +9
          0 00033C  CBF0 0100                            LAB,B4   256,IMO
          0 00033E  E380 0000 0000  xent                 LNJ,B6   QCC$CDB
          0 000341       0003                            DC       s:17855,PREL
          0 000342  0F81 0005                            B        s:17855+4,PREL

      488    17854    4         WHENALTRETURN DO;

      489    17855    4             ALTRETURN;

PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:54   
  17855   0 000344  ECC7 002A                            LDB,B6   U2+4,AUTO
          0 000346  B806                                 LDR,R3   ,B6
          0 000347  C3B6                                 LNJ,B4   ,B6,R3
          0 000348  0F81 0049                            B        s:17889,PREL

      490    17856    4           END;
      491    17857
      492    17858    3         SELECT ( %QI#TYPE_BINARY );

      493    17859                /* We've got a BINARY source, but it might be too
      494    17860                   long or too big or offset within the word or...
      495    17861                   so we'll just do an intermediate operation to
      496    17862                   make it PACKED, then make it BINARY again.  */
      497    17863    3         QI_1.OP.CIP.T_A (0) = QI_31_DIGIT_ST_PACKED_A (0);

  17863   0 00034A  A800 0000 0000  xsym                 LDR,R2   QI_31_DIGIT_ST_PACKED
          0 00034D  AF00 0000 001C  xsym                 STR,R2   QI_1+28

      498    17864    3         QI_1.OP.DEC.T = 0;

  17864   0 000350  8700 0000 002A  xsym                 CL       QI_1+42

      499    17865    3         QI_1.OP.DATA.T$ = ADDR ( QI@OTTER_SPACE );

  17865   0 000353  DBC7 002C                            LAB,B5   QI@OTTER_SPACE,AUTO
          0 000355  DF80 0000 0022  xsym                 STB,B5   QI_1+34

      500    17866
      501    17867    3         CALL QCC$CBD ( QI_1.OP )

  17867   0 000358  BB80 0000 0009  01                   LAB,B3   +9
          0 00035B  CBF0 0100                            LAB,B4   256,IMO
          0 00035D  E380 0000 0000  xent                 LNJ,B6   QCC$CBD
          0 000360       0003                            DC       s:17869,PREL
          0 000361  0F81 0005                            B        s:17872,PREL

      502    17868    4         WHENALTRETURN DO;
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:55   

      503    17869    4             ALTRETURN;

  17869   0 000363  ECC7 002A                            LDB,B6   U2+4,AUTO
          0 000365  B806                                 LDR,R3   ,B6
          0 000366  C3B6                                 LNJ,B4   ,B6,R3

      504    17870    4           END;
      505    17871
      506    17872    3         QI_1.OP.CIP.S_A (0) = QI_1.OP.CIP.T_A (0);

  17872   0 000367  E800 0000 001C  xsym                 LDR,R6   QI_1+28
          0 00036A  EF00 0000 001A  xsym                 STR,R6   QI_1+26

      507    17873    3         QI_1.OP.DEC.S = 0;

  17873   0 00036D  8700 0000 0029  xsym                 CL       QI_1+41

      508    17874    3         QI_1.OP.DATA.S$ = QI_1.OP.DATA.T$;

  17874   0 000370  EC80 0000 0022  xsym                 LDB,B6   QI_1+34
          0 000373  EF80 0000 0020  xsym                 STB,B6   QI_1+32

      509    17875
      510    17876    3         QI_1.OP.CIP.T_A (0) = QI_16_BIT_BINARY_A (0);

  17876   0 000376  E800 0000 0000  xsym                 LDR,R6   QI_16_BIT_BINARY
          0 000379  EF00 0000 001C  xsym                 STR,R6   QI_1+28

      511    17877    3         QI_1.OP.DATA.T$ = ADDR ( SUBSCRIPT_A ( SUBSCRIPT_INDEX ) );

  17877   0 00037C  B847 0022                            LDR,R3   SUBSCRIPT_INDEX,AUTO
          0 00037E  3E1F                                 ADV,R3   31
          0 00037F  DBB7                                 LAB,B5   ,AUTO,R3
          0 000380  DF80 0000 0022  xsym                 STB,B5   QI_1+34

      512    17878
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:56   
      513    17879    3         CALL QCC$CDB ( QI_1.OP )

  17879   0 000383  BB80 0000 0009  01                   LAB,B3   +9
          0 000386  CBF0 0100                            LAB,B4   256,IMO
          0 000388  E380 0000 0000  xent                 LNJ,B6   QCC$CDB
          0 00038B       0003                            DC       s:17881,PREL
          0 00038C  0F81 0005                            B        s:17889,PREL

      514    17880    4         WHENALTRETURN DO;

      515    17881    4             ALTRETURN;

  17881   0 00038E  ECC7 002A                            LDB,B6   U2+4,AUTO
          0 000390  B806                                 LDR,R3   ,B6
          0 000391  C3B6                                 LNJ,B4   ,B6,R3

      516    17882    4           END;
      517    17883
      518    17884    3       END;

      519    17885
      520    17886            /* Oh, yeah.  COBOL-like rules say that element (1) of an
      521    17887               array is the foist, but PL6 says element (0) is.
      522    17888               Fudge it.  */
      523    17889    2       SUBSCRIPT_A ( SUBSCRIPT_INDEX ) = SUBSCRIPT_A ( SUBSCRIPT_INDEX ) - 1;

  17889   0 000392  B847 0022                            LDR,R3   SUBSCRIPT_INDEX,AUTO
          0 000394  3E1F                                 ADV,R3   31
          0 000395  88B7                                 DEC      ,AUTO,R3

      524    17890
      525    17891    2       RETURN;

  17891   0 000396  ECC7 002A                            LDB,B6   U2+4,AUTO
          0 000398  C3C6 0001                            LNJ,B4   1,B6

      526    17892
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:57   
      527    17893    2   END EVALUATE_SUBSCRIPT;
      528    17894
      529    17895    1   END QBS$SUBSCRIPT;

  17895   0 00039A  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:58   
--  Include file information  --

   QI_MACROS_M.:E05TOU  is referenced.
   QI_PERR_C.:E05TOU  is referenced.
   QI_EQUATES_E.:E05TOU  is referenced.
   QG_MACRO_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure QBS$SUBSCRIPT.
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:59   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 ARRAY_DESCRIPTOR$          6-0-0/w UBIN(16)    r     1 ARRAY_OFFSET
     7-0-0/w PTR         r     1 ARRAY_SOURCE$              9-0-0/w PTR         r     1 ARRAY_SOURCE_STATUS$
     B-0-0/w UBIN(32)    r     1 BYTE_DISPLACEMENT          D-0-0/w PTR         r     1 DIMENSION$
     F-0-0/w UBIN(16)    r     1 DIMENSION_COUNT           10-0-0/w PTR         r     1 DUMMY_RESULT$
    12-0-0/w PTR         r     1 DUMMY_RESULT_DESCRIPTOR$
    14-0-0/w PTR         r     1 DUMMY_RESULT_STATUS$
    16-0-0/w UBIN(32)    r     1 INTERMEDIATE_32_BIT_RESULT
    18-0-0/w PTR         r     1 PRESENCE$                 1A-0-0/w UBIN(16)    r     1 PRESENCE_INDEX
    1B-0-0/w UBIN(16)    r     1 P_ITEM_INDEX              2C-0-0/w STRC(128)   r     1 QI@OTTER_SPACE
    1C-0-0/w SBIN(16)    r     1 REPEATS_INDEX             1D-0-0/w PTR         r     1 SUBSCRIPT$
    1F-0-0/w UBIN(16)    r     1 SUBSCRIPT_A(0:2)
    22-0-0/w UBIN(16)    r     1 SUBSCRIPT_INDEX           23-0-0/c STRC(48)    r     1 U1
    26-0-0/c STRC(48)    r     1 U2

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(2576)  r     1 QI_1                       0-0-0/d STRC(32)    r     1 QI_16_BIT_BINARY
     0-0-0/d UBIN(16)    r     1 QI_16_BIT_BINARY_A(0:1)
     0-0-0/d STRC(32)    r     1 QI_31_DIGIT_ST_PACKED
     0-0-0/d UBIN(16)    r     1 QI_31_DIGIT_ST_PACKED_A(0:1)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(16)    r     1 QI$AREA_A@(0:0)
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:60   
     0-0-0/w STRC        r     1 QI$BITS                    0-0-0/w STRC(192)   r     1 QI$COBOL_DAD
     0-0-0/w STRC(48)    r     1 QI$COBOL_DAD_P_ITEMS       0-0-0/w STRC(48)    r     1 QI$DAD
     0-0-0/w STRC(384)   r     1 QI$FIELD_DAD               0-0-0/w STRC(112)   r     1 QI$FIELD_DAD_P
     0-0-0/w STRC(48)    r     1 QI$FIELD_STATUS
     0-0-0/w STRC(32)    r     1 QI$LINKAGE_ARGUMENT_DESCRIPTOR
     0-0-0/w STRC(128)   r     1 QI$MINOR_NODE              0-0-0/w STRC(80)    r     1 QI$OP_SUBSCR
     0-0-0/c ASTR(8)     r     1 QI$VARIABLE_IDENTIFIER


   Procedure QBS$SUBSCRIPT requires 925 words for executable code.
   Procedure QBS$SUBSCRIPT requires 58 words of local(AUTO) storage.

    No errors detected in file QBS$SUBSCRIPT.:E05TSI    .
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:61   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:62   
          MINI XREF LISTING

ARRAY_BOUND_EXCEEDED
     17657**LABEL   17231--GOTO
ARRAY_BOUND_EXCEEDED_SHEESH
     17670**LABEL   17158--CALLALT
ARRAY_BOUND_INSUFFICIENT
     17673**LABEL   17219--GOTO
ARRAY_DESCRIPTOR$
     17083**DCL     17326<<ASSIGN  17346>>ASSIGN  17644>>ASSIGN
ARRAY_OFFSET
     17084**DCL     17484<<ASSIGN  17531<<ASSIGN  17589<<ASSIGN  17593<<ASSIGN  17593>>ASSIGN  17600>>ASSIGN
ARRAY_SOURCE$
     17085**DCL     17133<<ASSIGN  17135>>DOWHILE 17136<<ASSIGN  17136>>ASSIGN  17136>>ASSIGN  17153>>ASSIGN
     17154>>ASSIGN  17204>>ASSIGN  17205>>ASSIGN  17207>>IF      17209>>ASSIGN  17211>>ASSIGN  17301>>IF
     17301>>IF      17326>>ASSIGN  17346>>ASSIGN  17370>>ASSIGN  17370>>ASSIGN  17390>>IF      17395>>ASSIGN
     17397>>ASSIGN  17399>>ASSIGN  17401>>ASSIGN  17403>>ASSIGN  17405>>ASSIGN  17410>>ASSIGN  17461>>ASSIGN
     17487>>IF      17517>>IF      17531>>ASSIGN  17561<<ASSIGN  17561>>ASSIGN  17563>>DOWHILE 17564<<ASSIGN
     17564>>ASSIGN  17564>>ASSIGN  17581>>IF      17583>>IF      17589>>ASSIGN  17613>>ASSIGN  17619>>IF
     17633>>IF
ARRAY_SOURCE_STATUS$
     17086**DCL     17461<<ASSIGN  17600>>ASSIGN
BYTE_DISPLACEMENT
     17087**DCL     17213<<ASSIGN  17249<<ASSIGN  17249>>ASSIGN  17346<<ASSIGN  17346>>ASSIGN  17352>>IF
     17358>>ASSIGN  17370<<ASSIGN  17370>>ASSIGN  17376>>IF      17382>>ASSIGN  17384>>ASSIGN  17646>>ASSIGN
DIMENSION$
     17088**DCL     17209<<ASSIGN  17211<<ASSIGN  17228>>IF      17238>>ASSIGN  17662>>CALLBLT
DIMENSION_COUNT
     17089**DCL     17154<<ASSIGN  17156>>DOINDEX 17184>>ASSIGN  17215>>DOINDEX 17410>>ASSIGN  17481>>DOCASE
     17613>>ASSIGN  17652>>ASSIGN
DUMMY_RESULT$
     17090**DCL     17184<<ASSIGN  17186>>DOWHILE 17187<<ASSIGN  17187>>ASSIGN  17187>>ASSIGN  17204>>ASSIGN
     17205>>ASSIGN  17358>>ASSIGN  17365>>ASSIGN  17382>>ASSIGN  17384>>ASSIGN  17388>>ASSIGN  17395>>ASSIGN
     17397>>ASSIGN  17399>>ASSIGN  17401>>ASSIGN  17403>>ASSIGN  17405>>ASSIGN  17419>>ASSIGN  17426>>ASSIGN
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:63   
     17429>>ASSIGN  17434>>ASSIGN  17437>>ASSIGN  17622>>ASSIGN  17637>>ASSIGN  17640>>ASSIGN
DUMMY_RESULT_DESCRIPTOR$
     17091**DCL     17637<<ASSIGN  17640>>ASSIGN  17644>>ASSIGN  17646>>ASSIGN
DUMMY_RESULT_STATUS$
     17092**DCL     17434<<ASSIGN  17437>>ASSIGN  17600>>ASSIGN  17604>>ASSIGN  17604>>ASSIGN
EVALUATE_SUBSCRIPT
     17676**PROC    17158--CALL
FIND_NEAREST_REPEATED_MINOR
     17539**LABEL   17585--EXIT
INTERMEDIATE_32_BIT_RESULT
     17093**DCL     17238<<ASSIGN  17243>>IF      17249>>ASSIGN
PRESENCE$
     17094**DCL     17410<<ASSIGN  17416>>IF      17419>>ASSIGN  17426>>ASSIGN  17429>>ASSIGN  17613<<ASSIGN
     17622>>ASSIGN
PRESENCE_INDEX
     17095**DCL     17414<<DOINDEX 17416>>IF      17516<<DOINDEX 17517>>IF      17617<<DOINDEX 17619>>IF
P_ITEM_INDEX
     17096**DCL     17411<<ASSIGN  17419>>ASSIGN  17419>>ASSIGN  17421<<ASSIGN  17421>>ASSIGN  17434>>ASSIGN
     17614<<ASSIGN  17622>>ASSIGN  17622>>ASSIGN  17624<<ASSIGN  17624>>ASSIGN  17637>>ASSIGN
QCC$CBD
     17108**DCL-ENT 17867--CALL
QCC$CDB
     17109**DCL-ENT 17853--CALL    17879--CALL
QCE$ERROR
     17110**DCL-ENT 17665--CALL    17670--CALL    17673--CALL
QCE$ERROR_INTERNAL
     17111**DCL-ENT 17245--CALL    17354--CALL    17378--CALL
QGB_PARAM.DVE.DVBYTE.VFC
     11566**DCL     11567--REDEF
QGB_PARAM.DVE.EOMCHAR
     11578**DCL     11579--REDEF
QGB_PARAM.MSG$
     11560**DCL     11561--REDEF
QGB_PARAM.UHDR$
     11585**DCL     11586--REDEF
QI$ACTIVATION_STATUS
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:64   
      9324**DCL      9330--REDEF
QI$AREA_A@
     11657**DCL     17228>>IF      17238>>ASSIGN  17662>>CALLBLT
QI$BITS.BIT_A
     11659**DCL     17517>>IF
QI$CIP
      8165**DCL      8235--REDEF
QI$CIP.CA
      8170**DCL      8174--REDEF    8177--REDEF    8180--REDEF
QI$COBOL_DAD.ELEMENTARY_ITEM.P_ITEM_A
      8462**DCL     17622<<ASSIGN  17637--ASSIGN
QI$COBOL_DAD.PSEUDO_CIP
      8409**DCL      8434--REDEF
QI$COBOL_DAD.PSEUDO_CIP.ALPHANUMERIC
      8411**DCL      8416--REDEF
QI$COBOL_DAD.PSEUDO_CIP.ALPHANUMERIC.CA.OFFSET
      8413**DCL     17346>>ASSIGN  17358<<ASSIGN
QI$COBOL_DAD.PSEUDO_CIP.DATA@
      8433**DCL     17326>>ASSIGN  17640<<ASSIGN
QI$COBOL_DAD.PSEUDO_CIP.NUMERIC.CB
      8417**DCL      8420--REDEF    8423--REDEF
QI$COBOL_DAD.P_A
      8388**DCL     17619>>IF
QI$COBOL_DAD.VARIABLE_LENGTH_ITEMS
      8445**DCL      8461--REDEF    8469--REDEF    8477--REDEF
QI$COBOL_DAD.VARIABLE_LENGTH_ITEMS.LEVEL_MULTIPLIERS
      8446**DCL      8456--REDEF    8459--REDEF   17211--ASSIGN
QI$COBOL_DAD.VARIABLE_LENGTH_ITEMS.LEVEL_MULTIPLIER_A
      8456**DCL     17613--ASSIGN
QI$COBOL_DAD.WORD0
      8373**DCL      8374--REDEF    8388--REDEF
QI$COBOL_DAD.WORD0_FLAGS.IS_CONSTANT
      8385**DCL     17365<<ASSIGN
QI$COBOL_DAD.WORD0_FLAGS.IS_LINKAGE_ARGUMENT
      8380**DCL     17301>>IF      17633>>IF
QI$COBOL_DAD_P_BITS.P
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:65   
      8513**DCL      8519--REDEF
QI$COBOL_DAD_P_ITEMS.P_ITEM_A
      8548**DCL     17622>>ASSIGN
QI$CONDITION_CONTROL_BLOCK.LIST_A@P
      7999**DCL      8000--REDEF
QI$CONDITION_CONTROL_BLOCK.WORD0_FLAGS
      7995**DCL      7998--REDEF
QI$CONDITION_LEGAL_BLOCK.ARRAY@P
      8032**DCL      8033--REDEF    8034--REDEF
QI$DAD.PSEUDO_CIP
      8312**DCL      8337--REDEF
QI$DAD.PSEUDO_CIP.ALPHANUMERIC
      8314**DCL      8319--REDEF
QI$DAD.PSEUDO_CIP.ALPHANUMERIC.CA.OFFSET
      8316**DCL     17370>>ASSIGN  17382<<ASSIGN
QI$DAD.PSEUDO_CIP.DATA@
      8336**DCL     17136>>ASSIGN  17187>>ASSIGN  17370>>ASSIGN  17384<<ASSIGN  17564>>ASSIGN  17742>>ASSIGN
     17784>>ASSIGN  17824>>ASSIGN
QI$DAD.PSEUDO_CIP.NUMERIC.CB
      8320**DCL      8323--REDEF    8326--REDEF
QI$DAD.PSEUDO_CIP_A
      8337**DCL     17205<<ASSIGN  17205>>ASSIGN  17759>>ASSIGN
QI$DAD.WORD0
      8281**DCL      8282--REDEF   17204<<ASSIGN  17204>>ASSIGN
QI$DAD.WORD0_FLAGS.DIMENSION_COUNT
      8289**DCL     17154>>ASSIGN  17388<<ASSIGN
QI$DAD.WORD0_FLAGS.INDIRECT
      8283**DCL     17135>>DOWHILE 17186>>DOWHILE 17563>>DOWHILE 17741>>DOWHILE
QI$DAD.WORD0_FLAGS.IS_CONSTANT
      8288**DCL     17136>>ASSIGN  17187>>ASSIGN  17564>>ASSIGN  17742>>ASSIGN  17762>>IF
QI$DAD.WORD0_FLAGS.IS_FORM_VARIABLE
      8287**DCL     17207>>IF      17301>>IF      17390>>IF
QI$DAD.WORD0_FLAGS.TYPE
      8290**DCL     17844>>DOSELCT
QI$ERROR_MESSAGE_LINE
     11673**DCL     11675--REDEF
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:66   
QI$ERROR_STATUS
     11670**DCL     11672--REDEF
QI$FIELD_DAD.BROTHER@P
      8692**DCL     17397<<ASSIGN  17397>>ASSIGN
QI$FIELD_DAD.ELEMENTARY_ITEM.CLASS_TYPE
      8736**DCL     17429<<ASSIGN
QI$FIELD_DAD.ELEMENTARY_ITEM.P
      8727**DCL      8734--REDEF   17426<<ASSIGN
QI$FIELD_DAD.ELEMENTARY_ITEM.P_ITEM_A
      8737**DCL     17419<<ASSIGN  17434--ASSIGN
QI$FIELD_DAD.FATHER@P
      8694**DCL     17399<<ASSIGN  17399>>ASSIGN  17561>>ASSIGN
QI$FIELD_DAD.IDENTIFIER@P
      8698**DCL     17401<<ASSIGN  17401>>ASSIGN
QI$FIELD_DAD.ONE_DIMENSIONAL_ITEM.P
      8747**DCL      8754--REDEF
QI$FIELD_DAD.PICTURE_STRING@P
      8690**DCL     17395<<ASSIGN  17395>>ASSIGN
QI$FIELD_DAD.POSITION
      8700**DCL     17403<<ASSIGN  17403>>ASSIGN
QI$FIELD_DAD.PSEUDO_CIP
      8654**DCL      8679--REDEF
QI$FIELD_DAD.PSEUDO_CIP.ALPHANUMERIC
      8656**DCL      8661--REDEF
QI$FIELD_DAD.PSEUDO_CIP.NUMERIC.CB
      8662**DCL      8665--REDEF    8668--REDEF
QI$FIELD_DAD.STATUS_AREA@D
      8696**DCL     17437<<ASSIGN  17461>>ASSIGN
QI$FIELD_DAD.TWO_DIMENSIONAL_ITEM.P
      8767**DCL      8774--REDEF   17517--IF
QI$FIELD_DAD.TWO_DIMENSIONAL_ITEM.P.REPEATS
      8772**DCL     17487>>IF
QI$FIELD_DAD.TWO_DIMENSIONAL_ITEM.P_ITEM_A
      8777**DCL     17531>>ASSIGN
QI$FIELD_DAD.VARIABLE_LENGTH_ITEMS
      8710**DCL      8726--REDEF    8744--REDEF    8762--REDEF
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:67   
QI$FIELD_DAD.VARIABLE_LENGTH_ITEMS.LEVEL_MULTIPLIERS
      8711**DCL      8721--REDEF    8724--REDEF   17209--ASSIGN
QI$FIELD_DAD.VARIABLE_LENGTH_ITEMS.LEVEL_MULTIPLIER_A
      8721**DCL     17410--ASSIGN
QI$FIELD_DAD.VISUAL_ATTRIBUTE
      8708**DCL     17405<<ASSIGN  17405>>ASSIGN
QI$FIELD_DAD.WORD0
      8606**DCL      8607--REDEF
QI$FIELD_DAD.WORD0_FLAGS.IO_FLAGS
      8610**DCL      8615--REDEF
QI$FIELD_DAD.WORD0_FLAGS.TYPE
      8632**DCL     17581>>IF
QI$FIELD_DAD_P.CLASS_TYPE
      8817**DCL     17429>>ASSIGN
QI$FIELD_DAD_P.P
      8808**DCL      8815--REDEF   17426>>ASSIGN
QI$FIELD_DAD_P.P_A
      8815**DCL     17416>>IF
QI$FIELD_DAD_P.P_ITEM_A
      8818**DCL     17419>>ASSIGN
QI$FIELD_STATUS.GZ.FIELD_START_INDEX
      9450**DCL     17600<<ASSIGN  17600>>ASSIGN  17604>>ASSIGN
QI$FIELD_STATUS.GZ.FIELD_STOP_INDEX
      9452**DCL     17604<<ASSIGN
QI$FIELD_STATUS.INDICATORS
      9474**DCL      9506--REDEF
QI$FIELD_STATUS.INDICATORS.ENABLED_FLAGS
      9478**DCL      9483--REDEF
QI$FIELD_STATUS.INDICATORS.OPEN_FLAGS
      9490**DCL      9497--REDEF
QI$FIELD_STATUS.INDICATORS.STATE_FLAGS
      9484**DCL      9489--REDEF
QI$FILE.WORD0
      8930**DCL      8931--REDEF
QI$FILE_STATUS.INDICATORS
      9767**DCL      9799--REDEF
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:68   
QI$FILE_STATUS.INDICATORS.ENABLED_FLAGS
      9771**DCL      9776--REDEF
QI$FILE_STATUS.INDICATORS.OPEN_FLAGS
      9783**DCL      9790--REDEF
QI$FILE_STATUS.INDICATORS.STATE_FLAGS
      9777**DCL      9782--REDEF
QI$FORM_FILE.USE_PROCEDURE
      9030**DCL      9037--REDEF
QI$FORM_FILE.WORD0
      8984**DCL      8985--REDEF
QI$FORM_STATUS.INDICATORS
      9888**DCL      9920--REDEF
QI$FORM_STATUS.INDICATORS.ENABLED_FLAGS
      9892**DCL      9897--REDEF
QI$FORM_STATUS.INDICATORS.OPEN_FLAGS
      9904**DCL      9911--REDEF
QI$FORM_STATUS.INDICATORS.STATE_FLAGS
      9898**DCL      9903--REDEF
QI$FRAME.WORD0
      9145**DCL      9146--REDEF
QI$FRAME_STATUS.INDICATORS
     10117**DCL     10149--REDEF
QI$FRAME_STATUS.INDICATORS.ENABLED_FLAGS
     10121**DCL     10126--REDEF
QI$FRAME_STATUS.INDICATORS.OPEN_FLAGS
     10133**DCL     10140--REDEF
QI$FRAME_STATUS.INDICATORS.STATE_FLAGS
     10127**DCL     10132--REDEF
QI$GZ_FIELD.DESCRIPTION.IO_FLAGS
     16999**DCL     17004--REDEF
QI$IDENTIFIER
     11676**DCL     11678--REDEF
QI$INDICATORS
      9388**DCL      9418--REDEF
QI$INDICATORS.ENABLED_FLAGS
      9394**DCL      9399--REDEF
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:69   
QI$INDICATORS.OPEN_FLAGS
      9406**DCL      9413--REDEF
QI$INDICATORS.STATE_FLAGS
      9400**DCL      9405--REDEF
QI$LINKAGE_ARGUMENT_DESCRIPTOR.ARGUMENT_NUMBER
      8574**DCL     17644<<ASSIGN  17644>>ASSIGN
QI$LINKAGE_ARGUMENT_DESCRIPTOR.WORD_OFFSET_FROM_01_ITEM
      8578**DCL     17346>>ASSIGN  17646<<ASSIGN
QI$MAJOR_NODE.WORD0
      8844**DCL      8845--REDEF
QI$MAJOR_STATUS.INDICATORS
      9567**DCL      9599--REDEF
QI$MAJOR_STATUS.INDICATORS.ENABLED_FLAGS
      9571**DCL      9576--REDEF
QI$MAJOR_STATUS.INDICATORS.OPEN_FLAGS
      9583**DCL      9590--REDEF
QI$MAJOR_STATUS.INDICATORS.STATE_FLAGS
      9577**DCL      9582--REDEF
QI$MESSAGE_TYPE
     11667**DCL     11669--REDEF
QI$MINOR_NODE.REPEATS
      8897**DCL     17583>>IF      17589>>ASSIGN
QI$MINOR_NODE.WORD0
      8887**DCL      8888--REDEF
QI$MINOR_STATUS.INDICATORS
      9660**DCL      9692--REDEF
QI$MINOR_STATUS.INDICATORS.ENABLED_FLAGS
      9664**DCL      9669--REDEF
QI$MINOR_STATUS.INDICATORS.OPEN_FLAGS
      9676**DCL      9683--REDEF
QI$MINOR_STATUS.INDICATORS.STATE_FLAGS
      9670**DCL      9675--REDEF
QI$OP_ACCEPT.DATANAME@P
      6075**DCL      6076--REDEF
QI$OP_CALL.EPTR$
      6247**DCL      6248--REDEF
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:70   
QI$OP_CLEAR.IO_FLAGS
      6280**DCL      6283--REDEF
QI$OP_DISPLAY.FIELD_A@P
      6547**DCL      6548--REDEF
QI$OP_ENABLE.IO_FLAGS
      6634**DCL      6637--REDEF
QI$OP_IFCLS.ATTRIBUTE.TYPE
      6727**DCL      6732--REDEF
QI$OP_INSPECT.TALLYING_FOR_ITEM@P
      6961**DCL      6962--REDEF
QI$OP_INSPECT.TALLYING_INITIAL_ITEM@P
      6963**DCL      6964--REDEF
QI$OP_INSPECT.TALLYING_ITEM@P
      6959**DCL      6960--REDEF
QI$OP_OPEN.IO_FLAGS
      7521**DCL      7524--REDEF
QI$OP_PERFM.BINARY_ITERATION_COUNT@P
      7559**DCL      7560--REDEF
QI$OP_SUBSCR.ARRAY_SOURCE@P
      7794**DCL     17133>>ASSIGN
QI$OP_SUBSCR.SUBSCRIPT_A@P
      7795**DCL     17184>>ASSIGN  17739>>ASSIGN
QI$PSEUDO_CIP
      8060**DCL      8084--REDEF
QI$PSEUDO_CIP.ALPHANUMERIC
      8064**DCL      8069--REDEF
QI$PSEUDO_CIP.NUMERIC.CB
      8070**DCL      8073--REDEF    8076--REDEF
QI$TERMINAL_ATTRIBUTES
      9281**DCL      9294--REDEF
QI$TRAN_FILE.WORD0
      9066**DCL      9067--REDEF
QI$TRAN_STATUS.INDICATORS
     10001**DCL     10033--REDEF
QI$TRAN_STATUS.INDICATORS.ENABLED_FLAGS
     10005**DCL     10010--REDEF
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:71   
QI$TRAN_STATUS.INDICATORS.OPEN_FLAGS
     10017**DCL     10024--REDEF
QI$TRAN_STATUS.INDICATORS.STATE_FLAGS
     10011**DCL     10016--REDEF
QI$VARIABLE_IDENTIFIER.LENGTH
     11680**DCL     11681--IMP-SIZ
QI@OTTER_SPACE IN PROCEDURE EVALUATE_SUBSCRIPT
     17705**DCL     17707--REDEF   17708--REDEF   17865--ASSIGN
QI_1.BASE
     10209**DCL     10216--REDEF
QI_1.BASE.DATA$
     10210**DCL     17437>>ASSIGN  17461>>ASSIGN  17640>>ASSIGN  17824>>ASSIGN
QI_1.BASE.PROC$
     10212**DCL     17133>>ASSIGN  17184>>ASSIGN  17326>>ASSIGN  17561>>ASSIGN  17739>>ASSIGN  17784>>ASSIGN
QI_1.BASE_A$
     10216**DCL     17136>>ASSIGN  17187>>ASSIGN  17564>>ASSIGN  17742>>ASSIGN
QI_1.CURRENT.FILE$
     11100**DCL     11102--REDEF   11104--REDEF
QI_1.CURRENT.FILE_STATUS$
     11106**DCL     11108--REDEF   11110--REDEF
QI_1.DAD
     10904**DCL     10909--REDEF
QI_1.DAD.S$
     10906**DCL     17153<<ASSIGN
QI_1.FILE_HEAD
     11087**DCL     11094--REDEF
QI_1.INSTR$
     10217**DCL     17133>>ASSIGN  17184>>ASSIGN  17652<<ASSIGN  17652>>ASSIGN  17739>>ASSIGN
QI_1.IS_ALL_LIT
     10910**DCL     10915--REDEF
QI_1.IS_FORM_VARIABLE
     10916**DCL     10921--REDEF
QI_1.IS_TEMP
     10922**DCL     10927--REDEF
QI_1.MESSAGE_LINE_DAD.PSEUDO_CIP
     11020**DCL     11045--REDEF
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:72   
QI_1.MESSAGE_LINE_DAD.PSEUDO_CIP.ALPHANUMERIC
     11022**DCL     11027--REDEF
QI_1.MESSAGE_LINE_DAD.PSEUDO_CIP.NUMERIC.CB
     11028**DCL     11031--REDEF   11034--REDEF
QI_1.MESSAGE_LINE_DAD.WORD0
     10989**DCL     10990--REDEF
QI_1.OFFSET
     10928**DCL     10933--REDEF
QI_1.OP
     10287**DCL     17853<>CALL    17867<>CALL    17879<>CALL
QI_1.OP.CIP
     10289**DCL     10740--REDEF
QI_1.OP.CIP.AUX
     10655**DCL     10726--REDEF
QI_1.OP.CIP.AUX.CD
     10700**DCL     10703--REDEF   10707--REDEF   10710--REDEF
QI_1.OP.CIP.S
     10359**DCL     10430--REDEF
QI_1.OP.CIP.S.AS
     10424**DCL     17760<<ASSIGN
QI_1.OP.CIP.S.CD
     10404**DCL     10407--REDEF   10411--REDEF   10414--REDEF
QI_1.OP.CIP.S_A
     10430**DCL     17759<<ASSIGN  17872<<ASSIGN
QI_1.OP.CIP.T
     10507**DCL     10578--REDEF
QI_1.OP.CIP.T.CD
     10552**DCL     10555--REDEF   10559--REDEF   10562--REDEF
QI_1.OP.CIP.T_A
     10578**DCL     17849<<ASSIGN  17863<<ASSIGN  17872>>ASSIGN  17876<<ASSIGN
QI_1.OP.DATA
     10747**DCL     10751--REDEF
QI_1.OP.DATA.S$
     10748**DCL     17784<<ASSIGN  17824<<ASSIGN  17874<<ASSIGN
QI_1.OP.DATA.T$
     10749**DCL     17851<<ASSIGN  17865<<ASSIGN  17874>>ASSIGN  17877<<ASSIGN
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:73   
QI_1.OP.DEC.S
     10810**DCL     17873<<ASSIGN
QI_1.OP.DEC.T
     10811**DCL     17850<<ASSIGN  17864<<ASSIGN
QI_1.OP.FILL_CHAR
     10871**DCL     10874--REDEF
QI_1.OP.INX
     10804**DCL     10808--REDEF   10809--REDEF   10813--REDEF
QI_1.OP.LEN
     10787**DCL     10791--REDEF   10792--REDEF   10796--REDEF   10797--REDEF   10801--REDEF
QI_1.OP.LEN.AUX
     10790**DCL     11691--IMP-SIZ
QI_1.OP.LEN.S
     10788**DCL     11687--IMP-SIZ
QI_1.OP.LEN.T
     10789**DCL     11689--IMP-SIZ
QI_1.OP.PICTURE_STRING
     10857**DCL     10860--REDEF   10861--REDEF   10864--REDEF   10865--REDEF   10868--REDEF
QI_1.OP.ROUND
     10890**DCL     10891--REDEF   10892--REDEF
QI_1.OP.SRCH_VRFY_ELEMS
     10826**DCL     10829--REDEF
QI_1.OPENED_COUNT
     11095**DCL     11098--REDEF
QI_1.OTTER_SPACE
     10934**DCL     10939--REDEF
QI_1.PICTURE_STRING
     10940**DCL     10945--REDEF
QI_1.SPECIAL_NAMES
     11123**DCL     11132--REDEF
QI_1.TYPE
     10946**DCL     10951--REDEF
QI_16_BIT_BINARY
     16136**DCL     16206--REDEF
QI_16_BIT_BINARY.CB
     16155**DCL     16158--REDEF   16162--REDEF   16165--REDEF
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:74   
QI_16_BIT_BINARY_A
     16206**DCL     17849>>ASSIGN  17876>>ASSIGN
QI_31_DIGIT_SLS_DISPLAY
     15969**DCL     16039--REDEF
QI_31_DIGIT_SLS_DISPLAY.CD
     16016**DCL     16019--REDEF   16023--REDEF   16026--REDEF
QI_31_DIGIT_ST_PACKED
     16471**DCL     16541--REDEF
QI_31_DIGIT_ST_PACKED.CP
     16504**DCL     16507--REDEF   16511--REDEF   16514--REDEF
QI_31_DIGIT_ST_PACKED_A
     16541**DCL     17863>>ASSIGN
QI_32_BIT_BINARY
     16303**DCL     16373--REDEF
QI_32_BIT_BINARY.CB
     16322**DCL     16325--REDEF   16329--REDEF   16332--REDEF
QI_4_CHAR_ALPHANUMERIC
     15801**DCL     15871--REDEF
QI_4_CHAR_ALPHANUMERIC.CA
     15806**DCL     15810--REDEF   15813--REDEF   15816--REDEF
QI_ACCUMULATOR_DAD.CIP
     16814**DCL     16885--REDEF
QI_ACCUMULATOR_DAD.CIP.CP
     16845**DCL     16848--REDEF   16852--REDEF   16855--REDEF
QI_ALR.CIP
     11766**DCL     12217--REDEF
QI_ALR.CIP.AUX
     12132**DCL     12203--REDEF
QI_ALR.CIP.AUX.CA
     12135**DCL     12139--REDEF   12142--REDEF   12145--REDEF
QI_ALR.CIP.S
     11836**DCL     11907--REDEF
QI_ALR.CIP.S.CA
     11839**DCL     11843--REDEF   11846--REDEF   11849--REDEF
QI_ALR.CIP.T
     11984**DCL     12055--REDEF
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:75   
QI_ALR.CIP.T.CA
     11987**DCL     11991--REDEF   11994--REDEF   11997--REDEF
QI_ALR.DATA
     12224**DCL     12228--REDEF
QI_ALR.FILL_CHAR
     12348**DCL     12351--REDEF
QI_ALR.INX
     12281**DCL     12285--REDEF   12286--REDEF   12290--REDEF
QI_ALR.LEN
     12264**DCL     12268--REDEF   12269--REDEF   12273--REDEF   12274--REDEF   12278--REDEF
QI_ALR.PICTURE_STRING
     12334**DCL     12337--REDEF   12338--REDEF   12341--REDEF   12342--REDEF   12345--REDEF
QI_ALR.ROUND
     12367**DCL     12368--REDEF   12369--REDEF
QI_ALR.SRCH_VRFY_ELEMS
     12303**DCL     12306--REDEF
QI_MAT.CIP
     15105**DCL     15556--REDEF
QI_MAT.CIP.AUX
     15471**DCL     15542--REDEF
QI_MAT.CIP.AUX.CA
     15474**DCL     15478--REDEF   15481--REDEF   15484--REDEF
QI_MAT.CIP.S
     15175**DCL     15246--REDEF
QI_MAT.CIP.S.CA
     15178**DCL     15182--REDEF   15185--REDEF   15188--REDEF
QI_MAT.CIP.T
     15323**DCL     15394--REDEF
QI_MAT.CIP.T.CA
     15326**DCL     15330--REDEF   15333--REDEF   15336--REDEF
QI_MAT.DATA
     15563**DCL     15567--REDEF
QI_MAT.DEC
     15631**DCL     15635--REDEF   15636--REDEF   15640--REDEF
QI_MAT.FILL_CHAR
     15687**DCL     15690--REDEF
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:76   
QI_MAT.LEN
     15603**DCL     15607--REDEF   15608--REDEF   15612--REDEF   15613--REDEF   15617--REDEF
QI_MAT.PICTURE_STRING
     15673**DCL     15676--REDEF   15677--REDEF   15680--REDEF   15681--REDEF   15684--REDEF
QI_MAT.ROUND
     15706**DCL     15707--REDEF   15708--REDEF
QI_MAT.SRCH_VRFY_ELEMS
     15642**DCL     15645--REDEF
QI_PICTURE_STRING
     16639**DCL     16709--REDEF
QI_PICTURE_STRING.CA
     16644**DCL     16648--REDEF   16651--REDEF   16654--REDEF
QI_SRCH_VRFY.CIP
     14436**DCL     14887--REDEF
QI_SRCH_VRFY.CIP.AUX
     14802**DCL     14873--REDEF
QI_SRCH_VRFY.CIP.AUX.CA
     14805**DCL     14809--REDEF   14812--REDEF   14815--REDEF
QI_SRCH_VRFY.CIP.S
     14506**DCL     14577--REDEF
QI_SRCH_VRFY.CIP.S.CA
     14509**DCL     14513--REDEF   14516--REDEF   14519--REDEF
QI_SRCH_VRFY.CIP.T
     14654**DCL     14725--REDEF
QI_SRCH_VRFY.CIP.T.CA
     14657**DCL     14661--REDEF   14664--REDEF   14667--REDEF
QI_SRCH_VRFY.DATA
     14894**DCL     14898--REDEF
QI_SRCH_VRFY.DEC
     14962**DCL     14966--REDEF   14967--REDEF   14971--REDEF
QI_SRCH_VRFY.FILL_CHAR
     15018**DCL     15021--REDEF
QI_SRCH_VRFY.ROUND
     15037**DCL     15038--REDEF   15039--REDEF
QI_SRCH_VRFY.SRCH_RESULT
     14978**DCL     14981--REDEF   14982--REDEF   14985--REDEF   14986--REDEF   14989--REDEF
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:77   
QI_SRCH_VRFY.SRCH_VRFY_ARGS
     14902**DCL     14906--REDEF   14907--REDEF   14911--REDEF   14912--REDEF   14916--REDEF
QI_SRCH_VRFY.SRCH_VRFY_ELEMS
     14973**DCL     14976--REDEF
QI_TYPE_BINARY_TARGET.CIP
     13763**DCL     14214--REDEF
QI_TYPE_BINARY_TARGET.CIP.AUX
     14129**DCL     14200--REDEF
QI_TYPE_BINARY_TARGET.CIP.AUX.CA
     14132**DCL     14136--REDEF   14139--REDEF   14142--REDEF
QI_TYPE_BINARY_TARGET.CIP.S
     13833**DCL     13904--REDEF
QI_TYPE_BINARY_TARGET.CIP.S.CA
     13836**DCL     13840--REDEF   13843--REDEF   13846--REDEF
QI_TYPE_BINARY_TARGET.CIP.T
     13981**DCL     14052--REDEF
QI_TYPE_BINARY_TARGET.CIP.T.CB
     13998**DCL     14001--REDEF   14005--REDEF   14008--REDEF
QI_TYPE_BINARY_TARGET.DATA
     14221**DCL     14225--REDEF
QI_TYPE_BINARY_TARGET.DEC
     14289**DCL     14293--REDEF   14294--REDEF   14298--REDEF
QI_TYPE_BINARY_TARGET.LEN
     14261**DCL     14265--REDEF   14266--REDEF   14270--REDEF   14271--REDEF   14275--REDEF
QI_TYPE_BINARY_TARGET.PICTURE_STRING
     14331**DCL     14334--REDEF   14335--REDEF   14338--REDEF   14339--REDEF   14342--REDEF
QI_TYPE_BINARY_TARGET.ROUND
     14364**DCL     14365--REDEF   14366--REDEF
QI_TYPE_BINARY_TARGET.SIZE_ERROR
     14350**DCL     14351--REDEF
QI_TYPE_BINARY_TARGET.SRCH_VRFY_ELEMS
     14300**DCL     14303--REDEF
QI_TYPE_DISPLAY_SOURCE.CIP
     12431**DCL     12882--REDEF
QI_TYPE_DISPLAY_SOURCE.CIP.AUX
     12797**DCL     12868--REDEF
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:78   
QI_TYPE_DISPLAY_SOURCE.CIP.AUX.CA
     12800**DCL     12804--REDEF   12807--REDEF   12810--REDEF
QI_TYPE_DISPLAY_SOURCE.CIP.S
     12501**DCL     12572--REDEF
QI_TYPE_DISPLAY_SOURCE.CIP.S.CD
     12546**DCL     12549--REDEF   12553--REDEF   12556--REDEF
QI_TYPE_DISPLAY_SOURCE.CIP.T
     12649**DCL     12720--REDEF
QI_TYPE_DISPLAY_SOURCE.CIP.T.CA
     12652**DCL     12656--REDEF   12659--REDEF   12662--REDEF
QI_TYPE_DISPLAY_SOURCE.DATA
     12889**DCL     12893--REDEF
QI_TYPE_DISPLAY_SOURCE.DEC
     12957**DCL     12961--REDEF   12962--REDEF   12966--REDEF
QI_TYPE_DISPLAY_SOURCE.LEN
     12929**DCL     12933--REDEF   12934--REDEF   12938--REDEF   12939--REDEF   12943--REDEF
QI_TYPE_DISPLAY_SOURCE.PICTURE_STRING
     12999**DCL     13002--REDEF   13003--REDEF   13006--REDEF   13007--REDEF   13010--REDEF
QI_TYPE_DISPLAY_SOURCE.ROUND
     13032**DCL     13033--REDEF   13034--REDEF
QI_TYPE_DISPLAY_SOURCE.SIZE_ERROR
     13018**DCL     13019--REDEF
QI_TYPE_DISPLAY_SOURCE.SRCH_VRFY_ELEMS
     12968**DCL     12971--REDEF
QI_TYPE_DISPLAY_TARGET.CIP
     13097**DCL     13548--REDEF
QI_TYPE_DISPLAY_TARGET.CIP.AUX
     13463**DCL     13534--REDEF
QI_TYPE_DISPLAY_TARGET.CIP.AUX.CA
     13466**DCL     13470--REDEF   13473--REDEF   13476--REDEF
QI_TYPE_DISPLAY_TARGET.CIP.S
     13167**DCL     13238--REDEF
QI_TYPE_DISPLAY_TARGET.CIP.S.CA
     13170**DCL     13174--REDEF   13177--REDEF   13180--REDEF
QI_TYPE_DISPLAY_TARGET.CIP.T
     13315**DCL     13386--REDEF
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:79   
QI_TYPE_DISPLAY_TARGET.CIP.T.CD
     13360**DCL     13363--REDEF   13367--REDEF   13370--REDEF
QI_TYPE_DISPLAY_TARGET.DATA
     13555**DCL     13559--REDEF
QI_TYPE_DISPLAY_TARGET.DEC
     13623**DCL     13627--REDEF   13628--REDEF   13632--REDEF
QI_TYPE_DISPLAY_TARGET.LEN
     13595**DCL     13599--REDEF   13600--REDEF   13604--REDEF   13605--REDEF   13609--REDEF
QI_TYPE_DISPLAY_TARGET.PICTURE_STRING
     13665**DCL     13668--REDEF   13669--REDEF   13672--REDEF   13673--REDEF   13676--REDEF
QI_TYPE_DISPLAY_TARGET.ROUND
     13698**DCL     13699--REDEF   13700--REDEF
QI_TYPE_DISPLAY_TARGET.SIZE_ERROR
     13684**DCL     13685--REDEF
QI_TYPE_DISPLAY_TARGET.SRCH_VRFY_ELEMS
     13634**DCL     13637--REDEF
REPEATS_INDEX
     17097**DCL     17515<<ASSIGN  17519<<ASSIGN  17519>>ASSIGN  17531>>ASSIGN
SUBSCRIPT$
     17098**DCL     17739<<ASSIGN  17741>>DOWHILE 17742<<ASSIGN  17742>>ASSIGN  17742>>ASSIGN  17759>>ASSIGN
     17762>>IF      17784>>ASSIGN  17824>>ASSIGN  17844>>DOSELCT
SUBSCRIPT_A
     17099**DCL     17217>>IF      17228>>IF      17238>>ASSIGN  17484>>ASSIGN  17593>>ASSIGN  17593>>ASSIGN
     17658>>CALLBLT 17851--ASSIGN  17877--ASSIGN  17889<<ASSIGN  17889>>ASSIGN
SUBSCRIPT_INDEX
     17100**DCL     17156<<DOINDEX 17215<<DOINDEX 17217>>IF      17228>>IF      17228>>IF      17238>>ASSIGN
     17238>>ASSIGN  17658>>CALLBLT 17662>>CALLBLT 17739>>ASSIGN  17851>>ASSIGN  17877>>ASSIGN  17889>>ASSIGN
     17889>>ASSIGN
U1
     17101**DCL     17665<>CALL
U1.LENGTH
     17102**DCL     17657<<ASSIGN
U1.TEXT
     17103**DCL     17658<<CALLBLT
U2
     17104**DCL     17665<>CALL
PL6.E3A0      #001=QBS$SUBSCRIPT File=QBS$SUBSCRIPT.:E05TSI                      WED 07/30/97 04:57 Page:80   
U2.LENGTH
     17105**DCL     17661<<ASSIGN
U2.TEXT
     17106**DCL     17662<<CALLBLT
