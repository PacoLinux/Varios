VERSION E05

PL6.E3A0      #001=QQB$SAVCMD File=QQB$SAVCMD.:E05TSI                            WED 07/30/97 05:35 Page:1    
        1        1        /*M* QQB$SAVCMD - Write QQ_CMDBLK.TEXT$->TEXT to M$SAVCMD */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  CSU=2, ECU=3, AND */
        8        8        /*P* NAME:        QQB$SAVCMD
        9        9
       10       10             PURPOSE:     To WRITE  QQ_CMDBLK.TEXT$->BUF to M$SAVCMD.
       11       11        */
       12       12        /*D* NAME:        QQB$SAVCMD
       13       13
       14       14             CALL:        CALL QQB$SAVCMD
       15       15
       16       16             INPUT:       None
       17       17
       18       18             OUTPUT:      None
       19       19
       20       20             DESCRIPTION: This routine is called to write the command that
       21       21                          has just been sucessfully processed to M$SAVCMD.
       22       22                          If M$SAVCMD is not OPEN we just return.  If an
       23       23                          Error occurs while performing the WRITE we
       24       24                          CLOSE M$SAVCMD and return.  This close means
       25       25                          no more commands will be saved.
       26       26        */
       27       27        %EJECT;
PL6.E3A0      #001=QQB$SAVCMD File=QQB$SAVCMD.:E05TSI                            WED 07/30/97 05:35 Page:2    
       28       28        QQB$SAVCMD:
       29       29                PROC;
       30       30
       31       31        %INCLUDE Q_PAGE_C;
       32       63        %SET LISTEXP = '1'B;
       33       64        %PAGE(ARG="Includes");

                81        /***************************************************************************
                82         *                                                                         *
                83         *                                  Includes                               *
                84         *                                                                         *
                85         ***************************************************************************/

       34       89        %INCLUDE CP_6;
       35      170        %INCLUDE QQ_MACROS_C;
       36      595        %INCLUDE QQ_DATA_R;
       37      841        %PAGE(ARG="DCBs");

               858    1   /***************************************************************************
               859    1    *                                                                         *
               860    1    *                                    DCBs                                 *
               861    1    *                                                                         *
               862    1    ***************************************************************************/

       38      866    1   DCL M$SAVCMD DCB;
       39      867        %PAGE(ARG="Based");

               884    1   /***************************************************************************
               885    1    *                                                                         *
               886    1    *                                   Based                                 *
               887    1    *                                                                         *
               888    1    ***************************************************************************/

       40      892        %F$DCB;
       41      949        %PAGE(ARG="FPTs", PAGE=YES);

PL6.E3A0      #001=QQB$SAVCMD File=QQB$SAVCMD.:E05TSI                            WED 07/30/97 05:35 Page:3    
               966    1   /***************************************************************************
               967    1    *                                                                         *
               968    1    *                                    FPTs                                 *
               969    1    *                                                                         *
               970    1    ***************************************************************************/

       42      974        %FPT_WRITE(FPTN=FPT_WRITE_SEQ, DCB=M$SAVCMD);
       43     1005
       44     1006        %FPT_CLOSE (DCB=M$SAVCMD);
       45     1048
       46     1049        %PAGE(ARG="QQB$SAVCMD", PAGE=YES);

PL6.E3A0      #001=QQB$SAVCMD File=QQB$SAVCMD.:E05TSI                            WED 07/30/97 05:35 Page:4    
              1066    1   /***************************************************************************
              1067    1    *                                                                         *
              1068    1    *                                 QQB$SAVCMD                              *
              1069    1    *                                                                         *
              1070    1    ***************************************************************************/

       47     1074    1           IF (DCBADDR(DCBNUM(M$SAVCMD))->F$DCB.FCD#) THEN
       48     1075    2           DO;
       49     1076    2              FPT_WRITE_SEQ.BUF_.BUF$ = QQ_CMDBLK.TEXT$;
       50     1077    2              FPT_WRITE_SEQ.BUF_.BOUND = QQ_CMDBLK.ARS - 1;
       51     1078    2              CALL M$WRITE(FPT_WRITE_SEQ) ALTRET (MON_ERR);
       52     1079    2           END;
       53     1080    1           RETURN;
       54     1081
       55     1082    1   MON_ERR:
       56     1083    2           CALL M$CLOSE (FPT_CLOSE) WHENALTRETURN DO;END ;
       57     1084
       58     1085    1           RETURN;
       59     1086
       60     1087    1   END QQB$SAVCMD;

PL6.E3A0      #001=QQB$SAVCMD File=QQB$SAVCMD.:E05TSI                            WED 07/30/97 05:35 Page:5    
--  Include file information  --

   QQ_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   QQ_MACROS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   Q_PAGE_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure QQB$SAVCMD.

   Procedure QQB$SAVCMD requires 30 words for executable code.
   Procedure QQB$SAVCMD requires 4 words of local(AUTO) storage.

    No errors detected in file QQB$SAVCMD.:E05TSI    .

PL6.E3A0      #001=QQB$SAVCMD File=QQB$SAVCMD.:E05TSI                            WED 07/30/97 05:35 Page:6    

 Object Unit name= QQB$SAVCMD                                 File name= QQB$SAVCMD.:E05TOU
 UTS= JUL 30 '97 05:35:46.40 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$SAVCMD
    2   Data  even  none    42     52  QQB$SAVCMD
    3   Proc  even  none    30     36  QQB$SAVCMD
    4  RoData even  none     1      1  QQB$SAVCMD

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes            yes      Std        0  QQB$SAVCMD

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  QQ_CMDBLK                             M$SAVCMD
     B_VECTNIL
PL6.E3A0      #001=QQB$SAVCMD File=QQB$SAVCMD.:E05TSI                            WED 07/30/97 05:35 Page:7    

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #001=QQB$SAVCMD File=QQB$SAVCMD.:E05TSI                            WED 07/30/97 05:35 Page:8    


        1        1        /*M* QQB$SAVCMD - Write QQ_CMDBLK.TEXT$->TEXT to M$SAVCMD */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  CSU=2, ECU=3, AND */
        8        8        /*P* NAME:        QQB$SAVCMD
        9        9
       10       10             PURPOSE:     To WRITE  QQ_CMDBLK.TEXT$->BUF to M$SAVCMD.
       11       11        */
       12       12        /*D* NAME:        QQB$SAVCMD
       13       13
       14       14             CALL:        CALL QQB$SAVCMD
       15       15
       16       16             INPUT:       None
       17       17
       18       18             OUTPUT:      None
       19       19
       20       20             DESCRIPTION: This routine is called to write the command that
       21       21                          has just been sucessfully processed to M$SAVCMD.
       22       22                          If M$SAVCMD is not OPEN we just return.  If an
       23       23                          Error occurs while performing the WRITE we
       24       24                          CLOSE M$SAVCMD and return.  This close means
       25       25                          no more commands will be saved.
       26       26        */
       27       27        %EJECT;
PL6.E3A0      #001=QQB$SAVCMD File=QQB$SAVCMD.:E05TSI                            WED 07/30/97 05:35 Page:9    
       28       28        QQB$SAVCMD:
       29       29                PROC;

     29  3 000000   000000 700200 xent  QQB$SAVCMD   TSX0  ! X66_AUTO_0
         3 000001   000004 000000                    ZERO    4,0

       30       30
       31       31        %INCLUDE Q_PAGE_C;
       32       63        %SET LISTEXP = '1'B;
       33       64        %PAGE(ARG="Includes");

                81        /***************************************************************************
                82         *                                                                         *
                83         *                                  Includes                               *
                84         *                                                                         *
                85         ***************************************************************************/

       34       89        %INCLUDE CP_6;
       35      170        %INCLUDE QQ_MACROS_C;
       36      595        %INCLUDE QQ_DATA_R;
       37      841        %PAGE(ARG="DCBs");

               858    1   /***************************************************************************
               859    1    *                                                                         *
               860    1    *                                    DCBs                                 *
               861    1    *                                                                         *
               862    1    ***************************************************************************/

       38      866    1   DCL M$SAVCMD DCB;
       39      867        %PAGE(ARG="Based");

               884    1   /***************************************************************************
               885    1    *                                                                         *
               886    1    *                                   Based                                 *
               887    1    *                                                                         *
               888    1    ***************************************************************************/

PL6.E3A0      #001=QQB$SAVCMD File=QQB$SAVCMD.:E05TSI                            WED 07/30/97 05:35 Page:10   
       40      892        %F$DCB;
       41      949        %PAGE(ARG="FPTs", PAGE=YES);

PL6.E3A0      #001=QQB$SAVCMD File=QQB$SAVCMD.:E05TSI                            WED 07/30/97 05:35 Page:11   
               966    1   /***************************************************************************
               967    1    *                                                                         *
               968    1    *                                    FPTs                                 *
               969    1    *                                                                         *
               970    1    ***************************************************************************/

       42      974        %FPT_WRITE(FPTN=FPT_WRITE_SEQ, DCB=M$SAVCMD);
       43     1005
       44     1006        %FPT_CLOSE (DCB=M$SAVCMD);
       45     1048
       46     1049        %PAGE(ARG="QQB$SAVCMD", PAGE=YES);

PL6.E3A0      #001=QQB$SAVCMD File=QQB$SAVCMD.:E05TSI                            WED 07/30/97 05:35 Page:12   
              1066    1   /***************************************************************************
              1067    1    *                                                                         *
              1068    1    *                                 QQB$SAVCMD                              *
              1069    1    *                                                                         *
              1070    1    ***************************************************************************/

       47     1074    1           IF (DCBADDR(DCBNUM(M$SAVCMD))->F$DCB.FCD#) THEN

   1074  3 000002   000000 236007 xsym               LDQ     M$SAVCMD,DL
         3 000003   000000 470400 4                  LDP0    0
         3 000004   000000 471500                    LDP1    0,,PR0
         3 000005   100000 473506                    LDP3    0,QL,PR1
         3 000006   300031 236100                    LDQ     25,,PR3
         3 000007   020000 316007                    CANQ    8192,DL
         3 000010   000027 600000 3                  TZE     s:1080

       48     1075    2           DO;

       49     1076    2              FPT_WRITE_SEQ.BUF_.BUF$ = QQ_CMDBLK.TEXT$;

   1076  3 000011   000003 236000 xsym               LDQ     QQ_CMDBLK+3
         3 000012   000005 756000 2                  STQ     FPT_WRITE_SEQ+5

       50     1077    2              FPT_WRITE_SEQ.BUF_.BOUND = QQ_CMDBLK.ARS - 1;

   1077  3 000013   000007 236000 xsym               LDQ     QQ_CMDBLK+7
         3 000014   000022 736000                    QLS     18
         3 000015   000022 732000                    QRS     18
         3 000016   000001 136007                    SBLQ    1,DL
         3 000017   000020 736000                    QLS     16
         3 000020   000004 676000 2                  ERQ     FPT_WRITE_SEQ+4
         3 000021   000034 376000 xsym               ANQ     B_VECTNIL+28
         3 000022   000004 656000 2                  ERSQ    FPT_WRITE_SEQ+4

       51     1078    2              CALL M$WRITE(FPT_WRITE_SEQ) ALTRET (MON_ERR);

   1078  3 000023   000000 630400 2                  EPPR0   FPT_WRITE_SEQ
PL6.E3A0      #001=QQB$SAVCMD File=QQB$SAVCMD.:E05TSI                            WED 07/30/97 05:35 Page:13   
         3 000024   440001 713400                    CLIMB   alt,write
         3 000025   401400 401760                    pmme    nvectors=4
         3 000026   000030 702000 3                  TSX2    MON_ERR

       52     1079    2           END;

       53     1080    1           RETURN;

   1080  3 000027   000000 702200 xent               TSX2  ! X66_ARET

       54     1081
       55     1082    1   MON_ERR:
       56     1083    2           CALL M$CLOSE (FPT_CLOSE) WHENALTRETURN DO;END ;

   1083  3 000030   000014 630400 2     MON_ERR      EPPR0   FPT_CLOSE
         3 000031   450001 713400                    CLIMB   alt,close
         3 000032   406000 401760                    pmme    nvectors=13
         3 000033   000035 702000 3                  TSX2    s:1085
         3 000034   000035 710000 3                  TRA     s:1085

       57     1084
       58     1085    1           RETURN;

   1085  3 000035   000000 702200 xent               TSX2  ! X66_ARET
       59     1086
       60     1087    1   END QQB$SAVCMD;

PL6.E3A0      #001=QQB$SAVCMD File=QQB$SAVCMD.:E05TSI                            WED 07/30/97 05:35 Page:14   
--  Include file information  --

   QQ_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   QQ_MACROS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   Q_PAGE_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure QQB$SAVCMD.
PL6.E3A0      #001=QQB$SAVCMD File=QQB$SAVCMD.:E05TSI                            WED 07/30/97 05:35 Page:15   

 **** Variables and constants ****

  ****  Section 002  Data  QQB$SAVCMD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    14-0-0/d STRC(1080)  r     1 FPT_CLOSE                  0-0-0/d STRC(432)   r     1 FPT_WRITE_SEQ

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(315)   r     1 QQ_CMDBLK

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0N  NULL        r     1 M$SAVCMD


   Procedure QQB$SAVCMD requires 30 words for executable code.
   Procedure QQB$SAVCMD requires 4 words of local(AUTO) storage.

    No errors detected in file QQB$SAVCMD.:E05TSI    .
PL6.E3A0      #001=QQB$SAVCMD File=QQB$SAVCMD.:E05TSI                            WED 07/30/97 05:35 Page:16   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=QQB$SAVCMD File=QQB$SAVCMD.:E05TSI                            WED 07/30/97 05:35 Page:17   
          MINI XREF LISTING

F$DCB.ACTPOS
       925**DCL       925--REDEF
F$DCB.ARS#
       899**DCL       899--REDEF
F$DCB.ATTR
       918**DCL       919--REDEF
F$DCB.BORROW
       933**DCL       933--REDEF     933--REDEF     933--REDEF
F$DCB.DCBNAME.L
       947**DCL       947--IMP-SIZ
F$DCB.EOMCHAR#
       903**DCL       903--REDEF
F$DCB.FCD#
       912**DCL      1074>>IF
F$DCB.FLDID
       928**DCL       928--REDEF
F$DCB.FORM$
       922**DCL       922--REDEF
F$DCB.FSECT
       938**DCL       938--REDEF
F$DCB.FSN#
       915**DCL       915--REDEF     915--REDEF     916--REDEF
F$DCB.HEADER$
       921**DCL       921--REDEF
F$DCB.IXTNSIZE#
       919**DCL       919--REDEF
F$DCB.LASTSTA$
       908**DCL       908--REDEF
F$DCB.LVL
       934**DCL       934--REDEF
F$DCB.NAME#.C
       909**DCL       909--REDEF
PL6.E3A0      #001=QQB$SAVCMD File=QQB$SAVCMD.:E05TSI                            WED 07/30/97 05:35 Page:18   
F$DCB.NOEOF
       931**DCL       931--REDEF
F$DCB.NRECS#
       920**DCL       920--REDEF
F$DCB.NRECX
       939**DCL       939--REDEF
F$DCB.OHDR
       931**DCL       931--REDEF
F$DCB.ORG#
       914**DCL       914--REDEF
F$DCB.PRECNO
       937**DCL       937--REDEF
F$DCB.RCSZ
       943**DCL       943--REDEF
F$DCB.RES#
       910**DCL       910--REDEF
F$DCB.SETX
       922**DCL       922--REDEF
F$DCB.TAB$
       922**DCL       922--REDEF
F$DCB.TDA
       936**DCL       937--REDEF
F$DCB.WSN#
       910**DCL       910--REDEF
FPT_CLOSE
      1029**DCL      1083<>CALL
FPT_CLOSE.SN_
      1029**DCL      1029--REDEF
FPT_CLOSE.UTL_
      1030**DCL      1030--REDEF
FPT_CLOSE.V
      1034**DCL      1029--DCLINIT
FPT_CLOSE.V.EXPIRE#
      1044**DCL      1044--REDEF
FPT_CLOSE.V.TYPE#
      1042**DCL      1042--REDEF
PL6.E3A0      #001=QQB$SAVCMD File=QQB$SAVCMD.:E05TSI                            WED 07/30/97 05:35 Page:19   
FPT_CLOSE.V.XTNSIZE#
      1039**DCL      1039--REDEF    1041--REDEF
FPT_WRITE_SEQ
       991**DCL      1078<>CALL
FPT_WRITE_SEQ.BUF_.BOUND
       991**DCL      1077<<ASSIGN
FPT_WRITE_SEQ.BUF_.BUF$
       993**DCL      1076<<ASSIGN
FPT_WRITE_SEQ.STATION_
       993**DCL       993--REDEF
FPT_WRITE_SEQ.V
       994**DCL       991--DCLINIT
FPT_WRITE_SEQ.V.DVBYTE.VFC#
      1000**DCL      1000--REDEF
M$CLOSE
        98**DCL-ENT  1083--CALL
M$SAVCMD
       866**DCL      1074--IF
M$WRITE
        99**DCL-ENT  1078--CALL
MON_ERR
      1083**LABEL    1078--CALLALT
QQ_CMDBLK.ARS
       604**DCL      1077>>ASSIGN
QQ_CMDBLK.TEXT$
       604**DCL      1076>>ASSIGN
QQ_GLOBAL.DS1$_BITS
       615**DCL       615--REDEF
QQ_GLOBAL.DS2$_BITS
       615**DCL       616--REDEF
QQ_GLOBAL.DS3$_BITS
       616**DCL       616--REDEF
QQ_GLOBAL.DS4$_BITS
       616**DCL       617--REDEF
