VERSION E05

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:1    
        1        1        /*M*  DDA$DELTA Execution control routines for DELTA & XDELTA */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*P*
        8        8             NAME: ENTRY Module (Host)
        9        9             PURPOSE:
       10       10                   To serve as the entry routine in the Host for Host User DELTA,
       11       11                   Host XDELTA, and for the initial entry for the other modes.
       12       12                   All entries from a Host User come to this module, and all
       13       13                   returns to a Host User are made thru this module.
       14       14             DESCRIPTION:
       15       15                   The start address for Host User DELTA is DEC$ENTRY.  Upon
       16       16                   initial entry, DEC$ENTRY calls DUA$DELTA, and for all
       17       17                   subsequent entries calls DUA$DELTA.  DEA$DELTA1 sets FIRST
       18       18                   to indicate this is the initial entry to DELTA and then
       19       19                   merges with the mainstream (DUA$DELTA).
       20       20
       21       21                   The reason for entry is examined to see if we need to stay
       22       22                   in DELTA.  If we do need to stay in DELTA, the Modules for
       23       23                   restoring the user's program are called and then the DRIVER
       24       24                   module is called passing the Exceptional Condition Code (ECC),
       25       25                   the Sub-code (SUBC), and Event ID (EVID) for the condition
       26       26                   that caused entry to DELTA and FIRST.  If we don't need to
       27       27                   stay in DELTA or a return to the user is desired, the Modules
       28       28                   for establishing breakpoints, etc. are called and then M$DRTN
       29       29                   is called to transfer control the the user domain.
       30       30        */
       31       31        /*F* NAME: DDA$DELTA
       32       32             PURPOSE:  To serve as the main driving routine for DELTA and
       33       33                  XDELTA.  All entries from the user come to this module,
       34       34                  and all returns to the user are made thru this module.
       35       35
       36       36             DESCRIPTION:  The start address for user DELTA is DEC$ENTRY,
       37       37                  which calls DUA$DELTA1.  The start address for XDELTA
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:2    
       38       38                  is DXC$PATCHENT (in file DXC$MISC) which calls DXA$PATCHENT.
       39       39                  All entries for user faults are to DEC$ENTRY, which calls
       40       40                  DUA$DELTA, all faults enter at DXC$FAULTENT (DXC$MISC) for
       41       41                  XDELTA, which calls DXA$FAULTENT.  DXA$PATCHENT and DUA$DELTA1
       42       42                  perform initial setup, call the appropriate 1STIME routine,
       43       43                  and merge with the mainstream of DELTA (DUA$DELTA and DXC$FAULTENT).
       44       44
       45       45                  If entry to DELTA was caused by a normal entry condition,
       46       46                  (initial entry, M$LINK or M$LDTRC, return from M$LINK, cntl
       47       47                  Y DELTA with DELTA already associated, or !DELTA keyin for XDELTA),
       48       48                  DDS$SCAN is called to get and parse a command.  If entry was
       49       49                  due to a user fault, the appropriate flags are checked to
       50       50                  determine what action to take.  The KEEP action will
       51       51                  report the fault, and call DDS$SCAN.  A TRAP action (user DELTA only)
       52       52                  will setup to return control to the users exceptional condition
       53       53                  routine.  An IGNORE action (user DELTA only) will adjust the
       54       54                  IC value to prevent re-occurence of the fault, and setup to
       55       55                  return to the user.
       56       56
       57       57                  If entry was caused by M$ALIB and a CMD field was passed,
       58       58                  DDS$SCAN1 is called for parse only.  The command loop is
       59       59                  entered after the call to DDS$SCAN.  If no CMD field was
       60       60                  passed, the command loop is entered at the call to DDS$SCAN.
       61       61
       62       62                  If entry to DELTA was caused by a breakpoint condition (AT,
       63       63                  WHEN, ON NODE, ON CALL, ON ABORT, ON EXIT), DDA$DOATTACH is
       64       64                  called to perform the attachments.  If a GO directive was
       65       65                  not one of the attachments, DDS$SCAN is called to get more
       66       66                  things to do.
       67       67
       68       68                  If entry to DELTA was caused by a TRACE condition, the condition
       69       69                  is reported, and setup is done to return to the user.  If entry
       70       70                  was caused by a STEP condition, and the step is completed, the
       71       71                  condition is reported, and DDS$SCAN is called.  Otherwise, the
       72       72                  STEP is continued.
       73       73
       74       74                  If entry was caused by an XEQ derail, DDS$SCAN is called.  If
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:3    
       75       75                  entry was caused by an EIS stopper derail, setup is done to
       76       76                  return to the user.  Each of the entry routines are described
       77       77                  in detail later with the code that performs the function.
       78       78
       79       79                  Although there is no entry point with that name, DDA$DELTA refers
       80       80                  to the common section of code which drives fault reporting,
       81       81                  breakpoint handling, and driving of the command loop for both
       82       82                  DELTA and XDELTA.  The command loop is described below.
       83       83
       84       84                  DDS$SCAN gets and parses a command.  If the command is
       85       85                  a stored command, DDS$SCAN performs the store function, and
       86       86                  gets another command, without returning to DDA$DELTA.  When
       87       87                  DDS$SCAN does return, it will have placed an encoded directive
       88       88                  in the direct command buffer (S_D.DIRCOM) and will point at
       89       89                  it with S_D.DO$.  DDA$DELTA then calls DDA$DO to perform the
       90       90                  directive.  If DDA$DO returns, control loops back to call
       91       91                  DDS$SCAN again.  An ALTRET by DDA$DO signals that DDA$GO
       92       92                  was called during the processing of the last directive.
       93       93                  DDA$DELTA then sets up for a return to the user.
       94       94
       95       95                  To return to the user, DELTA sets up the TRACE TRANSFER derail if
       96       96                  tracing is turned on, sets up to continue any interrupted STEPs,
       97       97                  and calls DDA$GO if it has not already been called.  User DELTA
       98       98                  will call M$DRTN to transfer control to the user domain.  XDELTA
       99       99                  will call DXC$USERGO (in file DXC$MISC) to return to the current
      100      100                  running domain.
      101      101        */
      102      102
      103      103        DDA$DELTA: PROC;                        /* Never called */
      104      104
      105      105        /* Auto */
      106      106
      107      107    1   DCL ALIB_SAID_GOBACK BIT(1) ALIGNED;
      108      108    1   DCL DRL$ PTR;
      109      109    1   DCL ECC UBIN;
      110      110    1   DCL EDEF$ PTR;
      111      111    1   DCL EDEF_END$ PTR;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:4    
      112      112    1   DCL NODE SBIN;                          /* Must be SBIN */
      113      113    1   DCL NODE$ PTR;
      114      114    1   DCL DNAME$ PTR;
      115      115    1   DCL ERR_CODE UBIN;
      116      116    1   DCL FATT$ PTR;
      117      117    1   DCL FAULT UBIN;
      118      118    1   DCL I UBIN;
      119      119    1   DCL CMD UBIN;
      120      120    1   DCL LENGTH UBIN;
      121      121    1   DCL LS SBIN;
      122      122    1   DCL PTR$ PTR;
      123      123    1   DCL SAVEIC SBIN;
      124      124    1   DCL SAVEINS$ PTR;
      125      125    1   DCL SUBC UBIN;
      126      126    1   DCL EVID UBIN;
      127      127    1   DCL ASL UBIN;
      128      128    1   DCL ASLIC_FLAG BIT(1) ALIGNED;
      129      129    1   DCL TAGG UBIN;
      130      130    1   DCL TRAP BIT(1) ALIGNED;
      131      131    1   DCL TEMP_FLAG BIT(1) ALIGNED;
      132      132    1   DCL TR_FAKE_FRAME UBIN;
      133      133    1   DCL TYPE UBIN;
      134      134    1   DCL YNDEX SBIN;
      135      135    1   DCL TEMP$ PTR;
      136      136    1   DCL TEMP1 REDEF TEMP$ UBIN(36) ALIGNED;
      137      137    1   DCL 1 TEMP1B REDEF TEMP$ ALIGNED,
      138      138    1         2 * UBIN(4) UNAL,
      139      139    1         2 B1 UBIN(8) UNAL,
      140      140    1         2 B2 UBIN(8) UNAL,
      141      141    1         2 B3 UBIN(8) UNAL,
      142      142    1         2 B4 UBIN(8) UNAL;
      143      143    1   DCL TEMP2 UBIN(36) ALIGNED;
      144      144    1   DCL 1 TEMP2B REDEF TEMP2 ALIGNED,
      145      145    1         2 * BIT(1) UNAL,
      146      146    1         2 B1 UBIN(8) UNAL,
      147      147    1         2 * BIT(1) UNAL,
      148      148    1         2 B2 UBIN(8) UNAL,
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:5    
      149      149    1         2 * BIT(1) UNAL,
      150      150    1         2 B3 UBIN(8) UNAL,
      151      151    1         2 * BIT(1) UNAL,
      152      152    1         2 B4 UBIN(8) UNAL;
      153      153    1   DCL 1 UREGS DALIGNED,
      154      154    1         2 *(0:6) UBIN;                    /* 7 word block for regs in FPT$DRTN  */
      155      155    1   DCL DCB$ PTR;
      156      156    1   DCL TFPRG$ PTR;
      157      157    1   DCL DUPLICATE BIT(1) ALIGNED;
      158      158    1   DCL TDCB$ PTR;
      159      159    1   DCL NDCBS SBIN;
      160      160    1   DCL DCBNO UBIN;
      161      161    1   DCL FPRG_IC UBIN;
      162      162    1   DCL RES CHAR(8);
      163      163    1   DCL RES_SIZE UBIN;
      164      164    1   DCL OPDCBNO UBIN;
      165      165    1   DCL ATT_OFFSET UBIN;
      166      166    1   DCL DICFAULT UBIN SYMREF;
      167      167        /**/
      168      168        /* SYMREF */
      169      169        /**/
      170      170    1   DCL B$JIT$ PTR SYMREF;
      171      171    1   DCL B$TCB$ PTR SYMREF;
      172      172    1   DCL B$PS1$ PTR SYMREF;
      173      173    1   DCL B$PS3$ PTR SYMREF;
      174      174    1   DCL B$ROS$ PTR SYMREF;
      175      175    1   DCL D_M$DO# UBIN SYMREF;
      176      176    1   DCL D_XDELTA BIT(1) SYMREF;
      177      177    1   DCL H_XDELTA UBIN SYMREF;
      178      178    1   DCL D_SYMBOLS BIT(1) ALIGNED SYMREF;
      179      179    1   DCL MIS$ PTR SYMREF;
      180      180    1   DCL CNODE$ PTR SYMREF;
      181      181    1   DCL MON_APT SBIN SYMREF;
      182      182    1   DCL RECOVER UBIN SYMREF;
      183      183    1   DCL UECCB$ PTR SYMREF;
      184      184    1   DCL UIS$ PTR SYMREF;
      185      185    1   DCL USE$ PTR SYMREF;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:6    
      186      186    1   DCL USE_ORIG$ PTR SYMREF;
      187      187    1   DCL WSR(0:7) UBIN(9) UNAL SYMREF;
      188      188        /**/
      189      189        %INCLUDE B$TABLES_C;
      190      297        %B$XL_UPPER(NAME=XLATE_TABLE);
      191      301        /* based storage */
      192      302        /**/
      193      303    1   DCL UBIN36  UBIN BASED;
      194      304    1   DCL UBIN36A(0:0) UBIN HALF ALIGNED BASED;
      195      305    1   DCL ALIB_COMMAND CHAR(SUBC) BASED;
      196      306    1   DCL CHAR1 CHAR(1) BASED;
      197      307    1   DCL CHAR4 CHAR(4) BASED;
      198      308    1   DCL CHAR_4 CHAR(4);
      199      309    1   DCL 1 OLAY_FLAGS BASED ALIGNED,
               309            /* OLAY_FLAGS.V are in B$EXCFR.EVID when a node is loaded or cancelled */
      200      310    1         2 * BIT(6) UNAL,
      201      311    1         2 V,
      202      312    1           3 NOPATH BIT(1) UNAL,
      203      313    1           3 ENTER BIT(1) UNAL,
      204      314    1           3 CANCEL BIT(1) UNAL,
      205      315    1         2 * BIT(27) UNAL;
      206      316    1   DCL 1 SHRUNKISR BASED ALIGNED,
      207      317    1         2 BOUND UBIN(18) UNAL;
      208      318        %INCLUDE DD_ERR_C;
      209      715        %INCLUDE DD_DEBUG_C;
      210      736        %INCLUDE B$SS;
      211      915        %INCLUDE B$OBJECT_C;
      212     4345        %B$EDEF;
      213     4415        %SUB_CST;
      214     4431        %SUB_LINKFLAGS;
      215     4440        %INCLUDE DD$BASED;
      216     5743        %SHRINK;
      217     5764        %SHRINK (NAME = SHRINKC, STCLASS = CONSTANT);
      218     5785        %DU$TREE (NAME="DU$TREE(0:0)");
      219     5791        %DU$NODE (NAME="DU$NODE(0:0)");
      220     5801        %U$SE;
      221     5809        %HOST_INSTR;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:7    
      222     5831        %FIXCOM (NAME="F$XCM",STCLASS=BASED);
      223     5847        %AT_FIRST;
      224     5875        %WHEN_FIRST;
      225     5912        %FPRG$CONTEXT;
      226     5975        %INCLUDE DD_SUBS_C;
      227     6246        %INCLUDE DU_SCODE_C;
      228     6259        %INCLUDE CP_6;
      229     6340        %INCLUDE CP_6_SUBS;
      230     6880        %INCLUDE UE_ERRORS_C;              /* Exceptional condition processing errors */
      231     6898        %INCLUDE B_SEGIDS_C;
      232     7437        %INCLUDE B_STRINGS_C;
      233     7566        %INCLUDE NK_VFC_C;
      234     7640        %INCLUDE JS$CP6V_C;
      235     7703        %FPT$ALIB_V (FPTN=FPT$ALIB_V);
      236     7706        %INCLUDE B$JIT;
      237     7996        %B$TCB;
      238     7999        %INCLUDE B$ROSEG;
      239     8062        %F$DCB;
      240     8119        %B$EXCFR;
      241     8137        %B$EVNT;
      242     8150        %B$FPRG;
      243     8183        %B$COMIO;
      244     8196        %B$XCON;
      245     8206        %B$ECCB;
      246     8214        %B$ECCBI;
      247     8217        %B$ALIBF;
      248     8221        %B$FLT;
      249     8273        %SUB_EXC;
      250     8320        %SUB_ECCDELTA;
      251     8357        %FPT_DRTN (STCLASS=CONSTANT);
      252     8381        %FPT_DRTN (FPTN=FPT$DRTN, STCLASS=AUTO);
      253     8405        %VLR_FPRG_FID(FPTN=VLR_FPRG_FID, STCLASS=AUTO);
      254     8413        %FPT_XCON (STCLASS=CONSTANT, UENTRY=DUX$XCON);
      255     8427        %FPT_INT  (STCLASS=CONSTANT, UENTRY=DUX$BREAK);
      256     8441        %FPT_TRAP (STCLASS=CONSTANT,
      257     8442                  ARITHMETIC=DUX$TRAP,
      258     8443                       OVERFLOW=TRAP,
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:8    
      259     8444                       DIVIDE_CHECK=TRAP,
      260     8445                  PROGRAMMED=DUX$TRAP,
      261     8446                       MME=TRAP,
      262     8447                       DERAIL=TRAP,
      263     8448                       FAULT_TAG=TRAP,
      264     8449                  ERRORS=DUX$TRAP,
      265     8450                       MEMORY=TRAP,
      266     8451                       COMMAND=TRAP,
      267     8452                       LOCKUP=TRAP,
      268     8453                       IPR=TRAP,
      269     8454                       MISSING_SEG=TRAP,
      270     8455                       MISSING_PAGE=TRAP,
      271     8456                       SECURITY_1=TRAP,
      272     8457                       SECURITY_2=TRAP,
      273     8458                  PMME=DUX$TRAP,
      274     8459                  HISTORY_REGS=NO );
      275     8482        %FPT_EVENT(FPTN=FPT$EVENT, STCLASS=CONSTANT, UENTRY=DUX$EVENT);
      276     8496        %FPT_PRIV (FPTN=FPT_PRIV, STCLASS=CONSTANT,
      277     8497                  PRIV=%PR_SPCLMM#,AUTH=YES);
      278     8512        %FPT_SAD (FPTN=SAD1, STCLASS=CONSTANT, USERSID=%SPCL1SID, MONSID=%NULLSID);
      279     8527        %FPT_SAD (FPTN=SAD2, STCLASS=CONSTANT, USERSID=%SPCL2SID, MONSID=%MLS1SID);
      280     8542        %FPT_SAD (FPTN=SAD3, STCLASS=CONSTANT, USERSID=%SPCL3SID, MONSID=%NULLSID);
      281     8557        %FPT_SAD (FPTN=SAD4, STCLASS=CONSTANT, USERSID=%SPCL4SID, MONSID=%NULLSID);
      282     8572        %FPT_SAD (FPTN=SAD5, STCLASS=CONSTANT, USERSID=%SPCL5SID, MONSID=%NULLSID);
      283     8587        %FPT_SAD (FPTN=SAD6, STCLASS=CONSTANT, USERSID=%SPCL6SID, MONSID=%WS3MLSSID);
      284     8602        %FPT_SCREECH(FPTN=SNAP_MESSAGE,STCLASS=CONSTANT SYMDEF,SCODE=SC_MESSAGE);
      285     8616        %VLP_SCODE(FPTN=SC_MESSAGE, STCLASS=CONSTANT SYMDEF, FCG=DU, MID=X, MON=NO,
      286     8617                   CODE=%S$DUMESSAGE, SEV=SEV_SNAP, CUSR=YES, ROSEG=YES,
      287     8618                   ISEG=YES, DDSEG=YES, DBSEG=YES, ASLSEG=YES);
      288     8679        %FPT_SCREECH(FPTN=SNAP_EVENT,STCLASS=CONSTANT SYMDEF,SCODE=SC_EVENT);
      289     8693        %VLP_SCODE(FPTN=SC_EVENT, STCLASS=CONSTANT SYMDEF, FCG=DU, MID=X, MON=NO,
      290     8694                   CODE=%S$DUEVENT, SEV=SEV_SNAP, CUSR=YES, ROSEG=YES,
      291     8695                   ISEG=YES, DDSEG=YES, DBSEG=YES, ASLSEG=YES);
      292     8756        %FPT_OPEN(FPTN=FPT_OPEN,STCLASS=CONSTANT,XONLY=YES);
      293     8865        %FPT_OPEN(FPTN=FPTOPEN,STCLASS=);
      294     8974        %FPT_RELDCB (FPTN=FPTRELDCB,
      295     8975                     STCLASS=);
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:9    
      296     8989        %FPT_RELDCB (FPTN=FPT_RELDCB,
      297     8990                     STCLASS=SYMREF);
      298     9004        %FPT_CLOSE (FPTN=FPT_CLOSE, STCLASS=SYMREF);
      299     9046        %FPT_CLOSE (FPTN=FPT$CLOSE, STCLASS=AUTO);
      300     9088    1   DCL 1 MESSAGE_BUF CONSTANT,
      301     9089    1         2 VFC CHAR(1) INIT(%VFC_TRANSITION1),
      302     9090    1         2 TEXT CHAR(0) INIT('User- or installation-set memory limit reached.');
      303     9091        %FPT_WRITE(FPTN=FPT_WRITE,
      304     9092                   STCLASS=CONSTANT,
      305     9093                   BUF=MESSAGE_BUF,
      306     9094                   VFC=YES);
      307     9125        %FPT_WRITE(FPTN=FPT$WRITE,
      308     9126                   STCLASS=AUTO);
      309     9157        %FPT_EOM (FPTN=FPT_EOM,
      310     9158                  STCLASS=CONSTANT,
      311     9159                  EOMTABLE=VLP_EOMTABLE);
      312     9189        %VLP_EOMTABLE (FPTN=VLP_EOMTABLE,
      313     9190                  STCLASS=CONSTANT,
      314     9191                  VALUES=STD);
      315     9210        %INCLUDE XUH_MACRO_C;
      316     9294        %INCLUDE DD_SD_M;
      317    10630        %S_D;
      318    11948        %S_D_PTRS;
      319    11985        %INCLUDE GD$MSG_M;
      320    12149        %GD$MSG(FPTN=GD$MSG, STCLASS="BASED(S_D_L6_MESSAGE$)",L6=YES,L6PTR="UBIN(32) UNAL");
      321    12305        %GD$MSG(FPTN=GD$MSG_HOST, STCLASS="BASED(S_D_HOST_MESSAGE$)",L6=NO);
      322    12461        %INCLUDE G_LCP6_E;
      323    12719        %INCLUDE DF_EQUS_E;
      324    12732        %INCLUDE GD_EQUS_E;
      325    12893        /**/
      326    12894        /* External routines */
      327    12895        /**/
      328    12896    1   DCL DDA$AT         ENTRY       ALTRET;
      329    12897    1   DCL DDA$DO         ENTRY       ALTRET;
      330    12898    1   DCL DDA$DOATTACH   ENTRY       ALTRET;
      331    12899    1   DCL DDA$GO         ENTRY       ALTRET;
      332    12900    1   DCL DDA$KILL1      ENTRY;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:10   
      333    12901    1   DCL DDA$ON         ENTRY       ALTRET;
      334    12902    1   DCL DDA$STEP_DECR  ENTRY       ALTRET;
      335    12903    1   DCL DDA$STEP_MORE  ENTRY(1)    ALTRET;
      336    12904    1   DCL DDB$BREAK      ENTRY       ALTRET;
      337    12905    1   DCL DDB$EISRESET   ENTRY       ALTRET;
      338    12906    1   DCL DDB$INTERP     ENTRY(3);
      339    12907    1   DCL DDB$PLANTONE   ENTRY(4)    ALTRET;
      340    12908    1   DCL DDB$RESTORE    ENTRY;
      341    12909    1   DCL DDB$SET_TT     ENTRY       ALTRET;
      342    12910    1   DCL DDB$STEPRESET  ENTRY       ALTRET;
      343    12911    1   DCL DDB$TTRESET    ENTRY       ALTRET;
      344    12912    1   DCL DDB$USERFAULT  ENTRY       ALTRET;
      345    12913    1   DCL DDB$WHENRESET  ENTRY       ALTRET;
      346    12914    1   DCL DDB$XEQRESET   ENTRY       ALTRET;
      347    12915    1   DCL DDC$SET_AS     ENTRY;
      348    12916    1   DCL DDC$POP_AS     ENTRY;
      349    12917    1   DCL DDE$ERROR      ENTRY;
      350    12918    1   DCL DDF$FIND_PEDEF ENTRY(2)    ALTRET;
      351    12919    1   DCL DDM$GETMEM     ENTRY(3)    ALTRET;
      352    12920    1   DCL DDQ$READ_ALIB ENTRY(2);
      353    12921    1   DCL DDQ$WRITE      ENTRY(2);
      354    12922    1   DCL DDR$REPORT     ENTRY(1);
      355    12923    1   DCL DDS$EMTREE     ENTRY       ALTRET;
      356    12924    1   DCL DDS$ES_INQ     ENTRY(1)    ALTRET;
      357    12925    1   DCL DDS$SCAN       ENTRY       ALTRET;
      358    12926    1   DCL DDS$SCAN1      ENTRY       ALTRET;
      359    12927    1   DCL DDS$SCAN2      ENTRY       ALTRET;
      360    12928    1   DCL DDS$SET_Q2C    ENTRY       ALTRET;
      361    12929    1   DCL DDT$XTAGS      ENTRY(4);
      362    12930    1   DCL DFA$GET_FPRG_DCB ENTRY(1);
      363    12931    1   DCL DFA$FPRG       ENTRY(1);
      364    12932    1   DCL DFA$GO         ENTRY(1)  ALTRET;
      365    12933    1   DCL DFA$KILL_FPRG  ENTRY(1);
      366    12934    1   DCL DFA$SETUP_FPRG ENTRY(4) ALTRET;
      367    12935    1   DCL DFA$STOP_FPRGS ENTRY(2) ALTRET;
      368    12936    1   DCL DFA$TRACE_REPORT ENTRY ALTRET;
      369    12937    1   DCL DFQ$READ_FD    ENTRY(2)    ALTRET;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:11   
      370    12938    1   DCL DFR$EVENTRPT   ENTRY(1);
      371    12939    1   DCL DFR$REPORT     ENTRY(1);
      372    12940    1   DCL DUD$MINI       ENTRY(1);
      373    12941    1   DCL DUA$ALIB       ENTRY(2)    ALTRET;
      374    12942    1   DCL DUA$EXITDELTA  ENTRY;
      375    12943    1   DCL DUA$KILL_ANLZ  ENTRY(0)    ALTRET;
      376    12944    1   DCL DUA$KILL_RUM   ENTRY(0);
      377    12945    1   DCL DUA$WHEN       ENTRY       ALTRET;
      378    12946    1   DCL DUA$WHENIN     ENTRY       ALTRET;
      379    12947    1   DCL DUA$WHENOUT    ENTRY(1)    ALTRET;
      380    12948    1   DCL DUE$ERRMSG     ENTRY;
      381    12949    1   DCL DDI$SETUP      ENTRY;
      382    12950    1   DCL DUI$1STIME     ENTRY       ALTRET;
      383    12951    1   DCL DUR$ECCRPT     ENTRY (1);
      384    12952    1   DCL DUX$BREAK      ENTRY ASYNC;
      385    12953    1   DCL DUX$EVENT ENTRY ASYNC OPTIONAL;
      386    12954    1   DCL DUX$TRAP       ENTRY;
      387    12955    1   DCL DUX$XCON       ENTRY;
      388    12956    1   DCL DUX$XCON1_REL  ENTRY;
      389    12957    1   DCL DXA$GET_APT1   ENTRY(2);
      390    12958    1   DCL DXA$SSF        ENTRY       ALTRET;
      391    12959    1   DCL DXA$QUIT       ENTRY       ALTRET;
      392    12960    1   DCL DXB$CUSE       ENTRY;
      393    12961    1   DCL DXC$USERGO     ENTRY;
      394    12962    1   DCL DXI$1STIME     ENTRY;
      395    12963        %EJECT;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:12   
      396    12964        /*D* NAME: DUA$DELTA1
      397    12965             DESCRIPTION:  Initialize first time thru DELTA.  Set up
      398    12966                  asynchronous entry points.
      399    12967        */
      400    12968    1   DUA$DELTA1: ENTRY;                      /* First time only entry              */
      401    12969                                                /**/
      402    12970                                           /* Set up for initial entry (user DELTA) */
      403    12971                                 /* XDELTA routines are at the end of this module */
      404    12972                                                /**/
      405    12973    1        CALL DUI$1STIME
      406    12974    2             WHENALTRETURN DO;
      407    12975    2                  CALL DDE$ERROR;
      408    12976    2                  FPT$DRTN = FPT_DRTN;
      409    12977    2                  FPT$DRTN.V_ = VECTOR(FPT$DRTN.V);
      410    12978    2                  IF B$TCB$ -> B$TCB.STK$ -> B$EXCFR.ECC = %ECC_DELTA# AND
      411    12979    2                     B$TCB$ -> B$TCB.STK$ -> B$EXCFR.SUBC = %SC_YC#
      412    12980    2                  THEN FPT$DRTN.V.KLDELTA# = '1'B;
      413    12981    2                  ELSE FPT$DRTN.V.QUIT# = '1'B;
      414    12982    2                  CALL M$DRTN (FPT$DRTN);
      415    12983    2                END;
      416    12984    1        REMEMBER DRTN_QUIT IN S_D.REM_DRTN_QUIT;
      417    12985    1        REMEMBER DRTN_KLDELTA IN S_D.REM_DRTN_KLDELTA;
      418    12986    1        REMEMBER BRK IN S_D.REM_BREAK;
      419    12987    1        REMEMBER DO_ATTACH IN S_D.DO_ATTACHMENTS;
      420    12988    1        REMEMBER DO_MESSAGE IN S_D.DO_MESSAGE;
      421    12989    1        CALL M$INT(FPT_INT);
      422    12990    1        CALL M$XCON(FPT_XCON);
      423    12991    1        CALL M$TRAP(FPT_TRAP);
      424    12992    1        CALL M$EVENT (FPT$EVENT);
      425    12993    1        IF S_D.STAND_ALONE THEN S_D.SAVEIC = 16; /* Make it easy for him  */
      426    12994                                                /* to not stomp on the SL */
      427    12995    1        ELSE S_D.SAVEIC = B$TCB$->B$TCB.STK$->B$SS.IC; /* Set up initial IC */
      428    12996        /**/
      429    12997        /*D* NAME: DUA$DELTA
      430    12998             DESCRIPTION:  Determine why we were entered, report condition,
      431    12999                  get command, or execute attachements.
      432    13000        */
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:13   
      433    13001    1   DUA$DELTA: ENTRY;                       /* Not FIRST_TIME entry               */
      434    13002    1        TRAP = '0'B;
      435    13003    1        S_D.ALIB = '0'B;
      436    13004    1        S_D.DO_CALLED = '0'B;
      437    13005    1        ALIB_SAID_GOBACK = '0'B;
      438    13006    1        S_D.ALIB_SAID_QUIET = '0'B;
      439    13007    1        S_D.ALIB_SAID_ECHO = '0'B;
      440    13008    1        S_D.E$XIT = '0'B;
      441    13009    1        S_D.USVFC = '1'B;                  /* Delta just got entered fresh,
      442    13010                                           tell DDQ$WRITE to use the transition VFC on
      443    13011                                           the next write */
      444    13012    1        ECC = B$TCB$->B$TCB.STK$->B$EXCFR.ECC;
      445    13013    1        SUBC = B$TCB$->B$TCB.STK$->B$EXCFR.SUBC;
      446    13014    1        EVID = B$TCB$->B$TCB.STK$->B$EXCFR.EVID;
      447    13015    1        ASL = B$TCB$->B$TCB.STK$->B$EXCFR.ASLIC;
      448    13016    1        IF ECC = %ECC_XCON#
      449    13017    1        THEN S_D.XCONING = '1'B;
      450    13018    1        IF ECC = %ECC_INT#
      451    13019    1        THEN S_D.INT# = '1'B;
      452    13020    1        ELSE S_D.INT# = '0'B;
      453    13021    1        CALL DDC$SET_AS;                   /* Push special pointers on arg stack */
      454    13022    1        FPT$DRTN=FPT_DRTN;                 /* Initialize our return fpt          */
      455    13023    1        FPT$DRTN.V_ = VECTOR(FPT$DRTN.V);
      456    13024    1        FPT$DRTN.V.ECC#=%ECC_DELTA#; /* Usually we don't want to enter users xcon */
      457    13025    1        FPT$DRTN.V.SETECC#='1'B;           /* Or break routines on a "GO"        */
      458    13026    1        S_D.DRTN$ = ADDR(FPT$DRTN);        /* Others have to find this           */
      459    13027    1        S_D.UREG$ = ADDR(UREGS);
      460    13028    1        FPT$DRTN.REGS_ = VECTOR(UREGS);
      461    13029    1        CALL DDI$SETUP;
      462    13030                                                /**/
      463    13031    1        IF S_D.DEBUGA(%DB@ECC)
      464    13032    2        THEN DO;
      465    13033    2             CALL DUR$ECCRPT(ECCRPT_FORUSER);
      466    13034    3             IF S_D.DEBUG THEN DO;
      467    13035    3                  CALL DUD$MINI;
      468    13036    3                  S_D.PROMPT_SIZE = 0;
      469    13037    3                END;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:14   
      470    13038    2           END;
      471    13039        %EJECT;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:15   
      472    13040                                                /**/
      473    13041                                           /* Determine why we got entered, and take
      474    13042                                           the appropriate action. */
      475    13043                                                /**/
      476    13044                                                /**/
      477    13045                                           /* Initial DELTA entry, look for our other
      478    13046                                           names (RUM, PMD) */
      479    13047                                                /**/
      480    13048    2        IF ECC = %ECC_DELTA# THEN DO;
      481    13049    2             PTR$ = ADDR(B$JIT.CCBUF);
      482    13050    2             TEMP$ = PINCRC(ADDR(B$JIT.CCBUF), LENGTHC(B$JIT.CCBUF)-1);
             13050                      /* Point at last byte in CCBUF */
      483    13051    3             DO WHILE (PTR$->CHAR1 = ' '); /* Look for first non-blank */
      484    13052    3                  PTR$ = PINCRC(PTR$, 1);
      485    13053    3                END;
      486    13054    2             DRL$ = PTR$;                  /* Save this, we'll use it later */
      487    13055    2             CALL XLATE ( CHAR_4, XLATE_TABLE, PTR$ -> CHAR4);
      488    13056    2             IF CHAR_4 = 'RUM ' OR CHAR_4 = 'PMD '
      489    13057    3             THEN DO;
      490    13058    3                  IF CHAR_4 = 'RUM '
      491    13059    4                  THEN DO;
      492    13060    4                       PTR$ = PINCRC(PTR$, 4);
      493    13061    5                       DO WHILE (PTR$->CHAR1 = ' ');
      494    13062    5                            PTR$ = PINCRC(PTR$, 1);
      495    13063    5                            IF PTR$ > TEMP$
      496    13064    6                            THEN DO;       /* TEMP$ = end of CCBUF */
      497    13065    6                                 S_D.ERROR = E@RUM_WHAT; /*E@RUM_WHAT*/
      498    13066    6                                 GOTO DRTN_ERRQUIT;
      499    13067    6                               END;
      500    13068    5                          END;
      501    13069    4                     END;
      502    13070    3                  S_D.INPUT = B$JIT.CCBUF;
      503    13071    3                  S_D.NCHARS = B$JIT.CCARS;
      504    13072    3                  S_D.DO$ = ADDR(NIL);
      505    13073    3                  REMEMBER S_FAULT IN S_D.REM_DO_SCAN;
      506    13074    3                  S_D.DO_SCAN = '1'B;
      507    13075    3                  CALL DDS$SCAN1 ALTRET(DRTN_QUIT);
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:16   
      508    13076    3                  IF S_D.XUG_BUILTIN THEN GOTO DRTN_QUIT;
      509    13077    3                  IF CHAR_4 = 'RUM ' THEN S_D.RUM_ONLY = '1'B;
      510    13078    4                  ELSE DO;
      511    13079    4                       S_D.PMD_ONLY = '1'B;
      512    13080    4                       CALL DUR$ECCRPT(ECCRPT_USER);
      513    13081    4                     END;
      514    13082    3                  GOTO SCAN_COMMAND1;
      515    13083    3                END;
      516    13084                                                /**/
      517    13085                                      /* Test sub code to see why we`re here, report
      518    13086                                         either DELTA HERE IC=, or DELTA HERE - NO RU */
      519    13087                                                /**/
      520    13088    3             DO CASE(SUBC);
      521    13089    3               CASE(%SC_STARTU#);          /* Start under DELTA */
      522    13090    3                  CALL DDR$REPORT( R_DELTA ); /* DELTA here @ADDR */
      523    13091    3                  GOTO SCAN_COMMAND;
      524    13092    3               CASE(%SC_YC#);              /* Start under Control-Y DELTA */
      525    13093    3                  S_D.POST_ASSOC = '1'B;
      526    13094    3                  IF EVID = %EVID_AUTOS#
      527    13095    3                  THEN CALL DDR$REPORT( R_AUTOS ); /* Auto shared RU */
      528    13096    3                  ELSE CALL DDR$REPORT( R_DELTA ); /* DELTA here @ADDR */
      529    13097                       /* Check for any FPRGs, if there are any, set up the
      530    13098                          context and stop that FPRG */
      531    13099    3                  DCB$ = B$ROS$ -> B$ROSEG.DCBPTR$;
      532    13100    3                  NDCBS = B$ROS$ -> B$ROSEG.NUMDCBS;
      533    13101    4                  DO I = 0 TO NDCBS - 1;
      534    13102    4                       TDCB$ = DCB$ -> B$RODCB$(I);
      535    13103    4                       IF TDCB$ ~= ADDR(NIL)
      536    13104    5                       THEN DO;
      537    13105    5                            IF TDCB$ -> F$DCB.ORG# = %FPRG# AND
      538    13106    5                               TDCB$ -> F$DCB.WSR# = %USERWSR AND
      539    13107    5                               TDCB$ -> F$DCB.FCD#
      540    13108    6                            THEN DO;
      541    13109    6                                 TFPRG$ = S_D.FPRG_CONTEXT$;
      542    13110    6                                 DUPLICATE = '0'B;
      543    13111    6                                 IF TFPRG$ ~= ADDR(NIL)
      544    13112    7                                 THEN DO;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:17   
      545    13113    8                                      DO WHILE (TFPRG$ ~= ADDR(NIL) AND
      546    13114    8                                                NOT DUPLICATE);
      547    13115    8                                           IF TDCB$ -> F$DCB.RES# = TFPRG$ ->
             13115                                                    FPRG$CONTEXT.RES
      548    13116    8                                           THEN DUPLICATE = '1'B;
      549    13117    8                                           TFPRG$ = TFPRG$ -> FPRG$CONTEXT.NEXT$;
      550    13118    8                                         END;
      551    13119    7                                    END;
      552    13120    6                                 IF NOT DUPLICATE
      553    13121    7                                 THEN DO;
      554    13122    7                                      RES = TDCB$ -> F$DCB.RES#;
      555    13123    7                                      RES_SIZE = 4;
      556    13124    7                                      CALL DFA$GET_FPRG_DCB (DCBNO);
      557    13125                                           /* Call M$OPEN to get a connection to the FPRG */
      558    13126    7                                      FPTOPEN = FPT_OPEN;
      559    13127    7                                      FPTOPEN.V_ = VECTOR(FPTOPEN.V);
      560    13128    7                                      FPTOPEN.V.DCB# = DCBNO;
      561    13129    7                                      FPTOPEN.V.EVENT# = DCBNO;
      562    13130    7                                      FPTOPEN.V.ORG# = %DBGDCB#;
      563    13131    7                                      FPTOPEN.V.DBGDCBNO# = I;
      564    13132    7                                      FPTOPEN.V.RES# = 'FE  ';
      565    13133    7                                      CALL M$OPEN (FPTOPEN)
      566    13134    8                                           WHENALTRETURN DO;
      567    13135    8                                                CALL DUE$ERRMSG;
      568    13136    8                                                GOTO SCAN_COMMAND;
      569    13137    8                                              END;
      570    13138    7                                      CALL DFA$SETUP_FPRG (DCBNO,RES, RES_SIZE) ALTRET(
             13138                                               SCAN_COMMAND);
      571    13139    7                                      CALL DFA$KILL_FPRG;
      572    13140    7                                    END;
      573    13141    6                                END;
      574    13142    5                          END;
      575    13143    4                     END;
      576    13144    3                  GOTO SCAN_COMMAND;
      577    13145    3               CASE(%SC_JOBSTEP#);         /* Delta called stand alone           */
      578    13146    3                  CALL DDR$REPORT(R_DELTA_ONLY); /* Delta here - no prog          */
      579    13147    3                  GOTO SCAN_COMMAND;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:18   
      580    13148    3               CASE(ELSE);
      581    13149    3                  S_D.ERROR = E@NOTIMP;    /*E@NOTIMP*/
      582    13150    3                  CALL DDE$ERROR;
      583    13151    3                  CALL DUR$ECCRPT(ECCRPT_DELTA);
      584    13152    3                  CALL M$XXX;              /* Blow him away                      */
      585    13153    3               END;
      586    13154    2           END;
      587    13155        %EJECT;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:19   
      588    13156                                                /**/
      589    13157                                      /* If memory fault, and a WHEN breakpoint is set
      590    13158                                 this may be a when breakpoint hit.  Call DUA$WHENOUT
      591    13159                                 to set up an exit from DELTA with a WHEN DRL
      592    13160                                 planted after the current instruction.  This
      593    13161                                 test must be done near the top to call DDB$WHENRESET
      594    13162                                 if needed.  */
      595    13163                                                /**/
      596    13164    1        IF ECC = %ECC_ERROR# AND SUBC = %SUBC_SEC2# AND S_D.WHEN_SET AND NOT S_D.
             13164                 WHEN_ACTIVE
      597    13165    2        THEN DO;
      598    13166    2             IF ASL = %ASLIC               /* ASLIC */
      599    13167    2             THEN ASLIC_FLAG = '1'B;
      600    13168    2             ELSE ASLIC_FLAG = '0'B;
      601    13169    2             IF S_D.TIC ~= S_D.SL
      602    13170    2             THEN S_D.SAVEIC = S_D.TIC;
      603    13171    2             S_D.GOIC = S_D.TIC;
      604    13172    2             CALL DUA$WHENOUT(ASLIC_FLAG) ALTRET(RESTORE_ALL);
      605    13173    2             FPT$DRTN.V.EVENT# = '1'B;
      606    13174    2             GOTO USERGO0_WHEN;            /* Don't set FPT$DRTN.V.DBRK# */
      607    13175    2           END;
      608    13176        %EJECT;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:20   
      609    13177                                           /* ECC_DBRK means a fault on a page protected
      610    13178                                      by a dbreak flag occured during PMME processing.
      611    13179                                      */
      612    13180    1        IF ECC = %ECC_DBRK# THEN GOTO WHENPMME;
      613    13181        %EJECT;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:21   
      614    13182                                                /**/
      615    13183                                      /* If overlay loaded, check for ON NODE(S).  If
      616    13184                                      any are active, perform attachments, otherwise,
      617    13185                                      just return to the user domain. */
      618    13186                                                /**/
      619    13187    1        IF ECC = %ECC_OLAY#
      620    13188    2        THEN DO;
      621    13189    2             IF NOT S_D.OVERLAID
      622    13190    2             THEN GOTO SKIP_TT;
      623    13191    2             S_D.LAST_NODE_LOADED = SUBC;
      624    13192    2             S_D.SAVEIC = S_D.TIC;
      625    13193    2             S_D.GOIC = S_D.SAVEIC;
      626    13194    2             CALL DDS$EMTREE;         /* Set up schema for new node structure */
      627    13195    2             S_D.TREE$ = S_D.MTREE$;       /* Use current */
      628    13196                                           /* Restore to reset flags on any nodes which
      629    13197                                           may have disappeared, and so we can call
      630    13198                                      plant later to set breakpoints in new nodes */
      631    13199    2             IF S_D.T$T.ACTIVE THEN CALL DDB$TTRESET;
      632    13200    3             IF S_D.S$TEP.ACTIVE THEN DO;
      633    13201    3                  CALL DDB$STEPRESET;
      634    13202    3                  S_D.S$TEP.ACTIVE = '1'B;
      635    13203    3                END;
      636    13204    2             CALL DDB$RESTORE;
      637    13205                                                /* Plant fault tags in all entdefs
      638    13206                                                   subject to tracing in memory */
      639    13207    2             IF S_D.TR$INFO.SET AND S_D.TR$INFO.ACTIVE AND S_D.TR$INFO.TYPE = C_TC
      640    13208    3             THEN DO;
      641    13209    3                  NODE = S_D.TREE$ -> DU$TREE.NEXT#( S_D.NODE#M1 + 1 );
      642    13210    4                  DO WHILE ( NODE > 0 );
      643    13211    4                       NODE$ = PINCRW( S_D.NODESEG$, SIZEW( DU$NODE ) * NODE );
      644    13212    4                       EDEF$ = NODE$ -> DU$NODE.EDEF$( 0 );
      645    13213    4                       EDEF_END$ = NODE$ -> DU$NODE.EDEF_END$( 0 );
      646    13214    4                       DNAME$ = NODE$ -> DU$NODE.DNAME$( 0 );
      647    13215    4                       CALL DDT$XTAGS( @PLANT_TAGS, EDEF$, EDEF_END$, DNAME$ );
      648    13216    4                       NODE = S_D.TREE$ -> DU$TREE.NEXT#( NODE );
      649    13217    4                     END;
      650    13218    3                END;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:22   
      651    13219    2             IF ADDR(B$TCB$->B$TCB.STK$->B$EXCFR.EVID)->OLAY_FLAGS.V ~= '000'B THEN
             13219                      GOTO USERGO2;
      652    13220                                           /* Look for on node name entry in fixcom */
      653    13221    2             S_D.IXFIX = 0;
      654    13222    3             DO I = 1 TO S_D.FIXLAST;
      655    13223    3                  IF S_D.FIXCOM.CMD(I) = C_ONN AND S_D.FIXCOM.CDF(I) = S_D.
             13223                           LAST_NODE_LOADED /*C_ONN*/
      656    13224    3                  THEN S_D.IXFIX = I;
      657    13225    3                END;
      658    13226    2             IF S_D.IXFIX = 0 THEN
             13226                      /* Didn't find specific name, look for general case */
      659    13227    2                  IF S_D.ONNODES ~= 0 THEN S_D.IXFIX = S_D.ONNODES;
      660    13228    2             IF S_D.IXFIX = 0 THEN GOTO CONTO;
             13228                    /* Which node was loaded is unimportant, and we do not hear its words */
      661    13229    2             IF S_D.FIXCOM.INACTIVE(S_D.IXFIX) THEN GOTO USERGO2;
      662    13230    2             S_D.FAULTCMD$ = PINCRW(ADDR(S_D.FIXCOM), S_D.IXFIX*SIZEW(F$XCM));
      663    13231    2             IF S_D.FAULTCMD$->F$XCM.CMD = C_ONN /*C_ONN*/
      664    13232    3             THEN DO;
      665    13233    3                  CALL DDA$AT ALTRET(USERGO2); /* Test ifspec and bypass count */
      666    13234    3                  FATT$ = PINCRW(S_D.VARCOM$, S_D.FAULTCMD$->F$XCM.FAI);
      667    13235    3                  FATT$->AT_FIRST.CURRENT_COUNT = FATT$->AT_FIRST.BYPASS_COUNT;
             13235                           /* Reset bypass count */
      668    13236    3                END;
      669    13237    2             ELSE CALL DDA$ON ALTRET(USERGO2); /* Just check ifspec for general case */
      670    13238    2             IF S_D.FAULTCMD$->F$XCM.SILENT THEN S_D.SILENT = '1'B;
      671    13239    2             ELSE CALL DDR$REPORT(R_ONNODE);
      672    13240    2             S_D.ENTRYCMD$ = S_D.FAULTCMD$;
      673    13241    2             REMEMBER USERGO IN S_D.REM_USERGO;
      674    13242    2             CALL DDA$DOATTACH ALTRET(USERGO);
      675    13243    2             S_D.SILENT = '0'B;
      676    13244    2             GOTO SCAN_COMMAND;
      677    13245    2   CONTO:    CALL DDA$GO ALTRET (SCAN_COMMAND);
      678    13246    3             IF S_D.S$TEP.ACTIVE THEN DO;
      679    13247    3                CALL DDB$PLANTONE (PINCRW(UIS$,S_D.S$TEP.LOC),T_OTHER,DRL_STEP,ADDR(S_D
             13247                         .S$TEP.SAVED));
      680    13248    3                IF S_D.S$TEP.ALT THEN
      681    13249    3                   CALL DDB$PLANTONE (PINCRW(UIS$,S_D.S$TEP.ALTLOC),T_OTHER,DRL_STEP,
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:23   
             13249                            ADDR(S_D.S$TEP.ALTSAVED));
      682    13250    3                END;
      683    13251    2             GOTO USERGO1;
      684    13252    2           END;                            /* End if ecc = ECC_OLAY# */
      685    13253        %EJECT;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:24   
      686    13254                                                /**/
      687    13255                                           /* Check for exit from exit control routine.
      688    13256                                      If final exit, get a command.  If retry, merc, or
      689    13257                                 trtn, and trace is on, record it in history buffer,
      690    13258                                 and return to user domain */
      691    13259                                                /**/
      692    13260    1        IF ECC = %ECC_EXCRTN# /* Entry due to exceptional return (retry,merc,trtn) */
      693    13261    2        THEN DO;
      694    13262    2             S_D.SAVEIC = S_D.TIC;
      695    13263    2             IF SUBC = %SC_XCONXIT#        /* Final exit from XCON */
      696    13264    3             THEN DO;
      697    13265    3                  CALL DUR$ECCRPT(ECCRPT_USER);
      698    13266    3                  S_D.SV.DELENT = 1;       /* Entry due to user trap */
      699    13267    3                  GOTO RESTORE_ALL;
      700    13268    3                END;
      701    13269    2             S_D.SAVEIC = S_D.SAVEIC - S_D.ISBASE;
      702    13270    2             S_D.ISBASE = 0;
      703    13271    2             S_D.GOIC = S_D.SAVEIC;
      704    13272    2        IF S_D.GOTRAPPOS
      705    13273    3        THEN DO;
      706    13274    3             S_D.SAVEIC = S_D.GOTRAP_POSITION;
      707    13275    3             S_D.GOIC = S_D.GOTRAP_POSITION;
      708    13276    3           END;
      709    13277    2             IF S_D.S$TEP.ACTIVE
      710    13278    3             THEN DO;
      711    13279    3                  IF S_D.S$TEP.ONE_FLAG AND S_D.S$TEP.DOING_SOC
      712    13280    4                    THEN DO; /* if SOC - keep going, don't re-break */
      713    13281    4                       GOTO CALL_DRTN;
      714    13282    4                    END;
      715    13283    3                  CALL DDB$STEPRESET;
      716    13284    3                  S_D.S$TEP.ACTIVE = '1'B;
      717    13285    3                  CALL DDA$STEP_MORE('1'B) ALTRET(CANT_STEP);
      718    13286    3                END;
      719    13287    2             GOTO USERGO0;
      720    13288    2           END;
      721    13289        %EJECT;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:25   
      722    13290                                                /**/
      723    13291                                           /* Entry for M$LINK/M$LDTRC and return from
      724    13292                                           M$LINK.  Report the condition, and allow use
      725    13293                                           of the EXIT directive if M$LINK entry. */
      726    13294                                                /**/
      727    13295    1        IF ECC = %ECC_LINK#                /* Entered via M$LINK or M$LDTRC */
      728    13296    2        THEN DO;
      729    13297    2             S_D.SAVEIC = S_D.TIC;
      730    13298    2             IF SUBC = %SC_MLINK#
      731    13299    3             THEN DO;
      732    13300    3                  S_D.LINK_ENTRY = '1'B;   /* Allow EXIT */
      733    13301    3                  CALL DDR$REPORT(R_LINKIN);
      734    13302    3                END;
      735    13303    2             ELSE CALL DDR$REPORT(R_LDTRCIN);
      736    13304    2             GOTO SCAN_COMMAND;
      737    13305    2           END;
      738    13306    1        IF ECC = %ECC_LRTN#                /* Returned to M$LINK+1 (or 2) */
      739    13307    2        THEN DO;
      740    13308    2             S_D.SAVEIC = S_D.TIC;
      741    13309    2             CALL DDR$REPORT(R_LINKRTN);
      742    13310    2             GOTO RESTORE_ALL;
             13310                /* Clean up the derails from when we were so rudely interrputed last time */
      743    13311    2           END;
      744    13312        %EJECT;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:26   
      745    13313                                                /**/
      746    13314                                           /* Check for ALIB entry.  If ANLZ or RUM are
      747    13315                                           in progress, restore the schema IC.  Get and
      748    13316                                           remember flags from the V area, and parse
      749    13317                                           CMD if present.  If no command was passed,
      750    13318                                      report entry via M$ALIB and goto scan, otherwise,
      751    13319                                      goto scan1 (DDA$DO). */
      752    13320                                                /**/
      753    13321    1        IF ECC = %ECC_ALIB#                /* Entry due  to M$ALIB */
      754    13322    2        THEN DO;
      755    13323    2             S_D.ALIB = '1'B;
      756    13324    2             IF S_D.T$T.ACTIVE THEN CALL DDB$TTRESET;
      757    13325    3             IF S_D.S$TEP.ACTIVE THEN DO;
      758    13326    3                  CALL DDB$STEPRESET;
      759    13327    3                  S_D.S$TEP.ACTIVE = '1'B;
      760    13328    3                END;
      761    13329    2             CALL DDB$RESTORE;
      762    13330    2             IF S_D.ANLZ OR S_D.RUM
      763    13331    3             THEN DO;
      764    13332    3                  IF S_D.ANLZ AND (NOT S_D.ANLZ_FILE)
      765    13333    4                  THEN DO;
      766    13334    4                       CALL M$SPRIV(FPT_PRIV);
      767    13335    4                       CALL M$SAD(SAD1) ALTRET(NOT_PRIV);
      768    13336    4                       CALL M$SAD(SAD2) ALTRET(NOT_PRIV);
      769    13337    4                       CALL M$SAD(SAD3) ALTRET(NOT_PRIV);
      770    13338    4                       CALL M$SAD(SAD4) ALTRET(NOT_PRIV);
      771    13339    4                       CALL M$SAD(SAD5) ALTRET(NOT_PRIV);
      772    13340    4                       CALL M$SAD(SAD6) ALTRET(NOT_PRIV);
      773    13341    4                     END;
      774    13342    3                  S_D.SAVEIC_SAVE = S_D.TIC; /* Remember how we got here */
      775    13343    3                  S_D.SAVEIC = S_D.ANLZRUM_IC; /* Restore schema ic */
      776    13344    3                  CALL DDS$ES_INQ(S_D.SAVEIC);
      777    13345    3                  S_D.UNODE.CURRENT = S_D.NODE;
      778    13346    3                  CALL DDS$SET_Q2C;
      779    13347    3                END;
      780    13348    2             ELSE S_D.SAVEIC = S_D.TIC;
      781    13349    2             IF S_D.ANLZ_FILE
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:27   
      782    13350    3             THEN DO;                      /* Restore anlz pointers */
      783    13351    3                  S_D.USS$ = S_D.USS$_SAVE;
      784    13352    3                  S_D.UREG$ = S_D.UREG$_SAVE;
      785    13353    3                  S_D.IND$ = PINCRW(S_D.USS$, 4);
      786    13354    3                END;
      787    13355    2             REMEMBER BAD_PS3 IN S_D.REM_ACCESS;
      788    13356    2             S_D.ACCESS = '1'B;
      789    13357    2             ALIB_SAID_GOBACK = B$PS3$->FPT$ALIB_V.RETRN;
      790    13358    2             S_D.ALIB_SAID_GOBACK = ALIB_SAID_GOBACK;
      791    13359    2             FPT$DRTN.V.DLIB# = B$PS3$->FPT$ALIB_V.DLIB;
      792    13360    2             S_D.ALIB_SAID_ECHO = B$PS3$ -> FPT$ALIB_V.ECHO;
      793    13361    2             S_D.ALIB_SAID_QUIET = B$PS3$ -> FPT$ALIB_V.QUIET;
      794    13362    2             S_D.ACCESS = '0'B;
      795    13363    2             IF B$TCB$->B$TCB.STK$->B$ALIBF.CMDSZ = 0
      796    13364    3             THEN DO;                 /* No passed command, do like ctrly delta */
      797    13365    3                  CALL DDR$REPORT(R_ALIB);
      798    13366    3                  GOTO SCAN_COMMAND;
      799    13367    3                END;
      800    13368                                           /* Else set up to parse the passed command */
      801    13369    2             S_D.ACCESS = '1'B;
      802    13370    2             REMEMBER BAD_PS1 IN S_D.REM_ACCESS;
      803    13371    2             S_D.INPUT = B$PS1$->ALIB_COMMAND; /* Get the command */
      804    13372    2             S_D.ACCESS = '0'B;
      805    13373    2             S_D.NCHARS = B$TCB$->B$TCB.STK$->B$ALIBF.CMDSZ;
      806    13374    2             S_D.DO$ = ADDR(NIL);
      807    13375    2             REMEMBER S_FAULT IN S_D.REM_DO_SCAN;
      808    13376    2             S_D.DO_SCAN = '1'B;
      809    13377    2             S_D.DIRECT_OFF = S_D.DIRECT_SIZE;
             13377                      /* Trash current direct command, if any */
      810    13378    2             S_D.DO_ATTACH = 0;
      811    13379    2             S_D.DO_NESTING_LEVEL = 0;
      812    13380    2             IF S_D.ALIB_SAID_ECHO
      813    13381    3             THEN DO;
      814    13382    3                  PTR$ = ADDR(S_D.INPUT);
      815    13383    3                  S_D.ACT = BITASC( '000001101'B );
      816    13384    3                  CALL DDQ$READ_ALIB (PTR$, S_D.NCHARS);
      817    13385    3                END;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:28   
      818    13386    2             CALL DDS$SCAN1 ALTRET(BAD_SCAN1);
      819    13387    2             IF S_D.XUG_BUILTIN THEN GOTO BAD_SCAN1;
      820    13388    2             CMD = S_D.LASTBLT$ -> AT_FIRST.CMD;
      821    13389    2             IF CMD=C_AT OR                /* C_AT */
      822    13390    2               CMD=C_OC OR                 /* C_OC */
      823    13391    2               CMD=C_OA OR                 /* C_OA */
      824    13392    2               CMD=C_OE OR                 /* C_OE */
      825    13393    2               CMD=C_ONCALLS OR            /* C_ONCALLS */
      826    13394    2               CMD=C_ONNODES OR            /* C_ONNODES */
      827    13395    2               CMD=C_ONN OR                /* C_ONN */
      828    13396    2               CMD=C_SAVE OR               /* C_SAVE */
      829    13397    2               CMD=C_WHEN                  /* C_WHEN */
      830    13398    2             THEN GOTO SCAN_COMMAND;
      831    13399    2             GOTO SCAN_COMMAND1;
      832    13400    2   BAD_PS1:  S_D.ERROR = E@BADPS1;         /*E@BADPS1*/
      833    13401    2             CALL DDR$REPORT(R_ALIB);
      834    13402    2             CALL DDE$ERROR;
      835    13403    2             GOTO SCAN_COMMAND;
      836    13404    2   BAD_PS3:
      837    13405    2             S_D.ERROR = E@BADPS3;         /*E@BADPS3*/
      838    13406    2             CALL DDR$REPORT(R_ALIB);
      839    13407    2             CALL DDE$ERROR;
      840    13408    2             GOTO SCAN_COMMAND;
      841    13409    2   BAD_SCAN1: GOTO SCAN_COMMAND;
      842    13410        /*N* WE WILL DO NASTIER THINGS WHEN WE GET RESULTS WORKING */
      843    13411    2   NOT_PRIV: ;                             /* Must have at lease sp mem */
      844    13412    2             S_D.ERROR = E@CANT_ANLZ;      /*E@CANT_ANLZ*/
      845    13413    2             CALL DDE$ERROR;
      846    13414    2             GOTO SCAN_COMMAND;
      847    13415    2           END;                            /* If eccc = alib */
      848    13416        %EJECT;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:29   
      849    13417                                                /**/
      850    13418                                      /* Check for programmed type faults.  DELTA uses
      851    13419                                      this class of faults to implement breakpoints and
      852    13420                                      tracing.  Also check for XCON type faults and
      853    13421                                      matching ON ABORT and ON EXIT conditions.  If
      854    13422                                      a matching condition is found, report it and
      855    13423                                      do the attachements. */
      856    13424                                                /**/
      857    13425    2        IF ECC = %ECC_PROG# THEN DO;       /* ECC_PROG#  */
      858    13426    2             IF SUBC = %SC_DRAIL# THEN GOTO DERAIL;
      859    13427    2             IF S_D.T$T.ACTIVE THEN CALL DDB$TTRESET;
      860    13428    2             IF SUBC = %SC_FLTAG# THEN GOTO FAULTAG;
      861    13429    2           END;
      862    13430    1        IF ECC = %ECC_XCON#
      863    13431    2        THEN DO;
      864    13432    2             S_D.SV.DELENT = 1;            /* entry due to user trap */
      865    13433    2             S_D.IXFIX = 0;
      866    13434    2             IF S_D.ONEXIT ~= 0 AND B$TCB$->B$TCB.STK$->B$XCON.RNST = '0'B
      867    13435    3             THEN DO;
      868    13436    3                  S_D.OUTPUT = 'ON EXIT condition encountered,';
      869    13437    3                  S_D.IXFIX = S_D.ONEXIT;
      870    13438    3                END;
      871    13439    2             ELSE IF S_D.ONABORT ~= 0 AND B$TCB$->B$TCB.STK$->B$XCON.RNST ~= '0'B
      872    13440    3                  THEN DO;
      873    13441    3                       S_D.OUTPUT = 'ON ABORT condition encountered,';
      874    13442    3                       S_D.IXFIX = S_D.ONABORT;
      875    13443    3                     END;
      876    13444    2             IF S_D.IXFIX ~= 0
      877    13445    3             THEN DO;
      878    13446    3                  IF S_D.FIXCOM.INACTIVE(S_D.IXFIX) THEN GOTO USER_FAULT;
      879    13447    3                  S_D.SAVEIC = S_D.TIC;
      880    13448    3                  S_D.FAULTCMD$ = PINCRW(ADDR(S_D.FIXCOM), S_D.IXFIX*SIZEW(F$XCM));
      881    13449    3                  IF S_D.T$T.ACTIVE THEN CALL DDB$TTRESET;
      882    13450    4                  IF S_D.S$TEP.ACTIVE THEN DO;
      883    13451    4                       CALL DDB$STEPRESET;
      884    13452    4                       S_D.S$TEP.ACTIVE = '1'B;
      885    13453    4                     END;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:30   
      886    13454    3                  CALL DDB$RESTORE;
      887    13455    3                  CALL DDA$ON ALTRET(USERGO2);
      888    13456    3                  IF S_D.FAULTCMD$->F$XCM.SILENT THEN S_D.SILENT = '1'B;
      889    13457    4                  ELSE DO;
      890    13458    4                       CALL DDQ$WRITE(ADDR(S_D.OUTPUT), 31);
      891    13459    4                       CALL DUR$ECCRPT(ECCRPT_USER); /* Report user error */
      892    13460    4                     END;
      893    13461    3                  S_D.ENTRYCMD$ = S_D.FAULTCMD$;
      894    13462    3                  REMEMBER USERGO IN S_D.REM_USERGO;
      895    13463    3                  CALL DDA$DOATTACH ALTRET(USERGO);
      896    13464    3                  S_D.SILENT = '0'B;
      897    13465    3                  GOTO SCAN_COMMAND;
      898    13466    3                END;
      899    13467    2           END;
      900    13468        %EJECT;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:31   
      901    13469                                      /* If receive event for start of FPRG under
      902    13470                                         DELTA, do M$DRTN to associate FD with
      903    13471                                         this FPRG and get RU fid and then read
      904    13472                                         message from FD for this FPRG */
      905    13473    1        IF ECC = %ECC_EVENT# AND
      906    13474    1           B$TCB$->B$TCB.STK$->B$EVNT.SUBC = %SUBC_FPRG# AND
      907    13475    1           B$TCB$->B$TCB.STK$->B$FPRG.SUBC2 = %SUBC2_AFD#
      908    13476    2        THEN DO;
      909    13477                  /* Allocate space for context for the FPRG */
      910    13478    2             S_D.SAVEIC = S_D.TIC;
      911    13479    2             CALL DFA$GET_FPRG_DCB (DCBNO);
      912    13480    2             OPDCBNO = B$TCB$ -> B$TCB.STK$-> B$FPRG.DCBNO;
      913    13481    2             S_D.OPDCBNO = OPDCBNO;
      914    13482                  /* Call M$OPEN to get a connection to the FPRG */
      915    13483    2   OPEN_FPRG:
      916    13484    2             FPTOPEN = FPT_OPEN;
      917    13485    2             FPTOPEN.V_ = VECTOR(FPTOPEN.V);
      918    13486    2             FPTOPEN.V.DCB# = DCBNO;
      919    13487    2             FPTOPEN.V.EVENT# = DCBNO;
      920    13488    2             FPTOPEN.V.ORG# = %DBGDCB#;
      921    13489    2             FPTOPEN.V.DBGDCBNO# = OPDCBNO;
      922    13490    2             FPTOPEN.V.RES# = 'FE  ';
      923    13491        /*N*** THE FOLLOWING ASSIGNMENT OF DVFC IS NEEDED UNTIL JOHN
      924    13492               AND RICK FIGURE OUT THE RIGHT WAY TO DO IT ELSEWHERE  */
      925    13493    2             FPTOPEN.V.DVFC# = 'A';
      926    13494    2             CALL M$OPEN (FPTOPEN)
      927    13495    3                  WHENALTRETURN DO;
      928    13496    3                       CALL DUE$ERRMSG;
      929    13497    3                       IF DCBADDR(DCBNO)->F$DCB.FCD#
      930    13498    4                       THEN DO;                        /* CLOSE IT */
      931    13499    4                            FPT$CLOSE = FPT_CLOSE;
      932    13500    4                            FPT$CLOSE.V_ = VECTOR(FPT$CLOSE.V);
      933    13501    4                            FPT$CLOSE.V.DCB# = DCBNO;
      934    13502    4                            CALL M$CLOSE (FPT$CLOSE)
      935    13503    5                                 WHENALTRETURN DO;
      936    13504    5                                      CALL DUE$ERRMSG;
      937    13505    5                                    END;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:32   
      938    13506    4                          END;
      939    13507                            /* Release the DCB */
      940    13508    3                       FPTRELDCB = FPT_RELDCB;
      941    13509    3                       FPTRELDCB.V_ = VECTOR(FPTRELDCB.V);
      942    13510    3                       FPTRELDCB.V.DCB# = DCBNO;
      943    13511    3                       CALL M$RELDCB (FPTRELDCB)
      944    13512    4                            WHENALTRETURN DO;
      945    13513    4                                 CALL DUE$ERRMSG;
      946    13514    4                               END;
      947    13515    3                       GOTO RESTORE_ALL;
      948    13516    3                     END;
      949    13517    2             CALL DFA$SETUP_FPRG (DCBNO) ALTRET(SCAN_COMMAND);
      950    13518    2             GOTO RESTORE_ALL;
      951    13519    2           END;
      952    13520        %EJECT;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:33   
      953    13521                                      /* If receive CLS_DCB event for an FPRG
      954    13522                                         DCB, see if have context for this DCB.
      955    13523                                         If not, return.  Otherwise, read message
      956    13524                                         from FD for this FPRG.  */
      957    13525    1        IF ECC = %ECC_EVENT# AND
      958    13526    1           B$TCB$ -> B$TCB.STK$ -> B$EVNT.SUBC = %SUBC_COMIO# AND
      959    13527    1           B$TCB$ -> B$TCB.STK$ -> B$COMIO.FLAGS.DELTA AND
      960    13528    1           B$TCB$ -> B$TCB.STK$ -> B$COMIO.SUBC2 = %SUBC2_CLS_DCB#
      961    13529    2        THEN DO;
      962    13530    2             S_D.SAVEIC = S_D.TIC;
      963    13531    2             IF S_D.FPRG_CONTEXT$ = ADDR(NIL)
      964    13532    2             THEN GOTO USERGO0;
      965    13533                  /* See if have context for this FPRG DCB */
      966    13534    2             DCBNO = B$TCB$->B$TCB.STK$->B$COMIO.EVID;
      967    13535    2             TFPRG$ = S_D.FPRG_CONTEXT$;
      968    13536    3             DO WHILE (TFPRG$ -> FPRG$CONTEXT.DCBNO ~= DCBNO);
      969    13537    3                  TFPRG$ = TFPRG$ -> FPRG$CONTEXT.NEXT$;
      970    13538    3                  IF TFPRG$ = ADDR(NIL)
      971    13539    3                  THEN GOTO USERGO0;
      972    13540    3                END;
      973    13541    2             GOTO PROCESS_EVENT;
      974    13542    2           END;
      975    13543        %EJECT;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:34   
      976    13544                                      /* If receive event for an FPRG, find its
      977    13545                                         context and read message from FD for this
      978    13546                                         FPRG */
      979    13547    1        IF ECC = %ECC_EVENT# AND
      980    13548    1           B$TCB$->B$TCB.STK$->B$EVNT.SUBC = %SUBC_COMIO# AND
      981    13549    1           B$TCB$->B$TCB.STK$->B$COMIO.FLAGS.DELTA
      982    13550    2        THEN DO;
      983    13551    2             S_D.SAVEIC = S_D.TIC;
      984    13552    2             IF S_D.FPRG_CONTEXT$ = ADDR(NIL)
      985    13553    3             THEN DO;
      986    13554    3   TAKE_SNAP_1:   ;
      987    13555    3                  REMEMBER NEVER1 IN S_D.SCREECH_IC;
      988    13556    3                  CALL M$SCREECH (SNAP_EVENT) ALTRET(NEVER1);
      989    13557    3   NEVER1:        ;
      990    13558    3                  S_D.ERROR = E@BADEVENT;  /* E@BADEVENT */
      991    13559    3                  CALL DDE$ERROR;
      992    13560    3                  S_D.ERROR = E@DELBUG;    /* E@DELBUG */
      993    13561    3                  CALL DDE$ERROR;
      994    13562    3                  GOTO DRTN_QUIT;
      995    13563    3                END;
      996    13564                  /* find context for this FPRG */
      997    13565    2             DCBNO = B$TCB$->B$TCB.STK$->B$COMIO.EVID;
      998    13566    2             TFPRG$ = S_D.FPRG_CONTEXT$;
      999    13567    3             DO WHILE (TFPRG$ -> FPRG$CONTEXT.DCBNO ~= DCBNO);
     1000    13568    3                  TFPRG$ = TFPRG$ -> FPRG$CONTEXT.NEXT$;
     1001    13569    3                  IF TFPRG$ = ADDR(NIL)
     1002    13570    3                  THEN GOTO TAKE_SNAP_1;
     1003    13571    3                END;
     1004    13572    2   PROCESS_EVENT:
     1005    13573    2             S_D.CURRENT_FPRG_CONTEXT$ = TFPRG$;
     1006    13574    2             S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.STATE = %STOPPED;
     1007    13575                  /* Read message from FD for this FPRG */
     1008    13576    2             CALL DFQ$READ_FD (S_D.CURRENT_FPRG_CONTEXT$, '0'B)
     1009    13577    3                  WHENALTRETURN DO;
     1010    13578    3                       CALL DUE$ERRMSG;
     1011    13579    3                       GOTO RESTORE_ALL;
     1012    13580    3                     END;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:35   
     1013    13581    2             IF S_D.DEBUGA(%DB@ECC)
     1014    13582    3             THEN DO;
     1015    13583    3                  CALL DFR$EVENTRPT(%DB@ECC);
     1016    13584    3                  IF S_D.DEBUG
     1017    13585    4                  THEN DO;
     1018    13586    4                       CALL DUD$MINI;
     1019    13587    4                       S_D.PROMPT_SIZE = 0;
     1020    13588    4                     END;
     1021    13589    3                END;
     1022    13590    2   DO_MESSAGE:
     1023    13591                  /* Make sure is a BRKRSP message */
     1024    13592    2             IF GD$MSG.FNC ~= %FPRG_BRKRSP# AND GD$MSG.FNC ~= %GD#RSPTRACE
     1025    13593    3             THEN DO;
     1026    13594    3                  IF TFPRG$ -> FPRG$CONTEXT.XDELTA AND
     1027    13595    3                    GD$MSG.FNC = %GD#RSPBADMSG
     1028    13596    4                  THEN DO;
     1029    13597    4                       S_D.ERROR = E@BADMSG; /* E@BADMSG */
     1030    13598    4                       CALL DDE$ERROR;
     1031    13599    4                       GOTO SCAN_COMMAND;
     1032    13600    4                     END;
     1033    13601    3                  REMEMBER NEVER IN S_D.SCREECH_IC;
     1034    13602    3                  CALL M$SCREECH (SNAP_MESSAGE) ALTRET(NEVER);
     1035    13603        /*S* SCREECH_CODE: DUX-S$DUMESSAGE
     1036    13604             TYPE: SNAP
     1037    13605             MESSAGE: Unexpected message received from DELTA_F on the FEP
     1038    13606             REMARKS: A message other than the one expected was received
     1039    13607        */
     1040    13608    3   NEVER:         ;
     1041    13609    3                  S_D.ERROR = E@BADMESSAGE;   /* E@BADMESSAGE */
     1042    13610    3                  CALL DDE$ERROR;
     1043    13611    3                  S_D.ERROR = E@DELBUG;       /* E@DELBUG */
     1044    13612    3                  CALL DDE$ERROR;
     1045    13613    3                  GOTO SCAN_COMMAND;
     1046    13614    3                END;
     1047    13615    2             FPRG_IC = GD$MSG.BRKRSP.ADR$;
     1048    13616    2             S_D.MOD_L6.ADDRESS = FPRG_IC;
     1049    13617    2             S_D.MOD_L6.SEG = 3;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:36   
     1050    13618    2             S_D.MOD_L6.DESC# = 0;
     1051    13619    2             S_D.MOD_L6.NOT_IS = '0'B;
     1052    13620    2             S_D.MOD_L6.VALUE.SIZE = GD$MSG.BRKRSP.DATA_SIZE;
     1053    13621    3             DO I = 0 TO GD$MSG.BRKRSP.DATA_SIZE - 1;
     1054    13622    3                  S_D.MOD_L6.VALUE.OPS(I) = GD$MSG.BRKRSP.DATA(I);
     1055    13623    3                END;
     1056    13624    2             S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.ADDRESS = FPRG_IC;
     1057    13625    2             IF S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.XDELTA
     1058    13626    3             THEN DO;
     1059    13627    3                  TEMP1 = BITBIN(GD$MSG.BRKRSP.ERRCODE);
     1060    13628    3                  TEMP2B.B1 = TEMP1B.B1;
     1061    13629    3                  TEMP2B.B2 = TEMP1B.B2;
     1062    13630    3                  TEMP2B.B3 = TEMP1B.B3;
     1063    13631    3                  TEMP2B.B4 = TEMP1B.B4;
     1064    13632    3                  S_D.BRKRSP_ERRCODE = TEMP2;
     1065    13633    3                END;
     1066    13634    2             ELSE S_D.BRKRSP_ERRCODE = BITBIN(GD$MSG_HOST.BRKRSP.ERRCODE);
     1067    13635    2             S_D.USERNO = GD$MSG.BRKRSP.USER#;
     1068    13636    2             S_D.MBU = GD$MSG.BRKRSP.MBU;
     1069    13637    2             FAULT = GD$MSG.BRKRSP.BRK#;
     1070    13638    2             IF (FAULT - (%GD#MAXBRKNUM + 1)) = %G_FPRG_START2#
     1071    13639    3             THEN DO;
     1072    13640                       /* FPRG started via M$LDTRC - need to do an M$DRTN
     1073    13641                          to get new RU name and update context for new
     1074    13642                          FPRG  */
     1075    13643    3                  FPT$DRTN.FPRG_FID_ = VECTOR(VLR_FPRG_FID);
     1076    13644    3                  FPT$DRTN.V.FPRG_DCB# = DCBNO;
     1077    13645    3                  FPT$DRTN.V.WAKE_FD# = '1'B;
     1078    13646    3                  CALL M$DRTN (FPT$DRTN)
     1079    13647    4                       WHENALTRETURN DO;
     1080    13648    4                            CALL DUE$ERRMSG;
     1081    13649    4                            FPT$DRTN.V.WAKE_FD# = '0'B;
     1082    13650    4                            FPT$DRTN.V.FPRG_DCB# = 0;
     1083    13651    4                            FPT$DRTN.FPRG_FID_ = VECTOR(NIL);
     1084    13652    4                            GOTO RESTORE_ALL;
     1085    13653    4                          END;
     1086    13654                                                /* Pick up run unit name for schema */
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:37   
     1087    13655    3                  S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.RUFID.FNAME.SIZE =
             13655                           VLR_FPRG_FID.NAME.L;
     1088    13656    3                  S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.RUFID.FNAME.TEXT =
             13656                           VLR_FPRG_FID.NAME.TEXT;
     1089    13657    3                  S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.RUFID.ACCT = VLR_FPRG_FID.
             13657                           ACCT;
     1090    13658    3                  S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.RUFID.PASS = VLR_FPRG_FID.
             13658                           PASS;
     1091    13659    3                  S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.RUFID.PSN = VLR_FPRG_FID.
             13659                           PSN;
     1092    13660    3                  S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.RUFID.MODTIME =
             13660                           VLR_FPRG_FID.MODTIME;
     1093    13661    3                  FPT$DRTN.V.WAKE_FD# = '0'B;
     1094    13662    3                  FPT$DRTN.V.FPRG_DCB# = 0;
     1095    13663    3                  FPT$DRTN.FPRG_FID_ = VECTOR(NIL);
     1096    13664    3                  RES = S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.RES;
     1097    13665    3                  RES_SIZE = S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.RES_SIZE;
     1098    13666    4                  DO I = 1 TO S_D.FIXLAST;
     1099    13667    4                       IF S_D.FIXCOM.FPRG(I)
     1100    13668    5                       THEN DO;
     1101    13669    5                            IF SUBSTR(S_D.FIXCOM.FPRG_RES(I), 0, S_D.FIXCOM.
             13669                                     FPRG_RES_SIZE(I))
     1102    13670    5                               = SUBSTR(RES, 0, RES_SIZE)
     1103    13671    6                            THEN DO;
     1104    13672    6                                 S_D.KILL1 = I;
     1105    13673    6                                 CALL DDA$KILL1;
     1106    13674    6                               END;
     1107    13675    5                          END;
     1108    13676    4                     END;
     1109    13677    3                END;
     1110    13678                  /* Report Host program stopped */
     1111    13679    2             IF NOT S_D.DEBUG_CMD AND GD$MSG.FNC ~= %GD#RSPTRACE AND
     1112    13680    2             ((FAULT >= 1 AND FAULT <= %GD#MAXBRKNUM) AND
     1113    13681    2               PINCRW(ADDR(S_D.FIXCOM),
     1114    13682    2               S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.FIXCOM_INDEX(FAULT)*SIZEW(
             13682                        F$XCM))->F$XCM.SILENT = '0'B)
     1115    13683    2             THEN CALL DDR$REPORT(R_STOP);
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:38   
     1116    13684                  /* Set up access to FPRG RU */
     1117    13685    2             CALL DFA$FPRG (FPRG_IC);
     1118    13686    2             IF GD$MSG.FNC = %GD#RSPTRACE
     1119    13687    3             THEN DO;
     1120    13688    3                  CALL DFA$TRACE_REPORT ALTRET(RESTORE_ALL);
     1121    13689    3                  IF NOT S_D.DEBUG_CMD
     1122    13690    3                  THEN CALL DFA$KILL_FPRG;
     1123    13691    3                  GOTO PROCESS_EVENT;
     1124    13692    3                END;
     1125    13693    2             IF FAULT >= 1 AND FAULT <= %GD#MAXBRKNUM
     1126    13694    3             THEN DO;
     1127    13695                       /* Have hit an AT breakpoint */
     1128    13696    3                  S_D.IXFIX = S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.FIXCOM_INDEX(
             13696                           FAULT);
     1129    13697    3                  S_D.FAULTCMD$ = PINCRW(ADDR(S_D.FIXCOM), S_D.IXFIX*SIZEW(F$XCM));
     1130    13698    3                  IF S_D.FAULTCMD$ -> F$XCM.SILENT
     1131    13699    3                  THEN S_D.SILENT = '1'B;
     1132    13700    4                  ELSE DO;
     1133    13701    4                       IF S_D.FAULTCMD$ -> F$XCM.CMD ~= C_AT /* C_AT */ AND
     1134    13702    4                          S_D.FAULTCMD$ -> F$XCM.CMD ~= C_OC /* C_OC */ AND
     1135    13703    4                          S_D.FAULTCMD$ -> F$XCM.CMD ~= C_ONCALLS /* C_ONCALLS */ AND
     1136    13704    4                          S_D.FAULTCMD$ -> F$XCM.CMD ~= C_OE /* C_OE */
     1137    13705    5                       THEN DO;
     1138    13706    5                            S_D.ERROR = E@BADBRKPNT;   /* E@BADBRKPNT */
     1139    13707    5                            CALL DDE$ERROR;
     1140    13708    5                            S_D.ERROR = E@DELBUG;       /* E@DELBUG */
     1141    13709    5                            CALL DDE$ERROR;
     1142    13710    5                            GOTO RESTORE_ALL;
     1143    13711    5                          END;
     1144    13712    4                       IF S_D.FAULTCMD$ -> F$XCM.CMD = C_AT  /* C_AT */
     1145    13713    4                       THEN CALL DFR$REPORT(%R_FPRG_AT);
     1146    13714    5                       ELSE DO;
     1147    13715    5                            IF S_D.FAULTCMD$ -> F$XCM.CMD = C_OC  /* C_OC */
     1148    13716    5                            THEN CALL DFR$REPORT(%R_FPRG_ONCALL);
     1149    13717    5                            IF S_D.FAULTCMD$->F$XCM.CMD = C_ONCALLS  /* C_ONCALLS */
     1150    13718    6                            THEN DO;
     1151    13719    6                                 IF S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.ONCALLS_X
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:39   
     1152    13720    7                                 THEN DO;
     1153    13721    7                                      CALL DDF$FIND_PEDEF(FPRG_IC, EDEF$) ALTRET(
             13721                                               NO_REPORT);
     1154    13722    7                                      IF ( EDEF$ -> B$EDEF.CST = %STD#
     1155    13723    7                                        OR EDEF$ -> B$EDEF.CST = %ASYNC#
     1156    13724    7                                        OR EDEF$ -> B$EDEF.CST = %FUNC#
     1157    13725    7                                        OR EDEF$ -> B$EDEF.CST = %XSTD#
     1158    13726    7                                        OR EDEF$ -> B$EDEF.CST = %XASYNC#
     1159    13727    7                                        OR EDEF$ -> B$EDEF.CST = %XFUNC# )
     1160    13728    7                                        AND ( EDEF$ -> B$EDEF.LFLAGS.SOURCE = %
             13728                                                 SOURCE_OBJECT#
     1161    13729    7                                        OR EDEF$ -> B$EDEF.LFLAGS.SOURCE = %
             13729                                                 SOURCE_ULIB# )
     1162    13730    7                                      THEN GOTO REPORT_ONCALL;
     1163    13731    7        NO_REPORT:                    CALL DFA$GO('0'B) ALTRET(RESTORE_ALL);
     1164    13732    7                                    END;
     1165    13733    6   REPORT_ONCALL:                CALL DFR$REPORT(%R_FPRG_ONCALL);
     1166    13734    6                               END;
     1167    13735    5                          END;
     1168    13736    4                     END;
     1169    13737    3   DO_ATTACH:
     1170    13738    3                  S_D.DO$ = PINCRW(S_D.VARCOM$, S_D.FAULTCMD$ -> F$XCM.FAI);
     1171    13739    3                  S_D.DO$->AT_FIRST.CURRENT_COUNT = S_D.DO$->AT_FIRST.BYPASS_COUNT;
     1172    13740    3                  IF S_D.DO$ -> AT_FIRST.ATT_OFFSET = 0
     1173    13741    3                  THEN S_D.DO$ = ADDR(NIL);
     1174    13742    3                  S_D.ENTRYCMD$ = S_D.FAULTCMD$;
     1175    13743    3                  REMEMBER USERGO1 IN S_D.REM_USERGO;
     1176    13744    3                  CALL DDA$DOATTACH ALTRET (USERGO1);
     1177    13745    3                  S_D.SILENT = '0'B;
     1178    13746    3                  S_D.FAULTCMD$ = ADDR(NIL);
     1179    13747    3                END;
     1180    13748    3             ELSE DO;
     1181    13749                       /* Have gotten a trap */
     1182    13750    3                  IF S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.XDELTA AND
     1183    13751    3                    FAULT = 0
     1184    13752    4                  THEN DO;
     1185    13753    4                       IF S_D.STEP_L6
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:40   
     1186    13754    4                       THEN CALL DFR$REPORT(%R_FPRG_STEP);
     1187    13755    4                       ELSE CALL DFR$REPORT(%R_XDELTA_BREAK);
     1188    13756    4                     END;
     1189    13757    4                  ELSE DO;
     1190    13758    4                       S_D.FAULT = FAULT - (%GD#MAXBRKNUM + 1);
     1191    13759    4                       IF S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.XDELTA AND
     1192    13760    4                         FAULT = 0
     1193    13761    4                       THEN CALL DFR$REPORT(%R_XDELTA_SCREECH);
     1194    13762    5                       ELSE DO;
     1195    13763    5                            IF S_D.STEP_L6
     1196    13764    5                            THEN CALL DFR$REPORT(%R_FPRG_STEP);
     1197    13765    6                            ELSE DO;
     1198    13766    6                                 IF S_D.FAULT = %G_FPRG_EXIT#
     1199    13767    6                                 THEN S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.STATE =
             13767                                          %ATEXIT;
     1200    13768    6                                 IF S_D.FAULT = %G_FPRG_EXIT# AND
     1201    13769    6                                   S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.ONEXIT ~=
             13769                                            0
     1202    13770    7                                 THEN DO;
     1203    13771    7                                      FAULT = S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT
             13771                                               .ONEXIT;
     1204    13772    7                                      S_D.IXFIX = S_D.CURRENT_FPRG_CONTEXT$ ->
             13772                                               FPRG$CONTEXT.FIXCOM_INDEX(FAULT);
     1205    13773    7                                      S_D.FAULTCMD$ = PINCRW(ADDR(S_D.FIXCOM), S_D.
             13773                                               IXFIX*SIZEW(F$XCM));
     1206    13774    7                                      S_D.OUTPUT = 'ON EXIT condition encountered,';
     1207    13775    7                                      CALL DDQ$WRITE(ADDR(S_D.OUTPUT), 31);
     1208    13776    7                                      GOTO DO_ATTACH;
     1209    13777    7                                    END;
     1210    13778    6                                 CALL DFR$REPORT(%R_FPRG_TRAP);
     1211    13779    6                               END;
     1212    13780    5                          END;
     1213    13781    4                     END;
     1214    13782    3                END;
     1215    13783    2             GOTO RESTORE_ALL;
     1216    13784    2           END;
     1217    13785        %EJECT;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:41   
     1218    13786
     1219    13787
     1220    13788
     1221    13789
     1222    13790
     1223    13791                                                /**/
     1224    13792                                      /* By this point, we have determined that entry
     1225    13793                                      was caused by some user fault, ie. DELTA did
     1226    13794                                      not cause it for breakpointing or tracing and
     1227    13795                                      the monitor is not reporting some special event
     1228    13796                                      for DELTA eg. M$LINK or M$RETRY.  This code
     1229    13797                                      is also entered if the IC or tag of a programmed
     1230    13798                                      fault (DERAIL or FAULT_TAG) did not match a
     1231    13799                                 breakpoint, or XEQ, STEP, TRACE TRANSFER, TRACE CALL,
     1232    13800                                 or EIS stop were not active.
     1233    13801
     1234    13802                                 This is also where XDELTA joins the mainstream.
     1235    13803
     1236    13804                                 For user DELTA only, the fault is converted to
     1237    13805                                 an index to the KEEP/TRAP/IGNORE arrays.  If
     1238    13806                                 the indexed bit is set on the KEEP list, the fault
     1239    13807                                 is reported, and we get a command.  If the fault
     1240    13808                                 is on the TRAP list, we setup to return control
     1241    13809                                 to the users handler.  If the fault is on the
     1242    13810                                 ignore list, the IC is adjust to avoid re-occurence
     1243    13811                                 of the fault, and we setup to return to the user.
     1244    13812
     1245    13813                                 XDELTA simply calls DDB$USERFAULT.  The fault is
     1246    13814                                 checked to see if it fits in the current XDELTA KEEP
     1247    13815                                 catagory (ALL, MON, SCREECH, NONE).  If it does not,
     1248    13816                                 DDB$USERFAULT altrets, and we setup for a return
     1249    13817                                 to the monitor fault handler with a code in
     1250    13818                                 a register saying 'XDELTA didn't want this one, but
     1251    13819                                 you might'.  If the fault is to be kept, DDB$USERFAULT
     1252    13820                                 will report the fault, and we goto scan. */
     1253    13821                                                /**/
     1254    13822    1   USER_FAULT: ;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:42   
     1255    13823    1        S_D.FAULTCMD$ = ADDR(NIL);
     1256    13824    1        CALL DDB$TTRESET;
     1257    13825    1        IF D_XDELTA THEN GOTO CALL_FAULT;
     1258    13826                                                /* Keep/trap/ignore check */
     1259    13827    1        IF S_D.X$EQ.ACTIVE THEN GOTO CALL_FAULT;
             13827                 /* Keep/trap/ignore don't count on xeq */
     1260    13828    1        S_D.SV.DELENT = 1;                 /* Entry due to user trap */
     1261    13829    1        IF ECC = %ECC_INT# AND SUBC = %SC_BYC# THEN GOTO CALL_FAULT;
             13829                 /* LET HIM TRAP BREAK, BUT DELTA ALWAYS GETS CNTL-Y DELTA. */
     1262    13830    1        IF ECC=%ECC_ERROR# THEN FAULT = 10+SUBC; /* Get index from fault code */
     1263    13831    1        ELSE IF ECC = %ECC_PROG# THEN FAULT = 7+SUBC;
     1264    13832    1             ELSE IF ECC=%ECC_ARITH# THEN FAULT = 5+SUBC;
     1265    13833    1                  ELSE FAULT = ECC;
     1266    13834    2        IF S_D.TRAP.FLAG(FAULT) THEN DO;
     1267    13835    2             IF ECC = %ECC_XCON#
     1268    13836    3             THEN DO;
     1269    13837        /*             IF UECCB$->B$ECCB.XCONF.PROG
     1270    13838                       THEN DO;          XCON in progress, this should never happen
     1271    13839                                              this should have been ECC=%ECC_EXCRTN#
     1272    13840                            S_D.ERROR = E@DELBUG;   E@DELBUG
     1273    13841                            CALL DDE$ERROR;    commented out per star 30293
     1274    13842                            CALL DUR$ECCRPT(ECCRPT_USER);
     1275    13843                            GOTO RESTORE_ALL;
     1276    13844                          END;
     1277    13845                       ELSE */
     1278    13846    3                       IF UECCB$->B$ECCBI.FLAGS(%ECC_XCON#) = '0'B
     1279    13847    4                       THEN DO;
     1280    13848    4                            S_D.SV.DELENT = 1; /* Entry due to user trap */
     1281    13849    4                            S_D.ERROR = E@NO_TRAP_CONTROL; /*E@NO_TRAP_CONTROL*/
     1282    13850    4                            CALL DDE$ERROR;
     1283    13851    4                            GOTO CALL_FAULT;
     1284    13852    4                          END;
     1285    13853    3                END;
     1286    13854    2             S_D.SAVEIC = S_D.TIC;
     1287    13855    2             TRAP = '1'B;                  /* Remember this if the drtn altrets */
     1288    13856    2             FPT$DRTN.V.SETECC# = '0'B;    /* Uses users ecc */
     1289    13857    2             CALL DDB$EISRESET;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:43   
     1290    13858    3             IF S_D.S$TEP.ACTIVE THEN DO;
     1291    13859    3                  CALL DDB$STEPRESET;
     1292    13860    3                  S_D.S$TEP.ACTIVE = '1'B; /* Continue stepping thru fault */
     1293    13861    3                END;
     1294    13862    2             S_D.GOIC = S_D.SAVEIC;
     1295    13863    2             GOTO USERGO0;
     1296    13864    2           END;
     1297    13865    2        ELSE IF S_D.IGNORE.FLAG(FAULT) THEN DO;
     1298    13866    2                  S_D.SAVEIC = S_D.TIC;
     1299    13867    2                  IF ECC > %ECC_XCON# OR (ECC = %ECC_XCON# AND NOT B$TCB$->B$TCB.STK$->
             13867                           B$XCON.RNST.MABRT)
     1300    13868    3                  THEN DO;  /* Update the ic or the fault will just happen again */
     1301    13869    3                       CALL DDB$INTERP(PINCRW(UIS$, S_D.SAVEIC), TYPE, LENGTH);
     1302    13870    3                       S_D.SAVEIC = S_D.SAVEIC+LENGTH;
     1303    13871    3                     END;
     1304    13872    2                  S_D.GOIC = S_D.SAVEIC;
     1305    13873    2                  GOTO USERGO0;
     1306    13874    2                END;
     1307    13875    2             ELSE IF NOT S_D.KEEP.FLAG(FAULT) THEN DO;
             13875                      /* If its not one of these we're in big trouble */
     1308    13876    2                       S_D.ERROR = E@DELBUG; /*E@DELBUG*/
     1309    13877    2                       CALL DDE$ERROR;
     1310    13878    2                     END;
     1311    13879    1   CALL_FAULT: ;
     1312    13880    1         IF FAULT = %ECC_EVENT# THEN S_D.CAN_I_DO_BREAK = '0'B;
     1313    13881    1        CALL DDB$USERFAULT ALTRET(USERGO);
     1314    13882                                           /* If BREAK key hit and there are
     1315    13883                                              FPRGS, stop all FPRGS  */
     1316    13884    1        IF ECC = %ECC_INT# AND SUBC = %SC_BRK#
     1317    13885    2        THEN DO;
     1318    13886    2   BRK:
     1319    13887    2             IF S_D.FPRG_CONTEXT$ ~= ADDR(NIL)
     1320    13888    3             THEN DO;
     1321    13889    3                  CALL DFA$STOP_FPRGS
     1322    13890    4                    WHENALTRETURN DO;
     1323    13891    4                       S_D.BREAK = '0'B;
     1324    13892    4                       GOTO SCAN_COMMAND;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:44   
     1325    13893    4                     END;
     1326    13894    3                  S_D.BREAK = '0'B;
     1327    13895    3                END;
     1328    13896    2           END;
     1329    13897    1        GOTO SCAN_COMMAND;
     1330    13898        %EJECT;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:45   
     1331    13899                                                /**/
     1332    13900                                           /* The FAULT_TAG fault is used by DELTA to
     1333    13901                                           implement TRACE CALLS and ON CALLS.  If the
     1334    13902                                           trace flag is set, we assume all fault_tags
     1335    13903                                           were set by use.  Note that if the user has
     1336    13904                                           fault_tags on some of his instructions, DELTA
     1337    13905                                           will get confused.  If the trace flag is not
     1338    13906                                           set, we goto user_fault. */
     1339    13907                                                /**/
     1340    13908    1   FAULTAG: ;
     1341    13909    1        IF S_D.TR$INFO.ACTIVE = '0'B THEN GOTO USER_FAULT;
     1342    13910    1        IF S_D.ONCALLS ~= 0
     1343    13911    2        THEN DO;                           /* Its ON CALLS */
     1344    13912    2             S_D.IXFIX = S_D.ONCALLS;
     1345    13913    2             IF S_D.TIC ~= S_D.SL THEN S_D.SAVEIC = S_D.TIC;
     1346    13914    2             S_D.GOIC = S_D.SAVEIC;
     1347    13915    2             IF S_D.S$TEP.ACTIVE
     1348    13916    3             THEN DO;
     1349    13917    3                  CALL DDB$STEPRESET;
     1350    13918    3                  S_D.S$TEP.ACTIVE = '1'B;
     1351    13919    3                END;
     1352    13920    2             CALL DDB$RESTORE;
     1353    13921    2             S_D.FAULTCMD$ = PINCRW(ADDR(S_D.FIXCOM), S_D.IXFIX*SIZEW(F$XCM));
     1354    13922    2             CALL DDA$ON ALTRET(USERGO2);  /* Check IF spec */
     1355    13923    2             IF S_D.FAULTCMD$->F$XCM.SILENT THEN S_D.SILENT = '1'B;
     1356    13924    2             ELSE CALL DDR$REPORT (R_ONCALL);
     1357    13925    2             S_D.ENTRYCMD$ = S_D.FAULTCMD$;
     1358    13926    2             REMEMBER USERGO IN S_D.REM_USERGO;
     1359    13927    2             CALL DDA$DOATTACH ALTRET(USERGO);
     1360    13928    2             S_D.SILENT = '0'B;
     1361    13929    2             GOTO SCAN_COMMAND;
     1362    13930    2           END;
     1363    13931    2        ELSE DO;                           /* TRACE CALLS */
     1364    13932    2             S_D.FAULTCMD$ = ADDR(TR_FAKE_FRAME);
     1365    13933    2             ADDR(TR_FAKE_FRAME)->F$XCM.CMD = C_TC; /*C_TC*/
     1366    13934    2             IF S_D.TIC ~= S_D.SL THEN S_D.SAVEIC = S_D.TIC;
             13934                      /* Report the correct ic when breakpoint is set on called proc */
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:46   
     1367    13935    2             CALL DDR$REPORT(R_TRACECALLS);
     1368    13936    2             CALL DDB$RESTORE;
     1369    13937    2             S_D.DO$ = ADDR(NIL);
     1370    13938    2             CALL DDA$GO   ALTRET(SCAN_COMMAND);
     1371    13939    2             GOTO USERGO;
     1372    13940    2           END;
     1373    13941        %EJECT;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:47   
     1374    13942                                      /* The following routines handle DERAIL faults.
     1375    13943                                 A DERAIL fault was DELTA caused if a DRL instruction
     1376    13944                                 was planted in the user's code to:
     1377    13945
     1378    13946                            1. Interrupt execution on transfer instructions if trace
     1379    13947                            transfer is active.
     1380    13948
     1381    13949                            2. Interrupt execution after a step.
     1382    13950
     1383    13951                            3. Interrupt execution after an xeq.
     1384    13952
     1385    13953                            4. Interrupt execution at name in on call name.
     1386    13954
     1387    13955                       5. Allow replant of the at derail after the original instruction
     1388    13956                       has been executed in its original place in the user's program,
     1389    13957                       (eis-stopper).
     1390    13958
     1391    13959                       6. Interrupt execution at an instruction breakpoint. (at)
     1392    13960
     1393    13961                       The tag field of the DRL indicates which of the
     1394    13962                       above conditions is true.  A table of information
     1395    13963                       exists for XEQ, STEP, EIS, and TRACE containing
     1396    13964                       the IC where DELTA planted the derail.  This
     1397    13965                       IC is check against the current IC to protect against
     1398    13966                       DRL instructions in the users code.  For the
     1399    13967                       AT and ONCALL DRL, the Y field contains the
     1400    13968                       id of the associated stored command.  Part of
     1401    13969                       the stored command information is the IC where
     1402    13970                       the derail was planted.
     1403    13971
     1404    13972                       If the IC does not match, we goto user_fault. */
     1405    13973                                                /**/
     1406    13974    1   DERAIL: ;
     1407    13975    1        S_D.IXFIX = S_D.FAULTINS$->HOST_INSTR.Y;
     1408    13976    1        IF S_D.IXFIX = BITBIN( '777777'O )
     1409    13977    1          AND D_XDELTA AND U$SE.TYPE = USE_MON /*USE_MON*/
     1410    13978    1        THEN GOTO DXA$KEYENT;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:48   
     1411    13979    1        TAGG = S_D.FAULTINS$->HOST_INSTR.TAGG;
     1412    13980    1        IF TAGG = DRL_TT OR TAGG = DRL_STT THEN GOTO DRLTT;
     1413    13981    1        IF S_D.T$T.ACTIVE THEN CALL DDB$TTRESET;
     1414    13982    1        IF TAGG = DRL_STEP THEN GOTO DRLSTEP;
     1415    13983    1        IF TAGG = DRL_XEQ THEN GOTO DRLXEQ;
     1416    13984    1        IF TAGG = DRL_WHEN THEN GOTO DRLWHEN;
     1417    13985    1        IF S_D.IXFIX > S_D.FIXLAST THEN GOTO USER_FAULT;
     1418    13986    1        S_D.FAULTCMD$ = PINCRW(ADDR(S_D.FIXCOM), S_D.IXFIX*SIZEW(F$XCM));
     1419    13987    1        IF TAGG = DRL_EIS THEN GOTO DRLEIS;
     1420    13988    1        IF TAGG = DRL_AT THEN GOTO DRLAT;
     1421    13989    1        GOTO USER_FAULT;
     1422    13990                                                /**/
     1423    13991                            /*  If this derail is the trace transfer stopper, the saved
     1424    13992                            instruction is restored.  If it will transfer, DDB$SET_TT is
     1425    13993                       called to report this transfer, and set up for the next one. */
     1426    13994                                                /**/
     1427    13995    1   DRLTT: ;
     1428    13996    1        IF NOT S_D.T$T.ACTIVE OR NOT (S_D.TIC = S_D.T$T.RETLOC OR S_D.TIC = S_D.T$T.
             13996                 SAVELOC)
     1429    13997    1        THEN GOTO USER_FAULT;
     1430    13998    1        IF TAGG = DRL_STT THEN S_D.T$T.SHARED = '1'B;
     1431    13999    1        ELSE S_D.T$T.SHARED = '0'B;
     1432    14000    1        CALL DDB$TTRESET;                  /* Restore saved instruction */
     1433    14001    1        S_D.SAVEIC = S_D.TIC;
     1434    14002    1        S_D.GOIC = S_D.SAVEIC;
     1435    14003    1        CALL DDB$SET_TT ALTRET(RESTORE_ALL);
             14003                 /* Set up for next stop, report this one if appropriate */
     1436    14004    1        GOTO USERGO0;
     1437    14005                                                /**/
     1438    14006        /*
     1439    14007             Drlstep verifies that the derail is the step stopper.  The
     1440    14008             derailed instruction is restored.  The user's program is restored,
     1441    14009             location is reported and the step table is set inactive.
     1442    14010             Control goes to the scanner. */
     1443    14011                                                /**/
     1444    14012    1   DRLSTEP: ;
     1445    14013    1        IF S_D.EWSQ# ~= S_D.S$TEP.EWSQ OR NOT (S_D.S$TEP.LOC = S_D.TIC OR
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:49   
     1446    14014    1          (S_D.S$TEP.ALT AND S_D.S$TEP.ALTLOC = S_D.TIC))
     1447    14015    1        THEN GOTO USER_FAULT;
     1448    14016    1        CALL DDB$STEPRESET ALTRET(USER_FAULT);
     1449    14017    1        CALL DDB$RESTORE;
     1450    14018    1        S_D.SAVEIC = S_D.TIC;
     1451    14019    1        SAVEIC = S_D.SAVEIC;
     1452    14020    1        IF S_D.BYPASS AND D_SYMBOLS
     1453    14021    2        THEN DO;
     1454    14022    2             IF S_D.QSCH.OK
     1455    14023    2             THEN EDEF$ = PINCRW( S_D.EDEF$, SIZEW(B$EDEF) * S_D.QSCH.PEDEF# );
     1456    14024    2             ELSE CALL DDF$FIND_PEDEF( SAVEIC, EDEF$ ) ALTRET( STEP_MORE );
     1457    14025    2             IF S_D.QSCH.OK
     1458    14026    2             THEN CALL DDS$ES_INQ (SAVEIC) ALTRET (STEP_MORE);
     1459    14027    2             IF EDEF$ -> B$EDEF.CST = %NSTD#
     1460    14028    2             THEN GOTO STEP_MORE;          /* Don't report if non-standard */
     1461    14029    2           END;
     1462    14030    1        CALL DDA$STEP_DECR ALTRET(STEP_MORE);
     1463    14031    1        S_D.S$TEP.ONE_FLAG = '0'B;
     1464    14032    1        CALL DDR$REPORT(R_STEP);
     1465    14033    1        S_D.STEP = '1'B;
     1466    14034    1        GOTO SCAN_COMMAND;
     1467    14035    1   STEP_MORE: CALL DDA$STEP_MORE ALTRET(CANT_STEP);
     1468    14036    1        GOTO USERGO;
     1469    14037    1   CANT_STEP:
     1470    14038    1        CALL DDE$ERROR;
     1471    14039    1        GOTO SCAN_COMMAND;
     1472    14040        /*D*  Drlxeq verifies that the derail is the xeq stopper.  The user's
     1473    14041              program is restored.  S_D.SAVEIC is not updated.
     1474    14042              Points to the special location.  Control goes to the scanner.
     1475    14043              */
     1476    14044    1   DRLXEQ: ;
     1477    14045    1        IF S_D.X$EQ.LOC ~=S_D.TIC THEN GOTO USER_FAULT;
     1478    14046    1        CALL DDB$XEQRESET ALTRET(USER_FAULT);
     1479    14047    1        CALL DDS$ES_INQ (S_D.SAVEIC);
             14047                 /* Establish schema based on users ic, not on special location */
     1480    14048    1        CALL DDS$SET_Q2C;
     1481    14049    1        CALL DDB$RESTORE;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:50   
     1482    14050    1        GOTO SCAN_COMMAND;
     1483    14051                                                /**/
     1484    14052                            /* Drleis verifies that the derail is the eis stopper.  It's
     1485    14053                            called an eis stopper because it's used after multi-word
     1486    14054                            eis instructions.  Plantone is called to plant the at derail
     1487    14055                            in the position specified by the at command (which started
     1488    14056                       this whole eis-stopper business).  DDB$EISRESTORE is called to
     1489    14057                       restore the instruction to the location of the EIS-STOPPER...
     1490    14058                       That instruction having been saved in the eis information
     1491    14059                       table (E$IS).  The eis-stopper is set inactive, S_D.SAVEIC is
     1492    14060                       updated.  Goic is set from S_D.SAVEIC and control passes back
     1493    14061                       to the user's program. */
     1494    14062                                                /**/
     1495    14063    1   DRLEIS: ;
     1496    14064    1        IF NOT (S_D.E$IS.LOC = S_D.TIC OR
     1497    14065    1          (S_D.E$IS.C.JUNK(0) = 1 AND S_D.E$IS.LOC+1 = S_D.TIC))
     1498    14066    1        THEN GOTO USER_FAULT;
     1499    14067    1        CALL DDB$EISRESET ALTRET(USER_FAULT);
     1500    14068    1        FATT$ = PINCRW(S_D.VARCOM$,S_D.FAULTCMD$->F$XCM.FAI);
     1501    14069    1        SAVEINS$ = ADDR(FATT$->AT_FIRST.ORIG_INSTR);
     1502    14070    1        DRL$ = PINCRW(UIS$,(S_D.FAULTCMD$->F$XCM.CDF));
     1503    14071    1        CALL DDB$PLANTONE(DRL$,S_D.IXFIX,DRL_AT,SAVEINS$);
     1504    14072    1        S_D.SAVEIC = S_D.TIC;
     1505    14073    1        S_D.GOIC = S_D.SAVEIC;
     1506    14074    1        GOTO USERGO;
     1507    14075                                                /**/
     1508    14076        /*
     1509    14077             Drlat verifies that the derail corresponds to a stored 'AT' or 'ON CALL name'
     1510    14078             command.  S_D.SAVEIC        is updated, the user's program is restored.
     1511    14079             The breakpoint is reported.  Attachments to the at are
     1512    14080             performed.  At attached goto will pass control to usergo.
     1513    14081             Otherwise, control passes to the scanner. */
     1514    14082                                                /**/
     1515    14083    1   DRLAT: ;
     1516    14084    1        IF S_D.FAULTCMD$->F$XCM.CMD ~= C_OC
     1517    14085    1          AND S_D.FAULTCMD$->F$XCM.CMD ~= C_AT THEN GOTO USER_FAULT;
             14085                   /*Check for at or oncall cmd */
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:51   
     1518    14086    1        IF S_D.FAULTCMD$->F$XCM.CDF ~= S_D.TIC THEN GOTO USER_FAULT;
             14086                 /* Check ic match */
     1519    14087    1        S_D.SAVEIC = S_D.TIC;
     1520    14088    2        IF S_D.S$TEP.ACTIVE THEN DO;
     1521    14089    2             CALL DDB$STEPRESET ALTRET(USER_FAULT);
     1522    14090    2             S_D.S$TEP.ACTIVE = '1'B;      /* Step interrupted by breakpoint */
     1523    14091    2           END;
     1524    14092    1        CALL DDB$RESTORE;
     1525    14093    1        CALL DDA$AT ALTRET(USERGO2);
     1526    14094    1        S_D.DID_ATTACH = '1'B;
     1527    14095    1        IF NOT S_D.FAULTCMD$->F$XCM.SILENT THEN
     1528    14096    1             IF S_D.FAULTCMD$->F$XCM.CMD = C_AT /* C_AT */
     1529    14097    1             THEN CALL DDR$REPORT(R_AT);
     1530    14098    1             ELSE CALL DDR$REPORT(R_ONCALL);
     1531    14099    1        ELSE S_D.SILENT = '1'B;
     1532    14100                                                /* Reset the at count                 */
     1533    14101    1        FATT$ = PINCRW(S_D.VARCOM$,S_D.FAULTCMD$->F$XCM.FAI);
     1534    14102    1        FATT$->AT_FIRST.CURRENT_COUNT = FATT$->AT_FIRST.BYPASS_COUNT;
     1535    14103    1        S_D.ENTRYCMD$ = S_D.FAULTCMD$;
     1536    14104    1        REMEMBER USERGO IN S_D.REM_USERGO;
     1537    14105    1        CALL DDA$DOATTACH ALTRET (USERGO);
     1538    14106    1        S_D.SILENT = '0'B;
     1539    14107    1        GOTO SCAN_COMMAND;
     1540    14108    1   DRLWHEN:
     1541    14109    1        IF S_D.TIC ~= S_D.WHEN_IC THEN GOTO USER_FAULT;
     1542    14110    1   WHENPMME:
     1543    14111    1        CALL DUA$WHENIN ALTRET(WHENAGAIN);
     1544    14112    1        IF ECC = %ECC_DBRK# THEN S_D.SAVEIC = S_D.TIC;
     1545    14113                                                /* DUA$WHENIN does all the work */
     1546    14114                                           /* We get to here if a breakpoint was hit */
     1547    14115    1        TEMP_FLAG = '0'B;
     1548    14116    1        IF S_D.WHEN_ACTIVE
     1549    14117    1        THEN CALL DDB$WHENRESET;
     1550    14118    1        IF S_D.E$IS.ACTIVE
     1551    14119    1        THEN CALL DDB$EISRESET;
     1552    14120    1        IF S_D.S$TEP.ACTIVE
     1553    14121    2        THEN DO;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:52   
     1554    14122    2             CALL DDB$STEPRESET;
     1555    14123    2             S_D.S$TEP.ACTIVE = '1'B;
     1556    14124    2           END;
     1557    14125    1        IF S_D.X$EQ.ACTIVE
     1558    14126    2        THEN DO;
     1559    14127    2             TEMP_FLAG = '1'B;
     1560    14128    2             CALL DDB$XEQRESET;
     1561    14129    2           END;
     1562    14130    1        CALL DDB$RESTORE;
     1563    14131    1        CALL DUA$WHEN ALTRET(USERGO2);
     1564    14132    1        IF NOT S_D.FAULTCMD$->F$XCM.SILENT
     1565    14133    1        THEN IF TEMP_FLAG THEN CALL DDR$REPORT (R_WHENXEQ);
     1566    14134    1             ELSE IF ECC = %ECC_DBRK# THEN CALL DDR$REPORT(R_WHENPMME);
     1567    14135    1                  ELSE IF S_D.WHEN_ASL THEN CALL DDR$REPORT(R_WHENASL);
     1568    14136    1                       ELSE CALL DDR$REPORT (R_WHEN);
     1569    14137    1        ELSE S_D.SILENT = '1'B;
     1570    14138                                                /* Reset WHEN count */
     1571    14139    1        FATT$ = PINCRW(S_D.VARCOM$, S_D.FAULTCMD$->F$XCM.FAI);
     1572    14140    1        FATT$->WHEN_FIRST.CURRENT_COUNT = FATT$->WHEN_FIRST.BYPASS_COUNT;
     1573    14141    1        IF S_D.TIC = S_D.SL+1
     1574    14142    1        THEN S_D.SAVEIC = S_D.FAULTINS$->HOST_INSTR.Y;
     1575    14143    1        ELSE S_D.SAVEIC = S_D.TIC;
     1576    14144    1        S_D.ENTRYCMD$ = S_D.FAULTCMD$;
     1577    14145    1        REMEMBER USERGO IN S_D.REM_USERGO;
     1578    14146    1        CALL DDA$DOATTACH ALTRET (USERGO);
     1579    14147    1        S_D.SILENT = '0'B;
     1580    14148    1        GOTO SCAN_COMMAND;
     1581    14149    1   WHENAGAIN:
     1582    14150    1        CALL DDB$WHENRESET;                /* Restore current instruction */
     1583    14151    1        FPT$DRTN.V.DBRK# = '1'B;           /* Remember we're still looking */
     1584    14152    1        GOTO USERGO0;
     1585    14153    1   RESTORE_ALL: ;
     1586    14154                                                /* MUST be in this order */
     1587    14155    1        IF S_D.WHEN_ACTIVE THEN CALL DDB$WHENRESET;
     1588    14156    1        IF S_D.T$T.ACTIVE THEN CALL DDB$TTRESET;
     1589    14157    1        IF S_D.E$IS.ACTIVE THEN CALL DDB$EISRESET;
     1590    14158    1        IF S_D.S$TEP.ACTIVE THEN CALL DDB$STEPRESET;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:53   
     1591    14159    1        IF S_D.X$EQ.ACTIVE THEN CALL DDB$XEQRESET;
     1592    14160    1        CALL DDB$RESTORE;
     1593    14161    1   SCAN_COMMAND: ;
     1594    14162    1        IF ALIB_SAID_GOBACK
     1595    14163    2        THEN DO;
     1596    14164    2             CALL DUA$ALIB(ALIB_RET);
     1597    14165    3             IF S_D.S$TEP.ACTIVE OR S_D.S$TEP.ALT THEN DO;
     1598    14166    3                CALL DDA$GO ALTRET (SCAN_COMMAND);
     1599    14167    3                CALL DDB$PLANTONE (PINCRW(UIS$,S_D.S$TEP.LOC),T_OTHER,DRL_STEP,ADDR(S_D
             14167                         .S$TEP.SAVED));
     1600    14168    3                IF S_D.S$TEP.ALT THEN
     1601    14169    3                   CALL DDB$PLANTONE (PINCRW(UIS$,S_D.S$TEP.ALTLOC),T_OTHER,DRL_STEP,
             14169                            ADDR(S_D.S$TEP.ALTSAVED));
     1602    14170    3                S_D.DO$ = ADDR(NIL);
     1603    14171    3                GOTO USERGO1;
     1604    14172    3                END;
     1605    14173    2             GOTO USERGO2;
     1606    14174    2           END;
     1607    14175    1        IF S_D.AFD#
     1608    14176    2        THEN DO;
     1609    14177    2             CALL DFA$GET_FPRG_DCB (DCBNO);
     1610    14178    2             OPDCBNO = S_D.OPDCBNO;
     1611    14179    2             S_D.AFD# = '0'B;
     1612    14180    2             GOTO OPEN_FPRG;
     1613    14181    2           END;
     1614    14182
     1615    14183    1        IF S_D.PMD_ONLY  /* If invoked by PMD, only do one command */
     1616    14184    2        THEN DO;         /* (unless a READ command was encountered) */
     1617    14185    2             CALL DUA$EXITDELTA;
     1618    14186    2             GOTO SCAN_COMMAND; /* EXITDELTA doesnt return so save a pointer */
     1619    14187    2             END;
     1620    14188
     1621    14189    1        S_D.S$TEP.ACTIVE = '0'B; /* If we get to here, ignore any interrupted */
     1622    14190                                 /* step, since the user can re-issue one if he wants */
     1623    14191                                      /* Remember entry into do scan phase of delta   */
     1624    14192    1        REMEMBER S_FAULT IN S_D.REM_DO_SCAN;
     1625    14193    1        IF D_XDELTA THEN DICFAULT = 0;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:54   
     1626    14194    1        S_D.DO_SCAN = '1'B;
     1627    14195    1        S_D.DO$ = ADDR(NIL);
     1628    14196    1        S_D.DIRECT_OFF = S_D.DIRECT_SIZE;  /*N* Remove later */
     1629    14197    1        S_D.DO_ATTACH = 0;
     1630    14198    1        S_D.DO_NESTING_LEVEL = 0;
     1631    14199    1        CALL DDS$SCAN;
     1632    14200    1        S_D.BREAK = '0'B;
             14200          /* Ignore breaks hit while inputting, since the user would have re-typed anyway */
     1633    14201    1        S_D.BREAK_PRINTED = '0'B;
     1634    14202    1   SCAN_COMMAND1:
     1635    14203    1        S_D.DO$ = ADDR(S_D.DIRCOM);
     1636    14204    1        S_D.ENTRYCMD$ = S_D.FAULTCMD$;
     1637    14205    1        REMEMBER USERGO1 IN S_D.REM_USERGO;
     1638    14206    1        CALL DDA$DO ALTRET(USERGO1);
     1639    14207    1        IF S_D.STOP THEN GOTO SCAN_COMMAND;
     1640    14208    1        ATT_OFFSET = S_D.DIRECT_OFF;
     1641    14209    2        DO WHILE ( ATT_OFFSET < S_D.DIRECT_SIZE );
     1642    14210    2             CALL DDB$BREAK ALTRET( SCAN_COMMAND );
     1643    14211    2             S_D.ACMDS$ = ADDR( S_D.DIRECT_TEXT );
     1644    14212    2             S_D.ACMDS_SIZE = S_D.DIRECT_SIZE;
     1645    14213    2             S_D.ACMDS_OFF = ATT_OFFSET;
     1646    14214    2             CALL DDS$SCAN2 ALTRET( SCAN_COMMAND );
     1647    14215    2             ATT_OFFSET = S_D.ACMDS_OFF;
     1648    14216    2             REMEMBER SA_FAULT IN S_D.REM_DO_SCAN;
     1649    14217    2             CALL DDA$DO ALTRET( USERGO1 );
     1650    14218    2   SCAN_COMMAND2: ;
     1651    14219    2             IF S_D.STOP THEN GOTO SCAN_COMMAND;
     1652    14220    2           END;
     1653    14221    1        GOTO SCAN_COMMAND;
     1654    14222                                                /**/
     1655    14223    1   S_FAULT: IF D_XDELTA THEN CALL DDR$REPORT (R_SFAULT);
     1656    14224    1        GOTO SCAN_COMMAND;
     1657    14225    1   SA_FAULT: IF D_XDELTA THEN CALL DDR$REPORT (R_SFAULT);
     1658    14226    1        GOTO SCAN_COMMAND2;
     1659    14227    1   DISKBOOT:
     1660    14228    1        USE_ORIG$ -> U$SE.APT = MIS$ -> UBIN36A(%USERWSQ); /* Get new PTA for GHOST1 */
     1661    14229    1        CALL DDR$REPORT(R_DELTA);
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:55   
     1662    14230    1        GOTO SCAN_COMMAND;
     1663    14231                                 /* Enter here if DDA$GO was not called elsewhere     */
     1664    14232    1   USERGO2: S_D.DO$ = ADDR(NIL);           /* Use ic from sss                    */
     1665    14233    1        ALIB_SAID_GOBACK = '0'B;
     1666    14234    1        IF S_D.S$TEP.ACTIVE
     1667    14235    1        THEN CALL DDA$STEP_MORE ALTRET(CANT_STEP); /* Continue interrupted step */
     1668    14236    1        ELSE CALL DDA$GO ALTRET(SCAN_COMMAND);
     1669    14237                            /* A 'DO' routine has successfully initiated a return to
     1670    14238                            the user.  Turn do/scan flag off */
     1671    14239    1   USERGO1: S_D.DO_SCAN = '0'B;
     1672    14240        /*D*  Usergo is the routine which sends control back to the
     1673    14241              user at S_D.GOIC.        This is the only place in delta which
     1674    14242              returns to the user.
     1675    14243              */
     1676    14244    1        IF S_D.FPRG_CONTEXT$ ~= ADDR(NIL)
     1677    14245    2        THEN DO;
     1678    14246    2             TFPRG$ = S_D.FPRG_CONTEXT$;
     1679    14247    3             DO WHILE (TFPRG$ ~= ADDR(NIL));
     1680    14248    3                  IF TFPRG$ -> FPRG$CONTEXT.READ_FD = '1'B
     1681    14249    4                  THEN DO;
     1682    14250    4                       TFPRG$ -> FPRG$CONTEXT.READ_FD = '0'B;
     1683    14251    4                       DCBNO = TFPRG$ -> FPRG$CONTEXT.DCBNO;
     1684    14252    4                       GOTO PROCESS_EVENT;
     1685    14253    4                     END;
     1686    14254    3                  TFPRG$ = TFPRG$ -> FPRG$CONTEXT.NEXT$;
     1687    14255    3                END;
     1688    14256    2           END;
     1689    14257    1        CALL DXA$SSF ALTRET(SCAN_COMMAND);
     1690    14258    1   USERGO: ;
     1691    14259    1        IF S_D.T$T.ACTIVE THEN
     1692    14260    1             IF D_XDELTA                   /* DO if XDELTA */
     1693    14261    1               OR (NOT FPT$DRTN.V.QUIT#    /* or USER DELTA and not QUIT */
     1694    14262    1               AND (B$JIT.JUNK & %JJ_UDELTA#) /* and we're in control */
     1695    14263    1               AND NOT FPT$DRTN.V.KLDELTA#) /* and not KILL DELTA */
     1696    14264    1               OR FPT$DRTN.V.KPDELTA#      /* or USER DELTA and KEEP */
     1697    14265                                                /* NOTE: KPDELTA will not be set
     1698    14266                                                   when M$ALIB was from ASL */
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:56   
     1699    14267    1             THEN CALL DDB$SET_TT ALTRET(RESTORE_ALL);
     1700    14268    1   USERGO0:  ;
     1701    14269    1        IF S_D.WHEN_SET THEN FPT$DRTN.V.DBRK# = '1'B;
     1702    14270    1   USERGO0_WHEN:
     1703    14271    1        S_D.SILENT = '0'B;
     1704    14272    1        CALL DDB$BREAK ALTRET( RESTORE_ALL ); /* Check break flag */
     1705    14273    2        IF NOT D_XDELTA AND (TRAP OR FPT$DRTN.V.SETECC# = '0'B) THEN DO;
     1706    14274    2             IF S_D.S$TEP.ACTIVE AND UECCB$->B$ECCBI.ECIC(ECC) ~= 0
     1707    14275    3             THEN DO;  /* Fix up step so it will continue from the trap entry */
     1708    14276    3                  CALL DDB$STEPRESET;      /* Clear out the old stuff */
     1709    14277    3                  CALL DDB$PLANTONE(PINCRW(UIS$, UECCB$->B$ECCBI.ECIC(ECC)), 0,
             14277                           DRL_STEP, ADDR(S_D.S$TEP.SAVED)) ALTRET(SKIP_STEP);
     1710    14278    3                  S_D.S$TEP.OLD_PTR$ = ADDR(NIL);
             14278                           /* There's no old intruction to reset the inhibit bit on */
     1711    14279    3                  S_D.S$TEP.ALT = '0'B;    /* CLEAR ALTRET FLAG */
     1712    14280    3                  S_D.S$TEP.ACTIVE = '1'B;
     1713    14281    3                  S_D.S$TEP.LOC = UECCB$->B$ECCBI.ECIC(ECC);
     1714    14282    3   SKIP_STEP:     ;
     1715    14283    3                END;
     1716    14284    2             IF S_D.T$T.ACTIVE AND UECCB$->B$ECCBI.ECIC(ECC) ~= 0
     1717    14285    3             THEN DO;
     1718    14286    3                  CALL DDB$TTRESET;        /* Do the same for trace transfer */
     1719    14287    3                  CALL DDB$PLANTONE (PINCRW(UIS$, UECCB$->B$ECCBI.ECIC(ECC)), 0, DRL_TT
             14287                           , ADDR(S_D.T$T.SAVEINS)) ALTRET(SKIP_TT);
     1720    14288    3                  S_D.T$T.ACTIVE = '1'B;
     1721    14289    3                  S_D.T$T.SAVELOC = UECCB$->B$ECCBI.ECIC(ECC);
     1722    14290    3                  S_D.T$T.LOC_SAVED = '1'B;
     1723    14291    3                  S_D.T$T.RET_SAVED = '0'B;
     1724    14292    3   SKIP_TT:       ;
     1725    14293    3                END;
     1726    14294    2           END;
     1727    14295    1        IF NOT D_XDELTA AND NOT S_D.E$XIT THEN
     1728    14296                                 /* ECC=ECC_XCON# is the only condition that the monitor
     1729    14297                                 will allow delta to report when the user doesn't have
     1730    14298                                 a handler.  We will check for this condition and not
     1731    14299                            let the user fall out of delta into ibex.  The exit command
     1732    14300                            is used to bypass this check, but it is only allowed when
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:57   
     1733    14301                            the original entry to this incarnation of delta was by
     1734    14302                            M$LINK, or if this is an exit due to M$LDTRC or M$SAVE. */
     1735    14303    1             IF ((FPT$DRTN.V.SETECC# AND FPT$DRTN.V.ECC# = %ECC_XCON#)
     1736    14304    1               OR (FPT$DRTN.V.SETECC# = '0'B AND
     1737    14305    1               (ECC = %ECC_XCON# OR
     1738    14306    1               (ECC = %ECC_EXCRTN# AND SUBC = %SC_XCONXIT#))))
     1739    14307    2             THEN DO;
     1740    14308                                                /* If exit control in progress */
     1741    14309    2                  IF UECCB$->B$ECCB.XCONF.PROG
     1742    14310    2                    AND ((ECC=%ECC_XCON# AND
     1743    14311    2                    (B$TCB$->B$TCB.STK$->B$XCON.CECCB.GET = '0'B))
     1744    14312    2                    OR (ECC=%ECC_EXCRTN# AND SUBC=%SC_XCONXIT#))
     1745    14313    3                  THEN DO;
     1746    14314    3                       S_D.ERROR = E@CANT_XCON; /* E@CANT_XCON */
     1747    14315    3   L4:
     1748    14316    3                       FPT$DRTN.V.ECC# = %ECC_DELTA#;
     1749    14317    3                       FPT$DRTN.V.SETECC# = '1'B;
     1750    14318    3                       CALL DDE$ERROR;
     1751    14319    3                       GOTO RESTORE_ALL;
     1752    14320    3                     END;
     1753    14321    2                  ELSE IF UECCB$->B$ECCBI.ECIC(%ECC_XCON#) = 0
     1754    14322    3                       THEN DO;
     1755    14323    3                            S_D.ERROR = E@NO_CONTROL; /*E@NO_CONTROL*/
     1756    14324    3                            GOTO L4;
     1757    14325    3                          END;
     1758    14326    2                END;
     1759    14327    1             CALL DDC$POP_AS;
     1760    14328    1        IF D_XDELTA
     1761    14329    2        THEN DO;                           /* See if we've got a reason to be
     1762    14330                                                entered from the pre-fault handler */
     1763    14331    2             IF (S_D.T$T.ACTIVE
     1764    14332    2               OR S_D.S$TEP.ACTIVE
     1765    14333    2               OR S_D.E$IS.ACTIVE
     1766    14334    2               OR S_D.X$EQ.ACTIVE
     1767    14335    2               OR S_D.TR$INFO.ACTIVE
     1768    14336    2               OR (S_D.K$EEP.TYPE ~= KEEP_NONE AND S_D.K$EEP.TYPE ~= KEEP_SCREECH ))
             14336                        /* KEEP_NONE, KEEP_SCREECH */
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:58   
     1769    14337                                      /* DDB$PLANT sets H_XDELTA for oncall and break */
     1770    14338    2               AND H_XDELTA ~= 0
     1771    14339    2             THEN PINCRW(MIS$, H_XDELTA)->UBIN36 = BITBIN('777777777777'O);
             14339                      /* Tell him yes */
     1772    14340    2             CALL DXC$USERGO;              /* Will not return */
     1773    14341    2           END;
     1774    14342                                                /**/
     1775    14343                                                /* User delta only code */
     1776    14344    1        IF S_D.ISBASE = 0
     1777    14345    1          OR NOT FPT$DRTN.V.SETECC#
     1778    14346    1        THEN FPT$DRTN.V.IC# = S_D.GOIC;
     1779    14347    2        ELSE DO;
     1780    14348    2             S_D.SL$->SHRINK = SHRINKC;
     1781    14349    2             S_D.SL$->SHRINK.VECT.BOUND = ADDR(S_D.USS$->B$SS.ISR)->SHRUNKISR.BOUND;
     1782    14350    2             S_D.SL$->SHRINK.VECT.OFFSET = S_D.ISBASE;
     1783    14351    2             S_D.SL$->SHRINK.CLIMB.IC = S_D.ACTUALIC;
     1784    14352    2             FPT$DRTN.V.IC# = S_D.SL + 2;
     1785    14353    2           END;
     1786    14354    1        IF NOT FPT$DRTN.V.QUIT#
     1787    14355    2        THEN DO;
     1788    14356    2             IF (S_D.RUM OR S_D.ANLZ) AND NOT S_D.ALIB
     1789    14357    3             THEN DO; /* We should never be here when rum or anlz and not quiting or no
             14357        t entered via M$ALIB */
     1790    14358    3                  S_D.ERROR = E@DELBUG;    /*E@DELBUG*/
     1791    14359    3                  CALL DDE$ERROR;
     1792    14360    3                  CALL M$XXX;
     1793    14361    3                END;
     1794    14362    2             ELSE IF NOT (S_D.ANLZ AND S_D.ALIB)
     1795    14363    3                  THEN DO;
     1796    14364    3                       S_D.ACCESS = '1'B;
     1797    14365    3                       REMEMBER CANT_ACCESS IN S_D.REM_ACCESS;
     1798    14366    3                       IF PINCRW(UIS$, S_D.GOIC)->HOST_INSTR.I THEN FPT$DRTN.V.EVENT# =
             14366                                '1'B;
     1799    14367    3                       S_D.ACCESS = '0'B;
     1800    14368    3                     END;
     1801    14369        /* Don't let an event completion get reported on this guy if he is in inhibited code
             14369         */
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:59   
     1802    14370    2           END;
     1803    14371    1        IF S_D.ANLZ_FILE
     1804    14372    2        THEN DO;
     1805    14373    2             S_D.USS$_SAVE = S_D.USS$;     /* Save the special ss pointer */
     1806    14374    2             S_D.UREG$_SAVE = S_D.UREG$;   /* Save pointer to user regs */
     1807    14375    2           END;
     1808    14376    1   CALL_DRTN:
     1809    14377             /* Check for any events from any FPRGs */
     1810    14378    1        IF FPT$DRTN.V.KLDELTA#
     1811    14379    1          OR (FPT$DRTN.V.DLIB# AND NOT (B$JIT.JUNK & %JJ_UDELTA#)
     1812    14380    1          AND NOT FPT$DRTN.V.KPDELTA#)
     1813    14381    2        THEN DO;
     1814    14382    2             S_D.DO$ = ADDR(NIL);          /* Keep KILLRUM and KILLANLZ quiet */
     1815    14383    2             IF S_D.ANLZ THEN CALL DUA$KILL_ANLZ;
     1816    14384    2             ELSE IF S_D.RUM THEN CALL DUA$KILL_RUM;
     1817    14385    2                  CALL DUX$XCON1_REL; /* We are not comming back, release dcb #9 */
     1818    14386    2             IF (NOT D_XDELTA) AND (NOT S_D.BATCH)
     1819    14387    3             THEN DO;
     1820    14388    3                  S_D.EOM = '0'B;
     1821    14389    3                  CALL M$EOM(FPT_EOM) ALTRET(NOEOM); /* Reset to standard set */
     1822    14390    4                  DO WHILE ('0'B);
     1823    14391    4   NOEOM:              CALL DUE$ERRMSG;
     1824    14392    4                     END;
     1825    14393    3                END;
     1826    14394    2           END;
     1827    14395    1        IF S_D.DEBUGA(%DB@EXIT)
     1828    14396    2        THEN DO;
     1829    14397    2             S_D.ERROR = E@DB_EXIT;        /* E@DB_EXIT */
     1830    14398    2             CALL DDE$ERROR;
     1831    14399    2             CALL DUD$MINI;
     1832    14400    2             S_D.PROMPT_SIZE = 0;
     1833    14401    2           END;
     1834    14402    1        IF (S_D.ERROR > 0 OR S_D.RUM_TOTAL_ERRORS > 0) AND ECC = %ECC_ALIB# THEN
     1835    14403    1           FPT$DRTN.V.ALTRTN# = '1'B;
     1836    14404    1        IF FPT$DRTN.V.QUIT# AND S_D.RUM_TOTAL_ERRORS > 0
     1837    14405    2        THEN DO;
     1838    14406    2             FPT$DRTN.V.SETSTEPCC# = '1'B;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:60   
     1839    14407    2             FPT$DRTN.V.STEPCC# = 4;
     1840    14408    2           END;
     1841    14409    1         S_D.CAN_I_DO_BREAK = '1'B;
     1842    14410    1        CALL M$DRTN (FPT$DRTN) ALTRET(DRTN_ALTRET); /* Tell Linda to take it away */
     1843    14411    1   DRTN_ERRQUIT:
     1844    14412    1        CALL DDE$ERROR;
     1845    14413        /*D* NAME: DRTN_QUIT (UNWOUND TO FROM DUA$EXITDELTA)
     1846    14414             PURPOSE: TO EXIT DELTA WHEN M$XXX OR M$EXIT IS NOT CORRECT OR
     1847    14415                  DESIRABLE, FOR EXAMPLE ALTRET DUE TO DISCONNECT ON M$WRITE.
     1848    14416                  AN M$XXX WOULD JUST CAUSE ANOTHER CALL TO DDQ$WRITE. */
     1849    14417    1   DRTN_QUIT:
     1850    14418    1        FPT$DRTN.V.QUIT# = '1'B;
     1851    14419    1        GOTO CALL_DRTN;
     1852    14420    1   DRTN_KLDELTA:
     1853    14421    1        FPT$DRTN.V.KLDELTA# = '1'B;
     1854    14422        /*N* SOMEDAY, CHECK FOR DELENT = 1, AND SET SETECC# TO 0, WHEN
     1855    14423             LINDA IS SET UP TO HANDLE IT. */
     1856    14424    1        FPT$DRTN.V.SETECC# = '1'B;
     1857    14425    1        FPT$DRTN.V.IC# = S_D.ACTUALIC;
     1858    14426    1        GOTO CALL_DRTN;
     1859    14427    1   DRTN_ALTRET: ;
     1860    14428        /*D* User asked for control on an exceptional condition for which
     1861    14429             he doesn't have a handler.  Reset ecc to 90, turn setecc on and
     1862    14430             go back to scanner, after printing a suitable error.
     1863    14431             OR.... If he said quit, then its our problem and not his. */
     1864    14432    1        CALL DDC$SET_AS;         /* Oops, we're back, set up arg stack again */
     1865    14433    1        IF S_D.DEBUGA(%DB@ECC)
     1866    14434    2        THEN DO;
     1867    14435    2             CALL DUR$ECCRPT(ECCRPT_DRTNALT);
     1868    14436    3             IF S_D.DEBUG THEN DO;
     1869    14437    3                  CALL DUD$MINI;
     1870    14438    3                  S_D.PROMPT_SIZE = 0;
     1871    14439    3                END;
     1872    14440    2           END;
     1873    14441    1        ERR_CODE = B$TCB$->B$TCB.ALT$->B$EXCFR.ERR.CODE;
     1874    14442    1        FPT$DRTN.V.SETECC# = '1'B;
     1875    14443    2        IF TRAP THEN DO;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:61   
     1876    14444    2             S_D.ERROR = E@NO_TRAP_CONTROL; /* E@NO_TRAP_CONTROL */
     1877    14445    2             CALL DDE$ERROR;
     1878    14446    2             CALL DUR$ECCRPT(ECCRPT_USER);
     1879    14447    2             FPT$DRTN.V.ECC# = %ECC_DELTA#;
     1880    14448    2             GOTO RESTORE_ALL;
     1881    14449    2           END;
     1882    14450    2        IF ERR_CODE = %E$NOCONTROL THEN DO;
     1883    14451    2             IF FPT$DRTN.V.ECC# = %ECC_INT# THEN S_D.ERROR = E@NO_BREAK;
             14451                      /*E@NO_BREAK */
     1884    14452    2             ELSE S_D.ERROR = E@NO_CONTROL; /*E@NO_CONTROL*/
     1885    14453    2           END;
     1886    14454    1        ELSE IF ERR_CODE = %E$TCBFULL OR ERR_CODE = %E$NOTCB THEN
     1887    14455    1                  S_D.ERROR = E@NO_TCB;    /*E@NO_TCB*/
     1888    14456    2             ELSE DO;
     1889    14457    2                  S_D.ERROR = E@DELBUG;    /*E@DELBUG*/
     1890    14458    2                  CALL DUE$ERRMSG;
     1891    14459    2                END;
     1892    14460    1             CALL DDE$ERROR;
     1893    14461    1             FPT$DRTN.V.ECC# = %ECC_DELTA#;
             14461                      /* Set it back to "DONT GOTO USER XCON"    */
     1894    14462    1             GOTO RESTORE_ALL;             /* Restore and goto SCAN_COMMAND */
     1895    14463    1   CANT_ACCESS:
     1896    14464    1             S_D.ERROR = E@CANTACCESS;     /* E@CANTACCESS */
     1897    14465    1             CALL DDE$ERROR;
     1898    14466    1             GOTO RESTORE_ALL;
     1899    14467    1   DUA$DELTA_NO_AUTO: ENTRY;
     1900    14468    1        FPT$WRITE = FPT_WRITE;
     1901    14469    1        FPT$WRITE.V_ = VECTOR(FPT$WRITE.V);
     1902    14470    1        FPT$WRITE.V.DCB# = D_M$DO#;
     1903    14471    1        CALL M$WRITE (FPT$WRITE) ALTRET (OKAY);
     1904    14472    1   OKAY: ;
     1905    14473    1        IF (NOT DCBADDR(D_M$DO#)->F$DCB.DDEV.UCOUT#) AND (B$JIT.MODE = %M_INT#)
     1906    14474    2        THEN DO;
     1907    14475    2             FPT$WRITE.V.DCB# = DCBNUM(M$UC);
     1908    14476    2             CALL M$WRITE (FPT$WRITE) ALTRET (GIVE_UP);
     1909    14477    2           END;
     1910    14478    1   GIVE_UP: ;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:62   
     1911    14479    1        GOTO DRTN_QUIT;
     1912    14480        /*D*  NAME:     DXA$PATCHENT
     1913    14481              CALL:     THIS ENTRY POINT IS REACHED THROUGH THE BOOTSTRAP FOR
     1914    14482                        PURPOSES OF PATCHING THE MONITOR.
     1915    14483                        */
     1916    14484    1   DXA$PATCHENT: ENTRY;
     1917    14485    1             TRAP = '0'B;
     1918    14486    1             CALL DXA$GET_APT1(%MONWSQ, MON_APT); /* %MONWSQ */
     1919    14487    1             S_D.EWSQ# = %MONWSQ;          /* Initialize to '%MONWSQ' */
     1920    14488    1             CALL ORIG_USE;
     1921    14489    1             CALL DXI$1STIME;
     1922    14490    1             S_D.NODE = CNODE$ -> UBIN36;
     1923    14491    1             S_D.UNODE.CURRENT = CNODE$ -> UBIN36;
     1924    14492    1             S_D.UNODE.USENODE = CNODE$ -> UBIN36;
     1925    14493    1             REMEMBER DISKBOOT IN S_D.REM_DISKBOOT;
     1926    14494    1        IF H_XDELTA ~= 0 THEN PINCRW(MIS$, H_XDELTA)->UBIN36 = 0;
     1927    14495                                           /* Clear it, we will set it if we have to */
     1928    14496    1        CALL DDC$SET_AS;
     1929    14497    1        GOTO SCAN_COMMAND;
     1930    14498        /*D*  NAME: DXA$KEYENT
     1931    14499              CALL:   THIS ENTRY POINT IS REACHED FROM KEYIN WITH A CLIMB
     1932    14500                      VIA ENTRY DESCRIPTOR IN MONITOR'S LS.
     1933    14501                      */
     1934    14502    1   DXA$KEYENT: ;
     1935    14503                                                /* Get past keyin derail */
     1936    14504    1        S_D.SAVEIC = S_D.TIC+1;
     1937    14505                                                /* Write 'DELTA HERE' */
     1938    14506    1   RECOVERY_ENTRY: ;
     1939    14507    1        TRAP = '0'B;
     1940    14508    1        CALL DDC$SET_AS;
     1941    14509    1        CALL DDR$REPORT(R_DELTA);
     1942    14510    1        GOTO RESTORE_ALL;
     1943    14511        /*D*  NAME: DXA$FAULTENT
     1944    14512              CALL:  THIS ENTRY POINT IS REACHED THROUGH A 'WIRED-IN'CLIMB
     1945    14513                     THROUGH FAULT ENTRY DESCRIPTOR IN ABS LOCATION '32'O
     1946    14514                     AND '40'O PLACED THERE DURING THE BOOT PROCESS...
     1947    14515                     IF DELTA WAS DESIRED.
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:63   
     1948    14516                     */
     1949    14517    1   DXA$FAULTENT: ENTRY;
     1950    14518        /*D*  IF THE FAULT OCCURRED WHILE DELTA WAS IN CONTRO;, GO TO DICFAULT
     1951    14519              FOR SPECIAL ANALYSIS. OTHERWISE THE FAULT WAS CAUSED BY DELTA
     1952    14520              OR BY THE USER.  IF THE FAULT WAS NOT CAUSED BY DELTA GO TO
     1953    14521              USERFAULT TO PROCESS.  IF THE FAULT IS DELTA-CAUSED, TAKE
     1954    14522              APPROPRIATE ACTION.  A DELTA-CAUSED FAULT IS EITHER A
     1955    14523              DERAIL, A MEMORY PROTECT OR A FAULT TAG FAULT.
     1956    14524              */
     1957    14525                            /* Remember the working space quarter in which the fault
     1958    14526                            occurred */
     1959    14527    1        TRAP = '0'B;
     1960    14528    1        YNDEX = S_D.USS$->B$SS.ISR.WSR;    /* Get wsr out of isr in safe store */
     1961    14529    1        S_D.EWSQ# = WSR(YNDEX);            /* Get contents of designated WSR..
     1962    14530                                           All wsrs were saved in DXC$SETUP at entry */
     1963    14531    1        S_D.FAULT = S_D.USS$->B$SS.FC;
     1964    14532    1        S_D.DO$ = ADDR(NIL);
     1965    14533    1        CALL ORIG_USE;
     1966    14534    1        S_D.NODE = CNODE$ -> UBIN36;
     1967    14535    1        S_D.UNODE.CURRENT = CNODE$ -> UBIN36;
     1968    14536    1        S_D.UNODE.USENODE = CNODE$ -> UBIN36;
     1969    14537    1        CALL DXB$CUSE;                     /* Establish current environment */
     1970    14538    1        S_D.GOIC = S_D.USS$->B$SS.IC;      /* Set it incase we leave quick */
     1971    14539    1        IF S_D.USS$->B$SS.IR.MIR = '0'B AND RECOVER = 0 AND NOT S_D.HW_FLTIC_OK
     1972    14540                                 /* Adjust ic only if we didn't come from recovery */
     1973    14541    1        THEN S_D.TIC = S_D.USS$->B$SS.IC - 1;
     1974    14542    1        ELSE S_D.TIC = S_D.USS$->B$SS.IC;
     1975    14543    1        S_D.FAULTINS$ = PINCRW(UIS$,S_D.TIC);
     1976    14544    1        CALL DDS$ES_INQ(S_D.TIC);
     1977    14545    1        CALL DDS$SET_Q2C;
     1978    14546                                                /* Check for safe store full */
     1979    14547    1        CALL DXA$SSF;
     1980    14548    2        IF RECOVER ~= 0 THEN DO;
     1981    14549    2             S_D.SAVEIC = S_D.TIC;
     1982    14550    2             IF S_D.K$EEP.TYPE = KEEP_NONE
     1983    14551    3             THEN DO;
     1984    14552    3                  CALL DXA$QUIT ALTRET(REPORT_SCREECH);
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:64   
             14552                           /* ALTRET means recovery in progress,
     1985    14553                                                so sneak out.  Return means
     1986    14554                                                recovery not in progress so.. */
     1987    14555    3                  S_D.ERROR = E@DELBUG;    /* E@DELBUG */
     1988    14556    3                  CALL DDE$ERROR;
     1989    14557    3                END;
     1990    14558    2             GOTO RECOVERY_ENTRY;
     1991    14559    2           END;
     1992    14560    1        IF S_D.FAULT = FAULT_DERAIL THEN GOTO DERAIL;
     1993    14561    1        IF S_D.T$T.ACTIVE THEN CALL DDB$TTRESET;
     1994    14562    1        IF S_D.FAULT = FAULT_MEMPROT THEN GOTO USER_FAULT;
     1995    14563    1        IF S_D.FAULT = FAULT_FAULTTAG THEN GOTO FAULTAG;
     1996    14564    1        IF S_D.FAULT = FAULT_BREAK
     1997    14565    2        THEN DO;
     1998    14566    2             S_D.SAVEIC = S_D.TIC;
     1999    14567    2             GOTO RECOVERY_ENTRY;          /* Don't bump ic */
     2000    14568    2           END;
     2001    14569    1        GOTO USER_FAULT;
     2002    14570                                                /**/
     2003    14571    1   REPORT_SCREECH:
     2004    14572    1        CALL DDR$REPORT(R_SCREECH);
     2005    14573    1        GOTO USERGO0;
     2006    14574    1   ORIG_USE: PROC;
     2007    14575    2   DCL LS UBIN;
     2008    14576    2        USE_ORIG$ -> U$SE = '1'B;          /* Set U$SE.CUR, clear all else */
     2009    14577    3        DO CASE(S_D.EWSQ#);
     2010    14578    3          CASE(%REALWSQ);                  /* 'USE REAL' for ewsq = %REALWSQ */
     2011    14579    3             USE_ORIG$->U$SE.TYPE = USE_REAL; RETURN; /* USE_REAL */
     2012    14580    3          CASE(%MONWSQ);                   /* 'USE MON' for EWSQ# = %MONWSQ */
     2013    14581    3             USE_ORIG$->U$SE.TYPE = USE_MON; /* USE_MON */
     2014    14582    3             CALL DXA$GET_APT1(%USERWSQ, USE_ORIG$ -> U$SE.APT);
             14582                      /* Always save current %USERWSQ */
     2015    14583    3             USE_ORIG$ -> U$SE.LS = 0;     /* Flag to leave wsr7 alone */
     2016    14584    3             RETURN;
     2017    14585    3          CASE(%CPWSQ);                    /* 'USE USER,ICP for %CPWSQ */
     2018    14586    3             LS = 4;
     2019    14587    3          CASE(%DBWSQ);                    /* 'USE USER,IDB for %DBWSQ */
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:65   
     2020    14588    3             LS = 2;
     2021    14589    3          CASE(%ASLWSQ);                   /* 'USE USER,ASL for %ASLWSQ */
     2022    14590    3             LS = 3;
     2023    14591    3          CASE(%USERWSQ);                  /* 'USE CURRENT USER for %USERWSQ */
     2024    14592    3             LS = 1;
     2025    14593    3          CASE(ELSE);                      /* Who is this??? */
     2026    14594    3             S_D.ERROR = E@BAD_EWSQ;       /* E@BAD_EWSQ */
     2027    14595    3             CALL DDE$ERROR;
     2028    14596    3             USE_ORIG$->U$SE.TYPE = USE_PT; /* Use pt @ ewsq - USE_PT */
     2029    14597    3             CALL DXA$GET_APT1(S_D.EWSQ#,USE_ORIG$->U$SE.APT);
     2030    14598    3             RETURN;
     2031    14599    3          END;
     2032    14600    2        USE_ORIG$->U$SE.TYPE = USE_USER@;  /* USE_USER@ */
     2033    14601    2        USE_ORIG$->U$SE.USERNO = 0;        /* Current user */
     2034    14602    2        USE_ORIG$->U$SE.LS = LS;
     2035    14603    2        CALL DXA$GET_APT1(%USERWSQ, USE_ORIG$ -> U$SE.APT); /* %USERWSQ */
     2036    14604                                                /* Get apt for current user */
     2037    14605    2        RETURN;
     2038    14606    2   END ORIG_USE;
     2039    14607    1   END DDA$DELTA;
     2040    14608             %EOD;

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:66   
--  Include file information  --

   GD_EQUS_E.:E05TOU  is referenced.
   DF_EQUS_E.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GD$MSG_M.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$ROSEG.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   JS$CP6V_C.:E05TOU  is referenced.
   NK_VFC_C.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   UE_ERRORS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   DU_SCODE_C.:E05TOU  is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   B$SS.:E05TOU  cannot be made into a system file and is referenced.
   DD_DEBUG_C.:E05TOU  is referenced.
   DD_ERR_C.:E05TOU  is referenced.
   B$TABLES_C.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure DDA$DELTA.

   Procedure DDA$DELTA requires 3408 words for executable code.
   Procedure DDA$DELTA requires 200 words of local(AUTO) storage.

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:67   

 Object Unit name= DDA$DELTA                                  File name= DDA$DELTA.:E05TOU
 UTS= JUL 29 '97 13:16:27.96 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS    207    317  DDA$DELTA
    1   DCB   even  none     0      0  M$UC
    2   Proc  even  none  3408   6520  DDA$DELTA
    3  RoData even  none    54     66  DDA$DELTA

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        0  DDA$DELTA
     2      3                  yes      Std        0  DUA$DELTA1
     2    114                  yes      Std        0  DUA$DELTA
     2   6072                  yes      Std        0  DUA$DELTA_NO_AUTO
     2   6136                  yes      Std        0  DXA$PATCHENT
     2   6214                  yes      Std        0  DXA$FAULTENT

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    0    110  SNAP_MESSAGE                       0    116  SC_MESSAGE
    0    120  SNAP_EVENT                         0    126  SC_EVENT
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:68   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 B_POINTER
 yes     yes           Std       0 DDS$SCAN1
 yes     yes           Std       4 DFA$SETUP_FPRG
 yes     yes           Std       2 DFQ$READ_FD
 yes     yes           Std       0 DUA$WHEN
 yes     yes           Std       0 DDA$DO
 yes     yes           Std       0 DDS$SCAN2
         yes           Std       0 DUA$KILL_RUM
         yes           Std       1 DFR$REPORT
         yes           Std       0 DUA$EXITDELTA
         yes           Std       0 DXC$USERGO
         yes           Std       0 DUX$XCON
         yes           Std       0 DUX$TRAP
         yes    yes   Async      0 DUX$EVENT
         yes           Std       0 DDC$SET_AS
         yes           Std       1 DUR$ECCRPT
         yes           Std       1 DFR$EVENTRPT
 yes     yes           Std       0 DUA$WHENIN
         yes           Std       0 DXI$1STIME
         yes           Std       1 DDR$REPORT
 yes     yes           Std       0 DDB$TTRESET
         yes           Std       0 DDC$POP_AS
 yes     yes           Std       1 DDA$STEP_MORE
 yes     yes           Std       0 DXA$SSF
 yes     yes           Std       0 DUI$1STIME
 yes     yes           Std       0 DDS$SET_Q2C
 yes     yes           Std       0 DUA$KILL_ANLZ
         yes           Std       2 DDQ$WRITE
 yes     yes           Std       1 DFA$GO
         yes          Async      0 DUX$BREAK
         yes           Std       0 DDE$ERROR
         yes           Std       1 DFA$GET_FPRG_DCB
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:69   
         yes           Std       0 DUE$ERRMSG
 yes     yes           Std       0 DDB$SET_TT
 yes     yes           Std       0 DDA$STEP_DECR
 yes     yes           Std       0 DDS$EMTREE
 yes     yes           Std       2 DDF$FIND_PEDEF
 yes     yes           Std       0 DDS$SCAN
         yes           Std       0 DDI$SETUP
 yes     yes           Std       1 DDS$ES_INQ
         yes           Std       2 DDQ$READ_ALIB
         yes           Std       0 DUX$XCON1_REL
 yes     yes           Std       0 DDA$ON
 yes     yes           Std       0 DDA$GO
 yes     yes           Std       0 DXA$QUIT
         yes           Std       1 DFA$KILL_FPRG
 yes     yes           Std       0 DFA$TRACE_REPORT
 yes     yes           Std       2 DUA$ALIB
         yes           Std       2 DXA$GET_APT1
 yes     yes           Std       1 DUA$WHENOUT
 yes     yes           Std       0 DDB$STEPRESET
 yes     yes           Std       0 DDB$BREAK
 yes     yes           Std       0 DDB$EISRESET
 yes     yes           Std       0 DDB$USERFAULT
 yes     yes           Std       2 DFA$STOP_FPRGS
         yes           Std       1 DUD$MINI
         yes           Std       0 DDB$RESTORE
 yes     yes           Std       0 DDA$AT
 yes     yes           Std       0 DDB$WHENRESET
         yes           Std       4 DDT$XTAGS
 yes     yes           Std       4 DDB$PLANTONE
 yes     yes           Std       0 DDB$XEQRESET
         yes           Std       0 DXB$CUSE
         yes           Std       3 DDB$INTERP
 yes     yes           Std       0 DDA$DOATTACH
         yes           Std       1 DFA$FPRG
         yes           Std       0 DDA$KILL1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_0
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:70   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     DICFAULT                              B$JIT$                                B$TCB$
     B$PS1$                                B$PS3$                                B$ROS$
     D_M$DO#                               D_XDELTA                              H_XDELTA
     D_SYMBOLS                             MIS$                                  CNODE$
     MON_APT                               RECOVER                               UECCB$
     UIS$                                  USE$                                  USE_ORIG$
     WSR                              r    B$XL_UPPER$                           M$UC
     FPT_RELDCB                            FPT_CLOSE                        r    S_D$
r    S_D_HOST_MESSAGE$                r    S_D_L6_MESSAGE$                       B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID                                 ROSID
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:71   


        1        1        /*M*  DDA$DELTA Execution control routines for DELTA & XDELTA */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*P*
        8        8             NAME: ENTRY Module (Host)
        9        9             PURPOSE:
       10       10                   To serve as the entry routine in the Host for Host User DELTA,
       11       11                   Host XDELTA, and for the initial entry for the other modes.
       12       12                   All entries from a Host User come to this module, and all
       13       13                   returns to a Host User are made thru this module.
       14       14             DESCRIPTION:
       15       15                   The start address for Host User DELTA is DEC$ENTRY.  Upon
       16       16                   initial entry, DEC$ENTRY calls DUA$DELTA, and for all
       17       17                   subsequent entries calls DUA$DELTA.  DEA$DELTA1 sets FIRST
       18       18                   to indicate this is the initial entry to DELTA and then
       19       19                   merges with the mainstream (DUA$DELTA).
       20       20
       21       21                   The reason for entry is examined to see if we need to stay
       22       22                   in DELTA.  If we do need to stay in DELTA, the Modules for
       23       23                   restoring the user's program are called and then the DRIVER
       24       24                   module is called passing the Exceptional Condition Code (ECC),
       25       25                   the Sub-code (SUBC), and Event ID (EVID) for the condition
       26       26                   that caused entry to DELTA and FIRST.  If we don't need to
       27       27                   stay in DELTA or a return to the user is desired, the Modules
       28       28                   for establishing breakpoints, etc. are called and then M$DRTN
       29       29                   is called to transfer control the the user domain.
       30       30        */
       31       31        /*F* NAME: DDA$DELTA
       32       32             PURPOSE:  To serve as the main driving routine for DELTA and
       33       33                  XDELTA.  All entries from the user come to this module,
       34       34                  and all returns to the user are made thru this module.
       35       35
       36       36             DESCRIPTION:  The start address for user DELTA is DEC$ENTRY,
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:72   
       37       37                  which calls DUA$DELTA1.  The start address for XDELTA
       38       38                  is DXC$PATCHENT (in file DXC$MISC) which calls DXA$PATCHENT.
       39       39                  All entries for user faults are to DEC$ENTRY, which calls
       40       40                  DUA$DELTA, all faults enter at DXC$FAULTENT (DXC$MISC) for
       41       41                  XDELTA, which calls DXA$FAULTENT.  DXA$PATCHENT and DUA$DELTA1
       42       42                  perform initial setup, call the appropriate 1STIME routine,
       43       43                  and merge with the mainstream of DELTA (DUA$DELTA and DXC$FAULTENT).
       44       44
       45       45                  If entry to DELTA was caused by a normal entry condition,
       46       46                  (initial entry, M$LINK or M$LDTRC, return from M$LINK, cntl
       47       47                  Y DELTA with DELTA already associated, or !DELTA keyin for XDELTA),
       48       48                  DDS$SCAN is called to get and parse a command.  If entry was
       49       49                  due to a user fault, the appropriate flags are checked to
       50       50                  determine what action to take.  The KEEP action will
       51       51                  report the fault, and call DDS$SCAN.  A TRAP action (user DELTA only)
       52       52                  will setup to return control to the users exceptional condition
       53       53                  routine.  An IGNORE action (user DELTA only) will adjust the
       54       54                  IC value to prevent re-occurence of the fault, and setup to
       55       55                  return to the user.
       56       56
       57       57                  If entry was caused by M$ALIB and a CMD field was passed,
       58       58                  DDS$SCAN1 is called for parse only.  The command loop is
       59       59                  entered after the call to DDS$SCAN.  If no CMD field was
       60       60                  passed, the command loop is entered at the call to DDS$SCAN.
       61       61
       62       62                  If entry to DELTA was caused by a breakpoint condition (AT,
       63       63                  WHEN, ON NODE, ON CALL, ON ABORT, ON EXIT), DDA$DOATTACH is
       64       64                  called to perform the attachments.  If a GO directive was
       65       65                  not one of the attachments, DDS$SCAN is called to get more
       66       66                  things to do.
       67       67
       68       68                  If entry to DELTA was caused by a TRACE condition, the condition
       69       69                  is reported, and setup is done to return to the user.  If entry
       70       70                  was caused by a STEP condition, and the step is completed, the
       71       71                  condition is reported, and DDS$SCAN is called.  Otherwise, the
       72       72                  STEP is continued.
       73       73
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:73   
       74       74                  If entry was caused by an XEQ derail, DDS$SCAN is called.  If
       75       75                  entry was caused by an EIS stopper derail, setup is done to
       76       76                  return to the user.  Each of the entry routines are described
       77       77                  in detail later with the code that performs the function.
       78       78
       79       79                  Although there is no entry point with that name, DDA$DELTA refers
       80       80                  to the common section of code which drives fault reporting,
       81       81                  breakpoint handling, and driving of the command loop for both
       82       82                  DELTA and XDELTA.  The command loop is described below.
       83       83
       84       84                  DDS$SCAN gets and parses a command.  If the command is
       85       85                  a stored command, DDS$SCAN performs the store function, and
       86       86                  gets another command, without returning to DDA$DELTA.  When
       87       87                  DDS$SCAN does return, it will have placed an encoded directive
       88       88                  in the direct command buffer (S_D.DIRCOM) and will point at
       89       89                  it with S_D.DO$.  DDA$DELTA then calls DDA$DO to perform the
       90       90                  directive.  If DDA$DO returns, control loops back to call
       91       91                  DDS$SCAN again.  An ALTRET by DDA$DO signals that DDA$GO
       92       92                  was called during the processing of the last directive.
       93       93                  DDA$DELTA then sets up for a return to the user.
       94       94
       95       95                  To return to the user, DELTA sets up the TRACE TRANSFER derail if
       96       96                  tracing is turned on, sets up to continue any interrupted STEPs,
       97       97                  and calls DDA$GO if it has not already been called.  User DELTA
       98       98                  will call M$DRTN to transfer control to the user domain.  XDELTA
       99       99                  will call DXC$USERGO (in file DXC$MISC) to return to the current
      100      100                  running domain.
      101      101        */
      102      102
      103      103        DDA$DELTA: PROC;                        /* Never called */

    103  2 000000   000000 700200 xent  DDA$DELTA    TSX0  ! X66_AUTO_0
         2 000001   000310 000000                    ZERO    200,0
         2 000002   000005 710000 2                  TRA     s:12973

      104      104
      105      105        /* Auto */
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:74   
      106      106
      107      107    1   DCL ALIB_SAID_GOBACK BIT(1) ALIGNED;
      108      108    1   DCL DRL$ PTR;
      109      109    1   DCL ECC UBIN;
      110      110    1   DCL EDEF$ PTR;
      111      111    1   DCL EDEF_END$ PTR;
      112      112    1   DCL NODE SBIN;                          /* Must be SBIN */
      113      113    1   DCL NODE$ PTR;
      114      114    1   DCL DNAME$ PTR;
      115      115    1   DCL ERR_CODE UBIN;
      116      116    1   DCL FATT$ PTR;
      117      117    1   DCL FAULT UBIN;
      118      118    1   DCL I UBIN;
      119      119    1   DCL CMD UBIN;
      120      120    1   DCL LENGTH UBIN;
      121      121    1   DCL LS SBIN;
      122      122    1   DCL PTR$ PTR;
      123      123    1   DCL SAVEIC SBIN;
      124      124    1   DCL SAVEINS$ PTR;
      125      125    1   DCL SUBC UBIN;
      126      126    1   DCL EVID UBIN;
      127      127    1   DCL ASL UBIN;
      128      128    1   DCL ASLIC_FLAG BIT(1) ALIGNED;
      129      129    1   DCL TAGG UBIN;
      130      130    1   DCL TRAP BIT(1) ALIGNED;
      131      131    1   DCL TEMP_FLAG BIT(1) ALIGNED;
      132      132    1   DCL TR_FAKE_FRAME UBIN;
      133      133    1   DCL TYPE UBIN;
      134      134    1   DCL YNDEX SBIN;
      135      135    1   DCL TEMP$ PTR;
      136      136    1   DCL TEMP1 REDEF TEMP$ UBIN(36) ALIGNED;
      137      137    1   DCL 1 TEMP1B REDEF TEMP$ ALIGNED,
      138      138    1         2 * UBIN(4) UNAL,
      139      139    1         2 B1 UBIN(8) UNAL,
      140      140    1         2 B2 UBIN(8) UNAL,
      141      141    1         2 B3 UBIN(8) UNAL,
      142      142    1         2 B4 UBIN(8) UNAL;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:75   
      143      143    1   DCL TEMP2 UBIN(36) ALIGNED;
      144      144    1   DCL 1 TEMP2B REDEF TEMP2 ALIGNED,
      145      145    1         2 * BIT(1) UNAL,
      146      146    1         2 B1 UBIN(8) UNAL,
      147      147    1         2 * BIT(1) UNAL,
      148      148    1         2 B2 UBIN(8) UNAL,
      149      149    1         2 * BIT(1) UNAL,
      150      150    1         2 B3 UBIN(8) UNAL,
      151      151    1         2 * BIT(1) UNAL,
      152      152    1         2 B4 UBIN(8) UNAL;
      153      153    1   DCL 1 UREGS DALIGNED,
      154      154    1         2 *(0:6) UBIN;                    /* 7 word block for regs in FPT$DRTN  */
      155      155    1   DCL DCB$ PTR;
      156      156    1   DCL TFPRG$ PTR;
      157      157    1   DCL DUPLICATE BIT(1) ALIGNED;
      158      158    1   DCL TDCB$ PTR;
      159      159    1   DCL NDCBS SBIN;
      160      160    1   DCL DCBNO UBIN;
      161      161    1   DCL FPRG_IC UBIN;
      162      162    1   DCL RES CHAR(8);
      163      163    1   DCL RES_SIZE UBIN;
      164      164    1   DCL OPDCBNO UBIN;
      165      165    1   DCL ATT_OFFSET UBIN;
      166      166    1   DCL DICFAULT UBIN SYMREF;
      167      167        /**/
      168      168        /* SYMREF */
      169      169        /**/
      170      170    1   DCL B$JIT$ PTR SYMREF;
      171      171    1   DCL B$TCB$ PTR SYMREF;
      172      172    1   DCL B$PS1$ PTR SYMREF;
      173      173    1   DCL B$PS3$ PTR SYMREF;
      174      174    1   DCL B$ROS$ PTR SYMREF;
      175      175    1   DCL D_M$DO# UBIN SYMREF;
      176      176    1   DCL D_XDELTA BIT(1) SYMREF;
      177      177    1   DCL H_XDELTA UBIN SYMREF;
      178      178    1   DCL D_SYMBOLS BIT(1) ALIGNED SYMREF;
      179      179    1   DCL MIS$ PTR SYMREF;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:76   
      180      180    1   DCL CNODE$ PTR SYMREF;
      181      181    1   DCL MON_APT SBIN SYMREF;
      182      182    1   DCL RECOVER UBIN SYMREF;
      183      183    1   DCL UECCB$ PTR SYMREF;
      184      184    1   DCL UIS$ PTR SYMREF;
      185      185    1   DCL USE$ PTR SYMREF;
      186      186    1   DCL USE_ORIG$ PTR SYMREF;
      187      187    1   DCL WSR(0:7) UBIN(9) UNAL SYMREF;
      188      188        /**/
      189      189        %INCLUDE B$TABLES_C;
      190      297        %B$XL_UPPER(NAME=XLATE_TABLE);
      191      301        /* based storage */
      192      302        /**/
      193      303    1   DCL UBIN36  UBIN BASED;
      194      304    1   DCL UBIN36A(0:0) UBIN HALF ALIGNED BASED;
      195      305    1   DCL ALIB_COMMAND CHAR(SUBC) BASED;
      196      306    1   DCL CHAR1 CHAR(1) BASED;
      197      307    1   DCL CHAR4 CHAR(4) BASED;
      198      308    1   DCL CHAR_4 CHAR(4);
      199      309    1   DCL 1 OLAY_FLAGS BASED ALIGNED,
               309            /* OLAY_FLAGS.V are in B$EXCFR.EVID when a node is loaded or cancelled */
      200      310    1         2 * BIT(6) UNAL,
      201      311    1         2 V,
      202      312    1           3 NOPATH BIT(1) UNAL,
      203      313    1           3 ENTER BIT(1) UNAL,
      204      314    1           3 CANCEL BIT(1) UNAL,
      205      315    1         2 * BIT(27) UNAL;
      206      316    1   DCL 1 SHRUNKISR BASED ALIGNED,
      207      317    1         2 BOUND UBIN(18) UNAL;
      208      318        %INCLUDE DD_ERR_C;
      209      715        %INCLUDE DD_DEBUG_C;
      210      736        %INCLUDE B$SS;
      211      915        %INCLUDE B$OBJECT_C;
      212     4345        %B$EDEF;
      213     4415        %SUB_CST;
      214     4431        %SUB_LINKFLAGS;
      215     4440        %INCLUDE DD$BASED;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:77   
      216     5743        %SHRINK;
      217     5764        %SHRINK (NAME = SHRINKC, STCLASS = CONSTANT);
      218     5785        %DU$TREE (NAME="DU$TREE(0:0)");
      219     5791        %DU$NODE (NAME="DU$NODE(0:0)");
      220     5801        %U$SE;
      221     5809        %HOST_INSTR;
      222     5831        %FIXCOM (NAME="F$XCM",STCLASS=BASED);
      223     5847        %AT_FIRST;
      224     5875        %WHEN_FIRST;
      225     5912        %FPRG$CONTEXT;
      226     5975        %INCLUDE DD_SUBS_C;
      227     6246        %INCLUDE DU_SCODE_C;
      228     6259        %INCLUDE CP_6;
      229     6340        %INCLUDE CP_6_SUBS;
      230     6880        %INCLUDE UE_ERRORS_C;              /* Exceptional condition processing errors */
      231     6898        %INCLUDE B_SEGIDS_C;
      232     7437        %INCLUDE B_STRINGS_C;
      233     7566        %INCLUDE NK_VFC_C;
      234     7640        %INCLUDE JS$CP6V_C;
      235     7703        %FPT$ALIB_V (FPTN=FPT$ALIB_V);
      236     7706        %INCLUDE B$JIT;
      237     7996        %B$TCB;
      238     7999        %INCLUDE B$ROSEG;
      239     8062        %F$DCB;
      240     8119        %B$EXCFR;
      241     8137        %B$EVNT;
      242     8150        %B$FPRG;
      243     8183        %B$COMIO;
      244     8196        %B$XCON;
      245     8206        %B$ECCB;
      246     8214        %B$ECCBI;
      247     8217        %B$ALIBF;
      248     8221        %B$FLT;
      249     8273        %SUB_EXC;
      250     8320        %SUB_ECCDELTA;
      251     8357        %FPT_DRTN (STCLASS=CONSTANT);
      252     8381        %FPT_DRTN (FPTN=FPT$DRTN, STCLASS=AUTO);
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:78   
      253     8405        %VLR_FPRG_FID(FPTN=VLR_FPRG_FID, STCLASS=AUTO);
      254     8413        %FPT_XCON (STCLASS=CONSTANT, UENTRY=DUX$XCON);
      255     8427        %FPT_INT  (STCLASS=CONSTANT, UENTRY=DUX$BREAK);
      256     8441        %FPT_TRAP (STCLASS=CONSTANT,
      257     8442                  ARITHMETIC=DUX$TRAP,
      258     8443                       OVERFLOW=TRAP,
      259     8444                       DIVIDE_CHECK=TRAP,
      260     8445                  PROGRAMMED=DUX$TRAP,
      261     8446                       MME=TRAP,
      262     8447                       DERAIL=TRAP,
      263     8448                       FAULT_TAG=TRAP,
      264     8449                  ERRORS=DUX$TRAP,
      265     8450                       MEMORY=TRAP,
      266     8451                       COMMAND=TRAP,
      267     8452                       LOCKUP=TRAP,
      268     8453                       IPR=TRAP,
      269     8454                       MISSING_SEG=TRAP,
      270     8455                       MISSING_PAGE=TRAP,
      271     8456                       SECURITY_1=TRAP,
      272     8457                       SECURITY_2=TRAP,
      273     8458                  PMME=DUX$TRAP,
      274     8459                  HISTORY_REGS=NO );
      275     8482        %FPT_EVENT(FPTN=FPT$EVENT, STCLASS=CONSTANT, UENTRY=DUX$EVENT);
      276     8496        %FPT_PRIV (FPTN=FPT_PRIV, STCLASS=CONSTANT,
      277     8497                  PRIV=%PR_SPCLMM#,AUTH=YES);
      278     8512        %FPT_SAD (FPTN=SAD1, STCLASS=CONSTANT, USERSID=%SPCL1SID, MONSID=%NULLSID);
      279     8527        %FPT_SAD (FPTN=SAD2, STCLASS=CONSTANT, USERSID=%SPCL2SID, MONSID=%MLS1SID);
      280     8542        %FPT_SAD (FPTN=SAD3, STCLASS=CONSTANT, USERSID=%SPCL3SID, MONSID=%NULLSID);
      281     8557        %FPT_SAD (FPTN=SAD4, STCLASS=CONSTANT, USERSID=%SPCL4SID, MONSID=%NULLSID);
      282     8572        %FPT_SAD (FPTN=SAD5, STCLASS=CONSTANT, USERSID=%SPCL5SID, MONSID=%NULLSID);
      283     8587        %FPT_SAD (FPTN=SAD6, STCLASS=CONSTANT, USERSID=%SPCL6SID, MONSID=%WS3MLSSID);
      284     8602        %FPT_SCREECH(FPTN=SNAP_MESSAGE,STCLASS=CONSTANT SYMDEF,SCODE=SC_MESSAGE);
      285     8616        %VLP_SCODE(FPTN=SC_MESSAGE, STCLASS=CONSTANT SYMDEF, FCG=DU, MID=X, MON=NO,
      286     8617                   CODE=%S$DUMESSAGE, SEV=SEV_SNAP, CUSR=YES, ROSEG=YES,
      287     8618                   ISEG=YES, DDSEG=YES, DBSEG=YES, ASLSEG=YES);
      288     8679        %FPT_SCREECH(FPTN=SNAP_EVENT,STCLASS=CONSTANT SYMDEF,SCODE=SC_EVENT);
      289     8693        %VLP_SCODE(FPTN=SC_EVENT, STCLASS=CONSTANT SYMDEF, FCG=DU, MID=X, MON=NO,
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:79   
      290     8694                   CODE=%S$DUEVENT, SEV=SEV_SNAP, CUSR=YES, ROSEG=YES,
      291     8695                   ISEG=YES, DDSEG=YES, DBSEG=YES, ASLSEG=YES);
      292     8756        %FPT_OPEN(FPTN=FPT_OPEN,STCLASS=CONSTANT,XONLY=YES);
      293     8865        %FPT_OPEN(FPTN=FPTOPEN,STCLASS=);
      294     8974        %FPT_RELDCB (FPTN=FPTRELDCB,
      295     8975                     STCLASS=);
      296     8989        %FPT_RELDCB (FPTN=FPT_RELDCB,
      297     8990                     STCLASS=SYMREF);
      298     9004        %FPT_CLOSE (FPTN=FPT_CLOSE, STCLASS=SYMREF);
      299     9046        %FPT_CLOSE (FPTN=FPT$CLOSE, STCLASS=AUTO);
      300     9088    1   DCL 1 MESSAGE_BUF CONSTANT,
      301     9089    1         2 VFC CHAR(1) INIT(%VFC_TRANSITION1),
      302     9090    1         2 TEXT CHAR(0) INIT('User- or installation-set memory limit reached.');
      303     9091        %FPT_WRITE(FPTN=FPT_WRITE,
      304     9092                   STCLASS=CONSTANT,
      305     9093                   BUF=MESSAGE_BUF,
      306     9094                   VFC=YES);
      307     9125        %FPT_WRITE(FPTN=FPT$WRITE,
      308     9126                   STCLASS=AUTO);
      309     9157        %FPT_EOM (FPTN=FPT_EOM,
      310     9158                  STCLASS=CONSTANT,
      311     9159                  EOMTABLE=VLP_EOMTABLE);
      312     9189        %VLP_EOMTABLE (FPTN=VLP_EOMTABLE,
      313     9190                  STCLASS=CONSTANT,
      314     9191                  VALUES=STD);
      315     9210        %INCLUDE XUH_MACRO_C;
      316     9294        %INCLUDE DD_SD_M;
      317    10630        %S_D;
      318    11948        %S_D_PTRS;
      319    11985        %INCLUDE GD$MSG_M;
      320    12149       %GD$MSG(FPTN=GD$MSG, STCLASS="BASED(S_D_L6_MESSAGE$)",L6=YES,L6PTR="UBIN(32) UNAL");
      321    12305        %GD$MSG(FPTN=GD$MSG_HOST, STCLASS="BASED(S_D_HOST_MESSAGE$)",L6=NO);
      322    12461        %INCLUDE G_LCP6_E;
      323    12719        %INCLUDE DF_EQUS_E;
      324    12732        %INCLUDE GD_EQUS_E;
      325    12893        /**/
      326    12894        /* External routines */
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:80   
      327    12895        /**/
      328    12896    1   DCL DDA$AT         ENTRY       ALTRET;
      329    12897    1   DCL DDA$DO         ENTRY       ALTRET;
      330    12898    1   DCL DDA$DOATTACH   ENTRY       ALTRET;
      331    12899    1   DCL DDA$GO         ENTRY       ALTRET;
      332    12900    1   DCL DDA$KILL1      ENTRY;
      333    12901    1   DCL DDA$ON         ENTRY       ALTRET;
      334    12902    1   DCL DDA$STEP_DECR  ENTRY       ALTRET;
      335    12903    1   DCL DDA$STEP_MORE  ENTRY(1)    ALTRET;
      336    12904    1   DCL DDB$BREAK      ENTRY       ALTRET;
      337    12905    1   DCL DDB$EISRESET   ENTRY       ALTRET;
      338    12906    1   DCL DDB$INTERP     ENTRY(3);
      339    12907    1   DCL DDB$PLANTONE   ENTRY(4)    ALTRET;
      340    12908    1   DCL DDB$RESTORE    ENTRY;
      341    12909    1   DCL DDB$SET_TT     ENTRY       ALTRET;
      342    12910    1   DCL DDB$STEPRESET  ENTRY       ALTRET;
      343    12911    1   DCL DDB$TTRESET    ENTRY       ALTRET;
      344    12912    1   DCL DDB$USERFAULT  ENTRY       ALTRET;
      345    12913    1   DCL DDB$WHENRESET  ENTRY       ALTRET;
      346    12914    1   DCL DDB$XEQRESET   ENTRY       ALTRET;
      347    12915    1   DCL DDC$SET_AS     ENTRY;
      348    12916    1   DCL DDC$POP_AS     ENTRY;
      349    12917    1   DCL DDE$ERROR      ENTRY;
      350    12918    1   DCL DDF$FIND_PEDEF ENTRY(2)    ALTRET;
      351    12919    1   DCL DDM$GETMEM     ENTRY(3)    ALTRET;
      352    12920    1   DCL DDQ$READ_ALIB ENTRY(2);
      353    12921    1   DCL DDQ$WRITE      ENTRY(2);
      354    12922    1   DCL DDR$REPORT     ENTRY(1);
      355    12923    1   DCL DDS$EMTREE     ENTRY       ALTRET;
      356    12924    1   DCL DDS$ES_INQ     ENTRY(1)    ALTRET;
      357    12925    1   DCL DDS$SCAN       ENTRY       ALTRET;
      358    12926    1   DCL DDS$SCAN1      ENTRY       ALTRET;
      359    12927    1   DCL DDS$SCAN2      ENTRY       ALTRET;
      360    12928    1   DCL DDS$SET_Q2C    ENTRY       ALTRET;
      361    12929    1   DCL DDT$XTAGS      ENTRY(4);
      362    12930    1   DCL DFA$GET_FPRG_DCB ENTRY(1);
      363    12931    1   DCL DFA$FPRG       ENTRY(1);
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:81   
      364    12932    1   DCL DFA$GO         ENTRY(1)  ALTRET;
      365    12933    1   DCL DFA$KILL_FPRG  ENTRY(1);
      366    12934    1   DCL DFA$SETUP_FPRG ENTRY(4) ALTRET;
      367    12935    1   DCL DFA$STOP_FPRGS ENTRY(2) ALTRET;
      368    12936    1   DCL DFA$TRACE_REPORT ENTRY ALTRET;
      369    12937    1   DCL DFQ$READ_FD    ENTRY(2)    ALTRET;
      370    12938    1   DCL DFR$EVENTRPT   ENTRY(1);
      371    12939    1   DCL DFR$REPORT     ENTRY(1);
      372    12940    1   DCL DUD$MINI       ENTRY(1);
      373    12941    1   DCL DUA$ALIB       ENTRY(2)    ALTRET;
      374    12942    1   DCL DUA$EXITDELTA  ENTRY;
      375    12943    1   DCL DUA$KILL_ANLZ  ENTRY(0)    ALTRET;
      376    12944    1   DCL DUA$KILL_RUM   ENTRY(0);
      377    12945    1   DCL DUA$WHEN       ENTRY       ALTRET;
      378    12946    1   DCL DUA$WHENIN     ENTRY       ALTRET;
      379    12947    1   DCL DUA$WHENOUT    ENTRY(1)    ALTRET;
      380    12948    1   DCL DUE$ERRMSG     ENTRY;
      381    12949    1   DCL DDI$SETUP      ENTRY;
      382    12950    1   DCL DUI$1STIME     ENTRY       ALTRET;
      383    12951    1   DCL DUR$ECCRPT     ENTRY (1);
      384    12952    1   DCL DUX$BREAK      ENTRY ASYNC;
      385    12953    1   DCL DUX$EVENT ENTRY ASYNC OPTIONAL;
      386    12954    1   DCL DUX$TRAP       ENTRY;
      387    12955    1   DCL DUX$XCON       ENTRY;
      388    12956    1   DCL DUX$XCON1_REL  ENTRY;
      389    12957    1   DCL DXA$GET_APT1   ENTRY(2);
      390    12958    1   DCL DXA$SSF        ENTRY       ALTRET;
      391    12959    1   DCL DXA$QUIT       ENTRY       ALTRET;
      392    12960    1   DCL DXB$CUSE       ENTRY;
      393    12961    1   DCL DXC$USERGO     ENTRY;
      394    12962    1   DCL DXI$1STIME     ENTRY;
      395    12963        %EJECT;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:82   
      396    12964        /*D* NAME: DUA$DELTA1
      397    12965             DESCRIPTION:  Initialize first time thru DELTA.  Set up
      398    12966                  asynchronous entry points.
      399    12967        */
      400    12968    1   DUA$DELTA1: ENTRY;                      /* First time only entry              */

  12968  2 000003   000000 700200 xent  DUA$DELTA1   TSX0  ! X66_AUTO_0
         2 000004   000310 000000                    ZERO    200,0

      401    12969                                                /**/
      402    12970                                           /* Set up for initial entry (user DELTA) */
      403    12971                                 /* XDELTA routines are at the end of this module */
      404    12972                                                /**/
      405    12973    1        CALL DUI$1STIME

  12973  2 000005   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000006   000000 701000 xent               TSX1    DUI$1STIME
         2 000007   000011 702000 2                  TSX2    s:12975
         2 000010   000044 710000 2                  TRA     s:12984

      406    12974    2             WHENALTRETURN DO;

      407    12975    2                  CALL DDE$ERROR;

  12975  2 000011   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000012   000000 701000 xent               TSX1    DDE$ERROR
         2 000013   000000 011000                    NOP     0

      408    12976    2                  FPT$DRTN = FPT_DRTN;

  12976  2 000014   000100 100400                    MLR     fill='000'O
         2 000015   000006 000070 0                  ADSC9   FPT_DRTN                 cn=0,n=56
         2 000016   200070 000070                    ADSC9   FPT$DRTN,,AUTO           cn=0,n=56

      409    12977    2                  FPT$DRTN.V_ = VECTOR(FPT$DRTN.V);

  12977  2 000017   000000 235000 3                  LDA     0
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:83   
         2 000020   200300 452500                    STP2    LS+1,,AUTO
         2 000021   200300 236100                    LDQ     LS+1,,AUTO
         2 000022   000102 036003                    ADLQ    66,DU
         2 000023   200074 757100                    STAQ    FPT$DRTN+4,,AUTO

      410    12978    2                  IF B$TCB$ -> B$TCB.STK$ -> B$EXCFR.ECC = %ECC_DELTA# AND

  12978  2 000024   000000 470400 xsym               LDP0    B$TCB$
         2 000025   000001 471500                    LDP1    1,,PR0
         2 000026   100000 720100                    LXL0    0,,PR1
         2 000027   000132 100003                    CMPX0   90,DU
         2 000030   000037 601000 2                  TNZ     s:12981
         2 000031   100100 721100                    LXL1    64,,PR1
         2 000032   000002 101003                    CMPX1   2,DU
         2 000033   000037 601000 2                  TNZ     s:12981

      411    12979    2                     B$TCB$ -> B$TCB.STK$ -> B$EXCFR.SUBC = %SC_YC#
      412    12980    2                  THEN FPT$DRTN.V.KLDELTA# = '1'B;

  12980  2 000034   002000 236003                    LDQ     1024,DU
         2 000035   200103 256100                    ORSQ    FPT$DRTN+11,,AUTO
         2 000036   000041 710000 2                  TRA     s:12982

      413    12981    2                  ELSE FPT$DRTN.V.QUIT# = '1'B;

  12981  2 000037   100000 236003                    LDQ     32768,DU
         2 000040   200103 256100                    ORSQ    FPT$DRTN+11,,AUTO

      414    12982    2                  CALL M$DRTN (FPT$DRTN);

  12982  2 000041   200070 630500                    EPPR0   FPT$DRTN,,AUTO
         2 000042   010017 713400                    CLIMB   4111
         2 000043   402000 401760                    pmme    nvectors=5

      415    12983    2                END;

      416    12984    1        REMEMBER DRTN_QUIT IN S_D.REM_DRTN_QUIT;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:84   

  12984  2 000044   005741 635000 2                  EAA     DRTN_QUIT
         2 000045   000000 470400 xsym               LDP0    S_D$
         2 000046   005200 452500                    STP2    2688,,PR0
         2 000047   005201 755100                    STA     2689,,PR0

      417    12985    1        REMEMBER DRTN_KLDELTA IN S_D.REM_DRTN_KLDELTA;

  12985  2 000050   005744 635000 2                  EAA     DRTN_KLDELTA
         2 000051   005272 452500                    STP2    2746,,PR0
         2 000052   005273 755100                    STA     2747,,PR0

      418    12986    1        REMEMBER BRK IN S_D.REM_BREAK;

  12986  2 000053   003601 635000 2                  EAA     BRK
         2 000054   005242 452500                    STP2    2722,,PR0
         2 000055   005243 755100                    STA     2723,,PR0

      419    12987    1        REMEMBER DO_ATTACH IN S_D.DO_ATTACHMENTS;

  12987  2 000056   003216 635000 2                  EAA     DO_ATTACH
         2 000057   006730 452500                    STP2    3544,,PR0
         2 000060   006731 755100                    STA     3545,,PR0

      420    12988    1        REMEMBER DO_MESSAGE IN S_D.DO_MESSAGE;

  12988  2 000061   002431 635000 2                  EAA     DO_MESSAGE
         2 000062   006770 452500                    STP2    3576,,PR0
         2 000063   006771 755100                    STA     3577,,PR0

      421    12989    1        CALL M$INT(FPT_INT);

  12989  2 000064   000032 630400 0                  EPPR0   FPT_INT
         2 000065   010002 713400                    CLIMB   4098
         2 000066   400000 401760                    pmme    nvectors=1

      422    12990    1        CALL M$XCON(FPT_XCON);
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:85   

  12990  2 000067   000024 630400 0                  EPPR0   FPT_XCON
         2 000070   010003 713400                    CLIMB   4099
         2 000071   400400 401760                    pmme    nvectors=2

      423    12991    1        CALL M$TRAP(FPT_TRAP);

  12991  2 000072   000036 630400 0                  EPPR0   FPT_TRAP
         2 000073   010004 713400                    CLIMB   4100
         2 000074   400400 401760                    pmme    nvectors=2

      424    12992    1        CALL M$EVENT (FPT$EVENT);

  12992  2 000075   000050 630400 0                  EPPR0   FPT$EVENT
         2 000076   010001 713400                    CLIMB   4097
         2 000077   400000 401760                    pmme    nvectors=1

      425    12993    1        IF S_D.STAND_ALONE THEN S_D.SAVEIC = 16; /* Make it easy for him  */

  12993  2 000100   000000 470400 xsym               LDP0    S_D$
         2 000101   004624 234100                    SZN     2452,,PR0
         2 000102   000106 605000 2                  TPL     s:12995

  12993  2 000103   000020 235007                    LDA     16,DL
         2 000104   000002 755100                    STA     2,,PR0
         2 000105   000113 710000 2                  TRA     s:12995+5

      426    12994                                                /* to not stomp on the SL */
      427    12995    1        ELSE S_D.SAVEIC = B$TCB$->B$TCB.STK$->B$SS.IC; /* Set up initial IC */

  12995  2 000106   000000 471400 xsym               LDP1    B$TCB$
         2 000107   100001 473500                    LDP3    1,,PR1
         2 000110   300004 236100                    LDQ     4,,PR3
         2 000111   000022 772000                    QRL     18
         2 000112   000002 756100                    STQ     2,,PR0
         2 000113   000116 710000 2                  TRA     s:13002

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:86   
      428    12996        /**/
      429    12997        /*D* NAME: DUA$DELTA
      430    12998             DESCRIPTION:  Determine why we were entered, report condition,
      431    12999                  get command, or execute attachements.
      432    13000        */
      433    13001    1   DUA$DELTA: ENTRY;                       /* Not FIRST_TIME entry               */

  13001  2 000114   000000 700200 xent  DUA$DELTA    TSX0  ! X66_AUTO_0
         2 000115   000310 000000                    ZERO    200,0

      434    13002    1        TRAP = '0'B;

  13002  2 000116   200032 450100                    STZ     TRAP,,AUTO

      435    13003    1        S_D.ALIB = '0'B;

  13003  2 000117   000000 470400 xsym               LDP0    S_D$
         2 000120   005134 450100                    STZ     2652,,PR0

      436    13004    1        S_D.DO_CALLED = '0'B;

  13004  2 000121   005315 450100                    STZ     2765,,PR0

      437    13005    1        ALIB_SAID_GOBACK = '0'B;

  13005  2 000122   200003 450100                    STZ     ALIB_SAID_GOBACK,,AUTO

      438    13006    1        S_D.ALIB_SAID_QUIET = '0'B;

  13006  2 000123   000070 450100                    STZ     56,,PR0

      439    13007    1        S_D.ALIB_SAID_ECHO = '0'B;

  13007  2 000124   000067 450100                    STZ     55,,PR0

      440    13008    1        S_D.E$XIT = '0'B;

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:87   
  13008  2 000125   005137 450100                    STZ     2655,,PR0

      441    13009    1        S_D.USVFC = '1'B;                  /* Delta just got entered fresh,

  13009  2 000126   400000 236003                    LDQ     -131072,DU
         2 000127   005144 756100                    STQ     2660,,PR0

      442    13010                                           tell DDQ$WRITE to use the transition VFC on
      443    13011                                           the next write */
      444    13012    1        ECC = B$TCB$->B$TCB.STK$->B$EXCFR.ECC;

  13012  2 000130   000000 471400 xsym               LDP1    B$TCB$
         2 000131   100001 473500                    LDP3    1,,PR1
         2 000132   300000 236100                    LDQ     0,,PR3
         2 000133   777777 376007                    ANQ     -1,DL
         2 000134   200005 756100                    STQ     ECC,,AUTO

      445    13013    1        SUBC = B$TCB$->B$TCB.STK$->B$EXCFR.SUBC;

  13013  2 000135   300100 236100                    LDQ     64,,PR3
         2 000136   777777 376007                    ANQ     -1,DL
         2 000137   200025 756100                    STQ     SUBC,,AUTO

      446    13014    1        EVID = B$TCB$->B$TCB.STK$->B$EXCFR.EVID;

  13014  2 000140   300101 235100                    LDA     65,,PR3
         2 000141   200026 755100                    STA     EVID,,AUTO

      447    13015    1        ASL = B$TCB$->B$TCB.STK$->B$EXCFR.ASLIC;

  13015  2 000142   300001 235100                    LDA     1,,PR3
         2 000143   200027 755100                    STA     ASL,,AUTO

      448    13016    1        IF ECC = %ECC_XCON#

  13016  2 000144   200005 235100                    LDA     ECC,,AUTO
         2 000145   000003 115007                    CMPA    3,DL
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:88   
         2 000146   000151 601000 2                  TNZ     s:13018

      449    13017    1        THEN S_D.XCONING = '1'B;

  13017  2 000147   400000 236003                    LDQ     -131072,DU
         2 000150   006764 756100                    STQ     3572,,PR0

      450    13018    1        IF ECC = %ECC_INT#

  13018  2 000151   000002 115007                    CMPA    2,DL
         2 000152   000156 601000 2                  TNZ     s:13020

      451    13019    1        THEN S_D.INT# = '1'B;

  13019  2 000153   400000 236003                    LDQ     -131072,DU
         2 000154   006716 756100                    STQ     3534,,PR0
         2 000155   000157 710000 2                  TRA     s:13021

      452    13020    1        ELSE S_D.INT# = '0'B;

  13020  2 000156   006716 450100                    STZ     3534,,PR0

      453    13021    1        CALL DDC$SET_AS;                   /* Push special pointers on arg stack */

  13021  2 000157   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000160   000000 701000 xent               TSX1    DDC$SET_AS
         2 000161   000000 011000                    NOP     0

      454    13022    1        FPT$DRTN=FPT_DRTN;                 /* Initialize our return fpt          */

  13022  2 000162   000100 100400                    MLR     fill='000'O
         2 000163   000006 000070 0                  ADSC9   FPT_DRTN                 cn=0,n=56
         2 000164   200070 000070                    ADSC9   FPT$DRTN,,AUTO           cn=0,n=56

      455    13023    1        FPT$DRTN.V_ = VECTOR(FPT$DRTN.V);

  13023  2 000165   000000 235000 3                  LDA     0
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:89   
         2 000166   200300 452500                    STP2    LS+1,,AUTO
         2 000167   200300 236100                    LDQ     LS+1,,AUTO
         2 000170   000102 036003                    ADLQ    66,DU
         2 000171   200074 757100                    STAQ    FPT$DRTN+4,,AUTO

      456    13024    1        FPT$DRTN.V.ECC#=%ECC_DELTA#; /* Usually we don't want to enter users xcon */

  13024  2 000172   000132 220003                    LDX0    90,DU
         2 000173   200103 440100                    SXL0    FPT$DRTN+11,,AUTO

      457    13025    1        FPT$DRTN.V.SETECC#='1'B;           /* Or break routines on a "GO"        */

  13025  2 000174   200000 236003                    LDQ     65536,DU
         2 000175   200103 256100                    ORSQ    FPT$DRTN+11,,AUTO

      458    13026    1        S_D.DRTN$ = ADDR(FPT$DRTN);        /* Others have to find this           */

  13026  2 000176   200070 630500                    EPPR0   FPT$DRTN,,AUTO
         2 000177   000000 471400 xsym               LDP1    S_D$
         2 000200   104704 450500                    STP0    2500,,PR1

      459    13027    1        S_D.UREG$ = ADDR(UREGS);

  13027  2 000201   200042 633500                    EPPR3   UREGS,,AUTO
         2 000202   100045 453500                    STP3    37,,PR1

      460    13028    1        FPT$DRTN.REGS_ = VECTOR(UREGS);

  13028  2 000203   000001 235000 3                  LDA     1
         2 000204   200300 452500                    STP2    LS+1,,AUTO
         2 000205   200300 236100                    LDQ     LS+1,,AUTO
         2 000206   000042 036003                    ADLQ    34,DU
         2 000207   200070 757100                    STAQ    FPT$DRTN,,AUTO

      461    13029    1        CALL DDI$SETUP;

  13029  2 000210   000002 631400 xsym               EPPR1   B_VECTNIL+2
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:90   
         2 000211   000000 701000 xent               TSX1    DDI$SETUP
         2 000212   000000 011000                    NOP     0

      462    13030                                                /**/
      463    13031    1        IF S_D.DEBUGA(%DB@ECC)

  13031  2 000213   000000 470400 xsym               LDP0    S_D$
         2 000214   000053 236100                    LDQ     43,,PR0
         2 000215   000040 316007                    CANQ    32,DL
         2 000216   000233 600000 2                  TZE     s:13048

      464    13032    2        THEN DO;

      465    13033    2             CALL DUR$ECCRPT(ECCRPT_FORUSER);

  13033  2 000217   000002 630400 3                  EPPR0   2
         2 000220   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000221   000000 701000 xent               TSX1    DUR$ECCRPT
         2 000222   000000 011000                    NOP     0

      466    13034    3             IF S_D.DEBUG THEN DO;

  13034  2 000223   000000 470400 xsym               LDP0    S_D$
         2 000224   004732 234100                    SZN     2522,,PR0
         2 000225   000233 605000 2                  TPL     s:13048

      467    13035    3                  CALL DUD$MINI;

  13035  2 000226   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000227   000000 701000 xent               TSX1    DUD$MINI
         2 000230   000000 011000                    NOP     0

      468    13036    3                  S_D.PROMPT_SIZE = 0;

  13036  2 000231   000000 470400 xsym               LDP0    S_D$
         2 000232   005147 450100                    STZ     2663,,PR0

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:91   
      469    13037    3                END;

      470    13038    2           END;

      471    13039        %EJECT;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:92   
      472    13040                                                /**/
      473    13041                                           /* Determine why we got entered, and take
      474    13042                                           the appropriate action. */
      475    13043                                                /**/
      476    13044                                                /**/
      477    13045                                           /* Initial DELTA entry, look for our other
      478    13046                                           names (RUM, PMD) */
      479    13047                                                /**/
      480    13048    2        IF ECC = %ECC_DELTA# THEN DO;

  13048  2 000233   200005 235100                    LDA     ECC,,AUTO
         2 000234   000132 115007                    CMPA    90,DL
         2 000235   000622 601000 2                  TNZ     s:13164

      481    13049    2             PTR$ = ADDR(B$JIT.CCBUF);

  13049  2 000236   000000 236000 xsym               LDQ     B$JIT$
         2 000237   000033 036003                    ADLQ    27,DU
         2 000240   200022 756100                    STQ     PTR$,,AUTO

      482    13050    2             TEMP$ = PINCRC(ADDR(B$JIT.CCBUF), LENGTHC(B$JIT.CCBUF)-1);
             13050                      /* Point at last byte in CCBUF */

  13050  2 000241   000000 236000 xsym               LDQ     B$JIT$
         2 000242   000003 036000 3                  ADLQ    3
         2 000243   200037 756100                    STQ     TEMP$,,AUTO

      483    13051    3             DO WHILE (PTR$->CHAR1 = ' '); /* Look for first non-blank */

  13051  2 000244   200022 471500                    LDP1    PTR$,,AUTO
         2 000245   040000 106500                    CMPC    fill='040'O
         2 000246   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 000247   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000250   000261 601000 2                  TNZ     s:13054

      484    13052    3                  PTR$ = PINCRC(PTR$, 1);

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:93   
  13052  2 000251   200022 236100                    LDQ     PTR$,,AUTO
         2 000252   200000 036007                    ADLQ    65536,DL
         2 000253   200022 756100                    STQ     PTR$,,AUTO

      485    13053    3                END;

  13053  2 000254   200022 470500                    LDP0    PTR$,,AUTO
         2 000255   040000 106500                    CMPC    fill='040'O
         2 000256   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 000257   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000260   000251 600000 2                  TZE     s:13052

      486    13054    2             DRL$ = PTR$;                  /* Save this, we'll use it later */

  13054  2 000261   200022 236100                    LDQ     PTR$,,AUTO
         2 000262   200004 756100                    STQ     DRL$,,AUTO

      487    13055    2             CALL XLATE ( CHAR_4, XLATE_TABLE, PTR$ -> CHAR4);

  13055  2 000263   200022 470500                    LDP0    PTR$,,AUTO
         2 000264   000000 471400 xsym               LDP1    B$XL_UPPER$
         2 000265   040100 160500                    MVT     fill='040'O
         2 000266   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4
         2 000267   200066 000004                    ADSC9   CHAR_4,,AUTO             cn=0,n=4
         2 000270   100000 000100                    ARG     0,,PR1

      488    13056    2             IF CHAR_4 = 'RUM ' OR CHAR_4 = 'PMD '

  13056  2 000271   200066 236100                    LDQ     CHAR_4,,AUTO
         2 000272   000274 116000 0                  CMPQ    VLP_EOMTABLE+8
         2 000273   000276 600000 2                  TZE     s:13058
         2 000274   000275 116000 0                  CMPQ    VLP_EOMTABLE+9
         2 000275   000371 601000 2                  TNZ     s:13088

      489    13057    3             THEN DO;

      490    13058    3                  IF CHAR_4 = 'RUM '
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:94   

  13058  2 000276   000274 116000 0                  CMPQ    VLP_EOMTABLE+8
         2 000277   000327 601000 2                  TNZ     s:13070

      491    13059    4                  THEN DO;

      492    13060    4                       PTR$ = PINCRC(PTR$, 4);

  13060  2 000300   200022 236100                    LDQ     PTR$,,AUTO
         2 000301   000001 036003                    ADLQ    1,DU
         2 000302   200022 756100                    STQ     PTR$,,AUTO

      493    13061    5                       DO WHILE (PTR$->CHAR1 = ' ');

  13061  2 000303   200022 470500                    LDP0    PTR$,,AUTO
         2 000304   040000 106500                    CMPC    fill='040'O
         2 000305   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 000306   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000307   000327 601000 2                  TNZ     s:13070

      494    13062    5                            PTR$ = PINCRC(PTR$, 1);

  13062  2 000310   200022 236100                    LDQ     PTR$,,AUTO
         2 000311   200000 036007                    ADLQ    65536,DL
         2 000312   200022 756100                    STQ     PTR$,,AUTO

      495    13063    5                            IF PTR$ > TEMP$

  13063  2 000313   200037 116100                    CMPQ    TEMP$,,AUTO
         2 000314   000322 602000 2                  TNC     s:13068
         2 000315   000322 600000 2                  TZE     s:13068

      496    13064    6                            THEN DO;       /* TEMP$ = end of CCBUF */

      497    13065    6                                 S_D.ERROR = E@RUM_WHAT; /*E@RUM_WHAT*/

  13065  2 000316   000311 235007                    LDA     201,DL
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:95   
         2 000317   000000 470400 xsym               LDP0    S_D$
         2 000320   000013 755100                    STA     11,,PR0

      498    13066    6                                 GOTO DRTN_ERRQUIT;

  13066  2 000321   005736 710000 2                  TRA     DRTN_ERRQUIT

      499    13067    6                               END;
      500    13068    5                          END;

  13068  2 000322   200022 470500                    LDP0    PTR$,,AUTO
         2 000323   040000 106500                    CMPC    fill='040'O
         2 000324   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 000325   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000326   000310 600000 2                  TZE     s:13062

      501    13069    4                     END;

      502    13070    3                  S_D.INPUT = B$JIT.CCBUF;

  13070  2 000327   000000 471400 xsym               LDP1    B$JIT$
         2 000330   000000 473400 xsym               LDP3    S_D$
         2 000331   040100 100500                    MLR     fill='040'O
         2 000332   100033 000400                    ADSC9   27,,PR1                  cn=0,n=256
         2 000333   300610 000400                    ADSC9   392,,PR3                 cn=0,n=256

      503    13071    3                  S_D.NCHARS = B$JIT.CCARS;

  13071  2 000334   100032 236100                    LDQ     26,,PR1
         2 000335   000022 732000                    QRS     18
         2 000336   300065 756100                    STQ     53,,PR3

      504    13072    3                  S_D.DO$ = ADDR(NIL);

  13072  2 000337   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000340   300031 756100                    STQ     25,,PR3

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:96   
      505    13073    3                  REMEMBER S_FAULT IN S_D.REM_DO_SCAN;

  13073  2 000341   005062 635000 2                  EAA     S_FAULT
         2 000342   300022 452500                    STP2    18,,PR3
         2 000343   300023 755100                    STA     19,,PR3

      506    13074    3                  S_D.DO_SCAN = '1'B;

  13074  2 000344   400000 236003                    LDQ     -131072,DU
         2 000345   300017 756100                    STQ     15,,PR3

      507    13075    3                  CALL DDS$SCAN1 ALTRET(DRTN_QUIT);

  13075  2 000346   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000347   000000 701000 xent               TSX1    DDS$SCAN1
         2 000350   005741 702000 2                  TSX2    DRTN_QUIT

      508    13076    3                  IF S_D.XUG_BUILTIN THEN GOTO DRTN_QUIT;

  13076  2 000351   000000 470400 xsym               LDP0    S_D$
         2 000352   006742 234100                    SZN     3554,,PR0
         2 000353   005741 604000 2                  TMI     DRTN_QUIT

      509    13077    3                  IF CHAR_4 = 'RUM ' THEN S_D.RUM_ONLY = '1'B;

  13077  2 000354   200066 236100                    LDQ     CHAR_4,,AUTO
         2 000355   000274 116000 0                  CMPQ    VLP_EOMTABLE+8
         2 000356   000362 601000 2                  TNZ     s:13079

  13077  2 000357   400000 236003                    LDQ     -131072,DU
         2 000360   005145 756100                    STQ     2661,,PR0
         2 000361   000370 710000 2                  TRA     s:13082

      510    13078    4                  ELSE DO;

      511    13079    4                       S_D.PMD_ONLY = '1'B;

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:97   
  13079  2 000362   400000 236003                    LDQ     -131072,DU
         2 000363   005146 756100                    STQ     2662,,PR0

      512    13080    4                       CALL DUR$ECCRPT(ECCRPT_USER);

  13080  2 000364   000004 630400 3                  EPPR0   4
         2 000365   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000366   000000 701000 xent               TSX1    DUR$ECCRPT
         2 000367   000000 011000                    NOP     0

      513    13081    4                     END;

      514    13082    3                  GOTO SCAN_COMMAND1;

  13082  2 000370   005000 710000 2                  TRA     SCAN_COMMAND1

      515    13083    3                END;
      516    13084                                                /**/
      517    13085                                      /* Test sub code to see why we`re here, report
      518    13086                                         either DELTA HERE IC=, or DELTA HERE - NO RU */
      519    13087                                                /**/
      520    13088    3             DO CASE(SUBC);

  13088  2 000371   200025 235100                    LDA     SUBC,,AUTO
         2 000372   000003 115007                    CMPA    3,DL
         2 000373   000375 602005 2                  TNC     s:13088+4,AL
         2 000374   000606 710000 2                  TRA     s:13149
         2 000375   000400 710000 2                  TRA     s:13090
         2 000376   000601 710000 2                  TRA     s:13146
         2 000377   000405 710000 2                  TRA     s:13093

      521    13089    3               CASE(%SC_STARTU#);          /* Start under DELTA */

      522    13090    3                  CALL DDR$REPORT( R_DELTA ); /* DELTA here @ADDR */

  13090  2 000400   000005 630400 3                  EPPR0   5
         2 000401   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:98   
         2 000402   000000 701000 xent               TSX1    DDR$REPORT
         2 000403   000000 011000                    NOP     0

      523    13091    3                  GOTO SCAN_COMMAND;

  13091  2 000404   004634 710000 2                  TRA     SCAN_COMMAND

      524    13092    3               CASE(%SC_YC#);              /* Start under Control-Y DELTA */

      525    13093    3                  S_D.POST_ASSOC = '1'B;

  13093  2 000405   400000 236003                    LDQ     -131072,DU
         2 000406   000000 473400 xsym               LDP3    S_D$
         2 000407   306737 756100                    STQ     3551,,PR3

      526    13094    3                  IF EVID = %EVID_AUTOS#

  13094  2 000410   200026 235100                    LDA     EVID,,AUTO
         2 000411   000001 115007                    CMPA    1,DL
         2 000412   000420 601000 2                  TNZ     s:13096

      527    13095    3                  THEN CALL DDR$REPORT( R_AUTOS ); /* Auto shared RU */

  13095  2 000413   000007 630400 3                  EPPR0   7
         2 000414   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000415   000000 701000 xent               TSX1    DDR$REPORT
         2 000416   000000 011000                    NOP     0
         2 000417   000424 710000 2                  TRA     s:13099

      528    13096    3                  ELSE CALL DDR$REPORT( R_DELTA ); /* DELTA here @ADDR */

  13096  2 000420   000005 630400 3                  EPPR0   5
         2 000421   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000422   000000 701000 xent               TSX1    DDR$REPORT
         2 000423   000000 011000                    NOP     0

      529    13097                       /* Check for any FPRGs, if there are any, set up the
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:99   
      530    13098                          context and stop that FPRG */
      531    13099    3                  DCB$ = B$ROS$ -> B$ROSEG.DCBPTR$;

  13099  2 000424   000000 470400 xsym               LDP0    B$ROS$
         2 000425   000000 236100                    LDQ     0,,PR0
         2 000426   200052 756100                    STQ     DCB$,,AUTO

      532    13100    3                  NDCBS = B$ROS$ -> B$ROSEG.NUMDCBS;

  13100  2 000427   000002 236100                    LDQ     2,,PR0
         2 000430   000022 772000                    QRL     18
         2 000431   200056 756100                    STQ     NDCBS,,AUTO

      533    13101    4                  DO I = 0 TO NDCBS - 1;

  13101  2 000432   200016 450100                    STZ     I,,AUTO
         2 000433   000574 710000 2                  TRA     s:13143+3

      534    13102    4                       TDCB$ = DCB$ -> B$RODCB$(I);

  13102  2 000434   200052 470500                    LDP0    DCB$,,AUTO
         2 000435   200016 720100                    LXL0    I,,AUTO
         2 000436   000000 236110                    LDQ     0,X0,PR0
         2 000437   200055 756100                    STQ     TDCB$,,AUTO

      535    13103    4                       IF TDCB$ ~= ADDR(NIL)

  13103  2 000440   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000441   000571 600000 2                  TZE     s:13143

      536    13104    5                       THEN DO;

      537    13105    5                            IF TDCB$ -> F$DCB.ORG# = %FPRG# AND

  13105  2 000442   200055 471500                    LDP1    TDCB$,,AUTO
         2 000443   100032 236100                    LDQ     26,,PR1
         2 000444   777000 376003                    ANQ     -512,DU
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:100  
         2 000445   012000 116003                    CMPQ    5120,DU
         2 000446   000571 601000 2                  TNZ     s:13143
         2 000447   100040 236100                    LDQ     32,,PR1
         2 000450   000777 376003                    ANQ     511,DU
         2 000451   000007 116003                    CMPQ    7,DU
         2 000452   000571 601000 2                  TNZ     s:13143
         2 000453   100031 236100                    LDQ     25,,PR1
         2 000454   020000 316007                    CANQ    8192,DL
         2 000455   000571 600000 2                  TZE     s:13143

      538    13106    5                               TDCB$ -> F$DCB.WSR# = %USERWSR AND
      539    13107    5                               TDCB$ -> F$DCB.FCD#
      540    13108    6                            THEN DO;

      541    13109    6                                 TFPRG$ = S_D.FPRG_CONTEXT$;

  13109  2 000456   000000 473400 xsym               LDP3    S_D$
         2 000457   300076 236100                    LDQ     62,,PR3
         2 000460   200053 756100                    STQ     TFPRG$,,AUTO

      542    13110    6                                 DUPLICATE = '0'B;

  13110  2 000461   200054 450100                    STZ     DUPLICATE,,AUTO

      543    13111    6                                 IF TFPRG$ ~= ADDR(NIL)

  13111  2 000462   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000463   000503 600000 2                  TZE     s:13120

      544    13112    7                                 THEN DO;

      545    13113    8                                      DO WHILE (TFPRG$ ~= ADDR(NIL) AND

  13113  2 000464   000477 710000 2                  TRA     s:13118

      546    13114    8                                                NOT DUPLICATE);
      547    13115    8                                           IF TDCB$ -> F$DCB.RES# = TFPRG$ ->
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:101  
             13115                                                    FPRG$CONTEXT.RES

  13115  2 000465   200055 470500                    LDP0    TDCB$,,AUTO
         2 000466   200053 471500                    LDP1    TFPRG$,,AUTO
         2 000467   040100 106500                    CMPC    fill='040'O
         2 000470   000026 000004                    ADSC9   22,,PR0                  cn=0,n=4
         2 000471   100002 000010                    ADSC9   2,,PR1                   cn=0,n=8
         2 000472   000475 601000 2                  TNZ     s:13117

      548    13116    8                                           THEN DUPLICATE = '1'B;

  13116  2 000473   400000 236003                    LDQ     -131072,DU
         2 000474   200054 756100                    STQ     DUPLICATE,,AUTO

      549    13117    8                                           TFPRG$ = TFPRG$ -> FPRG$CONTEXT.NEXT$;

  13117  2 000475   100000 236100                    LDQ     0,,PR1
         2 000476   200053 756100                    STQ     TFPRG$,,AUTO

      550    13118    8                                         END;

  13118  2 000477   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000500   000503 600000 2                  TZE     s:13120
         2 000501   200054 234100                    SZN     DUPLICATE,,AUTO
         2 000502   000465 605000 2                  TPL     s:13115

      551    13119    7                                    END;

      552    13120    6                                 IF NOT DUPLICATE

  13120  2 000503   200054 234100                    SZN     DUPLICATE,,AUTO
         2 000504   000571 604000 2                  TMI     s:13143

      553    13121    7                                 THEN DO;

      554    13122    7                                      RES = TDCB$ -> F$DCB.RES#;

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:102  
  13122  2 000505   200055 470500                    LDP0    TDCB$,,AUTO
         2 000506   040100 100500                    MLR     fill='040'O
         2 000507   000026 000004                    ADSC9   22,,PR0                  cn=0,n=4
         2 000510   200061 000010                    ADSC9   RES,,AUTO                cn=0,n=8

      555    13123    7                                      RES_SIZE = 4;

  13123  2 000511   000004 235007                    LDA     4,DL
         2 000512   200063 755100                    STA     RES_SIZE,,AUTO

      556    13124    7                                      CALL DFA$GET_FPRG_DCB (DCBNO);

  13124  2 000513   200057 631500                    EPPR1   DCBNO,,AUTO
         2 000514   200300 451500                    STP1    LS+1,,AUTO
         2 000515   200300 630500                    EPPR0   LS+1,,AUTO
         2 000516   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000517   000000 701000 xent               TSX1    DFA$GET_FPRG_DCB
         2 000520   000000 011000                    NOP     0

      557    13125                                          /* Call M$OPEN to get a connection to the FPRG */
      558    13126    7                                      FPTOPEN = FPT_OPEN;

  13126  2 000521   000100 100400                    MLR     fill='000'O
         2 000522   000130 000350 0                  ADSC9   FPT_OPEN                 cn=0,n=232
         2 000523   200126 000350                    ADSC9   FPTOPEN,,AUTO            cn=0,n=232

      559    13127    7                                      FPTOPEN.V_ = VECTOR(FPTOPEN.V);

  13127  2 000524   000010 235000 3                  LDA     8
         2 000525   200300 452500                    STP2    LS+1,,AUTO
         2 000526   200300 236100                    LDQ     LS+1,,AUTO
         2 000527   000172 036003                    ADLQ    122,DU
         2 000530   200126 757100                    STAQ    FPTOPEN,,AUTO

      560    13128    7                                      FPTOPEN.V.DCB# = DCBNO;

  13128  2 000531   200057 720100                    LXL0    DCBNO,,AUTO
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:103  
         2 000532   200172 740100                    STX0    FPTOPEN+36,,AUTO

      561    13129    7                                      FPTOPEN.V.EVENT# = DCBNO;

  13129  2 000533   200057 235100                    LDA     DCBNO,,AUTO
         2 000534   200213 755100                    STA     FPTOPEN+53,,AUTO

      562    13130    7                                      FPTOPEN.V.ORG# = %DBGDCB#;

  13130  2 000535   024000 236007                    LDQ     10240,DL
         2 000536   200174 552110                    STBQ    FPTOPEN+38,'10'O,AUTO

      563    13131    7                                      FPTOPEN.V.DBGDCBNO# = I;

  13131  2 000537   200016 721100                    LXL1    I,,AUTO
         2 000540   200214 741100                    STX1    FPTOPEN+54,,AUTO

      564    13132    7                                      FPTOPEN.V.RES# = 'FE  ';

  13132  2 000541   000276 236000 0                  LDQ     VLP_EOMTABLE+10
         2 000542   200176 756100                    STQ     FPTOPEN+40,,AUTO

      565    13133    7                                      CALL M$OPEN (FPTOPEN)

  13133  2 000543   200126 630500                    EPPR0   FPTOPEN,,AUTO
         2 000544   450000 713400                    CLIMB   alt,open
         2 000545   410400 401760                    pmme    nvectors=18
         2 000546   000550 702000 2                  TSX2    s:13135
         2 000547   000554 710000 2                  TRA     s:13138

      566    13134    8                                           WHENALTRETURN DO;

      567    13135    8                                                CALL DUE$ERRMSG;

  13135  2 000550   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000551   000000 701000 xent               TSX1    DUE$ERRMSG
         2 000552   000000 011000                    NOP     0
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:104  

      568    13136    8                                                GOTO SCAN_COMMAND;

  13136  2 000553   004634 710000 2                  TRA     SCAN_COMMAND

      569    13137    8                                              END;
      570    13138    7                                     CALL DFA$SETUP_FPRG (DCBNO,RES, RES_SIZE) ALTRET(
             13138                                               SCAN_COMMAND);

  13138  2 000554   200063 630500                    EPPR0   RES_SIZE,,AUTO
         2 000555   200302 450500                    STP0    LS+3,,AUTO
         2 000556   200061 631500                    EPPR1   RES,,AUTO
         2 000557   200301 451500                    STP1    LS+2,,AUTO
         2 000560   200057 633500                    EPPR3   DCBNO,,AUTO
         2 000561   200300 453500                    STP3    LS+1,,AUTO
         2 000562   200300 630500                    EPPR0   LS+1,,AUTO
         2 000563   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000564   000000 701000 xent               TSX1    DFA$SETUP_FPRG
         2 000565   004634 702000 2                  TSX2    SCAN_COMMAND

      571    13139    7                                      CALL DFA$KILL_FPRG;

  13139  2 000566   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000567   000000 701000 xent               TSX1    DFA$KILL_FPRG
         2 000570   000000 011000                    NOP     0

      572    13140    7                                    END;

      573    13141    6                                END;

      574    13142    5                          END;

      575    13143    4                     END;

  13143  2 000571   200016 235100                    LDA     I,,AUTO
         2 000572   000001 035007                    ADLA    1,DL
         2 000573   200016 755100                    STA     I,,AUTO
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:105  
         2 000574   200016 236100                    LDQ     I,,AUTO
         2 000575   000600 604000 2                  TMI     s:13144
         2 000576   200056 116100                    CMPQ    NDCBS,,AUTO
         2 000577   000434 604000 2                  TMI     s:13102

      576    13144    3                  GOTO SCAN_COMMAND;

  13144  2 000600   004634 710000 2                  TRA     SCAN_COMMAND

      577    13145    3               CASE(%SC_JOBSTEP#);         /* Delta called stand alone           */

      578    13146    3                  CALL DDR$REPORT(R_DELTA_ONLY); /* Delta here - no prog          */

  13146  2 000601   000012 630400 3                  EPPR0   10
         2 000602   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000603   000000 701000 xent               TSX1    DDR$REPORT
         2 000604   000000 011000                    NOP     0

      579    13147    3                  GOTO SCAN_COMMAND;

  13147  2 000605   004634 710000 2                  TRA     SCAN_COMMAND

      580    13148    3               CASE(ELSE);

      581    13149    3                  S_D.ERROR = E@NOTIMP;    /*E@NOTIMP*/

  13149  2 000606   000767 235007                    LDA     503,DL
         2 000607   000000 473400 xsym               LDP3    S_D$
         2 000610   300013 755100                    STA     11,,PR3

      582    13150    3                  CALL DDE$ERROR;

  13150  2 000611   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000612   000000 701000 xent               TSX1    DDE$ERROR
         2 000613   000000 011000                    NOP     0

      583    13151    3                  CALL DUR$ECCRPT(ECCRPT_DELTA);
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:106  

  13151  2 000614   000013 630400 3                  EPPR0   11
         2 000615   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000616   000000 701000 xent               TSX1    DUR$ECCRPT
         2 000617   000000 011000                    NOP     0

      584    13152    3                  CALL M$XXX;              /* Blow him away                      */

  13152  2 000620   000003 713400                    CLIMB   3
         2 000621   000000 401760                    pmme    nvectors=0

      585    13153    3               END;

      586    13154    2           END;

      587    13155        %EJECT;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:107  
      588    13156                                                /**/
      589    13157                                      /* If memory fault, and a WHEN breakpoint is set
      590    13158                                 this may be a when breakpoint hit.  Call DUA$WHENOUT
      591    13159                                 to set up an exit from DELTA with a WHEN DRL
      592    13160                                 planted after the current instruction.  This
      593    13161                                 test must be done near the top to call DDB$WHENRESET
      594    13162                                 if needed.  */
      595    13163                                                /**/
      596    13164    1        IF ECC = %ECC_ERROR# AND SUBC = %SUBC_SEC2# AND S_D.WHEN_SET AND NOT S_D.
             13164                 WHEN_ACTIVE

  13164  2 000622   200005 235100                    LDA     ECC,,AUTO
         2 000623   000007 115007                    CMPA    7,DL
         2 000624   000663 601000 2                  TNZ     s:13180
         2 000625   200025 236100                    LDQ     SUBC,,AUTO
         2 000626   000006 116007                    CMPQ    6,DL
         2 000627   000663 601000 2                  TNZ     s:13180
         2 000630   000000 470400 xsym               LDP0    S_D$
         2 000631   005314 234100                    SZN     2764,,PR0
         2 000632   000663 605000 2                  TPL     s:13180
         2 000633   005320 234100                    SZN     2768,,PR0
         2 000634   000663 604000 2                  TMI     s:13180

      597    13165    2        THEN DO;

      598    13166    2             IF ASL = %ASLIC               /* ASLIC */

  13166  2 000635   200027 235100                    LDA     ASL,,AUTO
         2 000636   000001 115007                    CMPA    1,DL
         2 000637   000643 601000 2                  TNZ     s:13168

      599    13167    2             THEN ASLIC_FLAG = '1'B;

  13167  2 000640   400000 236003                    LDQ     -131072,DU
         2 000641   200030 756100                    STQ     ASLIC_FLAG,,AUTO
         2 000642   000644 710000 2                  TRA     s:13169

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:108  
      600    13168    2             ELSE ASLIC_FLAG = '0'B;

  13168  2 000643   200030 450100                    STZ     ASLIC_FLAG,,AUTO

      601    13169    2             IF S_D.TIC ~= S_D.SL

  13169  2 000644   000027 236100                    LDQ     23,,PR0
         2 000645   000650 604000 2                  TMI     s:13170
         2 000646   000010 116100                    CMPQ    8,,PR0
         2 000647   000651 600000 2                  TZE     s:13171

      602    13170    2             THEN S_D.SAVEIC = S_D.TIC;

  13170  2 000650   000002 756100                    STQ     2,,PR0

      603    13171    2             S_D.GOIC = S_D.TIC;

  13171  2 000651   000001 756100                    STQ     1,,PR0

      604    13172    2             CALL DUA$WHENOUT(ASLIC_FLAG) ALTRET(RESTORE_ALL);

  13172  2 000652   200030 631500                    EPPR1   ASLIC_FLAG,,AUTO
         2 000653   200300 451500                    STP1    LS+1,,AUTO
         2 000654   200300 630500                    EPPR0   LS+1,,AUTO
         2 000655   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000656   000000 701000 xent               TSX1    DUA$WHENOUT
         2 000657   004573 702000 2                  TSX2    RESTORE_ALL

      605    13173    2             FPT$DRTN.V.EVENT# = '1'B;

  13173  2 000660   020000 236003                    LDQ     8192,DU
         2 000661   200103 256100                    ORSQ    FPT$DRTN+11,,AUTO

      606    13174    2             GOTO USERGO0_WHEN;            /* Don't set FPT$DRTN.V.DBRK# */

  13174  2 000662   005206 710000 2                  TRA     USERGO0_WHEN

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:109  
      607    13175    2           END;
      608    13176        %EJECT;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:110  
      609    13177                                           /* ECC_DBRK means a fault on a page protected
      610    13178                                      by a dbreak flag occured during PMME processing.
      611    13179                                      */
      612    13180    1        IF ECC = %ECC_DBRK# THEN GOTO WHENPMME;

  13180  2 000663   000141 115007                    CMPA    97,DL
         2 000664   004410 600000 2                  TZE     WHENPMME

      613    13181        %EJECT;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:111  
      614    13182                                                /**/
      615    13183                                      /* If overlay loaded, check for ON NODE(S).  If
      616    13184                                      any are active, perform attachments, otherwise,
      617    13185                                      just return to the user domain. */
      618    13186                                                /**/
      619    13187    1        IF ECC = %ECC_OLAY#

  13187  2 000665   000133 115007                    CMPA    91,DL
         2 000666   001215 601000 2                  TNZ     s:13260

      620    13188    2        THEN DO;

      621    13189    2             IF NOT S_D.OVERLAID

  13189  2 000667   000000 470400 xsym               LDP0    S_D$
         2 000670   004764 234100                    SZN     2548,,PR0
         2 000671   005372 605000 2                  TPL     SKIP_TT

      622    13190    2             THEN GOTO SKIP_TT;
      623    13191    2             S_D.LAST_NODE_LOADED = SUBC;

  13191  2 000672   200025 236100                    LDQ     SUBC,,AUTO
         2 000673   004734 756100                    STQ     2524,,PR0

      624    13192    2             S_D.SAVEIC = S_D.TIC;

  13192  2 000674   000027 235100                    LDA     23,,PR0
         2 000675   000002 755100                    STA     2,,PR0

      625    13193    2             S_D.GOIC = S_D.SAVEIC;

  13193  2 000676   000001 755100                    STA     1,,PR0

      626    13194    2             CALL DDS$EMTREE;         /* Set up schema for new node structure */

  13194  2 000677   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000700   000000 701000 xent               TSX1    DDS$EMTREE
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:112  
         2 000701   000000 011000                    NOP     0

      627    13195    2             S_D.TREE$ = S_D.MTREE$;       /* Use current */

  13195  2 000702   000000 470400 xsym               LDP0    S_D$
         2 000703   004762 236100                    LDQ     2546,,PR0
         2 000704   004761 756100                    STQ     2545,,PR0

      628    13196                                           /* Restore to reset flags on any nodes which
      629    13197                                           may have disappeared, and so we can call
      630    13198                                      plant later to set breakpoints in new nodes */
      631    13199    2             IF S_D.T$T.ACTIVE THEN CALL DDB$TTRESET;

  13199  2 000705   004707 234100                    SZN     2503,,PR0
         2 000706   000712 605000 2                  TPL     s:13200

  13199  2 000707   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000710   000000 701000 xent               TSX1    DDB$TTRESET
         2 000711   000000 011000                    NOP     0

      632    13200    3             IF S_D.S$TEP.ACTIVE THEN DO;

  13200  2 000712   000000 470400 xsym               LDP0    S_D$
         2 000713   005276 234100                    SZN     2750,,PR0
         2 000714   000723 605000 2                  TPL     s:13204

      633    13201    3                  CALL DDB$STEPRESET;

  13201  2 000715   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000716   000000 701000 xent               TSX1    DDB$STEPRESET
         2 000717   000000 011000                    NOP     0

      634    13202    3                  S_D.S$TEP.ACTIVE = '1'B;

  13202  2 000720   400000 236003                    LDQ     -131072,DU
         2 000721   000000 470400 xsym               LDP0    S_D$
         2 000722   005276 756100                    STQ     2750,,PR0
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:113  

      635    13203    3                END;

      636    13204    2             CALL DDB$RESTORE;

  13204  2 000723   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000724   000000 701000 xent               TSX1    DDB$RESTORE
         2 000725   000000 011000                    NOP     0

      637    13205                                                /* Plant fault tags in all entdefs
      638    13206                                                   subject to tracing in memory */
      639    13207    2             IF S_D.TR$INFO.SET AND S_D.TR$INFO.ACTIVE AND S_D.TR$INFO.TYPE = C_TC

  13207  2 000726   000000 470400 xsym               LDP0    S_D$
         2 000727   004627 234100                    SZN     2455,,PR0
         2 000730   001003 605000 2                  TPL     s:13219
         2 000731   004630 234100                    SZN     2456,,PR0
         2 000732   001003 605000 2                  TPL     s:13219
         2 000733   004634 235100                    LDA     2460,,PR0
         2 000734   000056 115007                    CMPA    46,DL
         2 000735   001003 601000 2                  TNZ     s:13219

      640    13208    3             THEN DO;

      641    13209    3                  NODE = S_D.TREE$ -> DU$TREE.NEXT#( S_D.NODE#M1 + 1 );

  13209  2 000736   004761 471500                    LDP1    2545,,PR0
         2 000737   004766 236100                    LDQ     2550,,PR0
         2 000740   000003 402007                    MPY     3,DL
         2 000741   100003 235106                    LDA     3,QL,PR1
         2 000742   200010 755100                    STA     NODE,,AUTO

      642    13210    4                  DO WHILE ( NODE > 0 );

  13210  2 000743   001003 604400 2                  TMOZ    s:13219

      643    13211    4                       NODE$ = PINCRW( S_D.NODESEG$, SIZEW( DU$NODE ) * NODE );
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:114  

  13211  2 000744   000000 470400 xsym               LDP0    S_D$
         2 000745   005003 471500                    LDP1    2563,,PR0
         2 000746   200010 236100                    LDQ     NODE,,AUTO
         2 000747   000007 402007                    MPY     7,DL
         2 000750   100000 633506                    EPPR3   0,QL,PR1
         2 000751   200011 453500                    STP3    NODE$,,AUTO

      644    13212    4                       EDEF$ = NODE$ -> DU$NODE.EDEF$( 0 );

  13212  2 000752   300002 236100                    LDQ     2,,PR3
         2 000753   200006 756100                    STQ     EDEF$,,AUTO

      645    13213    4                       EDEF_END$ = NODE$ -> DU$NODE.EDEF_END$( 0 );

  13213  2 000754   300003 236100                    LDQ     3,,PR3
         2 000755   200007 756100                    STQ     EDEF_END$,,AUTO

      646    13214    4                       DNAME$ = NODE$ -> DU$NODE.DNAME$( 0 );

  13214  2 000756   300006 236100                    LDQ     6,,PR3
         2 000757   200012 756100                    STQ     DNAME$,,AUTO

      647    13215    4                       CALL DDT$XTAGS( @PLANT_TAGS, EDEF$, EDEF_END$, DNAME$ );

  13215  2 000760   200012 634500                    EPPR4   DNAME$,,AUTO
         2 000761   200303 454500                    STP4    LS+4,,AUTO
         2 000762   200007 635500                    EPPR5   EDEF_END$,,AUTO
         2 000763   200302 455500                    STP5    LS+3,,AUTO
         2 000764   200006 636500                    EPPR6   EDEF$,,AUTO
         2 000765   200301 456500                    STP6    LS+2,,AUTO
         2 000766   000014 236000 3                  LDQ     12
         2 000767   200300 756100                    STQ     LS+1,,AUTO
         2 000770   200300 630500                    EPPR0   LS+1,,AUTO
         2 000771   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 000772   000000 701000 xent               TSX1    DDT$XTAGS
         2 000773   000000 011000                    NOP     0
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:115  

      648    13216    4                       NODE = S_D.TREE$ -> DU$TREE.NEXT#( NODE );

  13216  2 000774   000000 470400 xsym               LDP0    S_D$
         2 000775   004761 471500                    LDP1    2545,,PR0
         2 000776   200010 236100                    LDQ     NODE,,AUTO
         2 000777   000003 402007                    MPY     3,DL
         2 001000   100000 235106                    LDA     0,QL,PR1
         2 001001   200010 755100                    STA     NODE,,AUTO

      649    13217    4                     END;

  13217  2 001002   000744 605400 2                  TPNZ    s:13211

      650    13218    3                END;

      651    13219    2             IF ADDR(B$TCB$->B$TCB.STK$->B$EXCFR.EVID)->OLAY_FLAGS.V ~= '000'B THEN
             13219                      GOTO USERGO2;

  13219  2 001003   000000 471400 xsym               LDP1    B$TCB$
         2 001004   100001 473500                    LDP3    1,,PR1
         2 001005   300101 236100                    LDQ     65,,PR3
         2 001006   007000 316003                    CANQ    3584,DU
         2 001007   005112 601000 2                  TNZ     USERGO2

      652    13220                                           /* Look for on node name entry in fixcom */
      653    13221    2             S_D.IXFIX = 0;

  13221  2 001010   000015 450100                    STZ     13,,PR0

      654    13222    3             DO I = 1 TO S_D.FIXLAST;

  13222  2 001011   000001 235007                    LDA     1,DL
         2 001012   200016 755100                    STA     I,,AUTO
         2 001013   001035 710000 2                  TRA     s:13225+3

      655    13223    3                  IF S_D.FIXCOM.CMD(I) = C_ONN AND S_D.FIXCOM.CDF(I) = S_D.
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:116  
             13223                           LAST_NODE_LOADED /*C_ONN*/

  13223  2 001014   200016 236100                    LDQ     I,,AUTO
         2 001015   000006 402007                    MPY     6,DL
         2 001016   000000 470400 xsym               LDP0    S_D$
         2 001017   001212 236106                    LDQ     650,QL,PR0
         2 001020   777000 376003                    ANQ     -512,DU
         2 001021   042000 116003                    CMPQ    17408,DU
         2 001022   001032 601000 2                  TNZ     s:13225
         2 001023   200016 236100                    LDQ     I,,AUTO
         2 001024   000006 402007                    MPY     6,DL
         2 001025   001213 236106                    LDQ     651,QL,PR0
         2 001026   004734 116100                    CMPQ    2524,,PR0
         2 001027   001032 601000 2                  TNZ     s:13225

      656    13224    3                  THEN S_D.IXFIX = I;

  13224  2 001030   200016 235100                    LDA     I,,AUTO
         2 001031   000015 755100                    STA     13,,PR0

      657    13225    3                END;

  13225  2 001032   200016 235100                    LDA     I,,AUTO
         2 001033   000001 035007                    ADLA    1,DL
         2 001034   200016 755100                    STA     I,,AUTO
         2 001035   200016 236100                    LDQ     I,,AUTO
         2 001036   001041 604000 2                  TMI     s:13226
         2 001037   000047 116100                    CMPQ    39,,PR0
         2 001040   001014 604400 2                  TMOZ    s:13223

      658    13226    2             IF S_D.IXFIX = 0 THEN
             13226                      /* Didn't find specific name, look for general case */

  13226  2 001041   000015 235100                    LDA     13,,PR0
         2 001042   001046 601000 2                  TNZ     s:13228

      659    13227    2                  IF S_D.ONNODES ~= 0 THEN S_D.IXFIX = S_D.ONNODES;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:117  

  13227  2 001043   004747 235100                    LDA     2535,,PR0
         2 001044   001046 600000 2                  TZE     s:13228

  13227  2 001045   000015 755100                    STA     13,,PR0

      660    13228    2             IF S_D.IXFIX = 0 THEN GOTO CONTO;
             13228                   /* Which node was loaded is unimportant, and we do not hear its words */

  13228  2 001046   000015 235100                    LDA     13,,PR0
         2 001047   001137 600000 2                  TZE     CONTO

      661    13229    2             IF S_D.FIXCOM.INACTIVE(S_D.IXFIX) THEN GOTO USERGO2;

  13229  2 001050   000015 236100                    LDQ     13,,PR0
         2 001051   000003 402007                    MPY     3,DL
         2 001052   000001 736000                    QLS     1
         2 001053   001212 236106                    LDQ     650,QL,PR0
         2 001054   000400 316003                    CANQ    256,DU
         2 001055   005112 601000 2                  TNZ     USERGO2

      662    13230    2             S_D.FAULTCMD$ = PINCRW(ADDR(S_D.FIXCOM), S_D.IXFIX*SIZEW(F$XCM));

  13230  2 001056   000015 236100                    LDQ     13,,PR0
         2 001057   000006 402003                    MPY     6,DU
         2 001060   001212 036003                    ADLQ    650,DU
         2 001061   000000 036000 xsym               ADLQ    S_D$
         2 001062   000004 756100                    STQ     4,,PR0

      663    13231    2             IF S_D.FAULTCMD$->F$XCM.CMD = C_ONN /*C_ONN*/

  13231  2 001063   000004 471500                    LDP1    4,,PR0
         2 001064   100000 236100                    LDQ     0,,PR1
         2 001065   777000 376003                    ANQ     -512,DU
         2 001066   042000 116003                    CMPQ    17408,DU
         2 001067   001104 601000 2                  TNZ     s:13237

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:118  
      664    13232    3             THEN DO;

      665    13233    3                  CALL DDA$AT ALTRET(USERGO2); /* Test ifspec and bypass count */

  13233  2 001070   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001071   000000 701000 xent               TSX1    DDA$AT
         2 001072   005112 702000 2                  TSX2    USERGO2

      666    13234    3                  FATT$ = PINCRW(S_D.VARCOM$, S_D.FAULTCMD$->F$XCM.FAI);

  13234  2 001073   000000 470400 xsym               LDP0    S_D$
         2 001074   000004 471500                    LDP1    4,,PR0
         2 001075   100002 720100                    LXL0    2,,PR1
         2 001076   004622 473500                    LDP3    2450,,PR0
         2 001077   300000 634510                    EPPR4   0,X0,PR3
         2 001100   200014 454500                    STP4    FATT$,,AUTO

      667    13235    3                  FATT$->AT_FIRST.CURRENT_COUNT = FATT$->AT_FIRST.BYPASS_COUNT;
             13235                           /* Reset bypass count */

  13235  2 001101   400004 235100                    LDA     4,,PR4
         2 001102   400005 755100                    STA     5,,PR4

      668    13236    3                END;

  13236  2 001103   001107 710000 2                  TRA     s:13238

      669    13237    2            ELSE CALL DDA$ON ALTRET(USERGO2); /* Just check ifspec for general case */

  13237  2 001104   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001105   000000 701000 xent               TSX1    DDA$ON
         2 001106   005112 702000 2                  TSX2    USERGO2

      670    13238    2             IF S_D.FAULTCMD$->F$XCM.SILENT THEN S_D.SILENT = '1'B;

  13238  2 001107   000000 470400 xsym               LDP0    S_D$
         2 001110   000004 471500                    LDP1    4,,PR0
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:119  
         2 001111   100000 236100                    LDQ     0,,PR1
         2 001112   000200 316003                    CANQ    128,DU
         2 001113   001117 600000 2                  TZE     s:13239

  13238  2 001114   400000 236003                    LDQ     -131072,DU
         2 001115   004735 756100                    STQ     2525,,PR0
         2 001116   001123 710000 2                  TRA     s:13240

      671    13239    2             ELSE CALL DDR$REPORT(R_ONNODE);

  13239  2 001117   000016 630400 3                  EPPR0   14
         2 001120   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001121   000000 701000 xent               TSX1    DDR$REPORT
         2 001122   000000 011000                    NOP     0

      672    13240    2             S_D.ENTRYCMD$ = S_D.FAULTCMD$;

  13240  2 001123   000000 470400 xsym               LDP0    S_D$
         2 001124   000004 236100                    LDQ     4,,PR0
         2 001125   005203 756100                    STQ     2691,,PR0

      673    13241    2             REMEMBER USERGO IN S_D.REM_USERGO;

  13241  2 001126   005156 635000 2                  EAA     USERGO
         2 001127   005232 452500                    STP2    2714,,PR0
         2 001130   005233 755100                    STA     2715,,PR0

      674    13242    2             CALL DDA$DOATTACH ALTRET(USERGO);

  13242  2 001131   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001132   000000 701000 xent               TSX1    DDA$DOATTACH
         2 001133   005156 702000 2                  TSX2    USERGO

      675    13243    2             S_D.SILENT = '0'B;

  13243  2 001134   000000 470400 xsym               LDP0    S_D$
         2 001135   004735 450100                    STZ     2525,,PR0
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:120  

      676    13244    2             GOTO SCAN_COMMAND;

  13244  2 001136   004634 710000 2                  TRA     SCAN_COMMAND

      677    13245    2   CONTO:    CALL DDA$GO ALTRET (SCAN_COMMAND);

  13245  2 001137   000002 631400 xsym  CONTO        EPPR1   B_VECTNIL+2
         2 001140   000000 701000 xent               TSX1    DDA$GO
         2 001141   004634 702000 2                  TSX2    SCAN_COMMAND

      678    13246    3             IF S_D.S$TEP.ACTIVE THEN DO;

  13246  2 001142   000000 470400 xsym               LDP0    S_D$
         2 001143   005276 234100                    SZN     2750,,PR0
         2 001144   001214 605000 2                  TPL     s:13251

      679    13247    3               CALL DDB$PLANTONE (PINCRW(UIS$,S_D.S$TEP.LOC),T_OTHER,DRL_STEP,ADDR(S_D
             13247                         .S$TEP.SAVED));

  13247  2 001145   005300 720100                    LXL0    2752,,PR0
         2 001146   000000 636010                    EAQ     0,X0
         2 001147   000000 036000 xsym               ADLQ    UIS$
         2 001150   200300 756100                    STQ     LS+1,,AUTO
         2 001151   000000 236000 xsym               LDQ     S_D$
         2 001152   005302 036003                    ADLQ    2754,DU
         2 001153   200301 756100                    STQ     LS+2,,AUTO
         2 001154   200301 631500                    EPPR1   LS+2,,AUTO
         2 001155   200305 451500                    STP1    LS+6,,AUTO
         2 001156   000017 236000 3                  LDQ     15
         2 001157   200304 756100                    STQ     LS+5,,AUTO
         2 001160   200303 756100                    STQ     LS+4,,AUTO
         2 001161   200300 633500                    EPPR3   LS+1,,AUTO
         2 001162   200302 453500                    STP3    LS+3,,AUTO
         2 001163   200302 630500                    EPPR0   LS+3,,AUTO
         2 001164   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 001165   000000 701000 xent               TSX1    DDB$PLANTONE
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:121  
         2 001166   000000 011000                    NOP     0

      680    13248    3                IF S_D.S$TEP.ALT THEN

  13248  2 001167   000000 470400 xsym               LDP0    S_D$
         2 001170   005277 234100                    SZN     2751,,PR0
         2 001171   001214 605000 2                  TPL     s:13251

      681    13249    3                   CALL DDB$PLANTONE (PINCRW(UIS$,S_D.S$TEP.ALTLOC),T_OTHER,DRL_STEP,
             13249                            ADDR(S_D.S$TEP.ALTSAVED));

  13249  2 001172   005301 720100                    LXL0    2753,,PR0
         2 001173   000000 636010                    EAQ     0,X0
         2 001174   000000 036000 xsym               ADLQ    UIS$
         2 001175   200300 756100                    STQ     LS+1,,AUTO
         2 001176   000000 236000 xsym               LDQ     S_D$
         2 001177   005303 036003                    ADLQ    2755,DU
         2 001200   200301 756100                    STQ     LS+2,,AUTO
         2 001201   200301 631500                    EPPR1   LS+2,,AUTO
         2 001202   200305 451500                    STP1    LS+6,,AUTO
         2 001203   000017 236000 3                  LDQ     15
         2 001204   200304 756100                    STQ     LS+5,,AUTO
         2 001205   200303 756100                    STQ     LS+4,,AUTO
         2 001206   200300 633500                    EPPR3   LS+1,,AUTO
         2 001207   200302 453500                    STP3    LS+3,,AUTO
         2 001210   200302 630500                    EPPR0   LS+3,,AUTO
         2 001211   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 001212   000000 701000 xent               TSX1    DDB$PLANTONE
         2 001213   000000 011000                    NOP     0

      682    13250    3                END;

      683    13251    2             GOTO USERGO1;

  13251  2 001214   005127 710000 2                  TRA     USERGO1

      684    13252    2           END;                            /* End if ecc = ECC_OLAY# */
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:122  
      685    13253        %EJECT;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:123  
      686    13254                                                /**/
      687    13255                                           /* Check for exit from exit control routine.
      688    13256                                      If final exit, get a command.  If retry, merc, or
      689    13257                                 trtn, and trace is on, record it in history buffer,
      690    13258                                 and return to user domain */
      691    13259                                                /**/
      692    13260    1        IF ECC = %ECC_EXCRTN# /* Entry due to exceptional return (retry,merc,trtn) */

  13260  2 001215   000140 115007                    CMPA    96,DL
         2 001216   001272 601000 2                  TNZ     s:13295

      693    13261    2        THEN DO;

      694    13262    2             S_D.SAVEIC = S_D.TIC;

  13262  2 001217   000000 470400 xsym               LDP0    S_D$
         2 001220   000027 235100                    LDA     23,,PR0
         2 001221   000002 755100                    STA     2,,PR0

      695    13263    2             IF SUBC = %SC_XCONXIT#        /* Final exit from XCON */

  13263  2 001222   200025 236100                    LDQ     SUBC,,AUTO
         2 001223   000006 116007                    CMPQ    6,DL
         2 001224   001235 601000 2                  TNZ     s:13269

      696    13264    3             THEN DO;

      697    13265    3                  CALL DUR$ECCRPT(ECCRPT_USER);

  13265  2 001225   000004 630400 3                  EPPR0   4
         2 001226   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001227   000000 701000 xent               TSX1    DUR$ECCRPT
         2 001230   000000 011000                    NOP     0

      698    13266    3                  S_D.SV.DELENT = 1;       /* Entry due to user trap */

  13266  2 001231   000001 235007                    LDA     1,DL
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:124  
         2 001232   000000 470400 xsym               LDP0    S_D$
         2 001233   000037 755100                    STA     31,,PR0

      699    13267    3                  GOTO RESTORE_ALL;

  13267  2 001234   004573 710000 2                  TRA     RESTORE_ALL

      700    13268    3                END;
      701    13269    2             S_D.SAVEIC = S_D.SAVEIC - S_D.ISBASE;

  13269  2 001235   000002 236100                    LDQ     2,,PR0
         2 001236   000720 136100                    SBLQ    464,,PR0
         2 001237   000002 756100                    STQ     2,,PR0

      702    13270    2             S_D.ISBASE = 0;

  13270  2 001240   000720 450100                    STZ     464,,PR0

      703    13271    2             S_D.GOIC = S_D.SAVEIC;

  13271  2 001241   000001 756100                    STQ     1,,PR0

      704    13272    2        IF S_D.GOTRAPPOS

  13272  2 001242   006721 234100                    SZN     3537,,PR0
         2 001243   001247 605000 2                  TPL     s:13277

      705    13273    3        THEN DO;

      706    13274    3             S_D.SAVEIC = S_D.GOTRAP_POSITION;

  13274  2 001244   006722 235100                    LDA     3538,,PR0
         2 001245   000002 755100                    STA     2,,PR0

      707    13275    3             S_D.GOIC = S_D.GOTRAP_POSITION;

  13275  2 001246   000001 755100                    STA     1,,PR0
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:125  

      708    13276    3           END;

      709    13277    2             IF S_D.S$TEP.ACTIVE

  13277  2 001247   005276 234100                    SZN     2750,,PR0
         2 001250   001271 605000 2                  TPL     s:13287

      710    13278    3             THEN DO;

      711    13279    3                  IF S_D.S$TEP.ONE_FLAG AND S_D.S$TEP.DOING_SOC

  13279  2 001251   005277 236100                    LDQ     2751,,PR0
         2 001252   200000 316003                    CANQ    65536,DU
         2 001253   001257 600000 2                  TZE     s:13283
         2 001254   100000 316003                    CANQ    32768,DU
         2 001255   001257 600000 2                  TZE     s:13283

      712    13280    4                    THEN DO; /* if SOC - keep going, don't re-break */

      713    13281    4                       GOTO CALL_DRTN;

  13281  2 001256   005616 710000 2                  TRA     CALL_DRTN

      714    13282    4                    END;
      715    13283    3                  CALL DDB$STEPRESET;

  13283  2 001257   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001260   000000 701000 xent               TSX1    DDB$STEPRESET
         2 001261   000000 011000                    NOP     0

      716    13284    3                  S_D.S$TEP.ACTIVE = '1'B;

  13284  2 001262   400000 236003                    LDQ     -131072,DU
         2 001263   000000 470400 xsym               LDP0    S_D$
         2 001264   005276 756100                    STQ     2750,,PR0

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:126  
      717    13285    3                  CALL DDA$STEP_MORE('1'B) ALTRET(CANT_STEP);

  13285  2 001265   000020 630400 3                  EPPR0   16
         2 001266   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001267   000000 701000 xent               TSX1    DDA$STEP_MORE
         2 001270   004166 702000 2                  TSX2    CANT_STEP

      718    13286    3                END;

      719    13287    2             GOTO USERGO0;

  13287  2 001271   005201 710000 2                  TRA     USERGO0

      720    13288    2           END;
      721    13289        %EJECT;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:127  
      722    13290                                                /**/
      723    13291                                           /* Entry for M$LINK/M$LDTRC and return from
      724    13292                                           M$LINK.  Report the condition, and allow use
      725    13293                                           of the EXIT directive if M$LINK entry. */
      726    13294                                                /**/
      727    13295    1        IF ECC = %ECC_LINK#                /* Entered via M$LINK or M$LDTRC */

  13295  2 001272   000134 115007                    CMPA    92,DL
         2 001273   001315 601000 2                  TNZ     s:13306

      728    13296    2        THEN DO;

      729    13297    2             S_D.SAVEIC = S_D.TIC;

  13297  2 001274   000000 470400 xsym               LDP0    S_D$
         2 001275   000027 235100                    LDA     23,,PR0
         2 001276   000002 755100                    STA     2,,PR0

      730    13298    2             IF SUBC = %SC_MLINK#

  13298  2 001277   200025 236100                    LDQ     SUBC,,AUTO
         2 001300   001310 601000 2                  TNZ     s:13303

      731    13299    3             THEN DO;

      732    13300    3                  S_D.LINK_ENTRY = '1'B;   /* Allow EXIT */

  13300  2 001301   400000 236003                    LDQ     -131072,DU
         2 001302   005140 756100                    STQ     2656,,PR0

      733    13301    3                  CALL DDR$REPORT(R_LINKIN);

  13301  2 001303   000022 630400 3                  EPPR0   18
         2 001304   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001305   000000 701000 xent               TSX1    DDR$REPORT
         2 001306   000000 011000                    NOP     0

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:128  
      734    13302    3                END;

  13302  2 001307   001314 710000 2                  TRA     s:13304

      735    13303    2             ELSE CALL DDR$REPORT(R_LDTRCIN);

  13303  2 001310   000024 630400 3                  EPPR0   20
         2 001311   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001312   000000 701000 xent               TSX1    DDR$REPORT
         2 001313   000000 011000                    NOP     0

      736    13304    2             GOTO SCAN_COMMAND;

  13304  2 001314   004634 710000 2                  TRA     SCAN_COMMAND

      737    13305    2           END;
      738    13306    1        IF ECC = %ECC_LRTN#                /* Returned to M$LINK+1 (or 2) */

  13306  2 001315   000135 115007                    CMPA    93,DL
         2 001316   001327 601000 2                  TNZ     s:13321

      739    13307    2        THEN DO;

      740    13308    2             S_D.SAVEIC = S_D.TIC;

  13308  2 001317   000000 470400 xsym               LDP0    S_D$
         2 001320   000027 235100                    LDA     23,,PR0
         2 001321   000002 755100                    STA     2,,PR0

      741    13309    2             CALL DDR$REPORT(R_LINKRTN);

  13309  2 001322   000026 630400 3                  EPPR0   22
         2 001323   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001324   000000 701000 xent               TSX1    DDR$REPORT
         2 001325   000000 011000                    NOP     0

      742    13310    2             GOTO RESTORE_ALL;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:129  
             13310               /* Clean up the derails from when we were so rudely interrputed last time */

  13310  2 001326   004573 710000 2                  TRA     RESTORE_ALL

      743    13311    2           END;
      744    13312        %EJECT;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:130  
      745    13313                                                /**/
      746    13314                                           /* Check for ALIB entry.  If ANLZ or RUM are
      747    13315                                           in progress, restore the schema IC.  Get and
      748    13316                                           remember flags from the V area, and parse
      749    13317                                           CMD if present.  If no command was passed,
      750    13318                                      report entry via M$ALIB and goto scan, otherwise,
      751    13319                                      goto scan1 (DDA$DO). */
      752    13320                                                /**/
      753    13321    1        IF ECC = %ECC_ALIB#                /* Entry due  to M$ALIB */

  13321  2 001327   000137 115007                    CMPA    95,DL
         2 001330   001671 601000 2                  TNZ     s:13425

      754    13322    2        THEN DO;

      755    13323    2             S_D.ALIB = '1'B;

  13323  2 001331   400000 236003                    LDQ     -131072,DU
         2 001332   000000 470400 xsym               LDP0    S_D$
         2 001333   005134 756100                    STQ     2652,,PR0

      756    13324    2             IF S_D.T$T.ACTIVE THEN CALL DDB$TTRESET;

  13324  2 001334   004707 234100                    SZN     2503,,PR0
         2 001335   001341 605000 2                  TPL     s:13325

  13324  2 001336   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001337   000000 701000 xent               TSX1    DDB$TTRESET
         2 001340   000000 011000                    NOP     0

      757    13325    3             IF S_D.S$TEP.ACTIVE THEN DO;

  13325  2 001341   000000 470400 xsym               LDP0    S_D$
         2 001342   005276 234100                    SZN     2750,,PR0
         2 001343   001352 605000 2                  TPL     s:13329

      758    13326    3                  CALL DDB$STEPRESET;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:131  

  13326  2 001344   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001345   000000 701000 xent               TSX1    DDB$STEPRESET
         2 001346   000000 011000                    NOP     0

      759    13327    3                  S_D.S$TEP.ACTIVE = '1'B;

  13327  2 001347   400000 236003                    LDQ     -131072,DU
         2 001350   000000 470400 xsym               LDP0    S_D$
         2 001351   005276 756100                    STQ     2750,,PR0

      760    13328    3                END;

      761    13329    2             CALL DDB$RESTORE;

  13329  2 001352   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001353   000000 701000 xent               TSX1    DDB$RESTORE
         2 001354   000000 011000                    NOP     0

      762    13330    2             IF S_D.ANLZ OR S_D.RUM

  13330  2 001355   000000 470400 xsym               LDP0    S_D$
         2 001356   004756 234100                    SZN     2542,,PR0
         2 001357   001362 604000 2                  TMI     s:13332
         2 001360   004755 234100                    SZN     2541,,PR0
         2 001361   001444 605000 2                  TPL     s:13348

      763    13331    3             THEN DO;

      764    13332    3                  IF S_D.ANLZ AND (NOT S_D.ANLZ_FILE)

  13332  2 001362   004756 234100                    SZN     2542,,PR0
         2 001363   001421 605000 2                  TPL     s:13342
         2 001364   005052 234100                    SZN     2602,,PR0
         2 001365   001421 604000 2                  TMI     s:13342

      765    13333    4                  THEN DO;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:132  

      766    13334    4                       CALL M$SPRIV(FPT_PRIV);

  13334  2 001366   000054 630400 0                  EPPR0   FPT_PRIV
         2 001367   020012 713400                    CLIMB   8202
         2 001370   400000 401760                    pmme    nvectors=1

      767    13335    4                       CALL M$SAD(SAD1) ALTRET(NOT_PRIV);

  13335  2 001371   000060 630400 0                  EPPR0   SAD1
         2 001372   430015 713400                    CLIMB   alt,+12301
         2 001373   400000 401760                    pmme    nvectors=1
         2 001374   001662 702000 2                  TSX2    NOT_PRIV

      768    13336    4                       CALL M$SAD(SAD2) ALTRET(NOT_PRIV);

  13336  2 001375   000064 630400 0                  EPPR0   SAD2
         2 001376   430015 713400                    CLIMB   alt,+12301
         2 001377   400000 401760                    pmme    nvectors=1
         2 001400   001662 702000 2                  TSX2    NOT_PRIV

      769    13337    4                       CALL M$SAD(SAD3) ALTRET(NOT_PRIV);

  13337  2 001401   000070 630400 0                  EPPR0   SAD3
         2 001402   430015 713400                    CLIMB   alt,+12301
         2 001403   400000 401760                    pmme    nvectors=1
         2 001404   001662 702000 2                  TSX2    NOT_PRIV

      770    13338    4                       CALL M$SAD(SAD4) ALTRET(NOT_PRIV);

  13338  2 001405   000074 630400 0                  EPPR0   SAD4
         2 001406   430015 713400                    CLIMB   alt,+12301
         2 001407   400000 401760                    pmme    nvectors=1
         2 001410   001662 702000 2                  TSX2    NOT_PRIV

      771    13339    4                       CALL M$SAD(SAD5) ALTRET(NOT_PRIV);

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:133  
  13339  2 001411   000100 630400 0                  EPPR0   SAD5
         2 001412   430015 713400                    CLIMB   alt,+12301
         2 001413   400000 401760                    pmme    nvectors=1
         2 001414   001662 702000 2                  TSX2    NOT_PRIV

      772    13340    4                       CALL M$SAD(SAD6) ALTRET(NOT_PRIV);

  13340  2 001415   000104 630400 0                  EPPR0   SAD6
         2 001416   430015 713400                    CLIMB   alt,+12301
         2 001417   400000 401760                    pmme    nvectors=1
         2 001420   001662 702000 2                  TSX2    NOT_PRIV

      773    13341    4                     END;

      774    13342    3                  S_D.SAVEIC_SAVE = S_D.TIC; /* Remember how we got here */

  13342  2 001421   000000 470400 xsym               LDP0    S_D$
         2 001422   000027 235100                    LDA     23,,PR0
         2 001423   005051 755100                    STA     2601,,PR0

      775    13343    3                  S_D.SAVEIC = S_D.ANLZRUM_IC; /* Restore schema ic */

  13343  2 001424   005110 235100                    LDA     2632,,PR0
         2 001425   000002 755100                    STA     2,,PR0

      776    13344    3                  CALL DDS$ES_INQ(S_D.SAVEIC);

  13344  2 001426   000000 236000 xsym               LDQ     S_D$
         2 001427   000002 036003                    ADLQ    2,DU
         2 001430   200300 756100                    STQ     LS+1,,AUTO
         2 001431   200300 630500                    EPPR0   LS+1,,AUTO
         2 001432   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001433   000000 701000 xent               TSX1    DDS$ES_INQ
         2 001434   000000 011000                    NOP     0

      777    13345    3                  S_D.UNODE.CURRENT = S_D.NODE;

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:134  
  13345  2 001435   000000 470400 xsym               LDP0    S_D$
         2 001436   004706 235100                    LDA     2502,,PR0
         2 001437   004757 755100                    STA     2543,,PR0

      778    13346    3                  CALL DDS$SET_Q2C;

  13346  2 001440   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001441   000000 701000 xent               TSX1    DDS$SET_Q2C
         2 001442   000000 011000                    NOP     0

      779    13347    3                END;

  13347  2 001443   001446 710000 2                  TRA     s:13349

      780    13348    2             ELSE S_D.SAVEIC = S_D.TIC;

  13348  2 001444   000027 235100                    LDA     23,,PR0
         2 001445   000002 755100                    STA     2,,PR0

      781    13349    2             IF S_D.ANLZ_FILE

  13349  2 001446   000000 470400 xsym               LDP0    S_D$
         2 001447   005052 234100                    SZN     2602,,PR0
         2 001450   001460 605000 2                  TPL     s:13355

      782    13350    3             THEN DO;                      /* Restore anlz pointers */

      783    13351    3                  S_D.USS$ = S_D.USS$_SAVE;

  13351  2 001451   005141 236100                    LDQ     2657,,PR0
         2 001452   000005 756100                    STQ     5,,PR0

      784    13352    3                  S_D.UREG$ = S_D.UREG$_SAVE;

  13352  2 001453   005006 236100                    LDQ     2566,,PR0
         2 001454   000045 756100                    STQ     37,,PR0

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:135  
      785    13353    3                  S_D.IND$ = PINCRW(S_D.USS$, 4);

  13353  2 001455   000005 236100                    LDQ     5,,PR0
         2 001456   000004 036003                    ADLQ    4,DU
         2 001457   000046 756100                    STQ     38,,PR0

      786    13354    3                END;

      787    13355    2             REMEMBER BAD_PS3 IN S_D.REM_ACCESS;

  13355  2 001460   001646 635000 2                  EAA     BAD_PS3
         2 001461   000024 452500                    STP2    20,,PR0
         2 001462   000025 755100                    STA     21,,PR0

      788    13356    2             S_D.ACCESS = '1'B;

  13356  2 001463   400000 236003                    LDQ     -131072,DU
         2 001464   000016 756100                    STQ     14,,PR0

      789    13357    2             ALIB_SAID_GOBACK = B$PS3$->FPT$ALIB_V.RETRN;

  13357  2 001465   000000 471400 xsym               LDP1    B$PS3$
         2 001466   100000 236100                    LDQ     0,,PR1
         2 001467   400000 376003                    ANQ     -131072,DU
         2 001470   200003 756100                    STQ     ALIB_SAID_GOBACK,,AUTO

      790    13358    2             S_D.ALIB_SAID_GOBACK = ALIB_SAID_GOBACK;

  13358  2 001471   200003 236100                    LDQ     ALIB_SAID_GOBACK,,AUTO
         2 001472   400000 376003                    ANQ     -131072,DU
         2 001473   000075 756100                    STQ     61,,PR0

      791    13359    2             FPT$DRTN.V.DLIB# = B$PS3$->FPT$ALIB_V.DLIB;

  13359  2 001474   100000 236100                    LDQ     0,,PR1
         2 001475   000004 772000                    QRL     4
         2 001476   200103 676100                    ERQ     FPT$DRTN+11,,AUTO
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:136  
         2 001477   010000 376003                    ANQ     4096,DU
         2 001500   200103 656100                    ERSQ    FPT$DRTN+11,,AUTO

      792    13360    2             S_D.ALIB_SAID_ECHO = B$PS3$ -> FPT$ALIB_V.ECHO;

  13360  2 001501   100000 236100                    LDQ     0,,PR1
         2 001502   000003 736000                    QLS     3
         2 001503   400000 376003                    ANQ     -131072,DU
         2 001504   000067 756100                    STQ     55,,PR0

      793    13361    2             S_D.ALIB_SAID_QUIET = B$PS3$ -> FPT$ALIB_V.QUIET;

  13361  2 001505   100000 236100                    LDQ     0,,PR1
         2 001506   000004 736000                    QLS     4
         2 001507   400000 376003                    ANQ     -131072,DU
         2 001510   000070 756100                    STQ     56,,PR0

      794    13362    2             S_D.ACCESS = '0'B;

  13362  2 001511   000016 450100                    STZ     14,,PR0

      795    13363    2             IF B$TCB$->B$TCB.STK$->B$ALIBF.CMDSZ = 0

  13363  2 001512   000000 473400 xsym               LDP3    B$TCB$
         2 001513   300001 474500                    LDP4    1,,PR3
         2 001514   400100 236100                    LDQ     64,,PR4
         2 001515   000027 316000 3                  CANQ    23
         2 001516   001524 601000 2                  TNZ     s:13369

      796    13364    3             THEN DO;                 /* No passed command, do like ctrly delta */

      797    13365    3                  CALL DDR$REPORT(R_ALIB);

  13365  2 001517   000031 630400 3                  EPPR0   25
         2 001520   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001521   000000 701000 xent               TSX1    DDR$REPORT
         2 001522   000000 011000                    NOP     0
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:137  

      798    13366    3                  GOTO SCAN_COMMAND;

  13366  2 001523   004634 710000 2                  TRA     SCAN_COMMAND

      799    13367    3                END;
      800    13368                                           /* Else set up to parse the passed command */
      801    13369    2             S_D.ACCESS = '1'B;

  13369  2 001524   400000 236003                    LDQ     -131072,DU
         2 001525   000016 756100                    STQ     14,,PR0

      802    13370    2             REMEMBER BAD_PS1 IN S_D.REM_ACCESS;

  13370  2 001526   001633 635000 2                  EAA     BAD_PS1
         2 001527   000024 452500                    STP2    20,,PR0
         2 001530   000025 755100                    STA     21,,PR0

      803    13371    2             S_D.INPUT = B$PS1$->ALIB_COMMAND; /* Get the command */

  13371  2 001531   000000 474400 xsym               LDP4    B$PS1$
         2 001532   200025 720100                    LXL0    SUBC,,AUTO
         2 001533   040100 100540                    MLR     fill='040'O
         2 001534   400000 000010                    ADSC9   0,,PR4                   cn=0,n=*X0
         2 001535   000610 000400                    ADSC9   392,,PR0                 cn=0,n=256

      804    13372    2             S_D.ACCESS = '0'B;

  13372  2 001536   000016 450100                    STZ     14,,PR0

      805    13373    2             S_D.NCHARS = B$TCB$->B$TCB.STK$->B$ALIBF.CMDSZ;

  13373  2 001537   300001 475500                    LDP5    1,,PR3
         2 001540   500100 236100                    LDQ     64,,PR5
         2 001541   000027 376000 3                  ANQ     23
         2 001542   000065 756100                    STQ     53,,PR0

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:138  
      806    13374    2             S_D.DO$ = ADDR(NIL);

  13374  2 001543   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 001544   000031 756100                    STQ     25,,PR0

      807    13375    2             REMEMBER S_FAULT IN S_D.REM_DO_SCAN;

  13375  2 001545   005062 635000 2                  EAA     S_FAULT
         2 001546   000022 452500                    STP2    18,,PR0
         2 001547   000023 755100                    STA     19,,PR0

      808    13376    2             S_D.DO_SCAN = '1'B;

  13376  2 001550   400000 236003                    LDQ     -131072,DU
         2 001551   000017 756100                    STQ     15,,PR0

      809    13377    2             S_D.DIRECT_OFF = S_D.DIRECT_SIZE;
             13377                      /* Trash current direct command, if any */

  13377  2 001552   004675 235100                    LDA     2493,,PR0
         2 001553   004676 755100                    STA     2494,,PR0

      810    13378    2             S_D.DO_ATTACH = 0;

  13378  2 001554   000512 450100                    STZ     330,,PR0

      811    13379    2             S_D.DO_NESTING_LEVEL = 0;

  13379  2 001555   004677 450100                    STZ     2495,,PR0

      812    13380    2             IF S_D.ALIB_SAID_ECHO

  13380  2 001556   000067 234100                    SZN     55,,PR0
         2 001557   001576 605000 2                  TPL     s:13386

      813    13381    3             THEN DO;

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:139  
      814    13382    3                  PTR$ = ADDR(S_D.INPUT);

  13382  2 001560   000000 236000 xsym               LDQ     S_D$
         2 001561   000610 036003                    ADLQ    392,DU
         2 001562   200022 756100                    STQ     PTR$,,AUTO

      815    13383    3                  S_D.ACT = BITASC( '000001101'B );

  13383  2 001563   015000 236003                    LDQ     6656,DU
         2 001564   000503 756100                    STQ     323,,PR0

      816    13384    3                  CALL DDQ$READ_ALIB (PTR$, S_D.NCHARS);

  13384  2 001565   000000 236000 xsym               LDQ     S_D$
         2 001566   000065 036003                    ADLQ    53,DU
         2 001567   200301 756100                    STQ     LS+2,,AUTO
         2 001570   200022 635500                    EPPR5   PTR$,,AUTO
         2 001571   200300 455500                    STP5    LS+1,,AUTO
         2 001572   200300 630500                    EPPR0   LS+1,,AUTO
         2 001573   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 001574   000000 701000 xent               TSX1    DDQ$READ_ALIB
         2 001575   000000 011000                    NOP     0

      817    13385    3                END;

      818    13386    2             CALL DDS$SCAN1 ALTRET(BAD_SCAN1);

  13386  2 001576   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001577   000000 701000 xent               TSX1    DDS$SCAN1
         2 001600   001661 702000 2                  TSX2    BAD_SCAN1

      819    13387    2             IF S_D.XUG_BUILTIN THEN GOTO BAD_SCAN1;

  13387  2 001601   000000 470400 xsym               LDP0    S_D$
         2 001602   006742 234100                    SZN     3554,,PR0
         2 001603   001661 604000 2                  TMI     BAD_SCAN1

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:140  
      820    13388    2             CMD = S_D.LASTBLT$ -> AT_FIRST.CMD;

  13388  2 001604   000134 471500                    LDP1    92,,PR0
         2 001605   100000 236100                    LDQ     0,,PR1
         2 001606   000033 772000                    QRL     27
         2 001607   200017 756100                    STQ     CMD,,AUTO

      821    13389    2             IF CMD=C_AT OR                /* C_AT */

  13389  2 001610   000002 116007                    CMPQ    2,DL
         2 001611   004634 600000 2                  TZE     SCAN_COMMAND
         2 001612   000037 116007                    CMPQ    31,DL
         2 001613   004634 600000 2                  TZE     SCAN_COMMAND
         2 001614   000036 116007                    CMPQ    30,DL
         2 001615   004634 600000 2                  TZE     SCAN_COMMAND
         2 001616   000040 116007                    CMPQ    32,DL
         2 001617   004634 600000 2                  TZE     SCAN_COMMAND
         2 001620   000065 116007                    CMPQ    53,DL
         2 001621   004634 600000 2                  TZE     SCAN_COMMAND
         2 001622   000066 116007                    CMPQ    54,DL
         2 001623   004634 600000 2                  TZE     SCAN_COMMAND
         2 001624   000042 116007                    CMPQ    34,DL
         2 001625   004634 600000 2                  TZE     SCAN_COMMAND
         2 001626   000055 116007                    CMPQ    45,DL
         2 001627   004634 600000 2                  TZE     SCAN_COMMAND
         2 001630   000103 116007                    CMPQ    67,DL
         2 001631   004634 600000 2                  TZE     SCAN_COMMAND

      822    13390    2               CMD=C_OC OR                 /* C_OC */
      823    13391    2               CMD=C_OA OR                 /* C_OA */
      824    13392    2               CMD=C_OE OR                 /* C_OE */
      825    13393    2               CMD=C_ONCALLS OR            /* C_ONCALLS */
      826    13394    2               CMD=C_ONNODES OR            /* C_ONNODES */
      827    13395    2               CMD=C_ONN OR                /* C_ONN */
      828    13396    2               CMD=C_SAVE OR               /* C_SAVE */
      829    13397    2               CMD=C_WHEN                  /* C_WHEN */
      830    13398    2             THEN GOTO SCAN_COMMAND;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:141  
      831    13399    2             GOTO SCAN_COMMAND1;

  13399  2 001632   005000 710000 2                  TRA     SCAN_COMMAND1

      832    13400    2   BAD_PS1:  S_D.ERROR = E@BADPS1;         /*E@BADPS1*/

  13400  2 001633   000213 235007       BAD_PS1      LDA     139,DL
         2 001634   000000 470400 xsym               LDP0    S_D$
         2 001635   000013 755100                    STA     11,,PR0

      833    13401    2             CALL DDR$REPORT(R_ALIB);

  13401  2 001636   000031 630400 3                  EPPR0   25
         2 001637   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001640   000000 701000 xent               TSX1    DDR$REPORT
         2 001641   000000 011000                    NOP     0

      834    13402    2             CALL DDE$ERROR;

  13402  2 001642   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001643   000000 701000 xent               TSX1    DDE$ERROR
         2 001644   000000 011000                    NOP     0

      835    13403    2             GOTO SCAN_COMMAND;

  13403  2 001645   004634 710000 2                  TRA     SCAN_COMMAND

      836    13404    2   BAD_PS3:
      837    13405    2             S_D.ERROR = E@BADPS3;         /*E@BADPS3*/

  13405  2 001646   000260 235007       BAD_PS3      LDA     176,DL
         2 001647   000000 470400 xsym               LDP0    S_D$
         2 001650   000013 755100                    STA     11,,PR0

      838    13406    2             CALL DDR$REPORT(R_ALIB);

  13406  2 001651   000031 630400 3                  EPPR0   25
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:142  
         2 001652   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001653   000000 701000 xent               TSX1    DDR$REPORT
         2 001654   000000 011000                    NOP     0

      839    13407    2             CALL DDE$ERROR;

  13407  2 001655   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001656   000000 701000 xent               TSX1    DDE$ERROR
         2 001657   000000 011000                    NOP     0

      840    13408    2             GOTO SCAN_COMMAND;

  13408  2 001660   004634 710000 2                  TRA     SCAN_COMMAND

      841    13409    2   BAD_SCAN1: GOTO SCAN_COMMAND;

  13409  2 001661   004634 710000 2     BAD_SCAN1    TRA     SCAN_COMMAND

  13401  2 001662                       NOT_PRIV     null
      842    13410        /*N* WE WILL DO NASTIER THINGS WHEN WE GET RESULTS WORKING */
      843    13411    2   NOT_PRIV: ;                             /* Must have at lease sp mem */
      844    13412    2             S_D.ERROR = E@CANT_ANLZ;      /*E@CANT_ANLZ*/

  13412  2 001662   000162 235007                    LDA     114,DL
         2 001663   000000 470400 xsym               LDP0    S_D$
         2 001664   000013 755100                    STA     11,,PR0

      845    13413    2             CALL DDE$ERROR;

  13413  2 001665   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001666   000000 701000 xent               TSX1    DDE$ERROR
         2 001667   000000 011000                    NOP     0

      846    13414    2             GOTO SCAN_COMMAND;

  13414  2 001670   004634 710000 2                  TRA     SCAN_COMMAND

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:143  
      847    13415    2           END;                            /* If eccc = alib */
      848    13416        %EJECT;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:144  
      849    13417                                                /**/
      850    13418                                      /* Check for programmed type faults.  DELTA uses
      851    13419                                      this class of faults to implement breakpoints and
      852    13420                                      tracing.  Also check for XCON type faults and
      853    13421                                      matching ON ABORT and ON EXIT conditions.  If
      854    13422                                      a matching condition is found, report it and
      855    13423                                      do the attachements. */
      856    13424                                                /**/
      857    13425    2        IF ECC = %ECC_PROG# THEN DO;       /* ECC_PROG#  */

  13425  2 001671   000006 115007                    CMPA    6,DL
         2 001672   001707 601000 2                  TNZ     s:13430

      858    13426    2             IF SUBC = %SC_DRAIL# THEN GOTO DERAIL;

  13426  2 001673   200025 236100                    LDQ     SUBC,,AUTO
         2 001674   000001 116007                    CMPQ    1,DL
         2 001675   003737 600000 2                  TZE     DERAIL

      859    13427    2             IF S_D.T$T.ACTIVE THEN CALL DDB$TTRESET;

  13427  2 001676   000000 470400 xsym               LDP0    S_D$
         2 001677   004707 234100                    SZN     2503,,PR0
         2 001700   001704 605000 2                  TPL     s:13428

  13427  2 001701   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001702   000000 701000 xent               TSX1    DDB$TTRESET
         2 001703   000000 011000                    NOP     0

      860    13428    2             IF SUBC = %SC_FLTAG# THEN GOTO FAULTAG;

  13428  2 001704   200025 235100                    LDA     SUBC,,AUTO
         2 001705   000002 115007                    CMPA    2,DL
         2 001706   003617 600000 2                  TZE     FAULTAG

      861    13429    2           END;

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:145  
      862    13430    1        IF ECC = %ECC_XCON#

  13430  2 001707   200005 235100                    LDA     ECC,,AUTO
         2 001710   000003 115007                    CMPA    3,DL
         2 001711   002053 601000 2                  TNZ     s:13473

      863    13431    2        THEN DO;

      864    13432    2             S_D.SV.DELENT = 1;            /* entry due to user trap */

  13432  2 001712   000001 236007                    LDQ     1,DL
         2 001713   000000 470400 xsym               LDP0    S_D$
         2 001714   000037 756100                    STQ     31,,PR0

      865    13433    2             S_D.IXFIX = 0;

  13433  2 001715   000015 450100                    STZ     13,,PR0

      866    13434    2             IF S_D.ONEXIT ~= 0 AND B$TCB$->B$TCB.STK$->B$XCON.RNST = '0'B

  13434  2 001716   004746 235100                    LDA     2534,,PR0
         2 001717   001732 600000 2                  TZE     s:13439
         2 001720   000000 471400 xsym               LDP1    B$TCB$
         2 001721   100001 473500                    LDP3    1,,PR1
         2 001722   300101 236100                    LDQ     65,,PR3
         2 001723   777000 316003                    CANQ    -512,DU
         2 001724   001732 601000 2                  TNZ     s:13439

      867    13435    3             THEN DO;

      868    13436    3                  S_D.OUTPUT = 'ON EXIT condition encountered,';

  13436  2 001725   040100 100400                    MLR     fill='040'O
         2 001726   000277 000036 0                  ADSC9   VLP_EOMTABLE+11          cn=0,n=30
         2 001727   005335 004000                    ADSC9   2781,,PR0                cn=0,n=2048

      869    13437    3                  S_D.IXFIX = S_D.ONEXIT;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:146  

  13437  2 001730   000015 755100                    STA     13,,PR0

      870    13438    3                END;

  13438  2 001731   001745 710000 2                  TRA     s:13444

      871    13439    2             ELSE IF S_D.ONABORT ~= 0 AND B$TCB$->B$TCB.STK$->B$XCON.RNST ~= '0'B

  13439  2 001732   004744 235100                    LDA     2532,,PR0
         2 001733   001745 600000 2                  TZE     s:13444
         2 001734   000000 471400 xsym               LDP1    B$TCB$
         2 001735   100001 473500                    LDP3    1,,PR1
         2 001736   300101 236100                    LDQ     65,,PR3
         2 001737   777000 316003                    CANQ    -512,DU
         2 001740   001745 600000 2                  TZE     s:13444

      872    13440    3                  THEN DO;

      873    13441    3                       S_D.OUTPUT = 'ON ABORT condition encountered,';

  13441  2 001741   040100 100400                    MLR     fill='040'O
         2 001742   000307 000037 0                  ADSC9   VLP_EOMTABLE+19          cn=0,n=31
         2 001743   005335 004000                    ADSC9   2781,,PR0                cn=0,n=2048

      874    13442    3                       S_D.IXFIX = S_D.ONABORT;

  13442  2 001744   000015 755100                    STA     13,,PR0

      875    13443    3                     END;

      876    13444    2             IF S_D.IXFIX ~= 0

  13444  2 001745   000015 235100                    LDA     13,,PR0
         2 001746   002053 600000 2                  TZE     s:13473

      877    13445    3             THEN DO;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:147  

      878    13446    3                  IF S_D.FIXCOM.INACTIVE(S_D.IXFIX) THEN GOTO USER_FAULT;

  13446  2 001747   000015 236100                    LDQ     13,,PR0
         2 001750   000003 402007                    MPY     3,DL
         2 001751   000001 736000                    QLS     1
         2 001752   001212 236106                    LDQ     650,QL,PR0
         2 001753   000400 316003                    CANQ    256,DU
         2 001754   003371 601000 2                  TNZ     USER_FAULT

      879    13447    3                  S_D.SAVEIC = S_D.TIC;

  13447  2 001755   000027 235100                    LDA     23,,PR0
         2 001756   000002 755100                    STA     2,,PR0

      880    13448    3                  S_D.FAULTCMD$ = PINCRW(ADDR(S_D.FIXCOM), S_D.IXFIX*SIZEW(F$XCM));

  13448  2 001757   000015 236100                    LDQ     13,,PR0
         2 001760   000006 402003                    MPY     6,DU
         2 001761   001212 036003                    ADLQ    650,DU
         2 001762   000000 036000 xsym               ADLQ    S_D$
         2 001763   000004 756100                    STQ     4,,PR0

      881    13449    3                  IF S_D.T$T.ACTIVE THEN CALL DDB$TTRESET;

  13449  2 001764   004707 234100                    SZN     2503,,PR0
         2 001765   001771 605000 2                  TPL     s:13450

  13449  2 001766   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001767   000000 701000 xent               TSX1    DDB$TTRESET
         2 001770   000000 011000                    NOP     0

      882    13450    4                  IF S_D.S$TEP.ACTIVE THEN DO;

  13450  2 001771   000000 470400 xsym               LDP0    S_D$
         2 001772   005276 234100                    SZN     2750,,PR0
         2 001773   002002 605000 2                  TPL     s:13454
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:148  

      883    13451    4                       CALL DDB$STEPRESET;

  13451  2 001774   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001775   000000 701000 xent               TSX1    DDB$STEPRESET
         2 001776   000000 011000                    NOP     0

      884    13452    4                       S_D.S$TEP.ACTIVE = '1'B;

  13452  2 001777   400000 236003                    LDQ     -131072,DU
         2 002000   000000 470400 xsym               LDP0    S_D$
         2 002001   005276 756100                    STQ     2750,,PR0

      885    13453    4                     END;

      886    13454    3                  CALL DDB$RESTORE;

  13454  2 002002   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 002003   000000 701000 xent               TSX1    DDB$RESTORE
         2 002004   000000 011000                    NOP     0

      887    13455    3                  CALL DDA$ON ALTRET(USERGO2);

  13455  2 002005   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 002006   000000 701000 xent               TSX1    DDA$ON
         2 002007   005112 702000 2                  TSX2    USERGO2

      888    13456    3                  IF S_D.FAULTCMD$->F$XCM.SILENT THEN S_D.SILENT = '1'B;

  13456  2 002010   000000 470400 xsym               LDP0    S_D$
         2 002011   000004 471500                    LDP1    4,,PR0
         2 002012   100000 236100                    LDQ     0,,PR1
         2 002013   000200 316003                    CANQ    128,DU
         2 002014   002020 600000 2                  TZE     s:13458

  13456  2 002015   400000 236003                    LDQ     -131072,DU
         2 002016   004735 756100                    STQ     2525,,PR0
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:149  
         2 002017   002037 710000 2                  TRA     s:13461

      889    13457    4                  ELSE DO;

      890    13458    4                       CALL DDQ$WRITE(ADDR(S_D.OUTPUT), 31);

  13458  2 002020   000000 236000 xsym               LDQ     S_D$
         2 002021   005335 036003                    ADLQ    2781,DU
         2 002022   200300 756100                    STQ     LS+1,,AUTO
         2 002023   000033 236000 3                  LDQ     27
         2 002024   200303 756100                    STQ     LS+4,,AUTO
         2 002025   200300 631500                    EPPR1   LS+1,,AUTO
         2 002026   200302 451500                    STP1    LS+3,,AUTO
         2 002027   200302 630500                    EPPR0   LS+3,,AUTO
         2 002030   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 002031   000000 701000 xent               TSX1    DDQ$WRITE
         2 002032   000000 011000                    NOP     0

      891    13459    4                       CALL DUR$ECCRPT(ECCRPT_USER); /* Report user error */

  13459  2 002033   000004 630400 3                  EPPR0   4
         2 002034   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 002035   000000 701000 xent               TSX1    DUR$ECCRPT
         2 002036   000000 011000                    NOP     0

      892    13460    4                     END;

      893    13461    3                  S_D.ENTRYCMD$ = S_D.FAULTCMD$;

  13461  2 002037   000000 470400 xsym               LDP0    S_D$
         2 002040   000004 236100                    LDQ     4,,PR0
         2 002041   005203 756100                    STQ     2691,,PR0

      894    13462    3                  REMEMBER USERGO IN S_D.REM_USERGO;

  13462  2 002042   005156 635000 2                  EAA     USERGO
         2 002043   005232 452500                    STP2    2714,,PR0
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:150  
         2 002044   005233 755100                    STA     2715,,PR0

      895    13463    3                  CALL DDA$DOATTACH ALTRET(USERGO);

  13463  2 002045   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 002046   000000 701000 xent               TSX1    DDA$DOATTACH
         2 002047   005156 702000 2                  TSX2    USERGO

      896    13464    3                  S_D.SILENT = '0'B;

  13464  2 002050   000000 470400 xsym               LDP0    S_D$
         2 002051   004735 450100                    STZ     2525,,PR0

      897    13465    3                  GOTO SCAN_COMMAND;

  13465  2 002052   004634 710000 2                  TRA     SCAN_COMMAND

      898    13466    3                END;
      899    13467    2           END;
      900    13468        %EJECT;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:151  
      901    13469                                      /* If receive event for start of FPRG under
      902    13470                                         DELTA, do M$DRTN to associate FD with
      903    13471                                         this FPRG and get RU fid and then read
      904    13472                                         message from FD for this FPRG */
      905    13473    1        IF ECC = %ECC_EVENT# AND

  13473  2 002053   200005 235100                    LDA     ECC,,AUTO
         2 002054   000001 115007                    CMPA    1,DL
         2 002055   002225 601000 2                  TNZ     s:13525
         2 002056   000000 470400 xsym               LDP0    B$TCB$
         2 002057   000001 471500                    LDP1    1,,PR0
         2 002060   100100 720100                    LXL0    64,,PR1
         2 002061   000005 100003                    CMPX0   5,DU
         2 002062   002225 601000 2                  TNZ     s:13525
         2 002063   100104 236100                    LDQ     68,,PR1
         2 002064   000777 376007                    ANQ     511,DL
         2 002065   000003 116007                    CMPQ    3,DL
         2 002066   002225 601000 2                  TNZ     s:13525

      906    13474    1           B$TCB$->B$TCB.STK$->B$EVNT.SUBC = %SUBC_FPRG# AND
      907    13475    1           B$TCB$->B$TCB.STK$->B$FPRG.SUBC2 = %SUBC2_AFD#
      908    13476    2        THEN DO;

      909    13477                  /* Allocate space for context for the FPRG */
      910    13478    2             S_D.SAVEIC = S_D.TIC;

  13478  2 002067   000000 473400 xsym               LDP3    S_D$
         2 002070   300027 235100                    LDA     23,,PR3
         2 002071   300002 755100                    STA     2,,PR3

      911    13479    2             CALL DFA$GET_FPRG_DCB (DCBNO);

  13479  2 002072   200057 631500                    EPPR1   DCBNO,,AUTO
         2 002073   200300 451500                    STP1    LS+1,,AUTO
         2 002074   200300 630500                    EPPR0   LS+1,,AUTO
         2 002075   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 002076   000000 701000 xent               TSX1    DFA$GET_FPRG_DCB
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:152  
         2 002077   000000 011000                    NOP     0

      912    13480    2             OPDCBNO = B$TCB$ -> B$TCB.STK$-> B$FPRG.DCBNO;

  13480  2 002100   000000 470400 xsym               LDP0    B$TCB$
         2 002101   000001 471500                    LDP1    1,,PR0
         2 002102   100104 236100                    LDQ     68,,PR1
         2 002103   000022 772000                    QRL     18
         2 002104   200064 756100                    STQ     OPDCBNO,,AUTO

      913    13481    2             S_D.OPDCBNO = OPDCBNO;

  13481  2 002105   000000 473400 xsym               LDP3    S_D$
         2 002106   306720 756100                    STQ     3536,,PR3

      914    13482                  /* Call M$OPEN to get a connection to the FPRG */
      915    13483    2   OPEN_FPRG:
      916    13484    2             FPTOPEN = FPT_OPEN;

  13484  2 002107   000100 100400       OPEN_FPRG    MLR     fill='000'O
         2 002110   000130 000350 0                  ADSC9   FPT_OPEN                 cn=0,n=232
         2 002111   200126 000350                    ADSC9   FPTOPEN,,AUTO            cn=0,n=232

      917    13485    2             FPTOPEN.V_ = VECTOR(FPTOPEN.V);

  13485  2 002112   000010 235000 3                  LDA     8
         2 002113   200300 452500                    STP2    LS+1,,AUTO
         2 002114   200300 236100                    LDQ     LS+1,,AUTO
         2 002115   000172 036003                    ADLQ    122,DU
         2 002116   200126 757100                    STAQ    FPTOPEN,,AUTO

      918    13486    2             FPTOPEN.V.DCB# = DCBNO;

  13486  2 002117   200057 720100                    LXL0    DCBNO,,AUTO
         2 002120   200172 740100                    STX0    FPTOPEN+36,,AUTO

      919    13487    2             FPTOPEN.V.EVENT# = DCBNO;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:153  

  13487  2 002121   200057 235100                    LDA     DCBNO,,AUTO
         2 002122   200213 755100                    STA     FPTOPEN+53,,AUTO

      920    13488    2             FPTOPEN.V.ORG# = %DBGDCB#;

  13488  2 002123   024000 236007                    LDQ     10240,DL
         2 002124   200174 552110                    STBQ    FPTOPEN+38,'10'O,AUTO

      921    13489    2             FPTOPEN.V.DBGDCBNO# = OPDCBNO;

  13489  2 002125   200064 721100                    LXL1    OPDCBNO,,AUTO
         2 002126   200214 741100                    STX1    FPTOPEN+54,,AUTO

      922    13490    2             FPTOPEN.V.RES# = 'FE  ';

  13490  2 002127   000276 236000 0                  LDQ     VLP_EOMTABLE+10
         2 002130   200176 756100                    STQ     FPTOPEN+40,,AUTO

      923    13491        /*N*** THE FOLLOWING ASSIGNMENT OF DVFC IS NEEDED UNTIL JOHN
      924    13492               AND RICK FIGURE OUT THE RIGHT WAY TO DO IT ELSEWHERE  */
      925    13493    2             FPTOPEN.V.DVFC# = 'A';

  13493  2 002131   101000 236007                    LDQ     33280,DL
         2 002132   200210 552110                    STBQ    FPTOPEN+50,'10'O,AUTO

      926    13494    2             CALL M$OPEN (FPTOPEN)

  13494  2 002133   200126 630500                    EPPR0   FPTOPEN,,AUTO
         2 002134   450000 713400                    CLIMB   alt,open
         2 002135   410400 401760                    pmme    nvectors=18
         2 002136   002140 702000 2                  TSX2    s:13496
         2 002137   002216 710000 2                  TRA     s:13517

      927    13495    3                  WHENALTRETURN DO;

      928    13496    3                       CALL DUE$ERRMSG;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:154  

  13496  2 002140   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 002141   000000 701000 xent               TSX1    DUE$ERRMSG
         2 002142   000000 011000                    NOP     0

      929    13497    3                       IF DCBADDR(DCBNO)->F$DCB.FCD#

  13497  2 002143   000034 470400 3                  LDP0    28
         2 002144   000000 471500                    LDP1    0,,PR0
         2 002145   200057 720100                    LXL0    DCBNO,,AUTO
         2 002146   100000 473510                    LDP3    0,X0,PR1
         2 002147   300031 236100                    LDQ     25,,PR3
         2 002150   020000 316007                    CANQ    8192,DL
         2 002151   002173 600000 2                  TZE     s:13508

      930    13498    4                       THEN DO;                        /* CLOSE IT */

      931    13499    4                            FPT$CLOSE = FPT_CLOSE;

  13499  2 002152   000100 100400                    MLR     fill='000'O
         2 002153   000000 000170 xsym               ADSC9   FPT_CLOSE                cn=0,n=120
         2 002154   200224 000170                    ADSC9   FPT$CLOSE,,AUTO          cn=0,n=120

      932    13500    4                            FPT$CLOSE.V_ = VECTOR(FPT$CLOSE.V);

  13500  2 002155   000000 235000 3                  LDA     0
         2 002156   200300 452500                    STP2    LS+1,,AUTO
         2 002157   200300 236100                    LDQ     LS+1,,AUTO
         2 002160   000256 036003                    ADLQ    174,DU
         2 002161   200224 757100                    STAQ    FPT$CLOSE,,AUTO

      933    13501    4                            FPT$CLOSE.V.DCB# = DCBNO;

  13501  2 002162   200256 740100                    STX0    FPT$CLOSE+26,,AUTO

      934    13502    4                            CALL M$CLOSE (FPT$CLOSE)

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:155  
  13502  2 002163   200224 630500                    EPPR0   FPT$CLOSE,,AUTO
         2 002164   450001 713400                    CLIMB   alt,close
         2 002165   406000 401760                    pmme    nvectors=13
         2 002166   002170 702000 2                  TSX2    s:13504
         2 002167   002173 710000 2                  TRA     s:13508

      935    13503    5                                 WHENALTRETURN DO;

      936    13504    5                                      CALL DUE$ERRMSG;

  13504  2 002170   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 002171   000000 701000 xent               TSX1    DUE$ERRMSG
         2 002172   000000 011000                    NOP     0

      937    13505    5                                    END;

      938    13506    4                          END;

      939    13507                            /* Release the DCB */
      940    13508    3                       FPTRELDCB = FPT_RELDCB;

  13508  2 002173   000100 100400                    MLR     fill='000'O
         2 002174   000000 000020 xsym               ADSC9   FPT_RELDCB               cn=0,n=16
         2 002175   200220 000020                    ADSC9   FPTRELDCB,,AUTO          cn=0,n=16

      941    13509    3                       FPTRELDCB.V_ = VECTOR(FPTRELDCB.V);

  13509  2 002176   000035 235000 3                  LDA     29
         2 002177   200300 452500                    STP2    LS+1,,AUTO
         2 002200   200300 236100                    LDQ     LS+1,,AUTO
         2 002201   000222 036003                    ADLQ    146,DU
         2 002202   200220 757100                    STAQ    FPTRELDCB,,AUTO

      942    13510    3                       FPTRELDCB.V.DCB# = DCBNO;

  13510  2 002203   200057 720100                    LXL0    DCBNO,,AUTO
         2 002204   200222 740100                    STX0    FPTRELDCB+2,,AUTO
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:156  

      943    13511    3                       CALL M$RELDCB (FPTRELDCB)

  13511  2 002205   200220 630500                    EPPR0   FPTRELDCB,,AUTO
         2 002206   460003 713400                    CLIMB   alt,+24579
         2 002207   400000 401760                    pmme    nvectors=1
         2 002210   002212 702000 2                  TSX2    s:13513
         2 002211   002215 710000 2                  TRA     s:13515

      944    13512    4                            WHENALTRETURN DO;

      945    13513    4                                 CALL DUE$ERRMSG;

  13513  2 002212   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 002213   000000 701000 xent               TSX1    DUE$ERRMSG
         2 002214   000000 011000                    NOP     0

      946    13514    4                               END;

      947    13515    3                       GOTO RESTORE_ALL;

  13515  2 002215   004573 710000 2                  TRA     RESTORE_ALL

      948    13516    3                     END;
      949    13517    2             CALL DFA$SETUP_FPRG (DCBNO) ALTRET(SCAN_COMMAND);

  13517  2 002216   200057 630500                    EPPR0   DCBNO,,AUTO
         2 002217   200300 450500                    STP0    LS+1,,AUTO
         2 002220   200300 630500                    EPPR0   LS+1,,AUTO
         2 002221   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 002222   000000 701000 xent               TSX1    DFA$SETUP_FPRG
         2 002223   004634 702000 2                  TSX2    SCAN_COMMAND

      950    13518    2             GOTO RESTORE_ALL;

  13518  2 002224   004573 710000 2                  TRA     RESTORE_ALL

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:157  
      951    13519    2           END;
      952    13520        %EJECT;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:158  
      953    13521                                      /* If receive CLS_DCB event for an FPRG
      954    13522                                         DCB, see if have context for this DCB.
      955    13523                                         If not, return.  Otherwise, read message
      956    13524                                         from FD for this FPRG.  */
      957    13525    1        IF ECC = %ECC_EVENT# AND

  13525  2 002225   000001 115007                    CMPA    1,DL
         2 002226   002275 601000 2                  TNZ     s:13547
         2 002227   000000 470400 xsym               LDP0    B$TCB$
         2 002230   000001 471500                    LDP1    1,,PR0
         2 002231   100100 720100                    LXL0    64,,PR1
         2 002232   000006 100003                    CMPX0   6,DU
         2 002233   002275 601000 2                  TNZ     s:13547
         2 002234   100104 236100                    LDQ     68,,PR1
         2 002235   400000 316007                    CANQ    -131072,DL
         2 002236   002275 600000 2                  TZE     s:13547
         2 002237   100104 236100                    LDQ     68,,PR1
         2 002240   000777 376007                    ANQ     511,DL
         2 002241   000003 116007                    CMPQ    3,DL
         2 002242   002275 601000 2                  TNZ     s:13547

      958    13526    1           B$TCB$ -> B$TCB.STK$ -> B$EVNT.SUBC = %SUBC_COMIO# AND
      959    13527    1           B$TCB$ -> B$TCB.STK$ -> B$COMIO.FLAGS.DELTA AND
      960    13528    1           B$TCB$ -> B$TCB.STK$ -> B$COMIO.SUBC2 = %SUBC2_CLS_DCB#
      961    13529    2        THEN DO;

      962    13530    2             S_D.SAVEIC = S_D.TIC;

  13530  2 002243   000000 473400 xsym               LDP3    S_D$
         2 002244   300027 235100                    LDA     23,,PR3
         2 002245   300002 755100                    STA     2,,PR3

      963    13531    2             IF S_D.FPRG_CONTEXT$ = ADDR(NIL)

  13531  2 002246   300076 236100                    LDQ     62,,PR3
         2 002247   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 002250   005201 600000 2                  TZE     USERGO0
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:159  

      964    13532    2             THEN GOTO USERGO0;
      965    13533                  /* See if have context for this FPRG DCB */
      966    13534    2             DCBNO = B$TCB$->B$TCB.STK$->B$COMIO.EVID;

  13534  2 002251   000001 471500                    LDP1    1,,PR0
         2 002252   100101 235100                    LDA     65,,PR1
         2 002253   200057 755100                    STA     DCBNO,,AUTO

      967    13535    2             TFPRG$ = S_D.FPRG_CONTEXT$;

  13535  2 002254   200053 756100                    STQ     TFPRG$,,AUTO

      968    13536    3             DO WHILE (TFPRG$ -> FPRG$CONTEXT.DCBNO ~= DCBNO);

  13536  2 002255   200053 471500                    LDP1    TFPRG$,,AUTO
         2 002256   100001 236100                    LDQ     1,,PR1
         2 002257   777777 376007                    ANQ     -1,DL
         2 002260   200057 116100                    CMPQ    DCBNO,,AUTO
         2 002261   002274 600000 2                  TZE     s:13541

      969    13537    3                  TFPRG$ = TFPRG$ -> FPRG$CONTEXT.NEXT$;

  13537  2 002262   200053 470500                    LDP0    TFPRG$,,AUTO
         2 002263   000000 236100                    LDQ     0,,PR0
         2 002264   200053 756100                    STQ     TFPRG$,,AUTO

      970    13538    3                  IF TFPRG$ = ADDR(NIL)

  13538  2 002265   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 002266   005201 600000 2                  TZE     USERGO0

      971    13539    3                  THEN GOTO USERGO0;
      972    13540    3                END;

  13540  2 002267   200053 470500                    LDP0    TFPRG$,,AUTO
         2 002270   000001 236100                    LDQ     1,,PR0
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:160  
         2 002271   777777 376007                    ANQ     -1,DL
         2 002272   200057 116100                    CMPQ    DCBNO,,AUTO
         2 002273   002262 601000 2                  TNZ     s:13537

      973    13541    2             GOTO PROCESS_EVENT;

  13541  2 002274   002365 710000 2                  TRA     PROCESS_EVENT

      974    13542    2           END;
      975    13543        %EJECT;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:161  
      976    13544                                      /* If receive event for an FPRG, find its
      977    13545                                         context and read message from FD for this
      978    13546                                         FPRG */
      979    13547    1        IF ECC = %ECC_EVENT# AND

  13547  2 002275   000001 115007                    CMPA    1,DL
         2 002276   003371 601000 2                  TNZ     USER_FAULT
         2 002277   000000 470400 xsym               LDP0    B$TCB$
         2 002300   000001 471500                    LDP1    1,,PR0
         2 002301   100100 720100                    LXL0    64,,PR1
         2 002302   000006 100003                    CMPX0   6,DU
         2 002303   003371 601000 2                  TNZ     USER_FAULT
         2 002304   100104 236100                    LDQ     68,,PR1
         2 002305   400000 316007                    CANQ    -131072,DL
         2 002306   003371 600000 2                  TZE     USER_FAULT

      980    13548    1           B$TCB$->B$TCB.STK$->B$EVNT.SUBC = %SUBC_COMIO# AND
      981    13549    1           B$TCB$->B$TCB.STK$->B$COMIO.FLAGS.DELTA
      982    13550    2        THEN DO;

      983    13551    2             S_D.SAVEIC = S_D.TIC;

  13551  2 002307   000000 473400 xsym               LDP3    S_D$
         2 002310   300027 235100                    LDA     23,,PR3
         2 002311   300002 755100                    STA     2,,PR3

      984    13552    2             IF S_D.FPRG_CONTEXT$ = ADDR(NIL)

  13552  2 002312   300076 236100                    LDQ     62,,PR3
         2 002313   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 002314   002342 601000 2                  TNZ     s:13565

      985    13553    3             THEN DO;

  13552  2 002315                       TAKE_SNAP_1  null
      986    13554    3   TAKE_SNAP_1:   ;
      987    13555    3                  REMEMBER NEVER1 IN S_D.SCREECH_IC;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:162  

  13555  2 002315   002325 635000 2                  EAA     NEVER1
         2 002316   000000 470400 xsym               LDP0    S_D$
         2 002317   005250 452500                    STP2    2728,,PR0
         2 002320   005251 755100                    STA     2729,,PR0

      988    13556    3                  CALL M$SCREECH (SNAP_EVENT) ALTRET(NEVER1);

  13556  2 002321   000120 630400 0                  EPPR0   SNAP_EVENT
         2 002322   400013 713400                    CLIMB   alt,+11
         2 002323   401000 401760                    pmme    nvectors=3
         2 002324   002325 702000 2                  TSX2    NEVER1

  13556  2 002325                       NEVER1       null
      989    13557    3   NEVER1:        ;
      990    13558    3                  S_D.ERROR = E@BADEVENT;  /* E@BADEVENT */

  13558  2 002325   001015 235007                    LDA     525,DL
         2 002326   000000 470400 xsym               LDP0    S_D$
         2 002327   000013 755100                    STA     11,,PR0

      991    13559    3                  CALL DDE$ERROR;

  13559  2 002330   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 002331   000000 701000 xent               TSX1    DDE$ERROR
         2 002332   000000 011000                    NOP     0

      992    13560    3                  S_D.ERROR = E@DELBUG;    /* E@DELBUG */

  13560  2 002333   000766 235007                    LDA     502,DL
         2 002334   000000 470400 xsym               LDP0    S_D$
         2 002335   000013 755100                    STA     11,,PR0

      993    13561    3                  CALL DDE$ERROR;

  13561  2 002336   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 002337   000000 701000 xent               TSX1    DDE$ERROR
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:163  
         2 002340   000000 011000                    NOP     0

      994    13562    3                  GOTO DRTN_QUIT;

  13562  2 002341   005741 710000 2                  TRA     DRTN_QUIT

      995    13563    3                END;
      996    13564                  /* find context for this FPRG */
      997    13565    2             DCBNO = B$TCB$->B$TCB.STK$->B$COMIO.EVID;

  13565  2 002342   000001 471500                    LDP1    1,,PR0
         2 002343   100101 235100                    LDA     65,,PR1
         2 002344   200057 755100                    STA     DCBNO,,AUTO

      998    13566    2             TFPRG$ = S_D.FPRG_CONTEXT$;

  13566  2 002345   200053 756100                    STQ     TFPRG$,,AUTO

      999    13567    3             DO WHILE (TFPRG$ -> FPRG$CONTEXT.DCBNO ~= DCBNO);

  13567  2 002346   200053 471500                    LDP1    TFPRG$,,AUTO
         2 002347   100001 236100                    LDQ     1,,PR1
         2 002350   777777 376007                    ANQ     -1,DL
         2 002351   200057 116100                    CMPQ    DCBNO,,AUTO
         2 002352   002365 600000 2                  TZE     PROCESS_EVENT

     1000    13568    3                  TFPRG$ = TFPRG$ -> FPRG$CONTEXT.NEXT$;

  13568  2 002353   200053 470500                    LDP0    TFPRG$,,AUTO
         2 002354   000000 236100                    LDQ     0,,PR0
         2 002355   200053 756100                    STQ     TFPRG$,,AUTO

     1001    13569    3                  IF TFPRG$ = ADDR(NIL)

  13569  2 002356   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 002357   002315 600000 2                  TZE     TAKE_SNAP_1

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:164  
     1002    13570    3                  THEN GOTO TAKE_SNAP_1;
     1003    13571    3                END;

  13571  2 002360   200053 470500                    LDP0    TFPRG$,,AUTO
         2 002361   000001 236100                    LDQ     1,,PR0
         2 002362   777777 376007                    ANQ     -1,DL
         2 002363   200057 116100                    CMPQ    DCBNO,,AUTO
         2 002364   002353 601000 2                  TNZ     s:13568

     1004    13572    2   PROCESS_EVENT:
     1005    13573    2             S_D.CURRENT_FPRG_CONTEXT$ = TFPRG$;

  13573  2 002365   200053 236100       PROCESS_EVE* LDQ     TFPRG$,,AUTO
         2 002366   000000 470400 xsym               LDP0    S_D$
         2 002367   000102 756100                    STQ     66,,PR0

     1006    13574    2             S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.STATE = %STOPPED;

  13574  2 002370   000102 471500                    LDP1    66,,PR0
         2 002371   000002 236003                    LDQ     2,DU
         2 002372   100001 552120                    STBQ    1,'20'O,PR1

     1007    13575                  /* Read message from FD for this FPRG */
     1008    13576    2             CALL DFQ$READ_FD (S_D.CURRENT_FPRG_CONTEXT$, '0'B)

  13576  2 002373   000004 236000 3                  LDQ     4
         2 002374   200301 756100                    STQ     LS+2,,AUTO
         2 002375   000000 236000 xsym               LDQ     S_D$
         2 002376   000102 036003                    ADLQ    66,DU
         2 002377   200300 756100                    STQ     LS+1,,AUTO
         2 002400   200300 630500                    EPPR0   LS+1,,AUTO
         2 002401   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 002402   000000 701000 xent               TSX1    DFQ$READ_FD
         2 002403   002405 702000 2                  TSX2    s:13578
         2 002404   002411 710000 2                  TRA     s:13581

     1009    13577    3                  WHENALTRETURN DO;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:165  

     1010    13578    3                       CALL DUE$ERRMSG;

  13578  2 002405   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 002406   000000 701000 xent               TSX1    DUE$ERRMSG
         2 002407   000000 011000                    NOP     0

     1011    13579    3                       GOTO RESTORE_ALL;

  13579  2 002410   004573 710000 2                  TRA     RESTORE_ALL

     1012    13580    3                     END;
     1013    13581    2             IF S_D.DEBUGA(%DB@ECC)

  13581  2 002411   000000 470400 xsym               LDP0    S_D$
         2 002412   000053 236100                    LDQ     43,,PR0
         2 002413   000040 316007                    CANQ    32,DL
         2 002414   002431 600000 2                  TZE     DO_MESSAGE

     1014    13582    3             THEN DO;

     1015    13583    3                  CALL DFR$EVENTRPT(%DB@ECC);

  13583  2 002415   000037 630400 3                  EPPR0   31
         2 002416   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 002417   000000 701000 xent               TSX1    DFR$EVENTRPT
         2 002420   000000 011000                    NOP     0

     1016    13584    3                  IF S_D.DEBUG

  13584  2 002421   000000 470400 xsym               LDP0    S_D$
         2 002422   004732 234100                    SZN     2522,,PR0
         2 002423   002431 605000 2                  TPL     DO_MESSAGE

     1017    13585    4                  THEN DO;

     1018    13586    4                       CALL DUD$MINI;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:166  

  13586  2 002424   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 002425   000000 701000 xent               TSX1    DUD$MINI
         2 002426   000000 011000                    NOP     0

     1019    13587    4                       S_D.PROMPT_SIZE = 0;

  13587  2 002427   000000 470400 xsym               LDP0    S_D$
         2 002430   005147 450100                    STZ     2663,,PR0

     1020    13588    4                     END;

     1021    13589    3                END;

     1022    13590    2   DO_MESSAGE:
     1023    13591                  /* Make sure is a BRKRSP message */
     1024    13592    2             IF GD$MSG.FNC ~= %FPRG_BRKRSP# AND GD$MSG.FNC ~= %GD#RSPTRACE

  13592  2 002431   000000 470400 xsym  DO_MESSAGE   LDP0    S_D_L6_MESSAGE$
         2 002432   000000 236100                    LDQ     0,,PR0
         2 002433   776000 376003                    ANQ     -1024,DU
         2 002434   132000 116003                    CMPQ    46080,DU
         2 002435   002504 600000 2                  TZE     s:13615
         2 002436   110000 116003                    CMPQ    36864,DU
         2 002437   002504 600000 2                  TZE     s:13615

     1025    13593    3             THEN DO;

     1026    13594    3                  IF TFPRG$ -> FPRG$CONTEXT.XDELTA AND

  13594  2 002440   200053 471500                    LDP1    TFPRG$,,AUTO
         2 002441   100001 236100                    LDQ     1,,PR1
         2 002442   002000 316003                    CANQ    1024,DU
         2 002443   002457 600000 2                  TZE     s:13601
         2 002444   000000 236100                    LDQ     0,,PR0
         2 002445   776000 376003                    ANQ     -1024,DU
         2 002446   140000 116003                    CMPQ    49152,DU
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:167  
         2 002447   002457 601000 2                  TNZ     s:13601

     1027    13595    3                    GD$MSG.FNC = %GD#RSPBADMSG
     1028    13596    4                  THEN DO;

     1029    13597    4                       S_D.ERROR = E@BADMSG; /* E@BADMSG */

  13597  2 002450   000512 235007                    LDA     330,DL
         2 002451   000000 473400 xsym               LDP3    S_D$
         2 002452   300013 755100                    STA     11,,PR3

     1030    13598    4                       CALL DDE$ERROR;

  13598  2 002453   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 002454   000000 701000 xent               TSX1    DDE$ERROR
         2 002455   000000 011000                    NOP     0

     1031    13599    4                       GOTO SCAN_COMMAND;

  13599  2 002456   004634 710000 2                  TRA     SCAN_COMMAND

     1032    13600    4                     END;
     1033    13601    3                  REMEMBER NEVER IN S_D.SCREECH_IC;

  13601  2 002457   002467 635000 2                  EAA     NEVER
         2 002460   000000 473400 xsym               LDP3    S_D$
         2 002461   305250 452500                    STP2    2728,,PR3
         2 002462   305251 755100                    STA     2729,,PR3

     1034    13602    3                  CALL M$SCREECH (SNAP_MESSAGE) ALTRET(NEVER);

  13602  2 002463   000110 630400 0                  EPPR0   SNAP_MESSAGE
         2 002464   400013 713400                    CLIMB   alt,+11
         2 002465   401000 401760                    pmme    nvectors=3
         2 002466   002467 702000 2                  TSX2    NEVER

  13596  2 002467                       NEVER        null
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:168  
     1035    13603        /*S* SCREECH_CODE: DUX-S$DUMESSAGE
     1036    13604             TYPE: SNAP
     1037    13605             MESSAGE: Unexpected message received from DELTA_F on the FEP
     1038    13606             REMARKS: A message other than the one expected was received
     1039    13607        */
     1040    13608    3   NEVER:         ;
     1041    13609    3                  S_D.ERROR = E@BADMESSAGE;   /* E@BADMESSAGE */

  13609  2 002467   001014 235007                    LDA     524,DL
         2 002470   000000 470400 xsym               LDP0    S_D$
         2 002471   000013 755100                    STA     11,,PR0

     1042    13610    3                  CALL DDE$ERROR;

  13610  2 002472   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 002473   000000 701000 xent               TSX1    DDE$ERROR
         2 002474   000000 011000                    NOP     0

     1043    13611    3                  S_D.ERROR = E@DELBUG;       /* E@DELBUG */

  13611  2 002475   000766 235007                    LDA     502,DL
         2 002476   000000 470400 xsym               LDP0    S_D$
         2 002477   000013 755100                    STA     11,,PR0

     1044    13612    3                  CALL DDE$ERROR;

  13612  2 002500   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 002501   000000 701000 xent               TSX1    DDE$ERROR
         2 002502   000000 011000                    NOP     0

     1045    13613    3                  GOTO SCAN_COMMAND;

  13613  2 002503   004634 710000 2                  TRA     SCAN_COMMAND

     1046    13614    3                END;
     1047    13615    2             FPRG_IC = GD$MSG.BRKRSP.ADR$;

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:169  
  13615  2 002504   000000 235100                    LDA     0,,PR0
         2 002505   000001 236100                    LDQ     1,,PR0
         2 002506   000030 773000                    LRL     24
         2 002507   000040 376000 3                  ANQ     32
         2 002510   200060 756100                    STQ     FPRG_IC,,AUTO

     1048    13616    2             S_D.MOD_L6.ADDRESS = FPRG_IC;

  13616  2 002511   000000 471400 xsym               LDP1    S_D$
         2 002512   106772 756100                    STQ     3578,,PR1

     1049    13617    2             S_D.MOD_L6.SEG = 3;

  13617  2 002513   000003 235007                    LDA     3,DL
         2 002514   106773 755100                    STA     3579,,PR1

     1050    13618    2             S_D.MOD_L6.DESC# = 0;

  13618  2 002515   106774 450100                    STZ     3580,,PR1

     1051    13619    2             S_D.MOD_L6.NOT_IS = '0'B;

  13619  2 002516   106775 450100                    STZ     3581,,PR1

     1052    13620    2             S_D.MOD_L6.VALUE.SIZE = GD$MSG.BRKRSP.DATA_SIZE;

  13620  2 002517   000013 236100                    LDQ     11,,PR0
         2 002520   000030 772000                    QRL     24
         2 002521   000377 376007                    ANQ     255,DL
         2 002522   106776 756100                    STQ     3582,,PR1

     1053    13621    3             DO I = 0 TO GD$MSG.BRKRSP.DATA_SIZE - 1;

  13621  2 002523   200016 450100                    STZ     I,,AUTO
         2 002524   002543 710000 2                  TRA     s:13623+3

     1054    13622    3                  S_D.MOD_L6.VALUE.OPS(I) = GD$MSG.BRKRSP.DATA(I);
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:170  

  13622  2 002525   200016 235100                    LDA     I,,AUTO
         2 002526   000004 735000                    ALS     4
         2 002527   200016 236100                    LDQ     I,,AUTO
         2 002530   200300 755100                    STA     LS+1,,AUTO
         2 002531   000044 402007                    MPY     36,DL
         2 002532   000000 470400 xsym               LDP0    S_D_L6_MESSAGE$
         2 002533   200300 235100                    LDA     LS+1,,AUTO
         2 002534   000000 471400 xsym               LDP1    S_D$
         2 002535   003106 061505                    CSR     bolr='003'O
         2 002536   000004 000020                    BDSC    4,A,PR0                  by=0,bit=0,n=16
         2 002537   106777 000044                    BDSC    3583,Q,PR1               by=0,bit=0,n=36

     1055    13623    3                END;

  13623  2 002540   200016 235100                    LDA     I,,AUTO
         2 002541   000001 035007                    ADLA    1,DL
         2 002542   200016 755100                    STA     I,,AUTO
         2 002543   000013 236100                    LDQ     11,,PR0
         2 002544   000030 772000                    QRL     24
         2 002545   000377 376007                    ANQ     255,DL
         2 002546   200016 116100                    CMPQ    I,,AUTO
         2 002547   002551 600000 2                  TZE     s:13624
         2 002550   002525 603000 2                  TRC     s:13622

     1056    13624    2             S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.ADDRESS = FPRG_IC;

  13624  2 002551   100102 473500                    LDP3    66,,PR1
         2 002552   200060 235100                    LDA     FPRG_IC,,AUTO
         2 002553   300005 755100                    STA     5,,PR3

     1057    13625    2             IF S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.XDELTA

  13625  2 002554   100102 473500                    LDP3    66,,PR1
         2 002555   300001 236100                    LDQ     1,,PR3
         2 002556   002000 316003                    CANQ    1024,DU
         2 002557   002611 600000 2                  TZE     s:13634
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:171  

     1058    13626    3             THEN DO;

     1059    13627    3                  TEMP1 = BITBIN(GD$MSG.BRKRSP.ERRCODE);

  13627  2 002560   000003 236100                    LDQ     3,,PR0
         2 002561   000040 376000 3                  ANQ     32
         2 002562   200037 756100                    STQ     TEMP$,,AUTO

     1060    13628    3                  TEMP2B.B1 = TEMP1B.B1;

  13628  2 002563   200037 236100                    LDQ     TEMP$,,AUTO
         2 002564   000003 736000                    QLS     3
         2 002565   200040 676100                    ERQ     TEMP2,,AUTO
         2 002566   377000 376003                    ANQ     130560,DU
         2 002567   200040 656100                    ERSQ    TEMP2,,AUTO

     1061    13629    3                  TEMP2B.B2 = TEMP1B.B2;

  13629  2 002570   200037 236100                    LDQ     TEMP$,,AUTO
         2 002571   000002 736000                    QLS     2
         2 002572   200040 676100                    ERQ     TEMP2,,AUTO
         2 002573   000377 376003                    ANQ     255,DU
         2 002574   200040 656100                    ERSQ    TEMP2,,AUTO

     1062    13630    3                  TEMP2B.B3 = TEMP1B.B3;

  13630  2 002575   200037 236100                    LDQ     TEMP$,,AUTO
         2 002576   000001 736000                    QLS     1
         2 002577   200040 676100                    ERQ     TEMP2,,AUTO
         2 002600   377000 376007                    ANQ     130560,DL
         2 002601   200040 656100                    ERSQ    TEMP2,,AUTO

     1063    13631    3                  TEMP2B.B4 = TEMP1B.B4;

  13631  2 002602   200037 236100                    LDQ     TEMP$,,AUTO
         2 002603   200040 676100                    ERQ     TEMP2,,AUTO
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:172  
         2 002604   000377 376007                    ANQ     255,DL
         2 002605   200040 656100                    ERSQ    TEMP2,,AUTO

     1064    13632    3                  S_D.BRKRSP_ERRCODE = TEMP2;

  13632  2 002606   200040 235100                    LDA     TEMP2,,AUTO
         2 002607   105240 755100                    STA     2720,,PR1

     1065    13633    3                END;

  13633  2 002610   002616 710000 2                  TRA     s:13635

     1066    13634    2             ELSE S_D.BRKRSP_ERRCODE = BITBIN(GD$MSG_HOST.BRKRSP.ERRCODE);

  13634  2 002611   000000 474400 xsym               LDP4    S_D_HOST_MESSAGE$
         2 002612   400003 235100                    LDA     3,,PR4
         2 002613   400004 236100                    LDQ     4,,PR4
         2 002614   000022 773000                    LRL     18
         2 002615   105240 756100                    STQ     2720,,PR1

     1067    13635    2             S_D.USERNO = GD$MSG.BRKRSP.USER#;

  13635  2 002616   000002 235100                    LDA     2,,PR0
         2 002617   000003 236100                    LDQ     3,,PR0
         2 002620   000040 773000                    LRL     32
         2 002621   177777 376007                    ANQ     65535,DL
         2 002622   105241 756100                    STQ     2721,,PR1

     1068    13636    2             S_D.MBU = GD$MSG.BRKRSP.MBU;

  13636  2 002623   000013 236100                    LDQ     11,,PR0
         2 002624   000014 736000                    QLS     12
         2 002625   400000 376003                    ANQ     -131072,DU
         2 002626   105244 756100                    STQ     2724,,PR1

     1069    13637    2             FAULT = GD$MSG.BRKRSP.BRK#;

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:173  
  13637  2 002627   000002 236100                    LDQ     2,,PR0
         2 002630   000014 772000                    QRL     12
         2 002631   177777 376007                    ANQ     65535,DL
         2 002632   200015 756100                    STQ     FAULT,,AUTO

     1070    13638    2             IF (FAULT - (%GD#MAXBRKNUM + 1)) = %G_FPRG_START2#

  13638  2 002633   000123 116007                    CMPQ    83,DL
         2 002634   002771 601000 2                  TNZ     s:13679

     1071    13639    3             THEN DO;

     1072    13640                       /* FPRG started via M$LDTRC - need to do an M$DRTN
     1073    13641                          to get new RU name and update context for new
     1074    13642                          FPRG  */
     1075    13643    3                  FPT$DRTN.FPRG_FID_ = VECTOR(VLR_FPRG_FID);

  13643  2 002635   000041 235000 3                  LDA     33
         2 002636   200300 452500                    STP2    LS+1,,AUTO
         2 002637   200300 236100                    LDQ     LS+1,,AUTO
         2 002640   000106 036003                    ADLQ    70,DU
         2 002641   200100 757100                    STAQ    FPT$DRTN+8,,AUTO

     1076    13644    3                  FPT$DRTN.V.FPRG_DCB# = DCBNO;

  13644  2 002642   200057 720100                    LXL0    DCBNO,,AUTO
         2 002643   200104 440100                    SXL0    FPT$DRTN+12,,AUTO

     1077    13645    3                  FPT$DRTN.V.WAKE_FD# = '1'B;

  13645  2 002644   000020 236003                    LDQ     16,DU
         2 002645   200103 256100                    ORSQ    FPT$DRTN+11,,AUTO

     1078    13646    3                  CALL M$DRTN (FPT$DRTN)

  13646  2 002646   200070 630500                    EPPR0   FPT$DRTN,,AUTO
         2 002647   410017 713400                    CLIMB   alt,+4111
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:174  
         2 002650   402000 401760                    pmme    nvectors=5
         2 002651   002653 702000 2                  TSX2    s:13648
         2 002652   002665 710000 2                  TRA     s:13655

     1079    13647    4                       WHENALTRETURN DO;

     1080    13648    4                            CALL DUE$ERRMSG;

  13648  2 002653   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 002654   000000 701000 xent               TSX1    DUE$ERRMSG
         2 002655   000000 011000                    NOP     0

     1081    13649    4                            FPT$DRTN.V.WAKE_FD# = '0'B;

  13649  2 002656   000042 236000 3                  LDQ     34
         2 002657   200103 356100                    ANSQ    FPT$DRTN+11,,AUTO

     1082    13650    4                            FPT$DRTN.V.FPRG_DCB# = 0;

  13650  2 002660   000000 220003                    LDX0    0,DU
         2 002661   200104 440100                    SXL0    FPT$DRTN+12,,AUTO

     1083    13651    4                            FPT$DRTN.FPRG_FID_ = VECTOR(NIL);

  13651  2 002662   000044 237000 3                  LDAQ    36
         2 002663   200100 757100                    STAQ    FPT$DRTN+8,,AUTO

     1084    13652    4                            GOTO RESTORE_ALL;

  13652  2 002664   004573 710000 2                  TRA     RESTORE_ALL

     1085    13653    4                          END;
     1086    13654                                                /* Pick up run unit name for schema */
     1087    13655    3                  S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.RUFID.FNAME.SIZE =
             13655                           VLR_FPRG_FID.NAME.L;

  13655  2 002665   000000 470400 xsym               LDP0    S_D$
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:175  
         2 002666   000102 471500                    LDP1    66,,PR0
         2 002667   200106 236100                    LDQ     VLR_FPRG_FID,,AUTO
         2 002670   100015 552140                    STBQ    13,'40'O,PR1

     1088    13656    3                  S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.RUFID.FNAME.TEXT =
             13656                           VLR_FPRG_FID.NAME.TEXT;

  13656  2 002671   000102 471500                    LDP1    66,,PR0
         2 002672   040100 100500                    MLR     fill='040'O
         2 002673   200106 200037                    ADSC9   VLR_FPRG_FID,,AUTO       cn=1,n=31
         2 002674   100015 200037                    ADSC9   13,,PR1                  cn=1,n=31

     1089    13657    3                  S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.RUFID.ACCT = VLR_FPRG_FID.
             13657                           ACCT;

  13657  2 002675   000102 471500                    LDP1    66,,PR0
         2 002676   200116 237100                    LDAQ    VLR_FPRG_FID+8,,AUTO
         2 002677   100025 755100                    STA     21,,PR1
         2 002700   100026 756100                    STQ     22,,PR1

     1090    13658    3                  S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.RUFID.PASS = VLR_FPRG_FID.
             13658                           PASS;

  13658  2 002701   000102 471500                    LDP1    66,,PR0
         2 002702   200120 237100                    LDAQ    VLR_FPRG_FID+10,,AUTO
         2 002703   100027 755100                    STA     23,,PR1
         2 002704   100030 756100                    STQ     24,,PR1

     1091    13659    3                  S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.RUFID.PSN = VLR_FPRG_FID.
             13659                           PSN;

  13659  2 002705   000102 471500                    LDP1    66,,PR0
         2 002706   040100 100500                    MLR     fill='040'O
         2 002707   200122 000006                    ADSC9   VLR_FPRG_FID+12,,AUTO    cn=0,n=6
         2 002710   100031 000006                    ADSC9   25,,PR1                  cn=0,n=6

     1092    13660    3                  S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.RUFID.MODTIME =
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:176  
             13660                           VLR_FPRG_FID.MODTIME;

  13660  2 002711   000102 471500                    LDP1    66,,PR0
         2 002712   000100 100500                    MLR     fill='000'O
         2 002713   200124 000004                    ADSC9   VLR_FPRG_FID+14,,AUTO    cn=0,n=4
         2 002714   100032 400004                    ADSC9   26,,PR1                  cn=2,n=4

     1093    13661    3                  FPT$DRTN.V.WAKE_FD# = '0'B;

  13661  2 002715   000042 236000 3                  LDQ     34
         2 002716   200103 356100                    ANSQ    FPT$DRTN+11,,AUTO

     1094    13662    3                  FPT$DRTN.V.FPRG_DCB# = 0;

  13662  2 002717   000000 220003                    LDX0    0,DU
         2 002720   200104 440100                    SXL0    FPT$DRTN+12,,AUTO

     1095    13663    3                  FPT$DRTN.FPRG_FID_ = VECTOR(NIL);

  13663  2 002721   000044 237000 3                  LDAQ    36
         2 002722   200100 757100                    STAQ    FPT$DRTN+8,,AUTO

     1096    13664    3                  RES = S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.RES;

  13664  2 002723   000102 471500                    LDP1    66,,PR0
         2 002724   040100 100500                    MLR     fill='040'O
         2 002725   100002 000010                    ADSC9   2,,PR1                   cn=0,n=8
         2 002726   200061 000010                    ADSC9   RES,,AUTO                cn=0,n=8

     1097    13665    3                  RES_SIZE = S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.RES_SIZE;

  13665  2 002727   100004 235100                    LDA     4,,PR1
         2 002730   200063 755100                    STA     RES_SIZE,,AUTO

     1098    13666    4                  DO I = 1 TO S_D.FIXLAST;

  13666  2 002731   000001 235007                    LDA     1,DL
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:177  
         2 002732   200016 755100                    STA     I,,AUTO
         2 002733   002764 710000 2                  TRA     s:13676+3

     1099    13667    4                       IF S_D.FIXCOM.FPRG(I)

  13667  2 002734   200016 236100                    LDQ     I,,AUTO
         2 002735   000006 402007                    MPY     6,DL
         2 002736   000000 470400 xsym               LDP0    S_D$
         2 002737   001212 236106                    LDQ     650,QL,PR0
         2 002740   000002 316003                    CANQ    2,DU
         2 002741   002761 600000 2                  TZE     s:13676

     1100    13668    5                       THEN DO;

     1101    13669    5                            IF SUBSTR(S_D.FIXCOM.FPRG_RES(I), 0, S_D.FIXCOM.
             13669                                     FPRG_RES_SIZE(I))

  13669  2 002742   200016 236100                    LDQ     I,,AUTO
         2 002743   000006 402007                    MPY     6,DL
         2 002744   001217 720106                    LXL0    655,QL,PR0
         2 002745   200016 236100                    LDQ     I,,AUTO
         2 002746   000030 402007                    MPY     24,DL
         2 002747   200063 721100                    LXL1    RES_SIZE,,AUTO
         2 002750   040140 106546                    CMPC    fill='040'O
         2 002751   001215 000010                    ADSC9   653,Q,PR0                cn=0,n=*X0
         2 002752   200061 000011                    ADSC9   RES,,AUTO                cn=0,n=*X1
         2 002753   002761 601000 2                  TNZ     s:13676

     1102    13670    5                               = SUBSTR(RES, 0, RES_SIZE)
     1103    13671    6                            THEN DO;

     1104    13672    6                                 S_D.KILL1 = I;

  13672  2 002754   200016 235100                    LDA     I,,AUTO
         2 002755   000063 755100                    STA     51,,PR0

     1105    13673    6                                 CALL DDA$KILL1;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:178  

  13673  2 002756   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 002757   000000 701000 xent               TSX1    DDA$KILL1
         2 002760   000000 011000                    NOP     0

     1106    13674    6                               END;

     1107    13675    5                          END;

     1108    13676    4                     END;

  13676  2 002761   200016 235100                    LDA     I,,AUTO
         2 002762   000001 035007                    ADLA    1,DL
         2 002763   200016 755100                    STA     I,,AUTO
         2 002764   000000 470400 xsym               LDP0    S_D$
         2 002765   200016 236100                    LDQ     I,,AUTO
         2 002766   002771 604000 2                  TMI     s:13679
         2 002767   000047 116100                    CMPQ    39,,PR0
         2 002770   002734 604400 2                  TMOZ    s:13667

     1109    13677    3                END;

     1110    13678                  /* Report Host program stopped */
     1111    13679    2             IF NOT S_D.DEBUG_CMD AND GD$MSG.FNC ~= %GD#RSPTRACE AND

  13679  2 002771   000000 470400 xsym               LDP0    S_D$
         2 002772   004665 234100                    SZN     2485,,PR0
         2 002773   003021 604000 2                  TMI     s:13685
         2 002774   000000 471400 xsym               LDP1    S_D_L6_MESSAGE$
         2 002775   100000 236100                    LDQ     0,,PR1
         2 002776   776000 376003                    ANQ     -1024,DU
         2 002777   110000 116003                    CMPQ    36864,DU
         2 003000   003021 600000 2                  TZE     s:13685
         2 003001   200015 235100                    LDA     FAULT,,AUTO
         2 003002   003021 600000 2                  TZE     s:13685
         2 003003   000025 115007                    CMPA    21,DL
         2 003004   003021 603000 2                  TRC     s:13685
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:179  
         2 003005   000102 473500                    LDP3    66,,PR0
         2 003006   300034 720105                    LXL0    28,AL,PR3
         2 003007   000000 636010                    EAQ     0,X0
         2 003010   000022 772000                    QRL     18
         2 003011   000006 402007                    MPY     6,DL
         2 003012   001212 236106                    LDQ     650,QL,PR0
         2 003013   000200 316003                    CANQ    128,DU
         2 003014   003021 601000 2                  TNZ     s:13685

     1112    13680    2             ((FAULT >= 1 AND FAULT <= %GD#MAXBRKNUM) AND
     1113    13681    2               PINCRW(ADDR(S_D.FIXCOM),
     1114    13682    2               S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.FIXCOM_INDEX(FAULT)*SIZEW(
             13682                        F$XCM))->F$XCM.SILENT = '0'B)
     1115    13683    2             THEN CALL DDR$REPORT(R_STOP);

  13683  2 003015   000046 630400 3                  EPPR0   38
         2 003016   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003017   000000 701000 xent               TSX1    DDR$REPORT
         2 003020   000000 011000                    NOP     0

     1116    13684                  /* Set up access to FPRG RU */
     1117    13685    2             CALL DFA$FPRG (FPRG_IC);

  13685  2 003021   200060 630500                    EPPR0   FPRG_IC,,AUTO
         2 003022   200300 450500                    STP0    LS+1,,AUTO
         2 003023   200300 630500                    EPPR0   LS+1,,AUTO
         2 003024   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003025   000000 701000 xent               TSX1    DFA$FPRG
         2 003026   000000 011000                    NOP     0

     1118    13686    2             IF GD$MSG.FNC = %GD#RSPTRACE

  13686  2 003027   000000 470400 xsym               LDP0    S_D_L6_MESSAGE$
         2 003030   000000 236100                    LDQ     0,,PR0
         2 003031   776000 376003                    ANQ     -1024,DU
         2 003032   110000 116003                    CMPQ    36864,DU
         2 003033   003046 601000 2                  TNZ     s:13693
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:180  

     1119    13687    3             THEN DO;

     1120    13688    3                  CALL DFA$TRACE_REPORT ALTRET(RESTORE_ALL);

  13688  2 003034   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 003035   000000 701000 xent               TSX1    DFA$TRACE_REPORT
         2 003036   004573 702000 2                  TSX2    RESTORE_ALL

     1121    13689    3                  IF NOT S_D.DEBUG_CMD

  13689  2 003037   000000 470400 xsym               LDP0    S_D$
         2 003040   004665 234100                    SZN     2485,,PR0
         2 003041   003045 604000 2                  TMI     s:13691

     1122    13690    3                  THEN CALL DFA$KILL_FPRG;

  13690  2 003042   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 003043   000000 701000 xent               TSX1    DFA$KILL_FPRG
         2 003044   000000 011000                    NOP     0

     1123    13691    3                  GOTO PROCESS_EVENT;

  13691  2 003045   002365 710000 2                  TRA     PROCESS_EVENT

     1124    13692    3                END;
     1125    13693    2             IF FAULT >= 1 AND FAULT <= %GD#MAXBRKNUM

  13693  2 003046   200015 235100                    LDA     FAULT,,AUTO
         2 003047   003250 600000 2                  TZE     s:13750
         2 003050   000025 115007                    CMPA    21,DL
         2 003051   003250 603000 2                  TRC     s:13750

     1126    13694    3             THEN DO;

     1127    13695                       /* Have hit an AT breakpoint */
     1128    13696    3                  S_D.IXFIX = S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.FIXCOM_INDEX(
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:181  
             13696                           FAULT);

  13696  2 003052   000000 471400 xsym               LDP1    S_D$
         2 003053   100102 473500                    LDP3    66,,PR1
         2 003054   300034 235105                    LDA     28,AL,PR3
         2 003055   100015 755100                    STA     13,,PR1

     1129    13697    3                  S_D.FAULTCMD$ = PINCRW(ADDR(S_D.FIXCOM), S_D.IXFIX*SIZEW(F$XCM));

  13697  2 003056   100015 236100                    LDQ     13,,PR1
         2 003057   000006 402003                    MPY     6,DU
         2 003060   001212 036003                    ADLQ    650,DU
         2 003061   000000 036000 xsym               ADLQ    S_D$
         2 003062   100004 756100                    STQ     4,,PR1

     1130    13698    3                  IF S_D.FAULTCMD$ -> F$XCM.SILENT

  13698  2 003063   100004 474500                    LDP4    4,,PR1
         2 003064   400000 236100                    LDQ     0,,PR4
         2 003065   000200 316003                    CANQ    128,DU
         2 003066   003072 600000 2                  TZE     s:13701

     1131    13699    3                  THEN S_D.SILENT = '1'B;

  13699  2 003067   400000 236003                    LDQ     -131072,DU
         2 003070   104735 756100                    STQ     2525,,PR1
         2 003071   003216 710000 2                  TRA     DO_ATTACH

     1132    13700    4                  ELSE DO;

     1133    13701    4                       IF S_D.FAULTCMD$ -> F$XCM.CMD ~= C_AT /* C_AT */ AND

  13701  2 003072   400000 236100                    LDQ     0,,PR4
         2 003073   777000 376003                    ANQ     -512,DU
         2 003074   002000 116003                    CMPQ    1024,DU
         2 003075   003120 600000 2                  TZE     s:13712
         2 003076   037000 116003                    CMPQ    15872,DU
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:182  
         2 003077   003120 600000 2                  TZE     s:13712
         2 003100   065000 116003                    CMPQ    27136,DU
         2 003101   003120 600000 2                  TZE     s:13712
         2 003102   040000 116003                    CMPQ    16384,DU
         2 003103   003120 600000 2                  TZE     s:13712

     1134    13702    4                          S_D.FAULTCMD$ -> F$XCM.CMD ~= C_OC /* C_OC */ AND
     1135    13703    4                          S_D.FAULTCMD$ -> F$XCM.CMD ~= C_ONCALLS /* C_ONCALLS */ AND
     1136    13704    4                          S_D.FAULTCMD$ -> F$XCM.CMD ~= C_OE /* C_OE */
     1137    13705    5                       THEN DO;

     1138    13706    5                            S_D.ERROR = E@BADBRKPNT;   /* E@BADBRKPNT */

  13706  2 003104   001016 235007                    LDA     526,DL
         2 003105   100013 755100                    STA     11,,PR1

     1139    13707    5                            CALL DDE$ERROR;

  13707  2 003106   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 003107   000000 701000 xent               TSX1    DDE$ERROR
         2 003110   000000 011000                    NOP     0

     1140    13708    5                            S_D.ERROR = E@DELBUG;       /* E@DELBUG */

  13708  2 003111   000766 235007                    LDA     502,DL
         2 003112   000000 470400 xsym               LDP0    S_D$
         2 003113   000013 755100                    STA     11,,PR0

     1141    13709    5                            CALL DDE$ERROR;

  13709  2 003114   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 003115   000000 701000 xent               TSX1    DDE$ERROR
         2 003116   000000 011000                    NOP     0

     1142    13710    5                            GOTO RESTORE_ALL;

  13710  2 003117   004573 710000 2                  TRA     RESTORE_ALL
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:183  

     1143    13711    5                          END;
     1144    13712    4                       IF S_D.FAULTCMD$ -> F$XCM.CMD = C_AT  /* C_AT */

  13712  2 003120   002000 116003                    CMPQ    1024,DU
         2 003121   003127 601000 2                  TNZ     s:13715

     1145    13713    4                       THEN CALL DFR$REPORT(%R_FPRG_AT);

  13713  2 003122   000013 630400 3                  EPPR0   11
         2 003123   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003124   000000 701000 xent               TSX1    DFR$REPORT
         2 003125   000000 011000                    NOP     0
         2 003126   003216 710000 2                  TRA     DO_ATTACH

     1146    13714    5                       ELSE DO;

     1147    13715    5                            IF S_D.FAULTCMD$ -> F$XCM.CMD = C_OC  /* C_OC */

  13715  2 003127   037000 116003                    CMPQ    15872,DU
         2 003130   003135 601000 2                  TNZ     s:13717

     1148    13716    5                            THEN CALL DFR$REPORT(%R_FPRG_ONCALL);

  13716  2 003131   000047 630400 3                  EPPR0   39
         2 003132   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003133   000000 701000 xent               TSX1    DFR$REPORT
         2 003134   000000 011000                    NOP     0

     1149    13717    5                            IF S_D.FAULTCMD$->F$XCM.CMD = C_ONCALLS  /* C_ONCALLS */

  13717  2 003135   000000 470400 xsym               LDP0    S_D$
         2 003136   000004 471500                    LDP1    4,,PR0
         2 003137   100000 236100                    LDQ     0,,PR1
         2 003140   777000 376003                    ANQ     -512,DU
         2 003141   065000 116003                    CMPQ    27136,DU
         2 003142   003216 601000 2                  TNZ     DO_ATTACH
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:184  

     1150    13718    6                            THEN DO;

     1151    13719    6                                IF S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.ONCALLS_X

  13719  2 003143   000102 473500                    LDP3    66,,PR0
         2 003144   300001 236100                    LDQ     1,,PR3
         2 003145   040000 316003                    CANQ    16384,DU
         2 003146   003212 600000 2                  TZE     REPORT_ONCALL

     1152    13720    7                                 THEN DO;

     1153    13721    7                                      CALL DDF$FIND_PEDEF(FPRG_IC, EDEF$) ALTRET(
             13721                                               NO_REPORT);

  13721  2 003147   200006 634500                    EPPR4   EDEF$,,AUTO
         2 003150   200301 454500                    STP4    LS+2,,AUTO
         2 003151   200060 631500                    EPPR1   FPRG_IC,,AUTO
         2 003152   200300 451500                    STP1    LS+1,,AUTO
         2 003153   200300 630500                    EPPR0   LS+1,,AUTO
         2 003154   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 003155   000000 701000 xent               TSX1    DDF$FIND_PEDEF
         2 003156   003206 702000 2                  TSX2    NO_REPORT

     1154    13722    7                                      IF ( EDEF$ -> B$EDEF.CST = %STD#

  13722  2 003157   200006 470500                    LDP0    EDEF$,,AUTO
         2 003160   000001 236100                    LDQ     1,,PR0
         2 003161   074000 316007                    CANQ    30720,DL
         2 003162   003177 600000 2                  TZE     s:13722+16
         2 003163   000001 236100                    LDQ     1,,PR0
         2 003164   074000 376007                    ANQ     30720,DL
         2 003165   014000 116007                    CMPQ    6144,DL
         2 003166   003177 600000 2                  TZE     s:13722+16
         2 003167   020000 116007                    CMPQ    8192,DL
         2 003170   003177 600000 2                  TZE     s:13722+16
         2 003171   024000 116007                    CMPQ    10240,DL
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:185  
         2 003172   003177 600000 2                  TZE     s:13722+16
         2 003173   040000 116007                    CMPQ    16384,DL
         2 003174   003177 600000 2                  TZE     s:13722+16
         2 003175   044000 116007                    CMPQ    18432,DL
         2 003176   003206 601000 2                  TNZ     NO_REPORT
         2 003177   000000 236100                    LDQ     0,,PR0
         2 003200   700000 316003                    CANQ    -32768,DU
         2 003201   003212 600000 2                  TZE     REPORT_ONCALL
         2 003202   000000 236100                    LDQ     0,,PR0
         2 003203   700000 376003                    ANQ     -32768,DU
         2 003204   300000 116003                    CMPQ    98304,DU
         2 003205   003212 600000 2                  TZE     REPORT_ONCALL

     1155    13723    7                                        OR EDEF$ -> B$EDEF.CST = %ASYNC#
     1156    13724    7                                        OR EDEF$ -> B$EDEF.CST = %FUNC#
     1157    13725    7                                        OR EDEF$ -> B$EDEF.CST = %XSTD#
     1158    13726    7                                        OR EDEF$ -> B$EDEF.CST = %XASYNC#
     1159    13727    7                                        OR EDEF$ -> B$EDEF.CST = %XFUNC# )
     1160    13728    7                                        AND ( EDEF$ -> B$EDEF.LFLAGS.SOURCE = %
             13728                                                 SOURCE_OBJECT#
     1161    13729    7                                        OR EDEF$ -> B$EDEF.LFLAGS.SOURCE = %
             13729                                                 SOURCE_ULIB# )
     1162    13730    7                                      THEN GOTO REPORT_ONCALL;
     1163    13731    7        NO_REPORT:                    CALL DFA$GO('0'B) ALTRET(RESTORE_ALL);

  13731  2 003206   000004 630400 3     NO_REPORT    EPPR0   4
         2 003207   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003210   000000 701000 xent               TSX1    DFA$GO
         2 003211   004573 702000 2                  TSX2    RESTORE_ALL

     1164    13732    7                                    END;

     1165    13733    6   REPORT_ONCALL:                CALL DFR$REPORT(%R_FPRG_ONCALL);

  13733  2 003212   000047 630400 3     REPORT_ONCA* EPPR0   39
         2 003213   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003214   000000 701000 xent               TSX1    DFR$REPORT
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:186  
         2 003215   000000 011000                    NOP     0

     1166    13734    6                               END;

     1167    13735    5                          END;

     1168    13736    4                     END;

     1169    13737    3   DO_ATTACH:
     1170    13738    3                  S_D.DO$ = PINCRW(S_D.VARCOM$, S_D.FAULTCMD$ -> F$XCM.FAI);

  13738  2 003216   000000 470400 xsym  DO_ATTACH    LDP0    S_D$
         2 003217   000004 471500                    LDP1    4,,PR0
         2 003220   100002 720100                    LXL0    2,,PR1
         2 003221   004622 473500                    LDP3    2450,,PR0
         2 003222   300000 634510                    EPPR4   0,X0,PR3
         2 003223   000031 454500                    STP4    25,,PR0

     1171    13739    3                  S_D.DO$->AT_FIRST.CURRENT_COUNT = S_D.DO$->AT_FIRST.BYPASS_COUNT;

  13739  2 003224   400004 235100                    LDA     4,,PR4
         2 003225   400005 755100                    STA     5,,PR4

     1172    13740    3                  IF S_D.DO$ -> AT_FIRST.ATT_OFFSET = 0

  13740  2 003226   000031 471500                    LDP1    25,,PR0
         2 003227   100007 220100                    LDX0    7,,PR1
         2 003230   003233 601000 2                  TNZ     s:13742

     1173    13741    3                  THEN S_D.DO$ = ADDR(NIL);

  13741  2 003231   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 003232   000031 756100                    STQ     25,,PR0

     1174    13742    3                  S_D.ENTRYCMD$ = S_D.FAULTCMD$;

  13742  2 003233   000004 236100                    LDQ     4,,PR0
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:187  
         2 003234   005203 756100                    STQ     2691,,PR0

     1175    13743    3                  REMEMBER USERGO1 IN S_D.REM_USERGO;

  13743  2 003235   005127 635000 2                  EAA     USERGO1
         2 003236   005232 452500                    STP2    2714,,PR0
         2 003237   005233 755100                    STA     2715,,PR0

     1176    13744    3                  CALL DDA$DOATTACH ALTRET (USERGO1);

  13744  2 003240   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 003241   000000 701000 xent               TSX1    DDA$DOATTACH
         2 003242   005127 702000 2                  TSX2    USERGO1

     1177    13745    3                  S_D.SILENT = '0'B;

  13745  2 003243   000000 470400 xsym               LDP0    S_D$
         2 003244   004735 450100                    STZ     2525,,PR0

     1178    13746    3                  S_D.FAULTCMD$ = ADDR(NIL);

  13746  2 003245   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 003246   000004 756100                    STQ     4,,PR0

     1179    13747    3                END;

  13747  2 003247   003370 710000 2                  TRA     s:13783

     1180    13748    3             ELSE DO;

     1181    13749                       /* Have gotten a trap */
     1182    13750    3                  IF S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.XDELTA AND

  13750  2 003250   000000 471400 xsym               LDP1    S_D$
         2 003251   100102 473500                    LDP3    66,,PR1
         2 003252   300001 236100                    LDQ     1,,PR3
         2 003253   002000 316003                    CANQ    1024,DU
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:188  
         2 003254   003273 600000 2                  TZE     s:13758
         2 003255   000000 115003                    CMPA    0,DU
         2 003256   003273 601000 2                  TNZ     s:13758

     1183    13751    3                    FAULT = 0
     1184    13752    4                  THEN DO;

     1185    13753    4                       IF S_D.STEP_L6

  13753  2 003257   105274 234100                    SZN     2748,,PR1
         2 003260   003266 605000 2                  TPL     s:13755

     1186    13754    4                       THEN CALL DFR$REPORT(%R_FPRG_STEP);

  13754  2 003261   000050 630400 3                  EPPR0   40
         2 003262   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003263   000000 701000 xent               TSX1    DFR$REPORT
         2 003264   000000 011000                    NOP     0
         2 003265   003370 710000 2                  TRA     s:13783

     1187    13755    4                       ELSE CALL DFR$REPORT(%R_XDELTA_BREAK);

  13755  2 003266   000051 630400 3                  EPPR0   41
         2 003267   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003270   000000 701000 xent               TSX1    DFR$REPORT
         2 003271   000000 011000                    NOP     0

     1188    13756    4                     END;

  13756  2 003272   003370 710000 2                  TRA     s:13783

     1189    13757    4                  ELSE DO;

     1190    13758    4                       S_D.FAULT = FAULT - (%GD#MAXBRKNUM + 1);

  13758  2 003273   000025 135007                    SBLA    21,DL
         2 003274   100030 755100                    STA     24,,PR1
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:189  

     1191    13759    4                       IF S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.XDELTA AND

  13759  2 003275   300001 236100                    LDQ     1,,PR3
         2 003276   002000 316003                    CANQ    1024,DU
         2 003277   003307 600000 2                  TZE     s:13763
         2 003300   200015 235100                    LDA     FAULT,,AUTO
         2 003301   003307 601000 2                  TNZ     s:13763

     1192    13760    4                         FAULT = 0
     1193    13761    4                       THEN CALL DFR$REPORT(%R_XDELTA_SCREECH);

  13761  2 003302   000052 630400 3                  EPPR0   42
         2 003303   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003304   000000 701000 xent               TSX1    DFR$REPORT
         2 003305   000000 011000                    NOP     0
         2 003306   003370 710000 2                  TRA     s:13783

     1194    13762    5                       ELSE DO;

     1195    13763    5                            IF S_D.STEP_L6

  13763  2 003307   105274 234100                    SZN     2748,,PR1
         2 003310   003316 605000 2                  TPL     s:13766

     1196    13764    5                            THEN CALL DFR$REPORT(%R_FPRG_STEP);

  13764  2 003311   000050 630400 3                  EPPR0   40
         2 003312   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003313   000000 701000 xent               TSX1    DFR$REPORT
         2 003314   000000 011000                    NOP     0
         2 003315   003370 710000 2                  TRA     s:13783

     1197    13765    6                            ELSE DO;

     1198    13766    6                                 IF S_D.FAULT = %G_FPRG_EXIT#

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:190  
  13766  2 003316   100030 235100                    LDA     24,,PR1
         2 003317   000057 115007                    CMPA    47,DL
         2 003320   003323 601000 2                  TNZ     s:13768

     1199    13767    6                                THEN S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.STATE =
             13767                                          %ATEXIT;

  13767  2 003321   000004 236003                    LDQ     4,DU
         2 003322   300001 552120                    STBQ    1,'20'O,PR3

     1200    13768    6                                 IF S_D.FAULT = %G_FPRG_EXIT# AND

  13768  2 003323   100030 235100                    LDA     24,,PR1
         2 003324   000057 115007                    CMPA    47,DL
         2 003325   003364 601000 2                  TNZ     s:13778
         2 003326   100102 473500                    LDP3    66,,PR1
         2 003327   300061 235100                    LDA     49,,PR3
         2 003330   300062 236100                    LDQ     50,,PR3
         2 003331   000034 773000                    LRL     28
         2 003332   000777 376007                    ANQ     511,DL
         2 003333   000000 116003                    CMPQ    0,DU
         2 003334   003364 600000 2                  TZE     s:13778

     1201    13769    6                                   S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.ONEXIT ~=
             13769                                            0
     1202    13770    7                                 THEN DO;

     1203    13771    7                                     FAULT = S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT
             13771                                               .ONEXIT;

  13771  2 003335   200015 756100                    STQ     FAULT,,AUTO

     1204    13772    7                                      S_D.IXFIX = S_D.CURRENT_FPRG_CONTEXT$ ->
             13772                                               FPRG$CONTEXT.FIXCOM_INDEX(FAULT);

  13772  2 003336   300034 235106                    LDA     28,QL,PR3
         2 003337   100015 755100                    STA     13,,PR1
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:191  

     1205    13773    7                                      S_D.FAULTCMD$ = PINCRW(ADDR(S_D.FIXCOM), S_D.
             13773                                               IXFIX*SIZEW(F$XCM));

  13773  2 003340   100015 236100                    LDQ     13,,PR1
         2 003341   000006 402003                    MPY     6,DU
         2 003342   001212 036003                    ADLQ    650,DU
         2 003343   000000 036000 xsym               ADLQ    S_D$
         2 003344   100004 756100                    STQ     4,,PR1

     1206    13774    7                                      S_D.OUTPUT = 'ON EXIT condition encountered,';

  13774  2 003345   040100 100400                    MLR     fill='040'O
         2 003346   000277 000036 0                  ADSC9   VLP_EOMTABLE+11          cn=0,n=30
         2 003347   105335 004000                    ADSC9   2781,,PR1                cn=0,n=2048

     1207    13775    7                                      CALL DDQ$WRITE(ADDR(S_D.OUTPUT), 31);

  13775  2 003350   000000 236000 xsym               LDQ     S_D$
         2 003351   005335 036003                    ADLQ    2781,DU
         2 003352   200300 756100                    STQ     LS+1,,AUTO
         2 003353   000033 236000 3                  LDQ     27
         2 003354   200303 756100                    STQ     LS+4,,AUTO
         2 003355   200300 633500                    EPPR3   LS+1,,AUTO
         2 003356   200302 453500                    STP3    LS+3,,AUTO
         2 003357   200302 630500                    EPPR0   LS+3,,AUTO
         2 003360   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 003361   000000 701000 xent               TSX1    DDQ$WRITE
         2 003362   000000 011000                    NOP     0

     1208    13776    7                                      GOTO DO_ATTACH;

  13776  2 003363   003216 710000 2                  TRA     DO_ATTACH

     1209    13777    7                                    END;
     1210    13778    6                                 CALL DFR$REPORT(%R_FPRG_TRAP);

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:192  
  13778  2 003364   000014 630400 3                  EPPR0   12
         2 003365   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003366   000000 701000 xent               TSX1    DFR$REPORT
         2 003367   000000 011000                    NOP     0

     1211    13779    6                               END;

     1212    13780    5                          END;

     1213    13781    4                     END;

     1214    13782    3                END;

     1215    13783    2             GOTO RESTORE_ALL;

  13783  2 003370   004573 710000 2                  TRA     RESTORE_ALL

  13773  2 003371                       USER_FAULT   null
     1216    13784    2           END;
     1217    13785        %EJECT;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:193  
     1218    13786
     1219    13787
     1220    13788
     1221    13789
     1222    13790
     1223    13791                                                /**/
     1224    13792                                      /* By this point, we have determined that entry
     1225    13793                                      was caused by some user fault, ie. DELTA did
     1226    13794                                      not cause it for breakpointing or tracing and
     1227    13795                                      the monitor is not reporting some special event
     1228    13796                                      for DELTA eg. M$LINK or M$RETRY.  This code
     1229    13797                                      is also entered if the IC or tag of a programmed
     1230    13798                                      fault (DERAIL or FAULT_TAG) did not match a
     1231    13799                                 breakpoint, or XEQ, STEP, TRACE TRANSFER, TRACE CALL,
     1232    13800                                 or EIS stop were not active.
     1233    13801
     1234    13802                                 This is also where XDELTA joins the mainstream.
     1235    13803
     1236    13804                                 For user DELTA only, the fault is converted to
     1237    13805                                 an index to the KEEP/TRAP/IGNORE arrays.  If
     1238    13806                                 the indexed bit is set on the KEEP list, the fault
     1239    13807                                 is reported, and we get a command.  If the fault
     1240    13808                                 is on the TRAP list, we setup to return control
     1241    13809                                 to the users handler.  If the fault is on the
     1242    13810                                 ignore list, the IC is adjust to avoid re-occurence
     1243    13811                                 of the fault, and we setup to return to the user.
     1244    13812
     1245    13813                                 XDELTA simply calls DDB$USERFAULT.  The fault is
     1246    13814                                 checked to see if it fits in the current XDELTA KEEP
     1247    13815                                 catagory (ALL, MON, SCREECH, NONE).  If it does not,
     1248    13816                                 DDB$USERFAULT altrets, and we setup for a return
     1249    13817                                 to the monitor fault handler with a code in
     1250    13818                                 a register saying 'XDELTA didn't want this one, but
     1251    13819                                 you might'.  If the fault is to be kept, DDB$USERFAULT
     1252    13820                                 will report the fault, and we goto scan. */
     1253    13821                                                /**/
     1254    13822    1   USER_FAULT: ;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:194  
     1255    13823    1        S_D.FAULTCMD$ = ADDR(NIL);

  13823  2 003371   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 003372   000000 470400 xsym               LDP0    S_D$
         2 003373   000004 756100                    STQ     4,,PR0

     1256    13824    1        CALL DDB$TTRESET;

  13824  2 003374   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 003375   000000 701000 xent               TSX1    DDB$TTRESET
         2 003376   000000 011000                    NOP     0

     1257    13825    1        IF D_XDELTA THEN GOTO CALL_FAULT;

  13825  2 003377   000000 234000 xsym               SZN     D_XDELTA
         2 003400   003564 604000 2                  TMI     CALL_FAULT

     1258    13826                                                /* Keep/trap/ignore check */
     1259    13827    1        IF S_D.X$EQ.ACTIVE THEN GOTO CALL_FAULT;
             13827                 /* Keep/trap/ignore don't count on xeq */

  13827  2 003401   000000 470400 xsym               LDP0    S_D$
         2 003402   004646 234100                    SZN     2470,,PR0
         2 003403   003564 604000 2                  TMI     CALL_FAULT

     1260    13828    1        S_D.SV.DELENT = 1;                 /* Entry due to user trap */

  13828  2 003404   000001 235007                    LDA     1,DL
         2 003405   000037 755100                    STA     31,,PR0

     1261    13829    1        IF ECC = %ECC_INT# AND SUBC = %SC_BYC# THEN GOTO CALL_FAULT;
             13829                 /* LET HIM TRAP BREAK, BUT DELTA ALWAYS GETS CNTL-Y DELTA. */

  13829  2 003406   200005 236100                    LDQ     ECC,,AUTO
         2 003407   000002 116007                    CMPQ    2,DL
         2 003410   003414 601000 2                  TNZ     s:13830
         2 003411   200025 235100                    LDA     SUBC,,AUTO
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:195  
         2 003412   000001 115007                    CMPA    1,DL
         2 003413   003564 600000 2                  TZE     CALL_FAULT

     1262    13830    1        IF ECC=%ECC_ERROR# THEN FAULT = 10+SUBC; /* Get index from fault code */

  13830  2 003414   000007 116007                    CMPQ    7,DL
         2 003415   003422 601000 2                  TNZ     s:13831

  13830  2 003416   200025 235100                    LDA     SUBC,,AUTO
         2 003417   000012 035007                    ADLA    10,DL
         2 003420   200015 755100                    STA     FAULT,,AUTO
         2 003421   003437 710000 2                  TRA     s:13834

     1263    13831    1        ELSE IF ECC = %ECC_PROG# THEN FAULT = 7+SUBC;

  13831  2 003422   000006 116007                    CMPQ    6,DL
         2 003423   003430 601000 2                  TNZ     s:13832

  13831  2 003424   200025 235100                    LDA     SUBC,,AUTO
         2 003425   000007 035007                    ADLA    7,DL
         2 003426   200015 755100                    STA     FAULT,,AUTO
         2 003427   003437 710000 2                  TRA     s:13834

     1264    13832    1             ELSE IF ECC=%ECC_ARITH# THEN FAULT = 5+SUBC;

  13832  2 003430   000005 116007                    CMPQ    5,DL
         2 003431   003436 601000 2                  TNZ     s:13833

  13832  2 003432   200025 235100                    LDA     SUBC,,AUTO
         2 003433   000005 035007                    ADLA    5,DL
         2 003434   200015 755100                    STA     FAULT,,AUTO
         2 003435   003437 710000 2                  TRA     s:13834

     1265    13833    1                  ELSE FAULT = ECC;

  13833  2 003436   200015 756100                    STQ     FAULT,,AUTO

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:196  
     1266    13834    2        IF S_D.TRAP.FLAG(FAULT) THEN DO;

  13834  2 003437   200015 235100                    LDA     FAULT,,AUTO
         2 003440   000000 066505                    CMPB    filb='0'B
         2 003441   004730 000001                    BDSC    2520,A,PR0               by=0,bit=0,n=1
         2 003442   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         2 003443   003507 600000 2                  TZE     s:13865

     1267    13835    2             IF ECC = %ECC_XCON#

  13835  2 003444   000003 116007                    CMPQ    3,DL
         2 003445   003462 601000 2                  TNZ     s:13854

     1268    13836    3             THEN DO;

     1269    13837        /*             IF UECCB$->B$ECCB.XCONF.PROG
     1270    13838                       THEN DO;          XCON in progress, this should never happen
     1271    13839                                              this should have been ECC=%ECC_EXCRTN#
     1272    13840                            S_D.ERROR = E@DELBUG;   E@DELBUG
     1273    13841                            CALL DDE$ERROR;    commented out per star 30293
     1274    13842                            CALL DUR$ECCRPT(ECCRPT_USER);
     1275    13843                            GOTO RESTORE_ALL;
     1276    13844                          END;
     1277    13845                       ELSE */
     1278    13846    3                       IF UECCB$->B$ECCBI.FLAGS(%ECC_XCON#) = '0'B

  13846  2 003446   000000 471400 xsym               LDP1    UECCB$
         2 003447   100004 236100                    LDQ     4,,PR1
         2 003450   040000 316003                    CANQ    16384,DU
         2 003451   003462 601000 2                  TNZ     s:13854

     1279    13847    4                       THEN DO;

     1280    13848    4                            S_D.SV.DELENT = 1; /* Entry due to user trap */

  13848  2 003452   000001 235007                    LDA     1,DL
         2 003453   000037 755100                    STA     31,,PR0
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:197  

     1281    13849    4                            S_D.ERROR = E@NO_TRAP_CONTROL; /*E@NO_TRAP_CONTROL*/

  13849  2 003454   000146 236007                    LDQ     102,DL
         2 003455   000013 756100                    STQ     11,,PR0

     1282    13850    4                            CALL DDE$ERROR;

  13850  2 003456   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 003457   000000 701000 xent               TSX1    DDE$ERROR
         2 003460   000000 011000                    NOP     0

     1283    13851    4                            GOTO CALL_FAULT;

  13851  2 003461   003564 710000 2                  TRA     CALL_FAULT

     1284    13852    4                          END;
     1285    13853    3                END;
     1286    13854    2             S_D.SAVEIC = S_D.TIC;

  13854  2 003462   000027 235100                    LDA     23,,PR0
         2 003463   000002 755100                    STA     2,,PR0

     1287    13855    2             TRAP = '1'B;                  /* Remember this if the drtn altrets */

  13855  2 003464   400000 236003                    LDQ     -131072,DU
         2 003465   200032 756100                    STQ     TRAP,,AUTO

     1288    13856    2             FPT$DRTN.V.SETECC# = '0'B;    /* Uses users ecc */

  13856  2 003466   000053 236000 3                  LDQ     43
         2 003467   200103 356100                    ANSQ    FPT$DRTN+11,,AUTO

     1289    13857    2             CALL DDB$EISRESET;

  13857  2 003470   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 003471   000000 701000 xent               TSX1    DDB$EISRESET
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:198  
         2 003472   000000 011000                    NOP     0

     1290    13858    3             IF S_D.S$TEP.ACTIVE THEN DO;

  13858  2 003473   000000 470400 xsym               LDP0    S_D$
         2 003474   005276 234100                    SZN     2750,,PR0
         2 003475   003504 605000 2                  TPL     s:13862

     1291    13859    3                  CALL DDB$STEPRESET;

  13859  2 003476   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 003477   000000 701000 xent               TSX1    DDB$STEPRESET
         2 003500   000000 011000                    NOP     0

     1292    13860    3                  S_D.S$TEP.ACTIVE = '1'B; /* Continue stepping thru fault */

  13860  2 003501   400000 236003                    LDQ     -131072,DU
         2 003502   000000 470400 xsym               LDP0    S_D$
         2 003503   005276 756100                    STQ     2750,,PR0

     1293    13861    3                END;

     1294    13862    2             S_D.GOIC = S_D.SAVEIC;

  13862  2 003504   000002 235100                    LDA     2,,PR0
         2 003505   000001 755100                    STA     1,,PR0

     1295    13863    2             GOTO USERGO0;

  13863  2 003506   005201 710000 2                  TRA     USERGO0

     1296    13864    2           END;
     1297    13865    2        ELSE IF S_D.IGNORE.FLAG(FAULT) THEN DO;

  13865  2 003507   000000 066505                    CMPB    filb='0'B
         2 003510   004731 000001                    BDSC    2521,A,PR0               by=0,bit=0,n=1
         2 003511   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:199  
         2 003512   003553 600000 2                  TZE     s:13875

     1298    13866    2                  S_D.SAVEIC = S_D.TIC;

  13866  2 003513   000027 235100                    LDA     23,,PR0
         2 003514   000002 755100                    STA     2,,PR0

     1299    13867    2                 IF ECC > %ECC_XCON# OR (ECC = %ECC_XCON# AND NOT B$TCB$->B$TCB.STK$->
             13867                           B$XCON.RNST.MABRT)

  13867  2 003515   000004 116007                    CMPQ    4,DL
         2 003516   003526 603000 2                  TRC     s:13869
         2 003517   000003 116007                    CMPQ    3,DL
         2 003520   003550 601000 2                  TNZ     s:13872
         2 003521   000000 471400 xsym               LDP1    B$TCB$
         2 003522   100001 473500                    LDP3    1,,PR1
         2 003523   300101 236100                    LDQ     65,,PR3
         2 003524   010000 316003                    CANQ    4096,DU
         2 003525   003550 601000 2                  TNZ     s:13872

     1300    13868    3                  THEN DO;  /* Update the ic or the fault will just happen again */

     1301    13869    3                       CALL DDB$INTERP(PINCRW(UIS$, S_D.SAVEIC), TYPE, LENGTH);

  13869  2 003526   000002 720100                    LXL0    2,,PR0
         2 003527   000000 636010                    EAQ     0,X0
         2 003530   000000 036000 xsym               ADLQ    UIS$
         2 003531   200300 756100                    STQ     LS+1,,AUTO
         2 003532   200020 631500                    EPPR1   LENGTH,,AUTO
         2 003533   200303 451500                    STP1    LS+4,,AUTO
         2 003534   200035 633500                    EPPR3   TYPE,,AUTO
         2 003535   200302 453500                    STP3    LS+3,,AUTO
         2 003536   200300 634500                    EPPR4   LS+1,,AUTO
         2 003537   200301 454500                    STP4    LS+2,,AUTO
         2 003540   200301 630500                    EPPR0   LS+2,,AUTO
         2 003541   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 003542   000000 701000 xent               TSX1    DDB$INTERP
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:200  
         2 003543   000000 011000                    NOP     0

     1302    13870    3                       S_D.SAVEIC = S_D.SAVEIC+LENGTH;

  13870  2 003544   000000 470400 xsym               LDP0    S_D$
         2 003545   000002 236100                    LDQ     2,,PR0
         2 003546   200020 036100                    ADLQ    LENGTH,,AUTO
         2 003547   000002 756100                    STQ     2,,PR0

     1303    13871    3                     END;

     1304    13872    2                  S_D.GOIC = S_D.SAVEIC;

  13872  2 003550   000002 235100                    LDA     2,,PR0
         2 003551   000001 755100                    STA     1,,PR0

     1305    13873    2                  GOTO USERGO0;

  13873  2 003552   005201 710000 2                  TRA     USERGO0

     1306    13874    2                END;
     1307    13875    2             ELSE IF NOT S_D.KEEP.FLAG(FAULT) THEN DO;
             13875                      /* If its not one of these we're in big trouble */

  13875  2 003553   000000 066505                    CMPB    filb='0'B
         2 003554   004727 000001                    BDSC    2519,A,PR0               by=0,bit=0,n=1
         2 003555   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         2 003556   003564 601000 2                  TNZ     CALL_FAULT

     1308    13876    2                       S_D.ERROR = E@DELBUG; /*E@DELBUG*/

  13876  2 003557   000766 235007                    LDA     502,DL
         2 003560   000013 755100                    STA     11,,PR0

     1309    13877    2                       CALL DDE$ERROR;

  13877  2 003561   000002 631400 xsym               EPPR1   B_VECTNIL+2
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:201  
         2 003562   000000 701000 xent               TSX1    DDE$ERROR
         2 003563   000000 011000                    NOP     0

     1310    13878    2                     END;

  13875  2 003564                       CALL_FAULT   null
     1311    13879    1   CALL_FAULT: ;
     1312    13880    1         IF FAULT = %ECC_EVENT# THEN S_D.CAN_I_DO_BREAK = '0'B;

  13880  2 003564   200015 235100                    LDA     FAULT,,AUTO
         2 003565   000001 115007                    CMPA    1,DL
         2 003566   003571 601000 2                  TNZ     s:13881

  13880  2 003567   000000 470400 xsym               LDP0    S_D$
         2 003570   006736 450100                    STZ     3550,,PR0

     1313    13881    1        CALL DDB$USERFAULT ALTRET(USERGO);

  13881  2 003571   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 003572   000000 701000 xent               TSX1    DDB$USERFAULT
         2 003573   005156 702000 2                  TSX2    USERGO

     1314    13882                                           /* If BREAK key hit and there are
     1315    13883                                              FPRGS, stop all FPRGS  */
     1316    13884    1        IF ECC = %ECC_INT# AND SUBC = %SC_BRK#

  13884  2 003574   200005 235100                    LDA     ECC,,AUTO
         2 003575   000002 115007                    CMPA    2,DL
         2 003576   003616 601000 2                  TNZ     s:13897
         2 003577   200025 236100                    LDQ     SUBC,,AUTO
         2 003600   003616 601000 2                  TNZ     s:13897

     1317    13885    2        THEN DO;

     1318    13886    2   BRK:
     1319    13887    2             IF S_D.FPRG_CONTEXT$ ~= ADDR(NIL)

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:202  
  13887  2 003601   000000 470400 xsym  BRK          LDP0    S_D$
         2 003602   000076 236100                    LDQ     62,,PR0
         2 003603   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 003604   003616 600000 2                  TZE     s:13897

     1320    13888    3             THEN DO;

     1321    13889    3                  CALL DFA$STOP_FPRGS

  13889  2 003605   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 003606   000000 701000 xent               TSX1    DFA$STOP_FPRGS
         2 003607   003611 702000 2                  TSX2    s:13891
         2 003610   003614 710000 2                  TRA     s:13894

     1322    13890    4                    WHENALTRETURN DO;

     1323    13891    4                       S_D.BREAK = '0'B;

  13891  2 003611   000000 470400 xsym               LDP0    S_D$
         2 003612   000026 450100                    STZ     22,,PR0

     1324    13892    4                       GOTO SCAN_COMMAND;

  13892  2 003613   004634 710000 2                  TRA     SCAN_COMMAND

     1325    13893    4                     END;
     1326    13894    3                  S_D.BREAK = '0'B;

  13894  2 003614   000000 470400 xsym               LDP0    S_D$
         2 003615   000026 450100                    STZ     22,,PR0

     1327    13895    3                END;

     1328    13896    2           END;

     1329    13897    1        GOTO SCAN_COMMAND;

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:203  
  13897  2 003616   004634 710000 2                  TRA     SCAN_COMMAND

  13897  2 003617                       FAULTAG      null
     1330    13898        %EJECT;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:204  
     1331    13899                                                /**/
     1332    13900                                           /* The FAULT_TAG fault is used by DELTA to
     1333    13901                                           implement TRACE CALLS and ON CALLS.  If the
     1334    13902                                           trace flag is set, we assume all fault_tags
     1335    13903                                           were set by use.  Note that if the user has
     1336    13904                                           fault_tags on some of his instructions, DELTA
     1337    13905                                           will get confused.  If the trace flag is not
     1338    13906                                           set, we goto user_fault. */
     1339    13907                                                /**/
     1340    13908    1   FAULTAG: ;
     1341    13909    1        IF S_D.TR$INFO.ACTIVE = '0'B THEN GOTO USER_FAULT;

  13909  2 003617   000000 470400 xsym               LDP0    S_D$
         2 003620   004630 234100                    SZN     2456,,PR0
         2 003621   003371 605000 2                  TPL     USER_FAULT

     1342    13910    1        IF S_D.ONCALLS ~= 0

  13910  2 003622   004745 235100                    LDA     2533,,PR0
         2 003623   003710 600000 2                  TZE     s:13932

     1343    13911    2        THEN DO;                           /* Its ON CALLS */

     1344    13912    2             S_D.IXFIX = S_D.ONCALLS;

  13912  2 003624   000015 755100                    STA     13,,PR0

     1345    13913    2             IF S_D.TIC ~= S_D.SL THEN S_D.SAVEIC = S_D.TIC;

  13913  2 003625   000027 236100                    LDQ     23,,PR0
         2 003626   003631 604000 2                  TMI     s:13913+4
         2 003627   000010 116100                    CMPQ    8,,PR0
         2 003630   003632 600000 2                  TZE     s:13914

  13913  2 003631   000002 756100                    STQ     2,,PR0

     1346    13914    2             S_D.GOIC = S_D.SAVEIC;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:205  

  13914  2 003632   000002 235100                    LDA     2,,PR0
         2 003633   000001 755100                    STA     1,,PR0

     1347    13915    2             IF S_D.S$TEP.ACTIVE

  13915  2 003634   005276 234100                    SZN     2750,,PR0
         2 003635   003644 605000 2                  TPL     s:13920

     1348    13916    3             THEN DO;

     1349    13917    3                  CALL DDB$STEPRESET;

  13917  2 003636   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 003637   000000 701000 xent               TSX1    DDB$STEPRESET
         2 003640   000000 011000                    NOP     0

     1350    13918    3                  S_D.S$TEP.ACTIVE = '1'B;

  13918  2 003641   400000 236003                    LDQ     -131072,DU
         2 003642   000000 470400 xsym               LDP0    S_D$
         2 003643   005276 756100                    STQ     2750,,PR0

     1351    13919    3                END;

     1352    13920    2             CALL DDB$RESTORE;

  13920  2 003644   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 003645   000000 701000 xent               TSX1    DDB$RESTORE
         2 003646   000000 011000                    NOP     0

     1353    13921    2             S_D.FAULTCMD$ = PINCRW(ADDR(S_D.FIXCOM), S_D.IXFIX*SIZEW(F$XCM));

  13921  2 003647   000000 470400 xsym               LDP0    S_D$
         2 003650   000015 236100                    LDQ     13,,PR0
         2 003651   000006 402003                    MPY     6,DU
         2 003652   001212 036003                    ADLQ    650,DU
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:206  
         2 003653   000000 036000 xsym               ADLQ    S_D$
         2 003654   000004 756100                    STQ     4,,PR0

     1354    13922    2             CALL DDA$ON ALTRET(USERGO2);  /* Check IF spec */

  13922  2 003655   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 003656   000000 701000 xent               TSX1    DDA$ON
         2 003657   005112 702000 2                  TSX2    USERGO2

     1355    13923    2             IF S_D.FAULTCMD$->F$XCM.SILENT THEN S_D.SILENT = '1'B;

  13923  2 003660   000000 470400 xsym               LDP0    S_D$
         2 003661   000004 471500                    LDP1    4,,PR0
         2 003662   100000 236100                    LDQ     0,,PR1
         2 003663   000200 316003                    CANQ    128,DU
         2 003664   003670 600000 2                  TZE     s:13924

  13923  2 003665   400000 236003                    LDQ     -131072,DU
         2 003666   004735 756100                    STQ     2525,,PR0
         2 003667   003674 710000 2                  TRA     s:13925

     1356    13924    2             ELSE CALL DDR$REPORT (R_ONCALL);

  13924  2 003670   000014 630400 3                  EPPR0   12
         2 003671   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003672   000000 701000 xent               TSX1    DDR$REPORT
         2 003673   000000 011000                    NOP     0

     1357    13925    2             S_D.ENTRYCMD$ = S_D.FAULTCMD$;

  13925  2 003674   000000 470400 xsym               LDP0    S_D$
         2 003675   000004 236100                    LDQ     4,,PR0
         2 003676   005203 756100                    STQ     2691,,PR0

     1358    13926    2             REMEMBER USERGO IN S_D.REM_USERGO;

  13926  2 003677   005156 635000 2                  EAA     USERGO
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:207  
         2 003700   005232 452500                    STP2    2714,,PR0
         2 003701   005233 755100                    STA     2715,,PR0

     1359    13927    2             CALL DDA$DOATTACH ALTRET(USERGO);

  13927  2 003702   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 003703   000000 701000 xent               TSX1    DDA$DOATTACH
         2 003704   005156 702000 2                  TSX2    USERGO

     1360    13928    2             S_D.SILENT = '0'B;

  13928  2 003705   000000 470400 xsym               LDP0    S_D$
         2 003706   004735 450100                    STZ     2525,,PR0

     1361    13929    2             GOTO SCAN_COMMAND;

  13929  2 003707   004634 710000 2                  TRA     SCAN_COMMAND

     1362    13930    2           END;
     1363    13931    2        ELSE DO;                           /* TRACE CALLS */

     1364    13932    2             S_D.FAULTCMD$ = ADDR(TR_FAKE_FRAME);

  13932  2 003710   200034 631500                    EPPR1   TR_FAKE_FRAME,,AUTO
         2 003711   000004 451500                    STP1    4,,PR0

     1365    13933    2             ADDR(TR_FAKE_FRAME)->F$XCM.CMD = C_TC; /*C_TC*/

  13933  2 003712   056000 236003                    LDQ     23552,DU
         2 003713   200034 552140                    STBQ    TR_FAKE_FRAME,'40'O,AUTO

     1366    13934    2             IF S_D.TIC ~= S_D.SL THEN S_D.SAVEIC = S_D.TIC;
             13934                      /* Report the correct ic when breakpoint is set on called proc */

  13934  2 003714   000027 236100                    LDQ     23,,PR0
         2 003715   003720 604000 2                  TMI     s:13934+4
         2 003716   000010 116100                    CMPQ    8,,PR0
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:208  
         2 003717   003721 600000 2                  TZE     s:13935

  13934  2 003720   000002 756100                    STQ     2,,PR0

     1367    13935    2             CALL DDR$REPORT(R_TRACECALLS);

  13935  2 003721   000017 630400 3                  EPPR0   15
         2 003722   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003723   000000 701000 xent               TSX1    DDR$REPORT
         2 003724   000000 011000                    NOP     0

     1368    13936    2             CALL DDB$RESTORE;

  13936  2 003725   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 003726   000000 701000 xent               TSX1    DDB$RESTORE
         2 003727   000000 011000                    NOP     0

     1369    13937    2             S_D.DO$ = ADDR(NIL);

  13937  2 003730   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 003731   000000 470400 xsym               LDP0    S_D$
         2 003732   000031 756100                    STQ     25,,PR0

     1370    13938    2             CALL DDA$GO   ALTRET(SCAN_COMMAND);

  13938  2 003733   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 003734   000000 701000 xent               TSX1    DDA$GO
         2 003735   004634 702000 2                  TSX2    SCAN_COMMAND

     1371    13939    2             GOTO USERGO;

  13939  2 003736   005156 710000 2                  TRA     USERGO

  13937  2 003737                       DERAIL       null
     1372    13940    2           END;
     1373    13941        %EJECT;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:209  
     1374    13942                                      /* The following routines handle DERAIL faults.
     1375    13943                                 A DERAIL fault was DELTA caused if a DRL instruction
     1376    13944                                 was planted in the user's code to:
     1377    13945
     1378    13946                            1. Interrupt execution on transfer instructions if trace
     1379    13947                            transfer is active.
     1380    13948
     1381    13949                            2. Interrupt execution after a step.
     1382    13950
     1383    13951                            3. Interrupt execution after an xeq.
     1384    13952
     1385    13953                            4. Interrupt execution at name in on call name.
     1386    13954
     1387    13955                       5. Allow replant of the at derail after the original instruction
     1388    13956                       has been executed in its original place in the user's program,
     1389    13957                       (eis-stopper).
     1390    13958
     1391    13959                       6. Interrupt execution at an instruction breakpoint. (at)
     1392    13960
     1393    13961                       The tag field of the DRL indicates which of the
     1394    13962                       above conditions is true.  A table of information
     1395    13963                       exists for XEQ, STEP, EIS, and TRACE containing
     1396    13964                       the IC where DELTA planted the derail.  This
     1397    13965                       IC is check against the current IC to protect against
     1398    13966                       DRL instructions in the users code.  For the
     1399    13967                       AT and ONCALL DRL, the Y field contains the
     1400    13968                       id of the associated stored command.  Part of
     1401    13969                       the stored command information is the IC where
     1402    13970                       the derail was planted.
     1403    13971
     1404    13972                       If the IC does not match, we goto user_fault. */
     1405    13973                                                /**/
     1406    13974    1   DERAIL: ;
     1407    13975    1        S_D.IXFIX = S_D.FAULTINS$->HOST_INSTR.Y;

  13975  2 003737   000000 470400 xsym               LDP0    S_D$
         2 003740   000003 471500                    LDP1    3,,PR0
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:210  
         2 003741   100000 236100                    LDQ     0,,PR1
         2 003742   000022 772000                    QRL     18
         2 003743   000015 756100                    STQ     13,,PR0

     1408    13976    1        IF S_D.IXFIX = BITBIN( '777777'O )

  13976  2 003744   777777 116007                    CMPQ    -1,DL
         2 003745   003753 601000 2                  TNZ     s:13979
         2 003746   000000 234000 xsym               SZN     D_XDELTA
         2 003747   003753 605000 2                  TPL     s:13979
         2 003750   000000 473400 xsym               LDP3    USE$
         2 003751   300001 235100                    LDA     1,,PR3
         2 003752   006200 600000 2                  TZE     DXA$KEYENT

     1409    13977    1          AND D_XDELTA AND U$SE.TYPE = USE_MON /*USE_MON*/
     1410    13978    1        THEN GOTO DXA$KEYENT;
     1411    13979    1        TAGG = S_D.FAULTINS$->HOST_INSTR.TAGG;

  13979  2 003753   100000 236100                    LDQ     0,,PR1
         2 003754   000077 376007                    ANQ     63,DL
         2 003755   200031 756100                    STQ     TAGG,,AUTO

     1412    13980    1        IF TAGG = DRL_TT OR TAGG = DRL_STT THEN GOTO DRLTT;

  13980  2 003756   000004 116007                    CMPQ    4,DL
         2 003757   004014 600000 2                  TZE     DRLTT
         2 003760   000010 116007                    CMPQ    8,DL
         2 003761   004014 600000 2                  TZE     DRLTT

     1413    13981    1        IF S_D.T$T.ACTIVE THEN CALL DDB$TTRESET;

  13981  2 003762   004707 234100                    SZN     2503,,PR0
         2 003763   003767 605000 2                  TPL     s:13982

  13981  2 003764   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 003765   000000 701000 xent               TSX1    DDB$TTRESET
         2 003766   000000 011000                    NOP     0
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:211  

     1414    13982    1        IF TAGG = DRL_STEP THEN GOTO DRLSTEP;

  13982  2 003767   200031 235100                    LDA     TAGG,,AUTO
         2 003770   000005 115007                    CMPA    5,DL
         2 003771   004050 600000 2                  TZE     DRLSTEP

     1415    13983    1        IF TAGG = DRL_XEQ THEN GOTO DRLXEQ;

  13983  2 003772   000006 115007                    CMPA    6,DL
         2 003773   004172 600000 2                  TZE     DRLXEQ

     1416    13984    1        IF TAGG = DRL_WHEN THEN GOTO DRLWHEN;

  13984  2 003774   000007 115007                    CMPA    7,DL
         2 003775   004403 600000 2                  TZE     DRLWHEN

     1417    13985    1        IF S_D.IXFIX > S_D.FIXLAST THEN GOTO USER_FAULT;

  13985  2 003776   000000 470400 xsym               LDP0    S_D$
         2 003777   000015 236100                    LDQ     13,,PR0
         2 004000   000047 116100                    CMPQ    39,,PR0
         2 004001   003371 605400 2                  TPNZ    USER_FAULT

     1418    13986    1        S_D.FAULTCMD$ = PINCRW(ADDR(S_D.FIXCOM), S_D.IXFIX*SIZEW(F$XCM));

  13986  2 004002   000006 402003                    MPY     6,DU
         2 004003   001212 036003                    ADLQ    650,DU
         2 004004   000000 036000 xsym               ADLQ    S_D$
         2 004005   000004 756100                    STQ     4,,PR0

     1419    13987    1        IF TAGG = DRL_EIS THEN GOTO DRLEIS;

  13987  2 004006   200031 235100                    LDA     TAGG,,AUTO
         2 004007   000002 115007                    CMPA    2,DL
         2 004010   004220 600000 2                  TZE     DRLEIS

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:212  
     1420    13988    1        IF TAGG = DRL_AT THEN GOTO DRLAT;

  13988  2 004011   000001 115007                    CMPA    1,DL
         2 004012   004276 600000 2                  TZE     DRLAT

     1421    13989    1        GOTO USER_FAULT;

  13989  2 004013   003371 710000 2                  TRA     USER_FAULT

  13988  2 004014                       DRLTT        null
     1422    13990                                                /**/
     1423    13991                            /*  If this derail is the trace transfer stopper, the saved
     1424    13992                            instruction is restored.  If it will transfer, DDB$SET_TT is
     1425    13993                       called to report this transfer, and set up for the next one. */
     1426    13994                                                /**/
     1427    13995    1   DRLTT: ;
     1428    13996    1        IF NOT S_D.T$T.ACTIVE OR NOT (S_D.TIC = S_D.T$T.RETLOC OR S_D.TIC = S_D.T$T.
             13996                 SAVELOC)

  13996  2 004014   004707 234100                    SZN     2503,,PR0
         2 004015   003371 605000 2                  TPL     USER_FAULT
         2 004016   004714 236100                    LDQ     2508,,PR0
         2 004017   777777 376007                    ANQ     -1,DL
         2 004020   000027 116100                    CMPQ    23,,PR0
         2 004021   004026 600000 2                  TZE     s:13998
         2 004022   004714 236100                    LDQ     2508,,PR0
         2 004023   000022 772000                    QRL     18
         2 004024   000027 116100                    CMPQ    23,,PR0
         2 004025   003371 601000 2                  TNZ     USER_FAULT

     1429    13997    1        THEN GOTO USER_FAULT;
     1430    13998    1        IF TAGG = DRL_STT THEN S_D.T$T.SHARED = '1'B;

  13998  2 004026   200031 235100                    LDA     TAGG,,AUTO
         2 004027   000010 115007                    CMPA    8,DL
         2 004030   004034 601000 2                  TNZ     s:13999

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:213  
  13998  2 004031   400000 236003                    LDQ     -131072,DU
         2 004032   004712 756100                    STQ     2506,,PR0
         2 004033   004035 710000 2                  TRA     s:14000

     1431    13999    1        ELSE S_D.T$T.SHARED = '0'B;

  13999  2 004034   004712 450100                    STZ     2506,,PR0

     1432    14000    1        CALL DDB$TTRESET;                  /* Restore saved instruction */

  14000  2 004035   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 004036   000000 701000 xent               TSX1    DDB$TTRESET
         2 004037   000000 011000                    NOP     0

     1433    14001    1        S_D.SAVEIC = S_D.TIC;

  14001  2 004040   000000 470400 xsym               LDP0    S_D$
         2 004041   000027 235100                    LDA     23,,PR0
         2 004042   000002 755100                    STA     2,,PR0

     1434    14002    1        S_D.GOIC = S_D.SAVEIC;

  14002  2 004043   000001 755100                    STA     1,,PR0

     1435    14003    1        CALL DDB$SET_TT ALTRET(RESTORE_ALL);
             14003                 /* Set up for next stop, report this one if appropriate */

  14003  2 004044   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 004045   000000 701000 xent               TSX1    DDB$SET_TT
         2 004046   004573 702000 2                  TSX2    RESTORE_ALL

     1436    14004    1        GOTO USERGO0;

  14004  2 004047   005201 710000 2                  TRA     USERGO0

  14002  2 004050                       DRLSTEP      null
     1437    14005                                                /**/
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:214  
     1438    14006        /*
     1439    14007             Drlstep verifies that the derail is the step stopper.  The
     1440    14008             derailed instruction is restored.  The user's program is restored,
     1441    14009             location is reported and the step table is set inactive.
     1442    14010             Control goes to the scanner. */
     1443    14011                                                /**/
     1444    14012    1   DRLSTEP: ;
     1445    14013    1        IF S_D.EWSQ# ~= S_D.S$TEP.EWSQ OR NOT (S_D.S$TEP.LOC = S_D.TIC OR

  14013  2 004050   000000 470400 xsym               LDP0    S_D$
         2 004051   000011 236100                    LDQ     9,,PR0
         2 004052   003371 604000 2                  TMI     USER_FAULT
         2 004053   005304 116100                    CMPQ    2756,,PR0
         2 004054   003371 601000 2                  TNZ     USER_FAULT
         2 004055   005300 236100                    LDQ     2752,,PR0
         2 004056   004061 604000 2                  TMI     DRLSTEP+9
         2 004057   000027 116100                    CMPQ    23,,PR0
         2 004060   004067 600000 2                  TZE     s:14016
         2 004061   005277 234100                    SZN     2751,,PR0
         2 004062   003371 605000 2                  TPL     USER_FAULT
         2 004063   005301 236100                    LDQ     2753,,PR0
         2 004064   003371 604000 2                  TMI     USER_FAULT
         2 004065   000027 116100                    CMPQ    23,,PR0
         2 004066   003371 601000 2                  TNZ     USER_FAULT

     1446    14014    1          (S_D.S$TEP.ALT AND S_D.S$TEP.ALTLOC = S_D.TIC))
     1447    14015    1        THEN GOTO USER_FAULT;
     1448    14016    1        CALL DDB$STEPRESET ALTRET(USER_FAULT);

  14016  2 004067   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 004070   000000 701000 xent               TSX1    DDB$STEPRESET
         2 004071   003371 702000 2                  TSX2    USER_FAULT

     1449    14017    1        CALL DDB$RESTORE;

  14017  2 004072   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 004073   000000 701000 xent               TSX1    DDB$RESTORE
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:215  
         2 004074   000000 011000                    NOP     0

     1450    14018    1        S_D.SAVEIC = S_D.TIC;

  14018  2 004075   000000 470400 xsym               LDP0    S_D$
         2 004076   000027 235100                    LDA     23,,PR0
         2 004077   000002 755100                    STA     2,,PR0

     1451    14019    1        SAVEIC = S_D.SAVEIC;

  14019  2 004100   200023 755100                    STA     SAVEIC,,AUTO

     1452    14020    1        IF S_D.BYPASS AND D_SYMBOLS

  14020  2 004101   001032 234100                    SZN     538,,PR0
         2 004102   004144 605000 2                  TPL     s:14030
         2 004103   000000 234000 xsym               SZN     D_SYMBOLS
         2 004104   004144 605000 2                  TPL     s:14030

     1453    14021    2        THEN DO;

     1454    14022    2             IF S_D.QSCH.OK

  14022  2 004105   000733 234100                    SZN     475,,PR0
         2 004106   004116 605000 2                  TPL     s:14024

     1455    14023    2             THEN EDEF$ = PINCRW( S_D.EDEF$, SIZEW(B$EDEF) * S_D.QSCH.PEDEF# );

  14023  2 004107   000734 720100                    LXL0    476,,PR0
         2 004110   001042 471500                    LDP1    546,,PR0
         2 004111   000000 636010                    EAQ     0,X0
         2 004112   000021 772000                    QRL     17
         2 004113   100000 633506                    EPPR3   0,QL,PR1
         2 004114   200006 453500                    STP3    EDEF$,,AUTO
         2 004115   004126 710000 2                  TRA     s:14025

     1456    14024    2             ELSE CALL DDF$FIND_PEDEF( SAVEIC, EDEF$ ) ALTRET( STEP_MORE );
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:216  

  14024  2 004116   200006 631500                    EPPR1   EDEF$,,AUTO
         2 004117   200301 451500                    STP1    LS+2,,AUTO
         2 004120   200023 633500                    EPPR3   SAVEIC,,AUTO
         2 004121   200300 453500                    STP3    LS+1,,AUTO
         2 004122   200300 630500                    EPPR0   LS+1,,AUTO
         2 004123   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 004124   000000 701000 xent               TSX1    DDF$FIND_PEDEF
         2 004125   004162 702000 2                  TSX2    STEP_MORE

     1457    14025    2             IF S_D.QSCH.OK

  14025  2 004126   000000 470400 xsym               LDP0    S_D$
         2 004127   000733 234100                    SZN     475,,PR0
         2 004130   004137 605000 2                  TPL     s:14027

     1458    14026    2             THEN CALL DDS$ES_INQ (SAVEIC) ALTRET (STEP_MORE);

  14026  2 004131   200023 631500                    EPPR1   SAVEIC,,AUTO
         2 004132   200300 451500                    STP1    LS+1,,AUTO
         2 004133   200300 630500                    EPPR0   LS+1,,AUTO
         2 004134   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004135   000000 701000 xent               TSX1    DDS$ES_INQ
         2 004136   004162 702000 2                  TSX2    STEP_MORE

     1459    14027    2             IF EDEF$ -> B$EDEF.CST = %NSTD#

  14027  2 004137   200006 470500                    LDP0    EDEF$,,AUTO
         2 004140   000001 236100                    LDQ     1,,PR0
         2 004141   074000 376007                    ANQ     30720,DL
         2 004142   004000 116007                    CMPQ    2048,DL
         2 004143   004162 600000 2                  TZE     STEP_MORE

     1460    14028    2             THEN GOTO STEP_MORE;          /* Don't report if non-standard */
     1461    14029    2           END;

     1462    14030    1        CALL DDA$STEP_DECR ALTRET(STEP_MORE);
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:217  

  14030  2 004144   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 004145   000000 701000 xent               TSX1    DDA$STEP_DECR
         2 004146   004162 702000 2                  TSX2    STEP_MORE

     1463    14031    1        S_D.S$TEP.ONE_FLAG = '0'B;

  14031  2 004147   000000 470400 xsym               LDP0    S_D$
         2 004150   000053 236000 3                  LDQ     43
         2 004151   005277 356100                    ANSQ    2751,,PR0

     1464    14032    1        CALL DDR$REPORT(R_STEP);

  14032  2 004152   000050 630400 3                  EPPR0   40
         2 004153   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004154   000000 701000 xent               TSX1    DDR$REPORT
         2 004155   000000 011000                    NOP     0

     1465    14033    1        S_D.STEP = '1'B;

  14033  2 004156   400000 236003                    LDQ     -131072,DU
         2 004157   000000 470400 xsym               LDP0    S_D$
         2 004160   000722 756100                    STQ     466,,PR0

     1466    14034    1        GOTO SCAN_COMMAND;

  14034  2 004161   004634 710000 2                  TRA     SCAN_COMMAND

     1467    14035    1   STEP_MORE: CALL DDA$STEP_MORE ALTRET(CANT_STEP);

  14035  2 004162   000002 631400 xsym  STEP_MORE    EPPR1   B_VECTNIL+2
         2 004163   000000 701000 xent               TSX1    DDA$STEP_MORE
         2 004164   004166 702000 2                  TSX2    CANT_STEP

     1468    14036    1        GOTO USERGO;

  14036  2 004165   005156 710000 2                  TRA     USERGO
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:218  

     1469    14037    1   CANT_STEP:
     1470    14038    1        CALL DDE$ERROR;

  14038  2 004166   000002 631400 xsym  CANT_STEP    EPPR1   B_VECTNIL+2
         2 004167   000000 701000 xent               TSX1    DDE$ERROR
         2 004170   000000 011000                    NOP     0

     1471    14039    1        GOTO SCAN_COMMAND;

  14039  2 004171   004634 710000 2                  TRA     SCAN_COMMAND

  14033  2 004172                       DRLXEQ       null
     1472    14040        /*D*  Drlxeq verifies that the derail is the xeq stopper.  The user's
     1473    14041              program is restored.  S_D.SAVEIC is not updated.
     1474    14042              Points to the special location.  Control goes to the scanner.
     1475    14043              */
     1476    14044    1   DRLXEQ: ;
     1477    14045    1        IF S_D.X$EQ.LOC ~=S_D.TIC THEN GOTO USER_FAULT;

  14045  2 004172   000000 470400 xsym               LDP0    S_D$
         2 004173   004647 236100                    LDQ     2471,,PR0
         2 004174   003371 604000 2                  TMI     USER_FAULT
         2 004175   000027 116100                    CMPQ    23,,PR0
         2 004176   003371 601000 2                  TNZ     USER_FAULT

     1478    14046    1        CALL DDB$XEQRESET ALTRET(USER_FAULT);

  14046  2 004177   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 004200   000000 701000 xent               TSX1    DDB$XEQRESET
         2 004201   003371 702000 2                  TSX2    USER_FAULT

     1479    14047    1        CALL DDS$ES_INQ (S_D.SAVEIC);
             14047                 /* Establish schema based on users ic, not on special location */

  14047  2 004202   000000 236000 xsym               LDQ     S_D$
         2 004203   000002 036003                    ADLQ    2,DU
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:219  
         2 004204   200300 756100                    STQ     LS+1,,AUTO
         2 004205   200300 630500                    EPPR0   LS+1,,AUTO
         2 004206   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004207   000000 701000 xent               TSX1    DDS$ES_INQ
         2 004210   000000 011000                    NOP     0

     1480    14048    1        CALL DDS$SET_Q2C;

  14048  2 004211   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 004212   000000 701000 xent               TSX1    DDS$SET_Q2C
         2 004213   000000 011000                    NOP     0

     1481    14049    1        CALL DDB$RESTORE;

  14049  2 004214   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 004215   000000 701000 xent               TSX1    DDB$RESTORE
         2 004216   000000 011000                    NOP     0

     1482    14050    1        GOTO SCAN_COMMAND;

  14050  2 004217   004634 710000 2                  TRA     SCAN_COMMAND

  14045  2 004220                       DRLEIS       null
     1483    14051                                                /**/
     1484    14052                            /* Drleis verifies that the derail is the eis stopper.  It's
     1485    14053                            called an eis stopper because it's used after multi-word
     1486    14054                            eis instructions.  Plantone is called to plant the at derail
     1487    14055                            in the position specified by the at command (which started
     1488    14056                       this whole eis-stopper business).  DDB$EISRESTORE is called to
     1489    14057                       restore the instruction to the location of the EIS-STOPPER...
     1490    14058                       That instruction having been saved in the eis information
     1491    14059                       table (E$IS).  The eis-stopper is set inactive, S_D.SAVEIC is
     1492    14060                       updated.  Goic is set from S_D.SAVEIC and control passes back
     1493    14061                       to the user's program. */
     1494    14062                                                /**/
     1495    14063    1   DRLEIS: ;
     1496    14064    1        IF NOT (S_D.E$IS.LOC = S_D.TIC OR
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:220  

  14064  2 004220   004660 236100                    LDQ     2480,,PR0
         2 004221   004224 604000 2                  TMI     DRLEIS+4
         2 004222   000027 116100                    CMPQ    23,,PR0
         2 004223   004233 600000 2                  TZE     s:14067
         2 004224   004662 235100                    LDA     2482,,PR0
         2 004225   000001 115007                    CMPA    1,DL
         2 004226   003371 601000 2                  TNZ     USER_FAULT
         2 004227   000001 036007                    ADLQ    1,DL
         2 004230   003371 604000 2                  TMI     USER_FAULT
         2 004231   000027 116100                    CMPQ    23,,PR0
         2 004232   003371 601000 2                  TNZ     USER_FAULT

     1497    14065    1          (S_D.E$IS.C.JUNK(0) = 1 AND S_D.E$IS.LOC+1 = S_D.TIC))
     1498    14066    1        THEN GOTO USER_FAULT;
     1499    14067    1        CALL DDB$EISRESET ALTRET(USER_FAULT);

  14067  2 004233   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 004234   000000 701000 xent               TSX1    DDB$EISRESET
         2 004235   003371 702000 2                  TSX2    USER_FAULT

     1500    14068    1        FATT$ = PINCRW(S_D.VARCOM$,S_D.FAULTCMD$->F$XCM.FAI);

  14068  2 004236   000000 470400 xsym               LDP0    S_D$
         2 004237   000004 471500                    LDP1    4,,PR0
         2 004240   100002 720100                    LXL0    2,,PR1
         2 004241   004622 473500                    LDP3    2450,,PR0
         2 004242   300000 634510                    EPPR4   0,X0,PR3
         2 004243   200014 454500                    STP4    FATT$,,AUTO

     1501    14069    1        SAVEINS$ = ADDR(FATT$->AT_FIRST.ORIG_INSTR);

  14069  2 004244   200014 236100                    LDQ     FATT$,,AUTO
         2 004245   000002 036003                    ADLQ    2,DU
         2 004246   200024 756100                    STQ     SAVEINS$,,AUTO

     1502    14070    1        DRL$ = PINCRW(UIS$,(S_D.FAULTCMD$->F$XCM.CDF));
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:221  

  14070  2 004247   000004 471500                    LDP1    4,,PR0
         2 004250   100001 720100                    LXL0    1,,PR1
         2 004251   000000 636010                    EAQ     0,X0
         2 004252   000000 036000 xsym               ADLQ    UIS$
         2 004253   200004 756100                    STQ     DRL$,,AUTO

     1503    14071    1        CALL DDB$PLANTONE(DRL$,S_D.IXFIX,DRL_AT,SAVEINS$);

  14071  2 004254   200024 631500                    EPPR1   SAVEINS$,,AUTO
         2 004255   200303 451500                    STP1    LS+4,,AUTO
         2 004256   000013 236000 3                  LDQ     11
         2 004257   200302 756100                    STQ     LS+3,,AUTO
         2 004260   000000 236000 xsym               LDQ     S_D$
         2 004261   000015 036003                    ADLQ    13,DU
         2 004262   200301 756100                    STQ     LS+2,,AUTO
         2 004263   200004 635500                    EPPR5   DRL$,,AUTO
         2 004264   200300 455500                    STP5    LS+1,,AUTO
         2 004265   200300 630500                    EPPR0   LS+1,,AUTO
         2 004266   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 004267   000000 701000 xent               TSX1    DDB$PLANTONE
         2 004270   000000 011000                    NOP     0

     1504    14072    1        S_D.SAVEIC = S_D.TIC;

  14072  2 004271   000000 470400 xsym               LDP0    S_D$
         2 004272   000027 235100                    LDA     23,,PR0
         2 004273   000002 755100                    STA     2,,PR0

     1505    14073    1        S_D.GOIC = S_D.SAVEIC;

  14073  2 004274   000001 755100                    STA     1,,PR0

     1506    14074    1        GOTO USERGO;

  14074  2 004275   005156 710000 2                  TRA     USERGO

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:222  
  14073  2 004276                       DRLAT        null
     1507    14075                                                /**/
     1508    14076        /*
     1509    14077             Drlat verifies that the derail corresponds to a stored 'AT' or 'ON CALL name'
     1510    14078             command.  S_D.SAVEIC        is updated, the user's program is restored.
     1511    14079             The breakpoint is reported.  Attachments to the at are
     1512    14080             performed.  At attached goto will pass control to usergo.
     1513    14081             Otherwise, control passes to the scanner. */
     1514    14082                                                /**/
     1515    14083    1   DRLAT: ;
     1516    14084    1        IF S_D.FAULTCMD$->F$XCM.CMD ~= C_OC

  14084  2 004276   000004 471500                    LDP1    4,,PR0
         2 004277   100000 236100                    LDQ     0,,PR1
         2 004300   777000 376003                    ANQ     -512,DU
         2 004301   037000 116003                    CMPQ    15872,DU
         2 004302   004305 600000 2                  TZE     s:14086
         2 004303   002000 116003                    CMPQ    1024,DU
         2 004304   003371 601000 2                  TNZ     USER_FAULT

     1517    14085    1          AND S_D.FAULTCMD$->F$XCM.CMD ~= C_AT THEN GOTO USER_FAULT;
             14085                   /*Check for at or oncall cmd */
     1518    14086    1        IF S_D.FAULTCMD$->F$XCM.CDF ~= S_D.TIC THEN GOTO USER_FAULT;
             14086                 /* Check ic match */

  14086  2 004305   100001 236100                    LDQ     1,,PR1
         2 004306   003371 604000 2                  TMI     USER_FAULT
         2 004307   000027 116100                    CMPQ    23,,PR0
         2 004310   003371 601000 2                  TNZ     USER_FAULT

     1519    14087    1        S_D.SAVEIC = S_D.TIC;

  14087  2 004311   000027 235100                    LDA     23,,PR0
         2 004312   000002 755100                    STA     2,,PR0

     1520    14088    2        IF S_D.S$TEP.ACTIVE THEN DO;

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:223  
  14088  2 004313   005276 234100                    SZN     2750,,PR0
         2 004314   004323 605000 2                  TPL     s:14092

     1521    14089    2             CALL DDB$STEPRESET ALTRET(USER_FAULT);

  14089  2 004315   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 004316   000000 701000 xent               TSX1    DDB$STEPRESET
         2 004317   003371 702000 2                  TSX2    USER_FAULT

     1522    14090    2             S_D.S$TEP.ACTIVE = '1'B;      /* Step interrupted by breakpoint */

  14090  2 004320   400000 236003                    LDQ     -131072,DU
         2 004321   000000 470400 xsym               LDP0    S_D$
         2 004322   005276 756100                    STQ     2750,,PR0

     1523    14091    2           END;

     1524    14092    1        CALL DDB$RESTORE;

  14092  2 004323   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 004324   000000 701000 xent               TSX1    DDB$RESTORE
         2 004325   000000 011000                    NOP     0

     1525    14093    1        CALL DDA$AT ALTRET(USERGO2);

  14093  2 004326   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 004327   000000 701000 xent               TSX1    DDA$AT
         2 004330   005112 702000 2                  TSX2    USERGO2

     1526    14094    1        S_D.DID_ATTACH = '1'B;

  14094  2 004331   400000 236003                    LDQ     -131072,DU
         2 004332   000000 470400 xsym               LDP0    S_D$
         2 004333   004674 756100                    STQ     2492,,PR0

     1527    14095    1        IF NOT S_D.FAULTCMD$->F$XCM.SILENT THEN

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:224  
  14095  2 004334   000004 471500                    LDP1    4,,PR0
         2 004335   100000 236100                    LDQ     0,,PR1
         2 004336   000200 316003                    CANQ    128,DU
         2 004337   004356 601000 2                  TNZ     s:14099

     1528    14096    1             IF S_D.FAULTCMD$->F$XCM.CMD = C_AT /* C_AT */

  14096  2 004340   100000 236100                    LDQ     0,,PR1
         2 004341   777000 376003                    ANQ     -512,DU
         2 004342   002000 116003                    CMPQ    1024,DU
         2 004343   004351 601000 2                  TNZ     s:14098

     1529    14097    1             THEN CALL DDR$REPORT(R_AT);

  14097  2 004344   000013 630400 3                  EPPR0   11
         2 004345   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004346   000000 701000 xent               TSX1    DDR$REPORT
         2 004347   000000 011000                    NOP     0
         2 004350   004360 710000 2                  TRA     s:14101

     1530    14098    1             ELSE CALL DDR$REPORT(R_ONCALL);

  14098  2 004351   000014 630400 3                  EPPR0   12
         2 004352   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004353   000000 701000 xent               TSX1    DDR$REPORT
         2 004354   000000 011000                    NOP     0
         2 004355   004360 710000 2                  TRA     s:14101

     1531    14099    1        ELSE S_D.SILENT = '1'B;

  14099  2 004356   400000 236003                    LDQ     -131072,DU
         2 004357   004735 756100                    STQ     2525,,PR0

     1532    14100                                                /* Reset the at count                 */
     1533    14101    1        FATT$ = PINCRW(S_D.VARCOM$,S_D.FAULTCMD$->F$XCM.FAI);

  14101  2 004360   000000 470400 xsym               LDP0    S_D$
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:225  
         2 004361   000004 471500                    LDP1    4,,PR0
         2 004362   100002 720100                    LXL0    2,,PR1
         2 004363   004622 473500                    LDP3    2450,,PR0
         2 004364   300000 634510                    EPPR4   0,X0,PR3
         2 004365   200014 454500                    STP4    FATT$,,AUTO

     1534    14102    1        FATT$->AT_FIRST.CURRENT_COUNT = FATT$->AT_FIRST.BYPASS_COUNT;

  14102  2 004366   400004 235100                    LDA     4,,PR4
         2 004367   400005 755100                    STA     5,,PR4

     1535    14103    1        S_D.ENTRYCMD$ = S_D.FAULTCMD$;

  14103  2 004370   000004 236100                    LDQ     4,,PR0
         2 004371   005203 756100                    STQ     2691,,PR0

     1536    14104    1        REMEMBER USERGO IN S_D.REM_USERGO;

  14104  2 004372   005156 635000 2                  EAA     USERGO
         2 004373   005232 452500                    STP2    2714,,PR0
         2 004374   005233 755100                    STA     2715,,PR0

     1537    14105    1        CALL DDA$DOATTACH ALTRET (USERGO);

  14105  2 004375   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 004376   000000 701000 xent               TSX1    DDA$DOATTACH
         2 004377   005156 702000 2                  TSX2    USERGO

     1538    14106    1        S_D.SILENT = '0'B;

  14106  2 004400   000000 470400 xsym               LDP0    S_D$
         2 004401   004735 450100                    STZ     2525,,PR0

     1539    14107    1        GOTO SCAN_COMMAND;

  14107  2 004402   004634 710000 2                  TRA     SCAN_COMMAND

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:226  
     1540    14108    1   DRLWHEN:
     1541    14109    1        IF S_D.TIC ~= S_D.WHEN_IC THEN GOTO USER_FAULT;

  14109  2 004403   000000 470400 xsym  DRLWHEN      LDP0    S_D$
         2 004404   000027 236100                    LDQ     23,,PR0
         2 004405   003371 604000 2                  TMI     USER_FAULT
         2 004406   005316 116100                    CMPQ    2766,,PR0
         2 004407   003371 601000 2                  TNZ     USER_FAULT

     1542    14110    1   WHENPMME:
     1543    14111    1        CALL DUA$WHENIN ALTRET(WHENAGAIN);

  14111  2 004410   000002 631400 xsym  WHENPMME     EPPR1   B_VECTNIL+2
         2 004411   000000 701000 xent               TSX1    DUA$WHENIN
         2 004412   004565 702000 2                  TSX2    WHENAGAIN

     1544    14112    1        IF ECC = %ECC_DBRK# THEN S_D.SAVEIC = S_D.TIC;

  14112  2 004413   200005 235100                    LDA     ECC,,AUTO
         2 004414   000141 115007                    CMPA    97,DL
         2 004415   004421 601000 2                  TNZ     s:14115

  14112  2 004416   000000 470400 xsym               LDP0    S_D$
         2 004417   000027 235100                    LDA     23,,PR0
         2 004420   000002 755100                    STA     2,,PR0

     1545    14113                                                /* DUA$WHENIN does all the work */
     1546    14114                                           /* We get to here if a breakpoint was hit */
     1547    14115    1        TEMP_FLAG = '0'B;

  14115  2 004421   200033 450100                    STZ     TEMP_FLAG,,AUTO

     1548    14116    1        IF S_D.WHEN_ACTIVE

  14116  2 004422   000000 470400 xsym               LDP0    S_D$
         2 004423   005320 234100                    SZN     2768,,PR0
         2 004424   004430 605000 2                  TPL     s:14118
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:227  

     1549    14117    1        THEN CALL DDB$WHENRESET;

  14117  2 004425   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 004426   000000 701000 xent               TSX1    DDB$WHENRESET
         2 004427   000000 011000                    NOP     0

     1550    14118    1        IF S_D.E$IS.ACTIVE

  14118  2 004430   000000 470400 xsym               LDP0    S_D$
         2 004431   004657 234100                    SZN     2479,,PR0
         2 004432   004436 605000 2                  TPL     s:14120

     1551    14119    1        THEN CALL DDB$EISRESET;

  14119  2 004433   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 004434   000000 701000 xent               TSX1    DDB$EISRESET
         2 004435   000000 011000                    NOP     0

     1552    14120    1        IF S_D.S$TEP.ACTIVE

  14120  2 004436   000000 470400 xsym               LDP0    S_D$
         2 004437   005276 234100                    SZN     2750,,PR0
         2 004440   004447 605000 2                  TPL     s:14125

     1553    14121    2        THEN DO;

     1554    14122    2             CALL DDB$STEPRESET;

  14122  2 004441   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 004442   000000 701000 xent               TSX1    DDB$STEPRESET
         2 004443   000000 011000                    NOP     0

     1555    14123    2             S_D.S$TEP.ACTIVE = '1'B;

  14123  2 004444   400000 236003                    LDQ     -131072,DU
         2 004445   000000 470400 xsym               LDP0    S_D$
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:228  
         2 004446   005276 756100                    STQ     2750,,PR0

     1556    14124    2           END;

     1557    14125    1        IF S_D.X$EQ.ACTIVE

  14125  2 004447   004646 234100                    SZN     2470,,PR0
         2 004450   004456 605000 2                  TPL     s:14130

     1558    14126    2        THEN DO;

     1559    14127    2             TEMP_FLAG = '1'B;

  14127  2 004451   400000 236003                    LDQ     -131072,DU
         2 004452   200033 756100                    STQ     TEMP_FLAG,,AUTO

     1560    14128    2             CALL DDB$XEQRESET;

  14128  2 004453   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 004454   000000 701000 xent               TSX1    DDB$XEQRESET
         2 004455   000000 011000                    NOP     0

     1561    14129    2           END;

     1562    14130    1        CALL DDB$RESTORE;

  14130  2 004456   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 004457   000000 701000 xent               TSX1    DDB$RESTORE
         2 004460   000000 011000                    NOP     0

     1563    14131    1        CALL DUA$WHEN ALTRET(USERGO2);

  14131  2 004461   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 004462   000000 701000 xent               TSX1    DUA$WHEN
         2 004463   005112 702000 2                  TSX2    USERGO2

     1564    14132    1        IF NOT S_D.FAULTCMD$->F$XCM.SILENT
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:229  

  14132  2 004464   000000 470400 xsym               LDP0    S_D$
         2 004465   000004 471500                    LDP1    4,,PR0
         2 004466   100000 236100                    LDQ     0,,PR1
         2 004467   000200 316003                    CANQ    128,DU
         2 004470   004524 601000 2                  TNZ     s:14137

     1565    14133    1        THEN IF TEMP_FLAG THEN CALL DDR$REPORT (R_WHENXEQ);

  14133  2 004471   200033 234100                    SZN     TEMP_FLAG,,AUTO
         2 004472   004500 605000 2                  TPL     s:14134

  14133  2 004473   000055 630400 3                  EPPR0   45
         2 004474   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004475   000000 701000 xent               TSX1    DDR$REPORT
         2 004476   000000 011000                    NOP     0
         2 004477   004526 710000 2                  TRA     s:14139

     1566    14134    1             ELSE IF ECC = %ECC_DBRK# THEN CALL DDR$REPORT(R_WHENPMME);

  14134  2 004500   200005 235100                    LDA     ECC,,AUTO
         2 004501   000141 115007                    CMPA    97,DL
         2 004502   004510 601000 2                  TNZ     s:14135

  14134  2 004503   000057 630400 3                  EPPR0   47
         2 004504   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004505   000000 701000 xent               TSX1    DDR$REPORT
         2 004506   000000 011000                    NOP     0
         2 004507   004526 710000 2                  TRA     s:14139

     1567    14135    1                  ELSE IF S_D.WHEN_ASL THEN CALL DDR$REPORT(R_WHENASL);

  14135  2 004510   005005 234100                    SZN     2565,,PR0
         2 004511   004517 605000 2                  TPL     s:14136

  14135  2 004512   000061 630400 3                  EPPR0   49
         2 004513   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:230  
         2 004514   000000 701000 xent               TSX1    DDR$REPORT
         2 004515   000000 011000                    NOP     0
         2 004516   004526 710000 2                  TRA     s:14139

     1568    14136    1                       ELSE CALL DDR$REPORT (R_WHEN);

  14136  2 004517   000047 630400 3                  EPPR0   39
         2 004520   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004521   000000 701000 xent               TSX1    DDR$REPORT
         2 004522   000000 011000                    NOP     0
         2 004523   004526 710000 2                  TRA     s:14139

     1569    14137    1        ELSE S_D.SILENT = '1'B;

  14137  2 004524   400000 236003                    LDQ     -131072,DU
         2 004525   004735 756100                    STQ     2525,,PR0

     1570    14138                                                /* Reset WHEN count */
     1571    14139    1        FATT$ = PINCRW(S_D.VARCOM$, S_D.FAULTCMD$->F$XCM.FAI);

  14139  2 004526   000000 470400 xsym               LDP0    S_D$
         2 004527   000004 471500                    LDP1    4,,PR0
         2 004530   100002 720100                    LXL0    2,,PR1
         2 004531   004622 473500                    LDP3    2450,,PR0
         2 004532   300000 634510                    EPPR4   0,X0,PR3
         2 004533   200014 454500                    STP4    FATT$,,AUTO

     1572    14140    1        FATT$->WHEN_FIRST.CURRENT_COUNT = FATT$->WHEN_FIRST.BYPASS_COUNT;

  14140  2 004534   400004 235100                    LDA     4,,PR4
         2 004535   400005 755100                    STA     5,,PR4

     1573    14141    1        IF S_D.TIC = S_D.SL+1

  14141  2 004536   000010 236100                    LDQ     8,,PR0
         2 004537   000001 036007                    ADLQ    1,DL
         2 004540   004550 604000 2                  TMI     s:14143
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:231  
         2 004541   000027 116100                    CMPQ    23,,PR0
         2 004542   004550 601000 2                  TNZ     s:14143

     1574    14142    1        THEN S_D.SAVEIC = S_D.FAULTINS$->HOST_INSTR.Y;

  14142  2 004543   000003 471500                    LDP1    3,,PR0
         2 004544   100000 236100                    LDQ     0,,PR1
         2 004545   000022 772000                    QRL     18
         2 004546   000002 756100                    STQ     2,,PR0
         2 004547   004552 710000 2                  TRA     s:14144

     1575    14143    1        ELSE S_D.SAVEIC = S_D.TIC;

  14143  2 004550   000027 235100                    LDA     23,,PR0
         2 004551   000002 755100                    STA     2,,PR0

     1576    14144    1        S_D.ENTRYCMD$ = S_D.FAULTCMD$;

  14144  2 004552   000004 236100                    LDQ     4,,PR0
         2 004553   005203 756100                    STQ     2691,,PR0

     1577    14145    1        REMEMBER USERGO IN S_D.REM_USERGO;

  14145  2 004554   005156 635000 2                  EAA     USERGO
         2 004555   005232 452500                    STP2    2714,,PR0
         2 004556   005233 755100                    STA     2715,,PR0

     1578    14146    1        CALL DDA$DOATTACH ALTRET (USERGO);

  14146  2 004557   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 004560   000000 701000 xent               TSX1    DDA$DOATTACH
         2 004561   005156 702000 2                  TSX2    USERGO

     1579    14147    1        S_D.SILENT = '0'B;

  14147  2 004562   000000 470400 xsym               LDP0    S_D$
         2 004563   004735 450100                    STZ     2525,,PR0
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:232  

     1580    14148    1        GOTO SCAN_COMMAND;

  14148  2 004564   004634 710000 2                  TRA     SCAN_COMMAND

     1581    14149    1   WHENAGAIN:
     1582    14150    1        CALL DDB$WHENRESET;                /* Restore current instruction */

  14150  2 004565   000002 631400 xsym  WHENAGAIN    EPPR1   B_VECTNIL+2
         2 004566   000000 701000 xent               TSX1    DDB$WHENRESET
         2 004567   000000 011000                    NOP     0

     1583    14151    1        FPT$DRTN.V.DBRK# = '1'B;           /* Remember we're still looking */

  14151  2 004570   004000 236003                    LDQ     2048,DU
         2 004571   200103 256100                    ORSQ    FPT$DRTN+11,,AUTO

     1584    14152    1        GOTO USERGO0;

  14152  2 004572   005201 710000 2                  TRA     USERGO0

  14151  2 004573                       RESTORE_ALL  null
     1585    14153    1   RESTORE_ALL: ;
     1586    14154                                                /* MUST be in this order */
     1587    14155    1        IF S_D.WHEN_ACTIVE THEN CALL DDB$WHENRESET;

  14155  2 004573   000000 470400 xsym               LDP0    S_D$
         2 004574   005320 234100                    SZN     2768,,PR0
         2 004575   004601 605000 2                  TPL     s:14156

  14155  2 004576   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 004577   000000 701000 xent               TSX1    DDB$WHENRESET
         2 004600   000000 011000                    NOP     0

     1588    14156    1        IF S_D.T$T.ACTIVE THEN CALL DDB$TTRESET;

  14156  2 004601   000000 470400 xsym               LDP0    S_D$
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:233  
         2 004602   004707 234100                    SZN     2503,,PR0
         2 004603   004607 605000 2                  TPL     s:14157

  14156  2 004604   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 004605   000000 701000 xent               TSX1    DDB$TTRESET
         2 004606   000000 011000                    NOP     0

     1589    14157    1        IF S_D.E$IS.ACTIVE THEN CALL DDB$EISRESET;

  14157  2 004607   000000 470400 xsym               LDP0    S_D$
         2 004610   004657 234100                    SZN     2479,,PR0
         2 004611   004615 605000 2                  TPL     s:14158

  14157  2 004612   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 004613   000000 701000 xent               TSX1    DDB$EISRESET
         2 004614   000000 011000                    NOP     0

     1590    14158    1        IF S_D.S$TEP.ACTIVE THEN CALL DDB$STEPRESET;

  14158  2 004615   000000 470400 xsym               LDP0    S_D$
         2 004616   005276 234100                    SZN     2750,,PR0
         2 004617   004623 605000 2                  TPL     s:14159

  14158  2 004620   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 004621   000000 701000 xent               TSX1    DDB$STEPRESET
         2 004622   000000 011000                    NOP     0

     1591    14159    1        IF S_D.X$EQ.ACTIVE THEN CALL DDB$XEQRESET;

  14159  2 004623   000000 470400 xsym               LDP0    S_D$
         2 004624   004646 234100                    SZN     2470,,PR0
         2 004625   004631 605000 2                  TPL     s:14160

  14159  2 004626   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 004627   000000 701000 xent               TSX1    DDB$XEQRESET
         2 004630   000000 011000                    NOP     0

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:234  
     1592    14160    1        CALL DDB$RESTORE;

  14160  2 004631   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 004632   000000 701000 xent               TSX1    DDB$RESTORE
         2 004633   000000 011000                    NOP     0

  14159  2 004634                       SCAN_COMMAND null
     1593    14161    1   SCAN_COMMAND: ;
     1594    14162    1        IF ALIB_SAID_GOBACK

  14162  2 004634   200003 234100                    SZN     ALIB_SAID_GOBACK,,AUTO
         2 004635   004727 605000 2                  TPL     s:14175

     1595    14163    2        THEN DO;

     1596    14164    2             CALL DUA$ALIB(ALIB_RET);

  14164  2 004636   000014 630400 3                  EPPR0   12
         2 004637   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004640   000000 701000 xent               TSX1    DUA$ALIB
         2 004641   000000 011000                    NOP     0

     1597    14165    3             IF S_D.S$TEP.ACTIVE OR S_D.S$TEP.ALT THEN DO;

  14165  2 004642   000000 470400 xsym               LDP0    S_D$
         2 004643   005276 234100                    SZN     2750,,PR0
         2 004644   004647 604000 2                  TMI     s:14166
         2 004645   005277 234100                    SZN     2751,,PR0
         2 004646   004726 605000 2                  TPL     s:14173

     1598    14166    3                CALL DDA$GO ALTRET (SCAN_COMMAND);

  14166  2 004647   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 004650   000000 701000 xent               TSX1    DDA$GO
         2 004651   004634 702000 2                  TSX2    SCAN_COMMAND

     1599    14167    3               CALL DDB$PLANTONE (PINCRW(UIS$,S_D.S$TEP.LOC),T_OTHER,DRL_STEP,ADDR(S_D
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:235  
             14167                         .S$TEP.SAVED));

  14167  2 004652   000000 470400 xsym               LDP0    S_D$
         2 004653   005300 720100                    LXL0    2752,,PR0
         2 004654   000000 636010                    EAQ     0,X0
         2 004655   000000 036000 xsym               ADLQ    UIS$
         2 004656   200300 756100                    STQ     LS+1,,AUTO
         2 004657   000000 236000 xsym               LDQ     S_D$
         2 004660   005302 036003                    ADLQ    2754,DU
         2 004661   200301 756100                    STQ     LS+2,,AUTO
         2 004662   200301 631500                    EPPR1   LS+2,,AUTO
         2 004663   200305 451500                    STP1    LS+6,,AUTO
         2 004664   000017 236000 3                  LDQ     15
         2 004665   200304 756100                    STQ     LS+5,,AUTO
         2 004666   200303 756100                    STQ     LS+4,,AUTO
         2 004667   200300 633500                    EPPR3   LS+1,,AUTO
         2 004670   200302 453500                    STP3    LS+3,,AUTO
         2 004671   200302 630500                    EPPR0   LS+3,,AUTO
         2 004672   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 004673   000000 701000 xent               TSX1    DDB$PLANTONE
         2 004674   000000 011000                    NOP     0

     1600    14168    3                IF S_D.S$TEP.ALT THEN

  14168  2 004675   000000 470400 xsym               LDP0    S_D$
         2 004676   005277 234100                    SZN     2751,,PR0
         2 004677   004722 605000 2                  TPL     s:14170

     1601    14169    3                   CALL DDB$PLANTONE (PINCRW(UIS$,S_D.S$TEP.ALTLOC),T_OTHER,DRL_STEP,
             14169                            ADDR(S_D.S$TEP.ALTSAVED));

  14169  2 004700   005301 720100                    LXL0    2753,,PR0
         2 004701   000000 636010                    EAQ     0,X0
         2 004702   000000 036000 xsym               ADLQ    UIS$
         2 004703   200300 756100                    STQ     LS+1,,AUTO
         2 004704   000000 236000 xsym               LDQ     S_D$
         2 004705   005303 036003                    ADLQ    2755,DU
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:236  
         2 004706   200301 756100                    STQ     LS+2,,AUTO
         2 004707   200301 631500                    EPPR1   LS+2,,AUTO
         2 004710   200305 451500                    STP1    LS+6,,AUTO
         2 004711   000017 236000 3                  LDQ     15
         2 004712   200304 756100                    STQ     LS+5,,AUTO
         2 004713   200303 756100                    STQ     LS+4,,AUTO
         2 004714   200300 633500                    EPPR3   LS+1,,AUTO
         2 004715   200302 453500                    STP3    LS+3,,AUTO
         2 004716   200302 630500                    EPPR0   LS+3,,AUTO
         2 004717   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 004720   000000 701000 xent               TSX1    DDB$PLANTONE
         2 004721   000000 011000                    NOP     0

     1602    14170    3                S_D.DO$ = ADDR(NIL);

  14170  2 004722   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 004723   000000 470400 xsym               LDP0    S_D$
         2 004724   000031 756100                    STQ     25,,PR0

     1603    14171    3                GOTO USERGO1;

  14171  2 004725   005127 710000 2                  TRA     USERGO1

     1604    14172    3                END;
     1605    14173    2             GOTO USERGO2;

  14173  2 004726   005112 710000 2                  TRA     USERGO2

     1606    14174    2           END;
     1607    14175    1        IF S_D.AFD#

  14175  2 004727   000000 470400 xsym               LDP0    S_D$
         2 004730   006717 234100                    SZN     3535,,PR0
         2 004731   004745 605000 2                  TPL     s:14183

     1608    14176    2        THEN DO;

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:237  
     1609    14177    2             CALL DFA$GET_FPRG_DCB (DCBNO);

  14177  2 004732   200057 631500                    EPPR1   DCBNO,,AUTO
         2 004733   200300 451500                    STP1    LS+1,,AUTO
         2 004734   200300 630500                    EPPR0   LS+1,,AUTO
         2 004735   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 004736   000000 701000 xent               TSX1    DFA$GET_FPRG_DCB
         2 004737   000000 011000                    NOP     0

     1610    14178    2             OPDCBNO = S_D.OPDCBNO;

  14178  2 004740   000000 470400 xsym               LDP0    S_D$
         2 004741   006720 235100                    LDA     3536,,PR0
         2 004742   200064 755100                    STA     OPDCBNO,,AUTO

     1611    14179    2             S_D.AFD# = '0'B;

  14179  2 004743   006717 450100                    STZ     3535,,PR0

     1612    14180    2             GOTO OPEN_FPRG;

  14180  2 004744   002107 710000 2                  TRA     OPEN_FPRG

     1613    14181    2           END;
     1614    14182
     1615    14183    1        IF S_D.PMD_ONLY  /* If invoked by PMD, only do one command */

  14183  2 004745   005146 234100                    SZN     2662,,PR0
         2 004746   004753 605000 2                  TPL     s:14189

     1616    14184    2        THEN DO;         /* (unless a READ command was encountered) */

     1617    14185    2             CALL DUA$EXITDELTA;

  14185  2 004747   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 004750   000000 701000 xent               TSX1    DUA$EXITDELTA
         2 004751   000000 011000                    NOP     0
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:238  

     1618    14186    2             GOTO SCAN_COMMAND; /* EXITDELTA doesnt return so save a pointer */

  14186  2 004752   004634 710000 2                  TRA     SCAN_COMMAND

     1619    14187    2             END;
     1620    14188
     1621    14189    1        S_D.S$TEP.ACTIVE = '0'B; /* If we get to here, ignore any interrupted */

  14189  2 004753   005276 450100                    STZ     2750,,PR0

     1622    14190                                 /* step, since the user can re-issue one if he wants */
     1623    14191                                      /* Remember entry into do scan phase of delta   */
     1624    14192    1        REMEMBER S_FAULT IN S_D.REM_DO_SCAN;

  14192  2 004754   005062 635000 2                  EAA     S_FAULT
         2 004755   000022 452500                    STP2    18,,PR0
         2 004756   000023 755100                    STA     19,,PR0

     1625    14193    1        IF D_XDELTA THEN DICFAULT = 0;

  14193  2 004757   000000 234000 xsym               SZN     D_XDELTA
         2 004760   004762 605000 2                  TPL     s:14194

  14193  2 004761   000000 450000 xsym               STZ     DICFAULT

     1626    14194    1        S_D.DO_SCAN = '1'B;

  14194  2 004762   400000 236003                    LDQ     -131072,DU
         2 004763   000017 756100                    STQ     15,,PR0

     1627    14195    1        S_D.DO$ = ADDR(NIL);

  14195  2 004764   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 004765   000031 756100                    STQ     25,,PR0

     1628    14196    1        S_D.DIRECT_OFF = S_D.DIRECT_SIZE;  /*N* Remove later */
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:239  

  14196  2 004766   004675 235100                    LDA     2493,,PR0
         2 004767   004676 755100                    STA     2494,,PR0

     1629    14197    1        S_D.DO_ATTACH = 0;

  14197  2 004770   000512 450100                    STZ     330,,PR0

     1630    14198    1        S_D.DO_NESTING_LEVEL = 0;

  14198  2 004771   004677 450100                    STZ     2495,,PR0

     1631    14199    1        CALL DDS$SCAN;

  14199  2 004772   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 004773   000000 701000 xent               TSX1    DDS$SCAN
         2 004774   000000 011000                    NOP     0

     1632    14200    1        S_D.BREAK = '0'B;
             14200         /* Ignore breaks hit while inputting, since the user would have re-typed anyway */

  14200  2 004775   000000 470400 xsym               LDP0    S_D$
         2 004776   000026 450100                    STZ     22,,PR0

     1633    14201    1        S_D.BREAK_PRINTED = '0'B;

  14201  2 004777   005213 450100                    STZ     2699,,PR0

     1634    14202    1   SCAN_COMMAND1:
     1635    14203    1        S_D.DO$ = ADDR(S_D.DIRCOM);

  14203  2 005000   000000 236000 xsym  SCAN_COMMAN* LDQ     S_D$
         2 005001   001046 036003                    ADLQ    550,DU
         2 005002   000000 470400 xsym               LDP0    S_D$
         2 005003   000031 756100                    STQ     25,,PR0

     1636    14204    1        S_D.ENTRYCMD$ = S_D.FAULTCMD$;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:240  

  14204  2 005004   000004 236100                    LDQ     4,,PR0
         2 005005   005203 756100                    STQ     2691,,PR0

     1637    14205    1        REMEMBER USERGO1 IN S_D.REM_USERGO;

  14205  2 005006   005127 635000 2                  EAA     USERGO1
         2 005007   005232 452500                    STP2    2714,,PR0
         2 005010   005233 755100                    STA     2715,,PR0

     1638    14206    1        CALL DDA$DO ALTRET(USERGO1);

  14206  2 005011   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 005012   000000 701000 xent               TSX1    DDA$DO
         2 005013   005127 702000 2                  TSX2    USERGO1

     1639    14207    1        IF S_D.STOP THEN GOTO SCAN_COMMAND;

  14207  2 005014   000000 470400 xsym               LDP0    S_D$
         2 005015   000050 234100                    SZN     40,,PR0
         2 005016   004634 604000 2                  TMI     SCAN_COMMAND

     1640    14208    1        ATT_OFFSET = S_D.DIRECT_OFF;

  14208  2 005017   004676 235100                    LDA     2494,,PR0
         2 005020   200065 755100                    STA     ATT_OFFSET,,AUTO

     1641    14209    2        DO WHILE ( ATT_OFFSET < S_D.DIRECT_SIZE );

  14209  2 005021   200065 236100                    LDQ     ATT_OFFSET,,AUTO
         2 005022   004675 116100                    CMPQ    2493,,PR0
         2 005023   005061 603000 2                  TRC     s:14221

     1642    14210    2             CALL DDB$BREAK ALTRET( SCAN_COMMAND );

  14210  2 005024   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 005025   000000 701000 xent               TSX1    DDB$BREAK
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:241  
         2 005026   004634 702000 2                  TSX2    SCAN_COMMAND

     1643    14211    2             S_D.ACMDS$ = ADDR( S_D.DIRECT_TEXT );

  14211  2 005027   000000 236000 xsym               LDQ     S_D$
         2 005030   006335 036003                    ADLQ    3293,DU
         2 005031   000000 470400 xsym               LDP0    S_D$
         2 005032   000510 756100                    STQ     328,,PR0

     1644    14212    2             S_D.ACMDS_SIZE = S_D.DIRECT_SIZE;

  14212  2 005033   004675 235100                    LDA     2493,,PR0
         2 005034   000511 755100                    STA     329,,PR0

     1645    14213    2             S_D.ACMDS_OFF = ATT_OFFSET;

  14213  2 005035   200065 235100                    LDA     ATT_OFFSET,,AUTO
         2 005036   000507 755100                    STA     327,,PR0

     1646    14214    2             CALL DDS$SCAN2 ALTRET( SCAN_COMMAND );

  14214  2 005037   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 005040   000000 701000 xent               TSX1    DDS$SCAN2
         2 005041   004634 702000 2                  TSX2    SCAN_COMMAND

     1647    14215    2             ATT_OFFSET = S_D.ACMDS_OFF;

  14215  2 005042   000000 470400 xsym               LDP0    S_D$
         2 005043   000507 235100                    LDA     327,,PR0
         2 005044   200065 755100                    STA     ATT_OFFSET,,AUTO

     1648    14216    2             REMEMBER SA_FAULT IN S_D.REM_DO_SCAN;

  14216  2 005045   005071 635000 2                  EAA     SA_FAULT
         2 005046   000022 452500                    STP2    18,,PR0
         2 005047   000023 755100                    STA     19,,PR0

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:242  
     1649    14217    2             CALL DDA$DO ALTRET( USERGO1 );

  14217  2 005050   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 005051   000000 701000 xent               TSX1    DDA$DO
         2 005052   005127 702000 2                  TSX2    USERGO1

  14215  2 005053                       SCAN_COMMAN* null
     1650    14218    2   SCAN_COMMAND2: ;
     1651    14219    2             IF S_D.STOP THEN GOTO SCAN_COMMAND;

  14219  2 005053   000000 470400 xsym               LDP0    S_D$
         2 005054   000050 234100                    SZN     40,,PR0
         2 005055   004634 604000 2                  TMI     SCAN_COMMAND

     1652    14220    2           END;

  14220  2 005056   200065 236100                    LDQ     ATT_OFFSET,,AUTO
         2 005057   004675 116100                    CMPQ    2493,,PR0
         2 005060   005024 602000 2                  TNC     s:14210

     1653    14221    1        GOTO SCAN_COMMAND;

  14221  2 005061   004634 710000 2                  TRA     SCAN_COMMAND

     1654    14222                                                /**/
     1655    14223    1   S_FAULT: IF D_XDELTA THEN CALL DDR$REPORT (R_SFAULT);

  14223  2 005062   000000 234000 xsym  S_FAULT      SZN     D_XDELTA
         2 005063   005070 605000 2                  TPL     s:14224

  14223  2 005064   000051 630400 3                  EPPR0   41
         2 005065   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 005066   000000 701000 xent               TSX1    DDR$REPORT
         2 005067   000000 011000                    NOP     0

     1656    14224    1        GOTO SCAN_COMMAND;

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:243  
  14224  2 005070   004634 710000 2                  TRA     SCAN_COMMAND

     1657    14225    1   SA_FAULT: IF D_XDELTA THEN CALL DDR$REPORT (R_SFAULT);

  14225  2 005071   000000 234000 xsym  SA_FAULT     SZN     D_XDELTA
         2 005072   005077 605000 2                  TPL     s:14226

  14225  2 005073   000051 630400 3                  EPPR0   41
         2 005074   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 005075   000000 701000 xent               TSX1    DDR$REPORT
         2 005076   000000 011000                    NOP     0

     1658    14226    1        GOTO SCAN_COMMAND2;

  14226  2 005077   005053 710000 2                  TRA     SCAN_COMMAND2

     1659    14227    1   DISKBOOT:
     1660    14228    1       USE_ORIG$ -> U$SE.APT = MIS$ -> UBIN36A(%USERWSQ); /* Get new PTA for GHOST1 */

  14228  2 005100   000000 470400 xsym  DISKBOOT     LDP0    MIS$
         2 005101   000010 236100                    LDQ     8,,PR0
         2 005102   000022 772000                    QRL     18
         2 005103   000000 471400 xsym               LDP1    USE_ORIG$
         2 005104   100003 756100                    STQ     3,,PR1

     1661    14229    1        CALL DDR$REPORT(R_DELTA);

  14229  2 005105   000005 630400 3                  EPPR0   5
         2 005106   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 005107   000000 701000 xent               TSX1    DDR$REPORT
         2 005110   000000 011000                    NOP     0

     1662    14230    1        GOTO SCAN_COMMAND;

  14230  2 005111   004634 710000 2                  TRA     SCAN_COMMAND

     1663    14231                                 /* Enter here if DDA$GO was not called elsewhere     */
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:244  
     1664    14232    1   USERGO2: S_D.DO$ = ADDR(NIL);           /* Use ic from sss                    */

  14232  2 005112   000001 236000 xsym  USERGO2      LDQ     B_VECTNIL+1
         2 005113   000000 470400 xsym               LDP0    S_D$
         2 005114   000031 756100                    STQ     25,,PR0

     1665    14233    1        ALIB_SAID_GOBACK = '0'B;

  14233  2 005115   200003 450100                    STZ     ALIB_SAID_GOBACK,,AUTO

     1666    14234    1        IF S_D.S$TEP.ACTIVE

  14234  2 005116   005276 234100                    SZN     2750,,PR0
         2 005117   005124 605000 2                  TPL     s:14236

     1667    14235    1        THEN CALL DDA$STEP_MORE ALTRET(CANT_STEP); /* Continue interrupted step */

  14235  2 005120   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 005121   000000 701000 xent               TSX1    DDA$STEP_MORE
         2 005122   004166 702000 2                  TSX2    CANT_STEP
         2 005123   005127 710000 2                  TRA     USERGO1

     1668    14236    1        ELSE CALL DDA$GO ALTRET(SCAN_COMMAND);

  14236  2 005124   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 005125   000000 701000 xent               TSX1    DDA$GO
         2 005126   004634 702000 2                  TSX2    SCAN_COMMAND

     1669    14237                            /* A 'DO' routine has successfully initiated a return to
     1670    14238                            the user.  Turn do/scan flag off */
     1671    14239    1   USERGO1: S_D.DO_SCAN = '0'B;

  14239  2 005127   000000 470400 xsym  USERGO1      LDP0    S_D$
         2 005130   000017 450100                    STZ     15,,PR0

     1672    14240        /*D*  Usergo is the routine which sends control back to the
     1673    14241              user at S_D.GOIC.        This is the only place in delta which
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:245  
     1674    14242              returns to the user.
     1675    14243              */
     1676    14244    1        IF S_D.FPRG_CONTEXT$ ~= ADDR(NIL)

  14244  2 005131   000076 236100                    LDQ     62,,PR0
         2 005132   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 005133   005153 600000 2                  TZE     s:14257

     1677    14245    2        THEN DO;

     1678    14246    2             TFPRG$ = S_D.FPRG_CONTEXT$;

  14246  2 005134   200053 756100                    STQ     TFPRG$,,AUTO

     1679    14247    3             DO WHILE (TFPRG$ ~= ADDR(NIL));

  14247  2 005135   005151 710000 2                  TRA     s:14255

     1680    14248    3                  IF TFPRG$ -> FPRG$CONTEXT.READ_FD = '1'B

  14248  2 005136   200053 470500                    LDP0    TFPRG$,,AUTO
         2 005137   000001 234100                    SZN     1,,PR0
         2 005140   005147 605000 2                  TPL     s:14254

     1681    14249    4                  THEN DO;

     1682    14250    4                       TFPRG$ -> FPRG$CONTEXT.READ_FD = '0'B;

  14250  2 005141   000031 236000 xsym               LDQ     B_VECTNIL+25
         2 005142   000001 356100                    ANSQ    1,,PR0

     1683    14251    4                       DCBNO = TFPRG$ -> FPRG$CONTEXT.DCBNO;

  14251  2 005143   000001 236100                    LDQ     1,,PR0
         2 005144   777777 376007                    ANQ     -1,DL
         2 005145   200057 756100                    STQ     DCBNO,,AUTO

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:246  
     1684    14252    4                       GOTO PROCESS_EVENT;

  14252  2 005146   002365 710000 2                  TRA     PROCESS_EVENT

     1685    14253    4                     END;
     1686    14254    3                  TFPRG$ = TFPRG$ -> FPRG$CONTEXT.NEXT$;

  14254  2 005147   000000 236100                    LDQ     0,,PR0
         2 005150   200053 756100                    STQ     TFPRG$,,AUTO

     1687    14255    3                END;

  14255  2 005151   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 005152   005136 601000 2                  TNZ     s:14248

     1688    14256    2           END;

     1689    14257    1        CALL DXA$SSF ALTRET(SCAN_COMMAND);

  14257  2 005153   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 005154   000000 701000 xent               TSX1    DXA$SSF
         2 005155   004634 702000 2                  TSX2    SCAN_COMMAND

  14251  2 005156                       USERGO       null
     1690    14258    1   USERGO: ;
     1691    14259    1        IF S_D.T$T.ACTIVE THEN

  14259  2 005156   000000 470400 xsym               LDP0    S_D$
         2 005157   004707 234100                    SZN     2503,,PR0
         2 005160   005201 605000 2                  TPL     USERGO0

     1692    14260    1             IF D_XDELTA                   /* DO if XDELTA */

  14260  2 005161   000000 234000 xsym               SZN     D_XDELTA
         2 005162   005176 604000 2                  TMI     s:14267
         2 005163   200103 236100                    LDQ     FPT$DRTN+11,,AUTO
         2 005164   100000 316003                    CANQ    32768,DU
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:247  
         2 005165   005174 601000 2                  TNZ     s:14260+11
         2 005166   000000 471400 xsym               LDP1    B$JIT$
         2 005167   100315 220100                    LDX0    205,,PR1
         2 005170   200000 360003                    ANX0    65536,DU
         2 005171   005174 600000 2                  TZE     s:14260+11
         2 005172   002000 316003                    CANQ    1024,DU
         2 005173   005176 600000 2                  TZE     s:14267
         2 005174   200103 430100                    FSZN    FPT$DRTN+11,,AUTO
         2 005175   005201 605000 2                  TPL     USERGO0

     1693    14261    1               OR (NOT FPT$DRTN.V.QUIT#    /* or USER DELTA and not QUIT */
     1694    14262    1               AND (B$JIT.JUNK & %JJ_UDELTA#) /* and we're in control */
     1695    14263    1               AND NOT FPT$DRTN.V.KLDELTA#) /* and not KILL DELTA */
     1696    14264    1               OR FPT$DRTN.V.KPDELTA#      /* or USER DELTA and KEEP */
     1697    14265                                                /* NOTE: KPDELTA will not be set
     1698    14266                                                   when M$ALIB was from ASL */
     1699    14267    1             THEN CALL DDB$SET_TT ALTRET(RESTORE_ALL);

  14267  2 005176   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 005177   000000 701000 xent               TSX1    DDB$SET_TT
         2 005200   004573 702000 2                  TSX2    RESTORE_ALL

  14259  2 005201                       USERGO0      null
     1700    14268    1   USERGO0:  ;
     1701    14269    1        IF S_D.WHEN_SET THEN FPT$DRTN.V.DBRK# = '1'B;

  14269  2 005201   000000 470400 xsym               LDP0    S_D$
         2 005202   005314 234100                    SZN     2764,,PR0
         2 005203   005206 605000 2                  TPL     USERGO0_WHEN

  14269  2 005204   004000 236003                    LDQ     2048,DU
         2 005205   200103 256100                    ORSQ    FPT$DRTN+11,,AUTO

     1702    14270    1   USERGO0_WHEN:
     1703    14271    1        S_D.SILENT = '0'B;

  14271  2 005206   000000 470400 xsym  USERGO0_WHEN LDP0    S_D$
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:248  
         2 005207   004735 450100                    STZ     2525,,PR0

     1704    14272    1        CALL DDB$BREAK ALTRET( RESTORE_ALL ); /* Check break flag */

  14272  2 005210   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 005211   000000 701000 xent               TSX1    DDB$BREAK
         2 005212   004573 702000 2                  TSX2    RESTORE_ALL

     1705    14273    2        IF NOT D_XDELTA AND (TRAP OR FPT$DRTN.V.SETECC# = '0'B) THEN DO;

  14273  2 005213   000000 234000 xsym               SZN     D_XDELTA
         2 005214   005372 604000 2                  TMI     SKIP_TT
         2 005215   200032 234100                    SZN     TRAP,,AUTO
         2 005216   005222 604000 2                  TMI     s:14274
         2 005217   200103 236100                    LDQ     FPT$DRTN+11,,AUTO
         2 005220   200000 316003                    CANQ    65536,DU
         2 005221   005372 601000 2                  TNZ     SKIP_TT

     1706    14274    2             IF S_D.S$TEP.ACTIVE AND UECCB$->B$ECCBI.ECIC(ECC) ~= 0

  14274  2 005222   000000 470400 xsym               LDP0    S_D$
         2 005223   005276 234100                    SZN     2750,,PR0
         2 005224   005307 605000 2                  TPL     SKIP_STEP
         2 005225   200005 235100                    LDA     ECC,,AUTO
         2 005226   000001 735000                    ALS     1
         2 005227   000000 471400 xsym               LDP1    UECCB$
         2 005230   000100 101505                    MRL     fill='000'O
         2 005231   100000 000002                    ADSC9   0,A,PR1                  cn=0,n=2
         2 005232   200300 000004                    ADSC9   LS+1,,AUTO               cn=0,n=4
         2 005233   200300 236100                    LDQ     LS+1,,AUTO
         2 005234   000000 116003                    CMPQ    0,DU
         2 005235   005307 600000 2                  TZE     SKIP_STEP

     1707    14275    3             THEN DO;  /* Fix up step so it will continue from the trap entry */

     1708    14276    3                  CALL DDB$STEPRESET;      /* Clear out the old stuff */

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:249  
  14276  2 005236   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 005237   000000 701000 xent               TSX1    DDB$STEPRESET
         2 005240   000000 011000                    NOP     0

     1709    14277    3                  CALL DDB$PLANTONE(PINCRW(UIS$, UECCB$->B$ECCBI.ECIC(ECC)), 0,
             14277                           DRL_STEP, ADDR(S_D.S$TEP.SAVED)) ALTRET(SKIP_STEP);

  14277  2 005241   200005 235100                    LDA     ECC,,AUTO
         2 005242   000001 735000                    ALS     1
         2 005243   000000 470400 xsym               LDP0    UECCB$
         2 005244   000100 100505                    MLR     fill='000'O
         2 005245   000000 000002                    ADSC9   0,A,PR0                  cn=0,n=2
         2 005246   200300 000004                    ADSC9   LS+1,,AUTO               cn=0,n=4
         2 005247   200300 220100                    LDX0    LS+1,,AUTO
         2 005250   000000 636010                    EAQ     0,X0
         2 005251   000000 036000 xsym               ADLQ    UIS$
         2 005252   200301 756100                    STQ     LS+2,,AUTO
         2 005253   000000 236000 xsym               LDQ     S_D$
         2 005254   005302 036003                    ADLQ    2754,DU
         2 005255   200302 756100                    STQ     LS+3,,AUTO
         2 005256   200302 631500                    EPPR1   LS+3,,AUTO
         2 005257   200307 451500                    STP1    LS+8,,AUTO
         2 005260   000017 236000 3                  LDQ     15
         2 005261   200306 756100                    STQ     LS+7,,AUTO
         2 005262   000004 236000 3                  LDQ     4
         2 005263   200305 756100                    STQ     LS+6,,AUTO
         2 005264   200301 633500                    EPPR3   LS+2,,AUTO
         2 005265   200304 453500                    STP3    LS+5,,AUTO
         2 005266   200304 630500                    EPPR0   LS+5,,AUTO
         2 005267   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 005270   000000 701000 xent               TSX1    DDB$PLANTONE
         2 005271   005307 702000 2                  TSX2    SKIP_STEP

     1710    14278    3                  S_D.S$TEP.OLD_PTR$ = ADDR(NIL);
             14278                           /* There's no old intruction to reset the inhibit bit on */

  14278  2 005272   000001 236000 xsym               LDQ     B_VECTNIL+1
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:250  
         2 005273   000000 470400 xsym               LDP0    S_D$
         2 005274   005305 756100                    STQ     2757,,PR0

     1711    14279    3                  S_D.S$TEP.ALT = '0'B;    /* CLEAR ALTRET FLAG */

  14279  2 005275   000031 236000 xsym               LDQ     B_VECTNIL+25
         2 005276   005277 356100                    ANSQ    2751,,PR0

     1712    14280    3                  S_D.S$TEP.ACTIVE = '1'B;

  14280  2 005277   400000 236003                    LDQ     -131072,DU
         2 005300   005276 756100                    STQ     2750,,PR0

     1713    14281    3                  S_D.S$TEP.LOC = UECCB$->B$ECCBI.ECIC(ECC);

  14281  2 005301   200005 235100                    LDA     ECC,,AUTO
         2 005302   000001 735000                    ALS     1
         2 005303   000000 471400 xsym               LDP1    UECCB$
         2 005304   000100 101505                    MRL     fill='000'O
         2 005305   100000 000002                    ADSC9   0,A,PR1                  cn=0,n=2
         2 005306   005300 000004                    ADSC9   2752,,PR0                cn=0,n=4

  14281  2 005307                       SKIP_STEP    null
     1714    14282    3   SKIP_STEP:     ;
     1715    14283    3                END;

     1716    14284    2             IF S_D.T$T.ACTIVE AND UECCB$->B$ECCBI.ECIC(ECC) ~= 0

  14284  2 005307   000000 470400 xsym               LDP0    S_D$
         2 005310   004707 234100                    SZN     2503,,PR0
         2 005311   005372 605000 2                  TPL     SKIP_TT
         2 005312   200005 235100                    LDA     ECC,,AUTO
         2 005313   000001 735000                    ALS     1
         2 005314   000000 471400 xsym               LDP1    UECCB$
         2 005315   000100 101505                    MRL     fill='000'O
         2 005316   100000 000002                    ADSC9   0,A,PR1                  cn=0,n=2
         2 005317   200300 000004                    ADSC9   LS+1,,AUTO               cn=0,n=4
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:251  
         2 005320   200300 236100                    LDQ     LS+1,,AUTO
         2 005321   000000 116003                    CMPQ    0,DU
         2 005322   005372 600000 2                  TZE     SKIP_TT

     1717    14285    3             THEN DO;

     1718    14286    3                  CALL DDB$TTRESET;        /* Do the same for trace transfer */

  14286  2 005323   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 005324   000000 701000 xent               TSX1    DDB$TTRESET
         2 005325   000000 011000                    NOP     0

     1719    14287    3                 CALL DDB$PLANTONE (PINCRW(UIS$, UECCB$->B$ECCBI.ECIC(ECC)), 0, DRL_TT
             14287                           , ADDR(S_D.T$T.SAVEINS)) ALTRET(SKIP_TT);

  14287  2 005326   200005 235100                    LDA     ECC,,AUTO
         2 005327   000001 735000                    ALS     1
         2 005330   000000 470400 xsym               LDP0    UECCB$
         2 005331   000100 100505                    MLR     fill='000'O
         2 005332   000000 000002                    ADSC9   0,A,PR0                  cn=0,n=2
         2 005333   200300 000004                    ADSC9   LS+1,,AUTO               cn=0,n=4
         2 005334   200300 220100                    LDX0    LS+1,,AUTO
         2 005335   000000 636010                    EAQ     0,X0
         2 005336   000000 036000 xsym               ADLQ    UIS$
         2 005337   200301 756100                    STQ     LS+2,,AUTO
         2 005340   000000 236000 xsym               LDQ     S_D$
         2 005341   004713 036003                    ADLQ    2507,DU
         2 005342   200302 756100                    STQ     LS+3,,AUTO
         2 005343   200302 631500                    EPPR1   LS+3,,AUTO
         2 005344   200307 451500                    STP1    LS+8,,AUTO
         2 005345   000002 236000 3                  LDQ     2
         2 005346   200306 756100                    STQ     LS+7,,AUTO
         2 005347   000004 236000 3                  LDQ     4
         2 005350   200305 756100                    STQ     LS+6,,AUTO
         2 005351   200301 633500                    EPPR3   LS+2,,AUTO
         2 005352   200304 453500                    STP3    LS+5,,AUTO
         2 005353   200304 630500                    EPPR0   LS+5,,AUTO
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:252  
         2 005354   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 005355   000000 701000 xent               TSX1    DDB$PLANTONE
         2 005356   005372 702000 2                  TSX2    SKIP_TT

     1720    14288    3                  S_D.T$T.ACTIVE = '1'B;

  14288  2 005357   400000 236003                    LDQ     -131072,DU
         2 005360   000000 470400 xsym               LDP0    S_D$
         2 005361   004707 756100                    STQ     2503,,PR0

     1721    14289    3                  S_D.T$T.SAVELOC = UECCB$->B$ECCBI.ECIC(ECC);

  14289  2 005362   200005 235100                    LDA     ECC,,AUTO
         2 005363   000001 735000                    ALS     1
         2 005364   000000 471400 xsym               LDP1    UECCB$
         2 005365   000100 100505                    MLR     fill='000'O
         2 005366   100000 000002                    ADSC9   0,A,PR1                  cn=0,n=2
         2 005367   004714 000002                    ADSC9   2508,,PR0                cn=0,n=2

     1722    14290    3                  S_D.T$T.LOC_SAVED = '1'B;

  14290  2 005370   004710 756100                    STQ     2504,,PR0

     1723    14291    3                  S_D.T$T.RET_SAVED = '0'B;

  14291  2 005371   004711 450100                    STZ     2505,,PR0

  14291  2 005372                       SKIP_TT      null
     1724    14292    3   SKIP_TT:       ;
     1725    14293    3                END;

     1726    14294    2           END;

     1727    14295    1        IF NOT D_XDELTA AND NOT S_D.E$XIT THEN

  14295  2 005372   000000 234000 xsym               SZN     D_XDELTA
         2 005373   005456 604000 2                  TMI     s:14327
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:253  
         2 005374   000000 470400 xsym               LDP0    S_D$
         2 005375   005137 234100                    SZN     2655,,PR0
         2 005376   005456 604000 2                  TMI     s:14327

     1728    14296                                 /* ECC=ECC_XCON# is the only condition that the monitor
     1729    14297                                 will allow delta to report when the user doesn't have
     1730    14298                                 a handler.  We will check for this condition and not
     1731    14299                            let the user fall out of delta into ibex.  The exit command
     1732    14300                            is used to bypass this check, but it is only allowed when
     1733    14301                            the original entry to this incarnation of delta was by
     1734    14302                            M$LINK, or if this is an exit due to M$LDTRC or M$SAVE. */
     1735    14303    1             IF ((FPT$DRTN.V.SETECC# AND FPT$DRTN.V.ECC# = %ECC_XCON#)

  14303  2 005377   200103 236100                    LDQ     FPT$DRTN+11,,AUTO
         2 005400   200000 316003                    CANQ    65536,DU
         2 005401   005405 600000 2                  TZE     s:14303+6
         2 005402   200103 720100                    LXL0    FPT$DRTN+11,,AUTO
         2 005403   000003 100003                    CMPX0   3,DU
         2 005404   005417 600000 2                  TZE     s:14309
         2 005405   200000 316003                    CANQ    65536,DU
         2 005406   005456 601000 2                  TNZ     s:14327
         2 005407   200005 235100                    LDA     ECC,,AUTO
         2 005410   000003 115007                    CMPA    3,DL
         2 005411   005417 600000 2                  TZE     s:14309
         2 005412   000140 115007                    CMPA    96,DL
         2 005413   005456 601000 2                  TNZ     s:14327
         2 005414   200025 235100                    LDA     SUBC,,AUTO
         2 005415   000006 115007                    CMPA    6,DL
         2 005416   005456 601000 2                  TNZ     s:14327

     1736    14304    1               OR (FPT$DRTN.V.SETECC# = '0'B AND
     1737    14305    1               (ECC = %ECC_XCON# OR
     1738    14306    1               (ECC = %ECC_EXCRTN# AND SUBC = %SC_XCONXIT#))))
     1739    14307    2             THEN DO;

     1740    14308                                                /* If exit control in progress */
     1741    14309    2                  IF UECCB$->B$ECCB.XCONF.PROG
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:254  

  14309  2 005417   000000 471400 xsym               LDP1    UECCB$
         2 005420   100004 236100                    LDQ     4,,PR1
         2 005421   000400 316003                    CANQ    256,DU
         2 005422   005451 600000 2                  TZE     s:14321
         2 005423   200005 235100                    LDA     ECC,,AUTO
         2 005424   000003 115007                    CMPA    3,DL
         2 005425   005432 601000 2                  TNZ     s:14309+11
         2 005426   000000 473400 xsym               LDP3    B$TCB$
         2 005427   300001 474500                    LDP4    1,,PR3
         2 005430   400100 430100                    FSZN    64,,PR4
         2 005431   005437 605000 2                  TPL     s:14314
         2 005432   000140 115007                    CMPA    96,DL
         2 005433   005451 601000 2                  TNZ     s:14321
         2 005434   200025 235100                    LDA     SUBC,,AUTO
         2 005435   000006 115007                    CMPA    6,DL
         2 005436   005451 601000 2                  TNZ     s:14321

     1742    14310    2                    AND ((ECC=%ECC_XCON# AND
     1743    14311    2                    (B$TCB$->B$TCB.STK$->B$XCON.CECCB.GET = '0'B))
     1744    14312    2                    OR (ECC=%ECC_EXCRTN# AND SUBC=%SC_XCONXIT#))
     1745    14313    3                  THEN DO;

     1746    14314    3                       S_D.ERROR = E@CANT_XCON; /* E@CANT_XCON */

  14314  2 005437   000155 235007                    LDA     109,DL
         2 005440   000013 755100                    STA     11,,PR0

     1747    14315    3   L4:
     1748    14316    3                       FPT$DRTN.V.ECC# = %ECC_DELTA#;

  14316  2 005441   000132 220003       L4           LDX0    90,DU
         2 005442   200103 440100                    SXL0    FPT$DRTN+11,,AUTO

     1749    14317    3                       FPT$DRTN.V.SETECC# = '1'B;

  14317  2 005443   200000 236003                    LDQ     65536,DU
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:255  
         2 005444   200103 256100                    ORSQ    FPT$DRTN+11,,AUTO

     1750    14318    3                       CALL DDE$ERROR;

  14318  2 005445   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 005446   000000 701000 xent               TSX1    DDE$ERROR
         2 005447   000000 011000                    NOP     0

     1751    14319    3                       GOTO RESTORE_ALL;

  14319  2 005450   004573 710000 2                  TRA     RESTORE_ALL

     1752    14320    3                     END;
     1753    14321    2                  ELSE IF UECCB$->B$ECCBI.ECIC(%ECC_XCON#) = 0

  14321  2 005451   100001 720100                    LXL0    1,,PR1
         2 005452   005456 601000 2                  TNZ     s:14327

     1754    14322    3                       THEN DO;

     1755    14323    3                            S_D.ERROR = E@NO_CONTROL; /*E@NO_CONTROL*/

  14323  2 005453   000134 235007                    LDA     92,DL
         2 005454   000013 755100                    STA     11,,PR0

     1756    14324    3                            GOTO L4;

  14324  2 005455   005441 710000 2                  TRA     L4

     1757    14325    3                          END;
     1758    14326    2                END;
     1759    14327    1             CALL DDC$POP_AS;

  14327  2 005456   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 005457   000000 701000 xent               TSX1    DDC$POP_AS
         2 005460   000000 011000                    NOP     0

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:256  
     1760    14328    1        IF D_XDELTA

  14328  2 005461   000000 234000 xsym               SZN     D_XDELTA
         2 005462   005513 605000 2                  TPL     s:14344

     1761    14329    2        THEN DO;                           /* See if we've got a reason to be

     1762    14330                                                entered from the pre-fault handler */
     1763    14331    2             IF (S_D.T$T.ACTIVE

  14331  2 005463   000000 470400 xsym               LDP0    S_D$
         2 005464   004707 234100                    SZN     2503,,PR0
         2 005465   005503 604000 2                  TMI     s:14331+16
         2 005466   005276 234100                    SZN     2750,,PR0
         2 005467   005503 604000 2                  TMI     s:14331+16
         2 005470   004657 234100                    SZN     2479,,PR0
         2 005471   005503 604000 2                  TMI     s:14331+16
         2 005472   004646 234100                    SZN     2470,,PR0
         2 005473   005503 604000 2                  TMI     s:14331+16
         2 005474   004630 234100                    SZN     2456,,PR0
         2 005475   005503 604000 2                  TMI     s:14331+16
         2 005476   004626 235100                    LDA     2454,,PR0
         2 005477   000002 115007                    CMPA    2,DL
         2 005500   005510 600000 2                  TZE     s:14340
         2 005501   000004 115007                    CMPA    4,DL
         2 005502   005510 600000 2                  TZE     s:14340
         2 005503   000000 235000 xsym               LDA     H_XDELTA
         2 005504   005510 600000 2                  TZE     s:14340

     1764    14332    2               OR S_D.S$TEP.ACTIVE
     1765    14333    2               OR S_D.E$IS.ACTIVE
     1766    14334    2               OR S_D.X$EQ.ACTIVE
     1767    14335    2               OR S_D.TR$INFO.ACTIVE
     1768    14336    2               OR (S_D.K$EEP.TYPE ~= KEEP_NONE AND S_D.K$EEP.TYPE ~= KEEP_SCREECH ))
             14336                        /* KEEP_NONE, KEEP_SCREECH */
     1769    14337                                      /* DDB$PLANT sets H_XDELTA for oncall and break */
     1770    14338    2               AND H_XDELTA ~= 0
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:257  
     1771    14339    2             THEN PINCRW(MIS$, H_XDELTA)->UBIN36 = BITBIN('777777777777'O);
             14339                      /* Tell him yes */

  14339  2 005505   000000 471400 xsym               LDP1    MIS$
         2 005506   000027 236000 xsym               LDQ     B_VECTNIL+23
         2 005507   100000 756105                    STQ     0,AL,PR1

     1772    14340    2             CALL DXC$USERGO;              /* Will not return */

  14340  2 005510   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 005511   000000 701000 xent               TSX1    DXC$USERGO
         2 005512   000000 011000                    NOP     0

     1773    14341    2           END;

     1774    14342                                                /**/
     1775    14343                                                /* User delta only code */
     1776    14344    1        IF S_D.ISBASE = 0

  14344  2 005513   000000 470400 xsym               LDP0    S_D$
         2 005514   000720 235100                    LDA     464,,PR0
         2 005515   005521 600000 2                  TZE     s:14346
         2 005516   200103 236100                    LDQ     FPT$DRTN+11,,AUTO
         2 005517   200000 316003                    CANQ    65536,DU
         2 005520   005524 601000 2                  TNZ     s:14348

     1777    14345    1          OR NOT FPT$DRTN.V.SETECC#
     1778    14346    1        THEN FPT$DRTN.V.IC# = S_D.GOIC;

  14346  2 005521   000001 720100                    LXL0    1,,PR0
         2 005522   200102 740100                    STX0    FPT$DRTN+10,,AUTO
         2 005523   005545 710000 2                  TRA     s:14354

     1779    14347    2        ELSE DO;

     1780    14348    2             S_D.SL$->SHRINK = SHRINKC;

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:258  
  14348  2 005524   000006 471500                    LDP1    6,,PR0
         2 005525   000100 100400                    MLR     fill='000'O
         2 005526   000000 000024 0                  ADSC9   SHRINKC                  cn=0,n=20
         2 005527   100000 000024                    ADSC9   0,,PR1                   cn=0,n=20

     1781    14349    2             S_D.SL$->SHRINK.VECT.BOUND = ADDR(S_D.USS$->B$SS.ISR)->SHRUNKISR.BOUND;

  14349  2 005530   000006 471500                    LDP1    6,,PR0
         2 005531   000005 473500                    LDP3    5,,PR0
         2 005532   300010 220100                    LDX0    8,,PR3
         2 005533   100000 740100                    STX0    0,,PR1

     1782    14350    2             S_D.SL$->SHRINK.VECT.OFFSET = S_D.ISBASE;

  14350  2 005534   000006 471500                    LDP1    6,,PR0
         2 005535   000720 720100                    LXL0    464,,PR0
         2 005536   100001 740100                    STX0    1,,PR1

     1783    14351    2             S_D.SL$->SHRINK.CLIMB.IC = S_D.ACTUALIC;

  14351  2 005537   000006 471500                    LDP1    6,,PR0
         2 005540   004656 720100                    LXL0    2478,,PR0
         2 005541   100003 740100                    STX0    3,,PR1

     1784    14352    2             FPT$DRTN.V.IC# = S_D.SL + 2;

  14352  2 005542   000010 720100                    LXL0    8,,PR0
         2 005543   000002 621010                    EAX1    2,X0
         2 005544   200102 741100                    STX1    FPT$DRTN+10,,AUTO

     1785    14353    2           END;

     1786    14354    1        IF NOT FPT$DRTN.V.QUIT#

  14354  2 005545   200103 236100                    LDQ     FPT$DRTN+11,,AUTO
         2 005546   100000 316003                    CANQ    32768,DU
         2 005547   005607 601000 2                  TNZ     s:14371
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:259  

     1787    14355    2        THEN DO;

     1788    14356    2             IF (S_D.RUM OR S_D.ANLZ) AND NOT S_D.ALIB

  14356  2 005550   004755 234100                    SZN     2541,,PR0
         2 005551   005554 604000 2                  TMI     s:14356+4
         2 005552   004756 234100                    SZN     2542,,PR0
         2 005553   005566 605000 2                  TPL     s:14362
         2 005554   005134 234100                    SZN     2652,,PR0
         2 005555   005566 604000 2                  TMI     s:14362

     1789    14357    3            THEN DO; /* We should never be here when rum or anlz and not quiting or no
             14357        t entered via M$ALIB */

     1790    14358    3                  S_D.ERROR = E@DELBUG;    /*E@DELBUG*/

  14358  2 005556   000766 235007                    LDA     502,DL
         2 005557   000013 755100                    STA     11,,PR0

     1791    14359    3                  CALL DDE$ERROR;

  14359  2 005560   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 005561   000000 701000 xent               TSX1    DDE$ERROR
         2 005562   000000 011000                    NOP     0

     1792    14360    3                  CALL M$XXX;

  14360  2 005563   000003 713400                    CLIMB   3
         2 005564   000000 401760                    pmme    nvectors=0

     1793    14361    3                END;

  14361  2 005565   005607 710000 2                  TRA     s:14371

     1794    14362    2             ELSE IF NOT (S_D.ANLZ AND S_D.ALIB)

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:260  
  14362  2 005566   004756 234100                    SZN     2542,,PR0
         2 005567   005572 605000 2                  TPL     s:14364
         2 005570   005134 234100                    SZN     2652,,PR0
         2 005571   005607 604000 2                  TMI     s:14371

     1795    14363    3                  THEN DO;

     1796    14364    3                       S_D.ACCESS = '1'B;

  14364  2 005572   400000 236003                    LDQ     -131072,DU
         2 005573   000016 756100                    STQ     14,,PR0

     1797    14365    3                       REMEMBER CANT_ACCESS IN S_D.REM_ACCESS;

  14365  2 005574   006063 635000 2                  EAA     CANT_ACCESS
         2 005575   000024 452500                    STP2    20,,PR0
         2 005576   000025 755100                    STA     21,,PR0

     1798    14366    3                      IF PINCRW(UIS$, S_D.GOIC)->HOST_INSTR.I THEN FPT$DRTN.V.EVENT# =
             14366                                '1'B;

  14366  2 005577   000001 720100                    LXL0    1,,PR0
         2 005600   000000 471400 xsym               LDP1    UIS$
         2 005601   100000 236110                    LDQ     0,X0,PR1
         2 005602   000200 316007                    CANQ    128,DL
         2 005603   005606 600000 2                  TZE     s:14367

  14366  2 005604   020000 236003                    LDQ     8192,DU
         2 005605   200103 256100                    ORSQ    FPT$DRTN+11,,AUTO

     1799    14367    3                       S_D.ACCESS = '0'B;

  14367  2 005606   000016 450100                    STZ     14,,PR0

     1800    14368    3                     END;

     1801    14369       /* Don't let an event completion get reported on this guy if he is in inhibited code
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:261  
             14369         */
     1802    14370    2           END;

     1803    14371    1        IF S_D.ANLZ_FILE

  14371  2 005607   000000 470400 xsym               LDP0    S_D$
         2 005610   005052 234100                    SZN     2602,,PR0
         2 005611   005616 605000 2                  TPL     CALL_DRTN

     1804    14372    2        THEN DO;

     1805    14373    2             S_D.USS$_SAVE = S_D.USS$;     /* Save the special ss pointer */

  14373  2 005612   000005 236100                    LDQ     5,,PR0
         2 005613   005141 756100                    STQ     2657,,PR0

     1806    14374    2             S_D.UREG$_SAVE = S_D.UREG$;   /* Save pointer to user regs */

  14374  2 005614   000045 236100                    LDQ     37,,PR0
         2 005615   005006 756100                    STQ     2566,,PR0

     1807    14375    2           END;

     1808    14376    1   CALL_DRTN:
     1809    14377             /* Check for any events from any FPRGs */
     1810    14378    1        IF FPT$DRTN.V.KLDELTA#

  14378  2 005616   200103 236100       CALL_DRTN    LDQ     FPT$DRTN+11,,AUTO
         2 005617   002000 316003                    CANQ    1024,DU
         2 005620   005631 601000 2                  TNZ     s:14382
         2 005621   010000 316003                    CANQ    4096,DU
         2 005622   005670 600000 2                  TZE     s:14395
         2 005623   000000 470400 xsym               LDP0    B$JIT$
         2 005624   000315 220100                    LDX0    205,,PR0
         2 005625   200000 360003                    ANX0    65536,DU
         2 005626   005670 601000 2                  TNZ     s:14395
         2 005627   200103 430100                    FSZN    FPT$DRTN+11,,AUTO
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:262  
         2 005630   005670 604000 2                  TMI     s:14395

     1811    14379    1          OR (FPT$DRTN.V.DLIB# AND NOT (B$JIT.JUNK & %JJ_UDELTA#)
     1812    14380    1          AND NOT FPT$DRTN.V.KPDELTA#)
     1813    14381    2        THEN DO;

     1814    14382    2             S_D.DO$ = ADDR(NIL);          /* Keep KILLRUM and KILLANLZ quiet */

  14382  2 005631   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 005632   000000 470400 xsym               LDP0    S_D$
         2 005633   000031 756100                    STQ     25,,PR0

     1815    14383    2             IF S_D.ANLZ THEN CALL DUA$KILL_ANLZ;

  14383  2 005634   004756 234100                    SZN     2542,,PR0
         2 005635   005642 605000 2                  TPL     s:14384

  14383  2 005636   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 005637   000000 701000 xent               TSX1    DUA$KILL_ANLZ
         2 005640   000000 011000                    NOP     0
         2 005641   005647 710000 2                  TRA     s:14385

     1816    14384    2             ELSE IF S_D.RUM THEN CALL DUA$KILL_RUM;

  14384  2 005642   004755 234100                    SZN     2541,,PR0
         2 005643   005647 605000 2                  TPL     s:14385

  14384  2 005644   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 005645   000000 701000 xent               TSX1    DUA$KILL_RUM
         2 005646   000000 011000                    NOP     0

     1817    14385    2                  CALL DUX$XCON1_REL; /* We are not comming back, release dcb #9 */

  14385  2 005647   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 005650   000000 701000 xent               TSX1    DUX$XCON1_REL
         2 005651   000000 011000                    NOP     0

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:263  
     1818    14386    2             IF (NOT D_XDELTA) AND (NOT S_D.BATCH)

  14386  2 005652   000000 234000 xsym               SZN     D_XDELTA
         2 005653   005670 604000 2                  TMI     s:14395
         2 005654   000000 470400 xsym               LDP0    S_D$
         2 005655   004625 234100                    SZN     2453,,PR0
         2 005656   005670 604000 2                  TMI     s:14395

     1819    14387    3             THEN DO;

     1820    14388    3                  S_D.EOM = '0'B;

  14388  2 005657   004752 450100                    STZ     2538,,PR0

     1821    14389    3                  CALL M$EOM(FPT_EOM) ALTRET(NOEOM); /* Reset to standard set */

  14389  2 005660   000252 630400 0                  EPPR0   FPT_EOM
         2 005661   560003 713400                    CLIMB   alt,+57347
         2 005662   401000 401760                    pmme    nvectors=3
         2 005663   005665 702000 2                  TSX2    NOEOM

     1822    14390    4                  DO WHILE ('0'B);

  14390  2 005664   005670 710000 2                  TRA     s:14395

     1823    14391    4   NOEOM:              CALL DUE$ERRMSG;

  14391  2 005665   000002 631400 xsym  NOEOM        EPPR1   B_VECTNIL+2
         2 005666   000000 701000 xent               TSX1    DUE$ERRMSG
         2 005667   000000 011000                    NOP     0

     1824    14392    4                     END;

     1825    14393    3                END;

     1826    14394    2           END;

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:264  
     1827    14395    1        IF S_D.DEBUGA(%DB@EXIT)

  14395  2 005670   000000 470400 xsym               LDP0    S_D$
         2 005671   000053 236100                    LDQ     43,,PR0
         2 005672   001000 316007                    CANQ    512,DL
         2 005673   005706 600000 2                  TZE     s:14402

     1828    14396    2        THEN DO;

     1829    14397    2             S_D.ERROR = E@DB_EXIT;        /* E@DB_EXIT */

  14397  2 005674   000310 235007                    LDA     200,DL
         2 005675   000013 755100                    STA     11,,PR0

     1830    14398    2             CALL DDE$ERROR;

  14398  2 005676   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 005677   000000 701000 xent               TSX1    DDE$ERROR
         2 005700   000000 011000                    NOP     0

     1831    14399    2             CALL DUD$MINI;

  14399  2 005701   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 005702   000000 701000 xent               TSX1    DUD$MINI
         2 005703   000000 011000                    NOP     0

     1832    14400    2             S_D.PROMPT_SIZE = 0;

  14400  2 005704   000000 470400 xsym               LDP0    S_D$
         2 005705   005147 450100                    STZ     2663,,PR0

     1833    14401    2           END;

     1834    14402    1        IF (S_D.ERROR > 0 OR S_D.RUM_TOTAL_ERRORS > 0) AND ECC = %ECC_ALIB# THEN

  14402  2 005706   000013 235100                    LDA     11,,PR0
         2 005707   005712 601000 2                  TNZ     s:14402+4
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:265  
         2 005710   000515 235100                    LDA     333,,PR0
         2 005711   005717 600000 2                  TZE     s:14404
         2 005712   200005 235100                    LDA     ECC,,AUTO
         2 005713   000137 115007                    CMPA    95,DL
         2 005714   005717 601000 2                  TNZ     s:14404

     1835    14403    1           FPT$DRTN.V.ALTRTN# = '1'B;

  14403  2 005715   040000 236003                    LDQ     16384,DU
         2 005716   200103 256100                    ORSQ    FPT$DRTN+11,,AUTO

     1836    14404    1        IF FPT$DRTN.V.QUIT# AND S_D.RUM_TOTAL_ERRORS > 0

  14404  2 005717   200103 236100                    LDQ     FPT$DRTN+11,,AUTO
         2 005720   100000 316003                    CANQ    32768,DU
         2 005721   005730 600000 2                  TZE     s:14409
         2 005722   000515 235100                    LDA     333,,PR0
         2 005723   005730 600000 2                  TZE     s:14409

     1837    14405    2        THEN DO;

     1838    14406    2             FPT$DRTN.V.SETSTEPCC# = '1'B;

  14406  2 005724   000100 236003                    LDQ     64,DU
         2 005725   200103 256100                    ORSQ    FPT$DRTN+11,,AUTO

     1839    14407    2             FPT$DRTN.V.STEPCC# = 4;

  14407  2 005726   004000 236003                    LDQ     2048,DU
         2 005727   200104 552140                    STBQ    FPT$DRTN+12,'40'O,AUTO

     1840    14408    2           END;

     1841    14409    1         S_D.CAN_I_DO_BREAK = '1'B;

  14409  2 005730   400000 236003                    LDQ     -131072,DU
         2 005731   006736 756100                    STQ     3550,,PR0
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:266  

     1842    14410    1        CALL M$DRTN (FPT$DRTN) ALTRET(DRTN_ALTRET); /* Tell Linda to take it away */

  14410  2 005732   200070 630500                    EPPR0   FPT$DRTN,,AUTO
         2 005733   410017 713400                    CLIMB   alt,+4111
         2 005734   402000 401760                    pmme    nvectors=5
         2 005735   005754 702000 2                  TSX2    DRTN_ALTRET

     1843    14411    1   DRTN_ERRQUIT:
     1844    14412    1        CALL DDE$ERROR;

  14412  2 005736   000002 631400 xsym  DRTN_ERRQUIT EPPR1   B_VECTNIL+2
         2 005737   000000 701000 xent               TSX1    DDE$ERROR
         2 005740   000000 011000                    NOP     0

     1845    14413        /*D* NAME: DRTN_QUIT (UNWOUND TO FROM DUA$EXITDELTA)
     1846    14414             PURPOSE: TO EXIT DELTA WHEN M$XXX OR M$EXIT IS NOT CORRECT OR
     1847    14415                  DESIRABLE, FOR EXAMPLE ALTRET DUE TO DISCONNECT ON M$WRITE.
     1848    14416                  AN M$XXX WOULD JUST CAUSE ANOTHER CALL TO DDQ$WRITE. */
     1849    14417    1   DRTN_QUIT:
     1850    14418    1        FPT$DRTN.V.QUIT# = '1'B;

  14418  2 005741   100000 236003       DRTN_QUIT    LDQ     32768,DU
         2 005742   200103 256100                    ORSQ    FPT$DRTN+11,,AUTO

     1851    14419    1        GOTO CALL_DRTN;

  14419  2 005743   005616 710000 2                  TRA     CALL_DRTN

     1852    14420    1   DRTN_KLDELTA:
     1853    14421    1        FPT$DRTN.V.KLDELTA# = '1'B;

  14421  2 005744   002000 236003       DRTN_KLDELTA LDQ     1024,DU
         2 005745   200103 256100                    ORSQ    FPT$DRTN+11,,AUTO

     1854    14422        /*N* SOMEDAY, CHECK FOR DELENT = 1, AND SET SETECC# TO 0, WHEN
     1855    14423             LINDA IS SET UP TO HANDLE IT. */
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:267  
     1856    14424    1        FPT$DRTN.V.SETECC# = '1'B;

  14424  2 005746   200000 236003                    LDQ     65536,DU
         2 005747   200103 256100                    ORSQ    FPT$DRTN+11,,AUTO

     1857    14425    1        FPT$DRTN.V.IC# = S_D.ACTUALIC;

  14425  2 005750   000000 470400 xsym               LDP0    S_D$
         2 005751   004656 720100                    LXL0    2478,,PR0
         2 005752   200102 740100                    STX0    FPT$DRTN+10,,AUTO

     1858    14426    1        GOTO CALL_DRTN;

  14426  2 005753   005616 710000 2                  TRA     CALL_DRTN

  14425  2 005754                       DRTN_ALTRET  null
     1859    14427    1   DRTN_ALTRET: ;
     1860    14428        /*D* User asked for control on an exceptional condition for which
     1861    14429             he doesn't have a handler.  Reset ecc to 90, turn setecc on and
     1862    14430             go back to scanner, after printing a suitable error.
     1863    14431             OR.... If he said quit, then its our problem and not his. */
     1864    14432    1        CALL DDC$SET_AS;         /* Oops, we're back, set up arg stack again */

  14432  2 005754   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 005755   000000 701000 xent               TSX1    DDC$SET_AS
         2 005756   000000 011000                    NOP     0

     1865    14433    1        IF S_D.DEBUGA(%DB@ECC)

  14433  2 005757   000000 470400 xsym               LDP0    S_D$
         2 005760   000053 236100                    LDQ     43,,PR0
         2 005761   000040 316007                    CANQ    32,DL
         2 005762   005777 600000 2                  TZE     s:14441

     1866    14434    2        THEN DO;

     1867    14435    2             CALL DUR$ECCRPT(ECCRPT_DRTNALT);
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:268  

  14435  2 005763   000050 630400 3                  EPPR0   40
         2 005764   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 005765   000000 701000 xent               TSX1    DUR$ECCRPT
         2 005766   000000 011000                    NOP     0

     1868    14436    3             IF S_D.DEBUG THEN DO;

  14436  2 005767   000000 470400 xsym               LDP0    S_D$
         2 005770   004732 234100                    SZN     2522,,PR0
         2 005771   005777 605000 2                  TPL     s:14441

     1869    14437    3                  CALL DUD$MINI;

  14437  2 005772   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 005773   000000 701000 xent               TSX1    DUD$MINI
         2 005774   000000 011000                    NOP     0

     1870    14438    3                  S_D.PROMPT_SIZE = 0;

  14438  2 005775   000000 470400 xsym               LDP0    S_D$
         2 005776   005147 450100                    STZ     2663,,PR0

     1871    14439    3                END;

     1872    14440    2           END;

     1873    14441    1        ERR_CODE = B$TCB$->B$TCB.ALT$->B$EXCFR.ERR.CODE;

  14441  2 005777   000000 471400 xsym               LDP1    B$TCB$
         2 006000   100000 473500                    LDP3    0,,PR1
         2 006001   300102 236100                    LDQ     66,,PR3
         2 006002   000003 772000                    QRL     3
         2 006003   037777 376007                    ANQ     16383,DL
         2 006004   200013 756100                    STQ     ERR_CODE,,AUTO

     1874    14442    1        FPT$DRTN.V.SETECC# = '1'B;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:269  

  14442  2 006005   200000 236003                    LDQ     65536,DU
         2 006006   200103 256100                    ORSQ    FPT$DRTN+11,,AUTO

     1875    14443    2        IF TRAP THEN DO;

  14443  2 006007   200032 234100                    SZN     TRAP,,AUTO
         2 006010   006025 605000 2                  TPL     s:14450

     1876    14444    2             S_D.ERROR = E@NO_TRAP_CONTROL; /* E@NO_TRAP_CONTROL */

  14444  2 006011   000146 235007                    LDA     102,DL
         2 006012   000013 755100                    STA     11,,PR0

     1877    14445    2             CALL DDE$ERROR;

  14445  2 006013   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 006014   000000 701000 xent               TSX1    DDE$ERROR
         2 006015   000000 011000                    NOP     0

     1878    14446    2             CALL DUR$ECCRPT(ECCRPT_USER);

  14446  2 006016   000004 630400 3                  EPPR0   4
         2 006017   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 006020   000000 701000 xent               TSX1    DUR$ECCRPT
         2 006021   000000 011000                    NOP     0

     1879    14447    2             FPT$DRTN.V.ECC# = %ECC_DELTA#;

  14447  2 006022   000132 220003                    LDX0    90,DU
         2 006023   200103 440100                    SXL0    FPT$DRTN+11,,AUTO

     1880    14448    2             GOTO RESTORE_ALL;

  14448  2 006024   004573 710000 2                  TRA     RESTORE_ALL

     1881    14449    2           END;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:270  
     1882    14450    2        IF ERR_CODE = %E$NOCONTROL THEN DO;

  14450  2 006025   200013 235100                    LDA     ERR_CODE,,AUTO
         2 006026   000755 115007                    CMPA    493,DL
         2 006027   006041 601000 2                  TNZ     s:14454

     1883    14451    2             IF FPT$DRTN.V.ECC# = %ECC_INT# THEN S_D.ERROR = E@NO_BREAK;
             14451                      /*E@NO_BREAK */

  14451  2 006030   200103 720100                    LXL0    FPT$DRTN+11,,AUTO
         2 006031   000002 100003                    CMPX0   2,DU
         2 006032   006036 601000 2                  TNZ     s:14452

  14451  2 006033   000135 235007                    LDA     93,DL
         2 006034   000013 755100                    STA     11,,PR0
         2 006035   006055 710000 2                  TRA     s:14460

     1884    14452    2             ELSE S_D.ERROR = E@NO_CONTROL; /*E@NO_CONTROL*/

  14452  2 006036   000134 235007                    LDA     92,DL
         2 006037   000013 755100                    STA     11,,PR0

     1885    14453    2           END;

  14453  2 006040   006055 710000 2                  TRA     s:14460

     1886    14454    1        ELSE IF ERR_CODE = %E$TCBFULL OR ERR_CODE = %E$NOTCB THEN

  14454  2 006041   000763 115007                    CMPA    499,DL
         2 006042   006045 600000 2                  TZE     s:14455
         2 006043   000752 115007                    CMPA    490,DL
         2 006044   006050 601000 2                  TNZ     s:14457

     1887    14455    1                  S_D.ERROR = E@NO_TCB;    /*E@NO_TCB*/

  14455  2 006045   000145 235007                    LDA     101,DL
         2 006046   000013 755100                    STA     11,,PR0
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:271  
         2 006047   006055 710000 2                  TRA     s:14460

     1888    14456    2             ELSE DO;

     1889    14457    2                  S_D.ERROR = E@DELBUG;    /*E@DELBUG*/

  14457  2 006050   000766 235007                    LDA     502,DL
         2 006051   000013 755100                    STA     11,,PR0

     1890    14458    2                  CALL DUE$ERRMSG;

  14458  2 006052   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 006053   000000 701000 xent               TSX1    DUE$ERRMSG
         2 006054   000000 011000                    NOP     0

     1891    14459    2                END;

     1892    14460    1             CALL DDE$ERROR;

  14460  2 006055   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 006056   000000 701000 xent               TSX1    DDE$ERROR
         2 006057   000000 011000                    NOP     0

     1893    14461    1             FPT$DRTN.V.ECC# = %ECC_DELTA#;
             14461                      /* Set it back to "DONT GOTO USER XCON"    */

  14461  2 006060   000132 220003                    LDX0    90,DU
         2 006061   200103 440100                    SXL0    FPT$DRTN+11,,AUTO

     1894    14462    1             GOTO RESTORE_ALL;             /* Restore and goto SCAN_COMMAND */

  14462  2 006062   004573 710000 2                  TRA     RESTORE_ALL

     1895    14463    1   CANT_ACCESS:
     1896    14464    1             S_D.ERROR = E@CANTACCESS;     /* E@CANTACCESS */

  14464  2 006063   000355 235007       CANT_ACCESS  LDA     237,DL
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:272  
         2 006064   000000 470400 xsym               LDP0    S_D$
         2 006065   000013 755100                    STA     11,,PR0

     1897    14465    1             CALL DDE$ERROR;

  14465  2 006066   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 006067   000000 701000 xent               TSX1    DDE$ERROR
         2 006070   000000 011000                    NOP     0

     1898    14466    1             GOTO RESTORE_ALL;

  14466  2 006071   004573 710000 2                  TRA     RESTORE_ALL

     1899    14467    1   DUA$DELTA_NO_AUTO: ENTRY;

  14467  2 006072   000000 700200 xent  DUA$DELTA_N* TSX0  ! X66_AUTO_0
         2 006073   000310 000000                    ZERO    200,0

     1900    14468    1        FPT$WRITE = FPT_WRITE;

  14468  2 006074   000100 100400                    MLR     fill='000'O
         2 006075   000236 000060 0                  ADSC9   FPT_WRITE                cn=0,n=48
         2 006076   200262 000060                    ADSC9   FPT$WRITE,,AUTO          cn=0,n=48

     1901    14469    1        FPT$WRITE.V_ = VECTOR(FPT$WRITE.V);

  14469  2 006077   000000 235000 3                  LDA     0
         2 006100   200300 452500                    STP2    LS+1,,AUTO
         2 006101   200300 236100                    LDQ     LS+1,,AUTO
         2 006102   000272 036003                    ADLQ    186,DU
         2 006103   200262 757100                    STAQ    FPT$WRITE,,AUTO

     1902    14470    1        FPT$WRITE.V.DCB# = D_M$DO#;

  14470  2 006104   000000 720000 xsym               LXL0    D_M$DO#
         2 006105   200272 740100                    STX0    FPT$WRITE+8,,AUTO

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:273  
     1903    14471    1        CALL M$WRITE (FPT$WRITE) ALTRET (OKAY);

  14471  2 006106   200262 630500                    EPPR0   FPT$WRITE,,AUTO
         2 006107   440001 713400                    CLIMB   alt,write
         2 006110   401400 401760                    pmme    nvectors=4
         2 006111   006112 702000 2                  TSX2    OKAY

  14470  2 006112                       OKAY         null
     1904    14472    1   OKAY: ;
     1905    14473    1        IF (NOT DCBADDR(D_M$DO#)->F$DCB.DDEV.UCOUT#) AND (B$JIT.MODE = %M_INT#)

  14473  2 006112   000034 470400 3                  LDP0    28
         2 006113   000000 471500                    LDP1    0,,PR0
         2 006114   000000 720000 xsym               LXL0    D_M$DO#
         2 006115   100000 473510                    LDP3    0,X0,PR1
         2 006116   300004 236100                    LDQ     4,,PR3
         2 006117   020000 316007                    CANQ    8192,DL
         2 006120   006135 601000 2                  TNZ     GIVE_UP
         2 006121   000000 474400 xsym               LDP4    B$JIT$
         2 006122   400000 236100                    LDQ     0,,PR4
         2 006123   740000 376003                    ANQ     -16384,DU
         2 006124   140000 116003                    CMPQ    49152,DU
         2 006125   006135 601000 2                  TNZ     GIVE_UP

     1906    14474    2        THEN DO;

     1907    14475    2             FPT$WRITE.V.DCB# = DCBNUM(M$UC);

  14475  2 006126   000000 236007 xsym               LDQ     M$UC,DL
         2 006127   000000 621006                    EAX1    0,QL
         2 006130   200272 741100                    STX1    FPT$WRITE+8,,AUTO

     1908    14476    2             CALL M$WRITE (FPT$WRITE) ALTRET (GIVE_UP);

  14476  2 006131   200262 630500                    EPPR0   FPT$WRITE,,AUTO
         2 006132   440001 713400                    CLIMB   alt,write
         2 006133   401400 401760                    pmme    nvectors=4
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:274  
         2 006134   006135 702000 2                  TSX2    GIVE_UP

     1909    14477    2           END;

  14473  2 006135                       GIVE_UP      null
     1910    14478    1   GIVE_UP: ;
     1911    14479    1        GOTO DRTN_QUIT;

  14479  2 006135   005741 710000 2                  TRA     DRTN_QUIT

     1912    14480        /*D*  NAME:     DXA$PATCHENT
     1913    14481              CALL:     THIS ENTRY POINT IS REACHED THROUGH THE BOOTSTRAP FOR
     1914    14482                        PURPOSES OF PATCHING THE MONITOR.
     1915    14483                        */
     1916    14484    1   DXA$PATCHENT: ENTRY;

  14484  2 006136   000000 700200 xent  DXA$PATCHENT TSX0  ! X66_AUTO_0
         2 006137   000310 000000                    ZERO    200,0

     1917    14485    1             TRAP = '0'B;

  14485  2 006140   200032 450100                    STZ     TRAP,,AUTO

     1918    14486    1             CALL DXA$GET_APT1(%MONWSQ, MON_APT); /* %MONWSQ */

  14486  2 006141   000062 630400 3                  EPPR0   50
         2 006142   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 006143   000000 701000 xent               TSX1    DXA$GET_APT1
         2 006144   000000 011000                    NOP     0

     1919    14487    1             S_D.EWSQ# = %MONWSQ;          /* Initialize to '%MONWSQ' */

  14487  2 006145   000001 235007                    LDA     1,DL
         2 006146   000000 470400 xsym               LDP0    S_D$
         2 006147   000011 755100                    STA     9,,PR0

     1920    14488    1             CALL ORIG_USE;
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:275  

  14488  2 006150   006373 701000 2                  TSX1    ORIG_USE
         2 006151   000000 011000                    NOP     0

     1921    14489    1             CALL DXI$1STIME;

  14489  2 006152   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 006153   000000 701000 xent               TSX1    DXI$1STIME
         2 006154   000000 011000                    NOP     0

     1922    14490    1             S_D.NODE = CNODE$ -> UBIN36;

  14490  2 006155   000000 470400 xsym               LDP0    CNODE$
         2 006156   000000 471400 xsym               LDP1    S_D$
         2 006157   000000 235100                    LDA     0,,PR0
         2 006160   104706 755100                    STA     2502,,PR1

     1923    14491    1             S_D.UNODE.CURRENT = CNODE$ -> UBIN36;

  14491  2 006161   000000 235100                    LDA     0,,PR0
         2 006162   104757 755100                    STA     2543,,PR1

     1924    14492    1             S_D.UNODE.USENODE = CNODE$ -> UBIN36;

  14492  2 006163   000000 235100                    LDA     0,,PR0
         2 006164   104760 755100                    STA     2544,,PR1

     1925    14493    1             REMEMBER DISKBOOT IN S_D.REM_DISKBOOT;

  14493  2 006165   005100 635000 2                  EAA     DISKBOOT
         2 006166   100710 452500                    STP2    456,,PR1
         2 006167   100711 755100                    STA     457,,PR1

     1926    14494    1        IF H_XDELTA ~= 0 THEN PINCRW(MIS$, H_XDELTA)->UBIN36 = 0;

  14494  2 006170   000000 236000 xsym               LDQ     H_XDELTA
         2 006171   006174 600000 2                  TZE     s:14496
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:276  

  14494  2 006172   000000 473400 xsym               LDP3    MIS$
         2 006173   300000 450106                    STZ     0,QL,PR3

     1927    14495                                           /* Clear it, we will set it if we have to */
     1928    14496    1        CALL DDC$SET_AS;

  14496  2 006174   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 006175   000000 701000 xent               TSX1    DDC$SET_AS
         2 006176   000000 011000                    NOP     0

     1929    14497    1        GOTO SCAN_COMMAND;

  14497  2 006177   004634 710000 2                  TRA     SCAN_COMMAND

  14494  2 006200                       DXA$KEYENT   null
     1930    14498        /*D*  NAME: DXA$KEYENT
     1931    14499              CALL:   THIS ENTRY POINT IS REACHED FROM KEYIN WITH A CLIMB
     1932    14500                      VIA ENTRY DESCRIPTOR IN MONITOR'S LS.
     1933    14501                      */
     1934    14502    1   DXA$KEYENT: ;
     1935    14503                                                /* Get past keyin derail */
     1936    14504    1        S_D.SAVEIC = S_D.TIC+1;

  14504  2 006200   000027 235100                    LDA     23,,PR0
         2 006201   000001 035007                    ADLA    1,DL
         2 006202   000002 755100                    STA     2,,PR0

  14504  2 006203                       RECOVERY_EN* null
     1937    14505                                                /* Write 'DELTA HERE' */
     1938    14506    1   RECOVERY_ENTRY: ;
     1939    14507    1        TRAP = '0'B;

  14507  2 006203   200032 450100                    STZ     TRAP,,AUTO

     1940    14508    1        CALL DDC$SET_AS;

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:277  
  14508  2 006204   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 006205   000000 701000 xent               TSX1    DDC$SET_AS
         2 006206   000000 011000                    NOP     0

     1941    14509    1        CALL DDR$REPORT(R_DELTA);

  14509  2 006207   000005 630400 3                  EPPR0   5
         2 006210   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 006211   000000 701000 xent               TSX1    DDR$REPORT
         2 006212   000000 011000                    NOP     0

     1942    14510    1        GOTO RESTORE_ALL;

  14510  2 006213   004573 710000 2                  TRA     RESTORE_ALL

     1943    14511        /*D*  NAME: DXA$FAULTENT
     1944    14512              CALL:  THIS ENTRY POINT IS REACHED THROUGH A 'WIRED-IN'CLIMB
     1945    14513                     THROUGH FAULT ENTRY DESCRIPTOR IN ABS LOCATION '32'O
     1946    14514                     AND '40'O PLACED THERE DURING THE BOOT PROCESS...
     1947    14515                     IF DELTA WAS DESIRED.
     1948    14516                     */
     1949    14517    1   DXA$FAULTENT: ENTRY;

  14517  2 006214   000000 700200 xent  DXA$FAULTENT TSX0  ! X66_AUTO_0
         2 006215   000310 000000                    ZERO    200,0

     1950    14518        /*D*  IF THE FAULT OCCURRED WHILE DELTA WAS IN CONTRO;, GO TO DICFAULT
     1951    14519              FOR SPECIAL ANALYSIS. OTHERWISE THE FAULT WAS CAUSED BY DELTA
     1952    14520              OR BY THE USER.  IF THE FAULT WAS NOT CAUSED BY DELTA GO TO
     1953    14521              USERFAULT TO PROCESS.  IF THE FAULT IS DELTA-CAUSED, TAKE
     1954    14522              APPROPRIATE ACTION.  A DELTA-CAUSED FAULT IS EITHER A
     1955    14523              DERAIL, A MEMORY PROTECT OR A FAULT TAG FAULT.
     1956    14524              */
     1957    14525                            /* Remember the working space quarter in which the fault
     1958    14526                            occurred */
     1959    14527    1        TRAP = '0'B;

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:278  
  14527  2 006216   200032 450100                    STZ     TRAP,,AUTO

     1960    14528    1        YNDEX = S_D.USS$->B$SS.ISR.WSR;    /* Get wsr out of isr in safe store */

  14528  2 006217   000000 470400 xsym               LDP0    S_D$
         2 006220   000005 471500                    LDP1    5,,PR0
         2 006221   100010 236100                    LDQ     8,,PR1
         2 006222   000004 772000                    QRL     4
         2 006223   000007 376007                    ANQ     7,DL
         2 006224   200036 756100                    STQ     YNDEX,,AUTO

     1961    14529    1        S_D.EWSQ# = WSR(YNDEX);            /* Get contents of designated WSR..

  14529  2 006225   000100 101406                    MRL     fill='000'O
         2 006226   000000 000001 xsym               ADSC9   WSR,Q                    cn=0,n=1
         2 006227   000011 000004                    ADSC9   9,,PR0                   cn=0,n=4

     1962    14530                                           All wsrs were saved in DXC$SETUP at entry */
     1963    14531    1        S_D.FAULT = S_D.USS$->B$SS.FC;

  14531  2 006230   100005 236100                    LDQ     5,,PR1
         2 006231   000023 772000                    QRL     19
         2 006232   000037 376007                    ANQ     31,DL
         2 006233   000030 756100                    STQ     24,,PR0

     1964    14532    1        S_D.DO$ = ADDR(NIL);

  14532  2 006234   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 006235   000031 756100                    STQ     25,,PR0

     1965    14533    1        CALL ORIG_USE;

  14533  2 006236   006373 701000 2                  TSX1    ORIG_USE
         2 006237   000000 011000                    NOP     0

     1966    14534    1        S_D.NODE = CNODE$ -> UBIN36;

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:279  
  14534  2 006240   000000 470400 xsym               LDP0    CNODE$
         2 006241   000000 471400 xsym               LDP1    S_D$
         2 006242   000000 235100                    LDA     0,,PR0
         2 006243   104706 755100                    STA     2502,,PR1

     1967    14535    1        S_D.UNODE.CURRENT = CNODE$ -> UBIN36;

  14535  2 006244   000000 235100                    LDA     0,,PR0
         2 006245   104757 755100                    STA     2543,,PR1

     1968    14536    1        S_D.UNODE.USENODE = CNODE$ -> UBIN36;

  14536  2 006246   000000 235100                    LDA     0,,PR0
         2 006247   104760 755100                    STA     2544,,PR1

     1969    14537    1        CALL DXB$CUSE;                     /* Establish current environment */

  14537  2 006250   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 006251   000000 701000 xent               TSX1    DXB$CUSE
         2 006252   000000 011000                    NOP     0

     1970    14538    1        S_D.GOIC = S_D.USS$->B$SS.IC;      /* Set it incase we leave quick */

  14538  2 006253   000000 470400 xsym               LDP0    S_D$
         2 006254   000005 471500                    LDP1    5,,PR0
         2 006255   100004 236100                    LDQ     4,,PR1
         2 006256   000022 772000                    QRL     18
         2 006257   000001 756100                    STQ     1,,PR0

     1971    14539    1        IF S_D.USS$->B$SS.IR.MIR = '0'B AND RECOVER = 0 AND NOT S_D.HW_FLTIC_OK

  14539  2 006260   100004 236100                    LDQ     4,,PR1
         2 006261   000040 316007                    CANQ    32,DL
         2 006262   006274 601000 2                  TNZ     s:14542
         2 006263   000000 235000 xsym               LDA     RECOVER
         2 006264   006274 601000 2                  TNZ     s:14542
         2 006265   007101 234100                    SZN     3649,,PR0
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:280  
         2 006266   006274 604000 2                  TMI     s:14542

     1972    14540                                 /* Adjust ic only if we didn't come from recovery */
     1973    14541    1        THEN S_D.TIC = S_D.USS$->B$SS.IC - 1;

  14541  2 006267   100004 236100                    LDQ     4,,PR1
         2 006270   000022 772000                    QRL     18
         2 006271   000001 136007                    SBLQ    1,DL
         2 006272   000027 756100                    STQ     23,,PR0
         2 006273   006277 710000 2                  TRA     s:14543

     1974    14542    1        ELSE S_D.TIC = S_D.USS$->B$SS.IC;

  14542  2 006274   100004 236100                    LDQ     4,,PR1
         2 006275   000022 772000                    QRL     18
         2 006276   000027 756100                    STQ     23,,PR0

     1975    14543    1        S_D.FAULTINS$ = PINCRW(UIS$,S_D.TIC);

  14543  2 006277   000022 736000                    QLS     18
         2 006300   000000 036000 xsym               ADLQ    UIS$
         2 006301   000003 756100                    STQ     3,,PR0

     1976    14544    1        CALL DDS$ES_INQ(S_D.TIC);

  14544  2 006302   000000 236000 xsym               LDQ     S_D$
         2 006303   000027 036003                    ADLQ    23,DU
         2 006304   200300 756100                    STQ     LS+1,,AUTO
         2 006305   200300 630500                    EPPR0   LS+1,,AUTO
         2 006306   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 006307   000000 701000 xent               TSX1    DDS$ES_INQ
         2 006310   000000 011000                    NOP     0

     1977    14545    1        CALL DDS$SET_Q2C;

  14545  2 006311   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 006312   000000 701000 xent               TSX1    DDS$SET_Q2C
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:281  
         2 006313   000000 011000                    NOP     0

     1978    14546                                                /* Check for safe store full */
     1979    14547    1        CALL DXA$SSF;

  14547  2 006314   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 006315   000000 701000 xent               TSX1    DXA$SSF
         2 006316   000000 011000                    NOP     0

     1980    14548    2        IF RECOVER ~= 0 THEN DO;

  14548  2 006317   000000 235000 xsym               LDA     RECOVER
         2 006320   006341 600000 2                  TZE     s:14560

     1981    14549    2             S_D.SAVEIC = S_D.TIC;

  14549  2 006321   000000 470400 xsym               LDP0    S_D$
         2 006322   000027 235100                    LDA     23,,PR0
         2 006323   000002 755100                    STA     2,,PR0

     1982    14550    2             IF S_D.K$EEP.TYPE = KEEP_NONE

  14550  2 006324   004626 235100                    LDA     2454,,PR0
         2 006325   000002 115007                    CMPA    2,DL
         2 006326   006340 601000 2                  TNZ     s:14558

     1983    14551    3             THEN DO;

     1984    14552    3                  CALL DXA$QUIT ALTRET(REPORT_SCREECH);
             14552                           /* ALTRET means recovery in progress,

  14552  2 006327   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 006330   000000 701000 xent               TSX1    DXA$QUIT
         2 006331   006366 702000 2                  TSX2    REPORT_SCREECH

     1985    14553                                                so sneak out.  Return means
     1986    14554                                                recovery not in progress so.. */
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:282  
     1987    14555    3                  S_D.ERROR = E@DELBUG;    /* E@DELBUG */

  14555  2 006332   000766 235007                    LDA     502,DL
         2 006333   000000 470400 xsym               LDP0    S_D$
         2 006334   000013 755100                    STA     11,,PR0

     1988    14556    3                  CALL DDE$ERROR;

  14556  2 006335   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 006336   000000 701000 xent               TSX1    DDE$ERROR
         2 006337   000000 011000                    NOP     0

     1989    14557    3                END;

     1990    14558    2             GOTO RECOVERY_ENTRY;

  14558  2 006340   006203 710000 2                  TRA     RECOVERY_ENTRY

     1991    14559    2           END;
     1992    14560    1        IF S_D.FAULT = FAULT_DERAIL THEN GOTO DERAIL;

  14560  2 006341   000000 470400 xsym               LDP0    S_D$
         2 006342   000030 235100                    LDA     24,,PR0
         2 006343   000006 115007                    CMPA    6,DL
         2 006344   003737 600000 2                  TZE     DERAIL

     1993    14561    1        IF S_D.T$T.ACTIVE THEN CALL DDB$TTRESET;

  14561  2 006345   004707 234100                    SZN     2503,,PR0
         2 006346   006352 605000 2                  TPL     s:14562

  14561  2 006347   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 006350   000000 701000 xent               TSX1    DDB$TTRESET
         2 006351   000000 011000                    NOP     0

     1994    14562    1        IF S_D.FAULT = FAULT_MEMPROT THEN GOTO USER_FAULT;

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:283  
  14562  2 006352   000000 470400 xsym               LDP0    S_D$
         2 006353   000030 235100                    LDA     24,,PR0
         2 006354   000025 115007                    CMPA    21,DL
         2 006355   003371 600000 2                  TZE     USER_FAULT

     1995    14563    1        IF S_D.FAULT = FAULT_FAULTTAG THEN GOTO FAULTAG;

  14563  2 006356   000003 115007                    CMPA    3,DL
         2 006357   003617 600000 2                  TZE     FAULTAG

     1996    14564    1        IF S_D.FAULT = FAULT_BREAK

  14564  2 006360   000017 115007                    CMPA    15,DL
         2 006361   006365 601000 2                  TNZ     s:14569

     1997    14565    2        THEN DO;

     1998    14566    2             S_D.SAVEIC = S_D.TIC;

  14566  2 006362   000027 235100                    LDA     23,,PR0
         2 006363   000002 755100                    STA     2,,PR0

     1999    14567    2             GOTO RECOVERY_ENTRY;          /* Don't bump ic */

  14567  2 006364   006203 710000 2                  TRA     RECOVERY_ENTRY

     2000    14568    2           END;
     2001    14569    1        GOTO USER_FAULT;

  14569  2 006365   003371 710000 2                  TRA     USER_FAULT

     2002    14570                                                /**/
     2003    14571    1   REPORT_SCREECH:
     2004    14572    1        CALL DDR$REPORT(R_SCREECH);

  14572  2 006366   000065 630400 3     REPORT_SCRE* EPPR0   53
         2 006367   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:284  
         2 006370   000000 701000 xent               TSX1    DDR$REPORT
         2 006371   000000 011000                    NOP     0

     2005    14573    1        GOTO USERGO0;

  14573  2 006372   005201 710000 2                  TRA     USERGO0

     2006    14574    1   ORIG_USE: PROC;

  14574  2 006373   200276 741300       ORIG_USE     STX1  ! FPT$WRITE+12,,AUTO

     2007    14575    2   DCL LS UBIN;
     2008    14576    2        USE_ORIG$ -> U$SE = '1'B;          /* Set U$SE.CUR, clear all else */

  14576  2 006374   000000 470400 xsym               LDP0    USE_ORIG$
         2 006375   000100 100400                    MLR     fill='000'O
         2 006376   000030 000001 xsym               ADSC9   B_VECTNIL+24             cn=0,n=1
         2 006377   000000 000024                    ADSC9   0,,PR0                   cn=0,n=20

     2009    14577    3        DO CASE(S_D.EWSQ#);

  14577  2 006400   000000 470400 xsym               LDP0    S_D$
         2 006401   000011 235100                    LDA     9,,PR0
         2 006402   000011 115007                    CMPA    9,DL
         2 006403   006405 602005 2                  TNC     s:14577+5,AL
         2 006404   006455 710000 2                  TRA     s:14594
         2 006405   006416 710000 2                  TRA     s:14579
         2 006406   006423 710000 2                  TRA     s:14581
         2 006407   006455 710000 2                  TRA     s:14594
         2 006410   006455 710000 2                  TRA     s:14594
         2 006411   006441 710000 2                  TRA     s:14586
         2 006412   006444 710000 2                  TRA     s:14588
         2 006413   006447 710000 2                  TRA     s:14590
         2 006414   006455 710000 2                  TRA     s:14594
         2 006415   006452 710000 2                  TRA     s:14592

     2010    14578    3          CASE(%REALWSQ);                  /* 'USE REAL' for ewsq = %REALWSQ */
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:285  

     2011    14579    3             USE_ORIG$->U$SE.TYPE = USE_REAL; RETURN; /* USE_REAL */

  14579  2 006416   000001 236007                    LDQ     1,DL
         2 006417   000000 471400 xsym               LDP1    USE_ORIG$
         2 006420   100001 756100                    STQ     1,,PR1

  14579  2 006421   200276 221300                    LDX1  ! FPT$WRITE+12,,AUTO
         2 006422   000001 702211                    TSX2  ! 1,X1

     2012    14580    3          CASE(%MONWSQ);                   /* 'USE MON' for EWSQ# = %MONWSQ */

     2013    14581    3             USE_ORIG$->U$SE.TYPE = USE_MON; /* USE_MON */

  14581  2 006423   000000 471400 xsym               LDP1    USE_ORIG$
         2 006424   100001 450100                    STZ     1,,PR1

     2014    14582    3             CALL DXA$GET_APT1(%USERWSQ, USE_ORIG$ -> U$SE.APT);
             14582                      /* Always save current %USERWSQ */

  14582  2 006425   000000 236000 xsym               LDQ     USE_ORIG$
         2 006426   000003 036003                    ADLQ    3,DU
         2 006427   000051 235000 3                  LDA     41
         2 006430   200300 757100                    STAQ    LS+1,,AUTO
         2 006431   200300 630500                    EPPR0   LS+1,,AUTO
         2 006432   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 006433   000000 701000 xent               TSX1    DXA$GET_APT1
         2 006434   000000 011000                    NOP     0

     2015    14583    3             USE_ORIG$ -> U$SE.LS = 0;     /* Flag to leave wsr7 alone */

  14583  2 006435   000000 470400 xsym               LDP0    USE_ORIG$
         2 006436   000002 450100                    STZ     2,,PR0

     2016    14584    3             RETURN;

  14584  2 006437   200276 221300                    LDX1  ! FPT$WRITE+12,,AUTO
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:286  
         2 006440   000001 702211                    TSX2  ! 1,X1

     2017    14585    3          CASE(%CPWSQ);                    /* 'USE USER,ICP for %CPWSQ */

     2018    14586    3             LS = 4;

  14586  2 006441   000004 236007                    LDQ     4,DL
         2 006442   200277 756100                    STQ     LS,,AUTO
         2 006443   006501 710000 2                  TRA     s:14600

     2019    14587    3          CASE(%DBWSQ);                    /* 'USE USER,IDB for %DBWSQ */

     2020    14588    3             LS = 2;

  14588  2 006444   000002 236007                    LDQ     2,DL
         2 006445   200277 756100                    STQ     LS,,AUTO
         2 006446   006501 710000 2                  TRA     s:14600

     2021    14589    3          CASE(%ASLWSQ);                   /* 'USE USER,ASL for %ASLWSQ */

     2022    14590    3             LS = 3;

  14590  2 006447   000003 236007                    LDQ     3,DL
         2 006450   200277 756100                    STQ     LS,,AUTO
         2 006451   006501 710000 2                  TRA     s:14600

     2023    14591    3          CASE(%USERWSQ);                  /* 'USE CURRENT USER for %USERWSQ */

     2024    14592    3             LS = 1;

  14592  2 006452   000001 236007                    LDQ     1,DL
         2 006453   200277 756100                    STQ     LS,,AUTO
         2 006454   006501 710000 2                  TRA     s:14600

     2025    14593    3          CASE(ELSE);                      /* Who is this??? */

     2026    14594    3             S_D.ERROR = E@BAD_EWSQ;       /* E@BAD_EWSQ */
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:287  

  14594  2 006455   000774 236007                    LDQ     508,DL
         2 006456   000013 756100                    STQ     11,,PR0

     2027    14595    3             CALL DDE$ERROR;

  14595  2 006457   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 006460   000000 701000 xent               TSX1    DDE$ERROR
         2 006461   000000 011000                    NOP     0

     2028    14596    3             USE_ORIG$->U$SE.TYPE = USE_PT; /* Use pt @ ewsq - USE_PT */

  14596  2 006462   000002 235007                    LDA     2,DL
         2 006463   000000 470400 xsym               LDP0    USE_ORIG$
         2 006464   000001 755100                    STA     1,,PR0

     2029    14597    3             CALL DXA$GET_APT1(S_D.EWSQ#,USE_ORIG$->U$SE.APT);

  14597  2 006465   000000 236000 xsym               LDQ     USE_ORIG$
         2 006466   000003 036003                    ADLQ    3,DU
         2 006467   200301 756100                    STQ     LS+2,,AUTO
         2 006470   000000 236000 xsym               LDQ     S_D$
         2 006471   000011 036003                    ADLQ    9,DU
         2 006472   200300 756100                    STQ     LS+1,,AUTO
         2 006473   200300 630500                    EPPR0   LS+1,,AUTO
         2 006474   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 006475   000000 701000 xent               TSX1    DXA$GET_APT1
         2 006476   000000 011000                    NOP     0

     2030    14598    3             RETURN;

  14598  2 006477   200276 221300                    LDX1  ! FPT$WRITE+12,,AUTO
         2 006500   000001 702211                    TSX2  ! 1,X1

     2031    14599    3          END;

     2032    14600    2        USE_ORIG$->U$SE.TYPE = USE_USER@;  /* USE_USER@ */
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:288  

  14600  2 006501   000003 235007                    LDA     3,DL
         2 006502   000000 471400 xsym               LDP1    USE_ORIG$
         2 006503   100001 755100                    STA     1,,PR1

     2033    14601    2        USE_ORIG$->U$SE.USERNO = 0;        /* Current user */

  14601  2 006504   100004 450100                    STZ     4,,PR1

     2034    14602    2        USE_ORIG$->U$SE.LS = LS;

  14602  2 006505   100002 756100                    STQ     2,,PR1

     2035    14603    2        CALL DXA$GET_APT1(%USERWSQ, USE_ORIG$ -> U$SE.APT); /* %USERWSQ */

  14603  2 006506   000000 236000 xsym               LDQ     USE_ORIG$
         2 006507   000003 036003                    ADLQ    3,DU
         2 006510   000051 235000 3                  LDA     41
         2 006511   200300 757100                    STAQ    LS+1,,AUTO
         2 006512   200300 630500                    EPPR0   LS+1,,AUTO
         2 006513   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 006514   000000 701000 xent               TSX1    DXA$GET_APT1
         2 006515   000000 011000                    NOP     0

     2036    14604                                                /* Get apt for current user */
     2037    14605    2        RETURN;

  14605  2 006516   200276 221300                    LDX1  ! FPT$WRITE+12,,AUTO
         2 006517   000001 702211                    TSX2  ! 1,X1

SHRINKC
 Sect OctLoc
   0     000   ****** 777640   ****** 006000   777776 670604   ****** 713400    ................
   0     004   000000 221770                                                    ....

FPT_DRTN
 Sect OctLoc
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:289  
   0     006   000000 177640   000000 006014   000000 177640   000000 006014    ................
   0     012   000003 777640   000020 006000   000000 177640   000000 006014    ................
   0     016   000000 177640   000000 006014   000000 000000   000000 000000    ................
   0     022   000000 000000   000000 000000                                    ........

FPT_XCON
 Sect OctLoc
   0     024   000001 777640   000030 006000   000000 177640   000000 006014    ................
   0     030   000000 000000   000000 000000                                    ........

FPT_INT
 Sect OctLoc
   0     032   000001 777640   000034 006000   000000 000000   000000 000000    ................

FPT_TRAP
 Sect OctLoc
   0     036   000005 777640   000042 006000   000000 177640   000000 006014    ....."..........
   0     042   000000 000000   000000 000000   000000 000000   000000 000000    ................
   0     046   525062 525254   000000 000000                                    .2......

FPT$EVENT
 Sect OctLoc
   0     050   000001 777640   000052 006000   000000 000000   000000 000000    .....*..........

FPT_PRIV
 Sect OctLoc
   0     054   000001 777640   000056 006000   000000 000001   400000 000000    ................

SAD1
 Sect OctLoc
   0     060   000001 777640   000062 006000   006021 006014   ****** ******    .....2..........

SAD2
 Sect OctLoc
   0     064   000001 777640   000066 006000   006022 006132   ****** ******    .....6.....Z....

SAD3
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:290  
 Sect OctLoc
   0     070   000001 777640   000072 006000   006023 006014   ****** ******    .....:..........

SAD4
 Sect OctLoc
   0     074   000001 777640   000076 006000   006024 006014   ****** ******    .....>..........

SAD5
 Sect OctLoc
   0     100   000001 777640   000102 006000   006026 006014   ****** ******    .....B..........

SAD6
 Sect OctLoc
   0     104   000001 777640   000106 006000   006027 006133   ****** ******    .....F.....[....

SNAP_MESSAGE
 Sect OctLoc
   0     110   000001 777640   000116 006000   000000 177640   000000 006014    .....N..........
   0     114   000000 177640   000000 006014                                    ........

SC_MESSAGE
 Sect OctLoc
   0     116   042530 013325   000000 101740                                    ".....A.

SNAP_EVENT
 Sect OctLoc
   0     120   000001 777640   000126 006000   000000 177640   000000 006014    .....V..........
   0     124   000000 177640   000000 006014                                    ........

SC_EVENT
 Sect OctLoc
   0     126   042530 013315   000000 101740                                    ".....A.

FPT_OPEN
 Sect OctLoc
   0     130   000025 777640   000174 006000   000000 177640   000000 006014    .....|..........
   0     134   000000 177640   000000 006014   000000 177640   000000 006014    ................
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:291  
   0     174*  000000 000042   000000 000000   252525 000000   000040 252520    ..."......... ..
   0     200   000040 040040   000000 000000   000000 777777   000000 000000    .   ............
   0     204   000000 000000   000000 000000   000000 000000   000000 000000    ................
   0     210   255000 622000   000000 000000   000000 000000   111250 000000    ............I...
   0     214   040040 040040   000000 000000   000000 000000   000000 000000        ............
   0     220   000000 000000   ****** ******                                    ........

MESSAGE_BUF
 Sect OctLoc
   0     222   037125 163145   162055 040157   162040 151156   163164 141154    .User- or instal
   0     226   154141 164151   157156 055163   145164 040155   145155 157162    lation-set memor
   0     232   171040 154151   155151 164040   162145 141143   150145 144056    y limit reached.

FPT_WRITE
 Sect OctLoc
   0     236   000003 777640   000246 006000   000000 177640   000000 006014    ................
   0     242   000013 777640   000222 006000   000000 177640   000000 006014    ................
   0     246   000000 400400   000000 000000   000000 000000   100000 000000    ............@...

FPT_EOM
 Sect OctLoc
   0     252   000003 777640   000260 006000   000000 177640   000000 006014    ................
   0     256   000007 777640   000264 006000   000000 000000   000000 000000    ................
   0     262   001000 000000   000000 000000                                    ........

VLP_EOMTABLE
 Sect OctLoc
   0     264   010054 000057   000000 000000   000000 000000   000000 000000    .,./............
   0     270   010054 000057   000000 000000   000000 000000   000000 000000    .,./............

(unnamed)
 Sect OctLoc
   0     274   122125 115040   120115 104040   106105 040040   117116 040105    RUM PMD FE  ON E
   0     300   130111 124040   143157 156144   151164 151157   156040 145156    XIT condition en
   0     304   143157 165156   164145 162145   144054 040040   117116 040101    countered,  ON A
   0     310   102117 122124   040143 157156   144151 164151   157156 040145    BORT condition e
   0     314   156143 157165   156164 145162   145144 054040                    ncountered,
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:292  

(unnamed)
 Sect OctLoc
   3     000   000003 777640   000007 777640   000006 006000   000132 600000    .............Z..
   3     004   000002 006000   000015 006000   000000 000032   000006 006000    ................
   3     010   000025 777640   000000 000014   000011 006000   000003 006000    ................
   3     014   000004 006000   000000 000015   000015 006000   000007 006000    ................
   3     020   000030 006000   000000 000017   000021 006000   000000 000027    ................
   3     024   000023 006000   000000 000020   000025 006000   000003 777777    ................
   3     030   000000 000021   000030 006000   000000 000037   000032 006000    ................
   3     034   000000 006003   000001 777640   000000 000036   000036 006000    ................
   3     040   037777 777777   000017 777640   777757 777777   000000 000034    ................
   3     044   000000 177640   000000 006014   000043 006000   000011 006000    .........#......
   3     050   000010 006000   000012 006000   000013 006000   577777 777777    ................
   3     054   000000 000030   000054 006000   000000 000031   000056 006000    .....,..........
   3     060   000000 000033   000060 006000   000003 006000   000000 006000    .....0..........
   3     064   000000 000025   000064 006000                                    .....4..
     2038    14606    2   END ORIG_USE;
     2039    14607    1   END DDA$DELTA;
     2040    14608             %EOD;

PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:293  
--  Include file information  --

   GD_EQUS_E.:E05TOU  is referenced.
   DF_EQUS_E.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GD$MSG_M.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$ROSEG.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   JS$CP6V_C.:E05TOU  is referenced.
   NK_VFC_C.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   UE_ERRORS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   DU_SCODE_C.:E05TOU  is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   B$SS.:E05TOU  cannot be made into a system file and is referenced.
   DD_DEBUG_C.:E05TOU  is referenced.
   DD_ERR_C.:E05TOU  is referenced.
   B$TABLES_C.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure DDA$DELTA.

   Procedure DDA$DELTA requires 3408 words for executable code.
   Procedure DDA$DELTA requires 200 words of local(AUTO) storage.
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:294  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:295  
          MINI XREF LISTING

ALIB_COMMAND
       305**DCL     13371>>ASSIGN
ALIB_SAID_GOBACK
       107**DCL     13005<<ASSIGN  13357<<ASSIGN  13358>>ASSIGN  14162>>IF      14233<<ASSIGN
ASL
       127**DCL     13015<<ASSIGN  13166>>IF
ASLIC_FLAG
       128**DCL     13167<<ASSIGN  13168<<ASSIGN  13172<>CALL
ATT_OFFSET
       165**DCL     14208<<ASSIGN  14209>>DOWHILE 14213>>ASSIGN  14215<<ASSIGN
AT_FIRST.ATT_OFFSET
      5872**DCL     13740>>IF
AT_FIRST.BYPASS_COUNT
      5867**DCL     13235>>ASSIGN  13739>>ASSIGN  14102>>ASSIGN
AT_FIRST.CMD
      5849**DCL     13388>>ASSIGN
AT_FIRST.CURRENT_COUNT
      5868**DCL     13235<<ASSIGN  13739<<ASSIGN  14102<<ASSIGN
AT_FIRST.ORIG_INSTR
      5861**DCL     14069--ASSIGN
AT_FIRST.UNUSED
      5852**DCL      5853--REDEF    5857--REDEF
B$ALIBF.CMDSZ
      8218**DCL     13363>>IF      13373>>ASSIGN
B$COMIO.ARS
      8193**DCL      8193--REDEF
B$COMIO.CODE
      8186**DCL      8186--REDEF    8187--REDEF    8187--REDEF
B$COMIO.ERR.ERR#
      8188**DCL      8188--REDEF
B$COMIO.EVID
      8187**DCL      8187--REDEF    8187--REDEF   13534>>ASSIGN  13565>>ASSIGN
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:296  
B$COMIO.FLAGS.DELTA
      8193**DCL     13525>>IF      13547>>IF
B$COMIO.SUBC2
      8193**DCL     13525>>IF
B$ECCB.XCONF.PROG
      8209**DCL     14309>>IF
B$ECCBI.ECIC
      8215**DCL     14274>>IF      14277>>CALL    14281>>ASSIGN  14284>>IF      14287>>CALL    14289>>ASSIGN
     14321>>IF
B$ECCBI.FLAGS
      8215**DCL     13846>>IF
B$EDEF
      4346**DCL     14023--ASSIGN
B$EDEF.CST
      4392**DCL     13722>>IF      13722>>IF      13722>>IF      13722>>IF      13722>>IF      13722>>IF
     14027>>IF
B$EDEF.LFLAGS.SOURCE
      4351**DCL     13722>>IF      13722>>IF
B$EDEF.OU
      4363**DCL      4369--REDEF
B$EVNT.CODE
      8139**DCL      8139--REDEF    8140--REDEF    8140--REDEF
B$EVNT.ERR.ERR#
      8141**DCL      8141--REDEF
B$EVNT.EVID
      8140**DCL      8140--REDEF    8140--REDEF
B$EVNT.SUBC
      8140**DCL     13473>>IF      13525>>IF      13547>>IF
B$EXCFR.ASL
      8120**DCL      8120--REDEF
B$EXCFR.ASLIC
      8120**DCL     13015>>ASSIGN
B$EXCFR.ECC
      8120**DCL     12978>>IF      13012>>ASSIGN
B$EXCFR.ERR.CODE
      8134**DCL     14441>>ASSIGN
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:297  
B$EXCFR.ERR.ERR#
      8134**DCL      8134--REDEF
B$EXCFR.EVID
      8133**DCL      8133--REDEF    8134--REDEF   13014>>ASSIGN  13219--IF
B$EXCFR.IR
      8121**DCL      8121--REDEF
B$EXCFR.PREVSZ
      8120**DCL      8120--REDEF
B$EXCFR.SUBC
      8132**DCL      8132--REDEF    8133--REDEF    8133--REDEF   12978>>IF      13013>>ASSIGN
B$FLT.ERR.ERR#
      8231**DCL      8232--REDEF
B$FPRG.CODE
      8153**DCL      8153--REDEF    8154--REDEF    8154--REDEF
B$FPRG.DCBNO
      8160**DCL     13480>>ASSIGN
B$FPRG.ERR.ERR#
      8155**DCL      8155--REDEF
B$FPRG.EVID
      8154**DCL      8154--REDEF    8154--REDEF
B$FPRG.SUBC2
      8160**DCL     13473>>IF
B$JIT.CCARS
      7808**DCL     13071>>ASSIGN
B$JIT.CCBUF
      7808**DCL     13049--ASSIGN  13050--ASSIGN  13050--ASSIGN  13070>>ASSIGN
B$JIT.CPFLAGS1.SLEAZE
      7814**DCL      7814--REDEF
B$JIT.ERR.MID
      7721**DCL      7721--REDEF
B$JIT.JRESPEAK
      7882**DCL      7883--REDEF
B$JIT.JUNK
      7920**DCL     14260>>IF      14378>>IF
B$JIT.MODE
      7715**DCL     14473>>IF
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:298  
B$JIT.ORIGINATOR_PORT.FROM_CR
      7991**DCL      7991--REDEF    7992--REDEF
B$JIT.PNR
      7895**DCL      7895--REDEF
B$JIT.TSLINE
      7989**DCL      7990--REDEF
B$JIT$
       170**DCL      7715--IMP-PTR 13049>>ASSIGN  13050>>ASSIGN  13070>>ASSIGN  13071>>ASSIGN  14260>>IF
     14378>>IF      14473>>IF
B$PS1$
       172**DCL     13371>>ASSIGN
B$PS3$
       173**DCL     13357>>ASSIGN  13359>>ASSIGN  13360>>ASSIGN  13361>>ASSIGN
B$RODCB$
      8046**DCL     13102>>ASSIGN
B$ROS$
       174**DCL     13099>>ASSIGN  13100>>ASSIGN
B$ROSEG.DCBPTR$
      8010**DCL     13099>>ASSIGN
B$ROSEG.NUMDCBS
      8012**DCL     13100>>ASSIGN
B$SS.FC
       777**DCL     14531>>ASSIGN
B$SS.IC
       755**DCL     12995>>ASSIGN  14538>>ASSIGN  14541>>ASSIGN  14542>>ASSIGN
B$SS.IR.MIR
       769**DCL     14539>>IF
B$SS.ISR
       790**DCL     14349--ASSIGN
B$SS.ISR.WSR
       793**DCL     14528>>ASSIGN
B$SS.RVA
       788**DCL       789--REDEF
B$TCB.ALT$
      7997**DCL     14441>>ASSIGN
B$TCB.STK$
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:299  
      7997**DCL     12978>>IF      12978>>IF      12995>>ASSIGN  13012>>ASSIGN  13013>>ASSIGN  13014>>ASSIGN
     13015>>ASSIGN  13219>>IF      13363>>IF      13373>>ASSIGN  13434>>IF      13439>>IF      13473>>IF
     13473>>IF      13480>>ASSIGN  13525>>IF      13525>>IF      13525>>IF      13534>>ASSIGN  13547>>IF
     13547>>IF      13565>>ASSIGN  13867>>IF      14309>>IF
B$TCB$
       171**DCL     12978>>IF      12978>>IF      12995>>ASSIGN  13012>>ASSIGN  13013>>ASSIGN  13014>>ASSIGN
     13015>>ASSIGN  13219>>IF      13363>>IF      13373>>ASSIGN  13434>>IF      13439>>IF      13473>>IF
     13473>>IF      13480>>ASSIGN  13525>>IF      13525>>IF      13525>>IF      13534>>ASSIGN  13547>>IF
     13547>>IF      13565>>ASSIGN  13867>>IF      14309>>IF      14441>>ASSIGN
B$XCON.CECCB.GET
      8198**DCL     14309>>IF
B$XCON.ERR.ERR#
      8203**DCL      8203--REDEF
B$XCON.LIMIT.MEM
      8201**DCL      8201--REDEF
B$XCON.RNST
      8198**DCL     13434>>IF      13439>>IF
B$XCON.RNST.MABRT
      8199**DCL     13867>>IF
B$XL_UPPER$
       298**DCL       299--IMP-PTR 13055>>CALLBLT
BAD_PS1
     13400**LABEL   13370--REMEMBR
BAD_PS3
     13405**LABEL   13355--REMEMBR
BAD_SCAN1
     13409**LABEL   13386--CALLALT 13387--GOTO
BRK
     13887**LABEL   12986--REMEMBR
CALL_DRTN
     14378**LABEL   13281--GOTO    14419--GOTO    14426--GOTO
CALL_FAULT
     13875**LABEL   13825--GOTO    13827--GOTO    13829--GOTO    13851--GOTO
CANT_ACCESS
     14464**LABEL   14365--REMEMBR
CANT_STEP
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:300  
     14038**LABEL   13285--CALLALT 14035--CALLALT 14235--CALLALT
CHAR1
       306**DCL     13051>>DOWHILE 13061>>DOWHILE
CHAR4
       307**DCL     13055>>CALLBLT
CHAR_4
       308**DCL     13055<<CALLBLT 13056>>IF      13056>>IF      13058>>IF      13077>>IF
CMD
       119**DCL     13388<<ASSIGN  13389>>IF      13389>>IF      13389>>IF      13389>>IF      13389>>IF
     13389>>IF      13389>>IF      13389>>IF      13389>>IF
CNODE$
       180**DCL     14490>>ASSIGN  14491>>ASSIGN  14492>>ASSIGN  14534>>ASSIGN  14535>>ASSIGN  14536>>ASSIGN
CONTO
     13245**LABEL   13228--GOTO
DCB$
       155**DCL     13099<<ASSIGN  13102>>ASSIGN
DCBNO
       160**DCL     13124<>CALL    13128>>ASSIGN  13129>>ASSIGN  13138<>CALL    13479<>CALL    13486>>ASSIGN
     13487>>ASSIGN  13497--IF      13501>>ASSIGN  13510>>ASSIGN  13517<>CALL    13534<<ASSIGN  13536>>DOWHILE
     13565<<ASSIGN  13567>>DOWHILE 13644>>ASSIGN  14177<>CALL    14251<<ASSIGN
DDA$AT
     12896**DCL-ENT 13233--CALL    14093--CALL
DDA$DO
     12897**DCL-ENT 14206--CALL    14217--CALL
DDA$DOATTACH
     12898**DCL-ENT 13242--CALL    13463--CALL    13744--CALL    13927--CALL    14105--CALL    14146--CALL
DDA$GO
     12899**DCL-ENT 13245--CALL    13938--CALL    14166--CALL    14236--CALL
DDA$KILL1
     12900**DCL-ENT 13673--CALL
DDA$ON
     12901**DCL-ENT 13237--CALL    13455--CALL    13922--CALL
DDA$STEP_DECR
     12902**DCL-ENT 14030--CALL
DDA$STEP_MORE
     12903**DCL-ENT 13285--CALL    14035--CALL    14235--CALL
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:301  
DDB$BREAK
     12904**DCL-ENT 14210--CALL    14272--CALL
DDB$EISRESET
     12905**DCL-ENT 13857--CALL    14067--CALL    14119--CALL    14157--CALL
DDB$INTERP
     12906**DCL-ENT 13869--CALL
DDB$PLANTONE
     12907**DCL-ENT 13247--CALL    13249--CALL    14071--CALL    14167--CALL    14169--CALL    14277--CALL
     14287--CALL
DDB$RESTORE
     12908**DCL-ENT 13204--CALL    13329--CALL    13454--CALL    13920--CALL    13936--CALL    14017--CALL
     14049--CALL    14092--CALL    14130--CALL    14160--CALL
DDB$SET_TT
     12909**DCL-ENT 14003--CALL    14267--CALL
DDB$STEPRESET
     12910**DCL-ENT 13201--CALL    13283--CALL    13326--CALL    13451--CALL    13859--CALL    13917--CALL
     14016--CALL    14089--CALL    14122--CALL    14158--CALL    14276--CALL
DDB$TTRESET
     12911**DCL-ENT 13199--CALL    13324--CALL    13427--CALL    13449--CALL    13824--CALL    13981--CALL
     14000--CALL    14156--CALL    14286--CALL    14561--CALL
DDB$USERFAULT
     12912**DCL-ENT 13881--CALL
DDB$WHENRESET
     12913**DCL-ENT 14117--CALL    14150--CALL    14155--CALL
DDB$XEQRESET
     12914**DCL-ENT 14046--CALL    14128--CALL    14159--CALL
DDC$POP_AS
     12916**DCL-ENT 14327--CALL
DDC$SET_AS
     12915**DCL-ENT 13021--CALL    14432--CALL    14496--CALL    14508--CALL
DDE$ERROR
     12917**DCL-ENT 12975--CALL    13150--CALL    13402--CALL    13407--CALL    13413--CALL    13559--CALL
     13561--CALL    13598--CALL    13610--CALL    13612--CALL    13707--CALL    13709--CALL    13850--CALL
     13877--CALL    14038--CALL    14318--CALL    14359--CALL    14398--CALL    14412--CALL    14445--CALL
     14460--CALL    14465--CALL    14556--CALL    14595--CALL
DDF$FIND_PEDEF
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:302  
     12918**DCL-ENT 13721--CALL    14024--CALL
DDI$SETUP
     12949**DCL-ENT 13029--CALL
DDQ$READ_ALIB
     12920**DCL-ENT 13384--CALL
DDQ$WRITE
     12921**DCL-ENT 13458--CALL    13775--CALL
DDR$REPORT
     12922**DCL-ENT 13090--CALL    13095--CALL    13096--CALL    13146--CALL    13239--CALL    13301--CALL
     13303--CALL    13309--CALL    13365--CALL    13401--CALL    13406--CALL    13683--CALL    13924--CALL
     13935--CALL    14032--CALL    14097--CALL    14098--CALL    14133--CALL    14134--CALL    14135--CALL
     14136--CALL    14223--CALL    14225--CALL    14229--CALL    14509--CALL    14572--CALL
DDS$EMTREE
     12923**DCL-ENT 13194--CALL
DDS$ES_INQ
     12924**DCL-ENT 13344--CALL    14026--CALL    14047--CALL    14544--CALL
DDS$SCAN
     12925**DCL-ENT 14199--CALL
DDS$SCAN1
     12926**DCL-ENT 13075--CALL    13386--CALL
DDS$SCAN2
     12927**DCL-ENT 14214--CALL
DDS$SET_Q2C
     12928**DCL-ENT 13346--CALL    14048--CALL    14545--CALL
DDT$XTAGS
     12929**DCL-ENT 13215--CALL
DERAIL
     13937**LABEL   13426--GOTO    14560--GOTO
DFA$FPRG
     12931**DCL-ENT 13685--CALL
DFA$GET_FPRG_DCB
     12930**DCL-ENT 13124--CALL    13479--CALL    14177--CALL
DFA$GO
     12932**DCL-ENT 13731--CALL
DFA$KILL_FPRG
     12933**DCL-ENT 13139--CALL    13690--CALL
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:303  
DFA$SETUP_FPRG
     12934**DCL-ENT 13138--CALL    13517--CALL
DFA$STOP_FPRGS
     12935**DCL-ENT 13889--CALL
DFA$TRACE_REPORT
     12936**DCL-ENT 13688--CALL
DFQ$READ_FD
     12937**DCL-ENT 13576--CALL
DFR$EVENTRPT
     12938**DCL-ENT 13583--CALL
DFR$REPORT
     12939**DCL-ENT 13713--CALL    13716--CALL    13733--CALL    13754--CALL    13755--CALL    13761--CALL
     13764--CALL    13778--CALL
DICFAULT
       166**DCL     14193<<ASSIGN
DISKBOOT
     14228**LABEL   14493--REMEMBR
DNAME$
       114**DCL     13214<<ASSIGN  13215<>CALL
DO_ATTACH
     13738**LABEL   12987--REMEMBR 13776--GOTO
DO_MESSAGE
     13592**LABEL   12988--REMEMBR
DRL$
       108**DCL     13054<<ASSIGN  14070<<ASSIGN  14071<>CALL
DRLAT
     14073**LABEL   13988--GOTO
DRLEIS
     14045**LABEL   13987--GOTO
DRLSTEP
     14002**LABEL   13982--GOTO
DRLTT
     13988**LABEL   13980--GOTO
DRLWHEN
     14109**LABEL   13984--GOTO
DRLXEQ
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:304  
     14033**LABEL   13983--GOTO
DRTN_ALTRET
     14425**LABEL   14410--CALLALT
DRTN_ERRQUIT
     14412**LABEL   13066--GOTO
DRTN_KLDELTA
     14421**LABEL   12985--REMEMBR
DRTN_QUIT
     14418**LABEL   12984--REMEMBR 13075--CALLALT 13076--GOTO    13562--GOTO    14479--GOTO
DU$NODE
      5792**DCL     13211--ASSIGN
DU$NODE.DNAME$
      5799**DCL     13214>>ASSIGN
DU$NODE.EDEF$
      5795**DCL     13212>>ASSIGN
DU$NODE.EDEF_END$
      5796**DCL     13213>>ASSIGN
DU$TREE.NEXT#
      5787**DCL     13209>>ASSIGN  13216>>ASSIGN
DUA$ALIB
     12941**DCL-ENT 14164--CALL
DUA$EXITDELTA
     12942**DCL-ENT 14185--CALL
DUA$KILL_ANLZ
     12943**DCL-ENT 14383--CALL
DUA$KILL_RUM
     12944**DCL-ENT 14384--CALL
DUA$WHEN
     12945**DCL-ENT 14131--CALL
DUA$WHENIN
     12946**DCL-ENT 14111--CALL
DUA$WHENOUT
     12947**DCL-ENT 13172--CALL
DUD$MINI
     12940**DCL-ENT 13035--CALL    13586--CALL    14399--CALL    14437--CALL
DUE$ERRMSG
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:305  
     12948**DCL-ENT 13135--CALL    13496--CALL    13504--CALL    13513--CALL    13578--CALL    13648--CALL
     14391--CALL    14458--CALL
DUI$1STIME
     12950**DCL-ENT 12973--CALL
DUPLICATE
       157**DCL     13110<<ASSIGN  13113>>DOWHILE 13116<<ASSIGN  13120>>IF
DUR$ECCRPT
     12951**DCL-ENT 13033--CALL    13080--CALL    13151--CALL    13265--CALL    13459--CALL    14435--CALL
     14446--CALL
DUX$BREAK
     12952**DCL-ENT  8438--DCLINIT
DUX$EVENT
     12953**DCL-ENT  8493--DCLINIT
DUX$TRAP
     12954**DCL-ENT  8471--DCLINIT  8471--DCLINIT  8472--DCLINIT  8472--DCLINIT
DUX$XCON
     12955**DCL-ENT  8425--DCLINIT
DUX$XCON1_REL
     12956**DCL-ENT 14385--CALL
DXA$GET_APT1
     12957**DCL-ENT 14486--CALL    14582--CALL    14597--CALL    14603--CALL
DXA$KEYENT
     14494**LABEL   13978--GOTO
DXA$QUIT
     12959**DCL-ENT 14552--CALL
DXA$SSF
     12958**DCL-ENT 14257--CALL    14547--CALL
DXB$CUSE
     12960**DCL-ENT 14537--CALL
DXC$USERGO
     12961**DCL-ENT 14340--CALL
DXI$1STIME
     12962**DCL-ENT 14489--CALL
D_M$DO#
       175**DCL     14470>>ASSIGN  14473--IF
D_SYMBOLS
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:306  
       178**DCL     14020>>IF
D_XDELTA
       176**DCL     13825>>IF      13976>>IF      14193>>IF      14223>>IF      14225>>IF      14260>>IF
     14273>>IF      14295>>IF      14328>>IF      14386>>IF
ECC
       109**DCL     13012<<ASSIGN  13016>>IF      13018>>IF      13048>>IF      13164>>IF      13180>>IF
     13187>>IF      13260>>IF      13295>>IF      13306>>IF      13321>>IF      13425>>IF      13430>>IF
     13473>>IF      13525>>IF      13547>>IF      13829>>IF      13830>>IF      13831>>IF      13832>>IF
     13833>>ASSIGN  13835>>IF      13867>>IF      13867>>IF      13884>>IF      14112>>IF      14134>>IF
     14274>>IF      14277>>CALL    14281>>ASSIGN  14284>>IF      14287>>CALL    14289>>ASSIGN  14303>>IF
     14303>>IF      14309>>IF      14309>>IF      14402>>IF
EDEF$
       110**DCL     13212<<ASSIGN  13215<>CALL    13721<>CALL    13722>>IF      13722>>IF      13722>>IF
     13722>>IF      13722>>IF      13722>>IF      13722>>IF      13722>>IF      14023<<ASSIGN  14024<>CALL
     14027>>IF
EDEF_END$
       111**DCL     13213<<ASSIGN  13215<>CALL
ERR_CODE
       115**DCL     14441<<ASSIGN  14450>>IF      14454>>IF      14454>>IF
EVID
       126**DCL     13014<<ASSIGN  13094>>IF
F$DCB.ACTPOS
      8095**DCL      8095--REDEF
F$DCB.ARS#
      8069**DCL      8069--REDEF
F$DCB.ATTR
      8088**DCL      8089--REDEF
F$DCB.BORROW
      8103**DCL      8103--REDEF    8103--REDEF    8103--REDEF
F$DCB.DCBNAME.L
      8117**DCL      8117--IMP-SIZ
F$DCB.DDEV.UCOUT#
      8076**DCL     14473>>IF
F$DCB.EOMCHAR#
      8073**DCL      8073--REDEF
F$DCB.FCD#
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:307  
      8082**DCL     13105>>IF      13497>>IF
F$DCB.FLDID
      8098**DCL      8098--REDEF
F$DCB.FORM$
      8092**DCL      8092--REDEF
F$DCB.FSECT
      8108**DCL      8108--REDEF
F$DCB.FSN#
      8085**DCL      8085--REDEF    8085--REDEF    8086--REDEF
F$DCB.HEADER$
      8091**DCL      8091--REDEF
F$DCB.IXTNSIZE#
      8089**DCL      8089--REDEF
F$DCB.LASTSTA$
      8078**DCL      8078--REDEF
F$DCB.LVL
      8104**DCL      8104--REDEF
F$DCB.NAME#.C
      8079**DCL      8079--REDEF
F$DCB.NOEOF
      8101**DCL      8101--REDEF
F$DCB.NRECS#
      8090**DCL      8090--REDEF
F$DCB.NRECX
      8109**DCL      8109--REDEF
F$DCB.OHDR
      8101**DCL      8101--REDEF
F$DCB.ORG#
      8084**DCL      8084--REDEF   13105>>IF
F$DCB.PRECNO
      8107**DCL      8107--REDEF
F$DCB.RCSZ
      8113**DCL      8113--REDEF
F$DCB.RES#
      8080**DCL      8080--REDEF   13115>>IF      13122>>ASSIGN
F$DCB.SETX
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:308  
      8092**DCL      8092--REDEF
F$DCB.TAB$
      8092**DCL      8092--REDEF
F$DCB.TDA
      8106**DCL      8107--REDEF
F$DCB.WSN#
      8080**DCL      8080--REDEF
F$DCB.WSR#
      8087**DCL     13105>>IF
F$XCM
      5832**DCL     13230--ASSIGN  13448--ASSIGN  13679--IF      13697--ASSIGN  13773--ASSIGN  13921--ASSIGN
     13986--ASSIGN
F$XCM.CDF
      5841**DCL     14070>>ASSIGN  14086>>IF
F$XCM.CMD
      5833**DCL     13231>>IF      13701>>IF      13701>>IF      13701>>IF      13701>>IF      13712>>IF
     13715>>IF      13717>>IF      13933<<ASSIGN  14084>>IF      14084>>IF      14096>>IF
F$XCM.FAI
      5843**DCL     13234>>ASSIGN  13738>>ASSIGN  14068>>ASSIGN  14101>>ASSIGN  14139>>ASSIGN
F$XCM.SILENT
      5835**DCL     13238>>IF      13456>>IF      13679>>IF      13698>>IF      13923>>IF      14095>>IF
     14132>>IF
FATT$
       116**DCL     13234<<ASSIGN  13235>>ASSIGN  13235>>ASSIGN  14068<<ASSIGN  14069>>ASSIGN  14101<<ASSIGN
     14102>>ASSIGN  14102>>ASSIGN  14139<<ASSIGN  14140>>ASSIGN  14140>>ASSIGN
FAULT
       117**DCL     13637<<ASSIGN  13638>>IF      13679>>IF      13679>>IF      13679>>IF      13693>>IF
     13693>>IF      13696>>ASSIGN  13750>>IF      13758>>ASSIGN  13759>>IF      13771<<ASSIGN  13772>>ASSIGN
     13830<<ASSIGN  13831<<ASSIGN  13832<<ASSIGN  13833<<ASSIGN  13834>>IF      13865>>IF      13875>>IF
     13880>>IF
FAULTAG
     13897**LABEL   13428--GOTO    14563--GOTO
FPRG$CONTEXT.ADDRESS
      5937**DCL     13624<<ASSIGN
FPRG$CONTEXT.DCBNO
      5930**DCL     13536>>DOWHILE 13567>>DOWHILE 14251>>ASSIGN
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:309  
FPRG$CONTEXT.FIXCOM_INDEX
      5953**DCL     13679>>IF      13696>>ASSIGN  13772>>ASSIGN
FPRG$CONTEXT.NEXT$
      5914**DCL     13117>>ASSIGN  13537>>ASSIGN  13568>>ASSIGN  14254>>ASSIGN
FPRG$CONTEXT.ONCALLS_X
      5922**DCL     13719>>IF
FPRG$CONTEXT.ONEXIT
      5961**DCL     13768>>IF      13771>>ASSIGN
FPRG$CONTEXT.READ_FD
      5916**DCL     14248>>IF      14250<<ASSIGN
FPRG$CONTEXT.RES
      5933**DCL     13115>>IF      13664>>ASSIGN
FPRG$CONTEXT.RES_SIZE
      5935**DCL     13665>>ASSIGN
FPRG$CONTEXT.RUFID.ACCT
      5948**DCL     13657<<ASSIGN
FPRG$CONTEXT.RUFID.FNAME.SIZE
      5946**DCL     13655<<ASSIGN
FPRG$CONTEXT.RUFID.FNAME.TEXT
      5947**DCL     13656<<ASSIGN
FPRG$CONTEXT.RUFID.MODTIME
      5951**DCL     13660<<ASSIGN
FPRG$CONTEXT.RUFID.PASS
      5949**DCL     13658<<ASSIGN
FPRG$CONTEXT.RUFID.PSN
      5950**DCL     13659<<ASSIGN
FPRG$CONTEXT.STATE
      5928**DCL     13574<<ASSIGN  13767<<ASSIGN
FPRG$CONTEXT.XDELTA
      5926**DCL     13594>>IF      13625>>IF      13750>>IF      13759>>IF
FPRG_IC
       161**DCL     13615<<ASSIGN  13616>>ASSIGN  13624>>ASSIGN  13685<>CALL    13721<>CALL
FPT$ALIB_V.DLIB
      7704**DCL     13359>>ASSIGN
FPT$ALIB_V.ECHO
      7704**DCL     13360>>ASSIGN
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:310  
FPT$ALIB_V.QUIET
      7704**DCL     13361>>ASSIGN
FPT$ALIB_V.RETRN
      7704**DCL     13357>>ASSIGN
FPT$CLOSE
      9069**DCL     13499<<ASSIGN  13502<>CALL
FPT$CLOSE.SN_
      9069**DCL      9069--REDEF
FPT$CLOSE.UTL_
      9070**DCL      9070--REDEF
FPT$CLOSE.V
      9074**DCL     13500--ASSIGN
FPT$CLOSE.V.DCB#
      9075**DCL     13501<<ASSIGN
FPT$CLOSE.V.EXPIRE#
      9084**DCL      9084--REDEF
FPT$CLOSE.V.TYPE#
      9082**DCL      9082--REDEF
FPT$CLOSE.V.XTNSIZE#
      9079**DCL      9079--REDEF    9081--REDEF
FPT$CLOSE.V_
      9069**DCL     13500<<ASSIGN
FPT$DRTN
      8392**DCL     12976<<ASSIGN  12982<>CALL    13022<<ASSIGN  13026--ASSIGN  13646<>CALL    14410<>CALL
FPT$DRTN.FPRG_FID_
      8393**DCL     13643<<ASSIGN  13651<<ASSIGN  13663<<ASSIGN
FPT$DRTN.REGS_
      8392**DCL     13028<<ASSIGN
FPT$DRTN.V
      8394**DCL     12977--ASSIGN  13023--ASSIGN
FPT$DRTN.V.ALTRTN#
      8397**DCL     14403<<ASSIGN
FPT$DRTN.V.DBRK#
      8398**DCL     14151<<ASSIGN  14269<<ASSIGN
FPT$DRTN.V.DLIB#
      8398**DCL     13359<<ASSIGN  14378>>IF
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:311  
FPT$DRTN.V.ECC#
      8402**DCL     13024<<ASSIGN  14303>>IF      14316<<ASSIGN  14447<<ASSIGN  14451>>IF      14461<<ASSIGN
FPT$DRTN.V.EVENT#
      8398**DCL     13173<<ASSIGN  14366<<ASSIGN
FPT$DRTN.V.FPRG_DCB#
      8403**DCL     13644<<ASSIGN  13650<<ASSIGN  13662<<ASSIGN
FPT$DRTN.V.IC#
      8394**DCL     14346<<ASSIGN  14352<<ASSIGN  14425<<ASSIGN
FPT$DRTN.V.IR#
      8394**DCL      8394--REDEF
FPT$DRTN.V.KLDELTA#
      8399**DCL     12980<<ASSIGN  14260>>IF      14378>>IF      14421<<ASSIGN
FPT$DRTN.V.KPDELTA#
      8399**DCL     14260>>IF      14378>>IF
FPT$DRTN.V.QUIT#
      8397**DCL     12981<<ASSIGN  14260>>IF      14354>>IF      14404>>IF      14418<<ASSIGN
FPT$DRTN.V.SETECC#
      8397**DCL     13025<<ASSIGN  13856<<ASSIGN  14273>>IF      14303>>IF      14303>>IF      14317<<ASSIGN
     14344>>IF      14424<<ASSIGN  14442<<ASSIGN
FPT$DRTN.V.SETSTEPCC#
      8400**DCL     14406<<ASSIGN
FPT$DRTN.V.STEPCC#
      8402**DCL     14407<<ASSIGN
FPT$DRTN.V.WAKE_FD#
      8401**DCL     13645<<ASSIGN  13649<<ASSIGN  13661<<ASSIGN
FPT$DRTN.V_
      8392**DCL     12977<<ASSIGN  13023<<ASSIGN
FPT$EVENT
      8493**DCL     12992<>CALL
FPT$EVENT.V
      8493**DCL      8493--DCLINIT
FPT$WRITE
      9143**DCL     14468<<ASSIGN  14471<>CALL    14476<>CALL
FPT$WRITE.STATION_
      9145**DCL      9145--REDEF
FPT$WRITE.V
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:312  
      9146**DCL     14469--ASSIGN
FPT$WRITE.V.DCB#
      9146**DCL     14470<<ASSIGN  14475<<ASSIGN
FPT$WRITE.V.DVBYTE.VFC#
      9152**DCL      9152--REDEF
FPT$WRITE.V_
      9143**DCL     14469<<ASSIGN
FPTOPEN
      8930**DCL     13126<<ASSIGN  13133<>CALL    13484<<ASSIGN  13494<>CALL
FPTOPEN.ACSVEH_
      8932**DCL      8933--REDEF
FPTOPEN.ALTKEYS_
      8938**DCL      8939--REDEF    8939--REDEF
FPTOPEN.HDR_
      8937**DCL      8938--REDEF
FPTOPEN.TAB_
      8936**DCL      8937--REDEF
FPTOPEN.UHL_
      8930**DCL      8931--REDEF    8931--REDEF
FPTOPEN.V
      8939**DCL     13127--ASSIGN  13485--ASSIGN
FPTOPEN.V.DBGDCBNO#
      8970**DCL     13131<<ASSIGN  13489<<ASSIGN
FPTOPEN.V.DCB#
      8939**DCL     13128<<ASSIGN  13486<<ASSIGN
FPTOPEN.V.DVFC#
      8966**DCL     13493<<ASSIGN
FPTOPEN.V.EVENT#
      8969**DCL     13129<<ASSIGN  13487<<ASSIGN
FPTOPEN.V.FSN#
      8970**DCL      8970--REDEF    8970--REDEF
FPTOPEN.V.ORG#
      8950**DCL     13130<<ASSIGN  13488<<ASSIGN
FPTOPEN.V.RES#
      8954**DCL     13132<<ASSIGN  13490<<ASSIGN
FPTOPEN.V_
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:313  
      8930**DCL     13127<<ASSIGN  13485<<ASSIGN
FPTOPEN.WSN_
      8936**DCL      8936--REDEF
FPTRELDCB
      8986**DCL     13508<<ASSIGN  13511<>CALL
FPTRELDCB.V
      8986**DCL     13509--ASSIGN
FPTRELDCB.V.DCB#
      8986**DCL     13510<<ASSIGN
FPTRELDCB.V_
      8986**DCL     13509<<ASSIGN
FPT_CLOSE
      9027**DCL     13499>>ASSIGN
FPT_CLOSE.SN_
      9027**DCL      9027--REDEF
FPT_CLOSE.UTL_
      9028**DCL      9028--REDEF
FPT_CLOSE.V.EXPIRE#
      9042**DCL      9042--REDEF
FPT_CLOSE.V.TYPE#
      9040**DCL      9040--REDEF
FPT_CLOSE.V.XTNSIZE#
      9037**DCL      9037--REDEF    9039--REDEF
FPT_DRTN
      8368**DCL     12976>>ASSIGN  13022>>ASSIGN
FPT_DRTN.V
      8370**DCL      8369--DCLINIT
FPT_DRTN.V.IR#
      8370**DCL      8370--REDEF
FPT_EOM
      9177**DCL     14389<>CALL
FPT_EOM.V
      9185**DCL      9179--DCLINIT
FPT_INT
      8438**DCL     12989<>CALL
FPT_INT.V
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:314  
      8438**DCL      8438--DCLINIT
FPT_OPEN
      8821**DCL     13126>>ASSIGN  13484>>ASSIGN
FPT_OPEN.ACSVEH_
      8823**DCL      8824--REDEF
FPT_OPEN.ALTKEYS_
      8829**DCL      8830--REDEF    8830--REDEF
FPT_OPEN.HDR_
      8828**DCL      8829--REDEF
FPT_OPEN.TAB_
      8827**DCL      8828--REDEF
FPT_OPEN.UHL_
      8821**DCL      8822--REDEF    8822--REDEF
FPT_OPEN.V
      8830**DCL      8821--DCLINIT
FPT_OPEN.V.FSN#
      8861**DCL      8861--REDEF    8861--REDEF
FPT_OPEN.WSN_
      8827**DCL      8827--REDEF
FPT_PRIV
      8508**DCL     13334<>CALL
FPT_PRIV.V
      8508**DCL      8508--DCLINIT
FPT_RELDCB
      9001**DCL     13508>>ASSIGN
FPT_TRAP
      8470**DCL     12991<>CALL
FPT_TRAP.V
      8470**DCL      8470--DCLINIT
FPT_WRITE
      9111**DCL     14468>>ASSIGN
FPT_WRITE.STATION_
      9113**DCL      9113--REDEF
FPT_WRITE.V
      9114**DCL      9111--DCLINIT
FPT_WRITE.V.DVBYTE.VFC#
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:315  
      9120**DCL      9120--REDEF
FPT_XCON
      8424**DCL     12990<>CALL
FPT_XCON.V
      8425**DCL      8424--DCLINIT
GD$MSG.BRKRQS.IF$CONST.SIZE
     12217**DCL     12217--REDEF
GD$MSG.BRKRQS.IF$CONST.TEXT
     12217**DCL     12218--REDEF   12218--REDEF   12219--REDEF   12220--REDEF
GD$MSG.BRKRSP.ADR$
     12230**DCL     13615>>ASSIGN
GD$MSG.BRKRSP.BRK#
     12231**DCL     12231--REDEF   13637>>ASSIGN
GD$MSG.BRKRSP.DATA
     12232**DCL     13622>>ASSIGN
GD$MSG.BRKRSP.DATA_SIZE
     12232**DCL     13620>>ASSIGN  13621>>DOINDEX
GD$MSG.BRKRSP.ERRCODE
     12232**DCL     13627>>ASSIGN
GD$MSG.BRKRSP.MBU
     12236**DCL     13636>>ASSIGN
GD$MSG.BRKRSP.USER#
     12231**DCL     12231--REDEF   13635>>ASSIGN
GD$MSG.FNC
     12166**DCL     13592>>IF      13592>>IF      13594>>IF      13679>>IF      13686>>IF
GD$MSG.LETMEM_D.VALUE.SIZE
     12189**DCL     12189--REDEF
GD$MSG.LETMEM_D.VALUE.TEXT
     12190**DCL     12190--REDEF   12190--REDEF   12191--REDEF   12192--REDEF
GD$MSG.MESSAGE
     12171**DCL     12171--REDEF   12172--REDEF   12172--REDEF   12173--REDEF   12184--REDEF   12197--REDEF
     12202--REDEF   12209--REDEF   12225--REDEF   12230--REDEF   12236--REDEF   12237--REDEF   12266--REDEF
     12268--REDEF   12279--REDEF   12286--REDEF   12298--REDEF
GD$MSG.SUBFNC
     12166**DCL     12166--REDEF   12170--REDEF
GD$MSG.TSA.I
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:316  
     12238**DCL     12238--REDEF
GD$MSG.TSA.S
     12240**DCL     12240--REDEF
GD$MSG.USERQS.ASDT$
     12266**DCL     12266--REDEF   12267--REDEF
GD$MSG_HOST.BRKRQS.IF$CONST.SIZE
     12373**DCL     12373--REDEF
GD$MSG_HOST.BRKRQS.IF$CONST.TEXT
     12373**DCL     12374--REDEF   12374--REDEF   12375--REDEF   12376--REDEF
GD$MSG_HOST.BRKRSP.BRK#
     12387**DCL     12387--REDEF
GD$MSG_HOST.BRKRSP.ERRCODE
     12388**DCL     13634>>ASSIGN
GD$MSG_HOST.BRKRSP.USER#
     12387**DCL     12387--REDEF
GD$MSG_HOST.LETMEM_D.VALUE.SIZE
     12345**DCL     12345--REDEF
GD$MSG_HOST.LETMEM_D.VALUE.TEXT
     12346**DCL     12346--REDEF   12346--REDEF   12347--REDEF   12348--REDEF
GD$MSG_HOST.MESSAGE
     12327**DCL     12327--REDEF   12328--REDEF   12328--REDEF   12329--REDEF   12340--REDEF   12353--REDEF
     12358--REDEF   12365--REDEF   12381--REDEF   12386--REDEF   12392--REDEF   12393--REDEF   12422--REDEF
     12424--REDEF   12435--REDEF   12442--REDEF   12454--REDEF
GD$MSG_HOST.SUBFNC
     12322**DCL     12322--REDEF   12326--REDEF
GD$MSG_HOST.TSA.I
     12394**DCL     12394--REDEF
GD$MSG_HOST.TSA.S
     12396**DCL     12396--REDEF
GD$MSG_HOST.USERQS.ASDT$
     12422**DCL     12422--REDEF   12423--REDEF
GIVE_UP
     14473**LABEL   14476--CALLALT
HOST_INSTR.I
      5821**DCL     14366>>IF
HOST_INSTR.TAG.TD
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:317  
      5826**DCL      5827--REDEF
HOST_INSTR.TAGG
      5823**DCL      5824--REDEF   13979>>ASSIGN
HOST_INSTR.Y
      5811**DCL      5812--REDEF    5815--REDEF   13975>>ASSIGN  14142>>ASSIGN
H_XDELTA
       177**DCL     14331>>IF      14339>>ASSIGN  14494>>IF      14494>>ASSIGN
I
       118**DCL     13101<<DOINDEX 13102>>ASSIGN  13131>>ASSIGN  13222<<DOINDEX 13223>>IF      13223>>IF
     13224>>ASSIGN  13621<<DOINDEX 13622>>ASSIGN  13622>>ASSIGN  13666<<DOINDEX 13667>>IF      13669>>IF
     13669>>IF      13672>>ASSIGN
L4
     14316**LABEL   14324--GOTO
LENGTH
       120**DCL     13869<>CALL    13870>>ASSIGN
LS IN PROCEDURE ORIG_USE
     14575**DCL     14586<<ASSIGN  14588<<ASSIGN  14590<<ASSIGN  14592<<ASSIGN  14602>>ASSIGN
M$CLOSE
      6268**DCL-ENT 13502--CALL
M$DRTN
      6326**DCL-ENT 12982--CALL    13646--CALL    14410--CALL
M$EOM
      6293**DCL-ENT 14389--CALL
M$EVENT
      6323**DCL-ENT 12992--CALL
M$INT
      6323**DCL-ENT 12989--CALL
M$OPEN
      6268**DCL-ENT 13133--CALL    13494--CALL
M$RELDCB
      6274**DCL-ENT 13511--CALL
M$SAD
      6307**DCL-ENT 13335--CALL    13336--CALL    13337--CALL    13338--CALL    13339--CALL    13340--CALL
M$SCREECH
      6282**DCL-ENT 13556--CALL    13602--CALL
M$SPRIV
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:318  
      6327**DCL-ENT 13334--CALL
M$TRAP
      6322**DCL-ENT 12991--CALL
M$UC
      6292**DCL     14475>>ASSIGN
M$WRITE
      6269**DCL-ENT 14471--CALL    14476--CALL
M$XCON
      6323**DCL-ENT 12990--CALL
M$XXX
      6280**DCL-ENT 13152--CALL    14360--CALL
MESSAGE_BUF
      9088**DCL      9112--DCLINIT  9113--DCLINIT
MIS$
       179**DCL     14228>>ASSIGN  14339>>ASSIGN  14494>>ASSIGN
MON_APT
       181**DCL     14486<>CALL
NDCBS
       159**DCL     13100<<ASSIGN  13101>>DOINDEX
NEVER
     13596**LABEL   13601--REMEMBR 13602--CALLALT
NEVER1
     13556**LABEL   13555--REMEMBR 13556--CALLALT
NODE
       112**DCL     13209<<ASSIGN  13210>>DOWHILE 13211>>ASSIGN  13216<<ASSIGN  13216>>ASSIGN
NODE$
       113**DCL     13211<<ASSIGN  13212>>ASSIGN  13213>>ASSIGN  13214>>ASSIGN
NOEOM
     14391**LABEL   14389--CALLALT
NOT_PRIV
     13401**LABEL   13335--CALLALT 13336--CALLALT 13337--CALLALT 13338--CALLALT 13339--CALLALT 13340--CALLALT
NO_REPORT
     13731**LABEL   13721--CALLALT
OKAY
     14470**LABEL   14471--CALLALT
OLAY_FLAGS.V
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:319  
       311**DCL     13219>>IF
OPDCBNO
       164**DCL     13480<<ASSIGN  13481>>ASSIGN  13489>>ASSIGN  14178<<ASSIGN
OPEN_FPRG
     13484**LABEL   14180--GOTO
ORIG_USE
     14574**PROC    14488--CALL    14533--CALL
PROCESS_EVENT
     13573**LABEL   13541--GOTO    13691--GOTO    14252--GOTO
PTR$
       122**DCL     13049<<ASSIGN  13051>>DOWHILE 13052<<ASSIGN  13052>>ASSIGN  13054>>ASSIGN  13055>>CALLBLT
     13060<<ASSIGN  13060>>ASSIGN  13061>>DOWHILE 13062<<ASSIGN  13062>>ASSIGN  13063>>IF      13382<<ASSIGN
     13384<>CALL
RECOVER
       182**DCL     14539>>IF      14548>>IF
RECOVERY_ENTRY
     14504**LABEL   14558--GOTO    14567--GOTO
REPORT_ONCALL
     13733**LABEL   13730--GOTO
REPORT_SCREECH
     14572**LABEL   14552--CALLALT
RES
       162**DCL     13122<<ASSIGN  13138<>CALL    13664<<ASSIGN  13669>>IF
RESTORE_ALL
     14151**LABEL   13172--CALLALT 13267--GOTO    13310--GOTO    13515--GOTO    13518--GOTO    13579--GOTO
     13652--GOTO    13688--CALLALT 13710--GOTO    13731--CALLALT 13783--GOTO    14003--CALLALT 14267--CALLALT
     14272--CALLALT 14319--GOTO    14448--GOTO    14462--GOTO    14466--GOTO    14510--GOTO
RES_SIZE
       163**DCL     13123<<ASSIGN  13138<>CALL    13665<<ASSIGN  13669>>IF
SAD1
      8523**DCL     13335<>CALL
SAD1.V
      8523**DCL      8523--DCLINIT
SAD2
      8538**DCL     13336<>CALL
SAD2.V
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:320  
      8538**DCL      8538--DCLINIT
SAD3
      8553**DCL     13337<>CALL
SAD3.V
      8553**DCL      8553--DCLINIT
SAD4
      8568**DCL     13338<>CALL
SAD4.V
      8568**DCL      8568--DCLINIT
SAD5
      8583**DCL     13339<>CALL
SAD5.V
      8583**DCL      8583--DCLINIT
SAD6
      8598**DCL     13340<>CALL
SAD6.V
      8598**DCL      8598--DCLINIT
SAVEIC
       123**DCL     14019<<ASSIGN  14024<>CALL    14026<>CALL
SAVEINS$
       124**DCL     14069<<ASSIGN  14071<>CALL
SA_FAULT
     14225**LABEL   14216--REMEMBR
SCAN_COMMAND
     14159**LABEL   13091--GOTO    13136--GOTO    13138--CALLALT 13144--GOTO    13147--GOTO    13244--GOTO
     13245--CALLALT 13304--GOTO    13366--GOTO    13398--GOTO    13403--GOTO    13408--GOTO    13409--GOTO
     13414--GOTO    13465--GOTO    13517--CALLALT 13599--GOTO    13613--GOTO    13892--GOTO    13897--GOTO
     13929--GOTO    13938--CALLALT 14034--GOTO    14039--GOTO    14050--GOTO    14107--GOTO    14148--GOTO
     14166--CALLALT 14186--GOTO    14207--GOTO    14210--CALLALT 14214--CALLALT 14219--GOTO    14221--GOTO
     14224--GOTO    14230--GOTO    14236--CALLALT 14257--CALLALT 14497--GOTO
SCAN_COMMAND1
     14203**LABEL   13082--GOTO    13399--GOTO
SCAN_COMMAND2
     14215**LABEL   14226--GOTO
SC_EVENT
      8710**DCL      8690--DCLINIT
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:321  
SC_MESSAGE
      8633**DCL      8613--DCLINIT
SHRINK
      5752**DCL     14348<<ASSIGN
SHRINK.CLIMB.IC
      5760**DCL     14351<<ASSIGN
SHRINK.VECT.BOUND
      5754**DCL     14349<<ASSIGN
SHRINK.VECT.OFFSET
      5756**DCL     14350<<ASSIGN
SHRINKC
      5773**DCL     14348>>ASSIGN
SHRUNKISR.BOUND
       317**DCL     14349>>ASSIGN
SKIP_STEP
     14281**LABEL   14277--CALLALT
SKIP_TT
     14291**LABEL   13190--GOTO    14287--CALLALT
SNAP_EVENT
      8690**DCL     13556<>CALL
SNAP_MESSAGE
      8613**DCL     13602<>CALL
STEP_MORE
     14035**LABEL   14024--CALLALT 14026--CALLALT 14028--GOTO    14030--CALLALT
SUBC
       125**DCL       305--IMP-SIZ 13013<<ASSIGN  13088>>DOCASE  13164>>IF      13191>>ASSIGN  13263>>IF
     13298>>IF      13371>>ASSIGN  13426>>IF      13428>>IF      13829>>IF      13830>>ASSIGN  13831>>ASSIGN
     13832>>ASSIGN  13884>>IF      14303>>IF      14309>>IF
S_D.ACCESS
     10669**DCL     13356<<ASSIGN  13362<<ASSIGN  13369<<ASSIGN  13372<<ASSIGN  14364<<ASSIGN  14367<<ASSIGN
S_D.ACMDS$
     10853**DCL     14211<<ASSIGN
S_D.ACMDS_OFF
     10851**DCL     14213<<ASSIGN  14215>>ASSIGN
S_D.ACMDS_SIZE
     10855**DCL     14212<<ASSIGN
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:322  
S_D.ACT
     10843**DCL     13383<<ASSIGN
S_D.ACTUALIC
     11143**DCL     14351>>ASSIGN  14425>>ASSIGN
S_D.AFD#
     11663**DCL     14175>>IF      14179<<ASSIGN
S_D.ALIB
     11386**DCL     13003<<ASSIGN  13323<<ASSIGN  14356>>IF      14362>>IF
S_D.ALIB_SAID_ECHO
     10760**DCL     13007<<ASSIGN  13360<<ASSIGN  13380>>IF
S_D.ALIB_SAID_GOBACK
     10772**DCL     13358<<ASSIGN
S_D.ALIB_SAID_QUIET
     10762**DCL     13006<<ASSIGN  13361<<ASSIGN
S_D.ANLZ
     11282**DCL     13330>>IF      13332>>IF      14356>>IF      14362>>IF      14383>>IF
S_D.ANLZRUM_IC
     11376**DCL     13343>>ASSIGN
S_D.ANLZ_FILE
     11346**DCL     13332>>IF      13349>>IF      14371>>IF
S_D.BATCH
     11109**DCL     14386>>IF
S_D.BREAK
     10679**DCL     13891<<ASSIGN  13894<<ASSIGN  14200<<ASSIGN
S_D.BREAK_PRINTED
     11447**DCL     14201<<ASSIGN
S_D.BRKRSP_ERRCODE
     11469**DCL     13632<<ASSIGN  13634<<ASSIGN
S_D.BYPASS
     11062**DCL     14020>>IF
S_D.CAN_I_DO_BREAK
     11688**DCL     13880<<ASSIGN  14409<<ASSIGN
S_D.CURRENT_CHANNEL
     11582**DCL     11584--REDEF
S_D.CURRENT_FPRG_CONTEXT$
     10782**DCL     13573<<ASSIGN  13574>>ASSIGN  13576<>CALL    13624>>ASSIGN  13625>>IF      13655>>ASSIGN
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:323  
     13656>>ASSIGN  13657>>ASSIGN  13658>>ASSIGN  13659>>ASSIGN  13660>>ASSIGN  13664>>ASSIGN  13665>>ASSIGN
     13679>>IF      13696>>ASSIGN  13719>>IF      13750>>IF      13759>>IF      13767>>ASSIGN  13768>>IF
     13771>>ASSIGN  13772>>ASSIGN
S_D.DEBUG
     11237**DCL     13034>>IF      13584>>IF      14436>>IF
S_D.DEBUGA
     10734**DCL     10736--REDEF   13031>>IF      13581>>IF      14395>>IF      14433>>IF
S_D.DEBUG_CMD
     11154**DCL     13679>>IF      13689>>IF
S_D.DID_ATTACH
     11168**DCL     14094<<ASSIGN
S_D.DIRCOM
     11086**DCL     14203--ASSIGN
S_D.DIRECT_OFF
     11175**DCL     13377<<ASSIGN  14196<<ASSIGN  14208>>ASSIGN
S_D.DIRECT_SIZE
     11173**DCL     13377>>ASSIGN  14196>>ASSIGN  14209>>DOWHILE 14212>>ASSIGN
S_D.DIRECT_TEXT
     11623**DCL     14211--ASSIGN
S_D.DO$
     10685**DCL     13072<<ASSIGN  13374<<ASSIGN  13738<<ASSIGN  13739>>ASSIGN  13739>>ASSIGN  13740>>IF
     13741<<ASSIGN  13937<<ASSIGN  14170<<ASSIGN  14195<<ASSIGN  14203<<ASSIGN  14232<<ASSIGN  14382<<ASSIGN
     14532<<ASSIGN
S_D.DO_ATTACH
     10857**DCL     13378<<ASSIGN  14197<<ASSIGN
S_D.DO_ATTACHMENTS
     11680**DCL     12987<<REMEMBR
S_D.DO_CALLED
     11571**DCL     13004<<ASSIGN
S_D.DO_MESSAGE
     11751**DCL     12988<<REMEMBR
S_D.DO_NESTING_LEVEL
     11177**DCL     13379<<ASSIGN  14198<<ASSIGN
S_D.DO_SCAN
     10671**DCL     13074<<ASSIGN  13376<<ASSIGN  14194<<ASSIGN  14239<<ASSIGN
S_D.DRTN$
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:324  
     11187**DCL     13026<<ASSIGN
S_D.E$IS.ACTIVE
     11147**DCL     14118>>IF      14157>>IF      14331>>IF
S_D.E$IS.C.JUNK
     11151**DCL     14064>>IF
S_D.E$IS.LOC
     11148**DCL     14064>>IF      14064>>IF
S_D.E$XIT
     11392**DCL     13008<<ASSIGN  14295>>IF
S_D.EDEF$
     11078**DCL     14023>>ASSIGN
S_D.EIS
     11692**DCL     11721--REDEF
S_D.ENTRYCMD$
     11434**DCL     13240<<ASSIGN  13461<<ASSIGN  13742<<ASSIGN  13925<<ASSIGN  14103<<ASSIGN  14144<<ASSIGN
     14204<<ASSIGN
S_D.EOM
     11274**DCL     14388<<ASSIGN
S_D.ERROR
     10663**DCL     13065<<ASSIGN  13149<<ASSIGN  13400<<ASSIGN  13405<<ASSIGN  13412<<ASSIGN  13558<<ASSIGN
     13560<<ASSIGN  13597<<ASSIGN  13609<<ASSIGN  13611<<ASSIGN  13706<<ASSIGN  13708<<ASSIGN  13849<<ASSIGN
     13876<<ASSIGN  14314<<ASSIGN  14323<<ASSIGN  14358<<ASSIGN  14397<<ASSIGN  14402>>IF      14444<<ASSIGN
     14451<<ASSIGN  14452<<ASSIGN  14455<<ASSIGN  14457<<ASSIGN  14464<<ASSIGN  14555<<ASSIGN  14594<<ASSIGN
S_D.EWSQ#
     10659**DCL     14013>>IF      14487<<ASSIGN  14529<<ASSIGN  14577>>DOCASE  14597<>CALL
S_D.FAULT
     10683**DCL     13758<<ASSIGN  13766>>IF      13768>>IF      14531<<ASSIGN  14560>>IF      14562>>IF
     14563>>IF      14564>>IF
S_D.FAULTCMD$
     10649**DCL     13230<<ASSIGN  13231>>IF      13234>>ASSIGN  13238>>IF      13240>>ASSIGN  13448<<ASSIGN
     13456>>IF      13461>>ASSIGN  13697<<ASSIGN  13698>>IF      13701>>IF      13701>>IF      13701>>IF
     13701>>IF      13712>>IF      13715>>IF      13717>>IF      13738>>ASSIGN  13742>>ASSIGN  13746<<ASSIGN
     13773<<ASSIGN  13823<<ASSIGN  13921<<ASSIGN  13923>>IF      13925>>ASSIGN  13932<<ASSIGN  13986<<ASSIGN
     14068>>ASSIGN  14070>>ASSIGN  14084>>IF      14084>>IF      14086>>IF      14095>>IF      14096>>IF
     14101>>ASSIGN  14103>>ASSIGN  14132>>IF      14139>>ASSIGN  14144>>ASSIGN  14204>>ASSIGN
S_D.FAULTINS$
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:325  
     10647**DCL     13975>>ASSIGN  13979>>ASSIGN  14142>>ASSIGN  14543<<ASSIGN
S_D.FIXCOM
     11088**DCL     13230--ASSIGN  13448--ASSIGN  13679--IF      13697--ASSIGN  13773--ASSIGN  13921--ASSIGN
     13986--ASSIGN
S_D.FIXCOM.CDF
     11098**DCL     13223>>IF
S_D.FIXCOM.CMD
     11090**DCL     13223>>IF
S_D.FIXCOM.FPRG
     11095**DCL     13667>>IF
S_D.FIXCOM.FPRG_RES
     11101**DCL     13669>>IF
S_D.FIXCOM.FPRG_RES_SIZE
     11102**DCL     13669>>IF
S_D.FIXCOM.INACTIVE
     11091**DCL     13229>>IF      13446>>IF
S_D.FIXLAST
     10726**DCL     13222>>DOINDEX 13666>>DOINDEX 13985>>IF
S_D.FPRG_CONTEXT$
     10774**DCL     13109>>ASSIGN  13531>>IF      13535>>ASSIGN  13552>>IF      13566>>ASSIGN  13887>>IF
     14244>>IF      14246>>ASSIGN
S_D.GOIC
     10643**DCL     13171<<ASSIGN  13193<<ASSIGN  13271<<ASSIGN  13275<<ASSIGN  13862<<ASSIGN  13872<<ASSIGN
     13914<<ASSIGN  14002<<ASSIGN  14073<<ASSIGN  14346>>ASSIGN  14366>>IF      14538<<ASSIGN
S_D.GOTRAPPOS
     11667**DCL     13272>>IF
S_D.GOTRAP_POSITION
     11669**DCL     13274>>ASSIGN  13275>>ASSIGN
S_D.HOST_MESSAGE_BUF_REMOTE
     11625**DCL     11626--REDEF   11640--REDEF
S_D.HW_FLTIC_OK
     11865**DCL     14539>>IF
S_D.IGNORE.FLAG
     11236**DCL     13865>>IF
S_D.IND$
     10724**DCL     13353<<ASSIGN
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:326  
S_D.INPUT
     10897**DCL     13070<<ASSIGN  13371<<ASSIGN  13382--ASSIGN
S_D.INT#
     11661**DCL     13019<<ASSIGN  13020<<ASSIGN
S_D.ISBASE
     10912**DCL     13269>>ASSIGN  13270<<ASSIGN  14344>>IF      14350>>ASSIGN
S_D.IXFIX
     10667**DCL     13221<<ASSIGN  13224<<ASSIGN  13226>>IF      13227<<ASSIGN  13228>>IF      13229>>IF
     13230>>ASSIGN  13433<<ASSIGN  13437<<ASSIGN  13442<<ASSIGN  13444>>IF      13446>>IF      13448>>ASSIGN
     13696<<ASSIGN  13697>>ASSIGN  13772<<ASSIGN  13773>>ASSIGN  13912<<ASSIGN  13921>>ASSIGN  13975<<ASSIGN
     13976>>IF      13985>>IF      13986>>ASSIGN  14071<>CALL
S_D.JDE
     11239**DCL     11240--REDEF
S_D.K$EEP.TYPE
     11112**DCL     14331>>IF      14331>>IF      14550>>IF
S_D.KEEP.FLAG
     11232**DCL     13875>>IF
S_D.KILL1
     10752**DCL     13672<<ASSIGN
S_D.L$.VALUE
     10792**DCL     10798--REDEF   10806--REDEF   10809--REDEF   10812--REDEF   10815--REDEF
S_D.L$.VALUE.L
     10793**DCL     10794--REDEF   10795--REDEF
S_D.L6_MESSAGE_BUF
     11646**DCL     11648--REDEF
S_D.LASTBLT$
     10826**DCL     13388>>ASSIGN
S_D.LAST_NODE_LOADED
     11246**DCL     13191<<ASSIGN  13223>>IF
S_D.LINK_ENTRY
     11394**DCL     13300<<ASSIGN
S_D.MBU
     11475**DCL     13636<<ASSIGN
S_D.MOD_L6.ADDRESS
     11755**DCL     13616<<ASSIGN
S_D.MOD_L6.DESC#
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:327  
     11757**DCL     13618<<ASSIGN
S_D.MOD_L6.NOT_IS
     11758**DCL     13619<<ASSIGN
S_D.MOD_L6.SEG
     11756**DCL     13617<<ASSIGN
S_D.MOD_L6.VALUE.OPS
     11761**DCL     13622<<ASSIGN
S_D.MOD_L6.VALUE.SIZE
     11760**DCL     13620<<ASSIGN
S_D.MTREE$
     11292**DCL     13195>>ASSIGN
S_D.NCHARS
     10756**DCL     13071<<ASSIGN  13373<<ASSIGN  13384<>CALL
S_D.NODE
     11191**DCL     13345>>ASSIGN  14490<<ASSIGN  14534<<ASSIGN
S_D.NODE#M1
     11300**DCL     13209>>ASSIGN
S_D.NODESEG$
     11326**DCL     13211>>ASSIGN
S_D.ONABORT
     11262**DCL     13439>>IF      13442>>ASSIGN
S_D.ONCALLS
     11264**DCL     13910>>IF      13912>>ASSIGN
S_D.ONEXIT
     11266**DCL     13434>>IF      13437>>ASSIGN
S_D.ONNODES
     11268**DCL     13227>>IF      13227>>ASSIGN
S_D.OPDCBNO
     11665**DCL     13481<<ASSIGN  14178>>ASSIGN
S_D.OUTPUT
     11612**DCL     11614--REDEF   13436<<ASSIGN  13441<<ASSIGN  13458--CALL    13774<<ASSIGN  13775--CALL
S_D.OVERLAID
     11296**DCL     13189>>IF
S_D.PMD_ONLY
     11406**DCL     13079<<ASSIGN  14183>>IF
S_D.POST_ASSOC
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:328  
     11690**DCL     13093<<ASSIGN
S_D.PROMPT_SIZE
     11408**DCL     13036<<ASSIGN  13587<<ASSIGN  14400<<ASSIGN  14438<<ASSIGN
S_D.QSCH.OK
     10938**DCL     14022>>IF      14025>>IF
S_D.QSCH.PEDEF#
     10940**DCL     14023>>ASSIGN
S_D.REMOTE_MSG.FNCC
     11631**DCL     11632--REDEF
S_D.REMOTE_MSG.STXC
     11627**DCL     11628--REDEF
S_D.REMOTE_MSG.SUBFNCC
     11635**DCL     11636--REDEF
S_D.REM_ACCESS
     10677**DCL     13355<<REMEMBR 13370<<REMEMBR 14365<<REMEMBR
S_D.REM_BREAK
     11473**DCL     12986<<REMEMBR
S_D.REM_DISKBOOT
     10899**DCL     14493<<REMEMBR
S_D.REM_DO_SCAN
     10675**DCL     13073<<REMEMBR 13375<<REMEMBR 14192<<REMEMBR 14216<<REMEMBR
S_D.REM_DRTN_KLDELTA
     11526**DCL     12985<<REMEMBR
S_D.REM_DRTN_QUIT
     11430**DCL     12984<<REMEMBR
S_D.REM_USERGO
     11455**DCL     13241<<REMEMBR 13462<<REMEMBR 13743<<REMEMBR 13926<<REMEMBR 14104<<REMEMBR 14145<<REMEMBR
     14205<<REMEMBR
S_D.RUM
     11280**DCL     13330>>IF      14356>>IF      14384>>IF
S_D.RUM_ONLY
     11404**DCL     13077<<ASSIGN
S_D.RUM_TOTAL_ERRORS
     10863**DCL     14402>>IF      14404>>IF
S_D.S$TEP.ACTIVE
     11534**DCL     13200>>IF      13202<<ASSIGN  13246>>IF      13277>>IF      13284<<ASSIGN  13325>>IF
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:329  
     13327<<ASSIGN  13450>>IF      13452<<ASSIGN  13858>>IF      13860<<ASSIGN  13915>>IF      13918<<ASSIGN
     14088>>IF      14090<<ASSIGN  14120>>IF      14123<<ASSIGN  14158>>IF      14165>>IF      14189<<ASSIGN
     14234>>IF      14274>>IF      14280<<ASSIGN  14331>>IF
S_D.S$TEP.ALT
     11536**DCL     13248>>IF      14013>>IF      14165>>IF      14168>>IF      14279<<ASSIGN
S_D.S$TEP.ALTLOC
     11545**DCL     13249>>CALL    14013>>IF      14169>>CALL
S_D.S$TEP.ALTSAVED
     11549**DCL     13249--CALL    14169--CALL
S_D.S$TEP.DOING_SOC
     11540**DCL     13279>>IF
S_D.S$TEP.EWSQ
     11551**DCL     14013>>IF
S_D.S$TEP.LOC
     11543**DCL     13247>>CALL    14013>>IF      14167>>CALL    14281<<ASSIGN
S_D.S$TEP.OLD_PTR$
     11553**DCL     14278<<ASSIGN
S_D.S$TEP.ONE_FLAG
     11538**DCL     13279>>IF      14031<<ASSIGN
S_D.S$TEP.SAVED
     11547**DCL     13247--CALL    14167--CALL    14277--CALL
S_D.SAVEIC
     10645**DCL     12993<<ASSIGN  12995<<ASSIGN  13170<<ASSIGN  13192<<ASSIGN  13193>>ASSIGN  13262<<ASSIGN
     13269<<ASSIGN  13269>>ASSIGN  13271>>ASSIGN  13274<<ASSIGN  13297<<ASSIGN  13308<<ASSIGN  13343<<ASSIGN
     13344<>CALL    13348<<ASSIGN  13447<<ASSIGN  13478<<ASSIGN  13530<<ASSIGN  13551<<ASSIGN  13854<<ASSIGN
     13862>>ASSIGN  13866<<ASSIGN  13869>>CALL    13870<<ASSIGN  13870>>ASSIGN  13872>>ASSIGN  13913<<ASSIGN
     13914>>ASSIGN  13934<<ASSIGN  14001<<ASSIGN  14002>>ASSIGN  14018<<ASSIGN  14019>>ASSIGN  14047<>CALL
     14072<<ASSIGN  14073>>ASSIGN  14087<<ASSIGN  14112<<ASSIGN  14142<<ASSIGN  14143<<ASSIGN  14504<<ASSIGN
     14549<<ASSIGN  14566<<ASSIGN
S_D.SAVEIC_SAVE
     11344**DCL     13342<<ASSIGN
S_D.SCREECH_IC
     11483**DCL     13555<<REMEMBR 13601<<REMEMBR
S_D.SILENT
     11248**DCL     13238<<ASSIGN  13243<<ASSIGN  13456<<ASSIGN  13464<<ASSIGN  13699<<ASSIGN  13745<<ASSIGN
     13923<<ASSIGN  13928<<ASSIGN  14099<<ASSIGN  14106<<ASSIGN  14137<<ASSIGN  14147<<ASSIGN  14271<<ASSIGN
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:330  
S_D.SL
     10657**DCL     13169>>IF      13913>>IF      13934>>IF      14141>>IF      14352>>ASSIGN
S_D.SL$
     10653**DCL     14348>>ASSIGN  14349>>ASSIGN  14350>>ASSIGN  14351>>ASSIGN
S_D.STAND_ALONE
     11107**DCL     12993>>IF
S_D.STEP
     10916**DCL     14033<<ASSIGN
S_D.STEP_L6
     11528**DCL     13753>>IF      13763>>IF
S_D.STOP
     10728**DCL     14207>>IF      14219>>IF
S_D.SV
     10691**DCL     10712--REDEF
S_D.SV.DELENT
     10699**DCL     13266<<ASSIGN  13432<<ASSIGN  13828<<ASSIGN  13848<<ASSIGN
S_D.T$T.ACTIVE
     11195**DCL     13199>>IF      13324>>IF      13427>>IF      13449>>IF      13981>>IF      13996>>IF
     14156>>IF      14259>>IF      14284>>IF      14288<<ASSIGN  14331>>IF      14561>>IF
S_D.T$T.LOC_SAVED
     11197**DCL     14290<<ASSIGN
S_D.T$T.RETLOC
     11207**DCL     13996>>IF
S_D.T$T.RET_SAVED
     11199**DCL     14291<<ASSIGN
S_D.T$T.SAVEINS
     11203**DCL     14287--CALL
S_D.T$T.SAVELOC
     11205**DCL     13996>>IF      14289<<ASSIGN
S_D.T$T.SHARED
     11201**DCL     13998<<ASSIGN  13999<<ASSIGN
S_D.TIC
     10681**DCL     13169>>IF      13170>>ASSIGN  13171>>ASSIGN  13192>>ASSIGN  13262>>ASSIGN  13297>>ASSIGN
     13308>>ASSIGN  13342>>ASSIGN  13348>>ASSIGN  13447>>ASSIGN  13478>>ASSIGN  13530>>ASSIGN  13551>>ASSIGN
     13854>>ASSIGN  13866>>ASSIGN  13913>>IF      13913>>ASSIGN  13934>>IF      13934>>ASSIGN  13996>>IF
     13996>>IF      14001>>ASSIGN  14013>>IF      14013>>IF      14018>>ASSIGN  14045>>IF      14064>>IF
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:331  
     14064>>IF      14072>>ASSIGN  14086>>IF      14087>>ASSIGN  14109>>IF      14112>>ASSIGN  14141>>IF
     14143>>ASSIGN  14504>>ASSIGN  14541<<ASSIGN  14542<<ASSIGN  14543>>ASSIGN  14544<>CALL    14549>>ASSIGN
     14566>>ASSIGN
S_D.TR$INFO.ACTIVE
     11118**DCL     13207>>IF      13909>>IF      14331>>IF
S_D.TR$INFO.SET
     11116**DCL     13207>>IF
S_D.TR$INFO.TYPE
     11126**DCL     13207>>IF
S_D.TRAP.FLAG
     11234**DCL     13834>>IF
S_D.TREE$
     11290**DCL     13195<<ASSIGN  13209>>ASSIGN  13216>>ASSIGN
S_D.UNODE.CURRENT
     11286**DCL     13345<<ASSIGN  14491<<ASSIGN  14535<<ASSIGN
S_D.UNODE.USENODE
     11288**DCL     14492<<ASSIGN  14536<<ASSIGN
S_D.UREG$
     10722**DCL     13027<<ASSIGN  13352<<ASSIGN  14374>>ASSIGN
S_D.UREG$_SAVE
     11332**DCL     13352>>ASSIGN  14374<<ASSIGN
S_D.USERNO
     11471**DCL     13635<<ASSIGN
S_D.USS$
     10651**DCL     13351<<ASSIGN  13353>>ASSIGN  14349>>ASSIGN  14373>>ASSIGN  14528>>ASSIGN  14531>>ASSIGN
     14538>>ASSIGN  14539>>IF      14541>>ASSIGN  14542>>ASSIGN
S_D.USS$_SAVE
     11396**DCL     13351>>ASSIGN  14373<<ASSIGN
S_D.USVFC
     11402**DCL     13009<<ASSIGN
S_D.VARCOM$
     11103**DCL     13234>>ASSIGN  13738>>ASSIGN  14068>>ASSIGN  14101>>ASSIGN  14139>>ASSIGN
S_D.WHEN_ACTIVE
     11580**DCL     13164>>IF      14116>>IF      14155>>IF
S_D.WHEN_ASL
     11330**DCL     14135>>IF
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:332  
S_D.WHEN_IC
     11576**DCL     14109>>IF
S_D.WHEN_SET
     11569**DCL     13164>>IF      14269>>IF
S_D.X$EQ.ACTIVE
     11138**DCL     13827>>IF      14125>>IF      14159>>IF      14331>>IF
S_D.X$EQ.LOC
     11139**DCL     14045>>IF
S_D.XCONING
     11745**DCL     13017<<ASSIGN
S_D.XUG_BUILTIN
     11726**DCL     13076>>IF      13387>>IF
S_D$
     11943**DCL     10639--IMP-PTR 12984>>REMEMBR 12985>>REMEMBR 12986>>REMEMBR 12987>>REMEMBR 12988>>REMEMBR
     12993>>IF      12993>>ASSIGN  12995>>ASSIGN  13003>>ASSIGN  13004>>ASSIGN  13006>>ASSIGN  13007>>ASSIGN
     13008>>ASSIGN  13009>>ASSIGN  13017>>ASSIGN  13019>>ASSIGN  13020>>ASSIGN  13026>>ASSIGN  13027>>ASSIGN
     13031>>IF      13034>>IF      13036>>ASSIGN  13065>>ASSIGN  13070>>ASSIGN  13071>>ASSIGN  13072>>ASSIGN
     13073>>REMEMBR 13074>>ASSIGN  13076>>IF      13077>>ASSIGN  13079>>ASSIGN  13093>>ASSIGN  13109>>ASSIGN
     13149>>ASSIGN  13164>>IF      13164>>IF      13169>>IF      13169>>IF      13170>>ASSIGN  13170>>ASSIGN
     13171>>ASSIGN  13171>>ASSIGN  13189>>IF      13191>>ASSIGN  13192>>ASSIGN  13192>>ASSIGN  13193>>ASSIGN
     13193>>ASSIGN  13195>>ASSIGN  13195>>ASSIGN  13199>>IF      13200>>IF      13202>>ASSIGN  13207>>IF
     13207>>IF      13207>>IF      13209>>ASSIGN  13209>>ASSIGN  13211>>ASSIGN  13216>>ASSIGN  13221>>ASSIGN
     13222>>DOINDEX 13223>>IF      13223>>IF      13223>>IF      13224>>ASSIGN  13226>>IF      13227>>IF
     13227>>ASSIGN  13227>>ASSIGN  13228>>IF      13229>>IF      13229>>IF      13230>>ASSIGN  13230>>ASSIGN
     13230>>ASSIGN  13231>>IF      13234>>ASSIGN  13234>>ASSIGN  13238>>IF      13238>>ASSIGN  13240>>ASSIGN
     13240>>ASSIGN  13241>>REMEMBR 13243>>ASSIGN  13246>>IF      13247>>CALL    13247>>CALL    13248>>IF
     13249>>CALL    13249>>CALL    13262>>ASSIGN  13262>>ASSIGN  13266>>ASSIGN  13269>>ASSIGN  13269>>ASSIGN
     13269>>ASSIGN  13270>>ASSIGN  13271>>ASSIGN  13271>>ASSIGN  13272>>IF      13274>>ASSIGN  13274>>ASSIGN
     13275>>ASSIGN  13275>>ASSIGN  13277>>IF      13279>>IF      13279>>IF      13284>>ASSIGN  13297>>ASSIGN
     13297>>ASSIGN  13300>>ASSIGN  13308>>ASSIGN  13308>>ASSIGN  13323>>ASSIGN  13324>>IF      13325>>IF
     13327>>ASSIGN  13330>>IF      13330>>IF      13332>>IF      13332>>IF      13342>>ASSIGN  13342>>ASSIGN
     13343>>ASSIGN  13343>>ASSIGN  13344>>CALL    13345>>ASSIGN  13345>>ASSIGN  13348>>ASSIGN  13348>>ASSIGN
     13349>>IF      13351>>ASSIGN  13351>>ASSIGN  13352>>ASSIGN  13352>>ASSIGN  13353>>ASSIGN  13353>>ASSIGN
     13355>>REMEMBR 13356>>ASSIGN  13358>>ASSIGN  13360>>ASSIGN  13361>>ASSIGN  13362>>ASSIGN  13369>>ASSIGN
     13370>>REMEMBR 13371>>ASSIGN  13372>>ASSIGN  13373>>ASSIGN  13374>>ASSIGN  13375>>REMEMBR 13376>>ASSIGN
     13377>>ASSIGN  13377>>ASSIGN  13378>>ASSIGN  13379>>ASSIGN  13380>>IF      13382>>ASSIGN  13383>>ASSIGN
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:333  
     13384>>CALL    13387>>IF      13388>>ASSIGN  13400>>ASSIGN  13405>>ASSIGN  13412>>ASSIGN  13427>>IF
     13432>>ASSIGN  13433>>ASSIGN  13434>>IF      13436>>ASSIGN  13437>>ASSIGN  13437>>ASSIGN  13439>>IF
     13441>>ASSIGN  13442>>ASSIGN  13442>>ASSIGN  13444>>IF      13446>>IF      13446>>IF      13447>>ASSIGN
     13447>>ASSIGN  13448>>ASSIGN  13448>>ASSIGN  13448>>ASSIGN  13449>>IF      13450>>IF      13452>>ASSIGN
     13456>>IF      13456>>ASSIGN  13458>>CALL    13461>>ASSIGN  13461>>ASSIGN  13462>>REMEMBR 13464>>ASSIGN
     13478>>ASSIGN  13478>>ASSIGN  13481>>ASSIGN  13530>>ASSIGN  13530>>ASSIGN  13531>>IF      13535>>ASSIGN
     13551>>ASSIGN  13551>>ASSIGN  13552>>IF      13555>>REMEMBR 13558>>ASSIGN  13560>>ASSIGN  13566>>ASSIGN
     13573>>ASSIGN  13574>>ASSIGN  13576>>CALL    13581>>IF      13584>>IF      13587>>ASSIGN  13597>>ASSIGN
     13601>>REMEMBR 13609>>ASSIGN  13611>>ASSIGN  13616>>ASSIGN  13617>>ASSIGN  13618>>ASSIGN  13619>>ASSIGN
     13620>>ASSIGN  13622>>ASSIGN  13624>>ASSIGN  13625>>IF      13632>>ASSIGN  13634>>ASSIGN  13635>>ASSIGN
     13636>>ASSIGN  13655>>ASSIGN  13656>>ASSIGN  13657>>ASSIGN  13658>>ASSIGN  13659>>ASSIGN  13660>>ASSIGN
     13664>>ASSIGN  13665>>ASSIGN  13666>>DOINDEX 13667>>IF      13669>>IF      13669>>IF      13672>>ASSIGN
     13679>>IF      13679>>IF      13679>>IF      13689>>IF      13696>>ASSIGN  13696>>ASSIGN  13697>>ASSIGN
     13697>>ASSIGN  13697>>ASSIGN  13698>>IF      13699>>ASSIGN  13701>>IF      13701>>IF      13701>>IF
     13701>>IF      13706>>ASSIGN  13708>>ASSIGN  13712>>IF      13715>>IF      13717>>IF      13719>>IF
     13738>>ASSIGN  13738>>ASSIGN  13738>>ASSIGN  13739>>ASSIGN  13739>>ASSIGN  13740>>IF      13741>>ASSIGN
     13742>>ASSIGN  13742>>ASSIGN  13743>>REMEMBR 13745>>ASSIGN  13746>>ASSIGN  13750>>IF      13753>>IF
     13758>>ASSIGN  13759>>IF      13763>>IF      13766>>IF      13767>>ASSIGN  13768>>IF      13768>>IF
     13771>>ASSIGN  13772>>ASSIGN  13772>>ASSIGN  13773>>ASSIGN  13773>>ASSIGN  13773>>ASSIGN  13774>>ASSIGN
     13775>>CALL    13823>>ASSIGN  13827>>IF      13828>>ASSIGN  13834>>IF      13848>>ASSIGN  13849>>ASSIGN
     13854>>ASSIGN  13854>>ASSIGN  13858>>IF      13860>>ASSIGN  13862>>ASSIGN  13862>>ASSIGN  13865>>IF
     13866>>ASSIGN  13866>>ASSIGN  13869>>CALL    13870>>ASSIGN  13870>>ASSIGN  13872>>ASSIGN  13872>>ASSIGN
     13875>>IF      13876>>ASSIGN  13880>>ASSIGN  13887>>IF      13891>>ASSIGN  13894>>ASSIGN  13909>>IF
     13910>>IF      13912>>ASSIGN  13912>>ASSIGN  13913>>IF      13913>>IF      13913>>ASSIGN  13913>>ASSIGN
     13914>>ASSIGN  13914>>ASSIGN  13915>>IF      13918>>ASSIGN  13921>>ASSIGN  13921>>ASSIGN  13921>>ASSIGN
     13923>>IF      13923>>ASSIGN  13925>>ASSIGN  13925>>ASSIGN  13926>>REMEMBR 13928>>ASSIGN  13932>>ASSIGN
     13934>>IF      13934>>IF      13934>>ASSIGN  13934>>ASSIGN  13937>>ASSIGN  13975>>ASSIGN  13975>>ASSIGN
     13976>>IF      13979>>ASSIGN  13981>>IF      13985>>IF      13985>>IF      13986>>ASSIGN  13986>>ASSIGN
     13986>>ASSIGN  13996>>IF      13996>>IF      13996>>IF      13996>>IF      13996>>IF      13998>>ASSIGN
     13999>>ASSIGN  14001>>ASSIGN  14001>>ASSIGN  14002>>ASSIGN  14002>>ASSIGN  14013>>IF      14013>>IF
     14013>>IF      14013>>IF      14013>>IF      14013>>IF      14013>>IF      14018>>ASSIGN  14018>>ASSIGN
     14019>>ASSIGN  14020>>IF      14022>>IF      14023>>ASSIGN  14023>>ASSIGN  14025>>IF      14031>>ASSIGN
     14033>>ASSIGN  14045>>IF      14045>>IF      14047>>CALL    14064>>IF      14064>>IF      14064>>IF
     14064>>IF      14064>>IF      14068>>ASSIGN  14068>>ASSIGN  14070>>ASSIGN  14071>>CALL    14072>>ASSIGN
     14072>>ASSIGN  14073>>ASSIGN  14073>>ASSIGN  14084>>IF      14084>>IF      14086>>IF      14086>>IF
     14087>>ASSIGN  14087>>ASSIGN  14088>>IF      14090>>ASSIGN  14094>>ASSIGN  14095>>IF      14096>>IF
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:334  
     14099>>ASSIGN  14101>>ASSIGN  14101>>ASSIGN  14103>>ASSIGN  14103>>ASSIGN  14104>>REMEMBR 14106>>ASSIGN
     14109>>IF      14109>>IF      14112>>ASSIGN  14112>>ASSIGN  14116>>IF      14118>>IF      14120>>IF
     14123>>ASSIGN  14125>>IF      14132>>IF      14135>>IF      14137>>ASSIGN  14139>>ASSIGN  14139>>ASSIGN
     14141>>IF      14141>>IF      14142>>ASSIGN  14142>>ASSIGN  14143>>ASSIGN  14143>>ASSIGN  14144>>ASSIGN
     14144>>ASSIGN  14145>>REMEMBR 14147>>ASSIGN  14155>>IF      14156>>IF      14157>>IF      14158>>IF
     14159>>IF      14165>>IF      14165>>IF      14167>>CALL    14167>>CALL    14168>>IF      14169>>CALL
     14169>>CALL    14170>>ASSIGN  14175>>IF      14178>>ASSIGN  14179>>ASSIGN  14183>>IF      14189>>ASSIGN
     14192>>REMEMBR 14194>>ASSIGN  14195>>ASSIGN  14196>>ASSIGN  14196>>ASSIGN  14197>>ASSIGN  14198>>ASSIGN
     14200>>ASSIGN  14201>>ASSIGN  14203>>ASSIGN  14203>>ASSIGN  14204>>ASSIGN  14204>>ASSIGN  14205>>REMEMBR
     14207>>IF      14208>>ASSIGN  14209>>DOWHILE 14211>>ASSIGN  14211>>ASSIGN  14212>>ASSIGN  14212>>ASSIGN
     14213>>ASSIGN  14215>>ASSIGN  14216>>REMEMBR 14219>>IF      14232>>ASSIGN  14234>>IF      14239>>ASSIGN
     14244>>IF      14246>>ASSIGN  14259>>IF      14269>>IF      14271>>ASSIGN  14274>>IF      14277>>CALL
     14278>>ASSIGN  14279>>ASSIGN  14280>>ASSIGN  14281>>ASSIGN  14284>>IF      14287>>CALL    14288>>ASSIGN
     14289>>ASSIGN  14290>>ASSIGN  14291>>ASSIGN  14295>>IF      14314>>ASSIGN  14323>>ASSIGN  14331>>IF
     14331>>IF      14331>>IF      14331>>IF      14331>>IF      14331>>IF      14331>>IF      14344>>IF
     14346>>ASSIGN  14348>>ASSIGN  14349>>ASSIGN  14349>>ASSIGN  14350>>ASSIGN  14350>>ASSIGN  14351>>ASSIGN
     14351>>ASSIGN  14352>>ASSIGN  14356>>IF      14356>>IF      14356>>IF      14358>>ASSIGN  14362>>IF
     14362>>IF      14364>>ASSIGN  14365>>REMEMBR 14366>>IF      14367>>ASSIGN  14371>>IF      14373>>ASSIGN
     14373>>ASSIGN  14374>>ASSIGN  14374>>ASSIGN  14382>>ASSIGN  14383>>IF      14384>>IF      14386>>IF
     14388>>ASSIGN  14395>>IF      14397>>ASSIGN  14400>>ASSIGN  14402>>IF      14402>>IF      14404>>IF
     14409>>ASSIGN  14425>>ASSIGN  14433>>IF      14436>>IF      14438>>ASSIGN  14444>>ASSIGN  14451>>ASSIGN
     14452>>ASSIGN  14455>>ASSIGN  14457>>ASSIGN  14464>>ASSIGN  14487>>ASSIGN  14490>>ASSIGN  14491>>ASSIGN
     14492>>ASSIGN  14493>>REMEMBR 14504>>ASSIGN  14504>>ASSIGN  14528>>ASSIGN  14529>>ASSIGN  14531>>ASSIGN
     14531>>ASSIGN  14532>>ASSIGN  14534>>ASSIGN  14535>>ASSIGN  14536>>ASSIGN  14538>>ASSIGN  14538>>ASSIGN
     14539>>IF      14539>>IF      14541>>ASSIGN  14541>>ASSIGN  14542>>ASSIGN  14542>>ASSIGN  14543>>ASSIGN
     14543>>ASSIGN  14544>>CALL    14549>>ASSIGN  14549>>ASSIGN  14550>>IF      14555>>ASSIGN  14560>>IF
     14561>>IF      14562>>IF      14563>>IF      14564>>IF      14566>>ASSIGN  14566>>ASSIGN  14577>>DOCASE
     14594>>ASSIGN  14597>>CALL
S_D_HOST_MESSAGE$
     11979**DCL     12322--IMP-PTR 13634>>ASSIGN
S_D_L6_MESSAGE$
     11980**DCL     12166--IMP-PTR 13592>>IF      13592>>IF      13594>>IF      13615>>ASSIGN  13620>>ASSIGN
     13621>>DOINDEX 13622>>ASSIGN  13627>>ASSIGN  13635>>ASSIGN  13636>>ASSIGN  13637>>ASSIGN  13679>>IF
     13686>>IF
S_FAULT
     14223**LABEL   13073--REMEMBR 13375--REMEMBR 14192--REMEMBR
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:335  
TAGG
       129**DCL     13979<<ASSIGN  13980>>IF      13980>>IF      13982>>IF      13983>>IF      13984>>IF
     13987>>IF      13988>>IF      13998>>IF
TAKE_SNAP_1
     13552**LABEL   13570--GOTO
TDCB$
       158**DCL     13102<<ASSIGN  13103>>IF      13105>>IF      13105>>IF      13105>>IF      13115>>IF
     13122>>ASSIGN
TEMP$
       135**DCL       136--REDEF     137--REDEF   13050<<ASSIGN  13063>>IF
TEMP1
       136**DCL     13627<<ASSIGN
TEMP1B.B1
       139**DCL     13628>>ASSIGN
TEMP1B.B2
       140**DCL     13629>>ASSIGN
TEMP1B.B3
       141**DCL     13630>>ASSIGN
TEMP1B.B4
       142**DCL     13631>>ASSIGN
TEMP2
       143**DCL       144--REDEF   13632>>ASSIGN
TEMP2B.B1
       146**DCL     13628<<ASSIGN
TEMP2B.B2
       148**DCL     13629<<ASSIGN
TEMP2B.B3
       150**DCL     13630<<ASSIGN
TEMP2B.B4
       152**DCL     13631<<ASSIGN
TEMP_FLAG
       131**DCL     14115<<ASSIGN  14127<<ASSIGN  14133>>IF
TFPRG$
       156**DCL     13109<<ASSIGN  13111>>IF      13113>>DOWHILE 13115>>IF      13117<<ASSIGN  13117>>ASSIGN
     13535<<ASSIGN  13536>>DOWHILE 13537<<ASSIGN  13537>>ASSIGN  13538>>IF      13566<<ASSIGN  13567>>DOWHILE
     13568<<ASSIGN  13568>>ASSIGN  13569>>IF      13573>>ASSIGN  13594>>IF      14246<<ASSIGN  14247>>DOWHILE
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:336  
     14248>>IF      14250>>ASSIGN  14251>>ASSIGN  14254<<ASSIGN  14254>>ASSIGN
TRAP
       130**DCL     13002<<ASSIGN  13855<<ASSIGN  14273>>IF      14443>>IF      14485<<ASSIGN  14507<<ASSIGN
     14527<<ASSIGN
TR_FAKE_FRAME
       132**DCL     13932--ASSIGN  13933--ASSIGN
TYPE
       133**DCL     13869<>CALL
U$SE
      5802**DCL     14576<<ASSIGN
U$SE.APT
      5806**DCL     14228<<ASSIGN  14582<>CALL    14597<>CALL    14603<>CALL
U$SE.LS
      5805**DCL     14583<<ASSIGN  14602<<ASSIGN
U$SE.TYPE
      5804**DCL     13976>>IF      14579<<ASSIGN  14581<<ASSIGN  14596<<ASSIGN  14600<<ASSIGN
U$SE.USERNO
      5807**DCL     14601<<ASSIGN
UBIN36
       303**DCL     14339<<ASSIGN  14490>>ASSIGN  14491>>ASSIGN  14492>>ASSIGN  14494<<ASSIGN  14534>>ASSIGN
     14535>>ASSIGN  14536>>ASSIGN
UBIN36A
       304**DCL     14228>>ASSIGN
UECCB$
       183**DCL     13846>>IF      14274>>IF      14277>>CALL    14281>>ASSIGN  14284>>IF      14287>>CALL
     14289>>ASSIGN  14309>>IF      14321>>IF
UIS$
       184**DCL     13247>>CALL    13249>>CALL    13869>>CALL    14070>>ASSIGN  14167>>CALL    14169>>CALL
     14277>>CALL    14287>>CALL    14366>>IF      14543>>ASSIGN
UREGS
       153**DCL     13027--ASSIGN  13028--ASSIGN
USE$
       185**DCL      5802--IMP-PTR 13976>>IF
USERGO
     14251**LABEL   13241--REMEMBR 13242--CALLALT 13462--REMEMBR 13463--CALLALT 13881--CALLALT 13926--REMEMBR
     13927--CALLALT 13939--GOTO    14036--GOTO    14074--GOTO    14104--REMEMBR 14105--CALLALT 14145--REMEMBR
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:337  
     14146--CALLALT
USERGO0
     14259**LABEL   13287--GOTO    13532--GOTO    13539--GOTO    13863--GOTO    13873--GOTO    14004--GOTO
     14152--GOTO    14573--GOTO
USERGO0_WHEN
     14271**LABEL   13174--GOTO
USERGO1
     14239**LABEL   13251--GOTO    13743--REMEMBR 13744--CALLALT 14171--GOTO    14205--REMEMBR 14206--CALLALT
     14217--CALLALT
USERGO2
     14232**LABEL   13219--GOTO    13229--GOTO    13233--CALLALT 13237--CALLALT 13455--CALLALT 13922--CALLALT
     14093--CALLALT 14131--CALLALT 14173--GOTO
USER_FAULT
     13773**LABEL   13446--GOTO    13909--GOTO    13985--GOTO    13989--GOTO    13997--GOTO    14015--GOTO
     14016--CALLALT 14045--GOTO    14046--CALLALT 14066--GOTO    14067--CALLALT 14085--GOTO    14086--GOTO
     14089--CALLALT 14109--GOTO    14562--GOTO    14569--GOTO
USE_ORIG$
       186**DCL     14228>>ASSIGN  14576>>ASSIGN  14579>>ASSIGN  14581>>ASSIGN  14582>>CALL    14583>>ASSIGN
     14596>>ASSIGN  14597>>CALL    14600>>ASSIGN  14601>>ASSIGN  14602>>ASSIGN  14603>>CALL
VLP_EOMTABLE
      9208**DCL      9183--DCLINIT
VLR_FPRG_FID
      8410**DCL     13643--ASSIGN
VLR_FPRG_FID.ACCT
      8410**DCL     13657>>ASSIGN
VLR_FPRG_FID.MODTIME
      8410**DCL     13660>>ASSIGN
VLR_FPRG_FID.NAME.L
      8410**DCL     13655>>ASSIGN
VLR_FPRG_FID.NAME.TEXT
      8410**DCL     13656>>ASSIGN
VLR_FPRG_FID.PASS
      8410**DCL     13658>>ASSIGN
VLR_FPRG_FID.PSN
      8410**DCL     13659>>ASSIGN
WHENAGAIN
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:338  
     14150**LABEL   14111--CALLALT
WHENPMME
     14111**LABEL   13180--GOTO
WHEN_FIRST.BYPASS_COUNT
      5894**DCL     14140>>ASSIGN
WHEN_FIRST.CURRENT_COUNT
      5895**DCL     14140<<ASSIGN
WHEN_FIRST.U.APT
      5882**DCL      5883--REDEF
WHEN_FIRST.UNUSED
      5880**DCL      5881--REDEF
WSR
       187**DCL     14529>>ASSIGN
XLATE_TABLE
       299**DCL     13055>>CALLBLT
YNDEX
       134**DCL     14528<<ASSIGN  14529>>ASSIGN
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:339  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:340  
              MINI UREF LISTING

B$ROAVAIL    8049**DCL
B_POINTER     239**DCL-ENT
DDA$DELTA     103**PROC
DDM$GETMEM   12919**DCL-ENT
DUA$DELTA   13001**ENTRY
DUA$DELTA1   12968**ENTRY
DUA$DELTA_NO_AUTO   14467**ENTRY
DXA$FAULTENT   14517**ENTRY
DXA$PATCHENT   14484**ENTRY
LS     121**DCL
M$ACCT    6285**DCL-ENT
M$ACTIVATE    6288**DCL-ENT
M$ALIB    6281**DCL-ENT
M$ASUSER    6283**DCL-ENT
M$ATTACH    6290**DCL-ENT
M$BADPP    6308**DCL-ENT
M$CGCTL    6289**DCL-ENT
M$CGINFO    6289**DCL-ENT
M$CHECK    6270**DCL-ENT
M$CHGUNIT    6328**DCL-ENT
M$CLRSTK    6326**DCL-ENT
M$CMDVAR    6337**DCL-ENT
M$CONFIG    6298**DCL-ENT
M$CORRES    6273**DCL-ENT
M$CPEXIT    6282**DCL-ENT
M$CVM    6306**DCL-ENT
M$CVOL    6271**DCL-ENT
M$DCLFLD    6298**DCL-ENT
M$DEACTIVATE    6288**DCL-ENT
M$DELREC    6270**DCL-ENT
M$DEQ    6335**DCL-ENT
M$DETACH    6290**DCL-ENT
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:341  
M$DEVICE    6272**DCL-ENT
M$DISPLAY    6335**DCL-ENT
M$DISPRES    6275**DCL-ENT
M$DLIB    6281**DCL-ENT
M$DRIBBLE    6298**DCL-ENT
M$DSUSER    6283**DCL-ENT
M$ENQ    6334**DCL-ENT
M$ERASE    6299**DCL-ENT
M$ERR    6280**DCL-ENT
M$ERRMSG    6331**DCL-ENT
M$EXHUME    6332**DCL-ENT
M$EXIT    6280**DCL-ENT
M$EXTEND    6272**DCL-ENT
M$FDP    6304**DCL-ENT
M$FDS    6303**DCL-ENT
M$FEBOOT    6296**DCL-ENT
M$FECTL    6297**DCL-ENT
M$FEDUMP    6296**DCL-ENT
M$FID    6331**DCL-ENT
M$FINDPROC    6285**DCL-ENT
M$FSUSER    6283**DCL-ENT
M$FVP    6305**DCL-ENT
M$FWCG    6289**DCL-ENT
M$GBPL    6309**DCL-ENT
M$GDDL    6305**DCL-ENT
M$GDP    6304**DCL-ENT
M$GDS    6303**DCL-ENT
M$GETDCB    6274**DCL-ENT
M$GETMOUSE    6314**DCL-ENT
M$GETPM    6315**DCL-ENT
M$GJOB    6333**DCL-ENT
M$GLINEATTR    6293**DCL-ENT
M$GOODPP    6308**DCL-ENT
M$GPLATEN    6301**DCL-ENT
M$GPROMPT    6300**DCL-ENT
M$GTRMATTR    6294**DCL-ENT
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:342  
M$GTRMCTL    6292**DCL-ENT
M$GTRMTAB    6295**DCL-ENT
M$GVP    6304**DCL-ENT
M$HELP    6331**DCL-ENT
M$INTRTN    6284**DCL-ENT
M$IOQ    6319**DCL-ENT
M$JOBSTATS    6333**DCL-ENT
M$KEYIN    6273**DCL-ENT
M$LDEV    6268**DCL-ENT
M$LDTRC    6281**DCL-ENT
M$LIMIT    6274**DCL-ENT
M$LINES    6273**DCL-ENT
M$LINK    6280**DCL-ENT
M$MADMUCK    6276**DCL-ENT
M$MAKUSER    6307**DCL-ENT
M$MBS    6275**DCL-ENT
M$MDFFLD    6299**DCL-ENT
M$MERC    6324**DCL-ENT
M$MERCS    6325**DCL-ENT
M$MIRROR    6319**DCL-ENT
M$MONINFO    6336**DCL-ENT
M$MPL    6309**DCL-ENT
M$NODEINFO    6300**DCL-ENT
M$NXTUSR    6334**DCL-ENT
M$OCMSG    6332**DCL-ENT
M$OLAY    6280**DCL-ENT
M$PAS    6309**DCL-ENT
M$PATHCON    6332**DCL-ENT
M$PDS    6303**DCL-ENT
M$PFIL    6270**DCL-ENT
M$PLATEN    6294**DCL-ENT
M$PRECORD    6272**DCL-ENT
M$PROCNAME    6285**DCL-ENT
M$PROFILE    6296**DCL-ENT
M$PROMPT    6292**DCL-ENT
M$RACST    6276**DCL-ENT
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:343  
M$RDSYSLOG    6317**DCL-ENT
M$READ    6269**DCL-ENT
M$RELRES    6275**DCL-ENT
M$RELSTARF    6277**DCL-ENT
M$REM    6277**DCL-ENT
M$RENV    6324**DCL-ENT
M$REQUIRE    6276**DCL-ENT
M$RETRY    6325**DCL-ENT
M$RETRYS    6325**DCL-ENT
M$REW    6271**DCL-ENT
M$RLSFLD    6299**DCL-ENT
M$RPRIV    6327**DCL-ENT
M$RSPP    6306**DCL-ENT
M$RSWITCH    6328**DCL-ENT
M$RUE    6334**DCL-ENT
M$SAVE    6283**DCL-ENT
M$SCON    6284**DCL-ENT
M$SENV    6324**DCL-ENT
M$SETFMA    6268**DCL-ENT
M$SETFP    6297**DCL-ENT
M$SINPUT    6295**DCL-ENT
M$SLCFLD    6300**DCL-ENT
M$SMOUSE    6314**DCL-ENT
M$SMPRT    6306**DCL-ENT
M$SSC    6307**DCL-ENT
M$SSWITCH    6327**DCL-ENT
M$STATE    6336**DCL-ENT
M$STD    6308**DCL-ENT
M$STIMER    6322**DCL-ENT
M$STLPP    6305**DCL-ENT
M$STRAP    6322**DCL-ENT
M$STRMATTR    6294**DCL-ENT
M$STRMCTL    6292**DCL-ENT
M$STRMTAB    6295**DCL-ENT
M$SYMBIO    6333**DCL-ENT
M$SYSCON    6319**DCL-ENT
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:344  
M$SYSID    6337**DCL-ENT
M$TDCLOSE    6318**DCL-ENT
M$TDIO    6318**DCL-ENT
M$TDOPEN    6317**DCL-ENT
M$TDREQCPU    6318**DCL-ENT
M$TEMPWROC    6312**DCL-ENT
M$TIME    6335**DCL-ENT
M$TRMISC    6297**DCL-ENT
M$TRMPRG    6293**DCL-ENT
M$TRTN    6326**DCL-ENT
M$TRUNC    6269**DCL-ENT
M$TTIMER    6322**DCL-ENT
M$UMPL    6309**DCL-ENT
M$UNFID    6331**DCL-ENT
M$UNLATCH    6288**DCL-ENT
M$UNSHARE    6285**DCL-ENT
M$USRFIELD    6328**DCL-ENT
M$VIRTUAL    6303**DCL-ENT
M$WAIT    6326**DCL-ENT
M$WEOF    6271**DCL-ENT
M$WRSYSLOG    6317**DCL-ENT
M$XCONRTN    6284**DCL-ENT
M$XEQTIME    6336**DCL-ENT
M$XFLUSH    6277**DCL-ENT
M$XMOUSE    6314**DCL-ENT
M$YC    6282**DCL-ENT
S_D_ACCESS$   11958**DCL
S_D_ANLZ$   11960**DCL
S_D_ASTACKOFF$   11959**DCL
S_D_BREAK$   11961**DCL
S_D_DO_SCAN$   11962**DCL
S_D_ERROR$   11963**DCL
S_D_FAULTCMD$$   11964**DCL
S_D_FAULTINS$$   11965**DCL
S_D_GOIC$   11966**DCL
S_D_GO_MODE$   11967**DCL
PL6.E3A0      #001=DDA$DELTA File=DDA$DELTA.:E05TSI                              TUE 07/29/97 13:16 Page:345  
S_D_HW_PTB_UNITS$   11983**DCL
S_D_HW_RES_MEM$   11981**DCL
S_D_HW_WSQ0PT$   11982**DCL
S_D_IPRFLT$   11969**DCL
S_D_IXFIX$   11968**DCL
S_D_REM_ACCESS$   11970**DCL
S_D_REM_DISKBOOT$   11972**DCL
S_D_REM_DO_SCAN$   11971**DCL
S_D_RETURNN$   11973**DCL
S_D_SAD$   11974**DCL
S_D_SAVEIC$   11975**DCL
S_D_SEG$   11957**DCL
S_D_TCB$$   11976**DCL
S_D_UREG$$   11977**DCL
S_D_USS$$   11978**DCL

PL6.E3A0      #002=DUA$EXITDELTA File=DDA$DELTA.:E05TSI                          TUE 07/29/97 13:18 Page:346  
     2041        1        /*T***********************************************************/
     2042        2        /*T*                                                         */
     2043        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     2044        4        /*T*                                                         */
     2045        5        /*T***********************************************************/
     2046        6        DUA$EXITDELTA: PROC;
     2047        7        /*F*  NAME: DUA$EXITDELTA
     2048        8              PURPOSE: To UNWIND to DRTN_QUIT in DDA$DELTA */
     2049        9             %INCLUDE XUH_MACRO_C;
     2050       93             %INCLUDE DD_SD_M;
     2051     1429             %S_D;
     2052     2747    1        UNWIND TO S_D.REM_DRTN_QUIT;
     2053     2748    1   DUA$KILLDELTA: ENTRY;
     2054     2749        /*F*  NAME: DUA$KILLDELTA
     2055     2750             PURPOSE: To UNWIND to DRTN_KLDELTA in DDA$DELTA */
     2056     2751    1        UNWIND TO S_D.REM_DRTN_KLDELTA;
     2057     2752    1   END DUA$EXITDELTA;

PL6.E3A0      #002=DUA$EXITDELTA File=DDA$DELTA.:E05TSI                          TUE 07/29/97 13:18 Page:347  
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DUA$EXITDELTA.

   Procedure DUA$EXITDELTA requires 12 words for executable code.
   Procedure DUA$EXITDELTA requires 4 words of local(AUTO) storage.

    No errors detected in file DDA$DELTA.:E05TSI    .

PL6.E3A0      #002=DUA$EXITDELTA File=DDA$DELTA.:E05TSI                          TUE 07/29/97 13:18 Page:348  

 Object Unit name= DUA$EXITDELTA                              File name= DDA$DELTA.:E05TOU
 UTS= JUL 29 '97 13:18:19.52 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    12     14  DUA$EXITDELTA

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        0  DUA$EXITDELTA
     0      6                  yes      Std        0  DUA$KILLDELTA

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_AUNWIND

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    S_D$
PL6.E3A0      #002=DUA$EXITDELTA File=DDA$DELTA.:E05TSI                          TUE 07/29/97 13:18 Page:349  


     2041        1        /*T***********************************************************/
     2042        2        /*T*                                                         */
     2043        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     2044        4        /*T*                                                         */
     2045        5        /*T***********************************************************/
     2046        6        DUA$EXITDELTA: PROC;

      6  0 000000   000000 700200 xent  DUA$EXITDEL* TSX0  ! X66_AUTO_0
         0 000001   000004 000000                    ZERO    4,0

     2047        7        /*F*  NAME: DUA$EXITDELTA
     2048        8              PURPOSE: To UNWIND to DRTN_QUIT in DDA$DELTA */
     2049        9             %INCLUDE XUH_MACRO_C;
     2050       93             %INCLUDE DD_SD_M;
     2051     1429             %S_D;
     2052     2747    1        UNWIND TO S_D.REM_DRTN_QUIT;

   2747  0 000002   000000 470600 xsym               LDP0  ! S_D$
         0 000003   005200 237300                    LDAQ  ! 2688,,PR0
         0 000004   000000 700200 xent               TSX0  ! X66_AUNWIND
         0 000005   000000 000200                    ZERO    0,128

     2053     2748    1   DUA$KILLDELTA: ENTRY;

   2748  0 000006   000000 700200 xent  DUA$KILLDEL* TSX0  ! X66_AUTO_0
         0 000007   000004 000000                    ZERO    4,0

     2054     2749        /*F*  NAME: DUA$KILLDELTA
     2055     2750             PURPOSE: To UNWIND to DRTN_KLDELTA in DDA$DELTA */
     2056     2751    1        UNWIND TO S_D.REM_DRTN_KLDELTA;

   2751  0 000010   000000 470600 xsym               LDP0  ! S_D$
         0 000011   005272 237300                    LDAQ  ! 2746,,PR0
         0 000012   000000 700200 xent               TSX0  ! X66_AUNWIND
         0 000013   000000 000200                    ZERO    0,128
     2057     2752    1   END DUA$EXITDELTA;
PL6.E3A0      #002=DUA$EXITDELTA File=DDA$DELTA.:E05TSI                          TUE 07/29/97 13:18 Page:350  

PL6.E3A0      #002=DUA$EXITDELTA File=DDA$DELTA.:E05TSI                          TUE 07/29/97 13:18 Page:351  
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DUA$EXITDELTA.

   Procedure DUA$EXITDELTA requires 12 words for executable code.
   Procedure DUA$EXITDELTA requires 4 words of local(AUTO) storage.

    No errors detected in file DDA$DELTA.:E05TSI    .
PL6.E3A0      #002=DUA$EXITDELTA File=DDA$DELTA.:E05TSI                          TUE 07/29/97 13:18 Page:352  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=DUA$EXITDELTA File=DDA$DELTA.:E05TSI                          TUE 07/29/97 13:18 Page:353  
          MINI XREF LISTING

S_D.CURRENT_CHANNEL
      2381**DCL      2383--REDEF
S_D.DEBUGA
      1533**DCL      1535--REDEF
S_D.EIS
      2491**DCL      2520--REDEF
S_D.HOST_MESSAGE_BUF_REMOTE
      2424**DCL      2425--REDEF    2439--REDEF
S_D.JDE
      2038**DCL      2039--REDEF
S_D.L$.VALUE
      1591**DCL      1597--REDEF    1605--REDEF    1608--REDEF    1611--REDEF    1614--REDEF
S_D.L$.VALUE.L
      1592**DCL      1593--REDEF    1594--REDEF
S_D.L6_MESSAGE_BUF
      2445**DCL      2447--REDEF
S_D.OUTPUT
      2411**DCL      2413--REDEF
S_D.REMOTE_MSG.FNCC
      2430**DCL      2431--REDEF
S_D.REMOTE_MSG.STXC
      2426**DCL      2427--REDEF
S_D.REMOTE_MSG.SUBFNCC
      2434**DCL      2435--REDEF
S_D.REM_DRTN_KLDELTA
      2325**DCL      2751>>UNWIND
S_D.REM_DRTN_QUIT
      2229**DCL      2747>>UNWIND
S_D.SV
      1490**DCL      1511--REDEF
S_D$
      2742**DCL      1438--IMP-PTR  2747>>UNWIND   2751>>UNWIND
PL6.E3A0      #002=DUA$EXITDELTA File=DDA$DELTA.:E05TSI                          TUE 07/29/97 13:18 Page:354  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #002=DUA$EXITDELTA File=DDA$DELTA.:E05TSI                          TUE 07/29/97 13:18 Page:355  
              MINI UREF LISTING

DUA$EXITDELTA       6**PROC
DUA$KILLDELTA    2748**ENTRY
