.*M*
HELP file for: MODMOVE.:SYS
.*T*
 **************************************************************
 *                                                            *
 *  Copyright (c) Bull HN Information Systems Inc., 1989      *
 *                                                            *
 **************************************************************
.*A*                                                                           
MODMOVE is a special processor that helps maintain access to controlled UI and
TUI source update and development accounts at LADC.
.*B*
MODMOVE must be run from :SYS to work properly.  Do not use it from the X
account.
 
MODMOVE controls the manipulation of update files.  If an update file already
exists in a controlled TUI account, it will give write access to the file.  If
the file does not exist, it will cause it to exist, either by copying in an
update file from a UI account or by building a +END file.  Files may be created
in controlled or uncontrolled accounts.  The sequence of accounts to search is
contained in the file $$MODMOVE_CTL in the account that the files are to be
updated in.
 
.*B*
To add write access:
 
        for many files:         for one file:
 
        !MODMOVE                !MODMOVE
        CMD: WR[ITE] .:xxxxTUI  CMD: WR[ITE] fid1.:xxxxTUI
        FID: fid1               CMD:
        FID: fid2
        FID: carriage return
        CMD:
 
To change to DONE:
 
        for many files:         for one file:
 
        !MODMOVE                !MODMOVE
        CMD: D[ONE] .:xxxxTUI   CMD: D[ONE] fid1.:xxxxTUI
        FID: fid1               CMD:
        FID: fid2
        FID: carriage return
        CMD:
.*B*
To delete a file to which you have write access:
 
        for many files:         for one file:
 
        !MODMOVE                !MODMOVE
        CMD: DEL[ETE] .:xxxxTUI CMD: DEL[ETE] fid1.:xxxxTUI
        FID: fid1               CMD:
        FID: fid2
        FID: carriage return
        CMD:
 
To list files:
 
         !MODMOVE
         CMD: L[IST] [name].acct [ {ON | INTO | OVER} fid]
 
If used by an ordinary user, those files to which he has access are listed.  If
used by a MSC account, those files that are DONE are listed.  "name" is ignored.
.*B*
To examine the tracker file:
 
        !MODMOVE
        CMD: TR[ACKER] fid [name]
 
<fid> is the name of the tracker file.  If only an account is specified,
$$TRACKER will be used for the name.  Tracker files exist in the MSC accounts.
.*R*
<name> is the optionally wild-carded name of the entries to look for.  If not
specified, ? is used.
 
The tracker file is examined backwards, from most recent to oldest entry.  All
entries matching name are printed.
.*B*
To change "DONE" files in an account to WR='?MSC',?=no access:  For controlled
accounts only.
 
       !MODMOVE
       CMD: LOCK [name].:xxxxTUI [ {ON | INTO | OVER} fid.acct.pass]
        ...0010 FILES LOCKED
       CMD:
.*R*
This command checks either the specified file, or all files in the account if
no file name is given.  Any files found which are marked DONE will have their
access changed to '?MSC'=all access and '?'=no access.  A list of the files
locked is written to listfile if specified, otherwise to the terminal.
 
To unlock a file:
 
        for many files:         for one file:
 
        !MODMOVE                !MODMOVE
        CMD: UNLOCK .:xxxxTUI   CMD: UNLOCK fid1.:xxxxTUI
        FID: fid1               CMD:
        FID: fid2
        FID: carriage return
        CMD:
 
        or:
 
        !MODMOVE stdfile (UNLOCK .:xxxxTUI)
.*R*
If the file was previously locked, all access controls are removed.
.*R*
To remove all access controls from file(s) in a controlled account:
 
       !MODMOVE
       CMD: STRIP [name].:xxxxTUI [ {ON | INTO | OVER} fid.acct.pass]
        ...0013 Files stripped
       CMD:
.*R*
This command also check either the specified file or all the files, for any
access controls at all, and removes controls from any that have them.  A list
of the files stripped is written to listfile if specified, otherwise to the
terminal.
.*B*
NOTE:  To return to IBEX from the command level, one may now say
       END, E[XIT], Q[UIT], a blank line, or a carriage return.
 
.*B*
For the WRITE command, the account specified must contain the file
$$MODMOVE_CTL.  This file contains a list of accounts (without leading period),
each of which is either an update account or a source account.  The two are
distinguished by following each account by a blank and SI or UI.  The SI or UI
is optional if the account ends in SI or UI.  If the specified file exists in
the specified account, one of the following actions occurs:
  1. If the account is uncontrolled, the user is informed that
     the file exists.
  2. If the account is controlled:
     a.  If the user already has access to the file he is told so.
     b.  If he has read access to the file, he is given write access.
.*B*
If the file does not exist and the user has read access to the account, the
list of accounts in the $$MODMOVE_CTL file is searched until the file is
found.  If it is found in a UI account, it is copied to the specified account.
If found in an SI account, a +END file is built.  If the file name begins with
: a +END file will be built even if the file does not exist in any of the
accounts.  The $$MODMOVE_CTL file may also have records which begin with a *.
These records are written to the user and are not otherwise processed.
 
The first record in $$MODMOVE_CTL may be PROTECT.  If so, then only one user
may have write access to a file at a time.
 
The DONE command checks the specified file for write access for the user.  If
found, it is removed.  If no access accounts are left, access control of DONE
is placed on the file.
.*K* OWNER
Jack Jackson, late of LADC
.*K* XINDEX
MODMOVE.:SYS
.*R*
AID=INTEGRATION
.*R*
PLUS_CARDS
.*R*
.*K* XINDEX_ABSTRACT
TOOL=MODMOVE
.*R*
Grants and removes access to update files in controlled accounts.
.*K* CHANGES Changes changes
2/6/92 - PAR - fix Star 41379 - garbage display DONeing locked controlled file.
.*R*
11/7/91 - PAR - Made UNLOCK and DEL prompt for filenames like WR and DONE.
.*R*
10/23/91 - PAR - made LOCK/UNLOCK/STRIP preserve mod time.  Added STRIP cmd.
.*B*
860721
.*R*
Fixed bug where control file was ignored if update file existed in .:XTUI.
.*R*
11/19/84
.*R*
L name.acct thinks forever about name if DONEd.
.*R*
11/06/84
.*R*
Fix to copy files with null records (built by 6EDIT, e.g.)
.*R*
840807
.*R*
The +END record is now made at key 99998.000 to facilitate positioning in an
update packet with the EDIT AP command.
.*R*
840509
.*R*
Fixed for C00...won't try to write with keys if to device anymore.
