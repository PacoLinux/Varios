VERSION E05

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:1    
        1        1        /*M* TOP$POLTS     TOLTS Peripheral On-Line Testing System */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* PLM=3,DCI=6,SQB=N,PRB=N,DTI=5,ENI=0,AND=Y,ECI=0,CSU=3,DIN=3,
        9        9             CTI=8,CRM=109,CRT=1,NLB=N,NTB=Y,MCL=110 */
       10       10
       11       11        /*P* NAME:         TOP$POLTS
       12       12             PURPOSE:      POLTS and MOLTS MME Service Routines
       13       13             DESCRIPTION:  TOP$POLTS contains the MME Service Routines for
       14       14                           Slave Mode POLTS and Slave Mode MOLTS.    These
       15       15                           MMEs primarily  deal  with  doing test  I/O  to
       16       16                           peripherals under test.
       17       17                           The MMEs are fielded by the TOLTS Fault Handler
       18       18                           and are parceled out this routine for servicing.
       19       19             LAST UPDATE:  87-09-10
       20       20             REFERENCE:    CP-6 Release E00
       21       21                           TDM-ITD-62  (CP6 POLTS SERVICE ROUTINES)
       22       22                           TDM-ITD-80  (CP6 MOLTS SERVICE ROUTINES)
       23       23        */
       24       24        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:2    
       25       25        /*F* NAME:         TOP$POLTS
       26       26             PURPOSE:      POLTS and MOLTS MME Service Routines
       27       27             DESCRIPTION:  MME Service Routines for the following:
       28       28
       29       29                           MME ALCMCA
       30       30                           MME ALLOCR
       31       31                           MME ASGPAT
       32       32                           MME CHANTM
       33       33                           MME DEALCP
       34       34                           MME EXPDEV
       35       35                           MME GETCSC
       36       36                           MME GETLIN
       37       37                           MME HUNGTM
       38       38                           MME IOCONS
       39       39                           MME IPCWDT
       40       40                           MME LODIMG
       41       41                           MME LODVFC
       42       42                           MME LPWDT
       43       43                           MME PACMAN
       44       44                           MME POINIT
       45       45                           MME PRTRAN
       46       46                           MME RELLNK
       47       47                           MME RLSMPC
       48       48                           MME RLSPAT
       49       49                           MME SCTCMP
       50       50                           MME SETPUN
       51       51                           MME TESTIO
       52       52                           MME UNSPEC
       53       53                           MME WRDUMP
       54       54        */
       55       55        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:3    
       56       56        TOP$POLTS: PROC (MME, MREG, MME_INSTR$, RETURN_DELTA) ;
       57       57
       58       58        /* Include Files */
       59       59
       60       60           %INCLUDE B$JIT ;
       61      663           %INCLUDE B_ERRORS_C ;
       62     1790           %INCLUDE CP_6 ;
       63     7349           %INCLUDE CP_6_SUBS ;
       64     7889           %INCLUDE NI_DATA_C ;
       65     8002           %INCLUDE TOT_RQSTS_E ;
       66     8044           %INCLUDE TOT_TOLTS_M ;
       67     9162           %INCLUDE TO_PERR_C ;
       68     9747           %INCLUDE TD$STRUCT ;
       69     9848
       70     9849        /* Parameters */
       71     9850
       72     9851           %MME ;
       73     9872           %MREG ;
       74     9894           %MME_INSTR$ ;
       75     9897           %RETURN_DELTA ;
       76     9900
       77     9901        /* Data Control Blocks */
       78     9902
       79     9903    1      DCL M$MCACNFG DCB ;
       80     9904    1      DCL M$CNFGFILE DCB ;
       81     9905    1      DCL M$DEVCNFG  DCB ;
       82     9906    1      DCL M$DUMP     DCB ;
       83     9907           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:4    
       84     9908        /* External Variables */
       85     9909
       86     9910    1      DCL B$JIT$         PTR SYMREF ;
       87     9911    1      DCL B$TCB$         PTR SYMREF ;
       88     9912           %FPT_WRITE (FPTN = CONSOLE_FPT,
       89     9913                       STCLASS = SYMREF) ;
       90     9944           %FPT_READ (FPTN = READ_IO,
       91     9945                      STCLASS = SYMREF) ;
       92     9984    1      DCL TOP$EVENT_ID   UBIN WORD STATIC SYMDEF INIT (0) ;
       93     9985    1      DCL 1 TOP$SCT (0:7) SYMREF,
       94     9986    1            2 CN,
       95     9987    1              3 WD0#     UBIN WORD,
       96     9988    1              3 WD1#     UBIN WORD,
       97     9989    1              3 WD2#     UBIN WORD,
       98     9990    1              3 WD3#     UBIN WORD,
       99     9991    1            2 DV,
      100     9992    1              3 WD0#     UBIN WORD,
      101     9993    1              3 WD1#     UBIN WORD,
      102     9994    1              3 WD2#     UBIN WORD,
      103     9995    1              3 WD3#     UBIN WORD ;
      104     9996    1      DCL TOP$STATUS     BIT (72) STATIC SYMDEF INIT ('0'B) ;
      105     9997           %TOT$DMC (STCLASS = SYMREF) ;
      106    10031           %TOP$TCP (STCLASS = "BASED (TOT$DMC.TOP$TCP.PTR$)") ;
      107    10119           %TOT$ECP (STCLASS = SYMREF) ;
      108    10168           %TOT$TOLTS (STCLASS = SYMREF) ;
      109    10189           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:5    
      110    10190        /* Variable Declarations */
      111    10191
      112    10192           %B$ALT ;
      113    10200           %B$TCB ;
      114    10203           %F$DCB ;
      115    10260    1      DCL 1 FICCDD BASED ALIGNED,
      116    10261    1            2 FLAG# BIT (3) UNAL,
      117    10262    1            2 FORMAT# BIT (1) UNAL,
      118    10263    1            2 IOM# UBIN (2) UNAL,
      119    10264    1            2 CHAN# UBIN (6) UNAL,
      120    10265    1            2 DEV# UBIN (6) UNAL,
      121    10266    1            2 TEST_TYPE# UBIN (6) UNAL,
      122    10267    1            2 * BIT (12) UNAL ;
      123    10268           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:6    
      124    10269    1      DCL 1 IO_ENTRY (0:7) STATIC ALIGNED,
      125    10270    1            2 W0# UBIN WORD ALIGNED,
      126    10271    1            2 W1,
      127    10272    1              3 EXTSTAT_ADR# UBIN HALF HALIGNED,
      128    10273    1              3 LOWER# UBIN HALF HALIGNED,
      129    10274    1            2 W2,
      130    10275    1              3 * BIT (2) UNAL,
      131    10276    1              3 MDS_DEV_IDCW_LIST BIT (1) UNAL,
      132    10277    1              3 SCT_ADR# UBIN (15) UNAL,
      133    10278    1              3 * BIT (18) UNAL,
      134    10279    1            2 W3# UBIN WORD ALIGNED,
      135    10280    1            2 W4,
      136    10281    1              3 DEVICE_CMD# BIT (6) UNAL,
      137    10282    1              3 * BIT (12) UNAL,
      138    10283    1              3 IO_CMD# UBIN (6) UNAL,
      139    10284    1              3 * BIT (6) UNAL,
      140    10285    1              3 RECORD_COUNT# UBIN (6) UNAL,
      141    10286    1            2 W5# BIT (36) ALIGNED,
      142    10287    1            2 W6,
      143    10288    1              3 DCW_PTR_2ND# UBIN HALF HALIGNED,
      144    10289    1              3 * BIT (18) UNAL,
      145    10290    1            2 W7,
      146    10291    1              3 DEVICE_CMD# BIT (6) UNAL,
      147    10292    1              3 PRESELECT_INDEX# UBIN (12) UNAL,
      148    10293    1              3 IO_CMD# UBIN (6) UNAL,
      149    10294    1              3 * BIT (5) UNAL,
      150    10295    1              3 BIT29# BIT (1) UNAL,
      151    10296    1              3 RECORD_COUNT# UBIN (6) UNAL,
      152    10297    1            2 W8,
      153    10298    1              3 DCW_PTR# UBIN HALF HALIGNED,
      154    10299    1              3 * BIT (18) UNAL,
      155    10300    1            2 W9,
      156    10301    1              3 STATUS_ADR# UBIN HALF HALIGNED,
      157    10302    1              3 CC_ADR# UBIN HALF HALIGNED,
      158    10303    1            2 W10# UBIN WORD ALIGNED ;
      159    10304           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:7    
      160    10305           %IS$ (STCLASS = CONSTANT) ;
      161    10319    1      DCL 1 MPC (0:7) STATIC,
      162    10320    1            2 W0# UBIN WORD ALIGNED INIT (0*0),
      163    10321    1            2 W1# UBIN WORD ALIGNED INIT (0*0),
      164    10322    1            2 W2# UBIN WORD ALIGNED INIT (0*0),
      165    10323    1            2 W3# UBIN WORD ALIGNED INIT (0*0) ;
      166    10324    1      DCL 1 SCTWRK BASED ALIGNED,
      167    10325    1            2 SCT_ADR# UBIN HALF HALIGNED,
      168    10326    1            2 * BIT (6) UNAL,
      169    10327    1            2 XBICC# UBIN (12) UNAL,
      170    10328    1            2 ALTSCT_ADR# UBIN HALF HALIGNED,
      171    10329    1            2 GCOS_TYPE_CODE# UBIN (6) UNAL,
      172    10330    1            2 * BIT (12) UNAL,
      173    10331    1            2 CSCT_ADR# UBIN HALF HALIGNED,
      174    10332    1            2 IOC_TYPE# BIT (4) UNAL,
      175    10333    1            2 CTLR_TYPE# BIT (4) UNAL,
      176    10334    1            2 * BIT (1) UNAL,
      177    10335    1            2 XIOC_TYPE# BIT (4) UNAL,
      178    10336    1            2 XCTLR_TYPE# BIT (4) UNAL,
      179    10337    1            2 * BIT (1) UNAL,
      180    10338    1            2 MPC_SCT_ADR# UBIN HALF HALIGNED,
      181    10339    1            2 MPC_INDEX# UBIN HALF HALIGNED,
      182    10340    1            2 CRCST_0,
      183    10341    1              3 * BIT (1) UNAL,
      184    10342    1              3 VOLATILE_FW# BIT (1) UNAL,
      185    10343    1              3 MPC# BIT (1) UNAL,
      186    10344    1              3 * BIT (33) UNAL,
      187    10345    1            2 CRCST_1,
      188    10346    1              3 * BIT (7) UNAL,
      189    10347    1              3 BIT7# BIT (1) UNAL,
      190    10348    1              3 BIT8# BIT (1) UNAL,
      191    10349    1              3 * BIT (27) UNAL,
      192    10350    1            2 * BIT (36) UNAL,
      193    10351    1            2 CRCST_3,
      194    10352    1              3 * BIT (9) UNAL,
      195    10353    1              3 BIT9# BIT (1) UNAL,
      196    10354    1              3 * BIT (26) UNAL,
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:8    
      197    10355    1            2 SCT_0,
      198    10356    1              3 DEV_TYPE# UBIN (6) UNAL,
      199    10357    1              3 DEV_NUMBER# UBIN (6) UNAL,
      200    10358    1              3 BIT12# BIT (1) UNAL,
      201    10359    1              3 SPEED# BIT (1) UNAL,
      202    10360    1              3 BIT14# BIT (1) UNAL,
      203    10361    1              3 * BIT (2) UNAL,
      204    10362    1              3 BIT17# BIT (1) UNAL,
      205    10363    1              3 * BIT (18) UNAL,
      206    10364    1            2 SCT_1,
      207    10365    1              3 * BIT (15) UNAL,
      208    10366    1              3 MODULES# UBIN (3) UNAL,
      209    10367    1              3 * BIT (3) UNAL,
      210    10368    1              3 DENSITIES# BIT (4) UNAL,
      211    10369    1              3 * BIT (11) UNAL ;
      212    10370    1      DCL 1 STATUS BASED ALIGNED,
      213    10371    1            2 TERMINATION_INDICATOR# BIT (1) UNAL,
      214    10372    1            2 POWER_OFF# BIT (1) UNAL,
      215    10373    1            2 MAJOR# BIT (4) UNAL,
      216    10374    1            2 MINOR# BIT (6) UNAL,
      217    10375    1            2 ODD_WORD_COUNT# BIT (1) UNAL,
      218    10376    1            2 * BIT (1) UNAL,
      219    10377    1            2 MARKER_INTERRUPT# BIT (1) UNAL,
      220    10378    1            2 LOST_INTERRUPT# BIT (1) UNAL,
      221    10379    1            2 INTERRUPT_INDICATOR# BIT (1) UNAL,
      222    10380    1            2 ABORT_INDICATOR# BIT (1) UNAL,
      223    10381    1            2 IOM_CHANNEL# UBIN (3) UNAL,
      224    10382    1            2 IOM_CENTRAL# UBIN (3) UNAL,
      225    10383    1            2 ADDR_EXTENSION# BIT (6) UNAL,
      226    10384    1            2 RECORD_COUNT_RESIDUE# UBIN (6) UNAL,
      227    10385    1            2 DATA_ADDRESS_RESIDUE# UBIN (18) UNAL,
      228    10386    1            2 CHARACTER_COUNT# UBIN (3) UNAL,
      229    10387    1            2 READ_WRITE_FLAG# BIT (1) UNAL,
      230    10388    1            2 ACTION_CODE# BIT (2) UNAL,
      231    10389    1            2 WORD_COUNT_RESIDUE# UBIN (12) UNAL ;
      232    10390           %VLP_ERRCODE (FPTN = TOP_ERROR_CODE,
      233    10391                         FCG  = 'TO',
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:9    
      234    10392                         MID  = 'P',
      235    10393                         SEV  = 0) ;
      236    10438           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:10   
      237    10439        /* Function Parameter Tables */
      238    10440
      239    10441           %FPT_TDCLOSE (FPTN = TDCLOSE_FPT) ;
      240    10455           %FPT_TDIO   (FPTN = TDIO_FPT) ;
      241    10472           %FPT_TDOPEN (FPTN = TDOPEN_FPT) ;
      242    10489
      243    10490        /* External Entries */
      244    10491
      245    10492    1      DCL TOK$COURTESY_CALL ENTRY (1) ;
      246    10493    1      DCL TOT$CONSOLE_IN    ENTRY ;
      247    10494    1      DCL TOT$CONSOLE_OUT   ENTRY ;
      248    10495    1      DCL TOT$OCTASC        ENTRY (2) ;
      249    10496    1      DCL TOT$BCD_ASCII     ENTRY (3) ;
      250    10497    1      DCL TOX$ERROR         ENTRY (1) ;
      251    10498    1      DCL TOX$WARN          ENTRY (1) ;
      252    10499    1      DCL TOX$SCREECH       ENTRY (1) ;
      253    10500           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:11   
      254    10501        /*D* NAME:         TOP$POLTS
      255    10502             ENTRY:
      256    10503             CALL:         CALL TOP$POLTS(MME,MREG,MME_INSTR$,RETURN_DELTA) ;
      257    10504             INTERFACE:    TOP$MME_ALCMCA
      258    10505                           TOP$MME_ALLOCR
      259    10506                           TOP$MME_ASGPAT
      260    10507                           TOP$MME_CHANTM
      261    10508                           TOP$MME_DEALCP
      262    10509                           TOP$MME_EXPDEV
      263    10510                           TOP$MME_GETCSC
      264    10511                           TOP$MME_GETLIN
      265    10512                           TOP$MME_HUNGTM
      266    10513                           TOP$MME_IOCONS
      267    10514                           TOP$MME_IPCWDT
      268    10515                           TOP$MME_LODIMG
      269    10516                           TOP$MME_LODVFC
      270    10517                           TOP$MME_LPWDT
      271    10518                           TOP$MME_PACMAN
      272    10519                           TOP$MME_POINIT
      273    10520                           TOP$MME_PRTRAN
      274    10521                           TOP$MME_RELEAS
      275    10522                           TOP$MME_RELLNK
      276    10523                           TOP$MME_RELMPC
      277    10524                           TOP$MME_RLSPAT
      278    10525                           TOP$MME_SCTCMP
      279    10526                           TOP$MME_TESTIO
      280    10527                           TOP$MME_UNSPEC
      281    10528                           TOP$MME_WRDUMP
      282    10529             INPUT:        MME is a 6 word structure containing the first
      283    10530                           6 words following the MME instruction in the subexec.
      284    10531
      285    10532                           MREG is a structure of the normal GMAP visible
      286    10533                           registers at the time of the MME.
      287    10534
      288    10535                           MME_INSTR$ is a pointer to the MME instruction.
      289    10536
      290    10537             OUTPUT:       RETURN_DELTA indicates how many instructions pass
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:12   
      291    10538                           the MME instruction to return to.
      292    10539             DESCRIPTION:  The main portion of the routine merely decodes
      293    10540                           the MME number(bits 0-17 of the instruction)
      294    10541                           and calls the appropriate MME Service Routine.
      295    10542                           All Service Routines return to this main level
      296    10543                           for return to the subexec via the Fault Hanlder,
      297    10544                           TOF$FAULTS.
      298    10545
      299    10546                           See documentation for the respective MME Service
      300    10547                           Routines for more detail.
      301    10548        */
      302    10549        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:13   
      303    10550        /* MAIN PROGRAM */
      304    10551
      305    10552    2      DO CASE (-MME.INST.NO) ;
      306    10553    2         CASE (%ALCMCA) ;
      307    10554    2            CALL TOP$MME_ALCMCA (MREG.A,MREG.Q,MREG.X0,RETURN_DELTA);
      308    10555    2         CASE (%ALLOCR) ;
      309    10556    2            CALL TOP$MME_ALLOCR (MME.WD_1,MME.WD_2,MME.WD_3,MME.WD_4,MREG.Q,
      310    10557    2                    MREG.X1,MREG.X2,MREG.X3,RETURN_DELTA) ;
      311    10558    2         CASE (%ASGPAT) ;
      312    10559    2            CALL TOP$MME_ASGPAT (MREG.X1,MREG.X2,MREG.X4,RETURN_DELTA) ;
      313    10560    2         CASE (%CHANTM) ;
      314    10561    2            CALL TOP$MME_CHANTM (MREG.X4,MREG.A,RETURN_DELTA) ;
      315    10562    2         CASE (%DEALCP) ;
      316    10563    2            CALL TOP$MME_DEALCP (MREG.X1,RETURN_DELTA) ;
      317    10564    2         CASE (%EXPDEV) ;
      318    10565    2            CALL TOP$MME_EXPDEV (MREG.X1,MREG.A,MREG.Q,RETURN_DELTA) ;
      319    10566    2         CASE (%GETCSC) ;
      320    10567    2            CALL TOP$MME_GETCSC (MREG.X1,MREG.X4,RETURN_DELTA) ;
      321    10568    2         CASE (%GETLIN) ;
      322    10569    2            CALL TOP$MME_GETLIN (MREG.A,MREG.Q,MREG.X3,MREG.X4,MREG.X1,
      323    10570    2                    RETURN_DELTA) ;
      324    10571    2         CASE (%HUNGTM) ;
      325    10572    2            CALL TOP$MME_HUNGTM (MREG.A,MREG.Q,MREG.X1,RETURN_DELTA) ;
      326    10573    2         CASE (%IOCONS) ;
      327    10574    2            CALL TOP$MME_IOCONS (MREG.X1,MREG.A,RETURN_DELTA) ;
      328    10575    2         CASE (%IPCWDT) ;
      329    10576    2            CALL TOP$MME_IPCWDT (MREG.X1,RETURN_DELTA) ;
      330    10577    2         CASE (%LODIMG) ;
      331    10578    2            CALL TOP$MME_LODIMG (MREG.X1,RETURN_DELTA) ;
      332    10579    2         CASE (%LODVFC) ;
      333    10580    2            CALL TOP$MME_LODVFC (MREG.X1,MREG.A,RETURN_DELTA) ;
      334    10581    2         CASE (%LPWDT) ;
      335    10582    2            CALL TOP$MME_LPWDT (MREG.X1,MREG.A,RETURN_DELTA) ;
      336    10583    2         CASE (%PACMAN) ;
      337    10584    2            CALL TOP$MME_PACMAN (MREG.A, MREG.Q, MREG.X2, MREG.X5, RETURN_DELTA) ;
      338    10585    2         CASE (%POINIT) ;
      339    10586    2            CALL TOP$MME_POINIT (MME_INSTR$,RETURN_DELTA) ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:14   
      340    10587    2         CASE (%PRTRAN) ;
      341    10588    2            CALL TOP$MME_PRTRAN (MME.WD_1,MREG.X1,MREG.A,RETURN_DELTA) ;
      342    10589                 %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:15   
      343    10590    2         CASE (%RELEAS) ;
      344    10591    2            CALL TOP$MME_RELEAS (MREG.X7,MREG.X0,MREG.X1,MREG.X2,MREG.X4,
      345    10592    2                    MREG.X6,MREG.A,MREG.Q,RETURN_DELTA) ;
      346    10593    2         CASE (%RELLNK) ;
      347    10594    2            CALL TOP$MME_RELLNK (MREG.A,MREG.Q,MREG.X1,MREG.X3,MREG.X4,
      348    10595    2                    RETURN_DELTA) ;
      349    10596    2         CASE (%RLSMPC) ;
      350    10597    2            CALL TOP$MME_RELMPC (MREG.X1,RETURN_DELTA) ;
      351    10598    2         CASE (%RLSPAT) ;
      352    10599    2            CALL TOP$MME_RLSPAT (MREG.X4,RETURN_DELTA) ;
      353    10600    2         CASE (%SCTCMP) ;
      354    10601    2            CALL TOP$MME_SCTCMP (MME.WD_1,MME.WD_2,MREG.Q,MREG.X2,
      355    10602    2                    MREG.X3,RETURN_DELTA) ;
      356    10603    2         CASE (%TESTIO) ;
      357    10604    2            CALL TOP$MME_TESTIO (MME.WD_1,MME.WD_2,MME.WD_3,MME.WD_4,MREG.A,
      358    10605    2                    MREG.Q,MREG.X4,RETURN_DELTA) ;
      359    10606    2         CASE (%UNSPEC) ;
      360    10607    2            CALL TOP$MME_UNSPEC (MREG.X1,RETURN_DELTA) ;
      361    10608    2         CASE (%WRDUMP) ;
      362    10609    2            CALL TOP$MME_WRDUMP (MREG.A,MREG.Q,MREG.X1,MREG.X2,
      363    10610    2                    RETURN_DELTA) ;
      364    10611    2      END /* DO CASE */ ;
      365    10612    1      RETURN ;
      366    10613
      367    10614        /* END OF MAIN */
      368    10615        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:16   
      369    10616        /*D* NAME:         TOP$POLTS_IO
      370    10617             ENTRY:
      371    10618             CALL:         CALL TOP$POLTS_IO(,,,,) ;
      372    10619             INTERFACE:    TOP$TIO_DONE
      373    10620             INPUT:        No parameters passed in call.
      374    10621                           Informations passed via some static variables(which
      375    10622                           is bad programming practice, but is necessary because
      376    10623                           of the program structure of TOP$POLTS.
      377    10624
      378    10625                           TOP$EVENT_ID contains the Event ID from the TCB Event
      379    10626                           frame.
      380    10627
      381    10628                           TOP$STATUS contains the 2 status words fetched
      382    10629                           from the TCB Event frame.
      383    10630             OUTPUT:       I/O completion status is returned to the subexec
      384    10631                           and a courtesy call is paid.
      385    10632             DESCRIPTION:  This entry point is called from the dispatcher
      386    10633                           TOD$DISPATCHER upon completion of a test I/O
      387    10634                           to a peripheral.  The completion status is returned
      388    10635                           to the subexec and  a courtesy call is paid
      389    10636                           to notify the subexec that the I/O completed.
      390    10637
      391    10638                           A separate entry point into TOP$POLTS is necessary
      392    10639                           because access is needed to the tables in this
      393    10640                           module.
      394    10641
      395    10642                           In general, when a no wait test I/O completes,
      396    10643                           CP6 enters the TOLTS Event Handler which fetches
      397    10644                           the Event ID and completion status from the TCB
      398    10645                           frame and builds a dispatcher entry for servicing
      399    10646                           later.  Included in this entry is (1)whether POLTS
      400    10647                           or MOLTS I/O is completing,(2) the Event ID and
      401    10648                           (3)the 2 words of completion status.  Sometime
      402    10649                           later the dispatcher queue is serviced, and this
      403    10650                           entry point is called as a result to handle
      404    10651                           completion of a test I/O.  Return is then made to
      405    10652                           to the dispatcher.
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:17   
      406    10653
      407    10654                           The I/O completion is queued up via the dispatcher
      408    10655                           so that the courtesy call can be paid to the subexec
      409    10656                           in controlled circumstance instead of when ever the
      410    10657                           event handler is entered by CP6.  This scheme of
      411    10658                           things avoids the race conditions.
      412    10659        */
      413    10660
      414    10661    1   TOP$POLTS_IO: ENTRY (MME,MREG,MME_INSTR$,RETURN_DELTA) ;
      415    10662
      416    10663    1      CALL TOP$TIO_DONE ;
      417    10664    1      RETURN ;
      418    10665
      419    10666        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:18   
      420    10667        /*I* NAME:         TOP$MME_ALCMCA
      421    10668             INTERFACE:    MATCH_ICC
      422    10669                           DEDICATE_CHANNEL_3
      423    10670                           UNDEDICATE_CHANNEL_3
      424    10671             INPUT:        Q    =  0  ALLOCATE CHANNEL 3
      425    10672                                  -1  RELEASE CHANNEL 3
      426    10673                           AU   = IOM NUMBER
      427    10674                           AL   = CHANNEL NUMBER (3)
      428    10675             OUTPUT:       X0   = 0   REQUEST PROCESSED OK
      429    10676                               ~= 0   ERROR RETRY LATER
      430    10677             DESCRIPTION:  This routine allocates channel 3 on the requesting IOM,
      431    10678                           or releases the channel back to system.  The system may deny
      432    10679                           the request to allocate the channel if it is already in use
      433    10680                           or dedicated to another process.
      434    10681        */
      435    10682    1   TOP$MME_ALCMCA: PROC (A,Q,X0,RETURN_DELTA) ;
      436    10683
      437    10684    2      DCL 1 A ALIGNED,
      438    10685    2            2 A_UPPER             UBIN HALF HALIGNED,
      439    10686    2            2 A_LOWER             UBIN HALF HALIGNED;
      440    10687    2      DCL X0                      UBIN HALF HALIGNED ;
      441    10688    2      DCL 1 ICC ALIGNED,
      442    10689    2            2 IOM#                UBIN (3) UNAL,
      443    10690    2            2 CHAN#               UBIN (8) UNAL;
      444    10691    2      DCL Q                       SBIN WORD ALIGNED;
      445    10692    2      DCL TCX                     UBIN WORD ALIGNED;
      446    10693    2      DCL RETURN_DELTA            SBIN HALF HALIGNED;
      447    10694        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:19   
      448    10695    2      RETURN_DELTA = 1 ;
      449    10696    2      ICC.IOM# = A.A_UPPER ;
      450    10697    2      ICC.CHAN# = A.A_LOWER ;
      451    10698    2      CALL MATCH_ICC (ICC,TCX) ;
      452    10699
      453    10700           /* processing */
      454    10701    2      X0 = 0 ;  /* INITIALIZE ERROR RETURN CODE GOOD STATUS */
      455    10702    3      DO CASE (Q) ;
      456    10703    3         CASE (0) ;
      457    10704    3            CALL DEDICATE_CHANNEL_3 (TCX) WHENALTRETURN
      458    10705    4                 DO ;
      459    10706    4                    X0 = 1 ;
      460    10707    4                 END /* WHENALTRETURN */ ;
      461    10708    3         CASE (ELSE) ;
      462    10709    3            CALL UNDEDICATE_CHANNEL_3 WHENALTRETURN
      463    10710    4                 DO ;
      464    10711    4                    X0 = 1 ;
      465    10712    4                 END /* WHENALTRETURN */ ;
      466    10713    3      END /* CASE */ ;
      467    10714    2      RETURN ;
      468    10715        /* END TOP$MME_ALCMCA */
      469    10716        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:20   
      470    10717        /*I* NAME:         DEDICATE_CHANNEL_3
      471    10718             INTERFACE:
      472    10719             INPUT:        TCX = index into TOP$TCP for the test page
      473    10720             OUTPUT:
      474    10721             DESCRIPTION:  This routine allocates channel 3 on the requesting IMX
      475    10722                           with a call to M$TDOPEN.  The system may deny the request
      476    10723                           to allocate the channel if it is already in use or
      477    10724                           dedicated to another process.
      478    10725        */
      479    10726    2   DEDICATE_CHANNEL_3: PROC (TCX) ALTRET ;
      480    10727
      481    10728    3      DCL TCX                     UBIN WORD ALIGNED;
      482    10729        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:21   
      483    10730    3      TDOPEN_FPT.V.DCB# = DCBNUM (M$MCACNFG) ;
      484    10731    3      TDOPEN_FPT.V.TEST# =  %TD_TEST_MCA  ;
      485    10732    3      TDOPEN_FPT.V.DEVICE.IOM# = TOP$TCP.FICCDD.IOM#(TCX) ;
      486    10733    3      TDOPEN_FPT.V.DEVICE.CHAN# = TOP$TCP.FICCDD.CHAN#(TCX) ;
      487    10734    3      TDOPEN_FPT.V.DEVICE.DVN# = TOP$TCP.FICCDD.DEV#(TCX) ;
      488    10735    3      CALL M$TDOPEN (TDOPEN_FPT) WHENALTRETURN
      489    10736    4           DO ;
      490    10737    4              ALTRETURN ;
      491    10738    4           END /* WHENALTRETURN DO */ ;
      492    10739    3      RETURN ;
      493    10740    3   END DEDICATE_CHANNEL_3 ;
      494    10741        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:22   
      495    10742        /*I* NAME:         UNDEDICATE_CHANNEL_3
      496    10743             INTERFACE:
      497    10744             INPUT:
      498    10745             OUTPUT:
      499    10746             DESCRIPTION:  This routine makes a request to release channel 3 back to
      500    10747                           the system with a call to M$TDCLOSE.  The system may deny
      501    10748                           the request if the channel has already been released.
      502    10749        */
      503    10750    2   UNDEDICATE_CHANNEL_3: PROC ALTRET ;
      504    10751
      505    10752    3      TDCLOSE_FPT.V.DCB# = DCBNUM (M$MCACNFG) ;
      506    10753    3      CALL M$TDCLOSE (TDCLOSE_FPT) WHENALTRETURN
      507    10754    4           DO ;
      508    10755    4              ALTRETURN ;
      509    10756    4           END /* WHENALTRETURN DO */ ;
      510    10757    3      RETURN ;
      511    10758    3   END UNDEDICATE_CHANNEL_3 ;
      512    10759    2   END TOP$MME_ALCMCA ;
      513    10760        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:23   
      514    10761        /*I* NAME:         TOP$MME_ALLOCR
      515    10762             INTERFACE:    MATCH_ICCDD
      516    10763                           GET_TEST_DCB
      517    10764                           SET_TDOPEN_FPT
      518    10765                           ALLOCATE_DEVICE
      519    10766                           SET_MTAR_PERMISSION
      520    10767                           BUILD_DEVICE_SCT
      521    10768                           BUILD_CONTROLLER_SCT
      522    10769                           BUILD_SCTWRK
      523    10770                           TOX$WARN
      524    10771             INPUT:        WD_1 = (0-17) address of FICCDD in subexec
      525    10772                                  (18-35) not used
      526    10773                           WD_2 = (0-17) address of SCTWRK buffer in subexec
      527    10774                                  (18-35) address of permission data (MTAR only)
      528    10775                           WD_3 = not used
      529    10776                           WD_4 = not used
      530    10777                           X1 = not used
      531    10778             OUTPUT:       X2 = error return code or subexec
      532    10779                           SCTWRK buffer in subexec is built
      533    10780                           TOP$TCP updated
      534    10781                           RETURN_DELTA = 8, peripheral allocated
      535    10782                           RETURN_DELTA = 5, peripheral not allocated
      536    10783             DESCRIPTION:  This  routine does the  actual allocation of a
      537    10784                           peripheral from CP6 for a subexec.  It (1)gets
      538    10785                           a DCB for the  test page I/O, (2)allocates the
      539    10786                           peripheral and (3) builds a bunch of phony SCT
      540    10787                           configuration  tables to  satisfy the subexec.
      541    10788                           A lot of the  information from these tables is
      542    10789                           returned immediately to the subexec in SCTWRK,
      543    10790                           but the tables are kept around for later use.
      544    10791
      545    10792                           A  lot   of  validity checking  for peripheral
      546    10793                           allocation  has  been  done in TOP$MME_SCTCMP,
      547    10794                           and very  little checking is done  by this MME
      548    10795                           service  routine.  Checking  in TOP$MME_SCTCMP
      549    10796                           includes
      550    10797
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:24   
      551    10798                             a.  validating ICCDD
      552    10799                             b. getting the device code for the peripheral
      553    10800                             c.  verifying boot channel for ITRs
      554    10801
      555    10802                           As  for  DCB  assignments,  each  test page is
      556    10803                           assigned one of its own.
      557    10804
      558    10805                           In the  CP6 environment, peripheral allocation
      559    10806                           consists  of calling  M$TDOPEN.  The operating
      560    10807                           system takes care of allocating the device and
      561    10808                           doing housekeeping on the I/O tables.  The big
      562    10809                           difference  between GCOS  and CP6  is that the
      563    10810                           peripheral  must have been  partitioned out of
      564    10811                           the system  prior to the call  of M$TDOPEN for
      565    10812                           the peripheral to be allocated.  (In GCOS, the
      566    10813                           T&D    system   does    its   own   peripheral
      567    10814                           allocation.)
      568    10815
      569    10816                           Before  TOLTS is  started, the  SYSCON program
      570    10817                           must be used  to partition the peripheral from
      571    10818                           the system.  Thus, it is not available for use
      572    10819                           other that by a T&D program.  When M$TDOPEN is
      573    10820                           called,  CP6 first goes  out to the operator's
      574    10821                           console  and  asks  permission  to  allocate a
      575    10822                           device for T&D.  The operator can either allow
      576    10823                           CP6 to proceed with  the allocation or deny it
      577    10824                           with  the appropriate keyin.   The latter case
      578    10825                           results in an ALTRETURN from M$TDOPEN.
      579    10826
      580    10827                           If  allowed to proceed,  CP6 will allocate the
      581    10828                           device and return.  This routine then builds a
      582    10829                           bunch  of pseudo  configuration tables.  Note:
      583    10830                           For  MOLTS  MTAR  testing,  an initial OPEN is
      584    10831                           done  requesting write  permission via  use of
      585    10832                           the unique  MTAR test type code.  If this OPEN
      586    10833                           is refused, then it is retried using the POLTS
      587    10834                           test type code, which, if accepted, results in
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:25   
      588    10835                           read permission only being giver to MTAR.
      589    10836        */
      590    10837
      591    10838    1   TOP$MME_ALLOCR: PROC (WD_1, WD_2, WD_3, WD_4, Q, X1, X2, X3, RETURN_DELTA) ;
      592    10839
      593    10840    2      DCL 1 WD_1 ALIGNED,
      594    10841    2            2 FICCDD_ADDR#         UBIN HALF HALIGNED,
      595    10842    2            2 *                    BIT (18) UNAL ;
      596    10843    2      DCL 1 WD_2 ALIGNED,
      597    10844    2            2 SCTWRK_ADDR#         UBIN HALF HALIGNED,
      598    10845    2            2 MTAR_FLAG_ADDR#      UBIN HALF HALIGNED ;
      599    10846    2      DCL WD_3                     UBIN WORD ALIGNED ;
      600    10847    2      DCL WD_4                     UBIN WORD ALIGNED ;
      601    10848    2      DCL Q                        UBIN WORD ALIGNED ;
      602    10849    2      DCL X1                       UBIN HALF HALIGNED ;
      603    10850    2      DCL X2                       UBIN HALF HALIGNED ;
      604    10851    2      DCL X3                       UBIN HALF HALIGNED ;
      605    10852    2      DCL DEVICE_CODE              UBIN (6) CALIGNED ;
      606    10853    2      DCL TCX                      UBIN WORD ALIGNED ;
      607    10854    2      DCL FICCDD$                  PTR ALIGNED ;
      608    10855    2      DCL SCTWDS_BUILT             BIT (1) CALIGNED ;
      609    10856    2      DCL 1 NEW_ICCDD,
      610    10857    2            2 FLAG#                BIT (3) UNAL,
      611    10858    2            2 FORMAT#              BIT (1) UNAL,
      612    10859    2            2 ICCDD_,
      613    10860    2              3 IOM#               UBIN (3) UNAL,
      614    10861    2              3 CHAN#              UBIN (8) UNAL,
      615    10862    2              3 DEV#               UBIN (6) UNAL,
      616    10863    2            2 ICCDD# REDEF ICCDD_ UBIN (17) UNAL ;
      617    10864    2      DCL RETURN_DELTA             SBIN HALF HALIGNED ;
      618    10865           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:26   
      619    10866        /* Code */
      620    10867
      621    10868    2      CALL MATCH_ICCDD (TCX) ;
      622    10869        /* IF channel 3 MCA request no device or MPC  */
      623    10870
      624    10871    2      IF TOP$TCP.DEVICE_CODE(TCX) = %CHN_3
      625    10872    2      THEN
      626    10873    2         TOP$TCP.DCB#(TCX) = DCBNUM(M$MCACNFG) ;
      627    10874    3      ELSE DO ;
      628    10875    3              CALL GET_TEST_DCB (TCX) ;
      629    10876    3              CALL SET_TDOPEN_FPT (TCX) ;
      630    10877    3              CALL ALLOCATE_DEVICE WHENALTRETURN
      631    10878    4                   DO ;
      632    10879    4                      X2 = %CP6DENY# ;
      633    10880    4                      RETURN_DELTA = 5 ;
      634    10881    4                      RETURN ;
      635    10882    4                   END /* WHENALTRETURN */ ;
      636    10883    3              CALL SET_MTAR_PERMISSION (TCX) ;
      637    10884    3           END /*  ELSE DO  */ ;
      638    10885
      639    10886    2      CALL BUILD_DEVICE_SCT (TCX) WHENALTRETURN
      640    10887    3           DO ;
      641    10888    3              X2 = %INVDEV# ;
      642    10889    3              RETURN_DELTA = 5 ;
      643    10890    3              RETURN ;
      644    10891    3           END ;
      645    10892    2      CALL BUILD_CONTROLLER_SCT (TCX) ;
      646    10893
      647    10894    2      SCTWDS_BUILT = %TRUE ;
      648    10895    2      CALL BUILD_SCTWRK (TCX,WD_2,,,,Q,SCTWDS_BUILT) ;
      649    10896
      650    10897    2      RETURN_DELTA = 8 ;
      651    10898    2      RETURN ;
      652    10899
      653    10900        /* END TOP$MME_ALLOCR */
      654    10901        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:27   
      655    10902        /*I* NAME:         MATCH_ICCDD
      656    10903             INTERFACE:    TOX$SCREECH
      657    10904             INPUT:        Uses bits 0-17 of WD_1, address of FICCDD in
      658    10905                           the subexec.
      659    10906             OUTPUT:       TCX, the index into TOP$TCP for the test page.
      660    10907                           NEW_ICCDD
      661    10908             DESCRIPTION:  Uses WD_1, which contains in bits 0-17 the
      662    10909                           address of FICCDD in the subexec, to build a pointer
      663    10910                           to it.  The ICCDD portion is fetched and stored in
      664    10911                           NEW_ICCDD_.  This is then compared to the ICCDD
      665    10912                           field in TOP$TCP.X.ICCDD_(TCX) which was set
      666    10913                           by TOP$MME_SCTCMP.  The search continues until
      667    10914                           a match is made or all 8 entries of TOP$TCP
      668    10915                           have been searched.
      669    10916
      670    10917                           TCX, the index for the test page into TOP$TCP
      671    10918                           is returned to the caller.
      672    10919        */
      673    10920        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:28   
      674    10921    2   MATCH_ICCDD: PROC (TCX) ;
      675    10922
      676    10923    3      DCL TCX UBIN WORD ALIGNED ;
      677    10924
      678    10925        /* Code */
      679    10926
      680    10927    3      FICCDD$ = PINCRW (IS$, WD_1.FICCDD_ADDR#) ;
      681    10928
      682    10929    3      IF FICCDD$->FICCDD.FORMAT#
      683    10930    4      THEN DO ;
      684    10931    4              NEW_ICCDD.ICCDD_.IOM# = FICCDD$->FICCDD.IOM# ;
      685    10932    4              NEW_ICCDD.ICCDD_.CHAN# = X3 ;
      686    10933    4              NEW_ICCDD.ICCDD_.DEV# = FICCDD$->FICCDD.DEV# ;
      687    10934    4           END ;
      688    10935    4      ELSE DO ;
      689    10936    4              NEW_ICCDD.ICCDD_.IOM# = FICCDD$->FICCDD.IOM# ;
      690    10937    4              NEW_ICCDD.ICCDD_.CHAN# = FICCDD$->FICCDD.CHAN# ;
      691    10938    4              NEW_ICCDD.ICCDD_.DEV# = FICCDD$->FICCDD.DEV# ;
      692    10939    4           END ;
      693    10940    3      NEW_ICCDD.FLAG# = '0'B ;
      694    10941    3      NEW_ICCDD.FORMAT# = FICCDD$->FICCDD.FORMAT# ;
      695    10942
      696    10943    3      TCX = 0 ;
      697    10944    4      DO WHILE TCX < 8 ;
      698    10945    4         IF TOP$TCP.ICCDD.ICCDD#(TCX) = NEW_ICCDD.ICCDD#
      699    10946    4         THEN RETURN ;
      700    10947    4         ELSE TCX = TCX + 1 ;
      701    10948    4      END /* WHILE */ ;
      702    10949
      703    10950    3      TOP_ERROR_CODE.ERR# = %E$BADICCDD ;
      704    10951    3      CALL TOX$SCREECH (TOP_ERROR_CODE) ;
      705    10952
      706    10953    3   END MATCH_ICCDD ;
      707    10954        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:29   
      708    10955        /*I* NAME:         GET_TEST_DCB
      709    10956             AUTHOR:       Scott S. Sheppard
      710    10957             PURPOSE:      Gets a Unique DCB for a POLTS test
      711    10958             INTERFACE:    M$GETDCB
      712    10959                           BINCHAR
      713    10960                           TOX$ERROR
      714    10961             PARAMETERS:   TCX - input
      715    10962             DATA:         TOP$TCP.DCB#(TCX) - output
      716    10963             DESCRIPTION:  POLTS used to  have 8 unique DCB's linked into
      717    10964                           it.   These DCB's occupied  space whether they
      718    10965                           were  needed  or  not.  This procedure obtains
      719    10966                           those  DCB's  dynamically,  using the original
      720    10967                           naming convention: POLTS_DCB0 ... POLTS_DCB7
      721    10968        */
      722    10969        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:30   
      723    10970    2   GET_TEST_DCB: PROC (TCX) ;
      724    10971
      725    10972    3      DCL TCX         UBIN WORD ALIGNED ;
      726    10973    3      DCL 1 DCB_NAME  STATIC CALIGNED,
      727    10974    3            2 LGTH    UBIN BYTE CALIGNED INIT (10),
      728    10975    3            2 VALUE   CHAR (9) CALIGNED INIT ('POLTS_DCB'),
      729    10976    3            2 TCX     CHAR (1) CALIGNED ;
      730    10977    3      DCL DCB_NUM     UBIN WORD STATIC ALIGNED ;
      731    10978           %B$EXCFR ;
      732    10996           %FPT_GETDCB (FPTN    = GET_POLTS_DCB,
      733    10997                        DCBNAME = DCB_NAME,
      734    10998                        DCBNUM  = DCB_NUM) ;
      735    11013
      736    11014        /* Code */
      737    11015
      738    11016    3      CALL BINCHAR (DCB_NAME.TCX, TCX) ;
      739    11017    3      CALL M$GETDCB (GET_POLTS_DCB) WHENRETURN
      740    11018    4           DO ;
      741    11019    4              TOP$TCP.DCB#(TCX) = DCB_NUM ;
      742    11020    4              RETURN ;
      743    11021    4           END /* WHENRETURN */ ;
      744    11022    3      WHENALTRETURN
      745    11023    4           DO ;
      746    11024    4              CALL TOX$ERROR (B$TCB$ -> B$TCB.ALT$ -> B$EXCFR.ERR) ;
      747    11025    4           END /* WHENALTRETURN */ ;
      748    11026
      749    11027    3   END GET_TEST_DCB ;
      750    11028        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:31   
      751    11029        /*I* NAME:         SET_TDOPEN_FPT
      752    11030             INPUT:        TCX, the test page's index into TOP$TCP
      753    11031             OUTPUT:       TDOPEN_FPT gets set up (see below)
      754    11032             DESCRIPTION:  The FPT for M$TDOPEN is set up for the call to
      755    11033                           allocate the peripheral.  The following fields are
      756    11034                           set:
      757    11035                           a.  TDOPEN_FPT.V.DCB# = DCB number for the page, fetched
      758    11036                               from TOP$TCP.
      759    11037                           b.  TDOPEN_FPT.V.TEST#  1 for POLTS test or MTAR read-only,
      760    11038                                                   2 for ITR(MOLTS) test,
      761    11039                                                   3 for MDR(MOLTS) test,
      762    11040                                                   4 for MTAR write
      763    11041                                                   5 for FEP (not used)
      764    11042                                                   6 for MPC pre-open
      765    11043                                                   7 for MCA channel 3 open
      766    11044                               This is determined from test type information
      767    11045                               carried in TOP$TCP.TEST_TYPE.
      768    11046                           c.  TDOPEN_FPT.V.DEVICE = IOM,channel and device
      769    11047                               (ICCDD) number fetched from TOP$TCP.
      770    11048                           d.  TDOPEN_FPT.CHAIN_ = vector of a buffer in
      771    11049                               TOP$TCP(TEST_CONTROL.BFR.TRAIN_IMAGE)
      772    11050                               where CP6 is to return the printer train image
      773    11051                               if the peripheral to be allocated is a printer.
      774    11052                               There is one of these buffers per entry in
      775    11053                               TOP$TCP.
      776    11054                           e.  TDOPEN_FPT.VFC_ = vector of a buffer in
      777    11055                               TOP$TCP(TEST_CONTROL.BFR.VFC_IMAGE)
      778    11056                               where CP6 is to return the printer VFC image
      779    11057                               if the peripheral to be allocated is a printer.
      780    11058                               There is one of these buffers per entry in
      781    11059                               TOP$TCP.
      782    11060                        Note:  CP6 will also return additional information
      783    11061                               about the peripheral in the DCB.  See a based
      784    11062                               structure of the DCB for details.
      785    11063        */
      786    11064        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:32   
      787    11065    2   SET_TDOPEN_FPT: PROC (TCX) ;
      788    11066
      789    11067    3      DCL TCX           UBIN WORD ALIGNED ;
      790    11068
      791    11069        /* Code */
      792    11070
      793    11071    3      TDOPEN_FPT.V.DCB# = TOP$TCP.DCB#(TCX) ;
      794    11072
      795    11073    4      DO SELECT (TOP$TCP.TEST_TYPE(TCX)) ;
      796    11074    4         SELECT ('MTC', 'MTG', 'PLT') ;
      797    11075    4         TDOPEN_FPT.V.TEST# = %TD_TEST_POLTS ;
      798    11076    4         SELECT ('ITR') ;
      799    11077    4         TDOPEN_FPT.V.TEST# = %TD_TEST_ITR ;
      800    11078    4         TDOPEN_FPT.V.SPEVENT# = %ITR_EVENT_BASE + TCX ;
      801    11079    4         SELECT ('MDR') ;
      802    11080    4         TDOPEN_FPT.V.TEST# = %TD_TEST_MDR ;
      803    11081    4         SELECT ('MTR', 'MDC', 'MDS', 'TMD') ;
      804    11082    4         TDOPEN_FPT.V.TEST# = %TD_TEST_MTAR ;
      805    11083    4         SELECT ('MFC') ;
      806    11084    5         DO CASE (TOP$TCP.DEVICE_CODE(TCX)) ;
      807    11085    5            CASE ( %DMTC9 ) ;
      808    11086    5               TDOPEN_FPT.V.TEST# = %TD_TEST_POLTS ;
      809    11087    5            CASE (ELSE) ;
      810    11088    5               TDOPEN_FPT.V.TEST# = %TD_TEST_MTAR ;
      811    11089    5         END /* CASE  */ ;
      812    11090    4         SELECT (ELSE) ;
      813    11091    4      TOP_ERROR_CODE.ERR# = %E$BADTT ;
      814    11092    4      CALL TOX$SCREECH (TOP_ERROR_CODE) ;
      815    11093    4      END /* SELECT */ ;
      816    11094
      817    11095    3      TDOPEN_FPT.V.DEVICE.IOM# = NEW_ICCDD.ICCDD_.IOM# ;
      818    11096    3      TDOPEN_FPT.V.DEVICE.CHAN# = NEW_ICCDD.ICCDD_.CHAN# ;
      819    11097    3      TDOPEN_FPT.V.DEVICE.DVN# = NEW_ICCDD.ICCDD_.DEV# ;
      820    11098    3      TDOPEN_FPT.CHAIN_ = VECTOR (TOP$TCP.BFR.TRAIN_IMAGE(TCX)) ;
      821    11099    3      TDOPEN_FPT.VFC_ = VECTOR (TOP$TCP.BFR.VFC_IMAGE(TCX)) ;
      822    11100    3      RETURN ;
      823    11101
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:33   
      824    11102    3   END SET_TDOPEN_FPT ;
      825    11103        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:34   
      826    11104        /*I* NAME:         ALLOCATE_DEVICE
      827    11105             AUTHOR:       Scott S. Sheppard
      828    11106             PURPOSE:      allocates a device for T&D
      829    11107             INTERFACE:    M$TDOPEN
      830    11108                           TOX$WARN
      831    11109             PARAMETERS:   None passed.
      832    11110             DATA:         TDOPEN_FPT.V.TEST# input / output
      833    11111             DESCRIPTION:  This  procedure allocates a  device for T&D by
      834    11112                           performing a TDOPEN.  If  an attempt to open a
      835    11113                           MTAR device  with  write permission  fails,  a
      836    11114                           retry is done for read permission.
      837    11115        */
      838    11116
      839    11117    2   ALLOCATE_DEVICE: PROC ALTRET ;
      840    11118
      841    11119        /* Code */
      842    11120
      843    11121    3      CALL M$TDOPEN (TDOPEN_FPT) WHENALTRETURN
      844    11122    4           DO ;
      845    11123               /* Allow MTAR/FTAR read-only tests to proceed
      846    11124                  like the POLTS tests */
      847    11125    4              IF (TDOPEN_FPT.V.TEST# = %TD_TEST_MTAR) AND NOT
      848    11126    4                      (TOP$TCP.TEST_TYPE(TCX) = 'MDC' OR
      849    11127    4                      TOP$TCP.TEST_TYPE(TCX) = 'MDS' OR
      850    11128    4                      TOP$TCP.TEST_TYPE(TCX) = 'TMD' )
      851    11129    5              THEN DO ;
      852    11130    5                      TDOPEN_FPT.V.TEST# = %TD_TEST_POLTS ;
      853    11131    5                      CALL M$TDOPEN (TDOPEN_FPT) ALTRET (NO_ALLOCATION) ;
      854    11132    5                   END /* THEN */ ;
      855    11133    5              ELSE DO ;
      856    11134    5   NO_ALLOCATION:
      857    11135    5                      CALL TOX$WARN (B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR) ;
      858    11136    5                      ALTRETURN ;
      859    11137    5                   END /* ELSE */ ;
      860    11138    4           END /* WHENALTRETURN */ ;
      861    11139    3      RETURN ;
      862    11140
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:35   
      863    11141    3   END ALLOCATE_DEVICE ;
      864    11142        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:36   
      865    11143        /*I* NAME:         SET_MTAR_PERMISSION
      866    11144             AUTHOR:       Scott S. Sheppard
      867    11145             PURPOSE:      sets MTAR read/write permission
      868    11146             INTERFACE:    PINCRW
      869    11147             PARAMETERS:   TCX - input (test control index)
      870    11148             DATA:         WD_2 - input (address of MTAR flag)
      871    11149             DESCRIPTION:  This  procedure  sets   the  MTAR  read  write
      872    11150                           permission flag from the TDOPEN value used for
      873    11151                           the device.  Type  4 indicates that the device
      874    11152                           is  open  with  write  permission  and  Type 1
      875    11153                           indicates  that  the  device  is open for read
      876    11154                           only.
      877    11155        */
      878    11156
      879    11157    2   SET_MTAR_PERMISSION: PROC (TCX) ;
      880    11158
      881    11159    3      DCL TCX                      UBIN WORD ALIGNED ;
      882    11160    3      DCL MTARF$                   PTR ALIGNED ;
      883    11161    3      DCL 1 MTAR_DATA BASED ALIGNED,
      884    11162    3            2 *                    BIT (33) UNAL,
      885    11163    3            2 WR_FLAG#             BIT (3) UNAL ;
      886    11164
      887    11165        /* Code */
      888    11166
      889    11167    3      IF TOP$TCP.TEST_TYPE(TCX) = 'MTR'
      890    11168    4      THEN DO ;
      891    11169    4              MTARF$ = PINCRW (IS$, WD_2.MTAR_FLAG_ADDR#) ;
      892    11170    4              IF TDOPEN_FPT.V.TEST# = %TD_TEST_MTAR
      893    11171    4              THEN MTARF$ -> MTAR_DATA.WR_FLAG# = '0'O ;
      894    11172    4              ELSE MTARF$ -> MTAR_DATA.WR_FLAG# = '7'O ;
      895    11173    4           END /* THEN */ ;
      896    11174    3      ELSE /* not an MTR type test */ ;
      897    11175    3      RETURN ;
      898    11176
      899    11177    3   END SET_MTAR_PERMISSION ;
      900    11178        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:37   
      901    11179        /*I* NAME:         BUILD_DEVICE_SCT
      902    11180             INTERFACE:    BUILD_CHN_3_SCT
      903    11181                           BUILD_CONSOLE_SCT
      904    11182                           BUILD_TAPE_SCT
      905    11183                           BUILD_DISK_SCT
      906    11184                           BUILD_PRINTER_SCT
      907    11185                           BUILD_CREADER_SCT
      908    11186                           BUILD_CPUNCH_SCT
      909    11187             INPUT:        TCX, the index into TOP$TCP for the test page.
      910    11188             OUTPUT:       TOP$SCT.DV(TCX), device pseudo SCT table is built
      911    11189             DESCRIPTION:  Each entry into TOP$TCP has associated with it
      912    11190                           a pseudo device SCT table, TOP$SCT.DV(TCX).  The
      913    11191                           format is the same as the SCT tables in GCOS.  This
      914    11192                           routine builds the SCT table to the extent required
      915    11193                           by CP6 TOLTS.  These psuedo SCT tables are not
      916    11194                           needed or used by CP6.
      917    11195
      918    11196                           A pointer, DV_SCT$, is built to the device SCT
      919    11197                           for this test page, TOP$SCT.DV(TCX).  Then the device
      920    11198                           code in TOP$TCP.DEVICE_CODE(TCX) is used to
      921    11199                           call a separate routine to build the SCT table,
      922    11200                           depending on the device.  Each peripheral type has its
      923    11201                           own SCT building routine.
      924    11202
      925    11203                           The BASED structure, DEVICE_SCT, defines the only
      926    11204                           fields in the SCT which need to be set.  All other
      927    11205                           fields in the GCOS SCT tables are currently not
      928    11206                           applicable in the CP6 environment.
      929    11207        */
      930    11208        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:38   
      931    11209    2   BUILD_DEVICE_SCT: PROC (TCX) ALTRET ;
      932    11210
      933    11211    3      DCL DV_SCT$ PTR ALIGNED ;
      934    11212    3      DCL TCX     UBIN (36) ALIGNED ;
      935    11213
      936    11214        /* Universally based structures for SCT's */
      937    11215
      938    11216    3      DCL 1 DEVICE_SCT BASED ALIGNED,
      939    11217    3            2 W0,
      940    11218    3              3 DEVICE_TYPE#   UBIN (6)  UNAL,
      941    11219    3              3 DEVICE_NO#     UBIN (6)  UNAL,
      942    11220    3              3 BIT12#         BIT (1)  UNAL,
      943    11221    3              3 BIT13#         BIT (1)  UNAL,
      944    11222    3              3 BIT14#         BIT (1)  UNAL,
      945    11223    3              3 *              BIT (2)  UNAL,
      946    11224    3              3 BIT17#         BIT (1)  UNAL,
      947    11225    3              3 *              BIT (18) UNAL,
      948    11226    3            2 W1,
      949    11227    3              3 *              BIT (15) UNAL,
      950    11228    3              3 MODULES#       BIT (3)  UNAL,
      951    11229    3              3 *              BIT (3)  UNAL,
      952    11230    3              3 DENSITIES#     BIT (4)  UNAL,
      953    11231    3              3 *              BIT (11) UNAL,
      954    11232    3            2 W2#              BIT (36) ALIGNED,
      955    11233    3            2 W3#              BIT (36) ALIGNED ;
      956    11234              %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:39   
      957    11235        /* Code */
      958    11236
      959    11237    3      DV_SCT$ = ADDR (TOP$SCT.DV(TCX)) ;
      960    11238    4      DO CASE (TOP$TCP.DEVICE_CODE(TCX)) ;
      961    11239    4         CASE (%CHN_3) ;
      962    11240    4            CALL BUILD_CHN_3_SCT ;
      963    11241    4         CASE (%DSCC1) ;
      964    11242    4            CALL BUILD_CONSOLE_SCT ;
      965    11243    4         CASE ( %DMTC9 ) ;
      966    11244    4            CALL BUILD_TAPE_SCT WHENALTRETURN
      967    11245    5                 DO ;
      968    11246    5                    ALTRETURN ;
      969    11247    5                 END ;
      970    11248    4         CASE (%DS509,%DS450,%DSA1B,%DSD1B,%DSC1B,%DSK1B,%DSM1D,%DSM2D) ;
      971    11249    4            CALL BUILD_DISK_SCT ;
      972    11250    4         CASE (%DPR41) ;
      973    11251    4            CALL BUILD_PRINTER_SCT ;
      974    11252    4         CASE (%DCR31) ;
      975    11253    4            CALL BUILD_CREADER_SCT ;
      976    11254    4         CASE (%DCP30) ;
      977    11255    4            CALL BUILD_CPUNCH_SCT ;
      978    11256    4         CASE (ELSE) ;
      979    11257    4            TOP_ERROR_CODE.ERR# = %E$BADDEVTYP ;
      980    11258    4            CALL TOX$SCREECH (TOP_ERROR_CODE) ;
      981    11259    4      END /* CASE */ ;
      982    11260    3      RETURN ;
      983    11261
      984    11262        /*END BUILD_DEVICE_SCT*/
      985    11263        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:40   
      986    11264        /*I* NAME:         BUILD_CHN_3_SCT
      987    11265             INTERFACE:
      988    11266             INPUT:
      989    11267             OUTPUT:       TOP$SCT.DV(TCX) built(see below)
      990    11268             DESCRIPTION:  Merely sets the DEVICE_TYPE and DEVICE_NO fields
      991    11269                           in the SCT from information in TOP$TCP, bit 12
      992    11270                           for last channel for an MCA channel 3 request.
      993    11271        */
      994    11272
      995    11273    3   BUILD_CHN_3_SCT: PROC ;
      996    11274
      997    11275        /* Code */
      998    11276
      999    11277    4      DV_SCT$ -> DEVICE_SCT = '0'B ;
     1000    11278    4      DV_SCT$ -> DEVICE_SCT.W0.DEVICE_TYPE# = TOP$TCP.DEVICE_CODE(TCX) ;
     1001    11279    4      DV_SCT$ -> DEVICE_SCT.W0.DEVICE_NO# = 0 ;
     1002    11280    4      DV_SCT$ -> DEVICE_SCT.W0.BIT12# = '1'B ;
     1003    11281    4      RETURN ;
     1004    11282
     1005    11283    4   END BUILD_CHN_3_SCT ;
     1006    11284        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:41   
     1007    11285        /*I* NAME:         BUILD_DISK_SCT
     1008    11286             INTERFACE:
     1009    11287             INPUT:
     1010    11288             OUTPUT:       TOP$SCT.DV(TCX) built(see below)
     1011    11289             DESCRIPTION:  Merely sets the DEVICE_TYPE and DEVICE_NO fields
     1012    11290                           in the SCT from information in TOP$TCP.
     1013    11291        */
     1014    11292
     1015    11293    3   BUILD_DISK_SCT: PROC ;
     1016    11294
     1017    11295        /* Code */
     1018    11296
     1019    11297    4      DV_SCT$ -> DEVICE_SCT = '0'B ;
     1020    11298    4      DV_SCT$ -> DEVICE_SCT.W0.DEVICE_TYPE# = TOP$TCP.DEVICE_CODE(TCX) ;
     1021    11299    4      DV_SCT$ -> DEVICE_SCT.W0.DEVICE_NO# = FICCDD$ -> FICCDD.DEV# ;
     1022    11300    4      RETURN ;
     1023    11301
     1024    11302    4   END BUILD_DISK_SCT ;
     1025    11303        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:42   
     1026    11304        /*I* NAME:         BUILD_TAPE_SCT
     1027    11305             INTERFACE:    GET_DENSITIES
     1028    11306             INPUT:
     1029    11307             OUTPUT:       TOP$SCT.DV(TCX) built.
     1030    11308             DESCRIPTION:  Merely sets the DEVICE_TYPE,DEVICE_NO and DENSITIES
     1031    11309                           fields in the SCT from information in TOP$TCP.
     1032    11310                           GET_DENSITIES subroutine does a Device Survey
     1033    11311                           command to the tape MPC to get density capability
     1034    11312                           information about the tape drives since this info
     1035    11313                           is not available from CP6.
     1036    11314        */
     1037    11315
     1038    11316    3   BUILD_TAPE_SCT: PROC ALTRET ;
     1039    11317
     1040    11318        /* Code */
     1041    11319
     1042    11320    4      DV_SCT$->DEVICE_SCT = '0'B ;
     1043    11321    4      DV_SCT$->DEVICE_SCT.W0.DEVICE_TYPE# = TOP$TCP.DEVICE_CODE(TCX) ;
     1044    11322    4      DV_SCT$->DEVICE_SCT.W0.DEVICE_NO# = FICCDD$->FICCDD.DEV# ;
     1045    11323    4      IF TOP$TCP.TEST_TYPE(TCX) = 'ITR'
     1046    11324    4      THEN /* Controller under test, no density applicable */ ;
     1047    11325    5      ELSE DO ;
     1048    11326    5              CALL GET_DENSITIES ALTRET (BAD_SURVEY) ;
     1049    11327    5              DV_SCT$ ->DEVICE_SCT.W1.DENSITIES# = TOP$TCP.SCT.TAPE_DENSITY(TCX) ;
     1050    11328    5           END /* ELSE */ ;
     1051    11329    4      RETURN ;
     1052    11330
     1053    11331    4   BAD_SURVEY:
     1054    11332    4      ALTRETURN ;
     1055    11333
     1056    11334        /* END BUILD_TAPE_SCT */
     1057    11335        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:43   
     1058    11336        /*I* NAME:         GET_DENSITITES
     1059    11337             INTERFACE:    M$TDIO
     1060    11338             INPUT:
     1061    11339             OUTPUT:       TOP$TCP.TAPE_DENSITY(TCX) contains the 4 bit
     1062    11340                           density capability code which was fetched from the
     1063    11341                           hardware.  This indicates what densities needed to be
     1064    11342                           tested by POLTS.
     1065    11343             DESCRIPTION:  A call is made through the normal CP6 test I/O
     1066    11344                           interface, M$TDIO to fetch hardware information
     1067    11345                     about the drives on the tape MPC using the Device Survey
     1068    11346                           command. The Device Survey command ('57'O) returns
     1069    11347                           8 words of information(18 bits of infomation per
     1070    11348                           drive, for 16 drives) into the buffer DEVICE_INFO.
     1071    11349                           The only information which is saved
     1072    11350                           at this point is the tape density information in
     1073    11351                           the lower byte.
     1074    11352
     1075    11353                           TDIO_FPT is set up for the I/O as follows:
     1076    11354
     1077    11355                           TDIO_FPT.DATA_ = vector framing the entire ISR
     1078    11356                                           (all vector information is in
     1079    11357                                           the static declaration on the
     1080    11358                                           vector DATA_VECTOR except the
     1081    11359                                           size information which is inserted
     1082    11360                                           using B$JIT.TDP).
     1083    11361                           TDIO_FPT.DCWLIST_ = vector framing DENSITY_DCWLIST,
     1084    11362                                              which is the Device Survey IDCW
     1085    11363                                              and a DCW for 8 words pointing to
     1086    11364                                              DEVICE_INFO.
     1087    11365                           TDIO_FPT.V.DCB# = DCB# from TOP$TCP
     1088    11366                           TDIO_FPT.V.WAIT# = set for a "wait" I/O
     1089    11367                           TDIO_FPT.V.PCW# = required constant
     1090    11368                           TDIO_FPT.V.ALTPATH = none specified
     1091    11369                           TDIO_FPT.V.EVENT# = none specified
     1092    11370                           TDIO_FPT.V.TIMEOUT# = take CP6 default
     1093    11371
     1094    11372                           On return from the call to M$TDIO, the status is
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:44   
     1095    11373                           checked.  It it is not "ready" an error condition is
     1096    11374                           indicated. Otherwise the index into the table, DIX,
     1097    11375                           is set to the zero relative device info. entry.
     1098    11376                           This contains the information for the tape drive of
     1099    11377                           interest.  A "1" is subtracted from the device
     1100    11378                           number stored in TOP$TCP.Y.DD(TCX) when
     1101    11379                           computing the index because information is
     1102    11380                           returned in DEVICE_INFO starting at device 1
     1103    11381                           instead of device 0.  Thus, DEVICE_INFO(0)
     1104    11382                           contains the information for device 1, and
     1105    11383                           DEVICE_INFO(15) contains the information for
     1106    11384                           device 16.  The 4 bit density code is stored in
     1107    11385                           TOP$TCP.TAPE_DENSITY(TCX).
     1108    11386
     1109    11387                           As of the MTP0610 controller, the following
     1110    11388                           density codes were valid:
     1111    11389
     1112    11390                               '1100'b = 1600 bpi
     1113    11391                               '0101'b = 556,800,1600 bpi
     1114    11392                               '1000'b = 800,1600 bpi
     1115    11393                               '1001'b = 556,800 bpi
     1116    11394                               '1011'b = 1600,6250 bpi
     1117    11395                               '1010'b = 6250 bpi
     1118    11396        */
     1119    11397        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:45   
     1120    11398    4   GET_DENSITIES: PROC ALTRET ;
     1121    11399
     1122    11400    5      DCL 1 DATA_VECTOR STATIC DALIGNED,
     1123    11401    5            2 SIZE#     UBIN (20) UNAL,
     1124    11402    5            2 FLAGS#    BIT (9) UNAL INIT ('777'O),
     1125    11403    5            2 V#        BIT (2) UNAL INIT ('01'B),
     1126    11404    5            2 *         BIT (5) UNAL,
     1127    11405    5            2 BASE#     UBIN (20) UNAL INIT (0),
     1128    11406    5            2 *         BIT (4) UNAL INIT ('0'B),
     1129    11407    5            2 SEGID#    UBIN (12) UNAL INIT (%IS_SEGID) ;
     1130    11408    5      DCL DATA_V REDEF DATA_VECTOR BIT (72) ;
     1131    11409    5      DCL 1 DENSITY_DCWLIST STATIC ALIGNED,
     1132    11410    5            2 IDCW,
     1133    11411    5              3 CMD#        BIT (6) INIT ('57'O),
     1134    11412    5              3 DEV_NUMBER# UBIN (6) UNAL INIT (0),
     1135    11413    5              3 *           BIT (6) UNAL INIT ('0'B),
     1136    11414    5              3 TYPE#       UBIN (3) UNAL INIT (7),
     1137    11415    5              3 *           BIT (3) UNAL INIT ('0'B),
     1138    11416    5              3 CHAN_CMD#   BIT (6) INIT ('0'B),
     1139    11417    5              3 REC_COUNT#  UBIN (6) UNAL INIT (1),
     1140    11418    5            2 DCW,
     1141    11419    5              3 ADDR#       UBIN HALF UNAL,
     1142    11420    5              3 *           BIT (6) UNAL INIT ('0'B),
     1143    11421    5              3 WORD_COUNT# UBIN (12) UNAL INIT (8) ;
     1144    11422    5      DCL STATUS$           PTR ALIGNED ;
     1145    11423           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:46   
     1146    11424    5      DCL 1 DEVICE_INFO (0:15) STATIC HALIGNED,
     1147    11425    5            2 *         BIT (1) UNAL,
     1148    11426    5            2 ALTCHAN#  BIT (1) UNAL,
     1149    11427    5            2 OPI#      BIT (1) UNAL,
     1150    11428    5            2 RDY#      BIT (1) UNAL,
     1151    11429    5            2 DEV#      UBIN (5) UNAL,
     1152    11430    5            2 *         BIT (1) UNAL,
     1153    11431    5            2 SPEED#    UBIN (3) UNAL,
     1154    11432    5            2 TRACK#    BIT (1) UNAL,
     1155    11433    5            2 DENSITIES# BIT (4) UNAL ;
     1156    11434    5      DCL DEVICE_INFO$    PTR CONSTANT ALIGNED INIT (ADDR(DEVICE_INFO)) ;
     1157    11435    5      DCL 1 DEVICE_INFO_ REDEF DEVICE_INFO$ ALIGNED,
     1158    11436    5            2 ADDR#       UBIN (18) UNAL,
     1159    11437    5            2 SEGID       UBIN (18) UNAL ;
     1160    11438    5      DCL DIX             UBIN HALF HALIGNED ;
     1161    11439           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:47   
     1162    11440        /* Code */
     1163    11441
     1164    11442    5      DENSITY_DCWLIST.DCW.ADDR# = DEVICE_INFO_.ADDR# ;
     1165    11443    5      DATA_VECTOR.SIZE# = (B$JIT$ -> B$JIT.TDP - 64) * 1024 * 4 - 1 ;
     1166    11444    5      TDIO_FPT.DATA_ = DATA_V ;
     1167    11445    5      TDIO_FPT.DCWLIST_ = VECTOR (DENSITY_DCWLIST) ;
     1168    11446    5      TDIO_FPT.V.DCB# = TOP$TCP.DCB#(TCX) ;
     1169    11447    5      TDIO_FPT.V.WAIT# = %YES# ;
     1170    11448    5      TDIO_FPT.V.PCW# = '000000700000'O ;
     1171    11449    5      TDIO_FPT.V.ALTPATH = '0'B ;
     1172    11450    5      TDIO_FPT.V.EVENT# = 0 ;
     1173    11451    5      TDIO_FPT.V.TIMEOUT# = 0 ;
     1174    11452    5      CALL M$TDIO (TDIO_FPT) WHENRETURN
     1175    11453    6           DO ;
     1176    11454    6              STATUS$ = ADDR (DCBADDR (TOP$TCP.DCB#(TCX)) -> F$DCB.TDSTAT#) ;
     1177    11455    6              IF STATUS$ -> STATUS.MAJOR# = '0000'B AND
     1178    11456    6                      STATUS$ -> STATUS.MINOR# = '00'O
     1179    11457    7              THEN DO ;
     1180    11458    7                      IF TOP$TCP.DEVICE_MODEL (TCX) = 'MTU8200'
     1181    11459    7                      THEN DIX = TOP$TCP.FICCDD.DEV# (TCX);
     1182    11460    7                      ELSE DIX = TOP$TCP.FICCDD.DEV#(TCX) - 1 ;
     1183    11461    7                      TOP$TCP.SCT.TAPE_DENSITY(TCX) = DEVICE_INFO.DENSITIES#(DIX) ;
     1184    11462    7                      RETURN ;
     1185    11463    7                   END /* THEN */ ;
     1186    11464    7              ELSE DO ;
     1187    11465    7                      TOP_ERROR_CODE.ERR# = %E$BADSTS ;
     1188    11466    7                      CALL TOX$WARN (TOP_ERROR_CODE) ;
     1189    11467    7                      ALTRETURN ;
     1190    11468    7                   END ;
     1191    11469    6           END /* WHENRETURN */ ;
     1192    11470    5      WHENALTRETURN
     1193    11471    6           DO ;
     1194    11472    6              CALL TOX$WARN (B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR) ;
     1195    11473    6              ALTRETURN ;
     1196    11474    6           END ;
     1197    11475
     1198    11476    5   END GET_DENSITIES ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:48   
     1199    11477    4   END BUILD_TAPE_SCT ;
     1200    11478        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:49   
     1201    11479        /*I* NAME:         BUILD_PRINTER_SCT
     1202    11480             INTERFACE:
     1203    11481             INPUT:
     1204    11482             OUTPUT:       TOP$SCT.DV(TCX)  is built.
     1205    11483             DESCRIPTION:  The DEVICE_TYPE and DEVICE_NO fields are set from
     1206    11484                           information in TOP$TCP.  Also, bit 14 in word
     1207    11485                           0 of the SCT is zeroed indicating that the printer
     1208    11486                           is 132 columns only.  Note that this field is
     1209    11487                           being forced, because there are no plans for60
     1210    11488                           column printers on CP6 presently.  If this
     1211    11489                           changes, this bit will need to be set from
     1212    11490                           configuration information returned from CP6.
     1213    11491        */
     1214    11492
     1215    11493    3   BUILD_PRINTER_SCT: PROC ;
     1216    11494
     1217    11495        /* Code */
     1218    11496
     1219    11497    4      DV_SCT$->DEVICE_SCT = '0'B ;
     1220    11498    4      DV_SCT$->DEVICE_SCT.W0.DEVICE_TYPE# = TOP$TCP.DEVICE_CODE(TCX) ;
     1221    11499    4      DV_SCT$->DEVICE_SCT.W0.DEVICE_NO# = FICCDD$->FICCDD.DEV# ;
     1222    11500    4      DV_SCT$->DEVICE_SCT.W0.BIT14# = '0'B ;
     1223    11501    4      DV_SCT$->DEVICE_SCT.W0.BIT17# = TOP$TCP.SCT.BIT17(TCX) ;
     1224    11502    4      DV_SCT$->DEVICE_SCT.W0.BIT13# = TOP$TCP.SCT.BIT13(TCX) ;
     1225    11503    4      RETURN ;
     1226    11504
     1227    11505    4   END BUILD_PRINTER_SCT ;
     1228    11506        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:50   
     1229    11507        /*I* NAME:         BUILD_CREADER_SCT
     1230    11508             INTERFACE:
     1231    11509             INPUT:
     1232    11510             OUTPUT:       TOP$SCT.DV(TCX) is built.
     1233    11511             DESCRIPTION:  The DEVICE_TYPE and DEVICE_NO fields are set using
     1234    11512                           information from TOP$TCP.
     1235    11513        */
     1236    11514
     1237    11515    3   BUILD_CREADER_SCT: PROC ;
     1238    11516
     1239    11517        /* Code */
     1240    11518
     1241    11519    4      DV_SCT$->DEVICE_SCT = '0'B ;
     1242    11520    4      DV_SCT$->DEVICE_SCT.W0.DEVICE_TYPE# = TOP$TCP.DEVICE_CODE(TCX) ;
     1243    11521    4      DV_SCT$->DEVICE_SCT.W0.DEVICE_NO# = FICCDD$->FICCDD.DEV# ;
     1244    11522    4      RETURN ;
     1245    11523
     1246    11524    4   END BUILD_CREADER_SCT ;
     1247    11525        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:51   
     1248    11526        /*I* NAME:         BUILD_CPUNCH_SCT
     1249    11527             INTERFACE:
     1250    11528             INPUT:
     1251    11529             OUTPUT:       TOP$SCT.DV(TCX) is built.
     1252    11530             DESCRIPTION:  The DEVICE_TYPE and DEVICE_NO fields are set using
     1253    11531                           information from TOP$TCP.
     1254    11532        */
     1255    11533
     1256    11534    3   BUILD_CPUNCH_SCT: PROC ;
     1257    11535
     1258    11536        /* Code */
     1259    11537
     1260    11538    4      DV_SCT$->DEVICE_SCT = '0'B ;
     1261    11539    4      DV_SCT$->DEVICE_SCT.W0.DEVICE_TYPE# = TOP$TCP.DEVICE_CODE(TCX) ;
     1262    11540    4      DV_SCT$->DEVICE_SCT.W0.DEVICE_NO# = FICCDD$->FICCDD.DEV# ;
     1263    11541    4      RETURN ;
     1264    11542
     1265    11543    4   END BUILD_CPUNCH_SCT ;
     1266    11544        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:52   
     1267    11545        /*I* NAME:         BUILD_CONSOLE_SCT
     1268    11546             INTERFACE:
     1269    11547             INPUT:
     1270    11548             OUTPUT:       TOP$SCT.DV(TCX) is built.
     1271    11549             DESCRIPTION:  The DEVICE_TYPE and DEVICE_NO fields are set using
     1272    11550                           information from TOP$TCP.
     1273    11551        */
     1274    11552
     1275    11553    3   BUILD_CONSOLE_SCT: PROC ;
     1276    11554
     1277    11555        /* Code */
     1278    11556
     1279    11557    4      DV_SCT$->DEVICE_SCT = '0'B ;
     1280    11558    4      DV_SCT$->DEVICE_SCT.W0.DEVICE_TYPE# = %DSCC1 ;
     1281    11559    4      DV_SCT$->DEVICE_SCT.W0.DEVICE_NO# = FICCDD$->FICCDD.DEV# ;
     1282    11560    4      RETURN ;
     1283    11561
     1284    11562    4   END BUILD_CONSOLE_SCT ;
     1285    11563    3   END BUILD_DEVICE_SCT ;
     1286    11564        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:53   
     1287    11565        /*I* NAME:         BUILD_CONTROLLER_SCT
     1288    11566             INTERFACE:
     1289    11567             INPUT:        TCX, the index into TOP$TCP for the test page.
     1290    11568             OUTPUT:       None.
     1291    11569             DESCRIPTION:  Sets up controller SCT for EURC vs. MPC
     1292    11570        */
     1293    11571
     1294    11572    2   BUILD_CONTROLLER_SCT: PROC (TCX) ;
     1295    11573
     1296    11574    3      DCL TCX UBIN WORD ALIGNED ;
     1297    11575    3      DCL 1 CONTROLLER_SCT BASED ALIGNED,
     1298    11576    3            2 W0,
     1299    11577    3              3 * BIT (1) UNAL,
     1300    11578    3              3 VOLATILE_FW# BIT (1) UNAL,
     1301    11579    3              3 MPC# BIT (1) UNAL,
     1302    11580    3              3 * BIT (33) UNAL,
     1303    11581    3            2 W1# BIT (36) ALIGNED,
     1304    11582    3            2 W2# BIT (36) ALIGNED,
     1305    11583    3            2 W3# BIT (36) ALIGNED ;
     1306    11584    3      DCL CN_SCT$ PTR ALIGNED ;
     1307    11585
     1308    11586        /* Code */
     1309    11587
     1310    11588    3      CN_SCT$ = ADDR (TOP$SCT.CN(TCX)) ;
     1311    11589    3      CN_SCT$ -> CONTROLLER_SCT = '0'B ;
     1312    11590    3      IF TOP$TCP.DEVICE_CODE(TCX) = %CHN_3
     1313    11591    3      THEN /* DO NOTHING */ ;
     1314    11592    4      ELSE DO;
     1315    11593    4              IF TOP$TCP.FIRMWARE.TYPE(TCX) = 'NONE'
     1316    11594    4              THEN /* Do Nothing */ ;
     1317    11595    4              ELSE CN_SCT$ -> CONTROLLER_SCT.W0.VOLATILE_FW# = '1'B ;
     1318    11596    4              CN_SCT$ -> CONTROLLER_SCT.W0.MPC# = '1'B ;
     1319    11597    4              RETURN ;
     1320    11598    4           END /* ELSE DO */ ;
     1321    11599    3   END BUILD_CONTROLLER_SCT ;
     1322    11600    2   END TOP$MME_ALLOCR ;
     1323    11601        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:54   
     1324    11602        /*I* NAME:         TOP$MME_ASGPAT
     1325    11603             CALL:         CALL TOP$MME_ASGPAT(P_X1REG,P_X2REG,P_X4REG,RETURN_DELTA)
     1326    11604             INTERFACE:    MATCH_SCT_ADR
     1327    11605             INPUT:        P_X1REG = SCT address
     1328    11606                           P_X4REG = GCOS PAT pointer
     1329    11607             OUTPUT:       P_X2REG =
     1330    11608                           TOP$TCP.PAT_PTR(TCX) contains the PAT pointer
     1331    11609                           for this page.
     1332    11610             DESCRIPTION:  MATCH_SCT_ADR is called to search the TOP$TCP
     1333    11611                           table to match the SCT address passed from the
     1334    11612                           subexec with a test page, and thus identify I.
     1335    11613                           The PAT pointer passed up by the subexec is then
     1336    11614                           stored in TOP$TCP for future use.  MME CHANTM
     1337    11615                           later requests the channel busy time for a test
     1338    11616                           page, passing only the PAT pointer as an identifier
     1339    11617                           of the test page.  It is then used in a search of
     1340    11618                           TOP$TCP to determine TCX, the test page
     1341    11619                           identifier.
     1342    11620
     1343    11621                           Currently, nothing is returned in P_X2REG.
     1344    11622        */
     1345    11623        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:55   
     1346    11624    1   TOP$MME_ASGPAT: PROC (P_X1REG,P_X2REG,P_X4REG,RETURN_DELTA) ;
     1347    11625
     1348    11626    2      DCL TCX UBIN WORD ALIGNED ;
     1349    11627    2      DCL P_X1REG UBIN HALF HALIGNED ;
     1350    11628    2      DCL P_X2REG UBIN HALF HALIGNED ;
     1351    11629    2      DCL P_X4REG UBIN HALF HALIGNED ;
     1352    11630    2      DCL RETURN_DELTA SBIN HALF HALIGNED ;
     1353    11631
     1354    11632        /* Code */
     1355    11633
     1356    11634    2      CALL MATCH_SCT_ADR (P_X1REG,TCX) ;
     1357    11635    2      TOP$TCP.ADR.PAT(TCX) = P_X4REG ;
     1358    11636    2      RETURN_DELTA = 1 ;
     1359    11637    2      RETURN ;
     1360    11638
     1361    11639    2   END TOP$MME_ASGPAT ;
     1362    11640        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:56   
     1363    11641        /*I* NAME:         TOP$MME_CHANTM
     1364    11642             CALL:         CALL TOP$MME_CHANTM(P_X4REG,P_AREG,RETURN_DELTA) ;
     1365    11643             INTERFACE:    MATCH_PAT_PTR
     1366    11644             INPUT:        X4 = GCOS PAT pointer
     1367    11645                           F$DCB.CHANTIME# = channel time in seconds
     1368    11646             OUTPUT:       A  = channel busy time for the channel associated
     1369    11647                           with the PAT pointer, in 1/64 millisecond units
     1370    11648                           RETURN_DELTA = 1
     1371    11649             DESCRIPTION:  MATCH_PAT_PTR is called to search TOP$TCP
     1372    11650                           for a match on the PAT pointer to yield TCX,
     1373    11651                           the index into TOP$TCP for this test page.
     1374    11652                           The pointer TD_DCB$ is built to the DCB for this
     1375    11653                           test page using the DCB number in TOP$TCP.
     1376    11654                           The channel time in microseconds is stored in the
     1377    11655                           DCB.  It is accessed using the BASED structure
     1378    11656                           F$DCB.CHANTIME#.  The channel time is returned in
     1379    11657                           P_AREG.
     1380    11658        */
     1381    11659
     1382    11660    1   TOP$MME_CHANTM: PROC (X4, A, RETURN_DELTA) ;
     1383    11661
     1384    11662    2      DCL X4           UBIN HALF HALIGNED ;
     1385    11663    2      DCL A            UBIN WORD ALIGNED ;
     1386    11664    2      DCL RETURN_DELTA SBIN HALF HALIGNED ;
     1387    11665    2      DCL TCX          UBIN WORD ALIGNED ;
     1388    11666
     1389    11667        /* Code */
     1390    11668
     1391    11669    2      CALL MATCH_PAT_PTR (X4, TCX) ;
     1392    11670    2      A = DCBADDR(TOP$TCP.DCB#(TCX)) -> F$DCB.CHANTIME# / 1000 * 64 ;
     1393    11671    2      RETURN_DELTA = 1 ;
     1394    11672    2      RETURN ;
     1395    11673
     1396    11674        /* END TOP$MME_CHANTM */
     1397    11675        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:57   
     1398    11676        /*I* NAME:         MATCH_PAT_PTR
     1399    11677             INTERFACE:    TOX$SCREECH
     1400    11678             INPUT:        NEW_PAT_PTR = a PAT pointer from the subexec
     1401    11679             OUTPUT:       TCX = index into TOP$TCP for the test page
     1402    11680             DESCRIPTION:  Searches the PAT PTR field in TOP$TCP for a
     1403    11681                           match with NEW_PAT_PTR and returns TCX.
     1404    11682        */
     1405    11683
     1406    11684    2   MATCH_PAT_PTR: PROC (NEW_PAT_PTR,TCX) ;
     1407    11685
     1408    11686    3      DCL TCX         UBIN WORD ALIGNED ;
     1409    11687    3      DCL NEW_PAT_PTR UBIN HALF HALIGNED ;
     1410    11688
     1411    11689        /* Code */
     1412    11690
     1413    11691    3      TCX = 0 ;
     1414    11692    4      DO WHILE (TCX < 8) ;
     1415    11693    4         IF TOP$TCP.ADR.PAT(TCX) = NEW_PAT_PTR
     1416    11694    4         THEN RETURN ;
     1417    11695    4         ELSE TCX = TCX + 1 ;
     1418    11696    4      END /* WHILE */ ;
     1419    11697
     1420    11698    3      TOP_ERROR_CODE.ERR# = %E$BADPATPTR ;
     1421    11699    3      CALL TOX$SCREECH (TOP_ERROR_CODE) ;
     1422    11700
     1423    11701    3   END MATCH_PAT_PTR ;
     1424    11702    2   END TOP$MME_CHANTM ;
     1425    11703        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:58   
     1426    11704        /*I* NAME:         TOP$MME_DEALCP
     1427    11705             CALL:         CALL TOP$MME_DEALCP(P_X1REG,RETURN_DELTA) ;
     1428    11706             INTERFACE:
     1429    11707             INPUT:
     1430    11708             OUTPUT:
     1431    11709             DESCRIPTION:  Not used in CP6 ;  Multics only.
     1432    11710        */
     1433    11711
     1434    11712    1   TOP$MME_DEALCP: PROC (P_X1REG,RETURN_DELTA) ;
     1435    11713
     1436    11714    2      DCL P_X1REG  UBIN HALF HALIGNED ;
     1437    11715    2      DCL RETURN_DELTA SBIN HALF HALIGNED ;
     1438    11716
     1439    11717        /* Code */
     1440    11718
     1441    11719    2      RETURN_DELTA = 1 ;
     1442    11720    2      RETURN ;
     1443    11721
     1444    11722    2   END TOP$MME_DEALCP ;
     1445    11723        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:59   
     1446    11724        /*I* NAME:         TOP$MME_EXPDEV
     1447    11725             CALL:         CALL TOP$MME_EXPDEV(P_X1REG,P_AREG,P_QREG,RETURN_DELTA) ;
     1448    11726             INTERFACE:    MATCH_SCT_ADR
     1449    11727             INPUT:        P_X1REG is the SCT address for the test page.
     1450    11728             OUTPUT:       P_AREG = word 0 of the device SCT
     1451    11729                           P_QREG = word 1 of the device SCT
     1452    11730                           RETURN_DELTA = 1
     1453    11731             DESCRIPTION:  MATCH_SCT_ADR is called to search TOP$TCP
     1454    11732                           for the a match on the SCT address passed in
     1455    11733                           P_X1REG, and yields TCX, the index into TOP$TCP
     1456    11734                           for the test page.  The first 2 words of the device
     1457    11735                           SCT, TOP$SCT.DV(TCX), are returned in P_AREG and
     1458    11736                           P_QREG.
     1459    11737        */
     1460    11738
     1461    11739    1   TOP$MME_EXPDEV: PROC (P_X1REG,P_AREG,P_QREG,RETURN_DELTA) ;
     1462    11740
     1463    11741    2      DCL TCX UBIN WORD ALIGNED ;
     1464    11742    2      DCL P_X1REG UBIN HALF HALIGNED ;
     1465    11743    2      DCL P_AREG UBIN WORD ALIGNED ;
     1466    11744    2      DCL P_QREG UBIN WORD ALIGNED ;
     1467    11745    2      DCL RETURN_DELTA SBIN HALF HALIGNED ;
     1468    11746
     1469    11747        /* Code */
     1470    11748
     1471    11749    2      CALL MATCH_SCT_ADR (P_X1REG,TCX) ;
     1472    11750    2      P_AREG = TOP$SCT.DV.WD0#(TCX) ;
     1473    11751    2      P_QREG = TOP$SCT.DV.WD1#(TCX) ;
     1474    11752    2      RETURN_DELTA = 1 ;
     1475    11753    2      RETURN ;
     1476    11754
     1477    11755    2   END TOP$MME_EXPDEV ;
     1478    11756        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:60   
     1479    11757        /*I* NAME:         TOP$MME_GETCSC
     1480    11758             CALL:         CALL TOP$MME_GETCSC(P_X1REG,P_X4REG,RETURN_DELTA) ;
     1481    11759             INTERFACE:    MATCH_SCT_ADR
     1482    11760             INPUT:        P_X1REG = SCT address for test page
     1483    11761             OUTPUT:       P_X4REG = address of controller SCT for test page
     1484    11762                           RETURN_DELTA = 2
     1485    11763             DESCRIPTION:  Calls MATCH_SCT_ADR to search TOP$TCP for a
     1486    11764                           match on the SCT address to yield TCX, the index
     1487    11765                           into TOP$TCP for the test page.  The address
     1488    11766                           of the controller SCT for the test page is then
     1489    11767                           returned in P_X$REG.
     1490    11768
     1491    11769                           This is a funny MME in the CP6 environment because
     1492    11770                           we have not yet identified anything in the controller
     1493    11771                           SCT tables that is used by POLTS or MOLTS.  Also,
     1494    11772                           Slave Mode subexecs should not need to have access
     1495    11773                           the SCT tables.
     1496    11774        */
     1497    11775        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:61   
     1498    11776    1   TOP$MME_GETCSC: PROC (X1, X4, RETURN_DELTA) ;
     1499    11777
     1500    11778    2      DCL X1           UBIN HALF HALIGNED ;
     1501    11779    2      DCL X4           UBIN HALF HALIGNED ;
     1502    11780    2      DCL RETURN_DELTA SBIN HALF HALIGNED ;
     1503    11781    2      DCL CSCT$        PTR ALIGNED ;
     1504    11782    2      DCL 1 CSCT_PTR REDEF CSCT$,
     1505    11783    2            2 ADDR#    UBIN HALF UNAL,
     1506    11784    2            2 *        BIT (18) UNAL ;
     1507    11785    2      DCL TCX          UBIN WORD ALIGNED ;
     1508    11786
     1509    11787        /* Code */
     1510    11788
     1511    11789    2      CALL MATCH_SCT_ADR (X1, TCX) ;
     1512    11790    2      CSCT$ = ADDR (TOP$SCT.DV(TCX)) ;
     1513    11791    2      X4 = CSCT_PTR.ADDR# ;
     1514    11792    2      RETURN_DELTA = 2 ;
     1515    11793    2      RETURN ;
     1516    11794
     1517    11795    2   END TOP$MME_GETCSC ;
     1518    11796        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:62   
     1519    11797        /*I* NAME:         TOP$MME_GETLIN
     1520    11798             CALL:         CALL TOP$MME_GETLIN(P_AREG,P_QREG,P_X3REG,P_X4REG,
     1521    11799                                P_X1REG,RETURN_DELTA) ;
     1522    11800             INTERFACE:
     1523    11801             INPUT:
     1524    11802             OUTPUT:
     1525    11803             DESCRIPTION:  Not used in CP6
     1526    11804        */
     1527    11805
     1528    11806    1   TOP$MME_GETLIN: PROC (P_AREG,P_QREG,P_X3REG,P_X4REG,P_X1REG,RETURN_DELTA) ;
     1529    11807
     1530    11808    2      DCL P_AREG UBIN WORD ALIGNED ;
     1531    11809    2      DCL P_QREG UBIN WORD ALIGNED ;
     1532    11810    2      DCL P_X1REG UBIN HALF HALIGNED ;
     1533    11811    2      DCL P_X3REG UBIN HALF HALIGNED ;
     1534    11812    2      DCL P_X4REG UBIN HALF HALIGNED ;
     1535    11813    2      DCL RETURN_DELTA SBIN HALF ;
     1536    11814
     1537    11815        /* Code */
     1538    11816
     1539    11817    2      RETURN_DELTA = 2 ;
     1540    11818    2      RETURN ;
     1541    11819
     1542    11820    2   END TOP$MME_GETLIN ;
     1543    11821        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:63   
     1544    11822        /*I* NAME:         TOP$MME_HUNGTM
     1545    11823             AUTHOR:       Scott S. Sheppard
     1546    11824             PURPOSE:      provides MME HUNG TIME service
     1547    11825             INTERFACE:    MATCH_IO_ENTRY
     1548    11826                           RETURN_STATUS
     1549    11827                           GIVE_COURTESY_CALL
     1550    11828             PARAMETERS:   A = address of the I/O entry - input
     1551    11829                           Q = channel lostit time - output
     1552    11830                               0 - I/O complete
     1553    11831                               8192 - phony, in-progress (like Multics)
     1554    11832                           X1 = retry timer - output
     1555    11833                               0 - I/O in transmission
     1556    11834                               other - I/O not in transmission
     1557    11835                           RETURN_DELTA - output
     1558    11836                               1 - I/O not in transmission
     1559    11837                               2 - I/O in transmission
     1560    11838             DATA:         TOP$TCP.IO.ITR_INTERRUPT
     1561    11839                           TOP$TCP.IO.TERMINATED
     1562    11840             DESCRIPTION:  This routine has 2  purposes:  (1) to time out
     1563    11841                           the  special  interrupt   from  the  MPC  that
     1564    11842                           indicates that  an ITR successfully completed,
     1565    11843                           and  (2)  to  give  a  phony indication in all
     1566    11844                           other cases  that an I/O is  still in progress
     1567    11845                           (the Multics implementation  of this MME gives
     1568    11846                           the same phony indication).
     1569    11847
     1570    11848                           To elaborate more on (1) above, CP-6 will time
     1571    11849                           out  terminate interrupts but  not the special
     1572    11850                           interrupts for ITRs.   (In the GCOS IOS world,
     1573    11851                           IOS also times out the special interrupts when
     1574    11852                           ITR  testing  is  in  progress.)   In order to
     1575    11853                           avoid  putting  in  a  special  timer  for ITR
     1576    11854                           special  interrupts at  the PL6  level in CP-6
     1577    11855                           TOLTS, MME  HUNGTM is used to  have Slave Mode
     1578    11856                           MOLTS time out  the special.  Following an ITR
     1579    11857                           I/O, TOP$MME_TESTIO will  return to Slave Mode
     1580    11858                           MOLTS  a  channel  lostit  time of "0".  MOLTS
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:64   
     1581    11859                           will then add 1 minute to this lostit time and
     1582    11860                           set  its own  internal timer.   When the timer
     1583    11861                           goes off, MOLTS does  a MME HUNGTM to check on
     1584    11862                           the status of the I/O in question.
     1585    11863
     1586    11864                           If MOLTS does a MME  HUNGTM when an ITR I/O is
     1587    11865                           in  progress,  it  will  be  asssumed that the
     1588    11866                           special interrupt from  the ITR did not occur.
     1589    11867                           (In ITR testing,  a special interrupt from the
     1590    11868                           ITR running in the  MPC indicates that the ITR
     1591    11869                           did not  find anything wrong.  If  it did, the
     1592    11870                           ITR  will  HALT  the  MPC  and  not return the
     1593    11871                           special interrupt.)  A "lost interrupt" status
     1594    11872                           is then returned to  the MOLTS test page and a
     1595    11873                           Courtesy Call paid.
     1596    11874
     1597    11875                           At a detailed  level, MATCH_IO_ENTRY is called
     1598    11876                           to search TOP$TCP.ADR.IOENTRY for a match with
     1599    11877                           what was passed in bits 0-17 of A to
     1600    11878                            yield  TCX,  the  index  into TOP$TCP for the
     1601    11879                           page.
     1602    11880
     1603    11881                           If  TOP$TCP indicates  that an  ITR I/O  is in
     1604    11882                           progress  and  that  the  terminate  interrupt
     1605    11883                           occurred  already,  then  we  assume  that the
     1606    11884                           special  did  not  occur  and  that  we are to
     1607    11885                           return   lost   interrupt   status  to  MOLTS.
     1608    11886                           TOP$TCP.IO.ITR_INTERRUPT  set   indicates that
     1609    11887                           an  ITR  I/O  is  in  progress,  and is set in
     1610    11888                           TOP$MME_TESTIO/BUILD_1ST_IDCW before each test
     1611    11889                           I/O                 is                 issued.
     1612    11890                           TOP$TCP.TERMINATED    set            indicates
     1613    11891                           that  the terminate  interrupt for  the and is
     1614    11892                           reset   before   each   I/O   is   issued,  in
     1615    11893                           TOP$MME_TESTIO/BUILD_1ST_IDCW.
     1616    11894
     1617    11895                           If ITR  I/O is not in  progress, a lostit time
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:65   
     1618    11896                           of 8192 is returned to fake out POLTS & MOLTS.
     1619    11897        */
     1620    11898
     1621    11899    1   TOP$MME_HUNGTM: PROC (A, Q, X1, RETURN_DELTA) ;
     1622    11900
     1623    11901    2      DCL 1 A ALIGNED,
     1624    11902    2            2 UPPER UBIN HALF UNAL,
     1625    11903    2            2 LOWER UBIN HALF UNAL ;
     1626    11904    2      DCL Q             UBIN WORD ALIGNED ;
     1627    11905    2      DCL X1            UBIN HALF HALIGNED ;
     1628    11906    2      DCL RETURN_DELTA  SBIN HALF HALIGNED ;
     1629    11907    2      DCL TCX           UBIN WORD ALIGNED ;
     1630    11908
     1631    11909        /* Code */
     1632    11910
     1633    11911    2      CALL MATCH_IO_ENTRY (A.UPPER, TCX) ;
     1634    11912    2      IF TOP$TCP.IO.ITR_INTERRUPT(TCX) & TOP$TCP.IO.TERMINATED(TCX)
     1635    11913    3      THEN DO ;
     1636    11914    3              CALL RETURN_STATUS (TCX) ;
     1637    11915    3              CALL GIVE_COURTESY_CALL (TCX) ;
     1638    11916    3              Q = 0 ;
     1639    11917    3              X1 = IO_ENTRY.W1.LOWER#(TCX) ;
     1640    11918    3              RETURN_DELTA = 1 ;
     1641    11919    3           END /* then */ ;
     1642    11920    3      ELSE DO ;
     1643    11921    3              X1 = 0 ;
     1644    11922    3              Q = 8192 ;
     1645    11923    3              RETURN_DELTA = 2 ;
     1646    11924    3           END /* else */ ;
     1647    11925    2      RETURN ;
     1648    11926
     1649    11927        /* END TOP$MME_HUNGTM */
     1650    11928        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:66   
     1651    11929        /*I* NAME:         MATCH_IO_ENTRY
     1652    11930             INTERFACE:    TOX$SCREECH
     1653    11931             INPUT:        ENTRY_ADR = address of an I/O entry
     1654    11932             OUTPUT:       TCX = index into TOP$TCP for the test page
     1655    11933             DESCRIPTION:  Searches the IOENTRY ADR field in TOP$TCP for
     1656    11934                           a match with ENTRY_ADR and returns I.
     1657    11935        */
     1658    11936
     1659    11937    2   MATCH_IO_ENTRY: PROC (ENTRY_ADR, TCX) ;
     1660    11938
     1661    11939    3      DCL ENTRY_ADR UBIN HALF HALIGNED ;
     1662    11940    3      DCL TCX       UBIN WORD ALIGNED ;
     1663    11941
     1664    11942        /* Code */
     1665    11943
     1666    11944    3      TCX = 0 ;
     1667    11945    4      DO WHILE (TCX < 8) ;
     1668    11946    4         IF TOP$TCP.ADR.IOENTRY(TCX) = ENTRY_ADR
     1669    11947    4         THEN RETURN ;
     1670    11948    4         ELSE TCX = TCX + 1 ;
     1671    11949    4      END /* WHILE */ ;
     1672    11950
     1673    11951    3      TOP_ERROR_CODE.ERR# = %E$BADIORET ;
     1674    11952    3      CALL TOX$SCREECH (TOP_ERROR_CODE) ;
     1675    11953
     1676    11954    3   END MATCH_IO_ENTRY ;
     1677    11955        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:67   
     1678    11956        /*I* NAME:         RETURN_STATUS
     1679    11957             AUTHOR:       Scott S. Sheppard
     1680    11958             PURPOSE:      returns lost interrupt status to MOLTS
     1681    11959             INTERFACE:    PINCRW
     1682    11960             PARAMETERS:   TCX - input
     1683    11961             DATA:         IO_ENTRY.W9.STATUS_ADR#(TCX)
     1684    11962             DESCRIPTION:  If "lost interrupt"  status is to be returned,
     1685    11963                           word      9     of      the     I/O     entry,
     1686    11964                           IO_ENTRY.W9.STATUS_ADR(TCX)  is checked  for a
     1687    11965                           valid    status    address.     The    pointer
     1688    11966                           POLTS_STATUS$  is built to  the location inthe
     1689    11967                           subexec  where the  status is  to be returned.
     1690    11968                           Using   the   BASED   structure   STATUS,  the
     1691    11969                           following fields are  set to simulate the lost
     1692    11970                           interrupt status returned by GCOS:
     1693    11971
     1694    11972                             STATUS.MAJOR = '0101'B
     1695    11973                             STATUS.MINOR = '10'O
     1696    11974                             STATUS.LOST_INTERRUPT = '1'B
     1697    11975                             STATUS.INTERRUPT_INDICATOR = '1'B
     1698    11976        */
     1699    11977        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:68   
     1700    11978    2   RETURN_STATUS: PROC (TCX) ;
     1701    11979
     1702    11980    3      DCL TCX           UBIN WORD ALIGNED ;
     1703    11981    3      DCL POLTS_STATUS$ PTR ALIGNED ;
     1704    11982
     1705    11983        /* Code */
     1706    11984
     1707    11985    3      IF IO_ENTRY.W9.STATUS_ADR#(TCX) = 0
     1708    11986    3      THEN /* don't return status */ ;
     1709    11987    4      ELSE DO ;
     1710    11988    4              POLTS_STATUS$ = PINCRW (IS$, IO_ENTRY.W9.STATUS_ADR#(TCX)) ;
     1711    11989    4              POLTS_STATUS$ -> STATUS = '0'B ;
     1712    11990    4              POLTS_STATUS$ -> STATUS.MAJOR# = '1001'B ;
     1713    11991    4              POLTS_STATUS$ -> STATUS.TERMINATION_INDICATOR# = %TRUE ;
     1714    11992    4              POLTS_STATUS$ -> STATUS.LOST_INTERRUPT# = %TRUE ;
     1715    11993    4              POLTS_STATUS$ -> STATUS.INTERRUPT_INDICATOR# = '1'B ;
     1716    11994    4           END /* else */ ;
     1717    11995    3      RETURN ;
     1718    11996
     1719    11997    3   END RETURN_STATUS ;
     1720    11998        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:69   
     1721    11999        /*I* NAME:         GIVE_COURTESY_CALL
     1722    12000             AUTHOR:       Scott S. Sheppard
     1723    12001             PURPOSE:      gives MOLTS a courtesy call
     1724    12002             INTERFACE:    PINCRW
     1725    12003                           TOK$COURTESY_CALL
     1726    12004             PARAMETERS:   TCX - input
     1727    12005             DATA:         IO_ENTRY.W9.CC_ADR#(TCX)
     1728    12006             DESCRIPTION:
     1729    12007                                              I/O     entry    word    9,
     1730    12008                           IO_ENTRY.W9.CC_ADR(TCX), is checked
     1731    12009                                              to  see if  a Courtesy Call
     1732    12010                           is to be paid.  If yes,
     1733    12011                                              TOK$COURTESY_CALL is called
     1734    12012                           to pay it.
     1735    12013        */
     1736    12014
     1737    12015    2   GIVE_COURTESY_CALL: PROC (TCX) ;
     1738    12016
     1739    12017    3      DCL TCX           UBIN WORD ALIGNED ;
     1740    12018    3      DCL CC$           PTR ALIGNED ;
     1741    12019
     1742    12020        /* Code */
     1743    12021
     1744    12022    3      IF IO_ENTRY.W9.CC_ADR#(TCX) = 0
     1745    12023    3      THEN /* No need for a courtesy call. */ ;
     1746    12024    4      ELSE DO ;
     1747    12025    4              CC$ = PINCRW (IS$, IO_ENTRY.W9.CC_ADR#(TCX)) ;
     1748    12026    4              CALL TOK$COURTESY_CALL (CC$) ;
     1749    12027    4           END /* else */ ;
     1750    12028    3      RETURN ;
     1751    12029
     1752    12030    3   END GIVE_COURTESY_CALL ;
     1753    12031    2   END TOP$MME_HUNGTM ;
     1754    12032        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:70   
     1755    12033        /*I* NAME:         TOP$MME_IOCONS
     1756    12034             CALL:         CALL TOP$MME_IOCONS(P_X1REG,P_AREG,RETURN_DELTA) ;
     1757    12035               INTERFACE:    MATCH_SCT_ADR
     1758    12036             INPUT:        P_X1REG = SCT address for test page
     1759    12037             OUTPUT:       P_AREG = number of connects on channel since OPEN
     1760    12038                           RETURN_DELTA = 1
     1761    12039             DESCRIPTION:  Calls MATCH_SCT_ADR to search TOP$TCP for a
     1762    12040                           match on the SCT address passed, to yield TCX, the
     1763    12041                           index into TOP$TCP for the page.  The pointer
     1764    12042                           TC_DCB$ is built to point to the DCB for the page
     1765    12043                           using TCX and the DCB number in TOP$TCP.  The
     1766    12044                           desired information is accessed using the BASED
     1767    12045                           structure F$DCB.CONNCT#.
     1768    12046        */
     1769    12047
     1770    12048    1   TOP$MME_IOCONS: PROC (P_X1REG,P_AREG,RETURN_DELTA) ;
     1771    12049
     1772    12050    2      DCL TCX UBIN WORD ALIGNED ;
     1773    12051    2      DCL P_AREG UBIN WORD ALIGNED ;
     1774    12052    2      DCL P_X1REG UBIN HALF HALIGNED ;
     1775    12053    2      DCL RETURN_DELTA SBIN HALF HALIGNED ;
     1776    12054    2      DCL TD_DCB$ PTR ALIGNED ;
     1777    12055
     1778    12056        /* Code */
     1779    12057
     1780    12058    2      CALL MATCH_SCT_ADR (P_X1REG,TCX) ;
     1781    12059    2      TD_DCB$ = DCBADDR (TOP$TCP.DCB#(TCX)) ;
     1782    12060    2      P_AREG = TD_DCB$ -> F$DCB.CONNCT# ;
     1783    12061    2      RETURN_DELTA = 1 ;
     1784    12062    2      RETURN ;
     1785    12063
     1786    12064    2   END TOP$MME_IOCONS ;
     1787    12065        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:71   
     1788    12066        /*I* NAME:         TOP$MME_IPCWDT
     1789    12067             CALL:         CALL TOP$MME_IPCWDT(P_X1REG,RETURN_DELTA) ;
     1790    12068             INTERFACE:    MATCH_ICC
     1791    12069                           M$TDIO
     1792    12070             INPUT:        P_X1REG(bits 9-17) = IOM and channel number(ICC)
     1793    12071             OUTPUT:       RETURN_DELTA = 1
     1794    12072             DESCRIPTION:  This routine issues an IPCW command to the MPC
     1795    12073                           on the IOM and channel number specified in ICC.
     1796    12074                           The IPCW command is an initialize commands to the
     1797    12075                           MPC, and physically results in a DC initialize
     1798    12076                           command being sent to the MPC(RSO command).  This
     1799    12077                           puts the MPC in a state where it is waiting for a
     1800    12078                           Bootload command, which in the case of ITR testing
     1801    12079                           will load the ITR overlay for testing.
     1802    12080
     1803    12081                           The MPC will not send back any terminate interrupt,
     1804    12082                           so CP6 will time out the command and return a
     1805    12083                           "lost interrupt" status to us.  A unique Event ID
     1806    12084                           is assigned to the IPCW command so that the lost
     1807    12085                           interrupt status will be ignored in the Event Handler,
     1808    12086                           TOE$EVENT_HANDLER.
     1809    12087
     1810    12088                           MATCH_ICC is called to search TOP$TCP to find
     1811    12089                           the TOP$TCP index TCX which corresponds to the
     1812    12090                           test page running on IOM and Channel specified by
     1813    12091                           ICC in bits 9-17 of P_X1REG.
     1814    12092                           The TDIO_FPT is set up as follows to issue the
     1815    12093                           IPCW command to the MPC:
     1816    12094
     1817    12095                             TDIO_FPT.DATA_ = VECTOR(NIL) ;  (not used)
     1818    12096                             TDIO_FPT.DCWLIST_ = VECTOR(NIL) ;  (not used)
     1819    12097                             TDIO_FPT.V.DCB# = DCB number for the page
     1820    12098                             TDIO_FPT.V.WAIT# =  set for "no wait" I/O
     1821    12099                             TDIO_FPT.V.PCW# = '000000770000'O (the IPCW cmd)
     1822    12100                             TDIO_FPT.V.ALTPATH = none
     1823    12101                             TDIO_FPT.V.EVENT# = unique Event ID for this commnand
     1824    12102                             TDIO_FPT.V.TIMEOUT# = 5 second timeout on terminate
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:72   
     1825    12103
     1826    12104                           TOT$ECP.IO.COUNT is incremented by one for all
     1827    12105                           "no wait" I/O.  It is decremented by one by the
     1828    12106                           Event Handler when the I/O completes.
     1829    12107
     1830    12108                           M$WAIT is called to wait for 15 seconds.  This
     1831    12109                           is needed because the IPCW command generates no
     1832    12110                           terminate interrupt.  CP6 will timeout the
     1833    12111                           command in 10-15 seconds and return lost interrupt
     1834    12112                           status which will be ignored in the Event
     1835    12113                           Handler.  However, if we continue immediately
     1836    12114                           here and call the Loader to access the Deckfile,
     1837    12115                           it will attempt to release its buffer memory
     1838    12116                           before the IPCW command is timed out by CP6.
     1839    12117                           Thus it will be trying to release memory with
     1840    12118                           an I/O outstanding (Master Function Count > 0).
     1841    12119                           The 15 second wait here should allow time enough
     1842    12120                           for the I/O to timeout first before we go to
     1843    12121                           the Loader and acquire and release buffer memory.
     1844    12122        */
     1845    12123        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:73   
     1846    12124    1   TOP$MME_IPCWDT: PROC (P_X1REG,RETURN_DELTA) ;
     1847    12125
     1848    12126           %FPT_WAIT(FPTN = DELAY_FPT,
     1849    12127                     UNITS = 15) ;
     1850    12141    2      DCL TCX UBIN WORD ALIGNED ;
     1851    12142    2      DCL P_X1REG UBIN HALF HALIGNED ;
     1852    12143    2      DCL 1 X1 REDEF P_X1REG HALIGNED,
     1853    12144    2            2 * BIT (6) UNAL,
     1854    12145    2            2 FORMAT# BIT (1) UNAL,
     1855    12146    2            2 OLD_ICC,
     1856    12147    2              3 IOM# UBIN (5) UNAL,
     1857    12148    2              3 CHAN# UBIN (6) UNAL,
     1858    12149    2            2 NEW_ICC REDEF OLD_ICC,
     1859    12150    2              3 IOM# UBIN (3) UNAL,
     1860    12151    2              3 CHAN# UBIN (8) UNAL ;
     1861    12152    2      DCL 1 ICC UNAL,
     1862    12153    2            2 IOM# UBIN (3) UNAL,
     1863    12154    2            2 CHAN# UBIN (8) UNAL ;
     1864    12155    2      DCL RETURN_DELTA SBIN HALF HALIGNED ;
     1865    12156        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:74   
     1866    12157        /* Code */
     1867    12158
     1868    12159    2      IF X1.FORMAT# = %NEW_FORMAT
     1869    12160    3      THEN DO ;
     1870    12161    3              ICC.IOM# = X1.NEW_ICC.IOM# ;
     1871    12162    3              ICC.CHAN# = X1.NEW_ICC.CHAN# ;
     1872    12163    3           END ;
     1873    12164    3      ELSE DO ;
     1874    12165    3              ICC.IOM# = X1.OLD_ICC.IOM# ;
     1875    12166    3              ICC.CHAN# = X1.OLD_ICC.CHAN# ;
     1876    12167    3           END ;
     1877    12168    2      CALL MATCH_ICC (ICC,TCX) ;
     1878    12169    2      TDIO_FPT.DATA_ = VECTOR (NIL) ;
     1879    12170    2      TDIO_FPT.DCWLIST_ = VECTOR (NIL) ;
     1880    12171    2      TDIO_FPT.V.DCB# = TOP$TCP.DCB#(TCX) ;
     1881    12172    2      TDIO_FPT.V.WAIT# = %NO# ;
     1882    12173    2      TDIO_FPT.V.PCW# = '000000770000'O ;
     1883    12174    2      TDIO_FPT.V.ALTPATH = '0'B ;
     1884    12175    2      TDIO_FPT.V.EVENT# = %IPCW_EVENT ;
     1885    12176    2      TDIO_FPT.V.TIMEOUT# = 3 ;  /* #36007 */
     1886    12177    3      DO INHIBIT ;
     1887    12178    3         TOT$ECP.IO.COUNT = TOT$ECP.IO.COUNT + 1 ;
     1888    12179    3         CALL M$TDIO (TDIO_FPT) ;
     1889    12180    3      END ; /* INHIBIT */
     1890    12181              /* Note that the M$TDIO is not necessarily inhibited */
     1891    12182              /* but we make sure that no interrupts will be taken */
     1892    12183              /* before the IO is issued */
     1893    12184    2      CALL M$WAIT (DELAY_FPT) ;
     1894    12185    2      RETURN_DELTA = 1 ;
     1895    12186    2      RETURN ;
     1896    12187
     1897    12188    2   END TOP$MME_IPCWDT ;
     1898    12189        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:75   
     1899    12190        /*I* NAME:         TOP$MME_LODIMG
     1900    12191             CALL:         CALL TOP$MME_LODIMG(P_X1REG,RETURN_DELTA) ;
     1901    12192             INTERFACE:
     1902    12193             INPUT:
     1903    12194             OUTPUT:       RETURN_DELTA = 1
     1904    12195             DESCRIPTION:  This routine need no do anything in CP6 since
     1905    12196                           the printer train image is automaticallyu reloaded
     1906    12197                           whenever M$TDCLOSE is called or a job step is
     1907    12198                           exited.
     1908    12199        */
     1909    12200
     1910    12201    1   TOP$MME_LODIMG: PROC (P_X1REG,RETURN_DELTA) ;
     1911    12202
     1912    12203    2      DCL P_X1REG UBIN HALF HALIGNED ;
     1913    12204    2      DCL RETURN_DELTA SBIN HALF HALIGNED ;
     1914    12205
     1915    12206        /* Code */
     1916    12207
     1917    12208    2      RETURN_DELTA = 1 ;
     1918    12209    2      RETURN ;
     1919    12210
     1920    12211    2   END TOP$MME_LODIMG ;
     1921    12212        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:76   
     1922    12213        /*I* NAME:         TOP$MME_LODVFC
     1923    12214             CALL:         CALL TOP$MME_LODVFC(P_X1REG,RETURN_DELTA) ;
     1924    12215             INTERFACE:
     1925    12216             INPUT:
     1926    12217             OUTPUT:
     1927    12218             DESCRIPTION:  This routine need not do anything in CP6 since
     1928    12219                           the printer VFC image is automatically reloaded
     1929    12220                           whenever M$TDCLOSE is called or a job step is
     1930    12221                           exited.
     1931    12222        */
     1932    12223
     1933    12224    1   TOP$MME_LODVFC: PROC (P_X1REG,P_AREG,RETURN_DELTA) ;
     1934    12225
     1935    12226    2      DCL P_X1REG UBIN HALF HALIGNED ;
     1936    12227    2      DCL P_AREG UBIN WORD ALIGNED ;
     1937    12228    2      DCL RETURN_DELTA SBIN HALF HALIGNED ;
     1938    12229
     1939    12230        /* Code */
     1940    12231
     1941    12232    2      RETURN_DELTA = 1 ;
     1942    12233    2      RETURN ;
     1943    12234
     1944    12235    2   END TOP$MME_LODVFC ;
     1945    12236        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:77   
     1946    12237        /*I* NAME:         TOP$MME_LPWDT
     1947    12238             CALL:         CALL TOP$MME_LPWDT(P_X1REG,P_AREG,RETURN_DELTA) ;
     1948    12239             INTERFACE:    MATCH_ICC
     1949    12240             INPUT:        P_X1REG(bits 9-17) = IOM and channel number, ICC
     1950    12241             OUTPUT:       P_AREG = Final LPW from mailbox
     1951    12242                           RETURN_DELTA = 1
     1952    12243             DESCRIPTION:  MATCH_ICC is called to search TOP$TCP for a
     1953    12244                           match with the IOM and Channel number passed in
     1954    12245                           P_X1REG to yield TCX, the index into TOP$TCP for
     1955    12246                           the test page.  The pointer TD_DCB$ is built to
     1956    12247                           the DCB for the page using the DCB number saved in
     1957    12248                           TOP$TCP.  The Final List Pointer Word (FLPW)
     1958    12249                           from the IOM mailbox is fetched from the DCB
     1959    12250                           using the BASED structure F$DCB.FLPW#.
     1960    12251        */
     1961    12252    1   TOP$MME_LPWDT: PROC (P_X1REG,P_AREG,RETURN_DELTA) ;
     1962    12253
     1963    12254    2      DCL TCX UBIN WORD ALIGNED ;
     1964    12255    2      DCL P_AREG UBIN WORD ALIGNED ;
     1965    12256    2      DCL P_X1REG UBIN HALF HALIGNED ;
     1966    12257    2      DCL 1 X1 REDEF P_X1REG HALIGNED,
     1967    12258    2            2 * BIT (6) UNAL,
     1968    12259    2            2 FORMAT# BIT (1) UNAL,
     1969    12260    2            2 OLD_ICC,
     1970    12261    2              3 IOM# UBIN (5) UNAL,
     1971    12262    2              3 CHAN# UBIN (6) UNAL,
     1972    12263    2            2 NEW_ICC REDEF OLD_ICC,
     1973    12264    2              3 IOM# UBIN (3) UNAL,
     1974    12265    2              3 CHAN# UBIN (8) UNAL ;
     1975    12266    2      DCL 1 ICC UNAL,
     1976    12267    2            2 IOM# UBIN (3) UNAL,
     1977    12268    2            2 CHAN# UBIN (8) UNAL ;
     1978    12269    2      DCL RETURN_DELTA SBIN HALF ;
     1979    12270    2      DCL TD_DCB# UBIN(18) UNAL ;
     1980    12271    2      DCL TD_DCB$ PTR ;
     1981    12272           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:78   
     1982    12273        /* Code */
     1983    12274
     1984    12275    2      IF X1.FORMAT# = %NEW_FORMAT
     1985    12276    3      THEN DO ;
     1986    12277    3              ICC.IOM# = X1.NEW_ICC.IOM# ;
     1987    12278    3              ICC.CHAN# = X1.NEW_ICC.CHAN# ;
     1988    12279    3           END ;
     1989    12280    3      ELSE DO ;
     1990    12281    3              ICC.IOM# = X1.OLD_ICC.IOM# ;
     1991    12282    3              ICC.CHAN# = X1.OLD_ICC.CHAN# ;
     1992    12283    3           END ;
     1993    12284    2      CALL MATCH_ICC (ICC,TCX) ;
     1994    12285    2      TD_DCB# = TOP$TCP.DCB#(TCX) ;
     1995    12286    2      TD_DCB$ = DCBADDR (TD_DCB#) ;
     1996    12287    2      P_AREG = BITBIN (TD_DCB$ -> F$DCB.FLPW#) ;
     1997    12288    2      RETURN_DELTA = 1 ;
     1998    12289    2      RETURN ;
     1999    12290
     2000    12291    2   END TOP$MME_LPWDT ;
     2001    12292        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:79   
     2002    12293        /*I* NAME:         TOP$MME_PACMAN
     2003    12294             AUTHOR:       Scott S. Sheppard
     2004    12295             PURPOSE:      Peripheral Allocation, Control, and MANipulation
     2005    12296             INTERFACE:    SUSPEND_CHANNELS
     2006    12297                           REPORT_CHANNELS
     2007    12298                           RELEASE_CHANNELS
     2008    12299                           PINCRW
     2009    12300             PARAMETERS:   A - processing type flag (input)
     2010    12301                               =  0  allocation request
     2011    12302                               ~= 0  return request
     2012    12303                           Q - IMU and CHANNEL of the MCA (input)
     2013    12304                           X2 - address of the channel list (input)
     2014    12305                              - error reason code (if any) (output)
     2015    12306                           X5 - address of the MCA configuration data (input)
     2016    12307                           RETURN_DELTA - return flag (output)
     2017    12308                              = 1  error return (X2 contains the reason)
     2018    12309                              = 2  special error (none of the channels
     2019    12310                                   requested were configured)
     2020    12311                              = 3  retry return (I/O outstanding)
     2021    12312                              = 4  good return
     2022    12313             DATA:         IS$ - pointer to the instruction segment (input)
     2023    12314             DESCRIPTION:  This procedure performs the MME PACMAN service
     2024    12315                           for  CP-6.  When  a  DIPPER  test  request  is
     2025    12316                           issued,  the channels which  will be affected,
     2026    12317                           must  be  allocated  from  the system. This is
     2027    12318                           done   via  the  MME   PACMAN.  For  the  CP-6
     2028    12319                           implementation,   this    MME   performs   the
     2029    12320                           necessary  TDOPEN's  to  allocate the channels
     2030    12321                           and  the  necessary  TDCLOSE's  to  return the
     2031    12322                           channels.  In  the  GCOS  world,  T&D  has the
     2032    12323                           ability to not return and not reboot specified
     2033    12324                           channels.   CP-6  T&D   does  not   have  this
     2034    12325                           privilege.   Instead   a  warning  message  is
     2035    12326                           issued  indicating   that  specified  channels
     2036    12327                           should  not  be  returned  (via  SYSCON) and a
     2037    12328                           no-reboot  request is issued  to the operating
     2038    12329                           system.
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:80   
     2039    12330        */
     2040    12331
     2041    12332    1   TOP$MME_PACMAN: PROC (A, Q, X2, X5, RETURN_DELTA) ;
     2042    12333
     2043    12334    2      DCL A            UBIN WORD ALIGNED ;
     2044    12335    2      DCL Q            UBIN WORD ALIGNED ;
     2045    12336    2      DCL 1 ICC REDEF Q ALIGNED,
     2046    12337    2            2 *        UBIN (7) UNAL,
     2047    12338    2            2 ICCC UNAL,
     2048    12339    2              3 IOM#   UBIN (3) UNAL,
     2049    12340    2              3 CHAN#  UBIN (8) UNAL,
     2050    12341    2            2 *        UBIN (18) UNAL;
     2051    12342    2      DCL 1 ONLY_ICC ALIGNED,
     2052    12343    2            2 IOM#     UBIN (3) UNAL,
     2053    12344    2            2 CHAN#    UBIN (8) UNAL ;
     2054    12345    2      DCL X2           UBIN HALF HALIGNED ;
     2055    12346    2      DCL X5           UBIN HALF HALIGNED ;
     2056    12347    2      DCL RETURN_DELTA SBIN HALF HALIGNED ;
     2057    12348    2      DCL LIST$        PTR ALIGNED ;
     2058    12349    2      DCL TCX          UBIN WORD ALIGNED ;
     2059    12350           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:81   
     2060    12351        /* Code */
     2061    12352
     2062    12353           /* initialization */
     2063    12354    2      ONLY_ICC = ICC.ICCC ;
     2064    12355    2      CALL MATCH_ICC (ONLY_ICC, TCX) ;
     2065    12356    2      TDOPEN_FPT.V.DEVICE.IOM# = ICC.ICCC.IOM# ;
     2066    12357    2      LIST$ = PINCRW (IS$, X2) ;
     2067    12358    2      RETURN_DELTA = 4 ;
     2068    12359
     2069    12360           /* processing */
     2070    12361    3      DO CASE (A) ;
     2071    12362    3         CASE (0) ;
     2072    12363    3            CALL SUSPEND_CHANNELS (TCX, LIST$, X2) WHENALTRETURN
     2073    12364    4                 DO ;
     2074    12365                    /* set to NO CHANNELS CONFIGURED return or ERROR return */
     2075    12366    4                    IF X2 = 0
     2076    12367    4                    THEN RETURN_DELTA = 2 ;
     2077    12368    4                    ELSE RETURN_DELTA = 1 ;
     2078    12369    4                 END /* THEN */ ;
     2079    12370    3         CASE (ELSE) ;
     2080    12371    3            CALL REPORT_CHANNELS (LIST$) ;
     2081    12372    3            CALL RELEASE_CHANNELS (TCX, LIST$, X2) WHENALTRETURN
     2082    12373    4                 DO ;
     2083    12374                    /* set to ERROR return */
     2084    12375    4                    RETURN_DELTA = 1 ;
     2085    12376    4                 END /* WHENALTRETURN */ ;
     2086    12377    3      END /* CASE */ ;
     2087    12378    2      RETURN ;
     2088    12379
     2089    12380        /* END TOP$MME_PACMAN */
     2090    12381        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:82   
     2091    12382        /*I* NAME:         SUSPEND_CHANNELS
     2092    12383             AUTHOR:       Scott S. Sheppard
     2093    12384             PURPOSE:      allocates channels on an IMU
     2094    12385             INTERFACE:    M$TDOPEN
     2095    12386                           PINCRW
     2096    12387                           TOX$WARN
     2097    12388             PARAMETERS:   TCX - test control index,which test request (input)
     2098    12389                           LIST$ - pointer to the channel list (input)
     2099    12390                           REASON - error code (output)
     2100    12391             DATA:         B$TCB$ - pointer to the Task Control Block (input)
     2101    12392                           B$TCB.ALT$ - pointer to the ALTRETURN frame (input)
     2102    12393                           B$ALT.ERR - overlay for the standard error code
     2103    12394             DESCRIPTION:  This procedure is entered as a result of SPUD
     2104    12395                           issuing a MME PACMAN to suspd all channels   s
     2105    12396                           connected with the TEST IPC x command. SPUD will
     2106    12397                           pass a pointer which references a cell containing
     2107    12398                           the primary/base channel and the number of
     2108    12399                           channels.                            The input
     2109    12400                           to  this procedure  is a  list of  channels to
     2110    12401                           operate on, with the list items containing the
     2111    12402                           base  channel,  and   number  of  channels  to
     2112    12403                           acquire. The list is terminated with a -1.  If
     2113    12404                           anything   goes  wrong   while  attempting  to
     2114    12405                           allocate  the channels,  this procedure should
     2115    12406                           altreturn after setting the reason code to the
     2116    12407                           appropriate value. The possible values for the
     2117    12408                           reason  code are equates  found in the include
     2118    12409                           file TOU_TOLTS_M and are listed as POLTS Error
     2119    12410                           Return Codes.
     2120    12411        */
     2121    12412        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:83   
     2122    12413    2   SUSPEND_CHANNELS: PROC (TCX, LIST$, REASON) ALTRET ;
     2123    12414
     2124    12415    3      DCL TCX          UBIN WORD ALIGNED ;
     2125    12416    3      DCL LIST$        PTR ALIGNED ;
     2126    12417    3      DCL REASON       UBIN HALF HALIGNED ;
     2127    12418    3      DCL WORK$        PTR ALIGNED ;
     2128    12419    3      DCL 1 LIST_ITEM  BASED (WORK$) ALIGNED,
     2129    12420    3            2 E        ALIGNED,
     2130    12421    3              3 BASE_CHN UBIN BYTE CALIGNED,
     2131    12422    3              3 NUMB_CHN SBIN BYTE CALIGNED,
     2132    12423    3              3 FLAGS    CALIGNED,
     2133    12424    3                4 NO_REBOOT BIT (1) UNAL,
     2134    12425    3                4 *         BIT (17) UNAL,
     2135    12426    3            2 FENCE REDEF E SBIN WORD ALIGNED ;
     2136    12427
     2137    12428        /* Code */
     2138    12429
     2139    12430    3      WORK$ = LIST$ ;
     2140    12431    3      TDOPEN_FPT.V.DCB# = DCBNUM (M$DEVCNFG) ;
     2141    12432    3      TDOPEN_FPT.V.TEST# = %TD_TEST_IPC ;
     2142    12433    3      TDOPEN_FPT.V.NCHANS# = WORK$ -> LIST_ITEM.E.NUMB_CHN ;
     2143    12434    3      TDOPEN_FPT.V.DEVICE.CHAN# = WORK$ -> LIST_ITEM.E.BASE_CHN ;
     2144    12435    3      TDOPEN_FPT.V.DEVICE.DVN# = 0 ;
     2145    12436    3      CALL M$TDOPEN (TDOPEN_FPT) WHENALTRETURN
     2146    12437    4           DO ;
     2147    12438    4              CALL TOX$WARN (B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR) ;
     2148    12439    4              REASON = %CP6DENY# ;
     2149    12440    4              ALTRETURN ;
     2150    12441    4           END /* WHENALTRETURN */ ;
     2151    12442
     2152    12443    3      RETURN ;
     2153    12444
     2154    12445    3   END SUSPEND_CHANNELS ;
     2155    12446        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:84   
     2156    12447        /*I* NAME:         REPORT_CHANNELS
     2157    12448             AUTHOR:       Scott S. Sheppard
     2158    12449             PURPOSE:      prints user messages
     2159    12450             INTERFACE:    TOT$CONSOLE_OUT
     2160    12451                           BINCHAR function
     2161    12452                           PINCRW
     2162    12453             PARAMETERS:   LIST$ - pointer to the channel list (input)
     2163    12454             DATA:         CONSOLE_FPT.BUF_ - message buffer (output)
     2164    12455             DESCRIPTION:  On  a PACMAN return  request, all channels are
     2165    12456                           to be  returned to the system  except the ones
     2166    12457                           specified  in  the  list.  This  procedure  is
     2167    12458                           called   on  a  PACMAN   return  request.  All
     2168    12459                           channels  that are  found in  the channel list
     2169    12460                           are  either:  not  to  re-booted  or not to be
     2170    12461                           returned.   This  procedure  steps through the
     2171    12462                           list  and informs  the user  as to whether any
     2172    12463                           channels  are  not  going  to  be  rebooted or
     2173    12464                           recommends that others not be returned.
     2174    12465        */
     2175    12466        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:85   
     2176    12467    2   REPORT_CHANNELS: PROC (LIST$) ;
     2177    12468
     2178    12469    3      DCL LIST$        PTR ALIGNED ;
     2179    12470    3      DCL WORK$        PTR ALIGNED ;
     2180    12471    3      DCL 1 LIST_ITEM  BASED (WORK$) ALIGNED,
     2181    12472    3            2 E        ALIGNED,
     2182    12473    3              3 BASE_CHN UBIN BYTE CALIGNED,
     2183    12474    3              3 NUMB_CHN SBIN BYTE CALIGNED,
     2184    12475    3              3 FLAGS    CALIGNED,
     2185    12476    3                4 NO_REBOOT BIT (1) UNAL,
     2186    12477    3                4 *         BIT (17) UNAL,
     2187    12478    3            2 FENCE REDEF E SBIN WORD ALIGNED ;
     2188    12479    3      DCL YES_RETURN_MSG_1 CHAR (0) CONSTANT CALIGNED INIT
     2189    12480    3          ('TOLTS recommends that the following channels shall be') ;
     2190    12481    3      DCL YES_RETURN_MSG_2 CHAR (0) CONSTANT CALIGNED INIT
     2191    12482    3          ('returned back to the system via SYSCON') ;
     2192    12483    3      DCL NO_RETURN_MSG CHAR (0) CONSTANT CALIGNED INIT
     2193    12484    3          ('Errors detected on channels and thus should not be returned') ;
     2194    12485    3      DCL 1 CHANNEL_MSG STATIC CALIGNED,
     2195    12486    3            2 *    CHAR (0) CALIGNED INIT ('Base channel: '),
     2196    12487    3            2 CHN# CHAR (3) CALIGNED INIT ('000'),
     2197    12488    3            2 *    CHAR (0) CALIGNED INIT (' Number of channels: '),
     2198    12489    3            2 NUM# CHAR (3) CALIGNED INIT ('000') ;
     2199    12490           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:86   
     2200    12491        /* Code */
     2201    12492
     2202    12493    3      WORK$ = LIST$ ;
     2203    12494    4      DO WHILE (LIST_ITEM.FENCE ~= -1) ;
     2204    12495              /* print NO RETURN or NO REBOOT message for this list item */
     2205    12496    4         IF LIST_ITEM.E.FLAGS.NO_REBOOT
     2206    12497    5         THEN DO ;
     2207    12498    5                 CONSOLE_FPT.BUF_ = VECTOR (NO_RETURN_MSG) ;
     2208    12499    5                 CALL TOT$CONSOLE_OUT ;
     2209    12500    5              END /* THEN */ ;
     2210    12501    5         ELSE DO ;
     2211    12502    5                 CONSOLE_FPT.BUF_ = VECTOR (YES_RETURN_MSG_1) ;
     2212    12503    5                 CALL TOT$CONSOLE_OUT ;
     2213    12504    5                 CONSOLE_FPT.BUF_ = VECTOR (YES_RETURN_MSG_2) ;
     2214    12505
     2215    12506    5                 CALL TOT$CONSOLE_OUT ;
     2216    12507    5              END /* ELSE */ ;
     2217    12508
     2218    12509    4         CALL BINCHAR (CHANNEL_MSG.CHN#, LIST_ITEM.E.BASE_CHN) ;
     2219    12510    4         IF LIST_ITEM.E.NUMB_CHN = -1
     2220    12511    4         THEN CHANNEL_MSG.NUM# = 'all' ;
     2221    12512    4         ELSE CALL BINCHAR (CHANNEL_MSG.NUM#, LIST_ITEM.E.NUMB_CHN) ;
     2222    12513    4         CONSOLE_FPT.BUF_ = VECTOR (CHANNEL_MSG) ;
     2223    12514    4         CALL TOT$CONSOLE_OUT ;
     2224    12515
     2225    12516              /* advance to the next list item */
     2226    12517    4         WORK$ = PINCRW (WORK$, 1) ;
     2227    12518    4      END /* WHILE */ ;
     2228    12519    3      RETURN ;
     2229    12520
     2230    12521    3   END REPORT_CHANNELS ;
     2231    12522        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:87   
     2232    12523        /*I* NAME:         RELEASE_CHANNELS
     2233    12524             AUTHOR:       Scott S. Sheppard
     2234    12525             PURPOSE:      returns channels on an IMU
     2235    12526             INTERFACE:    M$TDCLOSE
     2236    12527                           PINCRW
     2237    12528                           TOX$WARN
     2238    12529             PARAMETERS:   TCX - test control index,which test request (input)
     2239    12530                           LIST$ - pointer to the channel list (input)
     2240    12531                           REASON - error code (output)
     2241    12532             DATA:         B$TCB$ - pointer to the Task Control Block (input)
     2242    12533                           B$TCB.ALT$ - pointer to the ALTRETURN frame (input)
     2243    12534                           B$ALT.ERR - overlay for the standard error code
     2244    12535             DESCRIPTION:  Like SUSPEND_CHANNELS, this procedure also needs
     2245    12536                           some work.A list of channels, similar to the one
     2246    12537                           used  for  suspending  channels  is  passsed  to
     2247    12538                           this routine.The list contains all channels that
     2248    12539                           are NOT to be returned or NOT to be re-booted.
     2249    12540                           TOLTS does not have the power to  stop  channels
     2250    12541                           from being returned,  since this is  done  using
     2251    12542                           SYSCON.If LADC comes up with something to be put
     2252    12543                           in the TDCLOSE FPT to indicate no-reboot, it
     2253    12544                           should be used here. Otherwise, by closing the
     2254    12545                           T&D DCB, the channel is no longer owned by T&D
     2255    12546                           and may be returned to the system.
     2256    12547        */
     2257    12548        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:88   
     2258    12549    2   RELEASE_CHANNELS: PROC (TCX, LIST$, REASON) ALTRET ;
     2259    12550
     2260    12551    3      DCL TCX          UBIN WORD ALIGNED ;
     2261    12552    3      DCL LIST$        PTR ALIGNED ;
     2262    12553    3      DCL REASON       UBIN HALF HALIGNED ;
     2263    12554    3      DCL WORK$        PTR ALIGNED ;
     2264    12555    3      DCL 1 LIST_ITEM  BASED (WORK$) ALIGNED,
     2265    12556    3            2 E        ALIGNED,
     2266    12557    3              3 BASE_CHN UBIN BYTE CALIGNED,
     2267    12558    3              3 NUMB_CHN SBIN BYTE CALIGNED,
     2268    12559    3              3 FLAGS    CALIGNED,
     2269    12560    3                4 NO_REBOOT BIT (1) UNAL,
     2270    12561    3                4 *         BIT (17) UNAL,
     2271    12562    3            2 FENCE REDEF E SBIN WORD ALIGNED ;
     2272    12563
     2273    12564        /* Code */
     2274    12565
     2275    12566    3      WORK$ = LIST$ ;
     2276    12567    3      TDCLOSE_FPT.V.DCB# = DCBNUM (M$DEVCNFG) ;
     2277    12568    3      CALL M$TDCLOSE (TDCLOSE_FPT) WHENALTRETURN
     2278    12569    4           DO ;
     2279    12570    4              CALL TOX$WARN (B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR) ;
     2280    12571    4              REASON = %CP6DENY# ;
     2281    12572    4              ALTRETURN ;
     2282    12573    4           END /* WHENALTRETURN */ ;
     2283    12574
     2284    12575    3      RETURN ;
     2285    12576
     2286    12577    3   END RELEASE_CHANNELS ;
     2287    12578    2   END TOP$MME_PACMAN ;
     2288    12579        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:89   
     2289    12580        /*I* NAME:         TOP$MME_POINIT
     2290    12581             CALL:         CALL TOP$MME_POINIT (MME_INSTR$,RETURN_DELTA) ;
     2291    12582             INTERFACE:
     2292    12583             INPUT:        MME_INSTR$ is a pointer to the MME POINIT instruction.
     2293    12584             OUTPUT:       Miscellaneous initialization data returned to
     2294    12585                           to either Slave mode POLTS or MOLTS.
     2295    12586                           RETURN_DELTA = 10
     2296    12587             DESCRIPTION:  Almost all of the data returned is not applicable
     2297    12588                           to a CP6 system, so most of it is faked.  The only
     2298    12589                           real information is returned in LSTLOC and in the
     2299    12590                           operating system type code, set to indicate cp-6.
     2300    12591                           This latter information is only stored if requested.
     2301    12592                           Addendum 2/13/86: The format of the lower half of
     2302    12593                           the OP_SYS_CODE_ADR# -> SYSTYP word has been changed
     2303    12594                           so that the upper byte represents hardware type and
     2304    12595                           the lower byte represents operating system type, as
     2305    12596                           follows:
     2306    12597                              hardware codes (bits 18-26 of SYSTYP word)
     2307    12598                                 bits 18-22    RFU
     2308    12599                                 bit  23 = 1   Titan
     2309    12600                                 bit  24 = 1   RPM
     2310    12601                                 bit  25 = 1   DPS90
     2311    12602                                 bit  26 = 1   DPS88
     2312    12603                                 (bits 18-26 = 0 implies L66 or 8/70)
     2313    12604
     2314    12605                              operating system codes (bits 27-35 of SYSTYP word)
     2315    12606                                 bits 27-30    RFU
     2316    12607                                 bit  31 = 1   FTS
     2317    12608                                 bit  32 = 1   GCOS-8
     2318    12609                                 bit  33 = 1   GCOS-3
     2319    12610                                 bit  34 = 1   Multics
     2320    12611                                 bit  35 = 1   CP-6
     2321    12612        */
     2322    12613
     2323    12614    1   TOP$MME_POINIT: PROC (MME_INSTR$,RETURN_DELTA) ;
     2324    12615
     2325    12616    2      DCL BOUNDS SBIN HALF HALIGNED ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:90   
     2326    12617    2      DCL MME_INSTR$ PTR ALIGNED ;
     2327    12618    2      DCL PARAMETER UBIN WORD BASED ALIGNED ;
     2328    12619    2      DCL 1 PARAMETER_ BASED ALIGNED,
     2329    12620    2            2 UPPER# UBIN HALF UNAL,
     2330    12621    2            2 LOWER# UBIN HALF UNAL ;
     2331    12622    2      DCL 1 PARAMETER_BYTE BASED ALIGNED,
     2332    12623    2            2 BYTE0 SBIN BYTE UNAL,
     2333    12624    2            2 BYTE1 SBIN BYTE UNAL,
     2334    12625    2            2 BYTE2 SBIN BYTE UNAL,
     2335    12626    2            2 BYTE3 SBIN BYTE UNAL ;
     2336    12627    2      DCL PARAMETER_BIT BIT (36) BASED ALIGNED ;
     2337    12628    2      DCL PARAMETER$ PTR ALIGNED ;
     2338    12629    2      DCL 1 POINIT BASED ALIGNED,
     2339    12630    2            2 * BIT (36) ALIGNED,
     2340    12631    2            2 WWFLAG_ADR# UBIN HALF HALIGNED,
     2341    12632    2            2 OP_SYS_CODE_ADR# UBIN HALF HALIGNED,
     2342    12633    2            2 LSTLOC_ADR# UBIN HALF HALIGNED,
     2343    12634    2            2 * BIT (18) HALIGNED,
     2344    12635    2            2 TBWRK_ADR# UBIN HALF HALIGNED,
     2345    12636    2            2 * BIT (18) HALIGNED,
     2346    12637    2            2 TDIOC_ADR# UBIN HALF HALIGNED,
     2347    12638    2            2 * BIT (18) HALIGNED,
     2348    12639    2            2 WRADD_ADR# UBIN HALF HALIGNED,
     2349    12640    2            2 * BIT (18) HALIGNED,
     2350    12641    2            2 CVTTBL_ADR# UBIN HALF HALIGNED,
     2351    12642    2            2 * BIT (18) HALIGNED,
     2352    12643    2            2 MMEXEC_ADR# UBIN HALF HALIGNED,
     2353    12644    2            2 * BIT (18) HALIGNED,
     2354    12645    2            2 MINTR# UBIN HALF HALIGNED,
     2355    12646    2            2 * BIT (18) HALIGNED,
     2356    12647    2            2 CRACF0# UBIN HALF HALIGNED,
     2357    12648    2            2 * BIT (18) HALIGNED ;
     2358    12649    2      DCL RETURN_DELTA SBIN HALF HALIGNED ;
     2359    12650           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:91   
     2360    12651        /* Code */
     2361    12652
     2362    12653    2      IF MME_INSTR$->POINIT.OP_SYS_CODE_ADR# ~= 0
     2363    12654    3      THEN DO ;
     2364    12655    3              PARAMETER$ = PINCRW (IS$, MME_INSTR$->POINIT.OP_SYS_CODE_ADR#) ;
     2365    12656    3              PARAMETER$->PARAMETER = 1 ;
     2366    12657    4              DO CASE (TOT$ECP.BOOT_CPU_TYPE) ;
     2367    12658    4                 CASE (%DPS90#,%DPS90XA#) ;
     2368    12659    4                    PARAMETER$ -> PARAMETER_BYTE.BYTE2 = 2;
     2369    12660    4                 CASE (%DPS8000#) ;
     2370    12661    4                    PARAMETER$ -> PARAMETER_BYTE.BYTE2 = 4;
     2371    12662    4                 CASE (%TITAN#) ;
     2372    12663    4                    PARAMETER$ -> PARAMETER_BYTE.BYTE2 = 8;
     2373    12664    4              END /* CASE */ ;
     2374    12665    3           END /* THEN */ ;
     2375    12666    2      PARAMETER$ = PINCRW (IS$, MME_INSTR$ -> POINIT.WWFLAG_ADR#) ;
     2376    12667    2      PARAMETER$ -> PARAMETER = 0 ;
     2377    12668    2      BOUNDS = (B$JIT$ -> B$JIT.TDP - 64) * 1024 ;
     2378    12669    2      PARAMETER$ = PINCRW (IS$, MME_INSTR$ -> POINIT.LSTLOC_ADR#) ;
     2379    12670    2      PARAMETER$ -> PARAMETER_.UPPER# = BOUNDS ;
     2380    12671    2      PARAMETER$ = PINCRW (IS$, MME_INSTR$ -> POINIT.TBWRK_ADR#) ;
     2381    12672    2      PARAMETER$ -> PARAMETER = 0 ;
     2382    12673    2      PARAMETER$ = PINCRW (IS$, MME_INSTR$ -> POINIT.TDIOC_ADR#) ;
     2383    12674    3      DO CASE (TOT$ECP.BOOT_CPU_TYPE) ;
     2384    12675    3         CASE (%DPS90#,%DPS90XA#) ;
     2385    12676    3            PARAMETER$ -> PARAMETER = 1 ;
     2386    12677    3         CASE (%DPS8000#) ;
     2387    12678    3            PARAMETER$ -> PARAMETER = 0 ;
     2388    12679    3         CASE (ELSE) ;
     2389    12680    3            PARAMETER$ -> PARAMETER_BYTE.BYTE0 = -1 ;
     2390    12681    3            PARAMETER$ -> PARAMETER_BYTE.BYTE1 = -1 ;
     2391    12682    3            PARAMETER$ -> PARAMETER_BYTE.BYTE2 = -1 ;
     2392    12683    3            PARAMETER$ -> PARAMETER_BYTE.BYTE3 = -1 ;
     2393    12684    3      END /* DO CASE */ ;
     2394    12685    2      TOT$ECP.SUBEXEC.WRAPUP$ = PINCRW (IS$, MME_INSTR$ -> POINIT.WRADD_ADR#) ;
     2395    12686    2      PARAMETER$ = PINCRW (IS$, MME_INSTR$ -> POINIT.MMEXEC_ADR#) ;
     2396    12687    2      PARAMETER$ -> PARAMETER_BIT = TOT$TOLTS.LINK_DATE.BCD ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:92   
     2397    12688    2      RETURN_DELTA = 10 ;
     2398    12689    2      RETURN ;
     2399    12690
     2400    12691    2   END TOP$MME_POINIT ;
     2401    12692        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:93   
     2402    12693        /*I* NAME:         TOP$MME_PRTRAN
     2403    12694             CALL:         CALL TOP$MME_PRTRAN(P_MMEWD1,P_X1REG,P_AREG,RETURN_DELTA) ;
     2404    12695             INTERFACE:    MATCH_SCT_ADR
     2405    12696             INPUT:        P_MMEWD1(bits 0-17) = address of buffer in POLTS
     2406    12697                           P_X1REG = SCT address
     2407    12698             OUTPUT:       RETURN_DELTA = 3
     2408    12699             DESCRIPTION:  Calls MATCH_SCT_ADR to establish TCX, the index into
     2409    12700                           TOP$TCP for the page using the SCT address
     2410    12701                           passed in P_X1REG.  The pointer TRAIN_BFR$ is built
     2411    12702                           to point to the receiving buffer in POLTS ;
     2412    12703                           TRAIN_BFR is the based structure for the buffer.
     2413    12704                           The printer train image buffer which was stored
     2414    12705                           into TOP$TCP by M$TDOPEN is then moved into
     2415    12706                           POLTS.
     2416    12707        */
     2417    12708        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:94   
     2418    12709    1   TOP$MME_PRTRAN: PROC (P_MMEWD1,P_X1REG,P_AREG,RETURN_DELTA) ;
     2419    12710
     2420    12711    2      DCL TCX UBIN (36) ;
     2421    12712    2      DCL P_MMEWD1 UBIN (36) ;
     2422    12713    2      DCL 1 MME_W1 REDEF P_MMEWD1,
     2423    12714    2            2 ADR UBIN (18) UNAL,
     2424    12715    2            2 * UBIN (18) UNAL ;
     2425    12716    2      DCL P_X1REG  UBIN (18) HALIGNED ;
     2426    12717    2      DCL P_AREG  UBIN (36) ;
     2427    12718    2      DCL RETURN_DELTA SBIN HALF ;
     2428    12719    2      DCL TRAIN_BFR$ PTR ;
     2429    12720    2      DCL TRAIN_BFR CHAR (288) BASED ALIGNED ;
     2430    12721
     2431    12722        /* Code */
     2432    12723
     2433    12724    2      CALL MATCH_SCT_ADR (P_X1REG, TCX) ;
     2434    12725    2      TRAIN_BFR$ = PINCRW (IS$, MME_W1.ADR) ;
     2435    12726    2      TRAIN_BFR$-> TRAIN_BFR = TOP$TCP.BFR.TRAIN_IMAGE(TCX) ;
     2436    12727    2      RETURN_DELTA = 3 ;
     2437    12728    2      RETURN ;
     2438    12729
     2439    12730    2   END TOP$MME_PRTRAN ;
     2440    12731        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:95   
     2441    12732        /*I* NAME:         TOP$MME_RELEAS
     2442    12733             CALL:         CALL TOP$MME_RELEAS(P_X7REG,P_X0REG,P_X1REG,P_X2REG,
     2443    12734                                P_X4REG,P_X6REG,,P_AREG,P_QREG,RETURN_DELTA) ;
     2444    12735             INTERFACE:    MATCH_SCT_ADR
     2445    12736                           RELEASE_DEVICE
     2446    12737             INPUT:        P_X1REG = SCT address
     2447    12738                           P_X7REG(bits 0-5) = designator for release
     2448    12739                               = .00 for POLTS
     2449    12740                               = .51 for MDRs (a BCD "M")
     2450    12741                               = .23 for ITRs (a BCD "C")
     2451    12742             OUTPUT:       RETURN_DELTA = 1 for error return
     2452    12743                           RETURN_DELTA = 2 for good return
     2453    12744             DESCRIPTION:  MATCH_SCT_ADR  is called to search TOP$TCP for
     2454    12745                           the SCT address passed and establish TCX, the index
     2455    12746                           into TOP$TCP for the test page.
     2456    12747
     2457    12748                           Using RELEASE_ID.TYPE, one of several routines
     2458    12749                           for releasing the peripheral is called, depending
     2459    12750                           on the test type.  For the time being, all
     2460    12751                           releasing is done through the same subroutine,
     2461    12752                           RELEASE_DEVICE.
     2462    12753        */
     2463    12754        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:96   
     2464    12755    1   TOP$MME_RELEAS: PROC (P_X7REG,P_X0REG,P_X1REG,P_X2REG,P_X4REG,
     2465    12756    1              P_X6REG,P_AREG,P_QREG,RETURN_DELTA) ;
     2466    12757
     2467    12758    2      DCL TCX UBIN WORD ALIGNED ;
     2468    12759    2      DCL P_X0REG UBIN HALF HALIGNED ;
     2469    12760    2      DCL P_X1REG UBIN HALF HALIGNED ;
     2470    12761    2      DCL P_X2REG UBIN HALF HALIGNED ;
     2471    12762    2      DCL P_X4REG UBIN HALF HALIGNED ;
     2472    12763    2      DCL P_X6REG UBIN HALF HALIGNED ;
     2473    12764    2      DCL P_X7REG UBIN HALF HALIGNED ;
     2474    12765    2      DCL 1 RELEASE_ID REDEF P_X7REG HALIGNED,
     2475    12766    2            2 TYPE UBIN (6) UNAL,
     2476    12767    2            2 *    UBIN (12) UNAL;
     2477    12768    2      DCL P_AREG UBIN WORD ALIGNED ;
     2478    12769    2      DCL P_QREG UBIN WORD ALIGNED ;
     2479    12770    2      DCL RETURN_DELTA SBIN HALF ;
     2480    12771
     2481    12772        /* Code */
     2482    12773
     2483    12774    2      CALL MATCH_SCT_ADR (P_X1REG, TCX) ;
     2484    12775    3      DO CASE (RELEASE_ID.TYPE) ;
     2485    12776    3         CASE (%POLT, %MTC, %MPC, %MTG, %MDC, %MDR, %MMT, %MFC, %MDS, %TMD) ;
     2486    12777    3            CALL RELEASE_DEVICE(TCX) WHENALTRETURN
     2487    12778    4                 DO ;
     2488    12779    4                    RETURN_DELTA = 1 ;
     2489    12780    4                    RETURN ;
     2490    12781    4                 END ;
     2491    12782    3         CASE (ELSE) ;
     2492    12783    3            TOP_ERROR_CODE.ERR# = %E$BADREL ;
     2493    12784    3            CALL TOX$WARN (TOP_ERROR_CODE) ;
     2494    12785    3            RETURN_DELTA = 1 ;
     2495    12786    3            RETURN ;
     2496    12787    3      END /* CASE */ ;
     2497    12788    2      RETURN_DELTA = 2 ;
     2498    12789    2      RETURN ;
     2499    12790
     2500    12791        /* END TOP$MME_RELEAS */
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:97   
     2501    12792        /*I* NAME:         RELEASE_DEVICE
     2502    12793             CALL:         CALL RELEASE_DEVICE(TCX) ;
     2503    12794             INTERFACE:    M$TDCLOSE
     2504    12795             INPUT:        TCX, the index into TOP$TCP  for the page.
     2505    12796             OUTPUT:
     2506    12797             DESCRIPTION:  Fetches the DCB number for the page from TOP$TCP
     2507    12798                           and inserts into TDCLOSE_FPT.V.DCB#, and calls
     2508    12799                           M$TDCLOSE to return the peripheral to CP6.  CP6
     2509    12800                           will hereafter not honor any T&D I/O to the device.
     2510    12801                           However, the device will still remain partitioned
     2511    12802                           SYSCON must be used to return the device to the  i
     2512    12803                           system.
     2513    12804
     2514    12805                           The TOP$TCP entry for the page is initialized,
     2515    12806                           as are all of the pseudo configuration tables,
     2516    12807                           TOP$SCT.DV,TOP$SCT.CN and MPC.
     2517    12808        */
     2518    12809        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:98   
     2519    12810    2   RELEASE_DEVICE: PROC (TCX) ALTRET ;
     2520    12811
     2521    12812    3      DCL TCX UBIN WORD ALIGNED ;
     2522    12813
     2523    12814        /* Code */
     2524    12815
     2525    12816    3      TDCLOSE_FPT.V.DCB# = TOP$TCP.DCB#(TCX) ;
     2526    12817    3      CALL M$TDCLOSE (TDCLOSE_FPT) WHENALTRETURN
     2527    12818    4           DO ;
     2528    12819    4              CALL TOX$WARN (B$TCB$->B$TCB.ALT$->B$ALT.ERR) ;
     2529    12820    4              ALTRETURN ;
     2530    12821    4           END ;
     2531    12822    3      TOP$TCP(TCX) = '0'B ;
     2532    12823    3      TOP$SCT.DV(TCX) = '0'B ;
     2533    12824    3      TOP$SCT.CN(TCX) = '0'B ;
     2534    12825    3      MPC(TCX) = '0'B ;
     2535    12826    3      RETURN ;
     2536    12827
     2537    12828    3   END RELEASE_DEVICE ;
     2538    12829    2   END TOP$MME_RELEAS ;
     2539    12830        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:99   
     2540    12831        /*I* NAME:         TOP$MME_RELLNK
     2541    12832             CALL:         CALL TOP$MME_RELLNK(P_AREG,P_QREG,P_X1REG,P_X3REG,
     2542    12833                                P_X4REG,RETURN_DELTA) ;
     2543    12834             INTERFACE:
     2544    12835             INPUT:
     2545    12836             OUTPUT ;
     2546    12837             DESCRIPTION:  Not used in CP6.
     2547    12838        */
     2548    12839
     2549    12840    1   TOP$MME_RELLNK: PROC (P_AREG,P_QREG,P_X1REG,P_X3REG,P_X4REG,RETURN_DELTA) ;
     2550    12841
     2551    12842    2      DCL P_AREG       UBIN (36) ;
     2552    12843    2      DCL P_QREG       UBIN (36) ALIGNED ;
     2553    12844    2      DCL P_X1REG      UBIN (18) HALIGNED ;
     2554    12845    2      DCL P_X3REG      UBIN (18) HALIGNED ;
     2555    12846    2      DCL P_X4REG      UBIN (18) HALIGNED ;
     2556    12847    2      DCL RETURN_DELTA SBIN HALF ;
     2557    12848
     2558    12849        /* Code */
     2559    12850
     2560    12851    2      RETURN_DELTA = 1 ;
     2561    12852    2      RETURN ;
     2562    12853
     2563    12854    2   END TOP$MME_RELLNK ;
     2564    12855        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:100  
     2565    12856        /*I* NAME:         TOP$MME_RELMPC
     2566    12857             CALL:         CALL TOP$MME_RELMPC(P_X1REG,RETURN_DELTA) ;
     2567    12858             INTERFACE:
     2568    12859             INPUT:
     2569    12860             OUTPUT:       RETURN_DELTA = 1
     2570    12861             DESCRIPTION:  Return of MPC in the CP6 environment is done by
     2571    12862                           M$TDCLOSE ; no special consideration is required.
     2572    12863        */
     2573    12864
     2574    12865    1   TOP$MME_RELMPC: PROC (P_X1REG,RETURN_DELTA) ;
     2575    12866
     2576    12867    2      DCL P_X1REG  UBIN (18) HALIGNED ;
     2577    12868    2      DCL RETURN_DELTA SBIN HALF ;
     2578    12869
     2579    12870        /* Code */
     2580    12871
     2581    12872    2      RETURN_DELTA = 1 ;
     2582    12873    2      RETURN ;
     2583    12874
     2584    12875    2   END TOP$MME_RELMPC ;
     2585    12876        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:101  
     2586    12877        /*I* NAME:         TOP$MME_RLSPAT
     2587    12878             CALL:         CALL TOP$MME_RLSPAT(P_X4REG,RETURN_DELTA) ;
     2588    12879             INTERFACE:
     2589    12880             INPUT:
     2590    12881             OUTPUT:       RETURN_DELTA = 1
     2591    12882             DESCRIPTION:  There is no PAT to release in the CP6 environment.
     2592    12883        */
     2593    12884
     2594    12885    1   TOP$MME_RLSPAT: PROC (P_X4REG,RETURN_DELTA) ;
     2595    12886
     2596    12887    2      DCL P_X4REG UBIN HALF HALIGNED ;
     2597    12888    2      DCL RETURN_DELTA SBIN HALF HALIGNED ;
     2598    12889
     2599    12890        /* Code */
     2600    12891
     2601    12892    2      RETURN_DELTA = 1 ;
     2602    12893    2      RETURN ;
     2603    12894
     2604    12895    2   END TOP$MME_RLSPAT ;
     2605    12896        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:102  
     2606    12897        /*I* NAME:         TOP$MME_SCTCMP
     2607    12898             AUTHOR:       Scott S. Sheppard
     2608    12899             INTERFACE:    FIND_VACANT_ENTRY
     2609    12900                           GET_DEVICE_CODE
     2610    12901                           BUILD_TEST_CONTROL_ENTRY
     2611    12902                           BUILD_SCTWRK
     2612    12903             INPUT:        MME Word 1 (bits 0-17) = address of FICCDD word in subexec
     2613    12904                           MME Word 2 (bits 0-17) = address of SCTWRK buffer in subexec
     2614    12905                           X3 = three digit channel number if new format
     2615    12906                           Q  = passed along to BUILD_SCTWRK
     2616    12907             OUTPUT:       X2 = error code for slave mode subexec
     2617    12908                           RETURN_DELTA = 4 for good return
     2618    12909                                        = 5 for bad return
     2619    12910             DESCRIPTION:  MME  SCTCMP is  one of  the first  MME's done by a
     2620    12911                           subexecutive  following  a  new  test request on a
     2621    12912                           peripheral. It is even done before MME ALLOCR.  In
     2622    12913                           the GCOS world, it is intended to do a preliminary
     2623    12914                           check on whether a  peripheral can be allocated or
     2624    12915                           not.
     2625    12916
     2626    12917                           In   the  CP-6   implementation,  this   MME  will
     2627    12918                           associate  with a  particular test  page, a unique
     2628    12919                           set  of  pseudo  configuration  tables  and  set a
     2629    12920                           control  table, from  which the  test page will be
     2630    12921                           controlled  until it  terminates.  Also,  the CP-6
     2631    12922                           system provided configuration file is interrogated
     2632    12923                           at  this time  to determine  the peripheral device
     2633    12924                           code.
     2634    12925
     2635    12926                           The  following  pseudo  configuration  tables  are
     2636    12927                           associated  with the  test page,  one set per test
     2637    12928                           page, and can be  uniquely identified by the index
     2638    12929                           TCX (test control index):
     2639    12930
     2640    12931                             TOP$SCT.DV(TCX) = device SCT table
     2641    12932                             TOP$SCT.DN(TCX) = controller SCT table
     2642    12933                             MPC(TCX) = MPC table
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:103  
     2643    12934
     2644    12935                           These tables are not used by CP-6 or even based on
     2645    12936                           any of the  CP-6 peripheral control tables.  These
     2646    12937                           tables  exist just  for coexistence  with the GCOS
     2647    12938                           oriented Slave Mode Subexecutives.
     2648    12939
     2649    12940                           Important  control information  about each  of the
     2650    12941                           test pages which must be maintained as long as the
     2651    12942                           page is running is  kept in TOP$TCP, an 8
     2652    12943                           entry   table  indexed  into   by  TCX.   See  the
     2653    12944                           declaration  for   the  exact  field  definitions.
     2654    12945                           Presently,   TOP$TCP  is   used  by  both
     2655    12946                           TOP$POLTS  and TOM$MOLTS.  Thus,  it is defined in
     2656    12947                           the TOLTS include file, TOT_TOLTS_M, as a macro.
     2657    12948
     2658    12949                           FIND_VACANT_ENTRY  is called  to search  the ICCDD
     2659    12950                           field  in TOP$TCP to  find an entry which
     2660    12951                           is not  assigned, i.e., is zero.   This entry will
     2661    12952                           be  assigned  to  this  test  page,  and  will  be
     2662    12953                           uniquely  identified in future  references by TCX,
     2663    12954                           the index into TOP$TCP.
     2664    12955
     2665    12956                           GET_DEVICE_CODE  is  called  to  access the system
     2666    12957                           configuration file and does the following:
     2667    12958
     2668    12959                            a.  Validates IOM, channel and device numbers.
     2669    12960                            b.  Verifies the ITR I/O specifies only the boot
     2670    12961                                channel on the MPC's.
     2671    12962                            c.  Maps the CP-6 peripheral model number into
     2672    12963                                a device code which is the GCOS 6 bit device
     2673    12964                                code for peripherals.
     2674    12965
     2675    12966                           NOTES ON PERIPHERAL ALLOCATION FOR POSTERITY:
     2676    12967                            a.  MDR I/O can run on any MPC channel ; also,
     2677    12968                                "suspends" and "releases" can be done on any
     2678    12969                                MPC channel.  For some reason, in the GCOS
     2679    12970                                systems, MDR I/O is restricted to the base
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:104  
     2680    12971                                channel on the MPC, and a lot of checking is
     2681    12972                                done to insure this.  This is not a restriction
     2682    12973                                of the hardware, and thus is not a restriction
     2683    12974                                in CP-6.  MPC firmware can handle "suspends" and
     2684    12975                                "releases" on any channel.  The problem with
     2685    12976                                GCOS may be that the MPC will send a special
     2686    12977                                interrupt back over the base channel to notify
     2687    12978                                the system that the suspend/release commands
     2688    12979                                are in effect.
     2689    12980                            b.  ITR I/O needs to go over only the base channel
     2690    12981                                of a MPC because once the IPCW command is sent
     2691    12982                                to initialize a MPC for ITRs, the BLT will sit
     2692    12983                                and (1) only accept a bootload command over
     2693    12984                                (2) the base channel.  This is not the case
     2694    12985                                in some of the newer controllers which can
     2695    12986                                accept a bootload over any channel.  But for
     2696    12987                                this implementation of TOLTS, ITR I/O will
     2697    12988                                be restricted to the base or bootload channel.
     2698    12989                                (The bootload channel is specified by switches
     2699    12990                                on the MPC maintenance panel.)
     2700    12991
     2701    12992                           PROGRAM LOGIC (continued):   If for any of several
     2702    12993                           possible  reasons,  an  error  occurs  during  the
     2703    12994                           processing of  this MME, RETURN DELTA  is set to 5
     2704    12995                           and  an error code  is placed in  the X2 register.
     2705    12996                           Normally,  RETURN DELTA is  set to 4  after a test
     2706    12997                           control   entry  and   associated  system  control
     2707    12998                           information has been properly recorded.
     2708    12999
     2709    13000                           The  structure,  SCT,  is  a  local  structure  to
     2710    13001                           procedure  TOP$MME_SCTCMP used  as working storage
     2711    13002                           to  process  this  MME.  The  information  that is
     2712    13003                           permanently saved for each  test page can be found
     2713    13004                           in the test control TOP$TCP.
     2714    13005        */
     2715    13006        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:105  
     2716    13007    1   TOP$MME_SCTCMP: PROC (MME_WD1, MME_WD2, Q, X2, X3, RETURN_DELTA) ;
     2717    13008
     2718    13009    2      DCL MME_WD1          UBIN WORD ALIGNED ;
     2719    13010    2      DCL MME_WD2          UBIN WORD ALIGNED ;
     2720    13011    2      DCL Q                UBIN WORD ALIGNED ;
     2721    13012    2      DCL X2               UBIN HALF HALIGNED ;
     2722    13013    2      DCL X3               UBIN HALF HALIGNED ;
     2723    13014    2      DCL RETURN_DELTA     SBIN HALF HALIGNED ;
     2724    13015
     2725    13016    2      DCL TCX              UBIN WORD ALIGNED ;
     2726    13017           %LIST ;
     2727    13018           %SCT ;
             13019           %LSET STR = CONCAT (TEXTCHAR(STCLASS),'        ');
             13020           %IF (SUBSTR(STR,0,6) = 'STATIC') OR
             13021               (SUBSTR(STR,0,8) = 'CONSTANT') OR
             13022               (SUBSTR(STR,0,3) = 'EXT');
             13024           %ELSE;
             13025             %LSET INIT = CHARTEXT('/*');
             13026           %ENDIF;
             13027    2      DCL 1 FPTN STCLASS ALIGNED,
             13028    2            2 FICCDD ALIGNED,
             13029    2              3 FLAG# BIT (3) UNAL,
             13030    2              3 FORMAT# BIT (1) UNAL,
             13031    2              3 IOM# UBIN (2) UNAL,
             13032    2              3 CHANNEL# UBIN (18) UNAL,
             13033    2              3 DEVICE# UBIN (6) UNAL,
             13034    2              3 * UBIN (6) UNAL,
             13035    2            2 TEST_TYPE UBIN (6) CALIGNED,
             13036    2            2 DEVICE_CODE UBIN (6) CALIGNED,
             13037    2            2 FIRMWARE,
             13038    2              3 TYPE# CHAR (4) CALIGNED,
             13039    2              3 LP# CHAR (4) CALIGNED,
             13040    2              3 RP# CHAR (4) CALIGNED,
             13041    2            2 BIT17 BIT (1) CALIGNED,
             13042    2            2 BIT13 BIT (1) CALIGNED,
             13043    2            2 BIT12 BIT (1) CALIGNED,
             13044    2            2 MODEL CHAR (8) CALIGNED,
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:106  
             13045    2            2 MPC_MODEL CHAR (8) CALIGNED;
     2728    13047           %PLIST ;
     2729    13048    2      DCL SCTWDS_BUILT     BIT (1) CALIGNED ;
     2730    13049    2      DCL REASON           UBIN HALF HALIGNED ;
     2731    13050           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:107  
     2732    13051        /* Code */
     2733    13052
     2734    13053    2      CALL FIND_VACANT_ENTRY (TCX) WHENALTRETURN
     2735    13054    3           DO ;
     2736    13055    3              RETURN_DELTA = 5 ;
     2737    13056    3              X2 = %CP6DENY# ;
     2738    13057    3              RETURN ;
     2739    13058    3           END ;
     2740    13059
     2741    13060    2      CALL GET_DEVICE_CODE (MME_WD1, X3, SCT, REASON) WHENALTRETURN
     2742    13061    3           DO ;
     2743    13062    3              RETURN_DELTA = 5 ;
     2744    13063    3              X2 = REASON ;
     2745    13064    3              RETURN ;
     2746    13065    3           END ;
     2747    13066
     2748    13067    2      CALL BUILD_TEST_CONTROL_ENTRY (TCX, SCT) WHENALTRETURN
     2749    13068    3           DO ;
     2750    13069    3              RETURN_DELTA = 5 ;
     2751    13070    3              X2 = %INVTT# ;
     2752    13071    3              RETURN ;
     2753    13072    3           END ;
     2754    13073
     2755    13074    2      SCTWDS_BUILT = %FALSE ;
     2756    13075    2      CALL BUILD_SCTWRK (TCX, MME_WD2, SCT.BIT17, SCT.BIT13, SCT.BIT12, Q, SCTWDS_BUILT
             13075               ) ;
     2757    13076    2      RETURN_DELTA = 4 ;
     2758    13077    2      RETURN ;
     2759    13078
     2760    13079        /*END TOP$MME_SCTCMP*/
     2761    13080        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:108  
     2762    13081        /*I* NAME:         FIND_VACANT_ENTRY
     2763    13082             AUTHOR:       Carl J. Eichert
     2764    13083             INTERFACE:    None called.
     2765    13084             INPUT:        TOP$TCP
     2766    13085             OUTPUT:       TCX
     2767    13086             DESCRIPTION:  Searches the IN USE field in TOP$TCP
     2768    13087                           for a zero field which  indicates  that the  entry
     2769    13088                           can be assigned to this test page.   This field is
     2770    13089                           initialized in TOT$ROOT at the start of testing.
     2771    13090        */
     2772    13091
     2773    13092    2   FIND_VACANT_ENTRY: PROC (TCX) ALTRET ;
     2774    13093
     2775    13094    3      DCL TCX    UBIN WORD ALIGNED ;
     2776    13095    3      DCL FOUND  BIT (1) ALIGNED ;
     2777    13096
     2778    13097        /* Code */
     2779    13098
     2780    13099    4      DO INHIBIT ;
     2781    13100    4         TCX = 0 ;
     2782    13101    5         DO WHILE (TOP$TCP.IN_USE(TCX) & TCX < 8) ;
     2783    13102    5            TCX = TCX + 1 ;
     2784    13103    5         END /* WHILE */ ;
     2785    13104    4         IF TCX < 8
     2786    13105    5         THEN DO ;
     2787    13106    5                 FOUND = %TRUE ;
     2788    13107    5                 TOP$TCP.IN_USE(TCX) = %TRUE ;
     2789    13108    5              END /* THEN */ ;
     2790    13109    4         ELSE FOUND = %FALSE ;
     2791    13110    4      END /* INHIBIT */ ;
     2792    13111    3      IF FOUND
     2793    13112    3      THEN RETURN ;
     2794    13113    3      ELSE ALTRETURN ;
     2795    13114
     2796    13115    3   END FIND_VACANT_ENTRY ;
     2797    13116        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:109  
     2798    13117        /*I* NAME:         GET_DEVICE_CODE
     2799    13118             AUTHORS:      Gary Chun
     2800    13119                           Scott Sheppard
     2801    13120                           Kathy Larkin
     2802    13121             INTERFACE:    M$OPEN
     2803    13122                           M$CLOSE
     2804    13123                           TOX$ERROR
     2805    13124                           BUILD_SCT_FICCDD
     2806    13125                           GET_CHANNEL_DEVICE
     2807    13126                           BOGUS_TDOPEN
     2808    13127                           GET_MODEL_ID
     2809    13128                           VALIDATE_DEVICE_TYPE
     2810    13129                           MAP_DEVICE
     2811    13130             INPUT:        MME_WD1
     2812    13131                           X3
     2813    13132             OUTPUT:       SCT.DEVICE_CODE = 6 bit GCOS device code
     2814    13133                           SCT.BIT17
     2815    13134                           SCT.BIT13
     2816    13135                           SCT.BIT12
     2817    13136                           SCT.FIRMWARE.TYPE#
     2818    13137                           SCT.FIRMWARE.LP#
     2819    13138                           SCT.FIRMWARE.RP#
     2820    13139                           REASON
     2821    13140             DESCRIPTION:  The  address of  FICCDD in  the subexec, passed in
     2822    13141                           bits 0-17 of MME word 1 is used to build a pointer
     2823    13142                           to  FICCDD  in  the  subexec,  and  the  following
     2824    13143                           working  variables are  set using  the information
     2825    13144                           there:
     2826    13145
     2827    13146                             SCT.FICCDD.IOM#     = I  (IOM number)
     2828    13147                             SCT.FICCDD.CHANNEL# = CC (channel number)
     2829    13148                             SCT.FICCDD.DEVICE#  = DD (device number)
     2830    13149                             SCT.TEST_TYPE = TT (test type)
     2831    13150
     2832    13151                           The  T&D configuration  file is  built by GHOST1 at
     2833    13152                           system boot  time, fid is :CONFIG,  and resides in
     2834    13153                           :SYS.
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:110  
     2835    13154
     2836    13155                           READ_CONFIG is an FPT set up to perform reads from
     2837    13156                           the :CONFIG file. All that  need be set is the key
     2838    13157                           and the destination of the data.
     2839    13158
     2840    13159                           The  HEAD  record  for  the  configuration file is
     2841    13160                           read, and the IOM  number is validated by checking
     2842    13161                           to see  that it does not  exceed the actual number
     2843    13162                           of IOM's on the system.
     2844    13163
     2845    13164                           Given  a  "valid"  IOM  number,  the configuration
     2846    13165                           record for an IOM is read in.  Once again, the key
     2847    13166                           for  the read  is set  into READ_CONFIG.KEY_.  The
     2848    13167                           record is read into a buffer named CONFIG_RECORD.
     2849    13168
     2850    13169                           CONFIG_RECORD  contains 64 entries,  one entry per
     2851    13170                           possible  IOM channel,  each containing  the ASCII
     2852    13171                           name of the device  on that channel.  (Examples of
     2853    13172                           the ASCII names are "TC01","DC01","FEP1" etc.  The
     2854    13173                           entry  for the  channel of  interest (channel#) is
     2855    13174                           fetched and stored in CHANNEL_DEVICE.
     2856    13175
     2857    13176                           At this point, it is determined whether the device
     2858    13177                           on this channel is either (1) a MPC (disk, tape or
     2859    13178                           unit  record), (2)  a console  or (3)  other.  The
     2860    13179                           presence of a MPC  on the channel requires further
     2861    13180                           access to the configuration file to get the actual
     2862    13181                           device type.  The subroutine MPC_DEVICE does this,
     2863    13182                           and determines what the actual device code is.  If
     2864    13183                           the  device on the  IOM channel is  a console, and
     2865    13184                           the  device number  specified in  the test request
     2866    13185                           (now  stored in  DEVICE_NUMBER) is  0 a console is
     2867    13186                           present on the channel.  DEVICE_CODE is set to the
     2868    13187                           console code.
     2869    13188
     2870    13189                           It is an error  condition if the "other" condition
     2871    13190                           exits, i.e.,  not a MPC or  console, and return is
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:111  
     2872    13191                           made to the caller signifying an invalid device.
     2873    13192        */
     2874    13193        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:112  
     2875    13194    2   GET_DEVICE_CODE: PROC (MME_WD1, X3, SCT, REASON) ALTRET ;
     2876    13195
     2877    13196    3      DCL MME_WD1          UBIN WORD ALIGNED ;
     2878    13197    3      DCL X3               UBIN HALF HALIGNED ;
     2879    13198           %SCT ;
     2880    13227    3      DCL REASON           UBIN HALF HALIGNED ;
     2881    13228    3      DCL CHANNEL_DEVICE   CHAR (8) ALIGNED ;
     2882    13229    3      DCL CONFIG_DCB$      PTR ALIGNED ;
     2883    13230           %FPT_OPEN (FPTN = OPEN_CONFIG,
     2884    13231                      DCB  = M$CNFGFILE,
     2885    13232                      NAME = FILE_NAME,
     2886    13233                      ASN  = FILE,
     2887    13234                      ACCT = ACCOUNT_NAME,
     2888    13235                      ACS  = DIRECT,
     2889    13236                      DISP = NAMED,
     2890    13237                      ORG  = KEYED,
     2891    13238                      FUN  = IN,
     2892    13239                      SHARE = IN) ;
     2893    13348           %FPT_READ (FPTN = READ_CONFIG,
     2894    13349                      DCB  = M$CNFGFILE,
     2895    13350                      KEYS = YES) ;
     2896    13389           %FPT_CLOSE (FPTN = CLOSE_CONFIG,
     2897    13390                       DCB = M$CNFGFILE,
     2898    13391                       DISP = SAVE) ;
     2899    13433           %VLP_NAME (FPTN = FILE_NAME,
     2900    13434                      LEN  = 11,
     2901    13435                      NAME = ':CONFIG') ;
     2902    13462           %VLP_ACCT (FPTN = ACCOUNT_NAME,
     2903    13463                      ACCT = ':SYS') ;
     2904    13476           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:113  
     2905    13477        /* Code */
     2906    13478
     2907    13479    3      CALL BUILD_SCT_FICCDD (MME_WD1, X3, SCT) ;
     2908    13480    3      CALL M$OPEN (OPEN_CONFIG) WHENALTRETURN
     2909    13481    4           DO;
     2910    13482    4              TOP_ERROR_CODE.ERR# = %E$NOOPENCONFIG;
     2911    13483    4              CALL TOX$ERROR (TOP_ERROR_CODE);
     2912    13484    4           END /* WHENALTRETURN */;
     2913    13485
     2914    13486        /* If not a request for a device or MPC then skip */
     2915    13487
     2916    13488    3      IF SCT.TEST_TYPE = %RPM
     2917    13489    3      THEN /* DO NOTHING */ ;
     2918    13490    4      ELSE DO;
     2919    13491    4              CALL GET_CHANNEL_DEVICE (SCT, CHANNEL_DEVICE) WHENALTRETURN
     2920    13492    5                   DO ;
     2921    13493    5                      CALL M$CLOSE (CLOSE_CONFIG) ;
     2922    13494    5                      REASON = %INVIOM# ;
     2923    13495    5                      ALTRETURN ;
     2924    13496    5                   END /* WHENALTRETURN */ ;
     2925    13497    4              CALL BOGUS_TDOPEN (SCT, CONFIG_DCB$) WHENALTRETURN
     2926    13498    5                   DO ;
     2927    13499    5                      CALL M$CLOSE (CLOSE_CONFIG) ;
     2928    13500    5                      REASON = %INVDEV# ;
     2929    13501    5                      ALTRETURN ;
     2930    13502    5                   END /* WHENALTRETURN */ ;
     2931    13503    4              CALL GET_MODEL_ID (SCT, CONFIG_DCB$) ;
     2932    13504    4              CALL VALIDATE_DEVICE_TYPE (SCT, CHANNEL_DEVICE, REASON) WHENALTRETURN
     2933    13505    5                   DO ;
     2934    13506    5                      CALL M$CLOSE (CLOSE_CONFIG) ;
     2935    13507    5                      ALTRETURN ;
     2936    13508    5                   END /* WHENALTRETURN */ ;
     2937    13509    4           END /* ELSE DO */ ;
     2938    13510
     2939    13511    3      CALL MAP_DEVICE (SCT, CONFIG_DCB$) WHENALTRETURN
     2940    13512    4           DO ;
     2941    13513    4              CALL M$CLOSE (CLOSE_CONFIG) ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:114  
     2942    13514    4              REASON = %INVDEV# ;
     2943    13515    4              ALTRETURN ;
     2944    13516    4           END /* WHENALTRETURN */ ;
     2945    13517    3      CALL M$CLOSE (CLOSE_CONFIG) ;
     2946    13518    3      RETURN ;
     2947    13519
     2948    13520        /* END GET_DEVICE_CODE */
     2949    13521        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:115  
     2950    13522        /*I* NAME:         BUILD_SCT_FICCDD
     2951    13523             AUTHOR:       Scott S. Sheppard
     2952    13524             INTERFACE:    None called.
     2953    13525             INPUT:        MME_W1
     2954    13526                           X3
     2955    13527             OUTPUT:       SCT.FICCDDIOM#
     2956    13528                           SCT.FICCDDCHANNEL#
     2957    13529                           SCT.FICCDDDEVICE#
     2958    13530                           SCT.TEST_TYPE
     2959    13531             DESCRIPTION:  This procedure uses the address found in MME
     2960    13532                           word one to obtain the FICCDD information and
     2961    13533                           test type for the device. If the FICCDD is in
     2962    13534                           new format, the channel number is found in the
     2963    13535                           X3 register. This FICCDD information is stored
     2964    13536                           in a temporary work structure SCT. It is this
     2965    13537                           SCT structure that is eventually used to build
     2966    13538                           a test control entry for the test page.
     2967    13539        */
     2968    13540        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:116  
     2969    13541    3   BUILD_SCT_FICCDD: PROC (MME_W1, X3, SCT) ;
     2970    13542
     2971    13543    4      DCL 1 MME_W1         ALIGNED,
     2972    13544    4            2 ADDR#        UBIN HALF UNAL,
     2973    13545    4            2 *            UBIN HALF UNAL ;
     2974    13546    4      DCL X3               UBIN HALF HALIGNED ;
     2975    13547           %SCT ;
     2976    13576    4      DCL FICCDD$          PTR STATIC ALIGNED ;
     2977    13577    4      DCL 1 FICCDD BASED (FICCDD$) ALIGNED,
     2978    13578    4            2 FLAG#        BIT (3) UNAL,
     2979    13579    4            2 FORMAT#      BIT (1) UNAL,
     2980    13580    4            2 IOM#         UBIN (2) UNAL,
     2981    13581    4            2 CHAN#        UBIN (6) UNAL,
     2982    13582    4            2 DEV#         UBIN (6) UNAL,
     2983    13583    4            2 TEST_TYPE#   UBIN (6) UNAL,
     2984    13584    4            2 *            BIT (12) UNAL ;
     2985    13585           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:117  
     2986    13586        /* Code */
     2987    13587
     2988    13588           /* Set up FICCDD pointer */
     2989    13589    4      FICCDD$ = PINCRW (IS$, MME_W1.ADDR#) ;
     2990    13590
     2991    13591           /* Use implied pointer with FICCDD based structure */
     2992    13592    4      SCT.FICCDD.FLAG# = FICCDD.FLAG# ;
     2993    13593    4      SCT.FICCDD.FORMAT# = FICCDD.FORMAT# ;
     2994    13594    4      SCT.FICCDD.IOM# = FICCDD.IOM# ;
     2995    13595    4      IF FICCDD.FORMAT# = %NEW_FORMAT
     2996    13596    4      THEN SCT.FICCDD.CHANNEL# = X3 ;
     2997    13597    4      ELSE SCT.FICCDD.CHANNEL# = FICCDD.CHAN# ;
     2998    13598    4      SCT.FICCDD.DEVICE# = FICCDD.DEV# ;
     2999    13599    4      SCT.TEST_TYPE = FICCDD.TEST_TYPE# ;
     3000    13600    4      RETURN ;
     3001    13601
     3002    13602    4   END BUILD_SCT_FICCDD ;
     3003    13603        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:118  
     3004    13604        /*I* NAME:         GET_CHANNEL_DEVICE
     3005    13605             AUTHOR:       Scott S. Sheppard
     3006    13606             INTERFACE:    M$READ
     3007    13607             INPUT:        SCT.FICCDD.IOM#
     3008    13608                           SCT.FICCDD.CHANNEL#
     3009    13609             OUTPUT:       CHANNEL_DEVICE
     3010    13610             DESCRIPTION:  This procedure obtains configurartion information
     3011    13611                           for the specified channel of the specified IOM.
     3012    13612                           The head record is read to determine the number
     3013    13613                           of IOM's on the system. If the specified IOM
     3014    13614                           number is valid, the IOM configuration record is
     3015    13615                           read. This IOM record contains device information
     3016    13616                           for all of its available channels. This procedure
     3017    13617                           returns a portion of the IOM record, namely the
     3018    13618                           part indexed by the specified channel number.
     3019    13619                           This is done by overlaying an array onto the
     3020    13620                           configuration record using a based structure.
     3021    13621        */
     3022    13622        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:119  
     3023    13623    3   GET_CHANNEL_DEVICE: PROC (SCT, CHANNEL_DEVICE) ALTRET ;
     3024    13624
     3025    13625           %SCT ;
     3026    13654    4      DCL CHANNEL_DEVICE   CHAR (8) CALIGNED ;
     3027    13655    4      DCL 1 HEAD_KEY       CONSTANT ALIGNED,
     3028    13656    4            2 SIZE         UBIN BYTE UNAL INIT (1),
     3029    13657    4            2 DATA         UBIN BYTE UNAL INIT (0) ;
     3030    13658    4      DCL 1 IOM_KEY        (0:3) CONSTANT ALIGNED,
     3031    13659    4            2 SIZE         UBIN BYTE UNAL INIT (4*4),
     3032    13660    4            2 DATA         CHAR (4)  UNAL INIT ('IOM0', 'IOM1', 'IOM2', 'IOM3') ;
     3033    13661    4      DCL 1 IMU_KEY        (0:3) CONSTANT ALIGNED,
     3034    13662    4            2 SIZE         UBIN BYTE UNAL INIT (4*4),
     3035    13663    4            2 DATA         CHAR (4)  UNAL INIT ('IMU0', 'IMU1', 'IMU2', 'IMU3') ;
     3036    13664    4      DCL CONFIG_RECORD    (0:2000) UBIN WORD ALIGNED ;
     3037    13665    4      DCL CONFIG$          PTR ALIGNED ;
     3038    13666           %TD$HEAD ;
     3039    13702           %TD$IOM ;
     3040    13710           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:120  
     3041    13711        /* Code */
     3042    13712
     3043    13713    4      CONFIG$ = ADDR (CONFIG_RECORD) ;
     3044    13714    4      READ_CONFIG.KEY_ = VECTOR (HEAD_KEY) ;
     3045    13715    4      READ_CONFIG.BUF_ = VECTOR (CONFIG_RECORD) ;
     3046    13716    4      CALL M$READ (READ_CONFIG) ;
     3047    13717    4      IF SCT.FICCDD.IOM# < CONFIG$ -> TD$HEAD.NUMIOMS
     3048    13718    5      THEN DO ;
     3049    13719    5              READ_CONFIG.KEY_ = VECTOR (IOM_KEY(SCT.FICCDD.IOM#)) ;
     3050    13720    5              CALL M$READ (READ_CONFIG) WHENALTRETURN
     3051    13721    6                   DO ;
     3052    13722    6                      READ_CONFIG.KEY_ = VECTOR (IMU_KEY(SCT.FICCDD.IOM#)) ;
     3053    13723    6                      CALL M$READ (READ_CONFIG) WHENALTRETURN
     3054    13724    7                           DO ;
     3055    13725    7                              ALTRETURN ;
     3056    13726    7                           END /* WHENALTRETURN DO */ ;
     3057    13727    6                   END /*WHENALTRETURN DO */ ;
     3058    13728    5              CHANNEL_DEVICE = CONFIG$ -> TD$IOM.DEVNAME(SCT.FICCDD.CHANNEL#) ;
     3059    13729    5              RETURN ;
     3060    13730    5           END /* THEN */ ;
     3061    13731    4      ELSE ALTRETURN ;
     3062    13732
     3063    13733    4   END GET_CHANNEL_DEVICE ;
     3064    13734        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:121  
     3065    13735        /*I* NAME:         BOGUS_TDOPEN
     3066    13736             AUTHOR:       Scott S. Sheppard
     3067    13737             INTERFACE:    M$TDOPEN
     3068    13738             INPUT:        SCT.FICCDD.IOM#
     3069    13739                           SCT.FICCDD.CHANNEL#
     3070    13740                           SCT.FICCDD.DEVICE#
     3071    13741             OUTPUT:       DCB$
     3072    13742             DESCRIPTION:  This procedure performs a TDOPEN on the specified
     3073    13743                           IOM channel and device to get the CP-6 operating
     3074    13744                           system to alter a specified DCB. This DCB can be
     3075    13745                           interrogated later in the processing to obtain
     3076    13746                           the device name associated with the channel. This
     3077    13747                           device name is used as a key into the configuration
     3078    13748                           file to obtain the model number of the device.
     3079    13749        */
     3080    13750
     3081    13751    3   BOGUS_TDOPEN: PROC (SCT, DCB$) ALTRET ;
     3082    13752
     3083    13753           %SCT ;
     3084    13782    4      DCL DCB$             PTR ALIGNED ;
     3085    13783           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:122  
     3086    13784        /* Code */
     3087    13785
     3088    13786    4      TDOPEN_FPT.V.DCB# = DCBNUM (M$DEVCNFG) ;
     3089    13787    4      IF SCT.TEST_TYPE = %MPC
     3090    13788    4      THEN TDOPEN_FPT.V.TEST# = %TD_TEST_MPC;
     3091    13789    4      ELSE TDOPEN_FPT.V.TEST# = %TD_TEST_DEVICE;
     3092    13790    4      TDOPEN_FPT.V.DEVICE.IOM# = SCT.FICCDD.IOM# ;
     3093    13791    4      TDOPEN_FPT.V.DEVICE.CHAN# = SCT.FICCDD.CHANNEL# ;
     3094    13792    4      TDOPEN_FPT.V.DEVICE.DVN# = SCT.FICCDD.DEVICE# ;
     3095    13793    4      CALL M$TDOPEN (TDOPEN_FPT) ALTRET (ERROR) ;
     3096    13794    4      DCB$ = DCBADDR (DCBNUM (M$DEVCNFG)) ;
     3097    13795    4      RETURN ;
     3098    13796
     3099    13797    4   ERROR:
     3100    13798    4      CALL TOX$WARN (B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR) ;
     3101    13799    4      ALTRETURN ;
     3102    13800
     3103    13801    4   END BOGUS_TDOPEN ;
     3104    13802        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:123  
     3105    13803        /*I* NAME:         GET_MODEL_ID
     3106    13804             AUTHOR:       Scott S. Sheppard
     3107    13805             INTERFACE:    M$READ
     3108    13806             INPUT:        DCB$
     3109    13807             OUTPUT:       SCT.MODEL
     3110    13808             DESCRIPTION:  This procedure obtains a device key from the DCB
     3111    13809                           pointed to by the DCB$ parameter. This device key
     3112    13810                           is used to obtain a device record from the :CONFIG
     3113    13811                           file. The device record contains the model number
     3114    13812                           of the device which is returned.
     3115    13813        */
     3116    13814
     3117    13815    3   GET_MODEL_ID: PROC (SCT, DCB$) ;
     3118    13816
     3119    13817           %SCT ;
     3120    13846    4      DCL DCB$             PTR ALIGNED ;
     3121    13847    4      DCL DEVICE$          PTR ALIGNED ;
     3122    13848    4      DCL 1 DEVICE_KEY     STATIC CALIGNED,
     3123    13849    4            2 SIZE         UBIN BYTE UNAL INIT (8),
     3124    13850    4            2 DATA         CHAR (8) UNAL INIT (' ') ;
     3125    13851    4      DCL CONFIG_RECORD    (0:2000) UBIN WORD ALIGNED ;
     3126    13852           %TD$DEV ;
     3127    13871           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:124  
     3128    13872        /* Code */
     3129    13873
     3130    13874    4      DEVICE_KEY.DATA = DCB$ -> F$DCB.NAME#.C ;
     3131    13875    4      READ_CONFIG.KEY_ = VECTOR (DEVICE_KEY) ;
     3132    13876    4      READ_CONFIG.BUF_ = VECTOR (CONFIG_RECORD) ;
     3133    13877    4      CALL M$READ (READ_CONFIG) ;
     3134    13878    4      DEVICE$ = ADDR (CONFIG_RECORD) ;
     3135    13879    4      SCT.MODEL = DEVICE$ -> TD$DEV.MODEL ;
     3136    13880    4      RETURN ;
     3137    13881
     3138    13882    4   END GET_MODEL_ID ;
     3139    13883        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:125  
     3140    13884        /*I* NAME:         VALIDATE_DEVICE_TYPE
     3141    13885             AUTHOR:       Scott S. Sheppard
     3142    13886             INTERFACE:    MAP_MPC_DEVICE
     3143    13887             INPUT:        SCT
     3144    13888                           CHANNEL_DEVICE
     3145    13889             OUTPUT:       REASON
     3146    13890             DESCRIPTION:  This procedure determines if the device selected
     3147    13891                           is valid. The first two characters of the channel
     3148    13892                           device are examined to determine if the device is:
     3149    13893                              1. an MPC device
     3150    13894                                    DC - Disk Controller
     3151    13895                                    TC - Tape Controller
     3152    13896                                    UC - Unit Record Controller
     3153    13897                              2. a system console
     3154    13898        */
     3155    13899
     3156    13900    3   VALIDATE_DEVICE_TYPE: PROC (SCT, CHANNEL_DEVICE, REASON) ALTRET ;
     3157    13901
     3158    13902           %SCT ;
     3159    13931    4      DCL CHANNEL_DEVICE   CHAR (8) CALIGNED ;
     3160    13932    4      DCL REASON           UBIN HALF HALIGNED ;
     3161    13933           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:126  
     3162    13934        /* Code */
     3163    13935
     3164    13936    5      DO SELECT (SUBSTR (CHANNEL_DEVICE, 0, 2)) ;
     3165    13937    5         SELECT ('DC', 'TC', 'UC') ;
     3166    13938    5         CALL MAP_MPC_DEVICE (SCT, CHANNEL_DEVICE, REASON) ALTRET (ERROR) ;
     3167    13939    5         SELECT ('SC') ;
     3168    13940    5         IF SCT.FICCDD.DEVICE# = 0
     3169    13941    5         THEN /* Device Code is already valid for a console. */ ;
     3170    13942    6         ELSE DO ;
     3171    13943    6                 REASON = %NOASSIGN# ;
     3172    13944    6                 ALTRETURN ;
     3173    13945    6              END /* ELSE */ ;
     3174    13946    5         SELECT (ELSE) ;
     3175    13947    5      REASON = %INVDEV# ;
     3176    13948    5   ERROR:
     3177    13949    5      ALTRETURN ;
     3178    13950    5      END /* SELECT */ ;
     3179    13951    4      RETURN ;
     3180    13952
     3181    13953        /* END VALIDATE_DEVICE_TYPE */
     3182    13954        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:127  
     3183    13955        /*I* NAME:         MAP_MPC_DEVICE
     3184    13956             AUTHOR:       Scott S. Sheppard
     3185    13957             INTERFACE:    M$READ
     3186    13958             INPUT:        SCT.FICCDD.IOM#
     3187    13959             OUTPUT:       DEVICE_CODE - GCOS 6 bit device code
     3188    13960             DESCRIPTION:  This routine  is called when an  MPC is the device
     3189    13961                           connected  to an  IOM channel.  If the  test is an
     3190    13962                           ITR,  the requested channel  is verified to ensure
     3191    13963                           that it is the boot channel for that MPC.
     3192    13964
     3193    13965                           The MPC  record for the IOM  channel is read.  The
     3194    13966                           key  is entry in  the IOM record  read earlier for
     3195    13967                           that  channel, stored  in CHANNEL_DEVICE.  The MPC
     3196    13968                           record is read into CONFIG_RECORD, and the pointer
     3197    13969                           MPC$  built  to  point  to  it. The ITR allocation
     3198    13970                           check   is  made   first.  The   first  connection
     3199    13971                           specified  in  the  MPC  record  by  convention is
     3200    13972                           always  the  boot  channel  for  the  MPC.   It is
     3201    13973                           verified that the MPC  corresponds to the IOM# and
     3202    13974                           CHANNEL#  for this test  request. For non-bootable
     3203    13975                           MPC channels, the  reason code, (eventually the X2
     3204    13976                           register) is set appropriately.
     3205    13977
     3206    13978                           The  MPC  firmware  types  are  saved in SCT. This
     3207    13979                           information will be used  by TOM$MOLTS in order to
     3208    13980                           decide what type of ITRs to run on that particular
     3209    13981                           MPC.  For  disk and tape MPCs,  only FIRMWARE TYPE
     3210    13982                           is  valid  (reader  punch  and  line  printer  are
     3211    13983                           blank).   For  a  unit  record MPC, FIRMWARE TYPE,
     3212    13984                           LPFW TYPE and RPFW TYPE are valid non-blank names.
     3213    13985        */
     3214    13986        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:128  
     3215    13987    4   MAP_MPC_DEVICE: PROC (SCT, CHANNEL_DEVICE, REASON) ALTRET ;
     3216    13988
     3217    13989           %SCT ;
     3218    14018    5      DCL CHANNEL_DEVICE   CHAR (8) CALIGNED ;
     3219    14019    5      DCL REASON           UBIN HALF HALIGNED ;
     3220    14020    5      DCL 1 MPC_KEY STATIC CALIGNED,
     3221    14021    5            2 SIZE         UBIN BYTE UNAL INIT (8),
     3222    14022    5            2 KEY          CHAR (8) UNAL ;
     3223    14023    5      DCL CONFIG_RECORD    (0:2000) UBIN WORD ALIGNED ;
     3224    14024    5      DCL MPC$             PTR ALIGNED ;
     3225    14025           %TD$MPC ;
     3226    14047           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:129  
     3227    14048        /* Code */
     3228    14049
     3229    14050    5      MPC_KEY.KEY = CHANNEL_DEVICE ;
     3230    14051    5      READ_CONFIG.KEY_ = VECTOR (MPC_KEY) ;
     3231    14052    5      READ_CONFIG.BUF_ = VECTOR (CONFIG_RECORD) ;
     3232    14053    5      CALL M$READ (READ_CONFIG) ;
     3233    14054    5      MPC$ = ADDR (CONFIG_RECORD) ;
     3234    14055
     3235    14056    5      IF SCT.TEST_TYPE = %MPC
     3236    14057    5      THEN IF MPC$ -> TD$MPC.IOCHAN.PRESENCE(0) = '1'B AND
     3237    14058    5                 MPC$ -> TD$MPC.IOCHAN.IOM(0) = SCT.FICCDD.IOM# AND
     3238    14059    5                 MPC$ -> TD$MPC.IOCHAN.LOCHAN(0) = SCT.FICCDD.CHANNEL#
     3239    14060    5         THEN /* CC is a bootable MPC channel. */ ;
     3240    14061    6         ELSE DO ;
     3241    14062    6                 REASON = %NOTBOOT# ;
     3242    14063    6                 ALTRETURN ;
     3243    14064    6              END /* ELSE */ ;
     3244    14065    5      ELSE /* not an ITR --- continue */ ;
     3245    14066
     3246    14067    5      SCT.MPC_MODEL = MPC$ -> TD$MPC.MODEL;
     3247    14068    5      SCT.FIRMWARE.TYPE# = MPC$ -> TD$MPC.FWNAME ;
     3248    14069    5      SCT.FIRMWARE.LP# = MPC$ -> TD$MPC.LPFWNAME ;
     3249    14070    5      SCT.FIRMWARE.RP# = MPC$ -> TD$MPC.CRPFWNAME ;
     3250    14071    5      RETURN ;
     3251    14072
     3252    14073    5   END MAP_MPC_DEVICE ;
     3253    14074    4   END VALIDATE_DEVICE_TYPE ;
     3254    14075        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:130  
     3255    14076        /*I* NAME:         MAP_DEVICE
     3256    14077             AUTHOR:       Scott S. Sheppard
     3257    14078             INTERFACE:    None called.
     3258    14079             INPUT:        SCT.MODEL
     3259    14080                           DCB$
     3260    14081             OUTPUT:       SCT.DEVICE_CODE
     3261    14082                           SCT.TEST_TYPE
     3262    14083                           SCT.FIRMWARE.TYPE#
     3263    14084                           SCT.BIT17
     3264    14085                           SCT.BIT13
     3265    14086                           SCT.BIT12
     3266    14087             DESCRIPTION:  This procedure selects the proper device code
     3267    14088                           based on the model, test type, and/or firmware.
     3268    14089        */
     3269    14090
     3270    14091    3   MAP_DEVICE: PROC (SCT, DCB$) ALTRET ;
     3271    14092
     3272    14093    4      DCL DCB$             PTR ALIGNED ;
     3273    14094
     3274    14095           %SCT ;
     3275    14124           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:131  
     3276    14125        /* Code */
     3277    14126
     3278    14127    4      SCT.BIT17 = '0'B ;
     3279    14128    4      SCT.BIT13 = '0'B ;
     3280    14129    4      SCT.BIT12 = '0'B ;
     3281    14130    5      DO SELECT (SCT.MODEL) ;
     3282    14131    5         SELECT ('CONSOLE') ;
     3283    14132    5         SCT.DEVICE_CODE = %DSCC1 ;
     3284    14133    5         SELECT ('CRU1050') ;
     3285    14134    5         SCT.DEVICE_CODE = %DCR31 ;
     3286    14135    5         SELECT ('CRU0501') ;
     3287    14136    5         SCT.DEVICE_CODE = %DCR31 ;
     3288    14137    5         SCT.BIT17 = '1'B ;
     3289    14138    5         SELECT ('PCU0120') ;
     3290    14139    5         SCT.DEVICE_CODE = %DCP30 ;
     3291    14140    5         SELECT ('PCU0121') ;
     3292    14141    5         SCT.DEVICE_CODE = %DCP31 ;
     3293    14142    5         SELECT ('PRU1200') ;
     3294    14143    5         SCT.DEVICE_CODE = %DPR41 ;
     3295    14144    5         SELECT ('PRU1600') ;
     3296    14145    5         SCT.DEVICE_CODE = %DPR42 ;
     3297    14146    5         SCT.BIT13 = '1'B ;
     3298    14147    5         SELECT ('MTU0600', 'MTU0610', 'MTU0630', 'MTU8200',
     3299    14148    5                 'MTU8205', 'MTU8206', 'MTU8208') ;
     3300    14149    5         SCT.DEVICE_CODE = %DMTC9 ;
     3301    14150    5         SELECT ('MSU0451') ;
     3302    14151    5         SCT.DEVICE_CODE = %DS450 ;
     3303    14152    5         SELECT ('MSU0501') ;
     3304    14153    5         SCT.DEVICE_CODE = %DS509 ;
     3305    14154    5         SELECT ('MSU3380', 'MSU3382');        /* MSU3380 D */
     3306    14155    5         SCT.DEVICE_CODE = %DSA1B;
     3307    14156    5         SELECT ('MSU3381', 'MSU3383') ;       /* MSU3381 E */
     3308    14157    5         SCT.DEVICE_CODE = %DSD1B;
     3309    14158    5         SELECT ('MSU3390', 'MSU3392') ;       /* MSU3390 J */
     3310    14159    5         SCT.DEVICE_CODE = %DSC1B;
     3311    14160    5         SELECT ('MSU3391', 'MSU3393') ;       /* MSU3391 K */
     3312    14161    5         SCT.DEVICE_CODE = %DSK1B;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:132  
     3313    14162    5         SELECT ('MSU8082') ;                  /* MDS-I DEV */
     3314    14163    5         SCT.DEVICE_CODE = %DSM1D;
     3315    14164    5         SELECT ('MSU8092') ;                  /* MDS-II DEV */
     3316    14165    5         SCT.DEVICE_CODE = %DSM2D;
     3317    14166    5         SELECT ('PRU0901', 'PRU0903') ;
     3318    14167    5         SCT.DEVICE_CODE = %DPR41 ;
     3319    14168    5         SCT.BIT17 = '1'B ;
     3320    14169    5         SELECT ('PRU1201', 'PRU1203') ;
     3321    14170    5         SCT.DEVICE_CODE = %DPR42 ;
     3322    14171    5         SCT.BIT17 = '1'B ;
     3323    14172    5         SCT.BIT13 = '1'B ;
     3324    14173    5         SELECT (ELSE) ;
     3325    14174    5      SCT.DEVICE_CODE = 0 ;
     3326    14175    5      END /* SELECT */ ;
     3327    14176
     3328    14177        /* channel 3 MCA request  */
     3329    14178
     3330    14179    4      IF SCT.TEST_TYPE = %RPM
     3331    14180    5      THEN DO;
     3332    14181    5              SCT.DEVICE_CODE = %CHN_3;
     3333    14182    5              SCT.BIT12 = '1'B;
     3334    14183    5           END /* THEN DO */ ;
     3335    14184    4      ELSE /* DO NOTHING */ ;
     3336    14185
     3337    14186        /* For ITR Test, Map firmware type into a device code for GCOS */
     3338    14187    4      IF SCT.TEST_TYPE = %MPC
     3339    14188    5      THEN DO SELECT (SCT.FIRMWARE.TYPE#) ;
     3340    14189    5              SELECT ('TPUR', 'M500', 'M601', 'M610') ;
     3341    14190    5              SCT.DEVICE_CODE = %DMTC9 ;
     3342    14191    5              SELECT ('UCMN', 'URTP') ;
     3343    14192    5              SCT.DEVICE_CODE = %DPR42 ;
     3344    14193    5              SELECT ('M191') ;
     3345    14194    5              SCT.DEVICE_CODE = %DS450 ;
     3346    14195    5              SELECT ('D500', 'MSP8') ;
     3347    14196    5              SCT.DEVICE_CODE = %DS509 ;
     3348    14197    5              SELECT ('NONE') ;
     3349    14198    5              SCT.DEVICE_CODE = %DPR42 ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:133  
     3350    14199    5              SCT.BIT17 = '1'B ;
     3351    14200    5              SELECT ('ICRD');  /* READER/PUNCH */
     3352    14201    5              SCT.DEVICE_CODE = %DPR42 ;
     3353    14202    5              SELECT ('IPR5');  /*PR54 URC */
     3354    14203    5              SCT.DEVICE_CODE = %DPR42;
     3355    14204    5              SCT.BIT17 = '1'B;
     3356    14205    5           END /* SELECT */ ;
     3357    14206    4      ELSE /* Do Nothing */ ;
     3358    14207    4      IF SCT.DEVICE_CODE = 0
     3359    14208    4      THEN ALTRETURN ;
     3360    14209    4      ELSE RETURN ;
     3361    14210
     3362    14211    4   END MAP_DEVICE ;
     3363    14212    3   END GET_DEVICE_CODE ;
     3364    14213        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:134  
     3365    14214        /*I* NAME:         BUILD_TEST_CONTROL_ENTRY
     3366    14215             AUTHOR:       Scott S. Sheppard
     3367    14216             INTERFACE:    None called.
     3368    14217             INPUT:        TCX
     3369    14218                           DEVICE_CODE
     3370    14219                           MME_W1
     3371    14220                           BIT17FLAG
     3372    14221                           BIT13FLAG
     3373    14222                           BIT12FLAG
     3374    14223                           FIRMWARE_TYPE
     3375    14224                           LPFW_TYPE
     3376    14225                           RPFW_TYPE
     3377    14226             OUTPUT:       TOP$TCP(TCX)
     3378    14227             DESCRIPTION:  TCX    has    been    established    earlier    by
     3379    14228                           FIND_VACANT_ENTRY.   The  FICCDD  variable  in the
     3380    14229                           subexec  is saved, and  contains IOM, channel, and
     3381    14230                           device  numbers  for  the  the  test request.  The
     3382    14231                           device code just  determined by GET_DEVICE_CODE is
     3383    14232                           saved.  Using the test type field in FICCDD (which
     3384    14233                           incidentally  is  saved  in  TOP$TCP) the
     3385    14234                           TEST_TYPE  field  is  set,  to either 'PLT', 'ITR'
     3386    14235                           ,'MTR'  or  'MDR'.  The  TT  field in FICCDD is an
     3387    14236                           encoded  BCD character.   Finally, the  address of
     3388    14237                           the  pseudo device  and controller  SCT tables are
     3389    14238                           saved.
     3390    14239
     3391    14240                           Also,  the  firmware  types  which  were gotten in
     3392    14241                           GET_DEVICE_CODE  from  the  T&D configuration file
     3393    14242                           are  now  saved  into  TOP$TCP for use by
     3394    14243                           TOM$MOLTS in  determining what type of  ITR to run
     3395    14244                           against a MPC controller.
     3396    14245        */
     3397    14246        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:135  
     3398    14247    2   BUILD_TEST_CONTROL_ENTRY: PROC (TCX, SCT) ALTRET ;
     3399    14248
     3400    14249    3      DCL TCX             UBIN WORD ALIGNED ;
     3401    14250           %SCT ;
     3402    14279    3      DCL SCT$             PTR ALIGNED ;
     3403    14280    3      DCL 1 SCT_ REDEF SCT$ ALIGNED,
     3404    14281    3            2 ADDR#        UBIN HALF UNAL,
     3405    14282    3            2 *            UBIN HALF UNAL ;
     3406    14283
     3407    14284           /* save flag, iom, channel, and device numbers */
     3408    14285    3      TOP$TCP.FICCDD.IOM#(TCX) = SCT.FICCDD.IOM# ;
     3409    14286    3      TOP$TCP.FICCDD.CHAN#(TCX) = SCT.FICCDD.CHANNEL# ;
     3410    14287    3      TOP$TCP.FICCDD.DEV#(TCX) = SCT.FICCDD.DEVICE# ;
     3411    14288    3      TOP$TCP.FICCDD.FORMAT#(TCX) = SCT.FICCDD.FORMAT# ;
     3412    14289    3      TOP$TCP.FICCDD.FLAG#(TCX) = SCT.FICCDD.FLAG# ;
     3413    14290           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:136  
     3414    14291           /* save test type as a string from the GCOS integer value */
     3415    14292    4      DO CASE (SCT.TEST_TYPE) ;
     3416    14293    4         CASE (%MDC) ;
     3417    14294    4            TOP$TCP.TEST_TYPE(TCX) = 'MDC' ;
     3418    14295    4         CASE (%MDR) ;
     3419    14296    4            TOP$TCP.TEST_TYPE(TCX) = 'MDR' ;
     3420    14297    4         CASE (%MFC) ;
     3421    14298    4            TOP$TCP.TEST_TYPE(TCX) = 'MFC' ;
     3422    14299    4         CASE (%MMT) ;
     3423    14300    4            TOP$TCP.TEST_TYPE(TCX) = 'MTR' ;
     3424    14301    4         CASE (%MPC) ;
     3425    14302    4            TOP$TCP.TEST_TYPE(TCX) = 'ITR' ;
     3426    14303    4         CASE (%MTC) ;
     3427    14304    4            TOP$TCP.TEST_TYPE(TCX) = 'MTC' ;
     3428    14305    4         CASE (%MTG) ;
     3429    14306    4            TOP$TCP.TEST_TYPE(TCX) = 'MTG' ;
     3430    14307    4         CASE (%NIO) ;
     3431    14308    4            TOP$TCP.TEST_TYPE(TCX) = 'NIO' ;
     3432    14309    4         CASE (%POLT) ;
     3433    14310    4            TOP$TCP.TEST_TYPE(TCX) = 'PLT' ;
     3434    14311    4         CASE (%RPM) ;
     3435    14312    4            TOP$TCP.TEST_TYPE(TCX) = 'RPM' ;
     3436    14313    4         CASE (%MDS);
     3437    14314    4            TOP$TCP.TEST_TYPE(TCX) = 'MDS' ;
     3438    14315    4         CASE (%TMD);
     3439    14316    4            TOP$TCP.TEST_TYPE(TCX) = 'TMD' ;
     3440    14317    4         CASE (ELSE) ;
     3441    14318    4            ALTRETURN ;
     3442    14319    4      END /* CASE */ ;
     3443    14320
     3444    14321           /* save device code */
     3445    14322    3      TOP$TCP.DEVICE_CODE(TCX) = SCT.DEVICE_CODE ;
     3446    14323
     3447    14324           /* save SCT addresses for controller and device */
     3448    14325    3      SCT$ = ADDR (TOP$SCT.DV(TCX)) ;
     3449    14326    3      TOP$TCP.ADR.SCT(TCX) = SCT_.ADDR# ;
     3450    14327    3      SCT$ = ADDR (TOP$SCT.CN(TCX)) ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:137  
     3451    14328    3      TOP$TCP.ADR.CSCT(TCX) = SCT_.ADDR# ;
     3452    14329           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:138  
     3453    14330           /* save special bits of the SCT */
     3454    14331    3      TOP$TCP.SCT.BIT12(TCX) = SCT.BIT12 ;
     3455    14332    3      TOP$TCP.SCT.BIT13(TCX) = SCT.BIT13 ;
     3456    14333    3      TOP$TCP.SCT.BIT17(TCX) = SCT.BIT17 ;
     3457    14334
     3458    14335           /* save Firmware types for controller, printer, and reader-punch */
     3459    14336    3      TOP$TCP.FIRMWARE.TYPE(TCX) = SCT.FIRMWARE.TYPE# ;
     3460    14337    3      TOP$TCP.FIRMWARE.LP_TYPE(TCX) = SCT.FIRMWARE.LP# ;
     3461    14338    3      TOP$TCP.FIRMWARE.RP_TYPE(TCX) = SCT.FIRMWARE.RP# ;
     3462    14339
     3463    14340           /* Save MPC and Device Model names */
     3464    14341    3      TOP$TCP.DEVICE_MODEL (TCX) = SCT.MODEL;
     3465    14342    3      TOP$TCP.MPC_MODEL (TCX) = SCT.MPC_MODEL;
     3466    14343    3      RETURN ;
     3467    14344
     3468    14345    3   END BUILD_TEST_CONTROL_ENTRY ;
     3469    14346    2   END TOP$MME_SCTCMP ;
     3470    14347        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:139  
     3471    14348        /*I* NAME:         TOP$MME_TESTIO
     3472    14349             INTERFACE:    FRAME_DATA_AREA
     3473    14350                           GET_SCT_ADR
     3474    14351                           MATCH_SCT_ADR
     3475    14352                           COPY_IO_ENTRY
     3476    14353                           SET_TDIO_FPT
     3477    14354                           BUILD_DCW_LIST
     3478    14355                           ISSUE_IO
     3479    14356                           SET_RETURN_VALUES
     3480    14357             INPUT:        MME_W1 (bits 0-17) = address of 11 word GCOS I/O entry
     3481    14358             OUTPUT:       Q - channel lostit time
     3482    14359                           A - time of day, in 1/64 milliseconds since 12:00 am
     3483    14360                           X4 - fake address for MME HUNGTM
     3484    14361                           RETURN_DELTA - 5 = normal return
     3485    14362             DESCRIPTION:  MME TESTIO is the main MME for POLTS and MOLTS
     3486    14363                           for doing test  I/O operations to peripherals.
     3487    14364                           It is very  complex in the CP-6 implementation
     3488    14365                           because  TOLTS  must  do  a  lot  of what GCOS
     3489    14366                           normally does.  Thus the documentation will be
     3490    14367                           quite  complex,  and  lengthly  at times.  The
     3491    14368                           author will also take the liberty at this time
     3492    14369                           to document some  little known facts about the
     3493    14370                           operation  of MDRs  and ITRs,  which had to be
     3494    14371                           researched   for   CP-6,   and   will  now  be
     3495    14372                           documented for posterity.
     3496    14373
     3497    14374                           Sections of documentation which follow:
     3498    14375
     3499    14376                           a.  Test I/O in CP-6 overview, Event handling,
     3500    14377                               processing I/O completions and Courtesy Calls.
     3501    14378                           b.  ITRs and MDRs an overview
     3502    14379                           c.  Hardware actions which are used by ITRs and MDRs.
     3503    14380                           d.  ITR operation in CP-6.
     3504    14381                           e.  MDR operation in CP-6.
     3505    14382                           f.  Program documentation for TOP$MME_TESTIO.
     3506    14383
     3507    14384
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:140  
     3508    14385                           a.  TEST I/O IN CP-6 an overview.
     3509    14386
     3510    14387                           All  test I/O  to peripherals  in CP-6 is done
     3511    14388                           through  a special call  to the CP-6 operating
     3512    14389                           system.  M$TDIO is  provided expressly for the
     3513    14390                           use  of  a  T&D  user,  and is documented more
     3514    14391                           fully  in the CP-6  Monitor Services Reference
     3515    14392                           Manual.   The  casual  reader  is  directed to
     3516    14393                           study section 9 before proceeding here.
     3517    14394
     3518    14395                           POLTS and MOLTS do a MME TESTIO when an I/O is
     3519    14396                           to  done to  a peripheral,  passing an 11 word
     3520    14397                           I/O  entry which corresponds  to the I/O entry
     3521    14398                           for   GCOS  III.    This  routine   takes  the
     3522    14399                           pertinent  information from the  I/O entry and
     3523    14400                           builds the FPT for M$TDIO for CP-6.  A call to
     3524    14401                           M$TDIO will issue the I/O.  In most cases, the
     3525    14402                           I/O is "no wait"  I/O in the CP-6 terminology.
     3526    14403                           That  is, control  is returned  immediately to
     3527    14404                           the calling program,  before the I/O operation
     3528    14405                           completes.   (This allows  the calling program
     3529    14406                           to  do  other  things.)   POLTS and MOLTS will
     3530    14407                           normally have  other things to do,  and in any
     3531    14408                           case,  have  their  own  internal  dispatchers
     3532    14409                           which  govern  their  activity.   When the I/O
     3533    14410                           completes, CP-6 pays  an "Event" to TOLTS.  An
     3534    14411                           Event  is the equivalent  of the GCOS Courtesy
     3535    14412                           Call.      The     TOLTS     Event    Handler,
     3536    14413                           TOE$EVENT_HANDLER  was  established  at  TOLTS
     3537    14414                           initialization time.  It is now entered with a
     3538    14415                           frame  on  the  TCB  frame,  which contains an
     3539    14416                           Event ID, a unique indentifier of the I/O just
     3540    14417                           completing,  and status.  The  Event ID allows
     3541    14418                           identification  of   not  only  which  subexec
     3542    14419                           POLTS,MOLTS,COLTS)  issued  the  I/O, but also
     3543    14420                           which  of eight  test pages  in was  for.  The
     3544    14421                           Event  Handler  calls  the  TOLTS  dispatcher,
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:141  
     3545    14422                           TOD$DISPATCHER,  to  queue  the I/O completion
     3546    14423                           for  servicing  at  a  later  time.   (This is
     3547    14424                           necessary  in order  to avoid  race conditions
     3548    14425                           within  the software.   First of  all, none of
     3549    14426                           the  Courtesy Call  routines for  the subexecs
     3550    14427                           are  reentrant.    Secondly,  neither  is  the
     3551    14428                           current implementation of  MME GEENDC in CP-6.
     3552    14429                           So  the dispatcher  queue is  serviced only at
     3553    14430                           specific  times  when  it  is  known that race
     3554    14431                           conditions will not  occur.  This servicing is
     3555    14432                           triggered   from  the   TOLTS  Fault  Handler,
     3556    14433                           TOF$FAULTS.)
     3557    14434
     3558    14435                           When an I/O completion  is to be serviced, the
     3559    14436                           dispatcher  will call  an entry  point in this
     3560    14437                           main   main   module,   TOP$POLTS_IO,  passing
     3561    14438                           through  memory 2  variables, TOP$EVENT_ID and
     3562    14439                           TOP$STATUS.     (These   aren't    passed   as
     3563    14440                           parameters    because   of    the   structural
     3564    14441                           restrictions of PL6.  Granted, a kludge here.)
     3565    14442                           The  entry point in  turn calls the completion
     3566    14443                           processing    routine,   TOP$TIO_DONE,   which
     3567    14444                           returns the staus of  the I/O operation to the
     3568    14445                           test page  and pays a Courtesy  Call to notify
     3569    14446                           the subexec of the  completion.  It is then up
     3570    14447                           to  the subexec  to determine  whether the I/O
     3571    14448                           was good or bad.
     3572    14449
     3573    14450                           The  above  sequence  of  operations  is quite
     3574    14451                           simple  and  straightforward  for  POLTS  I/O.
     3575    14452                           However,  ITR and MDR  I/O complicate things a
     3576    14453                           bit,  especially in  the area  of building DCW
     3577    14454                           lists and handling  I/O completions and status
     3578    14455                           returns.   In order to  more easily understand
     3579    14456                           the  CP-6  implementation  in  these areas, we
     3580    14457                           should  first  understand  how  ITRs  and MDRs
     3581    14458                           really work.
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:142  
     3582    14459
     3583    14460
     3584    14461                           b.  ITRs and MDRs an overview
     3585    14462
     3586    14463                           ITRs (Isolation Test Routines) are a series of
     3587    14464                           MPC  firmware  overlays  which  test different
     3588    14465                           portions of a MPC.   They require that the T&D
     3589    14466                           program  allocate  the  entire  MPC to itself,
     3590    14467                           thus  precluding any  user activity  while the
     3591    14468                           testing  is going  on.  Honeywell  MPCs have a
     3592    14469                           great  deal  of  hardware  features built into
     3593    14470                           them to support both ITR and MDR operation, as
     3594    14471                           will  be  discussed   in  section  c  of  this
     3595    14472                           documentation.  In general, for an ITR to run,
     3596    14473                           the  MPC  must   be  allocated,  the  firmware
     3597    14474                           overlays  run, and the  MPC either (1) stopped
     3598    14475                           on an error condition, or (2) the MPC firmware
     3599    14476                           rebooted and the MPC returned to operation.
     3600    14477
     3601    14478                           MDRs(Microprogrammed  Device  Routines)  are a
     3602    14479                           series  of  MPC  firmware  segments which test
     3603    14480                           peripherals connected to the MPC.  They do not
     3604    14481                           require that the MPC be deallocated, and thus,
     3605    14482                           user activity can continue while testing is in
     3606    14483                           progress.  But there is a very subtle point to
     3607    14484                           be  understood here.  While  user activity can
     3608    14485                           continue while MDR testing is in progress, the
     3609    14486                           MPC  is  actually  suspended  for  very  brief
     3610    14487                           periods of time while testing is done.
     3611    14488
     3612    14489
     3613    14490                           c.  HARDWARE SUPPORT OF ITRS AND MDRS
     3614    14491
     3615    14492                           ITRs and MDRs require following support on the
     3616    14493                           part of the hardware and the operating system,
     3617    14494                           in this case CP-6 and TOLTS.
     3618    14495
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:143  
     3619    14496                           (1) "SUSPEND" MPC command.
     3620    14497                               Before any ITR testing is done, and before each
     3621    14498                               MDR overlay is sent to the MPC, a suspend
     3622    14499                               command is issued to notify the operating
     3623    14500                               system that the MPC is about to be suspended,
     3624    14501                               and that is should not issue any new I/O until
     3625    14502                               it is released.  This feature is especially
     3626    14503                               useful in multi computer configurations where
     3627    14504                               2 or more computers may be connected to the
     3628    14505                               same MPC.
     3629    14506
     3630    14507                               A suspend command is a special controller
     3631    14508                               command which is issued to device 0.  There is
     3632    14509                               no current hardware restriction as to what the
     3633    14510                               channel the suspend command must be issued over.
     3634    14511
     3635    14512                               The MPC will generate a special interrupt on
     3636    14513                               channel 0 of every PSI that is connected to it,
     3637    14514                               notifying all systems that it will be suspended.
     3638    14515                               It then waits for all I/O on the MPC to terminate.
     3639    14516                               When they do, it returns a terminate interrupt
     3640    14517                               to the system, indicating the MPC is suspended.
     3641    14518                               It then puts itself into a mode where it will
     3642    14519                               (a) ignore all other PSIs, (b) accept commands
     3643    14520                               only over the channel on the PSI that issued
     3644    14521                               the suspend command.
     3645    14522
     3646    14523                           (2) "IPCW" command.
     3647    14524                               The IPCW (Initialize PCW) command results in a
     3648    14525                               DC static initialize of the MPC, and is used
     3649    14526                               prior to ITR testing to put the MPC in a known
     3650    14527                               state.  Once the MPC is suspended, software
     3651    14528                               issues the IPCW command which results in a
     3652    14529                               RSO(Reset Out) command being issued to the MPC.
     3653    14530                               The MPC drops its OPI(Operational In) line,
     3654    14531                               executes the BLT(Basic Logic Test) in ROM
     3655    14532                               to verify the basic integrity of the MPC.  If
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:144  
     3656    14533                               the BLT runs good, it raises the OPI line, and
     3657    14534                               goes into a special wait loop, waiting for
     3658    14535                               either a Write Control Store command or a
     3659    14536                               Branch to Device Boot Routine command, and will
     3660    14537                               accept it only on the boot channel for the MPC
     3661    14538                               which are specified via swichtes on the
     3662    14539                               maintenance panel.  Any commands over other PSIs
     3663    14540                               will be ignored.  (In the newer controllers, the
     3664    14541                               boot commands can come over any channel.)  It
     3665    14542                               is at this point that ITR testing can commence.
     3666    14543
     3667    14544                               If BLT fails, it will stop the MPC with an error
     3668    14545                               indication on the maintenance panel.  Also, it will
     3669    14546                               not raise OPI.  (Software will detect this and
     3670    14547                               report that the BLT failed.  There is no explicit
     3671    14548                               indication to the system that the BLT failed.)
     3672    14549
     3673    14550                           (3) Write Control Store command
     3674    14551                               An ITR overlay is written to the MPC using the
     3675    14552                               Write Control Store command.  An overlay is
     3676    14553                               read into the second Control Store segment,
     3677    14554                               addresses 512-1023 by the BLT.  The BLT will
     3678    14555                               return terminate ready status if there is no
     3679    14556                               checksum error, or non ready status if there
     3680    14557                               is.  The BLT will then transfer control to hex
     3681    14558                               address 202 and turn control of the MPC over to
     3682    14559                               to the ITR.  The ITR will return a special
     3683    14560                               interrupt when it completes and finds nothing
     3684    14561                               wrong.  It will simply stop if it finds a
     3685    14562                               problem, with an error indication on the
     3686    14563                               maintenance panel.
     3687    14564
     3688    14565                               If this is the first ITR overlay, and the BLT
     3689    14566                               failed, the WCS command should get rejected by
     3690    14567                               the IOM or MPC, and the software should surmise
     3691    14568                               that the BLT failed.  It there are other MPC-IOM
     3692    14569                               problems, the software will get back non
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:145  
     3693    14570                               ready status and assume something is wrong.
     3694    14571                               Finally, if the special interrupt never occurs,
     3695    14572                               the software should also surmise that the ITR
     3696    14573                               failed, and take appropriate action.
     3697    14574
     3698    14575                           (4) RELEASE command
     3699    14576                               The Release command performs the opposite function
     3700    14577                               of the Suspend command.  It sends out a special
     3701    14578                               interrupt on channel 0 of every connected PSI
     3702    14579                               indicating that the MPC will be put back into
     3703    14580                               operation, and sends back a terminate interrupt
     3704    14581                               indicating the MPC is ready to go again.
     3705    14582                           (5) EXECUTE MDR command
     3706    14583                               Both tape/disk and unit record MPCs perform MDRs
     3707    14584                               differently, due to diferent firmware restrictions.
     3708    14585                               Basically, for disk and tape, a MDR overlay is
     3709    14586                               written into MPC Main Memory first, and then
     3710    14587                               an Execute MDR command issued.  The MDR overlay
     3711    14588                               is first copied into the second Control Store
     3712    14589                               segment and then executed.  The MPC must be
     3713    14590                               suspended to preclude all user activity
     3714    14591                               temporarily because disk and tape MDRs need
     3715    14592                               exclusive use of the MPC for real time timing
     3716    14593                               tests, and they cannot share segment 2 with
     3717    14594                               other users while they are running.  The MPC
     3718    14595                               is released once the MDR is done.
     3719    14596
     3720    14597                               Basically, for unit record MDRs, a overlay is
     3721    14598                               also written into MPC Main Memory first, and
     3722    14599                               then an Execute MDR command issued.  The
     3723    14600                               overlay is then copied into the second segment
     3724    14601                               of Control Store and executed.  The MPC need not
     3725    14602                               be explicitly suspend and released ;  however,
     3726    14603                               user activity is held up by the firmware while
     3727    14604                               a MDR is running.  Obviously, there is a limit
     3728    14605                               on how long a unit record MDR can run.
     3729    14606
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:146  
     3730    14607
     3731    14608                           d.  ITR OPERATION IN CP-6
     3732    14609
     3733    14610                           In  order  to  run  an  ITR,  the  MPC must be
     3734    14611                           partitioned from the system using SYSCON.  The
     3735    14612                           implications of  this requirement are obvious.
     3736    14613                           However,  it  greatly  simplifies  the  job of
     3737    14614                           peripheral   allocation   when   an   ITR   is
     3738    14615                           requested.   The  allocation  has already been
     3739    14616                           done by an operator on site.
     3740    14617
     3741    14618                           The  ITR  driver  running  under  MOLTS does a
     3742    14619                           suspend  command to suspend  the MPC.  In CP-6
     3743    14620                           this poses no problem because by this point no
     3744    14621                           one else  is running on the  MPC.  The special
     3745    14622                           interrupt from the  command is ignored at this
     3746    14623                           point by TOLTS.  (We will discuss very shortly
     3747    14624                           how  special  interrupts  are  handled for ITR
     3748    14625                           I/O.)    The  driver  than   issues  the  IPCW
     3749    14626                           command, using a  specially defined MME.  This
     3750    14627                           command initializes  the MPC and puts  it in a
     3751    14628                           state ready for  testing.  Finally, the driver
     3752    14629                           will issue the sequence of Write Control Store
     3753    14630                           commands until they are  all done or one times
     3754    14631                           out.
     3755    14632
     3756    14633                           Now comes  the hard part.  In  the GCOS world,
     3757    14634                           IOS  does a  great deal  of kludging around to
     3758    14635                           make   thins  simple   for  the   ITR  driver.
     3759    14636                           However, in CP-6, all that kludging around had
     3760    14637                           to be done by TOLTS because CP-6 would have no
     3761    14638                           part  of  it.   The  key  is understanding the
     3762    14639                           handling  of special  interrupts on  the Write
     3763    14640                           Control Store  commands.  If bit 29  in word 7
     3764    14641                           of  the I/O  entry is  set on  a Write Control
     3765    14642                           Store  command(specified   in  word  4),  both
     3766    14643                           terminate  and special interrupts  for the I/O
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:147  
     3767    14644                           must be handled  differently.  The rules which
     3768    14645                           IOS  follows,  and  thus  must be simulated by
     3769    14646                           TOLTS are:
     3770    14647
     3771    14648                           (1) If the terminate interrupt returns ready status,
     3772    14649                               ignore it , and return the special interrupt to
     3773    14650                               MOLTS with the special interrupt status.
     3774    14651                           (2) If the terminate interrupt returns non ready status,
     3775    14652                               return it to MOLTS and ignore the special if it
     3776    14653                               comes.
     3777    14654                           (3) If bit 29 is zero, always return the terminate
     3778    14655                               status and ignore any specials.
     3779    14656                               (This is why there is no special returned to MOLTS
     3780    14657                               on the suspend command, as mentioned above.)
     3781    14658
     3782    14659                           In  CP-6,  the  FPT  for  M$TDIO  is set up to
     3783    14660                           return  all In  CP-6, the  FPT for M$TDOPEN is
     3784    14661                           set up to  return all special interrupts, with
     3785    14662                           a   unique  Event  ID.    The  I/O  completion
     3786    14663                           processing  routine is smart  enough, with the
     3787    14664                           aid of some flags  set when the I/O is issued,
     3788    14665                           to  figure  out  which  interrupts  to return.
     3789    14666                           More on this in that routine.
     3790    14667
     3791    14668                           The next problem.   CP-6 will timeout only the
     3792    14669                           terminate interrupts on an I/O.  GCOS IOS also
     3793    14670                           times out  the specials if bit  29 is set.  So
     3794    14671                           this   must   be   done   by   TOLTS.   It  is
     3795    14672                           accomplished  by  returning  a  channel lostit
     3796    14673                           time  of  0  seconds  on  the  return from MME
     3797    14674                           TESTIO.   MOLTS  then  sets  its  own internal
     3798    14675                           clock to time out in 1 minute.  If it does, it
     3799    14676                           does  a  MME  HUNGTM.   CP-6 TOLTS will assume
     3800    14677                           that a special interrupt  timed out if it sees
     3801    14678                           the  MME  HUNGTM  while   an  ITR  I/O  is  in
     3802    14679                           progress,  and will simulate  a lost interrupt
     3803    14680                           and send it back to MOLTS.  (See TPOMME_HUNGTM
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:148  
     3804    14681                           documentation for more detail.)
     3805    14682
     3806    14683                           In   the   end,   if   the  ITRs  run  through
     3807    14684                           successfully,  CP-6 will  automatically reboot
     3808    14685                           the  firmware in  the MPC,  simplfying matters
     3809    14686                           greatly.
     3810    14687
     3811    14688                           MDR OPERATION IN CP-6
     3812    14689
     3813    14690                           MDRs do not require as much accomodation as do
     3814    14691                           ITRs on the part of TOLTS.  For the most part,
     3815    14692                           they look like  normal test I/O, not requiring
     3816    14693                           any   special   handling   of   interrupts  or
     3817    14694                           anything.  The  biggest problem is translating
     3818    14695                           the  GCOS  I/O  entry  format  into  something
     3819    14696                           useful for CP-6.  The MDR driver running under
     3820    14697                           MOLTS sends up sometimes long strings of IDCWs
     3821    14698                           and DCWs which define what I/O it wants to do.
     3822    14699                           It  will  be  explained  later  how  the  many
     3823    14700                           different formats need to be translated.
     3824    14701
     3825    14702                           PROGRAM DOCUMENTATION
     3826    14703
     3827    14704                           The subroutine FRAME_DATA_AREA builds a vector
     3828    14705                           around the  entire ISR and stores  it into the
     3829    14706                           FPT  for  M$TDIO,  TDIO_FPT.DATA_.  By framing
     3830    14707                           the the entire ISR,  none of the DCW addresses
     3831    14708                           generated by the subexecs need to be adjusted.
     3832    14709                           The  I/O is  done in  NSA mode,  and there are
     3833    14710                           other restrictions, and  they should be looked
     3834    14711                           up in the IOM EPS-1 if necessary.
     3835    14712
     3836    14713                           GET_SCT_ADR  fetches the  SCT address  for the
     3837    14714                           test   page   from    the   I/O   entry,   and
     3838    14715                           MATCH_SCT_ADR establishes  TCX, the index into
     3839    14716                           TOP$TCP.  COPY_IO_ENTRY saves a copy of the 11
     3840    14717                           word I/O  entry in TOP$TCP for  use later when
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:149  
     3841    14718                           status is  to be returned and  a Courtesy Call
     3842    14719                           is to  be paid.  SET_TDIO_FPT sets  up all the
     3843    14720                           values in  the FPT that are  required for this
     3844    14721                           I/O.   BUILD_DCWLIST takes  the information in
     3845    14722                           the  I/O entry and  builds the actual hardware
     3846    14723                           DCW  list.  The  count of  outstanding no wait
     3847    14724                           I/O  is  incremented  and  M$TDIO is called to
     3848    14725                           actually    issue     the    I/O.     Finally,
     3849    14726                           SET_RETURN_VALUES  sets up  return values that
     3850    14727                           the subexecs are expecting.
     3851    14728
     3852    14729                           On completion of the  I/O, CP-6 will enter the
     3853    14730                           Event  Handler which will  take it from there.
     3854    14731        */
     3855    14732        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:150  
     3856    14733    1   TOP$MME_TESTIO: PROC (MME_W1,MME_W2,MME_W3,MME_W4,A,Q,X4,RETURN_DELTA) ;
     3857    14734
     3858    14735    2      DCL 1 MME_W1 ALIGNED,
     3859    14736    2            2 ADDR# UBIN (18) UNAL,
     3860    14737    2            2 *     UBIN (18) UNAL ;
     3861    14738    2      DCL MME_W2       UBIN WORD ALIGNED ;
     3862    14739    2      DCL MME_W3       UBIN WORD ALIGNED ;
     3863    14740    2      DCL MME_W4       UBIN WORD ALIGNED ;
     3864    14741    2      DCL A            UBIN WORD ALIGNED ;
     3865    14742    2      DCL Q            UBIN WORD ALIGNED ;
     3866    14743    2      DCL X4           UBIN HALF HALIGNED ;
     3867    14744    2      DCL RETURN_DELTA SBIN HALF HALIGNED ;
     3868    14745    2      DCL DUMMY        BIT (72) STATIC DALIGNED ;
     3869    14746    2      DCL DCWLIST_BFR  (0:7) CHAR (%(DCWLIST_SIZE * 4)) STATIC ALIGNED ;
     3870    14747    2      DCL TCX          UBIN WORD ALIGNED ;
     3871    14748    2      DCL NEW_SCT_ADR  UBIN HALF HALIGNED ;
     3872    14749
     3873    14750        /* Code */
     3874    14751
     3875    14752    2      CALL FRAME_DATA_AREA ;
     3876    14753    2      CALL GET_SCT_ADR (MME_W1.ADDR#, NEW_SCT_ADR) ;
     3877    14754    2      CALL MATCH_SCT_ADR (NEW_SCT_ADR, TCX) ;
     3878    14755    2      CALL COPY_IO_ENTRY (MME_W1.ADDR#, TCX) ;
     3879    14756    2      CALL SET_TDIO_FPT (TCX) ;
     3880    14757    2      CALL BUILD_DCW_LIST (TCX) ;
     3881    14758    2      CALL ISSUE_IO (TCX) ;
     3882    14759    2      CALL SET_RETURN_VALUES (TCX, Q, A, X4, RETURN_DELTA) ;
     3883    14760    2      RETURN ;
     3884    14761
     3885    14762        /*END TOP$MME_TESTIO ;*/
     3886    14763        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:151  
     3887    14764        /*I* NAME:         FRAME_DATA_AREA
     3888    14765             INTERFACE:    None called.
     3889    14766             INPUT:        B$JIT.TDP - top dynamic page
     3890    14767             OUTPUT:       TDIO_FPT.DATA_ = vector framing entire ISR
     3891    14768             DESCRIPTION:  Uses the static data variable DATA_VECTOR which
     3892    14769                           has most of the fields initialized to their
     3893    14770                           proper values.  The idea is to generate a vector
     3894    14771                           which will frame the entire ISR for NSA mode I/O.
     3895    14772                           The only thing missing from the vector is the
     3896    14773                           bounds field which is determined using the
     3897    14774                           JIT variable TDP.  It contains the next page
     3898    14775                           number available to the program, relative to the
     3899    14776                           working space base.  Subtracting 64 from that number
     3900    14777                           yields a page number relative to the ISR base.
     3901    14778                           Multiplying that page number by 1024 and 4 yields a
     3902    14779                           bounds in bytes which is stored into the vector, which
     3903    14780                           in turn is stored into the FPT.
     3904    14781        */
     3905    14782        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:152  
     3906    14783    2   FRAME_DATA_AREA: PROC ;
     3907    14784
     3908    14785    3      DCL 1 DATA_VECTOR STATIC DALIGNED,
     3909    14786    3            2 SIZE#    UBIN (20) UNAL,
     3910    14787    3            2 FLAGS#   BIT (9) UNAL INIT ('777'O),
     3911    14788    3            2 V#       BIT (2) UNAL INIT ('01'B),
     3912    14789    3            2 *        BIT (5) UNAL,
     3913    14790    3            2 BASE#    UBIN (20) UNAL INIT (0),
     3914    14791    3            2 *        BIT (4) UNAL INIT ('0'B),
     3915    14792    3            2 SEGID#   UBIN (12) UNAL INIT (%IS_SEGID) ;
     3916    14793    3      DCL DATA_V REDEF DATA_VECTOR BIT (72) DALIGNED ;
     3917    14794    3      DCL NEXT_PAGE_AVAIL UBIN (20) ALIGNED ;
     3918    14795
     3919    14796        /* Code */
     3920    14797
     3921    14798           /* Convert top dynamic page address to words relative to the ISR */
     3922    14799    3      NEXT_PAGE_AVAIL = (B$JIT$ -> B$JIT.TDP - 64) * 1024 * 4 ;
     3923    14800    3      DATA_VECTOR.SIZE# = NEXT_PAGE_AVAIL - 1 ;
     3924    14801    3      TDIO_FPT.DATA_ = DATA_V ;
     3925    14802    3      RETURN ;
     3926    14803
     3927    14804    3   END FRAME_DATA_AREA ;
     3928    14805        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:153  
     3929    14806        /*I* NAME:         GET_SCT_ADR
     3930    14807             INTERFACE:    PINCRW
     3931    14808             INPUT:        IO_ENTRY_ADR - address of the I/O entry
     3932    14809             OUTPUT:       NEW_SCT_ADR = SCT address from I/O entry
     3933    14810             DESCRIPTION:  Merely fetches the SCT address for this test page
     3934    14811                           from the I/O entry, word 2 and stores it
     3935    14812                           NEW_SCT_ADR.
     3936    14813        */
     3937    14814
     3938    14815    2   GET_SCT_ADR: PROC (IO_ENTRY_ADR, NEW_SCT_ADR) ;
     3939    14816
     3940    14817    3      DCL IO_ENTRY_ADR  UBIN HALF HALIGNED ;
     3941    14818    3      DCL NEW_SCT_ADR   UBIN HALF HALIGNED ;
     3942    14819    3      DCL POLTS_IO$     PTR ALIGNED ;
     3943    14820    3      DCL 1 IO_ENTRY BASED ALIGNED,
     3944    14821    3            2 *       (0:1) UBIN (36) UNAL,
     3945    14822    3            2 W2,
     3946    14823    3              3 *        UBIN (3) UNAL,
     3947    14824    3              3 SCT_ADR# UBIN (15) UNAL,
     3948    14825    3              3 *        UBIN (18) UNAL,
     3949    14826    3            2 *       (0:7) UBIN (36) UNAL ;
     3950    14827
     3951    14828        /* Code */
     3952    14829
     3953    14830    3      POLTS_IO$ = PINCRW (IS$, IO_ENTRY_ADR) ;
     3954    14831    3      NEW_SCT_ADR = POLTS_IO$ -> IO_ENTRY.W2.SCT_ADR# ;
     3955    14832    3      RETURN ;
     3956    14833
     3957    14834    3   END GET_SCT_ADR ;
     3958    14835        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:154  
     3959    14836        /*I* NAME:         COPY_IO_ENTRY
     3960    14837             INTERFACE:    ADDR function
     3961    14838             INPUT:        IO_ENTRY_ADR - address of the I/O entry
     3962    14839                           TCX - test control index
     3963    14840             OUTPUT:       IO_ENTRY(TCX) = 11 word I/O entry in TOLTS
     3964    14841             DESCRIPTION:  Saves the 11 word I/O entry passed from the
     3965    14842                           Subexecutive in the corresponding slot  for
     3966    14843                           the test request.
     3967    14844        */
     3968    14845
     3969    14846    2   COPY_IO_ENTRY: PROC (IO_ENTRY_ADR, TCX) ;
     3970    14847
     3971    14848    3      DCL IO_ENTRY_ADR UBIN HALF HALIGNED ;
     3972    14849    3      DCL TCX          UBIN WORD ALIGNED ;
     3973    14850    3      DCL POLTS_IO$    PTR ALIGNED ;
     3974    14851    3      DCL IO_ENTRY$    PTR ALIGNED ;
     3975    14852    3      DCL IO_ENTRY_WORDS (0:10) UBIN WORD BASED ALIGNED ;
     3976    14853
     3977    14854        /* Code */
     3978    14855
     3979    14856    3      POLTS_IO$ = PINCRW (IS$, IO_ENTRY_ADR) ;
     3980    14857    3      IO_ENTRY$ = ADDR (IO_ENTRY(TCX)) ;
     3981    14858    3      IO_ENTRY$ -> IO_ENTRY_WORDS = POLTS_IO$ -> IO_ENTRY_WORDS ;
     3982    14859    3      TOP$TCP.ADR.IOENTRY(TCX) = IO_ENTRY_ADR ;
     3983    14860    3      RETURN ;
     3984    14861
     3985    14862    3   END COPY_IO_ENTRY ;
     3986    14863        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:155  
     3987    14864        /*I* NAME:         SET_TDIO_FPT
     3988    14865             INTERFACE:    VECTOR function
     3989    14866             INPUT:        TOP$TCP.DCB#(TCX)
     3990    14867                           TOP$TCP.TEST_TYPE(TCX)
     3991    14868             OUTPUT:       TDIO_FPT all set to go.
     3992    14869             DESCRIPTION:  TDIO_FPT.DCWLIST_ = vector around DCWLIST for the
     3993    14870                           I/O for the test page. DCWLIST_BFR is an array of
     3994    14871                           8 separate DCW Lists, 1 per possible test page.
     3995    14872
     3996    14873                           TDIO_FPT.V.DCB# = DCB number for the page, fetched
     3997    14874                           from the test control table, TOP$TCP.
     3998    14875
     3999    14876                           TDIO_FPT.V.WAIT# = set for no wait I/O.
     4000    14877
     4001    14878                           TDIO_FPT.V.PCW# = set to a required constant for
     4002    14879                           MPC I/O. (If the day comes when console testing
     4003    14880                           on a direct connect channel is required, there
     4004    14881                           is a provision later on in MME TESTIO for building
     4005    14882                           the required PCW and setting it in the FPT,
     4006    14883                           overlaying the value set here.
     4007    14884
     4008    14885                           TDIO_FPT.V.ALTPATH = none specified
     4009    14886
     4010    14887                           TDIO_FPT.V.EVENT# = set to a unique Event ID for
     4011    14888                           test I/O, taking into account I.  This will allow
     4012    14889                           identification of which test page I/O completes
     4013    14890                           later.  Presently, all normal POLTS and MOLTS test
     4014    14891                           I/O will use the same Event IDs, based on the
     4015    14892                           constant TIO_EVENT_BASE.  It is defined in
     4016    14893                           the %INCLUDE file TOT_TOLTS_M.
     4017    14894
     4018    14895                           TDIO_FPT.V.TIMEOUT# = 30-35 seconds for ITR I/O
     4019    14896                                               = CP6 default for all others.
     4020    14897                           (The ITR timeout is chosen to be longer than the
     4021    14898                            longest known ITR test.  The CP-6 default timeout
     4022    14899                            is used for all other IOs.)
     4023    14900        */
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:156  
     4024    14901
     4025    14902    2   SET_TDIO_FPT: PROC (TCX) ;
     4026    14903
     4027    14904    3      DCL TCX UBIN WORD ALIGNED ;
     4028    14905
     4029    14906        /* Code */
     4030    14907
     4031    14908    3      TOP$TCP.IO.ISSUED(TCX) = %FALSE ;
     4032    14909    3      TOP$TCP.IO.DONE(TCX) = %FALSE ;
     4033    14910    3      TOP$TCP.IO.CC_PAID(TCX) = %FALSE ;
     4034    14911    3      TDIO_FPT.DCWLIST_ = VECTOR (DCWLIST_BFR(TCX)) ;
     4035    14912    3      TDIO_FPT.V.DCB# = TOP$TCP.DCB#(TCX) ;
     4036    14913    3      TDIO_FPT.V.WAIT# = %NO# ;
     4037    14914    3      TDIO_FPT.V.PCW# = '000000700000'O ;
     4038    14915    3      TDIO_FPT.V.ALTPATH = '0'B ;
     4039    14916    3      TDIO_FPT.V.EVENT# = %TIO_EVENT_BASE + TCX ;
     4040    14917    3      IF TOP$TCP.TEST_TYPE(TCX) = 'ITR'
     4041    14918    3      THEN TDIO_FPT.V.TIMEOUT# = 7 ;  /* #36007 */
     4042    14919    3      ELSE TDIO_FPT.V.TIMEOUT# = 0 ;
     4043    14920    3      RETURN ;
     4044    14921
     4045    14922    3   END SET_TDIO_FPT ;
     4046    14923        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:157  
     4047    14924        /*I* NAME:         BUILD_DCW_LIST
     4048    14925             AUTHORS:      Curt Andes
     4049    14926                           Carl Eichert
     4050    14927                           Scott Sheppard
     4051    14928             PURPOSE:      constructs a DCW list in TOLTS memory
     4052    14929             INTERFACE:    BUILD_1ST_IDCW
     4053    14930                           BUILD_FAKE_DCW
     4054    14931                           BUILD_2ND_IDCW
     4055    14932                           PROCESS_IDCW
     4056    14933                           PROCESS_DCWS
     4057    14934             PARAMETERS:   TCX - test control index (input)
     4058    14935             DATA:         DCWLIST_BFR(TCX) - output
     4059    14936                           IO_ENTRY(TCX) - input
     4060    14937                           TOP$TCP.IO.ITR_INTERRUPT(TCX) - output
     4061    14938                           TOP$TCP.IO.TERMINATED(TCX) - output
     4062    14939                           TOP$TCP.IO.CONTROLLER(TCX) - input
     4063    14940             DESCRIPTION:  This  procedure  constructs   a  DCW  list  in
     4064    14941                           DCWLIST_BFR(TCX)    from   the    I/O   entry,
     4065    14942                           IO_ENTRY(TCX). It  performs numerous checks to
     4066    14943                           ensure that the DCW list is valid.
     4067    14944        */
     4068    14945        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:158  
     4069    14946    2   BUILD_DCW_LIST: PROC (TCX) ;
     4070    14947
     4071    14948    3      DCL TCX         UBIN WORD ALIGNED ;
     4072    14949    3      DCL CONTINUE    BIT (1) CALIGNED ;
     4073    14950    3      DCL HAS_DCWS    BIT (1) CALIGNED ;
     4074    14951    3      DCL DCW$        PTR ALIGNED ;
     4075    14952    3      DCL DCWLIST$    PTR ALIGNED ;
     4076    14953    3      DCL 1 DCWLIST_  REDEF DCWLIST$ ALIGNED,
     4077    14954    3            2 ADDR#   UBIN HALF UNAL,
     4078    14955    3            2 *       UBIN HALF UNAL;
     4079    14956    3      DCL 1 IDCW BASED ALIGNED,
     4080    14957    3            2 DEVICE_CMD#            BIT (6) UNAL,
     4081    14958    3            2 DEVICE_ADDRESS#        BIT (6) UNAL,
     4082    14959    3            2 *                      BIT (6) UNAL,
     4083    14960    3            2 TYPE#                  UBIN (3) UNAL,
     4084    14961    3            2 *                      BIT (1) UNAL,
     4085    14962    3            2 CONTINUE#              BIT (1) UNAL,
     4086    14963    3            2 *                      BIT (1) UNAL,
     4087    14964    3            2 CHANNEL_CMD#           UBIN (6) UNAL,
     4088    14965    3            2 RECORD_COUNT#          UBIN (6) UNAL ;
     4089    14966    3      DCL 1 DCW  BASED ALIGNED,
     4090    14967    3            2 ADDR#                  UBIN (18) UNAL,
     4091    14968    3            2 CHAR_POS#              BIT (3) UNAL,
     4092    14969    3            2 TALLY_CNTRL#           BIT (1) UNAL,
     4093    14970    3            2 TYPE#                  UBIN (2) UNAL,
     4094    14971    3            2 TALLY#                 BIT (12) UNAL ;
     4095    14972    3      DCL LIST_SIZE   UBIN WORD ALIGNED ;
     4096    14973           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:159  
     4097    14974        /* Code */
     4098    14975
     4099    14976    4      DO CASE (IO_ENTRY.W4.IO_CMD#(TCX)) ;
     4100    14977    4         CASE (%MULTIWD_CMD) ;
     4101    14978    4            CALL BUILD_1ST_IDCW ;
     4102    14979    4            CALL BUILD_FAKE_DCW ;
     4103    14980    4            CALL BUILD_2ND_IDCW ;
     4104    14981    4            CALL PROCESS_DCWS ;
     4105    14982    4         CASE (%CHAINED) ;
     4106    14983    4            CALL BUILD_1ST_IDCW ;
     4107    14984    4            IF DCW$ -> IDCW.TYPE# = %IDCW
     4108    14985    4            THEN CALL BUILD_FAKE_DCW ;
     4109    14986    4            ELSE CALL PROCESS_DCWS ;
     4110    14987    5            DO WHILE (CONTINUE AND LIST_SIZE < %DCWLIST_SIZE + 1) ;
     4111    14988    5               CALL PROCESS_IDCW ;
     4112    14989    5               CALL PROCESS_DCWS ;
     4113    14990    5            END /* WHILE */ ;
     4114    14991    4         CASE (ELSE) ;
     4115    14992    4            CALL BUILD_1ST_IDCW ;
     4116    14993    4            CALL PROCESS_DCWS ;
     4117    14994    5            DO WHILE (CONTINUE AND LIST_SIZE < %DCWLIST_SIZE + 1) ;
     4118    14995    5               CALL PROCESS_IDCW ;
     4119    14996    5               CALL PROCESS_DCWS ;
     4120    14997    5            END /* WHILE */ ;
     4121    14998    4      END /* CASE */ ;
     4122    14999    3      RETURN ;
     4123    15000
     4124    15001        /* END BUILD_DCW_LIST */
     4125    15002        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:160  
     4126    15003    3   BUILD_1ST_IDCW: PROC ;
     4127    15004
     4128    15005        /* Code */
     4129    15006
     4130    15007           /* Set up pointer to the DCW list to copy */
     4131    15008    4      DCW$ = PINCRW (IS$, IO_ENTRY.W8.DCW_PTR#(TCX)) ;
     4132    15009
     4133    15010           /* Set up pointer to the DCW list to be built */
     4134    15011    4      DCWLIST$ = ADDR (DCWLIST_BFR(TCX)) ;
     4135    15012    4      DCWLIST$ -> IDCW = '0'B ;
     4136    15013
     4137    15014           /* Set up Device Command from the I/O Entry */
     4138    15015    4      DCWLIST$ -> IDCW.DEVICE_CMD# = IO_ENTRY.W4.DEVICE_CMD#(TCX) ;
     4139    15016    4      IF (DCWLIST$ -> IDCW.DEVICE_CMD# = '10'O AND
     4140    15017    4              IO_ENTRY.W7.BIT29#(TCX) AND
     4141    15018    4              TOP$TCP.TEST_TYPE(TCX) = 'ITR')
     4142    15019    4      THEN TOP$TCP.IO.ITR_INTERRUPT(TCX) = '1'B ;
     4143    15020    4      ELSE TOP$TCP.IO.ITR_INTERRUPT(TCX) = '0'B ;
     4144    15021    4      TOP$TCP.IO.TERMINATED(TCX) = '0'B ;
     4145    15022
     4146    15023           /* Set up Device Address if I/O is NOT to a Controller */
     4147    15024    4      IF (TOP$TCP.IO.CONTROLLER(TCX)) OR (TOP$TCP.TEST_TYPE(TCX) = 'RPM')
     4148    15025    4      THEN /* Controller I/O */ ;
     4149    15026    4      ELSE DCWLIST$ -> IDCW.DEVICE_ADDRESS# = '77'O ;
     4150    15027
     4151    15028           /* Set up type as an IDCW */
     4152    15029    4      DCWLIST$ -> IDCW.TYPE# = %IDCW ;
     4153    15030           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:161  
     4154    15031           /* Set up Continue bit for this IDCW */
     4155    15032    5      DO CASE (IO_ENTRY.W4.IO_CMD#(TCX)) ;
     4156    15033    5         CASE (%MULTIWD_CMD) ;
     4157    15034    5            DCWLIST$ -> IDCW.CONTINUE# = '1'B ;
     4158    15035    5         CASE (%CHAINED) ;
     4159    15036    5            IF IO_ENTRY.W4.RECORD_COUNT#(TCX) > 1
     4160    15037    5            THEN DCWLIST$ -> IDCW.CONTINUE# = '1'B ;
     4161    15038    5            ELSE /* not chained */ ;
     4162    15039    5         CASE (ELSE) ;
     4163    15040    5            IF IO_ENTRY.W4.DEVICE_CMD#(TCX) ~=
     4164    15041    5                    IO_ENTRY.W7.DEVICE_CMD#(TCX) THEN
     4165    15042    5               DCWLIST$ -> IDCW.CONTINUE# = '1'B ;  /* ADDED FOR MDS */
     4166    15043    5      END /* CASE */ ;
     4167    15044
     4168    15045           /* Set up Channel Command for Controller I/O or Special Device I/O */
     4169    15046    4      IF IO_ENTRY.W4.IO_CMD#(TCX) > 31
     4170    15047    4      THEN IF TOP$TCP.IO.CONTROLLER(TCX)
     4171    15048    4         THEN DCWLIST$ -> IDCW.CHANNEL_CMD# = IO_ENTRY.W4.IO_CMD#(TCX) ;
     4172    15049    4         ELSE /* Leave the channel command at zero. */ ;
     4173    15050    4      ELSE DCWLIST$ -> IDCW.CHANNEL_CMD# = IO_ENTRY.W4.IO_CMD#(TCX) ;
     4174    15051
     4175    15052           /* Set up Record Count for this IDCW */
     4176    15053    4      DCWLIST$ -> IDCW.RECORD_COUNT# = IO_ENTRY.W4.RECORD_COUNT#(TCX) ;
     4177    15054
     4178    15055           /* Set up Processing Flags for BUILD_DCW_LIST procedure */
     4179    15056    4      CONTINUE = DCWLIST$ -> IDCW.CONTINUE# ;
     4180    15057    4      IF IO_ENTRY.W4.IO_CMD#(TCX) = 2
     4181    15058    4      THEN HAS_DCWS = %FALSE ;
     4182    15059    4      ELSE HAS_DCWS = %TRUE ;
     4183    15060    4      LIST_SIZE = 1 ;
     4184    15061
     4185    15062           /* Advance Pointer to the next word of the DCW list */
     4186    15063    4      DCWLIST$ = PINCRW (DCWLIST$, 1) ;
     4187    15064    4      IF IO_ENTRY.W2.MDS_DEV_IDCW_LIST(TCX) = '1'B
     4188    15065    4      THEN IO_ENTRY.W2.MDS_DEV_IDCW_LIST(TCX) = '1'B;
     4189    15066    4      ELSE /*DO NOTHING */ ;
     4190    15067    4      RETURN ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:162  
     4191    15068
     4192    15069    4   END BUILD_1ST_IDCW ;
     4193    15070        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:163  
     4194    15071    3   BUILD_2ND_IDCW: PROC ;
     4195    15072
     4196    15073        /* Code */
     4197    15074
     4198    15075           /* Initialize the IDCW to zeroes */
     4199    15076    4      DCWLIST$ -> IDCW = '0'B ;
     4200    15077
     4201    15078           /* Set up Device Command for this IDCW */
     4202    15079    4      DCWLIST$ -> IDCW.DEVICE_CMD# = IO_ENTRY.W7.DEVICE_CMD#(TCX) ;
     4203    15080
     4204    15081           /* Set up Device Address if I/O is NOT to a Controller */
     4205    15082    4      IF (TOP$TCP.IO.CONTROLLER(TCX)) OR (TOP$TCP.TEST_TYPE(TCX) = 'RPM')
     4206    15083    4      THEN /* Controller I/Os have an address of 0 */ ;
     4207    15084    4      ELSE DCWLIST$ -> IDCW.DEVICE_ADDRESS# = '77'O ;
     4208    15085
     4209    15086           /* Set up Type for this IDCW */
     4210    15087    4      DCWLIST$ -> IDCW.TYPE# = %IDCW ;
     4211    15088
     4212    15089           /* Set up Channel Command for this IDCW */
     4213    15090    4      DCWLIST$ -> IDCW.CHANNEL_CMD# = IO_ENTRY.W7.IO_CMD#(TCX) ;
     4214    15091           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:164  
     4215    15092           /* Continue bit will not be set */
     4216    15093
     4217    15094           /* Set up Record Count for this IDCW */
     4218    15095    4      DCWLIST$ -> IDCW.RECORD_COUNT# = IO_ENTRY.W7.RECORD_COUNT#(TCX) ;
     4219    15096
     4220    15097           /* Set up processing flags */
     4221    15098    4      CONTINUE = DCWLIST$ -> IDCW.CONTINUE# ;
     4222    15099    4      IF IO_ENTRY.W7.IO_CMD#(TCX) = 2
     4223    15100    4      THEN HAS_DCWS = %FALSE ;
     4224    15101    4      ELSE HAS_DCWS = %TRUE ;
     4225    15102    4      LIST_SIZE = LIST_SIZE + 1 ;
     4226    15103
     4227    15104           /* Advance pointer to the next word in the DCW list */
     4228    15105    4      DCWLIST$ = PINCRW (DCWLIST$, 1) ;
     4229    15106    4      RETURN ;
     4230    15107
     4231    15108    4   END BUILD_2ND_IDCW ;
     4232    15109        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:165  
     4233    15110    3   BUILD_FAKE_DCW: PROC ;
     4234    15111
     4235    15112        /* Code */
     4236    15113
     4237    15114           /* Use word 5 of the I/O entry as a DCW */
     4238    15115    4      DCWLIST$ -> DCW = IO_ENTRY.W5#(TCX) ;
     4239    15116    4      LIST_SIZE = LIST_SIZE + 1 ;
     4240    15117    4      DCWLIST$ = PINCRW (DCWLIST$, 1) ;
     4241    15118    4      RETURN ;
     4242    15119
     4243    15120    4   END BUILD_FAKE_DCW ;
     4244    15121        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:166  
     4245    15122    3   PROCESS_DCWS: PROC ;
     4246    15123
     4247    15124    4      DCL LAST_DATA_DCW  BIT (1) UNAL ;
     4248    15125    4      DCL TEMP$          PTR ALIGNED;
     4249    15126
     4250    15127        /* Code */
     4251    15128
     4252    15129    4      IF HAS_DCWS
     4253    15130    5      THEN DO ;
     4254    15131    5              LAST_DATA_DCW = %FALSE ;
     4255    15132    6              DO UNTIL (LAST_DATA_DCW) ;
     4256    15133    7                 DO CASE (DCW$ -> DCW.TYPE#) ;
     4257    15134    7                    CASE (%IOTP, %IONTP) ;
     4258    15135    7                       DCWLIST$ -> DCW = DCW$ -> DCW ;
     4259    15136    7                       DCW$ = PINCRW (DCW$, 1);
     4260    15137    7                    CASE (%IOTD) ;
     4261    15138    7                       DCWLIST$ -> DCW = DCW$ -> DCW ;
     4262    15139    7                       DCW$ = PINCRW (DCW$, 1);
     4263    15140    7                       LAST_DATA_DCW = %TRUE ;
     4264    15141    7                    CASE (%TDCW);
     4265    15142    7                       DCWLIST$ -> DCW = DCW$ -> DCW;
     4266    15143    7                       DCWLIST$ -> DCW.ADDR# = DCWLIST_.ADDR# + 1;
     4267    15144    7                       TEMP$ = PINCRW (IS$, DCW$ -> DCW.ADDR#);
     4268    15145    7                       IF TEMP$ = DCW$
     4269    15146    7                       THEN LAST_DATA_DCW = %TRUE ;  /* ADDED FOR MDS  */
     4270    15147    7                       DCW$ = TEMP$;
     4271    15148    7                       IF (DCW$ -> IDCW.TYPE# = %IDCW)
     4272    15149    7                       THEN LAST_DATA_DCW = %TRUE;
     4273    15150    7                    CASE (ELSE) ;
     4274    15151    7                       CALL BAD_LIST_ABORT ;
     4275    15152    7                 END /* CASE */ ;
     4276    15153    6                 IF LIST_SIZE < %DCWLIST_SIZE
     4277    15154    6                 THEN LIST_SIZE = LIST_SIZE + 1 ;
     4278    15155    6                 ELSE CALL BAD_LIST_ABORT ;
     4279    15156    6                 DCWLIST$ = PINCRW (DCWLIST$, 1) ;
     4280    15157    6              END /* UNTIL */;
     4281    15158    5           END /* THEN */ ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:167  
     4282    15159    4      ELSE /* IDCW specifies a non-data transfer command */ ;
     4283    15160    4      RETURN ;
     4284    15161
     4285    15162    4   END PROCESS_DCWS ;
     4286    15163        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:168  
     4287    15164    3   PROCESS_IDCW: PROC ;
     4288    15165
     4289    15166        /* Code */
     4290    15167
     4291    15168    4      DCWLIST$ -> IDCW = DCW$ -> IDCW ;
     4292    15169    4      IF (TOP$TCP.IO.CONTROLLER(TCX)) OR (TOP$TCP.TEST_TYPE(TCX) = 'RPM')
     4293    15170    4      THEN DCWLIST$ -> IDCW.DEVICE_ADDRESS# = '00'O ;
     4294    15171    4      ELSE DCWLIST$ -> IDCW.DEVICE_ADDRESS# = '77'O ;
     4295    15172
     4296    15173    4      CONTINUE = DCWLIST$ -> IDCW.CONTINUE# ;
     4297    15174    4      IF DCWLIST$ -> IDCW.CHANNEL_CMD# = 2
     4298    15175    4      THEN HAS_DCWS = %FALSE ;
     4299    15176    4      ELSE HAS_DCWS = %TRUE ;
     4300    15177    4      DCWLIST$ = PINCRW (DCWLIST$, 1) ;
     4301    15178    4      IF LIST_SIZE < %DCWLIST_SIZE
     4302    15179    4      THEN LIST_SIZE = LIST_SIZE + 1 ;
     4303    15180    4      ELSE CALL BAD_LIST_ABORT ;
     4304    15181    4      DCW$ = PINCRW (DCW$, 1) ;
     4305    15182    4      RETURN ;
     4306    15183
     4307    15184    4   END PROCESS_IDCW ;
     4308    15185        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:169  
     4309    15186    3   BAD_LIST_ABORT: PROC ;
     4310    15187
     4311    15188        /* Code */
     4312    15189
     4313    15190    4      TOP_ERROR_CODE.ERR# = %E$BADDCWLS ;
     4314    15191    4      CALL TOX$SCREECH (TOP_ERROR_CODE) ;
     4315    15192
     4316    15193    4   END BAD_LIST_ABORT ;
     4317    15194    3   END BUILD_DCW_LIST ;
     4318    15195        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:170  
     4319    15196        /*I* NAME:         ISSUE_IO
     4320    15197             AUTHOR:       Scott S. Sheppard
     4321    15198             PURPOSE:      issues a T&D I/O
     4322    15199             INTERFACE:    M$TDIO
     4323    15200             PARAMETERS:   TCX - indicates which test page I/O is for
     4324    15201             DATA:         TDIO_FPT - input
     4325    15202             DESCRIPTION:  This procedure issues a T&D I/O using the TDIO
     4326    15203                           FPT  which  has  already  been  set up. Before
     4327    15204                           issuing the the I/O, the IO_ISSUED bit for the
     4328    15205                           corresponding test page is set.  The number of
     4329    15206                           outstanding I/O's is also incremented by 1.
     4330    15207        */
     4331    15208
     4332    15209    2   ISSUE_IO: PROC (TCX) ;
     4333    15210
     4334    15211    3      DCL TCX UBIN WORD ALIGNED ;
     4335    15212
     4336    15213        /* Code */
     4337    15214
     4338    15215    4      DO INHIBIT ;
     4339    15216    4         TOT$ECP.IO.COUNT = TOT$ECP.IO.COUNT + 1 ;
     4340    15217    4         TOP$TCP.IO.ISSUED(TCX) = %TRUE ;
     4341    15218    4         CALL M$TDIO (TDIO_FPT) ;
     4342    15219    4      END /* INHIBIT */ ;
     4343    15220    3      RETURN ;
     4344    15221
     4345    15222    3   END ISSUE_IO ;
     4346    15223        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:171  
     4347    15224        /*I* NAME:         SET_RETURN_VALUES
     4348    15225             INTERFACE:    M$TIME
     4349    15226             INPUT:        TOP$TCP.TEST_TYPE(TCX)
     4350    15227             OUTPUT:       A - time of day, in 1/64 milliseconds since midnight
     4351    15228                           Q - channel lostit time
     4352    15229                                = 0 for ITRs
     4353    15230                                = 8192 for all others
     4354    15231                           X4 - fake I/O entry address for MME HUNGTM
     4355    15232                           RETURN_DELTA - normal return = 5
     4356    15233             DESCRIPTION:  Sets the lostit time to 0 for ITRs so MME HUNGTM
     4357    15234                           will timeout any special interrupts in 1 minute ;
     4358    15235                           in all other cases, sets lostit time to 8192
     4359    15236                           arbitrarily, just like Multics does.
     4360    15237                           Calls M$TIME to return time of day in 1/64
     4361    15238                           millisecond increments since midnight.
     4362    15239        */
     4363    15240        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:172  
     4364    15241    2   SET_RETURN_VALUES: PROC (TCX, Q, A, X4, RETURN_DELTA) ;
     4365    15242
     4366    15243    3      DCL TCX          UBIN WORD ALIGNED ;
     4367    15244    3      DCL Q            UBIN WORD ALIGNED ;
     4368    15245    3      DCL A            UBIN WORD ALIGNED ;
     4369    15246    3      DCL X4           UBIN HALF HALIGNED ;
     4370    15247    3      DCL RETURN_DELTA SBIN HALF HALIGNED ;
     4371    15248    3      DCL TIME_VALUE   UBIN WORD STATIC ALIGNED ;
     4372    15249           %FPT_TIME (FPTN   = TIME_FPT,
     4373    15250                      SOURCE = CLOCK,
     4374    15251                      DEST   = TUN,
     4375    15252                      TSTAMP = TIME_VALUE) ;
     4376    15271
     4377    15272        /* Code */
     4378    15273
     4379    15274    3      IF TOP$TCP.TEST_TYPE(TCX) = 'ITR'
     4380    15275    3      THEN Q = 0 ;
     4381    15276    3      ELSE Q = 8192 ;
     4382    15277    3      CALL M$TIME (TIME_FPT) ;
     4383    15278    3      A = TIME_VALUE * 64 ;
     4384    15279    3      X4 = TOP$TCP.ADR.IOENTRY(TCX) ;
     4385    15280    3      RETURN_DELTA = 5 ;
     4386    15281    3      RETURN ;
     4387    15282
     4388    15283    3   END SET_RETURN_VALUES ;
     4389    15284    2   END TOP$MME_TESTIO ;
     4390    15285        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:173  
     4391    15286        /*I* NAME:         TOP$MME_UNSPEC
     4392    15287             CALL:         CALL TOP$MME_UNSPEC(P_X1REG,RETURN_DELTA) ;
     4393    15288             INTERFACE:
     4394    15289             INPUT:
     4395    15290             OUTPUT:
     4396    15291             DESCRIPTION:  Not used in CP6 because the card reader will be
     4397    15292                           unspec when it is partitioned.
     4398    15293        */
     4399    15294
     4400    15295    1   TOP$MME_UNSPEC: PROC (P_X1REG,RETURN_DELTA) ;
     4401    15296
     4402    15297    2      DCL P_X1REG  UBIN HALF HALIGNED ;
     4403    15298    2      DCL RETURN_DELTA SBIN HALF ;
     4404    15299
     4405    15300        /* Code */
     4406    15301
     4407    15302    2      RETURN_DELTA = 2 ;
     4408    15303    2      RETURN ;
     4409    15304
     4410    15305    2   END TOP$MME_UNSPEC ;
     4411    15306        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:174  
     4412    15307        /*I* NAME:         TOP$MME_WRDUMP
     4413    15308             CALL:         CALL TOP$MME_WRDUMP (A, Q, X1, X2, RETURN_DELTA)
     4414    15309             INTERFACE:    DO_YOU_WANT_A_DUMP
     4415    15310                           GET_DUMP_OUTPUT_MODE
     4416    15311                           OPEN_DUMP_RECIPTICLE
     4417    15312                           SET_DUMP_PARAMS
     4418    15313                           EXECUTE_DUMP
     4419    15314                           CLOSE_DUMP_RECEPTICLE
     4420    15315             INPUT:        A_REG.SIZE - number of words in dump header
     4421    15316             OUTPUT:       Dump sent to the line printer or a file
     4422    15317             DESCRIPTION:  This procedure produces a dump on a wrapup request
     4423    15318                           if the user instructs the module to do so.
     4424    15319        */
     4425    15320
     4426    15321    1   TOP$MME_WRDUMP: PROC (A_REG, Q_REG, X1_REG, X2_REG, RETURN_DELTA) ;
     4427    15322
     4428    15323        /* SYSTEM Stuff */
     4429    15324
     4430    15325           %B$TCB ;
     4431    15328           %B$ALT ;
     4432    15336
     4433    15337        /* EQUates */
     4434    15338
     4435    15339           %EQU SUBEXEC = 1 ;
     4436    15340           %EQU TEST_PAGE = 2 ;
     4437    15341           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:175  
     4438    15342        /* Parameters */
     4439    15343
     4440    15344    2      DCL 1 A_REG ALIGNED,
     4441    15345    2            2 ADDR# UBIN (18) UNAL,
     4442    15346    2            2 SIZE# UBIN (18) UNAL ;
     4443    15347    2      DCL 1 Q_REG ALIGNED,
     4444    15348    2            2 ADDR# UBIN (18) UNAL,
     4445    15349    2            2 SIZE# UBIN (18) UNAL ;
     4446    15350    2      DCL X1_REG SBIN (18) HALIGNED ;
     4447    15351    2      DCL X2_REG UBIN (18) HALIGNED ;
     4448    15352    2      DCL RETURN_DELTA SBIN HALF ;
     4449    15353
     4450    15354        /* DeCLarations */
     4451    15355
     4452    15356    2      DCL OCT_WORDS_PER_LINE UBIN WORD ALIGNED ;
     4453    15357    2      DCL OCT_WORDS_PER_LINE_SBIN REDEF OCT_WORDS_PER_LINE SBIN WORD ALIGNED;
     4454    15358    2      DCL 1 DUMP_LINE STATIC CALIGNED,
     4455    15359    2            2 * CHAR (1) INIT ('.'),
     4456    15360    2            2 ACTUAL_ADDR# CHAR (6),
     4457    15361    2            2 * CHAR (2) INIT (' .'),
     4458    15362    2            2 RELATIVE_ADDR# CHAR (6),
     4459    15363    2            2 * CHAR (1) INIT (' '),
     4460    15364    2            2 EDIT_NAME# CHAR (4),
     4461    15365    2            2 * CHAR (1) INIT (' '),
     4462    15366    2            2 DUMP_OUTPUT# CHAR (104) INIT (' '),
     4463    15367    2            2 DUMP_OUTPUT_(0:7) REDEF DUMP_OUTPUT#,
     4464    15368    2              3 * CHAR (1),
     4465    15369    2              3 OCT_WORD_ASC# CHAR (12) ;
     4466    15370    2      DCL 1 FILE_OUTPUT_LINE REDEF DUMP_LINE CALIGNED,
     4467    15371    2            2 DUMP_LINE# CHAR (73),
     4468    15372    2            2 * CHAR (52) ;
     4469    15373    2      DCL TP_BASE_REL_ADDR UBIN WORD ALIGNED ;
     4470    15374    2      DCL DUMP_WORD_INX UBIN WORD ALIGNED ;
     4471    15375    2      DCL DUMP_QUES CHAR (19) CONSTANT CALIGNED INIT ('Do you want a dump:') ;
     4472    15376    2      DCL FID_QUES  CHAR (20) CONSTANT CALIGNED INIT
     4473    15377    2                       ('Enter ''LP'' or <fid>:') ;
     4474    15378    2      DCL EDIT_NAME CHAR (4) CALIGNED ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:176  
     4475    15379    2      DCL DUMP_HDR$ PTR ALIGNED ;
     4476    15380    2      DCL DUMP_LINE_INX SBIN WORD ALIGNED ;
     4477    15381    2      DCL DUMP_HDR_SIZE UBIN WORD ALIGNED ;
     4478    15382    2      DCL TP_STATS_INX SBIN WORD ALIGNED ;
     4479    15383    2      DCL BCD_BUF(0:1199) UBIN WORD ALIGNED ;
     4480    15384    2      DCL ASCII_BUF CHAR (7200) CALIGNED ;
     4481    15385    2      DCL TEMP_ASCII_BUF CHAR (12) ALIGNED ;
     4482    15386    2      DCL DUMP_WORD_OCT UBIN WORD BASED ALIGNED ;
     4483    15387    2      DCL DUMP_SIZE UBIN WORD ALIGNED ;
     4484    15388    2      DCL DUMP_SIZE_SBIN REDEF DUMP_SIZE SBIN WORD ALIGNED ;
     4485    15389    2      DCL ADDR_TRANS$ PTR STATIC ALIGNED ;
     4486    15390    2      DCL READ_BUF CHAR (80) STATIC CALIGNED INIT (' ') ;
     4487    15391    2      DCL READ_BUF_(0:79) REDEF READ_BUF CHAR (1) CALIGNED ;
     4488    15392    2      DCL BL_INX SBIN WORD ALIGNED ;
     4489    15393    2      DCL CHR_INX SBIN WORD ALIGNED ;
     4490    15394    2      DCL DOT_INX SBIN WORD ALIGNED ;
     4491    15395    2      DCL LP_DUMP BIT (1) UNAL ;
     4492    15396    2      DCL 1 DUMP_ STATIC ALIGNED,
     4493    15397    2            2 ADDR# UBIN (18) UNAL,
     4494    15398    2            2 SEGID# UBIN (18) UNAL INIT (%IS_SEGID) ;
     4495    15399    2      DCL DUMP$ REDEF DUMP_ PTR ALIGNED ;
     4496    15400    2      DCL DUMP_ADDR_TEMP UBIN WORD ALIGNED ;
     4497    15401    2      DCL DUMP_TYPE UBIN HALF HALIGNED ;
     4498    15402           %F$DCB ;
     4499    15459           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:177  
     4500    15460        /* FPTs */
     4501    15461
     4502    15462           %FPT_CLOSE    (FPTN = CLOSE_DUMP,
     4503    15463                          DCB = M$DUMP,
     4504    15464                          DISP = SAVE) ;
     4505    15506           %FPT_OPEN     (FPTN = OPEN_LP,
     4506    15507                          ASN = DEVICE,
     4507    15508                          DCB = M$DUMP,
     4508    15509                          ORG = UR,
     4509    15510                          RES = 'LP') ;
     4510    15619           %FPT_OPEN     (FPTN = OPEN_DUMP_FILE,
     4511    15620                          ACCT = DUMP_ACCT,
     4512    15621                          ASN = FILE,
     4513    15622                          DCB = M$DUMP,
     4514    15623                          DISP = NAMED,
     4515    15624                          EXIST = ERROR,
     4516    15625                          FUN = CREATE,
     4517    15626                          NAME = DUMP_NAME,
     4518    15627                          ORG = CONSEC,
     4519    15628                          SHARE = NONE) ;
     4520    15737           %FPT_PROMPT   (FPTN = DUMP_PROMPT,
     4521    15738                          PROMPT = DUMP_QUES) ;
     4522    15766           %FPT_PROMPT   (FPTN = LP_OR_FID,
     4523    15767                          PROMPT = FID_QUES) ;
     4524    15795           %FPT_WRITE    (FPTN = WRITE_HDR_LINE,
     4525    15796                          DCB = M$DUMP) ;
     4526    15827           %FPT_WRITE    (FPTN = WRITE_DUMP,
     4527    15828                          DCB = M$DUMP) ;
     4528    15859           %VLP_NAME     (FPTN = DUMP_NAME,
     4529    15860                          LEN  = 31) ;
     4530    15887           %VLP_ACCT     (FPTN = DUMP_ACCT) ;
     4531    15900           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:178  
     4532    15901        /* Code */
     4533    15902
     4534    15903    2      CALL WRAP_DUMP_MSG ;
     4535    15904    2      CALL DO_YOU_WANT_A_DUMP ALTRET (NO_DUMP) ;
     4536    15905
     4537    15906    2   UNSUCCESSFUL_DUMP:
     4538    15907    2      CALL GET_DUMP_OUTPUT_MODE ALTRET (UNSUCCESSFUL_DUMP) ;
     4539    15908    2      CALL OPEN_DUMP_RECEPTICLE ALTRET (UNSUCCESSFUL_DUMP) ;
     4540    15909    2      CALL SET_DUMP_PARAMS ALTRET (NO_DUMP) ;
     4541    15910    2      CALL EXECUTE_DUMP ;
     4542    15911
     4543    15912    2   NO_DUMP:
     4544    15913    2      CALL CLOSE_DUMP_RECEPTICLE ;
     4545    15914    2      RETURN_DELTA = 1 ;
     4546    15915    2      RETURN ;
     4547    15916
     4548    15917        /* END TOP$MME_WRDUMP */
     4549    15918        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:179  
     4550    15919    2   WRAP_DUMP_MSG: PROC ;
     4551    15920
     4552    15921    3      DCL 1 MESSAGE STATIC CALIGNED,
     4553    15922    3            2 SUBEXEC CHAR (5) UNAL INIT (' '),
     4554    15923    3            2 *       CHAR (0) UNAL INIT (' Subexecutive wrapping up.') ;
     4555    15924
     4556    15925        /* Code */
     4557    15926
     4558    15927    4      DO CASE (TOT$ECP.SUBEXEC.CURRENT) ;
     4559    15928    4         CASE (%COLTS) ;
     4560    15929    4            MESSAGE.SUBEXEC = 'COLTS' ;
     4561    15930    4         CASE (%MOLTS) ;
     4562    15931    4            MESSAGE.SUBEXEC = 'MOLTS' ;
     4563    15932    4         CASE (%POLTS) ;
     4564    15933    4            MESSAGE.SUBEXEC = 'POLTS' ;
     4565    15934    4         CASE (%SOLTS) ;
     4566    15935    4            MESSAGE.SUBEXEC = 'SOLTS' ;
     4567    15936    4         CASE (%SLTA) ;
     4568    15937    4            MESSAGE.SUBEXEC = 'SOLTA' ;
     4569    15938    4         CASE (%PACT) ;
     4570    15939    4            MESSAGE.SUBEXEC = 'PACT ' ;
     4571    15940    4      END /* CASE */ ;
     4572    15941    3      CONSOLE_FPT.BUF_ = VECTOR (MESSAGE) ;
     4573    15942    3      CALL TOT$CONSOLE_OUT ;
     4574    15943    3      RETURN ;
     4575    15944
     4576    15945    3   END WRAP_DUMP_MSG ;
     4577    15946        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:180  
     4578    15947    2   DO_YOU_WANT_A_DUMP: PROC ALTRET ;
     4579    15948
     4580    15949    3      DCL VALID_RESPONSE BIT (1) UNAL ;
     4581    15950    3      DCL YES_RESP  CHAR (3) CONSTANT CALIGNED INIT ('YES') ;
     4582    15951    3      DCL NO_RESP   CHAR (3) CONSTANT CALIGNED INIT ('NO ') ;
     4583    15952
     4584    15953        /* Code */
     4585    15954
     4586    15955    3      CALL M$PROMPT (DUMP_PROMPT) ;
     4587    15956    4      DO UNTIL VALID_RESPONSE ;
     4588    15957    4         READ_BUF = ' ' ;
     4589    15958    4         READ_IO.BUF_ = VECTOR (READ_BUF) ;
     4590    15959    4         CALL TOT$CONSOLE_IN ;
     4591    15960
     4592    15961              /* Skip leading spaces */
     4593    15962    4         CHR_INX = 0 ;
     4594    15963    5         DO WHILE READ_BUF_(CHR_INX) = ' ' AND CHR_INX < 80 ;
     4595    15964    5            CHR_INX = CHR_INX + 1 ;
     4596    15965    5         END /* WHILE */ ;
     4597    15966
     4598    15967              /* Find first blank following first non-blank */
     4599    15968    4         CALL INDEX (BL_INX, ' ', READ_BUF, CHR_INX) ;
     4600    15969              %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:181  
     4601    15970              /* Check Response for Yes or No */
     4602    15971    4         IF BL_INX - CHR_INX > 0  AND  BL_INX - CHR_INX < 4
     4603    15972    4         THEN IF SUBSTR (READ_BUF, CHR_INX, BL_INX - CHR_INX) =
     4604    15973    4                    SUBSTR (YES_RESP, 0, BL_INX - CHR_INX)
     4605    15974    4            THEN VALID_RESPONSE = %TRUE ;
     4606    15975    4            ELSE IF SUBSTR (READ_BUF, CHR_INX, BL_INX - CHR_INX) =
     4607    15976    4                       SUBSTR (NO_RESP, 0, BL_INX - CHR_INX)
     4608    15977    4               THEN VALID_RESPONSE = %TRUE ;
     4609    15978    5               ELSE DO ;
     4610    15979    5                       VALID_RESPONSE = %FALSE ;
     4611    15980    5                       TOP_ERROR_CODE.ERR# = %E$BADRESP ;
     4612    15981    5                       CALL TOX$WARN (TOP_ERROR_CODE) ;
     4613    15982    5                    END /* ELSE */ ;
     4614    15983    5         ELSE DO ;
     4615    15984    5                 VALID_RESPONSE = %FALSE ;
     4616    15985    5                 TOP_ERROR_CODE.ERR# = %E$BADRESP ;
     4617    15986    5                 CALL TOX$WARN (TOP_ERROR_CODE) ;
     4618    15987    5              END /* ELSE */ ;
     4619    15988    4      END /* UNTIL */ ;
     4620    15989
     4621    15990           /* If dump desired then return else altreturn */
     4622    15991    3      IF READ_BUF_(CHR_INX) = 'Y'
     4623    15992    3      THEN RETURN ;
     4624    15993    3      ELSE ALTRETURN ;
     4625    15994
     4626    15995    3   END DO_YOU_WANT_A_DUMP ;
     4627    15996        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:182  
     4628    15997    2   GET_DUMP_OUTPUT_MODE: PROC ALTRET ;
     4629    15998
     4630    15999        /* Code */
     4631    16000
     4632    16001    3      CALL M$PROMPT (LP_OR_FID) ;
     4633    16002    3      READ_BUF = ' ' ;
     4634    16003    3      READ_IO.BUF_ = VECTOR (READ_BUF) ;
     4635    16004    3      CALL TOT$CONSOLE_IN ;
     4636    16005
     4637    16006    3      IF READ_BUF = ' '
     4638    16007    3      THEN LP_DUMP = %TRUE ;
     4639    16008    4      ELSE DO ;
     4640    16009                   /* Delimit user reply */
     4641    16010    4              CHR_INX = 0 ;
     4642    16011    5              DO WHILE READ_BUF_(CHR_INX) = ' ' AND CHR_INX < 80 ;
     4643    16012    5                 CHR_INX = CHR_INX + 1 ;
     4644    16013    5              END /* WHILE */ ;
     4645    16014    4              CALL INDEX (BL_INX, ' ', READ_BUF, CHR_INX) ;
     4646    16015
     4647    16016                   /* Check for 'LP' or file identifier */
     4648    16017    4              IF BL_INX - CHR_INX = 2 AND
     4649    16018    4                      SUBSTR (READ_BUF, CHR_INX, 2) = 'LP'
     4650    16019    4              THEN LP_DUMP = %TRUE ;
     4651    16020    5              ELSE DO ;
     4652    16021    5                      LP_DUMP = %FALSE ;
     4653    16022    5                      CALL SETUP_DUMP_FID ALTRET (BAD_FID) ;
     4654    16023    5                   END /* ELSE */ ;
     4655    16024    4           END /* ELSE */ ;
     4656    16025    3      RETURN ;
     4657    16026
     4658    16027    3   BAD_FID:
     4659    16028    3      ALTRETURN ;
     4660    16029
     4661    16030        /* END GET_DUMP_OUTPUT_MODE */
     4662    16031        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:183  
     4663    16032    3   SETUP_DUMP_FID: PROC ALTRET ;
     4664    16033
     4665    16034        /* Code */
     4666    16035
     4667    16036    4      CALL INDEX (DOT_INX, '.', READ_BUF, CHR_INX) ;
     4668    16037    4      IF DOT_INX = CHR_INX
     4669    16038    5      THEN DO ;
     4670    16039    5              TOP_ERROR_CODE.ERR# = %E$BADFILEID ;
     4671    16040    5              CALL TOX$WARN (TOP_ERROR_CODE) ;
     4672    16041    5              ALTRETURN ;
     4673    16042    5           END /* THEN */ ;
     4674    16043    4      ELSE IF DOT_INX > BL_INX
     4675    16044    5         THEN DO ;
     4676    16045    5                 DUMP_NAME.NAME# = SUBSTR (READ_BUF,
     4677    16046    5                         CHR_INX,
     4678    16047    5                         BL_INX - CHR_INX) ;
     4679    16048    5                 DUMP_NAME.L# = BL_INX - CHR_INX ;
     4680    16049    5                 DUMP_ACCT.ACCT# = B$JIT$ -> B$JIT.FACCN ;
     4681    16050    5              END /* THEN */ ;
     4682    16051    5         ELSE DO ;
     4683    16052    5                 DUMP_NAME.NAME# = SUBSTR (READ_BUF,
     4684    16053    5                         CHR_INX,
     4685    16054    5                         DOT_INX - CHR_INX) ;
     4686    16055    5                 DUMP_NAME.L# = DOT_INX - CHR_INX ;
     4687    16056    5                 DUMP_ACCT.ACCT# = SUBSTR (READ_BUF,
     4688    16057    5                         DOT_INX + 1,
     4689    16058    5                         BL_INX - DOT_INX - 1) ;
     4690    16059    5              END /* ELSE */ ;
     4691    16060    4      RETURN ;
     4692    16061
     4693    16062    4   END SETUP_DUMP_FID ;
     4694    16063    3   END GET_DUMP_OUTPUT_MODE ;
     4695    16064        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:184  
     4696    16065    2   OPEN_DUMP_RECEPTICLE: PROC ALTRET ;
     4697    16066
     4698    16067        /* Code */
     4699    16068
     4700    16069    3      IF DCBADDR (DCBNUM (M$DUMP)) -> F$DCB.FCD#
     4701    16070    3      THEN /* Dump data control block already open. */ ;
     4702    16071    3      ELSE IF LP_DUMP
     4703    16072    3         THEN CALL M$OPEN (OPEN_LP) ALTRET (BAD_LP_OPEN) ;
     4704    16073    3         ELSE CALL M$OPEN (OPEN_DUMP_FILE) ALTRET (BAD_FID_OPEN) ;
     4705    16074    3      RETURN ;
     4706    16075
     4707    16076    3   BAD_LP_OPEN:
     4708    16077    3      CALL TOX$WARN (B$TCB$->B$TCB.ALT$->B$ALT.ERR) ;
     4709    16078    3      ALTRETURN ;
     4710    16079
     4711    16080    3   BAD_FID_OPEN:
     4712    16081    3      TOP_ERROR_CODE.ERR# = %E$NOOVRWR ;
     4713    16082    3      CALL TOX$WARN (TOP_ERROR_CODE) ;
     4714    16083    3      ALTRETURN ;
     4715    16084
     4716    16085    3   END OPEN_DUMP_RECEPTICLE ;
     4717    16086        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:185  
     4718    16087    2   SET_DUMP_PARAMS: PROC ALTRET ;
     4719    16088
     4720    16089    3      DCL EDIT_NAME_FOUND   BIT (1) ;
     4721    16090
     4722    16091        /* Code */
     4723    16092
     4724    16093    3      DUMP_HDR$ = PINCRW (IS$, A_REG.ADDR#) ;
     4725    16094    3      DUMP_HDR_SIZE = A_REG.SIZE# ;
     4726    16095    3      IF X1_REG = -1024
     4727    16096    4      THEN DO ;
     4728    16097    4              DUMP_.ADDR# = TOT$ECP.SUBEXEC.ADDRESS ;
     4729    16098    4              DUMP_SIZE = Q_REG.SIZE# - 1024 - TOT$ECP.SUBEXEC.ADDRESS ;
     4730    16099    4              DUMP_TYPE = %SUBEXEC ;
     4731    16100    4              EDIT_NAME = TOT$ECP.SUBEXEC.EDIT_NAME ;
     4732    16101    4           END ;
     4733    16102    4      ELSE DO ;
     4734    16103    4              DUMP_.ADDR# = Q_REG.ADDR# ;
     4735    16104    4              DUMP_SIZE = Q_REG.SIZE# ;
     4736    16105    4              DUMP_TYPE = %TEST_PAGE ;
     4737    16106    4              EDIT_NAME_FOUND = %FALSE ;
     4738    16107    4              TP_STATS_INX = 0 ;
     4739    16108    5              DO UNTIL EDIT_NAME_FOUND OR TP_STATS_INX = 8 ;
     4740    16109    5                 IF DUMP_.ADDR# = TOP$TCP.STATS.LOAD_ADDR(TP_STATS_INX)
     4741    16110    5                 THEN EDIT_NAME_FOUND = %TRUE ;
     4742    16111    5                 ELSE TP_STATS_INX = TP_STATS_INX + 1 ;
     4743    16112    5              END ;
     4744    16113    4              IF EDIT_NAME_FOUND
     4745    16114    4              THEN EDIT_NAME = TOP$TCP.STATS.EDIT_NAME(TP_STATS_INX) ;
     4746    16115    4              ELSE ALTRETURN ;
     4747    16116    4           END ;
     4748    16117    3      RETURN ;
     4749    16118
     4750    16119    3   END SET_DUMP_PARAMS ;
     4751    16120        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:186  
     4752    16121    2   EXECUTE_DUMP: PROC ;
     4753    16122
     4754    16123        /* Code */
     4755    16124
     4756    16125    3      CALL GET_BCD_BUFFER ;
     4757    16126    3      CALL TOT$BCD_ASCII (BCD_BUF, ASCII_BUF, DUMP_HDR_SIZE) ;
     4758    16127    3      CALL BREAK_HDR_LINE ;
     4759    16128    3      IF LP_DUMP
     4760    16129    4      THEN DO ;
     4761    16130    4              WRITE_DUMP.BUF_ = VECTOR (DUMP_LINE) ;
     4762    16131    4              OCT_WORDS_PER_LINE = 8 ;
     4763    16132    4           END /* then */ ;
     4764    16133    4      ELSE DO ;
     4765    16134    4              WRITE_DUMP.BUF_ = VECTOR (FILE_OUTPUT_LINE.DUMP_LINE#) ;
     4766    16135    4              OCT_WORDS_PER_LINE = 4 ;
     4767    16136    4           END /* else */ ;
     4768    16137    3      DUMP_LINE.EDIT_NAME# = EDIT_NAME ;
     4769    16138    3      ADDR_TRANS$ = ADDR (TEMP_ASCII_BUF) ;
     4770    16139    4      DO DUMP_LINE_INX = 1 TO (DUMP_SIZE_SBIN / OCT_WORDS_PER_LINE_SBIN) ;
     4771    16140    4         IF TOT$ECP.SUBEXEC.TEST_PAGE_COUNT > 0 AND
     4772    16141    4                 TP_STATS_INX < TOT$ECP.SUBEXEC.TEST_PAGE_COUNT - 1
     4773    16142    5         THEN DO CASE (DUMP_TYPE) ;
     4774    16143    5                 CASE (%SUBEXEC) ;
     4775    16144    5                    IF DUMP_.ADDR# = TOP$TCP.STATS.LOAD_ADDR(0)
     4776    16145    6                    THEN DO ;
     4777    16146    6                            DUMP_LINE.EDIT_NAME# =
     4778    16147    6                                    TOP$TCP.STATS.EDIT_NAME(0) ;
     4779    16148    6                            DUMP_TYPE = %TEST_PAGE ;
     4780    16149    6                            TP_STATS_INX = TP_STATS_INX + 1 ;
     4781    16150    6                         END /* then */ ;
     4782    16151    5                    ELSE /* Do Nothing */ ;
     4783    16152    5                 CASE (%TEST_PAGE) ;
     4784    16153    5                    IF DUMP_.ADDR# =
     4785    16154    5                            TOP$TCP.STATS.LOAD_ADDR(TP_STATS_INX + 1)
     4786    16155    6                    THEN DO ;
     4787    16156    6                            DUMP_LINE.EDIT_NAME# =
     4788    16157    6                                    TOP$TCP.STATS.EDIT_NAME(TP_STATS_INX+1) ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:187  
     4789    16158    6                            TP_STATS_INX = TP_STATS_INX + 1 ;
     4790    16159    6                         END /* then */ ;
     4791    16160    5                    ELSE /* Do Nothing */ ;
     4792    16161    5              END /* CASE */ ;
     4793    16162    4         ELSE /* Do Nothing */ ;
     4794    16163    4         DUMP_ADDR_TEMP = BITBIN (DUMP_) ;
     4795    16164    4         CALL TOT$OCTASC (TEMP_ASCII_BUF, DUMP_ADDR_TEMP) ;
     4796    16165    4         DUMP_LINE.ACTUAL_ADDR# = SUBSTR (TEMP_ASCII_BUF, 0, 6) ;
     4797    16166    4         IF DUMP_TYPE = %TEST_PAGE
     4798    16167    4         THEN TP_BASE_REL_ADDR = DUMP_.ADDR# -
     4799    16168    4                    TOP$TCP.STATS.LOAD_ADDR(TP_STATS_INX) ;
     4800    16169    4         ELSE TP_BASE_REL_ADDR = DUMP_.ADDR# - TOT$ECP.SUBEXEC.ADDRESS ;
     4801    16170    4         CALL TOT$OCTASC (TEMP_ASCII_BUF, TP_BASE_REL_ADDR) ;
     4802    16171    4         DUMP_LINE.RELATIVE_ADDR# = SUBSTR (TEMP_ASCII_BUF, 6, 6) ;
     4803    16172    5         DO DUMP_WORD_INX = 0 TO OCT_WORDS_PER_LINE - 1 ;
     4804    16173    5            CALL TOT$OCTASC (TEMP_ASCII_BUF, DUMP$ -> DUMP_WORD_OCT) ;
     4805    16174    5            DUMP_LINE.DUMP_OUTPUT_.OCT_WORD_ASC#(DUMP_WORD_INX) =
     4806    16175    5                    TEMP_ASCII_BUF ;
     4807    16176    5            DUMP$ = PINCRW (DUMP$, 1) ;
     4808    16177    5         END ;
     4809    16178    4         CALL M$WRITE (WRITE_DUMP) ALTRET (WRITE_ERR);
     4810    16179    4      END /* do */ ;
     4811    16180    3      RETURN ;
     4812    16181    3   WRITE_ERR:
     4813    16182    3      CALL TOX$WARN (B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR);
     4814    16183    3      RETURN;
     4815    16184
     4816    16185        /* END EXECUTE_DUMP */
     4817    16186        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:188  
     4818    16187    3   GET_BCD_BUFFER: PROC ;
     4819    16188
     4820    16189    4      DCL DUMP_HDR_INX               UBIN WORD ALIGNED ;
     4821    16190    4      DCL 1 RCW                      ALIGNED,
     4822    16191    4            2 RCD_LGTH#              UBIN (18) UNAL,
     4823    16192    4            2 *                      UBIN (18) UNAL ;
     4824    16193    4      DCL RCW_ REDEF RCW UBIN WORD ALIGNED ;
     4825    16194    4      DCL OFFSET                     UBIN WORD ALIGNED ;
     4826    16195    4      DCL SUM                        UBIN WORD ALIGNED ;
     4827    16196    4      DCL BCD_BUF_INX                UBIN WORD ALIGNED ;
     4828    16197
     4829    16198        /* Code */
     4830    16199
     4831    16200    4      BCD_BUF = '0'B ;
     4832    16201    4      DUMP_HDR_INX = 0 ;
     4833    16202    4      BCD_BUF_INX = 0 ;
     4834    16203    4      SUM = 0 ;
     4835    16204    5      DO WHILE (DUMP_HDR_INX < DUMP_HDR_SIZE) ;
     4836    16205    5         RCW_ = DUMP_HDR$ -> DUMP_WORD_OCT ;
     4837    16206    6         DO OFFSET = 1 TO RCW.RCD_LGTH# ;
     4838    16207    6            DUMP_HDR$ = PINCRW (DUMP_HDR$, 1) ;
     4839    16208    6            BCD_BUF(BCD_BUF_INX) = DUMP_HDR$ -> DUMP_WORD_OCT ;
     4840    16209    6            BCD_BUF_INX = BCD_BUF_INX + 1 ;
     4841    16210    6         END /* DO */ ;
     4842    16211    5         SUM = SUM + RCW.RCD_LGTH# ;
     4843    16212    5         DUMP_HDR$ = PINCRW (DUMP_HDR$, 1) ;
     4844    16213    5         DUMP_HDR_INX = DUMP_HDR_INX + RCW.RCD_LGTH# + 1 ;
     4845    16214    5      END /* WHILE */ ;
     4846    16215    4      DUMP_HDR_SIZE = SUM * 6 ;
     4847    16216    4      RETURN ;
     4848    16217
     4849    16218    4   END GET_BCD_BUFFER ;
     4850    16219        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:189  
     4851    16220    3   BREAK_HDR_LINE: PROC ;
     4852    16221
     4853    16222    4      DCL 1 CRLF_ CONSTANT CALIGNED,
     4854    16223    4            2 CR# CHAR (1) UNAL INIT (BITASC ('015'O)),
     4855    16224    4            2 LF# CHAR (1) UNAL INIT (BITASC ('012'O)) ;
     4856    16225    4      DCL CRLF REDEF CRLF_ CHAR (2) CALIGNED ;
     4857    16226    4      DCL CRLF_INDEX UBIN (36) ALIGNED ;
     4858    16227    4      DCL DUMP_HDR_INDEX UBIN (36) ALIGNED ;
     4859    16228    4      DCL LINE_LGTH      UBIN (36) ;
     4860    16229
     4861    16230        /* Code */
     4862    16231
     4863    16232           /* Get first non CRLF character to print */
     4864    16233    4      DUMP_HDR_INDEX = 0 ;
     4865    16234    4      CALL INDEX (CRLF_INDEX,
     4866    16235    4              CRLF,
     4867    16236    4              ASCII_BUF,
     4868    16237    4              DUMP_HDR_INDEX) ;
     4869    16238    5      DO WHILE (DUMP_HDR_INDEX = CRLF_INDEX) ;
     4870    16239    5         DUMP_HDR_INDEX = DUMP_HDR_INDEX + 2 ;
     4871    16240    5         CALL INDEX (CRLF_INDEX,
     4872    16241    5                 CRLF,
     4873    16242    5                 ASCII_BUF,
     4874    16243    5                 DUMP_HDR_INDEX) ;
     4875    16244    5      END /* WHILE */ ;
     4876    16245           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:190  
     4877    16246           /* Loop through and print all parts of the message */
     4878    16247    5      DO WHILE (DUMP_HDR_INDEX < DUMP_HDR_SIZE) ;
     4879    16248              /* Set up message part length */
     4880    16249    5         IF CRLF_INDEX < DUMP_HDR_SIZE
     4881    16250    5         THEN LINE_LGTH = CRLF_INDEX - DUMP_HDR_INDEX ;
     4882    16251    5         ELSE LINE_LGTH = DUMP_HDR_SIZE - DUMP_HDR_INDEX ;
     4883    16252
     4884    16253              /* Frame and output message part */
     4885    16254    5         WRITE_HDR_LINE.BUF_ = VECTOR (SUBSTR (ASCII_BUF,
     4886    16255    5                 DUMP_HDR_INDEX,
     4887    16256    5                 LINE_LGTH)) ;
     4888    16257    5         CALL M$WRITE (WRITE_HDR_LINE) ;
     4889    16258
     4890    16259              /* Get next non CRLF character to print */
     4891    16260    5         DUMP_HDR_INDEX = DUMP_HDR_INDEX + LINE_LGTH ;
     4892    16261    5         CALL INDEX (CRLF_INDEX,
     4893    16262    5                 CRLF,
     4894    16263    5                 ASCII_BUF,
     4895    16264    5                 DUMP_HDR_INDEX) ;
     4896    16265    6         DO WHILE (DUMP_HDR_INDEX = CRLF_INDEX) ;
     4897    16266    6            DUMP_HDR_INDEX = DUMP_HDR_INDEX + 2 ;
     4898    16267    6            CALL INDEX (CRLF_INDEX,
     4899    16268    6                    CRLF,
     4900    16269    6                    ASCII_BUF,
     4901    16270    6                    DUMP_HDR_INDEX) ;
     4902    16271    6         END /* WHILE */ ;
     4903    16272    5      END /* WHILE */ ;
     4904    16273    4      RETURN ;
     4905    16274
     4906    16275    4   END BREAK_HDR_LINE ;
     4907    16276
     4908    16277    3   END EXECUTE_DUMP ;
     4909    16278        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:191  
     4910    16279    2   CLOSE_DUMP_RECEPTICLE: PROC ;
     4911    16280
     4912    16281        /* Code */
     4913    16282
     4914    16283    3      IF DCBADDR (DCBNUM (M$DUMP)) -> F$DCB.FCD#
     4915    16284    3      THEN CALL M$CLOSE (CLOSE_DUMP) ;
     4916    16285    3      ELSE /* Dump file or device is not currently open. */ ;
     4917    16286    3      RETURN ;
     4918    16287
     4919    16288    3   END CLOSE_DUMP_RECEPTICLE ;
     4920    16289    2   END TOP$MME_WRDUMP ;
     4921    16290        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:192  
     4922    16291        /*I* NAME:         BUILD_SCTWRK
     4923    16292        CALL:         CALL BUILD_SCTWRK (TCX, DC, PW2, B17F, B13F, BIT12F, QR, SCTWDS_BUILT)
     4924    16293             INTERFACE:
     4925    16294             INPUT:        TCX = index into TOP$TCP for test page
     4926    16295                           DEVICE_CODE = GCOS 6 bit device code
     4927    16296                            P_MMEWD2(bits 0-17) = address of SCTWRK buffer in subexec
     4928    16297             OUTPUT:       SCTWRK buffer in subexec filled in
     4929    16298             DESCRIPTION:  Merely fills in SCTWRK according to the defined
     4930    16299                           BASED structure ;  see code for the details.
     4931    16300        */
     4932    16301
     4933    16302    1   BUILD_SCTWRK: PROC (TCX, P_MMEWD2, BIT17FLAG, BIT13FLAG, BIT12FLAG, Q_REG,
             16302            SCTWDS_BUILT) ;
     4934    16303
     4935    16304    2      DCL BIT17FLAG   BIT (1) CALIGNED ;
     4936    16305    2      DCL BIT13FLAG   BIT (1) CALIGNED ;
     4937    16306    2      DCL BIT12FLAG   BIT (1) CALIGNED ;
     4938    16307    2      DCL Q_REG       BIT (36) ALIGNED ;
     4939    16308    2      DCL 1 Q_REG_    REDEF Q_REG ALIGNED,
     4940    16309    2            2 TAPE_URC_FLAG# BIT (1) UNAL,
     4941    16310    2            2 * BIT (5) UNAL,
     4942    16311    2            2 TAPE_ICC,
     4943    16312    2              3 FORMAT# BIT (1) UNAL,
     4944    16313    2              3 OLD_FORMAT,
     4945    16314    2                4 IOM# UBIN (5) UNAL,
     4946    16315    2                4 CHAN# UBIN (6) UNAL,
     4947    16316    2              3 NEW_FORMAT REDEF OLD_FORMAT,
     4948    16317    2                4 IOM# UBIN (3) UNAL,
     4949    16318    2                4 CHAN# UBIN (8) UNAL,
     4950    16319    2            2 * BIT (6) UNAL,
     4951    16320    2            2 URC_ICC,
     4952    16321    2              3 FORMAT# BIT (1) UNAL,
     4953    16322    2              3 OLD_FORMAT,
     4954    16323    2                4 IOM# UBIN (5) UNAL,
     4955    16324    2                4 CHAN# UBIN (6) UNAL,
     4956    16325    2              3 NEW_FORMAT REDEF OLD_FORMAT,
     4957    16326    2                4 IOM# UBIN (3) UNAL,
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:193  
     4958    16327    2                4 CHAN# UBIN (8) UNAL ;
     4959    16328    2      DCL 1 CONTROLLER_SCT BASED ALIGNED,
     4960    16329    2            2 W0# BIT (36) ALIGNED,
     4961    16330    2            2 W1# BIT (36) ALIGNED,
     4962    16331    2            2 W2# BIT (36) ALIGNED,
     4963    16332    2            2 W3# BIT (36) ALIGNED ;
     4964    16333    2      DCL 1 DEVICE_SCT BASED ALIGNED,
     4965    16334    2            2 W0# BIT (36) ALIGNED,
     4966    16335    2            2 W1# BIT (36) ALIGNED,
     4967    16336    2            2 W2# BIT (36) ALIGNED,
     4968    16337    2            2 W3# BIT (36) ALIGNED ;
     4969    16338    2      DCL DV_SCT$ PTR ;
     4970    16339    2      DCL 1 SCT_PTR REDEF DV_SCT$,
     4971    16340    2            2 ADDR# UBIN (18) UNAL,
     4972    16341    2            2 SEGID# UBIN (18) UNAL ;
     4973    16342    2      DCL TCX UBIN WORD ALIGNED ;
     4974    16343    2      DCL P_MMEWD2 UBIN WORD ALIGNED ;
     4975    16344    2      DCL 1 MME_W2 REDEF P_MMEWD2 ALIGNED,
     4976    16345    2            2 ADDR# UBIN (18) UNAL,
     4977    16346    2            2 * UBIN (18) UNAL ;
     4978    16347    2      DCL CN_SCT$  PTR ;
     4979    16348    2      DCL 1 CSCT_PTR REDEF CN_SCT$,
     4980    16349    2            2 ADDR# UBIN (18) UNAL,
     4981    16350    2            2 SEGID# UBIN (18) UNAL ;
     4982    16351    2      DCL SCTWRK$ PTR ;
     4983    16352    2      DCL SCTWDS_BUILT BIT (1) CALIGNED ;
     4984    16353        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:194  
     4985    16354        /* Code */
     4986    16355
     4987    16356    2      SCTWRK$ = PINCRW (IS$, MME_W2.ADDR#) ;
     4988    16357    2      SCTWRK$ -> SCTWRK = '0'B ;
     4989    16358        /* SET THE IO CONTROLLER TYPE IOM, IOP, OR IMX  */
     4990    16359    3      DO CASE (TOT$ECP.BOOT_CPU_TYPE) ;
     4991    16360    3         CASE (%DPS90#,%DPS90XA#) ;
     4992    16361    3            SCTWRK$ -> SCTWRK.IOC_TYPE# = %IOP#;
     4993    16362    3         CASE (%DPS8000#) ;
     4994    16363    3            SCTWRK$ -> SCTWRK.IOC_TYPE# = %IMX#;
     4995    16364    3         CASE (ELSE) ;
     4996    16365    3            SCTWRK$ -> SCTWRK.IOC_TYPE# = %IOM#;
     4997    16366    3      END /* CASE */ ;
     4998    16367    2      DV_SCT$ = ADDR (TOP$SCT.DV(TCX)) ;
     4999    16368    2      CN_SCT$ = ADDR (TOP$SCT.CN(TCX)) ;
     5000    16369    2      IF TOP$TCP.TEST_TYPE(TCX) = 'ITR'
     5001    16370    2      THEN SCTWRK$ -> SCTWRK.SCT_ADR# = CSCT_PTR.ADDR# ;
     5002    16371    2      ELSE SCTWRK$ -> SCTWRK.SCT_ADR# = SCT_PTR.ADDR# ;
     5003    16372    2      SCTWRK$ -> SCTWRK.ALTSCT_ADR# = 0 ;
     5004    16373    2      SCTWRK$ -> SCTWRK.XBICC# = 0 ;
     5005    16374    2      SCTWRK$ -> SCTWRK.GCOS_TYPE_CODE# = TOP$TCP.DEVICE_CODE(TCX) ;
     5006    16375    2      SCTWRK$ -> SCTWRK.CSCT_ADR# = CSCT_PTR.ADDR# ;
     5007    16376    2      SCTWRK$ -> SCTWRK.MPC_SCT_ADR# = CSCT_PTR.ADDR# ;
     5008    16377    2      SCTWRK$ -> SCTWRK.MPC_INDEX# = TCX ;
     5009    16378    2      IF TOP$TCP.FIRMWARE.TYPE(TCX) = 'M610' OR
     5010    16379    2              TOP$TCP.FIRMWARE.TYPE(TCX) = 'TPUR'
     5011    16380    2      THEN SCTWRK$ -> SCTWRK.CRCST_1.BIT8# = '1'B ;
     5012    16381    2      ELSE ;
     5013    16382    2      IF (TOP$TCP.FIRMWARE.TYPE(TCX) = 'D500') OR
     5014    16383    2              (TOP$TCP.FIRMWARE.TYPE(TCX) = 'MSP8')
     5015    16384    2      THEN SCTWRK$ -> SCTWRK.CRCST_1.BIT7# = '1'B ;
     5016    16385    2      ELSE ;
     5017    16386    2      IF TOP$TCP.TEST_TYPE(TCX) = 'ITR'
     5018    16387    2      THEN SCTWRK$ -> SCTWRK.CRCST_3.BIT9# = '1'B ;
     5019    16388    2      ELSE /* MPC will not be allocated */ ;
     5020    16389           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:195  
     5021    16390    2      IF TOP$TCP.TEST_TYPE(TCX) = 'MDR' OR
     5022    16391    2              TOP$TCP.TEST_TYPE(TCX) = 'ITR'
     5023    16392    3      THEN DO ;
     5024    16393    3              Q_REG = '0'B ;
     5025    16394    3              IF TOP$TCP.FIRMWARE.TYPE(TCX) = 'TPUR'
     5026    16395    4              THEN DO ;
     5027    16396    4                      Q_REG_.TAPE_URC_FLAG# = '1'B ;
     5028    16397    4                      IF TOP$TCP.FICCDD.FORMAT#(TCX)
     5029    16398    5                      THEN DO ;
     5030    16399    5                              Q_REG_.TAPE_ICC.FORMAT# = '1'B ;
     5031    16400    5                              Q_REG_.TAPE_ICC.NEW_FORMAT.IOM# =
     5032    16401    5                                      TOP$TCP.FICCDD.IOM#(TCX) ;
     5033    16402    5                              Q_REG_.TAPE_ICC.NEW_FORMAT.CHAN# =
     5034    16403    5                                      TOP$TCP.FICCDD.CHAN#(TCX) ;
     5035    16404    5                           END ;
     5036    16405    5                      ELSE DO ;
     5037    16406    5                              Q_REG_.TAPE_ICC.OLD_FORMAT.IOM# =
     5038    16407    5                                      TOP$TCP.FICCDD.IOM#(TCX) ;
     5039    16408    5                              Q_REG_.TAPE_ICC.OLD_FORMAT.CHAN# =
     5040    16409    5                                      TOP$TCP.FICCDD.CHAN#(TCX) ;
     5041    16410    5                           END ;
     5042    16411    4                   END /* THEN */ ;
     5043    16412    3              ELSE /* not a tape unit record controller */ ;
     5044    16413    3           END /* THEN */ ;
     5045    16414    2      ELSE /* not an MDR or ITR */ ;
     5046    16415           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:196  
     5047    16416    2      IF SCTWDS_BUILT
     5048    16417    3      THEN DO ;
     5049    16418    3              SCTWRK$ -> SCTWRK.CRCST_0 = CN_SCT$ -> CONTROLLER_SCT.W0# ;
     5050    16419    3              SCTWRK$ -> SCTWRK.SCT_0 = DV_SCT$ -> DEVICE_SCT.W0# ;
     5051    16420    3              SCTWRK$ -> SCTWRK.SCT_1 = DV_SCT$ -> DEVICE_SCT.W1# ;
     5052    16421    3           END ;
     5053    16422    3      ELSE DO ;
     5054    16423    3              SCTWRK$ -> SCTWRK.SCT_0.BIT17# = TOP$TCP.SCT.BIT17(TCX) ;
     5055    16424    3              SCTWRK$ -> SCTWRK.SCT_0.SPEED# = TOP$TCP.SCT.BIT13(TCX) ;
     5056    16425    3              SCTWRK$ -> SCTWRK.SCT_0.BIT12# = TOP$TCP.SCT.BIT12(TCX) ;
     5057    16426    3              IF  ( TOP$TCP.FIRMWARE.TYPE(TCX) = 'NONE' )  OR
     5058    16427    3                      ( TOP$TCP.FIRMWARE.TYPE(TCX) = 'IPR5' )
     5059    16428    3              THEN IF TOP$TCP.DEVICE_CODE(TCX) = %DPR42
     5060    16429    4                 THEN DO ;
     5061    16430    4                         SCTWRK$ -> SCTWRK.SCT_0.DEV_TYPE# = TOP$TCP.DEVICE_CODE(TCX) ;
     5062    16431    4                         SCTWRK$ -> SCTWRK.SCT_0.BIT17# = '1'B ;
     5063    16432    4                      END ;
     5064    16433    3                 ELSE ;
     5065    16434    3              ELSE SCTWRK$ -> SCTWRK.CRCST_0.VOLATILE_FW# = '1'B ;
     5066    16435    3              SCTWRK$ -> SCTWRK.CRCST_0.MPC# = '1'B ;
     5067    16436    3           END ;
     5068    16437    3      DO SELECT (TOP$TCP.MPC_MODEL (TCX));
     5069    16438    3         SELECT ('URPEURP', 'URP8011', 'URP8012', 'URP8013');
     5070    16439    3         SCTWRK$ -> SCTWRK.CTLR_TYPE# = %EURC# ;
     5071    16440    3         SELECT ('MSP8021', 'MSP8022');
     5072    16441    3         SCTWRK$ -> SCTWRK.CTLR_TYPE# = %DAU#;
     5073    16442    3         SELECT ('MSP3881', 'MSP3885', 'MTP8215', 'MTP8216', 'MTP8218',
     5074    16443    3                 'MSP3993', 'MSP3994',
     5075    16444    3                 'MSP3882', 'MSP3886', 'MTP8225', 'MTP8226', 'MTP8228',
     5076    16445    3                 'MSP3991', 'MSP3992', 'MSS8080', 'MSS8090' );
     5077    16446    3         SCTWRK$ -> SCTWRK.CTLR_TYPE# = %FIPS#;
     5078    16447    3         SELECT ( 'URP8600', 'URP8601', 'URP8602' ) ;
     5079    16448    3         SCTWRK$ -> SCTWRK.CTLR_TYPE# = %IPC# ;
     5080    16449    3         SELECT (ELSE);
     5081    16450    3      SCTWRK$ -> SCTWRK.CTLR_TYPE# = %MPC_CTLR#;
     5082    16451    3      END /* DO SELECT */;
     5083    16452    2      RETURN ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:197  
     5084    16453
     5085    16454    2   END BUILD_SCTWRK ;
     5086    16455        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:198  
     5087    16456        /*I* NAME:         MATCH_ICC
     5088    16457             CALL:         CALL MATCH_ICC(ICC,TCX) ;
     5089    16458             INTERFACE:
     5090    16459             INPUT:        ICC = IOM and channel number
     5091    16460             OUTPUT:       TCX = index into TOP$TCP for test page
     5092    16461             DESCRIPTION:  Searches the ICC field in TOP$TCP for a match
     5093    16462                           with ICC and returns I.
     5094    16463        */
     5095    16464
     5096    16465    1   MATCH_ICC: PROC (ICC,TCX) ;
     5097    16466
     5098    16467    2      DCL TCX UBIN(36) ;
     5099    16468    2      DCL ICC         UBIN (11) ;
     5100    16469
     5101    16470        /* Code */
     5102    16471
     5103    16472    2      TCX = 0 ;
     5104    16473    3      DO WHILE TCX < 8 ;
     5105    16474    3         IF TOP$TCP.ICC.ICC#(TCX) = ICC
     5106    16475    3         THEN RETURN ;
     5107    16476    3         ELSE TCX = TCX + 1 ;
     5108    16477    3      END ;
     5109    16478
     5110    16479    2      TOP_ERROR_CODE.ERR# = %E$BADICC ;
     5111    16480    2      CALL TOX$SCREECH (TOP_ERROR_CODE) ;
     5112    16481
     5113    16482    2   END MATCH_ICC ;
     5114    16483        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:199  
     5115    16484        /*I* NAME:         MATCH_SCT_ADR
     5116    16485             CALL:         CALL MATCH_SCT_ADR(NEW_SCT_ADR,TCX) ;
     5117    16486             INTERFACE:
     5118    16487             INPUT:        NEW_SCT_ADR = a SCT address from the subexec
     5119    16488             OUTPUT:       TCX = index into TOP$TCP for the test page.
     5120    16489             DESCRTIPTION: Given a SCT address, searches for a match against
     5121    16490                           both the device and controller SCT address saved
     5122    16491                           in TOP$TCP and returns I.  Also either sets
     5123    16492                           or resets the CONTROLLER_IO flag in TOP$TCP
     5124    16493                           depending on which SCT address matched up.  This
     5125    16494                           flag determines the device number when building
     5126    16495                           IDCWs.
     5127    16496
     5128    16497                           To start with, the device and controller SCT addresses
     5129    16498                           are phony entities which are sent back to the subexec
     5130    16499                           via SCTWRK and which the subexecs use in turn to
     5131    16500                           identify either device or controller I/O.
     5132    16501        */
     5133    16502        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:200  
     5134    16503    1   MATCH_SCT_ADR: PROC (NEW_SCT_ADR,TCX) ;
     5135    16504
     5136    16505    2      DCL TCX UBIN WORD ALIGNED ;
     5137    16506    2      DCL NEW_SCT_ADR UBIN HALF HALIGNED ;
     5138    16507
     5139    16508        /* Code */
     5140    16509
     5141    16510    2      TCX = 0 ;
     5142    16511    3      DO WHILE TCX < 8 ;
     5143    16512    3         IF TOP$TCP.ADR.SCT(TCX) = NEW_SCT_ADR
     5144    16513    4         THEN DO ;
     5145    16514    4                 TOP$TCP.IO.CONTROLLER(TCX) = '0'B ;
     5146    16515    4                 RETURN ;
     5147    16516    4              END ;
     5148    16517    3         ELSE TCX = TCX + 1 ;
     5149    16518    3      END ;
     5150    16519
     5151    16520    2      TCX = 0 ;
     5152    16521    3      DO WHILE TCX < 8 ;
     5153    16522    3         IF TOP$TCP.ADR.CSCT(TCX) = NEW_SCT_ADR
     5154    16523    4         THEN DO ;
     5155    16524    4                 TOP$TCP.IO.CONTROLLER(TCX) = '1'B ;
     5156    16525    4                 RETURN ;
     5157    16526    4              END ;
     5158    16527    3         ELSE TCX = TCX + 1 ;
     5159    16528    3      END ;
     5160    16529
     5161    16530    2      TOP_ERROR_CODE.ERR# = %E$BADSCTADR ;
     5162    16531    2      CALL TOX$SCREECH (TOP_ERROR_CODE) ;
     5163    16532
     5164    16533    2   END MATCH_SCT_ADR ;
     5165    16534        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:201  
     5166    16535        /*I* NAME:         TOP$TIO_DONE
     5167    16536             CALL:         CALL TOP$TIO_DONE ;
     5168    16537             INTERFACE:    RETURN_TIO_STATUS
     5169    16538                           PAY_TIO_CC
     5170    16539                           RETURN_SPECIAL_STATUS
     5171    16540             INPUT:        TOP$EVENT_ID = Event ID of test I/O completing
     5172    16541                           TOP$STATUS = 2 words of status fetched from TCB in
     5173    16542                                       Event Handler
     5174    16543                           Uses information in IO_ENTRY and TOP$TCP
     5175    16544             OUTPUT:       Status returned to test page and Courtesy Call paid
     5176    16545             DESCRIPTION:  This is the routine that handles the termination of
     5177    16546                           a test I/O, returning status to the test page and
     5178    16547                           paying a Courtesy Call.  It is also here that the
     5179    16548                           special handling of ITR interrupts is done.(See
     5180    16549                           documentation in TOP$MME_TESTIO for a description
     5181    16550                           of the overall picture of ITR I/O.)
     5182    16551
     5183    16552                           First, the test page index TCX into TOP$TCP is
     5184    16553                           calculated from the Event ID.  We need to make 2 passes
     5185    16554                           at this.  First the Event ID Base for normal
     5186    16555                           I/O is subracted from TOP$EVENT_ID, and the result
     5187    16556                           checked to see if it is between 0 and 7.  If it is
     5188    16557                           it is assumed that this I/O completion is a
     5189    16558                           terminate interrupt and the TERMINATE flag is set.
     5190    16559                           If it isn't between 0 and 7, then is is assumed
     5191    16560                           that the I/O completion is a special interrupt
     5192    16561                           and the Event ID Base for special interrupts is
     5193    16562                           subracted from TOP$EVENT_ID to yield TCX, and
     5194    16563                           the internal flag TERMINATE is reset.
     5195    16564
     5196    16565                           Now terminate and special interrupts are handled
     5197    16566                           separately.  Terminates are handled first
     5198    16567                           (TERMINATE = 1).  Within the logic for terminate
     5199    16568                           interrupts, terminate interrupts for normal I/O
     5200    16569                           and ITR I/O are handled separately.  The field
     5201    16570                           ITR_INTERRUPT in TOP$TCP indicates whether
     5202    16571                           this terminate interrupt is for an ITR or not.
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:202  
     5203    16572                           If it isn't, status is returned and the Courtesy
     5204    16573                           Call paid.  If it is an ITR terminate interrupt,
     5205    16574                           the status is checked for "ready" status.  The
     5206    16575                           termination status is fetched from the DCB for the
     5207    16576                           page and stored in TERMINATE_STATUS.  A pointer
     5208    16577                           TERMINATE_STATUS$ is built to TERMINATE_STATUS and
     5209    16578                           Major and Minor status fields are checked for 0.
     5210    16579                           If they are the terminate interrupt occurred flag
     5211    16580                           TOP$TCP.TERMINATE_OCCURRED(TCX) is set and
     5212    16581                           nothing else is done at this time.  This flag is
     5213    16582                           used in TOP$MME_HUNGTM for timing out special
     5214    16583                           interrupts.
     5215    16584
     5216    16585                           If the terminate status for the ITR is not ready,
     5217    16586                           it is returned immediately to the subexec ; stauts
     5218    16587                           is returned and a Courtesy Call paid.
     5219    16588
     5220    16589                           The second half of the routine takes care of
     5221    16590                           special interrupts(which come only from ITR I/O).
     5222    16591                           If TOP$TCP.ITR_INTERRUPT(TCX) is set, indicating
     5223    16592                           that this is ITR I/O, the special status is returned
     5224    16593                           and the Courtesy Call is paid.  If the flag is
     5225    16594                           not set, the special is ignored.
     5226    16595        */
     5227    16596
     5228    16597    1   TOP$TIO_DONE: PROC ;
     5229    16598
     5230    16599    2      DCL TCX SBIN WORD ALIGNED ;
     5231    16600    2      DCL TD_DCB$ PTR ;
     5232    16601    2      DCL TERMSTAT$ PTR ;
     5233    16602           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:203  
     5234    16603        /* Code */
     5235    16604
     5236    16605    3      DO INHIBIT ;
     5237    16606    3         TCX = TOP$EVENT_ID - %TIO_EVENT_BASE ;
     5238    16607    3         IF 0 <= TCX & TCX < 8
     5239    16608    3         THEN IF TOP$TCP.IO.ITR_INTERRUPT(TCX)
     5240    16609    4            THEN DO ;
     5241    16610    4                    TD_DCB$ = DCBADDR (TOP$TCP.DCB#(TCX)) ;
     5242    16611    4                    TERMSTAT$ = ADDR (TD_DCB$ -> F$DCB.TDSTAT#) ;
     5243    16612    4                    IF TERMSTAT$ -> STATUS.MAJOR# = '0000'B &
     5244    16613    4                            TERMSTAT$ -> STATUS.MINOR# = '000000'B
     5245    16614    4                    THEN TOP$TCP.IO.TERMINATED(TCX) = '1'B ;
     5246    16615    5                    ELSE DO ;
     5247    16616    5                            CALL RETURN_TIO_STATUS ;
     5248    16617    5                            CALL PAY_TIO_CC ;
     5249    16618    5                         END /* ELSE */ ;
     5250    16619    4                 END /* THEN */ ;
     5251    16620    4            ELSE DO ;
     5252    16621    4                    CALL RETURN_TIO_STATUS ;
     5253    16622    4                    CALL PAY_TIO_CC ;
     5254    16623    4                 END /* ELSE */ ;
     5255    16624    4         ELSE DO ;
     5256    16625    4                 TCX = TOP$EVENT_ID - %ITR_EVENT_BASE ;
     5257    16626    4                 IF TOP$TCP.IO.ITR_INTERRUPT(TCX)
     5258    16627    5                 THEN DO ;
     5259    16628    5                         CALL RETURN_SPECIAL_STATUS ;
     5260    16629    5                         CALL PAY_TIO_CC ;
     5261    16630    5                      END /* THEN */ ;
     5262    16631    4                 ELSE /* ignore all other special interrupts */ ;
     5263    16632    4              END /* ELSE */ ;
     5264    16633    3      END /* INHIBIT */ ;
     5265    16634    2      RETURN ;
     5266    16635
     5267    16636        /*END TOF$TIO_DONE*/
     5268    16637        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:204  
     5269    16638        /*I* NAME:         RETURN_TIO_STATUS
     5270    16639             CALL:         CALL RETURN_TIO_STATUS ;
     5271    16640             INTERFACE:
     5272    16641             INPUT:        Nothing explicitly
     5273    16642             OUTPUT:       Status is returned to the subexec
     5274    16643             DESCRIPTION:  Two words of status are returned to the status buffer
     5275    16644                           specified in the I/O Entry.  TD_DCB$ is a pointer
     5276    16645                           built to the DCB for the test page using the DCB
     5277    16646                           number in TOP$TCP.  The address of the status
     5278    16647                           buffer is stored in word 9 of the I/O entry.  If
     5279    16648                           is zero, no status is returned.  Otherwise, the
     5280    16649                           address is used to build POLTS_STATUS$ which
     5281    16650                           points to the location in the subexec where status
     5282    16651                           is to be returned.  The status is then moved from
     5283    16652                           the DCB to the subexec.  A check is made to see
     5284    16653                           if CP6 returned lost interrupt status, and if it
     5285    16654                           did, it is changed to GCOS lost interrupt status.
     5286    16655                           CP6 indicates lost interrupt status by returning
     5287    16656                           a Major status of '1000'B.  The GCOS lost
     5288    16657                           interrupt status is phonied up as shown in the code.
     5289    16658
     5290    16659                           Finally, a value of '200000'O is subtracted from
     5291    16660                           the address residue in the second word of the
     5292    16661                           status in order to make that address residue
     5293    16662                           relative to the base of the ISR.  It is returned
     5294    16663                           relative to the base of the Working Space, and the
     5295    16664                           ISR base is at '200000'O relative to the base of
     5296    16665                           the Working Space.
     5297    16666        */
     5298    16667        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:205  
     5299    16668    2   RETURN_TIO_STATUS: PROC ;
     5300    16669
     5301    16670    3      DCL POLTS_STATUS$ PTR ;
     5302    16671    3      DCL TD_DCB$ PTR ;
     5303    16672    3      DCL EXT_STATUS$ PTR ALIGNED;
     5304    16673    3      DCL EXT_STATUS (0:7) UBIN WORD BASED;
     5305    16674
     5306    16675        /* Code */
     5307    16676
     5308    16677    3      IF IO_ENTRY.W9.STATUS_ADR#(TCX) = 0
     5309    16678    3      THEN /* zero --- don't return STATUS */ ;
     5310    16679    4      ELSE DO ;
     5311    16680    4              TD_DCB$ = DCBADDR (TOP$TCP.DCB#(TCX)) ;
     5312    16681    4              POLTS_STATUS$ = PINCRW (IS$, IO_ENTRY.W9.STATUS_ADR#(TCX)) ;
     5313    16682    4              POLTS_STATUS$ -> STATUS = TD_DCB$ -> F$DCB.TDSTAT# ;
     5314    16683    4              IF POLTS_STATUS$ -> STATUS.MAJOR# = '1000'B
     5315    16684    5              THEN DO ;
     5316    16685    5                      POLTS_STATUS$ -> STATUS.MAJOR# = '1001'B ;
     5317    16686    5                      POLTS_STATUS$ -> STATUS.TERMINATION_INDICATOR# = '1'B ;
     5318    16687    5                      POLTS_STATUS$ -> STATUS.LOST_INTERRUPT# = '1'B ;
     5319    16688    5                      POLTS_STATUS$ -> STATUS.INTERRUPT_INDICATOR# = '1'B ;
     5320    16689    5                   END ;
     5321    16690    4              ELSE POLTS_STATUS$ -> STATUS.LOST_INTERRUPT# = '0'B ;
     5322    16691    4              POLTS_STATUS$ -> STATUS.ABORT_INDICATOR# = '0'B ;
     5323    16692    4              IF (TOT$ECP.BOOT_CPU_TYPE = %DPS8000#)
     5324    16693    4              THEN /* DO NOTHING */;
     5325    16694    4              ELSE /* SUBTRACT 200000 OCTAL */
     5326    16695    4                 POLTS_STATUS$ -> STATUS.DATA_ADDRESS_RESIDUE# =
     5327    16696    4                         POLTS_STATUS$->STATUS.DATA_ADDRESS_RESIDUE# - BITBIN('200000'O
             16696                                  ) ;
     5328    16697    4              IF IO_ENTRY.W1.EXTSTAT_ADR#(TCX) = 0
     5329    16698    4              THEN /* do not return extended status */;
     5330    16699    5              ELSE DO;
     5331    16700    5                      EXT_STATUS$ = PINCRW (IS$, IO_ENTRY.W1.EXTSTAT_ADR#(TCX));
     5332    16701    5                      IF TD_DCB$->F$DCB.TDEXTST$->EXT_STATUS (0) = 0
     5333    16702    5                      THEN EXT_STATUS$->EXT_STATUS = '0'B /* OS hasn't given us any */;
     5334    16703    5                      ELSE EXT_STATUS$->EXT_STATUS = TD_DCB$->F$DCB.TDEXTST$->
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:206  
             16703                               EXT_STATUS;
     5335    16704    5                   END /* ELSE */;
     5336    16705    4           END ;
     5337    16706    3      RETURN ;
     5338    16707
     5339    16708    3   END RETURN_TIO_STATUS ;
     5340    16709        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:207  
     5341    16710        /*I* NAME:         PAY_TIO_CC
     5342    16711             CALL:         CALL PAY_TIO_CC ;
     5343    16712             INTERFACE:    TOK$COURTESY_CALL
     5344    16713             INPUT:        None explicitly
     5345    16714             OUTPUT:       Courtesy Call paid to subexec to address stored
     5346    16715                           in I/O entry.
     5347    16716             DESCRIPTION:  The Courtesy Call address is stored in word 9 of
     5348    16717                           ther I/O entry which was saved in IO_ENTRY..  If
     5349    16718                           it is zero, no Courtesy Call is paid.  If it is
     5350    16719                           non zero, an entry pointer, CC$, is built pointing
     5351    16720                           to the Courtesy Call routine.  TOK$COURTESY_CALL
     5352    16721                           is called which will actually transfer into the
     5353    16722                           Courtesy Call and set things up so that the MME
     5354    16723                           GEENDC will return control here when the subexec
     5355    16724                           is done with the Courtesy Call processing.
     5356    16725        */
     5357    16726
     5358    16727    2   PAY_TIO_CC: PROC ;
     5359    16728
     5360    16729    3      DCL CC$ PTR ;
     5361    16730
     5362    16731        /* Code */
     5363    16732
     5364    16733    3      TOP$TCP.IO.CC_PAID(TCX) = '1'B ;
     5365    16734    3      IF IO_ENTRY.W9.CC_ADR#(TCX) = 0
     5366    16735    3      THEN /* No courtesy call needed */ ;
     5367    16736    4      ELSE DO ;
     5368    16737    4              CC$ = PINCRW (IS$, IO_ENTRY.W9.CC_ADR#(TCX)) ;
     5369    16738    4              CALL TOK$COURTESY_CALL (CC$) ;
     5370    16739    4           END ;
     5371    16740    3      RETURN ;
     5372    16741
     5373    16742    3   END PAY_TIO_CC ;
     5374    16743        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:208  
     5375    16744        /*I* NAME:         RETURN_SPECIAL_STATUS
     5376    16745             CALL:         CALL RETURN_SPECIAL_STATUS ;
     5377    16746             INTERFACE:
     5378    16747             INPUT:        None explicitly
     5379    16748             OUTPUT:       Status returned to the subexec
     5380    16749             DESCRIPTION:  The special status from ITR I/O is returned to
     5381    16750                           the subexec if the status buffer address stored
     5382    16751                           in word 9 of the I/O entry stored in IO_ENTRY.
     5383    16752                           If this address is zero, no status is returned.
     5384    16753                           Otherwise, the pointer POLTS_STATUS$ is built
     5385    16754                           pointing to the status buffer in the subexec
     5386    16755                           and the 2 words of special status stored in
     5387    16756                           TOP$STATUS are returned.  These 2 words were
     5388    16757                           fetched from the TCB Event frame by the Event
     5389    16758                           Handler and passed on to the Dispatcher.
     5390    16759
     5391    16760                           Note:  The portion of the CP-6 monitor that
     5392    16761                           returns the Special Interrupts to the user event
     5393    16762                           routine must remove the "Sync" or "Presence" bit
     5394    16763                           ('400000000000'O) from the special interrupt
     5395    16764                           status.  If this is not done, the special interrupt
     5396    16765                           status will look like a termination interrupt
     5397    16766                           status.  As of E02C, this coding was present for
     5398    16767                           IOM, IOP, and IMX based platforms.
     5399    16768        */
     5400    16769        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:209  
     5401    16770    2   RETURN_SPECIAL_STATUS: PROC ;
     5402    16771
     5403    16772    3      DCL POLTS_STATUS$              PTR ;
     5404    16773
     5405    16774        /* Code */
     5406    16775
     5407    16776    3      IF IO_ENTRY.W9.STATUS_ADR#(TCX) = 0
     5408    16777    3      THEN /* No need to return status. */ ;
     5409    16778    4      ELSE DO ;
     5410    16779    4              POLTS_STATUS$ = PINCRW (IS$, IO_ENTRY.W9.STATUS_ADR#(TCX)) ;
     5411    16780    4              POLTS_STATUS$ -> STATUS = TOP$STATUS ;
     5412    16781    4           END /* ELSE */ ;
     5413    16782    3      RETURN ;
     5414    16783
     5415    16784    3   END RETURN_SPECIAL_STATUS ;
     5416    16785    2   END TOP$TIO_DONE ;
     5417    16786    1   END TOP$POLTS ;

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:210  
--  Include file information  --

   TD$STRUCT.:E05TOU  is referenced.
   TO_PERR_C.:E05TOU  is referenced.
   TOT_TOLTS_M.:E05TOU  is referenced.
   TOT_RQSTS_E.:E05TOU  is referenced.
   NI_DATA_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure TOP$POLTS.

   Procedure TOP$POLTS requires 5747 words for executable code.
   Procedure TOP$POLTS requires 3044 words of local(AUTO) storage.

    No errors detected in file TOP$POLTS.:E05TSI    .

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:211  

 Object Unit name= TOP$POLTS                                  File name= TOP$POLTS.:E05TOU
 UTS= JUL 30 '97 06:30:09.44 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$MCACNFG
    2   DCB   even  none     0      0  M$CNFGFILE
    3   DCB   even  none     0      0  M$DEVCNFG
    4   DCB   even  none     0      0  M$DUMP
    5   Data  even  none 10986  25352  TOP$POLTS
    6  RoData even  UTS    225    341  TOP$POLTS
    7   Proc  even  none  5747  13163  TOP$POLTS
    8  RoData even  none    68    104  TOP$POLTS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     7      0   yes            yes      Std        4  TOP$POLTS
     7    720                  yes      Std        4  TOP$POLTS_IO

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    5      0  TOP$EVENT_ID                       5      1  TOP$STATUS
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:212  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 TOX$SCREECH
         yes           Std       1 TOX$ERROR
         yes           Std       1 TOX$WARN
         yes           Std       1 TOK$COURTESY_CALL
         yes           Std       0 TOT$CONSOLE_OUT
         yes           Std       0 TOT$CONSOLE_IN
         yes           Std       3 TOT$BCD_ASCII
         yes           Std       2 TOT$OCTASC
                       nStd      0 X66_AUTO_4
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$MCACNFG                             M$CNFGFILE
     M$DEVCNFG                             M$DUMP                                B$JIT$
     B$TCB$                                CONSOLE_FPT                           READ_IO
     TOP$SCT                               TOT$DMC                               TOT$ECP
     TOT$TOLTS                             B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:213  


        1        1        /*M* TOP$POLTS     TOLTS Peripheral On-Line Testing System */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* PLM=3,DCI=6,SQB=N,PRB=N,DTI=5,ENI=0,AND=Y,ECI=0,CSU=3,DIN=3,
        9        9             CTI=8,CRM=109,CRT=1,NLB=N,NTB=Y,MCL=110 */
       10       10
       11       11        /*P* NAME:         TOP$POLTS
       12       12             PURPOSE:      POLTS and MOLTS MME Service Routines
       13       13             DESCRIPTION:  TOP$POLTS contains the MME Service Routines for
       14       14                           Slave Mode POLTS and Slave Mode MOLTS.    These
       15       15                           MMEs primarily  deal  with  doing test  I/O  to
       16       16                           peripherals under test.
       17       17                           The MMEs are fielded by the TOLTS Fault Handler
       18       18                           and are parceled out this routine for servicing.
       19       19             LAST UPDATE:  87-09-10
       20       20             REFERENCE:    CP-6 Release E00
       21       21                           TDM-ITD-62  (CP6 POLTS SERVICE ROUTINES)
       22       22                           TDM-ITD-80  (CP6 MOLTS SERVICE ROUTINES)
       23       23        */
       24       24        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:214  
       25       25        /*F* NAME:         TOP$POLTS
       26       26             PURPOSE:      POLTS and MOLTS MME Service Routines
       27       27             DESCRIPTION:  MME Service Routines for the following:
       28       28
       29       29                           MME ALCMCA
       30       30                           MME ALLOCR
       31       31                           MME ASGPAT
       32       32                           MME CHANTM
       33       33                           MME DEALCP
       34       34                           MME EXPDEV
       35       35                           MME GETCSC
       36       36                           MME GETLIN
       37       37                           MME HUNGTM
       38       38                           MME IOCONS
       39       39                           MME IPCWDT
       40       40                           MME LODIMG
       41       41                           MME LODVFC
       42       42                           MME LPWDT
       43       43                           MME PACMAN
       44       44                           MME POINIT
       45       45                           MME PRTRAN
       46       46                           MME RELLNK
       47       47                           MME RLSMPC
       48       48                           MME RLSPAT
       49       49                           MME SCTCMP
       50       50                           MME SETPUN
       51       51                           MME TESTIO
       52       52                           MME UNSPEC
       53       53                           MME WRDUMP
       54       54        */
       55       55        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:215  
       56       56        TOP$POLTS: PROC (MME, MREG, MME_INSTR$, RETURN_DELTA) ;

     56  7 000000   000000 700200 xent  TOP$POLTS    TSX0  ! X66_AUTO_4
         7 000001   005744 000004                    ZERO    3044,4

       57       57
       58       58        /* Include Files */
       59       59
       60       60           %INCLUDE B$JIT ;
       61      663           %INCLUDE B_ERRORS_C ;
       62     1790           %INCLUDE CP_6 ;
       63     7349           %INCLUDE CP_6_SUBS ;
       64     7889           %INCLUDE NI_DATA_C ;
       65     8002           %INCLUDE TOT_RQSTS_E ;
       66     8044           %INCLUDE TOT_TOLTS_M ;
       67     9162           %INCLUDE TO_PERR_C ;
       68     9747           %INCLUDE TD$STRUCT ;
       69     9848
       70     9849        /* Parameters */
       71     9850
       72     9851           %MME ;
       73     9872           %MREG ;
       74     9894           %MME_INSTR$ ;
       75     9897           %RETURN_DELTA ;
       76     9900
       77     9901        /* Data Control Blocks */
       78     9902
       79     9903    1      DCL M$MCACNFG DCB ;
       80     9904    1      DCL M$CNFGFILE DCB ;
       81     9905    1      DCL M$DEVCNFG  DCB ;
       82     9906    1      DCL M$DUMP     DCB ;
       83     9907           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:216  
       84     9908        /* External Variables */
       85     9909
       86     9910    1      DCL B$JIT$         PTR SYMREF ;
       87     9911    1      DCL B$TCB$         PTR SYMREF ;
       88     9912           %FPT_WRITE (FPTN = CONSOLE_FPT,
       89     9913                       STCLASS = SYMREF) ;
       90     9944           %FPT_READ (FPTN = READ_IO,
       91     9945                      STCLASS = SYMREF) ;
       92     9984    1      DCL TOP$EVENT_ID   UBIN WORD STATIC SYMDEF INIT (0) ;
       93     9985    1      DCL 1 TOP$SCT (0:7) SYMREF,
       94     9986    1            2 CN,
       95     9987    1              3 WD0#     UBIN WORD,
       96     9988    1              3 WD1#     UBIN WORD,
       97     9989    1              3 WD2#     UBIN WORD,
       98     9990    1              3 WD3#     UBIN WORD,
       99     9991    1            2 DV,
      100     9992    1              3 WD0#     UBIN WORD,
      101     9993    1              3 WD1#     UBIN WORD,
      102     9994    1              3 WD2#     UBIN WORD,
      103     9995    1              3 WD3#     UBIN WORD ;
      104     9996    1      DCL TOP$STATUS     BIT (72) STATIC SYMDEF INIT ('0'B) ;
      105     9997           %TOT$DMC (STCLASS = SYMREF) ;
      106    10031           %TOP$TCP (STCLASS = "BASED (TOT$DMC.TOP$TCP.PTR$)") ;
      107    10119           %TOT$ECP (STCLASS = SYMREF) ;
      108    10168           %TOT$TOLTS (STCLASS = SYMREF) ;
      109    10189           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:217  
      110    10190        /* Variable Declarations */
      111    10191
      112    10192           %B$ALT ;
      113    10200           %B$TCB ;
      114    10203           %F$DCB ;
      115    10260    1      DCL 1 FICCDD BASED ALIGNED,
      116    10261    1            2 FLAG# BIT (3) UNAL,
      117    10262    1            2 FORMAT# BIT (1) UNAL,
      118    10263    1            2 IOM# UBIN (2) UNAL,
      119    10264    1            2 CHAN# UBIN (6) UNAL,
      120    10265    1            2 DEV# UBIN (6) UNAL,
      121    10266    1            2 TEST_TYPE# UBIN (6) UNAL,
      122    10267    1            2 * BIT (12) UNAL ;
      123    10268           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:218  
      124    10269    1      DCL 1 IO_ENTRY (0:7) STATIC ALIGNED,
      125    10270    1            2 W0# UBIN WORD ALIGNED,
      126    10271    1            2 W1,
      127    10272    1              3 EXTSTAT_ADR# UBIN HALF HALIGNED,
      128    10273    1              3 LOWER# UBIN HALF HALIGNED,
      129    10274    1            2 W2,
      130    10275    1              3 * BIT (2) UNAL,
      131    10276    1              3 MDS_DEV_IDCW_LIST BIT (1) UNAL,
      132    10277    1              3 SCT_ADR# UBIN (15) UNAL,
      133    10278    1              3 * BIT (18) UNAL,
      134    10279    1            2 W3# UBIN WORD ALIGNED,
      135    10280    1            2 W4,
      136    10281    1              3 DEVICE_CMD# BIT (6) UNAL,
      137    10282    1              3 * BIT (12) UNAL,
      138    10283    1              3 IO_CMD# UBIN (6) UNAL,
      139    10284    1              3 * BIT (6) UNAL,
      140    10285    1              3 RECORD_COUNT# UBIN (6) UNAL,
      141    10286    1            2 W5# BIT (36) ALIGNED,
      142    10287    1            2 W6,
      143    10288    1              3 DCW_PTR_2ND# UBIN HALF HALIGNED,
      144    10289    1              3 * BIT (18) UNAL,
      145    10290    1            2 W7,
      146    10291    1              3 DEVICE_CMD# BIT (6) UNAL,
      147    10292    1              3 PRESELECT_INDEX# UBIN (12) UNAL,
      148    10293    1              3 IO_CMD# UBIN (6) UNAL,
      149    10294    1              3 * BIT (5) UNAL,
      150    10295    1              3 BIT29# BIT (1) UNAL,
      151    10296    1              3 RECORD_COUNT# UBIN (6) UNAL,
      152    10297    1            2 W8,
      153    10298    1              3 DCW_PTR# UBIN HALF HALIGNED,
      154    10299    1              3 * BIT (18) UNAL,
      155    10300    1            2 W9,
      156    10301    1              3 STATUS_ADR# UBIN HALF HALIGNED,
      157    10302    1              3 CC_ADR# UBIN HALF HALIGNED,
      158    10303    1            2 W10# UBIN WORD ALIGNED ;
      159    10304           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:219  
      160    10305           %IS$ (STCLASS = CONSTANT) ;
      161    10319    1      DCL 1 MPC (0:7) STATIC,
      162    10320    1            2 W0# UBIN WORD ALIGNED INIT (0*0),
      163    10321    1            2 W1# UBIN WORD ALIGNED INIT (0*0),
      164    10322    1            2 W2# UBIN WORD ALIGNED INIT (0*0),
      165    10323    1            2 W3# UBIN WORD ALIGNED INIT (0*0) ;
      166    10324    1      DCL 1 SCTWRK BASED ALIGNED,
      167    10325    1            2 SCT_ADR# UBIN HALF HALIGNED,
      168    10326    1            2 * BIT (6) UNAL,
      169    10327    1            2 XBICC# UBIN (12) UNAL,
      170    10328    1            2 ALTSCT_ADR# UBIN HALF HALIGNED,
      171    10329    1            2 GCOS_TYPE_CODE# UBIN (6) UNAL,
      172    10330    1            2 * BIT (12) UNAL,
      173    10331    1            2 CSCT_ADR# UBIN HALF HALIGNED,
      174    10332    1            2 IOC_TYPE# BIT (4) UNAL,
      175    10333    1            2 CTLR_TYPE# BIT (4) UNAL,
      176    10334    1            2 * BIT (1) UNAL,
      177    10335    1            2 XIOC_TYPE# BIT (4) UNAL,
      178    10336    1            2 XCTLR_TYPE# BIT (4) UNAL,
      179    10337    1            2 * BIT (1) UNAL,
      180    10338    1            2 MPC_SCT_ADR# UBIN HALF HALIGNED,
      181    10339    1            2 MPC_INDEX# UBIN HALF HALIGNED,
      182    10340    1            2 CRCST_0,
      183    10341    1              3 * BIT (1) UNAL,
      184    10342    1              3 VOLATILE_FW# BIT (1) UNAL,
      185    10343    1              3 MPC# BIT (1) UNAL,
      186    10344    1              3 * BIT (33) UNAL,
      187    10345    1            2 CRCST_1,
      188    10346    1              3 * BIT (7) UNAL,
      189    10347    1              3 BIT7# BIT (1) UNAL,
      190    10348    1              3 BIT8# BIT (1) UNAL,
      191    10349    1              3 * BIT (27) UNAL,
      192    10350    1            2 * BIT (36) UNAL,
      193    10351    1            2 CRCST_3,
      194    10352    1              3 * BIT (9) UNAL,
      195    10353    1              3 BIT9# BIT (1) UNAL,
      196    10354    1              3 * BIT (26) UNAL,
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:220  
      197    10355    1            2 SCT_0,
      198    10356    1              3 DEV_TYPE# UBIN (6) UNAL,
      199    10357    1              3 DEV_NUMBER# UBIN (6) UNAL,
      200    10358    1              3 BIT12# BIT (1) UNAL,
      201    10359    1              3 SPEED# BIT (1) UNAL,
      202    10360    1              3 BIT14# BIT (1) UNAL,
      203    10361    1              3 * BIT (2) UNAL,
      204    10362    1              3 BIT17# BIT (1) UNAL,
      205    10363    1              3 * BIT (18) UNAL,
      206    10364    1            2 SCT_1,
      207    10365    1              3 * BIT (15) UNAL,
      208    10366    1              3 MODULES# UBIN (3) UNAL,
      209    10367    1              3 * BIT (3) UNAL,
      210    10368    1              3 DENSITIES# BIT (4) UNAL,
      211    10369    1              3 * BIT (11) UNAL ;
      212    10370    1      DCL 1 STATUS BASED ALIGNED,
      213    10371    1            2 TERMINATION_INDICATOR# BIT (1) UNAL,
      214    10372    1            2 POWER_OFF# BIT (1) UNAL,
      215    10373    1            2 MAJOR# BIT (4) UNAL,
      216    10374    1            2 MINOR# BIT (6) UNAL,
      217    10375    1            2 ODD_WORD_COUNT# BIT (1) UNAL,
      218    10376    1            2 * BIT (1) UNAL,
      219    10377    1            2 MARKER_INTERRUPT# BIT (1) UNAL,
      220    10378    1            2 LOST_INTERRUPT# BIT (1) UNAL,
      221    10379    1            2 INTERRUPT_INDICATOR# BIT (1) UNAL,
      222    10380    1            2 ABORT_INDICATOR# BIT (1) UNAL,
      223    10381    1            2 IOM_CHANNEL# UBIN (3) UNAL,
      224    10382    1            2 IOM_CENTRAL# UBIN (3) UNAL,
      225    10383    1            2 ADDR_EXTENSION# BIT (6) UNAL,
      226    10384    1            2 RECORD_COUNT_RESIDUE# UBIN (6) UNAL,
      227    10385    1            2 DATA_ADDRESS_RESIDUE# UBIN (18) UNAL,
      228    10386    1            2 CHARACTER_COUNT# UBIN (3) UNAL,
      229    10387    1            2 READ_WRITE_FLAG# BIT (1) UNAL,
      230    10388    1            2 ACTION_CODE# BIT (2) UNAL,
      231    10389    1            2 WORD_COUNT_RESIDUE# UBIN (12) UNAL ;
      232    10390           %VLP_ERRCODE (FPTN = TOP_ERROR_CODE,
      233    10391                         FCG  = 'TO',
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:221  
      234    10392                         MID  = 'P',
      235    10393                         SEV  = 0) ;
      236    10438           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:222  
      237    10439        /* Function Parameter Tables */
      238    10440
      239    10441           %FPT_TDCLOSE (FPTN = TDCLOSE_FPT) ;
      240    10455           %FPT_TDIO   (FPTN = TDIO_FPT) ;
      241    10472           %FPT_TDOPEN (FPTN = TDOPEN_FPT) ;
      242    10489
      243    10490        /* External Entries */
      244    10491
      245    10492    1      DCL TOK$COURTESY_CALL ENTRY (1) ;
      246    10493    1      DCL TOT$CONSOLE_IN    ENTRY ;
      247    10494    1      DCL TOT$CONSOLE_OUT   ENTRY ;
      248    10495    1      DCL TOT$OCTASC        ENTRY (2) ;
      249    10496    1      DCL TOT$BCD_ASCII     ENTRY (3) ;
      250    10497    1      DCL TOX$ERROR         ENTRY (1) ;
      251    10498    1      DCL TOX$WARN          ENTRY (1) ;
      252    10499    1      DCL TOX$SCREECH       ENTRY (1) ;
      253    10500           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:223  
      254    10501        /*D* NAME:         TOP$POLTS
      255    10502             ENTRY:
      256    10503             CALL:         CALL TOP$POLTS(MME,MREG,MME_INSTR$,RETURN_DELTA) ;
      257    10504             INTERFACE:    TOP$MME_ALCMCA
      258    10505                           TOP$MME_ALLOCR
      259    10506                           TOP$MME_ASGPAT
      260    10507                           TOP$MME_CHANTM
      261    10508                           TOP$MME_DEALCP
      262    10509                           TOP$MME_EXPDEV
      263    10510                           TOP$MME_GETCSC
      264    10511                           TOP$MME_GETLIN
      265    10512                           TOP$MME_HUNGTM
      266    10513                           TOP$MME_IOCONS
      267    10514                           TOP$MME_IPCWDT
      268    10515                           TOP$MME_LODIMG
      269    10516                           TOP$MME_LODVFC
      270    10517                           TOP$MME_LPWDT
      271    10518                           TOP$MME_PACMAN
      272    10519                           TOP$MME_POINIT
      273    10520                           TOP$MME_PRTRAN
      274    10521                           TOP$MME_RELEAS
      275    10522                           TOP$MME_RELLNK
      276    10523                           TOP$MME_RELMPC
      277    10524                           TOP$MME_RLSPAT
      278    10525                           TOP$MME_SCTCMP
      279    10526                           TOP$MME_TESTIO
      280    10527                           TOP$MME_UNSPEC
      281    10528                           TOP$MME_WRDUMP
      282    10529             INPUT:        MME is a 6 word structure containing the first
      283    10530                           6 words following the MME instruction in the subexec.
      284    10531
      285    10532                           MREG is a structure of the normal GMAP visible
      286    10533                           registers at the time of the MME.
      287    10534
      288    10535                           MME_INSTR$ is a pointer to the MME instruction.
      289    10536
      290    10537             OUTPUT:       RETURN_DELTA indicates how many instructions pass
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:224  
      291    10538                           the MME instruction to return to.
      292    10539             DESCRIPTION:  The main portion of the routine merely decodes
      293    10540                           the MME number(bits 0-17 of the instruction)
      294    10541                           and calls the appropriate MME Service Routine.
      295    10542                           All Service Routines return to this main level
      296    10543                           for return to the subexec via the Fault Hanlder,
      297    10544                           TOF$FAULTS.
      298    10545
      299    10546                           See documentation for the respective MME Service
      300    10547                           Routines for more detail.
      301    10548        */
      302    10549        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:225  
      303    10550        /* MAIN PROGRAM */
      304    10551
      305    10552    2      DO CASE (-MME.INST.NO) ;

  10552  7 000002   200003 470500                    LDP0    @MME,,AUTO
         7 000003   000000 236100                    LDQ     0,,PR0
         7 000004   000022 732000                    QRS     18
         7 000005   000027 676000 xsym               ERQ     B_VECTNIL+23
         7 000006   000003 136007                    SBLQ    3,DL
         7 000007   000144 116007                    CMPQ    100,DL
         7 000010   000012 602006 7                  TNC     s:10552+8,QL
         7 000011   000717 710000 7                  TRA     s:10612
         7 000012   000172 710000 7                  TRA     s:10556
         7 000013   000227 710000 7                  TRA     s:10559
         7 000014   000245 710000 7                  TRA     s:10561
         7 000015   000717 710000 7                  TRA     s:10612
         7 000016   000717 710000 7                  TRA     s:10612
         7 000017   000260 710000 7                  TRA     s:10563
         7 000020   000717 710000 7                  TRA     s:10612
         7 000021   000717 710000 7                  TRA     s:10612
         7 000022   000270 710000 7                  TRA     s:10565
         7 000023   000717 710000 7                  TRA     s:10612
         7 000024   000306 710000 7                  TRA     s:10567
         7 000025   000321 710000 7                  TRA     s:10569
         7 000026   000345 710000 7                  TRA     s:10572
         7 000027   000363 710000 7                  TRA     s:10574
         7 000030   000406 710000 7                  TRA     s:10578
         7 000031   000416 710000 7                  TRA     s:10580
         7 000032   000465 710000 7                  TRA     s:10586
         7 000033   000717 710000 7                  TRA     s:10612
         7 000034   000474 710000 7                  TRA     s:10588
         7 000035   000717 710000 7                  TRA     s:10612
         7 000036   000717 710000 7                  TRA     s:10612
         7 000037   000545 710000 7                  TRA     s:10594
         7 000040   000571 710000 7                  TRA     s:10597
         7 000041   000717 710000 7                  TRA     s:10612
         7 000042   000601 710000 7                  TRA     s:10599
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:226  
         7 000043   000611 710000 7                  TRA     s:10601
         7 000044   000717 710000 7                  TRA     s:10612
         7 000045   000717 710000 7                  TRA     s:10612
         7 000046   000717 710000 7                  TRA     s:10612
         7 000047   000717 710000 7                  TRA     s:10612
         7 000050   000717 710000 7                  TRA     s:10612
         7 000051   000717 710000 7                  TRA     s:10612
         7 000052   000635 710000 7                  TRA     s:10604
         7 000053   000717 710000 7                  TRA     s:10612
         7 000054   000717 710000 7                  TRA     s:10612
         7 000055   000717 710000 7                  TRA     s:10612
         7 000056   000717 710000 7                  TRA     s:10612
         7 000057   000667 710000 7                  TRA     s:10607
         7 000060   000677 710000 7                  TRA     s:10609
         7 000061   000717 710000 7                  TRA     s:10612
         7 000062   000717 710000 7                  TRA     s:10612
         7 000063   000717 710000 7                  TRA     s:10612
         7 000064   000717 710000 7                  TRA     s:10612
         7 000065   000717 710000 7                  TRA     s:10612
         7 000066   000717 710000 7                  TRA     s:10612
         7 000067   000717 710000 7                  TRA     s:10612
         7 000070   000717 710000 7                  TRA     s:10612
         7 000071   000717 710000 7                  TRA     s:10612
         7 000072   000431 710000 7                  TRA     s:10582
         7 000073   000717 710000 7                  TRA     s:10612
         7 000074   000717 710000 7                  TRA     s:10612
         7 000075   000376 710000 7                  TRA     s:10576
         7 000076   000512 710000 7                  TRA     s:10591
         7 000077   000717 710000 7                  TRA     s:10612
         7 000100   000717 710000 7                  TRA     s:10612
         7 000101   000717 710000 7                  TRA     s:10612
         7 000102   000717 710000 7                  TRA     s:10612
         7 000103   000717 710000 7                  TRA     s:10612
         7 000104   000717 710000 7                  TRA     s:10612
         7 000105   000717 710000 7                  TRA     s:10612
         7 000106   000717 710000 7                  TRA     s:10612
         7 000107   000717 710000 7                  TRA     s:10612
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:227  
         7 000110   000717 710000 7                  TRA     s:10612
         7 000111   000717 710000 7                  TRA     s:10612
         7 000112   000717 710000 7                  TRA     s:10612
         7 000113   000717 710000 7                  TRA     s:10612
         7 000114   000717 710000 7                  TRA     s:10612
         7 000115   000717 710000 7                  TRA     s:10612
         7 000116   000717 710000 7                  TRA     s:10612
         7 000117   000717 710000 7                  TRA     s:10612
         7 000120   000717 710000 7                  TRA     s:10612
         7 000121   000717 710000 7                  TRA     s:10612
         7 000122   000717 710000 7                  TRA     s:10612
         7 000123   000717 710000 7                  TRA     s:10612
         7 000124   000717 710000 7                  TRA     s:10612
         7 000125   000717 710000 7                  TRA     s:10612
         7 000126   000717 710000 7                  TRA     s:10612
         7 000127   000717 710000 7                  TRA     s:10612
         7 000130   000717 710000 7                  TRA     s:10612
         7 000131   000717 710000 7                  TRA     s:10612
         7 000132   000717 710000 7                  TRA     s:10612
         7 000133   000717 710000 7                  TRA     s:10612
         7 000134   000717 710000 7                  TRA     s:10612
         7 000135   000444 710000 7                  TRA     s:10584
         7 000136   000717 710000 7                  TRA     s:10612
         7 000137   000717 710000 7                  TRA     s:10612
         7 000140   000717 710000 7                  TRA     s:10612
         7 000141   000717 710000 7                  TRA     s:10612
         7 000142   000717 710000 7                  TRA     s:10612
         7 000143   000717 710000 7                  TRA     s:10612
         7 000144   000717 710000 7                  TRA     s:10612
         7 000145   000717 710000 7                  TRA     s:10612
         7 000146   000717 710000 7                  TRA     s:10612
         7 000147   000717 710000 7                  TRA     s:10612
         7 000150   000717 710000 7                  TRA     s:10612
         7 000151   000717 710000 7                  TRA     s:10612
         7 000152   000717 710000 7                  TRA     s:10612
         7 000153   000717 710000 7                  TRA     s:10612
         7 000154   000717 710000 7                  TRA     s:10612
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:228  
         7 000155   000156 710000 7                  TRA     s:10554

      306    10553    2         CASE (%ALCMCA) ;

      307    10554    2            CALL TOP$MME_ALCMCA (MREG.A,MREG.Q,MREG.X0,RETURN_DELTA);

  10554  7 000156   200006 236100                    LDQ     @RETURN_DELTA,,AUTO
         7 000157   200014 756100                    STQ     TERMSTAT$+1,,AUTO
         7 000160   200004 236100                    LDQ     @MREG,,AUTO
         7 000161   200013 756100                    STQ     TD_DCB$+1,,AUTO
         7 000162   000005 036003                    ADLQ    5,DU
         7 000163   200012 756100                    STQ     TCX+1,,AUTO
         7 000164   200004 236100                    LDQ     @MREG,,AUTO
         7 000165   000004 036003                    ADLQ    4,DU
         7 000166   200011 756100                    STQ     @RETURN_DELTA+3,,AUTO
         7 000167   000725 701000 7                  TSX1    TOP$MME_ALCMCA
         7 000170   000000 011000                    NOP     0
         7 000171   000717 710000 7                  TRA     s:10612

      308    10555    2         CASE (%ALLOCR) ;

      309    10556    2            CALL TOP$MME_ALLOCR (MME.WD_1,MME.WD_2,MME.WD_3,MME.WD_4,MREG.Q,

  10556  7 000172   200006 236100                    LDQ     @RETURN_DELTA,,AUTO
         7 000173   200021 756100                    STQ     DUMP_WORD_INX+1,,AUTO
         7 000174   200004 236100                    LDQ     @MREG,,AUTO
         7 000175   000000 036000 8                  ADLQ    0
         7 000176   200020 756100                    STQ     EXT_STATUS$+1,,AUTO
         7 000177   200004 236100                    LDQ     @MREG,,AUTO
         7 000200   000001 036003                    ADLQ    1,DU
         7 000201   200017 756100                    STQ     TD_DCB$+1,,AUTO
         7 000202   200004 236100                    LDQ     @MREG,,AUTO
         7 000203   400000 036007                    ADLQ    -131072,DL
         7 000204   200016 756100                    STQ     POLTS_STATUS$+1,,AUTO
         7 000205   200004 236100                    LDQ     @MREG,,AUTO
         7 000206   000005 036003                    ADLQ    5,DU
         7 000207   200015 756100                    STQ     @X2_REG+1,,AUTO
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:229  
         7 000210   200003 236100                    LDQ     @MME,,AUTO
         7 000211   000004 036003                    ADLQ    4,DU
         7 000212   200014 756100                    STQ     TERMSTAT$+1,,AUTO
         7 000213   200003 236100                    LDQ     @MME,,AUTO
         7 000214   000003 036003                    ADLQ    3,DU
         7 000215   200013 756100                    STQ     TD_DCB$+1,,AUTO
         7 000216   200003 236100                    LDQ     @MME,,AUTO
         7 000217   000002 036003                    ADLQ    2,DU
         7 000220   200012 756100                    STQ     TCX+1,,AUTO
         7 000221   200003 236100                    LDQ     @MME,,AUTO
         7 000222   000001 036003                    ADLQ    1,DU
         7 000223   200011 756100                    STQ     @RETURN_DELTA+3,,AUTO
         7 000224   001073 701000 7                  TSX1    TOP$MME_ALLOCR
         7 000225   000000 011000                    NOP     0
         7 000226   000717 710000 7                  TRA     s:10612

      310    10557    2                    MREG.X1,MREG.X2,MREG.X3,RETURN_DELTA) ;
      311    10558    2         CASE (%ASGPAT) ;

      312    10559    2            CALL TOP$MME_ASGPAT (MREG.X1,MREG.X2,MREG.X4,RETURN_DELTA) ;

  10559  7 000227   200006 236100                    LDQ     @RETURN_DELTA,,AUTO
         7 000230   200014 756100                    STQ     TERMSTAT$+1,,AUTO
         7 000231   200004 236100                    LDQ     @MREG,,AUTO
         7 000232   000002 036003                    ADLQ    2,DU
         7 000233   200013 756100                    STQ     TD_DCB$+1,,AUTO
         7 000234   200004 236100                    LDQ     @MREG,,AUTO
         7 000235   000001 036003                    ADLQ    1,DU
         7 000236   200012 756100                    STQ     TCX+1,,AUTO
         7 000237   200004 236100                    LDQ     @MREG,,AUTO
         7 000240   400000 036007                    ADLQ    -131072,DL
         7 000241   200011 756100                    STQ     @RETURN_DELTA+3,,AUTO
         7 000242   002623 701000 7                  TSX1    TOP$MME_ASGPAT
         7 000243   000000 011000                    NOP     0
         7 000244   000717 710000 7                  TRA     s:10612

      313    10560    2         CASE (%CHANTM) ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:230  

      314    10561    2            CALL TOP$MME_CHANTM (MREG.X4,MREG.A,RETURN_DELTA) ;

  10561  7 000245   200006 236100                    LDQ     @RETURN_DELTA,,AUTO
         7 000246   200013 756100                    STQ     TD_DCB$+1,,AUTO
         7 000247   200004 236100                    LDQ     @MREG,,AUTO
         7 000250   000004 036003                    ADLQ    4,DU
         7 000251   200012 756100                    STQ     TCX+1,,AUTO
         7 000252   200004 236100                    LDQ     @MREG,,AUTO
         7 000253   000002 036003                    ADLQ    2,DU
         7 000254   200011 756100                    STQ     @RETURN_DELTA+3,,AUTO
         7 000255   002650 701000 7                  TSX1    TOP$MME_CHANTM
         7 000256   000000 011000                    NOP     0
         7 000257   000717 710000 7                  TRA     s:10612

      315    10562    2         CASE (%DEALCP) ;

      316    10563    2            CALL TOP$MME_DEALCP (MREG.X1,RETURN_DELTA) ;

  10563  7 000260   200006 236100                    LDQ     @RETURN_DELTA,,AUTO
         7 000261   200012 756100                    STQ     TCX+1,,AUTO
         7 000262   200004 236100                    LDQ     @MREG,,AUTO
         7 000263   400000 036007                    ADLQ    -131072,DL
         7 000264   200011 756100                    STQ     @RETURN_DELTA+3,,AUTO
         7 000265   002745 701000 7                  TSX1    TOP$MME_DEALCP
         7 000266   000000 011000                    NOP     0
         7 000267   000717 710000 7                  TRA     s:10612

      317    10564    2         CASE (%EXPDEV) ;

      318    10565    2            CALL TOP$MME_EXPDEV (MREG.X1,MREG.A,MREG.Q,RETURN_DELTA) ;

  10565  7 000270   200006 236100                    LDQ     @RETURN_DELTA,,AUTO
         7 000271   200014 756100                    STQ     TERMSTAT$+1,,AUTO
         7 000272   200004 236100                    LDQ     @MREG,,AUTO
         7 000273   000005 036003                    ADLQ    5,DU
         7 000274   200013 756100                    STQ     TD_DCB$+1,,AUTO
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:231  
         7 000275   200004 236100                    LDQ     @MREG,,AUTO
         7 000276   000004 036003                    ADLQ    4,DU
         7 000277   200012 756100                    STQ     TCX+1,,AUTO
         7 000300   200004 236100                    LDQ     @MREG,,AUTO
         7 000301   400000 036007                    ADLQ    -131072,DL
         7 000302   200011 756100                    STQ     @RETURN_DELTA+3,,AUTO
         7 000303   002754 701000 7                  TSX1    TOP$MME_EXPDEV
         7 000304   000000 011000                    NOP     0
         7 000305   000717 710000 7                  TRA     s:10612

      319    10566    2         CASE (%GETCSC) ;

      320    10567    2            CALL TOP$MME_GETCSC (MREG.X1,MREG.X4,RETURN_DELTA) ;

  10567  7 000306   200006 236100                    LDQ     @RETURN_DELTA,,AUTO
         7 000307   200013 756100                    STQ     TD_DCB$+1,,AUTO
         7 000310   200004 236100                    LDQ     @MREG,,AUTO
         7 000311   000002 036003                    ADLQ    2,DU
         7 000312   200012 756100                    STQ     TCX+1,,AUTO
         7 000313   200004 236100                    LDQ     @MREG,,AUTO
         7 000314   400000 036007                    ADLQ    -131072,DL
         7 000315   200011 756100                    STQ     @RETURN_DELTA+3,,AUTO
         7 000316   003003 701000 7                  TSX1    TOP$MME_GETCSC
         7 000317   000000 011000                    NOP     0
         7 000320   000717 710000 7                  TRA     s:10612

      321    10568    2         CASE (%GETLIN) ;

      322    10569    2            CALL TOP$MME_GETLIN (MREG.A,MREG.Q,MREG.X3,MREG.X4,MREG.X1,

  10569  7 000321   200006 236100                    LDQ     @RETURN_DELTA,,AUTO
         7 000322   200016 756100                    STQ     POLTS_STATUS$+1,,AUTO
         7 000323   200004 236100                    LDQ     @MREG,,AUTO
         7 000324   400000 036007                    ADLQ    -131072,DL
         7 000325   200015 756100                    STQ     @X2_REG+1,,AUTO
         7 000326   200004 236100                    LDQ     @MREG,,AUTO
         7 000327   000002 036003                    ADLQ    2,DU
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:232  
         7 000330   200014 756100                    STQ     TERMSTAT$+1,,AUTO
         7 000331   200004 236100                    LDQ     @MREG,,AUTO
         7 000332   000000 036000 8                  ADLQ    0
         7 000333   200013 756100                    STQ     TD_DCB$+1,,AUTO
         7 000334   200004 236100                    LDQ     @MREG,,AUTO
         7 000335   000005 036003                    ADLQ    5,DU
         7 000336   200012 756100                    STQ     TCX+1,,AUTO
         7 000337   200004 236100                    LDQ     @MREG,,AUTO
         7 000340   000004 036003                    ADLQ    4,DU
         7 000341   200011 756100                    STQ     @RETURN_DELTA+3,,AUTO
         7 000342   003030 701000 7                  TSX1    TOP$MME_GETLIN
         7 000343   000000 011000                    NOP     0
         7 000344   000717 710000 7                  TRA     s:10612

      323    10570    2                    RETURN_DELTA) ;
      324    10571    2         CASE (%HUNGTM) ;

      325    10572    2            CALL TOP$MME_HUNGTM (MREG.A,MREG.Q,MREG.X1,RETURN_DELTA) ;

  10572  7 000345   200006 236100                    LDQ     @RETURN_DELTA,,AUTO
         7 000346   200014 756100                    STQ     TERMSTAT$+1,,AUTO
         7 000347   200004 236100                    LDQ     @MREG,,AUTO
         7 000350   400000 036007                    ADLQ    -131072,DL
         7 000351   200013 756100                    STQ     TD_DCB$+1,,AUTO
         7 000352   200004 236100                    LDQ     @MREG,,AUTO
         7 000353   000005 036003                    ADLQ    5,DU
         7 000354   200012 756100                    STQ     TCX+1,,AUTO
         7 000355   200004 236100                    LDQ     @MREG,,AUTO
         7 000356   000004 036003                    ADLQ    4,DU
         7 000357   200011 756100                    STQ     @RETURN_DELTA+3,,AUTO
         7 000360   003036 701000 7                  TSX1    TOP$MME_HUNGTM
         7 000361   000000 011000                    NOP     0
         7 000362   000717 710000 7                  TRA     s:10612

      326    10573    2         CASE (%IOCONS) ;

      327    10574    2            CALL TOP$MME_IOCONS (MREG.X1,MREG.A,RETURN_DELTA) ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:233  

  10574  7 000363   200006 236100                    LDQ     @RETURN_DELTA,,AUTO
         7 000364   200013 756100                    STQ     TD_DCB$+1,,AUTO
         7 000365   200004 236100                    LDQ     @MREG,,AUTO
         7 000366   000004 036003                    ADLQ    4,DU
         7 000367   200012 756100                    STQ     TCX+1,,AUTO
         7 000370   200004 236100                    LDQ     @MREG,,AUTO
         7 000371   400000 036007                    ADLQ    -131072,DL
         7 000372   200011 756100                    STQ     @RETURN_DELTA+3,,AUTO
         7 000373   003241 701000 7                  TSX1    TOP$MME_IOCONS
         7 000374   000000 011000                    NOP     0
         7 000375   000717 710000 7                  TRA     s:10612

      328    10575    2         CASE (%IPCWDT) ;

      329    10576    2            CALL TOP$MME_IPCWDT (MREG.X1,RETURN_DELTA) ;

  10576  7 000376   200006 236100                    LDQ     @RETURN_DELTA,,AUTO
         7 000377   200012 756100                    STQ     TCX+1,,AUTO
         7 000400   200004 236100                    LDQ     @MREG,,AUTO
         7 000401   400000 036007                    ADLQ    -131072,DL
         7 000402   200011 756100                    STQ     @RETURN_DELTA+3,,AUTO
         7 000403   003272 701000 7                  TSX1    TOP$MME_IPCWDT
         7 000404   000000 011000                    NOP     0
         7 000405   000717 710000 7                  TRA     s:10612

      330    10577    2         CASE (%LODIMG) ;

      331    10578    2            CALL TOP$MME_LODIMG (MREG.X1,RETURN_DELTA) ;

  10578  7 000406   200006 236100                    LDQ     @RETURN_DELTA,,AUTO
         7 000407   200012 756100                    STQ     TCX+1,,AUTO
         7 000410   200004 236100                    LDQ     @MREG,,AUTO
         7 000411   400000 036007                    ADLQ    -131072,DL
         7 000412   200011 756100                    STQ     @RETURN_DELTA+3,,AUTO
         7 000413   003363 701000 7                  TSX1    TOP$MME_LODIMG
         7 000414   000000 011000                    NOP     0
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:234  
         7 000415   000717 710000 7                  TRA     s:10612

      332    10579    2         CASE (%LODVFC) ;

      333    10580    2            CALL TOP$MME_LODVFC (MREG.X1,MREG.A,RETURN_DELTA) ;

  10580  7 000416   200006 236100                    LDQ     @RETURN_DELTA,,AUTO
         7 000417   200013 756100                    STQ     TD_DCB$+1,,AUTO
         7 000420   200004 236100                    LDQ     @MREG,,AUTO
         7 000421   000004 036003                    ADLQ    4,DU
         7 000422   200012 756100                    STQ     TCX+1,,AUTO
         7 000423   200004 236100                    LDQ     @MREG,,AUTO
         7 000424   400000 036007                    ADLQ    -131072,DL
         7 000425   200011 756100                    STQ     @RETURN_DELTA+3,,AUTO
         7 000426   003372 701000 7                  TSX1    TOP$MME_LODVFC
         7 000427   000000 011000                    NOP     0
         7 000430   000717 710000 7                  TRA     s:10612

      334    10581    2         CASE (%LPWDT) ;

      335    10582    2            CALL TOP$MME_LPWDT (MREG.X1,MREG.A,RETURN_DELTA) ;

  10582  7 000431   200006 236100                    LDQ     @RETURN_DELTA,,AUTO
         7 000432   200013 756100                    STQ     TD_DCB$+1,,AUTO
         7 000433   200004 236100                    LDQ     @MREG,,AUTO
         7 000434   000004 036003                    ADLQ    4,DU
         7 000435   200012 756100                    STQ     TCX+1,,AUTO
         7 000436   200004 236100                    LDQ     @MREG,,AUTO
         7 000437   400000 036007                    ADLQ    -131072,DL
         7 000440   200011 756100                    STQ     @RETURN_DELTA+3,,AUTO
         7 000441   003401 701000 7                  TSX1    TOP$MME_LPWDT
         7 000442   000000 011000                    NOP     0
         7 000443   000717 710000 7                  TRA     s:10612

      336    10583    2         CASE (%PACMAN) ;

      337    10584    2            CALL TOP$MME_PACMAN (MREG.A, MREG.Q, MREG.X2, MREG.X5, RETURN_DELTA) ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:235  

  10584  7 000444   200006 236100                    LDQ     @RETURN_DELTA,,AUTO
         7 000445   200015 756100                    STQ     @X2_REG+1,,AUTO
         7 000446   200004 236100                    LDQ     @MREG,,AUTO
         7 000447   000001 036000 8                  ADLQ    1
         7 000450   200014 756100                    STQ     TERMSTAT$+1,,AUTO
         7 000451   200004 236100                    LDQ     @MREG,,AUTO
         7 000452   000001 036003                    ADLQ    1,DU
         7 000453   200013 756100                    STQ     TD_DCB$+1,,AUTO
         7 000454   200004 236100                    LDQ     @MREG,,AUTO
         7 000455   000005 036003                    ADLQ    5,DU
         7 000456   200012 756100                    STQ     TCX+1,,AUTO
         7 000457   200004 236100                    LDQ     @MREG,,AUTO
         7 000460   000004 036003                    ADLQ    4,DU
         7 000461   200011 756100                    STQ     @RETURN_DELTA+3,,AUTO
         7 000462   003454 701000 7                  TSX1    TOP$MME_PACMAN
         7 000463   000000 011000                    NOP     0
         7 000464   000717 710000 7                  TRA     s:10612

      338    10585    2         CASE (%POINIT) ;

      339    10586    2            CALL TOP$MME_POINIT (MME_INSTR$,RETURN_DELTA) ;

  10586  7 000465   200006 236100                    LDQ     @RETURN_DELTA,,AUTO
         7 000466   200012 756100                    STQ     TCX+1,,AUTO
         7 000467   200005 236100                    LDQ     @MME_INSTR$,,AUTO
         7 000470   200011 756100                    STQ     @RETURN_DELTA+3,,AUTO
         7 000471   003772 701000 7                  TSX1    TOP$MME_POINIT
         7 000472   000000 011000                    NOP     0
         7 000473   000717 710000 7                  TRA     s:10612

      340    10587    2         CASE (%PRTRAN) ;

      341    10588    2            CALL TOP$MME_PRTRAN (MME.WD_1,MREG.X1,MREG.A,RETURN_DELTA) ;

  10588  7 000474   200006 236100                    LDQ     @RETURN_DELTA,,AUTO
         7 000475   200014 756100                    STQ     TERMSTAT$+1,,AUTO
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:236  
         7 000476   200004 236100                    LDQ     @MREG,,AUTO
         7 000477   000004 036003                    ADLQ    4,DU
         7 000500   200013 756100                    STQ     TD_DCB$+1,,AUTO
         7 000501   200004 236100                    LDQ     @MREG,,AUTO
         7 000502   400000 036007                    ADLQ    -131072,DL
         7 000503   200012 756100                    STQ     TCX+1,,AUTO
         7 000504   200003 236100                    LDQ     @MME,,AUTO
         7 000505   000001 036003                    ADLQ    1,DU
         7 000506   200011 756100                    STQ     @RETURN_DELTA+3,,AUTO
         7 000507   004150 701000 7                  TSX1    TOP$MME_PRTRAN
         7 000510   000000 011000                    NOP     0
         7 000511   000717 710000 7                  TRA     s:10612

      342    10589                 %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:237  
      343    10590    2         CASE (%RELEAS) ;

      344    10591    2            CALL TOP$MME_RELEAS (MREG.X7,MREG.X0,MREG.X1,MREG.X2,MREG.X4,

  10591  7 000512   200006 236100                    LDQ     @RETURN_DELTA,,AUTO
         7 000513   200021 756100                    STQ     DUMP_WORD_INX+1,,AUTO
         7 000514   200004 236100                    LDQ     @MREG,,AUTO
         7 000515   000005 036003                    ADLQ    5,DU
         7 000516   200020 756100                    STQ     EXT_STATUS$+1,,AUTO
         7 000517   200004 236100                    LDQ     @MREG,,AUTO
         7 000520   000004 036003                    ADLQ    4,DU
         7 000521   200017 756100                    STQ     TD_DCB$+1,,AUTO
         7 000522   200004 236100                    LDQ     @MREG,,AUTO
         7 000523   000003 036003                    ADLQ    3,DU
         7 000524   200016 756100                    STQ     POLTS_STATUS$+1,,AUTO
         7 000525   200004 236100                    LDQ     @MREG,,AUTO
         7 000526   000002 036003                    ADLQ    2,DU
         7 000527   200015 756100                    STQ     @X2_REG+1,,AUTO
         7 000530   200004 236100                    LDQ     @MREG,,AUTO
         7 000531   000001 036003                    ADLQ    1,DU
         7 000532   200014 756100                    STQ     TERMSTAT$+1,,AUTO
         7 000533   200004 236100                    LDQ     @MREG,,AUTO
         7 000534   400000 036007                    ADLQ    -131072,DL
         7 000535   200004 235100                    LDA     @MREG,,AUTO
         7 000536   200012 757100                    STAQ    TCX+1,,AUTO
         7 000537   200004 236100                    LDQ     @MREG,,AUTO
         7 000540   000002 036000 8                  ADLQ    2
         7 000541   200011 756100                    STQ     @RETURN_DELTA+3,,AUTO
         7 000542   004200 701000 7                  TSX1    TOP$MME_RELEAS
         7 000543   000000 011000                    NOP     0
         7 000544   000717 710000 7                  TRA     s:10612

      345    10592    2                    MREG.X6,MREG.A,MREG.Q,RETURN_DELTA) ;
      346    10593    2         CASE (%RELLNK) ;

      347    10594    2            CALL TOP$MME_RELLNK (MREG.A,MREG.Q,MREG.X1,MREG.X3,MREG.X4,

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:238  
  10594  7 000545   200006 236100                    LDQ     @RETURN_DELTA,,AUTO
         7 000546   200016 756100                    STQ     POLTS_STATUS$+1,,AUTO
         7 000547   200004 236100                    LDQ     @MREG,,AUTO
         7 000550   000002 036003                    ADLQ    2,DU
         7 000551   200015 756100                    STQ     @X2_REG+1,,AUTO
         7 000552   200004 236100                    LDQ     @MREG,,AUTO
         7 000553   000000 036000 8                  ADLQ    0
         7 000554   200014 756100                    STQ     TERMSTAT$+1,,AUTO
         7 000555   200004 236100                    LDQ     @MREG,,AUTO
         7 000556   400000 036007                    ADLQ    -131072,DL
         7 000557   200013 756100                    STQ     TD_DCB$+1,,AUTO
         7 000560   200004 236100                    LDQ     @MREG,,AUTO
         7 000561   000005 036003                    ADLQ    5,DU
         7 000562   200012 756100                    STQ     TCX+1,,AUTO
         7 000563   200004 236100                    LDQ     @MREG,,AUTO
         7 000564   000004 036003                    ADLQ    4,DU
         7 000565   200011 756100                    STQ     @RETURN_DELTA+3,,AUTO
         7 000566   004431 701000 7                  TSX1    TOP$MME_RELLNK
         7 000567   000000 011000                    NOP     0
         7 000570   000717 710000 7                  TRA     s:10612

      348    10595    2                    RETURN_DELTA) ;
      349    10596    2         CASE (%RLSMPC) ;

      350    10597    2            CALL TOP$MME_RELMPC (MREG.X1,RETURN_DELTA) ;

  10597  7 000571   200006 236100                    LDQ     @RETURN_DELTA,,AUTO
         7 000572   200012 756100                    STQ     TCX+1,,AUTO
         7 000573   200004 236100                    LDQ     @MREG,,AUTO
         7 000574   400000 036007                    ADLQ    -131072,DL
         7 000575   200011 756100                    STQ     @RETURN_DELTA+3,,AUTO
         7 000576   004437 701000 7                  TSX1    TOP$MME_RELMPC
         7 000577   000000 011000                    NOP     0
         7 000600   000717 710000 7                  TRA     s:10612

      351    10598    2         CASE (%RLSPAT) ;

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:239  
      352    10599    2            CALL TOP$MME_RLSPAT (MREG.X4,RETURN_DELTA) ;

  10599  7 000601   200006 236100                    LDQ     @RETURN_DELTA,,AUTO
         7 000602   200012 756100                    STQ     TCX+1,,AUTO
         7 000603   200004 236100                    LDQ     @MREG,,AUTO
         7 000604   000002 036003                    ADLQ    2,DU
         7 000605   200011 756100                    STQ     @RETURN_DELTA+3,,AUTO
         7 000606   004445 701000 7                  TSX1    TOP$MME_RLSPAT
         7 000607   000000 011000                    NOP     0
         7 000610   000717 710000 7                  TRA     s:10612

      353    10600    2         CASE (%SCTCMP) ;

      354    10601    2            CALL TOP$MME_SCTCMP (MME.WD_1,MME.WD_2,MREG.Q,MREG.X2,

  10601  7 000611   200006 236100                    LDQ     @RETURN_DELTA,,AUTO
         7 000612   200016 756100                    STQ     POLTS_STATUS$+1,,AUTO
         7 000613   200004 236100                    LDQ     @MREG,,AUTO
         7 000614   000000 036000 8                  ADLQ    0
         7 000615   200015 756100                    STQ     @X2_REG+1,,AUTO
         7 000616   200004 236100                    LDQ     @MREG,,AUTO
         7 000617   000001 036003                    ADLQ    1,DU
         7 000620   200014 756100                    STQ     TERMSTAT$+1,,AUTO
         7 000621   200004 236100                    LDQ     @MREG,,AUTO
         7 000622   000005 036003                    ADLQ    5,DU
         7 000623   200013 756100                    STQ     TD_DCB$+1,,AUTO
         7 000624   200003 236100                    LDQ     @MME,,AUTO
         7 000625   000002 036003                    ADLQ    2,DU
         7 000626   200012 756100                    STQ     TCX+1,,AUTO
         7 000627   200003 236100                    LDQ     @MME,,AUTO
         7 000630   000001 036003                    ADLQ    1,DU
         7 000631   200011 756100                    STQ     @RETURN_DELTA+3,,AUTO
         7 000632   004454 701000 7                  TSX1    TOP$MME_SCTCMP
         7 000633   000000 011000                    NOP     0
         7 000634   000717 710000 7                  TRA     s:10612

      355    10602    2                    MREG.X3,RETURN_DELTA) ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:240  
      356    10603    2         CASE (%TESTIO) ;

      357    10604    2            CALL TOP$MME_TESTIO (MME.WD_1,MME.WD_2,MME.WD_3,MME.WD_4,MREG.A,

  10604  7 000635   200006 236100                    LDQ     @RETURN_DELTA,,AUTO
         7 000636   200020 756100                    STQ     EXT_STATUS$+1,,AUTO
         7 000637   200004 236100                    LDQ     @MREG,,AUTO
         7 000640   000002 036003                    ADLQ    2,DU
         7 000641   200017 756100                    STQ     TD_DCB$+1,,AUTO
         7 000642   200004 236100                    LDQ     @MREG,,AUTO
         7 000643   000005 036003                    ADLQ    5,DU
         7 000644   200016 756100                    STQ     POLTS_STATUS$+1,,AUTO
         7 000645   200004 236100                    LDQ     @MREG,,AUTO
         7 000646   000004 036003                    ADLQ    4,DU
         7 000647   200015 756100                    STQ     @X2_REG+1,,AUTO
         7 000650   200003 236100                    LDQ     @MME,,AUTO
         7 000651   000004 036003                    ADLQ    4,DU
         7 000652   200014 756100                    STQ     TERMSTAT$+1,,AUTO
         7 000653   200003 236100                    LDQ     @MME,,AUTO
         7 000654   000003 036003                    ADLQ    3,DU
         7 000655   200013 756100                    STQ     TD_DCB$+1,,AUTO
         7 000656   200003 236100                    LDQ     @MME,,AUTO
         7 000657   000002 036003                    ADLQ    2,DU
         7 000660   200012 756100                    STQ     TCX+1,,AUTO
         7 000661   200003 236100                    LDQ     @MME,,AUTO
         7 000662   000001 036003                    ADLQ    1,DU
         7 000663   200011 756100                    STQ     @RETURN_DELTA+3,,AUTO
         7 000664   006771 701000 7                  TSX1    TOP$MME_TESTIO
         7 000665   000000 011000                    NOP     0
         7 000666   000717 710000 7                  TRA     s:10612

      358    10605    2                    MREG.Q,MREG.X4,RETURN_DELTA) ;
      359    10606    2         CASE (%UNSPEC) ;

      360    10607    2            CALL TOP$MME_UNSPEC (MREG.X1,RETURN_DELTA) ;

  10607  7 000667   200006 236100                    LDQ     @RETURN_DELTA,,AUTO
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:241  
         7 000670   200012 756100                    STQ     TCX+1,,AUTO
         7 000671   200004 236100                    LDQ     @MREG,,AUTO
         7 000672   400000 036007                    ADLQ    -131072,DL
         7 000673   200011 756100                    STQ     @RETURN_DELTA+3,,AUTO
         7 000674   010234 701000 7                  TSX1    TOP$MME_UNSPEC
         7 000675   000000 011000                    NOP     0
         7 000676   000717 710000 7                  TRA     s:10612

      361    10608    2         CASE (%WRDUMP) ;

      362    10609    2            CALL TOP$MME_WRDUMP (MREG.A,MREG.Q,MREG.X1,MREG.X2,

  10609  7 000677   200006 236100                    LDQ     @RETURN_DELTA,,AUTO
         7 000700   200015 756100                    STQ     @X2_REG+1,,AUTO
         7 000701   200004 236100                    LDQ     @MREG,,AUTO
         7 000702   000001 036003                    ADLQ    1,DU
         7 000703   200014 756100                    STQ     TERMSTAT$+1,,AUTO
         7 000704   200004 236100                    LDQ     @MREG,,AUTO
         7 000705   400000 036007                    ADLQ    -131072,DL
         7 000706   200013 756100                    STQ     TD_DCB$+1,,AUTO
         7 000707   200004 236100                    LDQ     @MREG,,AUTO
         7 000710   000005 036003                    ADLQ    5,DU
         7 000711   200012 756100                    STQ     TCX+1,,AUTO
         7 000712   200004 236100                    LDQ     @MREG,,AUTO
         7 000713   000004 036003                    ADLQ    4,DU
         7 000714   200011 756100                    STQ     @RETURN_DELTA+3,,AUTO
         7 000715   010242 701000 7                  TSX1    TOP$MME_WRDUMP
         7 000716   000000 011000                    NOP     0

      363    10610    2                    RETURN_DELTA) ;
      364    10611    2      END /* DO CASE */ ;

      365    10612    1      RETURN ;

  10612  7 000717   000000 702200 xent               TSX2  ! X66_ARET

      366    10613
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:242  
      367    10614        /* END OF MAIN */
      368    10615        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:243  
      369    10616        /*D* NAME:         TOP$POLTS_IO
      370    10617             ENTRY:
      371    10618             CALL:         CALL TOP$POLTS_IO(,,,,) ;
      372    10619             INTERFACE:    TOP$TIO_DONE
      373    10620             INPUT:        No parameters passed in call.
      374    10621                           Informations passed via some static variables(which
      375    10622                           is bad programming practice, but is necessary because
      376    10623                           of the program structure of TOP$POLTS.
      377    10624
      378    10625                           TOP$EVENT_ID contains the Event ID from the TCB Event
      379    10626                           frame.
      380    10627
      381    10628                           TOP$STATUS contains the 2 status words fetched
      382    10629                           from the TCB Event frame.
      383    10630             OUTPUT:       I/O completion status is returned to the subexec
      384    10631                           and a courtesy call is paid.
      385    10632             DESCRIPTION:  This entry point is called from the dispatcher
      386    10633                           TOD$DISPATCHER upon completion of a test I/O
      387    10634                           to a peripheral.  The completion status is returned
      388    10635                           to the subexec and  a courtesy call is paid
      389    10636                           to notify the subexec that the I/O completed.
      390    10637
      391    10638                           A separate entry point into TOP$POLTS is necessary
      392    10639                           because access is needed to the tables in this
      393    10640                           module.
      394    10641
      395    10642                           In general, when a no wait test I/O completes,
      396    10643                           CP6 enters the TOLTS Event Handler which fetches
      397    10644                           the Event ID and completion status from the TCB
      398    10645                           frame and builds a dispatcher entry for servicing
      399    10646                           later.  Included in this entry is (1)whether POLTS
      400    10647                           or MOLTS I/O is completing,(2) the Event ID and
      401    10648                           (3)the 2 words of completion status.  Sometime
      402    10649                           later the dispatcher queue is serviced, and this
      403    10650                           entry point is called as a result to handle
      404    10651                           completion of a test I/O.  Return is then made to
      405    10652                           to the dispatcher.
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:244  
      406    10653
      407    10654                           The I/O completion is queued up via the dispatcher
      408    10655                           so that the courtesy call can be paid to the subexec
      409    10656                           in controlled circumstance instead of when ever the
      410    10657                           event handler is entered by CP6.  This scheme of
      411    10658                           things avoids the race conditions.
      412    10659        */
      413    10660
      414    10661    1   TOP$POLTS_IO: ENTRY (MME,MREG,MME_INSTR$,RETURN_DELTA) ;

  10661  7 000720   000000 700200 xent  TOP$POLTS_IO TSX0  ! X66_AUTO_4
         7 000721   005744 000004                    ZERO    3044,4

      415    10662
      416    10663    1      CALL TOP$TIO_DONE ;

  10663  7 000722   012677 701000 7                  TSX1    TOP$TIO_DONE
         7 000723   000000 011000                    NOP     0

      417    10664    1      RETURN ;

  10664  7 000724   000000 702200 xent               TSX2  ! X66_ARET

      418    10665
      419    10666        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:245  
      420    10667        /*I* NAME:         TOP$MME_ALCMCA
      421    10668             INTERFACE:    MATCH_ICC
      422    10669                           DEDICATE_CHANNEL_3
      423    10670                           UNDEDICATE_CHANNEL_3
      424    10671             INPUT:        Q    =  0  ALLOCATE CHANNEL 3
      425    10672                                  -1  RELEASE CHANNEL 3
      426    10673                           AU   = IOM NUMBER
      427    10674                           AL   = CHANNEL NUMBER (3)
      428    10675             OUTPUT:       X0   = 0   REQUEST PROCESSED OK
      429    10676                               ~= 0   ERROR RETRY LATER
      430    10677             DESCRIPTION:  This routine allocates channel 3 on the requesting IOM,
      431    10678                           or releases the channel back to system.  The system may deny
      432    10679                           the request to allocate the channel if it is already in use
      433    10680                           or dedicated to another process.
      434    10681        */
      435    10682    1   TOP$MME_ALCMCA: PROC (A,Q,X0,RETURN_DELTA) ;

  10682  7 000725   200010 741300       TOP$MME_ALC* STX1  ! @RETURN_DELTA+2,,AUTO

      436    10683
      437    10684    2      DCL 1 A ALIGNED,
      438    10685    2            2 A_UPPER             UBIN HALF HALIGNED,
      439    10686    2            2 A_LOWER             UBIN HALF HALIGNED;
      440    10687    2      DCL X0                      UBIN HALF HALIGNED ;
      441    10688    2      DCL 1 ICC ALIGNED,
      442    10689    2            2 IOM#                UBIN (3) UNAL,
      443    10690    2            2 CHAN#               UBIN (8) UNAL;
      444    10691    2      DCL Q                       SBIN WORD ALIGNED;
      445    10692    2      DCL TCX                     UBIN WORD ALIGNED;
      446    10693    2      DCL RETURN_DELTA            SBIN HALF HALIGNED;
      447    10694        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:246  
      448    10695    2      RETURN_DELTA = 1 ;

  10695  7 000726   200014 470500                    LDP0    @RETURN_DELTA,,AUTO
         7 000727   000100 101400                    MRL     fill='000'O
         7 000730   000003 000004 xsym               ADSC9   B_VECTNIL+3              cn=0,n=4
         7 000731   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2

      449    10696    2      ICC.IOM# = A.A_UPPER ;

  10696  7 000732   200011 471500                    LDP1    @A,,AUTO
         7 000733   100000 236100                    LDQ     0,,PR1
         7 000734   000017 736000                    QLS     15
         7 000735   200015 676100                    ERQ     ICC,,AUTO
         7 000736   700000 376003                    ANQ     -32768,DU
         7 000737   200015 656100                    ERSQ    ICC,,AUTO

      450    10697    2      ICC.CHAN# = A.A_LOWER ;

  10697  7 000740   100000 236100                    LDQ     0,,PR1
         7 000741   000031 736000                    QLS     25
         7 000742   200015 676100                    ERQ     ICC,,AUTO
         7 000743   077600 376003                    ANQ     32640,DU
         7 000744   200015 656100                    ERSQ    ICC,,AUTO

      451    10698    2      CALL MATCH_ICC (ICC,TCX) ;

  10698  7 000745   200016 633500                    EPPR3   TCX,,AUTO
         7 000746   200024 453500                    STP3    @ICC+1,,AUTO
         7 000747   200015 634500                    EPPR4   ICC,,AUTO
         7 000750   200023 454500                    STP4    DUMP_HDR$+1,,AUTO
         7 000751   012520 701000 7                  TSX1    MATCH_ICC
         7 000752   000000 011000                    NOP     0

      452    10699
      453    10700           /* processing */
      454    10701    2      X0 = 0 ;  /* INITIALIZE ERROR RETURN CODE GOOD STATUS */

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:247  
  10701  7 000753   200013 470500                    LDP0    @X0,,AUTO
         7 000754   000100 101400                    MRL     fill='000'O
         7 000755   000002 000004 xsym               ADSC9   B_VECTNIL+2              cn=0,n=4
         7 000756   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2

      455    10702    3      DO CASE (Q) ;

  10702  7 000757   200012 471500                    LDP1    @Q,,AUTO
         7 000760   100000 235100                    LDA     0,,PR1
         7 000761   000001 115007                    CMPA    1,DL
         7 000762   000764 602005 7                  TNC     s:10702+5,AL
         7 000763   000777 710000 7                  TRA     s:10709
         7 000764   000765 710000 7                  TRA     s:10704

      456    10703    3         CASE (0) ;

      457    10704    3            CALL DEDICATE_CHANNEL_3 (TCX) WHENALTRETURN

  10704  7 000765   200016 633500                    EPPR3   TCX,,AUTO
         7 000766   200021 453500                    STP3    DUMP_WORD_INX+1,,AUTO
         7 000767   001010 701000 7                  TSX1    DEDICATE_CHANNEL_3
         7 000770   000772 702000 7                  TSX2    s:10706
         7 000771   000776 710000 7                  TRA     s:10707

      458    10705    4                 DO ;

      459    10706    4                    X0 = 1 ;

  10706  7 000772   200013 470500                    LDP0    @X0,,AUTO
         7 000773   000100 101400                    MRL     fill='000'O
         7 000774   000003 000004 xsym               ADSC9   B_VECTNIL+3              cn=0,n=4
         7 000775   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2

      460    10707    4                 END /* WHENALTRETURN */ ;

  10707  7 000776   001006 710000 7                  TRA     s:10714

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:248  
      461    10708    3         CASE (ELSE) ;

      462    10709    3            CALL UNDEDICATE_CHANNEL_3 WHENALTRETURN

  10709  7 000777   001056 701000 7                  TSX1    UNDEDICATE_CHANNEL_3
         7 001000   001002 702000 7                  TSX2    s:10711
         7 001001   001006 710000 7                  TRA     s:10714

      463    10710    4                 DO ;

      464    10711    4                    X0 = 1 ;

  10711  7 001002   200013 470500                    LDP0    @X0,,AUTO
         7 001003   000100 101400                    MRL     fill='000'O
         7 001004   000003 000004 xsym               ADSC9   B_VECTNIL+3              cn=0,n=4
         7 001005   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2

      465    10712    4                 END /* WHENALTRETURN */ ;

      466    10713    3      END /* CASE */ ;

      467    10714    2      RETURN ;

  10714  7 001006   200010 221300                    LDX1  ! @RETURN_DELTA+2,,AUTO
         7 001007   000001 702211                    TSX2  ! 1,X1

      468    10715        /* END TOP$MME_ALCMCA */
      469    10716        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:249  
      470    10717        /*I* NAME:         DEDICATE_CHANNEL_3
      471    10718             INTERFACE:
      472    10719             INPUT:        TCX = index into TOP$TCP for the test page
      473    10720             OUTPUT:
      474    10721             DESCRIPTION:  This routine allocates channel 3 on the requesting IMX
      475    10722                           with a call to M$TDOPEN.  The system may deny the request
      476    10723                           to allocate the channel if it is already in use or
      477    10724                           dedicated to another process.
      478    10725        */
      479    10726    2   DEDICATE_CHANNEL_3: PROC (TCX) ALTRET ;

  10726  7 001010   200020 741300       DEDICATE_CH* STX1  ! EXT_STATUS$+1,,AUTO

      480    10727
      481    10728    3      DCL TCX                     UBIN WORD ALIGNED;
      482    10729        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:250  
      483    10730    3      TDOPEN_FPT.V.DCB# = DCBNUM (M$MCACNFG) ;

  10730  7 001011   000000 236007 xsym               LDQ     M$MCACNFG,DL
         7 001012   000000 620006                    EAX0    0,QL
         7 001013   000222 740000 5                  STX0    TDOPEN_FPT+8

      484    10731    3      TDOPEN_FPT.V.TEST# =  %TD_TEST_MCA  ;

  10731  7 001014   070000 236003                    LDQ     28672,DU
         7 001015   000224 752040 5                  STCQ    TDOPEN_FPT+10,'40'O

      485    10732    3      TDOPEN_FPT.V.DEVICE.IOM# = TOP$TCP.FICCDD.IOM#(TCX) ;

  10732  7 001016   200021 470500                    LDP0    @TCX,,AUTO
         7 001017   000000 236100                    LDQ     0,,PR0
         7 001020   000122 402007                    MPY     82,DL
         7 001021   000001 736000                    QLS     1
         7 001022   000003 471400 xsym               LDP1    TOT$DMC+3
         7 001023   100001 236106                    LDQ     1,QL,PR1
         7 001024   000024 772000                    QRL     20
         7 001025   000222 676000 5                  ERQ     TDOPEN_FPT+8
         7 001026   007000 376007                    ANQ     3584,DL
         7 001027   000222 656000 5                  ERSQ    TDOPEN_FPT+8

      486    10733    3      TDOPEN_FPT.V.DEVICE.CHAN# = TOP$TCP.FICCDD.CHAN#(TCX) ;

  10733  7 001030   000000 236100                    LDQ     0,,PR0
         7 001031   000122 402007                    MPY     82,DL
         7 001032   000001 736000                    QLS     1
         7 001033   100001 236106                    LDQ     1,QL,PR1
         7 001034   003770 376003                    ANQ     2040,DU
         7 001035   000025 772000                    QRL     21
         7 001036   000222 552004 5                  STBQ    TDOPEN_FPT+8,'04'O

      487    10734    3      TDOPEN_FPT.V.DEVICE.DVN# = TOP$TCP.FICCDD.DEV#(TCX) ;

  10734  7 001037   000000 236100                    LDQ     0,,PR0
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:251  
         7 001040   000122 402007                    MPY     82,DL
         7 001041   000001 736000                    QLS     1
         7 001042   100001 236106                    LDQ     1,QL,PR1
         7 001043   000003 772000                    QRL     3
         7 001044   000222 752004 5                  STCQ    TDOPEN_FPT+8,'04'O

      488    10735    3      CALL M$TDOPEN (TDOPEN_FPT) WHENALTRETURN

  10735  7 001045   000212 630400 5                  EPPR0   TDOPEN_FPT
         7 001046   470002 713400                    CLIMB   alt,+28674
         7 001047   401400 401760                    pmme    nvectors=4
         7 001050   001052 702000 7                  TSX2    s:10737
         7 001051   001054 710000 7                  TRA     s:10739

      489    10736    4           DO ;

      490    10737    4              ALTRETURN ;

  10737  7 001052   200020 221300                    LDX1  ! EXT_STATUS$+1,,AUTO
         7 001053   000000 702211                    TSX2  ! 0,X1

      491    10738    4           END /* WHENALTRETURN DO */ ;
      492    10739    3      RETURN ;

  10739  7 001054   200020 221300                    LDX1  ! EXT_STATUS$+1,,AUTO
         7 001055   000001 702211                    TSX2  ! 1,X1

      493    10740    3   END DEDICATE_CHANNEL_3 ;
      494    10741        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:252  
      495    10742        /*I* NAME:         UNDEDICATE_CHANNEL_3
      496    10743             INTERFACE:
      497    10744             INPUT:
      498    10745             OUTPUT:
      499    10746             DESCRIPTION:  This routine makes a request to release channel 3 back to
      500    10747                           the system with a call to M$TDCLOSE.  The system may deny
      501    10748                           the request if the channel has already been released.
      502    10749        */
      503    10750    2   UNDEDICATE_CHANNEL_3: PROC ALTRET ;

  10750  7 001056   200020 741300       UNDEDICATE_* STX1  ! EXT_STATUS$+1,,AUTO

      504    10751
      505    10752    3      TDCLOSE_FPT.V.DCB# = DCBNUM (M$MCACNFG) ;

  10752  7 001057   000000 236007 xsym               LDQ     M$MCACNFG,DL
         7 001060   000000 620006                    EAX0    0,QL
         7 001061   000176 740000 5                  STX0    TDCLOSE_FPT+2

      506    10753    3      CALL M$TDCLOSE (TDCLOSE_FPT) WHENALTRETURN

  10753  7 001062   000174 630400 5                  EPPR0   TDCLOSE_FPT
         7 001063   470003 713400                    CLIMB   alt,+28675
         7 001064   400000 401760                    pmme    nvectors=1
         7 001065   001067 702000 7                  TSX2    s:10755
         7 001066   001071 710000 7                  TRA     s:10757

      507    10754    4           DO ;

      508    10755    4              ALTRETURN ;

  10755  7 001067   200020 221300                    LDX1  ! EXT_STATUS$+1,,AUTO
         7 001070   000000 702211                    TSX2  ! 0,X1

      509    10756    4           END /* WHENALTRETURN DO */ ;
      510    10757    3      RETURN ;

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:253  
  10757  7 001071   200020 221300                    LDX1  ! EXT_STATUS$+1,,AUTO
         7 001072   000001 702211                    TSX2  ! 1,X1

      511    10758    3   END UNDEDICATE_CHANNEL_3 ;
      512    10759    2   END TOP$MME_ALCMCA ;
      513    10760        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:254  
      514    10761        /*I* NAME:         TOP$MME_ALLOCR
      515    10762             INTERFACE:    MATCH_ICCDD
      516    10763                           GET_TEST_DCB
      517    10764                           SET_TDOPEN_FPT
      518    10765                           ALLOCATE_DEVICE
      519    10766                           SET_MTAR_PERMISSION
      520    10767                           BUILD_DEVICE_SCT
      521    10768                           BUILD_CONTROLLER_SCT
      522    10769                           BUILD_SCTWRK
      523    10770                           TOX$WARN
      524    10771             INPUT:        WD_1 = (0-17) address of FICCDD in subexec
      525    10772                                  (18-35) not used
      526    10773                           WD_2 = (0-17) address of SCTWRK buffer in subexec
      527    10774                                  (18-35) address of permission data (MTAR only)
      528    10775                           WD_3 = not used
      529    10776                           WD_4 = not used
      530    10777                           X1 = not used
      531    10778             OUTPUT:       X2 = error return code or subexec
      532    10779                           SCTWRK buffer in subexec is built
      533    10780                           TOP$TCP updated
      534    10781                           RETURN_DELTA = 8, peripheral allocated
      535    10782                           RETURN_DELTA = 5, peripheral not allocated
      536    10783             DESCRIPTION:  This  routine does the  actual allocation of a
      537    10784                           peripheral from CP6 for a subexec.  It (1)gets
      538    10785                           a DCB for the  test page I/O, (2)allocates the
      539    10786                           peripheral and (3) builds a bunch of phony SCT
      540    10787                           configuration  tables to  satisfy the subexec.
      541    10788                           A lot of the  information from these tables is
      542    10789                           returned immediately to the subexec in SCTWRK,
      543    10790                           but the tables are kept around for later use.
      544    10791
      545    10792                           A  lot   of  validity checking  for peripheral
      546    10793                           allocation  has  been  done in TOP$MME_SCTCMP,
      547    10794                           and very  little checking is done  by this MME
      548    10795                           service  routine.  Checking  in TOP$MME_SCTCMP
      549    10796                           includes
      550    10797
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:255  
      551    10798                             a.  validating ICCDD
      552    10799                             b. getting the device code for the peripheral
      553    10800                             c.  verifying boot channel for ITRs
      554    10801
      555    10802                           As  for  DCB  assignments,  each  test page is
      556    10803                           assigned one of its own.
      557    10804
      558    10805                           In the  CP6 environment, peripheral allocation
      559    10806                           consists  of calling  M$TDOPEN.  The operating
      560    10807                           system takes care of allocating the device and
      561    10808                           doing housekeeping on the I/O tables.  The big
      562    10809                           difference  between GCOS  and CP6  is that the
      563    10810                           peripheral  must have been  partitioned out of
      564    10811                           the system  prior to the call  of M$TDOPEN for
      565    10812                           the peripheral to be allocated.  (In GCOS, the
      566    10813                           T&D    system   does    its   own   peripheral
      567    10814                           allocation.)
      568    10815
      569    10816                           Before  TOLTS is  started, the  SYSCON program
      570    10817                           must be used  to partition the peripheral from
      571    10818                           the system.  Thus, it is not available for use
      572    10819                           other that by a T&D program.  When M$TDOPEN is
      573    10820                           called,  CP6 first goes  out to the operator's
      574    10821                           console  and  asks  permission  to  allocate a
      575    10822                           device for T&D.  The operator can either allow
      576    10823                           CP6 to proceed with  the allocation or deny it
      577    10824                           with  the appropriate keyin.   The latter case
      578    10825                           results in an ALTRETURN from M$TDOPEN.
      579    10826
      580    10827                           If  allowed to proceed,  CP6 will allocate the
      581    10828                           device and return.  This routine then builds a
      582    10829                           bunch  of pseudo  configuration tables.  Note:
      583    10830                           For  MOLTS  MTAR  testing,  an initial OPEN is
      584    10831                           done  requesting write  permission via  use of
      585    10832                           the unique  MTAR test type code.  If this OPEN
      586    10833                           is refused, then it is retried using the POLTS
      587    10834                           test type code, which, if accepted, results in
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:256  
      588    10835                           read permission only being giver to MTAR.
      589    10836        */
      590    10837
      591    10838    1   TOP$MME_ALLOCR: PROC (WD_1, WD_2, WD_3, WD_4, Q, X1, X2, X3, RETURN_DELTA) ;

  10838  7 001073   200010 741300       TOP$MME_ALL* STX1  ! @RETURN_DELTA+2,,AUTO

      592    10839
      593    10840    2      DCL 1 WD_1 ALIGNED,
      594    10841    2            2 FICCDD_ADDR#         UBIN HALF HALIGNED,
      595    10842    2            2 *                    BIT (18) UNAL ;
      596    10843    2      DCL 1 WD_2 ALIGNED,
      597    10844    2            2 SCTWRK_ADDR#         UBIN HALF HALIGNED,
      598    10845    2            2 MTAR_FLAG_ADDR#      UBIN HALF HALIGNED ;
      599    10846    2      DCL WD_3                     UBIN WORD ALIGNED ;
      600    10847    2      DCL WD_4                     UBIN WORD ALIGNED ;
      601    10848    2      DCL Q                        UBIN WORD ALIGNED ;
      602    10849    2      DCL X1                       UBIN HALF HALIGNED ;
      603    10850    2      DCL X2                       UBIN HALF HALIGNED ;
      604    10851    2      DCL X3                       UBIN HALF HALIGNED ;
      605    10852    2      DCL DEVICE_CODE              UBIN (6) CALIGNED ;
      606    10853    2      DCL TCX                      UBIN WORD ALIGNED ;
      607    10854    2      DCL FICCDD$                  PTR ALIGNED ;
      608    10855    2      DCL SCTWDS_BUILT             BIT (1) CALIGNED ;
      609    10856    2      DCL 1 NEW_ICCDD,
      610    10857    2            2 FLAG#                BIT (3) UNAL,
      611    10858    2            2 FORMAT#              BIT (1) UNAL,
      612    10859    2            2 ICCDD_,
      613    10860    2              3 IOM#               UBIN (3) UNAL,
      614    10861    2              3 CHAN#              UBIN (8) UNAL,
      615    10862    2              3 DEV#               UBIN (6) UNAL,
      616    10863    2            2 ICCDD# REDEF ICCDD_ UBIN (17) UNAL ;
      617    10864    2      DCL RETURN_DELTA             SBIN HALF HALIGNED ;
      618    10865           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:257  
      619    10866        /* Code */
      620    10867
      621    10868    2      CALL MATCH_ICCDD (TCX) ;

  10868  7 001074   200023 630500                    EPPR0   TCX,,AUTO
         7 001075   200031 450500                    STP0    @X4+1,,AUTO
         7 001076   001215 701000 7                  TSX1    MATCH_ICCDD
         7 001077   000000 011000                    NOP     0

      622    10869        /* IF channel 3 MCA request no device or MPC  */
      623    10870
      624    10871    2      IF TOP$TCP.DEVICE_CODE(TCX) = %CHN_3

  10871  7 001100   200023 236100                    LDQ     TCX,,AUTO
         7 001101   000244 402007                    MPY     164,DL
         7 001102   000003 470400 xsym               LDP0    TOT$DMC+3
         7 001103   000007 220106                    LDX0    7,QL,PR0
         7 001104   000003 100003                    CMPX0   3,DU
         7 001105   001113 601000 7                  TNZ     s:10875

      625    10872    2      THEN
      626    10873    2         TOP$TCP.DCB#(TCX) = DCBNUM(M$MCACNFG) ;

  10873  7 001106   000000 621006                    EAX1    0,QL
         7 001107   000000 236007 xsym               LDQ     M$MCACNFG,DL
         7 001110   000000 620006                    EAX0    0,QL
         7 001111   000007 440111                    SXL0    7,X1,PR0
         7 001112   001144 710000 7                  TRA     s:10886

      627    10874    3      ELSE DO ;

      628    10875    3              CALL GET_TEST_DCB (TCX) ;

  10875  7 001113   200023 631500                    EPPR1   TCX,,AUTO
         7 001114   200031 451500                    STP1    @X4+1,,AUTO
         7 001115   001333 701000 7                  TSX1    GET_TEST_DCB
         7 001116   000000 011000                    NOP     0
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:258  

      629    10876    3              CALL SET_TDOPEN_FPT (TCX) ;

  10876  7 001117   200023 630500                    EPPR0   TCX,,AUTO
         7 001120   200031 450500                    STP0    @X4+1,,AUTO
         7 001121   001372 701000 7                  TSX1    SET_TDOPEN_FPT
         7 001122   000000 011000                    NOP     0

      630    10877    3              CALL ALLOCATE_DEVICE WHENALTRETURN

  10877  7 001123   001646 701000 7                  TSX1    ALLOCATE_DEVICE
         7 001124   001126 702000 7                  TSX2    s:10879
         7 001125   001140 710000 7                  TRA     s:10883

      631    10878    4                   DO ;

      632    10879    4                      X2 = %CP6DENY# ;

  10879  7 001126   200017 470500                    LDP0    @X2,,AUTO
         7 001127   000100 101400                    MRL     fill='000'O
         7 001130   000010 000004 xsym               ADSC9   B_VECTNIL+8              cn=0,n=4
         7 001131   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2

      633    10880    4                      RETURN_DELTA = 5 ;

  10880  7 001132   200021 471500                    LDP1    @RETURN_DELTA,,AUTO
         7 001133   000100 101400                    MRL     fill='000'O
         7 001134   000007 000004 xsym               ADSC9   B_VECTNIL+7              cn=0,n=4
         7 001135   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2

      634    10881    4                      RETURN ;

  10881  7 001136   200010 221300                    LDX1  ! @RETURN_DELTA+2,,AUTO
         7 001137   000001 702211                    TSX2  ! 1,X1

      635    10882    4                   END /* WHENALTRETURN */ ;
      636    10883    3              CALL SET_MTAR_PERMISSION (TCX) ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:259  

  10883  7 001140   200023 630500                    EPPR0   TCX,,AUTO
         7 001141   200031 450500                    STP0    @X4+1,,AUTO
         7 001142   001726 701000 7                  TSX1    SET_MTAR_PERMISSION
         7 001143   000000 011000                    NOP     0

      637    10884    3           END /*  ELSE DO  */ ;

      638    10885
      639    10886    2      CALL BUILD_DEVICE_SCT (TCX) WHENALTRETURN

  10886  7 001144   200023 630500                    EPPR0   TCX,,AUTO
         7 001145   200031 450500                    STP0    @X4+1,,AUTO
         7 001146   001762 701000 7                  TSX1    BUILD_DEVICE_SCT
         7 001147   001151 702000 7                  TSX2    s:10888
         7 001150   001163 710000 7                  TRA     s:10892

      640    10887    3           DO ;

      641    10888    3              X2 = %INVDEV# ;

  10888  7 001151   200017 470500                    LDP0    @X2,,AUTO
         7 001152   000100 101400                    MRL     fill='000'O
         7 001153   000004 000004 xsym               ADSC9   B_VECTNIL+4              cn=0,n=4
         7 001154   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2

      642    10889    3              RETURN_DELTA = 5 ;

  10889  7 001155   200021 471500                    LDP1    @RETURN_DELTA,,AUTO
         7 001156   000100 101400                    MRL     fill='000'O
         7 001157   000007 000004 xsym               ADSC9   B_VECTNIL+7              cn=0,n=4
         7 001160   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2

      643    10890    3              RETURN ;

  10890  7 001161   200010 221300                    LDX1  ! @RETURN_DELTA+2,,AUTO
         7 001162   000001 702211                    TSX2  ! 1,X1
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:260  

      644    10891    3           END ;
      645    10892    2      CALL BUILD_CONTROLLER_SCT (TCX) ;

  10892  7 001163   200023 630500                    EPPR0   TCX,,AUTO
         7 001164   200031 450500                    STP0    @X4+1,,AUTO
         7 001165   002565 701000 7                  TSX1    BUILD_CONTROLLER_SCT
         7 001166   000000 011000                    NOP     0

      646    10893
      647    10894    2      SCTWDS_BUILT = %TRUE ;

  10894  7 001167   400000 236003                    LDQ     -131072,DU
         7 001170   200025 756100                    STQ     SCTWDS_BUILT,,AUTO

      648    10895    2      CALL BUILD_SCTWRK (TCX,WD_2,,,,Q,SCTWDS_BUILT) ;

  10895  7 001171   200025 630500                    EPPR0   SCTWDS_BUILT,,AUTO
         7 001172   200043 450500                    STP0    @Q_REG+1,,AUTO
         7 001173   200015 236100                    LDQ     @Q,,AUTO
         7 001174   200042 756100                    STQ     @BIT12FLAG+1,,AUTO
         7 001175   000001 236000 xsym               LDQ     B_VECTNIL+1
         7 001176   000001 235000 xsym               LDA     B_VECTNIL+1
         7 001177   200040 757100                    STAQ    @BIT17FLAG+1,,AUTO
         7 001200   000001 236000 xsym               LDQ     B_VECTNIL+1
         7 001201   200012 235100                    LDA     @WD_2,,AUTO
         7 001202   200036 757100                    STAQ    @TCX+1,,AUTO
         7 001203   200023 631500                    EPPR1   TCX,,AUTO
         7 001204   200035 451500                    STP1    REASON+2,,AUTO
         7 001205   011521 701000 7                  TSX1    BUILD_SCTWRK
         7 001206   000000 011000                    NOP     0

      649    10896
      650    10897    2      RETURN_DELTA = 8 ;

  10897  7 001207   200021 470500                    LDP0    @RETURN_DELTA,,AUTO
         7 001210   000100 101400                    MRL     fill='000'O
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:261  
         7 001211   000012 000004 xsym               ADSC9   B_VECTNIL+10             cn=0,n=4
         7 001212   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2

      651    10898    2      RETURN ;

  10898  7 001213   200010 221300                    LDX1  ! @RETURN_DELTA+2,,AUTO
         7 001214   000001 702211                    TSX2  ! 1,X1

      652    10899
      653    10900        /* END TOP$MME_ALLOCR */
      654    10901        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:262  
      655    10902        /*I* NAME:         MATCH_ICCDD
      656    10903             INTERFACE:    TOX$SCREECH
      657    10904             INPUT:        Uses bits 0-17 of WD_1, address of FICCDD in
      658    10905                           the subexec.
      659    10906             OUTPUT:       TCX, the index into TOP$TCP for the test page.
      660    10907                           NEW_ICCDD
      661    10908             DESCRIPTION:  Uses WD_1, which contains in bits 0-17 the
      662    10909                           address of FICCDD in the subexec, to build a pointer
      663    10910                           to it.  The ICCDD portion is fetched and stored in
      664    10911                           NEW_ICCDD_.  This is then compared to the ICCDD
      665    10912                           field in TOP$TCP.X.ICCDD_(TCX) which was set
      666    10913                           by TOP$MME_SCTCMP.  The search continues until
      667    10914                           a match is made or all 8 entries of TOP$TCP
      668    10915                           have been searched.
      669    10916
      670    10917                           TCX, the index for the test page into TOP$TCP
      671    10918                           is returned to the caller.
      672    10919        */
      673    10920        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:263  
      674    10921    2   MATCH_ICCDD: PROC (TCX) ;

  10921  7 001215   200030 741300       MATCH_ICCDD  STX1  ! @A+1,,AUTO

      675    10922
      676    10923    3      DCL TCX UBIN WORD ALIGNED ;
      677    10924
      678    10925        /* Code */
      679    10926
      680    10927    3      FICCDD$ = PINCRW (IS$, WD_1.FICCDD_ADDR#) ;

  10927  7 001216   200011 470500                    LDP0    @WD_1,,AUTO
         7 001217   000000 220100                    LDX0    0,,PR0
         7 001220   000000 636010                    EAQ     0,X0
         7 001221   000000 036000 6                  ADLQ    FPTN_
         7 001222   200024 756100                    STQ     FICCDD$,,AUTO

      681    10928
      682    10929    3      IF FICCDD$->FICCDD.FORMAT#

  10929  7 001223   200024 471500                    LDP1    FICCDD$,,AUTO
         7 001224   100000 236100                    LDQ     0,,PR1
         7 001225   040000 316003                    CANQ    16384,DU
         7 001226   001246 600000 7                  TZE     s:10936

      683    10930    4      THEN DO ;

      684    10931    4              NEW_ICCDD.ICCDD_.IOM# = FICCDD$->FICCDD.IOM# ;

  10931  7 001227   030000 376003                    ANQ     12288,DU
         7 001230   000001 772000                    QRL     1
         7 001231   200026 676100                    ERQ     NEW_ICCDD,,AUTO
         7 001232   034000 376003                    ANQ     14336,DU
         7 001233   200026 656100                    ERSQ    NEW_ICCDD,,AUTO

      685    10932    4              NEW_ICCDD.ICCDD_.CHAN# = X3 ;

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:264  
  10932  7 001234   200020 473500                    LDP3    @X3,,AUTO
         7 001235   003100 061500                    CSR     bolr='003'O
         7 001236   300000 000022                    BDSC    0,,PR3                   by=0,bit=0,n=18
         7 001237   200026 070010                    BDSC    NEW_ICCDD,,AUTO          by=0,bit=7,n=8

      686    10933    4              NEW_ICCDD.ICCDD_.DEV# = FICCDD$->FICCDD.DEV# ;

  10933  7 001240   100000 236100                    LDQ     0,,PR1
         7 001241   000003 772000                    QRL     3
         7 001242   200026 676100                    ERQ     NEW_ICCDD,,AUTO
         7 001243   000003 376000 8                  ANQ     3
         7 001244   200026 656100                    ERSQ    NEW_ICCDD,,AUTO

      687    10934    4           END ;

  10934  7 001245   001266 710000 7                  TRA     s:10940

      688    10935    4      ELSE DO ;

      689    10936    4              NEW_ICCDD.ICCDD_.IOM# = FICCDD$->FICCDD.IOM# ;

  10936  7 001246   030000 376003                    ANQ     12288,DU
         7 001247   000001 772000                    QRL     1
         7 001250   200026 676100                    ERQ     NEW_ICCDD,,AUTO
         7 001251   034000 376003                    ANQ     14336,DU
         7 001252   200026 656100                    ERSQ    NEW_ICCDD,,AUTO

      690    10937    4              NEW_ICCDD.ICCDD_.CHAN# = FICCDD$->FICCDD.CHAN# ;

  10937  7 001253   100000 236100                    LDQ     0,,PR1
         7 001254   007700 376003                    ANQ     4032,DU
         7 001255   000003 772000                    QRL     3
         7 001256   200026 676100                    ERQ     NEW_ICCDD,,AUTO
         7 001257   003770 376003                    ANQ     2040,DU
         7 001260   200026 656100                    ERSQ    NEW_ICCDD,,AUTO

      691    10938    4              NEW_ICCDD.ICCDD_.DEV# = FICCDD$->FICCDD.DEV# ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:265  

  10938  7 001261   100000 236100                    LDQ     0,,PR1
         7 001262   000003 772000                    QRL     3
         7 001263   200026 676100                    ERQ     NEW_ICCDD,,AUTO
         7 001264   000003 376000 8                  ANQ     3
         7 001265   200026 656100                    ERSQ    NEW_ICCDD,,AUTO

      692    10939    4           END ;

      693    10940    3      NEW_ICCDD.FLAG# = '0'B ;

  10940  7 001266   000004 236000 8                  LDQ     4
         7 001267   200026 356100                    ANSQ    NEW_ICCDD,,AUTO

      694    10941    3      NEW_ICCDD.FORMAT# = FICCDD$->FICCDD.FORMAT# ;

  10941  7 001270   100000 236100                    LDQ     0,,PR1
         7 001271   200026 676100                    ERQ     NEW_ICCDD,,AUTO
         7 001272   040000 376003                    ANQ     16384,DU
         7 001273   200026 656100                    ERSQ    NEW_ICCDD,,AUTO

      695    10942
      696    10943    3      TCX = 0 ;

  10943  7 001274   200031 473500                    LDP3    @TCX,,AUTO
         7 001275   300000 450100                    STZ     0,,PR3

      697    10944    4      DO WHILE TCX < 8 ;

  10944  7 001276   300000 235100                    LDA     0,,PR3
         7 001277   000010 115007                    CMPA    8,DL
         7 001300   001321 603000 7                  TRC     s:10950

      698    10945    4         IF TOP$TCP.ICCDD.ICCDD#(TCX) = NEW_ICCDD.ICCDD#

  10945  7 001301   200031 470500                    LDP0    @TCX,,AUTO
         7 001302   000000 236100                    LDQ     0,,PR0
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:266  
         7 001303   000122 402007                    MPY     82,DL
         7 001304   000001 736000                    QLS     1
         7 001305   000003 471400 xsym               LDP1    TOT$DMC+3
         7 001306   100001 236106                    LDQ     1,QL,PR1
         7 001307   200026 676100                    ERQ     NEW_ICCDD,,AUTO
         7 001310   000005 376000 8                  ANQ     5
         7 001311   001314 601000 7                  TNZ     s:10947

      699    10946    4         THEN RETURN ;

  10946  7 001312   200030 221300                    LDX1  ! @A+1,,AUTO
         7 001313   000001 702211                    TSX2  ! 1,X1

      700    10947    4         ELSE TCX = TCX + 1 ;

  10947  7 001314   000000 235100                    LDA     0,,PR0
         7 001315   000001 035007                    ADLA    1,DL
         7 001316   000000 755100                    STA     0,,PR0

      701    10948    4      END /* WHILE */ ;

  10948  7 001317   000010 115007                    CMPA    8,DL
         7 001320   001301 602000 7                  TNC     s:10945

      702    10949
      703    10950    3      TOP_ERROR_CODE.ERR# = %E$BADICCDD ;

  10950  7 001321   000173 236000 5                  LDQ     TOP_ERROR_CODE
         7 001322   000006 376000 8                  ANQ     6
         7 001323   003200 276007                    ORQ     1664,DL
         7 001324   000173 756000 5                  STQ     TOP_ERROR_CODE

      704    10951    3      CALL TOX$SCREECH (TOP_ERROR_CODE) ;

  10951  7 001325   000007 630400 8                  EPPR0   7
         7 001326   000017 631400 xsym               EPPR1   B_VECTNIL+15
         7 001327   000000 701000 xent               TSX1    TOX$SCREECH
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:267  
         7 001330   000000 011000                    NOP     0

      705    10952
      706    10953    3   END MATCH_ICCDD ;

  10953  7 001331   200030 221300                    LDX1  ! @A+1,,AUTO
         7 001332   000001 702211                    TSX2  ! 1,X1

      707    10954        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:268  
      708    10955        /*I* NAME:         GET_TEST_DCB
      709    10956             AUTHOR:       Scott S. Sheppard
      710    10957             PURPOSE:      Gets a Unique DCB for a POLTS test
      711    10958             INTERFACE:    M$GETDCB
      712    10959                           BINCHAR
      713    10960                           TOX$ERROR
      714    10961             PARAMETERS:   TCX - input
      715    10962             DATA:         TOP$TCP.DCB#(TCX) - output
      716    10963             DESCRIPTION:  POLTS used to  have 8 unique DCB's linked into
      717    10964                           it.   These DCB's occupied  space whether they
      718    10965                           were  needed  or  not.  This procedure obtains
      719    10966                           those  DCB's  dynamically,  using the original
      720    10967                           naming convention: POLTS_DCB0 ... POLTS_DCB7
      721    10968        */
      722    10969        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:269  
      723    10970    2   GET_TEST_DCB: PROC (TCX) ;

  10970  7 001333   200030 741300       GET_TEST_DCB STX1  ! @A+1,,AUTO

      724    10971
      725    10972    3      DCL TCX         UBIN WORD ALIGNED ;
      726    10973    3      DCL 1 DCB_NAME  STATIC CALIGNED,
      727    10974    3            2 LGTH    UBIN BYTE CALIGNED INIT (10),
      728    10975    3            2 VALUE   CHAR (9) CALIGNED INIT ('POLTS_DCB'),
      729    10976    3            2 TCX     CHAR (1) CALIGNED ;
      730    10977    3      DCL DCB_NUM     UBIN WORD STATIC ALIGNED ;
      731    10978           %B$EXCFR ;
      732    10996           %FPT_GETDCB (FPTN    = GET_POLTS_DCB,
      733    10997                        DCBNAME = DCB_NAME,
      734    10998                        DCBNUM  = DCB_NUM) ;
      735    11013
      736    11014        /* Code */
      737    11015
      738    11016    3      CALL BINCHAR (DCB_NAME.TCX, TCX) ;

  11016  7 001334   200031 470500                    LDP0    @TCX,,AUTO
         7 001335   000000 235100                    LDA     0,,PR0
         7 001336   000044 773000                    LRL     36
         7 001337   205740 757100                    STAQ    BCD_BUF_INX+1,,AUTO
         7 001340   000000 301500                    BTD
         7 001341   205740 000010                    NDSC9   BCD_BUF_INX+1,,AUTO      cn=0,s=lsgnf,sf=0,n=8
         7 001342   000230 430001 5                  NDSC9   DCB_NAME+2               cn=2,s=nosgn,sf=0,n=1

      739    11017    3      CALL M$GETDCB (GET_POLTS_DCB) WHENRETURN

  11017  7 001343   000232 630400 5                  EPPR0   GET_POLTS_DCB
         7 001344   460002 713400                    CLIMB   alt,+24578
         7 001345   401000 401760                    pmme    nvectors=3
         7 001346   001360 702000 7                  TSX2    s:11024

      740    11018    4           DO ;

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:270  
      741    11019    4              TOP$TCP.DCB#(TCX) = DCB_NUM ;

  11019  7 001347   200031 470500                    LDP0    @TCX,,AUTO
         7 001350   000000 236100                    LDQ     0,,PR0
         7 001351   000122 402007                    MPY     82,DL
         7 001352   000001 736000                    QLS     1
         7 001353   000231 720000 5                  LXL0    DCB_NUM
         7 001354   000003 471400 xsym               LDP1    TOT$DMC+3
         7 001355   100007 440106                    SXL0    7,QL,PR1

      742    11020    4              RETURN ;

  11020  7 001356   200030 221300                    LDX1  ! @A+1,,AUTO
         7 001357   000001 702211                    TSX2  ! 1,X1

      743    11021    4           END /* WHENRETURN */ ;
      744    11022    3      WHENALTRETURN
      745    11023    4           DO ;

      746    11024    4              CALL TOX$ERROR (B$TCB$ -> B$TCB.ALT$ -> B$EXCFR.ERR) ;

  11024  7 001360   000000 470400 xsym               LDP0    B$TCB$
         7 001361   000000 471500                    LDP1    0,,PR0
         7 001362   100102 633500                    EPPR3   66,,PR1
         7 001363   205740 453500                    STP3    BCD_BUF_INX+1,,AUTO
         7 001364   205740 630500                    EPPR0   BCD_BUF_INX+1,,AUTO
         7 001365   000017 631400 xsym               EPPR1   B_VECTNIL+15
         7 001366   000000 701000 xent               TSX1    TOX$ERROR
         7 001367   000000 011000                    NOP     0

      747    11025    4           END /* WHENALTRETURN */ ;

      748    11026
      749    11027    3   END GET_TEST_DCB ;

  11027  7 001370   200030 221300                    LDX1  ! @A+1,,AUTO
         7 001371   000001 702211                    TSX2  ! 1,X1
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:271  

      750    11028        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:272  
      751    11029        /*I* NAME:         SET_TDOPEN_FPT
      752    11030             INPUT:        TCX, the test page's index into TOP$TCP
      753    11031             OUTPUT:       TDOPEN_FPT gets set up (see below)
      754    11032             DESCRIPTION:  The FPT for M$TDOPEN is set up for the call to
      755    11033                           allocate the peripheral.  The following fields are
      756    11034                           set:
      757    11035                           a.  TDOPEN_FPT.V.DCB# = DCB number for the page, fetched
      758    11036                               from TOP$TCP.
      759    11037                           b.  TDOPEN_FPT.V.TEST#  1 for POLTS test or MTAR read-only,
      760    11038                                                   2 for ITR(MOLTS) test,
      761    11039                                                   3 for MDR(MOLTS) test,
      762    11040                                                   4 for MTAR write
      763    11041                                                   5 for FEP (not used)
      764    11042                                                   6 for MPC pre-open
      765    11043                                                   7 for MCA channel 3 open
      766    11044                               This is determined from test type information
      767    11045                               carried in TOP$TCP.TEST_TYPE.
      768    11046                           c.  TDOPEN_FPT.V.DEVICE = IOM,channel and device
      769    11047                               (ICCDD) number fetched from TOP$TCP.
      770    11048                           d.  TDOPEN_FPT.CHAIN_ = vector of a buffer in
      771    11049                               TOP$TCP(TEST_CONTROL.BFR.TRAIN_IMAGE)
      772    11050                               where CP6 is to return the printer train image
      773    11051                               if the peripheral to be allocated is a printer.
      774    11052                               There is one of these buffers per entry in
      775    11053                               TOP$TCP.
      776    11054                           e.  TDOPEN_FPT.VFC_ = vector of a buffer in
      777    11055                               TOP$TCP(TEST_CONTROL.BFR.VFC_IMAGE)
      778    11056                               where CP6 is to return the printer VFC image
      779    11057                               if the peripheral to be allocated is a printer.
      780    11058                               There is one of these buffers per entry in
      781    11059                               TOP$TCP.
      782    11060                        Note:  CP6 will also return additional information
      783    11061                               about the peripheral in the DCB.  See a based
      784    11062                               structure of the DCB for details.
      785    11063        */
      786    11064        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:273  
      787    11065    2   SET_TDOPEN_FPT: PROC (TCX) ;

  11065  7 001372   200030 741300       SET_TDOPEN_* STX1  ! @A+1,,AUTO

      788    11066
      789    11067    3      DCL TCX           UBIN WORD ALIGNED ;
      790    11068
      791    11069        /* Code */
      792    11070
      793    11071    3      TDOPEN_FPT.V.DCB# = TOP$TCP.DCB#(TCX) ;

  11071  7 001373   200031 470500                    LDP0    @TCX,,AUTO
         7 001374   000000 236100                    LDQ     0,,PR0
         7 001375   000122 402007                    MPY     82,DL
         7 001376   000001 736000                    QLS     1
         7 001377   000003 471400 xsym               LDP1    TOT$DMC+3
         7 001400   100007 720106                    LXL0    7,QL,PR1
         7 001401   000222 740000 5                  STX0    TDOPEN_FPT+8

      794    11072
      795    11073    4      DO SELECT (TOP$TCP.TEST_TYPE(TCX)) ;

  11073  7 001402   000000 236100                    LDQ     0,,PR0
         7 001403   000122 402007                    MPY     82,DL
         7 001404   000000 622006                    EAX2    0,QL
         7 001405   000003 736000                    QLS     3
         7 001406   040000 106506                    CMPC    fill='040'O
         7 001407   100002 000003                    ADSC9   2,Q,PR1                  cn=0,n=3
         7 001410   000107 000003 6                  ADSC9   CRLF_+1                  cn=0,n=3
         7 001411   001452 602000 7                  TNC     s:11073+40
         7 001412   000000 635012                    EAA     0,X2
         7 001413   000021 771000                    ARL     17
         7 001414   100002 236105                    LDQ     2,AL,PR1
         7 001415   000107 676000 6                  ERQ     CRLF_+1
         7 001416   000010 376000 8                  ANQ     8
         7 001417   001543 600000 7                  TZE     s:11075
         7 001420   000000 635012                    EAA     0,X2
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:274  
         7 001421   000017 771000                    ARL     15
         7 001422   040000 106505                    CMPC    fill='040'O
         7 001423   100002 000003                    ADSC9   2,A,PR1                  cn=0,n=3
         7 001424   000110 000003 6                  ADSC9   CRLF_+2                  cn=0,n=3
         7 001425   001443 602000 7                  TNC     s:11073+33
         7 001426   000000 635012                    EAA     0,X2
         7 001427   000021 771000                    ARL     17
         7 001430   100002 236105                    LDQ     2,AL,PR1
         7 001431   000110 676000 6                  ERQ     CRLF_+2
         7 001432   000010 376000 8                  ANQ     8
         7 001433   001543 600000 7                  TZE     s:11075
         7 001434   000000 635012                    EAA     0,X2
         7 001435   000021 771000                    ARL     17
         7 001436   100002 236105                    LDQ     2,AL,PR1
         7 001437   000111 676000 6                  ERQ     CRLF_+3
         7 001440   000010 376000 8                  ANQ     8
         7 001441   001601 601000 7                  TNZ     s:11091
         7 001442   001557 710000 7                  TRA     s:11082
         7 001443   000000 635012                    EAA     0,X2
         7 001444   000021 771000                    ARL     17
         7 001445   100002 236105                    LDQ     2,AL,PR1
         7 001446   000112 676000 6                  ERQ     CRLF_+4
         7 001447   000010 376000 8                  ANQ     8
         7 001450   001601 601000 7                  TNZ     s:11091
         7 001451   001557 710000 7                  TRA     s:11082
         7 001452   000000 635012                    EAA     0,X2
         7 001453   000017 771000                    ARL     15
         7 001454   040000 106505                    CMPC    fill='040'O
         7 001455   100002 000003                    ADSC9   2,A,PR1                  cn=0,n=3
         7 001456   000113 000003 6                  ADSC9   CRLF_+5                  cn=0,n=3
         7 001457   001520 602000 7                  TNC     s:11073+78
         7 001460   000000 635012                    EAA     0,X2
         7 001461   000021 771000                    ARL     17
         7 001462   100002 236105                    LDQ     2,AL,PR1
         7 001463   000113 676000 6                  ERQ     CRLF_+5
         7 001464   000010 376000 8                  ANQ     8
         7 001465   001554 600000 7                  TZE     s:11080
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:275  
         7 001466   000000 635012                    EAA     0,X2
         7 001467   000017 771000                    ARL     15
         7 001470   040000 106505                    CMPC    fill='040'O
         7 001471   100002 000003                    ADSC9   2,A,PR1                  cn=0,n=3
         7 001472   000114 000003 6                  ADSC9   CRLF_+6                  cn=0,n=3
         7 001473   001511 602000 7                  TNC     s:11073+71
         7 001474   000000 635012                    EAA     0,X2
         7 001475   000021 771000                    ARL     17
         7 001476   100002 236105                    LDQ     2,AL,PR1
         7 001477   000114 676000 6                  ERQ     CRLF_+6
         7 001500   000010 376000 8                  ANQ     8
         7 001501   001562 600000 7                  TZE     s:11084
         7 001502   000000 635012                    EAA     0,X2
         7 001503   000021 771000                    ARL     17
         7 001504   100002 236105                    LDQ     2,AL,PR1
         7 001505   000115 676000 6                  ERQ     CRLF_+7
         7 001506   000010 376000 8                  ANQ     8
         7 001507   001601 601000 7                  TNZ     s:11091
         7 001510   001543 710000 7                  TRA     s:11075
         7 001511   000000 635012                    EAA     0,X2
         7 001512   000021 771000                    ARL     17
         7 001513   100002 236105                    LDQ     2,AL,PR1
         7 001514   000116 676000 6                  ERQ     CRLF_+8
         7 001515   000010 376000 8                  ANQ     8
         7 001516   001601 601000 7                  TNZ     s:11091
         7 001517   001557 710000 7                  TRA     s:11082
         7 001520   000000 635012                    EAA     0,X2
         7 001521   000017 771000                    ARL     15
         7 001522   040000 106505                    CMPC    fill='040'O
         7 001523   100002 000003                    ADSC9   2,A,PR1                  cn=0,n=3
         7 001524   000117 000003 6                  ADSC9   CRLF_+9                  cn=0,n=3
         7 001525   001601 602000 7                  TNC     s:11091
         7 001526   000000 635012                    EAA     0,X2
         7 001527   000021 771000                    ARL     17
         7 001530   100002 236105                    LDQ     2,AL,PR1
         7 001531   000117 676000 6                  ERQ     CRLF_+9
         7 001532   000010 376000 8                  ANQ     8
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:276  
         7 001533   001546 600000 7                  TZE     s:11077
         7 001534   000000 635012                    EAA     0,X2
         7 001535   000021 771000                    ARL     17
         7 001536   100002 236105                    LDQ     2,AL,PR1
         7 001537   000120 676000 6                  ERQ     CRLF_+10
         7 001540   000010 376000 8                  ANQ     8
         7 001541   001601 601000 7                  TNZ     s:11091
         7 001542   001557 710000 7                  TRA     s:11082

      796    11074    4         SELECT ('MTC', 'MTG', 'PLT') ;

      797    11075    4         TDOPEN_FPT.V.TEST# = %TD_TEST_POLTS ;

  11075  7 001543   010000 236003                    LDQ     4096,DU
         7 001544   000224 752040 5                  STCQ    TDOPEN_FPT+10,'40'O
         7 001545   001611 710000 7                  TRA     s:11095

      798    11076    4         SELECT ('ITR') ;

      799    11077    4         TDOPEN_FPT.V.TEST# = %TD_TEST_ITR ;

  11077  7 001546   020000 236003                    LDQ     8192,DU
         7 001547   000224 752040 5                  STCQ    TDOPEN_FPT+10,'40'O

      800    11078    4         TDOPEN_FPT.V.SPEVENT# = %ITR_EVENT_BASE + TCX ;

  11078  7 001550   000000 235100                    LDA     0,,PR0
         7 001551   000024 035007                    ADLA    20,DL
         7 001552   000223 755000 5                  STA     TDOPEN_FPT+9
         7 001553   001611 710000 7                  TRA     s:11095

      801    11079    4         SELECT ('MDR') ;

      802    11080    4         TDOPEN_FPT.V.TEST# = %TD_TEST_MDR ;

  11080  7 001554   030000 236003                    LDQ     12288,DU
         7 001555   000224 752040 5                  STCQ    TDOPEN_FPT+10,'40'O
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:277  
         7 001556   001611 710000 7                  TRA     s:11095

      803    11081    4         SELECT ('MTR', 'MDC', 'MDS', 'TMD') ;

      804    11082    4         TDOPEN_FPT.V.TEST# = %TD_TEST_MTAR ;

  11082  7 001557   040000 236003                    LDQ     16384,DU
         7 001560   000224 752040 5                  STCQ    TDOPEN_FPT+10,'40'O
         7 001561   001611 710000 7                  TRA     s:11095

      805    11083    4         SELECT ('MFC') ;

      806    11084    5         DO CASE (TOP$TCP.DEVICE_CODE(TCX)) ;

  11084  7 001562   000000 635012                    EAA     0,X2
         7 001563   000021 771000                    ARL     17
         7 001564   100007 236105                    LDQ     7,AL,PR1
         7 001565   000022 772000                    QRL     18
         7 001566   000016 136007                    SBLQ    14,DL
         7 001567   000001 116007                    CMPQ    1,DL
         7 001570   001572 602006 7                  TNC     s:11084+8,QL
         7 001571   001576 710000 7                  TRA     s:11088
         7 001572   001573 710000 7                  TRA     s:11086

      807    11085    5            CASE ( %DMTC9 ) ;

      808    11086    5               TDOPEN_FPT.V.TEST# = %TD_TEST_POLTS ;

  11086  7 001573   010000 236003                    LDQ     4096,DU
         7 001574   000224 752040 5                  STCQ    TDOPEN_FPT+10,'40'O
         7 001575   001611 710000 7                  TRA     s:11095

      809    11087    5            CASE (ELSE) ;

      810    11088    5               TDOPEN_FPT.V.TEST# = %TD_TEST_MTAR ;

  11088  7 001576   040000 236003                    LDQ     16384,DU
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:278  
         7 001577   000224 752040 5                  STCQ    TDOPEN_FPT+10,'40'O

      811    11089    5         END /* CASE  */ ;

  11089  7 001600   001611 710000 7                  TRA     s:11095

      812    11090    4         SELECT (ELSE) ;

      813    11091    4      TOP_ERROR_CODE.ERR# = %E$BADTT ;

  11091  7 001601   000173 236000 5                  LDQ     TOP_ERROR_CODE
         7 001602   000006 376000 8                  ANQ     6
         7 001603   003210 276007                    ORQ     1672,DL
         7 001604   000173 756000 5                  STQ     TOP_ERROR_CODE

      814    11092    4      CALL TOX$SCREECH (TOP_ERROR_CODE) ;

  11092  7 001605   000007 630400 8                  EPPR0   7
         7 001606   000017 631400 xsym               EPPR1   B_VECTNIL+15
         7 001607   000000 701000 xent               TSX1    TOX$SCREECH
         7 001610   000000 011000                    NOP     0

      815    11093    4      END /* SELECT */ ;

      816    11094
      817    11095    3      TDOPEN_FPT.V.DEVICE.IOM# = NEW_ICCDD.ICCDD_.IOM# ;

  11095  7 001611   200026 236100                    LDQ     NEW_ICCDD,,AUTO
         7 001612   000024 772000                    QRL     20
         7 001613   000222 676000 5                  ERQ     TDOPEN_FPT+8
         7 001614   007000 376007                    ANQ     3584,DL
         7 001615   000222 656000 5                  ERSQ    TDOPEN_FPT+8

      818    11096    3      TDOPEN_FPT.V.DEVICE.CHAN# = NEW_ICCDD.ICCDD_.CHAN# ;

  11096  7 001616   200026 236100                    LDQ     NEW_ICCDD,,AUTO
         7 001617   003770 376003                    ANQ     2040,DU
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:279  
         7 001620   000025 772000                    QRL     21
         7 001621   000222 552004 5                  STBQ    TDOPEN_FPT+8,'04'O

      819    11097    3      TDOPEN_FPT.V.DEVICE.DVN# = NEW_ICCDD.ICCDD_.DEV# ;

  11097  7 001622   200026 236100                    LDQ     NEW_ICCDD,,AUTO
         7 001623   000003 772000                    QRL     3
         7 001624   000222 752004 5                  STCQ    TDOPEN_FPT+8,'04'O

      820    11098    3      TDOPEN_FPT.CHAIN_ = VECTOR (TOP$TCP.BFR.TRAIN_IMAGE(TCX)) ;

  11098  7 001625   200031 470500                    LDP0    @TCX,,AUTO
         7 001626   000000 236100                    LDQ     0,,PR0
         7 001627   000122 402007                    MPY     82,DL
         7 001630   000011 235000 8                  LDA     9
         7 001631   000023 736000                    QLS     19
         7 001632   000024 036003                    ADLQ    20,DU
         7 001633   000003 036000 xsym               ADLQ    TOT$DMC+3
         7 001634   000214 757000 5                  STAQ    TDOPEN_FPT+2

      821    11099    3      TDOPEN_FPT.VFC_ = VECTOR (TOP$TCP.BFR.VFC_IMAGE(TCX)) ;

  11099  7 001635   000000 236100                    LDQ     0,,PR0
         7 001636   000122 402007                    MPY     82,DL
         7 001637   000011 235000 8                  LDA     9
         7 001640   000023 736000                    QLS     19
         7 001641   000134 036003                    ADLQ    92,DU
         7 001642   000003 036000 xsym               ADLQ    TOT$DMC+3
         7 001643   000216 757000 5                  STAQ    TDOPEN_FPT+4

      822    11100    3      RETURN ;

  11100  7 001644   200030 221300                    LDX1  ! @A+1,,AUTO
         7 001645   000001 702211                    TSX2  ! 1,X1

      823    11101
      824    11102    3   END SET_TDOPEN_FPT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:280  
      825    11103        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:281  
      826    11104        /*I* NAME:         ALLOCATE_DEVICE
      827    11105             AUTHOR:       Scott S. Sheppard
      828    11106             PURPOSE:      allocates a device for T&D
      829    11107             INTERFACE:    M$TDOPEN
      830    11108                           TOX$WARN
      831    11109             PARAMETERS:   None passed.
      832    11110             DATA:         TDOPEN_FPT.V.TEST# input / output
      833    11111             DESCRIPTION:  This  procedure allocates a  device for T&D by
      834    11112                           performing a TDOPEN.  If  an attempt to open a
      835    11113                           MTAR device  with  write permission  fails,  a
      836    11114                           retry is done for read permission.
      837    11115        */
      838    11116
      839    11117    2   ALLOCATE_DEVICE: PROC ALTRET ;

  11117  7 001646   200030 741300       ALLOCATE_DE* STX1  ! @A+1,,AUTO

      840    11118
      841    11119        /* Code */
      842    11120
      843    11121    3      CALL M$TDOPEN (TDOPEN_FPT) WHENALTRETURN

  11121  7 001647   000212 630400 5                  EPPR0   TDOPEN_FPT
         7 001650   470002 713400                    CLIMB   alt,+28674
         7 001651   401400 401760                    pmme    nvectors=4
         7 001652   001654 702000 7                  TSX2    s:11125
         7 001653   001724 710000 7                  TRA     s:11139

      844    11122    4           DO ;

      845    11123               /* Allow MTAR/FTAR read-only tests to proceed
      846    11124                  like the POLTS tests */
      847    11125    4              IF (TDOPEN_FPT.V.TEST# = %TD_TEST_MTAR) AND NOT

  11125  7 001654   000224 236000 5                  LDQ     TDOPEN_FPT+10
         7 001655   770000 376003                    ANQ     -4096,DU
         7 001656   040000 116003                    CMPQ    16384,DU
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:282  
         7 001657   001712 601000 7                  TNZ     NO_ALLOCATION
         7 001660   200023 236100                    LDQ     TCX,,AUTO
         7 001661   000244 402007                    MPY     164,DL
         7 001662   000003 470400 xsym               LDP0    TOT$DMC+3
         7 001663   000002 236106                    LDQ     2,QL,PR0
         7 001664   000120 676000 6                  ERQ     CRLF_+10
         7 001665   000010 376000 8                  ANQ     8
         7 001666   001712 600000 7                  TZE     NO_ALLOCATION
         7 001667   200023 236100                    LDQ     TCX,,AUTO
         7 001670   000244 402007                    MPY     164,DL
         7 001671   000002 236106                    LDQ     2,QL,PR0
         7 001672   000116 676000 6                  ERQ     CRLF_+8
         7 001673   000010 376000 8                  ANQ     8
         7 001674   001712 600000 7                  TZE     NO_ALLOCATION
         7 001675   200023 236100                    LDQ     TCX,,AUTO
         7 001676   000244 402007                    MPY     164,DL
         7 001677   000002 236106                    LDQ     2,QL,PR0
         7 001700   000111 676000 6                  ERQ     CRLF_+3
         7 001701   000010 376000 8                  ANQ     8
         7 001702   001712 600000 7                  TZE     NO_ALLOCATION

      848    11126    4                      (TOP$TCP.TEST_TYPE(TCX) = 'MDC' OR
      849    11127    4                      TOP$TCP.TEST_TYPE(TCX) = 'MDS' OR
      850    11128    4                      TOP$TCP.TEST_TYPE(TCX) = 'TMD' )
      851    11129    5              THEN DO ;

      852    11130    5                      TDOPEN_FPT.V.TEST# = %TD_TEST_POLTS ;

  11130  7 001703   010000 236003                    LDQ     4096,DU
         7 001704   000224 752040 5                  STCQ    TDOPEN_FPT+10,'40'O

      853    11131    5                      CALL M$TDOPEN (TDOPEN_FPT) ALTRET (NO_ALLOCATION) ;

  11131  7 001705   000212 630400 5                  EPPR0   TDOPEN_FPT
         7 001706   470002 713400                    CLIMB   alt,+28674
         7 001707   401400 401760                    pmme    nvectors=4
         7 001710   001712 702000 7                  TSX2    NO_ALLOCATION
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:283  

      854    11132    5                   END /* THEN */ ;

  11132  7 001711   001724 710000 7                  TRA     s:11139

      855    11133    5              ELSE DO ;

      856    11134    5   NO_ALLOCATION:
      857    11135    5                      CALL TOX$WARN (B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR) ;

  11135  7 001712   000000 470400 xsym  NO_ALLOCATI* LDP0    B$TCB$
         7 001713   000000 471500                    LDP1    0,,PR0
         7 001714   100102 633500                    EPPR3   66,,PR1
         7 001715   205740 453500                    STP3    BCD_BUF_INX+1,,AUTO
         7 001716   205740 630500                    EPPR0   BCD_BUF_INX+1,,AUTO
         7 001717   000017 631400 xsym               EPPR1   B_VECTNIL+15
         7 001720   000000 701000 xent               TSX1    TOX$WARN
         7 001721   000000 011000                    NOP     0

      858    11136    5                      ALTRETURN ;

  11136  7 001722   200030 221300                    LDX1  ! @A+1,,AUTO
         7 001723   000000 702211                    TSX2  ! 0,X1

      859    11137    5                   END /* ELSE */ ;
      860    11138    4           END /* WHENALTRETURN */ ;
      861    11139    3      RETURN ;

  11139  7 001724   200030 221300                    LDX1  ! @A+1,,AUTO
         7 001725   000001 702211                    TSX2  ! 1,X1

      862    11140
      863    11141    3   END ALLOCATE_DEVICE ;
      864    11142        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:284  
      865    11143        /*I* NAME:         SET_MTAR_PERMISSION
      866    11144             AUTHOR:       Scott S. Sheppard
      867    11145             PURPOSE:      sets MTAR read/write permission
      868    11146             INTERFACE:    PINCRW
      869    11147             PARAMETERS:   TCX - input (test control index)
      870    11148             DATA:         WD_2 - input (address of MTAR flag)
      871    11149             DESCRIPTION:  This  procedure  sets   the  MTAR  read  write
      872    11150                           permission flag from the TDOPEN value used for
      873    11151                           the device.  Type  4 indicates that the device
      874    11152                           is  open  with  write  permission  and  Type 1
      875    11153                           indicates  that  the  device  is open for read
      876    11154                           only.
      877    11155        */
      878    11156
      879    11157    2   SET_MTAR_PERMISSION: PROC (TCX) ;

  11157  7 001726   200030 741300       SET_MTAR_PE* STX1  ! @A+1,,AUTO

      880    11158
      881    11159    3      DCL TCX                      UBIN WORD ALIGNED ;
      882    11160    3      DCL MTARF$                   PTR ALIGNED ;
      883    11161    3      DCL 1 MTAR_DATA BASED ALIGNED,
      884    11162    3            2 *                    BIT (33) UNAL,
      885    11163    3            2 WR_FLAG#             BIT (3) UNAL ;
      886    11164
      887    11165        /* Code */
      888    11166
      889    11167    3      IF TOP$TCP.TEST_TYPE(TCX) = 'MTR'

  11167  7 001727   200031 470500                    LDP0    @TCX,,AUTO
         7 001730   000000 236100                    LDQ     0,,PR0
         7 001731   000122 402007                    MPY     82,DL
         7 001732   000001 736000                    QLS     1
         7 001733   000003 471400 xsym               LDP1    TOT$DMC+3
         7 001734   100002 236106                    LDQ     2,QL,PR1
         7 001735   000112 676000 6                  ERQ     CRLF_+4
         7 001736   000010 376000 8                  ANQ     8
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:285  
         7 001737   001760 601000 7                  TNZ     s:11175

      890    11168    4      THEN DO ;

      891    11169    4              MTARF$ = PINCRW (IS$, WD_2.MTAR_FLAG_ADDR#) ;

  11169  7 001740   200012 473500                    LDP3    @WD_2,,AUTO
         7 001741   300000 720100                    LXL0    0,,PR3
         7 001742   000000 636010                    EAQ     0,X0
         7 001743   000000 036000 6                  ADLQ    FPTN_
         7 001744   200032 756100                    STQ     MTARF$,,AUTO

      892    11170    4              IF TDOPEN_FPT.V.TEST# = %TD_TEST_MTAR

  11170  7 001745   000224 236000 5                  LDQ     TDOPEN_FPT+10
         7 001746   770000 376003                    ANQ     -4096,DU
         7 001747   040000 116003                    CMPQ    16384,DU
         7 001750   001755 601000 7                  TNZ     s:11172

      893    11171    4              THEN MTARF$ -> MTAR_DATA.WR_FLAG# = '0'O ;

  11171  7 001751   200032 474500                    LDP4    MTARF$,,AUTO
         7 001752   000012 236000 8                  LDQ     10
         7 001753   400000 356100                    ANSQ    0,,PR4
         7 001754   001760 710000 7                  TRA     s:11175

      894    11172    4              ELSE MTARF$ -> MTAR_DATA.WR_FLAG# = '7'O ;

  11172  7 001755   200032 474500                    LDP4    MTARF$,,AUTO
         7 001756   000007 236007                    LDQ     7,DL
         7 001757   400000 256100                    ORSQ    0,,PR4

      895    11173    4           END /* THEN */ ;

      896    11174    3      ELSE /* not an MTR type test */ ;
      897    11175    3      RETURN ;

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:286  
  11175  7 001760   200030 221300                    LDX1  ! @A+1,,AUTO
         7 001761   000001 702211                    TSX2  ! 1,X1

      898    11176
      899    11177    3   END SET_MTAR_PERMISSION ;
      900    11178        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:287  
      901    11179        /*I* NAME:         BUILD_DEVICE_SCT
      902    11180             INTERFACE:    BUILD_CHN_3_SCT
      903    11181                           BUILD_CONSOLE_SCT
      904    11182                           BUILD_TAPE_SCT
      905    11183                           BUILD_DISK_SCT
      906    11184                           BUILD_PRINTER_SCT
      907    11185                           BUILD_CREADER_SCT
      908    11186                           BUILD_CPUNCH_SCT
      909    11187             INPUT:        TCX, the index into TOP$TCP for the test page.
      910    11188             OUTPUT:       TOP$SCT.DV(TCX), device pseudo SCT table is built
      911    11189             DESCRIPTION:  Each entry into TOP$TCP has associated with it
      912    11190                           a pseudo device SCT table, TOP$SCT.DV(TCX).  The
      913    11191                           format is the same as the SCT tables in GCOS.  This
      914    11192                           routine builds the SCT table to the extent required
      915    11193                           by CP6 TOLTS.  These psuedo SCT tables are not
      916    11194                           needed or used by CP6.
      917    11195
      918    11196                           A pointer, DV_SCT$, is built to the device SCT
      919    11197                           for this test page, TOP$SCT.DV(TCX).  Then the device
      920    11198                           code in TOP$TCP.DEVICE_CODE(TCX) is used to
      921    11199                           call a separate routine to build the SCT table,
      922    11200                           depending on the device.  Each peripheral type has its
      923    11201                           own SCT building routine.
      924    11202
      925    11203                           The BASED structure, DEVICE_SCT, defines the only
      926    11204                           fields in the SCT which need to be set.  All other
      927    11205                           fields in the GCOS SCT tables are currently not
      928    11206                           applicable in the CP6 environment.
      929    11207        */
      930    11208        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:288  
      931    11209    2   BUILD_DEVICE_SCT: PROC (TCX) ALTRET ;

  11209  7 001762   200030 741300       BUILD_DEVIC* STX1  ! @A+1,,AUTO

      932    11210
      933    11211    3      DCL DV_SCT$ PTR ALIGNED ;
      934    11212    3      DCL TCX     UBIN (36) ALIGNED ;
      935    11213
      936    11214        /* Universally based structures for SCT's */
      937    11215
      938    11216    3      DCL 1 DEVICE_SCT BASED ALIGNED,
      939    11217    3            2 W0,
      940    11218    3              3 DEVICE_TYPE#   UBIN (6)  UNAL,
      941    11219    3              3 DEVICE_NO#     UBIN (6)  UNAL,
      942    11220    3              3 BIT12#         BIT (1)  UNAL,
      943    11221    3              3 BIT13#         BIT (1)  UNAL,
      944    11222    3              3 BIT14#         BIT (1)  UNAL,
      945    11223    3              3 *              BIT (2)  UNAL,
      946    11224    3              3 BIT17#         BIT (1)  UNAL,
      947    11225    3              3 *              BIT (18) UNAL,
      948    11226    3            2 W1,
      949    11227    3              3 *              BIT (15) UNAL,
      950    11228    3              3 MODULES#       BIT (3)  UNAL,
      951    11229    3              3 *              BIT (3)  UNAL,
      952    11230    3              3 DENSITIES#     BIT (4)  UNAL,
      953    11231    3              3 *              BIT (11) UNAL,
      954    11232    3            2 W2#              BIT (36) ALIGNED,
      955    11233    3            2 W3#              BIT (36) ALIGNED ;
      956    11234              %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:289  
      957    11235        /* Code */
      958    11236
      959    11237    3      DV_SCT$ = ADDR (TOP$SCT.DV(TCX)) ;

  11237  7 001763   200031 470500                    LDP0    @TCX,,AUTO
         7 001764   000000 235100                    LDA     0,,PR0
         7 001765   000003 735000                    ALS     3
         7 001766   000004 631405 xsym               EPPR1   TOP$SCT+4,AL
         7 001767   200032 451500                    STP1    DV_SCT$,,AUTO

      960    11238    4      DO CASE (TOP$TCP.DEVICE_CODE(TCX)) ;

  11238  7 001770   000000 236100                    LDQ     0,,PR0
         7 001771   000122 402007                    MPY     82,DL
         7 001772   000001 736000                    QLS     1
         7 001773   000003 473400 xsym               LDP3    TOT$DMC+3
         7 001774   300007 220106                    LDX0    7,QL,PR3
         7 001775   000071 100003                    CMPX0   57,DU
         7 001776   002000 602010 7                  TNC     s:11238+8,X0
         7 001777   002121 710000 7                  TRA     s:11257
         7 002000   002121 710000 7                  TRA     s:11257
         7 002001   002121 710000 7                  TRA     s:11257
         7 002002   002121 710000 7                  TRA     s:11257
         7 002003   002071 710000 7                  TRA     s:11240
         7 002004   002121 710000 7                  TRA     s:11257
         7 002005   002121 710000 7                  TRA     s:11257
         7 002006   002121 710000 7                  TRA     s:11257
         7 002007   002121 710000 7                  TRA     s:11257
         7 002010   002121 710000 7                  TRA     s:11257
         7 002011   002121 710000 7                  TRA     s:11257
         7 002012   002121 710000 7                  TRA     s:11257
         7 002013   002121 710000 7                  TRA     s:11257
         7 002014   002121 710000 7                  TRA     s:11257
         7 002015   002121 710000 7                  TRA     s:11257
         7 002016   002077 710000 7                  TRA     s:11244
         7 002017   002121 710000 7                  TRA     s:11257
         7 002020   002121 710000 7                  TRA     s:11257
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:290  
         7 002021   002121 710000 7                  TRA     s:11257
         7 002022   002121 710000 7                  TRA     s:11257
         7 002023   002121 710000 7                  TRA     s:11257
         7 002024   002110 710000 7                  TRA     s:11251
         7 002025   002121 710000 7                  TRA     s:11257
         7 002026   002121 710000 7                  TRA     s:11257
         7 002027   002121 710000 7                  TRA     s:11257
         7 002030   002121 710000 7                  TRA     s:11257
         7 002031   002074 710000 7                  TRA     s:11242
         7 002032   002116 710000 7                  TRA     s:11255
         7 002033   002121 710000 7                  TRA     s:11257
         7 002034   002113 710000 7                  TRA     s:11253
         7 002035   002121 710000 7                  TRA     s:11257
         7 002036   002121 710000 7                  TRA     s:11257
         7 002037   002121 710000 7                  TRA     s:11257
         7 002040   002121 710000 7                  TRA     s:11257
         7 002041   002121 710000 7                  TRA     s:11257
         7 002042   002121 710000 7                  TRA     s:11257
         7 002043   002121 710000 7                  TRA     s:11257
         7 002044   002121 710000 7                  TRA     s:11257
         7 002045   002105 710000 7                  TRA     s:11249
         7 002046   002121 710000 7                  TRA     s:11257
         7 002047   002105 710000 7                  TRA     s:11249
         7 002050   002105 710000 7                  TRA     s:11249
         7 002051   002121 710000 7                  TRA     s:11257
         7 002052   002121 710000 7                  TRA     s:11257
         7 002053   002105 710000 7                  TRA     s:11249
         7 002054   002121 710000 7                  TRA     s:11257
         7 002055   002105 710000 7                  TRA     s:11249
         7 002056   002105 710000 7                  TRA     s:11249
         7 002057   002121 710000 7                  TRA     s:11257
         7 002060   002121 710000 7                  TRA     s:11257
         7 002061   002121 710000 7                  TRA     s:11257
         7 002062   002121 710000 7                  TRA     s:11257
         7 002063   002121 710000 7                  TRA     s:11257
         7 002064   002121 710000 7                  TRA     s:11257
         7 002065   002105 710000 7                  TRA     s:11249
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:291  
         7 002066   002121 710000 7                  TRA     s:11257
         7 002067   002121 710000 7                  TRA     s:11257
         7 002070   002105 710000 7                  TRA     s:11249

      961    11239    4         CASE (%CHN_3) ;

      962    11240    4            CALL BUILD_CHN_3_SCT ;

  11240  7 002071   002133 701000 7                  TSX1    BUILD_CHN_3_SCT
         7 002072   000000 011000                    NOP     0
         7 002073   002131 710000 7                  TRA     s:11260

      963    11241    4         CASE (%DSCC1) ;

      964    11242    4            CALL BUILD_CONSOLE_SCT ;

  11242  7 002074   002550 701000 7                  TSX1    BUILD_CONSOLE_SCT
         7 002075   000000 011000                    NOP     0
         7 002076   002131 710000 7                  TRA     s:11260

      965    11243    4         CASE ( %DMTC9 ) ;

      966    11244    4            CALL BUILD_TAPE_SCT WHENALTRETURN

  11244  7 002077   002201 701000 7                  TSX1    BUILD_TAPE_SCT
         7 002100   002102 702000 7                  TSX2    s:11246
         7 002101   002104 710000 7                  TRA     s:11246+2

      967    11245    5                 DO ;

      968    11246    5                    ALTRETURN ;

  11246  7 002102   200030 221300                    LDX1  ! @A+1,,AUTO
         7 002103   000000 702211                    TSX2  ! 0,X1
         7 002104   002131 710000 7                  TRA     s:11260

      969    11247    5                 END ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:292  
      970    11248    4         CASE (%DS509,%DS450,%DSA1B,%DSD1B,%DSC1B,%DSK1B,%DSM1D,%DSM2D) ;

      971    11249    4            CALL BUILD_DISK_SCT ;

  11249  7 002105   002156 701000 7                  TSX1    BUILD_DISK_SCT
         7 002106   000000 011000                    NOP     0
         7 002107   002131 710000 7                  TRA     s:11260

      972    11250    4         CASE (%DPR41) ;

      973    11251    4            CALL BUILD_PRINTER_SCT ;

  11251  7 002110   002433 701000 7                  TSX1    BUILD_PRINTER_SCT
         7 002111   000000 011000                    NOP     0
         7 002112   002131 710000 7                  TRA     s:11260

      974    11252    4         CASE (%DCR31) ;

      975    11253    4            CALL BUILD_CREADER_SCT ;

  11253  7 002113   002502 701000 7                  TSX1    BUILD_CREADER_SCT
         7 002114   000000 011000                    NOP     0
         7 002115   002131 710000 7                  TRA     s:11260

      976    11254    4         CASE (%DCP30) ;

      977    11255    4            CALL BUILD_CPUNCH_SCT ;

  11255  7 002116   002525 701000 7                  TSX1    BUILD_CPUNCH_SCT
         7 002117   000000 011000                    NOP     0
         7 002120   002131 710000 7                  TRA     s:11260

      978    11256    4         CASE (ELSE) ;

      979    11257    4            TOP_ERROR_CODE.ERR# = %E$BADDEVTYP ;

  11257  7 002121   000173 236000 5                  LDQ     TOP_ERROR_CODE
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:293  
         7 002122   000006 376000 8                  ANQ     6
         7 002123   003220 276007                    ORQ     1680,DL
         7 002124   000173 756000 5                  STQ     TOP_ERROR_CODE

      980    11258    4            CALL TOX$SCREECH (TOP_ERROR_CODE) ;

  11258  7 002125   000007 630400 8                  EPPR0   7
         7 002126   000017 631400 xsym               EPPR1   B_VECTNIL+15
         7 002127   000000 701000 xent               TSX1    TOX$SCREECH
         7 002130   000000 011000                    NOP     0

      981    11259    4      END /* CASE */ ;

      982    11260    3      RETURN ;

  11260  7 002131   200030 221300                    LDX1  ! @A+1,,AUTO
         7 002132   000001 702211                    TSX2  ! 1,X1

      983    11261
      984    11262        /*END BUILD_DEVICE_SCT*/
      985    11263        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:294  
      986    11264        /*I* NAME:         BUILD_CHN_3_SCT
      987    11265             INTERFACE:
      988    11266             INPUT:
      989    11267             OUTPUT:       TOP$SCT.DV(TCX) built(see below)
      990    11268             DESCRIPTION:  Merely sets the DEVICE_TYPE and DEVICE_NO fields
      991    11269                           in the SCT from information in TOP$TCP, bit 12
      992    11270                           for last channel for an MCA channel 3 request.
      993    11271        */
      994    11272
      995    11273    3   BUILD_CHN_3_SCT: PROC ;

  11273  7 002133   200034 741300       BUILD_CHN_3* STX1  ! REASON+1,,AUTO

      996    11274
      997    11275        /* Code */
      998    11276
      999    11277    4      DV_SCT$ -> DEVICE_SCT = '0'B ;

  11277  7 002134   200032 470500                    LDP0    DV_SCT$,,AUTO
         7 002135   000100 100400                    MLR     fill='000'O
         7 002136   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         7 002137   000000 000020                    ADSC9   0,,PR0                   cn=0,n=16

     1000    11278    4      DV_SCT$ -> DEVICE_SCT.W0.DEVICE_TYPE# = TOP$TCP.DEVICE_CODE(TCX) ;

  11278  7 002140   200031 471500                    LDP1    @TCX,,AUTO
         7 002141   100000 236100                    LDQ     0,,PR1
         7 002142   000122 402007                    MPY     82,DL
         7 002143   000001 736000                    QLS     1
         7 002144   000003 473400 xsym               LDP3    TOT$DMC+3
         7 002145   300007 236106                    LDQ     7,QL,PR3
         7 002146   000014 736000                    QLS     12
         7 002147   000000 752140                    STCQ    0,'40'O,PR0

     1001    11279    4      DV_SCT$ -> DEVICE_SCT.W0.DEVICE_NO# = 0 ;

  11279  7 002150   000000 236003                    LDQ     0,DU
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:295  
         7 002151   000000 752120                    STCQ    0,'20'O,PR0

     1002    11280    4      DV_SCT$ -> DEVICE_SCT.W0.BIT12# = '1'B ;

  11280  7 002152   000040 236003                    LDQ     32,DU
         7 002153   000000 256100                    ORSQ    0,,PR0

     1003    11281    4      RETURN ;

  11281  7 002154   200034 221300                    LDX1  ! REASON+1,,AUTO
         7 002155   000001 702211                    TSX2  ! 1,X1

     1004    11282
     1005    11283    4   END BUILD_CHN_3_SCT ;
     1006    11284        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:296  
     1007    11285        /*I* NAME:         BUILD_DISK_SCT
     1008    11286             INTERFACE:
     1009    11287             INPUT:
     1010    11288             OUTPUT:       TOP$SCT.DV(TCX) built(see below)
     1011    11289             DESCRIPTION:  Merely sets the DEVICE_TYPE and DEVICE_NO fields
     1012    11290                           in the SCT from information in TOP$TCP.
     1013    11291        */
     1014    11292
     1015    11293    3   BUILD_DISK_SCT: PROC ;

  11293  7 002156   200034 741300       BUILD_DISK_* STX1  ! REASON+1,,AUTO

     1016    11294
     1017    11295        /* Code */
     1018    11296
     1019    11297    4      DV_SCT$ -> DEVICE_SCT = '0'B ;

  11297  7 002157   200032 470500                    LDP0    DV_SCT$,,AUTO
         7 002160   000100 100400                    MLR     fill='000'O
         7 002161   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         7 002162   000000 000020                    ADSC9   0,,PR0                   cn=0,n=16

     1020    11298    4      DV_SCT$ -> DEVICE_SCT.W0.DEVICE_TYPE# = TOP$TCP.DEVICE_CODE(TCX) ;

  11298  7 002163   200031 471500                    LDP1    @TCX,,AUTO
         7 002164   100000 236100                    LDQ     0,,PR1
         7 002165   000122 402007                    MPY     82,DL
         7 002166   000001 736000                    QLS     1
         7 002167   000003 473400 xsym               LDP3    TOT$DMC+3
         7 002170   300007 236106                    LDQ     7,QL,PR3
         7 002171   000014 736000                    QLS     12
         7 002172   000000 752140                    STCQ    0,'40'O,PR0

     1021    11299    4      DV_SCT$ -> DEVICE_SCT.W0.DEVICE_NO# = FICCDD$ -> FICCDD.DEV# ;

  11299  7 002173   200024 473500                    LDP3    FICCDD$,,AUTO
         7 002174   300000 236100                    LDQ     0,,PR3
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:297  
         7 002175   000006 736000                    QLS     6
         7 002176   000000 752120                    STCQ    0,'20'O,PR0

     1022    11300    4      RETURN ;

  11300  7 002177   200034 221300                    LDX1  ! REASON+1,,AUTO
         7 002200   000001 702211                    TSX2  ! 1,X1

     1023    11301
     1024    11302    4   END BUILD_DISK_SCT ;
     1025    11303        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:298  
     1026    11304        /*I* NAME:         BUILD_TAPE_SCT
     1027    11305             INTERFACE:    GET_DENSITIES
     1028    11306             INPUT:
     1029    11307             OUTPUT:       TOP$SCT.DV(TCX) built.
     1030    11308             DESCRIPTION:  Merely sets the DEVICE_TYPE,DEVICE_NO and DENSITIES
     1031    11309                           fields in the SCT from information in TOP$TCP.
     1032    11310                           GET_DENSITIES subroutine does a Device Survey
     1033    11311                           command to the tape MPC to get density capability
     1034    11312                           information about the tape drives since this info
     1035    11313                           is not available from CP6.
     1036    11314        */
     1037    11315
     1038    11316    3   BUILD_TAPE_SCT: PROC ALTRET ;

  11316  7 002201   200034 741300       BUILD_TAPE_* STX1  ! REASON+1,,AUTO

     1039    11317
     1040    11318        /* Code */
     1041    11319
     1042    11320    4      DV_SCT$->DEVICE_SCT = '0'B ;

  11320  7 002202   200032 470500                    LDP0    DV_SCT$,,AUTO
         7 002203   000100 100400                    MLR     fill='000'O
         7 002204   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         7 002205   000000 000020                    ADSC9   0,,PR0                   cn=0,n=16

     1043    11321    4      DV_SCT$->DEVICE_SCT.W0.DEVICE_TYPE# = TOP$TCP.DEVICE_CODE(TCX) ;

  11321  7 002206   200031 471500                    LDP1    @TCX,,AUTO
         7 002207   100000 236100                    LDQ     0,,PR1
         7 002210   000122 402007                    MPY     82,DL
         7 002211   000001 736000                    QLS     1
         7 002212   000003 473400 xsym               LDP3    TOT$DMC+3
         7 002213   300007 236106                    LDQ     7,QL,PR3
         7 002214   000014 736000                    QLS     12
         7 002215   000000 752140                    STCQ    0,'40'O,PR0

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:299  
     1044    11322    4      DV_SCT$->DEVICE_SCT.W0.DEVICE_NO# = FICCDD$->FICCDD.DEV# ;

  11322  7 002216   200024 473500                    LDP3    FICCDD$,,AUTO
         7 002217   300000 236100                    LDQ     0,,PR3
         7 002220   000006 736000                    QLS     6
         7 002221   000000 752120                    STCQ    0,'20'O,PR0

     1045    11323    4      IF TOP$TCP.TEST_TYPE(TCX) = 'ITR'

  11323  7 002222   100000 236100                    LDQ     0,,PR1
         7 002223   000122 402007                    MPY     82,DL
         7 002224   000001 736000                    QLS     1
         7 002225   000003 474400 xsym               LDP4    TOT$DMC+3
         7 002226   400002 236106                    LDQ     2,QL,PR4
         7 002227   000117 676000 6                  ERQ     CRLF_+9
         7 002230   000010 376000 8                  ANQ     8
         7 002231   002247 600000 7                  TZE     s:11329

     1046    11324    4      THEN /* Controller under test, no density applicable */ ;
     1047    11325    5      ELSE DO ;

     1048    11326    5              CALL GET_DENSITIES ALTRET (BAD_SURVEY) ;

  11326  7 002232   002253 701000 7                  TSX1    GET_DENSITIES
         7 002233   002251 702000 7                  TSX2    BAD_SURVEY

     1049    11327    5              DV_SCT$ ->DEVICE_SCT.W1.DENSITIES# = TOP$TCP.SCT.TAPE_DENSITY(TCX) ;

  11327  7 002234   200031 470500                    LDP0    @TCX,,AUTO
         7 002235   000000 236100                    LDQ     0,,PR0
         7 002236   000122 402007                    MPY     82,DL
         7 002237   200032 471500                    LDP1    DV_SCT$,,AUTO
         7 002240   000001 736000                    QLS     1
         7 002241   000003 473400 xsym               LDP3    TOT$DMC+3
         7 002242   300012 236106                    LDQ     10,QL,PR3
         7 002243   000003 772000                    QRL     3
         7 002244   100001 676100                    ERQ     1,,PR1
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:300  
         7 002245   074000 376007                    ANQ     30720,DL
         7 002246   100001 656100                    ERSQ    1,,PR1

     1050    11328    5           END /* ELSE */ ;

     1051    11329    4      RETURN ;

  11329  7 002247   200034 221300                    LDX1  ! REASON+1,,AUTO
         7 002250   000001 702211                    TSX2  ! 1,X1

     1052    11330
     1053    11331    4   BAD_SURVEY:
     1054    11332    4      ALTRETURN ;

  11332  7 002251   200034 221300       BAD_SURVEY   LDX1  ! REASON+1,,AUTO
         7 002252   000000 702211                    TSX2  ! 0,X1

     1055    11333
     1056    11334        /* END BUILD_TAPE_SCT */
     1057    11335        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:301  
     1058    11336        /*I* NAME:         GET_DENSITITES
     1059    11337             INTERFACE:    M$TDIO
     1060    11338             INPUT:
     1061    11339             OUTPUT:       TOP$TCP.TAPE_DENSITY(TCX) contains the 4 bit
     1062    11340                           density capability code which was fetched from the
     1063    11341                           hardware.  This indicates what densities needed to be
     1064    11342                           tested by POLTS.
     1065    11343             DESCRIPTION:  A call is made through the normal CP6 test I/O
     1066    11344                           interface, M$TDIO to fetch hardware information
     1067    11345                     about the drives on the tape MPC using the Device Survey
     1068    11346                           command. The Device Survey command ('57'O) returns
     1069    11347                           8 words of information(18 bits of infomation per
     1070    11348                           drive, for 16 drives) into the buffer DEVICE_INFO.
     1071    11349                           The only information which is saved
     1072    11350                           at this point is the tape density information in
     1073    11351                           the lower byte.
     1074    11352
     1075    11353                           TDIO_FPT is set up for the I/O as follows:
     1076    11354
     1077    11355                           TDIO_FPT.DATA_ = vector framing the entire ISR
     1078    11356                                           (all vector information is in
     1079    11357                                           the static declaration on the
     1080    11358                                           vector DATA_VECTOR except the
     1081    11359                                           size information which is inserted
     1082    11360                                           using B$JIT.TDP).
     1083    11361                           TDIO_FPT.DCWLIST_ = vector framing DENSITY_DCWLIST,
     1084    11362                                              which is the Device Survey IDCW
     1085    11363                                              and a DCW for 8 words pointing to
     1086    11364                                              DEVICE_INFO.
     1087    11365                           TDIO_FPT.V.DCB# = DCB# from TOP$TCP
     1088    11366                           TDIO_FPT.V.WAIT# = set for a "wait" I/O
     1089    11367                           TDIO_FPT.V.PCW# = required constant
     1090    11368                           TDIO_FPT.V.ALTPATH = none specified
     1091    11369                           TDIO_FPT.V.EVENT# = none specified
     1092    11370                           TDIO_FPT.V.TIMEOUT# = take CP6 default
     1093    11371
     1094    11372                           On return from the call to M$TDIO, the status is
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:302  
     1095    11373                           checked.  It it is not "ready" an error condition is
     1096    11374                           indicated. Otherwise the index into the table, DIX,
     1097    11375                           is set to the zero relative device info. entry.
     1098    11376                           This contains the information for the tape drive of
     1099    11377                           interest.  A "1" is subtracted from the device
     1100    11378                           number stored in TOP$TCP.Y.DD(TCX) when
     1101    11379                           computing the index because information is
     1102    11380                           returned in DEVICE_INFO starting at device 1
     1103    11381                           instead of device 0.  Thus, DEVICE_INFO(0)
     1104    11382                           contains the information for device 1, and
     1105    11383                           DEVICE_INFO(15) contains the information for
     1106    11384                           device 16.  The 4 bit density code is stored in
     1107    11385                           TOP$TCP.TAPE_DENSITY(TCX).
     1108    11386
     1109    11387                           As of the MTP0610 controller, the following
     1110    11388                           density codes were valid:
     1111    11389
     1112    11390                               '1100'b = 1600 bpi
     1113    11391                               '0101'b = 556,800,1600 bpi
     1114    11392                               '1000'b = 800,1600 bpi
     1115    11393                               '1001'b = 556,800 bpi
     1116    11394                               '1011'b = 1600,6250 bpi
     1117    11395                               '1010'b = 6250 bpi
     1118    11396        */
     1119    11397        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:303  
     1120    11398    4   GET_DENSITIES: PROC ALTRET ;

  11398  7 002253   200036 741300       GET_DENSITI* STX1  ! @TCX+1,,AUTO

     1121    11399
     1122    11400    5      DCL 1 DATA_VECTOR STATIC DALIGNED,
     1123    11401    5            2 SIZE#     UBIN (20) UNAL,
     1124    11402    5            2 FLAGS#    BIT (9) UNAL INIT ('777'O),
     1125    11403    5            2 V#        BIT (2) UNAL INIT ('01'B),
     1126    11404    5            2 *         BIT (5) UNAL,
     1127    11405    5            2 BASE#     UBIN (20) UNAL INIT (0),
     1128    11406    5            2 *         BIT (4) UNAL INIT ('0'B),
     1129    11407    5            2 SEGID#    UBIN (12) UNAL INIT (%IS_SEGID) ;
     1130    11408    5      DCL DATA_V REDEF DATA_VECTOR BIT (72) ;
     1131    11409    5      DCL 1 DENSITY_DCWLIST STATIC ALIGNED,
     1132    11410    5            2 IDCW,
     1133    11411    5              3 CMD#        BIT (6) INIT ('57'O),
     1134    11412    5              3 DEV_NUMBER# UBIN (6) UNAL INIT (0),
     1135    11413    5              3 *           BIT (6) UNAL INIT ('0'B),
     1136    11414    5              3 TYPE#       UBIN (3) UNAL INIT (7),
     1137    11415    5              3 *           BIT (3) UNAL INIT ('0'B),
     1138    11416    5              3 CHAN_CMD#   BIT (6) INIT ('0'B),
     1139    11417    5              3 REC_COUNT#  UBIN (6) UNAL INIT (1),
     1140    11418    5            2 DCW,
     1141    11419    5              3 ADDR#       UBIN HALF UNAL,
     1142    11420    5              3 *           BIT (6) UNAL INIT ('0'B),
     1143    11421    5              3 WORD_COUNT# UBIN (12) UNAL INIT (8) ;
     1144    11422    5      DCL STATUS$           PTR ALIGNED ;
     1145    11423           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:304  
     1146    11424    5      DCL 1 DEVICE_INFO (0:15) STATIC HALIGNED,
     1147    11425    5            2 *         BIT (1) UNAL,
     1148    11426    5            2 ALTCHAN#  BIT (1) UNAL,
     1149    11427    5            2 OPI#      BIT (1) UNAL,
     1150    11428    5            2 RDY#      BIT (1) UNAL,
     1151    11429    5            2 DEV#      UBIN (5) UNAL,
     1152    11430    5            2 *         BIT (1) UNAL,
     1153    11431    5            2 SPEED#    UBIN (3) UNAL,
     1154    11432    5            2 TRACK#    BIT (1) UNAL,
     1155    11433    5            2 DENSITIES# BIT (4) UNAL ;
     1156    11434    5      DCL DEVICE_INFO$    PTR CONSTANT ALIGNED INIT (ADDR(DEVICE_INFO)) ;
     1157    11435    5      DCL 1 DEVICE_INFO_ REDEF DEVICE_INFO$ ALIGNED,
     1158    11436    5            2 ADDR#       UBIN (18) UNAL,
     1159    11437    5            2 SEGID       UBIN (18) UNAL ;
     1160    11438    5      DCL DIX             UBIN HALF HALIGNED ;
     1161    11439           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:305  
     1162    11440        /* Code */
     1163    11441
     1164    11442    5      DENSITY_DCWLIST.DCW.ADDR# = DEVICE_INFO_.ADDR# ;

  11442  7 002254   000001 220000 6                  LDX0    DEVICE_INFO$
         7 002255   000245 740000 5                  STX0    DENSITY_DCWLIST+1

     1165    11443    5      DATA_VECTOR.SIZE# = (B$JIT$ -> B$JIT.TDP - 64) * 1024 * 4 - 1 ;

  11443  7 002256   000000 470400 xsym               LDP0    B$JIT$
         7 002257   000204 236100                    LDQ     132,,PR0
         7 002260   000006 772000                    QRL     6
         7 002261   000013 376000 8                  ANQ     11
         7 002262   000014 136000 8                  SBLQ    12
         7 002263   000020 736000                    QLS     16
         7 002264   000242 676000 5                  ERQ     DATA_VECTOR
         7 002265   000034 376000 xsym               ANQ     B_VECTNIL+28
         7 002266   000242 656000 5                  ERSQ    DATA_VECTOR

     1166    11444    5      TDIO_FPT.DATA_ = DATA_V ;

  11444  7 002267   000242 237000 5                  LDAQ    DATA_VECTOR
         7 002270   000204 757000 5                  STAQ    TDIO_FPT+4

     1167    11445    5      TDIO_FPT.DCWLIST_ = VECTOR (DENSITY_DCWLIST) ;

  11445  7 002271   000016 237000 8                  LDAQ    14
         7 002272   000202 757000 5                  STAQ    TDIO_FPT+2

     1168    11446    5      TDIO_FPT.V.DCB# = TOP$TCP.DCB#(TCX) ;

  11446  7 002273   200031 471500                    LDP1    @TCX,,AUTO
         7 002274   100000 236100                    LDQ     0,,PR1
         7 002275   000122 402007                    MPY     82,DL
         7 002276   000001 736000                    QLS     1
         7 002277   000003 473400 xsym               LDP3    TOT$DMC+3
         7 002300   300007 722106                    LXL2    7,QL,PR3
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:306  
         7 002301   000206 742000 5                  STX2    TDIO_FPT+6

     1169    11447    5      TDIO_FPT.V.WAIT# = %YES# ;

  11447  7 002302   400000 236007                    LDQ     -131072,DL
         7 002303   000206 256000 5                  ORSQ    TDIO_FPT+6

     1170    11448    5      TDIO_FPT.V.PCW# = '000000700000'O ;

  11448  7 002304   000121 236000 6                  LDQ     CRLF_+11
         7 002305   000207 756000 5                  STQ     TDIO_FPT+7

     1171    11449    5      TDIO_FPT.V.ALTPATH = '0'B ;

  11449  7 002306   000000 236003                    LDQ     0,DU
         7 002307   000206 752003 5                  STCQ    TDIO_FPT+6,'03'O

     1172    11450    5      TDIO_FPT.V.EVENT# = 0 ;

  11450  7 002310   000210 450000 5                  STZ     TDIO_FPT+8

     1173    11451    5      TDIO_FPT.V.TIMEOUT# = 0 ;

  11451  7 002311   000211 752040 5                  STCQ    TDIO_FPT+9,'40'O

     1174    11452    5      CALL M$TDIO (TDIO_FPT) WHENRETURN

  11452  7 002312   000200 630400 5                  EPPR0   TDIO_FPT
         7 002313   470004 713400                    CLIMB   alt,+28676
         7 002314   401000 401760                    pmme    nvectors=3
         7 002315   002421 702000 7                  TSX2    s:11472

     1175    11453    6           DO ;

     1176    11454    6              STATUS$ = ADDR (DCBADDR (TOP$TCP.DCB#(TCX)) -> F$DCB.TDSTAT#) ;

  11454  7 002316   200031 470500                    LDP0    @TCX,,AUTO
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:307  
         7 002317   000000 236100                    LDQ     0,,PR0
         7 002320   000122 402007                    MPY     82,DL
         7 002321   000015 471400 8                  LDP1    13
         7 002322   100000 473500                    LDP3    0,,PR1
         7 002323   000001 736000                    QLS     1
         7 002324   000003 474400 xsym               LDP4    TOT$DMC+3
         7 002325   400007 720106                    LXL0    7,QL,PR4
         7 002326   300000 475510                    LDP5    0,X0,PR3
         7 002327   500027 636500                    EPPR6   23,,PR5
         7 002330   200037 456500                    STP6    STATUS$,,AUTO

     1177    11455    6              IF STATUS$ -> STATUS.MAJOR# = '0000'B AND

  11455  7 002331   600000 236100                    LDQ     0,,PR6
         7 002332   170000 316003                    CANQ    61440,DU
         7 002333   002407 601000 7                  TNZ     s:11465
         7 002334   007700 316003                    CANQ    4032,DU
         7 002335   002407 601000 7                  TNZ     s:11465

     1178    11456    6                      STATUS$ -> STATUS.MINOR# = '00'O
     1179    11457    7              THEN DO ;

     1180    11458    7                      IF TOP$TCP.DEVICE_MODEL (TCX) = 'MTU8200'

  11458  7 002336   000000 236100                    LDQ     0,,PR0
         7 002337   000122 402007                    MPY     82,DL
         7 002340   000003 736000                    QLS     3
         7 002341   040000 106506                    CMPC    fill='040'O
         7 002342   400004 600010                    ADSC9   4,Q,PR4                  cn=3,n=8
         7 002343   000122 000007 6                  ADSC9   CRLF_+12                 cn=0,n=7
         7 002344   002356 601000 7                  TNZ     s:11460

     1181    11459    7                      THEN DIX = TOP$TCP.FICCDD.DEV# (TCX);

  11459  7 002345   000000 236100                    LDQ     0,,PR0
         7 002346   000122 402007                    MPY     82,DL
         7 002347   000001 736000                    QLS     1
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:308  
         7 002350   400001 236106                    LDQ     1,QL,PR4
         7 002351   000017 772000                    QRL     15
         7 002352   000077 376007                    ANQ     63,DL
         7 002353   000000 620006                    EAX0    0,QL
         7 002354   200040 740100                    STX0    DIX,,AUTO
         7 002355   002366 710000 7                  TRA     s:11461

     1182    11460    7                      ELSE DIX = TOP$TCP.FICCDD.DEV#(TCX) - 1 ;

  11460  7 002356   000000 236100                    LDQ     0,,PR0
         7 002357   000122 402007                    MPY     82,DL
         7 002360   000001 736000                    QLS     1
         7 002361   400001 236106                    LDQ     1,QL,PR4
         7 002362   000017 772000                    QRL     15
         7 002363   000077 376007                    ANQ     63,DL
         7 002364   777777 620006                    EAX0    -1,QL
         7 002365   200040 740100                    STX0    DIX,,AUTO

     1183    11461    7                      TOP$TCP.SCT.TAPE_DENSITY(TCX) = DEVICE_INFO.DENSITIES#(DIX) ;

  11461  7 002366   000000 236100                    LDQ     0,,PR0
         7 002367   000122 402007                    MPY     82,DL
         7 002370   000001 736000                    QLS     1
         7 002371   000000 621006                    EAX1    0,QL
         7 002372   200040 236100                    LDQ     DIX,,AUTO
         7 002373   000022 772000                    QRL     18
         7 002374   000022 402007                    MPY     18,DL
         7 002375   205740 756100                    STQ     BCD_BUF_INX+1,,AUTO
         7 002376   000000 636011                    EAQ     0,X1
         7 002377   000022 772000                    QRL     18
         7 002400   000044 402007                    MPY     36,DL
         7 002401   205740 235100                    LDA     BCD_BUF_INX+1,,AUTO
         7 002402   003106 060405                    CSL     bolr='003'O
         7 002403   000246 250004 5                  BDSC    DEVICE_INFO,A            by=1,bit=5,n=4
         7 002404   400012 400004                    BDSC    10,Q,PR4                 by=2,bit=0,n=4

     1184    11462    7                      RETURN ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:309  

  11462  7 002405   200036 221300                    LDX1  ! @TCX+1,,AUTO
         7 002406   000001 702211                    TSX2  ! 1,X1

     1185    11463    7                   END /* THEN */ ;
     1186    11464    7              ELSE DO ;

     1187    11465    7                      TOP_ERROR_CODE.ERR# = %E$BADSTS ;

  11465  7 002407   000173 236000 5                  LDQ     TOP_ERROR_CODE
         7 002410   000006 376000 8                  ANQ     6
         7 002411   003230 276007                    ORQ     1688,DL
         7 002412   000173 756000 5                  STQ     TOP_ERROR_CODE

     1188    11466    7                      CALL TOX$WARN (TOP_ERROR_CODE) ;

  11466  7 002413   000007 630400 8                  EPPR0   7
         7 002414   000017 631400 xsym               EPPR1   B_VECTNIL+15
         7 002415   000000 701000 xent               TSX1    TOX$WARN
         7 002416   000000 011000                    NOP     0

     1189    11467    7                      ALTRETURN ;

  11467  7 002417   200036 221300                    LDX1  ! @TCX+1,,AUTO
         7 002420   000000 702211                    TSX2  ! 0,X1

     1190    11468    7                   END ;
     1191    11469    6           END /* WHENRETURN */ ;
     1192    11470    5      WHENALTRETURN
     1193    11471    6           DO ;

     1194    11472    6              CALL TOX$WARN (B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR) ;

  11472  7 002421   000000 470400 xsym               LDP0    B$TCB$
         7 002422   000000 471500                    LDP1    0,,PR0
         7 002423   100102 633500                    EPPR3   66,,PR1
         7 002424   205740 453500                    STP3    BCD_BUF_INX+1,,AUTO
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:310  
         7 002425   205740 630500                    EPPR0   BCD_BUF_INX+1,,AUTO
         7 002426   000017 631400 xsym               EPPR1   B_VECTNIL+15
         7 002427   000000 701000 xent               TSX1    TOX$WARN
         7 002430   000000 011000                    NOP     0

     1195    11473    6              ALTRETURN ;

  11473  7 002431   200036 221300                    LDX1  ! @TCX+1,,AUTO
         7 002432   000000 702211                    TSX2  ! 0,X1

     1196    11474    6           END ;
     1197    11475
     1198    11476    5   END GET_DENSITIES ;
     1199    11477    4   END BUILD_TAPE_SCT ;
     1200    11478        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:311  
     1201    11479        /*I* NAME:         BUILD_PRINTER_SCT
     1202    11480             INTERFACE:
     1203    11481             INPUT:
     1204    11482             OUTPUT:       TOP$SCT.DV(TCX)  is built.
     1205    11483             DESCRIPTION:  The DEVICE_TYPE and DEVICE_NO fields are set from
     1206    11484                           information in TOP$TCP.  Also, bit 14 in word
     1207    11485                           0 of the SCT is zeroed indicating that the printer
     1208    11486                           is 132 columns only.  Note that this field is
     1209    11487                           being forced, because there are no plans for60
     1210    11488                           column printers on CP6 presently.  If this
     1211    11489                           changes, this bit will need to be set from
     1212    11490                           configuration information returned from CP6.
     1213    11491        */
     1214    11492
     1215    11493    3   BUILD_PRINTER_SCT: PROC ;

  11493  7 002433   200034 741300       BUILD_PRINT* STX1  ! REASON+1,,AUTO

     1216    11494
     1217    11495        /* Code */
     1218    11496
     1219    11497    4      DV_SCT$->DEVICE_SCT = '0'B ;

  11497  7 002434   200032 470500                    LDP0    DV_SCT$,,AUTO
         7 002435   000100 100400                    MLR     fill='000'O
         7 002436   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         7 002437   000000 000020                    ADSC9   0,,PR0                   cn=0,n=16

     1220    11498    4      DV_SCT$->DEVICE_SCT.W0.DEVICE_TYPE# = TOP$TCP.DEVICE_CODE(TCX) ;

  11498  7 002440   200031 471500                    LDP1    @TCX,,AUTO
         7 002441   100000 236100                    LDQ     0,,PR1
         7 002442   000122 402007                    MPY     82,DL
         7 002443   000001 736000                    QLS     1
         7 002444   000003 473400 xsym               LDP3    TOT$DMC+3
         7 002445   300007 236106                    LDQ     7,QL,PR3
         7 002446   000014 736000                    QLS     12
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:312  
         7 002447   000000 752140                    STCQ    0,'40'O,PR0

     1221    11499    4      DV_SCT$->DEVICE_SCT.W0.DEVICE_NO# = FICCDD$->FICCDD.DEV# ;

  11499  7 002450   200024 473500                    LDP3    FICCDD$,,AUTO
         7 002451   300000 236100                    LDQ     0,,PR3
         7 002452   000006 736000                    QLS     6
         7 002453   000000 752120                    STCQ    0,'20'O,PR0

     1222    11500    4      DV_SCT$->DEVICE_SCT.W0.BIT14# = '0'B ;

  11500  7 002454   000020 236000 8                  LDQ     16
         7 002455   000000 356100                    ANSQ    0,,PR0

     1223    11501    4      DV_SCT$->DEVICE_SCT.W0.BIT17# = TOP$TCP.SCT.BIT17(TCX) ;

  11501  7 002456   100000 236100                    LDQ     0,,PR1
         7 002457   000122 402007                    MPY     82,DL
         7 002460   000001 736000                    QLS     1
         7 002461   000003 474400 xsym               LDP4    TOT$DMC+3
         7 002462   400012 236106                    LDQ     10,QL,PR4
         7 002463   000010 772000                    QRL     8
         7 002464   000000 676100                    ERQ     0,,PR0
         7 002465   000001 376003                    ANQ     1,DU
         7 002466   000000 656100                    ERSQ    0,,PR0

     1224    11502    4      DV_SCT$->DEVICE_SCT.W0.BIT13# = TOP$TCP.SCT.BIT13(TCX) ;

  11502  7 002467   100000 236100                    LDQ     0,,PR1
         7 002470   000122 402007                    MPY     82,DL
         7 002471   000001 736000                    QLS     1
         7 002472   000003 474400 xsym               LDP4    TOT$DMC+3
         7 002473   400012 236106                    LDQ     10,QL,PR4
         7 002474   000003 772000                    QRL     3
         7 002475   000000 676100                    ERQ     0,,PR0
         7 002476   000020 376003                    ANQ     16,DU
         7 002477   000000 656100                    ERSQ    0,,PR0
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:313  

     1225    11503    4      RETURN ;

  11503  7 002500   200034 221300                    LDX1  ! REASON+1,,AUTO
         7 002501   000001 702211                    TSX2  ! 1,X1

     1226    11504
     1227    11505    4   END BUILD_PRINTER_SCT ;
     1228    11506        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:314  
     1229    11507        /*I* NAME:         BUILD_CREADER_SCT
     1230    11508             INTERFACE:
     1231    11509             INPUT:
     1232    11510             OUTPUT:       TOP$SCT.DV(TCX) is built.
     1233    11511             DESCRIPTION:  The DEVICE_TYPE and DEVICE_NO fields are set using
     1234    11512                           information from TOP$TCP.
     1235    11513        */
     1236    11514
     1237    11515    3   BUILD_CREADER_SCT: PROC ;

  11515  7 002502   200034 741300       BUILD_CREAD* STX1  ! REASON+1,,AUTO

     1238    11516
     1239    11517        /* Code */
     1240    11518
     1241    11519    4      DV_SCT$->DEVICE_SCT = '0'B ;

  11519  7 002503   200032 470500                    LDP0    DV_SCT$,,AUTO
         7 002504   000100 100400                    MLR     fill='000'O
         7 002505   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         7 002506   000000 000020                    ADSC9   0,,PR0                   cn=0,n=16

     1242    11520    4      DV_SCT$->DEVICE_SCT.W0.DEVICE_TYPE# = TOP$TCP.DEVICE_CODE(TCX) ;

  11520  7 002507   200031 471500                    LDP1    @TCX,,AUTO
         7 002510   100000 236100                    LDQ     0,,PR1
         7 002511   000122 402007                    MPY     82,DL
         7 002512   000001 736000                    QLS     1
         7 002513   000003 473400 xsym               LDP3    TOT$DMC+3
         7 002514   300007 236106                    LDQ     7,QL,PR3
         7 002515   000014 736000                    QLS     12
         7 002516   000000 752140                    STCQ    0,'40'O,PR0

     1243    11521    4      DV_SCT$->DEVICE_SCT.W0.DEVICE_NO# = FICCDD$->FICCDD.DEV# ;

  11521  7 002517   200024 473500                    LDP3    FICCDD$,,AUTO
         7 002520   300000 236100                    LDQ     0,,PR3
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:315  
         7 002521   000006 736000                    QLS     6
         7 002522   000000 752120                    STCQ    0,'20'O,PR0

     1244    11522    4      RETURN ;

  11522  7 002523   200034 221300                    LDX1  ! REASON+1,,AUTO
         7 002524   000001 702211                    TSX2  ! 1,X1

     1245    11523
     1246    11524    4   END BUILD_CREADER_SCT ;
     1247    11525        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:316  
     1248    11526        /*I* NAME:         BUILD_CPUNCH_SCT
     1249    11527             INTERFACE:
     1250    11528             INPUT:
     1251    11529             OUTPUT:       TOP$SCT.DV(TCX) is built.
     1252    11530             DESCRIPTION:  The DEVICE_TYPE and DEVICE_NO fields are set using
     1253    11531                           information from TOP$TCP.
     1254    11532        */
     1255    11533
     1256    11534    3   BUILD_CPUNCH_SCT: PROC ;

  11534  7 002525   200034 741300       BUILD_CPUNC* STX1  ! REASON+1,,AUTO

     1257    11535
     1258    11536        /* Code */
     1259    11537
     1260    11538    4      DV_SCT$->DEVICE_SCT = '0'B ;

  11538  7 002526   200032 470500                    LDP0    DV_SCT$,,AUTO
         7 002527   000100 100400                    MLR     fill='000'O
         7 002530   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         7 002531   000000 000020                    ADSC9   0,,PR0                   cn=0,n=16

     1261    11539    4      DV_SCT$->DEVICE_SCT.W0.DEVICE_TYPE# = TOP$TCP.DEVICE_CODE(TCX) ;

  11539  7 002532   200031 471500                    LDP1    @TCX,,AUTO
         7 002533   100000 236100                    LDQ     0,,PR1
         7 002534   000122 402007                    MPY     82,DL
         7 002535   000001 736000                    QLS     1
         7 002536   000003 473400 xsym               LDP3    TOT$DMC+3
         7 002537   300007 236106                    LDQ     7,QL,PR3
         7 002540   000014 736000                    QLS     12
         7 002541   000000 752140                    STCQ    0,'40'O,PR0

     1262    11540    4      DV_SCT$->DEVICE_SCT.W0.DEVICE_NO# = FICCDD$->FICCDD.DEV# ;

  11540  7 002542   200024 473500                    LDP3    FICCDD$,,AUTO
         7 002543   300000 236100                    LDQ     0,,PR3
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:317  
         7 002544   000006 736000                    QLS     6
         7 002545   000000 752120                    STCQ    0,'20'O,PR0

     1263    11541    4      RETURN ;

  11541  7 002546   200034 221300                    LDX1  ! REASON+1,,AUTO
         7 002547   000001 702211                    TSX2  ! 1,X1

     1264    11542
     1265    11543    4   END BUILD_CPUNCH_SCT ;
     1266    11544        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:318  
     1267    11545        /*I* NAME:         BUILD_CONSOLE_SCT
     1268    11546             INTERFACE:
     1269    11547             INPUT:
     1270    11548             OUTPUT:       TOP$SCT.DV(TCX) is built.
     1271    11549             DESCRIPTION:  The DEVICE_TYPE and DEVICE_NO fields are set using
     1272    11550                           information from TOP$TCP.
     1273    11551        */
     1274    11552
     1275    11553    3   BUILD_CONSOLE_SCT: PROC ;

  11553  7 002550   200034 741300       BUILD_CONSO* STX1  ! REASON+1,,AUTO

     1276    11554
     1277    11555        /* Code */
     1278    11556
     1279    11557    4      DV_SCT$->DEVICE_SCT = '0'B ;

  11557  7 002551   200032 470500                    LDP0    DV_SCT$,,AUTO
         7 002552   000100 100400                    MLR     fill='000'O
         7 002553   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         7 002554   000000 000020                    ADSC9   0,,PR0                   cn=0,n=16

     1280    11558    4      DV_SCT$->DEVICE_SCT.W0.DEVICE_TYPE# = %DSCC1 ;

  11558  7 002555   310000 236003                    LDQ     102400,DU
         7 002556   000000 752140                    STCQ    0,'40'O,PR0

     1281    11559    4      DV_SCT$->DEVICE_SCT.W0.DEVICE_NO# = FICCDD$->FICCDD.DEV# ;

  11559  7 002557   200024 471500                    LDP1    FICCDD$,,AUTO
         7 002560   100000 236100                    LDQ     0,,PR1
         7 002561   000006 736000                    QLS     6
         7 002562   000000 752120                    STCQ    0,'20'O,PR0

     1282    11560    4      RETURN ;

  11560  7 002563   200034 221300                    LDX1  ! REASON+1,,AUTO
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:319  
         7 002564   000001 702211                    TSX2  ! 1,X1

     1283    11561
     1284    11562    4   END BUILD_CONSOLE_SCT ;
     1285    11563    3   END BUILD_DEVICE_SCT ;
     1286    11564        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:320  
     1287    11565        /*I* NAME:         BUILD_CONTROLLER_SCT
     1288    11566             INTERFACE:
     1289    11567             INPUT:        TCX, the index into TOP$TCP for the test page.
     1290    11568             OUTPUT:       None.
     1291    11569             DESCRIPTION:  Sets up controller SCT for EURC vs. MPC
     1292    11570        */
     1293    11571
     1294    11572    2   BUILD_CONTROLLER_SCT: PROC (TCX) ;

  11572  7 002565   200030 741300       BUILD_CONTR* STX1  ! @A+1,,AUTO

     1295    11573
     1296    11574    3      DCL TCX UBIN WORD ALIGNED ;
     1297    11575    3      DCL 1 CONTROLLER_SCT BASED ALIGNED,
     1298    11576    3            2 W0,
     1299    11577    3              3 * BIT (1) UNAL,
     1300    11578    3              3 VOLATILE_FW# BIT (1) UNAL,
     1301    11579    3              3 MPC# BIT (1) UNAL,
     1302    11580    3              3 * BIT (33) UNAL,
     1303    11581    3            2 W1# BIT (36) ALIGNED,
     1304    11582    3            2 W2# BIT (36) ALIGNED,
     1305    11583    3            2 W3# BIT (36) ALIGNED ;
     1306    11584    3      DCL CN_SCT$ PTR ALIGNED ;
     1307    11585
     1308    11586        /* Code */
     1309    11587
     1310    11588    3      CN_SCT$ = ADDR (TOP$SCT.CN(TCX)) ;

  11588  7 002566   200031 470500                    LDP0    @TCX,,AUTO
         7 002567   000000 235100                    LDA     0,,PR0
         7 002570   000003 735000                    ALS     3
         7 002571   000000 631405 xsym               EPPR1   TOP$SCT,AL
         7 002572   200032 451500                    STP1    CN_SCT$,,AUTO

     1311    11589    3      CN_SCT$ -> CONTROLLER_SCT = '0'B ;

  11589  7 002573   000100 100400                    MLR     fill='000'O
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:321  
         7 002574   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         7 002575   100000 000020                    ADSC9   0,,PR1                   cn=0,n=16

     1312    11590    3      IF TOP$TCP.DEVICE_CODE(TCX) = %CHN_3

  11590  7 002576   000000 236100                    LDQ     0,,PR0
         7 002577   000122 402007                    MPY     82,DL
         7 002600   000001 736000                    QLS     1
         7 002601   000003 473400 xsym               LDP3    TOT$DMC+3
         7 002602   300007 220106                    LDX0    7,QL,PR3
         7 002603   000003 100003                    CMPX0   3,DU
         7 002604   002621 600000 7                  TZE     s:11599

     1313    11591    3      THEN /* DO NOTHING */ ;
     1314    11592    4      ELSE DO;

     1315    11593    4              IF TOP$TCP.FIRMWARE.TYPE(TCX) = 'NONE'

  11593  7 002605   000000 236100                    LDQ     0,,PR0
         7 002606   000122 402007                    MPY     82,DL
         7 002607   000001 736000                    QLS     1
         7 002610   300013 236106                    LDQ     11,QL,PR3
         7 002611   000124 116000 6                  CMPQ    CRLF_+14
         7 002612   002615 600000 7                  TZE     s:11596

     1316    11594    4              THEN /* Do Nothing */ ;
     1317    11595    4              ELSE CN_SCT$ -> CONTROLLER_SCT.W0.VOLATILE_FW# = '1'B ;

  11595  7 002613   200000 236003                    LDQ     65536,DU
         7 002614   100000 256100                    ORSQ    0,,PR1

     1318    11596    4              CN_SCT$ -> CONTROLLER_SCT.W0.MPC# = '1'B ;

  11596  7 002615   100000 236003                    LDQ     32768,DU
         7 002616   100000 256100                    ORSQ    0,,PR1

     1319    11597    4              RETURN ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:322  

  11597  7 002617   200030 221300                    LDX1  ! @A+1,,AUTO
         7 002620   000001 702211                    TSX2  ! 1,X1

     1320    11598    4           END /* ELSE DO */ ;
     1321    11599    3   END BUILD_CONTROLLER_SCT ;

  11599  7 002621   200030 221300                    LDX1  ! @A+1,,AUTO
         7 002622   000001 702211                    TSX2  ! 1,X1

     1322    11600    2   END TOP$MME_ALLOCR ;
     1323    11601        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:323  
     1324    11602        /*I* NAME:         TOP$MME_ASGPAT
     1325    11603             CALL:         CALL TOP$MME_ASGPAT(P_X1REG,P_X2REG,P_X4REG,RETURN_DELTA)
     1326    11604             INTERFACE:    MATCH_SCT_ADR
     1327    11605             INPUT:        P_X1REG = SCT address
     1328    11606                           P_X4REG = GCOS PAT pointer
     1329    11607             OUTPUT:       P_X2REG =
     1330    11608                           TOP$TCP.PAT_PTR(TCX) contains the PAT pointer
     1331    11609                           for this page.
     1332    11610             DESCRIPTION:  MATCH_SCT_ADR is called to search the TOP$TCP
     1333    11611                           table to match the SCT address passed from the
     1334    11612                           subexec with a test page, and thus identify I.
     1335    11613                           The PAT pointer passed up by the subexec is then
     1336    11614                           stored in TOP$TCP for future use.  MME CHANTM
     1337    11615                           later requests the channel busy time for a test
     1338    11616                           page, passing only the PAT pointer as an identifier
     1339    11617                           of the test page.  It is then used in a search of
     1340    11618                           TOP$TCP to determine TCX, the test page
     1341    11619                           identifier.
     1342    11620
     1343    11621                           Currently, nothing is returned in P_X2REG.
     1344    11622        */
     1345    11623        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:324  
     1346    11624    1   TOP$MME_ASGPAT: PROC (P_X1REG,P_X2REG,P_X4REG,RETURN_DELTA) ;

  11624  7 002623   200010 741300       TOP$MME_ASG* STX1  ! @RETURN_DELTA+2,,AUTO

     1347    11625
     1348    11626    2      DCL TCX UBIN WORD ALIGNED ;
     1349    11627    2      DCL P_X1REG UBIN HALF HALIGNED ;
     1350    11628    2      DCL P_X2REG UBIN HALF HALIGNED ;
     1351    11629    2      DCL P_X4REG UBIN HALF HALIGNED ;
     1352    11630    2      DCL RETURN_DELTA SBIN HALF HALIGNED ;
     1353    11631
     1354    11632        /* Code */
     1355    11633
     1356    11634    2      CALL MATCH_SCT_ADR (P_X1REG,TCX) ;

  11634  7 002624   200015 630500                    EPPR0   TCX,,AUTO
         7 002625   200026 450500                    STP0    NEW_ICCDD,,AUTO
         7 002626   200011 236100                    LDQ     @P_X1REG,,AUTO
         7 002627   200025 756100                    STQ     SCTWDS_BUILT,,AUTO
         7 002630   012567 701000 7                  TSX1    MATCH_SCT_ADR
         7 002631   000000 011000                    NOP     0

     1357    11635    2      TOP$TCP.ADR.PAT(TCX) = P_X4REG ;

  11635  7 002632   200015 236100                    LDQ     TCX,,AUTO
         7 002633   000244 402007                    MPY     164,DL
         7 002634   000002 736000                    QLS     2
         7 002635   200013 470500                    LDP0    @P_X4REG,,AUTO
         7 002636   000003 471400 xsym               LDP1    TOT$DMC+3
         7 002637   000106 100500                    MLR     fill='000'O
         7 002640   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         7 002641   100011 000002                    ADSC9   9,Q,PR1                  cn=0,n=2

     1358    11636    2      RETURN_DELTA = 1 ;

  11636  7 002642   200014 471500                    LDP1    @RETURN_DELTA,,AUTO
         7 002643   000100 101400                    MRL     fill='000'O
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:325  
         7 002644   000003 000004 xsym               ADSC9   B_VECTNIL+3              cn=0,n=4
         7 002645   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2

     1359    11637    2      RETURN ;

  11637  7 002646   200010 221300                    LDX1  ! @RETURN_DELTA+2,,AUTO
         7 002647   000001 702211                    TSX2  ! 1,X1

     1360    11638
     1361    11639    2   END TOP$MME_ASGPAT ;
     1362    11640        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:326  
     1363    11641        /*I* NAME:         TOP$MME_CHANTM
     1364    11642             CALL:         CALL TOP$MME_CHANTM(P_X4REG,P_AREG,RETURN_DELTA) ;
     1365    11643             INTERFACE:    MATCH_PAT_PTR
     1366    11644             INPUT:        X4 = GCOS PAT pointer
     1367    11645                           F$DCB.CHANTIME# = channel time in seconds
     1368    11646             OUTPUT:       A  = channel busy time for the channel associated
     1369    11647                           with the PAT pointer, in 1/64 millisecond units
     1370    11648                           RETURN_DELTA = 1
     1371    11649             DESCRIPTION:  MATCH_PAT_PTR is called to search TOP$TCP
     1372    11650                           for a match on the PAT pointer to yield TCX,
     1373    11651                           the index into TOP$TCP for this test page.
     1374    11652                           The pointer TD_DCB$ is built to the DCB for this
     1375    11653                           test page using the DCB number in TOP$TCP.
     1376    11654                           The channel time in microseconds is stored in the
     1377    11655                           DCB.  It is accessed using the BASED structure
     1378    11656                           F$DCB.CHANTIME#.  The channel time is returned in
     1379    11657                           P_AREG.
     1380    11658        */
     1381    11659
     1382    11660    1   TOP$MME_CHANTM: PROC (X4, A, RETURN_DELTA) ;

  11660  7 002650   200010 741300       TOP$MME_CHA* STX1  ! @RETURN_DELTA+2,,AUTO

     1383    11661
     1384    11662    2      DCL X4           UBIN HALF HALIGNED ;
     1385    11663    2      DCL A            UBIN WORD ALIGNED ;
     1386    11664    2      DCL RETURN_DELTA SBIN HALF HALIGNED ;
     1387    11665    2      DCL TCX          UBIN WORD ALIGNED ;
     1388    11666
     1389    11667        /* Code */
     1390    11668
     1391    11669    2      CALL MATCH_PAT_PTR (X4, TCX) ;

  11669  7 002651   200014 630500                    EPPR0   TCX,,AUTO
         7 002652   200020 450500                    STP0    @X3,,AUTO
         7 002653   200011 236100                    LDQ     @X4,,AUTO
         7 002654   200017 756100                    STQ     @X2,,AUTO
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:327  
         7 002655   002701 701000 7                  TSX1    MATCH_PAT_PTR
         7 002656   000000 011000                    NOP     0

     1392    11670    2      A = DCBADDR(TOP$TCP.DCB#(TCX)) -> F$DCB.CHANTIME# / 1000 * 64 ;

  11670  7 002657   000015 470400 8                  LDP0    13
         7 002660   000000 471500                    LDP1    0,,PR0
         7 002661   200014 236100                    LDQ     TCX,,AUTO
         7 002662   000244 402007                    MPY     164,DL
         7 002663   000003 473400 xsym               LDP3    TOT$DMC+3
         7 002664   300007 720106                    LXL0    7,QL,PR3
         7 002665   100000 474510                    LDP4    0,X0,PR1
         7 002666   400042 236100                    LDQ     34,,PR4
         7 002667   001750 506007                    DIV     1000,DL
         7 002670   000006 736000                    QLS     6
         7 002671   200012 474500                    LDP4    @A,,AUTO
         7 002672   400000 756100                    STQ     0,,PR4

     1393    11671    2      RETURN_DELTA = 1 ;

  11671  7 002673   200013 473500                    LDP3    @RETURN_DELTA,,AUTO
         7 002674   000100 101400                    MRL     fill='000'O
         7 002675   000003 000004 xsym               ADSC9   B_VECTNIL+3              cn=0,n=4
         7 002676   300000 000002                    ADSC9   0,,PR3                   cn=0,n=2

     1394    11672    2      RETURN ;

  11672  7 002677   200010 221300                    LDX1  ! @RETURN_DELTA+2,,AUTO
         7 002700   000001 702211                    TSX2  ! 1,X1

     1395    11673
     1396    11674        /* END TOP$MME_CHANTM */
     1397    11675        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:328  
     1398    11676        /*I* NAME:         MATCH_PAT_PTR
     1399    11677             INTERFACE:    TOX$SCREECH
     1400    11678             INPUT:        NEW_PAT_PTR = a PAT pointer from the subexec
     1401    11679             OUTPUT:       TCX = index into TOP$TCP for the test page
     1402    11680             DESCRIPTION:  Searches the PAT PTR field in TOP$TCP for a
     1403    11681                           match with NEW_PAT_PTR and returns TCX.
     1404    11682        */
     1405    11683
     1406    11684    2   MATCH_PAT_PTR: PROC (NEW_PAT_PTR,TCX) ;

  11684  7 002701   200016 741300       MATCH_PAT_P* STX1  ! @X1,,AUTO

     1407    11685
     1408    11686    3      DCL TCX         UBIN WORD ALIGNED ;
     1409    11687    3      DCL NEW_PAT_PTR UBIN HALF HALIGNED ;
     1410    11688
     1411    11689        /* Code */
     1412    11690
     1413    11691    3      TCX = 0 ;

  11691  7 002702   200020 470500                    LDP0    @TCX,,AUTO
         7 002703   000000 450100                    STZ     0,,PR0

     1414    11692    4      DO WHILE (TCX < 8) ;

  11692  7 002704   000000 235100                    LDA     0,,PR0
         7 002705   000010 115007                    CMPA    8,DL
         7 002706   002733 603000 7                  TRC     s:11698

     1415    11693    4         IF TOP$TCP.ADR.PAT(TCX) = NEW_PAT_PTR

  11693  7 002707   200020 470500                    LDP0    @TCX,,AUTO
         7 002710   000000 236100                    LDQ     0,,PR0
         7 002711   000122 402007                    MPY     82,DL
         7 002712   200017 471500                    LDP1    @NEW_PAT_PTR,,AUTO
         7 002713   000100 101500                    MRL     fill='000'O
         7 002714   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:329  
         7 002715   205740 000004                    ADSC9   BCD_BUF_INX+1,,AUTO      cn=0,n=4
         7 002716   000001 736000                    QLS     1
         7 002717   000003 473400 xsym               LDP3    TOT$DMC+3
         7 002720   300011 236106                    LDQ     9,QL,PR3
         7 002721   000022 772000                    QRL     18
         7 002722   205740 116100                    CMPQ    BCD_BUF_INX+1,,AUTO
         7 002723   002726 601000 7                  TNZ     s:11695

     1416    11694    4         THEN RETURN ;

  11694  7 002724   200016 221300                    LDX1  ! @X1,,AUTO
         7 002725   000001 702211                    TSX2  ! 1,X1

     1417    11695    4         ELSE TCX = TCX + 1 ;

  11695  7 002726   000000 235100                    LDA     0,,PR0
         7 002727   000001 035007                    ADLA    1,DL
         7 002730   000000 755100                    STA     0,,PR0

     1418    11696    4      END /* WHILE */ ;

  11696  7 002731   000010 115007                    CMPA    8,DL
         7 002732   002707 602000 7                  TNC     s:11693

     1419    11697
     1420    11698    3      TOP_ERROR_CODE.ERR# = %E$BADPATPTR ;

  11698  7 002733   000173 236000 5                  LDQ     TOP_ERROR_CODE
         7 002734   000006 376000 8                  ANQ     6
         7 002735   003360 276007                    ORQ     1776,DL
         7 002736   000173 756000 5                  STQ     TOP_ERROR_CODE

     1421    11699    3      CALL TOX$SCREECH (TOP_ERROR_CODE) ;

  11699  7 002737   000007 630400 8                  EPPR0   7
         7 002740   000017 631400 xsym               EPPR1   B_VECTNIL+15
         7 002741   000000 701000 xent               TSX1    TOX$SCREECH
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:330  
         7 002742   000000 011000                    NOP     0

     1422    11700
     1423    11701    3   END MATCH_PAT_PTR ;

  11701  7 002743   200016 221300                    LDX1  ! @X1,,AUTO
         7 002744   000001 702211                    TSX2  ! 1,X1

     1424    11702    2   END TOP$MME_CHANTM ;
     1425    11703        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:331  
     1426    11704        /*I* NAME:         TOP$MME_DEALCP
     1427    11705             CALL:         CALL TOP$MME_DEALCP(P_X1REG,RETURN_DELTA) ;
     1428    11706             INTERFACE:
     1429    11707             INPUT:
     1430    11708             OUTPUT:
     1431    11709             DESCRIPTION:  Not used in CP6 ;  Multics only.
     1432    11710        */
     1433    11711
     1434    11712    1   TOP$MME_DEALCP: PROC (P_X1REG,RETURN_DELTA) ;

  11712  7 002745   200010 741300       TOP$MME_DEA* STX1  ! @RETURN_DELTA+2,,AUTO

     1435    11713
     1436    11714    2      DCL P_X1REG  UBIN HALF HALIGNED ;
     1437    11715    2      DCL RETURN_DELTA SBIN HALF HALIGNED ;
     1438    11716
     1439    11717        /* Code */
     1440    11718
     1441    11719    2      RETURN_DELTA = 1 ;

  11719  7 002746   200012 470500                    LDP0    @RETURN_DELTA,,AUTO
         7 002747   000100 101400                    MRL     fill='000'O
         7 002750   000003 000004 xsym               ADSC9   B_VECTNIL+3              cn=0,n=4
         7 002751   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2

     1442    11720    2      RETURN ;

  11720  7 002752   200010 221300                    LDX1  ! @RETURN_DELTA+2,,AUTO
         7 002753   000001 702211                    TSX2  ! 1,X1

     1443    11721
     1444    11722    2   END TOP$MME_DEALCP ;
     1445    11723        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:332  
     1446    11724        /*I* NAME:         TOP$MME_EXPDEV
     1447    11725             CALL:         CALL TOP$MME_EXPDEV(P_X1REG,P_AREG,P_QREG,RETURN_DELTA) ;
     1448    11726             INTERFACE:    MATCH_SCT_ADR
     1449    11727             INPUT:        P_X1REG is the SCT address for the test page.
     1450    11728             OUTPUT:       P_AREG = word 0 of the device SCT
     1451    11729                           P_QREG = word 1 of the device SCT
     1452    11730                           RETURN_DELTA = 1
     1453    11731             DESCRIPTION:  MATCH_SCT_ADR is called to search TOP$TCP
     1454    11732                           for the a match on the SCT address passed in
     1455    11733                           P_X1REG, and yields TCX, the index into TOP$TCP
     1456    11734                           for the test page.  The first 2 words of the device
     1457    11735                           SCT, TOP$SCT.DV(TCX), are returned in P_AREG and
     1458    11736                           P_QREG.
     1459    11737        */
     1460    11738
     1461    11739    1   TOP$MME_EXPDEV: PROC (P_X1REG,P_AREG,P_QREG,RETURN_DELTA) ;

  11739  7 002754   200010 741300       TOP$MME_EXP* STX1  ! @RETURN_DELTA+2,,AUTO

     1462    11740
     1463    11741    2      DCL TCX UBIN WORD ALIGNED ;
     1464    11742    2      DCL P_X1REG UBIN HALF HALIGNED ;
     1465    11743    2      DCL P_AREG UBIN WORD ALIGNED ;
     1466    11744    2      DCL P_QREG UBIN WORD ALIGNED ;
     1467    11745    2      DCL RETURN_DELTA SBIN HALF HALIGNED ;
     1468    11746
     1469    11747        /* Code */
     1470    11748
     1471    11749    2      CALL MATCH_SCT_ADR (P_X1REG,TCX) ;

  11749  7 002755   200015 630500                    EPPR0   TCX,,AUTO
         7 002756   200026 450500                    STP0    NEW_ICCDD,,AUTO
         7 002757   200011 236100                    LDQ     @P_X1REG,,AUTO
         7 002760   200025 756100                    STQ     SCTWDS_BUILT,,AUTO
         7 002761   012567 701000 7                  TSX1    MATCH_SCT_ADR
         7 002762   000000 011000                    NOP     0

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:333  
     1472    11750    2      P_AREG = TOP$SCT.DV.WD0#(TCX) ;

  11750  7 002763   200015 235100                    LDA     TCX,,AUTO
         7 002764   000003 735000                    ALS     3
         7 002765   200012 470500                    LDP0    @P_AREG,,AUTO
         7 002766   000004 235005 xsym               LDA     TOP$SCT+4,AL
         7 002767   000000 755100                    STA     0,,PR0

     1473    11751    2      P_QREG = TOP$SCT.DV.WD1#(TCX) ;

  11751  7 002770   200015 236100                    LDQ     TCX,,AUTO
         7 002771   000003 736000                    QLS     3
         7 002772   200013 471500                    LDP1    @P_QREG,,AUTO
         7 002773   000005 235006 xsym               LDA     TOP$SCT+5,QL
         7 002774   100000 755100                    STA     0,,PR1

     1474    11752    2      RETURN_DELTA = 1 ;

  11752  7 002775   200014 473500                    LDP3    @RETURN_DELTA,,AUTO
         7 002776   000100 101400                    MRL     fill='000'O
         7 002777   000003 000004 xsym               ADSC9   B_VECTNIL+3              cn=0,n=4
         7 003000   300000 000002                    ADSC9   0,,PR3                   cn=0,n=2

     1475    11753    2      RETURN ;

  11753  7 003001   200010 221300                    LDX1  ! @RETURN_DELTA+2,,AUTO
         7 003002   000001 702211                    TSX2  ! 1,X1

     1476    11754
     1477    11755    2   END TOP$MME_EXPDEV ;
     1478    11756        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:334  
     1479    11757        /*I* NAME:         TOP$MME_GETCSC
     1480    11758             CALL:         CALL TOP$MME_GETCSC(P_X1REG,P_X4REG,RETURN_DELTA) ;
     1481    11759             INTERFACE:    MATCH_SCT_ADR
     1482    11760             INPUT:        P_X1REG = SCT address for test page
     1483    11761             OUTPUT:       P_X4REG = address of controller SCT for test page
     1484    11762                           RETURN_DELTA = 2
     1485    11763             DESCRIPTION:  Calls MATCH_SCT_ADR to search TOP$TCP for a
     1486    11764                           match on the SCT address to yield TCX, the index
     1487    11765                           into TOP$TCP for the test page.  The address
     1488    11766                           of the controller SCT for the test page is then
     1489    11767                           returned in P_X$REG.
     1490    11768
     1491    11769                           This is a funny MME in the CP6 environment because
     1492    11770                           we have not yet identified anything in the controller
     1493    11771                           SCT tables that is used by POLTS or MOLTS.  Also,
     1494    11772                           Slave Mode subexecs should not need to have access
     1495    11773                           the SCT tables.
     1496    11774        */
     1497    11775        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:335  
     1498    11776    1   TOP$MME_GETCSC: PROC (X1, X4, RETURN_DELTA) ;

  11776  7 003003   200010 741300       TOP$MME_GET* STX1  ! @RETURN_DELTA+2,,AUTO

     1499    11777
     1500    11778    2      DCL X1           UBIN HALF HALIGNED ;
     1501    11779    2      DCL X4           UBIN HALF HALIGNED ;
     1502    11780    2      DCL RETURN_DELTA SBIN HALF HALIGNED ;
     1503    11781    2      DCL CSCT$        PTR ALIGNED ;
     1504    11782    2      DCL 1 CSCT_PTR REDEF CSCT$,
     1505    11783    2            2 ADDR#    UBIN HALF UNAL,
     1506    11784    2            2 *        BIT (18) UNAL ;
     1507    11785    2      DCL TCX          UBIN WORD ALIGNED ;
     1508    11786
     1509    11787        /* Code */
     1510    11788
     1511    11789    2      CALL MATCH_SCT_ADR (X1, TCX) ;

  11789  7 003004   200015 630500                    EPPR0   TCX,,AUTO
         7 003005   200026 450500                    STP0    NEW_ICCDD,,AUTO
         7 003006   200011 236100                    LDQ     @X1,,AUTO
         7 003007   200025 756100                    STQ     SCTWDS_BUILT,,AUTO
         7 003010   012567 701000 7                  TSX1    MATCH_SCT_ADR
         7 003011   000000 011000                    NOP     0

     1512    11790    2      CSCT$ = ADDR (TOP$SCT.DV(TCX)) ;

  11790  7 003012   200015 236100                    LDQ     TCX,,AUTO
         7 003013   000025 736000                    QLS     21
         7 003014   000021 036000 8                  ADLQ    17
         7 003015   200014 756100                    STQ     CSCT$,,AUTO

     1513    11791    2      X4 = CSCT_PTR.ADDR# ;

  11791  7 003016   200012 470500                    LDP0    @X4,,AUTO
         7 003017   000100 100500                    MLR     fill='000'O
         7 003020   200014 000002                    ADSC9   CSCT$,,AUTO              cn=0,n=2
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:336  
         7 003021   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2

     1514    11792    2      RETURN_DELTA = 2 ;

  11792  7 003022   200013 471500                    LDP1    @RETURN_DELTA,,AUTO
         7 003023   000100 101400                    MRL     fill='000'O
         7 003024   000004 000004 xsym               ADSC9   B_VECTNIL+4              cn=0,n=4
         7 003025   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2

     1515    11793    2      RETURN ;

  11793  7 003026   200010 221300                    LDX1  ! @RETURN_DELTA+2,,AUTO
         7 003027   000001 702211                    TSX2  ! 1,X1

     1516    11794
     1517    11795    2   END TOP$MME_GETCSC ;
     1518    11796        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:337  
     1519    11797        /*I* NAME:         TOP$MME_GETLIN
     1520    11798             CALL:         CALL TOP$MME_GETLIN(P_AREG,P_QREG,P_X3REG,P_X4REG,
     1521    11799                                P_X1REG,RETURN_DELTA) ;
     1522    11800             INTERFACE:
     1523    11801             INPUT:
     1524    11802             OUTPUT:
     1525    11803             DESCRIPTION:  Not used in CP6
     1526    11804        */
     1527    11805
     1528    11806    1   TOP$MME_GETLIN: PROC (P_AREG,P_QREG,P_X3REG,P_X4REG,P_X1REG,RETURN_DELTA) ;

  11806  7 003030   200010 741300       TOP$MME_GET* STX1  ! @RETURN_DELTA+2,,AUTO

     1529    11807
     1530    11808    2      DCL P_AREG UBIN WORD ALIGNED ;
     1531    11809    2      DCL P_QREG UBIN WORD ALIGNED ;
     1532    11810    2      DCL P_X1REG UBIN HALF HALIGNED ;
     1533    11811    2      DCL P_X3REG UBIN HALF HALIGNED ;
     1534    11812    2      DCL P_X4REG UBIN HALF HALIGNED ;
     1535    11813    2      DCL RETURN_DELTA SBIN HALF ;
     1536    11814
     1537    11815        /* Code */
     1538    11816
     1539    11817    2      RETURN_DELTA = 2 ;

  11817  7 003031   000002 220003                    LDX0    2,DU
         7 003032   200016 470500                    LDP0    @RETURN_DELTA,,AUTO
         7 003033   000000 740100                    STX0    0,,PR0

     1540    11818    2      RETURN ;

  11818  7 003034   200010 221300                    LDX1  ! @RETURN_DELTA+2,,AUTO
         7 003035   000001 702211                    TSX2  ! 1,X1

     1541    11819
     1542    11820    2   END TOP$MME_GETLIN ;
     1543    11821        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:338  
     1544    11822        /*I* NAME:         TOP$MME_HUNGTM
     1545    11823             AUTHOR:       Scott S. Sheppard
     1546    11824             PURPOSE:      provides MME HUNG TIME service
     1547    11825             INTERFACE:    MATCH_IO_ENTRY
     1548    11826                           RETURN_STATUS
     1549    11827                           GIVE_COURTESY_CALL
     1550    11828             PARAMETERS:   A = address of the I/O entry - input
     1551    11829                           Q = channel lostit time - output
     1552    11830                               0 - I/O complete
     1553    11831                               8192 - phony, in-progress (like Multics)
     1554    11832                           X1 = retry timer - output
     1555    11833                               0 - I/O in transmission
     1556    11834                               other - I/O not in transmission
     1557    11835                           RETURN_DELTA - output
     1558    11836                               1 - I/O not in transmission
     1559    11837                               2 - I/O in transmission
     1560    11838             DATA:         TOP$TCP.IO.ITR_INTERRUPT
     1561    11839                           TOP$TCP.IO.TERMINATED
     1562    11840             DESCRIPTION:  This routine has 2  purposes:  (1) to time out
     1563    11841                           the  special  interrupt   from  the  MPC  that
     1564    11842                           indicates that  an ITR successfully completed,
     1565    11843                           and  (2)  to  give  a  phony indication in all
     1566    11844                           other cases  that an I/O is  still in progress
     1567    11845                           (the Multics implementation  of this MME gives
     1568    11846                           the same phony indication).
     1569    11847
     1570    11848                           To elaborate more on (1) above, CP-6 will time
     1571    11849                           out  terminate interrupts but  not the special
     1572    11850                           interrupts for ITRs.   (In the GCOS IOS world,
     1573    11851                           IOS also times out the special interrupts when
     1574    11852                           ITR  testing  is  in  progress.)   In order to
     1575    11853                           avoid  putting  in  a  special  timer  for ITR
     1576    11854                           special  interrupts at  the PL6  level in CP-6
     1577    11855                           TOLTS, MME  HUNGTM is used to  have Slave Mode
     1578    11856                           MOLTS time out  the special.  Following an ITR
     1579    11857                           I/O, TOP$MME_TESTIO will  return to Slave Mode
     1580    11858                           MOLTS  a  channel  lostit  time of "0".  MOLTS
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:339  
     1581    11859                           will then add 1 minute to this lostit time and
     1582    11860                           set  its own  internal timer.   When the timer
     1583    11861                           goes off, MOLTS does  a MME HUNGTM to check on
     1584    11862                           the status of the I/O in question.
     1585    11863
     1586    11864                           If MOLTS does a MME  HUNGTM when an ITR I/O is
     1587    11865                           in  progress,  it  will  be  asssumed that the
     1588    11866                           special interrupt from  the ITR did not occur.
     1589    11867                           (In ITR testing,  a special interrupt from the
     1590    11868                           ITR running in the  MPC indicates that the ITR
     1591    11869                           did not  find anything wrong.  If  it did, the
     1592    11870                           ITR  will  HALT  the  MPC  and  not return the
     1593    11871                           special interrupt.)  A "lost interrupt" status
     1594    11872                           is then returned to  the MOLTS test page and a
     1595    11873                           Courtesy Call paid.
     1596    11874
     1597    11875                           At a detailed  level, MATCH_IO_ENTRY is called
     1598    11876                           to search TOP$TCP.ADR.IOENTRY for a match with
     1599    11877                           what was passed in bits 0-17 of A to
     1600    11878                            yield  TCX,  the  index  into TOP$TCP for the
     1601    11879                           page.
     1602    11880
     1603    11881                           If  TOP$TCP indicates  that an  ITR I/O  is in
     1604    11882                           progress  and  that  the  terminate  interrupt
     1605    11883                           occurred  already,  then  we  assume  that the
     1606    11884                           special  did  not  occur  and  that  we are to
     1607    11885                           return   lost   interrupt   status  to  MOLTS.
     1608    11886                           TOP$TCP.IO.ITR_INTERRUPT  set   indicates that
     1609    11887                           an  ITR  I/O  is  in  progress,  and is set in
     1610    11888                           TOP$MME_TESTIO/BUILD_1ST_IDCW before each test
     1611    11889                           I/O                 is                 issued.
     1612    11890                           TOP$TCP.TERMINATED    set            indicates
     1613    11891                           that  the terminate  interrupt for  the and is
     1614    11892                           reset   before   each   I/O   is   issued,  in
     1615    11893                           TOP$MME_TESTIO/BUILD_1ST_IDCW.
     1616    11894
     1617    11895                           If ITR  I/O is not in  progress, a lostit time
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:340  
     1618    11896                           of 8192 is returned to fake out POLTS & MOLTS.
     1619    11897        */
     1620    11898
     1621    11899    1   TOP$MME_HUNGTM: PROC (A, Q, X1, RETURN_DELTA) ;

  11899  7 003036   200010 741300       TOP$MME_HUN* STX1  ! @RETURN_DELTA+2,,AUTO

     1622    11900
     1623    11901    2      DCL 1 A ALIGNED,
     1624    11902    2            2 UPPER UBIN HALF UNAL,
     1625    11903    2            2 LOWER UBIN HALF UNAL ;
     1626    11904    2      DCL Q             UBIN WORD ALIGNED ;
     1627    11905    2      DCL X1            UBIN HALF HALIGNED ;
     1628    11906    2      DCL RETURN_DELTA  SBIN HALF HALIGNED ;
     1629    11907    2      DCL TCX           UBIN WORD ALIGNED ;
     1630    11908
     1631    11909        /* Code */
     1632    11910
     1633    11911    2      CALL MATCH_IO_ENTRY (A.UPPER, TCX) ;

  11911  7 003037   200015 630500                    EPPR0   TCX,,AUTO
         7 003040   200020 450500                    STP0    @TCX,,AUTO
         7 003041   200011 236100                    LDQ     @A,,AUTO
         7 003042   200017 756100                    STQ     @NEW_PAT_PTR,,AUTO
         7 003043   003124 701000 7                  TSX1    MATCH_IO_ENTRY
         7 003044   000000 011000                    NOP     0

     1634    11912    2      IF TOP$TCP.IO.ITR_INTERRUPT(TCX) & TOP$TCP.IO.TERMINATED(TCX)

  11912  7 003045   200015 236100                    LDQ     TCX,,AUTO
         7 003046   000244 402007                    MPY     164,DL
         7 003047   000003 470400 xsym               LDP0    TOT$DMC+3
         7 003050   000012 236106                    LDQ     10,QL,PR0
         7 003051   000001 736000                    QLS     1
         7 003052   400000 376003                    ANQ     -131072,DU
         7 003053   205740 756100                    STQ     BCD_BUF_INX+1,,AUTO
         7 003054   200015 236100                    LDQ     TCX,,AUTO
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:341  
         7 003055   000244 402007                    MPY     164,DL
         7 003056   000012 236106                    LDQ     10,QL,PR0
         7 003057   400000 376003                    ANQ     -131072,DU
         7 003060   205740 376100                    ANQ     BCD_BUF_INX+1,,AUTO
         7 003061   003107 600000 7                  TZE     s:11921

     1635    11913    3      THEN DO ;

     1636    11914    3              CALL RETURN_STATUS (TCX) ;

  11914  7 003062   200015 631500                    EPPR1   TCX,,AUTO
         7 003063   200017 451500                    STP1    @NEW_PAT_PTR,,AUTO
         7 003064   003170 701000 7                  TSX1    RETURN_STATUS
         7 003065   000000 011000                    NOP     0

     1637    11915    3              CALL GIVE_COURTESY_CALL (TCX) ;

  11915  7 003066   200015 630500                    EPPR0   TCX,,AUTO
         7 003067   200017 450500                    STP0    @NEW_PAT_PTR,,AUTO
         7 003070   003220 701000 7                  TSX1    GIVE_COURTESY_CALL
         7 003071   000000 011000                    NOP     0

     1638    11916    3              Q = 0 ;

  11916  7 003072   200012 470500                    LDP0    @Q,,AUTO
         7 003073   000000 450100                    STZ     0,,PR0

     1639    11917    3              X1 = IO_ENTRY.W1.LOWER#(TCX) ;

  11917  7 003074   200015 236100                    LDQ     TCX,,AUTO
         7 003075   000054 402007                    MPY     44,DL
         7 003076   200013 471500                    LDP1    @X1,,AUTO
         7 003077   000100 100406                    MLR     fill='000'O
         7 003100   000004 400002 5                  ADSC9   IO_ENTRY+1,Q             cn=2,n=2
         7 003101   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2

     1640    11918    3              RETURN_DELTA = 1 ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:342  

  11918  7 003102   200014 473500                    LDP3    @RETURN_DELTA,,AUTO
         7 003103   000100 101400                    MRL     fill='000'O
         7 003104   000003 000004 xsym               ADSC9   B_VECTNIL+3              cn=0,n=4
         7 003105   300000 000002                    ADSC9   0,,PR3                   cn=0,n=2

     1641    11919    3           END /* then */ ;

  11919  7 003106   003122 710000 7                  TRA     s:11925

     1642    11920    3      ELSE DO ;

     1643    11921    3              X1 = 0 ;

  11921  7 003107   200013 471500                    LDP1    @X1,,AUTO
         7 003110   000100 101400                    MRL     fill='000'O
         7 003111   000002 000004 xsym               ADSC9   B_VECTNIL+2              cn=0,n=4
         7 003112   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2

     1644    11922    3              Q = 8192 ;

  11922  7 003113   020000 235007                    LDA     8192,DL
         7 003114   200012 470500                    LDP0    @Q,,AUTO
         7 003115   000000 755100                    STA     0,,PR0

     1645    11923    3              RETURN_DELTA = 2 ;

  11923  7 003116   200014 473500                    LDP3    @RETURN_DELTA,,AUTO
         7 003117   000100 101400                    MRL     fill='000'O
         7 003120   000004 000004 xsym               ADSC9   B_VECTNIL+4              cn=0,n=4
         7 003121   300000 000002                    ADSC9   0,,PR3                   cn=0,n=2

     1646    11924    3           END /* else */ ;

     1647    11925    2      RETURN ;

  11925  7 003122   200010 221300                    LDX1  ! @RETURN_DELTA+2,,AUTO
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:343  
         7 003123   000001 702211                    TSX2  ! 1,X1

     1648    11926
     1649    11927        /* END TOP$MME_HUNGTM */
     1650    11928        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:344  
     1651    11929        /*I* NAME:         MATCH_IO_ENTRY
     1652    11930             INTERFACE:    TOX$SCREECH
     1653    11931             INPUT:        ENTRY_ADR = address of an I/O entry
     1654    11932             OUTPUT:       TCX = index into TOP$TCP for the test page
     1655    11933             DESCRIPTION:  Searches the IOENTRY ADR field in TOP$TCP for
     1656    11934                           a match with ENTRY_ADR and returns I.
     1657    11935        */
     1658    11936
     1659    11937    2   MATCH_IO_ENTRY: PROC (ENTRY_ADR, TCX) ;

  11937  7 003124   200016 741300       MATCH_IO_EN* STX1  ! @RETURN_DELTA,,AUTO

     1660    11938
     1661    11939    3      DCL ENTRY_ADR UBIN HALF HALIGNED ;
     1662    11940    3      DCL TCX       UBIN WORD ALIGNED ;
     1663    11941
     1664    11942        /* Code */
     1665    11943
     1666    11944    3      TCX = 0 ;

  11944  7 003125   200020 470500                    LDP0    @TCX,,AUTO
         7 003126   000000 450100                    STZ     0,,PR0

     1667    11945    4      DO WHILE (TCX < 8) ;

  11945  7 003127   000000 235100                    LDA     0,,PR0
         7 003130   000010 115007                    CMPA    8,DL
         7 003131   003156 603000 7                  TRC     s:11951

     1668    11946    4         IF TOP$TCP.ADR.IOENTRY(TCX) = ENTRY_ADR

  11946  7 003132   200020 470500                    LDP0    @TCX,,AUTO
         7 003133   000000 236100                    LDQ     0,,PR0
         7 003134   000122 402007                    MPY     82,DL
         7 003135   200017 471500                    LDP1    @ENTRY_ADR,,AUTO
         7 003136   000100 101500                    MRL     fill='000'O
         7 003137   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:345  
         7 003140   205740 000004                    ADSC9   BCD_BUF_INX+1,,AUTO      cn=0,n=4
         7 003141   000001 736000                    QLS     1
         7 003142   000003 473400 xsym               LDP3    TOT$DMC+3
         7 003143   300011 236106                    LDQ     9,QL,PR3
         7 003144   777777 376007                    ANQ     -1,DL
         7 003145   205740 116100                    CMPQ    BCD_BUF_INX+1,,AUTO
         7 003146   003151 601000 7                  TNZ     s:11948

     1669    11947    4         THEN RETURN ;

  11947  7 003147   200016 221300                    LDX1  ! @RETURN_DELTA,,AUTO
         7 003150   000001 702211                    TSX2  ! 1,X1

     1670    11948    4         ELSE TCX = TCX + 1 ;

  11948  7 003151   000000 235100                    LDA     0,,PR0
         7 003152   000001 035007                    ADLA    1,DL
         7 003153   000000 755100                    STA     0,,PR0

     1671    11949    4      END /* WHILE */ ;

  11949  7 003154   000010 115007                    CMPA    8,DL
         7 003155   003132 602000 7                  TNC     s:11946

     1672    11950
     1673    11951    3      TOP_ERROR_CODE.ERR# = %E$BADIORET ;

  11951  7 003156   000173 236000 5                  LDQ     TOP_ERROR_CODE
         7 003157   000006 376000 8                  ANQ     6
         7 003160   003350 276007                    ORQ     1768,DL
         7 003161   000173 756000 5                  STQ     TOP_ERROR_CODE

     1674    11952    3      CALL TOX$SCREECH (TOP_ERROR_CODE) ;

  11952  7 003162   000007 630400 8                  EPPR0   7
         7 003163   000017 631400 xsym               EPPR1   B_VECTNIL+15
         7 003164   000000 701000 xent               TSX1    TOX$SCREECH
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:346  
         7 003165   000000 011000                    NOP     0

     1675    11953
     1676    11954    3   END MATCH_IO_ENTRY ;

  11954  7 003166   200016 221300                    LDX1  ! @RETURN_DELTA,,AUTO
         7 003167   000001 702211                    TSX2  ! 1,X1

     1677    11955        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:347  
     1678    11956        /*I* NAME:         RETURN_STATUS
     1679    11957             AUTHOR:       Scott S. Sheppard
     1680    11958             PURPOSE:      returns lost interrupt status to MOLTS
     1681    11959             INTERFACE:    PINCRW
     1682    11960             PARAMETERS:   TCX - input
     1683    11961             DATA:         IO_ENTRY.W9.STATUS_ADR#(TCX)
     1684    11962             DESCRIPTION:  If "lost interrupt"  status is to be returned,
     1685    11963                           word      9     of      the     I/O     entry,
     1686    11964                           IO_ENTRY.W9.STATUS_ADR(TCX)  is checked  for a
     1687    11965                           valid    status    address.     The    pointer
     1688    11966                           POLTS_STATUS$  is built to  the location inthe
     1689    11967                           subexec  where the  status is  to be returned.
     1690    11968                           Using   the   BASED   structure   STATUS,  the
     1691    11969                           following fields are  set to simulate the lost
     1692    11970                           interrupt status returned by GCOS:
     1693    11971
     1694    11972                             STATUS.MAJOR = '0101'B
     1695    11973                             STATUS.MINOR = '10'O
     1696    11974                             STATUS.LOST_INTERRUPT = '1'B
     1697    11975                             STATUS.INTERRUPT_INDICATOR = '1'B
     1698    11976        */
     1699    11977        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:348  
     1700    11978    2   RETURN_STATUS: PROC (TCX) ;

  11978  7 003170   200016 741300       RETURN_STAT* STX1  ! @RETURN_DELTA,,AUTO

     1701    11979
     1702    11980    3      DCL TCX           UBIN WORD ALIGNED ;
     1703    11981    3      DCL POLTS_STATUS$ PTR ALIGNED ;
     1704    11982
     1705    11983        /* Code */
     1706    11984
     1707    11985    3      IF IO_ENTRY.W9.STATUS_ADR#(TCX) = 0

  11985  7 003171   200017 470500                    LDP0    @TCX,,AUTO
         7 003172   000000 236100                    LDQ     0,,PR0
         7 003173   000013 402007                    MPY     11,DL
         7 003174   000014 220006 5                  LDX0    IO_ENTRY+9,QL
         7 003175   003216 600000 7                  TZE     s:11995

     1708    11986    3      THEN /* don't return status */ ;
     1709    11987    4      ELSE DO ;

     1710    11988    4              POLTS_STATUS$ = PINCRW (IS$, IO_ENTRY.W9.STATUS_ADR#(TCX)) ;

  11988  7 003176   000000 636010                    EAQ     0,X0
         7 003177   000000 036000 6                  ADLQ    FPTN_
         7 003200   200020 756100                    STQ     POLTS_STATUS$,,AUTO

     1711    11989    4              POLTS_STATUS$ -> STATUS = '0'B ;

  11989  7 003201   200020 471500                    LDP1    POLTS_STATUS$,,AUTO
         7 003202   100000 450100                    STZ     0,,PR1
         7 003203   100001 450100                    STZ     1,,PR1

     1712    11990    4              POLTS_STATUS$ -> STATUS.MAJOR# = '1001'B ;

  11990  7 003204   100000 236100                    LDQ     0,,PR1
         7 003205   000022 376000 8                  ANQ     18
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:349  
         7 003206   110000 276003                    ORQ     36864,DU
         7 003207   100000 756100                    STQ     0,,PR1

     1713    11991    4              POLTS_STATUS$ -> STATUS.TERMINATION_INDICATOR# = %TRUE ;

  11991  7 003210   400000 236003                    LDQ     -131072,DU
         7 003211   100000 256100                    ORSQ    0,,PR1

     1714    11992    4              POLTS_STATUS$ -> STATUS.LOST_INTERRUPT# = %TRUE ;

  11992  7 003212   000004 236003                    LDQ     4,DU
         7 003213   100000 256100                    ORSQ    0,,PR1

     1715    11993    4              POLTS_STATUS$ -> STATUS.INTERRUPT_INDICATOR# = '1'B ;

  11993  7 003214   000002 236003                    LDQ     2,DU
         7 003215   100000 256100                    ORSQ    0,,PR1

     1716    11994    4           END /* else */ ;

     1717    11995    3      RETURN ;

  11995  7 003216   200016 221300                    LDX1  ! @RETURN_DELTA,,AUTO
         7 003217   000001 702211                    TSX2  ! 1,X1

     1718    11996
     1719    11997    3   END RETURN_STATUS ;
     1720    11998        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:350  
     1721    11999        /*I* NAME:         GIVE_COURTESY_CALL
     1722    12000             AUTHOR:       Scott S. Sheppard
     1723    12001             PURPOSE:      gives MOLTS a courtesy call
     1724    12002             INTERFACE:    PINCRW
     1725    12003                           TOK$COURTESY_CALL
     1726    12004             PARAMETERS:   TCX - input
     1727    12005             DATA:         IO_ENTRY.W9.CC_ADR#(TCX)
     1728    12006             DESCRIPTION:
     1729    12007                                              I/O     entry    word    9,
     1730    12008                           IO_ENTRY.W9.CC_ADR(TCX), is checked
     1731    12009                                              to  see if  a Courtesy Call
     1732    12010                           is to be paid.  If yes,
     1733    12011                                              TOK$COURTESY_CALL is called
     1734    12012                           to pay it.
     1735    12013        */
     1736    12014
     1737    12015    2   GIVE_COURTESY_CALL: PROC (TCX) ;

  12015  7 003220   200016 741300       GIVE_COURTE* STX1  ! @RETURN_DELTA,,AUTO

     1738    12016
     1739    12017    3      DCL TCX           UBIN WORD ALIGNED ;
     1740    12018    3      DCL CC$           PTR ALIGNED ;
     1741    12019
     1742    12020        /* Code */
     1743    12021
     1744    12022    3      IF IO_ENTRY.W9.CC_ADR#(TCX) = 0

  12022  7 003221   200017 470500                    LDP0    @TCX,,AUTO
         7 003222   000000 236100                    LDQ     0,,PR0
         7 003223   000013 402007                    MPY     11,DL
         7 003224   000014 720006 5                  LXL0    IO_ENTRY+9,QL
         7 003225   003237 600000 7                  TZE     s:12028

     1745    12023    3      THEN /* No need for a courtesy call. */ ;
     1746    12024    4      ELSE DO ;

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:351  
     1747    12025    4              CC$ = PINCRW (IS$, IO_ENTRY.W9.CC_ADR#(TCX)) ;

  12025  7 003226   000000 636010                    EAQ     0,X0
         7 003227   000000 036000 6                  ADLQ    FPTN_
         7 003230   200020 756100                    STQ     CC$,,AUTO

     1748    12026    4              CALL TOK$COURTESY_CALL (CC$) ;

  12026  7 003231   200020 631500                    EPPR1   CC$,,AUTO
         7 003232   205740 451500                    STP1    BCD_BUF_INX+1,,AUTO
         7 003233   205740 630500                    EPPR0   BCD_BUF_INX+1,,AUTO
         7 003234   000017 631400 xsym               EPPR1   B_VECTNIL+15
         7 003235   000000 701000 xent               TSX1    TOK$COURTESY_CALL
         7 003236   000000 011000                    NOP     0

     1749    12027    4           END /* else */ ;

     1750    12028    3      RETURN ;

  12028  7 003237   200016 221300                    LDX1  ! @RETURN_DELTA,,AUTO
         7 003240   000001 702211                    TSX2  ! 1,X1

     1751    12029
     1752    12030    3   END GIVE_COURTESY_CALL ;
     1753    12031    2   END TOP$MME_HUNGTM ;
     1754    12032        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:352  
     1755    12033        /*I* NAME:         TOP$MME_IOCONS
     1756    12034             CALL:         CALL TOP$MME_IOCONS(P_X1REG,P_AREG,RETURN_DELTA) ;
     1757    12035               INTERFACE:    MATCH_SCT_ADR
     1758    12036             INPUT:        P_X1REG = SCT address for test page
     1759    12037             OUTPUT:       P_AREG = number of connects on channel since OPEN
     1760    12038                           RETURN_DELTA = 1
     1761    12039             DESCRIPTION:  Calls MATCH_SCT_ADR to search TOP$TCP for a
     1762    12040                           match on the SCT address passed, to yield TCX, the
     1763    12041                           index into TOP$TCP for the page.  The pointer
     1764    12042                           TC_DCB$ is built to point to the DCB for the page
     1765    12043                           using TCX and the DCB number in TOP$TCP.  The
     1766    12044                           desired information is accessed using the BASED
     1767    12045                           structure F$DCB.CONNCT#.
     1768    12046        */
     1769    12047
     1770    12048    1   TOP$MME_IOCONS: PROC (P_X1REG,P_AREG,RETURN_DELTA) ;

  12048  7 003241   200010 741300       TOP$MME_IOC* STX1  ! @RETURN_DELTA+2,,AUTO

     1771    12049
     1772    12050    2      DCL TCX UBIN WORD ALIGNED ;
     1773    12051    2      DCL P_AREG UBIN WORD ALIGNED ;
     1774    12052    2      DCL P_X1REG UBIN HALF HALIGNED ;
     1775    12053    2      DCL RETURN_DELTA SBIN HALF HALIGNED ;
     1776    12054    2      DCL TD_DCB$ PTR ALIGNED ;
     1777    12055
     1778    12056        /* Code */
     1779    12057
     1780    12058    2      CALL MATCH_SCT_ADR (P_X1REG,TCX) ;

  12058  7 003242   200014 630500                    EPPR0   TCX,,AUTO
         7 003243   200026 450500                    STP0    NEW_ICCDD,,AUTO
         7 003244   200011 236100                    LDQ     @P_X1REG,,AUTO
         7 003245   200025 756100                    STQ     SCTWDS_BUILT,,AUTO
         7 003246   012567 701000 7                  TSX1    MATCH_SCT_ADR
         7 003247   000000 011000                    NOP     0

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:353  
     1781    12059    2      TD_DCB$ = DCBADDR (TOP$TCP.DCB#(TCX)) ;

  12059  7 003250   000015 470400 8                  LDP0    13
         7 003251   000000 471500                    LDP1    0,,PR0
         7 003252   200014 236100                    LDQ     TCX,,AUTO
         7 003253   000244 402007                    MPY     164,DL
         7 003254   000003 473400 xsym               LDP3    TOT$DMC+3
         7 003255   300007 720106                    LXL0    7,QL,PR3
         7 003256   100000 236110                    LDQ     0,X0,PR1
         7 003257   200015 756100                    STQ     TD_DCB$,,AUTO

     1782    12060    2      P_AREG = TD_DCB$ -> F$DCB.CONNCT# ;

  12060  7 003260   200015 474500                    LDP4    TD_DCB$,,AUTO
         7 003261   400041 235100                    LDA     33,,PR4
         7 003262   200012 475500                    LDP5    @P_AREG,,AUTO
         7 003263   500000 755100                    STA     0,,PR5

     1783    12061    2      RETURN_DELTA = 1 ;

  12061  7 003264   200013 473500                    LDP3    @RETURN_DELTA,,AUTO
         7 003265   000100 101400                    MRL     fill='000'O
         7 003266   000003 000004 xsym               ADSC9   B_VECTNIL+3              cn=0,n=4
         7 003267   300000 000002                    ADSC9   0,,PR3                   cn=0,n=2

     1784    12062    2      RETURN ;

  12062  7 003270   200010 221300                    LDX1  ! @RETURN_DELTA+2,,AUTO
         7 003271   000001 702211                    TSX2  ! 1,X1

     1785    12063
     1786    12064    2   END TOP$MME_IOCONS ;
     1787    12065        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:354  
     1788    12066        /*I* NAME:         TOP$MME_IPCWDT
     1789    12067             CALL:         CALL TOP$MME_IPCWDT(P_X1REG,RETURN_DELTA) ;
     1790    12068             INTERFACE:    MATCH_ICC
     1791    12069                           M$TDIO
     1792    12070             INPUT:        P_X1REG(bits 9-17) = IOM and channel number(ICC)
     1793    12071             OUTPUT:       RETURN_DELTA = 1
     1794    12072             DESCRIPTION:  This routine issues an IPCW command to the MPC
     1795    12073                           on the IOM and channel number specified in ICC.
     1796    12074                           The IPCW command is an initialize commands to the
     1797    12075                           MPC, and physically results in a DC initialize
     1798    12076                           command being sent to the MPC(RSO command).  This
     1799    12077                           puts the MPC in a state where it is waiting for a
     1800    12078                           Bootload command, which in the case of ITR testing
     1801    12079                           will load the ITR overlay for testing.
     1802    12080
     1803    12081                           The MPC will not send back any terminate interrupt,
     1804    12082                           so CP6 will time out the command and return a
     1805    12083                           "lost interrupt" status to us.  A unique Event ID
     1806    12084                           is assigned to the IPCW command so that the lost
     1807    12085                           interrupt status will be ignored in the Event Handler,
     1808    12086                           TOE$EVENT_HANDLER.
     1809    12087
     1810    12088                           MATCH_ICC is called to search TOP$TCP to find
     1811    12089                           the TOP$TCP index TCX which corresponds to the
     1812    12090                           test page running on IOM and Channel specified by
     1813    12091                           ICC in bits 9-17 of P_X1REG.
     1814    12092                           The TDIO_FPT is set up as follows to issue the
     1815    12093                           IPCW command to the MPC:
     1816    12094
     1817    12095                             TDIO_FPT.DATA_ = VECTOR(NIL) ;  (not used)
     1818    12096                             TDIO_FPT.DCWLIST_ = VECTOR(NIL) ;  (not used)
     1819    12097                             TDIO_FPT.V.DCB# = DCB number for the page
     1820    12098                             TDIO_FPT.V.WAIT# =  set for "no wait" I/O
     1821    12099                             TDIO_FPT.V.PCW# = '000000770000'O (the IPCW cmd)
     1822    12100                             TDIO_FPT.V.ALTPATH = none
     1823    12101                             TDIO_FPT.V.EVENT# = unique Event ID for this commnand
     1824    12102                             TDIO_FPT.V.TIMEOUT# = 5 second timeout on terminate
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:355  
     1825    12103
     1826    12104                           TOT$ECP.IO.COUNT is incremented by one for all
     1827    12105                           "no wait" I/O.  It is decremented by one by the
     1828    12106                           Event Handler when the I/O completes.
     1829    12107
     1830    12108                           M$WAIT is called to wait for 15 seconds.  This
     1831    12109                           is needed because the IPCW command generates no
     1832    12110                           terminate interrupt.  CP6 will timeout the
     1833    12111                           command in 10-15 seconds and return lost interrupt
     1834    12112                           status which will be ignored in the Event
     1835    12113                           Handler.  However, if we continue immediately
     1836    12114                           here and call the Loader to access the Deckfile,
     1837    12115                           it will attempt to release its buffer memory
     1838    12116                           before the IPCW command is timed out by CP6.
     1839    12117                           Thus it will be trying to release memory with
     1840    12118                           an I/O outstanding (Master Function Count > 0).
     1841    12119                           The 15 second wait here should allow time enough
     1842    12120                           for the I/O to timeout first before we go to
     1843    12121                           the Loader and acquire and release buffer memory.
     1844    12122        */
     1845    12123        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:356  
     1846    12124    1   TOP$MME_IPCWDT: PROC (P_X1REG,RETURN_DELTA) ;

  12124  7 003272   200010 741300       TOP$MME_IPC* STX1  ! @RETURN_DELTA+2,,AUTO

     1847    12125
     1848    12126           %FPT_WAIT(FPTN = DELAY_FPT,
     1849    12127                     UNITS = 15) ;
     1850    12141    2      DCL TCX UBIN WORD ALIGNED ;
     1851    12142    2      DCL P_X1REG UBIN HALF HALIGNED ;
     1852    12143    2      DCL 1 X1 REDEF P_X1REG HALIGNED,
     1853    12144    2            2 * BIT (6) UNAL,
     1854    12145    2            2 FORMAT# BIT (1) UNAL,
     1855    12146    2            2 OLD_ICC,
     1856    12147    2              3 IOM# UBIN (5) UNAL,
     1857    12148    2              3 CHAN# UBIN (6) UNAL,
     1858    12149    2            2 NEW_ICC REDEF OLD_ICC,
     1859    12150    2              3 IOM# UBIN (3) UNAL,
     1860    12151    2              3 CHAN# UBIN (8) UNAL ;
     1861    12152    2      DCL 1 ICC UNAL,
     1862    12153    2            2 IOM# UBIN (3) UNAL,
     1863    12154    2            2 CHAN# UBIN (8) UNAL ;
     1864    12155    2      DCL RETURN_DELTA SBIN HALF HALIGNED ;
     1865    12156        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:357  
     1866    12157        /* Code */
     1867    12158
     1868    12159    2      IF X1.FORMAT# = %NEW_FORMAT

  12159  7 003273   200011 470500                    LDP0    @P_X1REG,,AUTO
         7 003274   000000 066500                    CMPB    filb='0'B
         7 003275   000000 060001                    BDSC    0,,PR0                   by=0,bit=6,n=1
         7 003276   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         7 003277   003307 600000 7                  TZE     s:12165

     1869    12160    3      THEN DO ;

     1870    12161    3              ICC.IOM# = X1.NEW_ICC.IOM# ;

  12161  7 003300   003100 060500                    CSL     bolr='003'O
         7 003301   000000 070003                    BDSC    0,,PR0                   by=0,bit=7,n=3
         7 003302   200014 000003                    BDSC    ICC,,AUTO                by=0,bit=0,n=3

     1871    12162    3              ICC.CHAN# = X1.NEW_ICC.CHAN# ;

  12162  7 003303   003100 060500                    CSL     bolr='003'O
         7 003304   000000 210010                    BDSC    0,,PR0                   by=1,bit=1,n=8
         7 003305   200014 030010                    BDSC    ICC,,AUTO                by=0,bit=3,n=8

     1872    12163    3           END ;

  12163  7 003306   003315 710000 7                  TRA     s:12168

     1873    12164    3      ELSE DO ;

     1874    12165    3              ICC.IOM# = X1.OLD_ICC.IOM# ;

  12165  7 003307   003100 061500                    CSR     bolr='003'O
         7 003310   000000 070005                    BDSC    0,,PR0                   by=0,bit=7,n=5
         7 003311   200014 000003                    BDSC    ICC,,AUTO                by=0,bit=0,n=3

     1875    12166    3              ICC.CHAN# = X1.OLD_ICC.CHAN# ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:358  

  12166  7 003312   003100 061500                    CSR     bolr='003'O
         7 003313   000000 230006                    BDSC    0,,PR0                   by=1,bit=3,n=6
         7 003314   200014 030010                    BDSC    ICC,,AUTO                by=0,bit=3,n=8

     1876    12167    3           END ;

     1877    12168    2      CALL MATCH_ICC (ICC,TCX) ;

  12168  7 003315   200013 631500                    EPPR1   TCX,,AUTO
         7 003316   200024 451500                    STP1    FICCDD$,,AUTO
         7 003317   200014 633500                    EPPR3   ICC,,AUTO
         7 003320   200023 453500                    STP3    TCX,,AUTO
         7 003321   012520 701000 7                  TSX1    MATCH_ICC
         7 003322   000000 011000                    NOP     0

     1878    12169    2      TDIO_FPT.DATA_ = VECTOR (NIL) ;

  12169  7 003323   000024 237000 8                  LDAQ    20
         7 003324   000204 757000 5                  STAQ    TDIO_FPT+4

     1879    12170    2      TDIO_FPT.DCWLIST_ = VECTOR (NIL) ;

  12170  7 003325   000024 237000 8                  LDAQ    20
         7 003326   000202 757000 5                  STAQ    TDIO_FPT+2

     1880    12171    2      TDIO_FPT.V.DCB# = TOP$TCP.DCB#(TCX) ;

  12171  7 003327   200013 236100                    LDQ     TCX,,AUTO
         7 003330   000244 402007                    MPY     164,DL
         7 003331   000003 470400 xsym               LDP0    TOT$DMC+3
         7 003332   000007 720106                    LXL0    7,QL,PR0
         7 003333   000206 740000 5                  STX0    TDIO_FPT+6

     1881    12172    2      TDIO_FPT.V.WAIT# = %NO# ;

  12172  7 003334   000023 236000 8                  LDQ     19
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:359  
         7 003335   000206 356000 5                  ANSQ    TDIO_FPT+6

     1882    12173    2      TDIO_FPT.V.PCW# = '000000770000'O ;

  12173  7 003336   000125 236000 6                  LDQ     CRLF_+15
         7 003337   000207 756000 5                  STQ     TDIO_FPT+7

     1883    12174    2      TDIO_FPT.V.ALTPATH = '0'B ;

  12174  7 003340   000000 236003                    LDQ     0,DU
         7 003341   000206 752003 5                  STCQ    TDIO_FPT+6,'03'O

     1884    12175    2      TDIO_FPT.V.EVENT# = %IPCW_EVENT ;

  12175  7 003342   000012 235007                    LDA     10,DL
         7 003343   000210 755000 5                  STA     TDIO_FPT+8

     1885    12176    2      TDIO_FPT.V.TIMEOUT# = 3 ;  /* #36007 */

  12176  7 003344   030000 236003                    LDQ     12288,DU
         7 003345   000211 752040 5                  STCQ    TDIO_FPT+9,'40'O

     1886    12177    3      DO INHIBIT ;

     1887    12178    3         TOT$ECP.IO.COUNT = TOT$ECP.IO.COUNT + 1 ;

  12178  7 003346   000004 054200 xsym               AOS   ! TOT$ECP+4

     1888    12179    3         CALL M$TDIO (TDIO_FPT) ;

  12179  7 003347   000200 630600 5                  EPPR0 ! TDIO_FPT
         7 003350   070004 713600                    CLIMB ! 28676
         7 003351   401000 401760                    pmme    nvectors=3

     1889    12180    3      END ; /* INHIBIT */

     1890    12181              /* Note that the M$TDIO is not necessarily inhibited */
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:360  
     1891    12182              /* but we make sure that no interrupts will be taken */
     1892    12183              /* before the IO is issued */
     1893    12184    2      CALL M$WAIT (DELAY_FPT) ;

  12184  7 003352   000256 630400 5                  EPPR0   DELAY_FPT
         7 003353   020006 713400                    CLIMB   8198
         7 003354   400400 401760                    pmme    nvectors=2

     1894    12185    2      RETURN_DELTA = 1 ;

  12185  7 003355   200012 470500                    LDP0    @RETURN_DELTA,,AUTO
         7 003356   000100 101400                    MRL     fill='000'O
         7 003357   000003 000004 xsym               ADSC9   B_VECTNIL+3              cn=0,n=4
         7 003360   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2

     1895    12186    2      RETURN ;

  12186  7 003361   200010 221300                    LDX1  ! @RETURN_DELTA+2,,AUTO
         7 003362   000001 702211                    TSX2  ! 1,X1

     1896    12187
     1897    12188    2   END TOP$MME_IPCWDT ;
     1898    12189        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:361  
     1899    12190        /*I* NAME:         TOP$MME_LODIMG
     1900    12191             CALL:         CALL TOP$MME_LODIMG(P_X1REG,RETURN_DELTA) ;
     1901    12192             INTERFACE:
     1902    12193             INPUT:
     1903    12194             OUTPUT:       RETURN_DELTA = 1
     1904    12195             DESCRIPTION:  This routine need no do anything in CP6 since
     1905    12196                           the printer train image is automaticallyu reloaded
     1906    12197                           whenever M$TDCLOSE is called or a job step is
     1907    12198                           exited.
     1908    12199        */
     1909    12200
     1910    12201    1   TOP$MME_LODIMG: PROC (P_X1REG,RETURN_DELTA) ;

  12201  7 003363   200010 741300       TOP$MME_LOD* STX1  ! @RETURN_DELTA+2,,AUTO

     1911    12202
     1912    12203    2      DCL P_X1REG UBIN HALF HALIGNED ;
     1913    12204    2      DCL RETURN_DELTA SBIN HALF HALIGNED ;
     1914    12205
     1915    12206        /* Code */
     1916    12207
     1917    12208    2      RETURN_DELTA = 1 ;

  12208  7 003364   200012 470500                    LDP0    @RETURN_DELTA,,AUTO
         7 003365   000100 101400                    MRL     fill='000'O
         7 003366   000003 000004 xsym               ADSC9   B_VECTNIL+3              cn=0,n=4
         7 003367   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2

     1918    12209    2      RETURN ;

  12209  7 003370   200010 221300                    LDX1  ! @RETURN_DELTA+2,,AUTO
         7 003371   000001 702211                    TSX2  ! 1,X1

     1919    12210
     1920    12211    2   END TOP$MME_LODIMG ;
     1921    12212        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:362  
     1922    12213        /*I* NAME:         TOP$MME_LODVFC
     1923    12214             CALL:         CALL TOP$MME_LODVFC(P_X1REG,RETURN_DELTA) ;
     1924    12215             INTERFACE:
     1925    12216             INPUT:
     1926    12217             OUTPUT:
     1927    12218             DESCRIPTION:  This routine need not do anything in CP6 since
     1928    12219                           the printer VFC image is automatically reloaded
     1929    12220                           whenever M$TDCLOSE is called or a job step is
     1930    12221                           exited.
     1931    12222        */
     1932    12223
     1933    12224    1   TOP$MME_LODVFC: PROC (P_X1REG,P_AREG,RETURN_DELTA) ;

  12224  7 003372   200010 741300       TOP$MME_LOD* STX1  ! @RETURN_DELTA+2,,AUTO

     1934    12225
     1935    12226    2      DCL P_X1REG UBIN HALF HALIGNED ;
     1936    12227    2      DCL P_AREG UBIN WORD ALIGNED ;
     1937    12228    2      DCL RETURN_DELTA SBIN HALF HALIGNED ;
     1938    12229
     1939    12230        /* Code */
     1940    12231
     1941    12232    2      RETURN_DELTA = 1 ;

  12232  7 003373   200013 470500                    LDP0    @RETURN_DELTA,,AUTO
         7 003374   000100 101400                    MRL     fill='000'O
         7 003375   000003 000004 xsym               ADSC9   B_VECTNIL+3              cn=0,n=4
         7 003376   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2

     1942    12233    2      RETURN ;

  12233  7 003377   200010 221300                    LDX1  ! @RETURN_DELTA+2,,AUTO
         7 003400   000001 702211                    TSX2  ! 1,X1

     1943    12234
     1944    12235    2   END TOP$MME_LODVFC ;
     1945    12236        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:363  
     1946    12237        /*I* NAME:         TOP$MME_LPWDT
     1947    12238             CALL:         CALL TOP$MME_LPWDT(P_X1REG,P_AREG,RETURN_DELTA) ;
     1948    12239             INTERFACE:    MATCH_ICC
     1949    12240             INPUT:        P_X1REG(bits 9-17) = IOM and channel number, ICC
     1950    12241             OUTPUT:       P_AREG = Final LPW from mailbox
     1951    12242                           RETURN_DELTA = 1
     1952    12243             DESCRIPTION:  MATCH_ICC is called to search TOP$TCP for a
     1953    12244                           match with the IOM and Channel number passed in
     1954    12245                           P_X1REG to yield TCX, the index into TOP$TCP for
     1955    12246                           the test page.  The pointer TD_DCB$ is built to
     1956    12247                           the DCB for the page using the DCB number saved in
     1957    12248                           TOP$TCP.  The Final List Pointer Word (FLPW)
     1958    12249                           from the IOM mailbox is fetched from the DCB
     1959    12250                           using the BASED structure F$DCB.FLPW#.
     1960    12251        */
     1961    12252    1   TOP$MME_LPWDT: PROC (P_X1REG,P_AREG,RETURN_DELTA) ;

  12252  7 003401   200010 741300       TOP$MME_LPW* STX1  ! @RETURN_DELTA+2,,AUTO

     1962    12253
     1963    12254    2      DCL TCX UBIN WORD ALIGNED ;
     1964    12255    2      DCL P_AREG UBIN WORD ALIGNED ;
     1965    12256    2      DCL P_X1REG UBIN HALF HALIGNED ;
     1966    12257    2      DCL 1 X1 REDEF P_X1REG HALIGNED,
     1967    12258    2            2 * BIT (6) UNAL,
     1968    12259    2            2 FORMAT# BIT (1) UNAL,
     1969    12260    2            2 OLD_ICC,
     1970    12261    2              3 IOM# UBIN (5) UNAL,
     1971    12262    2              3 CHAN# UBIN (6) UNAL,
     1972    12263    2            2 NEW_ICC REDEF OLD_ICC,
     1973    12264    2              3 IOM# UBIN (3) UNAL,
     1974    12265    2              3 CHAN# UBIN (8) UNAL ;
     1975    12266    2      DCL 1 ICC UNAL,
     1976    12267    2            2 IOM# UBIN (3) UNAL,
     1977    12268    2            2 CHAN# UBIN (8) UNAL ;
     1978    12269    2      DCL RETURN_DELTA SBIN HALF ;
     1979    12270    2      DCL TD_DCB# UBIN(18) UNAL ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:364  
     1980    12271    2      DCL TD_DCB$ PTR ;
     1981    12272           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:365  
     1982    12273        /* Code */
     1983    12274
     1984    12275    2      IF X1.FORMAT# = %NEW_FORMAT

  12275  7 003402   200011 470500                    LDP0    @P_X1REG,,AUTO
         7 003403   000000 066500                    CMPB    filb='0'B
         7 003404   000000 060001                    BDSC    0,,PR0                   by=0,bit=6,n=1
         7 003405   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         7 003406   003416 600000 7                  TZE     s:12281

     1985    12276    3      THEN DO ;

     1986    12277    3              ICC.IOM# = X1.NEW_ICC.IOM# ;

  12277  7 003407   003100 060500                    CSL     bolr='003'O
         7 003410   000000 070003                    BDSC    0,,PR0                   by=0,bit=7,n=3
         7 003411   200015 000003                    BDSC    ICC,,AUTO                by=0,bit=0,n=3

     1987    12278    3              ICC.CHAN# = X1.NEW_ICC.CHAN# ;

  12278  7 003412   003100 060500                    CSL     bolr='003'O
         7 003413   000000 210010                    BDSC    0,,PR0                   by=1,bit=1,n=8
         7 003414   200015 030010                    BDSC    ICC,,AUTO                by=0,bit=3,n=8

     1988    12279    3           END ;

  12279  7 003415   003424 710000 7                  TRA     s:12284

     1989    12280    3      ELSE DO ;

     1990    12281    3              ICC.IOM# = X1.OLD_ICC.IOM# ;

  12281  7 003416   003100 061500                    CSR     bolr='003'O
         7 003417   000000 070005                    BDSC    0,,PR0                   by=0,bit=7,n=5
         7 003420   200015 000003                    BDSC    ICC,,AUTO                by=0,bit=0,n=3

     1991    12282    3              ICC.CHAN# = X1.OLD_ICC.CHAN# ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:366  

  12282  7 003421   003100 061500                    CSR     bolr='003'O
         7 003422   000000 230006                    BDSC    0,,PR0                   by=1,bit=3,n=6
         7 003423   200015 030010                    BDSC    ICC,,AUTO                by=0,bit=3,n=8

     1992    12283    3           END ;

     1993    12284    2      CALL MATCH_ICC (ICC,TCX) ;

  12284  7 003424   200014 631500                    EPPR1   TCX,,AUTO
         7 003425   200024 451500                    STP1    FICCDD$,,AUTO
         7 003426   200015 633500                    EPPR3   ICC,,AUTO
         7 003427   200023 453500                    STP3    TCX,,AUTO
         7 003430   012520 701000 7                  TSX1    MATCH_ICC
         7 003431   000000 011000                    NOP     0

     1994    12285    2      TD_DCB# = TOP$TCP.DCB#(TCX) ;

  12285  7 003432   200014 236100                    LDQ     TCX,,AUTO
         7 003433   000244 402007                    MPY     164,DL
         7 003434   000003 470400 xsym               LDP0    TOT$DMC+3
         7 003435   000007 720106                    LXL0    7,QL,PR0
         7 003436   200016 740100                    STX0    TD_DCB#,,AUTO

     1995    12286    2      TD_DCB$ = DCBADDR (TD_DCB#) ;

  12286  7 003437   000015 471400 8                  LDP1    13
         7 003440   100000 473500                    LDP3    0,,PR1
         7 003441   300000 236110                    LDQ     0,X0,PR3
         7 003442   200017 756100                    STQ     TD_DCB$,,AUTO

     1996    12287    2      P_AREG = BITBIN (TD_DCB$ -> F$DCB.FLPW#) ;

  12287  7 003443   200017 474500                    LDP4    TD_DCB$,,AUTO
         7 003444   200012 475500                    LDP5    @P_AREG,,AUTO
         7 003445   400000 235100                    LDA     0,,PR4
         7 003446   500000 755100                    STA     0,,PR5
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:367  

     1997    12288    2      RETURN_DELTA = 1 ;

  12288  7 003447   000001 221003                    LDX1    1,DU
         7 003450   200013 470500                    LDP0    @RETURN_DELTA,,AUTO
         7 003451   000000 741100                    STX1    0,,PR0

     1998    12289    2      RETURN ;

  12289  7 003452   200010 221300                    LDX1  ! @RETURN_DELTA+2,,AUTO
         7 003453   000001 702211                    TSX2  ! 1,X1

     1999    12290
     2000    12291    2   END TOP$MME_LPWDT ;
     2001    12292        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:368  
     2002    12293        /*I* NAME:         TOP$MME_PACMAN
     2003    12294             AUTHOR:       Scott S. Sheppard
     2004    12295             PURPOSE:      Peripheral Allocation, Control, and MANipulation
     2005    12296             INTERFACE:    SUSPEND_CHANNELS
     2006    12297                           REPORT_CHANNELS
     2007    12298                           RELEASE_CHANNELS
     2008    12299                           PINCRW
     2009    12300             PARAMETERS:   A - processing type flag (input)
     2010    12301                               =  0  allocation request
     2011    12302                               ~= 0  return request
     2012    12303                           Q - IMU and CHANNEL of the MCA (input)
     2013    12304                           X2 - address of the channel list (input)
     2014    12305                              - error reason code (if any) (output)
     2015    12306                           X5 - address of the MCA configuration data (input)
     2016    12307                           RETURN_DELTA - return flag (output)
     2017    12308                              = 1  error return (X2 contains the reason)
     2018    12309                              = 2  special error (none of the channels
     2019    12310                                   requested were configured)
     2020    12311                              = 3  retry return (I/O outstanding)
     2021    12312                              = 4  good return
     2022    12313             DATA:         IS$ - pointer to the instruction segment (input)
     2023    12314             DESCRIPTION:  This procedure performs the MME PACMAN service
     2024    12315                           for  CP-6.  When  a  DIPPER  test  request  is
     2025    12316                           issued,  the channels which  will be affected,
     2026    12317                           must  be  allocated  from  the system. This is
     2027    12318                           done   via  the  MME   PACMAN.  For  the  CP-6
     2028    12319                           implementation,   this    MME   performs   the
     2029    12320                           necessary  TDOPEN's  to  allocate the channels
     2030    12321                           and  the  necessary  TDCLOSE's  to  return the
     2031    12322                           channels.  In  the  GCOS  world,  T&D  has the
     2032    12323                           ability to not return and not reboot specified
     2033    12324                           channels.   CP-6  T&D   does  not   have  this
     2034    12325                           privilege.   Instead   a  warning  message  is
     2035    12326                           issued  indicating   that  specified  channels
     2036    12327                           should  not  be  returned  (via  SYSCON) and a
     2037    12328                           no-reboot  request is issued  to the operating
     2038    12329                           system.
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:369  
     2039    12330        */
     2040    12331
     2041    12332    1   TOP$MME_PACMAN: PROC (A, Q, X2, X5, RETURN_DELTA) ;

  12332  7 003454   200010 741300       TOP$MME_PAC* STX1  ! @RETURN_DELTA+2,,AUTO

     2042    12333
     2043    12334    2      DCL A            UBIN WORD ALIGNED ;
     2044    12335    2      DCL Q            UBIN WORD ALIGNED ;
     2045    12336    2      DCL 1 ICC REDEF Q ALIGNED,
     2046    12337    2            2 *        UBIN (7) UNAL,
     2047    12338    2            2 ICCC UNAL,
     2048    12339    2              3 IOM#   UBIN (3) UNAL,
     2049    12340    2              3 CHAN#  UBIN (8) UNAL,
     2050    12341    2            2 *        UBIN (18) UNAL;
     2051    12342    2      DCL 1 ONLY_ICC ALIGNED,
     2052    12343    2            2 IOM#     UBIN (3) UNAL,
     2053    12344    2            2 CHAN#    UBIN (8) UNAL ;
     2054    12345    2      DCL X2           UBIN HALF HALIGNED ;
     2055    12346    2      DCL X5           UBIN HALF HALIGNED ;
     2056    12347    2      DCL RETURN_DELTA SBIN HALF HALIGNED ;
     2057    12348    2      DCL LIST$        PTR ALIGNED ;
     2058    12349    2      DCL TCX          UBIN WORD ALIGNED ;
     2059    12350           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:370  
     2060    12351        /* Code */
     2061    12352
     2062    12353           /* initialization */
     2063    12354    2      ONLY_ICC = ICC.ICCC ;

  12354  7 003455   200012 470500                    LDP0    @Q,,AUTO
         7 003456   000000 236100                    LDQ     0,,PR0
         7 003457   000007 736000                    QLS     7
         7 003460   777600 376003                    ANQ     -128,DU
         7 003461   200016 756100                    STQ     ONLY_ICC,,AUTO

     2064    12355    2      CALL MATCH_ICC (ONLY_ICC, TCX) ;

  12355  7 003462   200020 631500                    EPPR1   TCX,,AUTO
         7 003463   200024 451500                    STP1    FICCDD$,,AUTO
         7 003464   200016 633500                    EPPR3   ONLY_ICC,,AUTO
         7 003465   200023 453500                    STP3    TCX,,AUTO
         7 003466   012520 701000 7                  TSX1    MATCH_ICC
         7 003467   000000 011000                    NOP     0

     2065    12356    2      TDOPEN_FPT.V.DEVICE.IOM# = ICC.ICCC.IOM# ;

  12356  7 003470   200012 470500                    LDP0    @Q,,AUTO
         7 003471   000000 236100                    LDQ     0,,PR0
         7 003472   000021 772000                    QRL     17
         7 003473   000222 676000 5                  ERQ     TDOPEN_FPT+8
         7 003474   007000 376007                    ANQ     3584,DL
         7 003475   000222 656000 5                  ERSQ    TDOPEN_FPT+8

     2066    12357    2      LIST$ = PINCRW (IS$, X2) ;

  12357  7 003476   200013 471500                    LDP1    @X2,,AUTO
         7 003477   000100 100500                    MLR     fill='000'O
         7 003500   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2
         7 003501   205740 000004                    ADSC9   BCD_BUF_INX+1,,AUTO      cn=0,n=4
         7 003502   205740 220100                    LDX0    BCD_BUF_INX+1,,AUTO
         7 003503   000000 636010                    EAQ     0,X0
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:371  
         7 003504   000000 036000 6                  ADLQ    FPTN_
         7 003505   200017 756100                    STQ     LIST$,,AUTO

     2067    12358    2      RETURN_DELTA = 4 ;

  12358  7 003506   200015 473500                    LDP3    @RETURN_DELTA,,AUTO
         7 003507   000100 101400                    MRL     fill='000'O
         7 003510   000006 000004 xsym               ADSC9   B_VECTNIL+6              cn=0,n=4
         7 003511   300000 000002                    ADSC9   0,,PR3                   cn=0,n=2

     2068    12359
     2069    12360           /* processing */
     2070    12361    3      DO CASE (A) ;

  12361  7 003512   200011 474500                    LDP4    @A,,AUTO
         7 003513   400000 235100                    LDA     0,,PR4
         7 003514   000001 115007                    CMPA    1,DL
         7 003515   003517 602005 7                  TNC     s:12361+5,AL
         7 003516   003552 710000 7                  TRA     s:12371
         7 003517   003520 710000 7                  TRA     s:12363

     2071    12362    3         CASE (0) ;

     2072    12363    3            CALL SUSPEND_CHANNELS (TCX, LIST$, X2) WHENALTRETURN

  12363  7 003520   200013 236100                    LDQ     @X2,,AUTO
         7 003521   200025 756100                    STQ     SCTWDS_BUILT,,AUTO
         7 003522   200017 635500                    EPPR5   LIST$,,AUTO
         7 003523   200024 455500                    STP5    FICCDD$,,AUTO
         7 003524   200020 636500                    EPPR6   TCX,,AUTO
         7 003525   200023 456500                    STP6    TCX,,AUTO
         7 003526   003575 701000 7                  TSX1    SUSPEND_CHANNELS
         7 003527   003531 702000 7                  TSX2    s:12366
         7 003530   003551 710000 7                  TRA     s:12369

     2073    12364    4                 DO ;

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:372  
     2074    12365                    /* set to NO CHANNELS CONFIGURED return or ERROR return */
     2075    12366    4                    IF X2 = 0

  12366  7 003531   200013 470500                    LDP0    @X2,,AUTO
         7 003532   000100 101500                    MRL     fill='000'O
         7 003533   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         7 003534   205740 000004                    ADSC9   BCD_BUF_INX+1,,AUTO      cn=0,n=4
         7 003535   205740 236100                    LDQ     BCD_BUF_INX+1,,AUTO
         7 003536   000000 116003                    CMPQ    0,DU
         7 003537   003545 601000 7                  TNZ     s:12368

     2076    12367    4                    THEN RETURN_DELTA = 2 ;

  12367  7 003540   200015 471500                    LDP1    @RETURN_DELTA,,AUTO
         7 003541   000100 101400                    MRL     fill='000'O
         7 003542   000004 000004 xsym               ADSC9   B_VECTNIL+4              cn=0,n=4
         7 003543   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2
         7 003544   003551 710000 7                  TRA     s:12369

     2077    12368    4                    ELSE RETURN_DELTA = 1 ;

  12368  7 003545   200015 471500                    LDP1    @RETURN_DELTA,,AUTO
         7 003546   000100 101400                    MRL     fill='000'O
         7 003547   000003 000004 xsym               ADSC9   B_VECTNIL+3              cn=0,n=4
         7 003550   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2

     2078    12369    4                 END /* THEN */ ;

  12369  7 003551   003573 710000 7                  TRA     s:12378

     2079    12370    3         CASE (ELSE) ;

     2080    12371    3            CALL REPORT_CHANNELS (LIST$) ;

  12371  7 003552   200017 635500                    EPPR5   LIST$,,AUTO
         7 003553   200023 455500                    STP5    TCX,,AUTO
         7 003554   003644 701000 7                  TSX1    REPORT_CHANNELS
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:373  
         7 003555   000000 011000                    NOP     0

     2081    12372    3            CALL RELEASE_CHANNELS (TCX, LIST$, X2) WHENALTRETURN

  12372  7 003556   200013 236100                    LDQ     @X2,,AUTO
         7 003557   200025 756100                    STQ     SCTWDS_BUILT,,AUTO
         7 003560   200017 630500                    EPPR0   LIST$,,AUTO
         7 003561   200024 450500                    STP0    FICCDD$,,AUTO
         7 003562   200020 631500                    EPPR1   TCX,,AUTO
         7 003563   200023 451500                    STP1    TCX,,AUTO
         7 003564   003736 701000 7                  TSX1    RELEASE_CHANNELS
         7 003565   003567 702000 7                  TSX2    s:12375
         7 003566   003573 710000 7                  TRA     s:12378

     2082    12373    4                 DO ;

     2083    12374                    /* set to ERROR return */
     2084    12375    4                    RETURN_DELTA = 1 ;

  12375  7 003567   200015 470500                    LDP0    @RETURN_DELTA,,AUTO
         7 003570   000100 101400                    MRL     fill='000'O
         7 003571   000003 000004 xsym               ADSC9   B_VECTNIL+3              cn=0,n=4
         7 003572   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2

     2085    12376    4                 END /* WHENALTRETURN */ ;

     2086    12377    3      END /* CASE */ ;

     2087    12378    2      RETURN ;

  12378  7 003573   200010 221300                    LDX1  ! @RETURN_DELTA+2,,AUTO
         7 003574   000001 702211                    TSX2  ! 1,X1

     2088    12379
     2089    12380        /* END TOP$MME_PACMAN */
     2090    12381        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:374  
     2091    12382        /*I* NAME:         SUSPEND_CHANNELS
     2092    12383             AUTHOR:       Scott S. Sheppard
     2093    12384             PURPOSE:      allocates channels on an IMU
     2094    12385             INTERFACE:    M$TDOPEN
     2095    12386                           PINCRW
     2096    12387                           TOX$WARN
     2097    12388             PARAMETERS:   TCX - test control index,which test request (input)
     2098    12389                           LIST$ - pointer to the channel list (input)
     2099    12390                           REASON - error code (output)
     2100    12391             DATA:         B$TCB$ - pointer to the Task Control Block (input)
     2101    12392                           B$TCB.ALT$ - pointer to the ALTRETURN frame (input)
     2102    12393                           B$ALT.ERR - overlay for the standard error code
     2103    12394             DESCRIPTION:  This procedure is entered as a result of SPUD
     2104    12395                           issuing a MME PACMAN to suspd all channels   s
     2105    12396                           connected with the TEST IPC x command. SPUD will
     2106    12397                           pass a pointer which references a cell containing
     2107    12398                           the primary/base channel and the number of
     2108    12399                           channels.                            The input
     2109    12400                           to  this procedure  is a  list of  channels to
     2110    12401                           operate on, with the list items containing the
     2111    12402                           base  channel,  and   number  of  channels  to
     2112    12403                           acquire. The list is terminated with a -1.  If
     2113    12404                           anything   goes  wrong   while  attempting  to
     2114    12405                           allocate  the channels,  this procedure should
     2115    12406                           altreturn after setting the reason code to the
     2116    12407                           appropriate value. The possible values for the
     2117    12408                           reason  code are equates  found in the include
     2118    12409                           file TOU_TOLTS_M and are listed as POLTS Error
     2119    12410                           Return Codes.
     2120    12411        */
     2121    12412        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:375  
     2122    12413    2   SUSPEND_CHANNELS: PROC (TCX, LIST$, REASON) ALTRET ;

  12413  7 003575   200022 741300       SUSPEND_CHA* STX1  ! EDIT_NAME+1,,AUTO

     2123    12414
     2124    12415    3      DCL TCX          UBIN WORD ALIGNED ;
     2125    12416    3      DCL LIST$        PTR ALIGNED ;
     2126    12417    3      DCL REASON       UBIN HALF HALIGNED ;
     2127    12418    3      DCL WORK$        PTR ALIGNED ;
     2128    12419    3      DCL 1 LIST_ITEM  BASED (WORK$) ALIGNED,
     2129    12420    3            2 E        ALIGNED,
     2130    12421    3              3 BASE_CHN UBIN BYTE CALIGNED,
     2131    12422    3              3 NUMB_CHN SBIN BYTE CALIGNED,
     2132    12423    3              3 FLAGS    CALIGNED,
     2133    12424    3                4 NO_REBOOT BIT (1) UNAL,
     2134    12425    3                4 *         BIT (17) UNAL,
     2135    12426    3            2 FENCE REDEF E SBIN WORD ALIGNED ;
     2136    12427
     2137    12428        /* Code */
     2138    12429
     2139    12430    3      WORK$ = LIST$ ;

  12430  7 003576   200024 470500                    LDP0    @LIST$,,AUTO
         7 003577   000000 236100                    LDQ     0,,PR0
         7 003600   200026 756100                    STQ     WORK$,,AUTO

     2140    12431    3      TDOPEN_FPT.V.DCB# = DCBNUM (M$DEVCNFG) ;

  12431  7 003601   000000 236007 xsym               LDQ     M$DEVCNFG,DL
         7 003602   000000 620006                    EAX0    0,QL
         7 003603   000222 740000 5                  STX0    TDOPEN_FPT+8

     2141    12432    3      TDOPEN_FPT.V.TEST# = %TD_TEST_IPC ;

  12432  7 003604   100000 236003                    LDQ     32768,DU
         7 003605   000224 752040 5                  STCQ    TDOPEN_FPT+10,'40'O

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:376  
     2142    12433    3      TDOPEN_FPT.V.NCHANS# = WORK$ -> LIST_ITEM.E.NUMB_CHN ;

  12433  7 003606   200026 471500                    LDP1    WORK$,,AUTO
         7 003607   100000 236100                    LDQ     0,,PR1
         7 003610   000006 736000                    QLS     6
         7 003611   000224 752020 5                  STCQ    TDOPEN_FPT+10,'20'O

     2143    12434    3      TDOPEN_FPT.V.DEVICE.CHAN# = WORK$ -> LIST_ITEM.E.BASE_CHN ;

  12434  7 003612   100000 236100                    LDQ     0,,PR1
         7 003613   000033 772000                    QRL     27
         7 003614   000222 552004 5                  STBQ    TDOPEN_FPT+8,'04'O

     2144    12435    3      TDOPEN_FPT.V.DEVICE.DVN# = 0 ;

  12435  7 003615   000000 236003                    LDQ     0,DU
         7 003616   000222 752004 5                  STCQ    TDOPEN_FPT+8,'04'O

     2145    12436    3      CALL M$TDOPEN (TDOPEN_FPT) WHENALTRETURN

  12436  7 003617   000212 630400 5                  EPPR0   TDOPEN_FPT
         7 003620   470002 713400                    CLIMB   alt,+28674
         7 003621   401400 401760                    pmme    nvectors=4
         7 003622   003624 702000 7                  TSX2    s:12438
         7 003623   003642 710000 7                  TRA     s:12443

     2146    12437    4           DO ;

     2147    12438    4              CALL TOX$WARN (B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR) ;

  12438  7 003624   000000 470400 xsym               LDP0    B$TCB$
         7 003625   000000 471500                    LDP1    0,,PR0
         7 003626   100102 633500                    EPPR3   66,,PR1
         7 003627   205740 453500                    STP3    BCD_BUF_INX+1,,AUTO
         7 003630   205740 630500                    EPPR0   BCD_BUF_INX+1,,AUTO
         7 003631   000017 631400 xsym               EPPR1   B_VECTNIL+15
         7 003632   000000 701000 xent               TSX1    TOX$WARN
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:377  
         7 003633   000000 011000                    NOP     0

     2148    12439    4              REASON = %CP6DENY# ;

  12439  7 003634   200025 470500                    LDP0    @REASON,,AUTO
         7 003635   000100 101400                    MRL     fill='000'O
         7 003636   000010 000004 xsym               ADSC9   B_VECTNIL+8              cn=0,n=4
         7 003637   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2

     2149    12440    4              ALTRETURN ;

  12440  7 003640   200022 221300                    LDX1  ! EDIT_NAME+1,,AUTO
         7 003641   000000 702211                    TSX2  ! 0,X1

     2150    12441    4           END /* WHENALTRETURN */ ;
     2151    12442
     2152    12443    3      RETURN ;

  12443  7 003642   200022 221300                    LDX1  ! EDIT_NAME+1,,AUTO
         7 003643   000001 702211                    TSX2  ! 1,X1

     2153    12444
     2154    12445    3   END SUSPEND_CHANNELS ;
     2155    12446        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:378  
     2156    12447        /*I* NAME:         REPORT_CHANNELS
     2157    12448             AUTHOR:       Scott S. Sheppard
     2158    12449             PURPOSE:      prints user messages
     2159    12450             INTERFACE:    TOT$CONSOLE_OUT
     2160    12451                           BINCHAR function
     2161    12452                           PINCRW
     2162    12453             PARAMETERS:   LIST$ - pointer to the channel list (input)
     2163    12454             DATA:         CONSOLE_FPT.BUF_ - message buffer (output)
     2164    12455             DESCRIPTION:  On  a PACMAN return  request, all channels are
     2165    12456                           to be  returned to the system  except the ones
     2166    12457                           specified  in  the  list.  This  procedure  is
     2167    12458                           called   on  a  PACMAN   return  request.  All
     2168    12459                           channels  that are  found in  the channel list
     2169    12460                           are  either:  not  to  re-booted  or not to be
     2170    12461                           returned.   This  procedure  steps through the
     2171    12462                           list  and informs  the user  as to whether any
     2172    12463                           channels  are  not  going  to  be  rebooted or
     2173    12464                           recommends that others not be returned.
     2174    12465        */
     2175    12466        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:379  
     2176    12467    2   REPORT_CHANNELS: PROC (LIST$) ;

  12467  7 003644   200022 741300       REPORT_CHAN* STX1  ! EDIT_NAME+1,,AUTO

     2177    12468
     2178    12469    3      DCL LIST$        PTR ALIGNED ;
     2179    12470    3      DCL WORK$        PTR ALIGNED ;
     2180    12471    3      DCL 1 LIST_ITEM  BASED (WORK$) ALIGNED,
     2181    12472    3            2 E        ALIGNED,
     2182    12473    3              3 BASE_CHN UBIN BYTE CALIGNED,
     2183    12474    3              3 NUMB_CHN SBIN BYTE CALIGNED,
     2184    12475    3              3 FLAGS    CALIGNED,
     2185    12476    3                4 NO_REBOOT BIT (1) UNAL,
     2186    12477    3                4 *         BIT (17) UNAL,
     2187    12478    3            2 FENCE REDEF E SBIN WORD ALIGNED ;
     2188    12479    3      DCL YES_RETURN_MSG_1 CHAR (0) CONSTANT CALIGNED INIT
     2189    12480    3          ('TOLTS recommends that the following channels shall be') ;
     2190    12481    3      DCL YES_RETURN_MSG_2 CHAR (0) CONSTANT CALIGNED INIT
     2191    12482    3          ('returned back to the system via SYSCON') ;
     2192    12483    3      DCL NO_RETURN_MSG CHAR (0) CONSTANT CALIGNED INIT
     2193    12484    3          ('Errors detected on channels and thus should not be returned') ;
     2194    12485    3      DCL 1 CHANNEL_MSG STATIC CALIGNED,
     2195    12486    3            2 *    CHAR (0) CALIGNED INIT ('Base channel: '),
     2196    12487    3            2 CHN# CHAR (3) CALIGNED INIT ('000'),
     2197    12488    3            2 *    CHAR (0) CALIGNED INIT (' Number of channels: '),
     2198    12489    3            2 NUM# CHAR (3) CALIGNED INIT ('000') ;
     2199    12490           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:380  
     2200    12491        /* Code */
     2201    12492
     2202    12493    3      WORK$ = LIST$ ;

  12493  7 003645   200023 470500                    LDP0    @LIST$,,AUTO
         7 003646   000000 236100                    LDQ     0,,PR0
         7 003647   200024 756100                    STQ     WORK$,,AUTO

     2203    12494    4      DO WHILE (LIST_ITEM.FENCE ~= -1) ;

  12494  7 003650   003730 710000 7                  TRA     s:12518

     2204    12495              /* print NO RETURN or NO REBOOT message for this list item */
     2205    12496    4         IF LIST_ITEM.E.FLAGS.NO_REBOOT

  12496  7 003651   200024 470500                    LDP0    WORK$,,AUTO
         7 003652   000000 236100                    LDQ     0,,PR0
         7 003653   400000 316007                    CANQ    -131072,DL
         7 003654   003663 600000 7                  TZE     s:12502

     2206    12497    5         THEN DO ;

     2207    12498    5                 CONSOLE_FPT.BUF_ = VECTOR (NO_RETURN_MSG) ;

  12498  7 003655   000026 237000 8                  LDAQ    22
         7 003656   000004 757000 xsym               STAQ    CONSOLE_FPT+4

     2208    12499    5                 CALL TOT$CONSOLE_OUT ;

  12499  7 003657   000002 631400 xsym               EPPR1   B_VECTNIL+2
         7 003660   000000 701000 xent               TSX1    TOT$CONSOLE_OUT
         7 003661   000000 011000                    NOP     0

     2209    12500    5              END /* THEN */ ;

  12500  7 003662   003675 710000 7                  TRA     s:12509

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:381  
     2210    12501    5         ELSE DO ;

     2211    12502    5                 CONSOLE_FPT.BUF_ = VECTOR (YES_RETURN_MSG_1) ;

  12502  7 003663   000030 237000 8                  LDAQ    24
         7 003664   000004 757000 xsym               STAQ    CONSOLE_FPT+4

     2212    12503    5                 CALL TOT$CONSOLE_OUT ;

  12503  7 003665   000002 631400 xsym               EPPR1   B_VECTNIL+2
         7 003666   000000 701000 xent               TSX1    TOT$CONSOLE_OUT
         7 003667   000000 011000                    NOP     0

     2213    12504    5                 CONSOLE_FPT.BUF_ = VECTOR (YES_RETURN_MSG_2) ;

  12504  7 003670   000032 237000 8                  LDAQ    26
         7 003671   000004 757000 xsym               STAQ    CONSOLE_FPT+4

     2214    12505
     2215    12506    5                 CALL TOT$CONSOLE_OUT ;

  12506  7 003672   000002 631400 xsym               EPPR1   B_VECTNIL+2
         7 003673   000000 701000 xent               TSX1    TOT$CONSOLE_OUT
         7 003674   000000 011000                    NOP     0

     2216    12507    5              END /* ELSE */ ;

     2217    12508
     2218    12509    4         CALL BINCHAR (CHANNEL_MSG.CHN#, LIST_ITEM.E.BASE_CHN) ;

  12509  7 003675   200024 470500                    LDP0    WORK$,,AUTO
         7 003676   000000 236100                    LDQ     0,,PR0
         7 003677   000033 772000                    QRL     27
         7 003700   000000 235003                    LDA     0,DU
         7 003701   205740 757100                    STAQ    BCD_BUF_INX+1,,AUTO
         7 003702   000000 301500                    BTD
         7 003703   205740 000010                    NDSC9   BCD_BUF_INX+1,,AUTO      cn=0,s=lsgnf,sf=0,n=8
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:382  
         7 003704   000267 430003 5                  NDSC9   CHANNEL_MSG+3            cn=2,s=nosgn,sf=0,n=3

     2219    12510    4         IF LIST_ITEM.E.NUMB_CHN = -1

  12510  7 003705   000000 236100                    LDQ     0,,PR0
         7 003706   000777 376003                    ANQ     511,DU
         7 003707   000777 116003                    CMPQ    511,DU
         7 003710   003715 601000 7                  TNZ     s:12512

     2220    12511    4         THEN CHANNEL_MSG.NUM# = 'all' ;

  12511  7 003711   040000 100400                    MLR     fill='040'O
         7 003712   000126 000003 6                  ADSC9   CRLF_+16                 cn=0,n=3
         7 003713   000275 400003 5                  ADSC9   CHANNEL_MSG+9            cn=2,n=3
         7 003714   003720 710000 7                  TRA     s:12513

     2221    12512    4         ELSE CALL BINCHAR (CHANNEL_MSG.NUM#, LIST_ITEM.E.NUMB_CHN) ;

  12512  7 003715   000000 301500                    BTD
         7 003716   000000 200001                    NDSC9   0,,PR0                   cn=1,s=lsgnf,sf=0,n=1
         7 003717   000275 430003 5                  NDSC9   CHANNEL_MSG+9            cn=2,s=nosgn,sf=0,n=3

     2222    12513    4         CONSOLE_FPT.BUF_ = VECTOR (CHANNEL_MSG) ;

  12513  7 003720   000034 237000 8                  LDAQ    28
         7 003721   000004 757000 xsym               STAQ    CONSOLE_FPT+4

     2223    12514    4         CALL TOT$CONSOLE_OUT ;

  12514  7 003722   000002 631400 xsym               EPPR1   B_VECTNIL+2
         7 003723   000000 701000 xent               TSX1    TOT$CONSOLE_OUT
         7 003724   000000 011000                    NOP     0

     2224    12515
     2225    12516              /* advance to the next list item */
     2226    12517    4         WORK$ = PINCRW (WORK$, 1) ;

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:383  
  12517  7 003725   200024 236100                    LDQ     WORK$,,AUTO
         7 003726   000001 036003                    ADLQ    1,DU
         7 003727   200024 756100                    STQ     WORK$,,AUTO

     2227    12518    4      END /* WHILE */ ;

  12518  7 003730   200024 470500                    LDP0    WORK$,,AUTO
         7 003731   000000 235100                    LDA     0,,PR0
         7 003732   000027 115000 xsym               CMPA    B_VECTNIL+23
         7 003733   003651 601000 7                  TNZ     s:12496

     2228    12519    3      RETURN ;

  12519  7 003734   200022 221300                    LDX1  ! EDIT_NAME+1,,AUTO
         7 003735   000001 702211                    TSX2  ! 1,X1

     2229    12520
     2230    12521    3   END REPORT_CHANNELS ;
     2231    12522        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:384  
     2232    12523        /*I* NAME:         RELEASE_CHANNELS
     2233    12524             AUTHOR:       Scott S. Sheppard
     2234    12525             PURPOSE:      returns channels on an IMU
     2235    12526             INTERFACE:    M$TDCLOSE
     2236    12527                           PINCRW
     2237    12528                           TOX$WARN
     2238    12529             PARAMETERS:   TCX - test control index,which test request (input)
     2239    12530                           LIST$ - pointer to the channel list (input)
     2240    12531                           REASON - error code (output)
     2241    12532             DATA:         B$TCB$ - pointer to the Task Control Block (input)
     2242    12533                           B$TCB.ALT$ - pointer to the ALTRETURN frame (input)
     2243    12534                           B$ALT.ERR - overlay for the standard error code
     2244    12535             DESCRIPTION:  Like SUSPEND_CHANNELS, this procedure also needs
     2245    12536                           some work.A list of channels, similar to the one
     2246    12537                           used  for  suspending  channels  is  passsed  to
     2247    12538                           this routine.The list contains all channels that
     2248    12539                           are NOT to be returned or NOT to be re-booted.
     2249    12540                           TOLTS does not have the power to  stop  channels
     2250    12541                           from being returned,  since this is  done  using
     2251    12542                           SYSCON.If LADC comes up with something to be put
     2252    12543                           in the TDCLOSE FPT to indicate no-reboot, it
     2253    12544                           should be used here. Otherwise, by closing the
     2254    12545                           T&D DCB, the channel is no longer owned by T&D
     2255    12546                           and may be returned to the system.
     2256    12547        */
     2257    12548        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:385  
     2258    12549    2   RELEASE_CHANNELS: PROC (TCX, LIST$, REASON) ALTRET ;

  12549  7 003736   200022 741300       RELEASE_CHA* STX1  ! EDIT_NAME+1,,AUTO

     2259    12550
     2260    12551    3      DCL TCX          UBIN WORD ALIGNED ;
     2261    12552    3      DCL LIST$        PTR ALIGNED ;
     2262    12553    3      DCL REASON       UBIN HALF HALIGNED ;
     2263    12554    3      DCL WORK$        PTR ALIGNED ;
     2264    12555    3      DCL 1 LIST_ITEM  BASED (WORK$) ALIGNED,
     2265    12556    3            2 E        ALIGNED,
     2266    12557    3              3 BASE_CHN UBIN BYTE CALIGNED,
     2267    12558    3              3 NUMB_CHN SBIN BYTE CALIGNED,
     2268    12559    3              3 FLAGS    CALIGNED,
     2269    12560    3                4 NO_REBOOT BIT (1) UNAL,
     2270    12561    3                4 *         BIT (17) UNAL,
     2271    12562    3            2 FENCE REDEF E SBIN WORD ALIGNED ;
     2272    12563
     2273    12564        /* Code */
     2274    12565
     2275    12566    3      WORK$ = LIST$ ;

  12566  7 003737   200024 470500                    LDP0    @LIST$,,AUTO
         7 003740   000000 236100                    LDQ     0,,PR0
         7 003741   200026 756100                    STQ     WORK$,,AUTO

     2276    12567    3      TDCLOSE_FPT.V.DCB# = DCBNUM (M$DEVCNFG) ;

  12567  7 003742   000000 236007 xsym               LDQ     M$DEVCNFG,DL
         7 003743   000000 620006                    EAX0    0,QL
         7 003744   000176 740000 5                  STX0    TDCLOSE_FPT+2

     2277    12568    3      CALL M$TDCLOSE (TDCLOSE_FPT) WHENALTRETURN

  12568  7 003745   000174 630400 5                  EPPR0   TDCLOSE_FPT
         7 003746   470003 713400                    CLIMB   alt,+28675
         7 003747   400000 401760                    pmme    nvectors=1
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:386  
         7 003750   003752 702000 7                  TSX2    s:12570
         7 003751   003770 710000 7                  TRA     s:12575

     2278    12569    4           DO ;

     2279    12570    4              CALL TOX$WARN (B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR) ;

  12570  7 003752   000000 470400 xsym               LDP0    B$TCB$
         7 003753   000000 471500                    LDP1    0,,PR0
         7 003754   100102 633500                    EPPR3   66,,PR1
         7 003755   205740 453500                    STP3    BCD_BUF_INX+1,,AUTO
         7 003756   205740 630500                    EPPR0   BCD_BUF_INX+1,,AUTO
         7 003757   000017 631400 xsym               EPPR1   B_VECTNIL+15
         7 003760   000000 701000 xent               TSX1    TOX$WARN
         7 003761   000000 011000                    NOP     0

     2280    12571    4              REASON = %CP6DENY# ;

  12571  7 003762   200025 470500                    LDP0    @REASON,,AUTO
         7 003763   000100 101400                    MRL     fill='000'O
         7 003764   000010 000004 xsym               ADSC9   B_VECTNIL+8              cn=0,n=4
         7 003765   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2

     2281    12572    4              ALTRETURN ;

  12572  7 003766   200022 221300                    LDX1  ! EDIT_NAME+1,,AUTO
         7 003767   000000 702211                    TSX2  ! 0,X1

     2282    12573    4           END /* WHENALTRETURN */ ;
     2283    12574
     2284    12575    3      RETURN ;

  12575  7 003770   200022 221300                    LDX1  ! EDIT_NAME+1,,AUTO
         7 003771   000001 702211                    TSX2  ! 1,X1

     2285    12576
     2286    12577    3   END RELEASE_CHANNELS ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:387  
     2287    12578    2   END TOP$MME_PACMAN ;
     2288    12579        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:388  
     2289    12580        /*I* NAME:         TOP$MME_POINIT
     2290    12581             CALL:         CALL TOP$MME_POINIT (MME_INSTR$,RETURN_DELTA) ;
     2291    12582             INTERFACE:
     2292    12583             INPUT:        MME_INSTR$ is a pointer to the MME POINIT instruction.
     2293    12584             OUTPUT:       Miscellaneous initialization data returned to
     2294    12585                           to either Slave mode POLTS or MOLTS.
     2295    12586                           RETURN_DELTA = 10
     2296    12587             DESCRIPTION:  Almost all of the data returned is not applicable
     2297    12588                           to a CP6 system, so most of it is faked.  The only
     2298    12589                           real information is returned in LSTLOC and in the
     2299    12590                           operating system type code, set to indicate cp-6.
     2300    12591                           This latter information is only stored if requested.
     2301    12592                           Addendum 2/13/86: The format of the lower half of
     2302    12593                           the OP_SYS_CODE_ADR# -> SYSTYP word has been changed
     2303    12594                           so that the upper byte represents hardware type and
     2304    12595                           the lower byte represents operating system type, as
     2305    12596                           follows:
     2306    12597                              hardware codes (bits 18-26 of SYSTYP word)
     2307    12598                                 bits 18-22    RFU
     2308    12599                                 bit  23 = 1   Titan
     2309    12600                                 bit  24 = 1   RPM
     2310    12601                                 bit  25 = 1   DPS90
     2311    12602                                 bit  26 = 1   DPS88
     2312    12603                                 (bits 18-26 = 0 implies L66 or 8/70)
     2313    12604
     2314    12605                              operating system codes (bits 27-35 of SYSTYP word)
     2315    12606                                 bits 27-30    RFU
     2316    12607                                 bit  31 = 1   FTS
     2317    12608                                 bit  32 = 1   GCOS-8
     2318    12609                                 bit  33 = 1   GCOS-3
     2319    12610                                 bit  34 = 1   Multics
     2320    12611                                 bit  35 = 1   CP-6
     2321    12612        */
     2322    12613
     2323    12614    1   TOP$MME_POINIT: PROC (MME_INSTR$,RETURN_DELTA) ;

  12614  7 003772   200010 741300       TOP$MME_POI* STX1  ! @RETURN_DELTA+2,,AUTO
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:389  

     2324    12615
     2325    12616    2      DCL BOUNDS SBIN HALF HALIGNED ;
     2326    12617    2      DCL MME_INSTR$ PTR ALIGNED ;
     2327    12618    2      DCL PARAMETER UBIN WORD BASED ALIGNED ;
     2328    12619    2      DCL 1 PARAMETER_ BASED ALIGNED,
     2329    12620    2            2 UPPER# UBIN HALF UNAL,
     2330    12621    2            2 LOWER# UBIN HALF UNAL ;
     2331    12622    2      DCL 1 PARAMETER_BYTE BASED ALIGNED,
     2332    12623    2            2 BYTE0 SBIN BYTE UNAL,
     2333    12624    2            2 BYTE1 SBIN BYTE UNAL,
     2334    12625    2            2 BYTE2 SBIN BYTE UNAL,
     2335    12626    2            2 BYTE3 SBIN BYTE UNAL ;
     2336    12627    2      DCL PARAMETER_BIT BIT (36) BASED ALIGNED ;
     2337    12628    2      DCL PARAMETER$ PTR ALIGNED ;
     2338    12629    2      DCL 1 POINIT BASED ALIGNED,
     2339    12630    2            2 * BIT (36) ALIGNED,
     2340    12631    2            2 WWFLAG_ADR# UBIN HALF HALIGNED,
     2341    12632    2            2 OP_SYS_CODE_ADR# UBIN HALF HALIGNED,
     2342    12633    2            2 LSTLOC_ADR# UBIN HALF HALIGNED,
     2343    12634    2            2 * BIT (18) HALIGNED,
     2344    12635    2            2 TBWRK_ADR# UBIN HALF HALIGNED,
     2345    12636    2            2 * BIT (18) HALIGNED,
     2346    12637    2            2 TDIOC_ADR# UBIN HALF HALIGNED,
     2347    12638    2            2 * BIT (18) HALIGNED,
     2348    12639    2            2 WRADD_ADR# UBIN HALF HALIGNED,
     2349    12640    2            2 * BIT (18) HALIGNED,
     2350    12641    2            2 CVTTBL_ADR# UBIN HALF HALIGNED,
     2351    12642    2            2 * BIT (18) HALIGNED,
     2352    12643    2            2 MMEXEC_ADR# UBIN HALF HALIGNED,
     2353    12644    2            2 * BIT (18) HALIGNED,
     2354    12645    2            2 MINTR# UBIN HALF HALIGNED,
     2355    12646    2            2 * BIT (18) HALIGNED,
     2356    12647    2            2 CRACF0# UBIN HALF HALIGNED,
     2357    12648    2            2 * BIT (18) HALIGNED ;
     2358    12649    2      DCL RETURN_DELTA SBIN HALF HALIGNED ;
     2359    12650           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:390  
     2360    12651        /* Code */
     2361    12652
     2362    12653    2      IF MME_INSTR$->POINIT.OP_SYS_CODE_ADR# ~= 0

  12653  7 003773   200011 470500                    LDP0    @MME_INSTR$,,AUTO
         7 003774   000000 471500                    LDP1    0,,PR0
         7 003775   100001 720100                    LXL0    1,,PR1
         7 003776   004030 600000 7                  TZE     s:12666

     2363    12654    3      THEN DO ;

     2364    12655    3              PARAMETER$ = PINCRW (IS$, MME_INSTR$->POINIT.OP_SYS_CODE_ADR#) ;

  12655  7 003777   000000 636010                    EAQ     0,X0
         7 004000   000000 036000 6                  ADLQ    FPTN_
         7 004001   200014 756100                    STQ     PARAMETER$,,AUTO

     2365    12656    3              PARAMETER$->PARAMETER = 1 ;

  12656  7 004002   000001 235007                    LDA     1,DL
         7 004003   200014 473500                    LDP3    PARAMETER$,,AUTO
         7 004004   300000 755100                    STA     0,,PR3

     2366    12657    4              DO CASE (TOT$ECP.BOOT_CPU_TYPE) ;

  12657  7 004005   000015 236000 xsym               LDQ     TOT$ECP+13
         7 004006   000011 772000                    QRL     9
         7 004007   000777 376007                    ANQ     511,DL
         7 004010   000004 136007                    SBLQ    4,DL
         7 004011   000004 116007                    CMPQ    4,DL
         7 004012   004014 602006 7                  TNC     s:12657+7,QL
         7 004013   004030 710000 7                  TRA     s:12666
         7 004014   004020 710000 7                  TRA     s:12659
         7 004015   004020 710000 7                  TRA     s:12659
         7 004016   004023 710000 7                  TRA     s:12661
         7 004017   004026 710000 7                  TRA     s:12663

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:391  
     2367    12658    4                 CASE (%DPS90#,%DPS90XA#) ;

     2368    12659    4                    PARAMETER$ -> PARAMETER_BYTE.BYTE2 = 2;

  12659  7 004020   002000 236007                    LDQ     1024,DL
         7 004021   300000 552110                    STBQ    0,'10'O,PR3
         7 004022   004030 710000 7                  TRA     s:12666

     2369    12660    4                 CASE (%DPS8000#) ;

     2370    12661    4                    PARAMETER$ -> PARAMETER_BYTE.BYTE2 = 4;

  12661  7 004023   004000 236007                    LDQ     2048,DL
         7 004024   300000 552110                    STBQ    0,'10'O,PR3
         7 004025   004030 710000 7                  TRA     s:12666

     2371    12662    4                 CASE (%TITAN#) ;

     2372    12663    4                    PARAMETER$ -> PARAMETER_BYTE.BYTE2 = 8;

  12663  7 004026   010000 236007                    LDQ     4096,DL
         7 004027   300000 552110                    STBQ    0,'10'O,PR3

     2373    12664    4              END /* CASE */ ;

     2374    12665    3           END /* THEN */ ;

     2375    12666    2      PARAMETER$ = PINCRW (IS$, MME_INSTR$ -> POINIT.WWFLAG_ADR#) ;

  12666  7 004030   000000 471500                    LDP1    0,,PR0
         7 004031   100001 220100                    LDX0    1,,PR1
         7 004032   000000 636010                    EAQ     0,X0
         7 004033   000000 036000 6                  ADLQ    FPTN_
         7 004034   200014 756100                    STQ     PARAMETER$,,AUTO

     2376    12667    2      PARAMETER$ -> PARAMETER = 0 ;

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:392  
  12667  7 004035   200014 473500                    LDP3    PARAMETER$,,AUTO
         7 004036   300000 450100                    STZ     0,,PR3

     2377    12668    2      BOUNDS = (B$JIT$ -> B$JIT.TDP - 64) * 1024 ;

  12668  7 004037   000000 471400 xsym               LDP1    B$JIT$
         7 004040   100204 236100                    LDQ     132,,PR1
         7 004041   000010 772000                    QRL     8
         7 004042   000036 376000 8                  ANQ     30
         7 004043   600000 620006                    EAX0    -65536,QL
         7 004044   200013 740100                    STX0    BOUNDS,,AUTO

     2378    12669    2      PARAMETER$ = PINCRW (IS$, MME_INSTR$ -> POINIT.LSTLOC_ADR#) ;

  12669  7 004045   000000 474500                    LDP4    0,,PR0
         7 004046   400002 221100                    LDX1    2,,PR4
         7 004047   000000 636011                    EAQ     0,X1
         7 004050   000000 036000 6                  ADLQ    FPTN_
         7 004051   200014 756100                    STQ     PARAMETER$,,AUTO

     2379    12670    2      PARAMETER$ -> PARAMETER_.UPPER# = BOUNDS ;

  12670  7 004052   200014 473500                    LDP3    PARAMETER$,,AUTO
         7 004053   300000 740100                    STX0    0,,PR3

     2380    12671    2      PARAMETER$ = PINCRW (IS$, MME_INSTR$ -> POINIT.TBWRK_ADR#) ;

  12671  7 004054   000000 471500                    LDP1    0,,PR0
         7 004055   100003 221100                    LDX1    3,,PR1
         7 004056   000000 636011                    EAQ     0,X1
         7 004057   000000 036000 6                  ADLQ    FPTN_
         7 004060   200014 756100                    STQ     PARAMETER$,,AUTO

     2381    12672    2      PARAMETER$ -> PARAMETER = 0 ;

  12672  7 004061   200014 473500                    LDP3    PARAMETER$,,AUTO
         7 004062   300000 450100                    STZ     0,,PR3
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:393  

     2382    12673    2      PARAMETER$ = PINCRW (IS$, MME_INSTR$ -> POINIT.TDIOC_ADR#) ;

  12673  7 004063   000000 471500                    LDP1    0,,PR0
         7 004064   100004 221100                    LDX1    4,,PR1
         7 004065   000000 636011                    EAQ     0,X1
         7 004066   000000 036000 6                  ADLQ    FPTN_
         7 004067   200014 756100                    STQ     PARAMETER$,,AUTO

     2383    12674    3      DO CASE (TOT$ECP.BOOT_CPU_TYPE) ;

  12674  7 004070   000015 236000 xsym               LDQ     TOT$ECP+13
         7 004071   000011 772000                    QRL     9
         7 004072   000777 376007                    ANQ     511,DL
         7 004073   000004 136007                    SBLQ    4,DL
         7 004074   000003 116007                    CMPQ    3,DL
         7 004075   004077 602006 7                  TNC     s:12674+7,QL
         7 004076   004111 710000 7                  TRA     s:12680
         7 004077   004102 710000 7                  TRA     s:12676
         7 004100   004102 710000 7                  TRA     s:12676
         7 004101   004106 710000 7                  TRA     s:12678

     2384    12675    3         CASE (%DPS90#,%DPS90XA#) ;

     2385    12676    3            PARAMETER$ -> PARAMETER = 1 ;

  12676  7 004102   000001 235007                    LDA     1,DL
         7 004103   200014 473500                    LDP3    PARAMETER$,,AUTO
         7 004104   300000 755100                    STA     0,,PR3
         7 004105   004122 710000 7                  TRA     s:12685

     2386    12677    3         CASE (%DPS8000#) ;

     2387    12678    3            PARAMETER$ -> PARAMETER = 0 ;

  12678  7 004106   200014 473500                    LDP3    PARAMETER$,,AUTO
         7 004107   300000 450100                    STZ     0,,PR3
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:394  
         7 004110   004122 710000 7                  TRA     s:12685

     2388    12679    3         CASE (ELSE) ;

     2389    12680    3            PARAMETER$ -> PARAMETER_BYTE.BYTE0 = -1 ;

  12680  7 004111   200014 473500                    LDP3    PARAMETER$,,AUTO
         7 004112   777000 236003                    LDQ     -512,DU
         7 004113   300000 552140                    STBQ    0,'40'O,PR3

     2390    12681    3            PARAMETER$ -> PARAMETER_BYTE.BYTE1 = -1 ;

  12681  7 004114   000777 236003                    LDQ     511,DU
         7 004115   300000 552120                    STBQ    0,'20'O,PR3

     2391    12682    3            PARAMETER$ -> PARAMETER_BYTE.BYTE2 = -1 ;

  12682  7 004116   777000 236007                    LDQ     -512,DL
         7 004117   300000 552110                    STBQ    0,'10'O,PR3

     2392    12683    3            PARAMETER$ -> PARAMETER_BYTE.BYTE3 = -1 ;

  12683  7 004120   000777 236007                    LDQ     511,DL
         7 004121   300000 552104                    STBQ    0,'04'O,PR3

     2393    12684    3      END /* DO CASE */ ;

     2394    12685    2      TOT$ECP.SUBEXEC.WRAPUP$ = PINCRW (IS$, MME_INSTR$ -> POINIT.WRADD_ADR#) ;

  12685  7 004122   000000 471500                    LDP1    0,,PR0
         7 004123   100005 221100                    LDX1    5,,PR1
         7 004124   000000 636011                    EAQ     0,X1
         7 004125   000000 036000 6                  ADLQ    FPTN_
         7 004126   000013 756000 xsym               STQ     TOT$ECP+11

     2395    12686    2      PARAMETER$ = PINCRW (IS$, MME_INSTR$ -> POINIT.MMEXEC_ADR#) ;

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:395  
  12686  7 004127   000000 471500                    LDP1    0,,PR0
         7 004130   100007 221100                    LDX1    7,,PR1
         7 004131   000000 636011                    EAQ     0,X1
         7 004132   000000 036000 6                  ADLQ    FPTN_
         7 004133   200014 756100                    STQ     PARAMETER$,,AUTO

     2396    12687    2      PARAMETER$ -> PARAMETER_BIT = TOT$TOLTS.LINK_DATE.BCD ;

  12687  7 004134   000001 235000 xsym               LDA     TOT$TOLTS+1
         7 004135   000002 236000 xsym               LDQ     TOT$TOLTS+2
         7 004136   000022 773000                    LRL     18
         7 004137   000027 376000 xsym               ANQ     B_VECTNIL+23
         7 004140   200014 473500                    LDP3    PARAMETER$,,AUTO
         7 004141   300000 756100                    STQ     0,,PR3

     2397    12688    2      RETURN_DELTA = 10 ;

  12688  7 004142   200012 471500                    LDP1    @RETURN_DELTA,,AUTO
         7 004143   000100 101400                    MRL     fill='000'O
         7 004144   000014 000004 xsym               ADSC9   B_VECTNIL+12             cn=0,n=4
         7 004145   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2

     2398    12689    2      RETURN ;

  12689  7 004146   200010 221300                    LDX1  ! @RETURN_DELTA+2,,AUTO
         7 004147   000001 702211                    TSX2  ! 1,X1

     2399    12690
     2400    12691    2   END TOP$MME_POINIT ;
     2401    12692        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:396  
     2402    12693        /*I* NAME:         TOP$MME_PRTRAN
     2403    12694             CALL:         CALL TOP$MME_PRTRAN(P_MMEWD1,P_X1REG,P_AREG,RETURN_DELTA) ;
     2404    12695             INTERFACE:    MATCH_SCT_ADR
     2405    12696             INPUT:        P_MMEWD1(bits 0-17) = address of buffer in POLTS
     2406    12697                           P_X1REG = SCT address
     2407    12698             OUTPUT:       RETURN_DELTA = 3
     2408    12699             DESCRIPTION:  Calls MATCH_SCT_ADR to establish TCX, the index into
     2409    12700                           TOP$TCP for the page using the SCT address
     2410    12701                           passed in P_X1REG.  The pointer TRAIN_BFR$ is built
     2411    12702                           to point to the receiving buffer in POLTS ;
     2412    12703                           TRAIN_BFR is the based structure for the buffer.
     2413    12704                           The printer train image buffer which was stored
     2414    12705                           into TOP$TCP by M$TDOPEN is then moved into
     2415    12706                           POLTS.
     2416    12707        */
     2417    12708        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:397  
     2418    12709    1   TOP$MME_PRTRAN: PROC (P_MMEWD1,P_X1REG,P_AREG,RETURN_DELTA) ;

  12709  7 004150   200010 741300       TOP$MME_PRT* STX1  ! @RETURN_DELTA+2,,AUTO

     2419    12710
     2420    12711    2      DCL TCX UBIN (36) ;
     2421    12712    2      DCL P_MMEWD1 UBIN (36) ;
     2422    12713    2      DCL 1 MME_W1 REDEF P_MMEWD1,
     2423    12714    2            2 ADR UBIN (18) UNAL,
     2424    12715    2            2 * UBIN (18) UNAL ;
     2425    12716    2      DCL P_X1REG  UBIN (18) HALIGNED ;
     2426    12717    2      DCL P_AREG  UBIN (36) ;
     2427    12718    2      DCL RETURN_DELTA SBIN HALF ;
     2428    12719    2      DCL TRAIN_BFR$ PTR ;
     2429    12720    2      DCL TRAIN_BFR CHAR (288) BASED ALIGNED ;
     2430    12721
     2431    12722        /* Code */
     2432    12723
     2433    12724    2      CALL MATCH_SCT_ADR (P_X1REG, TCX) ;

  12724  7 004151   200015 630500                    EPPR0   TCX,,AUTO
         7 004152   200026 450500                    STP0    WORK$,,AUTO
         7 004153   200012 236100                    LDQ     @P_X1REG,,AUTO
         7 004154   200025 756100                    STQ     @REASON,,AUTO
         7 004155   012567 701000 7                  TSX1    MATCH_SCT_ADR
         7 004156   000000 011000                    NOP     0

     2434    12725    2      TRAIN_BFR$ = PINCRW (IS$, MME_W1.ADR) ;

  12725  7 004157   200011 470500                    LDP0    @P_MMEWD1,,AUTO
         7 004160   000000 220100                    LDX0    0,,PR0
         7 004161   000000 636010                    EAQ     0,X0
         7 004162   000000 036000 6                  ADLQ    FPTN_
         7 004163   200016 756100                    STQ     TRAIN_BFR$,,AUTO

     2435    12726    2      TRAIN_BFR$-> TRAIN_BFR = TOP$TCP.BFR.TRAIN_IMAGE(TCX) ;

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:398  
  12726  7 004164   200015 236100                    LDQ     TCX,,AUTO
         7 004165   001220 402007                    MPY     656,DL
         7 004166   000003 471400 xsym               LDP1    TOT$DMC+3
         7 004167   200016 473500                    LDP3    TRAIN_BFR$,,AUTO
         7 004170   040100 100506                    MLR     fill='040'O
         7 004171   100024 000440                    ADSC9   20,Q,PR1                 cn=0,n=288
         7 004172   300000 000440                    ADSC9   0,,PR3                   cn=0,n=288

     2436    12727    2      RETURN_DELTA = 3 ;

  12727  7 004173   000003 220003                    LDX0    3,DU
         7 004174   200014 471500                    LDP1    @RETURN_DELTA,,AUTO
         7 004175   100000 740100                    STX0    0,,PR1

     2437    12728    2      RETURN ;

  12728  7 004176   200010 221300                    LDX1  ! @RETURN_DELTA+2,,AUTO
         7 004177   000001 702211                    TSX2  ! 1,X1

     2438    12729
     2439    12730    2   END TOP$MME_PRTRAN ;
     2440    12731        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:399  
     2441    12732        /*I* NAME:         TOP$MME_RELEAS
     2442    12733             CALL:         CALL TOP$MME_RELEAS(P_X7REG,P_X0REG,P_X1REG,P_X2REG,
     2443    12734                                P_X4REG,P_X6REG,,P_AREG,P_QREG,RETURN_DELTA) ;
     2444    12735             INTERFACE:    MATCH_SCT_ADR
     2445    12736                           RELEASE_DEVICE
     2446    12737             INPUT:        P_X1REG = SCT address
     2447    12738                           P_X7REG(bits 0-5) = designator for release
     2448    12739                               = .00 for POLTS
     2449    12740                               = .51 for MDRs (a BCD "M")
     2450    12741                               = .23 for ITRs (a BCD "C")
     2451    12742             OUTPUT:       RETURN_DELTA = 1 for error return
     2452    12743                           RETURN_DELTA = 2 for good return
     2453    12744             DESCRIPTION:  MATCH_SCT_ADR  is called to search TOP$TCP for
     2454    12745                           the SCT address passed and establish TCX, the index
     2455    12746                           into TOP$TCP for the test page.
     2456    12747
     2457    12748                           Using RELEASE_ID.TYPE, one of several routines
     2458    12749                           for releasing the peripheral is called, depending
     2459    12750                           on the test type.  For the time being, all
     2460    12751                           releasing is done through the same subroutine,
     2461    12752                           RELEASE_DEVICE.
     2462    12753        */
     2463    12754        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:400  
     2464    12755    1   TOP$MME_RELEAS: PROC (P_X7REG,P_X0REG,P_X1REG,P_X2REG,P_X4REG,

  12755  7 004200   200010 741300       TOP$MME_REL* STX1  ! @RETURN_DELTA+2,,AUTO

     2465    12756    1              P_X6REG,P_AREG,P_QREG,RETURN_DELTA) ;
     2466    12757
     2467    12758    2      DCL TCX UBIN WORD ALIGNED ;
     2468    12759    2      DCL P_X0REG UBIN HALF HALIGNED ;
     2469    12760    2      DCL P_X1REG UBIN HALF HALIGNED ;
     2470    12761    2      DCL P_X2REG UBIN HALF HALIGNED ;
     2471    12762    2      DCL P_X4REG UBIN HALF HALIGNED ;
     2472    12763    2      DCL P_X6REG UBIN HALF HALIGNED ;
     2473    12764    2      DCL P_X7REG UBIN HALF HALIGNED ;
     2474    12765    2      DCL 1 RELEASE_ID REDEF P_X7REG HALIGNED,
     2475    12766    2            2 TYPE UBIN (6) UNAL,
     2476    12767    2            2 *    UBIN (12) UNAL;
     2477    12768    2      DCL P_AREG UBIN WORD ALIGNED ;
     2478    12769    2      DCL P_QREG UBIN WORD ALIGNED ;
     2479    12770    2      DCL RETURN_DELTA SBIN HALF ;
     2480    12771
     2481    12772        /* Code */
     2482    12773
     2483    12774    2      CALL MATCH_SCT_ADR (P_X1REG, TCX) ;

  12774  7 004201   200022 630500                    EPPR0   TCX,,AUTO
         7 004202   200026 450500                    STP0    WORK$,,AUTO
         7 004203   200013 236100                    LDQ     @P_X1REG,,AUTO
         7 004204   200025 756100                    STQ     @REASON,,AUTO
         7 004205   012567 701000 7                  TSX1    MATCH_SCT_ADR
         7 004206   000000 011000                    NOP     0

     2484    12775    3      DO CASE (RELEASE_ID.TYPE) ;

  12775  7 004207   200011 470500                    LDP0    @P_X7REG,,AUTO
         7 004210   003100 061500                    CSR     bolr='003'O
         7 004211   000000 000006                    BDSC    0,,PR0                   by=0,bit=0,n=6
         7 004212   205740 000022                    BDSC    BCD_BUF_INX+1,,AUTO      by=0,bit=0,n=18
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:401  
         7 004213   205740 220100                    LDX0    BCD_BUF_INX+1,,AUTO
         7 004214   000072 100003                    CMPX0   58,DU
         7 004215   004217 602010 7                  TNC     s:12775+8,X0
         7 004216   004324 710000 7                  TRA     s:12783
         7 004217   004311 710000 7                  TRA     s:12777
         7 004220   004324 710000 7                  TRA     s:12783
         7 004221   004324 710000 7                  TRA     s:12783
         7 004222   004324 710000 7                  TRA     s:12783
         7 004223   004324 710000 7                  TRA     s:12783
         7 004224   004324 710000 7                  TRA     s:12783
         7 004225   004324 710000 7                  TRA     s:12783
         7 004226   004324 710000 7                  TRA     s:12783
         7 004227   004324 710000 7                  TRA     s:12783
         7 004230   004324 710000 7                  TRA     s:12783
         7 004231   004324 710000 7                  TRA     s:12783
         7 004232   004324 710000 7                  TRA     s:12783
         7 004233   004324 710000 7                  TRA     s:12783
         7 004234   004324 710000 7                  TRA     s:12783
         7 004235   004324 710000 7                  TRA     s:12783
         7 004236   004324 710000 7                  TRA     s:12783
         7 004237   004324 710000 7                  TRA     s:12783
         7 004240   004324 710000 7                  TRA     s:12783
         7 004241   004311 710000 7                  TRA     s:12777
         7 004242   004311 710000 7                  TRA     s:12777
         7 004243   004311 710000 7                  TRA     s:12777
         7 004244   004311 710000 7                  TRA     s:12777
         7 004245   004324 710000 7                  TRA     s:12783
         7 004246   004324 710000 7                  TRA     s:12783
         7 004247   004324 710000 7                  TRA     s:12783
         7 004250   004324 710000 7                  TRA     s:12783
         7 004251   004324 710000 7                  TRA     s:12783
         7 004252   004324 710000 7                  TRA     s:12783
         7 004253   004324 710000 7                  TRA     s:12783
         7 004254   004324 710000 7                  TRA     s:12783
         7 004255   004324 710000 7                  TRA     s:12783
         7 004256   004324 710000 7                  TRA     s:12783
         7 004257   004324 710000 7                  TRA     s:12783
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:402  
         7 004260   004311 710000 7                  TRA     s:12777
         7 004261   004324 710000 7                  TRA     s:12783
         7 004262   004324 710000 7                  TRA     s:12783
         7 004263   004324 710000 7                  TRA     s:12783
         7 004264   004324 710000 7                  TRA     s:12783
         7 004265   004324 710000 7                  TRA     s:12783
         7 004266   004324 710000 7                  TRA     s:12783
         7 004267   004324 710000 7                  TRA     s:12783
         7 004270   004311 710000 7                  TRA     s:12777
         7 004271   004324 710000 7                  TRA     s:12783
         7 004272   004324 710000 7                  TRA     s:12783
         7 004273   004324 710000 7                  TRA     s:12783
         7 004274   004324 710000 7                  TRA     s:12783
         7 004275   004324 710000 7                  TRA     s:12783
         7 004276   004324 710000 7                  TRA     s:12783
         7 004277   004324 710000 7                  TRA     s:12783
         7 004300   004324 710000 7                  TRA     s:12783
         7 004301   004324 710000 7                  TRA     s:12783
         7 004302   004311 710000 7                  TRA     s:12777
         7 004303   004324 710000 7                  TRA     s:12783
         7 004304   004324 710000 7                  TRA     s:12783
         7 004305   004311 710000 7                  TRA     s:12777
         7 004306   004324 710000 7                  TRA     s:12783
         7 004307   004324 710000 7                  TRA     s:12783
         7 004310   004311 710000 7                  TRA     s:12777

     2485    12776    3         CASE (%POLT, %MTC, %MPC, %MTG, %MDC, %MDR, %MMT, %MFC, %MDS, %TMD) ;

     2486    12777    3            CALL RELEASE_DEVICE(TCX) WHENALTRETURN

  12777  7 004311   200022 631500                    EPPR1   TCX,,AUTO
         7 004312   200025 451500                    STP1    @REASON,,AUTO
         7 004313   004346 701000 7                  TSX1    RELEASE_DEVICE
         7 004314   004316 702000 7                  TSX2    s:12779
         7 004315   004323 710000 7                  TRA     s:12780+2

     2487    12778    4                 DO ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:403  

     2488    12779    4                    RETURN_DELTA = 1 ;

  12779  7 004316   000001 220003                    LDX0    1,DU
         7 004317   200021 470500                    LDP0    @RETURN_DELTA,,AUTO
         7 004320   000000 740100                    STX0    0,,PR0

     2489    12780    4                    RETURN ;

  12780  7 004321   200010 221300                    LDX1  ! @RETURN_DELTA+2,,AUTO
         7 004322   000001 702211                    TSX2  ! 1,X1
         7 004323   004341 710000 7                  TRA     s:12788

     2490    12781    4                 END ;
     2491    12782    3         CASE (ELSE) ;

     2492    12783    3            TOP_ERROR_CODE.ERR# = %E$BADREL ;

  12783  7 004324   000173 236000 5                  LDQ     TOP_ERROR_CODE
         7 004325   000006 376000 8                  ANQ     6
         7 004326   003240 276007                    ORQ     1696,DL
         7 004327   000173 756000 5                  STQ     TOP_ERROR_CODE

     2493    12784    3            CALL TOX$WARN (TOP_ERROR_CODE) ;

  12784  7 004330   000007 630400 8                  EPPR0   7
         7 004331   000017 631400 xsym               EPPR1   B_VECTNIL+15
         7 004332   000000 701000 xent               TSX1    TOX$WARN
         7 004333   000000 011000                    NOP     0

     2494    12785    3            RETURN_DELTA = 1 ;

  12785  7 004334   000001 220003                    LDX0    1,DU
         7 004335   200021 470500                    LDP0    @RETURN_DELTA,,AUTO
         7 004336   000000 740100                    STX0    0,,PR0

     2495    12786    3            RETURN ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:404  

  12786  7 004337   200010 221300                    LDX1  ! @RETURN_DELTA+2,,AUTO
         7 004340   000001 702211                    TSX2  ! 1,X1

     2496    12787    3      END /* CASE */ ;

     2497    12788    2      RETURN_DELTA = 2 ;

  12788  7 004341   000002 220003                    LDX0    2,DU
         7 004342   200021 470500                    LDP0    @RETURN_DELTA,,AUTO
         7 004343   000000 740100                    STX0    0,,PR0

     2498    12789    2      RETURN ;

  12789  7 004344   200010 221300                    LDX1  ! @RETURN_DELTA+2,,AUTO
         7 004345   000001 702211                    TSX2  ! 1,X1

     2499    12790
     2500    12791        /* END TOP$MME_RELEAS */
     2501    12792        /*I* NAME:         RELEASE_DEVICE
     2502    12793             CALL:         CALL RELEASE_DEVICE(TCX) ;
     2503    12794             INTERFACE:    M$TDCLOSE
     2504    12795             INPUT:        TCX, the index into TOP$TCP  for the page.
     2505    12796             OUTPUT:
     2506    12797             DESCRIPTION:  Fetches the DCB number for the page from TOP$TCP
     2507    12798                           and inserts into TDCLOSE_FPT.V.DCB#, and calls
     2508    12799                           M$TDCLOSE to return the peripheral to CP6.  CP6
     2509    12800                           will hereafter not honor any T&D I/O to the device.
     2510    12801                           However, the device will still remain partitioned
     2511    12802                           SYSCON must be used to return the device to the  i
     2512    12803                           system.
     2513    12804
     2514    12805                           The TOP$TCP entry for the page is initialized,
     2515    12806                           as are all of the pseudo configuration tables,
     2516    12807                           TOP$SCT.DV,TOP$SCT.CN and MPC.
     2517    12808        */
     2518    12809        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:405  
     2519    12810    2   RELEASE_DEVICE: PROC (TCX) ALTRET ;

  12810  7 004346   200024 741300       RELEASE_DEV* STX1  ! @LIST$,,AUTO

     2520    12811
     2521    12812    3      DCL TCX UBIN WORD ALIGNED ;
     2522    12813
     2523    12814        /* Code */
     2524    12815
     2525    12816    3      TDCLOSE_FPT.V.DCB# = TOP$TCP.DCB#(TCX) ;

  12816  7 004347   200025 470500                    LDP0    @TCX,,AUTO
         7 004350   000000 236100                    LDQ     0,,PR0
         7 004351   000122 402007                    MPY     82,DL
         7 004352   000001 736000                    QLS     1
         7 004353   000003 471400 xsym               LDP1    TOT$DMC+3
         7 004354   100007 720106                    LXL0    7,QL,PR1
         7 004355   000176 740000 5                  STX0    TDCLOSE_FPT+2

     2526    12817    3      CALL M$TDCLOSE (TDCLOSE_FPT) WHENALTRETURN

  12817  7 004356   000174 630400 5                  EPPR0   TDCLOSE_FPT
         7 004357   470003 713400                    CLIMB   alt,+28675
         7 004360   400000 401760                    pmme    nvectors=1
         7 004361   004363 702000 7                  TSX2    s:12819
         7 004362   004375 710000 7                  TRA     s:12822

     2527    12818    4           DO ;

     2528    12819    4              CALL TOX$WARN (B$TCB$->B$TCB.ALT$->B$ALT.ERR) ;

  12819  7 004363   000000 470400 xsym               LDP0    B$TCB$
         7 004364   000000 471500                    LDP1    0,,PR0
         7 004365   100102 633500                    EPPR3   66,,PR1
         7 004366   205740 453500                    STP3    BCD_BUF_INX+1,,AUTO
         7 004367   205740 630500                    EPPR0   BCD_BUF_INX+1,,AUTO
         7 004370   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:406  
         7 004371   000000 701000 xent               TSX1    TOX$WARN
         7 004372   000000 011000                    NOP     0

     2529    12820    4              ALTRETURN ;

  12820  7 004373   200024 221300                    LDX1  ! @LIST$,,AUTO
         7 004374   000000 702211                    TSX2  ! 0,X1

     2530    12821    4           END ;
     2531    12822    3      TOP$TCP(TCX) = '0'B ;

  12822  7 004375   200025 470500                    LDP0    @TCX,,AUTO
         7 004376   000000 236100                    LDQ     0,,PR0
         7 004377   000122 402007                    MPY     82,DL
         7 004400   000003 736000                    QLS     3
         7 004401   000003 471400 xsym               LDP1    TOT$DMC+3
         7 004402   000106 100400                    MLR     fill='000'O
         7 004403   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         7 004404   100000 001220                    ADSC9   0,Q,PR1                  cn=0,n=656

     2532    12823    3      TOP$SCT.DV(TCX) = '0'B ;

  12823  7 004405   000000 235100                    LDA     0,,PR0
         7 004406   000003 735000                    ALS     3
         7 004407   000002 735000                    ALS     2
         7 004410   000005 100400                    MLR     fill='000'O
         7 004411   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         7 004412   000004 000020 xsym               ADSC9   TOP$SCT+4,A              cn=0,n=16

     2533    12824    3      TOP$SCT.CN(TCX) = '0'B ;

  12824  7 004413   000000 235100                    LDA     0,,PR0
         7 004414   000003 735000                    ALS     3
         7 004415   000002 735000                    ALS     2
         7 004416   000005 100400                    MLR     fill='000'O
         7 004417   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         7 004420   000000 000020 xsym               ADSC9   TOP$SCT,A                cn=0,n=16
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:407  

     2534    12825    3      MPC(TCX) = '0'B ;

  12825  7 004421   000000 235100                    LDA     0,,PR0
         7 004422   000001 735000                    ALS     1
         7 004423   000003 735000                    ALS     3
         7 004424   000005 100400                    MLR     fill='000'O
         7 004425   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         7 004426   000133 000020 5                  ADSC9   MPC,A                    cn=0,n=16

     2535    12826    3      RETURN ;

  12826  7 004427   200024 221300                    LDX1  ! @LIST$,,AUTO
         7 004430   000001 702211                    TSX2  ! 1,X1

     2536    12827
     2537    12828    3   END RELEASE_DEVICE ;
     2538    12829    2   END TOP$MME_RELEAS ;
     2539    12830        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:408  
     2540    12831        /*I* NAME:         TOP$MME_RELLNK
     2541    12832             CALL:         CALL TOP$MME_RELLNK(P_AREG,P_QREG,P_X1REG,P_X3REG,
     2542    12833                                P_X4REG,RETURN_DELTA) ;
     2543    12834             INTERFACE:
     2544    12835             INPUT:
     2545    12836             OUTPUT ;
     2546    12837             DESCRIPTION:  Not used in CP6.
     2547    12838        */
     2548    12839
     2549    12840    1   TOP$MME_RELLNK: PROC (P_AREG,P_QREG,P_X1REG,P_X3REG,P_X4REG,RETURN_DELTA) ;

  12840  7 004431   200010 741300       TOP$MME_REL* STX1  ! @RETURN_DELTA+2,,AUTO

     2550    12841
     2551    12842    2      DCL P_AREG       UBIN (36) ;
     2552    12843    2      DCL P_QREG       UBIN (36) ALIGNED ;
     2553    12844    2      DCL P_X1REG      UBIN (18) HALIGNED ;
     2554    12845    2      DCL P_X3REG      UBIN (18) HALIGNED ;
     2555    12846    2      DCL P_X4REG      UBIN (18) HALIGNED ;
     2556    12847    2      DCL RETURN_DELTA SBIN HALF ;
     2557    12848
     2558    12849        /* Code */
     2559    12850
     2560    12851    2      RETURN_DELTA = 1 ;

  12851  7 004432   000001 220003                    LDX0    1,DU
         7 004433   200016 470500                    LDP0    @RETURN_DELTA,,AUTO
         7 004434   000000 740100                    STX0    0,,PR0

     2561    12852    2      RETURN ;

  12852  7 004435   200010 221300                    LDX1  ! @RETURN_DELTA+2,,AUTO
         7 004436   000001 702211                    TSX2  ! 1,X1

     2562    12853
     2563    12854    2   END TOP$MME_RELLNK ;
     2564    12855        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:409  
     2565    12856        /*I* NAME:         TOP$MME_RELMPC
     2566    12857             CALL:         CALL TOP$MME_RELMPC(P_X1REG,RETURN_DELTA) ;
     2567    12858             INTERFACE:
     2568    12859             INPUT:
     2569    12860             OUTPUT:       RETURN_DELTA = 1
     2570    12861             DESCRIPTION:  Return of MPC in the CP6 environment is done by
     2571    12862                           M$TDCLOSE ; no special consideration is required.
     2572    12863        */
     2573    12864
     2574    12865    1   TOP$MME_RELMPC: PROC (P_X1REG,RETURN_DELTA) ;

  12865  7 004437   200010 741300       TOP$MME_REL* STX1  ! @RETURN_DELTA+2,,AUTO

     2575    12866
     2576    12867    2      DCL P_X1REG  UBIN (18) HALIGNED ;
     2577    12868    2      DCL RETURN_DELTA SBIN HALF ;
     2578    12869
     2579    12870        /* Code */
     2580    12871
     2581    12872    2      RETURN_DELTA = 1 ;

  12872  7 004440   000001 220003                    LDX0    1,DU
         7 004441   200012 470500                    LDP0    @RETURN_DELTA,,AUTO
         7 004442   000000 740100                    STX0    0,,PR0

     2582    12873    2      RETURN ;

  12873  7 004443   200010 221300                    LDX1  ! @RETURN_DELTA+2,,AUTO
         7 004444   000001 702211                    TSX2  ! 1,X1

     2583    12874
     2584    12875    2   END TOP$MME_RELMPC ;
     2585    12876        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:410  
     2586    12877        /*I* NAME:         TOP$MME_RLSPAT
     2587    12878             CALL:         CALL TOP$MME_RLSPAT(P_X4REG,RETURN_DELTA) ;
     2588    12879             INTERFACE:
     2589    12880             INPUT:
     2590    12881             OUTPUT:       RETURN_DELTA = 1
     2591    12882             DESCRIPTION:  There is no PAT to release in the CP6 environment.
     2592    12883        */
     2593    12884
     2594    12885    1   TOP$MME_RLSPAT: PROC (P_X4REG,RETURN_DELTA) ;

  12885  7 004445   200010 741300       TOP$MME_RLS* STX1  ! @RETURN_DELTA+2,,AUTO

     2595    12886
     2596    12887    2      DCL P_X4REG UBIN HALF HALIGNED ;
     2597    12888    2      DCL RETURN_DELTA SBIN HALF HALIGNED ;
     2598    12889
     2599    12890        /* Code */
     2600    12891
     2601    12892    2      RETURN_DELTA = 1 ;

  12892  7 004446   200012 470500                    LDP0    @RETURN_DELTA,,AUTO
         7 004447   000100 101400                    MRL     fill='000'O
         7 004450   000003 000004 xsym               ADSC9   B_VECTNIL+3              cn=0,n=4
         7 004451   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2

     2602    12893    2      RETURN ;

  12893  7 004452   200010 221300                    LDX1  ! @RETURN_DELTA+2,,AUTO
         7 004453   000001 702211                    TSX2  ! 1,X1

     2603    12894
     2604    12895    2   END TOP$MME_RLSPAT ;
     2605    12896        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:411  
     2606    12897        /*I* NAME:         TOP$MME_SCTCMP
     2607    12898             AUTHOR:       Scott S. Sheppard
     2608    12899             INTERFACE:    FIND_VACANT_ENTRY
     2609    12900                           GET_DEVICE_CODE
     2610    12901                           BUILD_TEST_CONTROL_ENTRY
     2611    12902                           BUILD_SCTWRK
     2612    12903             INPUT:        MME Word 1 (bits 0-17) = address of FICCDD word in subexec
     2613    12904                           MME Word 2 (bits 0-17) = address of SCTWRK buffer in subexec
     2614    12905                           X3 = three digit channel number if new format
     2615    12906                           Q  = passed along to BUILD_SCTWRK
     2616    12907             OUTPUT:       X2 = error code for slave mode subexec
     2617    12908                           RETURN_DELTA = 4 for good return
     2618    12909                                        = 5 for bad return
     2619    12910             DESCRIPTION:  MME  SCTCMP is  one of  the first  MME's done by a
     2620    12911                           subexecutive  following  a  new  test request on a
     2621    12912                           peripheral. It is even done before MME ALLOCR.  In
     2622    12913                           the GCOS world, it is intended to do a preliminary
     2623    12914                           check on whether a  peripheral can be allocated or
     2624    12915                           not.
     2625    12916
     2626    12917                           In   the  CP-6   implementation,  this   MME  will
     2627    12918                           associate  with a  particular test  page, a unique
     2628    12919                           set  of  pseudo  configuration  tables  and  set a
     2629    12920                           control  table, from  which the  test page will be
     2630    12921                           controlled  until it  terminates.  Also,  the CP-6
     2631    12922                           system provided configuration file is interrogated
     2632    12923                           at  this time  to determine  the peripheral device
     2633    12924                           code.
     2634    12925
     2635    12926                           The  following  pseudo  configuration  tables  are
     2636    12927                           associated  with the  test page,  one set per test
     2637    12928                           page, and can be  uniquely identified by the index
     2638    12929                           TCX (test control index):
     2639    12930
     2640    12931                             TOP$SCT.DV(TCX) = device SCT table
     2641    12932                             TOP$SCT.DN(TCX) = controller SCT table
     2642    12933                             MPC(TCX) = MPC table
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:412  
     2643    12934
     2644    12935                           These tables are not used by CP-6 or even based on
     2645    12936                           any of the  CP-6 peripheral control tables.  These
     2646    12937                           tables  exist just  for coexistence  with the GCOS
     2647    12938                           oriented Slave Mode Subexecutives.
     2648    12939
     2649    12940                           Important  control information  about each  of the
     2650    12941                           test pages which must be maintained as long as the
     2651    12942                           page is running is  kept in TOP$TCP, an 8
     2652    12943                           entry   table  indexed  into   by  TCX.   See  the
     2653    12944                           declaration  for   the  exact  field  definitions.
     2654    12945                           Presently,   TOP$TCP  is   used  by  both
     2655    12946                           TOP$POLTS  and TOM$MOLTS.  Thus,  it is defined in
     2656    12947                           the TOLTS include file, TOT_TOLTS_M, as a macro.
     2657    12948
     2658    12949                           FIND_VACANT_ENTRY  is called  to search  the ICCDD
     2659    12950                           field  in TOP$TCP to  find an entry which
     2660    12951                           is not  assigned, i.e., is zero.   This entry will
     2661    12952                           be  assigned  to  this  test  page,  and  will  be
     2662    12953                           uniquely  identified in future  references by TCX,
     2663    12954                           the index into TOP$TCP.
     2664    12955
     2665    12956                           GET_DEVICE_CODE  is  called  to  access the system
     2666    12957                           configuration file and does the following:
     2667    12958
     2668    12959                            a.  Validates IOM, channel and device numbers.
     2669    12960                            b.  Verifies the ITR I/O specifies only the boot
     2670    12961                                channel on the MPC's.
     2671    12962                            c.  Maps the CP-6 peripheral model number into
     2672    12963                                a device code which is the GCOS 6 bit device
     2673    12964                                code for peripherals.
     2674    12965
     2675    12966                           NOTES ON PERIPHERAL ALLOCATION FOR POSTERITY:
     2676    12967                            a.  MDR I/O can run on any MPC channel ; also,
     2677    12968                                "suspends" and "releases" can be done on any
     2678    12969                                MPC channel.  For some reason, in the GCOS
     2679    12970                                systems, MDR I/O is restricted to the base
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:413  
     2680    12971                                channel on the MPC, and a lot of checking is
     2681    12972                                done to insure this.  This is not a restriction
     2682    12973                                of the hardware, and thus is not a restriction
     2683    12974                                in CP-6.  MPC firmware can handle "suspends" and
     2684    12975                                "releases" on any channel.  The problem with
     2685    12976                                GCOS may be that the MPC will send a special
     2686    12977                                interrupt back over the base channel to notify
     2687    12978                                the system that the suspend/release commands
     2688    12979                                are in effect.
     2689    12980                            b.  ITR I/O needs to go over only the base channel
     2690    12981                                of a MPC because once the IPCW command is sent
     2691    12982                                to initialize a MPC for ITRs, the BLT will sit
     2692    12983                                and (1) only accept a bootload command over
     2693    12984                                (2) the base channel.  This is not the case
     2694    12985                                in some of the newer controllers which can
     2695    12986                                accept a bootload over any channel.  But for
     2696    12987                                this implementation of TOLTS, ITR I/O will
     2697    12988                                be restricted to the base or bootload channel.
     2698    12989                                (The bootload channel is specified by switches
     2699    12990                                on the MPC maintenance panel.)
     2700    12991
     2701    12992                           PROGRAM LOGIC (continued):   If for any of several
     2702    12993                           possible  reasons,  an  error  occurs  during  the
     2703    12994                           processing of  this MME, RETURN DELTA  is set to 5
     2704    12995                           and  an error code  is placed in  the X2 register.
     2705    12996                           Normally,  RETURN DELTA is  set to 4  after a test
     2706    12997                           control   entry  and   associated  system  control
     2707    12998                           information has been properly recorded.
     2708    12999
     2709    13000                           The  structure,  SCT,  is  a  local  structure  to
     2710    13001                           procedure  TOP$MME_SCTCMP used  as working storage
     2711    13002                           to  process  this  MME.  The  information  that is
     2712    13003                           permanently saved for each  test page can be found
     2713    13004                           in the test control TOP$TCP.
     2714    13005        */
     2715    13006        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:414  
     2716    13007    1   TOP$MME_SCTCMP: PROC (MME_WD1, MME_WD2, Q, X2, X3, RETURN_DELTA) ;

  13007  7 004454   200010 741300       TOP$MME_SCT* STX1  ! @RETURN_DELTA+2,,AUTO

     2717    13008
     2718    13009    2      DCL MME_WD1          UBIN WORD ALIGNED ;
     2719    13010    2      DCL MME_WD2          UBIN WORD ALIGNED ;
     2720    13011    2      DCL Q                UBIN WORD ALIGNED ;
     2721    13012    2      DCL X2               UBIN HALF HALIGNED ;
     2722    13013    2      DCL X3               UBIN HALF HALIGNED ;
     2723    13014    2      DCL RETURN_DELTA     SBIN HALF HALIGNED ;
     2724    13015
     2725    13016    2      DCL TCX              UBIN WORD ALIGNED ;
     2726    13017           %LIST ;
     2727    13018           %SCT ;
             13019           %LSET STR = CONCAT (TEXTCHAR(STCLASS),'        ');
             13020           %IF (SUBSTR(STR,0,6) = 'STATIC') OR
             13021               (SUBSTR(STR,0,8) = 'CONSTANT') OR
             13022               (SUBSTR(STR,0,3) = 'EXT');
             13024           %ELSE;
             13025             %LSET INIT = CHARTEXT('/*');
             13026           %ENDIF;
             13027    2      DCL 1 FPTN STCLASS ALIGNED,
             13028    2            2 FICCDD ALIGNED,
             13029    2              3 FLAG# BIT (3) UNAL,
             13030    2              3 FORMAT# BIT (1) UNAL,
             13031    2              3 IOM# UBIN (2) UNAL,
             13032    2              3 CHANNEL# UBIN (18) UNAL,
             13033    2              3 DEVICE# UBIN (6) UNAL,
             13034    2              3 * UBIN (6) UNAL,
             13035    2            2 TEST_TYPE UBIN (6) CALIGNED,
             13036    2            2 DEVICE_CODE UBIN (6) CALIGNED,
             13037    2            2 FIRMWARE,
             13038    2              3 TYPE# CHAR (4) CALIGNED,
             13039    2              3 LP# CHAR (4) CALIGNED,
             13040    2              3 RP# CHAR (4) CALIGNED,
             13041    2            2 BIT17 BIT (1) CALIGNED,
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:415  
             13042    2            2 BIT13 BIT (1) CALIGNED,
             13043    2            2 BIT12 BIT (1) CALIGNED,
             13044    2            2 MODEL CHAR (8) CALIGNED,
             13045    2            2 MPC_MODEL CHAR (8) CALIGNED;
     2728    13047           %PLIST ;
     2729    13048    2      DCL SCTWDS_BUILT     BIT (1) CALIGNED ;
     2730    13049    2      DCL REASON           UBIN HALF HALIGNED ;
     2731    13050           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:416  
     2732    13051        /* Code */
     2733    13052
     2734    13053    2      CALL FIND_VACANT_ENTRY (TCX) WHENALTRETURN

  13053  7 004455   200017 630500                    EPPR0   TCX,,AUTO
         7 004456   200035 450500                    STP0    REASON+2,,AUTO
         7 004457   004574 701000 7                  TSX1    FIND_VACANT_ENTRY
         7 004460   004462 702000 7                  TSX2    s:13055
         7 004461   004474 710000 7                  TRA     s:13060

     2735    13054    3           DO ;

     2736    13055    3              RETURN_DELTA = 5 ;

  13055  7 004462   200016 470500                    LDP0    @RETURN_DELTA,,AUTO
         7 004463   000100 101400                    MRL     fill='000'O
         7 004464   000007 000004 xsym               ADSC9   B_VECTNIL+7              cn=0,n=4
         7 004465   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2

     2737    13056    3              X2 = %CP6DENY# ;

  13056  7 004466   200014 471500                    LDP1    @X2,,AUTO
         7 004467   000100 101400                    MRL     fill='000'O
         7 004470   000010 000004 xsym               ADSC9   B_VECTNIL+8              cn=0,n=4
         7 004471   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2

     2738    13057    3              RETURN ;

  13057  7 004472   200010 221300                    LDX1  ! @RETURN_DELTA+2,,AUTO
         7 004473   000001 702211                    TSX2  ! 1,X1

     2739    13058    3           END ;
     2740    13059
     2741    13060    2      CALL GET_DEVICE_CODE (MME_WD1, X3, SCT, REASON) WHENALTRETURN

  13060  7 004474   200033 630500                    EPPR0   REASON,,AUTO
         7 004475   200040 450500                    STP0    DIX,,AUTO
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:417  
         7 004476   200020 631500                    EPPR1   SCT,,AUTO
         7 004477   200037 451500                    STP1    STATUS$,,AUTO
         7 004500   200015 236100                    LDQ     @X3,,AUTO
         7 004501   200036 756100                    STQ     @TCX+1,,AUTO
         7 004502   200011 236100                    LDQ     @MME_WD1,,AUTO
         7 004503   200035 756100                    STQ     REASON+2,,AUTO
         7 004504   004646 701000 7                  TSX1    GET_DEVICE_CODE
         7 004505   004507 702000 7                  TSX2    s:13062
         7 004506   004521 710000 7                  TRA     s:13067

     2742    13061    3           DO ;

     2743    13062    3              RETURN_DELTA = 5 ;

  13062  7 004507   200016 470500                    LDP0    @RETURN_DELTA,,AUTO
         7 004510   000100 101400                    MRL     fill='000'O
         7 004511   000007 000004 xsym               ADSC9   B_VECTNIL+7              cn=0,n=4
         7 004512   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2

     2744    13063    3              X2 = REASON ;

  13063  7 004513   200014 471500                    LDP1    @X2,,AUTO
         7 004514   000100 100500                    MLR     fill='000'O
         7 004515   200033 000002                    ADSC9   REASON,,AUTO             cn=0,n=2
         7 004516   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2

     2745    13064    3              RETURN ;

  13064  7 004517   200010 221300                    LDX1  ! @RETURN_DELTA+2,,AUTO
         7 004520   000001 702211                    TSX2  ! 1,X1

     2746    13065    3           END ;
     2747    13066
     2748    13067    2      CALL BUILD_TEST_CONTROL_ENTRY (TCX, SCT) WHENALTRETURN

  13067  7 004521   200020 630500                    EPPR0   SCT,,AUTO
         7 004522   200036 450500                    STP0    @TCX+1,,AUTO
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:418  
         7 004523   200017 631500                    EPPR1   TCX,,AUTO
         7 004524   200035 451500                    STP1    REASON+2,,AUTO
         7 004525   006240 701000 7                  TSX1    BUILD_TEST_CONTROL_ENTRY
         7 004526   004530 702000 7                  TSX2    s:13069
         7 004527   004542 710000 7                  TRA     s:13074

     2749    13068    3           DO ;

     2750    13069    3              RETURN_DELTA = 5 ;

  13069  7 004530   200016 470500                    LDP0    @RETURN_DELTA,,AUTO
         7 004531   000100 101400                    MRL     fill='000'O
         7 004532   000007 000004 xsym               ADSC9   B_VECTNIL+7              cn=0,n=4
         7 004533   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2

     2751    13070    3              X2 = %INVTT# ;

  13070  7 004534   200014 471500                    LDP1    @X2,,AUTO
         7 004535   000100 101400                    MRL     fill='000'O
         7 004536   000037 000004 8                  ADSC9   31                       cn=0,n=4
         7 004537   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2

     2752    13071    3              RETURN ;

  13071  7 004540   200010 221300                    LDX1  ! @RETURN_DELTA+2,,AUTO
         7 004541   000001 702211                    TSX2  ! 1,X1

     2753    13072    3           END ;
     2754    13073
     2755    13074    2      SCTWDS_BUILT = %FALSE ;

  13074  7 004542   200032 450100                    STZ     SCTWDS_BUILT,,AUTO

     2756    13075    2     CALL BUILD_SCTWRK (TCX, MME_WD2, SCT.BIT17, SCT.BIT13, SCT.BIT12, Q, SCTWDS_BUILT
             13075               ) ;

  13075  7 004543   200032 630500                    EPPR0   SCTWDS_BUILT,,AUTO
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:419  
         7 004544   200043 450500                    STP0    @Q_REG+1,,AUTO
         7 004545   200013 236100                    LDQ     @Q,,AUTO
         7 004546   200042 756100                    STQ     @BIT12FLAG+1,,AUTO
         7 004547   200025 631500                    EPPR1   @TCX,,AUTO
         7 004550   200041 451500                    STP1    @BIT13FLAG+1,,AUTO
         7 004551   205740 452500                    STP2    BCD_BUF_INX+1,,AUTO
         7 004552   205740 236100                    LDQ     BCD_BUF_INX+1,,AUTO
         7 004553   000040 036000 8                  ADLQ    32
         7 004554   200040 756100                    STQ     DIX,,AUTO
         7 004555   205741 452500                    STP2    BCD_BUF_INX+2,,AUTO
         7 004556   205741 236100                    LDQ     BCD_BUF_INX+2,,AUTO
         7 004557   000041 036000 8                  ADLQ    33
         7 004560   200012 235100                    LDA     @MME_WD2,,AUTO
         7 004561   200036 757100                    STAQ    @TCX+1,,AUTO
         7 004562   200017 633500                    EPPR3   TCX,,AUTO
         7 004563   200035 453500                    STP3    REASON+2,,AUTO
         7 004564   011521 701000 7                  TSX1    BUILD_SCTWRK
         7 004565   000000 011000                    NOP     0

     2757    13076    2      RETURN_DELTA = 4 ;

  13076  7 004566   200016 470500                    LDP0    @RETURN_DELTA,,AUTO
         7 004567   000100 101400                    MRL     fill='000'O
         7 004570   000006 000004 xsym               ADSC9   B_VECTNIL+6              cn=0,n=4
         7 004571   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2

     2758    13077    2      RETURN ;

  13077  7 004572   200010 221300                    LDX1  ! @RETURN_DELTA+2,,AUTO
         7 004573   000001 702211                    TSX2  ! 1,X1

     2759    13078
     2760    13079        /*END TOP$MME_SCTCMP*/
     2761    13080        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:420  
     2762    13081        /*I* NAME:         FIND_VACANT_ENTRY
     2763    13082             AUTHOR:       Carl J. Eichert
     2764    13083             INTERFACE:    None called.
     2765    13084             INPUT:        TOP$TCP
     2766    13085             OUTPUT:       TCX
     2767    13086             DESCRIPTION:  Searches the IN USE field in TOP$TCP
     2768    13087                           for a zero field which  indicates  that the  entry
     2769    13088                           can be assigned to this test page.   This field is
     2770    13089                           initialized in TOT$ROOT at the start of testing.
     2771    13090        */
     2772    13091
     2773    13092    2   FIND_VACANT_ENTRY: PROC (TCX) ALTRET ;

  13092  7 004574   200034 741300       FIND_VACANT* STX1  ! REASON+1,,AUTO

     2774    13093
     2775    13094    3      DCL TCX    UBIN WORD ALIGNED ;
     2776    13095    3      DCL FOUND  BIT (1) ALIGNED ;
     2777    13096
     2778    13097        /* Code */
     2779    13098
     2780    13099    4      DO INHIBIT ;

     2781    13100    4         TCX = 0 ;

  13100  7 004575   200035 470700                    LDP0  ! @TCX,,AUTO
         7 004576   000000 450300                    STZ   ! 0,,PR0

     2782    13101    5         DO WHILE (TOP$TCP.IN_USE(TCX) & TCX < 8) ;

  13101  7 004577   004604 710200 7                  TRA   ! s:13103

     2783    13102    5            TCX = TCX + 1 ;

  13102  7 004600   200035 470700                    LDP0  ! @TCX,,AUTO
         7 004601   000000 235300                    LDA   ! 0,,PR0
         7 004602   000001 035207                    ADLA  ! 1,DL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:421  
         7 004603   000000 755300                    STA   ! 0,,PR0

     2784    13103    5         END /* WHILE */ ;

  13103  7 004604   400000 220203                    LDX0  ! -131072,DU
         7 004605   000000 235300                    LDA   ! 0,,PR0
         7 004606   000010 115207                    CMPA  ! 8,DL
         7 004607   004611 602200 7                  TNC   ! s:13103+5
         7 004610   000000 220203                    LDX0  ! 0,DU
         7 004611   000000 236300                    LDQ   ! 0,,PR0
         7 004612   000122 402207                    MPY   ! 82,DL
         7 004613   000001 736200                    QLS   ! 1
         7 004614   000003 471600 xsym               LDP1  ! TOT$DMC+3
         7 004615   100000 236306                    LDQ   ! 0,QL,PR1
         7 004616   400000 376203                    ANQ   ! -131072,DU
         7 004617   205740 756300                    STQ   ! BCD_BUF_INX+1,,AUTO
         7 004620   000000 636210                    EAQ   ! 0,X0
         7 004621   205740 376300                    ANQ   ! BCD_BUF_INX+1,,AUTO
         7 004622   004600 601200 7                  TNZ   ! s:13102

     2785    13104    4         IF TCX < 8

  13104  7 004623   000000 235300                    LDA   ! 0,,PR0
         7 004624   000010 115207                    CMPA  ! 8,DL
         7 004625   004637 603200 7                  TRC   ! s:13109

     2786    13105    5         THEN DO ;

     2787    13106    5                 FOUND = %TRUE ;

  13106  7 004626   400000 236203                    LDQ   ! -131072,DU
         7 004627   200036 756300                    STQ   ! FOUND,,AUTO

     2788    13107    5                 TOP$TCP.IN_USE(TCX) = %TRUE ;

  13107  7 004630   000000 236300                    LDQ   ! 0,,PR0
         7 004631   000122 402207                    MPY   ! 82,DL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:422  
         7 004632   000001 736200                    QLS   ! 1
         7 004633   000000 620206                    EAX0  ! 0,QL
         7 004634   400000 236203                    LDQ   ! -131072,DU
         7 004635   100000 756310                    STQ   ! 0,X0,PR1

     2789    13108    5              END /* THEN */ ;

  13108  7 004636   004640 710200 7                  TRA   ! s:13111

     2790    13109    4         ELSE FOUND = %FALSE ;

  13109  7 004637   200036 450300                    STZ   ! FOUND,,AUTO

     2791    13110    4      END /* INHIBIT */ ;

     2792    13111    3      IF FOUND

  13111  7 004640   200036 234100                    SZN     FOUND,,AUTO
         7 004641   004644 605000 7                  TPL     s:13113

     2793    13112    3      THEN RETURN ;

  13112  7 004642   200034 221300                    LDX1  ! REASON+1,,AUTO
         7 004643   000001 702211                    TSX2  ! 1,X1

     2794    13113    3      ELSE ALTRETURN ;

  13113  7 004644   200034 221300                    LDX1  ! REASON+1,,AUTO
         7 004645   000000 702211                    TSX2  ! 0,X1

     2795    13114
     2796    13115    3   END FIND_VACANT_ENTRY ;
     2797    13116        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:423  
     2798    13117        /*I* NAME:         GET_DEVICE_CODE
     2799    13118             AUTHORS:      Gary Chun
     2800    13119                           Scott Sheppard
     2801    13120                           Kathy Larkin
     2802    13121             INTERFACE:    M$OPEN
     2803    13122                           M$CLOSE
     2804    13123                           TOX$ERROR
     2805    13124                           BUILD_SCT_FICCDD
     2806    13125                           GET_CHANNEL_DEVICE
     2807    13126                           BOGUS_TDOPEN
     2808    13127                           GET_MODEL_ID
     2809    13128                           VALIDATE_DEVICE_TYPE
     2810    13129                           MAP_DEVICE
     2811    13130             INPUT:        MME_WD1
     2812    13131                           X3
     2813    13132             OUTPUT:       SCT.DEVICE_CODE = 6 bit GCOS device code
     2814    13133                           SCT.BIT17
     2815    13134                           SCT.BIT13
     2816    13135                           SCT.BIT12
     2817    13136                           SCT.FIRMWARE.TYPE#
     2818    13137                           SCT.FIRMWARE.LP#
     2819    13138                           SCT.FIRMWARE.RP#
     2820    13139                           REASON
     2821    13140             DESCRIPTION:  The  address of  FICCDD in  the subexec, passed in
     2822    13141                           bits 0-17 of MME word 1 is used to build a pointer
     2823    13142                           to  FICCDD  in  the  subexec,  and  the  following
     2824    13143                           working  variables are  set using  the information
     2825    13144                           there:
     2826    13145
     2827    13146                             SCT.FICCDD.IOM#     = I  (IOM number)
     2828    13147                             SCT.FICCDD.CHANNEL# = CC (channel number)
     2829    13148                             SCT.FICCDD.DEVICE#  = DD (device number)
     2830    13149                             SCT.TEST_TYPE = TT (test type)
     2831    13150
     2832    13151                           The  T&D configuration  file is  built by GHOST1 at
     2833    13152                           system boot  time, fid is :CONFIG,  and resides in
     2834    13153                           :SYS.
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:424  
     2835    13154
     2836    13155                           READ_CONFIG is an FPT set up to perform reads from
     2837    13156                           the :CONFIG file. All that  need be set is the key
     2838    13157                           and the destination of the data.
     2839    13158
     2840    13159                           The  HEAD  record  for  the  configuration file is
     2841    13160                           read, and the IOM  number is validated by checking
     2842    13161                           to see  that it does not  exceed the actual number
     2843    13162                           of IOM's on the system.
     2844    13163
     2845    13164                           Given  a  "valid"  IOM  number,  the configuration
     2846    13165                           record for an IOM is read in.  Once again, the key
     2847    13166                           for  the read  is set  into READ_CONFIG.KEY_.  The
     2848    13167                           record is read into a buffer named CONFIG_RECORD.
     2849    13168
     2850    13169                           CONFIG_RECORD  contains 64 entries,  one entry per
     2851    13170                           possible  IOM channel,  each containing  the ASCII
     2852    13171                           name of the device  on that channel.  (Examples of
     2853    13172                           the ASCII names are "TC01","DC01","FEP1" etc.  The
     2854    13173                           entry  for the  channel of  interest (channel#) is
     2855    13174                           fetched and stored in CHANNEL_DEVICE.
     2856    13175
     2857    13176                           At this point, it is determined whether the device
     2858    13177                           on this channel is either (1) a MPC (disk, tape or
     2859    13178                           unit  record), (2)  a console  or (3)  other.  The
     2860    13179                           presence of a MPC  on the channel requires further
     2861    13180                           access to the configuration file to get the actual
     2862    13181                           device type.  The subroutine MPC_DEVICE does this,
     2863    13182                           and determines what the actual device code is.  If
     2864    13183                           the  device on the  IOM channel is  a console, and
     2865    13184                           the  device number  specified in  the test request
     2866    13185                           (now  stored in  DEVICE_NUMBER) is  0 a console is
     2867    13186                           present on the channel.  DEVICE_CODE is set to the
     2868    13187                           console code.
     2869    13188
     2870    13189                           It is an error  condition if the "other" condition
     2871    13190                           exits, i.e.,  not a MPC or  console, and return is
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:425  
     2872    13191                           made to the caller signifying an invalid device.
     2873    13192        */
     2874    13193        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:426  
     2875    13194    2   GET_DEVICE_CODE: PROC (MME_WD1, X3, SCT, REASON) ALTRET ;

  13194  7 004646   200034 741300       GET_DEVICE_* STX1  ! REASON+1,,AUTO

     2876    13195
     2877    13196    3      DCL MME_WD1          UBIN WORD ALIGNED ;
     2878    13197    3      DCL X3               UBIN HALF HALIGNED ;
     2879    13198           %SCT ;
     2880    13227    3      DCL REASON           UBIN HALF HALIGNED ;
     2881    13228    3      DCL CHANNEL_DEVICE   CHAR (8) ALIGNED ;
     2882    13229    3      DCL CONFIG_DCB$      PTR ALIGNED ;
     2883    13230           %FPT_OPEN (FPTN = OPEN_CONFIG,
     2884    13231                      DCB  = M$CNFGFILE,
     2885    13232                      NAME = FILE_NAME,
     2886    13233                      ASN  = FILE,
     2887    13234                      ACCT = ACCOUNT_NAME,
     2888    13235                      ACS  = DIRECT,
     2889    13236                      DISP = NAMED,
     2890    13237                      ORG  = KEYED,
     2891    13238                      FUN  = IN,
     2892    13239                      SHARE = IN) ;
     2893    13348           %FPT_READ (FPTN = READ_CONFIG,
     2894    13349                      DCB  = M$CNFGFILE,
     2895    13350                      KEYS = YES) ;
     2896    13389           %FPT_CLOSE (FPTN = CLOSE_CONFIG,
     2897    13390                       DCB = M$CNFGFILE,
     2898    13391                       DISP = SAVE) ;
     2899    13433           %VLP_NAME (FPTN = FILE_NAME,
     2900    13434                      LEN  = 11,
     2901    13435                      NAME = ':CONFIG') ;
     2902    13462           %VLP_ACCT (FPTN = ACCOUNT_NAME,
     2903    13463                      ACCT = ':SYS') ;
     2904    13476           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:427  
     2905    13477        /* Code */
     2906    13478
     2907    13479    3      CALL BUILD_SCT_FICCDD (MME_WD1, X3, SCT) ;

  13479  7 004647   200036 237100                    LDAQ    @X3,,AUTO
         7 004650   200046 757100                    STAQ    CN_SCT$+1,,AUTO
         7 004651   200035 236100                    LDQ     @MME_WD1,,AUTO
         7 004652   200045 756100                    STQ     DV_SCT$+1,,AUTO
         7 004653   005010 701000 7                  TSX1    BUILD_SCT_FICCDD
         7 004654   000000 011000                    NOP     0

     2908    13480    3      CALL M$OPEN (OPEN_CONFIG) WHENALTRETURN

  13480  7 004655   000300 630400 5                  EPPR0   OPEN_CONFIG
         7 004656   450000 713400                    CLIMB   alt,open
         7 004657   410400 401760                    pmme    nvectors=18
         7 004660   004662 702000 7                  TSX2    s:13482
         7 004661   004672 710000 7                  TRA     s:13488

     2909    13481    4           DO;

     2910    13482    4              TOP_ERROR_CODE.ERR# = %E$NOOPENCONFIG;

  13482  7 004662   000173 236000 5                  LDQ     TOP_ERROR_CODE
         7 004663   000006 376000 8                  ANQ     6
         7 004664   003400 276007                    ORQ     1792,DL
         7 004665   000173 756000 5                  STQ     TOP_ERROR_CODE

     2911    13483    4              CALL TOX$ERROR (TOP_ERROR_CODE);

  13483  7 004666   000007 630400 8                  EPPR0   7
         7 004667   000017 631400 xsym               EPPR1   B_VECTNIL+15
         7 004670   000000 701000 xent               TSX1    TOX$ERROR
         7 004671   000000 011000                    NOP     0

     2912    13484    4           END /* WHENALTRETURN */;

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:428  
     2913    13485
     2914    13486        /* If not a request for a device or MPC then skip */
     2915    13487
     2916    13488    3      IF SCT.TEST_TYPE = %RPM

  13488  7 004672   200037 470500                    LDP0    @SCT,,AUTO
         7 004673   000001 236100                    LDQ     1,,PR0
         7 004674   770000 376003                    ANQ     -4096,DU
         7 004675   470000 116003                    CMPQ    -102400,DU
         7 004676   004763 600000 7                  TZE     s:13511

     2917    13489    3      THEN /* DO NOTHING */ ;
     2918    13490    4      ELSE DO;

     2919    13491    4              CALL GET_CHANNEL_DEVICE (SCT, CHANNEL_DEVICE) WHENALTRETURN

  13491  7 004677   200041 631500                    EPPR1   CHANNEL_DEVICE,,AUTO
         7 004700   200046 451500                    STP1    CN_SCT$+1,,AUTO
         7 004701   200037 236100                    LDQ     @SCT,,AUTO
         7 004702   200045 756100                    STQ     DV_SCT$+1,,AUTO
         7 004703   005057 701000 7                  TSX1    GET_CHANNEL_DEVICE
         7 004704   004706 702000 7                  TSX2    s:13493
         7 004705   004717 710000 7                  TRA     s:13497

     2920    13492    5                   DO ;

     2921    13493    5                      CALL M$CLOSE (CLOSE_CONFIG) ;

  13493  7 004706   000410 630400 5                  EPPR0   CLOSE_CONFIG
         7 004707   050001 713400                    CLIMB   close
         7 004710   406000 401760                    pmme    nvectors=13

     2922    13494    5                      REASON = %INVIOM# ;

  13494  7 004711   200040 470500                    LDP0    @REASON,,AUTO
         7 004712   000100 101400                    MRL     fill='000'O
         7 004713   000002 000004 xsym               ADSC9   B_VECTNIL+2              cn=0,n=4
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:429  
         7 004714   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2

     2923    13495    5                      ALTRETURN ;

  13495  7 004715   200034 221300                    LDX1  ! REASON+1,,AUTO
         7 004716   000000 702211                    TSX2  ! 0,X1

     2924    13496    5                   END /* WHENALTRETURN */ ;
     2925    13497    4              CALL BOGUS_TDOPEN (SCT, CONFIG_DCB$) WHENALTRETURN

  13497  7 004717   200043 630500                    EPPR0   CONFIG_DCB$,,AUTO
         7 004720   200046 450500                    STP0    CN_SCT$+1,,AUTO
         7 004721   200037 236100                    LDQ     @SCT,,AUTO
         7 004722   200045 756100                    STQ     DV_SCT$+1,,AUTO
         7 004723   005154 701000 7                  TSX1    BOGUS_TDOPEN
         7 004724   004726 702000 7                  TSX2    s:13499
         7 004725   004737 710000 7                  TRA     s:13503

     2926    13498    5                   DO ;

     2927    13499    5                      CALL M$CLOSE (CLOSE_CONFIG) ;

  13499  7 004726   000410 630400 5                  EPPR0   CLOSE_CONFIG
         7 004727   050001 713400                    CLIMB   close
         7 004730   406000 401760                    pmme    nvectors=13

     2928    13500    5                      REASON = %INVDEV# ;

  13500  7 004731   200040 470500                    LDP0    @REASON,,AUTO
         7 004732   000100 101400                    MRL     fill='000'O
         7 004733   000004 000004 xsym               ADSC9   B_VECTNIL+4              cn=0,n=4
         7 004734   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2

     2929    13501    5                      ALTRETURN ;

  13501  7 004735   200034 221300                    LDX1  ! REASON+1,,AUTO
         7 004736   000000 702211                    TSX2  ! 0,X1
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:430  

     2930    13502    5                   END /* WHENALTRETURN */ ;
     2931    13503    4              CALL GET_MODEL_ID (SCT, CONFIG_DCB$) ;

  13503  7 004737   200043 630500                    EPPR0   CONFIG_DCB$,,AUTO
         7 004740   200046 450500                    STP0    CN_SCT$+1,,AUTO
         7 004741   200037 236100                    LDQ     @SCT,,AUTO
         7 004742   200045 756100                    STQ     DV_SCT$+1,,AUTO
         7 004743   005234 701000 7                  TSX1    GET_MODEL_ID
         7 004744   000000 011000                    NOP     0

     2932    13504    4              CALL VALIDATE_DEVICE_TYPE (SCT, CHANNEL_DEVICE, REASON) WHENALTRETURN

  13504  7 004745   200040 236100                    LDQ     @REASON,,AUTO
         7 004746   200047 756100                    STQ     SCTWRK$+1,,AUTO
         7 004747   200041 630500                    EPPR0   CHANNEL_DEVICE,,AUTO
         7 004750   200046 450500                    STP0    CN_SCT$+1,,AUTO
         7 004751   200037 236100                    LDQ     @SCT,,AUTO
         7 004752   200045 756100                    STQ     DV_SCT$+1,,AUTO
         7 004753   005264 701000 7                  TSX1    VALIDATE_DEVICE_TYPE
         7 004754   004756 702000 7                  TSX2    s:13506
         7 004755   004763 710000 7                  TRA     s:13511

     2933    13505    5                   DO ;

     2934    13506    5                      CALL M$CLOSE (CLOSE_CONFIG) ;

  13506  7 004756   000410 630400 5                  EPPR0   CLOSE_CONFIG
         7 004757   050001 713400                    CLIMB   close
         7 004760   406000 401760                    pmme    nvectors=13

     2935    13507    5                      ALTRETURN ;

  13507  7 004761   200034 221300                    LDX1  ! REASON+1,,AUTO
         7 004762   000000 702211                    TSX2  ! 0,X1

     2936    13508    5                   END /* WHENALTRETURN */ ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:431  
     2937    13509    4           END /* ELSE DO */ ;

     2938    13510
     2939    13511    3      CALL MAP_DEVICE (SCT, CONFIG_DCB$) WHENALTRETURN

  13511  7 004763   200043 630500                    EPPR0   CONFIG_DCB$,,AUTO
         7 004764   200046 450500                    STP0    CN_SCT$+1,,AUTO
         7 004765   200037 236100                    LDQ     @SCT,,AUTO
         7 004766   200045 756100                    STQ     DV_SCT$+1,,AUTO
         7 004767   005441 701000 7                  TSX1    MAP_DEVICE
         7 004770   004772 702000 7                  TSX2    s:13513
         7 004771   005003 710000 7                  TRA     s:13517

     2940    13512    4           DO ;

     2941    13513    4              CALL M$CLOSE (CLOSE_CONFIG) ;

  13513  7 004772   000410 630400 5                  EPPR0   CLOSE_CONFIG
         7 004773   050001 713400                    CLIMB   close
         7 004774   406000 401760                    pmme    nvectors=13

     2942    13514    4              REASON = %INVDEV# ;

  13514  7 004775   200040 470500                    LDP0    @REASON,,AUTO
         7 004776   000100 101400                    MRL     fill='000'O
         7 004777   000004 000004 xsym               ADSC9   B_VECTNIL+4              cn=0,n=4
         7 005000   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2

     2943    13515    4              ALTRETURN ;

  13515  7 005001   200034 221300                    LDX1  ! REASON+1,,AUTO
         7 005002   000000 702211                    TSX2  ! 0,X1

     2944    13516    4           END /* WHENALTRETURN */ ;
     2945    13517    3      CALL M$CLOSE (CLOSE_CONFIG) ;

  13517  7 005003   000410 630400 5                  EPPR0   CLOSE_CONFIG
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:432  
         7 005004   050001 713400                    CLIMB   close
         7 005005   406000 401760                    pmme    nvectors=13

     2946    13518    3      RETURN ;

  13518  7 005006   200034 221300                    LDX1  ! REASON+1,,AUTO
         7 005007   000001 702211                    TSX2  ! 1,X1

     2947    13519
     2948    13520        /* END GET_DEVICE_CODE */
     2949    13521        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:433  
     2950    13522        /*I* NAME:         BUILD_SCT_FICCDD
     2951    13523             AUTHOR:       Scott S. Sheppard
     2952    13524             INTERFACE:    None called.
     2953    13525             INPUT:        MME_W1
     2954    13526                           X3
     2955    13527             OUTPUT:       SCT.FICCDDIOM#
     2956    13528                           SCT.FICCDDCHANNEL#
     2957    13529                           SCT.FICCDDDEVICE#
     2958    13530                           SCT.TEST_TYPE
     2959    13531             DESCRIPTION:  This procedure uses the address found in MME
     2960    13532                           word one to obtain the FICCDD information and
     2961    13533                           test type for the device. If the FICCDD is in
     2962    13534                           new format, the channel number is found in the
     2963    13535                           X3 register. This FICCDD information is stored
     2964    13536                           in a temporary work structure SCT. It is this
     2965    13537                           SCT structure that is eventually used to build
     2966    13538                           a test control entry for the test page.
     2967    13539        */
     2968    13540        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:434  
     2969    13541    3   BUILD_SCT_FICCDD: PROC (MME_W1, X3, SCT) ;

  13541  7 005010   200044 741300       BUILD_SCT_F* STX1  ! @SCTWDS_BUILT+1,,AUTO

     2970    13542
     2971    13543    4      DCL 1 MME_W1         ALIGNED,
     2972    13544    4            2 ADDR#        UBIN HALF UNAL,
     2973    13545    4            2 *            UBIN HALF UNAL ;
     2974    13546    4      DCL X3               UBIN HALF HALIGNED ;
     2975    13547           %SCT ;
     2976    13576    4      DCL FICCDD$          PTR STATIC ALIGNED ;
     2977    13577    4      DCL 1 FICCDD BASED (FICCDD$) ALIGNED,
     2978    13578    4            2 FLAG#        BIT (3) UNAL,
     2979    13579    4            2 FORMAT#      BIT (1) UNAL,
     2980    13580    4            2 IOM#         UBIN (2) UNAL,
     2981    13581    4            2 CHAN#        UBIN (6) UNAL,
     2982    13582    4            2 DEV#         UBIN (6) UNAL,
     2983    13583    4            2 TEST_TYPE#   UBIN (6) UNAL,
     2984    13584    4            2 *            BIT (12) UNAL ;
     2985    13585           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:435  
     2986    13586        /* Code */
     2987    13587
     2988    13588           /* Set up FICCDD pointer */
     2989    13589    4      FICCDD$ = PINCRW (IS$, MME_W1.ADDR#) ;

  13589  7 005011   200045 470500                    LDP0    @MME_W1,,AUTO
         7 005012   000000 220100                    LDX0    0,,PR0
         7 005013   000000 636010                    EAQ     0,X0
         7 005014   000000 036000 6                  ADLQ    FPTN_
         7 005015   000453 756000 5                  STQ     FICCDD$

     2990    13590
     2991    13591           /* Use implied pointer with FICCDD based structure */
     2992    13592    4      SCT.FICCDD.FLAG# = FICCDD.FLAG# ;

  13592  7 005016   200047 471500                    LDP1    @SCT,,AUTO
         7 005017   000453 473400 5                  LDP3    FICCDD$
         7 005020   300000 236100                    LDQ     0,,PR3
         7 005021   100000 676100                    ERQ     0,,PR1
         7 005022   700000 376003                    ANQ     -32768,DU
         7 005023   100000 656100                    ERSQ    0,,PR1

     2993    13593    4      SCT.FICCDD.FORMAT# = FICCDD.FORMAT# ;

  13593  7 005024   300000 236100                    LDQ     0,,PR3
         7 005025   100000 676100                    ERQ     0,,PR1
         7 005026   040000 376003                    ANQ     16384,DU
         7 005027   100000 656100                    ERSQ    0,,PR1

     2994    13594    4      SCT.FICCDD.IOM# = FICCDD.IOM# ;

  13594  7 005030   300000 236100                    LDQ     0,,PR3
         7 005031   100000 676100                    ERQ     0,,PR1
         7 005032   030000 376003                    ANQ     12288,DU
         7 005033   100000 656100                    ERSQ    0,,PR1

     2995    13595    4      IF FICCDD.FORMAT# = %NEW_FORMAT
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:436  

  13595  7 005034   300000 236100                    LDQ     0,,PR3
         7 005035   040000 316003                    CANQ    16384,DU
         7 005036   005044 600000 7                  TZE     s:13597

     2996    13596    4      THEN SCT.FICCDD.CHANNEL# = X3 ;

  13596  7 005037   200046 474500                    LDP4    @X3,,AUTO
         7 005040   003100 060500                    CSL     bolr='003'O
         7 005041   400000 000022                    BDSC    0,,PR4                   by=0,bit=0,n=18
         7 005042   100000 060022                    BDSC    0,,PR1                   by=0,bit=6,n=18
         7 005043   005047 710000 7                  TRA     s:13598

     2997    13597    4      ELSE SCT.FICCDD.CHANNEL# = FICCDD.CHAN# ;

  13597  7 005044   007700 376003                    ANQ     4032,DU
         7 005045   000014 772000                    QRL     12
         7 005046   100000 752134                    STCQ    0,'34'O,PR1

     2998    13598    4      SCT.FICCDD.DEVICE# = FICCDD.DEV# ;

  13598  7 005047   300000 236100                    LDQ     0,,PR3
         7 005050   000014 772000                    QRL     12
         7 005051   100000 752102                    STCQ    0,'02'O,PR1

     2999    13599    4      SCT.TEST_TYPE = FICCDD.TEST_TYPE# ;

  13599  7 005052   300000 236100                    LDQ     0,,PR3
         7 005053   000022 736000                    QLS     18
         7 005054   100001 752140                    STCQ    1,'40'O,PR1

     3000    13600    4      RETURN ;

  13600  7 005055   200044 221300                    LDX1  ! @SCTWDS_BUILT+1,,AUTO
         7 005056   000001 702211                    TSX2  ! 1,X1

     3001    13601
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:437  
     3002    13602    4   END BUILD_SCT_FICCDD ;
     3003    13603        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:438  
     3004    13604        /*I* NAME:         GET_CHANNEL_DEVICE
     3005    13605             AUTHOR:       Scott S. Sheppard
     3006    13606             INTERFACE:    M$READ
     3007    13607             INPUT:        SCT.FICCDD.IOM#
     3008    13608                           SCT.FICCDD.CHANNEL#
     3009    13609             OUTPUT:       CHANNEL_DEVICE
     3010    13610             DESCRIPTION:  This procedure obtains configurartion information
     3011    13611                           for the specified channel of the specified IOM.
     3012    13612                           The head record is read to determine the number
     3013    13613                           of IOM's on the system. If the specified IOM
     3014    13614                           number is valid, the IOM configuration record is
     3015    13615                           read. This IOM record contains device information
     3016    13616                           for all of its available channels. This procedure
     3017    13617                           returns a portion of the IOM record, namely the
     3018    13618                           part indexed by the specified channel number.
     3019    13619                           This is done by overlaying an array onto the
     3020    13620                           configuration record using a based structure.
     3021    13621        */
     3022    13622        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:439  
     3023    13623    3   GET_CHANNEL_DEVICE: PROC (SCT, CHANNEL_DEVICE) ALTRET ;

  13623  7 005057   200044 741300       GET_CHANNEL* STX1  ! @SCTWDS_BUILT+1,,AUTO

     3024    13624
     3025    13625           %SCT ;
     3026    13654    4      DCL CHANNEL_DEVICE   CHAR (8) CALIGNED ;
     3027    13655    4      DCL 1 HEAD_KEY       CONSTANT ALIGNED,
     3028    13656    4            2 SIZE         UBIN BYTE UNAL INIT (1),
     3029    13657    4            2 DATA         UBIN BYTE UNAL INIT (0) ;
     3030    13658    4      DCL 1 IOM_KEY        (0:3) CONSTANT ALIGNED,
     3031    13659    4            2 SIZE         UBIN BYTE UNAL INIT (4*4),
     3032    13660    4            2 DATA         CHAR (4)  UNAL INIT ('IOM0', 'IOM1', 'IOM2', 'IOM3') ;
     3033    13661    4      DCL 1 IMU_KEY        (0:3) CONSTANT ALIGNED,
     3034    13662    4            2 SIZE         UBIN BYTE UNAL INIT (4*4),
     3035    13663    4            2 DATA         CHAR (4)  UNAL INIT ('IMU0', 'IMU1', 'IMU2', 'IMU3') ;
     3036    13664    4      DCL CONFIG_RECORD    (0:2000) UBIN WORD ALIGNED ;
     3037    13665    4      DCL CONFIG$          PTR ALIGNED ;
     3038    13666           %TD$HEAD ;
     3039    13702           %TD$IOM ;
     3040    13710           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:440  
     3041    13711        /* Code */
     3042    13712
     3043    13713    4      CONFIG$ = ADDR (CONFIG_RECORD) ;

  13713  7 005060   200047 630500                    EPPR0   CONFIG_RECORD,,AUTO
         7 005061   203770 450500                    STP0    CONFIG$,,AUTO

     3044    13714    4      READ_CONFIG.KEY_ = VECTOR (HEAD_KEY) ;

  13714  7 005062   000042 237000 8                  LDAQ    34
         7 005063   000374 757000 5                  STAQ    READ_CONFIG+2

     3045    13715    4      READ_CONFIG.BUF_ = VECTOR (CONFIG_RECORD) ;

  13715  7 005064   000044 235000 8                  LDA     36
         7 005065   205740 452500                    STP2    BCD_BUF_INX+1,,AUTO
         7 005066   205740 236100                    LDQ     BCD_BUF_INX+1,,AUTO
         7 005067   000047 036003                    ADLQ    39,DU
         7 005070   000376 757000 5                  STAQ    READ_CONFIG+4

     3046    13716    4      CALL M$READ (READ_CONFIG) ;

  13716  7 005071   000372 630400 5                  EPPR0   READ_CONFIG
         7 005072   040000 713400                    CLIMB   read
         7 005073   401400 401760                    pmme    nvectors=4

     3047    13717    4      IF SCT.FICCDD.IOM# < CONFIG$ -> TD$HEAD.NUMIOMS

  13717  7 005074   203770 470500                    LDP0    CONFIG$,,AUTO
         7 005075   000000 236100                    LDQ     0,,PR0
         7 005076   777777 376007                    ANQ     -1,DL
         7 005077   205740 756100                    STQ     BCD_BUF_INX+1,,AUTO
         7 005100   200045 471500                    LDP1    @SCT,,AUTO
         7 005101   100000 236100                    LDQ     0,,PR1
         7 005102   000036 772000                    QRL     30
         7 005103   000003 376007                    ANQ     3,DL
         7 005104   205740 116100                    CMPQ    BCD_BUF_INX+1,,AUTO
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:441  
         7 005105   005152 605000 7                  TPL     s:13731

     3048    13718    5      THEN DO ;

     3049    13719    5              READ_CONFIG.KEY_ = VECTOR (IOM_KEY(SCT.FICCDD.IOM#)) ;

  13719  7 005106   000016 235000 8                  LDA     14
         7 005107   000023 736000                    QLS     19
         7 005110   000045 036000 8                  ADLQ    37
         7 005111   000374 757000 5                  STAQ    READ_CONFIG+2

     3050    13720    5              CALL M$READ (READ_CONFIG) WHENALTRETURN

  13720  7 005112   000372 630400 5                  EPPR0   READ_CONFIG
         7 005113   440000 713400                    CLIMB   alt,read
         7 005114   401400 401760                    pmme    nvectors=4
         7 005115   005117 702000 7                  TSX2    s:13722
         7 005116   005136 710000 7                  TRA     s:13728

     3051    13721    6                   DO ;

     3052    13722    6                      READ_CONFIG.KEY_ = VECTOR (IMU_KEY(SCT.FICCDD.IOM#)) ;

  13722  7 005117   200045 470500                    LDP0    @SCT,,AUTO
         7 005120   000000 236100                    LDQ     0,,PR0
         7 005121   000036 772000                    QRL     30
         7 005122   000003 376007                    ANQ     3,DL
         7 005123   000016 235000 8                  LDA     14
         7 005124   000023 736000                    QLS     19
         7 005125   000046 036000 8                  ADLQ    38
         7 005126   000374 757000 5                  STAQ    READ_CONFIG+2

     3053    13723    6                      CALL M$READ (READ_CONFIG) WHENALTRETURN

  13723  7 005127   000372 630400 5                  EPPR0   READ_CONFIG
         7 005130   440000 713400                    CLIMB   alt,read
         7 005131   401400 401760                    pmme    nvectors=4
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:442  
         7 005132   005134 702000 7                  TSX2    s:13725
         7 005133   005136 710000 7                  TRA     s:13728

     3054    13724    7                           DO ;

     3055    13725    7                              ALTRETURN ;

  13725  7 005134   200044 221300                    LDX1  ! @SCTWDS_BUILT+1,,AUTO
         7 005135   000000 702211                    TSX2  ! 0,X1

     3056    13726    7                           END /* WHENALTRETURN DO */ ;
     3057    13727    6                   END /*WHENALTRETURN DO */ ;

     3058    13728    5              CHANNEL_DEVICE = CONFIG$ -> TD$IOM.DEVNAME(SCT.FICCDD.CHANNEL#) ;

  13728  7 005136   200045 470500                    LDP0    @SCT,,AUTO
         7 005137   000000 236100                    LDQ     0,,PR0
         7 005140   000013 772000                    QRL     11
         7 005141   000047 376000 8                  ANQ     39
         7 005142   000002 736000                    QLS     2
         7 005143   203770 471500                    LDP1    CONFIG$,,AUTO
         7 005144   200046 473500                    LDP3    @CHANNEL_DEVICE,,AUTO
         7 005145   040100 100506                    MLR     fill='040'O
         7 005146   100000 000010                    ADSC9   0,Q,PR1                  cn=0,n=8
         7 005147   300000 000010                    ADSC9   0,,PR3                   cn=0,n=8

     3059    13729    5              RETURN ;

  13729  7 005150   200044 221300                    LDX1  ! @SCTWDS_BUILT+1,,AUTO
         7 005151   000001 702211                    TSX2  ! 1,X1

     3060    13730    5           END /* THEN */ ;
     3061    13731    4      ELSE ALTRETURN ;

  13731  7 005152   200044 221300                    LDX1  ! @SCTWDS_BUILT+1,,AUTO
         7 005153   000000 702211                    TSX2  ! 0,X1

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:443  
     3062    13732
     3063    13733    4   END GET_CHANNEL_DEVICE ;
     3064    13734        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:444  
     3065    13735        /*I* NAME:         BOGUS_TDOPEN
     3066    13736             AUTHOR:       Scott S. Sheppard
     3067    13737             INTERFACE:    M$TDOPEN
     3068    13738             INPUT:        SCT.FICCDD.IOM#
     3069    13739                           SCT.FICCDD.CHANNEL#
     3070    13740                           SCT.FICCDD.DEVICE#
     3071    13741             OUTPUT:       DCB$
     3072    13742             DESCRIPTION:  This procedure performs a TDOPEN on the specified
     3073    13743                           IOM channel and device to get the CP-6 operating
     3074    13744                           system to alter a specified DCB. This DCB can be
     3075    13745                           interrogated later in the processing to obtain
     3076    13746                           the device name associated with the channel. This
     3077    13747                           device name is used as a key into the configuration
     3078    13748                           file to obtain the model number of the device.
     3079    13749        */
     3080    13750
     3081    13751    3   BOGUS_TDOPEN: PROC (SCT, DCB$) ALTRET ;

  13751  7 005154   200044 741300       BOGUS_TDOPEN STX1  ! @SCTWDS_BUILT+1,,AUTO

     3082    13752
     3083    13753           %SCT ;
     3084    13782    4      DCL DCB$             PTR ALIGNED ;
     3085    13783           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:445  
     3086    13784        /* Code */
     3087    13785
     3088    13786    4      TDOPEN_FPT.V.DCB# = DCBNUM (M$DEVCNFG) ;

  13786  7 005155   000000 236007 xsym               LDQ     M$DEVCNFG,DL
         7 005156   000000 620006                    EAX0    0,QL
         7 005157   000222 740000 5                  STX0    TDOPEN_FPT+8

     3089    13787    4      IF SCT.TEST_TYPE = %MPC

  13787  7 005160   200045 470500                    LDP0    @SCT,,AUTO
         7 005161   000001 236100                    LDQ     1,,PR0
         7 005162   770000 376003                    ANQ     -4096,DU
         7 005163   230000 116003                    CMPQ    77824,DU
         7 005164   005170 601000 7                  TNZ     s:13789

     3090    13788    4      THEN TDOPEN_FPT.V.TEST# = %TD_TEST_MPC;

  13788  7 005165   060000 236003                    LDQ     24576,DU
         7 005166   000224 752040 5                  STCQ    TDOPEN_FPT+10,'40'O
         7 005167   005172 710000 7                  TRA     s:13790

     3091    13789    4      ELSE TDOPEN_FPT.V.TEST# = %TD_TEST_DEVICE;

  13789  7 005170   000000 236003                    LDQ     0,DU
         7 005171   000224 752040 5                  STCQ    TDOPEN_FPT+10,'40'O

     3092    13790    4      TDOPEN_FPT.V.DEVICE.IOM# = SCT.FICCDD.IOM# ;

  13790  7 005172   000000 236100                    LDQ     0,,PR0
         7 005173   030000 376003                    ANQ     12288,DU
         7 005174   000025 772000                    QRL     21
         7 005175   000222 676000 5                  ERQ     TDOPEN_FPT+8
         7 005176   007000 376007                    ANQ     3584,DL
         7 005177   000222 656000 5                  ERSQ    TDOPEN_FPT+8

     3093    13791    4      TDOPEN_FPT.V.DEVICE.CHAN# = SCT.FICCDD.CHANNEL# ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:446  

  13791  7 005200   000000 236100                    LDQ     0,,PR0
         7 005201   000014 772000                    QRL     12
         7 005202   000222 552004 5                  STBQ    TDOPEN_FPT+8,'04'O

     3094    13792    4      TDOPEN_FPT.V.DEVICE.DVN# = SCT.FICCDD.DEVICE# ;

  13792  7 005203   000000 236100                    LDQ     0,,PR0
         7 005204   000006 736000                    QLS     6
         7 005205   000222 752004 5                  STCQ    TDOPEN_FPT+8,'04'O

     3095    13793    4      CALL M$TDOPEN (TDOPEN_FPT) ALTRET (ERROR) ;

  13793  7 005206   000212 630400 5                  EPPR0   TDOPEN_FPT
         7 005207   470002 713400                    CLIMB   alt,+28674
         7 005210   401400 401760                    pmme    nvectors=4
         7 005211   005222 702000 7                  TSX2    ERROR

     3096    13794    4      DCB$ = DCBADDR (DCBNUM (M$DEVCNFG)) ;

  13794  7 005212   000000 236007 xsym               LDQ     M$DEVCNFG,DL
         7 005213   000015 470400 8                  LDP0    13
         7 005214   000000 471500                    LDP1    0,,PR0
         7 005215   100000 236106                    LDQ     0,QL,PR1
         7 005216   200046 473500                    LDP3    @DCB$,,AUTO
         7 005217   300000 756100                    STQ     0,,PR3

     3097    13795    4      RETURN ;

  13795  7 005220   200044 221300                    LDX1  ! @SCTWDS_BUILT+1,,AUTO
         7 005221   000001 702211                    TSX2  ! 1,X1

     3098    13796
     3099    13797    4   ERROR:
     3100    13798    4      CALL TOX$WARN (B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR) ;

  13798  7 005222   000000 470400 xsym  ERROR        LDP0    B$TCB$
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:447  
         7 005223   000000 471500                    LDP1    0,,PR0
         7 005224   100102 633500                    EPPR3   66,,PR1
         7 005225   205740 453500                    STP3    BCD_BUF_INX+1,,AUTO
         7 005226   205740 630500                    EPPR0   BCD_BUF_INX+1,,AUTO
         7 005227   000017 631400 xsym               EPPR1   B_VECTNIL+15
         7 005230   000000 701000 xent               TSX1    TOX$WARN
         7 005231   000000 011000                    NOP     0

     3101    13799    4      ALTRETURN ;

  13799  7 005232   200044 221300                    LDX1  ! @SCTWDS_BUILT+1,,AUTO
         7 005233   000000 702211                    TSX2  ! 0,X1

     3102    13800
     3103    13801    4   END BOGUS_TDOPEN ;
     3104    13802        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:448  
     3105    13803        /*I* NAME:         GET_MODEL_ID
     3106    13804             AUTHOR:       Scott S. Sheppard
     3107    13805             INTERFACE:    M$READ
     3108    13806             INPUT:        DCB$
     3109    13807             OUTPUT:       SCT.MODEL
     3110    13808             DESCRIPTION:  This procedure obtains a device key from the DCB
     3111    13809                           pointed to by the DCB$ parameter. This device key
     3112    13810                           is used to obtain a device record from the :CONFIG
     3113    13811                           file. The device record contains the model number
     3114    13812                           of the device which is returned.
     3115    13813        */
     3116    13814
     3117    13815    3   GET_MODEL_ID: PROC (SCT, DCB$) ;

  13815  7 005234   200044 741300       GET_MODEL_ID STX1  ! @SCTWDS_BUILT+1,,AUTO

     3118    13816
     3119    13817           %SCT ;
     3120    13846    4      DCL DCB$             PTR ALIGNED ;
     3121    13847    4      DCL DEVICE$          PTR ALIGNED ;
     3122    13848    4      DCL 1 DEVICE_KEY     STATIC CALIGNED,
     3123    13849    4            2 SIZE         UBIN BYTE UNAL INIT (8),
     3124    13850    4            2 DATA         CHAR (8) UNAL INIT (' ') ;
     3125    13851    4      DCL CONFIG_RECORD    (0:2000) UBIN WORD ALIGNED ;
     3126    13852           %TD$DEV ;
     3127    13871           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:449  
     3128    13872        /* Code */
     3129    13873
     3130    13874    4      DEVICE_KEY.DATA = DCB$ -> F$DCB.NAME#.C ;

  13874  7 005235   200046 470500                    LDP0    @DCB$,,AUTO
         7 005236   000000 471500                    LDP1    0,,PR0
         7 005237   040000 100500                    MLR     fill='040'O
         7 005240   100010 200010                    ADSC9   8,,PR1                   cn=1,n=8
         7 005241   000454 200010 5                  ADSC9   DEVICE_KEY               cn=1,n=8

     3131    13875    4      READ_CONFIG.KEY_ = VECTOR (DEVICE_KEY) ;

  13875  7 005242   000050 237000 8                  LDAQ    40
         7 005243   000374 757000 5                  STAQ    READ_CONFIG+2

     3132    13876    4      READ_CONFIG.BUF_ = VECTOR (CONFIG_RECORD) ;

  13876  7 005244   000044 235000 8                  LDA     36
         7 005245   205740 452500                    STP2    BCD_BUF_INX+1,,AUTO
         7 005246   205740 236100                    LDQ     BCD_BUF_INX+1,,AUTO
         7 005247   000050 036003                    ADLQ    40,DU
         7 005250   000376 757000 5                  STAQ    READ_CONFIG+4

     3133    13877    4      CALL M$READ (READ_CONFIG) ;

  13877  7 005251   000372 630400 5                  EPPR0   READ_CONFIG
         7 005252   040000 713400                    CLIMB   read
         7 005253   401400 401760                    pmme    nvectors=4

     3134    13878    4      DEVICE$ = ADDR (CONFIG_RECORD) ;

  13878  7 005254   200050 630500                    EPPR0   CONFIG_RECORD,,AUTO
         7 005255   200047 450500                    STP0    DEVICE$,,AUTO

     3135    13879    4      SCT.MODEL = DEVICE$ -> TD$DEV.MODEL ;

  13879  7 005256   200045 471500                    LDP1    @SCT,,AUTO
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:450  
         7 005257   040100 100500                    MLR     fill='040'O
         7 005260   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         7 005261   100005 200010                    ADSC9   5,,PR1                   cn=1,n=8

     3136    13880    4      RETURN ;

  13880  7 005262   200044 221300                    LDX1  ! @SCTWDS_BUILT+1,,AUTO
         7 005263   000001 702211                    TSX2  ! 1,X1

     3137    13881
     3138    13882    4   END GET_MODEL_ID ;
     3139    13883        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:451  
     3140    13884        /*I* NAME:         VALIDATE_DEVICE_TYPE
     3141    13885             AUTHOR:       Scott S. Sheppard
     3142    13886             INTERFACE:    MAP_MPC_DEVICE
     3143    13887             INPUT:        SCT
     3144    13888                           CHANNEL_DEVICE
     3145    13889             OUTPUT:       REASON
     3146    13890             DESCRIPTION:  This procedure determines if the device selected
     3147    13891                           is valid. The first two characters of the channel
     3148    13892                           device are examined to determine if the device is:
     3149    13893                              1. an MPC device
     3150    13894                                    DC - Disk Controller
     3151    13895                                    TC - Tape Controller
     3152    13896                                    UC - Unit Record Controller
     3153    13897                              2. a system console
     3154    13898        */
     3155    13899
     3156    13900    3   VALIDATE_DEVICE_TYPE: PROC (SCT, CHANNEL_DEVICE, REASON) ALTRET ;

  13900  7 005264   200044 741300       VALIDATE_DE* STX1  ! @SCTWDS_BUILT+1,,AUTO

     3157    13901
     3158    13902           %SCT ;
     3159    13931    4      DCL CHANNEL_DEVICE   CHAR (8) CALIGNED ;
     3160    13932    4      DCL REASON           UBIN HALF HALIGNED ;
     3161    13933           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:452  
     3162    13934        /* Code */
     3163    13935
     3164    13936    5      DO SELECT (SUBSTR (CHANNEL_DEVICE, 0, 2)) ;

  13936  7 005265   200046 470500                    LDP0    @CHANNEL_DEVICE,,AUTO
         7 005266   040000 106500                    CMPC    fill='040'O
         7 005267   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         7 005270   000127 000002 6                  ADSC9   CRLF_+17                 cn=0,n=2
         7 005271   005300 602000 7                  TNC     s:13936+11
         7 005272   005312 600000 7                  TZE     s:13938
         7 005273   040000 106500                    CMPC    fill='040'O
         7 005274   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         7 005275   000130 000002 6                  ADSC9   CRLF_+18                 cn=0,n=2
         7 005276   005333 601000 7                  TNZ     s:13947
         7 005277   005312 710000 7                  TRA     s:13938
         7 005300   040000 106500                    CMPC    fill='040'O
         7 005301   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         7 005302   000131 000002 6                  ADSC9   CRLF_+19                 cn=0,n=2
         7 005303   005333 602000 7                  TNC     s:13947
         7 005304   005312 600000 7                  TZE     s:13938
         7 005305   040000 106500                    CMPC    fill='040'O
         7 005306   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         7 005307   000132 000002 6                  ADSC9   CRLF_+20                 cn=0,n=2
         7 005310   005333 601000 7                  TNZ     s:13947
         7 005311   005321 710000 7                  TRA     s:13940

     3165    13937    5         SELECT ('DC', 'TC', 'UC') ;

     3166    13938    5         CALL MAP_MPC_DEVICE (SCT, CHANNEL_DEVICE, REASON) ALTRET (ERROR) ;

  13938  7 005312   200046 237100                    LDAQ    @CHANNEL_DEVICE,,AUTO
         7 005313   200052 757100                    STAQ    @SCT+1,,AUTO
         7 005314   200045 236100                    LDQ     @SCT,,AUTO
         7 005315   200051 756100                    STQ     CONFIG_RECORD+1,,AUTO
         7 005316   005343 701000 7                  TSX1    MAP_MPC_DEVICE
         7 005317   005337 702000 7                  TSX2    ERROR
         7 005320   005341 710000 7                  TRA     s:13951
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:453  

     3167    13939    5         SELECT ('SC') ;

     3168    13940    5         IF SCT.FICCDD.DEVICE# = 0

  13940  7 005321   200045 471500                    LDP1    @SCT,,AUTO
         7 005322   100000 236100                    LDQ     0,,PR1
         7 005323   007700 316007                    CANQ    4032,DL
         7 005324   005341 600000 7                  TZE     s:13951

     3169    13941    5         THEN /* Device Code is already valid for a console. */ ;
     3170    13942    6         ELSE DO ;

     3171    13943    6                 REASON = %NOASSIGN# ;

  13943  7 005325   200047 473500                    LDP3    @REASON,,AUTO
         7 005326   000100 101400                    MRL     fill='000'O
         7 005327   000003 000004 xsym               ADSC9   B_VECTNIL+3              cn=0,n=4
         7 005330   300000 000002                    ADSC9   0,,PR3                   cn=0,n=2

     3172    13944    6                 ALTRETURN ;

  13944  7 005331   200044 221300                    LDX1  ! @SCTWDS_BUILT+1,,AUTO
         7 005332   000000 702211                    TSX2  ! 0,X1

     3173    13945    6              END /* ELSE */ ;
     3174    13946    5         SELECT (ELSE) ;

     3175    13947    5      REASON = %INVDEV# ;

  13947  7 005333   200047 471500                    LDP1    @REASON,,AUTO
         7 005334   000100 101400                    MRL     fill='000'O
         7 005335   000004 000004 xsym               ADSC9   B_VECTNIL+4              cn=0,n=4
         7 005336   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2

     3176    13948    5   ERROR:
     3177    13949    5      ALTRETURN ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:454  

  13949  7 005337   200044 221300       ERROR        LDX1  ! @SCTWDS_BUILT+1,,AUTO
         7 005340   000000 702211                    TSX2  ! 0,X1

     3178    13950    5      END /* SELECT */ ;

     3179    13951    4      RETURN ;

  13951  7 005341   200044 221300                    LDX1  ! @SCTWDS_BUILT+1,,AUTO
         7 005342   000001 702211                    TSX2  ! 1,X1

     3180    13952
     3181    13953        /* END VALIDATE_DEVICE_TYPE */
     3182    13954        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:455  
     3183    13955        /*I* NAME:         MAP_MPC_DEVICE
     3184    13956             AUTHOR:       Scott S. Sheppard
     3185    13957             INTERFACE:    M$READ
     3186    13958             INPUT:        SCT.FICCDD.IOM#
     3187    13959             OUTPUT:       DEVICE_CODE - GCOS 6 bit device code
     3188    13960             DESCRIPTION:  This routine  is called when an  MPC is the device
     3189    13961                           connected  to an  IOM channel.  If the  test is an
     3190    13962                           ITR,  the requested channel  is verified to ensure
     3191    13963                           that it is the boot channel for that MPC.
     3192    13964
     3193    13965                           The MPC  record for the IOM  channel is read.  The
     3194    13966                           key  is entry in  the IOM record  read earlier for
     3195    13967                           that  channel, stored  in CHANNEL_DEVICE.  The MPC
     3196    13968                           record is read into CONFIG_RECORD, and the pointer
     3197    13969                           MPC$  built  to  point  to  it. The ITR allocation
     3198    13970                           check   is  made   first.  The   first  connection
     3199    13971                           specified  in  the  MPC  record  by  convention is
     3200    13972                           always  the  boot  channel  for  the  MPC.   It is
     3201    13973                           verified that the MPC  corresponds to the IOM# and
     3202    13974                           CHANNEL#  for this test  request. For non-bootable
     3203    13975                           MPC channels, the  reason code, (eventually the X2
     3204    13976                           register) is set appropriately.
     3205    13977
     3206    13978                           The  MPC  firmware  types  are  saved in SCT. This
     3207    13979                           information will be used  by TOM$MOLTS in order to
     3208    13980                           decide what type of ITRs to run on that particular
     3209    13981                           MPC.  For  disk and tape MPCs,  only FIRMWARE TYPE
     3210    13982                           is  valid  (reader  punch  and  line  printer  are
     3211    13983                           blank).   For  a  unit  record MPC, FIRMWARE TYPE,
     3212    13984                           LPFW TYPE and RPFW TYPE are valid non-blank names.
     3213    13985        */
     3214    13986        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:456  
     3215    13987    4   MAP_MPC_DEVICE: PROC (SCT, CHANNEL_DEVICE, REASON) ALTRET ;

  13987  7 005343   200050 741300       MAP_MPC_DEV* STX1  ! CONFIG_RECORD,,AUTO

     3216    13988
     3217    13989           %SCT ;
     3218    14018    5      DCL CHANNEL_DEVICE   CHAR (8) CALIGNED ;
     3219    14019    5      DCL REASON           UBIN HALF HALIGNED ;
     3220    14020    5      DCL 1 MPC_KEY STATIC CALIGNED,
     3221    14021    5            2 SIZE         UBIN BYTE UNAL INIT (8),
     3222    14022    5            2 KEY          CHAR (8) UNAL ;
     3223    14023    5      DCL CONFIG_RECORD    (0:2000) UBIN WORD ALIGNED ;
     3224    14024    5      DCL MPC$             PTR ALIGNED ;
     3225    14025           %TD$MPC ;
     3226    14047           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:457  
     3227    14048        /* Code */
     3228    14049
     3229    14050    5      MPC_KEY.KEY = CHANNEL_DEVICE ;

  14050  7 005344   200052 470500                    LDP0    @CHANNEL_DEVICE,,AUTO
         7 005345   040000 100500                    MLR     fill='040'O
         7 005346   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         7 005347   000457 200010 5                  ADSC9   MPC_KEY                  cn=1,n=8

     3230    14051    5      READ_CONFIG.KEY_ = VECTOR (MPC_KEY) ;

  14051  7 005350   000052 237000 8                  LDAQ    42
         7 005351   000374 757000 5                  STAQ    READ_CONFIG+2

     3231    14052    5      READ_CONFIG.BUF_ = VECTOR (CONFIG_RECORD) ;

  14052  7 005352   000044 235000 8                  LDA     36
         7 005353   205740 452500                    STP2    BCD_BUF_INX+1,,AUTO
         7 005354   205740 236100                    LDQ     BCD_BUF_INX+1,,AUTO
         7 005355   000054 036003                    ADLQ    44,DU
         7 005356   000376 757000 5                  STAQ    READ_CONFIG+4

     3232    14053    5      CALL M$READ (READ_CONFIG) ;

  14053  7 005357   000372 630400 5                  EPPR0   READ_CONFIG
         7 005360   040000 713400                    CLIMB   read
         7 005361   401400 401760                    pmme    nvectors=4

     3233    14054    5      MPC$ = ADDR (CONFIG_RECORD) ;

  14054  7 005362   200054 630500                    EPPR0   CONFIG_RECORD,,AUTO
         7 005363   203775 450500                    STP0    MPC$,,AUTO

     3234    14055
     3235    14056    5      IF SCT.TEST_TYPE = %MPC

  14056  7 005364   200051 471500                    LDP1    @SCT,,AUTO
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:458  
         7 005365   100001 236100                    LDQ     1,,PR1
         7 005366   770000 376003                    ANQ     -4096,DU
         7 005367   230000 116003                    CMPQ    77824,DU
         7 005370   005423 601000 7                  TNZ     s:14067

     3236    14057    5      THEN IF MPC$ -> TD$MPC.IOCHAN.PRESENCE(0) = '1'B AND

  14057  7 005371   000002 234100                    SZN     2,,PR0
         7 005372   005415 605000 7                  TPL     s:14062
         7 005373   100000 236100                    LDQ     0,,PR1
         7 005374   000036 772000                    QRL     30
         7 005375   000003 376007                    ANQ     3,DL
         7 005376   205740 756100                    STQ     BCD_BUF_INX+1,,AUTO
         7 005377   000002 236100                    LDQ     2,,PR0
         7 005400   000022 772000                    QRL     18
         7 005401   000777 376007                    ANQ     511,DL
         7 005402   205740 116100                    CMPQ    BCD_BUF_INX+1,,AUTO
         7 005403   005415 601000 7                  TNZ     s:14062
         7 005404   100000 236100                    LDQ     0,,PR1
         7 005405   000014 772000                    QRL     12
         7 005406   777777 376007                    ANQ     -1,DL
         7 005407   205741 756100                    STQ     BCD_BUF_INX+2,,AUTO
         7 005410   000002 236100                    LDQ     2,,PR0
         7 005411   000011 772000                    QRL     9
         7 005412   000777 376007                    ANQ     511,DL
         7 005413   205741 116100                    CMPQ    BCD_BUF_INX+2,,AUTO
         7 005414   005423 600000 7                  TZE     s:14067

     3237    14058    5                 MPC$ -> TD$MPC.IOCHAN.IOM(0) = SCT.FICCDD.IOM# AND
     3238    14059    5                 MPC$ -> TD$MPC.IOCHAN.LOCHAN(0) = SCT.FICCDD.CHANNEL#
     3239    14060    5         THEN /* CC is a bootable MPC channel. */ ;
     3240    14061    6         ELSE DO ;

     3241    14062    6                 REASON = %NOTBOOT# ;

  14062  7 005415   200053 473500                    LDP3    @REASON,,AUTO
         7 005416   000100 101400                    MRL     fill='000'O
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:459  
         7 005417   000014 000004 xsym               ADSC9   B_VECTNIL+12             cn=0,n=4
         7 005420   300000 000002                    ADSC9   0,,PR3                   cn=0,n=2

     3242    14063    6                 ALTRETURN ;

  14063  7 005421   200050 221300                    LDX1  ! CONFIG_RECORD,,AUTO
         7 005422   000000 702211                    TSX2  ! 0,X1

     3243    14064    6              END /* ELSE */ ;
     3244    14065    5      ELSE /* not an ITR --- continue */ ;
     3245    14066
     3246    14067    5      SCT.MPC_MODEL = MPC$ -> TD$MPC.MODEL;

  14067  7 005423   040100 100500                    MLR     fill='040'O
         7 005424   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         7 005425   100007 200010                    ADSC9   7,,PR1                   cn=1,n=8

     3247    14068    5      SCT.FIRMWARE.TYPE# = MPC$ -> TD$MPC.FWNAME ;

  14068  7 005426   040100 100500                    MLR     fill='040'O
         7 005427   000013 000004                    ADSC9   11,,PR0                  cn=0,n=4
         7 005430   100001 400004                    ADSC9   1,,PR1                   cn=2,n=4

     3248    14069    5      SCT.FIRMWARE.LP# = MPC$ -> TD$MPC.LPFWNAME ;

  14069  7 005431   040100 100500                    MLR     fill='040'O
         7 005432   000014 000004                    ADSC9   12,,PR0                  cn=0,n=4
         7 005433   100002 400004                    ADSC9   2,,PR1                   cn=2,n=4

     3249    14070    5      SCT.FIRMWARE.RP# = MPC$ -> TD$MPC.CRPFWNAME ;

  14070  7 005434   040100 100500                    MLR     fill='040'O
         7 005435   000015 000004                    ADSC9   13,,PR0                  cn=0,n=4
         7 005436   100003 400004                    ADSC9   3,,PR1                   cn=2,n=4

     3250    14071    5      RETURN ;

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:460  
  14071  7 005437   200050 221300                    LDX1  ! CONFIG_RECORD,,AUTO
         7 005440   000001 702211                    TSX2  ! 1,X1

     3251    14072
     3252    14073    5   END MAP_MPC_DEVICE ;
     3253    14074    4   END VALIDATE_DEVICE_TYPE ;
     3254    14075        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:461  
     3255    14076        /*I* NAME:         MAP_DEVICE
     3256    14077             AUTHOR:       Scott S. Sheppard
     3257    14078             INTERFACE:    None called.
     3258    14079             INPUT:        SCT.MODEL
     3259    14080                           DCB$
     3260    14081             OUTPUT:       SCT.DEVICE_CODE
     3261    14082                           SCT.TEST_TYPE
     3262    14083                           SCT.FIRMWARE.TYPE#
     3263    14084                           SCT.BIT17
     3264    14085                           SCT.BIT13
     3265    14086                           SCT.BIT12
     3266    14087             DESCRIPTION:  This procedure selects the proper device code
     3267    14088                           based on the model, test type, and/or firmware.
     3268    14089        */
     3269    14090
     3270    14091    3   MAP_DEVICE: PROC (SCT, DCB$) ALTRET ;

  14091  7 005441   200044 741300       MAP_DEVICE   STX1  ! @SCTWDS_BUILT+1,,AUTO

     3271    14092
     3272    14093    4      DCL DCB$             PTR ALIGNED ;
     3273    14094
     3274    14095           %SCT ;
     3275    14124           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:462  
     3276    14125        /* Code */
     3277    14126
     3278    14127    4      SCT.BIT17 = '0'B ;

  14127  7 005442   200045 470500                    LDP0    @SCT,,AUTO
         7 005443   000023 236000 8                  LDQ     19
         7 005444   000004 356100                    ANSQ    4,,PR0

     3279    14128    4      SCT.BIT13 = '0'B ;

  14128  7 005445   000054 236000 8                  LDQ     44
         7 005446   000004 356100                    ANSQ    4,,PR0

     3280    14129    4      SCT.BIT12 = '0'B ;

  14129  7 005447   000031 236000 xsym               LDQ     B_VECTNIL+25
         7 005450   000005 356100                    ANSQ    5,,PR0

     3281    14130    5      DO SELECT (SCT.MODEL) ;

  14130  7 005451   040000 106500                    CMPC    fill='040'O
         7 005452   000005 200010                    ADSC9   5,,PR0                   cn=1,n=8
         7 005453   000133 000007 6                  ADSC9   CRLF_+21                 cn=0,n=7
         7 005454   005552 602000 7                  TNC     s:14130+65
         7 005455   005752 600000 7                  TZE     s:14149
         7 005456   040000 106500                    CMPC    fill='040'O
         7 005457   000005 200010                    ADSC9   5,,PR0                   cn=1,n=8
         7 005460   000135 000007 6                  ADSC9   CRLF_+23                 cn=0,n=7
         7 005461   005526 602000 7                  TNC     s:14130+45
         7 005462   005724 600000 7                  TZE     s:14139
         7 005463   040000 106500                    CMPC    fill='040'O
         7 005464   000005 200010                    ADSC9   5,,PR0                   cn=1,n=8
         7 005465   000137 000007 6                  ADSC9   CRLF_+25                 cn=0,n=7
         7 005466   005507 602000 7                  TNC     s:14130+30
         7 005467   005736 600000 7                  TZE     s:14143
         7 005470   040000 106500                    CMPC    fill='040'O
         7 005471   000005 200010                    ADSC9   5,,PR0                   cn=1,n=8
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:463  
         7 005472   000141 000007 6                  ADSC9   CRLF_+27                 cn=0,n=7
         7 005473   005502 602000 7                  TNC     s:14130+25
         7 005474   006036 600000 7                  TZE     s:14170
         7 005475   040000 106500                    CMPC    fill='040'O
         7 005476   000005 200010                    ADSC9   5,,PR0                   cn=1,n=8
         7 005477   000143 000007 6                  ADSC9   CRLF_+29                 cn=0,n=7
         7 005500   006047 601000 7                  TNZ     s:14174
         7 005501   005743 710000 7                  TRA     s:14145
         7 005502   040000 106500                    CMPC    fill='040'O
         7 005503   000005 200010                    ADSC9   5,,PR0                   cn=1,n=8
         7 005504   000145 000007 6                  ADSC9   CRLF_+31                 cn=0,n=7
         7 005505   006047 601000 7                  TNZ     s:14174
         7 005506   006036 710000 7                  TRA     s:14170
         7 005507   040000 106500                    CMPC    fill='040'O
         7 005510   000005 200010                    ADSC9   5,,PR0                   cn=1,n=8
         7 005511   000147 000007 6                  ADSC9   CRLF_+33                 cn=0,n=7
         7 005512   005521 602000 7                  TNC     s:14130+40
         7 005513   006027 600000 7                  TZE     s:14167
         7 005514   040000 106500                    CMPC    fill='040'O
         7 005515   000005 200010                    ADSC9   5,,PR0                   cn=1,n=8
         7 005516   000151 000007 6                  ADSC9   CRLF_+35                 cn=0,n=7
         7 005517   006047 601000 7                  TNZ     s:14174
         7 005520   006027 710000 7                  TRA     s:14167
         7 005521   040000 106500                    CMPC    fill='040'O
         7 005522   000005 200010                    ADSC9   5,,PR0                   cn=1,n=8
         7 005523   000153 000007 6                  ADSC9   CRLF_+37                 cn=0,n=7
         7 005524   006047 601000 7                  TNZ     s:14174
         7 005525   005731 710000 7                  TRA     s:14141
         7 005526   040000 106500                    CMPC    fill='040'O
         7 005527   000005 200010                    ADSC9   5,,PR0                   cn=1,n=8
         7 005530   000155 000007 6                  ADSC9   CRLF_+39                 cn=0,n=7
         7 005531   005545 602000 7                  TNC     s:14130+60
         7 005532   005752 600000 7                  TZE     s:14149
         7 005533   040000 106500                    CMPC    fill='040'O
         7 005534   000005 200010                    ADSC9   5,,PR0                   cn=1,n=8
         7 005535   000157 000007 6                  ADSC9   CRLF_+41                 cn=0,n=7
         7 005536   006047 602000 7                  TNC     s:14174
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:464  
         7 005537   005752 600000 7                  TZE     s:14149
         7 005540   040000 106500                    CMPC    fill='040'O
         7 005541   000005 200010                    ADSC9   5,,PR0                   cn=1,n=8
         7 005542   000161 000007 6                  ADSC9   CRLF_+43                 cn=0,n=7
         7 005543   006047 601000 7                  TNZ     s:14174
         7 005544   005752 710000 7                  TRA     s:14149
         7 005545   040000 106500                    CMPC    fill='040'O
         7 005546   000005 200010                    ADSC9   5,,PR0                   cn=1,n=8
         7 005547   000122 000007 6                  ADSC9   CRLF_+12                 cn=0,n=7
         7 005550   006047 601000 7                  TNZ     s:14174
         7 005551   005752 710000 7                  TRA     s:14149
         7 005552   040000 106500                    CMPC    fill='040'O
         7 005553   000005 200010                    ADSC9   5,,PR0                   cn=1,n=8
         7 005554   000163 000007 6                  ADSC9   CRLF_+45                 cn=0,n=7
         7 005555   005650 602000 7                  TNC     s:14130+127
         7 005556   005771 600000 7                  TZE     s:14155
         7 005557   040000 106500                    CMPC    fill='040'O
         7 005560   000005 200010                    ADSC9   5,,PR0                   cn=1,n=8
         7 005561   000165 000007 6                  ADSC9   CRLF_+47                 cn=0,n=7
         7 005562   005615 602000 7                  TNC     s:14130+100
         7 005563   006003 600000 7                  TZE     s:14159
         7 005564   040000 106500                    CMPC    fill='040'O
         7 005565   000005 200010                    ADSC9   5,,PR0                   cn=1,n=8
         7 005566   000167 000007 6                  ADSC9   CRLF_+49                 cn=0,n=7
         7 005567   005576 602000 7                  TNC     s:14130+85
         7 005570   005752 600000 7                  TZE     s:14149
         7 005571   040000 106500                    CMPC    fill='040'O
         7 005572   000005 200010                    ADSC9   5,,PR0                   cn=1,n=8
         7 005573   000171 000007 6                  ADSC9   CRLF_+51                 cn=0,n=7
         7 005574   006047 601000 7                  TNZ     s:14174
         7 005575   005752 710000 7                  TRA     s:14149
         7 005576   040000 106500                    CMPC    fill='040'O
         7 005577   000005 200010                    ADSC9   5,,PR0                   cn=1,n=8
         7 005600   000173 000007 6                  ADSC9   CRLF_+53                 cn=0,n=7
         7 005601   005610 602000 7                  TNC     s:14130+95
         7 005602   006015 600000 7                  TZE     s:14163
         7 005603   040000 106500                    CMPC    fill='040'O
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:465  
         7 005604   000005 200010                    ADSC9   5,,PR0                   cn=1,n=8
         7 005605   000175 000007 6                  ADSC9   CRLF_+55                 cn=0,n=7
         7 005606   006047 601000 7                  TNZ     s:14174
         7 005607   006022 710000 7                  TRA     s:14165
         7 005610   040000 106500                    CMPC    fill='040'O
         7 005611   000005 200010                    ADSC9   5,,PR0                   cn=1,n=8
         7 005612   000177 000007 6                  ADSC9   CRLF_+57                 cn=0,n=7
         7 005613   006047 601000 7                  TNZ     s:14174
         7 005614   006010 710000 7                  TRA     s:14161
         7 005615   040000 106500                    CMPC    fill='040'O
         7 005616   000005 200010                    ADSC9   5,,PR0                   cn=1,n=8
         7 005617   000201 000007 6                  ADSC9   CRLF_+59                 cn=0,n=7
         7 005620   005635 602000 7                  TNC     s:14130+116
         7 005621   005776 600000 7                  TZE     s:14157
         7 005622   040000 106500                    CMPC    fill='040'O
         7 005623   000005 200010                    ADSC9   5,,PR0                   cn=1,n=8
         7 005624   000203 000007 6                  ADSC9   CRLF_+61                 cn=0,n=7
         7 005625   005630 602000 7                  TNC     s:14130+111
         7 005626   006010 600000 7                  TZE     s:14161
         7 005627   006047 710000 7                  TRA     s:14174
         7 005630   040000 106500                    CMPC    fill='040'O
         7 005631   000005 200010                    ADSC9   5,,PR0                   cn=1,n=8
         7 005632   000205 000007 6                  ADSC9   CRLF_+63                 cn=0,n=7
         7 005633   006047 601000 7                  TNZ     s:14174
         7 005634   006003 710000 7                  TRA     s:14159
         7 005635   040000 106500                    CMPC    fill='040'O
         7 005636   000005 200010                    ADSC9   5,,PR0                   cn=1,n=8
         7 005637   000207 000007 6                  ADSC9   CRLF_+65                 cn=0,n=7
         7 005640   005643 602000 7                  TNC     s:14130+122
         7 005641   005771 600000 7                  TZE     s:14155
         7 005642   006047 710000 7                  TRA     s:14174
         7 005643   040000 106500                    CMPC    fill='040'O
         7 005644   000005 200010                    ADSC9   5,,PR0                   cn=1,n=8
         7 005645   000211 000007 6                  ADSC9   CRLF_+67                 cn=0,n=7
         7 005646   006047 601000 7                  TNZ     s:14174
         7 005647   005776 710000 7                  TRA     s:14157
         7 005650   040000 106500                    CMPC    fill='040'O
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:466  
         7 005651   000005 200010                    ADSC9   5,,PR0                   cn=1,n=8
         7 005652   000213 000007 6                  ADSC9   CRLF_+69                 cn=0,n=7
         7 005653   005670 602000 7                  TNC     s:14130+143
         7 005654   005710 600000 7                  TZE     s:14134
         7 005655   040000 106500                    CMPC    fill='040'O
         7 005656   000005 200010                    ADSC9   5,,PR0                   cn=1,n=8
         7 005657   000215 000007 6                  ADSC9   CRLF_+71                 cn=0,n=7
         7 005660   005663 602000 7                  TNC     s:14130+138
         7 005661   005764 600000 7                  TZE     s:14153
         7 005662   006047 710000 7                  TRA     s:14174
         7 005663   040000 106500                    CMPC    fill='040'O
         7 005664   000005 200010                    ADSC9   5,,PR0                   cn=1,n=8
         7 005665   000217 000007 6                  ADSC9   CRLF_+73                 cn=0,n=7
         7 005666   006047 601000 7                  TNZ     s:14174
         7 005667   005757 710000 7                  TRA     s:14151
         7 005670   040000 106500                    CMPC    fill='040'O
         7 005671   000005 200010                    ADSC9   5,,PR0                   cn=1,n=8
         7 005672   000221 000007 6                  ADSC9   CRLF_+75                 cn=0,n=7
         7 005673   005676 602000 7                  TNC     s:14130+149
         7 005674   005715 600000 7                  TZE     s:14136
         7 005675   006047 710000 7                  TRA     s:14174
         7 005676   040000 106500                    CMPC    fill='040'O
         7 005677   000005 200010                    ADSC9   5,,PR0                   cn=1,n=8
         7 005700   000223 000007 6                  ADSC9   CRLF_+77                 cn=0,n=7
         7 005701   006047 601000 7                  TNZ     s:14174
         7 005702   005703 710000 7                  TRA     s:14132

     3282    14131    5         SELECT ('CONSOLE') ;

     3283    14132    5         SCT.DEVICE_CODE = %DSCC1 ;

  14132  7 005703   000001 236100                    LDQ     1,,PR0
         7 005704   000055 376000 8                  ANQ     45
         7 005705   000310 276003                    ORQ     200,DU
         7 005706   000001 756100                    STQ     1,,PR0
         7 005707   006051 710000 7                  TRA     s:14179

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:467  
     3284    14133    5         SELECT ('CRU1050') ;

     3285    14134    5         SCT.DEVICE_CODE = %DCR31 ;

  14134  7 005710   000001 236100                    LDQ     1,,PR0
         7 005711   000055 376000 8                  ANQ     45
         7 005712   000340 276003                    ORQ     224,DU
         7 005713   000001 756100                    STQ     1,,PR0
         7 005714   006051 710000 7                  TRA     s:14179

     3286    14135    5         SELECT ('CRU0501') ;

     3287    14136    5         SCT.DEVICE_CODE = %DCR31 ;

  14136  7 005715   000001 236100                    LDQ     1,,PR0
         7 005716   000055 376000 8                  ANQ     45
         7 005717   000340 276003                    ORQ     224,DU
         7 005720   000001 756100                    STQ     1,,PR0

     3288    14137    5         SCT.BIT17 = '1'B ;

  14137  7 005721   400000 236007                    LDQ     -131072,DL
         7 005722   000004 256100                    ORSQ    4,,PR0
         7 005723   006051 710000 7                  TRA     s:14179

     3289    14138    5         SELECT ('PCU0120') ;

     3290    14139    5         SCT.DEVICE_CODE = %DCP30 ;

  14139  7 005724   000001 236100                    LDQ     1,,PR0
         7 005725   000055 376000 8                  ANQ     45
         7 005726   000320 276003                    ORQ     208,DU
         7 005727   000001 756100                    STQ     1,,PR0
         7 005730   006051 710000 7                  TRA     s:14179

     3291    14140    5         SELECT ('PCU0121') ;

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:468  
     3292    14141    5         SCT.DEVICE_CODE = %DCP31 ;

  14141  7 005731   000001 236100                    LDQ     1,,PR0
         7 005732   000055 376000 8                  ANQ     45
         7 005733   000320 276003                    ORQ     208,DU
         7 005734   000001 756100                    STQ     1,,PR0
         7 005735   006051 710000 7                  TRA     s:14179

     3293    14142    5         SELECT ('PRU1200') ;

     3294    14143    5         SCT.DEVICE_CODE = %DPR41 ;

  14143  7 005736   000001 236100                    LDQ     1,,PR0
         7 005737   000055 376000 8                  ANQ     45
         7 005740   000240 276003                    ORQ     160,DU
         7 005741   000001 756100                    STQ     1,,PR0
         7 005742   006051 710000 7                  TRA     s:14179

     3295    14144    5         SELECT ('PRU1600') ;

     3296    14145    5         SCT.DEVICE_CODE = %DPR42 ;

  14145  7 005743   000001 236100                    LDQ     1,,PR0
         7 005744   000055 376000 8                  ANQ     45
         7 005745   000240 276003                    ORQ     160,DU
         7 005746   000001 756100                    STQ     1,,PR0

     3297    14146    5         SCT.BIT13 = '1'B ;

  14146  7 005747   000400 236007                    LDQ     256,DL
         7 005750   000004 256100                    ORSQ    4,,PR0
         7 005751   006051 710000 7                  TRA     s:14179

     3298    14147    5         SELECT ('MTU0600', 'MTU0610', 'MTU0630', 'MTU8200',

     3299    14148    5                 'MTU8205', 'MTU8206', 'MTU8208') ;
     3300    14149    5         SCT.DEVICE_CODE = %DMTC9 ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:469  

  14149  7 005752   000001 236100                    LDQ     1,,PR0
         7 005753   000055 376000 8                  ANQ     45
         7 005754   000160 276003                    ORQ     112,DU
         7 005755   000001 756100                    STQ     1,,PR0
         7 005756   006051 710000 7                  TRA     s:14179

     3301    14150    5         SELECT ('MSU0451') ;

     3302    14151    5         SCT.DEVICE_CODE = %DS450 ;

  14151  7 005757   000001 236100                    LDQ     1,,PR0
         7 005760   000055 376000 8                  ANQ     45
         7 005761   000650 276003                    ORQ     424,DU
         7 005762   000001 756100                    STQ     1,,PR0
         7 005763   006051 710000 7                  TRA     s:14179

     3303    14152    5         SELECT ('MSU0501') ;

     3304    14153    5         SCT.DEVICE_CODE = %DS509 ;

  14153  7 005764   000001 236100                    LDQ     1,,PR0
         7 005765   000055 376000 8                  ANQ     45
         7 005766   000700 276003                    ORQ     448,DU
         7 005767   000001 756100                    STQ     1,,PR0
         7 005770   006051 710000 7                  TRA     s:14179

     3305    14154    5         SELECT ('MSU3380', 'MSU3382');        /* MSU3380 D */

     3306    14155    5         SCT.DEVICE_CODE = %DSA1B;

  14155  7 005771   000001 236100                    LDQ     1,,PR0
         7 005772   000055 376000 8                  ANQ     45
         7 005773   000500 276003                    ORQ     320,DU
         7 005774   000001 756100                    STQ     1,,PR0
         7 005775   006051 710000 7                  TRA     s:14179

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:470  
     3307    14156    5         SELECT ('MSU3381', 'MSU3383') ;       /* MSU3381 E */

     3308    14157    5         SCT.DEVICE_CODE = %DSD1B;

  14157  7 005776   000001 236100                    LDQ     1,,PR0
         7 005777   000055 376000 8                  ANQ     45
         7 006000   000550 276003                    ORQ     360,DU
         7 006001   000001 756100                    STQ     1,,PR0
         7 006002   006051 710000 7                  TRA     s:14179

     3309    14158    5         SELECT ('MSU3390', 'MSU3392') ;       /* MSU3390 J */

     3310    14159    5         SCT.DEVICE_CODE = %DSC1B;

  14159  7 006003   000001 236100                    LDQ     1,,PR0
         7 006004   000055 376000 8                  ANQ     45
         7 006005   000530 276003                    ORQ     344,DU
         7 006006   000001 756100                    STQ     1,,PR0
         7 006007   006051 710000 7                  TRA     s:14179

     3311    14160    5         SELECT ('MSU3391', 'MSU3393') ;       /* MSU3391 K */

     3312    14161    5         SCT.DEVICE_CODE = %DSK1B;

  14161  7 006010   000001 236100                    LDQ     1,,PR0
         7 006011   000055 376000 8                  ANQ     45
         7 006012   000560 276003                    ORQ     368,DU
         7 006013   000001 756100                    STQ     1,,PR0
         7 006014   006051 710000 7                  TRA     s:14179

     3313    14162    5         SELECT ('MSU8082') ;                  /* MDS-I DEV */

     3314    14163    5         SCT.DEVICE_CODE = %DSM1D;

  14163  7 006015   000001 236100                    LDQ     1,,PR0
         7 006016   000055 376000 8                  ANQ     45
         7 006017   000450 276003                    ORQ     296,DU
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:471  
         7 006020   000001 756100                    STQ     1,,PR0
         7 006021   006051 710000 7                  TRA     s:14179

     3315    14164    5         SELECT ('MSU8092') ;                  /* MDS-II DEV */

     3316    14165    5         SCT.DEVICE_CODE = %DSM2D;

  14165  7 006022   000001 236100                    LDQ     1,,PR0
         7 006023   000055 376000 8                  ANQ     45
         7 006024   000470 276003                    ORQ     312,DU
         7 006025   000001 756100                    STQ     1,,PR0
         7 006026   006051 710000 7                  TRA     s:14179

     3317    14166    5         SELECT ('PRU0901', 'PRU0903') ;

     3318    14167    5         SCT.DEVICE_CODE = %DPR41 ;

  14167  7 006027   000001 236100                    LDQ     1,,PR0
         7 006030   000055 376000 8                  ANQ     45
         7 006031   000240 276003                    ORQ     160,DU
         7 006032   000001 756100                    STQ     1,,PR0

     3319    14168    5         SCT.BIT17 = '1'B ;

  14168  7 006033   400000 236007                    LDQ     -131072,DL
         7 006034   000004 256100                    ORSQ    4,,PR0
         7 006035   006051 710000 7                  TRA     s:14179

     3320    14169    5         SELECT ('PRU1201', 'PRU1203') ;

     3321    14170    5         SCT.DEVICE_CODE = %DPR42 ;

  14170  7 006036   000001 236100                    LDQ     1,,PR0
         7 006037   000055 376000 8                  ANQ     45
         7 006040   000240 276003                    ORQ     160,DU
         7 006041   000001 756100                    STQ     1,,PR0

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:472  
     3322    14171    5         SCT.BIT17 = '1'B ;

  14171  7 006042   400000 236007                    LDQ     -131072,DL
         7 006043   000004 256100                    ORSQ    4,,PR0

     3323    14172    5         SCT.BIT13 = '1'B ;

  14172  7 006044   000400 236007                    LDQ     256,DL
         7 006045   000004 256100                    ORSQ    4,,PR0
         7 006046   006051 710000 7                  TRA     s:14179

     3324    14173    5         SELECT (ELSE) ;

     3325    14174    5      SCT.DEVICE_CODE = 0 ;

  14174  7 006047   000055 236000 8                  LDQ     45
         7 006050   000001 356100                    ANSQ    1,,PR0

     3326    14175    5      END /* SELECT */ ;

     3327    14176
     3328    14177        /* channel 3 MCA request  */
     3329    14178
     3330    14179    4      IF SCT.TEST_TYPE = %RPM

  14179  7 006051   000001 236100                    LDQ     1,,PR0
         7 006052   770000 376003                    ANQ     -4096,DU
         7 006053   470000 116003                    CMPQ    -102400,DU
         7 006054   006063 601000 7                  TNZ     s:14187

     3331    14180    5      THEN DO;

     3332    14181    5              SCT.DEVICE_CODE = %CHN_3;

  14181  7 006055   000001 236100                    LDQ     1,,PR0
         7 006056   000055 376000 8                  ANQ     45
         7 006057   000030 276003                    ORQ     24,DU
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:473  
         7 006060   000001 756100                    STQ     1,,PR0

     3333    14182    5              SCT.BIT12 = '1'B;

  14182  7 006061   400000 236003                    LDQ     -131072,DU
         7 006062   000005 256100                    ORSQ    5,,PR0

     3334    14183    5           END /* THEN DO */ ;

     3335    14184    4      ELSE /* DO NOTHING */ ;
     3336    14185
     3337    14186        /* For ITR Test, Map firmware type into a device code for GCOS */
     3338    14187    4      IF SCT.TEST_TYPE = %MPC

  14187  7 006063   000001 236100                    LDQ     1,,PR0
         7 006064   770000 376003                    ANQ     -4096,DU
         7 006065   230000 116003                    CMPQ    77824,DU
         7 006066   006231 601000 7                  TNZ     s:14207

     3339    14188    5      THEN DO SELECT (SCT.FIRMWARE.TYPE#) ;

  14188  7 006067   040000 106500                    CMPC    fill='040'O
         7 006070   000001 400004                    ADSC9   1,,PR0                   cn=2,n=4
         7 006071   000225 000004 6                  ADSC9   CRLF_+79                 cn=0,n=4
         7 006072   006132 602000 7                  TNC     s:14188+35
         7 006073   006163 600000 7                  TZE     s:14190
         7 006074   040000 106500                    CMPC    fill='040'O
         7 006075   000001 400004                    ADSC9   1,,PR0                   cn=2,n=4
         7 006076   000226 000004 6                  ADSC9   CRLF_+80                 cn=0,n=4
         7 006077   006113 602000 7                  TNC     s:14188+20
         7 006100   006163 600000 7                  TZE     s:14190
         7 006101   040000 106500                    CMPC    fill='040'O
         7 006102   000001 400004                    ADSC9   1,,PR0                   cn=2,n=4
         7 006103   000227 000004 6                  ADSC9   CRLF_+81                 cn=0,n=4
         7 006104   006231 602000 7                  TNC     s:14207
         7 006105   006170 600000 7                  TZE     s:14192
         7 006106   040000 106500                    CMPC    fill='040'O
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:474  
         7 006107   000001 400004                    ADSC9   1,,PR0                   cn=2,n=4
         7 006110   000230 000004 6                  ADSC9   CRLF_+82                 cn=0,n=4
         7 006111   006231 601000 7                  TNZ     s:14207
         7 006112   006170 710000 7                  TRA     s:14192
         7 006113   040000 106500                    CMPC    fill='040'O
         7 006114   000001 400004                    ADSC9   1,,PR0                   cn=2,n=4
         7 006115   000231 000004 6                  ADSC9   CRLF_+83                 cn=0,n=4
         7 006116   006125 602000 7                  TNC     s:14188+30
         7 006117   006202 600000 7                  TZE     s:14196
         7 006120   040000 106500                    CMPC    fill='040'O
         7 006121   000001 400004                    ADSC9   1,,PR0                   cn=2,n=4
         7 006122   000124 000004 6                  ADSC9   CRLF_+14                 cn=0,n=4
         7 006123   006231 601000 7                  TNZ     s:14207
         7 006124   006207 710000 7                  TRA     s:14198
         7 006125   040000 106500                    CMPC    fill='040'O
         7 006126   000001 400004                    ADSC9   1,,PR0                   cn=2,n=4
         7 006127   000232 000004 6                  ADSC9   CRLF_+84                 cn=0,n=4
         7 006130   006231 601000 7                  TNZ     s:14207
         7 006131   006163 710000 7                  TRA     s:14190
         7 006132   040000 106500                    CMPC    fill='040'O
         7 006133   000001 400004                    ADSC9   1,,PR0                   cn=2,n=4
         7 006134   000233 000004 6                  ADSC9   CRLF_+85                 cn=0,n=4
         7 006135   006144 602000 7                  TNC     s:14188+45
         7 006136   006175 600000 7                  TZE     s:14194
         7 006137   040000 106500                    CMPC    fill='040'O
         7 006140   000001 400004                    ADSC9   1,,PR0                   cn=2,n=4
         7 006141   000234 000004 6                  ADSC9   CRLF_+86                 cn=0,n=4
         7 006142   006231 601000 7                  TNZ     s:14207
         7 006143   006163 710000 7                  TRA     s:14190
         7 006144   040000 106500                    CMPC    fill='040'O
         7 006145   000001 400004                    ADSC9   1,,PR0                   cn=2,n=4
         7 006146   000235 000004 6                  ADSC9   CRLF_+87                 cn=0,n=4
         7 006147   006156 602000 7                  TNC     s:14188+55
         7 006150   006216 600000 7                  TZE     s:14201
         7 006151   040000 106500                    CMPC    fill='040'O
         7 006152   000001 400004                    ADSC9   1,,PR0                   cn=2,n=4
         7 006153   000236 000004 6                  ADSC9   CRLF_+88                 cn=0,n=4
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:475  
         7 006154   006231 601000 7                  TNZ     s:14207
         7 006155   006223 710000 7                  TRA     s:14203
         7 006156   040000 106500                    CMPC    fill='040'O
         7 006157   000001 400004                    ADSC9   1,,PR0                   cn=2,n=4
         7 006160   000237 000004 6                  ADSC9   CRLF_+89                 cn=0,n=4
         7 006161   006231 601000 7                  TNZ     s:14207
         7 006162   006202 710000 7                  TRA     s:14196

     3340    14189    5              SELECT ('TPUR', 'M500', 'M601', 'M610') ;

     3341    14190    5              SCT.DEVICE_CODE = %DMTC9 ;

  14190  7 006163   000001 236100                    LDQ     1,,PR0
         7 006164   000055 376000 8                  ANQ     45
         7 006165   000160 276003                    ORQ     112,DU
         7 006166   000001 756100                    STQ     1,,PR0
         7 006167   006231 710000 7                  TRA     s:14207

     3342    14191    5              SELECT ('UCMN', 'URTP') ;

     3343    14192    5              SCT.DEVICE_CODE = %DPR42 ;

  14192  7 006170   000001 236100                    LDQ     1,,PR0
         7 006171   000055 376000 8                  ANQ     45
         7 006172   000240 276003                    ORQ     160,DU
         7 006173   000001 756100                    STQ     1,,PR0
         7 006174   006231 710000 7                  TRA     s:14207

     3344    14193    5              SELECT ('M191') ;

     3345    14194    5              SCT.DEVICE_CODE = %DS450 ;

  14194  7 006175   000001 236100                    LDQ     1,,PR0
         7 006176   000055 376000 8                  ANQ     45
         7 006177   000650 276003                    ORQ     424,DU
         7 006200   000001 756100                    STQ     1,,PR0
         7 006201   006231 710000 7                  TRA     s:14207
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:476  

     3346    14195    5              SELECT ('D500', 'MSP8') ;

     3347    14196    5              SCT.DEVICE_CODE = %DS509 ;

  14196  7 006202   000001 236100                    LDQ     1,,PR0
         7 006203   000055 376000 8                  ANQ     45
         7 006204   000700 276003                    ORQ     448,DU
         7 006205   000001 756100                    STQ     1,,PR0
         7 006206   006231 710000 7                  TRA     s:14207

     3348    14197    5              SELECT ('NONE') ;

     3349    14198    5              SCT.DEVICE_CODE = %DPR42 ;

  14198  7 006207   000001 236100                    LDQ     1,,PR0
         7 006210   000055 376000 8                  ANQ     45
         7 006211   000240 276003                    ORQ     160,DU
         7 006212   000001 756100                    STQ     1,,PR0

     3350    14199    5              SCT.BIT17 = '1'B ;

  14199  7 006213   400000 236007                    LDQ     -131072,DL
         7 006214   000004 256100                    ORSQ    4,,PR0
         7 006215   006231 710000 7                  TRA     s:14207

     3351    14200    5              SELECT ('ICRD');  /* READER/PUNCH */

     3352    14201    5              SCT.DEVICE_CODE = %DPR42 ;

  14201  7 006216   000001 236100                    LDQ     1,,PR0
         7 006217   000055 376000 8                  ANQ     45
         7 006220   000240 276003                    ORQ     160,DU
         7 006221   000001 756100                    STQ     1,,PR0
         7 006222   006231 710000 7                  TRA     s:14207

     3353    14202    5              SELECT ('IPR5');  /*PR54 URC */
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:477  

     3354    14203    5              SCT.DEVICE_CODE = %DPR42;

  14203  7 006223   000001 236100                    LDQ     1,,PR0
         7 006224   000055 376000 8                  ANQ     45
         7 006225   000240 276003                    ORQ     160,DU
         7 006226   000001 756100                    STQ     1,,PR0

     3355    14204    5              SCT.BIT17 = '1'B;

  14204  7 006227   400000 236007                    LDQ     -131072,DL
         7 006230   000004 256100                    ORSQ    4,,PR0

     3356    14205    5           END /* SELECT */ ;

     3357    14206    4      ELSE /* Do Nothing */ ;
     3358    14207    4      IF SCT.DEVICE_CODE = 0

  14207  7 006231   000001 236100                    LDQ     1,,PR0
         7 006232   000770 316003                    CANQ    504,DU
         7 006233   006236 601000 7                  TNZ     s:14209

     3359    14208    4      THEN ALTRETURN ;

  14208  7 006234   200044 221300                    LDX1  ! @SCTWDS_BUILT+1,,AUTO
         7 006235   000000 702211                    TSX2  ! 0,X1

     3360    14209    4      ELSE RETURN ;

  14209  7 006236   200044 221300                    LDX1  ! @SCTWDS_BUILT+1,,AUTO
         7 006237   000001 702211                    TSX2  ! 1,X1

     3361    14210
     3362    14211    4   END MAP_DEVICE ;
     3363    14212    3   END GET_DEVICE_CODE ;
     3364    14213        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:478  
     3365    14214        /*I* NAME:         BUILD_TEST_CONTROL_ENTRY
     3366    14215             AUTHOR:       Scott S. Sheppard
     3367    14216             INTERFACE:    None called.
     3368    14217             INPUT:        TCX
     3369    14218                           DEVICE_CODE
     3370    14219                           MME_W1
     3371    14220                           BIT17FLAG
     3372    14221                           BIT13FLAG
     3373    14222                           BIT12FLAG
     3374    14223                           FIRMWARE_TYPE
     3375    14224                           LPFW_TYPE
     3376    14225                           RPFW_TYPE
     3377    14226             OUTPUT:       TOP$TCP(TCX)
     3378    14227             DESCRIPTION:  TCX    has    been    established    earlier    by
     3379    14228                           FIND_VACANT_ENTRY.   The  FICCDD  variable  in the
     3380    14229                           subexec  is saved, and  contains IOM, channel, and
     3381    14230                           device  numbers  for  the  the  test request.  The
     3382    14231                           device code just  determined by GET_DEVICE_CODE is
     3383    14232                           saved.  Using the test type field in FICCDD (which
     3384    14233                           incidentally  is  saved  in  TOP$TCP) the
     3385    14234                           TEST_TYPE  field  is  set,  to either 'PLT', 'ITR'
     3386    14235                           ,'MTR'  or  'MDR'.  The  TT  field in FICCDD is an
     3387    14236                           encoded  BCD character.   Finally, the  address of
     3388    14237                           the  pseudo device  and controller  SCT tables are
     3389    14238                           saved.
     3390    14239
     3391    14240                           Also,  the  firmware  types  which  were gotten in
     3392    14241                           GET_DEVICE_CODE  from  the  T&D configuration file
     3393    14242                           are  now  saved  into  TOP$TCP for use by
     3394    14243                           TOM$MOLTS in  determining what type of  ITR to run
     3395    14244                           against a MPC controller.
     3396    14245        */
     3397    14246        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:479  
     3398    14247    2   BUILD_TEST_CONTROL_ENTRY: PROC (TCX, SCT) ALTRET ;

  14247  7 006240   200034 741300       BUILD_TEST_* STX1  ! REASON+1,,AUTO

     3399    14248
     3400    14249    3      DCL TCX             UBIN WORD ALIGNED ;
     3401    14250           %SCT ;
     3402    14279    3      DCL SCT$             PTR ALIGNED ;
     3403    14280    3      DCL 1 SCT_ REDEF SCT$ ALIGNED,
     3404    14281    3            2 ADDR#        UBIN HALF UNAL,
     3405    14282    3            2 *            UBIN HALF UNAL ;
     3406    14283
     3407    14284           /* save flag, iom, channel, and device numbers */
     3408    14285    3      TOP$TCP.FICCDD.IOM#(TCX) = SCT.FICCDD.IOM# ;

  14285  7 006241   200035 470500                    LDP0    @TCX,,AUTO
         7 006242   000000 236100                    LDQ     0,,PR0
         7 006243   000122 402007                    MPY     82,DL
         7 006244   000001 736000                    QLS     1
         7 006245   200036 471500                    LDP1    @SCT,,AUTO
         7 006246   000003 473400 xsym               LDP3    TOT$DMC+3
         7 006247   000000 620006                    EAX0    0,QL
         7 006250   100000 236100                    LDQ     0,,PR1
         7 006251   030000 376003                    ANQ     12288,DU
         7 006252   000001 772000                    QRL     1
         7 006253   300001 676110                    ERQ     1,X0,PR3
         7 006254   034000 376003                    ANQ     14336,DU
         7 006255   300001 656110                    ERSQ    1,X0,PR3

     3409    14286    3      TOP$TCP.FICCDD.CHAN#(TCX) = SCT.FICCDD.CHANNEL# ;

  14286  7 006256   000000 236100                    LDQ     0,,PR0
         7 006257   000122 402007                    MPY     82,DL
         7 006260   000001 736000                    QLS     1
         7 006261   000003 473400 xsym               LDP3    TOT$DMC+3
         7 006262   000000 620006                    EAX0    0,QL
         7 006263   100000 236100                    LDQ     0,,PR1
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:480  
         7 006264   000011 736000                    QLS     9
         7 006265   300001 676110                    ERQ     1,X0,PR3
         7 006266   003770 376003                    ANQ     2040,DU
         7 006267   300001 656110                    ERSQ    1,X0,PR3

     3410    14287    3      TOP$TCP.FICCDD.DEV#(TCX) = SCT.FICCDD.DEVICE# ;

  14287  7 006270   000000 236100                    LDQ     0,,PR0
         7 006271   000122 402007                    MPY     82,DL
         7 006272   000001 736000                    QLS     1
         7 006273   000003 473400 xsym               LDP3    TOT$DMC+3
         7 006274   000000 620006                    EAX0    0,QL
         7 006275   100000 236100                    LDQ     0,,PR1
         7 006276   000011 736000                    QLS     9
         7 006277   300001 676110                    ERQ     1,X0,PR3
         7 006300   000003 376000 8                  ANQ     3
         7 006301   300001 656110                    ERSQ    1,X0,PR3

     3411    14288    3      TOP$TCP.FICCDD.FORMAT#(TCX) = SCT.FICCDD.FORMAT# ;

  14288  7 006302   000000 236100                    LDQ     0,,PR0
         7 006303   000122 402007                    MPY     82,DL
         7 006304   000001 736000                    QLS     1
         7 006305   000003 473400 xsym               LDP3    TOT$DMC+3
         7 006306   000000 620006                    EAX0    0,QL
         7 006307   100000 236100                    LDQ     0,,PR1
         7 006310   300001 676110                    ERQ     1,X0,PR3
         7 006311   040000 376003                    ANQ     16384,DU
         7 006312   300001 656110                    ERSQ    1,X0,PR3

     3412    14289    3      TOP$TCP.FICCDD.FLAG#(TCX) = SCT.FICCDD.FLAG# ;

  14289  7 006313   000000 236100                    LDQ     0,,PR0
         7 006314   000122 402007                    MPY     82,DL
         7 006315   000001 736000                    QLS     1
         7 006316   000003 473400 xsym               LDP3    TOT$DMC+3
         7 006317   000000 620006                    EAX0    0,QL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:481  
         7 006320   100000 236100                    LDQ     0,,PR1
         7 006321   300001 676110                    ERQ     1,X0,PR3
         7 006322   700000 376003                    ANQ     -32768,DU
         7 006323   300001 656110                    ERSQ    1,X0,PR3

     3413    14290           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:482  
     3414    14291           /* save test type as a string from the GCOS integer value */
     3415    14292    4      DO CASE (SCT.TEST_TYPE) ;

  14292  7 006324   100001 236100                    LDQ     1,,PR1
         7 006325   000036 772000                    QRL     30
         7 006326   000072 116007                    CMPQ    58,DL
         7 006327   006331 602006 7                  TNC     s:14292+5,QL
         7 006330   006613 710000 7                  TRA     s:14318
         7 006331   006543 710000 7                  TRA     s:14310
         7 006332   006613 710000 7                  TRA     s:14318
         7 006333   006613 710000 7                  TRA     s:14318
         7 006334   006613 710000 7                  TRA     s:14318
         7 006335   006613 710000 7                  TRA     s:14318
         7 006336   006613 710000 7                  TRA     s:14318
         7 006337   006613 710000 7                  TRA     s:14318
         7 006340   006613 710000 7                  TRA     s:14318
         7 006341   006613 710000 7                  TRA     s:14318
         7 006342   006613 710000 7                  TRA     s:14318
         7 006343   006613 710000 7                  TRA     s:14318
         7 006344   006613 710000 7                  TRA     s:14318
         7 006345   006613 710000 7                  TRA     s:14318
         7 006346   006613 710000 7                  TRA     s:14318
         7 006347   006613 710000 7                  TRA     s:14318
         7 006350   006613 710000 7                  TRA     s:14318
         7 006351   006613 710000 7                  TRA     s:14318
         7 006352   006613 710000 7                  TRA     s:14318
         7 006353   006505 710000 7                  TRA     s:14304
         7 006354   006473 710000 7                  TRA     s:14302
         7 006355   006517 710000 7                  TRA     s:14306
         7 006356   006423 710000 7                  TRA     s:14294
         7 006357   006613 710000 7                  TRA     s:14318
         7 006360   006613 710000 7                  TRA     s:14318
         7 006361   006613 710000 7                  TRA     s:14318
         7 006362   006613 710000 7                  TRA     s:14318
         7 006363   006613 710000 7                  TRA     s:14318
         7 006364   006613 710000 7                  TRA     s:14318
         7 006365   006613 710000 7                  TRA     s:14318
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:483  
         7 006366   006613 710000 7                  TRA     s:14318
         7 006367   006613 710000 7                  TRA     s:14318
         7 006370   006613 710000 7                  TRA     s:14318
         7 006371   006613 710000 7                  TRA     s:14318
         7 006372   006447 710000 7                  TRA     s:14298
         7 006373   006613 710000 7                  TRA     s:14318
         7 006374   006613 710000 7                  TRA     s:14318
         7 006375   006613 710000 7                  TRA     s:14318
         7 006376   006531 710000 7                  TRA     s:14308
         7 006377   006613 710000 7                  TRA     s:14318
         7 006400   006555 710000 7                  TRA     s:14312
         7 006401   006613 710000 7                  TRA     s:14318
         7 006402   006435 710000 7                  TRA     s:14296
         7 006403   006613 710000 7                  TRA     s:14318
         7 006404   006613 710000 7                  TRA     s:14318
         7 006405   006613 710000 7                  TRA     s:14318
         7 006406   006613 710000 7                  TRA     s:14318
         7 006407   006613 710000 7                  TRA     s:14318
         7 006410   006613 710000 7                  TRA     s:14318
         7 006411   006613 710000 7                  TRA     s:14318
         7 006412   006613 710000 7                  TRA     s:14318
         7 006413   006613 710000 7                  TRA     s:14318
         7 006414   006461 710000 7                  TRA     s:14300
         7 006415   006613 710000 7                  TRA     s:14318
         7 006416   006613 710000 7                  TRA     s:14318
         7 006417   006601 710000 7                  TRA     s:14316
         7 006420   006613 710000 7                  TRA     s:14318
         7 006421   006613 710000 7                  TRA     s:14318
         7 006422   006567 710000 7                  TRA     s:14314

     3416    14293    4         CASE (%MDC) ;

     3417    14294    4            TOP$TCP.TEST_TYPE(TCX) = 'MDC' ;

  14294  7 006423   000000 236100                    LDQ     0,,PR0
         7 006424   000122 402007                    MPY     82,DL
         7 006425   000001 736000                    QLS     1
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:484  
         7 006426   000003 473400 xsym               LDP3    TOT$DMC+3
         7 006427   000000 620006                    EAX0    0,QL
         7 006430   000120 236000 6                  LDQ     CRLF_+10
         7 006431   300002 676110                    ERQ     2,X0,PR3
         7 006432   000010 376000 8                  ANQ     8
         7 006433   300002 656110                    ERSQ    2,X0,PR3
         7 006434   006615 710000 7                  TRA     s:14322

     3418    14295    4         CASE (%MDR) ;

     3419    14296    4            TOP$TCP.TEST_TYPE(TCX) = 'MDR' ;

  14296  7 006435   000000 236100                    LDQ     0,,PR0
         7 006436   000122 402007                    MPY     82,DL
         7 006437   000001 736000                    QLS     1
         7 006440   000003 473400 xsym               LDP3    TOT$DMC+3
         7 006441   000000 620006                    EAX0    0,QL
         7 006442   000113 236000 6                  LDQ     CRLF_+5
         7 006443   300002 676110                    ERQ     2,X0,PR3
         7 006444   000010 376000 8                  ANQ     8
         7 006445   300002 656110                    ERSQ    2,X0,PR3
         7 006446   006615 710000 7                  TRA     s:14322

     3420    14297    4         CASE (%MFC) ;

     3421    14298    4            TOP$TCP.TEST_TYPE(TCX) = 'MFC' ;

  14298  7 006447   000000 236100                    LDQ     0,,PR0
         7 006450   000122 402007                    MPY     82,DL
         7 006451   000001 736000                    QLS     1
         7 006452   000003 473400 xsym               LDP3    TOT$DMC+3
         7 006453   000000 620006                    EAX0    0,QL
         7 006454   000114 236000 6                  LDQ     CRLF_+6
         7 006455   300002 676110                    ERQ     2,X0,PR3
         7 006456   000010 376000 8                  ANQ     8
         7 006457   300002 656110                    ERSQ    2,X0,PR3
         7 006460   006615 710000 7                  TRA     s:14322
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:485  

     3422    14299    4         CASE (%MMT) ;

     3423    14300    4            TOP$TCP.TEST_TYPE(TCX) = 'MTR' ;

  14300  7 006461   000000 236100                    LDQ     0,,PR0
         7 006462   000122 402007                    MPY     82,DL
         7 006463   000001 736000                    QLS     1
         7 006464   000003 473400 xsym               LDP3    TOT$DMC+3
         7 006465   000000 620006                    EAX0    0,QL
         7 006466   000112 236000 6                  LDQ     CRLF_+4
         7 006467   300002 676110                    ERQ     2,X0,PR3
         7 006470   000010 376000 8                  ANQ     8
         7 006471   300002 656110                    ERSQ    2,X0,PR3
         7 006472   006615 710000 7                  TRA     s:14322

     3424    14301    4         CASE (%MPC) ;

     3425    14302    4            TOP$TCP.TEST_TYPE(TCX) = 'ITR' ;

  14302  7 006473   000000 236100                    LDQ     0,,PR0
         7 006474   000122 402007                    MPY     82,DL
         7 006475   000001 736000                    QLS     1
         7 006476   000003 473400 xsym               LDP3    TOT$DMC+3
         7 006477   000000 620006                    EAX0    0,QL
         7 006500   000117 236000 6                  LDQ     CRLF_+9
         7 006501   300002 676110                    ERQ     2,X0,PR3
         7 006502   000010 376000 8                  ANQ     8
         7 006503   300002 656110                    ERSQ    2,X0,PR3
         7 006504   006615 710000 7                  TRA     s:14322

     3426    14303    4         CASE (%MTC) ;

     3427    14304    4            TOP$TCP.TEST_TYPE(TCX) = 'MTC' ;

  14304  7 006505   000000 236100                    LDQ     0,,PR0
         7 006506   000122 402007                    MPY     82,DL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:486  
         7 006507   000001 736000                    QLS     1
         7 006510   000003 473400 xsym               LDP3    TOT$DMC+3
         7 006511   000000 620006                    EAX0    0,QL
         7 006512   000115 236000 6                  LDQ     CRLF_+7
         7 006513   300002 676110                    ERQ     2,X0,PR3
         7 006514   000010 376000 8                  ANQ     8
         7 006515   300002 656110                    ERSQ    2,X0,PR3
         7 006516   006615 710000 7                  TRA     s:14322

     3428    14305    4         CASE (%MTG) ;

     3429    14306    4            TOP$TCP.TEST_TYPE(TCX) = 'MTG' ;

  14306  7 006517   000000 236100                    LDQ     0,,PR0
         7 006520   000122 402007                    MPY     82,DL
         7 006521   000001 736000                    QLS     1
         7 006522   000003 473400 xsym               LDP3    TOT$DMC+3
         7 006523   000000 620006                    EAX0    0,QL
         7 006524   000107 236000 6                  LDQ     CRLF_+1
         7 006525   300002 676110                    ERQ     2,X0,PR3
         7 006526   000010 376000 8                  ANQ     8
         7 006527   300002 656110                    ERSQ    2,X0,PR3
         7 006530   006615 710000 7                  TRA     s:14322

     3430    14307    4         CASE (%NIO) ;

     3431    14308    4            TOP$TCP.TEST_TYPE(TCX) = 'NIO' ;

  14308  7 006531   000000 236100                    LDQ     0,,PR0
         7 006532   000122 402007                    MPY     82,DL
         7 006533   000001 736000                    QLS     1
         7 006534   000003 473400 xsym               LDP3    TOT$DMC+3
         7 006535   000000 620006                    EAX0    0,QL
         7 006536   000240 236000 6                  LDQ     CRLF_+90
         7 006537   300002 676110                    ERQ     2,X0,PR3
         7 006540   000010 376000 8                  ANQ     8
         7 006541   300002 656110                    ERSQ    2,X0,PR3
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:487  
         7 006542   006615 710000 7                  TRA     s:14322

     3432    14309    4         CASE (%POLT) ;

     3433    14310    4            TOP$TCP.TEST_TYPE(TCX) = 'PLT' ;

  14310  7 006543   000000 236100                    LDQ     0,,PR0
         7 006544   000122 402007                    MPY     82,DL
         7 006545   000001 736000                    QLS     1
         7 006546   000003 473400 xsym               LDP3    TOT$DMC+3
         7 006547   000000 620006                    EAX0    0,QL
         7 006550   000110 236000 6                  LDQ     CRLF_+2
         7 006551   300002 676110                    ERQ     2,X0,PR3
         7 006552   000010 376000 8                  ANQ     8
         7 006553   300002 656110                    ERSQ    2,X0,PR3
         7 006554   006615 710000 7                  TRA     s:14322

     3434    14311    4         CASE (%RPM) ;

     3435    14312    4            TOP$TCP.TEST_TYPE(TCX) = 'RPM' ;

  14312  7 006555   000000 236100                    LDQ     0,,PR0
         7 006556   000122 402007                    MPY     82,DL
         7 006557   000001 736000                    QLS     1
         7 006560   000003 473400 xsym               LDP3    TOT$DMC+3
         7 006561   000000 620006                    EAX0    0,QL
         7 006562   000241 236000 6                  LDQ     CRLF_+91
         7 006563   300002 676110                    ERQ     2,X0,PR3
         7 006564   000010 376000 8                  ANQ     8
         7 006565   300002 656110                    ERSQ    2,X0,PR3
         7 006566   006615 710000 7                  TRA     s:14322

     3436    14313    4         CASE (%MDS);

     3437    14314    4            TOP$TCP.TEST_TYPE(TCX) = 'MDS' ;

  14314  7 006567   000000 236100                    LDQ     0,,PR0
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:488  
         7 006570   000122 402007                    MPY     82,DL
         7 006571   000001 736000                    QLS     1
         7 006572   000003 473400 xsym               LDP3    TOT$DMC+3
         7 006573   000000 620006                    EAX0    0,QL
         7 006574   000116 236000 6                  LDQ     CRLF_+8
         7 006575   300002 676110                    ERQ     2,X0,PR3
         7 006576   000010 376000 8                  ANQ     8
         7 006577   300002 656110                    ERSQ    2,X0,PR3
         7 006600   006615 710000 7                  TRA     s:14322

     3438    14315    4         CASE (%TMD);

     3439    14316    4            TOP$TCP.TEST_TYPE(TCX) = 'TMD' ;

  14316  7 006601   000000 236100                    LDQ     0,,PR0
         7 006602   000122 402007                    MPY     82,DL
         7 006603   000001 736000                    QLS     1
         7 006604   000003 473400 xsym               LDP3    TOT$DMC+3
         7 006605   000000 620006                    EAX0    0,QL
         7 006606   000111 236000 6                  LDQ     CRLF_+3
         7 006607   300002 676110                    ERQ     2,X0,PR3
         7 006610   000010 376000 8                  ANQ     8
         7 006611   300002 656110                    ERSQ    2,X0,PR3
         7 006612   006615 710000 7                  TRA     s:14322

     3440    14317    4         CASE (ELSE) ;

     3441    14318    4            ALTRETURN ;

  14318  7 006613   200034 221300                    LDX1  ! REASON+1,,AUTO
         7 006614   000000 702211                    TSX2  ! 0,X1

     3442    14319    4      END /* CASE */ ;

     3443    14320
     3444    14321           /* save device code */
     3445    14322    3      TOP$TCP.DEVICE_CODE(TCX) = SCT.DEVICE_CODE ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:489  

  14322  7 006615   000000 236100                    LDQ     0,,PR0
         7 006616   000122 402007                    MPY     82,DL
         7 006617   000001 736000                    QLS     1
         7 006620   000000 620006                    EAX0    0,QL
         7 006621   100001 236100                    LDQ     1,,PR1
         7 006622   000025 772000                    QRL     21
         7 006623   000077 376007                    ANQ     63,DL
         7 006624   000000 621006                    EAX1    0,QL
         7 006625   000003 473400 xsym               LDP3    TOT$DMC+3
         7 006626   300007 741110                    STX1    7,X0,PR3

     3446    14323
     3447    14324           /* save SCT addresses for controller and device */
     3448    14325    3      SCT$ = ADDR (TOP$SCT.DV(TCX)) ;

  14325  7 006627   000000 235100                    LDA     0,,PR0
         7 006630   000003 735000                    ALS     3
         7 006631   000004 633405 xsym               EPPR3   TOP$SCT+4,AL
         7 006632   200037 453500                    STP3    SCT$,,AUTO

     3449    14326    3      TOP$TCP.ADR.SCT(TCX) = SCT_.ADDR# ;

  14326  7 006633   000000 236100                    LDQ     0,,PR0
         7 006634   000122 402007                    MPY     82,DL
         7 006635   000001 736000                    QLS     1
         7 006636   200037 220100                    LDX0    SCT$,,AUTO
         7 006637   000003 474400 xsym               LDP4    TOT$DMC+3
         7 006640   400010 740106                    STX0    8,QL,PR4

     3450    14327    3      SCT$ = ADDR (TOP$SCT.CN(TCX)) ;

  14327  7 006641   000000 235100                    LDA     0,,PR0
         7 006642   000003 735000                    ALS     3
         7 006643   000000 634405 xsym               EPPR4   TOP$SCT,AL
         7 006644   200037 454500                    STP4    SCT$,,AUTO

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:490  
     3451    14328    3      TOP$TCP.ADR.CSCT(TCX) = SCT_.ADDR# ;

  14328  7 006645   000000 236100                    LDQ     0,,PR0
         7 006646   000122 402007                    MPY     82,DL
         7 006647   000001 736000                    QLS     1
         7 006650   200037 220100                    LDX0    SCT$,,AUTO
         7 006651   000003 473400 xsym               LDP3    TOT$DMC+3
         7 006652   300010 440106                    SXL0    8,QL,PR3

     3452    14329           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:491  
     3453    14330           /* save special bits of the SCT */
     3454    14331    3      TOP$TCP.SCT.BIT12(TCX) = SCT.BIT12 ;

  14331  7 006653   000000 236100                    LDQ     0,,PR0
         7 006654   000122 402007                    MPY     82,DL
         7 006655   000001 736000                    QLS     1
         7 006656   000003 473400 xsym               LDP3    TOT$DMC+3
         7 006657   000000 621006                    EAX1    0,QL
         7 006660   100005 236100                    LDQ     5,,PR1
         7 006661   000013 772000                    QRL     11
         7 006662   300012 676111                    ERQ     10,X1,PR3
         7 006663   000100 376003                    ANQ     64,DU
         7 006664   300012 656111                    ERSQ    10,X1,PR3

     3455    14332    3      TOP$TCP.SCT.BIT13(TCX) = SCT.BIT13 ;

  14332  7 006665   000000 236100                    LDQ     0,,PR0
         7 006666   000122 402007                    MPY     82,DL
         7 006667   000001 736000                    QLS     1
         7 006670   000003 473400 xsym               LDP3    TOT$DMC+3
         7 006671   000000 621006                    EAX1    0,QL
         7 006672   100004 236100                    LDQ     4,,PR1
         7 006673   000021 736000                    QLS     17
         7 006674   300012 676111                    ERQ     10,X1,PR3
         7 006675   000200 376003                    ANQ     128,DU
         7 006676   300012 656111                    ERSQ    10,X1,PR3

     3456    14333    3      TOP$TCP.SCT.BIT17(TCX) = SCT.BIT17 ;

  14333  7 006677   000000 236100                    LDQ     0,,PR0
         7 006700   000122 402007                    MPY     82,DL
         7 006701   000001 736000                    QLS     1
         7 006702   000003 473400 xsym               LDP3    TOT$DMC+3
         7 006703   000000 621006                    EAX1    0,QL
         7 006704   100004 236100                    LDQ     4,,PR1
         7 006705   000011 736000                    QLS     9
         7 006706   300012 676111                    ERQ     10,X1,PR3
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:492  
         7 006707   000400 376003                    ANQ     256,DU
         7 006710   300012 656111                    ERSQ    10,X1,PR3

     3457    14334
     3458    14335           /* save Firmware types for controller, printer, and reader-punch */
     3459    14336    3      TOP$TCP.FIRMWARE.TYPE(TCX) = SCT.FIRMWARE.TYPE# ;

  14336  7 006711   000000 236100                    LDQ     0,,PR0
         7 006712   000122 402007                    MPY     82,DL
         7 006713   000001 736000                    QLS     1
         7 006714   100001 235100                    LDA     1,,PR1
         7 006715   000000 621006                    EAX1    0,QL
         7 006716   100002 236100                    LDQ     2,,PR1
         7 006717   000022 773000                    LRL     18
         7 006720   000027 376000 xsym               ANQ     B_VECTNIL+23
         7 006721   000003 473400 xsym               LDP3    TOT$DMC+3
         7 006722   300013 756111                    STQ     11,X1,PR3

     3460    14337    3      TOP$TCP.FIRMWARE.LP_TYPE(TCX) = SCT.FIRMWARE.LP# ;

  14337  7 006723   000000 236100                    LDQ     0,,PR0
         7 006724   000122 402007                    MPY     82,DL
         7 006725   000001 736000                    QLS     1
         7 006726   100002 235100                    LDA     2,,PR1
         7 006727   000000 621006                    EAX1    0,QL
         7 006730   100003 236100                    LDQ     3,,PR1
         7 006731   000022 773000                    LRL     18
         7 006732   000027 376000 xsym               ANQ     B_VECTNIL+23
         7 006733   000003 473400 xsym               LDP3    TOT$DMC+3
         7 006734   300014 756111                    STQ     12,X1,PR3

     3461    14338    3      TOP$TCP.FIRMWARE.RP_TYPE(TCX) = SCT.FIRMWARE.RP# ;

  14338  7 006735   000000 236100                    LDQ     0,,PR0
         7 006736   000122 402007                    MPY     82,DL
         7 006737   000001 736000                    QLS     1
         7 006740   100003 235100                    LDA     3,,PR1
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:493  
         7 006741   000000 621006                    EAX1    0,QL
         7 006742   100004 236100                    LDQ     4,,PR1
         7 006743   000022 773000                    LRL     18
         7 006744   000027 376000 xsym               ANQ     B_VECTNIL+23
         7 006745   000003 473400 xsym               LDP3    TOT$DMC+3
         7 006746   300015 756111                    STQ     13,X1,PR3

     3462    14339
     3463    14340           /* Save MPC and Device Model names */
     3464    14341    3      TOP$TCP.DEVICE_MODEL (TCX) = SCT.MODEL;

  14341  7 006747   000000 236100                    LDQ     0,,PR0
         7 006750   000122 402007                    MPY     82,DL
         7 006751   000001 736000                    QLS     1
         7 006752   000002 736000                    QLS     2
         7 006753   000003 473400 xsym               LDP3    TOT$DMC+3
         7 006754   040106 100500                    MLR     fill='040'O
         7 006755   100005 200010                    ADSC9   5,,PR1                   cn=1,n=8
         7 006756   300004 600010                    ADSC9   4,Q,PR3                  cn=3,n=8

     3465    14342    3      TOP$TCP.MPC_MODEL (TCX) = SCT.MPC_MODEL;

  14342  7 006757   000000 236100                    LDQ     0,,PR0
         7 006760   000122 402007                    MPY     82,DL
         7 006761   000001 736000                    QLS     1
         7 006762   000002 736000                    QLS     2
         7 006763   000003 473400 xsym               LDP3    TOT$DMC+3
         7 006764   040106 100500                    MLR     fill='040'O
         7 006765   100007 200010                    ADSC9   7,,PR1                   cn=1,n=8
         7 006766   300002 600010                    ADSC9   2,Q,PR3                  cn=3,n=8

     3466    14343    3      RETURN ;

  14343  7 006767   200034 221300                    LDX1  ! REASON+1,,AUTO
         7 006770   000001 702211                    TSX2  ! 1,X1

     3467    14344
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:494  
     3468    14345    3   END BUILD_TEST_CONTROL_ENTRY ;
     3469    14346    2   END TOP$MME_SCTCMP ;
     3470    14347        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:495  
     3471    14348        /*I* NAME:         TOP$MME_TESTIO
     3472    14349             INTERFACE:    FRAME_DATA_AREA
     3473    14350                           GET_SCT_ADR
     3474    14351                           MATCH_SCT_ADR
     3475    14352                           COPY_IO_ENTRY
     3476    14353                           SET_TDIO_FPT
     3477    14354                           BUILD_DCW_LIST
     3478    14355                           ISSUE_IO
     3479    14356                           SET_RETURN_VALUES
     3480    14357             INPUT:        MME_W1 (bits 0-17) = address of 11 word GCOS I/O entry
     3481    14358             OUTPUT:       Q - channel lostit time
     3482    14359                           A - time of day, in 1/64 milliseconds since 12:00 am
     3483    14360                           X4 - fake address for MME HUNGTM
     3484    14361                           RETURN_DELTA - 5 = normal return
     3485    14362             DESCRIPTION:  MME TESTIO is the main MME for POLTS and MOLTS
     3486    14363                           for doing test  I/O operations to peripherals.
     3487    14364                           It is very  complex in the CP-6 implementation
     3488    14365                           because  TOLTS  must  do  a  lot  of what GCOS
     3489    14366                           normally does.  Thus the documentation will be
     3490    14367                           quite  complex,  and  lengthly  at times.  The
     3491    14368                           author will also take the liberty at this time
     3492    14369                           to document some  little known facts about the
     3493    14370                           operation  of MDRs  and ITRs,  which had to be
     3494    14371                           researched   for   CP-6,   and   will  now  be
     3495    14372                           documented for posterity.
     3496    14373
     3497    14374                           Sections of documentation which follow:
     3498    14375
     3499    14376                           a.  Test I/O in CP-6 overview, Event handling,
     3500    14377                               processing I/O completions and Courtesy Calls.
     3501    14378                           b.  ITRs and MDRs an overview
     3502    14379                           c.  Hardware actions which are used by ITRs and MDRs.
     3503    14380                           d.  ITR operation in CP-6.
     3504    14381                           e.  MDR operation in CP-6.
     3505    14382                           f.  Program documentation for TOP$MME_TESTIO.
     3506    14383
     3507    14384
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:496  
     3508    14385                           a.  TEST I/O IN CP-6 an overview.
     3509    14386
     3510    14387                           All  test I/O  to peripherals  in CP-6 is done
     3511    14388                           through  a special call  to the CP-6 operating
     3512    14389                           system.  M$TDIO is  provided expressly for the
     3513    14390                           use  of  a  T&D  user,  and is documented more
     3514    14391                           fully  in the CP-6  Monitor Services Reference
     3515    14392                           Manual.   The  casual  reader  is  directed to
     3516    14393                           study section 9 before proceeding here.
     3517    14394
     3518    14395                           POLTS and MOLTS do a MME TESTIO when an I/O is
     3519    14396                           to  done to  a peripheral,  passing an 11 word
     3520    14397                           I/O  entry which corresponds  to the I/O entry
     3521    14398                           for   GCOS  III.    This  routine   takes  the
     3522    14399                           pertinent  information from the  I/O entry and
     3523    14400                           builds the FPT for M$TDIO for CP-6.  A call to
     3524    14401                           M$TDIO will issue the I/O.  In most cases, the
     3525    14402                           I/O is "no wait"  I/O in the CP-6 terminology.
     3526    14403                           That  is, control  is returned  immediately to
     3527    14404                           the calling program,  before the I/O operation
     3528    14405                           completes.   (This allows  the calling program
     3529    14406                           to  do  other  things.)   POLTS and MOLTS will
     3530    14407                           normally have  other things to do,  and in any
     3531    14408                           case,  have  their  own  internal  dispatchers
     3532    14409                           which  govern  their  activity.   When the I/O
     3533    14410                           completes, CP-6 pays  an "Event" to TOLTS.  An
     3534    14411                           Event  is the equivalent  of the GCOS Courtesy
     3535    14412                           Call.      The     TOLTS     Event    Handler,
     3536    14413                           TOE$EVENT_HANDLER  was  established  at  TOLTS
     3537    14414                           initialization time.  It is now entered with a
     3538    14415                           frame  on  the  TCB  frame,  which contains an
     3539    14416                           Event ID, a unique indentifier of the I/O just
     3540    14417                           completing,  and status.  The  Event ID allows
     3541    14418                           identification  of   not  only  which  subexec
     3542    14419                           POLTS,MOLTS,COLTS)  issued  the  I/O, but also
     3543    14420                           which  of eight  test pages  in was  for.  The
     3544    14421                           Event  Handler  calls  the  TOLTS  dispatcher,
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:497  
     3545    14422                           TOD$DISPATCHER,  to  queue  the I/O completion
     3546    14423                           for  servicing  at  a  later  time.   (This is
     3547    14424                           necessary  in order  to avoid  race conditions
     3548    14425                           within  the software.   First of  all, none of
     3549    14426                           the  Courtesy Call  routines for  the subexecs
     3550    14427                           are  reentrant.    Secondly,  neither  is  the
     3551    14428                           current implementation of  MME GEENDC in CP-6.
     3552    14429                           So  the dispatcher  queue is  serviced only at
     3553    14430                           specific  times  when  it  is  known that race
     3554    14431                           conditions will not  occur.  This servicing is
     3555    14432                           triggered   from  the   TOLTS  Fault  Handler,
     3556    14433                           TOF$FAULTS.)
     3557    14434
     3558    14435                           When an I/O completion  is to be serviced, the
     3559    14436                           dispatcher  will call  an entry  point in this
     3560    14437                           main   main   module,   TOP$POLTS_IO,  passing
     3561    14438                           through  memory 2  variables, TOP$EVENT_ID and
     3562    14439                           TOP$STATUS.     (These   aren't    passed   as
     3563    14440                           parameters    because   of    the   structural
     3564    14441                           restrictions of PL6.  Granted, a kludge here.)
     3565    14442                           The  entry point in  turn calls the completion
     3566    14443                           processing    routine,   TOP$TIO_DONE,   which
     3567    14444                           returns the staus of  the I/O operation to the
     3568    14445                           test page  and pays a Courtesy  Call to notify
     3569    14446                           the subexec of the  completion.  It is then up
     3570    14447                           to  the subexec  to determine  whether the I/O
     3571    14448                           was good or bad.
     3572    14449
     3573    14450                           The  above  sequence  of  operations  is quite
     3574    14451                           simple  and  straightforward  for  POLTS  I/O.
     3575    14452                           However,  ITR and MDR  I/O complicate things a
     3576    14453                           bit,  especially in  the area  of building DCW
     3577    14454                           lists and handling  I/O completions and status
     3578    14455                           returns.   In order to  more easily understand
     3579    14456                           the  CP-6  implementation  in  these areas, we
     3580    14457                           should  first  understand  how  ITRs  and MDRs
     3581    14458                           really work.
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:498  
     3582    14459
     3583    14460
     3584    14461                           b.  ITRs and MDRs an overview
     3585    14462
     3586    14463                           ITRs (Isolation Test Routines) are a series of
     3587    14464                           MPC  firmware  overlays  which  test different
     3588    14465                           portions of a MPC.   They require that the T&D
     3589    14466                           program  allocate  the  entire  MPC to itself,
     3590    14467                           thus  precluding any  user activity  while the
     3591    14468                           testing  is going  on.  Honeywell  MPCs have a
     3592    14469                           great  deal  of  hardware  features built into
     3593    14470                           them to support both ITR and MDR operation, as
     3594    14471                           will  be  discussed   in  section  c  of  this
     3595    14472                           documentation.  In general, for an ITR to run,
     3596    14473                           the  MPC  must   be  allocated,  the  firmware
     3597    14474                           overlays  run, and the  MPC either (1) stopped
     3598    14475                           on an error condition, or (2) the MPC firmware
     3599    14476                           rebooted and the MPC returned to operation.
     3600    14477
     3601    14478                           MDRs(Microprogrammed  Device  Routines)  are a
     3602    14479                           series  of  MPC  firmware  segments which test
     3603    14480                           peripherals connected to the MPC.  They do not
     3604    14481                           require that the MPC be deallocated, and thus,
     3605    14482                           user activity can continue while testing is in
     3606    14483                           progress.  But there is a very subtle point to
     3607    14484                           be  understood here.  While  user activity can
     3608    14485                           continue while MDR testing is in progress, the
     3609    14486                           MPC  is  actually  suspended  for  very  brief
     3610    14487                           periods of time while testing is done.
     3611    14488
     3612    14489
     3613    14490                           c.  HARDWARE SUPPORT OF ITRS AND MDRS
     3614    14491
     3615    14492                           ITRs and MDRs require following support on the
     3616    14493                           part of the hardware and the operating system,
     3617    14494                           in this case CP-6 and TOLTS.
     3618    14495
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:499  
     3619    14496                           (1) "SUSPEND" MPC command.
     3620    14497                               Before any ITR testing is done, and before each
     3621    14498                               MDR overlay is sent to the MPC, a suspend
     3622    14499                               command is issued to notify the operating
     3623    14500                               system that the MPC is about to be suspended,
     3624    14501                               and that is should not issue any new I/O until
     3625    14502                               it is released.  This feature is especially
     3626    14503                               useful in multi computer configurations where
     3627    14504                               2 or more computers may be connected to the
     3628    14505                               same MPC.
     3629    14506
     3630    14507                               A suspend command is a special controller
     3631    14508                               command which is issued to device 0.  There is
     3632    14509                               no current hardware restriction as to what the
     3633    14510                               channel the suspend command must be issued over.
     3634    14511
     3635    14512                               The MPC will generate a special interrupt on
     3636    14513                               channel 0 of every PSI that is connected to it,
     3637    14514                               notifying all systems that it will be suspended.
     3638    14515                               It then waits for all I/O on the MPC to terminate.
     3639    14516                               When they do, it returns a terminate interrupt
     3640    14517                               to the system, indicating the MPC is suspended.
     3641    14518                               It then puts itself into a mode where it will
     3642    14519                               (a) ignore all other PSIs, (b) accept commands
     3643    14520                               only over the channel on the PSI that issued
     3644    14521                               the suspend command.
     3645    14522
     3646    14523                           (2) "IPCW" command.
     3647    14524                               The IPCW (Initialize PCW) command results in a
     3648    14525                               DC static initialize of the MPC, and is used
     3649    14526                               prior to ITR testing to put the MPC in a known
     3650    14527                               state.  Once the MPC is suspended, software
     3651    14528                               issues the IPCW command which results in a
     3652    14529                               RSO(Reset Out) command being issued to the MPC.
     3653    14530                               The MPC drops its OPI(Operational In) line,
     3654    14531                               executes the BLT(Basic Logic Test) in ROM
     3655    14532                               to verify the basic integrity of the MPC.  If
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:500  
     3656    14533                               the BLT runs good, it raises the OPI line, and
     3657    14534                               goes into a special wait loop, waiting for
     3658    14535                               either a Write Control Store command or a
     3659    14536                               Branch to Device Boot Routine command, and will
     3660    14537                               accept it only on the boot channel for the MPC
     3661    14538                               which are specified via swichtes on the
     3662    14539                               maintenance panel.  Any commands over other PSIs
     3663    14540                               will be ignored.  (In the newer controllers, the
     3664    14541                               boot commands can come over any channel.)  It
     3665    14542                               is at this point that ITR testing can commence.
     3666    14543
     3667    14544                               If BLT fails, it will stop the MPC with an error
     3668    14545                               indication on the maintenance panel.  Also, it will
     3669    14546                               not raise OPI.  (Software will detect this and
     3670    14547                               report that the BLT failed.  There is no explicit
     3671    14548                               indication to the system that the BLT failed.)
     3672    14549
     3673    14550                           (3) Write Control Store command
     3674    14551                               An ITR overlay is written to the MPC using the
     3675    14552                               Write Control Store command.  An overlay is
     3676    14553                               read into the second Control Store segment,
     3677    14554                               addresses 512-1023 by the BLT.  The BLT will
     3678    14555                               return terminate ready status if there is no
     3679    14556                               checksum error, or non ready status if there
     3680    14557                               is.  The BLT will then transfer control to hex
     3681    14558                               address 202 and turn control of the MPC over to
     3682    14559                               to the ITR.  The ITR will return a special
     3683    14560                               interrupt when it completes and finds nothing
     3684    14561                               wrong.  It will simply stop if it finds a
     3685    14562                               problem, with an error indication on the
     3686    14563                               maintenance panel.
     3687    14564
     3688    14565                               If this is the first ITR overlay, and the BLT
     3689    14566                               failed, the WCS command should get rejected by
     3690    14567                               the IOM or MPC, and the software should surmise
     3691    14568                               that the BLT failed.  It there are other MPC-IOM
     3692    14569                               problems, the software will get back non
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:501  
     3693    14570                               ready status and assume something is wrong.
     3694    14571                               Finally, if the special interrupt never occurs,
     3695    14572                               the software should also surmise that the ITR
     3696    14573                               failed, and take appropriate action.
     3697    14574
     3698    14575                           (4) RELEASE command
     3699    14576                               The Release command performs the opposite function
     3700    14577                               of the Suspend command.  It sends out a special
     3701    14578                               interrupt on channel 0 of every connected PSI
     3702    14579                               indicating that the MPC will be put back into
     3703    14580                               operation, and sends back a terminate interrupt
     3704    14581                               indicating the MPC is ready to go again.
     3705    14582                           (5) EXECUTE MDR command
     3706    14583                               Both tape/disk and unit record MPCs perform MDRs
     3707    14584                               differently, due to diferent firmware restrictions.
     3708    14585                               Basically, for disk and tape, a MDR overlay is
     3709    14586                               written into MPC Main Memory first, and then
     3710    14587                               an Execute MDR command issued.  The MDR overlay
     3711    14588                               is first copied into the second Control Store
     3712    14589                               segment and then executed.  The MPC must be
     3713    14590                               suspended to preclude all user activity
     3714    14591                               temporarily because disk and tape MDRs need
     3715    14592                               exclusive use of the MPC for real time timing
     3716    14593                               tests, and they cannot share segment 2 with
     3717    14594                               other users while they are running.  The MPC
     3718    14595                               is released once the MDR is done.
     3719    14596
     3720    14597                               Basically, for unit record MDRs, a overlay is
     3721    14598                               also written into MPC Main Memory first, and
     3722    14599                               then an Execute MDR command issued.  The
     3723    14600                               overlay is then copied into the second segment
     3724    14601                               of Control Store and executed.  The MPC need not
     3725    14602                               be explicitly suspend and released ;  however,
     3726    14603                               user activity is held up by the firmware while
     3727    14604                               a MDR is running.  Obviously, there is a limit
     3728    14605                               on how long a unit record MDR can run.
     3729    14606
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:502  
     3730    14607
     3731    14608                           d.  ITR OPERATION IN CP-6
     3732    14609
     3733    14610                           In  order  to  run  an  ITR,  the  MPC must be
     3734    14611                           partitioned from the system using SYSCON.  The
     3735    14612                           implications of  this requirement are obvious.
     3736    14613                           However,  it  greatly  simplifies  the  job of
     3737    14614                           peripheral   allocation   when   an   ITR   is
     3738    14615                           requested.   The  allocation  has already been
     3739    14616                           done by an operator on site.
     3740    14617
     3741    14618                           The  ITR  driver  running  under  MOLTS does a
     3742    14619                           suspend  command to suspend  the MPC.  In CP-6
     3743    14620                           this poses no problem because by this point no
     3744    14621                           one else  is running on the  MPC.  The special
     3745    14622                           interrupt from the  command is ignored at this
     3746    14623                           point by TOLTS.  (We will discuss very shortly
     3747    14624                           how  special  interrupts  are  handled for ITR
     3748    14625                           I/O.)    The  driver  than   issues  the  IPCW
     3749    14626                           command, using a  specially defined MME.  This
     3750    14627                           command initializes  the MPC and puts  it in a
     3751    14628                           state ready for  testing.  Finally, the driver
     3752    14629                           will issue the sequence of Write Control Store
     3753    14630                           commands until they are  all done or one times
     3754    14631                           out.
     3755    14632
     3756    14633                           Now comes  the hard part.  In  the GCOS world,
     3757    14634                           IOS  does a  great deal  of kludging around to
     3758    14635                           make   thins  simple   for  the   ITR  driver.
     3759    14636                           However, in CP-6, all that kludging around had
     3760    14637                           to be done by TOLTS because CP-6 would have no
     3761    14638                           part  of  it.   The  key  is understanding the
     3762    14639                           handling  of special  interrupts on  the Write
     3763    14640                           Control Store  commands.  If bit 29  in word 7
     3764    14641                           of  the I/O  entry is  set on  a Write Control
     3765    14642                           Store  command(specified   in  word  4),  both
     3766    14643                           terminate  and special interrupts  for the I/O
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:503  
     3767    14644                           must be handled  differently.  The rules which
     3768    14645                           IOS  follows,  and  thus  must be simulated by
     3769    14646                           TOLTS are:
     3770    14647
     3771    14648                           (1) If the terminate interrupt returns ready status,
     3772    14649                               ignore it , and return the special interrupt to
     3773    14650                               MOLTS with the special interrupt status.
     3774    14651                           (2) If the terminate interrupt returns non ready status,
     3775    14652                               return it to MOLTS and ignore the special if it
     3776    14653                               comes.
     3777    14654                           (3) If bit 29 is zero, always return the terminate
     3778    14655                               status and ignore any specials.
     3779    14656                               (This is why there is no special returned to MOLTS
     3780    14657                               on the suspend command, as mentioned above.)
     3781    14658
     3782    14659                           In  CP-6,  the  FPT  for  M$TDIO  is set up to
     3783    14660                           return  all In  CP-6, the  FPT for M$TDOPEN is
     3784    14661                           set up to  return all special interrupts, with
     3785    14662                           a   unique  Event  ID.    The  I/O  completion
     3786    14663                           processing  routine is smart  enough, with the
     3787    14664                           aid of some flags  set when the I/O is issued,
     3788    14665                           to  figure  out  which  interrupts  to return.
     3789    14666                           More on this in that routine.
     3790    14667
     3791    14668                           The next problem.   CP-6 will timeout only the
     3792    14669                           terminate interrupts on an I/O.  GCOS IOS also
     3793    14670                           times out  the specials if bit  29 is set.  So
     3794    14671                           this   must   be   done   by   TOLTS.   It  is
     3795    14672                           accomplished  by  returning  a  channel lostit
     3796    14673                           time  of  0  seconds  on  the  return from MME
     3797    14674                           TESTIO.   MOLTS  then  sets  its  own internal
     3798    14675                           clock to time out in 1 minute.  If it does, it
     3799    14676                           does  a  MME  HUNGTM.   CP-6 TOLTS will assume
     3800    14677                           that a special interrupt  timed out if it sees
     3801    14678                           the  MME  HUNGTM  while   an  ITR  I/O  is  in
     3802    14679                           progress,  and will simulate  a lost interrupt
     3803    14680                           and send it back to MOLTS.  (See TPOMME_HUNGTM
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:504  
     3804    14681                           documentation for more detail.)
     3805    14682
     3806    14683                           In   the   end,   if   the  ITRs  run  through
     3807    14684                           successfully,  CP-6 will  automatically reboot
     3808    14685                           the  firmware in  the MPC,  simplfying matters
     3809    14686                           greatly.
     3810    14687
     3811    14688                           MDR OPERATION IN CP-6
     3812    14689
     3813    14690                           MDRs do not require as much accomodation as do
     3814    14691                           ITRs on the part of TOLTS.  For the most part,
     3815    14692                           they look like  normal test I/O, not requiring
     3816    14693                           any   special   handling   of   interrupts  or
     3817    14694                           anything.  The  biggest problem is translating
     3818    14695                           the  GCOS  I/O  entry  format  into  something
     3819    14696                           useful for CP-6.  The MDR driver running under
     3820    14697                           MOLTS sends up sometimes long strings of IDCWs
     3821    14698                           and DCWs which define what I/O it wants to do.
     3822    14699                           It  will  be  explained  later  how  the  many
     3823    14700                           different formats need to be translated.
     3824    14701
     3825    14702                           PROGRAM DOCUMENTATION
     3826    14703
     3827    14704                           The subroutine FRAME_DATA_AREA builds a vector
     3828    14705                           around the  entire ISR and stores  it into the
     3829    14706                           FPT  for  M$TDIO,  TDIO_FPT.DATA_.  By framing
     3830    14707                           the the entire ISR,  none of the DCW addresses
     3831    14708                           generated by the subexecs need to be adjusted.
     3832    14709                           The  I/O is  done in  NSA mode,  and there are
     3833    14710                           other restrictions, and  they should be looked
     3834    14711                           up in the IOM EPS-1 if necessary.
     3835    14712
     3836    14713                           GET_SCT_ADR  fetches the  SCT address  for the
     3837    14714                           test   page   from    the   I/O   entry,   and
     3838    14715                           MATCH_SCT_ADR establishes  TCX, the index into
     3839    14716                           TOP$TCP.  COPY_IO_ENTRY saves a copy of the 11
     3840    14717                           word I/O  entry in TOP$TCP for  use later when
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:505  
     3841    14718                           status is  to be returned and  a Courtesy Call
     3842    14719                           is to  be paid.  SET_TDIO_FPT sets  up all the
     3843    14720                           values in  the FPT that are  required for this
     3844    14721                           I/O.   BUILD_DCWLIST takes  the information in
     3845    14722                           the  I/O entry and  builds the actual hardware
     3846    14723                           DCW  list.  The  count of  outstanding no wait
     3847    14724                           I/O  is  incremented  and  M$TDIO is called to
     3848    14725                           actually    issue     the    I/O.     Finally,
     3849    14726                           SET_RETURN_VALUES  sets up  return values that
     3850    14727                           the subexecs are expecting.
     3851    14728
     3852    14729                           On completion of the  I/O, CP-6 will enter the
     3853    14730                           Event  Handler which will  take it from there.
     3854    14731        */
     3855    14732        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:506  
     3856    14733    1   TOP$MME_TESTIO: PROC (MME_W1,MME_W2,MME_W3,MME_W4,A,Q,X4,RETURN_DELTA) ;

  14733  7 006771   200010 741300       TOP$MME_TES* STX1  ! @RETURN_DELTA+2,,AUTO

     3857    14734
     3858    14735    2      DCL 1 MME_W1 ALIGNED,
     3859    14736    2            2 ADDR# UBIN (18) UNAL,
     3860    14737    2            2 *     UBIN (18) UNAL ;
     3861    14738    2      DCL MME_W2       UBIN WORD ALIGNED ;
     3862    14739    2      DCL MME_W3       UBIN WORD ALIGNED ;
     3863    14740    2      DCL MME_W4       UBIN WORD ALIGNED ;
     3864    14741    2      DCL A            UBIN WORD ALIGNED ;
     3865    14742    2      DCL Q            UBIN WORD ALIGNED ;
     3866    14743    2      DCL X4           UBIN HALF HALIGNED ;
     3867    14744    2      DCL RETURN_DELTA SBIN HALF HALIGNED ;
     3868    14745    2      DCL DUMMY        BIT (72) STATIC DALIGNED ;
     3869    14746    2      DCL DCWLIST_BFR  (0:7) CHAR (%(DCWLIST_SIZE * 4)) STATIC ALIGNED ;
     3870    14747    2      DCL TCX          UBIN WORD ALIGNED ;
     3871    14748    2      DCL NEW_SCT_ADR  UBIN HALF HALIGNED ;
     3872    14749
     3873    14750        /* Code */
     3874    14751
     3875    14752    2      CALL FRAME_DATA_AREA ;

  14752  7 006772   007046 701000 7                  TSX1    FRAME_DATA_AREA
         7 006773   000000 011000                    NOP     0

     3876    14753    2      CALL GET_SCT_ADR (MME_W1.ADDR#, NEW_SCT_ADR) ;

  14753  7 006774   200022 630500                    EPPR0   NEW_SCT_ADR,,AUTO
         7 006775   200026 450500                    STP0    WORK$,,AUTO
         7 006776   200011 236100                    LDQ     @MME_W1,,AUTO
         7 006777   200025 756100                    STQ     @TCX,,AUTO
         7 007000   007070 701000 7                  TSX1    GET_SCT_ADR
         7 007001   000000 011000                    NOP     0

     3877    14754    2      CALL MATCH_SCT_ADR (NEW_SCT_ADR, TCX) ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:507  

  14754  7 007002   200021 630500                    EPPR0   TCX,,AUTO
         7 007003   200026 450500                    STP0    WORK$,,AUTO
         7 007004   200022 631500                    EPPR1   NEW_SCT_ADR,,AUTO
         7 007005   200025 451500                    STP1    @TCX,,AUTO
         7 007006   012567 701000 7                  TSX1    MATCH_SCT_ADR
         7 007007   000000 011000                    NOP     0

     3878    14755    2      CALL COPY_IO_ENTRY (MME_W1.ADDR#, TCX) ;

  14755  7 007010   200021 630500                    EPPR0   TCX,,AUTO
         7 007011   200026 450500                    STP0    WORK$,,AUTO
         7 007012   200011 236100                    LDQ     @MME_W1,,AUTO
         7 007013   200025 756100                    STQ     @TCX,,AUTO
         7 007014   007110 701000 7                  TSX1    COPY_IO_ENTRY
         7 007015   000000 011000                    NOP     0

     3879    14756    2      CALL SET_TDIO_FPT (TCX) ;

  14756  7 007016   200021 630500                    EPPR0   TCX,,AUTO
         7 007017   200025 450500                    STP0    @TCX,,AUTO
         7 007020   007144 701000 7                  TSX1    SET_TDIO_FPT
         7 007021   000000 011000                    NOP     0

     3880    14757    2      CALL BUILD_DCW_LIST (TCX) ;

  14757  7 007022   200021 630500                    EPPR0   TCX,,AUTO
         7 007023   200025 450500                    STP0    @TCX,,AUTO
         7 007024   007236 701000 7                  TSX1    BUILD_DCW_LIST
         7 007025   000000 011000                    NOP     0

     3881    14758    2      CALL ISSUE_IO (TCX) ;

  14758  7 007026   200021 630500                    EPPR0   TCX,,AUTO
         7 007027   200025 450500                    STP0    @TCX,,AUTO
         7 007030   010147 701000 7                  TSX1    ISSUE_IO
         7 007031   000000 011000                    NOP     0
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:508  

     3882    14759    2      CALL SET_RETURN_VALUES (TCX, Q, A, X4, RETURN_DELTA) ;

  14759  7 007032   200020 236100                    LDQ     @RETURN_DELTA,,AUTO
         7 007033   200017 235100                    LDA     @X4,,AUTO
         7 007034   200030 757100                    STAQ    @A+1,,AUTO
         7 007035   200015 236100                    LDQ     @A,,AUTO
         7 007036   200016 235100                    LDA     @Q,,AUTO
         7 007037   200026 757100                    STAQ    WORK$,,AUTO
         7 007040   200021 630500                    EPPR0   TCX,,AUTO
         7 007041   200025 450500                    STP0    @TCX,,AUTO
         7 007042   010166 701000 7                  TSX1    SET_RETURN_VALUES
         7 007043   000000 011000                    NOP     0

     3883    14760    2      RETURN ;

  14760  7 007044   200010 221300                    LDX1  ! @RETURN_DELTA+2,,AUTO
         7 007045   000001 702211                    TSX2  ! 1,X1

     3884    14761
     3885    14762        /*END TOP$MME_TESTIO ;*/
     3886    14763        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:509  
     3887    14764        /*I* NAME:         FRAME_DATA_AREA
     3888    14765             INTERFACE:    None called.
     3889    14766             INPUT:        B$JIT.TDP - top dynamic page
     3890    14767             OUTPUT:       TDIO_FPT.DATA_ = vector framing entire ISR
     3891    14768             DESCRIPTION:  Uses the static data variable DATA_VECTOR which
     3892    14769                           has most of the fields initialized to their
     3893    14770                           proper values.  The idea is to generate a vector
     3894    14771                           which will frame the entire ISR for NSA mode I/O.
     3895    14772                           The only thing missing from the vector is the
     3896    14773                           bounds field which is determined using the
     3897    14774                           JIT variable TDP.  It contains the next page
     3898    14775                           number available to the program, relative to the
     3899    14776                           working space base.  Subtracting 64 from that number
     3900    14777                           yields a page number relative to the ISR base.
     3901    14778                           Multiplying that page number by 1024 and 4 yields a
     3902    14779                           bounds in bytes which is stored into the vector, which
     3903    14780                           in turn is stored into the FPT.
     3904    14781        */
     3905    14782        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:510  
     3906    14783    2   FRAME_DATA_AREA: PROC ;

  14783  7 007046   200024 741300       FRAME_DATA_* STX1  ! @LIST$,,AUTO

     3907    14784
     3908    14785    3      DCL 1 DATA_VECTOR STATIC DALIGNED,
     3909    14786    3            2 SIZE#    UBIN (20) UNAL,
     3910    14787    3            2 FLAGS#   BIT (9) UNAL INIT ('777'O),
     3911    14788    3            2 V#       BIT (2) UNAL INIT ('01'B),
     3912    14789    3            2 *        BIT (5) UNAL,
     3913    14790    3            2 BASE#    UBIN (20) UNAL INIT (0),
     3914    14791    3            2 *        BIT (4) UNAL INIT ('0'B),
     3915    14792    3            2 SEGID#   UBIN (12) UNAL INIT (%IS_SEGID) ;
     3916    14793    3      DCL DATA_V REDEF DATA_VECTOR BIT (72) DALIGNED ;
     3917    14794    3      DCL NEXT_PAGE_AVAIL UBIN (20) ALIGNED ;
     3918    14795
     3919    14796        /* Code */
     3920    14797
     3921    14798           /* Convert top dynamic page address to words relative to the ISR */
     3922    14799    3      NEXT_PAGE_AVAIL = (B$JIT$ -> B$JIT.TDP - 64) * 1024 * 4 ;

  14799  7 007047   000000 470400 xsym               LDP0    B$JIT$
         7 007050   000204 236100                    LDQ     132,,PR0
         7 007051   000006 772000                    QRL     6
         7 007052   000013 376000 8                  ANQ     11
         7 007053   000001 136003                    SBLQ    1,DU
         7 007054   000020 736000                    QLS     16
         7 007055   200025 756100                    STQ     NEXT_PAGE_AVAIL,,AUTO

     3923    14800    3      DATA_VECTOR.SIZE# = NEXT_PAGE_AVAIL - 1 ;

  14800  7 007056   200025 236100                    LDQ     NEXT_PAGE_AVAIL,,AUTO
         7 007057   000020 772000                    QRL     16
         7 007060   000001 136007                    SBLQ    1,DL
         7 007061   000020 736000                    QLS     16
         7 007062   024724 676000 5                  ERQ     DATA_VECTOR
         7 007063   000034 376000 xsym               ANQ     B_VECTNIL+28
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:511  
         7 007064   024724 656000 5                  ERSQ    DATA_VECTOR

     3924    14801    3      TDIO_FPT.DATA_ = DATA_V ;

  14801  7 007065   024724 237000 5                  LDAQ    DATA_VECTOR
         7 007066   000204 757000 5                  STAQ    TDIO_FPT+4

     3925    14802    3      RETURN ;

  14802  7 007067   000001 702211                    TSX2  ! 1,X1

     3926    14803
     3927    14804    3   END FRAME_DATA_AREA ;
     3928    14805        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:512  
     3929    14806        /*I* NAME:         GET_SCT_ADR
     3930    14807             INTERFACE:    PINCRW
     3931    14808             INPUT:        IO_ENTRY_ADR - address of the I/O entry
     3932    14809             OUTPUT:       NEW_SCT_ADR = SCT address from I/O entry
     3933    14810             DESCRIPTION:  Merely fetches the SCT address for this test page
     3934    14811                           from the I/O entry, word 2 and stores it
     3935    14812                           NEW_SCT_ADR.
     3936    14813        */
     3937    14814
     3938    14815    2   GET_SCT_ADR: PROC (IO_ENTRY_ADR, NEW_SCT_ADR) ;

  14815  7 007070   200024 741300       GET_SCT_ADR  STX1  ! @LIST$,,AUTO

     3939    14816
     3940    14817    3      DCL IO_ENTRY_ADR  UBIN HALF HALIGNED ;
     3941    14818    3      DCL NEW_SCT_ADR   UBIN HALF HALIGNED ;
     3942    14819    3      DCL POLTS_IO$     PTR ALIGNED ;
     3943    14820    3      DCL 1 IO_ENTRY BASED ALIGNED,
     3944    14821    3            2 *       (0:1) UBIN (36) UNAL,
     3945    14822    3            2 W2,
     3946    14823    3              3 *        UBIN (3) UNAL,
     3947    14824    3              3 SCT_ADR# UBIN (15) UNAL,
     3948    14825    3              3 *        UBIN (18) UNAL,
     3949    14826    3            2 *       (0:7) UBIN (36) UNAL ;
     3950    14827
     3951    14828        /* Code */
     3952    14829
     3953    14830    3      POLTS_IO$ = PINCRW (IS$, IO_ENTRY_ADR) ;

  14830  7 007071   200025 470500                    LDP0    @IO_ENTRY_ADR,,AUTO
         7 007072   000100 100500                    MLR     fill='000'O
         7 007073   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         7 007074   205740 000004                    ADSC9   BCD_BUF_INX+1,,AUTO      cn=0,n=4
         7 007075   205740 220100                    LDX0    BCD_BUF_INX+1,,AUTO
         7 007076   000000 636010                    EAQ     0,X0
         7 007077   000000 036000 6                  ADLQ    FPTN_
         7 007100   200027 756100                    STQ     POLTS_IO$,,AUTO
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:513  

     3954    14831    3      NEW_SCT_ADR = POLTS_IO$ -> IO_ENTRY.W2.SCT_ADR# ;

  14831  7 007101   200027 471500                    LDP1    POLTS_IO$,,AUTO
         7 007102   200026 473500                    LDP3    @NEW_SCT_ADR,,AUTO
         7 007103   003100 061500                    CSR     bolr='003'O
         7 007104   100002 030017                    BDSC    2,,PR1                   by=0,bit=3,n=15
         7 007105   300000 000022                    BDSC    0,,PR3                   by=0,bit=0,n=18

     3955    14832    3      RETURN ;

  14832  7 007106   200024 221300                    LDX1  ! @LIST$,,AUTO
         7 007107   000001 702211                    TSX2  ! 1,X1

     3956    14833
     3957    14834    3   END GET_SCT_ADR ;
     3958    14835        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:514  
     3959    14836        /*I* NAME:         COPY_IO_ENTRY
     3960    14837             INTERFACE:    ADDR function
     3961    14838             INPUT:        IO_ENTRY_ADR - address of the I/O entry
     3962    14839                           TCX - test control index
     3963    14840             OUTPUT:       IO_ENTRY(TCX) = 11 word I/O entry in TOLTS
     3964    14841             DESCRIPTION:  Saves the 11 word I/O entry passed from the
     3965    14842                           Subexecutive in the corresponding slot  for
     3966    14843                           the test request.
     3967    14844        */
     3968    14845
     3969    14846    2   COPY_IO_ENTRY: PROC (IO_ENTRY_ADR, TCX) ;

  14846  7 007110   200024 741300       COPY_IO_ENT* STX1  ! @LIST$,,AUTO

     3970    14847
     3971    14848    3      DCL IO_ENTRY_ADR UBIN HALF HALIGNED ;
     3972    14849    3      DCL TCX          UBIN WORD ALIGNED ;
     3973    14850    3      DCL POLTS_IO$    PTR ALIGNED ;
     3974    14851    3      DCL IO_ENTRY$    PTR ALIGNED ;
     3975    14852    3      DCL IO_ENTRY_WORDS (0:10) UBIN WORD BASED ALIGNED ;
     3976    14853
     3977    14854        /* Code */
     3978    14855
     3979    14856    3      POLTS_IO$ = PINCRW (IS$, IO_ENTRY_ADR) ;

  14856  7 007111   200025 470500                    LDP0    @IO_ENTRY_ADR,,AUTO
         7 007112   000100 100500                    MLR     fill='000'O
         7 007113   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         7 007114   205740 000004                    ADSC9   BCD_BUF_INX+1,,AUTO      cn=0,n=4
         7 007115   205740 220100                    LDX0    BCD_BUF_INX+1,,AUTO
         7 007116   000000 636010                    EAQ     0,X0
         7 007117   000000 036000 6                  ADLQ    FPTN_
         7 007120   200027 756100                    STQ     POLTS_IO$,,AUTO

     3980    14857    3      IO_ENTRY$ = ADDR (IO_ENTRY(TCX)) ;

  14857  7 007121   200026 471500                    LDP1    @TCX,,AUTO
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:515  
         7 007122   100000 236100                    LDQ     0,,PR1
         7 007123   000013 402007                    MPY     11,DL
         7 007124   000003 633406 5                  EPPR3   IO_ENTRY,QL
         7 007125   200030 453500                    STP3    IO_ENTRY$,,AUTO

     3981    14858    3      IO_ENTRY$ -> IO_ENTRY_WORDS = POLTS_IO$ -> IO_ENTRY_WORDS ;

  14858  7 007126   200027 474500                    LDP4    POLTS_IO$,,AUTO
         7 007127   000100 100500                    MLR     fill='000'O
         7 007130   400000 000054                    ADSC9   0,,PR4                   cn=0,n=44
         7 007131   300000 000054                    ADSC9   0,,PR3                   cn=0,n=44

     3982    14859    3      TOP$TCP.ADR.IOENTRY(TCX) = IO_ENTRY_ADR ;

  14859  7 007132   100000 236100                    LDQ     0,,PR1
         7 007133   000122 402007                    MPY     82,DL
         7 007134   000001 736000                    QLS     1
         7 007135   000002 736000                    QLS     2
         7 007136   000003 475400 xsym               LDP5    TOT$DMC+3
         7 007137   000106 100500                    MLR     fill='000'O
         7 007140   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         7 007141   500011 400002                    ADSC9   9,Q,PR5                  cn=2,n=2

     3983    14860    3      RETURN ;

  14860  7 007142   200024 221300                    LDX1  ! @LIST$,,AUTO
         7 007143   000001 702211                    TSX2  ! 1,X1

     3984    14861
     3985    14862    3   END COPY_IO_ENTRY ;
     3986    14863        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:516  
     3987    14864        /*I* NAME:         SET_TDIO_FPT
     3988    14865             INTERFACE:    VECTOR function
     3989    14866             INPUT:        TOP$TCP.DCB#(TCX)
     3990    14867                           TOP$TCP.TEST_TYPE(TCX)
     3991    14868             OUTPUT:       TDIO_FPT all set to go.
     3992    14869             DESCRIPTION:  TDIO_FPT.DCWLIST_ = vector around DCWLIST for the
     3993    14870                           I/O for the test page. DCWLIST_BFR is an array of
     3994    14871                           8 separate DCW Lists, 1 per possible test page.
     3995    14872
     3996    14873                           TDIO_FPT.V.DCB# = DCB number for the page, fetched
     3997    14874                           from the test control table, TOP$TCP.
     3998    14875
     3999    14876                           TDIO_FPT.V.WAIT# = set for no wait I/O.
     4000    14877
     4001    14878                           TDIO_FPT.V.PCW# = set to a required constant for
     4002    14879                           MPC I/O. (If the day comes when console testing
     4003    14880                           on a direct connect channel is required, there
     4004    14881                           is a provision later on in MME TESTIO for building
     4005    14882                           the required PCW and setting it in the FPT,
     4006    14883                           overlaying the value set here.
     4007    14884
     4008    14885                           TDIO_FPT.V.ALTPATH = none specified
     4009    14886
     4010    14887                           TDIO_FPT.V.EVENT# = set to a unique Event ID for
     4011    14888                           test I/O, taking into account I.  This will allow
     4012    14889                           identification of which test page I/O completes
     4013    14890                           later.  Presently, all normal POLTS and MOLTS test
     4014    14891                           I/O will use the same Event IDs, based on the
     4015    14892                           constant TIO_EVENT_BASE.  It is defined in
     4016    14893                           the %INCLUDE file TOT_TOLTS_M.
     4017    14894
     4018    14895                           TDIO_FPT.V.TIMEOUT# = 30-35 seconds for ITR I/O
     4019    14896                                               = CP6 default for all others.
     4020    14897                           (The ITR timeout is chosen to be longer than the
     4021    14898                            longest known ITR test.  The CP-6 default timeout
     4022    14899                            is used for all other IOs.)
     4023    14900        */
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:517  
     4024    14901
     4025    14902    2   SET_TDIO_FPT: PROC (TCX) ;

  14902  7 007144   200024 741300       SET_TDIO_FPT STX1  ! @LIST$,,AUTO

     4026    14903
     4027    14904    3      DCL TCX UBIN WORD ALIGNED ;
     4028    14905
     4029    14906        /* Code */
     4030    14907
     4031    14908    3      TOP$TCP.IO.ISSUED(TCX) = %FALSE ;

  14908  7 007145   200025 470500                    LDP0    @TCX,,AUTO
         7 007146   000000 236100                    LDQ     0,,PR0
         7 007147   000122 402007                    MPY     82,DL
         7 007150   000001 736000                    QLS     1
         7 007151   000003 471400 xsym               LDP1    TOT$DMC+3
         7 007152   000000 620006                    EAX0    0,QL
         7 007153   000056 236000 8                  LDQ     46
         7 007154   100012 356110                    ANSQ    10,X0,PR1

     4032    14909    3      TOP$TCP.IO.DONE(TCX) = %FALSE ;

  14909  7 007155   000000 236100                    LDQ     0,,PR0
         7 007156   000122 402007                    MPY     82,DL
         7 007157   000001 736000                    QLS     1
         7 007160   000003 471400 xsym               LDP1    TOT$DMC+3
         7 007161   000000 620006                    EAX0    0,QL
         7 007162   000057 236000 8                  LDQ     47
         7 007163   100012 356110                    ANSQ    10,X0,PR1

     4033    14910    3      TOP$TCP.IO.CC_PAID(TCX) = %FALSE ;

  14910  7 007164   000000 236100                    LDQ     0,,PR0
         7 007165   000122 402007                    MPY     82,DL
         7 007166   000001 736000                    QLS     1
         7 007167   000003 471400 xsym               LDP1    TOT$DMC+3
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:518  
         7 007170   000000 620006                    EAX0    0,QL
         7 007171   000060 236000 8                  LDQ     48
         7 007172   100012 356110                    ANSQ    10,X0,PR1

     4034    14911    3      TDIO_FPT.DCWLIST_ = VECTOR (DCWLIST_BFR(TCX)) ;

  14911  7 007173   000000 236100                    LDQ     0,,PR0
         7 007174   001212 402007                    MPY     650,DL
         7 007175   000061 235000 8                  LDA     49
         7 007176   000023 736000                    QLS     19
         7 007177   000062 036000 8                  ADLQ    50
         7 007200   000202 757000 5                  STAQ    TDIO_FPT+2

     4035    14912    3      TDIO_FPT.V.DCB# = TOP$TCP.DCB#(TCX) ;

  14912  7 007201   000000 236100                    LDQ     0,,PR0
         7 007202   000122 402007                    MPY     82,DL
         7 007203   000001 736000                    QLS     1
         7 007204   000003 471400 xsym               LDP1    TOT$DMC+3
         7 007205   100007 720106                    LXL0    7,QL,PR1
         7 007206   000206 740000 5                  STX0    TDIO_FPT+6

     4036    14913    3      TDIO_FPT.V.WAIT# = %NO# ;

  14913  7 007207   000023 236000 8                  LDQ     19
         7 007210   000206 356000 5                  ANSQ    TDIO_FPT+6

     4037    14914    3      TDIO_FPT.V.PCW# = '000000700000'O ;

  14914  7 007211   000121 236000 6                  LDQ     CRLF_+11
         7 007212   000207 756000 5                  STQ     TDIO_FPT+7

     4038    14915    3      TDIO_FPT.V.ALTPATH = '0'B ;

  14915  7 007213   000000 236003                    LDQ     0,DU
         7 007214   000206 752003 5                  STCQ    TDIO_FPT+6,'03'O

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:519  
     4039    14916    3      TDIO_FPT.V.EVENT# = %TIO_EVENT_BASE + TCX ;

  14916  7 007215   000000 235100                    LDA     0,,PR0
         7 007216   000144 035007                    ADLA    100,DL
         7 007217   000210 755000 5                  STA     TDIO_FPT+8

     4040    14917    3      IF TOP$TCP.TEST_TYPE(TCX) = 'ITR'

  14917  7 007220   000000 236100                    LDQ     0,,PR0
         7 007221   000122 402007                    MPY     82,DL
         7 007222   000001 736000                    QLS     1
         7 007223   100002 236106                    LDQ     2,QL,PR1
         7 007224   000117 676000 6                  ERQ     CRLF_+9
         7 007225   000010 376000 8                  ANQ     8
         7 007226   007232 601000 7                  TNZ     s:14919

     4041    14918    3      THEN TDIO_FPT.V.TIMEOUT# = 7 ;  /* #36007 */

  14918  7 007227   070000 236003                    LDQ     28672,DU
         7 007230   000211 752040 5                  STCQ    TDIO_FPT+9,'40'O
         7 007231   007234 710000 7                  TRA     s:14920

     4042    14919    3      ELSE TDIO_FPT.V.TIMEOUT# = 0 ;

  14919  7 007232   000000 236003                    LDQ     0,DU
         7 007233   000211 752040 5                  STCQ    TDIO_FPT+9,'40'O

     4043    14920    3      RETURN ;

  14920  7 007234   200024 221300                    LDX1  ! @LIST$,,AUTO
         7 007235   000001 702211                    TSX2  ! 1,X1

     4044    14921
     4045    14922    3   END SET_TDIO_FPT ;
     4046    14923        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:520  
     4047    14924        /*I* NAME:         BUILD_DCW_LIST
     4048    14925             AUTHORS:      Curt Andes
     4049    14926                           Carl Eichert
     4050    14927                           Scott Sheppard
     4051    14928             PURPOSE:      constructs a DCW list in TOLTS memory
     4052    14929             INTERFACE:    BUILD_1ST_IDCW
     4053    14930                           BUILD_FAKE_DCW
     4054    14931                           BUILD_2ND_IDCW
     4055    14932                           PROCESS_IDCW
     4056    14933                           PROCESS_DCWS
     4057    14934             PARAMETERS:   TCX - test control index (input)
     4058    14935             DATA:         DCWLIST_BFR(TCX) - output
     4059    14936                           IO_ENTRY(TCX) - input
     4060    14937                           TOP$TCP.IO.ITR_INTERRUPT(TCX) - output
     4061    14938                           TOP$TCP.IO.TERMINATED(TCX) - output
     4062    14939                           TOP$TCP.IO.CONTROLLER(TCX) - input
     4063    14940             DESCRIPTION:  This  procedure  constructs   a  DCW  list  in
     4064    14941                           DCWLIST_BFR(TCX)    from   the    I/O   entry,
     4065    14942                           IO_ENTRY(TCX). It  performs numerous checks to
     4066    14943                           ensure that the DCW list is valid.
     4067    14944        */
     4068    14945        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:521  
     4069    14946    2   BUILD_DCW_LIST: PROC (TCX) ;

  14946  7 007236   200024 741300       BUILD_DCW_L* STX1  ! @LIST$,,AUTO

     4070    14947
     4071    14948    3      DCL TCX         UBIN WORD ALIGNED ;
     4072    14949    3      DCL CONTINUE    BIT (1) CALIGNED ;
     4073    14950    3      DCL HAS_DCWS    BIT (1) CALIGNED ;
     4074    14951    3      DCL DCW$        PTR ALIGNED ;
     4075    14952    3      DCL DCWLIST$    PTR ALIGNED ;
     4076    14953    3      DCL 1 DCWLIST_  REDEF DCWLIST$ ALIGNED,
     4077    14954    3            2 ADDR#   UBIN HALF UNAL,
     4078    14955    3            2 *       UBIN HALF UNAL;
     4079    14956    3      DCL 1 IDCW BASED ALIGNED,
     4080    14957    3            2 DEVICE_CMD#            BIT (6) UNAL,
     4081    14958    3            2 DEVICE_ADDRESS#        BIT (6) UNAL,
     4082    14959    3            2 *                      BIT (6) UNAL,
     4083    14960    3            2 TYPE#                  UBIN (3) UNAL,
     4084    14961    3            2 *                      BIT (1) UNAL,
     4085    14962    3            2 CONTINUE#              BIT (1) UNAL,
     4086    14963    3            2 *                      BIT (1) UNAL,
     4087    14964    3            2 CHANNEL_CMD#           UBIN (6) UNAL,
     4088    14965    3            2 RECORD_COUNT#          UBIN (6) UNAL ;
     4089    14966    3      DCL 1 DCW  BASED ALIGNED,
     4090    14967    3            2 ADDR#                  UBIN (18) UNAL,
     4091    14968    3            2 CHAR_POS#              BIT (3) UNAL,
     4092    14969    3            2 TALLY_CNTRL#           BIT (1) UNAL,
     4093    14970    3            2 TYPE#                  UBIN (2) UNAL,
     4094    14971    3            2 TALLY#                 BIT (12) UNAL ;
     4095    14972    3      DCL LIST_SIZE   UBIN WORD ALIGNED ;
     4096    14973           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:522  
     4097    14974        /* Code */
     4098    14975
     4099    14976    4      DO CASE (IO_ENTRY.W4.IO_CMD#(TCX)) ;

  14976  7 007237   200025 470500                    LDP0    @TCX,,AUTO
         7 007240   000000 236100                    LDQ     0,,PR0
         7 007241   000013 402007                    MPY     11,DL
         7 007242   000007 236006 5                  LDQ     IO_ENTRY+4,QL
         7 007243   000014 772000                    QRL     12
         7 007244   000077 376007                    ANQ     63,DL
         7 007245   000024 136007                    SBLQ    20,DL
         7 007246   000015 116007                    CMPQ    13,DL
         7 007247   007251 602006 7                  TNC     s:14976+10,QL
         7 007250   007326 710000 7                  TRA     s:14992
         7 007251   007266 710000 7                  TRA     s:14978
         7 007252   007326 710000 7                  TRA     s:14992
         7 007253   007326 710000 7                  TRA     s:14992
         7 007254   007326 710000 7                  TRA     s:14992
         7 007255   007326 710000 7                  TRA     s:14992
         7 007256   007326 710000 7                  TRA     s:14992
         7 007257   007326 710000 7                  TRA     s:14992
         7 007260   007326 710000 7                  TRA     s:14992
         7 007261   007326 710000 7                  TRA     s:14992
         7 007262   007326 710000 7                  TRA     s:14992
         7 007263   007326 710000 7                  TRA     s:14992
         7 007264   007326 710000 7                  TRA     s:14992
         7 007265   007277 710000 7                  TRA     s:14983

     4100    14977    4         CASE (%MULTIWD_CMD) ;

     4101    14978    4            CALL BUILD_1ST_IDCW ;

  14978  7 007266   007346 701000 7                  TSX1    BUILD_1ST_IDCW
         7 007267   000000 011000                    NOP     0

     4102    14979    4            CALL BUILD_FAKE_DCW ;

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:523  
  14979  7 007270   007720 701000 7                  TSX1    BUILD_FAKE_DCW
         7 007271   000000 011000                    NOP     0

     4103    14980    4            CALL BUILD_2ND_IDCW ;

  14980  7 007272   007627 701000 7                  TSX1    BUILD_2ND_IDCW
         7 007273   000000 011000                    NOP     0

     4104    14981    4            CALL PROCESS_DCWS ;

  14981  7 007274   007737 701000 7                  TSX1    PROCESS_DCWS
         7 007275   000000 011000                    NOP     0
         7 007276   007344 710000 7                  TRA     s:14999

     4105    14982    4         CASE (%CHAINED) ;

     4106    14983    4            CALL BUILD_1ST_IDCW ;

  14983  7 007277   007346 701000 7                  TSX1    BUILD_1ST_IDCW
         7 007300   000000 011000                    NOP     0

     4107    14984    4            IF DCW$ -> IDCW.TYPE# = %IDCW

  14984  7 007301   200030 470500                    LDP0    DCW$,,AUTO
         7 007302   000000 236100                    LDQ     0,,PR0
         7 007303   700000 376007                    ANQ     -32768,DL
         7 007304   700000 116007                    CMPQ    -32768,DL
         7 007305   007311 601000 7                  TNZ     s:14986

     4108    14985    4            THEN CALL BUILD_FAKE_DCW ;

  14985  7 007306   007720 701000 7                  TSX1    BUILD_FAKE_DCW
         7 007307   000000 011000                    NOP     0
         7 007310   007313 710000 7                  TRA     s:14987

     4109    14986    4            ELSE CALL PROCESS_DCWS ;

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:524  
  14986  7 007311   007737 701000 7                  TSX1    PROCESS_DCWS
         7 007312   000000 011000                    NOP     0

     4110    14987    5            DO WHILE (CONTINUE AND LIST_SIZE < %DCWLIST_SIZE + 1) ;

  14987  7 007313   007320 710000 7                  TRA     s:14990

     4111    14988    5               CALL PROCESS_IDCW ;

  14988  7 007314   010047 701000 7                  TSX1    PROCESS_IDCW
         7 007315   000000 011000                    NOP     0

     4112    14989    5               CALL PROCESS_DCWS ;

  14989  7 007316   007737 701000 7                  TSX1    PROCESS_DCWS
         7 007317   000000 011000                    NOP     0

     4113    14990    5            END /* WHILE */ ;

  14990  7 007320   200026 234100                    SZN     CONTINUE,,AUTO
         7 007321   007325 605000 7                  TPL     s:14990+5
         7 007322   200032 235100                    LDA     LIST_SIZE,,AUTO
         7 007323   002425 115007                    CMPA    1301,DL
         7 007324   007314 602000 7                  TNC     s:14988
         7 007325   007344 710000 7                  TRA     s:14999

     4114    14991    4         CASE (ELSE) ;

     4115    14992    4            CALL BUILD_1ST_IDCW ;

  14992  7 007326   007346 701000 7                  TSX1    BUILD_1ST_IDCW
         7 007327   000000 011000                    NOP     0

     4116    14993    4            CALL PROCESS_DCWS ;

  14993  7 007330   007737 701000 7                  TSX1    PROCESS_DCWS
         7 007331   000000 011000                    NOP     0
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:525  

     4117    14994    5            DO WHILE (CONTINUE AND LIST_SIZE < %DCWLIST_SIZE + 1) ;

  14994  7 007332   007337 710000 7                  TRA     s:14997

     4118    14995    5               CALL PROCESS_IDCW ;

  14995  7 007333   010047 701000 7                  TSX1    PROCESS_IDCW
         7 007334   000000 011000                    NOP     0

     4119    14996    5               CALL PROCESS_DCWS ;

  14996  7 007335   007737 701000 7                  TSX1    PROCESS_DCWS
         7 007336   000000 011000                    NOP     0

     4120    14997    5            END /* WHILE */ ;

  14997  7 007337   200026 234100                    SZN     CONTINUE,,AUTO
         7 007340   007344 605000 7                  TPL     s:14999
         7 007341   200032 235100                    LDA     LIST_SIZE,,AUTO
         7 007342   002425 115007                    CMPA    1301,DL
         7 007343   007333 602000 7                  TNC     s:14995

     4121    14998    4      END /* CASE */ ;

     4122    14999    3      RETURN ;

  14999  7 007344   200024 221300                    LDX1  ! @LIST$,,AUTO
         7 007345   000001 702211                    TSX2  ! 1,X1

     4123    15000
     4124    15001        /* END BUILD_DCW_LIST */
     4125    15002        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:526  
     4126    15003    3   BUILD_1ST_IDCW: PROC ;

  15003  7 007346   200034 741300       BUILD_1ST_I* STX1  ! REASON+1,,AUTO

     4127    15004
     4128    15005        /* Code */
     4129    15006
     4130    15007           /* Set up pointer to the DCW list to copy */
     4131    15008    4      DCW$ = PINCRW (IS$, IO_ENTRY.W8.DCW_PTR#(TCX)) ;

  15008  7 007347   200025 470500                    LDP0    @TCX,,AUTO
         7 007350   000000 236100                    LDQ     0,,PR0
         7 007351   000013 402007                    MPY     11,DL
         7 007352   000013 220006 5                  LDX0    IO_ENTRY+8,QL
         7 007353   000000 636010                    EAQ     0,X0
         7 007354   000000 036000 6                  ADLQ    FPTN_
         7 007355   200030 756100                    STQ     DCW$,,AUTO

     4132    15009
     4133    15010           /* Set up pointer to the DCW list to be built */
     4134    15011    4      DCWLIST$ = ADDR (DCWLIST_BFR(TCX)) ;

  15011  7 007356   000000 236100                    LDQ     0,,PR0
         7 007357   001212 402007                    MPY     650,DL
         7 007360   000023 736000                    QLS     19
         7 007361   000062 036000 8                  ADLQ    50
         7 007362   200031 756100                    STQ     DCWLIST$,,AUTO

     4135    15012    4      DCWLIST$ -> IDCW = '0'B ;

  15012  7 007363   200031 471500                    LDP1    DCWLIST$,,AUTO
         7 007364   100000 450100                    STZ     0,,PR1

     4136    15013
     4137    15014           /* Set up Device Command from the I/O Entry */
     4138    15015    4      DCWLIST$ -> IDCW.DEVICE_CMD# = IO_ENTRY.W4.DEVICE_CMD#(TCX) ;

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:527  
  15015  7 007365   000000 236100                    LDQ     0,,PR0
         7 007366   000013 402007                    MPY     11,DL
         7 007367   000007 236006 5                  LDQ     IO_ENTRY+4,QL
         7 007370   100000 752140                    STCQ    0,'40'O,PR1

     4139    15016    4      IF (DCWLIST$ -> IDCW.DEVICE_CMD# = '10'O AND

  15016  7 007371   100000 236100                    LDQ     0,,PR1
         7 007372   770000 376003                    ANQ     -4096,DU
         7 007373   100000 116003                    CMPQ    32768,DU
         7 007374   007421 601000 7                  TNZ     s:15020
         7 007375   000000 236100                    LDQ     0,,PR0
         7 007376   000013 402007                    MPY     11,DL
         7 007377   000012 236006 5                  LDQ     IO_ENTRY+7,QL
         7 007400   000100 316007                    CANQ    64,DL
         7 007401   007421 600000 7                  TZE     s:15020
         7 007402   000000 236100                    LDQ     0,,PR0
         7 007403   000122 402007                    MPY     82,DL
         7 007404   000001 736000                    QLS     1
         7 007405   000003 473400 xsym               LDP3    TOT$DMC+3
         7 007406   300002 236106                    LDQ     2,QL,PR3
         7 007407   000117 676000 6                  ERQ     CRLF_+9
         7 007410   000010 376000 8                  ANQ     8
         7 007411   007421 601000 7                  TNZ     s:15020

     4140    15017    4              IO_ENTRY.W7.BIT29#(TCX) AND
     4141    15018    4              TOP$TCP.TEST_TYPE(TCX) = 'ITR')
     4142    15019    4      THEN TOP$TCP.IO.ITR_INTERRUPT(TCX) = '1'B ;

  15019  7 007412   000000 236100                    LDQ     0,,PR0
         7 007413   000122 402007                    MPY     82,DL
         7 007414   000001 736000                    QLS     1
         7 007415   000000 620006                    EAX0    0,QL
         7 007416   400000 236003                    LDQ     -131072,DU
         7 007417   300012 256110                    ORSQ    10,X0,PR3
         7 007420   007430 710000 7                  TRA     s:15021

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:528  
     4143    15020    4      ELSE TOP$TCP.IO.ITR_INTERRUPT(TCX) = '0'B ;

  15020  7 007421   000000 236100                    LDQ     0,,PR0
         7 007422   000122 402007                    MPY     82,DL
         7 007423   000001 736000                    QLS     1
         7 007424   000003 473400 xsym               LDP3    TOT$DMC+3
         7 007425   000000 620006                    EAX0    0,QL
         7 007426   000031 236000 xsym               LDQ     B_VECTNIL+25
         7 007427   300012 356110                    ANSQ    10,X0,PR3

     4144    15021    4      TOP$TCP.IO.TERMINATED(TCX) = '0'B ;

  15021  7 007430   000000 236100                    LDQ     0,,PR0
         7 007431   000122 402007                    MPY     82,DL
         7 007432   000001 736000                    QLS     1
         7 007433   000003 473400 xsym               LDP3    TOT$DMC+3
         7 007434   000000 620006                    EAX0    0,QL
         7 007435   000063 236000 8                  LDQ     51
         7 007436   300012 356110                    ANSQ    10,X0,PR3

     4145    15022
     4146    15023           /* Set up Device Address if I/O is NOT to a Controller */
     4147    15024    4      IF (TOP$TCP.IO.CONTROLLER(TCX)) OR (TOP$TCP.TEST_TYPE(TCX) = 'RPM')

  15024  7 007437   000000 236100                    LDQ     0,,PR0
         7 007440   000122 402007                    MPY     82,DL
         7 007441   000001 736000                    QLS     1
         7 007442   000003 473400 xsym               LDP3    TOT$DMC+3
         7 007443   300012 236106                    LDQ     10,QL,PR3
         7 007444   100000 316003                    CANQ    32768,DU
         7 007445   007457 601000 7                  TNZ     s:15029
         7 007446   000000 236100                    LDQ     0,,PR0
         7 007447   000122 402007                    MPY     82,DL
         7 007450   000001 736000                    QLS     1
         7 007451   300002 236106                    LDQ     2,QL,PR3
         7 007452   000241 676000 6                  ERQ     CRLF_+91
         7 007453   000010 376000 8                  ANQ     8
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:529  
         7 007454   007457 600000 7                  TZE     s:15029

     4148    15025    4      THEN /* Controller I/O */ ;
     4149    15026    4      ELSE DCWLIST$ -> IDCW.DEVICE_ADDRESS# = '77'O ;

  15026  7 007455   007700 236003                    LDQ     4032,DU
         7 007456   100000 752120                    STCQ    0,'20'O,PR1

     4150    15027
     4151    15028           /* Set up type as an IDCW */
     4152    15029    4      DCWLIST$ -> IDCW.TYPE# = %IDCW ;

  15029  7 007457   700000 236007                    LDQ     -32768,DL
         7 007460   100000 256100                    ORSQ    0,,PR1

     4153    15030           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:530  
     4154    15031           /* Set up Continue bit for this IDCW */
     4155    15032    5      DO CASE (IO_ENTRY.W4.IO_CMD#(TCX)) ;

  15032  7 007461   000000 236100                    LDQ     0,,PR0
         7 007462   000013 402007                    MPY     11,DL
         7 007463   000007 236006 5                  LDQ     IO_ENTRY+4,QL
         7 007464   000014 772000                    QRL     12
         7 007465   000077 376007                    ANQ     63,DL
         7 007466   000024 136007                    SBLQ    20,DL
         7 007467   000015 116007                    CMPQ    13,DL
         7 007470   007472 602006 7                  TNC     s:15032+9,QL
         7 007471   007523 710000 7                  TRA     s:15040
         7 007472   007507 710000 7                  TRA     s:15034
         7 007473   007523 710000 7                  TRA     s:15040
         7 007474   007523 710000 7                  TRA     s:15040
         7 007475   007523 710000 7                  TRA     s:15040
         7 007476   007523 710000 7                  TRA     s:15040
         7 007477   007523 710000 7                  TRA     s:15040
         7 007500   007523 710000 7                  TRA     s:15040
         7 007501   007523 710000 7                  TRA     s:15040
         7 007502   007523 710000 7                  TRA     s:15040
         7 007503   007523 710000 7                  TRA     s:15040
         7 007504   007523 710000 7                  TRA     s:15040
         7 007505   007523 710000 7                  TRA     s:15040
         7 007506   007512 710000 7                  TRA     s:15036

     4156    15033    5         CASE (%MULTIWD_CMD) ;

     4157    15034    5            DCWLIST$ -> IDCW.CONTINUE# = '1'B ;

  15034  7 007507   020000 236007                    LDQ     8192,DL
         7 007510   100000 256100                    ORSQ    0,,PR1
         7 007511   007534 710000 7                  TRA     s:15046

     4158    15035    5         CASE (%CHAINED) ;

     4159    15036    5            IF IO_ENTRY.W4.RECORD_COUNT#(TCX) > 1
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:531  

  15036  7 007512   000000 236100                    LDQ     0,,PR0
         7 007513   000013 402007                    MPY     11,DL
         7 007514   000007 236006 5                  LDQ     IO_ENTRY+4,QL
         7 007515   000077 376007                    ANQ     63,DL
         7 007516   000002 116007                    CMPQ    2,DL
         7 007517   007534 602000 7                  TNC     s:15046

     4160    15037    5            THEN DCWLIST$ -> IDCW.CONTINUE# = '1'B ;

  15037  7 007520   020000 236007                    LDQ     8192,DL
         7 007521   100000 256100                    ORSQ    0,,PR1
         7 007522   007534 710000 7                  TRA     s:15046

     4161    15038    5            ELSE /* not chained */ ;
     4162    15039    5         CASE (ELSE) ;

     4163    15040    5            IF IO_ENTRY.W4.DEVICE_CMD#(TCX) ~=

  15040  7 007523   000000 236100                    LDQ     0,,PR0
         7 007524   000013 402007                    MPY     11,DL
         7 007525   000000 620006                    EAX0    0,QL
         7 007526   000007 236006 5                  LDQ     IO_ENTRY+4,QL
         7 007527   000012 676010 5                  ERQ     IO_ENTRY+7,X0
         7 007530   770000 376003                    ANQ     -4096,DU
         7 007531   007534 600000 7                  TZE     s:15046

     4164    15041    5                    IO_ENTRY.W7.DEVICE_CMD#(TCX) THEN
     4165    15042    5               DCWLIST$ -> IDCW.CONTINUE# = '1'B ;  /* ADDED FOR MDS */

  15042  7 007532   020000 236007                    LDQ     8192,DL
         7 007533   100000 256100                    ORSQ    0,,PR1

     4166    15043    5      END /* CASE */ ;

     4167    15044
     4168    15045           /* Set up Channel Command for Controller I/O or Special Device I/O */
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:532  
     4169    15046    4      IF IO_ENTRY.W4.IO_CMD#(TCX) > 31

  15046  7 007534   000000 236100                    LDQ     0,,PR0
         7 007535   000013 402007                    MPY     11,DL
         7 007536   000007 236006 5                  LDQ     IO_ENTRY+4,QL
         7 007537   770000 376007                    ANQ     -4096,DL
         7 007540   400000 116007                    CMPQ    -131072,DL
         7 007541   007557 602000 7                  TNC     s:15050

     4170    15047    4      THEN IF TOP$TCP.IO.CONTROLLER(TCX)

  15047  7 007542   000000 236100                    LDQ     0,,PR0
         7 007543   000122 402007                    MPY     82,DL
         7 007544   000001 736000                    QLS     1
         7 007545   000003 473400 xsym               LDP3    TOT$DMC+3
         7 007546   300012 236106                    LDQ     10,QL,PR3
         7 007547   100000 316003                    CANQ    32768,DU
         7 007550   007564 600000 7                  TZE     s:15053

     4171    15048    4         THEN DCWLIST$ -> IDCW.CHANNEL_CMD# = IO_ENTRY.W4.IO_CMD#(TCX) ;

  15048  7 007551   000000 236100                    LDQ     0,,PR0
         7 007552   000013 402007                    MPY     11,DL
         7 007553   000007 236006 5                  LDQ     IO_ENTRY+4,QL
         7 007554   000006 772000                    QRL     6
         7 007555   100000 752102                    STCQ    0,'02'O,PR1
         7 007556   007564 710000 7                  TRA     s:15053

     4172    15049    4         ELSE /* Leave the channel command at zero. */ ;
     4173    15050    4      ELSE DCWLIST$ -> IDCW.CHANNEL_CMD# = IO_ENTRY.W4.IO_CMD#(TCX) ;

  15050  7 007557   000000 236100                    LDQ     0,,PR0
         7 007560   000013 402007                    MPY     11,DL
         7 007561   000007 236006 5                  LDQ     IO_ENTRY+4,QL
         7 007562   000006 772000                    QRL     6
         7 007563   100000 752102                    STCQ    0,'02'O,PR1

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:533  
     4174    15051
     4175    15052           /* Set up Record Count for this IDCW */
     4176    15053    4      DCWLIST$ -> IDCW.RECORD_COUNT# = IO_ENTRY.W4.RECORD_COUNT#(TCX) ;

  15053  7 007564   000000 236100                    LDQ     0,,PR0
         7 007565   000013 402007                    MPY     11,DL
         7 007566   000007 236006 5                  LDQ     IO_ENTRY+4,QL
         7 007567   100000 752101                    STCQ    0,'01'O,PR1

     4177    15054
     4178    15055           /* Set up Processing Flags for BUILD_DCW_LIST procedure */
     4179    15056    4      CONTINUE = DCWLIST$ -> IDCW.CONTINUE# ;

  15056  7 007570   100000 236100                    LDQ     0,,PR1
         7 007571   000026 736000                    QLS     22
         7 007572   400000 376003                    ANQ     -131072,DU
         7 007573   200026 756100                    STQ     CONTINUE,,AUTO

     4180    15057    4      IF IO_ENTRY.W4.IO_CMD#(TCX) = 2

  15057  7 007574   000000 236100                    LDQ     0,,PR0
         7 007575   000013 402007                    MPY     11,DL
         7 007576   000007 236006 5                  LDQ     IO_ENTRY+4,QL
         7 007577   770000 376007                    ANQ     -4096,DL
         7 007600   020000 116007                    CMPQ    8192,DL
         7 007601   007604 601000 7                  TNZ     s:15059

     4181    15058    4      THEN HAS_DCWS = %FALSE ;

  15058  7 007602   200027 450100                    STZ     HAS_DCWS,,AUTO
         7 007603   007606 710000 7                  TRA     s:15060

     4182    15059    4      ELSE HAS_DCWS = %TRUE ;

  15059  7 007604   400000 236003                    LDQ     -131072,DU
         7 007605   200027 756100                    STQ     HAS_DCWS,,AUTO

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:534  
     4183    15060    4      LIST_SIZE = 1 ;

  15060  7 007606   000001 235007                    LDA     1,DL
         7 007607   200032 755100                    STA     LIST_SIZE,,AUTO

     4184    15061
     4185    15062           /* Advance Pointer to the next word of the DCW list */
     4186    15063    4      DCWLIST$ = PINCRW (DCWLIST$, 1) ;

  15063  7 007610   200031 236100                    LDQ     DCWLIST$,,AUTO
         7 007611   000001 036003                    ADLQ    1,DU
         7 007612   200031 756100                    STQ     DCWLIST$,,AUTO

     4187    15064    4      IF IO_ENTRY.W2.MDS_DEV_IDCW_LIST(TCX) = '1'B

  15064  7 007613   000000 236100                    LDQ     0,,PR0
         7 007614   000013 402007                    MPY     11,DL
         7 007615   000005 236006 5                  LDQ     IO_ENTRY+2,QL
         7 007616   100000 316003                    CANQ    32768,DU
         7 007617   007625 600000 7                  TZE     s:15067

     4188    15065    4      THEN IO_ENTRY.W2.MDS_DEV_IDCW_LIST(TCX) = '1'B;

  15065  7 007620   000000 236100                    LDQ     0,,PR0
         7 007621   000013 402007                    MPY     11,DL
         7 007622   000000 620006                    EAX0    0,QL
         7 007623   100000 236003                    LDQ     32768,DU
         7 007624   000005 256010 5                  ORSQ    IO_ENTRY+2,X0

     4189    15066    4      ELSE /*DO NOTHING */ ;
     4190    15067    4      RETURN ;

  15067  7 007625   200034 221300                    LDX1  ! REASON+1,,AUTO
         7 007626   000001 702211                    TSX2  ! 1,X1

     4191    15068
     4192    15069    4   END BUILD_1ST_IDCW ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:535  
     4193    15070        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:536  
     4194    15071    3   BUILD_2ND_IDCW: PROC ;

  15071  7 007627   200034 741300       BUILD_2ND_I* STX1  ! REASON+1,,AUTO

     4195    15072
     4196    15073        /* Code */
     4197    15074
     4198    15075           /* Initialize the IDCW to zeroes */
     4199    15076    4      DCWLIST$ -> IDCW = '0'B ;

  15076  7 007630   200031 470500                    LDP0    DCWLIST$,,AUTO
         7 007631   000000 450100                    STZ     0,,PR0

     4200    15077
     4201    15078           /* Set up Device Command for this IDCW */
     4202    15079    4      DCWLIST$ -> IDCW.DEVICE_CMD# = IO_ENTRY.W7.DEVICE_CMD#(TCX) ;

  15079  7 007632   200025 471500                    LDP1    @TCX,,AUTO
         7 007633   100000 236100                    LDQ     0,,PR1
         7 007634   000013 402007                    MPY     11,DL
         7 007635   000012 236006 5                  LDQ     IO_ENTRY+7,QL
         7 007636   000000 752140                    STCQ    0,'40'O,PR0

     4203    15080
     4204    15081           /* Set up Device Address if I/O is NOT to a Controller */
     4205    15082    4      IF (TOP$TCP.IO.CONTROLLER(TCX)) OR (TOP$TCP.TEST_TYPE(TCX) = 'RPM')

  15082  7 007637   100000 236100                    LDQ     0,,PR1
         7 007640   000122 402007                    MPY     82,DL
         7 007641   000001 736000                    QLS     1
         7 007642   000003 473400 xsym               LDP3    TOT$DMC+3
         7 007643   300012 236106                    LDQ     10,QL,PR3
         7 007644   100000 316003                    CANQ    32768,DU
         7 007645   007657 601000 7                  TNZ     s:15087
         7 007646   100000 236100                    LDQ     0,,PR1
         7 007647   000122 402007                    MPY     82,DL
         7 007650   000001 736000                    QLS     1
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:537  
         7 007651   300002 236106                    LDQ     2,QL,PR3
         7 007652   000241 676000 6                  ERQ     CRLF_+91
         7 007653   000010 376000 8                  ANQ     8
         7 007654   007657 600000 7                  TZE     s:15087

     4206    15083    4      THEN /* Controller I/Os have an address of 0 */ ;
     4207    15084    4      ELSE DCWLIST$ -> IDCW.DEVICE_ADDRESS# = '77'O ;

  15084  7 007655   007700 236003                    LDQ     4032,DU
         7 007656   000000 752120                    STCQ    0,'20'O,PR0

     4208    15085
     4209    15086           /* Set up Type for this IDCW */
     4210    15087    4      DCWLIST$ -> IDCW.TYPE# = %IDCW ;

  15087  7 007657   700000 236007                    LDQ     -32768,DL
         7 007660   000000 256100                    ORSQ    0,,PR0

     4211    15088
     4212    15089           /* Set up Channel Command for this IDCW */
     4213    15090    4      DCWLIST$ -> IDCW.CHANNEL_CMD# = IO_ENTRY.W7.IO_CMD#(TCX) ;

  15090  7 007661   100000 236100                    LDQ     0,,PR1
         7 007662   000013 402007                    MPY     11,DL
         7 007663   000012 236006 5                  LDQ     IO_ENTRY+7,QL
         7 007664   000006 772000                    QRL     6
         7 007665   000000 752102                    STCQ    0,'02'O,PR0

     4214    15091           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:538  
     4215    15092           /* Continue bit will not be set */
     4216    15093
     4217    15094           /* Set up Record Count for this IDCW */
     4218    15095    4      DCWLIST$ -> IDCW.RECORD_COUNT# = IO_ENTRY.W7.RECORD_COUNT#(TCX) ;

  15095  7 007666   100000 236100                    LDQ     0,,PR1
         7 007667   000013 402007                    MPY     11,DL
         7 007670   000012 236006 5                  LDQ     IO_ENTRY+7,QL
         7 007671   000000 752101                    STCQ    0,'01'O,PR0

     4219    15096
     4220    15097           /* Set up processing flags */
     4221    15098    4      CONTINUE = DCWLIST$ -> IDCW.CONTINUE# ;

  15098  7 007672   000000 236100                    LDQ     0,,PR0
         7 007673   000026 736000                    QLS     22
         7 007674   400000 376003                    ANQ     -131072,DU
         7 007675   200026 756100                    STQ     CONTINUE,,AUTO

     4222    15099    4      IF IO_ENTRY.W7.IO_CMD#(TCX) = 2

  15099  7 007676   100000 236100                    LDQ     0,,PR1
         7 007677   000013 402007                    MPY     11,DL
         7 007700   000012 236006 5                  LDQ     IO_ENTRY+7,QL
         7 007701   770000 376007                    ANQ     -4096,DL
         7 007702   020000 116007                    CMPQ    8192,DL
         7 007703   007706 601000 7                  TNZ     s:15101

     4223    15100    4      THEN HAS_DCWS = %FALSE ;

  15100  7 007704   200027 450100                    STZ     HAS_DCWS,,AUTO
         7 007705   007710 710000 7                  TRA     s:15102

     4224    15101    4      ELSE HAS_DCWS = %TRUE ;

  15101  7 007706   400000 236003                    LDQ     -131072,DU
         7 007707   200027 756100                    STQ     HAS_DCWS,,AUTO
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:539  

     4225    15102    4      LIST_SIZE = LIST_SIZE + 1 ;

  15102  7 007710   200032 235100                    LDA     LIST_SIZE,,AUTO
         7 007711   000001 035007                    ADLA    1,DL
         7 007712   200032 755100                    STA     LIST_SIZE,,AUTO

     4226    15103
     4227    15104           /* Advance pointer to the next word in the DCW list */
     4228    15105    4      DCWLIST$ = PINCRW (DCWLIST$, 1) ;

  15105  7 007713   200031 236100                    LDQ     DCWLIST$,,AUTO
         7 007714   000001 036003                    ADLQ    1,DU
         7 007715   200031 756100                    STQ     DCWLIST$,,AUTO

     4229    15106    4      RETURN ;

  15106  7 007716   200034 221300                    LDX1  ! REASON+1,,AUTO
         7 007717   000001 702211                    TSX2  ! 1,X1

     4230    15107
     4231    15108    4   END BUILD_2ND_IDCW ;
     4232    15109        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:540  
     4233    15110    3   BUILD_FAKE_DCW: PROC ;

  15110  7 007720   200034 741300       BUILD_FAKE_* STX1  ! REASON+1,,AUTO

     4234    15111
     4235    15112        /* Code */
     4236    15113
     4237    15114           /* Use word 5 of the I/O entry as a DCW */
     4238    15115    4      DCWLIST$ -> DCW = IO_ENTRY.W5#(TCX) ;

  15115  7 007721   200025 470500                    LDP0    @TCX,,AUTO
         7 007722   000000 236100                    LDQ     0,,PR0
         7 007723   000013 402007                    MPY     11,DL
         7 007724   000010 236006 5                  LDQ     IO_ENTRY+5,QL
         7 007725   200031 471500                    LDP1    DCWLIST$,,AUTO
         7 007726   100000 756100                    STQ     0,,PR1

     4239    15116    4      LIST_SIZE = LIST_SIZE + 1 ;

  15116  7 007727   200032 235100                    LDA     LIST_SIZE,,AUTO
         7 007730   000001 035007                    ADLA    1,DL
         7 007731   200032 755100                    STA     LIST_SIZE,,AUTO

     4240    15117    4      DCWLIST$ = PINCRW (DCWLIST$, 1) ;

  15117  7 007732   200031 236100                    LDQ     DCWLIST$,,AUTO
         7 007733   000001 036003                    ADLQ    1,DU
         7 007734   200031 756100                    STQ     DCWLIST$,,AUTO

     4241    15118    4      RETURN ;

  15118  7 007735   200034 221300                    LDX1  ! REASON+1,,AUTO
         7 007736   000001 702211                    TSX2  ! 1,X1

     4242    15119
     4243    15120    4   END BUILD_FAKE_DCW ;
     4244    15121        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:541  
     4245    15122    3   PROCESS_DCWS: PROC ;

  15122  7 007737   200034 741300       PROCESS_DCWS STX1  ! REASON+1,,AUTO

     4246    15123
     4247    15124    4      DCL LAST_DATA_DCW  BIT (1) UNAL ;
     4248    15125    4      DCL TEMP$          PTR ALIGNED;
     4249    15126
     4250    15127        /* Code */
     4251    15128
     4252    15129    4      IF HAS_DCWS

  15129  7 007740   200027 234100                    SZN     HAS_DCWS,,AUTO
         7 007741   010045 605000 7                  TPL     s:15160

     4253    15130    5      THEN DO ;

     4254    15131    5              LAST_DATA_DCW = %FALSE ;

  15131  7 007742   200035 450100                    STZ     LAST_DATA_DCW,,AUTO

     4255    15132    6              DO UNTIL (LAST_DATA_DCW) ;

     4256    15133    7                 DO CASE (DCW$ -> DCW.TYPE#) ;

  15133  7 007743   200030 470500                    LDP0    DCW$,,AUTO
         7 007744   000000 236100                    LDQ     0,,PR0
         7 007745   000014 772000                    QRL     12
         7 007746   000003 376007                    ANQ     3,DL
         7 007747   000004 116007                    CMPQ    4,DL
         7 007750   007752 602006 7                  TNC     s:15133+7,QL
         7 007751   010026 710000 7                  TRA     s:15151
         7 007752   007765 710000 7                  TRA     s:15138
         7 007753   007756 710000 7                  TRA     s:15135
         7 007754   007776 710000 7                  TRA     s:15142
         7 007755   007756 710000 7                  TRA     s:15135

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:542  
     4257    15134    7                    CASE (%IOTP, %IONTP) ;

     4258    15135    7                       DCWLIST$ -> DCW = DCW$ -> DCW ;

  15135  7 007756   000000 236100                    LDQ     0,,PR0
         7 007757   200031 471500                    LDP1    DCWLIST$,,AUTO
         7 007760   100000 756100                    STQ     0,,PR1

     4259    15136    7                       DCW$ = PINCRW (DCW$, 1);

  15136  7 007761   200030 236100                    LDQ     DCW$,,AUTO
         7 007762   000001 036003                    ADLQ    1,DU
         7 007763   200030 756100                    STQ     DCW$,,AUTO
         7 007764   010030 710000 7                  TRA     s:15153

     4260    15137    7                    CASE (%IOTD) ;

     4261    15138    7                       DCWLIST$ -> DCW = DCW$ -> DCW ;

  15138  7 007765   000000 236100                    LDQ     0,,PR0
         7 007766   200031 471500                    LDP1    DCWLIST$,,AUTO
         7 007767   100000 756100                    STQ     0,,PR1

     4262    15139    7                       DCW$ = PINCRW (DCW$, 1);

  15139  7 007770   200030 236100                    LDQ     DCW$,,AUTO
         7 007771   000001 036003                    ADLQ    1,DU
         7 007772   200030 756100                    STQ     DCW$,,AUTO

     4263    15140    7                       LAST_DATA_DCW = %TRUE ;

  15140  7 007773   400000 236003                    LDQ     -131072,DU
         7 007774   200035 756100                    STQ     LAST_DATA_DCW,,AUTO
         7 007775   010030 710000 7                  TRA     s:15153

     4264    15141    7                    CASE (%TDCW);

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:543  
     4265    15142    7                       DCWLIST$ -> DCW = DCW$ -> DCW;

  15142  7 007776   000000 236100                    LDQ     0,,PR0
         7 007777   200031 471500                    LDP1    DCWLIST$,,AUTO
         7 010000   100000 756100                    STQ     0,,PR1

     4266    15143    7                       DCWLIST$ -> DCW.ADDR# = DCWLIST_.ADDR# + 1;

  15143  7 010001   200031 220100                    LDX0    DCWLIST$,,AUTO
         7 010002   000001 621010                    EAX1    1,X0
         7 010003   100000 741100                    STX1    0,,PR1

     4267    15144    7                       TEMP$ = PINCRW (IS$, DCW$ -> DCW.ADDR#);

  15144  7 010004   000000 222100                    LDX2    0,,PR0
         7 010005   000000 636012                    EAQ     0,X2
         7 010006   000000 036000 6                  ADLQ    FPTN_
         7 010007   200036 756100                    STQ     TEMP$,,AUTO

     4268    15145    7                       IF TEMP$ = DCW$

  15145  7 010010   200030 116100                    CMPQ    DCW$,,AUTO
         7 010011   010014 601000 7                  TNZ     s:15147

     4269    15146    7                       THEN LAST_DATA_DCW = %TRUE ;  /* ADDED FOR MDS  */

  15146  7 010012   400000 236003                    LDQ     -131072,DU
         7 010013   200035 756100                    STQ     LAST_DATA_DCW,,AUTO

     4270    15147    7                       DCW$ = TEMP$;

  15147  7 010014   200036 236100                    LDQ     TEMP$,,AUTO
         7 010015   200030 756100                    STQ     DCW$,,AUTO

     4271    15148    7                       IF (DCW$ -> IDCW.TYPE# = %IDCW)

  15148  7 010016   200030 470500                    LDP0    DCW$,,AUTO
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:544  
         7 010017   000000 236100                    LDQ     0,,PR0
         7 010020   700000 376007                    ANQ     -32768,DL
         7 010021   700000 116007                    CMPQ    -32768,DL
         7 010022   010030 601000 7                  TNZ     s:15153

     4272    15149    7                       THEN LAST_DATA_DCW = %TRUE;

  15149  7 010023   400000 236003                    LDQ     -131072,DU
         7 010024   200035 756100                    STQ     LAST_DATA_DCW,,AUTO
         7 010025   010030 710000 7                  TRA     s:15153

     4273    15150    7                    CASE (ELSE) ;

     4274    15151    7                       CALL BAD_LIST_ABORT ;

  15151  7 010026   010134 701000 7                  TSX1    BAD_LIST_ABORT
         7 010027   000000 011000                    NOP     0

     4275    15152    7                 END /* CASE */ ;

     4276    15153    6                 IF LIST_SIZE < %DCWLIST_SIZE

  15153  7 010030   200032 235100                    LDA     LIST_SIZE,,AUTO
         7 010031   002424 115007                    CMPA    1300,DL
         7 010032   010036 603000 7                  TRC     s:15155

     4277    15154    6                 THEN LIST_SIZE = LIST_SIZE + 1 ;

  15154  7 010033   000001 035007                    ADLA    1,DL
         7 010034   200032 755100                    STA     LIST_SIZE,,AUTO
         7 010035   010040 710000 7                  TRA     s:15156

     4278    15155    6                 ELSE CALL BAD_LIST_ABORT ;

  15155  7 010036   010134 701000 7                  TSX1    BAD_LIST_ABORT
         7 010037   000000 011000                    NOP     0

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:545  
     4279    15156    6                 DCWLIST$ = PINCRW (DCWLIST$, 1) ;

  15156  7 010040   200031 236100                    LDQ     DCWLIST$,,AUTO
         7 010041   000001 036003                    ADLQ    1,DU
         7 010042   200031 756100                    STQ     DCWLIST$,,AUTO

     4280    15157    6              END /* UNTIL */;

  15157  7 010043   200035 234100                    SZN     LAST_DATA_DCW,,AUTO
         7 010044   007743 605000 7                  TPL     s:15133

     4281    15158    5           END /* THEN */ ;

     4282    15159    4      ELSE /* IDCW specifies a non-data transfer command */ ;
     4283    15160    4      RETURN ;

  15160  7 010045   200034 221300                    LDX1  ! REASON+1,,AUTO
         7 010046   000001 702211                    TSX2  ! 1,X1

     4284    15161
     4285    15162    4   END PROCESS_DCWS ;
     4286    15163        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:546  
     4287    15164    3   PROCESS_IDCW: PROC ;

  15164  7 010047   200034 741300       PROCESS_IDCW STX1  ! REASON+1,,AUTO

     4288    15165
     4289    15166        /* Code */
     4290    15167
     4291    15168    4      DCWLIST$ -> IDCW = DCW$ -> IDCW ;

  15168  7 010050   200030 470500                    LDP0    DCW$,,AUTO
         7 010051   000000 236100                    LDQ     0,,PR0
         7 010052   200031 471500                    LDP1    DCWLIST$,,AUTO
         7 010053   100000 756100                    STQ     0,,PR1

     4292    15169    4      IF (TOP$TCP.IO.CONTROLLER(TCX)) OR (TOP$TCP.TEST_TYPE(TCX) = 'RPM')

  15169  7 010054   200025 473500                    LDP3    @TCX,,AUTO
         7 010055   300000 236100                    LDQ     0,,PR3
         7 010056   000122 402007                    MPY     82,DL
         7 010057   000001 736000                    QLS     1
         7 010060   000003 474400 xsym               LDP4    TOT$DMC+3
         7 010061   400012 236106                    LDQ     10,QL,PR4
         7 010062   100000 316003                    CANQ    32768,DU
         7 010063   010073 601000 7                  TNZ     s:15170
         7 010064   300000 236100                    LDQ     0,,PR3
         7 010065   000122 402007                    MPY     82,DL
         7 010066   000001 736000                    QLS     1
         7 010067   400002 236106                    LDQ     2,QL,PR4
         7 010070   000241 676000 6                  ERQ     CRLF_+91
         7 010071   000010 376000 8                  ANQ     8
         7 010072   010076 601000 7                  TNZ     s:15171

     4293    15170    4      THEN DCWLIST$ -> IDCW.DEVICE_ADDRESS# = '00'O ;

  15170  7 010073   000000 236003                    LDQ     0,DU
         7 010074   100000 752120                    STCQ    0,'20'O,PR1
         7 010075   010100 710000 7                  TRA     s:15173
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:547  

     4294    15171    4      ELSE DCWLIST$ -> IDCW.DEVICE_ADDRESS# = '77'O ;

  15171  7 010076   007700 236003                    LDQ     4032,DU
         7 010077   100000 752120                    STCQ    0,'20'O,PR1

     4295    15172
     4296    15173    4      CONTINUE = DCWLIST$ -> IDCW.CONTINUE# ;

  15173  7 010100   100000 236100                    LDQ     0,,PR1
         7 010101   000026 736000                    QLS     22
         7 010102   400000 376003                    ANQ     -131072,DU
         7 010103   200026 756100                    STQ     CONTINUE,,AUTO

     4297    15174    4      IF DCWLIST$ -> IDCW.CHANNEL_CMD# = 2

  15174  7 010104   100000 236100                    LDQ     0,,PR1
         7 010105   007700 376007                    ANQ     4032,DL
         7 010106   000200 116007                    CMPQ    128,DL
         7 010107   010112 601000 7                  TNZ     s:15176

     4298    15175    4      THEN HAS_DCWS = %FALSE ;

  15175  7 010110   200027 450100                    STZ     HAS_DCWS,,AUTO
         7 010111   010114 710000 7                  TRA     s:15177

     4299    15176    4      ELSE HAS_DCWS = %TRUE ;

  15176  7 010112   400000 236003                    LDQ     -131072,DU
         7 010113   200027 756100                    STQ     HAS_DCWS,,AUTO

     4300    15177    4      DCWLIST$ = PINCRW (DCWLIST$, 1) ;

  15177  7 010114   200031 236100                    LDQ     DCWLIST$,,AUTO
         7 010115   000001 036003                    ADLQ    1,DU
         7 010116   200031 756100                    STQ     DCWLIST$,,AUTO

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:548  
     4301    15178    4      IF LIST_SIZE < %DCWLIST_SIZE

  15178  7 010117   200032 235100                    LDA     LIST_SIZE,,AUTO
         7 010120   002424 115007                    CMPA    1300,DL
         7 010121   010125 603000 7                  TRC     s:15180

     4302    15179    4      THEN LIST_SIZE = LIST_SIZE + 1 ;

  15179  7 010122   000001 035007                    ADLA    1,DL
         7 010123   200032 755100                    STA     LIST_SIZE,,AUTO
         7 010124   010127 710000 7                  TRA     s:15181

     4303    15180    4      ELSE CALL BAD_LIST_ABORT ;

  15180  7 010125   010134 701000 7                  TSX1    BAD_LIST_ABORT
         7 010126   000000 011000                    NOP     0

     4304    15181    4      DCW$ = PINCRW (DCW$, 1) ;

  15181  7 010127   200030 236100                    LDQ     DCW$,,AUTO
         7 010130   000001 036003                    ADLQ    1,DU
         7 010131   200030 756100                    STQ     DCW$,,AUTO

     4305    15182    4      RETURN ;

  15182  7 010132   200034 221300                    LDX1  ! REASON+1,,AUTO
         7 010133   000001 702211                    TSX2  ! 1,X1

     4306    15183
     4307    15184    4   END PROCESS_IDCW ;
     4308    15185        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:549  
     4309    15186    3   BAD_LIST_ABORT: PROC ;

  15186  7 010134   200040 741300       BAD_LIST_AB* STX1  ! @REASON,,AUTO

     4310    15187
     4311    15188        /* Code */
     4312    15189
     4313    15190    4      TOP_ERROR_CODE.ERR# = %E$BADDCWLS ;

  15190  7 010135   000173 236000 5                  LDQ     TOP_ERROR_CODE
         7 010136   000006 376000 8                  ANQ     6
         7 010137   003300 276007                    ORQ     1728,DL
         7 010140   000173 756000 5                  STQ     TOP_ERROR_CODE

     4314    15191    4      CALL TOX$SCREECH (TOP_ERROR_CODE) ;

  15191  7 010141   000007 630400 8                  EPPR0   7
         7 010142   000017 631400 xsym               EPPR1   B_VECTNIL+15
         7 010143   000000 701000 xent               TSX1    TOX$SCREECH
         7 010144   000000 011000                    NOP     0

     4315    15192
     4316    15193    4   END BAD_LIST_ABORT ;

  15193  7 010145   200040 221300                    LDX1  ! @REASON,,AUTO
         7 010146   000001 702211                    TSX2  ! 1,X1

     4317    15194    3   END BUILD_DCW_LIST ;
     4318    15195        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:550  
     4319    15196        /*I* NAME:         ISSUE_IO
     4320    15197             AUTHOR:       Scott S. Sheppard
     4321    15198             PURPOSE:      issues a T&D I/O
     4322    15199             INTERFACE:    M$TDIO
     4323    15200             PARAMETERS:   TCX - indicates which test page I/O is for
     4324    15201             DATA:         TDIO_FPT - input
     4325    15202             DESCRIPTION:  This procedure issues a T&D I/O using the TDIO
     4326    15203                           FPT  which  has  already  been  set up. Before
     4327    15204                           issuing the the I/O, the IO_ISSUED bit for the
     4328    15205                           corresponding test page is set.  The number of
     4329    15206                           outstanding I/O's is also incremented by 1.
     4330    15207        */
     4331    15208
     4332    15209    2   ISSUE_IO: PROC (TCX) ;

  15209  7 010147   200024 741300       ISSUE_IO     STX1  ! @LIST$,,AUTO

     4333    15210
     4334    15211    3      DCL TCX UBIN WORD ALIGNED ;
     4335    15212
     4336    15213        /* Code */
     4337    15214
     4338    15215    4      DO INHIBIT ;

     4339    15216    4         TOT$ECP.IO.COUNT = TOT$ECP.IO.COUNT + 1 ;

  15216  7 010150   000004 054200 xsym               AOS   ! TOT$ECP+4

     4340    15217    4         TOP$TCP.IO.ISSUED(TCX) = %TRUE ;

  15217  7 010151   200025 470700                    LDP0  ! @TCX,,AUTO
         7 010152   000000 236300                    LDQ   ! 0,,PR0
         7 010153   000122 402207                    MPY   ! 82,DL
         7 010154   000001 736200                    QLS   ! 1
         7 010155   000003 471600 xsym               LDP1  ! TOT$DMC+3
         7 010156   000000 620206                    EAX0  ! 0,QL
         7 010157   040000 236203                    LDQ   ! 16384,DU
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:551  
         7 010160   100012 256310                    ORSQ  ! 10,X0,PR1

     4341    15218    4         CALL M$TDIO (TDIO_FPT) ;

  15218  7 010161   000200 630600 5                  EPPR0 ! TDIO_FPT
         7 010162   070004 713600                    CLIMB ! 28676
         7 010163   401000 401760                    pmme    nvectors=3

     4342    15219    4      END /* INHIBIT */ ;

     4343    15220    3      RETURN ;

  15220  7 010164   200024 221300                    LDX1  ! @LIST$,,AUTO
         7 010165   000001 702211                    TSX2  ! 1,X1

     4344    15221
     4345    15222    3   END ISSUE_IO ;
     4346    15223        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:552  
     4347    15224        /*I* NAME:         SET_RETURN_VALUES
     4348    15225             INTERFACE:    M$TIME
     4349    15226             INPUT:        TOP$TCP.TEST_TYPE(TCX)
     4350    15227             OUTPUT:       A - time of day, in 1/64 milliseconds since midnight
     4351    15228                           Q - channel lostit time
     4352    15229                                = 0 for ITRs
     4353    15230                                = 8192 for all others
     4354    15231                           X4 - fake I/O entry address for MME HUNGTM
     4355    15232                           RETURN_DELTA - normal return = 5
     4356    15233             DESCRIPTION:  Sets the lostit time to 0 for ITRs so MME HUNGTM
     4357    15234                           will timeout any special interrupts in 1 minute ;
     4358    15235                           in all other cases, sets lostit time to 8192
     4359    15236                           arbitrarily, just like Multics does.
     4360    15237                           Calls M$TIME to return time of day in 1/64
     4361    15238                           millisecond increments since midnight.
     4362    15239        */
     4363    15240        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:553  
     4364    15241    2   SET_RETURN_VALUES: PROC (TCX, Q, A, X4, RETURN_DELTA) ;

  15241  7 010166   200024 741300       SET_RETURN_* STX1  ! @LIST$,,AUTO

     4365    15242
     4366    15243    3      DCL TCX          UBIN WORD ALIGNED ;
     4367    15244    3      DCL Q            UBIN WORD ALIGNED ;
     4368    15245    3      DCL A            UBIN WORD ALIGNED ;
     4369    15246    3      DCL X4           UBIN HALF HALIGNED ;
     4370    15247    3      DCL RETURN_DELTA SBIN HALF HALIGNED ;
     4371    15248    3      DCL TIME_VALUE   UBIN WORD STATIC ALIGNED ;
     4372    15249           %FPT_TIME (FPTN   = TIME_FPT,
     4373    15250                      SOURCE = CLOCK,
     4374    15251                      DEST   = TUN,
     4375    15252                      TSTAMP = TIME_VALUE) ;
     4376    15271
     4377    15272        /* Code */
     4378    15273
     4379    15274    3      IF TOP$TCP.TEST_TYPE(TCX) = 'ITR'

  15274  7 010167   200025 470500                    LDP0    @TCX,,AUTO
         7 010170   000000 236100                    LDQ     0,,PR0
         7 010171   000122 402007                    MPY     82,DL
         7 010172   000001 736000                    QLS     1
         7 010173   000003 471400 xsym               LDP1    TOT$DMC+3
         7 010174   100002 236106                    LDQ     2,QL,PR1
         7 010175   000117 676000 6                  ERQ     CRLF_+9
         7 010176   000010 376000 8                  ANQ     8
         7 010177   010203 601000 7                  TNZ     s:15276

     4380    15275    3      THEN Q = 0 ;

  15275  7 010200   200026 473500                    LDP3    @Q,,AUTO
         7 010201   300000 450100                    STZ     0,,PR3
         7 010202   010206 710000 7                  TRA     s:15277

     4381    15276    3      ELSE Q = 8192 ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:554  

  15276  7 010203   020000 235007                    LDA     8192,DL
         7 010204   200026 473500                    LDP3    @Q,,AUTO
         7 010205   300000 755100                    STA     0,,PR3

     4382    15277    3      CALL M$TIME (TIME_FPT) ;

  15277  7 010206   024730 630400 5                  EPPR0   TIME_FPT
         7 010207   020004 713400                    CLIMB   8196
         7 010210   402000 401760                    pmme    nvectors=5

     4383    15278    3      A = TIME_VALUE * 64 ;

  15278  7 010211   200027 470500                    LDP0    @A,,AUTO
         7 010212   024726 235000 5                  LDA     TIME_VALUE
         7 010213   000006 735000                    ALS     6
         7 010214   000000 755100                    STA     0,,PR0

     4384    15279    3      X4 = TOP$TCP.ADR.IOENTRY(TCX) ;

  15279  7 010215   200025 471500                    LDP1    @TCX,,AUTO
         7 010216   100000 236100                    LDQ     0,,PR1
         7 010217   000122 402007                    MPY     82,DL
         7 010220   000003 736000                    QLS     3
         7 010221   000003 473400 xsym               LDP3    TOT$DMC+3
         7 010222   200030 474500                    LDP4    @X4,,AUTO
         7 010223   000100 100506                    MLR     fill='000'O
         7 010224   300011 400002                    ADSC9   9,Q,PR3                  cn=2,n=2
         7 010225   400000 000002                    ADSC9   0,,PR4                   cn=0,n=2

     4385    15280    3      RETURN_DELTA = 5 ;

  15280  7 010226   200031 473500                    LDP3    @RETURN_DELTA,,AUTO
         7 010227   000100 101400                    MRL     fill='000'O
         7 010230   000007 000004 xsym               ADSC9   B_VECTNIL+7              cn=0,n=4
         7 010231   300000 000002                    ADSC9   0,,PR3                   cn=0,n=2

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:555  
     4386    15281    3      RETURN ;

  15281  7 010232   200024 221300                    LDX1  ! @LIST$,,AUTO
         7 010233   000001 702211                    TSX2  ! 1,X1

     4387    15282
     4388    15283    3   END SET_RETURN_VALUES ;
     4389    15284    2   END TOP$MME_TESTIO ;
     4390    15285        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:556  
     4391    15286        /*I* NAME:         TOP$MME_UNSPEC
     4392    15287             CALL:         CALL TOP$MME_UNSPEC(P_X1REG,RETURN_DELTA) ;
     4393    15288             INTERFACE:
     4394    15289             INPUT:
     4395    15290             OUTPUT:
     4396    15291             DESCRIPTION:  Not used in CP6 because the card reader will be
     4397    15292                           unspec when it is partitioned.
     4398    15293        */
     4399    15294
     4400    15295    1   TOP$MME_UNSPEC: PROC (P_X1REG,RETURN_DELTA) ;

  15295  7 010234   200010 741300       TOP$MME_UNS* STX1  ! @RETURN_DELTA+2,,AUTO

     4401    15296
     4402    15297    2      DCL P_X1REG  UBIN HALF HALIGNED ;
     4403    15298    2      DCL RETURN_DELTA SBIN HALF ;
     4404    15299
     4405    15300        /* Code */
     4406    15301
     4407    15302    2      RETURN_DELTA = 2 ;

  15302  7 010235   000002 220003                    LDX0    2,DU
         7 010236   200012 470500                    LDP0    @RETURN_DELTA,,AUTO
         7 010237   000000 740100                    STX0    0,,PR0

     4408    15303    2      RETURN ;

  15303  7 010240   200010 221300                    LDX1  ! @RETURN_DELTA+2,,AUTO
         7 010241   000001 702211                    TSX2  ! 1,X1

     4409    15304
     4410    15305    2   END TOP$MME_UNSPEC ;
     4411    15306        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:557  
     4412    15307        /*I* NAME:         TOP$MME_WRDUMP
     4413    15308             CALL:         CALL TOP$MME_WRDUMP (A, Q, X1, X2, RETURN_DELTA)
     4414    15309             INTERFACE:    DO_YOU_WANT_A_DUMP
     4415    15310                           GET_DUMP_OUTPUT_MODE
     4416    15311                           OPEN_DUMP_RECIPTICLE
     4417    15312                           SET_DUMP_PARAMS
     4418    15313                           EXECUTE_DUMP
     4419    15314                           CLOSE_DUMP_RECEPTICLE
     4420    15315             INPUT:        A_REG.SIZE - number of words in dump header
     4421    15316             OUTPUT:       Dump sent to the line printer or a file
     4422    15317             DESCRIPTION:  This procedure produces a dump on a wrapup request
     4423    15318                           if the user instructs the module to do so.
     4424    15319        */
     4425    15320
     4426    15321    1   TOP$MME_WRDUMP: PROC (A_REG, Q_REG, X1_REG, X2_REG, RETURN_DELTA) ;

  15321  7 010242   200010 741300       TOP$MME_WRD* STX1  ! @RETURN_DELTA+2,,AUTO

     4427    15322
     4428    15323        /* SYSTEM Stuff */
     4429    15324
     4430    15325           %B$TCB ;
     4431    15328           %B$ALT ;
     4432    15336
     4433    15337        /* EQUates */
     4434    15338
     4435    15339           %EQU SUBEXEC = 1 ;
     4436    15340           %EQU TEST_PAGE = 2 ;
     4437    15341           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:558  
     4438    15342        /* Parameters */
     4439    15343
     4440    15344    2      DCL 1 A_REG ALIGNED,
     4441    15345    2            2 ADDR# UBIN (18) UNAL,
     4442    15346    2            2 SIZE# UBIN (18) UNAL ;
     4443    15347    2      DCL 1 Q_REG ALIGNED,
     4444    15348    2            2 ADDR# UBIN (18) UNAL,
     4445    15349    2            2 SIZE# UBIN (18) UNAL ;
     4446    15350    2      DCL X1_REG SBIN (18) HALIGNED ;
     4447    15351    2      DCL X2_REG UBIN (18) HALIGNED ;
     4448    15352    2      DCL RETURN_DELTA SBIN HALF ;
     4449    15353
     4450    15354        /* DeCLarations */
     4451    15355
     4452    15356    2      DCL OCT_WORDS_PER_LINE UBIN WORD ALIGNED ;
     4453    15357    2      DCL OCT_WORDS_PER_LINE_SBIN REDEF OCT_WORDS_PER_LINE SBIN WORD ALIGNED;
     4454    15358    2      DCL 1 DUMP_LINE STATIC CALIGNED,
     4455    15359    2            2 * CHAR (1) INIT ('.'),
     4456    15360    2            2 ACTUAL_ADDR# CHAR (6),
     4457    15361    2            2 * CHAR (2) INIT (' .'),
     4458    15362    2            2 RELATIVE_ADDR# CHAR (6),
     4459    15363    2            2 * CHAR (1) INIT (' '),
     4460    15364    2            2 EDIT_NAME# CHAR (4),
     4461    15365    2            2 * CHAR (1) INIT (' '),
     4462    15366    2            2 DUMP_OUTPUT# CHAR (104) INIT (' '),
     4463    15367    2            2 DUMP_OUTPUT_(0:7) REDEF DUMP_OUTPUT#,
     4464    15368    2              3 * CHAR (1),
     4465    15369    2              3 OCT_WORD_ASC# CHAR (12) ;
     4466    15370    2      DCL 1 FILE_OUTPUT_LINE REDEF DUMP_LINE CALIGNED,
     4467    15371    2            2 DUMP_LINE# CHAR (73),
     4468    15372    2            2 * CHAR (52) ;
     4469    15373    2      DCL TP_BASE_REL_ADDR UBIN WORD ALIGNED ;
     4470    15374    2      DCL DUMP_WORD_INX UBIN WORD ALIGNED ;
     4471    15375    2      DCL DUMP_QUES CHAR (19) CONSTANT CALIGNED INIT ('Do you want a dump:') ;
     4472    15376    2      DCL FID_QUES  CHAR (20) CONSTANT CALIGNED INIT
     4473    15377    2                       ('Enter ''LP'' or <fid>:') ;
     4474    15378    2      DCL EDIT_NAME CHAR (4) CALIGNED ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:559  
     4475    15379    2      DCL DUMP_HDR$ PTR ALIGNED ;
     4476    15380    2      DCL DUMP_LINE_INX SBIN WORD ALIGNED ;
     4477    15381    2      DCL DUMP_HDR_SIZE UBIN WORD ALIGNED ;
     4478    15382    2      DCL TP_STATS_INX SBIN WORD ALIGNED ;
     4479    15383    2      DCL BCD_BUF(0:1199) UBIN WORD ALIGNED ;
     4480    15384    2      DCL ASCII_BUF CHAR (7200) CALIGNED ;
     4481    15385    2      DCL TEMP_ASCII_BUF CHAR (12) ALIGNED ;
     4482    15386    2      DCL DUMP_WORD_OCT UBIN WORD BASED ALIGNED ;
     4483    15387    2      DCL DUMP_SIZE UBIN WORD ALIGNED ;
     4484    15388    2      DCL DUMP_SIZE_SBIN REDEF DUMP_SIZE SBIN WORD ALIGNED ;
     4485    15389    2      DCL ADDR_TRANS$ PTR STATIC ALIGNED ;
     4486    15390    2      DCL READ_BUF CHAR (80) STATIC CALIGNED INIT (' ') ;
     4487    15391    2      DCL READ_BUF_(0:79) REDEF READ_BUF CHAR (1) CALIGNED ;
     4488    15392    2      DCL BL_INX SBIN WORD ALIGNED ;
     4489    15393    2      DCL CHR_INX SBIN WORD ALIGNED ;
     4490    15394    2      DCL DOT_INX SBIN WORD ALIGNED ;
     4491    15395    2      DCL LP_DUMP BIT (1) UNAL ;
     4492    15396    2      DCL 1 DUMP_ STATIC ALIGNED,
     4493    15397    2            2 ADDR# UBIN (18) UNAL,
     4494    15398    2            2 SEGID# UBIN (18) UNAL INIT (%IS_SEGID) ;
     4495    15399    2      DCL DUMP$ REDEF DUMP_ PTR ALIGNED ;
     4496    15400    2      DCL DUMP_ADDR_TEMP UBIN WORD ALIGNED ;
     4497    15401    2      DCL DUMP_TYPE UBIN HALF HALIGNED ;
     4498    15402           %F$DCB ;
     4499    15459           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:560  
     4500    15460        /* FPTs */
     4501    15461
     4502    15462           %FPT_CLOSE    (FPTN = CLOSE_DUMP,
     4503    15463                          DCB = M$DUMP,
     4504    15464                          DISP = SAVE) ;
     4505    15506           %FPT_OPEN     (FPTN = OPEN_LP,
     4506    15507                          ASN = DEVICE,
     4507    15508                          DCB = M$DUMP,
     4508    15509                          ORG = UR,
     4509    15510                          RES = 'LP') ;
     4510    15619           %FPT_OPEN     (FPTN = OPEN_DUMP_FILE,
     4511    15620                          ACCT = DUMP_ACCT,
     4512    15621                          ASN = FILE,
     4513    15622                          DCB = M$DUMP,
     4514    15623                          DISP = NAMED,
     4515    15624                          EXIST = ERROR,
     4516    15625                          FUN = CREATE,
     4517    15626                          NAME = DUMP_NAME,
     4518    15627                          ORG = CONSEC,
     4519    15628                          SHARE = NONE) ;
     4520    15737           %FPT_PROMPT   (FPTN = DUMP_PROMPT,
     4521    15738                          PROMPT = DUMP_QUES) ;
     4522    15766           %FPT_PROMPT   (FPTN = LP_OR_FID,
     4523    15767                          PROMPT = FID_QUES) ;
     4524    15795           %FPT_WRITE    (FPTN = WRITE_HDR_LINE,
     4525    15796                          DCB = M$DUMP) ;
     4526    15827           %FPT_WRITE    (FPTN = WRITE_DUMP,
     4527    15828                          DCB = M$DUMP) ;
     4528    15859           %VLP_NAME     (FPTN = DUMP_NAME,
     4529    15860                          LEN  = 31) ;
     4530    15887           %VLP_ACCT     (FPTN = DUMP_ACCT) ;
     4531    15900           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:561  
     4532    15901        /* Code */
     4533    15902
     4534    15903    2      CALL WRAP_DUMP_MSG ;

  15903  7 010243   010266 701000 7                  TSX1    WRAP_DUMP_MSG
         7 010244   000000 011000                    NOP     0

     4535    15904    2      CALL DO_YOU_WANT_A_DUMP ALTRET (NO_DUMP) ;

  15904  7 010245   010340 701000 7                  TSX1    DO_YOU_WANT_A_DUMP
         7 010246   010257 702000 7                  TSX2    NO_DUMP

     4536    15905
     4537    15906    2   UNSUCCESSFUL_DUMP:
     4538    15907    2      CALL GET_DUMP_OUTPUT_MODE ALTRET (UNSUCCESSFUL_DUMP) ;

  15907  7 010247   010477 701000 7     UNSUCCESSFU* TSX1    GET_DUMP_OUTPUT_MODE
         7 010250   010247 702000 7                  TSX2    UNSUCCESSFUL_DUMP

     4539    15908    2      CALL OPEN_DUMP_RECEPTICLE ALTRET (UNSUCCESSFUL_DUMP) ;

  15908  7 010251   010657 701000 7                  TSX1    OPEN_DUMP_RECEPTICLE
         7 010252   010247 702000 7                  TSX2    UNSUCCESSFUL_DUMP

     4540    15909    2      CALL SET_DUMP_PARAMS ALTRET (NO_DUMP) ;

  15909  7 010253   010730 701000 7                  TSX1    SET_DUMP_PARAMS
         7 010254   010257 702000 7                  TSX2    NO_DUMP

     4541    15910    2      CALL EXECUTE_DUMP ;

  15910  7 010255   011034 701000 7                  TSX1    EXECUTE_DUMP
         7 010256   000000 011000                    NOP     0

     4542    15911
     4543    15912    2   NO_DUMP:
     4544    15913    2      CALL CLOSE_DUMP_RECEPTICLE ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:562  

  15913  7 010257   011504 701000 7     NO_DUMP      TSX1    CLOSE_DUMP_RECEPTICLE
         7 010260   000000 011000                    NOP     0

     4545    15914    2      RETURN_DELTA = 1 ;

  15914  7 010261   000001 220003                    LDX0    1,DU
         7 010262   200015 470500                    LDP0    @RETURN_DELTA,,AUTO
         7 010263   000000 740100                    STX0    0,,PR0

     4546    15915    2      RETURN ;

  15915  7 010264   200010 221300                    LDX1  ! @RETURN_DELTA+2,,AUTO
         7 010265   000001 702211                    TSX2  ! 1,X1

     4547    15916
     4548    15917        /* END TOP$MME_WRDUMP */
     4549    15918        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:563  
     4550    15919    2   WRAP_DUMP_MSG: PROC ;

  15919  7 010266   205730 741300       WRAP_DUMP_M* STX1  ! DUMP_TYPE+1,,AUTO

     4551    15920
     4552    15921    3      DCL 1 MESSAGE STATIC CALIGNED,
     4553    15922    3            2 SUBEXEC CHAR (5) UNAL INIT (' '),
     4554    15923    3            2 *       CHAR (0) UNAL INIT (' Subexecutive wrapping up.') ;
     4555    15924
     4556    15925        /* Code */
     4557    15926
     4558    15927    4      DO CASE (TOT$ECP.SUBEXEC.CURRENT) ;

  15927  7 010267   000007 235000 xsym               LDA     TOT$ECP+7
         7 010270   000010 135007                    SBLA    8,DL
         7 010271   000006 115007                    CMPA    6,DL
         7 010272   010274 602005 7                  TNC     s:15927+5,AL
         7 010273   010331 710000 7                  TRA     s:15941
         7 010274   010302 710000 7                  TRA     s:15929
         7 010275   010306 710000 7                  TRA     s:15931
         7 010276   010312 710000 7                  TRA     s:15933
         7 010277   010316 710000 7                  TRA     s:15935
         7 010300   010326 710000 7                  TRA     s:15939
         7 010301   010322 710000 7                  TRA     s:15937

     4559    15928    4         CASE (%COLTS) ;

     4560    15929    4            MESSAGE.SUBEXEC = 'COLTS' ;

  15929  7 010302   040000 100400                    MLR     fill='040'O
         7 010303   000242 000005 6                  ADSC9   CRLF_+92                 cn=0,n=5
         7 010304   025342 000005 5                  ADSC9   MESSAGE                  cn=0,n=5
         7 010305   010331 710000 7                  TRA     s:15941

     4561    15930    4         CASE (%MOLTS) ;

     4562    15931    4            MESSAGE.SUBEXEC = 'MOLTS' ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:564  

  15931  7 010306   040000 100400                    MLR     fill='040'O
         7 010307   000244 000005 6                  ADSC9   CRLF_+94                 cn=0,n=5
         7 010310   025342 000005 5                  ADSC9   MESSAGE                  cn=0,n=5
         7 010311   010331 710000 7                  TRA     s:15941

     4563    15932    4         CASE (%POLTS) ;

     4564    15933    4            MESSAGE.SUBEXEC = 'POLTS' ;

  15933  7 010312   040000 100400                    MLR     fill='040'O
         7 010313   000246 000005 6                  ADSC9   CRLF_+96                 cn=0,n=5
         7 010314   025342 000005 5                  ADSC9   MESSAGE                  cn=0,n=5
         7 010315   010331 710000 7                  TRA     s:15941

     4565    15934    4         CASE (%SOLTS) ;

     4566    15935    4            MESSAGE.SUBEXEC = 'SOLTS' ;

  15935  7 010316   040000 100400                    MLR     fill='040'O
         7 010317   000250 000005 6                  ADSC9   CRLF_+98                 cn=0,n=5
         7 010320   025342 000005 5                  ADSC9   MESSAGE                  cn=0,n=5
         7 010321   010331 710000 7                  TRA     s:15941

     4567    15936    4         CASE (%SLTA) ;

     4568    15937    4            MESSAGE.SUBEXEC = 'SOLTA' ;

  15937  7 010322   040000 100400                    MLR     fill='040'O
         7 010323   000252 000005 6                  ADSC9   CRLF_+100                cn=0,n=5
         7 010324   025342 000005 5                  ADSC9   MESSAGE                  cn=0,n=5
         7 010325   010331 710000 7                  TRA     s:15941

     4569    15938    4         CASE (%PACT) ;

     4570    15939    4            MESSAGE.SUBEXEC = 'PACT ' ;

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:565  
  15939  7 010326   040000 100400                    MLR     fill='040'O
         7 010327   000254 000005 6                  ADSC9   CRLF_+102                cn=0,n=5
         7 010330   025342 000005 5                  ADSC9   MESSAGE                  cn=0,n=5

     4571    15940    4      END /* CASE */ ;

     4572    15941    3      CONSOLE_FPT.BUF_ = VECTOR (MESSAGE) ;

  15941  7 010331   000064 237000 8                  LDAQ    52
         7 010332   000004 757000 xsym               STAQ    CONSOLE_FPT+4

     4573    15942    3      CALL TOT$CONSOLE_OUT ;

  15942  7 010333   000002 631400 xsym               EPPR1   B_VECTNIL+2
         7 010334   000000 701000 xent               TSX1    TOT$CONSOLE_OUT
         7 010335   000000 011000                    NOP     0

     4574    15943    3      RETURN ;

  15943  7 010336   205730 221300                    LDX1  ! DUMP_TYPE+1,,AUTO
         7 010337   000001 702211                    TSX2  ! 1,X1

     4575    15944
     4576    15945    3   END WRAP_DUMP_MSG ;
     4577    15946        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:566  
     4578    15947    2   DO_YOU_WANT_A_DUMP: PROC ALTRET ;

  15947  7 010340   205730 741300       DO_YOU_WANT* STX1  ! DUMP_TYPE+1,,AUTO

     4579    15948
     4580    15949    3      DCL VALID_RESPONSE BIT (1) UNAL ;
     4581    15950    3      DCL YES_RESP  CHAR (3) CONSTANT CALIGNED INIT ('YES') ;
     4582    15951    3      DCL NO_RESP   CHAR (3) CONSTANT CALIGNED INIT ('NO ') ;
     4583    15952
     4584    15953        /* Code */
     4585    15954
     4586    15955    3      CALL M$PROMPT (DUMP_PROMPT) ;

  15955  7 010341   025254 630400 5                  EPPR0   DUMP_PROMPT
         7 010342   160002 713400                    CLIMB   57346
         7 010343   401000 401760                    pmme    nvectors=3

     4587    15956    4      DO UNTIL VALID_RESPONSE ;

     4588    15957    4         READ_BUF = ' ' ;

  15957  7 010344   040000 100400                    MLR     fill='040'O
         7 010345   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         7 010346   025005 000120 5                  ADSC9   READ_BUF                 cn=0,n=80

     4589    15958    4         READ_IO.BUF_ = VECTOR (READ_BUF) ;

  15958  7 010347   000066 237000 8                  LDAQ    54
         7 010350   000004 757000 xsym               STAQ    READ_IO+4

     4590    15959    4         CALL TOT$CONSOLE_IN ;

  15959  7 010351   000002 631400 xsym               EPPR1   B_VECTNIL+2
         7 010352   000000 701000 xent               TSX1    TOT$CONSOLE_IN
         7 010353   000000 011000                    NOP     0

     4591    15960
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:567  
     4592    15961              /* Skip leading spaces */
     4593    15962    4         CHR_INX = 0 ;

  15962  7 010354   205723 450100                    STZ     CHR_INX,,AUTO

     4594    15963    5         DO WHILE READ_BUF_(CHR_INX) = ' ' AND CHR_INX < 80 ;

  15963  7 010355   010357 710000 7                  TRA     s:15965

     4595    15964    5            CHR_INX = CHR_INX + 1 ;

  15964  7 010356   205723 054100                    AOS     CHR_INX,,AUTO

     4596    15965    5         END /* WHILE */ ;

  15965  7 010357   205723 235100                    LDA     CHR_INX,,AUTO
         7 010360   040000 106405                    CMPC    fill='040'O
         7 010361   025005 000001 5                  ADSC9   READ_BUF,A               cn=0,n=1
         7 010362   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         7 010363   010366 601000 7                  TNZ     s:15968
         7 010364   000120 115007                    CMPA    80,DL
         7 010365   010356 604000 7                  TMI     s:15964

     4597    15966
     4598    15967              /* Find first blank following first non-blank */
     4599    15968    4         CALL INDEX (BL_INX, ' ', READ_BUF, CHR_INX) ;

  15968  7 010366   777657 620005                    EAX0    -81,AL
         7 010367   777777 660003                    ERX0    -1,DU
         7 010370   205723 236100                    LDQ     CHR_INX,,AUTO
         7 010371   000000 124445                    SCM     mask='000'O
         7 010372   025005 000010 5                  ADSC9   READ_BUF,A               cn=0,n=*X0
         7 010373   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         7 010374   205722 000100                    ARG     BL_INX,,AUTO
         7 010375   205722 056100                    ASQ     BL_INX,,AUTO

     4600    15969              %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:568  
     4601    15970              /* Check Response for Yes or No */
     4602    15971    4         IF BL_INX - CHR_INX > 0  AND  BL_INX - CHR_INX < 4

  15971  7 010376   205722 236100                    LDQ     BL_INX,,AUTO
         7 010377   205723 136100                    SBLQ    CHR_INX,,AUTO
         7 010400   010453 604400 7                  TMOZ    s:15984
         7 010401   205722 236100                    LDQ     BL_INX,,AUTO
         7 010402   205723 136100                    SBLQ    CHR_INX,,AUTO
         7 010403   000004 116007                    CMPQ    4,DL
         7 010404   010453 605000 7                  TPL     s:15984

     4603    15972    4         THEN IF SUBSTR (READ_BUF, CHR_INX, BL_INX - CHR_INX) =

  15972  7 010405   205722 236100                    LDQ     BL_INX,,AUTO
         7 010406   205723 136100                    SBLQ    CHR_INX,,AUTO
         7 010407   205740 756100                    STQ     BCD_BUF_INX+1,,AUTO
         7 010410   205722 236100                    LDQ     BL_INX,,AUTO
         7 010411   205723 136100                    SBLQ    CHR_INX,,AUTO
         7 010412   205740 721100                    LXL1    BCD_BUF_INX+1,,AUTO
         7 010413   000000 622006                    EAX2    0,QL
         7 010414   040040 106445                    CMPC    fill='040'O
         7 010415   025005 000011 5                  ADSC9   READ_BUF,A               cn=0,n=*X1
         7 010416   000104 000012 6                  ADSC9   YES_RESP                 cn=0,n=*X2
         7 010417   010423 601000 7                  TNZ     s:15975

     4604    15973    4                    SUBSTR (YES_RESP, 0, BL_INX - CHR_INX)
     4605    15974    4            THEN VALID_RESPONSE = %TRUE ;

  15974  7 010420   400000 236003                    LDQ     -131072,DU
         7 010421   205731 756100                    STQ     VALID_RESPONSE,,AUTO
         7 010422   010464 710000 7                  TRA     s:15988

     4606    15975    4            ELSE IF SUBSTR (READ_BUF, CHR_INX, BL_INX - CHR_INX) =

  15975  7 010423   205722 236100                    LDQ     BL_INX,,AUTO
         7 010424   205723 136100                    SBLQ    CHR_INX,,AUTO
         7 010425   205740 756100                    STQ     BCD_BUF_INX+1,,AUTO
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:569  
         7 010426   205722 236100                    LDQ     BL_INX,,AUTO
         7 010427   205723 136100                    SBLQ    CHR_INX,,AUTO
         7 010430   205740 721100                    LXL1    BCD_BUF_INX+1,,AUTO
         7 010431   000000 622006                    EAX2    0,QL
         7 010432   040040 106445                    CMPC    fill='040'O
         7 010433   025005 000011 5                  ADSC9   READ_BUF,A               cn=0,n=*X1
         7 010434   000105 000012 6                  ADSC9   NO_RESP                  cn=0,n=*X2
         7 010435   010441 601000 7                  TNZ     s:15979

     4607    15976    4                       SUBSTR (NO_RESP, 0, BL_INX - CHR_INX)
     4608    15977    4               THEN VALID_RESPONSE = %TRUE ;

  15977  7 010436   400000 236003                    LDQ     -131072,DU
         7 010437   205731 756100                    STQ     VALID_RESPONSE,,AUTO
         7 010440   010464 710000 7                  TRA     s:15988

     4609    15978    5               ELSE DO ;

     4610    15979    5                       VALID_RESPONSE = %FALSE ;

  15979  7 010441   205731 450100                    STZ     VALID_RESPONSE,,AUTO

     4611    15980    5                       TOP_ERROR_CODE.ERR# = %E$BADRESP ;

  15980  7 010442   000173 236000 5                  LDQ     TOP_ERROR_CODE
         7 010443   000006 376000 8                  ANQ     6
         7 010444   003310 276007                    ORQ     1736,DL
         7 010445   000173 756000 5                  STQ     TOP_ERROR_CODE

     4612    15981    5                       CALL TOX$WARN (TOP_ERROR_CODE) ;

  15981  7 010446   000007 630400 8                  EPPR0   7
         7 010447   000017 631400 xsym               EPPR1   B_VECTNIL+15
         7 010450   000000 701000 xent               TSX1    TOX$WARN
         7 010451   000000 011000                    NOP     0

     4613    15982    5                    END /* ELSE */ ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:570  

  15982  7 010452   010464 710000 7                  TRA     s:15988

     4614    15983    5         ELSE DO ;

     4615    15984    5                 VALID_RESPONSE = %FALSE ;

  15984  7 010453   205731 450100                    STZ     VALID_RESPONSE,,AUTO

     4616    15985    5                 TOP_ERROR_CODE.ERR# = %E$BADRESP ;

  15985  7 010454   000173 236000 5                  LDQ     TOP_ERROR_CODE
         7 010455   000006 376000 8                  ANQ     6
         7 010456   003310 276007                    ORQ     1736,DL
         7 010457   000173 756000 5                  STQ     TOP_ERROR_CODE

     4617    15986    5                 CALL TOX$WARN (TOP_ERROR_CODE) ;

  15986  7 010460   000007 630400 8                  EPPR0   7
         7 010461   000017 631400 xsym               EPPR1   B_VECTNIL+15
         7 010462   000000 701000 xent               TSX1    TOX$WARN
         7 010463   000000 011000                    NOP     0

     4618    15987    5              END /* ELSE */ ;

     4619    15988    4      END /* UNTIL */ ;

  15988  7 010464   205731 234100                    SZN     VALID_RESPONSE,,AUTO
         7 010465   010344 605000 7                  TPL     s:15957

     4620    15989
     4621    15990           /* If dump desired then return else altreturn */
     4622    15991    3      IF READ_BUF_(CHR_INX) = 'Y'

  15991  7 010466   205723 235100                    LDA     CHR_INX,,AUTO
         7 010467   040000 106405                    CMPC    fill='040'O
         7 010470   025005 000001 5                  ADSC9   READ_BUF,A               cn=0,n=1
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:571  
         7 010471   000070 000001 8                  ADSC9   56                       cn=0,n=1
         7 010472   010475 601000 7                  TNZ     s:15993

     4623    15992    3      THEN RETURN ;

  15992  7 010473   205730 221300                    LDX1  ! DUMP_TYPE+1,,AUTO
         7 010474   000001 702211                    TSX2  ! 1,X1

     4624    15993    3      ELSE ALTRETURN ;

  15993  7 010475   205730 221300                    LDX1  ! DUMP_TYPE+1,,AUTO
         7 010476   000000 702211                    TSX2  ! 0,X1

     4625    15994
     4626    15995    3   END DO_YOU_WANT_A_DUMP ;
     4627    15996        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:572  
     4628    15997    2   GET_DUMP_OUTPUT_MODE: PROC ALTRET ;

  15997  7 010477   205730 741300       GET_DUMP_OU* STX1  ! DUMP_TYPE+1,,AUTO

     4629    15998
     4630    15999        /* Code */
     4631    16000
     4632    16001    3      CALL M$PROMPT (LP_OR_FID) ;

  16001  7 010500   025266 630400 5                  EPPR0   LP_OR_FID
         7 010501   160002 713400                    CLIMB   57346
         7 010502   401000 401760                    pmme    nvectors=3

     4633    16002    3      READ_BUF = ' ' ;

  16002  7 010503   040000 100400                    MLR     fill='040'O
         7 010504   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         7 010505   025005 000120 5                  ADSC9   READ_BUF                 cn=0,n=80

     4634    16003    3      READ_IO.BUF_ = VECTOR (READ_BUF) ;

  16003  7 010506   000066 237000 8                  LDAQ    54
         7 010507   000004 757000 xsym               STAQ    READ_IO+4

     4635    16004    3      CALL TOT$CONSOLE_IN ;

  16004  7 010510   000002 631400 xsym               EPPR1   B_VECTNIL+2
         7 010511   000000 701000 xent               TSX1    TOT$CONSOLE_IN
         7 010512   000000 011000                    NOP     0

     4636    16005
     4637    16006    3      IF READ_BUF = ' '

  16006  7 010513   040000 106400                    CMPC    fill='040'O
         7 010514   025005 000120 5                  ADSC9   READ_BUF                 cn=0,n=80
         7 010515   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         7 010516   010522 601000 7                  TNZ     s:16010
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:573  

     4638    16007    3      THEN LP_DUMP = %TRUE ;

  16007  7 010517   400000 236003                    LDQ     -131072,DU
         7 010520   205725 756100                    STQ     LP_DUMP,,AUTO
         7 010521   010562 710000 7                  TRA     s:16025

     4639    16008    4      ELSE DO ;

     4640    16009                   /* Delimit user reply */
     4641    16010    4              CHR_INX = 0 ;

  16010  7 010522   205723 450100                    STZ     CHR_INX,,AUTO

     4642    16011    5              DO WHILE READ_BUF_(CHR_INX) = ' ' AND CHR_INX < 80 ;

  16011  7 010523   010525 710000 7                  TRA     s:16013

     4643    16012    5                 CHR_INX = CHR_INX + 1 ;

  16012  7 010524   205723 054100                    AOS     CHR_INX,,AUTO

     4644    16013    5              END /* WHILE */ ;

  16013  7 010525   205723 235100                    LDA     CHR_INX,,AUTO
         7 010526   040000 106405                    CMPC    fill='040'O
         7 010527   025005 000001 5                  ADSC9   READ_BUF,A               cn=0,n=1
         7 010530   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         7 010531   010534 601000 7                  TNZ     s:16014
         7 010532   000120 115007                    CMPA    80,DL
         7 010533   010524 604000 7                  TMI     s:16012

     4645    16014    4              CALL INDEX (BL_INX, ' ', READ_BUF, CHR_INX) ;

  16014  7 010534   777657 620005                    EAX0    -81,AL
         7 010535   777777 660003                    ERX0    -1,DU
         7 010536   205723 236100                    LDQ     CHR_INX,,AUTO
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:574  
         7 010537   000000 124445                    SCM     mask='000'O
         7 010540   025005 000010 5                  ADSC9   READ_BUF,A               cn=0,n=*X0
         7 010541   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         7 010542   205722 000100                    ARG     BL_INX,,AUTO
         7 010543   205722 056100                    ASQ     BL_INX,,AUTO

     4646    16015
     4647    16016                   /* Check for 'LP' or file identifier */
     4648    16017    4              IF BL_INX - CHR_INX = 2 AND

  16017  7 010544   205722 236100                    LDQ     BL_INX,,AUTO
         7 010545   205723 136100                    SBLQ    CHR_INX,,AUTO
         7 010546   000002 116007                    CMPQ    2,DL
         7 010547   010557 601000 7                  TNZ     s:16021
         7 010550   040000 106405                    CMPC    fill='040'O
         7 010551   025005 000002 5                  ADSC9   READ_BUF,A               cn=0,n=2
         7 010552   000256 000002 6                  ADSC9   CRLF_+104                cn=0,n=2
         7 010553   010557 601000 7                  TNZ     s:16021

     4649    16018    4                      SUBSTR (READ_BUF, CHR_INX, 2) = 'LP'
     4650    16019    4              THEN LP_DUMP = %TRUE ;

  16019  7 010554   400000 236003                    LDQ     -131072,DU
         7 010555   205725 756100                    STQ     LP_DUMP,,AUTO
         7 010556   010562 710000 7                  TRA     s:16025

     4651    16020    5              ELSE DO ;

     4652    16021    5                      LP_DUMP = %FALSE ;

  16021  7 010557   205725 450100                    STZ     LP_DUMP,,AUTO

     4653    16022    5                      CALL SETUP_DUMP_FID ALTRET (BAD_FID) ;

  16022  7 010560   010566 701000 7                  TSX1    SETUP_DUMP_FID
         7 010561   010564 702000 7                  TSX2    BAD_FID

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:575  
     4654    16023    5                   END /* ELSE */ ;

     4655    16024    4           END /* ELSE */ ;

     4656    16025    3      RETURN ;

  16025  7 010562   205730 221300                    LDX1  ! DUMP_TYPE+1,,AUTO
         7 010563   000001 702211                    TSX2  ! 1,X1

     4657    16026
     4658    16027    3   BAD_FID:
     4659    16028    3      ALTRETURN ;

  16028  7 010564   205730 221300       BAD_FID      LDX1  ! DUMP_TYPE+1,,AUTO
         7 010565   000000 702211                    TSX2  ! 0,X1

     4660    16029
     4661    16030        /* END GET_DUMP_OUTPUT_MODE */
     4662    16031        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:576  
     4663    16032    3   SETUP_DUMP_FID: PROC ALTRET ;

  16032  7 010566   205732 741300       SETUP_DUMP_* STX1  ! EDIT_NAME_FOUND+1,,AUTO

     4664    16033
     4665    16034        /* Code */
     4666    16035
     4667    16036    4      CALL INDEX (DOT_INX, '.', READ_BUF, CHR_INX) ;

  16036  7 010567   205723 720100                    LXL0    CHR_INX,,AUTO
         7 010570   777657 620010                    EAX0    -81,X0
         7 010571   777777 660003                    ERX0    -1,DU
         7 010572   205723 236100                    LDQ     CHR_INX,,AUTO
         7 010573   205723 235100                    LDA     CHR_INX,,AUTO
         7 010574   000000 124445                    SCM     mask='000'O
         7 010575   025005 000010 5                  ADSC9   READ_BUF,A               cn=0,n=*X0
         7 010576   000071 000001 8                  ADSC9   57                       cn=0,n=1
         7 010577   205724 000100                    ARG     DOT_INX,,AUTO
         7 010600   205724 056100                    ASQ     DOT_INX,,AUTO

     4668    16037    4      IF DOT_INX = CHR_INX

  16037  7 010601   205724 236100                    LDQ     DOT_INX,,AUTO
         7 010602   205723 116100                    CMPQ    CHR_INX,,AUTO
         7 010603   010616 601000 7                  TNZ     s:16043

     4669    16038    5      THEN DO ;

     4670    16039    5              TOP_ERROR_CODE.ERR# = %E$BADFILEID ;

  16039  7 010604   000173 236000 5                  LDQ     TOP_ERROR_CODE
         7 010605   000006 376000 8                  ANQ     6
         7 010606   003320 276007                    ORQ     1744,DL
         7 010607   000173 756000 5                  STQ     TOP_ERROR_CODE

     4671    16040    5              CALL TOX$WARN (TOP_ERROR_CODE) ;

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:577  
  16040  7 010610   000007 630400 8                  EPPR0   7
         7 010611   000017 631400 xsym               EPPR1   B_VECTNIL+15
         7 010612   000000 701000 xent               TSX1    TOX$WARN
         7 010613   000000 011000                    NOP     0

     4672    16041    5              ALTRETURN ;

  16041  7 010614   205732 221300                    LDX1  ! EDIT_NAME_FOUND+1,,AUTO
         7 010615   000000 702211                    TSX2  ! 0,X1

     4673    16042    5           END /* THEN */ ;
     4674    16043    4      ELSE IF DOT_INX > BL_INX

  16043  7 010616   205722 116100                    CMPQ    BL_INX,,AUTO
         7 010617   010636 604400 7                  TMOZ    s:16052

     4675    16044    5         THEN DO ;

     4676    16045    5                 DUMP_NAME.NAME# = SUBSTR (READ_BUF,

  16045  7 010620   205722 236100                    LDQ     BL_INX,,AUTO
         7 010621   205723 136100                    SBLQ    CHR_INX,,AUTO
         7 010622   000000 622006                    EAX2    0,QL
         7 010623   040000 100445                    MLR     fill='040'O
         7 010624   025005 000012 5                  ADSC9   READ_BUF,A               cn=0,n=*X2
         7 010625   025330 200037 5                  ADSC9   DUMP_NAME                cn=1,n=31

     4677    16046    5                         CHR_INX,
     4678    16047    5                         BL_INX - CHR_INX) ;
     4679    16048    5                 DUMP_NAME.L# = BL_INX - CHR_INX ;

  16048  7 010626   205722 236100                    LDQ     BL_INX,,AUTO
         7 010627   205723 136100                    SBLQ    CHR_INX,,AUTO
         7 010630   000033 736000                    QLS     27
         7 010631   025330 552040 5                  STBQ    DUMP_NAME,'40'O

     4680    16049    5                 DUMP_ACCT.ACCT# = B$JIT$ -> B$JIT.FACCN ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:578  

  16049  7 010632   000000 470400 xsym               LDP0    B$JIT$
         7 010633   000006 237100                    LDAQ    6,,PR0
         7 010634   025340 757000 5                  STAQ    DUMP_ACCT

     4681    16050    5              END /* THEN */ ;

  16050  7 010635   010656 710000 7                  TRA     s:16060

     4682    16051    5         ELSE DO ;

     4683    16052    5                 DUMP_NAME.NAME# = SUBSTR (READ_BUF,

  16052  7 010636   205723 136100                    SBLQ    CHR_INX,,AUTO
         7 010637   000000 622006                    EAX2    0,QL
         7 010640   040000 100445                    MLR     fill='040'O
         7 010641   025005 000012 5                  ADSC9   READ_BUF,A               cn=0,n=*X2
         7 010642   025330 200037 5                  ADSC9   DUMP_NAME                cn=1,n=31

     4684    16053    5                         CHR_INX,
     4685    16054    5                         DOT_INX - CHR_INX) ;
     4686    16055    5                 DUMP_NAME.L# = DOT_INX - CHR_INX ;

  16055  7 010643   205724 236100                    LDQ     DOT_INX,,AUTO
         7 010644   205723 136100                    SBLQ    CHR_INX,,AUTO
         7 010645   000033 736000                    QLS     27
         7 010646   025330 552040 5                  STBQ    DUMP_NAME,'40'O

     4687    16056    5                 DUMP_ACCT.ACCT# = SUBSTR (READ_BUF,

  16056  7 010647   205722 236100                    LDQ     BL_INX,,AUTO
         7 010650   205724 136100                    SBLQ    DOT_INX,,AUTO
         7 010651   777777 622006                    EAX2    -1,QL
         7 010652   205724 236100                    LDQ     DOT_INX,,AUTO
         7 010653   040000 100446                    MLR     fill='040'O
         7 010654   025005 200012 5                  ADSC9   READ_BUF,Q               cn=1,n=*X2
         7 010655   025340 000010 5                  ADSC9   DUMP_ACCT                cn=0,n=8
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:579  

     4688    16057    5                         DOT_INX + 1,
     4689    16058    5                         BL_INX - DOT_INX - 1) ;
     4690    16059    5              END /* ELSE */ ;

     4691    16060    4      RETURN ;

  16060  7 010656   000001 702211                    TSX2  ! 1,X1

     4692    16061
     4693    16062    4   END SETUP_DUMP_FID ;
     4694    16063    3   END GET_DUMP_OUTPUT_MODE ;
     4695    16064        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:580  
     4696    16065    2   OPEN_DUMP_RECEPTICLE: PROC ALTRET ;

  16065  7 010657   205730 741300       OPEN_DUMP_R* STX1  ! DUMP_TYPE+1,,AUTO

     4697    16066
     4698    16067        /* Code */
     4699    16068
     4700    16069    3      IF DCBADDR (DCBNUM (M$DUMP)) -> F$DCB.FCD#

  16069  7 010660   000000 236007 xsym               LDQ     M$DUMP,DL
         7 010661   000015 470400 8                  LDP0    13
         7 010662   000000 471500                    LDP1    0,,PR0
         7 010663   100000 473506                    LDP3    0,QL,PR1
         7 010664   300031 236100                    LDQ     25,,PR3
         7 010665   020000 316007                    CANQ    8192,DL
         7 010666   010702 601000 7                  TNZ     s:16074

     4701    16070    3      THEN /* Dump data control block already open. */ ;
     4702    16071    3      ELSE IF LP_DUMP

  16071  7 010667   205725 234100                    SZN     LP_DUMP,,AUTO
         7 010670   010676 605000 7                  TPL     s:16073

     4703    16072    3         THEN CALL M$OPEN (OPEN_LP) ALTRET (BAD_LP_OPEN) ;

  16072  7 010671   025070 630400 5                  EPPR0   OPEN_LP
         7 010672   450000 713400                    CLIMB   alt,open
         7 010673   410400 401760                    pmme    nvectors=18
         7 010674   010704 702000 7                  TSX2    BAD_LP_OPEN
         7 010675   010702 710000 7                  TRA     s:16074

     4704    16073    3         ELSE CALL M$OPEN (OPEN_DUMP_FILE) ALTRET (BAD_FID_OPEN) ;

  16073  7 010676   025162 630400 5                  EPPR0   OPEN_DUMP_FILE
         7 010677   450000 713400                    CLIMB   alt,open
         7 010700   410400 401760                    pmme    nvectors=18
         7 010701   010716 702000 7                  TSX2    BAD_FID_OPEN
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:581  

     4705    16074    3      RETURN ;

  16074  7 010702   205730 221300                    LDX1  ! DUMP_TYPE+1,,AUTO
         7 010703   000001 702211                    TSX2  ! 1,X1

     4706    16075
     4707    16076    3   BAD_LP_OPEN:
     4708    16077    3      CALL TOX$WARN (B$TCB$->B$TCB.ALT$->B$ALT.ERR) ;

  16077  7 010704   000000 470400 xsym  BAD_LP_OPEN  LDP0    B$TCB$
         7 010705   000000 471500                    LDP1    0,,PR0
         7 010706   100102 633500                    EPPR3   66,,PR1
         7 010707   205740 453500                    STP3    BCD_BUF_INX+1,,AUTO
         7 010710   205740 630500                    EPPR0   BCD_BUF_INX+1,,AUTO
         7 010711   000017 631400 xsym               EPPR1   B_VECTNIL+15
         7 010712   000000 701000 xent               TSX1    TOX$WARN
         7 010713   000000 011000                    NOP     0

     4709    16078    3      ALTRETURN ;

  16078  7 010714   205730 221300                    LDX1  ! DUMP_TYPE+1,,AUTO
         7 010715   000000 702211                    TSX2  ! 0,X1

     4710    16079
     4711    16080    3   BAD_FID_OPEN:
     4712    16081    3      TOP_ERROR_CODE.ERR# = %E$NOOVRWR ;

  16081  7 010716   000173 236000 5     BAD_FID_OPEN LDQ     TOP_ERROR_CODE
         7 010717   000006 376000 8                  ANQ     6
         7 010720   003330 276007                    ORQ     1752,DL
         7 010721   000173 756000 5                  STQ     TOP_ERROR_CODE

     4713    16082    3      CALL TOX$WARN (TOP_ERROR_CODE) ;

  16082  7 010722   000007 630400 8                  EPPR0   7
         7 010723   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:582  
         7 010724   000000 701000 xent               TSX1    TOX$WARN
         7 010725   000000 011000                    NOP     0

     4714    16083    3      ALTRETURN ;

  16083  7 010726   205730 221300                    LDX1  ! DUMP_TYPE+1,,AUTO
         7 010727   000000 702211                    TSX2  ! 0,X1

     4715    16084
     4716    16085    3   END OPEN_DUMP_RECEPTICLE ;
     4717    16086        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:583  
     4718    16087    2   SET_DUMP_PARAMS: PROC ALTRET ;

  16087  7 010730   205730 741300       SET_DUMP_PA* STX1  ! DUMP_TYPE+1,,AUTO

     4719    16088
     4720    16089    3      DCL EDIT_NAME_FOUND   BIT (1) ;
     4721    16090
     4722    16091        /* Code */
     4723    16092
     4724    16093    3      DUMP_HDR$ = PINCRW (IS$, A_REG.ADDR#) ;

  16093  7 010731   200011 470500                    LDP0    @A_REG,,AUTO
         7 010732   000000 220100                    LDX0    0,,PR0
         7 010733   000000 636010                    EAQ     0,X0
         7 010734   000000 036000 6                  ADLQ    FPTN_
         7 010735   200022 756100                    STQ     DUMP_HDR$,,AUTO

     4725    16094    3      DUMP_HDR_SIZE = A_REG.SIZE# ;

  16094  7 010736   000000 236100                    LDQ     0,,PR0
         7 010737   777777 376007                    ANQ     -1,DL
         7 010740   200024 756100                    STQ     DUMP_HDR_SIZE,,AUTO

     4726    16095    3      IF X1_REG = -1024

  16095  7 010741   200013 471500                    LDP1    @X1_REG,,AUTO
         7 010742   000100 100500                    MLR     fill='000'O
         7 010743   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2
         7 010744   205740 000004                    ADSC9   BCD_BUF_INX+1,,AUTO      cn=0,n=4
         7 010745   205740 236100                    LDQ     BCD_BUF_INX+1,,AUTO
         7 010746   000022 732000                    QRS     18
         7 010747   000072 116000 8                  CMPQ    58
         7 010750   010766 601000 7                  TNZ     s:16103

     4727    16096    4      THEN DO ;

     4728    16097    4              DUMP_.ADDR# = TOT$ECP.SUBEXEC.ADDRESS ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:584  

  16097  7 010751   000010 720000 xsym               LXL0    TOT$ECP+8
         7 010752   025031 740000 5                  STX0    DUMP_

     4729    16098    4              DUMP_SIZE = Q_REG.SIZE# - 1024 - TOT$ECP.SUBEXEC.ADDRESS ;

  16098  7 010753   200012 473500                    LDP3    @Q_REG,,AUTO
         7 010754   300000 236100                    LDQ     0,,PR3
         7 010755   777777 376007                    ANQ     -1,DL
         7 010756   000010 136000 xsym               SBLQ    TOT$ECP+8
         7 010757   002000 136007                    SBLQ    1024,DL
         7 010760   205721 756100                    STQ     DUMP_SIZE,,AUTO

     4730    16099    4              DUMP_TYPE = %SUBEXEC ;

  16099  7 010761   000001 222003                    LDX2    1,DU
         7 010762   205727 742100                    STX2    DUMP_TYPE,,AUTO

     4731    16100    4              EDIT_NAME = TOT$ECP.SUBEXEC.EDIT_NAME ;

  16100  7 010763   000011 236000 xsym               LDQ     TOT$ECP+9
         7 010764   200021 756100                    STQ     EDIT_NAME,,AUTO

     4732    16101    4           END ;

  16101  7 010765   011032 710000 7                  TRA     s:16117

     4733    16102    4      ELSE DO ;

     4734    16103    4              DUMP_.ADDR# = Q_REG.ADDR# ;

  16103  7 010766   200012 473500                    LDP3    @Q_REG,,AUTO
         7 010767   300000 220100                    LDX0    0,,PR3
         7 010770   025031 740000 5                  STX0    DUMP_

     4735    16104    4              DUMP_SIZE = Q_REG.SIZE# ;

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:585  
  16104  7 010771   300000 236100                    LDQ     0,,PR3
         7 010772   777777 376007                    ANQ     -1,DL
         7 010773   205721 756100                    STQ     DUMP_SIZE,,AUTO

     4736    16105    4              DUMP_TYPE = %TEST_PAGE ;

  16105  7 010774   000002 222003                    LDX2    2,DU
         7 010775   205727 742100                    STX2    DUMP_TYPE,,AUTO

     4737    16106    4              EDIT_NAME_FOUND = %FALSE ;

  16106  7 010776   205731 450100                    STZ     EDIT_NAME_FOUND,,AUTO

     4738    16107    4              TP_STATS_INX = 0 ;

  16107  7 010777   200025 450100                    STZ     TP_STATS_INX,,AUTO

     4739    16108    5              DO UNTIL EDIT_NAME_FOUND OR TP_STATS_INX = 8 ;

     4740    16109    5                 IF DUMP_.ADDR# = TOP$TCP.STATS.LOAD_ADDR(TP_STATS_INX)

  16109  7 011000   200025 236100                    LDQ     TP_STATS_INX,,AUTO
         7 011001   000244 402007                    MPY     164,DL
         7 011002   000003 470400 xsym               LDP0    TOT$DMC+3
         7 011003   000000 620006                    EAX0    0,QL
         7 011004   025031 236000 5                  LDQ     DUMP_
         7 011005   000022 772000                    QRL     18
         7 011006   000016 116110                    CMPQ    14,X0,PR0
         7 011007   011013 601000 7                  TNZ     s:16111

     4741    16110    5                 THEN EDIT_NAME_FOUND = %TRUE ;

  16110  7 011010   400000 236003                    LDQ     -131072,DU
         7 011011   205731 756100                    STQ     EDIT_NAME_FOUND,,AUTO
         7 011012   011014 710000 7                  TRA     s:16112

     4742    16111    5                 ELSE TP_STATS_INX = TP_STATS_INX + 1 ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:586  

  16111  7 011013   200025 054100                    AOS     TP_STATS_INX,,AUTO

     4743    16112    5              END ;

  16112  7 011014   205731 234100                    SZN     EDIT_NAME_FOUND,,AUTO
         7 011015   011021 604000 7                  TMI     s:16113
         7 011016   200025 235100                    LDA     TP_STATS_INX,,AUTO
         7 011017   000010 115007                    CMPA    8,DL
         7 011020   011000 601000 7                  TNZ     s:16109

     4744    16113    4              IF EDIT_NAME_FOUND

  16113  7 011021   205731 234100                    SZN     EDIT_NAME_FOUND,,AUTO
         7 011022   011030 605000 7                  TPL     s:16115

     4745    16114    4              THEN EDIT_NAME = TOP$TCP.STATS.EDIT_NAME(TP_STATS_INX) ;

  16114  7 011023   200025 236100                    LDQ     TP_STATS_INX,,AUTO
         7 011024   000244 402007                    MPY     164,DL
         7 011025   000020 236106                    LDQ     16,QL,PR0
         7 011026   200021 756100                    STQ     EDIT_NAME,,AUTO
         7 011027   011032 710000 7                  TRA     s:16117

     4746    16115    4              ELSE ALTRETURN ;

  16115  7 011030   205730 221300                    LDX1  ! DUMP_TYPE+1,,AUTO
         7 011031   000000 702211                    TSX2  ! 0,X1

     4747    16116    4           END ;
     4748    16117    3      RETURN ;

  16117  7 011032   205730 221300                    LDX1  ! DUMP_TYPE+1,,AUTO
         7 011033   000001 702211                    TSX2  ! 1,X1

     4749    16118
     4750    16119    3   END SET_DUMP_PARAMS ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:587  
     4751    16120        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:588  
     4752    16121    2   EXECUTE_DUMP: PROC ;

  16121  7 011034   205730 741300       EXECUTE_DUMP STX1  ! DUMP_TYPE+1,,AUTO

     4753    16122
     4754    16123        /* Code */
     4755    16124
     4756    16125    3      CALL GET_BCD_BUFFER ;

  16125  7 011035   011265 701000 7                  TSX1    GET_BCD_BUFFER
         7 011036   000000 011000                    NOP     0

     4757    16126    3      CALL TOT$BCD_ASCII (BCD_BUF, ASCII_BUF, DUMP_HDR_SIZE) ;

  16126  7 011037   200024 630500                    EPPR0   DUMP_HDR_SIZE,,AUTO
         7 011040   205742 450500                    STP0    BCD_BUF_INX+3,,AUTO
         7 011041   202306 631500                    EPPR1   ASCII_BUF,,AUTO
         7 011042   205741 451500                    STP1    BCD_BUF_INX+2,,AUTO
         7 011043   200026 633500                    EPPR3   BCD_BUF,,AUTO
         7 011044   205740 453500                    STP3    BCD_BUF_INX+1,,AUTO
         7 011045   205740 630500                    EPPR0   BCD_BUF_INX+1,,AUTO
         7 011046   000021 631400 xsym               EPPR1   B_VECTNIL+17
         7 011047   000000 701000 xent               TSX1    TOT$BCD_ASCII
         7 011050   000000 011000                    NOP     0

     4758    16127    3      CALL BREAK_HDR_LINE ;

  16127  7 011051   011350 701000 7                  TSX1    BREAK_HDR_LINE
         7 011052   000000 011000                    NOP     0

     4759    16128    3      IF LP_DUMP

  16128  7 011053   205725 234100                    SZN     LP_DUMP,,AUTO
         7 011054   011062 605000 7                  TPL     s:16134

     4760    16129    4      THEN DO ;

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:589  
     4761    16130    4              WRITE_DUMP.BUF_ = VECTOR (DUMP_LINE) ;

  16130  7 011055   000074 237000 8                  LDAQ    60
         7 011056   025320 757000 5                  STAQ    WRITE_DUMP+4

     4762    16131    4              OCT_WORDS_PER_LINE = 8 ;

  16131  7 011057   000010 235007                    LDA     8,DL
         7 011060   200016 755100                    STA     OCT_WORDS_PER_LINE,,AUTO

     4763    16132    4           END /* then */ ;

  16132  7 011061   011066 710000 7                  TRA     s:16137

     4764    16133    4      ELSE DO ;

     4765    16134    4              WRITE_DUMP.BUF_ = VECTOR (FILE_OUTPUT_LINE.DUMP_LINE#) ;

  16134  7 011062   000076 237000 8                  LDAQ    62
         7 011063   025320 757000 5                  STAQ    WRITE_DUMP+4

     4766    16135    4              OCT_WORDS_PER_LINE = 4 ;

  16135  7 011064   000004 235007                    LDA     4,DL
         7 011065   200016 755100                    STA     OCT_WORDS_PER_LINE,,AUTO

     4767    16136    4           END /* else */ ;

     4768    16137    3      DUMP_LINE.EDIT_NAME# = EDIT_NAME ;

  16137  7 011066   200021 236100                    LDQ     EDIT_NAME,,AUTO
         7 011067   024750 756000 5                  STQ     DUMP_LINE+4

     4769    16138    3      ADDR_TRANS$ = ADDR (TEMP_ASCII_BUF) ;

  16138  7 011070   205716 630500                    EPPR0   TEMP_ASCII_BUF,,AUTO
         7 011071   025004 450400 5                  STP0    ADDR_TRANS$
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:590  

     4770    16139    4      DO DUMP_LINE_INX = 1 TO (DUMP_SIZE_SBIN / OCT_WORDS_PER_LINE_SBIN) ;

  16139  7 011072   000001 235007                    LDA     1,DL
         7 011073   200023 755100                    STA     DUMP_LINE_INX,,AUTO
         7 011074   011245 710000 7                  TRA     s:16179+1

     4771    16140    4         IF TOT$ECP.SUBEXEC.TEST_PAGE_COUNT > 0 AND

  16140  7 011075   000014 235000 xsym               LDA     TOT$ECP+12
         7 011076   011140 604400 7                  TMOZ    s:16163
         7 011077   000014 236000 xsym               LDQ     TOT$ECP+12
         7 011100   000001 136007                    SBLQ    1,DL
         7 011101   200025 116100                    CMPQ    TP_STATS_INX,,AUTO
         7 011102   011140 604400 7                  TMOZ    s:16163

     4772    16141    4                 TP_STATS_INX < TOT$ECP.SUBEXEC.TEST_PAGE_COUNT - 1
     4773    16142    5         THEN DO CASE (DUMP_TYPE) ;

  16142  7 011103   205727 220100                    LDX0    DUMP_TYPE,,AUTO
         7 011104   000003 100003                    CMPX0   3,DU
         7 011105   011107 602010 7                  TNC     s:16142+4,X0
         7 011106   011140 710000 7                  TRA     s:16163
         7 011107   011140 710000 7                  TRA     s:16163
         7 011110   011112 710000 7                  TRA     s:16144
         7 011111   011125 710000 7                  TRA     s:16153

     4774    16143    5                 CASE (%SUBEXEC) ;

     4775    16144    5                    IF DUMP_.ADDR# = TOP$TCP.STATS.LOAD_ADDR(0)

  16144  7 011112   000003 470400 xsym               LDP0    TOT$DMC+3
         7 011113   025031 236000 5                  LDQ     DUMP_
         7 011114   000022 772000                    QRL     18
         7 011115   000016 116100                    CMPQ    14,,PR0
         7 011116   011140 601000 7                  TNZ     s:16163

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:591  
     4776    16145    6                    THEN DO ;

     4777    16146    6                            DUMP_LINE.EDIT_NAME# =

  16146  7 011117   000020 236100                    LDQ     16,,PR0
         7 011120   024750 756000 5                  STQ     DUMP_LINE+4

     4778    16147    6                                    TOP$TCP.STATS.EDIT_NAME(0) ;
     4779    16148    6                            DUMP_TYPE = %TEST_PAGE ;

  16148  7 011121   000002 221003                    LDX1    2,DU
         7 011122   205727 741100                    STX1    DUMP_TYPE,,AUTO

     4780    16149    6                            TP_STATS_INX = TP_STATS_INX + 1 ;

  16149  7 011123   200025 054100                    AOS     TP_STATS_INX,,AUTO

     4781    16150    6                         END /* then */ ;

  16150  7 011124   011140 710000 7                  TRA     s:16163

     4782    16151    5                    ELSE /* Do Nothing */ ;
     4783    16152    5                 CASE (%TEST_PAGE) ;

     4784    16153    5                    IF DUMP_.ADDR# =

  16153  7 011125   200025 236100                    LDQ     TP_STATS_INX,,AUTO
         7 011126   000244 402007                    MPY     164,DL
         7 011127   000003 470400 xsym               LDP0    TOT$DMC+3
         7 011130   000000 621006                    EAX1    0,QL
         7 011131   025031 236000 5                  LDQ     DUMP_
         7 011132   000022 772000                    QRL     18
         7 011133   000262 116111                    CMPQ    178,X1,PR0
         7 011134   011140 601000 7                  TNZ     s:16163

     4785    16154    5                            TOP$TCP.STATS.LOAD_ADDR(TP_STATS_INX + 1)
     4786    16155    6                    THEN DO ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:592  

     4787    16156    6                            DUMP_LINE.EDIT_NAME# =

  16156  7 011135   000264 236111                    LDQ     180,X1,PR0
         7 011136   024750 756000 5                  STQ     DUMP_LINE+4

     4788    16157    6                                    TOP$TCP.STATS.EDIT_NAME(TP_STATS_INX+1) ;
     4789    16158    6                            TP_STATS_INX = TP_STATS_INX + 1 ;

  16158  7 011137   200025 054100                    AOS     TP_STATS_INX,,AUTO

     4790    16159    6                         END /* then */ ;

     4791    16160    5                    ELSE /* Do Nothing */ ;
     4792    16161    5              END /* CASE */ ;

     4793    16162    4         ELSE /* Do Nothing */ ;
     4794    16163    4         DUMP_ADDR_TEMP = BITBIN (DUMP_) ;

  16163  7 011140   025031 235000 5                  LDA     DUMP_
         7 011141   205726 755100                    STA     DUMP_ADDR_TEMP,,AUTO

     4795    16164    4         CALL TOT$OCTASC (TEMP_ASCII_BUF, DUMP_ADDR_TEMP) ;

  16164  7 011142   205726 630500                    EPPR0   DUMP_ADDR_TEMP,,AUTO
         7 011143   205741 450500                    STP0    BCD_BUF_INX+2,,AUTO
         7 011144   205716 631500                    EPPR1   TEMP_ASCII_BUF,,AUTO
         7 011145   205740 451500                    STP1    BCD_BUF_INX+1,,AUTO
         7 011146   205740 630500                    EPPR0   BCD_BUF_INX+1,,AUTO
         7 011147   000020 631400 xsym               EPPR1   B_VECTNIL+16
         7 011150   000000 701000 xent               TSX1    TOT$OCTASC
         7 011151   000000 011000                    NOP     0

     4796    16165    4         DUMP_LINE.ACTUAL_ADDR# = SUBSTR (TEMP_ASCII_BUF, 0, 6) ;

  16165  7 011152   040000 100500                    MLR     fill='040'O
         7 011153   205716 000006                    ADSC9   TEMP_ASCII_BUF,,AUTO     cn=0,n=6
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:593  
         7 011154   024744 200006 5                  ADSC9   DUMP_LINE                cn=1,n=6

     4797    16166    4         IF DUMP_TYPE = %TEST_PAGE

  16166  7 011155   205727 220100                    LDX0    DUMP_TYPE,,AUTO
         7 011156   000002 100003                    CMPX0   2,DU
         7 011157   011171 601000 7                  TNZ     s:16169

     4798    16167    4         THEN TP_BASE_REL_ADDR = DUMP_.ADDR# -

  16167  7 011160   200025 236100                    LDQ     TP_STATS_INX,,AUTO
         7 011161   000244 402007                    MPY     164,DL
         7 011162   000003 470400 xsym               LDP0    TOT$DMC+3
         7 011163   000000 621006                    EAX1    0,QL
         7 011164   025031 236000 5                  LDQ     DUMP_
         7 011165   000022 772000                    QRL     18
         7 011166   000016 136111                    SBLQ    14,X1,PR0
         7 011167   200017 756100                    STQ     TP_BASE_REL_ADDR,,AUTO
         7 011170   011175 710000 7                  TRA     s:16170

     4799    16168    4                    TOP$TCP.STATS.LOAD_ADDR(TP_STATS_INX) ;
     4800    16169    4         ELSE TP_BASE_REL_ADDR = DUMP_.ADDR# - TOT$ECP.SUBEXEC.ADDRESS ;

  16169  7 011171   025031 236000 5                  LDQ     DUMP_
         7 011172   000022 772000                    QRL     18
         7 011173   000010 136000 xsym               SBLQ    TOT$ECP+8
         7 011174   200017 756100                    STQ     TP_BASE_REL_ADDR,,AUTO

     4801    16170    4         CALL TOT$OCTASC (TEMP_ASCII_BUF, TP_BASE_REL_ADDR) ;

  16170  7 011175   200017 630500                    EPPR0   TP_BASE_REL_ADDR,,AUTO
         7 011176   205741 450500                    STP0    BCD_BUF_INX+2,,AUTO
         7 011177   205716 631500                    EPPR1   TEMP_ASCII_BUF,,AUTO
         7 011200   205740 451500                    STP1    BCD_BUF_INX+1,,AUTO
         7 011201   205740 630500                    EPPR0   BCD_BUF_INX+1,,AUTO
         7 011202   000020 631400 xsym               EPPR1   B_VECTNIL+16
         7 011203   000000 701000 xent               TSX1    TOT$OCTASC
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:594  
         7 011204   000000 011000                    NOP     0

     4802    16171    4         DUMP_LINE.RELATIVE_ADDR# = SUBSTR (TEMP_ASCII_BUF, 6, 6) ;

  16171  7 011205   040000 100500                    MLR     fill='040'O
         7 011206   205717 400006                    ADSC9   TEMP_ASCII_BUF+1,,AUTO   cn=2,n=6
         7 011207   024746 200006 5                  ADSC9   DUMP_LINE+2              cn=1,n=6

     4803    16172    5         DO DUMP_WORD_INX = 0 TO OCT_WORDS_PER_LINE - 1 ;

  16172  7 011210   200020 450100                    STZ     DUMP_WORD_INX,,AUTO
         7 011211   011235 710000 7                  TRA     s:16177+3

     4804    16173    5            CALL TOT$OCTASC (TEMP_ASCII_BUF, DUMP$ -> DUMP_WORD_OCT) ;

  16173  7 011212   025031 236000 5                  LDQ     DUMP_
         7 011213   205741 756100                    STQ     BCD_BUF_INX+2,,AUTO
         7 011214   205716 630500                    EPPR0   TEMP_ASCII_BUF,,AUTO
         7 011215   205740 450500                    STP0    BCD_BUF_INX+1,,AUTO
         7 011216   205740 630500                    EPPR0   BCD_BUF_INX+1,,AUTO
         7 011217   000020 631400 xsym               EPPR1   B_VECTNIL+16
         7 011220   000000 701000 xent               TSX1    TOT$OCTASC
         7 011221   000000 011000                    NOP     0

     4805    16174    5            DUMP_LINE.DUMP_OUTPUT_.OCT_WORD_ASC#(DUMP_WORD_INX) =

  16174  7 011222   200020 236100                    LDQ     DUMP_WORD_INX,,AUTO
         7 011223   000015 402007                    MPY     13,DL
         7 011224   040006 100500                    MLR     fill='040'O
         7 011225   205716 000014                    ADSC9   TEMP_ASCII_BUF,,AUTO     cn=0,n=12
         7 011226   024751 400014 5                  ADSC9   DUMP_LINE+5,Q            cn=2,n=12

     4806    16175    5                    TEMP_ASCII_BUF ;
     4807    16176    5            DUMP$ = PINCRW (DUMP$, 1) ;

  16176  7 011227   025031 236000 5                  LDQ     DUMP_
         7 011230   000001 036003                    ADLQ    1,DU
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:595  
         7 011231   025031 756000 5                  STQ     DUMP_

     4808    16177    5         END ;

  16177  7 011232   200020 235100                    LDA     DUMP_WORD_INX,,AUTO
         7 011233   000001 035007                    ADLA    1,DL
         7 011234   200020 755100                    STA     DUMP_WORD_INX,,AUTO
         7 011235   200020 236100                    LDQ     DUMP_WORD_INX,,AUTO
         7 011236   200016 116100                    CMPQ    OCT_WORDS_PER_LINE,,AUTO
         7 011237   011212 602000 7                  TNC     s:16173

     4809    16178    4         CALL M$WRITE (WRITE_DUMP) ALTRET (WRITE_ERR);

  16178  7 011240   025314 630400 5                  EPPR0   WRITE_DUMP
         7 011241   440001 713400                    CLIMB   alt,write
         7 011242   401400 401760                    pmme    nvectors=4
         7 011243   011253 702000 7                  TSX2    WRITE_ERR

     4810    16179    4      END /* do */ ;

  16179  7 011244   200023 054100                    AOS     DUMP_LINE_INX,,AUTO
         7 011245   205721 236100                    LDQ     DUMP_SIZE,,AUTO
         7 011246   200016 506100                    DIV     OCT_WORDS_PER_LINE,,AUTO
         7 011247   200023 116100                    CMPQ    DUMP_LINE_INX,,AUTO
         7 011250   011075 605000 7                  TPL     s:16140

     4811    16180    3      RETURN ;

  16180  7 011251   205730 221300                    LDX1  ! DUMP_TYPE+1,,AUTO
         7 011252   000001 702211                    TSX2  ! 1,X1

     4812    16181    3   WRITE_ERR:
     4813    16182    3      CALL TOX$WARN (B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR);

  16182  7 011253   000000 470400 xsym  WRITE_ERR    LDP0    B$TCB$
         7 011254   000000 471500                    LDP1    0,,PR0
         7 011255   100102 633500                    EPPR3   66,,PR1
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:596  
         7 011256   205740 453500                    STP3    BCD_BUF_INX+1,,AUTO
         7 011257   205740 630500                    EPPR0   BCD_BUF_INX+1,,AUTO
         7 011260   000017 631400 xsym               EPPR1   B_VECTNIL+15
         7 011261   000000 701000 xent               TSX1    TOX$WARN
         7 011262   000000 011000                    NOP     0

     4814    16183    3      RETURN;

  16183  7 011263   205730 221300                    LDX1  ! DUMP_TYPE+1,,AUTO
         7 011264   000001 702211                    TSX2  ! 1,X1

     4815    16184
     4816    16185        /* END EXECUTE_DUMP */
     4817    16186        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:597  
     4818    16187    3   GET_BCD_BUFFER: PROC ;

  16187  7 011265   205732 741300       GET_BCD_BUF* STX1  ! EDIT_NAME_FOUND+1,,AUTO

     4819    16188
     4820    16189    4      DCL DUMP_HDR_INX               UBIN WORD ALIGNED ;
     4821    16190    4      DCL 1 RCW                      ALIGNED,
     4822    16191    4            2 RCD_LGTH#              UBIN (18) UNAL,
     4823    16192    4            2 *                      UBIN (18) UNAL ;
     4824    16193    4      DCL RCW_ REDEF RCW UBIN WORD ALIGNED ;
     4825    16194    4      DCL OFFSET                     UBIN WORD ALIGNED ;
     4826    16195    4      DCL SUM                        UBIN WORD ALIGNED ;
     4827    16196    4      DCL BCD_BUF_INX                UBIN WORD ALIGNED ;
     4828    16197
     4829    16198        /* Code */
     4830    16199
     4831    16200    4      BCD_BUF = '0'B ;

  16200  7 011266   011300 220003                    LDX0    4800,DU
         7 011267   000140 100400                    MLR     fill='000'O
         7 011270   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         7 011271   200026 000010                    ADSC9   BCD_BUF,,AUTO            cn=0,n=*X0

     4832    16201    4      DUMP_HDR_INX = 0 ;

  16201  7 011272   205733 450100                    STZ     DUMP_HDR_INX,,AUTO

     4833    16202    4      BCD_BUF_INX = 0 ;

  16202  7 011273   205737 450100                    STZ     BCD_BUF_INX,,AUTO

     4834    16203    4      SUM = 0 ;

  16203  7 011274   205736 450100                    STZ     SUM,,AUTO

     4835    16204    5      DO WHILE (DUMP_HDR_INX < DUMP_HDR_SIZE) ;

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:598  
  16204  7 011275   205733 236100                    LDQ     DUMP_HDR_INX,,AUTO
         7 011276   200024 116100                    CMPQ    DUMP_HDR_SIZE,,AUTO
         7 011277   011343 603000 7                  TRC     s:16215

     4836    16205    5         RCW_ = DUMP_HDR$ -> DUMP_WORD_OCT ;

  16205  7 011300   200022 470500                    LDP0    DUMP_HDR$,,AUTO
         7 011301   000000 235100                    LDA     0,,PR0
         7 011302   205734 755100                    STA     RCW,,AUTO

     4837    16206    6         DO OFFSET = 1 TO RCW.RCD_LGTH# ;

  16206  7 011303   000001 236007                    LDQ     1,DL
         7 011304   205735 756100                    STQ     OFFSET,,AUTO
         7 011305   011323 710000 7                  TRA     s:16210+3

     4838    16207    6            DUMP_HDR$ = PINCRW (DUMP_HDR$, 1) ;

  16207  7 011306   200022 236100                    LDQ     DUMP_HDR$,,AUTO
         7 011307   000001 036003                    ADLQ    1,DU
         7 011310   200022 756100                    STQ     DUMP_HDR$,,AUTO

     4839    16208    6            BCD_BUF(BCD_BUF_INX) = DUMP_HDR$ -> DUMP_WORD_OCT ;

  16208  7 011311   200022 470500                    LDP0    DUMP_HDR$,,AUTO
         7 011312   205737 720100                    LXL0    BCD_BUF_INX,,AUTO
         7 011313   000000 235100                    LDA     0,,PR0
         7 011314   200026 755110                    STA     BCD_BUF,X0,AUTO

     4840    16209    6            BCD_BUF_INX = BCD_BUF_INX + 1 ;

  16209  7 011315   205737 235100                    LDA     BCD_BUF_INX,,AUTO
         7 011316   000001 035007                    ADLA    1,DL
         7 011317   205737 755100                    STA     BCD_BUF_INX,,AUTO

     4841    16210    6         END /* DO */ ;

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:599  
  16210  7 011320   205735 235100                    LDA     OFFSET,,AUTO
         7 011321   000001 035007                    ADLA    1,DL
         7 011322   205735 755100                    STA     OFFSET,,AUTO
         7 011323   205734 236100                    LDQ     RCW,,AUTO
         7 011324   000022 772000                    QRL     18
         7 011325   205735 116100                    CMPQ    OFFSET,,AUTO
         7 011326   011306 603000 7                  TRC     s:16207

     4842    16211    5         SUM = SUM + RCW.RCD_LGTH# ;

  16211  7 011327   205736 036100                    ADLQ    SUM,,AUTO
         7 011330   205736 756100                    STQ     SUM,,AUTO

     4843    16212    5         DUMP_HDR$ = PINCRW (DUMP_HDR$, 1) ;

  16212  7 011331   200022 236100                    LDQ     DUMP_HDR$,,AUTO
         7 011332   000001 036003                    ADLQ    1,DU
         7 011333   200022 756100                    STQ     DUMP_HDR$,,AUTO

     4844    16213    5         DUMP_HDR_INX = DUMP_HDR_INX + RCW.RCD_LGTH# + 1 ;

  16213  7 011334   205734 236100                    LDQ     RCW,,AUTO
         7 011335   000022 772000                    QRL     18
         7 011336   205733 036100                    ADLQ    DUMP_HDR_INX,,AUTO
         7 011337   000001 036007                    ADLQ    1,DL
         7 011340   205733 756100                    STQ     DUMP_HDR_INX,,AUTO

     4845    16214    5      END /* WHILE */ ;

  16214  7 011341   200024 116100                    CMPQ    DUMP_HDR_SIZE,,AUTO
         7 011342   011300 602000 7                  TNC     s:16205

     4846    16215    4      DUMP_HDR_SIZE = SUM * 6 ;

  16215  7 011343   205736 236100                    LDQ     SUM,,AUTO
         7 011344   000006 402007                    MPY     6,DL
         7 011345   200024 756100                    STQ     DUMP_HDR_SIZE,,AUTO
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:600  

     4847    16216    4      RETURN ;

  16216  7 011346   205732 221300                    LDX1  ! EDIT_NAME_FOUND+1,,AUTO
         7 011347   000001 702211                    TSX2  ! 1,X1

     4848    16217
     4849    16218    4   END GET_BCD_BUFFER ;
     4850    16219        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:601  
     4851    16220    3   BREAK_HDR_LINE: PROC ;

  16220  7 011350   205732 741300       BREAK_HDR_L* STX1  ! EDIT_NAME_FOUND+1,,AUTO

     4852    16221
     4853    16222    4      DCL 1 CRLF_ CONSTANT CALIGNED,
     4854    16223    4            2 CR# CHAR (1) UNAL INIT (BITASC ('015'O)),
     4855    16224    4            2 LF# CHAR (1) UNAL INIT (BITASC ('012'O)) ;
     4856    16225    4      DCL CRLF REDEF CRLF_ CHAR (2) CALIGNED ;
     4857    16226    4      DCL CRLF_INDEX UBIN (36) ALIGNED ;
     4858    16227    4      DCL DUMP_HDR_INDEX UBIN (36) ALIGNED ;
     4859    16228    4      DCL LINE_LGTH      UBIN (36) ;
     4860    16229
     4861    16230        /* Code */
     4862    16231
     4863    16232           /* Get first non CRLF character to print */
     4864    16233    4      DUMP_HDR_INDEX = 0 ;

  16233  7 011351   205734 450100                    STZ     DUMP_HDR_INDEX,,AUTO

     4865    16234    4      CALL INDEX (CRLF_INDEX,

  16234  7 011352   205734 720100                    LXL0    DUMP_HDR_INDEX,,AUTO
         7 011353   761737 620010                    EAX0    -7201,X0
         7 011354   777777 660003                    ERX0    -1,DU
         7 011355   205734 236100                    LDQ     DUMP_HDR_INDEX,,AUTO
         7 011356   205734 235100                    LDA     DUMP_HDR_INDEX,,AUTO
         7 011357   000000 120545                    SCD
         7 011360   202306 000010                    ADSC9   ASCII_BUF,A,AUTO         cn=0,n=*X0
         7 011361   000106 000002 6                  ADSC9   CRLF_                    cn=0,n=2
         7 011362   205733 000100                    ARG     CRLF_INDEX,,AUTO
         7 011363   205733 056100                    ASQ     CRLF_INDEX,,AUTO
         7 011364   011366 607000 7                  TTF     s:16238
         7 011365   205733 054100                    AOS     CRLF_INDEX,,AUTO

     4866    16235    4              CRLF,
     4867    16236    4              ASCII_BUF,
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:602  
     4868    16237    4              DUMP_HDR_INDEX) ;
     4869    16238    5      DO WHILE (DUMP_HDR_INDEX = CRLF_INDEX) ;

  16238  7 011366   205734 236100                    LDQ     DUMP_HDR_INDEX,,AUTO
         7 011367   205733 116100                    CMPQ    CRLF_INDEX,,AUTO
         7 011370   011411 601000 7                  TNZ     s:16247

     4870    16239    5         DUMP_HDR_INDEX = DUMP_HDR_INDEX + 2 ;

  16239  7 011371   205734 235100                    LDA     DUMP_HDR_INDEX,,AUTO
         7 011372   000002 035007                    ADLA    2,DL
         7 011373   205734 755100                    STA     DUMP_HDR_INDEX,,AUTO

     4871    16240    5         CALL INDEX (CRLF_INDEX,

  16240  7 011374   761737 620005                    EAX0    -7201,AL
         7 011375   777777 660003                    ERX0    -1,DU
         7 011376   205734 236100                    LDQ     DUMP_HDR_INDEX,,AUTO
         7 011377   000000 120545                    SCD
         7 011400   202306 000010                    ADSC9   ASCII_BUF,A,AUTO         cn=0,n=*X0
         7 011401   000106 000002 6                  ADSC9   CRLF_                    cn=0,n=2
         7 011402   205733 000100                    ARG     CRLF_INDEX,,AUTO
         7 011403   205733 056100                    ASQ     CRLF_INDEX,,AUTO
         7 011404   011406 607000 7                  TTF     s:16244
         7 011405   205733 054100                    AOS     CRLF_INDEX,,AUTO

     4872    16241    5                 CRLF,
     4873    16242    5                 ASCII_BUF,
     4874    16243    5                 DUMP_HDR_INDEX) ;
     4875    16244    5      END /* WHILE */ ;

  16244  7 011406   205734 236100                    LDQ     DUMP_HDR_INDEX,,AUTO
         7 011407   205733 116100                    CMPQ    CRLF_INDEX,,AUTO
         7 011410   011371 600000 7                  TZE     s:16239

     4876    16245           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:603  
     4877    16246           /* Loop through and print all parts of the message */
     4878    16247    5      DO WHILE (DUMP_HDR_INDEX < DUMP_HDR_SIZE) ;

  16247  7 011411   200024 116100                    CMPQ    DUMP_HDR_SIZE,,AUTO
         7 011412   011502 603000 7                  TRC     s:16273

     4879    16248              /* Set up message part length */
     4880    16249    5         IF CRLF_INDEX < DUMP_HDR_SIZE

  16249  7 011413   205733 236100                    LDQ     CRLF_INDEX,,AUTO
         7 011414   200024 116100                    CMPQ    DUMP_HDR_SIZE,,AUTO
         7 011415   011421 603000 7                  TRC     s:16251

     4881    16250    5         THEN LINE_LGTH = CRLF_INDEX - DUMP_HDR_INDEX ;

  16250  7 011416   205734 136100                    SBLQ    DUMP_HDR_INDEX,,AUTO
         7 011417   205735 756100                    STQ     LINE_LGTH,,AUTO
         7 011420   011424 710000 7                  TRA     s:16254

     4882    16251    5         ELSE LINE_LGTH = DUMP_HDR_SIZE - DUMP_HDR_INDEX ;

  16251  7 011421   200024 236100                    LDQ     DUMP_HDR_SIZE,,AUTO
         7 011422   205734 136100                    SBLQ    DUMP_HDR_INDEX,,AUTO
         7 011423   205735 756100                    STQ     LINE_LGTH,,AUTO

     4883    16252
     4884    16253              /* Frame and output message part */
     4885    16254    5         WRITE_HDR_LINE.BUF_ = VECTOR (SUBSTR (ASCII_BUF,

  16254  7 011424   205735 235100                    LDA     LINE_LGTH,,AUTO
         7 011425   000020 735000                    ALS     16
         7 011426   000140 135007                    SBLA    96,DL
         7 011427   205740 452500                    STP2    BCD_BUF_INX+1,,AUTO
         7 011430   205734 236100                    LDQ     DUMP_HDR_INDEX,,AUTO
         7 011431   000020 736000                    QLS     16
         7 011432   002306 036003                    ADLQ    1222,DU
         7 011433   205740 036100                    ADLQ    BCD_BUF_INX+1,,AUTO
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:604  
         7 011434   025304 757000 5                  STAQ    WRITE_HDR_LINE+4

     4886    16255    5                 DUMP_HDR_INDEX,
     4887    16256    5                 LINE_LGTH)) ;
     4888    16257    5         CALL M$WRITE (WRITE_HDR_LINE) ;

  16257  7 011435   025300 630400 5                  EPPR0   WRITE_HDR_LINE
         7 011436   040001 713400                    CLIMB   write
         7 011437   401400 401760                    pmme    nvectors=4

     4889    16258
     4890    16259              /* Get next non CRLF character to print */
     4891    16260    5         DUMP_HDR_INDEX = DUMP_HDR_INDEX + LINE_LGTH ;

  16260  7 011440   205734 236100                    LDQ     DUMP_HDR_INDEX,,AUTO
         7 011441   205735 036100                    ADLQ    LINE_LGTH,,AUTO
         7 011442   205734 756100                    STQ     DUMP_HDR_INDEX,,AUTO

     4892    16261    5         CALL INDEX (CRLF_INDEX,

  16261  7 011443   761737 620006                    EAX0    -7201,QL
         7 011444   777777 660003                    ERX0    -1,DU
         7 011445   205734 235100                    LDA     DUMP_HDR_INDEX,,AUTO
         7 011446   000000 120545                    SCD
         7 011447   202306 000010                    ADSC9   ASCII_BUF,A,AUTO         cn=0,n=*X0
         7 011450   000106 000002 6                  ADSC9   CRLF_                    cn=0,n=2
         7 011451   205733 000100                    ARG     CRLF_INDEX,,AUTO
         7 011452   205733 056100                    ASQ     CRLF_INDEX,,AUTO
         7 011453   011455 607000 7                  TTF     s:16265
         7 011454   205733 054100                    AOS     CRLF_INDEX,,AUTO

     4893    16262    5                 CRLF,
     4894    16263    5                 ASCII_BUF,
     4895    16264    5                 DUMP_HDR_INDEX) ;
     4896    16265    6         DO WHILE (DUMP_HDR_INDEX = CRLF_INDEX) ;

  16265  7 011455   205734 236100                    LDQ     DUMP_HDR_INDEX,,AUTO
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:605  
         7 011456   205733 116100                    CMPQ    CRLF_INDEX,,AUTO
         7 011457   011500 601000 7                  TNZ     s:16272

     4897    16266    6            DUMP_HDR_INDEX = DUMP_HDR_INDEX + 2 ;

  16266  7 011460   205734 235100                    LDA     DUMP_HDR_INDEX,,AUTO
         7 011461   000002 035007                    ADLA    2,DL
         7 011462   205734 755100                    STA     DUMP_HDR_INDEX,,AUTO

     4898    16267    6            CALL INDEX (CRLF_INDEX,

  16267  7 011463   761737 620005                    EAX0    -7201,AL
         7 011464   777777 660003                    ERX0    -1,DU
         7 011465   205734 236100                    LDQ     DUMP_HDR_INDEX,,AUTO
         7 011466   000000 120545                    SCD
         7 011467   202306 000010                    ADSC9   ASCII_BUF,A,AUTO         cn=0,n=*X0
         7 011470   000106 000002 6                  ADSC9   CRLF_                    cn=0,n=2
         7 011471   205733 000100                    ARG     CRLF_INDEX,,AUTO
         7 011472   205733 056100                    ASQ     CRLF_INDEX,,AUTO
         7 011473   011475 607000 7                  TTF     s:16271
         7 011474   205733 054100                    AOS     CRLF_INDEX,,AUTO

     4899    16268    6                    CRLF,
     4900    16269    6                    ASCII_BUF,
     4901    16270    6                    DUMP_HDR_INDEX) ;
     4902    16271    6         END /* WHILE */ ;

  16271  7 011475   205734 236100                    LDQ     DUMP_HDR_INDEX,,AUTO
         7 011476   205733 116100                    CMPQ    CRLF_INDEX,,AUTO
         7 011477   011460 600000 7                  TZE     s:16266

     4903    16272    5      END /* WHILE */ ;

  16272  7 011500   200024 116100                    CMPQ    DUMP_HDR_SIZE,,AUTO
         7 011501   011413 602000 7                  TNC     s:16249

     4904    16273    4      RETURN ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:606  

  16273  7 011502   205732 221300                    LDX1  ! EDIT_NAME_FOUND+1,,AUTO
         7 011503   000001 702211                    TSX2  ! 1,X1

     4905    16274
     4906    16275    4   END BREAK_HDR_LINE ;
     4907    16276
     4908    16277    3   END EXECUTE_DUMP ;
     4909    16278        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:607  
     4910    16279    2   CLOSE_DUMP_RECEPTICLE: PROC ;

  16279  7 011504   205730 741300       CLOSE_DUMP_* STX1  ! DUMP_TYPE+1,,AUTO

     4911    16280
     4912    16281        /* Code */
     4913    16282
     4914    16283    3      IF DCBADDR (DCBNUM (M$DUMP)) -> F$DCB.FCD#

  16283  7 011505   000000 236007 xsym               LDQ     M$DUMP,DL
         7 011506   000015 470400 8                  LDP0    13
         7 011507   000000 471500                    LDP1    0,,PR0
         7 011510   100000 473506                    LDP3    0,QL,PR1
         7 011511   300031 236100                    LDQ     25,,PR3
         7 011512   020000 316007                    CANQ    8192,DL
         7 011513   011517 600000 7                  TZE     s:16286

     4915    16284    3      THEN CALL M$CLOSE (CLOSE_DUMP) ;

  16284  7 011514   025032 630400 5                  EPPR0   CLOSE_DUMP
         7 011515   050001 713400                    CLIMB   close
         7 011516   406000 401760                    pmme    nvectors=13

     4916    16285    3      ELSE /* Dump file or device is not currently open. */ ;
     4917    16286    3      RETURN ;

  16286  7 011517   205730 221300                    LDX1  ! DUMP_TYPE+1,,AUTO
         7 011520   000001 702211                    TSX2  ! 1,X1

     4918    16287
     4919    16288    3   END CLOSE_DUMP_RECEPTICLE ;
     4920    16289    2   END TOP$MME_WRDUMP ;
     4921    16290        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:608  
     4922    16291        /*I* NAME:         BUILD_SCTWRK
     4923    16292        CALL:        CALL BUILD_SCTWRK (TCX, DC, PW2, B17F, B13F, BIT12F, QR, SCTWDS_BUILT)
     4924    16293             INTERFACE:
     4925    16294             INPUT:        TCX = index into TOP$TCP for test page
     4926    16295                           DEVICE_CODE = GCOS 6 bit device code
     4927    16296                            P_MMEWD2(bits 0-17) = address of SCTWRK buffer in subexec
     4928    16297             OUTPUT:       SCTWRK buffer in subexec filled in
     4929    16298             DESCRIPTION:  Merely fills in SCTWRK according to the defined
     4930    16299                           BASED structure ;  see code for the details.
     4931    16300        */
     4932    16301
     4933    16302    1   BUILD_SCTWRK: PROC (TCX, P_MMEWD2, BIT17FLAG, BIT13FLAG, BIT12FLAG, Q_REG,
             16302            SCTWDS_BUILT) ;

  16302  7 011521   200034 741300       BUILD_SCTWRK STX1  ! REASON+1,,AUTO

     4934    16303
     4935    16304    2      DCL BIT17FLAG   BIT (1) CALIGNED ;
     4936    16305    2      DCL BIT13FLAG   BIT (1) CALIGNED ;
     4937    16306    2      DCL BIT12FLAG   BIT (1) CALIGNED ;
     4938    16307    2      DCL Q_REG       BIT (36) ALIGNED ;
     4939    16308    2      DCL 1 Q_REG_    REDEF Q_REG ALIGNED,
     4940    16309    2            2 TAPE_URC_FLAG# BIT (1) UNAL,
     4941    16310    2            2 * BIT (5) UNAL,
     4942    16311    2            2 TAPE_ICC,
     4943    16312    2              3 FORMAT# BIT (1) UNAL,
     4944    16313    2              3 OLD_FORMAT,
     4945    16314    2                4 IOM# UBIN (5) UNAL,
     4946    16315    2                4 CHAN# UBIN (6) UNAL,
     4947    16316    2              3 NEW_FORMAT REDEF OLD_FORMAT,
     4948    16317    2                4 IOM# UBIN (3) UNAL,
     4949    16318    2                4 CHAN# UBIN (8) UNAL,
     4950    16319    2            2 * BIT (6) UNAL,
     4951    16320    2            2 URC_ICC,
     4952    16321    2              3 FORMAT# BIT (1) UNAL,
     4953    16322    2              3 OLD_FORMAT,
     4954    16323    2                4 IOM# UBIN (5) UNAL,
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:609  
     4955    16324    2                4 CHAN# UBIN (6) UNAL,
     4956    16325    2              3 NEW_FORMAT REDEF OLD_FORMAT,
     4957    16326    2                4 IOM# UBIN (3) UNAL,
     4958    16327    2                4 CHAN# UBIN (8) UNAL ;
     4959    16328    2      DCL 1 CONTROLLER_SCT BASED ALIGNED,
     4960    16329    2            2 W0# BIT (36) ALIGNED,
     4961    16330    2            2 W1# BIT (36) ALIGNED,
     4962    16331    2            2 W2# BIT (36) ALIGNED,
     4963    16332    2            2 W3# BIT (36) ALIGNED ;
     4964    16333    2      DCL 1 DEVICE_SCT BASED ALIGNED,
     4965    16334    2            2 W0# BIT (36) ALIGNED,
     4966    16335    2            2 W1# BIT (36) ALIGNED,
     4967    16336    2            2 W2# BIT (36) ALIGNED,
     4968    16337    2            2 W3# BIT (36) ALIGNED ;
     4969    16338    2      DCL DV_SCT$ PTR ;
     4970    16339    2      DCL 1 SCT_PTR REDEF DV_SCT$,
     4971    16340    2            2 ADDR# UBIN (18) UNAL,
     4972    16341    2            2 SEGID# UBIN (18) UNAL ;
     4973    16342    2      DCL TCX UBIN WORD ALIGNED ;
     4974    16343    2      DCL P_MMEWD2 UBIN WORD ALIGNED ;
     4975    16344    2      DCL 1 MME_W2 REDEF P_MMEWD2 ALIGNED,
     4976    16345    2            2 ADDR# UBIN (18) UNAL,
     4977    16346    2            2 * UBIN (18) UNAL ;
     4978    16347    2      DCL CN_SCT$  PTR ;
     4979    16348    2      DCL 1 CSCT_PTR REDEF CN_SCT$,
     4980    16349    2            2 ADDR# UBIN (18) UNAL,
     4981    16350    2            2 SEGID# UBIN (18) UNAL ;
     4982    16351    2      DCL SCTWRK$ PTR ;
     4983    16352    2      DCL SCTWDS_BUILT BIT (1) CALIGNED ;
     4984    16353        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:610  
     4985    16354        /* Code */
     4986    16355
     4987    16356    2      SCTWRK$ = PINCRW (IS$, MME_W2.ADDR#) ;

  16356  7 011522   200036 470500                    LDP0    @P_MMEWD2,,AUTO
         7 011523   000000 220100                    LDX0    0,,PR0
         7 011524   000000 636010                    EAQ     0,X0
         7 011525   000000 036000 6                  ADLQ    FPTN_
         7 011526   200046 756100                    STQ     SCTWRK$,,AUTO

     4988    16357    2      SCTWRK$ -> SCTWRK = '0'B ;

  16357  7 011527   200046 471500                    LDP1    SCTWRK$,,AUTO
         7 011530   000100 100400                    MLR     fill='000'O
         7 011531   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         7 011532   100000 000050                    ADSC9   0,,PR1                   cn=0,n=40

     4989    16358        /* SET THE IO CONTROLLER TYPE IOM, IOP, OR IMX  */
     4990    16359    3      DO CASE (TOT$ECP.BOOT_CPU_TYPE) ;

  16359  7 011533   000015 236000 xsym               LDQ     TOT$ECP+13
         7 011534   000011 772000                    QRL     9
         7 011535   000777 376007                    ANQ     511,DL
         7 011536   000004 136007                    SBLQ    4,DL
         7 011537   000003 116007                    CMPQ    3,DL
         7 011540   011542 602006 7                  TNC     s:16359+7,QL
         7 011541   011557 710000 7                  TRA     s:16365
         7 011542   011545 710000 7                  TRA     s:16361
         7 011543   011545 710000 7                  TRA     s:16361
         7 011544   011552 710000 7                  TRA     s:16363

     4991    16360    3         CASE (%DPS90#,%DPS90XA#) ;

     4992    16361    3            SCTWRK$ -> SCTWRK.IOC_TYPE# = %IOP#;

  16361  7 011545   100002 236100                    LDQ     2,,PR1
         7 011546   000073 376000 8                  ANQ     59
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:611  
         7 011547   140000 276007                    ORQ     49152,DL
         7 011550   100002 756100                    STQ     2,,PR1
         7 011551   011561 710000 7                  TRA     s:16367

     4993    16362    3         CASE (%DPS8000#) ;

     4994    16363    3            SCTWRK$ -> SCTWRK.IOC_TYPE# = %IMX#;

  16363  7 011552   100002 236100                    LDQ     2,,PR1
         7 011553   000073 376000 8                  ANQ     59
         7 011554   200000 276007                    ORQ     65536,DL
         7 011555   100002 756100                    STQ     2,,PR1
         7 011556   011561 710000 7                  TRA     s:16367

     4995    16364    3         CASE (ELSE) ;

     4996    16365    3            SCTWRK$ -> SCTWRK.IOC_TYPE# = %IOM#;

  16365  7 011557   000073 236000 8                  LDQ     59
         7 011560   100002 356100                    ANSQ    2,,PR1

     4997    16366    3      END /* CASE */ ;

     4998    16367    2      DV_SCT$ = ADDR (TOP$SCT.DV(TCX)) ;

  16367  7 011561   200035 473500                    LDP3    @TCX,,AUTO
         7 011562   300000 235100                    LDA     0,,PR3
         7 011563   000003 735000                    ALS     3
         7 011564   000004 634405 xsym               EPPR4   TOP$SCT+4,AL
         7 011565   200044 454500                    STP4    DV_SCT$,,AUTO

     4999    16368    2      CN_SCT$ = ADDR (TOP$SCT.CN(TCX)) ;

  16368  7 011566   000000 635405 xsym               EPPR5   TOP$SCT,AL
         7 011567   200045 455500                    STP5    CN_SCT$,,AUTO

     5000    16369    2      IF TOP$TCP.TEST_TYPE(TCX) = 'ITR'
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:612  

  16369  7 011570   300000 236100                    LDQ     0,,PR3
         7 011571   000122 402007                    MPY     82,DL
         7 011572   000001 736000                    QLS     1
         7 011573   000003 476400 xsym               LDP6    TOT$DMC+3
         7 011574   600002 236106                    LDQ     2,QL,PR6
         7 011575   000117 676000 6                  ERQ     CRLF_+9
         7 011576   000010 376000 8                  ANQ     8
         7 011577   011603 601000 7                  TNZ     s:16371

     5001    16370    2      THEN SCTWRK$ -> SCTWRK.SCT_ADR# = CSCT_PTR.ADDR# ;

  16370  7 011600   200045 220100                    LDX0    CN_SCT$,,AUTO
         7 011601   100000 740100                    STX0    0,,PR1
         7 011602   011605 710000 7                  TRA     s:16372

     5002    16371    2      ELSE SCTWRK$ -> SCTWRK.SCT_ADR# = SCT_PTR.ADDR# ;

  16371  7 011603   200044 220100                    LDX0    DV_SCT$,,AUTO
         7 011604   100000 740100                    STX0    0,,PR1

     5003    16372    2      SCTWRK$ -> SCTWRK.ALTSCT_ADR# = 0 ;

  16372  7 011605   000000 221003                    LDX1    0,DU
         7 011606   100001 741100                    STX1    1,,PR1

     5004    16373    2      SCTWRK$ -> SCTWRK.XBICC# = 0 ;

  16373  7 011607   000000 236003                    LDQ     0,DU
         7 011610   100000 752103                    STCQ    0,'03'O,PR1

     5005    16374    2      SCTWRK$ -> SCTWRK.GCOS_TYPE_CODE# = TOP$TCP.DEVICE_CODE(TCX) ;

  16374  7 011611   300000 236100                    LDQ     0,,PR3
         7 011612   000122 402007                    MPY     82,DL
         7 011613   000001 736000                    QLS     1
         7 011614   000003 476400 xsym               LDP6    TOT$DMC+3
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:613  
         7 011615   600007 236106                    LDQ     7,QL,PR6
         7 011616   000006 772000                    QRL     6
         7 011617   100001 752104                    STCQ    1,'04'O,PR1

     5006    16375    2      SCTWRK$ -> SCTWRK.CSCT_ADR# = CSCT_PTR.ADDR# ;

  16375  7 011620   200045 220100                    LDX0    CN_SCT$,,AUTO
         7 011621   100002 740100                    STX0    2,,PR1

     5007    16376    2      SCTWRK$ -> SCTWRK.MPC_SCT_ADR# = CSCT_PTR.ADDR# ;

  16376  7 011622   100003 740100                    STX0    3,,PR1

     5008    16377    2      SCTWRK$ -> SCTWRK.MPC_INDEX# = TCX ;

  16377  7 011623   300000 722100                    LXL2    0,,PR3
         7 011624   100003 442100                    SXL2    3,,PR1

     5009    16378    2      IF TOP$TCP.FIRMWARE.TYPE(TCX) = 'M610' OR

  16378  7 011625   300000 236100                    LDQ     0,,PR3
         7 011626   000122 402007                    MPY     82,DL
         7 011627   000001 736000                    QLS     1
         7 011630   000003 476400 xsym               LDP6    TOT$DMC+3
         7 011631   600013 236106                    LDQ     11,QL,PR6
         7 011632   000232 116000 6                  CMPQ    CRLF_+84
         7 011633   011642 600000 7                  TZE     s:16380
         7 011634   300000 236100                    LDQ     0,,PR3
         7 011635   000122 402007                    MPY     82,DL
         7 011636   000001 736000                    QLS     1
         7 011637   600013 236106                    LDQ     11,QL,PR6
         7 011640   000226 116000 6                  CMPQ    CRLF_+80
         7 011641   011644 601000 7                  TNZ     s:16382

     5010    16379    2              TOP$TCP.FIRMWARE.TYPE(TCX) = 'TPUR'
     5011    16380    2      THEN SCTWRK$ -> SCTWRK.CRCST_1.BIT8# = '1'B ;

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:614  
  16380  7 011642   001000 236003                    LDQ     512,DU
         7 011643   100005 256100                    ORSQ    5,,PR1

     5012    16381    2      ELSE ;
     5013    16382    2      IF (TOP$TCP.FIRMWARE.TYPE(TCX) = 'D500') OR

  16382  7 011644   300000 236100                    LDQ     0,,PR3
         7 011645   000122 402007                    MPY     82,DL
         7 011646   000001 736000                    QLS     1
         7 011647   600013 236106                    LDQ     11,QL,PR6
         7 011650   000237 116000 6                  CMPQ    CRLF_+89
         7 011651   011660 600000 7                  TZE     s:16384
         7 011652   300000 236100                    LDQ     0,,PR3
         7 011653   000122 402007                    MPY     82,DL
         7 011654   000001 736000                    QLS     1
         7 011655   600013 236106                    LDQ     11,QL,PR6
         7 011656   000231 116000 6                  CMPQ    CRLF_+83
         7 011657   011662 601000 7                  TNZ     s:16386

     5014    16383    2              (TOP$TCP.FIRMWARE.TYPE(TCX) = 'MSP8')
     5015    16384    2      THEN SCTWRK$ -> SCTWRK.CRCST_1.BIT7# = '1'B ;

  16384  7 011660   002000 236003                    LDQ     1024,DU
         7 011661   100005 256100                    ORSQ    5,,PR1

     5016    16385    2      ELSE ;
     5017    16386    2      IF TOP$TCP.TEST_TYPE(TCX) = 'ITR'

  16386  7 011662   300000 236100                    LDQ     0,,PR3
         7 011663   000122 402007                    MPY     82,DL
         7 011664   000001 736000                    QLS     1
         7 011665   600002 236106                    LDQ     2,QL,PR6
         7 011666   000117 676000 6                  ERQ     CRLF_+9
         7 011667   000010 376000 8                  ANQ     8
         7 011670   011673 601000 7                  TNZ     s:16390

     5018    16387    2      THEN SCTWRK$ -> SCTWRK.CRCST_3.BIT9# = '1'B ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:615  

  16387  7 011671   000400 236003                    LDQ     256,DU
         7 011672   100007 256100                    ORSQ    7,,PR1

     5019    16388    2      ELSE /* MPC will not be allocated */ ;
     5020    16389           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:616  
     5021    16390    2      IF TOP$TCP.TEST_TYPE(TCX) = 'MDR' OR

  16390  7 011673   300000 236100                    LDQ     0,,PR3
         7 011674   000122 402007                    MPY     82,DL
         7 011675   000001 736000                    QLS     1
         7 011676   600002 236106                    LDQ     2,QL,PR6
         7 011677   000113 676000 6                  ERQ     CRLF_+5
         7 011700   000010 376000 8                  ANQ     8
         7 011701   011711 600000 7                  TZE     s:16393
         7 011702   300000 236100                    LDQ     0,,PR3
         7 011703   000122 402007                    MPY     82,DL
         7 011704   000001 736000                    QLS     1
         7 011705   600002 236106                    LDQ     2,QL,PR6
         7 011706   000117 676000 6                  ERQ     CRLF_+9
         7 011707   000010 376000 8                  ANQ     8
         7 011710   012000 601000 7                  TNZ     s:16416

     5022    16391    2              TOP$TCP.TEST_TYPE(TCX) = 'ITR'
     5023    16392    3      THEN DO ;

     5024    16393    3              Q_REG = '0'B ;

  16393  7 011711   200042 477500                    LDP7    @Q_REG,,AUTO
         7 011712   700000 450100                    STZ     0,,PR7

     5025    16394    3              IF TOP$TCP.FIRMWARE.TYPE(TCX) = 'TPUR'

  16394  7 011713   300000 236100                    LDQ     0,,PR3
         7 011714   000122 402007                    MPY     82,DL
         7 011715   000001 736000                    QLS     1
         7 011716   000003 476400 xsym               LDP6    TOT$DMC+3
         7 011717   600013 236106                    LDQ     11,QL,PR6
         7 011720   000226 116000 6                  CMPQ    CRLF_+80
         7 011721   012000 601000 7                  TNZ     s:16416

     5026    16395    4              THEN DO ;

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:617  
     5027    16396    4                      Q_REG_.TAPE_URC_FLAG# = '1'B ;

  16396  7 011722   400000 236003                    LDQ     -131072,DU
         7 011723   700000 256100                    ORSQ    0,,PR7

     5028    16397    4                      IF TOP$TCP.FICCDD.FORMAT#(TCX)

  16397  7 011724   300000 236100                    LDQ     0,,PR3
         7 011725   000122 402007                    MPY     82,DL
         7 011726   000001 736000                    QLS     1
         7 011727   000003 476400 xsym               LDP6    TOT$DMC+3
         7 011730   600001 236106                    LDQ     1,QL,PR6
         7 011731   040000 316003                    CANQ    16384,DU
         7 011732   011760 600000 7                  TZE     s:16406

     5029    16398    5                      THEN DO ;

     5030    16399    5                              Q_REG_.TAPE_ICC.FORMAT# = '1'B ;

  16399  7 011733   004000 236003                    LDQ     2048,DU
         7 011734   700000 256100                    ORSQ    0,,PR7

     5031    16400    5                              Q_REG_.TAPE_ICC.NEW_FORMAT.IOM# =

  16400  7 011735   300000 236100                    LDQ     0,,PR3
         7 011736   000122 402007                    MPY     82,DL
         7 011737   000001 736000                    QLS     1
         7 011740   000003 476400 xsym               LDP6    TOT$DMC+3
         7 011741   600001 236106                    LDQ     1,QL,PR6
         7 011742   000003 772000                    QRL     3
         7 011743   700000 676100                    ERQ     0,,PR7
         7 011744   003400 376003                    ANQ     1792,DU
         7 011745   700000 656100                    ERSQ    0,,PR7

     5032    16401    5                                      TOP$TCP.FICCDD.IOM#(TCX) ;
     5033    16402    5                              Q_REG_.TAPE_ICC.NEW_FORMAT.CHAN# =

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:618  
  16402  7 011746   300000 236100                    LDQ     0,,PR3
         7 011747   000122 402007                    MPY     82,DL
         7 011750   000001 736000                    QLS     1
         7 011751   000003 476400 xsym               LDP6    TOT$DMC+3
         7 011752   600001 236106                    LDQ     1,QL,PR6
         7 011753   000003 772000                    QRL     3
         7 011754   700000 676100                    ERQ     0,,PR7
         7 011755   000377 376003                    ANQ     255,DU
         7 011756   700000 656100                    ERSQ    0,,PR7

     5034    16403    5                                      TOP$TCP.FICCDD.CHAN#(TCX) ;
     5035    16404    5                           END ;

  16404  7 011757   012000 710000 7                  TRA     s:16416

     5036    16405    5                      ELSE DO ;

     5037    16406    5                              Q_REG_.TAPE_ICC.OLD_FORMAT.IOM# =

  16406  7 011760   300000 236100                    LDQ     0,,PR3
         7 011761   000122 402007                    MPY     82,DL
         7 011762   000001 736000                    QLS     1
         7 011763   600001 236106                    LDQ     1,QL,PR6
         7 011764   034000 376003                    ANQ     14336,DU
         7 011765   000005 772000                    QRL     5
         7 011766   700000 676100                    ERQ     0,,PR7
         7 011767   003700 376003                    ANQ     1984,DU
         7 011770   700000 656100                    ERSQ    0,,PR7

     5038    16407    5                                      TOP$TCP.FICCDD.IOM#(TCX) ;
     5039    16408    5                              Q_REG_.TAPE_ICC.OLD_FORMAT.CHAN# =

  16408  7 011771   300000 236100                    LDQ     0,,PR3
         7 011772   000122 402007                    MPY     82,DL
         7 011773   000001 736000                    QLS     1
         7 011774   000003 476400 xsym               LDP6    TOT$DMC+3
         7 011775   600001 236106                    LDQ     1,QL,PR6
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:619  
         7 011776   000003 772000                    QRL     3
         7 011777   700000 752110                    STCQ    0,'10'O,PR7

     5040    16409    5                                      TOP$TCP.FICCDD.CHAN#(TCX) ;
     5041    16410    5                           END ;

     5042    16411    4                   END /* THEN */ ;

     5043    16412    3              ELSE /* not a tape unit record controller */ ;
     5044    16413    3           END /* THEN */ ;

     5045    16414    2      ELSE /* not an MDR or ITR */ ;
     5046    16415           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:620  
     5047    16416    2      IF SCTWDS_BUILT

  16416  7 012000   200043 476500                    LDP6    @SCTWDS_BUILT,,AUTO
         7 012001   000000 066500                    CMPB    filb='0'B
         7 012002   600000 000001                    BDSC    0,,PR6                   by=0,bit=0,n=1
         7 012003   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         7 012004   012014 600000 7                  TZE     s:16423

     5048    16417    3      THEN DO ;

     5049    16418    3              SCTWRK$ -> SCTWRK.CRCST_0 = CN_SCT$ -> CONTROLLER_SCT.W0# ;

  16418  7 012005   500000 236100                    LDQ     0,,PR5
         7 012006   100004 756100                    STQ     4,,PR1

     5050    16419    3              SCTWRK$ -> SCTWRK.SCT_0 = DV_SCT$ -> DEVICE_SCT.W0# ;

  16419  7 012007   400000 236100                    LDQ     0,,PR4
         7 012010   100010 756100                    STQ     8,,PR1

     5051    16420    3              SCTWRK$ -> SCTWRK.SCT_1 = DV_SCT$ -> DEVICE_SCT.W1# ;

  16420  7 012011   400001 236100                    LDQ     1,,PR4
         7 012012   100011 756100                    STQ     9,,PR1

     5052    16421    3           END ;

  16421  7 012013   012104 710000 7                  TRA     s:16437

     5053    16422    3      ELSE DO ;

     5054    16423    3              SCTWRK$ -> SCTWRK.SCT_0.BIT17# = TOP$TCP.SCT.BIT17(TCX) ;

  16423  7 012014   300000 236100                    LDQ     0,,PR3
         7 012015   000122 402007                    MPY     82,DL
         7 012016   000001 736000                    QLS     1
         7 012017   000003 477400 xsym               LDP7    TOT$DMC+3
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:621  
         7 012020   700012 236106                    LDQ     10,QL,PR7
         7 012021   000010 772000                    QRL     8
         7 012022   100010 676100                    ERQ     8,,PR1
         7 012023   000001 376003                    ANQ     1,DU
         7 012024   100010 656100                    ERSQ    8,,PR1

     5055    16424    3              SCTWRK$ -> SCTWRK.SCT_0.SPEED# = TOP$TCP.SCT.BIT13(TCX) ;

  16424  7 012025   300000 236100                    LDQ     0,,PR3
         7 012026   000122 402007                    MPY     82,DL
         7 012027   000001 736000                    QLS     1
         7 012030   700012 236106                    LDQ     10,QL,PR7
         7 012031   000003 772000                    QRL     3
         7 012032   100010 676100                    ERQ     8,,PR1
         7 012033   000020 376003                    ANQ     16,DU
         7 012034   100010 656100                    ERSQ    8,,PR1

     5056    16425    3              SCTWRK$ -> SCTWRK.SCT_0.BIT12# = TOP$TCP.SCT.BIT12(TCX) ;

  16425  7 012035   300000 236100                    LDQ     0,,PR3
         7 012036   000122 402007                    MPY     82,DL
         7 012037   000001 736000                    QLS     1
         7 012040   700012 236106                    LDQ     10,QL,PR7
         7 012041   000001 772000                    QRL     1
         7 012042   100010 676100                    ERQ     8,,PR1
         7 012043   000040 376003                    ANQ     32,DU
         7 012044   100010 656100                    ERSQ    8,,PR1

     5057    16426    3              IF  ( TOP$TCP.FIRMWARE.TYPE(TCX) = 'NONE' )  OR

  16426  7 012045   300000 236100                    LDQ     0,,PR3
         7 012046   000122 402007                    MPY     82,DL
         7 012047   000001 736000                    QLS     1
         7 012050   700013 236106                    LDQ     11,QL,PR7
         7 012051   000124 116000 6                  CMPQ    CRLF_+14
         7 012052   012061 600000 7                  TZE     s:16428
         7 012053   300000 236100                    LDQ     0,,PR3
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:622  
         7 012054   000122 402007                    MPY     82,DL
         7 012055   000001 736000                    QLS     1
         7 012056   700013 236106                    LDQ     11,QL,PR7
         7 012057   000236 116000 6                  CMPQ    CRLF_+88
         7 012060   012100 601000 7                  TNZ     s:16434

     5058    16427    3                      ( TOP$TCP.FIRMWARE.TYPE(TCX) = 'IPR5' )
     5059    16428    3              THEN IF TOP$TCP.DEVICE_CODE(TCX) = %DPR42

  16428  7 012061   300000 236100                    LDQ     0,,PR3
         7 012062   000122 402007                    MPY     82,DL
         7 012063   000001 736000                    QLS     1
         7 012064   700007 222106                    LDX2    7,QL,PR7
         7 012065   000024 102003                    CMPX2   20,DU
         7 012066   012102 601000 7                  TNZ     s:16435

     5060    16429    4                 THEN DO ;

     5061    16430    4                        SCTWRK$ -> SCTWRK.SCT_0.DEV_TYPE# = TOP$TCP.DEVICE_CODE(TCX) ;

  16430  7 012067   300000 236100                    LDQ     0,,PR3
         7 012070   000122 402007                    MPY     82,DL
         7 012071   000001 736000                    QLS     1
         7 012072   700007 236106                    LDQ     7,QL,PR7
         7 012073   000014 736000                    QLS     12
         7 012074   100010 752140                    STCQ    8,'40'O,PR1

     5062    16431    4                         SCTWRK$ -> SCTWRK.SCT_0.BIT17# = '1'B ;

  16431  7 012075   000001 236003                    LDQ     1,DU
         7 012076   100010 256100                    ORSQ    8,,PR1

     5063    16432    4                      END ;

  16432  7 012077   012102 710000 7                  TRA     s:16435

     5064    16433    3                 ELSE ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:623  
     5065    16434    3              ELSE SCTWRK$ -> SCTWRK.CRCST_0.VOLATILE_FW# = '1'B ;

  16434  7 012100   200000 236003                    LDQ     65536,DU
         7 012101   100004 256100                    ORSQ    4,,PR1

     5066    16435    3              SCTWRK$ -> SCTWRK.CRCST_0.MPC# = '1'B ;

  16435  7 012102   100000 236003                    LDQ     32768,DU
         7 012103   100004 256100                    ORSQ    4,,PR1

     5067    16436    3           END ;

     5068    16437    3      DO SELECT (TOP$TCP.MPC_MODEL (TCX));

  16437  7 012104   300000 236100                    LDQ     0,,PR3
         7 012105   000122 402007                    MPY     82,DL
         7 012106   000000 622006                    EAX2    0,QL
         7 012107   000003 736000                    QLS     3
         7 012110   000003 477400 xsym               LDP7    TOT$DMC+3
         7 012111   040000 106506                    CMPC    fill='040'O
         7 012112   700002 600010                    ADSC9   2,Q,PR7                  cn=3,n=8
         7 012113   000257 000007 6                  ADSC9   CRLF_+105                cn=0,n=7
         7 012114   012271 602000 7                  TNC     s:16437+117
         7 012115   000000 635012                    EAA     0,X2
         7 012116   000017 771000                    ARL     15
         7 012117   040000 106505                    CMPC    fill='040'O
         7 012120   700002 600010                    ADSC9   2,A,PR7                  cn=3,n=8
         7 012121   000257 000007 6                  ADSC9   CRLF_+105                cn=0,n=7
         7 012122   012502 600000 7                  TZE     s:16446
         7 012123   000000 635012                    EAA     0,X2
         7 012124   000017 771000                    ARL     15
         7 012125   040000 106505                    CMPC    fill='040'O
         7 012126   700002 600010                    ADSC9   2,A,PR7                  cn=3,n=8
         7 012127   000261 000007 6                  ADSC9   CRLF_+107                cn=0,n=7
         7 012130   012214 602000 7                  TNC     s:16437+72
         7 012131   000000 635012                    EAA     0,X2
         7 012132   000017 771000                    ARL     15
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:624  
         7 012133   040000 106505                    CMPC    fill='040'O
         7 012134   700002 600010                    ADSC9   2,A,PR7                  cn=3,n=8
         7 012135   000261 000007 6                  ADSC9   CRLF_+107                cn=0,n=7
         7 012136   012470 600000 7                  TZE     s:16439
         7 012137   000000 635012                    EAA     0,X2
         7 012140   000017 771000                    ARL     15
         7 012141   040000 106505                    CMPC    fill='040'O
         7 012142   700002 600010                    ADSC9   2,A,PR7                  cn=3,n=8
         7 012143   000263 000007 6                  ADSC9   CRLF_+109                cn=0,n=7
         7 012144   012205 602000 7                  TNC     s:16437+65
         7 012145   000000 635012                    EAA     0,X2
         7 012146   000017 771000                    ARL     15
         7 012147   040000 106505                    CMPC    fill='040'O
         7 012150   700002 600010                    ADSC9   2,A,PR7                  cn=3,n=8
         7 012151   000263 000007 6                  ADSC9   CRLF_+109                cn=0,n=7
         7 012152   012507 600000 7                  TZE     s:16448
         7 012153   000000 635012                    EAA     0,X2
         7 012154   000017 771000                    ARL     15
         7 012155   040000 106505                    CMPC    fill='040'O
         7 012156   700002 600010                    ADSC9   2,A,PR7                  cn=3,n=8
         7 012157   000265 000007 6                  ADSC9   CRLF_+111                cn=0,n=7
         7 012160   012176 602000 7                  TNC     s:16437+58
         7 012161   000000 635012                    EAA     0,X2
         7 012162   000017 771000                    ARL     15
         7 012163   040000 106505                    CMPC    fill='040'O
         7 012164   700002 600010                    ADSC9   2,A,PR7                  cn=3,n=8
         7 012165   000265 000007 6                  ADSC9   CRLF_+111                cn=0,n=7
         7 012166   012507 600000 7                  TZE     s:16448
         7 012167   000000 635012                    EAA     0,X2
         7 012170   000017 771000                    ARL     15
         7 012171   040000 106505                    CMPC    fill='040'O
         7 012172   700002 600010                    ADSC9   2,A,PR7                  cn=3,n=8
         7 012173   000267 000007 6                  ADSC9   CRLF_+113                cn=0,n=7
         7 012174   012514 601000 7                  TNZ     s:16450
         7 012175   012470 710000 7                  TRA     s:16439
         7 012176   000000 635012                    EAA     0,X2
         7 012177   000017 771000                    ARL     15
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:625  
         7 012200   040000 106505                    CMPC    fill='040'O
         7 012201   700002 600010                    ADSC9   2,A,PR7                  cn=3,n=8
         7 012202   000271 000007 6                  ADSC9   CRLF_+115                cn=0,n=7
         7 012203   012514 601000 7                  TNZ     s:16450
         7 012204   012507 710000 7                  TRA     s:16448
         7 012205   000000 635012                    EAA     0,X2
         7 012206   000017 771000                    ARL     15
         7 012207   040000 106505                    CMPC    fill='040'O
         7 012210   700002 600010                    ADSC9   2,A,PR7                  cn=3,n=8
         7 012211   000273 000007 6                  ADSC9   CRLF_+117                cn=0,n=7
         7 012212   012514 601000 7                  TNZ     s:16450
         7 012213   012470 710000 7                  TRA     s:16439
         7 012214   000000 635012                    EAA     0,X2
         7 012215   000017 771000                    ARL     15
         7 012216   040000 106505                    CMPC    fill='040'O
         7 012217   700002 600010                    ADSC9   2,A,PR7                  cn=3,n=8
         7 012220   000275 000007 6                  ADSC9   CRLF_+119                cn=0,n=7
         7 012221   012262 602000 7                  TNC     s:16437+110
         7 012222   000000 635012                    EAA     0,X2
         7 012223   000017 771000                    ARL     15
         7 012224   040000 106505                    CMPC    fill='040'O
         7 012225   700002 600010                    ADSC9   2,A,PR7                  cn=3,n=8
         7 012226   000275 000007 6                  ADSC9   CRLF_+119                cn=0,n=7
         7 012227   012502 600000 7                  TZE     s:16446
         7 012230   000000 635012                    EAA     0,X2
         7 012231   000017 771000                    ARL     15
         7 012232   040000 106505                    CMPC    fill='040'O
         7 012233   700002 600010                    ADSC9   2,A,PR7                  cn=3,n=8
         7 012234   000277 000007 6                  ADSC9   CRLF_+121                cn=0,n=7
         7 012235   012253 602000 7                  TNC     s:16437+103
         7 012236   000000 635012                    EAA     0,X2
         7 012237   000017 771000                    ARL     15
         7 012240   040000 106505                    CMPC    fill='040'O
         7 012241   700002 600010                    ADSC9   2,A,PR7                  cn=3,n=8
         7 012242   000277 000007 6                  ADSC9   CRLF_+121                cn=0,n=7
         7 012243   012502 600000 7                  TZE     s:16446
         7 012244   000000 635012                    EAA     0,X2
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:626  
         7 012245   000017 771000                    ARL     15
         7 012246   040000 106505                    CMPC    fill='040'O
         7 012247   700002 600010                    ADSC9   2,A,PR7                  cn=3,n=8
         7 012250   000301 000007 6                  ADSC9   CRLF_+123                cn=0,n=7
         7 012251   012514 601000 7                  TNZ     s:16450
         7 012252   012470 710000 7                  TRA     s:16439
         7 012253   000000 635012                    EAA     0,X2
         7 012254   000017 771000                    ARL     15
         7 012255   040000 106505                    CMPC    fill='040'O
         7 012256   700002 600010                    ADSC9   2,A,PR7                  cn=3,n=8
         7 012257   000303 000007 6                  ADSC9   CRLF_+125                cn=0,n=7
         7 012260   012514 601000 7                  TNZ     s:16450
         7 012261   012502 710000 7                  TRA     s:16446
         7 012262   000000 635012                    EAA     0,X2
         7 012263   000017 771000                    ARL     15
         7 012264   040000 106505                    CMPC    fill='040'O
         7 012265   700002 600010                    ADSC9   2,A,PR7                  cn=3,n=8
         7 012266   000305 000007 6                  ADSC9   CRLF_+127                cn=0,n=7
         7 012267   012514 601000 7                  TNZ     s:16450
         7 012270   012502 710000 7                  TRA     s:16446
         7 012271   000000 635012                    EAA     0,X2
         7 012272   000017 771000                    ARL     15
         7 012273   040000 106505                    CMPC    fill='040'O
         7 012274   700002 600010                    ADSC9   2,A,PR7                  cn=3,n=8
         7 012275   000307 000007 6                  ADSC9   CRLF_+129                cn=0,n=7
         7 012276   012377 602000 7                  TNC     s:16437+187
         7 012277   000000 635012                    EAA     0,X2
         7 012300   000017 771000                    ARL     15
         7 012301   040000 106505                    CMPC    fill='040'O
         7 012302   700002 600010                    ADSC9   2,A,PR7                  cn=3,n=8
         7 012303   000307 000007 6                  ADSC9   CRLF_+129                cn=0,n=7
         7 012304   012502 600000 7                  TZE     s:16446
         7 012305   000000 635012                    EAA     0,X2
         7 012306   000017 771000                    ARL     15
         7 012307   040000 106505                    CMPC    fill='040'O
         7 012310   700002 600010                    ADSC9   2,A,PR7                  cn=3,n=8
         7 012311   000311 000007 6                  ADSC9   CRLF_+131                cn=0,n=7
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:627  
         7 012312   012345 602000 7                  TNC     s:16437+161
         7 012313   000000 635012                    EAA     0,X2
         7 012314   000017 771000                    ARL     15
         7 012315   040000 106505                    CMPC    fill='040'O
         7 012316   700002 600010                    ADSC9   2,A,PR7                  cn=3,n=8
         7 012317   000311 000007 6                  ADSC9   CRLF_+131                cn=0,n=7
         7 012320   012502 600000 7                  TZE     s:16446
         7 012321   000000 635012                    EAA     0,X2
         7 012322   000017 771000                    ARL     15
         7 012323   040000 106505                    CMPC    fill='040'O
         7 012324   700002 600010                    ADSC9   2,A,PR7                  cn=3,n=8
         7 012325   000313 000007 6                  ADSC9   CRLF_+133                cn=0,n=7
         7 012326   012336 602000 7                  TNC     s:16437+154
         7 012327   000000 635012                    EAA     0,X2
         7 012330   000017 771000                    ARL     15
         7 012331   040000 106505                    CMPC    fill='040'O
         7 012332   700002 600010                    ADSC9   2,A,PR7                  cn=3,n=8
         7 012333   000313 000007 6                  ADSC9   CRLF_+133                cn=0,n=7
         7 012334   012502 600000 7                  TZE     s:16446
         7 012335   012514 710000 7                  TRA     s:16450
         7 012336   000000 635012                    EAA     0,X2
         7 012337   000017 771000                    ARL     15
         7 012340   040000 106505                    CMPC    fill='040'O
         7 012341   700002 600010                    ADSC9   2,A,PR7                  cn=3,n=8
         7 012342   000315 000007 6                  ADSC9   CRLF_+135                cn=0,n=7
         7 012343   012514 601000 7                  TNZ     s:16450
         7 012344   012502 710000 7                  TRA     s:16446
         7 012345   000000 635012                    EAA     0,X2
         7 012346   000017 771000                    ARL     15
         7 012347   040000 106505                    CMPC    fill='040'O
         7 012350   700002 600010                    ADSC9   2,A,PR7                  cn=3,n=8
         7 012351   000317 000007 6                  ADSC9   CRLF_+137                cn=0,n=7
         7 012352   012370 602000 7                  TNC     s:16437+180
         7 012353   000000 635012                    EAA     0,X2
         7 012354   000017 771000                    ARL     15
         7 012355   040000 106505                    CMPC    fill='040'O
         7 012356   700002 600010                    ADSC9   2,A,PR7                  cn=3,n=8
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:628  
         7 012357   000317 000007 6                  ADSC9   CRLF_+137                cn=0,n=7
         7 012360   012475 600000 7                  TZE     s:16441
         7 012361   000000 635012                    EAA     0,X2
         7 012362   000017 771000                    ARL     15
         7 012363   040000 106505                    CMPC    fill='040'O
         7 012364   700002 600010                    ADSC9   2,A,PR7                  cn=3,n=8
         7 012365   000321 000007 6                  ADSC9   CRLF_+139                cn=0,n=7
         7 012366   012514 601000 7                  TNZ     s:16450
         7 012367   012475 710000 7                  TRA     s:16441
         7 012370   000000 635012                    EAA     0,X2
         7 012371   000017 771000                    ARL     15
         7 012372   040000 106505                    CMPC    fill='040'O
         7 012373   700002 600010                    ADSC9   2,A,PR7                  cn=3,n=8
         7 012374   000323 000007 6                  ADSC9   CRLF_+141                cn=0,n=7
         7 012375   012514 601000 7                  TNZ     s:16450
         7 012376   012502 710000 7                  TRA     s:16446
         7 012377   000000 635012                    EAA     0,X2
         7 012400   000017 771000                    ARL     15
         7 012401   040000 106505                    CMPC    fill='040'O
         7 012402   700002 600010                    ADSC9   2,A,PR7                  cn=3,n=8
         7 012403   000325 000007 6                  ADSC9   CRLF_+143                cn=0,n=7
         7 012404   012445 602000 7                  TNC     s:16437+225
         7 012405   000000 635012                    EAA     0,X2
         7 012406   000017 771000                    ARL     15
         7 012407   040000 106505                    CMPC    fill='040'O
         7 012410   700002 600010                    ADSC9   2,A,PR7                  cn=3,n=8
         7 012411   000325 000007 6                  ADSC9   CRLF_+143                cn=0,n=7
         7 012412   012502 600000 7                  TZE     s:16446
         7 012413   000000 635012                    EAA     0,X2
         7 012414   000017 771000                    ARL     15
         7 012415   040000 106505                    CMPC    fill='040'O
         7 012416   700002 600010                    ADSC9   2,A,PR7                  cn=3,n=8
         7 012417   000327 000007 6                  ADSC9   CRLF_+145                cn=0,n=7
         7 012420   012436 602000 7                  TNC     s:16437+218
         7 012421   000000 635012                    EAA     0,X2
         7 012422   000017 771000                    ARL     15
         7 012423   040000 106505                    CMPC    fill='040'O
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:629  
         7 012424   700002 600010                    ADSC9   2,A,PR7                  cn=3,n=8
         7 012425   000327 000007 6                  ADSC9   CRLF_+145                cn=0,n=7
         7 012426   012502 600000 7                  TZE     s:16446
         7 012427   000000 635012                    EAA     0,X2
         7 012430   000017 771000                    ARL     15
         7 012431   040000 106505                    CMPC    fill='040'O
         7 012432   700002 600010                    ADSC9   2,A,PR7                  cn=3,n=8
         7 012433   000331 000007 6                  ADSC9   CRLF_+147                cn=0,n=7
         7 012434   012514 601000 7                  TNZ     s:16450
         7 012435   012502 710000 7                  TRA     s:16446
         7 012436   000000 635012                    EAA     0,X2
         7 012437   000017 771000                    ARL     15
         7 012440   040000 106505                    CMPC    fill='040'O
         7 012441   700002 600010                    ADSC9   2,A,PR7                  cn=3,n=8
         7 012442   000333 000007 6                  ADSC9   CRLF_+149                cn=0,n=7
         7 012443   012514 601000 7                  TNZ     s:16450
         7 012444   012502 710000 7                  TRA     s:16446
         7 012445   000000 635012                    EAA     0,X2
         7 012446   000017 771000                    ARL     15
         7 012447   040000 106505                    CMPC    fill='040'O
         7 012450   700002 600010                    ADSC9   2,A,PR7                  cn=3,n=8
         7 012451   000335 000007 6                  ADSC9   CRLF_+151                cn=0,n=7
         7 012452   012514 602000 7                  TNC     s:16450
         7 012453   000000 635012                    EAA     0,X2
         7 012454   000017 771000                    ARL     15
         7 012455   040000 106505                    CMPC    fill='040'O
         7 012456   700002 600010                    ADSC9   2,A,PR7                  cn=3,n=8
         7 012457   000335 000007 6                  ADSC9   CRLF_+151                cn=0,n=7
         7 012460   012502 600000 7                  TZE     s:16446
         7 012461   000000 635012                    EAA     0,X2
         7 012462   000017 771000                    ARL     15
         7 012463   040000 106505                    CMPC    fill='040'O
         7 012464   700002 600010                    ADSC9   2,A,PR7                  cn=3,n=8
         7 012465   000337 000007 6                  ADSC9   CRLF_+153                cn=0,n=7
         7 012466   012514 601000 7                  TNZ     s:16450
         7 012467   012502 710000 7                  TRA     s:16446

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:630  
     5069    16438    3         SELECT ('URPEURP', 'URP8011', 'URP8012', 'URP8013');

     5070    16439    3         SCTWRK$ -> SCTWRK.CTLR_TYPE# = %EURC# ;

  16439  7 012470   100002 236100                    LDQ     2,,PR1
         7 012471   000100 376000 8                  ANQ     64
         7 012472   004000 276007                    ORQ     2048,DL
         7 012473   100002 756100                    STQ     2,,PR1
         7 012474   012516 710000 7                  TRA     s:16452

     5071    16440    3         SELECT ('MSP8021', 'MSP8022');

     5072    16441    3         SCTWRK$ -> SCTWRK.CTLR_TYPE# = %DAU#;

  16441  7 012475   100002 236100                    LDQ     2,,PR1
         7 012476   000100 376000 8                  ANQ     64
         7 012477   002000 276007                    ORQ     1024,DL
         7 012500   100002 756100                    STQ     2,,PR1
         7 012501   012516 710000 7                  TRA     s:16452

     5073    16442    3         SELECT ('MSP3881', 'MSP3885', 'MTP8215', 'MTP8216', 'MTP8218',

     5074    16443    3                 'MSP3993', 'MSP3994',
     5075    16444    3                 'MSP3882', 'MSP3886', 'MTP8225', 'MTP8226', 'MTP8228',
     5076    16445    3                 'MSP3991', 'MSP3992', 'MSS8080', 'MSS8090' );
     5077    16446    3         SCTWRK$ -> SCTWRK.CTLR_TYPE# = %FIPS#;

  16446  7 012502   100002 236100                    LDQ     2,,PR1
         7 012503   000100 376000 8                  ANQ     64
         7 012504   006000 276007                    ORQ     3072,DL
         7 012505   100002 756100                    STQ     2,,PR1
         7 012506   012516 710000 7                  TRA     s:16452

     5078    16447    3         SELECT ( 'URP8600', 'URP8601', 'URP8602' ) ;

     5079    16448    3         SCTWRK$ -> SCTWRK.CTLR_TYPE# = %IPC# ;

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:631  
  16448  7 012507   100002 236100                    LDQ     2,,PR1
         7 012510   000100 376000 8                  ANQ     64
         7 012511   010000 276007                    ORQ     4096,DL
         7 012512   100002 756100                    STQ     2,,PR1
         7 012513   012516 710000 7                  TRA     s:16452

     5080    16449    3         SELECT (ELSE);

     5081    16450    3      SCTWRK$ -> SCTWRK.CTLR_TYPE# = %MPC_CTLR#;

  16450  7 012514   000100 236000 8                  LDQ     64
         7 012515   100002 356100                    ANSQ    2,,PR1

     5082    16451    3      END /* DO SELECT */;

     5083    16452    2      RETURN ;

  16452  7 012516   200034 221300                    LDX1  ! REASON+1,,AUTO
         7 012517   000001 702211                    TSX2  ! 1,X1

     5084    16453
     5085    16454    2   END BUILD_SCTWRK ;
     5086    16455        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:632  
     5087    16456        /*I* NAME:         MATCH_ICC
     5088    16457             CALL:         CALL MATCH_ICC(ICC,TCX) ;
     5089    16458             INTERFACE:
     5090    16459             INPUT:        ICC = IOM and channel number
     5091    16460             OUTPUT:       TCX = index into TOP$TCP for test page
     5092    16461             DESCRIPTION:  Searches the ICC field in TOP$TCP for a match
     5093    16462                           with ICC and returns I.
     5094    16463        */
     5095    16464
     5096    16465    1   MATCH_ICC: PROC (ICC,TCX) ;

  16465  7 012520   200022 741300       MATCH_ICC    STX1  ! DUMP_HDR$,,AUTO

     5097    16466
     5098    16467    2      DCL TCX UBIN(36) ;
     5099    16468    2      DCL ICC         UBIN (11) ;
     5100    16469
     5101    16470        /* Code */
     5102    16471
     5103    16472    2      TCX = 0 ;

  16472  7 012521   200024 470500                    LDP0    @TCX,,AUTO
         7 012522   000000 450100                    STZ     0,,PR0

     5104    16473    3      DO WHILE TCX < 8 ;

  16473  7 012523   000000 235100                    LDA     0,,PR0
         7 012524   000010 115007                    CMPA    8,DL
         7 012525   012555 603000 7                  TRC     s:16479

     5105    16474    3         IF TOP$TCP.ICC.ICC#(TCX) = ICC

  16474  7 012526   200024 470500                    LDP0    @TCX,,AUTO
         7 012527   000000 236100                    LDQ     0,,PR0
         7 012530   000122 402007                    MPY     82,DL
         7 012531   200023 471500                    LDP1    @ICC,,AUTO
         7 012532   000000 620006                    EAX0    0,QL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:633  
         7 012533   100000 236100                    LDQ     0,,PR1
         7 012534   000031 772000                    QRL     25
         7 012535   205740 756100                    STQ     BCD_BUF_INX+1,,AUTO
         7 012536   000000 635010                    EAA     0,X0
         7 012537   000021 771000                    ARL     17
         7 012540   000003 473400 xsym               LDP3    TOT$DMC+3
         7 012541   300001 236105                    LDQ     1,AL,PR3
         7 012542   000025 772000                    QRL     21
         7 012543   003777 376007                    ANQ     2047,DL
         7 012544   205740 116100                    CMPQ    BCD_BUF_INX+1,,AUTO
         7 012545   012550 601000 7                  TNZ     s:16476

     5106    16475    3         THEN RETURN ;

  16475  7 012546   200022 221300                    LDX1  ! DUMP_HDR$,,AUTO
         7 012547   000001 702211                    TSX2  ! 1,X1

     5107    16476    3         ELSE TCX = TCX + 1 ;

  16476  7 012550   000000 235100                    LDA     0,,PR0
         7 012551   000001 035007                    ADLA    1,DL
         7 012552   000000 755100                    STA     0,,PR0

     5108    16477    3      END ;

  16477  7 012553   000010 115007                    CMPA    8,DL
         7 012554   012526 602000 7                  TNC     s:16474

     5109    16478
     5110    16479    2      TOP_ERROR_CODE.ERR# = %E$BADICC ;

  16479  7 012555   000173 236000 5                  LDQ     TOP_ERROR_CODE
         7 012556   000006 376000 8                  ANQ     6
         7 012557   003340 276007                    ORQ     1760,DL
         7 012560   000173 756000 5                  STQ     TOP_ERROR_CODE

     5111    16480    2      CALL TOX$SCREECH (TOP_ERROR_CODE) ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:634  

  16480  7 012561   000007 630400 8                  EPPR0   7
         7 012562   000017 631400 xsym               EPPR1   B_VECTNIL+15
         7 012563   000000 701000 xent               TSX1    TOX$SCREECH
         7 012564   000000 011000                    NOP     0

     5112    16481
     5113    16482    2   END MATCH_ICC ;

  16482  7 012565   200022 221300                    LDX1  ! DUMP_HDR$,,AUTO
         7 012566   000001 702211                    TSX2  ! 1,X1

     5114    16483        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:635  
     5115    16484        /*I* NAME:         MATCH_SCT_ADR
     5116    16485             CALL:         CALL MATCH_SCT_ADR(NEW_SCT_ADR,TCX) ;
     5117    16486             INTERFACE:
     5118    16487             INPUT:        NEW_SCT_ADR = a SCT address from the subexec
     5119    16488             OUTPUT:       TCX = index into TOP$TCP for the test page.
     5120    16489             DESCRTIPTION: Given a SCT address, searches for a match against
     5121    16490                           both the device and controller SCT address saved
     5122    16491                           in TOP$TCP and returns I.  Also either sets
     5123    16492                           or resets the CONTROLLER_IO flag in TOP$TCP
     5124    16493                           depending on which SCT address matched up.  This
     5125    16494                           flag determines the device number when building
     5126    16495                           IDCWs.
     5127    16496
     5128    16497                           To start with, the device and controller SCT addresses
     5129    16498                           are phony entities which are sent back to the subexec
     5130    16499                           via SCTWRK and which the subexecs use in turn to
     5131    16500                           identify either device or controller I/O.
     5132    16501        */
     5133    16502        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:636  
     5134    16503    1   MATCH_SCT_ADR: PROC (NEW_SCT_ADR,TCX) ;

  16503  7 012567   200024 741300       MATCH_SCT_A* STX1  ! @TCX,,AUTO

     5135    16504
     5136    16505    2      DCL TCX UBIN WORD ALIGNED ;
     5137    16506    2      DCL NEW_SCT_ADR UBIN HALF HALIGNED ;
     5138    16507
     5139    16508        /* Code */
     5140    16509
     5141    16510    2      TCX = 0 ;

  16510  7 012570   200026 470500                    LDP0    @TCX,,AUTO
         7 012571   000000 450100                    STZ     0,,PR0

     5142    16511    3      DO WHILE TCX < 8 ;

  16511  7 012572   000000 235100                    LDA     0,,PR0
         7 012573   000010 115007                    CMPA    8,DL
         7 012574   012627 603000 7                  TRC     s:16520

     5143    16512    3         IF TOP$TCP.ADR.SCT(TCX) = NEW_SCT_ADR

  16512  7 012575   200026 470500                    LDP0    @TCX,,AUTO
         7 012576   000000 236100                    LDQ     0,,PR0
         7 012577   000122 402007                    MPY     82,DL
         7 012600   200025 471500                    LDP1    @NEW_SCT_ADR,,AUTO
         7 012601   000100 101500                    MRL     fill='000'O
         7 012602   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2
         7 012603   205740 000004                    ADSC9   BCD_BUF_INX+1,,AUTO      cn=0,n=4
         7 012604   000001 736000                    QLS     1
         7 012605   000003 473400 xsym               LDP3    TOT$DMC+3
         7 012606   300010 236106                    LDQ     8,QL,PR3
         7 012607   000022 772000                    QRL     18
         7 012610   205740 116100                    CMPQ    BCD_BUF_INX+1,,AUTO
         7 012611   012622 601000 7                  TNZ     s:16517

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:637  
     5144    16513    4         THEN DO ;

     5145    16514    4                 TOP$TCP.IO.CONTROLLER(TCX) = '0'B ;

  16514  7 012612   000000 236100                    LDQ     0,,PR0
         7 012613   000122 402007                    MPY     82,DL
         7 012614   000001 736000                    QLS     1
         7 012615   000000 620006                    EAX0    0,QL
         7 012616   000101 236000 8                  LDQ     65
         7 012617   300012 356110                    ANSQ    10,X0,PR3

     5146    16515    4                 RETURN ;

  16515  7 012620   200024 221300                    LDX1  ! @TCX,,AUTO
         7 012621   000001 702211                    TSX2  ! 1,X1

     5147    16516    4              END ;
     5148    16517    3         ELSE TCX = TCX + 1 ;

  16517  7 012622   000000 235100                    LDA     0,,PR0
         7 012623   000001 035007                    ADLA    1,DL
         7 012624   000000 755100                    STA     0,,PR0

     5149    16518    3      END ;

  16518  7 012625   000010 115007                    CMPA    8,DL
         7 012626   012575 602000 7                  TNC     s:16512

     5150    16519
     5151    16520    2      TCX = 0 ;

  16520  7 012627   000000 450100                    STZ     0,,PR0

     5152    16521    3      DO WHILE TCX < 8 ;

  16521  7 012630   000000 235100                    LDA     0,,PR0
         7 012631   000010 115007                    CMPA    8,DL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:638  
         7 012632   012665 603000 7                  TRC     s:16530

     5153    16522    3         IF TOP$TCP.ADR.CSCT(TCX) = NEW_SCT_ADR

  16522  7 012633   200026 470500                    LDP0    @TCX,,AUTO
         7 012634   000000 236100                    LDQ     0,,PR0
         7 012635   000122 402007                    MPY     82,DL
         7 012636   200025 471500                    LDP1    @NEW_SCT_ADR,,AUTO
         7 012637   000100 101500                    MRL     fill='000'O
         7 012640   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2
         7 012641   205740 000004                    ADSC9   BCD_BUF_INX+1,,AUTO      cn=0,n=4
         7 012642   000001 736000                    QLS     1
         7 012643   000003 473400 xsym               LDP3    TOT$DMC+3
         7 012644   300010 236106                    LDQ     8,QL,PR3
         7 012645   777777 376007                    ANQ     -1,DL
         7 012646   205740 116100                    CMPQ    BCD_BUF_INX+1,,AUTO
         7 012647   012660 601000 7                  TNZ     s:16527

     5154    16523    4         THEN DO ;

     5155    16524    4                 TOP$TCP.IO.CONTROLLER(TCX) = '1'B ;

  16524  7 012650   000000 236100                    LDQ     0,,PR0
         7 012651   000122 402007                    MPY     82,DL
         7 012652   000001 736000                    QLS     1
         7 012653   000000 620006                    EAX0    0,QL
         7 012654   100000 236003                    LDQ     32768,DU
         7 012655   300012 256110                    ORSQ    10,X0,PR3

     5156    16525    4                 RETURN ;

  16525  7 012656   200024 221300                    LDX1  ! @TCX,,AUTO
         7 012657   000001 702211                    TSX2  ! 1,X1

     5157    16526    4              END ;
     5158    16527    3         ELSE TCX = TCX + 1 ;

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:639  
  16527  7 012660   000000 235100                    LDA     0,,PR0
         7 012661   000001 035007                    ADLA    1,DL
         7 012662   000000 755100                    STA     0,,PR0

     5159    16528    3      END ;

  16528  7 012663   000010 115007                    CMPA    8,DL
         7 012664   012633 602000 7                  TNC     s:16522

     5160    16529
     5161    16530    2      TOP_ERROR_CODE.ERR# = %E$BADSCTADR ;

  16530  7 012665   000173 236000 5                  LDQ     TOP_ERROR_CODE
         7 012666   000006 376000 8                  ANQ     6
         7 012667   003370 276007                    ORQ     1784,DL
         7 012670   000173 756000 5                  STQ     TOP_ERROR_CODE

     5162    16531    2      CALL TOX$SCREECH (TOP_ERROR_CODE) ;

  16531  7 012671   000007 630400 8                  EPPR0   7
         7 012672   000017 631400 xsym               EPPR1   B_VECTNIL+15
         7 012673   000000 701000 xent               TSX1    TOX$SCREECH
         7 012674   000000 011000                    NOP     0

     5163    16532
     5164    16533    2   END MATCH_SCT_ADR ;

  16533  7 012675   200024 221300                    LDX1  ! @TCX,,AUTO
         7 012676   000001 702211                    TSX2  ! 1,X1

     5165    16534        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:640  
     5166    16535        /*I* NAME:         TOP$TIO_DONE
     5167    16536             CALL:         CALL TOP$TIO_DONE ;
     5168    16537             INTERFACE:    RETURN_TIO_STATUS
     5169    16538                           PAY_TIO_CC
     5170    16539                           RETURN_SPECIAL_STATUS
     5171    16540             INPUT:        TOP$EVENT_ID = Event ID of test I/O completing
     5172    16541                           TOP$STATUS = 2 words of status fetched from TCB in
     5173    16542                                       Event Handler
     5174    16543                           Uses information in IO_ENTRY and TOP$TCP
     5175    16544             OUTPUT:       Status returned to test page and Courtesy Call paid
     5176    16545             DESCRIPTION:  This is the routine that handles the termination of
     5177    16546                           a test I/O, returning status to the test page and
     5178    16547                           paying a Courtesy Call.  It is also here that the
     5179    16548                           special handling of ITR interrupts is done.(See
     5180    16549                           documentation in TOP$MME_TESTIO for a description
     5181    16550                           of the overall picture of ITR I/O.)
     5182    16551
     5183    16552                           First, the test page index TCX into TOP$TCP is
     5184    16553                           calculated from the Event ID.  We need to make 2 passes
     5185    16554                           at this.  First the Event ID Base for normal
     5186    16555                           I/O is subracted from TOP$EVENT_ID, and the result
     5187    16556                           checked to see if it is between 0 and 7.  If it is
     5188    16557                           it is assumed that this I/O completion is a
     5189    16558                           terminate interrupt and the TERMINATE flag is set.
     5190    16559                           If it isn't between 0 and 7, then is is assumed
     5191    16560                           that the I/O completion is a special interrupt
     5192    16561                           and the Event ID Base for special interrupts is
     5193    16562                           subracted from TOP$EVENT_ID to yield TCX, and
     5194    16563                           the internal flag TERMINATE is reset.
     5195    16564
     5196    16565                           Now terminate and special interrupts are handled
     5197    16566                           separately.  Terminates are handled first
     5198    16567                           (TERMINATE = 1).  Within the logic for terminate
     5199    16568                           interrupts, terminate interrupts for normal I/O
     5200    16569                           and ITR I/O are handled separately.  The field
     5201    16570                           ITR_INTERRUPT in TOP$TCP indicates whether
     5202    16571                           this terminate interrupt is for an ITR or not.
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:641  
     5203    16572                           If it isn't, status is returned and the Courtesy
     5204    16573                           Call paid.  If it is an ITR terminate interrupt,
     5205    16574                           the status is checked for "ready" status.  The
     5206    16575                           termination status is fetched from the DCB for the
     5207    16576                           page and stored in TERMINATE_STATUS.  A pointer
     5208    16577                           TERMINATE_STATUS$ is built to TERMINATE_STATUS and
     5209    16578                           Major and Minor status fields are checked for 0.
     5210    16579                           If they are the terminate interrupt occurred flag
     5211    16580                           TOP$TCP.TERMINATE_OCCURRED(TCX) is set and
     5212    16581                           nothing else is done at this time.  This flag is
     5213    16582                           used in TOP$MME_HUNGTM for timing out special
     5214    16583                           interrupts.
     5215    16584
     5216    16585                           If the terminate status for the ITR is not ready,
     5217    16586                           it is returned immediately to the subexec ; stauts
     5218    16587                           is returned and a Courtesy Call paid.
     5219    16588
     5220    16589                           The second half of the routine takes care of
     5221    16590                           special interrupts(which come only from ITR I/O).
     5222    16591                           If TOP$TCP.ITR_INTERRUPT(TCX) is set, indicating
     5223    16592                           that this is ITR I/O, the special status is returned
     5224    16593                           and the Courtesy Call is paid.  If the flag is
     5225    16594                           not set, the special is ignored.
     5226    16595        */
     5227    16596
     5228    16597    1   TOP$TIO_DONE: PROC ;

  16597  7 012677   200010 741300       TOP$TIO_DONE STX1  ! @RETURN_DELTA+2,,AUTO

     5229    16598
     5230    16599    2      DCL TCX SBIN WORD ALIGNED ;
     5231    16600    2      DCL TD_DCB$ PTR ;
     5232    16601    2      DCL TERMSTAT$ PTR ;
     5233    16602           %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:642  
     5234    16603        /* Code */
     5235    16604
     5236    16605    3      DO INHIBIT ;

     5237    16606    3         TCX = TOP$EVENT_ID - %TIO_EVENT_BASE ;

  16606  7 012700   000000 235200 5                  LDA   ! TOP$EVENT_ID
         7 012701   000144 135207                    SBLA  ! 100,DL
         7 012702   200011 755300                    STA   ! TCX,,AUTO

     5238    16607    3         IF 0 <= TCX & TCX < 8

  16607  7 012703   400000 220203                    LDX0  ! -131072,DU
         7 012704   000010 115207                    CMPA  ! 8,DL
         7 012705   012707 604200 7                  TMI   ! s:16607+4
         7 012706   000000 220203                    LDX0  ! 0,DU
         7 012707   400000 222203                    LDX2  ! -131072,DU
         7 012710   000000 115203                    CMPA  ! 0,DU
         7 012711   012713 605200 7                  TPL   ! s:16607+8
         7 012712   000000 222203                    LDX2  ! 0,DU
         7 012713   000000 636212                    EAQ   ! 0,X2
         7 012714   205740 756300                    STQ   ! BCD_BUF_INX+1,,AUTO
         7 012715   000000 636210                    EAQ   ! 0,X0
         7 012716   205740 376300                    ANQ   ! BCD_BUF_INX+1,,AUTO
         7 012717   012773 600200 7                  TZE   ! s:16625

     5239    16608    3         THEN IF TOP$TCP.IO.ITR_INTERRUPT(TCX)

  16608  7 012720   200011 236300                    LDQ   ! TCX,,AUTO
         7 012721   000244 402207                    MPY   ! 164,DL
         7 012722   000003 470600 xsym               LDP0  ! TOT$DMC+3
         7 012723   000012 234306                    SZN   ! 10,QL,PR0
         7 012724   012766 605200 7                  TPL   ! s:16621

     5240    16609    4            THEN DO ;

     5241    16610    4                    TD_DCB$ = DCBADDR (TOP$TCP.DCB#(TCX)) ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:643  

  16610  7 012725   000015 471600 8                  LDP1  ! 13
         7 012726   100000 473700                    LDP3  ! 0,,PR1
         7 012727   000007 720306                    LXL0  ! 7,QL,PR0
         7 012730   300000 236310                    LDQ   ! 0,X0,PR3
         7 012731   200012 756300                    STQ   ! TD_DCB$,,AUTO

     5242    16611    4                    TERMSTAT$ = ADDR (TD_DCB$ -> F$DCB.TDSTAT#) ;

  16611  7 012732   000027 036203                    ADLQ  ! 23,DU
         7 012733   200013 756300                    STQ   ! TERMSTAT$,,AUTO

     5243    16612    4                    IF TERMSTAT$ -> STATUS.MAJOR# = '0000'B &

  16612  7 012734   400000 220203                    LDX0  ! -131072,DU
         7 012735   200013 474700                    LDP4  ! TERMSTAT$,,AUTO
         7 012736   400000 236300                    LDQ   ! 0,,PR4
         7 012737   170000 316203                    CANQ  ! 61440,DU
         7 012740   012742 600200 7                  TZE   ! s:16612+6
         7 012741   000000 220203                    LDX0  ! 0,DU
         7 012742   400000 222203                    LDX2  ! -131072,DU
         7 012743   007700 316203                    CANQ  ! 4032,DU
         7 012744   012746 600200 7                  TZE   ! s:16612+10
         7 012745   000000 222203                    LDX2  ! 0,DU
         7 012746   000000 636212                    EAQ   ! 0,X2
         7 012747   205740 756300                    STQ   ! BCD_BUF_INX+1,,AUTO
         7 012750   000000 636210                    EAQ   ! 0,X0
         7 012751   205740 376300                    ANQ   ! BCD_BUF_INX+1,,AUTO
         7 012752   012761 600200 7                  TZE   ! s:16616

     5244    16613    4                            TERMSTAT$ -> STATUS.MINOR# = '000000'B
     5245    16614    4                    THEN TOP$TCP.IO.TERMINATED(TCX) = '1'B ;

  16614  7 012753   200011 236300                    LDQ   ! TCX,,AUTO
         7 012754   000244 402207                    MPY   ! 164,DL
         7 012755   000000 620206                    EAX0  ! 0,QL
         7 012756   200000 236203                    LDQ   ! 65536,DU
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:644  
         7 012757   000012 256310                    ORSQ  ! 10,X0,PR0
         7 012760   013006 710200 7                  TRA   ! s:16634

     5246    16615    5                    ELSE DO ;

     5247    16616    5                            CALL RETURN_TIO_STATUS ;

  16616  7 012761   013010 701200 7                  TSX1  ! RETURN_TIO_STATUS
         7 012762   000000 011200                    NOP   ! 0

     5248    16617    5                            CALL PAY_TIO_CC ;

  16617  7 012763   013117 701200 7                  TSX1  ! PAY_TIO_CC
         7 012764   000000 011200                    NOP   ! 0

     5249    16618    5                         END /* ELSE */ ;

     5250    16619    4                 END /* THEN */ ;

  16619  7 012765   013006 710200 7                  TRA   ! s:16634

     5251    16620    4            ELSE DO ;

     5252    16621    4                    CALL RETURN_TIO_STATUS ;

  16621  7 012766   013010 701200 7                  TSX1  ! RETURN_TIO_STATUS
         7 012767   000000 011200                    NOP   ! 0

     5253    16622    4                    CALL PAY_TIO_CC ;

  16622  7 012770   013117 701200 7                  TSX1  ! PAY_TIO_CC
         7 012771   000000 011200                    NOP   ! 0

     5254    16623    4                 END /* ELSE */ ;

  16623  7 012772   013006 710200 7                  TRA   ! s:16634

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:645  
     5255    16624    4         ELSE DO ;

     5256    16625    4                 TCX = TOP$EVENT_ID - %ITR_EVENT_BASE ;

  16625  7 012773   000000 236200 5                  LDQ   ! TOP$EVENT_ID
         7 012774   000024 136207                    SBLQ  ! 20,DL
         7 012775   200011 756300                    STQ   ! TCX,,AUTO

     5257    16626    4                 IF TOP$TCP.IO.ITR_INTERRUPT(TCX)

  16626  7 012776   000244 402207                    MPY   ! 164,DL
         7 012777   000003 470600 xsym               LDP0  ! TOT$DMC+3
         7 013000   000012 234306                    SZN   ! 10,QL,PR0
         7 013001   013006 605200 7                  TPL   ! s:16634

     5258    16627    5                 THEN DO ;

     5259    16628    5                         CALL RETURN_SPECIAL_STATUS ;

  16628  7 013002   013145 701200 7                  TSX1  ! RETURN_SPECIAL_STATUS
         7 013003   000000 011200                    NOP   ! 0

     5260    16629    5                         CALL PAY_TIO_CC ;

  16629  7 013004   013117 701200 7                  TSX1  ! PAY_TIO_CC
         7 013005   000000 011200                    NOP   ! 0

     5261    16630    5                      END /* THEN */ ;

     5262    16631    4                 ELSE /* ignore all other special interrupts */ ;
     5263    16632    4              END /* ELSE */ ;

     5264    16633    3      END /* INHIBIT */ ;

     5265    16634    2      RETURN ;

  16634  7 013006   200010 221300                    LDX1  ! @RETURN_DELTA+2,,AUTO
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:646  
         7 013007   000001 702211                    TSX2  ! 1,X1

     5266    16635
     5267    16636        /*END TOF$TIO_DONE*/
     5268    16637        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:647  
     5269    16638        /*I* NAME:         RETURN_TIO_STATUS
     5270    16639             CALL:         CALL RETURN_TIO_STATUS ;
     5271    16640             INTERFACE:
     5272    16641             INPUT:        Nothing explicitly
     5273    16642             OUTPUT:       Status is returned to the subexec
     5274    16643             DESCRIPTION:  Two words of status are returned to the status buffer
     5275    16644                           specified in the I/O Entry.  TD_DCB$ is a pointer
     5276    16645                           built to the DCB for the test page using the DCB
     5277    16646                           number in TOP$TCP.  The address of the status
     5278    16647                           buffer is stored in word 9 of the I/O entry.  If
     5279    16648                           is zero, no status is returned.  Otherwise, the
     5280    16649                           address is used to build POLTS_STATUS$ which
     5281    16650                           points to the location in the subexec where status
     5282    16651                           is to be returned.  The status is then moved from
     5283    16652                           the DCB to the subexec.  A check is made to see
     5284    16653                           if CP6 returned lost interrupt status, and if it
     5285    16654                           did, it is changed to GCOS lost interrupt status.
     5286    16655                           CP6 indicates lost interrupt status by returning
     5287    16656                           a Major status of '1000'B.  The GCOS lost
     5288    16657                           interrupt status is phonied up as shown in the code.
     5289    16658
     5290    16659                           Finally, a value of '200000'O is subtracted from
     5291    16660                           the address residue in the second word of the
     5292    16661                           status in order to make that address residue
     5293    16662                           relative to the base of the ISR.  It is returned
     5294    16663                           relative to the base of the Working Space, and the
     5295    16664                           ISR base is at '200000'O relative to the base of
     5296    16665                           the Working Space.
     5297    16666        */
     5298    16667        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:648  
     5299    16668    2   RETURN_TIO_STATUS: PROC ;

  16668  7 013010   200014 741300       RETURN_TIO_* STX1  ! @X2_REG,,AUTO

     5300    16669
     5301    16670    3      DCL POLTS_STATUS$ PTR ;
     5302    16671    3      DCL TD_DCB$ PTR ;
     5303    16672    3      DCL EXT_STATUS$ PTR ALIGNED;
     5304    16673    3      DCL EXT_STATUS (0:7) UBIN WORD BASED;
     5305    16674
     5306    16675        /* Code */
     5307    16676
     5308    16677    3      IF IO_ENTRY.W9.STATUS_ADR#(TCX) = 0

  16677  7 013011   200011 236100                    LDQ     TCX,,AUTO
         7 013012   000013 402007                    MPY     11,DL
         7 013013   000014 220006 5                  LDX0    IO_ENTRY+9,QL
         7 013014   013115 600000 7                  TZE     s:16706

     5309    16678    3      THEN /* zero --- don't return STATUS */ ;
     5310    16679    4      ELSE DO ;

     5311    16680    4              TD_DCB$ = DCBADDR (TOP$TCP.DCB#(TCX)) ;

  16680  7 013015   000015 470400 8                  LDP0    13
         7 013016   000000 471500                    LDP1    0,,PR0
         7 013017   200011 236100                    LDQ     TCX,,AUTO
         7 013020   000244 402007                    MPY     164,DL
         7 013021   000003 473400 xsym               LDP3    TOT$DMC+3
         7 013022   300007 720106                    LXL0    7,QL,PR3
         7 013023   100000 236110                    LDQ     0,X0,PR1
         7 013024   200016 756100                    STQ     TD_DCB$,,AUTO

     5312    16681    4              POLTS_STATUS$ = PINCRW (IS$, IO_ENTRY.W9.STATUS_ADR#(TCX)) ;

  16681  7 013025   200011 236100                    LDQ     TCX,,AUTO
         7 013026   000013 402007                    MPY     11,DL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:649  
         7 013027   000014 220006 5                  LDX0    IO_ENTRY+9,QL
         7 013030   000000 636010                    EAQ     0,X0
         7 013031   000000 036000 6                  ADLQ    FPTN_
         7 013032   200015 756100                    STQ     POLTS_STATUS$,,AUTO

     5313    16682    4              POLTS_STATUS$ -> STATUS = TD_DCB$ -> F$DCB.TDSTAT# ;

  16682  7 013033   200016 474500                    LDP4    TD_DCB$,,AUTO
         7 013034   200015 475500                    LDP5    POLTS_STATUS$,,AUTO
         7 013035   000100 100500                    MLR     fill='000'O
         7 013036   400027 000010                    ADSC9   23,,PR4                  cn=0,n=8
         7 013037   500000 000010                    ADSC9   0,,PR5                   cn=0,n=8

     5314    16683    4              IF POLTS_STATUS$ -> STATUS.MAJOR# = '1000'B

  16683  7 013040   500000 236100                    LDQ     0,,PR5
         7 013041   170000 376003                    ANQ     61440,DU
         7 013042   100000 116003                    CMPQ    32768,DU
         7 013043   013057 601000 7                  TNZ     s:16690

     5315    16684    5              THEN DO ;

     5316    16685    5                      POLTS_STATUS$ -> STATUS.MAJOR# = '1001'B ;

  16685  7 013044   500000 236100                    LDQ     0,,PR5
         7 013045   000022 376000 8                  ANQ     18
         7 013046   110000 276003                    ORQ     36864,DU
         7 013047   500000 756100                    STQ     0,,PR5

     5317    16686    5                      POLTS_STATUS$ -> STATUS.TERMINATION_INDICATOR# = '1'B ;

  16686  7 013050   400000 236003                    LDQ     -131072,DU
         7 013051   500000 256100                    ORSQ    0,,PR5

     5318    16687    5                      POLTS_STATUS$ -> STATUS.LOST_INTERRUPT# = '1'B ;

  16687  7 013052   000004 236003                    LDQ     4,DU
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:650  
         7 013053   500000 256100                    ORSQ    0,,PR5

     5319    16688    5                      POLTS_STATUS$ -> STATUS.INTERRUPT_INDICATOR# = '1'B ;

  16688  7 013054   000002 236003                    LDQ     2,DU
         7 013055   500000 256100                    ORSQ    0,,PR5

     5320    16689    5                   END ;

  16689  7 013056   013061 710000 7                  TRA     s:16691

     5321    16690    4              ELSE POLTS_STATUS$ -> STATUS.LOST_INTERRUPT# = '0'B ;

  16690  7 013057   000102 236000 8                  LDQ     66
         7 013060   500000 356100                    ANSQ    0,,PR5

     5322    16691    4              POLTS_STATUS$ -> STATUS.ABORT_INDICATOR# = '0'B ;

  16691  7 013061   000103 236000 8                  LDQ     67
         7 013062   500000 356100                    ANSQ    0,,PR5

     5323    16692    4              IF (TOT$ECP.BOOT_CPU_TYPE = %DPS8000#)

  16692  7 013063   000015 236000 xsym               LDQ     TOT$ECP+13
         7 013064   777000 376007                    ANQ     -512,DL
         7 013065   006000 116007                    CMPQ    3072,DL
         7 013066   013072 600000 7                  TZE     s:16697

     5324    16693    4              THEN /* DO NOTHING */;
     5325    16694    4              ELSE /* SUBTRACT 200000 OCTAL */
     5326    16695    4                 POLTS_STATUS$ -> STATUS.DATA_ADDRESS_RESIDUE# =

  16695  7 013067   500001 220100                    LDX0    1,,PR5
         7 013070   600000 621010                    EAX1    -65536,X0
         7 013071   500001 741100                    STX1    1,,PR5

     5327    16696    4                        POLTS_STATUS$->STATUS.DATA_ADDRESS_RESIDUE# - BITBIN('200000'O
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:651  
             16696                                  ) ;
     5328    16697    4              IF IO_ENTRY.W1.EXTSTAT_ADR#(TCX) = 0

  16697  7 013072   200011 236100                    LDQ     TCX,,AUTO
         7 013073   000013 402007                    MPY     11,DL
         7 013074   000004 220006 5                  LDX0    IO_ENTRY+1,QL
         7 013075   013115 600000 7                  TZE     s:16706

     5329    16698    4              THEN /* do not return extended status */;
     5330    16699    5              ELSE DO;

     5331    16700    5                      EXT_STATUS$ = PINCRW (IS$, IO_ENTRY.W1.EXTSTAT_ADR#(TCX));

  16700  7 013076   000000 636010                    EAQ     0,X0
         7 013077   000000 036000 6                  ADLQ    FPTN_
         7 013100   200017 756100                    STQ     EXT_STATUS$,,AUTO

     5332    16701    5                      IF TD_DCB$->F$DCB.TDEXTST$->EXT_STATUS (0) = 0

  16701  7 013101   400007 473500                    LDP3    7,,PR4
         7 013102   300000 235100                    LDA     0,,PR3
         7 013103   013111 601000 7                  TNZ     s:16703

     5333    16702    5                     THEN EXT_STATUS$->EXT_STATUS = '0'B /* OS hasn't given us any */;

  16702  7 013104   200017 476500                    LDP6    EXT_STATUS$,,AUTO
         7 013105   000100 100400                    MLR     fill='000'O
         7 013106   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         7 013107   600000 000040                    ADSC9   0,,PR6                   cn=0,n=32
         7 013110   013115 710000 7                  TRA     s:16706

     5334    16703    5                      ELSE EXT_STATUS$->EXT_STATUS = TD_DCB$->F$DCB.TDEXTST$->
             16703                               EXT_STATUS;

  16703  7 013111   200017 476500                    LDP6    EXT_STATUS$,,AUTO
         7 013112   000100 100500                    MLR     fill='000'O
         7 013113   300000 000040                    ADSC9   0,,PR3                   cn=0,n=32
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:652  
         7 013114   600000 000040                    ADSC9   0,,PR6                   cn=0,n=32

     5335    16704    5                   END /* ELSE */;

     5336    16705    4           END ;

     5337    16706    3      RETURN ;

  16706  7 013115   200014 221300                    LDX1  ! @X2_REG,,AUTO
         7 013116   000001 702211                    TSX2  ! 1,X1

     5338    16707
     5339    16708    3   END RETURN_TIO_STATUS ;
     5340    16709        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:653  
     5341    16710        /*I* NAME:         PAY_TIO_CC
     5342    16711             CALL:         CALL PAY_TIO_CC ;
     5343    16712             INTERFACE:    TOK$COURTESY_CALL
     5344    16713             INPUT:        None explicitly
     5345    16714             OUTPUT:       Courtesy Call paid to subexec to address stored
     5346    16715                           in I/O entry.
     5347    16716             DESCRIPTION:  The Courtesy Call address is stored in word 9 of
     5348    16717                           ther I/O entry which was saved in IO_ENTRY..  If
     5349    16718                           it is zero, no Courtesy Call is paid.  If it is
     5350    16719                           non zero, an entry pointer, CC$, is built pointing
     5351    16720                           to the Courtesy Call routine.  TOK$COURTESY_CALL
     5352    16721                           is called which will actually transfer into the
     5353    16722                           Courtesy Call and set things up so that the MME
     5354    16723                           GEENDC will return control here when the subexec
     5355    16724                           is done with the Courtesy Call processing.
     5356    16725        */
     5357    16726
     5358    16727    2   PAY_TIO_CC: PROC ;

  16727  7 013117   200014 741300       PAY_TIO_CC   STX1  ! @X2_REG,,AUTO

     5359    16728
     5360    16729    3      DCL CC$ PTR ;
     5361    16730
     5362    16731        /* Code */
     5363    16732
     5364    16733    3      TOP$TCP.IO.CC_PAID(TCX) = '1'B ;

  16733  7 013120   200011 236100                    LDQ     TCX,,AUTO
         7 013121   000244 402007                    MPY     164,DL
         7 013122   000003 470400 xsym               LDP0    TOT$DMC+3
         7 013123   000000 620006                    EAX0    0,QL
         7 013124   010000 236003                    LDQ     4096,DU
         7 013125   000012 256110                    ORSQ    10,X0,PR0

     5365    16734    3      IF IO_ENTRY.W9.CC_ADR#(TCX) = 0

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:654  
  16734  7 013126   200011 236100                    LDQ     TCX,,AUTO
         7 013127   000013 402007                    MPY     11,DL
         7 013130   000014 721006 5                  LXL1    IO_ENTRY+9,QL
         7 013131   013143 600000 7                  TZE     s:16740

     5366    16735    3      THEN /* No courtesy call needed */ ;
     5367    16736    4      ELSE DO ;

     5368    16737    4              CC$ = PINCRW (IS$, IO_ENTRY.W9.CC_ADR#(TCX)) ;

  16737  7 013132   000000 636011                    EAQ     0,X1
         7 013133   000000 036000 6                  ADLQ    FPTN_
         7 013134   200015 756100                    STQ     CC$,,AUTO

     5369    16738    4              CALL TOK$COURTESY_CALL (CC$) ;

  16738  7 013135   200015 630500                    EPPR0   CC$,,AUTO
         7 013136   205740 450500                    STP0    BCD_BUF_INX+1,,AUTO
         7 013137   205740 630500                    EPPR0   BCD_BUF_INX+1,,AUTO
         7 013140   000017 631400 xsym               EPPR1   B_VECTNIL+15
         7 013141   000000 701000 xent               TSX1    TOK$COURTESY_CALL
         7 013142   000000 011000                    NOP     0

     5370    16739    4           END ;

     5371    16740    3      RETURN ;

  16740  7 013143   200014 221300                    LDX1  ! @X2_REG,,AUTO
         7 013144   000001 702211                    TSX2  ! 1,X1

     5372    16741
     5373    16742    3   END PAY_TIO_CC ;
     5374    16743        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:655  
     5375    16744        /*I* NAME:         RETURN_SPECIAL_STATUS
     5376    16745             CALL:         CALL RETURN_SPECIAL_STATUS ;
     5377    16746             INTERFACE:
     5378    16747             INPUT:        None explicitly
     5379    16748             OUTPUT:       Status returned to the subexec
     5380    16749             DESCRIPTION:  The special status from ITR I/O is returned to
     5381    16750                           the subexec if the status buffer address stored
     5382    16751                           in word 9 of the I/O entry stored in IO_ENTRY.
     5383    16752                           If this address is zero, no status is returned.
     5384    16753                           Otherwise, the pointer POLTS_STATUS$ is built
     5385    16754                           pointing to the status buffer in the subexec
     5386    16755                           and the 2 words of special status stored in
     5387    16756                           TOP$STATUS are returned.  These 2 words were
     5388    16757                           fetched from the TCB Event frame by the Event
     5389    16758                           Handler and passed on to the Dispatcher.
     5390    16759
     5391    16760                           Note:  The portion of the CP-6 monitor that
     5392    16761                           returns the Special Interrupts to the user event
     5393    16762                           routine must remove the "Sync" or "Presence" bit
     5394    16763                           ('400000000000'O) from the special interrupt
     5395    16764                           status.  If this is not done, the special interrupt
     5396    16765                           status will look like a termination interrupt
     5397    16766                           status.  As of E02C, this coding was present for
     5398    16767                           IOM, IOP, and IMX based platforms.
     5399    16768        */
     5400    16769        %EJECT ;
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:656  
     5401    16770    2   RETURN_SPECIAL_STATUS: PROC ;

  16770  7 013145   200014 741300       RETURN_SPEC* STX1  ! @X2_REG,,AUTO

     5402    16771
     5403    16772    3      DCL POLTS_STATUS$              PTR ;
     5404    16773
     5405    16774        /* Code */
     5406    16775
     5407    16776    3      IF IO_ENTRY.W9.STATUS_ADR#(TCX) = 0

  16776  7 013146   200011 236100                    LDQ     TCX,,AUTO
         7 013147   000013 402007                    MPY     11,DL
         7 013150   000014 220006 5                  LDX0    IO_ENTRY+9,QL
         7 013151   013161 600000 7                  TZE     s:16782

     5408    16777    3      THEN /* No need to return status. */ ;
     5409    16778    4      ELSE DO ;

     5410    16779    4              POLTS_STATUS$ = PINCRW (IS$, IO_ENTRY.W9.STATUS_ADR#(TCX)) ;

  16779  7 013152   000000 636010                    EAQ     0,X0
         7 013153   000000 036000 6                  ADLQ    FPTN_
         7 013154   200015 756100                    STQ     POLTS_STATUS$,,AUTO

     5411    16780    4              POLTS_STATUS$ -> STATUS = TOP$STATUS ;

  16780  7 013155   200015 470500                    LDP0    POLTS_STATUS$,,AUTO
         7 013156   000100 100400                    MLR     fill='000'O
         7 013157   000001 000010 5                  ADSC9   TOP$STATUS               cn=0,n=8
         7 013160   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8

     5412    16781    4           END /* ELSE */ ;

     5413    16782    3      RETURN ;

  16782  7 013161   200014 221300                    LDX1  ! @X2_REG,,AUTO
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:657  
         7 013162   000001 702211                    TSX2  ! 1,X1

TOP$EVENT_ID
 Sect OctLoc
   5     000   000000 000000                                                    ....

TOP$STATUS
 Sect OctLoc
   5     001   000000 000000   000000 000000                                    ........

IO_ENTRY
 Sect OctLoc
   5     003   ****** ******   ****** ******   ****** ******   ****** ******    ................

MPC
 Sect OctLoc
   5     133   000000 000000   000000 000000   000000 000000   000000 000000    ................
   5     167*  000000 000000   000000 000000   000000 000000   000000 000000    ................

TOP_ERROR_CODE
 Sect OctLoc
   5     173   241720 000000                                                    ....

TDCLOSE_FPT
 Sect OctLoc
   5     174   000001 777640   000176 006000   000000 ******   ****** ******    .....~..........

TDIO_FPT
 Sect OctLoc
   5     200   000003 777640   000206 006000   000000 177640   000000 006014    ................
   5     204   000000 177640   000000 006014   000000 400000   000000 700000    ................
   5     210   000000 000000   000000 000000                                    ........

TDOPEN_FPT
 Sect OctLoc
   5     212   000003 777640   000222 006000   000000 177640   000000 006014    ................
   5     216   000000 177640   000000 006014   000000 177640   000000 006014    ................
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:658  
   5     222   000000 000000   000000 000000   000000 000000   000000 000000    ................

DCB_NAME
 Sect OctLoc
   5     226   012120 117114   124123 137104   103102 ******                    .POLTS_DCB..

GET_POLTS_DCB
 Sect OctLoc
   5     232   000001 777640   000240 006000   000002 577640   000226 006000    ................
   5     236   000000 777640   000231 006000   000000 000000   000000 000000    ................

DATA_VECTOR
 Sect OctLoc
   5     242   0***** *7764*   000000 006000                                    ........

DENSITY_DCWLIST
 Sect OctLoc
   5     244   570000 700001   ****** 000010                                    ........

DEVICE_INFO
 Sect OctLoc
   5     246   ****** ******   ****** ******   ****** ******   ****** ******    ................

DELAY_FPT
 Sect OctLoc
   5     256   000001 777640   000262 006000   000000 177640   000000 006014    ................
   5     262   000000 000017   000000 000001                                    ........

CHANNEL_MSG
 Sect OctLoc
   5     264   102141 163145   040143 150141   156156 145154   072040 060060    Base channel: 00
   5     270   060040 116165   155142 145162   040157 146040   143150 141156    0 Number of chan
   5     274   156145 154163   072040 060060   060*** ******                    nels: 000...

OPEN_CONFIG
 Sect OctLoc
   5     300   000025 777640   000344 006000   000000 177640   000000 006014    ................
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:659  
   5     304   000000 177640   000000 006014   000002 777640   000446 006000    ................
   5     310   000000 177640   000000 006014   000000 177640   000000 006014    ................
   5     324*  000001 777640   000451 006000   000000 177640   000000 006014    ................
   5     330   000000 177640   000000 006014   000000 177640   000000 006014    ................
   5     344*  000000 000062   000000 002001   252525 002002   000040 252520    ...2......... ..
   5     350   000040 040040   000000 000002   000000 777777   000000 000000    .   ............
   5     354   000000 000000   000000 000000   000000 000000   000000 000000    ................
   5     360   251000 622000   000000 000000   000000 000000   111250 000000    ............I...
   5     364   040040 040040   000000 000000   000000 000000   000000 000000        ............
   5     370   000000 000000   ****** ******                                    ........

READ_CONFIG
 Sect OctLoc
   5     372   000005 777640   000402 006000   000000 177640   000000 006014    ................
   5     376   000000 177640   000000 006014   000000 177640   000000 006014    ................
   5     402   000000 600000   000000 000000   000000 000000   000000 000000    ................
   5     406   000000 000000   000000 000000                                    ........

CLOSE_CONFIG
 Sect OctLoc
   5     410   000003 777640   000442 006000   000000 177640   000000 006014    ................
   5     414   000000 177640   000000 006014   000000 177640   000000 006014    ................
   5     440*  000000 177640   000000 006014   000000 000002   000000 000040    ...............
   5     444   000220 000000   000000 000000                                    ........

FILE_NAME
 Sect OctLoc
   5     446   007072 103117   116106 111107   040040 040040                    .:CONFIG

ACCOUNT_NAME
 Sect OctLoc
   5     451   072123 131123   040040 040040                                    :SYS

DEVICE_KEY
 Sect OctLoc
   5     454   010040 040040   040040 040040   040*** ******                    .        ...

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:660  
MPC_KEY
 Sect OctLoc
   5     457   010*** ******   ****** ******   ****** ******                    ............

DCWLIST_BFR
 Sect OctLoc
   5     464   ****** ******   ****** ******   ****** ******   ****** ******    ................

DATA_VECTOR
 Sect OctLoc
   5   24724   ****** *7764*   000000 006000                                    ........

TIME_FPT
 Sect OctLoc
   5   24730   000001 777640   024742 006000   000000 177640   000000 006014    ................
   5   24734   000000 177640   000000 006014   000000 177640   000000 006014    ................
   5   24740   000000 777640   024726 006000   000005 000000   ****** ******    ................

DUMP_LINE
 Sect OctLoc
   5   24744   056*** ******   ****** ***040   056*** ******   ****** ***040    ....... .......
   5   24750   ****** ******   040040 040040   040040 040040   040040 040040    ....
   5   24754   040040 040040   040040 040040   040040 040040   040040 040040
   5   25000*  040040 040040   040040 040040   040040 040040   040*** ******                 ...

READ_BUF
 Sect OctLoc
   5   25005   040040 040040   040040 040040   040040 040040   040040 040040
   5   25025*  040040 040040   040040 040040   040040 040040   040040 040040

DUMP_
 Sect OctLoc
   5   25031   ****** 006000                                                    ....

CLOSE_DUMP
 Sect OctLoc
   5   25032   000003 777640   025064 006000   000000 177640   000000 006014    .....4..........
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:661  
   5   25036   000000 177640   000000 006014   000000 177640   000000 006014    ................
   5   25062*  000000 177640   000000 006014   000000 000002   000000 000040    ...............
   5   25066   000220 000000   000000 000000                                    ........

OPEN_LP
 Sect OctLoc
   5   25070   000025 777640   025134 006000   000000 177640   000000 006014    .....\..........
   5   25074   000000 177640   000000 006014   000000 177640   000000 006014    ................
   5   25134*  000000 000042   000000 000003   252525 004000   000040 252520    ..."......... ..
   5   25140   114120 040040   000000 000000   000000 777777   000000 000000    LP  ............
   5   25144   000000 000000   000000 000000   000000 000000   000000 000000    ................
   5   25150   251000 622000   000000 000000   000000 000000   111250 000000    ............I...
   5   25154   040040 040040   000000 000000   000000 000000   000000 000000        ............
   5   25160   000000 000000   ****** ******                                    ........

OPEN_DUMP_FILE
 Sect OctLoc
   5   25162   000025 777640   025226 006000   000000 177640   000000 006014    ................
   5   25166   000000 177640   000000 006014   000007 777640   025330 006000    ................
   5   25172   000000 177640   000000 006014   000000 177640   000000 006014    ................
   5   25206*  000001 777640   025340 006000   000000 177640   000000 006014    ................
   5   25212   000000 177640   000000 006014   000000 177640   000000 006014    ................
   5   25226*  000000 000272   000000 003001   252525 001000   000040 252520    ............. ..
   5   25232   000040 040040   000000 000002   000000 777777   000000 000000    .   ............
   5   25236   000000 000000   000000 000000   000000 000000   000000 000000    ................
   5   25242   251000 622000   000000 000000   000000 000000   111250 000000    ............I...
   5   25246   040040 040040   000000 000000   000000 000000   000000 000000        ............
   5   25252   000000 000000   ****** ******                                    ........

DUMP_PROMPT
 Sect OctLoc
   5   25254   000003 777640   025262 006000   000000 177640   000000 006014    ................
   5   25260   000004 577640   000072 006000   000000 000000   000000 000000    .....:..........
   5   25264   000000 000000   000000 000000                                    ........

LP_OR_FID
 Sect OctLoc
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:662  
   5   25266   000003 777640   025274 006000   000000 177640   000000 006014    ................
   5   25272   000004 777640   000077 006000   000000 000000   000000 000000    .....?..........
   5   25276   000000 000000   000000 000000                                    ........

WRITE_HDR_LINE
 Sect OctLoc
   5   25300   000003 777640   025310 006000   000000 177640   000000 006014    ................
   5   25304   000000 177640   000000 006014   000000 177640   000000 006014    ................
   5   25310   000000 400400   000000 000000   000000 000000   000000 000000    ................

WRITE_DUMP
 Sect OctLoc
   5   25314   000003 777640   025324 006000   000000 177640   000000 006014    ................
   5   25320   000000 177640   000000 006014   000000 177640   000000 006014    ................
   5   25324   000000 400400   000000 000000   000000 000000   000000 000000    ................

DUMP_NAME
 Sect OctLoc
   5   25330   037040 040040   040040 040040   040040 040040   040040 040040    .
   5   25334   040040 040040   040040 040040   040040 040040   040040 040040

DUMP_ACCT
 Sect OctLoc
   5   25340   040040 040040   040040 040040

MESSAGE
 Sect OctLoc
   5   25342   040040 040040   040040 123165   142145 170145   143165 164151          Subexecuti
   5   25346   166145 040167   162141 160160   151156 147040   165160 056***    ve wrapping up..

FPTN_
 Sect OctLoc
   6     000   000000 006000                                                    ....

DEVICE_INFO$
 Sect OctLoc
   6     001   000246 006000                                                    ....
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:663  

YES_RETURN_MSG_1
 Sect OctLoc
   6     002   124117 114124   123040 162145   143157 155155   145156 144163    TOLTS recommends
   6     006   040164 150141   164040 164150   145040 146157   154154 157167     that the follow
   6     012   151156 147040   143150 141156   156145 154163   040163 150141    ing channels sha
   6     016   154154 040142   145*** ******                                    ll be...

YES_RETURN_MSG_2
 Sect OctLoc
   6     020   162145 164165   162156 145144   040142 141143   153040 164157    returned back to
   6     024   040164 150145   040163 171163   164145 155040   166151 141040     the system via
   6     030   123131 123103   117116 ******                                    SYSCON..

NO_RETURN_MSG
 Sect OctLoc
   6     032   105162 162157   162163 040144   145164 145143   164145 144040    Errors detected
   6     036   157156 040143   150141 156156   145154 163040   141156 144040    on channels and
   6     042   164150 165163   040163 150157   165154 144040   156157 164040    thus should not
   6     046   142145 040162   145164 165162   156145 144***                    be returned.

HEAD_KEY
 Sect OctLoc
   6     051   001000 ******                                                    ....

IOM_KEY
 Sect OctLoc
   6     052   004111 117115   060*** ******   004111 117115   061*** ******    .IOM0....IOM1...
   6     056   004111 117115   062*** ******   004111 117115   063*** ******    .IOM2....IOM3...

IMU_KEY
 Sect OctLoc
   6     062   004111 115125   060*** ******   004111 115125   061*** ******    .IMU0....IMU1...
   6     066   004111 115125   062*** ******   004111 115125   063*** ******    .IMU2....IMU3...

DUMP_QUES
 Sect OctLoc
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:664  
   6     072   104157 040171   157165 040167   141156 164040   141040 144165    Do you want a du
   6     076   155160 072***                                                    mp:.

FID_QUES
 Sect OctLoc
   6     077   105156 164145   162040 047114   120047 040157   162040 074146    Enter 'LP' or <f
   6     103   151144 076072                                                    id>:

YES_RESP
 Sect OctLoc
   6     104   131105 123***                                                    YES.

NO_RESP
 Sect OctLoc
   6     105   116117 040***                                                    NO .

CRLF_
 Sect OctLoc
   6     106   015012 ******                                                    ....

(unnamed)
 Sect OctLoc
   6     107   115124 107040   120114 124040   124115 104040   115124 122040    MTG PLT TMD MTR
   6     113   115104 122040   115106 103040   115124 103040   115104 123040    MDR MFC MTC MDS
   6     117   111124 122040   115104 103040   000000 700000   115124 125070    ITR MDC ....MTU8
   6     123   062060 060040   116117 116105   000000 770000   141154 154040    200 NONE....all
   6     127   124103 040040   125103 040040   104103 040040   123103 040040    TC  UC  DC  SC
   6     133   115124 125060   066063 060040   120103 125060   061062 060040    MTU0630 PCU0120
   6     137   120122 125061   062060 060040   120122 125061   062060 063040    PRU1200 PRU1203
   6     143   120122 125061   066060 060040   120122 125061   062060 061040    PRU1600 PRU1201
   6     147   120122 125060   071060 061040   120122 125060   071060 063040    PRU0901 PRU0903
   6     153   120103 125060   061062 061040   115124 125070   062060 065040    PCU0121 MTU8205
   6     157   115124 125070   062060 066040   115124 125070   062060 070040    MTU8206 MTU8208
   6     163   115123 125063   063070 060040   115123 125063   063071 062040    MSU3380 MSU3392
   6     167   115124 125060   066060 060040   115124 125060   066061 060040    MTU0600 MTU0610
   6     173   115123 125070   060070 062040   115123 125070   060071 062040    MSU8082 MSU8092
   6     177   115123 125063   063071 063040   115123 125063   063070 063040    MSU3393 MSU3383
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:665  
   6     203   115123 125063   063071 061040   115123 125063   063071 060040    MSU3391 MSU3390
   6     207   115123 125063   063070 062040   115123 125063   063070 061040    MSU3382 MSU3381
   6     213   103122 125061   060065 060040   115123 125060   065060 061040    CRU1050 MSU0501
   6     217   115123 125060   064065 061040   103122 125060   065060 061040    MSU0451 CRU0501
   6     223   103117 116123   117114 105040   115066 060061   124120 125122    CONSOLE M601TPUR
   6     227   125103 115116   125122 124120   115123 120070   115066 061060    UCMNURTPMSP8M610
   6     233   115061 071061   115065 060060   111103 122104   111120 122065    M191M500ICRDIPR5
   6     237   104065 060060   116111 117040   122120 115040   103117 114124    D500NIO RPM COLT
   6     243   123040 040040   115117 114124   123040 040040   120117 114124    S   MOLTS   POLT
   6     247   123040 040040   123117 114124   123040 040040   123117 114124    S   SOLTS   SOLT
   6     253   101040 040040   120101 103124   040040 040040   114120 040040    A   PACT    LP
   6     257   115124 120070   062061 066040   125122 120070   060061 062040    MTP8216 URP8012
   6     263   125122 120070   066060 060040   125122 120070   066060 062040    URP8600 URP8602
   6     267   125122 120105   125122 120040   125122 120070   066060 061040    URPEURP URP8601
   6     273   125122 120070   060061 063040   115124 120070   062062 065040    URP8013 MTP8225
   6     277   115124 120070   062062 070040   125122 120070   060061 061040    MTP8228 URP8011
   6     303   115124 120070   062062 066040   115124 120070   062061 070040    MTP8226 MTP8218
   6     307   115123 120063   071071 063040   115123 123070   060070 060040    MSP3993 MSS8080
   6     313   115124 120070   062061 065040   115123 123070   060071 060040    MTP8215 MSS8090
   6     317   115123 120070   060062 061040   115123 120070   060062 062040    MSP8021 MSP8022
   6     323   115123 120063   071071 064040   115123 120063   070070 065040    MSP3994 MSP3885
   6     327   115123 120063   071071 061040   115123 120063   071071 062040    MSP3991 MSP3992
   6     333   115123 120063   070070 066040   115123 120063   070070 061040    MSP3886 MSP3881
   6     337   115123 120063   070070 062040                                    MSP3882

(unnamed)
 Sect OctLoc
   8     000   000001 400000   000002 400000   000003 400000   000007 700000    ................
   8     004   077777 777777   037777 700000   777777 400007   000173 006000    ?............{..
   8     010   777777 777000   000107 777640   777777 777770   007777 770000    .....G..........
   8     014   000001 000001   000000 006003   000001 777640   000244 006000    ................
   8     020   777767 777777   000004 006000   607777 777777   777777 377777    ................
   8     024   000000 177640   000000 006014   000016 577640   000032 006000    ................
   8     030   000015 177640   000002 006000   000011 377640   000020 006000    ................
   8     034   000012 177640   000264 006000   001777 776000   000000 000027    ................
   8     040   000024 600000   000024 400000   000000 777640   000051 006000    .............)..
   8     044   003720 777640   000052 006000   000062 006000   000001 777776    .....*...2......
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:666  
   8     050   000002 177640   000454 006000   000002 177640   000457 006000    ................
   8     054   777777 777377   777007 777777   737777 777777   757777 777777    ................
   8     060   767777 777777   002423 777640   000464 006000   577777 777777    ................
   8     064   000007 577640   025342 006000   000023 777640   025005 006000    ................
   8     070   131040 040040   056040 040040   777777 776000   777777 037777    Y   .   ........
   8     074   000037 177640   024744 006000   000022 177640   024744 006000    ................
   8     100   777777 741777   677777 777777   777773 777777   777776 777777    ................
     5414    16783
     5415    16784    3   END RETURN_SPECIAL_STATUS ;
     5416    16785    2   END TOP$TIO_DONE ;
     5417    16786    1   END TOP$POLTS ;

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:667  
--  Include file information  --

   TD$STRUCT.:E05TOU  is referenced.
   TO_PERR_C.:E05TOU  is referenced.
   TOT_TOLTS_M.:E05TOU  is referenced.
   TOT_RQSTS_E.:E05TOU  is referenced.
   NI_DATA_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure TOP$POLTS.
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:668  

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0    56- 16786   1458   207     7      0  y   y    4   1 TOP$POLTS
                                  7    720      y    4     TOP$POLTS_IO
  1 10682- 10759     35    14     7    725  y   y    4     2 TOP$MME_ALCMCA
  2 10726- 10740     10     2     7   1010  y y y    1      3 DEDICATE_CHANNEL_3
  3 10750- 10758      6     0     7   1056  y y y    0      3 UNDEDICATE_CHANNEL_3
  4 10838- 11600    215    31     7   1073  y   y    9     2 TOP$MME_ALLOCR
  5 10921- 10953     24     2     7   1215  y   y    1      3 MATCH_ICCDD
  6 10970- 11027     10     9     7   1333  y   y    1      3 GET_TEST_DCB
  7 11065- 11102     29     2     7   1372  y   y    1      3 SET_TDOPEN_FPT
  8 11117- 11141     12     0     7   1646  y y y    0      3 ALLOCATE_DEVICE
  9 11157- 11177      9     5     7   1726  y   y    1      3 SET_MTAR_PERMISSION
 10 11209- 11563     97    13     7   1762  y y y    1      3 BUILD_DEVICE_SCT
 11 11273- 11283      6     0     7   2133  y   y    0       4 BUILD_CHN_3_SCT
 12 11293- 11302      5     0     7   2156  y   y    0       4 BUILD_DISK_SCT
 13 11316- 11477     39     0     7   2201  y y y    0       4 BUILD_TAPE_SCT
 14 11398- 11476     28    13     7   2253  y y y    0        5 GET_DENSITIES
 15 11493- 11505      8     0     7   2433  y   y    0       4 BUILD_PRINTER_SCT
 16 11515- 11524      5     0     7   2502  y   y    0       4 BUILD_CREADER_SCT
 17 11534- 11543      5     0     7   2525  y   y    0       4 BUILD_CPUNCH_SCT
 18 11553- 11562      5     0     7   2550  y   y    0       4 BUILD_CONSOLE_SCT
 19 11572- 11599     10     7     7   2565  y   y    1      3 BUILD_CONTROLLER_SCT
 20 11624- 11639      5     9     7   2623  y   y    4     2 TOP$MME_ASGPAT
 21 11660- 11702     15     7     7   2650  y   y    3     2 TOP$MME_CHANTM
 22 11684- 11701     10     4     7   2701  y   y    2      3 MATCH_PAT_PTR
 23 11712- 11722      3     4     7   2745  y   y    2     2 TOP$MME_DEALCP
 24 11739- 11755      6     9     7   2754  y   y    4     2 TOP$MME_EXPDEV
 25 11776- 11795      6    10     7   3003  y   y    3     2 TOP$MME_GETCSC
 26 11806- 11820      3    12     7   3030  y   y    6     2 TOP$MME_GETLIN
 27 11899- 12031     44    10     7   3036  y   y    4     2 TOP$MME_HUNGTM
 28 11937- 11954     10     4     7   3124  y   y    2      3 MATCH_IO_ENTRY
 29 11978- 11997     11     3     7   3170  y   y    1      3 RETURN_STATUS
 30 12015- 12030      7     3     7   3220  y   y    1      3 GIVE_COURTESY_CALL
 31 12048- 12064      6     8     7   3241  y   y    3     2 TOP$MME_IOCONS
 32 12124- 12188     26    18     7   3272  y   y    2     2 TOP$MME_IPCWDT
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:669  
 33 12201- 12211      3     4     7   3363  y   y    2     2 TOP$MME_LODIMG
 34 12224- 12235      3     6     7   3372  y   y    3     2 TOP$MME_LODVFC
 35 12252- 12291     16    20     7   3401  y   y    3     2 TOP$MME_LPWDT
 36 12332- 12578     67    16     7   3454  y   y    5     2 TOP$MME_PACMAN
 37 12413- 12445     13    11     7   3575  y y y    3      3 SUSPEND_CHANNELS
 38 12467- 12521     23    16     7   3644  y   y    1      3 REPORT_CHANNELS
 39 12549- 12577      9     7     7   3736  y y y    3      3 RELEASE_CHANNELS
 40 12614- 12691     38    23     7   3772  y   y    2     2 TOP$MME_POINIT
 41 12709- 12730      6    13     7   4150  y   y    4     2 TOP$MME_PRTRAN
 42 12755- 12829     27    21     7   4200  y   y    9     2 TOP$MME_RELEAS
 43 12810- 12828     11     2     7   4346  y y y    1      3 RELEASE_DEVICE
 44 12840- 12854      3    12     7   4431  y   y    6     2 TOP$MME_RELLNK
 45 12865- 12875      3     4     7   4437  y   y    2     2 TOP$MME_RELMPC
 46 12885- 12895      3     4     7   4445  y   y    2     2 TOP$MME_RLSPAT
 47 13007- 14346    272    19     7   4454  y   y    6     2 TOP$MME_SCTCMP
 48 13092- 13115     16     3     7   4574  y y y    1      3 FIND_VACANT_ENTRY
 49 13194- 14212    188    21     7   4646  y y y    4      3 GET_DEVICE_CODE
 50 13541- 13602     11    22     7   5010  y   y    3       4 BUILD_SCT_FICCDD
 51 13623- 13733     18    16     7   5057  y y y    2       4 GET_CHANNEL_DEVICE
 52 13751- 13801     13     9     7   5154  y y y    2       4 BOGUS_TDOPEN
 53 13815- 13882      8    11     7   5234  y   y    2       4 GET_MODEL_ID
 54 13900- 14074     30     8     7   5264  y y y    3       4 VALIDATE_DEVICE_TYPE
 55 13987- 14073     16    28     7   5343  y y y    3        5 MAP_MPC_DEVICE
 56 14091- 14211     76    12     7   5441  y y y    2       4 MAP_DEVICE
 57 14247- 14345     48    24     7   6240  y y y    2      3 BUILD_TEST_CONTROL_ENTRY
 58 14733- 15284    187    20     7   6771  y   y    8     2 TOP$MME_TESTIO
 59 14783- 14804      5     4     7   7046  y   y    0      3 FRAME_DATA_AREA
 60 14815- 14834      4     8     7   7070  y   y    2      3 GET_SCT_ADR
 61 14846- 14862      6     7     7   7110  y   y    2      3 COPY_IO_ENTRY
 62 14902- 14922     14     2     7   7144  y   y    1      3 SET_TDIO_FPT
 63 14946- 15194    132    19     7   7236  y   y    1      3 BUILD_DCW_LIST
 64 15003- 15069     36     0     7   7346  y   y    0       4 BUILD_1ST_IDCW
 65 15071- 15108     15     0     7   7627  y   y    0       4 BUILD_2ND_IDCW
 66 15110- 15120      5     0     7   7720  y   y    0       4 BUILD_FAKE_DCW
 67 15122- 15162     32     2     7   7737  y   y    0       4 PROCESS_DCWS
 68 15164- 15184     15     0     7  10047  y   y    0       4 PROCESS_IDCW
 69 15186- 15193      4     0     7  10134  y   y    0       4 BAD_LIST_ABORT
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:670  
 70 15209- 15222      7     2     7  10147  y   y    1      3 ISSUE_IO
 71 15241- 15283      9    13     7  10166  y   y    5      3 SET_RETURN_VALUES
 72 15295- 15305      3     4     7  10234  y   y    2     2 TOP$MME_UNSPEC
 73 15321- 16289    228    80     7  10242  y   y    5     2 TOP$MME_WRDUMP
 74 15919- 15945     18     2     7  10266  y   y    0      3 WRAP_DUMP_MSG
 75 15947- 15995     30     3     7  10340  y y y    0      3 DO_YOU_WANT_A_DUMP
 76 15997- 16063     41     0     7  10477  y y y    0      3 GET_DUMP_OUTPUT_MODE
 77 16032- 16062     19     0     7  10566  y y y    0       4 SETUP_DUMP_FID
 78 16065- 16085     11     0     7  10657  y y y    0      3 OPEN_DUMP_RECEPTICLE
 79 16087- 16119     25     1     7  10730  y y y    0      3 SET_DUMP_PARAMS
 80 16121- 16277     89     0     7  11034  y   y    0      3 EXECUTE_DUMP
 81 16187- 16218     18     7     7  11265  y   y    0       4 GET_BCD_BUFFER
 82 16220- 16275     21     5     7  11350  y   y    0       4 BREAK_HDR_LINE
 83 16279- 16288      4     0     7  11504  y   y    0      3 CLOSE_DUMP_RECEPTICLE
 84 16302- 16454     78    38     7  11521  y   y    7     2 BUILD_SCTWRK
 85 16465- 16482     10     4     7  12520  y   y    2     2 MATCH_ICC
 86 16503- 16533     20     4     7  12567  y   y    2     2 MATCH_SCT_ADR
 87 16597- 16785     70     3     7  12677  y   y    0     2 TOP$TIO_DONE
 88 16668- 16708     26     4     7  13010  y   y    0      3 RETURN_TIO_STATUS
 89 16727- 16742      8     1     7  13117  y   y    0      3 PAY_TIO_CC
 90 16770- 16784      7     1     7  13145  y   y    0      3 RETURN_SPECIAL_STATUS
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:671  

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label

              56   7      0 Proc    0                  $$$$$$$$$$ 10552   7      2 DoCase  0
           10553   7    156 Case    0                         $$$ 10554   7    156 Call    0
           10555   7    172 Case    0                   $$$$$$$$$ 10556   7    172 Call    0
           10558   7    227 Case    0                        $$$$ 10559   7    227 Call    0
           10560   7    245 Case    0                         $$$ 10561   7    245 Call    0
           10562   7    260 Case    0                           $ 10563   7    260 Call    0
           10564   7    270 Case    0                        $$$$ 10565   7    270 Call    0
           10566   7    306 Case    0                         $$$ 10567   7    306 Call    0
           10568   7    321 Case    0                      $$$$$$ 10569   7    321 Call    0
           10571   7    345 Case    0                        $$$$ 10572   7    345 Call    0
           10573   7    363 Case    0                         $$$ 10574   7    363 Call    0
           10575   7    376 Case    0                           $ 10576   7    376 Call    0
           10577   7    406 Case    0                           $ 10578   7    406 Call    0
           10579   7    416 Case    0                         $$$ 10580   7    416 Call    0
           10581   7    431 Case    0                         $$$ 10582   7    431 Call    0
           10583   7    444 Case    0                       $$$$$ 10584   7    444 Call    0
           10585   7    465 Case    0                           $ 10586   7    465 Call    0
           10587   7    474 Case    0                        $$$$ 10588   7    474 Call    0
           10590   7    512 Case    0                    $$$$$$$$ 10591   7    512 Call    0
           10593   7    545 Case    0                      $$$$$$ 10594   7    545 Call    0
           10596   7    571 Case    0                           $ 10597   7    571 Call    0
           10598   7    601 Case    0                           $ 10599   7    601 Call    0
           10600   7    611 Case    0                      $$$$$$ 10601   7    611 Call    0
           10603   7    635 Case    0                    $$$$$$$$ 10604   7    635 Call    0
           10606   7    667 Case    0                           $ 10607   7    667 Call    0
           10608   7    677 Case    0                        $$$$ 10609   7    677 Call    0
           10611   7    717 EndCse  0                             10612   7    717 Return  0
           10661   7    720 Entry   0                             10663   7    722 Call    0
           10664   7    724 Return  0                             10682   7    725 Proc    1
        $$ 10695   7    726 Assign  1                          $$ 10696   7    732 Assign  1
           10697   7    740 Assign  1                           $ 10698   7    745 Call    1
        $$ 10701   7    753 Assign  1                          $$ 10702   7    757 DoCase  1
           10703   7    765 Case    1                           $ 10704   7    765 Call    1
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:672  
           10705   7    772 Do      1                          $$ 10706   7    772 Assign  1
           10707   7    776 EndDo   1                             10708   7    777 Case    1
           10709   7    777 Call    1                             10710   7   1002 Do      1
        $$ 10711   7   1002 Assign  1                             10712   7   1006 EndDo   1
           10713   7   1006 EndCse  1                             10714   7   1006 Return  1
           10726   7   1010 Proc    2                             10730   7   1011 Assign  2
           10731   7   1014 Assign  2                       $$$$$ 10732   7   1016 Assign  2
       $$$ 10733   7   1030 Assign  2                          $$ 10734   7   1037 Assign  2
$$$$$$$$$$ 10735   7   1045 MonCal  2                             10736   7   1052 Do      2
           10737   7   1052 Altret  2                             10739   7   1054 Return  2
           10750   7   1056 Proc    3                             10752   7   1057 Assign  3
 $$$$$$$$$ 10753   7   1062 MonCal  3                             10754   7   1067 Do      3
           10755   7   1067 Altret  3                             10757   7   1071 Return  3
           10838   7   1073 Proc    4                             10868   7   1074 Call    4
       $$$ 10871   7   1100 If      4                             10873   7   1106 Assign  4
           10874   7   1113 Do      4                             10875   7   1113 Call    4
           10876   7   1117 Call    4                             10877   7   1123 Call    4
           10878   7   1126 Do      4                          $$ 10879   7   1126 Assign  4
        $$ 10880   7   1132 Assign  4                             10881   7   1136 Return  4
           10883   7   1140 Call    4                             10884   7   1144 EndDo   4
         $ 10886   7   1144 Call    4                             10887   7   1151 Do      4
        $$ 10888   7   1151 Assign  4                          $$ 10889   7   1155 Assign  4
           10890   7   1161 Return  4                             10892   7   1163 Call    4
           10894   7   1167 Assign  4                        $$$$ 10895   7   1171 Call    4
        $$ 10897   7   1207 Assign  4                             10898   7   1213 Return  4
           10921   7   1215 Proc    5                           $ 10927   7   1216 Assign  5
         $ 10929   7   1223 If      5                             10930   7   1227 Do      5
           10931   7   1227 Assign  5                   $$$$$$$$$ 10932   7   1234 Assign  5
           10933   7   1240 Assign  5                             10934   7   1245 EndDo   5
           10935   7   1246 Do      5                             10936   7   1246 Assign  5
         $ 10937   7   1253 Assign  5                             10938   7   1261 Assign  5
           10939   7   1266 EndDo   5                             10940   7   1266 Assign  5
           10941   7   1270 Assign  5                             10943   7   1274 Assign  5
           10944   7   1276 DoWhil  5                       $$$$$ 10945   7   1301 If      5
           10946   7   1312 Return  5                             10947   7   1314 Assign  5
           10948   7   1317 EndWhi  5                             10950   7   1321 Assign  5
           10951   7   1325 Call    5                             10953   7   1331 EndPrc  5
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:673  
           10970   7   1333 Proc    6                   $$$$$$$$$ 11016   7   1334 IntCal  6
$$$$$$$$$$ 11017   7   1343 MonCal  6                             11018   7   1347 Do      6
      $$$$ 11019   7   1347 Assign  6                             11020   7   1356 Return  6
           11023   7   1360 Do      6                         $$$ 11024   7   1360 Call    6
           11025   7   1370 EndDo   6                             11027   7   1370 EndPrc  6
           11065   7   1372 Proc    7                        $$$$ 11071   7   1373 Assign  7
$$$$$$$$$$ 11073   7   1402 Do Sel  7                             11074   7   1543 Select  7
           11075   7   1543 Assign  7                             11076   7   1546 Select  7
           11077   7   1546 Assign  7                             11078   7   1550 Assign  7
           11079   7   1554 Select  7                             11080   7   1554 Assign  7
           11081   7   1557 Select  7                             11082   7   1557 Assign  7
           11083   7   1562 Select  7                          $$ 11084   7   1562 DoCase  7
           11085   7   1573 Case    7                             11086   7   1573 Assign  7
           11087   7   1576 Case    7                             11088   7   1576 Assign  7
           11089   7   1600 EndCse  7                             11090   7   1601 Select  7
           11091   7   1601 Assign  7                             11092   7   1605 Call    7
           11093   7   1611 EndSel  7                             11095   7   1611 Assign  7
           11096   7   1616 Assign  7                             11097   7   1622 Assign  7
      $$$$ 11098   7   1625 Assign  7                         $$$ 11099   7   1635 Assign  7
           11100   7   1644 Return  7                             11117   7   1646 Proc    8
$$$$$$$$$$ 11121   7   1647 MonCal  8                             11122   7   1654 Do      8
$$$$$$$$$$ 11125   7   1654 If      8                             11129   7   1703 Do      8
           11130   7   1703 Assign  8                  $$$$$$$$$$ 11131   7   1705 MonCal  8
           11132   7   1711 EndDo   8                             11133   7   1712 Do      8
       $$$ 11135   7   1712 Call    8 NO_ALLOCATION               11136   7   1722 Altret  8
           11139   7   1724 Return  8                             11157   7   1726 Proc    9
     $$$$$ 11167   7   1727 If      9                             11168   7   1740 Do      9
         $ 11169   7   1740 Assign  9                             11170   7   1745 If      9
         $ 11171   7   1751 Assign  9                           $ 11172   7   1755 Assign  9
           11173   7   1760 EndDo   9                             11175   7   1760 Return  9
           11209   7   1762 Proc   10                           $ 11237   7   1763 Assign 10
$$$$$$$$$$ 11238   7   1770 DoCase 10                             11239   7   2071 Case   10
           11240   7   2071 Call   10                             11241   7   2074 Case   10
           11242   7   2074 Call   10                             11243   7   2077 Case   10
           11244   7   2077 Call   10                             11245   7   2102 Do     10
           11246   7   2102 Altret 10                             11248   7   2105 Case   10
           11249   7   2105 Call   10                             11250   7   2110 Case   10
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:674  
           11251   7   2110 Call   10                             11252   7   2113 Case   10
           11253   7   2113 Call   10                             11254   7   2116 Case   10
           11255   7   2116 Call   10                             11256   7   2121 Case   10
           11257   7   2121 Assign 10                             11258   7   2125 Call   10
           11259   7   2131 EndCse 10                             11260   7   2131 Return 10
           11273   7   2133 Proc   11                           $ 11277   7   2134 Assign 11
     $$$$$ 11278   7   2140 Assign 11                             11279   7   2150 Assign 11
           11280   7   2152 Assign 11                             11281   7   2154 Return 11
           11293   7   2156 Proc   12                           $ 11297   7   2157 Assign 12
     $$$$$ 11298   7   2163 Assign 12                           $ 11299   7   2173 Assign 12
           11300   7   2177 Return 12                             11316   7   2201 Proc   13
         $ 11320   7   2202 Assign 13                       $$$$$ 11321   7   2206 Assign 13
         $ 11322   7   2216 Assign 13                        $$$$ 11323   7   2222 If     13
           11325   7   2232 Do     13                             11326   7   2232 Call   13
   $$$$$$$ 11327   7   2234 Assign 13                             11328   7   2247 EndDo  13
           11329   7   2247 Return 13                             11332   7   2251 Altret 13 BAD_SURVEY
           11398   7   2253 Proc   14                             11442   7   2254 Assign 14
       $$$ 11443   7   2256 Assign 14                             11444   7   2267 Assign 14
           11445   7   2271 Assign 14                        $$$$ 11446   7   2273 Assign 14
           11447   7   2302 Assign 14                             11448   7   2304 Assign 14
           11449   7   2306 Assign 14                             11450   7   2310 Assign 14
           11451   7   2311 Assign 14                  $$$$$$$$$$ 11452   7   2312 MonCal 14
           11453   7   2316 Do     14                    $$$$$$$$ 11454   7   2316 Assign 14
           11455   7   2331 If     14                             11457   7   2336 Do     14
       $$$ 11458   7   2336 If     14                         $$$ 11459   7   2345 Assign 14
       $$$ 11460   7   2356 Assign 14                  $$$$$$$$$$ 11461   7   2366 Assign 14
           11462   7   2405 Return 14                             11464   7   2407 Do     14
           11465   7   2407 Assign 14                             11466   7   2413 Call   14
           11467   7   2417 Altret 14                             11471   7   2421 Do     14
       $$$ 11472   7   2421 Call   14                             11473   7   2431 Altret 14
           11493   7   2433 Proc   15                           $ 11497   7   2434 Assign 15
     $$$$$ 11498   7   2440 Assign 15                           $ 11499   7   2450 Assign 15
           11500   7   2454 Assign 15                        $$$$ 11501   7   2456 Assign 15
      $$$$ 11502   7   2467 Assign 15                             11503   7   2500 Return 15
           11515   7   2502 Proc   16                           $ 11519   7   2503 Assign 16
     $$$$$ 11520   7   2507 Assign 16                           $ 11521   7   2517 Assign 16
           11522   7   2523 Return 16                             11534   7   2525 Proc   17
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:675  
         $ 11538   7   2526 Assign 17                       $$$$$ 11539   7   2532 Assign 17
         $ 11540   7   2542 Assign 17                             11541   7   2546 Return 17
           11553   7   2550 Proc   18                           $ 11557   7   2551 Assign 18
           11558   7   2555 Assign 18                           $ 11559   7   2557 Assign 18
           11560   7   2563 Return 18                             11572   7   2565 Proc   19
         $ 11588   7   2566 Assign 19                             11589   7   2573 Assign 19
       $$$ 11590   7   2576 If     19                             11592   7   2605 Do     19
        $$ 11593   7   2605 If     19                             11595   7   2613 Assign 19
           11596   7   2615 Assign 19                             11597   7   2617 Return 19
           11599   7   2621 EndPrc 19                             11624   7   2623 Proc   20
         $ 11634   7   2624 Call   20                       $$$$$ 11635   7   2632 Assign 20
        $$ 11636   7   2642 Assign 20                             11637   7   2646 Return 20
           11660   7   2650 Proc   21                           $ 11669   7   2651 Call   21
$$$$$$$$$$ 11670   7   2657 Assign 21                          $$ 11671   7   2673 Assign 21
           11672   7   2677 Return 21                             11684   7   2701 Proc   22
           11691   7   2702 Assign 22                             11692   7   2704 DoWhil 22
  $$$$$$$$ 11693   7   2707 If     22                             11694   7   2724 Return 22
           11695   7   2726 Assign 22                             11696   7   2731 EndWhi 22
           11698   7   2733 Assign 22                             11699   7   2737 Call   22
           11701   7   2743 EndPrc 22                             11712   7   2745 Proc   23
        $$ 11719   7   2746 Assign 23                             11720   7   2752 Return 23
           11739   7   2754 Proc   24                           $ 11749   7   2755 Call   24
         $ 11750   7   2763 Assign 24                           $ 11751   7   2770 Assign 24
        $$ 11752   7   2775 Assign 24                             11753   7   3001 Return 24
           11776   7   3003 Proc   25                           $ 11789   7   3004 Call   25
           11790   7   3012 Assign 25                           $ 11791   7   3016 Assign 25
        $$ 11792   7   3022 Assign 25                             11793   7   3026 Return 25
           11806   7   3030 Proc   26                             11817   7   3031 Assign 26
           11818   7   3034 Return 26                             11899   7   3036 Proc   27
         $ 11911   7   3037 Call   27                     $$$$$$$ 11912   7   3045 If     27
           11913   7   3062 Do     27                             11914   7   3062 Call   27
           11915   7   3066 Call   27                             11916   7   3072 Assign 27
       $$$ 11917   7   3074 Assign 27                          $$ 11918   7   3102 Assign 27
           11919   7   3106 EndDo  27                             11920   7   3107 Do     27
        $$ 11921   7   3107 Assign 27                             11922   7   3113 Assign 27
        $$ 11923   7   3116 Assign 27                             11924   7   3122 EndDo  27
           11925   7   3122 Return 27                             11937   7   3124 Proc   28
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:676  
           11944   7   3125 Assign 28                             11945   7   3127 DoWhil 28
  $$$$$$$$ 11946   7   3132 If     28                             11947   7   3147 Return 28
           11948   7   3151 Assign 28                             11949   7   3154 EndWhi 28
           11951   7   3156 Assign 28                             11952   7   3162 Call   28
           11954   7   3166 EndPrc 28                             11978   7   3170 Proc   29
       $$$ 11985   7   3171 If     29                             11987   7   3176 Do     29
           11988   7   3176 Assign 29                           $ 11989   7   3201 Assign 29
           11990   7   3204 Assign 29                             11991   7   3210 Assign 29
           11992   7   3212 Assign 29                             11993   7   3214 Assign 29
           11994   7   3216 EndDo  29                             11995   7   3216 Return 29
           12015   7   3220 Proc   30                         $$$ 12022   7   3221 If     30
           12024   7   3226 Do     30                             12025   7   3226 Assign 30
         $ 12026   7   3231 Call   30                             12027   7   3237 EndDo  30
           12028   7   3237 Return 30                             12048   7   3241 Proc   31
         $ 12058   7   3242 Call   31                       $$$$$ 12059   7   3250 Assign 31
        $$ 12060   7   3260 Assign 31                          $$ 12061   7   3264 Assign 31
           12062   7   3270 Return 31                             12124   7   3272 Proc   32
        $$ 12159   7   3273 If     32                             12160   7   3300 Do     32
        $$ 12161   7   3300 Assign 32                          $$ 12162   7   3303 Assign 32
           12163   7   3306 EndDo  32                             12164   7   3307 Do     32
   $$$$$$$ 12165   7   3307 Assign 32                     $$$$$$$ 12166   7   3312 Assign 32
           12167   7   3315 EndDo  32                           $ 12168   7   3315 Call   32
           12169   7   3323 Assign 32                             12170   7   3325 Assign 32
       $$$ 12171   7   3327 Assign 32                             12172   7   3334 Assign 32
           12173   7   3336 Assign 32                             12174   7   3340 Assign 32
           12175   7   3342 Assign 32                             12176   7   3344 Assign 32
           12177   7   3346 DoInhi 32                             12178   7   3346 Assign 32
$$$$$$$$$$ 12179   7   3347 MonCal 32                             12180   7   3352 EndInh 32
$$$$$$$$$$ 12184   7   3352 MonCal 32                          $$ 12185   7   3355 Assign 32
           12186   7   3361 Return 32                             12201   7   3363 Proc   33
        $$ 12208   7   3364 Assign 33                             12209   7   3370 Return 33
           12224   7   3372 Proc   34                          $$ 12232   7   3373 Assign 34
           12233   7   3377 Return 34                             12252   7   3401 Proc   35
        $$ 12275   7   3402 If     35                             12276   7   3407 Do     35
        $$ 12277   7   3407 Assign 35                          $$ 12278   7   3412 Assign 35
           12279   7   3415 EndDo  35                             12280   7   3416 Do     35
   $$$$$$$ 12281   7   3416 Assign 35                     $$$$$$$ 12282   7   3421 Assign 35
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:677  
           12283   7   3424 EndDo  35                           $ 12284   7   3424 Call   35
       $$$ 12285   7   3432 Assign 35                          $$ 12286   7   3437 Assign 35
        $$ 12287   7   3443 Assign 35                             12288   7   3447 Assign 35
           12289   7   3452 Return 35                             12332   7   3454 Proc   36
         $ 12354   7   3455 Assign 36                           $ 12355   7   3462 Call   36
        $$ 12356   7   3470 Assign 36                          $$ 12357   7   3476 Assign 36
        $$ 12358   7   3506 Assign 36                          $$ 12361   7   3512 DoCase 36
           12362   7   3520 Case   36                         $$$ 12363   7   3520 Call   36
           12364   7   3531 Do     36                         $$$ 12366   7   3531 If     36
        $$ 12367   7   3540 Assign 36                          $$ 12368   7   3545 Assign 36
           12369   7   3551 EndDo  36                             12370   7   3552 Case   36
           12371   7   3552 Call   36                         $$$ 12372   7   3556 Call   36
           12373   7   3567 Do     36                          $$ 12375   7   3567 Assign 36
           12376   7   3573 EndDo  36                             12377   7   3573 EndCse 36
           12378   7   3573 Return 36                             12413   7   3575 Proc   37
           12430   7   3576 Assign 37                             12431   7   3601 Assign 37
           12432   7   3604 Assign 37                           $ 12433   7   3606 Assign 37
           12434   7   3612 Assign 37                             12435   7   3615 Assign 37
$$$$$$$$$$ 12436   7   3617 MonCal 37                             12437   7   3624 Do     37
       $$$ 12438   7   3624 Call   37                          $$ 12439   7   3634 Assign 37
           12440   7   3640 Altret 37                             12443   7   3642 Return 37
           12467   7   3644 Proc   38                             12493   7   3645 Assign 38
           12494   7   3650 DoWhil 38                           $ 12496   7   3651 If     38
           12497   7   3655 Do     38                             12498   7   3655 Assign 38
           12499   7   3657 Call   38                             12500   7   3662 EndDo  38
           12501   7   3663 Do     38                             12502   7   3663 Assign 38
           12503   7   3665 Call   38                             12504   7   3670 Assign 38
           12506   7   3672 Call   38                             12507   7   3675 EndDo  38
 $$$$$$$$$ 12509   7   3675 IntCal 38                             12510   7   3705 If     38
           12511   7   3711 Assign 38                     $$$$$$$ 12512   7   3715 IntCal 38
           12513   7   3720 Assign 38                             12514   7   3722 Call   38
           12517   7   3725 Assign 38                           $ 12518   7   3730 EndWhi 38
           12519   7   3734 Return 38                             12549   7   3736 Proc   39
           12566   7   3737 Assign 39                             12567   7   3742 Assign 39
 $$$$$$$$$ 12568   7   3745 MonCal 39                             12569   7   3752 Do     39
       $$$ 12570   7   3752 Call   39                          $$ 12571   7   3762 Assign 39
           12572   7   3766 Altret 39                             12575   7   3770 Return 39
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:678  
           12614   7   3772 Proc   40                          $$ 12653   7   3773 If     40
           12654   7   3777 Do     40                             12655   7   3777 Assign 40
           12656   7   4002 Assign 40                         $$$ 12657   7   4005 DoCase 40
           12658   7   4020 Case   40                             12659   7   4020 Assign 40
           12660   7   4023 Case   40                             12661   7   4023 Assign 40
           12662   7   4026 Case   40                             12663   7   4026 Assign 40
           12664   7   4030 EndCse 40                             12665   7   4030 EndDo  40
         $ 12666   7   4030 Assign 40                             12667   7   4035 Assign 40
         $ 12668   7   4037 Assign 40                           $ 12669   7   4045 Assign 40
           12670   7   4052 Assign 40                           $ 12671   7   4054 Assign 40
           12672   7   4061 Assign 40                           $ 12673   7   4063 Assign 40
        $$ 12674   7   4070 DoCase 40                             12675   7   4102 Case   40
         $ 12676   7   4102 Assign 40                             12677   7   4106 Case   40
         $ 12678   7   4106 Assign 40                             12679   7   4111 Case   40
           12680   7   4111 Assign 40                             12681   7   4114 Assign 40
           12682   7   4116 Assign 40                             12683   7   4120 Assign 40
           12684   7   4122 EndCse 40                           $ 12685   7   4122 Assign 40
         $ 12686   7   4127 Assign 40                          $$ 12687   7   4134 Assign 40
        $$ 12688   7   4142 Assign 40                             12689   7   4146 Return 40
           12709   7   4150 Proc   41                           $ 12724   7   4151 Call   41
         $ 12725   7   4157 Assign 41                       $$$$$ 12726   7   4164 Assign 41
           12727   7   4173 Assign 41                             12728   7   4176 Return 41
           12755   7   4200 Proc   42                           $ 12774   7   4201 Call   42
$$$$$$$$$$ 12775   7   4207 DoCase 42                             12776   7   4311 Case   42
         $ 12777   7   4311 Call   42                             12778   7   4316 Do     42
           12779   7   4316 Assign 42                             12780   7   4321 Return 42
           12782   7   4324 Case   42                             12783   7   4324 Assign 42
           12784   7   4330 Call   42                             12785   7   4334 Assign 42
           12786   7   4337 Return 42                             12787   7   4341 EndCse 42
           12788   7   4341 Assign 42                             12789   7   4344 Return 42
           12810   7   4346 Proc   43                        $$$$ 12816   7   4347 Assign 43
 $$$$$$$$$ 12817   7   4356 MonCal 43                             12818   7   4363 Do     43
       $$$ 12819   7   4363 Call   43                             12820   7   4373 Altret 43
     $$$$$ 12822   7   4375 Assign 43                           $ 12823   7   4405 Assign 43
         $ 12824   7   4413 Assign 43                           $ 12825   7   4421 Assign 43
           12826   7   4427 Return 43                             12840   7   4431 Proc   44
           12851   7   4432 Assign 44                             12852   7   4435 Return 44
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:679  
           12865   7   4437 Proc   45                             12872   7   4440 Assign 45
           12873   7   4443 Return 45                             12885   7   4445 Proc   46
        $$ 12892   7   4446 Assign 46                             12893   7   4452 Return 46
           13007   7   4454 Proc   47                           $ 13053   7   4455 Call   47
           13054   7   4462 Do     47                          $$ 13055   7   4462 Assign 47
        $$ 13056   7   4466 Assign 47                             13057   7   4472 Return 47
       $$$ 13060   7   4474 Call   47                             13061   7   4507 Do     47
        $$ 13062   7   4507 Assign 47                           $ 13063   7   4513 Assign 47
           13064   7   4517 Return 47                          $$ 13067   7   4521 Call   47
           13068   7   4530 Do     47                          $$ 13069   7   4530 Assign 47
        $$ 13070   7   4534 Assign 47                             13071   7   4540 Return 47
           13074   7   4542 Assign 47                      $$$$$$ 13075   7   4543 Call   47
        $$ 13076   7   4566 Assign 47                             13077   7   4572 Return 47
           13092   7   4574 Proc   48                             13099   7   4575 DoInhi 48
           13100   7   4575 Assign 48                             13101   7   4577 DoWhil 48
         $ 13102   7   4600 Assign 48                      $$$$$$ 13103   7   4604 EndWhi 48
           13104   7   4623 If     48                             13105   7   4626 Do     48
           13106   7   4626 Assign 48                          $$ 13107   7   4630 Assign 48
           13108   7   4636 EndDo  48                             13109   7   4637 Assign 48
           13110   7   4640 EndInh 48                             13111   7   4640 If     48
           13112   7   4642 Return 48                             13113   7   4644 Altret 48
           13194   7   4646 Proc   49                           $ 13479   7   4647 Call   49
$$$$$$$$$$ 13480   7   4655 MonCal 49                             13481   7   4662 Do     49
           13482   7   4662 Assign 49                             13483   7   4666 Call   49
           13484   7   4672 EndDo  49                           $ 13488   7   4672 If     49
           13490   7   4677 Do     49                          $$ 13491   7   4677 Call   49
           13492   7   4706 Do     49                  $$$$$$$$$$ 13493   7   4706 MonCal 49
        $$ 13494   7   4711 Assign 49                             13495   7   4715 Altret 49
        $$ 13497   7   4717 Call   49                             13498   7   4726 Do     49
$$$$$$$$$$ 13499   7   4726 MonCal 49                          $$ 13500   7   4731 Assign 49
           13501   7   4735 Altret 49                           $ 13503   7   4737 Call   49
        $$ 13504   7   4745 Call   49                             13505   7   4756 Do     49
$$$$$$$$$$ 13506   7   4756 MonCal 49                             13507   7   4761 Altret 49
           13509   7   4763 EndDo  49                          $$ 13511   7   4763 Call   49
           13512   7   4772 Do     49                  $$$$$$$$$$ 13513   7   4772 MonCal 49
        $$ 13514   7   4775 Assign 49                             13515   7   5001 Altret 49
$$$$$$$$$$ 13517   7   5003 MonCal 49                             13518   7   5006 Return 49
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:680  
           13541   7   5010 Proc   50                           $ 13589   7   5011 Assign 50
        $$ 13592   7   5016 Assign 50                             13593   7   5024 Assign 50
           13594   7   5030 Assign 50                             13595   7   5034 If     50
       $$$ 13596   7   5037 Assign 50                             13597   7   5044 Assign 50
           13598   7   5047 Assign 50                             13599   7   5052 Assign 50
           13600   7   5055 Return 50                             13623   7   5057 Proc   51
           13713   7   5060 Assign 51                             13714   7   5062 Assign 51
           13715   7   5064 Assign 51                  $$$$$$$$$$ 13716   7   5071 MonCal 51
      $$$$ 13717   7   5074 If     51                             13718   7   5106 Do     51
           13719   7   5106 Assign 51                  $$$$$$$$$$ 13720   7   5112 MonCal 51
           13721   7   5117 Do     51                          $$ 13722   7   5117 Assign 51
$$$$$$$$$$ 13723   7   5127 MonCal 51                             13724   7   5134 Do     51
           13725   7   5134 Altret 51                             13727   7   5136 EndDo  51
     $$$$$ 13728   7   5136 Assign 51                             13729   7   5150 Return 51
           13731   7   5152 Altret 51                             13751   7   5154 Proc   52
           13786   7   5155 Assign 52                           $ 13787   7   5160 If     52
           13788   7   5165 Assign 52                             13789   7   5170 Assign 52
         $ 13790   7   5172 Assign 52                             13791   7   5200 Assign 52
           13792   7   5203 Assign 52                  $$$$$$$$$$ 13793   7   5206 MonCal 52
       $$$ 13794   7   5212 Assign 52                             13795   7   5220 Return 52
       $$$ 13798   7   5222 Call   52 ERROR                       13799   7   5232 Altret 52
           13815   7   5234 Proc   53                          $$ 13874   7   5235 Assign 53
           13875   7   5242 Assign 53                             13876   7   5244 Assign 53
$$$$$$$$$$ 13877   7   5251 MonCal 53                             13878   7   5254 Assign 53
         $ 13879   7   5256 Assign 53                             13880   7   5262 Return 53
           13900   7   5264 Proc   54                   $$$$$$$$$ 13936   7   5265 Do Sel 54
           13937   7   5312 Select 54                           $ 13938   7   5312 Call   54
           13939   7   5321 Select 54                           $ 13940   7   5321 If     54
           13942   7   5325 Do     54                          $$ 13943   7   5325 Assign 54
           13944   7   5331 Altret 54                             13946   7   5333 Select 54
        $$ 13947   7   5333 Assign 54                             13949   7   5337 Altret 54 ERROR
           13950   7   5341 EndSel 54                             13951   7   5341 Return 54
           13987   7   5343 Proc   55                           $ 14050   7   5344 Assign 55
           14051   7   5350 Assign 55                             14052   7   5352 Assign 55
$$$$$$$$$$ 14053   7   5357 MonCal 55                             14054   7   5362 Assign 55
         $ 14056   7   5364 If     55                       $$$$$ 14057   7   5371 If     55
           14061   7   5415 Do     55                          $$ 14062   7   5415 Assign 55
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:681  
           14063   7   5421 Altret 55                             14067   7   5423 Assign 55
           14068   7   5426 Assign 55                             14069   7   5431 Assign 55
           14070   7   5434 Assign 55                             14071   7   5437 Return 55
           14091   7   5441 Proc   56                           $ 14127   7   5442 Assign 56
           14128   7   5445 Assign 56                             14129   7   5447 Assign 56
$$$$$$$$$$ 14130   7   5451 Do Sel 56                             14131   7   5703 Select 56
           14132   7   5703 Assign 56                             14133   7   5710 Select 56
           14134   7   5710 Assign 56                             14135   7   5715 Select 56
           14136   7   5715 Assign 56                             14137   7   5721 Assign 56
           14138   7   5724 Select 56                             14139   7   5724 Assign 56
           14140   7   5731 Select 56                             14141   7   5731 Assign 56
           14142   7   5736 Select 56                             14143   7   5736 Assign 56
           14144   7   5743 Select 56                             14145   7   5743 Assign 56
           14146   7   5747 Assign 56                             14147   7   5752 Select 56
           14149   7   5752 Assign 56                             14150   7   5757 Select 56
           14151   7   5757 Assign 56                             14152   7   5764 Select 56
           14153   7   5764 Assign 56                             14154   7   5771 Select 56
           14155   7   5771 Assign 56                             14156   7   5776 Select 56
           14157   7   5776 Assign 56                             14158   7   6003 Select 56
           14159   7   6003 Assign 56                             14160   7   6010 Select 56
           14161   7   6010 Assign 56                             14162   7   6015 Select 56
           14163   7   6015 Assign 56                             14164   7   6022 Select 56
           14165   7   6022 Assign 56                             14166   7   6027 Select 56
           14167   7   6027 Assign 56                             14168   7   6033 Assign 56
           14169   7   6036 Select 56                             14170   7   6036 Assign 56
           14171   7   6042 Assign 56                             14172   7   6044 Assign 56
           14173   7   6047 Select 56                             14174   7   6047 Assign 56
           14175   7   6051 EndSel 56                             14179   7   6051 If     56
           14180   7   6055 Do     56                             14181   7   6055 Assign 56
           14182   7   6061 Assign 56                             14183   7   6063 EndDo  56
           14187   7   6063 If     56                  $$$$$$$$$$ 14188   7   6067 Do Sel 56
           14189   7   6163 Select 56                             14190   7   6163 Assign 56
           14191   7   6170 Select 56                             14192   7   6170 Assign 56
           14193   7   6175 Select 56                             14194   7   6175 Assign 56
           14195   7   6202 Select 56                             14196   7   6202 Assign 56
           14197   7   6207 Select 56                             14198   7   6207 Assign 56
           14199   7   6213 Assign 56                             14200   7   6216 Select 56
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:682  
           14201   7   6216 Assign 56                             14202   7   6223 Select 56
           14203   7   6223 Assign 56                             14204   7   6227 Assign 56
           14205   7   6231 EndSel 56                             14207   7   6231 If     56
           14208   7   6234 Altret 56                             14209   7   6236 Return 56
           14247   7   6240 Proc   57                     $$$$$$$ 14285   7   6241 Assign 57
      $$$$ 14286   7   6256 Assign 57                        $$$$ 14287   7   6270 Assign 57
      $$$$ 14288   7   6302 Assign 57                        $$$$ 14289   7   6313 Assign 57
$$$$$$$$$$ 14292   7   6324 DoCase 57                             14293   7   6423 Case   57
      $$$$ 14294   7   6423 Assign 57                             14295   7   6435 Case   57
      $$$$ 14296   7   6435 Assign 57                             14297   7   6447 Case   57
      $$$$ 14298   7   6447 Assign 57                             14299   7   6461 Case   57
      $$$$ 14300   7   6461 Assign 57                             14301   7   6473 Case   57
      $$$$ 14302   7   6473 Assign 57                             14303   7   6505 Case   57
      $$$$ 14304   7   6505 Assign 57                             14305   7   6517 Case   57
      $$$$ 14306   7   6517 Assign 57                             14307   7   6531 Case   57
      $$$$ 14308   7   6531 Assign 57                             14309   7   6543 Case   57
      $$$$ 14310   7   6543 Assign 57                             14311   7   6555 Case   57
      $$$$ 14312   7   6555 Assign 57                             14313   7   6567 Case   57
      $$$$ 14314   7   6567 Assign 57                             14315   7   6601 Case   57
      $$$$ 14316   7   6601 Assign 57                             14317   7   6613 Case   57
           14318   7   6613 Altret 57                             14319   7   6615 EndCse 57
      $$$$ 14322   7   6615 Assign 57                             14325   7   6627 Assign 57
       $$$ 14326   7   6633 Assign 57                             14327   7   6641 Assign 57
       $$$ 14328   7   6645 Assign 57                        $$$$ 14331   7   6653 Assign 57
      $$$$ 14332   7   6665 Assign 57                        $$$$ 14333   7   6677 Assign 57
      $$$$ 14336   7   6711 Assign 57                        $$$$ 14337   7   6723 Assign 57
      $$$$ 14338   7   6735 Assign 57                        $$$$ 14341   7   6747 Assign 57
      $$$$ 14342   7   6757 Assign 57                             14343   7   6767 Return 57
           14733   7   6771 Proc   58                             14752   7   6772 Call   58
         $ 14753   7   6774 Call   58                           $ 14754   7   7002 Call   58
         $ 14755   7   7010 Call   58                             14756   7   7016 Call   58
           14757   7   7022 Call   58                             14758   7   7026 Call   58
        $$ 14759   7   7032 Call   58                             14760   7   7044 Return 58
           14783   7   7046 Proc   59                          $$ 14799   7   7047 Assign 59
         $ 14800   7   7056 Assign 59                             14801   7   7065 Assign 59
           14802   7   7067 Return 59                             14815   7   7070 Proc   60
        $$ 14830   7   7071 Assign 60                  $$$$$$$$$$ 14831   7   7101 Assign 60
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:683  
           14832   7   7106 Return 60                             14846   7   7110 Proc   61
        $$ 14856   7   7111 Assign 61                         $$$ 14857   7   7121 Assign 61
         $ 14858   7   7126 Assign 61                        $$$$ 14859   7   7132 Assign 61
           14860   7   7142 Return 61                             14902   7   7144 Proc   62
     $$$$$ 14908   7   7145 Assign 62                         $$$ 14909   7   7155 Assign 62
       $$$ 14910   7   7164 Assign 62                          $$ 14911   7   7173 Assign 62
       $$$ 14912   7   7201 Assign 62                             14913   7   7207 Assign 62
           14914   7   7211 Assign 62                             14915   7   7213 Assign 62
           14916   7   7215 Assign 62                          $$ 14917   7   7220 If     62
           14918   7   7227 Assign 62                             14919   7   7232 Assign 62
           14920   7   7234 Return 62                             14946   7   7236 Proc   63
$$$$$$$$$$ 14976   7   7237 DoCase 63                             14977   7   7266 Case   63
           14978   7   7266 Call   63                             14979   7   7270 Call   63
           14980   7   7272 Call   63                             14981   7   7274 Call   63
           14982   7   7277 Case   63                             14983   7   7277 Call   63
         $ 14984   7   7301 If     63                             14985   7   7306 Call   63
           14986   7   7311 Call   63                             14987   7   7313 DoWhil 63
           14988   7   7314 Call   63                             14989   7   7316 Call   63
           14990   7   7320 EndWhi 63                             14991   7   7326 Case   63
           14992   7   7326 Call   63                             14993   7   7330 Call   63
           14994   7   7332 DoWhil 63                             14995   7   7333 Call   63
           14996   7   7335 Call   63                             14997   7   7337 EndWhi 63
           14998   7   7344 EndCse 63                             14999   7   7344 Return 63
           15003   7   7346 Proc   64                         $$$ 15008   7   7347 Assign 64
        $$ 15011   7   7356 Assign 64                             15012   7   7363 Assign 64
         $ 15015   7   7365 Assign 64                    $$$$$$$$ 15016   7   7371 If     64
       $$$ 15019   7   7412 Assign 64                         $$$ 15020   7   7421 Assign 64
       $$$ 15021   7   7430 Assign 64                     $$$$$$$ 15024   7   7437 If     64
           15026   7   7455 Assign 64                             15029   7   7457 Assign 64
 $$$$$$$$$ 15032   7   7461 DoCase 64                             15033   7   7507 Case   64
           15034   7   7507 Assign 64                             15035   7   7512 Case   64
        $$ 15036   7   7512 If     64                             15037   7   7520 Assign 64
           15039   7   7523 Case   64                          $$ 15040   7   7523 If     64
           15042   7   7532 Assign 64                             15043   7   7534 EndCse 64
        $$ 15046   7   7534 If     64                         $$$ 15047   7   7542 If     64
        $$ 15048   7   7551 Assign 64                          $$ 15050   7   7557 Assign 64
         $ 15053   7   7564 Assign 64                             15056   7   7570 Assign 64
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:684  
        $$ 15057   7   7574 If     64                             15058   7   7602 Assign 64
           15059   7   7604 Assign 64                             15060   7   7606 Assign 64
           15063   7   7610 Assign 64                          $$ 15064   7   7613 If     64
        $$ 15065   7   7620 Assign 64                             15067   7   7625 Return 64
           15071   7   7627 Proc   65                             15076   7   7630 Assign 65
       $$$ 15079   7   7632 Assign 65                     $$$$$$$ 15082   7   7637 If     65
           15084   7   7655 Assign 65                             15087   7   7657 Assign 65
        $$ 15090   7   7661 Assign 65                           $ 15095   7   7666 Assign 65
           15098   7   7672 Assign 65                          $$ 15099   7   7676 If     65
           15100   7   7704 Assign 65                             15101   7   7706 Assign 65
           15102   7   7710 Assign 65                             15105   7   7713 Assign 65
           15106   7   7716 Return 65                             15110   7   7720 Proc   66
      $$$$ 15115   7   7721 Assign 66                             15116   7   7727 Assign 66
           15117   7   7732 Assign 66                             15118   7   7735 Return 66
           15122   7   7737 Proc   67                             15129   7   7740 If     67
           15130   7   7742 Do     67                             15131   7   7742 Assign 67
           15132   7   7743 DoUntl 67                        $$$$ 15133   7   7743 DoCase 67
           15134   7   7756 Case   67                             15135   7   7756 Assign 67
           15136   7   7761 Assign 67                             15137   7   7765 Case   67
           15138   7   7765 Assign 67                             15139   7   7770 Assign 67
           15140   7   7773 Assign 67                             15141   7   7776 Case   67
           15142   7   7776 Assign 67                             15143   7  10001 Assign 67
           15144   7  10004 Assign 67                             15145   7  10010 If     67
           15146   7  10012 Assign 67                             15147   7  10014 Assign 67
         $ 15148   7  10016 If     67                             15149   7  10023 Assign 67
           15150   7  10026 Case   67                             15151   7  10026 Call   67
           15152   7  10030 EndCse 67                             15153   7  10030 If     67
           15154   7  10033 Assign 67                             15155   7  10036 Call   67
           15156   7  10040 Assign 67                             15157   7  10043 EndUnt 67
           15158   7  10045 EndDo  67                             15160   7  10045 Return 67
           15164   7  10047 Proc   68                          $$ 15168   7  10050 Assign 68
  $$$$$$$$ 15169   7  10054 If     68                             15170   7  10073 Assign 68
           15171   7  10076 Assign 68                             15173   7  10100 Assign 68
           15174   7  10104 If     68                             15175   7  10110 Assign 68
           15176   7  10112 Assign 68                             15177   7  10114 Assign 68
           15178   7  10117 If     68                             15179   7  10122 Assign 68
           15180   7  10125 Call   68                             15181   7  10127 Assign 68
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:685  
           15182   7  10132 Return 68                             15186   7  10134 Proc   69
           15190   7  10135 Assign 69                             15191   7  10141 Call   69
           15193   7  10145 EndPrc 69                             15209   7  10147 Proc   70
           15215   7  10150 DoInhi 70                             15216   7  10150 Assign 70
     $$$$$ 15217   7  10151 Assign 70                  $$$$$$$$$$ 15218   7  10161 MonCal 70
           15219   7  10164 EndInh 70                             15220   7  10164 Return 70
           15241   7  10166 Proc   71                       $$$$$ 15274   7  10167 If     71
         $ 15275   7  10200 Assign 71                             15276   7  10203 Assign 71
$$$$$$$$$$ 15277   7  10206 MonCal 71                           $ 15278   7  10211 Assign 71
    $$$$$$ 15279   7  10215 Assign 71                          $$ 15280   7  10226 Assign 71
           15281   7  10232 Return 71                             15295   7  10234 Proc   72
           15302   7  10235 Assign 72                             15303   7  10240 Return 72
           15321   7  10242 Proc   73                             15903   7  10243 Call   73
           15904   7  10245 Call   73
           15907   7  10247 Call   73 UNSUCCESSFUL_DUMP           15908   7  10251 Call   73
           15909   7  10253 Call   73                             15910   7  10255 Call   73
           15913   7  10257 Call   73 NO_DUMP                     15914   7  10261 Assign 73
           15915   7  10264 Return 73                             15919   7  10266 Proc   74
       $$$ 15927   7  10267 DoCase 74                             15928   7  10302 Case   74
           15929   7  10302 Assign 74                             15930   7  10306 Case   74
           15931   7  10306 Assign 74                             15932   7  10312 Case   74
           15933   7  10312 Assign 74                             15934   7  10316 Case   74
           15935   7  10316 Assign 74                             15936   7  10322 Case   74
           15937   7  10322 Assign 74                             15938   7  10326 Case   74
           15939   7  10326 Assign 74                             15940   7  10331 EndCse 74
           15941   7  10331 Assign 74                             15942   7  10333 Call   74
           15943   7  10336 Return 74                             15947   7  10340 Proc   75
$$$$$$$$$$ 15955   7  10341 MonCal 75                             15956   7  10344 DoUntl 75
           15957   7  10344 Assign 75                             15958   7  10347 Assign 75
           15959   7  10351 Call   75                             15962   7  10354 Assign 75
           15963   7  10355 DoWhil 75                             15964   7  10356 Assign 75
         $ 15965   7  10357 EndWhi 75                         $$$ 15968   7  10366 IntCal 75
         $ 15971   7  10376 If     75                         $$$ 15972   7  10405 If     75
           15974   7  10420 Assign 75                         $$$ 15975   7  10423 If     75
           15977   7  10436 Assign 75                             15978   7  10441 Do     75
           15979   7  10441 Assign 75                             15980   7  10442 Assign 75
           15981   7  10446 Call   75                             15982   7  10452 EndDo  75
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:686  
           15983   7  10453 Do     75                             15984   7  10453 Assign 75
           15985   7  10454 Assign 75                             15986   7  10460 Call   75
           15987   7  10464 EndDo  75                             15988   7  10464 EndUnt 75
         $ 15991   7  10466 If     75                             15992   7  10473 Return 75
           15993   7  10475 Altret 75                             15997   7  10477 Proc   76
$$$$$$$$$$ 16001   7  10500 MonCal 76                             16002   7  10503 Assign 76
           16003   7  10506 Assign 76                             16004   7  10510 Call   76
           16006   7  10513 If     76                             16007   7  10517 Assign 76
           16008   7  10522 Do     76                             16010   7  10522 Assign 76
           16011   7  10523 DoWhil 76                             16012   7  10524 Assign 76
         $ 16013   7  10525 EndWhi 76                         $$$ 16014   7  10534 IntCal 76
        $$ 16017   7  10544 If     76                             16019   7  10554 Assign 76
           16020   7  10557 Do     76                             16021   7  10557 Assign 76
           16022   7  10560 Call   76                             16023   7  10562 EndDo  76
           16024   7  10562 EndDo  76                             16025   7  10562 Return 76
           16028   7  10564 Altret 76 BAD_FID                     16032   7  10566 Proc   77
      $$$$ 16036   7  10567 IntCal 77                             16037   7  10601 If     77
           16038   7  10604 Do     77                             16039   7  10604 Assign 77
           16040   7  10610 Call   77                             16041   7  10614 Altret 77
           16043   7  10616 If     77                             16044   7  10620 Do     77
         $ 16045   7  10620 Assign 77                             16048   7  10626 Assign 77
           16049   7  10632 Assign 77                             16050   7  10635 EndDo  77
           16051   7  10636 Do     77                           $ 16052   7  10636 Assign 77
           16055   7  10643 Assign 77                           $ 16056   7  10647 Assign 77
           16059   7  10656 EndDo  77                             16060   7  10656 Return 77
           16065   7  10657 Proc   78                         $$$ 16069   7  10660 If     78
           16071   7  10667 If     78                  $$$$$$$$$$ 16072   7  10671 MonCal 78
$$$$$$$$$$ 16073   7  10676 MonCal 78                             16074   7  10702 Return 78
       $$$ 16077   7  10704 Call   78 BAD_LP_OPEN                 16078   7  10714 Altret 78
           16081   7  10716 Assign 78 BAD_FID_OPEN                16082   7  10722 Call   78
           16083   7  10726 Altret 78                             16087   7  10730 Proc   79
         $ 16093   7  10731 Assign 79                             16094   7  10736 Assign 79
       $$$ 16095   7  10741 If     79                             16096   7  10751 Do     79
           16097   7  10751 Assign 79                           $ 16098   7  10753 Assign 79
           16099   7  10761 Assign 79                             16100   7  10763 Assign 79
           16101   7  10765 EndDo  79                             16102   7  10766 Do     79
           16103   7  10766 Assign 79                             16104   7  10771 Assign 79
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:687  
           16105   7  10774 Assign 79                             16106   7  10776 Assign 79
           16107   7  10777 Assign 79                             16108   7  11000 DoUntl 79
      $$$$ 16109   7  11000 If     79                             16110   7  11010 Assign 79
           16111   7  11013 Assign 79                             16112   7  11014 EndUnt 79
           16113   7  11021 If     79                          $$ 16114   7  11023 Assign 79
           16115   7  11030 Altret 79                             16117   7  11032 Return 79
           16121   7  11034 Proc   80                             16125   7  11035 Call   80
       $$$ 16126   7  11037 Call   80                             16127   7  11051 Call   80
           16128   7  11053 If     80                             16129   7  11055 Do     80
           16130   7  11055 Assign 80                             16131   7  11057 Assign 80
           16132   7  11061 EndDo  80                             16133   7  11062 Do     80
           16134   7  11062 Assign 80                             16135   7  11064 Assign 80
           16136   7  11066 EndDo  80                             16137   7  11066 Assign 80
           16138   7  11070 Assign 80                             16139   7  11072 DoIndx 80
           16140   7  11075 If     80                           $ 16142   7  11103 DoCase 80
           16143   7  11112 Case   80                           $ 16144   7  11112 If     80
           16145   7  11117 Do     80                             16146   7  11117 Assign 80
           16148   7  11121 Assign 80                             16149   7  11123 Assign 80
           16150   7  11124 EndDo  80                             16152   7  11125 Case   80
      $$$$ 16153   7  11125 If     80                             16155   7  11135 Do     80
           16156   7  11135 Assign 80                             16158   7  11137 Assign 80
           16159   7  11140 EndDo  80                             16161   7  11140 EndCse 80
           16163   7  11140 Assign 80                          $$ 16164   7  11142 Call   80
           16165   7  11152 Assign 80                             16166   7  11155 If     80
      $$$$ 16167   7  11160 Assign 80                             16169   7  11171 Assign 80
        $$ 16170   7  11175 Call   80                             16171   7  11205 Assign 80
           16172   7  11210 DoIndx 80                          $$ 16173   7  11212 Call   80
        $$ 16174   7  11222 Assign 80                             16176   7  11227 Assign 80
           16177   7  11232 EndInd 80                  $$$$$$$$$$ 16178   7  11240 MonCal 80
      $$$$ 16179   7  11244 EndInd 80                             16180   7  11251 Return 80
       $$$ 16182   7  11253 Call   80 WRITE_ERR                   16183   7  11263 Return 80
           16187   7  11265 Proc   81                             16200   7  11266 Assign 81
           16201   7  11272 Assign 81                             16202   7  11273 Assign 81
           16203   7  11274 Assign 81                             16204   7  11275 DoWhil 81
           16205   7  11300 Assign 81                             16206   7  11303 DoIndx 81
           16207   7  11306 Assign 81                           $ 16208   7  11311 Assign 81
           16209   7  11315 Assign 81                           $ 16210   7  11320 EndInd 81
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:688  
           16211   7  11327 Assign 81                             16212   7  11331 Assign 81
           16213   7  11334 Assign 81                             16214   7  11341 EndWhi 81
         $ 16215   7  11343 Assign 81                             16216   7  11346 Return 81
           16220   7  11350 Proc   82                             16233   7  11351 Assign 82
     $$$$$ 16234   7  11352 IntCal 82                             16238   7  11366 DoWhil 82
           16239   7  11371 Assign 82                        $$$$ 16240   7  11374 IntCal 82
           16244   7  11406 EndWhi 82                             16247   7  11411 DoWhil 82
           16249   7  11413 If     82                             16250   7  11416 Assign 82
           16251   7  11421 Assign 82                          $$ 16254   7  11424 Assign 82
$$$$$$$$$$ 16257   7  11435 MonCal 82                             16260   7  11440 Assign 82
      $$$$ 16261   7  11443 IntCal 82                             16265   7  11455 DoWhil 82
           16266   7  11460 Assign 82                        $$$$ 16267   7  11463 IntCal 82
           16271   7  11475 EndWhi 82                             16272   7  11500 EndWhi 82
           16273   7  11502 Return 82                             16279   7  11504 Proc   83
       $$$ 16283   7  11505 If     83                  $$$$$$$$$$ 16284   7  11514 MonCal 83
           16286   7  11517 Return 83                             16302   7  11521 Proc   84
         $ 16356   7  11522 Assign 84                           $ 16357   7  11527 Assign 84
        $$ 16359   7  11533 DoCase 84                             16360   7  11545 Case   84
           16361   7  11545 Assign 84                             16362   7  11552 Case   84
           16363   7  11552 Assign 84                             16364   7  11557 Case   84
           16365   7  11557 Assign 84                             16366   7  11561 EndCse 84
         $ 16367   7  11561 Assign 84                             16368   7  11566 Assign 84
      $$$$ 16369   7  11570 If     84                             16370   7  11600 Assign 84
           16371   7  11603 Assign 84                             16372   7  11605 Assign 84
           16373   7  11607 Assign 84                        $$$$ 16374   7  11611 Assign 84
           16375   7  11620 Assign 84                             16376   7  11622 Assign 84
           16377   7  11623 Assign 84                     $$$$$$$ 16378   7  11625 If     84
           16380   7  11642 Assign 84                      $$$$$$ 16382   7  11644 If     84
           16384   7  11660 Assign 84                          $$ 16386   7  11662 If     84
           16387   7  11671 Assign 84                      $$$$$$ 16390   7  11673 If     84
           16392   7  11711 Do     84                             16393   7  11711 Assign 84
       $$$ 16394   7  11713 If     84                             16395   7  11722 Do     84
           16396   7  11722 Assign 84                         $$$ 16397   7  11724 If     84
           16398   7  11733 Do     84                             16399   7  11733 Assign 84
      $$$$ 16400   7  11735 Assign 84                        $$$$ 16402   7  11746 Assign 84
           16404   7  11757 EndDo  84                             16405   7  11760 Do     84
       $$$ 16406   7  11760 Assign 84                        $$$$ 16408   7  11771 Assign 84
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:689  
           16410   7  12000 EndDo  84                             16411   7  12000 EndDo  84
           16413   7  12000 EndDo  84                          $$ 16416   7  12000 If     84
           16417   7  12005 Do     84                             16418   7  12005 Assign 84
           16419   7  12007 Assign 84                             16420   7  12011 Assign 84
           16421   7  12013 EndDo  84                             16422   7  12014 Do     84
      $$$$ 16423   7  12014 Assign 84                         $$$ 16424   7  12025 Assign 84
       $$$ 16425   7  12035 Assign 84                      $$$$$$ 16426   7  12045 If     84
        $$ 16428   7  12061 If     84                             16429   7  12067 Do     84
        $$ 16430   7  12067 Assign 84                             16431   7  12075 Assign 84
           16432   7  12077 EndDo  84                             16434   7  12100 Assign 84
           16435   7  12102 Assign 84                             16436   7  12104 EndDo  84
$$$$$$$$$$ 16437   7  12104 Do Sel 84                             16438   7  12470 Select 84
           16439   7  12470 Assign 84                             16440   7  12475 Select 84
           16441   7  12475 Assign 84                             16442   7  12502 Select 84
           16446   7  12502 Assign 84                             16447   7  12507 Select 84
           16448   7  12507 Assign 84                             16449   7  12514 Select 84
           16450   7  12514 Assign 84                             16451   7  12516 EndSel 84
           16452   7  12516 Return 84                             16465   7  12520 Proc   85
           16472   7  12521 Assign 85                             16473   7  12523 DoWhil 85
  $$$$$$$$ 16474   7  12526 If     85                             16475   7  12546 Return 85
           16476   7  12550 Assign 85                             16477   7  12553 EndWhi 85
           16479   7  12555 Assign 85                             16480   7  12561 Call   85
           16482   7  12565 EndPrc 85                             16503   7  12567 Proc   86
           16510   7  12570 Assign 86                             16511   7  12572 DoWhil 86
  $$$$$$$$ 16512   7  12575 If     86                             16513   7  12612 Do     86
        $$ 16514   7  12612 Assign 86                             16515   7  12620 Return 86
           16517   7  12622 Assign 86                             16518   7  12625 EndWhi 86
           16520   7  12627 Assign 86                             16521   7  12630 DoWhil 86
  $$$$$$$$ 16522   7  12633 If     86                             16523   7  12650 Do     86
        $$ 16524   7  12650 Assign 86                             16525   7  12656 Return 86
           16527   7  12660 Assign 86                             16528   7  12663 EndWhi 86
           16530   7  12665 Assign 86                             16531   7  12671 Call   86
           16533   7  12675 EndPrc 86                             16597   7  12677 Proc   87
           16605   7  12700 DoInhi 87                             16606   7  12700 Assign 87
        $$ 16607   7  12703 If     87                         $$$ 16608   7  12720 If     87
           16609   7  12725 Do     87                          $$ 16610   7  12725 Assign 87
           16611   7  12732 Assign 87                        $$$$ 16612   7  12734 If     87
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:690  
        $$ 16614   7  12753 Assign 87                             16615   7  12761 Do     87
           16616   7  12761 Call   87                             16617   7  12763 Call   87
           16618   7  12765 EndDo  87                             16619   7  12765 EndDo  87
           16620   7  12766 Do     87                             16621   7  12766 Call   87
           16622   7  12770 Call   87                             16623   7  12772 EndDo  87
           16624   7  12773 Do     87                             16625   7  12773 Assign 87
        $$ 16626   7  12776 If     87                             16627   7  13002 Do     87
           16628   7  13002 Call   87                             16629   7  13004 Call   87
           16630   7  13006 EndDo  87                             16632   7  13006 EndDo  87
           16633   7  13006 EndInh 87                             16634   7  13006 Return 87
           16668   7  13010 Proc   88                           $ 16677   7  13011 If     88
           16679   7  13015 Do     88                       $$$$$ 16680   7  13015 Assign 88
        $$ 16681   7  13025 Assign 88                          $$ 16682   7  13033 Assign 88
           16683   7  13040 If     88                             16684   7  13044 Do     88
           16685   7  13044 Assign 88                             16686   7  13050 Assign 88
           16687   7  13052 Assign 88                             16688   7  13054 Assign 88
           16689   7  13056 EndDo  88                             16690   7  13057 Assign 88
           16691   7  13061 Assign 88                             16692   7  13063 If     88
           16695   7  13067 Assign 88                           $ 16697   7  13072 If     88
           16699   7  13076 Do     88                             16700   7  13076 Assign 88
           16701   7  13101 If     88                          $$ 16702   7  13104 Assign 88
         $ 16703   7  13111 Assign 88                             16704   7  13115 EndDo  88
           16705   7  13115 EndDo  88                             16706   7  13115 Return 88
           16727   7  13117 Proc   89                         $$$ 16733   7  13120 Assign 89
         $ 16734   7  13126 If     89                             16736   7  13132 Do     89
           16737   7  13132 Assign 89                           $ 16738   7  13135 Call   89
           16739   7  13143 EndDo  89                             16740   7  13143 Return 89
           16770   7  13145 Proc   90                           $ 16776   7  13146 If     90
           16778   7  13152 Do     90                             16779   7  13152 Assign 90
         $ 16780   7  13155 Assign 90                             16781   7  13161 EndDo  90
           16782   7  13161 Return 90

  **** Statement type totals  ****

   582 Assign   150 Call      32 MonCal    98 If        81 Case     100 Return
    29 Altret    10 IntCal     5 Do Sel     5 EndSel    40 Select     3 DoUntl
     3 DoIndx    16 DoWhil    15 DoCase    88 Do         4 DoInhi     3 EndUnt
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:691  
     3 EndInd    16 EndWhi    15 EndCse    56 EndDo      4 EndInh    91 Proc
     8 EndPrc     1 Entry     10 Labels

 # major stmts= 1088 Code/major= 5.28 # stmts= 1458 Code/stmt= 3.94  Point total=127.1
 Cost/major stmt=  6.4 Cost/stmt=  4.8 Total cost=   7007.6

   0-4  $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
   4-6  $$$$$$$$$
   6-8  $$$$$$$$$
  8-10  $$$$$
 10-12  $$$$
 12-14  $
 14-16
 16-18
 18-20
 20-22
 22-??  $$$
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:692  

 **** Variables and constants ****

  ****  Section 005  Data  TOP$POLTS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   451-0-0/c STRC(72)    r     1 ACCOUNT_NAME           25004-0-0/w PTR         r     1 ADDR_TRANS$
   242-0-0/d BIT (72)    r     1 DATA_V                 24724-0-0/d BIT (72)    r     1 DATA_V
   231-0-0/w UBIN        r     1 DCB_NUM
   464-0-0/w CHAR(5200)  r     1 DCWLIST_BFR(0:7)
 25031-0-0/w PTR         r     1 DUMP$                    453-0-0/w PTR         r     1 FICCDD$
   446-0-0/c STRC(108)   r     1 FILE_NAME                133-0-0/w STRC(144)   r     1 MPC(0:7)
 25005-0-0/c CHAR(80)    r     1 READ_BUF
 25005-0-0/c CHAR        r     1 READ_BUF_(0:79)
 24726-0-0/w UBIN        r     1 TIME_VALUE                 0-0-0/w UBIN        r     1 TOP$EVENT_ID
     1-0-0/b BIT (72)    r     1 TOP$STATUS

  ****  Structures  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name

   264-0-0/c STRC(369)   r     1 CHANNEL_MSG
   267-2-0/c CHAR(3)     r         2 CHN#
   275-2-0/c CHAR(3)     r         2 NUM#

   410-0-0/d STRC(1080)  r     1 CLOSE_CONFIG
   442-0-0/d STRC(144)   r         2 V

 25032-0-0/d STRC(1080)  r     1 CLOSE_DUMP
 25064-0-0/d STRC(144)   r         2 V

   242-0-0/d STRC(72)    r     1 DATA_VECTOR
   242-0-0/b UBIN(20)    r         2 SIZE#

 24724-0-0/d STRC(72)    r     1 DATA_VECTOR
 24724-0-0/b UBIN(20)    r         2 SIZE#

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:693  
   226-0-0/c STRC(99)    r     1 DCB_NAME
   230-2-0/c CHAR        r         2 TCX

   256-0-0/d STRC(216)   r     1 DELAY_FPT
   262-0-0/d STRC(72)    r         2 V

   244-0-0/w STRC(72)    r     1 DENSITY_DCWLIST
   245-0-0/b STRC        r         2 DCW
   245-0-0/b UBIN(18)    r          3 ADDR#

   246-0-0/h STRC(18)    r     1 DEVICE_INFO(0:15)
   246-1-5/b BIT (4)     r         2 DENSITIES#

   454-0-0/c STRC(81)    r     1 DEVICE_KEY
   454-1-0/c CHAR(8)     r         2 DATA

 25031-0-0/w STRC        r     1 DUMP_
 25031-0-0/b UBIN(18)    r         2 ADDR#

 25340-0-0/c STRC(72)    r     1 DUMP_ACCT
 25340-0-0/c CHAR(8)     r         2 ACCT#

 24744-0-0/c STRC(1125)  r     1 DUMP_LINE
 24744-1-0/c CHAR(6)     r         2 ACTUAL_ADDR#
 24746-1-0/c CHAR(6)     r         2 RELATIVE_ADDR#
 24750-0-0/c CHAR(4)     r         2 EDIT_NAME#
 24751-1-0/c STRC(117)   r         2 DUMP_OUTPUT_(0:7)
 24751-2-0/c CHAR(12)    r          3 OCT_WORD_ASC#

 25330-0-0/c STRC(288)   r     1 DUMP_NAME
 25330-0-0/b UBIN(9)     r         2 L#
 25330-1-0/c CHAR(31)    r         2 NAME#

 25254-0-0/d STRC(360)   r     1 DUMP_PROMPT
 25262-0-0/d STRC(144)   r         2 V

 24744-0-0/c STRC(1125)  r     1 FILE_OUTPUT_LINE
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:694  
 24744-0-0/c CHAR(73)    r         2 DUMP_LINE#

   232-0-0/d STRC(288)   r     1 GET_POLTS_DCB
   240-0-0/d STRC(72)    r         2 V

     3-0-0/w STRC(396)   r     1 IO_ENTRY(0:7)
     4-0-0/h STRC        r         2 W1
     4-0-0/h UBIN(18)    r          3 EXTSTAT_ADR#
     4-2-0/h UBIN(18)    r          3 LOWER#
     5-0-0/b STRC        r         2 W2
     5-0-2/b BIT         r          3 MDS_DEV_IDCW_LIST
     7-0-0/b STRC        r         2 W4
     7-0-0/b BIT (6)     r          3 DEVICE_CMD#
     7-2-0/b UBIN(6)     r          3 IO_CMD#
     7-3-3/b UBIN(6)     r          3 RECORD_COUNT#
    10-0-0/w BIT         r         2 W5#
    12-0-0/b STRC        r         2 W7
    12-0-0/b BIT (6)     r          3 DEVICE_CMD#
    12-2-0/b UBIN(6)     r          3 IO_CMD#
    12-3-2/b BIT         r          3 BIT29#
    12-3-3/b UBIN(6)     r          3 RECORD_COUNT#
    13-0-0/h STRC        r         2 W8
    13-0-0/h UBIN(18)    r          3 DCW_PTR#
    14-0-0/h STRC        r         2 W9
    14-0-0/h UBIN(18)    r          3 STATUS_ADR#
    14-2-0/h UBIN(18)    r          3 CC_ADR#

 25266-0-0/d STRC(360)   r     1 LP_OR_FID
 25274-0-0/d STRC(144)   r         2 V

 25342-0-0/c STRC(279)   r     1 MESSAGE
 25342-0-0/c CHAR(5)     r         2 SUBEXEC

   457-0-0/c STRC(81)    r     1 MPC_KEY
   457-1-0/c CHAR(8)     r         2 KEY

   300-0-0/d STRC(2088)  r     1 OPEN_CONFIG
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:695  
   344-0-0/d STRC(756)   r         2 V

 25162-0-0/d STRC(2088)  r     1 OPEN_DUMP_FILE
 25226-0-0/d STRC(756)   r         2 V

 25070-0-0/d STRC(2088)  r     1 OPEN_LP
 25134-0-0/d STRC(756)   r         2 V

   372-0-0/d STRC(504)   r     1 READ_CONFIG
   374-0-0/w STRC(72)    r         2 KEY_
   376-0-0/w STRC(72)    r         2 BUF_
   402-0-0/d STRC(216)   r         2 V

   174-0-0/d STRC(144)   r     1 TDCLOSE_FPT
   176-0-0/d STRC(18)    r         2 V
   176-0-0/b UBIN(18)    r          3 DCB#

   200-0-0/d STRC(360)   r     1 TDIO_FPT
   202-0-0/b BIT (72)    r         2 DCWLIST_
   204-0-0/b BIT (72)    r         2 DATA_
   206-0-0/d STRC(144)   r         2 V
   206-0-0/b UBIN(18)    r          3 DCB#
   206-2-0/b BIT         r          3 WAIT#
   206-2-6/b STRC(12)    r          3 ALTPATH
   207-0-0/w BIT         r          3 PCW#
   210-0-0/w SBIN        r          3 EVENT#
   211-0-0/b UBIN(6)     r          3 TIMEOUT#

   212-0-0/d STRC(432)   r     1 TDOPEN_FPT
   214-0-0/b BIT (72)    r         2 CHAIN_
   216-0-0/b BIT (72)    r         2 VFC_
   222-0-0/d STRC(144)   r         2 V
   222-0-0/b UBIN(18)    r          3 DCB#
   222-2-0/b STRC(18)    r          3 DEVICE
   222-2-0/b UBIN(6)     r           4 DVN#
   222-2-6/b UBIN(3)     r           4 IOM#
   222-3-0/b UBIN(9)     r           4 CHAN#
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:696  
   223-0-0/w SBIN        r          3 SPEVENT#
   224-0-0/b UBIN(6)     r          3 TEST#
   224-0-6/b UBIN(6)     r          3 NCHANS#

 24730-0-0/d STRC(432)   r     1 TIME_FPT
 24742-0-0/d STRC        r         2 V

   173-0-0/w STRC        r     1 TOP_ERROR_CODE
   173-2-1/b UBIN(14)    r         2 ERR#

 25314-0-0/d STRC(432)   r     1 WRITE_DUMP
 25320-0-0/w STRC(72)    r         2 BUF_
 25324-0-0/d STRC(144)   r         2 V

 25300-0-0/d STRC(432)   r     1 WRITE_HDR_LINE
 25304-0-0/w STRC(72)    r         2 BUF_
 25310-0-0/d STRC(144)   r         2 V


  ****  Section 006 RoData TOP$POLTS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   106-0-0/c CHAR(2)     r     1 CRLF                     106-0-0/c STRC(18)    r     1 CRLF_
     1-0-0/w PTR         r     1 DEVICE_INFO$              72-0-0/c CHAR(19)    r     1 DUMP_QUES
    77-0-0/c CHAR(20)    r     1 FID_QUES                   0-0-0/w STRC        r     1 FPTN_
    51-0-0/w STRC(18)    r     1 HEAD_KEY
    62-0-0/w STRC(45)    r     1 IMU_KEY(0:3)
    52-0-0/w STRC(45)    r     1 IOM_KEY(0:3)
     0-0-0/w PTR         r     1 IS$                      105-0-0/c CHAR(3)     r     1 NO_RESP
    32-0-0/c CHAR(59)    r     1 NO_RETURN_MSG            104-0-0/c CHAR(3)     r     1 YES_RESP
     2-0-0/c CHAR(53)    r     1 YES_RETURN_MSG_1          20-0-0/c CHAR(38)    r     1 YES_RETURN_MSG_2

  ****  Structures  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:697  
     1-0-0/w STRC        r     1 DEVICE_INFO_
     1-0-0/b UBIN(18)    r         2 ADDR#


  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    11-0-0/w PTR         r     1 @A                        12-0-0/w PTR         r     1 @A
    11-0-0/w PTR         r     1 @A                        11-0-0/w PTR         r     1 @A
    15-0-0/w PTR         r     1 @A                        27-0-0/w PTR         r     1 @A
    11-0-0/w PTR         r     1 @A_REG                    41-0-0/w PTR         r     1 @BIT12FLAG
    40-0-0/w PTR         r     1 @BIT13FLAG                37-0-0/w PTR         r     1 @BIT17FLAG
    46-0-0/w PTR         r     1 @CHANNEL_DEVICE           46-0-0/w PTR         r     1 @CHANNEL_DEVICE
    52-0-0/w PTR         r     1 @CHANNEL_DEVICE           46-0-0/w PTR         r     1 @DCB$
    46-0-0/w PTR         r     1 @DCB$                     46-0-0/w PTR         r     1 @DCB$
    17-0-0/w PTR         r     1 @ENTRY_ADR                23-0-0/w PTR         r     1 @ICC
    25-0-0/w PTR         r     1 @IO_ENTRY_ADR             25-0-0/w PTR         r     1 @IO_ENTRY_ADR
    24-0-0/w PTR         r     1 @LIST$                    23-0-0/w PTR         r     1 @LIST$
    24-0-0/w PTR         r     1 @LIST$                     3-0-0/w PTR         r     1 @MME
     5-0-0/w PTR         r     1 @MME_INSTR$               11-0-0/w PTR         r     1 @MME_INSTR$
    45-0-0/w PTR         r     1 @MME_W1                   11-0-0/w PTR         r     1 @MME_W1
    12-0-0/w PTR         r     1 @MME_W2                   13-0-0/w PTR         r     1 @MME_W3
    14-0-0/w PTR         r     1 @MME_W4                   11-0-0/w PTR         r     1 @MME_WD1
    35-0-0/w PTR         r     1 @MME_WD1                  12-0-0/w PTR         r     1 @MME_WD2
     4-0-0/w PTR         r     1 @MREG                     17-0-0/w PTR         r     1 @NEW_PAT_PTR
    26-0-0/w PTR         r     1 @NEW_SCT_ADR              25-0-0/w PTR         r     1 @NEW_SCT_ADR
    12-0-0/w PTR         r     1 @P_AREG                   11-0-0/w PTR         r     1 @P_AREG
    12-0-0/w PTR         r     1 @P_AREG                   12-0-0/w PTR         r     1 @P_AREG
    12-0-0/w PTR         r     1 @P_AREG                   13-0-0/w PTR         r     1 @P_AREG
    17-0-0/w PTR         r     1 @P_AREG                   11-0-0/w PTR         r     1 @P_AREG
    11-0-0/w PTR         r     1 @P_MMEWD1                 36-0-0/w PTR         r     1 @P_MMEWD2
    13-0-0/w PTR         r     1 @P_QREG                   12-0-0/w PTR         r     1 @P_QREG
    20-0-0/w PTR         r     1 @P_QREG                   12-0-0/w PTR         r     1 @P_QREG
    12-0-0/w PTR         r     1 @P_X0REG                  11-0-0/w PTR         r     1 @P_X1REG
    11-0-0/w PTR         r     1 @P_X1REG                  11-0-0/w PTR         r     1 @P_X1REG
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:698  
    15-0-0/w PTR         r     1 @P_X1REG                  11-0-0/w PTR         r     1 @P_X1REG
    11-0-0/w PTR         r     1 @P_X1REG                  11-0-0/w PTR         r     1 @P_X1REG
    11-0-0/w PTR         r     1 @P_X1REG                  11-0-0/w PTR         r     1 @P_X1REG
    12-0-0/w PTR         r     1 @P_X1REG                  13-0-0/w PTR         r     1 @P_X1REG
    13-0-0/w PTR         r     1 @P_X1REG                  11-0-0/w PTR         r     1 @P_X1REG
    11-0-0/w PTR         r     1 @P_X1REG                  12-0-0/w PTR         r     1 @P_X2REG
    14-0-0/w PTR         r     1 @P_X2REG                  13-0-0/w PTR         r     1 @P_X3REG
    14-0-0/w PTR         r     1 @P_X3REG                  13-0-0/w PTR         r     1 @P_X4REG
    14-0-0/w PTR         r     1 @P_X4REG                  15-0-0/w PTR         r     1 @P_X4REG
    15-0-0/w PTR         r     1 @P_X4REG                  11-0-0/w PTR         r     1 @P_X4REG
    16-0-0/w PTR         r     1 @P_X6REG                  11-0-0/w PTR         r     1 @P_X7REG
    12-0-0/w PTR         r     1 @Q                        15-0-0/w PTR         r     1 @Q
    12-0-0/w PTR         r     1 @Q                        12-0-0/w PTR         r     1 @Q
    13-0-0/w PTR         r     1 @Q                        16-0-0/w PTR         r     1 @Q
    26-0-0/w PTR         r     1 @Q                        12-0-0/w PTR         r     1 @Q_REG
    42-0-0/w PTR         r     1 @Q_REG                    25-0-0/w PTR         r     1 @REASON
    25-0-0/w PTR         r     1 @REASON                   40-0-0/w PTR         r     1 @REASON
    47-0-0/w PTR         r     1 @REASON                   53-0-0/w PTR         r     1 @REASON
     6-0-0/w PTR         r     1 @RETURN_DELTA             14-0-0/w PTR         r     1 @RETURN_DELTA
    21-0-0/w PTR         r     1 @RETURN_DELTA             14-0-0/w PTR         r     1 @RETURN_DELTA
    13-0-0/w PTR         r     1 @RETURN_DELTA             12-0-0/w PTR         r     1 @RETURN_DELTA
    14-0-0/w PTR         r     1 @RETURN_DELTA             13-0-0/w PTR         r     1 @RETURN_DELTA
    16-0-0/w PTR         r     1 @RETURN_DELTA             14-0-0/w PTR         r     1 @RETURN_DELTA
    13-0-0/w PTR         r     1 @RETURN_DELTA             12-0-0/w PTR         r     1 @RETURN_DELTA
    12-0-0/w PTR         r     1 @RETURN_DELTA             13-0-0/w PTR         r     1 @RETURN_DELTA
    13-0-0/w PTR         r     1 @RETURN_DELTA             15-0-0/w PTR         r     1 @RETURN_DELTA
    12-0-0/w PTR         r     1 @RETURN_DELTA             14-0-0/w PTR         r     1 @RETURN_DELTA
    21-0-0/w PTR         r     1 @RETURN_DELTA             16-0-0/w PTR         r     1 @RETURN_DELTA
    12-0-0/w PTR         r     1 @RETURN_DELTA             12-0-0/w PTR         r     1 @RETURN_DELTA
    16-0-0/w PTR         r     1 @RETURN_DELTA             20-0-0/w PTR         r     1 @RETURN_DELTA
    31-0-0/w PTR         r     1 @RETURN_DELTA             12-0-0/w PTR         r     1 @RETURN_DELTA
    15-0-0/w PTR         r     1 @RETURN_DELTA             37-0-0/w PTR         r     1 @SCT
    47-0-0/w PTR         r     1 @SCT                      45-0-0/w PTR         r     1 @SCT
    45-0-0/w PTR         r     1 @SCT                      45-0-0/w PTR         r     1 @SCT
    45-0-0/w PTR         r     1 @SCT                      51-0-0/w PTR         r     1 @SCT
    45-0-0/w PTR         r     1 @SCT                      36-0-0/w PTR         r     1 @SCT
    43-0-0/w PTR         r     1 @SCTWDS_BUILT             21-0-0/w PTR         r     1 @TCX
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:699  
    31-0-0/w PTR         r     1 @TCX                      31-0-0/w PTR         r     1 @TCX
    31-0-0/w PTR         r     1 @TCX                      31-0-0/w PTR         r     1 @TCX
    31-0-0/w PTR         r     1 @TCX                      31-0-0/w PTR         r     1 @TCX
    20-0-0/w PTR         r     1 @TCX                      20-0-0/w PTR         r     1 @TCX
    17-0-0/w PTR         r     1 @TCX                      17-0-0/w PTR         r     1 @TCX
    23-0-0/w PTR         r     1 @TCX                      23-0-0/w PTR         r     1 @TCX
    25-0-0/w PTR         r     1 @TCX                      35-0-0/w PTR         r     1 @TCX
    35-0-0/w PTR         r     1 @TCX                      26-0-0/w PTR         r     1 @TCX
    25-0-0/w PTR         r     1 @TCX                      25-0-0/w PTR         r     1 @TCX
    25-0-0/w PTR         r     1 @TCX                      25-0-0/w PTR         r     1 @TCX
    35-0-0/w PTR         r     1 @TCX                      24-0-0/w PTR         r     1 @TCX
    26-0-0/w PTR         r     1 @TCX                      11-0-0/w PTR         r     1 @WD_1
    12-0-0/w PTR         r     1 @WD_2                     13-0-0/w PTR         r     1 @WD_3
    14-0-0/w PTR         r     1 @WD_4                     13-0-0/w PTR         r     1 @X0
    16-0-0/w PTR         r     1 @X1                       11-0-0/w PTR         r     1 @X1
    13-0-0/w PTR         r     1 @X1                       13-0-0/w PTR         r     1 @X1_REG
    17-0-0/w PTR         r     1 @X2                       13-0-0/w PTR         r     1 @X2
    14-0-0/w PTR         r     1 @X2                       14-0-0/w PTR         r     1 @X2_REG
    20-0-0/w PTR         r     1 @X3                       15-0-0/w PTR         r     1 @X3
    36-0-0/w PTR         r     1 @X3                       46-0-0/w PTR         r     1 @X3
    11-0-0/w PTR         r     1 @X4                       12-0-0/w PTR         r     1 @X4
    17-0-0/w PTR         r     1 @X4                       30-0-0/w PTR         r     1 @X4
    14-0-0/w PTR         r     1 @X5                       *0-0-0/w UBIN        r     1 A
    *0-0-0/w UBIN        r     1 A                         *0-0-0/w UBIN        r     1 A
    *0-0-0/w UBIN        r     1 A                       2306-0-0/c CHAR(7200)  r     1 ASCII_BUF
    26-0-0/w UBIN        r     1 BCD_BUF(0:1199)         5737-0-0/w UBIN        r     1 BCD_BUF_INX
    *0-0-0/c BIT         r     1 BIT12FLAG                 *0-0-0/c BIT         r     1 BIT13FLAG
    *0-0-0/c BIT         r     1 BIT17FLAG               5722-0-0/w SBIN        r     1 BL_INX
    13-0-0/h SBIN(18)    r     1 BOUNDS                    20-0-0/w PTR         r     1 CC$
    15-0-0/w PTR         r     1 CC$                       41-0-0/w CHAR(8)     r     1 CHANNEL_DEVICE
    *0-0-0/c CHAR(8)     r     1 CHANNEL_DEVICE            *0-0-0/c CHAR(8)     r     1 CHANNEL_DEVICE
    *0-0-0/c CHAR(8)     r     1 CHANNEL_DEVICE          5723-0-0/w SBIN        r     1 CHR_INX
    32-0-0/w PTR         r     1 CN_SCT$                   45-0-0/w PTR         r     1 CN_SCT$
  3770-0-0/w PTR         r     1 CONFIG$                   43-0-0/w PTR         r     1 CONFIG_DCB$
    47-0-0/w UBIN        r     1 CONFIG_RECORD(0:2000)
    50-0-0/w UBIN        r     1 CONFIG_RECORD(0:2000)
    54-0-0/w UBIN        r     1 CONFIG_RECORD(0:2000)
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:700  
    26-0-0/c BIT         r     1 CONTINUE                5733-0-0/w UBIN        r     1 CRLF_INDEX
    14-0-0/w PTR         r     1 CSCT$                     *0-0-0/w PTR         r     1 DCB$
    *0-0-0/w PTR         r     1 DCB$                      *0-0-0/w PTR         r     1 DCB$
    30-0-0/w PTR         r     1 DCW$                      31-0-0/w PTR         r     1 DCWLIST$
    47-0-0/w PTR         r     1 DEVICE$                   40-0-0/h UBIN(18)    r     1 DIX
  5724-0-0/w SBIN        r     1 DOT_INX                 5726-0-0/w UBIN        r     1 DUMP_ADDR_TEMP
    22-0-0/w PTR         r     1 DUMP_HDR$               5734-0-0/w UBIN        r     1 DUMP_HDR_INDEX
  5733-0-0/w UBIN        r     1 DUMP_HDR_INX              24-0-0/w UBIN        r     1 DUMP_HDR_SIZE
    23-0-0/w SBIN        r     1 DUMP_LINE_INX           5721-0-0/w UBIN        r     1 DUMP_SIZE
  5721-0-0/w SBIN        r     1 DUMP_SIZE_SBIN          5727-0-0/h UBIN(18)    r     1 DUMP_TYPE
    20-0-0/w UBIN        r     1 DUMP_WORD_INX             32-0-0/w PTR         r     1 DV_SCT$
    44-0-0/w PTR         r     1 DV_SCT$                   21-0-0/c CHAR(4)     r     1 EDIT_NAME
  5731-0-0/b BIT         r     1 EDIT_NAME_FOUND           *0-0-0/h UBIN(18)    r     1 ENTRY_ADR
    17-0-0/w PTR         r     1 EXT_STATUS$               24-0-0/w PTR         r     1 FICCDD$
    36-0-0/w BIT         r     1 FOUND                     27-0-0/c BIT         r     1 HAS_DCWS
    *0-0-0/w UBIN(11)    r     1 ICC                       30-0-0/w PTR         r     1 IO_ENTRY$
    *0-0-0/h UBIN(18)    r     1 IO_ENTRY_ADR              *0-0-0/h UBIN(18)    r     1 IO_ENTRY_ADR
    35-0-0/b BIT         r     1 LAST_DATA_DCW           5735-0-0/w UBIN        r     1 LINE_LGTH
    17-0-0/w PTR         r     1 LIST$                     *0-0-0/w PTR         r     1 LIST$
    *0-0-0/w PTR         r     1 LIST$                     *0-0-0/w PTR         r     1 LIST$
    32-0-0/w UBIN        r     1 LIST_SIZE               5725-0-0/b BIT         r     1 LP_DUMP
    *0-0-0/w PTR         r     1 MME_INSTR$                *0-0-0/w PTR         r     1 MME_INSTR$
    *0-0-0/w UBIN        r     1 MME_W2                    *0-0-0/w UBIN        r     1 MME_W3
    *0-0-0/w UBIN        r     1 MME_W4                    *0-0-0/w UBIN        r     1 MME_WD1
    *0-0-0/w UBIN        r     1 MME_WD1                   *0-0-0/w UBIN        r     1 MME_WD2
  3775-0-0/w PTR         r     1 MPC$                      32-0-0/w PTR         r     1 MTARF$
    *0-0-0/h UBIN(18)    r     1 NEW_PAT_PTR               22-0-0/h UBIN(18)    r     1 NEW_SCT_ADR
    *0-0-0/h UBIN(18)    r     1 NEW_SCT_ADR               *0-0-0/h UBIN(18)    r     1 NEW_SCT_ADR
    25-0-0/w UBIN(20)    r     1 NEXT_PAGE_AVAIL           16-0-0/w UBIN        r     1 OCT_WORDS_PER_LINE
    16-0-0/w SBIN        r     1 OCT_WORDS_PER_LINE_SBIN
  5735-0-0/w UBIN        r     1 OFFSET                    16-0-0/w STRC(11)    r     1 ONLY_ICC
    14-0-0/w PTR         r     1 PARAMETER$                27-0-0/w PTR         r     1 POLTS_IO$
    27-0-0/w PTR         r     1 POLTS_IO$                 20-0-0/w PTR         r     1 POLTS_STATUS$
    15-0-0/w PTR         r     1 POLTS_STATUS$             15-0-0/w PTR         r     1 POLTS_STATUS$
    *0-0-0/w UBIN        r     1 P_AREG                    *0-0-0/w UBIN        r     1 P_AREG
    *0-0-0/w UBIN        r     1 P_AREG                    *0-0-0/w UBIN        r     1 P_AREG
    *0-0-0/w UBIN        r     1 P_AREG                    *0-0-0/w UBIN        r     1 P_AREG
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:701  
    *0-0-0/w UBIN        r     1 P_AREG                    *0-0-0/w UBIN        r     1 P_AREG
    *0-0-0/w UBIN        r     1 P_MMEWD1                  *0-0-0/w UBIN        r     1 P_MMEWD2
    *0-0-0/w UBIN        r     1 P_QREG                    *0-0-0/w UBIN        r     1 P_QREG
    *0-0-0/w UBIN        r     1 P_QREG                    *0-0-0/w UBIN        r     1 P_QREG
    *0-0-0/h UBIN(18)    r     1 P_X0REG                   *0-0-0/h UBIN(18)    r     1 P_X1REG
    *0-0-0/h UBIN(18)    r     1 P_X1REG                   *0-0-0/h UBIN(18)    r     1 P_X1REG
    *0-0-0/h UBIN(18)    r     1 P_X1REG                   *0-0-0/h UBIN(18)    r     1 P_X1REG
    *0-0-0/h UBIN(18)    r     1 P_X1REG                   *0-0-0/h UBIN(18)    r     1 P_X1REG
    *0-0-0/h UBIN(18)    r     1 P_X1REG                   *0-0-0/h UBIN(18)    r     1 P_X1REG
    *0-0-0/h UBIN(18)    r     1 P_X1REG                   *0-0-0/h UBIN(18)    r     1 P_X1REG
    *0-0-0/h UBIN(18)    r     1 P_X1REG                   *0-0-0/h UBIN(18)    r     1 P_X1REG
    *0-0-0/h UBIN(18)    r     1 P_X1REG                   *0-0-0/h UBIN(18)    r     1 P_X2REG
    *0-0-0/h UBIN(18)    r     1 P_X2REG                   *0-0-0/h UBIN(18)    r     1 P_X3REG
    *0-0-0/h UBIN(18)    r     1 P_X3REG                   *0-0-0/h UBIN(18)    r     1 P_X4REG
    *0-0-0/h UBIN(18)    r     1 P_X4REG                   *0-0-0/h UBIN(18)    r     1 P_X4REG
    *0-0-0/h UBIN(18)    r     1 P_X4REG                   *0-0-0/h UBIN(18)    r     1 P_X4REG
    *0-0-0/h UBIN(18)    r     1 P_X6REG                   *0-0-0/h UBIN(18)    r     1 P_X7REG
    *0-0-0/w SBIN        r     1 Q                         *0-0-0/w UBIN        r     1 Q
    *0-0-0/w UBIN        r     1 Q                         *0-0-0/w UBIN        r     1 Q
    *0-0-0/w UBIN        r     1 Q                         *0-0-0/w UBIN        r     1 Q
    *0-0-0/w UBIN        r     1 Q                         *0-0-0/w BIT         r     1 Q_REG
  5734-0-0/w UBIN        r     1 RCW_                      *0-0-0/h UBIN(18)    r     1 REASON
    *0-0-0/h UBIN(18)    r     1 REASON                    33-0-0/h UBIN(18)    r     1 REASON
    *0-0-0/h UBIN(18)    r     1 REASON                    *0-0-0/h UBIN(18)    r     1 REASON
    *0-0-0/h UBIN(18)    r     1 REASON                    *0-0-0/w SBIN(18)    r     1 RETURN_DELTA
    *0-0-0/h SBIN(18)    r     1 RETURN_DELTA              *0-0-0/h SBIN(18)    r     1 RETURN_DELTA
    *0-0-0/h SBIN(18)    r     1 RETURN_DELTA              *0-0-0/h SBIN(18)    r     1 RETURN_DELTA
    *0-0-0/h SBIN(18)    r     1 RETURN_DELTA              *0-0-0/h SBIN(18)    r     1 RETURN_DELTA
    *0-0-0/h SBIN(18)    r     1 RETURN_DELTA              *0-0-0/w SBIN(18)    r     1 RETURN_DELTA
    *0-0-0/h SBIN(18)    r     1 RETURN_DELTA              *0-0-0/h SBIN(18)    r     1 RETURN_DELTA
    *0-0-0/h SBIN(18)    r     1 RETURN_DELTA              *0-0-0/h SBIN(18)    r     1 RETURN_DELTA
    *0-0-0/h SBIN(18)    r     1 RETURN_DELTA              *0-0-0/w SBIN(18)    r     1 RETURN_DELTA
    *0-0-0/h SBIN(18)    r     1 RETURN_DELTA              *0-0-0/h SBIN(18)    r     1 RETURN_DELTA
    *0-0-0/w SBIN(18)    r     1 RETURN_DELTA              *0-0-0/w SBIN(18)    r     1 RETURN_DELTA
    *0-0-0/w SBIN(18)    r     1 RETURN_DELTA              *0-0-0/w SBIN(18)    r     1 RETURN_DELTA
    *0-0-0/h SBIN(18)    r     1 RETURN_DELTA              *0-0-0/h SBIN(18)    r     1 RETURN_DELTA
    *0-0-0/h SBIN(18)    r     1 RETURN_DELTA              *0-0-0/h SBIN(18)    r     1 RETURN_DELTA
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:702  
    *0-0-0/w SBIN(18)    r     1 RETURN_DELTA              *0-0-0/w SBIN(18)    r     1 RETURN_DELTA
    37-0-0/w PTR         r     1 SCT$                      25-0-0/c BIT         r     1 SCTWDS_BUILT
    32-0-0/c BIT         r     1 SCTWDS_BUILT              *0-0-0/c BIT         r     1 SCTWDS_BUILT
    46-0-0/w PTR         r     1 SCTWRK$                   37-0-0/w PTR         r     1 STATUS$
  5736-0-0/w UBIN        r     1 SUM                       16-0-0/w UBIN        r     1 TCX
    *0-0-0/w UBIN        r     1 TCX                       23-0-0/w UBIN        r     1 TCX
    *0-0-0/w UBIN        r     1 TCX                       *0-0-0/w UBIN        r     1 TCX
    *0-0-0/w UBIN        r     1 TCX                       *0-0-0/w UBIN        r     1 TCX
    *0-0-0/w UBIN        r     1 TCX                       *0-0-0/w UBIN        r     1 TCX
    15-0-0/w UBIN        r     1 TCX                       14-0-0/w UBIN        r     1 TCX
    *0-0-0/w UBIN        r     1 TCX                       15-0-0/w UBIN        r     1 TCX
    15-0-0/w UBIN        r     1 TCX                       15-0-0/w UBIN        r     1 TCX
    *0-0-0/w UBIN        r     1 TCX                       *0-0-0/w UBIN        r     1 TCX
    *0-0-0/w UBIN        r     1 TCX                       14-0-0/w UBIN        r     1 TCX
    13-0-0/w UBIN        r     1 TCX                       14-0-0/w UBIN        r     1 TCX
    20-0-0/w UBIN        r     1 TCX                       *0-0-0/w UBIN        r     1 TCX
    *0-0-0/w UBIN        r     1 TCX                       15-0-0/w UBIN        r     1 TCX
    22-0-0/w UBIN        r     1 TCX                       *0-0-0/w UBIN        r     1 TCX
    17-0-0/w UBIN        r     1 TCX                       *0-0-0/w UBIN        r     1 TCX
    *0-0-0/w UBIN        r     1 TCX                       21-0-0/w UBIN        r     1 TCX
    *0-0-0/w UBIN        r     1 TCX                       *0-0-0/w UBIN        r     1 TCX
    *0-0-0/w UBIN        r     1 TCX                       *0-0-0/w UBIN        r     1 TCX
    *0-0-0/w UBIN        r     1 TCX                       *0-0-0/w UBIN        r     1 TCX
    *0-0-0/w UBIN        r     1 TCX                       *0-0-0/w UBIN        r     1 TCX
    11-0-0/w SBIN        r     1 TCX                       16-0-0/b UBIN(18)    r     1 TD_DCB#
    15-0-0/w PTR         r     1 TD_DCB$                   17-0-0/w PTR         r     1 TD_DCB$
    12-0-0/w PTR         r     1 TD_DCB$                   16-0-0/w PTR         r     1 TD_DCB$
    36-0-0/w PTR         r     1 TEMP$                   5716-0-0/w CHAR(12)    r     1 TEMP_ASCII_BUF
    13-0-0/w PTR         r     1 TERMSTAT$                 17-0-0/w UBIN        r     1 TP_BASE_REL_ADDR
    25-0-0/w SBIN        r     1 TP_STATS_INX              16-0-0/w PTR         r     1 TRAIN_BFR$
  5731-0-0/b BIT         r     1 VALID_RESPONSE            *0-0-0/w UBIN        r     1 WD_3
    *0-0-0/w UBIN        r     1 WD_4                      26-0-0/w PTR         r     1 WORK$
    24-0-0/w PTR         r     1 WORK$                     26-0-0/w PTR         r     1 WORK$
    *0-0-0/h UBIN(18)    r     1 X0                        *0-0-0/h UBIN(18)    r     1 X1
    *0-0-0/h UBIN(18)    r     1 X1                        *0-0-0/h UBIN(18)    r     1 X1
    *0-0-0/h SBIN(18)    r     1 X1_REG                    *0-0-0/h UBIN(18)    r     1 X2
    *0-0-0/h UBIN(18)    r     1 X2                        *0-0-0/h UBIN(18)    r     1 X2
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:703  
    *0-0-0/h UBIN(18)    r     1 X2_REG                    *0-0-0/h UBIN(18)    r     1 X3
    *0-0-0/h UBIN(18)    r     1 X3                        *0-0-0/h UBIN(18)    r     1 X3
    *0-0-0/h UBIN(18)    r     1 X3                        *0-0-0/h UBIN(18)    r     1 X4
    *0-0-0/h UBIN(18)    r     1 X4                        *0-0-0/h UBIN(18)    r     1 X4
    *0-0-0/h UBIN(18)    r     1 X4                        *0-0-0/h UBIN(18)    r     1 X5

  ****  Structures  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name

    *0-0-0/w STRC        r     1 A
     0-0-0/h UBIN(18)    r         2 A_UPPER
     0-2-0/h UBIN(18)    r         2 A_LOWER

    *0-0-0/w STRC        r     1 A
     0-0-0/b UBIN(18)    r         2 UPPER

    *0-0-0/w STRC        r     1 A_REG
     0-0-0/b UBIN(18)    r         2 ADDR#
     0-2-0/b UBIN(18)    r         2 SIZE#

    14-0-0/w STRC        r     1 CSCT_PTR
    14-0-0/b UBIN(18)    r         2 ADDR#

    45-0-0/w STRC        r     1 CSCT_PTR
    45-0-0/b UBIN(18)    r         2 ADDR#

    31-0-0/w STRC        r     1 DCWLIST_
    31-0-0/b UBIN(18)    r         2 ADDR#

    15-0-0/w STRC(11)    r     1 ICC
    15-0-0/b UBIN(3)     r         2 IOM#
    15-0-3/b UBIN(8)     r         2 CHAN#

    14-0-0/b STRC(11)    r     1 ICC
    14-0-0/b UBIN(3)     r         2 IOM#
    14-0-3/b UBIN(8)     r         2 CHAN#

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:704  
    15-0-0/b STRC(11)    r     1 ICC
    15-0-0/b UBIN(3)     r         2 IOM#
    15-0-3/b UBIN(8)     r         2 CHAN#

    *0-0-0/w STRC        r     1 ICC
     0-0-7/b STRC(11)    r         2 ICCC
     0-0-7/b UBIN(3)     r          3 IOM#

    *0-0-0/w STRC(252)   r     1 MME
     0-0-0/b STRC        r         2 INST
     0-0-0/b SBIN(18)    r          3 NO
     1-0-0/w UBIN        r         2 WD_1
     2-0-0/w UBIN        r         2 WD_2
     3-0-0/w UBIN        r         2 WD_3
     4-0-0/w UBIN        r         2 WD_4

    *0-0-0/w STRC        r     1 MME_W1
     0-0-0/b UBIN(18)    r         2 ADR

    *0-0-0/w STRC        r     1 MME_W1
     0-0-0/b UBIN(18)    r         2 ADDR#

    *0-0-0/w STRC        r     1 MME_W1
     0-0-0/b UBIN(18)    r         2 ADDR#

    *0-0-0/w STRC        r     1 MME_W2
     0-0-0/b UBIN(18)    r         2 ADDR#

    *0-0-0/d STRC(252)   r     1 MREG
     0-0-0/b UBIN(18)    r         2 X0
     0-2-0/b UBIN(18)    r         2 X1
     1-0-0/b UBIN(18)    r         2 X2
     1-2-0/b UBIN(18)    r         2 X3
     2-0-0/b UBIN(18)    r         2 X4
     2-2-0/b UBIN(18)    r         2 X5
     3-0-0/b UBIN(18)    r         2 X6
     3-2-0/b UBIN(18)    r         2 X7
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:705  
     4-0-0/b UBIN        r         2 A
     5-0-0/b UBIN        r         2 Q

    26-0-0/b STRC(21)    r     1 NEW_ICCDD
    26-0-0/b BIT (3)     r         2 FLAG#
    26-0-3/b BIT         r         2 FORMAT#
    26-0-4/b STRC(17)    r         2 ICCDD_
    26-0-4/b UBIN(3)     r          3 IOM#
    26-0-7/b UBIN(8)     r          3 CHAN#
    26-1-6/b UBIN(6)     r          3 DEV#
    26-0-4/b UBIN(17)    r         2 ICCDD#

    *0-0-0/w STRC        r     1 Q_REG
     0-0-0/b UBIN(18)    r         2 ADDR#
     0-2-0/b UBIN(18)    r         2 SIZE#

    *0-0-0/w STRC        r     1 Q_REG_
     0-0-0/b BIT         r         2 TAPE_URC_FLAG#
     0-0-6/b STRC(12)    r         2 TAPE_ICC
     0-0-6/b BIT         r          3 FORMAT#
     0-0-7/b STRC(11)    r          3 OLD_FORMAT
     0-0-7/b UBIN(5)     r           4 IOM#
     0-1-3/b UBIN(6)     r           4 CHAN#
     0-0-7/b STRC(11)    r          3 NEW_FORMAT
     0-0-7/b UBIN(3)     r           4 IOM#
     0-1-1/b UBIN(8)     r           4 CHAN#

  5734-0-0/w STRC        r     1 RCW
  5734-0-0/b UBIN(18)    r         2 RCD_LGTH#

    *0-0-0/h STRC(18)    r     1 RELEASE_ID
     0-0-0/b UBIN(6)     r         2 TYPE

    20-0-0/w STRC(333)   r     1 SCT
    24-2-0/c BIT         r         2 BIT17
    24-3-0/c BIT         r         2 BIT13
    25-0-0/c BIT         r         2 BIT12
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:706  

    *0-0-0/w STRC(333)   r     1 SCT
     1-0-0/c UBIN(6)     r         2 TEST_TYPE

    *0-0-0/w STRC(333)   r     1 SCT
     0-0-0/w STRC        r         2 FICCDD
     0-0-0/b BIT (3)     r          3 FLAG#
     0-0-3/b BIT         r          3 FORMAT#
     0-0-4/b UBIN(2)     r          3 IOM#
     0-0-6/b UBIN(18)    r          3 CHANNEL#
     0-2-6/b UBIN(6)     r          3 DEVICE#
     1-0-0/c UBIN(6)     r         2 TEST_TYPE

    *0-0-0/w STRC(333)   r     1 SCT
     0-0-0/w STRC        r         2 FICCDD
     0-0-4/b UBIN(2)     r          3 IOM#
     0-0-6/b UBIN(18)    r          3 CHANNEL#

    *0-0-0/w STRC(333)   r     1 SCT
     0-0-0/w STRC        r         2 FICCDD
     0-0-4/b UBIN(2)     r          3 IOM#
     0-0-6/b UBIN(18)    r          3 CHANNEL#
     0-2-6/b UBIN(6)     r          3 DEVICE#
     1-0-0/c UBIN(6)     r         2 TEST_TYPE

    *0-0-0/w STRC(333)   r     1 SCT
     5-1-0/c CHAR(8)     r         2 MODEL

    *0-0-0/w STRC(333)   r     1 SCT
     0-0-0/w STRC        r         2 FICCDD
     0-2-6/b UBIN(6)     r          3 DEVICE#

    *0-0-0/w STRC(333)   r     1 SCT
     0-0-0/w STRC        r         2 FICCDD
     0-0-4/b UBIN(2)     r          3 IOM#
     0-0-6/b UBIN(18)    r          3 CHANNEL#
     1-0-0/c UBIN(6)     r         2 TEST_TYPE
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:707  
     1-2-0/c STRC(108)   r         2 FIRMWARE
     1-2-0/c CHAR(4)     r          3 TYPE#
     2-2-0/c CHAR(4)     r          3 LP#
     3-2-0/c CHAR(4)     r          3 RP#
     7-1-0/c CHAR(8)     r         2 MPC_MODEL

    *0-0-0/w STRC(333)   r     1 SCT
     1-0-0/c UBIN(6)     r         2 TEST_TYPE
     1-1-0/c UBIN(6)     r         2 DEVICE_CODE
     1-2-0/c STRC(108)   r         2 FIRMWARE
     1-2-0/c CHAR(4)     r          3 TYPE#
     4-2-0/c BIT         r         2 BIT17
     4-3-0/c BIT         r         2 BIT13
     5-0-0/c BIT         r         2 BIT12
     5-1-0/c CHAR(8)     r         2 MODEL

    *0-0-0/w STRC(333)   r     1 SCT
     0-0-0/w STRC        r         2 FICCDD
     0-0-0/b BIT (3)     r          3 FLAG#
     0-0-3/b BIT         r          3 FORMAT#
     0-0-4/b UBIN(2)     r          3 IOM#
     0-0-6/b UBIN(18)    r          3 CHANNEL#
     0-2-6/b UBIN(6)     r          3 DEVICE#
     1-0-0/c UBIN(6)     r         2 TEST_TYPE
     1-1-0/c UBIN(6)     r         2 DEVICE_CODE
     1-2-0/c STRC(108)   r         2 FIRMWARE
     1-2-0/c CHAR(4)     r          3 TYPE#
     2-2-0/c CHAR(4)     r          3 LP#
     3-2-0/c CHAR(4)     r          3 RP#
     4-2-0/c BIT         r         2 BIT17
     4-3-0/c BIT         r         2 BIT13
     5-0-0/c BIT         r         2 BIT12
     5-1-0/c CHAR(8)     r         2 MODEL
     7-1-0/c CHAR(8)     r         2 MPC_MODEL

    37-0-0/w STRC        r     1 SCT_
    37-0-0/b UBIN(18)    r         2 ADDR#
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:708  

    44-0-0/w STRC        r     1 SCT_PTR
    44-0-0/b UBIN(18)    r         2 ADDR#

    *0-0-0/w STRC        r     1 WD_1
     0-0-0/h UBIN(18)    r         2 FICCDD_ADDR#

    *0-0-0/w STRC        r     1 WD_2
     0-2-0/h UBIN(18)    r         2 MTAR_FLAG_ADDR#

    *0-0-0/h STRC(18)    r     1 X1
     0-0-6/b BIT         r         2 FORMAT#
     0-0-7/b STRC(11)    r         2 OLD_ICC
     0-0-7/b UBIN(5)     r          3 IOM#
     0-1-3/b UBIN(6)     r          3 CHAN#
     0-0-7/b STRC(11)    r         2 NEW_ICC
     0-0-7/b UBIN(3)     r          3 IOM#
     0-1-1/b UBIN(8)     r          3 CHAN#

    *0-0-0/h STRC(18)    r     1 X1
     0-0-6/b BIT         r         2 FORMAT#
     0-0-7/b STRC(11)    r         2 OLD_ICC
     0-0-7/b UBIN(5)     r          3 IOM#
     0-1-3/b UBIN(6)     r          3 CHAN#
     0-0-7/b STRC(11)    r         2 NEW_ICC
     0-0-7/b UBIN(3)     r          3 IOM#
     0-1-1/b UBIN(8)     r          3 CHAN#


  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$

  ****  Structures  ****
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:709  
OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(432)   r     1 CONSOLE_FPT
     4-0-0/w STRC(72)    r         2 BUF_

     0-0-0/d STRC(504)   r     1 READ_IO
     4-0-0/w STRC(72)    r         2 BUF_

     0-0-0/w STRC(288)   r     1 TOP$SCT(0:7)
     0-0-0/w STRC(144)   r         2 CN
     4-0-0/w STRC(144)   r         2 DV
     4-0-0/w UBIN        r          3 WD0#
     5-0-0/w UBIN        r          3 WD1#

     0-0-0/d STRC(288)   r     1 TOT$DMC
     2-0-0/d STRC(72)    r         2 TOP$TCP
     3-0-0/b PTR         r          3 PTR$

     0-0-0/w STRC(495)   r     1 TOT$ECP
     3-0-0/w STRC(72)    r         2 IO
     4-0-0/w SBIN        r          3 COUNT
     7-0-0/w STRC(216)   r         2 SUBEXEC
     7-0-0/w UBIN        r          3 CURRENT
    10-0-0/w UBIN        r          3 ADDRESS
    11-0-0/c CHAR(4)     r          3 EDIT_NAME
    13-0-0/w PTR         r          3 WRAPUP$
    14-0-0/w SBIN        r          3 TEST_PAGE_COUNT
    15-2-0/c UBIN(9)     r         2 BOOT_CPU_TYPE

     0-0-0/c STRC(639)   r     1 TOT$TOLTS
     0-0-0/c STRC(90)    r         2 LINK_DATE
     1-2-0/c BIT         r          3 BCD


  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:710  
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 DUMP_WORD_OCT
     0-0-0/w UBIN        r     1 EXT_STATUS(0:7)
     0-0-0/w UBIN        r     1 IO_ENTRY_WORDS(0:10)
     0-0-0N  NULL        r     1 M$CNFGFILE                 0-0-0N  NULL        r     1 M$DEVCNFG
     0-0-0N  NULL        r     1 M$DUMP                     0-0-0N  NULL        r     1 M$MCACNFG
     0-0-0N  NULL        r     1 M$UC                       0-0-0/w UBIN        r     1 PARAMETER
     0-0-0/w BIT         r     1 PARAMETER_BIT              0-0-0/w CHAR(288)   r     1 TRAIN_BFR

  ****  Structures  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT
   102-0-0/b STRC        r         2 ERR

     0-0-0/w STRC(2448)  r     1 B$ALT
   102-0-0/b STRC        r         2 ERR

     0-0-0/w STRC(2448)  r     1 B$EXCFR
   102-0-0/b STRC        r         2 ERR

     0-0-0/d STRC(8856)  r     1 B$JIT
     6-0-0/c CHAR(8)     r         2 FACCN
   204-0-0/h UBIN(18)    r         2 TDP

     0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/w PTR         r         2 ALT$

     0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/w PTR         r         2 ALT$

     0-0-0/w STRC(144)   r     1 CONTROLLER_SCT
     0-0-0/b STRC        r         2 W0
     0-0-1/b BIT         r          3 VOLATILE_FW#
     0-0-2/b BIT         r          3 MPC#

PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:711  
     0-0-0/w STRC(144)   r     1 CONTROLLER_SCT
     0-0-0/w BIT         r         2 W0#

     0-0-0/w STRC        r     1 DCW
     0-0-0/b UBIN(18)    r         2 ADDR#
     0-2-4/b UBIN(2)     r         2 TYPE#

     0-0-0/w STRC(144)   r     1 DEVICE_SCT
     0-0-0/b STRC        r         2 W0
     0-0-0/b UBIN(6)     r          3 DEVICE_TYPE#
     0-0-6/b UBIN(6)     r          3 DEVICE_NO#
     0-1-3/b BIT         r          3 BIT12#
     0-1-4/b BIT         r          3 BIT13#
     0-1-5/b BIT         r          3 BIT14#
     0-1-8/b BIT         r          3 BIT17#
     1-0-0/b STRC        r         2 W1
     1-2-3/b BIT (4)     r          3 DENSITIES#

     0-0-0/w STRC(144)   r     1 DEVICE_SCT
     0-0-0/w BIT         r         2 W0#
     1-0-0/w BIT         r         2 W1#

     0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/b BIT         r         2 FLPW#
     7-0-0/w PTR         r         2 TDEXTST$
    10-0-0/c STRC(288)   r         2 NAME#
    10-1-0/c CHAR(31)    r          3 C
    27-0-0/b BIT (72)    r         2 TDSTAT#
    41-0-0/w SBIN        r         2 CONNCT#
    42-0-0/w SBIN        r         2 CHANTIME#
   140-0-0/d ASTR(9)     r         2 DCBNAME
   140-0-4/b UBIN(5)     r          3 L

     0-0-0/d ASTR(3528)  r     1 F$DCB
    31-2-4/b BIT         r         2 FCD#
   140-0-0/d ASTR(9)     r         2 DCBNAME
   140-0-4/b UBIN(5)     r          3 L
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:712  

     0-0-0/w STRC        r     1 FICCDD
     0-0-3/b BIT         r         2 FORMAT#
     0-0-4/b UBIN(2)     r         2 IOM#
     0-0-6/b UBIN(6)     r         2 CHAN#
     0-1-3/b UBIN(6)     r         2 DEV#

     0-0-0/w STRC        r     1 FICCDD
     0-0-0/b BIT (3)     r         2 FLAG#
     0-0-3/b BIT         r         2 FORMAT#
     0-0-4/b UBIN(2)     r         2 IOM#
     0-0-6/b UBIN(6)     r         2 CHAN#
     0-1-3/b UBIN(6)     r         2 DEV#
     0-2-0/b UBIN(6)     r         2 TEST_TYPE#

     0-0-0/w STRC        r     1 IDCW
     0-0-0/b BIT (6)     r         2 DEVICE_CMD#
     0-0-6/b BIT (6)     r         2 DEVICE_ADDRESS#
     0-2-0/b UBIN(3)     r         2 TYPE#
     0-2-4/b BIT         r         2 CONTINUE#
     0-2-6/b UBIN(6)     r         2 CHANNEL_CMD#
     0-3-3/b UBIN(6)     r         2 RECORD_COUNT#

     0-0-0/w STRC(396)   r     1 IO_ENTRY
     2-0-0/b STRC        r         2 W2
     2-0-3/b UBIN(15)    r          3 SCT_ADR#

     0-0-0/w STRC        r     1 LIST_ITEM
     0-0-0/w STRC        r         2 E
     0-0-0/c UBIN(9)     r          3 BASE_CHN
     0-1-0/c SBIN(9)     r          3 NUMB_CHN

     0-0-0/w STRC        r     1 LIST_ITEM
     0-0-0/w STRC        r         2 E
     0-0-0/c UBIN(9)     r          3 BASE_CHN
     0-1-0/c SBIN(9)     r          3 NUMB_CHN
     0-2-0/c STRC(18)    r          3 FLAGS
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:713  
     0-2-0/b BIT         r           4 NO_REBOOT
     0-0-0/w SBIN        r         2 FENCE

     0-0-0/w STRC        r     1 MTAR_DATA
     0-3-6/b BIT (3)     r         2 WR_FLAG#

     0-0-0/w STRC        r     1 PARAMETER_
     0-0-0/b UBIN(18)    r         2 UPPER#

     0-0-0/w STRC        r     1 PARAMETER_BYTE
     0-0-0/b SBIN(9)     r         2 BYTE0
     0-1-0/b SBIN(9)     r         2 BYTE1
     0-2-0/b SBIN(9)     r         2 BYTE2
     0-3-0/b SBIN(9)     r         2 BYTE3

     0-0-0/w STRC(360)   r     1 POINIT
     1-0-0/h UBIN(18)    r         2 WWFLAG_ADR#
     1-2-0/h UBIN(18)    r         2 OP_SYS_CODE_ADR#
     2-0-0/h UBIN(18)    r         2 LSTLOC_ADR#
     3-0-0/h UBIN(18)    r         2 TBWRK_ADR#
     4-0-0/h UBIN(18)    r         2 TDIOC_ADR#
     5-0-0/h UBIN(18)    r         2 WRADD_ADR#
     7-0-0/h UBIN(18)    r         2 MMEXEC_ADR#

     0-0-0/w STRC(360)   r     1 SCTWRK
     0-0-0/h UBIN(18)    r         2 SCT_ADR#
     0-2-6/b UBIN(12)    r         2 XBICC#
     1-0-0/h UBIN(18)    r         2 ALTSCT_ADR#
     1-2-0/b UBIN(6)     r         2 GCOS_TYPE_CODE#
     2-0-0/h UBIN(18)    r         2 CSCT_ADR#
     2-2-0/b BIT (4)     r         2 IOC_TYPE#
     2-2-4/b BIT (4)     r         2 CTLR_TYPE#
     3-0-0/h UBIN(18)    r         2 MPC_SCT_ADR#
     3-2-0/h UBIN(18)    r         2 MPC_INDEX#
     4-0-0/b STRC        r         2 CRCST_0
     4-0-1/b BIT         r          3 VOLATILE_FW#
     4-0-2/b BIT         r          3 MPC#
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:714  
     5-0-0/b STRC        r         2 CRCST_1
     5-0-7/b BIT         r          3 BIT7#
     5-0-8/b BIT         r          3 BIT8#
     7-0-0/b STRC        r         2 CRCST_3
     7-1-0/b BIT         r          3 BIT9#
    10-0-0/b STRC        r         2 SCT_0
    10-0-0/b UBIN(6)     r          3 DEV_TYPE#
    10-1-3/b BIT         r          3 BIT12#
    10-1-4/b BIT         r          3 SPEED#
    10-1-8/b BIT         r          3 BIT17#
    11-0-0/b STRC        r         2 SCT_1

     0-0-0/w STRC(72)    r     1 STATUS
     0-0-0/b BIT         r         2 TERMINATION_INDICATOR#
     0-0-2/b BIT (4)     r         2 MAJOR#
     0-0-6/b BIT (6)     r         2 MINOR#
     0-1-6/b BIT         r         2 LOST_INTERRUPT#
     0-1-7/b BIT         r         2 INTERRUPT_INDICATOR#
     0-1-8/b BIT         r         2 ABORT_INDICATOR#
     1-0-0/b UBIN(18)    r         2 DATA_ADDRESS_RESIDUE#

     0-0-0/w STRC(396)   r     1 TD$DEV
     0-0-0/c CHAR(8)     r         2 MODEL

     0-0-0/w STRC(648)   r     1 TD$HEAD
     0-2-0/b UBIN(18)    r         2 NUMIOMS

     0-0-0/w STRC(9540)  r     1 TD$IOM
     0-0-0/c CHAR(8)     r         2 DEVNAME(0:127)

     0-0-0/w STRC(612)   r     1 TD$MPC
     0-0-0/c CHAR(8)     r         2 MODEL
     2-0-0/b STRC        r         2 IOCHAN(0:7)
     2-0-0/b BIT         r          3 PRESENCE
     2-1-0/b UBIN(9)     r          3 IOM
     2-2-0/b UBIN(9)     r          3 LOCHAN
    13-0-0/c CHAR(4)     r         2 FWNAME
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:715  
    14-0-0/c CHAR(4)     r         2 LPFWNAME
    15-0-0/c CHAR(4)     r         2 CRPFWNAME

     0-0-0/d STRC(5904)  r     1 TOP$TCP(0:7)
     0-0-0/w BIT         r         2 IN_USE
     1-0-0/w STRC(21)    r         2 FICCDD
     1-0-0/b BIT (3)     r          3 FLAG#
     1-0-3/b BIT         r          3 FORMAT#
     1-0-4/b UBIN(3)     r          3 IOM#
     1-0-7/b UBIN(8)     r          3 CHAN#
     1-1-6/b UBIN(6)     r          3 DEV#
     1-0-0/w STRC(21)    r         2 ICCDD
     1-0-4/b UBIN(17)    r          3 ICCDD#
     1-0-0/w STRC(21)    r         2 ICC
     1-0-4/b UBIN(11)    r          3 ICC#
     2-0-0/c CHAR(3)     r         2 TEST_TYPE
     2-3-0/c CHAR(8)     r         2 MPC_MODEL
     4-3-0/c CHAR(8)     r         2 DEVICE_MODEL
     7-0-0/h UBIN(18)    r         2 DEVICE_CODE
     7-2-0/h UBIN(18)    r         2 DCB#
    10-0-0/h STRC(72)    r         2 ADR
    10-0-0/h UBIN(18)    r          3 SCT
    10-2-0/h UBIN(18)    r          3 CSCT
    11-0-0/h UBIN(18)    r          3 PAT
    11-2-0/h UBIN(18)    r          3 IOENTRY
    12-0-0/c STRC(6)     r         2 IO
    12-0-0/b BIT         r          3 ITR_INTERRUPT
    12-0-1/b BIT         r          3 TERMINATED
    12-0-2/b BIT         r          3 CONTROLLER
    12-0-3/b BIT         r          3 ISSUED
    12-0-4/b BIT         r          3 DONE
    12-0-5/b BIT         r          3 CC_PAID
    12-1-0/c STRC(18)    r         2 SCT
    12-1-0/b BIT         r          3 BIT17
    12-1-1/b BIT         r          3 BIT13
    12-1-2/b BIT         r          3 BIT12
    12-2-0/c BIT (4)     r          3 TAPE_DENSITY
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:716  
    12-3-0/c STRC(117)   r         2 FIRMWARE
    13-0-0/c CHAR(4)     r          3 TYPE
    14-0-0/c CHAR(4)     r          3 LP_TYPE
    15-0-0/c CHAR(4)     r          3 RP_TYPE
    16-0-0/w STRC(162)   r         2 STATS
    16-0-0/w UBIN        r          3 LOAD_ADDR
    20-0-0/c CHAR(4)     r          3 EDIT_NAME
    24-0-0/d STRC(5184)  r         2 BFR
    24-0-0/d CHAR(288)   r          3 TRAIN_IMAGE
   134-0-0/d CHAR(288)   r          3 VFC_IMAGE



   Procedure TOP$POLTS requires 5747 words for executable code.
   Procedure TOP$POLTS requires 3044 words of local(AUTO) storage.

    No errors detected in file TOP$POLTS.:E05TSI    .
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:717  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:718  
          MINI XREF LISTING

A IN PROCEDURE SET_RETURN_VALUES
     15245**DCL     15241--PROC    15278<<ASSIGN
A IN PROCEDURE TOP$MME_ALCMCA
     10684**DCL     10682--PROC
A.A_LOWER IN PROCEDURE TOP$MME_ALCMCA
     10686**DCL     10697>>ASSIGN
A.A_UPPER IN PROCEDURE TOP$MME_ALCMCA
     10685**DCL     10696>>ASSIGN
A IN PROCEDURE TOP$MME_CHANTM
     11663**DCL     11660--PROC    11670<<ASSIGN
A IN PROCEDURE TOP$MME_HUNGTM
     11901**DCL     11899--PROC
A.UPPER IN PROCEDURE TOP$MME_HUNGTM
     11902**DCL     11911<>CALL
A IN PROCEDURE TOP$MME_PACMAN
     12334**DCL     12332--PROC    12361>>DOCASE
A IN PROCEDURE TOP$MME_TESTIO
     14741**DCL     14733--PROC    14759<>CALL
ACCOUNT_NAME IN PROCEDURE GET_DEVICE_CODE
     13474**DCL     13309--DCLINIT
ADDR_TRANS$ IN PROCEDURE TOP$MME_WRDUMP
     15389**DCL     16138<<ASSIGN
ALLOCATE_DEVICE IN PROCEDURE TOP$MME_ALLOCR
     11117**PROC    10877--CALL
ASCII_BUF IN PROCEDURE TOP$MME_WRDUMP
     15384**DCL     16126<>CALL    16234>>CALLBLT 16240>>CALLBLT 16254--ASSIGN  16261>>CALLBLT 16267>>CALLBLT
A_REG IN PROCEDURE TOP$MME_WRDUMP
     15344**DCL     15321--PROC
A_REG.ADDR# IN PROCEDURE TOP$MME_WRDUMP
     15345**DCL     16093>>ASSIGN
A_REG.SIZE# IN PROCEDURE TOP$MME_WRDUMP
     15346**DCL     16094>>ASSIGN
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:719  
B$ALT.CODE
     10194**DCL     10194--REDEF   10195--REDEF   10195--REDEF
B$ALT.ERR
     10195**DCL     11135<>CALL    11472<>CALL    12438<>CALL    12570<>CALL    12819<>CALL    13798<>CALL
B$ALT.ERR.ERR#
     10196**DCL     10196--REDEF
B$ALT.EVID
     10195**DCL     10195--REDEF   10195--REDEF
B$ALT.CODE IN PROCEDURE TOP$MME_WRDUMP
     15330**DCL     15330--REDEF   15331--REDEF   15331--REDEF
B$ALT.ERR IN PROCEDURE TOP$MME_WRDUMP
     15331**DCL     16077<>CALL    16182<>CALL
B$ALT.ERR.ERR# IN PROCEDURE TOP$MME_WRDUMP
     15332**DCL     15332--REDEF
B$ALT.EVID IN PROCEDURE TOP$MME_WRDUMP
     15331**DCL     15331--REDEF   15331--REDEF
B$EXCFR.ASL IN PROCEDURE GET_TEST_DCB
     10979**DCL     10979--REDEF
B$EXCFR.ERR IN PROCEDURE GET_TEST_DCB
     10993**DCL     11024<>CALL
B$EXCFR.ERR.ERR# IN PROCEDURE GET_TEST_DCB
     10993**DCL     10993--REDEF
B$EXCFR.EVID IN PROCEDURE GET_TEST_DCB
     10992**DCL     10992--REDEF   10993--REDEF
B$EXCFR.IR IN PROCEDURE GET_TEST_DCB
     10980**DCL     10980--REDEF
B$EXCFR.PREVSZ IN PROCEDURE GET_TEST_DCB
     10979**DCL     10979--REDEF
B$EXCFR.SUBC IN PROCEDURE GET_TEST_DCB
     10991**DCL     10991--REDEF   10992--REDEF   10992--REDEF
B$JIT.CPFLAGS1.SLEAZE
       481**DCL       481--REDEF
B$JIT.ERR.MID
       388**DCL       388--REDEF
B$JIT.FACCN
       387**DCL     16049>>ASSIGN
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:720  
B$JIT.JRESPEAK
       549**DCL       550--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       658**DCL       658--REDEF     659--REDEF
B$JIT.PNR
       562**DCL       562--REDEF
B$JIT.TDP
       547**DCL     11443>>ASSIGN  12668>>ASSIGN  14799>>ASSIGN
B$JIT.TSLINE
       656**DCL       657--REDEF
B$JIT$
      9910**DCL       382--IMP-PTR 11443>>ASSIGN  12668>>ASSIGN  14799>>ASSIGN  16049>>ASSIGN
B$TCB.ALT$
     10201**DCL     11024>>CALL    11135>>CALL    11472>>CALL    12438>>CALL    12570>>CALL    12819>>CALL
     13798>>CALL
B$TCB.ALT$ IN PROCEDURE TOP$MME_WRDUMP
     15326**DCL     16077>>CALL    16182>>CALL
B$TCB$
      9911**DCL     11024>>CALL    11135>>CALL    11472>>CALL    12438>>CALL    12570>>CALL    12819>>CALL
     13798>>CALL    16077>>CALL    16182>>CALL
BAD_FID IN PROCEDURE GET_DUMP_OUTPUT_MODE
     16028**LABEL   16022--CALLALT
BAD_FID_OPEN IN PROCEDURE OPEN_DUMP_RECEPTICLE
     16081**LABEL   16073--CALLALT
BAD_LIST_ABORT IN PROCEDURE BUILD_DCW_LIST
     15186**PROC    15151--CALL    15155--CALL    15180--CALL
BAD_LP_OPEN IN PROCEDURE OPEN_DUMP_RECEPTICLE
     16077**LABEL   16072--CALLALT
BAD_SURVEY IN PROCEDURE BUILD_TAPE_SCT
     11332**LABEL   11326--CALLALT
BCD_BUF IN PROCEDURE TOP$MME_WRDUMP
     15383**DCL     16126<>CALL    16200<<ASSIGN  16208<<ASSIGN
BCD_BUF_INX IN PROCEDURE GET_BCD_BUFFER
     16196**DCL     16202<<ASSIGN  16208>>ASSIGN  16209<<ASSIGN  16209>>ASSIGN
BIT12FLAG IN PROCEDURE BUILD_SCTWRK
     16306**DCL     16302--PROC
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:721  
BIT13FLAG IN PROCEDURE BUILD_SCTWRK
     16305**DCL     16302--PROC
BIT17FLAG IN PROCEDURE BUILD_SCTWRK
     16304**DCL     16302--PROC
BL_INX IN PROCEDURE TOP$MME_WRDUMP
     15392**DCL     15968<<CALLBLT 15971>>IF      15971>>IF      15972>>IF      15972>>IF      15975>>IF
     15975>>IF      16014<<CALLBLT 16017>>IF      16043>>IF      16045>>ASSIGN  16048>>ASSIGN  16056>>ASSIGN
BOGUS_TDOPEN IN PROCEDURE GET_DEVICE_CODE
     13751**PROC    13497--CALL
BOUNDS IN PROCEDURE TOP$MME_POINIT
     12616**DCL     12668<<ASSIGN  12670>>ASSIGN
BREAK_HDR_LINE IN PROCEDURE EXECUTE_DUMP
     16220**PROC    16127--CALL
BUILD_1ST_IDCW IN PROCEDURE BUILD_DCW_LIST
     15003**PROC    14978--CALL    14983--CALL    14992--CALL
BUILD_2ND_IDCW IN PROCEDURE BUILD_DCW_LIST
     15071**PROC    14980--CALL
BUILD_CHN_3_SCT IN PROCEDURE BUILD_DEVICE_SCT
     11273**PROC    11240--CALL
BUILD_CONSOLE_SCT IN PROCEDURE BUILD_DEVICE_SCT
     11553**PROC    11242--CALL
BUILD_CONTROLLER_SCT IN PROCEDURE TOP$MME_ALLOCR
     11572**PROC    10892--CALL
BUILD_CPUNCH_SCT IN PROCEDURE BUILD_DEVICE_SCT
     11534**PROC    11255--CALL
BUILD_CREADER_SCT IN PROCEDURE BUILD_DEVICE_SCT
     11515**PROC    11253--CALL
BUILD_DCW_LIST IN PROCEDURE TOP$MME_TESTIO
     14946**PROC    14757--CALL
BUILD_DEVICE_SCT IN PROCEDURE TOP$MME_ALLOCR
     11209**PROC    10886--CALL
BUILD_DISK_SCT IN PROCEDURE BUILD_DEVICE_SCT
     11293**PROC    11249--CALL
BUILD_FAKE_DCW IN PROCEDURE BUILD_DCW_LIST
     15110**PROC    14979--CALL    14985--CALL
BUILD_PRINTER_SCT IN PROCEDURE BUILD_DEVICE_SCT
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:722  
     11493**PROC    11251--CALL
BUILD_SCTWRK
     16302**PROC    10895--CALL    13075--CALL
BUILD_SCT_FICCDD IN PROCEDURE GET_DEVICE_CODE
     13541**PROC    13479--CALL
BUILD_TAPE_SCT IN PROCEDURE BUILD_DEVICE_SCT
     11316**PROC    11244--CALL
BUILD_TEST_CONTROL_ENTRY IN PROCEDURE TOP$MME_SCTCMP
     14247**PROC    13067--CALL
CC$ IN PROCEDURE GIVE_COURTESY_CALL
     12018**DCL     12025<<ASSIGN  12026<>CALL
CC$ IN PROCEDURE PAY_TIO_CC
     16729**DCL     16737<<ASSIGN  16738<>CALL
CHANNEL_DEVICE IN PROCEDURE GET_CHANNEL_DEVICE
     13654**DCL     13623--PROC    13728<<ASSIGN
CHANNEL_DEVICE IN PROCEDURE GET_DEVICE_CODE
     13228**DCL     13491<>CALL    13504<>CALL
CHANNEL_DEVICE IN PROCEDURE MAP_MPC_DEVICE
     14018**DCL     13987--PROC    14050>>ASSIGN
CHANNEL_DEVICE IN PROCEDURE VALIDATE_DEVICE_TYPE
     13931**DCL     13900--PROC    13936>>DOSELCT 13938<>CALL
CHANNEL_MSG IN PROCEDURE REPORT_CHANNELS
     12485**DCL     12513--ASSIGN
CHANNEL_MSG.CHN# IN PROCEDURE REPORT_CHANNELS
     12487**DCL     12509<<CALLBLT
CHANNEL_MSG.NUM# IN PROCEDURE REPORT_CHANNELS
     12489**DCL     12511<<ASSIGN  12512<<CALLBLT
CHR_INX IN PROCEDURE TOP$MME_WRDUMP
     15393**DCL     15962<<ASSIGN  15963>>DOWHILE 15963>>DOWHILE 15964<<ASSIGN  15964>>ASSIGN  15968>>CALLBLT
     15971>>IF      15971>>IF      15972>>IF      15972>>IF      15972>>IF      15975>>IF      15975>>IF
     15975>>IF      15991>>IF      16010<<ASSIGN  16011>>DOWHILE 16011>>DOWHILE 16012<<ASSIGN  16012>>ASSIGN
     16014>>CALLBLT 16017>>IF      16017>>IF      16036>>CALLBLT 16037>>IF      16045>>ASSIGN  16045>>ASSIGN
     16048>>ASSIGN  16052>>ASSIGN  16052>>ASSIGN  16055>>ASSIGN
CLOSE_CONFIG IN PROCEDURE GET_DEVICE_CODE
     13414**DCL     13493<>CALL    13499<>CALL    13506<>CALL    13513<>CALL    13517<>CALL
CLOSE_CONFIG.SN_ IN PROCEDURE GET_DEVICE_CODE
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:723  
     13414**DCL     13414--REDEF
CLOSE_CONFIG.UTL_ IN PROCEDURE GET_DEVICE_CODE
     13415**DCL     13415--REDEF
CLOSE_CONFIG.V IN PROCEDURE GET_DEVICE_CODE
     13419**DCL     13414--DCLINIT
CLOSE_CONFIG.V.EXPIRE# IN PROCEDURE GET_DEVICE_CODE
     13429**DCL     13429--REDEF
CLOSE_CONFIG.V.TYPE# IN PROCEDURE GET_DEVICE_CODE
     13427**DCL     13427--REDEF
CLOSE_CONFIG.V.XTNSIZE# IN PROCEDURE GET_DEVICE_CODE
     13424**DCL     13424--REDEF   13426--REDEF
CLOSE_DUMP IN PROCEDURE TOP$MME_WRDUMP
     15487**DCL     16284<>CALL
CLOSE_DUMP.SN_ IN PROCEDURE TOP$MME_WRDUMP
     15487**DCL     15487--REDEF
CLOSE_DUMP.UTL_ IN PROCEDURE TOP$MME_WRDUMP
     15488**DCL     15488--REDEF
CLOSE_DUMP.V IN PROCEDURE TOP$MME_WRDUMP
     15492**DCL     15487--DCLINIT
CLOSE_DUMP.V.EXPIRE# IN PROCEDURE TOP$MME_WRDUMP
     15502**DCL     15502--REDEF
CLOSE_DUMP.V.TYPE# IN PROCEDURE TOP$MME_WRDUMP
     15500**DCL     15500--REDEF
CLOSE_DUMP.V.XTNSIZE# IN PROCEDURE TOP$MME_WRDUMP
     15497**DCL     15497--REDEF   15499--REDEF
CLOSE_DUMP_RECEPTICLE IN PROCEDURE TOP$MME_WRDUMP
     16279**PROC    15913--CALL
CN_SCT$ IN PROCEDURE BUILD_CONTROLLER_SCT
     11584**DCL     11588<<ASSIGN  11589>>ASSIGN  11595>>ASSIGN  11596>>ASSIGN
CN_SCT$ IN PROCEDURE BUILD_SCTWRK
     16347**DCL     16348--REDEF   16368<<ASSIGN  16418>>ASSIGN
CONFIG$ IN PROCEDURE GET_CHANNEL_DEVICE
     13665**DCL     13713<<ASSIGN  13717>>IF      13728>>ASSIGN
CONFIG_DCB$ IN PROCEDURE GET_DEVICE_CODE
     13229**DCL     13497<>CALL    13503<>CALL    13511<>CALL
CONFIG_RECORD IN PROCEDURE GET_CHANNEL_DEVICE
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:724  
     13664**DCL     13713--ASSIGN  13715--ASSIGN
CONFIG_RECORD IN PROCEDURE GET_MODEL_ID
     13851**DCL     13876--ASSIGN  13878--ASSIGN
CONFIG_RECORD IN PROCEDURE MAP_MPC_DEVICE
     14023**DCL     14052--ASSIGN  14054--ASSIGN
CONSOLE_FPT.BUF_
      9930**DCL     12498<<ASSIGN  12502<<ASSIGN  12504<<ASSIGN  12513<<ASSIGN  15941<<ASSIGN
CONSOLE_FPT.STATION_
      9932**DCL      9932--REDEF
CONSOLE_FPT.V.DVBYTE.VFC#
      9939**DCL      9939--REDEF
CONTINUE IN PROCEDURE BUILD_DCW_LIST
     14949**DCL     14987>>DOWHILE 14994>>DOWHILE 15056<<ASSIGN  15098<<ASSIGN  15173<<ASSIGN
CONTROLLER_SCT IN PROCEDURE BUILD_CONTROLLER_SCT
     11575**DCL     11589<<ASSIGN
CONTROLLER_SCT.W0.MPC# IN PROCEDURE BUILD_CONTROLLER_SCT
     11579**DCL     11596<<ASSIGN
CONTROLLER_SCT.W0.VOLATILE_FW# IN PROCEDURE BUILD_CONTROLLER_SCT
     11578**DCL     11595<<ASSIGN
CONTROLLER_SCT.W0# IN PROCEDURE BUILD_SCTWRK
     16329**DCL     16418>>ASSIGN
COPY_IO_ENTRY IN PROCEDURE TOP$MME_TESTIO
     14846**PROC    14755--CALL
CRLF IN PROCEDURE BREAK_HDR_LINE
     16225**DCL     16234>>CALLBLT 16240>>CALLBLT 16261>>CALLBLT 16267>>CALLBLT
CRLF_ IN PROCEDURE BREAK_HDR_LINE
     16222**DCL     16225--REDEF
CRLF_INDEX IN PROCEDURE BREAK_HDR_LINE
     16226**DCL     16234<<CALLBLT 16238>>DOWHILE 16240<<CALLBLT 16249>>IF      16250>>ASSIGN  16261<<CALLBLT
     16265>>DOWHILE 16267<<CALLBLT
CSCT$ IN PROCEDURE TOP$MME_GETCSC
     11781**DCL     11782--REDEF   11790<<ASSIGN
CSCT_PTR.ADDR# IN PROCEDURE BUILD_SCTWRK
     16349**DCL     16370>>ASSIGN  16375>>ASSIGN  16376>>ASSIGN
CSCT_PTR.ADDR# IN PROCEDURE TOP$MME_GETCSC
     11783**DCL     11791>>ASSIGN
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:725  
DATA_V IN PROCEDURE FRAME_DATA_AREA
     14793**DCL     14801>>ASSIGN
DATA_V IN PROCEDURE GET_DENSITIES
     11408**DCL     11444>>ASSIGN
DATA_VECTOR IN PROCEDURE FRAME_DATA_AREA
     14785**DCL     14793--REDEF
DATA_VECTOR.SIZE# IN PROCEDURE FRAME_DATA_AREA
     14786**DCL     14800<<ASSIGN
DATA_VECTOR IN PROCEDURE GET_DENSITIES
     11400**DCL     11408--REDEF
DATA_VECTOR.SIZE# IN PROCEDURE GET_DENSITIES
     11401**DCL     11443<<ASSIGN
DCB$ IN PROCEDURE BOGUS_TDOPEN
     13782**DCL     13751--PROC    13794<<ASSIGN
DCB$ IN PROCEDURE GET_MODEL_ID
     13846**DCL     13815--PROC    13874>>ASSIGN
DCB$ IN PROCEDURE MAP_DEVICE
     14093**DCL     14091--PROC
DCB_NAME IN PROCEDURE GET_TEST_DCB
     10973**DCL     11009--DCLINIT
DCB_NAME.TCX IN PROCEDURE GET_TEST_DCB
     10976**DCL     11016<<CALLBLT
DCB_NUM IN PROCEDURE GET_TEST_DCB
     10977**DCL     11010--DCLINIT 11019>>ASSIGN
DCW IN PROCEDURE BUILD_DCW_LIST
     14966**DCL     15115<<ASSIGN  15135<<ASSIGN  15135>>ASSIGN  15138<<ASSIGN  15138>>ASSIGN  15142<<ASSIGN
     15142>>ASSIGN
DCW.ADDR# IN PROCEDURE BUILD_DCW_LIST
     14967**DCL     15143<<ASSIGN  15144>>ASSIGN
DCW.TYPE# IN PROCEDURE BUILD_DCW_LIST
     14970**DCL     15133>>DOCASE
DCW$ IN PROCEDURE BUILD_DCW_LIST
     14951**DCL     14984>>IF      15008<<ASSIGN  15133>>DOCASE  15135>>ASSIGN  15136<<ASSIGN  15136>>ASSIGN
     15138>>ASSIGN  15139<<ASSIGN  15139>>ASSIGN  15142>>ASSIGN  15144>>ASSIGN  15145>>IF      15147<<ASSIGN
     15148>>IF      15168>>ASSIGN  15181<<ASSIGN  15181>>ASSIGN
DCWLIST$ IN PROCEDURE BUILD_DCW_LIST
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:726  
     14952**DCL     14953--REDEF   15011<<ASSIGN  15012>>ASSIGN  15015>>ASSIGN  15016>>IF      15026>>ASSIGN
     15029>>ASSIGN  15034>>ASSIGN  15037>>ASSIGN  15042>>ASSIGN  15048>>ASSIGN  15050>>ASSIGN  15053>>ASSIGN
     15056>>ASSIGN  15063<<ASSIGN  15063>>ASSIGN  15076>>ASSIGN  15079>>ASSIGN  15084>>ASSIGN  15087>>ASSIGN
     15090>>ASSIGN  15095>>ASSIGN  15098>>ASSIGN  15105<<ASSIGN  15105>>ASSIGN  15115>>ASSIGN  15117<<ASSIGN
     15117>>ASSIGN  15135>>ASSIGN  15138>>ASSIGN  15142>>ASSIGN  15143>>ASSIGN  15156<<ASSIGN  15156>>ASSIGN
     15168>>ASSIGN  15170>>ASSIGN  15171>>ASSIGN  15173>>ASSIGN  15174>>IF      15177<<ASSIGN  15177>>ASSIGN
DCWLIST_.ADDR# IN PROCEDURE BUILD_DCW_LIST
     14954**DCL     15143>>ASSIGN
DCWLIST_BFR IN PROCEDURE TOP$MME_TESTIO
     14746**DCL     14911--ASSIGN  15011--ASSIGN
DEDICATE_CHANNEL_3 IN PROCEDURE TOP$MME_ALCMCA
     10726**PROC    10704--CALL
DELAY_FPT IN PROCEDURE TOP$MME_IPCWDT
     12138**DCL     12184<>CALL
DELAY_FPT.V IN PROCEDURE TOP$MME_IPCWDT
     12139**DCL     12138--DCLINIT
DENSITY_DCWLIST IN PROCEDURE GET_DENSITIES
     11409**DCL     11445--ASSIGN
DENSITY_DCWLIST.DCW.ADDR# IN PROCEDURE GET_DENSITIES
     11419**DCL     11442<<ASSIGN
DEVICE$ IN PROCEDURE GET_MODEL_ID
     13847**DCL     13878<<ASSIGN  13879>>ASSIGN
DEVICE_INFO IN PROCEDURE GET_DENSITIES
     11424**DCL     11434--DCLINIT
DEVICE_INFO.DENSITIES# IN PROCEDURE GET_DENSITIES
     11433**DCL     11461>>ASSIGN
DEVICE_INFO$ IN PROCEDURE GET_DENSITIES
     11434**DCL     11435--REDEF
DEVICE_INFO_.ADDR# IN PROCEDURE GET_DENSITIES
     11436**DCL     11442>>ASSIGN
DEVICE_KEY IN PROCEDURE GET_MODEL_ID
     13848**DCL     13875--ASSIGN
DEVICE_KEY.DATA IN PROCEDURE GET_MODEL_ID
     13850**DCL     13874<<ASSIGN
DEVICE_SCT IN PROCEDURE BUILD_DEVICE_SCT
     11216**DCL     11277<<ASSIGN  11297<<ASSIGN  11320<<ASSIGN  11497<<ASSIGN  11519<<ASSIGN  11538<<ASSIGN
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:727  
     11557<<ASSIGN
DEVICE_SCT.W0.BIT12# IN PROCEDURE BUILD_DEVICE_SCT
     11220**DCL     11280<<ASSIGN
DEVICE_SCT.W0.BIT13# IN PROCEDURE BUILD_DEVICE_SCT
     11221**DCL     11502<<ASSIGN
DEVICE_SCT.W0.BIT14# IN PROCEDURE BUILD_DEVICE_SCT
     11222**DCL     11500<<ASSIGN
DEVICE_SCT.W0.BIT17# IN PROCEDURE BUILD_DEVICE_SCT
     11224**DCL     11501<<ASSIGN
DEVICE_SCT.W0.DEVICE_NO# IN PROCEDURE BUILD_DEVICE_SCT
     11219**DCL     11279<<ASSIGN  11299<<ASSIGN  11322<<ASSIGN  11499<<ASSIGN  11521<<ASSIGN  11540<<ASSIGN
     11559<<ASSIGN
DEVICE_SCT.W0.DEVICE_TYPE# IN PROCEDURE BUILD_DEVICE_SCT
     11218**DCL     11278<<ASSIGN  11298<<ASSIGN  11321<<ASSIGN  11498<<ASSIGN  11520<<ASSIGN  11539<<ASSIGN
     11558<<ASSIGN
DEVICE_SCT.W1.DENSITIES# IN PROCEDURE BUILD_DEVICE_SCT
     11230**DCL     11327<<ASSIGN
DEVICE_SCT.W0# IN PROCEDURE BUILD_SCTWRK
     16334**DCL     16419>>ASSIGN
DEVICE_SCT.W1# IN PROCEDURE BUILD_SCTWRK
     16335**DCL     16420>>ASSIGN
DIX IN PROCEDURE GET_DENSITIES
     11438**DCL     11459<<ASSIGN  11460<<ASSIGN  11461>>ASSIGN
DOT_INX IN PROCEDURE TOP$MME_WRDUMP
     15394**DCL     16036<<CALLBLT 16037>>IF      16043>>IF      16052>>ASSIGN  16055>>ASSIGN  16056>>ASSIGN
     16056>>ASSIGN
DO_YOU_WANT_A_DUMP IN PROCEDURE TOP$MME_WRDUMP
     15947**PROC    15904--CALL
DUMP$ IN PROCEDURE TOP$MME_WRDUMP
     15399**DCL     16173>>CALL    16176<<ASSIGN  16176>>ASSIGN
DUMP_ IN PROCEDURE TOP$MME_WRDUMP
     15396**DCL     15399--REDEF   16163>>ASSIGN
DUMP_.ADDR# IN PROCEDURE TOP$MME_WRDUMP
     15397**DCL     16097<<ASSIGN  16103<<ASSIGN  16109>>IF      16144>>IF      16153>>IF      16167>>ASSIGN
     16169>>ASSIGN
DUMP_ACCT IN PROCEDURE TOP$MME_WRDUMP
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:728  
     15898**DCL     15698--DCLINIT
DUMP_ACCT.ACCT# IN PROCEDURE TOP$MME_WRDUMP
     15898**DCL     16049<<ASSIGN  16056<<ASSIGN
DUMP_ADDR_TEMP IN PROCEDURE TOP$MME_WRDUMP
     15400**DCL     16163<<ASSIGN  16164<>CALL
DUMP_HDR$ IN PROCEDURE TOP$MME_WRDUMP
     15379**DCL     16093<<ASSIGN  16205>>ASSIGN  16207<<ASSIGN  16207>>ASSIGN  16208>>ASSIGN  16212<<ASSIGN
     16212>>ASSIGN
DUMP_HDR_INDEX IN PROCEDURE BREAK_HDR_LINE
     16227**DCL     16233<<ASSIGN  16234>>CALLBLT 16238>>DOWHILE 16239<<ASSIGN  16239>>ASSIGN  16240>>CALLBLT
     16247>>DOWHILE 16250>>ASSIGN  16251>>ASSIGN  16254>>ASSIGN  16260<<ASSIGN  16260>>ASSIGN  16261>>CALLBLT
     16265>>DOWHILE 16266<<ASSIGN  16266>>ASSIGN  16267>>CALLBLT
DUMP_HDR_INX IN PROCEDURE GET_BCD_BUFFER
     16189**DCL     16201<<ASSIGN  16204>>DOWHILE 16213<<ASSIGN  16213>>ASSIGN
DUMP_HDR_SIZE IN PROCEDURE TOP$MME_WRDUMP
     15381**DCL     16094<<ASSIGN  16126<>CALL    16204>>DOWHILE 16215<<ASSIGN  16247>>DOWHILE 16249>>IF
     16251>>ASSIGN
DUMP_LINE IN PROCEDURE TOP$MME_WRDUMP
     15358**DCL     15370--REDEF   16130--ASSIGN
DUMP_LINE.ACTUAL_ADDR# IN PROCEDURE TOP$MME_WRDUMP
     15360**DCL     16165<<ASSIGN
DUMP_LINE.DUMP_OUTPUT# IN PROCEDURE TOP$MME_WRDUMP
     15366**DCL     15367--REDEF
DUMP_LINE.DUMP_OUTPUT_.OCT_WORD_ASC# IN PROCEDURE TOP$MME_WRDUMP
     15369**DCL     16174<<ASSIGN
DUMP_LINE.EDIT_NAME# IN PROCEDURE TOP$MME_WRDUMP
     15364**DCL     16137<<ASSIGN  16146<<ASSIGN  16156<<ASSIGN
DUMP_LINE.RELATIVE_ADDR# IN PROCEDURE TOP$MME_WRDUMP
     15362**DCL     16171<<ASSIGN
DUMP_LINE_INX IN PROCEDURE TOP$MME_WRDUMP
     15380**DCL     16139<<DOINDEX
DUMP_NAME IN PROCEDURE TOP$MME_WRDUMP
     15885**DCL     15694--DCLINIT
DUMP_NAME.L# IN PROCEDURE TOP$MME_WRDUMP
     15885**DCL     16048<<ASSIGN  16055<<ASSIGN
DUMP_NAME.NAME# IN PROCEDURE TOP$MME_WRDUMP
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:729  
     15885**DCL     16045<<ASSIGN  16052<<ASSIGN
DUMP_PROMPT IN PROCEDURE TOP$MME_WRDUMP
     15754**DCL     15955<>CALL
DUMP_PROMPT.V IN PROCEDURE TOP$MME_WRDUMP
     15762**DCL     15756--DCLINIT
DUMP_QUES IN PROCEDURE TOP$MME_WRDUMP
     15375**DCL     15760--DCLINIT
DUMP_SIZE IN PROCEDURE TOP$MME_WRDUMP
     15387**DCL     15388--REDEF   16098<<ASSIGN  16104<<ASSIGN
DUMP_SIZE_SBIN IN PROCEDURE TOP$MME_WRDUMP
     15388**DCL     16139>>DOINDEX
DUMP_TYPE IN PROCEDURE TOP$MME_WRDUMP
     15401**DCL     16099<<ASSIGN  16105<<ASSIGN  16142>>DOCASE  16148<<ASSIGN  16166>>IF
DUMP_WORD_INX IN PROCEDURE TOP$MME_WRDUMP
     15374**DCL     16172<<DOINDEX 16174>>ASSIGN
DUMP_WORD_OCT IN PROCEDURE TOP$MME_WRDUMP
     15386**DCL     16173<>CALL    16205>>ASSIGN  16208>>ASSIGN
DV_SCT$ IN PROCEDURE BUILD_DEVICE_SCT
     11211**DCL     11237<<ASSIGN  11277>>ASSIGN  11278>>ASSIGN  11279>>ASSIGN  11280>>ASSIGN  11297>>ASSIGN
     11298>>ASSIGN  11299>>ASSIGN  11320>>ASSIGN  11321>>ASSIGN  11322>>ASSIGN  11327>>ASSIGN  11497>>ASSIGN
     11498>>ASSIGN  11499>>ASSIGN  11500>>ASSIGN  11501>>ASSIGN  11502>>ASSIGN  11519>>ASSIGN  11520>>ASSIGN
     11521>>ASSIGN  11538>>ASSIGN  11539>>ASSIGN  11540>>ASSIGN  11557>>ASSIGN  11558>>ASSIGN  11559>>ASSIGN
DV_SCT$ IN PROCEDURE BUILD_SCTWRK
     16338**DCL     16339--REDEF   16367<<ASSIGN  16419>>ASSIGN  16420>>ASSIGN
EDIT_NAME IN PROCEDURE TOP$MME_WRDUMP
     15378**DCL     16100<<ASSIGN  16114<<ASSIGN  16137>>ASSIGN
EDIT_NAME_FOUND IN PROCEDURE SET_DUMP_PARAMS
     16089**DCL     16106<<ASSIGN  16108>>DOUNTIL 16110<<ASSIGN  16113>>IF
ENTRY_ADR IN PROCEDURE MATCH_IO_ENTRY
     11939**DCL     11937--PROC    11946>>IF
ERROR IN PROCEDURE BOGUS_TDOPEN
     13798**LABEL   13793--CALLALT
ERROR IN PROCEDURE VALIDATE_DEVICE_TYPE
     13949**LABEL   13938--CALLALT
EXECUTE_DUMP IN PROCEDURE TOP$MME_WRDUMP
     16121**PROC    15910--CALL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:730  
EXT_STATUS IN PROCEDURE RETURN_TIO_STATUS
     16673**DCL     16701>>IF      16702<<ASSIGN  16703<<ASSIGN  16703>>ASSIGN
EXT_STATUS$ IN PROCEDURE RETURN_TIO_STATUS
     16672**DCL     16700<<ASSIGN  16702>>ASSIGN  16703>>ASSIGN
F$DCB.ACTPOS
     10236**DCL     10236--REDEF
F$DCB.ARS#
     10210**DCL     10210--REDEF
F$DCB.ATTR
     10229**DCL     10230--REDEF
F$DCB.BORROW
     10244**DCL     10244--REDEF   10244--REDEF   10244--REDEF
F$DCB.CHANTIME#
     10231**DCL     11670>>ASSIGN
F$DCB.CONNCT#
     10230**DCL     12060>>ASSIGN
F$DCB.DCBNAME.L
     10258**DCL     10258--IMP-SIZ
F$DCB.EOMCHAR#
     10214**DCL     10214--REDEF
F$DCB.FLDID
     10239**DCL     10239--REDEF
F$DCB.FLPW#
     10210**DCL     12287>>ASSIGN
F$DCB.FORM$
     10233**DCL     10233--REDEF
F$DCB.FSECT
     10249**DCL     10249--REDEF
F$DCB.FSN#
     10226**DCL     10226--REDEF   10226--REDEF   10227--REDEF
F$DCB.HEADER$
     10232**DCL     10232--REDEF
F$DCB.IXTNSIZE#
     10230**DCL     10230--REDEF
F$DCB.LASTSTA$
     10219**DCL     10219--REDEF
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:731  
F$DCB.LVL
     10245**DCL     10245--REDEF
F$DCB.NAME#.C
     10220**DCL     10220--REDEF   13874>>ASSIGN
F$DCB.NOEOF
     10242**DCL     10242--REDEF
F$DCB.NRECS#
     10231**DCL     10231--REDEF
F$DCB.NRECX
     10250**DCL     10250--REDEF
F$DCB.OHDR
     10242**DCL     10242--REDEF
F$DCB.ORG#
     10225**DCL     10225--REDEF
F$DCB.PRECNO
     10248**DCL     10248--REDEF
F$DCB.RCSZ
     10254**DCL     10254--REDEF
F$DCB.RES#
     10221**DCL     10221--REDEF
F$DCB.SETX
     10233**DCL     10233--REDEF
F$DCB.TAB$
     10233**DCL     10233--REDEF
F$DCB.TDA
     10247**DCL     10248--REDEF
F$DCB.TDEXTST$
     10219**DCL     16701>>IF      16703>>ASSIGN
F$DCB.TDSTAT#
     10221**DCL     11454--ASSIGN  16611--ASSIGN  16682>>ASSIGN
F$DCB.WSN#
     10221**DCL     10221--REDEF
F$DCB.ACTPOS IN PROCEDURE TOP$MME_WRDUMP
     15435**DCL     15435--REDEF
F$DCB.ARS# IN PROCEDURE TOP$MME_WRDUMP
     15409**DCL     15409--REDEF
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:732  
F$DCB.ATTR IN PROCEDURE TOP$MME_WRDUMP
     15428**DCL     15429--REDEF
F$DCB.BORROW IN PROCEDURE TOP$MME_WRDUMP
     15443**DCL     15443--REDEF   15443--REDEF   15443--REDEF
F$DCB.DCBNAME.L IN PROCEDURE TOP$MME_WRDUMP
     15457**DCL     15457--IMP-SIZ
F$DCB.EOMCHAR# IN PROCEDURE TOP$MME_WRDUMP
     15413**DCL     15413--REDEF
F$DCB.FCD# IN PROCEDURE TOP$MME_WRDUMP
     15422**DCL     16069>>IF      16283>>IF
F$DCB.FLDID IN PROCEDURE TOP$MME_WRDUMP
     15438**DCL     15438--REDEF
F$DCB.FORM$ IN PROCEDURE TOP$MME_WRDUMP
     15432**DCL     15432--REDEF
F$DCB.FSECT IN PROCEDURE TOP$MME_WRDUMP
     15448**DCL     15448--REDEF
F$DCB.FSN# IN PROCEDURE TOP$MME_WRDUMP
     15425**DCL     15425--REDEF   15425--REDEF   15426--REDEF
F$DCB.HEADER$ IN PROCEDURE TOP$MME_WRDUMP
     15431**DCL     15431--REDEF
F$DCB.IXTNSIZE# IN PROCEDURE TOP$MME_WRDUMP
     15429**DCL     15429--REDEF
F$DCB.LASTSTA$ IN PROCEDURE TOP$MME_WRDUMP
     15418**DCL     15418--REDEF
F$DCB.LVL IN PROCEDURE TOP$MME_WRDUMP
     15444**DCL     15444--REDEF
F$DCB.NAME#.C IN PROCEDURE TOP$MME_WRDUMP
     15419**DCL     15419--REDEF
F$DCB.NOEOF IN PROCEDURE TOP$MME_WRDUMP
     15441**DCL     15441--REDEF
F$DCB.NRECS# IN PROCEDURE TOP$MME_WRDUMP
     15430**DCL     15430--REDEF
F$DCB.NRECX IN PROCEDURE TOP$MME_WRDUMP
     15449**DCL     15449--REDEF
F$DCB.OHDR IN PROCEDURE TOP$MME_WRDUMP
     15441**DCL     15441--REDEF
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:733  
F$DCB.ORG# IN PROCEDURE TOP$MME_WRDUMP
     15424**DCL     15424--REDEF
F$DCB.PRECNO IN PROCEDURE TOP$MME_WRDUMP
     15447**DCL     15447--REDEF
F$DCB.RCSZ IN PROCEDURE TOP$MME_WRDUMP
     15453**DCL     15453--REDEF
F$DCB.RES# IN PROCEDURE TOP$MME_WRDUMP
     15420**DCL     15420--REDEF
F$DCB.SETX IN PROCEDURE TOP$MME_WRDUMP
     15432**DCL     15432--REDEF
F$DCB.TAB$ IN PROCEDURE TOP$MME_WRDUMP
     15432**DCL     15432--REDEF
F$DCB.TDA IN PROCEDURE TOP$MME_WRDUMP
     15446**DCL     15447--REDEF
F$DCB.WSN# IN PROCEDURE TOP$MME_WRDUMP
     15420**DCL     15420--REDEF
FICCDD.CHAN#
     10264**DCL     10937>>ASSIGN
FICCDD.DEV#
     10265**DCL     10933>>ASSIGN  10938>>ASSIGN  11299>>ASSIGN  11322>>ASSIGN  11499>>ASSIGN  11521>>ASSIGN
     11540>>ASSIGN  11559>>ASSIGN
FICCDD.FORMAT#
     10262**DCL     10929>>IF      10941>>ASSIGN
FICCDD.IOM#
     10263**DCL     10931>>ASSIGN  10936>>ASSIGN
FICCDD.CHAN# IN PROCEDURE BUILD_SCT_FICCDD
     13581**DCL     13597>>ASSIGN
FICCDD.DEV# IN PROCEDURE BUILD_SCT_FICCDD
     13582**DCL     13598>>ASSIGN
FICCDD.FLAG# IN PROCEDURE BUILD_SCT_FICCDD
     13578**DCL     13592>>ASSIGN
FICCDD.FORMAT# IN PROCEDURE BUILD_SCT_FICCDD
     13579**DCL     13593>>ASSIGN  13595>>IF
FICCDD.IOM# IN PROCEDURE BUILD_SCT_FICCDD
     13580**DCL     13594>>ASSIGN
FICCDD.TEST_TYPE# IN PROCEDURE BUILD_SCT_FICCDD
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:734  
     13583**DCL     13599>>ASSIGN
FICCDD$ IN PROCEDURE BUILD_SCT_FICCDD
     13576**DCL     13577--IMP-PTR 13589<<ASSIGN  13592>>ASSIGN  13593>>ASSIGN  13594>>ASSIGN  13595>>IF
     13597>>ASSIGN  13598>>ASSIGN  13599>>ASSIGN
FICCDD$ IN PROCEDURE TOP$MME_ALLOCR
     10854**DCL     10927<<ASSIGN  10929>>IF      10931>>ASSIGN  10933>>ASSIGN  10936>>ASSIGN  10937>>ASSIGN
     10938>>ASSIGN  10941>>ASSIGN  11299>>ASSIGN  11322>>ASSIGN  11499>>ASSIGN  11521>>ASSIGN  11540>>ASSIGN
     11559>>ASSIGN
FID_QUES IN PROCEDURE TOP$MME_WRDUMP
     15376**DCL     15789--DCLINIT
FILE_NAME IN PROCEDURE GET_DEVICE_CODE
     13460**DCL     13305--DCLINIT
FILE_OUTPUT_LINE.DUMP_LINE# IN PROCEDURE TOP$MME_WRDUMP
     15371**DCL     16134--ASSIGN
FIND_VACANT_ENTRY IN PROCEDURE TOP$MME_SCTCMP
     13092**PROC    13053--CALL
FOUND IN PROCEDURE FIND_VACANT_ENTRY
     13095**DCL     13106<<ASSIGN  13109<<ASSIGN  13111>>IF
FPTN_
     10314**DCL     10317--REDEF
FRAME_DATA_AREA IN PROCEDURE TOP$MME_TESTIO
     14783**PROC    14752--CALL
GET_BCD_BUFFER IN PROCEDURE EXECUTE_DUMP
     16187**PROC    16125--CALL
GET_CHANNEL_DEVICE IN PROCEDURE GET_DEVICE_CODE
     13623**PROC    13491--CALL
GET_DENSITIES IN PROCEDURE BUILD_TAPE_SCT
     11398**PROC    11326--CALL
GET_DEVICE_CODE IN PROCEDURE TOP$MME_SCTCMP
     13194**PROC    13060--CALL
GET_DUMP_OUTPUT_MODE IN PROCEDURE TOP$MME_WRDUMP
     15997**PROC    15907--CALL
GET_MODEL_ID IN PROCEDURE GET_DEVICE_CODE
     13815**PROC    13503--CALL
GET_POLTS_DCB IN PROCEDURE GET_TEST_DCB
     11009**DCL     11017<>CALL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:735  
GET_POLTS_DCB.V IN PROCEDURE GET_TEST_DCB
     11010**DCL     11009--DCLINIT
GET_SCT_ADR IN PROCEDURE TOP$MME_TESTIO
     14815**PROC    14753--CALL
GET_TEST_DCB IN PROCEDURE TOP$MME_ALLOCR
     10970**PROC    10875--CALL
GIVE_COURTESY_CALL IN PROCEDURE TOP$MME_HUNGTM
     12015**PROC    11915--CALL
HAS_DCWS IN PROCEDURE BUILD_DCW_LIST
     14950**DCL     15058<<ASSIGN  15059<<ASSIGN  15100<<ASSIGN  15101<<ASSIGN  15129>>IF      15175<<ASSIGN
     15176<<ASSIGN
HEAD_KEY IN PROCEDURE GET_CHANNEL_DEVICE
     13655**DCL     13714--ASSIGN
ICC IN PROCEDURE MATCH_ICC
     16468**DCL     16465--PROC    16474>>IF
ICC IN PROCEDURE TOP$MME_ALCMCA
     10688**DCL     10698<>CALL
ICC.CHAN# IN PROCEDURE TOP$MME_ALCMCA
     10690**DCL     10697<<ASSIGN
ICC.IOM# IN PROCEDURE TOP$MME_ALCMCA
     10689**DCL     10696<<ASSIGN
ICC IN PROCEDURE TOP$MME_IPCWDT
     12152**DCL     12168<>CALL
ICC.CHAN# IN PROCEDURE TOP$MME_IPCWDT
     12154**DCL     12162<<ASSIGN  12166<<ASSIGN
ICC.IOM# IN PROCEDURE TOP$MME_IPCWDT
     12153**DCL     12161<<ASSIGN  12165<<ASSIGN
ICC IN PROCEDURE TOP$MME_LPWDT
     12266**DCL     12284<>CALL
ICC.CHAN# IN PROCEDURE TOP$MME_LPWDT
     12268**DCL     12278<<ASSIGN  12282<<ASSIGN
ICC.IOM# IN PROCEDURE TOP$MME_LPWDT
     12267**DCL     12277<<ASSIGN  12281<<ASSIGN
ICC.ICCC IN PROCEDURE TOP$MME_PACMAN
     12338**DCL     12354>>ASSIGN
ICC.ICCC.IOM# IN PROCEDURE TOP$MME_PACMAN
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:736  
     12339**DCL     12356>>ASSIGN
IDCW IN PROCEDURE BUILD_DCW_LIST
     14956**DCL     15012<<ASSIGN  15076<<ASSIGN  15168<<ASSIGN  15168>>ASSIGN
IDCW.CHANNEL_CMD# IN PROCEDURE BUILD_DCW_LIST
     14964**DCL     15048<<ASSIGN  15050<<ASSIGN  15090<<ASSIGN  15174>>IF
IDCW.CONTINUE# IN PROCEDURE BUILD_DCW_LIST
     14962**DCL     15034<<ASSIGN  15037<<ASSIGN  15042<<ASSIGN  15056>>ASSIGN  15098>>ASSIGN  15173>>ASSIGN
IDCW.DEVICE_ADDRESS# IN PROCEDURE BUILD_DCW_LIST
     14958**DCL     15026<<ASSIGN  15084<<ASSIGN  15170<<ASSIGN  15171<<ASSIGN
IDCW.DEVICE_CMD# IN PROCEDURE BUILD_DCW_LIST
     14957**DCL     15015<<ASSIGN  15016>>IF      15079<<ASSIGN
IDCW.RECORD_COUNT# IN PROCEDURE BUILD_DCW_LIST
     14965**DCL     15053<<ASSIGN  15095<<ASSIGN
IDCW.TYPE# IN PROCEDURE BUILD_DCW_LIST
     14960**DCL     14984>>IF      15029<<ASSIGN  15087<<ASSIGN  15148>>IF
IMU_KEY IN PROCEDURE GET_CHANNEL_DEVICE
     13661**DCL     13722--ASSIGN
IOM_KEY IN PROCEDURE GET_CHANNEL_DEVICE
     13658**DCL     13719--ASSIGN
IO_ENTRY
     10269**DCL     14857--ASSIGN
IO_ENTRY.W1.EXTSTAT_ADR#
     10272**DCL     16697>>IF      16700>>ASSIGN
IO_ENTRY.W1.LOWER#
     10273**DCL     11917>>ASSIGN
IO_ENTRY.W2.MDS_DEV_IDCW_LIST
     10276**DCL     15064>>IF      15065<<ASSIGN
IO_ENTRY.W4.DEVICE_CMD#
     10281**DCL     15015>>ASSIGN  15040>>IF
IO_ENTRY.W4.IO_CMD#
     10283**DCL     14976>>DOCASE  15032>>DOCASE  15046>>IF      15048>>ASSIGN  15050>>ASSIGN  15057>>IF
IO_ENTRY.W4.RECORD_COUNT#
     10285**DCL     15036>>IF      15053>>ASSIGN
IO_ENTRY.W5#
     10286**DCL     15115>>ASSIGN
IO_ENTRY.W7.BIT29#
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:737  
     10295**DCL     15016>>IF
IO_ENTRY.W7.DEVICE_CMD#
     10291**DCL     15040>>IF      15079>>ASSIGN
IO_ENTRY.W7.IO_CMD#
     10293**DCL     15090>>ASSIGN  15099>>IF
IO_ENTRY.W7.RECORD_COUNT#
     10296**DCL     15095>>ASSIGN
IO_ENTRY.W8.DCW_PTR#
     10298**DCL     15008>>ASSIGN
IO_ENTRY.W9.CC_ADR#
     10302**DCL     12022>>IF      12025>>ASSIGN  16734>>IF      16737>>ASSIGN
IO_ENTRY.W9.STATUS_ADR#
     10301**DCL     11985>>IF      11988>>ASSIGN  16677>>IF      16681>>ASSIGN  16776>>IF      16779>>ASSIGN
IO_ENTRY.W2.SCT_ADR# IN PROCEDURE GET_SCT_ADR
     14824**DCL     14831>>ASSIGN
IO_ENTRY$ IN PROCEDURE COPY_IO_ENTRY
     14851**DCL     14857<<ASSIGN  14858>>ASSIGN
IO_ENTRY_ADR IN PROCEDURE COPY_IO_ENTRY
     14848**DCL     14846--PROC    14856>>ASSIGN  14859>>ASSIGN
IO_ENTRY_ADR IN PROCEDURE GET_SCT_ADR
     14817**DCL     14815--PROC    14830>>ASSIGN
IO_ENTRY_WORDS IN PROCEDURE COPY_IO_ENTRY
     14852**DCL     14858<<ASSIGN  14858>>ASSIGN
IS$
     10317**DCL     10927>>ASSIGN  11169>>ASSIGN  11988>>ASSIGN  12025>>ASSIGN  12357>>ASSIGN  12655>>ASSIGN
     12666>>ASSIGN  12669>>ASSIGN  12671>>ASSIGN  12673>>ASSIGN  12685>>ASSIGN  12686>>ASSIGN  12725>>ASSIGN
     13589>>ASSIGN  14830>>ASSIGN  14856>>ASSIGN  15008>>ASSIGN  15144>>ASSIGN  16093>>ASSIGN  16356>>ASSIGN
     16681>>ASSIGN  16700>>ASSIGN  16737>>ASSIGN  16779>>ASSIGN
ISSUE_IO IN PROCEDURE TOP$MME_TESTIO
     15209**PROC    14758--CALL
LAST_DATA_DCW IN PROCEDURE PROCESS_DCWS
     15124**DCL     15131<<ASSIGN  15132>>DOUNTIL 15140<<ASSIGN  15146<<ASSIGN  15149<<ASSIGN
LINE_LGTH IN PROCEDURE BREAK_HDR_LINE
     16228**DCL     16250<<ASSIGN  16251<<ASSIGN  16254>>ASSIGN  16260>>ASSIGN
LIST$ IN PROCEDURE RELEASE_CHANNELS
     12552**DCL     12549--PROC    12566>>ASSIGN
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:738  
LIST$ IN PROCEDURE REPORT_CHANNELS
     12469**DCL     12467--PROC    12493>>ASSIGN
LIST$ IN PROCEDURE SUSPEND_CHANNELS
     12416**DCL     12413--PROC    12430>>ASSIGN
LIST$ IN PROCEDURE TOP$MME_PACMAN
     12348**DCL     12357<<ASSIGN  12363<>CALL    12371<>CALL    12372<>CALL
LIST_ITEM.E IN PROCEDURE RELEASE_CHANNELS
     12556**DCL     12562--REDEF
LIST_ITEM.E IN PROCEDURE REPORT_CHANNELS
     12472**DCL     12478--REDEF
LIST_ITEM.E.BASE_CHN IN PROCEDURE REPORT_CHANNELS
     12473**DCL     12509>>CALLBLT
LIST_ITEM.E.FLAGS.NO_REBOOT IN PROCEDURE REPORT_CHANNELS
     12476**DCL     12496>>IF
LIST_ITEM.E.NUMB_CHN IN PROCEDURE REPORT_CHANNELS
     12474**DCL     12510>>IF      12512>>CALLBLT
LIST_ITEM.FENCE IN PROCEDURE REPORT_CHANNELS
     12478**DCL     12494>>DOWHILE
LIST_ITEM.E IN PROCEDURE SUSPEND_CHANNELS
     12420**DCL     12426--REDEF
LIST_ITEM.E.BASE_CHN IN PROCEDURE SUSPEND_CHANNELS
     12421**DCL     12434>>ASSIGN
LIST_ITEM.E.NUMB_CHN IN PROCEDURE SUSPEND_CHANNELS
     12422**DCL     12433>>ASSIGN
LIST_SIZE IN PROCEDURE BUILD_DCW_LIST
     14972**DCL     14987>>DOWHILE 14994>>DOWHILE 15060<<ASSIGN  15102<<ASSIGN  15102>>ASSIGN  15116<<ASSIGN
     15116>>ASSIGN  15153>>IF      15154<<ASSIGN  15154>>ASSIGN  15178>>IF      15179<<ASSIGN  15179>>ASSIGN
LP_DUMP IN PROCEDURE TOP$MME_WRDUMP
     15395**DCL     16007<<ASSIGN  16019<<ASSIGN  16021<<ASSIGN  16071>>IF      16128>>IF
LP_OR_FID IN PROCEDURE TOP$MME_WRDUMP
     15783**DCL     16001<>CALL
LP_OR_FID.V IN PROCEDURE TOP$MME_WRDUMP
     15791**DCL     15785--DCLINIT
M$CLOSE
      7277**DCL-ENT 13493--CALL    13499--CALL    13506--CALL    13513--CALL    13517--CALL    16284--CALL
M$DEVCNFG
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:739  
      9905**DCL     12431>>ASSIGN  12567>>ASSIGN  13786>>ASSIGN  13794--ASSIGN
M$DUMP
      9906**DCL     16069--IF      16283--IF
M$GETDCB
      7283**DCL-ENT 11017--CALL
M$MCACNFG
      9903**DCL     10730>>ASSIGN  10752>>ASSIGN  10873>>ASSIGN
M$OPEN
      7277**DCL-ENT 13480--CALL    16072--CALL    16073--CALL
M$PROMPT
      7301**DCL-ENT 15955--CALL    16001--CALL
M$READ
      7278**DCL-ENT 13716--CALL    13720--CALL    13723--CALL    13877--CALL    14053--CALL
M$TDCLOSE
      7327**DCL-ENT 10753--CALL    12568--CALL    12817--CALL
M$TDIO
      7327**DCL-ENT 11452--CALL    12179--CALL    15218--CALL
M$TDOPEN
      7326**DCL-ENT 10735--CALL    11121--CALL    11131--CALL    12436--CALL    13793--CALL
M$TIME
      7344**DCL-ENT 15277--CALL
M$WAIT
      7335**DCL-ENT 12184--CALL
M$WRITE
      7278**DCL-ENT 16178--CALL    16257--CALL
MAP_DEVICE IN PROCEDURE GET_DEVICE_CODE
     14091**PROC    13511--CALL
MAP_MPC_DEVICE IN PROCEDURE VALIDATE_DEVICE_TYPE
     13987**PROC    13938--CALL
MATCH_ICC
     16465**PROC    10698--CALL    12168--CALL    12284--CALL    12355--CALL
MATCH_ICCDD IN PROCEDURE TOP$MME_ALLOCR
     10921**PROC    10868--CALL
MATCH_IO_ENTRY IN PROCEDURE TOP$MME_HUNGTM
     11937**PROC    11911--CALL
MATCH_PAT_PTR IN PROCEDURE TOP$MME_CHANTM
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:740  
     11684**PROC    11669--CALL
MATCH_SCT_ADR
     16503**PROC    11634--CALL    11749--CALL    11789--CALL    12058--CALL    12724--CALL    12774--CALL
     14754--CALL
MESSAGE IN PROCEDURE WRAP_DUMP_MSG
     15921**DCL     15941--ASSIGN
MESSAGE.SUBEXEC IN PROCEDURE WRAP_DUMP_MSG
     15922**DCL     15929<<ASSIGN  15931<<ASSIGN  15933<<ASSIGN  15935<<ASSIGN  15937<<ASSIGN  15939<<ASSIGN
MME
      9860**DCL        56--PROC    10661--ENTRY
MME.INST.NO
      9863**DCL     10552>>DOCASE
MME.INSTR
      9861**DCL      9862--REDEF
MME.WD_1
      9865**DCL     10556<>CALL    10588<>CALL    10601<>CALL    10604<>CALL
MME.WD_2
      9866**DCL     10556<>CALL    10601<>CALL    10604<>CALL
MME.WD_3
      9867**DCL     10556<>CALL    10604<>CALL
MME.WD_4
      9868**DCL     10556<>CALL    10604<>CALL
MME_INSTR$
      9895**DCL        56--PROC    10586<>CALL    10661--ENTRY
MME_INSTR$ IN PROCEDURE TOP$MME_POINIT
     12617**DCL     12614--PROC    12653>>IF      12655>>ASSIGN  12666>>ASSIGN  12669>>ASSIGN  12671>>ASSIGN
     12673>>ASSIGN  12685>>ASSIGN  12686>>ASSIGN
MME_W1 IN PROCEDURE BUILD_SCT_FICCDD
     13543**DCL     13541--PROC
MME_W1.ADDR# IN PROCEDURE BUILD_SCT_FICCDD
     13544**DCL     13589>>ASSIGN
MME_W1.ADR IN PROCEDURE TOP$MME_PRTRAN
     12714**DCL     12725>>ASSIGN
MME_W1 IN PROCEDURE TOP$MME_TESTIO
     14735**DCL     14733--PROC
MME_W1.ADDR# IN PROCEDURE TOP$MME_TESTIO
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:741  
     14736**DCL     14753<>CALL    14755<>CALL
MME_W2.ADDR# IN PROCEDURE BUILD_SCTWRK
     16345**DCL     16356>>ASSIGN
MME_W2 IN PROCEDURE TOP$MME_TESTIO
     14738**DCL     14733--PROC
MME_W3 IN PROCEDURE TOP$MME_TESTIO
     14739**DCL     14733--PROC
MME_W4 IN PROCEDURE TOP$MME_TESTIO
     14740**DCL     14733--PROC
MME_WD1 IN PROCEDURE GET_DEVICE_CODE
     13196**DCL     13194--PROC    13479<>CALL
MME_WD1 IN PROCEDURE TOP$MME_SCTCMP
     13009**DCL     13007--PROC    13060<>CALL
MME_WD2 IN PROCEDURE TOP$MME_SCTCMP
     13010**DCL     13007--PROC    13075<>CALL
MPC
     10319**DCL     12825<<ASSIGN
MPC$ IN PROCEDURE MAP_MPC_DEVICE
     14024**DCL     14054<<ASSIGN  14057>>IF      14057>>IF      14057>>IF      14067>>ASSIGN  14068>>ASSIGN
     14069>>ASSIGN  14070>>ASSIGN
MPC_KEY IN PROCEDURE MAP_MPC_DEVICE
     14020**DCL     14051--ASSIGN
MPC_KEY.KEY IN PROCEDURE MAP_MPC_DEVICE
     14022**DCL     14050<<ASSIGN
MREG
      9881**DCL        56--PROC    10661--ENTRY
MREG.A
      9890**DCL     10554<>CALL    10561<>CALL    10565<>CALL    10569<>CALL    10572<>CALL    10574<>CALL
     10580<>CALL    10582<>CALL    10584<>CALL    10588<>CALL    10591<>CALL    10594<>CALL    10604<>CALL
     10609<>CALL
MREG.Q
      9891**DCL     10554<>CALL    10556<>CALL    10565<>CALL    10569<>CALL    10572<>CALL    10584<>CALL
     10591<>CALL    10594<>CALL    10601<>CALL    10604<>CALL    10609<>CALL
MREG.X0
      9882**DCL     10554<>CALL    10591<>CALL
MREG.X1
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:742  
      9883**DCL     10556<>CALL    10559<>CALL    10563<>CALL    10565<>CALL    10567<>CALL    10569<>CALL
     10572<>CALL    10574<>CALL    10576<>CALL    10578<>CALL    10580<>CALL    10582<>CALL    10588<>CALL
     10591<>CALL    10594<>CALL    10597<>CALL    10607<>CALL    10609<>CALL
MREG.X2
      9884**DCL     10556<>CALL    10559<>CALL    10584<>CALL    10591<>CALL    10601<>CALL    10609<>CALL
MREG.X3
      9885**DCL     10556<>CALL    10569<>CALL    10594<>CALL    10601<>CALL
MREG.X4
      9886**DCL     10559<>CALL    10561<>CALL    10567<>CALL    10569<>CALL    10591<>CALL    10594<>CALL
     10599<>CALL    10604<>CALL
MREG.X5
      9887**DCL     10584<>CALL
MREG.X6
      9888**DCL     10591<>CALL
MREG.X7
      9889**DCL     10591<>CALL
MTARF$ IN PROCEDURE SET_MTAR_PERMISSION
     11160**DCL     11169<<ASSIGN  11171>>ASSIGN  11172>>ASSIGN
MTAR_DATA.WR_FLAG# IN PROCEDURE SET_MTAR_PERMISSION
     11163**DCL     11171<<ASSIGN  11172<<ASSIGN
NEW_ICCDD.FLAG# IN PROCEDURE TOP$MME_ALLOCR
     10857**DCL     10940<<ASSIGN
NEW_ICCDD.FORMAT# IN PROCEDURE TOP$MME_ALLOCR
     10858**DCL     10941<<ASSIGN
NEW_ICCDD.ICCDD# IN PROCEDURE TOP$MME_ALLOCR
     10863**DCL     10945>>IF
NEW_ICCDD.ICCDD_ IN PROCEDURE TOP$MME_ALLOCR
     10859**DCL     10863--REDEF
NEW_ICCDD.ICCDD_.CHAN# IN PROCEDURE TOP$MME_ALLOCR
     10861**DCL     10932<<ASSIGN  10937<<ASSIGN  11096>>ASSIGN
NEW_ICCDD.ICCDD_.DEV# IN PROCEDURE TOP$MME_ALLOCR
     10862**DCL     10933<<ASSIGN  10938<<ASSIGN  11097>>ASSIGN
NEW_ICCDD.ICCDD_.IOM# IN PROCEDURE TOP$MME_ALLOCR
     10860**DCL     10931<<ASSIGN  10936<<ASSIGN  11095>>ASSIGN
NEW_PAT_PTR IN PROCEDURE MATCH_PAT_PTR
     11687**DCL     11684--PROC    11693>>IF
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:743  
NEW_SCT_ADR IN PROCEDURE GET_SCT_ADR
     14818**DCL     14815--PROC    14831<<ASSIGN
NEW_SCT_ADR IN PROCEDURE MATCH_SCT_ADR
     16506**DCL     16503--PROC    16512>>IF      16522>>IF
NEW_SCT_ADR IN PROCEDURE TOP$MME_TESTIO
     14748**DCL     14753<>CALL    14754<>CALL
NEXT_PAGE_AVAIL IN PROCEDURE FRAME_DATA_AREA
     14794**DCL     14799<<ASSIGN  14800>>ASSIGN
NO_ALLOCATION IN PROCEDURE ALLOCATE_DEVICE
     11135**LABEL   11131--CALLALT
NO_DUMP IN PROCEDURE TOP$MME_WRDUMP
     15913**LABEL   15904--CALLALT 15909--CALLALT
NO_RESP IN PROCEDURE DO_YOU_WANT_A_DUMP
     15951**DCL     15975>>IF
NO_RETURN_MSG IN PROCEDURE REPORT_CHANNELS
     12483**DCL     12498--ASSIGN
OCT_WORDS_PER_LINE IN PROCEDURE TOP$MME_WRDUMP
     15356**DCL     15357--REDEF   16131<<ASSIGN  16135<<ASSIGN  16172>>DOINDEX
OCT_WORDS_PER_LINE_SBIN IN PROCEDURE TOP$MME_WRDUMP
     15357**DCL     16139>>DOINDEX
OFFSET IN PROCEDURE GET_BCD_BUFFER
     16194**DCL     16206<<DOINDEX
ONLY_ICC IN PROCEDURE TOP$MME_PACMAN
     12342**DCL     12354<<ASSIGN  12355<>CALL
OPEN_CONFIG IN PROCEDURE GET_DEVICE_CODE
     13304**DCL     13480<>CALL
OPEN_CONFIG.ACSVEH_ IN PROCEDURE GET_DEVICE_CODE
     13306**DCL     13307--REDEF
OPEN_CONFIG.ALTKEYS_ IN PROCEDURE GET_DEVICE_CODE
     13312**DCL     13313--REDEF   13313--REDEF
OPEN_CONFIG.HDR_ IN PROCEDURE GET_DEVICE_CODE
     13311**DCL     13312--REDEF
OPEN_CONFIG.TAB_ IN PROCEDURE GET_DEVICE_CODE
     13310**DCL     13311--REDEF
OPEN_CONFIG.UHL_ IN PROCEDURE GET_DEVICE_CODE
     13304**DCL     13305--REDEF   13305--REDEF
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:744  
OPEN_CONFIG.V IN PROCEDURE GET_DEVICE_CODE
     13313**DCL     13304--DCLINIT
OPEN_CONFIG.V.FSN# IN PROCEDURE GET_DEVICE_CODE
     13344**DCL     13344--REDEF   13344--REDEF
OPEN_CONFIG.WSN_ IN PROCEDURE GET_DEVICE_CODE
     13310**DCL     13310--REDEF
OPEN_DUMP_FILE IN PROCEDURE TOP$MME_WRDUMP
     15693**DCL     16073<>CALL
OPEN_DUMP_FILE.ACSVEH_ IN PROCEDURE TOP$MME_WRDUMP
     15695**DCL     15696--REDEF
OPEN_DUMP_FILE.ALTKEYS_ IN PROCEDURE TOP$MME_WRDUMP
     15701**DCL     15702--REDEF   15702--REDEF
OPEN_DUMP_FILE.HDR_ IN PROCEDURE TOP$MME_WRDUMP
     15700**DCL     15701--REDEF
OPEN_DUMP_FILE.TAB_ IN PROCEDURE TOP$MME_WRDUMP
     15699**DCL     15700--REDEF
OPEN_DUMP_FILE.UHL_ IN PROCEDURE TOP$MME_WRDUMP
     15693**DCL     15694--REDEF   15694--REDEF
OPEN_DUMP_FILE.V IN PROCEDURE TOP$MME_WRDUMP
     15702**DCL     15693--DCLINIT
OPEN_DUMP_FILE.V.FSN# IN PROCEDURE TOP$MME_WRDUMP
     15733**DCL     15733--REDEF   15733--REDEF
OPEN_DUMP_FILE.WSN_ IN PROCEDURE TOP$MME_WRDUMP
     15699**DCL     15699--REDEF
OPEN_DUMP_RECEPTICLE IN PROCEDURE TOP$MME_WRDUMP
     16065**PROC    15908--CALL
OPEN_LP IN PROCEDURE TOP$MME_WRDUMP
     15575**DCL     16072<>CALL
OPEN_LP.ACSVEH_ IN PROCEDURE TOP$MME_WRDUMP
     15577**DCL     15578--REDEF
OPEN_LP.ALTKEYS_ IN PROCEDURE TOP$MME_WRDUMP
     15583**DCL     15584--REDEF   15584--REDEF
OPEN_LP.HDR_ IN PROCEDURE TOP$MME_WRDUMP
     15582**DCL     15583--REDEF
OPEN_LP.TAB_ IN PROCEDURE TOP$MME_WRDUMP
     15581**DCL     15582--REDEF
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:745  
OPEN_LP.UHL_ IN PROCEDURE TOP$MME_WRDUMP
     15575**DCL     15576--REDEF   15576--REDEF
OPEN_LP.V IN PROCEDURE TOP$MME_WRDUMP
     15584**DCL     15575--DCLINIT
OPEN_LP.V.FSN# IN PROCEDURE TOP$MME_WRDUMP
     15615**DCL     15615--REDEF   15615--REDEF
OPEN_LP.WSN_ IN PROCEDURE TOP$MME_WRDUMP
     15581**DCL     15581--REDEF
PARAMETER IN PROCEDURE TOP$MME_POINIT
     12618**DCL     12656<<ASSIGN  12667<<ASSIGN  12672<<ASSIGN  12676<<ASSIGN  12678<<ASSIGN
PARAMETER$ IN PROCEDURE TOP$MME_POINIT
     12628**DCL     12655<<ASSIGN  12656>>ASSIGN  12659>>ASSIGN  12661>>ASSIGN  12663>>ASSIGN  12666<<ASSIGN
     12667>>ASSIGN  12669<<ASSIGN  12670>>ASSIGN  12671<<ASSIGN  12672>>ASSIGN  12673<<ASSIGN  12676>>ASSIGN
     12678>>ASSIGN  12680>>ASSIGN  12681>>ASSIGN  12682>>ASSIGN  12683>>ASSIGN  12686<<ASSIGN  12687>>ASSIGN
PARAMETER_.UPPER# IN PROCEDURE TOP$MME_POINIT
     12620**DCL     12670<<ASSIGN
PARAMETER_BIT IN PROCEDURE TOP$MME_POINIT
     12627**DCL     12687<<ASSIGN
PARAMETER_BYTE.BYTE0 IN PROCEDURE TOP$MME_POINIT
     12623**DCL     12680<<ASSIGN
PARAMETER_BYTE.BYTE1 IN PROCEDURE TOP$MME_POINIT
     12624**DCL     12681<<ASSIGN
PARAMETER_BYTE.BYTE2 IN PROCEDURE TOP$MME_POINIT
     12625**DCL     12659<<ASSIGN  12661<<ASSIGN  12663<<ASSIGN  12682<<ASSIGN
PARAMETER_BYTE.BYTE3 IN PROCEDURE TOP$MME_POINIT
     12626**DCL     12683<<ASSIGN
PAY_TIO_CC IN PROCEDURE TOP$TIO_DONE
     16727**PROC    16617--CALL    16622--CALL    16629--CALL
POINIT.LSTLOC_ADR# IN PROCEDURE TOP$MME_POINIT
     12633**DCL     12669>>ASSIGN
POINIT.MMEXEC_ADR# IN PROCEDURE TOP$MME_POINIT
     12643**DCL     12686>>ASSIGN
POINIT.OP_SYS_CODE_ADR# IN PROCEDURE TOP$MME_POINIT
     12632**DCL     12653>>IF      12655>>ASSIGN
POINIT.TBWRK_ADR# IN PROCEDURE TOP$MME_POINIT
     12635**DCL     12671>>ASSIGN
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:746  
POINIT.TDIOC_ADR# IN PROCEDURE TOP$MME_POINIT
     12637**DCL     12673>>ASSIGN
POINIT.WRADD_ADR# IN PROCEDURE TOP$MME_POINIT
     12639**DCL     12685>>ASSIGN
POINIT.WWFLAG_ADR# IN PROCEDURE TOP$MME_POINIT
     12631**DCL     12666>>ASSIGN
POLTS_IO$ IN PROCEDURE COPY_IO_ENTRY
     14850**DCL     14856<<ASSIGN  14858>>ASSIGN
POLTS_IO$ IN PROCEDURE GET_SCT_ADR
     14819**DCL     14830<<ASSIGN  14831>>ASSIGN
POLTS_STATUS$ IN PROCEDURE RETURN_SPECIAL_STATUS
     16772**DCL     16779<<ASSIGN  16780>>ASSIGN
POLTS_STATUS$ IN PROCEDURE RETURN_STATUS
     11981**DCL     11988<<ASSIGN  11989>>ASSIGN  11990>>ASSIGN  11991>>ASSIGN  11992>>ASSIGN  11993>>ASSIGN
POLTS_STATUS$ IN PROCEDURE RETURN_TIO_STATUS
     16670**DCL     16681<<ASSIGN  16682>>ASSIGN  16683>>IF      16685>>ASSIGN  16686>>ASSIGN  16687>>ASSIGN
     16688>>ASSIGN  16690>>ASSIGN  16691>>ASSIGN  16695>>ASSIGN  16695>>ASSIGN
PROCESS_DCWS IN PROCEDURE BUILD_DCW_LIST
     15122**PROC    14981--CALL    14986--CALL    14989--CALL    14993--CALL    14996--CALL
PROCESS_IDCW IN PROCEDURE BUILD_DCW_LIST
     15164**PROC    14988--CALL    14995--CALL
P_AREG IN PROCEDURE TOP$MME_EXPDEV
     11743**DCL     11739--PROC    11750<<ASSIGN
P_AREG IN PROCEDURE TOP$MME_GETLIN
     11808**DCL     11806--PROC
P_AREG IN PROCEDURE TOP$MME_IOCONS
     12051**DCL     12048--PROC    12060<<ASSIGN
P_AREG IN PROCEDURE TOP$MME_LODVFC
     12227**DCL     12224--PROC
P_AREG IN PROCEDURE TOP$MME_LPWDT
     12255**DCL     12252--PROC    12287<<ASSIGN
P_AREG IN PROCEDURE TOP$MME_PRTRAN
     12717**DCL     12709--PROC
P_AREG IN PROCEDURE TOP$MME_RELEAS
     12768**DCL     12755--PROC
P_AREG IN PROCEDURE TOP$MME_RELLNK
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:747  
     12842**DCL     12840--PROC
P_MMEWD1 IN PROCEDURE TOP$MME_PRTRAN
     12712**DCL     12709--PROC    12713--REDEF
P_MMEWD2 IN PROCEDURE BUILD_SCTWRK
     16343**DCL     16302--PROC    16344--REDEF
P_QREG IN PROCEDURE TOP$MME_EXPDEV
     11744**DCL     11739--PROC    11751<<ASSIGN
P_QREG IN PROCEDURE TOP$MME_GETLIN
     11809**DCL     11806--PROC
P_QREG IN PROCEDURE TOP$MME_RELEAS
     12769**DCL     12755--PROC
P_QREG IN PROCEDURE TOP$MME_RELLNK
     12843**DCL     12840--PROC
P_X0REG IN PROCEDURE TOP$MME_RELEAS
     12759**DCL     12755--PROC
P_X1REG IN PROCEDURE TOP$MME_ASGPAT
     11627**DCL     11624--PROC    11634<>CALL
P_X1REG IN PROCEDURE TOP$MME_DEALCP
     11714**DCL     11712--PROC
P_X1REG IN PROCEDURE TOP$MME_EXPDEV
     11742**DCL     11739--PROC    11749<>CALL
P_X1REG IN PROCEDURE TOP$MME_GETLIN
     11810**DCL     11806--PROC
P_X1REG IN PROCEDURE TOP$MME_IOCONS
     12052**DCL     12048--PROC    12058<>CALL
P_X1REG IN PROCEDURE TOP$MME_IPCWDT
     12142**DCL     12124--PROC    12143--REDEF
P_X1REG IN PROCEDURE TOP$MME_LODIMG
     12203**DCL     12201--PROC
P_X1REG IN PROCEDURE TOP$MME_LODVFC
     12226**DCL     12224--PROC
P_X1REG IN PROCEDURE TOP$MME_LPWDT
     12256**DCL     12252--PROC    12257--REDEF
P_X1REG IN PROCEDURE TOP$MME_PRTRAN
     12716**DCL     12709--PROC    12724<>CALL
P_X1REG IN PROCEDURE TOP$MME_RELEAS
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:748  
     12760**DCL     12755--PROC    12774<>CALL
P_X1REG IN PROCEDURE TOP$MME_RELLNK
     12844**DCL     12840--PROC
P_X1REG IN PROCEDURE TOP$MME_RELMPC
     12867**DCL     12865--PROC
P_X1REG IN PROCEDURE TOP$MME_UNSPEC
     15297**DCL     15295--PROC
P_X2REG IN PROCEDURE TOP$MME_ASGPAT
     11628**DCL     11624--PROC
P_X2REG IN PROCEDURE TOP$MME_RELEAS
     12761**DCL     12755--PROC
P_X3REG IN PROCEDURE TOP$MME_GETLIN
     11811**DCL     11806--PROC
P_X3REG IN PROCEDURE TOP$MME_RELLNK
     12845**DCL     12840--PROC
P_X4REG IN PROCEDURE TOP$MME_ASGPAT
     11629**DCL     11624--PROC    11635>>ASSIGN
P_X4REG IN PROCEDURE TOP$MME_GETLIN
     11812**DCL     11806--PROC
P_X4REG IN PROCEDURE TOP$MME_RELEAS
     12762**DCL     12755--PROC
P_X4REG IN PROCEDURE TOP$MME_RELLNK
     12846**DCL     12840--PROC
P_X4REG IN PROCEDURE TOP$MME_RLSPAT
     12887**DCL     12885--PROC
P_X6REG IN PROCEDURE TOP$MME_RELEAS
     12763**DCL     12755--PROC
P_X7REG IN PROCEDURE TOP$MME_RELEAS
     12764**DCL     12755--PROC    12765--REDEF
Q IN PROCEDURE SET_RETURN_VALUES
     15244**DCL     15241--PROC    15275<<ASSIGN  15276<<ASSIGN
Q IN PROCEDURE TOP$MME_ALCMCA
     10691**DCL     10682--PROC    10702>>DOCASE
Q IN PROCEDURE TOP$MME_ALLOCR
     10848**DCL     10838--PROC    10895<>CALL
Q IN PROCEDURE TOP$MME_HUNGTM
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:749  
     11904**DCL     11899--PROC    11916<<ASSIGN  11922<<ASSIGN
Q IN PROCEDURE TOP$MME_PACMAN
     12335**DCL     12332--PROC    12336--REDEF
Q IN PROCEDURE TOP$MME_SCTCMP
     13011**DCL     13007--PROC    13075<>CALL
Q IN PROCEDURE TOP$MME_TESTIO
     14742**DCL     14733--PROC    14759<>CALL
Q_REG IN PROCEDURE BUILD_SCTWRK
     16307**DCL     16302--PROC    16308--REDEF   16393<<ASSIGN
Q_REG IN PROCEDURE TOP$MME_WRDUMP
     15347**DCL     15321--PROC
Q_REG.ADDR# IN PROCEDURE TOP$MME_WRDUMP
     15348**DCL     16103>>ASSIGN
Q_REG.SIZE# IN PROCEDURE TOP$MME_WRDUMP
     15349**DCL     16098>>ASSIGN  16104>>ASSIGN
Q_REG_.TAPE_ICC.FORMAT# IN PROCEDURE BUILD_SCTWRK
     16312**DCL     16399<<ASSIGN
Q_REG_.TAPE_ICC.NEW_FORMAT.CHAN# IN PROCEDURE BUILD_SCTWRK
     16318**DCL     16402<<ASSIGN
Q_REG_.TAPE_ICC.NEW_FORMAT.IOM# IN PROCEDURE BUILD_SCTWRK
     16317**DCL     16400<<ASSIGN
Q_REG_.TAPE_ICC.OLD_FORMAT IN PROCEDURE BUILD_SCTWRK
     16313**DCL     16316--REDEF
Q_REG_.TAPE_ICC.OLD_FORMAT.CHAN# IN PROCEDURE BUILD_SCTWRK
     16315**DCL     16408<<ASSIGN
Q_REG_.TAPE_ICC.OLD_FORMAT.IOM# IN PROCEDURE BUILD_SCTWRK
     16314**DCL     16406<<ASSIGN
Q_REG_.TAPE_URC_FLAG# IN PROCEDURE BUILD_SCTWRK
     16309**DCL     16396<<ASSIGN
Q_REG_.URC_ICC.OLD_FORMAT IN PROCEDURE BUILD_SCTWRK
     16322**DCL     16325--REDEF
RCW IN PROCEDURE GET_BCD_BUFFER
     16190**DCL     16193--REDEF
RCW.RCD_LGTH# IN PROCEDURE GET_BCD_BUFFER
     16191**DCL     16206>>DOINDEX 16211>>ASSIGN  16213>>ASSIGN
RCW_ IN PROCEDURE GET_BCD_BUFFER
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:750  
     16193**DCL     16205<<ASSIGN
READ_BUF IN PROCEDURE TOP$MME_WRDUMP
     15390**DCL     15391--REDEF   15957<<ASSIGN  15958--ASSIGN  15968>>CALLBLT 15972>>IF      15975>>IF
     16002<<ASSIGN  16003--ASSIGN  16006>>IF      16014>>CALLBLT 16017>>IF      16036>>CALLBLT 16045>>ASSIGN
     16052>>ASSIGN  16056>>ASSIGN
READ_BUF_ IN PROCEDURE TOP$MME_WRDUMP
     15391**DCL     15963>>DOWHILE 15991>>IF      16011>>DOWHILE
READ_CONFIG IN PROCEDURE GET_DEVICE_CODE
     13367**DCL     13716<>CALL    13720<>CALL    13723<>CALL    13877<>CALL    14053<>CALL
READ_CONFIG.BUF_ IN PROCEDURE GET_DEVICE_CODE
     13369**DCL     13715<<ASSIGN  13876<<ASSIGN  14052<<ASSIGN
READ_CONFIG.KEY_ IN PROCEDURE GET_DEVICE_CODE
     13367**DCL     13714<<ASSIGN  13719<<ASSIGN  13722<<ASSIGN  13875<<ASSIGN  14051<<ASSIGN
READ_CONFIG.STATION_ IN PROCEDURE GET_DEVICE_CODE
     13370**DCL     13371--REDEF
READ_CONFIG.V IN PROCEDURE GET_DEVICE_CODE
     13371**DCL     13367--DCLINIT
READ_CONFIG.V.DVBYTE.REREAD# IN PROCEDURE GET_DEVICE_CODE
     13382**DCL     13382--REDEF
READ_CONFIG.V.INDX# IN PROCEDURE GET_DEVICE_CODE
     13380**DCL     13380--REDEF
READ_IO.BUF_
      9964**DCL     15958<<ASSIGN  16003<<ASSIGN
READ_IO.STATION_
      9965**DCL      9966--REDEF
READ_IO.V.DVBYTE.REREAD#
      9977**DCL      9977--REDEF
READ_IO.V.INDX#
      9975**DCL      9975--REDEF
REASON IN PROCEDURE GET_DEVICE_CODE
     13227**DCL     13194--PROC    13494<<ASSIGN  13500<<ASSIGN  13504<>CALL    13514<<ASSIGN
REASON IN PROCEDURE MAP_MPC_DEVICE
     14019**DCL     13987--PROC    14062<<ASSIGN
REASON IN PROCEDURE RELEASE_CHANNELS
     12553**DCL     12549--PROC    12571<<ASSIGN
REASON IN PROCEDURE SUSPEND_CHANNELS
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:751  
     12417**DCL     12413--PROC    12439<<ASSIGN
REASON IN PROCEDURE TOP$MME_SCTCMP
     13049**DCL     13060<>CALL    13063>>ASSIGN
REASON IN PROCEDURE VALIDATE_DEVICE_TYPE
     13932**DCL     13900--PROC    13938<>CALL    13943<<ASSIGN  13947<<ASSIGN
RELEASE_CHANNELS IN PROCEDURE TOP$MME_PACMAN
     12549**PROC    12372--CALL
RELEASE_DEVICE IN PROCEDURE TOP$MME_RELEAS
     12810**PROC    12777--CALL
RELEASE_ID.TYPE IN PROCEDURE TOP$MME_RELEAS
     12766**DCL     12775>>DOCASE
REPORT_CHANNELS IN PROCEDURE TOP$MME_PACMAN
     12467**PROC    12371--CALL
RETURN_DELTA
      9898**DCL        56--PROC    10554<>CALL    10556<>CALL    10559<>CALL    10561<>CALL    10563<>CALL
     10565<>CALL    10567<>CALL    10569<>CALL    10572<>CALL    10574<>CALL    10576<>CALL    10578<>CALL
     10580<>CALL    10582<>CALL    10584<>CALL    10586<>CALL    10588<>CALL    10591<>CALL    10594<>CALL
     10597<>CALL    10599<>CALL    10601<>CALL    10604<>CALL    10607<>CALL    10609<>CALL    10661--ENTRY
RETURN_DELTA IN PROCEDURE SET_RETURN_VALUES
     15247**DCL     15241--PROC    15280<<ASSIGN
RETURN_DELTA IN PROCEDURE TOP$MME_ALCMCA
     10693**DCL     10682--PROC    10695<<ASSIGN
RETURN_DELTA IN PROCEDURE TOP$MME_ALLOCR
     10864**DCL     10838--PROC    10880<<ASSIGN  10889<<ASSIGN  10897<<ASSIGN
RETURN_DELTA IN PROCEDURE TOP$MME_ASGPAT
     11630**DCL     11624--PROC    11636<<ASSIGN
RETURN_DELTA IN PROCEDURE TOP$MME_CHANTM
     11664**DCL     11660--PROC    11671<<ASSIGN
RETURN_DELTA IN PROCEDURE TOP$MME_DEALCP
     11715**DCL     11712--PROC    11719<<ASSIGN
RETURN_DELTA IN PROCEDURE TOP$MME_EXPDEV
     11745**DCL     11739--PROC    11752<<ASSIGN
RETURN_DELTA IN PROCEDURE TOP$MME_GETCSC
     11780**DCL     11776--PROC    11792<<ASSIGN
RETURN_DELTA IN PROCEDURE TOP$MME_GETLIN
     11813**DCL     11806--PROC    11817<<ASSIGN
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:752  
RETURN_DELTA IN PROCEDURE TOP$MME_HUNGTM
     11906**DCL     11899--PROC    11918<<ASSIGN  11923<<ASSIGN
RETURN_DELTA IN PROCEDURE TOP$MME_IOCONS
     12053**DCL     12048--PROC    12061<<ASSIGN
RETURN_DELTA IN PROCEDURE TOP$MME_IPCWDT
     12155**DCL     12124--PROC    12185<<ASSIGN
RETURN_DELTA IN PROCEDURE TOP$MME_LODIMG
     12204**DCL     12201--PROC    12208<<ASSIGN
RETURN_DELTA IN PROCEDURE TOP$MME_LODVFC
     12228**DCL     12224--PROC    12232<<ASSIGN
RETURN_DELTA IN PROCEDURE TOP$MME_LPWDT
     12269**DCL     12252--PROC    12288<<ASSIGN
RETURN_DELTA IN PROCEDURE TOP$MME_PACMAN
     12347**DCL     12332--PROC    12358<<ASSIGN  12367<<ASSIGN  12368<<ASSIGN  12375<<ASSIGN
RETURN_DELTA IN PROCEDURE TOP$MME_POINIT
     12649**DCL     12614--PROC    12688<<ASSIGN
RETURN_DELTA IN PROCEDURE TOP$MME_PRTRAN
     12718**DCL     12709--PROC    12727<<ASSIGN
RETURN_DELTA IN PROCEDURE TOP$MME_RELEAS
     12770**DCL     12755--PROC    12779<<ASSIGN  12785<<ASSIGN  12788<<ASSIGN
RETURN_DELTA IN PROCEDURE TOP$MME_RELLNK
     12847**DCL     12840--PROC    12851<<ASSIGN
RETURN_DELTA IN PROCEDURE TOP$MME_RELMPC
     12868**DCL     12865--PROC    12872<<ASSIGN
RETURN_DELTA IN PROCEDURE TOP$MME_RLSPAT
     12888**DCL     12885--PROC    12892<<ASSIGN
RETURN_DELTA IN PROCEDURE TOP$MME_SCTCMP
     13014**DCL     13007--PROC    13055<<ASSIGN  13062<<ASSIGN  13069<<ASSIGN  13076<<ASSIGN
RETURN_DELTA IN PROCEDURE TOP$MME_TESTIO
     14744**DCL     14733--PROC    14759<>CALL
RETURN_DELTA IN PROCEDURE TOP$MME_UNSPEC
     15298**DCL     15295--PROC    15302<<ASSIGN
RETURN_DELTA IN PROCEDURE TOP$MME_WRDUMP
     15352**DCL     15321--PROC    15914<<ASSIGN
RETURN_SPECIAL_STATUS IN PROCEDURE TOP$TIO_DONE
     16770**PROC    16628--CALL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:753  
RETURN_STATUS IN PROCEDURE TOP$MME_HUNGTM
     11978**PROC    11914--CALL
RETURN_TIO_STATUS IN PROCEDURE TOP$TIO_DONE
     16668**PROC    16616--CALL    16621--CALL
SCT IN PROCEDURE BOGUS_TDOPEN
     13762**DCL     13751--PROC
SCT.FICCDD.CHANNEL# IN PROCEDURE BOGUS_TDOPEN
     13767**DCL     13791>>ASSIGN
SCT.FICCDD.DEVICE# IN PROCEDURE BOGUS_TDOPEN
     13768**DCL     13792>>ASSIGN
SCT.FICCDD.IOM# IN PROCEDURE BOGUS_TDOPEN
     13766**DCL     13790>>ASSIGN
SCT.TEST_TYPE IN PROCEDURE BOGUS_TDOPEN
     13770**DCL     13787>>IF
SCT IN PROCEDURE BUILD_SCT_FICCDD
     13556**DCL     13541--PROC
SCT.FICCDD.CHANNEL# IN PROCEDURE BUILD_SCT_FICCDD
     13561**DCL     13596<<ASSIGN  13597<<ASSIGN
SCT.FICCDD.DEVICE# IN PROCEDURE BUILD_SCT_FICCDD
     13562**DCL     13598<<ASSIGN
SCT.FICCDD.FLAG# IN PROCEDURE BUILD_SCT_FICCDD
     13558**DCL     13592<<ASSIGN
SCT.FICCDD.FORMAT# IN PROCEDURE BUILD_SCT_FICCDD
     13559**DCL     13593<<ASSIGN
SCT.FICCDD.IOM# IN PROCEDURE BUILD_SCT_FICCDD
     13560**DCL     13594<<ASSIGN
SCT.TEST_TYPE IN PROCEDURE BUILD_SCT_FICCDD
     13564**DCL     13599<<ASSIGN
SCT IN PROCEDURE BUILD_TEST_CONTROL_ENTRY
     14259**DCL     14247--PROC
SCT.BIT12 IN PROCEDURE BUILD_TEST_CONTROL_ENTRY
     14275**DCL     14331>>ASSIGN
SCT.BIT13 IN PROCEDURE BUILD_TEST_CONTROL_ENTRY
     14274**DCL     14332>>ASSIGN
SCT.BIT17 IN PROCEDURE BUILD_TEST_CONTROL_ENTRY
     14273**DCL     14333>>ASSIGN
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:754  
SCT.DEVICE_CODE IN PROCEDURE BUILD_TEST_CONTROL_ENTRY
     14268**DCL     14322>>ASSIGN
SCT.FICCDD.CHANNEL# IN PROCEDURE BUILD_TEST_CONTROL_ENTRY
     14264**DCL     14286>>ASSIGN
SCT.FICCDD.DEVICE# IN PROCEDURE BUILD_TEST_CONTROL_ENTRY
     14265**DCL     14287>>ASSIGN
SCT.FICCDD.FLAG# IN PROCEDURE BUILD_TEST_CONTROL_ENTRY
     14261**DCL     14289>>ASSIGN
SCT.FICCDD.FORMAT# IN PROCEDURE BUILD_TEST_CONTROL_ENTRY
     14262**DCL     14288>>ASSIGN
SCT.FICCDD.IOM# IN PROCEDURE BUILD_TEST_CONTROL_ENTRY
     14263**DCL     14285>>ASSIGN
SCT.FIRMWARE.LP# IN PROCEDURE BUILD_TEST_CONTROL_ENTRY
     14271**DCL     14337>>ASSIGN
SCT.FIRMWARE.RP# IN PROCEDURE BUILD_TEST_CONTROL_ENTRY
     14272**DCL     14338>>ASSIGN
SCT.FIRMWARE.TYPE# IN PROCEDURE BUILD_TEST_CONTROL_ENTRY
     14270**DCL     14336>>ASSIGN
SCT.MODEL IN PROCEDURE BUILD_TEST_CONTROL_ENTRY
     14276**DCL     14341>>ASSIGN
SCT.MPC_MODEL IN PROCEDURE BUILD_TEST_CONTROL_ENTRY
     14277**DCL     14342>>ASSIGN
SCT.TEST_TYPE IN PROCEDURE BUILD_TEST_CONTROL_ENTRY
     14267**DCL     14292>>DOCASE
SCT IN PROCEDURE GET_CHANNEL_DEVICE
     13634**DCL     13623--PROC
SCT.FICCDD.CHANNEL# IN PROCEDURE GET_CHANNEL_DEVICE
     13639**DCL     13728>>ASSIGN
SCT.FICCDD.IOM# IN PROCEDURE GET_CHANNEL_DEVICE
     13638**DCL     13717>>IF      13719>>ASSIGN  13722>>ASSIGN
SCT IN PROCEDURE GET_DEVICE_CODE
     13207**DCL     13194--PROC    13479<>CALL    13491<>CALL    13497<>CALL    13503<>CALL    13504<>CALL
     13511<>CALL
SCT.TEST_TYPE IN PROCEDURE GET_DEVICE_CODE
     13215**DCL     13488>>IF
SCT IN PROCEDURE GET_MODEL_ID
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:755  
     13826**DCL     13815--PROC
SCT.MODEL IN PROCEDURE GET_MODEL_ID
     13843**DCL     13879<<ASSIGN
SCT IN PROCEDURE MAP_DEVICE
     14104**DCL     14091--PROC
SCT.BIT12 IN PROCEDURE MAP_DEVICE
     14120**DCL     14129<<ASSIGN  14182<<ASSIGN
SCT.BIT13 IN PROCEDURE MAP_DEVICE
     14119**DCL     14128<<ASSIGN  14146<<ASSIGN  14172<<ASSIGN
SCT.BIT17 IN PROCEDURE MAP_DEVICE
     14118**DCL     14127<<ASSIGN  14137<<ASSIGN  14168<<ASSIGN  14171<<ASSIGN  14199<<ASSIGN  14204<<ASSIGN
SCT.DEVICE_CODE IN PROCEDURE MAP_DEVICE
     14113**DCL     14132<<ASSIGN  14134<<ASSIGN  14136<<ASSIGN  14139<<ASSIGN  14141<<ASSIGN  14143<<ASSIGN
     14145<<ASSIGN  14149<<ASSIGN  14151<<ASSIGN  14153<<ASSIGN  14155<<ASSIGN  14157<<ASSIGN  14159<<ASSIGN
     14161<<ASSIGN  14163<<ASSIGN  14165<<ASSIGN  14167<<ASSIGN  14170<<ASSIGN  14174<<ASSIGN  14181<<ASSIGN
     14190<<ASSIGN  14192<<ASSIGN  14194<<ASSIGN  14196<<ASSIGN  14198<<ASSIGN  14201<<ASSIGN  14203<<ASSIGN
     14207>>IF
SCT.FIRMWARE.TYPE# IN PROCEDURE MAP_DEVICE
     14115**DCL     14188>>DOSELCT
SCT.MODEL IN PROCEDURE MAP_DEVICE
     14121**DCL     14130>>DOSELCT
SCT.TEST_TYPE IN PROCEDURE MAP_DEVICE
     14112**DCL     14179>>IF      14187>>IF
SCT IN PROCEDURE MAP_MPC_DEVICE
     13998**DCL     13987--PROC
SCT.FICCDD.CHANNEL# IN PROCEDURE MAP_MPC_DEVICE
     14003**DCL     14057>>IF
SCT.FICCDD.IOM# IN PROCEDURE MAP_MPC_DEVICE
     14002**DCL     14057>>IF
SCT.FIRMWARE.LP# IN PROCEDURE MAP_MPC_DEVICE
     14010**DCL     14069<<ASSIGN
SCT.FIRMWARE.RP# IN PROCEDURE MAP_MPC_DEVICE
     14011**DCL     14070<<ASSIGN
SCT.FIRMWARE.TYPE# IN PROCEDURE MAP_MPC_DEVICE
     14009**DCL     14068<<ASSIGN
SCT.MPC_MODEL IN PROCEDURE MAP_MPC_DEVICE
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:756  
     14016**DCL     14067<<ASSIGN
SCT.TEST_TYPE IN PROCEDURE MAP_MPC_DEVICE
     14006**DCL     14056>>IF
SCT IN PROCEDURE TOP$MME_SCTCMP
     13027**DCL     13060<>CALL    13067<>CALL
SCT.BIT12 IN PROCEDURE TOP$MME_SCTCMP
     13043**DCL     13075<>CALL
SCT.BIT13 IN PROCEDURE TOP$MME_SCTCMP
     13042**DCL     13075<>CALL
SCT.BIT17 IN PROCEDURE TOP$MME_SCTCMP
     13041**DCL     13075<>CALL
SCT IN PROCEDURE VALIDATE_DEVICE_TYPE
     13911**DCL     13900--PROC    13938<>CALL
SCT.FICCDD.DEVICE# IN PROCEDURE VALIDATE_DEVICE_TYPE
     13917**DCL     13940>>IF
SCT$ IN PROCEDURE BUILD_TEST_CONTROL_ENTRY
     14279**DCL     14280--REDEF   14325<<ASSIGN  14327<<ASSIGN
SCTWDS_BUILT IN PROCEDURE BUILD_SCTWRK
     16352**DCL     16302--PROC    16416>>IF
SCTWDS_BUILT IN PROCEDURE TOP$MME_ALLOCR
     10855**DCL     10894<<ASSIGN  10895<>CALL
SCTWDS_BUILT IN PROCEDURE TOP$MME_SCTCMP
     13048**DCL     13074<<ASSIGN  13075<>CALL
SCTWRK
     10324**DCL     16357<<ASSIGN
SCTWRK.ALTSCT_ADR#
     10328**DCL     16372<<ASSIGN
SCTWRK.CRCST_0
     10340**DCL     16418<<ASSIGN
SCTWRK.CRCST_0.MPC#
     10343**DCL     16435<<ASSIGN
SCTWRK.CRCST_0.VOLATILE_FW#
     10342**DCL     16434<<ASSIGN
SCTWRK.CRCST_1.BIT7#
     10347**DCL     16384<<ASSIGN
SCTWRK.CRCST_1.BIT8#
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:757  
     10348**DCL     16380<<ASSIGN
SCTWRK.CRCST_3.BIT9#
     10353**DCL     16387<<ASSIGN
SCTWRK.CSCT_ADR#
     10331**DCL     16375<<ASSIGN
SCTWRK.CTLR_TYPE#
     10333**DCL     16439<<ASSIGN  16441<<ASSIGN  16446<<ASSIGN  16448<<ASSIGN  16450<<ASSIGN
SCTWRK.GCOS_TYPE_CODE#
     10329**DCL     16374<<ASSIGN
SCTWRK.IOC_TYPE#
     10332**DCL     16361<<ASSIGN  16363<<ASSIGN  16365<<ASSIGN
SCTWRK.MPC_INDEX#
     10339**DCL     16377<<ASSIGN
SCTWRK.MPC_SCT_ADR#
     10338**DCL     16376<<ASSIGN
SCTWRK.SCT_0
     10355**DCL     16419<<ASSIGN
SCTWRK.SCT_0.BIT12#
     10358**DCL     16425<<ASSIGN
SCTWRK.SCT_0.BIT17#
     10362**DCL     16423<<ASSIGN  16431<<ASSIGN
SCTWRK.SCT_0.DEV_TYPE#
     10356**DCL     16430<<ASSIGN
SCTWRK.SCT_0.SPEED#
     10359**DCL     16424<<ASSIGN
SCTWRK.SCT_1
     10364**DCL     16420<<ASSIGN
SCTWRK.SCT_ADR#
     10325**DCL     16370<<ASSIGN  16371<<ASSIGN
SCTWRK.XBICC#
     10327**DCL     16373<<ASSIGN
SCTWRK$ IN PROCEDURE BUILD_SCTWRK
     16351**DCL     16356<<ASSIGN  16357>>ASSIGN  16361>>ASSIGN  16363>>ASSIGN  16365>>ASSIGN  16370>>ASSIGN
     16371>>ASSIGN  16372>>ASSIGN  16373>>ASSIGN  16374>>ASSIGN  16375>>ASSIGN  16376>>ASSIGN  16377>>ASSIGN
     16380>>ASSIGN  16384>>ASSIGN  16387>>ASSIGN  16418>>ASSIGN  16419>>ASSIGN  16420>>ASSIGN  16423>>ASSIGN
     16424>>ASSIGN  16425>>ASSIGN  16430>>ASSIGN  16431>>ASSIGN  16434>>ASSIGN  16435>>ASSIGN  16439>>ASSIGN
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:758  
     16441>>ASSIGN  16446>>ASSIGN  16448>>ASSIGN  16450>>ASSIGN
SCT_.ADDR# IN PROCEDURE BUILD_TEST_CONTROL_ENTRY
     14281**DCL     14326>>ASSIGN  14328>>ASSIGN
SCT_PTR.ADDR# IN PROCEDURE BUILD_SCTWRK
     16340**DCL     16371>>ASSIGN
SETUP_DUMP_FID IN PROCEDURE GET_DUMP_OUTPUT_MODE
     16032**PROC    16022--CALL
SET_DUMP_PARAMS IN PROCEDURE TOP$MME_WRDUMP
     16087**PROC    15909--CALL
SET_MTAR_PERMISSION IN PROCEDURE TOP$MME_ALLOCR
     11157**PROC    10883--CALL
SET_RETURN_VALUES IN PROCEDURE TOP$MME_TESTIO
     15241**PROC    14759--CALL
SET_TDIO_FPT IN PROCEDURE TOP$MME_TESTIO
     14902**PROC    14756--CALL
SET_TDOPEN_FPT IN PROCEDURE TOP$MME_ALLOCR
     11065**PROC    10876--CALL
STATUS
     10370**DCL     11989<<ASSIGN  16682<<ASSIGN  16780<<ASSIGN
STATUS.ABORT_INDICATOR#
     10380**DCL     16691<<ASSIGN
STATUS.DATA_ADDRESS_RESIDUE#
     10385**DCL     16695<<ASSIGN  16695>>ASSIGN
STATUS.INTERRUPT_INDICATOR#
     10379**DCL     11993<<ASSIGN  16688<<ASSIGN
STATUS.LOST_INTERRUPT#
     10378**DCL     11992<<ASSIGN  16687<<ASSIGN  16690<<ASSIGN
STATUS.MAJOR#
     10373**DCL     11455>>IF      11990<<ASSIGN  16612>>IF      16683>>IF      16685<<ASSIGN
STATUS.MINOR#
     10374**DCL     11455>>IF      16612>>IF
STATUS.TERMINATION_INDICATOR#
     10371**DCL     11991<<ASSIGN  16686<<ASSIGN
STATUS$ IN PROCEDURE GET_DENSITIES
     11422**DCL     11454<<ASSIGN  11455>>IF      11455>>IF
SUM IN PROCEDURE GET_BCD_BUFFER
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:759  
     16195**DCL     16203<<ASSIGN  16211<<ASSIGN  16211>>ASSIGN  16215>>ASSIGN
SUSPEND_CHANNELS IN PROCEDURE TOP$MME_PACMAN
     12413**PROC    12363--CALL
TCX IN PROCEDURE BUILD_CONTROLLER_SCT
     11574**DCL     11572--PROC    11588>>ASSIGN  11590>>IF      11593>>IF
TCX IN PROCEDURE BUILD_DCW_LIST
     14948**DCL     14946--PROC    14976>>DOCASE  15008>>ASSIGN  15011>>ASSIGN  15015>>ASSIGN  15016>>IF
     15016>>IF      15019>>ASSIGN  15020>>ASSIGN  15021>>ASSIGN  15024>>IF      15024>>IF      15032>>DOCASE
     15036>>IF      15040>>IF      15040>>IF      15046>>IF      15047>>IF      15048>>ASSIGN  15050>>ASSIGN
     15053>>ASSIGN  15057>>IF      15064>>IF      15065>>ASSIGN  15079>>ASSIGN  15082>>IF      15082>>IF
     15090>>ASSIGN  15095>>ASSIGN  15099>>IF      15115>>ASSIGN  15169>>IF      15169>>IF
TCX IN PROCEDURE BUILD_DEVICE_SCT
     11212**DCL     11209--PROC    11237>>ASSIGN  11238>>DOCASE  11278>>ASSIGN  11298>>ASSIGN  11321>>ASSIGN
     11323>>IF      11327>>ASSIGN  11446>>ASSIGN  11454>>ASSIGN  11458>>IF      11459>>ASSIGN  11460>>ASSIGN
     11461>>ASSIGN  11498>>ASSIGN  11501>>ASSIGN  11502>>ASSIGN  11520>>ASSIGN  11539>>ASSIGN
TCX IN PROCEDURE BUILD_SCTWRK
     16342**DCL     16302--PROC    16367>>ASSIGN  16368>>ASSIGN  16369>>IF      16374>>ASSIGN  16377>>ASSIGN
     16378>>IF      16378>>IF      16382>>IF      16382>>IF      16386>>IF      16390>>IF      16390>>IF
     16394>>IF      16397>>IF      16400>>ASSIGN  16402>>ASSIGN  16406>>ASSIGN  16408>>ASSIGN  16423>>ASSIGN
     16424>>ASSIGN  16425>>ASSIGN  16426>>IF      16426>>IF      16428>>IF      16430>>ASSIGN  16437>>DOSELCT
TCX IN PROCEDURE BUILD_TEST_CONTROL_ENTRY
     14249**DCL     14247--PROC    14285>>ASSIGN  14286>>ASSIGN  14287>>ASSIGN  14288>>ASSIGN  14289>>ASSIGN
     14294>>ASSIGN  14296>>ASSIGN  14298>>ASSIGN  14300>>ASSIGN  14302>>ASSIGN  14304>>ASSIGN  14306>>ASSIGN
     14308>>ASSIGN  14310>>ASSIGN  14312>>ASSIGN  14314>>ASSIGN  14316>>ASSIGN  14322>>ASSIGN  14325>>ASSIGN
     14326>>ASSIGN  14327>>ASSIGN  14328>>ASSIGN  14331>>ASSIGN  14332>>ASSIGN  14333>>ASSIGN  14336>>ASSIGN
     14337>>ASSIGN  14338>>ASSIGN  14341>>ASSIGN  14342>>ASSIGN
TCX IN PROCEDURE COPY_IO_ENTRY
     14849**DCL     14846--PROC    14857>>ASSIGN  14859>>ASSIGN
TCX IN PROCEDURE DEDICATE_CHANNEL_3
     10728**DCL     10726--PROC    10732>>ASSIGN  10733>>ASSIGN  10734>>ASSIGN
TCX IN PROCEDURE FIND_VACANT_ENTRY
     13094**DCL     13092--PROC    13100<<ASSIGN  13101>>DOWHILE 13101>>DOWHILE 13102<<ASSIGN  13102>>ASSIGN
     13104>>IF      13107>>ASSIGN
TCX IN PROCEDURE GET_TEST_DCB
     10972**DCL     10970--PROC    11016>>CALLBLT 11019>>ASSIGN
TCX IN PROCEDURE GIVE_COURTESY_CALL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:760  
     12017**DCL     12015--PROC    12022>>IF      12025>>ASSIGN
TCX IN PROCEDURE ISSUE_IO
     15211**DCL     15209--PROC    15217>>ASSIGN
TCX IN PROCEDURE MATCH_ICC
     16467**DCL     16465--PROC    16472<<ASSIGN  16473>>DOWHILE 16474>>IF      16476<<ASSIGN  16476>>ASSIGN
TCX IN PROCEDURE MATCH_ICCDD
     10923**DCL     10921--PROC    10943<<ASSIGN  10944>>DOWHILE 10945>>IF      10947<<ASSIGN  10947>>ASSIGN
TCX IN PROCEDURE MATCH_IO_ENTRY
     11940**DCL     11937--PROC    11944<<ASSIGN  11945>>DOWHILE 11946>>IF      11948<<ASSIGN  11948>>ASSIGN
TCX IN PROCEDURE MATCH_PAT_PTR
     11686**DCL     11684--PROC    11691<<ASSIGN  11692>>DOWHILE 11693>>IF      11695<<ASSIGN  11695>>ASSIGN
TCX IN PROCEDURE MATCH_SCT_ADR
     16505**DCL     16503--PROC    16510<<ASSIGN  16511>>DOWHILE 16512>>IF      16514>>ASSIGN  16517<<ASSIGN
     16517>>ASSIGN  16520<<ASSIGN  16521>>DOWHILE 16522>>IF      16524>>ASSIGN  16527<<ASSIGN  16527>>ASSIGN
TCX IN PROCEDURE RELEASE_CHANNELS
     12551**DCL     12549--PROC
TCX IN PROCEDURE RELEASE_DEVICE
     12812**DCL     12810--PROC    12816>>ASSIGN  12822>>ASSIGN  12823>>ASSIGN  12824>>ASSIGN  12825>>ASSIGN
TCX IN PROCEDURE RETURN_STATUS
     11980**DCL     11978--PROC    11985>>IF      11988>>ASSIGN
TCX IN PROCEDURE SET_MTAR_PERMISSION
     11159**DCL     11157--PROC    11167>>IF
TCX IN PROCEDURE SET_RETURN_VALUES
     15243**DCL     15241--PROC    15274>>IF      15279>>ASSIGN
TCX IN PROCEDURE SET_TDIO_FPT
     14904**DCL     14902--PROC    14908>>ASSIGN  14909>>ASSIGN  14910>>ASSIGN  14911>>ASSIGN  14912>>ASSIGN
     14916>>ASSIGN  14917>>IF
TCX IN PROCEDURE SET_TDOPEN_FPT
     11067**DCL     11065--PROC    11071>>ASSIGN  11073>>DOSELCT 11078>>ASSIGN  11084>>DOCASE  11098>>ASSIGN
     11099>>ASSIGN
TCX IN PROCEDURE SUSPEND_CHANNELS
     12415**DCL     12413--PROC
TCX IN PROCEDURE TOP$MME_ALCMCA
     10692**DCL     10698<>CALL    10704<>CALL
TCX IN PROCEDURE TOP$MME_ALLOCR
     10853**DCL     10868<>CALL    10871>>IF      10873>>ASSIGN  10875<>CALL    10876<>CALL    10883<>CALL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:761  
     10886<>CALL    10892<>CALL    10895<>CALL    11125>>IF      11125>>IF      11125>>IF
TCX IN PROCEDURE TOP$MME_ASGPAT
     11626**DCL     11634<>CALL    11635>>ASSIGN
TCX IN PROCEDURE TOP$MME_CHANTM
     11665**DCL     11669<>CALL    11670>>ASSIGN
TCX IN PROCEDURE TOP$MME_EXPDEV
     11741**DCL     11749<>CALL    11750>>ASSIGN  11751>>ASSIGN
TCX IN PROCEDURE TOP$MME_GETCSC
     11785**DCL     11789<>CALL    11790>>ASSIGN
TCX IN PROCEDURE TOP$MME_HUNGTM
     11907**DCL     11911<>CALL    11912>>IF      11912>>IF      11914<>CALL    11915<>CALL    11917>>ASSIGN
TCX IN PROCEDURE TOP$MME_IOCONS
     12050**DCL     12058<>CALL    12059>>ASSIGN
TCX IN PROCEDURE TOP$MME_IPCWDT
     12141**DCL     12168<>CALL    12171>>ASSIGN
TCX IN PROCEDURE TOP$MME_LPWDT
     12254**DCL     12284<>CALL    12285>>ASSIGN
TCX IN PROCEDURE TOP$MME_PACMAN
     12349**DCL     12355<>CALL    12363<>CALL    12372<>CALL
TCX IN PROCEDURE TOP$MME_PRTRAN
     12711**DCL     12724<>CALL    12726>>ASSIGN
TCX IN PROCEDURE TOP$MME_RELEAS
     12758**DCL     12774<>CALL    12777<>CALL
TCX IN PROCEDURE TOP$MME_SCTCMP
     13016**DCL     13053<>CALL    13067<>CALL    13075<>CALL
TCX IN PROCEDURE TOP$MME_TESTIO
     14747**DCL     14754<>CALL    14755<>CALL    14756<>CALL    14757<>CALL    14758<>CALL    14759<>CALL
TCX IN PROCEDURE TOP$TIO_DONE
     16599**DCL     16606<<ASSIGN  16607>>IF      16607>>IF      16608>>IF      16610>>ASSIGN  16614>>ASSIGN
     16625<<ASSIGN  16626>>IF      16677>>IF      16680>>ASSIGN  16681>>ASSIGN  16697>>IF      16700>>ASSIGN
     16733>>ASSIGN  16734>>IF      16737>>ASSIGN  16776>>IF      16779>>ASSIGN
TD$DEV.MODEL IN PROCEDURE GET_MODEL_ID
     13854**DCL     13879>>ASSIGN
TD$HEAD.NUMIOMS IN PROCEDURE GET_CHANNEL_DEVICE
     13669**DCL     13717>>IF
TD$IOM.DEVNAME IN PROCEDURE GET_CHANNEL_DEVICE
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:762  
     13704**DCL     13728>>ASSIGN
TD$MPC.CRPFWNAME IN PROCEDURE MAP_MPC_DEVICE
     14041**DCL     14070>>ASSIGN
TD$MPC.FWNAME IN PROCEDURE MAP_MPC_DEVICE
     14039**DCL     14068>>ASSIGN
TD$MPC.IOCHAN.IOM IN PROCEDURE MAP_MPC_DEVICE
     14031**DCL     14057>>IF
TD$MPC.IOCHAN.LOCHAN IN PROCEDURE MAP_MPC_DEVICE
     14032**DCL     14057>>IF
TD$MPC.IOCHAN.PRESENCE IN PROCEDURE MAP_MPC_DEVICE
     14029**DCL     14057>>IF
TD$MPC.LPFWNAME IN PROCEDURE MAP_MPC_DEVICE
     14040**DCL     14069>>ASSIGN
TD$MPC.MODEL IN PROCEDURE MAP_MPC_DEVICE
     14027**DCL     14067>>ASSIGN
TDCLOSE_FPT
     10452**DCL     10753<>CALL    12568<>CALL    12817<>CALL
TDCLOSE_FPT.V
     10452**DCL     10452--DCLINIT
TDCLOSE_FPT.V.DCB#
     10452**DCL     10752<<ASSIGN  12567<<ASSIGN  12816<<ASSIGN
TDIO_FPT
     10466**DCL     11452<>CALL    12179<>CALL    15218<>CALL
TDIO_FPT.DATA_
     10466**DCL     11444<<ASSIGN  12169<<ASSIGN  14801<<ASSIGN
TDIO_FPT.DCWLIST_
     10466**DCL     11445<<ASSIGN  12170<<ASSIGN  14911<<ASSIGN
TDIO_FPT.V
     10467**DCL     10466--DCLINIT
TDIO_FPT.V.ALTPATH
     10468**DCL     11449<<ASSIGN  12174<<ASSIGN  14915<<ASSIGN
TDIO_FPT.V.DCB#
     10467**DCL     11446<<ASSIGN  12171<<ASSIGN  14912<<ASSIGN
TDIO_FPT.V.EVENT#
     10469**DCL     11450<<ASSIGN  12175<<ASSIGN  14916<<ASSIGN
TDIO_FPT.V.PCW#
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:763  
     10469**DCL     11448<<ASSIGN  12173<<ASSIGN  14914<<ASSIGN
TDIO_FPT.V.TIMEOUT#
     10470**DCL     11451<<ASSIGN  12176<<ASSIGN  14918<<ASSIGN  14919<<ASSIGN
TDIO_FPT.V.WAIT#
     10467**DCL     11447<<ASSIGN  12172<<ASSIGN  14913<<ASSIGN
TDOPEN_FPT
     10483**DCL     10735<>CALL    11121<>CALL    11131<>CALL    12436<>CALL    13793<>CALL
TDOPEN_FPT.CHAIN_
     10483**DCL     11098<<ASSIGN
TDOPEN_FPT.V
     10484**DCL     10483--DCLINIT
TDOPEN_FPT.V.DCB#
     10484**DCL     10730<<ASSIGN  11071<<ASSIGN  12431<<ASSIGN  13786<<ASSIGN
TDOPEN_FPT.V.DEVICE.CHAN#
     10486**DCL     10733<<ASSIGN  11096<<ASSIGN  12434<<ASSIGN  13791<<ASSIGN
TDOPEN_FPT.V.DEVICE.DVN#
     10485**DCL     10734<<ASSIGN  11097<<ASSIGN  12435<<ASSIGN  13792<<ASSIGN
TDOPEN_FPT.V.DEVICE.IOM#
     10485**DCL     10732<<ASSIGN  11095<<ASSIGN  12356<<ASSIGN  13790<<ASSIGN
TDOPEN_FPT.V.NCHANS#
     10487**DCL     12433<<ASSIGN
TDOPEN_FPT.V.SPEVENT#
     10486**DCL     11078<<ASSIGN
TDOPEN_FPT.V.TEST#
     10486**DCL     10731<<ASSIGN  11075<<ASSIGN  11077<<ASSIGN  11080<<ASSIGN  11082<<ASSIGN  11086<<ASSIGN
     11088<<ASSIGN  11125>>IF      11130<<ASSIGN  11170>>IF      12432<<ASSIGN  13788<<ASSIGN  13789<<ASSIGN
TDOPEN_FPT.VFC_
     10483**DCL     11099<<ASSIGN
TD_DCB# IN PROCEDURE TOP$MME_LPWDT
     12270**DCL     12285<<ASSIGN  12286--ASSIGN
TD_DCB$ IN PROCEDURE RETURN_TIO_STATUS
     16671**DCL     16680<<ASSIGN  16682>>ASSIGN  16701>>IF      16703>>ASSIGN
TD_DCB$ IN PROCEDURE TOP$MME_IOCONS
     12054**DCL     12059<<ASSIGN  12060>>ASSIGN
TD_DCB$ IN PROCEDURE TOP$MME_LPWDT
     12271**DCL     12286<<ASSIGN  12287>>ASSIGN
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:764  
TD_DCB$ IN PROCEDURE TOP$TIO_DONE
     16600**DCL     16610<<ASSIGN  16611>>ASSIGN
TEMP$ IN PROCEDURE PROCESS_DCWS
     15125**DCL     15144<<ASSIGN  15145>>IF      15147>>ASSIGN
TEMP_ASCII_BUF IN PROCEDURE TOP$MME_WRDUMP
     15385**DCL     16138--ASSIGN  16164<>CALL    16165>>ASSIGN  16170<>CALL    16171>>ASSIGN  16173<>CALL
     16174>>ASSIGN
TERMSTAT$ IN PROCEDURE TOP$TIO_DONE
     16601**DCL     16611<<ASSIGN  16612>>IF      16612>>IF
TIME_FPT IN PROCEDURE SET_RETURN_VALUES
     15263**DCL     15277<>CALL
TIME_FPT.V IN PROCEDURE SET_RETURN_VALUES
     15267**DCL     15263--DCLINIT
TIME_VALUE IN PROCEDURE SET_RETURN_VALUES
     15248**DCL     15267--DCLINIT 15278>>ASSIGN
TOK$COURTESY_CALL
     10492**DCL-ENT 12026--CALL    16738--CALL
TOP$EVENT_ID
      9984**DCL     16606>>ASSIGN  16625>>ASSIGN
TOP$MME_ALCMCA
     10682**PROC    10554--CALL
TOP$MME_ALLOCR
     10838**PROC    10556--CALL
TOP$MME_ASGPAT
     11624**PROC    10559--CALL
TOP$MME_CHANTM
     11660**PROC    10561--CALL
TOP$MME_DEALCP
     11712**PROC    10563--CALL
TOP$MME_EXPDEV
     11739**PROC    10565--CALL
TOP$MME_GETCSC
     11776**PROC    10567--CALL
TOP$MME_GETLIN
     11806**PROC    10569--CALL
TOP$MME_HUNGTM
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:765  
     11899**PROC    10572--CALL
TOP$MME_IOCONS
     12048**PROC    10574--CALL
TOP$MME_IPCWDT
     12124**PROC    10576--CALL
TOP$MME_LODIMG
     12201**PROC    10578--CALL
TOP$MME_LODVFC
     12224**PROC    10580--CALL
TOP$MME_LPWDT
     12252**PROC    10582--CALL
TOP$MME_PACMAN
     12332**PROC    10584--CALL
TOP$MME_POINIT
     12614**PROC    10586--CALL
TOP$MME_PRTRAN
     12709**PROC    10588--CALL
TOP$MME_RELEAS
     12755**PROC    10591--CALL
TOP$MME_RELLNK
     12840**PROC    10594--CALL
TOP$MME_RELMPC
     12865**PROC    10597--CALL
TOP$MME_RLSPAT
     12885**PROC    10599--CALL
TOP$MME_SCTCMP
     13007**PROC    10601--CALL
TOP$MME_TESTIO
     14733**PROC    10604--CALL
TOP$MME_UNSPEC
     15295**PROC    10607--CALL
TOP$MME_WRDUMP
     15321**PROC    10609--CALL
TOP$SCT.CN
      9986**DCL     11588--ASSIGN  12824<<ASSIGN  14327--ASSIGN  16368--ASSIGN
TOP$SCT.DV
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:766  
      9991**DCL     11237--ASSIGN  11790--ASSIGN  12823<<ASSIGN  14325--ASSIGN  16367--ASSIGN
TOP$SCT.DV.WD0#
      9992**DCL     11750>>ASSIGN
TOP$SCT.DV.WD1#
      9993**DCL     11751>>ASSIGN
TOP$STATUS
      9996**DCL     16780>>ASSIGN
TOP$TCP
     10040**DCL     12822<<ASSIGN
TOP$TCP.ADR.CSCT
     10067**DCL     14328<<ASSIGN  16522>>IF
TOP$TCP.ADR.IOENTRY
     10071**DCL     11946>>IF      14859<<ASSIGN  15279>>ASSIGN
TOP$TCP.ADR.PAT
     10069**DCL     11635<<ASSIGN  11693>>IF
TOP$TCP.ADR.SCT
     10065**DCL     14326<<ASSIGN  16512>>IF
TOP$TCP.BFR.TRAIN_IMAGE
     10114**DCL     11098--ASSIGN  12726>>ASSIGN
TOP$TCP.BFR.VFC_IMAGE
     10116**DCL     11099--ASSIGN
TOP$TCP.DCB#
     10062**DCL     10873<<ASSIGN  11019<<ASSIGN  11071>>ASSIGN  11446>>ASSIGN  11454--ASSIGN  11670--ASSIGN
     12059--ASSIGN  12171>>ASSIGN  12285>>ASSIGN  12816>>ASSIGN  14912>>ASSIGN  16610--ASSIGN  16680--ASSIGN
TOP$TCP.DEVICE_CODE
     10060**DCL     10871>>IF      11084>>DOCASE  11238>>DOCASE  11278>>ASSIGN  11298>>ASSIGN  11321>>ASSIGN
     11498>>ASSIGN  11520>>ASSIGN  11539>>ASSIGN  11590>>IF      14322<<ASSIGN  16374>>ASSIGN  16428>>IF
     16430>>ASSIGN
TOP$TCP.DEVICE_MODEL
     10059**DCL     11458>>IF      14341<<ASSIGN
TOP$TCP.FICCDD
     10043**DCL     10049--REDEF   10052--REDEF
TOP$TCP.FICCDD.CHAN#
     10047**DCL     10733>>ASSIGN  14286<<ASSIGN  16402>>ASSIGN  16408>>ASSIGN
TOP$TCP.FICCDD.DEV#
     10048**DCL     10734>>ASSIGN  11459>>ASSIGN  11460>>ASSIGN  14287<<ASSIGN
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:767  
TOP$TCP.FICCDD.FLAG#
     10044**DCL     14289<<ASSIGN
TOP$TCP.FICCDD.FORMAT#
     10045**DCL     14288<<ASSIGN  16397>>IF
TOP$TCP.FICCDD.IOM#
     10046**DCL     10732>>ASSIGN  14285<<ASSIGN  16400>>ASSIGN  16406>>ASSIGN
TOP$TCP.FIRMWARE.LP_TYPE
     10100**DCL     14337<<ASSIGN
TOP$TCP.FIRMWARE.RP_TYPE
     10102**DCL     14338<<ASSIGN
TOP$TCP.FIRMWARE.TYPE
     10098**DCL     11593>>IF      14336<<ASSIGN  16378>>IF      16378>>IF      16382>>IF      16382>>IF
     16394>>IF      16426>>IF      16426>>IF
TOP$TCP.ICC.ICC#
     10054**DCL     16474>>IF
TOP$TCP.ICCDD.ICCDD#
     10051**DCL     10945>>IF
TOP$TCP.IN_USE
     10041**DCL     13101>>DOWHILE 13107<<ASSIGN
TOP$TCP.IO.CC_PAID
     10084**DCL     14910<<ASSIGN  16733<<ASSIGN
TOP$TCP.IO.CONTROLLER
     10078**DCL     15024>>IF      15047>>IF      15082>>IF      15169>>IF      16514<<ASSIGN  16524<<ASSIGN
TOP$TCP.IO.DONE
     10082**DCL     14909<<ASSIGN
TOP$TCP.IO.ISSUED
     10080**DCL     14908<<ASSIGN  15217<<ASSIGN
TOP$TCP.IO.ITR_INTERRUPT
     10074**DCL     11912>>IF      15019<<ASSIGN  15020<<ASSIGN  16608>>IF      16626>>IF
TOP$TCP.IO.TERMINATED
     10076**DCL     11912>>IF      15021<<ASSIGN  16614<<ASSIGN
TOP$TCP.MPC_MODEL
     10058**DCL     14342<<ASSIGN  16437>>DOSELCT
TOP$TCP.SCT.BIT12
     10091**DCL     14331<<ASSIGN  16425>>ASSIGN
TOP$TCP.SCT.BIT13
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:768  
     10089**DCL     11502>>ASSIGN  14332<<ASSIGN  16424>>ASSIGN
TOP$TCP.SCT.BIT17
     10087**DCL     11501>>ASSIGN  14333<<ASSIGN  16423>>ASSIGN
TOP$TCP.SCT.TAPE_DENSITY
     10093**DCL     11327>>ASSIGN  11461<<ASSIGN
TOP$TCP.STATS.EDIT_NAME
     10109**DCL     16114>>ASSIGN  16146>>ASSIGN  16156>>ASSIGN
TOP$TCP.STATS.LOAD_ADDR
     10105**DCL     16109>>IF      16144>>IF      16153>>IF      16167>>ASSIGN
TOP$TCP.TEST_TYPE
     10056**DCL     11073>>DOSELCT 11125>>IF      11125>>IF      11125>>IF      11167>>IF      11323>>IF
     14294<<ASSIGN  14296<<ASSIGN  14298<<ASSIGN  14300<<ASSIGN  14302<<ASSIGN  14304<<ASSIGN  14306<<ASSIGN
     14308<<ASSIGN  14310<<ASSIGN  14312<<ASSIGN  14314<<ASSIGN  14316<<ASSIGN  14917>>IF      15016>>IF
     15024>>IF      15082>>IF      15169>>IF      15274>>IF      16369>>IF      16386>>IF      16390>>IF
     16390>>IF
TOP$TIO_DONE
     16597**PROC    10663--CALL
TOP_ERROR_CODE
     10405**DCL     10951<>CALL    11092<>CALL    11258<>CALL    11466<>CALL    11699<>CALL    11952<>CALL
     12784<>CALL    13483<>CALL    15191<>CALL    15981<>CALL    15986<>CALL    16040<>CALL    16082<>CALL
     16480<>CALL    16531<>CALL
TOP_ERROR_CODE.ERR#
     10435**DCL     10950<<ASSIGN  11091<<ASSIGN  11257<<ASSIGN  11465<<ASSIGN  11698<<ASSIGN  11951<<ASSIGN
     12783<<ASSIGN  13482<<ASSIGN  15190<<ASSIGN  15980<<ASSIGN  15985<<ASSIGN  16039<<ASSIGN  16081<<ASSIGN
     16479<<ASSIGN  16530<<ASSIGN
TOT$BCD_ASCII
     10496**DCL-ENT 16126--CALL
TOT$CONSOLE_IN
     10493**DCL-ENT 15959--CALL    16004--CALL
TOT$CONSOLE_OUT
     10494**DCL-ENT 12499--CALL    12503--CALL    12506--CALL    12514--CALL    15942--CALL
TOT$DMC.TOP$TCP.PTR$
     10018**DCL     10040--IMP-PTR 10732>>ASSIGN  10733>>ASSIGN  10734>>ASSIGN  10871>>IF      10873>>ASSIGN
     10945>>IF      11019>>ASSIGN  11071>>ASSIGN  11073>>DOSELCT 11084>>DOCASE  11098>>ASSIGN  11099>>ASSIGN
     11125>>IF      11125>>IF      11125>>IF      11167>>IF      11238>>DOCASE  11278>>ASSIGN  11298>>ASSIGN
     11321>>ASSIGN  11323>>IF      11327>>ASSIGN  11446>>ASSIGN  11454>>ASSIGN  11458>>IF      11459>>ASSIGN
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:769  
     11460>>ASSIGN  11461>>ASSIGN  11498>>ASSIGN  11501>>ASSIGN  11502>>ASSIGN  11520>>ASSIGN  11539>>ASSIGN
     11590>>IF      11593>>IF      11635>>ASSIGN  11670>>ASSIGN  11693>>IF      11912>>IF      11912>>IF
     11946>>IF      12059>>ASSIGN  12171>>ASSIGN  12285>>ASSIGN  12726>>ASSIGN  12816>>ASSIGN  12822>>ASSIGN
     13101>>DOWHILE 13107>>ASSIGN  14285>>ASSIGN  14286>>ASSIGN  14287>>ASSIGN  14288>>ASSIGN  14289>>ASSIGN
     14294>>ASSIGN  14296>>ASSIGN  14298>>ASSIGN  14300>>ASSIGN  14302>>ASSIGN  14304>>ASSIGN  14306>>ASSIGN
     14308>>ASSIGN  14310>>ASSIGN  14312>>ASSIGN  14314>>ASSIGN  14316>>ASSIGN  14322>>ASSIGN  14326>>ASSIGN
     14328>>ASSIGN  14331>>ASSIGN  14332>>ASSIGN  14333>>ASSIGN  14336>>ASSIGN  14337>>ASSIGN  14338>>ASSIGN
     14341>>ASSIGN  14342>>ASSIGN  14859>>ASSIGN  14908>>ASSIGN  14909>>ASSIGN  14910>>ASSIGN  14912>>ASSIGN
     14917>>IF      15016>>IF      15019>>ASSIGN  15020>>ASSIGN  15021>>ASSIGN  15024>>IF      15024>>IF
     15047>>IF      15082>>IF      15082>>IF      15169>>IF      15169>>IF      15217>>ASSIGN  15274>>IF
     15279>>ASSIGN  16109>>IF      16114>>ASSIGN  16144>>IF      16146>>ASSIGN  16153>>IF      16156>>ASSIGN
     16167>>ASSIGN  16369>>IF      16374>>ASSIGN  16378>>IF      16378>>IF      16382>>IF      16382>>IF
     16386>>IF      16390>>IF      16390>>IF      16394>>IF      16397>>IF      16400>>ASSIGN  16402>>ASSIGN
     16406>>ASSIGN  16408>>ASSIGN  16423>>ASSIGN  16424>>ASSIGN  16425>>ASSIGN  16426>>IF      16426>>IF
     16428>>IF      16430>>ASSIGN  16437>>DOSELCT 16474>>IF      16512>>IF      16514>>ASSIGN  16522>>IF
     16524>>ASSIGN  16608>>IF      16610>>ASSIGN  16614>>ASSIGN  16626>>IF      16680>>ASSIGN  16733>>ASSIGN
TOT$ECP.BOOT_CPU_TYPE
     10165**DCL     12657>>DOCASE  12674>>DOCASE  16359>>DOCASE  16692>>IF
TOT$ECP.IO.COUNT
     10135**DCL     12178<<ASSIGN  12178>>ASSIGN  15216<<ASSIGN  15216>>ASSIGN
TOT$ECP.SUBEXEC.ADDRESS
     10151**DCL     16097>>ASSIGN  16098>>ASSIGN  16169>>ASSIGN
TOT$ECP.SUBEXEC.CURRENT
     10149**DCL     15927>>DOCASE
TOT$ECP.SUBEXEC.EDIT_NAME
     10153**DCL     16100>>ASSIGN
TOT$ECP.SUBEXEC.TEST_PAGE_COUNT
     10159**DCL     16140>>IF      16140>>IF
TOT$ECP.SUBEXEC.WRAPUP$
     10157**DCL     12685<<ASSIGN
TOT$ECP.TEST_REQ
     10129**DCL     10131--REDEF
TOT$OCTASC
     10495**DCL-ENT 16164--CALL    16170--CALL    16173--CALL
TOT$TOLTS.LINK_DATE.BCD
     10180**DCL     12687>>ASSIGN
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:770  
TOX$ERROR
     10497**DCL-ENT 11024--CALL    13483--CALL
TOX$SCREECH
     10499**DCL-ENT 10951--CALL    11092--CALL    11258--CALL    11699--CALL    11952--CALL    15191--CALL
     16480--CALL    16531--CALL
TOX$WARN
     10498**DCL-ENT 11135--CALL    11466--CALL    11472--CALL    12438--CALL    12570--CALL    12784--CALL
     12819--CALL    13798--CALL    15981--CALL    15986--CALL    16040--CALL    16077--CALL    16082--CALL
     16182--CALL
TP_BASE_REL_ADDR IN PROCEDURE TOP$MME_WRDUMP
     15373**DCL     16167<<ASSIGN  16169<<ASSIGN  16170<>CALL
TP_STATS_INX IN PROCEDURE TOP$MME_WRDUMP
     15382**DCL     16107<<ASSIGN  16108>>DOUNTIL 16109>>IF      16111<<ASSIGN  16111>>ASSIGN  16114>>ASSIGN
     16140>>IF      16149<<ASSIGN  16149>>ASSIGN  16153>>IF      16156>>ASSIGN  16158<<ASSIGN  16158>>ASSIGN
     16167>>ASSIGN
TRAIN_BFR IN PROCEDURE TOP$MME_PRTRAN
     12720**DCL     12726<<ASSIGN
TRAIN_BFR$ IN PROCEDURE TOP$MME_PRTRAN
     12719**DCL     12725<<ASSIGN  12726>>ASSIGN
UNDEDICATE_CHANNEL_3 IN PROCEDURE TOP$MME_ALCMCA
     10750**PROC    10709--CALL
UNSUCCESSFUL_DUMP IN PROCEDURE TOP$MME_WRDUMP
     15907**LABEL   15907--CALLALT 15908--CALLALT
VALIDATE_DEVICE_TYPE IN PROCEDURE GET_DEVICE_CODE
     13900**PROC    13504--CALL
VALID_RESPONSE IN PROCEDURE DO_YOU_WANT_A_DUMP
     15949**DCL     15956>>DOUNTIL 15974<<ASSIGN  15977<<ASSIGN  15979<<ASSIGN  15984<<ASSIGN
WD_1 IN PROCEDURE TOP$MME_ALLOCR
     10840**DCL     10838--PROC
WD_1.FICCDD_ADDR# IN PROCEDURE TOP$MME_ALLOCR
     10841**DCL     10927>>ASSIGN
WD_2 IN PROCEDURE TOP$MME_ALLOCR
     10843**DCL     10838--PROC    10895<>CALL
WD_2.MTAR_FLAG_ADDR# IN PROCEDURE TOP$MME_ALLOCR
     10845**DCL     11169>>ASSIGN
WD_3 IN PROCEDURE TOP$MME_ALLOCR
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:771  
     10846**DCL     10838--PROC
WD_4 IN PROCEDURE TOP$MME_ALLOCR
     10847**DCL     10838--PROC
WORK$ IN PROCEDURE RELEASE_CHANNELS
     12554**DCL     12555--IMP-PTR 12566<<ASSIGN
WORK$ IN PROCEDURE REPORT_CHANNELS
     12470**DCL     12471--IMP-PTR 12493<<ASSIGN  12494>>DOWHILE 12496>>IF      12509>>CALLBLT 12510>>IF
     12512>>CALLBLT 12517<<ASSIGN  12517>>ASSIGN
WORK$ IN PROCEDURE SUSPEND_CHANNELS
     12418**DCL     12419--IMP-PTR 12430<<ASSIGN  12433>>ASSIGN  12434>>ASSIGN
WRAP_DUMP_MSG IN PROCEDURE TOP$MME_WRDUMP
     15919**PROC    15903--CALL
WRITE_DUMP IN PROCEDURE TOP$MME_WRDUMP
     15845**DCL     16178<>CALL
WRITE_DUMP.BUF_ IN PROCEDURE TOP$MME_WRDUMP
     15845**DCL     16130<<ASSIGN  16134<<ASSIGN
WRITE_DUMP.STATION_ IN PROCEDURE TOP$MME_WRDUMP
     15847**DCL     15847--REDEF
WRITE_DUMP.V IN PROCEDURE TOP$MME_WRDUMP
     15848**DCL     15845--DCLINIT
WRITE_DUMP.V.DVBYTE.VFC# IN PROCEDURE TOP$MME_WRDUMP
     15854**DCL     15854--REDEF
WRITE_ERR IN PROCEDURE EXECUTE_DUMP
     16182**LABEL   16178--CALLALT
WRITE_HDR_LINE IN PROCEDURE TOP$MME_WRDUMP
     15813**DCL     16257<>CALL
WRITE_HDR_LINE.BUF_ IN PROCEDURE TOP$MME_WRDUMP
     15813**DCL     16254<<ASSIGN
WRITE_HDR_LINE.STATION_ IN PROCEDURE TOP$MME_WRDUMP
     15815**DCL     15815--REDEF
WRITE_HDR_LINE.V IN PROCEDURE TOP$MME_WRDUMP
     15816**DCL     15813--DCLINIT
WRITE_HDR_LINE.V.DVBYTE.VFC# IN PROCEDURE TOP$MME_WRDUMP
     15822**DCL     15822--REDEF
X0 IN PROCEDURE TOP$MME_ALCMCA
     10687**DCL     10682--PROC    10701<<ASSIGN  10706<<ASSIGN  10711<<ASSIGN
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:772  
X1 IN PROCEDURE TOP$MME_ALLOCR
     10849**DCL     10838--PROC
X1 IN PROCEDURE TOP$MME_GETCSC
     11778**DCL     11776--PROC    11789<>CALL
X1 IN PROCEDURE TOP$MME_HUNGTM
     11905**DCL     11899--PROC    11917<<ASSIGN  11921<<ASSIGN
X1.FORMAT# IN PROCEDURE TOP$MME_IPCWDT
     12145**DCL     12159>>IF
X1.NEW_ICC.CHAN# IN PROCEDURE TOP$MME_IPCWDT
     12151**DCL     12162>>ASSIGN
X1.NEW_ICC.IOM# IN PROCEDURE TOP$MME_IPCWDT
     12150**DCL     12161>>ASSIGN
X1.OLD_ICC IN PROCEDURE TOP$MME_IPCWDT
     12146**DCL     12149--REDEF
X1.OLD_ICC.CHAN# IN PROCEDURE TOP$MME_IPCWDT
     12148**DCL     12166>>ASSIGN
X1.OLD_ICC.IOM# IN PROCEDURE TOP$MME_IPCWDT
     12147**DCL     12165>>ASSIGN
X1.FORMAT# IN PROCEDURE TOP$MME_LPWDT
     12259**DCL     12275>>IF
X1.NEW_ICC.CHAN# IN PROCEDURE TOP$MME_LPWDT
     12265**DCL     12278>>ASSIGN
X1.NEW_ICC.IOM# IN PROCEDURE TOP$MME_LPWDT
     12264**DCL     12277>>ASSIGN
X1.OLD_ICC IN PROCEDURE TOP$MME_LPWDT
     12260**DCL     12263--REDEF
X1.OLD_ICC.CHAN# IN PROCEDURE TOP$MME_LPWDT
     12262**DCL     12282>>ASSIGN
X1.OLD_ICC.IOM# IN PROCEDURE TOP$MME_LPWDT
     12261**DCL     12281>>ASSIGN
X1_REG IN PROCEDURE TOP$MME_WRDUMP
     15350**DCL     15321--PROC    16095>>IF
X2 IN PROCEDURE TOP$MME_ALLOCR
     10850**DCL     10838--PROC    10879<<ASSIGN  10888<<ASSIGN
X2 IN PROCEDURE TOP$MME_PACMAN
     12345**DCL     12332--PROC    12357>>ASSIGN  12363<>CALL    12366>>IF      12372<>CALL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:773  
X2 IN PROCEDURE TOP$MME_SCTCMP
     13012**DCL     13007--PROC    13056<<ASSIGN  13063<<ASSIGN  13070<<ASSIGN
X2_REG IN PROCEDURE TOP$MME_WRDUMP
     15351**DCL     15321--PROC
X3 IN PROCEDURE BUILD_SCT_FICCDD
     13546**DCL     13541--PROC    13596>>ASSIGN
X3 IN PROCEDURE GET_DEVICE_CODE
     13197**DCL     13194--PROC    13479<>CALL
X3 IN PROCEDURE TOP$MME_ALLOCR
     10851**DCL     10838--PROC    10932>>ASSIGN
X3 IN PROCEDURE TOP$MME_SCTCMP
     13013**DCL     13007--PROC    13060<>CALL
X4 IN PROCEDURE SET_RETURN_VALUES
     15246**DCL     15241--PROC    15279<<ASSIGN
X4 IN PROCEDURE TOP$MME_CHANTM
     11662**DCL     11660--PROC    11669<>CALL
X4 IN PROCEDURE TOP$MME_GETCSC
     11779**DCL     11776--PROC    11791<<ASSIGN
X4 IN PROCEDURE TOP$MME_TESTIO
     14743**DCL     14733--PROC    14759<>CALL
X5 IN PROCEDURE TOP$MME_PACMAN
     12346**DCL     12332--PROC
YES_RESP IN PROCEDURE DO_YOU_WANT_A_DUMP
     15950**DCL     15972>>IF
YES_RETURN_MSG_1 IN PROCEDURE REPORT_CHANNELS
     12479**DCL     12502--ASSIGN
YES_RETURN_MSG_2 IN PROCEDURE REPORT_CHANNELS
     12481**DCL     12504--ASSIGN
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:774  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:775  
              FULL UREF LISTING

A.LOWER IN PROCEDURE TOP$MME_HUNGTM
     11903**DCL
ACCOUNT_NAME.ACCT# IN PROCEDURE GET_DEVICE_CODE
     13474**DCL
B$ALT
     10194**DCL
B$ALT.BRKCNT
     10195**DCL
B$ALT.DCB#
     10195**DCL
B$ALT.ERR.CODE
     10196**DCL
B$ALT.ERR.FCG
     10196**DCL
B$ALT.ERR.MID
     10196**DCL
B$ALT.ERR.MON
     10196**DCL
B$ALT.ERR.SEV
     10196**DCL
B$ALT.EVSC
     10195**DCL
B$ALT.FPT
     10194**DCL
B$ALT.FPT.FCG
     10194**DCL
B$ALT.FPT.PMME
     10194**DCL
B$ALT.P#
     10198**DCL
B$ALT.SSFRAME
     10194**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:776  
B$ALT.SUBC
     10195**DCL
B$ALT IN PROCEDURE TOP$MME_WRDUMP
     15330**DCL
B$ALT.BRKCNT IN PROCEDURE TOP$MME_WRDUMP
     15331**DCL
B$ALT.DCB# IN PROCEDURE TOP$MME_WRDUMP
     15331**DCL
B$ALT.ERR.CODE IN PROCEDURE TOP$MME_WRDUMP
     15332**DCL
B$ALT.ERR.FCG IN PROCEDURE TOP$MME_WRDUMP
     15332**DCL
B$ALT.ERR.MID IN PROCEDURE TOP$MME_WRDUMP
     15332**DCL
B$ALT.ERR.MON IN PROCEDURE TOP$MME_WRDUMP
     15332**DCL
B$ALT.ERR.SEV IN PROCEDURE TOP$MME_WRDUMP
     15332**DCL
B$ALT.EVSC IN PROCEDURE TOP$MME_WRDUMP
     15331**DCL
B$ALT.FPT IN PROCEDURE TOP$MME_WRDUMP
     15330**DCL
B$ALT.FPT.FCG IN PROCEDURE TOP$MME_WRDUMP
     15330**DCL
B$ALT.FPT.PMME IN PROCEDURE TOP$MME_WRDUMP
     15330**DCL
B$ALT.P# IN PROCEDURE TOP$MME_WRDUMP
     15334**DCL
B$ALT.SSFRAME IN PROCEDURE TOP$MME_WRDUMP
     15330**DCL
B$ALT.SUBC IN PROCEDURE TOP$MME_WRDUMP
     15331**DCL
B$EXCFR IN PROCEDURE GET_TEST_DCB
     10979**DCL
B$EXCFR.ALTEMPTY IN PROCEDURE GET_TEST_DCB
     10979**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:777  
B$EXCFR.ASLIC IN PROCEDURE GET_TEST_DCB
     10979**DCL
B$EXCFR.ASR IN PROCEDURE GET_TEST_DCB
     10985**DCL
B$EXCFR.ASR.BASE IN PROCEDURE GET_TEST_DCB
     10986**DCL
B$EXCFR.ASR.BOUND IN PROCEDURE GET_TEST_DCB
     10985**DCL
B$EXCFR.ASR.FLAGS IN PROCEDURE GET_TEST_DCB
     10985**DCL
B$EXCFR.ASR.FLAGS.BOUND IN PROCEDURE GET_TEST_DCB
     10986**DCL
B$EXCFR.ASR.FLAGS.CACHE IN PROCEDURE GET_TEST_DCB
     10986**DCL
B$EXCFR.ASR.FLAGS.EXU IN PROCEDURE GET_TEST_DCB
     10986**DCL
B$EXCFR.ASR.FLAGS.MON IN PROCEDURE GET_TEST_DCB
     10986**DCL
B$EXCFR.ASR.FLAGS.PRIV IN PROCEDURE GET_TEST_DCB
     10986**DCL
B$EXCFR.ASR.FLAGS.READ IN PROCEDURE GET_TEST_DCB
     10985**DCL
B$EXCFR.ASR.FLAGS.SAVE IN PROCEDURE GET_TEST_DCB
     10985**DCL
B$EXCFR.ASR.FLAGS.SEGMENT IN PROCEDURE GET_TEST_DCB
     10986**DCL
B$EXCFR.ASR.FLAGS.WRITE IN PROCEDURE GET_TEST_DCB
     10985**DCL
B$EXCFR.ASR.TYPE IN PROCEDURE GET_TEST_DCB
     10986**DCL
B$EXCFR.ASR.WSR IN PROCEDURE GET_TEST_DCB
     10986**DCL
B$EXCFR.BRKCNT IN PROCEDURE GET_TEST_DCB
     10993**DCL
B$EXCFR.CODE IN PROCEDURE GET_TEST_DCB
     10992**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:778  
B$EXCFR.CP# IN PROCEDURE GET_TEST_DCB
     10982**DCL
B$EXCFR.DCB# IN PROCEDURE GET_TEST_DCB
     10992**DCL
B$EXCFR.DRS IN PROCEDURE GET_TEST_DCB
     10990**DCL
B$EXCFR.DSAR IN PROCEDURE GET_TEST_DCB
     10983**DCL
B$EXCFR.ECC IN PROCEDURE GET_TEST_DCB
     10979**DCL
B$EXCFR.EIS IN PROCEDURE GET_TEST_DCB
     10991**DCL
B$EXCFR.ERR.CODE IN PROCEDURE GET_TEST_DCB
     10993**DCL
B$EXCFR.ERR.FCG IN PROCEDURE GET_TEST_DCB
     10993**DCL
B$EXCFR.ERR.MID IN PROCEDURE GET_TEST_DCB
     10993**DCL
B$EXCFR.ERR.MON IN PROCEDURE GET_TEST_DCB
     10993**DCL
B$EXCFR.ERR.SEV IN PROCEDURE GET_TEST_DCB
     10994**DCL
B$EXCFR.EVSC IN PROCEDURE GET_TEST_DCB
     10991**DCL
B$EXCFR.EWSQ# IN PROCEDURE GET_TEST_DCB
     10983**DCL
B$EXCFR.FCODE IN PROCEDURE GET_TEST_DCB
     10982**DCL
B$EXCFR.FI IN PROCEDURE GET_TEST_DCB
     10982**DCL
B$EXCFR.FPT IN PROCEDURE GET_TEST_DCB
     10992**DCL
B$EXCFR.FPT.FCG IN PROCEDURE GET_TEST_DCB
     10992**DCL
B$EXCFR.FPT.PMME IN PROCEDURE GET_TEST_DCB
     10992**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:779  
B$EXCFR.IC IN PROCEDURE GET_TEST_DCB
     10980**DCL
B$EXCFR.INST IN PROCEDURE GET_TEST_DCB
     10980**DCL
B$EXCFR.INST.EVEN IN PROCEDURE GET_TEST_DCB
     10980**DCL
B$EXCFR.INST.ODD IN PROCEDURE GET_TEST_DCB
     10980**DCL
B$EXCFR.IRBIT IN PROCEDURE GET_TEST_DCB
     10980**DCL
B$EXCFR.IRBIT.CARRY IN PROCEDURE GET_TEST_DCB
     10981**DCL
B$EXCFR.IRBIT.EXOF IN PROCEDURE GET_TEST_DCB
     10981**DCL
B$EXCFR.IRBIT.EXUF IN PROCEDURE GET_TEST_DCB
     10981**DCL
B$EXCFR.IRBIT.EXUFM IN PROCEDURE GET_TEST_DCB
     10982**DCL
B$EXCFR.IRBIT.HEX IN PROCEDURE GET_TEST_DCB
     10982**DCL
B$EXCFR.IRBIT.MIR IN PROCEDURE GET_TEST_DCB
     10981**DCL
B$EXCFR.IRBIT.MM IN PROCEDURE GET_TEST_DCB
     10981**DCL
B$EXCFR.IRBIT.NEG IN PROCEDURE GET_TEST_DCB
     10980**DCL
B$EXCFR.IRBIT.OF IN PROCEDURE GET_TEST_DCB
     10981**DCL
B$EXCFR.IRBIT.OFM IN PROCEDURE GET_TEST_DCB
     10981**DCL
B$EXCFR.IRBIT.PE IN PROCEDURE GET_TEST_DCB
     10981**DCL
B$EXCFR.IRBIT.PM IN PROCEDURE GET_TEST_DCB
     10981**DCL
B$EXCFR.IRBIT.TR IN PROCEDURE GET_TEST_DCB
     10981**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:780  
B$EXCFR.IRBIT.TRC IN PROCEDURE GET_TEST_DCB
     10981**DCL
B$EXCFR.IRBIT.ZERO IN PROCEDURE GET_TEST_DCB
     10980**DCL
B$EXCFR.ISR IN PROCEDURE GET_TEST_DCB
     10983**DCL
B$EXCFR.ISR.BASE IN PROCEDURE GET_TEST_DCB
     10985**DCL
B$EXCFR.ISR.BOUND IN PROCEDURE GET_TEST_DCB
     10983**DCL
B$EXCFR.ISR.FLAGS IN PROCEDURE GET_TEST_DCB
     10983**DCL
B$EXCFR.ISR.FLAGS.BOUND IN PROCEDURE GET_TEST_DCB
     10984**DCL
B$EXCFR.ISR.FLAGS.CACHE IN PROCEDURE GET_TEST_DCB
     10984**DCL
B$EXCFR.ISR.FLAGS.EXU IN PROCEDURE GET_TEST_DCB
     10984**DCL
B$EXCFR.ISR.FLAGS.MON IN PROCEDURE GET_TEST_DCB
     10984**DCL
B$EXCFR.ISR.FLAGS.PRIV IN PROCEDURE GET_TEST_DCB
     10984**DCL
B$EXCFR.ISR.FLAGS.READ IN PROCEDURE GET_TEST_DCB
     10984**DCL
B$EXCFR.ISR.FLAGS.SAVE IN PROCEDURE GET_TEST_DCB
     10984**DCL
B$EXCFR.ISR.FLAGS.SEGMENT IN PROCEDURE GET_TEST_DCB
     10984**DCL
B$EXCFR.ISR.FLAGS.WRITE IN PROCEDURE GET_TEST_DCB
     10984**DCL
B$EXCFR.ISR.TYPE IN PROCEDURE GET_TEST_DCB
     10985**DCL
B$EXCFR.ISR.WSR IN PROCEDURE GET_TEST_DCB
     10985**DCL
B$EXCFR.IS_SEGID IN PROCEDURE GET_TEST_DCB
     10983**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:781  
B$EXCFR.LSR IN PROCEDURE GET_TEST_DCB
     10987**DCL
B$EXCFR.LSR.BASE IN PROCEDURE GET_TEST_DCB
     10988**DCL
B$EXCFR.LSR.BOUND IN PROCEDURE GET_TEST_DCB
     10987**DCL
B$EXCFR.LSR.FLAGS IN PROCEDURE GET_TEST_DCB
     10987**DCL
B$EXCFR.LSR.FLAGS.BOUND IN PROCEDURE GET_TEST_DCB
     10988**DCL
B$EXCFR.LSR.FLAGS.CACHE IN PROCEDURE GET_TEST_DCB
     10987**DCL
B$EXCFR.LSR.FLAGS.EXU IN PROCEDURE GET_TEST_DCB
     10987**DCL
B$EXCFR.LSR.FLAGS.MON IN PROCEDURE GET_TEST_DCB
     10987**DCL
B$EXCFR.LSR.FLAGS.PRIV IN PROCEDURE GET_TEST_DCB
     10987**DCL
B$EXCFR.LSR.FLAGS.READ IN PROCEDURE GET_TEST_DCB
     10987**DCL
B$EXCFR.LSR.FLAGS.SAVE IN PROCEDURE GET_TEST_DCB
     10987**DCL
B$EXCFR.LSR.FLAGS.SEGMENT IN PROCEDURE GET_TEST_DCB
     10988**DCL
B$EXCFR.LSR.FLAGS.WRITE IN PROCEDURE GET_TEST_DCB
     10987**DCL
B$EXCFR.LSR.TYPE IN PROCEDURE GET_TEST_DCB
     10988**DCL
B$EXCFR.LSR.WSR IN PROCEDURE GET_TEST_DCB
     10988**DCL
B$EXCFR.P# IN PROCEDURE GET_TEST_DCB
     10994**DCL
B$EXCFR.PRS IN PROCEDURE GET_TEST_DCB
     10990**DCL
B$EXCFR.PSR IN PROCEDURE GET_TEST_DCB
     10988**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:782  
B$EXCFR.PSR.BASE IN PROCEDURE GET_TEST_DCB
     10990**DCL
B$EXCFR.PSR.BOUND IN PROCEDURE GET_TEST_DCB
     10988**DCL
B$EXCFR.PSR.FLAGS IN PROCEDURE GET_TEST_DCB
     10988**DCL
B$EXCFR.PSR.FLAGS.BOUND IN PROCEDURE GET_TEST_DCB
     10989**DCL
B$EXCFR.PSR.FLAGS.CACHE IN PROCEDURE GET_TEST_DCB
     10989**DCL
B$EXCFR.PSR.FLAGS.EXU IN PROCEDURE GET_TEST_DCB
     10989**DCL
B$EXCFR.PSR.FLAGS.MON IN PROCEDURE GET_TEST_DCB
     10989**DCL
B$EXCFR.PSR.FLAGS.PRIV IN PROCEDURE GET_TEST_DCB
     10989**DCL
B$EXCFR.PSR.FLAGS.READ IN PROCEDURE GET_TEST_DCB
     10988**DCL
B$EXCFR.PSR.FLAGS.SAVE IN PROCEDURE GET_TEST_DCB
     10989**DCL
B$EXCFR.PSR.FLAGS.SEGMENT IN PROCEDURE GET_TEST_DCB
     10989**DCL
B$EXCFR.PSR.FLAGS.WRITE IN PROCEDURE GET_TEST_DCB
     10989**DCL
B$EXCFR.PSR.TYPE IN PROCEDURE GET_TEST_DCB
     10990**DCL
B$EXCFR.PSR.WSR IN PROCEDURE GET_TEST_DCB
     10989**DCL
B$EXCFR.REGS IN PROCEDURE GET_TEST_DCB
     10990**DCL
B$EXCFR.REGS.A IN PROCEDURE GET_TEST_DCB
     10990**DCL
B$EXCFR.REGS.E IN PROCEDURE GET_TEST_DCB
     10991**DCL
B$EXCFR.REGS.Q IN PROCEDURE GET_TEST_DCB
     10990**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:783  
B$EXCFR.REGS.XREG IN PROCEDURE GET_TEST_DCB
     10990**DCL
B$EXCFR.RVA IN PROCEDURE GET_TEST_DCB
     10983**DCL
B$EXCFR.SCR IN PROCEDURE GET_TEST_DCB
     10983**DCL
B$EXCFR.SSF IN PROCEDURE GET_TEST_DCB
     10982**DCL
B$EXCFR.U1 IN PROCEDURE GET_TEST_DCB
     10991**DCL
B$JIT
       382**DCL
B$JIT.ACCEPT_FLAGS
       535**DCL
B$JIT.ACCEPT_FLAGS.ANNOUNCE
       535**DCL
B$JIT.ACCEPT_FLAGS.BROADCAST
       535**DCL
B$JIT.ACCEPT_FLAGS.SEND
       535**DCL
B$JIT.ACCESS
       655**DCL
B$JIT.ACCESS.FORMS
       655**DCL
B$JIT.ACCESS.PACKS
       655**DCL
B$JIT.ACCESS.TAPES
       655**DCL
B$JIT.ACCN
       387**DCL
B$JIT.APATTR
       660**DCL
B$JIT.ARECX
       655**DCL
B$JIT.BILL
       535**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:784  
B$JIT.BLINDACCTNG
       535**DCL
B$JIT.BUDLIM
       524**DCL
B$JIT.CALCNT
       561**DCL
B$JIT.CCARS
       475**DCL
B$JIT.CCBUF
       475**DCL
B$JIT.CCDISP
       475**DCL
B$JIT.CHECK_CFU
       557**DCL
B$JIT.CLRES
       654**DCL
B$JIT.CPFLAGS1
       476**DCL
B$JIT.CPFLAGS1.BRK
       480**DCL
B$JIT.CPFLAGS1.BUFFULL
       480**DCL
B$JIT.CPFLAGS1.CFREAD
       480**DCL
B$JIT.CPFLAGS1.DELTA
       481**DCL
B$JIT.CPFLAGS1.DONTRFEXT3
       477**DCL
B$JIT.CPFLAGS1.DRIBBLE
       479**DCL
B$JIT.CPFLAGS1.ECHO
       480**DCL
B$JIT.CPFLAGS1.ECHO_LINK
       477**DCL
B$JIT.CPFLAGS1.EXIT#
       479**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:785  
B$JIT.CPFLAGS1.FIRSTCP
       478**DCL
B$JIT.CPFLAGS1.INITIALIZE
       479**DCL
B$JIT.CPFLAGS1.JSTEP
       476**DCL
B$JIT.CPFLAGS1.KEEPDS
       479**DCL
B$JIT.CPFLAGS1.LASTCP
       478**DCL
B$JIT.CPFLAGS1.LASTCPEXISTS
       478**DCL
B$JIT.CPFLAGS1.LNKPMME
       477**DCL
B$JIT.CPFLAGS1.LOGOFF
       476**DCL
B$JIT.CPFLAGS1.NOTIFY
       479**DCL
B$JIT.CPFLAGS1.PROCACCT
       479**DCL
B$JIT.CPFLAGS1.PROTECT
       480**DCL
B$JIT.CPFLAGS1.RUND
       476**DCL
B$JIT.CPFLAGS1.SCREECH
       480**DCL
B$JIT.CPFLAGS1.SKIPABORT
       479**DCL
B$JIT.CPFLAGS1.SOMENOTIFY
       478**DCL
B$JIT.CPFLAGS1.SSTART
       477**DCL
B$JIT.CPFLAGS1.STARPROC
       478**DCL
B$JIT.CPFLAGS1.STARSACC
       478**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:786  
B$JIT.CPFLAGS1.STEPACCT
       480**DCL
B$JIT.CPFLAGS1.STEPLMT
       480**DCL
B$JIT.CPFLAGS1.TESTMODE
       478**DCL
B$JIT.CPFLAGS1.TRMNATE
       479**DCL
B$JIT.CPFLAGS1.WHEN_INPUT
       477**DCL
B$JIT.CPFLAGS1.YC
       476**DCL
B$JIT.CPFLAGS1.YCGET
       477**DCL
B$JIT.CPFLAGS1.YCPMME
       477**DCL
B$JIT.CSLEV
       542**DCL
B$JIT.CTIME
       560**DCL
B$JIT.CURPNUM
       641**DCL
B$JIT.CURRCORE
       549**DCL
B$JIT.CURSUDO
       656**DCL
B$JIT.CURTMPDP
       556**DCL
B$JIT.DCB$
       555**DCL
B$JIT.DCBNO
       468**DCL
B$JIT.DDLL
       545**DCL
B$JIT.DDUL
       545**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:787  
B$JIT.DEFEXP
       555**DCL
B$JIT.DEFPRI
       535**DCL
B$JIT.DLL
       545**DCL
B$JIT.DO$
       555**DCL
B$JIT.DUL
       545**DCL
B$JIT.ENQS
       660**DCL
B$JIT.ERR
       387**DCL
B$JIT.ERR.CODE
       388**DCL
B$JIT.ERR.FCG
       387**DCL
B$JIT.ERR.MON
       388**DCL
B$JIT.ERR.SEV
       388**DCL
B$JIT.ERR.UMID
       388**DCL
B$JIT.EUP
       547**DCL
B$JIT.EXTUS
       563**DCL
B$JIT.FACNACS
       555**DCL
B$JIT.FACNCM
       557**DCL
B$JIT.FBUC
       547**DCL
B$JIT.FBUL
       547**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:788  
B$JIT.FEXT
       555**DCL
B$JIT.FPSN
       468**DCL
B$JIT.FRS
       583**DCL
B$JIT.GAC
       556**DCL
B$JIT.HIGHPNUM
       641**DCL
B$JIT.HPSN
       555**DCL
B$JIT.IDELTAT
       561**DCL
B$JIT.INSTWORD
       475**DCL
B$JIT.INTER
       654**DCL
B$JIT.INTTIME
       560**DCL
B$JIT.JOBNAME
       536**DCL
B$JIT.JOBUNIT
       476**DCL
B$JIT.JORG
       523**DCL
B$JIT.JPEAK
       549**DCL
B$JIT.JSLEV
       524**DCL
B$JIT.JTMPDPPK
       556**DCL
B$JIT.JUNK
       587**DCL
B$JIT.JUNK2
       641**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:789  
B$JIT.LANG
       523**DCL
B$JIT.LBJID
       563**DCL
B$JIT.LLL
       551**DCL
B$JIT.LNKCNT
       587**DCL
B$JIT.LOCK
       536**DCL
B$JIT.LOGONTIME
       524**DCL
B$JIT.LUL
       551**DCL
B$JIT.MAXCORE
       548**DCL
B$JIT.MAXENQ
       660**DCL
B$JIT.MAXEXP
       555**DCL
B$JIT.MAXPRI
       535**DCL
B$JIT.MAXTMPDP
       556**DCL
B$JIT.MMFLGS
       548**DCL
B$JIT.MMFLGS.FREE_PPGS
       548**DCL
B$JIT.MODE
       382**DCL
B$JIT.MOUNTS
       655**DCL
B$JIT.MRT
       561**DCL
B$JIT.MSGID
       536**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:790  
B$JIT.MSGID.PRIMARY
       536**DCL
B$JIT.MSGID.XT
       537**DCL
B$JIT.NEXTCC
       529**DCL
B$JIT.NODOEVER
       654**DCL
B$JIT.NOLOEVER
       654**DCL
B$JIT.NOPOEVER
       654**DCL
B$JIT.NUTS
       562**DCL
B$JIT.OLTA
       655**DCL
B$JIT.ORIGINATOR_MODE
       654**DCL
B$JIT.ORIGINATOR_PORT
       657**DCL
B$JIT.ORIGINATOR_PORT.FROM_CR.DEVICE
       658**DCL
B$JIT.ORIGINATOR_PORT.FROM_CR.TNAME
       658**DCL
B$JIT.ORIGINATOR_PORT.FROM_GHOST
       658**DCL
B$JIT.ORIGINATOR_PORT.FROM_GHOST.SYSID
       658**DCL
B$JIT.ORIGINATOR_PORT.FROM_INT
       659**DCL
B$JIT.ORIGINATOR_PORT.FROM_INT.SYSID
       659**DCL
B$JIT.ORIGINATOR_PORT.FROM_INT.TSLINE
       659**DCL
B$JIT.OUTPRIO
       468**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:791  
B$JIT.PCADS
       551**DCL
B$JIT.PCC
       546**DCL
B$JIT.PCD
       546**DCL
B$JIT.PCDD
       547**DCL
B$JIT.PCDDS
       550**DCL
B$JIT.PCDS
       546**DCL
B$JIT.PCL
       551**DCL
B$JIT.PCP
       546**DCL
B$JIT.PCROS
       546**DCL
B$JIT.PCV
       551**DCL
B$JIT.PLL
       545**DCL
B$JIT.PMEMTIM
       561**DCL
B$JIT.PMME_COUNT
       659**DCL
B$JIT.PMME_DATA
       659**DCL
B$JIT.PMME_DATA.CPU
       659**DCL
B$JIT.PMME_DATA.I_O
       659**DCL
B$JIT.PMME_DATA.MISC1
       659**DCL
B$JIT.PMME_DATA.MISC2
       660**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:792  
B$JIT.PPC
       548**DCL
B$JIT.PPRIV
       443**DCL
B$JIT.PPRIV.CNTRLC
       443**DCL
B$JIT.PPRIV.CNTRLD
       443**DCL
B$JIT.PPRIV.EFT
       443**DCL
B$JIT.PPRIV.EL
       443**DCL
B$JIT.PPRIV.LABEL
       444**DCL
B$JIT.PPRIV.NETCON
       444**DCL
B$JIT.PPRIV.PADMIN
       445**DCL
B$JIT.PPRIV.PIGC
       444**DCL
B$JIT.PPRIV.PIGD
       444**DCL
B$JIT.PPRIV.PIGETTE
       446**DCL
B$JIT.PPRIV.RATES
       445**DCL
B$JIT.PPRIV.REPLAY
       445**DCL
B$JIT.PPRIV.SPIDERC
       444**DCL
B$JIT.PPRIV.SPIDERD
       444**DCL
B$JIT.PPRIV.SUPER
       444**DCL
B$JIT.PPRIV.SUPERAUTH
       444**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:793  
B$JIT.PPRIV.SUPERD
       445**DCL
B$JIT.PPRIV.SUPERFORM
       445**DCL
B$JIT.PPRIV.SUPERWSN
       445**DCL
B$JIT.PPRIV.SYSCON
       445**DCL
B$JIT.PPRIV.VOLINIT
       445**DCL
B$JIT.PRDPRM
       556**DCL
B$JIT.PRFLAGS
       471**DCL
B$JIT.PRFLAGS.COMMENT
       471**DCL
B$JIT.PRFLAGS.CONTINUED
       471**DCL
B$JIT.PRFLAGS.CORRECT
       472**DCL
B$JIT.PRFLAGS.EXPOUND
       472**DCL
B$JIT.PRFLAGS.LIST
       471**DCL
B$JIT.PRFLAGS.LS
       471**DCL
B$JIT.PRFLAGS.NOSCAN
       472**DCL
B$JIT.PRFLAGS.NSSYNTAX
       471**DCL
B$JIT.PRFLAGS.OU
       471**DCL
B$JIT.PRFLAGS.OUTPUT
       471**DCL
B$JIT.PRFLAGS.POINT
       472**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:794  
B$JIT.PRFLAGS.POSITION
       472**DCL
B$JIT.PRFLAGS.SI
       471**DCL
B$JIT.PRFLAGS.UI
       471**DCL
B$JIT.PRFLAGS.WHEN
       472**DCL
B$JIT.PRIINC
       562**DCL
B$JIT.PRIOB
       560**DCL
B$JIT.PRIOCORE
       548**DCL
B$JIT.PRIOR_CP
       651**DCL
B$JIT.PRIV
       388**DCL
B$JIT.PRIV.ACTIVE
       388**DCL
B$JIT.PRIV.ACTIVE.ASAVE
       390**DCL
B$JIT.PRIV.ACTIVE.CFEP
       391**DCL
B$JIT.PRIV.ACTIVE.CQ
       391**DCL
B$JIT.PRIV.ACTIVE.DISPJOB
       390**DCL
B$JIT.PRIV.ACTIVE.DOMANE
       389**DCL
B$JIT.PRIV.ACTIVE.EXMM
       392**DCL
B$JIT.PRIV.ACTIVE.EXPM
       391**DCL
B$JIT.PRIV.ACTIVE.FMBLK
       388**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:795  
B$JIT.PRIV.ACTIVE.FMDIAG
       389**DCL
B$JIT.PRIV.ACTIVE.FMEFT
       388**DCL
B$JIT.PRIV.ACTIVE.FMREAD
       389**DCL
B$JIT.PRIV.ACTIVE.FMSEC
       389**DCL
B$JIT.PRIV.ACTIVE.GPP
       390**DCL
B$JIT.PRIV.ACTIVE.INTCON
       391**DCL
B$JIT.PRIV.ACTIVE.IOQ
       391**DCL
B$JIT.PRIV.ACTIVE.IOQW
       391**DCL
B$JIT.PRIV.ACTIVE.JIT
       392**DCL
B$JIT.PRIV.ACTIVE.MAXMEM
       392**DCL
B$JIT.PRIV.ACTIVE.MFEP
       391**DCL
B$JIT.PRIV.ACTIVE.MODE
       389**DCL
B$JIT.PRIV.ACTIVE.MSYS
       392**DCL
B$JIT.PRIV.ACTIVE.PM
       391**DCL
B$JIT.PRIV.ACTIVE.SCREECH
       390**DCL
B$JIT.PRIV.ACTIVE.SNAP
       390**DCL
B$JIT.PRIV.ACTIVE.SPCLMM
       392**DCL
B$JIT.PRIV.ACTIVE.SYSACCT
       389**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:796  
B$JIT.PRIV.ACTIVE.SYSCON
       390**DCL
B$JIT.PRIV.ACTIVE.SYSLOG
       391**DCL
B$JIT.PRIV.ACTIVE.TND
       391**DCL
B$JIT.PRIV.AUTH
       428**DCL
B$JIT.PRIV.AUTH.ASAVE
       429**DCL
B$JIT.PRIV.AUTH.CFEP
       430**DCL
B$JIT.PRIV.AUTH.CQ
       430**DCL
B$JIT.PRIV.AUTH.DISPJOB
       429**DCL
B$JIT.PRIV.AUTH.DOMANE
       428**DCL
B$JIT.PRIV.AUTH.EXMM
       431**DCL
B$JIT.PRIV.AUTH.EXPM
       430**DCL
B$JIT.PRIV.AUTH.FMBLK
       428**DCL
B$JIT.PRIV.AUTH.FMDIAG
       428**DCL
B$JIT.PRIV.AUTH.FMEFT
       428**DCL
B$JIT.PRIV.AUTH.FMREAD
       428**DCL
B$JIT.PRIV.AUTH.FMSEC
       428**DCL
B$JIT.PRIV.AUTH.GPP
       430**DCL
B$JIT.PRIV.AUTH.INTCON
       430**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:797  
B$JIT.PRIV.AUTH.IOQ
       430**DCL
B$JIT.PRIV.AUTH.IOQW
       430**DCL
B$JIT.PRIV.AUTH.JIT
       431**DCL
B$JIT.PRIV.AUTH.MAXMEM
       431**DCL
B$JIT.PRIV.AUTH.MFEP
       430**DCL
B$JIT.PRIV.AUTH.MODE
       428**DCL
B$JIT.PRIV.AUTH.MSYS
       431**DCL
B$JIT.PRIV.AUTH.PM
       431**DCL
B$JIT.PRIV.AUTH.SCREECH
       429**DCL
B$JIT.PRIV.AUTH.SNAP
       429**DCL
B$JIT.PRIV.AUTH.SPCLMM
       431**DCL
B$JIT.PRIV.AUTH.SYSACCT
       428**DCL
B$JIT.PRIV.AUTH.SYSCON
       429**DCL
B$JIT.PRIV.AUTH.SYSLOG
       430**DCL
B$JIT.PRIV.AUTH.TND
       431**DCL
B$JIT.PRIV.JOB
       431**DCL
B$JIT.PRIV.JOB.ASAVE
       433**DCL
B$JIT.PRIV.JOB.CFEP
       434**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:798  
B$JIT.PRIV.JOB.CQ
       434**DCL
B$JIT.PRIV.JOB.DISPJOB
       433**DCL
B$JIT.PRIV.JOB.DOMANE
       432**DCL
B$JIT.PRIV.JOB.EXMM
       435**DCL
B$JIT.PRIV.JOB.EXPM
       434**DCL
B$JIT.PRIV.JOB.FMBLK
       432**DCL
B$JIT.PRIV.JOB.FMDIAG
       432**DCL
B$JIT.PRIV.JOB.FMEFT
       431**DCL
B$JIT.PRIV.JOB.FMREAD
       432**DCL
B$JIT.PRIV.JOB.FMSEC
       432**DCL
B$JIT.PRIV.JOB.GPP
       433**DCL
B$JIT.PRIV.JOB.INTCON
       434**DCL
B$JIT.PRIV.JOB.IOQ
       434**DCL
B$JIT.PRIV.JOB.IOQW
       434**DCL
B$JIT.PRIV.JOB.JIT
       435**DCL
B$JIT.PRIV.JOB.MAXMEM
       435**DCL
B$JIT.PRIV.JOB.MFEP
       434**DCL
B$JIT.PRIV.JOB.MODE
       432**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:799  
B$JIT.PRIV.JOB.MSYS
       435**DCL
B$JIT.PRIV.JOB.PM
       434**DCL
B$JIT.PRIV.JOB.SCREECH
       433**DCL
B$JIT.PRIV.JOB.SNAP
       433**DCL
B$JIT.PRIV.JOB.SPCLMM
       435**DCL
B$JIT.PRIV.JOB.SYSACCT
       432**DCL
B$JIT.PRIV.JOB.SYSCON
       433**DCL
B$JIT.PRIV.JOB.SYSLOG
       434**DCL
B$JIT.PRIV.JOB.TND
       435**DCL
B$JIT.PRIV.PRC
       435**DCL
B$JIT.PRIV.PRC.ASAVE
       437**DCL
B$JIT.PRIV.PRC.CFEP
       438**DCL
B$JIT.PRIV.PRC.CQ
       438**DCL
B$JIT.PRIV.PRC.DISPJOB
       437**DCL
B$JIT.PRIV.PRC.DOMANE
       436**DCL
B$JIT.PRIV.PRC.EXMM
       439**DCL
B$JIT.PRIV.PRC.EXPM
       438**DCL
B$JIT.PRIV.PRC.FMBLK
       435**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:800  
B$JIT.PRIV.PRC.FMDIAG
       436**DCL
B$JIT.PRIV.PRC.FMEFT
       435**DCL
B$JIT.PRIV.PRC.FMREAD
       436**DCL
B$JIT.PRIV.PRC.FMSEC
       436**DCL
B$JIT.PRIV.PRC.GPP
       437**DCL
B$JIT.PRIV.PRC.INTCON
       438**DCL
B$JIT.PRIV.PRC.IOQ
       438**DCL
B$JIT.PRIV.PRC.IOQW
       438**DCL
B$JIT.PRIV.PRC.JIT
       439**DCL
B$JIT.PRIV.PRC.MAXMEM
       439**DCL
B$JIT.PRIV.PRC.MFEP
       438**DCL
B$JIT.PRIV.PRC.MODE
       436**DCL
B$JIT.PRIV.PRC.MSYS
       439**DCL
B$JIT.PRIV.PRC.PM
       438**DCL
B$JIT.PRIV.PRC.SCREECH
       437**DCL
B$JIT.PRIV.PRC.SNAP
       437**DCL
B$JIT.PRIV.PRC.SPCLMM
       439**DCL
B$JIT.PRIV.PRC.SYSACCT
       436**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:801  
B$JIT.PRIV.PRC.SYSCON
       437**DCL
B$JIT.PRIV.PRC.SYSLOG
       437**DCL
B$JIT.PRIV.PRC.TND
       438**DCL
B$JIT.PRIV.SAVED
       439**DCL
B$JIT.PRIV.SAVED.ASAVE
       441**DCL
B$JIT.PRIV.SAVED.CFEP
       442**DCL
B$JIT.PRIV.SAVED.CQ
       442**DCL
B$JIT.PRIV.SAVED.DISPJOB
       441**DCL
B$JIT.PRIV.SAVED.DOMANE
       440**DCL
B$JIT.PRIV.SAVED.EXMM
       443**DCL
B$JIT.PRIV.SAVED.EXPM
       442**DCL
B$JIT.PRIV.SAVED.FMBLK
       439**DCL
B$JIT.PRIV.SAVED.FMDIAG
       440**DCL
B$JIT.PRIV.SAVED.FMEFT
       439**DCL
B$JIT.PRIV.SAVED.FMREAD
       440**DCL
B$JIT.PRIV.SAVED.FMSEC
       439**DCL
B$JIT.PRIV.SAVED.GPP
       441**DCL
B$JIT.PRIV.SAVED.INTCON
       442**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:802  
B$JIT.PRIV.SAVED.IOQ
       442**DCL
B$JIT.PRIV.SAVED.IOQW
       442**DCL
B$JIT.PRIV.SAVED.JIT
       442**DCL
B$JIT.PRIV.SAVED.MAXMEM
       443**DCL
B$JIT.PRIV.SAVED.MFEP
       442**DCL
B$JIT.PRIV.SAVED.MODE
       440**DCL
B$JIT.PRIV.SAVED.MSYS
       443**DCL
B$JIT.PRIV.SAVED.PM
       442**DCL
B$JIT.PRIV.SAVED.SCREECH
       441**DCL
B$JIT.PRIV.SAVED.SNAP
       441**DCL
B$JIT.PRIV.SAVED.SPCLMM
       443**DCL
B$JIT.PRIV.SAVED.SYSACCT
       440**DCL
B$JIT.PRIV.SAVED.SYSCON
       441**DCL
B$JIT.PRIV.SAVED.SYSLOG
       441**DCL
B$JIT.PRIV.SAVED.TND
       442**DCL
B$JIT.PROG_ENTRY
       537**DCL
B$JIT.PROMPTS
       536**DCL
B$JIT.PSEUDOPGS
       550**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:803  
B$JIT.PSEUDO_COUNT
       651**DCL
B$JIT.PSEUDO_TEXT
       651**DCL
B$JIT.PSLEV
       524**DCL
B$JIT.PTSIZ
       551**DCL
B$JIT.PUL
       545**DCL
B$JIT.QUAN
       560**DCL
B$JIT.REMCPO
       660**DCL
B$JIT.REMDO
       660**DCL
B$JIT.REMLO
       660**DCL
B$JIT.RERUN
       562**DCL
B$JIT.RESCORE
       656**DCL
B$JIT.RESPEAK
       550**DCL
B$JIT.RNST
       566**DCL
B$JIT.RUNFLAGS
       583**DCL
B$JIT.SAVEDCB$
       557**DCL
B$JIT.SCHTIME
       560**DCL
B$JIT.SINPUTSZ
       536**DCL
B$JIT.SPEAK
       549**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:804  
B$JIT.SRESPEAK
       550**DCL
B$JIT.SSLEV
       524**DCL
B$JIT.STAR
       555**DCL
B$JIT.STAR.DA
       555**DCL
B$JIT.STDLOPGS
       655**DCL
B$JIT.STEPCC
       614**DCL
B$JIT.STEPS
       608**DCL
B$JIT.STEPUNIT
       476**DCL
B$JIT.STIME
       560**DCL
B$JIT.STMPDPPK
       556**DCL
B$JIT.SVLDTF
       628**DCL
B$JIT.SVTUS
       563**DCL
B$JIT.SWITCH
       475**DCL
B$JIT.SYSID
       387**DCL
B$JIT.TMPGAC
       556**DCL
B$JIT.TMPGAC.N
       556**DCL
B$JIT.TMPGAC.TIME
       556**DCL
B$JIT.TPEXT
       561**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:805  
B$JIT.TPSVT
       561**DCL
B$JIT.TSLINE.FEX
       656**DCL
B$JIT.TSLINE.LEV
       657**DCL
B$JIT.TSLINE.PORT
       656**DCL
B$JIT.TSLINE.SPEED
       656**DCL
B$JIT.TSLINE.SUBDEVICE
       657**DCL
B$JIT.TSLINE.SUBSUBDEVICE
       657**DCL
B$JIT.TSLINE.TTYP
       657**DCL
B$JIT.TUEXT
       561**DCL
B$JIT.TUSVT
       561**DCL
B$JIT.UMEMTIM
       561**DCL
B$JIT.UNAME
       387**DCL
B$JIT.USER
       387**DCL
B$JIT.USERWORD
       475**DCL
B$JIT.USRDCB
       536**DCL
B$JIT.USRERR
       523**DCL
B$JIT.USRERR.CODE
       523**DCL
B$JIT.USRERR.FCG
       523**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:806  
B$JIT.USRERR.MID
       523**DCL
B$JIT.USRERR.MON
       523**DCL
B$JIT.USRERR.SEV
       523**DCL
B$JIT.USRIC
       524**DCL
B$JIT.USRRNST
       523**DCL
B$JIT.UTIMER
       562**DCL
B$JIT.VIRTUAL
       552**DCL
B$JIT.VIRTUAL.DCB#
       552**DCL
B$JIT.WOO
       387**DCL
B$JIT.XCONF
       608**DCL
B$JIT.XLIMFLG
       618**DCL
B$JIT.XTIME
       560**DCL
B$JIT.YC0SZ
       524**DCL
B$JIT.YC2SZ
       542**DCL
B$TCB
     10201**DCL
B$TCB.CURRSZ
     10201**DCL
B$TCB.STK$
     10201**DCL
B$TCB.TCBAVSZ
     10201**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:807  
B$TCB IN PROCEDURE TOP$MME_WRDUMP
     15326**DCL
B$TCB.CURRSZ IN PROCEDURE TOP$MME_WRDUMP
     15326**DCL
B$TCB.STK$ IN PROCEDURE TOP$MME_WRDUMP
     15326**DCL
B$TCB.TCBAVSZ IN PROCEDURE TOP$MME_WRDUMP
     15326**DCL
CLOSE_CONFIG.ACCESS_ IN PROCEDURE GET_DEVICE_CODE
     13416**DCL
CLOSE_CONFIG.ACCT_ IN PROCEDURE GET_DEVICE_CODE
     13418**DCL
CLOSE_CONFIG.ACSVEH_ IN PROCEDURE GET_DEVICE_CODE
     13417**DCL
CLOSE_CONFIG.ALTKEYS_ IN PROCEDURE GET_DEVICE_CODE
     13419**DCL
CLOSE_CONFIG.IFPARAM_ IN PROCEDURE GET_DEVICE_CODE
     13419**DCL
CLOSE_CONFIG.INSTATTR_ IN PROCEDURE GET_DEVICE_CODE
     13417**DCL
CLOSE_CONFIG.IRREC_ IN PROCEDURE GET_DEVICE_CODE
     13414**DCL
CLOSE_CONFIG.NAME_ IN PROCEDURE GET_DEVICE_CODE
     13415**DCL
CLOSE_CONFIG.PASS_ IN PROCEDURE GET_DEVICE_CODE
     13416**DCL
CLOSE_CONFIG.PROCATTR_ IN PROCEDURE GET_DEVICE_CODE
     13418**DCL
CLOSE_CONFIG.RECFIELD_ IN PROCEDURE GET_DEVICE_CODE
     13415**DCL
CLOSE_CONFIG.UATTR_ IN PROCEDURE GET_DEVICE_CODE
     13417**DCL
CLOSE_CONFIG.V.ALTBLD# IN PROCEDURE GET_DEVICE_CODE
     13428**DCL
CLOSE_CONFIG.V.BUPM# IN PROCEDURE GET_DEVICE_CODE
     13427**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:808  
CLOSE_CONFIG.V.CLDCB# IN PROCEDURE GET_DEVICE_CODE
     13427**DCL
CLOSE_CONFIG.V.CLINFO# IN PROCEDURE GET_DEVICE_CODE
     13429**DCL
CLOSE_CONFIG.V.CLSYSID# IN PROCEDURE GET_DEVICE_CODE
     13426**DCL
CLOSE_CONFIG.V.DCB# IN PROCEDURE GET_DEVICE_CODE
     13420**DCL
CLOSE_CONFIG.V.DESC IN PROCEDURE GET_DEVICE_CODE
     13424**DCL
CLOSE_CONFIG.V.DESC.ACTIVE# IN PROCEDURE GET_DEVICE_CODE
     13426**DCL
CLOSE_CONFIG.V.DESC.ARCHIVE# IN PROCEDURE GET_DEVICE_CODE
     13425**DCL
CLOSE_CONFIG.V.DESC.BAD# IN PROCEDURE GET_DEVICE_CODE
     13425**DCL
CLOSE_CONFIG.V.DESC.BUF# IN PROCEDURE GET_DEVICE_CODE
     13425**DCL
CLOSE_CONFIG.V.DESC.BUPM# IN PROCEDURE GET_DEVICE_CODE
     13425**DCL
CLOSE_CONFIG.V.DESC.DELF# IN PROCEDURE GET_DEVICE_CODE
     13424**DCL
CLOSE_CONFIG.V.DESC.FETCH# IN PROCEDURE GET_DEVICE_CODE
     13426**DCL
CLOSE_CONFIG.V.DESC.NBUF# IN PROCEDURE GET_DEVICE_CODE
     13426**DCL
CLOSE_CONFIG.V.DESC.NOLIST# IN PROCEDURE GET_DEVICE_CODE
     13425**DCL
CLOSE_CONFIG.V.DESC.ODSTOW# IN PROCEDURE GET_DEVICE_CODE
     13425**DCL
CLOSE_CONFIG.V.DESC.QS# IN PROCEDURE GET_DEVICE_CODE
     13425**DCL
CLOSE_CONFIG.V.DESC.TERMINATE# IN PROCEDURE GET_DEVICE_CODE
     13426**DCL
CLOSE_CONFIG.V.DESC.TPB# IN PROCEDURE GET_DEVICE_CODE
     13426**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:809  
CLOSE_CONFIG.V.DISP# IN PROCEDURE GET_DEVICE_CODE
     13423**DCL
CLOSE_CONFIG.V.EFTOPER IN PROCEDURE GET_DEVICE_CODE
     13421**DCL
CLOSE_CONFIG.V.EFTOPER.ASTOW# IN PROCEDURE GET_DEVICE_CODE
     13422**DCL
CLOSE_CONFIG.V.EFTOPER.BACKUP# IN PROCEDURE GET_DEVICE_CODE
     13421**DCL
CLOSE_CONFIG.V.EFTOPER.DELFDE# IN PROCEDURE GET_DEVICE_CODE
     13423**DCL
CLOSE_CONFIG.V.EFTOPER.ISTOW# IN PROCEDURE GET_DEVICE_CODE
     13422**DCL
CLOSE_CONFIG.V.EFTOPER.UPDDESC# IN PROCEDURE GET_DEVICE_CODE
     13422**DCL
CLOSE_CONFIG.V.GHSTACS# IN PROCEDURE GET_DEVICE_CODE
     13428**DCL
CLOSE_CONFIG.V.LRDL0# IN PROCEDURE GET_DEVICE_CODE
     13430**DCL
CLOSE_CONFIG.V.LSLIDE# IN PROCEDURE GET_DEVICE_CODE
     13430**DCL
CLOSE_CONFIG.V.NOMARKS# IN PROCEDURE GET_DEVICE_CODE
     13428**DCL
CLOSE_CONFIG.V.OPER IN PROCEDURE GET_DEVICE_CODE
     13420**DCL
CLOSE_CONFIG.V.OPER.CHGATT# IN PROCEDURE GET_DEVICE_CODE
     13420**DCL
CLOSE_CONFIG.V.OPER.REBLD# IN PROCEDURE GET_DEVICE_CODE
     13421**DCL
CLOSE_CONFIG.V.OPER.RELG# IN PROCEDURE GET_DEVICE_CODE
     13420**DCL
CLOSE_CONFIG.V.POS# IN PROCEDURE GET_DEVICE_CODE
     13427**DCL
CLOSE_CONFIG.V.SPARE# IN PROCEDURE GET_DEVICE_CODE
     13430**DCL
CLOSE_CONFIG.V.TRUNCATE# IN PROCEDURE GET_DEVICE_CODE
     13423**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:810  
CLOSE_CONFIG.V_ IN PROCEDURE GET_DEVICE_CODE
     13414**DCL
CLOSE_DUMP.ACCESS_ IN PROCEDURE TOP$MME_WRDUMP
     15489**DCL
CLOSE_DUMP.ACCT_ IN PROCEDURE TOP$MME_WRDUMP
     15491**DCL
CLOSE_DUMP.ACSVEH_ IN PROCEDURE TOP$MME_WRDUMP
     15490**DCL
CLOSE_DUMP.ALTKEYS_ IN PROCEDURE TOP$MME_WRDUMP
     15492**DCL
CLOSE_DUMP.IFPARAM_ IN PROCEDURE TOP$MME_WRDUMP
     15492**DCL
CLOSE_DUMP.INSTATTR_ IN PROCEDURE TOP$MME_WRDUMP
     15490**DCL
CLOSE_DUMP.IRREC_ IN PROCEDURE TOP$MME_WRDUMP
     15487**DCL
CLOSE_DUMP.NAME_ IN PROCEDURE TOP$MME_WRDUMP
     15488**DCL
CLOSE_DUMP.PASS_ IN PROCEDURE TOP$MME_WRDUMP
     15489**DCL
CLOSE_DUMP.PROCATTR_ IN PROCEDURE TOP$MME_WRDUMP
     15491**DCL
CLOSE_DUMP.RECFIELD_ IN PROCEDURE TOP$MME_WRDUMP
     15488**DCL
CLOSE_DUMP.UATTR_ IN PROCEDURE TOP$MME_WRDUMP
     15490**DCL
CLOSE_DUMP.V.ALTBLD# IN PROCEDURE TOP$MME_WRDUMP
     15501**DCL
CLOSE_DUMP.V.BUPM# IN PROCEDURE TOP$MME_WRDUMP
     15500**DCL
CLOSE_DUMP.V.CLDCB# IN PROCEDURE TOP$MME_WRDUMP
     15500**DCL
CLOSE_DUMP.V.CLINFO# IN PROCEDURE TOP$MME_WRDUMP
     15502**DCL
CLOSE_DUMP.V.CLSYSID# IN PROCEDURE TOP$MME_WRDUMP
     15499**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:811  
CLOSE_DUMP.V.DCB# IN PROCEDURE TOP$MME_WRDUMP
     15493**DCL
CLOSE_DUMP.V.DESC IN PROCEDURE TOP$MME_WRDUMP
     15497**DCL
CLOSE_DUMP.V.DESC.ACTIVE# IN PROCEDURE TOP$MME_WRDUMP
     15499**DCL
CLOSE_DUMP.V.DESC.ARCHIVE# IN PROCEDURE TOP$MME_WRDUMP
     15498**DCL
CLOSE_DUMP.V.DESC.BAD# IN PROCEDURE TOP$MME_WRDUMP
     15498**DCL
CLOSE_DUMP.V.DESC.BUF# IN PROCEDURE TOP$MME_WRDUMP
     15498**DCL
CLOSE_DUMP.V.DESC.BUPM# IN PROCEDURE TOP$MME_WRDUMP
     15498**DCL
CLOSE_DUMP.V.DESC.DELF# IN PROCEDURE TOP$MME_WRDUMP
     15497**DCL
CLOSE_DUMP.V.DESC.FETCH# IN PROCEDURE TOP$MME_WRDUMP
     15499**DCL
CLOSE_DUMP.V.DESC.NBUF# IN PROCEDURE TOP$MME_WRDUMP
     15499**DCL
CLOSE_DUMP.V.DESC.NOLIST# IN PROCEDURE TOP$MME_WRDUMP
     15498**DCL
CLOSE_DUMP.V.DESC.ODSTOW# IN PROCEDURE TOP$MME_WRDUMP
     15498**DCL
CLOSE_DUMP.V.DESC.QS# IN PROCEDURE TOP$MME_WRDUMP
     15498**DCL
CLOSE_DUMP.V.DESC.TERMINATE# IN PROCEDURE TOP$MME_WRDUMP
     15499**DCL
CLOSE_DUMP.V.DESC.TPB# IN PROCEDURE TOP$MME_WRDUMP
     15499**DCL
CLOSE_DUMP.V.DISP# IN PROCEDURE TOP$MME_WRDUMP
     15496**DCL
CLOSE_DUMP.V.EFTOPER IN PROCEDURE TOP$MME_WRDUMP
     15494**DCL
CLOSE_DUMP.V.EFTOPER.ASTOW# IN PROCEDURE TOP$MME_WRDUMP
     15495**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:812  
CLOSE_DUMP.V.EFTOPER.BACKUP# IN PROCEDURE TOP$MME_WRDUMP
     15494**DCL
CLOSE_DUMP.V.EFTOPER.DELFDE# IN PROCEDURE TOP$MME_WRDUMP
     15496**DCL
CLOSE_DUMP.V.EFTOPER.ISTOW# IN PROCEDURE TOP$MME_WRDUMP
     15495**DCL
CLOSE_DUMP.V.EFTOPER.UPDDESC# IN PROCEDURE TOP$MME_WRDUMP
     15495**DCL
CLOSE_DUMP.V.GHSTACS# IN PROCEDURE TOP$MME_WRDUMP
     15501**DCL
CLOSE_DUMP.V.LRDL0# IN PROCEDURE TOP$MME_WRDUMP
     15503**DCL
CLOSE_DUMP.V.LSLIDE# IN PROCEDURE TOP$MME_WRDUMP
     15503**DCL
CLOSE_DUMP.V.NOMARKS# IN PROCEDURE TOP$MME_WRDUMP
     15501**DCL
CLOSE_DUMP.V.OPER IN PROCEDURE TOP$MME_WRDUMP
     15493**DCL
CLOSE_DUMP.V.OPER.CHGATT# IN PROCEDURE TOP$MME_WRDUMP
     15493**DCL
CLOSE_DUMP.V.OPER.REBLD# IN PROCEDURE TOP$MME_WRDUMP
     15494**DCL
CLOSE_DUMP.V.OPER.RELG# IN PROCEDURE TOP$MME_WRDUMP
     15493**DCL
CLOSE_DUMP.V.POS# IN PROCEDURE TOP$MME_WRDUMP
     15500**DCL
CLOSE_DUMP.V.SPARE# IN PROCEDURE TOP$MME_WRDUMP
     15503**DCL
CLOSE_DUMP.V.TRUNCATE# IN PROCEDURE TOP$MME_WRDUMP
     15496**DCL
CLOSE_DUMP.V_ IN PROCEDURE TOP$MME_WRDUMP
     15487**DCL
CONSOLE_FPT
      9930**DCL
CONSOLE_FPT.BUF_.BOUND
      9930**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:813  
CONSOLE_FPT.BUF_.BUF$
      9932**DCL
CONSOLE_FPT.IDBUF_
      9932**DCL
CONSOLE_FPT.KEY_
      9930**DCL
CONSOLE_FPT.V
      9933**DCL
CONSOLE_FPT.V.DCB#
      9933**DCL
CONSOLE_FPT.V.DVBYTE
      9938**DCL
CONSOLE_FPT.V.DVBYTE.BIN#
      9939**DCL
CONSOLE_FPT.V.DVBYTE.BP#
      9939**DCL
CONSOLE_FPT.V.DVBYTE.CONT#
      9941**DCL
CONSOLE_FPT.V.DVBYTE.NODAT#
      9940**DCL
CONSOLE_FPT.V.DVBYTE.REREAD#
      9939**DCL
CONSOLE_FPT.V.DVBYTE.RRR#
      9940**DCL
CONSOLE_FPT.V.DVBYTE.TOP#
      9938**DCL
CONSOLE_FPT.V.DVBYTE.TRANS#
      9940**DCL
CONSOLE_FPT.V.EVENT#
      9938**DCL
CONSOLE_FPT.V.FULL#
      9935**DCL
CONSOLE_FPT.V.ID#
      9934**DCL
CONSOLE_FPT.V.IOERROK#
      9937**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:814  
CONSOLE_FPT.V.KEYTYPE#
      9937**DCL
CONSOLE_FPT.V.NEWKEY#
      9936**DCL
CONSOLE_FPT.V.NOTIME#
      9936**DCL
CONSOLE_FPT.V.ODFNC#
      9942**DCL
CONSOLE_FPT.V.ONEWKEY#
      9935**DCL
CONSOLE_FPT.V.REWRITE#
      9936**DCL
CONSOLE_FPT.V.SEED#
      9938**DCL
CONSOLE_FPT.V.WAIT#
      9933**DCL
CONSOLE_FPT.V_
      9930**DCL
CONTROLLER_SCT.W0 IN PROCEDURE BUILD_CONTROLLER_SCT
     11576**DCL
CONTROLLER_SCT.W1# IN PROCEDURE BUILD_CONTROLLER_SCT
     11581**DCL
CONTROLLER_SCT.W2# IN PROCEDURE BUILD_CONTROLLER_SCT
     11582**DCL
CONTROLLER_SCT.W3# IN PROCEDURE BUILD_CONTROLLER_SCT
     11583**DCL
CONTROLLER_SCT IN PROCEDURE BUILD_SCTWRK
     16328**DCL
CONTROLLER_SCT.W1# IN PROCEDURE BUILD_SCTWRK
     16330**DCL
CONTROLLER_SCT.W2# IN PROCEDURE BUILD_SCTWRK
     16331**DCL
CONTROLLER_SCT.W3# IN PROCEDURE BUILD_SCTWRK
     16332**DCL
CRLF_.CR# IN PROCEDURE BREAK_HDR_LINE
     16223**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:815  
CRLF_.LF# IN PROCEDURE BREAK_HDR_LINE
     16224**DCL
CSCT_PTR IN PROCEDURE BUILD_SCTWRK
     16348**DCL
CSCT_PTR.SEGID# IN PROCEDURE BUILD_SCTWRK
     16350**DCL
CSCT_PTR IN PROCEDURE TOP$MME_GETCSC
     11782**DCL
DATA_VECTOR.BASE# IN PROCEDURE FRAME_DATA_AREA
     14790**DCL
DATA_VECTOR.FLAGS# IN PROCEDURE FRAME_DATA_AREA
     14787**DCL
DATA_VECTOR.SEGID# IN PROCEDURE FRAME_DATA_AREA
     14792**DCL
DATA_VECTOR.V# IN PROCEDURE FRAME_DATA_AREA
     14788**DCL
DATA_VECTOR.BASE# IN PROCEDURE GET_DENSITIES
     11405**DCL
DATA_VECTOR.FLAGS# IN PROCEDURE GET_DENSITIES
     11402**DCL
DATA_VECTOR.SEGID# IN PROCEDURE GET_DENSITIES
     11407**DCL
DATA_VECTOR.V# IN PROCEDURE GET_DENSITIES
     11403**DCL
DCB_NAME.LGTH IN PROCEDURE GET_TEST_DCB
     10974**DCL
DCB_NAME.VALUE IN PROCEDURE GET_TEST_DCB
     10975**DCL
DCW.CHAR_POS# IN PROCEDURE BUILD_DCW_LIST
     14968**DCL
DCW.TALLY# IN PROCEDURE BUILD_DCW_LIST
     14971**DCL
DCW.TALLY_CNTRL# IN PROCEDURE BUILD_DCW_LIST
     14969**DCL
DCWLIST_ IN PROCEDURE BUILD_DCW_LIST
     14953**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:816  
DELAY_FPT.UETIME_ IN PROCEDURE TOP$MME_IPCWDT
     12138**DCL
DELAY_FPT.V.UNITS# IN PROCEDURE TOP$MME_IPCWDT
     12139**DCL
DELAY_FPT.V.UTYPE# IN PROCEDURE TOP$MME_IPCWDT
     12139**DCL
DELAY_FPT.V_ IN PROCEDURE TOP$MME_IPCWDT
     12138**DCL
DENSITY_DCWLIST.DCW IN PROCEDURE GET_DENSITIES
     11418**DCL
DENSITY_DCWLIST.DCW.WORD_COUNT# IN PROCEDURE GET_DENSITIES
     11421**DCL
DENSITY_DCWLIST.IDCW IN PROCEDURE GET_DENSITIES
     11410**DCL
DENSITY_DCWLIST.IDCW.CHAN_CMD# IN PROCEDURE GET_DENSITIES
     11416**DCL
DENSITY_DCWLIST.IDCW.CMD# IN PROCEDURE GET_DENSITIES
     11411**DCL
DENSITY_DCWLIST.IDCW.DEV_NUMBER# IN PROCEDURE GET_DENSITIES
     11412**DCL
DENSITY_DCWLIST.IDCW.REC_COUNT# IN PROCEDURE GET_DENSITIES
     11417**DCL
DENSITY_DCWLIST.IDCW.TYPE# IN PROCEDURE GET_DENSITIES
     11414**DCL
DEVICE_CODE IN PROCEDURE TOP$MME_ALLOCR
     10852**DCL
DEVICE_INFO.ALTCHAN# IN PROCEDURE GET_DENSITIES
     11426**DCL
DEVICE_INFO.DEV# IN PROCEDURE GET_DENSITIES
     11429**DCL
DEVICE_INFO.OPI# IN PROCEDURE GET_DENSITIES
     11427**DCL
DEVICE_INFO.RDY# IN PROCEDURE GET_DENSITIES
     11428**DCL
DEVICE_INFO.SPEED# IN PROCEDURE GET_DENSITIES
     11431**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:817  
DEVICE_INFO.TRACK# IN PROCEDURE GET_DENSITIES
     11432**DCL
DEVICE_INFO_ IN PROCEDURE GET_DENSITIES
     11435**DCL
DEVICE_INFO_.SEGID IN PROCEDURE GET_DENSITIES
     11437**DCL
DEVICE_KEY.SIZE IN PROCEDURE GET_MODEL_ID
     13849**DCL
DEVICE_SCT.W0 IN PROCEDURE BUILD_DEVICE_SCT
     11217**DCL
DEVICE_SCT.W1 IN PROCEDURE BUILD_DEVICE_SCT
     11226**DCL
DEVICE_SCT.W1.MODULES# IN PROCEDURE BUILD_DEVICE_SCT
     11228**DCL
DEVICE_SCT.W2# IN PROCEDURE BUILD_DEVICE_SCT
     11232**DCL
DEVICE_SCT.W3# IN PROCEDURE BUILD_DEVICE_SCT
     11233**DCL
DEVICE_SCT IN PROCEDURE BUILD_SCTWRK
     16333**DCL
DEVICE_SCT.W2# IN PROCEDURE BUILD_SCTWRK
     16336**DCL
DEVICE_SCT.W3# IN PROCEDURE BUILD_SCTWRK
     16337**DCL
DUMMY IN PROCEDURE TOP$MME_TESTIO
     14745**DCL
DUMP_.SEGID# IN PROCEDURE TOP$MME_WRDUMP
     15398**DCL
DUMP_LINE.DUMP_OUTPUT_ IN PROCEDURE TOP$MME_WRDUMP
     15367**DCL
DUMP_PROMPT.PROMPT_ IN PROCEDURE TOP$MME_WRDUMP
     15760**DCL
DUMP_PROMPT.STATION_ IN PROCEDURE TOP$MME_WRDUMP
     15758**DCL
DUMP_PROMPT.V.DCB# IN PROCEDURE TOP$MME_WRDUMP
     15762**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:818  
DUMP_PROMPT.V.DVBYTE# IN PROCEDURE TOP$MME_WRDUMP
     15762**DCL
DUMP_PROMPT.V.DVBYTE#.BIN# IN PROCEDURE TOP$MME_WRDUMP
     15763**DCL
DUMP_PROMPT.V.DVBYTE#.TRANS# IN PROCEDURE TOP$MME_WRDUMP
     15763**DCL
DUMP_PROMPT.V.DVBYTE#.VFC# IN PROCEDURE TOP$MME_WRDUMP
     15763**DCL
DUMP_PROMPT.V_ IN PROCEDURE TOP$MME_WRDUMP
     15756**DCL
F$DCB
     10204**DCL
F$DCB.ACCT#
     10220**DCL
F$DCB.ACS#
     10228**DCL
F$DCB.AFTRBLK
     10244**DCL
F$DCB.AGE
     10255**DCL
F$DCB.ALTKEYX
     10235**DCL
F$DCB.AMFLG
     10241**DCL
F$DCB.AMFLG.ACCF
     10241**DCL
F$DCB.AMFLG.ACSF
     10241**DCL
F$DCB.AMFLG.INSF
     10241**DCL
F$DCB.AMFLG.PROF
     10241**DCL
F$DCB.AMFLG.SNLF
     10241**DCL
F$DCB.AMFLG.USRF
     10241**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:819  
F$DCB.AMR#
     10223**DCL
F$DCB.AMRSETSTA
     10222**DCL
F$DCB.ANSISPANSEQ#
     10238**DCL
F$DCB.ASN#
     10225**DCL
F$DCB.ATTR.APL#
     10230**DCL
F$DCB.ATTR.BIN#
     10230**DCL
F$DCB.ATTR.DENS#
     10229**DCL
F$DCB.ATTR.GRLGL#
     10229**DCL
F$DCB.ATTR.LOWERCASE#
     10230**DCL
F$DCB.ATTR.NATL#
     10229**DCL
F$DCB.ATTR.NOXLATE#
     10229**DCL
F$DCB.ATTR.TRANSLGL#
     10229**DCL
F$DCB.ATTR.TRUOVRPRT#
     10229**DCL
F$DCB.ATTR.UPPERCASE#
     10229**DCL
F$DCB.AU#
     10222**DCL
F$DCB.AUTHFFLG
     10236**DCL
F$DCB.AUTHFFLG.AU#
     10238**DCL
F$DCB.AUTHFFLG.AURD#
     10238**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:820  
F$DCB.AUTHFFLG.CREATE#
     10238**DCL
F$DCB.AUTHFFLG.DELF#
     10237**DCL
F$DCB.AUTHFFLG.DELR#
     10237**DCL
F$DCB.AUTHFFLG.EXEC#
     10237**DCL
F$DCB.AUTHFFLG.NOLIST#
     10237**DCL
F$DCB.AUTHFFLG.READ#
     10237**DCL
F$DCB.AUTHFFLG.REATTR#
     10237**DCL
F$DCB.AUTHFFLG.TCTL#
     10238**DCL
F$DCB.AUTHFFLG.UPD#
     10237**DCL
F$DCB.AUTHFFLG.WNEW#
     10237**DCL
F$DCB.BADARS#
     10239**DCL
F$DCB.BFR
     10255**DCL
F$DCB.BFR.BUFUP
     10256**DCL
F$DCB.BFR.BUFX
     10256**DCL
F$DCB.BFR.CHNG
     10256**DCL
F$DCB.BFR.CVM
     10256**DCL
F$DCB.BFR.DA
     10256**DCL
F$DCB.BFR.SCRUB
     10256**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:821  
F$DCB.BFR1
     10256**DCL
F$DCB.BFR1.CX
     10257**DCL
F$DCB.BFR1.FLAGS
     10256**DCL
F$DCB.BFR1.FLAGS.ONE_WORD_HEADER
     10256**DCL
F$DCB.BFR1.SIZ
     10257**DCL
F$DCB.BLKL#
     10226**DCL
F$DCB.BLKLEN
     10249**DCL
F$DCB.BLOCKED#
     10224**DCL
F$DCB.BOL#
     10227**DCL
F$DCB.BUPF
     10214**DCL
F$DCB.BUPM#
     10225**DCL
F$DCB.BYTESLEFT
     10248**DCL
F$DCB.CACHE
     10243**DCL
F$DCB.CBUFNUM
     10247**DCL
F$DCB.CFU$
     10245**DCL
F$DCB.CHAIN#
     10231**DCL
F$DCB.CNVRT#
     10223**DCL
F$DCB.CODE16$
     10235**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:822  
F$DCB.COMP#
     10224**DCL
F$DCB.CONT
     10243**DCL
F$DCB.CRECNO
     10248**DCL
F$DCB.CRECX
     10247**DCL
F$DCB.CSEED
     10248**DCL
F$DCB.CTG#
     10224**DCL
F$DCB.CTLCMDIN
     10252**DCL
F$DCB.CVOL#
     10224**DCL
F$DCB.CWORD
     10253**DCL
F$DCB.CX
     10253**DCL
F$DCB.DBGDCBNO#
     10226**DCL
F$DCB.DBGSYSID#
     10226**DCL
F$DCB.DCB#
     10238**DCL
F$DCB.DCBNAME
     10257**DCL
F$DCB.DCBNAME.N
     10258**DCL
F$DCB.DCBNAME.S
     10258**DCL
F$DCB.DCBNAME.X
     10258**DCL
F$DCB.DCT$
     10233**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:823  
F$DCB.DDEV
     10216**DCL
F$DCB.DDEV.CP#
     10216**DCL
F$DCB.DDEV.GR#
     10217**DCL
F$DCB.DDEV.IC#
     10216**DCL
F$DCB.DDEV.LP#
     10216**DCL
F$DCB.DDEV.UCOUT#
     10217**DCL
F$DCB.DDEV.XEQ#
     10217**DCL
F$DCB.DECRYPT
     10251**DCL
F$DCB.DENSITY#
     10231**DCL
F$DCB.DESC
     10217**DCL
F$DCB.DESC.ACTIVE#
     10219**DCL
F$DCB.DESC.ARCHIVE#
     10218**DCL
F$DCB.DESC.BAD#
     10218**DCL
F$DCB.DESC.BUF#
     10218**DCL
F$DCB.DESC.BUPM#
     10218**DCL
F$DCB.DESC.DELF#
     10217**DCL
F$DCB.DESC.FETCH#
     10219**DCL
F$DCB.DESC.NBUF#
     10218**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:824  
F$DCB.DESC.NOLIST#
     10218**DCL
F$DCB.DESC.ODSTOW#
     10218**DCL
F$DCB.DESC.QS#
     10218**DCL
F$DCB.DESC.TERMINATE#
     10219**DCL
F$DCB.DESC.TPB#
     10219**DCL
F$DCB.DEVADR
     10233**DCL
F$DCB.DEVADR.CHAN#
     10234**DCL
F$DCB.DEVADR.DVN#
     10234**DCL
F$DCB.DEVADR.IOM#
     10234**DCL
F$DCB.DISP#
     10225**DCL
F$DCB.DQH$
     10232**DCL
F$DCB.DVBYTE
     10213**DCL
F$DCB.DVBYTE.BIN#
     10213**DCL
F$DCB.DVBYTE.TOP#
     10213**DCL
F$DCB.DVBYTE.TRANS#
     10213**DCL
F$DCB.DVBYTE.VFC#
     10213**DCL
F$DCB.DVFC#
     10232**DCL
F$DCB.DVTYPE#
     10225**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:825  
F$DCB.EBCDIC#
     10223**DCL
F$DCB.ENQF
     10243**DCL
F$DCB.EOMVAL#
     10214**DCL
F$DCB.EOMVAL#.VALUE#
     10215**DCL
F$DCB.EOMVAL#.VFLG#
     10214**DCL
F$DCB.EOP
     10240**DCL
F$DCB.EVENT
     10235**DCL
F$DCB.EXIST#
     10224**DCL
F$DCB.EXPIRE#
     10227**DCL
F$DCB.FCD#
     10223**DCL
F$DCB.FCI#
     10223**DCL
F$DCB.FCN
     10249**DCL
F$DCB.FCN.CNT
     10249**DCL
F$DCB.FCN.F
     10249**DCL
F$DCB.FDCM
     10248**DCL
F$DCB.FEPIO
     10255**DCL
F$DCB.FEPIO.BPP
     10255**DCL
F$DCB.FEPIO.BUFX
     10255**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:826  
F$DCB.FEPIO.EVENT
     10255**DCL
F$DCB.FEPIO.KEYX
     10255**DCL
F$DCB.FEPIO.KPP
     10255**DCL
F$DCB.FEPIO2
     10257**DCL
F$DCB.FEPIO3
     10257**DCL
F$DCB.FEPSIZ
     10254**DCL
F$DCB.FEPSIZ.BUF
     10254**DCL
F$DCB.FEPSIZ.KEY
     10254**DCL
F$DCB.FEXT
     10240**DCL
F$DCB.FEXTX
     10227**DCL
F$DCB.FFLG
     10215**DCL
F$DCB.FFLG.AU#
     10216**DCL
F$DCB.FFLG.AURD#
     10216**DCL
F$DCB.FFLG.CREATE#
     10216**DCL
F$DCB.FFLG.DELF#
     10215**DCL
F$DCB.FFLG.DELR#
     10215**DCL
F$DCB.FFLG.EXEC#
     10216**DCL
F$DCB.FFLG.NOLIST#
     10215**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:827  
F$DCB.FFLG.READ#
     10215**DCL
F$DCB.FFLG.REATTR#
     10215**DCL
F$DCB.FFLG.TCTL#
     10216**DCL
F$DCB.FFLG.UPD#
     10215**DCL
F$DCB.FFLG.WNEW#
     10215**DCL
F$DCB.FIELDX
     10235**DCL
F$DCB.FMOD
     10240**DCL
F$DCB.FPRGX
     10235**DCL
F$DCB.FPSTR
     10250**DCL
F$DCB.FTAM
     10244**DCL
F$DCB.FTAM.CTX
     10245**DCL
F$DCB.FTAM.PMME
     10245**DCL
F$DCB.FTAM.USR
     10245**DCL
F$DCB.FUN#
     10225**DCL
F$DCB.GDISP
     10251**DCL
F$DCB.GHSTACS#
     10234**DCL
F$DCB.GRPOS
     10243**DCL
F$DCB.GTYP
     10240**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:828  
F$DCB.HASH
     10248**DCL
F$DCB.IASN
     10253**DCL
F$DCB.ID
     10254**DCL
F$DCB.ID.DA
     10254**DCL
F$DCB.ID.GX
     10254**DCL
F$DCB.IFMT
     10252**DCL
F$DCB.IGNOREFSN#
     10222**DCL
F$DCB.INDX
     10249**DCL
F$DCB.IOERROK#
     10222**DCL
F$DCB.IORG
     10247**DCL
F$DCB.IRRECX
     10239**DCL
F$DCB.IWL
     10252**DCL
F$DCB.IWL.HDRIWL
     10252**DCL
F$DCB.IWL.SEQIWL
     10252**DCL
F$DCB.IWL.TABIWL
     10252**DCL
F$DCB.JRNLBYPASS#
     10234**DCL
F$DCB.KEYL#
     10227**DCL
F$DCB.KEYTYPE#
     10236**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:829  
F$DCB.KEYX#
     10227**DCL
F$DCB.KFIELDX
     10236**DCL
F$DCB.LASTKEY
     10244**DCL
F$DCB.LASTKEY$
     10244**DCL
F$DCB.LDCTX
     10233**DCL
F$DCB.LDFLG
     10242**DCL
F$DCB.LINES#
     10232**DCL
F$DCB.LOAD#
     10222**DCL
F$DCB.LOGSEC
     10251**DCL
F$DCB.LPOOL
     10245**DCL
F$DCB.LRDL0#
     10228**DCL
F$DCB.LSLIDE#
     10228**DCL
F$DCB.LSTAOR#
     10222**DCL
F$DCB.LSTBLK
     10244**DCL
F$DCB.MAXVOL#
     10231**DCL
F$DCB.MEDIA
     10252**DCL
F$DCB.MODCNT
     10250**DCL
F$DCB.MOUNT
     10242**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:830  
F$DCB.MOVED
     10253**DCL
F$DCB.MPC$
     10233**DCL
F$DCB.MUST_CVOL
     10241**DCL
F$DCB.NAME#
     10220**DCL
F$DCB.NAME#.C17
     10220**DCL
F$DCB.NAME#.C17.CC
     10220**DCL
F$DCB.NAME#.L
     10220**DCL
F$DCB.NEW_FSECT
     10242**DCL
F$DCB.OLDIOERR
     10251**DCL
F$DCB.OWNER
     10242**DCL
F$DCB.PASS#
     10220**DCL
F$DCB.PASSF#
     10223**DCL
F$DCB.PATH
     10239**DCL
F$DCB.PATH.CHAN#
     10239**DCL
F$DCB.PATH.IOM#
     10239**DCL
F$DCB.PGINGRAN
     10251**DCL
F$DCB.PRIVOPN
     10251**DCL
F$DCB.PSN#
     10220**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:831  
F$DCB.QISS#
     10222**DCL
F$DCB.RA
     10243**DCL
F$DCB.RDL0#
     10214**DCL
F$DCB.REALSPAN
     10251**DCL
F$DCB.RECL#
     10226**DCL
F$DCB.RESNT
     10221**DCL
F$DCB.RESNT.NUM
     10221**DCL
F$DCB.RESNT.TYP
     10221**DCL
F$DCB.RETRYCNT#
     10217**DCL
F$DCB.RPOS
     10243**DCL
F$DCB.SEED#
     10240**DCL
F$DCB.SEGX
     10250**DCL
F$DCB.SEQ#
     10232**DCL
F$DCB.SEQCOL#
     10232**DCL
F$DCB.SEQID#
     10232**DCL
F$DCB.SETSTA$
     10219**DCL
F$DCB.SEZ_OK
     10241**DCL
F$DCB.SHARE#
     10224**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:832  
F$DCB.SHARED
     10240**DCL
F$DCB.SLIDE#
     10214**DCL
F$DCB.SPAN
     10242**DCL
F$DCB.SPANNED#
     10224**DCL
F$DCB.SPARE#
     10228**DCL
F$DCB.STARF
     10240**DCL
F$DCB.STARTX
     10236**DCL
F$DCB.STARX
     10243**DCL
F$DCB.STR#
     10250**DCL
F$DCB.SYSID#
     10227**DCL
F$DCB.TAPTYP
     10246**DCL
F$DCB.TAPTYP.CP6F
     10246**DCL
F$DCB.TAPTYP.HAVLASTKEY
     10246**DCL
F$DCB.TAPTYP.MANAGED
     10247**DCL
F$DCB.TAPTYP.NOCVOL
     10247**DCL
F$DCB.TAPTYP.PASTFM
     10247**DCL
F$DCB.TAPTYP.RWASC
     10246**DCL
F$DCB.TAPTYP.USRBUF
     10246**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:833  
F$DCB.TDALVL
     10245**DCL
F$DCB.TDFLG
     10230**DCL
F$DCB.TDFLG.SDSK#
     10230**DCL
F$DCB.TRNC
     10243**DCL
F$DCB.TYC
     10210**DCL
F$DCB.TYC.BLNKTP#
     10210**DCL
F$DCB.TYC.BOF#
     10210**DCL
F$DCB.TYC.BOT#
     10210**DCL
F$DCB.TYC.CDALRT#
     10212**DCL
F$DCB.TYC.CGCRCW
     10213**DCL
F$DCB.TYC.CGCWRV
     10213**DCL
F$DCB.TYC.CGFULL
     10212**DCL
F$DCB.TYC.CGKEYV
     10212**DCL
F$DCB.TYC.CGLWRV
     10212**DCL
F$DCB.TYC.DACT#
     10211**DCL
F$DCB.TYC.DI#
     10211**DCL
F$DCB.TYC.EGV#
     10210**DCL
F$DCB.TYC.EOD#
     10211**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:834  
F$DCB.TYC.EOF#
     10211**DCL
F$DCB.TYC.EOT#
     10210**DCL
F$DCB.TYC.FRAW#
     10212**DCL
F$DCB.TYC.IOERR#
     10211**DCL
F$DCB.TYC.LAST#
     10212**DCL
F$DCB.TYC.LD#
     10211**DCL
F$DCB.TYC.LDISC#
     10211**DCL
F$DCB.TYC.MTRAP#
     10211**DCL
F$DCB.TYC.OPER#
     10210**DCL
F$DCB.TYC.PROT#
     10212**DCL
F$DCB.TYC.TIMO#
     10212**DCL
F$DCB.TYC.XTRARD
     10212**DCL
F$DCB.TYPE#
     10221**DCL
F$DCB.UB$
     10249**DCL
F$DCB.UBYTES
     10249**DCL
F$DCB.UCOUT
     10246**DCL
F$DCB.UNIQUEBLD
     10253**DCL
F$DCB.UOPT#
     10223**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:835  
F$DCB.UPDCNT
     10253**DCL
F$DCB.VFCCHAR#
     10235**DCL
F$DCB.VOL#
     10231**DCL
F$DCB.VOLACCESS#
     10223**DCL
F$DCB.WAIT
     10243**DCL
F$DCB.WCDATA
     10246**DCL
F$DCB.WIDTH#
     10217**DCL
F$DCB.WRCMP
     10246**DCL
F$DCB.WSR#
     10228**DCL
F$DCB.XTEND#
     10224**DCL
F$DCB.XTNSIZE#
     10228**DCL
F$DCB IN PROCEDURE TOP$MME_WRDUMP
     15403**DCL
F$DCB.ACCT# IN PROCEDURE TOP$MME_WRDUMP
     15419**DCL
F$DCB.ACS# IN PROCEDURE TOP$MME_WRDUMP
     15427**DCL
F$DCB.AFTRBLK IN PROCEDURE TOP$MME_WRDUMP
     15443**DCL
F$DCB.AGE IN PROCEDURE TOP$MME_WRDUMP
     15454**DCL
F$DCB.ALTKEYX IN PROCEDURE TOP$MME_WRDUMP
     15434**DCL
F$DCB.AMFLG IN PROCEDURE TOP$MME_WRDUMP
     15440**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:836  
F$DCB.AMFLG.ACCF IN PROCEDURE TOP$MME_WRDUMP
     15440**DCL
F$DCB.AMFLG.ACSF IN PROCEDURE TOP$MME_WRDUMP
     15440**DCL
F$DCB.AMFLG.INSF IN PROCEDURE TOP$MME_WRDUMP
     15440**DCL
F$DCB.AMFLG.PROF IN PROCEDURE TOP$MME_WRDUMP
     15440**DCL
F$DCB.AMFLG.SNLF IN PROCEDURE TOP$MME_WRDUMP
     15440**DCL
F$DCB.AMFLG.USRF IN PROCEDURE TOP$MME_WRDUMP
     15440**DCL
F$DCB.AMR# IN PROCEDURE TOP$MME_WRDUMP
     15422**DCL
F$DCB.AMRSETSTA IN PROCEDURE TOP$MME_WRDUMP
     15421**DCL
F$DCB.ANSISPANSEQ# IN PROCEDURE TOP$MME_WRDUMP
     15437**DCL
F$DCB.ASN# IN PROCEDURE TOP$MME_WRDUMP
     15424**DCL
F$DCB.ATTR.APL# IN PROCEDURE TOP$MME_WRDUMP
     15429**DCL
F$DCB.ATTR.BIN# IN PROCEDURE TOP$MME_WRDUMP
     15429**DCL
F$DCB.ATTR.DENS# IN PROCEDURE TOP$MME_WRDUMP
     15428**DCL
F$DCB.ATTR.GRLGL# IN PROCEDURE TOP$MME_WRDUMP
     15428**DCL
F$DCB.ATTR.LOWERCASE# IN PROCEDURE TOP$MME_WRDUMP
     15429**DCL
F$DCB.ATTR.NATL# IN PROCEDURE TOP$MME_WRDUMP
     15428**DCL
F$DCB.ATTR.NOXLATE# IN PROCEDURE TOP$MME_WRDUMP
     15428**DCL
F$DCB.ATTR.TRANSLGL# IN PROCEDURE TOP$MME_WRDUMP
     15428**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:837  
F$DCB.ATTR.TRUOVRPRT# IN PROCEDURE TOP$MME_WRDUMP
     15428**DCL
F$DCB.ATTR.UPPERCASE# IN PROCEDURE TOP$MME_WRDUMP
     15428**DCL
F$DCB.AU# IN PROCEDURE TOP$MME_WRDUMP
     15421**DCL
F$DCB.AUTHFFLG IN PROCEDURE TOP$MME_WRDUMP
     15435**DCL
F$DCB.AUTHFFLG.AU# IN PROCEDURE TOP$MME_WRDUMP
     15437**DCL
F$DCB.AUTHFFLG.AURD# IN PROCEDURE TOP$MME_WRDUMP
     15437**DCL
F$DCB.AUTHFFLG.CREATE# IN PROCEDURE TOP$MME_WRDUMP
     15437**DCL
F$DCB.AUTHFFLG.DELF# IN PROCEDURE TOP$MME_WRDUMP
     15436**DCL
F$DCB.AUTHFFLG.DELR# IN PROCEDURE TOP$MME_WRDUMP
     15436**DCL
F$DCB.AUTHFFLG.EXEC# IN PROCEDURE TOP$MME_WRDUMP
     15436**DCL
F$DCB.AUTHFFLG.NOLIST# IN PROCEDURE TOP$MME_WRDUMP
     15436**DCL
F$DCB.AUTHFFLG.READ# IN PROCEDURE TOP$MME_WRDUMP
     15436**DCL
F$DCB.AUTHFFLG.REATTR# IN PROCEDURE TOP$MME_WRDUMP
     15436**DCL
F$DCB.AUTHFFLG.TCTL# IN PROCEDURE TOP$MME_WRDUMP
     15437**DCL
F$DCB.AUTHFFLG.UPD# IN PROCEDURE TOP$MME_WRDUMP
     15436**DCL
F$DCB.AUTHFFLG.WNEW# IN PROCEDURE TOP$MME_WRDUMP
     15436**DCL
F$DCB.BADARS# IN PROCEDURE TOP$MME_WRDUMP
     15438**DCL
F$DCB.BFR IN PROCEDURE TOP$MME_WRDUMP
     15454**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:838  
F$DCB.BFR.BUFUP IN PROCEDURE TOP$MME_WRDUMP
     15455**DCL
F$DCB.BFR.BUFX IN PROCEDURE TOP$MME_WRDUMP
     15455**DCL
F$DCB.BFR.CHNG IN PROCEDURE TOP$MME_WRDUMP
     15455**DCL
F$DCB.BFR.CVM IN PROCEDURE TOP$MME_WRDUMP
     15455**DCL
F$DCB.BFR.DA IN PROCEDURE TOP$MME_WRDUMP
     15455**DCL
F$DCB.BFR.SCRUB IN PROCEDURE TOP$MME_WRDUMP
     15455**DCL
F$DCB.BFR1 IN PROCEDURE TOP$MME_WRDUMP
     15455**DCL
F$DCB.BFR1.CX IN PROCEDURE TOP$MME_WRDUMP
     15456**DCL
F$DCB.BFR1.FLAGS IN PROCEDURE TOP$MME_WRDUMP
     15455**DCL
F$DCB.BFR1.FLAGS.ONE_WORD_HEADER IN PROCEDURE TOP$MME_WRDUMP
     15455**DCL
F$DCB.BFR1.SIZ IN PROCEDURE TOP$MME_WRDUMP
     15456**DCL
F$DCB.BLKL# IN PROCEDURE TOP$MME_WRDUMP
     15425**DCL
F$DCB.BLKLEN IN PROCEDURE TOP$MME_WRDUMP
     15448**DCL
F$DCB.BLOCKED# IN PROCEDURE TOP$MME_WRDUMP
     15423**DCL
F$DCB.BOL# IN PROCEDURE TOP$MME_WRDUMP
     15426**DCL
F$DCB.BUPF IN PROCEDURE TOP$MME_WRDUMP
     15413**DCL
F$DCB.BUPM# IN PROCEDURE TOP$MME_WRDUMP
     15424**DCL
F$DCB.BYTESLEFT IN PROCEDURE TOP$MME_WRDUMP
     15447**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:839  
F$DCB.CACHE IN PROCEDURE TOP$MME_WRDUMP
     15442**DCL
F$DCB.CBUFNUM IN PROCEDURE TOP$MME_WRDUMP
     15446**DCL
F$DCB.CFU$ IN PROCEDURE TOP$MME_WRDUMP
     15444**DCL
F$DCB.CHAIN# IN PROCEDURE TOP$MME_WRDUMP
     15430**DCL
F$DCB.CHANTIME# IN PROCEDURE TOP$MME_WRDUMP
     15430**DCL
F$DCB.CNVRT# IN PROCEDURE TOP$MME_WRDUMP
     15422**DCL
F$DCB.CODE16$ IN PROCEDURE TOP$MME_WRDUMP
     15434**DCL
F$DCB.COMP# IN PROCEDURE TOP$MME_WRDUMP
     15423**DCL
F$DCB.CONNCT# IN PROCEDURE TOP$MME_WRDUMP
     15429**DCL
F$DCB.CONT IN PROCEDURE TOP$MME_WRDUMP
     15442**DCL
F$DCB.CRECNO IN PROCEDURE TOP$MME_WRDUMP
     15447**DCL
F$DCB.CRECX IN PROCEDURE TOP$MME_WRDUMP
     15446**DCL
F$DCB.CSEED IN PROCEDURE TOP$MME_WRDUMP
     15447**DCL
F$DCB.CTG# IN PROCEDURE TOP$MME_WRDUMP
     15423**DCL
F$DCB.CTLCMDIN IN PROCEDURE TOP$MME_WRDUMP
     15451**DCL
F$DCB.CVOL# IN PROCEDURE TOP$MME_WRDUMP
     15423**DCL
F$DCB.CWORD IN PROCEDURE TOP$MME_WRDUMP
     15452**DCL
F$DCB.CX IN PROCEDURE TOP$MME_WRDUMP
     15452**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:840  
F$DCB.DBGDCBNO# IN PROCEDURE TOP$MME_WRDUMP
     15425**DCL
F$DCB.DBGSYSID# IN PROCEDURE TOP$MME_WRDUMP
     15425**DCL
F$DCB.DCB# IN PROCEDURE TOP$MME_WRDUMP
     15437**DCL
F$DCB.DCBNAME IN PROCEDURE TOP$MME_WRDUMP
     15456**DCL
F$DCB.DCBNAME.N IN PROCEDURE TOP$MME_WRDUMP
     15457**DCL
F$DCB.DCBNAME.S IN PROCEDURE TOP$MME_WRDUMP
     15457**DCL
F$DCB.DCBNAME.X IN PROCEDURE TOP$MME_WRDUMP
     15457**DCL
F$DCB.DCT$ IN PROCEDURE TOP$MME_WRDUMP
     15432**DCL
F$DCB.DDEV IN PROCEDURE TOP$MME_WRDUMP
     15415**DCL
F$DCB.DDEV.CP# IN PROCEDURE TOP$MME_WRDUMP
     15415**DCL
F$DCB.DDEV.GR# IN PROCEDURE TOP$MME_WRDUMP
     15416**DCL
F$DCB.DDEV.IC# IN PROCEDURE TOP$MME_WRDUMP
     15415**DCL
F$DCB.DDEV.LP# IN PROCEDURE TOP$MME_WRDUMP
     15415**DCL
F$DCB.DDEV.UCOUT# IN PROCEDURE TOP$MME_WRDUMP
     15416**DCL
F$DCB.DDEV.XEQ# IN PROCEDURE TOP$MME_WRDUMP
     15416**DCL
F$DCB.DECRYPT IN PROCEDURE TOP$MME_WRDUMP
     15450**DCL
F$DCB.DENSITY# IN PROCEDURE TOP$MME_WRDUMP
     15430**DCL
F$DCB.DESC IN PROCEDURE TOP$MME_WRDUMP
     15416**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:841  
F$DCB.DESC.ACTIVE# IN PROCEDURE TOP$MME_WRDUMP
     15418**DCL
F$DCB.DESC.ARCHIVE# IN PROCEDURE TOP$MME_WRDUMP
     15417**DCL
F$DCB.DESC.BAD# IN PROCEDURE TOP$MME_WRDUMP
     15417**DCL
F$DCB.DESC.BUF# IN PROCEDURE TOP$MME_WRDUMP
     15417**DCL
F$DCB.DESC.BUPM# IN PROCEDURE TOP$MME_WRDUMP
     15417**DCL
F$DCB.DESC.DELF# IN PROCEDURE TOP$MME_WRDUMP
     15416**DCL
F$DCB.DESC.FETCH# IN PROCEDURE TOP$MME_WRDUMP
     15418**DCL
F$DCB.DESC.NBUF# IN PROCEDURE TOP$MME_WRDUMP
     15417**DCL
F$DCB.DESC.NOLIST# IN PROCEDURE TOP$MME_WRDUMP
     15417**DCL
F$DCB.DESC.ODSTOW# IN PROCEDURE TOP$MME_WRDUMP
     15417**DCL
F$DCB.DESC.QS# IN PROCEDURE TOP$MME_WRDUMP
     15417**DCL
F$DCB.DESC.TERMINATE# IN PROCEDURE TOP$MME_WRDUMP
     15418**DCL
F$DCB.DESC.TPB# IN PROCEDURE TOP$MME_WRDUMP
     15418**DCL
F$DCB.DEVADR IN PROCEDURE TOP$MME_WRDUMP
     15432**DCL
F$DCB.DEVADR.CHAN# IN PROCEDURE TOP$MME_WRDUMP
     15433**DCL
F$DCB.DEVADR.DVN# IN PROCEDURE TOP$MME_WRDUMP
     15433**DCL
F$DCB.DEVADR.IOM# IN PROCEDURE TOP$MME_WRDUMP
     15433**DCL
F$DCB.DISP# IN PROCEDURE TOP$MME_WRDUMP
     15424**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:842  
F$DCB.DQH$ IN PROCEDURE TOP$MME_WRDUMP
     15431**DCL
F$DCB.DVBYTE IN PROCEDURE TOP$MME_WRDUMP
     15412**DCL
F$DCB.DVBYTE.BIN# IN PROCEDURE TOP$MME_WRDUMP
     15412**DCL
F$DCB.DVBYTE.TOP# IN PROCEDURE TOP$MME_WRDUMP
     15412**DCL
F$DCB.DVBYTE.TRANS# IN PROCEDURE TOP$MME_WRDUMP
     15412**DCL
F$DCB.DVBYTE.VFC# IN PROCEDURE TOP$MME_WRDUMP
     15412**DCL
F$DCB.DVFC# IN PROCEDURE TOP$MME_WRDUMP
     15431**DCL
F$DCB.DVTYPE# IN PROCEDURE TOP$MME_WRDUMP
     15424**DCL
F$DCB.EBCDIC# IN PROCEDURE TOP$MME_WRDUMP
     15422**DCL
F$DCB.ENQF IN PROCEDURE TOP$MME_WRDUMP
     15442**DCL
F$DCB.EOMVAL# IN PROCEDURE TOP$MME_WRDUMP
     15413**DCL
F$DCB.EOMVAL#.VALUE# IN PROCEDURE TOP$MME_WRDUMP
     15414**DCL
F$DCB.EOMVAL#.VFLG# IN PROCEDURE TOP$MME_WRDUMP
     15413**DCL
F$DCB.EOP IN PROCEDURE TOP$MME_WRDUMP
     15439**DCL
F$DCB.EVENT IN PROCEDURE TOP$MME_WRDUMP
     15434**DCL
F$DCB.EXIST# IN PROCEDURE TOP$MME_WRDUMP
     15423**DCL
F$DCB.EXPIRE# IN PROCEDURE TOP$MME_WRDUMP
     15426**DCL
F$DCB.FCI# IN PROCEDURE TOP$MME_WRDUMP
     15422**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:843  
F$DCB.FCN IN PROCEDURE TOP$MME_WRDUMP
     15448**DCL
F$DCB.FCN.CNT IN PROCEDURE TOP$MME_WRDUMP
     15448**DCL
F$DCB.FCN.F IN PROCEDURE TOP$MME_WRDUMP
     15448**DCL
F$DCB.FDCM IN PROCEDURE TOP$MME_WRDUMP
     15447**DCL
F$DCB.FEPIO IN PROCEDURE TOP$MME_WRDUMP
     15454**DCL
F$DCB.FEPIO.BPP IN PROCEDURE TOP$MME_WRDUMP
     15454**DCL
F$DCB.FEPIO.BUFX IN PROCEDURE TOP$MME_WRDUMP
     15454**DCL
F$DCB.FEPIO.EVENT IN PROCEDURE TOP$MME_WRDUMP
     15454**DCL
F$DCB.FEPIO.KEYX IN PROCEDURE TOP$MME_WRDUMP
     15454**DCL
F$DCB.FEPIO.KPP IN PROCEDURE TOP$MME_WRDUMP
     15454**DCL
F$DCB.FEPIO2 IN PROCEDURE TOP$MME_WRDUMP
     15456**DCL
F$DCB.FEPIO3 IN PROCEDURE TOP$MME_WRDUMP
     15456**DCL
F$DCB.FEPSIZ IN PROCEDURE TOP$MME_WRDUMP
     15453**DCL
F$DCB.FEPSIZ.BUF IN PROCEDURE TOP$MME_WRDUMP
     15453**DCL
F$DCB.FEPSIZ.KEY IN PROCEDURE TOP$MME_WRDUMP
     15453**DCL
F$DCB.FEXT IN PROCEDURE TOP$MME_WRDUMP
     15439**DCL
F$DCB.FEXTX IN PROCEDURE TOP$MME_WRDUMP
     15426**DCL
F$DCB.FFLG IN PROCEDURE TOP$MME_WRDUMP
     15414**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:844  
F$DCB.FFLG.AU# IN PROCEDURE TOP$MME_WRDUMP
     15415**DCL
F$DCB.FFLG.AURD# IN PROCEDURE TOP$MME_WRDUMP
     15415**DCL
F$DCB.FFLG.CREATE# IN PROCEDURE TOP$MME_WRDUMP
     15415**DCL
F$DCB.FFLG.DELF# IN PROCEDURE TOP$MME_WRDUMP
     15414**DCL
F$DCB.FFLG.DELR# IN PROCEDURE TOP$MME_WRDUMP
     15414**DCL
F$DCB.FFLG.EXEC# IN PROCEDURE TOP$MME_WRDUMP
     15415**DCL
F$DCB.FFLG.NOLIST# IN PROCEDURE TOP$MME_WRDUMP
     15414**DCL
F$DCB.FFLG.READ# IN PROCEDURE TOP$MME_WRDUMP
     15414**DCL
F$DCB.FFLG.REATTR# IN PROCEDURE TOP$MME_WRDUMP
     15414**DCL
F$DCB.FFLG.TCTL# IN PROCEDURE TOP$MME_WRDUMP
     15415**DCL
F$DCB.FFLG.UPD# IN PROCEDURE TOP$MME_WRDUMP
     15414**DCL
F$DCB.FFLG.WNEW# IN PROCEDURE TOP$MME_WRDUMP
     15414**DCL
F$DCB.FIELDX IN PROCEDURE TOP$MME_WRDUMP
     15434**DCL
F$DCB.FLPW# IN PROCEDURE TOP$MME_WRDUMP
     15409**DCL
F$DCB.FMOD IN PROCEDURE TOP$MME_WRDUMP
     15439**DCL
F$DCB.FPRGX IN PROCEDURE TOP$MME_WRDUMP
     15434**DCL
F$DCB.FPSTR IN PROCEDURE TOP$MME_WRDUMP
     15449**DCL
F$DCB.FTAM IN PROCEDURE TOP$MME_WRDUMP
     15443**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:845  
F$DCB.FTAM.CTX IN PROCEDURE TOP$MME_WRDUMP
     15444**DCL
F$DCB.FTAM.PMME IN PROCEDURE TOP$MME_WRDUMP
     15444**DCL
F$DCB.FTAM.USR IN PROCEDURE TOP$MME_WRDUMP
     15444**DCL
F$DCB.FUN# IN PROCEDURE TOP$MME_WRDUMP
     15424**DCL
F$DCB.GDISP IN PROCEDURE TOP$MME_WRDUMP
     15450**DCL
F$DCB.GHSTACS# IN PROCEDURE TOP$MME_WRDUMP
     15433**DCL
F$DCB.GRPOS IN PROCEDURE TOP$MME_WRDUMP
     15442**DCL
F$DCB.GTYP IN PROCEDURE TOP$MME_WRDUMP
     15439**DCL
F$DCB.HASH IN PROCEDURE TOP$MME_WRDUMP
     15447**DCL
F$DCB.IASN IN PROCEDURE TOP$MME_WRDUMP
     15452**DCL
F$DCB.ID IN PROCEDURE TOP$MME_WRDUMP
     15453**DCL
F$DCB.ID.DA IN PROCEDURE TOP$MME_WRDUMP
     15453**DCL
F$DCB.ID.GX IN PROCEDURE TOP$MME_WRDUMP
     15453**DCL
F$DCB.IFMT IN PROCEDURE TOP$MME_WRDUMP
     15451**DCL
F$DCB.IGNOREFSN# IN PROCEDURE TOP$MME_WRDUMP
     15421**DCL
F$DCB.INDX IN PROCEDURE TOP$MME_WRDUMP
     15448**DCL
F$DCB.IOERROK# IN PROCEDURE TOP$MME_WRDUMP
     15421**DCL
F$DCB.IORG IN PROCEDURE TOP$MME_WRDUMP
     15446**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:846  
F$DCB.IRRECX IN PROCEDURE TOP$MME_WRDUMP
     15438**DCL
F$DCB.IWL IN PROCEDURE TOP$MME_WRDUMP
     15451**DCL
F$DCB.IWL.HDRIWL IN PROCEDURE TOP$MME_WRDUMP
     15451**DCL
F$DCB.IWL.SEQIWL IN PROCEDURE TOP$MME_WRDUMP
     15451**DCL
F$DCB.IWL.TABIWL IN PROCEDURE TOP$MME_WRDUMP
     15451**DCL
F$DCB.JRNLBYPASS# IN PROCEDURE TOP$MME_WRDUMP
     15433**DCL
F$DCB.KEYL# IN PROCEDURE TOP$MME_WRDUMP
     15426**DCL
F$DCB.KEYTYPE# IN PROCEDURE TOP$MME_WRDUMP
     15435**DCL
F$DCB.KEYX# IN PROCEDURE TOP$MME_WRDUMP
     15426**DCL
F$DCB.KFIELDX IN PROCEDURE TOP$MME_WRDUMP
     15435**DCL
F$DCB.LASTKEY IN PROCEDURE TOP$MME_WRDUMP
     15443**DCL
F$DCB.LASTKEY$ IN PROCEDURE TOP$MME_WRDUMP
     15443**DCL
F$DCB.LDCTX IN PROCEDURE TOP$MME_WRDUMP
     15432**DCL
F$DCB.LDFLG IN PROCEDURE TOP$MME_WRDUMP
     15441**DCL
F$DCB.LINES# IN PROCEDURE TOP$MME_WRDUMP
     15431**DCL
F$DCB.LOAD# IN PROCEDURE TOP$MME_WRDUMP
     15421**DCL
F$DCB.LOGSEC IN PROCEDURE TOP$MME_WRDUMP
     15450**DCL
F$DCB.LPOOL IN PROCEDURE TOP$MME_WRDUMP
     15444**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:847  
F$DCB.LRDL0# IN PROCEDURE TOP$MME_WRDUMP
     15427**DCL
F$DCB.LSLIDE# IN PROCEDURE TOP$MME_WRDUMP
     15427**DCL
F$DCB.LSTAOR# IN PROCEDURE TOP$MME_WRDUMP
     15421**DCL
F$DCB.LSTBLK IN PROCEDURE TOP$MME_WRDUMP
     15443**DCL
F$DCB.MAXVOL# IN PROCEDURE TOP$MME_WRDUMP
     15430**DCL
F$DCB.MEDIA IN PROCEDURE TOP$MME_WRDUMP
     15451**DCL
F$DCB.MODCNT IN PROCEDURE TOP$MME_WRDUMP
     15449**DCL
F$DCB.MOUNT IN PROCEDURE TOP$MME_WRDUMP
     15441**DCL
F$DCB.MOVED IN PROCEDURE TOP$MME_WRDUMP
     15452**DCL
F$DCB.MPC$ IN PROCEDURE TOP$MME_WRDUMP
     15432**DCL
F$DCB.MUST_CVOL IN PROCEDURE TOP$MME_WRDUMP
     15440**DCL
F$DCB.NAME# IN PROCEDURE TOP$MME_WRDUMP
     15419**DCL
F$DCB.NAME#.C17 IN PROCEDURE TOP$MME_WRDUMP
     15419**DCL
F$DCB.NAME#.C17.CC IN PROCEDURE TOP$MME_WRDUMP
     15419**DCL
F$DCB.NAME#.L IN PROCEDURE TOP$MME_WRDUMP
     15419**DCL
F$DCB.NEW_FSECT IN PROCEDURE TOP$MME_WRDUMP
     15441**DCL
F$DCB.OLDIOERR IN PROCEDURE TOP$MME_WRDUMP
     15450**DCL
F$DCB.OWNER IN PROCEDURE TOP$MME_WRDUMP
     15441**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:848  
F$DCB.PASS# IN PROCEDURE TOP$MME_WRDUMP
     15419**DCL
F$DCB.PASSF# IN PROCEDURE TOP$MME_WRDUMP
     15422**DCL
F$DCB.PATH IN PROCEDURE TOP$MME_WRDUMP
     15438**DCL
F$DCB.PATH.CHAN# IN PROCEDURE TOP$MME_WRDUMP
     15438**DCL
F$DCB.PATH.IOM# IN PROCEDURE TOP$MME_WRDUMP
     15438**DCL
F$DCB.PGINGRAN IN PROCEDURE TOP$MME_WRDUMP
     15450**DCL
F$DCB.PRIVOPN IN PROCEDURE TOP$MME_WRDUMP
     15450**DCL
F$DCB.PSN# IN PROCEDURE TOP$MME_WRDUMP
     15419**DCL
F$DCB.QISS# IN PROCEDURE TOP$MME_WRDUMP
     15421**DCL
F$DCB.RA IN PROCEDURE TOP$MME_WRDUMP
     15442**DCL
F$DCB.RDL0# IN PROCEDURE TOP$MME_WRDUMP
     15413**DCL
F$DCB.REALSPAN IN PROCEDURE TOP$MME_WRDUMP
     15450**DCL
F$DCB.RECL# IN PROCEDURE TOP$MME_WRDUMP
     15425**DCL
F$DCB.RESNT IN PROCEDURE TOP$MME_WRDUMP
     15420**DCL
F$DCB.RESNT.NUM IN PROCEDURE TOP$MME_WRDUMP
     15420**DCL
F$DCB.RESNT.TYP IN PROCEDURE TOP$MME_WRDUMP
     15420**DCL
F$DCB.RETRYCNT# IN PROCEDURE TOP$MME_WRDUMP
     15416**DCL
F$DCB.RPOS IN PROCEDURE TOP$MME_WRDUMP
     15442**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:849  
F$DCB.SEED# IN PROCEDURE TOP$MME_WRDUMP
     15439**DCL
F$DCB.SEGX IN PROCEDURE TOP$MME_WRDUMP
     15449**DCL
F$DCB.SEQ# IN PROCEDURE TOP$MME_WRDUMP
     15431**DCL
F$DCB.SEQCOL# IN PROCEDURE TOP$MME_WRDUMP
     15431**DCL
F$DCB.SEQID# IN PROCEDURE TOP$MME_WRDUMP
     15431**DCL
F$DCB.SETSTA$ IN PROCEDURE TOP$MME_WRDUMP
     15418**DCL
F$DCB.SEZ_OK IN PROCEDURE TOP$MME_WRDUMP
     15440**DCL
F$DCB.SHARE# IN PROCEDURE TOP$MME_WRDUMP
     15423**DCL
F$DCB.SHARED IN PROCEDURE TOP$MME_WRDUMP
     15439**DCL
F$DCB.SLIDE# IN PROCEDURE TOP$MME_WRDUMP
     15413**DCL
F$DCB.SPAN IN PROCEDURE TOP$MME_WRDUMP
     15441**DCL
F$DCB.SPANNED# IN PROCEDURE TOP$MME_WRDUMP
     15423**DCL
F$DCB.SPARE# IN PROCEDURE TOP$MME_WRDUMP
     15427**DCL
F$DCB.STARF IN PROCEDURE TOP$MME_WRDUMP
     15439**DCL
F$DCB.STARTX IN PROCEDURE TOP$MME_WRDUMP
     15435**DCL
F$DCB.STARX IN PROCEDURE TOP$MME_WRDUMP
     15442**DCL
F$DCB.STR# IN PROCEDURE TOP$MME_WRDUMP
     15449**DCL
F$DCB.SYSID# IN PROCEDURE TOP$MME_WRDUMP
     15426**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:850  
F$DCB.TAPTYP IN PROCEDURE TOP$MME_WRDUMP
     15445**DCL
F$DCB.TAPTYP.CP6F IN PROCEDURE TOP$MME_WRDUMP
     15445**DCL
F$DCB.TAPTYP.HAVLASTKEY IN PROCEDURE TOP$MME_WRDUMP
     15445**DCL
F$DCB.TAPTYP.MANAGED IN PROCEDURE TOP$MME_WRDUMP
     15446**DCL
F$DCB.TAPTYP.NOCVOL IN PROCEDURE TOP$MME_WRDUMP
     15446**DCL
F$DCB.TAPTYP.PASTFM IN PROCEDURE TOP$MME_WRDUMP
     15446**DCL
F$DCB.TAPTYP.RWASC IN PROCEDURE TOP$MME_WRDUMP
     15445**DCL
F$DCB.TAPTYP.USRBUF IN PROCEDURE TOP$MME_WRDUMP
     15445**DCL
F$DCB.TDALVL IN PROCEDURE TOP$MME_WRDUMP
     15444**DCL
F$DCB.TDEXTST$ IN PROCEDURE TOP$MME_WRDUMP
     15418**DCL
F$DCB.TDFLG IN PROCEDURE TOP$MME_WRDUMP
     15429**DCL
F$DCB.TDFLG.SDSK# IN PROCEDURE TOP$MME_WRDUMP
     15429**DCL
F$DCB.TDSTAT# IN PROCEDURE TOP$MME_WRDUMP
     15420**DCL
F$DCB.TRNC IN PROCEDURE TOP$MME_WRDUMP
     15442**DCL
F$DCB.TYC IN PROCEDURE TOP$MME_WRDUMP
     15409**DCL
F$DCB.TYC.BLNKTP# IN PROCEDURE TOP$MME_WRDUMP
     15409**DCL
F$DCB.TYC.BOF# IN PROCEDURE TOP$MME_WRDUMP
     15409**DCL
F$DCB.TYC.BOT# IN PROCEDURE TOP$MME_WRDUMP
     15409**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:851  
F$DCB.TYC.CDALRT# IN PROCEDURE TOP$MME_WRDUMP
     15411**DCL
F$DCB.TYC.CGCRCW IN PROCEDURE TOP$MME_WRDUMP
     15412**DCL
F$DCB.TYC.CGCWRV IN PROCEDURE TOP$MME_WRDUMP
     15412**DCL
F$DCB.TYC.CGFULL IN PROCEDURE TOP$MME_WRDUMP
     15411**DCL
F$DCB.TYC.CGKEYV IN PROCEDURE TOP$MME_WRDUMP
     15411**DCL
F$DCB.TYC.CGLWRV IN PROCEDURE TOP$MME_WRDUMP
     15411**DCL
F$DCB.TYC.DACT# IN PROCEDURE TOP$MME_WRDUMP
     15410**DCL
F$DCB.TYC.DI# IN PROCEDURE TOP$MME_WRDUMP
     15410**DCL
F$DCB.TYC.EGV# IN PROCEDURE TOP$MME_WRDUMP
     15409**DCL
F$DCB.TYC.EOD# IN PROCEDURE TOP$MME_WRDUMP
     15410**DCL
F$DCB.TYC.EOF# IN PROCEDURE TOP$MME_WRDUMP
     15410**DCL
F$DCB.TYC.EOT# IN PROCEDURE TOP$MME_WRDUMP
     15409**DCL
F$DCB.TYC.FRAW# IN PROCEDURE TOP$MME_WRDUMP
     15411**DCL
F$DCB.TYC.IOERR# IN PROCEDURE TOP$MME_WRDUMP
     15410**DCL
F$DCB.TYC.LAST# IN PROCEDURE TOP$MME_WRDUMP
     15411**DCL
F$DCB.TYC.LD# IN PROCEDURE TOP$MME_WRDUMP
     15410**DCL
F$DCB.TYC.LDISC# IN PROCEDURE TOP$MME_WRDUMP
     15410**DCL
F$DCB.TYC.MTRAP# IN PROCEDURE TOP$MME_WRDUMP
     15410**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:852  
F$DCB.TYC.OPER# IN PROCEDURE TOP$MME_WRDUMP
     15409**DCL
F$DCB.TYC.PROT# IN PROCEDURE TOP$MME_WRDUMP
     15411**DCL
F$DCB.TYC.TIMO# IN PROCEDURE TOP$MME_WRDUMP
     15411**DCL
F$DCB.TYC.XTRARD IN PROCEDURE TOP$MME_WRDUMP
     15411**DCL
F$DCB.TYPE# IN PROCEDURE TOP$MME_WRDUMP
     15420**DCL
F$DCB.UB$ IN PROCEDURE TOP$MME_WRDUMP
     15448**DCL
F$DCB.UBYTES IN PROCEDURE TOP$MME_WRDUMP
     15448**DCL
F$DCB.UCOUT IN PROCEDURE TOP$MME_WRDUMP
     15445**DCL
F$DCB.UNIQUEBLD IN PROCEDURE TOP$MME_WRDUMP
     15452**DCL
F$DCB.UOPT# IN PROCEDURE TOP$MME_WRDUMP
     15422**DCL
F$DCB.UPDCNT IN PROCEDURE TOP$MME_WRDUMP
     15452**DCL
F$DCB.VFCCHAR# IN PROCEDURE TOP$MME_WRDUMP
     15434**DCL
F$DCB.VOL# IN PROCEDURE TOP$MME_WRDUMP
     15430**DCL
F$DCB.VOLACCESS# IN PROCEDURE TOP$MME_WRDUMP
     15422**DCL
F$DCB.WAIT IN PROCEDURE TOP$MME_WRDUMP
     15442**DCL
F$DCB.WCDATA IN PROCEDURE TOP$MME_WRDUMP
     15445**DCL
F$DCB.WIDTH# IN PROCEDURE TOP$MME_WRDUMP
     15416**DCL
F$DCB.WRCMP IN PROCEDURE TOP$MME_WRDUMP
     15445**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:853  
F$DCB.WSR# IN PROCEDURE TOP$MME_WRDUMP
     15427**DCL
F$DCB.XTEND# IN PROCEDURE TOP$MME_WRDUMP
     15423**DCL
F$DCB.XTNSIZE# IN PROCEDURE TOP$MME_WRDUMP
     15427**DCL
FICCDD
     10260**DCL
FICCDD.FLAG#
     10261**DCL
FICCDD.TEST_TYPE#
     10266**DCL
FICCDD IN PROCEDURE BUILD_SCT_FICCDD
     13577**DCL
FILE_NAME.L# IN PROCEDURE GET_DEVICE_CODE
     13460**DCL
FILE_NAME.NAME# IN PROCEDURE GET_DEVICE_CODE
     13460**DCL
FILE_OUTPUT_LINE IN PROCEDURE TOP$MME_WRDUMP
     15370**DCL
GET_POLTS_DCB.DCBNAME_ IN PROCEDURE GET_TEST_DCB
     11009**DCL
GET_POLTS_DCB.DCBNUM_ IN PROCEDURE GET_TEST_DCB
     11009**DCL
GET_POLTS_DCB.V.DCB# IN PROCEDURE GET_TEST_DCB
     11010**DCL
GET_POLTS_DCB.V.MERGE# IN PROCEDURE GET_TEST_DCB
     11010**DCL
GET_POLTS_DCB.V.TEST# IN PROCEDURE GET_TEST_DCB
     11011**DCL
GET_POLTS_DCB.V_ IN PROCEDURE GET_TEST_DCB
     11009**DCL
HEAD_KEY.DATA IN PROCEDURE GET_CHANNEL_DEVICE
     13657**DCL
HEAD_KEY.SIZE IN PROCEDURE GET_CHANNEL_DEVICE
     13656**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:854  
ICC IN PROCEDURE TOP$MME_PACMAN
     12336**DCL
ICC.ICCC.CHAN# IN PROCEDURE TOP$MME_PACMAN
     12340**DCL
IMU_KEY.DATA IN PROCEDURE GET_CHANNEL_DEVICE
     13663**DCL
IMU_KEY.SIZE IN PROCEDURE GET_CHANNEL_DEVICE
     13662**DCL
IOM_KEY.DATA IN PROCEDURE GET_CHANNEL_DEVICE
     13660**DCL
IOM_KEY.SIZE IN PROCEDURE GET_CHANNEL_DEVICE
     13659**DCL
IO_ENTRY.W0#
     10270**DCL
IO_ENTRY.W1
     10271**DCL
IO_ENTRY.W10#
     10303**DCL
IO_ENTRY.W2
     10274**DCL
IO_ENTRY.W2.SCT_ADR#
     10277**DCL
IO_ENTRY.W3#
     10279**DCL
IO_ENTRY.W4
     10280**DCL
IO_ENTRY.W6
     10287**DCL
IO_ENTRY.W6.DCW_PTR_2ND#
     10288**DCL
IO_ENTRY.W7
     10290**DCL
IO_ENTRY.W7.PRESELECT_INDEX#
     10292**DCL
IO_ENTRY.W8
     10297**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:855  
IO_ENTRY.W9
     10300**DCL
IO_ENTRY IN PROCEDURE GET_SCT_ADR
     14820**DCL
IO_ENTRY.W2 IN PROCEDURE GET_SCT_ADR
     14822**DCL
LIST_ITEM IN PROCEDURE RELEASE_CHANNELS
     12555**DCL
LIST_ITEM.E.BASE_CHN IN PROCEDURE RELEASE_CHANNELS
     12557**DCL
LIST_ITEM.E.FLAGS IN PROCEDURE RELEASE_CHANNELS
     12559**DCL
LIST_ITEM.E.FLAGS.NO_REBOOT IN PROCEDURE RELEASE_CHANNELS
     12560**DCL
LIST_ITEM.E.NUMB_CHN IN PROCEDURE RELEASE_CHANNELS
     12558**DCL
LIST_ITEM.FENCE IN PROCEDURE RELEASE_CHANNELS
     12562**DCL
LIST_ITEM IN PROCEDURE REPORT_CHANNELS
     12471**DCL
LIST_ITEM.E.FLAGS IN PROCEDURE REPORT_CHANNELS
     12475**DCL
LIST_ITEM IN PROCEDURE SUSPEND_CHANNELS
     12419**DCL
LIST_ITEM.E.FLAGS IN PROCEDURE SUSPEND_CHANNELS
     12423**DCL
LIST_ITEM.E.FLAGS.NO_REBOOT IN PROCEDURE SUSPEND_CHANNELS
     12424**DCL
LIST_ITEM.FENCE IN PROCEDURE SUSPEND_CHANNELS
     12426**DCL
LP_OR_FID.PROMPT_ IN PROCEDURE TOP$MME_WRDUMP
     15789**DCL
LP_OR_FID.STATION_ IN PROCEDURE TOP$MME_WRDUMP
     15787**DCL
LP_OR_FID.V.DCB# IN PROCEDURE TOP$MME_WRDUMP
     15791**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:856  
LP_OR_FID.V.DVBYTE# IN PROCEDURE TOP$MME_WRDUMP
     15791**DCL
LP_OR_FID.V.DVBYTE#.BIN# IN PROCEDURE TOP$MME_WRDUMP
     15792**DCL
LP_OR_FID.V.DVBYTE#.TRANS# IN PROCEDURE TOP$MME_WRDUMP
     15792**DCL
LP_OR_FID.V.DVBYTE#.VFC# IN PROCEDURE TOP$MME_WRDUMP
     15792**DCL
LP_OR_FID.V_ IN PROCEDURE TOP$MME_WRDUMP
     15785**DCL
M$ACCT
      7294**DCL-ENT
M$ACTIVATE
      7297**DCL-ENT
M$ALIB
      7290**DCL-ENT
M$ASUSER
      7292**DCL-ENT
M$ATTACH
      7299**DCL-ENT
M$BADPP
      7317**DCL-ENT
M$CGCTL
      7298**DCL-ENT
M$CGINFO
      7298**DCL-ENT
M$CHECK
      7279**DCL-ENT
M$CHGUNIT
      7337**DCL-ENT
M$CLRSTK
      7335**DCL-ENT
M$CMDVAR
      7346**DCL-ENT
M$CNFGFILE
      9904**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:857  
M$CONFIG
      7307**DCL-ENT
M$CORRES
      7282**DCL-ENT
M$CPEXIT
      7291**DCL-ENT
M$CVM
      7315**DCL-ENT
M$CVOL
      7280**DCL-ENT
M$DCLFLD
      7307**DCL-ENT
M$DEACTIVATE
      7297**DCL-ENT
M$DELREC
      7279**DCL-ENT
M$DEQ
      7344**DCL-ENT
M$DETACH
      7299**DCL-ENT
M$DEVICE
      7281**DCL-ENT
M$DISPLAY
      7344**DCL-ENT
M$DISPRES
      7284**DCL-ENT
M$DLIB
      7290**DCL-ENT
M$DRIBBLE
      7307**DCL-ENT
M$DRTN
      7335**DCL-ENT
M$DSUSER
      7292**DCL-ENT
M$ENQ
      7343**DCL-ENT
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:858  
M$EOM
      7302**DCL-ENT
M$ERASE
      7308**DCL-ENT
M$ERR
      7289**DCL-ENT
M$ERRMSG
      7340**DCL-ENT
M$EVENT
      7332**DCL-ENT
M$EXHUME
      7341**DCL-ENT
M$EXIT
      7289**DCL-ENT
M$EXTEND
      7281**DCL-ENT
M$FDP
      7313**DCL-ENT
M$FDS
      7312**DCL-ENT
M$FEBOOT
      7305**DCL-ENT
M$FECTL
      7306**DCL-ENT
M$FEDUMP
      7305**DCL-ENT
M$FID
      7340**DCL-ENT
M$FINDPROC
      7294**DCL-ENT
M$FSUSER
      7292**DCL-ENT
M$FVP
      7314**DCL-ENT
M$FWCG
      7298**DCL-ENT
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:859  
M$GBPL
      7318**DCL-ENT
M$GDDL
      7314**DCL-ENT
M$GDP
      7313**DCL-ENT
M$GDS
      7312**DCL-ENT
M$GETMOUSE
      7323**DCL-ENT
M$GETPM
      7324**DCL-ENT
M$GJOB
      7342**DCL-ENT
M$GLINEATTR
      7302**DCL-ENT
M$GOODPP
      7317**DCL-ENT
M$GPLATEN
      7310**DCL-ENT
M$GPROMPT
      7309**DCL-ENT
M$GTRMATTR
      7303**DCL-ENT
M$GTRMCTL
      7301**DCL-ENT
M$GTRMTAB
      7304**DCL-ENT
M$GVP
      7313**DCL-ENT
M$HELP
      7340**DCL-ENT
M$INT
      7332**DCL-ENT
M$INTRTN
      7293**DCL-ENT
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:860  
M$IOQ
      7328**DCL-ENT
M$JOBSTATS
      7342**DCL-ENT
M$KEYIN
      7282**DCL-ENT
M$LDEV
      7277**DCL-ENT
M$LDTRC
      7290**DCL-ENT
M$LIMIT
      7283**DCL-ENT
M$LINES
      7282**DCL-ENT
M$LINK
      7289**DCL-ENT
M$MADMUCK
      7285**DCL-ENT
M$MAKUSER
      7316**DCL-ENT
M$MBS
      7284**DCL-ENT
M$MDFFLD
      7308**DCL-ENT
M$MERC
      7333**DCL-ENT
M$MERCS
      7334**DCL-ENT
M$MIRROR
      7328**DCL-ENT
M$MONINFO
      7345**DCL-ENT
M$MPL
      7318**DCL-ENT
M$NODEINFO
      7309**DCL-ENT
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:861  
M$NXTUSR
      7343**DCL-ENT
M$OCMSG
      7341**DCL-ENT
M$OLAY
      7289**DCL-ENT
M$PAS
      7318**DCL-ENT
M$PATHCON
      7341**DCL-ENT
M$PDS
      7312**DCL-ENT
M$PFIL
      7279**DCL-ENT
M$PLATEN
      7303**DCL-ENT
M$PRECORD
      7281**DCL-ENT
M$PROCNAME
      7294**DCL-ENT
M$PROFILE
      7305**DCL-ENT
M$RACST
      7285**DCL-ENT
M$RDSYSLOG
      7326**DCL-ENT
M$RELDCB
      7283**DCL-ENT
M$RELRES
      7284**DCL-ENT
M$RELSTARF
      7286**DCL-ENT
M$REM
      7286**DCL-ENT
M$RENV
      7333**DCL-ENT
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:862  
M$REQUIRE
      7285**DCL-ENT
M$RETRY
      7334**DCL-ENT
M$RETRYS
      7334**DCL-ENT
M$REW
      7280**DCL-ENT
M$RLSFLD
      7308**DCL-ENT
M$RPRIV
      7336**DCL-ENT
M$RSPP
      7315**DCL-ENT
M$RSWITCH
      7337**DCL-ENT
M$RUE
      7343**DCL-ENT
M$SAD
      7316**DCL-ENT
M$SAVE
      7292**DCL-ENT
M$SCON
      7293**DCL-ENT
M$SCREECH
      7291**DCL-ENT
M$SENV
      7333**DCL-ENT
M$SETFMA
      7277**DCL-ENT
M$SETFP
      7306**DCL-ENT
M$SINPUT
      7304**DCL-ENT
M$SLCFLD
      7309**DCL-ENT
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:863  
M$SMOUSE
      7323**DCL-ENT
M$SMPRT
      7315**DCL-ENT
M$SPRIV
      7336**DCL-ENT
M$SSC
      7316**DCL-ENT
M$SSWITCH
      7336**DCL-ENT
M$STATE
      7345**DCL-ENT
M$STD
      7317**DCL-ENT
M$STIMER
      7331**DCL-ENT
M$STLPP
      7314**DCL-ENT
M$STRAP
      7331**DCL-ENT
M$STRMATTR
      7303**DCL-ENT
M$STRMCTL
      7301**DCL-ENT
M$STRMTAB
      7304**DCL-ENT
M$SYMBIO
      7342**DCL-ENT
M$SYSCON
      7328**DCL-ENT
M$SYSID
      7346**DCL-ENT
M$TDREQCPU
      7327**DCL-ENT
M$TEMPWROC
      7321**DCL-ENT
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:864  
M$TRAP
      7331**DCL-ENT
M$TRMISC
      7306**DCL-ENT
M$TRMPRG
      7302**DCL-ENT
M$TRTN
      7335**DCL-ENT
M$TRUNC
      7278**DCL-ENT
M$TTIMER
      7331**DCL-ENT
M$UC
      7301**DCL
M$UMPL
      7318**DCL-ENT
M$UNFID
      7340**DCL-ENT
M$UNLATCH
      7297**DCL-ENT
M$UNSHARE
      7294**DCL-ENT
M$USRFIELD
      7337**DCL-ENT
M$VIRTUAL
      7312**DCL-ENT
M$WEOF
      7280**DCL-ENT
M$WRSYSLOG
      7326**DCL-ENT
M$XCON
      7332**DCL-ENT
M$XCONRTN
      7293**DCL-ENT
M$XEQTIME
      7345**DCL-ENT
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:865  
M$XFLUSH
      7286**DCL-ENT
M$XMOUSE
      7323**DCL-ENT
M$XXX
      7289**DCL-ENT
M$YC
      7291**DCL-ENT
MME.INST
      9862**DCL
MME.INST.OP
      9864**DCL
MME.WD_5
      9869**DCL
MME.WD_6
      9870**DCL
MME_W1 IN PROCEDURE TOP$MME_PRTRAN
     12713**DCL
MME_W2 IN PROCEDURE BUILD_SCTWRK
     16344**DCL
MPC.W0#
     10320**DCL
MPC.W1#
     10321**DCL
MPC.W2#
     10322**DCL
MPC.W3#
     10323**DCL
MPC_KEY.SIZE IN PROCEDURE MAP_MPC_DEVICE
     14021**DCL
MREG.E
      9892**DCL
MTAR_DATA IN PROCEDURE SET_MTAR_PERMISSION
     11161**DCL
NEW_ICCDD IN PROCEDURE TOP$MME_ALLOCR
     10856**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:866  
ONLY_ICC.CHAN# IN PROCEDURE TOP$MME_PACMAN
     12344**DCL
ONLY_ICC.IOM# IN PROCEDURE TOP$MME_PACMAN
     12343**DCL
OPEN_CONFIG.ACCESS_ IN PROCEDURE GET_DEVICE_CODE
     13306**DCL
OPEN_CONFIG.ACCT_ IN PROCEDURE GET_DEVICE_CODE
     13308**DCL
OPEN_CONFIG.FORM_ IN PROCEDURE GET_DEVICE_CODE
     13312**DCL
OPEN_CONFIG.FPARAM_ IN PROCEDURE GET_DEVICE_CODE
     13309**DCL
OPEN_CONFIG.FPRG_ IN PROCEDURE GET_DEVICE_CODE
     13313**DCL
OPEN_CONFIG.IFPARAM_ IN PROCEDURE GET_DEVICE_CODE
     13309**DCL
OPEN_CONFIG.INSTATTR_ IN PROCEDURE GET_DEVICE_CODE
     13308**DCL
OPEN_CONFIG.IRKEYS_ IN PROCEDURE GET_DEVICE_CODE
     13313**DCL
OPEN_CONFIG.IRREC_ IN PROCEDURE GET_DEVICE_CODE
     13312**DCL
OPEN_CONFIG.NAME_ IN PROCEDURE GET_DEVICE_CODE
     13305**DCL
OPEN_CONFIG.NODENAME_ IN PROCEDURE GET_DEVICE_CODE
     13310**DCL
OPEN_CONFIG.PASS_ IN PROCEDURE GET_DEVICE_CODE
     13306**DCL
OPEN_CONFIG.PROCATTR_ IN PROCEDURE GET_DEVICE_CODE
     13308**DCL
OPEN_CONFIG.RECFIELD_ IN PROCEDURE GET_DEVICE_CODE
     13311**DCL
OPEN_CONFIG.SETSTA_ IN PROCEDURE GET_DEVICE_CODE
     13305**DCL
OPEN_CONFIG.SN_ IN PROCEDURE GET_DEVICE_CODE
     13304**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:867  
OPEN_CONFIG.UATTR_ IN PROCEDURE GET_DEVICE_CODE
     13307**DCL
OPEN_CONFIG.V.ACS# IN PROCEDURE GET_DEVICE_CODE
     13324**DCL
OPEN_CONFIG.V.ANSISPANSEQ# IN PROCEDURE GET_DEVICE_CODE
     13337**DCL
OPEN_CONFIG.V.ASN# IN PROCEDURE GET_DEVICE_CODE
     13323**DCL
OPEN_CONFIG.V.ATTR# IN PROCEDURE GET_DEVICE_CODE
     13340**DCL
OPEN_CONFIG.V.AU# IN PROCEDURE GET_DEVICE_CODE
     13342**DCL
OPEN_CONFIG.V.BLKL# IN PROCEDURE GET_DEVICE_CODE
     13330**DCL
OPEN_CONFIG.V.BLOCKED# IN PROCEDURE GET_DEVICE_CODE
     13325**DCL
OPEN_CONFIG.V.BUPM# IN PROCEDURE GET_DEVICE_CODE
     13326**DCL
OPEN_CONFIG.V.CHAIN# IN PROCEDURE GET_DEVICE_CODE
     13339**DCL
OPEN_CONFIG.V.CNVRT# IN PROCEDURE GET_DEVICE_CODE
     13333**DCL
OPEN_CONFIG.V.COMP# IN PROCEDURE GET_DEVICE_CODE
     13325**DCL
OPEN_CONFIG.V.COPIES# IN PROCEDURE GET_DEVICE_CODE
     13345**DCL
OPEN_CONFIG.V.CTG# IN PROCEDURE GET_DEVICE_CODE
     13317**DCL
OPEN_CONFIG.V.CVOL# IN PROCEDURE GET_DEVICE_CODE
     13318**DCL
OPEN_CONFIG.V.DBGDCBNO# IN PROCEDURE GET_DEVICE_CODE
     13344**DCL
OPEN_CONFIG.V.DBGSYSID# IN PROCEDURE GET_DEVICE_CODE
     13344**DCL
OPEN_CONFIG.V.DCB# IN PROCEDURE GET_DEVICE_CODE
     13313**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:868  
OPEN_CONFIG.V.DCBCONLGL# IN PROCEDURE GET_DEVICE_CODE
     13335**DCL
OPEN_CONFIG.V.DELETE# IN PROCEDURE GET_DEVICE_CODE
     13315**DCL
OPEN_CONFIG.V.DENSITY# IN PROCEDURE GET_DEVICE_CODE
     13345**DCL
OPEN_CONFIG.V.DISP# IN PROCEDURE GET_DEVICE_CODE
     13329**DCL
OPEN_CONFIG.V.DVFC# IN PROCEDURE GET_DEVICE_CODE
     13340**DCL
OPEN_CONFIG.V.EBCDIC# IN PROCEDURE GET_DEVICE_CODE
     13333**DCL
OPEN_CONFIG.V.EVENT# IN PROCEDURE GET_DEVICE_CODE
     13343**DCL
OPEN_CONFIG.V.EXIST# IN PROCEDURE GET_DEVICE_CODE
     13317**DCL
OPEN_CONFIG.V.EXPIRE# IN PROCEDURE GET_DEVICE_CODE
     13333**DCL
OPEN_CONFIG.V.FINDPOS# IN PROCEDURE GET_DEVICE_CODE
     13319**DCL
OPEN_CONFIG.V.FUN# IN PROCEDURE GET_DEVICE_CODE
     13323**DCL
OPEN_CONFIG.V.GHSTACS# IN PROCEDURE GET_DEVICE_CODE
     13328**DCL
OPEN_CONFIG.V.IGNOREFSN# IN PROCEDURE GET_DEVICE_CODE
     13337**DCL
OPEN_CONFIG.V.INITZ IN PROCEDURE GET_DEVICE_CODE
     13314**DCL
OPEN_CONFIG.V.INITZ.REASSIGN# IN PROCEDURE GET_DEVICE_CODE
     13314**DCL
OPEN_CONFIG.V.INITZ.SCRUB# IN PROCEDURE GET_DEVICE_CODE
     13314**DCL
OPEN_CONFIG.V.IOERROK# IN PROCEDURE GET_DEVICE_CODE
     13335**DCL
OPEN_CONFIG.V.IXTNSIZE# IN PROCEDURE GET_DEVICE_CODE
     13332**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:869  
OPEN_CONFIG.V.JRNLBYPASS# IN PROCEDURE GET_DEVICE_CODE
     13327**DCL
OPEN_CONFIG.V.KEYL# IN PROCEDURE GET_DEVICE_CODE
     13329**DCL
OPEN_CONFIG.V.KEYTYPE# IN PROCEDURE GET_DEVICE_CODE
     13339**DCL
OPEN_CONFIG.V.KEYX# IN PROCEDURE GET_DEVICE_CODE
     13328**DCL
OPEN_CONFIG.V.LINES# IN PROCEDURE GET_DEVICE_CODE
     13343**DCL
OPEN_CONFIG.V.LOAD# IN PROCEDURE GET_DEVICE_CODE
     13327**DCL
OPEN_CONFIG.V.LRDL0# IN PROCEDURE GET_DEVICE_CODE
     13331**DCL
OPEN_CONFIG.V.LSLIDE# IN PROCEDURE GET_DEVICE_CODE
     13330**DCL
OPEN_CONFIG.V.LSTAOR# IN PROCEDURE GET_DEVICE_CODE
     13327**DCL
OPEN_CONFIG.V.MAXVOL# IN PROCEDURE GET_DEVICE_CODE
     13339**DCL
OPEN_CONFIG.V.NRECS# IN PROCEDURE GET_DEVICE_CODE
     13332**DCL
OPEN_CONFIG.V.OPER IN PROCEDURE GET_DEVICE_CODE
     13315**DCL
OPEN_CONFIG.V.OPER.MNTONLY# IN PROCEDURE GET_DEVICE_CODE
     13317**DCL
OPEN_CONFIG.V.OPER.NXTA# IN PROCEDURE GET_DEVICE_CODE
     13316**DCL
OPEN_CONFIG.V.OPER.NXTF# IN PROCEDURE GET_DEVICE_CODE
     13316**DCL
OPEN_CONFIG.V.OPER.TEST# IN PROCEDURE GET_DEVICE_CODE
     13315**DCL
OPEN_CONFIG.V.OPER.THISF# IN PROCEDURE GET_DEVICE_CODE
     13316**DCL
OPEN_CONFIG.V.ORG# IN PROCEDURE GET_DEVICE_CODE
     13324**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:870  
OPEN_CONFIG.V.OVERFDE# IN PROCEDURE GET_DEVICE_CODE
     13336**DCL
OPEN_CONFIG.V.QISS# IN PROCEDURE GET_DEVICE_CODE
     13342**DCL
OPEN_CONFIG.V.RECL# IN PROCEDURE GET_DEVICE_CODE
     13330**DCL
OPEN_CONFIG.V.RES# IN PROCEDURE GET_DEVICE_CODE
     13328**DCL
OPEN_CONFIG.V.SEED# IN PROCEDURE GET_DEVICE_CODE
     13346**DCL
OPEN_CONFIG.V.SEEDSPECIFIED# IN PROCEDURE GET_DEVICE_CODE
     13337**DCL
OPEN_CONFIG.V.SEQ# IN PROCEDURE GET_DEVICE_CODE
     13341**DCL
OPEN_CONFIG.V.SEQCOL# IN PROCEDURE GET_DEVICE_CODE
     13341**DCL
OPEN_CONFIG.V.SEQID# IN PROCEDURE GET_DEVICE_CODE
     13343**DCL
OPEN_CONFIG.V.SETDCB# IN PROCEDURE GET_DEVICE_CODE
     13314**DCL
OPEN_CONFIG.V.SHARE# IN PROCEDURE GET_DEVICE_CODE
     13318**DCL
OPEN_CONFIG.V.SPANNED# IN PROCEDURE GET_DEVICE_CODE
     13326**DCL
OPEN_CONFIG.V.SPARE# IN PROCEDURE GET_DEVICE_CODE
     13331**DCL
OPEN_CONFIG.V.SRCHCOND IN PROCEDURE GET_DEVICE_CODE
     13319**DCL
OPEN_CONFIG.V.SRCHCOND.ANYF# IN PROCEDURE GET_DEVICE_CODE
     13322**DCL
OPEN_CONFIG.V.SRCHCOND.ARCHIVE# IN PROCEDURE GET_DEVICE_CODE
     13321**DCL
OPEN_CONFIG.V.SRCHCOND.BAD# IN PROCEDURE GET_DEVICE_CODE
     13320**DCL
OPEN_CONFIG.V.SRCHCOND.BUF# IN PROCEDURE GET_DEVICE_CODE
     13320**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:871  
OPEN_CONFIG.V.SRCHCOND.DELF# IN PROCEDURE GET_DEVICE_CODE
     13319**DCL
OPEN_CONFIG.V.SRCHCOND.NOLIST# IN PROCEDURE GET_DEVICE_CODE
     13319**DCL
OPEN_CONFIG.V.SRCHCOND.QS# IN PROCEDURE GET_DEVICE_CODE
     13321**DCL
OPEN_CONFIG.V.SRCHCOND.REV# IN PROCEDURE GET_DEVICE_CODE
     13322**DCL
OPEN_CONFIG.V.TERMCONLGL# IN PROCEDURE GET_DEVICE_CODE
     13336**DCL
OPEN_CONFIG.V.TYPE# IN PROCEDURE GET_DEVICE_CODE
     13325**DCL
OPEN_CONFIG.V.UOPT# IN PROCEDURE GET_DEVICE_CODE
     13323**DCL
OPEN_CONFIG.V.VOL# IN PROCEDURE GET_DEVICE_CODE
     13338**DCL
OPEN_CONFIG.V.VOLACCESS# IN PROCEDURE GET_DEVICE_CODE
     13342**DCL
OPEN_CONFIG.V.XONLY# IN PROCEDURE GET_DEVICE_CODE
     13334**DCL
OPEN_CONFIG.V.XTEND# IN PROCEDURE GET_DEVICE_CODE
     13334**DCL
OPEN_CONFIG.V.XTNSIZE# IN PROCEDURE GET_DEVICE_CODE
     13332**DCL
OPEN_CONFIG.VIRTUAL_ IN PROCEDURE GET_DEVICE_CODE
     13305**DCL
OPEN_CONFIG.V_ IN PROCEDURE GET_DEVICE_CODE
     13304**DCL
OPEN_CONFIG.WINDOW_ IN PROCEDURE GET_DEVICE_CODE
     13307**DCL
OPEN_DUMP_FILE.ACCESS_ IN PROCEDURE TOP$MME_WRDUMP
     15695**DCL
OPEN_DUMP_FILE.ACCT_ IN PROCEDURE TOP$MME_WRDUMP
     15697**DCL
OPEN_DUMP_FILE.FORM_ IN PROCEDURE TOP$MME_WRDUMP
     15701**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:872  
OPEN_DUMP_FILE.FPARAM_ IN PROCEDURE TOP$MME_WRDUMP
     15698**DCL
OPEN_DUMP_FILE.FPRG_ IN PROCEDURE TOP$MME_WRDUMP
     15702**DCL
OPEN_DUMP_FILE.IFPARAM_ IN PROCEDURE TOP$MME_WRDUMP
     15698**DCL
OPEN_DUMP_FILE.INSTATTR_ IN PROCEDURE TOP$MME_WRDUMP
     15697**DCL
OPEN_DUMP_FILE.IRKEYS_ IN PROCEDURE TOP$MME_WRDUMP
     15702**DCL
OPEN_DUMP_FILE.IRREC_ IN PROCEDURE TOP$MME_WRDUMP
     15701**DCL
OPEN_DUMP_FILE.NAME_ IN PROCEDURE TOP$MME_WRDUMP
     15694**DCL
OPEN_DUMP_FILE.NODENAME_ IN PROCEDURE TOP$MME_WRDUMP
     15699**DCL
OPEN_DUMP_FILE.PASS_ IN PROCEDURE TOP$MME_WRDUMP
     15695**DCL
OPEN_DUMP_FILE.PROCATTR_ IN PROCEDURE TOP$MME_WRDUMP
     15697**DCL
OPEN_DUMP_FILE.RECFIELD_ IN PROCEDURE TOP$MME_WRDUMP
     15700**DCL
OPEN_DUMP_FILE.SETSTA_ IN PROCEDURE TOP$MME_WRDUMP
     15694**DCL
OPEN_DUMP_FILE.SN_ IN PROCEDURE TOP$MME_WRDUMP
     15693**DCL
OPEN_DUMP_FILE.UATTR_ IN PROCEDURE TOP$MME_WRDUMP
     15696**DCL
OPEN_DUMP_FILE.V.ACS# IN PROCEDURE TOP$MME_WRDUMP
     15713**DCL
OPEN_DUMP_FILE.V.ANSISPANSEQ# IN PROCEDURE TOP$MME_WRDUMP
     15726**DCL
OPEN_DUMP_FILE.V.ASN# IN PROCEDURE TOP$MME_WRDUMP
     15712**DCL
OPEN_DUMP_FILE.V.ATTR# IN PROCEDURE TOP$MME_WRDUMP
     15729**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:873  
OPEN_DUMP_FILE.V.AU# IN PROCEDURE TOP$MME_WRDUMP
     15731**DCL
OPEN_DUMP_FILE.V.BLKL# IN PROCEDURE TOP$MME_WRDUMP
     15719**DCL
OPEN_DUMP_FILE.V.BLOCKED# IN PROCEDURE TOP$MME_WRDUMP
     15714**DCL
OPEN_DUMP_FILE.V.BUPM# IN PROCEDURE TOP$MME_WRDUMP
     15715**DCL
OPEN_DUMP_FILE.V.CHAIN# IN PROCEDURE TOP$MME_WRDUMP
     15728**DCL
OPEN_DUMP_FILE.V.CNVRT# IN PROCEDURE TOP$MME_WRDUMP
     15722**DCL
OPEN_DUMP_FILE.V.COMP# IN PROCEDURE TOP$MME_WRDUMP
     15714**DCL
OPEN_DUMP_FILE.V.COPIES# IN PROCEDURE TOP$MME_WRDUMP
     15734**DCL
OPEN_DUMP_FILE.V.CTG# IN PROCEDURE TOP$MME_WRDUMP
     15706**DCL
OPEN_DUMP_FILE.V.CVOL# IN PROCEDURE TOP$MME_WRDUMP
     15707**DCL
OPEN_DUMP_FILE.V.DBGDCBNO# IN PROCEDURE TOP$MME_WRDUMP
     15733**DCL
OPEN_DUMP_FILE.V.DBGSYSID# IN PROCEDURE TOP$MME_WRDUMP
     15733**DCL
OPEN_DUMP_FILE.V.DCB# IN PROCEDURE TOP$MME_WRDUMP
     15702**DCL
OPEN_DUMP_FILE.V.DCBCONLGL# IN PROCEDURE TOP$MME_WRDUMP
     15724**DCL
OPEN_DUMP_FILE.V.DELETE# IN PROCEDURE TOP$MME_WRDUMP
     15704**DCL
OPEN_DUMP_FILE.V.DENSITY# IN PROCEDURE TOP$MME_WRDUMP
     15734**DCL
OPEN_DUMP_FILE.V.DISP# IN PROCEDURE TOP$MME_WRDUMP
     15718**DCL
OPEN_DUMP_FILE.V.DVFC# IN PROCEDURE TOP$MME_WRDUMP
     15729**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:874  
OPEN_DUMP_FILE.V.EBCDIC# IN PROCEDURE TOP$MME_WRDUMP
     15722**DCL
OPEN_DUMP_FILE.V.EVENT# IN PROCEDURE TOP$MME_WRDUMP
     15732**DCL
OPEN_DUMP_FILE.V.EXIST# IN PROCEDURE TOP$MME_WRDUMP
     15706**DCL
OPEN_DUMP_FILE.V.EXPIRE# IN PROCEDURE TOP$MME_WRDUMP
     15722**DCL
OPEN_DUMP_FILE.V.FINDPOS# IN PROCEDURE TOP$MME_WRDUMP
     15708**DCL
OPEN_DUMP_FILE.V.FUN# IN PROCEDURE TOP$MME_WRDUMP
     15712**DCL
OPEN_DUMP_FILE.V.GHSTACS# IN PROCEDURE TOP$MME_WRDUMP
     15717**DCL
OPEN_DUMP_FILE.V.IGNOREFSN# IN PROCEDURE TOP$MME_WRDUMP
     15726**DCL
OPEN_DUMP_FILE.V.INITZ IN PROCEDURE TOP$MME_WRDUMP
     15703**DCL
OPEN_DUMP_FILE.V.INITZ.REASSIGN# IN PROCEDURE TOP$MME_WRDUMP
     15703**DCL
OPEN_DUMP_FILE.V.INITZ.SCRUB# IN PROCEDURE TOP$MME_WRDUMP
     15703**DCL
OPEN_DUMP_FILE.V.IOERROK# IN PROCEDURE TOP$MME_WRDUMP
     15724**DCL
OPEN_DUMP_FILE.V.IXTNSIZE# IN PROCEDURE TOP$MME_WRDUMP
     15721**DCL
OPEN_DUMP_FILE.V.JRNLBYPASS# IN PROCEDURE TOP$MME_WRDUMP
     15716**DCL
OPEN_DUMP_FILE.V.KEYL# IN PROCEDURE TOP$MME_WRDUMP
     15718**DCL
OPEN_DUMP_FILE.V.KEYTYPE# IN PROCEDURE TOP$MME_WRDUMP
     15728**DCL
OPEN_DUMP_FILE.V.KEYX# IN PROCEDURE TOP$MME_WRDUMP
     15717**DCL
OPEN_DUMP_FILE.V.LINES# IN PROCEDURE TOP$MME_WRDUMP
     15732**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:875  
OPEN_DUMP_FILE.V.LOAD# IN PROCEDURE TOP$MME_WRDUMP
     15716**DCL
OPEN_DUMP_FILE.V.LRDL0# IN PROCEDURE TOP$MME_WRDUMP
     15720**DCL
OPEN_DUMP_FILE.V.LSLIDE# IN PROCEDURE TOP$MME_WRDUMP
     15719**DCL
OPEN_DUMP_FILE.V.LSTAOR# IN PROCEDURE TOP$MME_WRDUMP
     15716**DCL
OPEN_DUMP_FILE.V.MAXVOL# IN PROCEDURE TOP$MME_WRDUMP
     15728**DCL
OPEN_DUMP_FILE.V.NRECS# IN PROCEDURE TOP$MME_WRDUMP
     15721**DCL
OPEN_DUMP_FILE.V.OPER IN PROCEDURE TOP$MME_WRDUMP
     15704**DCL
OPEN_DUMP_FILE.V.OPER.MNTONLY# IN PROCEDURE TOP$MME_WRDUMP
     15706**DCL
OPEN_DUMP_FILE.V.OPER.NXTA# IN PROCEDURE TOP$MME_WRDUMP
     15705**DCL
OPEN_DUMP_FILE.V.OPER.NXTF# IN PROCEDURE TOP$MME_WRDUMP
     15705**DCL
OPEN_DUMP_FILE.V.OPER.TEST# IN PROCEDURE TOP$MME_WRDUMP
     15704**DCL
OPEN_DUMP_FILE.V.OPER.THISF# IN PROCEDURE TOP$MME_WRDUMP
     15705**DCL
OPEN_DUMP_FILE.V.ORG# IN PROCEDURE TOP$MME_WRDUMP
     15713**DCL
OPEN_DUMP_FILE.V.OVERFDE# IN PROCEDURE TOP$MME_WRDUMP
     15725**DCL
OPEN_DUMP_FILE.V.QISS# IN PROCEDURE TOP$MME_WRDUMP
     15731**DCL
OPEN_DUMP_FILE.V.RECL# IN PROCEDURE TOP$MME_WRDUMP
     15719**DCL
OPEN_DUMP_FILE.V.RES# IN PROCEDURE TOP$MME_WRDUMP
     15717**DCL
OPEN_DUMP_FILE.V.SEED# IN PROCEDURE TOP$MME_WRDUMP
     15735**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:876  
OPEN_DUMP_FILE.V.SEEDSPECIFIED# IN PROCEDURE TOP$MME_WRDUMP
     15726**DCL
OPEN_DUMP_FILE.V.SEQ# IN PROCEDURE TOP$MME_WRDUMP
     15730**DCL
OPEN_DUMP_FILE.V.SEQCOL# IN PROCEDURE TOP$MME_WRDUMP
     15730**DCL
OPEN_DUMP_FILE.V.SEQID# IN PROCEDURE TOP$MME_WRDUMP
     15732**DCL
OPEN_DUMP_FILE.V.SETDCB# IN PROCEDURE TOP$MME_WRDUMP
     15703**DCL
OPEN_DUMP_FILE.V.SHARE# IN PROCEDURE TOP$MME_WRDUMP
     15707**DCL
OPEN_DUMP_FILE.V.SPANNED# IN PROCEDURE TOP$MME_WRDUMP
     15715**DCL
OPEN_DUMP_FILE.V.SPARE# IN PROCEDURE TOP$MME_WRDUMP
     15720**DCL
OPEN_DUMP_FILE.V.SRCHCOND IN PROCEDURE TOP$MME_WRDUMP
     15708**DCL
OPEN_DUMP_FILE.V.SRCHCOND.ANYF# IN PROCEDURE TOP$MME_WRDUMP
     15711**DCL
OPEN_DUMP_FILE.V.SRCHCOND.ARCHIVE# IN PROCEDURE TOP$MME_WRDUMP
     15710**DCL
OPEN_DUMP_FILE.V.SRCHCOND.BAD# IN PROCEDURE TOP$MME_WRDUMP
     15709**DCL
OPEN_DUMP_FILE.V.SRCHCOND.BUF# IN PROCEDURE TOP$MME_WRDUMP
     15709**DCL
OPEN_DUMP_FILE.V.SRCHCOND.DELF# IN PROCEDURE TOP$MME_WRDUMP
     15708**DCL
OPEN_DUMP_FILE.V.SRCHCOND.NOLIST# IN PROCEDURE TOP$MME_WRDUMP
     15708**DCL
OPEN_DUMP_FILE.V.SRCHCOND.QS# IN PROCEDURE TOP$MME_WRDUMP
     15710**DCL
OPEN_DUMP_FILE.V.SRCHCOND.REV# IN PROCEDURE TOP$MME_WRDUMP
     15711**DCL
OPEN_DUMP_FILE.V.TERMCONLGL# IN PROCEDURE TOP$MME_WRDUMP
     15725**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:877  
OPEN_DUMP_FILE.V.TYPE# IN PROCEDURE TOP$MME_WRDUMP
     15714**DCL
OPEN_DUMP_FILE.V.UOPT# IN PROCEDURE TOP$MME_WRDUMP
     15712**DCL
OPEN_DUMP_FILE.V.VOL# IN PROCEDURE TOP$MME_WRDUMP
     15727**DCL
OPEN_DUMP_FILE.V.VOLACCESS# IN PROCEDURE TOP$MME_WRDUMP
     15731**DCL
OPEN_DUMP_FILE.V.XONLY# IN PROCEDURE TOP$MME_WRDUMP
     15723**DCL
OPEN_DUMP_FILE.V.XTEND# IN PROCEDURE TOP$MME_WRDUMP
     15723**DCL
OPEN_DUMP_FILE.V.XTNSIZE# IN PROCEDURE TOP$MME_WRDUMP
     15721**DCL
OPEN_DUMP_FILE.VIRTUAL_ IN PROCEDURE TOP$MME_WRDUMP
     15694**DCL
OPEN_DUMP_FILE.V_ IN PROCEDURE TOP$MME_WRDUMP
     15693**DCL
OPEN_DUMP_FILE.WINDOW_ IN PROCEDURE TOP$MME_WRDUMP
     15696**DCL
OPEN_LP.ACCESS_ IN PROCEDURE TOP$MME_WRDUMP
     15577**DCL
OPEN_LP.ACCT_ IN PROCEDURE TOP$MME_WRDUMP
     15579**DCL
OPEN_LP.FORM_ IN PROCEDURE TOP$MME_WRDUMP
     15583**DCL
OPEN_LP.FPARAM_ IN PROCEDURE TOP$MME_WRDUMP
     15580**DCL
OPEN_LP.FPRG_ IN PROCEDURE TOP$MME_WRDUMP
     15584**DCL
OPEN_LP.IFPARAM_ IN PROCEDURE TOP$MME_WRDUMP
     15580**DCL
OPEN_LP.INSTATTR_ IN PROCEDURE TOP$MME_WRDUMP
     15579**DCL
OPEN_LP.IRKEYS_ IN PROCEDURE TOP$MME_WRDUMP
     15584**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:878  
OPEN_LP.IRREC_ IN PROCEDURE TOP$MME_WRDUMP
     15583**DCL
OPEN_LP.NAME_ IN PROCEDURE TOP$MME_WRDUMP
     15576**DCL
OPEN_LP.NODENAME_ IN PROCEDURE TOP$MME_WRDUMP
     15581**DCL
OPEN_LP.PASS_ IN PROCEDURE TOP$MME_WRDUMP
     15577**DCL
OPEN_LP.PROCATTR_ IN PROCEDURE TOP$MME_WRDUMP
     15579**DCL
OPEN_LP.RECFIELD_ IN PROCEDURE TOP$MME_WRDUMP
     15582**DCL
OPEN_LP.SETSTA_ IN PROCEDURE TOP$MME_WRDUMP
     15576**DCL
OPEN_LP.SN_ IN PROCEDURE TOP$MME_WRDUMP
     15575**DCL
OPEN_LP.UATTR_ IN PROCEDURE TOP$MME_WRDUMP
     15578**DCL
OPEN_LP.V.ACS# IN PROCEDURE TOP$MME_WRDUMP
     15595**DCL
OPEN_LP.V.ANSISPANSEQ# IN PROCEDURE TOP$MME_WRDUMP
     15608**DCL
OPEN_LP.V.ASN# IN PROCEDURE TOP$MME_WRDUMP
     15594**DCL
OPEN_LP.V.ATTR# IN PROCEDURE TOP$MME_WRDUMP
     15611**DCL
OPEN_LP.V.AU# IN PROCEDURE TOP$MME_WRDUMP
     15613**DCL
OPEN_LP.V.BLKL# IN PROCEDURE TOP$MME_WRDUMP
     15601**DCL
OPEN_LP.V.BLOCKED# IN PROCEDURE TOP$MME_WRDUMP
     15596**DCL
OPEN_LP.V.BUPM# IN PROCEDURE TOP$MME_WRDUMP
     15597**DCL
OPEN_LP.V.CHAIN# IN PROCEDURE TOP$MME_WRDUMP
     15610**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:879  
OPEN_LP.V.CNVRT# IN PROCEDURE TOP$MME_WRDUMP
     15604**DCL
OPEN_LP.V.COMP# IN PROCEDURE TOP$MME_WRDUMP
     15596**DCL
OPEN_LP.V.COPIES# IN PROCEDURE TOP$MME_WRDUMP
     15616**DCL
OPEN_LP.V.CTG# IN PROCEDURE TOP$MME_WRDUMP
     15588**DCL
OPEN_LP.V.CVOL# IN PROCEDURE TOP$MME_WRDUMP
     15589**DCL
OPEN_LP.V.DBGDCBNO# IN PROCEDURE TOP$MME_WRDUMP
     15615**DCL
OPEN_LP.V.DBGSYSID# IN PROCEDURE TOP$MME_WRDUMP
     15615**DCL
OPEN_LP.V.DCB# IN PROCEDURE TOP$MME_WRDUMP
     15584**DCL
OPEN_LP.V.DCBCONLGL# IN PROCEDURE TOP$MME_WRDUMP
     15606**DCL
OPEN_LP.V.DELETE# IN PROCEDURE TOP$MME_WRDUMP
     15586**DCL
OPEN_LP.V.DENSITY# IN PROCEDURE TOP$MME_WRDUMP
     15616**DCL
OPEN_LP.V.DISP# IN PROCEDURE TOP$MME_WRDUMP
     15600**DCL
OPEN_LP.V.DVFC# IN PROCEDURE TOP$MME_WRDUMP
     15611**DCL
OPEN_LP.V.EBCDIC# IN PROCEDURE TOP$MME_WRDUMP
     15604**DCL
OPEN_LP.V.EVENT# IN PROCEDURE TOP$MME_WRDUMP
     15614**DCL
OPEN_LP.V.EXIST# IN PROCEDURE TOP$MME_WRDUMP
     15588**DCL
OPEN_LP.V.EXPIRE# IN PROCEDURE TOP$MME_WRDUMP
     15604**DCL
OPEN_LP.V.FINDPOS# IN PROCEDURE TOP$MME_WRDUMP
     15590**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:880  
OPEN_LP.V.FUN# IN PROCEDURE TOP$MME_WRDUMP
     15594**DCL
OPEN_LP.V.GHSTACS# IN PROCEDURE TOP$MME_WRDUMP
     15599**DCL
OPEN_LP.V.IGNOREFSN# IN PROCEDURE TOP$MME_WRDUMP
     15608**DCL
OPEN_LP.V.INITZ IN PROCEDURE TOP$MME_WRDUMP
     15585**DCL
OPEN_LP.V.INITZ.REASSIGN# IN PROCEDURE TOP$MME_WRDUMP
     15585**DCL
OPEN_LP.V.INITZ.SCRUB# IN PROCEDURE TOP$MME_WRDUMP
     15585**DCL
OPEN_LP.V.IOERROK# IN PROCEDURE TOP$MME_WRDUMP
     15606**DCL
OPEN_LP.V.IXTNSIZE# IN PROCEDURE TOP$MME_WRDUMP
     15603**DCL
OPEN_LP.V.JRNLBYPASS# IN PROCEDURE TOP$MME_WRDUMP
     15598**DCL
OPEN_LP.V.KEYL# IN PROCEDURE TOP$MME_WRDUMP
     15600**DCL
OPEN_LP.V.KEYTYPE# IN PROCEDURE TOP$MME_WRDUMP
     15610**DCL
OPEN_LP.V.KEYX# IN PROCEDURE TOP$MME_WRDUMP
     15599**DCL
OPEN_LP.V.LINES# IN PROCEDURE TOP$MME_WRDUMP
     15614**DCL
OPEN_LP.V.LOAD# IN PROCEDURE TOP$MME_WRDUMP
     15598**DCL
OPEN_LP.V.LRDL0# IN PROCEDURE TOP$MME_WRDUMP
     15602**DCL
OPEN_LP.V.LSLIDE# IN PROCEDURE TOP$MME_WRDUMP
     15601**DCL
OPEN_LP.V.LSTAOR# IN PROCEDURE TOP$MME_WRDUMP
     15598**DCL
OPEN_LP.V.MAXVOL# IN PROCEDURE TOP$MME_WRDUMP
     15610**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:881  
OPEN_LP.V.NRECS# IN PROCEDURE TOP$MME_WRDUMP
     15603**DCL
OPEN_LP.V.OPER IN PROCEDURE TOP$MME_WRDUMP
     15586**DCL
OPEN_LP.V.OPER.MNTONLY# IN PROCEDURE TOP$MME_WRDUMP
     15588**DCL
OPEN_LP.V.OPER.NXTA# IN PROCEDURE TOP$MME_WRDUMP
     15587**DCL
OPEN_LP.V.OPER.NXTF# IN PROCEDURE TOP$MME_WRDUMP
     15587**DCL
OPEN_LP.V.OPER.TEST# IN PROCEDURE TOP$MME_WRDUMP
     15586**DCL
OPEN_LP.V.OPER.THISF# IN PROCEDURE TOP$MME_WRDUMP
     15587**DCL
OPEN_LP.V.ORG# IN PROCEDURE TOP$MME_WRDUMP
     15595**DCL
OPEN_LP.V.OVERFDE# IN PROCEDURE TOP$MME_WRDUMP
     15607**DCL
OPEN_LP.V.QISS# IN PROCEDURE TOP$MME_WRDUMP
     15613**DCL
OPEN_LP.V.RECL# IN PROCEDURE TOP$MME_WRDUMP
     15601**DCL
OPEN_LP.V.RES# IN PROCEDURE TOP$MME_WRDUMP
     15599**DCL
OPEN_LP.V.SEED# IN PROCEDURE TOP$MME_WRDUMP
     15617**DCL
OPEN_LP.V.SEEDSPECIFIED# IN PROCEDURE TOP$MME_WRDUMP
     15608**DCL
OPEN_LP.V.SEQ# IN PROCEDURE TOP$MME_WRDUMP
     15612**DCL
OPEN_LP.V.SEQCOL# IN PROCEDURE TOP$MME_WRDUMP
     15612**DCL
OPEN_LP.V.SEQID# IN PROCEDURE TOP$MME_WRDUMP
     15614**DCL
OPEN_LP.V.SETDCB# IN PROCEDURE TOP$MME_WRDUMP
     15585**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:882  
OPEN_LP.V.SHARE# IN PROCEDURE TOP$MME_WRDUMP
     15589**DCL
OPEN_LP.V.SPANNED# IN PROCEDURE TOP$MME_WRDUMP
     15597**DCL
OPEN_LP.V.SPARE# IN PROCEDURE TOP$MME_WRDUMP
     15602**DCL
OPEN_LP.V.SRCHCOND IN PROCEDURE TOP$MME_WRDUMP
     15590**DCL
OPEN_LP.V.SRCHCOND.ANYF# IN PROCEDURE TOP$MME_WRDUMP
     15593**DCL
OPEN_LP.V.SRCHCOND.ARCHIVE# IN PROCEDURE TOP$MME_WRDUMP
     15592**DCL
OPEN_LP.V.SRCHCOND.BAD# IN PROCEDURE TOP$MME_WRDUMP
     15591**DCL
OPEN_LP.V.SRCHCOND.BUF# IN PROCEDURE TOP$MME_WRDUMP
     15591**DCL
OPEN_LP.V.SRCHCOND.DELF# IN PROCEDURE TOP$MME_WRDUMP
     15590**DCL
OPEN_LP.V.SRCHCOND.NOLIST# IN PROCEDURE TOP$MME_WRDUMP
     15590**DCL
OPEN_LP.V.SRCHCOND.QS# IN PROCEDURE TOP$MME_WRDUMP
     15592**DCL
OPEN_LP.V.SRCHCOND.REV# IN PROCEDURE TOP$MME_WRDUMP
     15593**DCL
OPEN_LP.V.TERMCONLGL# IN PROCEDURE TOP$MME_WRDUMP
     15607**DCL
OPEN_LP.V.TYPE# IN PROCEDURE TOP$MME_WRDUMP
     15596**DCL
OPEN_LP.V.UOPT# IN PROCEDURE TOP$MME_WRDUMP
     15594**DCL
OPEN_LP.V.VOL# IN PROCEDURE TOP$MME_WRDUMP
     15609**DCL
OPEN_LP.V.VOLACCESS# IN PROCEDURE TOP$MME_WRDUMP
     15613**DCL
OPEN_LP.V.XONLY# IN PROCEDURE TOP$MME_WRDUMP
     15605**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:883  
OPEN_LP.V.XTEND# IN PROCEDURE TOP$MME_WRDUMP
     15605**DCL
OPEN_LP.V.XTNSIZE# IN PROCEDURE TOP$MME_WRDUMP
     15603**DCL
OPEN_LP.VIRTUAL_ IN PROCEDURE TOP$MME_WRDUMP
     15576**DCL
OPEN_LP.V_ IN PROCEDURE TOP$MME_WRDUMP
     15575**DCL
OPEN_LP.WINDOW_ IN PROCEDURE TOP$MME_WRDUMP
     15578**DCL
PARAMETER_ IN PROCEDURE TOP$MME_POINIT
     12619**DCL
PARAMETER_.LOWER# IN PROCEDURE TOP$MME_POINIT
     12621**DCL
PARAMETER_BYTE IN PROCEDURE TOP$MME_POINIT
     12622**DCL
POINIT IN PROCEDURE TOP$MME_POINIT
     12629**DCL
POINIT.CRACF0# IN PROCEDURE TOP$MME_POINIT
     12647**DCL
POINIT.CVTTBL_ADR# IN PROCEDURE TOP$MME_POINIT
     12641**DCL
POINIT.MINTR# IN PROCEDURE TOP$MME_POINIT
     12645**DCL
Q_REG_ IN PROCEDURE BUILD_SCTWRK
     16308**DCL
Q_REG_.TAPE_ICC IN PROCEDURE BUILD_SCTWRK
     16311**DCL
Q_REG_.TAPE_ICC.NEW_FORMAT IN PROCEDURE BUILD_SCTWRK
     16316**DCL
Q_REG_.URC_ICC IN PROCEDURE BUILD_SCTWRK
     16320**DCL
Q_REG_.URC_ICC.FORMAT# IN PROCEDURE BUILD_SCTWRK
     16321**DCL
Q_REG_.URC_ICC.NEW_FORMAT IN PROCEDURE BUILD_SCTWRK
     16325**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:884  
Q_REG_.URC_ICC.NEW_FORMAT.CHAN# IN PROCEDURE BUILD_SCTWRK
     16327**DCL
Q_REG_.URC_ICC.NEW_FORMAT.IOM# IN PROCEDURE BUILD_SCTWRK
     16326**DCL
Q_REG_.URC_ICC.OLD_FORMAT.CHAN# IN PROCEDURE BUILD_SCTWRK
     16324**DCL
Q_REG_.URC_ICC.OLD_FORMAT.IOM# IN PROCEDURE BUILD_SCTWRK
     16323**DCL
READ_CONFIG.BUF_.BOUND IN PROCEDURE GET_DEVICE_CODE
     13369**DCL
READ_CONFIG.BUF_.BUF$ IN PROCEDURE GET_DEVICE_CODE
     13370**DCL
READ_CONFIG.IDBUF_ IN PROCEDURE GET_DEVICE_CODE
     13371**DCL
READ_CONFIG.KEY_.BOUND IN PROCEDURE GET_DEVICE_CODE
     13367**DCL
READ_CONFIG.KEY_.KEY$ IN PROCEDURE GET_DEVICE_CODE
     13368**DCL
READ_CONFIG.V.DCB# IN PROCEDURE GET_DEVICE_CODE
     13371**DCL
READ_CONFIG.V.DVBYTE IN PROCEDURE GET_DEVICE_CODE
     13381**DCL
READ_CONFIG.V.DVBYTE.BIN# IN PROCEDURE GET_DEVICE_CODE
     13382**DCL
READ_CONFIG.V.DVBYTE.BP# IN PROCEDURE GET_DEVICE_CODE
     13381**DCL
READ_CONFIG.V.DVBYTE.CONT# IN PROCEDURE GET_DEVICE_CODE
     13384**DCL
READ_CONFIG.V.DVBYTE.NODAT# IN PROCEDURE GET_DEVICE_CODE
     13383**DCL
READ_CONFIG.V.DVBYTE.TOP# IN PROCEDURE GET_DEVICE_CODE
     13381**DCL
READ_CONFIG.V.DVBYTE.TRANS# IN PROCEDURE GET_DEVICE_CODE
     13383**DCL
READ_CONFIG.V.DVBYTE.VFC# IN PROCEDURE GET_DEVICE_CODE
     13382**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:885  
READ_CONFIG.V.EVENT# IN PROCEDURE GET_DEVICE_CODE
     13380**DCL
READ_CONFIG.V.FULL# IN PROCEDURE GET_DEVICE_CODE
     13373**DCL
READ_CONFIG.V.ID# IN PROCEDURE GET_DEVICE_CODE
     13372**DCL
READ_CONFIG.V.IDS# IN PROCEDURE GET_DEVICE_CODE
     13373**DCL
READ_CONFIG.V.IOERROK# IN PROCEDURE GET_DEVICE_CODE
     13374**DCL
READ_CONFIG.V.KEYCHNG# IN PROCEDURE GET_DEVICE_CODE
     13373**DCL
READ_CONFIG.V.KEYR# IN PROCEDURE GET_DEVICE_CODE
     13372**DCL
READ_CONFIG.V.KEYS# IN PROCEDURE GET_DEVICE_CODE
     13372**DCL
READ_CONFIG.V.KEYTYPE# IN PROCEDURE GET_DEVICE_CODE
     13380**DCL
READ_CONFIG.V.ODFNC# IN PROCEDURE GET_DEVICE_CODE
     13385**DCL
READ_CONFIG.V.RECNUM# IN PROCEDURE GET_DEVICE_CODE
     13385**DCL
READ_CONFIG.V.REREADPOS# IN PROCEDURE GET_DEVICE_CODE
     13386**DCL
READ_CONFIG.V.SEED# IN PROCEDURE GET_DEVICE_CODE
     13381**DCL
READ_CONFIG.V.SINPUTSIZE# IN PROCEDURE GET_DEVICE_CODE
     13385**DCL
READ_CONFIG.V.STRPVFC# IN PROCEDURE GET_DEVICE_CODE
     13384**DCL
READ_CONFIG.V.WAIT# IN PROCEDURE GET_DEVICE_CODE
     13371**DCL
READ_CONFIG.V_ IN PROCEDURE GET_DEVICE_CODE
     13367**DCL
READ_IO
      9962**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:886  
READ_IO.BUF_.BOUND
      9964**DCL
READ_IO.BUF_.BUF$
      9965**DCL
READ_IO.IDBUF_
      9966**DCL
READ_IO.KEY_
      9962**DCL
READ_IO.KEY_.BOUND
      9962**DCL
READ_IO.KEY_.KEY$
      9963**DCL
READ_IO.V
      9966**DCL
READ_IO.V.DCB#
      9966**DCL
READ_IO.V.DVBYTE
      9976**DCL
READ_IO.V.DVBYTE.BIN#
      9977**DCL
READ_IO.V.DVBYTE.BP#
      9976**DCL
READ_IO.V.DVBYTE.CONT#
      9979**DCL
READ_IO.V.DVBYTE.NODAT#
      9978**DCL
READ_IO.V.DVBYTE.TOP#
      9976**DCL
READ_IO.V.DVBYTE.TRANS#
      9978**DCL
READ_IO.V.DVBYTE.VFC#
      9977**DCL
READ_IO.V.EVENT#
      9975**DCL
READ_IO.V.FULL#
      9968**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:887  
READ_IO.V.ID#
      9967**DCL
READ_IO.V.IDS#
      9968**DCL
READ_IO.V.IOERROK#
      9969**DCL
READ_IO.V.KEYCHNG#
      9968**DCL
READ_IO.V.KEYR#
      9967**DCL
READ_IO.V.KEYS#
      9967**DCL
READ_IO.V.KEYTYPE#
      9975**DCL
READ_IO.V.ODFNC#
      9980**DCL
READ_IO.V.RECNUM#
      9980**DCL
READ_IO.V.REREADPOS#
      9981**DCL
READ_IO.V.SEED#
      9976**DCL
READ_IO.V.SINPUTSIZE#
      9980**DCL
READ_IO.V.STRPVFC#
      9979**DCL
READ_IO.V.WAIT#
      9966**DCL
READ_IO.V_
      9962**DCL
RELEASE_ID IN PROCEDURE TOP$MME_RELEAS
     12765**DCL
SCT.BIT12 IN PROCEDURE BOGUS_TDOPEN
     13778**DCL
SCT.BIT13 IN PROCEDURE BOGUS_TDOPEN
     13777**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:888  
SCT.BIT17 IN PROCEDURE BOGUS_TDOPEN
     13776**DCL
SCT.DEVICE_CODE IN PROCEDURE BOGUS_TDOPEN
     13771**DCL
SCT.FICCDD IN PROCEDURE BOGUS_TDOPEN
     13763**DCL
SCT.FICCDD.FLAG# IN PROCEDURE BOGUS_TDOPEN
     13764**DCL
SCT.FICCDD.FORMAT# IN PROCEDURE BOGUS_TDOPEN
     13765**DCL
SCT.FIRMWARE IN PROCEDURE BOGUS_TDOPEN
     13772**DCL
SCT.FIRMWARE.LP# IN PROCEDURE BOGUS_TDOPEN
     13774**DCL
SCT.FIRMWARE.RP# IN PROCEDURE BOGUS_TDOPEN
     13775**DCL
SCT.FIRMWARE.TYPE# IN PROCEDURE BOGUS_TDOPEN
     13773**DCL
SCT.MODEL IN PROCEDURE BOGUS_TDOPEN
     13779**DCL
SCT.MPC_MODEL IN PROCEDURE BOGUS_TDOPEN
     13780**DCL
SCT.BIT12 IN PROCEDURE BUILD_SCT_FICCDD
     13572**DCL
SCT.BIT13 IN PROCEDURE BUILD_SCT_FICCDD
     13571**DCL
SCT.BIT17 IN PROCEDURE BUILD_SCT_FICCDD
     13570**DCL
SCT.DEVICE_CODE IN PROCEDURE BUILD_SCT_FICCDD
     13565**DCL
SCT.FICCDD IN PROCEDURE BUILD_SCT_FICCDD
     13557**DCL
SCT.FIRMWARE IN PROCEDURE BUILD_SCT_FICCDD
     13566**DCL
SCT.FIRMWARE.LP# IN PROCEDURE BUILD_SCT_FICCDD
     13568**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:889  
SCT.FIRMWARE.RP# IN PROCEDURE BUILD_SCT_FICCDD
     13569**DCL
SCT.FIRMWARE.TYPE# IN PROCEDURE BUILD_SCT_FICCDD
     13567**DCL
SCT.MODEL IN PROCEDURE BUILD_SCT_FICCDD
     13573**DCL
SCT.MPC_MODEL IN PROCEDURE BUILD_SCT_FICCDD
     13574**DCL
SCT.FICCDD IN PROCEDURE BUILD_TEST_CONTROL_ENTRY
     14260**DCL
SCT.FIRMWARE IN PROCEDURE BUILD_TEST_CONTROL_ENTRY
     14269**DCL
SCT.BIT12 IN PROCEDURE GET_CHANNEL_DEVICE
     13650**DCL
SCT.BIT13 IN PROCEDURE GET_CHANNEL_DEVICE
     13649**DCL
SCT.BIT17 IN PROCEDURE GET_CHANNEL_DEVICE
     13648**DCL
SCT.DEVICE_CODE IN PROCEDURE GET_CHANNEL_DEVICE
     13643**DCL
SCT.FICCDD IN PROCEDURE GET_CHANNEL_DEVICE
     13635**DCL
SCT.FICCDD.DEVICE# IN PROCEDURE GET_CHANNEL_DEVICE
     13640**DCL
SCT.FICCDD.FLAG# IN PROCEDURE GET_CHANNEL_DEVICE
     13636**DCL
SCT.FICCDD.FORMAT# IN PROCEDURE GET_CHANNEL_DEVICE
     13637**DCL
SCT.FIRMWARE IN PROCEDURE GET_CHANNEL_DEVICE
     13644**DCL
SCT.FIRMWARE.LP# IN PROCEDURE GET_CHANNEL_DEVICE
     13646**DCL
SCT.FIRMWARE.RP# IN PROCEDURE GET_CHANNEL_DEVICE
     13647**DCL
SCT.FIRMWARE.TYPE# IN PROCEDURE GET_CHANNEL_DEVICE
     13645**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:890  
SCT.MODEL IN PROCEDURE GET_CHANNEL_DEVICE
     13651**DCL
SCT.MPC_MODEL IN PROCEDURE GET_CHANNEL_DEVICE
     13652**DCL
SCT.TEST_TYPE IN PROCEDURE GET_CHANNEL_DEVICE
     13642**DCL
SCT.BIT12 IN PROCEDURE GET_DEVICE_CODE
     13223**DCL
SCT.BIT13 IN PROCEDURE GET_DEVICE_CODE
     13222**DCL
SCT.BIT17 IN PROCEDURE GET_DEVICE_CODE
     13221**DCL
SCT.DEVICE_CODE IN PROCEDURE GET_DEVICE_CODE
     13216**DCL
SCT.FICCDD IN PROCEDURE GET_DEVICE_CODE
     13208**DCL
SCT.FICCDD.CHANNEL# IN PROCEDURE GET_DEVICE_CODE
     13212**DCL
SCT.FICCDD.DEVICE# IN PROCEDURE GET_DEVICE_CODE
     13213**DCL
SCT.FICCDD.FLAG# IN PROCEDURE GET_DEVICE_CODE
     13209**DCL
SCT.FICCDD.FORMAT# IN PROCEDURE GET_DEVICE_CODE
     13210**DCL
SCT.FICCDD.IOM# IN PROCEDURE GET_DEVICE_CODE
     13211**DCL
SCT.FIRMWARE IN PROCEDURE GET_DEVICE_CODE
     13217**DCL
SCT.FIRMWARE.LP# IN PROCEDURE GET_DEVICE_CODE
     13219**DCL
SCT.FIRMWARE.RP# IN PROCEDURE GET_DEVICE_CODE
     13220**DCL
SCT.FIRMWARE.TYPE# IN PROCEDURE GET_DEVICE_CODE
     13218**DCL
SCT.MODEL IN PROCEDURE GET_DEVICE_CODE
     13224**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:891  
SCT.MPC_MODEL IN PROCEDURE GET_DEVICE_CODE
     13225**DCL
SCT.BIT12 IN PROCEDURE GET_MODEL_ID
     13842**DCL
SCT.BIT13 IN PROCEDURE GET_MODEL_ID
     13841**DCL
SCT.BIT17 IN PROCEDURE GET_MODEL_ID
     13840**DCL
SCT.DEVICE_CODE IN PROCEDURE GET_MODEL_ID
     13835**DCL
SCT.FICCDD IN PROCEDURE GET_MODEL_ID
     13827**DCL
SCT.FICCDD.CHANNEL# IN PROCEDURE GET_MODEL_ID
     13831**DCL
SCT.FICCDD.DEVICE# IN PROCEDURE GET_MODEL_ID
     13832**DCL
SCT.FICCDD.FLAG# IN PROCEDURE GET_MODEL_ID
     13828**DCL
SCT.FICCDD.FORMAT# IN PROCEDURE GET_MODEL_ID
     13829**DCL
SCT.FICCDD.IOM# IN PROCEDURE GET_MODEL_ID
     13830**DCL
SCT.FIRMWARE IN PROCEDURE GET_MODEL_ID
     13836**DCL
SCT.FIRMWARE.LP# IN PROCEDURE GET_MODEL_ID
     13838**DCL
SCT.FIRMWARE.RP# IN PROCEDURE GET_MODEL_ID
     13839**DCL
SCT.FIRMWARE.TYPE# IN PROCEDURE GET_MODEL_ID
     13837**DCL
SCT.MPC_MODEL IN PROCEDURE GET_MODEL_ID
     13844**DCL
SCT.TEST_TYPE IN PROCEDURE GET_MODEL_ID
     13834**DCL
SCT.FICCDD IN PROCEDURE MAP_DEVICE
     14105**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:892  
SCT.FICCDD.CHANNEL# IN PROCEDURE MAP_DEVICE
     14109**DCL
SCT.FICCDD.DEVICE# IN PROCEDURE MAP_DEVICE
     14110**DCL
SCT.FICCDD.FLAG# IN PROCEDURE MAP_DEVICE
     14106**DCL
SCT.FICCDD.FORMAT# IN PROCEDURE MAP_DEVICE
     14107**DCL
SCT.FICCDD.IOM# IN PROCEDURE MAP_DEVICE
     14108**DCL
SCT.FIRMWARE IN PROCEDURE MAP_DEVICE
     14114**DCL
SCT.FIRMWARE.LP# IN PROCEDURE MAP_DEVICE
     14116**DCL
SCT.FIRMWARE.RP# IN PROCEDURE MAP_DEVICE
     14117**DCL
SCT.MPC_MODEL IN PROCEDURE MAP_DEVICE
     14122**DCL
SCT.BIT12 IN PROCEDURE MAP_MPC_DEVICE
     14014**DCL
SCT.BIT13 IN PROCEDURE MAP_MPC_DEVICE
     14013**DCL
SCT.BIT17 IN PROCEDURE MAP_MPC_DEVICE
     14012**DCL
SCT.DEVICE_CODE IN PROCEDURE MAP_MPC_DEVICE
     14007**DCL
SCT.FICCDD IN PROCEDURE MAP_MPC_DEVICE
     13999**DCL
SCT.FICCDD.DEVICE# IN PROCEDURE MAP_MPC_DEVICE
     14004**DCL
SCT.FICCDD.FLAG# IN PROCEDURE MAP_MPC_DEVICE
     14000**DCL
SCT.FICCDD.FORMAT# IN PROCEDURE MAP_MPC_DEVICE
     14001**DCL
SCT.FIRMWARE IN PROCEDURE MAP_MPC_DEVICE
     14008**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:893  
SCT.MODEL IN PROCEDURE MAP_MPC_DEVICE
     14015**DCL
SCT.DEVICE_CODE IN PROCEDURE TOP$MME_SCTCMP
     13036**DCL
SCT.FICCDD IN PROCEDURE TOP$MME_SCTCMP
     13028**DCL
SCT.FICCDD.CHANNEL# IN PROCEDURE TOP$MME_SCTCMP
     13032**DCL
SCT.FICCDD.DEVICE# IN PROCEDURE TOP$MME_SCTCMP
     13033**DCL
SCT.FICCDD.FLAG# IN PROCEDURE TOP$MME_SCTCMP
     13029**DCL
SCT.FICCDD.FORMAT# IN PROCEDURE TOP$MME_SCTCMP
     13030**DCL
SCT.FICCDD.IOM# IN PROCEDURE TOP$MME_SCTCMP
     13031**DCL
SCT.FIRMWARE IN PROCEDURE TOP$MME_SCTCMP
     13037**DCL
SCT.FIRMWARE.LP# IN PROCEDURE TOP$MME_SCTCMP
     13039**DCL
SCT.FIRMWARE.RP# IN PROCEDURE TOP$MME_SCTCMP
     13040**DCL
SCT.FIRMWARE.TYPE# IN PROCEDURE TOP$MME_SCTCMP
     13038**DCL
SCT.MODEL IN PROCEDURE TOP$MME_SCTCMP
     13044**DCL
SCT.MPC_MODEL IN PROCEDURE TOP$MME_SCTCMP
     13045**DCL
SCT.TEST_TYPE IN PROCEDURE TOP$MME_SCTCMP
     13035**DCL
SCT.BIT12 IN PROCEDURE VALIDATE_DEVICE_TYPE
     13927**DCL
SCT.BIT13 IN PROCEDURE VALIDATE_DEVICE_TYPE
     13926**DCL
SCT.BIT17 IN PROCEDURE VALIDATE_DEVICE_TYPE
     13925**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:894  
SCT.DEVICE_CODE IN PROCEDURE VALIDATE_DEVICE_TYPE
     13920**DCL
SCT.FICCDD IN PROCEDURE VALIDATE_DEVICE_TYPE
     13912**DCL
SCT.FICCDD.CHANNEL# IN PROCEDURE VALIDATE_DEVICE_TYPE
     13916**DCL
SCT.FICCDD.FLAG# IN PROCEDURE VALIDATE_DEVICE_TYPE
     13913**DCL
SCT.FICCDD.FORMAT# IN PROCEDURE VALIDATE_DEVICE_TYPE
     13914**DCL
SCT.FICCDD.IOM# IN PROCEDURE VALIDATE_DEVICE_TYPE
     13915**DCL
SCT.FIRMWARE IN PROCEDURE VALIDATE_DEVICE_TYPE
     13921**DCL
SCT.FIRMWARE.LP# IN PROCEDURE VALIDATE_DEVICE_TYPE
     13923**DCL
SCT.FIRMWARE.RP# IN PROCEDURE VALIDATE_DEVICE_TYPE
     13924**DCL
SCT.FIRMWARE.TYPE# IN PROCEDURE VALIDATE_DEVICE_TYPE
     13922**DCL
SCT.MODEL IN PROCEDURE VALIDATE_DEVICE_TYPE
     13928**DCL
SCT.MPC_MODEL IN PROCEDURE VALIDATE_DEVICE_TYPE
     13929**DCL
SCT.TEST_TYPE IN PROCEDURE VALIDATE_DEVICE_TYPE
     13919**DCL
SCTWRK.CRCST_1
     10345**DCL
SCTWRK.CRCST_3
     10351**DCL
SCTWRK.SCT_0.BIT14#
     10360**DCL
SCTWRK.SCT_0.DEV_NUMBER#
     10357**DCL
SCTWRK.SCT_1.DENSITIES#
     10368**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:895  
SCTWRK.SCT_1.MODULES#
     10366**DCL
SCTWRK.XCTLR_TYPE#
     10336**DCL
SCTWRK.XIOC_TYPE#
     10335**DCL
SCT_ IN PROCEDURE BUILD_TEST_CONTROL_ENTRY
     14280**DCL
SCT_PTR IN PROCEDURE BUILD_SCTWRK
     16339**DCL
SCT_PTR.SEGID# IN PROCEDURE BUILD_SCTWRK
     16341**DCL
STATUS.ACTION_CODE#
     10388**DCL
STATUS.ADDR_EXTENSION#
     10383**DCL
STATUS.CHARACTER_COUNT#
     10386**DCL
STATUS.IOM_CENTRAL#
     10382**DCL
STATUS.IOM_CHANNEL#
     10381**DCL
STATUS.MARKER_INTERRUPT#
     10377**DCL
STATUS.ODD_WORD_COUNT#
     10375**DCL
STATUS.POWER_OFF#
     10372**DCL
STATUS.READ_WRITE_FLAG#
     10387**DCL
STATUS.RECORD_COUNT_RESIDUE#
     10384**DCL
STATUS.WORD_COUNT_RESIDUE#
     10389**DCL
TD$DEV IN PROCEDURE GET_MODEL_ID
     13853**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:896  
TD$DEV.ATTR IN PROCEDURE GET_MODEL_ID
     13867**DCL
TD$DEV.DEVNUM IN PROCEDURE GET_MODEL_ID
     13869**DCL
TD$DEV.DEVTYPE IN PROCEDURE GET_MODEL_ID
     13868**DCL
TD$DEV.FEATURE IN PROCEDURE GET_MODEL_ID
     13855**DCL
TD$DEV.FLAGS IN PROCEDURE GET_MODEL_ID
     13862**DCL
TD$DEV.FLAGS.CHECKWRITE IN PROCEDURE GET_MODEL_ID
     13865**DCL
TD$DEV.FLAGS.DOWN IN PROCEDURE GET_MODEL_ID
     13863**DCL
TD$DEV.FLAGS.TDOK IN PROCEDURE GET_MODEL_ID
     13864**DCL
TD$DEV.IOCHAN IN PROCEDURE GET_MODEL_ID
     13857**DCL
TD$DEV.IOCHAN.CHAN IN PROCEDURE GET_MODEL_ID
     13860**DCL
TD$DEV.IOCHAN.IOM IN PROCEDURE GET_MODEL_ID
     13859**DCL
TD$DEV.MPCNAME IN PROCEDURE GET_MODEL_ID
     13856**DCL
TD$HEAD IN PROCEDURE GET_CHANNEL_DEVICE
     13667**DCL
TD$HEAD.APMPC_INDX IN PROCEDURE GET_CHANNEL_DEVICE
     13676**DCL
TD$HEAD.AP_INDX IN PROCEDURE GET_CHANNEL_DEVICE
     13696**DCL
TD$HEAD.CONSOLE_INDX IN PROCEDURE GET_CHANNEL_DEVICE
     13682**DCL
TD$HEAD.CP_INDX IN PROCEDURE GET_CHANNEL_DEVICE
     13688**DCL
TD$HEAD.CR_INDX IN PROCEDURE GET_CHANNEL_DEVICE
     13686**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:897  
TD$HEAD.DEVNAME IN PROCEDURE GET_CHANNEL_DEVICE
     13700**DCL
TD$HEAD.DISKMPC_INDX IN PROCEDURE GET_CHANNEL_DEVICE
     13674**DCL
TD$HEAD.DP_INDX IN PROCEDURE GET_CHANNEL_DEVICE
     13690**DCL
TD$HEAD.FEP_INDX IN PROCEDURE GET_CHANNEL_DEVICE
     13680**DCL
TD$HEAD.IOM_INDX IN PROCEDURE GET_CHANNEL_DEVICE
     13668**DCL
TD$HEAD.LP_INDX IN PROCEDURE GET_CHANNEL_DEVICE
     13684**DCL
TD$HEAD.MT_INDX IN PROCEDURE GET_CHANNEL_DEVICE
     13692**DCL
TD$HEAD.NUMAPMPCS IN PROCEDURE GET_CHANNEL_DEVICE
     13677**DCL
TD$HEAD.NUMAPS IN PROCEDURE GET_CHANNEL_DEVICE
     13697**DCL
TD$HEAD.NUMCONSOLES IN PROCEDURE GET_CHANNEL_DEVICE
     13683**DCL
TD$HEAD.NUMCPS IN PROCEDURE GET_CHANNEL_DEVICE
     13689**DCL
TD$HEAD.NUMCRS IN PROCEDURE GET_CHANNEL_DEVICE
     13687**DCL
TD$HEAD.NUMDISKMPCS IN PROCEDURE GET_CHANNEL_DEVICE
     13675**DCL
TD$HEAD.NUMDPS IN PROCEDURE GET_CHANNEL_DEVICE
     13691**DCL
TD$HEAD.NUMFEPS IN PROCEDURE GET_CHANNEL_DEVICE
     13681**DCL
TD$HEAD.NUMLPS IN PROCEDURE GET_CHANNEL_DEVICE
     13685**DCL
TD$HEAD.NUMMTS IN PROCEDURE GET_CHANNEL_DEVICE
     13693**DCL
TD$HEAD.NUMODS IN PROCEDURE GET_CHANNEL_DEVICE
     13699**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:898  
TD$HEAD.NUMOPCS IN PROCEDURE GET_CHANNEL_DEVICE
     13679**DCL
TD$HEAD.NUMTAPEMPCS IN PROCEDURE GET_CHANNEL_DEVICE
     13673**DCL
TD$HEAD.NUMUNITMPCS IN PROCEDURE GET_CHANNEL_DEVICE
     13671**DCL
TD$HEAD.NUMXXS IN PROCEDURE GET_CHANNEL_DEVICE
     13695**DCL
TD$HEAD.OD_INDX IN PROCEDURE GET_CHANNEL_DEVICE
     13698**DCL
TD$HEAD.OPC_INDX IN PROCEDURE GET_CHANNEL_DEVICE
     13678**DCL
TD$HEAD.TAPEMPC_INDX IN PROCEDURE GET_CHANNEL_DEVICE
     13672**DCL
TD$HEAD.UNITMPC_INDX IN PROCEDURE GET_CHANNEL_DEVICE
     13670**DCL
TD$HEAD.XX_INDX IN PROCEDURE GET_CHANNEL_DEVICE
     13694**DCL
TD$IOM IN PROCEDURE GET_CHANNEL_DEVICE
     13703**DCL
TD$IOM.FLAGS IN PROCEDURE GET_CHANNEL_DEVICE
     13705**DCL
TD$IOM.FLAGS.DOWN IN PROCEDURE GET_CHANNEL_DEVICE
     13706**DCL
TD$IOM.FLAGS.TDOK IN PROCEDURE GET_CHANNEL_DEVICE
     13707**DCL
TD$IOM.PORT# IN PROCEDURE GET_CHANNEL_DEVICE
     13708**DCL
TD$MPC IN PROCEDURE MAP_MPC_DEVICE
     14026**DCL
TD$MPC.DEVNAME IN PROCEDURE MAP_MPC_DEVICE
     14045**DCL
TD$MPC.FLAGS IN PROCEDURE MAP_MPC_DEVICE
     14035**DCL
TD$MPC.FLAGS.DOWN IN PROCEDURE MAP_MPC_DEVICE
     14036**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:899  
TD$MPC.FLAGS.TDOK IN PROCEDURE MAP_MPC_DEVICE
     14037**DCL
TD$MPC.FWREV IN PROCEDURE MAP_MPC_DEVICE
     14042**DCL
TD$MPC.FWREV.LETTER IN PROCEDURE MAP_MPC_DEVICE
     14043**DCL
TD$MPC.FWREV.SUBREV IN PROCEDURE MAP_MPC_DEVICE
     14044**DCL
TD$MPC.IOCHAN IN PROCEDURE MAP_MPC_DEVICE
     14028**DCL
TD$MPC.IOCHAN.HICHAN IN PROCEDURE MAP_MPC_DEVICE
     14033**DCL
TD$MPC.NUMDEVS IN PROCEDURE MAP_MPC_DEVICE
     14034**DCL
TDCLOSE_FPT.V_
     10452**DCL
TDIO_FPT.V.ALTPATH.CHAN#
     10468**DCL
TDIO_FPT.V.ALTPATH.IOM#
     10468**DCL
TDIO_FPT.V_
     10466**DCL
TDOPEN_FPT.V.DEVICE
     10485**DCL
TDOPEN_FPT.V_
     10483**DCL
TDOPEN_FPT.WINDOW_
     10484**DCL
TIME_FPT.DATE_ IN PROCEDURE SET_RETURN_VALUES
     15263**DCL
TIME_FPT.DATE_.BOUND IN PROCEDURE SET_RETURN_VALUES
     15263**DCL
TIME_FPT.DATE_.DATE$ IN PROCEDURE SET_RETURN_VALUES
     15264**DCL
TIME_FPT.DAY_ IN PROCEDURE SET_RETURN_VALUES
     15266**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:900  
TIME_FPT.TIME_ IN PROCEDURE SET_RETURN_VALUES
     15265**DCL
TIME_FPT.TIME_.BOUND IN PROCEDURE SET_RETURN_VALUES
     15265**DCL
TIME_FPT.TIME_.TIME$ IN PROCEDURE SET_RETURN_VALUES
     15266**DCL
TIME_FPT.TSTAMP_ IN PROCEDURE SET_RETURN_VALUES
     15266**DCL
TIME_FPT.V.DEST# IN PROCEDURE SET_RETURN_VALUES
     15267**DCL
TIME_FPT.V.DEST_BASIS# IN PROCEDURE SET_RETURN_VALUES
     15268**DCL
TIME_FPT.V.SOURCE# IN PROCEDURE SET_RETURN_VALUES
     15267**DCL
TIME_FPT.V.SOURCE_BASIS# IN PROCEDURE SET_RETURN_VALUES
     15268**DCL
TIME_FPT.V_ IN PROCEDURE SET_RETURN_VALUES
     15263**DCL
TOP$POLTS
        56**PROC
TOP$POLTS_IO
     10661**ENTRY
TOP$SCT
      9985**DCL
TOP$SCT.CN.WD0#
      9987**DCL
TOP$SCT.CN.WD1#
      9988**DCL
TOP$SCT.CN.WD2#
      9989**DCL
TOP$SCT.CN.WD3#
      9990**DCL
TOP$SCT.DV.WD2#
      9994**DCL
TOP$SCT.DV.WD3#
      9995**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:901  
TOP$TCP.ADR
     10064**DCL
TOP$TCP.BFR
     10113**DCL
TOP$TCP.FIRMWARE
     10095**DCL
TOP$TCP.FIRMWARE.CHOICE_MADE
     10096**DCL
TOP$TCP.ICC
     10052**DCL
TOP$TCP.ICCDD
     10049**DCL
TOP$TCP.IO
     10073**DCL
TOP$TCP.SCT
     10086**DCL
TOP$TCP.STATS
     10104**DCL
TOP$TCP.STATS.GECALL_NAME
     10111**DCL
TOP$TCP.STATS.MAX_LOAD
     10107**DCL
TOP_ERROR_CODE.FCG
     10421**DCL
TOP_ERROR_CODE.MID
     10434**DCL
TOP_ERROR_CODE.MON
     10434**DCL
TOP_ERROR_CODE.SEV
     10435**DCL
TOT$DMC
     10009**DCL
TOT$DMC.TOM$ITRTBL
     10020**DCL
TOT$DMC.TOM$ITRTBL.PTR$
     10023**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:902  
TOT$DMC.TOM$SEGTBLS
     10025**DCL
TOT$DMC.TOM$SEGTBLS.PTR$
     10028**DCL
TOT$DMC.TOO$IO_BUFFER
     10010**DCL
TOT$DMC.TOO$IO_BUFFER.PTR$
     10013**DCL
TOT$DMC.TOP$TCP
     10015**DCL
TOT$ECP
     10128**DCL
TOT$ECP.BREAK_ALLOWED
     10161**DCL
TOT$ECP.BREAK_RECEIVED
     10163**DCL
TOT$ECP.DYNAMIC_PAGE_COUNT
     10146**DCL
TOT$ECP.IO
     10132**DCL
TOT$ECP.IO.TYPE
     10133**DCL
TOT$ECP.ISC
     10137**DCL
TOT$ECP.ISC.GERELC_WAIT
     10142**DCL
TOT$ECP.ISC.READ_OUT
     10138**DCL
TOT$ECP.ISC.READ_PENDING
     10144**DCL
TOT$ECP.ISC.WRITE_OUT
     10140**DCL
TOT$ECP.SUBEXEC
     10148**DCL
TOT$ECP.SUBEXEC.WRAPUP_TRIED
     10155**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:903  
TOT$ECP.TEST_REQ_
     10131**DCL
TOT$TOLTS
     10177**DCL
TOT$TOLTS.DECKFILE
     10185**DCL
TOT$TOLTS.DECKFILE.FID
     10187**DCL
TOT$TOLTS.DECKFILE.LGTH
     10186**DCL
TOT$TOLTS.LINK_DATE
     10178**DCL
TOT$TOLTS.LINK_DATE.ASCII
     10179**DCL
TOT$TOLTS.LINK_TIME
     10181**DCL
TOT$TOLTS.LINK_VERSION
     10182**DCL
TOT$TOLTS.LINK_VERSION.LGTH
     10183**DCL
TOT$TOLTS.LINK_VERSION.TEXT
     10184**DCL
WD_2.SCTWRK_ADDR# IN PROCEDURE TOP$MME_ALLOCR
     10844**DCL
WRITE_DUMP.BUF_.BOUND IN PROCEDURE TOP$MME_WRDUMP
     15845**DCL
WRITE_DUMP.BUF_.BUF$ IN PROCEDURE TOP$MME_WRDUMP
     15847**DCL
WRITE_DUMP.IDBUF_ IN PROCEDURE TOP$MME_WRDUMP
     15847**DCL
WRITE_DUMP.KEY_ IN PROCEDURE TOP$MME_WRDUMP
     15845**DCL
WRITE_DUMP.V.DCB# IN PROCEDURE TOP$MME_WRDUMP
     15848**DCL
WRITE_DUMP.V.DVBYTE IN PROCEDURE TOP$MME_WRDUMP
     15853**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:904  
WRITE_DUMP.V.DVBYTE.BIN# IN PROCEDURE TOP$MME_WRDUMP
     15854**DCL
WRITE_DUMP.V.DVBYTE.BP# IN PROCEDURE TOP$MME_WRDUMP
     15854**DCL
WRITE_DUMP.V.DVBYTE.CONT# IN PROCEDURE TOP$MME_WRDUMP
     15856**DCL
WRITE_DUMP.V.DVBYTE.NODAT# IN PROCEDURE TOP$MME_WRDUMP
     15855**DCL
WRITE_DUMP.V.DVBYTE.REREAD# IN PROCEDURE TOP$MME_WRDUMP
     15854**DCL
WRITE_DUMP.V.DVBYTE.RRR# IN PROCEDURE TOP$MME_WRDUMP
     15855**DCL
WRITE_DUMP.V.DVBYTE.TOP# IN PROCEDURE TOP$MME_WRDUMP
     15853**DCL
WRITE_DUMP.V.DVBYTE.TRANS# IN PROCEDURE TOP$MME_WRDUMP
     15855**DCL
WRITE_DUMP.V.EVENT# IN PROCEDURE TOP$MME_WRDUMP
     15853**DCL
WRITE_DUMP.V.FULL# IN PROCEDURE TOP$MME_WRDUMP
     15850**DCL
WRITE_DUMP.V.ID# IN PROCEDURE TOP$MME_WRDUMP
     15849**DCL
WRITE_DUMP.V.IOERROK# IN PROCEDURE TOP$MME_WRDUMP
     15852**DCL
WRITE_DUMP.V.KEYTYPE# IN PROCEDURE TOP$MME_WRDUMP
     15852**DCL
WRITE_DUMP.V.NEWKEY# IN PROCEDURE TOP$MME_WRDUMP
     15851**DCL
WRITE_DUMP.V.NOTIME# IN PROCEDURE TOP$MME_WRDUMP
     15851**DCL
WRITE_DUMP.V.ODFNC# IN PROCEDURE TOP$MME_WRDUMP
     15857**DCL
WRITE_DUMP.V.ONEWKEY# IN PROCEDURE TOP$MME_WRDUMP
     15850**DCL
WRITE_DUMP.V.REWRITE# IN PROCEDURE TOP$MME_WRDUMP
     15851**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:905  
WRITE_DUMP.V.SEED# IN PROCEDURE TOP$MME_WRDUMP
     15853**DCL
WRITE_DUMP.V.WAIT# IN PROCEDURE TOP$MME_WRDUMP
     15848**DCL
WRITE_DUMP.V_ IN PROCEDURE TOP$MME_WRDUMP
     15845**DCL
WRITE_HDR_LINE.BUF_.BOUND IN PROCEDURE TOP$MME_WRDUMP
     15813**DCL
WRITE_HDR_LINE.BUF_.BUF$ IN PROCEDURE TOP$MME_WRDUMP
     15815**DCL
WRITE_HDR_LINE.IDBUF_ IN PROCEDURE TOP$MME_WRDUMP
     15815**DCL
WRITE_HDR_LINE.KEY_ IN PROCEDURE TOP$MME_WRDUMP
     15813**DCL
WRITE_HDR_LINE.V.DCB# IN PROCEDURE TOP$MME_WRDUMP
     15816**DCL
WRITE_HDR_LINE.V.DVBYTE IN PROCEDURE TOP$MME_WRDUMP
     15821**DCL
WRITE_HDR_LINE.V.DVBYTE.BIN# IN PROCEDURE TOP$MME_WRDUMP
     15822**DCL
WRITE_HDR_LINE.V.DVBYTE.BP# IN PROCEDURE TOP$MME_WRDUMP
     15822**DCL
WRITE_HDR_LINE.V.DVBYTE.CONT# IN PROCEDURE TOP$MME_WRDUMP
     15824**DCL
WRITE_HDR_LINE.V.DVBYTE.NODAT# IN PROCEDURE TOP$MME_WRDUMP
     15823**DCL
WRITE_HDR_LINE.V.DVBYTE.REREAD# IN PROCEDURE TOP$MME_WRDUMP
     15822**DCL
WRITE_HDR_LINE.V.DVBYTE.RRR# IN PROCEDURE TOP$MME_WRDUMP
     15823**DCL
WRITE_HDR_LINE.V.DVBYTE.TOP# IN PROCEDURE TOP$MME_WRDUMP
     15821**DCL
WRITE_HDR_LINE.V.DVBYTE.TRANS# IN PROCEDURE TOP$MME_WRDUMP
     15823**DCL
WRITE_HDR_LINE.V.EVENT# IN PROCEDURE TOP$MME_WRDUMP
     15821**DCL
PL6.E3A0      #001=TOP$POLTS File=TOP$POLTS.:E05TSI                              WED 07/30/97 06:30 Page:906  
WRITE_HDR_LINE.V.FULL# IN PROCEDURE TOP$MME_WRDUMP
     15818**DCL
WRITE_HDR_LINE.V.ID# IN PROCEDURE TOP$MME_WRDUMP
     15817**DCL
WRITE_HDR_LINE.V.IOERROK# IN PROCEDURE TOP$MME_WRDUMP
     15820**DCL
WRITE_HDR_LINE.V.KEYTYPE# IN PROCEDURE TOP$MME_WRDUMP
     15820**DCL
WRITE_HDR_LINE.V.NEWKEY# IN PROCEDURE TOP$MME_WRDUMP
     15819**DCL
WRITE_HDR_LINE.V.NOTIME# IN PROCEDURE TOP$MME_WRDUMP
     15819**DCL
WRITE_HDR_LINE.V.ODFNC# IN PROCEDURE TOP$MME_WRDUMP
     15825**DCL
WRITE_HDR_LINE.V.ONEWKEY# IN PROCEDURE TOP$MME_WRDUMP
     15818**DCL
WRITE_HDR_LINE.V.REWRITE# IN PROCEDURE TOP$MME_WRDUMP
     15819**DCL
WRITE_HDR_LINE.V.SEED# IN PROCEDURE TOP$MME_WRDUMP
     15821**DCL
WRITE_HDR_LINE.V.WAIT# IN PROCEDURE TOP$MME_WRDUMP
     15816**DCL
WRITE_HDR_LINE.V_ IN PROCEDURE TOP$MME_WRDUMP
     15813**DCL
X1 IN PROCEDURE TOP$MME_IPCWDT
     12143**DCL
X1.NEW_ICC IN PROCEDURE TOP$MME_IPCWDT
     12149**DCL
X1 IN PROCEDURE TOP$MME_LPWDT
     12257**DCL
X1.NEW_ICC IN PROCEDURE TOP$MME_LPWDT
     12263**DCL
