

14:52 JUL 28 '97 KP_SUBS.:E05SI                                            1    
    1      /*M*     KP_SUBS   All the piglet subs */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7      /*F*     NAME:     KP_SUBS
    8               PURPOSE:  All the PIGETTE Subs
    9      */
   10      %MACRO BANNER(TEXT= );
   11      %EJECT;

14:52 JUL 28 '97 KP_SUBS.:E05SI                                            2    
   12      %CHARTEXT('/*')*********************************************************
   13      *                  TEXT
   14      *********************************************************%CHARTEXT('*/')
   15      %MEND;
   16      %MACRO PAGE(TEXT= );
   17      %LSET LISTDIR='0'B;
   18      %LSET LISTMAC='1'B;
   19      %LSET LISTSUB='1'B;
   20      %LSET LISTEXP='1'B;
   21      %BANNER (TEXT=TEXT);
   22      %MEND;
   23      %MACRO HEADING(TEXT= );
   24      %LSET LISTDIR='0'B;
   25      %LSET LISTMAC='1'B;
   26      %LSET LISTSUB='1'B;
   27      %LSET LISTEXP='1'B;
   28      %SPACE 3;
   29      %BANNER (TEXT=TEXT);
   30      %MEND;
   31      /**/
   32      /* KPI$IO_SVC op codes */
   33      /**/
   34      %EQU KP_IO_OPEN#         = 0 ;
   35      %EQU KP_DO_WRITE#        = 1 ;
   36      %EQU KP_LL_WRITE#        = 2 ;
   37      %EQU KP_LO_WRITE#        = 3 ;
   38      %EQU KP_SI_READ#         = 4 ;
   39      %EQU KP_STMNT_OPEN#      = 5 ;
   40      %EQU KP_STMNT_READ#      = 6 ;
   41      %EQU KP_STMNT_CLOSE#     = 7 ;
   42      %EQU KP_FECG_OPEN#       = 8 ;
   43      %EQU KP_FECG_READ#       = 9 ;
   44      %EQU KP_FECG_WRITE#      = 10 ;
   45      %EQU KP_FECG_CLOSE#      = 12 ;
   46      /* (UNUSED)              = 11 */
   47      %EQU KP_RU_OPEN#         = 13 ;
   48      %EQU KP_RU_KEYED_READ#   = 14 ;
14:52 JUL 28 '97 KP_SUBS.:E05SI                                            3    
   49      %EQU KP_RU_CLOSE#        = 15 ;
   50      %EQU KP_A_DO_WRITE#      = 16 ;
   51      %EQU KP_A_LO_WRITE#      = 17 ;
   52      %EQU KP_IO_CLOSE#        = 18 ;
   53      %EQU KP_RU_SEQ_READ#     = 19;
   54      %EQU KP_RU_OPEN_OUT#     = 20;
   55      %EQU KP_RU_CLOSE_OUT#    = 21;
   56      %EQU KP_RU_WRITE#        = 22;
   57      %EQU KP_UC_READ#         = 23;
   58      /**/
   59      /*  EQUs for KPU$SECURITY  */
   60      /**/
   61      %EQU KP_PRIV_WR#         = 01;
   62      %EQU KP_PRIV_RD#         = 02;
   63      /**/
   64      /* KPF$FORMAT op codes */
   65      /**/
   66      %EQU KP_BINOCT# = 0 ;
   67      %EQU KP_10CHAR_NLZ# = 1 ;
   68      %EQU KP_L_JUST# = 2 ;
   69      /**/
   70      /* KPI$IO_SVC vfc codes */
   71      /**/
   72      %EQU KP_SSPACE# = 0 ;
   73      %EQU KP_DSPACE# = 1 ;
   74      /**/
   75      /*  EQUs for various COMMANDS */
   76      /**/
   77      /*   KP_COPY    = 01 - no longer user */
   78      %EQU KP_LIST    = 02;
   79      %EQU KP_VINIT   = 03;
   80      %EQU KP_END     = 04;
   81      %EQU KP_MOVE    = 05;
   82      /*   KP_CMNT    = 06 - unused */
   83      /*   KP_SCAN    = 07 - unused */
   84      %EQU KP_BUILD   = 08;
   85      /*   KP_HELP    = 09 - unused */
14:52 JUL 28 '97 KP_SUBS.:E05SI                                            4    
   86      /*   KP_QUES    = 10 - unused */
   87      /*   KP_QQ      = 11 - unused */
   88      %EQU KP_USE     = 12;
   89      %EQU KP_CERTIFY = 13;
   90      %EQU KP_CERTDRV = 14;
   91      %EQU KP_CHECK   = 15;
   92      %EQU KP_UNDUMP  = 16;
   93      %EQU KP_CLONE   = 17;
   94      /**/
   95      /*  EQUs for 'What type of disk IS this?'  */
   96      /**/
   97      %EQU DT_SSSSD# = 1;                     /* Standard, Single-Side, Single Dens */
   98      %EQU DT_SSSDD# = 2;                     /* Standard, Single-Side, Double Dens */
   99      %EQU DT_SDSSD# = 3;                     /* Standard, Double-Side, Single Dens */
  100      %EQU DT_SDSDD# = 4;                     /* Standard, Double-Side, Double Dens */
  101      %EQU DT_MSSSD# = 5;                     /* Mini, Single-Side, Single Dens     */
  102      %EQU DT_MSSDD# = 6;                     /* Mini, Single-Side, Double Dens     */
  103      %EQU DT_MDSSD# = 7;                     /* Mini, Double-Side, Single Dens     */
  104      %EQU DT_MDSDD# = 8;                     /* Mini, Double-Side, Double Dens     */
  105      %EQU DT_RFEP# = 9;                      /* Standard L6 boot diskette          */
  106      /**/
  107      /* Equs for buffers                                        */
  108      /**/
  109      %EQU KP_INBUF_SIZE# = 512;
  110      %EQU KP_OUTBUF_SIZE# = 120;
  111      %EQU KP_BUF_SIZE# = 120;
  112      %EQU KP_MAX_MSG_SIZE# = 2066;           /* MAX CHARACTERS IN HOST/FEP MSG     */
  113      %EQU KP_RU_OUTBUF_SIZE# = 512;
  114      %EQU KP_BLOCK_SIZE# = 2048;
  115      %EQU KP_SIZE# = %(KP_BLOCK_SIZE# / 128 );
  116      %EQU KP_SHORT_BUF# = 30;
  117      /**/
  118      /*  LIMITS  */
  119      /**/
  120      %EQU KP_MAX_BYTES_IN_SEC# = 1024;
  121      %EQU KP_MAX_CHARS# = 2;
  122      %EQU KP_MAX_DRIVE# = 5;
14:52 JUL 28 '97 KP_SUBS.:E05SI                                            5    
  123      %EQU KP_BYTES_IN_DIAG_TRACK# = 5135;
  124      %EQU KP_MAX_BYTES_PHYSIO# = %(KP_BYTES_IN_DIAG_TRACK#);
  125      /**/
  126      /* Requests that PIGETTE makes on the front end */
  127      /**/
  128      %EQU KP_VINIT_RQS# = 1;
  129      %EQU KP_WRITE_RQS# = 2;
  130      %EQU KP_READ_RQS#  = 3;
  131      %EQU KP_OPEN_RQS#  = 4;
  132      %EQU KP_CLOSE_RQS# = 5;
  133      /*   KP_FREAD_RQS# = 6;  unused */
  134      %EQU KP_DIE_RQS#   = 7;
  135      %EQU KP_READ_RSP#     = 08;             /* Complements KP_READ_RQS#           */
  136      %EQU KP_VERFD_RSP#    = 09;             /* Pre-verified KP_READ/WRITE_RSP#    */
  137      %EQU KP_CERTIFY_RQS#  = 10;
  138      %EQU KP_CERTIFY_RSP#  = 11;             /* Complements KP_CERTIFY_RQS#        */
  139      %EQU KP_INITED_MSG#   = 12;             /* FEP to HOST after initialized      */
  140      %EQU KP_VINIT_RSP#    = 13;             /* Complements KP_VINIT_RQS#          */
  141      %EQU KP_WRITE_RSP#    = 14;             /* Complements KP_WRITE_RQS#          */
  142      %EQU KP_OPEN_RSP#     = 15;             /* Complements KP_OPEN_RQS#           */
  143      %EQU KP_CLOSE_RSP#    = 16;             /* Complements KP_CLOSE_RQS#          */
  144      %EQU KP_CHECK_RQS#    = 17;             /* Request a check of drives          */
  145      %EQU KP_CHECK_RSP#    = 18;             /* Complements KP_CHECK_RQS#          */
  146      %EQU KP_CER2_RQS#     = 19;             /* Request partial certification      */
  147      %EQU KP_CER2_RSP#     = 20;             /* Complements KP_CER2_RQS#           */
  148      %EQU KP_CLONE_RQS#    = 21;             /* Request fast diskette duplication  */
  149      %EQU KP_CLONE_RSP#    = 22;             /* Complements KP_CLONE_RQS#          */
  150      %EQU KP_CLONE_STT#    = 23;             /* Complements KP_CLONE_RQS#          */
  151      %EQU KP_VINIT_STT#    = 24;             /* Complements KP_VINIT_RQS#          */
  152      /**/
  153      /*  ASSORTED GOODIES  */
  154      /**/
  155      %EQU KP_BYTES_N_ADDR_ID# = 103;
  156      /**/
  157      /*  Location and size of various diskette special areas  */
  158      /**/
  159      %EQU KP_VSEC_PRIMAL# = 0;               /* Primal bootstrap                   */
14:52 JUL 28 '97 KP_SUBS.:E05SI                                            6    
  160      %EQU KP_NSEC_PRIMAL# = 1;
  161      %EQU KP_VSEC_SECONDARY# = %(KP_VSEC_PRIMAL#+KP_NSEC_PRIMAL#); /* Secondary    */
  162      %EQU KP_NSEC_SECONDARY# = 1;
  163      %EQU KP_VSEC_DISKDIR# = 8;              /* Disk directory block               */
  164      %EQU KP_NSEC_DISKDIR# = 1;
  165      %EQU KP_VSEC_DISKID# = 9;               /* Disk ID block                      */
  166      %EQU KP_NSEC_DISKID# = 1;
  167      %EQU KP_VSEC_BIG1# = 10;                /* First 8K words of BIGFOOT          */
  168      %EQU KP_NSEC_BIG1# = 64;
  169      %EQU KP_VSEC_RELOADER# = %(KP_VSEC_BIG1#+KP_NSEC_BIG1#); /* Relocator         */
  170      %EQU KP_NSEC_RELOADER# = 1;
  171      %EQU KP_VSEC_BIG2# = %(KP_VSEC_RELOADER#+KP_NSEC_RELOADER#); /* Rest BIGFOOT  */
  172      /*   KP_VSEC_DUMP# = %(KP_VSEC_BIG2#+NSEC_BIG2) -> dynamic!                   */
  173      %EQU KP_NSEC_ALL_RFEP# = %(80*16*2*2);  /* 80-TRACK,16-SECTOR,2-SIDE,2-DRIVE  */
  174      /**/
  175      /* The codes for the break handler for disk activity */
  176      /**/
  177      %EQU KP_DISK_WRITING# = 1;
  178      %EQU KP_DISK_READING# = 2;
  179      %EQU KP_DISK_INACTIVE# = 3;
  180      %EQU KP_DISK_VOLINITING# = 4;
  181      %EQU KP_DISK_CERTIFYING# = 5;
  182      %EQU KP_DISK_CERT2#      = 6;
  183      %EQU KP_DISK_CLONING#    = 7;

