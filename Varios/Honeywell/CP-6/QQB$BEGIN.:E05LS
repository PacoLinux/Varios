VERSION E05

PL6.E3A0      #001=QQB$BEGIN File=QQB$BEGIN.:E05TSI                              WED 07/30/97 05:28 Page:1    
        1        1        /*M* QQB$BEGIN - Perform  BEGIN and DEBUG commands */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* IND=2, DCI=4, CSU=2, ECU=4, DTI=2, CTI=4, AND */
        8        8        QQB$BEGIN: PROC;
        9        9        %INCLUDE Q_PAGE_C;
       10       41        %SET LISTEXP = '1'B;
       11       42        %PAGE(ARG="Includes");

                59        /***************************************************************************
                60         *                                                                         *
                61         *                                  Includes                               *
                62         *                                                                         *
                63         ***************************************************************************/

       12       67        %INCLUDE CP_6;
       13      148        %INCLUDE CP_6_SUBS;
       14      688        %INCLUDE B_ERRORS_C;
       15     1815        %INCLUDE XU_MACRO_C;
       16     4921        %INCLUDE QQ_MACROS_C;
       17     5346        %INCLUDE QQ_DATA_R;
       18     5592        %INCLUDE QT_MACROS_C;
       19     5750        %INCLUDE QQ_SUBS_C;
       20     5942        %INCLUDE QQ_PERR_C;
       21     6103        %INCLUDE Q_ERRCODE_C;
       22     6126        %PAGE(ARG="Externally defined routines");

              6143    1   /***************************************************************************
              6144    1    *                                                                         *
              6145    1    *                        Externally defined routines                      *
              6146    1    *                                                                         *
              6147    1    ***************************************************************************/

       23     6151    1   DCL QQA$BYTYPE ENTRY(4) ALTRET;
PL6.E3A0      #001=QQB$BEGIN File=QQB$BEGIN.:E05TSI                              WED 07/30/97 05:28 Page:2    
       24     6152    1   DCL QQC$SCREECH ENTRY;
       25     6153    1   DCL QQC$BLDMSG_BLK ENTRY(1);
       26     6154    1   DCL QQC$BLDMSG ENTRY(1);
       27     6155    1   DCL QQC$GET_BLK ENTRY(3) ALTRET;
       28     6156    1   DCL QQC$RLS_BLK ENTRY(2);
       29     6157        %PAGE(ARG="Symrefs");

              6174    1   /***************************************************************************
              6175    1    *                                                                         *
              6176    1    *                                  Symrefs                                *
              6177    1    *                                                                         *
              6178    1    ***************************************************************************/

       30     6182    1   DCL B$TCB$ PTR SYMREF;
       31     6183        %PAGE(ARG="DCBs");

              6200    1   /***************************************************************************
              6201    1    *                                                                         *
              6202    1    *                                    DCBs                                 *
              6203    1    *                                                                         *
              6204    1    ***************************************************************************/

       32     6208    1   DCL M$CG DCB;
       33     6209        %PAGE(ARG="Based");

              6226    1   /***************************************************************************
              6227    1    *                                                                         *
              6228    1    *                                   Based                                 *
              6229    1    *                                                                         *
              6230    1    ***************************************************************************/

       34     6234        %TP$STATION;
       35     6307        %TPU$INFO;
       36     6336        %PARSE$OUT(STCLASS=BASED);
       37     6381        %PARSE$SYM(STCLASS=BASED);
       38     6419        %B$ALT;
       39     6427        %B$TCB;
PL6.E3A0      #001=QQB$BEGIN File=QQB$BEGIN.:E05TSI                              WED 07/30/97 05:28 Page:3    
       40     6430        %QT$FORM(STCLASS=BASED);
       41     6469        %PAGE(ARG="Static");

              6486    1   /***************************************************************************
              6487    1    *                                                                         *
              6488    1    *                                   Static                                *
              6489    1    *                                                                         *
              6490    1    ***************************************************************************/

       42     6494    1   DCL FID CHAR(80) STATIC;
       43     6495        %PAGE(ARG="Constant");

              6512    1   /***************************************************************************
              6513    1    *                                                                         *
              6514    1    *                                  Constant                               *
              6515    1    *                                                                         *
              6516    1    ***************************************************************************/

       44     6520    1   DCL EXIT_XACTION CHAR(3) CONSTANT INIT('001');
       45     6521        %PAGE(ARG="Auto");

              6538    1   /***************************************************************************
              6539    1    *                                                                         *
              6540    1    *                                    Auto                                 *
              6541    1    *                                                                         *
              6542    1    ***************************************************************************/

       46     6546    1   DCL FP CHAR(8);
       47     6547    1   DCL ERR UBIN;
       48     6548        %MSGBLK;
       49     6638        %PAGE(ARG="Error codes", PAGE=YES);

PL6.E3A0      #001=QQB$BEGIN File=QQB$BEGIN.:E05TSI                              WED 07/30/97 05:28 Page:4    
              6655    1   /***************************************************************************
              6656    1    *                                                                         *
              6657    1    *                                Error codes                              *
              6658    1    *                                                                         *
              6659    1    ***************************************************************************/

       50     6663        %ERRCODE(NAME=CODE_FPAD, CODE#=%E$FPAD, FCG#=%FCG_QQ, MID#=%MID_B);
       51     6670        %ERRCODE(NAME=CODE_IFP, CODE#=%E$IFP, FCG#=%FCG_QQ, MID#=%MID_B);
       52     6677        %ERRCODE(NAME=CODE_NO_POOLMEM, CODE#=%E$NO_POOLMEM, FCG#=%FCG_QQ, MID#=%MID_A);
       53     6684        %ERRCODE(NAME=CODE_BIP, CODE#=%E$BIP, FCG#=%FCG_QQ, MID#=%MID_B);
       54     6691        /*E*       ERROR: QQB-E$FPAD-C
       55     6692                 MESSAGE: Access denied
       56     6693             DESCRIPTION: Illegal password supplied on BEGIN/START/RUNUNIT
       57     6694        */
       58     6695        /*E*       ERROR: QQB-E$IFP-C
       59     6696                 MESSAGE: Invalid Forms Program type.
       60     6697             DESCRIPTION: The name of a forms program on a BEGIN/DEBUG/START/RUNUNIT
       61     6698                          command is invalid
       62     6699        */
       63     6700        /*E*       ERROR: QQB-E$BIP-C
       64     6701                 MESSAGE: More than one BEGIN/START/RUNUNIT  command must not appear
       65     6702                          in a READ file.
       66     6703             DESCRIPTION: The only time that this can come up is when
       67     6704                          more than one BEGIN/START/RUNUNIT command is put into a
       68     6705                          file of commands that is being READ.
       69     6706        */
       70     6707        %PAGE(ARG="FPTs", PAGE=YES);

PL6.E3A0      #001=QQB$BEGIN File=QQB$BEGIN.:E05TSI                              WED 07/30/97 05:28 Page:5    
              6724    1   /***************************************************************************
              6725    1    *                                                                         *
              6726    1    *                                    FPTs                                 *
              6727    1    *                                                                         *
              6728    1    ***************************************************************************/

       71     6732        %FPT_OPEN;
       72     6841        %FPT_FID(NAME=VLP_NAME, PASS=VLP_PASS, RESULTS=VLR_FID,
       73     6842        ACCT=VLP_ACCT, ASN="FPT_OPEN.V.ASN#", SN=VLP_SN,
       74     6843        RES="FPT_OPEN.V.RES#", WSN=VLP_WSN, TEXTFID=FID);
       75     6866        %FPT_WRITE(DCB=M$CG, STATION=VLP_STATION, BUF=EXIT_XACTION);
       76     6897        %PAGE(ARG="VLPs");

              6914    1   /***************************************************************************
              6915    1    *                                                                         *
              6916    1    *                                    VLPs                                 *
              6917    1    *                                                                         *
              6918    1    ***************************************************************************/

       77     6922        %VLP_ACCT;
       78     6935        %VLP_NAME;
       79     6962        %VLP_PASS;
       80     6975        %VLP_SN;
       81     6988        %VLP_WSN;
       82     7001        %VLP_STATION(LATCH=YES);
       83     7028        %PAGE(ARG="VLRs");

              7045    1   /***************************************************************************
              7046    1    *                                                                         *
              7047    1    *                                    VLRs                                 *
              7048    1    *                                                                         *
              7049    1    ***************************************************************************/

       84     7053        %VLR_FID;
       85     7072        %PAGE(ARG="QQB$BEGIN", PAGE=YES);

PL6.E3A0      #001=QQB$BEGIN File=QQB$BEGIN.:E05TSI                              WED 07/30/97 05:28 Page:6    
              7089    1   /***************************************************************************
              7090    1    *                                                                         *
              7091    1    *                                 QQB$BEGIN                               *
              7092    1    *                                                                         *
              7093    1    ***************************************************************************/

       86     7097    1           S$ = QQ_CMDBLK.S$;
       87     7098    1           IF TP$STATION.FLAGS.IS_QT$FORM THEN
       88     7099    2             DO;
       89     7100    2               QQ_CMDBLK.MINOR_ERR = CODE_BIP;
       90     7101    2               CALL QQC$BLDMSG_BLK(MSGBLK);
       91     7102    2               CALL QQC$BLDMSG(MSGBLK);
       92     7103    2               RETURN;
       93     7104    2             END;
       94     7105    1           IF QQ_CMDBLK.OUT$ -> OUT$BLK.NSUBLKS > 0 THEN
       95     7106    2             DO;                           /* GET TYPE                           */
       96     7107    2               FID = QQ_CMDBLK.OUT$ -> OUT$BLK.SUBLK$(0) -> OUT$SYM.TEXT;
       97     7108    2               CALL M$FID(FPT_FID) ALTRET(FID_ERR);
       98     7109    2               IF FPT_OPEN.V.ASN# ~= 1 OR
       99     7110    2                   VLP_NAME.L# > 8 OR
      100     7111    2                   VLR_FID.PASS OR
      101     7112    2                   VLR_FID.SN OR
      102     7113    2                   VLR_FID.WSN OR
      103     7114    2                   VLR_FID.RES THEN
      104     7115    3                 DO;
      105     7116    3                   QQ_CMDBLK.MINOR_ERR = CODE_IFP;
      106     7117    3                   CALL PRINT_ERR;
      107     7118    3                   RETURN;
      108     7119    3                 END;
      109     7120    2               FP = VLP_NAME.NAME#;
      110     7121    2             END;
      111     7122    1           ELSE FP = '*DFLT';
      112     7123    1           IF TP$STATION.QT$FORM$ = ADDR(NIL) THEN
      113     7124    1             CALL QQC$GET_BLK(QQ_GLOBAL.POOL$, SIZEW(QT$FORM),
      114     7125    1                 TP$STATION.QT$FORM$) ALTRET(NO_MEM);
      115     7126    1           CALL QQA$BYTYPE(S$,TP$STATION.QT$FORM$->QT$FORM,FP,ERR)
      116     7127    2           WHENALTRETURN DO;
PL6.E3A0      #001=QQB$BEGIN File=QQB$BEGIN.:E05TSI                              WED 07/30/97 05:28 Page:7    
      117     7128    2               CALL QQC$RLS_BLK(QQ_GLOBAL.POOL$, TP$STATION.QT$FORM$);
      118     7129    2               TP$STATION.QT$FORM$ = ADDR(NIL);
      119     7130    2               TP$STATION.FLAGS.IS_QT$FORM = '0'B;
      120     7131    2               RETURN;
      121     7132    2             END;
      122     7133    1           TP$STATION.FLAGS.IS_QT$FORM = '1'B;
      123     7134    1           IF QQ_CMDBLK.OUT$->OUT$BLK.NSUBLKS>0
      124     7135    1               AND TP$STATION.QT$FORM$->QT$FORM.FP.PASS~=VLP_ACCT.ACCT#
      125     7136    2           THEN DO;
      126     7137    2               QQ_CMDBLK.MINOR_ERR = CODE_FPAD;
      127     7138    2               CALL PRINT_ERR;
      128     7139    2               RETURN;
      129     7140    2             END;
      130     7141    1           IF QQ_CMDBLK.CODE = 8 /* DEBUG */
      131     7142    1           THEN QQ_CMDBLK.S$ -> TP$STATION.FLAGS.SET_DEBUG = '1'B;
      132     7143    1           IF QQ_CMDBLK.OUT$ -> OUT$BLK.NSUBLKS = 2
      133     7144    1           THEN TP$STATION.DFLT_FP = FP;   /* BY DEFAULT                         */
      134     7145    1           GOTO CONT;                      /* Skip the ENTRY point               */
      135     7146
      136     7147    1   QQB$EXIT: ENTRY;
      137     7148            /* This Entry point is called for QQB$OFF when COMMAND_FP is
      138     7149               not the Default form, but it has been M$LDTRC to from another
      139     7150               form.  A call to this Entry point will cause COMMAND_FP to
      140     7151               call M$EXIT which will ask TPA to restore the DeFault form.
      141     7152            */
      142     7153
      143     7154    1   CONT:   ;
      144     7155    1           VLP_STATION.STATION# = QQ_CMDBLK.S$ -> TP$STATION.ID;
      145     7156    1           CALL M$WRITE(FPT_WRITE) ALTRET(MON_ERR);
      146     7157    1           RETURN;
      147     7158        /* */
      148     7159    1   FID_ERR: QQ_CMDBLK.MINOR_ERR = CODE_IFP;
      149     7160    1           CALL PRINT_ERR;
      150     7161    1           RETURN;
      151     7162    1   NO_MEM: QQ_GLOBAL.ERR = CODE_NO_POOLMEM;
      152     7163    1           CALL QQC$SCREECH;
      153     7164    1   MON_ERR: QQ_GLOBAL.ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;
PL6.E3A0      #001=QQB$BEGIN File=QQB$BEGIN.:E05TSI                              WED 07/30/97 05:28 Page:8    
      154     7165    1           CALL QQC$SCREECH;
      155     7166                %PAGE(ARG="PRINT_ERR", PAGE=YES);

PL6.E3A0      #001=QQB$BEGIN File=QQB$BEGIN.:E05TSI                              WED 07/30/97 05:28 Page:9    
              7183    1   /***************************************************************************
              7184    1    *                                                                         *
              7185    1    *                                 PRINT_ERR                               *
              7186    1    *                                                                         *
              7187    1    ***************************************************************************/

      156     7191        /* */
      157     7192    1   PRINT_ERR: PROC;
      158     7193    2           CALL QQC$BLDMSG_BLK(MSGBLK);
      159     7194    2           CALL QQC$BLDMSG(MSGBLK);
      160     7195    2           IF TP$STATION.QT$FORM$ ~= ADDR(NIL) THEN
      161     7196    3             DO;
      162     7197    3               CALL QQC$RLS_BLK(QQ_GLOBAL.POOL$, TP$STATION.QT$FORM$);
      163     7198    3               TP$STATION.QT$FORM$ = ADDR(NIL);
      164     7199    3               TP$STATION.FLAGS.IS_QT$FORM = '0'B;
      165     7200    3             END;
      166     7201    2           RETURN;
      167     7202    2   END PRINT_ERR;
      168     7203    1   END QQB$BEGIN;

PL6.E3A0      #001=QQB$BEGIN File=QQB$BEGIN.:E05TSI                              WED 07/30/97 05:28 Page:10   
--  Include file information  --

   Q_ERRCODE_C.:E05TOU  is referenced.
   QQ_PERR_C.:E05TOU  is referenced.
   QQ_SUBS_C.:E05TOU  is referenced.
   QT_MACROS_C.:E05TOU  is referenced.
   QQ_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   QQ_MACROS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   Q_PAGE_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure QQB$BEGIN.

   Procedure QQB$BEGIN requires 197 words for executable code.
   Procedure QQB$BEGIN requires 36 words of local(AUTO) storage.

    No errors detected in file QQB$BEGIN.:E05TSI    .

PL6.E3A0      #001=QQB$BEGIN File=QQB$BEGIN.:E05TSI                              WED 07/30/97 05:28 Page:11   

 Object Unit name= QQB$BEGIN                                  File name= QQB$BEGIN.:E05TOU
 UTS= JUL 30 '97 05:28:29.88 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$CG
    2   Data  even  none   150    226  QQB$BEGIN
    3  RoData even  UTS      7      7  QQB$BEGIN
    4   Proc  even  none   197    305  QQB$BEGIN
    5  RoData even  none     4      4  QQB$BEGIN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes            yes      Std        0  QQB$BEGIN
     4    207                  yes      Std        0  QQB$EXIT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 QQC$BLDMSG_BLK
         yes           Std       1 QQC$BLDMSG
         yes           Std       0 QQC$SCREECH
         yes           Std       2 QQC$RLS_BLK
 yes     yes           Std       3 QQC$GET_BLK
 yes     yes           Std       4 QQA$BYTYPE
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=QQB$BEGIN File=QQB$BEGIN.:E05TSI                              WED 07/30/97 05:28 Page:12   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  QQ_CMDBLK                             QQ_GLOBAL
     B$TCB$                                M$CG                                  B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=QQB$BEGIN File=QQB$BEGIN.:E05TSI                              WED 07/30/97 05:28 Page:13   


        1        1        /*M* QQB$BEGIN - Perform  BEGIN and DEBUG commands */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* IND=2, DCI=4, CSU=2, ECU=4, DTI=2, CTI=4, AND */
        8        8        QQB$BEGIN: PROC;

      8  4 000000   000000 700200 xent  QQB$BEGIN    TSX0  ! X66_AUTO_0
         4 000001   000044 000000                    ZERO    36,0

        9        9        %INCLUDE Q_PAGE_C;
       10       41        %SET LISTEXP = '1'B;
       11       42        %PAGE(ARG="Includes");

                59        /***************************************************************************
                60         *                                                                         *
                61         *                                  Includes                               *
                62         *                                                                         *
                63         ***************************************************************************/

       12       67        %INCLUDE CP_6;
       13      148        %INCLUDE CP_6_SUBS;
       14      688        %INCLUDE B_ERRORS_C;
       15     1815        %INCLUDE XU_MACRO_C;
       16     4921        %INCLUDE QQ_MACROS_C;
       17     5346        %INCLUDE QQ_DATA_R;
       18     5592        %INCLUDE QT_MACROS_C;
       19     5750        %INCLUDE QQ_SUBS_C;
       20     5942        %INCLUDE QQ_PERR_C;
       21     6103        %INCLUDE Q_ERRCODE_C;
       22     6126        %PAGE(ARG="Externally defined routines");

              6143    1   /***************************************************************************
              6144    1    *                                                                         *
PL6.E3A0      #001=QQB$BEGIN File=QQB$BEGIN.:E05TSI                              WED 07/30/97 05:28 Page:14   
              6145    1    *                        Externally defined routines                      *
              6146    1    *                                                                         *
              6147    1    ***************************************************************************/

       23     6151    1   DCL QQA$BYTYPE ENTRY(4) ALTRET;
       24     6152    1   DCL QQC$SCREECH ENTRY;
       25     6153    1   DCL QQC$BLDMSG_BLK ENTRY(1);
       26     6154    1   DCL QQC$BLDMSG ENTRY(1);
       27     6155    1   DCL QQC$GET_BLK ENTRY(3) ALTRET;
       28     6156    1   DCL QQC$RLS_BLK ENTRY(2);
       29     6157        %PAGE(ARG="Symrefs");

              6174    1   /***************************************************************************
              6175    1    *                                                                         *
              6176    1    *                                  Symrefs                                *
              6177    1    *                                                                         *
              6178    1    ***************************************************************************/

       30     6182    1   DCL B$TCB$ PTR SYMREF;
       31     6183        %PAGE(ARG="DCBs");

              6200    1   /***************************************************************************
              6201    1    *                                                                         *
              6202    1    *                                    DCBs                                 *
              6203    1    *                                                                         *
              6204    1    ***************************************************************************/

       32     6208    1   DCL M$CG DCB;
       33     6209        %PAGE(ARG="Based");

              6226    1   /***************************************************************************
              6227    1    *                                                                         *
              6228    1    *                                   Based                                 *
              6229    1    *                                                                         *
              6230    1    ***************************************************************************/

       34     6234        %TP$STATION;
PL6.E3A0      #001=QQB$BEGIN File=QQB$BEGIN.:E05TSI                              WED 07/30/97 05:28 Page:15   
       35     6307        %TPU$INFO;
       36     6336        %PARSE$OUT(STCLASS=BASED);
       37     6381        %PARSE$SYM(STCLASS=BASED);
       38     6419        %B$ALT;
       39     6427        %B$TCB;
       40     6430        %QT$FORM(STCLASS=BASED);
       41     6469        %PAGE(ARG="Static");

              6486    1   /***************************************************************************
              6487    1    *                                                                         *
              6488    1    *                                   Static                                *
              6489    1    *                                                                         *
              6490    1    ***************************************************************************/

       42     6494    1   DCL FID CHAR(80) STATIC;
       43     6495        %PAGE(ARG="Constant");

              6512    1   /***************************************************************************
              6513    1    *                                                                         *
              6514    1    *                                  Constant                               *
              6515    1    *                                                                         *
              6516    1    ***************************************************************************/

       44     6520    1   DCL EXIT_XACTION CHAR(3) CONSTANT INIT('001');
       45     6521        %PAGE(ARG="Auto");

              6538    1   /***************************************************************************
              6539    1    *                                                                         *
              6540    1    *                                    Auto                                 *
              6541    1    *                                                                         *
              6542    1    ***************************************************************************/

       46     6546    1   DCL FP CHAR(8);
       47     6547    1   DCL ERR UBIN;
       48     6548        %MSGBLK;
       49     6638        %PAGE(ARG="Error codes", PAGE=YES);

PL6.E3A0      #001=QQB$BEGIN File=QQB$BEGIN.:E05TSI                              WED 07/30/97 05:28 Page:16   
              6655    1   /***************************************************************************
              6656    1    *                                                                         *
              6657    1    *                                Error codes                              *
              6658    1    *                                                                         *
              6659    1    ***************************************************************************/

       50     6663        %ERRCODE(NAME=CODE_FPAD, CODE#=%E$FPAD, FCG#=%FCG_QQ, MID#=%MID_B);
       51     6670        %ERRCODE(NAME=CODE_IFP, CODE#=%E$IFP, FCG#=%FCG_QQ, MID#=%MID_B);
       52     6677        %ERRCODE(NAME=CODE_NO_POOLMEM, CODE#=%E$NO_POOLMEM, FCG#=%FCG_QQ, MID#=%MID_A);
       53     6684        %ERRCODE(NAME=CODE_BIP, CODE#=%E$BIP, FCG#=%FCG_QQ, MID#=%MID_B);
       54     6691        /*E*       ERROR: QQB-E$FPAD-C
       55     6692                 MESSAGE: Access denied
       56     6693             DESCRIPTION: Illegal password supplied on BEGIN/START/RUNUNIT
       57     6694        */
       58     6695        /*E*       ERROR: QQB-E$IFP-C
       59     6696                 MESSAGE: Invalid Forms Program type.
       60     6697             DESCRIPTION: The name of a forms program on a BEGIN/DEBUG/START/RUNUNIT
       61     6698                          command is invalid
       62     6699        */
       63     6700        /*E*       ERROR: QQB-E$BIP-C
       64     6701                 MESSAGE: More than one BEGIN/START/RUNUNIT  command must not appear
       65     6702                          in a READ file.
       66     6703             DESCRIPTION: The only time that this can come up is when
       67     6704                          more than one BEGIN/START/RUNUNIT command is put into a
       68     6705                          file of commands that is being READ.
       69     6706        */
       70     6707        %PAGE(ARG="FPTs", PAGE=YES);

PL6.E3A0      #001=QQB$BEGIN File=QQB$BEGIN.:E05TSI                              WED 07/30/97 05:28 Page:17   
              6724    1   /***************************************************************************
              6725    1    *                                                                         *
              6726    1    *                                    FPTs                                 *
              6727    1    *                                                                         *
              6728    1    ***************************************************************************/

       71     6732        %FPT_OPEN;
       72     6841        %FPT_FID(NAME=VLP_NAME, PASS=VLP_PASS, RESULTS=VLR_FID,
       73     6842        ACCT=VLP_ACCT, ASN="FPT_OPEN.V.ASN#", SN=VLP_SN,
       74     6843        RES="FPT_OPEN.V.RES#", WSN=VLP_WSN, TEXTFID=FID);
       75     6866        %FPT_WRITE(DCB=M$CG, STATION=VLP_STATION, BUF=EXIT_XACTION);
       76     6897        %PAGE(ARG="VLPs");

              6914    1   /***************************************************************************
              6915    1    *                                                                         *
              6916    1    *                                    VLPs                                 *
              6917    1    *                                                                         *
              6918    1    ***************************************************************************/

       77     6922        %VLP_ACCT;
       78     6935        %VLP_NAME;
       79     6962        %VLP_PASS;
       80     6975        %VLP_SN;
       81     6988        %VLP_WSN;
       82     7001        %VLP_STATION(LATCH=YES);
       83     7028        %PAGE(ARG="VLRs");

              7045    1   /***************************************************************************
              7046    1    *                                                                         *
              7047    1    *                                    VLRs                                 *
              7048    1    *                                                                         *
              7049    1    ***************************************************************************/

       84     7053        %VLR_FID;
       85     7072        %PAGE(ARG="QQB$BEGIN", PAGE=YES);

PL6.E3A0      #001=QQB$BEGIN File=QQB$BEGIN.:E05TSI                              WED 07/30/97 05:28 Page:18   
              7089    1   /***************************************************************************
              7090    1    *                                                                         *
              7091    1    *                                 QQB$BEGIN                               *
              7092    1    *                                                                         *
              7093    1    ***************************************************************************/

       86     7097    1           S$ = QQ_CMDBLK.S$;

   7097  4 000002   000004 236000 xsym               LDQ     QQ_CMDBLK+4
         4 000003   200003 756100                    STQ     S$,,AUTO

       87     7098    1           IF TP$STATION.FLAGS.IS_QT$FORM THEN

   7098  4 000004   200003 470500                    LDP0    S$,,AUTO
         4 000005   000022 430100                    FSZN    18,,PR0
         4 000006   000026 605000 4                  TPL     s:7105

       88     7099    2             DO;

       89     7100    2               QQ_CMDBLK.MINOR_ERR = CODE_BIP;

   7100  4 000007   000004 236000 3                  LDQ     CODE_BIP
         4 000010   000001 756000 xsym               STQ     QQ_CMDBLK+1

       90     7101    2               CALL QQC$BLDMSG_BLK(MSGBLK);

   7101  4 000011   200010 631500                    EPPR1   MSGBLK,,AUTO
         4 000012   200040 451500                    STP1    MSGBLK+24,,AUTO
         4 000013   200040 630500                    EPPR0   MSGBLK+24,,AUTO
         4 000014   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000015   000000 701000 xent               TSX1    QQC$BLDMSG_BLK
         4 000016   000000 011000                    NOP     0

       91     7102    2               CALL QQC$BLDMSG(MSGBLK);

   7102  4 000017   200010 630500                    EPPR0   MSGBLK,,AUTO
         4 000020   200040 450500                    STP0    MSGBLK+24,,AUTO
PL6.E3A0      #001=QQB$BEGIN File=QQB$BEGIN.:E05TSI                              WED 07/30/97 05:28 Page:19   
         4 000021   200040 630500                    EPPR0   MSGBLK+24,,AUTO
         4 000022   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000023   000000 701000 xent               TSX1    QQC$BLDMSG
         4 000024   000000 011000                    NOP     0

       92     7103    2               RETURN;

   7103  4 000025   000000 702200 xent               TSX2  ! X66_ARET

       93     7104    2             END;
       94     7105    1           IF QQ_CMDBLK.OUT$ -> OUT$BLK.NSUBLKS > 0 THEN

   7105  4 000026   000005 471400 xsym               LDP1    QQ_CMDBLK+5
         4 000027   100001 220100                    LDX0    1,,PR1
         4 000030   000076 600000 4                  TZE     s:7122

       95     7106    2             DO;                           /* GET TYPE                           */

       96     7107    2               FID = QQ_CMDBLK.OUT$ -> OUT$BLK.SUBLK$(0) -> OUT$SYM.TEXT;

   7107  4 000031   100003 473500                    LDP3    3,,PR1
         4 000032   300004 236100                    LDQ     4,,PR3
         4 000033   000033 772000                    QRL     27
         4 000034   000000 621006                    EAX1    0,QL
         4 000035   040000 100540                    MLR     fill='040'O
         4 000036   300004 200011                    ADSC9   4,,PR3                   cn=1,n=*X1
         4 000037   000000 000120 2                  ADSC9   FID                      cn=0,n=80

       97     7108    2               CALL M$FID(FPT_FID) ALTRET(FID_ERR);

   7108  4 000040   000116 630400 2                  EPPR0   FPT_FID
         4 000041   420001 713400                    CLIMB   alt,+8193
         4 000042   404400 401760                    pmme    nvectors=10
         4 000043   000222 702000 4                  TSX2    FID_ERR

       98     7109    2               IF FPT_OPEN.V.ASN# ~= 1 OR

PL6.E3A0      #001=QQB$BEGIN File=QQB$BEGIN.:E05TSI                              WED 07/30/97 05:28 Page:20   
   7109  4 000044   000071 236000 2                  LDQ     FPT_OPEN+37
         4 000045   000777 376007                    ANQ     511,DL
         4 000046   000001 116007                    CMPQ    1,DL
         4 000047   000065 601000 4                  TNZ     s:7116
         4 000050   000164 236000 2                  LDQ     VLP_NAME
         4 000051   777000 376003                    ANQ     -512,DU
         4 000052   011000 116003                    CMPQ    4608,DU
         4 000053   000065 603000 4                  TRC     s:7116
         4 000054   000214 236000 2                  LDQ     VLR_FID
         4 000055   100000 316003                    CANQ    32768,DU
         4 000056   000065 601000 4                  TNZ     s:7116
         4 000057   040000 316003                    CANQ    16384,DU
         4 000060   000065 601000 4                  TNZ     s:7116
         4 000061   020000 316003                    CANQ    8192,DU
         4 000062   000065 601000 4                  TNZ     s:7116
         4 000063   004000 316003                    CANQ    2048,DU
         4 000064   000072 600000 4                  TZE     s:7120

       99     7110    2                   VLP_NAME.L# > 8 OR
      100     7111    2                   VLR_FID.PASS OR
      101     7112    2                   VLR_FID.SN OR
      102     7113    2                   VLR_FID.WSN OR
      103     7114    2                   VLR_FID.RES THEN
      104     7115    3                 DO;

      105     7116    3                   QQ_CMDBLK.MINOR_ERR = CODE_IFP;

   7116  4 000065   000002 236000 3                  LDQ     CODE_IFP
         4 000066   000001 756000 xsym               STQ     QQ_CMDBLK+1

      106     7117    3                   CALL PRINT_ERR;

   7117  4 000067   000244 701000 4                  TSX1    PRINT_ERR
         4 000070   000000 011000                    NOP     0

      107     7118    3                   RETURN;

PL6.E3A0      #001=QQB$BEGIN File=QQB$BEGIN.:E05TSI                              WED 07/30/97 05:28 Page:21   
   7118  4 000071   000000 702200 xent               TSX2  ! X66_ARET

      108     7119    3                 END;
      109     7120    2               FP = VLP_NAME.NAME#;

   7120  4 000072   040100 100400                    MLR     fill='040'O
         4 000073   000164 200010 2                  ADSC9   VLP_NAME                 cn=1,n=8
         4 000074   200005 000010                    ADSC9   FP,,AUTO                 cn=0,n=8

      110     7121    2             END;

   7121  4 000075   000101 710000 4                  TRA     s:7123

      111     7122    1           ELSE FP = '*DFLT';

   7122  4 000076   040100 100400                    MLR     fill='040'O
         4 000077   000005 000005 3                  ADSC9   CODE_BIP+1               cn=0,n=5
         4 000100   200005 000010                    ADSC9   FP,,AUTO                 cn=0,n=8

      112     7123    1           IF TP$STATION.QT$FORM$ = ADDR(NIL) THEN

   7123  4 000101   200003 470500                    LDP0    S$,,AUTO
         4 000102   000015 236100                    LDQ     13,,PR0
         4 000103   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 000104   000116 601000 4                  TNZ     s:7126

      113     7124    1             CALL QQC$GET_BLK(QQ_GLOBAL.POOL$, SIZEW(QT$FORM),

   7124  4 000105   200003 236100                    LDQ     S$,,AUTO
         4 000106   000015 036003                    ADLQ    13,DU
         4 000107   200042 756100                    STQ     MSGBLK+26,,AUTO
         4 000110   000002 237000 5                  LDAQ    2
         4 000111   200040 757100                    STAQ    MSGBLK+24,,AUTO
         4 000112   200040 630500                    EPPR0   MSGBLK+24,,AUTO
         4 000113   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 000114   000000 701000 xent               TSX1    QQC$GET_BLK
         4 000115   000227 702000 4                  TSX2    NO_MEM
PL6.E3A0      #001=QQB$BEGIN File=QQB$BEGIN.:E05TSI                              WED 07/30/97 05:28 Page:22   

      114     7125    1                 TP$STATION.QT$FORM$) ALTRET(NO_MEM);
      115     7126    1           CALL QQA$BYTYPE(S$,TP$STATION.QT$FORM$->QT$FORM,FP,ERR)

   7126  4 000116   200003 470500                    LDP0    S$,,AUTO
         4 000117   000015 471500                    LDP1    13,,PR0
         4 000120   200007 633500                    EPPR3   ERR,,AUTO
         4 000121   200043 453500                    STP3    MSGBLK+27,,AUTO
         4 000122   200005 634500                    EPPR4   FP,,AUTO
         4 000123   200042 454500                    STP4    MSGBLK+26,,AUTO
         4 000124   200041 451500                    STP1    MSGBLK+25,,AUTO
         4 000125   200003 635500                    EPPR5   S$,,AUTO
         4 000126   200040 455500                    STP5    MSGBLK+24,,AUTO
         4 000127   200040 630500                    EPPR0   MSGBLK+24,,AUTO
         4 000130   000022 631400 xsym               EPPR1   B_VECTNIL+18
         4 000131   000000 701000 xent               TSX1    QQA$BYTYPE
         4 000132   000134 702000 4                  TSX2    s:7128
         4 000133   000152 710000 4                  TRA     s:7133

      116     7127    2           WHENALTRETURN DO;

      117     7128    2               CALL QQC$RLS_BLK(QQ_GLOBAL.POOL$, TP$STATION.QT$FORM$);

   7128  4 000134   200003 236100                    LDQ     S$,,AUTO
         4 000135   000015 036003                    ADLQ    13,DU
         4 000136   000002 235000 5                  LDA     2
         4 000137   200040 757100                    STAQ    MSGBLK+24,,AUTO
         4 000140   200040 630500                    EPPR0   MSGBLK+24,,AUTO
         4 000141   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000142   000000 701000 xent               TSX1    QQC$RLS_BLK
         4 000143   000000 011000                    NOP     0

      118     7129    2               TP$STATION.QT$FORM$ = ADDR(NIL);

   7129  4 000144   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 000145   200003 470500                    LDP0    S$,,AUTO
         4 000146   000015 756100                    STQ     13,,PR0
PL6.E3A0      #001=QQB$BEGIN File=QQB$BEGIN.:E05TSI                              WED 07/30/97 05:28 Page:23   

      119     7130    2               TP$STATION.FLAGS.IS_QT$FORM = '0'B;

   7130  4 000147   000001 236000 5                  LDQ     1
         4 000150   000022 356100                    ANSQ    18,,PR0

      120     7131    2               RETURN;

   7131  4 000151   000000 702200 xent               TSX2  ! X66_ARET

      121     7132    2             END;
      122     7133    1           TP$STATION.FLAGS.IS_QT$FORM = '1'B;

   7133  4 000152   200003 470500                    LDP0    S$,,AUTO
         4 000153   001000 236003                    LDQ     512,DU
         4 000154   000022 256100                    ORSQ    18,,PR0

      123     7134    1           IF QQ_CMDBLK.OUT$->OUT$BLK.NSUBLKS>0

   7134  4 000155   000005 471400 xsym               LDP1    QQ_CMDBLK+5
         4 000156   100001 220100                    LDX0    1,,PR1
         4 000157   000172 600000 4                  TZE     s:7141
         4 000160   000015 473500                    LDP3    13,,PR0
         4 000161   040000 106500                    CMPC    fill='040'O
         4 000162   300014 000010                    ADSC9   12,,PR3                  cn=0,n=8
         4 000163   000162 000010 2                  ADSC9   VLP_ACCT                 cn=0,n=8
         4 000164   000172 600000 4                  TZE     s:7141

      124     7135    1               AND TP$STATION.QT$FORM$->QT$FORM.FP.PASS~=VLP_ACCT.ACCT#
      125     7136    2           THEN DO;

      126     7137    2               QQ_CMDBLK.MINOR_ERR = CODE_FPAD;

   7137  4 000165   000001 236000 3                  LDQ     CODE_FPAD
         4 000166   000001 756000 xsym               STQ     QQ_CMDBLK+1

      127     7138    2               CALL PRINT_ERR;
PL6.E3A0      #001=QQB$BEGIN File=QQB$BEGIN.:E05TSI                              WED 07/30/97 05:28 Page:24   

   7138  4 000167   000244 701000 4                  TSX1    PRINT_ERR
         4 000170   000000 011000                    NOP     0

      128     7139    2               RETURN;

   7139  4 000171   000000 702200 xent               TSX2  ! X66_ARET

      129     7140    2             END;
      130     7141    1           IF QQ_CMDBLK.CODE = 8 /* DEBUG */

   7141  4 000172   000006 235000 xsym               LDA     QQ_CMDBLK+6
         4 000173   000010 115007                    CMPA    8,DL
         4 000174   000200 601000 4                  TNZ     s:7143

      131     7142    1           THEN QQ_CMDBLK.S$ -> TP$STATION.FLAGS.SET_DEBUG = '1'B;

   7142  4 000175   000004 473400 xsym               LDP3    QQ_CMDBLK+4
         4 000176   010000 236003                    LDQ     4096,DU
         4 000177   300022 256100                    ORSQ    18,,PR3

      132     7143    1           IF QQ_CMDBLK.OUT$ -> OUT$BLK.NSUBLKS = 2

   7143  4 000200   100001 220100                    LDX0    1,,PR1
         4 000201   000002 100003                    CMPX0   2,DU
         4 000202   000206 601000 4                  TNZ     s:7145

      133     7144    1           THEN TP$STATION.DFLT_FP = FP;   /* BY DEFAULT                         */

   7144  4 000203   040100 100500                    MLR     fill='040'O
         4 000204   200005 000010                    ADSC9   FP,,AUTO                 cn=0,n=8
         4 000205   000004 000010                    ADSC9   4,,PR0                   cn=0,n=8

      134     7145    1           GOTO CONT;                      /* Skip the ENTRY point               */

   7145  4 000206   000211 710000 4                  TRA     CONT

PL6.E3A0      #001=QQB$BEGIN File=QQB$BEGIN.:E05TSI                              WED 07/30/97 05:28 Page:25   
      135     7146
      136     7147    1   QQB$EXIT: ENTRY;

   7147  4 000207   000000 700200 xent  QQB$EXIT     TSX0  ! X66_AUTO_0
         4 000210   000044 000000                    ZERO    36,0

   7143  4 000211                       CONT         null
      137     7148            /* This Entry point is called for QQB$OFF when COMMAND_FP is
      138     7149               not the Default form, but it has been M$LDTRC to from another
      139     7150               form.  A call to this Entry point will cause COMMAND_FP to
      140     7151               call M$EXIT which will ask TPA to restore the DeFault form.
      141     7152            */
      142     7153
      143     7154    1   CONT:   ;
      144     7155    1           VLP_STATION.STATION# = QQ_CMDBLK.S$ -> TP$STATION.ID;

   7155  4 000211   000004 470400 xsym               LDP0    QQ_CMDBLK+4
         4 000212   040000 100500                    MLR     fill='040'O
         4 000213   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         4 000214   000204 000010 2                  ADSC9   VLP_STATION              cn=0,n=8

      145     7156    1           CALL M$WRITE(FPT_WRITE) ALTRET(MON_ERR);

   7156  4 000215   000146 630400 2                  EPPR0   FPT_WRITE
         4 000216   440001 713400                    CLIMB   alt,write
         4 000217   401400 401760                    pmme    nvectors=4
         4 000220   000234 702000 4                  TSX2    MON_ERR

      146     7157    1           RETURN;

   7157  4 000221   000000 702200 xent               TSX2  ! X66_ARET

      147     7158        /* */
      148     7159    1   FID_ERR: QQ_CMDBLK.MINOR_ERR = CODE_IFP;

   7159  4 000222   000002 236000 3     FID_ERR      LDQ     CODE_IFP
         4 000223   000001 756000 xsym               STQ     QQ_CMDBLK+1
PL6.E3A0      #001=QQB$BEGIN File=QQB$BEGIN.:E05TSI                              WED 07/30/97 05:28 Page:26   

      149     7160    1           CALL PRINT_ERR;

   7160  4 000224   000244 701000 4                  TSX1    PRINT_ERR
         4 000225   000000 011000                    NOP     0

      150     7161    1           RETURN;

   7161  4 000226   000000 702200 xent               TSX2  ! X66_ARET

      151     7162    1   NO_MEM: QQ_GLOBAL.ERR = CODE_NO_POOLMEM;

   7162  4 000227   000003 236000 3     NO_MEM       LDQ     CODE_NO_POOLMEM
         4 000230   000000 756000 xsym               STQ     QQ_GLOBAL

      152     7163    1           CALL QQC$SCREECH;

   7163  4 000231   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000232   000000 701000 xent               TSX1    QQC$SCREECH
         4 000233   000000 011000                    NOP     0

      153     7164    1   MON_ERR: QQ_GLOBAL.ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;

   7164  4 000234   000000 470400 xsym  MON_ERR      LDP0    B$TCB$
         4 000235   000000 471500                    LDP1    0,,PR0
         4 000236   100102 236100                    LDQ     66,,PR1
         4 000237   000000 756000 xsym               STQ     QQ_GLOBAL

      154     7165    1           CALL QQC$SCREECH;

   7165  4 000240   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000241   000000 701000 xent               TSX1    QQC$SCREECH
         4 000242   000000 011000                    NOP     0
         4 000243   000304 710000 4                  TRA     s:7203

      155     7166                %PAGE(ARG="PRINT_ERR", PAGE=YES);

PL6.E3A0      #001=QQB$BEGIN File=QQB$BEGIN.:E05TSI                              WED 07/30/97 05:28 Page:27   
              7183    1   /***************************************************************************
              7184    1    *                                                                         *
              7185    1    *                                 PRINT_ERR                               *
              7186    1    *                                                                         *
              7187    1    ***************************************************************************/

      156     7191        /* */
      157     7192    1   PRINT_ERR: PROC;

   7192  4 000244   200036 741300       PRINT_ERR    STX1  ! MSGBLK+22,,AUTO

      158     7193    2           CALL QQC$BLDMSG_BLK(MSGBLK);

   7193  4 000245   200010 630500                    EPPR0   MSGBLK,,AUTO
         4 000246   200040 450500                    STP0    MSGBLK+24,,AUTO
         4 000247   200040 630500                    EPPR0   MSGBLK+24,,AUTO
         4 000250   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000251   000000 701000 xent               TSX1    QQC$BLDMSG_BLK
         4 000252   000000 011000                    NOP     0

      159     7194    2           CALL QQC$BLDMSG(MSGBLK);

   7194  4 000253   200010 630500                    EPPR0   MSGBLK,,AUTO
         4 000254   200040 450500                    STP0    MSGBLK+24,,AUTO
         4 000255   200040 630500                    EPPR0   MSGBLK+24,,AUTO
         4 000256   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000257   000000 701000 xent               TSX1    QQC$BLDMSG
         4 000260   000000 011000                    NOP     0

      160     7195    2           IF TP$STATION.QT$FORM$ ~= ADDR(NIL) THEN

   7195  4 000261   200003 470500                    LDP0    S$,,AUTO
         4 000262   000015 236100                    LDQ     13,,PR0
         4 000263   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 000264   000302 600000 4                  TZE     s:7201

      161     7196    3             DO;
PL6.E3A0      #001=QQB$BEGIN File=QQB$BEGIN.:E05TSI                              WED 07/30/97 05:28 Page:28   

      162     7197    3               CALL QQC$RLS_BLK(QQ_GLOBAL.POOL$, TP$STATION.QT$FORM$);

   7197  4 000265   200003 236100                    LDQ     S$,,AUTO
         4 000266   000015 036003                    ADLQ    13,DU
         4 000267   000002 235000 5                  LDA     2
         4 000270   200040 757100                    STAQ    MSGBLK+24,,AUTO
         4 000271   200040 630500                    EPPR0   MSGBLK+24,,AUTO
         4 000272   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000273   000000 701000 xent               TSX1    QQC$RLS_BLK
         4 000274   000000 011000                    NOP     0

      163     7198    3               TP$STATION.QT$FORM$ = ADDR(NIL);

   7198  4 000275   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 000276   200003 470500                    LDP0    S$,,AUTO
         4 000277   000015 756100                    STQ     13,,PR0

      164     7199    3               TP$STATION.FLAGS.IS_QT$FORM = '0'B;

   7199  4 000300   000001 236000 5                  LDQ     1
         4 000301   000022 356100                    ANSQ    18,,PR0

      165     7200    3             END;

      166     7201    2           RETURN;

   7201  4 000302   200036 221300                    LDX1  ! MSGBLK+22,,AUTO
         4 000303   000001 702211                    TSX2  ! 1,X1

      167     7202    2   END PRINT_ERR;
      168     7203    1   END QQB$BEGIN;

   7203  4 000304   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=QQB$BEGIN File=QQB$BEGIN.:E05TSI                              WED 07/30/97 05:28 Page:29   
--  Include file information  --

   Q_ERRCODE_C.:E05TOU  is referenced.
   QQ_PERR_C.:E05TOU  is referenced.
   QQ_SUBS_C.:E05TOU  is referenced.
   QT_MACROS_C.:E05TOU  is referenced.
   QQ_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   QQ_MACROS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   Q_PAGE_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure QQB$BEGIN.
PL6.E3A0      #001=QQB$BEGIN File=QQB$BEGIN.:E05TSI                              WED 07/30/97 05:28 Page:30   

 **** Variables and constants ****

  ****  Section 002  Data  QQB$BEGIN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(80)    r     1 FID                      116-0-0/d STRC(864)   r     1 FPT_FID
    24-0-0/d STRC(2088)  r     1 FPT_OPEN                 146-0-0/d STRC(432)   r     1 FPT_WRITE
   162-0-0/c STRC(72)    r     1 VLP_ACCT                 164-0-0/c STRC(288)   r     1 VLP_NAME
   174-0-0/c STRC(72)    r     1 VLP_PASS                 176-0-0/d STRC(90)    r     1 VLP_SN
   204-0-0/w STRC(288)   r     1 VLP_STATION              202-0-0/c STRC(72)    r     1 VLP_WSN
   214-0-0/d STRC(324)   r     1 VLR_FID

  ****  Section 003 RoData QQB$BEGIN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/b STRC        r     1 CODE_BIP                   1-0-0/b STRC        r     1 CODE_FPAD
     2-0-0/b STRC        r     1 CODE_IFP                   3-0-0/b STRC        r     1 CODE_NO_POOLMEM
     0-0-0/c CHAR(3)     r     1 EXIT_XACTION

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     7-0-0/w UBIN        r     1 ERR                        5-0-0/c CHAR(8)     r     1 FP
    10-0-0/w STRC(738)   r     1 MSGBLK                     3-0-0/w PTR         r     1 S$
     4-0-0/w PTR         r     1 T$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #001=QQB$BEGIN File=QQB$BEGIN.:E05TSI                              WED 07/30/97 05:28 Page:31   
     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w STRC(315)   r     1 QQ_CMDBLK
     0-0-0/d STRC(9090)  r     1 QQ_GLOBAL

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0N  NULL        r     1 M$CG                       0-0-0/w STRC(144)   r     1 OUT$BLK
     0-0-0/w ASTR(153)   r     1 OUT$SYM                    0-0-0/w STRC(828)   r     1 QT$FORM
     0-0-0/w STRC(909)   r     1 TP$STATION


   Procedure QQB$BEGIN requires 197 words for executable code.
   Procedure QQB$BEGIN requires 36 words of local(AUTO) storage.

    No errors detected in file QQB$BEGIN.:E05TSI    .
PL6.E3A0      #001=QQB$BEGIN File=QQB$BEGIN.:E05TSI                              WED 07/30/97 05:28 Page:32   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=QQB$BEGIN File=QQB$BEGIN.:E05TSI                              WED 07/30/97 05:28 Page:33   
          MINI XREF LISTING

B$ALT.CODE
      6421**DCL      6421--REDEF    6422--REDEF    6422--REDEF
B$ALT.ERR
      6422**DCL      7164>>ASSIGN
B$ALT.ERR.ERR#
      6423**DCL      6423--REDEF
B$ALT.EVID
      6422**DCL      6422--REDEF    6422--REDEF
B$TCB.ALT$
      6428**DCL      7164>>ASSIGN
B$TCB$
      6182**DCL      7164>>ASSIGN
CODE_BIP
      6685**DCL      7100>>ASSIGN
CODE_FPAD
      6664**DCL      7137>>ASSIGN
CODE_IFP
      6671**DCL      7116>>ASSIGN   7159>>ASSIGN
CODE_NO_POOLMEM
      6678**DCL      7162>>ASSIGN
CONT
      7143**LABEL    7145--GOTO
ERR
      6547**DCL      7126<>CALL
EXIT_XACTION
      6520**DCL      6884--DCLINIT  6885--DCLINIT
FID
      6494**DCL      6854--DCLINIT  7107<<ASSIGN
FID_ERR
      7159**LABEL    7108--CALLALT
FP
      6546**DCL      7120<<ASSIGN   7122<<ASSIGN   7126<>CALL     7144>>ASSIGN
PL6.E3A0      #001=QQB$BEGIN File=QQB$BEGIN.:E05TSI                              WED 07/30/97 05:28 Page:34   
FPT_FID
      6854**DCL      7108<>CALL
FPT_FID.V
      6858**DCL      6854--DCLINIT
FPT_OPEN.ACSVEH_
      6799**DCL      6800--REDEF
FPT_OPEN.ALTKEYS_
      6805**DCL      6806--REDEF    6806--REDEF
FPT_OPEN.HDR_
      6804**DCL      6805--REDEF
FPT_OPEN.TAB_
      6803**DCL      6804--REDEF
FPT_OPEN.UHL_
      6797**DCL      6798--REDEF    6798--REDEF
FPT_OPEN.V
      6806**DCL      6797--DCLINIT
FPT_OPEN.V.ASN#
      6816**DCL      6857--DCLINIT  7109>>IF
FPT_OPEN.V.FSN#
      6837**DCL      6837--REDEF    6837--REDEF
FPT_OPEN.V.RES#
      6821**DCL      6857--DCLINIT
FPT_OPEN.WSN_
      6803**DCL      6803--REDEF
FPT_WRITE
      6883**DCL      7156<>CALL
FPT_WRITE.STATION_
      6885**DCL      6885--REDEF
FPT_WRITE.V
      6886**DCL      6883--DCLINIT
FPT_WRITE.V.DVBYTE.VFC#
      6892**DCL      6892--REDEF
M$FID
       139**DCL-ENT  7108--CALL
M$WRITE
        77**DCL-ENT  7156--CALL
PL6.E3A0      #001=QQB$BEGIN File=QQB$BEGIN.:E05TSI                              WED 07/30/97 05:28 Page:35   
MON_ERR
      7164**LABEL    7156--CALLALT
MSGBLK
      6549**DCL      7101<>CALL     7102<>CALL     7193<>CALL     7194<>CALL
NO_MEM
      7162**LABEL    7124--CALLALT
OUT$BLK.NSUBLKS
      6354**DCL      7105>>IF       7134>>IF       7143>>IF
OUT$BLK.SUBLK$
      6375**DCL      7107>>ASSIGN   7107>>ASSIGN
OUT$SYM.COUNT
      6411**DCL      6414--IMP-SIZ  7107>>ASSIGN
OUT$SYM.TEXT
      6414**DCL      7107>>ASSIGN
PRINT_ERR
      7192**PROC     7117--CALL     7138--CALL     7160--CALL
QQA$BYTYPE
      6151**DCL-ENT  7126--CALL
QQC$BLDMSG
      6154**DCL-ENT  7102--CALL     7194--CALL
QQC$BLDMSG_BLK
      6153**DCL-ENT  7101--CALL     7193--CALL
QQC$GET_BLK
      6155**DCL-ENT  7124--CALL
QQC$RLS_BLK
      6156**DCL-ENT  7128--CALL     7197--CALL
QQC$SCREECH
      6152**DCL-ENT  7163--CALL     7165--CALL
QQ_CMDBLK.CODE
      5355**DCL      7141>>IF
QQ_CMDBLK.MINOR_ERR
      5355**DCL      7100<<ASSIGN   7116<<ASSIGN   7137<<ASSIGN   7159<<ASSIGN
QQ_CMDBLK.OUT$
      5355**DCL      7105>>IF       7107>>ASSIGN   7107>>ASSIGN   7134>>IF       7143>>IF
QQ_CMDBLK.S$
      5355**DCL      7097>>ASSIGN   7142>>ASSIGN   7155>>ASSIGN
PL6.E3A0      #001=QQB$BEGIN File=QQB$BEGIN.:E05TSI                              WED 07/30/97 05:28 Page:36   
QQ_GLOBAL.DS1$_BITS
      5366**DCL      5366--REDEF
QQ_GLOBAL.DS2$_BITS
      5366**DCL      5367--REDEF
QQ_GLOBAL.DS3$_BITS
      5367**DCL      5367--REDEF
QQ_GLOBAL.DS4$_BITS
      5367**DCL      5368--REDEF
QQ_GLOBAL.ERR
      5356**DCL      7162<<ASSIGN   7164<<ASSIGN
QQ_GLOBAL.POOL$
      5367**DCL      7124<>CALL     7128<>CALL     7197<>CALL
QT$FORM
      6441**DCL      7124--CALL     7126<>CALL
QT$FORM.FP.PASS
      6460**DCL      7134>>IF
S$
      6246**DCL      6248--IMP-PTR  7097<<ASSIGN   7098>>IF       7123>>IF       7124>>CALL     7126<>CALL
      7126>>CALL     7128>>CALL     7129>>ASSIGN   7130>>ASSIGN   7133>>ASSIGN   7134>>IF       7144>>ASSIGN
      7195>>IF       7197>>CALL     7198>>ASSIGN   7199>>ASSIGN
T$
      6308**DCL      6309--IMP-PTR
TP$STATION.DFLT_FP
      6253**DCL      7144<<ASSIGN
TP$STATION.FLAGS.IS_QT$FORM
      6292**DCL      7098>>IF       7130<<ASSIGN   7133<<ASSIGN   7199<<ASSIGN
TP$STATION.FLAGS.SET_DEBUG
      6286**DCL      7142<<ASSIGN
TP$STATION.ID
      6249**DCL      7155>>ASSIGN
TP$STATION.QT$FORM$
      6264**DCL      7123>>IF       7124<>CALL     7126>>CALL     7128<>CALL     7129<<ASSIGN   7134>>IF
      7195>>IF       7197<>CALL     7198<<ASSIGN
VLP_ACCT
      6933**DCL      6855--DCLINIT
VLP_ACCT.ACCT#
PL6.E3A0      #001=QQB$BEGIN File=QQB$BEGIN.:E05TSI                              WED 07/30/97 05:28 Page:37   
      6933**DCL      7134>>IF
VLP_NAME
      6960**DCL      6855--DCLINIT
VLP_NAME.L#
      6960**DCL      7109>>IF
VLP_NAME.NAME#
      6960**DCL      7120>>ASSIGN
VLP_PASS
      6973**DCL      6856--DCLINIT
VLP_SN
      6986**DCL      6856--DCLINIT
VLP_STATION
      7013**DCL      6885--DCLINIT
VLP_STATION.MSGIDXT
      7023**DCL      7026--REDEF
VLP_STATION.STATION#
      7017**DCL      7155<<ASSIGN
VLP_WSN
      6999**DCL      6856--DCLINIT
VLR_FID
      7064**DCL      6858--DCLINIT
VLR_FID.PASS
      7064**DCL      7109>>IF
VLR_FID.RES
      7064**DCL      7109>>IF
VLR_FID.SN
      7064**DCL      7109>>IF
VLR_FID.WSN
      7064**DCL      7109>>IF
