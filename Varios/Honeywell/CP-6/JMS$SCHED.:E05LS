VERSION E05

PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:1    
        1        1        /*M* JMS$SCHED The batch scheduler's scheduling algorithm.                   */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=6,IND=0,IDT=2,SDI=2,CTI=0,ENU=0,AND,DCI=4,CSU=2,ECU=4,THI=0,DTI=0,STI=1
                 7        ,IAD=0,PRB */
        8        8        JMS$SCHED: PROC;
        9        9
       10       10
       11       11
       12       12        /**/
       13       13        /* INCLUDES */
       14       14        /**/
       15       15        %INCLUDE JM_SUBS_C;                     /* Scheduler queue index definitions  */
       16      121        %INCLUDE JM$STRUCT;                     /* Mbs table definitions              */
       17      866        %INCLUDE JMC_DATA_R;                    /* Mbs-resident static global data    */
       18      881        %INCLUDE B_SEGIDS_C;                    /* System segid definitions           */
       19     1420        %INCLUDE B_MACROS_C;                    /* System macro definitions           */
       20     1531        %INCLUDE B_STRINGS_C;
       21     1660        %INCLUDE CP_6;
       22     1741        %INCLUDE FR$RESLIST;
       23     1764 S      %INCLUDE B$JIT_C;
       24     1765        %INCLUDE JM_SCODE_C;
       25     1792
       26     1793
       27     1794
       28     1795        /**/
       29     1796        /* DCBS */
       30     1797        /**/
       31     1798    1   DCL M$STATUS DCB;
       32     1799
       33     1800
       34     1801
       35     1802        /**/
       36     1803        /* BASED */
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:2    
       37     1804        /**/
       38     1805    1   DCL AWORD UBIN WORD BASED ALIGNED;
       39     1806    1   DCL PBITS BIT(16) BASED ALIGNED;
       40     1807    1   DCL APTR$ PTR BASED ALIGNED;
       41     1808        %JM_IF (FPTN=JM$IF,STCLASS=BASED);
       42     1966        %JM_SN (FPTN=JM$SN,STCLASS=BASED);
       43     2005        %JM_RES (FPTN=JM$RES,STCLASS=BASED);
       44     2042        %JM_PART (FPTN=JM$PART,STCLASS=BASED);
       45     2097        %B$JIT0;
       46     2186        %U$JIT1;
       47     2260        %M$JIT2;
       48     2270        %F$JIT3X;
       49     2273        %S$JIT4;
       50     2279        %J$JIT5X;
       51     2282        %A$JIT6;
       52     2292
       53     2293
       54     2294
       55     2295        /**/
       56     2296        /* AUTO */
       57     2297        /**/
       58     2298    1   DCL ERR UBIN WORD;
       59     2299    1   DCL PMASK BIT(16);
       60     2300    1   DCL ABIT BIT(16);
       61     2301    1   DCL PRIO SBIN;
       62     2302    1   DCL PART SBIN;
       63     2303    1   DCL TBL$ PTR;
       64     2304    1   DCL CJ$ PTR;
       65     2305    1   DCL TCJ$ PTR;
       66     2306    1   DCL PRIO_INC BIT(1);
       67     2307    1   DCL LAST_NOT_SCHED$ PTR;
       68     2308    1   DCL LAST_INC$ PTR;
       69     2309    1   DCL SCHEDULED BIT(1);
       70     2310    1   DCL PPTR$ PTR;
       71     2311
       72     2312
       73     2313
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:3    
       74     2314        /**/
       75     2315        /* STATIC */
       76     2316        /**/
       77     2317    1   DCL CUTS UBIN STATIC DALIGNED;
       78     2318        %VLR_NXTUSR (FPTN=USERINFO,STCLASS=STATIC);
       79     2331        %FPT_NXTUSR(FPTN=GET_USERNUM,
       80     2332                    RESULTS=USERINFO);
       81     2345        %FPT_TIME(SOURCE=CLOCK,
       82     2346                  DEST=UTS,
       83     2347                  TSTAMP=CUTS);
       84     2366        %FPT_RESCTL(FPTN=ACQUIRE_RES,
       85     2367                    PSEUDO=S_RESLIST,
       86     2368                    PRES=P_RESLIST,
       87     2369                    RPSN=PSNLIST);
       88     2386        %FPT_RESCTL(FPTN=GET_RESLIST,
       89     2387                    PSEUDO=S_RESLIST,
       90     2388                    PRES=P_RESLIST,
       91     2389                    RPSN=PSNLIST,
       92     2390                    MBSDISP=YES);
       93     2407        %FR$RESLIST(FPTN=S_RESLIST,
       94     2408                    STCLASS=STATIC);
       95     2420        %VLP_PRES(FPTN=P_RESLIST,N=256);
       96     2436        %VLP_RPSN(FPTN=PSNLIST,N=128);
       97     2451        %FPT_TRUNC(DCB=M$STATUS);
       98     2465
       99     2466
      100     2467
      101     2468        /**/
      102     2469        /* SYMREFS */
      103     2470        /**/
      104     2471    1   DCL B$JIT$ PTR SYMREF;
      105     2472
      106     2473
      107     2474
      108     2475        /**/
      109     2476        /* ENTREFS */
      110     2477        /**/
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:4    
      111     2478    1   DCL FOI$CRASH     ENTRY(3) ALTRET;
      112     2479    1   DCL JMJ$REWRITE_FIT ENTRY(1) ALTRET;
      113     2480    1   DCL JMN$LOCK      ENTRY(1) ALTRET;
      114     2481    1   DCL JMN$UNLOCK    ENTRY(1);
      115     2482    1   DCL JMU$GETPMASK  ENTRY(2);
      116     2483    1   DCL JMU$MOVE_IF   ENTRY(3);
      117     2484    1   DCL JMU$REPART    ENTRY;
      118     2485    1   DCL JMU$SETSEG    ENTRY(2);
      119     2486
      120     2487
      121     2488
      122     2489        /**/
      123     2490        /* SUBS */
      124     2491        /**/
      125     2492        %SUB F_JM='1215'O;
      126     2493        %SUB M_S='23'O;
      127     2494        %SUB CJ$IF = CJ$->JM$IF;
      128     2495        %SUB U$JIT = UJIT$->B$JIT;
      129     2496        %EJECT;
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:5    
      130     2497        /* TRY_SETUP is an internal routine to attempt to run a batch job  */
      131     2498        /* for which a useable partition has been selected.                */
      132     2499    1   TRY_SETUP: PROC;
      133     2500    2   DCL PP(0:2) UBIN WORD;
      134     2501    2   DCL SW SBIN;
      135     2502    2   DCL I SBIN;
      136     2503    2   DCL TOT_THIS_ACCT UBIN;
      137     2504    2   DCL TOT_THIS_PART UBIN;
      138     2505    2   DCL JOB$ PTR;
      139     2506    2   DCL UJIT$ PTR;
      140     2507    2   DCL M$UC$ PTR;
      141     2508    2   DCL UROS$ PTR;
      142     2509    2   DCL AWORD UBIN WORD BASED ALIGNED;
      143     2510        /**/
      144     2511    2   DCL NOSCHED SBIN STATIC INIT(0);
      145     2512        /**/
      146     2513    2   DCL JCM$SETU ENTRY(5) ALTRET;
      147     2514    2   DCL JCM$RELJ ENTRY(2);
      148     2515    2   DCL JCM$MAKEU ENTRY(1);
      149     2516    2   DCL JMU$MOVE_IF ENTRY(3);
      150     2517        /**/
      151     2518        /* Check for the various account controls:
      152     2519                . Whether the job explicitly said, 'ACCOUNT'
      153     2520                . Whether we're at the global jobs-per-account limit
      154     2521                . Whether the partition is at its # jobs-per-account limit */
      155     2522    2         TOT_THIS_ACCT = 0;
      156     2523    2         TOT_THIS_PART = 0;
      157     2524    2         JOB$ = JMC_CH.HRUN$;
      158     2525    3           DO WHILE (JOB$ ~= ADDR(NIL));
      159     2526    3           IF CJ$IF.ACCT = JOB$->JM$IF.ACCT THEN
      160     2527    4             DO;
      161     2528    4             IF JOB$->JM$IF.FLG.ACC THEN RETURN;
      162     2529    4             TOT_THIS_ACCT = TOT_THIS_ACCT + 1;
      163     2530    4             IF JOB$->JM$IF.PNUM = PART
      164     2531    4             THEN TOT_THIS_PART = TOT_THIS_PART + 1;
      165     2532    4             END;
      166     2533    3           JOB$ = JOB$->JM$IF.LNK$;
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:6    
      167     2534    3           END;
      168     2535    2         IF TOT_THIS_ACCT > 0 THEN
      169     2536    2          IF (TOT_THIS_ACCT >= JMC_MAX1ACCT$->AWORD) OR
      170     2537    2          (TOT_THIS_PART >= PPTR$->JM$PART.MAX1ACCT) OR
      171     2538    2          (CJ$IF.FLG.ACC) THEN RETURN;
      172     2539        /* Check for regular ORDER.                                        */
      173     2540    2         IF CJ$IF.FLG.O1 THEN
      174     2541    3           DO SW = JM_Q$RUN DOWNTO 1;
      175     2542    3           JOB$=JMC_CHAINS.HEAD$(SW);
      176     2543    4             DO WHILE (JOB$ ~= ADDR(NIL));
      177     2544        /* If there's another job of this account, which was submitted     */
      178     2545        /* earlier and which also specified ORDER, then the candidate      */
      179     2546        /* job is unschedulable.                                           */
      180     2547    4             IF  JOB$->JM$IF.FLG.O1
      181     2548    4             AND CJ$IF.SUBMIT_TIME > JOB$->JM$IF.SUBMIT_TIME
      182     2549    4             AND CJ$IF.ACCT = JOB$->JM$IF.ACCT THEN
      183     2550    4              RETURN;
      184     2551    4             JOB$ = JOB$->JM$IF.LNK$;
      185     2552    4             END;
      186     2553    3           END;
      187     2554        /* Make sure all of a job's resources are available.               */
      188     2555        /* NOTE: This function is not now performed explicitly prior to    */
      189     2556        /* executing the M$MBS pmme to acquire resources. If performance   */
      190     2557        /* dictates, however, this is where the list of available resour-  */
      191     2558        /* ces should be scanned to determine if further processing of     */
      192     2559        /* the candidate job is warranted.                                 */
      193     2560        /**/
      194     2561        /* Do packset usage checks:       */
      195     2562        /*     1) exclusive owned packset must not currently be in use.    */
      196     2563        /*     2) shared packset must not currently be in use as exclusive */
      197     2564        /* NOTE: This function also is not performed explicitly now, but   */
      198     2565        /* is handled instead by M$MBS, which altret's if this job cannot  */
      199     2566        /* acquire its packsets in the manner requested.                   */
      200     2567        /**/
      201     2568        /* Finally, allocate the required resources to this job.           */
      202     2569        /*   Build the lists of pseudos, physical resources, and packsets  */
      203     2570        /*   required by this job in the format required by M$MBS.         */
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:7    
      204     2571    2         S_RESLIST.MEMORY = CJ$IF.RRT(JM_RX$MEM);
      205     2572    2         S_RESLIST.DISK = CJ$IF.RRT(JM_RX$DP);
      206     2573    2         S_RESLIST.TAPES = CJ$IF.RRT(JM_RX$MT);
      207     2574    2         S_RESLIST.OTHER = 0;
      208     2575    3           DO I = 0 TO 7;
      209     2576    3           S_RESLIST.SULST(I) = CJ$IF.RRT(JM_RX$PR1 + I);
      210     2577    3           END;
      211     2578    2         TBL$ = CJ$IF.VRLIST$;
      212     2579    2         P_RESLIST.NN# = CJ$IF.MAXVR;
      213     2580    3           DO I = 0 TO CJ$IF.MAXVR - 1;
      214     2581    3           P_RESLIST.PRLIST.RNME.TYP(I) = TBL$->JM$RES.TYPE;
      215     2582    3           P_RESLIST.PRLIST.RNME.NUM(I) = TBL$->JM$RES.VNUM;
      216     2583    3           P_RESLIST.PRLIST.ATTR#(I) = TBL$->JM$RES.ATTRS;
      217     2584    3           TBL$ = TBL$->JM$RES.NXT$;
      218     2585    3           END;
      219     2586    2         TBL$ = CJ$IF.XLNK$;
      220     2587    2         PSNLIST.NN# = CJ$IF.MAXPSN;
      221     2588    2         I = 0;
      222     2589    3           DO WHILE (TBL$ ~= ADDR(NIL));
      223     2590    3           PSNLIST.RPLIST.PSN#(I) = TBL$->JM$SN.TXT;
      224     2591    3           IF TBL$->JM$SN.FLGS.EXCL
      225     2592    3           THEN PSNLIST.RPLIST.USAGE#(I) = 2; /* 2 = exclusive               */
      226     2593    3           ELSE PSNLIST.RPLIST.USAGE#(I) = 1; /* 1 = shared/public           */
      227     2594    3           I = I + 1;
      228     2595    3           TBL$ = TBL$->JM$SN.NXT$;
      229     2596    3           END;
      230     2597    2         TBL$ = CJ$IF.SLNK$;
      231     2598    3           DO WHILE (TBL$ ~= ADDR(NIL));
      232     2599    3           PSNLIST.RPLIST.PSN#(I) = TBL$->JM$SN.TXT;
      233     2600    3           IF TBL$->JM$SN.FLGS.EXCL
      234     2601    3           THEN PSNLIST.RPLIST.USAGE#(I) = 2; /* 2 = exclusive               */
      235     2602    3           ELSE PSNLIST.RPLIST.USAGE#(I) = 1; /* 1 = shared/public           */
      236     2603    3           I = I + 1;
      237     2604    3           TBL$ = TBL$->JM$SN.NXT$;
      238     2605    3           END;
      239     2606    2         ACQUIRE_RES.V.SYSID# = CJ$IF.SYSID;
      240     2607        /* Schedule this turkey */
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:8    
      241     2608    2         CALL JCM$SETU(%M_BATCH#,UJIT$,M$UC$,UROS$,PP) ALTRET(RTN);
      242     2609    2         CALL M$MBS(ACQUIRE_RES) ALTRET(NORES);
      243     2610    2         U$JIT.USER = USERINFO.USR;
      244     2611    2         U$JIT.SYSID = CJ$IF.SYSID;
      245     2612    2         U$JIT.UNAME = CJ$IF.UNAME;
      246     2613    2         U$JIT.ACCN = CJ$IF.ACCT;
      247     2614    2         U$JIT.FACCN = CJ$IF.ACCT;
      248     2615    2         U$JIT.PNR = PART;
      249     2616    2         U$JIT.OUTPRIO = CJ$IF.PRIO;
      250     2617    2         U$JIT.MRT = CJ$IF.TIM;
      251     2618    2         U$JIT.JOBNAME = CJ$IF.JNAME;
      252     2619    2         U$JIT.WOO = CJ$IF.WSN;
      253     2620    2         U$JIT.CURSUDO = S_RESLIST.SULST;
      254     2621    2         U$JIT.MAXCORE = S_RESLIST.MEMORY;
      255     2622    2         U$JIT.RESCORE = S_RESLIST.MEMORY;
      256     2623    2         U$JIT.OLTA = '0'B;
      257     2624    2         U$JIT.ORIGINATOR_MODE = CJ$IF.ORIGINATOR_MODE;
      258     2625    2         U$JIT.ORIGINATOR_PORT = CJ$IF.ORIGINATOR_PORT;
      259     2626    2         IF CJ$IF.FLG.RR2
      260     2627    2         THEN U$JIT.RERUN = '1'B;
      261     2628    2         ELSE U$JIT.RERUN = '0'B;
      262     2629        /* Now that the job's newly acquired jit is set up, put him onto the */
      263     2630        /* 'running job' queue and chain him to his partition's list of      */
      264     2631        /* currently running jobs.                                           */
      265     2632    2         CALL JMU$MOVE_IF(PRIO,JM_Q$RUN,CJ$);
      266     2633    2         CJ$IF.NXTJ$ = PPTR$->JM$PART.JOB$;
      267     2634    2         PPTR$->JM$PART.JOB$  = CJ$;
      268     2635        /*  Bump counters associated with this partition & put user# and   */
      269     2636        /* partition # into the scheduled job file entry.                  */
      270     2637              %INCR(VAR=PPTR$->JM$PART.CUR);
      271     2640              %INCR(VAR=PPTR$->JM$PART.CPTOT);
      272     2643              %INCR(VAR=PPTR$->JM$PART.TOT);
      273     2646    2         CJ$IF.U = USERINFO.USR;
      274     2647    2         CJ$IF.PNUM = PART;
      275     2648        /* Now, finally, at long last, run this guy!!!                     */
      276     2649    2         CALL JMJ$REWRITE_FIT(CJ$);
      277     2650        /* Record time execution began */
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:9    
      278     2651    2         CALL M$TIME(FPT_TIME);
      279     2652    2         CJ$IF.START_TIME = CUTS;
      280     2653    2         CALL JCM$MAKEU(PP);
      281     2654    2         SCHEDULED = %TRUE;
      282     2655    2   RTN:  RETURN;
      283     2656    2   NORES:;
      284     2657    2         CALL JCM$RELJ (PP,3);
      285     2658    2         NOSCHED=NOSCHED+1;
      286     2659    2         RETURN;
      287     2660    2   END TRY_SETUP;
      288     2661        %EJECT;
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:10   
      289     2662        /**/
      290     2663        /* Don't even attempt to schedule until it's ok */
      291     2664    1         IF NOT JM_SCHEDOK THEN RETURN;
      292     2665        /*   Try to lock the partition tables. If already locked, then they */
      293     2666        /*   are being modified by control, so give up trying to schedule.  */
      294     2667    1         CALL JMN$LOCK(JMC_LOCK$->AWORD) ALTRET(OK);
      295     2668        /*   If partition definitions have been changed, call repart to    */
      296     2669        /*   do any adjustment of the scheduler queues.                    */
      297     2670    1         IF JMC_CHNG$->PBITS ~= '0'B THEN CALL JMU$REPART;
      298     2671        /*   Get a bit mask for each pertition which is neither locked nor */
      299     2672        /*   full, whose minimum resources are available.                  */
      300     2673    1         SCHEDULED = %TRUE;               /* Flag so we get an initial usr #    */
      301     2674        /*   Get the current list of free resources: */
      302     2675    1         CALL M$MBS(GET_RESLIST) ALTRET(RM_ERR);
      303     2676    1         CALL JMU$GETPMASK(PMASK,ADDR(S_RESLIST));
      304     2677    1         USERINFO.USR = 0;               /* In case we go straight to 'DONE'   */
      305     2678    1         PRIO = JM_Q$P15;                /* Start with priority 15 ('f')       */
      306     2679        /*   The big loop: go through the priority queues.                 */
      307     2680    1   PRIORITY_LOOP:
      308     2681    2           DO WHILE (PRIO > JM_Q$P0);
      309     2682    2           IF JMC_CHAINS.HEAD$(PRIO) = ADDR(NIL) THEN GOTO NXTPRIO;
      310     2683    2           LAST_NOT_SCHED$ = ADDR(NIL);
      311     2684    2           LAST_INC$ = ADDR(NIL);
      312     2685    2           PRIO_INC = '0'B;
      313     2686    2           ABIT = '1000000000000000'B;
      314     2687    2           PART = 0;
      315     2688        /*   Loop through the partitions   */
      316     2689    2   PARTITION_LOOP:
      317     2690    3             DO WHILE (ABIT ~= '0'B);
      318     2691        /*   Get a pointer to the partition table entry for this partition */
      319     2692    3             PPTR$ = PINCRW(JMC_PPTR$,PART);
      320     2693    3             PPTR$ = PPTR$->APTR$;
      321     2694    3             CALL JMU$SETSEG(PPTR$,%SPCL1SID);
      322     2695    3             IF NOT (ABIT & PMASK) THEN GOTO NXT_PART;
      323     2696    3             CJ$ = JMC_CHAINS.HEAD$(PRIO);
      324     2697        /*   Loop through the jobs in this priority queue:  */
      325     2698    4               DO WHILE (CJ$ ~= ADDR(NIL));
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:11   
      326     2699    4               TCJ$ = CJ$IF.LNK$;
      327     2700    4               IF SCHEDULED THEN
      328     2701    5                 DO;              /* Make checks & get user # for new job    */
      329     2702        /*   Check to see if anything can/should be done:                  */
      330     2703    5                 IF (JMC_BUAIS$->AWORD - JMC_BUIS$->AWORD)*JMC_BFIS$->AWORD = 0
      331     2704    5                 THEN EXIT PARTITION_LOOP;
      332     2705    5                 USERINFO.MODE = %M_BATCH#;
      333     2706    5                 USERINFO.ERR = 0;
      334     2707    5                 CALL M$NXTUSR(GET_USERNUM); /* Reserve a user slot            */
      335     2708    5                 IF USERINFO.ERR ~= 0 THEN GOTO DONE; /* None avail            */
      336     2709    5                 CALL M$MBS(GET_RESLIST) ALTRET(RM_ERR);
      337     2710    5                 CALL JMU$GETPMASK(PMASK,ADDR(S_RESLIST));
      338     2711    5                 SCHEDULED = %FALSE;
      339     2712    5                 END;
      340     2713        /*   If the job will run in the current partition, try to set it up */
      341     2714    4               IF (CJ$IF.PART & ABIT) & PMASK THEN CALL TRY_SETUP;
      342     2715    4               IF SCHEDULED THEN
      343     2716    4                IF LAST_NOT_SCHED$ ~= ADDR(NIL) THEN
      344     2717    5                  DO;
      345     2718    5                  PRIO_INC = '1'B;
      346     2719    5                  IF LAST_INC$ = ADDR(NIL)
      347     2720    5                  THEN LAST_INC$ = LAST_NOT_SCHED$;
      348     2721    5                  END;
      349     2722    4                ELSE;
      350     2723    4               ELSE LAST_NOT_SCHED$ = CJ$;
      351     2724    4               CJ$ = TCJ$;
      352     2725    4               END;
      353     2726    3   NXT_PART: PART = PART + 1;
      354     2727        /*   Go through hell to shift a bit                                */
      355     2728    3             ABIT = BINBIT(BITBIN(ABIT)/2,16);
      356     2729    3             END PARTITION_LOOP;
      357     2730        /*  If we tried to schedule a priority 'F' job and failed then exit. */
      358     2731        /*  since we won't run anything else until the priority 'F' job's    */
      359     2732        /*  resources become available.                                      */
      360     2733    2           IF (PRIO = JM_Q$P15) AND NOT SCHEDULED THEN GOTO DONE;
      361     2734        /* If we bypassed any jobs, try giving them a priority boost */
      362     2735    2           IF PRIO_INC AND (PRIO < JM_Q$P14) AND (JMC_PI$->AWORD > 0) THEN
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:12   
      363     2736    2   PRIORITY_INCREMENT_LOOP:
      364     2737    3             DO;
      365     2738    3             CJ$ = JMC_CHAINS.HEAD$(PRIO);
      366     2739    4               DO WHILE (CJ$ ~= ADDR(NIL));
      367     2740    4               TCJ$ = CJ$IF.LNK$;
      368     2741    4               IF NOT (CJ$IF.FLG.NPI OR CJ$IF.FLG.O1) THEN
      369     2742    5                 DO;
      370     2743    5                 CJ$IF.PI = CJ$IF.PI + JMC_PI$->AWORD;
      371     2744    5                 IF (CJ$IF.PI > 511-JMC_PI$->AWORD) OR
      372     2745    5                 (CJ$IF.PI < JMC_PI$->AWORD) THEN
      373     2746    6                   DO;
      374     2747    6                   CALL JMU$MOVE_IF(PRIO,PRIO+1,CJ$);
      375     2748    6                   CJ$IF.PRIO = CJ$IF.PRIO + 1;
      376     2749    6                   CALL JMJ$REWRITE_FIT(CJ$);
      377     2750    6                   END;
      378     2751    5                 END;
      379     2752    4               IF CJ$ = LAST_INC$ THEN EXIT PRIORITY_INCREMENT_LOOP;
      380     2753    4               CJ$ = TCJ$;
      381     2754    4               END;
      382     2755    3             END PRIORITY_INCREMENT_LOOP;
      383     2756    2   NXTPRIO: PRIO = PRIO - 1;
      384     2757    2           END PRIORITY_LOOP;
      385     2758        /**/
      386     2759        /*   Unlock the partition tables and return user # if it wasn't used */
      387     2760    1   DONE: ;
      388     2761    1         CALL JMN$UNLOCK(JMC_LOCK$->AWORD);
      389     2762    1         IF NOT SCHEDULED THEN
      390     2763    2           DO;
      391     2764    2           IF USERINFO.USR ~= 0 THEN
      392     2765    3             DO;
      393     2766    3             USERINFO.MODE = - %M_BATCH#;
      394     2767    3             CALL M$NXTUSR(GET_USERNUM);
      395     2768    3             END;
      396     2769    2           SCHEDULED = %TRUE;
      397     2770    2           END;
      398     2771    1   OK:
      399     2772    1         CALL M$TRUNC(FPT_TRUNC) ALTRET(SHEESH);
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:13   
      400     2773    1   SHEESH:
      401     2774    1         RETURN;
      402     2775        /**/
      403     2776        /**/
      404     2777    1   RM_ERR: ;
      405     2778        /*S*    SCREECH_CODE:   JMS-S$JM238                                */
      406     2779        /*S*   TYPE:   SCREECH                                             */
      407     2780        /*S*   MESSAGE: Can't get free resource list for job scheduling.   */
      408     2781    1         CALL FOI$CRASH (%S$JM238,F_JM,M_S);
      409     2782        /**/
      410     2783    1   END JMS$SCHED;

PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:14   
--  Include file information  --

   JM_SCODE_C.:E05TOU  is referenced.
   FR$RESLIST.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   JMC_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   JM$STRUCT.:E05TOU  is referenced.
   JM_SUBS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure JMS$SCHED.

   Procedure JMS$SCHED requires 619 words for executable code.
   Procedure JMS$SCHED requires 34 words of local(AUTO) storage.

    No errors detected in file JMS$SCHED.:E05TSI    .

PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:15   

 Object Unit name= JMS$SCHED                                  File name= JMS$SCHED.:E05TOU
 UTS= JUL 29 '97 23:30:58.44 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$STATUS
    2   Data  even  none  1615   3117  JMS$SCHED
    3   Proc  even  none   619   1153  JMS$SCHED
    4  RoData even  none    16     20  JMS$SCHED

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes            yes      Std        0  JMS$SCHED
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:16   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 JMN$LOCK
         yes           Std       2 JMU$GETPMASK
         yes           Std       2 JMU$SETSEG
         yes           Std       1 JMN$UNLOCK
 yes     yes           Std       3 FOI$CRASH
         yes           Std       0 JMU$REPART
         yes           Std       3 JMU$MOVE_IF
 yes     yes           Std       1 JMJ$REWRITE_FIT
 yes     yes           Std       5 JCM$SETU
         yes           Std       3 JMU$MOVE_IF
         yes           Std       1 JCM$MAKEU
         yes           Std       2 JCM$RELJ
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     JMC_CH                                JMC_LOCK$                             JMC_CHNG$
     JMC_BUAIS$                            JMC_BUIS$                             JMC_BFIS$
     JMC_PPTR$                             JMC_PI$                               JMC_MAX1ACCT$
     JM_SCHEDOK                            M$UC                                  M$STATUS
     B$JIT$                                B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:17   


        1        1        /*M* JMS$SCHED The batch scheduler's scheduling algorithm.                   */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7       /*X* DMC,PLM=6,IND=0,IDT=2,SDI=2,CTI=0,ENU=0,AND,DCI=4,CSU=2,ECU=4,THI=0,DTI=0,STI=1
                 7        ,IAD=0,PRB */
        8        8        JMS$SCHED: PROC;

      8  3 000000   000000 700200 xent  JMS$SCHED    TSX0  ! X66_AUTO_0
         3 000001   000042 000000                    ZERO    34,0
         3 000002   000550 710000 3                  TRA     s:2664

        9        9
       10       10
       11       11
       12       12        /**/
       13       13        /* INCLUDES */
       14       14        /**/
       15       15        %INCLUDE JM_SUBS_C;                     /* Scheduler queue index definitions  */
       16      121        %INCLUDE JM$STRUCT;                     /* Mbs table definitions              */
       17      866        %INCLUDE JMC_DATA_R;                    /* Mbs-resident static global data    */
       18      881        %INCLUDE B_SEGIDS_C;                    /* System segid definitions           */
       19     1420        %INCLUDE B_MACROS_C;                    /* System macro definitions           */
       20     1531        %INCLUDE B_STRINGS_C;
       21     1660        %INCLUDE CP_6;
       22     1741        %INCLUDE FR$RESLIST;
       23     1764 S      %INCLUDE B$JIT_C;
       24     1765        %INCLUDE JM_SCODE_C;
       25     1792
       26     1793
       27     1794
       28     1795        /**/
       29     1796        /* DCBS */
       30     1797        /**/
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:18   
       31     1798    1   DCL M$STATUS DCB;
       32     1799
       33     1800
       34     1801
       35     1802        /**/
       36     1803        /* BASED */
       37     1804        /**/
       38     1805    1   DCL AWORD UBIN WORD BASED ALIGNED;
       39     1806    1   DCL PBITS BIT(16) BASED ALIGNED;
       40     1807    1   DCL APTR$ PTR BASED ALIGNED;
       41     1808        %JM_IF (FPTN=JM$IF,STCLASS=BASED);
       42     1966        %JM_SN (FPTN=JM$SN,STCLASS=BASED);
       43     2005        %JM_RES (FPTN=JM$RES,STCLASS=BASED);
       44     2042        %JM_PART (FPTN=JM$PART,STCLASS=BASED);
       45     2097        %B$JIT0;
       46     2186        %U$JIT1;
       47     2260        %M$JIT2;
       48     2270        %F$JIT3X;
       49     2273        %S$JIT4;
       50     2279        %J$JIT5X;
       51     2282        %A$JIT6;
       52     2292
       53     2293
       54     2294
       55     2295        /**/
       56     2296        /* AUTO */
       57     2297        /**/
       58     2298    1   DCL ERR UBIN WORD;
       59     2299    1   DCL PMASK BIT(16);
       60     2300    1   DCL ABIT BIT(16);
       61     2301    1   DCL PRIO SBIN;
       62     2302    1   DCL PART SBIN;
       63     2303    1   DCL TBL$ PTR;
       64     2304    1   DCL CJ$ PTR;
       65     2305    1   DCL TCJ$ PTR;
       66     2306    1   DCL PRIO_INC BIT(1);
       67     2307    1   DCL LAST_NOT_SCHED$ PTR;
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:19   
       68     2308    1   DCL LAST_INC$ PTR;
       69     2309    1   DCL SCHEDULED BIT(1);
       70     2310    1   DCL PPTR$ PTR;
       71     2311
       72     2312
       73     2313
       74     2314        /**/
       75     2315        /* STATIC */
       76     2316        /**/
       77     2317    1   DCL CUTS UBIN STATIC DALIGNED;
       78     2318        %VLR_NXTUSR (FPTN=USERINFO,STCLASS=STATIC);
       79     2331        %FPT_NXTUSR(FPTN=GET_USERNUM,
       80     2332                    RESULTS=USERINFO);
       81     2345        %FPT_TIME(SOURCE=CLOCK,
       82     2346                  DEST=UTS,
       83     2347                  TSTAMP=CUTS);
       84     2366        %FPT_RESCTL(FPTN=ACQUIRE_RES,
       85     2367                    PSEUDO=S_RESLIST,
       86     2368                    PRES=P_RESLIST,
       87     2369                    RPSN=PSNLIST);
       88     2386        %FPT_RESCTL(FPTN=GET_RESLIST,
       89     2387                    PSEUDO=S_RESLIST,
       90     2388                    PRES=P_RESLIST,
       91     2389                    RPSN=PSNLIST,
       92     2390                    MBSDISP=YES);
       93     2407        %FR$RESLIST(FPTN=S_RESLIST,
       94     2408                    STCLASS=STATIC);
       95     2420        %VLP_PRES(FPTN=P_RESLIST,N=256);
       96     2436        %VLP_RPSN(FPTN=PSNLIST,N=128);
       97     2451        %FPT_TRUNC(DCB=M$STATUS);
       98     2465
       99     2466
      100     2467
      101     2468        /**/
      102     2469        /* SYMREFS */
      103     2470        /**/
      104     2471    1   DCL B$JIT$ PTR SYMREF;
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:20   
      105     2472
      106     2473
      107     2474
      108     2475        /**/
      109     2476        /* ENTREFS */
      110     2477        /**/
      111     2478    1   DCL FOI$CRASH     ENTRY(3) ALTRET;
      112     2479    1   DCL JMJ$REWRITE_FIT ENTRY(1) ALTRET;
      113     2480    1   DCL JMN$LOCK      ENTRY(1) ALTRET;
      114     2481    1   DCL JMN$UNLOCK    ENTRY(1);
      115     2482    1   DCL JMU$GETPMASK  ENTRY(2);
      116     2483    1   DCL JMU$MOVE_IF   ENTRY(3);
      117     2484    1   DCL JMU$REPART    ENTRY;
      118     2485    1   DCL JMU$SETSEG    ENTRY(2);
      119     2486
      120     2487
      121     2488
      122     2489        /**/
      123     2490        /* SUBS */
      124     2491        /**/
      125     2492        %SUB F_JM='1215'O;
      126     2493        %SUB M_S='23'O;
      127     2494        %SUB CJ$IF = CJ$->JM$IF;
      128     2495        %SUB U$JIT = UJIT$->B$JIT;
      129     2496        %EJECT;
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:21   
      130     2497        /* TRY_SETUP is an internal routine to attempt to run a batch job  */
      131     2498        /* for which a useable partition has been selected.                */
      132     2499    1   TRY_SETUP: PROC;

   2499  3 000003   200020 741300       TRY_SETUP    STX1  ! PPTR$+1,,AUTO

      133     2500    2   DCL PP(0:2) UBIN WORD;
      134     2501    2   DCL SW SBIN;
      135     2502    2   DCL I SBIN;
      136     2503    2   DCL TOT_THIS_ACCT UBIN;
      137     2504    2   DCL TOT_THIS_PART UBIN;
      138     2505    2   DCL JOB$ PTR;
      139     2506    2   DCL UJIT$ PTR;
      140     2507    2   DCL M$UC$ PTR;
      141     2508    2   DCL UROS$ PTR;
      142     2509    2   DCL AWORD UBIN WORD BASED ALIGNED;
      143     2510        /**/
      144     2511    2   DCL NOSCHED SBIN STATIC INIT(0);
      145     2512        /**/
      146     2513    2   DCL JCM$SETU ENTRY(5) ALTRET;
      147     2514    2   DCL JCM$RELJ ENTRY(2);
      148     2515    2   DCL JCM$MAKEU ENTRY(1);
      149     2516    2   DCL JMU$MOVE_IF ENTRY(3);
      150     2517        /**/
      151     2518        /* Check for the various account controls:
      152     2519                . Whether the job explicitly said, 'ACCOUNT'
      153     2520                . Whether we're at the global jobs-per-account limit
      154     2521                . Whether the partition is at its # jobs-per-account limit */
      155     2522    2         TOT_THIS_ACCT = 0;

   2522  3 000004   200026 450100                    STZ     TOT_THIS_ACCT,,AUTO

      156     2523    2         TOT_THIS_PART = 0;

   2523  3 000005   200027 450100                    STZ     TOT_THIS_PART,,AUTO

      157     2524    2         JOB$ = JMC_CH.HRUN$;
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:22   

   2524  3 000006   000054 236000 xsym               LDQ     JMC_CH+44
         3 000007   200030 756100                    STQ     JOB$,,AUTO

      158     2525    3           DO WHILE (JOB$ ~= ADDR(NIL));

   2525  3 000010   000041 710000 3                  TRA     s:2534

      159     2526    3           IF CJ$IF.ACCT = JOB$->JM$IF.ACCT THEN

   2526  3 000011   200011 470500                    LDP0    CJ$,,AUTO
         3 000012   200030 471500                    LDP1    JOB$,,AUTO
         3 000013   040100 106500                    CMPC    fill='040'O
         3 000014   000015 000010                    ADSC9   13,,PR0                  cn=0,n=8
         3 000015   100015 000010                    ADSC9   13,,PR1                  cn=0,n=8
         3 000016   000037 601000 3                  TNZ     s:2533

      160     2527    4             DO;

      161     2528    4             IF JOB$->JM$IF.FLG.ACC THEN RETURN;

   2528  3 000017   100013 236100                    LDQ     11,,PR1
         3 000020   040000 316007                    CANQ    16384,DL
         3 000021   000024 600000 3                  TZE     s:2529

   2528  3 000022   200020 221300                    LDX1  ! PPTR$+1,,AUTO
         3 000023   000001 702211                    TSX2  ! 1,X1

      162     2529    4             TOT_THIS_ACCT = TOT_THIS_ACCT + 1;

   2529  3 000024   200026 235100                    LDA     TOT_THIS_ACCT,,AUTO
         3 000025   000001 035007                    ADLA    1,DL
         3 000026   200026 755100                    STA     TOT_THIS_ACCT,,AUTO

      163     2530    4             IF JOB$->JM$IF.PNUM = PART

   2530  3 000027   100006 236100                    LDQ     6,,PR1
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:23   
         3 000030   000011 772000                    QRL     9
         3 000031   000777 376007                    ANQ     511,DL
         3 000032   200007 116100                    CMPQ    PART,,AUTO
         3 000033   000037 601000 3                  TNZ     s:2533

      164     2531    4             THEN TOT_THIS_PART = TOT_THIS_PART + 1;

   2531  3 000034   200027 235100                    LDA     TOT_THIS_PART,,AUTO
         3 000035   000001 035007                    ADLA    1,DL
         3 000036   200027 755100                    STA     TOT_THIS_PART,,AUTO

      165     2532    4             END;

      166     2533    3           JOB$ = JOB$->JM$IF.LNK$;

   2533  3 000037   100000 236100                    LDQ     0,,PR1
         3 000040   200030 756100                    STQ     JOB$,,AUTO

      167     2534    3           END;

   2534  3 000041   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000042   000011 601000 3                  TNZ     s:2526

      168     2535    2         IF TOT_THIS_ACCT > 0 THEN

   2535  3 000043   200026 235100                    LDA     TOT_THIS_ACCT,,AUTO
         3 000044   000065 600000 3                  TZE     s:2540

      169     2536    2          IF (TOT_THIS_ACCT >= JMC_MAX1ACCT$->AWORD) OR

   2536  3 000045   000000 470400 xsym               LDP0    JMC_MAX1ACCT$
         3 000046   200026 236100                    LDQ     TOT_THIS_ACCT,,AUTO
         3 000047   000000 116100                    CMPQ    0,,PR0
         3 000050   000063 603000 3                  TRC     s:2538
         3 000051   200017 471500                    LDP1    PPTR$,,AUTO
         3 000052   100005 236100                    LDQ     5,,PR1
         3 000053   000777 376007                    ANQ     511,DL
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:24   
         3 000054   200027 116100                    CMPQ    TOT_THIS_PART,,AUTO
         3 000055   000063 602000 3                  TNC     s:2538
         3 000056   000063 600000 3                  TZE     s:2538
         3 000057   200011 473500                    LDP3    CJ$,,AUTO
         3 000060   300013 236100                    LDQ     11,,PR3
         3 000061   040000 316007                    CANQ    16384,DL
         3 000062   000065 600000 3                  TZE     s:2540

      170     2537    2          (TOT_THIS_PART >= PPTR$->JM$PART.MAX1ACCT) OR
      171     2538    2          (CJ$IF.FLG.ACC) THEN RETURN;

   2538  3 000063   200020 221300                    LDX1  ! PPTR$+1,,AUTO
         3 000064   000001 702211                    TSX2  ! 1,X1

      172     2539        /* Check for regular ORDER.                                        */
      173     2540    2         IF CJ$IF.FLG.O1 THEN

   2540  3 000065   200011 470500                    LDP0    CJ$,,AUTO
         3 000066   000013 236100                    LDQ     11,,PR0
         3 000067   400000 316007                    CANQ    -131072,DL
         3 000070   000125 600000 3                  TZE     s:2571

      174     2541    3           DO SW = JM_Q$RUN DOWNTO 1;

   2541  3 000071   000026 235007                    LDA     22,DL
         3 000072   200024 755100                    STA     SW,,AUTO

      175     2542    3           JOB$=JMC_CHAINS.HEAD$(SW);

   2542  3 000073   200024 235100                    LDA     SW,,AUTO
         3 000074   000001 735000                    ALS     1
         3 000075   000000 236005 xsym               LDQ     JMC_CH,AL
         3 000076   200030 756100                    STQ     JOB$,,AUTO

      176     2543    4             DO WHILE (JOB$ ~= ADDR(NIL));

   2543  3 000077   000120 710000 3                  TRA     s:2552
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:25   

      177     2544        /* If there's another job of this account, which was submitted     */
      178     2545        /* earlier and which also specified ORDER, then the candidate      */
      179     2546        /* job is unschedulable.                                           */
      180     2547    4             IF  JOB$->JM$IF.FLG.O1

   2547  3 000100   200030 470500                    LDP0    JOB$,,AUTO
         3 000101   000013 236100                    LDQ     11,,PR0
         3 000102   400000 316007                    CANQ    -131072,DL
         3 000103   000116 600000 3                  TZE     s:2551
         3 000104   200011 471500                    LDP1    CJ$,,AUTO
         3 000105   000007 236100                    LDQ     7,,PR0
         3 000106   100007 116100                    CMPQ    7,,PR1
         3 000107   000116 603000 3                  TRC     s:2551
         3 000110   040100 106500                    CMPC    fill='040'O
         3 000111   100015 000010                    ADSC9   13,,PR1                  cn=0,n=8
         3 000112   000015 000010                    ADSC9   13,,PR0                  cn=0,n=8
         3 000113   000116 601000 3                  TNZ     s:2551

      181     2548    4             AND CJ$IF.SUBMIT_TIME > JOB$->JM$IF.SUBMIT_TIME
      182     2549    4             AND CJ$IF.ACCT = JOB$->JM$IF.ACCT THEN
      183     2550    4              RETURN;

   2550  3 000114   200020 221300                    LDX1  ! PPTR$+1,,AUTO
         3 000115   000001 702211                    TSX2  ! 1,X1

      184     2551    4             JOB$ = JOB$->JM$IF.LNK$;

   2551  3 000116   000000 236100                    LDQ     0,,PR0
         3 000117   200030 756100                    STQ     JOB$,,AUTO

      185     2552    4             END;

   2552  3 000120   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000121   000100 601000 3                  TNZ     s:2547

      186     2553    3           END;
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:26   

   2553  3 000122   000001 336007                    LCQ     1,DL
         3 000123   200024 056100                    ASQ     SW,,AUTO
         3 000124   000073 605400 3                  TPNZ    s:2542

      187     2554        /* Make sure all of a job's resources are available.               */
      188     2555        /* NOTE: This function is not now performed explicitly prior to    */
      189     2556        /* executing the M$MBS pmme to acquire resources. If performance   */
      190     2557        /* dictates, however, this is where the list of available resour-  */
      191     2558        /* ces should be scanned to determine if further processing of     */
      192     2559        /* the candidate job is warranted.                                 */
      193     2560        /**/
      194     2561        /* Do packset usage checks:       */
      195     2562        /*     1) exclusive owned packset must not currently be in use.    */
      196     2563        /*     2) shared packset must not currently be in use as exclusive */
      197     2564        /* NOTE: This function also is not performed explicitly now, but   */
      198     2565        /* is handled instead by M$MBS, which altret's if this job cannot  */
      199     2566        /* acquire its packsets in the manner requested.                   */
      200     2567        /**/
      201     2568        /* Finally, allocate the required resources to this job.           */
      202     2569        /*   Build the lists of pseudos, physical resources, and packsets  */
      203     2570        /*   required by this job in the format required by M$MBS.         */
      204     2571    2         S_RESLIST.MEMORY = CJ$IF.RRT(JM_RX$MEM);

   2571  3 000125   200011 470500                    LDP0    CJ$,,AUTO
         3 000126   000041 220100                    LDX0    33,,PR0
         3 000127   000072 740000 2                  STX0    S_RESLIST+2

      205     2572    2         S_RESLIST.DISK = CJ$IF.RRT(JM_RX$DP);

   2572  3 000130   000041 721100                    LXL1    33,,PR0
         3 000131   000072 441000 2                  SXL1    S_RESLIST+2

      206     2573    2         S_RESLIST.TAPES = CJ$IF.RRT(JM_RX$MT);

   2573  3 000132   000042 222100                    LDX2    34,,PR0
         3 000133   000073 742000 2                  STX2    S_RESLIST+3
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:27   

      207     2574    2         S_RESLIST.OTHER = 0;

   2574  3 000134   000000 223003                    LDX3    0,DU
         3 000135   000073 443000 2                  SXL3    S_RESLIST+3

      208     2575    3           DO I = 0 TO 7;

   2575  3 000136   200025 450100                    STZ     I,,AUTO

      209     2576    3           S_RESLIST.SULST(I) = CJ$IF.RRT(JM_RX$PR1 + I);

   2576  3 000137   200025 235100                    LDA     I,,AUTO
         3 000140   000001 735000                    ALS     1
         3 000141   200011 470500                    LDP0    CJ$,,AUTO
         3 000142   200025 236100                    LDQ     I,,AUTO
         3 000143   000006 101505                    MRL     fill='000'O
         3 000144   000043 000002                    ADSC9   35,A,PR0                 cn=0,n=2
         3 000145   000074 000001 2                  ADSC9   S_RESLIST+4,Q            cn=0,n=1

      210     2577    3           END;

   2577  3 000146   200025 054100                    AOS     I,,AUTO
         3 000147   200025 235100                    LDA     I,,AUTO
         3 000150   000007 115007                    CMPA    7,DL
         3 000151   000137 604400 3                  TMOZ    s:2576

      211     2578    2         TBL$ = CJ$IF.VRLIST$;

   2578  3 000152   000002 236100                    LDQ     2,,PR0
         3 000153   200010 756100                    STQ     TBL$,,AUTO

      212     2579    2         P_RESLIST.NN# = CJ$IF.MAXVR;

   2579  3 000154   000014 236100                    LDQ     12,,PR0
         3 000155   000022 772000                    QRL     18
         3 000156   000777 376007                    ANQ     511,DL
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:28   
         3 000157   000076 756000 2                  STQ     P_RESLIST

      213     2580    3           DO I = 0 TO CJ$IF.MAXVR - 1;

   2580  3 000160   200025 450100                    STZ     I,,AUTO
         3 000161   000176 710000 3                  TRA     s:2585+1

      214     2581    3           P_RESLIST.PRLIST.RNME.TYP(I) = TBL$->JM$RES.TYPE;

   2581  3 000162   200025 235100                    LDA     I,,AUTO
         3 000163   000002 735000                    ALS     2
         3 000164   200010 470500                    LDP0    TBL$,,AUTO
         3 000165   000000 220100                    LDX0    0,,PR0
         3 000166   000100 740005 2                  STX0    P_RESLIST+2,AL

      215     2582    3           P_RESLIST.PRLIST.RNME.NUM(I) = TBL$->JM$RES.VNUM;

   2582  3 000167   000000 721100                    LXL1    0,,PR0
         3 000170   000100 441005 2                  SXL1    P_RESLIST+2,AL

      216     2583    3           P_RESLIST.PRLIST.ATTR#(I) = TBL$->JM$RES.ATTRS;

   2583  3 000171   000001 220100                    LDX0    1,,PR0
         3 000172   000101 440005 2                  SXL0    P_RESLIST+3,AL

      217     2584    3           TBL$ = TBL$->JM$RES.NXT$;

   2584  3 000173   000002 236100                    LDQ     2,,PR0
         3 000174   200010 756100                    STQ     TBL$,,AUTO

      218     2585    3           END;

   2585  3 000175   200025 054100                    AOS     I,,AUTO
         3 000176   200011 470500                    LDP0    CJ$,,AUTO
         3 000177   000014 236100                    LDQ     12,,PR0
         3 000200   000022 772000                    QRL     18
         3 000201   000777 376007                    ANQ     511,DL
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:29   
         3 000202   200025 116100                    CMPQ    I,,AUTO
         3 000203   000162 605400 3                  TPNZ    s:2581

      219     2586    2         TBL$ = CJ$IF.XLNK$;

   2586  3 000204   000003 236100                    LDQ     3,,PR0
         3 000205   200010 756100                    STQ     TBL$,,AUTO

      220     2587    2         PSNLIST.NN# = CJ$IF.MAXPSN;

   2587  3 000206   000014 236100                    LDQ     12,,PR0
         3 000207   000033 772000                    QRL     27
         3 000210   002104 756000 2                  STQ     PSNLIST

      221     2588    2         I = 0;

   2588  3 000211   200025 450100                    STZ     I,,AUTO

      222     2589    3           DO WHILE (TBL$ ~= ADDR(NIL));

   2589  3 000212   000245 710000 3                  TRA     s:2596

      223     2590    3           PSNLIST.RPLIST.PSN#(I) = TBL$->JM$SN.TXT;

   2590  3 000213   200025 235100                    LDA     I,,AUTO
         3 000214   000002 735000                    ALS     2
         3 000215   000002 735000                    ALS     2
         3 000216   200010 470500                    LDP0    TBL$,,AUTO
         3 000217   040005 100500                    MLR     fill='040'O
         3 000220   000000 000006                    ADSC9   0,,PR0                   cn=0,n=6
         3 000221   002106 000006 2                  ADSC9   PSNLIST+2,A              cn=0,n=6

      224     2591    3           IF TBL$->JM$SN.FLGS.EXCL

   2591  3 000222   000001 236100                    LDQ     1,,PR0
         3 000223   200000 316007                    CANQ    65536,DL
         3 000224   000234 600000 3                  TZE     s:2593
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:30   

      225     2592    3           THEN PSNLIST.RPLIST.USAGE#(I) = 2; /* 2 = exclusive               */

   2592  3 000225   200025 235100                    LDA     I,,AUTO
         3 000226   000002 735000                    ALS     2
         3 000227   002107 236005 2                  LDQ     PSNLIST+3,AL
         3 000230   000000 376000 4                  ANQ     0
         3 000231   002000 276007                    ORQ     1024,DL
         3 000232   002107 756005 2                  STQ     PSNLIST+3,AL
         3 000233   000242 710000 3                  TRA     s:2594

      226     2593    3           ELSE PSNLIST.RPLIST.USAGE#(I) = 1; /* 1 = shared/public           */

   2593  3 000234   200025 235100                    LDA     I,,AUTO
         3 000235   000002 735000                    ALS     2
         3 000236   002107 236005 2                  LDQ     PSNLIST+3,AL
         3 000237   000000 376000 4                  ANQ     0
         3 000240   001000 276007                    ORQ     512,DL
         3 000241   002107 756005 2                  STQ     PSNLIST+3,AL

      227     2594    3           I = I + 1;

   2594  3 000242   200025 054100                    AOS     I,,AUTO

      228     2595    3           TBL$ = TBL$->JM$SN.NXT$;

   2595  3 000243   000002 236100                    LDQ     2,,PR0
         3 000244   200010 756100                    STQ     TBL$,,AUTO

      229     2596    3           END;

   2596  3 000245   200010 236100                    LDQ     TBL$,,AUTO
         3 000246   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000247   000213 601000 3                  TNZ     s:2590

      230     2597    2         TBL$ = CJ$IF.SLNK$;

PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:31   
   2597  3 000250   200011 470500                    LDP0    CJ$,,AUTO
         3 000251   000004 236100                    LDQ     4,,PR0
         3 000252   200010 756100                    STQ     TBL$,,AUTO

      231     2598    3           DO WHILE (TBL$ ~= ADDR(NIL));

   2598  3 000253   000306 710000 3                  TRA     s:2605

      232     2599    3           PSNLIST.RPLIST.PSN#(I) = TBL$->JM$SN.TXT;

   2599  3 000254   200025 235100                    LDA     I,,AUTO
         3 000255   000002 735000                    ALS     2
         3 000256   000002 735000                    ALS     2
         3 000257   200010 470500                    LDP0    TBL$,,AUTO
         3 000260   040005 100500                    MLR     fill='040'O
         3 000261   000000 000006                    ADSC9   0,,PR0                   cn=0,n=6
         3 000262   002106 000006 2                  ADSC9   PSNLIST+2,A              cn=0,n=6

      233     2600    3           IF TBL$->JM$SN.FLGS.EXCL

   2600  3 000263   000001 236100                    LDQ     1,,PR0
         3 000264   200000 316007                    CANQ    65536,DL
         3 000265   000275 600000 3                  TZE     s:2602

      234     2601    3           THEN PSNLIST.RPLIST.USAGE#(I) = 2; /* 2 = exclusive               */

   2601  3 000266   200025 235100                    LDA     I,,AUTO
         3 000267   000002 735000                    ALS     2
         3 000270   002107 236005 2                  LDQ     PSNLIST+3,AL
         3 000271   000000 376000 4                  ANQ     0
         3 000272   002000 276007                    ORQ     1024,DL
         3 000273   002107 756005 2                  STQ     PSNLIST+3,AL
         3 000274   000303 710000 3                  TRA     s:2603

      235     2602    3           ELSE PSNLIST.RPLIST.USAGE#(I) = 1; /* 1 = shared/public           */

   2602  3 000275   200025 235100                    LDA     I,,AUTO
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:32   
         3 000276   000002 735000                    ALS     2
         3 000277   002107 236005 2                  LDQ     PSNLIST+3,AL
         3 000300   000000 376000 4                  ANQ     0
         3 000301   001000 276007                    ORQ     512,DL
         3 000302   002107 756005 2                  STQ     PSNLIST+3,AL

      236     2603    3           I = I + 1;

   2603  3 000303   200025 054100                    AOS     I,,AUTO

      237     2604    3           TBL$ = TBL$->JM$SN.NXT$;

   2604  3 000304   000002 236100                    LDQ     2,,PR0
         3 000305   200010 756100                    STQ     TBL$,,AUTO

      238     2605    3           END;

   2605  3 000306   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000307   000254 601000 3                  TNZ     s:2599

      239     2606    2         ACQUIRE_RES.V.SYSID# = CJ$IF.SYSID;

   2606  3 000310   200011 470500                    LDP0    CJ$,,AUTO
         3 000311   000014 720100                    LXL0    12,,PR0
         3 000312   000041 440000 2                  SXL0    ACQUIRE_RES+13

      240     2607        /* Schedule this turkey */
      241     2608    2         CALL JCM$SETU(%M_BATCH#,UJIT$,M$UC$,UROS$,PP) ALTRET(RTN);

   2608  3 000313   200021 631500                    EPPR1   PP,,AUTO
         3 000314   200040 451500                    STP1    UROS$+5,,AUTO
         3 000315   200033 633500                    EPPR3   UROS$,,AUTO
         3 000316   200037 453500                    STP3    UROS$+4,,AUTO
         3 000317   200032 634500                    EPPR4   M$UC$,,AUTO
         3 000320   200036 454500                    STP4    UROS$+3,,AUTO
         3 000321   200031 635500                    EPPR5   UJIT$,,AUTO
         3 000322   200035 455500                    STP5    UROS$+2,,AUTO
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:33   
         3 000323   000001 236000 4                  LDQ     1
         3 000324   200034 756100                    STQ     UROS$+1,,AUTO
         3 000325   200034 630500                    EPPR0   UROS$+1,,AUTO
         3 000326   000023 631400 xsym               EPPR1   B_VECTNIL+19
         3 000327   000000 701000 xent               TSX1    JCM$SETU
         3 000330   000533 702000 3                  TSX2    RTN

      242     2609    2         CALL M$MBS(ACQUIRE_RES) ALTRET(NORES);

   2609  3 000331   000024 630400 2                  EPPR0   ACQUIRE_RES
         3 000332   550001 713400                    CLIMB   alt,+53249
         3 000333   402400 401760                    pmme    nvectors=6
         3 000334   000535 702000 3                  TSX2    NORES

      243     2610    2         U$JIT.USER = USERINFO.USR;

   2610  3 000335   200031 470500                    LDP0    UJIT$,,AUTO
         3 000336   000005 236000 2                  LDQ     USERINFO+3
         3 000337   000022 736000                    QLS     18
         3 000340   000000 552120                    STBQ    0,'20'O,PR0

      244     2611    2         U$JIT.SYSID = CJ$IF.SYSID;

   2611  3 000341   200011 470500                    LDP0    CJ$,,AUTO
         3 000342   000014 720100                    LXL0    12,,PR0
         3 000343   200031 471500                    LDP1    UJIT$,,AUTO
         3 000344   100000 440100                    SXL0    0,,PR1

      245     2612    2         U$JIT.UNAME = CJ$IF.UNAME;

   2612  3 000345   200011 470500                    LDP0    CJ$,,AUTO
         3 000346   200031 471500                    LDP1    UJIT$,,AUTO
         3 000347   040100 100500                    MLR     fill='040'O
         3 000350   000017 000014                    ADSC9   15,,PR0                  cn=0,n=12
         3 000351   100003 000014                    ADSC9   3,,PR1                   cn=0,n=12

      246     2613    2         U$JIT.ACCN = CJ$IF.ACCT;
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:34   

   2613  3 000352   200011 470500                    LDP0    CJ$,,AUTO
         3 000353   200031 471500                    LDP1    UJIT$,,AUTO
         3 000354   040100 100500                    MLR     fill='040'O
         3 000355   000015 000010                    ADSC9   13,,PR0                  cn=0,n=8
         3 000356   100001 000010                    ADSC9   1,,PR1                   cn=0,n=8

      247     2614    2         U$JIT.FACCN = CJ$IF.ACCT;

   2614  3 000357   200011 470500                    LDP0    CJ$,,AUTO
         3 000360   200031 471500                    LDP1    UJIT$,,AUTO
         3 000361   040100 100500                    MLR     fill='040'O
         3 000362   000015 000010                    ADSC9   13,,PR0                  cn=0,n=8
         3 000363   100006 000010                    ADSC9   6,,PR1                   cn=0,n=8

      248     2615    2         U$JIT.PNR = PART;

   2615  3 000364   200031 470500                    LDP0    UJIT$,,AUTO
         3 000365   200007 236100                    LDQ     PART,,AUTO
         3 000366   000033 736000                    QLS     27
         3 000367   000302 552140                    STBQ    194,'40'O,PR0

      249     2616    2         U$JIT.OUTPRIO = CJ$IF.PRIO;

   2616  3 000370   200011 471500                    LDP1    CJ$,,AUTO
         3 000371   100013 236100                    LDQ     11,,PR1
         3 000372   000011 772000                    QRL     9
         3 000373   000022 552110                    STBQ    18,'10'O,PR0

      250     2617    2         U$JIT.MRT = CJ$IF.TIM;

   2617  3 000374   100012 235100                    LDA     10,,PR1
         3 000375   200031 470500                    LDP0    UJIT$,,AUTO
         3 000376   000276 755100                    STA     190,,PR0

      251     2618    2         U$JIT.JOBNAME = CJ$IF.JNAME;

PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:35   
   2618  3 000377   100056 236100                    LDQ     46,,PR1
         3 000400   000033 772000                    QRL     27
         3 000401   000000 620006                    EAX0    0,QL
         3 000402   040100 100540                    MLR     fill='040'O
         3 000403   100056 200010                    ADSC9   46,,PR1                  cn=1,n=*X0
         3 000404   000156 200037                    ADSC9   110,,PR0                 cn=1,n=31

      252     2619    2         U$JIT.WOO = CJ$IF.WSN;

   2619  3 000405   040100 100500                    MLR     fill='040'O
         3 000406   100024 000010                    ADSC9   20,,PR1                  cn=0,n=8
         3 000407   000010 000010                    ADSC9   8,,PR0                   cn=0,n=8

      253     2620    2         U$JIT.CURSUDO = S_RESLIST.SULST;

   2620  3 000410   000074 237000 2                  LDAQ    S_RESLIST+4
         3 000411   200031 470500                    LDP0    UJIT$,,AUTO
         3 000412   000334 757100                    STAQ    220,,PR0

      254     2621    2         U$JIT.MAXCORE = S_RESLIST.MEMORY;

   2621  3 000413   000072 220000 2                  LDX0    S_RESLIST+2
         3 000414   000210 740100                    STX0    136,,PR0

      255     2622    2         U$JIT.RESCORE = S_RESLIST.MEMORY;

   2622  3 000415   000072 235000 2                  LDA     S_RESLIST+2
         3 000416   000022 771000                    ARL     18
         3 000417   000336 755100                    STA     222,,PR0

      256     2623    2         U$JIT.OLTA = '0'B;

   2623  3 000420   000002 236000 4                  LDQ     2
         3 000421   000333 356100                    ANSQ    219,,PR0

      257     2624    2         U$JIT.ORIGINATOR_MODE = CJ$IF.ORIGINATOR_MODE;

PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:36   
   2624  3 000422   200011 471500                    LDP1    CJ$,,AUTO
         3 000423   100047 236100                    LDQ     39,,PR1
         3 000424   000016 772000                    QRL     14
         3 000425   000325 676100                    ERQ     213,,PR0
         3 000426   000017 376003                    ANQ     15,DU
         3 000427   000325 656100                    ERSQ    213,,PR0

      258     2625    2         U$JIT.ORIGINATOR_PORT = CJ$IF.ORIGINATOR_PORT;

   2625  3 000430   000100 100500                    MLR     fill='000'O
         3 000431   100050 000014                    ADSC9   40,,PR1                  cn=0,n=12
         3 000432   000337 000014                    ADSC9   223,,PR0                 cn=0,n=12

      259     2626    2         IF CJ$IF.FLG.RR2

   2626  3 000433   100013 236100                    LDQ     11,,PR1
         3 000434   010000 316007                    CANQ    4096,DL
         3 000435   000441 600000 3                  TZE     s:2628

      260     2627    2         THEN U$JIT.RERUN = '1'B;

   2627  3 000436   000400 236003                    LDQ     256,DU
         3 000437   000302 256100                    ORSQ    194,,PR0
         3 000440   000443 710000 3                  TRA     s:2632

      261     2628    2         ELSE U$JIT.RERUN = '0'B;

   2628  3 000441   000003 236000 4                  LDQ     3
         3 000442   000302 356100                    ANSQ    194,,PR0

      262     2629        /* Now that the job's newly acquired jit is set up, put him onto the */
      263     2630        /* 'running job' queue and chain him to his partition's list of      */
      264     2631        /* currently running jobs.                                           */
      265     2632    2         CALL JMU$MOVE_IF(PRIO,JM_Q$RUN,CJ$);

   2632  3 000443   200011 633500                    EPPR3   CJ$,,AUTO
         3 000444   200036 453500                    STP3    UROS$+3,,AUTO
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:37   
         3 000445   000005 236000 4                  LDQ     5
         3 000446   200035 756100                    STQ     UROS$+2,,AUTO
         3 000447   200006 634500                    EPPR4   PRIO,,AUTO
         3 000450   200034 454500                    STP4    UROS$+1,,AUTO
         3 000451   200034 630500                    EPPR0   UROS$+1,,AUTO
         3 000452   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 000453   000000 701000 xent               TSX1    JMU$MOVE_IF
         3 000454   000000 011000                    NOP     0

      266     2633    2         CJ$IF.NXTJ$ = PPTR$->JM$PART.JOB$;

   2633  3 000455   200017 470500                    LDP0    PPTR$,,AUTO
         3 000456   000006 236100                    LDQ     6,,PR0
         3 000457   200011 471500                    LDP1    CJ$,,AUTO
         3 000460   100001 756100                    STQ     1,,PR1

      267     2634    2         PPTR$->JM$PART.JOB$  = CJ$;

   2634  3 000461   200011 236100                    LDQ     CJ$,,AUTO
         3 000462   200017 470500                    LDP0    PPTR$,,AUTO
         3 000463   000006 756100                    STQ     6,,PR0

      268     2635        /*  Bump counters associated with this partition & put user# and   */
      269     2636        /* partition # into the scheduled job file entry.                  */
      270     2637              %INCR(VAR=PPTR$->JM$PART.CUR);

   2638  3 000464   200017 470500                    LDP0    PPTR$,,AUTO
         3 000465   000003 236100                    LDQ     3,,PR0
         3 000466   000001 036003                    ADLQ    1,DU
         3 000467   000003 552120                    STBQ    3,'20'O,PR0

      271     2640              %INCR(VAR=PPTR$->JM$PART.CPTOT);

   2641  3 000470   200017 470500                    LDP0    PPTR$,,AUTO
         3 000471   000003 720100                    LXL0    3,,PR0
         3 000472   000001 621010                    EAX1    1,X0
         3 000473   000003 441100                    SXL1    3,,PR0
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:38   

      272     2643              %INCR(VAR=PPTR$->JM$PART.TOT);

   2644  3 000474   200017 470500                    LDP0    PPTR$,,AUTO
         3 000475   000004 220100                    LDX0    4,,PR0
         3 000476   000001 621010                    EAX1    1,X0
         3 000477   000004 741100                    STX1    4,,PR0

      273     2646    2         CJ$IF.U = USERINFO.USR;

   2646  3 000500   000005 720000 2                  LXL0    USERINFO+3
         3 000501   200011 470500                    LDP0    CJ$,,AUTO
         3 000502   000005 740100                    STX0    5,,PR0

      274     2647    2         CJ$IF.PNUM = PART;

   2647  3 000503   200011 470500                    LDP0    CJ$,,AUTO
         3 000504   200007 236100                    LDQ     PART,,AUTO
         3 000505   000011 736000                    QLS     9
         3 000506   000006 552110                    STBQ    6,'10'O,PR0

      275     2648        /* Now, finally, at long last, run this guy!!!                     */
      276     2649    2         CALL JMJ$REWRITE_FIT(CJ$);

   2649  3 000507   200011 630500                    EPPR0   CJ$,,AUTO
         3 000510   200034 450500                    STP0    UROS$+1,,AUTO
         3 000511   200034 630500                    EPPR0   UROS$+1,,AUTO
         3 000512   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000513   000000 701000 xent               TSX1    JMJ$REWRITE_FIT
         3 000514   000000 011000                    NOP     0

      277     2650        /* Record time execution began */
      278     2651    2         CALL M$TIME(FPT_TIME);

   2651  3 000515   000010 630400 2                  EPPR0   FPT_TIME
         3 000516   020004 713400                    CLIMB   8196
         3 000517   402000 401760                    pmme    nvectors=5
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:39   

      279     2652    2         CJ$IF.START_TIME = CUTS;

   2652  3 000520   200011 470500                    LDP0    CJ$,,AUTO
         3 000521   000000 235000 2                  LDA     CUTS
         3 000522   000010 755100                    STA     8,,PR0

      280     2653    2         CALL JCM$MAKEU(PP);

   2653  3 000523   200021 630500                    EPPR0   PP,,AUTO
         3 000524   200034 450500                    STP0    UROS$+1,,AUTO
         3 000525   200034 630500                    EPPR0   UROS$+1,,AUTO
         3 000526   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000527   000000 701000 xent               TSX1    JCM$MAKEU
         3 000530   000000 011000                    NOP     0

      281     2654    2         SCHEDULED = %TRUE;

   2654  3 000531   400000 236003                    LDQ     -131072,DU
         3 000532   200016 756100                    STQ     SCHEDULED,,AUTO

      282     2655    2   RTN:  RETURN;

   2655  3 000533   200020 221300       RTN          LDX1  ! PPTR$+1,,AUTO
         3 000534   000001 702211                    TSX2  ! 1,X1

   2654  3 000535                       NORES        null
      283     2656    2   NORES:;
      284     2657    2         CALL JCM$RELJ (PP,3);

   2657  3 000535   000006 236000 4                  LDQ     6
         3 000536   200035 756100                    STQ     UROS$+2,,AUTO
         3 000537   200021 630500                    EPPR0   PP,,AUTO
         3 000540   200034 450500                    STP0    UROS$+1,,AUTO
         3 000541   200034 630500                    EPPR0   UROS$+1,,AUTO
         3 000542   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000543   000000 701000 xent               TSX1    JCM$RELJ
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:40   
         3 000544   000000 011000                    NOP     0

      285     2658    2         NOSCHED=NOSCHED+1;

   2658  3 000545   003116 054000 2                  AOS     NOSCHED

      286     2659    2         RETURN;

   2659  3 000546   200020 221300                    LDX1  ! PPTR$+1,,AUTO
         3 000547   000001 702211                    TSX2  ! 1,X1

      287     2660    2   END TRY_SETUP;
      288     2661        %EJECT;
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:41   
      289     2662        /**/
      290     2663        /* Don't even attempt to schedule until it's ok */
      291     2664    1         IF NOT JM_SCHEDOK THEN RETURN;

   2664  3 000550   000000 234000 xsym               SZN     JM_SCHEDOK
         3 000551   000553 604000 3                  TMI     s:2667

   2664  3 000552   000000 702200 xent               TSX2  ! X66_ARET

      292     2665        /*   Try to lock the partition tables. If already locked, then they */
      293     2666        /*   are being modified by control, so give up trying to schedule.  */
      294     2667    1         CALL JMN$LOCK(JMC_LOCK$->AWORD) ALTRET(OK);

   2667  3 000553   000000 630400 xsym               EPPR0   JMC_LOCK$
         3 000554   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000555   000000 701000 xent               TSX1    JMN$LOCK
         3 000556   001141 702000 3                  TSX2    OK

      295     2668        /*   If partition definitions have been changed, call repart to    */
      296     2669        /*   do any adjustment of the scheduler queues.                    */
      297     2670    1         IF JMC_CHNG$->PBITS ~= '0'B THEN CALL JMU$REPART;

   2670  3 000557   000000 470400 xsym               LDP0    JMC_CHNG$
         3 000560   000000 236100                    LDQ     0,,PR0
         3 000561   777774 316003                    CANQ    -4,DU
         3 000562   000566 600000 3                  TZE     s:2673

   2670  3 000563   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000564   000000 701000 xent               TSX1    JMU$REPART
         3 000565   000000 011000                    NOP     0

      298     2671        /*   Get a bit mask for each pertition which is neither locked nor */
      299     2672        /*   full, whose minimum resources are available.                  */
      300     2673    1         SCHEDULED = %TRUE;               /* Flag so we get an initial usr #    */

   2673  3 000566   400000 236003                    LDQ     -131072,DU
         3 000567   200016 756100                    STQ     SCHEDULED,,AUTO
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:42   

      301     2674        /*   Get the current list of free resources: */
      302     2675    1         CALL M$MBS(GET_RESLIST) ALTRET(RM_ERR);

   2675  3 000570   000046 630400 2                  EPPR0   GET_RESLIST
         3 000571   550001 713400                    CLIMB   alt,+53249
         3 000572   402400 401760                    pmme    nvectors=6
         3 000573   001146 702000 3                  TSX2    RM_ERR

      303     2676    1         CALL JMU$GETPMASK(PMASK,ADDR(S_RESLIST));

   2676  3 000574   000007 236000 4                  LDQ     7
         3 000575   200034 756100                    STQ     UROS$+1,,AUTO
         3 000576   200034 630500                    EPPR0   UROS$+1,,AUTO
         3 000577   200037 450500                    STP0    UROS$+4,,AUTO
         3 000600   200004 631500                    EPPR1   PMASK,,AUTO
         3 000601   200036 451500                    STP1    UROS$+3,,AUTO
         3 000602   200036 630500                    EPPR0   UROS$+3,,AUTO
         3 000603   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000604   000000 701000 xent               TSX1    JMU$GETPMASK
         3 000605   000000 011000                    NOP     0

      304     2677    1         USERINFO.USR = 0;               /* In case we go straight to 'DONE'   */

   2677  3 000606   000005 450000 2                  STZ     USERINFO+3

      305     2678    1         PRIO = JM_Q$P15;                /* Start with priority 15 ('f')       */

   2678  3 000607   000025 235007                    LDA     21,DL
         3 000610   200006 755100                    STA     PRIO,,AUTO

      306     2679        /*   The big loop: go through the priority queues.                 */
      307     2680    1   PRIORITY_LOOP:
      308     2681    2           DO WHILE (PRIO > JM_Q$P0);

   2681  3 000611   000006 115007       PRIORITY_LO* CMPA    6,DL
         3 000612   001122 604400 3                  TMOZ    DONE
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:43   

      309     2682    2           IF JMC_CHAINS.HEAD$(PRIO) = ADDR(NIL) THEN GOTO NXTPRIO;

   2682  3 000613   200006 235100                    LDA     PRIO,,AUTO
         3 000614   000001 735000                    ALS     1
         3 000615   000000 236005 xsym               LDQ     JMC_CH,AL
         3 000616   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000617   001115 600000 3                  TZE     NXTPRIO

      310     2683    2           LAST_NOT_SCHED$ = ADDR(NIL);

   2683  3 000620   000001 236000 xsym               LDQ     B_VECTNIL+1
         3 000621   200014 756100                    STQ     LAST_NOT_SCHED$,,AUTO

      311     2684    2           LAST_INC$ = ADDR(NIL);

   2684  3 000622   200015 756100                    STQ     LAST_INC$,,AUTO

      312     2685    2           PRIO_INC = '0'B;

   2685  3 000623   200013 450100                    STZ     PRIO_INC,,AUTO

      313     2686    2           ABIT = '1000000000000000'B;

   2686  3 000624   400000 236003                    LDQ     -131072,DU
         3 000625   200005 756100                    STQ     ABIT,,AUTO

      314     2687    2           PART = 0;

   2687  3 000626   200007 450100                    STZ     PART,,AUTO

      315     2688        /*   Loop through the partitions   */
      316     2689    2   PARTITION_LOOP:
      317     2690    3             DO WHILE (ABIT ~= '0'B);

   2690  3 000627   200005 236100       PARTITION_L* LDQ     ABIT,,AUTO
         3 000630   777774 316003                    CANQ    -4,DU
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:44   
         3 000631   001005 600000 3                  TZE     s:2733

      318     2691        /*   Get a pointer to the partition table entry for this partition */
      319     2692    3             PPTR$ = PINCRW(JMC_PPTR$,PART);

   2692  3 000632   200007 236100                    LDQ     PART,,AUTO
         3 000633   000022 736000                    QLS     18
         3 000634   000000 036000 xsym               ADLQ    JMC_PPTR$
         3 000635   200017 756100                    STQ     PPTR$,,AUTO

      320     2693    3             PPTR$ = PPTR$->APTR$;

   2693  3 000636   200017 470500                    LDP0    PPTR$,,AUTO
         3 000637   000000 236100                    LDQ     0,,PR0
         3 000640   200017 756100                    STQ     PPTR$,,AUTO

      321     2694    3             CALL JMU$SETSEG(PPTR$,%SPCL1SID);

   2694  3 000641   000011 236000 4                  LDQ     9
         3 000642   200035 756100                    STQ     UROS$+2,,AUTO
         3 000643   200017 630500                    EPPR0   PPTR$,,AUTO
         3 000644   200034 450500                    STP0    UROS$+1,,AUTO
         3 000645   200034 630500                    EPPR0   UROS$+1,,AUTO
         3 000646   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000647   000000 701000 xent               TSX1    JMU$SETSEG
         3 000650   000000 011000                    NOP     0

      322     2695    3             IF NOT (ABIT & PMASK) THEN GOTO NXT_PART;

   2695  3 000651   200004 236100                    LDQ     PMASK,,AUTO
         3 000652   777774 376003                    ANQ     -4,DU
         3 000653   200034 756100                    STQ     UROS$+1,,AUTO
         3 000654   200005 236100                    LDQ     ABIT,,AUTO
         3 000655   777774 376003                    ANQ     -4,DU
         3 000656   200034 376100                    ANQ     UROS$+1,,AUTO
         3 000657   000774 600000 3                  TZE     NXT_PART

PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:45   
      323     2696    3             CJ$ = JMC_CHAINS.HEAD$(PRIO);

   2696  3 000660   200006 235100                    LDA     PRIO,,AUTO
         3 000661   000001 735000                    ALS     1
         3 000662   000000 236005 xsym               LDQ     JMC_CH,AL
         3 000663   200011 756100                    STQ     CJ$,,AUTO

      324     2697        /*   Loop through the jobs in this priority queue:  */
      325     2698    4               DO WHILE (CJ$ ~= ADDR(NIL));

   2698  3 000664   000772 710000 3                  TRA     s:2725

      326     2699    4               TCJ$ = CJ$IF.LNK$;

   2699  3 000665   200011 470500                    LDP0    CJ$,,AUTO
         3 000666   000000 236100                    LDQ     0,,PR0
         3 000667   200012 756100                    STQ     TCJ$,,AUTO

      327     2700    4               IF SCHEDULED THEN

   2700  3 000670   200016 234100                    SZN     SCHEDULED,,AUTO
         3 000671   000731 605000 3                  TPL     s:2714

      328     2701    5                 DO;              /* Make checks & get user # for new job    */

      329     2702        /*   Check to see if anything can/should be done:                  */
      330     2703    5                 IF (JMC_BUAIS$->AWORD - JMC_BUIS$->AWORD)*JMC_BFIS$->AWORD = 0

   2703  3 000672   000000 471400 xsym               LDP1    JMC_BUIS$
         3 000673   000000 473400 xsym               LDP3    JMC_BUAIS$
         3 000674   300000 236100                    LDQ     0,,PR3
         3 000675   100000 136100                    SBLQ    0,,PR1
         3 000676   000000 474400 xsym               LDP4    JMC_BFIS$
         3 000677   400000 402100                    MPY     0,,PR4
         3 000700   000000 116003                    CMPQ    0,DU
         3 000701   001005 600000 3                  TZE     s:2733

PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:46   
      331     2704    5                 THEN EXIT PARTITION_LOOP;
      332     2705    5                 USERINFO.MODE = %M_BATCH#;

   2705  3 000702   000001 235007                    LDA     1,DL
         3 000703   000002 755000 2                  STA     USERINFO

      333     2706    5                 USERINFO.ERR = 0;

   2706  3 000704   000003 450000 2                  STZ     USERINFO+1

      334     2707    5                 CALL M$NXTUSR(GET_USERNUM); /* Reserve a user slot            */

   2707  3 000705   000006 630400 2                  EPPR0   GET_USERNUM
         3 000706   020005 713400                    CLIMB   8197
         3 000707   400000 401760                    pmme    nvectors=1

      335     2708    5                 IF USERINFO.ERR ~= 0 THEN GOTO DONE; /* None avail            */

   2708  3 000710   000003 235000 2                  LDA     USERINFO+1
         3 000711   001122 601000 3                  TNZ     DONE

      336     2709    5                 CALL M$MBS(GET_RESLIST) ALTRET(RM_ERR);

   2709  3 000712   000046 630400 2                  EPPR0   GET_RESLIST
         3 000713   550001 713400                    CLIMB   alt,+53249
         3 000714   402400 401760                    pmme    nvectors=6
         3 000715   001146 702000 3                  TSX2    RM_ERR

      337     2710    5                 CALL JMU$GETPMASK(PMASK,ADDR(S_RESLIST));

   2710  3 000716   000007 236000 4                  LDQ     7
         3 000717   200034 756100                    STQ     UROS$+1,,AUTO
         3 000720   200034 630500                    EPPR0   UROS$+1,,AUTO
         3 000721   200037 450500                    STP0    UROS$+4,,AUTO
         3 000722   200004 631500                    EPPR1   PMASK,,AUTO
         3 000723   200036 451500                    STP1    UROS$+3,,AUTO
         3 000724   200036 630500                    EPPR0   UROS$+3,,AUTO
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:47   
         3 000725   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000726   000000 701000 xent               TSX1    JMU$GETPMASK
         3 000727   000000 011000                    NOP     0

      338     2711    5                 SCHEDULED = %FALSE;

   2711  3 000730   200016 450100                    STZ     SCHEDULED,,AUTO

      339     2712    5                 END;

      340     2713        /*   If the job will run in the current partition, try to set it up */
      341     2714    4               IF (CJ$IF.PART & ABIT) & PMASK THEN CALL TRY_SETUP;

   2714  3 000731   200005 236100                    LDQ     ABIT,,AUTO
         3 000732   777774 376003                    ANQ     -4,DU
         3 000733   200034 756100                    STQ     UROS$+1,,AUTO
         3 000734   200011 470500                    LDP0    CJ$,,AUTO
         3 000735   000005 236100                    LDQ     5,,PR0
         3 000736   000024 736000                    QLS     20
         3 000737   200034 376100                    ANQ     UROS$+1,,AUTO
         3 000740   200035 756100                    STQ     UROS$+2,,AUTO
         3 000741   200004 236100                    LDQ     PMASK,,AUTO
         3 000742   777774 376003                    ANQ     -4,DU
         3 000743   200036 756100                    STQ     UROS$+3,,AUTO
         3 000744   200035 236100                    LDQ     UROS$+2,,AUTO
         3 000745   200036 376100                    ANQ     UROS$+3,,AUTO
         3 000746   000751 600000 3                  TZE     s:2715

   2714  3 000747   000003 701000 3                  TSX1    TRY_SETUP
         3 000750   000000 011000                    NOP     0

      342     2715    4               IF SCHEDULED THEN

   2715  3 000751   200016 234100                    SZN     SCHEDULED,,AUTO
         3 000752   000766 605000 3                  TPL     s:2723

      343     2716    4                IF LAST_NOT_SCHED$ ~= ADDR(NIL) THEN
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:48   

   2716  3 000753   200014 236100                    LDQ     LAST_NOT_SCHED$,,AUTO
         3 000754   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000755   000770 600000 3                  TZE     s:2724

      344     2717    5                  DO;

      345     2718    5                  PRIO_INC = '1'B;

   2718  3 000756   400000 236003                    LDQ     -131072,DU
         3 000757   200013 756100                    STQ     PRIO_INC,,AUTO

      346     2719    5                  IF LAST_INC$ = ADDR(NIL)

   2719  3 000760   200015 236100                    LDQ     LAST_INC$,,AUTO
         3 000761   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000762   000770 601000 3                  TNZ     s:2724

      347     2720    5                  THEN LAST_INC$ = LAST_NOT_SCHED$;

   2720  3 000763   200014 236100                    LDQ     LAST_NOT_SCHED$,,AUTO
         3 000764   200015 756100                    STQ     LAST_INC$,,AUTO

      348     2721    5                  END;

   2721  3 000765   000770 710000 3                  TRA     s:2724

      349     2722    4                ELSE;
      350     2723    4               ELSE LAST_NOT_SCHED$ = CJ$;

   2723  3 000766   200011 236100                    LDQ     CJ$,,AUTO
         3 000767   200014 756100                    STQ     LAST_NOT_SCHED$,,AUTO

      351     2724    4               CJ$ = TCJ$;

   2724  3 000770   200012 236100                    LDQ     TCJ$,,AUTO
         3 000771   200011 756100                    STQ     CJ$,,AUTO
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:49   

      352     2725    4               END;

   2725  3 000772   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000773   000665 601000 3                  TNZ     s:2699

      353     2726    3   NXT_PART: PART = PART + 1;

   2726  3 000774   200007 054100       NXT_PART     AOS     PART,,AUTO

      354     2727        /*   Go through hell to shift a bit                                */
      355     2728    3             ABIT = BINBIT(BITBIN(ABIT)/2,16);

   2728  3 000775   200005 236100                    LDQ     ABIT,,AUTO
         3 000776   000024 772000                    QRL     20
         3 000777   000001 772000                    QRL     1
         3 001000   000024 736000                    QLS     20
         3 001001   200005 756100                    STQ     ABIT,,AUTO

      356     2729    3             END PARTITION_LOOP;

   2729  3 001002   200005 236100                    LDQ     ABIT,,AUTO
         3 001003   777774 316003                    CANQ    -4,DU
         3 001004   000632 601000 3                  TNZ     s:2692

      357     2730        /*  If we tried to schedule a priority 'F' job and failed then exit. */
      358     2731        /*  since we won't run anything else until the priority 'F' job's    */
      359     2732        /*  resources become available.                                      */
      360     2733    2           IF (PRIO = JM_Q$P15) AND NOT SCHEDULED THEN GOTO DONE;

   2733  3 001005   200006 235100                    LDA     PRIO,,AUTO
         3 001006   000025 115007                    CMPA    21,DL
         3 001007   001012 601000 3                  TNZ     s:2735
         3 001010   200016 234100                    SZN     SCHEDULED,,AUTO
         3 001011   001122 605000 3                  TPL     DONE

      361     2734        /* If we bypassed any jobs, try giving them a priority boost */
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:50   
      362     2735    2           IF PRIO_INC AND (PRIO < JM_Q$P14) AND (JMC_PI$->AWORD > 0) THEN

   2735  3 001012   200013 234100                    SZN     PRIO_INC,,AUTO
         3 001013   001115 605000 3                  TPL     NXTPRIO
         3 001014   000024 115007                    CMPA    20,DL
         3 001015   001115 605000 3                  TPL     NXTPRIO
         3 001016   000000 470400 xsym               LDP0    JMC_PI$
         3 001017   000000 235100                    LDA     0,,PR0
         3 001020   001115 600000 3                  TZE     NXTPRIO

      363     2736    2   PRIORITY_INCREMENT_LOOP:
      364     2737    3             DO;

   2737  3 001021                       PRIORITY_IN* null
      365     2738    3             CJ$ = JMC_CHAINS.HEAD$(PRIO);

   2738  3 001021   200006 236100                    LDQ     PRIO,,AUTO
         3 001022   000001 736000                    QLS     1
         3 001023   000000 236006 xsym               LDQ     JMC_CH,QL
         3 001024   200011 756100                    STQ     CJ$,,AUTO

      366     2739    4               DO WHILE (CJ$ ~= ADDR(NIL));

   2739  3 001025   001113 710000 3                  TRA     s:2754

      367     2740    4               TCJ$ = CJ$IF.LNK$;

   2740  3 001026   200011 470500                    LDP0    CJ$,,AUTO
         3 001027   000000 236100                    LDQ     0,,PR0
         3 001030   200012 756100                    STQ     TCJ$,,AUTO

      368     2741    4               IF NOT (CJ$IF.FLG.NPI OR CJ$IF.FLG.O1) THEN

   2741  3 001031   000013 236100                    LDQ     11,,PR0
         3 001032   004000 316007                    CANQ    2048,DL
         3 001033   001106 601000 3                  TNZ     s:2752
         3 001034   400000 316007                    CANQ    -131072,DL
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:51   
         3 001035   001106 601000 3                  TNZ     s:2752

      369     2742    5                 DO;

      370     2743    5                 CJ$IF.PI = CJ$IF.PI + JMC_PI$->AWORD;

   2743  3 001036   000000 471400 xsym               LDP1    JMC_PI$
         3 001037   000006 236100                    LDQ     6,,PR0
         3 001040   000777 376007                    ANQ     511,DL
         3 001041   100000 036100                    ADLQ    0,,PR1
         3 001042   000006 552104                    STBQ    6,'04'O,PR0

      371     2744    5                 IF (CJ$IF.PI > 511-JMC_PI$->AWORD) OR

   2744  3 001043   200011 470500                    LDP0    CJ$,,AUTO
         3 001044   000006 236100                    LDQ     6,,PR0
         3 001045   000777 376007                    ANQ     511,DL
         3 001046   200034 756100                    STQ     UROS$+1,,AUTO
         3 001047   000777 236007                    LDQ     511,DL
         3 001050   100000 136100                    SBLQ    0,,PR1
         3 001051   200034 116100                    CMPQ    UROS$+1,,AUTO
         3 001052   001057 604000 3                  TMI     s:2747
         3 001053   000006 236100                    LDQ     6,,PR0
         3 001054   000777 376007                    ANQ     511,DL
         3 001055   100000 116100                    CMPQ    0,,PR1
         3 001056   001106 603000 3                  TRC     s:2752

      372     2745    5                 (CJ$IF.PI < JMC_PI$->AWORD) THEN
      373     2746    6                   DO;

      374     2747    6                   CALL JMU$MOVE_IF(PRIO,PRIO+1,CJ$);

   2747  3 001057   200006 235100                    LDA     PRIO,,AUTO
         3 001060   000001 035007                    ADLA    1,DL
         3 001061   200034 755100                    STA     UROS$+1,,AUTO
         3 001062   200011 633500                    EPPR3   CJ$,,AUTO
         3 001063   200037 453500                    STP3    UROS$+4,,AUTO
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:52   
         3 001064   200034 634500                    EPPR4   UROS$+1,,AUTO
         3 001065   200036 454500                    STP4    UROS$+3,,AUTO
         3 001066   200006 635500                    EPPR5   PRIO,,AUTO
         3 001067   200035 455500                    STP5    UROS$+2,,AUTO
         3 001070   200035 630500                    EPPR0   UROS$+2,,AUTO
         3 001071   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 001072   000000 701000 xent               TSX1    JMU$MOVE_IF
         3 001073   000000 011000                    NOP     0

      375     2748    6                   CJ$IF.PRIO = CJ$IF.PRIO + 1;

   2748  3 001074   200011 470500                    LDP0    CJ$,,AUTO
         3 001075   000013 236100                    LDQ     11,,PR0
         3 001076   000001 036003                    ADLQ    1,DU
         3 001077   000013 552120                    STBQ    11,'20'O,PR0

      376     2749    6                   CALL JMJ$REWRITE_FIT(CJ$);

   2749  3 001100   200011 631500                    EPPR1   CJ$,,AUTO
         3 001101   200034 451500                    STP1    UROS$+1,,AUTO
         3 001102   200034 630500                    EPPR0   UROS$+1,,AUTO
         3 001103   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 001104   000000 701000 xent               TSX1    JMJ$REWRITE_FIT
         3 001105   000000 011000                    NOP     0

      377     2750    6                   END;

      378     2751    5                 END;

      379     2752    4               IF CJ$ = LAST_INC$ THEN EXIT PRIORITY_INCREMENT_LOOP;

   2752  3 001106   200011 236100                    LDQ     CJ$,,AUTO
         3 001107   200015 116100                    CMPQ    LAST_INC$,,AUTO
         3 001110   001115 600000 3                  TZE     NXTPRIO

      380     2753    4               CJ$ = TCJ$;

PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:53   
   2753  3 001111   200012 236100                    LDQ     TCJ$,,AUTO
         3 001112   200011 756100                    STQ     CJ$,,AUTO

      381     2754    4               END;

   2754  3 001113   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 001114   001026 601000 3                  TNZ     s:2740

      382     2755    3             END PRIORITY_INCREMENT_LOOP;

      383     2756    2   NXTPRIO: PRIO = PRIO - 1;

   2756  3 001115   000001 336007       NXTPRIO      LCQ     1,DL
         3 001116   200006 056100                    ASQ     PRIO,,AUTO

      384     2757    2           END PRIORITY_LOOP;

   2757  3 001117   200006 235100                    LDA     PRIO,,AUTO
         3 001120   000006 115007                    CMPA    6,DL
         3 001121   000613 605400 3                  TPNZ    s:2682

   2752  3 001122                       DONE         null
      385     2758        /**/
      386     2759        /*   Unlock the partition tables and return user # if it wasn't used */
      387     2760    1   DONE: ;
      388     2761    1         CALL JMN$UNLOCK(JMC_LOCK$->AWORD);

   2761  3 001122   000000 630400 xsym               EPPR0   JMC_LOCK$
         3 001123   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 001124   000000 701000 xent               TSX1    JMN$UNLOCK
         3 001125   000000 011000                    NOP     0

      389     2762    1         IF NOT SCHEDULED THEN

   2762  3 001126   200016 234100                    SZN     SCHEDULED,,AUTO
         3 001127   001141 604000 3                  TMI     OK

PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:54   
      390     2763    2           DO;

      391     2764    2           IF USERINFO.USR ~= 0 THEN

   2764  3 001130   000005 235000 2                  LDA     USERINFO+3
         3 001131   001137 600000 3                  TZE     s:2769

      392     2765    3             DO;

      393     2766    3             USERINFO.MODE = - %M_BATCH#;

   2766  3 001132   000001 336007                    LCQ     1,DL
         3 001133   000002 756000 2                  STQ     USERINFO

      394     2767    3             CALL M$NXTUSR(GET_USERNUM);

   2767  3 001134   000006 630400 2                  EPPR0   GET_USERNUM
         3 001135   020005 713400                    CLIMB   8197
         3 001136   400000 401760                    pmme    nvectors=1

      395     2768    3             END;

      396     2769    2           SCHEDULED = %TRUE;

   2769  3 001137   400000 236003                    LDQ     -131072,DU
         3 001140   200016 756100                    STQ     SCHEDULED,,AUTO

      397     2770    2           END;

      398     2771    1   OK:
      399     2772    1         CALL M$TRUNC(FPT_TRUNC) ALTRET(SHEESH);

   2772  3 001141   003112 630400 2     OK           EPPR0   FPT_TRUNC
         3 001142   450003 713400                    CLIMB   alt,+20483
         3 001143   400000 401760                    pmme    nvectors=1
         3 001144   001145 702000 3                  TSX2    SHEESH

PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:55   
      400     2773    1   SHEESH:
      401     2774    1         RETURN;

   2774  3 001145   000000 702200 xent  SHEESH       TSX2  ! X66_ARET

      402     2775        /**/
      403     2776        /**/
      404     2777    1   RM_ERR: ;

   2777  3 001146                       RM_ERR       null
      405     2778        /*S*    SCREECH_CODE:   JMS-S$JM238                                */
      406     2779        /*S*   TYPE:   SCREECH                                             */
      407     2780        /*S*   MESSAGE: Can't get free resource list for job scheduling.   */
      408     2781    1         CALL FOI$CRASH (%S$JM238,F_JM,M_S);

   2781  3 001146   000015 630400 4                  EPPR0   13
         3 001147   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 001150   000000 701000 xent               TSX1    FOI$CRASH
         3 001151   000000 011000                    NOP     0

      409     2782        /**/
      410     2783    1   END JMS$SCHED;

   2783  3 001152   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:56   
--  Include file information  --

   JM_SCODE_C.:E05TOU  is referenced.
   FR$RESLIST.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   JMC_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   JM$STRUCT.:E05TOU  is referenced.
   JM_SUBS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure JMS$SCHED.
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:57   

 **** Variables and constants ****

  ****  Section 002  Data  JMS$SCHED

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    24-0-0/d STRC(648)   r     1 ACQUIRE_RES                0-0-0/d UBIN        r     1 CUTS
    10-0-0/d STRC(432)   r     1 FPT_TIME                3112-0-0/d STRC(144)   r     1 FPT_TRUNC
    46-0-0/d STRC(648)   r     1 GET_RESLIST                6-0-0/d STRC(72)    r     1 GET_USERNUM
  3116-0-0/w SBIN        r     1 NOSCHED                 2104-0-0/d STRC(18648) r     1 PSNLIST
    76-0-0/d STRC(37080) r     1 P_RESLIST                 70-0-0/d STRC(216)   r     1 S_RESLIST
     2-0-0/d STRC(144)   r     1 USERINFO

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/b BIT (16)    r     1 ABIT                      11-0-0/w PTR         r     1 CJ$
    25-0-0/w SBIN        r     1 I                         30-0-0/w PTR         r     1 JOB$
    15-0-0/w PTR         r     1 LAST_INC$                 14-0-0/w PTR         r     1 LAST_NOT_SCHED$
    32-0-0/w PTR         r     1 M$UC$                      7-0-0/w SBIN        r     1 PART
     4-0-0/b BIT (16)    r     1 PMASK                     21-0-0/w UBIN        r     1 PP(0:2)
    17-0-0/w PTR         r     1 PPTR$                      6-0-0/w SBIN        r     1 PRIO
    13-0-0/b BIT         r     1 PRIO_INC                  16-0-0/b BIT         r     1 SCHEDULED
    24-0-0/w SBIN        r     1 SW                        10-0-0/w PTR         r     1 TBL$
    12-0-0/w PTR         r     1 TCJ$                      26-0-0/w UBIN        r     1 TOT_THIS_ACCT
    27-0-0/w UBIN        r     1 TOT_THIS_PART             31-0-0/w PTR         r     1 UJIT$
    33-0-0/w PTR         r     1 UROS$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 JMC_BFIS$
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:58   
     0-0-0/w PTR         r     1 JMC_BUAIS$                 0-0-0/w PTR         r     1 JMC_BUIS$
     0-0-0/w STRC(1728)  r     1 JMC_CH
     0-0-0/w STRC(72)    r     1 JMC_CHAINS(0:23)
     0-0-0/w PTR         r     1 JMC_CHNG$                  0-0-0/w PTR         r     1 JMC_LOCK$
     0-0-0/w PTR         r     1 JMC_MAX1ACCT$              0-0-0/w PTR         r     1 JMC_PI$
     0-0-0/w PTR         r     1 JMC_PPTR$                  0-0-0/b BIT         r     1 JM_SCHEDOK

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 APTR$                      0-0-0/w UBIN        r     1 AWORD
     0-0-0/w UBIN        r     1 AWORD                      0-0-0/d STRC(8856)  r     1 B$JIT
     0-0-0/w ASTR(1665)  r     1 JM$IF                      0-0-0/w STRC(684)   r     1 JM$PART
     0-0-0/w STRC(108)   r     1 JM$RES                     0-0-0/w STRC(108)   r     1 JM$SN
     0-0-0N  NULL        r     1 M$STATUS                   0-0-0/w BIT (16)    r     1 PBITS


   Procedure JMS$SCHED requires 619 words for executable code.
   Procedure JMS$SCHED requires 34 words of local(AUTO) storage.

    No errors detected in file JMS$SCHED.:E05TSI    .
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:59   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:60   
          MINI XREF LISTING

ABIT
      2300**DCL      2686<<ASSIGN   2690>>DOWHILE  2695>>IF       2714>>IF       2728<<ASSIGN   2728>>ASSIGN
ACQUIRE_RES
      2380**DCL      2609<>CALL
ACQUIRE_RES.V
      2382**DCL      2380--DCLINIT
ACQUIRE_RES.V.SYSID#
      2383**DCL      2606<<ASSIGN
APTR$
      1807**DCL      2693>>ASSIGN
AWORD
      1805**DCL      2667<>CALL     2703>>IF       2703>>IF       2703>>IF       2735>>IF       2743>>ASSIGN
      2744>>IF       2744>>IF       2761<>CALL
AWORD IN PROCEDURE TRY_SETUP
      2509**DCL      2536>>IF
B$JIT.ACCN
      2103**DCL      2613<<ASSIGN
B$JIT.CPFLAGS1.SLEAZE
      2197**DCL      2197--REDEF
B$JIT.CURSUDO
      2285**DCL      2620<<ASSIGN
B$JIT.ERR.MID
      2104**DCL      2104--REDEF
B$JIT.FACCN
      2103**DCL      2614<<ASSIGN
B$JIT.JOBNAME
      2252**DCL      2618<<ASSIGN
B$JIT.JRESPEAK
      2265**DCL      2266--REDEF
B$JIT.MAXCORE
      2264**DCL      2621<<ASSIGN
B$JIT.MRT
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:61   
      2275**DCL      2617<<ASSIGN
B$JIT.OLTA
      2284**DCL      2623<<ASSIGN
B$JIT.ORIGINATOR_MODE
      2283**DCL      2624<<ASSIGN
B$JIT.ORIGINATOR_PORT
      2286**DCL      2625<<ASSIGN
B$JIT.ORIGINATOR_PORT.FROM_CR
      2287**DCL      2287--REDEF    2288--REDEF
B$JIT.OUTPRIO
      2184**DCL      2616<<ASSIGN
B$JIT.PNR
      2276**DCL      2276--REDEF    2615<<ASSIGN
B$JIT.RERUN
      2276**DCL      2627<<ASSIGN   2628<<ASSIGN
B$JIT.RESCORE
      2285**DCL      2622<<ASSIGN
B$JIT.SYSID
      2103**DCL      2611<<ASSIGN
B$JIT.TSLINE
      2285**DCL      2286--REDEF
B$JIT.UNAME
      2103**DCL      2612<<ASSIGN
B$JIT.USER
      2103**DCL      2610<<ASSIGN
B$JIT.WOO
      2103**DCL      2619<<ASSIGN
B$JIT$
      2471**DCL      2098--IMP-PTR
CJ$
      2304**DCL      2526>>IF       2536>>IF       2540>>IF       2547>>IF       2547>>IF       2571>>ASSIGN
      2572>>ASSIGN   2573>>ASSIGN   2576>>ASSIGN   2578>>ASSIGN   2579>>ASSIGN   2580>>DOINDEX  2586>>ASSIGN
      2587>>ASSIGN   2597>>ASSIGN   2606>>ASSIGN   2611>>ASSIGN   2612>>ASSIGN   2613>>ASSIGN   2614>>ASSIGN
      2616>>ASSIGN   2617>>ASSIGN   2618>>ASSIGN   2618>>ASSIGN   2619>>ASSIGN   2624>>ASSIGN   2625>>ASSIGN
      2626>>IF       2632<>CALL     2633>>ASSIGN   2634>>ASSIGN   2646>>ASSIGN   2647>>ASSIGN   2649<>CALL
      2652>>ASSIGN   2696<<ASSIGN   2698>>DOWHILE  2699>>ASSIGN   2714>>IF       2723>>ASSIGN   2724<<ASSIGN
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:62   
      2738<<ASSIGN   2739>>DOWHILE  2740>>ASSIGN   2741>>IF       2741>>IF       2743>>ASSIGN   2743>>ASSIGN
      2744>>IF       2744>>IF       2747<>CALL     2748>>ASSIGN   2748>>ASSIGN   2749<>CALL     2752>>IF
      2753<<ASSIGN
CUTS
      2317**DCL      2362--DCLINIT  2652>>ASSIGN
DONE
      2752**LABEL    2708--GOTO     2733--GOTO
FOI$CRASH
      2478**DCL-ENT  2781--CALL
FPT_TIME
      2358**DCL      2651<>CALL
FPT_TIME.V
      2362**DCL      2358--DCLINIT
FPT_TRUNC
      2462**DCL      2772<>CALL
FPT_TRUNC.V
      2462**DCL      2462--DCLINIT
GET_RESLIST
      2401**DCL      2675<>CALL     2709<>CALL
GET_RESLIST.V
      2403**DCL      2401--DCLINIT
GET_USERNUM
      2343**DCL      2707<>CALL     2767<>CALL
I IN PROCEDURE TRY_SETUP
      2502**DCL      2575<<DOINDEX  2576>>ASSIGN   2576>>ASSIGN   2580<<DOINDEX  2581>>ASSIGN   2582>>ASSIGN
      2583>>ASSIGN   2588<<ASSIGN   2590>>ASSIGN   2592>>ASSIGN   2593>>ASSIGN   2594<<ASSIGN   2594>>ASSIGN
      2599>>ASSIGN   2601>>ASSIGN   2602>>ASSIGN   2603<<ASSIGN   2603>>ASSIGN
JCM$MAKEU IN PROCEDURE TRY_SETUP
      2515**DCL-ENT  2653--CALL
JCM$RELJ IN PROCEDURE TRY_SETUP
      2514**DCL-ENT  2657--CALL
JCM$SETU IN PROCEDURE TRY_SETUP
      2513**DCL-ENT  2608--CALL
JM$IF.ACCT
      1897**DCL      2526>>IF       2526>>IF       2547>>IF       2547>>IF       2613>>ASSIGN   2614>>ASSIGN
JM$IF.FLG.ACC
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:63   
      1875**DCL      2528>>IF       2536>>IF
JM$IF.FLG.NPI
      1881**DCL      2741>>IF
JM$IF.FLG.O1
      1868**DCL      2540>>IF       2547>>IF       2741>>IF
JM$IF.FLG.RR2
      1879**DCL      2626>>IF
JM$IF.JNAME
      1963**DCL      2618>>ASSIGN
JM$IF.JNL
      1951**DCL      1963--IMP-SIZ  2618>>ASSIGN
JM$IF.LNK$
      1825**DCL      2533>>ASSIGN   2551>>ASSIGN   2699>>ASSIGN   2740>>ASSIGN
JM$IF.MAXPSN
      1889**DCL      2587>>ASSIGN
JM$IF.MAXVR
      1892**DCL      2579>>ASSIGN   2580>>DOINDEX
JM$IF.NXTJ$
      1827**DCL      2633<<ASSIGN
JM$IF.ORIGINATOR_MODE
      1941**DCL      2624>>ASSIGN
JM$IF.ORIGINATOR_PORT
      1943**DCL      2625>>ASSIGN
JM$IF.PART
      1838**DCL      2714>>IF
JM$IF.PI
      1847**DCL      2743<<ASSIGN   2743>>ASSIGN   2744>>IF       2744>>IF
JM$IF.PNUM
      1845**DCL      2530>>IF       2647<<ASSIGN
JM$IF.PRIO
      1865**DCL      2616>>ASSIGN   2748<<ASSIGN   2748>>ASSIGN
JM$IF.RRT
      1937**DCL      2571>>ASSIGN   2572>>ASSIGN   2573>>ASSIGN   2576>>ASSIGN
JM$IF.SLNK$
      1833**DCL      2597>>ASSIGN
JM$IF.START_TIME
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:64   
      1851**DCL      2652<<ASSIGN
JM$IF.SUBMIT_TIME
      1849**DCL      2547>>IF       2547>>IF
JM$IF.SYSID
      1895**DCL      2606>>ASSIGN   2611>>ASSIGN
JM$IF.TIM
      1859**DCL      2617>>ASSIGN
JM$IF.U
      1835**DCL      2646<<ASSIGN
JM$IF.UNAME
      1899**DCL      2612>>ASSIGN
JM$IF.VRLIST$
      1829**DCL      2578>>ASSIGN
JM$IF.WSN
      1903**DCL      2619>>ASSIGN
JM$IF.XLNK$
      1831**DCL      2586>>ASSIGN
JM$PART.CPTOT
      2072**DCL      2641<<ASSIGN   2641>>ASSIGN
JM$PART.CUR
      2070**DCL      2638<<ASSIGN   2638>>ASSIGN
JM$PART.JOB$
      2089**DCL      2633>>ASSIGN   2634<<ASSIGN
JM$PART.MAX1ACCT
      2085**DCL      2536>>IF
JM$PART.TOT
      2075**DCL      2644<<ASSIGN   2644>>ASSIGN
JM$RES.ATTRS
      2031**DCL      2583>>ASSIGN
JM$RES.NXT$
      2036**DCL      2584>>ASSIGN
JM$RES.TYPE
      2025**DCL      2581>>ASSIGN
JM$RES.VNUM
      2027**DCL      2029--REDEF    2582>>ASSIGN
JM$SN.FLGS.EXCL
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:65   
      1992**DCL      2591>>IF       2600>>IF
JM$SN.NXT$
      1997**DCL      2595>>ASSIGN   2604>>ASSIGN
JM$SN.TXT
      1986**DCL      2590>>ASSIGN   2599>>ASSIGN
JMC_BFIS$
       878**DCL      2703>>IF
JMC_BUAIS$
       878**DCL      2703>>IF
JMC_BUIS$
       878**DCL      2703>>IF
JMC_CH
       874**DCL       875--REDEF
JMC_CH.HRUN$
       875**DCL      2524>>ASSIGN
JMC_CHAINS.HEAD$
       876**DCL      2542>>ASSIGN   2682>>IF       2696>>ASSIGN   2738>>ASSIGN
JMC_CHNG$
       878**DCL      2670>>IF
JMC_LOCK$
       878**DCL      2667>>CALL     2761>>CALL
JMC_MAX1ACCT$
       880**DCL      2536>>IF
JMC_PI$
       879**DCL      2735>>IF       2743>>ASSIGN   2744>>IF       2744>>IF
JMC_PPTR$
       879**DCL      2692>>ASSIGN
JMJ$REWRITE_FIT
      2479**DCL-ENT  2649--CALL     2749--CALL
JMN$LOCK
      2480**DCL-ENT  2667--CALL
JMN$UNLOCK
      2481**DCL-ENT  2761--CALL
JMU$GETPMASK
      2482**DCL-ENT  2676--CALL     2710--CALL
JMU$MOVE_IF
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:66   
      2483**DCL-ENT  2747--CALL
JMU$MOVE_IF IN PROCEDURE TRY_SETUP
      2516**DCL-ENT  2632--CALL
JMU$REPART
      2484**DCL-ENT  2670--CALL
JMU$SETSEG
      2485**DCL-ENT  2694--CALL
JM_SCHEDOK
       880**DCL      2664>>IF
JOB$ IN PROCEDURE TRY_SETUP
      2505**DCL      2524<<ASSIGN   2525>>DOWHILE  2526>>IF       2528>>IF       2530>>IF       2533<<ASSIGN
      2533>>ASSIGN   2542<<ASSIGN   2543>>DOWHILE  2547>>IF       2547>>IF       2547>>IF       2551<<ASSIGN
      2551>>ASSIGN
LAST_INC$
      2308**DCL      2684<<ASSIGN   2719>>IF       2720<<ASSIGN   2752>>IF
LAST_NOT_SCHED$
      2307**DCL      2683<<ASSIGN   2716>>IF       2720>>ASSIGN   2723<<ASSIGN
M$MBS
      1676**DCL-ENT  2609--CALL     2675--CALL     2709--CALL
M$NXTUSR
      1735**DCL-ENT  2707--CALL     2767--CALL
M$TIME
      1736**DCL-ENT  2651--CALL
M$TRUNC
      1670**DCL-ENT  2772--CALL
M$UC$ IN PROCEDURE TRY_SETUP
      2507**DCL      2608<>CALL
NORES IN PROCEDURE TRY_SETUP
      2654**LABEL    2609--CALLALT
NOSCHED IN PROCEDURE TRY_SETUP
      2511**DCL      2658<<ASSIGN   2658>>ASSIGN
NXTPRIO
      2756**LABEL    2682--GOTO
NXT_PART
      2726**LABEL    2695--GOTO
OK
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:67   
      2772**LABEL    2667--CALLALT
PART
      2302**DCL      2530>>IF       2615>>ASSIGN   2647>>ASSIGN   2687<<ASSIGN   2692>>ASSIGN   2726<<ASSIGN
      2726>>ASSIGN
PARTITION_LOOP
      2690**LABEL    2704--EXIT
PBITS
      1806**DCL      2670>>IF
PMASK
      2299**DCL      2676<>CALL     2695>>IF       2710<>CALL     2714>>IF
PP IN PROCEDURE TRY_SETUP
      2500**DCL      2608<>CALL     2653<>CALL     2657<>CALL
PPTR$
      2310**DCL      2536>>IF       2633>>ASSIGN   2634>>ASSIGN   2638>>ASSIGN   2638>>ASSIGN   2641>>ASSIGN
      2641>>ASSIGN   2644>>ASSIGN   2644>>ASSIGN   2692<<ASSIGN   2693<<ASSIGN   2693>>ASSIGN   2694<>CALL
PRIO
      2301**DCL      2632<>CALL     2678<<ASSIGN   2681>>DOWHILE  2682>>IF       2696>>ASSIGN   2733>>IF
      2735>>IF       2738>>ASSIGN   2747<>CALL     2747>>CALL     2756<<ASSIGN   2756>>ASSIGN
PRIORITY_INCREMENT_LOOP
      2737**LABEL    2752--EXIT
PRIO_INC
      2306**DCL      2685<<ASSIGN   2718<<ASSIGN   2735>>IF
PSNLIST
      2447**DCL      2381--DCLINIT  2402--DCLINIT
PSNLIST.NN#
      2447**DCL      2587<<ASSIGN
PSNLIST.RPLIST.PSN#
      2447**DCL      2590<<ASSIGN   2599<<ASSIGN
PSNLIST.RPLIST.USAGE#
      2448**DCL      2592<<ASSIGN   2593<<ASSIGN   2601<<ASSIGN   2602<<ASSIGN
P_RESLIST
      2431**DCL      2381--DCLINIT  2402--DCLINIT
P_RESLIST.NN#
      2431**DCL      2579<<ASSIGN
P_RESLIST.PRLIST.ATTR#
      2433**DCL      2583<<ASSIGN
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:68   
P_RESLIST.PRLIST.RNAME#
      2431**DCL      2432--REDEF
P_RESLIST.PRLIST.RNME.NUM
      2432**DCL      2582<<ASSIGN
P_RESLIST.PRLIST.RNME.TYP
      2432**DCL      2581<<ASSIGN
RM_ERR
      2777**LABEL    2675--CALLALT  2709--CALLALT
RTN IN PROCEDURE TRY_SETUP
      2655**LABEL    2608--CALLALT
SCHEDULED
      2309**DCL      2654<<ASSIGN   2673<<ASSIGN   2700>>IF       2711<<ASSIGN   2715>>IF       2733>>IF
      2762>>IF       2769<<ASSIGN
SHEESH
      2774**LABEL    2772--CALLALT
SW IN PROCEDURE TRY_SETUP
      2501**DCL      2541<<DOINDEX  2542>>ASSIGN
S_RESLIST
      2410**DCL      2380--DCLINIT  2401--DCLINIT  2676--CALL     2710--CALL
S_RESLIST.DISK
      2414**DCL      2572<<ASSIGN
S_RESLIST.MEMORY
      2413**DCL      2571<<ASSIGN   2621>>ASSIGN   2622>>ASSIGN
S_RESLIST.OTHER
      2416**DCL      2574<<ASSIGN
S_RESLIST.SULST
      2417**DCL      2576<<ASSIGN   2620>>ASSIGN
S_RESLIST.TAPES
      2415**DCL      2573<<ASSIGN
TBL$
      2303**DCL      2578<<ASSIGN   2581>>ASSIGN   2582>>ASSIGN   2583>>ASSIGN   2584<<ASSIGN   2584>>ASSIGN
      2586<<ASSIGN   2589>>DOWHILE  2590>>ASSIGN   2591>>IF       2595<<ASSIGN   2595>>ASSIGN   2597<<ASSIGN
      2598>>DOWHILE  2599>>ASSIGN   2600>>IF       2604<<ASSIGN   2604>>ASSIGN
TCJ$
      2305**DCL      2699<<ASSIGN   2724>>ASSIGN   2740<<ASSIGN   2753>>ASSIGN
TOT_THIS_ACCT IN PROCEDURE TRY_SETUP
PL6.E3A0      #001=JMS$SCHED File=JMS$SCHED.:E05TSI                              TUE 07/29/97 23:30 Page:69   
      2503**DCL      2522<<ASSIGN   2529<<ASSIGN   2529>>ASSIGN   2535>>IF       2536>>IF
TOT_THIS_PART IN PROCEDURE TRY_SETUP
      2504**DCL      2523<<ASSIGN   2531<<ASSIGN   2531>>ASSIGN   2536>>IF
TRY_SETUP
      2499**PROC     2714--CALL
UJIT$ IN PROCEDURE TRY_SETUP
      2506**DCL      2608<>CALL     2610>>ASSIGN   2611>>ASSIGN   2612>>ASSIGN   2613>>ASSIGN   2614>>ASSIGN
      2615>>ASSIGN   2616>>ASSIGN   2617>>ASSIGN   2618>>ASSIGN   2619>>ASSIGN   2620>>ASSIGN   2621>>ASSIGN
      2622>>ASSIGN   2623>>ASSIGN   2624>>ASSIGN   2625>>ASSIGN   2627>>ASSIGN   2628>>ASSIGN
UROS$ IN PROCEDURE TRY_SETUP
      2508**DCL      2608<>CALL
USERINFO
      2329**DCL      2343--DCLINIT
USERINFO.ERR
      2329**DCL      2706<<ASSIGN   2708>>IF
USERINFO.MODE
      2329**DCL      2705<<ASSIGN   2766<<ASSIGN
USERINFO.USR
      2329**DCL      2610>>ASSIGN   2646>>ASSIGN   2677<<ASSIGN   2764>>IF
