VERSION B06

PL6.E3A0      #001=VWR$BREAK File=VWR$BREAK.:VMB6TSI                             WED 08/20/97 15:48 Page:1    
        1        1        /*M* VWR$BREAK - Prompt online user for C to continue. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*F**
        9        9        *
       10       10        *   NAME:  VWR$BREAK
       11       11        *
       12       12        *   PURPOSE:
       13       13        *       Prompt the user for "c to continue".
       14       14        *
       15       15        *   DESCRIPTION:
       16       16        *       Compute the status of the file transfer, then prompt the user
       17       17        *       for "c to continue"; ALTRET if he says no.
       18       18        *
       19       19        *   REFERENCE:
       20       20        *       None.
       21       21        *
       22       22        ****/
       23       23
       24       24        /*D**
       25       25        *
       26       26        *   NAME:  VWR$BREAK
       27       27        *
       28       28        *   CALL:
       29       29        *       CALL VWR$BREAK ALTRET...
       30       30        *
       31       31        *   PARAMETERS:
       32       32        *       None.
       33       33        *
       34       34        *   INTERFACE:
       35       35        *       None.
       36       36        *
       37       37        *   ENVIRONMENT:
PL6.E3A0      #001=VWR$BREAK File=VWR$BREAK.:VMB6TSI                             WED 08/20/97 15:48 Page:2    
       38       38        *       This routine is called/used only by MOVE in response to the user
       39       39        *       hitting the BREAK key.  This is NOT the async break routine (see
       40       40        *       VWY$YOUCALLD).
       41       41        *
       42       42        *   INPUT:
       43       43        *       The global cells VW_INPCNT# and VW_TOTBYTES# are examined for
       44       44        *       valid data.  The message prompt will compute the percentage
       45       45        *       complete (approximately) if VW_TOTBYTES# is non-zero.
       46       46        *
       47       47        *   OUTPUT:
       48       48        *       The global cell VW_BROKEN# is cleared to '0'B.
       49       49        *
       50       50        *   SCRATCH:
       51       51        *       None.
       52       52        *
       53       53        *   DESCRIPTION:
       54       54        *       Handle the BREAK function for MOVE:  Tell the user how far along
       55       55        *       we are in the BEAM process and ask him if he wants to continue.
       56       56        *       If he says yes, return; otherwise ALTRET.
       57       57        *
       58       58        ****/
       59       59
       60       60        VWR$BREAK: PROC ALTRET;
       61       61
       62       62        /****
       63       63        *
       64       64        *   %INCLUDEs
       65       65        *
       66       66        ****/
       67       67
       68       68        %INCLUDE CP_6;
       69     5627
       70     5628        /****
       71     5629        *
       72     5630        *   FPTs
       73     5631        *
       74     5632        ****/
PL6.E3A0      #001=VWR$BREAK File=VWR$BREAK.:VMB6TSI                             WED 08/20/97 15:48 Page:3    
       75     5633
       76     5634        %FPT_PROMPT(VFC=YES);
       77     5662
       78     5663        %FPT_READ(FPTN=READ_UC,
       79     5664                  DCB=M$UC);
       80     5703
       81     5704        %F$DCB(DCBN=DUMMY);
       82     5761
       83     5762        /****
       84     5763        *
       85     5764        *   Local variables
       86     5765        *
       87     5766        ****/
       88     5767
       89     5768    1   DCL M$INP                          DCB;
       90     5769
       91     5770    1   DCL VW_BROKEN# SYMREF              SBIN;
       92     5771    1   DCL VW_INPCNT# SYMREF              SBIN;
       93     5772    1   DCL VW_TOTBYTES# SYMREF            SBIN;
       94     5773    1   DCL I                              SBIN;
       95     5774    1   DCL J                              SBIN;
       96     5775    1   DCL K                              SBIN;
       97     5776
       98     5777    1   DCL PROMPT                         CHAR(32);
       99     5778    1   DCL UCBUF                          CHAR(2);
      100     5779    1   DCL DWORK                          CHAR(8);
      101     5780
      102     5781        %EJECT;
PL6.E3A0      #001=VWR$BREAK File=VWR$BREAK.:VMB6TSI                             WED 08/20/97 15:48 Page:4    
      103     5782        /****
      104     5783        *
      105     5784        *   Initialize FPTs.
      106     5785        *
      107     5786        ****/
      108     5787
      109     5788    1           READ_UC.BUF_.BUF$=ADDR(UCBUF);
      110     5789
      111     5790        /****
      112     5791        *
      113     5792        *   Format the message prompt:  "nn% complete; C to continue:"
      114     5793        *
      115     5794        ****/
      116     5795
      117     5796    2           IF VW_TOTBYTES#>0 THEN DO;
      118     5797    2              J=((1000*VW_INPCNT#)/VW_TOTBYTES#+5)/10;
      119     5798    2              CALL BINCHAR(DWORK,J);
      120     5799    2              I=0;
      121     5800    3              DO WHILE(I<7 AND SUBSTR(DWORK,I,1)='0');
      122     5801    3                 I=I+1;
      123     5802    3                 END;
      124     5803    2              CALL CONCAT(PROMPT,'@',SUBSTR(DWORK,I,8-I),
      125     5804    2                '% complete; C to continue:');
      126     5805    2              FPT_PROMPT.PROMPT_=VECTOR(SUBSTR(PROMPT,0,35-I));
      127     5806    2              END;
      128     5807
      129     5808        /****
      130     5809        *
      131     5810        *   If we haven't done anything:  "C to continue:"
      132     5811        *
      133     5812        ****/
      134     5813
      135     5814    2           ELSE DO;
      136     5815    2              PROMPT='@C to continue:';
      137     5816    2              FPT_PROMPT.PROMPT_=VECTOR(SUBSTR(PROMPT,0,15));
      138     5817    2              END;
      139     5818
PL6.E3A0      #001=VWR$BREAK File=VWR$BREAK.:VMB6TSI                             WED 08/20/97 15:48 Page:5    
      140     5819        /****
      141     5820        *
      142     5821        *   Set the prompt string.
      143     5822        *
      144     5823        ****/
      145     5824
      146     5825    1           CALL M$PROMPT(FPT_PROMPT);
      147     5826
      148     5827        /****
      149     5828        *
      150     5829        *   Read the user's reply.  We read for two characters to allow the
      151     5830        *   user to change his/her mind.  If we read for only one character,
      152     5831        *   the read would be satisfied by the first character typed.  Note
      153     5832        *   that MOVE will NOT allow a command to be entered at this point.
      154     5833        *
      155     5834        ****/
      156     5835
      157     5836    1           UCBUF=' ';
      158     5837    1           READ_UC.BUF_.BOUND=1;
      159     5838    2           CALL M$READ(READ_UC) WHENALTRETURN DO;
      160     5839    2              ALTRETURN;
      161     5840    2              END;
      162     5841
      163     5842        /****
      164     5843        *
      165     5844        *   Restore the prompt, clear VW_BROKEN#, then check reply.
      166     5845        *
      167     5846        ****/
      168     5847
      169     5848    1           PROMPT='@*';
      170     5849    1           FPT_PROMPT.PROMPT_=VECTOR(SUBSTR(PROMPT,0,2));
      171     5850    1           CALL M$PROMPT(FPT_PROMPT);
      172     5851    1           VW_BROKEN#=0;
      173     5852
      174     5853        /****
      175     5854        *
      176     5855        *   The "C" may be entered in either upper or lower case, but it must
PL6.E3A0      #001=VWR$BREAK File=VWR$BREAK.:VMB6TSI                             WED 08/20/97 15:48 Page:6    
      177     5856        *   be the first character typed.  If we don't find C or c, simply
      178     5857        *   ALTRETURN.
      179     5858        *
      180     5859        ****/
      181     5860
      182     5861    1           IF SUBSTR(UCBUF,0,1)='C' OR SUBSTR(UCBUF,0,1)='c' THEN
      183     5862    1              RETURN;
      184     5863    1           ALTRETURN;
      185     5864
      186     5865    1   END;

PL6.E3A0      #001=VWR$BREAK File=VWR$BREAK.:VMB6TSI                             WED 08/20/97 15:48 Page:7    
--  Include file information  --

   CP_6_C.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure VWR$BREAK.

   Procedure VWR$BREAK requires 94 words for executable code.
   Procedure VWR$BREAK requires 20 words of local(AUTO) storage.

    No errors detected in file VWR$BREAK.:VMB6TSI    .

PL6.E3A0      #001=VWR$BREAK File=VWR$BREAK.:VMB6TSI                             WED 08/20/97 15:48 Page:8    

 Object Unit name= VWR$BREAK                                  File name= VWR$BREAK.:VMB6TOU
 UTS= AUG 20 '97 15:48:39.88 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none    24     30  VWR$BREAK
    2   DCB   even  none     0      0  M$INP
    3  RoData even  UTS     12     14  VWR$BREAK
    4   Proc  even  none    94    136  VWR$BREAK
    5  RoData even  none     5      5  VWR$BREAK

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes    yes     yes      Std        0  VWR$BREAK

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #001=VWR$BREAK File=VWR$BREAK.:VMB6TSI                             WED 08/20/97 15:48 Page:9    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$INP                                 VW_BROKEN#
     VW_INPCNT#                            VW_TOTBYTES#

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=VWR$BREAK File=VWR$BREAK.:VMB6TSI                             WED 08/20/97 15:48 Page:10   


        1        1        /*M* VWR$BREAK - Prompt online user for C to continue. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*F**
        9        9        *
       10       10        *   NAME:  VWR$BREAK
       11       11        *
       12       12        *   PURPOSE:
       13       13        *       Prompt the user for "c to continue".
       14       14        *
       15       15        *   DESCRIPTION:
       16       16        *       Compute the status of the file transfer, then prompt the user
       17       17        *       for "c to continue"; ALTRET if he says no.
       18       18        *
       19       19        *   REFERENCE:
       20       20        *       None.
       21       21        *
       22       22        ****/
       23       23
       24       24        /*D**
       25       25        *
       26       26        *   NAME:  VWR$BREAK
       27       27        *
       28       28        *   CALL:
       29       29        *       CALL VWR$BREAK ALTRET...
       30       30        *
       31       31        *   PARAMETERS:
       32       32        *       None.
       33       33        *
       34       34        *   INTERFACE:
       35       35        *       None.
       36       36        *
PL6.E3A0      #001=VWR$BREAK File=VWR$BREAK.:VMB6TSI                             WED 08/20/97 15:48 Page:11   
       37       37        *   ENVIRONMENT:
       38       38        *       This routine is called/used only by MOVE in response to the user
       39       39        *       hitting the BREAK key.  This is NOT the async break routine (see
       40       40        *       VWY$YOUCALLD).
       41       41        *
       42       42        *   INPUT:
       43       43        *       The global cells VW_INPCNT# and VW_TOTBYTES# are examined for
       44       44        *       valid data.  The message prompt will compute the percentage
       45       45        *       complete (approximately) if VW_TOTBYTES# is non-zero.
       46       46        *
       47       47        *   OUTPUT:
       48       48        *       The global cell VW_BROKEN# is cleared to '0'B.
       49       49        *
       50       50        *   SCRATCH:
       51       51        *       None.
       52       52        *
       53       53        *   DESCRIPTION:
       54       54        *       Handle the BREAK function for MOVE:  Tell the user how far along
       55       55        *       we are in the BEAM process and ask him if he wants to continue.
       56       56        *       If he says yes, return; otherwise ALTRET.
       57       57        *
       58       58        ****/
       59       59
       60       60        VWR$BREAK: PROC ALTRET;

     60  4 000000   000000 700200 xent  VWR$BREAK    TSX0  ! X66_AUTO_0
         4 000001   000024 000000                    ZERO    20,0

       61       61
       62       62        /****
       63       63        *
       64       64        *   %INCLUDEs
       65       65        *
       66       66        ****/
       67       67
       68       68        %INCLUDE CP_6;
       69     5627
PL6.E3A0      #001=VWR$BREAK File=VWR$BREAK.:VMB6TSI                             WED 08/20/97 15:48 Page:12   
       70     5628        /****
       71     5629        *
       72     5630        *   FPTs
       73     5631        *
       74     5632        ****/
       75     5633
       76     5634        %FPT_PROMPT(VFC=YES);
       77     5662
       78     5663        %FPT_READ(FPTN=READ_UC,
       79     5664                  DCB=M$UC);
       80     5703
       81     5704        %F$DCB(DCBN=DUMMY);
       82     5761
       83     5762        /****
       84     5763        *
       85     5764        *   Local variables
       86     5765        *
       87     5766        ****/
       88     5767
       89     5768    1   DCL M$INP                          DCB;
       90     5769
       91     5770    1   DCL VW_BROKEN# SYMREF              SBIN;
       92     5771    1   DCL VW_INPCNT# SYMREF              SBIN;
       93     5772    1   DCL VW_TOTBYTES# SYMREF            SBIN;
       94     5773    1   DCL I                              SBIN;
       95     5774    1   DCL J                              SBIN;
       96     5775    1   DCL K                              SBIN;
       97     5776
       98     5777    1   DCL PROMPT                         CHAR(32);
       99     5778    1   DCL UCBUF                          CHAR(2);
      100     5779    1   DCL DWORK                          CHAR(8);
      101     5780
      102     5781        %EJECT;
PL6.E3A0      #001=VWR$BREAK File=VWR$BREAK.:VMB6TSI                             WED 08/20/97 15:48 Page:13   
      103     5782        /****
      104     5783        *
      105     5784        *   Initialize FPTs.
      106     5785        *
      107     5786        ****/
      108     5787
      109     5788    1           READ_UC.BUF_.BUF$=ADDR(UCBUF);

   5788  4 000002   200016 630500                    EPPR0   UCBUF,,AUTO
         4 000003   000017 450400 1                  STP0    READ_UC+5

      110     5789
      111     5790        /****
      112     5791        *
      113     5792        *   Format the message prompt:  "nn% complete; C to continue:"
      114     5793        *
      115     5794        ****/
      116     5795
      117     5796    2           IF VW_TOTBYTES#>0 THEN DO;

   5796  4 000004   000000 235000 xsym               LDA     VW_TOTBYTES#
         4 000005   000061 604400 4                  TMOZ    s:5815

      118     5797    2              J=((1000*VW_INPCNT#)/VW_TOTBYTES#+5)/10;

   5797  4 000006   000000 236000 xsym               LDQ     VW_INPCNT#
         4 000007   001750 402007                    MPY     1000,DL
         4 000010   000000 506000 xsym               DIV     VW_TOTBYTES#
         4 000011   000005 036007                    ADLQ    5,DL
         4 000012   000012 506007                    DIV     10,DL
         4 000013   200004 756100                    STQ     J,,AUTO

      119     5798    2              CALL BINCHAR(DWORK,J);

   5798  4 000014   000100 301500                    BTD
         4 000015   200004 000004                    NDSC9   J,,AUTO                  cn=0,s=lsgnf,sf=0,n=4
         4 000016   200017 030010                    NDSC9   DWORK,,AUTO              cn=0,s=nosgn,sf=0,n=8
PL6.E3A0      #001=VWR$BREAK File=VWR$BREAK.:VMB6TSI                             WED 08/20/97 15:48 Page:14   

      120     5799    2              I=0;

   5799  4 000017   200003 450100                    STZ     I,,AUTO

      121     5800    3              DO WHILE(I<7 AND SUBSTR(DWORK,I,1)='0');

   5800  4 000020   000022 710000 4                  TRA     s:5802

      122     5801    3                 I=I+1;

   5801  4 000021   200003 054100                    AOS     I,,AUTO

      123     5802    3                 END;

   5802  4 000022   200003 235100                    LDA     I,,AUTO
         4 000023   000007 115007                    CMPA    7,DL
         4 000024   000031 605000 4                  TPL     s:5803
         4 000025   040000 106505                    CMPC    fill='040'O
         4 000026   200017 000001                    ADSC9   DWORK,A,AUTO             cn=0,n=1
         4 000027   000000 000001 5                  ADSC9   0                        cn=0,n=1
         4 000030   000021 600000 4                  TZE     s:5801

      124     5803    2              CALL CONCAT(PROMPT,'@',SUBSTR(DWORK,I,8-I),

   5803  4 000031   100000 236003                    LDQ     32768,DU
         4 000032   200006 756100                    STQ     PROMPT,,AUTO
         4 000033   777767 620005                    EAX0    -9,AL
         4 000034   777777 660003                    ERX0    -1,DU
         4 000035   040100 100545                    MLR     fill='040'O
         4 000036   200017 000010                    ADSC9   DWORK,A,AUTO             cn=0,n=*X0
         4 000037   200006 200037                    ADSC9   PROMPT,,AUTO             cn=1,n=31
         4 000040   200003 236100                    LDQ     I,,AUTO
         4 000041   000001 116000 5                  CMPQ    1
         4 000042   000050 604400 4                  TMOZ    s:5805
         4 000043   000027 621006                    EAX1    23,QL
         4 000044   000000 531000                    NEG     0
PL6.E3A0      #001=VWR$BREAK File=VWR$BREAK.:VMB6TSI                             WED 08/20/97 15:48 Page:15   
         4 000045   040145 100400                    MLR     fill='040'O
         4 000046   000000 000032 3                  ADSC9   0                        cn=0,n=26
         4 000047   200010 200011                    ADSC9   PROMPT+2,A,AUTO          cn=1,n=*X1

      125     5804    2                '% complete; C to continue:');
      126     5805    2              FPT_PROMPT.PROMPT_=VECTOR(SUBSTR(PROMPT,0,35-I));

   5805  4 000050   200003 235100                    LDA     I,,AUTO
         4 000051   000020 735000                    ALS     16
         4 000052   000002 675000 5                  ERA     2
         4 000053   000003 035000 5                  ADLA    3
         4 000054   200022 452500                    STP2    DWORK+3,,AUTO
         4 000055   200022 236100                    LDQ     DWORK+3,,AUTO
         4 000056   000006 036003                    ADLQ    6,DU
         4 000057   000004 757000 1                  STAQ    FPT_PROMPT+4

      127     5806    2              END;

   5806  4 000060   000071 710000 4                  TRA     s:5825

      128     5807
      129     5808        /****
      130     5809        *
      131     5810        *   If we haven't done anything:  "C to continue:"
      132     5811        *
      133     5812        ****/
      134     5813
      135     5814    2           ELSE DO;

      136     5815    2              PROMPT='@C to continue:';

   5815  4 000061   040100 100400                    MLR     fill='040'O
         4 000062   000007 000017 3                  ADSC9   7                        cn=0,n=15
         4 000063   200006 000040                    ADSC9   PROMPT,,AUTO             cn=0,n=32

      137     5816    2              FPT_PROMPT.PROMPT_=VECTOR(SUBSTR(PROMPT,0,15));

PL6.E3A0      #001=VWR$BREAK File=VWR$BREAK.:VMB6TSI                             WED 08/20/97 15:48 Page:16   
   5816  4 000064   000004 235000 5                  LDA     4
         4 000065   200022 452500                    STP2    DWORK+3,,AUTO
         4 000066   200022 236100                    LDQ     DWORK+3,,AUTO
         4 000067   000006 036003                    ADLQ    6,DU
         4 000070   000004 757000 1                  STAQ    FPT_PROMPT+4

      138     5817    2              END;

      139     5818
      140     5819        /****
      141     5820        *
      142     5821        *   Set the prompt string.
      143     5822        *
      144     5823        ****/
      145     5824
      146     5825    1           CALL M$PROMPT(FPT_PROMPT);

   5825  4 000071   000000 630400 1                  EPPR0   FPT_PROMPT
         4 000072   160002 713400                    CLIMB   57346
         4 000073   401000 401760                    pmme    nvectors=3

      147     5826
      148     5827        /****
      149     5828        *
      150     5829        *   Read the user's reply.  We read for two characters to allow the
      151     5830        *   user to change his/her mind.  If we read for only one character,
      152     5831        *   the read would be satisfied by the first character typed.  Note
      153     5832        *   that MOVE will NOT allow a command to be entered at this point.
      154     5833        *
      155     5834        ****/
      156     5835
      157     5836    1           UCBUF=' ';

   5836  4 000074   040040 220003                    LDX0    16416,DU
         4 000075   200016 740100                    STX0    UCBUF,,AUTO

      158     5837    1           READ_UC.BUF_.BOUND=1;
PL6.E3A0      #001=VWR$BREAK File=VWR$BREAK.:VMB6TSI                             WED 08/20/97 15:48 Page:17   

   5837  4 000076   000016 236000 1                  LDQ     READ_UC+4
         4 000077   177777 376007                    ANQ     65535,DL
         4 000100   200000 276007                    ORQ     65536,DL
         4 000101   000016 756000 1                  STQ     READ_UC+4

      159     5838    2           CALL M$READ(READ_UC) WHENALTRETURN DO;

   5838  4 000102   000012 630400 1                  EPPR0   READ_UC
         4 000103   440000 713400                    CLIMB   alt,read
         4 000104   401400 401760                    pmme    nvectors=4
         4 000105   000107 702000 4                  TSX2    s:5839
         4 000106   000110 710000 4                  TRA     s:5848

      160     5839    2              ALTRETURN;

   5839  4 000107   000000 702200 xent               TSX2  ! X66_AALT

      161     5840    2              END;
      162     5841
      163     5842        /****
      164     5843        *
      165     5844        *   Restore the prompt, clear VW_BROKEN#, then check reply.
      166     5845        *
      167     5846        ****/
      168     5847
      169     5848    1           PROMPT='@*';

   5848  4 000110   040100 100400                    MLR     fill='040'O
         4 000111   000013 000002 3                  ADSC9   11                       cn=0,n=2
         4 000112   200006 000040                    ADSC9   PROMPT,,AUTO             cn=0,n=32

      170     5849    1           FPT_PROMPT.PROMPT_=VECTOR(SUBSTR(PROMPT,0,2));

   5849  4 000113   377640 235007                    LDA     130976,DL
         4 000114   200022 452500                    STP2    DWORK+3,,AUTO
         4 000115   200022 236100                    LDQ     DWORK+3,,AUTO
PL6.E3A0      #001=VWR$BREAK File=VWR$BREAK.:VMB6TSI                             WED 08/20/97 15:48 Page:18   
         4 000116   000006 036003                    ADLQ    6,DU
         4 000117   000004 757000 1                  STAQ    FPT_PROMPT+4

      171     5850    1           CALL M$PROMPT(FPT_PROMPT);

   5850  4 000120   000000 630400 1                  EPPR0   FPT_PROMPT
         4 000121   160002 713400                    CLIMB   57346
         4 000122   401000 401760                    pmme    nvectors=3

      172     5851    1           VW_BROKEN#=0;

   5851  4 000123   000000 450000 xsym               STZ     VW_BROKEN#

      173     5852
      174     5853        /****
      175     5854        *
      176     5855        *   The "C" may be entered in either upper or lower case, but it must
      177     5856        *   be the first character typed.  If we don't find C or c, simply
      178     5857        *   ALTRETURN.
      179     5858        *
      180     5859        ****/
      181     5860
      182     5861    1           IF SUBSTR(UCBUF,0,1)='C' OR SUBSTR(UCBUF,0,1)='c' THEN

   5861  4 000124   200016 236100                    LDQ     UCBUF,,AUTO
         4 000125   777000 376003                    ANQ     -512,DU
         4 000126   103000 116003                    CMPQ    34304,DU
         4 000127   000134 600000 4                  TZE     s:5862
         4 000130   200016 236100                    LDQ     UCBUF,,AUTO
         4 000131   777000 376003                    ANQ     -512,DU
         4 000132   143000 116003                    CMPQ    50688,DU
         4 000133   000135 601000 4                  TNZ     s:5863

      183     5862    1              RETURN;

   5862  4 000134   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=VWR$BREAK File=VWR$BREAK.:VMB6TSI                             WED 08/20/97 15:48 Page:19   
      184     5863    1           ALTRETURN;

   5863  4 000135   000000 702200 xent               TSX2  ! X66_AALT

FPT_PROMPT
 Sect OctLoc
   1     000   000003 777640   000006 006000   000000 177640   000000 006014    ................
   1     004   000000 177640   000000 006014   000000 000000   000000 000000    ................
   1     010   100000 000000   000000 000000                                    @.......

READ_UC
 Sect OctLoc
   1     012   000005 777640   000022 006000   000000 177640   000000 006014    ................
   1     016   000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     022   000000 400000   000000 000000   000000 000000   000000 000000    ................
   1     026   000000 000000   000000 000000                                    ........

(unnamed)
 Sect OctLoc
   3     000   045040 143157   155160 154145   164145 073040   103040 164157    % complete; C to
   3     004   040143 157156   164151 156165   145072 040040   100103 040164     continue:  @C t
   3     010   157040 143157   156164 151156   165145 072040   100052 040040    o continue: @*

(unnamed)
 Sect OctLoc
   5     000   060040 040040   777777 777751   777777 777777   000010 577641    0   ............
   5     004   000003 577640                                                    ....
      185     5864
      186     5865    1   END;

PL6.E3A0      #001=VWR$BREAK File=VWR$BREAK.:VMB6TSI                             WED 08/20/97 15:48 Page:20   
--  Include file information  --

   CP_6_C.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure VWR$BREAK.
PL6.E3A0      #001=VWR$BREAK File=VWR$BREAK.:VMB6TSI                             WED 08/20/97 15:48 Page:21   

 **** Variables and constants ****

  ****  Section 001  Data  VWR$BREAK

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(360)   r     1 FPT_PROMPT                12-0-0/d STRC(504)   r     1 READ_UC

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    17-0-0/c CHAR(8)     r     1 DWORK                      3-0-0/w SBIN        r     1 I
     4-0-0/w SBIN        r     1 J                          5-0-0/w SBIN              1 K
     6-0-0/c CHAR(32)    r     1 PROMPT                    16-0-0/c CHAR(2)     r     1 UCBUF

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 VW_BROKEN#                 0-0-0/w SBIN        r     1 VW_INPCNT#
     0-0-0/w SBIN        r     1 VW_TOTBYTES#

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d ASTR(3528)  r     1 DUMMY                      0-0-0N  NULL        r     1 M$INP
     0-0-0N  NULL        r     1 M$UC


   Procedure VWR$BREAK requires 94 words for executable code.
PL6.E3A0      #001=VWR$BREAK File=VWR$BREAK.:VMB6TSI                             WED 08/20/97 15:48 Page:22   
   Procedure VWR$BREAK requires 20 words of local(AUTO) storage.

    No errors detected in file VWR$BREAK.:VMB6TSI    .
PL6.E3A0      #001=VWR$BREAK File=VWR$BREAK.:VMB6TSI                             WED 08/20/97 15:48 Page:23   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VWR$BREAK File=VWR$BREAK.:VMB6TSI                             WED 08/20/97 15:48 Page:24   
          MINI XREF LISTING

DUMMY.ACTPOS
      5737**DCL      5737--REDEF
DUMMY.ARS#
      5711**DCL      5711--REDEF
DUMMY.ATTR
      5730**DCL      5731--REDEF
DUMMY.BORROW
      5745**DCL      5745--REDEF    5745--REDEF    5745--REDEF
DUMMY.DCBNAME.L
      5759**DCL      5759--IMP-SIZ
DUMMY.EOMCHAR#
      5715**DCL      5715--REDEF
DUMMY.FLDID
      5740**DCL      5740--REDEF
DUMMY.FORM$
      5734**DCL      5734--REDEF
DUMMY.FSECT
      5750**DCL      5750--REDEF
DUMMY.FSN#
      5727**DCL      5727--REDEF    5727--REDEF    5728--REDEF
DUMMY.HEADER$
      5733**DCL      5733--REDEF
DUMMY.IXTNSIZE#
      5731**DCL      5731--REDEF
DUMMY.LASTSTA$
      5720**DCL      5720--REDEF
DUMMY.LVL
      5746**DCL      5746--REDEF
DUMMY.NAME#.C
      5721**DCL      5721--REDEF
DUMMY.NOEOF
      5743**DCL      5743--REDEF
PL6.E3A0      #001=VWR$BREAK File=VWR$BREAK.:VMB6TSI                             WED 08/20/97 15:48 Page:25   
DUMMY.NRECS#
      5732**DCL      5732--REDEF
DUMMY.NRECX
      5751**DCL      5751--REDEF
DUMMY.OHDR
      5743**DCL      5743--REDEF
DUMMY.ORG#
      5726**DCL      5726--REDEF
DUMMY.PRECNO
      5749**DCL      5749--REDEF
DUMMY.RCSZ
      5755**DCL      5755--REDEF
DUMMY.RES#
      5722**DCL      5722--REDEF
DUMMY.SETX
      5734**DCL      5734--REDEF
DUMMY.TAB$
      5734**DCL      5734--REDEF
DUMMY.TDA
      5748**DCL      5749--REDEF
DUMMY.WSN#
      5722**DCL      5722--REDEF
DWORK
      5779**DCL      5798<<CALLBLT  5800>>DOWHILE  5803>>CALLBLT
FPT_PROMPT
      5650**DCL      5825<>CALL     5850<>CALL
FPT_PROMPT.PROMPT_
      5656**DCL      5805<<ASSIGN   5816<<ASSIGN   5849<<ASSIGN
FPT_PROMPT.V
      5658**DCL      5652--DCLINIT
I
      5773**DCL      5799<<ASSIGN   5800>>DOWHILE  5800>>DOWHILE  5801<<ASSIGN   5801>>ASSIGN   5803>>CALLBLT
      5803>>CALLBLT  5805>>ASSIGN
J
      5774**DCL      5797<<ASSIGN   5798>>CALLBLT
M$PROMPT
PL6.E3A0      #001=VWR$BREAK File=VWR$BREAK.:VMB6TSI                             WED 08/20/97 15:48 Page:26   
      5579**DCL-ENT  5825--CALL     5850--CALL
M$READ
      5556**DCL-ENT  5838--CALL
PROMPT
      5777**DCL      5803<<CALLBLT  5805--ASSIGN   5815<<ASSIGN   5816--ASSIGN   5848<<ASSIGN   5849--ASSIGN
READ_UC
      5681**DCL      5838<>CALL
READ_UC.BUF_.BOUND
      5683**DCL      5837<<ASSIGN
READ_UC.BUF_.BUF$
      5684**DCL      5788<<ASSIGN
READ_UC.STATION_
      5684**DCL      5685--REDEF
READ_UC.V
      5685**DCL      5681--DCLINIT
READ_UC.V.DVBYTE.REREAD#
      5696**DCL      5696--REDEF
READ_UC.V.INDX#
      5694**DCL      5694--REDEF
UCBUF
      5778**DCL      5788--ASSIGN   5836<<ASSIGN   5861>>IF       5861>>IF
VW_BROKEN#
      5770**DCL      5851<<ASSIGN
VW_INPCNT#
      5771**DCL      5797>>ASSIGN
VW_TOTBYTES#
      5772**DCL      5796>>IF       5797>>ASSIGN
