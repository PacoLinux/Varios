

10:48 JUL 04 '97 :6EDIT_CONTEXT_VIP7303.:VDA5SI                            1    
    1      "*M* :6EDIT_CONTEXT_VIP7303 - Context file for 6Edit using Honeywell VIP7303 (WP 6 Keyboard)
    2      "*T***********************************************************
    3      "*T*                                                         *
    4      "*T* Copyright (c) Bull HN Information Systems Inc., 1997    *
    5      "*T*                                                         *
    6      "*T***********************************************************
    7      "----- Comments for customization of Introduction to 6Edit (CE73)
    8      "*K* SUBJECT VIP7303
    9      "*K* CONTEXT_FID :6EDIT_CONTEXT_VIP7303.:LIBRARY
   10      "*K* FORWARD_PATT_MSG1 SKIP 1 ''
   11      "*K* FORWARD_PATT_WORDS1 The cursor lands on the second apostrophe ('), ready for you to type a pattern string, a character or set of characters you would like to locate in your file.
   12      "*K* FORWARD_PATT_WORDS2 Without moving the cursor, type the letter ""I"".  6Edit inserts it between two apostrophes.  This tells 6Edit to search for the first match of the letter I.
   13      "*K* FORWARD_PATT_RPT retyping <CNTL-P>
   14      "*K* SUBSTITUTE_MSG1 COPY STRING '' OVER REPEAT SELECT PATTERN ''
   15      "*K* SUBSTITUTE_WORDS1 (This actually looks more complicated than it is!)  The cursor lands on the second apostrophe of the first pair, ready for you
   16      "*K* SUBSTITUTE_WORDS2 to type a replacement string for all pattern matches.  The pattern you want to replace goes between the second pair of apostrophes.
   17      "*K* SUBSTITUTE_WORDS3 Fill in the first set of apostrophes
   18      "*K* SUBSTITUTE_WORDS4 using <ESC> <N> to go to the end of the line, fill in the second set of apostrophes
   19      "*K* SUBSTITUTE_MSG3 *COPY STRING 'I, a humble admirer,' OVER REPEAT SELECT PATTERN 'I'
   20      "*K* HUMBLE_MSG SKIP 1 'HUMBLE'
   21      "*K* FORWARD_PATT_WORDS3 The cursor lands on the second apostrophe ('),
   22      "*K* SUBSTITUTE_WORDS5 The cursor lands on the second apostrophe ('), ready for you to type a replacement string for all pattern matches.
   23      "*K* SUBSTITUTE_WORDS6 Between the second pair of apostrophes ('') you type the pattern string to be replaced.
   24      "----- Standard synonyms and values
   25      SYNONYM REKEY IS COPY CURRENT OVER CURRENT
   26      SYNONYM EACH IS REPEAT SELECT RECORD SELECT
   27      SYNONYM SHL IS DELETE REPEAT SELECT RECORD SELECT BO RECORD THRU POSITION
   28      ESC EQ '%V(27)';    CR EQ '%V(13)';     $INTRO_2 EQ '%V(27)['
   29      "----- Special input activation characters for 6Edit
   30      CMD EQ '%V(3)'
   31      "----- Cursor movement keyins
   32      KEYIN ESC||'A' IS ESC||'A'                      "*K* BACKWARD_1 <Up Arrow>
   33      KEYIN ESC||'B' IS ESC||'B'                      "*K* FORWARD_1 <Down Arrow>
   34      KEYIN ESC||'!' IS CMD||'BACKWARD SKIP 8 BO RECORDS'||CR "*K* BACKWARD_8 <SHIFT-Up Arrow>
   35      KEYIN ESC||'"' IS CMD||'SKIP 8 BO RECORDS'||CR "*K* FORWARD_8 <SHIFT-Down Arrow>
   36      KEYIN ESC||'$' IS CMD||'BACKWARD SKIP 20 BO RECORDS'||CR "*K* BACKWARD_20 <SHIFT-PAGE>
   37      KEYIN ESC||'#' IS CMD||'SKIP 20 BO RECORDS'||CR "*K* FORWARD_20 <PAGE>
10:48 JUL 04 '97 :6EDIT_CONTEXT_VIP7303.:VDA5SI                            2    
   38      KEYIN ESC||'@' IS CMD||'BACKWARD SKIP 1 ''''%V(8)%V(27)>' "*K* BACKWARD_PATTERN <SHIFT-SEARCH>
   39      KEYIN ESC||'4' IS CMD||'SKIP 1 ''''%V(8)%V(27)>' "*K* FORWARD_PATTERN <SEARCH>
   40      KEYIN ESC||'&' IS CMD||'BO CURRENT'||CR         "*K* BO_CURRENT <SHIFT-NOTE>
   41      KEYIN ESC||'%%' IS CMD||'EO CURRENT'||CR         "*K* EO_CURRENT <NOTE>
   42      KEYIN ESC||'x' IS CMD||'L'||CR                  "*K* L <GOTO PAGE>
   43      "----- Block editing keyins
   44      KEYIN ESC||'<' IS CMD                           "*K* COMMAND <COMMAND>
   45      KEYIN ESC||'/' IS CMD||'THRU'||CR               "*K* THRU <ABBREV>
   46      KEYIN ESC||'3' IS CMD||'ADJUST'||CR             "*K* ADJUST <SHIFT-ABBREV>
   47      KEYIN ESC||'W' IS CMD||'COPY THAT'||CR          "*K* COPY <COPY>
   48      KEYIN ESC||'h' IS CMD||'MOVE THAT'||CR          "*K* MOVE <MOVE>
   49      "KEYIN IS CMD||'COPY RECORD'||CR"               "*K* COPY_RECORD <COMMAND> CO RE <RETURN>
   50      "KEYIN IS CMD||'MOVE RECORD'||CR"               "*K* MOVE_RECORD <COMMAND> MO RE <RETURN>
   51      KEYIN ESC||'g' IS CMD||'COPY L AFTER HERE'||CR  "*K* COPY_L_AFTER_HERE <SHIFT-COPY>
   52      KEYIN ESC||'j' IS CMD||'MOVE L AFTER HERE'||CR  "*K* MOVE_L_AFTER_HERE <SHIFT-MOVE>
   53      KEYIN ESC||'[I' IS CMD||'AFTER HERE'||CR        "*K* AFTER <INSERT>
   54      KEYIN ESC||'[L' IS CMD||'OVER THAT'||CR         "*K* OVER <SHIFT-INSERT>
   55      KEYIN ESC||'[P' IS CMD||'DELETE THAT'||CR       "*K* DELETE <DELETE>
   56      KEYIN ESC||'N' IS CMD||'EDIT THAT'||CR          "*K* EDIT_THAT <AUTO>
   57      KEYIN ESC||'{' IS CMD||'EDIT PREVIOUS'||CR      "*K* EDIT_PREVIOUS <Left unlabelled key>
   58      KEYIN ESC||'}' IS CMD||'EDIT NEXT'||CR          "*K* EDIT_NEXT <Right unlabelled key>
   59      KEYIN ESC||')' IS CMD||'LOCATION L IS THAT'||CR "*K* LO_L_IS_THAT <CODE>
   60      KEYIN ESC||'E' IS CMD||'COPY STRING '''' OVER REPEAT SELECT ''''%V(27)%V(13)%V(27)V''%V(18)%V(27)>' "*K* SUBSTITUTE <REPLACE>

