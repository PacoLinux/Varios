VERSION E05

PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:1    
        1        1        /*M*   JSE$EXITS   Exit - Abort Procedure     */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=3,IND=5,ENU=0,ECU=0    */
        8        8
        9        9        JSE$EXITS: PROC;
       10       10                                                /*LOCAL AUTO*/
       11       11        %INCLUDE B_ULSMAC_C;
       12     1120        %INCLUDE B$P;
       13     1204        %INCLUDE B$SS;
       14     1383        %INCLUDE B$USER;
       15     1599        %INCLUDE B$JIT_C;
       16     1913        %INCLUDE B_MACROS_C;
       17     2024        %INCLUDE B_MLSMAC_C;
       18     2966        %INCLUDE B_STRINGS_C;
       19     3095        %INCLUDE B$MAP;
       20     3194        %INCLUDE EL_SUBS_C;
       21     3278        %INCLUDE EL$TABLES;
       22     3601        %INCLUDE HF_ERRORS_C;
       23     3686        %INCLUDE J_ERRORS_C;
       24     3773        %INCLUDE JG_GHOSTS_C;
       25     3863        %INCLUDE OC_DATA_R;
       26     3872        %INCLUDE UD_EQU_E;
       27     4261        %INCLUDE UD_SEV_C;
       28     4275        %INCLUDE UE_CP6;
       29     4966
       30     4967    1   DCL CODE UBIN(36);
       31     4968    1   DCL JERR BIT(36);
       32     4969    1   DCL I SBIN;
       33     4970    1   DCL TEMP UBIN;
       34     4971    1   DCL WSR SBIN;
       35     4972    1   DCL TEMPF BIT(9);
       36     4973    1   DCL XCON$ PTR;
       37     4974                                                /* Parameters for JST$GETPROG         */
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:2    
       38     4975    1   DCL NAME$ PTR;                     /* Ptr to name of program to associate     */
       39     4976    1   DCL ACCT$ PTR;                          /* Ptr to acct named program is in    */
       40     4977    1   DCL PASS$ PTR;                     /* Ptr to (optional) password on program   */
       41     4978    1   DCL PSID$ PTR;                          /* Ptr to pack set id  program is on  */
       42     4979    1   DCL DEBUG$ PTR;                         /* Ptr to name of associated debugger */
       43     4980
       44     4981    1   DCL CMD$ PTR;
       45     4982    1   DCL CLEANUP$ EPTR;
       46     4983                                                /* PARAMETERS FOR SSU$DELTAGO         */
       47     4984        %B$EXCRTN (STCLASS=AUTO);
       48     4987    1   DCL ECC UBIN(36);
       49     4988
       50     4989        %EL$GABRT (STCLASS=STATIC);
       51     4994
       52     4995                                                /*EXTERNAL PROCEDURES                 */
       53     4996    1   DCL ELA$SYSLOG ENTRY(6) ALTRET;
       54     4997    1   DCL FOS$RUND ENTRY;
       55     4998    1   DCL HFF$NILERASE ENTRY(1) ALTRET;
       56     4999    1   DCL JLL$RTN ENTRY ALTRET;
       57     5000    1   DCL JLU$MLINK ENTRY(3) ALTRET;
       58     5001    1   DCL JSA$RUNDSPC ENTRY(2);
       59     5002    1   DCL JSD$DELUSR ENTRY;
       60     5003    1   DCL JSD$ZAPUSR ENTRY;
       61     5004    1   DCL JST$GETPROG ENTRY(5);
       62     5005    1   DCL JSN$FIXSSM ENTRY;
       63     5006    1   DCL JSR$RUNDOWN ENTRY ALTRET;
       64     5007    1   DCL JSS$FIXLASR ENTRY;
       65     5008    1   DCL JSS$RUNDSPC ENTRY;
       66     5009    1   DCL JZA$ASAVE ENTRY ALTRET;
       67     5010    1   DCL JSX$RUNXCON ENTRY(1);
       68     5011    1   DCL JSX$XCONSEE ENTRY;
       69     5012    1   DCL PHP$END_PMME ENTRY;
       70     5013    1   DCL SSS$SEXIT ENTRY;
       71     5014    1   DCL SSU$DELTAGO ENTRY(3);
       72     5015    1   DCL SSV$DORUND ENTRY(1);
       73     5016    1   DCL UDB$AUTO ENTRY;
       74     5017    1   DCL UDB$CALCOMP ENTRY;
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:3    
       75     5018    1   DCL UDB$PMMEXIT2 ENTRY;
       76     5019    1   DCL UDN$MAGIC ENTRY;
       77     5020    1   DCL UDN$MAGICLS ENTRY;
       78     5021    1   DCL UDN$MAGICSS ENTRY;
       79     5022    1   DCL UDN$BLDASR ENTRY;
       80     5023    1   DCL UEP$CLEARONE ENTRY(3) ALTRET;
       81     5024    1   DCL UEP$MOVETCB ENTRY(3) ALTRET;
       82     5025    1   DCL UEP$SAVLDT ENTRY ALTRET;
       83     5026                                                /* SCREECH ENTRIES                    */
       84     5027    1   DCL SC_JSEASF ENTRY CONV(2,0);
       85     5028    1   DCL SC_JSECPSUA ENTRY CONV(2,0);
       86     5029    1   DCL SC_JSESSF ENTRY CONV(2,0);
       87     5030    1   DCL SC_JSEMING ENTRY CONV(2,0);
       88     5031    1   DCL SC_SSUTCB ENTRY CONV(2,0);
       89     5032                                                /* EXTERNAL DATA                      */
       90     5033        %INCLUDE B_MAGIC_C;
       91     5151        %B_MPT (FPTN=B_MPT,STCLASS=SYMREF);
       92     5244    1   DCL 1 JG_SCREECHG(0:0) ALIGNED SYMREF,
       93     5245    1         2 GHOST SBIN;
       94     5246    1   DCL B$DBLS$ PTR SYMREF READONLY;
       95     5247    1   DCL B$JIT$ PTR SYMREF READONLY;
       96     5248    1   DCL B$PS0$ PTR SYMREF READONLY;
       97     5249    1   DCL B$PS1$ PTR SYMREF READONLY;
       98     5250    1   DCL B$MISC2$ PTR SYMREF READONLY;
       99     5251    1   DCL B$LS$ PTR SYMREF READONLY;
      100     5252    1   DCL B$UPT$ PTR SYMREF READONLY;
      101     5253    1   DCL B$USERLS$ PTR SYMREF READONLY;
      102     5254    1   DCL J_CPMXAS_D SYMREF READONLY UBIN(36);
      103     5255    1   DCL J_CPMXSS_D SYMREF READONLY UBIN(36);
      104     5256    1   DCL J_ATILA CHAR(8) SYMREF READONLY;
      105     5257    1   DCL J_SYSTXT CHAR(8)SYMREF READONLY;
      106     5258    1   DCL S_CUN UBIN SYMREF;
      107     5259                                                /* BASED STRUCTURES                   */
      108     5260        %B_USRULS (FPTN=B$ULS,STCLASS=BASED);
      109     5459        %B$USERREFS;
      110     5463        %B$JIT0;
      111     5552               %U$JIT1;
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:4    
      112     5626               %M$JIT2;
      113     5636               %F$JIT3X;
      114     5639               %S$JIT4X;
      115     5642               %J$JIT5;
      116     5730               %A$JIT6X;
      117     5733                                                /* SAFE STORE FRAME                   */
      118     5734                                                /* FRAME ON  ANY TCB                  */
      119     5735    1   DCL 1 B$ATCBF BASED ALIGNED,
      120     5736    1         2 PREVSIZ UBIN(18) UNAL,
      121     5737    1         2 ECC UBIN(18) UNAL,
      122     5738    1         2 ASL SBIN,
      123     5739    1         2 *(0:5) SBIN,
      124     5740    1         2 ISR,
      125     5741    1           3 * BIT(27) UNAL,
      126     5742    1           3 WSR UBIN(3) UNAL;
      127     5743
      128     5744    1   DCL 1 FTCB BASED ALIGNED,          /* FUNNY TCB STRUCTURE-USE WITH PINCRW     */
      129     5745    1         2 ALTFR SBIN HALF UNAL,
      130     5746    1         2 * UBIN(18) UNAL,
      131     5747    1         2 CRFR SBIN HALF UNAL,
      132     5748    1         2 * UBIN(18) UNAL,
      133     5749    1         2 UNUSED SBIN HALF UNAL,
      134     5750    1         2 CRSZ SBIN HALF UNAL;
      135     5751
      136     5752        %B$ECCB;
      137     5760        %B$XCON;
      138     5770
      139     5771        %T01DESCR (NAME=B$$DESCR);
      140     5779        %B_MLS (FPTN=B$MLS,STCLASS=BASED);
      141     6594    1   DCL 1 CCFPT BASED DALIGNED,
      142     6595    1         2 CODE UBIN(9) UNAL;
      143     6596
      144     6597    1   DCL 1 B$JERR BASED DALIGNED,
      145     6598    1         2 ERR BIT(36) UNAL;
      146     6599                                                /* STRING SUBSTITUTIONS               */
      147     6600        %SUB_EXC;
      148     6647        %SUB_ECCDELTA;
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:5    
      149     6684        %SUB B$JIT = B$JIT$->B$JIT;
      150     6685        %SUB B$P=B$P$->B$P;
      151     6686        %SUB B$SS=B_MPT.SS$->B$SS;
      152     6687        %SUB B$ECCB=B_MPT.ECCB$->B$ECCB;
      153     6688        %SUB B$XCON=XCON$->B$XCON;
      154     6689
      155     6690        /* TO SET JIT.ERR */
      156     6691        %INCLUDE J_ERRSET_C;
      157     6711        %SUB FCG#='1223'O;
      158     6712        %SUB MID#='05'O;
      159     6713                                                /*                                    */
      160     6714        %ERRCODE (NAME=EEXIT,COD#=0,SEV#=SEV_CONT#);
      161     6722        %ERRCODE (NAME=ERRPMME,COD#=%E$ERRPMME);
      162     6730        %ERRCODE (NAME=EASLERR,COD#=%E$ASLERR);
      163     6738        %ERRCODE (NAME=EDBERR,COD#=%E$DBERR);
      164     6746        %ERRCODE (NAME=ECPERR,COD#=%E$CPERR);
      165     6754        %ERRCODE (NAME=XXXPMME,COD#=%E$XXXPMME,SEV#=SEV_ABORT#);
      166     6762        %ERRCODE (NAME=EASLXXX,COD#=%E$ASLXXX,SEV#=SEV_ABORT#);
      167     6770        %ERRCODE (NAME=EDBXXX,COD#=%E$DBXXX,SEV#=SEV_ABORT#);
      168     6778        %ERRCODE (NAME=ECPXXX,COD#=%E$CPXXX,SEV#=SEV_ABORT#);
      169     6786        %ERRCODE (NAME=EASLABRT,COD#=%E$ASLABRT,SEV#=SEV_ABORT#);
      170     6794        %ERRCODE (NAME=EDBABRT,COD#=%E$DBABRT,SEV#=SEV_ABORT#);
      171     6802        %ERRCODE (NAME=ECPABRT,COD#=%E$CPABRT,SEV#=SEV_ABORT#);
      172     6810        %ERRCODE (NAME=ERRASF,COD#=%E$ASF,SEV#=SEV_ABORT#);
      173     6818        %ERRCODE (NAME=ERRSSF,COD#=%E$SSF,SEV#=SEV_ABORT#);
      174     6826        %EJECT;
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:6    
      175     6827                                                /*                                    */
      176     6828           /* JSE$EXITS is called from UDA$PMMENT to process
      177     6829              M$EXIT, M$ERR and M$XXX PMMEs.      */
      178     6830
      179     6831    1      CALL UDN$MAGIC;
      180     6832    1      CODE=B$SS.FPT.CODE;
      181     6833    1      WSR=B$SS.ISR.WSR;
      182     6834
      183     6835    1      B$SS.IC = B$SS.IC-2;
      184     6836
      185     6837    1      JERR='0'B;
      186     6838    1      B$JIT.CPFLAGS1.EXIT# = '0'B;
      187     6839    1      IF B_MPT.PSDESC$->B$$DESCR.BOUND ~= 0
      188     6840    2      THEN DO;
      189     6841    2           CALL HFF$NILERASE(0) ALTRET(NO_SCC);
      190     6842    2           B$JIT.STEPCC = B$PS0$->CCFPT.CODE;
      191     6843    2           B$JIT.JUNK = (B$JIT.JUNK | %JJ_SCCSET#);
      192     6844    2   NO_SCC: ;
      193     6845    2           CALL HFF$NILERASE(1) ALTRET(NO_JERR);
      194     6846    2           JERR=B$PS1$->B$JERR;
      195     6847    2           B$JIT.CPFLAGS1 = (B$JIT.CPFLAGS1 | %CP_EXIT#);
      196     6848                       /* * Always set CP_EXIT when any domain supplies error code    */
      197     6849    2   NO_JERR: ;
      198     6850    2           END;
      199     6851
      200     6852    2      DO CASE(CODE);
      201     6853
      202     6854    2       CASE(%C$EXIT#);
      203     6855    2         B$JIT.RNST = %RS_EXIT#;
      204     6856    2         B$JIT.ERR=EEXIT;
      205     6857
      206     6858    2       CASE(%C$ERR#);
      207     6859    2         B$JIT.RNST = %RS_ERR#;
      208     6860    3         DO CASE(WSR);
      209     6861    3          CASE(%USERWSR);
      210     6862    3            B$JIT.ERR=ERRPMME;
      211     6863        /*E*     ERROR:  JSE-E$ERRPMME-E
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:7    
      212     6864                 MESSAGE: M$ERR issued by user.
      213     6865        */
      214     6866    3          CASE(%ASLWSR);
      215     6867    3            B$JIT.ERR=EASLERR;
      216     6868        /*E*      ERROR:  JSE-E$ASLERR-E
      217     6869                 MESSAGE: M$ERR issued by Alternate Shared Library.
      218     6870        */
      219     6871    3          CASE(%DBWSR);
      220     6872    3            B$JIT.ERR=EDBERR;
      221     6873        /*E*     ERROR:  JSE-E$DBERR-E
      222     6874                 MESSAGE: M$ERR issued by Debugger.
      223     6875        */
      224     6876    3          CASE(%CPWSR);
      225     6877    3            B$JIT.ERR=ECPERR;
      226     6878        /*E*     ERROR:  JSE-E$CPERR-E
      227     6879                 MESSAGE: M$ERR issued by Command Processor.
      228     6880        */
      229     6881    3            END;                           /*DO CASE(WSR)                        */
      230     6882
      231     6883    2       CASE(%C$XXX#);
      232     6884    2         B$JIT.RNST = %RS_XXX#;
      233     6885    3         DO CASE(WSR);
      234     6886    3          CASE(%USERWSR);
      235     6887    3            B$JIT.ERR=XXXPMME;
      236     6888        /*E*     ERROR:   JSE-E$XXXPMME-A
      237     6889                 MESSAGE: M$XXX issued by user-domain program.
      238     6890        */
      239     6891    3          CASE(%ASLWSR);
      240     6892    3            B$JIT.ERR=EASLXXX;
      241     6893        /*E*     ERROR:  JSE-E$ASLXXX-A
      242     6894                 MESSAGE: M$XXX issued by Alternate Shared Library.
      243     6895        */
      244     6896    3          CASE(%DBWSR);
      245     6897    3            B$JIT.ERR=EDBXXX;
      246     6898        /*E*     ERROR:   JSE-E$DBXXX-A
      247     6899                 MESSAGE: M$XXX issued by Debugger.
      248     6900        */
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:8    
      249     6901    3          CASE(%CPWSR);
      250     6902    3            B$JIT.ERR=ECPXXX;
      251     6903        /*E*     ERROR:   JSE-E$CPXXX-A
      252     6904                 MESSAGE: M$XXX issued by Command Processor.
      253     6905        */
      254     6906    3            END;                           /*DO CASE(WSR)                        */
      255     6907
      256     6908    2         END;                              /*DO CASE(CODE)                       */
      257     6909
      258     6910                                 /* * Now replace JIT.ERR if so specified in the FPT  */
      259     6911    1      IF JERR ~= '0'B
      260     6912    1      THEN B$JIT.ERR = JERR;
      261     6913    1      CALL UDB$CALCOMP;
      262     6914
      263     6915    1      IF (WSR=%USERWSR)
      264     6916    2      THEN DO;
      265     6917    2           IF CODE ~= %C$EXIT#
      266     6918    3           THEN DO;
      267     6919    3                B$JIT.SVLDTF='000'O;
      268     6920    3                GOTO NOT_SVL;
      269     6921    3                END;
      270     6922    2           ELSE B$JIT.CPFLAGS1 = (B$JIT.CPFLAGS1 | %CP_EXIT#);
      271     6923                            /* * Always set CP_EXIT when user domain does an M$EXIT   */
      272     6924
      273     6925    2           IF (B$JIT.SVLDTF & %SVL_ECCB#)
      274     6926    3           THEN DO;
      275     6927    3                IF B_MPT.TCB$->FTCB.CRSZ=0
      276     6928    3                THEN GOTO NOT_SVL;
      277     6929
      278     6930    3                XCON$=PINCRW(B_MPT.TCB$,B_MPT.TCB$->FTCB.CRFR);
      279     6931    3                IF XCON$->B$ATCBF.ECC ~= %ECC_XCON#
      280     6932    3                THEN GOTO NOT_SVL;
      281     6933
      282     6934    3                TEMPF = B$XCON.CECCB;
      283     6935
      284     6936    3                IF (TEMPF & %SVL_ECCB#)
      285     6937    4                THEN DO;
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:9    
      286     6938    4                     IF (B_MPT.ECCBDESC$->B$$DESCR.FLGS & %DSXXX)
      287     6939    5                     THEN DO;
      288     6940    5                          B$EXCRTN='0'B;
      289     6941    5                          B$EXCRTN.SVL=%SVL_EXIT#;
      290     6942    5   DELTA_GO:              ;
      291     6943    5                          ECC=%ECC_EXCRTN#;
      292     6944    5                          B$EXCRTN.ECCS=%SC_XCONXIT#;
      293     6945    5                          B$EXCRTN.TYP=CODE;
      294     6946    5                          B$EXCRTN.EVID=B$SS.IC;
      295     6947    5                          B$EXCRTN.ERR=B$JIT.ERR;
      296     6948    5                          B$EXCRTN.P#=0;
      297     6949    5                          CALL SSU$DELTAGO(ECC,B$EXCRTN);
      298     6950    5                          END;
      299     6951    5                     ELSE DO;
      300     6952    5                          B$JIT.SVLDTF=(B$JIT.SVLDTF | %SVL_EXIT#);
      301     6953    5                          GOTO NO_XCON;
      302     6954    5                          END;
      303     6955    4                     END;                  /*DO IF TEMPF & ECCB#                 */
      304     6956    3                END;                       /*DO IF SVLDTF & ECCB#                */
      305     6957    2   NOT_SVL: ;
      306     6958    2           IF (B_MPT.ECCBDESC$->B$$DESCR.FLGS & %DSXXX)
      307     6959    3           THEN DO;
      308     6960    3                IF B$ECCB.XCONF.PROG='1'B
      309     6961    4                THEN DO;
      310     6962    4                     B$EXCRTN='0'B;
      311     6963    4                     GOTO DELTA_GO;
      312     6964    4                     END;                  /* DO IF FINAL EXIT                   */
      313     6965    3                END;                       /* DO IF DELTA ASSOCIATED             */
      314     6966    2           END;                            /*DO IF %USERWSR                      */
      315     6967    1   NOT_DELTA: ;
      316     6968    1      GOTO ABORTX1;
      317     6969                                                /*  Enter the rundown logic           */
      318     6970
      319     6971        %EJECT;
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:10   
      320     6972                                                /*  ENTRY TO THE ABORT LOGIC          */
      321     6973
      322     6974        /* ABORTM used when RNST not yet set */
      323     6975    1   JSE$ABORTM1: ENTRY;
      324     6976    1      B$JIT.CPFLAGS1.EXIT# = '0'B;
      325     6977    1   ABORTM1: ;
      326     6978
      327     6979    1      B$JIT.RNST = B$JIT.RNST | %RS_ABRT#;
      328     6980        /* If we're aborting an M$LINK, then its no longer in progress!! */
      329     6981    1      IF S$CU$->B$U.FLG & %U_STIP
      330     6982    2      THEN DO;
      331     6983    2           B$JIT.JUNK=(B$JIT.JUNK &~ %JJ_MLINKIP#);
      332     6984    2           B$JIT.SVLDTF='000'O;
      333     6985    2           B$JIT.USRRNST = B$JIT.RNST;
      334     6986    2           B$JIT.USRERR=B$JIT.ERR;
      335     6987    2           B$JIT.USRDCB = B$JIT.DCBNO;
      336     6988    2           B$JIT.STEPCC = SEV_ABORT#;
      337     6989    2           GOTO JLL_CHECK;
      338     6990    2           END;
      339     6991    1      GOTO ABORTX1;
      340     6992                                                /*                                    */
      341     6993                                                /*                                    */
      342     6994        /* ABORTX used when RNST is already set */
      343     6995    1   JSE$ABORTX1: ENTRY;
      344     6996    1      IF (B$JIT.JUNK & %JJ_MLINKIP#) THEN
      345     6997    1           GOTO JLL_CHECK;
      346     6998    1      B$JIT.CPFLAGS1.EXIT# = '0'B;
      347     6999    1   ABORTX1:;
      348     7000
      349     7001        /* ABORTY used when both RNST and CPFLAGS1.EXIT# set
      350     7002        */
      351     7003    1   JSE$ABORTY1: ENTRY;
      352     7004
      353     7005    1      IF NOT (B$JIT.RNST & %RS_XKEY#) AND (B$JIT.RNST & %RS_DROP#)
      354     7006    2      THEN DO;
      355     7007    2           CALL JZA$ASAVE ALTRET(ABRTX1);
      356     7008    2           END;
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:11   
      357     7009
      358     7010    1      IF (B$JIT.RNST = %RS_ATILA#)
      359     7011    2      THEN DO;
      360     7012    2           B$JIT.RNST = (B$JIT.RNST &~ %RS_ATILA#);
      361     7013    2           B$JIT.JUNK = (B$JIT.JUNK | %JJ_ASYNCLINK#);
      362     7014
      363     7015    2           NAME$ = ADDR(J_ATILA);
      364     7016    2           CMD$ = ADDR(NIL);
      365     7017    2           CLEANUP$ = ENTADDR(NIL);
      366     7018    2           CALL JLU$MLINK(NAME$,CMD$,CLEANUP$)
      367     7019    3           WHENALTRETURN DO;
      368     7020    3                B$JIT.RNST = (B$JIT.RNST | %RS_ATILA#);
      369     7021    3                END;
      370     7022    2           END;
      371     7023    1      IF (B$JIT.RNST & %RS_CL3#) = '000'O THEN GOTO JSE$MAIN;
      372     7024
      373     7025    1   ABRTX1: ;
      374     7026    1      B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 | %CP_LOGOFF#;
      375     7027
      376     7028        %EJECT;
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:12   
      377     7029
      378     7030           /*  JSE$MAIN runs thru the Safe-Store Stack giving everyone
      379     7031               a shot a Exit Control.   */
      380     7032    1   JSE$MAIN: ;
      381     7033
      382     7034    1      CALL UDN$BLDASR;
      383     7035    1      CALL UDN$MAGIC;
      384     7036
      385     7037                       /* This is for M$YC that causes antry to STEP which aborts     */
      386     7038    1      IF ( (B$JIT.CPFLAGS1 & %CP_YCPMME#)
      387     7039    1        AND ( (B$JIT.RNST & %RS_XCON#) = '000'O)
      388     7040    1        AND (B$SS.ISR.WSR = %USERWSR) )
      389     7041    2      THEN DO;
      390     7042    2           IF (B$JIT.SVLDTF & %SVL_ECCB#) = '000'O
      391     7043    3           THEN DO;
      392     7044    3   EXIT_YCPMME: ;
      393     7045    3                B$JIT.CPFLAGS1=(B$JIT.CPFLAGS1 &~ %CP_YCPMME#);
      394     7046    3                CALL UDB$PMMEXIT2;
      395     7047    3                END;
      396     7048    2           END;
      397     7049
      398     7050
      399     7051    1   JSE$MAIN1: ;
      400     7052
      401     7053    1      B$JIT.FRS=(B$JIT.FRS     | (B$JIT.RNST & %RS_XCON#) );
      402     7054                                      /*Remember limx-drop-!x-!e for any ABORT  entry */
      403     7055
      404     7056
      405     7057    1      WSR  = B$SS.ISR.WSR;
      406     7058    2      DO CASE(WSR);
      407     7059
      408     7060    2       CASE(%USERWSR);
      409     7061    2         IF (B$JIT.XCONF & %XC_URND#) THEN GOTO USRDONE;
      410     7062
      411     7063    2         IF (B$JIT.JUNK & %JJ_SCCSET#)
      412     7064    2         THEN B$JIT.JUNK=(B$JIT.JUNK &~ %JJ_SCCSET#);
      413     7065    2         ELSE B$JIT.STEPCC = B$JIT.ERR.SEV;
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:13   
      414     7066
      415     7067    2         IF (B$JIT.SVLDTF & %SVL_ECCB#)
      416     7068    3         THEN DO;
      417     7069    3              IF (B$JIT.SVLDTF & %SVL_READY#) THEN GOTO USRDONE;
      418     7070    3              IF (B$JIT.SVLDTF & %SVL_SAVE#)
      419     7071    4              THEN DO;
      420     7072    4                   IF (B$JIT.JUNK & %JJ_SCON#) ='000000'O
      421     7073    4                     OR (B$JIT.SVLDTF & %SVL_DIC#)
      422     7074    4                   THEN GOTO BYPASS_XCON;
      423     7075    4                   END;
      424     7076                                                /*NOW IS THE TIME TO ENTER USER XCON  */
      425     7077    3              IF B$ECCB.FLAGS.XCONSET='1'B
      426     7078    4              THEN DO;
      427     7079    4                   XCON$=PINCRW(B_MPT.TCB$,B_MPT.TCB$->FTCB.CRFR);
      428     7080    4                   IF XCON$->B$ATCBF.ECC ~= %ECC_SAVLDT#
      429     7081    4                   THEN GOTO USR_XCONSEE;  /* MAY BE ABORT IN XCON ROUTINE       */
      430     7082    4                   TEMPF=(B$ECCB.XCONF | (B$JIT.SVLDTF & %SVL_ECCB#) );
      431     7083    4                   TEMPF=(TEMPF | '400'O); /*IN PROGRESS                         */
      432     7084    4                   B$XCON.CECCB=(TEMPF &~ B$XCON.ECCB);
      433     7085    4                   B$XCON.ECSC=0;
      434     7086    4                   B$XCON.RNST=B$JIT.RNST;
      435     7087    4                   B$XCON.LIMIT=B$JIT.XLIMFLG;
      436     7088    4                   B$XCON.XCONF=(B$JIT.XCONF | B$JIT.FRS);
      437     7089    4                   B$XCON.ECCB=B$ECCB.XCONF;
      438     7090    4                   B$XCON.ERR=B$JIT.ERR;
      439     7091    4                   XCON$->B$ATCBF.ECC=%ECC_XCON#;
      440     7092    4                   IF (B$JIT.XCONF & %RS_CL3#)
      441     7093    4                   THEN GOTO NO_DELTA;
      442     7094    4                   IF (B_MPT.ECCBDESC$->B$$DESCR.FLGS & %DSXXX)
      443     7095    5                   THEN DO;
      444     7096    5   SAVLDT_FIN:          ;
      445     7097    6                        DO INHIBIT;
      446     7098    6                             B$LS$->B$MLS.MISC2=B$USERLS$->B$ULS.TCB; /* USER TCB */
      447     7099    6                             B_MPT.LSDESC$->B$$DESCR=B$LS$->B$MLS.DBLS; /* DELTA LS */
      448     7100    6                             CALL UDN$MAGICLS; /* DELTA DESCRs TO MAGIC          */
      449     7101    6                             XCON$=B$MISC2$; /* USER TCB POINTER                 */
      450     7102    6                             CALL UEP$MOVETCB (0,ADDR(NIL),XCON$) ALTRET(ALT_DTCB);
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:14   
      451     7103    6                             END;          /* INHIBIT                            */
      452     7104    5                        CALL UDN$MAGICSS;  /* RESET MAGIC TO WHAT IT WAS         */
      453     7105                                                /*GET SVLDT FRAME OFF USER TCB        */
      454     7106    5                        XCON$=ADDR(NIL);
      455     7107    5                        CALL UEP$CLEARONE(0,XCON$);
      456     7108
      457     7109    5                        CODE=%ECC_SAVLDT#;
      458     7110    5                        CALL SSU$DELTAGO (CODE,0);
      459     7111
      460     7112    5                        END;               /*DO IF XCON - DELTA ASSOCIATED       */
      461     7113    5                   ELSE DO;
      462     7114    5   NO_DELTA:            ;
      463     7115    5                        B$ECCB.XCONF.PROG='1'B;
      464     7116    5                        B$ECCB.XCONF=(B$ECCB.XCONF | (B$JIT.SVLDTF & %SVL_ECCB#) );
      465     7117    5   MT2:                 ;
      466     7118    5                        XCON$->B$ATCBF.ECC=%ECC_XCON#;
      467     7119    5                        B$SS.IC=B$ECCB.XCON;
      468     7120    5                        CALL UDB$AUTO;
      469     7121                                                /* FLUSH AUTO-ENTER USER XCON         */
      470     7122    5                        END;               /*DO IF XCON - NO DELTA               */
      471     7123    4                   END;                    /*DO IF XCONSET                       */
      472     7124    3   BYPASS_XCON: ;
      473     7125    3              B$JIT.SVLDTF =(B$JIT.SVLDTF | %SVL_TRTN#);
      474     7126                                                /*SET READY                           */
      475     7127    3              IF (B$JIT.SVLDTF & %SVL_LDTRC#)
      476     7128    3              THEN GOTO NO_XCON;
      477     7129    3              ELSE GOTO USRDONE;
      478     7130
      479     7131    3   ALT_DTCB:  ;                            /*ALTRET FROM MOVETCB                 */
      480     7132    3              CALL SC_SSUTCB;
      481     7133    3              END;                         /*DO IF SVL_ECCB#                     */
      482     7134    2   USR_XCONSEE: ;
      483     7135
      484     7136    2         IF (S$CU$->B$U.FLG & %U_CAN)
      485     7137    3         THEN DO;
      486     7138    3              B$JIT.XCONF = (B$JIT.XCONF | %XC_QUIT#);
      487     7139    3              S$CU$->B$U.FLG = (S$CU$->B$U.FLG &~ %U_CAN);
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:15   
      488     7140    3              B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 | %CP_LOGOFF#;
      489     7141    3              END;
      490     7142    2         TEMPF=B$JIT.RNST;
      491     7143    2         CALL JSX$XCONSEE;
      492     7144
      493     7145    2   NO_XCON: ;
      494     7146    2         CALL SSV$DORUND(WSR);
      495     7147
      496     7148    2         B$JIT.XCONF = ( (B$JIT.XCONF & %XC_DOMAIN#) | %XC_URND# );
      497     7149    2         IF (B$JIT.XCONF & %XC_QUIT#)
      498     7150    3         THEN DO;
      499     7151    3              IF ( (TEMPF & %RS_EKEY#) AND (B$JIT.CPFLAGS1 & %CP_LOGOFF#) )
      500     7152    4              THEN DO;
      501     7153    4                   B$JIT.USRRNST = (TEMPF | %RS_ERR#);
      502     7154                            /* RS_ERR# + RS_EKEY means canceled to KEYIN in USRRNST   */
      503     7155    4                   B$JIT.USRERR = B$JIT.ERR;
      504     7156    4                   B$JIT.USRDCB = 0;
      505     7157    4                   END;
      506     7158    4              ELSE DO;
      507     7159    4                   IF B$JIT.JUNK & %JJ_RTNXIT#
      508     7160    4                   THEN GOTO QUIT_AFTER_LINK;
      509     7161    4                   ELSE B$JIT.USRRNST = %RS_EXIT#;
      510     7162    4                   END;
      511     7163    3              END;
      512     7164    3         ELSE DO;
      513     7165    3   QUIT_AFTER_LINK: ;
      514     7166    3              B$JIT.USRRNST = TEMPF;
      515     7167    3              B$JIT.USRERR=B$JIT.ERR;
      516     7168    3              B$JIT.USRDCB=B$JIT.DCBNO;
      517     7169    3              END;
      518     7170    2         B$JIT.USRIC = B$SS.IC;
      519     7171
      520     7172    2         GOTO USRDONE;
      521     7173
      522     7174
      523     7175    2       CASE(%ASLWSR);
      524     7176    2         CALL JSX$XCONSEE;
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:16   
      525     7177    2         JERR=EASLABRT;
      526     7178        /*E*   ERROR:  JSE-E$ASLABRT-A
      527     7179               MESSAGE: Your Alternate Shared Library aborted the job.
      528     7180        */
      529     7181    2         CALL SSV$DORUND(WSR);
      530     7182    2         B$JIT.XCONF = ( (B$JIT.XCONF & %XC_DOMAIN#) | %XC_ASL# );
      531     7183    2         CALL JSA$RUNDSPC(%ASLWSR);
      532     7184
      533     7185    2       CASE(%DBWSR);
      534     7186    2         CALL JSX$XCONSEE;
      535     7187    2         JERR=EDBABRT;
      536     7188        /*E*   ERROR:  JSE-E$DBABRT-A
      537     7189               MESSAGE: Your Debugger aborted the job.
      538     7190        */
      539     7191    2         CALL SSV$DORUND(WSR);
      540     7192    2         B$JIT.XCONF = (B$JIT.XCONF & %XC_DOMAIN#);
      541     7193    2         IF NOT(B$JIT.XCONF & %XC_URND#)
      542     7194    3         THEN DO;
      543     7195    3              TEMP = B$JIT.PLL + B$JIT.PCP - 1;
      544     7196    4              DO I=B$JIT.PLL TO TEMP;
      545     7197    4                   B$UPT$->B$MAP.CTRL(I) = (%PGINMEM | %PGIOM);
      546     7198    4                   END;
      547     7199    3              END;
      548     7200    2         IF (B$JIT.JUNK & %JJ_DLIB#)
      549     7201    2           OR (B$JIT.RNST & (%RS_ERR# | %RS_XXX# | %RS_ABRT#) )
      550     7202    2           OR ( (  (B$JIT.JUNK & %JJ_RTNXIT#) = '000000'O )
      551     7203    2           AND (  (B$JIT.SVLDTF & %SVL_ECCB#) = '000'O )  )
      552     7204    2         THEN CALL JSA$RUNDSPC(%DBWSR,1);
      553     7205    3         ELSE DO;
      554     7206    3              CALL JSA$RUNDSPC(%DBWSR,0);
      555     7207    3              IF (B$JIT.SVLDTF & %SVL_ECCB#)
      556     7208    4              THEN DO;
      557     7209    4                   XCON$=ADDR(NIL);
      558     7210    5                   DO WHILE('1'B);
      559     7211    5                        I=%DBWSR;
      560     7212                                      /*TELLS CLEARONE TO REMOVE ONLY %DBWSQ FRAMES   */
      561     7213    5                        CALL UEP$CLEARONE(I,XCON$)  ALTRET(DONE);
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:17   
      562     7214    5                        IF XCON$->B$ATCBF.ISR.WSR  = %USERWSR
      563     7215    6                        THEN DO;
      564     7216    6                             XCON$->B$ATCBF.ASL=0;
      565     7217    6                             GOTO DONE;
      566     7218    6                             END;          /*DO IF %USERWSR*/
      567     7219    5                        END;               /*DO FOREVER                          */
      568     7220    4                   END;                    /*DO IF SVL_ECCB                      */
      569     7221    3              END;                         /*DO IF RTNXIT OR DLIB                */
      570     7222    2   DONE: ;
      571     7223
      572     7224    2       CASE(%CPWSR);
      573     7225    2         CALL JSX$XCONSEE;
      574     7226    2         JERR=ECPABRT;
      575     7227        /*E*   ERROR:  JSE-E$CPABRT-A
      576     7228               MESSAGE: Your Command Processor aborted the job.
      577     7229        */
      578     7230    2         B$JIT.XCONF = (B$JIT.XCONF & %XC_DOMAIN#);
      579     7231    2         CALL SSV$DORUND(WSR);
      580     7232    2         IF (B$JIT.RNST & %RS_ABRT#) THEN CALL SC_JSECPSUA;
      581     7233    2         IF (B$JIT.CPFLAGS1 & %CP_KEEPDS#)
      582     7234    2         THEN CALL JSA$RUNDSPC(%CPWSR,0);
      583     7235    2         ELSE CALL JSA$RUNDSPC(%CPWSR,1);
      584     7236        /*S*   SCREECH_CODE:  JSE-S$CPSUA
      585     7237               TYPE:   SUA
      586     7238               MESSAGE:  Command Processor aborted
      587     7239               REMARKS:  The command processor aborted and the user
      588     7240                         must be aborted.
      589     7241        */
      590     7242
      591     7243    2       CASE(ELSE);
      592     7244    2         CALL SC_JSESSF;
      593     7245        /*S*   SCREECH_CODE:  JSE-S$SSFRAME
      594     7246               TYPE:   SUA
      595     7247               MESSAGE:  Invalid frame on the users Safe-Store Stack.
      596     7248               REMARKS:  The bad Safe-Store frame was detected by
      597     7249                         JSE$EXITS when running down the Job Step.
      598     7250                         The WSR in the ISR is not 7,6,5 or 4.
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:18   
      599     7251        */
      600     7252
      601     7253    2         END;                              /*Do case(ewsq)                       */
      602     7254        /**/
      603     7255    1      CALL JSS$RUNDSPC;
      604     7256    1      IF (B$JIT.RNST & %RS_XCON#) THEN GOTO JSE$MAIN1;
      605     7257                                                /*                                    */
      606     7258                                                /*                                    */
      607     7259    1      IF (B$JIT.JUNK & %JJ_DLIB#)
      608     7260    2      THEN DO;
      609     7261    2           B$JIT.RNST='000'O;
      610     7262    2           B$JIT.JUNK = (B$JIT.JUNK &~ %JJ_DLIB#);
      611     7263    2           CALL UDB$PMMEXIT2;
      612     7264    2           END;
      613     7265    1      IF NOT(B$JIT.XCONF & %XC_URND#)
      614     7266    1        AND NOT(B$JIT.SVLDTF & %SVL_ECCB#)
      615     7267    2      THEN DO;
      616     7268    2           IF (B$JIT.ERR.CODE=0) OR (B$JIT.RNST & %RS_ABRT#)
      617     7269    2           THEN B$JIT.ERR=JERR;
      618     7270    2           B$JIT.RNST=( (B$JIT.RNST & %RS_XCON#) | %RS_SSP#);
      619     7271    2           END;
      620     7272        /**/
      621     7273    1      GOTO JSE$MAIN1;
      622     7274
      623     7275        %EJECT;
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:19   
      624     7276
      625     7277    1   ABORT_ASF: ;
      626     7278    1      IF B$SS.ISR.WSR ~= %USERWSR THEN CALL SC_JSEASF;
      627     7279        /*S*   SCREECH_CODE:   JSE-S$MAGIC
      628     7280               TYPE:   SUA
      629     7281               MESSAGE: The users Argument Stack is full at abort/exit or JSE$ACP.
      630     7282               REMARKS:   JSE$EXITS was called to rundown the Job Step
      631     7283                          with less than 10 words remaining on the
      632     7284                          users Argument Stack.
      633     7285                          Can also happen if trying to enter the Command
      634     7286                          Processor with less than nn words remaining on
      635     7287                          the Argument Stack.
      636     7288                          If the top Safe-Store Stack frame is the users
      637     7289                          he is aborted with error code E$ASF instead of
      638     7290                          of Screeching.
      639     7291        */
      640     7292    1      IF B$JIT.ERR.CODE=0 THEN B$JIT.ERR=ERRASF;
      641     7293    1      CALL JSS$FIXLASR;
      642     7294        /*E*   ERROR: JSE-E$ASF-A
      643     7295               MESSAGE: Argument/Parameter Stack is full on entry to the Command Processor.
      644     7296               DESCRIPTION: This error can occur if:
      645     7297                                1) The user enters the Exit/Abort logic
      646     7298                                   with less than 10 words remaining on the
      647     7299                                   Argument/Parameter Stack.
      648     7300                                2) The user hits Control-Y causing a call
      649     7301                                   to JSE$ACP with less than nn words
      650     7302                                   remaining on the Argument/Parameter
      651     7303                                   Stack.
      652     7304                            In either case, the error code in the JIT is
      653     7305                            is set to E$ASF only if it currently is non-
      654     7306                            zero.  The Argument/Parameter Stack is flushed
      655     7307                            in all frames found on Safe-Store and the user
      656     7308                            is aborted.
      657     7309        */
      658     7310    1      GOTO ABORTM1;
      659     7311        %EJECT;
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:20   
      660     7312
      661     7313           /* USERDONE provides for giving Exit Control to those
      662     7314              Domains that were not found on Safe-Store at the time
      663     7315              of the entry to the Exit-Rundown logic.   */
      664     7316    1   USRDONE: ;
      665     7317    1      IF (S$CU$->B$U.ACP=0) AND (S_CUN > JG_MING#)
      666     7318    1      THEN GOTO RUNDUSER;
      667     7319    1      CALL JSX$RUNXCON(0);                 /*Trickle up for xcon now             */
      668     7320
      669     7321                                           /* AND FINALLY WE CAN DO A LDTRC OR SAVE   */
      670     7322
      671     7323    1      IF  (B$JIT.SVLDTF & %SVL_ECCB#)
      672     7324    2      THEN DO;
      673     7325    2           TEMPF=B$JIT.SVLDTF;
      674     7326    2           B$JIT.SVLDTF=(B$JIT.SVLDTF &~ %SVL_READY#);
      675     7327    2           CALL UEP$SAVLDT ALTRET(NOT_SAVLDT);
      676     7328                                                /*TO GET TO HERE ITS SAVE             */
      677     7329    2           B$JIT.SVLDTF=(B$JIT.SVLDTF &~ %SVL_SAVE#);
      678     7330    2           IF (TEMPF & %SVL_YCSAVE#)
      679     7331    3           THEN DO;
      680     7332    3                IF (B$JIT.CPFLAGS1 & %CP_YCPMME#)
      681     7333    3                THEN GOTO EXIT_YCPMME;
      682     7334    3                B$JIT.USRERR = B$JIT.ERR;
      683     7335    3                B$JIT.SVLDTF=(B$JIT.SVLDTF | %SVL_GET#);
      684     7336    3                GOTO ACP1;
      685     7337    3                END;
      686     7338                                                /*YC SAVE - XCON OR NO XCON           */
      687     7339    2           IF NOT(B$JIT.JUNK & %JJ_SCON#)
      688     7340    2           THEN CALL UDB$PMMEXIT2;
      689     7341                                                /*IF M$SAVE-NO XCON                   */
      690     7342    2           IF (TEMPF & %SVL_TRTN#)
      691     7343    3           THEN DO;
      692     7344    3                IF B$JIT.ERR.CODE ~= 0
      693     7345    3                THEN CALL UDB$PMMEXIT2;
      694     7346
      695     7347    3                IF (B$JIT.JUNK & %JJ_UDELTA#)
      696     7348    3                THEN GOTO SAVLDT_FIN;
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:21   
      697     7349
      698     7350    3                CALL UDB$AUTO;
      699     7351                                                /* If M$TRTN from M$SAVE XCON         */
      700     7352
      701     7353    3                END;                       /* DO IF TRTN                         */
      702     7354    2           GOTO RUNDUSER;
      703     7355                                      /*ONLY THING LEFT IS M$EXIT FROM M$SAVE XCON    */
      704     7356    2   NOT_SAVLDT: ;
      705     7357    2           B$JIT.SVLDTF='000'O;
      706     7358    2           END;                            /*DO IF SVL_ECCB#                     */
      707     7359
      708     7360
      709     7361        /* Check for load and link  return flags */
      710     7362    1   JLL_CHECK: ;
      711     7363    1      IF (B$JIT.JUNK & %JJ_RTNXIT#)
      712     7364    2      THEN DO;
      713     7365    2           CALL JLL$RTN ALTRET(JLL_ALT);
      714     7366    2           END;
      715     7367    1   JLL_ALT: ;
      716     7368
      717     7369    1   RUNDUSER: ;
      718     7370    1      IF NOT(B$JIT.CPFLAGS1 & %CP_JSTEP#)
      719     7371    1      THEN B$JIT.CPFLAGS1 = ( (B$JIT.CPFLAGS1 & %CP_RESET#) | %CP_RUND#);
      720     7372
      721     7373    1      IF ( (B$JIT.MODE = %M_GHOST#) AND (S_CUN <= JG_MING#) )
      722     7374    2      THEN DO;
      723     7375    2           IF B_ZIP ~= 0
      724     7376    2           THEN GOTO LOGOFFUSR;
      725     7377    2           S$CU$->B$U.FLG.CPIC='0'B;
      726     7378    2           IF B$JIT.USRRNST ~= '000'O
      727     7379    3           THEN DO;
      728     7380    3                EL$GABRT.ERR=B$JIT.ERR;
      729     7381    3                EL$GABRT.USRERR=B$JIT.USRERR;
      730     7382    3                EL$GABRT.SYSID=B$JIT.SYSID;
      731     7383    3                EL$GABRT.IC=B$SS.IC;
      732     7384    3                EL$GABRT.RNST=B$JIT.USRRNST;
      733     7385    3                EL$GABRT.FRS=B$JIT.FRS;
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:22   
      734     7386    3                EL$GABRT.STEPCC=B$JIT.STEPCC;
      735     7387    3                EL$GABRT.XLIMFLG=B$JIT.XLIMFLG;
      736     7388    3                EL$GABRT.UNAME=B$JIT.UNAME;
      737     7389    3                EL$GABRT.CCBUF=B$JIT.CCBUF;
      738     7390    3                CALL ELA$SYSLOG(EL_GABRT,EL$GABRT,SIZEW(EL$GABRT),'0'B,1,ECC);
      739     7391    3                END;
      740     7392    2           END;
      741     7393
      742     7394
      743     7395    1      IF S_CUN <= JG_MING#
      744     7396    1      THEN IF JG_SCREECHG.GHOST(S_CUN) = 1
      745     7397    2           THEN DO;                        /* This MING Ghost may not go off     */
      746     7398    2                CALL SC_JSEMING;
      747     7399        /*S*   SCREECH_CODE:  JSE-S$MING
      748     7400               TYPE: SUA
      749     7401               MESSAGE: A System Ghost has aborted.
      750     7402               REMARKS: SCREECH will turn this SUA into a full Screech
      751     7403                        if this is a required System Ghost that is aborting.
      752     7404                        Called as a SUA so the user# is output on the
      753     7405                        OC log.
      754     7406                        These screeches may be avoided by modifying the
      755     7407                        JG_SCREECHG table.
      756     7408        */
      757     7409    2   LOGOFFUSR:   ;
      758     7410    2                CALL JSR$RUNDOWN ALTRET(ZAPUSER);
      759     7411    2                CALL JSD$DELUSR;
      760     7412    2   ZAPUSER:     CALL JSD$ZAPUSR;
      761     7413    2                END;
      762     7414
      763     7415    1      IF (B$JIT.XCONF & %XC_QUIT#)
      764     7416    2      THEN DO;
      765     7417    2           B$JIT.USRERR='0'B;
      766     7418    2           GOTO JSE_QUIT;
      767     7419    2           END;
      768     7420
      769     7421    1      IF (B$JIT.USRRNST = %RS_EXIT#)
      770     7422    1        OR (B$JIT.CPFLAGS1 & %CP_LOGOFF#)
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:23   
      771     7423    1        OR (S$CU$->B$U.FLG & %U_STIP)
      772     7424    2      THEN DO;
      773     7425    2   JSE_QUIT: ;
      774     7426    2           CALL JSR$RUNDOWN ALTRET(ZAPUSER);
      775     7427    2           END;
      776     7428
      777     7429    1      GOTO ACP1;
      778     7430
      779     7431        %EJECT;
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:24   
      780     7432
      781     7433        /*F*   NAME:  JSE$ACP
      782     7434               PURPOSE:  To associate a user with his Command Processor
      783     7435        */
      784     7436
      785     7437    1   JSE$ACP1: ENTRY;
      786     7438    1   ACP1:;
      787     7439        /*   Call MAGIC to setup SSR.  Call BLDASR to initialize ASR in case
      788     7440             it was used by comgroups.  Then call MAGIC again to get its ASR
      789     7441             descriptor right.                                                */
      790     7442    1      CALL UDN$MAGIC;
      791     7443    1      CALL UDN$BLDASR;
      792     7444    1      CALL UDN$MAGIC;
      793     7445                                      /*Make sure there is room on the Argument Stack */
      794     7446    1      IF B_MPT.ASDESC$->B$$DESCR.BASE > J_CPMXAS_D
      795     7447    1      THEN GOTO ABORT_ASF;
      796     7448             /* Flush the Argument/Parmaeter Stack and abort the user.
      797     7449                If we let it go we will likely get a Screech JSE-8-6 when
      798     7450                IBEX does an M$GETDCB which causes a call to M$MREAD.
      799     7451             */
      800     7452
      801     7453                                                /* And enough room on Safe-Store      */
      802     7454
      803     7455    1      IF B_MPT.SSDESC$->B$$DESCR.BASE > J_CPMXSS_D
      804     7456    2      THEN DO;
      805     7457    2           CALL JSN$FIXSSM;                /*will SUA if top frame is not user*/
      806     7458    2           B$JIT.ERR=ERRSSF;
      807     7459        /*E*   ERROR:  JSE-E$SSF-A
      808     7460               MESSAGE: Your Safe-Store Stack is full on entry to the Command Processor.
      809     7461        */
      810     7462    2           GOTO ABORTM1;
      811     7463    2           END;                            /*Do if >cpmxss*/
      812     7464
      813     7465    1      IF S$CU$->B$U.ACP=0
      814     7466    1      THEN GOTO LOGOFFUSR;                 /* Must be user hung up during log-on */
      815     7467    1      NAME$ = ADDR(B$P.NAME(S$CU$->B$U.ACP)); /* Get ptr to cp name              */
      816     7468    1      ACCT$  = ADDR(J_SYSTXT);             /* And acct = :SYS for asp            */
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:25   
      817     7469    1      PASS$ = ADDR(NIL);
      818     7470    1      PSID$ = ADDR(NIL);
      819     7471    1      DEBUG$ = ADDR(NIL);
      820     7472                  /* Set flag for cp to log off user if exiting ghost, or operator    */
      821     7473                                                /* Abort or line drop.                */
      822     7474    1      IF ( (B$JIT.MODE=%M_GHOST#) AND (S$CU$->B$U.ACP=0) ) OR
      823     7475    1        ((B$JIT.FRS & (%RS_XKEY# | %RS_DROP#)) ~= '0'B)
      824     7476    1      THEN B$JIT.CPFLAGS1 = (B$JIT.CPFLAGS1 | %CP_LOGOFF#);
      825     7477    1      B$JIT.RNST = '000'O;
      826     7478        /* Remember active priv's while in the CP in case someone has      */
      827     7479        /* M$SPRIV'ed something (i.e. its not in PRC or JOB).              */
      828     7480    1      B$JIT.PRIV.SAVED = B$JIT.PRIV.ACTIVE;
      829     7481    1      B$JIT.PRIV.ACTIVE = '0'B;
      830     7482    1      CALL JST$GETPROG(NAME$,ACCT$,PASS$,PSID$,DEBUG$);
      831     7483                                                /*  Will not return                   */
      832     7484    1   END JSE$EXITS;

PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:26   
--  Include file information  --

   J_ERRSET_C.:E05TOU  is referenced.
   B_MAGIC_C.:E05TOU  is referenced.
   UE_CP6.:E05TOU  is referenced.
   UD_SEV_C.:E05TOU  is referenced.
   UD_EQU_E.:E05TOU  is referenced.
   OC_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   JG_GHOSTS_C.:E05TOU  is referenced.
   J_ERRORS_C.:E05TOU  is referenced.
   HF_ERRORS_C.:E05TOU  is referenced.
   EL$TABLES.:E05TOU  is referenced.
   EL_SUBS_C.:E05TOU  is referenced.
   B$MAP.:E05TOU  cannot be made into a system file and is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   B_MLSMAC_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B$SS.:E05TOU  cannot be made into a system file and is referenced.
   B$P.:E05TOU  cannot be made into a system file and is referenced.
   B_ULSMAC_C.:E05TOU  is referenced.
      No diagnostics issued in procedure JSE$EXITS.

   Procedure JSE$EXITS requires 1101 words for executable code.
   Procedure JSE$EXITS requires 28 words of local(AUTO) storage.

    No errors detected in file JSE$EXITS.:E05TSI    .

PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:27   

 Object Unit name= JSE$EXITS                                  File name= JSE$EXITS.:E05TOU
 UTS= JUL 29 '97 23:44:00.28 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none    72    110  JSE$EXITS
    1  RoData even  UTS     22     26  JSE$EXITS
    2   Proc  even  none  1101   2115  JSE$EXITS
    3  RoData even  none    22     26  JSE$EXITS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        0  JSE$EXITS
     2    321                  yes      Std        0  JSE$ABORTM1
     2    357                  yes      Std        0  JSE$ABORTX1
     2    370                  yes      Std        0  JSE$ABORTY1
     2   1773                  yes      Std        0  JSE$ACP1
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:28   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 UDN$MAGIC
 yes     yes           Std       1 HFF$NILERASE
         yes           Std       0 UDB$CALCOMP
 yes     yes           Std       0 JZA$ASAVE
         yes           Std       0 UDB$PMMEXIT2
         yes           Std       0 UDN$MAGICLS
         yes           Std       0 JSD$ZAPUSR
         yes           Std       5 JST$GETPROG
 yes     yes           Std       0 UEP$SAVLDT
 yes     yes           Std       0 JSR$RUNDOWN
         yes           Std       0 JSD$DELUSR
         yes           Std       0 UDN$BLDASR
 yes     yes           Std       3 UEP$CLEARONE
         yes           Std       3 SSU$DELTAGO
 yes     yes           Std       3 JLU$MLINK
         yes           Std       0 UDN$MAGICSS
         yes           Std       0 UDB$AUTO
         yes           Std       2 JSA$RUNDSPC
         yes           Std       0 JSS$RUNDSPC
         yes           Std       0 JSS$FIXLASR
 yes     yes           Std       6 ELA$SYSLOG
         yes           Std       1 JSX$RUNXCON
         yes           Std       0 JSN$FIXSSM
         yes           Std       0 JSX$XCONSEE
         yes           Std       1 SSV$DORUND
 yes     yes           Std       0 JLL$RTN
 yes     yes           Std       3 UEP$MOVETCB
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:29   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SC_JSEMING                            SC_JSECPSUA                           SC_JSEASF
     SC_JSESSF                             SC_SSUTCB                             B$P$
     B_ZIP                                 B_MPT                                 JG_SCREECHG
r    B$JIT$                           r    B$PS0$                           r    B$PS1$
r    B$MISC2$                         r    B$LS$                            r    B$UPT$
r    B$USERLS$                        r    J_CPMXAS_D                       r    J_CPMXSS_D
r    J_ATILA                          r    J_SYSTXT                              S_CUN
     S$CU$                                 B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ASLENTSID                             ISSID
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:30   


        1        1        /*M*   JSE$EXITS   Exit - Abort Procedure     */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=3,IND=5,ENU=0,ECU=0    */
        8        8
        9        9        JSE$EXITS: PROC;

      9  2 000000   000000 700200 xent  JSE$EXITS    TSX0  ! X66_AUTO_0
         2 000001   000034 000000                    ZERO    28,0

       10       10                                                /*LOCAL AUTO*/
       11       11        %INCLUDE B_ULSMAC_C;
       12     1120        %INCLUDE B$P;
       13     1204        %INCLUDE B$SS;
       14     1383        %INCLUDE B$USER;
       15     1599        %INCLUDE B$JIT_C;
       16     1913        %INCLUDE B_MACROS_C;
       17     2024        %INCLUDE B_MLSMAC_C;
       18     2966        %INCLUDE B_STRINGS_C;
       19     3095        %INCLUDE B$MAP;
       20     3194        %INCLUDE EL_SUBS_C;
       21     3278        %INCLUDE EL$TABLES;
       22     3601        %INCLUDE HF_ERRORS_C;
       23     3686        %INCLUDE J_ERRORS_C;
       24     3773        %INCLUDE JG_GHOSTS_C;
       25     3863        %INCLUDE OC_DATA_R;
       26     3872        %INCLUDE UD_EQU_E;
       27     4261        %INCLUDE UD_SEV_C;
       28     4275        %INCLUDE UE_CP6;
       29     4966
       30     4967    1   DCL CODE UBIN(36);
       31     4968    1   DCL JERR BIT(36);
       32     4969    1   DCL I SBIN;
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:31   
       33     4970    1   DCL TEMP UBIN;
       34     4971    1   DCL WSR SBIN;
       35     4972    1   DCL TEMPF BIT(9);
       36     4973    1   DCL XCON$ PTR;
       37     4974                                                /* Parameters for JST$GETPROG         */
       38     4975    1   DCL NAME$ PTR;                     /* Ptr to name of program to associate     */
       39     4976    1   DCL ACCT$ PTR;                          /* Ptr to acct named program is in    */
       40     4977    1   DCL PASS$ PTR;                     /* Ptr to (optional) password on program   */
       41     4978    1   DCL PSID$ PTR;                          /* Ptr to pack set id  program is on  */
       42     4979    1   DCL DEBUG$ PTR;                         /* Ptr to name of associated debugger */
       43     4980
       44     4981    1   DCL CMD$ PTR;
       45     4982    1   DCL CLEANUP$ EPTR;
       46     4983                                                /* PARAMETERS FOR SSU$DELTAGO         */
       47     4984        %B$EXCRTN (STCLASS=AUTO);
       48     4987    1   DCL ECC UBIN(36);
       49     4988
       50     4989        %EL$GABRT (STCLASS=STATIC);
       51     4994
       52     4995                                                /*EXTERNAL PROCEDURES                 */
       53     4996    1   DCL ELA$SYSLOG ENTRY(6) ALTRET;
       54     4997    1   DCL FOS$RUND ENTRY;
       55     4998    1   DCL HFF$NILERASE ENTRY(1) ALTRET;
       56     4999    1   DCL JLL$RTN ENTRY ALTRET;
       57     5000    1   DCL JLU$MLINK ENTRY(3) ALTRET;
       58     5001    1   DCL JSA$RUNDSPC ENTRY(2);
       59     5002    1   DCL JSD$DELUSR ENTRY;
       60     5003    1   DCL JSD$ZAPUSR ENTRY;
       61     5004    1   DCL JST$GETPROG ENTRY(5);
       62     5005    1   DCL JSN$FIXSSM ENTRY;
       63     5006    1   DCL JSR$RUNDOWN ENTRY ALTRET;
       64     5007    1   DCL JSS$FIXLASR ENTRY;
       65     5008    1   DCL JSS$RUNDSPC ENTRY;
       66     5009    1   DCL JZA$ASAVE ENTRY ALTRET;
       67     5010    1   DCL JSX$RUNXCON ENTRY(1);
       68     5011    1   DCL JSX$XCONSEE ENTRY;
       69     5012    1   DCL PHP$END_PMME ENTRY;
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:32   
       70     5013    1   DCL SSS$SEXIT ENTRY;
       71     5014    1   DCL SSU$DELTAGO ENTRY(3);
       72     5015    1   DCL SSV$DORUND ENTRY(1);
       73     5016    1   DCL UDB$AUTO ENTRY;
       74     5017    1   DCL UDB$CALCOMP ENTRY;
       75     5018    1   DCL UDB$PMMEXIT2 ENTRY;
       76     5019    1   DCL UDN$MAGIC ENTRY;
       77     5020    1   DCL UDN$MAGICLS ENTRY;
       78     5021    1   DCL UDN$MAGICSS ENTRY;
       79     5022    1   DCL UDN$BLDASR ENTRY;
       80     5023    1   DCL UEP$CLEARONE ENTRY(3) ALTRET;
       81     5024    1   DCL UEP$MOVETCB ENTRY(3) ALTRET;
       82     5025    1   DCL UEP$SAVLDT ENTRY ALTRET;
       83     5026                                                /* SCREECH ENTRIES                    */
       84     5027    1   DCL SC_JSEASF ENTRY CONV(2,0);
       85     5028    1   DCL SC_JSECPSUA ENTRY CONV(2,0);
       86     5029    1   DCL SC_JSESSF ENTRY CONV(2,0);
       87     5030    1   DCL SC_JSEMING ENTRY CONV(2,0);
       88     5031    1   DCL SC_SSUTCB ENTRY CONV(2,0);
       89     5032                                                /* EXTERNAL DATA                      */
       90     5033        %INCLUDE B_MAGIC_C;
       91     5151        %B_MPT (FPTN=B_MPT,STCLASS=SYMREF);
       92     5244    1   DCL 1 JG_SCREECHG(0:0) ALIGNED SYMREF,
       93     5245    1         2 GHOST SBIN;
       94     5246    1   DCL B$DBLS$ PTR SYMREF READONLY;
       95     5247    1   DCL B$JIT$ PTR SYMREF READONLY;
       96     5248    1   DCL B$PS0$ PTR SYMREF READONLY;
       97     5249    1   DCL B$PS1$ PTR SYMREF READONLY;
       98     5250    1   DCL B$MISC2$ PTR SYMREF READONLY;
       99     5251    1   DCL B$LS$ PTR SYMREF READONLY;
      100     5252    1   DCL B$UPT$ PTR SYMREF READONLY;
      101     5253    1   DCL B$USERLS$ PTR SYMREF READONLY;
      102     5254    1   DCL J_CPMXAS_D SYMREF READONLY UBIN(36);
      103     5255    1   DCL J_CPMXSS_D SYMREF READONLY UBIN(36);
      104     5256    1   DCL J_ATILA CHAR(8) SYMREF READONLY;
      105     5257    1   DCL J_SYSTXT CHAR(8)SYMREF READONLY;
      106     5258    1   DCL S_CUN UBIN SYMREF;
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:33   
      107     5259                                                /* BASED STRUCTURES                   */
      108     5260        %B_USRULS (FPTN=B$ULS,STCLASS=BASED);
      109     5459        %B$USERREFS;
      110     5463        %B$JIT0;
      111     5552               %U$JIT1;
      112     5626               %M$JIT2;
      113     5636               %F$JIT3X;
      114     5639               %S$JIT4X;
      115     5642               %J$JIT5;
      116     5730               %A$JIT6X;
      117     5733                                                /* SAFE STORE FRAME                   */
      118     5734                                                /* FRAME ON  ANY TCB                  */
      119     5735    1   DCL 1 B$ATCBF BASED ALIGNED,
      120     5736    1         2 PREVSIZ UBIN(18) UNAL,
      121     5737    1         2 ECC UBIN(18) UNAL,
      122     5738    1         2 ASL SBIN,
      123     5739    1         2 *(0:5) SBIN,
      124     5740    1         2 ISR,
      125     5741    1           3 * BIT(27) UNAL,
      126     5742    1           3 WSR UBIN(3) UNAL;
      127     5743
      128     5744    1   DCL 1 FTCB BASED ALIGNED,          /* FUNNY TCB STRUCTURE-USE WITH PINCRW     */
      129     5745    1         2 ALTFR SBIN HALF UNAL,
      130     5746    1         2 * UBIN(18) UNAL,
      131     5747    1         2 CRFR SBIN HALF UNAL,
      132     5748    1         2 * UBIN(18) UNAL,
      133     5749    1         2 UNUSED SBIN HALF UNAL,
      134     5750    1         2 CRSZ SBIN HALF UNAL;
      135     5751
      136     5752        %B$ECCB;
      137     5760        %B$XCON;
      138     5770
      139     5771        %T01DESCR (NAME=B$$DESCR);
      140     5779        %B_MLS (FPTN=B$MLS,STCLASS=BASED);
      141     6594    1   DCL 1 CCFPT BASED DALIGNED,
      142     6595    1         2 CODE UBIN(9) UNAL;
      143     6596
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:34   
      144     6597    1   DCL 1 B$JERR BASED DALIGNED,
      145     6598    1         2 ERR BIT(36) UNAL;
      146     6599                                                /* STRING SUBSTITUTIONS               */
      147     6600        %SUB_EXC;
      148     6647        %SUB_ECCDELTA;
      149     6684        %SUB B$JIT = B$JIT$->B$JIT;
      150     6685        %SUB B$P=B$P$->B$P;
      151     6686        %SUB B$SS=B_MPT.SS$->B$SS;
      152     6687        %SUB B$ECCB=B_MPT.ECCB$->B$ECCB;
      153     6688        %SUB B$XCON=XCON$->B$XCON;
      154     6689
      155     6690        /* TO SET JIT.ERR */
      156     6691        %INCLUDE J_ERRSET_C;
      157     6711        %SUB FCG#='1223'O;
      158     6712        %SUB MID#='05'O;
      159     6713                                                /*                                    */
      160     6714        %ERRCODE (NAME=EEXIT,COD#=0,SEV#=SEV_CONT#);
      161     6722        %ERRCODE (NAME=ERRPMME,COD#=%E$ERRPMME);
      162     6730        %ERRCODE (NAME=EASLERR,COD#=%E$ASLERR);
      163     6738        %ERRCODE (NAME=EDBERR,COD#=%E$DBERR);
      164     6746        %ERRCODE (NAME=ECPERR,COD#=%E$CPERR);
      165     6754        %ERRCODE (NAME=XXXPMME,COD#=%E$XXXPMME,SEV#=SEV_ABORT#);
      166     6762        %ERRCODE (NAME=EASLXXX,COD#=%E$ASLXXX,SEV#=SEV_ABORT#);
      167     6770        %ERRCODE (NAME=EDBXXX,COD#=%E$DBXXX,SEV#=SEV_ABORT#);
      168     6778        %ERRCODE (NAME=ECPXXX,COD#=%E$CPXXX,SEV#=SEV_ABORT#);
      169     6786        %ERRCODE (NAME=EASLABRT,COD#=%E$ASLABRT,SEV#=SEV_ABORT#);
      170     6794        %ERRCODE (NAME=EDBABRT,COD#=%E$DBABRT,SEV#=SEV_ABORT#);
      171     6802        %ERRCODE (NAME=ECPABRT,COD#=%E$CPABRT,SEV#=SEV_ABORT#);
      172     6810        %ERRCODE (NAME=ERRASF,COD#=%E$ASF,SEV#=SEV_ABORT#);
      173     6818        %ERRCODE (NAME=ERRSSF,COD#=%E$SSF,SEV#=SEV_ABORT#);
      174     6826        %EJECT;
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:35   
      175     6827                                                /*                                    */
      176     6828           /* JSE$EXITS is called from UDA$PMMENT to process
      177     6829              M$EXIT, M$ERR and M$XXX PMMEs.      */
      178     6830
      179     6831    1      CALL UDN$MAGIC;

   6831  2 000002   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000003   000000 701000 xent               TSX1    UDN$MAGIC
         2 000004   000000 011000                    NOP     0

      180     6832    1      CODE=B$SS.FPT.CODE;

   6832  2 000005   000000 470400 xsym               LDP0    B_MPT
         2 000006   000001 236100                    LDQ     1,,PR0
         2 000007   000022 772000                    QRL     18
         2 000010   007777 376007                    ANQ     4095,DL
         2 000011   200003 756100                    STQ     CODE,,AUTO

      181     6833    1      WSR=B$SS.ISR.WSR;

   6833  2 000012   000010 236100                    LDQ     8,,PR0
         2 000013   000004 772000                    QRL     4
         2 000014   000007 376007                    ANQ     7,DL
         2 000015   200007 756100                    STQ     WSR,,AUTO

      182     6834
      183     6835    1      B$SS.IC = B$SS.IC-2;

   6835  2 000016   000004 220100                    LDX0    4,,PR0
         2 000017   777776 621010                    EAX1    -2,X0
         2 000020   000004 741100                    STX1    4,,PR0

      184     6836
      185     6837    1      JERR='0'B;

   6837  2 000021   200004 450100                    STZ     JERR,,AUTO

PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:36   
      186     6838    1      B$JIT.CPFLAGS1.EXIT# = '0'B;

   6838  2 000022   000000 471400 xsym               LDP1    B$JIT$
         2 000023   000000 236000 3                  LDQ     0
         2 000024   100143 356100                    ANSQ    99,,PR1

      187     6839    1      IF B_MPT.PSDESC$->B$$DESCR.BOUND ~= 0

   6839  2 000025   000011 473400 xsym               LDP3    B_MPT+9
         2 000026   300000 236100                    LDQ     0,,PR3
         2 000027   000034 316000 xsym               CANQ    B_VECTNIL+28
         2 000030   000060 600000 2                  TZE     NO_JERR

      188     6840    2      THEN DO;

      189     6841    2           CALL HFF$NILERASE(0) ALTRET(NO_SCC);

   6841  2 000031   000001 630400 3                  EPPR0   1
         2 000032   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000033   000000 701000 xent               TSX1    HFF$NILERASE
         2 000034   000045 702000 2                  TSX2    NO_SCC

      190     6842    2           B$JIT.STEPCC = B$PS0$->CCFPT.CODE;

   6842  2 000035   000000 470400 xsym               LDP0    B$PS0$
         2 000036   000000 471400 xsym               LDP1    B$JIT$
         2 000037   000000 236100                    LDQ     0,,PR0
         2 000040   000011 772000                    QRL     9
         2 000041   100316 552120                    STBQ    206,'20'O,PR1

      191     6843    2           B$JIT.JUNK = (B$JIT.JUNK | %JJ_SCCSET#);

   6843  2 000042   100315 220100                    LDX0    205,,PR1
         2 000043   000040 260003                    ORX0    32,DU
         2 000044   100315 740100                    STX0    205,,PR1

   6843  2 000045                       NO_SCC       null
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:37   
      192     6844    2   NO_SCC: ;
      193     6845    2           CALL HFF$NILERASE(1) ALTRET(NO_JERR);

   6845  2 000045   000002 630400 3                  EPPR0   2
         2 000046   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000047   000000 701000 xent               TSX1    HFF$NILERASE
         2 000050   000060 702000 2                  TSX2    NO_JERR

      194     6846    2           JERR=B$PS1$->B$JERR;

   6846  2 000051   000000 470400 xsym               LDP0    B$PS1$
         2 000052   000000 236100                    LDQ     0,,PR0
         2 000053   200004 756100                    STQ     JERR,,AUTO

      195     6847    2           B$JIT.CPFLAGS1 = (B$JIT.CPFLAGS1 | %CP_EXIT#);

   6847  2 000054   000000 471400 xsym               LDP1    B$JIT$
         2 000055   100143 236100                    LDQ     99,,PR1
         2 000056   000016 276000 1                  ORQ     ERRSSF+1
         2 000057   100143 756100                    STQ     99,,PR1

   6847  2 000060                       NO_JERR      null
      196     6848                       /* * Always set CP_EXIT when any domain supplies error code    */
      197     6849    2   NO_JERR: ;
      198     6850    2           END;

      199     6851
      200     6852    2      DO CASE(CODE);

   6852  2 000060   200003 235100                    LDA     CODE,,AUTO
         2 000061   000004 115007                    CMPA    4,DL
         2 000062   000064 602005 2                  TNC     NO_JERR+4,AL
         2 000063   000155 710000 2                  TRA     s:6911
         2 000064   000155 710000 2                  TRA     s:6911
         2 000065   000070 710000 2                  TRA     s:6855
         2 000066   000076 710000 2                  TRA     s:6859
         2 000067   000126 710000 2                  TRA     s:6884
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:38   

      201     6853
      202     6854    2       CASE(%C$EXIT#);

      203     6855    2         B$JIT.RNST = %RS_EXIT#;

   6855  2 000070   000000 470400 xsym               LDP0    B$JIT$
         2 000071   000000 236003                    LDQ     0,DU
         2 000072   000314 552140                    STBQ    204,'40'O,PR0

      204     6856    2         B$JIT.ERR=EEXIT;

   6856  2 000073   000000 236000 1                  LDQ     EEXIT
         2 000074   000012 756100                    STQ     10,,PR0
         2 000075   000155 710000 2                  TRA     s:6911

      205     6857
      206     6858    2       CASE(%C$ERR#);

      207     6859    2         B$JIT.RNST = %RS_ERR#;

   6859  2 000076   000000 470400 xsym               LDP0    B$JIT$
         2 000077   001000 236003                    LDQ     512,DU
         2 000100   000314 552140                    STBQ    204,'40'O,PR0

      208     6860    3         DO CASE(WSR);

   6860  2 000101   200007 235100                    LDA     WSR,,AUTO
         2 000102   000004 135007                    SBLA    4,DL
         2 000103   000004 115007                    CMPA    4,DL
         2 000104   000106 602005 2                  TNC     s:6860+5,AL
         2 000105   000155 710000 2                  TRA     s:6911
         2 000106   000123 710000 2                  TRA     s:6877
         2 000107   000120 710000 2                  TRA     s:6872
         2 000110   000115 710000 2                  TRA     s:6867
         2 000111   000112 710000 2                  TRA     s:6862

PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:39   
      209     6861    3          CASE(%USERWSR);

      210     6862    3            B$JIT.ERR=ERRPMME;

   6862  2 000112   000001 236000 1                  LDQ     ERRPMME
         2 000113   000012 756100                    STQ     10,,PR0
         2 000114   000155 710000 2                  TRA     s:6911

      211     6863        /*E*     ERROR:  JSE-E$ERRPMME-E
      212     6864                 MESSAGE: M$ERR issued by user.
      213     6865        */
      214     6866    3          CASE(%ASLWSR);

      215     6867    3            B$JIT.ERR=EASLERR;

   6867  2 000115   000002 236000 1                  LDQ     EASLERR
         2 000116   000012 756100                    STQ     10,,PR0
         2 000117   000155 710000 2                  TRA     s:6911

      216     6868        /*E*      ERROR:  JSE-E$ASLERR-E
      217     6869                 MESSAGE: M$ERR issued by Alternate Shared Library.
      218     6870        */
      219     6871    3          CASE(%DBWSR);

      220     6872    3            B$JIT.ERR=EDBERR;

   6872  2 000120   000003 236000 1                  LDQ     EDBERR
         2 000121   000012 756100                    STQ     10,,PR0
         2 000122   000155 710000 2                  TRA     s:6911

      221     6873        /*E*     ERROR:  JSE-E$DBERR-E
      222     6874                 MESSAGE: M$ERR issued by Debugger.
      223     6875        */
      224     6876    3          CASE(%CPWSR);

      225     6877    3            B$JIT.ERR=ECPERR;

PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:40   
   6877  2 000123   000004 236000 1                  LDQ     ECPERR
         2 000124   000012 756100                    STQ     10,,PR0

      226     6878        /*E*     ERROR:  JSE-E$CPERR-E
      227     6879                 MESSAGE: M$ERR issued by Command Processor.
      228     6880        */
      229     6881    3            END;                           /*DO CASE(WSR)                        */

   6881  2 000125   000155 710000 2                  TRA     s:6911

      230     6882
      231     6883    2       CASE(%C$XXX#);

      232     6884    2         B$JIT.RNST = %RS_XXX#;

   6884  2 000126   000000 470400 xsym               LDP0    B$JIT$
         2 000127   002000 236003                    LDQ     1024,DU
         2 000130   000314 552140                    STBQ    204,'40'O,PR0

      233     6885    3         DO CASE(WSR);

   6885  2 000131   200007 235100                    LDA     WSR,,AUTO
         2 000132   000004 135007                    SBLA    4,DL
         2 000133   000004 115007                    CMPA    4,DL
         2 000134   000136 602005 2                  TNC     s:6885+5,AL
         2 000135   000155 710000 2                  TRA     s:6911
         2 000136   000153 710000 2                  TRA     s:6902
         2 000137   000150 710000 2                  TRA     s:6897
         2 000140   000145 710000 2                  TRA     s:6892
         2 000141   000142 710000 2                  TRA     s:6887

      234     6886    3          CASE(%USERWSR);

      235     6887    3            B$JIT.ERR=XXXPMME;

   6887  2 000142   000005 236000 1                  LDQ     XXXPMME
         2 000143   000012 756100                    STQ     10,,PR0
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:41   
         2 000144   000155 710000 2                  TRA     s:6911

      236     6888        /*E*     ERROR:   JSE-E$XXXPMME-A
      237     6889                 MESSAGE: M$XXX issued by user-domain program.
      238     6890        */
      239     6891    3          CASE(%ASLWSR);

      240     6892    3            B$JIT.ERR=EASLXXX;

   6892  2 000145   000006 236000 1                  LDQ     EASLXXX
         2 000146   000012 756100                    STQ     10,,PR0
         2 000147   000155 710000 2                  TRA     s:6911

      241     6893        /*E*     ERROR:  JSE-E$ASLXXX-A
      242     6894                 MESSAGE: M$XXX issued by Alternate Shared Library.
      243     6895        */
      244     6896    3          CASE(%DBWSR);

      245     6897    3            B$JIT.ERR=EDBXXX;

   6897  2 000150   000007 236000 1                  LDQ     EDBXXX
         2 000151   000012 756100                    STQ     10,,PR0
         2 000152   000155 710000 2                  TRA     s:6911

      246     6898        /*E*     ERROR:   JSE-E$DBXXX-A
      247     6899                 MESSAGE: M$XXX issued by Debugger.
      248     6900        */
      249     6901    3          CASE(%CPWSR);

      250     6902    3            B$JIT.ERR=ECPXXX;

   6902  2 000153   000010 236000 1                  LDQ     ECPXXX
         2 000154   000012 756100                    STQ     10,,PR0

      251     6903        /*E*     ERROR:   JSE-E$CPXXX-A
      252     6904                 MESSAGE: M$XXX issued by Command Processor.
      253     6905        */
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:42   
      254     6906    3            END;                           /*DO CASE(WSR)                        */

      255     6907
      256     6908    2         END;                              /*DO CASE(CODE)                       */

      257     6909
      258     6910                                 /* * Now replace JIT.ERR if so specified in the FPT  */
      259     6911    1      IF JERR ~= '0'B

   6911  2 000155   200004 235100                    LDA     JERR,,AUTO
         2 000156   000162 600000 2                  TZE     s:6913

      260     6912    1      THEN B$JIT.ERR = JERR;

   6912  2 000157   200004 236100                    LDQ     JERR,,AUTO
         2 000160   000000 470400 xsym               LDP0    B$JIT$
         2 000161   000012 756100                    STQ     10,,PR0

      261     6913    1      CALL UDB$CALCOMP;

   6913  2 000162   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000163   000000 701000 xent               TSX1    UDB$CALCOMP
         2 000164   000000 011000                    NOP     0

      262     6914
      263     6915    1      IF (WSR=%USERWSR)

   6915  2 000165   200007 235100                    LDA     WSR,,AUTO
         2 000166   000007 115007                    CMPA    7,DL
         2 000167   000320 601000 2                  TNZ     NOT_DELTA

      264     6916    2      THEN DO;

      265     6917    2           IF CODE ~= %C$EXIT#

   6917  2 000170   200003 236100                    LDQ     CODE,,AUTO
         2 000171   000001 116007                    CMPQ    1,DL
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:43   
         2 000172   000177 600000 2                  TZE     s:6922

      266     6918    3           THEN DO;

      267     6919    3                B$JIT.SVLDTF='000'O;

   6919  2 000173   000000 470400 xsym               LDP0    B$JIT$
         2 000174   000000 236003                    LDQ     0,DU
         2 000175   000316 552104                    STBQ    206,'04'O,PR0

      268     6920    3                GOTO NOT_SVL;

   6920  2 000176   000302 710000 2                  TRA     NOT_SVL

      269     6921    3                END;
      270     6922    2           ELSE B$JIT.CPFLAGS1 = (B$JIT.CPFLAGS1 | %CP_EXIT#);

   6922  2 000177   000000 470400 xsym               LDP0    B$JIT$
         2 000200   000143 236100                    LDQ     99,,PR0
         2 000201   000016 276000 1                  ORQ     ERRSSF+1
         2 000202   000143 756100                    STQ     99,,PR0

      271     6923                            /* * Always set CP_EXIT when user domain does an M$EXIT   */
      272     6924
      273     6925    2           IF (B$JIT.SVLDTF & %SVL_ECCB#)

   6925  2 000203   000316 236100                    LDQ     206,,PR0
         2 000204   000033 736000                    QLS     27
         2 000205   016000 376003                    ANQ     7168,DU
         2 000206   000302 600000 2                  TZE     NOT_SVL

      274     6926    3           THEN DO;

      275     6927    3                IF B_MPT.TCB$->FTCB.CRSZ=0

   6927  2 000207   000004 471400 xsym               LDP1    B_MPT+4
         2 000210   100002 720100                    LXL0    2,,PR1
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:44   
         2 000211   000302 600000 2                  TZE     NOT_SVL

      276     6928    3                THEN GOTO NOT_SVL;
      277     6929
      278     6930    3                XCON$=PINCRW(B_MPT.TCB$,B_MPT.TCB$->FTCB.CRFR);

   6930  2 000212   100001 221100                    LDX1    1,,PR1
         2 000213   000000 636011                    EAQ     0,X1
         2 000214   000004 036000 xsym               ADLQ    B_MPT+4
         2 000215   200011 756100                    STQ     XCON$,,AUTO

      279     6931    3                IF XCON$->B$ATCBF.ECC ~= %ECC_XCON#

   6931  2 000216   200011 473500                    LDP3    XCON$,,AUTO
         2 000217   300000 720100                    LXL0    0,,PR3
         2 000220   000003 100003                    CMPX0   3,DU
         2 000221   000302 601000 2                  TNZ     NOT_SVL

      280     6932    3                THEN GOTO NOT_SVL;
      281     6933
      282     6934    3                TEMPF = B$XCON.CECCB;

   6934  2 000222   300100 236100                    LDQ     64,,PR3
         2 000223   777000 376003                    ANQ     -512,DU
         2 000224   200010 756100                    STQ     TEMPF,,AUTO

      283     6935
      284     6936    3                IF (TEMPF & %SVL_ECCB#)

   6936  2 000225   200010 236100                    LDQ     TEMPF,,AUTO
         2 000226   777000 376003                    ANQ     -512,DU
         2 000227   016000 376003                    ANQ     7168,DU
         2 000230   000302 600000 2                  TZE     NOT_SVL

      285     6937    4                THEN DO;

      286     6938    4                     IF (B_MPT.ECCBDESC$->B$$DESCR.FLGS & %DSXXX)
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:45   

   6938  2 000231   000013 474400 xsym               LDP4    B_MPT+11
         2 000232   400000 236100                    LDQ     0,,PR4
         2 000233   000024 736000                    QLS     20
         2 000234   777000 376003                    ANQ     -512,DU
         2 000235   020000 376003                    ANQ     8192,DU
         2 000236   000274 600000 2                  TZE     s:6952

      287     6939    5                     THEN DO;

      288     6940    5                          B$EXCRTN='0'B;

   6940  2 000237   000100 100400                    MLR     fill='000'O
         2 000240   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         2 000241   200021 000020                    ADSC9   B$EXCRTN,,AUTO           cn=0,n=16

      289     6941    5                          B$EXCRTN.SVL=%SVL_EXIT#;

   6941  2 000242   100000 236003                    LDQ     32768,DU
         2 000243   200021 552140                    STBQ    B$EXCRTN,'40'O,AUTO

   6941  2 000244                       DELTA_GO     null
      290     6942    5   DELTA_GO:              ;
      291     6943    5                          ECC=%ECC_EXCRTN#;

   6943  2 000244   000140 235007                    LDA     96,DL
         2 000245   200025 755100                    STA     ECC,,AUTO

      292     6944    5                          B$EXCRTN.ECCS=%SC_XCONXIT#;

   6944  2 000246   000006 220003                    LDX0    6,DU
         2 000247   200021 440100                    SXL0    B$EXCRTN,,AUTO

      293     6945    5                          B$EXCRTN.TYP=CODE;

   6945  2 000250   200003 236100                    LDQ     CODE,,AUTO
         2 000251   000022 736000                    QLS     18
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:46   
         2 000252   200021 552120                    STBQ    B$EXCRTN,'20'O,AUTO

      294     6946    5                          B$EXCRTN.EVID=B$SS.IC;

   6946  2 000253   000000 470400 xsym               LDP0    B_MPT
         2 000254   000004 236100                    LDQ     4,,PR0
         2 000255   000022 772000                    QRL     18
         2 000256   200022 756100                    STQ     B$EXCRTN+1,,AUTO

      295     6947    5                          B$EXCRTN.ERR=B$JIT.ERR;

   6947  2 000257   000000 471400 xsym               LDP1    B$JIT$
         2 000260   100012 236100                    LDQ     10,,PR1
         2 000261   200023 756100                    STQ     B$EXCRTN+2,,AUTO

      296     6948    5                          B$EXCRTN.P#=0;

   6948  2 000262   200024 450100                    STZ     B$EXCRTN+3,,AUTO

      297     6949    5                          CALL SSU$DELTAGO(ECC,B$EXCRTN);

   6949  2 000263   200021 633500                    EPPR3   B$EXCRTN,,AUTO
         2 000264   200027 453500                    STP3    ECC+2,,AUTO
         2 000265   200025 634500                    EPPR4   ECC,,AUTO
         2 000266   200026 454500                    STP4    ECC+1,,AUTO
         2 000267   200026 630500                    EPPR0   ECC+1,,AUTO
         2 000270   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000271   000000 701000 xent               TSX1    SSU$DELTAGO
         2 000272   000000 011000                    NOP     0

      298     6950    5                          END;

   6950  2 000273   000302 710000 2                  TRA     NOT_SVL

      299     6951    5                     ELSE DO;

      300     6952    5                          B$JIT.SVLDTF=(B$JIT.SVLDTF | %SVL_EXIT#);
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:47   

   6952  2 000274   000316 236100                    LDQ     206,,PR0
         2 000275   000033 736000                    QLS     27
         2 000276   100000 276003                    ORQ     32768,DU
         2 000277   000033 772000                    QRL     27
         2 000300   000316 552104                    STBQ    206,'04'O,PR0

      301     6953    5                          GOTO NO_XCON;

   6953  2 000301   001070 710000 2                  TRA     NO_XCON

   6950  2 000302                       NOT_SVL      null
      302     6954    5                          END;
      303     6955    4                     END;                  /*DO IF TEMPF & ECCB#                 */
      304     6956    3                END;                       /*DO IF SVLDTF & ECCB#                */
      305     6957    2   NOT_SVL: ;
      306     6958    2           IF (B_MPT.ECCBDESC$->B$$DESCR.FLGS & %DSXXX)

   6958  2 000302   000013 470400 xsym               LDP0    B_MPT+11
         2 000303   000000 236100                    LDQ     0,,PR0
         2 000304   000024 736000                    QLS     20
         2 000305   777000 376003                    ANQ     -512,DU
         2 000306   020000 376003                    ANQ     8192,DU
         2 000307   000320 600000 2                  TZE     NOT_DELTA

      307     6959    3           THEN DO;

      308     6960    3                IF B$ECCB.XCONF.PROG='1'B

   6960  2 000310   000005 471400 xsym               LDP1    B_MPT+5
         2 000311   100004 236100                    LDQ     4,,PR1
         2 000312   000400 316003                    CANQ    256,DU
         2 000313   000320 600000 2                  TZE     NOT_DELTA

      309     6961    4                THEN DO;

      310     6962    4                     B$EXCRTN='0'B;
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:48   

   6962  2 000314   000100 100400                    MLR     fill='000'O
         2 000315   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         2 000316   200021 000020                    ADSC9   B$EXCRTN,,AUTO           cn=0,n=16

      311     6963    4                     GOTO DELTA_GO;

   6963  2 000317   000244 710000 2                  TRA     DELTA_GO

   6960  2 000320                       NOT_DELTA    null
      312     6964    4                     END;                  /* DO IF FINAL EXIT                   */
      313     6965    3                END;                       /* DO IF DELTA ASSOCIATED             */
      314     6966    2           END;                            /*DO IF %USERWSR                      */
      315     6967    1   NOT_DELTA: ;
      316     6968    1      GOTO ABORTX1;

   6968  2 000320   000367 710000 2                  TRA     ABORTX1

      317     6969                                                /*  Enter the rundown logic           */
      318     6970
      319     6971        %EJECT;
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:49   
      320     6972                                                /*  ENTRY TO THE ABORT LOGIC          */
      321     6973
      322     6974        /* ABORTM used when RNST not yet set */
      323     6975    1   JSE$ABORTM1: ENTRY;

   6975  2 000321   000000 700200 xent  JSE$ABORTM1  TSX0  ! X66_AUTO_0
         2 000322   000034 000000                    ZERO    28,0

      324     6976    1      B$JIT.CPFLAGS1.EXIT# = '0'B;

   6976  2 000323   000000 470400 xsym               LDP0    B$JIT$
         2 000324   000000 236000 3                  LDQ     0
         2 000325   000143 356100                    ANSQ    99,,PR0

   6976  2 000326                       ABORTM1      null
      325     6977    1   ABORTM1: ;
      326     6978
      327     6979    1      B$JIT.RNST = B$JIT.RNST | %RS_ABRT#;

   6979  2 000326   000000 470400 xsym               LDP0    B$JIT$
         2 000327   000314 236100                    LDQ     204,,PR0
         2 000330   777000 376003                    ANQ     -512,DU
         2 000331   010000 276003                    ORQ     4096,DU
         2 000332   000314 552140                    STBQ    204,'40'O,PR0

      328     6980        /* If we're aborting an M$LINK, then its no longer in progress!! */
      329     6981    1      IF S$CU$->B$U.FLG & %U_STIP

   6981  2 000333   000000 471400 xsym               LDP1    S$CU$
         2 000334   100000 236100                    LDQ     0,,PR1
         2 000335   000017 376000 1                  ANQ     ERRSSF+2
         2 000336   000356 600000 2                  TZE     s:6991

      330     6982    2      THEN DO;

      331     6983    2           B$JIT.JUNK=(B$JIT.JUNK &~ %JJ_MLINKIP#);

PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:50   
   6983  2 000337   000315 220100                    LDX0    205,,PR0
         2 000340   777776 360003                    ANX0    -2,DU
         2 000341   000315 740100                    STX0    205,,PR0

      332     6984    2           B$JIT.SVLDTF='000'O;

   6984  2 000342   000000 236003                    LDQ     0,DU
         2 000343   000316 552104                    STBQ    206,'04'O,PR0

      333     6985    2           B$JIT.USRRNST = B$JIT.RNST;

   6985  2 000344   000314 236100                    LDQ     204,,PR0
         2 000345   000022 772000                    QRL     18
         2 000346   000145 552110                    STBQ    101,'10'O,PR0

      334     6986    2           B$JIT.USRERR=B$JIT.ERR;

   6986  2 000347   000012 236100                    LDQ     10,,PR0
         2 000350   000144 756100                    STQ     100,,PR0

      335     6987    2           B$JIT.USRDCB = B$JIT.DCBNO;

   6987  2 000351   000022 236100                    LDQ     18,,PR0
         2 000352   000153 552104                    STBQ    107,'04'O,PR0

      336     6988    2           B$JIT.STEPCC = SEV_ABORT#;

   6988  2 000353   000006 236003                    LDQ     6,DU
         2 000354   000316 552120                    STBQ    206,'20'O,PR0

      337     6989    2           GOTO JLL_CHECK;

   6989  2 000355   001622 710000 2                  TRA     JLL_CHECK

      338     6990    2           END;
      339     6991    1      GOTO ABORTX1;

PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:51   
   6991  2 000356   000367 710000 2                  TRA     ABORTX1

      340     6992                                                /*                                    */
      341     6993                                                /*                                    */
      342     6994        /* ABORTX used when RNST is already set */
      343     6995    1   JSE$ABORTX1: ENTRY;

   6995  2 000357   000000 700200 xent  JSE$ABORTX1  TSX0  ! X66_AUTO_0
         2 000360   000034 000000                    ZERO    28,0

      344     6996    1      IF (B$JIT.JUNK & %JJ_MLINKIP#) THEN

   6996  2 000361   000000 470400 xsym               LDP0    B$JIT$
         2 000362   000315 220100                    LDX0    205,,PR0
         2 000363   000001 360003                    ANX0    1,DU
         2 000364   001622 601000 2                  TNZ     JLL_CHECK

      345     6997    1           GOTO JLL_CHECK;
      346     6998    1      B$JIT.CPFLAGS1.EXIT# = '0'B;

   6998  2 000365   000000 236000 3                  LDQ     0
         2 000366   000143 356100                    ANSQ    99,,PR0

   6998  2 000367   000372 710000 2     ABORTX1      TRA     s:7005

      347     6999    1   ABORTX1:;
      348     7000
      349     7001        /* ABORTY used when both RNST and CPFLAGS1.EXIT# set
      350     7002        */
      351     7003    1   JSE$ABORTY1: ENTRY;

   7003  2 000370   000000 700200 xent  JSE$ABORTY1  TSX0  ! X66_AUTO_0
         2 000371   000034 000000                    ZERO    28,0

      352     7004
      353     7005    1      IF NOT (B$JIT.RNST & %RS_XKEY#) AND (B$JIT.RNST & %RS_DROP#)

PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:52   
   7005  2 000372   000000 470400 xsym               LDP0    B$JIT$
         2 000373   000314 236100                    LDQ     204,,PR0
         2 000374   777000 376003                    ANQ     -512,DU
         2 000375   400000 376003                    ANQ     -131072,DU
         2 000376   000406 601000 2                  TNZ     s:7010
         2 000377   000314 236100                    LDQ     204,,PR0
         2 000400   777000 376003                    ANQ     -512,DU
         2 000401   200000 376003                    ANQ     65536,DU
         2 000402   000406 600000 2                  TZE     s:7010

      354     7006    2      THEN DO;

      355     7007    2           CALL JZA$ASAVE ALTRET(ABRTX1);

   7007  2 000403   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000404   000000 701000 xent               TSX1    JZA$ASAVE
         2 000405   000455 702000 2                  TSX2    ABRTX1

      356     7008    2           END;

      357     7009
      358     7010    1      IF (B$JIT.RNST = %RS_ATILA#)

   7010  2 000406   000000 470400 xsym               LDP0    B$JIT$
         2 000407   000314 236100                    LDQ     204,,PR0
         2 000410   777000 376003                    ANQ     -512,DU
         2 000411   440000 116003                    CMPQ    -114688,DU
         2 000412   000450 601000 2                  TNZ     s:7023

      359     7011    2      THEN DO;

      360     7012    2           B$JIT.RNST = (B$JIT.RNST &~ %RS_ATILA#);

   7012  2 000413   000314 236100                    LDQ     204,,PR0
         2 000414   777000 376003                    ANQ     -512,DU
         2 000415   337000 376003                    ANQ     114176,DU
         2 000416   000314 552140                    STBQ    204,'40'O,PR0
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:53   

      361     7013    2           B$JIT.JUNK = (B$JIT.JUNK | %JJ_ASYNCLINK#);

   7013  2 000417   000315 220100                    LDX0    205,,PR0
         2 000420   000004 260003                    ORX0    4,DU
         2 000421   000315 740100                    STX0    205,,PR0

      362     7014
      363     7015    2           NAME$ = ADDR(J_ATILA);

   7015  2 000422   000003 236000 3                  LDQ     3
         2 000423   200012 756100                    STQ     NAME$,,AUTO

      364     7016    2           CMD$ = ADDR(NIL);

   7016  2 000424   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000425   200017 756100                    STQ     CMD$,,AUTO

      365     7017    2           CLEANUP$ = ENTADDR(NIL);

   7017  2 000426   000002 236000 xsym               LDQ     B_VECTNIL+2
         2 000427   200020 756100                    STQ     CLEANUP$,,AUTO

      366     7018    2           CALL JLU$MLINK(NAME$,CMD$,CLEANUP$)

   7018  2 000430   200020 631500                    EPPR1   CLEANUP$,,AUTO
         2 000431   200030 451500                    STP1    ECC+3,,AUTO
         2 000432   200017 633500                    EPPR3   CMD$,,AUTO
         2 000433   200027 453500                    STP3    ECC+2,,AUTO
         2 000434   200012 634500                    EPPR4   NAME$,,AUTO
         2 000435   200026 454500                    STP4    ECC+1,,AUTO
         2 000436   200026 630500                    EPPR0   ECC+1,,AUTO
         2 000437   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000440   000000 701000 xent               TSX1    JLU$MLINK
         2 000441   000443 702000 2                  TSX2    s:7020
         2 000442   000450 710000 2                  TRA     s:7023

PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:54   
      367     7019    3           WHENALTRETURN DO;

      368     7020    3                B$JIT.RNST = (B$JIT.RNST | %RS_ATILA#);

   7020  2 000443   000000 470400 xsym               LDP0    B$JIT$
         2 000444   000314 236100                    LDQ     204,,PR0
         2 000445   777000 376003                    ANQ     -512,DU
         2 000446   440000 276003                    ORQ     -114688,DU
         2 000447   000314 552140                    STBQ    204,'40'O,PR0

      369     7021    3                END;

      370     7022    2           END;

      371     7023    1      IF (B$JIT.RNST & %RS_CL3#) = '000'O THEN GOTO JSE$MAIN;

   7023  2 000450   000000 470400 xsym               LDP0    B$JIT$
         2 000451   000314 236100                    LDQ     204,,PR0
         2 000452   777000 376003                    ANQ     -512,DU
         2 000453   640000 376003                    ANQ     -49152,DU
         2 000454   000461 600000 2                  TZE     JSE$MAIN

   7023  2 000455                       ABRTX1       null
      372     7024
      373     7025    1   ABRTX1: ;
      374     7026    1      B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 | %CP_LOGOFF#;

   7026  2 000455   000000 470400 xsym               LDP0    B$JIT$
         2 000456   000143 236100                    LDQ     99,,PR0
         2 000457   000030 276000 xsym               ORQ     B_VECTNIL+24
         2 000460   000143 756100                    STQ     99,,PR0

   7026  2 000461                       JSE$MAIN     null
      375     7027
      376     7028        %EJECT;
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:55   
      377     7029
      378     7030           /*  JSE$MAIN runs thru the Safe-Store Stack giving everyone
      379     7031               a shot a Exit Control.   */
      380     7032    1   JSE$MAIN: ;
      381     7033
      382     7034    1      CALL UDN$BLDASR;

   7034  2 000461   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000462   000000 701000 xent               TSX1    UDN$BLDASR
         2 000463   000000 011000                    NOP     0

      383     7035    1      CALL UDN$MAGIC;

   7035  2 000464   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000465   000000 701000 xent               TSX1    UDN$MAGIC
         2 000466   000000 011000                    NOP     0

      384     7036
      385     7037                       /* This is for M$YC that causes antry to STEP which aborts     */
      386     7038    1      IF ( (B$JIT.CPFLAGS1 & %CP_YCPMME#)

   7038  2 000467   000000 470400 xsym               LDP0    B$JIT$
         2 000470   000143 236100                    LDQ     99,,PR0
         2 000471   000020 376000 1                  ANQ     ERRSSF+3
         2 000472   000520 600000 2                  TZE     JSE$MAIN1
         2 000473   000314 236100                    LDQ     204,,PR0
         2 000474   777000 376003                    ANQ     -512,DU
         2 000475   760000 376003                    ANQ     -8192,DU
         2 000476   000520 601000 2                  TNZ     JSE$MAIN1
         2 000477   000000 471400 xsym               LDP1    B_MPT
         2 000500   100010 236100                    LDQ     8,,PR1
         2 000501   000160 376007                    ANQ     112,DL
         2 000502   000160 116007                    CMPQ    112,DL
         2 000503   000520 601000 2                  TNZ     JSE$MAIN1

      387     7039    1        AND ( (B$JIT.RNST & %RS_XCON#) = '000'O)
      388     7040    1        AND (B$SS.ISR.WSR = %USERWSR) )
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:56   
      389     7041    2      THEN DO;

      390     7042    2           IF (B$JIT.SVLDTF & %SVL_ECCB#) = '000'O

   7042  2 000504   000316 236100                    LDQ     206,,PR0
         2 000505   000033 736000                    QLS     27
         2 000506   016000 376003                    ANQ     7168,DU
         2 000507   000520 601000 2                  TNZ     JSE$MAIN1

      391     7043    3           THEN DO;

   7041  2 000510                       EXIT_YCPMME  null
      392     7044    3   EXIT_YCPMME: ;
      393     7045    3                B$JIT.CPFLAGS1=(B$JIT.CPFLAGS1 &~ %CP_YCPMME#);

   7045  2 000510   000020 236000 1                  LDQ     ERRSSF+3
         2 000511   000027 676000 xsym               ERQ     B_VECTNIL+23
         2 000512   000000 470400 xsym               LDP0    B$JIT$
         2 000513   000143 376100                    ANQ     99,,PR0
         2 000514   000143 756100                    STQ     99,,PR0

      394     7046    3                CALL UDB$PMMEXIT2;

   7046  2 000515   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000516   000000 701000 xent               TSX1    UDB$PMMEXIT2
         2 000517   000000 011000                    NOP     0

      395     7047    3                END;

      396     7048    2           END;

   7042  2 000520                       JSE$MAIN1    null
      397     7049
      398     7050
      399     7051    1   JSE$MAIN1: ;
      400     7052
      401     7053    1      B$JIT.FRS=(B$JIT.FRS     | (B$JIT.RNST & %RS_XCON#) );
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:57   

   7053  2 000520   000000 470400 xsym               LDP0    B$JIT$
         2 000521   000314 236100                    LDQ     204,,PR0
         2 000522   777000 376003                    ANQ     -512,DU
         2 000523   760000 376003                    ANQ     -8192,DU
         2 000524   200026 756100                    STQ     ECC+1,,AUTO
         2 000525   000314 236100                    LDQ     204,,PR0
         2 000526   000011 736000                    QLS     9
         2 000527   777000 376003                    ANQ     -512,DU
         2 000530   200026 276100                    ORQ     ECC+1,,AUTO
         2 000531   000011 772000                    QRL     9
         2 000532   000314 552120                    STBQ    204,'20'O,PR0

      402     7054                                      /*Remember limx-drop-!x-!e for any ABORT  entry */
      403     7055
      404     7056
      405     7057    1      WSR  = B$SS.ISR.WSR;

   7057  2 000533   000000 471400 xsym               LDP1    B_MPT
         2 000534   100010 236100                    LDQ     8,,PR1
         2 000535   000004 772000                    QRL     4
         2 000536   000007 376007                    ANQ     7,DL
         2 000537   200007 756100                    STQ     WSR,,AUTO

      406     7058    2      DO CASE(WSR);

   7058  2 000540   000004 136007                    SBLQ    4,DL
         2 000541   000004 116007                    CMPQ    4,DL
         2 000542   000544 602006 2                  TNC     s:7058+4,QL
         2 000543   001407 710000 2                  TRA     s:7244
         2 000544   001342 710000 2                  TRA     s:7225
         2 000545   001206 710000 2                  TRA     s:7186
         2 000546   001155 710000 2                  TRA     s:7176
         2 000547   000550 710000 2                  TRA     s:7061

      407     7059
      408     7060    2       CASE(%USERWSR);
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:58   

      409     7061    2         IF (B$JIT.XCONF & %XC_URND#) THEN GOTO USRDONE;

   7061  2 000550   000316 236100                    LDQ     206,,PR0
         2 000551   777000 376003                    ANQ     -512,DU
         2 000552   004000 376003                    ANQ     2048,DU
         2 000553   001510 601000 2                  TNZ     USRDONE

      410     7062
      411     7063    2         IF (B$JIT.JUNK & %JJ_SCCSET#)

   7063  2 000554   000315 220100                    LDX0    205,,PR0
         2 000555   000040 360003                    ANX0    32,DU
         2 000556   000563 600000 2                  TZE     s:7065

      412     7064    2         THEN B$JIT.JUNK=(B$JIT.JUNK &~ %JJ_SCCSET#);

   7064  2 000557   000315 220100                    LDX0    205,,PR0
         2 000560   777737 360003                    ANX0    -33,DU
         2 000561   000315 740100                    STX0    205,,PR0
         2 000562   000567 710000 2                  TRA     s:7067

      413     7065    2         ELSE B$JIT.STEPCC = B$JIT.ERR.SEV;

   7065  2 000563   000012 236100                    LDQ     10,,PR0
         2 000564   000007 376007                    ANQ     7,DL
         2 000565   000022 736000                    QLS     18
         2 000566   000316 552120                    STBQ    206,'20'O,PR0

      414     7066
      415     7067    2         IF (B$JIT.SVLDTF & %SVL_ECCB#)

   7067  2 000567   000316 236100                    LDQ     206,,PR0
         2 000570   000033 736000                    QLS     27
         2 000571   016000 376003                    ANQ     7168,DU
         2 000572   001041 600000 2                  TZE     USR_XCONSEE

PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:59   
      416     7068    3         THEN DO;

      417     7069    3              IF (B$JIT.SVLDTF & %SVL_READY#) THEN GOTO USRDONE;

   7069  2 000573   000316 236100                    LDQ     206,,PR0
         2 000574   000033 736000                    QLS     27
         2 000575   140000 376003                    ANQ     49152,DU
         2 000576   001510 601000 2                  TNZ     USRDONE

      418     7070    3              IF (B$JIT.SVLDTF & %SVL_SAVE#)

   7070  2 000577   000316 236100                    LDQ     206,,PR0
         2 000600   000033 736000                    QLS     27
         2 000601   006000 376003                    ANQ     3072,DU
         2 000602   000612 600000 2                  TZE     s:7077

      419     7071    4              THEN DO;

      420     7072    4                   IF (B$JIT.JUNK & %JJ_SCON#) ='000000'O

   7072  2 000603   000315 220100                    LDX0    205,,PR0
         2 000604   100000 360003                    ANX0    32768,DU
         2 000605   001024 600000 2                  TZE     BYPASS_XCON
         2 000606   000316 236100                    LDQ     206,,PR0
         2 000607   000033 736000                    QLS     27
         2 000610   200000 376003                    ANQ     65536,DU
         2 000611   001024 601000 2                  TNZ     BYPASS_XCON

      421     7073    4                     OR (B$JIT.SVLDTF & %SVL_DIC#)
      422     7074    4                   THEN GOTO BYPASS_XCON;
      423     7075    4                   END;

      424     7076                                                /*NOW IS THE TIME TO ENTER USER XCON  */
      425     7077    3              IF B$ECCB.FLAGS.XCONSET='1'B

   7077  2 000612   000005 473400 xsym               LDP3    B_MPT+5
         2 000613   300004 236100                    LDQ     4,,PR3
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:60   
         2 000614   040000 316003                    CANQ    16384,DU
         2 000615   001024 600000 2                  TZE     BYPASS_XCON

      426     7078    4              THEN DO;

      427     7079    4                   XCON$=PINCRW(B_MPT.TCB$,B_MPT.TCB$->FTCB.CRFR);

   7079  2 000616   000004 474400 xsym               LDP4    B_MPT+4
         2 000617   400001 220100                    LDX0    1,,PR4
         2 000620   000000 636010                    EAQ     0,X0
         2 000621   000004 036000 xsym               ADLQ    B_MPT+4
         2 000622   200011 756100                    STQ     XCON$,,AUTO

      428     7080    4                   IF XCON$->B$ATCBF.ECC ~= %ECC_SAVLDT#

   7080  2 000623   200011 475500                    LDP5    XCON$,,AUTO
         2 000624   500000 720100                    LXL0    0,,PR5
         2 000625   000136 100003                    CMPX0   94,DU
         2 000626   001041 601000 2                  TNZ     USR_XCONSEE

      429     7081    4                   THEN GOTO USR_XCONSEE;  /* MAY BE ABORT IN XCON ROUTINE       */
      430     7082    4                   TEMPF=(B$ECCB.XCONF | (B$JIT.SVLDTF & %SVL_ECCB#) );

   7082  2 000627   000316 236100                    LDQ     206,,PR0
         2 000630   000033 736000                    QLS     27
         2 000631   016000 376003                    ANQ     7168,DU
         2 000632   200026 756100                    STQ     ECC+1,,AUTO
         2 000633   300004 236100                    LDQ     4,,PR3
         2 000634   000011 736000                    QLS     9
         2 000635   777000 376003                    ANQ     -512,DU
         2 000636   200026 276100                    ORQ     ECC+1,,AUTO
         2 000637   200010 756100                    STQ     TEMPF,,AUTO

      431     7083    4                   TEMPF=(TEMPF | '400'O); /*IN PROGRESS                         */

   7083  2 000640   200010 236100                    LDQ     TEMPF,,AUTO
         2 000641   777000 376003                    ANQ     -512,DU
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:61   
         2 000642   400000 276003                    ORQ     -131072,DU
         2 000643   200010 756100                    STQ     TEMPF,,AUTO

      432     7084    4                   B$XCON.CECCB=(TEMPF &~ B$XCON.ECCB);

   7084  2 000644   500101 236100                    LDQ     65,,PR5
         2 000645   000033 736000                    QLS     27
         2 000646   777000 676003                    ERQ     -512,DU
         2 000647   200026 756100                    STQ     ECC+1,,AUTO
         2 000650   200010 236100                    LDQ     TEMPF,,AUTO
         2 000651   777000 376003                    ANQ     -512,DU
         2 000652   200026 376100                    ANQ     ECC+1,,AUTO
         2 000653   500100 552140                    STBQ    64,'40'O,PR5

      433     7085    4                   B$XCON.ECSC=0;

   7085  2 000654   000000 220003                    LDX0    0,DU
         2 000655   500100 440100                    SXL0    64,,PR5

      434     7086    4                   B$XCON.RNST=B$JIT.RNST;

   7086  2 000656   000314 236100                    LDQ     204,,PR0
         2 000657   500101 552140                    STBQ    65,'40'O,PR5

      435     7087    4                   B$XCON.LIMIT=B$JIT.XLIMFLG;

   7087  2 000660   000316 236100                    LDQ     206,,PR0
         2 000661   500101 552110                    STBQ    65,'10'O,PR5

      436     7088    4                   B$XCON.XCONF=(B$JIT.XCONF | B$JIT.FRS);

   7088  2 000662   000314 236100                    LDQ     204,,PR0
         2 000663   000011 736000                    QLS     9
         2 000664   777000 376003                    ANQ     -512,DU
         2 000665   200026 756100                    STQ     ECC+1,,AUTO
         2 000666   000316 236100                    LDQ     206,,PR0
         2 000667   777000 376003                    ANQ     -512,DU
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:62   
         2 000670   200026 276100                    ORQ     ECC+1,,AUTO
         2 000671   000011 772000                    QRL     9
         2 000672   500101 552120                    STBQ    65,'20'O,PR5

      437     7089    4                   B$XCON.ECCB=B$ECCB.XCONF;

   7089  2 000673   300004 236100                    LDQ     4,,PR3
         2 000674   000022 772000                    QRL     18
         2 000675   500101 552104                    STBQ    65,'04'O,PR5

      438     7090    4                   B$XCON.ERR=B$JIT.ERR;

   7090  2 000676   000012 236100                    LDQ     10,,PR0
         2 000677   500102 756100                    STQ     66,,PR5

      439     7091    4                   XCON$->B$ATCBF.ECC=%ECC_XCON#;

   7091  2 000700   000003 221003                    LDX1    3,DU
         2 000701   500000 441100                    SXL1    0,,PR5

      440     7092    4                   IF (B$JIT.XCONF & %RS_CL3#)

   7092  2 000702   000316 236100                    LDQ     206,,PR0
         2 000703   777000 376003                    ANQ     -512,DU
         2 000704   640000 376003                    ANQ     -49152,DU
         2 000705   000775 601000 2                  TNZ     NO_DELTA

      441     7093    4                   THEN GOTO NO_DELTA;
      442     7094    4                   IF (B_MPT.ECCBDESC$->B$$DESCR.FLGS & %DSXXX)

   7094  2 000706   000013 471400 xsym               LDP1    B_MPT+11
         2 000707   100000 236100                    LDQ     0,,PR1
         2 000710   000024 736000                    QLS     20
         2 000711   777000 376003                    ANQ     -512,DU
         2 000712   020000 376003                    ANQ     8192,DU
         2 000713   000775 600000 2                  TZE     NO_DELTA

PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:63   
      443     7095    5                   THEN DO;

   7091  2 000714                       SAVLDT_FIN   null
      444     7096    5   SAVLDT_FIN:          ;
      445     7097    6                        DO INHIBIT;

      446     7098    6                             B$LS$->B$MLS.MISC2=B$USERLS$->B$ULS.TCB; /* USER TCB */

   7098  2 000714   000000 470600 xsym               LDP0  ! B$USERLS$
         2 000715   000036 237300                    LDAQ  ! 30,,PR0
         2 000716   000000 471600 xsym               LDP1  ! B$LS$
         2 000717   100260 757300                    STAQ  ! 176,,PR1

      447     7099    6                             B_MPT.LSDESC$->B$$DESCR=B$LS$->B$MLS.DBLS; /* DELTA LS */

   7099  2 000720   000007 473600 xsym               LDP3  ! B_MPT+7
         2 000721   100064 237300                    LDAQ  ! 52,,PR1
         2 000722   300000 755300                    STA   ! 0,,PR3
         2 000723   300001 756300                    STQ   ! 1,,PR3

      448     7100    6                             CALL UDN$MAGICLS; /* DELTA DESCRs TO MAGIC          */

   7100  2 000724   000002 631600 xsym               EPPR1 ! B_VECTNIL+2
         2 000725   000000 701200 xent               TSX1  ! UDN$MAGICLS
         2 000726   000000 011200                    NOP   ! 0

      449     7101    6                             XCON$=B$MISC2$; /* USER TCB POINTER                 */

   7101  2 000727   000000 236200 xsym               LDQ   ! B$MISC2$
         2 000730   200011 756300                    STQ   ! XCON$,,AUTO

      450     7102    6                             CALL UEP$MOVETCB (0,ADDR(NIL),XCON$) ALTRET(ALT_DTCB);

   7102  2 000731   000001 236200 xsym               LDQ   ! B_VECTNIL+1
         2 000732   200026 756300                    STQ   ! ECC+1,,AUTO
         2 000733   200011 630700                    EPPR0 ! XCON$,,AUTO
         2 000734   200031 450700                    STP0  ! ECC+4,,AUTO
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:64   
         2 000735   200026 631700                    EPPR1 ! ECC+1,,AUTO
         2 000736   200030 451700                    STP1  ! ECC+3,,AUTO
         2 000737   000001 236200 3                  LDQ   ! 1
         2 000740   200027 756300                    STQ   ! ECC+2,,AUTO
         2 000741   200027 630700                    EPPR0 ! ECC+2,,AUTO
         2 000742   000021 631600 xsym               EPPR1 ! B_VECTNIL+17
         2 000743   000000 701200 xent               TSX1  ! UEP$MOVETCB
         2 000744   001037 702200 2                  TSX2  ! ALT_DTCB

      451     7103    6                             END;          /* INHIBIT                            */

      452     7104    5                        CALL UDN$MAGICSS;  /* RESET MAGIC TO WHAT IT WAS         */

   7104  2 000745   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000746   000000 701000 xent               TSX1    UDN$MAGICSS
         2 000747   000000 011000                    NOP     0

      453     7105                                                /*GET SVLDT FRAME OFF USER TCB        */
      454     7106    5                        XCON$=ADDR(NIL);

   7106  2 000750   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000751   200011 756100                    STQ     XCON$,,AUTO

      455     7107    5                        CALL UEP$CLEARONE(0,XCON$);

   7107  2 000752   200011 630500                    EPPR0   XCON$,,AUTO
         2 000753   200027 450500                    STP0    ECC+2,,AUTO
         2 000754   000001 236000 3                  LDQ     1
         2 000755   200026 756100                    STQ     ECC+1,,AUTO
         2 000756   200026 630500                    EPPR0   ECC+1,,AUTO
         2 000757   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000760   000000 701000 xent               TSX1    UEP$CLEARONE
         2 000761   000000 011000                    NOP     0

      456     7108
      457     7109    5                        CODE=%ECC_SAVLDT#;

PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:65   
   7109  2 000762   000136 235007                    LDA     94,DL
         2 000763   200003 755100                    STA     CODE,,AUTO

      458     7110    5                        CALL SSU$DELTAGO (CODE,0);

   7110  2 000764   000001 236000 3                  LDQ     1
         2 000765   200027 756100                    STQ     ECC+2,,AUTO
         2 000766   200003 630500                    EPPR0   CODE,,AUTO
         2 000767   200026 450500                    STP0    ECC+1,,AUTO
         2 000770   200026 630500                    EPPR0   ECC+1,,AUTO
         2 000771   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000772   000000 701000 xent               TSX1    SSU$DELTAGO
         2 000773   000000 011000                    NOP     0

      459     7111
      460     7112    5                        END;               /*DO IF XCON - DELTA ASSOCIATED       */

   7112  2 000774   001024 710000 2                  TRA     BYPASS_XCON

      461     7113    5                   ELSE DO;

   7106  2 000775                       NO_DELTA     null
      462     7114    5   NO_DELTA:            ;
      463     7115    5                        B$ECCB.XCONF.PROG='1'B;

   7115  2 000775   000005 471400 xsym               LDP1    B_MPT+5
         2 000776   000400 236003                    LDQ     256,DU
         2 000777   100004 256100                    ORSQ    4,,PR1

      464     7116    5                        B$ECCB.XCONF=(B$ECCB.XCONF | (B$JIT.SVLDTF & %SVL_ECCB#) );

   7116  2 001000   000316 236100                    LDQ     206,,PR0
         2 001001   000033 736000                    QLS     27
         2 001002   016000 376003                    ANQ     7168,DU
         2 001003   200026 756100                    STQ     ECC+1,,AUTO
         2 001004   000005 471400 xsym               LDP1    B_MPT+5
         2 001005   100004 236100                    LDQ     4,,PR1
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:66   
         2 001006   000011 736000                    QLS     9
         2 001007   777000 376003                    ANQ     -512,DU
         2 001010   200026 276100                    ORQ     ECC+1,,AUTO
         2 001011   000011 772000                    QRL     9
         2 001012   100004 552120                    STBQ    4,'20'O,PR1

   7116  2 001013                       MT2          null
      465     7117    5   MT2:                 ;
      466     7118    5                        XCON$->B$ATCBF.ECC=%ECC_XCON#;

   7118  2 001013   200011 471500                    LDP1    XCON$,,AUTO
         2 001014   100000 441100                    SXL1    0,,PR1

      467     7119    5                        B$SS.IC=B$ECCB.XCON;

   7119  2 001015   000005 471400 xsym               LDP1    B_MPT+5
         2 001016   100001 722100                    LXL2    1,,PR1
         2 001017   000000 473400 xsym               LDP3    B_MPT
         2 001020   300004 742100                    STX2    4,,PR3

      468     7120    5                        CALL UDB$AUTO;

   7120  2 001021   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001022   000000 701000 xent               TSX1    UDB$AUTO
         2 001023   000000 011000                    NOP     0

      469     7121                                                /* FLUSH AUTO-ENTER USER XCON         */
      470     7122    5                        END;               /*DO IF XCON - NO DELTA               */

      471     7123    4                   END;                    /*DO IF XCONSET                       */

   7119  2 001024                       BYPASS_XCON  null
      472     7124    3   BYPASS_XCON: ;
      473     7125    3              B$JIT.SVLDTF =(B$JIT.SVLDTF | %SVL_TRTN#);

   7125  2 001024   000000 470400 xsym               LDP0    B$JIT$
         2 001025   000316 236100                    LDQ     206,,PR0
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:67   
         2 001026   000033 736000                    QLS     27
         2 001027   040000 276003                    ORQ     16384,DU
         2 001030   000033 772000                    QRL     27
         2 001031   000316 552104                    STBQ    206,'04'O,PR0

      474     7126                                                /*SET READY                           */
      475     7127    3              IF (B$JIT.SVLDTF & %SVL_LDTRC#)

   7127  2 001032   000316 236100                    LDQ     206,,PR0
         2 001033   000033 736000                    QLS     27
         2 001034   010000 376003                    ANQ     4096,DU
         2 001035   001070 601000 2                  TNZ     NO_XCON

      476     7128    3              THEN GOTO NO_XCON;
      477     7129    3              ELSE GOTO USRDONE;

   7129  2 001036   001510 710000 2                  TRA     USRDONE

   7127  2 001037                       ALT_DTCB     null
      478     7130
      479     7131    3   ALT_DTCB:  ;                            /*ALTRET FROM MOVETCB                 */
      480     7132    3              CALL SC_SSUTCB;

   7132  2 001037   000000 713400 xsym               CLIMB   SC_SSUTCB
         2 001040   000000 600000 xsid               climb   nvectors=         0

      481     7133    3              END;                         /*DO IF SVL_ECCB#                     */

   7125  2 001041                       USR_XCONSEE  null
      482     7134    2   USR_XCONSEE: ;
      483     7135
      484     7136    2         IF (S$CU$->B$U.FLG & %U_CAN)

   7136  2 001041   000000 470400 xsym               LDP0    S$CU$
         2 001042   000000 236100                    LDQ     0,,PR0
         2 001043   000021 376000 1                  ANQ     ERRSSF+4
         2 001044   001061 600000 2                  TZE     s:7142
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:68   

      485     7137    3         THEN DO;

      486     7138    3              B$JIT.XCONF = (B$JIT.XCONF | %XC_QUIT#);

   7138  2 001045   000000 471400 xsym               LDP1    B$JIT$
         2 001046   100316 236100                    LDQ     206,,PR1
         2 001047   777000 376003                    ANQ     -512,DU
         2 001050   001000 276003                    ORQ     512,DU
         2 001051   100316 552140                    STBQ    206,'40'O,PR1

      487     7139    3              S$CU$->B$U.FLG = (S$CU$->B$U.FLG &~ %U_CAN);

   7139  2 001052   000021 236000 1                  LDQ     ERRSSF+4
         2 001053   000027 676000 xsym               ERQ     B_VECTNIL+23
         2 001054   000000 376100                    ANQ     0,,PR0
         2 001055   000000 756100                    STQ     0,,PR0

      488     7140    3              B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 | %CP_LOGOFF#;

   7140  2 001056   100143 236100                    LDQ     99,,PR1
         2 001057   000030 276000 xsym               ORQ     B_VECTNIL+24
         2 001060   100143 756100                    STQ     99,,PR1

      489     7141    3              END;

      490     7142    2         TEMPF=B$JIT.RNST;

   7142  2 001061   000000 470400 xsym               LDP0    B$JIT$
         2 001062   000314 236100                    LDQ     204,,PR0
         2 001063   777000 376003                    ANQ     -512,DU
         2 001064   200010 756100                    STQ     TEMPF,,AUTO

      491     7143    2         CALL JSX$XCONSEE;

   7143  2 001065   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001066   000000 701000 xent               TSX1    JSX$XCONSEE
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:69   
         2 001067   000000 011000                    NOP     0

   7142  2 001070                       NO_XCON      null
      492     7144
      493     7145    2   NO_XCON: ;
      494     7146    2         CALL SSV$DORUND(WSR);

   7146  2 001070   200007 630500                    EPPR0   WSR,,AUTO
         2 001071   200026 450500                    STP0    ECC+1,,AUTO
         2 001072   200026 630500                    EPPR0   ECC+1,,AUTO
         2 001073   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001074   000000 701000 xent               TSX1    SSV$DORUND
         2 001075   000000 011000                    NOP     0

      495     7147
      496     7148    2         B$JIT.XCONF = ( (B$JIT.XCONF & %XC_DOMAIN#) | %XC_URND# );

   7148  2 001076   000000 470400 xsym               LDP0    B$JIT$
         2 001077   000316 236100                    LDQ     206,,PR0
         2 001100   777000 376003                    ANQ     -512,DU
         2 001101   007000 376003                    ANQ     3584,DU
         2 001102   000022 772000                    QRL     18
         2 001103   000000 620006                    EAX0    0,QL
         2 001104   004000 260003                    ORX0    2048,DU
         2 001105   000000 636010                    EAQ     0,X0
         2 001106   000316 552140                    STBQ    206,'40'O,PR0

      497     7149    2         IF (B$JIT.XCONF & %XC_QUIT#)

   7149  2 001107   000316 236100                    LDQ     206,,PR0
         2 001110   777000 376003                    ANQ     -512,DU
         2 001111   001000 376003                    ANQ     512,DU
         2 001112   001142 600000 2                  TZE     QUIT_AFTER_LINK

      498     7150    3         THEN DO;

      499     7151    3              IF ( (TEMPF & %RS_EKEY#) AND (B$JIT.CPFLAGS1 & %CP_LOGOFF#) )
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:70   

   7151  2 001113   200010 236100                    LDQ     TEMPF,,AUTO
         2 001114   777000 376003                    ANQ     -512,DU
         2 001115   020000 376003                    ANQ     8192,DU
         2 001116   001134 600000 2                  TZE     s:7159
         2 001117   000143 236100                    LDQ     99,,PR0
         2 001120   000030 376000 xsym               ANQ     B_VECTNIL+24
         2 001121   001134 600000 2                  TZE     s:7159

      500     7152    4              THEN DO;

      501     7153    4                   B$JIT.USRRNST = (TEMPF | %RS_ERR#);

   7153  2 001122   200010 236100                    LDQ     TEMPF,,AUTO
         2 001123   777000 376003                    ANQ     -512,DU
         2 001124   001000 276003                    ORQ     512,DU
         2 001125   000022 772000                    QRL     18
         2 001126   000145 552110                    STBQ    101,'10'O,PR0

      502     7154                            /* RS_ERR# + RS_EKEY means canceled to KEYIN in USRRNST   */
      503     7155    4                   B$JIT.USRERR = B$JIT.ERR;

   7155  2 001127   000012 236100                    LDQ     10,,PR0
         2 001130   000144 756100                    STQ     100,,PR0

      504     7156    4                   B$JIT.USRDCB = 0;

   7156  2 001131   000000 236003                    LDQ     0,DU
         2 001132   000153 552104                    STBQ    107,'04'O,PR0

      505     7157    4                   END;

   7157  2 001133   001151 710000 2                  TRA     s:7170

      506     7158    4              ELSE DO;

      507     7159    4                   IF B$JIT.JUNK & %JJ_RTNXIT#
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:71   

   7159  2 001134   000315 220100                    LDX0    205,,PR0
         2 001135   000100 360003                    ANX0    64,DU
         2 001136   001142 601000 2                  TNZ     QUIT_AFTER_LINK

      508     7160    4                   THEN GOTO QUIT_AFTER_LINK;
      509     7161    4                   ELSE B$JIT.USRRNST = %RS_EXIT#;

   7161  2 001137   000000 236003                    LDQ     0,DU
         2 001140   000145 552110                    STBQ    101,'10'O,PR0

      510     7162    4                   END;

      511     7163    3              END;

   7163  2 001141   001151 710000 2                  TRA     s:7170

      512     7164    3         ELSE DO;

   7161  2 001142                       QUIT_AFTER_* null
      513     7165    3   QUIT_AFTER_LINK: ;
      514     7166    3              B$JIT.USRRNST = TEMPF;

   7166  2 001142   200010 236100                    LDQ     TEMPF,,AUTO
         2 001143   000022 772000                    QRL     18
         2 001144   000145 552110                    STBQ    101,'10'O,PR0

      515     7167    3              B$JIT.USRERR=B$JIT.ERR;

   7167  2 001145   000012 236100                    LDQ     10,,PR0
         2 001146   000144 756100                    STQ     100,,PR0

      516     7168    3              B$JIT.USRDCB=B$JIT.DCBNO;

   7168  2 001147   000022 236100                    LDQ     18,,PR0
         2 001150   000153 552104                    STBQ    107,'04'O,PR0

PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:72   
      517     7169    3              END;

      518     7170    2         B$JIT.USRIC = B$SS.IC;

   7170  2 001151   000000 471400 xsym               LDP1    B_MPT
         2 001152   100004 220100                    LDX0    4,,PR1
         2 001153   000146 440100                    SXL0    102,,PR0

      519     7171
      520     7172    2         GOTO USRDONE;

   7172  2 001154   001510 710000 2                  TRA     USRDONE

      521     7173
      522     7174
      523     7175    2       CASE(%ASLWSR);

      524     7176    2         CALL JSX$XCONSEE;

   7176  2 001155   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001156   000000 701000 xent               TSX1    JSX$XCONSEE
         2 001157   000000 011000                    NOP     0

      525     7177    2         JERR=EASLABRT;

   7177  2 001160   000011 236000 1                  LDQ     EASLABRT
         2 001161   200004 756100                    STQ     JERR,,AUTO

      526     7178        /*E*   ERROR:  JSE-E$ASLABRT-A
      527     7179               MESSAGE: Your Alternate Shared Library aborted the job.
      528     7180        */
      529     7181    2         CALL SSV$DORUND(WSR);

   7181  2 001162   200007 630500                    EPPR0   WSR,,AUTO
         2 001163   200026 450500                    STP0    ECC+1,,AUTO
         2 001164   200026 630500                    EPPR0   ECC+1,,AUTO
         2 001165   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:73   
         2 001166   000000 701000 xent               TSX1    SSV$DORUND
         2 001167   000000 011000                    NOP     0

      530     7182    2         B$JIT.XCONF = ( (B$JIT.XCONF & %XC_DOMAIN#) | %XC_ASL# );

   7182  2 001170   000000 470400 xsym               LDP0    B$JIT$
         2 001171   000316 236100                    LDQ     206,,PR0
         2 001172   777000 376003                    ANQ     -512,DU
         2 001173   007000 376003                    ANQ     3584,DU
         2 001174   000022 772000                    QRL     18
         2 001175   000000 620006                    EAX0    0,QL
         2 001176   002000 260003                    ORX0    1024,DU
         2 001177   000000 636010                    EAQ     0,X0
         2 001200   000316 552140                    STBQ    206,'40'O,PR0

      531     7183    2         CALL JSA$RUNDSPC(%ASLWSR);

   7183  2 001201   000004 630400 3                  EPPR0   4
         2 001202   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001203   000000 701000 xent               TSX1    JSA$RUNDSPC
         2 001204   000000 011000                    NOP     0
         2 001205   001411 710000 2                  TRA     s:7255

      532     7184
      533     7185    2       CASE(%DBWSR);

      534     7186    2         CALL JSX$XCONSEE;

   7186  2 001206   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001207   000000 701000 xent               TSX1    JSX$XCONSEE
         2 001210   000000 011000                    NOP     0

      535     7187    2         JERR=EDBABRT;

   7187  2 001211   000012 236000 1                  LDQ     EDBABRT
         2 001212   200004 756100                    STQ     JERR,,AUTO

PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:74   
      536     7188        /*E*   ERROR:  JSE-E$DBABRT-A
      537     7189               MESSAGE: Your Debugger aborted the job.
      538     7190        */
      539     7191    2         CALL SSV$DORUND(WSR);

   7191  2 001213   200007 630500                    EPPR0   WSR,,AUTO
         2 001214   200026 450500                    STP0    ECC+1,,AUTO
         2 001215   200026 630500                    EPPR0   ECC+1,,AUTO
         2 001216   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001217   000000 701000 xent               TSX1    SSV$DORUND
         2 001220   000000 011000                    NOP     0

      540     7192    2         B$JIT.XCONF = (B$JIT.XCONF & %XC_DOMAIN#);

   7192  2 001221   000000 470400 xsym               LDP0    B$JIT$
         2 001222   000316 236100                    LDQ     206,,PR0
         2 001223   777000 376003                    ANQ     -512,DU
         2 001224   007000 376003                    ANQ     3584,DU
         2 001225   000316 552140                    STBQ    206,'40'O,PR0

      541     7193    2         IF NOT(B$JIT.XCONF & %XC_URND#)

   7193  2 001226   000316 236100                    LDQ     206,,PR0
         2 001227   777000 376003                    ANQ     -512,DU
         2 001230   004000 376003                    ANQ     2048,DU
         2 001231   001261 601000 2                  TNZ     s:7200

      542     7194    3         THEN DO;

      543     7195    3              TEMP = B$JIT.PLL + B$JIT.PCP - 1;

   7195  2 001232   000201 236100                    LDQ     129,,PR0
         2 001233   000022 772000                    QRL     18
         2 001234   200026 756100                    STQ     ECC+1,,AUTO
         2 001235   000176 236100                    LDQ     126,,PR0
         2 001236   000022 772000                    QRL     18
         2 001237   200026 036100                    ADLQ    ECC+1,,AUTO
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:75   
         2 001240   000001 136007                    SBLQ    1,DL
         2 001241   200006 756100                    STQ     TEMP,,AUTO

      544     7196    4              DO I=B$JIT.PLL TO TEMP;

   7196  2 001242   000176 236100                    LDQ     126,,PR0
         2 001243   000022 772000                    QRL     18
         2 001244   200005 756100                    STQ     I,,AUTO
         2 001245   001255 710000 2                  TRA     s:7198+1

      545     7197    4                   B$UPT$->B$MAP.CTRL(I) = (%PGINMEM | %PGIOM);

   7197  2 001246   000000 470400 xsym               LDP0    B$UPT$
         2 001247   200005 720100                    LXL0    I,,AUTO
         2 001250   000000 236110                    LDQ     0,X0,PR0
         2 001251   000005 376000 3                  ANQ     5
         2 001252   000044 276007                    ORQ     36,DL
         2 001253   000000 756110                    STQ     0,X0,PR0

      546     7198    4                   END;

   7198  2 001254   200005 054100                    AOS     I,,AUTO
         2 001255   200006 236100                    LDQ     TEMP,,AUTO
         2 001256   001246 604000 2                  TMI     s:7197
         2 001257   200005 116100                    CMPQ    I,,AUTO
         2 001260   001246 605000 2                  TPL     s:7197

      547     7199    3              END;

      548     7200    2         IF (B$JIT.JUNK & %JJ_DLIB#)

   7200  2 001261   000000 470400 xsym               LDP0    B$JIT$
         2 001262   000315 220100                    LDX0    205,,PR0
         2 001263   004000 360003                    ANX0    2048,DU
         2 001264   001300 601000 2                  TNZ     s:7204
         2 001265   000314 236100                    LDQ     204,,PR0
         2 001266   777000 376003                    ANQ     -512,DU
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:76   
         2 001267   013000 376003                    ANQ     5632,DU
         2 001270   001300 601000 2                  TNZ     s:7204
         2 001271   000315 220100                    LDX0    205,,PR0
         2 001272   000100 360003                    ANX0    64,DU
         2 001273   001305 601000 2                  TNZ     s:7206
         2 001274   000316 236100                    LDQ     206,,PR0
         2 001275   000033 736000                    QLS     27
         2 001276   016000 376003                    ANQ     7168,DU
         2 001277   001305 601000 2                  TNZ     s:7206

      549     7201    2           OR (B$JIT.RNST & (%RS_ERR# | %RS_XXX# | %RS_ABRT#) )
      550     7202    2           OR ( (  (B$JIT.JUNK & %JJ_RTNXIT#) = '000000'O )
      551     7203    2           AND (  (B$JIT.SVLDTF & %SVL_ECCB#) = '000'O )  )
      552     7204    2         THEN CALL JSA$RUNDSPC(%DBWSR,1);

   7204  2 001300   000006 630400 3                  EPPR0   6
         2 001301   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 001302   000000 701000 xent               TSX1    JSA$RUNDSPC
         2 001303   000000 011000                    NOP     0
         2 001304   001341 710000 2                  TRA     DONE

      553     7205    3         ELSE DO;

      554     7206    3              CALL JSA$RUNDSPC(%DBWSR,0);

   7206  2 001305   000010 630400 3                  EPPR0   8
         2 001306   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 001307   000000 701000 xent               TSX1    JSA$RUNDSPC
         2 001310   000000 011000                    NOP     0

      555     7207    3              IF (B$JIT.SVLDTF & %SVL_ECCB#)

   7207  2 001311   000000 470400 xsym               LDP0    B$JIT$
         2 001312   000316 236100                    LDQ     206,,PR0
         2 001313   000033 736000                    QLS     27
         2 001314   016000 376003                    ANQ     7168,DU
         2 001315   001341 600000 2                  TZE     DONE
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:77   

      556     7208    4              THEN DO;

      557     7209    4                   XCON$=ADDR(NIL);

   7209  2 001316   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 001317   200011 756100                    STQ     XCON$,,AUTO

      558     7210    5                   DO WHILE('1'B);

      559     7211    5                        I=%DBWSR;

   7211  2 001320   000005 235007                    LDA     5,DL
         2 001321   200005 755100                    STA     I,,AUTO

      560     7212                                      /*TELLS CLEARONE TO REMOVE ONLY %DBWSQ FRAMES   */
      561     7213    5                        CALL UEP$CLEARONE(I,XCON$)  ALTRET(DONE);

   7213  2 001322   200011 630500                    EPPR0   XCON$,,AUTO
         2 001323   200027 450500                    STP0    ECC+2,,AUTO
         2 001324   200005 631500                    EPPR1   I,,AUTO
         2 001325   200026 451500                    STP1    ECC+1,,AUTO
         2 001326   200026 630500                    EPPR0   ECC+1,,AUTO
         2 001327   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 001330   000000 701000 xent               TSX1    UEP$CLEARONE
         2 001331   001341 702000 2                  TSX2    DONE

      562     7214    5                        IF XCON$->B$ATCBF.ISR.WSR  = %USERWSR

   7214  2 001332   200011 470500                    LDP0    XCON$,,AUTO
         2 001333   000010 236100                    LDQ     8,,PR0
         2 001334   000700 376007                    ANQ     448,DL
         2 001335   000700 116007                    CMPQ    448,DL
         2 001336   001320 601000 2                  TNZ     s:7211

      563     7215    6                        THEN DO;

PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:78   
      564     7216    6                             XCON$->B$ATCBF.ASL=0;

   7216  2 001337   000001 450100                    STZ     1,,PR0

      565     7217    6                             GOTO DONE;

   7217  2 001340   001341 710000 2                  TRA     DONE

      566     7218    6                             END;          /*DO IF %USERWSR*/
      567     7219    5                        END;               /*DO FOREVER                          */

   7211  2 001341   001411 710000 2     DONE         TRA     s:7255

      568     7220    4                   END;                    /*DO IF SVL_ECCB                      */
      569     7221    3              END;                         /*DO IF RTNXIT OR DLIB                */
      570     7222    2   DONE: ;
      571     7223
      572     7224    2       CASE(%CPWSR);

      573     7225    2         CALL JSX$XCONSEE;

   7225  2 001342   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001343   000000 701000 xent               TSX1    JSX$XCONSEE
         2 001344   000000 011000                    NOP     0

      574     7226    2         JERR=ECPABRT;

   7226  2 001345   000013 236000 1                  LDQ     ECPABRT
         2 001346   200004 756100                    STQ     JERR,,AUTO

      575     7227        /*E*   ERROR:  JSE-E$CPABRT-A
      576     7228               MESSAGE: Your Command Processor aborted the job.
      577     7229        */
      578     7230    2         B$JIT.XCONF = (B$JIT.XCONF & %XC_DOMAIN#);

   7230  2 001347   000000 470400 xsym               LDP0    B$JIT$
         2 001350   000316 236100                    LDQ     206,,PR0
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:79   
         2 001351   777000 376003                    ANQ     -512,DU
         2 001352   007000 376003                    ANQ     3584,DU
         2 001353   000316 552140                    STBQ    206,'40'O,PR0

      579     7231    2         CALL SSV$DORUND(WSR);

   7231  2 001354   200007 631500                    EPPR1   WSR,,AUTO
         2 001355   200026 451500                    STP1    ECC+1,,AUTO
         2 001356   200026 630500                    EPPR0   ECC+1,,AUTO
         2 001357   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001360   000000 701000 xent               TSX1    SSV$DORUND
         2 001361   000000 011000                    NOP     0

      580     7232    2         IF (B$JIT.RNST & %RS_ABRT#) THEN CALL SC_JSECPSUA;

   7232  2 001362   000000 470400 xsym               LDP0    B$JIT$
         2 001363   000314 236100                    LDQ     204,,PR0
         2 001364   777000 376003                    ANQ     -512,DU
         2 001365   010000 376003                    ANQ     4096,DU
         2 001366   001371 600000 2                  TZE     s:7233

   7232  2 001367   000000 713400 xsym               CLIMB   SC_JSECPSUA
         2 001370   000000 600000 xsid               climb   nvectors=         0

      581     7233    2         IF (B$JIT.CPFLAGS1 & %CP_KEEPDS#)

   7233  2 001371   000000 470400 xsym               LDP0    B$JIT$
         2 001372   000143 236100                    LDQ     99,,PR0
         2 001373   000022 376000 1                  ANQ     ERRSSF+5
         2 001374   001402 600000 2                  TZE     s:7235

      582     7234    2         THEN CALL JSA$RUNDSPC(%CPWSR,0);

   7234  2 001375   000012 630400 3                  EPPR0   10
         2 001376   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 001377   000000 701000 xent               TSX1    JSA$RUNDSPC
         2 001400   000000 011000                    NOP     0
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:80   
         2 001401   001411 710000 2                  TRA     s:7255

      583     7235    2         ELSE CALL JSA$RUNDSPC(%CPWSR,1);

   7235  2 001402   000014 630400 3                  EPPR0   12
         2 001403   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 001404   000000 701000 xent               TSX1    JSA$RUNDSPC
         2 001405   000000 011000                    NOP     0
         2 001406   001411 710000 2                  TRA     s:7255

      584     7236        /*S*   SCREECH_CODE:  JSE-S$CPSUA
      585     7237               TYPE:   SUA
      586     7238               MESSAGE:  Command Processor aborted
      587     7239               REMARKS:  The command processor aborted and the user
      588     7240                         must be aborted.
      589     7241        */
      590     7242
      591     7243    2       CASE(ELSE);

      592     7244    2         CALL SC_JSESSF;

   7244  2 001407   000000 713400 xsym               CLIMB   SC_JSESSF
         2 001410   000000 600000 xsid               climb   nvectors=         0

      593     7245        /*S*   SCREECH_CODE:  JSE-S$SSFRAME
      594     7246               TYPE:   SUA
      595     7247               MESSAGE:  Invalid frame on the users Safe-Store Stack.
      596     7248               REMARKS:  The bad Safe-Store frame was detected by
      597     7249                         JSE$EXITS when running down the Job Step.
      598     7250                         The WSR in the ISR is not 7,6,5 or 4.
      599     7251        */
      600     7252
      601     7253    2         END;                              /*Do case(ewsq)                       */

      602     7254        /**/
      603     7255    1      CALL JSS$RUNDSPC;

PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:81   
   7255  2 001411   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001412   000000 701000 xent               TSX1    JSS$RUNDSPC
         2 001413   000000 011000                    NOP     0

      604     7256    1      IF (B$JIT.RNST & %RS_XCON#) THEN GOTO JSE$MAIN1;

   7256  2 001414   000000 470400 xsym               LDP0    B$JIT$
         2 001415   000314 236100                    LDQ     204,,PR0
         2 001416   777000 376003                    ANQ     -512,DU
         2 001417   760000 376003                    ANQ     -8192,DU
         2 001420   000520 601000 2                  TNZ     JSE$MAIN1

      605     7257                                                /*                                    */
      606     7258                                                /*                                    */
      607     7259    1      IF (B$JIT.JUNK & %JJ_DLIB#)

   7259  2 001421   000315 220100                    LDX0    205,,PR0
         2 001422   004000 360003                    ANX0    2048,DU
         2 001423   001434 600000 2                  TZE     s:7265

      608     7260    2      THEN DO;

      609     7261    2           B$JIT.RNST='000'O;

   7261  2 001424   000000 236003                    LDQ     0,DU
         2 001425   000314 552140                    STBQ    204,'40'O,PR0

      610     7262    2           B$JIT.JUNK = (B$JIT.JUNK &~ %JJ_DLIB#);

   7262  2 001426   000315 220100                    LDX0    205,,PR0
         2 001427   773777 360003                    ANX0    -2049,DU
         2 001430   000315 740100                    STX0    205,,PR0

      611     7263    2           CALL UDB$PMMEXIT2;

   7263  2 001431   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001432   000000 701000 xent               TSX1    UDB$PMMEXIT2
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:82   
         2 001433   000000 011000                    NOP     0

      612     7264    2           END;

      613     7265    1      IF NOT(B$JIT.XCONF & %XC_URND#)

   7265  2 001434   000000 470400 xsym               LDP0    B$JIT$
         2 001435   000316 236100                    LDQ     206,,PR0
         2 001436   777000 376003                    ANQ     -512,DU
         2 001437   004000 376003                    ANQ     2048,DU
         2 001440   001466 601000 2                  TNZ     s:7273
         2 001441   000316 236100                    LDQ     206,,PR0
         2 001442   000033 736000                    QLS     27
         2 001443   016000 376003                    ANQ     7168,DU
         2 001444   001466 601000 2                  TNZ     s:7273

      614     7266    1        AND NOT(B$JIT.SVLDTF & %SVL_ECCB#)
      615     7267    2      THEN DO;

      616     7268    2           IF (B$JIT.ERR.CODE=0) OR (B$JIT.RNST & %RS_ABRT#)

   7268  2 001445   000012 236100                    LDQ     10,,PR0
         2 001446   377770 316007                    CANQ    131064,DL
         2 001447   001454 600000 2                  TZE     s:7269
         2 001450   000314 236100                    LDQ     204,,PR0
         2 001451   777000 376003                    ANQ     -512,DU
         2 001452   010000 376003                    ANQ     4096,DU
         2 001453   001456 600000 2                  TZE     s:7270

      617     7269    2           THEN B$JIT.ERR=JERR;

   7269  2 001454   200004 236100                    LDQ     JERR,,AUTO
         2 001455   000012 756100                    STQ     10,,PR0

      618     7270    2           B$JIT.RNST=( (B$JIT.RNST & %RS_XCON#) | %RS_SSP#);

   7270  2 001456   000314 236100                    LDQ     204,,PR0
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:83   
         2 001457   777000 376003                    ANQ     -512,DU
         2 001460   760000 376003                    ANQ     -8192,DU
         2 001461   000022 772000                    QRL     18
         2 001462   000000 620006                    EAX0    0,QL
         2 001463   004000 260003                    ORX0    2048,DU
         2 001464   000000 636010                    EAQ     0,X0
         2 001465   000314 552140                    STBQ    204,'40'O,PR0

      619     7271    2           END;

      620     7272        /**/
      621     7273    1      GOTO JSE$MAIN1;

   7273  2 001466   000520 710000 2                  TRA     JSE$MAIN1

   7269  2 001467                       ABORT_ASF    null
      622     7274
      623     7275        %EJECT;
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:84   
      624     7276
      625     7277    1   ABORT_ASF: ;
      626     7278    1      IF B$SS.ISR.WSR ~= %USERWSR THEN CALL SC_JSEASF;

   7278  2 001467   000000 470400 xsym               LDP0    B_MPT
         2 001470   000010 236100                    LDQ     8,,PR0
         2 001471   000160 376007                    ANQ     112,DL
         2 001472   000160 116007                    CMPQ    112,DL
         2 001473   001476 600000 2                  TZE     s:7292

   7278  2 001474   000000 713400 xsym               CLIMB   SC_JSEASF
         2 001475   000000 600000 xsid               climb   nvectors=         0

      627     7279        /*S*   SCREECH_CODE:   JSE-S$MAGIC
      628     7280               TYPE:   SUA
      629     7281               MESSAGE: The users Argument Stack is full at abort/exit or JSE$ACP.
      630     7282               REMARKS:   JSE$EXITS was called to rundown the Job Step
      631     7283                          with less than 10 words remaining on the
      632     7284                          users Argument Stack.
      633     7285                          Can also happen if trying to enter the Command
      634     7286                          Processor with less than nn words remaining on
      635     7287                          the Argument Stack.
      636     7288                          If the top Safe-Store Stack frame is the users
      637     7289                          he is aborted with error code E$ASF instead of
      638     7290                          of Screeching.
      639     7291        */
      640     7292    1      IF B$JIT.ERR.CODE=0 THEN B$JIT.ERR=ERRASF;

   7292  2 001476   000000 470400 xsym               LDP0    B$JIT$
         2 001477   000012 236100                    LDQ     10,,PR0
         2 001500   377770 316007                    CANQ    131064,DL
         2 001501   001504 601000 2                  TNZ     s:7293

   7292  2 001502   000014 236000 1                  LDQ     ERRASF
         2 001503   000012 756100                    STQ     10,,PR0

      641     7293    1      CALL JSS$FIXLASR;
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:85   

   7293  2 001504   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001505   000000 701000 xent               TSX1    JSS$FIXLASR
         2 001506   000000 011000                    NOP     0

      642     7294        /*E*   ERROR: JSE-E$ASF-A
      643     7295               MESSAGE: Argument/Parameter Stack is full on entry to the Command Processor.
      644     7296               DESCRIPTION: This error can occur if:
      645     7297                                1) The user enters the Exit/Abort logic
      646     7298                                   with less than 10 words remaining on the
      647     7299                                   Argument/Parameter Stack.
      648     7300                                2) The user hits Control-Y causing a call
      649     7301                                   to JSE$ACP with less than nn words
      650     7302                                   remaining on the Argument/Parameter
      651     7303                                   Stack.
      652     7304                            In either case, the error code in the JIT is
      653     7305                            is set to E$ASF only if it currently is non-
      654     7306                            zero.  The Argument/Parameter Stack is flushed
      655     7307                            in all frames found on Safe-Store and the user
      656     7308                            is aborted.
      657     7309        */
      658     7310    1      GOTO ABORTM1;

   7310  2 001507   000326 710000 2                  TRA     ABORTM1

   7292  2 001510                       USRDONE      null
      659     7311        %EJECT;
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:86   
      660     7312
      661     7313           /* USERDONE provides for giving Exit Control to those
      662     7314              Domains that were not found on Safe-Store at the time
      663     7315              of the entry to the Exit-Rundown logic.   */
      664     7316    1   USRDONE: ;
      665     7317    1      IF (S$CU$->B$U.ACP=0) AND (S_CUN > JG_MING#)

   7317  2 001510   000000 471400 xsym               LDP1    S$CU$
         2 001511   100006 236100                    LDQ     6,,PR1
         2 001512   000777 316003                    CANQ    511,DU
         2 001513   001517 601000 2                  TNZ     s:7319
         2 001514   000000 235000 xsym               LDA     S_CUN
         2 001515   000020 115007                    CMPA    16,DL
         2 001516   001630 603000 2                  TRC     JLL_ALT

      666     7318    1      THEN GOTO RUNDUSER;
      667     7319    1      CALL JSX$RUNXCON(0);                 /*Trickle up for xcon now             */

   7319  2 001517   000001 630400 3                  EPPR0   1
         2 001520   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001521   000000 701000 xent               TSX1    JSX$RUNXCON
         2 001522   000000 011000                    NOP     0

      668     7320
      669     7321                                           /* AND FINALLY WE CAN DO A LDTRC OR SAVE   */
      670     7322
      671     7323    1      IF  (B$JIT.SVLDTF & %SVL_ECCB#)

   7323  2 001523   000000 470400 xsym               LDP0    B$JIT$
         2 001524   000316 236100                    LDQ     206,,PR0
         2 001525   000033 736000                    QLS     27
         2 001526   016000 376003                    ANQ     7168,DU
         2 001527   001622 600000 2                  TZE     JLL_CHECK

      672     7324    2      THEN DO;

      673     7325    2           TEMPF=B$JIT.SVLDTF;
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:87   

   7325  2 001530   000316 236100                    LDQ     206,,PR0
         2 001531   000033 736000                    QLS     27
         2 001532   200010 756100                    STQ     TEMPF,,AUTO

      674     7326    2           B$JIT.SVLDTF=(B$JIT.SVLDTF &~ %SVL_READY#);

   7326  2 001533   637000 376003                    ANQ     -49664,DU
         2 001534   000033 772000                    QRL     27
         2 001535   000316 552104                    STBQ    206,'04'O,PR0

      675     7327    2           CALL UEP$SAVLDT ALTRET(NOT_SAVLDT);

   7327  2 001536   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001537   000000 701000 xent               TSX1    UEP$SAVLDT
         2 001540   001617 702000 2                  TSX2    NOT_SAVLDT

      676     7328                                                /*TO GET TO HERE ITS SAVE             */
      677     7329    2           B$JIT.SVLDTF=(B$JIT.SVLDTF &~ %SVL_SAVE#);

   7329  2 001541   000000 470400 xsym               LDP0    B$JIT$
         2 001542   000316 236100                    LDQ     206,,PR0
         2 001543   000033 736000                    QLS     27
         2 001544   771000 376003                    ANQ     -3584,DU
         2 001545   000033 772000                    QRL     27
         2 001546   000316 552104                    STBQ    206,'04'O,PR0

      678     7330    2           IF (TEMPF & %SVL_YCSAVE#)

   7330  2 001547   200010 236100                    LDQ     TEMPF,,AUTO
         2 001550   777000 376003                    ANQ     -512,DU
         2 001551   002000 376003                    ANQ     1024,DU
         2 001552   001566 600000 2                  TZE     s:7339

      679     7331    3           THEN DO;

      680     7332    3                IF (B$JIT.CPFLAGS1 & %CP_YCPMME#)
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:88   

   7332  2 001553   000143 236100                    LDQ     99,,PR0
         2 001554   000020 376000 1                  ANQ     ERRSSF+3
         2 001555   000510 601000 2                  TNZ     EXIT_YCPMME

      681     7333    3                THEN GOTO EXIT_YCPMME;
      682     7334    3                B$JIT.USRERR = B$JIT.ERR;

   7334  2 001556   000012 236100                    LDQ     10,,PR0
         2 001557   000144 756100                    STQ     100,,PR0

      683     7335    3                B$JIT.SVLDTF=(B$JIT.SVLDTF | %SVL_GET#);

   7335  2 001560   000316 236100                    LDQ     206,,PR0
         2 001561   000033 736000                    QLS     27
         2 001562   001000 276003                    ORQ     512,DU
         2 001563   000033 772000                    QRL     27
         2 001564   000316 552104                    STBQ    206,'04'O,PR0

      684     7336    3                GOTO ACP1;

   7336  2 001565   001775 710000 2                  TRA     ACP1

      685     7337    3                END;
      686     7338                                                /*YC SAVE - XCON OR NO XCON           */
      687     7339    2           IF NOT(B$JIT.JUNK & %JJ_SCON#)

   7339  2 001566   000315 220100                    LDX0    205,,PR0
         2 001567   100000 360003                    ANX0    32768,DU
         2 001570   001574 601000 2                  TNZ     s:7342

      688     7340    2           THEN CALL UDB$PMMEXIT2;

   7340  2 001571   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001572   000000 701000 xent               TSX1    UDB$PMMEXIT2
         2 001573   000000 011000                    NOP     0

PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:89   
      689     7341                                                /*IF M$SAVE-NO XCON                   */
      690     7342    2           IF (TEMPF & %SVL_TRTN#)

   7342  2 001574   200010 236100                    LDQ     TEMPF,,AUTO
         2 001575   777000 376003                    ANQ     -512,DU
         2 001576   040000 376003                    ANQ     16384,DU
         2 001577   001616 600000 2                  TZE     s:7354

      691     7343    3           THEN DO;

      692     7344    3                IF B$JIT.ERR.CODE ~= 0

   7344  2 001600   000000 470400 xsym               LDP0    B$JIT$
         2 001601   000012 236100                    LDQ     10,,PR0
         2 001602   377770 316007                    CANQ    131064,DL
         2 001603   001607 600000 2                  TZE     s:7347

      693     7345    3                THEN CALL UDB$PMMEXIT2;

   7345  2 001604   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001605   000000 701000 xent               TSX1    UDB$PMMEXIT2
         2 001606   000000 011000                    NOP     0

      694     7346
      695     7347    3                IF (B$JIT.JUNK & %JJ_UDELTA#)

   7347  2 001607   000000 470400 xsym               LDP0    B$JIT$
         2 001610   000315 220100                    LDX0    205,,PR0
         2 001611   200000 360003                    ANX0    65536,DU
         2 001612   000714 601000 2                  TNZ     SAVLDT_FIN

      696     7348    3                THEN GOTO SAVLDT_FIN;
      697     7349
      698     7350    3                CALL UDB$AUTO;

   7350  2 001613   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001614   000000 701000 xent               TSX1    UDB$AUTO
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:90   
         2 001615   000000 011000                    NOP     0

      699     7351                                                /* If M$TRTN from M$SAVE XCON         */
      700     7352
      701     7353    3                END;                       /* DO IF TRTN                         */

      702     7354    2           GOTO RUNDUSER;

   7354  2 001616   001630 710000 2                  TRA     JLL_ALT

   7342  2 001617                       NOT_SAVLDT   null
      703     7355                                      /*ONLY THING LEFT IS M$EXIT FROM M$SAVE XCON    */
      704     7356    2   NOT_SAVLDT: ;
      705     7357    2           B$JIT.SVLDTF='000'O;

   7357  2 001617   000000 470400 xsym               LDP0    B$JIT$
         2 001620   000000 236003                    LDQ     0,DU
         2 001621   000316 552104                    STBQ    206,'04'O,PR0

      706     7358    2           END;                            /*DO IF SVL_ECCB#                     */

   7345  2 001622                       JLL_CHECK    null
      707     7359
      708     7360
      709     7361        /* Check for load and link  return flags */
      710     7362    1   JLL_CHECK: ;
      711     7363    1      IF (B$JIT.JUNK & %JJ_RTNXIT#)

   7363  2 001622   000315 220100                    LDX0    205,,PR0
         2 001623   000100 360003                    ANX0    64,DU
         2 001624   001630 600000 2                  TZE     JLL_ALT

      712     7364    2      THEN DO;

      713     7365    2           CALL JLL$RTN ALTRET(JLL_ALT);

   7365  2 001625   000002 631400 xsym               EPPR1   B_VECTNIL+2
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:91   
         2 001626   000000 701000 xent               TSX1    JLL$RTN
         2 001627   001630 702000 2                  TSX2    JLL_ALT

      714     7366    2           END;

   7363  2 001630                       JLL_ALT      null
   7363  2 001630                       RUNDUSER     null
      715     7367    1   JLL_ALT: ;
      716     7368
      717     7369    1   RUNDUSER: ;
      718     7370    1      IF NOT(B$JIT.CPFLAGS1 & %CP_JSTEP#)

   7370  2 001630   000000 470400 xsym               LDP0    B$JIT$
         2 001631   000143 236100                    LDQ     99,,PR0
         2 001632   000023 376000 1                  ANQ     ERRSSF+6
         2 001633   001640 601000 2                  TNZ     s:7373

      719     7371    1      THEN B$JIT.CPFLAGS1 = ( (B$JIT.CPFLAGS1 & %CP_RESET#) | %CP_RUND#);

   7371  2 001634   000143 236100                    LDQ     99,,PR0
         2 001635   000024 376000 1                  ANQ     ERRSSF+7
         2 001636   000025 276000 1                  ORQ     ERRSSF+8
         2 001637   000143 756100                    STQ     99,,PR0

      720     7372
      721     7373    1      IF ( (B$JIT.MODE = %M_GHOST#) AND (S_CUN <= JG_MING#) )

   7373  2 001640   000000 236100                    LDQ     0,,PR0
         2 001641   740000 376003                    ANQ     -16384,DU
         2 001642   100000 116003                    CMPQ    32768,DU
         2 001643   001725 601000 2                  TNZ     s:7395
         2 001644   000000 235000 xsym               LDA     S_CUN
         2 001645   000020 115007                    CMPA    16,DL
         2 001646   001725 603000 2                  TRC     s:7395

      722     7374    2      THEN DO;

PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:92   
      723     7375    2           IF B_ZIP ~= 0

   7375  2 001647   000000 235000 xsym               LDA     B_ZIP
         2 001650   001735 601000 2                  TNZ     LOGOFFUSR

      724     7376    2           THEN GOTO LOGOFFUSR;
      725     7377    2           S$CU$->B$U.FLG.CPIC='0'B;

   7377  2 001651   000000 471400 xsym               LDP1    S$CU$
         2 001652   000016 236000 3                  LDQ     14
         2 001653   100000 356100                    ANSQ    0,,PR1

      726     7378    2           IF B$JIT.USRRNST ~= '000'O

   7378  2 001654   000145 236100                    LDQ     101,,PR0
         2 001655   777000 316007                    CANQ    -512,DL
         2 001656   001725 600000 2                  TZE     s:7395

      727     7379    3           THEN DO;

      728     7380    3                EL$GABRT.ERR=B$JIT.ERR;

   7380  2 001657   000012 236100                    LDQ     10,,PR0
         2 001660   000000 756000 0                  STQ     EL$GABRT

      729     7381    3                EL$GABRT.USRERR=B$JIT.USRERR;

   7381  2 001661   000144 236100                    LDQ     100,,PR0
         2 001662   000001 756000 0                  STQ     EL$GABRT+1

      730     7382    3                EL$GABRT.SYSID=B$JIT.SYSID;

   7382  2 001663   000000 720100                    LXL0    0,,PR0
         2 001664   000002 740000 0                  STX0    EL$GABRT+2

      731     7383    3                EL$GABRT.IC=B$SS.IC;

PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:93   
   7383  2 001665   000000 471400 xsym               LDP1    B_MPT
         2 001666   100004 221100                    LDX1    4,,PR1
         2 001667   000002 441000 0                  SXL1    EL$GABRT+2

      732     7384    3                EL$GABRT.RNST=B$JIT.USRRNST;

   7384  2 001670   000145 236100                    LDQ     101,,PR0
         2 001671   000022 736000                    QLS     18
         2 001672   000003 552040 0                  STBQ    EL$GABRT+3,'40'O

      733     7385    3                EL$GABRT.FRS=B$JIT.FRS;

   7385  2 001673   000314 236100                    LDQ     204,,PR0
         2 001674   000003 552020 0                  STBQ    EL$GABRT+3,'20'O

      734     7386    3                EL$GABRT.STEPCC=B$JIT.STEPCC;

   7386  2 001675   000316 236100                    LDQ     206,,PR0
         2 001676   000011 772000                    QRL     9
         2 001677   000003 552010 0                  STBQ    EL$GABRT+3,'10'O

      735     7387    3                EL$GABRT.XLIMFLG=B$JIT.XLIMFLG;

   7387  2 001700   000316 236100                    LDQ     206,,PR0
         2 001701   000011 772000                    QRL     9
         2 001702   000003 552004 0                  STBQ    EL$GABRT+3,'04'O

      736     7388    3                EL$GABRT.UNAME=B$JIT.UNAME;

   7388  2 001703   040000 100500                    MLR     fill='040'O
         2 001704   000003 000014                    ADSC9   3,,PR0                   cn=0,n=12
         2 001705   000004 000014 0                  ADSC9   EL$GABRT+4               cn=0,n=12

      737     7389    3                EL$GABRT.CCBUF=B$JIT.CCBUF;

   7389  2 001706   040000 100500                    MLR     fill='040'O
         2 001707   000033 000400                    ADSC9   27,,PR0                  cn=0,n=256
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:94   
         2 001710   000007 000400 0                  ADSC9   EL$GABRT+7               cn=0,n=256

      738     7390    3                CALL ELA$SYSLOG(EL_GABRT,EL$GABRT,SIZEW(EL$GABRT),'0'B,1,ECC);

   7390  2 001711   200025 633500                    EPPR3   ECC,,AUTO
         2 001712   200033 453500                    STP3    ECC+6,,AUTO
         2 001713   000002 236000 3                  LDQ     2
         2 001714   200032 756100                    STQ     ECC+5,,AUTO
         2 001715   000022 237000 3                  LDAQ    18
         2 001716   200030 757100                    STAQ    ECC+3,,AUTO
         2 001717   000024 237000 3                  LDAQ    20
         2 001720   200026 757100                    STAQ    ECC+1,,AUTO
         2 001721   200026 630500                    EPPR0   ECC+1,,AUTO
         2 001722   000024 631400 xsym               EPPR1   B_VECTNIL+20
         2 001723   000000 701000 xent               TSX1    ELA$SYSLOG
         2 001724   000000 011000                    NOP     0

      739     7391    3                END;

      740     7392    2           END;

      741     7393
      742     7394
      743     7395    1      IF S_CUN <= JG_MING#

   7395  2 001725   000000 235000 xsym               LDA     S_CUN
         2 001726   000020 115007                    CMPA    16,DL
         2 001727   001746 603000 2                  TRC     s:7415

      744     7396    1      THEN IF JG_SCREECHG.GHOST(S_CUN) = 1

   7396  2 001730   000000 235005 xsym               LDA     JG_SCREECHG,AL
         2 001731   000001 115007                    CMPA    1,DL
         2 001732   001746 601000 2                  TNZ     s:7415

      745     7397    2           THEN DO;                        /* This MING Ghost may not go off     */

PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:95   
      746     7398    2                CALL SC_JSEMING;

   7398  2 001733   000000 713400 xsym               CLIMB   SC_JSEMING
         2 001734   000000 600000 xsid               climb   nvectors=         0

   7398  2 001735                       LOGOFFUSR    null
      747     7399        /*S*   SCREECH_CODE:  JSE-S$MING
      748     7400               TYPE: SUA
      749     7401               MESSAGE: A System Ghost has aborted.
      750     7402               REMARKS: SCREECH will turn this SUA into a full Screech
      751     7403                        if this is a required System Ghost that is aborting.
      752     7404                        Called as a SUA so the user# is output on the
      753     7405                        OC log.
      754     7406                        These screeches may be avoided by modifying the
      755     7407                        JG_SCREECHG table.
      756     7408        */
      757     7409    2   LOGOFFUSR:   ;
      758     7410    2                CALL JSR$RUNDOWN ALTRET(ZAPUSER);

   7410  2 001735   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001736   000000 701000 xent               TSX1    JSR$RUNDOWN
         2 001737   001743 702000 2                  TSX2    ZAPUSER

      759     7411    2                CALL JSD$DELUSR;

   7411  2 001740   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001741   000000 701000 xent               TSX1    JSD$DELUSR
         2 001742   000000 011000                    NOP     0

      760     7412    2   ZAPUSER:     CALL JSD$ZAPUSR;

   7412  2 001743   000002 631400 xsym  ZAPUSER      EPPR1   B_VECTNIL+2
         2 001744   000000 701000 xent               TSX1    JSD$ZAPUSR
         2 001745   000000 011000                    NOP     0

      761     7413    2                END;

PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:96   
      762     7414
      763     7415    1      IF (B$JIT.XCONF & %XC_QUIT#)

   7415  2 001746   000000 470400 xsym               LDP0    B$JIT$
         2 001747   000316 236100                    LDQ     206,,PR0
         2 001750   777000 376003                    ANQ     -512,DU
         2 001751   001000 376003                    ANQ     512,DU
         2 001752   001755 600000 2                  TZE     s:7421

      764     7416    2      THEN DO;

      765     7417    2           B$JIT.USRERR='0'B;

   7417  2 001753   000144 450100                    STZ     100,,PR0

      766     7418    2           GOTO JSE_QUIT;

   7418  2 001754   001767 710000 2                  TRA     JSE_QUIT

      767     7419    2           END;
      768     7420
      769     7421    1      IF (B$JIT.USRRNST = %RS_EXIT#)

   7421  2 001755   000145 236100                    LDQ     101,,PR0
         2 001756   777000 316007                    CANQ    -512,DL
         2 001757   001767 600000 2                  TZE     JSE_QUIT
         2 001760   000143 236100                    LDQ     99,,PR0
         2 001761   000030 376000 xsym               ANQ     B_VECTNIL+24
         2 001762   001767 601000 2                  TNZ     JSE_QUIT
         2 001763   000000 471400 xsym               LDP1    S$CU$
         2 001764   100000 236100                    LDQ     0,,PR1
         2 001765   000017 376000 1                  ANQ     ERRSSF+2
         2 001766   001772 600000 2                  TZE     s:7429

      770     7422    1        OR (B$JIT.CPFLAGS1 & %CP_LOGOFF#)
      771     7423    1        OR (S$CU$->B$U.FLG & %U_STIP)
      772     7424    2      THEN DO;
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:97   

   7418  2 001767                       JSE_QUIT     null
      773     7425    2   JSE_QUIT: ;
      774     7426    2           CALL JSR$RUNDOWN ALTRET(ZAPUSER);

   7426  2 001767   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001770   000000 701000 xent               TSX1    JSR$RUNDOWN
         2 001771   001743 702000 2                  TSX2    ZAPUSER

      775     7427    2           END;

      776     7428
      777     7429    1      GOTO ACP1;

   7429  2 001772   001775 710000 2                  TRA     ACP1

      778     7430
      779     7431        %EJECT;
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:98   
      780     7432
      781     7433        /*F*   NAME:  JSE$ACP
      782     7434               PURPOSE:  To associate a user with his Command Processor
      783     7435        */
      784     7436
      785     7437    1   JSE$ACP1: ENTRY;

   7437  2 001773   000000 700200 xent  JSE$ACP1     TSX0  ! X66_AUTO_0
         2 001774   000034 000000                    ZERO    28,0

      786     7438    1   ACP1:;

   7438  2 001775                       ACP1         null
      787     7439        /*   Call MAGIC to setup SSR.  Call BLDASR to initialize ASR in case
      788     7440             it was used by comgroups.  Then call MAGIC again to get its ASR
      789     7441             descriptor right.                                                */
      790     7442    1      CALL UDN$MAGIC;

   7442  2 001775   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001776   000000 701000 xent               TSX1    UDN$MAGIC
         2 001777   000000 011000                    NOP     0

      791     7443    1      CALL UDN$BLDASR;

   7443  2 002000   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 002001   000000 701000 xent               TSX1    UDN$BLDASR
         2 002002   000000 011000                    NOP     0

      792     7444    1      CALL UDN$MAGIC;

   7444  2 002003   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 002004   000000 701000 xent               TSX1    UDN$MAGIC
         2 002005   000000 011000                    NOP     0

      793     7445                                      /*Make sure there is room on the Argument Stack */
      794     7446    1      IF B_MPT.ASDESC$->B$$DESCR.BASE > J_CPMXAS_D

PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:99   
   7446  2 002006   000010 470400 xsym               LDP0    B_MPT+8
         2 002007   000000 236000 xsym               LDQ     J_CPMXAS_D
         2 002010   002013 604000 2                  TMI     s:7455
         2 002011   000001 116100                    CMPQ    1,,PR0
         2 002012   001467 604000 2                  TMI     ABORT_ASF

      795     7447    1      THEN GOTO ABORT_ASF;
      796     7448             /* Flush the Argument/Parmaeter Stack and abort the user.
      797     7449                If we let it go we will likely get a Screech JSE-8-6 when
      798     7450                IBEX does an M$GETDCB which causes a call to M$MREAD.
      799     7451             */
      800     7452
      801     7453                                                /* And enough room on Safe-Store      */
      802     7454
      803     7455    1      IF B_MPT.SSDESC$->B$$DESCR.BASE > J_CPMXSS_D

   7455  2 002013   000006 471400 xsym               LDP1    B_MPT+6
         2 002014   000000 236000 xsym               LDQ     J_CPMXSS_D
         2 002015   002027 604000 2                  TMI     s:7465
         2 002016   100001 116100                    CMPQ    1,,PR1
         2 002017   002027 605000 2                  TPL     s:7465

      804     7456    2      THEN DO;

      805     7457    2           CALL JSN$FIXSSM;                /*will SUA if top frame is not user*/

   7457  2 002020   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 002021   000000 701000 xent               TSX1    JSN$FIXSSM
         2 002022   000000 011000                    NOP     0

      806     7458    2           B$JIT.ERR=ERRSSF;

   7458  2 002023   000015 236000 1                  LDQ     ERRSSF
         2 002024   000000 470400 xsym               LDP0    B$JIT$
         2 002025   000012 756100                    STQ     10,,PR0

      807     7459        /*E*   ERROR:  JSE-E$SSF-A
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:100  
      808     7460               MESSAGE: Your Safe-Store Stack is full on entry to the Command Processor.
      809     7461        */
      810     7462    2           GOTO ABORTM1;

   7462  2 002026   000326 710000 2                  TRA     ABORTM1

      811     7463    2           END;                            /*Do if >cpmxss*/
      812     7464
      813     7465    1      IF S$CU$->B$U.ACP=0

   7465  2 002027   000000 473400 xsym               LDP3    S$CU$
         2 002030   300006 236100                    LDQ     6,,PR3
         2 002031   000777 316003                    CANQ    511,DU
         2 002032   001735 600000 2                  TZE     LOGOFFUSR

      814     7466    1      THEN GOTO LOGOFFUSR;                 /* Must be user hung up during log-on */
      815     7467    1      NAME$ = ADDR(B$P.NAME(S$CU$->B$U.ACP)); /* Get ptr to cp name              */

   7467  2 002033   300006 236100                    LDQ     6,,PR3
         2 002034   000022 772000                    QRL     18
         2 002035   000777 376007                    ANQ     511,DL
         2 002036   000021 402007                    MPY     17,DL
         2 002037   000023 736000                    QLS     19
         2 002040   000032 036003                    ADLQ    26,DU
         2 002041   000000 036000 xsym               ADLQ    B$P$
         2 002042   200012 756100                    STQ     NAME$,,AUTO

      816     7468    1      ACCT$  = ADDR(J_SYSTXT);             /* And acct = :SYS for asp            */

   7468  2 002043   000021 236000 3                  LDQ     17
         2 002044   200013 756100                    STQ     ACCT$,,AUTO

      817     7469    1      PASS$ = ADDR(NIL);

   7469  2 002045   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 002046   200014 756100                    STQ     PASS$,,AUTO

PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:101  
      818     7470    1      PSID$ = ADDR(NIL);

   7470  2 002047   200015 756100                    STQ     PSID$,,AUTO

      819     7471    1      DEBUG$ = ADDR(NIL);

   7471  2 002050   200016 756100                    STQ     DEBUG$,,AUTO

      820     7472                  /* Set flag for cp to log off user if exiting ghost, or operator    */
      821     7473                                                /* Abort or line drop.                */
      822     7474    1      IF ( (B$JIT.MODE=%M_GHOST#) AND (S$CU$->B$U.ACP=0) ) OR

   7474  2 002051   000000 474400 xsym               LDP4    B$JIT$
         2 002052   400000 236100                    LDQ     0,,PR4
         2 002053   740000 376003                    ANQ     -16384,DU
         2 002054   100000 116003                    CMPQ    32768,DU
         2 002055   002061 601000 2                  TNZ     s:7474+8
         2 002056   300006 236100                    LDQ     6,,PR3
         2 002057   000777 316003                    CANQ    511,DU
         2 002060   002066 600000 2                  TZE     s:7476
         2 002061   400314 236100                    LDQ     204,,PR4
         2 002062   000011 736000                    QLS     9
         2 002063   777000 376003                    ANQ     -512,DU
         2 002064   600000 376003                    ANQ     -65536,DU
         2 002065   002071 600000 2                  TZE     s:7477

      823     7475    1        ((B$JIT.FRS & (%RS_XKEY# | %RS_DROP#)) ~= '0'B)
      824     7476    1      THEN B$JIT.CPFLAGS1 = (B$JIT.CPFLAGS1 | %CP_LOGOFF#);

   7476  2 002066   400143 236100                    LDQ     99,,PR4
         2 002067   000030 276000 xsym               ORQ     B_VECTNIL+24
         2 002070   400143 756100                    STQ     99,,PR4

      825     7477    1      B$JIT.RNST = '000'O;

   7477  2 002071   000000 236003                    LDQ     0,DU
         2 002072   400314 552140                    STBQ    204,'40'O,PR4
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:102  

      826     7478        /* Remember active priv's while in the CP in case someone has      */
      827     7479        /* M$SPRIV'ed something (i.e. its not in PRC or JOB).              */
      828     7480    1      B$JIT.PRIV.SAVED = B$JIT.PRIV.ACTIVE;

   7480  2 002073   400013 236100                    LDQ     11,,PR4
         2 002074   400017 756100                    STQ     15,,PR4

      829     7481    1      B$JIT.PRIV.ACTIVE = '0'B;

   7481  2 002075   400013 450100                    STZ     11,,PR4

      830     7482    1      CALL JST$GETPROG(NAME$,ACCT$,PASS$,PSID$,DEBUG$);

   7482  2 002076   200016 635500                    EPPR5   DEBUG$,,AUTO
         2 002077   200032 455500                    STP5    ECC+5,,AUTO
         2 002100   200015 636500                    EPPR6   PSID$,,AUTO
         2 002101   200031 456500                    STP6    ECC+4,,AUTO
         2 002102   200014 637500                    EPPR7   PASS$,,AUTO
         2 002103   200030 457500                    STP7    ECC+3,,AUTO
         2 002104   200013 630500                    EPPR0   ACCT$,,AUTO
         2 002105   200027 450500                    STP0    ECC+2,,AUTO
         2 002106   200012 630500                    EPPR0   NAME$,,AUTO
         2 002107   200026 450500                    STP0    ECC+1,,AUTO
         2 002110   200026 630500                    EPPR0   ECC+1,,AUTO
         2 002111   000023 631400 xsym               EPPR1   B_VECTNIL+19
         2 002112   000000 701000 xent               TSX1    JST$GETPROG
         2 002113   000000 011000                    NOP     0

      831     7483                                                /*  Will not return                   */
      832     7484    1   END JSE$EXITS;

   7484  2 002114   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:103  
--  Include file information  --

   J_ERRSET_C.:E05TOU  is referenced.
   B_MAGIC_C.:E05TOU  is referenced.
   UE_CP6.:E05TOU  is referenced.
   UD_SEV_C.:E05TOU  is referenced.
   UD_EQU_E.:E05TOU  is referenced.
   OC_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   JG_GHOSTS_C.:E05TOU  is referenced.
   J_ERRORS_C.:E05TOU  is referenced.
   HF_ERRORS_C.:E05TOU  is referenced.
   EL$TABLES.:E05TOU  is referenced.
   EL_SUBS_C.:E05TOU  is referenced.
   B$MAP.:E05TOU  cannot be made into a system file and is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   B_MLSMAC_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B$SS.:E05TOU  cannot be made into a system file and is referenced.
   B$P.:E05TOU  cannot be made into a system file and is referenced.
   B_ULSMAC_C.:E05TOU  is referenced.
      No diagnostics issued in procedure JSE$EXITS.
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:104  

 **** Variables and constants ****

  ****  Section 000  Data  JSE$EXITS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(2556)  r     1 EL$GABRT

  ****  Section 001 RoData JSE$EXITS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    11-0-0/b STRC        r     1 EASLABRT                   2-0-0/b STRC        r     1 EASLERR
     6-0-0/b STRC        r     1 EASLXXX                   13-0-0/b STRC        r     1 ECPABRT
     4-0-0/b STRC        r     1 ECPERR                    10-0-0/b STRC        r     1 ECPXXX
    12-0-0/b STRC        r     1 EDBABRT                    3-0-0/b STRC        r     1 EDBERR
     7-0-0/b STRC        r     1 EDBXXX                     0-0-0/b STRC        r     1 EEXIT
    14-0-0/b STRC        r     1 ERRASF                     1-0-0/b STRC        r     1 ERRPMME
    15-0-0/b STRC        r     1 ERRSSF                     5-0-0/b STRC        r     1 XXXPMME

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    13-0-0/w PTR         r     1 ACCT$                     21-0-0/w STRC(144)   r     1 B$EXCRTN
    20-0-0/w EPTR        r     1 CLEANUP$                  17-0-0/w PTR         r     1 CMD$
     3-0-0/w UBIN        r     1 CODE                      16-0-0/w PTR         r     1 DEBUG$
    25-0-0/w UBIN        r     1 ECC                        5-0-0/w SBIN        r     1 I
     4-0-0/b BIT         r     1 JERR                      12-0-0/w PTR         r     1 NAME$
    14-0-0/w PTR         r     1 PASS$                     15-0-0/w PTR         r     1 PSID$
     6-0-0/w UBIN        r     1 TEMP                      10-0-0/b BIT (9)     r     1 TEMPF
     7-0-0/w SBIN        r     1 WSR                       11-0-0/w PTR         r     1 XCON$

  ****  SYMREF variables  ****
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:105  

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$LS$
     0-0-0/w PTR         r     1 B$MISC2$                   0-0-0/w PTR         r     1 B$P$
     0-0-0/w PTR         r     1 B$PS0$                     0-0-0/w PTR         r     1 B$PS1$
     0-0-0/w PTR         r     1 B$UPT$                     0-0-0/w PTR         r     1 B$USERLS$
     0-0-0/d STRC(432)   r     1 B_MPT                      0-0-0/w SBIN        r     1 B_ZIP
     0-0-0/w STRC        r     1 JG_SCREECHG(0:0)
     0-0-0/c CHAR(8)     r     1 J_ATILA                    0-0-0/w UBIN        r     1 J_CPMXAS_D
     0-0-0/w UBIN        r     1 J_CPMXSS_D                 0-0-0/c CHAR(8)     r     1 J_SYSTXT
     0-0-0/w PTR         r     1 S$CU$                      0-0-0/w UBIN        r     1 S_CUN

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(72)    r     1 B$$DESCR                   0-0-0/w STRC(318)   r     1 B$ATCBF
     0-0-0/w STRC(180)   r     1 B$ECCB                     0-0-0/d STRC        r     1 B$JERR
     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/w STRC        r     1 B$MAP(0:1023)
     0-0-0/d STRC(10368) r     1 B$MLS                      0-0-0/d STRC(1224)  r     1 B$P(0:0)
     0-0-0/d STRC(2304)  r     1 B$SS                       0-0-0/d STRC(576)   r     1 B$U
     0-0-0/d STRC(2592)  r     1 B$ULS                      0-0-0/w STRC(2448)  r     1 B$XCON
     0-0-0/d STRC(9)     r     1 CCFPT                      0-0-0/w STRC(108)   r     1 FTCB


   Procedure JSE$EXITS requires 1101 words for executable code.
   Procedure JSE$EXITS requires 28 words of local(AUTO) storage.

    No errors detected in file JSE$EXITS.:E05TSI    .
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:106  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:107  
          MINI XREF LISTING

ABORTM1
      6976**LABEL    7310--GOTO     7462--GOTO
ABORTX1
      6998**LABEL    6968--GOTO     6991--GOTO
ABORT_ASF
      7269**LABEL    7447--GOTO
ABRTX1
      7023**LABEL    7007--CALLALT
ACCT$
      4976**DCL      7468<<ASSIGN   7482<>CALL
ACP1
      7438**LABEL    7336--GOTO     7429--GOTO
ALT_DTCB
      7127**LABEL    7102--CALLALT
B$$DESCR
      5772**DCL      7099<<ASSIGN
B$$DESCR.BASE
      5777**DCL      7446>>IF       7455>>IF
B$$DESCR.BOUND
      5773**DCL      6839>>IF
B$$DESCR.FLGS
      5774**DCL      6938>>IF       6958>>IF       7094>>IF
B$ATCBF.ASL
      5738**DCL      7216<<ASSIGN
B$ATCBF.ECC
      5737**DCL      6931>>IF       7080>>IF       7091<<ASSIGN   7118<<ASSIGN
B$ATCBF.ISR.WSR
      5742**DCL      7214>>IF
B$DO.ECCINFO
      1534**DCL      1535--REDEF
B$ECCB.FLAGS.XCONSET
      5754**DCL      7077>>IF
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:108  
B$ECCB.XCON
      5753**DCL      7119>>ASSIGN
B$ECCB.XCONF
      5755**DCL      7082>>ASSIGN   7089>>ASSIGN   7116<<ASSIGN   7116>>ASSIGN
B$ECCB.XCONF.PROG
      5755**DCL      6960>>IF       7115<<ASSIGN
B$EXCRTN
      4985**DCL      6940<<ASSIGN   6949<>CALL     6962<<ASSIGN
B$EXCRTN.ECCS
      4985**DCL      6944<<ASSIGN
B$EXCRTN.ERR
      4985**DCL      6947<<ASSIGN
B$EXCRTN.EVID
      4985**DCL      6946<<ASSIGN
B$EXCRTN.P#
      4985**DCL      6948<<ASSIGN
B$EXCRTN.SVL
      4985**DCL      6941<<ASSIGN
B$EXCRTN.TYP
      4985**DCL      6945<<ASSIGN
B$JERR
      6597**DCL      6846>>ASSIGN
B$JIT.CCBUF
      5557**DCL      7389>>ASSIGN
B$JIT.CPFLAGS1
      5558**DCL      6847<<ASSIGN   6847>>ASSIGN   6922<<ASSIGN   6922>>ASSIGN   7026<<ASSIGN   7026>>ASSIGN
      7038>>IF       7045<<ASSIGN   7045>>ASSIGN   7140<<ASSIGN   7140>>ASSIGN   7151>>IF       7233>>IF
      7332>>IF       7370>>IF       7371<<ASSIGN   7371>>ASSIGN   7421>>IF       7476<<ASSIGN   7476>>ASSIGN
B$JIT.CPFLAGS1.EXIT#
      5561**DCL      6838<<ASSIGN   6976<<ASSIGN   6998<<ASSIGN
B$JIT.CPFLAGS1.SLEAZE
      5563**DCL      5563--REDEF
B$JIT.DCBNO
      5550**DCL      6987>>ASSIGN   7168>>ASSIGN
B$JIT.ERR
      5469**DCL      6856<<ASSIGN   6862<<ASSIGN   6867<<ASSIGN   6872<<ASSIGN   6877<<ASSIGN   6887<<ASSIGN
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:109  
      6892<<ASSIGN   6897<<ASSIGN   6902<<ASSIGN   6912<<ASSIGN   6947>>ASSIGN   6986>>ASSIGN   7090>>ASSIGN
      7155>>ASSIGN   7167>>ASSIGN   7269<<ASSIGN   7292<<ASSIGN   7334>>ASSIGN   7380>>ASSIGN   7458<<ASSIGN
B$JIT.ERR.CODE
      5470**DCL      7268>>IF       7292>>IF       7344>>IF
B$JIT.ERR.MID
      5470**DCL      5470--REDEF
B$JIT.ERR.SEV
      5470**DCL      7065>>ASSIGN
B$JIT.FRS
      5660**DCL      7053<<ASSIGN   7053>>ASSIGN   7088>>ASSIGN   7385>>ASSIGN   7474>>IF
B$JIT.JRESPEAK
      5631**DCL      5632--REDEF
B$JIT.JUNK
      5664**DCL      6843<<ASSIGN   6843>>ASSIGN   6983<<ASSIGN   6983>>ASSIGN   6996>>IF       7013<<ASSIGN
      7013>>ASSIGN   7063>>IF       7064<<ASSIGN   7064>>ASSIGN   7072>>IF       7159>>IF       7200>>IF
      7200>>IF       7259>>IF       7262<<ASSIGN   7262>>ASSIGN   7339>>IF       7347>>IF       7363>>IF
B$JIT.MODE
      5464**DCL      7373>>IF       7474>>IF
B$JIT.PCP
      5628**DCL      7195>>ASSIGN
B$JIT.PLL
      5627**DCL      7195>>ASSIGN   7196>>DOINDEX
B$JIT.PRIV.ACTIVE
      5470**DCL      7480>>ASSIGN   7481<<ASSIGN
B$JIT.PRIV.SAVED
      5521**DCL      7480<<ASSIGN
B$JIT.RNST
      5643**DCL      6855<<ASSIGN   6859<<ASSIGN   6884<<ASSIGN   6979<<ASSIGN   6979>>ASSIGN   6985>>ASSIGN
      7005>>IF       7005>>IF       7010>>IF       7012<<ASSIGN   7012>>ASSIGN   7020<<ASSIGN   7020>>ASSIGN
      7023>>IF       7038>>IF       7053>>ASSIGN   7086>>ASSIGN   7142>>ASSIGN   7200>>IF       7232>>IF
      7256>>IF       7261<<ASSIGN   7268>>IF       7270<<ASSIGN   7270>>ASSIGN   7477<<ASSIGN
B$JIT.STEPCC
      5691**DCL      6842<<ASSIGN   6988<<ASSIGN   7065<<ASSIGN   7386>>ASSIGN
B$JIT.SVLDTF
      5705**DCL      6919<<ASSIGN   6925>>IF       6952<<ASSIGN   6952>>ASSIGN   6984<<ASSIGN   7042>>IF
      7067>>IF       7069>>IF       7070>>IF       7072>>IF       7082>>ASSIGN   7116>>ASSIGN   7125<<ASSIGN
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:110  
      7125>>ASSIGN   7127>>IF       7200>>IF       7207>>IF       7265>>IF       7323>>IF       7325>>ASSIGN
      7326<<ASSIGN   7326>>ASSIGN   7329<<ASSIGN   7329>>ASSIGN   7335<<ASSIGN   7335>>ASSIGN   7357<<ASSIGN
B$JIT.SYSID
      5469**DCL      7382>>ASSIGN
B$JIT.UNAME
      5469**DCL      7388>>ASSIGN
B$JIT.USRDCB
      5618**DCL      6987<<ASSIGN   7156<<ASSIGN   7168<<ASSIGN
B$JIT.USRERR
      5605**DCL      6986<<ASSIGN   7155<<ASSIGN   7167<<ASSIGN   7334<<ASSIGN   7381>>ASSIGN   7417<<ASSIGN
B$JIT.USRIC
      5606**DCL      7170<<ASSIGN
B$JIT.USRRNST
      5605**DCL      6985<<ASSIGN   7153<<ASSIGN   7161<<ASSIGN   7166<<ASSIGN   7378>>IF       7384>>ASSIGN
      7421>>IF
B$JIT.XCONF
      5685**DCL      7061>>IF       7088>>ASSIGN   7092>>IF       7138<<ASSIGN   7138>>ASSIGN   7148<<ASSIGN
      7148>>ASSIGN   7149>>IF       7182<<ASSIGN   7182>>ASSIGN   7192<<ASSIGN   7192>>ASSIGN   7193>>IF
      7230<<ASSIGN   7230>>ASSIGN   7265>>IF       7415>>IF
B$JIT.XLIMFLG
      5695**DCL      7087>>ASSIGN   7387>>ASSIGN
B$JIT$
      5247**DCL      5464--IMP-PTR  6838>>ASSIGN   6842>>ASSIGN   6843>>ASSIGN   6843>>ASSIGN   6847>>ASSIGN
      6847>>ASSIGN   6855>>ASSIGN   6856>>ASSIGN   6859>>ASSIGN   6862>>ASSIGN   6867>>ASSIGN   6872>>ASSIGN
      6877>>ASSIGN   6884>>ASSIGN   6887>>ASSIGN   6892>>ASSIGN   6897>>ASSIGN   6902>>ASSIGN   6912>>ASSIGN
      6919>>ASSIGN   6922>>ASSIGN   6922>>ASSIGN   6925>>IF       6947>>ASSIGN   6952>>ASSIGN   6952>>ASSIGN
      6976>>ASSIGN   6979>>ASSIGN   6979>>ASSIGN   6983>>ASSIGN   6983>>ASSIGN   6984>>ASSIGN   6985>>ASSIGN
      6985>>ASSIGN   6986>>ASSIGN   6986>>ASSIGN   6987>>ASSIGN   6987>>ASSIGN   6988>>ASSIGN   6996>>IF
      6998>>ASSIGN   7005>>IF       7005>>IF       7010>>IF       7012>>ASSIGN   7012>>ASSIGN   7013>>ASSIGN
      7013>>ASSIGN   7020>>ASSIGN   7020>>ASSIGN   7023>>IF       7026>>ASSIGN   7026>>ASSIGN   7038>>IF
      7038>>IF       7042>>IF       7045>>ASSIGN   7045>>ASSIGN   7053>>ASSIGN   7053>>ASSIGN   7053>>ASSIGN
      7061>>IF       7063>>IF       7064>>ASSIGN   7064>>ASSIGN   7065>>ASSIGN   7065>>ASSIGN   7067>>IF
      7069>>IF       7070>>IF       7072>>IF       7072>>IF       7082>>ASSIGN   7086>>ASSIGN   7087>>ASSIGN
      7088>>ASSIGN   7088>>ASSIGN   7090>>ASSIGN   7092>>IF       7116>>ASSIGN   7125>>ASSIGN   7125>>ASSIGN
      7127>>IF       7138>>ASSIGN   7138>>ASSIGN   7140>>ASSIGN   7140>>ASSIGN   7142>>ASSIGN   7148>>ASSIGN
      7148>>ASSIGN   7149>>IF       7151>>IF       7153>>ASSIGN   7155>>ASSIGN   7155>>ASSIGN   7156>>ASSIGN
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:111  
      7159>>IF       7161>>ASSIGN   7166>>ASSIGN   7167>>ASSIGN   7167>>ASSIGN   7168>>ASSIGN   7168>>ASSIGN
      7170>>ASSIGN   7182>>ASSIGN   7182>>ASSIGN   7192>>ASSIGN   7192>>ASSIGN   7193>>IF       7195>>ASSIGN
      7195>>ASSIGN   7196>>DOINDEX  7200>>IF       7200>>IF       7200>>IF       7200>>IF       7207>>IF
      7230>>ASSIGN   7230>>ASSIGN   7232>>IF       7233>>IF       7256>>IF       7259>>IF       7261>>ASSIGN
      7262>>ASSIGN   7262>>ASSIGN   7265>>IF       7265>>IF       7268>>IF       7268>>IF       7269>>ASSIGN
      7270>>ASSIGN   7270>>ASSIGN   7292>>IF       7292>>ASSIGN   7323>>IF       7325>>ASSIGN   7326>>ASSIGN
      7326>>ASSIGN   7329>>ASSIGN   7329>>ASSIGN   7332>>IF       7334>>ASSIGN   7334>>ASSIGN   7335>>ASSIGN
      7335>>ASSIGN   7339>>IF       7344>>IF       7347>>IF       7357>>ASSIGN   7363>>IF       7370>>IF
      7371>>ASSIGN   7371>>ASSIGN   7373>>IF       7378>>IF       7380>>ASSIGN   7381>>ASSIGN   7382>>ASSIGN
      7384>>ASSIGN   7385>>ASSIGN   7386>>ASSIGN   7387>>ASSIGN   7388>>ASSIGN   7389>>ASSIGN   7415>>IF
      7417>>ASSIGN   7421>>IF       7421>>IF       7458>>ASSIGN   7474>>IF       7474>>IF       7476>>ASSIGN
      7476>>ASSIGN   7477>>ASSIGN   7480>>ASSIGN   7480>>ASSIGN   7481>>ASSIGN
B$LS$
      5251**DCL      7098>>ASSIGN   7099>>ASSIGN
B$MAP.CTRL
      3141**DCL      7197<<ASSIGN
B$MAP.SCTRL
      3138**DCL      3139--REDEF
B$MISC2$
      5250**DCL      7101>>ASSIGN
B$MLS.DBLS
      5983**DCL      7099>>ASSIGN
B$MLS.MISC2
      6359**DCL      7098<<ASSIGN
B$P.NAME
      1152**DCL      7467--ASSIGN
B$P$
      1182**DCL      7467>>ASSIGN
B$PS0$
      5248**DCL      6842>>ASSIGN
B$PS1$
      5249**DCL      6846>>ASSIGN
B$SS.FPT.CODE
      1218**DCL      6832>>ASSIGN
B$SS.IC
      1223**DCL      6835<<ASSIGN   6835>>ASSIGN   6946>>ASSIGN   7119<<ASSIGN   7170>>ASSIGN   7383>>ASSIGN
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:112  
B$SS.ISR.WSR
      1261**DCL      6833>>ASSIGN   7038>>IF       7057>>ASSIGN   7278>>IF
B$SS.RVA
      1256**DCL      1257--REDEF
B$U.ACP
      1490**DCL      7317>>IF       7465>>IF       7467>>ASSIGN   7474>>IF
B$U.FLG
      1400**DCL      6981>>IF       7136>>IF       7139<<ASSIGN   7139>>ASSIGN   7421>>IF
B$U.FLG.CPIC
      1406**DCL      7377<<ASSIGN
B$U.MISC
      1513**DCL      1514--REDEF
B$ULS.TCB
      5368**DCL      7098>>ASSIGN
B$UPT$
      5252**DCL      7197>>ASSIGN
B$USER.MISC
      1589**DCL      1590--REDEF
B$USERLS$
      5253**DCL      7098>>ASSIGN
B$XCON.CECCB
      5761**DCL      6934>>ASSIGN   7084<<ASSIGN
B$XCON.ECCB
      5766**DCL      7084>>ASSIGN   7089<<ASSIGN
B$XCON.ECSC
      5762**DCL      7085<<ASSIGN
B$XCON.ERR
      5767**DCL      7090<<ASSIGN
B$XCON.ERR.ERR#
      5767**DCL      5767--REDEF
B$XCON.LIMIT
      5764**DCL      7087<<ASSIGN
B$XCON.LIMIT.MEM
      5765**DCL      5765--REDEF
B$XCON.RNST
      5762**DCL      7086<<ASSIGN
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:113  
B$XCON.XCONF
      5763**DCL      7088<<ASSIGN
BYPASS_XCON
      7119**LABEL    7074--GOTO
B_MPT.AS
      5187**DCL      5190--REDEF
B_MPT.ASDESC
      5219**DCL      5223--REDEF
B_MPT.ASDESC$
      5223**DCL      7446>>IF
B_MPT.ECCB
      5202**DCL      5205--REDEF
B_MPT.ECCB$
      5205**DCL      6960>>IF       7077>>IF       7082>>ASSIGN   7089>>ASSIGN   7115>>ASSIGN   7116>>ASSIGN
      7116>>ASSIGN   7119>>ASSIGN
B_MPT.ECCBDESC
      5237**DCL      5241--REDEF
B_MPT.ECCBDESC$
      5241**DCL      6938>>IF       6958>>IF       7094>>IF
B_MPT.LS
      5182**DCL      5185--REDEF
B_MPT.LSDESC
      5213**DCL      5217--REDEF
B_MPT.LSDESC$
      5217**DCL      7099>>ASSIGN
B_MPT.PS
      5192**DCL      5195--REDEF
B_MPT.PSDESC
      5225**DCL      5229--REDEF
B_MPT.PSDESC$
      5229**DCL      6839>>IF
B_MPT.SS
      5177**DCL      5180--REDEF
B_MPT.SS$
      5180**DCL      6832>>ASSIGN   6833>>ASSIGN   6835>>ASSIGN   6835>>ASSIGN   6946>>ASSIGN   7038>>IF
      7057>>ASSIGN   7119>>ASSIGN   7170>>ASSIGN   7278>>IF       7383>>ASSIGN
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:114  
B_MPT.SSDESC
      5207**DCL      5211--REDEF
B_MPT.SSDESC$
      5211**DCL      7455>>IF
B_MPT.TCB
      5197**DCL      5200--REDEF
B_MPT.TCB$
      5200**DCL      6927>>IF       6930>>ASSIGN   6930>>ASSIGN   7079>>ASSIGN   7079>>ASSIGN
B_MPT.TCBDESC
      5231**DCL      5235--REDEF
B_ZIP
      3871**DCL      7375>>IF
CCFPT.CODE
      6595**DCL      6842>>ASSIGN
CLEANUP$
      4982**DCL      7017<<ASSIGN   7018<>CALL
CMD$
      4981**DCL      7016<<ASSIGN   7018<>CALL
CODE
      4967**DCL      6832<<ASSIGN   6852>>DOCASE   6917>>IF       6945>>ASSIGN   7109<<ASSIGN   7110<>CALL
DEBUG$
      4979**DCL      7471<<ASSIGN   7482<>CALL
DELTA_GO
      6941**LABEL    6963--GOTO
DONE
      7211**LABEL    7213--CALLALT  7217--GOTO
EASLABRT
      6787**DCL      7177>>ASSIGN
EASLERR
      6731**DCL      6867>>ASSIGN
EASLXXX
      6763**DCL      6892>>ASSIGN
ECC
      4987**DCL      6943<<ASSIGN   6949<>CALL     7390<>CALL
ECPABRT
      6803**DCL      7226>>ASSIGN
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:115  
ECPERR
      6747**DCL      6877>>ASSIGN
ECPXXX
      6779**DCL      6902>>ASSIGN
EDBABRT
      6795**DCL      7187>>ASSIGN
EDBERR
      6739**DCL      6872>>ASSIGN
EDBXXX
      6771**DCL      6897>>ASSIGN
EEXIT
      6715**DCL      6856>>ASSIGN
EL$GABRT
      4990**DCL      7390<>CALL     7390--CALL
EL$GABRT.CCBUF
      4992**DCL      7389<<ASSIGN
EL$GABRT.ERR
      4990**DCL      7380<<ASSIGN
EL$GABRT.FRS
      4991**DCL      7385<<ASSIGN
EL$GABRT.IC
      4991**DCL      7383<<ASSIGN
EL$GABRT.RNST
      4991**DCL      7384<<ASSIGN
EL$GABRT.STEPCC
      4992**DCL      7386<<ASSIGN
EL$GABRT.SYSID
      4991**DCL      7382<<ASSIGN
EL$GABRT.UNAME
      4992**DCL      7388<<ASSIGN
EL$GABRT.USRERR
      4990**DCL      7381<<ASSIGN
EL$GABRT.XLIMFLG
      4992**DCL      7387<<ASSIGN
ELA$SYSLOG
      4996**DCL-ENT  7390--CALL
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:116  
ERRASF
      6811**DCL      7292>>ASSIGN
ERRPMME
      6723**DCL      6862>>ASSIGN
ERRSSF
      6819**DCL      7458>>ASSIGN
EXIT_YCPMME
      7041**LABEL    7333--GOTO
FTCB.CRFR
      5747**DCL      6930>>ASSIGN   7079>>ASSIGN
FTCB.CRSZ
      5750**DCL      6927>>IF
HFF$NILERASE
      4998**DCL-ENT  6841--CALL     6845--CALL
I
      4969**DCL      7196<<DOINDEX  7197>>ASSIGN   7211<<ASSIGN   7213<>CALL
JERR
      4968**DCL      6837<<ASSIGN   6846<<ASSIGN   6911>>IF       6912>>ASSIGN   7177<<ASSIGN   7187<<ASSIGN
      7226<<ASSIGN   7269>>ASSIGN
JG_SCREECHG.GHOST
      5245**DCL      7396>>IF
JLL$RTN
      4999**DCL-ENT  7365--CALL
JLL_ALT
      7363**LABEL    7365--CALLALT
JLL_CHECK
      7345**LABEL    6989--GOTO     6997--GOTO
JLU$MLINK
      5000**DCL-ENT  7018--CALL
JSA$RUNDSPC
      5001**DCL-ENT  7183--CALL     7204--CALL     7206--CALL     7234--CALL     7235--CALL
JSD$DELUSR
      5002**DCL-ENT  7411--CALL
JSD$ZAPUSR
      5003**DCL-ENT  7412--CALL
JSE$MAIN
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:117  
      7026**LABEL    7023--GOTO
JSE$MAIN1
      7042**LABEL    7256--GOTO     7273--GOTO
JSE_QUIT
      7418**LABEL    7418--GOTO
JSN$FIXSSM
      5005**DCL-ENT  7457--CALL
JSR$RUNDOWN
      5006**DCL-ENT  7410--CALL     7426--CALL
JSS$FIXLASR
      5007**DCL-ENT  7293--CALL
JSS$RUNDSPC
      5008**DCL-ENT  7255--CALL
JST$GETPROG
      5004**DCL-ENT  7482--CALL
JSX$RUNXCON
      5010**DCL-ENT  7319--CALL
JSX$XCONSEE
      5011**DCL-ENT  7143--CALL     7176--CALL     7186--CALL     7225--CALL
JZA$ASAVE
      5009**DCL-ENT  7007--CALL
J_ATILA
      5256**DCL      7015--ASSIGN
J_CPMXAS_D
      5254**DCL      7446>>IF
J_CPMXSS_D
      5255**DCL      7455>>IF
J_SYSTXT
      5257**DCL      7468--ASSIGN
LOGOFFUSR
      7398**LABEL    7376--GOTO     7466--GOTO
NAME$
      4975**DCL      7015<<ASSIGN   7018<>CALL     7467<<ASSIGN   7482<>CALL
NOT_SAVLDT
      7342**LABEL    7327--CALLALT
NOT_SVL
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:118  
      6950**LABEL    6920--GOTO     6928--GOTO     6932--GOTO
NO_DELTA
      7106**LABEL    7093--GOTO
NO_JERR
      6847**LABEL    6845--CALLALT
NO_SCC
      6843**LABEL    6841--CALLALT
NO_XCON
      7142**LABEL    6953--GOTO     7128--GOTO
PASS$
      4977**DCL      7469<<ASSIGN   7482<>CALL
PSID$
      4978**DCL      7470<<ASSIGN   7482<>CALL
QUIT_AFTER_LINK
      7161**LABEL    7160--GOTO
RUNDUSER
      7363**LABEL    7318--GOTO     7354--GOTO
S$CU$
      5460**DCL      6981>>IF       7136>>IF       7139>>ASSIGN   7139>>ASSIGN   7317>>IF       7377>>ASSIGN
      7421>>IF       7465>>IF       7467>>ASSIGN   7474>>IF
SAVLDT_FIN
      7091**LABEL    7348--GOTO
SC_JSEASF
      5027**DCL-ENT  7278--CALL
SC_JSECPSUA
      5028**DCL-ENT  7232--CALL
SC_JSEMING
      5030**DCL-ENT  7398--CALL
SC_JSESSF
      5029**DCL-ENT  7244--CALL
SC_SSUTCB
      5031**DCL-ENT  7132--CALL
SSU$DELTAGO
      5014**DCL-ENT  6949--CALL     7110--CALL
SSV$DORUND
      5015**DCL-ENT  7146--CALL     7181--CALL     7191--CALL     7231--CALL
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:119  
S_CUN
      5258**DCL      7317>>IF       7373>>IF       7395>>IF       7396>>IF
TEMP
      4970**DCL      7195<<ASSIGN   7196>>DOINDEX
TEMPF
      4972**DCL      6934<<ASSIGN   6936>>IF       7082<<ASSIGN   7083<<ASSIGN   7083>>ASSIGN   7084>>ASSIGN
      7142<<ASSIGN   7151>>IF       7153>>ASSIGN   7166>>ASSIGN   7325<<ASSIGN   7330>>IF       7342>>IF
UDB$AUTO
      5016**DCL-ENT  7120--CALL     7350--CALL
UDB$CALCOMP
      5017**DCL-ENT  6913--CALL
UDB$PMMEXIT2
      5018**DCL-ENT  7046--CALL     7263--CALL     7340--CALL     7345--CALL
UDN$BLDASR
      5022**DCL-ENT  7034--CALL     7443--CALL
UDN$MAGIC
      5019**DCL-ENT  6831--CALL     7035--CALL     7442--CALL     7444--CALL
UDN$MAGICLS
      5020**DCL-ENT  7100--CALL
UDN$MAGICSS
      5021**DCL-ENT  7104--CALL
UEP$CLEARONE
      5023**DCL-ENT  7107--CALL     7213--CALL
UEP$MOVETCB
      5024**DCL-ENT  7102--CALL
UEP$SAVLDT
      5025**DCL-ENT  7327--CALL
USRDONE
      7292**LABEL    7061--GOTO     7069--GOTO     7129--GOTO     7172--GOTO
USR_XCONSEE
      7125**LABEL    7081--GOTO
WSR
      4971**DCL      6833<<ASSIGN   6860>>DOCASE   6885>>DOCASE   6915>>IF       7057<<ASSIGN   7058>>DOCASE
      7146<>CALL     7181<>CALL     7191<>CALL     7231<>CALL
XCON$
      4973**DCL      6930<<ASSIGN   6931>>IF       6934>>ASSIGN   7079<<ASSIGN   7080>>IF       7084>>ASSIGN
PL6.E3A0      #001=JSE$EXITS File=JSE$EXITS.:E05TSI                              TUE 07/29/97 23:44 Page:120  
      7084>>ASSIGN   7085>>ASSIGN   7086>>ASSIGN   7087>>ASSIGN   7088>>ASSIGN   7089>>ASSIGN   7090>>ASSIGN
      7091>>ASSIGN   7101<<ASSIGN   7102<>CALL     7106<<ASSIGN   7107<>CALL     7118>>ASSIGN   7209<<ASSIGN
      7213<>CALL     7214>>IF       7216>>ASSIGN
XXXPMME
      6755**DCL      6887>>ASSIGN
ZAPUSER
      7412**LABEL    7410--CALLALT  7426--CALLALT
