VERSION E05

PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:1    
        1        1        /*M* GDM$MEMORY - Debugger routines to display and modify memory              */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*             */
        8        8        /*P* NAME: GDM$MEMORY
        9        9             PURPOSE: This module contains routines to display and modify
       10       10                      lelvel 6 memory for the host resident debugger
       11       11                                                                                      */
       12       12              %EJECT;
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:2    
       13       13        /*F* NAME:    GDM$DISPLAY
       14       14             PURPOSE: This routine performs the display memory function for
       15       15                      the host resient debugger.
       16       16             CALL:    CALL GDM$DISPLAY(SIZE,BUFFER)
       17       17             DESCRIPTION: This routine is called to handle a display
       18       18                          memory request for the host resident debugger.
       19       19                          It varifies that the address to display is valid
       20       20                          and reports an error if not.  The specified address
       21       21                          plus the following 15 words are returned.  At present
       22       22                          the passed buffer is used as an output buffer as well.
       23       23                                                                                      */
       24       24        GDM$DISPLAY: PROC(SIZE,BUFFER);
       25       25                                                /* INCLUDES                           */
       26       26        %INCLUDE LCP_6;
       27      217        %INCLUDE GD_STATIC_DATA;
       28      690        %INCLUDE GH_HARDWARE_M;
       29      788        %INCLUDE KH$CHN;
       30      910        %INCLUDE DD$DITEM;
       12+    1013             %LIST;
       13+    1014    1        DCL SDD$ PTR;
       14+    1015    1        DCL ZITEM$ PTR;
       15+    1016    1        DCL SDD_L6$ PTR;
       16+    1017    1        DCL ZITEM_L6$ PTR;
       31     1591        %INCLUDE G_ROS_M;
       32     1673        %G$ROS;
       33     1717                                                /* SYMREFS                            */
       34     1718    1   DCL G$ROS$ PTR SYMREF;
       35     1719                                                /* ARGUMENTS                          */
       36     1720    1   DCL BUFFER CHAR(SIZE)  ALIGNED;         /* Message template                   */
       37     1721        %GD$MSG(FPTN=GD$MSG,STCLASS=REDEF BUFFER);
       38     1877    1   DCL SIZE UBIN;                          /* Byte size of buffer                */
       39     1878    1   DCL WTTIME UBIN(16) CONSTANT INIT(4);
       40     1879        %FPT_WAIT(FPTN=FPT_WAIT_4,UNITS=WTTIME,UTYPE=SEC,STCLASS=CONSTANT);
       41     1903                                                /* TEMPLATES                          */
       42     1904        %GH_VLD(STCLASS=BASED);
       43     1918    1   DCL MEMORY(0:999) UBIN BASED;
       44     1919        %G$TSA(STCLASS="BASED");
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:3    
       45     2307                                                /* ENTRYS                             */
       46     2308    1   DCL GDI$SEND_RESPONSE ENTRY(2);         /* Routine to send responce to host   */
       47     2309    1   DCL GDI$SEND_ERROR_RESPONSE ENTRY(3);   /* Report error to host               */
       48     2310    1   DCL GDU$SETUP_WINDOW ENTRY(1) ALTRET;
       49     2311    1   DCL GDU$SETUP_WINDOW_USER ENTRY(2) ALTRET;
       50     2312    1   DCL GDM$LETDEC ENTRY(4);
       51     2313    1   DCL GDK$RESADDR ENTRY(10) ALTRET;       /* Convert DD into SEG, DESC#, NOT_IS */
       52     2314        %M$DCB(DCBN=M$DCB,STCLASS=BASED);
       53     2365    1   DCL GDK$MPTR ENTRY(7);                  /* Convert SEG, DESC#, NOT_IS to PTR  */
       54     2366    1   DCL GDM$GRAB16 ENTRY(3) ALTRET;
       55     2367    1   DCL MAP_ADDRESS ENTRY(2) ALTRET;
       56     2368    1   DCL GDK$PUDECBIN ENTRY(2);
       57     2369    1   DCL GDK$PTDECBIN ENTRY(2);
       58     2370    1   DCL GDK$UUDECBIN ENTRY(2);
       59     2371    1   DCL GDK$UTDECBIN ENTRY(2);
       60     2372    1   DCL GDK$ULDECBIN ENTRY(2);
       61     2373    1   DCL GDK$UODECBIN ENTRY(2);
       62     2374                                                /* TEMPS                              */
       63     2375    1   DCL ADR$ PTR;
       64     2376    1   DCL ADR REDEF ADR$ UBIN(32);
       65     2377    1   DCL I SBIN;                             /* Counter                            */
       66     2378    1   DCL RANGE SBIN;                         /* number of words to dump            */
       67     2379    1   DCL TRANGE UBIN;
       68     2380    1   DCL J UBIN;
       69     2381    1   DCL FIRST$ PTR;
       70     2382    1   DCL RSP_DATA$ PTR;                      /* Pointer to data in response MSG    */
       71     2383    1   DCL DD_ADDRESS UBIN (32);
       72     2384    1   DCL UNFID_DCBNUM UBIN;
       73     2385    1   DCL UNFID_DCB$ PTR;
       74     2386    1   DCL B$8CHARS(0:7) BIT(8) BASED ALIGNED;
       75     2387    1   DCL DD_IS_PTR BIT(1) ALIGNED;
       76     2388    1   DCL ARRAY_CUR UBIN;
       77     2389    1   DCL ARRAY_HIGH UBIN;
       78     2390    1   DCL ARRAY_FIRST BIT(1) ALIGNED;
       79     2391    1   DCL DD_BITSIZE UBIN;
       80     2392    1   DCL BITOFF UBIN;
       81     2393    1   DCL 1 B$BITS BASED ALIGNED,
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:4    
       82     2394    1         2 B(0:0) BIT(1) UNAL;
       83     2395    1   DCL 1 B$PTR BASED ALIGNED,
       84     2396    1         2 C UBIN(1) UNAL,
       85     2397    1         2 MBZ UBIN(11) UNAL,
       86     2398    1         2 W UBIN(20) UNAL;
       87     2399    1   DCL TEMP_DATA$ PTR;
       88     2400    1   DCL TEMP_DATA CHAR(256) ALIGNED;
       89     2401    1   DCL TEMP_DATA_(0:127) REDEF TEMP_DATA UBIN ALIGNED;
       90     2402    1   DCL 1 B$BYTES BASED ALIGNED,
       91     2403    1         2 B(0:0) UBIN(8) UNAL;
       92     2404    1   DCL DSIZE UBIN;
       93     2405    1   DCL DD_SEG UBIN WORD;
       94     2406    1   DCL DD_DESC# UBIN WORD;
       95     2407    1   DCL DD_NOT_IS BIT(1) ALIGNED;
       96     2408        /**/
       97     2409    1           RSP_DATA$ = ADDR(GD$MSG.DISPMEM.DATA(0));
       98     2410    1           ADR$=GD$MSG.DISPMEM.ADR$;
       99     2411
      100     2412    1           GOTO COMMON_DISPLAY;
      101     2413              %EJECT;
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:5    
      102     2414        /*F* NAME:    GDM$DISPLAY_D
      103     2415             PURPOSE: This routine performs the display memory function for
      104     2416                      the host resident debugger.
      105     2417             CALL:    CALL GDM$DISPLAY_D(SIZE,BUFFER)
      106     2418             DESCRIPTION: It works just like GDM$DISPLAY, except does things
      107     2419                          DELTA-style.
      108     2420                                                                                      */
      109     2421    1   GDM$DISPLAY_D: ENTRY(SIZE,BUFFER);
      110     2422
      111     2423    1           DD_BITSIZE = 16 * 16;
      112     2424    1           BITOFF = 0;
      113     2425    1           DSIZE=16;                  /* how much stuff we'll usually send back  */
      114     2426    1           IF GD$MSG.DISPMEM_D.DD_EXISTS
      115     2427    1           THEN
      116     2428    2           DO;
      117     2429    2              GD_DATA.MISC.DESC$ = ADDR(GD$MSG.DISPMEM_D.DATA_DESC);
      118     2430    2              ARRAY_FIRST = GD$MSG.DISPMEM_D.ARRAY_FIRST;
      119     2431    2              ARRAY_CUR = GD$MSG.DISPMEM_D.ARRAY_CUR;
      120     2432    2              CALL GDK$RESADDR (ARRAY_FIRST,ARRAY_CUR,ARRAY_HIGH,
      121     2433    2                DD_SEG,DD_DESC#,DD_ADDRESS,DD_BITSIZE,
      122     2434    3                BITOFF,DD_NOT_IS,DD_IS_PTR) WHENALTRETURN DO;
      123     2435    3                 CALL GDI$SEND_ERROR_RESPONSE(SIZE,BUFFER,GD_DATA.GD.ERROR);
      124     2436    3                 RETURN;
      125     2437    3                 END /* WHENALTRETURN */;
      126     2438        /* If something already answered the host, there must have been an error
      127     2439        so we don't want to answer again.                                        */
      128     2440    2              IF GD_DATA.GD.ANSWERED THEN RETURN;
      129     2441    3              IF ARRAY_FIRST THEN DO;
      130     2442    3                 GD$MSG.DISPMEM_D.ARRAY_HIGH = ARRAY_HIGH;
      131     2443    3                 GD$MSG.DISPMEM_D.ARRAY_CUR = ARRAY_CUR;
      132     2444    3                 END;
      133     2445    3              IF GD$MSG.DISPMEM_D.EXPR_OP THEN DO;
      134     2446    3                 DD_BITSIZE = 32;
      135     2447    3                 BITOFF = 0;
      136     2448    3                 END;
      137     2449    2              GD$MSG.DISPMEM_D.IS_PTR = DD_IS_PTR;
      138     2450    2              GD$MSG.DISPMEM_D.ADDRESS = DD_ADDRESS;
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:6    
      139     2451    2              GD$MSG.DISPMEM_D.SEG = DD_SEG;
      140     2452    2              GD$MSG.DISPMEM_D.DESC# = DD_DESC#;
      141     2453    2              GD$MSG.DISPMEM_D.NOT_IS = DD_NOT_IS;
      142     2454    2              END;
      143     2455    1           ELSE
      144     2456    2           DO;
      145     2457    2              DD_ADDRESS = GD$MSG.DISPMEM_D.ADDRESS;
      146     2458    2              DD_SEG = GD$MSG.DISPMEM_D.SEG;
      147     2459    2              DD_DESC# = GD$MSG.DISPMEM_D.DESC#;
      148     2460    2              DD_NOT_IS = GD$MSG.DISPMEM_D.NOT_IS;
      149     2461    2              DD_BITSIZE = 16 * 16;
      150     2462    2              END;
      151     2463    1           IF GD$MSG.DISPMEM_D.EVALCMD THEN GOTO MSG;
      152     2464    1           CALL GDK$MPTR (ADR$,DD_ADDRESS,DD_SEG,DD_DESC#,DD_NOT_IS,DD_IS_PTR,DSIZE);
      153     2465    1           TEMP_DATA$ = ADDR(TEMP_DATA);
      154     2466    1           RSP_DATA$ = ADDR(GD$MSG.DISPMEM_D.DATA(0));
      155     2467    2           IF DD_BITSIZE < 16 * 16 + 1 OR GD$MSG.DISPMEM_D.DUMPCMD THEN DO;
      156     2468    2              IF GD$MSG.DISPMEM_D.DUMPCMD THEN DSIZE = 16;
      157     2469    2              IF DD_BITSIZE > 256 THEN DD_BITSIZE=256;
      158     2470    3              CALL GDM$GRAB16(TEMP_DATA$,ADR$,DSIZE) WHENALTRETURN DO;
      159     2471    3                 IF DSIZE < (DD_BITSIZE + BITOFF + 15) / 16
      160     2472    3                   OR %GH@VLD.STATUS < 0 THEN
      161     2473    3                    GOTO ERR_RSP;
      162     2474    3                 END /* WHENALTRETURN */;
      163     2475    3              IF BITOFF ~= 0 THEN DO;
      164     2476    4                 DO I = BITOFF TO BITOFF + DD_BITSIZE - 1;
      165     2477    4                    RSP_DATA$->B$BITS.B(I-BITOFF) = TEMP_DATA$->B$BITS.B(I);
      166     2478    4                    END;
      167     2479    3                 END;
      168     2480    3              ELSE DO I = 0 TO DSIZE - 1;
      169     2481    3                 GD$MSG.DISPMEM_D.DATA(I) = TEMP_DATA_(I);
      170     2482    3                 END;
      171     2483    2              END;
      172     2484    2           ELSE DO;
      173     2485    2              GD$MSG.DISPMEM_D.CONTINUE = '1'B;
      174     2486    2              GD$MSG.FNC = %GD#RSPDISPMEM;
      175     2487    2              SIZE = %GD#RSPDISPMEMSIZE;
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:7    
      176     2488    2              CALL GDI$SEND_RESPONSE(SIZE,BUFFER);
      177     2489    2              GD_DATA.GD.ANSWERED = %G_NO#;
      178     2490    2              IF DD_BITSIZE > 255*8
      179     2491    2              THEN DD_BITSIZE = 255*8;
      180     2492    2              CALL GDU$SETUP_WINDOW (ADR$) ALTRET (ERR_RSP);
      181     2493    3              DO I = (BITOFF/8) TO (DD_BITSIZE/8 + BITOFF/8 - 1);
      182     2494    3                 GD$MSG.DISPCHAR(I-BITOFF/8) = ADR$->B$BYTES.B(I);
      183     2495    3                 END;
      184     2496    2              GD$MSG.CHAR# = DD_BITSIZE / 8;
      185     2497    2              SIZE = GD$MSG.CHAR# +2;
      186     2498    2              GD$MSG.FNC = %GD#RSPDISPCHAR;
      187     2499    2              CALL M$WAIT(FPT_WAIT_4);
      188     2500    2              CALL GDI$SEND_RESPONSE(SIZE,BUFFER);
      189     2501    2              RETURN;
      190     2502    2              END;
      191     2503    1   MSG:
      192     2504    1           IF GD$MSG.DISPMEM_D.REAL_SIZE THEN
      193     2505    1              GD$MSG.DISPMEM_D.SIZE = DD_BITSIZE;
      194     2506    1           GD$MSG.DISPMEM_D.DATA_SIZE = DSIZE;
      195     2507    1           GD$MSG.FNC = %GD#RSPDISPMEM;
      196     2508    1           SIZE = %GD#RSPDISPMEMSIZE;
      197     2509    1           CALL GDI$SEND_RESPONSE(SIZE,BUFFER);
      198     2510    1           RETURN;
      199     2511        %EJECT;
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:8    
      200     2512    1   COMMON_DISPLAY: ;
      201     2513        /*
      202     2514          At present we build the responce in the passed buffer.  Setup
      203     2515          the function, sub function and size
      204     2516                                                                                      */
      205     2517    1           SIZE=%GD#RSPDISPMEMSIZE;
      206     2518    1           GD$MSG.FNC=%GD#RSPDISPMEM;
      207     2519        /*
      208     2520          Move the data into the message
      209     2521                                                                                      */
      210     2522    1           CALL GDM$GRAB16(RSP_DATA$,ADR$,DSIZE) ALTRET(ERR_RSP);
      211     2523    1           IF GD_DATA.GD.MODE = %GD#MODE_USER_DELTA THEN
      212     2524    1              GD$MSG.DISPMEM_D.DATA_SIZE = DSIZE;
      213     2525        /*
      214     2526          Send the responce and return
      215     2527                                                                                      */
      216     2528    1           CALL GDI$SEND_RESPONSE(SIZE,BUFFER);
      217     2529    1           RETURN;
      218     2530        /*
      219     2531          Bad address passed
      220     2532                                                                                      */
      221     2533    1   ERR_RSP:;
      222     2534    1           CALL GDI$SEND_ERROR_RESPONSE(SIZE,BUFFER,%GD#RSPBADADR);
      223     2535    1           RETURN;
      224     2536              %EJECT;
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:9    
      225     2537        /*F*  NAME:    GDM$MODIFY
      226     2538              PURPOSE: This routine is called to handle a modify memory
      227     2539                        request for the host resident debugger
      228     2540              CALL:     CALL GDM$MODIFY(SIZE,BUFFER)
      229     2541              DESCRIPTION: This routine is called to handle a modify
      230     2542                           memory request.  It is passed a structure which contains
      231     2543                           3 sets of flags and data.  The data may contain up
      232     2544                           to 16 modify requests.  Each modify request contains
      233     2545                           an address, plus an old value and a cell for new
      234     2546                           values.  The three arrays of flags are parrellel
      235     2547                           to the modify requests.  The MM flags are sent by the
      236     2548                           host to indicate that before a modify is done,
      237     2549                           thee old contents passed must match the current
      238     2550                           memory contents.  The NM flags are set
      239     2551                           by us to indicate that No Match was found and the
      240     2552                           SO flags are set by us to indicate Store Ok.
      241     2553                                                                                      */
      242     2554    1   GDM$MODIFY: ENTRY (SIZE,BUFFER);
      243     2555              %EJECT;
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:10   
      244     2556    1           GD$MSG.MODMEM.NM='0'B;
      245     2557        /*
      246     2558          Modify the addresses to point to the ASDT we need to use
      247     2559                                                                                      */
      248     2560    2           DO I=0 TO GD$MSG.MODMEM.MODCNT-1;
      249     2561    2              ADR$=GD$MSG.MODMEM.MODS.ADR$(I);
      250     2562    2              CALL GDU$SETUP_WINDOW (ADR$) ALTRET (ERR_RSP);
      251     2563        /*
      252     2564          Verify that each MODS block that has the MM flag set has an
      253     2565          old value that matches the current value in level 6 memory.
      254     2566          If a discrepency is found, set the NM (no match) flag on
      255     2567          each one that does not match.  If any errors are detected
      256     2568          no cells will be modified.
      257     2569                                                                                      */
      258     2570    2              IF GD$MSG.MODMEM.MM.FLGS(I) THEN
      259     2571    2                 IF GD$MSG.MODMEM.MODS.OLD(I)~=ADR$->MEMORY(0) THEN
      260     2572    2                    GD$MSG.MODMEM.NM.FLGS(I)=%G_ON#;
      261     2573    2              GD$MSG.MODMEM.MODS.OLD(I)=ADR$->MEMORY(0);
      262     2574    2              END;
      263     2575        /*
      264     2576          If there were no errors, do the modifys
      265     2577                                                                                      */
      266     2578    1           IF NOT GD$MSG.MODMEM.NM THEN
      267     2579    2           DO;
      268     2580    2              GD$MSG.MODMEM.SO=%G_ON#;
      269     2581    3              DO I=0 TO GD$MSG.MODMEM.MODCNT-1;
      270     2582    3                 ADR$=GD$MSG.MODMEM.MODS.ADR$(I);
      271     2583    3                 CALL GDU$SETUP_WINDOW (ADR$);
      272     2584    3                 ADR$->MEMORY(0)=GD$MSG.MODMEM.MODS.NEW(I);
      273     2585    3                 END;
      274     2586    2              END;
      275     2587        /*
      276     2588          If there was an error detected, indicate we didnt do the stores
      277     2589                                                                                      */
      278     2590    1           ELSE
      279     2591    1              GD$MSG.MODMEM.SO='0000'X;
      280     2592        /*
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:11   
      281     2593          Setup and send the responce.  Note that the size has not
      282     2594          changed
      283     2595                                                                                      */
      284     2596    1           GD$MSG.FNC=%GD#RSPMODMEM;
      285     2597    1           CALL GDI$SEND_RESPONSE(SIZE,BUFFER);
      286     2598    1           RETURN;
      287     2599        %EJECT;
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:12   
      288     2600        /*F*  NAME:    GDM$MODIFY_D
      289     2601              PURPOSE: This routine is called to handle a modify memory
      290     2602                       request for the host resident debugger
      291     2603              CALL:     CALL GDM$MODIFY_D(SIZE,BUFFER)
      292     2604              DESCRIPTION: It works just like GDM$MODIFY, except does things
      293     2605                           DELTA-style.
      294     2606                                                                                      */
      295     2607    1   GDM$MODIFY_D: ENTRY (SIZE,BUFFER);
      296     2608        /**/
      297     2609        /*  Move addressing information into scratch storage with suitable allignment */
      298     2610        /*  for parameters.                                                           */
      299     2611        /**/
      300     2612    1           DD_ADDRESS = GD$MSG.MODMEM_D.ADDRESS;
      301     2613    1           DD_SEG = GD$MSG.MODMEM_D.SEG;
      302     2614    1           DD_DESC# = GD$MSG.MODMEM_D.DESC#;
      303     2615    1           DD_NOT_IS = GD$MSG.MODMEM_D.NOT_IS;
      304     2616        /**/
      305     2617        /*  Make a pointer to the first address to be modified.                       */
      306     2618        /**/
      307     2619    1           CALL GDK$MPTR (FIRST$,DD_ADDRESS,DD_SEG,DD_DESC#,DD_NOT_IS,'0'B,DSIZE);
      308     2620        /**/
      309     2621        /*  Map onto first address.                                                   */
      310     2622        /**/
      311     2623    1           ADR$ = FIRST$;
      312     2624    1           CALL MAP_ADDRESS(ADR$,RANGE) ALTRET(ERR_RSP);
      313     2625        /**/
      314     2626        /*  Check old data.                                                           */
      315     2627        /**/
      316     2628    1           IF RANGE > GD$MSG.MODMEM_D.MODCNT - 1 THEN
      317     2629    1              RANGE = GD$MSG.MODMEM_D.MODCNT - 1;
      318     2630    2           DO I=0 TO RANGE;
      319     2631    3              IF GD$MSG.MODMEM_D.MM.FLGS(I) THEN DO;
      320     2632    3                 IF GD$MSG.MODMEM_D.MODS.OLD(I) ~= ADR$ -> MEMORY(I)
      321     2633    3                 THEN
      322     2634    3                    GOTO NO_MATCH;
      323     2635    3                 IF I = GD$MSG.MODMEM_D.MODCNT-1
      324     2636    3                 THEN
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:13   
      325     2637    3                    GOTO OLD_OK;
      326     2638    3                 END;
      327     2639    2              END;
      328     2640    1           RANGE = RANGE+1;
      329     2641    1           ADR$ = PINCRW(ADR$,RANGE);
      330     2642    1           IF RANGE < GD$MSG.MODMEM_D.MODCNT
      331     2643    1           THEN
      332     2644    1              CALL GDU$SETUP_WINDOW (ADR$);
      333     2645    1           IF %GH@VLD.STATUS>=0
      334     2646    1           THEN
      335     2647    2           DO WHILE I < GD$MSG.MODMEM_D.MODCNT;
      336     2648    3              IF GD$MSG.MODMEM_D.MM.FLGS(I) THEN DO;
      337     2649    3                 IF GD$MSG.MODMEM_D.MODS.OLD(I) ~= ADR$ -> MEMORY(I)
      338     2650    3                 THEN
      339     2651    3                    GOTO NO_MATCH;
      340     2652    3                 IF I = GD$MSG.MODMEM_D.MODCNT-1
      341     2653    3                 THEN
      342     2654    3                    GOTO OLD_OK;
      343     2655    3                 END;
      344     2656    2              I = I+1;
      345     2657    2              END;
      346     2658    1   OLD_OK: ;
      347     2659        %EJECT;
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:14   
      348     2660        /**/
      349     2661        /*  Modify them locations!                                                    */
      350     2662        /**/
      351     2663    1           ADR$ = FIRST$;
      352     2664    1           CALL MAP_ADDRESS(ADR$,RANGE) ALTRET(ERR_RSP);
      353     2665    2           IF %GH@VLD.STATUS ~= %G_VLD_STATUS_ALL# THEN DO;
      354     2666    2              CALL GDI$SEND_ERROR_RESPONSE(SIZE,BUFFER,%GD#RSPNOWRITE);
      355     2667    2              RETURN;
      356     2668    2              END;
      357     2669    2           DO I=0 TO RANGE;
      358     2670    2              ADR$ -> MEMORY(I) = GD$MSG.MODMEM_D.MODS.NEW(I);
      359     2671    2              IF I = GD$MSG.MODMEM_D.MODCNT-1
      360     2672    2              THEN
      361     2673    2                 GOTO MOD_DONE;
      362     2674    2              END;
      363     2675    1           RANGE = RANGE+1;
      364     2676    1           ADR$ = PINCRW(ADR$,RANGE);
      365     2677    1           IF RANGE < 16
      366     2678    1           THEN
      367     2679    1              CALL GDU$SETUP_WINDOW (ADR$);
      368     2680    1           IF %GH@VLD.STATUS>=0
      369     2681    1           THEN
      370     2682    2           DO WHILE I<16;
      371     2683    2              ADR$ -> MEMORY(I-RANGE) = GD$MSG.MODMEM_D.MODS.NEW(I);
      372     2684    2              IF I = GD$MSG.MODMEM_D.MODCNT-1
      373     2685    2              THEN
      374     2686    2                 GOTO MOD_DONE;
      375     2687    2              I = I+1;
      376     2688    2              END;
      377     2689    1   MOD_DONE: ;
      378     2690        %EJECT;
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:15   
      379     2691        /**/
      380     2692        /*  It all worked OK.                                                         */
      381     2693        /**/
      382     2694    1           GD$MSG.MODMEM_D.SO = '1'B;
      383     2695    1           GD$MSG.FNC = %GD#RSPMODMEM;
      384     2696    1           CALL GDI$SEND_RESPONSE(SIZE,BUFFER);
      385     2697    1           RETURN;
      386     2698        /**/
      387     2699    1   NO_MATCH: ;
      388     2700    1           GD$MSG.MODMEM_D.SO = '0'B;
      389     2701    1           GD$MSG.FNC = %GD#RSPMODMEM;
      390     2702    1           CALL GDI$SEND_RESPONSE(SIZE,BUFFER);
      391     2703    1           RETURN;
      392     2704        /**/
      393     2705        %EJECT;
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:16   
      394     2706    1   GDM$LETMEM_D: ENTRY(SIZE,BUFFER);
      395     2707
      396     2708    1           DD_BITSIZE = 16 * 16;
      397     2709    1           BITOFF = 0;
      398     2710    1           GD_DATA.MISC.DESC$ = ADDR(GD$MSG.LETMEM_D.DATA_DESC);
      399     2711    1           CALL GDK$RESADDR (ARRAY_FIRST,ARRAY_CUR,ARRAY_HIGH,
      400     2712    1             DD_SEG,DD_DESC#,DD_ADDRESS,DD_BITSIZE,
      401     2713    2             BITOFF,DD_NOT_IS,DD_IS_PTR) WHENALTRETURN DO;
      402     2714    2              CALL GDI$SEND_ERROR_RESPONSE(SIZE,BUFFER,%GD#RSPBADADR);
      403     2715    2              RETURN;
      404     2716    2              END /* WHENALTRETURN */;
      405     2717    1           CALL GDK$MPTR (ADR$,DD_ADDRESS,DD_SEG,DD_DESC#,DD_NOT_IS,DD_IS_PTR,DSIZE);
      406     2718    1           RANGE = (DD_BITSIZE + BITOFF + 15) / 16;
      407     2719    1           I = 0;
      408     2720    2           IF RANGE > 16 THEN DO;
      409     2721    3              DO WHILE RANGE > 0;
      410     2722    3                 IF RANGE > 16 THEN
      411     2723    3                    TRANGE = 16;
      412     2724    3                 ELSE TRANGE = RANGE;
      413     2725    4                 CALL MAP_ADDRESS(PINCRW(ADR$,16*I),TRANGE) WHENALTRETURN DO;
      414     2726    4                    CALL GDI$SEND_ERROR_RESPONSE(SIZE,BUFFER,%GD#RSPBADADR);
      415     2727    4                    RETURN;
      416     2728    4                    END;
      417     2729    3                 I = I + 1;
      418     2730    3                 RANGE = RANGE - 16;
      419     2731    3                 END;
      420     2732    2              END;
      421     2733    2           ELSE DO;
      422     2734    3              CALL MAP_ADDRESS(ADR$,RANGE) WHENALTRETURN DO;
      423     2735    3                 CALL GDI$SEND_ERROR_RESPONSE(SIZE,BUFFER,%GD#RSPBADADR);
      424     2736    3                 RETURN;
      425     2737    3                 END;
      426     2738    2              END;
      427     2739    2           IF %GH@VLD.STATUS ~= %G_VLD_STATUS_ALL# THEN DO;
      428     2740    2              CALL GDI$SEND_ERROR_RESPONSE(SIZE,BUFFER,%GD#RSPNOWRITE);
      429     2741    2              RETURN;
      430     2742    2              END;
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:17   
      431     2743    2           DO CASE(GD$MSG.LETMEM_D.TYPE);
      432     2744    2            CASE(%BIT_FMT,%OBIT_FMT,%X_FMT);
      433     2745    3              DO I = BITOFF TO DD_BITSIZE + BITOFF - 1;
      434     2746    3                 ADR$->B$BITS.B(I) = ADDR(GD$MSG.LETMEM_D.VALUE.BITS.TRING)->B$BITS.B(I
              2746                          -BITOFF);
      435     2747    3                 END;
      436     2748    2            CASE(%UINT_FMT,%SINT_FMT);
      437     2749    3              DO I = DD_BITSIZE + BITOFF - 1 DOWNTO BITOFF;
      438     2750    3                 ADR$->B$BITS.B(I) =
      439     2751    3                   ADDR(GD$MSG.LETMEM_D.VALUE.CONS.TANT)->B$BITS.B(I-BITOFF+32-
              2751                            DD_BITSIZE);
      440     2752    3                 END;
      441     2753    2            CASE(%CHAR_FMT);
      442     2754    3              IF MOD(BITOFF,8) ~= 0 THEN DO;
      443     2755    3                 CALL GDI$SEND_ERROR_RESPONSE(SIZE,BUFFER,%GD#RSPTYPMISMATCH);
      444     2756    3                 RETURN;
      445     2757    3                 END;
      446     2758    3              DO I = BITOFF/8 TO GD$MSG.LETMEM_D.VALUE.SIZE;
      447     2759    3                 ADR$->B$BYTES.B(I) =
      448     2760    3                   GD$MSG.LETMEM_D.VALUE.TEXT(I-BITOFF/8);
      449     2761    3                 IF I = ((DD_BITSIZE + BITOFF) / 8) - 1 THEN
      450     2762    3                    GOTO LETMEM_DONE;
      451     2763    3                 END;
      452     2764    3              DO J = I TO ((DD_BITSIZE + BITOFF) / 8) - 1;
      453     2765    3                 ADR$->B$BYTES.B(J) = 32;  /* Fill with spaces                   */
      454     2766    3                 END;
      455     2767    2            CASE(%PTR_FMT);
      456     2768    2              ADR$->B$PTR.W = GD$MSG.LETMEM_D.VALUE.P.W;
      457     2769    2              ADR$->B$PTR.MBZ = 0;
      458     2770    2              ADR$->B$PTR.C = GD$MSG.LETMEM_D.VALUE.P.C;
      459     2771    2            CASE(%PUP_FMT);
      460     2772    2              J=DD_BITSIZE;                /* Size in natural units              */
      461     2773    2              CALL GDM$LETDEC(ADR$,GD_DATA.MISC.DESC$,J,BITOFF);
      462     2774    2            CASE(ELSE);
      463     2775    2              CALL GDI$SEND_ERROR_RESPONSE(SIZE,BUFFER,%GD#RSPUNSUPRT);
      464     2776    2              RETURN;
      465     2777    2            END;
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:18   
      466     2778    1   LETMEM_DONE:
      467     2779    1           GD$MSG.FNC = %GD#RSPLETMEM;
      468     2780    1           CALL GDI$SEND_RESPONSE(SIZE,BUFFER);
      469     2781    1           RETURN;
      470     2782        /**/
      471     2783        %EJECT;
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:19   
      472     2784    1   GDM$UNFID: ENTRY(SIZE,BUFFER);
      473     2785        /**/
      474     2786    2           IF GD$MSG.UNFID.NUMDCBS = 0 THEN DO; /* If we haven't already,        */
      475     2787    2              GD$MSG.UNFID.NUMDCBS = G$ROS$->G$ROS.NUMDCBS;
      476     2788    2              UNFID_DCB$=DCBADDR(GD$MSG.UNFID.NUMDCBS);
      477     2789    3              DO WHILE UNFID_DCB$ = ADDR(NIL);
              2789                       /* find the highest non-empty DCB slot */
      478     2790    3                 GD$MSG.UNFID.NUMDCBS = GD$MSG.UNFID.NUMDCBS - 1;
      479     2791    3                 UNFID_DCB$ = DCBADDR(GD$MSG.UNFID.NUMDCBS);
      480     2792    3                 END;
      481     2793    2              END;
      482     2794    2           IF GD$MSG.UNFID.K13 THEN DO;
      483     2795    2              UNFID_DCBNUM = GD$MSG.UNFID.DCB#;
      484     2796    2              END;
      485     2797    2           ELSE DO;
      486     2798    2              UNFID_DCBNUM = G$ROS$->G$ROS.NUMDCBS+1;
      487     2799    3              DO I=0 TO G$ROS$->G$ROS.NUMDCBS;
      488     2800    3                 UNFID_DCB$ = DCBADDR(I);
      489     2801    3                 IF UNFID_DCB$~=ADDR(NIL) THEN
      490     2802    4                    IF UNFID_DCB$->M$DCB.DCBNAME = GD$MSG.UNFID.DCBNAME THEN DO;
      491     2803    4                       UNFID_DCBNUM = I;
      492     2804    4                       GOTO LOOP_EXIT;
      493     2805    4                       END;
      494     2806    3                 END;
      495     2807    2              END;
      496     2808    1   LOOP_EXIT:;
      497     2809    2           IF UNFID_DCBNUM > G$ROS$->G$ROS.NUMDCBS THEN DO;
      498     2810    2              SIZE=%GD#RSPUNFIDSIZE;
      499     2811    2              GD$MSG.FNC = %GD#RSPNOSUCHDCB;
      500     2812    2              CALL GDI$SEND_RESPONSE(SIZE,BUFFER);
      501     2813    2              RETURN;
      502     2814    2              END;
      503     2815    1           UNFID_DCB$ = DCBADDR(UNFID_DCBNUM);
      504     2816    2           IF UNFID_DCB$ = ADDR(NIL) THEN DO;
      505     2817    2              SIZE=%GD#RSPUNFIDSIZE;
      506     2818    2              GD$MSG.FNC = %GD#RSPDCBEMPTY;
      507     2819    2              CALL GDI$SEND_RESPONSE(SIZE,BUFFER);
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:20   
      508     2820    2              RETURN;
      509     2821    2              END;
      510     2822    2           ELSE DO;
      511     2823    2              GD$MSG.UNFID.FUN# = UNFID_DCB$->M$DCB.FUN;
      512     2824    2              GD$MSG.UNFID.ORG# = UNFID_DCB$->M$DCB.ORG;
      513     2825    2              GD$MSG.UNFID.DCB# = UNFID_DCBNUM;
      514     2826    2              SIZE = %GD#RSPUNFIDSIZE;
      515     2827    2              GD$MSG.UNFID.RES = UNFID_DCB$->M$DCB.RESNT;
      516     2828    3              IF UNFID_DCB$->M$DCB.FCI THEN DO;
      517     2829    3                 IF UNFID_DCB$->M$DCB.FCD THEN
      518     2830    3                    GD$MSG.UNFID.OPEN = '1'B;
      519     2831    3                 ELSE GD$MSG.UNFID.WAS_OPEN = '1'B;
      520     2832    3                 END;
      521     2833    2              ELSE GD$MSG.UNFID.NEVER_OPEN = '1'B;
      522     2834    2              END;
      523     2835    1           GD$MSG.UNFID.DCBNAME = UNFID_DCB$->M$DCB.DCBNAME;
      524     2836    1           GD$MSG.UNFID.NAME = UNFID_DCB$->M$DCB.NAME;
      525     2837    1           GD$MSG.UNFID.ACCT = PINCRW(UNFID_DCB$,
      526     2838    1             POFFW(ADDR(UNFID_DCB$->M$DCB.ACCT),
      527     2839    1             UNFID_DCB$))->B$8CHARS;
      528     2840    1           GD$MSG.FNC = %GD#RSPUNFID;
      529     2841    1           CALL GDI$SEND_RESPONSE(SIZE,BUFFER);
      530     2842    1           RETURN;
      531     2843    1   GDM$TSA: ENTRY(SIZE,BUFFER);
      532     2844
      533     2845    1           ADR$ = GD$MSG.TSA.ADDRESS$;
      534     2846    1           IF ADR = BITBIN('10000'X) THEN  /* We want the current TSA            */
      535     2847    1              ADR$ = GD_DATA.DELTAINFO.TSA$;
      536     2848    1           ELSE
      537     2849    1              ADR$ = GD$MSG.TSA.ADDRESS$;
      538     2850
      539     2851    1           CALL GDU$SETUP_WINDOW_USER(ADR$,GD_DATA.GD.USERNO) ALTRET(BADADR);
      540     2852    1           ADDR(GD$MSG.TSA.TSAL$)->G$TSA = ADR$->G$TSA;
      541     2853    1           SIZE=%GD#RSPTSASIZE;
      542     2854    1           GD$MSG.FNC = %GD#RSPTSA;
      543     2855    1           CALL GDI$SEND_RESPONSE(SIZE,BUFFER);
      544     2856    1           RETURN;
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:21   
      545     2857    1   BADADR:
      546     2858    1           CALL GDI$SEND_ERROR_RESPONSE(SIZE,BUFFER,%GD#RSPBADADR);
      547     2859    1           RETURN;
      548     2860        /**/
      549     2861    1   END GDM$DISPLAY;
      550     2862        %EOD;

PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:22   
--  Include file information  --

   G_ROS_M.:E05TOU  is referenced.
   DD_SRTN_C.:E05TOU  is referenced.
   DD_ACODE_C.:E05TOU  is referenced.
   DD_ICODE_C.:E05TOU  is referenced.
   DD$DITEM.:E05TOU  cannot be made into a system file and is referenced.
   KH$CHN.:E05TOU  is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
   GD$MSG_M.:E05TOU  is referenced.
   GDA_EQUS_E.:E05TOU  is referenced.
   GD_EQUS_E.:E05TOU  is referenced.
   GD_DATA_M.:E05TOU  is referenced.
   GD_STATIC_DATA.:E05TOU  cannot be made into a system file and is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GDM$DISPLAY.

   Procedure GDM$DISPLAY requires 2147 words for executable code.
   Procedure GDM$DISPLAY requires 192 words of local(AUTO) storage.

PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:23   

 Object Unit name= GDM$DISPLAY                                File name= GDM$MEMORY.:E05TOU
 UTS= JUL 29 '97 21:28:04.48 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS     14      E  GDM$DISPLAY
    1   Proc  even  none  2147    863  GDM$DISPLAY

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        2  GDM$DISPLAY
     1     11                  yes      Std        2  GDM$DISPLAY_D
     1    275                  yes      Std        2  GDM$MODIFY
     1    305                  yes      Std        2  GDM$MODIFY_D
     1    494                  yes      Std        2  GDM$LETMEM_D
     1    6E7                  yes      Std        2  GDM$UNFID
     1    7FE                  yes      Std        2  GDM$TSA
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:24   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std      10 GDK$RESADDR
         yes           Std       3 GDI$SEND_ERROR_RESPONSE
         yes           Std       7 GDK$MPTR
 yes     yes           Std       1 GDU$SETUP_WINDOW
 yes     yes           Std       2 GDU$SETUP_WINDOW_USER
 yes     yes           Std       3 GDM$GRAB16
         yes           Std       2 GDI$SEND_RESPONSE
 yes     yes           Std       2 MAP_ADDRESS
         yes           Std       4 GDM$LETDEC
                       nStd      0 X6A_AUTO_2
                       nStd      0 X6A_ARET
                       nStd      0 X6B_BLR
                       nStd      0 X6C_ACMZ
                       nStd      0 X6C_ALRZ

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     GD$DELTA_DATA$                        G$ROS$                           r    G$ROS$
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:25   


        1        1        /*M* GDM$MEMORY - Debugger routines to display and modify memory              */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*             */
        8        8        /*P* NAME: GDM$MEMORY
        9        9             PURPOSE: This module contains routines to display and modify
       10       10                      lelvel 6 memory for the host resident debugger
       11       11                                                                                      */
       12       12              %EJECT;
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:26   
       13       13        /*F* NAME:    GDM$DISPLAY
       14       14             PURPOSE: This routine performs the display memory function for
       15       15                      the host resient debugger.
       16       16             CALL:    CALL GDM$DISPLAY(SIZE,BUFFER)
       17       17             DESCRIPTION: This routine is called to handle a display
       18       18                          memory request for the host resident debugger.
       19       19                          It varifies that the address to display is valid
       20       20                          and reports an error if not.  The specified address
       21       21                          plus the following 15 words are returned.  At present
       22       22                          the passed buffer is used as an output buffer as well.
       23       23                                                                                      */
       24       24        GDM$DISPLAY: PROC(SIZE,BUFFER);

     24   1 000000  D380 0000 0000  xent GDM$DISPLAY     LNJ,B5   X6A_AUTO_2
          1 000003       00C0 0002                       DC       192,2

       25       25                                                /* INCLUDES                           */
       26       26        %INCLUDE LCP_6;
       27      217        %INCLUDE GD_STATIC_DATA;
       28      690        %INCLUDE GH_HARDWARE_M;
       29      788        %INCLUDE KH$CHN;
       30      910        %INCLUDE DD$DITEM;
       12+    1013             %LIST;
       13+    1014    1        DCL SDD$ PTR;
       14+    1015    1        DCL ZITEM$ PTR;
       15+    1016    1        DCL SDD_L6$ PTR;
       16+    1017    1        DCL ZITEM_L6$ PTR;
       31     1591        %INCLUDE G_ROS_M;
       32     1673        %G$ROS;
       33     1717                                                /* SYMREFS                            */
       34     1718    1   DCL G$ROS$ PTR SYMREF;
       35     1719                                                /* ARGUMENTS                          */
       36     1720    1   DCL BUFFER CHAR(SIZE)  ALIGNED;         /* Message template                   */
       37     1721        %GD$MSG(FPTN=GD$MSG,STCLASS=REDEF BUFFER);
       38     1877    1   DCL SIZE UBIN;                          /* Byte size of buffer                */
       39     1878    1   DCL WTTIME UBIN(16) CONSTANT INIT(4);
       40     1879        %FPT_WAIT(FPTN=FPT_WAIT_4,UNITS=WTTIME,UTYPE=SEC,STCLASS=CONSTANT);
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:27   
       41     1903                                                /* TEMPLATES                          */
       42     1904        %GH_VLD(STCLASS=BASED);
       43     1918    1   DCL MEMORY(0:999) UBIN BASED;
       44     1919        %G$TSA(STCLASS="BASED");
       45     2307                                                /* ENTRYS                             */
       46     2308    1   DCL GDI$SEND_RESPONSE ENTRY(2);         /* Routine to send responce to host   */
       47     2309    1   DCL GDI$SEND_ERROR_RESPONSE ENTRY(3);   /* Report error to host               */
       48     2310    1   DCL GDU$SETUP_WINDOW ENTRY(1) ALTRET;
       49     2311    1   DCL GDU$SETUP_WINDOW_USER ENTRY(2) ALTRET;
       50     2312    1   DCL GDM$LETDEC ENTRY(4);
       51     2313    1   DCL GDK$RESADDR ENTRY(10) ALTRET;       /* Convert DD into SEG, DESC#, NOT_IS */
       52     2314        %M$DCB(DCBN=M$DCB,STCLASS=BASED);
       53     2365    1   DCL GDK$MPTR ENTRY(7);                  /* Convert SEG, DESC#, NOT_IS to PTR  */
       54     2366    1   DCL GDM$GRAB16 ENTRY(3) ALTRET;
       55     2367    1   DCL MAP_ADDRESS ENTRY(2) ALTRET;
       56     2368    1   DCL GDK$PUDECBIN ENTRY(2);
       57     2369    1   DCL GDK$PTDECBIN ENTRY(2);
       58     2370    1   DCL GDK$UUDECBIN ENTRY(2);
       59     2371    1   DCL GDK$UTDECBIN ENTRY(2);
       60     2372    1   DCL GDK$ULDECBIN ENTRY(2);
       61     2373    1   DCL GDK$UODECBIN ENTRY(2);
       62     2374                                                /* TEMPS                              */
       63     2375    1   DCL ADR$ PTR;
       64     2376    1   DCL ADR REDEF ADR$ UBIN(32);
       65     2377    1   DCL I SBIN;                             /* Counter                            */
       66     2378    1   DCL RANGE SBIN;                         /* number of words to dump            */
       67     2379    1   DCL TRANGE UBIN;
       68     2380    1   DCL J UBIN;
       69     2381    1   DCL FIRST$ PTR;
       70     2382    1   DCL RSP_DATA$ PTR;                      /* Pointer to data in response MSG    */
       71     2383    1   DCL DD_ADDRESS UBIN (32);
       72     2384    1   DCL UNFID_DCBNUM UBIN;
       73     2385    1   DCL UNFID_DCB$ PTR;
       74     2386    1   DCL B$8CHARS(0:7) BIT(8) BASED ALIGNED;
       75     2387    1   DCL DD_IS_PTR BIT(1) ALIGNED;
       76     2388    1   DCL ARRAY_CUR UBIN;
       77     2389    1   DCL ARRAY_HIGH UBIN;
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:28   
       78     2390    1   DCL ARRAY_FIRST BIT(1) ALIGNED;
       79     2391    1   DCL DD_BITSIZE UBIN;
       80     2392    1   DCL BITOFF UBIN;
       81     2393    1   DCL 1 B$BITS BASED ALIGNED,
       82     2394    1         2 B(0:0) BIT(1) UNAL;
       83     2395    1   DCL 1 B$PTR BASED ALIGNED,
       84     2396    1         2 C UBIN(1) UNAL,
       85     2397    1         2 MBZ UBIN(11) UNAL,
       86     2398    1         2 W UBIN(20) UNAL;
       87     2399    1   DCL TEMP_DATA$ PTR;
       88     2400    1   DCL TEMP_DATA CHAR(256) ALIGNED;
       89     2401    1   DCL TEMP_DATA_(0:127) REDEF TEMP_DATA UBIN ALIGNED;
       90     2402    1   DCL 1 B$BYTES BASED ALIGNED,
       91     2403    1         2 B(0:0) UBIN(8) UNAL;
       92     2404    1   DCL DSIZE UBIN;
       93     2405    1   DCL DD_SEG UBIN WORD;
       94     2406    1   DCL DD_DESC# UBIN WORD;
       95     2407    1   DCL DD_NOT_IS BIT(1) ALIGNED;
       96     2408        /**/
       97     2409    1           RSP_DATA$ = ADDR(GD$MSG.DISPMEM.DATA(0));

   2409   1 000005  ECC7 0006                            LDB,B6   @BUFFER,AUTO
          1 000007  DBC6 0003                            LAB,B5   3,B6
          1 000009  DFC7 0018                            STB,B5   RSP_DATA$,AUTO

       98     2410    1           ADR$=GD$MSG.DISPMEM.ADR$;

   2410   1 00000B  CCC6 0001                            LDB,B4   1,B6
          1 00000D  CFC7 0010                            STB,B4   ADR$,AUTO

       99     2411
      100     2412    1           GOTO COMMON_DISPLAY;

   2412   1 00000F  0F81 021A                            B        s:2508,PREL

      101     2413              %EJECT;
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:29   
      102     2414        /*F* NAME:    GDM$DISPLAY_D
      103     2415             PURPOSE: This routine performs the display memory function for
      104     2416                      the host resident debugger.
      105     2417             CALL:    CALL GDM$DISPLAY_D(SIZE,BUFFER)
      106     2418             DESCRIPTION: It works just like GDM$DISPLAY, except does things
      107     2419                          DELTA-style.
      108     2420                                                                                      */
      109     2421    1   GDM$DISPLAY_D: ENTRY(SIZE,BUFFER);

   2421   1 000011  D380 0000 0000  xent GDM$DISPLAY_D   LNJ,B5   X6A_AUTO_2
          1 000014       00C0 0002                       DC       192,2

      110     2422
      111     2423    1           DD_BITSIZE = 16 * 16;

   2423   1 000016  E870 0100                            LDR,R6   256,IMO
          1 000018  EF47 0023                            STR,R6   DD_BITSIZE,AUTO

      112     2424    1           BITOFF = 0;

   2424   1 00001A  8747 0024                            CL       BITOFF,AUTO

      113     2425    1           DSIZE=16;                  /* how much stuff we'll usually send back  */

   2425   1 00001C  5C10                                 LDV,R5   16
          1 00001D  DF47 00A7                            STR,R5   DSIZE,AUTO

      114     2426    1           IF GD$MSG.DISPMEM_D.DD_EXISTS

   2426   1 00001F  ECC7 0006                            LDB,B6   @BUFFER,AUTO
          1 000021  89C6 0001                            CMZ      1,B6
          1 000023  0881 00A1                            BAGE     s:2457,PREL

      115     2427    1           THEN
      116     2428    2           DO;

      117     2429    2              GD_DATA.MISC.DESC$ = ADDR(GD$MSG.DISPMEM_D.DATA_DESC);
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:30   

   2429   1 000025  DBC6 0018                            LAB,B5   24,B6
          1 000027  CC80 0000 0000  xsym                 LDB,B4   GD$DELTA_DATA$
          1 00002A  DFC4 0184                            STB,B5   388,B4

      118     2430    2              ARRAY_FIRST = GD$MSG.DISPMEM_D.ARRAY_FIRST;

   2430   1 00002C  C846 0001                            LDR,R4   1,B6
          1 00002E  4005                                 SOL,R4   5
          1 00002F  C570 8000                            AND,R4   -32768,IMO
          1 000031  CF47 0022                            STR,R4   ARRAY_FIRST,AUTO

      119     2431    2              ARRAY_CUR = GD$MSG.DISPMEM_D.ARRAY_CUR;

   2431   1 000033  C846 0002                            LDR,R4   2,B6
          1 000035  CF47 0020                            STR,R4   ARRAY_CUR,AUTO

      120     2432    2              CALL GDK$RESADDR (ARRAY_FIRST,ARRAY_CUR,ARRAY_HIGH,

   2432   1 000037  BBC7 001F                            LAB,B3   DD_IS_PTR,AUTO
          1 000039  BFC7 00BE                            STB,B3   DD_NOT_IS+20,AUTO
          1 00003B  ABC7 00AA                            LAB,B2   DD_NOT_IS,AUTO
          1 00003D  AFC7 00BC                            STB,B2   DD_NOT_IS+18,AUTO
          1 00003F  9BC7 0024                            LAB,B1   BITOFF,AUTO
          1 000041  9FC7 00BA                            STB,B1   DD_NOT_IS+16,AUTO
          1 000043  EBC7 0023                            LAB,B6   DD_BITSIZE,AUTO
          1 000045  EFC7 00B8                            STB,B6   DD_NOT_IS+14,AUTO
          1 000047  EBC7 001A                            LAB,B6   DD_ADDRESS,AUTO
          1 000049  EFC7 00B6                            STB,B6   DD_NOT_IS+12,AUTO
          1 00004B  EBC7 00A9                            LAB,B6   DD_DESC#,AUTO
          1 00004D  EFC7 00B4                            STB,B6   DD_NOT_IS+10,AUTO
          1 00004F  EBC7 00A8                            LAB,B6   DD_SEG,AUTO
          1 000051  EFC7 00B2                            STB,B6   DD_NOT_IS+8,AUTO
          1 000053  EBC7 0021                            LAB,B6   ARRAY_HIGH,AUTO
          1 000055  EFC7 00B0                            STB,B6   DD_NOT_IS+6,AUTO
          1 000057  EBC7 0020                            LAB,B6   ARRAY_CUR,AUTO
          1 000059  EFC7 00AE                            STB,B6   DD_NOT_IS+4,AUTO
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:31   
          1 00005B  EBC7 0022                            LAB,B6   ARRAY_FIRST,AUTO
          1 00005D  EFC7 00AC                            STB,B6   DD_NOT_IS+2,AUTO
          1 00005F  BBC7 00AC                            LAB,B3   DD_NOT_IS+2,AUTO
          1 000061  CBF0 0A00                            LAB,B4   2560,IMO
          1 000063  E380 0000 0000  xent                 LNJ,B6   GDK$RESADDR
          1 000066       0003                            DC       s:2435,PREL
          1 000067  0F81 001B                            B        s:2440,PREL

      121     2433    2                DD_SEG,DD_DESC#,DD_ADDRESS,DD_BITSIZE,
      122     2434    3                BITOFF,DD_NOT_IS,DD_IS_PTR) WHENALTRETURN DO;

      123     2435    3                 CALL GDI$SEND_ERROR_RESPONSE(SIZE,BUFFER,GD_DATA.GD.ERROR);

   2435   1 000069  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 00006C  DBC6 0174                            LAB,B5   372,B6
          1 00006E  DFC7 00B0                            STB,B5   DD_NOT_IS+6,AUTO
          1 000070  CCC7 0006                            LDB,B4   @BUFFER,AUTO
          1 000072  CFC7 00AE                            STB,B4   DD_NOT_IS+4,AUTO
          1 000074  BCC7 0004                            LDB,B3   @SIZE,AUTO
          1 000076  BFC7 00AC                            STB,B3   DD_NOT_IS+2,AUTO
          1 000078  BBC7 00AC                            LAB,B3   DD_NOT_IS+2,AUTO
          1 00007A  CBF0 0300                            LAB,B4   768,IMO
          1 00007C  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_ERROR_RESPONSE
          1 00007F       0001                            DC       s:2436,PREL

      124     2436    3                 RETURN;

   2436   1 000080  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      125     2437    3                 END /* WHENALTRETURN */;
      126     2438        /* If something already answered the host, there must have been an error
      127     2439        so we don't want to answer again.                                        */
      128     2440    2              IF GD_DATA.GD.ANSWERED THEN RETURN;

   2440   1 000083  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 000086  82C6 014C                            LB,'0002'X        332,B6
          1 000088       0002
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:32   
          1 000089  0581 0004                            BBF      s:2441,PREL

   2440   1 00008B  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      129     2441    3              IF ARRAY_FIRST THEN DO;

   2441   1 00008E  89C7 0022                            CMZ      ARRAY_FIRST,AUTO
          1 000090  0881 000B                            BAGE     s:2445,PREL

      130     2442    3                 GD$MSG.DISPMEM_D.ARRAY_HIGH = ARRAY_HIGH;

   2442   1 000092  DCC7 0006                            LDB,B5   @BUFFER,AUTO
          1 000094  E847 0021                            LDR,R6   ARRAY_HIGH,AUTO
          1 000096  EF45 0003                            STR,R6   3,B5

      131     2443    3                 GD$MSG.DISPMEM_D.ARRAY_CUR = ARRAY_CUR;

   2443   1 000098  D847 0020                            LDR,R5   ARRAY_CUR,AUTO
          1 00009A  DF45 0002                            STR,R5   2,B5

      132     2444    3                 END;

      133     2445    3              IF GD$MSG.DISPMEM_D.EXPR_OP THEN DO;

   2445   1 00009C  DCC7 0006                            LDB,B5   @BUFFER,AUTO
          1 00009E  82C5 0001                            LB,'4000'X        1,B5
          1 0000A0       4000
          1 0000A1  0581 0006                            BBF      s:2449,PREL

      134     2446    3                 DD_BITSIZE = 32;

   2446   1 0000A3  6C20                                 LDV,R6   32
          1 0000A4  EF47 0023                            STR,R6   DD_BITSIZE,AUTO

      135     2447    3                 BITOFF = 0;

   2447   1 0000A6  8747 0024                            CL       BITOFF,AUTO
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:33   

      136     2448    3                 END;

      137     2449    2              GD$MSG.DISPMEM_D.IS_PTR = DD_IS_PTR;

   2449   1 0000A8  E847 001F                            LDR,R6   DD_IS_PTR,AUTO
          1 0000AA  6043                                 SOR,R6   3
          1 0000AB  EAC5 0001                            SRM,R6,'1000'X    1,B5
          1 0000AD       1000

      138     2450    2              GD$MSG.DISPMEM_D.ADDRESS = DD_ADDRESS;

   2450   1 0000AE  8CC7 001A                            LDI      DD_ADDRESS,AUTO
          1 0000B0  8D45 0004                            SDI      4,B5

      139     2451    2              GD$MSG.DISPMEM_D.SEG = DD_SEG;

   2451   1 0000B2  D847 00A8                            LDR,R5   DD_SEG,AUTO
          1 0000B4  5008                                 SOL,R5   8
          1 0000B5  DAC5 0006                            SRM,R5,'7F00'X    6,B5
          1 0000B7       7F00

      140     2452    2              GD$MSG.DISPMEM_D.DESC# = DD_DESC#;

   2452   1 0000B8  D847 00A9                            LDR,R5   DD_DESC#,AUTO
          1 0000BA  DAC5 0006                            SRM,R5,'00FF'X    6,B5
          1 0000BC       00FF

      141     2453    2              GD$MSG.DISPMEM_D.NOT_IS = DD_NOT_IS;

   2453   1 0000BD  D847 00AA                            LDR,R5   DD_NOT_IS,AUTO
          1 0000BF  5042                                 SOR,R5   2
          1 0000C0  DAC5 0001                            SRM,R5,'2000'X    1,B5
          1 0000C2       2000

      142     2454    2              END;

PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:34   
   2454   1 0000C3  0F81 001D                            B        s:2463,PREL

      143     2455    1           ELSE
      144     2456    2           DO;

      145     2457    2              DD_ADDRESS = GD$MSG.DISPMEM_D.ADDRESS;

   2457   1 0000C5  8CC6 0004                            LDI      4,B6
          1 0000C7  8D47 001A                            SDI      DD_ADDRESS,AUTO

      146     2458    2              DD_SEG = GD$MSG.DISPMEM_D.SEG;

   2458   1 0000C9  C846 0006                            LDR,R4   6,B6
          1 0000CB  4048                                 SOR,R4   8
          1 0000CC  C570 007F                            AND,R4   127,IMO
          1 0000CE  CF47 00A8                            STR,R4   DD_SEG,AUTO

      147     2459    2              DD_DESC# = GD$MSG.DISPMEM_D.DESC#;

   2459   1 0000D0  B846 0006                            LDR,R3   6,B6
          1 0000D2  B570 00FF                            AND,R3   255,IMO
          1 0000D4  BF47 00A9                            STR,R3   DD_DESC#,AUTO

      148     2460    2              DD_NOT_IS = GD$MSG.DISPMEM_D.NOT_IS;

   2460   1 0000D6  A846 0001                            LDR,R2   1,B6
          1 0000D8  2002                                 SOL,R2   2
          1 0000D9  A570 8000                            AND,R2   -32768,IMO
          1 0000DB  AF47 00AA                            STR,R2   DD_NOT_IS,AUTO

      149     2461    2              DD_BITSIZE = 16 * 16;

   2461   1 0000DD  A870 0100                            LDR,R2   256,IMO
          1 0000DF  AF47 0023                            STR,R2   DD_BITSIZE,AUTO

      150     2462    2              END;

PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:35   
      151     2463    1           IF GD$MSG.DISPMEM_D.EVALCMD THEN GOTO MSG;

   2463   1 0000E1  ECC7 0006                            LDB,B6   @BUFFER,AUTO
          1 0000E3  89C6 0006                            CMZ      6,B6
          1 0000E5  0801 0123                            BAL      s:2504,PREL

      152     2464    1           CALL GDK$MPTR (ADR$,DD_ADDRESS,DD_SEG,DD_DESC#,DD_NOT_IS,DD_IS_PTR,DSIZE);

   2464   1 0000E7  DBC7 00A7                            LAB,B5   DSIZE,AUTO
          1 0000E9  DFC7 00B8                            STB,B5   DD_NOT_IS+14,AUTO
          1 0000EB  CBC7 001F                            LAB,B4   DD_IS_PTR,AUTO
          1 0000ED  CFC7 00B6                            STB,B4   DD_NOT_IS+12,AUTO
          1 0000EF  BBC7 00AA                            LAB,B3   DD_NOT_IS,AUTO
          1 0000F1  BFC7 00B4                            STB,B3   DD_NOT_IS+10,AUTO
          1 0000F3  ABC7 00A9                            LAB,B2   DD_DESC#,AUTO
          1 0000F5  AFC7 00B2                            STB,B2   DD_NOT_IS+8,AUTO
          1 0000F7  9BC7 00A8                            LAB,B1   DD_SEG,AUTO
          1 0000F9  9FC7 00B0                            STB,B1   DD_NOT_IS+6,AUTO
          1 0000FB  EBC7 001A                            LAB,B6   DD_ADDRESS,AUTO
          1 0000FD  EFC7 00AE                            STB,B6   DD_NOT_IS+4,AUTO
          1 0000FF  EBC7 0010                            LAB,B6   ADR$,AUTO
          1 000101  EFC7 00AC                            STB,B6   DD_NOT_IS+2,AUTO
          1 000103  BBC7 00AC                            LAB,B3   DD_NOT_IS+2,AUTO
          1 000105  CBF0 0700                            LAB,B4   1792,IMO
          1 000107  E380 0000 0000  xent                 LNJ,B6   GDK$MPTR
          1 00010A       0001                            DC       s:2465,PREL

      153     2465    1           TEMP_DATA$ = ADDR(TEMP_DATA);

   2465   1 00010B  EBC7 0027                            LAB,B6   TEMP_DATA,AUTO
          1 00010D  EFC7 0025                            STB,B6   TEMP_DATA$,AUTO

      154     2466    1           RSP_DATA$ = ADDR(GD$MSG.DISPMEM_D.DATA(0));

   2466   1 00010F  DCC7 0006                            LDB,B5   @BUFFER,AUTO
          1 000111  CBC5 0008                            LAB,B4   8,B5
          1 000113  CFC7 0018                            STB,B4   RSP_DATA$,AUTO
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:36   

      155     2467    2           IF DD_BITSIZE < 16 * 16 + 1 OR GD$MSG.DISPMEM_D.DUMPCMD THEN DO;

   2467   1 000115  E847 0023                            LDR,R6   DD_BITSIZE,AUTO
          1 000117  E970 0101                            CMR,R6   257,IMO
          1 000119  0201 0006                            BL       s:2468,PREL
          1 00011B  82C5 0001                            LB,'0100'X        1,B5
          1 00011D       0100
          1 00011E  0581 0077                            BBF      s:2485,PREL

      156     2468    2              IF GD$MSG.DISPMEM_D.DUMPCMD THEN DSIZE = 16;

   2468   1 000120  82C5 0001                            LB,'0100'X        1,B5
   2468   1 000122       0100
          1 000123  0581 0004                            BBF      s:2469,PREL

   2468   1 000125  5C10                                 LDV,R5   16
          1 000126  DF47 00A7                            STR,R5   DSIZE,AUTO

      157     2469    2              IF DD_BITSIZE > 256 THEN DD_BITSIZE=256;

   2469   1 000128  E970 0100                            CMR,R6   256,IMO
          1 00012A  0381 0005                            BLE      s:2470,PREL

   2469   1 00012C  E870 0100                            LDR,R6   256,IMO
          1 00012E  EF47 0023                            STR,R6   DD_BITSIZE,AUTO

      158     2470    3              CALL GDM$GRAB16(TEMP_DATA$,ADR$,DSIZE) WHENALTRETURN DO;

   2470   1 000130  BBC7 00A7                            LAB,B3   DSIZE,AUTO
          1 000132  BFC7 00B0                            STB,B3   DD_NOT_IS+6,AUTO
          1 000134  ABC7 0010                            LAB,B2   ADR$,AUTO
          1 000136  AFC7 00AE                            STB,B2   DD_NOT_IS+4,AUTO
          1 000138  9BC7 0025                            LAB,B1   TEMP_DATA$,AUTO
          1 00013A  9FC7 00AC                            STB,B1   DD_NOT_IS+2,AUTO
          1 00013C  BBC7 00AC                            LAB,B3   DD_NOT_IS+2,AUTO
          1 00013E  CBF0 0300                            LAB,B4   768,IMO
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:37   
          1 000140  E380 0000 0000  xent                 LNJ,B6   GDM$GRAB16
          1 000143       0003                            DC       s:2471,PREL
          1 000144  0F81 0012                            B        s:2475,PREL

      159     2471    3                 IF DSIZE < (DD_BITSIZE + BITOFF + 15) / 16

   2471   1 000146  E847 0023                            LDR,R6   DD_BITSIZE,AUTO
          1 000148  EA47 0024                            ADD,R6   BITOFF,AUTO
          1 00014A  6E0F                                 ADV,R6   15
          1 00014B  6044                                 SOR,R6   4
          1 00014C  E947 00A7                            CMR,R6   DSIZE,AUTO
          1 00014E  0301 010F                            BG       s:2523,PREL
          1 000150  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 000153  E846 0173                            LDR,R6   371,B6
          1 000155  6801 0108                            BLZ,R6   s:2523,PREL

      160     2472    3                   OR %GH@VLD.STATUS < 0 THEN
      161     2473    3                    GOTO ERR_RSP;
      162     2474    3                 END /* WHENALTRETURN */;

      163     2475    3              IF BITOFF ~= 0 THEN DO;

   2475   1 000157  E847 0024                            LDR,R6   BITOFF,AUTO
          1 000159  6901 0024                            BEZ,R6   s:2480,PREL

      164     2476    4                 DO I = BITOFF TO BITOFF + DD_BITSIZE - 1;

   2476   1 00015B  EF47 0012                            STR,R6   I,AUTO
          1 00015D  0F81 0016                            B        s:2478+2,PREL

      165     2477    4                    RSP_DATA$->B$BITS.B(I-BITOFF) = TEMP_DATA$->B$BITS.B(I);

   2477   1 00015F  E847 0012                            LDR,R6   I,AUTO
          1 000161  E247 0024                            SUB,R6   BITOFF,AUTO
          1 000163  EF47 00AC                            STR,R6   DD_NOT_IS+2,AUTO
          1 000165  ACC7 0025                            LDB,B2   TEMP_DATA$,AUTO
          1 000167  A847 0012                            LDR,R2   I,AUTO
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:38   
          1 000169  6C01                                 LDV,R6   1
          1 00016A  BCC7 0018                            LDB,B3   RSP_DATA$,AUTO
          1 00016C  B847 00AC                            LDR,R3   DD_NOT_IS+2,AUTO
          1 00016E  7C01                                 LDV,R7   1
          1 00016F  D380 0000 0000  xent                 LNJ,B5   X6B_BLR

      166     2478    4                    END;

   2478   1 000172  8AC7 0012                            INC      I,AUTO
          1 000174  E847 0024                            LDR,R6   BITOFF,AUTO
          1 000176  EA47 0023                            ADD,R6   DD_BITSIZE,AUTO
          1 000178  6867                                 BLZ,R6   s:2477,SPREL
          1 000179  E947 0012                            CMR,R6   I,AUTO
          1 00017B  0A64                                 BAG      s:2477,SPREL

      167     2479    3                 END;

   2479   1 00017C  0F81 008C                            B        s:2504,PREL

      168     2480    3              ELSE DO I = 0 TO DSIZE - 1;

   2480   1 00017E  8747 0012                            CL       I,AUTO
          1 000180  0F81 000D                            B        s:2482+2,PREL

      169     2481    3                 GD$MSG.DISPMEM_D.DATA(I) = TEMP_DATA_(I);

   2481   1 000182  ECC7 0006                            LDB,B6   @BUFFER,AUTO
          1 000184  B847 0012                            LDR,R3   I,AUTO
          1 000186  3E08                                 ADV,R3   8
          1 000187  A847 0012                            LDR,R2   I,AUTO
          1 000189  2E27                                 ADV,R2   39
          1 00018A  E827                                 LDR,R6   ,AUTO,R2
          1 00018B  EF36                                 STR,R6   ,B6,R3

      170     2482    3                 END;

   2482   1 00018C  8AC7 0012                            INC      I,AUTO
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:39   
          1 00018E  E847 0012                            LDR,R6   I,AUTO
          1 000190  6872                                 BLZ,R6   s:2481,SPREL
          1 000191  E947 00A7                            CMR,R6   DSIZE,AUTO
          1 000193  026F                                 BL       s:2481,SPREL

      171     2483    2              END;

   2483   1 000194  0F81 0074                            B        s:2504,PREL

      172     2484    2           ELSE DO;

      173     2485    2              GD$MSG.DISPMEM_D.CONTINUE = '1'B;

   2485   1 000196  8945 0001                            LBT,'0200'X       1,B5
   2485   1 000198       0200

      174     2486    2              GD$MSG.FNC = %GD#RSPDISPMEM;

   2486   1 000199  6C21                                 LDV,R6   33
          1 00019A  E785                                 STH,R6   ,B5

      175     2487    2              SIZE = %GD#RSPDISPMEMSIZE;

   2487   1 00019B  ECC7 0004                            LDB,B6   @SIZE,AUTO
          1 00019D  5C30                                 LDV,R5   48
          1 00019E  DF06                                 STR,R5   ,B6

      176     2488    2              CALL GDI$SEND_RESPONSE(SIZE,BUFFER);

   2488   1 00019F  BBC7 0004                            LAB,B3   @SIZE,AUTO
          1 0001A1  CBF0 0200                            LAB,B4   512,IMO
          1 0001A3  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_RESPONSE
          1 0001A6       0001                            DC       s:2489,PREL

      177     2489    2              GD_DATA.GD.ANSWERED = %G_NO#;

   2489   1 0001A7  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:40   
          1 0001AA  8846 014C                            LBF,'0002'X       332,B6
          1 0001AC       0002

      178     2490    2              IF DD_BITSIZE > 255*8

   2490   1 0001AD  E847 0023                            LDR,R6   DD_BITSIZE,AUTO
          1 0001AF  E970 07F8                            CMR,R6   2040,IMO
          1 0001B1  0381 0005                            BLE      s:2492,PREL

      179     2491    2              THEN DD_BITSIZE = 255*8;

   2491   1 0001B3  E870 07F8                            LDR,R6   2040,IMO
          1 0001B5  EF47 0023                            STR,R6   DD_BITSIZE,AUTO

      180     2492    2              CALL GDU$SETUP_WINDOW (ADR$) ALTRET (ERR_RSP);

   2492   1 0001B7  DBC7 0010                            LAB,B5   ADR$,AUTO
          1 0001B9  DFC7 00AC                            STB,B5   DD_NOT_IS+2,AUTO
          1 0001BB  BBC7 00AC                            LAB,B3   DD_NOT_IS+2,AUTO
          1 0001BD  CBF0 0100                            LAB,B4   256,IMO
          1 0001BF  E380 0000 0000  xent                 LNJ,B6   GDU$SETUP_WINDOW
          1 0001C2       009C                            DC       s:2523,PREL

      181     2493    3              DO I = (BITOFF/8) TO (DD_BITSIZE/8 + BITOFF/8 - 1);

   2493   1 0001C3  E847 0024                            LDR,R6   BITOFF,AUTO
          1 0001C5  6043                                 SOR,R6   3
          1 0001C6  EF47 0012                            STR,R6   I,AUTO
          1 0001C8  0F81 0013                            B        s:2495+2,PREL

      182     2494    3                 GD$MSG.DISPCHAR(I-BITOFF/8) = ADR$->B$BYTES.B(I);

   2494   1 0001CA  E847 0024                            LDR,R6   BITOFF,AUTO
          1 0001CC  6043                                 SOR,R6   3
          1 0001CD  E247 0012                            SUB,R6   I,AUTO
          1 0001CF  ECC7 0010                            LDB,B6   ADR$,AUTO
          1 0001D1  B847 0012                            LDR,R3   I,AUTO
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:41   
          1 0001D3  D2B6                                 LLH,R5   ,B6,R3
          1 0001D4  DCC7 0006                            LDB,B5   @BUFFER,AUTO
          1 0001D6  A856                                 LDR,R2   R6
          1 0001D7  8252                                 NEG      R2
          1 0001D8  2E02                                 ADV,R2   2
          1 0001D9  D7A5                                 STH,R5   ,B5,R2

      183     2495    3                 END;

   2495   1 0001DA  8AC7 0012                            INC      I,AUTO
          1 0001DC  E847 0023                            LDR,R6   DD_BITSIZE,AUTO
          1 0001DE  6043                                 SOR,R6   3
          1 0001DF  D847 0024                            LDR,R5   BITOFF,AUTO
          1 0001E1  5043                                 SOR,R5   3
          1 0001E2  EA55                                 ADD,R6   R5
          1 0001E3  6867                                 BLZ,R6   s:2494,SPREL
          1 0001E4  E947 0012                            CMR,R6   I,AUTO
          1 0001E6  0A64                                 BAG      s:2494,SPREL

      184     2496    2              GD$MSG.CHAR# = DD_BITSIZE / 8;

   2496   1 0001E7  E847 0023                            LDR,R6   DD_BITSIZE,AUTO
          1 0001E9  6043                                 SOR,R6   3
          1 0001EA  ECC7 0006                            LDB,B6   @BUFFER,AUTO
          1 0001EC  EA86                                 SRM,R6,'00FF'X    ,B6
          1 0001ED       00FF

      185     2497    2              SIZE = GD$MSG.CHAR# +2;

   2497   1 0001EE  DCC7 0004                            LDB,B5   @SIZE,AUTO
          1 0001F0  E806                                 LDR,R6   ,B6
          1 0001F1  E570 00FF                            AND,R6   255,IMO
          1 0001F3  6E02                                 ADV,R6   2
          1 0001F4  EF05                                 STR,R6   ,B5

      186     2498    2              GD$MSG.FNC = %GD#RSPDISPCHAR;

PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:42   
   2498   1 0001F5  5C27                                 LDV,R5   39
          1 0001F6  D786                                 STH,R5   ,B6

      187     2499    2              CALL M$WAIT(FPT_WAIT_4);

   2499   1 0001F7  BB80 0000 0001  00                   LAB,B3   FPT_WAIT_4
          1 0001FA  B870 0CC5                            LDR,R3   3269,IMO
          1 0001FC  0001                                 MCL
          1 0001FD       0000                            DC       s:2499+6,PREL

      188     2500    2              CALL GDI$SEND_RESPONSE(SIZE,BUFFER);

   2500   1 0001FE  BBC7 0004                            LAB,B3   @SIZE,AUTO
          1 000200  CBF0 0200                            LAB,B4   512,IMO
          1 000202  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_RESPONSE
          1 000205       0001                            DC       s:2501,PREL

      189     2501    2              RETURN;

   2501   1 000206  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      190     2502    2              END;
      191     2503    1   MSG:
      192     2504    1           IF GD$MSG.DISPMEM_D.REAL_SIZE THEN

   2504   1 000209  ECC7 0006            MSG             LDB,B6   @BUFFER,AUTO
          1 00020B  82C6 0001                            LB,'0800'X        1,B6
          1 00020D       0800
          1 00020E  0581 0005                            BBF      s:2506,PREL

      193     2505    1              GD$MSG.DISPMEM_D.SIZE = DD_BITSIZE;

   2505   1 000210  E847 0023                            LDR,R6   DD_BITSIZE,AUTO
          1 000212  EF46 0007                            STR,R6   7,B6

      194     2506    1           GD$MSG.DISPMEM_D.DATA_SIZE = DSIZE;

PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:43   
   2506   1 000214  E847 00A7                            LDR,R6   DSIZE,AUTO
          1 000216  EAC6 0001                            SRM,R6,'00FF'X    1,B6
          1 000218       00FF

      195     2507    1           GD$MSG.FNC = %GD#RSPDISPMEM;

   2507   1 000219  6C21                                 LDV,R6   33
          1 00021A  E786                                 STH,R6   ,B6

      196     2508    1           SIZE = %GD#RSPDISPMEMSIZE;

   2508   1 00021B  DCC7 0004                            LDB,B5   @SIZE,AUTO
          1 00021D  5C30                                 LDV,R5   48
          1 00021E  DF05                                 STR,R5   ,B5

      197     2509    1           CALL GDI$SEND_RESPONSE(SIZE,BUFFER);

   2509   1 00021F  BBC7 0004                            LAB,B3   @SIZE,AUTO
          1 000221  CBF0 0200                            LAB,B4   512,IMO
          1 000223  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_RESPONSE
          1 000226       0001                            DC       s:2510,PREL

      198     2510    1           RETURN;

   2510   1 000227  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

   2508   1                              COMMON_DISPLAY  null
      199     2511        %EJECT;
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:44   
      200     2512    1   COMMON_DISPLAY: ;
      201     2513        /*
      202     2514          At present we build the responce in the passed buffer.  Setup
      203     2515          the function, sub function and size
      204     2516                                                                                      */
      205     2517    1           SIZE=%GD#RSPDISPMEMSIZE;

   2517   1 00022A  BCC7 0004            COMMON_DISPLAY  LDB,B3   @SIZE,AUTO
          1 00022C  6C30                                 LDV,R6   48
          1 00022D  EF03                                 STR,R6   ,B3

      206     2518    1           GD$MSG.FNC=%GD#RSPDISPMEM;

   2518   1 00022E  5C21                                 LDV,R5   33
          1 00022F  D786                                 STH,R5   ,B6

      207     2519        /*
      208     2520          Move the data into the message
      209     2521                                                                                      */
      210     2522    1           CALL GDM$GRAB16(RSP_DATA$,ADR$,DSIZE) ALTRET(ERR_RSP);

   2522   1 000230  DBC7 00A7                            LAB,B5   DSIZE,AUTO
          1 000232  DFC7 00B0                            STB,B5   DD_NOT_IS+6,AUTO
          1 000234  CBC7 0010                            LAB,B4   ADR$,AUTO
          1 000236  CFC7 00AE                            STB,B4   DD_NOT_IS+4,AUTO
          1 000238  ABC7 0018                            LAB,B2   RSP_DATA$,AUTO
          1 00023A  AFC7 00AC                            STB,B2   DD_NOT_IS+2,AUTO
          1 00023C  BBC7 00AC                            LAB,B3   DD_NOT_IS+2,AUTO
          1 00023E  CBF0 0300                            LAB,B4   768,IMO
          1 000240  E380 0000 0000  xent                 LNJ,B6   GDM$GRAB16
          1 000243       001B                            DC       s:2523,PREL

      211     2523    1           IF GD_DATA.GD.MODE = %GD#MODE_USER_DELTA THEN

   2523   1 000244  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 000247  E846 0130                            LDR,R6   304,B6
          1 000249  6D01                                 CMV,R6   1
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:45   
          1 00024A  0981 0008                            BNE      s:2528,PREL

      212     2524    1              GD$MSG.DISPMEM_D.DATA_SIZE = DSIZE;

   2524   1 00024C  D847 00A7                            LDR,R5   DSIZE,AUTO
          1 00024E  DCC7 0006                            LDB,B5   @BUFFER,AUTO
          1 000250  DAC5 0001                            SRM,R5,'00FF'X    1,B5
          1 000252       00FF

      213     2525        /*
      214     2526          Send the responce and return
      215     2527                                                                                      */
      216     2528    1           CALL GDI$SEND_RESPONSE(SIZE,BUFFER);

   2528   1 000253  BBC7 0004                            LAB,B3   @SIZE,AUTO
          1 000255  CBF0 0200                            LAB,B4   512,IMO
          1 000257  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_RESPONSE
          1 00025A       0001                            DC       s:2529,PREL

      217     2529    1           RETURN;

   2529   1 00025B  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

   2523   1                              ERR_RSP         null
      218     2530        /*
      219     2531          Bad address passed
      220     2532                                                                                      */
      221     2533    1   ERR_RSP:;
      222     2534    1           CALL GDI$SEND_ERROR_RESPONSE(SIZE,BUFFER,%GD#RSPBADADR);

   2534   1 00025E  EBF0 0037            ERR_RSP         LAB,B6   55,IMO
          1 000260  EFC7 00B0                            STB,B6   DD_NOT_IS+6,AUTO
          1 000262  DCC7 0006                            LDB,B5   @BUFFER,AUTO
          1 000264  DFC7 00AE                            STB,B5   DD_NOT_IS+4,AUTO
          1 000266  CCC7 0004                            LDB,B4   @SIZE,AUTO
          1 000268  CFC7 00AC                            STB,B4   DD_NOT_IS+2,AUTO
          1 00026A  BBC7 00AC                            LAB,B3   DD_NOT_IS+2,AUTO
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:46   
          1 00026C  CBF0 0300                            LAB,B4   768,IMO
          1 00026E  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_ERROR_RESPONSE
          1 000271       0001                            DC       s:2535,PREL

      223     2535    1           RETURN;

   2535   1 000272  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      224     2536              %EJECT;
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:47   
      225     2537        /*F*  NAME:    GDM$MODIFY
      226     2538              PURPOSE: This routine is called to handle a modify memory
      227     2539                        request for the host resident debugger
      228     2540              CALL:     CALL GDM$MODIFY(SIZE,BUFFER)
      229     2541              DESCRIPTION: This routine is called to handle a modify
      230     2542                           memory request.  It is passed a structure which contains
      231     2543                           3 sets of flags and data.  The data may contain up
      232     2544                           to 16 modify requests.  Each modify request contains
      233     2545                           an address, plus an old value and a cell for new
      234     2546                           values.  The three arrays of flags are parrellel
      235     2547                           to the modify requests.  The MM flags are sent by the
      236     2548                           host to indicate that before a modify is done,
      237     2549                           thee old contents passed must match the current
      238     2550                           memory contents.  The NM flags are set
      239     2551                           by us to indicate that No Match was found and the
      240     2552                           SO flags are set by us to indicate Store Ok.
      241     2553                                                                                      */
      242     2554    1   GDM$MODIFY: ENTRY (SIZE,BUFFER);

   2554   1 000275  D380 0000 0000  xent GDM$MODIFY      LNJ,B5   X6A_AUTO_2
          1 000278       00C0 0002                       DC       192,2

      243     2555              %EJECT;
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:48   
      244     2556    1           GD$MSG.MODMEM.NM='0'B;

   2556   1 00027A  ECC7 0006                            LDB,B6   @BUFFER,AUTO
          1 00027C  8746 0002                            CL       2,B6

      245     2557        /*
      246     2558          Modify the addresses to point to the ASDT we need to use
      247     2559                                                                                      */
      248     2560    2           DO I=0 TO GD$MSG.MODMEM.MODCNT-1;

   2560   1 00027E  8747 0012                            CL       I,AUTO
          1 000280  0F81 0036                            B        s:2574+2,PREL

      249     2561    2              ADR$=GD$MSG.MODMEM.MODS.ADR$(I);

   2561   1 000282  ECC7 0006                            LDB,B6   @BUFFER,AUTO
          1 000284  B847 0012                            LDR,R3   I,AUTO
          1 000286  3001                                 SOL,R3   1
          1 000287  3E02                                 ADV,R3   2
          1 000288  DCB6                                 LDB,B5   ,B6,R3
          1 000289  DFC7 0010                            STB,B5   ADR$,AUTO

      250     2562    2              CALL GDU$SETUP_WINDOW (ADR$) ALTRET (ERR_RSP);

   2562   1 00028B  CBC7 0010                            LAB,B4   ADR$,AUTO
          1 00028D  CFC7 00AC                            STB,B4   DD_NOT_IS+2,AUTO
          1 00028F  BBC7 00AC                            LAB,B3   DD_NOT_IS+2,AUTO
          1 000291  CBF0 0100                            LAB,B4   256,IMO
          1 000293  E380 0000 0000  xent                 LNJ,B6   GDU$SETUP_WINDOW
          1 000296       FFC8                            DC       s:2523,PREL

      251     2563        /*
      252     2564          Verify that each MODS block that has the MM flag set has an
      253     2565          old value that matches the current value in level 6 memory.
      254     2566          If a discrepency is found, set the NM (no match) flag on
      255     2567          each one that does not match.  If any errors are detected
      256     2568          no cells will be modified.
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:49   
      257     2569                                                                                      */
      258     2570    2              IF GD$MSG.MODMEM.MM.FLGS(I) THEN

   2570   1 000297  ECC7 0006                            LDB,B6   @BUFFER,AUTO
          1 000299  B847 0012                            LDR,R3   I,AUTO
          1 00029B  3E10                                 ADV,R3   16
          1 00029C  82B6                                 LB       ,B6,R3
          1 00029D  0581 000F                            BBF      s:2573,PREL

      259     2571    2                 IF GD$MSG.MODMEM.MODS.OLD(I)~=ADR$->MEMORY(0) THEN

   2571   1 00029F  A847 0012                            LDR,R2   I,AUTO
          1 0002A1  2002                                 SOL,R2   2
          1 0002A2  2E06                                 ADV,R2   6
          1 0002A3  DCC7 0010                            LDB,B5   ADR$,AUTO
          1 0002A5  E826                                 LDR,R6   ,B6,R2
          1 0002A6  E905                                 CMR,R6   ,B5
          1 0002A7  0901 0005                            BE       s:2573,PREL

      260     2572    2                    GD$MSG.MODMEM.NM.FLGS(I)=%G_ON#;

   2572   1 0002A9  9847 0012                            LDR,R1   I,AUTO
          1 0002AB  1E20                                 ADV,R1   32
          1 0002AC  8916                                 LBT      ,B6,R1

      261     2573    2              GD$MSG.MODMEM.MODS.OLD(I)=ADR$->MEMORY(0);

   2573   1 0002AD  A847 0012                            LDR,R2   I,AUTO
          1 0002AF  2002                                 SOL,R2   2
          1 0002B0  2E06                                 ADV,R2   6
          1 0002B1  DCC7 0010                            LDB,B5   ADR$,AUTO
          1 0002B3  E805                                 LDR,R6   ,B5
          1 0002B4  EF26                                 STR,R6   ,B6,R2

      262     2574    2              END;

   2574   1 0002B5  8AC7 0012                            INC      I,AUTO
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:50   
          1 0002B7  E846 0003                            LDR,R6   3,B6
          1 0002B9  E570 00FF                            AND,R6   255,IMO
          1 0002BB  E947 0012                            CMR,R6   I,AUTO
          1 0002BD  0A45                                 BAG      s:2561,SPREL

      263     2575        /*
      264     2576          If there were no errors, do the modifys
      265     2577                                                                                      */
      266     2578    1           IF NOT GD$MSG.MODMEM.NM THEN

   2578   1 0002BE  D846 0002                            LDR,R5   2,B6
          1 0002C0  5981 0034                            BNEZ,R5  s:2591,PREL

      267     2579    2           DO;

      268     2580    2              GD$MSG.MODMEM.SO=%G_ON#;

   2580   1 0002C2  8946 0003                            LBT,'8000'X       3,B6
   2580   1 0002C4       8000

      269     2581    3              DO I=0 TO GD$MSG.MODMEM.MODCNT-1;

   2581   1 0002C5  8747 0012                            CL       I,AUTO
          1 0002C7  0F81 0022                            B        s:2585+2,PREL

      270     2582    3                 ADR$=GD$MSG.MODMEM.MODS.ADR$(I);

   2582   1 0002C9  ECC7 0006                            LDB,B6   @BUFFER,AUTO
          1 0002CB  B847 0012                            LDR,R3   I,AUTO
          1 0002CD  3001                                 SOL,R3   1
          1 0002CE  3E02                                 ADV,R3   2
          1 0002CF  DCB6                                 LDB,B5   ,B6,R3
          1 0002D0  DFC7 0010                            STB,B5   ADR$,AUTO

      271     2583    3                 CALL GDU$SETUP_WINDOW (ADR$);

   2583   1 0002D2  CBC7 0010                            LAB,B4   ADR$,AUTO
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:51   
          1 0002D4  CFC7 00AC                            STB,B4   DD_NOT_IS+2,AUTO
          1 0002D6  BBC7 00AC                            LAB,B3   DD_NOT_IS+2,AUTO
          1 0002D8  CBF0 0100                            LAB,B4   256,IMO
          1 0002DA  E380 0000 0000  xent                 LNJ,B6   GDU$SETUP_WINDOW
          1 0002DD       0001                            DC       s:2584,PREL

      272     2584    3                 ADR$->MEMORY(0)=GD$MSG.MODMEM.MODS.NEW(I);

   2584   1 0002DE  ECC7 0010                            LDB,B6   ADR$,AUTO
          1 0002E0  DCC7 0006                            LDB,B5   @BUFFER,AUTO
          1 0002E2  B847 0012                            LDR,R3   I,AUTO
          1 0002E4  3002                                 SOL,R3   2
          1 0002E5  3E07                                 ADV,R3   7
          1 0002E6  E835                                 LDR,R6   ,B5,R3
          1 0002E7  EF06                                 STR,R6   ,B6

      273     2585    3                 END;

   2585   1 0002E8  8AC7 0012                            INC      I,AUTO
          1 0002EA  ECC7 0006                            LDB,B6   @BUFFER,AUTO
          1 0002EC  E846 0003                            LDR,R6   3,B6
          1 0002EE  E570 00FF                            AND,R6   255,IMO
          1 0002F0  E947 0012                            CMR,R6   I,AUTO
          1 0002F2  0A57                                 BAG      s:2582,SPREL

      274     2586    2              END;

   2586   1 0002F3  0F81 0004                            B        s:2596,PREL

      275     2587        /*
      276     2588          If there was an error detected, indicate we didnt do the stores
      277     2589                                                                                      */
      278     2590    1           ELSE
      279     2591    1              GD$MSG.MODMEM.SO='0000'X;

   2591   1 0002F5  8846 0003                            LBF,'8000'X       3,B6
   2591   1 0002F7       8000
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:52   

      280     2592        /*
      281     2593          Setup and send the responce.  Note that the size has not
      282     2594          changed
      283     2595                                                                                      */
      284     2596    1           GD$MSG.FNC=%GD#RSPMODMEM;

   2596   1 0002F8  5C22                                 LDV,R5   34
          1 0002F9  D786                                 STH,R5   ,B6

      285     2597    1           CALL GDI$SEND_RESPONSE(SIZE,BUFFER);

   2597   1 0002FA  BBC7 0004                            LAB,B3   @SIZE,AUTO
          1 0002FC  CBF0 0200                            LAB,B4   512,IMO
          1 0002FE  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_RESPONSE
          1 000301       0001                            DC       s:2598,PREL

      286     2598    1           RETURN;

   2598   1 000302  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      287     2599        %EJECT;
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:53   
      288     2600        /*F*  NAME:    GDM$MODIFY_D
      289     2601              PURPOSE: This routine is called to handle a modify memory
      290     2602                       request for the host resident debugger
      291     2603              CALL:     CALL GDM$MODIFY_D(SIZE,BUFFER)
      292     2604              DESCRIPTION: It works just like GDM$MODIFY, except does things
      293     2605                           DELTA-style.
      294     2606                                                                                      */
      295     2607    1   GDM$MODIFY_D: ENTRY (SIZE,BUFFER);

   2607   1 000305  D380 0000 0000  xent GDM$MODIFY_D    LNJ,B5   X6A_AUTO_2
          1 000308       00C0 0002                       DC       192,2

      296     2608        /**/
      297     2609        /*  Move addressing information into scratch storage with suitable allignment */
      298     2610        /*  for parameters.                                                           */
      299     2611        /**/
      300     2612    1           DD_ADDRESS = GD$MSG.MODMEM_D.ADDRESS;

   2612   1 00030A  ECC7 0006                            LDB,B6   @BUFFER,AUTO
          1 00030C  8CC6 0005                            LDI      5,B6
          1 00030E  8D47 001A                            SDI      DD_ADDRESS,AUTO

      301     2613    1           DD_SEG = GD$MSG.MODMEM_D.SEG;

   2613   1 000310  D2C6 0007                            LLH,R5   7,B6
          1 000312  DF47 00A8                            STR,R5   DD_SEG,AUTO

      302     2614    1           DD_DESC# = GD$MSG.MODMEM_D.DESC#;

   2614   1 000314  C846 0007                            LDR,R4   7,B6
          1 000316  C570 00FF                            AND,R4   255,IMO
          1 000318  CF47 00A9                            STR,R4   DD_DESC#,AUTO

      303     2615    1           DD_NOT_IS = GD$MSG.MODMEM_D.NOT_IS;

   2615   1 00031A  B846 0003                            LDR,R3   3,B6
          1 00031C  3001                                 SOL,R3   1
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:54   
          1 00031D  B570 8000                            AND,R3   -32768,IMO
          1 00031F  BF47 00AA                            STR,R3   DD_NOT_IS,AUTO

      304     2616        /**/
      305     2617        /*  Make a pointer to the first address to be modified.                       */
      306     2618        /**/
      307     2619    1           CALL GDK$MPTR (FIRST$,DD_ADDRESS,DD_SEG,DD_DESC#,DD_NOT_IS,'0'B,DSIZE);

   2619   1 000321  DBF0 0000                            LAB,B5   0,IMO
          1 000323  CBC7 00A7                            LAB,B4   DSIZE,AUTO
          1 000325  CFC7 00B8                            STB,B4   DD_NOT_IS+14,AUTO
          1 000327  DFC7 00B6                            STB,B5   DD_NOT_IS+12,AUTO
          1 000329  BBC7 00AA                            LAB,B3   DD_NOT_IS,AUTO
          1 00032B  BFC7 00B4                            STB,B3   DD_NOT_IS+10,AUTO
          1 00032D  ABC7 00A9                            LAB,B2   DD_DESC#,AUTO
          1 00032F  AFC7 00B2                            STB,B2   DD_NOT_IS+8,AUTO
          1 000331  9BC7 00A8                            LAB,B1   DD_SEG,AUTO
          1 000333  9FC7 00B0                            STB,B1   DD_NOT_IS+6,AUTO
          1 000335  EBC7 001A                            LAB,B6   DD_ADDRESS,AUTO
          1 000337  EFC7 00AE                            STB,B6   DD_NOT_IS+4,AUTO
          1 000339  EBC7 0016                            LAB,B6   FIRST$,AUTO
          1 00033B  EFC7 00AC                            STB,B6   DD_NOT_IS+2,AUTO
          1 00033D  BBC7 00AC                            LAB,B3   DD_NOT_IS+2,AUTO
          1 00033F  CBF0 0700                            LAB,B4   1792,IMO
          1 000341  E380 0000 0000  xent                 LNJ,B6   GDK$MPTR
          1 000344       0001                            DC       s:2623,PREL

      308     2620        /**/
      309     2621        /*  Map onto first address.                                                   */
      310     2622        /**/
      311     2623    1           ADR$ = FIRST$;

   2623   1 000345  ECC7 0016                            LDB,B6   FIRST$,AUTO
          1 000347  EFC7 0010                            STB,B6   ADR$,AUTO

      312     2624    1           CALL MAP_ADDRESS(ADR$,RANGE) ALTRET(ERR_RSP);

PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:55   
   2624   1 000349  DBC7 0013                            LAB,B5   RANGE,AUTO
          1 00034B  DFC7 00AE                            STB,B5   DD_NOT_IS+4,AUTO
          1 00034D  CBC7 0010                            LAB,B4   ADR$,AUTO
          1 00034F  CFC7 00AC                            STB,B4   DD_NOT_IS+2,AUTO
          1 000351  BBC7 00AC                            LAB,B3   DD_NOT_IS+2,AUTO
          1 000353  CBF0 0200                            LAB,B4   512,IMO
          1 000355  E380 0000 0000  xent                 LNJ,B6   MAP_ADDRESS
          1 000358       FF06                            DC       s:2523,PREL

      313     2625        /**/
      314     2626        /*  Check old data.                                                           */
      315     2627        /**/
      316     2628    1           IF RANGE > GD$MSG.MODMEM_D.MODCNT - 1 THEN

   2628   1 000359  ECC7 0006                            LDB,B6   @BUFFER,AUTO
          1 00035B  E846 0003                            LDR,R6   3,B6
          1 00035D  E570 00FF                            AND,R6   255,IMO
          1 00035F  E947 0013                            CMR,R6   RANGE,AUTO
          1 000361  0A01 0004                            BAG      s:2630,PREL

      317     2629    1              RANGE = GD$MSG.MODMEM_D.MODCNT - 1;

   2629   1 000363  6EFF                                 ADV,R6   -1
          1 000364  EF47 0013                            STR,R6   RANGE,AUTO

      318     2630    2           DO I=0 TO RANGE;

   2630   1 000366  8747 0012                            CL       I,AUTO
          1 000368  0F81 001F                            B        s:2639+2,PREL

      319     2631    3              IF GD$MSG.MODMEM_D.MM.FLGS(I) THEN DO;

   2631   1 00036A  ECC7 0006                            LDB,B6   @BUFFER,AUTO
          1 00036C  B847 0012                            LDR,R3   I,AUTO
          1 00036E  3E10                                 ADV,R3   16
          1 00036F  82B6                                 LB       ,B6,R3
          1 000370  0581 0015                            BBF      s:2639,PREL
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:56   

      320     2632    3                 IF GD$MSG.MODMEM_D.MODS.OLD(I) ~= ADR$ -> MEMORY(I)

   2632   1 000372  A847 0012                            LDR,R2   I,AUTO
          1 000374  2001                                 SOL,R2   1
          1 000375  2E08                                 ADV,R2   8
          1 000376  DCC7 0010                            LDB,B5   ADR$,AUTO
          1 000378  9847 0012                            LDR,R1   I,AUTO
          1 00037A  E826                                 LDR,R6   ,B6,R2
          1 00037B  E915                                 CMR,R6   ,B5,R1
          1 00037C  0981 0107                            BNE      s:2695,PREL

      321     2633    3                 THEN
      322     2634    3                    GOTO NO_MATCH;
      323     2635    3                 IF I = GD$MSG.MODMEM_D.MODCNT-1

   2635   1 00037E  D846 0003                            LDR,R5   3,B6
          1 000380  D570 00FF                            AND,R5   255,IMO
          1 000382  5EFF                                 ADV,R5   -1
          1 000383  D951                                 CMR,R5   R1
          1 000384  0901 005A                            BE       s:2649,PREL

      324     2636    3                 THEN
      325     2637    3                    GOTO OLD_OK;
      326     2638    3                 END;

      327     2639    2              END;

   2639   1 000386  8AC7 0012                            INC      I,AUTO
          1 000388  E847 0012                            LDR,R6   I,AUTO
          1 00038A  E947 0013                            CMR,R6   RANGE,AUTO
          1 00038C  0ADE                                 BALE     s:2631,SPREL

      328     2640    1           RANGE = RANGE+1;

   2640   1 00038D  8AC7 0013                            INC      RANGE,AUTO

PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:57   
      329     2641    1           ADR$ = PINCRW(ADR$,RANGE);

   2641   1 00038F  DCC7 0010                            LDB,B5   ADR$,AUTO
          1 000391  B847 0013                            LDR,R3   RANGE,AUTO
          1 000393  CBB5                                 LAB,B4   ,B5,R3
          1 000394  CFC7 0010                            STB,B4   ADR$,AUTO

      330     2642    1           IF RANGE < GD$MSG.MODMEM_D.MODCNT

   2642   1 000396  D846 0003                            LDR,R5   3,B6
          1 000398  D570 00FF                            AND,R5   255,IMO
          1 00039A  D953                                 CMR,R5   R3
          1 00039B  0A81 000D                            BALE     s:2645,PREL

      331     2643    1           THEN
      332     2644    1              CALL GDU$SETUP_WINDOW (ADR$);

   2644   1 00039D  DBC7 0010                            LAB,B5   ADR$,AUTO
          1 00039F  DFC7 00AC                            STB,B5   DD_NOT_IS+2,AUTO
          1 0003A1  BBC7 00AC                            LAB,B3   DD_NOT_IS+2,AUTO
          1 0003A3  CBF0 0100                            LAB,B4   256,IMO
          1 0003A5  E380 0000 0000  xent                 LNJ,B6   GDU$SETUP_WINDOW
          1 0003A8       0001                            DC       s:2645,PREL

      333     2645    1           IF %GH@VLD.STATUS>=0

   2645   1 0003A9  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 0003AC  E846 0173                            LDR,R6   371,B6
          1 0003AE  6801 0030                            BLZ,R6   s:2649,PREL

      334     2646    1           THEN
      335     2647    2           DO WHILE I < GD$MSG.MODMEM_D.MODCNT;

   2647   1 0003B0  DCC7 0006                            LDB,B5   @BUFFER,AUTO
          1 0003B2  D845 0003                            LDR,R5   3,B5
          1 0003B4  D570 00FF                            AND,R5   255,IMO
          1 0003B6  D947 0012                            CMR,R5   I,AUTO
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:58   
          1 0003B8  0A81 0026                            BALE     s:2649,PREL

      336     2648    3              IF GD$MSG.MODMEM_D.MM.FLGS(I) THEN DO;

   2648   1 0003BA  ECC7 0006                            LDB,B6   @BUFFER,AUTO
          1 0003BC  B847 0012                            LDR,R3   I,AUTO
          1 0003BE  3E10                                 ADV,R3   16
          1 0003BF  82B6                                 LB       ,B6,R3
          1 0003C0  0581 0015                            BBF      s:2656,PREL

      337     2649    3                 IF GD$MSG.MODMEM_D.MODS.OLD(I) ~= ADR$ -> MEMORY(I)

   2649   1 0003C2  A847 0012                            LDR,R2   I,AUTO
          1 0003C4  2001                                 SOL,R2   1
          1 0003C5  2E08                                 ADV,R2   8
          1 0003C6  DCC7 0010                            LDB,B5   ADR$,AUTO
          1 0003C8  9847 0012                            LDR,R1   I,AUTO
          1 0003CA  E826                                 LDR,R6   ,B6,R2
          1 0003CB  E915                                 CMR,R6   ,B5,R1
          1 0003CC  0981 00B7                            BNE      s:2695,PREL

      338     2650    3                 THEN
      339     2651    3                    GOTO NO_MATCH;
      340     2652    3                 IF I = GD$MSG.MODMEM_D.MODCNT-1

   2652   1 0003CE  D846 0003                            LDR,R5   3,B6
          1 0003D0  D570 00FF                            AND,R5   255,IMO
          1 0003D2  5EFF                                 ADV,R5   -1
          1 0003D3  D951                                 CMR,R5   R1
          1 0003D4  0901 000A                            BE       s:2649,PREL

      341     2653    3                 THEN
      342     2654    3                    GOTO OLD_OK;
      343     2655    3                 END;

      344     2656    2              I = I+1;

PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:59   
   2656   1 0003D6  8AC7 0012                            INC      I,AUTO

      345     2657    2              END;

   2657   1 0003D8  E846 0003                            LDR,R6   3,B6
          1 0003DA  E570 00FF                            AND,R6   255,IMO
          1 0003DC  E947 0012                            CMR,R6   I,AUTO
          1 0003DE  0A5C                                 BAG      s:2648,SPREL

   2649   1                              OLD_OK          null
      346     2658    1   OLD_OK: ;
      347     2659        %EJECT;
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:60   
      348     2660        /**/
      349     2661        /*  Modify them locations!                                                    */
      350     2662        /**/
      351     2663    1           ADR$ = FIRST$;

   2663   1 0003DF  ECC7 0016            OLD_OK          LDB,B6   FIRST$,AUTO
          1 0003E1  EFC7 0010                            STB,B6   ADR$,AUTO

      352     2664    1           CALL MAP_ADDRESS(ADR$,RANGE) ALTRET(ERR_RSP);

   2664   1 0003E3  DBC7 0013                            LAB,B5   RANGE,AUTO
          1 0003E5  DFC7 00AE                            STB,B5   DD_NOT_IS+4,AUTO
          1 0003E7  CBC7 0010                            LAB,B4   ADR$,AUTO
          1 0003E9  CFC7 00AC                            STB,B4   DD_NOT_IS+2,AUTO
          1 0003EB  BBC7 00AC                            LAB,B3   DD_NOT_IS+2,AUTO
          1 0003ED  CBF0 0200                            LAB,B4   512,IMO
          1 0003EF  E380 0000 0000  xent                 LNJ,B6   MAP_ADDRESS
          1 0003F2       FE6C                            DC       s:2523,PREL

      353     2665    2           IF %GH@VLD.STATUS ~= %G_VLD_STATUS_ALL# THEN DO;

   2665   1 0003F3  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 0003F6  E846 0173                            LDR,R6   371,B6
          1 0003F8  6D02                                 CMV,R6   2
          1 0003F9  0901 0018                            BE       s:2669,PREL

      354     2666    2              CALL GDI$SEND_ERROR_RESPONSE(SIZE,BUFFER,%GD#RSPNOWRITE);

   2666   1 0003FB  DBF0 003D                            LAB,B5   61,IMO
          1 0003FD  DFC7 00B0                            STB,B5   DD_NOT_IS+6,AUTO
          1 0003FF  CCC7 0006                            LDB,B4   @BUFFER,AUTO
          1 000401  CFC7 00AE                            STB,B4   DD_NOT_IS+4,AUTO
          1 000403  BCC7 0004                            LDB,B3   @SIZE,AUTO
          1 000405  BFC7 00AC                            STB,B3   DD_NOT_IS+2,AUTO
          1 000407  BBC7 00AC                            LAB,B3   DD_NOT_IS+2,AUTO
          1 000409  CBF0 0300                            LAB,B4   768,IMO
          1 00040B  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_ERROR_RESPONSE
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:61   
          1 00040E       0001                            DC       s:2667,PREL

      355     2667    2              RETURN;

   2667   1 00040F  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      356     2668    2              END;
      357     2669    2           DO I=0 TO RANGE;

   2669   1 000412  8747 0012                            CL       I,AUTO
          1 000414  0F81 0016                            B        s:2674+2,PREL

      358     2670    2              ADR$ -> MEMORY(I) = GD$MSG.MODMEM_D.MODS.NEW(I);

   2670   1 000416  ECC7 0010                            LDB,B6   ADR$,AUTO
          1 000418  B847 0012                            LDR,R3   I,AUTO
          1 00041A  DCC7 0006                            LDB,B5   @BUFFER,AUTO
          1 00041C  A853                                 LDR,R2   R3
          1 00041D  2001                                 SOL,R2   1
          1 00041E  2E09                                 ADV,R2   9
          1 00041F  E825                                 LDR,R6   ,B5,R2
          1 000420  EF36                                 STR,R6   ,B6,R3

      359     2671    2              IF I = GD$MSG.MODMEM_D.MODCNT-1

   2671   1 000421  E845 0003                            LDR,R6   3,B5
          1 000423  E570 00FF                            AND,R6   255,IMO
          1 000425  6EFF                                 ADV,R6   -1
          1 000426  E953                                 CMR,R6   R3
          1 000427  0901 004A                            BE       s:2685,PREL

      360     2672    2              THEN
      361     2673    2                 GOTO MOD_DONE;
      362     2674    2              END;

   2674   1 000429  8AC7 0012                            INC      I,AUTO
          1 00042B  E847 0012                            LDR,R6   I,AUTO
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:62   
          1 00042D  E947 0013                            CMR,R6   RANGE,AUTO
          1 00042F  0AE7                                 BALE     s:2670,SPREL

      363     2675    1           RANGE = RANGE+1;

   2675   1 000430  8AC7 0013                            INC      RANGE,AUTO

      364     2676    1           ADR$ = PINCRW(ADR$,RANGE);

   2676   1 000432  ECC7 0010                            LDB,B6   ADR$,AUTO
          1 000434  B847 0013                            LDR,R3   RANGE,AUTO
          1 000436  DBB6                                 LAB,B5   ,B6,R3
          1 000437  DFC7 0010                            STB,B5   ADR$,AUTO

      365     2677    1           IF RANGE < 16

   2677   1 000439  3D10                                 CMV,R3   16
          1 00043A  0881 000D                            BAGE     s:2680,PREL

      366     2678    1           THEN
      367     2679    1              CALL GDU$SETUP_WINDOW (ADR$);

   2679   1 00043C  EBC7 0010                            LAB,B6   ADR$,AUTO
          1 00043E  EFC7 00AC                            STB,B6   DD_NOT_IS+2,AUTO
          1 000440  BBC7 00AC                            LAB,B3   DD_NOT_IS+2,AUTO
          1 000442  CBF0 0100                            LAB,B4   256,IMO
          1 000444  E380 0000 0000  xent                 LNJ,B6   GDU$SETUP_WINDOW
          1 000447       0001                            DC       s:2680,PREL

      368     2680    1           IF %GH@VLD.STATUS>=0

   2680   1 000448  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 00044B  E846 0173                            LDR,R6   371,B6
          1 00044D  6801 0024                            BLZ,R6   s:2685,PREL

      369     2681    1           THEN
      370     2682    2           DO WHILE I<16;
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:63   

   2682   1 00044F  D847 0012                            LDR,R5   I,AUTO
          1 000451  5D10                                 CMV,R5   16
          1 000452  0881 001F                            BAGE     s:2685,PREL

      371     2683    2              ADR$ -> MEMORY(I-RANGE) = GD$MSG.MODMEM_D.MODS.NEW(I);

   2683   1 000454  E847 0012                            LDR,R6   I,AUTO
          1 000456  E247 0013                            SUB,R6   RANGE,AUTO
          1 000458  ECC7 0010                            LDB,B6   ADR$,AUTO
          1 00045A  B856                                 LDR,R3   R6
          1 00045B  DCC7 0006                            LDB,B5   @BUFFER,AUTO
          1 00045D  A847 0012                            LDR,R2   I,AUTO
          1 00045F  2001                                 SOL,R2   1
          1 000460  2E09                                 ADV,R2   9
          1 000461  E825                                 LDR,R6   ,B5,R2
          1 000462  EF36                                 STR,R6   ,B6,R3

      372     2684    2              IF I = GD$MSG.MODMEM_D.MODCNT-1

   2684   1 000463  E845 0003                            LDR,R6   3,B5
          1 000465  E570 00FF                            AND,R6   255,IMO
          1 000467  6EFF                                 ADV,R6   -1
          1 000468  E947 0012                            CMR,R6   I,AUTO
          1 00046A  0901 0007                            BE       s:2685,PREL

      373     2685    2              THEN
      374     2686    2                 GOTO MOD_DONE;
      375     2687    2              I = I+1;

   2687   1 00046C  8AC7 0012                            INC      I,AUTO

      376     2688    2              END;

   2688   1 00046E  D847 0012                            LDR,R5   I,AUTO
          1 000470  5D10                                 CMV,R5   16
          1 000471  0863                                 BAL      s:2683,SPREL
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:64   

   2685   1                              MOD_DONE        null
      377     2689    1   MOD_DONE: ;
      378     2690        %EJECT;
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:65   
      379     2691        /**/
      380     2692        /*  It all worked OK.                                                         */
      381     2693        /**/
      382     2694    1           GD$MSG.MODMEM_D.SO = '1'B;

   2694   1 000472  ECC7 0006            MOD_DONE        LDB,B6   @BUFFER,AUTO
          1 000474  8946 0003                            LBT,'8000'X       3,B6
          1 000476       8000

      383     2695    1           GD$MSG.FNC = %GD#RSPMODMEM;

   2695   1 000477  6C22                                 LDV,R6   34
          1 000478  E786                                 STH,R6   ,B6

      384     2696    1           CALL GDI$SEND_RESPONSE(SIZE,BUFFER);

   2696   1 000479  BBC7 0004                            LAB,B3   @SIZE,AUTO
          1 00047B  CBF0 0200                            LAB,B4   512,IMO
          1 00047D  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_RESPONSE
          1 000480       0001                            DC       s:2697,PREL

      385     2697    1           RETURN;

   2697   1 000481  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

   2695   1                              NO_MATCH        null
      386     2698        /**/
      387     2699    1   NO_MATCH: ;
      388     2700    1           GD$MSG.MODMEM_D.SO = '0'B;

   2700   1 000484  8846 0003            NO_MATCH        LBF,'8000'X       3,B6
   2700   1 000486       8000

      389     2701    1           GD$MSG.FNC = %GD#RSPMODMEM;

   2701   1 000487  6C22                                 LDV,R6   34
          1 000488  E786                                 STH,R6   ,B6
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:66   

      390     2702    1           CALL GDI$SEND_RESPONSE(SIZE,BUFFER);

   2702   1 000489  BBC7 0004                            LAB,B3   @SIZE,AUTO
          1 00048B  CBF0 0200                            LAB,B4   512,IMO
          1 00048D  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_RESPONSE
          1 000490       0001                            DC       s:2703,PREL

      391     2703    1           RETURN;

   2703   1 000491  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      392     2704        /**/
      393     2705        %EJECT;
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:67   
      394     2706    1   GDM$LETMEM_D: ENTRY(SIZE,BUFFER);

   2706   1 000494  D380 0000 0000  xent GDM$LETMEM_D    LNJ,B5   X6A_AUTO_2
          1 000497       00C0 0002                       DC       192,2

      395     2707
      396     2708    1           DD_BITSIZE = 16 * 16;

   2708   1 000499  E870 0100                            LDR,R6   256,IMO
          1 00049B  EF47 0023                            STR,R6   DD_BITSIZE,AUTO

      397     2709    1           BITOFF = 0;

   2709   1 00049D  8747 0024                            CL       BITOFF,AUTO

      398     2710    1           GD_DATA.MISC.DESC$ = ADDR(GD$MSG.LETMEM_D.DATA_DESC);

   2710   1 00049F  ECC7 0006                            LDB,B6   @BUFFER,AUTO
          1 0004A1  DBC6 0027                            LAB,B5   39,B6
          1 0004A3  CC80 0000 0000  xsym                 LDB,B4   GD$DELTA_DATA$
          1 0004A6  DFC4 0184                            STB,B5   388,B4

      399     2711    1           CALL GDK$RESADDR (ARRAY_FIRST,ARRAY_CUR,ARRAY_HIGH,

   2711   1 0004A8  BBC7 001F                            LAB,B3   DD_IS_PTR,AUTO
          1 0004AA  BFC7 00BE                            STB,B3   DD_NOT_IS+20,AUTO
          1 0004AC  ABC7 00AA                            LAB,B2   DD_NOT_IS,AUTO
          1 0004AE  AFC7 00BC                            STB,B2   DD_NOT_IS+18,AUTO
          1 0004B0  9BC7 0024                            LAB,B1   BITOFF,AUTO
          1 0004B2  9FC7 00BA                            STB,B1   DD_NOT_IS+16,AUTO
          1 0004B4  EBC7 0023                            LAB,B6   DD_BITSIZE,AUTO
          1 0004B6  EFC7 00B8                            STB,B6   DD_NOT_IS+14,AUTO
          1 0004B8  EBC7 001A                            LAB,B6   DD_ADDRESS,AUTO
          1 0004BA  EFC7 00B6                            STB,B6   DD_NOT_IS+12,AUTO
          1 0004BC  EBC7 00A9                            LAB,B6   DD_DESC#,AUTO
          1 0004BE  EFC7 00B4                            STB,B6   DD_NOT_IS+10,AUTO
          1 0004C0  EBC7 00A8                            LAB,B6   DD_SEG,AUTO
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:68   
          1 0004C2  EFC7 00B2                            STB,B6   DD_NOT_IS+8,AUTO
          1 0004C4  EBC7 0021                            LAB,B6   ARRAY_HIGH,AUTO
          1 0004C6  EFC7 00B0                            STB,B6   DD_NOT_IS+6,AUTO
          1 0004C8  EBC7 0020                            LAB,B6   ARRAY_CUR,AUTO
          1 0004CA  EFC7 00AE                            STB,B6   DD_NOT_IS+4,AUTO
          1 0004CC  EBC7 0022                            LAB,B6   ARRAY_FIRST,AUTO
          1 0004CE  EFC7 00AC                            STB,B6   DD_NOT_IS+2,AUTO
          1 0004D0  BBC7 00AC                            LAB,B3   DD_NOT_IS+2,AUTO
          1 0004D2  CBF0 0A00                            LAB,B4   2560,IMO
          1 0004D4  E380 0000 0000  xent                 LNJ,B6   GDK$RESADDR
          1 0004D7       0003                            DC       s:2714,PREL
          1 0004D8  0F81 0018                            B        s:2717,PREL

      400     2712    1             DD_SEG,DD_DESC#,DD_ADDRESS,DD_BITSIZE,
      401     2713    2             BITOFF,DD_NOT_IS,DD_IS_PTR) WHENALTRETURN DO;

      402     2714    2              CALL GDI$SEND_ERROR_RESPONSE(SIZE,BUFFER,%GD#RSPBADADR);

   2714   1 0004DA  EBF0 0037                            LAB,B6   55,IMO
          1 0004DC  EFC7 00B0                            STB,B6   DD_NOT_IS+6,AUTO
          1 0004DE  DCC7 0006                            LDB,B5   @BUFFER,AUTO
          1 0004E0  DFC7 00AE                            STB,B5   DD_NOT_IS+4,AUTO
          1 0004E2  CCC7 0004                            LDB,B4   @SIZE,AUTO
          1 0004E4  CFC7 00AC                            STB,B4   DD_NOT_IS+2,AUTO
          1 0004E6  BBC7 00AC                            LAB,B3   DD_NOT_IS+2,AUTO
          1 0004E8  CBF0 0300                            LAB,B4   768,IMO
          1 0004EA  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_ERROR_RESPONSE
          1 0004ED       0001                            DC       s:2715,PREL

      403     2715    2              RETURN;

   2715   1 0004EE  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      404     2716    2              END /* WHENALTRETURN */;
      405     2717    1           CALL GDK$MPTR (ADR$,DD_ADDRESS,DD_SEG,DD_DESC#,DD_NOT_IS,DD_IS_PTR,DSIZE);

   2717   1 0004F1  EBC7 00A7                            LAB,B6   DSIZE,AUTO
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:69   
          1 0004F3  EFC7 00B8                            STB,B6   DD_NOT_IS+14,AUTO
          1 0004F5  DBC7 001F                            LAB,B5   DD_IS_PTR,AUTO
          1 0004F7  DFC7 00B6                            STB,B5   DD_NOT_IS+12,AUTO
          1 0004F9  CBC7 00AA                            LAB,B4   DD_NOT_IS,AUTO
          1 0004FB  CFC7 00B4                            STB,B4   DD_NOT_IS+10,AUTO
          1 0004FD  BBC7 00A9                            LAB,B3   DD_DESC#,AUTO
          1 0004FF  BFC7 00B2                            STB,B3   DD_NOT_IS+8,AUTO
          1 000501  ABC7 00A8                            LAB,B2   DD_SEG,AUTO
          1 000503  AFC7 00B0                            STB,B2   DD_NOT_IS+6,AUTO
          1 000505  9BC7 001A                            LAB,B1   DD_ADDRESS,AUTO
          1 000507  9FC7 00AE                            STB,B1   DD_NOT_IS+4,AUTO
          1 000509  EBC7 0010                            LAB,B6   ADR$,AUTO
          1 00050B  EFC7 00AC                            STB,B6   DD_NOT_IS+2,AUTO
          1 00050D  BBC7 00AC                            LAB,B3   DD_NOT_IS+2,AUTO
          1 00050F  CBF0 0700                            LAB,B4   1792,IMO
          1 000511  E380 0000 0000  xent                 LNJ,B6   GDK$MPTR
          1 000514       0001                            DC       s:2718,PREL

      406     2718    1           RANGE = (DD_BITSIZE + BITOFF + 15) / 16;

   2718   1 000515  E847 0023                            LDR,R6   DD_BITSIZE,AUTO
          1 000517  EA47 0024                            ADD,R6   BITOFF,AUTO
          1 000519  6E0F                                 ADV,R6   15
          1 00051A  6044                                 SOR,R6   4
          1 00051B  EF47 0013                            STR,R6   RANGE,AUTO

      407     2719    1           I = 0;

   2719   1 00051D  8747 0012                            CL       I,AUTO

      408     2720    2           IF RANGE > 16 THEN DO;

   2720   1 00051F  6D10                                 CMV,R6   16
          1 000520  0A81 004B                            BALE     s:2734,PREL

      409     2721    3              DO WHILE RANGE > 0;

PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:70   
   2721   1 000522  6A81 0072                            BLEZ,R6  s:2739,PREL

      410     2722    3                 IF RANGE > 16 THEN

   2722   1 000524  E847 0013                            LDR,R6   RANGE,AUTO
          1 000526  6D10                                 CMV,R6   16
          1 000527  0A81 0006                            BALE     s:2724,PREL

      411     2723    3                    TRANGE = 16;

   2723   1 000529  5C10                                 LDV,R5   16
          1 00052A  DF47 0014                            STR,R5   TRANGE,AUTO
          1 00052C  0F81 0003                            B        s:2725,PREL

      412     2724    3                 ELSE TRANGE = RANGE;

   2724   1 00052E  EF47 0014                            STR,R6   TRANGE,AUTO

      413     2725    4                 CALL MAP_ADDRESS(PINCRW(ADR$,16*I),TRANGE) WHENALTRETURN DO;

   2725   1 000530  E847 0012                            LDR,R6   I,AUTO
          1 000532  70F0                                 DAR,R7   16
          1 000533  7084                                 DOL,R7   4
          1 000534  8447 0010                            AID      ADR$,AUTO
          1 000536  8D47 00AC                            SDI      DD_NOT_IS+2,AUTO
          1 000538  EBC7 0014                            LAB,B6   TRANGE,AUTO
          1 00053A  EFC7 00B0                            STB,B6   DD_NOT_IS+6,AUTO
          1 00053C  DBC7 00AC                            LAB,B5   DD_NOT_IS+2,AUTO
          1 00053E  DFC7 00AE                            STB,B5   DD_NOT_IS+4,AUTO
          1 000540  BBC7 00AE                            LAB,B3   DD_NOT_IS+4,AUTO
          1 000542  CBF0 0200                            LAB,B4   512,IMO
          1 000544  E380 0000 0000  xent                 LNJ,B6   MAP_ADDRESS
          1 000547       0003                            DC       s:2726,PREL
          1 000548  0F81 0018                            B        s:2729,PREL

      414     2726    4                    CALL GDI$SEND_ERROR_RESPONSE(SIZE,BUFFER,%GD#RSPBADADR);

PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:71   
   2726   1 00054A  EBF0 0037                            LAB,B6   55,IMO
          1 00054C  EFC7 00B0                            STB,B6   DD_NOT_IS+6,AUTO
          1 00054E  DCC7 0006                            LDB,B5   @BUFFER,AUTO
          1 000550  DFC7 00AE                            STB,B5   DD_NOT_IS+4,AUTO
          1 000552  CCC7 0004                            LDB,B4   @SIZE,AUTO
          1 000554  CFC7 00AC                            STB,B4   DD_NOT_IS+2,AUTO
          1 000556  BBC7 00AC                            LAB,B3   DD_NOT_IS+2,AUTO
          1 000558  CBF0 0300                            LAB,B4   768,IMO
          1 00055A  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_ERROR_RESPONSE
          1 00055D       0001                            DC       s:2727,PREL

      415     2727    4                    RETURN;

   2727   1 00055E  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      416     2728    4                    END;
      417     2729    3                 I = I + 1;

   2729   1 000561  8AC7 0012                            INC      I,AUTO

      418     2730    3                 RANGE = RANGE - 16;

   2730   1 000563  E847 0013                            LDR,R6   RANGE,AUTO
          1 000565  6EF0                                 ADV,R6   -16
          1 000566  EF47 0013                            STR,R6   RANGE,AUTO

      419     2731    3                 END;

   2731   1 000568  6A01 FFBB                            BGZ,R6   s:2722,PREL

      420     2732    2              END;

   2732   1 00056A  0F81 002A                            B        s:2739,PREL

      421     2733    2           ELSE DO;

      422     2734    3              CALL MAP_ADDRESS(ADR$,RANGE) WHENALTRETURN DO;
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:72   

   2734   1 00056C  EBC7 0013                            LAB,B6   RANGE,AUTO
          1 00056E  EFC7 00AE                            STB,B6   DD_NOT_IS+4,AUTO
          1 000570  DBC7 0010                            LAB,B5   ADR$,AUTO
          1 000572  DFC7 00AC                            STB,B5   DD_NOT_IS+2,AUTO
          1 000574  BBC7 00AC                            LAB,B3   DD_NOT_IS+2,AUTO
          1 000576  CBF0 0200                            LAB,B4   512,IMO
          1 000578  E380 0000 0000  xent                 LNJ,B6   MAP_ADDRESS
          1 00057B       0003                            DC       s:2735,PREL
          1 00057C  0F81 0018                            B        s:2739,PREL

      423     2735    3                 CALL GDI$SEND_ERROR_RESPONSE(SIZE,BUFFER,%GD#RSPBADADR);

   2735   1 00057E  EBF0 0037                            LAB,B6   55,IMO
          1 000580  EFC7 00B0                            STB,B6   DD_NOT_IS+6,AUTO
          1 000582  DCC7 0006                            LDB,B5   @BUFFER,AUTO
          1 000584  DFC7 00AE                            STB,B5   DD_NOT_IS+4,AUTO
          1 000586  CCC7 0004                            LDB,B4   @SIZE,AUTO
          1 000588  CFC7 00AC                            STB,B4   DD_NOT_IS+2,AUTO
          1 00058A  BBC7 00AC                            LAB,B3   DD_NOT_IS+2,AUTO
          1 00058C  CBF0 0300                            LAB,B4   768,IMO
          1 00058E  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_ERROR_RESPONSE
          1 000591       0001                            DC       s:2736,PREL

      424     2736    3                 RETURN;

   2736   1 000592  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      425     2737    3                 END;
      426     2738    2              END;

      427     2739    2           IF %GH@VLD.STATUS ~= %G_VLD_STATUS_ALL# THEN DO;

   2739   1 000595  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 000598  E846 0173                            LDR,R6   371,B6
          1 00059A  6D02                                 CMV,R6   2
          1 00059B  0901 0018                            BE       s:2743,PREL
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:73   

      428     2740    2              CALL GDI$SEND_ERROR_RESPONSE(SIZE,BUFFER,%GD#RSPNOWRITE);

   2740   1 00059D  DBF0 003D                            LAB,B5   61,IMO
          1 00059F  DFC7 00B0                            STB,B5   DD_NOT_IS+6,AUTO
          1 0005A1  CCC7 0006                            LDB,B4   @BUFFER,AUTO
          1 0005A3  CFC7 00AE                            STB,B4   DD_NOT_IS+4,AUTO
          1 0005A5  BCC7 0004                            LDB,B3   @SIZE,AUTO
          1 0005A7  BFC7 00AC                            STB,B3   DD_NOT_IS+2,AUTO
          1 0005A9  BBC7 00AC                            LAB,B3   DD_NOT_IS+2,AUTO
          1 0005AB  CBF0 0300                            LAB,B4   768,IMO
          1 0005AD  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_ERROR_RESPONSE
          1 0005B0       0001                            DC       s:2741,PREL

      429     2741    2              RETURN;

   2741   1 0005B1  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      430     2742    2              END;
      431     2743    2           DO CASE(GD$MSG.LETMEM_D.TYPE);

   2743   1 0005B4  DCC7 0006                            LDB,B5   @BUFFER,AUTO
          1 0005B6  B845 0006                            LDR,R3   6,B5
          1 0005B8  3D1E                                 CMV,R3   30
          1 0005B9  0281 0109                            BGE      s:2775,PREL
          1 0005BB  A830 0000 05C1  01                   LDR,R2   s:2743+13,R3
          1 0005BE  83A0 0000 05DF  01                   JMP      s:2745,R2
          1 0005C1       00E4                            DC       s:2775,PREL
          1 0005C2       00E4                            DC       s:2775,PREL
          1 0005C3       0026                            DC       s:2749,PREL
          1 0005C4       0026                            DC       s:2749,PREL
          1 0005C5       0050                            DC       s:2754,PREL
          1 0005C6       0000                            DC       s:2745,PREL
          1 0005C7       00E4                            DC       s:2775,PREL
          1 0005C8       00AC                            DC       s:2768,PREL
          1 0005C9       00E4                            DC       s:2775,PREL
          1 0005CA       00E4                            DC       s:2775,PREL
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:74   
          1 0005CB       00E4                            DC       s:2775,PREL
          1 0005CC       00E4                            DC       s:2775,PREL
          1 0005CD       00E4                            DC       s:2775,PREL
          1 0005CE       0000                            DC       s:2745,PREL
          1 0005CF       0000                            DC       s:2745,PREL
          1 0005D0       00E4                            DC       s:2775,PREL
          1 0005D1       00E4                            DC       s:2775,PREL
          1 0005D2       00E4                            DC       s:2775,PREL
          1 0005D3       00E4                            DC       s:2775,PREL
          1 0005D4       00E4                            DC       s:2775,PREL
          1 0005D5       00E4                            DC       s:2775,PREL
          1 0005D6       00E4                            DC       s:2775,PREL
          1 0005D7       00E4                            DC       s:2775,PREL
          1 0005D8       00E4                            DC       s:2775,PREL
          1 0005D9       00E4                            DC       s:2775,PREL
          1 0005DA       00E4                            DC       s:2775,PREL
          1 0005DB       00E4                            DC       s:2775,PREL
          1 0005DC       00E4                            DC       s:2775,PREL
          1 0005DD       00E4                            DC       s:2775,PREL
          1 0005DE       00C6                            DC       s:2772,PREL

      432     2744    2            CASE(%BIT_FMT,%OBIT_FMT,%X_FMT);

      433     2745    3              DO I = BITOFF TO DD_BITSIZE + BITOFF - 1;

   2745   1 0005DF  D847 0024                            LDR,R5   BITOFF,AUTO
          1 0005E1  DF47 0012                            STR,R5   I,AUTO
          1 0005E3  0F81 0017                            B        s:2747+2,PREL

      434     2746    3                ADR$->B$BITS.B(I) = ADDR(GD$MSG.LETMEM_D.VALUE.BITS.TRING)->B$BITS.B(I
              2746                          -BITOFF);

   2746   1 0005E5  E847 0012                            LDR,R6   I,AUTO
          1 0005E7  E247 0024                            SUB,R6   BITOFF,AUTO
          1 0005E9  EF47 00AC                            STR,R6   DD_NOT_IS+2,AUTO
          1 0005EB  ACC7 0006                            LDB,B2   @BUFFER,AUTO
          1 0005ED  ABC2 0008                            LAB,B2   8,B2
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:75   
          1 0005EF  A856                                 LDR,R2   R6
          1 0005F0  6C01                                 LDV,R6   1
          1 0005F1  BCC7 0010                            LDB,B3   ADR$,AUTO
          1 0005F3  B847 0012                            LDR,R3   I,AUTO
          1 0005F5  7C01                                 LDV,R7   1
          1 0005F6  D380 0000 0000  xent                 LNJ,B5   X6B_BLR

      435     2747    3                 END;

   2747   1 0005F9  8AC7 0012                            INC      I,AUTO
          1 0005FB  E847 0023                            LDR,R6   DD_BITSIZE,AUTO
          1 0005FD  EA47 0024                            ADD,R6   BITOFF,AUTO
          1 0005FF  6866                                 BLZ,R6   s:2746,SPREL
          1 000600  E947 0012                            CMR,R6   I,AUTO
          1 000602  0A63                                 BAG      s:2746,SPREL
          1 000603  0F81 00D4                            B        s:2777,PREL

      436     2748    2            CASE(%UINT_FMT,%SINT_FMT);

      437     2749    3              DO I = DD_BITSIZE + BITOFF - 1 DOWNTO BITOFF;

   2749   1 000605  D847 0023                            LDR,R5   DD_BITSIZE,AUTO
          1 000607  DA47 0024                            ADD,R5   BITOFF,AUTO
          1 000609  5EFF                                 ADV,R5   -1
          1 00060A  DF47 0012                            STR,R5   I,AUTO
          1 00060C  0F81 0019                            B        s:2752+2,PREL

      438     2750    3                 ADR$->B$BITS.B(I) =

   2750   1 00060E  E847 0012                            LDR,R6   I,AUTO
          1 000610  E247 0024                            SUB,R6   BITOFF,AUTO
          1 000612  E247 0023                            SUB,R6   DD_BITSIZE,AUTO
          1 000614  EF47 00AC                            STR,R6   DD_NOT_IS+2,AUTO
          1 000616  ACC7 0006                            LDB,B2   @BUFFER,AUTO
          1 000618  ABC2 000A                            LAB,B2   10,B2
          1 00061A  A856                                 LDR,R2   R6
          1 00061B  6C01                                 LDV,R6   1
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:76   
          1 00061C  BCC7 0010                            LDB,B3   ADR$,AUTO
          1 00061E  B847 0012                            LDR,R3   I,AUTO
          1 000620  7C01                                 LDV,R7   1
          1 000621  D380 0000 0000  xent                 LNJ,B5   X6B_BLR

      439     2751    3                   ADDR(GD$MSG.LETMEM_D.VALUE.CONS.TANT)->B$BITS.B(I-BITOFF+32-
              2751                            DD_BITSIZE);
      440     2752    3                 END;

   2752   1 000624  88C7 0012                            DEC      I,AUTO
          1 000626  E847 0012                            LDR,R6   I,AUTO
          1 000628  6801 0004                            BLZ,R6   s:2752+9,PREL
          1 00062A  E947 0024                            CMR,R6   BITOFF,AUTO
          1 00062C  02E2                                 BGE      s:2750,SPREL
          1 00062D  0F81 00AA                            B        s:2777,PREL

      441     2753    2            CASE(%CHAR_FMT);

      442     2754    3              IF MOD(BITOFF,8) ~= 0 THEN DO;

   2754   1 00062F  D847 0024                            LDR,R5   BITOFF,AUTO
          1 000631  D570 0007                            AND,R5   7,IMO
          1 000633  5901 0016                            BEZ,R5   s:2758,PREL

      443     2755    3                 CALL GDI$SEND_ERROR_RESPONSE(SIZE,BUFFER,%GD#RSPTYPMISMATCH);

   2755   1 000635  CBF0 002F                            LAB,B4   47,IMO
          1 000637  CFC7 00B0                            STB,B4   DD_NOT_IS+6,AUTO
          1 000639  DFC7 00AE                            STB,B5   DD_NOT_IS+4,AUTO
          1 00063B  BCC7 0004                            LDB,B3   @SIZE,AUTO
          1 00063D  BFC7 00AC                            STB,B3   DD_NOT_IS+2,AUTO
          1 00063F  BBC7 00AC                            LAB,B3   DD_NOT_IS+2,AUTO
          1 000641  CBF0 0300                            LAB,B4   768,IMO
          1 000643  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_ERROR_RESPONSE
          1 000646       0001                            DC       s:2756,PREL

      444     2756    3                 RETURN;
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:77   

   2756   1 000647  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      445     2757    3                 END;
      446     2758    3              DO I = BITOFF/8 TO GD$MSG.LETMEM_D.VALUE.SIZE;

   2758   1 00064A  D847 0024                            LDR,R5   BITOFF,AUTO
          1 00064C  5043                                 SOR,R5   3
          1 00064D  DF47 0012                            STR,R5   I,AUTO
          1 00064F  0F81 001C                            B        s:2763+2,PREL

      447     2759    3                 ADR$->B$BYTES.B(I) =

   2759   1 000651  E847 0024                            LDR,R6   BITOFF,AUTO
          1 000653  6043                                 SOR,R6   3
          1 000654  E247 0012                            SUB,R6   I,AUTO
          1 000656  ECC7 0006                            LDB,B6   @BUFFER,AUTO
          1 000658  B856                                 LDR,R3   R6
          1 000659  8253                                 NEG      R3
          1 00065A  3E0F                                 ADV,R3   15
          1 00065B  E2B6                                 LLH,R6   ,B6,R3
          1 00065C  DCC7 0010                            LDB,B5   ADR$,AUTO
          1 00065E  B847 0012                            LDR,R3   I,AUTO
          1 000660  E7B5                                 STH,R6   ,B5,R3

      448     2760    3                   GD$MSG.LETMEM_D.VALUE.TEXT(I-BITOFF/8);
      449     2761    3                 IF I = ((DD_BITSIZE + BITOFF) / 8) - 1 THEN

   2761   1 000661  E847 0023                            LDR,R6   DD_BITSIZE,AUTO
          1 000663  EA47 0024                            ADD,R6   BITOFF,AUTO
          1 000665  6043                                 SOR,R6   3
          1 000666  6EFF                                 ADV,R6   -1
          1 000667  E953                                 CMR,R6   R3
          1 000668  0901 006F                            BE       s:2777,PREL

      450     2762    3                    GOTO LETMEM_DONE;
      451     2763    3                 END;
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:78   

   2763   1 00066A  8AC7 0012                            INC      I,AUTO
          1 00066C  ECC7 0006                            LDB,B6   @BUFFER,AUTO
          1 00066E  E2C6 0007                            LLH,R6   7,B6
          1 000670  E947 0012                            CMR,R6   I,AUTO
          1 000672  08DF                                 BAGE     s:2759,SPREL

      452     2764    3              DO J = I TO ((DD_BITSIZE + BITOFF) / 8) - 1;

   2764   1 000673  D847 0012                            LDR,R5   I,AUTO
          1 000675  DF47 0015                            STR,R5   J,AUTO
          1 000677  0F81 0009                            B        s:2766+2,PREL

      453     2765    3                 ADR$->B$BYTES.B(J) = 32;  /* Fill with spaces                   */

   2765   1 000679  6C20                                 LDV,R6   32
          1 00067A  ECC7 0010                            LDB,B6   ADR$,AUTO
          1 00067C  B847 0015                            LDR,R3   J,AUTO
          1 00067E  E7B6                                 STH,R6   ,B6,R3

      454     2766    3                 END;

   2766   1 00067F  8AC7 0015                            INC      J,AUTO
          1 000681  E847 0023                            LDR,R6   DD_BITSIZE,AUTO
          1 000683  EA47 0024                            ADD,R6   BITOFF,AUTO
          1 000685  6043                                 SOR,R6   3
          1 000686  E947 0015                            CMR,R6   J,AUTO
          1 000688  0371                                 BG       s:2765,SPREL
          1 000689  0F81 004E                            B        s:2777,PREL

      455     2767    2            CASE(%PTR_FMT);

      456     2768    2              ADR$->B$PTR.W = GD$MSG.LETMEM_D.VALUE.P.W;

   2768   1 00068B  ABC5 0008                            LAB,B2   8,B5
          1 00068D  2C0B                                 LDV,R2   11
          1 00068E  6C14                                 LDV,R6   20
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:79   
          1 00068F  BCC7 0010                            LDB,B3   ADR$,AUTO
          1 000691  3C0C                                 LDV,R3   12
          1 000692  7C14                                 LDV,R7   20
          1 000693  D380 0000 0000  xent                 LNJ,B5   X6B_BLR

      457     2769    2              ADR$->B$PTR.MBZ = 0;

   2769   1 000696  ECC7 0010                            LDB,B6   ADR$,AUTO
          1 000698  8806                                 LBF,'7FF0'X       ,B6
          1 000699       7FF0

      458     2770    2              ADR$->B$PTR.C = GD$MSG.LETMEM_D.VALUE.P.C;

   2770   1 00069A  ECC7 0006                            LDB,B6   @BUFFER,AUTO
          1 00069C  DCC7 0010                            LDB,B5   ADR$,AUTO
          1 00069E  E846 0009                            LDR,R6   9,B6
          1 0006A0  600F                                 SOL,R6   15
          1 0006A1  EA85                                 SRM,R6,'8000'X    ,B5
          1 0006A2       8000
          1 0006A3  0F81 0034                            B        s:2777,PREL

      459     2771    2            CASE(%PUP_FMT);

      460     2772    2              J=DD_BITSIZE;                /* Size in natural units              */

   2772   1 0006A5  D847 0023                            LDR,R5   DD_BITSIZE,AUTO
          1 0006A7  DF47 0015                            STR,R5   J,AUTO

      461     2773    2              CALL GDM$LETDEC(ADR$,GD_DATA.MISC.DESC$,J,BITOFF);

   2773   1 0006A9  CBC7 0024                            LAB,B4   BITOFF,AUTO
          1 0006AB  CFC7 00B2                            STB,B4   DD_NOT_IS+8,AUTO
          1 0006AD  BBC7 0015                            LAB,B3   J,AUTO
          1 0006AF  BFC7 00B0                            STB,B3   DD_NOT_IS+6,AUTO
          1 0006B1  ABC6 0184                            LAB,B2   388,B6
          1 0006B3  AFC7 00AE                            STB,B2   DD_NOT_IS+4,AUTO
          1 0006B5  9BC7 0010                            LAB,B1   ADR$,AUTO
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:80   
          1 0006B7  9FC7 00AC                            STB,B1   DD_NOT_IS+2,AUTO
          1 0006B9  BBC7 00AC                            LAB,B3   DD_NOT_IS+2,AUTO
          1 0006BB  CBF0 0400                            LAB,B4   1024,IMO
          1 0006BD  E380 0000 0000  xent                 LNJ,B6   GDM$LETDEC
          1 0006C0       0001                            DC       s:2773+24,PREL
          1 0006C1  0F81 0016                            B        s:2777,PREL

      462     2774    2            CASE(ELSE);

      463     2775    2              CALL GDI$SEND_ERROR_RESPONSE(SIZE,BUFFER,%GD#RSPUNSUPRT);

   2775   1 0006C3  CBF0 0038                            LAB,B4   56,IMO
          1 0006C5  CFC7 00B0                            STB,B4   DD_NOT_IS+6,AUTO
          1 0006C7  DFC7 00AE                            STB,B5   DD_NOT_IS+4,AUTO
          1 0006C9  BCC7 0004                            LDB,B3   @SIZE,AUTO
          1 0006CB  BFC7 00AC                            STB,B3   DD_NOT_IS+2,AUTO
          1 0006CD  BBC7 00AC                            LAB,B3   DD_NOT_IS+2,AUTO
          1 0006CF  CBF0 0300                            LAB,B4   768,IMO
          1 0006D1  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_ERROR_RESPONSE
          1 0006D4       0001                            DC       s:2776,PREL

      464     2776    2              RETURN;

   2776   1 0006D5  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      465     2777    2            END;

      466     2778    1   LETMEM_DONE:
      467     2779    1           GD$MSG.FNC = %GD#RSPLETMEM;

   2779   1 0006D8  6C2E                 LETMEM_DONE     LDV,R6   46
          1 0006D9  ECC7 0006                            LDB,B6   @BUFFER,AUTO
          1 0006DB  E786                                 STH,R6   ,B6

      468     2780    1           CALL GDI$SEND_RESPONSE(SIZE,BUFFER);

   2780   1 0006DC  BBC7 0004                            LAB,B3   @SIZE,AUTO
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:81   
          1 0006DE  CBF0 0200                            LAB,B4   512,IMO
          1 0006E0  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_RESPONSE
          1 0006E3       0001                            DC       s:2781,PREL

      469     2781    1           RETURN;

   2781   1 0006E4  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      470     2782        /**/
      471     2783        %EJECT;
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:82   
      472     2784    1   GDM$UNFID: ENTRY(SIZE,BUFFER);

   2784   1 0006E7  D380 0000 0000  xent GDM$UNFID       LNJ,B5   X6A_AUTO_2
          1 0006EA       00C0 0002                       DC       192,2

      473     2785        /**/
      474     2786    2           IF GD$MSG.UNFID.NUMDCBS = 0 THEN DO; /* If we haven't already,        */

   2786   1 0006EC  ECC7 0006                            LDB,B6   @BUFFER,AUTO
          1 0006EE  E2C6 0002                            LLH,R6   2,B6
          1 0006F0  6981 0026                            BNEZ,R6  s:2794,PREL

      475     2787    2              GD$MSG.UNFID.NUMDCBS = G$ROS$->G$ROS.NUMDCBS;

   2787   1 0006F2  DC80 0000 0000  xsym                 LDB,B5   G$ROS$
          1 0006F5  D845 0014                            LDR,R5   20,B5
          1 0006F7  D7C6 0002                            STH,R5   2,B6

      476     2788    2              UNFID_DCB$=DCBADDR(GD$MSG.UNFID.NUMDCBS);

   2788   1 0006F9  CC80 0000 0000  xsym                 LDB,B4   G$ROS$
          1 0006FC  BC84                                 LDB,B3   ,B4
          1 0006FD  B2C6 0002                            LLH,R3   2,B6
          1 0006FF  ACB3                                 LDB,B2   ,B3,R3
          1 000700  AFC7 001D                            STB,B2   UNFID_DCB$,AUTO

      477     2789    3              DO WHILE UNFID_DCB$ = ADDR(NIL);
              2789                       /* find the highest non-empty DCB slot */

   2789   1 000702  0F81 0011                            B        s:2792,PREL

      478     2790    3                 GD$MSG.UNFID.NUMDCBS = GD$MSG.UNFID.NUMDCBS - 1;

   2790   1 000704  ECC7 0006                            LDB,B6   @BUFFER,AUTO
          1 000706  E2C6 0002                            LLH,R6   2,B6
          1 000708  6EFF                                 ADV,R6   -1
          1 000709  E7C6 0002                            STH,R6   2,B6
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:83   

      479     2791    3                 UNFID_DCB$ = DCBADDR(GD$MSG.UNFID.NUMDCBS);

   2791   1 00070B  DC80 0000 0000  xsym                 LDB,B5   G$ROS$
          1 00070E  CC85                                 LDB,B4   ,B5
          1 00070F  B2C6 0002                            LLH,R3   2,B6
          1 000711  BCB4                                 LDB,B3   ,B4,R3
          1 000712  BFC7 001D                            STB,B3   UNFID_DCB$,AUTO

      480     2792    3                 END;

   2792   1 000714  8DC7 001D                            CMN      UNFID_DCB$,AUTO
          1 000716  096E                                 BE       s:2790,SPREL

      481     2793    2              END;

      482     2794    2           IF GD$MSG.UNFID.K13 THEN DO;

   2794   1 000717  82C6 0001                            LB,'0080'X        1,B6
   2794   1 000719       0080
          1 00071A  0581 0007                            BBF      s:2798,PREL

      483     2795    2              UNFID_DCBNUM = GD$MSG.UNFID.DCB#;

   2795   1 00071C  E2C6 0001                            LLH,R6   1,B6
          1 00071E  EF47 001C                            STR,R6   UNFID_DCBNUM,AUTO

      484     2796    2              END;

   2796   1 000720  0F81 003B                            B        s:2807,PREL

      485     2797    2           ELSE DO;

      486     2798    2              UNFID_DCBNUM = G$ROS$->G$ROS.NUMDCBS+1;

   2798   1 000722  DC80 0000 0000  xsym                 LDB,B5   G$ROS$
          1 000725  E845 0014                            LDR,R6   20,B5
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:84   
          1 000727  6E01                                 ADV,R6   1
          1 000728  EF47 001C                            STR,R6   UNFID_DCBNUM,AUTO

      487     2799    3              DO I=0 TO G$ROS$->G$ROS.NUMDCBS;

   2799   1 00072A  8747 0012                            CL       I,AUTO
          1 00072C  0F81 0026                            B        s:2806+2,PREL

      488     2800    3                 UNFID_DCB$ = DCBADDR(I);

   2800   1 00072E  EC80 0000 0000  xsym                 LDB,B6   G$ROS$
          1 000731  DC86                                 LDB,B5   ,B6
          1 000732  B847 0012                            LDR,R3   I,AUTO
          1 000734  CCB5                                 LDB,B4   ,B5,R3
          1 000735  CFC7 001D                            STB,B4   UNFID_DCB$,AUTO

      489     2801    3                 IF UNFID_DCB$~=ADDR(NIL) THEN

   2801   1 000737  8DC7 001D                            CMN      UNFID_DCB$,AUTO
          1 000739  0901 0017                            BE       s:2806,PREL

      490     2802    4                    IF UNFID_DCB$->M$DCB.DCBNAME = GD$MSG.UNFID.DCBNAME THEN DO;

   2802   1 00073B  E2C4 0032                            LLH,R6   50,B4
          1 00073D  EF47 00AC                            STR,R6   DD_NOT_IS+2,AUTO
          1 00073F  AB84                                 LAB,B2   ,B4
          1 000740  2C64                                 LDV,R2   100
          1 000741  6E01                                 ADV,R6   1
          1 000742  BCC7 0006                            LDB,B3   @BUFFER,AUTO
          1 000744  3C07                                 LDV,R3   7
          1 000745  7C20                                 LDV,R7   32
          1 000746  D380 0000 0000  xent                 LNJ,B5   X6C_ACMZ
          1 000749  5301 0007                            CBNE     s:2806,PREL

      491     2803    4                       UNFID_DCBNUM = I;

   2803   1 00074B  E847 0012                            LDR,R6   I,AUTO
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:85   
          1 00074D  EF47 001C                            STR,R6   UNFID_DCBNUM,AUTO

      492     2804    4                       GOTO LOOP_EXIT;

   2804   1 00074F  0F81 000C                            B        s:2807,PREL

      493     2805    4                       END;
      494     2806    3                 END;

   2806   1 000751  8AC7 0012                            INC      I,AUTO
          1 000753  EC80 0000 0000  xsym                 LDB,B6   G$ROS$
          1 000756  E847 0012                            LDR,R6   I,AUTO
          1 000758  6856                                 BLZ,R6   s:2800,SPREL
          1 000759  E946 0014                            CMR,R6   20,B6
          1 00075B  03D3                                 BLE      s:2800,SPREL

      495     2807    2              END;

   2801   1                              LOOP_EXIT       null
      496     2808    1   LOOP_EXIT:;
      497     2809    2           IF UNFID_DCBNUM > G$ROS$->G$ROS.NUMDCBS THEN DO;

   2809   1 00075C  EC80 0000 0000  xsym LOOP_EXIT       LDB,B6   G$ROS$
          1 00075F  E847 001C                            LDR,R6   UNFID_DCBNUM,AUTO
          1 000761  E946 0014                            CMR,R6   20,B6
          1 000763  0381 0014                            BLE      s:2815,PREL

      498     2810    2              SIZE=%GD#RSPUNFIDSIZE;

   2810   1 000765  DCC7 0004                            LDB,B5   @SIZE,AUTO
          1 000767  5C52                                 LDV,R5   82
          1 000768  DF05                                 STR,R5   ,B5

      499     2811    2              GD$MSG.FNC = %GD#RSPNOSUCHDCB;

   2811   1 000769  4C2B                                 LDV,R4   43
          1 00076A  ECC7 0006                            LDB,B6   @BUFFER,AUTO
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:86   
          1 00076C  C786                                 STH,R4   ,B6

      500     2812    2              CALL GDI$SEND_RESPONSE(SIZE,BUFFER);

   2812   1 00076D  BBC7 0004                            LAB,B3   @SIZE,AUTO
          1 00076F  CBF0 0200                            LAB,B4   512,IMO
          1 000771  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_RESPONSE
          1 000774       0001                            DC       s:2813,PREL

      501     2813    2              RETURN;

   2813   1 000775  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      502     2814    2              END;
      503     2815    1           UNFID_DCB$ = DCBADDR(UNFID_DCBNUM);

   2815   1 000778  DC80 0000 0000  xsym                 LDB,B5   G$ROS$
          1 00077B  CC85                                 LDB,B4   ,B5
          1 00077C  B856                                 LDR,R3   R6
          1 00077D  BCB4                                 LDB,B3   ,B4,R3
          1 00077E  BFC7 001D                            STB,B3   UNFID_DCB$,AUTO

      504     2816    2           IF UNFID_DCB$ = ADDR(NIL) THEN DO;

   2816   1 000780  8DC7 001D                            CMN      UNFID_DCB$,AUTO
          1 000782  0981 0014                            BNE      s:2823,PREL

      505     2817    2              SIZE=%GD#RSPUNFIDSIZE;

   2817   1 000784  ACC7 0004                            LDB,B2   @SIZE,AUTO
          1 000786  5C52                                 LDV,R5   82
          1 000787  DF02                                 STR,R5   ,B2

      506     2818    2              GD$MSG.FNC = %GD#RSPDCBEMPTY;

   2818   1 000788  4C2C                                 LDV,R4   44
          1 000789  ECC7 0006                            LDB,B6   @BUFFER,AUTO
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:87   
          1 00078B  C786                                 STH,R4   ,B6

      507     2819    2              CALL GDI$SEND_RESPONSE(SIZE,BUFFER);

   2819   1 00078C  BBC7 0004                            LAB,B3   @SIZE,AUTO
          1 00078E  CBF0 0200                            LAB,B4   512,IMO
          1 000790  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_RESPONSE
          1 000793       0001                            DC       s:2820,PREL

      508     2820    2              RETURN;

   2820   1 000794  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      509     2821    2              END;
      510     2822    2           ELSE DO;

      511     2823    2              GD$MSG.UNFID.FUN# = UNFID_DCB$->M$DCB.FUN;

   2823   1 000797  ACC7 0006                            LDB,B2   @BUFFER,AUTO
          1 000799  D843 0020                            LDR,R5   32,B3
          1 00079B  D570 F000                            AND,R5   -4096,IMO
          1 00079D  504C                                 SOR,R5   12
          1 00079E  DAC2 0002                            SRM,R5,'00FF'X    2,B2
          1 0007A0       00FF

      512     2824    2              GD$MSG.UNFID.ORG# = UNFID_DCB$->M$DCB.ORG;

   2824   1 0007A1  D843 001F                            LDR,R5   31,B3
          1 0007A3  D570 00FF                            AND,R5   255,IMO
          1 0007A5  D7C2 0003                            STH,R5   3,B2

      513     2825    2              GD$MSG.UNFID.DCB# = UNFID_DCBNUM;

   2825   1 0007A7  B7C2 0001                            STH,R3   1,B2

      514     2826    2              SIZE = %GD#RSPUNFIDSIZE;

PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:88   
   2826   1 0007A9  ECC7 0004                            LDB,B6   @SIZE,AUTO
          1 0007AB  5C52                                 LDV,R5   82
          1 0007AC  DF06                                 STR,R5   ,B6

      515     2827    2              GD$MSG.UNFID.RES = UNFID_DCB$->M$DCB.RESNT;

   2827   1 0007AD  AB83                                 LAB,B2   ,B3
          1 0007AE  2C32                                 LDV,R2   50
          1 0007AF  6C04                                 LDV,R6   4
          1 0007B0  BCC7 0006                            LDB,B3   @BUFFER,AUTO
          1 0007B2  3C27                                 LDV,R3   39
          1 0007B3  0008                                 MMM

      516     2828    3              IF UNFID_DCB$->M$DCB.FCI THEN DO;

   2828   1 0007B4  DCC7 001D                            LDB,B5   UNFID_DCB$,AUTO
          1 0007B6  89C5 001F                            CMZ      31,B5
          1 0007B8  0881 0010                            BAGE     s:2833,PREL

      517     2829    3                 IF UNFID_DCB$->M$DCB.FCD THEN

   2829   1 0007BA  82C5 001F                            LB,'4000'X        31,B5
   2829   1 0007BC       4000
          1 0007BD  0581 0006                            BBF      s:2831,PREL

      518     2830    3                    GD$MSG.UNFID.OPEN = '1'B;

   2830   1 0007BF  8943 0001                            LBT,'0040'X       1,B3
   2830   1 0007C1       0040
          1 0007C2  0F81 0009                            B        s:2835,PREL

      519     2831    3                 ELSE GD$MSG.UNFID.WAS_OPEN = '1'B;

   2831   1 0007C4  8943 0001                            LBT,'0020'X       1,B3
   2831   1 0007C6       0020

      520     2832    3                 END;
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:89   

   2832   1 0007C7  0F81 0004                            B        s:2835,PREL

      521     2833    2              ELSE GD$MSG.UNFID.NEVER_OPEN = '1'B;

   2833   1 0007C9  8943 0001                            LBT,'0010'X       1,B3
   2833   1 0007CB       0010

      522     2834    2              END;

      523     2835    1           GD$MSG.UNFID.DCBNAME = UNFID_DCB$->M$DCB.DCBNAME;

   2835   1 0007CC  E2C5 0032                            LLH,R6   50,B5
          1 0007CE  EF47 00AC                            STR,R6   DD_NOT_IS+2,AUTO
          1 0007D0  AB85                                 LAB,B2   ,B5
          1 0007D1  2C64                                 LDV,R2   100
          1 0007D2  6E01                                 ADV,R6   1
          1 0007D3  3C07                                 LDV,R3   7
          1 0007D4  7C20                                 LDV,R7   32
          1 0007D5  D380 0000 0000  xent                 LNJ,B5   X6C_ALRZ

      524     2836    1           GD$MSG.UNFID.NAME = UNFID_DCB$->M$DCB.NAME;

   2836   1 0007D8  ACC7 001D                            LDB,B2   UNFID_DCB$,AUTO
          1 0007DA  2C0A                                 LDV,R2   10
          1 0007DB  6C20                                 LDV,R6   32
          1 0007DC  BCC7 0006                            LDB,B3   @BUFFER,AUTO
          1 0007DE  3C2B                                 LDV,R3   43
          1 0007DF  0008                                 MMM

      525     2837    1           GD$MSG.UNFID.ACCT = PINCRW(UNFID_DCB$,

   2837   1 0007E0  8CC7 001D                            LDI      UNFID_DCB$,AUTO
          1 0007E2  84C7 001D                            SID      UNFID_DCB$,AUTO
          1 0007E4  8447 001D                            AID      UNFID_DCB$,AUTO
          1 0007E6  8470 0000 0015                       AID      21,IMO
          1 0007E9  8D47 00AC                            SDI      DD_NOT_IS+2,AUTO
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:90   
          1 0007EB  ACC7 00AC                            LDB,B2   DD_NOT_IS+2,AUTO
          1 0007ED  2C00                                 LDV,R2   0
          1 0007EE  6C08                                 LDV,R6   8
          1 0007EF  3C4B                                 LDV,R3   75
          1 0007F0  0008                                 MMM

      526     2838    1             POFFW(ADDR(UNFID_DCB$->M$DCB.ACCT),
      527     2839    1             UNFID_DCB$))->B$8CHARS;
      528     2840    1           GD$MSG.FNC = %GD#RSPUNFID;

   2840   1 0007F1  6C2A                                 LDV,R6   42
          1 0007F2  E783                                 STH,R6   ,B3

      529     2841    1           CALL GDI$SEND_RESPONSE(SIZE,BUFFER);

   2841   1 0007F3  BBC7 0004                            LAB,B3   @SIZE,AUTO
          1 0007F5  CBF0 0200                            LAB,B4   512,IMO
          1 0007F7  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_RESPONSE
          1 0007FA       0001                            DC       s:2842,PREL

      530     2842    1           RETURN;

   2842   1 0007FB  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      531     2843    1   GDM$TSA: ENTRY(SIZE,BUFFER);

   2843   1 0007FE  D380 0000 0000  xent GDM$TSA         LNJ,B5   X6A_AUTO_2
          1 000801       00C0 0002                       DC       192,2

      532     2844
      533     2845    1           ADR$ = GD$MSG.TSA.ADDRESS$;

   2845   1 000803  ECC7 0006                            LDB,B6   @BUFFER,AUTO
          1 000805  DCC6 0001                            LDB,B5   1,B6
          1 000807  DFC7 0010                            STB,B5   ADR$,AUTO

      534     2846    1           IF ADR = BITBIN('10000'X) THEN  /* We want the current TSA            */
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:91   

   2846   1 000809  8C80 0000 000B  00                   LDI      FPT_WAIT_4+10
          1 00080C  70CC                                 DOR,R7   12
          1 00080D  84C7 0010                            SID      ADR$,AUTO
          1 00080F  6981 000C                            BNEZ,R6  s:2849,PREL
          1 000811  7981 000A                            BNEZ,R7  s:2849,PREL

      535     2847    1              ADR$ = GD_DATA.DELTAINFO.TSA$;

   2847   1 000813  CC80 0000 0000  xsym                 LDB,B4   GD$DELTA_DATA$
          1 000816  BCC4 0006                            LDB,B3   6,B4
          1 000818  BFC7 0010                            STB,B3   ADR$,AUTO
          1 00081A  0F81 0005                            B        s:2851,PREL

      536     2848    1           ELSE
      537     2849    1              ADR$ = GD$MSG.TSA.ADDRESS$;

   2849   1 00081C  CCC6 0001                            LDB,B4   1,B6
          1 00081E  CFC7 0010                            STB,B4   ADR$,AUTO

      538     2850
      539     2851    1           CALL GDU$SETUP_WINDOW_USER(ADR$,GD_DATA.GD.USERNO) ALTRET(BADADR);

   2851   1 000820  DC80 0000 0000  xsym                 LDB,B5   GD$DELTA_DATA$
          1 000823  CBC5 016B                            LAB,B4   363,B5
          1 000825  CFC7 00AE                            STB,B4   DD_NOT_IS+4,AUTO
          1 000827  BBC7 0010                            LAB,B3   ADR$,AUTO
          1 000829  BFC7 00AC                            STB,B3   DD_NOT_IS+2,AUTO
          1 00082B  BBC7 00AC                            LAB,B3   DD_NOT_IS+2,AUTO
          1 00082D  CBF0 0200                            LAB,B4   512,IMO
          1 00082F  E380 0000 0000  xent                 LNJ,B6   GDU$SETUP_WINDOW_USER
          1 000832       001A                            DC       s:2858,PREL

      540     2852    1           ADDR(GD$MSG.TSA.TSAL$)->G$TSA = ADR$->G$TSA;

   2852   1 000833  ACC7 0010                            LDB,B2   ADR$,AUTO
          1 000835  2C00                                 LDV,R2   0
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:92   
          1 000836  6C74                                 LDV,R6   116
          1 000837  BCC7 0006                            LDB,B3   @BUFFER,AUTO
          1 000839  3C06                                 LDV,R3   6
          1 00083A  0008                                 MMM

      541     2853    1           SIZE=%GD#RSPTSASIZE;

   2853   1 00083B  ECC7 0004                            LDB,B6   @SIZE,AUTO
          1 00083D  6C7A                                 LDV,R6   122
          1 00083E  EF06                                 STR,R6   ,B6

      542     2854    1           GD$MSG.FNC = %GD#RSPTSA;

   2854   1 00083F  5C3E                                 LDV,R5   62
          1 000840  D783                                 STH,R5   ,B3

      543     2855    1           CALL GDI$SEND_RESPONSE(SIZE,BUFFER);

   2855   1 000841  BBC7 0004                            LAB,B3   @SIZE,AUTO
          1 000843  CBF0 0200                            LAB,B4   512,IMO
          1 000845  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_RESPONSE
          1 000848       0001                            DC       s:2856,PREL

      544     2856    1           RETURN;

   2856   1 000849  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      545     2857    1   BADADR:
      546     2858    1           CALL GDI$SEND_ERROR_RESPONSE(SIZE,BUFFER,%GD#RSPBADADR);

   2858   1 00084C  EBF0 0037            BADADR          LAB,B6   55,IMO
          1 00084E  EFC7 00B0                            STB,B6   DD_NOT_IS+6,AUTO
          1 000850  DCC7 0006                            LDB,B5   @BUFFER,AUTO
          1 000852  DFC7 00AE                            STB,B5   DD_NOT_IS+4,AUTO
          1 000854  CCC7 0004                            LDB,B4   @SIZE,AUTO
          1 000856  CFC7 00AC                            STB,B4   DD_NOT_IS+2,AUTO
          1 000858  BBC7 00AC                            LAB,B3   DD_NOT_IS+2,AUTO
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:93   
          1 00085A  CBF0 0300                            LAB,B4   768,IMO
          1 00085C  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_ERROR_RESPONSE
          1 00085F       0001                            DC       s:2859,PREL

      547     2859    1           RETURN;

   2859   1 000860  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      548     2860        /**/
      549     2861    1   END GDM$DISPLAY;
      550     2862        %EOD;

PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:94   
--  Include file information  --

   G_ROS_M.:E05TOU  is referenced.
   DD_SRTN_C.:E05TOU  is referenced.
   DD_ACODE_C.:E05TOU  is referenced.
   DD_ICODE_C.:E05TOU  is referenced.
   DD$DITEM.:E05TOU  cannot be made into a system file and is referenced.
   KH$CHN.:E05TOU  is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
   GD$MSG_M.:E05TOU  is referenced.
   GDA_EQUS_E.:E05TOU  is referenced.
   GD_EQUS_E.:E05TOU  is referenced.
   GD_DATA_M.:E05TOU  is referenced.
   GD_STATIC_DATA.:E05TOU  cannot be made into a system file and is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GDM$DISPLAY.
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:95   

 **** Variables and constants ****

  ****  Section 000 RoData GDM$DISPLAY

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     1-0-0/w STRC(160)   r     1 FPT_WAIT_4                 0-0-0/w UBIN(16)    r     1 WTTIME

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @BUFFER                    4-0-0/w PTR         r     1 @SIZE
    10-0-0/w UBIN(32)    r     1 ADR                       10-0-0/w PTR         r     1 ADR$
    20-0-0/w UBIN(16)    r     1 ARRAY_CUR                 22-0-0/w BIT         r     1 ARRAY_FIRST
    21-0-0/w UBIN(16)    r     1 ARRAY_HIGH                24-0-0/w UBIN(16)    r     1 BITOFF
    *0-0-0/w ACHR        r     1 BUFFER                    1A-0-0/w UBIN(32)    r     1 DD_ADDRESS
    23-0-0/w UBIN(16)    r     1 DD_BITSIZE                A9-0-0/w UBIN(16)    r     1 DD_DESC#
    1F-0-0/w BIT         r     1 DD_IS_PTR                 AA-0-0/w BIT         r     1 DD_NOT_IS
    A8-0-0/w UBIN(16)    r     1 DD_SEG                    A7-0-0/w UBIN(16)    r     1 DSIZE
    16-0-0/w PTR         r     1 FIRST$                    *0-0-0/w STRC(3344)  r     1 GD$MSG
    12-0-0/w SBIN(16)    r     1 I                         15-0-0/w UBIN(16)    r     1 J
    13-0-0/w SBIN(16)    r     1 RANGE                     18-0-0/w PTR         r     1 RSP_DATA$
    *0-0-0/w UBIN(16)    r     1 SIZE                      27-0-0/w CHAR(256)   r     1 TEMP_DATA
    25-0-0/w PTR         r     1 TEMP_DATA$
    27-0-0/w UBIN(16)    r     1 TEMP_DATA_(0:127)
    14-0-0/w UBIN(16)    r     1 TRANGE                    1D-0-0/w PTR         r     1 UNFID_DCB$
    1C-0-0/w UBIN(16)    r     1 UNFID_DCBNUM

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 G$ROS$                     0-0-0/w PTR         r     1 GD$DELTA_DATA$
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:96   

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w BIT (8)     r     1 B$8CHARS(0:7)
     0-0-0/w STRC        r     1 B$BITS                     0-0-0/w STRC(8)     r     1 B$BYTES
     0-0-0/w STRC(32)    r     1 B$PTR                      0-0-0/w STRC(928)   r     1 G$ROS
     0-0-0/w STRC(928)   r     1 G$TSA                      0-0-0/w STRC(16704) r     1 GD_DATA
     0-0-0/w STRC(80)    r     1 GH_VLD                     0-0-0/w ASTR(808)   r     1 M$DCB
     0-0-0/w UBIN(16)    r     1 MEMORY(0:999)


   Procedure GDM$DISPLAY requires 2147 words for executable code.
   Procedure GDM$DISPLAY requires 192 words of local(AUTO) storage.
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:97   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:98   
          MINI XREF LISTING

ADR
      2376**DCL      2846>>IF
ADR$
      2375**DCL      2376--REDEF    2410<<ASSIGN   2464<>CALL     2470<>CALL     2492<>CALL     2494>>ASSIGN
      2522<>CALL     2561<<ASSIGN   2562<>CALL     2571>>IF       2573>>ASSIGN   2582<<ASSIGN   2583<>CALL
      2584>>ASSIGN   2623<<ASSIGN   2624<>CALL     2632>>IF       2641<<ASSIGN   2641>>ASSIGN   2644<>CALL
      2649>>IF       2663<<ASSIGN   2664<>CALL     2670>>ASSIGN   2676<<ASSIGN   2676>>ASSIGN   2679<>CALL
      2683>>ASSIGN   2717<>CALL     2725>>CALL     2734<>CALL     2746>>ASSIGN   2750>>ASSIGN   2759>>ASSIGN
      2765>>ASSIGN   2768>>ASSIGN   2769>>ASSIGN   2770>>ASSIGN   2773<>CALL     2845<<ASSIGN   2847<<ASSIGN
      2849<<ASSIGN   2851<>CALL     2852>>ASSIGN
ARRAY_CUR
      2388**DCL      2431<<ASSIGN   2432<>CALL     2443>>ASSIGN   2711<>CALL
ARRAY_FIRST
      2390**DCL      2430<<ASSIGN   2432<>CALL     2441>>IF       2711<>CALL
ARRAY_HIGH
      2389**DCL      2432<>CALL     2442>>ASSIGN   2711<>CALL
B$8CHARS
      2386**DCL      2837>>ASSIGN
B$BITS.B
      2394**DCL      2477<<ASSIGN   2477>>ASSIGN   2746<<ASSIGN   2746>>ASSIGN   2750<<ASSIGN   2750>>ASSIGN
B$BYTES.B
      2403**DCL      2494>>ASSIGN   2759<<ASSIGN   2765<<ASSIGN
B$PTR.C
      2396**DCL      2770<<ASSIGN
B$PTR.MBZ
      2397**DCL      2769<<ASSIGN
B$PTR.W
      2398**DCL      2768<<ASSIGN
BADADR
      2858**LABEL    2851--CALLALT
BITOFF
      2392**DCL      2424<<ASSIGN   2432<>CALL     2447<<ASSIGN   2471>>IF       2475>>IF       2476>>DOINDEX
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:99   
      2476>>DOINDEX  2477>>ASSIGN   2493>>DOINDEX  2493>>DOINDEX  2494>>ASSIGN   2709<<ASSIGN   2711<>CALL
      2718>>ASSIGN   2745>>DOINDEX  2745>>DOINDEX  2746>>ASSIGN   2749>>DOINDEX  2749>>DOINDEX  2750>>ASSIGN
      2754>>IF       2758>>DOINDEX  2759>>ASSIGN   2761>>IF       2764>>DOINDEX  2773<>CALL
BUFFER
      1720**DCL        24--PROC     1738--REDEF    2421--ENTRY    2435<>CALL     2488<>CALL     2500<>CALL
      2509<>CALL     2528<>CALL     2534<>CALL     2554--ENTRY    2597<>CALL     2607--ENTRY    2666<>CALL
      2696<>CALL     2702<>CALL     2706--ENTRY    2714<>CALL     2726<>CALL     2735<>CALL     2740<>CALL
      2755<>CALL     2775<>CALL     2780<>CALL     2784--ENTRY    2812<>CALL     2819<>CALL     2841<>CALL
      2843--ENTRY    2855<>CALL     2858<>CALL
COMMON_DISPLAY
      2508**LABEL    2412--GOTO
DD_ADDRESS
      2383**DCL      2432<>CALL     2450>>ASSIGN   2457<<ASSIGN   2464<>CALL     2612<<ASSIGN   2619<>CALL
      2711<>CALL     2717<>CALL
DD_BITSIZE
      2391**DCL      2423<<ASSIGN   2432<>CALL     2446<<ASSIGN   2461<<ASSIGN   2467>>IF       2469>>IF
      2469<<ASSIGN   2471>>IF       2476>>DOINDEX  2490>>IF       2491<<ASSIGN   2493>>DOINDEX  2496>>ASSIGN
      2505>>ASSIGN   2708<<ASSIGN   2711<>CALL     2718>>ASSIGN   2745>>DOINDEX  2749>>DOINDEX  2750>>ASSIGN
      2761>>IF       2764>>DOINDEX  2772>>ASSIGN
DD_DESC#
      2406**DCL      2432<>CALL     2452>>ASSIGN   2459<<ASSIGN   2464<>CALL     2614<<ASSIGN   2619<>CALL
      2711<>CALL     2717<>CALL
DD_IS_PTR
      2387**DCL      2432<>CALL     2449>>ASSIGN   2464<>CALL     2711<>CALL     2717<>CALL
DD_NOT_IS
      2407**DCL      2432<>CALL     2453>>ASSIGN   2460<<ASSIGN   2464<>CALL     2615<<ASSIGN   2619<>CALL
      2711<>CALL     2717<>CALL
DD_SEG
      2405**DCL      2432<>CALL     2451>>ASSIGN   2458<<ASSIGN   2464<>CALL     2613<<ASSIGN   2619<>CALL
      2711<>CALL     2717<>CALL
DSIZE
      2404**DCL      2425<<ASSIGN   2464<>CALL     2468<<ASSIGN   2470<>CALL     2471>>IF       2480>>DOINDEX
      2506>>ASSIGN   2522<>CALL     2524>>ASSIGN   2619<>CALL     2717<>CALL
ERR_RSP
      2523**LABEL    2473--GOTO     2492--CALLALT  2522--CALLALT  2562--CALLALT  2624--CALLALT  2664--CALLALT
FIRST$
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:100  
      2381**DCL      2619<>CALL     2623>>ASSIGN   2663>>ASSIGN
FPT_WAIT_4
      1892**DCL      2499<>CALL
FPT_WAIT_4.V
      1896**DCL      1895--DCLINIT
G$ROS.AUTO_DS$
      1696**DCL      1697--REDEF
G$ROS.AUTO_T$
      1697**DCL      1697--REDEF
G$ROS.NUMDCBS
      1696**DCL      2787>>ASSIGN   2798>>ASSIGN   2799>>DOINDEX  2809>>IF
G$ROS$
      1718**DCL      2787>>ASSIGN   2798>>ASSIGN   2799>>DOINDEX  2809>>IF
G$TSA
      1946**DCL      2852<<ASSIGN   2852>>ASSIGN
G$TSA.ISA.P$$
      2107**DCL      2107--REDEF
G$TSA.P$$
      1978**DCL      1978--REDEF    1979--REDEF
GD$DELTA_DATA$
       643**DCL       657--IMP-PTR  2429>>ASSIGN   2435>>CALL     2440>>IF       2471>>IF       2489>>ASSIGN
      2523>>IF       2645>>IF       2665>>IF       2680>>IF       2710>>ASSIGN   2739>>IF       2773>>CALL
      2847>>ASSIGN   2851>>CALL
GD$MSG.BRKRQS.IF$CONST.SIZE
      1789**DCL      1789--REDEF
GD$MSG.BRKRQS.IF$CONST.TEXT
      1789**DCL      1790--REDEF    1790--REDEF    1791--REDEF    1792--REDEF
GD$MSG.BRKRSP.BRK#
      1803**DCL      1803--REDEF
GD$MSG.BRKRSP.USER#
      1803**DCL      1803--REDEF
GD$MSG.CHAR#
      1742**DCL      2496<<ASSIGN   2497>>ASSIGN
GD$MSG.DISPCHAR
      1743**DCL      2494<<ASSIGN
GD$MSG.DISPMEM.ADR$
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:101  
      1744**DCL      2410>>ASSIGN
GD$MSG.DISPMEM.DATA
      1744**DCL      2409--ASSIGN
GD$MSG.DISPMEM_D.ADDRESS
      1750**DCL      2450<<ASSIGN   2457>>ASSIGN
GD$MSG.DISPMEM_D.ARRAY_CUR
      1750**DCL      2431>>ASSIGN   2443<<ASSIGN
GD$MSG.DISPMEM_D.ARRAY_FIRST
      1749**DCL      2430>>ASSIGN
GD$MSG.DISPMEM_D.ARRAY_HIGH
      1750**DCL      2442<<ASSIGN
GD$MSG.DISPMEM_D.CONTINUE
      1749**DCL      2485<<ASSIGN
GD$MSG.DISPMEM_D.DATA
      1755**DCL      2466--ASSIGN   2481<<ASSIGN
GD$MSG.DISPMEM_D.DATA_DESC
      1755**DCL      2429--ASSIGN
GD$MSG.DISPMEM_D.DATA_SIZE
      1750**DCL      2506<<ASSIGN   2524<<ASSIGN
GD$MSG.DISPMEM_D.DD_EXISTS
      1749**DCL      2426>>IF
GD$MSG.DISPMEM_D.DESC#
      1755**DCL      2452<<ASSIGN   2459>>ASSIGN
GD$MSG.DISPMEM_D.DUMPCMD
      1749**DCL      2467>>IF       2468>>IF
GD$MSG.DISPMEM_D.EVALCMD
      1755**DCL      2463>>IF
GD$MSG.DISPMEM_D.EXPR_OP
      1749**DCL      2445>>IF
GD$MSG.DISPMEM_D.IS_PTR
      1749**DCL      2449<<ASSIGN
GD$MSG.DISPMEM_D.NOT_IS
      1749**DCL      2453<<ASSIGN   2460>>ASSIGN
GD$MSG.DISPMEM_D.REAL_SIZE
      1749**DCL      2504>>IF
GD$MSG.DISPMEM_D.SEG
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:102  
      1755**DCL      2451<<ASSIGN   2458>>ASSIGN
GD$MSG.DISPMEM_D.SIZE
      1755**DCL      2505<<ASSIGN
GD$MSG.FNC
      1738**DCL      2486<<ASSIGN   2498<<ASSIGN   2507<<ASSIGN   2518<<ASSIGN   2596<<ASSIGN   2695<<ASSIGN
      2701<<ASSIGN   2779<<ASSIGN   2811<<ASSIGN   2818<<ASSIGN   2840<<ASSIGN   2854<<ASSIGN
GD$MSG.LETMEM_D.DATA_DESC
      1768**DCL      2710--ASSIGN
GD$MSG.LETMEM_D.TYPE
      1761**DCL      2743>>DOCASE
GD$MSG.LETMEM_D.VALUE.BITS.TRING
      1763**DCL      2746--ASSIGN
GD$MSG.LETMEM_D.VALUE.CONS.TANT
      1763**DCL      2750--ASSIGN
GD$MSG.LETMEM_D.VALUE.P.C
      1768**DCL      2770>>ASSIGN
GD$MSG.LETMEM_D.VALUE.P.W
      1768**DCL      2768>>ASSIGN
GD$MSG.LETMEM_D.VALUE.SIZE
      1761**DCL      1761--REDEF    2758>>DOINDEX
GD$MSG.LETMEM_D.VALUE.TEXT
      1762**DCL      1762--REDEF    1762--REDEF    1763--REDEF    1764--REDEF    2759>>ASSIGN
GD$MSG.MESSAGE
      1743**DCL      1743--REDEF    1744--REDEF    1744--REDEF    1745--REDEF    1756--REDEF    1769--REDEF
      1774--REDEF    1781--REDEF    1797--REDEF    1802--REDEF    1808--REDEF    1809--REDEF    1838--REDEF
      1840--REDEF    1851--REDEF    1858--REDEF    1870--REDEF
GD$MSG.MODMEM.MM.FLGS
      1769**DCL      2570>>IF
GD$MSG.MODMEM.MODCNT
      1773**DCL      2560>>DOINDEX  2581>>DOINDEX
GD$MSG.MODMEM.MODS.ADR$
      1773**DCL      2561>>ASSIGN   2582>>ASSIGN
GD$MSG.MODMEM.MODS.NEW
      1773**DCL      2584>>ASSIGN
GD$MSG.MODMEM.MODS.OLD
      1773**DCL      2571>>IF       2573<<ASSIGN
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:103  
GD$MSG.MODMEM.NM
      1769**DCL      2556<<ASSIGN   2578>>IF
GD$MSG.MODMEM.NM.FLGS
      1769**DCL      2572<<ASSIGN
GD$MSG.MODMEM.SO
      1773**DCL      2580<<ASSIGN   2591<<ASSIGN
GD$MSG.MODMEM_D.ADDRESS
      1779**DCL      2612>>ASSIGN
GD$MSG.MODMEM_D.DESC#
      1780**DCL      2614>>ASSIGN
GD$MSG.MODMEM_D.MM.FLGS
      1774**DCL      2631>>IF       2648>>IF
GD$MSG.MODMEM_D.MODCNT
      1779**DCL      2628>>IF       2629>>ASSIGN   2635>>IF       2642>>IF       2647>>DOWHILE  2652>>IF
      2671>>IF       2684>>IF
GD$MSG.MODMEM_D.MODS.NEW
      1780**DCL      2670>>ASSIGN   2683>>ASSIGN
GD$MSG.MODMEM_D.MODS.OLD
      1780**DCL      2632>>IF       2649>>IF
GD$MSG.MODMEM_D.NOT_IS
      1779**DCL      2615>>ASSIGN
GD$MSG.MODMEM_D.SEG
      1779**DCL      2613>>ASSIGN
GD$MSG.MODMEM_D.SO
      1779**DCL      2694<<ASSIGN   2700<<ASSIGN
GD$MSG.SUBFNC
      1738**DCL      1738--REDEF    1742--REDEF
GD$MSG.TSA.ADDRESS$
      1809**DCL      2845>>ASSIGN   2849>>ASSIGN
GD$MSG.TSA.I
      1810**DCL      1810--REDEF
GD$MSG.TSA.S
      1812**DCL      1812--REDEF
GD$MSG.TSA.TSAL$
      1809**DCL      2852--ASSIGN
GD$MSG.UNFID.ACCT
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:104  
      1857**DCL      2837<<ASSIGN
GD$MSG.UNFID.DCB#
      1851**DCL      2795>>ASSIGN   2825<<ASSIGN
GD$MSG.UNFID.DCBNAME
      1856**DCL      2802>>IF       2835<<ASSIGN
GD$MSG.UNFID.FUN#
      1855**DCL      2823<<ASSIGN
GD$MSG.UNFID.K13
      1855**DCL      2794>>IF
GD$MSG.UNFID.NAME
      1857**DCL      2836<<ASSIGN
GD$MSG.UNFID.NEVER_OPEN
      1855**DCL      2833<<ASSIGN
GD$MSG.UNFID.NUMDCBS
      1855**DCL      2786>>IF       2787<<ASSIGN   2788--ASSIGN   2790<<ASSIGN   2790>>ASSIGN   2791--ASSIGN
GD$MSG.UNFID.OPEN
      1855**DCL      2830<<ASSIGN
GD$MSG.UNFID.ORG#
      1856**DCL      2824<<ASSIGN
GD$MSG.UNFID.RES
      1856**DCL      2827<<ASSIGN
GD$MSG.UNFID.WAS_OPEN
      1855**DCL      2831<<ASSIGN
GD$MSG.USERQS.ASDT$
      1838**DCL      1838--REDEF    1839--REDEF
GDI$SEND_ERROR_RESPONSE
      2309**DCL-ENT  2435--CALL     2534--CALL     2666--CALL     2714--CALL     2726--CALL     2735--CALL
      2740--CALL     2755--CALL     2775--CALL     2858--CALL
GDI$SEND_RESPONSE
      2308**DCL-ENT  2488--CALL     2500--CALL     2509--CALL     2528--CALL     2597--CALL     2696--CALL
      2702--CALL     2780--CALL     2812--CALL     2819--CALL     2841--CALL     2855--CALL
GDK$MPTR
      2365**DCL-ENT  2464--CALL     2619--CALL     2717--CALL
GDK$RESADDR
      2313**DCL-ENT  2432--CALL     2711--CALL
GDM$GRAB16
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:105  
      2366**DCL-ENT  2470--CALL     2522--CALL
GDM$LETDEC
      2312**DCL-ENT  2773--CALL
GDU$SETUP_WINDOW
      2310**DCL-ENT  2492--CALL     2562--CALL     2583--CALL     2644--CALL     2679--CALL
GDU$SETUP_WINDOW_USER
      2311**DCL-ENT  2851--CALL
GD_DATA.DELTAINFO.TSA$
       657**DCL      2847>>ASSIGN
GD_DATA.GD.ANSWERED
       667**DCL      2440>>IF       2489<<ASSIGN
GD_DATA.GD.DYNSP$
       670**DCL       670--REDEF
GD_DATA.GD.ERROR
       678**DCL      2435<>CALL
GD_DATA.GD.MODE
       660**DCL      2523>>IF
GD_DATA.GD.STEP_BRKPNT.ADR$
       671**DCL       672--REDEF
GD_DATA.GD.STEP_BRKPNT.START$
       672**DCL       672--REDEF
GD_DATA.GD.USERNO
       677**DCL      2851<>CALL
GD_DATA.GD.VLD
       678**DCL      2471--IF       2645--IF       2665--IF       2680--IF       2739--IF
GD_DATA.MISC.DESC$
       681**DCL      2429<<ASSIGN   2710<<ASSIGN   2773<>CALL
GH_VLD.STATUS
      1916**DCL      2471>>IF       2645>>IF       2665>>IF       2680>>IF       2739>>IF
I
      2377**DCL      2476<<DOINDEX  2477>>ASSIGN   2477>>ASSIGN   2480<<DOINDEX  2481>>ASSIGN   2481>>ASSIGN
      2493<<DOINDEX  2494>>ASSIGN   2494>>ASSIGN   2560<<DOINDEX  2561>>ASSIGN   2570>>IF       2571>>IF
      2572>>ASSIGN   2573>>ASSIGN   2581<<DOINDEX  2582>>ASSIGN   2584>>ASSIGN   2630<<DOINDEX  2631>>IF
      2632>>IF       2632>>IF       2635>>IF       2647>>DOWHILE  2648>>IF       2649>>IF       2649>>IF
      2652>>IF       2656<<ASSIGN   2656>>ASSIGN   2669<<DOINDEX  2670>>ASSIGN   2670>>ASSIGN   2671>>IF
      2682>>DOWHILE  2683>>ASSIGN   2683>>ASSIGN   2684>>IF       2687<<ASSIGN   2687>>ASSIGN   2719<<ASSIGN
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:106  
      2725>>CALL     2729<<ASSIGN   2729>>ASSIGN   2745<<DOINDEX  2746>>ASSIGN   2746>>ASSIGN   2749<<DOINDEX
      2750>>ASSIGN   2750>>ASSIGN   2758<<DOINDEX  2759>>ASSIGN   2759>>ASSIGN   2761>>IF       2764>>DOINDEX
      2799<<DOINDEX  2800--ASSIGN   2803>>ASSIGN
J
      2380**DCL      2764<<DOINDEX  2765>>ASSIGN   2772<<ASSIGN   2773<>CALL
LETMEM_DONE
      2779**LABEL    2762--GOTO
LOOP_EXIT
      2801**LABEL    2804--GOTO
M$DCB.ACCT
      2346**DCL      2837--ASSIGN
M$DCB.DCBNAME
      2361**DCL      2802>>IF       2835>>ASSIGN
M$DCB.DCBNAME.L
      2361**DCL      2361--IMP-SIZ  2802>>IF       2835>>ASSIGN
M$DCB.EOMCHAR
      2352**DCL      2352--REDEF    2353--REDEF
M$DCB.FCD
      2348**DCL      2829>>IF
M$DCB.FCI
      2348**DCL      2828>>IF
M$DCB.FLDID
      2351**DCL      2351--REDEF
M$DCB.FUN
      2350**DCL      2823>>ASSIGN
M$DCB.NAME
      2345**DCL      2836>>ASSIGN
M$DCB.ORG
      2349**DCL      2824>>ASSIGN
M$DCB.RES
      2346**DCL      2347--REDEF
M$DCB.RESNT
      2347**DCL      2827>>ASSIGN
M$WAIT
       182**DCL-ENT  2499--CALL
MAP_ADDRESS
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:107  
      2367**DCL-ENT  2624--CALL     2664--CALL     2725--CALL     2734--CALL
MEMORY
      1918**DCL      2571>>IF       2573>>ASSIGN   2584<<ASSIGN   2632>>IF       2649>>IF       2670<<ASSIGN
      2683<<ASSIGN
MOD_DONE
      2685**LABEL    2673--GOTO     2686--GOTO
MSG
      2504**LABEL    2463--GOTO
NO_MATCH
      2695**LABEL    2634--GOTO     2651--GOTO
OLD_OK
      2649**LABEL    2637--GOTO     2654--GOTO
RANGE
      2378**DCL      2624<>CALL     2628>>IF       2629<<ASSIGN   2630>>DOINDEX  2640<<ASSIGN   2640>>ASSIGN
      2641>>ASSIGN   2642>>IF       2664<>CALL     2669>>DOINDEX  2675<<ASSIGN   2675>>ASSIGN   2676>>ASSIGN
      2677>>IF       2683>>ASSIGN   2718<<ASSIGN   2720>>IF       2721>>DOWHILE  2722>>IF       2724>>ASSIGN
      2730<<ASSIGN   2730>>ASSIGN   2734<>CALL
RSP_DATA$
      2382**DCL      2409<<ASSIGN   2466<<ASSIGN   2477>>ASSIGN   2522<>CALL
SIZE
      1877**DCL        24--PROC     1720--IMP-SIZ  2421--ENTRY    2435<>CALL     2435>>CALL     2487<<ASSIGN
      2488<>CALL     2488>>CALL     2497<<ASSIGN   2500<>CALL     2500>>CALL     2508<<ASSIGN   2509<>CALL
      2509>>CALL     2517<<ASSIGN   2528<>CALL     2528>>CALL     2534<>CALL     2534>>CALL     2554--ENTRY
      2597<>CALL     2597>>CALL     2607--ENTRY    2666<>CALL     2666>>CALL     2696<>CALL     2696>>CALL
      2702<>CALL     2702>>CALL     2706--ENTRY    2714<>CALL     2714>>CALL     2726<>CALL     2726>>CALL
      2735<>CALL     2735>>CALL     2740<>CALL     2740>>CALL     2755<>CALL     2755>>CALL     2775<>CALL
      2775>>CALL     2780<>CALL     2780>>CALL     2784--ENTRY    2810<<ASSIGN   2812<>CALL     2812>>CALL
      2817<<ASSIGN   2819<>CALL     2819>>CALL     2826<<ASSIGN   2841<>CALL     2841>>CALL     2843--ENTRY
      2853<<ASSIGN   2855<>CALL     2855>>CALL     2858<>CALL     2858>>CALL
TEMP_DATA
      2400**DCL      2401--REDEF    2465--ASSIGN
TEMP_DATA$
      2399**DCL      2465<<ASSIGN   2470<>CALL     2477>>ASSIGN
TEMP_DATA_
      2401**DCL      2481>>ASSIGN
TRANGE
PL6.E3A0      #001=GDM$DISPLAY File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:108  
      2379**DCL      2723<<ASSIGN   2724<<ASSIGN   2725<>CALL
UNFID_DCB$
      2385**DCL      2788<<ASSIGN   2789>>DOWHILE  2791<<ASSIGN   2800<<ASSIGN   2801>>IF       2802>>IF
      2802>>IF       2815<<ASSIGN   2816>>IF       2823>>ASSIGN   2824>>ASSIGN   2827>>ASSIGN   2828>>IF
      2829>>IF       2835>>ASSIGN   2835>>ASSIGN   2836>>ASSIGN   2837>>ASSIGN   2837>>ASSIGN   2837>>ASSIGN
UNFID_DCBNUM
      2384**DCL      2795<<ASSIGN   2798<<ASSIGN   2803<<ASSIGN   2809>>IF       2815--ASSIGN   2825>>ASSIGN
WTTIME
      1878**DCL      1895--DCLINIT

PL6.E3A0      #002=GDM$GRAB16 File=GDM$MEMORY.:E05TSI                            TUE 07/29/97 21:28 Page:109  
      551        1        /*T***********************************************************/
      552        2        /*T*                                                         */
      553        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      554        4        /*T*                                                         */
      555        5        /*T***********************************************************/
      556        6        /*F* NAME:    GDM$GRAB16
      557        7             PURPOSE: This routine grabs a 16-word chunk of user memory and
      558        8                      copies it into debugger memory.
      559        9             CALL:    CALL GDM$GRAB16(DEST$,SOURCE$)
      560       10             DESCRIPTION: This maps onto some memory in the domain under
      561       11                          debug and copies some data from that domain into
      562       12                          an area in the debugger's domain.
      563       13                          It verifies that the address to display is valid
      564       14                          and reports an error if not.  The specified address
      565       15                          plus the following 15 words are returned.
      566       16                                                                                      */
      567       17        GDM$GRAB16: PROC(DEST$,SOURCE$,DSIZE) ALTRET;
      568       18        /**/
      569       19        /*  PARAMETERS  */
      570       20        /**/
      571       21    1   DCL DEST$ PTR;
      572       22    1   DCL SOURCE$ PTR;
      573       23        /**/
      574       24        /*  INCLUDES  */
      575       25        /**/
      576       26        %INCLUDE GH_HARDWARE_M;
      577      124        %INCLUDE GD_STATIC_DATA;
      578      597 S      %INCLUDE G_LCP6_E;                      /* LCP6 EQUS                          */
      579      598        /**/
      580      599        /*  LOCAL  */
      581      600        /**/
      582      601    1   DCL I SBIN;
      583      602    1   DCL ADR$ PTR;                           /* Scratch SOURCE$                    */
      584      603    1   DCL RANGE UBIN;
      585      604    1   DCL DSIZE UBIN;
      586      605        /**/
      587      606        /*  BASED  */
PL6.E3A0      #002=GDM$GRAB16 File=GDM$MEMORY.:E05TSI                            TUE 07/29/97 21:28 Page:110  
      588      607        /**/
      589      608    1   DCL MEMORY(0:999) UBIN BASED;
      590      609        %GH_VLD (STCLASS=BASED);
      591      623        /**/
      592      624        /*  ENTRIES  */
      593      625        /**/
      594      626    1   DCL GDU$SETUP_WINDOW ENTRY(1) ALTRET;
      595      627    1   DCL MAP_ADDRESS ENTRY(2) ALTRET;
      596      628        /*
      597      629          Map onto the first segment of the source data area.
      598      630        */
      599      631    1           ADR$ = SOURCE$;
      600      632    1           CALL MAP_ADDRESS(ADR$,RANGE) ALTRET(BAILOUT);
      601      633    2           DO I=0 TO RANGE;
      602      634    2              DEST$ -> MEMORY(I)=ADR$->MEMORY(I);
      603      635    2              END;
      604      636    1           RANGE=RANGE+1;
      605      637    1           ADR$=PINCRW(SOURCE$,RANGE);
      606      638    1           IF RANGE<16 THEN
      607      639        /*
      608      640          Try the next segment if we didn't get all of it yet.
      609      641         */
      610      642    1              CALL GDU$SETUP_WINDOW (ADR$);
      611      643    2           IF %GH@VLD.STATUS>=0 THEN DO WHILE I<16;
      612      644    2              DEST$ -> MEMORY(I)=ADR$->MEMORY(I-RANGE);
      613      645    2              I=I+1;
      614      646    2              END;
      615      647    1           IF DSIZE > I THEN DSIZE = I;
      616      648    1           RETURN;
      617      649        /**/
      618      650    1   BAILOUT: ;
      619      651    1           ALTRETURN;
      620      652        /**/
      621      653    1   END GDM$GRAB16;
      622      654        %EOD;

PL6.E3A0      #002=GDM$GRAB16 File=GDM$MEMORY.:E05TSI                            TUE 07/29/97 21:28 Page:111  
--  Include file information  --

   GD$MSG_M.:E05TOU  is referenced.
   GDA_EQUS_E.:E05TOU  is referenced.
   GD_EQUS_E.:E05TOU  is referenced.
   GD_DATA_M.:E05TOU  is referenced.
   GD_STATIC_DATA.:E05TOU  cannot be made into a system file and is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure GDM$GRAB16.

   Procedure GDM$GRAB16 requires 128 words for executable code.
   Procedure GDM$GRAB16 requires 18 words of local(AUTO) storage.

PL6.E3A0      #002=GDM$GRAB16 File=GDM$MEMORY.:E05TSI                            TUE 07/29/97 21:28 Page:112  

 Object Unit name= GDM$GRAB16                                 File name= GDM$MEMORY.:E05TOU
 UTS= JUL 29 '97 21:28:44.12 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   128     80  GDM$GRAB16

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        3  GDM$GRAB16

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 MAP_ADDRESS
 yes     yes           Std       1 GDU$SETUP_WINDOW
                       nStd      0 X6A_AUTO_3
                       nStd      0 X6A_ARET
                       nStd      0 X6A_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     GD$DELTA_DATA$                   r    G$ROS$
PL6.E3A0      #002=GDM$GRAB16 File=GDM$MEMORY.:E05TSI                            TUE 07/29/97 21:28 Page:113  


      551        1        /*T***********************************************************/
      552        2        /*T*                                                         */
      553        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      554        4        /*T*                                                         */
      555        5        /*T***********************************************************/
      556        6        /*F* NAME:    GDM$GRAB16
      557        7             PURPOSE: This routine grabs a 16-word chunk of user memory and
      558        8                      copies it into debugger memory.
      559        9             CALL:    CALL GDM$GRAB16(DEST$,SOURCE$)
      560       10             DESCRIPTION: This maps onto some memory in the domain under
      561       11                          debug and copies some data from that domain into
      562       12                          an area in the debugger's domain.
      563       13                          It verifies that the address to display is valid
      564       14                          and reports an error if not.  The specified address
      565       15                          plus the following 15 words are returned.
      566       16                                                                                      */
      567       17        GDM$GRAB16: PROC(DEST$,SOURCE$,DSIZE) ALTRET;

     17   0 000000  D380 0000 0000  xent GDM$GRAB16      LNJ,B5   X6A_AUTO_3
          0 000003       0012 0003                       DC       18,3

      568       18        /**/
      569       19        /*  PARAMETERS  */
      570       20        /**/
      571       21    1   DCL DEST$ PTR;
      572       22    1   DCL SOURCE$ PTR;
      573       23        /**/
      574       24        /*  INCLUDES  */
      575       25        /**/
      576       26        %INCLUDE GH_HARDWARE_M;
      577      124        %INCLUDE GD_STATIC_DATA;
      578      597 S      %INCLUDE G_LCP6_E;                      /* LCP6 EQUS                          */
      579      598        /**/
      580      599        /*  LOCAL  */
      581      600        /**/
      582      601    1   DCL I SBIN;
PL6.E3A0      #002=GDM$GRAB16 File=GDM$MEMORY.:E05TSI                            TUE 07/29/97 21:28 Page:114  
      583      602    1   DCL ADR$ PTR;                           /* Scratch SOURCE$                    */
      584      603    1   DCL RANGE UBIN;
      585      604    1   DCL DSIZE UBIN;
      586      605        /**/
      587      606        /*  BASED  */
      588      607        /**/
      589      608    1   DCL MEMORY(0:999) UBIN BASED;
      590      609        %GH_VLD (STCLASS=BASED);
      591      623        /**/
      592      624        /*  ENTRIES  */
      593      625        /**/
      594      626    1   DCL GDU$SETUP_WINDOW ENTRY(1) ALTRET;
      595      627    1   DCL MAP_ADDRESS ENTRY(2) ALTRET;
      596      628        /*
      597      629          Map onto the first segment of the source data area.
      598      630        */
      599      631    1           ADR$ = SOURCE$;

    631   0 000005  ECC7 0006                            LDB,B6   @SOURCE$,AUTO
          0 000007  DC86                                 LDB,B5   ,B6
          0 000008  DFC7 000B                            STB,B5   ADR$,AUTO

      600      632    1           CALL MAP_ADDRESS(ADR$,RANGE) ALTRET(BAILOUT);

    632   0 00000A  CBC7 000D                            LAB,B4   RANGE,AUTO
          0 00000C  CFC7 0010                            STB,B4   RANGE+3,AUTO
          0 00000E  BBC7 000B                            LAB,B3   ADR$,AUTO
          0 000010  BFC7 000E                            STB,B3   RANGE+1,AUTO
          0 000012  BBC7 000E                            LAB,B3   RANGE+1,AUTO
          0 000014  CBF0 0200                            LAB,B4   512,IMO
          0 000016  E380 0000 0000  xent                 LNJ,B6   MAP_ADDRESS
          0 000019       0064                            DC       s:647,PREL

      601      633    2           DO I=0 TO RANGE;

    633   0 00001A  8747 000A                            CL       I,AUTO
          0 00001C  0F81 000C                            B        s:635+2,PREL
PL6.E3A0      #002=GDM$GRAB16 File=GDM$MEMORY.:E05TSI                            TUE 07/29/97 21:28 Page:115  

      602      634    2              DEST$ -> MEMORY(I)=ADR$->MEMORY(I);

    634   0 00001E  ECC7 0004                            LDB,B6   @DEST$,AUTO
          0 000020  DC86                                 LDB,B5   ,B6
          0 000021  B847 000A                            LDR,R3   I,AUTO
          0 000023  CCC7 000B                            LDB,B4   ADR$,AUTO
          0 000025  E834                                 LDR,R6   ,B4,R3
          0 000026  EF35                                 STR,R6   ,B5,R3

      603      635    2              END;

    635   0 000027  8AC7 000A                            INC      I,AUTO
          0 000029  E847 000A                            LDR,R6   I,AUTO
          0 00002B  6873                                 BLZ,R6   s:634,SPREL
          0 00002C  E947 000D                            CMR,R6   RANGE,AUTO
          0 00002E  03F0                                 BLE      s:634,SPREL

      604      636    1           RANGE=RANGE+1;

    636   0 00002F  8AC7 000D                            INC      RANGE,AUTO

      605      637    1           ADR$=PINCRW(SOURCE$,RANGE);

    637   0 000031  ECC7 0006                            LDB,B6   @SOURCE$,AUTO
          0 000033  DC86                                 LDB,B5   ,B6
          0 000034  DFC7 000E                            STB,B5   RANGE+1,AUTO
          0 000036  F847 000D                            LDR,R7   RANGE,AUTO
          0 000038  6C00                                 LDV,R6   0
          0 000039  8447 000E                            AID      RANGE+1,AUTO
          0 00003B  8D47 000B                            SDI      ADR$,AUTO

      606      638    1           IF RANGE<16 THEN

    638   0 00003D  D847 000D                            LDR,R5   RANGE,AUTO
          0 00003F  5D10                                 CMV,R5   16
          0 000040  0281 000D                            BGE      s:643,PREL
PL6.E3A0      #002=GDM$GRAB16 File=GDM$MEMORY.:E05TSI                            TUE 07/29/97 21:28 Page:116  

      607      639        /*
      608      640          Try the next segment if we didn't get all of it yet.
      609      641         */
      610      642    1              CALL GDU$SETUP_WINDOW (ADR$);

    642   0 000042  CBC7 000B                            LAB,B4   ADR$,AUTO
          0 000044  CFC7 000E                            STB,B4   RANGE+1,AUTO
          0 000046  BBC7 000E                            LAB,B3   RANGE+1,AUTO
          0 000048  CBF0 0100                            LAB,B4   256,IMO
          0 00004A  E380 0000 0000  xent                 LNJ,B6   GDU$SETUP_WINDOW
          0 00004D       0001                            DC       s:643,PREL

      611      643    2           IF %GH@VLD.STATUS>=0 THEN DO WHILE I<16;

    643   0 00004E  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          0 000051  E846 0173                            LDR,R6   371,B6
          0 000053  6801 001A                            BLZ,R6   s:647,PREL

    643   0 000055  D847 000A                            LDR,R5   I,AUTO
          0 000057  5D10                                 CMV,R5   16
          0 000058  0881 0015                            BAGE     s:647,PREL

      612      644    2              DEST$ -> MEMORY(I)=ADR$->MEMORY(I-RANGE);

    644   0 00005A  ECC7 0004                            LDB,B6   @DEST$,AUTO
          0 00005C  DC86                                 LDB,B5   ,B6
          0 00005D  E847 000A                            LDR,R6   I,AUTO
          0 00005F  E247 000D                            SUB,R6   RANGE,AUTO
          0 000061  B847 000A                            LDR,R3   I,AUTO
          0 000063  CCC7 000B                            LDB,B4   ADR$,AUTO
          0 000065  A856                                 LDR,R2   R6
          0 000066  E824                                 LDR,R6   ,B4,R2
          0 000067  EF35                                 STR,R6   ,B5,R3

      613      645    2              I=I+1;

PL6.E3A0      #002=GDM$GRAB16 File=GDM$MEMORY.:E05TSI                            TUE 07/29/97 21:28 Page:117  
    645   0 000068  8AC7 000A                            INC      I,AUTO

      614      646    2              END;

    646   0 00006A  E847 000A                            LDR,R6   I,AUTO
          0 00006C  6D10                                 CMV,R6   16
          0 00006D  086D                                 BAL      s:644,SPREL

      615      647    1           IF DSIZE > I THEN DSIZE = I;

    647   0 00006E  ECC7 0008                            LDB,B6   @DSIZE,AUTO
          0 000070  E806                                 LDR,R6   ,B6
          0 000071  6801 0005                            BLZ,R6   s:647+9,PREL
          0 000073  E947 000A                            CMR,R6   I,AUTO
          0 000075  0A81 0004                            BALE     s:648,PREL

    647   0 000077  E847 000A                            LDR,R6   I,AUTO
          0 000079  EF06                                 STR,R6   ,B6

      616      648    1           RETURN;

    648   0 00007A  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

    647   0                              BAILOUT         null
      617      649        /**/
      618      650    1   BAILOUT: ;
      619      651    1           ALTRETURN;

    651   0 00007D  C380 0000 0000  xent BAILOUT         LNJ,B4   X6A_AALT
      620      652        /**/
      621      653    1   END GDM$GRAB16;
      622      654        %EOD;

PL6.E3A0      #002=GDM$GRAB16 File=GDM$MEMORY.:E05TSI                            TUE 07/29/97 21:28 Page:118  
--  Include file information  --

   GD$MSG_M.:E05TOU  is referenced.
   GDA_EQUS_E.:E05TOU  is referenced.
   GD_EQUS_E.:E05TOU  is referenced.
   GD_DATA_M.:E05TOU  is referenced.
   GD_STATIC_DATA.:E05TOU  cannot be made into a system file and is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure GDM$GRAB16.
PL6.E3A0      #002=GDM$GRAB16 File=GDM$MEMORY.:E05TSI                            TUE 07/29/97 21:28 Page:119  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @DEST$                     8-0-0/w PTR         r     1 @DSIZE
     6-0-0/w PTR         r     1 @SOURCE$                   B-0-0/w PTR         r     1 ADR$
    *0-0-0/w PTR         r     1 DEST$                     *0-0-0/w UBIN(16)    r     1 DSIZE
     A-0-0/w SBIN(16)    r     1 I                          D-0-0/w UBIN(16)    r     1 RANGE
    *0-0-0/w PTR         r     1 SOURCE$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 GD$DELTA_DATA$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(16704) r     1 GD_DATA                    0-0-0/w STRC(80)    r     1 GH_VLD
     0-0-0/w UBIN(16)    r     1 MEMORY(0:999)


   Procedure GDM$GRAB16 requires 128 words for executable code.
   Procedure GDM$GRAB16 requires 18 words of local(AUTO) storage.
PL6.E3A0      #002=GDM$GRAB16 File=GDM$MEMORY.:E05TSI                            TUE 07/29/97 21:28 Page:120  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=GDM$GRAB16 File=GDM$MEMORY.:E05TSI                            TUE 07/29/97 21:28 Page:121  
          MINI XREF LISTING

ADR$
       602**DCL       631<<ASSIGN    632<>CALL      634>>ASSIGN    637<<ASSIGN    642<>CALL      644>>ASSIGN
BAILOUT
       647**LABEL     632--CALLALT
DEST$
        21**DCL        17--PROC      634>>ASSIGN    644>>ASSIGN
DSIZE
       604**DCL        17--PROC      647>>IF        647<<ASSIGN
GD$DELTA_DATA$
       550**DCL       564--IMP-PTR   643>>IF
GDU$SETUP_WINDOW
       626**DCL-ENT   642--CALL
GD_DATA.GD.DYNSP$
       577**DCL       577--REDEF
GD_DATA.GD.STEP_BRKPNT.ADR$
       578**DCL       579--REDEF
GD_DATA.GD.STEP_BRKPNT.START$
       579**DCL       579--REDEF
GD_DATA.GD.VLD
       585**DCL       643--IF
GH_VLD.STATUS
       621**DCL       643>>IF
I
       601**DCL       633<<DOINDEX   634>>ASSIGN    634>>ASSIGN    643>>DOWHILE   644>>ASSIGN    644>>ASSIGN
       645<<ASSIGN    645>>ASSIGN    647>>IF        647>>ASSIGN
MAP_ADDRESS
       627**DCL-ENT   632--CALL
MEMORY
       608**DCL       634<<ASSIGN    634>>ASSIGN    644<<ASSIGN    644>>ASSIGN
RANGE
       603**DCL       632<>CALL      633>>DOINDEX   636<<ASSIGN    636>>ASSIGN    637>>ASSIGN    638>>IF
       644>>ASSIGN
PL6.E3A0      #002=GDM$GRAB16 File=GDM$MEMORY.:E05TSI                            TUE 07/29/97 21:28 Page:122  
SOURCE$
        22**DCL        17--PROC      631>>ASSIGN    637>>ASSIGN

PL6.E3A0      #003=MAP_ADDRESS File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:123  
      623        1        /*T***********************************************************/
      624        2        /*T*                                                         */
      625        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      626        4        /*T*                                                         */
      627        5        /*T***********************************************************/
      628        6        MAP_ADDRESS: PROC (ADR$,RANGE) ALTRET;
      629        7        /**/
      630        8        /*  This routine accepts ADR$, the pointer to a piece of user memory          */
      631        9        /*  and maps onto it.  While we're at it, the size remaining in the           */
      632       10        /*  segment is returned in RANGE.                                             */
      633       11        /**/
      634       12        /*  Setup the ASDT we need to use and adjust the pointer accordingly.         */
      635       13        /*  Don't cross segment boundaries without remapping.                         */
      636       14        /**/
      637       15        /*  PARAMETERS  */
      638       16        /**/
      639       17    1   DCL ADR$ PTR;
      640       18    1   DCL ADR REDEF ADR$ UBIN(32);
      641       19    1   DCL RANGE UBIN;
      642       20        /**/
      643       21        /*  ENTRIES  */
      644       22        /**/
      645       23    1   DCL GDU$SETUP_WINDOW ENTRY(1) ALTRET;
      646       24        /**/
      647       25        /*  INCLUDES  */
      648       26        /**/
      649       27        %INCLUDE GD_STATIC_DATA;
      650      500        %INCLUDE GH_HARDWARE_M;
      651      598 S      %INCLUDE G_LCP6_E;                      /* LCP6 EQUS                          */
      652      599        /**/
      653      600        /*  LOCALS  */
      654      601        /**/
      655      602    1   DCL END$ PTR;
      656      603    1   DCL END_ REDEF END$ UBIN(32);
      657      604        /**/
      658      605        /*  BASED  */
      659      606        /**/
PL6.E3A0      #003=MAP_ADDRESS File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:124  
      660      607        %GH_VLD (STCLASS=BASED);
      661      621        /**/
      662      622        /*  Compute the RANGE.  This indicates how much space remains in              */
      663      623        /*  the current segment.  We are interested in at most 16 words.              */
      664      624        /**/
      665      625    1           IF ADR<256 OR GD_DATA.GD.USE_REAL
      666      626    1           THEN
      667      627    1              RANGE = 255-MOD(ADR,256);
      668      628    1           ELSE
      669      629    1              IF ADR<65536
      670      630    1              THEN
      671      631    1                 RANGE=4095-MOD(ADR,4096);
      672      632    1              ELSE
      673      633    1                 RANGE=65535-ADR;
      674      634    1           IF RANGE>15 THEN RANGE=15;
      675      635        /**/
      676      636        /*  Map to the end of the range.  This is the last address in the chunk       */
      677      637        /*  that we are currently dealing with.                                       */
      678      638        /**/
      679      639    1           END_ = ADR+RANGE;
      680      640        /**/
      681      641        /*  Map to the end of the range.                                              */
      682      642        /**/
      683      643    2           CALL GDU$SETUP_WINDOW (END_) WHENALTRETURN DO;
      684      644        /* Altret here might be end of segment hit, might be bad addr. */
      685      645        /* So adjust RANGE assuming end-of-segment - bad addr will altret next. */
      686      646    2              IF %GH@VLD.STATUS~=%G_VLD_STATUS_READ# THEN
      687      647    2                 RANGE=RANGE-MOD(ADR,16);
      688      648    2              END;
      689      649        /**/
      690      650        /*  Map onto the first requested address.  This will verify any previous      */
      691      651        /*  bad-address suspicions.  If all goes well, we end up mapped onto the      */
      692      652        /*  address in user domain that our caller wanted.                            */
      693      653        /**/
      694      654    2           CALL GDU$SETUP_WINDOW (ADR) WHENALTRETURN DO;
      695      655    2              IF %GH@VLD.STATUS~=%G_VLD_STATUS_READ#
      696      656    2              THEN
PL6.E3A0      #003=MAP_ADDRESS File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:125  
      697      657    2                 ALTRETURN;
      698      658    2              END;
      699      659    1           RETURN;
      700      660    1   END MAP_ADDRESS;
      701      661              %EOD;

PL6.E3A0      #003=MAP_ADDRESS File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:126  
--  Include file information  --

   GH_HARDWARE_M.:E05TOU  is referenced.
   GD$MSG_M.:E05TOU  is referenced.
   GDA_EQUS_E.:E05TOU  is referenced.
   GD_EQUS_E.:E05TOU  is referenced.
   GD_DATA_M.:E05TOU  is referenced.
   GD_STATIC_DATA.:E05TOU  cannot be made into a system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure MAP_ADDRESS.

   Procedure MAP_ADDRESS requires 129 words for executable code.
   Procedure MAP_ADDRESS requires 12 words of local(AUTO) storage.

PL6.E3A0      #003=MAP_ADDRESS File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:127  

 Object Unit name= MAP_ADDRESS                                File name= GDM$MEMORY.:E05TOU
 UTS= JUL 29 '97 21:28:52.12 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   129     81  MAP_ADDRESS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        2  MAP_ADDRESS

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 GDU$SETUP_WINDOW
                       nStd      0 X6A_AUTO_2
                       nStd      0 X6A_AALT
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     GD$DELTA_DATA$                   r    G$ROS$
PL6.E3A0      #003=MAP_ADDRESS File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:128  


      623        1        /*T***********************************************************/
      624        2        /*T*                                                         */
      625        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      626        4        /*T*                                                         */
      627        5        /*T***********************************************************/
      628        6        MAP_ADDRESS: PROC (ADR$,RANGE) ALTRET;

      6   0 000000  D380 0000 0000  xent MAP_ADDRESS     LNJ,B5   X6A_AUTO_2
          0 000003       000C 0002                       DC       12,2

      629        7        /**/
      630        8        /*  This routine accepts ADR$, the pointer to a piece of user memory          */
      631        9        /*  and maps onto it.  While we're at it, the size remaining in the           */
      632       10        /*  segment is returned in RANGE.                                             */
      633       11        /**/
      634       12        /*  Setup the ASDT we need to use and adjust the pointer accordingly.         */
      635       13        /*  Don't cross segment boundaries without remapping.                         */
      636       14        /**/
      637       15        /*  PARAMETERS  */
      638       16        /**/
      639       17    1   DCL ADR$ PTR;
      640       18    1   DCL ADR REDEF ADR$ UBIN(32);
      641       19    1   DCL RANGE UBIN;
      642       20        /**/
      643       21        /*  ENTRIES  */
      644       22        /**/
      645       23    1   DCL GDU$SETUP_WINDOW ENTRY(1) ALTRET;
      646       24        /**/
      647       25        /*  INCLUDES  */
      648       26        /**/
      649       27        %INCLUDE GD_STATIC_DATA;
      650      500        %INCLUDE GH_HARDWARE_M;
      651      598 S      %INCLUDE G_LCP6_E;                      /* LCP6 EQUS                          */
      652      599        /**/
      653      600        /*  LOCALS  */
      654      601        /**/
PL6.E3A0      #003=MAP_ADDRESS File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:129  
      655      602    1   DCL END$ PTR;
      656      603    1   DCL END_ REDEF END$ UBIN(32);
      657      604        /**/
      658      605        /*  BASED  */
      659      606        /**/
      660      607        %GH_VLD (STCLASS=BASED);
      661      621        /**/
      662      622        /*  Compute the RANGE.  This indicates how much space remains in              */
      663      623        /*  the current segment.  We are interested in at most 16 words.              */
      664      624        /**/
      665      625    1           IF ADR<256 OR GD_DATA.GD.USE_REAL

    625   0 000005  ECC7 0004                            LDB,B6   @ADR$,AUTO
          0 000007  8C86                                 LDI      ,B6
          0 000008  84F0 0000 0100                       SID      256,IMO
          0 00000B  0681 0009                            BCF      s:627,PREL
          0 00000D  DC80 0000 0000  xsym                 LDB,B5   GD$DELTA_DATA$
          0 000010  82C5 014C                            LB,'0008'X        332,B5
          0 000012       0008
          0 000013  0581 000D                            BBF      s:629,PREL

      666      626    1           THEN
      667      627    1              RANGE = 255-MOD(ADR,256);

    627   0 000015  8C86                                 LDI      ,B6
          0 000016  E857                                 LDR,R6   R7
          0 000017  E570 00FF                            AND,R6   255,IMO
          0 000019  DCC7 0006                            LDB,B5   @RANGE,AUTO
          0 00001B  8256                                 NEG      R6
          0 00001C  EA70 00FF                            ADD,R6   255,IMO
          0 00001E  EF05                                 STR,R6   ,B5
          0 00001F  0F81 001D                            B        s:634,PREL

      668      628    1           ELSE
      669      629    1              IF ADR<65536

    629   0 000021  8C86                                 LDI      ,B6
PL6.E3A0      #003=MAP_ADDRESS File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:130  
          0 000022  84F0 0001 0000                       SID      65536,IMO
          0 000025  0601 000D                            BCT      s:633,PREL

      670      630    1              THEN
      671      631    1                 RANGE=4095-MOD(ADR,4096);

    631   0 000027  8C86                                 LDI      ,B6
          0 000028  E857                                 LDR,R6   R7
          0 000029  E570 0FFF                            AND,R6   4095,IMO
          0 00002B  CCC7 0006                            LDB,B4   @RANGE,AUTO
          0 00002D  8256                                 NEG      R6
          0 00002E  EA70 0FFF                            ADD,R6   4095,IMO
          0 000030  EF04                                 STR,R6   ,B4
          0 000031  0F81 000B                            B        s:634,PREL

      672      632    1              ELSE
      673      633    1                 RANGE=65535-ADR;

    633   0 000033  CCC7 0006                            LDB,B4   @RANGE,AUTO
          0 000035  8C86                                 LDI      ,B6
          0 000036  8656                                 CPL      R6
          0 000037  8657                                 CPL      R7
          0 000038  8470 0001 0000                       AID      65536,IMO
          0 00003B  E857                                 LDR,R6   R7
          0 00003C  EF04                                 STR,R6   ,B4

      674      634    1           IF RANGE>15 THEN RANGE=15;

    634   0 00003D  DCC7 0006                            LDB,B5   @RANGE,AUTO
          0 00003F  E805                                 LDR,R6   ,B5
          0 000040  6D0F                                 CMV,R6   15
          0 000041  0381 0003                            BLE      s:639,PREL

    634   0 000043  6C0F                                 LDV,R6   15
          0 000044  EF05                                 STR,R6   ,B5

      675      635        /**/
PL6.E3A0      #003=MAP_ADDRESS File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:131  
      676      636        /*  Map to the end of the range.  This is the last address in the chunk       */
      677      637        /*  that we are currently dealing with.                                       */
      678      638        /**/
      679      639    1           END_ = ADR+RANGE;

    639   0 000045  F856                                 LDR,R7   R6
          0 000046  6C00                                 LDV,R6   0
          0 000047  8406                                 AID      ,B6
          0 000048  8D47 0008                            SDI      END$,AUTO

      680      640        /**/
      681      641        /*  Map to the end of the range.                                              */
      682      642        /**/
      683      643    2           CALL GDU$SETUP_WINDOW (END_) WHENALTRETURN DO;

    643   0 00004A  CBC7 0008                            LAB,B4   END$,AUTO
          0 00004C  CFC7 000A                            STB,B4   END$+2,AUTO
          0 00004E  BBC7 000A                            LAB,B3   END$+2,AUTO
          0 000050  CBF0 0100                            LAB,B4   256,IMO
          0 000052  E380 0000 0000  xent                 LNJ,B6   GDU$SETUP_WINDOW
          0 000055       0003                            DC       s:646,PREL
          0 000056  0F81 0013                            B        s:654,PREL

      684      644        /* Altret here might be end of segment hit, might be bad addr. */
      685      645        /* So adjust RANGE assuming end-of-segment - bad addr will altret next. */
      686      646    2              IF %GH@VLD.STATUS~=%G_VLD_STATUS_READ# THEN

    646   0 000058  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          0 00005B  E846 0173                            LDR,R6   371,B6
          0 00005D  6901 000C                            BEZ,R6   s:654,PREL

      687      647    2                 RANGE=RANGE-MOD(ADR,16);

    647   0 00005F  DCC7 0004                            LDB,B5   @ADR$,AUTO
          0 000061  8C85                                 LDI      ,B5
          0 000062  E857                                 LDR,R6   R7
          0 000063  E570 000F                            AND,R6   15,IMO
PL6.E3A0      #003=MAP_ADDRESS File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:132  
          0 000065  CCC7 0006                            LDB,B4   @RANGE,AUTO
          0 000067  E204                                 SUB,R6   ,B4
          0 000068  8256                                 NEG      R6
          0 000069  EF04                                 STR,R6   ,B4

      688      648    2              END;

      689      649        /**/
      690      650        /*  Map onto the first requested address.  This will verify any previous      */
      691      651        /*  bad-address suspicions.  If all goes well, we end up mapped onto the      */
      692      652        /*  address in user domain that our caller wanted.                            */
      693      653        /**/
      694      654    2           CALL GDU$SETUP_WINDOW (ADR) WHENALTRETURN DO;

    654   0 00006A  BBC7 0004                            LAB,B3   @ADR$,AUTO
          0 00006C  CBF0 0100                            LAB,B4   256,IMO
          0 00006E  E380 0000 0000  xent                 LNJ,B6   GDU$SETUP_WINDOW
          0 000071       0003                            DC       s:655,PREL
          0 000072  0F81 000B                            B        s:659,PREL

      695      655    2              IF %GH@VLD.STATUS~=%G_VLD_STATUS_READ#

    655   0 000074  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          0 000077  E846 0173                            LDR,R6   371,B6
          0 000079  6901 0004                            BEZ,R6   s:659,PREL

      696      656    2              THEN
      697      657    2                 ALTRETURN;

    657   0 00007B  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      698      658    2              END;
      699      659    1           RETURN;

    659   0 00007E  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      700      660    1   END MAP_ADDRESS;
      701      661              %EOD;
PL6.E3A0      #003=MAP_ADDRESS File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:133  

PL6.E3A0      #003=MAP_ADDRESS File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:134  
--  Include file information  --

   GH_HARDWARE_M.:E05TOU  is referenced.
   GD$MSG_M.:E05TOU  is referenced.
   GDA_EQUS_E.:E05TOU  is referenced.
   GD_EQUS_E.:E05TOU  is referenced.
   GD_DATA_M.:E05TOU  is referenced.
   GD_STATIC_DATA.:E05TOU  cannot be made into a system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure MAP_ADDRESS.
PL6.E3A0      #003=MAP_ADDRESS File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:135  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @ADR$                      6-0-0/w PTR         r     1 @RANGE
    *0-0-0/w UBIN(32)    r     1 ADR                       *0-0-0/w PTR         r     1 ADR$
     8-0-0/w PTR         r     1 END$                       8-0-0/w UBIN(32)    r     1 END_
    *0-0-0/w UBIN(16)    r     1 RANGE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 GD$DELTA_DATA$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(16704) r     1 GD_DATA                    0-0-0/w STRC(80)    r     1 GH_VLD


   Procedure MAP_ADDRESS requires 129 words for executable code.
   Procedure MAP_ADDRESS requires 12 words of local(AUTO) storage.
PL6.E3A0      #003=MAP_ADDRESS File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:136  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=MAP_ADDRESS File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:137  
          MINI XREF LISTING

ADR
        18**DCL       625>>IF        627>>ASSIGN    629>>IF        631>>ASSIGN    633>>ASSIGN    639>>ASSIGN
       647>>ASSIGN    654<>CALL
ADR$
        17**DCL         6--PROC       18--REDEF
END$
       602**DCL       603--REDEF
END_
       603**DCL       639<<ASSIGN    643<>CALL
GD$DELTA_DATA$
       453**DCL       467--IMP-PTR   625>>IF        646>>IF        655>>IF
GDU$SETUP_WINDOW
        23**DCL-ENT   643--CALL      654--CALL
GD_DATA.GD.DYNSP$
       480**DCL       480--REDEF
GD_DATA.GD.STEP_BRKPNT.ADR$
       481**DCL       482--REDEF
GD_DATA.GD.STEP_BRKPNT.START$
       482**DCL       482--REDEF
GD_DATA.GD.USE_REAL
       477**DCL       625>>IF
GD_DATA.GD.VLD
       488**DCL       646--IF        655--IF
GH_VLD.STATUS
       619**DCL       646>>IF        655>>IF
RANGE
        19**DCL         6--PROC      627<<ASSIGN    631<<ASSIGN    633<<ASSIGN    634>>IF        634<<ASSIGN
       639>>ASSIGN    647<<ASSIGN    647>>ASSIGN

PL6.E3A0      #004=GDM$LCTHAND File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:138  
      702        1        /*T***********************************************************/
      703        2        /*T*                                                         */
      704        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      705        4        /*T*                                                         */
      706        5        /*T***********************************************************/
      707        6              %EJECT;
PL6.E3A0      #004=GDM$LCTHAND File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:139  
      708        7        /*F*   NAME:    GDM$LCTHAND
      709        8               PURPOSE: This routine handles requests to display and modify
      710        9                        MLCP LCTs.
      711       10               CALL:    CALL GDM$LCTHAND(SIZE,BUFFER);
      712       11               DESCRIPTION: This routine can do very little error checking
      713       12                            at this time.  This is due to the fact that
      714       13                            currently handler common routines for dealing
      715       14                            with channels and a common channel table are not
      716       15                            used.  The only error checking done is to verify
      717       16                            that the LCT# is legal.  For a display we just
      718       17                            setup for and do a call to GHH$IO_IN, setup the
      719       18                            message and return.  For a modify, we setup for
      720       19                            and do a call to GHH$IO_IN first, verify that the
      721       20                            contents match (if called for), do the modify
      722       21                            by calling GHH$IO, setup the responce, send it
      723       22                            and return.
      724       23        */
      725       24
      726       25        GDM$LCTHAND: PROC(SIZE,BUFFER);
      727       26                                                /* Includes                           */
      728       27        %INCLUDE G$BOBCAT_M;
      729       47        %INCLUDE GD_STATIC_DATA;
      730      520        %INCLUDE KH$CHN;
      731      642        %INCLUDE GH_HARDWARE_M;
      732      740        %INCLUDE GH_IOFNC_E;
      733      809        %INCLUDE LCP_6;
      734     1000                                                /* Symrefs                            */
      735     1001    1   DCL G$BOBCAT$ PTR SYMREF READONLY;
      736     1002                                                /* Args                               */
      737     1003    1   DCL BUFFER CHAR(SIZE) ALIGNED;
      738     1004        %GD$MSG(FPTN=GD$MSG,STCLASS=REDEF BUFFER);
      739     1160    1   DCL SIZE UBIN;
      740     1161                                                /* Based                              */
      741     1162        %G$BOBCAT (FPTN=G$BOBCAT,STCLASS="BASED (G$BOBCAT$)");
      742     1175        %GH_IO(STCLASS=AUTO);
      743     1191        %KH$CHN (STCLASS="BASED(Y@CHN$)");
      744     1315                                                /* Temps                              */
PL6.E3A0      #004=GDM$LCTHAND File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:140  
      745     1316    1   DCL I UBIN;
      746     1317    1   DCL Y@CHN$ PTR AUTO;                    /* Pointer to KH$CHN                  */
      747     1318                                                /* Entrys                             */
      748     1319    1   DCL GDI$SEND_RESPONSE ENTRY(2);
      749     1320    1   DCL GHH$IO_IN ENTRY(1) ALTRET;
      750     1321    1   DCL GHH$IO ENTRY(1) ALTRET;
      751     1322              %EJECT;
PL6.E3A0      #004=GDM$LCTHAND File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:141  
      752     1323        /*
      753     1324          Verify that the LCT# is legal and if it isn't report an error
      754     1325          and return.
      755     1326                                                                                      */
      756     1327    1           Y@CHN$ = PINCRW(G$BOBCAT.CHNLOW$, SIZEW(KH$CHN) * (BITBIN(GD$MSG.LCTMSG.
              1327                    CHANNEL) / 128));
      757     1328    1           IF (((KH$CHN.DVCID & 'FF00'X) = '2100'X) AND
      758     1329    1             (GD$MSG.LCTMSG.LCTNUM > 63)) THEN
      759     1330    2           DO;
      760     1331    2              GD$MSG.LCTMSG.FLAGS='0'B;
      761     1332    2              GD$MSG.LCTMSG.FLAGS.BLN='1'B;
      762     1333    2              GD$MSG.FNC=%GD#RSPBADMLCCALL;
      763     1334    2              CALL GDI$SEND_RESPONSE(SIZE,BUFFER);
      764     1335    2              RETURN;
      765     1336    2              END;
      766     1337        /*
      767     1338          If this is a modify request, handle it here
      768     1339                                                                                      */
      769     1340    1           IF GD$MSG.FNC=%GD#RQSMODLCT THEN
      770     1341    2           DO;
      771     1342    2              GD$MSG.FNC=%GD#RSPMODLCT;
      772     1343    2              GH_IO.CAS.CHN=GD$MSG.LCTMSG.CHANNEL.CHN;
      773     1344    2              GH_IO.DAS.LCTDAT=GD$MSG.LCTMSG.LCTNUM;
      774     1345    2              GH_IO.CAS.FNC=%GH#IO_OTPLCTBYT;
      775     1346    2              GH_IO.DAS.LCTADR=55;
      776     1347    2              CALL GHH$IO(GH_IO) ALTRET(DEAD);
      777     1348    2              GH_IO.CAS.FNC=%GH#IO_INPLCTBYT;
      778     1349    2              CALL GHH$IO_IN(GH_IO) ALTRET(DEAD);
      779     1350    2              IF GD$MSG.LCTMSG.FLAGS.MM AND GD$MSG.LCTMSG.OLDMEM ~=
      780     1351    2                GH_IO.DAS.LCTDAT THEN
      781     1352    3              DO;
      782     1353    3                 GD$MSG.LCTMSG.FLAGS='0'B;
      783     1354    3                 GD$MSG.LCTMSG.FLAGS.NM='1'B;
      784     1355    3                 END;
      785     1356    2              ELSE
      786     1357    3              DO;
      787     1358    3                 GH_IO.CAS.FNC=%GH#IO_OTPLCTBYT;
PL6.E3A0      #004=GDM$LCTHAND File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:142  
      788     1359    3                 GH_IO.DAS.LCTADR=GD$MSG.LCTMSG.LCTNUM;
      789     1360    3                 GD$MSG.LCTMSG.OLDMEM=GH_IO.DAS.LCTDAT;
      790     1361    3                 GH_IO.DAS.LCTDAT=GD$MSG.LCTMSG.NEWMEM;
      791     1362    3                 CALL GHH$IO(GH_IO) ALTRET(DEAD);
      792     1363    3                 GD$MSG.LCTMSG.FLAGS='0'B;
      793     1364    3                 GD$MSG.LCTMSG.FLAGS.SO='1'B;
      794     1365    3                 END;
      795     1366    2              END;
      796     1367        /*
      797     1368          Otherwise, we know its a display
      798     1369                                                                                      */
      799     1370    1           ELSE
      800     1371    2           DO;
      801     1372    2              GD$MSG.FNC=%GD#RSPDISPLCT;
      802     1373    2              GH_IO.CAS.CHN=GD$MSG.LCTMSG.CHANNEL.CHN;
      803     1374    2              I=0;
      804     1375    3   DUMP_LCT:  DO WHILE (I<=15);
      805     1376    3                 GH_IO.DAS.LCTDAT=GD$MSG.LCTMSG.LCTNUM+I;
      806     1377    3                 GH_IO.CAS.FNC=%GH#IO_OTPLCTBYT;
      807     1378    3                 GH_IO.DAS.LCTADR=55;
      808     1379    3                 CALL GHH$IO(GH_IO) ALTRET(DEAD);
      809     1380    3                 GH_IO.CAS.FNC=%GH#IO_INPLCTBYT;
      810     1381    3                 CALL GHH$IO_IN(GH_IO) ALTRET(DEAD);
      811     1382    3                 GD$MSG.LCTMSG.OLDMEM=GH_IO.DAS.LCTDAT;
      812     1383    3                 GD$MSG.LCTMSG.LCTMEM(I)=GD$MSG.LCTMSG.OLDMEM;
      813     1384    3                 IF NOT(GD$MSG.LCTMSG.FLAGS.DUMP) THEN
      814     1385    3                    EXIT DUMP_LCT;
      815     1386    3                 I=I+1;
      816     1387    3                 END;
      817     1388    2              END;
      818     1389        /*
      819     1390          Send the responce which is hopefully setup, and return
      820     1391                                                                                      */
      821     1392    1           CALL GDI$SEND_RESPONSE(SIZE,BUFFER);
      822     1393    1           GH_IO.DAS.LCTDAT=KH$CHN.LCT55;
      823     1394    1           GH_IO.CAS.FNC=%GH#IO_OTPLCTBYT;
      824     1395    1           GH_IO.DAS.LCTADR=55;
PL6.E3A0      #004=GDM$LCTHAND File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:143  
      825     1396    1           CALL GHH$IO(GH_IO) ALTRET(DEAD);
      826     1397    1           RETURN;
      827     1398        /*
      828     1399          If we get here, one of the I/O routines altreturned.  For arguments
      829     1400          sake, lets set the DED bit in the flags and return.
      830     1401                                                                                      */
      831     1402    1   DEAD:   GD$MSG.LCTMSG.FLAGS = '0'B;
      832     1403    1           GD$MSG.LCTMSG.FLAGS.LID = '1'B;
      833     1404    1           GD$MSG.FNC=%GD#RSPBADMLCCALL;
      834     1405    1           RETURN;
      835     1406    1   END;

PL6.E3A0      #004=GDM$LCTHAND File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:144  
--  Include file information  --

   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   GH_IOFNC_E.:E05TOU  is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   GD$MSG_M.:E05TOU  is referenced.
   GDA_EQUS_E.:E05TOU  is referenced.
   GD_EQUS_E.:E05TOU  is referenced.
   GD_DATA_M.:E05TOU  is referenced.
   GD_STATIC_DATA.:E05TOU  cannot be made into a system file and is referenced.
   G$BOBCAT_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GDM$LCTHAND.

   Procedure GDM$LCTHAND requires 304 words for executable code.
   Procedure GDM$LCTHAND requires 16 words of local(AUTO) storage.

    No errors detected in file GDM$MEMORY.:E05TSI    .

PL6.E3A0      #004=GDM$LCTHAND File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:145  

 Object Unit name= GDM$LCTHAND                                File name= GDM$MEMORY.:E05TOU
 UTS= JUL 29 '97 21:28:59.88 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   304    130  GDM$LCTHAND

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        2  GDM$LCTHAND

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 GDI$SEND_RESPONSE
 yes     yes           Std       1 GHH$IO_IN
 yes     yes           Std       1 GHH$IO
                       nStd      0 X6A_AUTO_2
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     GD$DELTA_DATA$                   r    G$BOBCAT$                        r    G$ROS$
PL6.E3A0      #004=GDM$LCTHAND File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:146  


      702        1        /*T***********************************************************/
      703        2        /*T*                                                         */
      704        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      705        4        /*T*                                                         */
      706        5        /*T***********************************************************/
      707        6              %EJECT;
PL6.E3A0      #004=GDM$LCTHAND File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:147  
      708        7        /*F*   NAME:    GDM$LCTHAND
      709        8               PURPOSE: This routine handles requests to display and modify
      710        9                        MLCP LCTs.
      711       10               CALL:    CALL GDM$LCTHAND(SIZE,BUFFER);
      712       11               DESCRIPTION: This routine can do very little error checking
      713       12                            at this time.  This is due to the fact that
      714       13                            currently handler common routines for dealing
      715       14                            with channels and a common channel table are not
      716       15                            used.  The only error checking done is to verify
      717       16                            that the LCT# is legal.  For a display we just
      718       17                            setup for and do a call to GHH$IO_IN, setup the
      719       18                            message and return.  For a modify, we setup for
      720       19                            and do a call to GHH$IO_IN first, verify that the
      721       20                            contents match (if called for), do the modify
      722       21                            by calling GHH$IO, setup the responce, send it
      723       22                            and return.
      724       23        */
      725       24
      726       25        GDM$LCTHAND: PROC(SIZE,BUFFER);

     25   0 000000  D380 0000 0000  xent GDM$LCTHAND     LNJ,B5   X6A_AUTO_2
          0 000003       0010 0002                       DC       16,2

      727       26                                                /* Includes                           */
      728       27        %INCLUDE G$BOBCAT_M;
      729       47        %INCLUDE GD_STATIC_DATA;
      730      520        %INCLUDE KH$CHN;
      731      642        %INCLUDE GH_HARDWARE_M;
      732      740        %INCLUDE GH_IOFNC_E;
      733      809        %INCLUDE LCP_6;
      734     1000                                                /* Symrefs                            */
      735     1001    1   DCL G$BOBCAT$ PTR SYMREF READONLY;
      736     1002                                                /* Args                               */
      737     1003    1   DCL BUFFER CHAR(SIZE) ALIGNED;
      738     1004        %GD$MSG(FPTN=GD$MSG,STCLASS=REDEF BUFFER);
      739     1160    1   DCL SIZE UBIN;
      740     1161                                                /* Based                              */
PL6.E3A0      #004=GDM$LCTHAND File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:148  
      741     1162        %G$BOBCAT (FPTN=G$BOBCAT,STCLASS="BASED (G$BOBCAT$)");
      742     1175        %GH_IO(STCLASS=AUTO);
      743     1191        %KH$CHN (STCLASS="BASED(Y@CHN$)");
      744     1315                                                /* Temps                              */
      745     1316    1   DCL I UBIN;
      746     1317    1   DCL Y@CHN$ PTR AUTO;                    /* Pointer to KH$CHN                  */
      747     1318                                                /* Entrys                             */
      748     1319    1   DCL GDI$SEND_RESPONSE ENTRY(2);
      749     1320    1   DCL GHH$IO_IN ENTRY(1) ALTRET;
      750     1321    1   DCL GHH$IO ENTRY(1) ALTRET;
      751     1322              %EJECT;
PL6.E3A0      #004=GDM$LCTHAND File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:149  
      752     1323        /*
      753     1324          Verify that the LCT# is legal and if it isn't report an error
      754     1325          and return.
      755     1326                                                                                      */
      756     1327    1           Y@CHN$ = PINCRW(G$BOBCAT.CHNLOW$, SIZEW(KH$CHN) * (BITBIN(GD$MSG.LCTMSG.
              1327                    CHANNEL) / 128));

   1327   0 000005  ECC7 0006                            LDB,B6   @BUFFER,AUTO
          0 000007  E846 0001                            LDR,R6   1,B6
          0 000009  6047                                 SOR,R6   7
          0 00000A  DC80 0000 0000  xsym                 LDB,B5   G$BOBCAT$
          0 00000D  CCC5 0038                            LDB,B4   56,B5
          0 00000F  CFC7 000E                            STB,B4   Y@CHN$+3,AUTO
          0 000011  F856                                 LDR,R7   R6
          0 000012  6C00                                 LDV,R6   0
          0 000013  7085                                 DOL,R7   5
          0 000014  8447 000E                            AID      Y@CHN$+3,AUTO
          0 000016  8D47 000B                            SDI      Y@CHN$,AUTO

      757     1328    1           IF (((KH$CHN.DVCID & 'FF00'X) = '2100'X) AND

   1328   0 000018  BCC7 000B                            LDB,B3   Y@CHN$,AUTO
          0 00001A  D843 0002                            LDR,R5   2,B3
          0 00001C  D570 FF00                            AND,R5   -256,IMO
          0 00001E  D970 2100                            CMR,R5   8448,IMO
          0 000020  0981 0019                            BNE      s:1340,PREL
          0 000022  D2C6 0003                            LLH,R5   3,B6
          0 000024  5D3F                                 CMV,R5   63
          0 000025  0381 0014                            BLE      s:1340,PREL

      758     1329    1             (GD$MSG.LCTMSG.LCTNUM > 63)) THEN
      759     1330    2           DO;

      760     1331    2              GD$MSG.LCTMSG.FLAGS='0'B;

   1331   0 000027  8846 0003                            LBF,'00FF'X       3,B6
   1331   0 000029       00FF
PL6.E3A0      #004=GDM$LCTHAND File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:150  

      761     1332    2              GD$MSG.LCTMSG.FLAGS.BLN='1'B;

   1332   0 00002A  8946 0003                            LBT,'0020'X       3,B6
   1332   0 00002C       0020

      762     1333    2              GD$MSG.FNC=%GD#RSPBADMLCCALL;

   1333   0 00002D  4C35                                 LDV,R4   53
          0 00002E  C786                                 STH,R4   ,B6

      763     1334    2              CALL GDI$SEND_RESPONSE(SIZE,BUFFER);

   1334   0 00002F  BBC7 0004                            LAB,B3   @SIZE,AUTO
          0 000031  CBF0 0200                            LAB,B4   512,IMO
          0 000033  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_RESPONSE
          0 000036       0001                            DC       s:1335,PREL

      764     1335    2              RETURN;

   1335   0 000037  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      765     1336    2              END;
      766     1337        /*
      767     1338          If this is a modify request, handle it here
      768     1339                                                                                      */
      769     1340    1           IF GD$MSG.FNC=%GD#RQSMODLCT THEN

   1340   0 00003A  D286                                 LLH,R5   ,B6
          0 00003B  5D0B                                 CMV,R5   11
          0 00003C  0981 006F                            BNE      s:1372,PREL

      770     1341    2           DO;

      771     1342    2              GD$MSG.FNC=%GD#RSPMODLCT;

   1342   0 00003E  4C25                                 LDV,R4   37
PL6.E3A0      #004=GDM$LCTHAND File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:151  
          0 00003F  C786                                 STH,R4   ,B6

      772     1343    2              GH_IO.CAS.CHN=GD$MSG.LCTMSG.CHANNEL.CHN;

   1343   0 000040  D846 0001                            LDR,R5   1,B6
          0 000042  DAC7 0008                            SRM,R5,'FFC0'X    GH_IO,AUTO
          0 000044       FFC0

      773     1344    2              GH_IO.DAS.LCTDAT=GD$MSG.LCTMSG.LCTNUM;

   1344   0 000045  D2C6 0003                            LLH,R5   3,B6
          0 000047  D7C7 0009                            STH,R5   GH_IO+1,AUTO

      774     1345    2              GH_IO.CAS.FNC=%GH#IO_OTPLCTBYT;

   1345   0 000049  5C0B                                 LDV,R5   11
          0 00004A  DAC7 0008                            SRM,R5,'003F'X    GH_IO,AUTO
          0 00004C       003F

      775     1346    2              GH_IO.DAS.LCTADR=55;

   1346   0 00004D  3C37                                 LDV,R3   55
          0 00004E  BAC7 0009                            SRM,R3,'00FF'X    GH_IO+1,AUTO
          0 000050       00FF

      776     1347    2              CALL GHH$IO(GH_IO) ALTRET(DEAD);

   1347   0 000051  CBC7 0008                            LAB,B4   GH_IO,AUTO
          0 000053  CFC7 000E                            STB,B4   Y@CHN$+3,AUTO
          0 000055  BBC7 000E                            LAB,B3   Y@CHN$+3,AUTO
          0 000057  CBF0 0100                            LAB,B4   256,IMO
          0 000059  E380 0000 0000  xent                 LNJ,B6   GHH$IO
          0 00005C       00C7                            DC       s:1402,PREL

      777     1348    2              GH_IO.CAS.FNC=%GH#IO_INPLCTBYT;

   1348   0 00005D  6C1E                                 LDV,R6   30
PL6.E3A0      #004=GDM$LCTHAND File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:152  
          0 00005E  EAC7 0008                            SRM,R6,'003F'X    GH_IO,AUTO
          0 000060       003F

      778     1349    2              CALL GHH$IO_IN(GH_IO) ALTRET(DEAD);

   1349   0 000061  EBC7 0008                            LAB,B6   GH_IO,AUTO
          0 000063  EFC7 000E                            STB,B6   Y@CHN$+3,AUTO
          0 000065  BBC7 000E                            LAB,B3   Y@CHN$+3,AUTO
          0 000067  CBF0 0100                            LAB,B4   256,IMO
          0 000069  E380 0000 0000  xent                 LNJ,B6   GHH$IO_IN
          0 00006C       00B7                            DC       s:1402,PREL

      779     1350    2              IF GD$MSG.LCTMSG.FLAGS.MM AND GD$MSG.LCTMSG.OLDMEM ~=

   1350   0 00006D  ECC7 0006                            LDB,B6   @BUFFER,AUTO
          0 00006F  82C6 0003                            LB,'0002'X        3,B6
          0 000071       0002
          0 000072  0581 0010                            BBF      s:1358,PREL
          0 000074  E2C6 0002                            LLH,R6   2,B6
          0 000076  D2C7 0009                            LLH,R5   GH_IO+1,AUTO
          0 000078  E955                                 CMR,R6   R5
          0 000079  0901 0009                            BE       s:1358,PREL

      780     1351    2                GH_IO.DAS.LCTDAT THEN
      781     1352    3              DO;

      782     1353    3                 GD$MSG.LCTMSG.FLAGS='0'B;

   1353   0 00007B  8846 0003                            LBF,'00FF'X       3,B6
   1353   0 00007D       00FF

      783     1354    3                 GD$MSG.LCTMSG.FLAGS.NM='1'B;

   1354   0 00007E  8946 0003                            LBT,'0004'X       3,B6
   1354   0 000080       0004

      784     1355    3                 END;
PL6.E3A0      #004=GDM$LCTHAND File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:153  

   1355   0 000081  0F81 007C                            B        s:1392,PREL

      785     1356    2              ELSE
      786     1357    3              DO;

      787     1358    3                 GH_IO.CAS.FNC=%GH#IO_OTPLCTBYT;

   1358   0 000083  6C0B                                 LDV,R6   11
          0 000084  EAC7 0008                            SRM,R6,'003F'X    GH_IO,AUTO
          0 000086       003F

      788     1359    3                 GH_IO.DAS.LCTADR=GD$MSG.LCTMSG.LCTNUM;

   1359   0 000087  D2C6 0003                            LLH,R5   3,B6
          0 000089  DAC7 0009                            SRM,R5,'00FF'X    GH_IO+1,AUTO
          0 00008B       00FF

      789     1360    3                 GD$MSG.LCTMSG.OLDMEM=GH_IO.DAS.LCTDAT;

   1360   0 00008C  D2C7 0009                            LLH,R5   GH_IO+1,AUTO
          0 00008E  D7C6 0002                            STH,R5   2,B6

      790     1361    3                 GH_IO.DAS.LCTDAT=GD$MSG.LCTMSG.NEWMEM;

   1361   0 000090  D846 0002                            LDR,R5   2,B6
          0 000092  D570 00FF                            AND,R5   255,IMO
          0 000094  D7C7 0009                            STH,R5   GH_IO+1,AUTO

      791     1362    3                 CALL GHH$IO(GH_IO) ALTRET(DEAD);

   1362   0 000096  DBC7 0008                            LAB,B5   GH_IO,AUTO
          0 000098  DFC7 000E                            STB,B5   Y@CHN$+3,AUTO
          0 00009A  BBC7 000E                            LAB,B3   Y@CHN$+3,AUTO
          0 00009C  CBF0 0100                            LAB,B4   256,IMO
          0 00009E  E380 0000 0000  xent                 LNJ,B6   GHH$IO
          0 0000A1       0082                            DC       s:1402,PREL
PL6.E3A0      #004=GDM$LCTHAND File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:154  

      792     1363    3                 GD$MSG.LCTMSG.FLAGS='0'B;

   1363   0 0000A2  ECC7 0006                            LDB,B6   @BUFFER,AUTO
          0 0000A4  8846 0003                            LBF,'00FF'X       3,B6
          0 0000A6       00FF

      793     1364    3                 GD$MSG.LCTMSG.FLAGS.SO='1'B;

   1364   0 0000A7  8946 0003                            LBT,'0008'X       3,B6
   1364   0 0000A9       0008

      794     1365    3                 END;

      795     1366    2              END;

   1366   0 0000AA  0F81 0053                            B        s:1392,PREL

      796     1367        /*
      797     1368          Otherwise, we know its a display
      798     1369                                                                                      */
      799     1370    1           ELSE
      800     1371    2           DO;

      801     1372    2              GD$MSG.FNC=%GD#RSPDISPLCT;

   1372   0 0000AC  4C26                                 LDV,R4   38
          0 0000AD  C786                                 STH,R4   ,B6

      802     1373    2              GH_IO.CAS.CHN=GD$MSG.LCTMSG.CHANNEL.CHN;

   1373   0 0000AE  D846 0001                            LDR,R5   1,B6
          0 0000B0  DAC7 0008                            SRM,R5,'FFC0'X    GH_IO,AUTO
          0 0000B2       FFC0

      803     1374    2              I=0;

PL6.E3A0      #004=GDM$LCTHAND File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:155  
   1374   0 0000B3  8747 000A                            CL       I,AUTO

      804     1375    3   DUMP_LCT:  DO WHILE (I<=15);

   1375   0 0000B5  D847 000A            DUMP_LCT        LDR,R5   I,AUTO
          0 0000B7  5D0F                                 CMV,R5   15
          0 0000B8  0301 0045                            BG       s:1392,PREL

      805     1376    3                 GH_IO.DAS.LCTDAT=GD$MSG.LCTMSG.LCTNUM+I;

   1376   0 0000BA  ECC7 0006                            LDB,B6   @BUFFER,AUTO
          0 0000BC  E2C6 0003                            LLH,R6   3,B6
          0 0000BE  EA47 000A                            ADD,R6   I,AUTO
          0 0000C0  E7C7 0009                            STH,R6   GH_IO+1,AUTO

      806     1377    3                 GH_IO.CAS.FNC=%GH#IO_OTPLCTBYT;

   1377   0 0000C2  6C0B                                 LDV,R6   11
          0 0000C3  EAC7 0008                            SRM,R6,'003F'X    GH_IO,AUTO
          0 0000C5       003F

      807     1378    3                 GH_IO.DAS.LCTADR=55;

   1378   0 0000C6  5C37                                 LDV,R5   55
          0 0000C7  DAC7 0009                            SRM,R5,'00FF'X    GH_IO+1,AUTO
          0 0000C9       00FF

      808     1379    3                 CALL GHH$IO(GH_IO) ALTRET(DEAD);

   1379   0 0000CA  DBC7 0008                            LAB,B5   GH_IO,AUTO
          0 0000CC  DFC7 000E                            STB,B5   Y@CHN$+3,AUTO
          0 0000CE  BBC7 000E                            LAB,B3   Y@CHN$+3,AUTO
          0 0000D0  CBF0 0100                            LAB,B4   256,IMO
          0 0000D2  E380 0000 0000  xent                 LNJ,B6   GHH$IO
          0 0000D5       004E                            DC       s:1402,PREL

      809     1380    3                 GH_IO.CAS.FNC=%GH#IO_INPLCTBYT;
PL6.E3A0      #004=GDM$LCTHAND File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:156  

   1380   0 0000D6  6C1E                                 LDV,R6   30
          0 0000D7  EAC7 0008                            SRM,R6,'003F'X    GH_IO,AUTO
          0 0000D9       003F

      810     1381    3                 CALL GHH$IO_IN(GH_IO) ALTRET(DEAD);

   1381   0 0000DA  EBC7 0008                            LAB,B6   GH_IO,AUTO
          0 0000DC  EFC7 000E                            STB,B6   Y@CHN$+3,AUTO
          0 0000DE  BBC7 000E                            LAB,B3   Y@CHN$+3,AUTO
          0 0000E0  CBF0 0100                            LAB,B4   256,IMO
          0 0000E2  E380 0000 0000  xent                 LNJ,B6   GHH$IO_IN
          0 0000E5       003E                            DC       s:1402,PREL

      811     1382    3                 GD$MSG.LCTMSG.OLDMEM=GH_IO.DAS.LCTDAT;

   1382   0 0000E6  E2C7 0009                            LLH,R6   GH_IO+1,AUTO
          0 0000E8  ECC7 0006                            LDB,B6   @BUFFER,AUTO
          0 0000EA  E7C6 0002                            STH,R6   2,B6

      812     1383    3                 GD$MSG.LCTMSG.LCTMEM(I)=GD$MSG.LCTMSG.OLDMEM;

   1383   0 0000EC  E2C6 0002                            LLH,R6   2,B6
          0 0000EE  B847 000A                            LDR,R3   I,AUTO
          0 0000F0  3E08                                 ADV,R3   8
          0 0000F1  E7B6                                 STH,R6   ,B6,R3

      813     1384    3                 IF NOT(GD$MSG.LCTMSG.FLAGS.DUMP) THEN

   1384   0 0000F2  82C6 0003                            LB,'0001'X        3,B6
   1384   0 0000F4       0001
          0 0000F5  0581 0008                            BBF      s:1392,PREL

      814     1385    3                    EXIT DUMP_LCT;
      815     1386    3                 I=I+1;

   1386   0 0000F7  8AC7 000A                            INC      I,AUTO
PL6.E3A0      #004=GDM$LCTHAND File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:157  

      816     1387    3                 END;

   1387   0 0000F9  E847 000A                            LDR,R6   I,AUTO
          0 0000FB  6D0F                                 CMV,R6   15
          0 0000FC  0381 FFBD                            BLE      s:1376,PREL

      817     1388    2              END;

      818     1389        /*
      819     1390          Send the responce which is hopefully setup, and return
      820     1391                                                                                      */
      821     1392    1           CALL GDI$SEND_RESPONSE(SIZE,BUFFER);

   1392   0 0000FE  BBC7 0004                            LAB,B3   @SIZE,AUTO
          0 000100  CBF0 0200                            LAB,B4   512,IMO
          0 000102  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_RESPONSE
          0 000105       0001                            DC       s:1393,PREL

      822     1393    1           GH_IO.DAS.LCTDAT=KH$CHN.LCT55;

   1393   0 000106  ECC7 000B                            LDB,B6   Y@CHN$,AUTO
          0 000108  E2C6 0008                            LLH,R6   8,B6
          0 00010A  E7C7 0009                            STH,R6   GH_IO+1,AUTO

      823     1394    1           GH_IO.CAS.FNC=%GH#IO_OTPLCTBYT;

   1394   0 00010C  6C0B                                 LDV,R6   11
          0 00010D  EAC7 0008                            SRM,R6,'003F'X    GH_IO,AUTO
          0 00010F       003F

      824     1395    1           GH_IO.DAS.LCTADR=55;

   1395   0 000110  5C37                                 LDV,R5   55
          0 000111  DAC7 0009                            SRM,R5,'00FF'X    GH_IO+1,AUTO
          0 000113       00FF

PL6.E3A0      #004=GDM$LCTHAND File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:158  
      825     1396    1           CALL GHH$IO(GH_IO) ALTRET(DEAD);

   1396   0 000114  DBC7 0008                            LAB,B5   GH_IO,AUTO
          0 000116  DFC7 000E                            STB,B5   Y@CHN$+3,AUTO
          0 000118  BBC7 000E                            LAB,B3   Y@CHN$+3,AUTO
          0 00011A  CBF0 0100                            LAB,B4   256,IMO
          0 00011C  E380 0000 0000  xent                 LNJ,B6   GHH$IO
          0 00011F       0004                            DC       s:1402,PREL

      826     1397    1           RETURN;

   1397   0 000120  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      827     1398        /*
      828     1399          If we get here, one of the I/O routines altreturned.  For arguments
      829     1400          sake, lets set the DED bit in the flags and return.
      830     1401                                                                                      */
      831     1402    1   DEAD:   GD$MSG.LCTMSG.FLAGS = '0'B;

   1402   0 000123  ECC7 0006            DEAD            LDB,B6   @BUFFER,AUTO
          0 000125  8846 0003                            LBF,'00FF'X       3,B6
          0 000127       00FF

      832     1403    1           GD$MSG.LCTMSG.FLAGS.LID = '1'B;

   1403   0 000128  8946 0003                            LBT,'0040'X       3,B6
   1403   0 00012A       0040

      833     1404    1           GD$MSG.FNC=%GD#RSPBADMLCCALL;

   1404   0 00012B  6C35                                 LDV,R6   53
          0 00012C  E786                                 STH,R6   ,B6

      834     1405    1           RETURN;

   1405   0 00012D  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      835     1406    1   END;
PL6.E3A0      #004=GDM$LCTHAND File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:159  

PL6.E3A0      #004=GDM$LCTHAND File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:160  
--  Include file information  --

   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   GH_IOFNC_E.:E05TOU  is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   GD$MSG_M.:E05TOU  is referenced.
   GDA_EQUS_E.:E05TOU  is referenced.
   GD_EQUS_E.:E05TOU  is referenced.
   GD_DATA_M.:E05TOU  is referenced.
   GD_STATIC_DATA.:E05TOU  cannot be made into a system file and is referenced.
   G$BOBCAT_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GDM$LCTHAND.
PL6.E3A0      #004=GDM$LCTHAND File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:161  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @BUFFER                    4-0-0/w PTR         r     1 @SIZE
    *0-0-0/w ACHR        r     1 BUFFER                    *0-0-0/w STRC(3344)  r     1 GD$MSG
     8-0-0/w STRC(32)    r     1 GH_IO                      A-0-0/w UBIN(16)    r     1 I
    *0-0-0/w UBIN(16)    r     1 SIZE                       B-0-0/w PTR         r     1 Y@CHN$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 G$BOBCAT$                  0-0-0/w PTR         r     1 GD$DELTA_DATA$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(1696)  r     1 G$BOBCAT                   0-0-0/w STRC(512)   r     1 KH$CHN


   Procedure GDM$LCTHAND requires 304 words for executable code.
   Procedure GDM$LCTHAND requires 16 words of local(AUTO) storage.

    No errors detected in file GDM$MEMORY.:E05TSI    .
PL6.E3A0      #004=GDM$LCTHAND File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:162  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=GDM$LCTHAND File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:163  
          MINI XREF LISTING

BUFFER
      1003**DCL        25--PROC     1021--REDEF    1334<>CALL     1392<>CALL
DEAD
      1402**LABEL    1347--CALLALT  1349--CALLALT  1362--CALLALT  1379--CALLALT  1381--CALLALT  1396--CALLALT
DUMP_LCT
      1375**LABEL    1385--EXIT
G$BOBCAT.CHNLOW$
      1170**DCL      1327>>ASSIGN
G$BOBCAT$
      1001**DCL      1163--IMP-PTR  1327>>ASSIGN
GD$DELTA_DATA$
       473**DCL       487--IMP-PTR
GD$MSG.BRKRQS.IF$CONST.SIZE
      1072**DCL      1072--REDEF
GD$MSG.BRKRQS.IF$CONST.TEXT
      1072**DCL      1073--REDEF    1073--REDEF    1074--REDEF    1075--REDEF
GD$MSG.BRKRSP.BRK#
      1086**DCL      1086--REDEF
GD$MSG.BRKRSP.USER#
      1086**DCL      1086--REDEF
GD$MSG.FNC
      1021**DCL      1333<<ASSIGN   1340>>IF       1342<<ASSIGN   1372<<ASSIGN   1404<<ASSIGN
GD$MSG.LCTMSG.CHANNEL
      1127**DCL      1327>>ASSIGN
GD$MSG.LCTMSG.CHANNEL.CHN
      1127**DCL      1343>>ASSIGN   1373>>ASSIGN
GD$MSG.LCTMSG.FLAGS
      1129**DCL      1331<<ASSIGN   1353<<ASSIGN   1363<<ASSIGN   1402<<ASSIGN
GD$MSG.LCTMSG.FLAGS.BLN
      1133**DCL      1332<<ASSIGN
GD$MSG.LCTMSG.FLAGS.DUMP
      1133**DCL      1384>>IF
PL6.E3A0      #004=GDM$LCTHAND File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:164  
GD$MSG.LCTMSG.FLAGS.LID
      1133**DCL      1403<<ASSIGN
GD$MSG.LCTMSG.FLAGS.MM
      1133**DCL      1350>>IF
GD$MSG.LCTMSG.FLAGS.NM
      1133**DCL      1354<<ASSIGN
GD$MSG.LCTMSG.FLAGS.SO
      1133**DCL      1364<<ASSIGN
GD$MSG.LCTMSG.LCTMEM
      1133**DCL      1383<<ASSIGN
GD$MSG.LCTMSG.LCTNUM
      1129**DCL      1328>>IF       1344>>ASSIGN   1359>>ASSIGN   1376>>ASSIGN
GD$MSG.LCTMSG.NEWMEM
      1129**DCL      1361>>ASSIGN
GD$MSG.LCTMSG.OLDMEM
      1129**DCL      1350>>IF       1360<<ASSIGN   1382<<ASSIGN   1383>>ASSIGN
GD$MSG.LETMEM_D.VALUE.SIZE
      1044**DCL      1044--REDEF
GD$MSG.LETMEM_D.VALUE.TEXT
      1045**DCL      1045--REDEF    1045--REDEF    1046--REDEF    1047--REDEF
GD$MSG.MESSAGE
      1026**DCL      1026--REDEF    1027--REDEF    1027--REDEF    1028--REDEF    1039--REDEF    1052--REDEF
      1057--REDEF    1064--REDEF    1080--REDEF    1085--REDEF    1091--REDEF    1092--REDEF    1121--REDEF
      1123--REDEF    1134--REDEF    1141--REDEF    1153--REDEF
GD$MSG.SUBFNC
      1021**DCL      1021--REDEF    1025--REDEF
GD$MSG.TSA.I
      1093**DCL      1093--REDEF
GD$MSG.TSA.S
      1095**DCL      1095--REDEF
GD$MSG.USERQS.ASDT$
      1121**DCL      1121--REDEF    1122--REDEF
GDI$SEND_RESPONSE
      1319**DCL-ENT  1334--CALL     1392--CALL
GD_DATA.GD.DYNSP$
       500**DCL       500--REDEF
PL6.E3A0      #004=GDM$LCTHAND File=GDM$MEMORY.:E05TSI                           TUE 07/29/97 21:28 Page:165  
GD_DATA.GD.STEP_BRKPNT.ADR$
       501**DCL       502--REDEF
GD_DATA.GD.STEP_BRKPNT.START$
       502**DCL       502--REDEF
GHH$IO
      1321**DCL-ENT  1347--CALL     1362--CALL     1379--CALL     1396--CALL
GHH$IO_IN
      1320**DCL-ENT  1349--CALL     1381--CALL
GH_IO
      1186**DCL      1347<>CALL     1349<>CALL     1362<>CALL     1379<>CALL     1381<>CALL     1396<>CALL
GH_IO.CAS.CHN
      1186**DCL      1186--REDEF    1343<<ASSIGN   1373<<ASSIGN
GH_IO.CAS.FNC
      1187**DCL      1345<<ASSIGN   1348<<ASSIGN   1358<<ASSIGN   1377<<ASSIGN   1380<<ASSIGN   1394<<ASSIGN
GH_IO.DAS
      1187**DCL      1188--REDEF    1189--REDEF
GH_IO.DAS.LCTADR
      1188**DCL      1346<<ASSIGN   1359<<ASSIGN   1378<<ASSIGN   1395<<ASSIGN
GH_IO.DAS.LCTDAT
      1187**DCL      1344<<ASSIGN   1350>>IF       1360>>ASSIGN   1361<<ASSIGN   1376<<ASSIGN   1382>>ASSIGN
      1393<<ASSIGN
I
      1316**DCL      1374<<ASSIGN   1375>>DOWHILE  1376>>ASSIGN   1383>>ASSIGN   1386<<ASSIGN   1386>>ASSIGN
KH$CHN
      1206**DCL      1327--ASSIGN
KH$CHN.DVCID
      1232**DCL      1328>>IF
KH$CHN.LCT55
      1254**DCL      1393>>ASSIGN
KH$CHN.TERMID.TERM
      1302**DCL      1311--REDEF
SIZE
      1160**DCL        25--PROC     1003--IMP-SIZ  1334<>CALL     1334>>CALL     1392<>CALL     1392>>CALL
Y@CHN$
      1317**DCL      1206--IMP-PTR  1327<<ASSIGN   1328>>IF       1393>>ASSIGN
