VERSION E05

PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:1    
        1        1        /*M* NMI$INIT - Initialization procedure for MIRROR program.       */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DFC=YES, DMC=YES, EDMC=YES                                    */
        8        8        /*F*
        9        9        NAME:           NMI$INIT
       10       10
       11       11        PURPOSE:        To initialize the MIRROR program
       12       12        */
       13       13        /*D*
       14       14        NAME:           NMI$INIT
       15       15
       16       16        CALL:           CALL NMI$INIT ALTRET ( error ) ;
       17       17
       18       18        PARAMETERS:
       19       19        */
       20       20        /*K*
       21       21        error           specifies a statement label to which NMI$INIT will
       22       22                make an altreturn if an error is detected.
       23       23        */
       24       24        /*D*
       25       25        DESCRIPTION:
       26       26
       27       27        The NMI$INIT procedure is used to initialize the variables, DCBs,
       28       28        and library services routines for the MIRROR program. The NMI$INIT
       29       29        procedure uses the XUX$COMMON_OPTIONS procedure to process the
       30       30        options on the invocation line.
       31       31        */
       32       32        %EJECT ;
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:2    
       33       33        NMI$INIT:               PROC ALTRET ;
       34       34        /*
       35       35                        Includes
       36       36        */
       37       37        %INCLUDE                B$JIT ;
       38      640        %INCLUDE                B_SEGIDS_C ;
       39     1179        %INCLUDE                CP_6 ;
       40     6738        %INCLUDE                NM_PERR_C ;
       41     6815        %INCLUDE                NM_MACRO_M ;
       42     8220        %INCLUDE                XUG_ENTRY ;
       43     8251        %INCLUDE                XUX$INTERFACE_M ;
       44     9028        %INCLUDE                XU_MACRO_C ;
       45    12134        /*
       46    12135                        Entries
       47    12136        */
       48    12137    1   DCL 1 NME$ERRMSG        ENTRY(6) ;
       49    12138    1   DCL 1 NMU$CONVERT$      ENTRY(4) ALTRET ;
       50    12139    1   DCL 1 NMU$XCON          ENTRY ASYNC ;
       51    12140    1   DCL 1 XUX$COMMON_OPTIONS ENTRY(1) ALTRET ;
       52    12141        /*
       53    12142                        Variables
       54    12143        */
       55    12144                                %B$ALT ( NAME =
       56    12145              B$ALT             , STCLASS = BASED
       57    12146                                                                        ) ;
       58    12154    1   DCL 1 B$JIT$            PTR SYMREF ;
       59    12155                                %B$TCB ( NAME =
       60    12156              B$TCB             , STCLASS = "BASED(B$TCB$)"
       61    12157                                                                        ) ;
       62    12160    1   DCL 1 B$TCB$            PTR SYMREF ;
       63    12161    1   DCL 1 B_VERSION         UBIN BYTE CALIGNED SYMREF ;
       64    12162    1   DCL 1 B_VERSION$        PTR ALIGNED CONSTANT INIT(ADDR(B_VERSION)) ;
       65    12163
       66    12164                                %VLP_NAME ( FPTN =
       67    12165              ERRFID            , STCLASS = CONSTANT
       68    12166                                , NAME = %NMD#ERRFID
       69    12167                                                                        ) ;
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:3    
       70    12194              %F$DCB ;
       71    12251                                %FPT_INT ( FPTN =
       72    12252              FPT_INT           , STCLASS = CONSTANT
       73    12253                                , UENTRY = XUG$BREAK
       74    12254                                                                        ) ;
       75    12268                                %FPT_MONINFO ( FPTN =
       76    12269              FPT_MONINFO       , STCLASS = CONSTANT
       77    12270                                , MONPTRS = VLR_MONPTRS
       78    12271                                                                        ) ;
       79    12286                                %FPT_SAD ( FPTN =
       80    12287              FPT_SAD1          , STCLASS = CONSTANT
       81    12288                                , MONSID  = %TIGRSID
       82    12289                                , USERSID = %SPCL1SID
       83    12290                                                                        ) ;
       84    12305                                %FPT_SAD ( FPTN =
       85    12306              FPT_SAD2          , STCLASS = CONSTANT
       86    12307                                , MONSID  = %DVTTBLSID
       87    12308                                , USERSID = %SPCL2SID
       88    12309                                                                        ) ;
       89    12324    1   DCL 1 LEN               UBIN WORD STATIC ;
       90    12325    1   DCL 1 M$EI              DCB ;
       91    12326    1   DCL 1 M$EO              DCB ;
       92    12327    1   DCL 1 M$LM              DCB ;
       93    12328    1   DCL 1 M$SI              DCB ;
       94    12329
       95    12330                                %VLP_NAMEV ( FPTN =
       96    12331              NMD$ERRFID        , STCLASS = "BASED(NMD_PIT.ERRFID$)"
       97    12332                                                                        ) ;
       98    12339                                %VLP_NAMEV ( FPTN =
       99    12340              NMD$NAME          , STCLASS = BASED
      100    12341                                                                        ) ;
      101    12348                                %VLP_NAMEV ( FPTN =
      102    12349              NMD$RUFID         , STCLASS = "BASED(NMD_PIT.RUFID$)"
      103    12350                                                                        ) ;
      104    12357                                %VLP_NAMEV ( FPTN =
      105    12358              NMD$VERSION       , STCLASS = "BASED(B_VERSION$)"
      106    12359                                                                        ) ;
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:4    
      107    12366                                %NMD_PIT ( FPTN =
      108    12367              NMD_PIT           , STCLASS = SYMREF
      109    12368                                                                        ) ;
      110    12821                                %VLP_ERRCODE ( FPTN =
      111    12822              NMI#BAD_POINTER   , STCLASS = CONSTANT
      112    12823                                , ERR# = %E$NMD#BAD_POINTER
      113    12824                                , FCG  = %NMD#FCG
      114    12825                                , MID  = 'I'
      115    12826                                , MON  = %NO#
      116    12827                                , SEV  = 7
      117    12828                                                                        ) ;
      118    12873                                %VLP_ERRCODE ( FPTN =
      119    12874              NMI#GREETING      , STCLASS = CONSTANT
      120    12875                                , ERR# = %E$NMD#GREETING
      121    12876                                , FCG = %NMD#FCG
      122    12877                                , MID = 'I'
      123    12878                                , MON = %NO#
      124    12879                                , SEV = 0
      125    12880                                                                        ) ;
      126    12925        %EQU  PRIV              = %( PR_IOQ# | PR_IOQW# | PR_SPCLMM# ) ;
      127    12926                                %FPT_PRIV ( FPTN =
      128    12927              PRIV              , STCLASS = CONSTANT
      129    12928                                , AUTH = YES
      130    12929                                , PRIV = %PRIV
      131    12930                                                                        ) ;
      132    12945                                %FPT_UNFID ( FPTN =
      133    12946              UNFID             , STCLASS = STATIC
      134    12947                                , DCB = M$LM
      135    12948                                , LEN = LEN
      136    12949                                                                        ) ;
      137    12967                                %VLR_MONPTRS ( FPTN =
      138    12968              VLR_MONPTRS       , STCLASS = STATIC
      139    12969                                                                        ) ;
      140    12984                                %FPT_XCON ( FPTN =
      141    12985              XCON_SET          , STCLASS = CONSTANT
      142    12986                                , PXCON = NMD_PIT.PXCON$$
      143    12987                                , UENTRY = NMU$XCON
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:5    
      144    12988                                                                        ) ;
      145    13002                                %XUG_GETCMD ( NAME =
      146    13003              XUG_GETCMD        , STCLASS = SYMREF
      147    13004                                                                        ) ;
      148    13342                                %XUG_INIT ( NAME =
      149    13343              XUG_INIT          , STCLASS = SYMREF
      150    13344                                                                        ) ;
      151    13757                                %XUX$STD_OPTIONS ( NAME =
      152    13758              XUX$STD_OPTIONS   , STCLASS = "BASED(XUX_PARAM.STD_OPTIONS$)"
      153    13759                                                                        ) ;
      154    13923                                %XUX$PARAM ( NAME =
      155    13924              XUX_PARAM         , STCLASS = SYMREF
      156    13925                                                                        ) ;
      157    14066        %EJECT ;
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:6    
      158    14067        /*
      159    14068        Initialize DCB pointers which can't be initialized at compile time.
      160    14069        */
      161    14070    1           NMD_PIT.M$EI$ = DCBADDR(DCBNUM(M$EI)) ;
      162    14071    1           NMD_PIT.M$EO$ = DCBADDR(DCBNUM(M$EO)) ;
      163    14072    1           NMD_PIT.M$SI$ = DCBADDR(DCBNUM(M$SI)) ;
      164    14073
      165    14074    1           NMD_PIT.DEV.DCB$(0) = NMD_PIT.M$EI$ ;
      166    14075    1           NMD_PIT.DEV.DCB$(1) = NMD_PIT.M$EO$ ;
      167    14076        /*
      168    14077        Get the fid of the run unit.
      169    14078        */
      170    14079    1           UNFID.TEXTFID_ = VECTOR ( NMD$RUFID.NAME# ) ;
      171    14080    1           CALL M$UNFID ( UNFID )                  ALTRET ( ALTERR ) ;
      172    14081    1           NMD$RUFID.L# = LEN ;
      173    14082        /*
      174    14083        Change the error message fid to the current account.
      175    14084        */
      176    14085    1           CALL MERGE_FID ( VECTOR(NMD$ERRFID),
      177    14086    1                            NMD_PIT.RUFID$, ADDR(ERRFID) )
      178    14087    1                                                   ALTRET ( ALTERR ) ;
      179    14088        /*
      180    14089        Initialize the XUG library service routines.  These routines will
      181    14090        be used to read commands and report error messages.
      182    14091        */
      183    14092    1           CALL XUG$INIT ( XUG_GETCMD, XUG_INIT )  ALTRET ( ALTERR ) ;
      184    14093    1           CALL XUG$SETERRMSG ( XUG_GETCMD )       ALTRET ( ALTERR ) ;
      185    14094        /*E*
      186    14095        ERROR:  NMI-E$NMD#GREETING-0
      187    14096        MESSAGE0:%U1 %U2 here
      188    14097        */
      189    14098    1           CALL NME$ERRMSG ( NMI#GREETING, ,
      190    14099    1                             VECTOR(ADDR(DCBADDR(DCBNUM(M$LM))->F$DCB.NAME#.L)->
             14099                                      NMD$NAME),
      191    14100    1                             VECTOR(NMD$VERSION)                   ) ;
      192    14101        /*
      193    14102        Force user to have IOQ, IOQW, and SPCLMM privileges.
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:7    
      194    14103        */
      195    14104    1           CALL M$SPRIV ( PRIV )                   ALTRET ( ALTERR ) ;
      196    14105        /*
      197    14106        Process all of the options specified on the invocation line.
      198    14107        The XUX$COMMON_OPTIONS procedure will process any and all
      199    14108        options specified on the invocation line.  If an error is
      200    14109        detected, XUX$COMMON_OPTIONS will altreturn to this procedure.
      201    14110        This procedure will output the error mesage.
      202    14111        */
      203    14112    1           CALL XUX$COMMON_OPTIONS ( XUX_PARAM )
      204    14113    2           WHENALTRETURN DO ;
      205    14114    2               IF  XUX_PARAM.ERROR# = %YES#
      206    14115    2               THEN
      207    14116    2                   CALL NME$ERRMSG ( XUX_PARAM.ERROR_CODE ) ;
      208    14117    2               ALTRETURN ;
      209    14118    2               END ;
      210    14119        /*
      211    14120        Establish program values for monitor pointers.
      212    14121        */
      213    14122    1           CALL M$MONINFO ( FPT_MONINFO )          ALTRET ( ALTERR ) ;
      214    14123    1           CALL M$SAD ( FPT_SAD1 )                 ALTRET ( ALTERR ) ;
      215    14124    1           CALL M$SAD ( FPT_SAD2 )                 ALTRET ( ALTERR ) ;
      216    14125    1           CALL NMU$CONVERT$ ( NMD_PIT.N$DCT$$,
      217    14126    1                               BITBIN(%SPCL1SID),
      218    14127    1                               VLR_MONPTRS.N$DCT$$,
      219    14128    1                               BITBIN(%TIGRSID) )
      220    14129    2           WHENALTRETURN DO ;
      221    14130        /*E*
      222    14131        ERROR:  NMI-E$NMD#BAD_POINTER-7
      223    14132        MESSAGE:  Unsuccessful conversion of monitor pointer to user pointer.
      224    14133        DESCRIPTION:  The pointer conversion failed because the SEGID of the
      225    14134                      monitor pointer did not contain the expected value.
      226    14135        */
      227    14136    2               CALL NME$ERRMSG ( NMI#BAD_POINTER ) ;
      228    14137    2               GOTO ERROR ;
      229    14138    2               END;
      230    14139        /*
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:8    
      231    14140        Establish an exit control procedure for the MIRROR program. Set the
      232    14141        flag and pointer to indicate that this has been done.
      233    14142        */
      234    14143    1           CALL M$XCON ( XCON_SET )                ALTRET ( ALTERR ) ;
      235    14144    1           NMD_PIT.FLAGS.XCON# = %YES# ;
      236    14145        /*
      237    14146        Establish a break handling routine for the MIRROR program.
      238    14147        */
      239    14148    1           CALL M$INT ( FPT_INT )                  ALTRET ( ALTERR ) ;
      240    14149        /*
      241    14150        Return to the calling procedure.
      242    14151        */
      243    14152    1           RETURN ;
      244    14153
      245    14154    1   ALTERR: CALL NME$ERRMSG ( B$TCB.ALT$ -> B$ALT.ERR,
      246    14155    1                             B$TCB.ALT$ -> B$ALT.DCB# ) ;
      247    14156
      248    14157    1   ERROR:  ALTRETURN ;
      249    14158
      250    14159        %EJECT ;
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:9    
      251    14160        /*F*
      252    14161        Name:           MERGE_FID
      253    14162
      254    14163        Call:           CALL MERGE_FID ( fid_, fid1$, fid2$ )
      255    14164        .                    [ ALTRET ( error ) ] ;
      256    14165
      257    14166        .*B*            PARAMETERS fid
      258    14167        Parameters:
      259    14168
      260    14169        fid_            is a VECTOR that frames the TEXTC structure that is
      261    14170              returned with the full fid generated from the contents of the
      262    14171              merger of the two fids.
      263    14172
      264    14173        .*B*            fid1$
      265    14174        fid1$           is a PTR to a TEXTC structure that specifies the
      266    14175                base fid to be used in the merger.
      267    14176
      268    14177        .*B*            fid2$
      269    14178        fid2$           is a PTR to a TEXTC structure that specifies the
      270    14179                second fid to be used in the merger.  All fields present in
      271    14180                the fid point to by fid2$ will replace the respective field
      272    14181                in the fid pointed to by fid1$.
      273    14182
      274    14183        .*B*            error
      275    14184        error           is a label to which MERGE_FID will be an
      276    14185                ALTRETURN if an error is detected.  The error code will
      277    14186                be in the ALTRET frame of the TCB.
      278    14187
      279    14188        .*B*            DESCRIPTION
      280    14189        Description:
      281    14190
      282    14191        The MERGE_FID procedure is used to merge one fid (or a portion
      283    14192        of one fid) into another fid to generate a new fid.  A full fid
      284    14193        is of the form:
      285    14194
      286    14195        .       [dev[nn]#sn][/]filename[.[account].[password]]@wsn]
      287    14196
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:10   
      288    14197        (A complete description of the full fid can be found in the CP-6
      289    14198        Programmer Reference Manual.)  Generally, the first fid is a
      290    14199        complete (valid) fid and the second fid is a parital (and maybe
      291    14200        invalid) fid made up of the fields that are to be replaced in the
      292    14201        first fid.
      293    14202
      294    14203        .*B*            ENVIRONMENT
      295    14204        Environment:    Unprivileged user procedure.
      296    14205
      297    14206        */
      298    14207        %EJECT ;
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:11   
      299    14208    1   MERGE_FID:  PROC ( FID_, FID1$, FID2$ ) ALTRET ;
      300    14209        /*
      301    14210                        Parameters
      302    14211        */
      303    14212    2   DCL 1 FID1$             PTR PARAM ;
      304    14213    2   DCL 1 FID2$             PTR PARAM ;
      305    14214    2   DCL 1 FID_              VECTOR PARAM ;
      306    14215        /*
      307    14216                        Variables
      308    14217        */
      309    14218                                %VLP_ACCT ( FPTN =
      310    14219              "ACCT(0:1)"       , STCLASS = STATIC
      311    14220                                                                        ) ;
      312    14233    2   DCL 1 ASN(0:1)          UBIN BYTE CALIGNED STATIC ;
      313    14234    2   DCL 1 FID$              PTR ALIGNED AUTO ;
      314    14235                                %FPT_FID ( FPTN =
      315    14236              FID1              , STCLASS = STATIC
      316    14237                                , ACCT = "ACCT(0)"
      317    14238                                , ASN = "ASN(0)"
      318    14239                                , PASS = "PASS(0)"
      319    14240                                , RES = "RES(0)"
      320    14241                                , WSN = "WSN(0)"
      321    14242                                                                        ) ;
      322    14265                                %FPT_FID ( FPTN =
      323    14266              FID2              , STCLASS = STATIC
      324    14267                                , ACCT = "ACCT(1)"
      325    14268                                , ASN = "ASN(1)"
      326    14269                                , PASS = "PASS(1)"
      327    14270                                , RES = "RES(1)"
      328    14271                                , WSN = "WSN(1)"
      329    14272                                                                        ) ;
      330    14295    2   DCL 1 LEN               UBIN WORD ALIGNED STATIC ;
      331    14296                                %VLP_NAME ( FPTN =
      332    14297              "NAME@(0:1)"      , STCLASS = AUTO
      333    14298                                , LEN = 31
      334    14299                                                                        ) ;
      335    14326                                %VLP_PASS ( FPTN =
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:12   
      336    14327              "PASS(0:1)"       , STCLASS = STATIC
      337    14328                                                                        ) ;
      338    14341    2   DCL 1 RES(0:1)          CHAR(4) CALIGNED STATIC ;
      339    14342                                %VLR_FID ( FPTN =
      340    14343              "RESULTS@(0:1)"   , STCLASS = AUTO
      341    14344                                                                        ) ;
      342    14363    2   DCL 1 SN@(0:1)          ALIGNED AUTO,
      343    14364    2         2 NUM#            SBIN WORD,
      344    14365    2         2 SN1             CHAR(6) CALIGNED,
      345    14366    2         2 SN2             CHAR(6) CALIGNED,
      346    14367    2         2 SN3             CHAR(6) CALIGNED ;
      347    14368
      348    14369                                %FPT_UNFID ( FPTN =
      349    14370              UNFID             , STCLASS = STATIC
      350    14371                                , LEN = LEN
      351    14372                                                                        ) ;
      352    14390                                %VLP_NAMEV ( FPTN =
      353    14391              VLP$NAME          , STCLASS = BASED
      354    14392                                                                        ) ;
      355    14399                                %VLP_WSN ( FPTN =
      356    14400              "WSN(0:1)"        , STCLASS = STATIC
      357    14401                                                                        ) ;
      358    14414        %EJECT ;
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:13   
      359    14415        /*
      360    14416        Do a M$FID on the TEXTFID pointed to by FID1$.  If an error is
      361    14417        detected, go to make an altreturn to the calling procedure.
      362    14418        */
      363    14419    2           FID1.NAME_    = VECTOR ( NAME@(0) ) ;
      364    14420    2           FID1.RESULTS_ = VECTOR ( RESULTS@(0) ) ;
      365    14421    2           FID1.SN_      = VECTOR ( SN@(0) ) ;
      366    14422    2           FID1.TEXTFID_ = VECTOR ( FID1$ -> VLP$NAME.NAME# ) ;
      367    14423    2           CALL M$FID ( FID1 )                     ALTRET ( ERROR ) ;
      368    14424        /*
      369    14425        Do a M$FID on the TEXTFID pointed to by FID2$.  If an error is
      370    14426        detected, go to make an altreturn to the calling procedure.
      371    14427        */
      372    14428    2           FID2.NAME_    = VECTOR ( NAME@(1) ) ;
      373    14429    2           FID2.RESULTS_ = VECTOR ( RESULTS@(1) ) ;
      374    14430    2           FID2.SN_      = VECTOR ( SN@(1) ) ;
      375    14431    2           FID2.TEXTFID_ = VECTOR ( FID2$ -> VLP$NAME.NAME# ) ;
      376    14432    2           CALL M$FID ( FID2 )                     ALTRET ( ERROR ) ;
      377    14433        /*
      378    14434        Build the FPT_UNFID to merge the second fid into the first fid.
      379    14435        */
      380    14436        /*                                              ACCT               */
      381    14437    2           IF  RESULTS@.ACCT(1) = %YES#  THEN
      382    14438    2               UNFID.ACCT_ = VECTOR ( ACCT(1) ) ;
      383    14439    2           ELSE  IF  RESULTS@.ACCT(0) = %YES#  THEN
      384    14440    2               UNFID.ACCT_ = VECTOR ( ACCT(0) ) ;
      385    14441    2           ELSE
      386    14442    2               UNFID.ACCT_ = VECTOR ( NIL ) ;
      387    14443        /*                                              ASN                */
      388    14444    2           IF  RESULTS@.ASN(1) = %YES#  THEN
      389    14445    2               UNFID.ASN_ = VECTOR ( ASN(1) ) ;
      390    14446    2           ELSE  IF  RESULTS@.ASN(0) = %YES#  THEN
      391    14447    2               UNFID.ASN_ = VECTOR ( ASN(0) ) ;
      392    14448    2           ELSE
      393    14449    2               UNFID.ASN_ = VECTOR ( NIL ) ;
      394    14450        /*                                              NAME               */
      395    14451    2           IF  RESULTS@.NAME(1) = %YES#  THEN
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:14   
      396    14452    2               UNFID.NAME_ = VECTOR ( NAME@(1) ) ;
      397    14453    2           ELSE  IF  RESULTS@.NAME(0) = %YES#  THEN
      398    14454    2               UNFID.NAME_ = VECTOR ( NAME@(0) ) ;
      399    14455    2           ELSE
      400    14456    2               UNFID.NAME_ = VECTOR ( NIL ) ;
      401    14457        /*                                              PASS               */
      402    14458    2           IF  RESULTS@.PASS(1) = %YES#  THEN
      403    14459    2               UNFID.PASS_ = VECTOR ( PASS(1) ) ;
      404    14460    2           ELSE  IF  RESULTS@.PASS(0) = %YES#  THEN
      405    14461    2               UNFID.PASS_ = VECTOR ( PASS(0) ) ;
      406    14462    2           ELSE
      407    14463    2               UNFID.PASS_ = VECTOR ( NIL ) ;
      408    14464        /*                                              RES                */
      409    14465    2           IF  RESULTS@.RES(1) = %YES#  THEN
      410    14466    2               UNFID.RES_ = VECTOR ( RES(1) ) ;
      411    14467    2           ELSE  IF  RESULTS@.RES(0) = %YES#  THEN
      412    14468    2               UNFID.RES_ = VECTOR ( RES(0) ) ;
      413    14469    2           ELSE
      414    14470    2               UNFID.RES_ = VECTOR ( NIL ) ;
      415    14471        /*                                              SN                 */
      416    14472    2           IF  RESULTS@.SN(1) = %YES#  THEN
      417    14473    2               UNFID.SN_ = VECTOR ( SN@(1) ) ;
      418    14474    2           ELSE  IF  RESULTS@.SN(0) = %YES#  THEN
      419    14475    2               UNFID.SN_ = VECTOR ( SN@(0) ) ;
      420    14476    2           ELSE
      421    14477    2               UNFID.SN_ = VECTOR ( NIL ) ;
      422    14478        /*                                              WSN                */
      423    14479    2           IF  RESULTS@.WSN(1) = %YES#  THEN
      424    14480    2               UNFID.WSN_ = VECTOR ( WSN(1) ) ;
      425    14481    2           ELSE  IF  RESULTS@.WSN(0) = %YES#  THEN
      426    14482    2               UNFID.WSN_ = VECTOR ( WSN(0) ) ;
      427    14483    2           ELSE
      428    14484    2               UNFID.WSN_ = VECTOR ( NIL ) ;
      429    14485        /*
      430    14486        Define the TEXTFID area where the merged fid is to be built.  Then
      431    14487        call m$UNFID to build the merged fid and set the length of the
      432    14488        merged fid to the value returned by M$UNFID.
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:15   
      433    14489        */
      434    14490    2           FID$ = VBASE ( FID_ ) ;
      435    14491    2           FID$ -> VLP$NAME.L# = VBOUND ( FID_ ) ;
      436    14492    2           UNFID.TEXTFID_ = VECTOR ( FID$ -> VLP$NAME.NAME# ) ;
      437    14493    2           CALL M$UNFID ( UNFID )                  ALTRET ( ERROR )  ;
      438    14494    2           FID$ -> VLP$NAME.L# = LEN ;
      439    14495        /*
      440    14496        Return to the calling procedure.
      441    14497        */
      442    14498    2           RETURN ;
      443    14499        /*
      444    14500        An error has been detected.  Make an altreturn to the calling
      445    14501        procedure.
      446    14502        */
      447    14503    2   ERROR:  ALTRETURN ;
      448    14504    2           END MERGE_FID ;
      449    14505    1           END NMI$INIT ;

PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:16   
--  Include file information  --

   XU_MACRO_C.:E05TOU  is referenced.
   XUX$INTERFACE_M.:E05TOU  is referenced.
   XUG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   NM_SUBS_C.:E05TOU  is referenced.
   NM_EQU_E.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   NM_MACRO_M.:E05TOU  is referenced.
   NM_PERR_C.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure NMI$INIT.

   Procedure NMI$INIT requires 368 words for executable code.
   Procedure NMI$INIT requires 76 words of local(AUTO) storage.

    No errors detected in file NMI$INIT.:E05TSI    .

PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:17   

 Object Unit name= NMI$INIT                                   File name= NMI$INIT.:E05TOU
 UTS= JUL 30 '97 03:48:47.28 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS     40     50  NMI$INIT
    2   Data  even  none   126    176  NMI$INIT
    3   DCB   even  none     0      0  M$EI
    4   DCB   even  none     0      0  M$EO
    5   DCB   even  none     0      0  M$LM
    6   DCB   even  none     0      0  M$SI
    7   Proc  even  none   368    560  NMI$INIT
    8  RoData even  none    40     50  NMI$INIT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     7      0   yes    yes     yes      Std        0  NMI$INIT
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:18   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          Async      0 XUG$BREAK
         yes          Async      0 NMU$XCON
 yes     yes           Std       1 XUG$SETERRMSG
 yes     yes           Std       1 XUX$COMMON_OPTIONS
 yes     yes           Std       4 NMU$CONVERT$
 yes     yes           Std       2 XUG$INIT
         yes           Std       6 NME$ERRMSG
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B$JIT$                                B$TCB$
     B_VERSION                             M$EI                                  M$EO
     M$LM                                  M$SI                                  NMD_PIT
     XUG_GETCMD                            XUG_INIT                              XUX_PARAM
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:19   


        1        1        /*M* NMI$INIT - Initialization procedure for MIRROR program.       */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DFC=YES, DMC=YES, EDMC=YES                                    */
        8        8        /*F*
        9        9        NAME:           NMI$INIT
       10       10
       11       11        PURPOSE:        To initialize the MIRROR program
       12       12        */
       13       13        /*D*
       14       14        NAME:           NMI$INIT
       15       15
       16       16        CALL:           CALL NMI$INIT ALTRET ( error ) ;
       17       17
       18       18        PARAMETERS:
       19       19        */
       20       20        /*K*
       21       21        error           specifies a statement label to which NMI$INIT will
       22       22                make an altreturn if an error is detected.
       23       23        */
       24       24        /*D*
       25       25        DESCRIPTION:
       26       26
       27       27        The NMI$INIT procedure is used to initialize the variables, DCBs,
       28       28        and library services routines for the MIRROR program. The NMI$INIT
       29       29        procedure uses the XUX$COMMON_OPTIONS procedure to process the
       30       30        options on the invocation line.
       31       31        */
       32       32        %EJECT ;
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:20   
       33       33        NMI$INIT:               PROC ALTRET ;

     33  7 000000   000000 700200 xent  NMI$INIT     TSX0  ! X66_AUTO_0
         7 000001   000114 000000                    ZERO    76,0

       34       34        /*
       35       35                        Includes
       36       36        */
       37       37        %INCLUDE                B$JIT ;
       38      640        %INCLUDE                B_SEGIDS_C ;
       39     1179        %INCLUDE                CP_6 ;
       40     6738        %INCLUDE                NM_PERR_C ;
       41     6815        %INCLUDE                NM_MACRO_M ;
       42     8220        %INCLUDE                XUG_ENTRY ;
       43     8251        %INCLUDE                XUX$INTERFACE_M ;
       44     9028        %INCLUDE                XU_MACRO_C ;
       45    12134        /*
       46    12135                        Entries
       47    12136        */
       48    12137    1   DCL 1 NME$ERRMSG        ENTRY(6) ;
       49    12138    1   DCL 1 NMU$CONVERT$      ENTRY(4) ALTRET ;
       50    12139    1   DCL 1 NMU$XCON          ENTRY ASYNC ;
       51    12140    1   DCL 1 XUX$COMMON_OPTIONS ENTRY(1) ALTRET ;
       52    12141        /*
       53    12142                        Variables
       54    12143        */
       55    12144                                %B$ALT ( NAME =
       56    12145              B$ALT             , STCLASS = BASED
       57    12146                                                                        ) ;
       58    12154    1   DCL 1 B$JIT$            PTR SYMREF ;
       59    12155                                %B$TCB ( NAME =
       60    12156              B$TCB             , STCLASS = "BASED(B$TCB$)"
       61    12157                                                                        ) ;
       62    12160    1   DCL 1 B$TCB$            PTR SYMREF ;
       63    12161    1   DCL 1 B_VERSION         UBIN BYTE CALIGNED SYMREF ;
       64    12162    1   DCL 1 B_VERSION$        PTR ALIGNED CONSTANT INIT(ADDR(B_VERSION)) ;
       65    12163
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:21   
       66    12164                                %VLP_NAME ( FPTN =
       67    12165              ERRFID            , STCLASS = CONSTANT
       68    12166                                , NAME = %NMD#ERRFID
       69    12167                                                                        ) ;
       70    12194              %F$DCB ;
       71    12251                                %FPT_INT ( FPTN =
       72    12252              FPT_INT           , STCLASS = CONSTANT
       73    12253                                , UENTRY = XUG$BREAK
       74    12254                                                                        ) ;
       75    12268                                %FPT_MONINFO ( FPTN =
       76    12269              FPT_MONINFO       , STCLASS = CONSTANT
       77    12270                                , MONPTRS = VLR_MONPTRS
       78    12271                                                                        ) ;
       79    12286                                %FPT_SAD ( FPTN =
       80    12287              FPT_SAD1          , STCLASS = CONSTANT
       81    12288                                , MONSID  = %TIGRSID
       82    12289                                , USERSID = %SPCL1SID
       83    12290                                                                        ) ;
       84    12305                                %FPT_SAD ( FPTN =
       85    12306              FPT_SAD2          , STCLASS = CONSTANT
       86    12307                                , MONSID  = %DVTTBLSID
       87    12308                                , USERSID = %SPCL2SID
       88    12309                                                                        ) ;
       89    12324    1   DCL 1 LEN               UBIN WORD STATIC ;
       90    12325    1   DCL 1 M$EI              DCB ;
       91    12326    1   DCL 1 M$EO              DCB ;
       92    12327    1   DCL 1 M$LM              DCB ;
       93    12328    1   DCL 1 M$SI              DCB ;
       94    12329
       95    12330                                %VLP_NAMEV ( FPTN =
       96    12331              NMD$ERRFID        , STCLASS = "BASED(NMD_PIT.ERRFID$)"
       97    12332                                                                        ) ;
       98    12339                                %VLP_NAMEV ( FPTN =
       99    12340              NMD$NAME          , STCLASS = BASED
      100    12341                                                                        ) ;
      101    12348                                %VLP_NAMEV ( FPTN =
      102    12349              NMD$RUFID         , STCLASS = "BASED(NMD_PIT.RUFID$)"
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:22   
      103    12350                                                                        ) ;
      104    12357                                %VLP_NAMEV ( FPTN =
      105    12358              NMD$VERSION       , STCLASS = "BASED(B_VERSION$)"
      106    12359                                                                        ) ;
      107    12366                                %NMD_PIT ( FPTN =
      108    12367              NMD_PIT           , STCLASS = SYMREF
      109    12368                                                                        ) ;
      110    12821                                %VLP_ERRCODE ( FPTN =
      111    12822              NMI#BAD_POINTER   , STCLASS = CONSTANT
      112    12823                                , ERR# = %E$NMD#BAD_POINTER
      113    12824                                , FCG  = %NMD#FCG
      114    12825                                , MID  = 'I'
      115    12826                                , MON  = %NO#
      116    12827                                , SEV  = 7
      117    12828                                                                        ) ;
      118    12873                                %VLP_ERRCODE ( FPTN =
      119    12874              NMI#GREETING      , STCLASS = CONSTANT
      120    12875                                , ERR# = %E$NMD#GREETING
      121    12876                                , FCG = %NMD#FCG
      122    12877                                , MID = 'I'
      123    12878                                , MON = %NO#
      124    12879                                , SEV = 0
      125    12880                                                                        ) ;
      126    12925        %EQU  PRIV              = %( PR_IOQ# | PR_IOQW# | PR_SPCLMM# ) ;
      127    12926                                %FPT_PRIV ( FPTN =
      128    12927              PRIV              , STCLASS = CONSTANT
      129    12928                                , AUTH = YES
      130    12929                                , PRIV = %PRIV
      131    12930                                                                        ) ;
      132    12945                                %FPT_UNFID ( FPTN =
      133    12946              UNFID             , STCLASS = STATIC
      134    12947                                , DCB = M$LM
      135    12948                                , LEN = LEN
      136    12949                                                                        ) ;
      137    12967                                %VLR_MONPTRS ( FPTN =
      138    12968              VLR_MONPTRS       , STCLASS = STATIC
      139    12969                                                                        ) ;
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:23   
      140    12984                                %FPT_XCON ( FPTN =
      141    12985              XCON_SET          , STCLASS = CONSTANT
      142    12986                                , PXCON = NMD_PIT.PXCON$$
      143    12987                                , UENTRY = NMU$XCON
      144    12988                                                                        ) ;
      145    13002                                %XUG_GETCMD ( NAME =
      146    13003              XUG_GETCMD        , STCLASS = SYMREF
      147    13004                                                                        ) ;
      148    13342                                %XUG_INIT ( NAME =
      149    13343              XUG_INIT          , STCLASS = SYMREF
      150    13344                                                                        ) ;
      151    13757                                %XUX$STD_OPTIONS ( NAME =
      152    13758              XUX$STD_OPTIONS   , STCLASS = "BASED(XUX_PARAM.STD_OPTIONS$)"
      153    13759                                                                        ) ;
      154    13923                                %XUX$PARAM ( NAME =
      155    13924              XUX_PARAM         , STCLASS = SYMREF
      156    13925                                                                        ) ;
      157    14066        %EJECT ;
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:24   
      158    14067        /*
      159    14068        Initialize DCB pointers which can't be initialized at compile time.
      160    14069        */
      161    14070    1           NMD_PIT.M$EI$ = DCBADDR(DCBNUM(M$EI)) ;

  14070  7 000002   000000 236007 xsym               LDQ     M$EI,DL
         7 000003   000000 470400 8                  LDP0    0
         7 000004   000000 471500                    LDP1    0,,PR0
         7 000005   100000 236106                    LDQ     0,QL,PR1
         7 000006   000276 756000 xsym               STQ     NMD_PIT+190

      162    14071    1           NMD_PIT.M$EO$ = DCBADDR(DCBNUM(M$EO)) ;

  14071  7 000007   000000 236007 xsym               LDQ     M$EO,DL
         7 000010   100000 236106                    LDQ     0,QL,PR1
         7 000011   000300 756000 xsym               STQ     NMD_PIT+192

      163    14072    1           NMD_PIT.M$SI$ = DCBADDR(DCBNUM(M$SI)) ;

  14072  7 000012   000000 236007 xsym               LDQ     M$SI,DL
         7 000013   100000 236106                    LDQ     0,QL,PR1
         7 000014   000302 756000 xsym               STQ     NMD_PIT+194

      164    14073
      165    14074    1           NMD_PIT.DEV.DCB$(0) = NMD_PIT.M$EI$ ;

  14074  7 000015   000276 236000 xsym               LDQ     NMD_PIT+190
         7 000016   000007 756000 xsym               STQ     NMD_PIT+7

      166    14075    1           NMD_PIT.DEV.DCB$(1) = NMD_PIT.M$EO$ ;

  14075  7 000017   000300 236000 xsym               LDQ     NMD_PIT+192
         7 000020   000041 756000 xsym               STQ     NMD_PIT+33

      167    14076        /*
      168    14077        Get the fid of the run unit.
      169    14078        */
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:25   
      170    14079    1           UNFID.TEXTFID_ = VECTOR ( NMD$RUFID.NAME# ) ;

  14079  7 000021   000321 473400 xsym               LDP3    NMD_PIT+209
         7 000022   000100 101500                    MRL     fill='000'O
         7 000023   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         7 000024   200072 000002                    ADSC9   SN@+12,,AUTO             cn=0,n=2
         7 000025   200072 220100                    LDX0    SN@+12,,AUTO
         7 000026   000000 635010                    EAA     0,X0
         7 000027   000002 771000                    ARL     2
         7 000030   000140 135007                    SBLA    96,DL
         7 000031   000321 236000 xsym               LDQ     NMD_PIT+209
         7 000032   200000 036007                    ADLQ    65536,DL
         7 000033   000004 757000 2                  STAQ    UNFID+2

      171    14080    1           CALL M$UNFID ( UNFID )                  ALTRET ( ALTERR ) ;

  14080  7 000034   000002 630400 2                  EPPR0   UNFID
         7 000035   420021 713400                    CLIMB   alt,+8209
         7 000036   404400 401760                    pmme    nvectors=10
         7 000037   000234 702000 7                  TSX2    ALTERR

      172    14081    1           NMD$RUFID.L# = LEN ;

  14081  7 000040   000321 470400 xsym               LDP0    NMD_PIT+209
         7 000041   000100 101400                    MRL     fill='000'O
         7 000042   000000 000004 2                  ADSC9   LEN                      cn=0,n=4
         7 000043   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1

      173    14082        /*
      174    14083        Change the error message fid to the current account.
      175    14084        */
      176    14085    1           CALL MERGE_FID ( VECTOR(NMD$ERRFID),

  14085  7 000044   000272 470400 xsym               LDP0    NMD_PIT+186
         7 000045   000100 101500                    MRL     fill='000'O
         7 000046   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         7 000047   200072 000002                    ADSC9   SN@+12,,AUTO             cn=0,n=2
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:26   
         7 000050   200072 220100                    LDX0    SN@+12,,AUTO
         7 000051   000001 621010                    EAX1    1,X0
         7 000052   000000 635011                    EAA     0,X1
         7 000053   000002 771000                    ARL     2
         7 000054   000140 135007                    SBLA    96,DL
         7 000055   000272 236000 xsym               LDQ     NMD_PIT+186
         7 000056   200110 757100                    STAQ    SN@+26,,AUTO
         7 000057   000001 236000 8                  LDQ     1
         7 000060   200112 756100                    STQ     SN@+28,,AUTO
         7 000061   200112 631500                    EPPR1   SN@+28,,AUTO
         7 000062   200007 451500                    STP1    @FID1$+1,,AUTO
         7 000063   000002 236000 8                  LDQ     2
         7 000064   200006 756100                    STQ     @FID_+1,,AUTO
         7 000065   200110 633500                    EPPR3   SN@+26,,AUTO
         7 000066   200005 453500                    STP3    5,,AUTO
         7 000067   000247 701000 7                  TSX1    MERGE_FID
         7 000070   000234 702000 7                  TSX2    ALTERR

      177    14086    1                            NMD_PIT.RUFID$, ADDR(ERRFID) )
      178    14087    1                                                   ALTRET ( ALTERR ) ;
      179    14088        /*
      180    14089        Initialize the XUG library service routines.  These routines will
      181    14090        be used to read commands and report error messages.
      182    14091        */
      183    14092    1           CALL XUG$INIT ( XUG_GETCMD, XUG_INIT )  ALTRET ( ALTERR ) ;

  14092  7 000071   000003 630400 8                  EPPR0   3
         7 000072   000020 631400 xsym               EPPR1   B_VECTNIL+16
         7 000073   000000 701000 xent               TSX1    XUG$INIT
         7 000074   000234 702000 7                  TSX2    ALTERR

      184    14093    1           CALL XUG$SETERRMSG ( XUG_GETCMD )       ALTRET ( ALTERR ) ;

  14093  7 000075   000003 630400 8                  EPPR0   3
         7 000076   000017 631400 xsym               EPPR1   B_VECTNIL+15
         7 000077   000000 701000 xent               TSX1    XUG$SETERRMSG
         7 000100   000234 702000 7                  TSX2    ALTERR
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:27   

      185    14094        /*E*
      186    14095        ERROR:  NMI-E$NMD#GREETING-0
      187    14096        MESSAGE0:%U1 %U2 here
      188    14097        */
      189    14098    1           CALL NME$ERRMSG ( NMI#GREETING, ,

  14098  7 000101   000000 236007 xsym               LDQ     M$LM,DL
         7 000102   000000 470400 8                  LDP0    0
         7 000103   000000 471500                    LDP1    0,,PR0
         7 000104   100000 473506                    LDP3    0,QL,PR1
         7 000105   000000 236007 xsym               LDQ     M$LM,DL
         7 000106   100000 474506                    LDP4    0,QL,PR1
         7 000107   400010 236100                    LDQ     8,,PR4
         7 000110   000033 772000                    QRL     27
         7 000111   000001 620006                    EAX0    1,QL
         7 000112   000000 635010                    EAA     0,X0
         7 000113   000002 771000                    ARL     2
         7 000114   000140 135007                    SBLA    96,DL
         7 000115   200072 453500                    STP3    SN@+12,,AUTO
         7 000116   200072 236100                    LDQ     SN@+12,,AUTO
         7 000117   000010 036003                    ADLQ    8,DU
         7 000120   000000 474400 1                  LDP4    B_VERSION$
         7 000121   000100 101500                    MRL     fill='000'O
         7 000122   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
         7 000123   200073 000002                    ADSC9   SN@+13,,AUTO             cn=0,n=2
         7 000124   200073 220100                    LDX0    SN@+13,,AUTO
         7 000125   000001 621010                    EAX1    1,X0
         7 000126   200074 757100                    STAQ    SN@+14,,AUTO
         7 000127   000000 635011                    EAA     0,X1
         7 000130   000002 771000                    ARL     2
         7 000131   000140 135007                    SBLA    96,DL
         7 000132   000000 236000 1                  LDQ     B_VERSION$
         7 000133   200100 757100                    STAQ    SN@+18,,AUTO
         7 000134   200074 237100                    LDAQ    SN@+14,,AUTO
         7 000135   200076 757100                    STAQ    SN@+16,,AUTO
         7 000136   200100 237100                    LDAQ    SN@+18,,AUTO
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:28   
         7 000137   200102 757100                    STAQ    SN@+20,,AUTO
         7 000140   200102 635500                    EPPR5   SN@+20,,AUTO
         7 000141   200107 455500                    STP5    SN@+25,,AUTO
         7 000142   200076 636500                    EPPR6   SN@+16,,AUTO
         7 000143   200106 456500                    STP6    SN@+24,,AUTO
         7 000144   000001 236000 xsym               LDQ     B_VECTNIL+1
         7 000145   000005 235000 8                  LDA     5
         7 000146   200104 757100                    STAQ    SN@+22,,AUTO
         7 000147   200104 630500                    EPPR0   SN@+22,,AUTO
         7 000150   000022 631400 xsym               EPPR1   B_VECTNIL+18
         7 000151   000000 701000 xent               TSX1    NME$ERRMSG
         7 000152   000000 011000                    NOP     0

      190    14099    1                             VECTOR(ADDR(DCBADDR(DCBNUM(M$LM))->F$DCB.NAME#.L)->
             14099                                      NMD$NAME),
      191    14100    1                             VECTOR(NMD$VERSION)                   ) ;
      192    14101        /*
      193    14102        Force user to have IOQ, IOQW, and SPCLMM privileges.
      194    14103        */
      195    14104    1           CALL M$SPRIV ( PRIV )                   ALTRET ( ALTERR ) ;

  14104  7 000153   000036 630400 1                  EPPR0   PRIV
         7 000154   420012 713400                    CLIMB   alt,+8202
         7 000155   400000 401760                    pmme    nvectors=1
         7 000156   000234 702000 7                  TSX2    ALTERR

      196    14105        /*
      197    14106        Process all of the options specified on the invocation line.
      198    14107        The XUX$COMMON_OPTIONS procedure will process any and all
      199    14108        options specified on the invocation line.  If an error is
      200    14109        detected, XUX$COMMON_OPTIONS will altreturn to this procedure.
      201    14110        This procedure will output the error mesage.
      202    14111        */
      203    14112    1           CALL XUX$COMMON_OPTIONS ( XUX_PARAM )

  14112  7 000157   000006 630400 8                  EPPR0   6
         7 000160   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:29   
         7 000161   000000 701000 xent               TSX1    XUX$COMMON_OPTIONS
         7 000162   000164 702000 7                  TSX2    s:14114
         7 000163   000173 710000 7                  TRA     s:14122

      204    14113    2           WHENALTRETURN DO ;

      205    14114    2               IF  XUX_PARAM.ERROR# = %YES#

  14114  7 000164   000007 234000 xsym               SZN     XUX_PARAM+7
         7 000165   000172 605000 7                  TPL     s:14117

      206    14115    2               THEN
      207    14116    2                   CALL NME$ERRMSG ( XUX_PARAM.ERROR_CODE ) ;

  14116  7 000166   000007 630400 8                  EPPR0   7
         7 000167   000017 631400 xsym               EPPR1   B_VECTNIL+15
         7 000170   000000 701000 xent               TSX1    NME$ERRMSG
         7 000171   000000 011000                    NOP     0

      208    14117    2               ALTRETURN ;

  14117  7 000172   000000 702200 xent               TSX2  ! X66_AALT

      209    14118    2               END ;
      210    14119        /*
      211    14120        Establish program values for monitor pointers.
      212    14121        */
      213    14122    1           CALL M$MONINFO ( FPT_MONINFO )          ALTRET ( ALTERR ) ;

  14122  7 000173   000010 630400 1                  EPPR0   FPT_MONINFO
         7 000174   420023 713400                    CLIMB   alt,+8211
         7 000175   402400 401760                    pmme    nvectors=6
         7 000176   000234 702000 7                  TSX2    ALTERR

      214    14123    1           CALL M$SAD ( FPT_SAD1 )                 ALTRET ( ALTERR ) ;

  14123  7 000177   000024 630400 1                  EPPR0   FPT_SAD1
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:30   
         7 000200   430015 713400                    CLIMB   alt,+12301
         7 000201   400000 401760                    pmme    nvectors=1
         7 000202   000234 702000 7                  TSX2    ALTERR

      215    14124    1           CALL M$SAD ( FPT_SAD2 )                 ALTRET ( ALTERR ) ;

  14124  7 000203   000030 630400 1                  EPPR0   FPT_SAD2
         7 000204   430015 713400                    CLIMB   alt,+12301
         7 000205   400000 401760                    pmme    nvectors=1
         7 000206   000234 702000 7                  TSX2    ALTERR

      216    14125    1           CALL NMU$CONVERT$ ( NMD_PIT.N$DCT$$,

  14125  7 000207   000012 630400 8                  EPPR0   10
         7 000210   000022 631400 xsym               EPPR1   B_VECTNIL+18
         7 000211   000000 701000 xent               TSX1    NMU$CONVERT$
         7 000212   000214 702000 7                  TSX2    s:14136
         7 000213   000221 710000 7                  TRA     s:14143

      217    14126    1                               BITBIN(%SPCL1SID),
      218    14127    1                               VLR_MONPTRS.N$DCT$$,
      219    14128    1                               BITBIN(%TIGRSID) )
      220    14129    2           WHENALTRETURN DO ;

      221    14130        /*E*
      222    14131        ERROR:  NMI-E$NMD#BAD_POINTER-7
      223    14132        MESSAGE:  Unsuccessful conversion of monitor pointer to user pointer.
      224    14133        DESCRIPTION:  The pointer conversion failed because the SEGID of the
      225    14134                      monitor pointer did not contain the expected value.
      226    14135        */
      227    14136    2               CALL NME$ERRMSG ( NMI#BAD_POINTER ) ;

  14136  7 000214   000016 630400 8                  EPPR0   14
         7 000215   000017 631400 xsym               EPPR1   B_VECTNIL+15
         7 000216   000000 701000 xent               TSX1    NME$ERRMSG
         7 000217   000000 011000                    NOP     0

PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:31   
      228    14137    2               GOTO ERROR ;

  14137  7 000220   000246 710000 7                  TRA     ERROR

      229    14138    2               END;
      230    14139        /*
      231    14140        Establish an exit control procedure for the MIRROR program. Set the
      232    14141        flag and pointer to indicate that this has been done.
      233    14142        */
      234    14143    1           CALL M$XCON ( XCON_SET )                ALTRET ( ALTERR ) ;

  14143  7 000221   000042 630400 1                  EPPR0   XCON_SET
         7 000222   410003 713400                    CLIMB   alt,+4099
         7 000223   400400 401760                    pmme    nvectors=2
         7 000224   000234 702000 7                  TSX2    ALTERR

      235    14144    1           NMD_PIT.FLAGS.XCON# = %YES# ;

  14144  7 000225   004000 236003                    LDQ     2048,DU
         7 000226   000273 256000 xsym               ORSQ    NMD_PIT+187

      236    14145        /*
      237    14146        Establish a break handling routine for the MIRROR program.
      238    14147        */
      239    14148    1           CALL M$INT ( FPT_INT )                  ALTRET ( ALTERR ) ;

  14148  7 000227   000004 630400 1                  EPPR0   FPT_INT
         7 000230   410002 713400                    CLIMB   alt,+4098
         7 000231   400000 401760                    pmme    nvectors=1
         7 000232   000234 702000 7                  TSX2    ALTERR

      240    14149        /*
      241    14150        Return to the calling procedure.
      242    14151        */
      243    14152    1           RETURN ;

  14152  7 000233   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:32   

      244    14153
      245    14154    1   ALTERR: CALL NME$ERRMSG ( B$TCB.ALT$ -> B$ALT.ERR,

  14154  7 000234   000000 470400 xsym  ALTERR       LDP0    B$TCB$
         7 000235   000000 471500                    LDP1    0,,PR0
         7 000236   100101 633500                    EPPR3   65,,PR1
         7 000237   200073 453500                    STP3    SN@+13,,AUTO
         7 000240   100102 634500                    EPPR4   66,,PR1
         7 000241   200072 454500                    STP4    SN@+12,,AUTO
         7 000242   200072 630500                    EPPR0   SN@+12,,AUTO
         7 000243   000020 631400 xsym               EPPR1   B_VECTNIL+16
         7 000244   000000 701000 xent               TSX1    NME$ERRMSG
         7 000245   000000 011000                    NOP     0

      246    14155    1                             B$TCB.ALT$ -> B$ALT.DCB# ) ;
      247    14156
      248    14157    1   ERROR:  ALTRETURN ;

  14157  7 000246   000000 702200 xent  ERROR        TSX2  ! X66_AALT

      249    14158
      250    14159        %EJECT ;
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:33   
      251    14160        /*F*
      252    14161        Name:           MERGE_FID
      253    14162
      254    14163        Call:           CALL MERGE_FID ( fid_, fid1$, fid2$ )
      255    14164        .                    [ ALTRET ( error ) ] ;
      256    14165
      257    14166        .*B*            PARAMETERS fid
      258    14167        Parameters:
      259    14168
      260    14169        fid_            is a VECTOR that frames the TEXTC structure that is
      261    14170              returned with the full fid generated from the contents of the
      262    14171              merger of the two fids.
      263    14172
      264    14173        .*B*            fid1$
      265    14174        fid1$           is a PTR to a TEXTC structure that specifies the
      266    14175                base fid to be used in the merger.
      267    14176
      268    14177        .*B*            fid2$
      269    14178        fid2$           is a PTR to a TEXTC structure that specifies the
      270    14179                second fid to be used in the merger.  All fields present in
      271    14180                the fid point to by fid2$ will replace the respective field
      272    14181                in the fid pointed to by fid1$.
      273    14182
      274    14183        .*B*            error
      275    14184        error           is a label to which MERGE_FID will be an
      276    14185                ALTRETURN if an error is detected.  The error code will
      277    14186                be in the ALTRET frame of the TCB.
      278    14187
      279    14188        .*B*            DESCRIPTION
      280    14189        Description:
      281    14190
      282    14191        The MERGE_FID procedure is used to merge one fid (or a portion
      283    14192        of one fid) into another fid to generate a new fid.  A full fid
      284    14193        is of the form:
      285    14194
      286    14195        .       [dev[nn]#sn][/]filename[.[account].[password]]@wsn]
      287    14196
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:34   
      288    14197        (A complete description of the full fid can be found in the CP-6
      289    14198        Programmer Reference Manual.)  Generally, the first fid is a
      290    14199        complete (valid) fid and the second fid is a parital (and maybe
      291    14200        invalid) fid made up of the fields that are to be replaced in the
      292    14201        first fid.
      293    14202
      294    14203        .*B*            ENVIRONMENT
      295    14204        Environment:    Unprivileged user procedure.
      296    14205
      297    14206        */
      298    14207        %EJECT ;
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:35   
      299    14208    1   MERGE_FID:  PROC ( FID_, FID1$, FID2$ ) ALTRET ;

  14208  7 000247   200004 741300       MERGE_FID    STX1  ! 4,,AUTO

      300    14209        /*
      301    14210                        Parameters
      302    14211        */
      303    14212    2   DCL 1 FID1$             PTR PARAM ;
      304    14213    2   DCL 1 FID2$             PTR PARAM ;
      305    14214    2   DCL 1 FID_              VECTOR PARAM ;
      306    14215        /*
      307    14216                        Variables
      308    14217        */
      309    14218                                %VLP_ACCT ( FPTN =
      310    14219              "ACCT(0:1)"       , STCLASS = STATIC
      311    14220                                                                        ) ;
      312    14233    2   DCL 1 ASN(0:1)          UBIN BYTE CALIGNED STATIC ;
      313    14234    2   DCL 1 FID$              PTR ALIGNED AUTO ;
      314    14235                                %FPT_FID ( FPTN =
      315    14236              FID1              , STCLASS = STATIC
      316    14237                                , ACCT = "ACCT(0)"
      317    14238                                , ASN = "ASN(0)"
      318    14239                                , PASS = "PASS(0)"
      319    14240                                , RES = "RES(0)"
      320    14241                                , WSN = "WSN(0)"
      321    14242                                                                        ) ;
      322    14265                                %FPT_FID ( FPTN =
      323    14266              FID2              , STCLASS = STATIC
      324    14267                                , ACCT = "ACCT(1)"
      325    14268                                , ASN = "ASN(1)"
      326    14269                                , PASS = "PASS(1)"
      327    14270                                , RES = "RES(1)"
      328    14271                                , WSN = "WSN(1)"
      329    14272                                                                        ) ;
      330    14295    2   DCL 1 LEN               UBIN WORD ALIGNED STATIC ;
      331    14296                                %VLP_NAME ( FPTN =
      332    14297              "NAME@(0:1)"      , STCLASS = AUTO
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:36   
      333    14298                                , LEN = 31
      334    14299                                                                        ) ;
      335    14326                                %VLP_PASS ( FPTN =
      336    14327              "PASS(0:1)"       , STCLASS = STATIC
      337    14328                                                                        ) ;
      338    14341    2   DCL 1 RES(0:1)          CHAR(4) CALIGNED STATIC ;
      339    14342                                %VLR_FID ( FPTN =
      340    14343              "RESULTS@(0:1)"   , STCLASS = AUTO
      341    14344                                                                        ) ;
      342    14363    2   DCL 1 SN@(0:1)          ALIGNED AUTO,
      343    14364    2         2 NUM#            SBIN WORD,
      344    14365    2         2 SN1             CHAR(6) CALIGNED,
      345    14366    2         2 SN2             CHAR(6) CALIGNED,
      346    14367    2         2 SN3             CHAR(6) CALIGNED ;
      347    14368
      348    14369                                %FPT_UNFID ( FPTN =
      349    14370              UNFID             , STCLASS = STATIC
      350    14371                                , LEN = LEN
      351    14372                                                                        ) ;
      352    14390                                %VLP_NAMEV ( FPTN =
      353    14391              VLP$NAME          , STCLASS = BASED
      354    14392                                                                        ) ;
      355    14399                                %VLP_WSN ( FPTN =
      356    14400              "WSN(0:1)"        , STCLASS = STATIC
      357    14401                                                                        ) ;
      358    14414        %EJECT ;
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:37   
      359    14415        /*
      360    14416        Do a M$FID on the TEXTFID pointed to by FID1$.  If an error is
      361    14417        detected, go to make an altreturn to the calling procedure.
      362    14418        */
      363    14419    2           FID1.NAME_    = VECTOR ( NAME@(0) ) ;

  14419  7 000250   000017 235000 8                  LDA     15
         7 000251   200072 452500                    STP2    SN@+12,,AUTO
         7 000252   200072 236100                    LDQ     SN@+12,,AUTO
         7 000253   000011 036003                    ADLQ    9,DU
         7 000254   000060 757000 2                  STAQ    FID1+4

      364    14420    2           FID1.RESULTS_ = VECTOR ( RESULTS@(0) ) ;

  14420  7 000255   000020 235000 8                  LDA     16
         7 000256   200072 452500                    STP2    SN@+12,,AUTO
         7 000257   200072 236100                    LDQ     SN@+12,,AUTO
         7 000260   000032 036003                    ADLQ    26,DU
         7 000261   000076 757000 2                  STAQ    FID1+18

      365    14421    2           FID1.SN_      = VECTOR ( SN@(0) ) ;

  14421  7 000262   000021 235000 8                  LDA     17
         7 000263   200072 452500                    STP2    SN@+12,,AUTO
         7 000264   200072 236100                    LDQ     SN@+12,,AUTO
         7 000265   000056 036003                    ADLQ    46,DU
         7 000266   000066 757000 2                  STAQ    FID1+10

      366    14422    2           FID1.TEXTFID_ = VECTOR ( FID1$ -> VLP$NAME.NAME# ) ;

  14422  7 000267   200006 470500                    LDP0    @FID1$,,AUTO
         7 000270   000000 471500                    LDP1    0,,PR0
         7 000271   000100 101500                    MRL     fill='000'O
         7 000272   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         7 000273   200072 000002                    ADSC9   SN@+12,,AUTO             cn=0,n=2
         7 000274   200072 220100                    LDX0    SN@+12,,AUTO
         7 000275   000000 635010                    EAA     0,X0
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:38   
         7 000276   000002 771000                    ARL     2
         7 000277   000140 135007                    SBLA    96,DL
         7 000300   200073 451500                    STP1    SN@+13,,AUTO
         7 000301   200073 236100                    LDQ     SN@+13,,AUTO
         7 000302   200000 036007                    ADLQ    65536,DL
         7 000303   000056 757000 2                  STAQ    FID1+2

      367    14423    2           CALL M$FID ( FID1 )                     ALTRET ( ERROR ) ;

  14423  7 000304   000054 630400 2                  EPPR0   FID1
         7 000305   420001 713400                    CLIMB   alt,+8193
         7 000306   404400 401760                    pmme    nvectors=10
         7 000307   000556 702000 7                  TSX2    ERROR

      368    14424        /*
      369    14425        Do a M$FID on the TEXTFID pointed to by FID2$.  If an error is
      370    14426        detected, go to make an altreturn to the calling procedure.
      371    14427        */
      372    14428    2           FID2.NAME_    = VECTOR ( NAME@(1) ) ;

  14428  7 000310   000017 235000 8                  LDA     15
         7 000311   200072 452500                    STP2    SN@+12,,AUTO
         7 000312   200072 236100                    LDQ     SN@+12,,AUTO
         7 000313   000021 036003                    ADLQ    17,DU
         7 000314   000110 757000 2                  STAQ    FID2+4

      373    14429    2           FID2.RESULTS_ = VECTOR ( RESULTS@(1) ) ;

  14429  7 000315   000020 235000 8                  LDA     16
         7 000316   200072 452500                    STP2    SN@+12,,AUTO
         7 000317   200072 236100                    LDQ     SN@+12,,AUTO
         7 000320   000044 036003                    ADLQ    36,DU
         7 000321   000126 757000 2                  STAQ    FID2+18

      374    14430    2           FID2.SN_      = VECTOR ( SN@(1) ) ;

  14430  7 000322   000021 235000 8                  LDA     17
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:39   
         7 000323   200072 452500                    STP2    SN@+12,,AUTO
         7 000324   200072 236100                    LDQ     SN@+12,,AUTO
         7 000325   000064 036003                    ADLQ    52,DU
         7 000326   000116 757000 2                  STAQ    FID2+10

      375    14431    2           FID2.TEXTFID_ = VECTOR ( FID2$ -> VLP$NAME.NAME# ) ;

  14431  7 000327   200007 470500                    LDP0    @FID2$,,AUTO
         7 000330   000000 471500                    LDP1    0,,PR0
         7 000331   000100 101500                    MRL     fill='000'O
         7 000332   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         7 000333   200072 000002                    ADSC9   SN@+12,,AUTO             cn=0,n=2
         7 000334   200072 220100                    LDX0    SN@+12,,AUTO
         7 000335   000000 635010                    EAA     0,X0
         7 000336   000002 771000                    ARL     2
         7 000337   000140 135007                    SBLA    96,DL
         7 000340   200073 451500                    STP1    SN@+13,,AUTO
         7 000341   200073 236100                    LDQ     SN@+13,,AUTO
         7 000342   200000 036007                    ADLQ    65536,DL
         7 000343   000106 757000 2                  STAQ    FID2+2

      376    14432    2           CALL M$FID ( FID2 )                     ALTRET ( ERROR ) ;

  14432  7 000344   000104 630400 2                  EPPR0   FID2
         7 000345   420001 713400                    CLIMB   alt,+8193
         7 000346   404400 401760                    pmme    nvectors=10
         7 000347   000556 702000 7                  TSX2    ERROR

      377    14433        /*
      378    14434        Build the FPT_UNFID to merge the second fid into the first fid.
      379    14435        */
      380    14436        /*                                              ACCT               */
      381    14437    2           IF  RESULTS@.ACCT(1) = %YES#  THEN

  14437  7 000350   200044 236100                    LDQ     RESULTS@+10,,AUTO
         7 000351   200000 316003                    CANQ    65536,DU
         7 000352   000356 600000 7                  TZE     s:14439
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:40   

      382    14438    2               UNFID.ACCT_ = VECTOR ( ACCT(1) ) ;

  14438  7 000353   000022 237000 8                  LDAQ    18
         7 000354   000152 757000 2                  STAQ    UNFID+6
         7 000355   000366 710000 7                  TRA     s:14444

      383    14439    2           ELSE  IF  RESULTS@.ACCT(0) = %YES#  THEN

  14439  7 000356   200032 236100                    LDQ     RESULTS@,,AUTO
         7 000357   200000 316003                    CANQ    65536,DU
         7 000360   000364 600000 7                  TZE     s:14442

      384    14440    2               UNFID.ACCT_ = VECTOR ( ACCT(0) ) ;

  14440  7 000361   000024 237000 8                  LDAQ    20
         7 000362   000152 757000 2                  STAQ    UNFID+6
         7 000363   000366 710000 7                  TRA     s:14444

      385    14441    2           ELSE
      386    14442    2               UNFID.ACCT_ = VECTOR ( NIL ) ;

  14442  7 000364   000026 237000 8                  LDAQ    22
         7 000365   000152 757000 2                  STAQ    UNFID+6

      387    14443        /*                                              ASN                */
      388    14444    2           IF  RESULTS@.ASN(1) = %YES#  THEN

  14444  7 000366   200044 236100                    LDQ     RESULTS@+10,,AUTO
         7 000367   010000 316003                    CANQ    4096,DU
         7 000370   000374 600000 7                  TZE     s:14446

      389    14445    2               UNFID.ASN_ = VECTOR ( ASN(1) ) ;

  14445  7 000371   000030 237000 8                  LDAQ    24
         7 000372   000162 757000 2                  STAQ    UNFID+14
         7 000373   000404 710000 7                  TRA     s:14451
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:41   

      390    14446    2           ELSE  IF  RESULTS@.ASN(0) = %YES#  THEN

  14446  7 000374   200032 236100                    LDQ     RESULTS@,,AUTO
         7 000375   010000 316003                    CANQ    4096,DU
         7 000376   000402 600000 7                  TZE     s:14449

      391    14447    2               UNFID.ASN_ = VECTOR ( ASN(0) ) ;

  14447  7 000377   000032 237000 8                  LDAQ    26
         7 000400   000162 757000 2                  STAQ    UNFID+14
         7 000401   000404 710000 7                  TRA     s:14451

      392    14448    2           ELSE
      393    14449    2               UNFID.ASN_ = VECTOR ( NIL ) ;

  14449  7 000402   000026 237000 8                  LDAQ    22
         7 000403   000162 757000 2                  STAQ    UNFID+14

      394    14450        /*                                              NAME               */
      395    14451    2           IF  RESULTS@.NAME(1) = %YES#  THEN

  14451  7 000404   200044 234100                    SZN     RESULTS@+10,,AUTO
         7 000405   000414 605000 7                  TPL     s:14453

      396    14452    2               UNFID.NAME_ = VECTOR ( NAME@(1) ) ;

  14452  7 000406   000017 235000 8                  LDA     15
         7 000407   200072 452500                    STP2    SN@+12,,AUTO
         7 000410   200072 236100                    LDQ     SN@+12,,AUTO
         7 000411   000021 036003                    ADLQ    17,DU
         7 000412   000150 757000 2                  STAQ    UNFID+4
         7 000413   000426 710000 7                  TRA     s:14458

      397    14453    2           ELSE  IF  RESULTS@.NAME(0) = %YES#  THEN

  14453  7 000414   200032 234100                    SZN     RESULTS@,,AUTO
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:42   
         7 000415   000424 605000 7                  TPL     s:14456

      398    14454    2               UNFID.NAME_ = VECTOR ( NAME@(0) ) ;

  14454  7 000416   000017 235000 8                  LDA     15
         7 000417   200072 452500                    STP2    SN@+12,,AUTO
         7 000420   200072 236100                    LDQ     SN@+12,,AUTO
         7 000421   000011 036003                    ADLQ    9,DU
         7 000422   000150 757000 2                  STAQ    UNFID+4
         7 000423   000426 710000 7                  TRA     s:14458

      399    14455    2           ELSE
      400    14456    2               UNFID.NAME_ = VECTOR ( NIL ) ;

  14456  7 000424   000026 237000 8                  LDAQ    22
         7 000425   000150 757000 2                  STAQ    UNFID+4

      401    14457        /*                                              PASS               */
      402    14458    2           IF  RESULTS@.PASS(1) = %YES#  THEN

  14458  7 000426   200044 236100                    LDQ     RESULTS@+10,,AUTO
         7 000427   100000 316003                    CANQ    32768,DU
         7 000430   000434 600000 7                  TZE     s:14460

      403    14459    2               UNFID.PASS_ = VECTOR ( PASS(1) ) ;

  14459  7 000431   000034 237000 8                  LDAQ    28
         7 000432   000154 757000 2                  STAQ    UNFID+8
         7 000433   000444 710000 7                  TRA     s:14465

      404    14460    2           ELSE  IF  RESULTS@.PASS(0) = %YES#  THEN

  14460  7 000434   200032 236100                    LDQ     RESULTS@,,AUTO
         7 000435   100000 316003                    CANQ    32768,DU
         7 000436   000442 600000 7                  TZE     s:14463

      405    14461    2               UNFID.PASS_ = VECTOR ( PASS(0) ) ;
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:43   

  14461  7 000437   000036 237000 8                  LDAQ    30
         7 000440   000154 757000 2                  STAQ    UNFID+8
         7 000441   000444 710000 7                  TRA     s:14465

      406    14462    2           ELSE
      407    14463    2               UNFID.PASS_ = VECTOR ( NIL ) ;

  14463  7 000442   000026 237000 8                  LDAQ    22
         7 000443   000154 757000 2                  STAQ    UNFID+8

      408    14464        /*                                              RES                */
      409    14465    2           IF  RESULTS@.RES(1) = %YES#  THEN

  14465  7 000444   200044 236100                    LDQ     RESULTS@+10,,AUTO
         7 000445   004000 316003                    CANQ    2048,DU
         7 000446   000452 600000 7                  TZE     s:14467

      410    14466    2               UNFID.RES_ = VECTOR ( RES(1) ) ;

  14466  7 000447   000040 237000 8                  LDAQ    32
         7 000450   000164 757000 2                  STAQ    UNFID+16
         7 000451   000462 710000 7                  TRA     s:14472

      411    14467    2           ELSE  IF  RESULTS@.RES(0) = %YES#  THEN

  14467  7 000452   200032 236100                    LDQ     RESULTS@,,AUTO
         7 000453   004000 316003                    CANQ    2048,DU
         7 000454   000460 600000 7                  TZE     s:14470

      412    14468    2               UNFID.RES_ = VECTOR ( RES(0) ) ;

  14468  7 000455   000042 237000 8                  LDAQ    34
         7 000456   000164 757000 2                  STAQ    UNFID+16
         7 000457   000462 710000 7                  TRA     s:14472

      413    14469    2           ELSE
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:44   
      414    14470    2               UNFID.RES_ = VECTOR ( NIL ) ;

  14470  7 000460   000026 237000 8                  LDAQ    22
         7 000461   000164 757000 2                  STAQ    UNFID+16

      415    14471        /*                                              SN                 */
      416    14472    2           IF  RESULTS@.SN(1) = %YES#  THEN

  14472  7 000462   200044 236100                    LDQ     RESULTS@+10,,AUTO
         7 000463   040000 316003                    CANQ    16384,DU
         7 000464   000473 600000 7                  TZE     s:14474

      417    14473    2               UNFID.SN_ = VECTOR ( SN@(1) ) ;

  14473  7 000465   000021 235000 8                  LDA     17
         7 000466   200072 452500                    STP2    SN@+12,,AUTO
         7 000467   200072 236100                    LDQ     SN@+12,,AUTO
         7 000470   000064 036003                    ADLQ    52,DU
         7 000471   000156 757000 2                  STAQ    UNFID+10
         7 000472   000506 710000 7                  TRA     s:14479

      418    14474    2           ELSE  IF  RESULTS@.SN(0) = %YES#  THEN

  14474  7 000473   200032 236100                    LDQ     RESULTS@,,AUTO
         7 000474   040000 316003                    CANQ    16384,DU
         7 000475   000504 600000 7                  TZE     s:14477

      419    14475    2               UNFID.SN_ = VECTOR ( SN@(0) ) ;

  14475  7 000476   000021 235000 8                  LDA     17
         7 000477   200072 452500                    STP2    SN@+12,,AUTO
         7 000500   200072 236100                    LDQ     SN@+12,,AUTO
         7 000501   000056 036003                    ADLQ    46,DU
         7 000502   000156 757000 2                  STAQ    UNFID+10
         7 000503   000506 710000 7                  TRA     s:14479

      420    14476    2           ELSE
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:45   
      421    14477    2               UNFID.SN_ = VECTOR ( NIL ) ;

  14477  7 000504   000026 237000 8                  LDAQ    22
         7 000505   000156 757000 2                  STAQ    UNFID+10

      422    14478        /*                                              WSN                */
      423    14479    2           IF  RESULTS@.WSN(1) = %YES#  THEN

  14479  7 000506   200044 236100                    LDQ     RESULTS@+10,,AUTO
         7 000507   020000 316003                    CANQ    8192,DU
         7 000510   000514 600000 7                  TZE     s:14481

      424    14480    2               UNFID.WSN_ = VECTOR ( WSN(1) ) ;

  14480  7 000511   000044 237000 8                  LDAQ    36
         7 000512   000160 757000 2                  STAQ    UNFID+12
         7 000513   000524 710000 7                  TRA     s:14490

      425    14481    2           ELSE  IF  RESULTS@.WSN(0) = %YES#  THEN

  14481  7 000514   200032 236100                    LDQ     RESULTS@,,AUTO
         7 000515   020000 316003                    CANQ    8192,DU
         7 000516   000522 600000 7                  TZE     s:14484

      426    14482    2               UNFID.WSN_ = VECTOR ( WSN(0) ) ;

  14482  7 000517   000046 237000 8                  LDAQ    38
         7 000520   000160 757000 2                  STAQ    UNFID+12
         7 000521   000524 710000 7                  TRA     s:14490

      427    14483    2           ELSE
      428    14484    2               UNFID.WSN_ = VECTOR ( NIL ) ;

  14484  7 000522   000026 237000 8                  LDAQ    22
         7 000523   000160 757000 2                  STAQ    UNFID+12

      429    14485        /*
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:46   
      430    14486        Define the TEXTFID area where the merged fid is to be built.  Then
      431    14487        call m$UNFID to build the merged fid and set the length of the
      432    14488        merged fid to the value returned by M$UNFID.
      433    14489        */
      434    14490    2           FID$ = VBASE ( FID_ ) ;

  14490  7 000524   200005 470500                    LDP0    @FID_,,AUTO
         7 000525   000001 236100                    LDQ     1,,PR0
         7 000526   200010 756100                    STQ     FID$,,AUTO

      435    14491    2           FID$ -> VLP$NAME.L# = VBOUND ( FID_ ) ;

  14491  7 000527   200010 471500                    LDP1    FID$,,AUTO
         7 000530   003100 061500                    CSR     bolr='003'O
         7 000531   000000 000024                    BDSC    0,,PR0                   by=0,bit=0,n=20
         7 000532   100000 000011                    BDSC    0,,PR1                   by=0,bit=0,n=9

      436    14492    2           UNFID.TEXTFID_ = VECTOR ( FID$ -> VLP$NAME.NAME# ) ;

  14492  7 000533   000100 101500                    MRL     fill='000'O
         7 000534   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         7 000535   200072 000002                    ADSC9   SN@+12,,AUTO             cn=0,n=2
         7 000536   200072 220100                    LDX0    SN@+12,,AUTO
         7 000537   000000 635010                    EAA     0,X0
         7 000540   000002 771000                    ARL     2
         7 000541   000140 135007                    SBLA    96,DL
         7 000542   200000 036007                    ADLQ    65536,DL
         7 000543   000146 757000 2                  STAQ    UNFID+2

      437    14493    2           CALL M$UNFID ( UNFID )                  ALTRET ( ERROR )  ;

  14493  7 000544   000144 630400 2                  EPPR0   UNFID
         7 000545   420021 713400                    CLIMB   alt,+8209
         7 000546   404400 401760                    pmme    nvectors=10
         7 000547   000556 702000 7                  TSX2    ERROR

      438    14494    2           FID$ -> VLP$NAME.L# = LEN ;
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:47   

  14494  7 000550   200010 470500                    LDP0    FID$,,AUTO
         7 000551   000100 101400                    MRL     fill='000'O
         7 000552   000134 000004 2                  ADSC9   LEN                      cn=0,n=4
         7 000553   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1

      439    14495        /*
      440    14496        Return to the calling procedure.
      441    14497        */
      442    14498    2           RETURN ;

  14498  7 000554   200004 221300                    LDX1  ! 4,,AUTO
         7 000555   000001 702211                    TSX2  ! 1,X1

      443    14499        /*
      444    14500        An error has been detected.  Make an altreturn to the calling
      445    14501        procedure.
      446    14502        */
      447    14503    2   ERROR:  ALTRETURN ;

  14503  7 000556   200004 221300       ERROR        LDX1  ! 4,,AUTO
         7 000557   000000 702211                    TSX2  ! 0,X1
      448    14504    2           END MERGE_FID ;
      449    14505    1           END NMI$INIT ;

PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:48   
--  Include file information  --

   XU_MACRO_C.:E05TOU  is referenced.
   XUX$INTERFACE_M.:E05TOU  is referenced.
   XUG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   NM_SUBS_C.:E05TOU  is referenced.
   NM_EQU_E.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   NM_MACRO_M.:E05TOU  is referenced.
   NM_PERR_C.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure NMI$INIT.
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:49   

 **** Variables and constants ****

  ****  Section 001 RoData NMI$INIT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B_VERSION$                 1-0-0/c STRC(90)    r     1 ERRFID
     4-0-0/d STRC(144)   r     1 FPT_INT                   10-0-0/d STRC(432)   r     1 FPT_MONINFO
    24-0-0/d STRC(144)   r     1 FPT_SAD1                  30-0-0/d STRC(144)   r     1 FPT_SAD2
    34-0-0/w STRC        r     1 NMI#BAD_POINTER           35-0-0/w STRC        r     1 NMI#GREETING
    36-0-0/d STRC(144)   r     1 PRIV                      42-0-0/d STRC(216)   r     1 XCON_SET

  ****  Section 002  Data  NMI$INIT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    46-0-0/c STRC(72)    r     1 ACCT(0:1)                 52-0-0/c UBIN(9)     r     1 ASN(0:1)
    54-0-0/d STRC(864)   r     1 FID1                     104-0-0/d STRC(864)   r     1 FID2
     0-0-0/w UBIN        r     1 LEN                      134-0-0/w UBIN        r     1 LEN
   135-0-0/c STRC(72)    r     1 PASS(0:1)                141-0-0/c CHAR(4)     r     1 RES(0:1)
     2-0-0/d STRC(792)   r     1 UNFID                    144-0-0/d STRC(792)   r     1 UNFID
    30-0-0/d STRC(468)   r     1 VLR_MONPTRS              172-0-0/c STRC(72)    r     1 WSN(0:1)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @FID1$                     7-0-0/w PTR         r     1 @FID2$
     5-0-0/w PTR         r     1 @FID_                     10-0-0/w PTR         r     1 FID$
    *0-0-0/w PTR         r     1 FID1$                     *0-0-0/w PTR         r     1 FID2$
    *0-0-0/d VECT        r     1 FID_                      11-0-0/c STRC(288)   r     1 NAME@(0:1)
    32-0-0/d STRC(324)   r     1 RESULTS@(0:1)
    56-0-0/w STRC(198)   r     1 SN@(0:1)

PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:50   
  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/c UBIN(9)     r     1 B_VERSION                  0-0-0/d STRC(8892)  r     1 NMD_PIT
     0-0-0/d STRC(1512)  r     1 XUG_GETCMD                 0-0-0/d STRC(1296)  r     1 XUG_INIT
     0-0-0/w STRC(612)   r     1 XUX_PARAM

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0N  NULL        r     1 M$EI
     0-0-0N  NULL        r     1 M$EO                       0-0-0N  NULL        r     1 M$LM
     0-0-0N  NULL        r     1 M$SI                       0-0-0/c ASTR(9)     r     1 NMD$ERRFID
     0-0-0/c ASTR(9)     r     1 NMD$NAME                   0-0-0/c ASTR(9)     r     1 NMD$RUFID
     0-0-0/c ASTR(9)     r     1 NMD$VERSION                0-0-0/c ASTR(9)     r     1 VLP$NAME


   Procedure NMI$INIT requires 368 words for executable code.
   Procedure NMI$INIT requires 76 words of local(AUTO) storage.

    No errors detected in file NMI$INIT.:E05TSI    .
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:51   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:52   
          MINI XREF LISTING

ACCT IN PROCEDURE MERGE_FID
     14231**DCL     14254--DCLINIT 14284--DCLINIT 14438--ASSIGN  14440--ASSIGN
ALTERR
     14154**LABEL   14080--CALLALT 14085--CALLALT 14092--CALLALT 14093--CALLALT 14104--CALLALT 14122--CALLALT
     14123--CALLALT 14124--CALLALT 14143--CALLALT 14148--CALLALT
ASN IN PROCEDURE MERGE_FID
     14233**DCL     14256--DCLINIT 14286--DCLINIT 14445--ASSIGN  14447--ASSIGN
B$ALT.CODE
     12148**DCL     12148--REDEF   12149--REDEF   12149--REDEF
B$ALT.DCB#
     12149**DCL     14154<>CALL
B$ALT.ERR
     12149**DCL     14154<>CALL
B$ALT.ERR.ERR#
     12150**DCL     12150--REDEF
B$ALT.EVID
     12149**DCL     12149--REDEF   12149--REDEF
B$JIT.CPFLAGS1.SLEAZE
       458**DCL       458--REDEF
B$JIT.ERR.MID
       365**DCL       365--REDEF
B$JIT.JRESPEAK
       526**DCL       527--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       635**DCL       635--REDEF     636--REDEF
B$JIT.PNR
       539**DCL       539--REDEF
B$JIT.TSLINE
       633**DCL       634--REDEF
B$JIT$
     12154**DCL       359--IMP-PTR
B$TCB.ALT$
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:53   
     12158**DCL     14154>>CALL    14154>>CALL
B$TCB$
     12160**DCL     12158--IMP-PTR 14154>>CALL    14154>>CALL
B_VERSION
     12161**DCL     12162--DCLINIT
B_VERSION$
     12162**DCL     12364--IMP-PTR 14098>>CALL    14098>>CALL
ERRFID
     12192**DCL     14085--CALL
ERROR
     14157**LABEL   14137--GOTO
ERROR IN PROCEDURE MERGE_FID
     14503**LABEL   14423--CALLALT 14432--CALLALT 14493--CALLALT
F$DCB.ACTPOS
     12227**DCL     12227--REDEF
F$DCB.ARS#
     12201**DCL     12201--REDEF
F$DCB.ATTR
     12220**DCL     12221--REDEF
F$DCB.BORROW
     12235**DCL     12235--REDEF   12235--REDEF   12235--REDEF
F$DCB.DCBNAME.L
     12249**DCL     12249--IMP-SIZ
F$DCB.EOMCHAR#
     12205**DCL     12205--REDEF
F$DCB.FLDID
     12230**DCL     12230--REDEF
F$DCB.FORM$
     12224**DCL     12224--REDEF
F$DCB.FSECT
     12240**DCL     12240--REDEF
F$DCB.FSN#
     12217**DCL     12217--REDEF   12217--REDEF   12218--REDEF
F$DCB.HEADER$
     12223**DCL     12223--REDEF
F$DCB.IXTNSIZE#
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:54   
     12221**DCL     12221--REDEF
F$DCB.LASTSTA$
     12210**DCL     12210--REDEF
F$DCB.LVL
     12236**DCL     12236--REDEF
F$DCB.NAME#.C
     12211**DCL     12211--REDEF
F$DCB.NAME#.L
     12211**DCL     14098--CALL    14098--CALL
F$DCB.NOEOF
     12233**DCL     12233--REDEF
F$DCB.NRECS#
     12222**DCL     12222--REDEF
F$DCB.NRECX
     12241**DCL     12241--REDEF
F$DCB.OHDR
     12233**DCL     12233--REDEF
F$DCB.ORG#
     12216**DCL     12216--REDEF
F$DCB.PRECNO
     12239**DCL     12239--REDEF
F$DCB.RCSZ
     12245**DCL     12245--REDEF
F$DCB.RES#
     12212**DCL     12212--REDEF
F$DCB.SETX
     12224**DCL     12224--REDEF
F$DCB.TAB$
     12224**DCL     12224--REDEF
F$DCB.TDA
     12238**DCL     12239--REDEF
F$DCB.WSN#
     12212**DCL     12212--REDEF
FID$ IN PROCEDURE MERGE_FID
     14234**DCL     14490<<ASSIGN  14491>>ASSIGN  14492>>ASSIGN  14492>>ASSIGN  14494>>ASSIGN
FID1 IN PROCEDURE MERGE_FID
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:55   
     14253**DCL     14423<>CALL
FID1.NAME_ IN PROCEDURE MERGE_FID
     14254**DCL     14419<<ASSIGN
FID1.RESULTS_ IN PROCEDURE MERGE_FID
     14256**DCL     14420<<ASSIGN
FID1.SN_ IN PROCEDURE MERGE_FID
     14255**DCL     14421<<ASSIGN
FID1.TEXTFID_ IN PROCEDURE MERGE_FID
     14253**DCL     14422<<ASSIGN
FID1.V IN PROCEDURE MERGE_FID
     14257**DCL     14253--DCLINIT
FID1$ IN PROCEDURE MERGE_FID
     14212**DCL     14208--PROC    14422>>ASSIGN  14422>>ASSIGN
FID2 IN PROCEDURE MERGE_FID
     14283**DCL     14432<>CALL
FID2.NAME_ IN PROCEDURE MERGE_FID
     14284**DCL     14428<<ASSIGN
FID2.RESULTS_ IN PROCEDURE MERGE_FID
     14286**DCL     14429<<ASSIGN
FID2.SN_ IN PROCEDURE MERGE_FID
     14285**DCL     14430<<ASSIGN
FID2.TEXTFID_ IN PROCEDURE MERGE_FID
     14283**DCL     14431<<ASSIGN
FID2.V IN PROCEDURE MERGE_FID
     14287**DCL     14283--DCLINIT
FID2$ IN PROCEDURE MERGE_FID
     14213**DCL     14208--PROC    14431>>ASSIGN  14431>>ASSIGN
FID_ IN PROCEDURE MERGE_FID
     14214**DCL     14208--PROC    14490>>ASSIGN  14491>>ASSIGN
FPT_INT
     12265**DCL     14148<>CALL
FPT_INT.V
     12265**DCL     12265--DCLINIT
FPT_MONINFO
     12282**DCL     14122<>CALL
FPT_SAD1
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:56   
     12301**DCL     14123<>CALL
FPT_SAD1.V
     12301**DCL     12301--DCLINIT
FPT_SAD2
     12320**DCL     14124<>CALL
FPT_SAD2.V
     12320**DCL     12320--DCLINIT
LEN
     12324**DCL     12964--DCLINIT 14081>>ASSIGN
LEN IN PROCEDURE MERGE_FID
     14295**DCL     14387--DCLINIT 14494>>ASSIGN
M$EI
     12325**DCL     14070--ASSIGN
M$EO
     12326**DCL     14071--ASSIGN
M$FID
      6729**DCL-ENT 14423--CALL    14432--CALL
M$INT
      6721**DCL-ENT 14148--CALL
M$LM
     12327**DCL     14098--CALL    14098--CALL
M$MONINFO
      6734**DCL-ENT 14122--CALL
M$SAD
      6705**DCL-ENT 14123--CALL    14124--CALL
M$SI
     12328**DCL     14072--ASSIGN
M$SPRIV
      6725**DCL-ENT 14104--CALL
M$UNFID
      6729**DCL-ENT 14080--CALL    14493--CALL
M$XCON
      6721**DCL-ENT 14143--CALL
MERGE_FID
     14208**PROC    14085--CALL
NAME@ IN PROCEDURE MERGE_FID
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:57   
     14324**DCL     14419--ASSIGN  14428--ASSIGN  14452--ASSIGN  14454--ASSIGN
NMD$ERRFID
     12337**DCL     14085--CALL
NMD$ERRFID.L#
     12337**DCL     12337--IMP-SIZ 14085>>CALL
NMD$NAME
     12346**DCL     14098--CALL
NMD$NAME.L#
     12346**DCL     12346--IMP-SIZ 14098>>CALL
NMD$RUFID.L#
     12355**DCL     12355--IMP-SIZ 14079>>ASSIGN  14081<<ASSIGN
NMD$RUFID.NAME#
     12355**DCL     14079--ASSIGN
NMD$VERSION
     12364**DCL     14098--CALL
NMD$VERSION.L#
     12364**DCL     12364--IMP-SIZ 14098>>CALL
NMD_PIT.DEV.DCB$
     12424**DCL     14074<<ASSIGN  14075<<ASSIGN
NMD_PIT.ERRFID$
     12604**DCL     12337--IMP-PTR 14085>>CALL    14085>>CALL
NMD_PIT.FLAGS.XCON#
     12652**DCL     14144<<ASSIGN
NMD_PIT.M$EI$
     12665**DCL     14070<<ASSIGN  14074>>ASSIGN
NMD_PIT.M$EO$
     12673**DCL     14071<<ASSIGN  14075>>ASSIGN
NMD_PIT.M$SI$
     12681**DCL     14072<<ASSIGN
NMD_PIT.N$DCT$$
     12691**DCL     14125<>CALL
NMD_PIT.PXCON$$
     12763**DCL     12999--DCLINIT
NMD_PIT.RUFID$
     12793**DCL     12355--IMP-PTR 14079>>ASSIGN  14079>>ASSIGN  14081>>ASSIGN  14085<>CALL
NME$ERRMSG
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:58   
     12137**DCL-ENT 14098--CALL    14116--CALL    14136--CALL    14154--CALL
NMI#BAD_POINTER
     12840**DCL     14136<>CALL
NMI#GREETING
     12892**DCL     14098<>CALL
NMU$CONVERT$
     12138**DCL-ENT 14125--CALL
NMU$XCON
     12139**DCL-ENT 13000--DCLINIT
PASS IN PROCEDURE MERGE_FID
     14339**DCL     14255--DCLINIT 14285--DCLINIT 14459--ASSIGN  14461--ASSIGN
PRIV
     12941**DCL     14104<>CALL
PRIV.V
     12941**DCL     12941--DCLINIT
RES IN PROCEDURE MERGE_FID
     14341**DCL     14256--DCLINIT 14286--DCLINIT 14466--ASSIGN  14468--ASSIGN
RESULTS@ IN PROCEDURE MERGE_FID
     14355**DCL     14420--ASSIGN  14429--ASSIGN
RESULTS@.ACCT IN PROCEDURE MERGE_FID
     14355**DCL     14437>>IF      14439>>IF
RESULTS@.ASN IN PROCEDURE MERGE_FID
     14355**DCL     14444>>IF      14446>>IF
RESULTS@.NAME IN PROCEDURE MERGE_FID
     14355**DCL     14451>>IF      14453>>IF
RESULTS@.PASS IN PROCEDURE MERGE_FID
     14355**DCL     14458>>IF      14460>>IF
RESULTS@.RES IN PROCEDURE MERGE_FID
     14355**DCL     14465>>IF      14467>>IF
RESULTS@.SN IN PROCEDURE MERGE_FID
     14355**DCL     14472>>IF      14474>>IF
RESULTS@.WSN IN PROCEDURE MERGE_FID
     14355**DCL     14479>>IF      14481>>IF
SN@ IN PROCEDURE MERGE_FID
     14363**DCL     14421--ASSIGN  14430--ASSIGN  14473--ASSIGN  14475--ASSIGN
UNFID
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:59   
     12960**DCL     14080<>CALL
UNFID.TEXTFID_
     12960**DCL     14079<<ASSIGN
UNFID.V
     12964**DCL     12960--DCLINIT
UNFID IN PROCEDURE MERGE_FID
     14383**DCL     14493<>CALL
UNFID.ACCT_ IN PROCEDURE MERGE_FID
     14384**DCL     14438<<ASSIGN  14440<<ASSIGN  14442<<ASSIGN
UNFID.ASN_ IN PROCEDURE MERGE_FID
     14386**DCL     14445<<ASSIGN  14447<<ASSIGN  14449<<ASSIGN
UNFID.NAME_ IN PROCEDURE MERGE_FID
     14384**DCL     14452<<ASSIGN  14454<<ASSIGN  14456<<ASSIGN
UNFID.PASS_ IN PROCEDURE MERGE_FID
     14384**DCL     14459<<ASSIGN  14461<<ASSIGN  14463<<ASSIGN
UNFID.RES_ IN PROCEDURE MERGE_FID
     14386**DCL     14466<<ASSIGN  14468<<ASSIGN  14470<<ASSIGN
UNFID.SN_ IN PROCEDURE MERGE_FID
     14385**DCL     14473<<ASSIGN  14475<<ASSIGN  14477<<ASSIGN
UNFID.TEXTFID_ IN PROCEDURE MERGE_FID
     14383**DCL     14492<<ASSIGN
UNFID.V IN PROCEDURE MERGE_FID
     14387**DCL     14383--DCLINIT
UNFID.WSN_ IN PROCEDURE MERGE_FID
     14385**DCL     14480<<ASSIGN  14482<<ASSIGN  14484<<ASSIGN
VLP$NAME.L# IN PROCEDURE MERGE_FID
     14397**DCL     14397--IMP-SIZ 14422>>ASSIGN  14431>>ASSIGN  14491<<ASSIGN  14492>>ASSIGN  14494<<ASSIGN
VLP$NAME.NAME# IN PROCEDURE MERGE_FID
     14397**DCL     14422--ASSIGN  14431--ASSIGN  14492--ASSIGN
VLR_MONPTRS
     12980**DCL     12283--DCLINIT
VLR_MONPTRS.N$DCT$$
     12980**DCL     14125<>CALL
WSN IN PROCEDURE MERGE_FID
     14412**DCL     14255--DCLINIT 14285--DCLINIT 14480--ASSIGN  14482--ASSIGN
XCON_SET
PL6.E3A0      #001=NMI$INIT File=NMI$INIT.:E05TSI                                WED 07/30/97 03:48 Page:60   
     12999**DCL     14143<>CALL
XCON_SET.V
     13000**DCL     12999--DCLINIT
XUG$BREAK
      8237**DCL-ENT 12265--DCLINIT
XUG$INIT
      8231**DCL-ENT 14092--CALL
XUG$SETERRMSG
      8235**DCL-ENT 14093--CALL
XUG_GETCMD
     13017**DCL     14092<>CALL    14093<>CALL
XUG_GETCMD.OUT$
     13022**DCL     13028--REDEF
XUG_INIT
     13366**DCL     14092<>CALL
XUX$COMMON_OPTIONS
     12140**DCL-ENT 14112--CALL
XUX_PARAM
     13949**DCL     14112<>CALL
XUX_PARAM.ERROR#
     14041**DCL     14114>>IF
XUX_PARAM.ERROR_CODE
     14003**DCL     14116<>CALL
XUX_PARAM.STD_OPTIONS$
     13957**DCL     13796--IMP-PTR
