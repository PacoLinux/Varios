/*M* FORMAT_SIP1 nodes for PL6FMT (PL-6 formatter) */
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1990    */
/*T*                                                         */
/*T***********************************************************/
/*X* DMC,DFC */
 
 /***
  *** INCLUDE files:
  ***/
 
%LIST;
%INCLUDE ZQU$FORMAT_SUBS1_C;
%PLIST;
 
/********************/
 
/** A_COMMAND is successful parse of a PL6FMT option(s) **/
 
A_COMMAND = ;
      '(' OPTIONS ')' .END
 
/** OPTIONS combines single options **/
 
OPTIONS(0) = ;
      < ',' , [ OPTION ] >
 
/** OPTION reduces specific options for option list combination */
 
OPTION = ;
      ( RETAIN_UI_KEYS | LIST_UPDATES | NO_UIERR_ABORT_OR_MSG ;
       | NO_UIERR_ABORT | NO_SOURCE_UPDATE ;
       | KEY_SOURCE_OUTPUT | CONSEC_SOURCE_OUTPUT ;
       | UI_ANYWAY | OU_ANYWAY | LO_ANYWAY ;
       | FORMAT_FILE [ '(' FMTOPTIONS ')' ] ;
       | USE_LISTFILE | WHERE_INCREMENT ;
       | FMTOPTION | DONT_FORMAT_FILE )
 
/** RETAIN_UI_KEYS causes formatter to create output file having
    update record with the same keys **/
 
RETAIN_UI_KEYS(%RETAIN_UI_KEYS) = ;
      'RUK'
 
/** LIST_UPDATES causes formatter to create a separate list of the
    update file **/
 
LIST_UPDATES(%LIST_UPDATES) = ;
      'LU'
 
/** UI_ANYWAY causes formatter to read UI even if unspecified on
    command line **/
 
UI_ANYWAY(%UI_ANYWAY) = ;
   'UI'
 
/** OU_ANYWAY causes formatter to write OU even if unspecified on
    command line **/
 
OU_ANYWAY(%OU_ANYWAY) = ;
   'OU'
 
/** LO_ANYWAY causes formatter to write LO even if unspecified on
    command line **/
 
LO_ANYWAY(%LO_ANYWAY) = ;
   ( 'LO' | 'LS' )
 
/** NO_UIERR_ABORT_OR_MSG causes formatter to continue processing
    single file regardless of existence of UI file without indication
    of UI file's existence **/
 
NO_UIERR_ABORT_OR_MSG(%NO_UIERR_ABORT_OR_MSG) = ;
   'OPTUINM'
 
/** NO_UIERR_ABORT causes formatter to continue processing single
    file regardless of existence of UI file **/
 
NO_UIERR_ABORT(%NO_UIERR_ABORT) = ;
      'OPTUI'
 
/** KEY_SOURCE_OUTPUT causes formatter to key source output starting
    at 1.000 with increments of 1.000 **/
 
KEY_SOURCE_OUTPUT(%KEY_SOURCE_OUTPUT) = ;
      ( 'LN' | 'KSO' | 'KEY/ED' )
 
/** CONSEC_SOURCE_OUTPUT causes formatter to create a consecutive
    output file regardless of input file(s) organization(s) **/
 
CONSEC_SOURCE_OUTPUT(%CONSEC_SOURCE_OUTPUT) = ;
      ( 'NLN' | 'CON/SEC' )
 
/*** USE_LISTFILE instructs the formatter to get file names from
     F$LISTFILE ***/
 
USE_LISTFILE(%USE_LISTFILE) = ;
      'LIST/FILE' [ '=' .FID ]
 
/** NO_SOURCE_UPDATE causes the formatter to honor the NSO option
    if specified.  This causes the source output files to be an
    exact duplicate of the source input file.  The specified update
    list file is updated with a recorded indicating that the file
    was not updated. **/
 
NO_SOURCE_UPDATE(%NO_SOURCE_UPDATE) = ;
   'NSO' [ '=' .FID ]
/** WHERE_INCREMENT causes formatter to tell where we are in output
    file **/
 
WHERE_INCREMENT(%WHERE_INCREMENT) = ;
   'WHR' [ '=' ] .DECIMAL
 
 
/** DONT_FORMAT_FILE causes the formatter to inhibit formatting **/
 
DONT_FORMAT_FILE(%DONT_FORMAT_FILE) = ;
   ( 'NFMT' | 'NFORM/AT' )
/** FORMAT_FILE causes the formatter to format the source (and update)
    records **/
 
FORMAT_FILE(%FORMAT_FILE) = ;
      ( 'FMT' | 'FORM/AT' | 'PL6/FMT' )
 
/** FMTOPTIONS combines single format options **/
 
FMTOPTIONS = ;
      < ',', FMTOPTION >
 
/** FMTOPTION reduces specific format options for format option
    list combination **/
 
FMTOPTION = ;
      ( PL1CODE | IGNORESTARX | IFSTARX | GETXOPTIONS ;
       | COPYRIGHT_YEAR | FORMAT_UPDATES_ONLY ;
       | STARXCOMMENTOPTION | PARTRGECODE | CC_CODE)
 
/* STARXCOMMENTOPTION identifies options on the command line which
   can also be put in *X* comments */
 
STARXCOMMENTOPTION(%STARXCOMMENTOPTION) = ;
   STARXOPTION
 
/** CC_CODE causes formatter to allow ?, and interpret { and } as do; and
    end; respectively, and a few other things. **/
 
CC_CODE(%CC_CODE) = ;
   'C/C'
 
/** PARTRGECODE causes formatter to assume all is PARTRGE input:
    (comments may be formatted but anything else is not to be
    touched */
 
PARTRGECODE(%PARTRGECODE) = ;
   'PAR/TRGE'
 
/*** PL1CODE causes formatter to assume all is PL/1 code:
    (lower case reserved words, dashes in variable names, comments
    beginning with an asterisk in column 1) **/
 
PL1CODE(%PL1CODE) = ;
      'PL1'
 
/*** IGNORESTARX causes formatter to ignore any *X* comments ***/
 
IGNORESTARX(%IGNORESTARX) = ;
      ( 'NOX' | 'ORX' )
 
/*** IFSTARX causes formatter to format only if any *X* found ***/
 
IFSTARX(%IFSTARX) = ;
      'IFX'
 
/*** GETXOPTIONS causes formatter to ask for formatting options first ***/
 
GETXOPTIONS(%GETXOPTIONS) = ;
      'X'
 
/** COPYRIGHT_YEAR causes formatter to insert or replace the
    *T* copyright notice giving the specified year as copyright year **/
 
COPYRIGHT_YEAR(%COPYRIGHT_YEAR) = ;
      'CYR'  [ '=' ]  .DECIMAL
 
/** FORMAT_UPDATES_ONLY causes formatter to write only updates and
    plus card to the output file **/
 
FORMAT_UPDATES_ONLY(%FORMAT_UPDATES_ONLY) = ;
   'FUF'
