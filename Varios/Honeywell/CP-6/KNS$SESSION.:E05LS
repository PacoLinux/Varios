VERSION E05

PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:1    
        1        1        /*M* KNS$SESSION - Session Services on the Fep    */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=3,IND=5,ENU=0,ECU=0,CRM=80   */
        8        8
        9        9        /*F* NAME: KNS$SESSION
       10       10
       11       11        This module contains the procedures to support the FEP CP-6 session
       12       12        connections: local session connections, FEP to FEP session connctions,
       13       13        and connections between FEPs and hosts.  The procedures include
       14       14        the following:
       15       15
       16       16            KNS$SEND - Send outgoing message
       17       17            KNS$RECV - Receive incoming message
       18       18            KNS$TERM - Terminate CP-6 session connections
       19       19        */
       20       20
       21       21        %EJECT;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:2    
       22       22
       23       23        KNS$SEND: PROC (KN$NETPARM) ALTRET;
       24       24
       25       25                                                /* Include files                      */
       26       26        %INCLUDE GU_LCP6_M;
       27      954        %INCLUDE KI_CP6;
       28     2050        %INCLUDE K_SCODE_C;
       29     2135        %INCLUDE KN_DATA_M;
       30     3921        %INCLUDE K_ADDRESS_M;
       31     4424        %INCLUDE KNN_NETWORK_M;
       32     4787        %INCLUDE KNH_MACRO_C;
       33     5070        %INCLUDE K_QDPHDRS_M;
       34     5952        %INCLUDE K_RLCID_M;
       35     6056        %INCLUDE K_REASON_C;
       36     6082
       37     6083                                                /* Parameter definitions              */
       38     6084        %KN$NETPARM;
       39     6237
       40     6238                                                /* Based structures                   */
       41     6239        %FPT_CONNECT (STCLASS="BASED(KN$NETPARM.FPT$)");
       42     6308        %FPT_TERM (STCLASS="BASED(KN$NETPARM.FPT$)");
       43     6330        %FPT_CONNECT_ACK (STCLASS="BASED(KN$NETPARM.FPT$)");
       44     6379
       45     6380        %KN$LDCT (STCLASS="BASED(KN$NETPARM.LDCT$)");
       46     6625        %KN$DCT$;
       47     6628
       48     6629        %K$SQDP_INIT (STCLASS="BASED(KN$NETPARM.SHDR$)");
       49     6993        %K$SQDP_INIT_ACK (STCLASS="BASED(KN$NETPARM.SHDR$)");
       50     7286        %K$SQDP_TERM (STCLASS="BASED(KN$NETPARM.SHDR$)");
       51     7564        %K$SQDP_DATA (STCLASS="BASED(KN$NETPARM.SHDR$)");
       52     7691
       53     7692    1   DCL KNN$ROUTE$(0:0) PTR BASED(KNN_ROUTE$$);
       54     7693        %KNN$ROUTE (STCLASS="BASED(ROUTE$)");
       55     7765        %KNN$LINK (STCLASS="BASED(LINK$)");
       56     8016
       57     8017                                                /* External Data                      */
       58     8018    1   DCL KN_LDCT_MAX# UBIN SYMREF;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:3    
       59     8019    1   DCL KN_DCT$$ PTR SYMREF;
       60     8020    1   DCL KNN_ROUTE$$ PTR SYMREF;
       61     8021    1   DCL KN_NODE# UBIN SYMREF;
       62     8022    1   DCL 1 KN_NODE_BIN SYMREF,
       63     8023    1         2 * CHAR(4),
       64     8024    1         2 FEX CHAR(4);
       65     8025    1   DCL KN_NODE_TEXT REDEF KN_NODE_BIN CHAR(8);
       66     8026
       67     8027    1   DCL KNT_DEFAULT_CHKSUM UBIN SYMREF;
       68     8028    1   DCL KNT_DEFAULT_EXTENDED UBIN SYMREF;
       69     8029    1   DCL KNT_DEFAULT_CLASS UBIN SYMREF;
       70     8030    1   DCL KNT_DEFAULT_QOS UBIN SYMREF;
       71     8031
       72     8032                                                /* Internal Data                      */
       73     8033    1   DCL KNS_SSN_SCREECH UBIN STATIC SYMDEF INIT(1); /*set non-zero to cause screech*/
       74     8034    1   DCL KNS_SSN_SCREECH_COUNT UBIN STATIC SYMDEF INIT(0);
       75     8035
       76     8036    1   DCL KNS_SPEAK_SHDRSZ UBIN STATIC SYMDEF INIT(0); /*largest PPDU sent          */
       77     8037    1   DCL KNS_RPEAK_SHDRSZ UBIN STATIC SYMDEF INIT(0); /*largest SPDU received*/
       78     8038
       79     8039        %VLP_SCODE (FPTN=ILSTTRAN,ERR#=%S$ILSTRAN,SEV=G_SEV_SCREECH#,
       80     8040                       STCLASS=CONSTANT,FCG=KN,MID=S,MON='1'B);
       81     8101
       82     8102        %VLP_SCODE (FPTN=BADFNC,ERR#=%S$BADFNC,SEV=G_SEV_SCREECH#,
       83     8103                       STCLASS=CONSTANT,FCG=KN,MID=S,MON='1'B);
       84     8164
       85     8165        %VLP_SCODE (FPTN=PRTCLERR,ERR#=%S$PRTCLERR,SEV=G_SEV_SCREECH#,
       86     8166                       STCLASS=CONSTANT,FCG=KN,MID=S,MON='1'B);
       87     8227
       88     8228        %FPT_CONNECT_ACK (FPTN=FPT_NAK_NOROUTE, STCLASS=CONSTANT, REASON=%K_REASON_NORTE);
       89     8277
       90     8278                                                /* Entry point references             */
       91     8279    1   DCL KNA$GETLDCT ENTRY(1) ALTRET;
       92     8280    1   DCL KNA$RLSLDCT ENTRY(1) ALTRET;
       93     8281    1   DCL KNA$LOCATE_TCTX ENTRY(1) ALTRET;
       94     8282    1   DCL KNH$SEND ENTRY(1) ALTRET;
       95     8283    1   DCL KNN$SEND ENTRY(1) ALTRET;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:4    
       96     8284    1   DCL KNT$SEND ENTRY(1) ALTRET;
       97     8285    1   DCL SCREECH ENTRY(1);
       98     8286
       99     8287                                                /* Auto storage                       */
      100     8288    1   DCL FUNCTION UBIN;
      101     8289    1   DCL SEND_ENTRY$ EPTR;
      102     8290    1   DCL LDCT$ PTR;
      103     8291    1   DCL LDCTX UBIN;
      104     8292    1   DCL LOCAL_TURNAROUND SBIN;              /* Not zero if true                   */
      105     8293    1   DCL SQDP_TYPE UBIN;
      106     8294
      107     8295                                                /* Storage for the session header     */
      108     8296        %K$SQDP_INIT (NAME=HDR, STCLASS=AUTO);
      109     8660        %FPT_TERM (FPTN=FPT$TERM, STCLASS="AUTO");
      110     8682        %FPT_CONNECT (FPTN=FPT$CONNECT,STCLASS="");
      111     8751
      112     8752    1   DCL TEMP SBIN AUTO;
      113     8753    1   DCL SAVE_LDCT$ PTR AUTO;
      114     8754    1   DCL LDCT_LNK$ PTR AUTO;
      115     8755
      116     8756    1   DCL ROUTE$ PTR;
      117     8757    1   DCL LINK$ PTR;
      118     8758
      119     8759        %EJECT;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:5    
      120     8760        /*F* NAME: KNS$SEND
      121     8761
      122     8762        KNS$SEND is called with the KN$NETPARM parameter, which contains:
      123     8763
      124     8764        .fif
      125     8765        }    FUNCTION    - The function to be performed.  This will be one of the
      126     8766        }                  folowing EQUed values from the file KNH_MACRO_M:
      127     8767        }
      128     8768        }                      KN_FCN_DATA
      129     8769        }                      KN_FCN_INIT
      130     8770        }                      KN_FCN_INIT_ACK
      131     8771        }                      KN_FCN_TERM
      132     8772        }                      KN_FCN_TERM_ACK
      133     8773        }
      134     8774        }    FPT$        - The FPT associated with the request.  The format
      135     8775        }                  of the FPT is determined by the value of FUNCTION.
      136     8776        }
      137     8777        .fin
      138     8778
      139     8779        KNS$SEND will map the function to a particular session message
      140     8780        type, build the header, frame it in KN$NETPARM, and forward the
      141     8781        message.
      142     8782
      143     8783        Any special action taken by KNS$SEND is determined by the FUNCTION
      144     8784        code, and will be described below.
      145     8785        */
      146     8786
      147     8787    1      FUNCTION = KN$NETPARM.FUNCTION;
      148     8788
      149     8789    1      KN$NETPARM.ERRCODE = 0;
      150     8790
      151     8791    1      IF FUNCTION ~= %KN_FCN_INIT
      152     8792    1      THEN KN$NETPARM.FUNCTION = %KN_FCN_DATA;
      153     8793
      154     8794    1      KN$NETPARM.NODE = KN$LDCT.RLCID.NODE;
      155     8795
      156     8796    1      IF KN$LDCT.CONN_TYPE = %KN_CNTYPE_QDP
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:6    
      157     8797    2      THEN DO;
      158     8798    2           SEND_ENTRY$ = ENTADDR(KNN$SEND);
      159     8799    2           END;
      160     8800    2      ELSE DO;
      161     8801    2           SEND_ENTRY$ = ENTADDR(KNT$SEND);
      162     8802    2           KN$NETPARM.TCTX_ID = KN$LDCT.TRANSPORT_ID;
      163     8803    2           END;
      164     8804
      165     8805    1      LOCAL_TURNAROUND = FUNCTION;
      166     8806
      167     8807    1      IF FUNCTION = %KN_FCN_DATA
      168     8808    1      THEN GOTO SEND_DATA;
      169     8809
      170     8810    2      DO CASE(FUNCTION);
      171     8811
      172     8812        %EJECT;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:7    
      173     8813        /*F* NAME: KNS$SEND - Function KN_FCN_INIT
      174     8814
      175     8815        KNS$SEND is called with FUNCTION set to KN_FCN_INIT from
      176     8816        the following routines:
      177     8817
      178     8818        .fif
      179     8819        }    KNA$OPEN
      180     8820        }    KNH$SCAN
      181     8821        }    KNB$INIT
      182     8822        .fin
      183     8823
      184     8824        KN$NETPARM.LDCT$ will contain the address of LDCT associated
      185     8825        with the end point requesting the connection.
      186     8826
      187     8827        The FPT that is passed is of the format generated by the
      188     8828        FPT_CONNECT macro in file KNH_MACRO_C.
      189     8829
      190     8830        An initiate session header is built in auto with the
      191     8831        information from the LDCT and FPT_CONNECT.
      192     8832
      193     8833        When the other end-point is not on the node as that requesting the
      194     8834        connection we first make sure that a link connection to the requested
      195     8835        node does exist.  If the link is up, and that link is over the COUPLER,
      196     8836        the type of connection is changed from APE or SSN to QDP.  Otherwise,
      197     8837        a class 4 transport connection will be initiated if there isn't
      198     8838        already one to the same node with the same QOS, etc.
      199     8839
      200     8840        If the other end-point is on the same fep, we branch directly to
      201     8841        the code in KNS$RECV that processes incoming data functions.
      202     8842        When not on this fep, the request is passed down through the layers
      203     8843        through KNT$SEND, or through KNN$SEND if this is a QDP connection.
      204     8844
      205     8845        On return, the LDCT state is set to waiting init ack from remote and
      206     8846        session returns to the calling routine.
      207     8847        */
      208     8848
      209     8849    2       CASE (%KN_FCN_INIT);                /* Initiate a session connecton       */
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:8    
      210     8850
      211     8851        /* Check to see if this is legal for this state.
      212     8852        */
      213     8853    2         IF KN$LDCT.STATE ~= %KN_ST_NULL
      214     8854    3         THEN DO;
      215     8855    3              KN$NETPARM.ERRCODE = %KN_ERR_INVFCN;
      216     8856    3              ALTRETURN;
      217     8857    3              END;
      218     8858
      219     8859    2         KN$LDCT.RLCID = FPT_CONNECT.RLCID;
      220     8860
      221     8861        /* Determine if this connection is to be QDP or Tr Class 4
      222     8862        */
      223     8863    2         IF KN$LDCT.RLCID.NODE ~= KN_NODE#
      224     8864    3         THEN DO;
      225     8865    3              IF KN_NODE# = 255 THEN GOTO NOT_READY_YET;
      226     8866
      227     8867    3              KN$NETPARM.NODE = KN$LDCT.RLCID.NODE;
      228     8868    3              ROUTE$ = KNN$ROUTE$(KN$LDCT.RLCID.NODE);
      229     8869    3              LINK$ = KNN$ROUTE.LINK$;
      230     8870
      231     8871    3              IF LINK$=ADDR(NIL) OR KNN$LINK.LDCT$=ADDR(NIL)
      232     8872    3              THEN GOTO NOT_READY_YET;
      233     8873
      234     8874    3              IF KNN$LINK.LDCT$->KN$LDCT.CONN_TYPE = %KN_CNTYPE_LINK
      235     8875    3                AND KNN$ROUTE.CURRENT_QOS = 1
      236     8876    4              THEN DO/*coupler QDP link*/;
      237     8877    4   SETUP_QDP:      ;
      238     8878    4                   KN$LDCT.CONN_TYPE = %KN_CNTYPE_QDP;
      239     8879    4                   SEND_ENTRY$ = ENTADDR(KNN$SEND);
      240     8880    4                   KN$NETPARM.FUNCTION = %KN_FCN_DATA;
      241     8881    4                   END;
      242     8882
      243     8883    4              ELSE DO/*hdlcx.25 class4 tr link*/;
      244     8884    4                   FPT_CONNECT.TR_FLAGS = '0'B;
      245     8885    4                   FPT_CONNECT.CLASS = KNT_DEFAULT_CLASS;
      246     8886    4                   FPT_CONNECT.SERVICE = KNT_DEFAULT_QOS;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:9    
      247     8887
      248     8888    4                   IF KNT_DEFAULT_CHKSUM ~= 0
      249     8889    4                   THEN FPT_CONNECT.TR_FLAGS.CHKSUM = '1'B;
      250     8890    4                   IF KNT_DEFAULT_EXTENDED ~= 0
      251     8891    4                   THEN FPT_CONNECT.TR_FLAGS.EXTENDED = '1'B;
      252     8892
      253     8893    4                   CALL KNA$LOCATE_TCTX (KN$NETPARM)
      254     8894    5                   WHENRETURN DO;
      255     8895    5                        KN$NETPARM.FUNCTION = %KN_FCN_DATA;
      256     8896    5                        END;
      257     8897    4                   END/*do if not qdp*/;
      258     8898    3              END/*do if not this node*/;
      259     8899
      260     8900    2         KN$LDCT.STATE = %KN_ST_WIAFR/*wait init ack from remote*/;
      261     8901
      262     8902        /* Build the header.
      263     8903        */
      264     8904    2         KN$NETPARM.SHDR$ = ADDR(HDR);
      265     8905    2         KN$NETPARM.SHDRSZ = SIZEC(K$SQDP_INIT);
      266     8906
      267     8907    2         K$SQDP_INIT.TYPE = %K_SQDP_INIT;
      268     8908    2         K$SQDP_INIT.CNTRL = '1'B;
      269     8909    2         K$SQDP_INIT.LDCT = KN$LDCT.RLCID.LDCTX;
      270     8910    2         K$SQDP_INIT.SYSID = FPT_CONNECT.USER.SYSID;
      271     8911    2         K$SQDP_INIT.RLCID.NODE = KN_NODE#;
      272     8912    2         K$SQDP_INIT.RLCID.GENERATION = KN$LDCT.GENERATION;
      273     8913    2         K$SQDP_INIT.RLCID.LDCTX = KN$LDCT.LDCTX;
      274     8914    2         K$SQDP_INIT.DEST_GENERATION = KN$LDCT.RLCID.GENERATION;
      275     8915    2         K$SQDP_INIT.RESOURCE = FPT_CONNECT.RESOURCE;
      276     8916    2         K$SQDP_INIT.NODE_NAME = KN_NODE_TEXT;
      277     8917    2         K$SQDP_INIT.TERMINAL_ID = FPT_CONNECT.TERMINAL_ID;
      278     8918    2         K$SQDP_INIT.TERMINAL_SPEED = FPT_CONNECT.SPEED;
      279     8919    2         K$SQDP_INIT.DATA_HDR.LENGTH = KN$NETPARM.MSGSZ + KN$NETPARM.UHDRSZ;
      280     8920    2         K$SQDP_INIT.DATA_HDR.TYPE = KN$NETPARM.RECTYPE;
      281     8921    2         IF KN$LDCT.CONN_TYPE = %KN_CNTYPE_QDP
      282     8922    2         THEN K$SQDP_INIT.QDP = '1'B;
      283     8923    2         ELSE K$SQDP_INIT.QDP = '0'B;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:10   
      284     8924
      285     8925    2         IF KN$LDCT.RLCID.NODE = KN_NODE#
      286     8926    2         THEN GOTO RECEIVE_DATA;
      287     8927
      288     8928    2         CALL SEND_ENTRY$(KN$NETPARM)
      289     8929    3         WHENALTRETURN DO;
      290     8930    3   NOT_READY_YET: ;
      291     8931    3              KN$LDCT.STATE = %KN_ST_NULL;
      292     8932    3              IF KN$NETPARM.ERRCODE = %KN_ERR_NOQ
      293     8933    3                OR KN$NETPARM.ERRCODE = %KN_ERR_NOQ2
      294     8934    3              THEN ALTRETURN;
      295     8935
      296     8936    3              KN$NETPARM.FUNCTION = %KN_FCN_INIT_ACK;
      297     8937    3              KN$NETPARM.FPT$ = ADDR(FPT_NAK_NOROUTE);
      298     8938
      299     8939    3              IF KN$LDCT.USER_ENTRY$ ~= ENTADDR(NIL)
      300     8940    3              THEN CALL KN$LDCT.USER_ENTRY$(KN$NETPARM) ALTRET(DO_ALTRT);
      301     8941    3              RETURN;
      302     8942    3              END/*ALTRET*/;
      303     8943
      304     8944    2   INIT_RETURN: ;
      305     8945    2         KN$LDCT.STATE = %KN_ST_WIAFR/*wait init ack from remote*/;
      306     8946    2         RETURN;
      307     8947
      308     8948        %EJECT;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:11   
      309     8949        /*F* NAME: KNS$SEND - Function KN_FCN_DATA
      310     8950
      311     8951        KNS$SEND is called with FUNCTION set to KN_FCN_DATA from
      312     8952        the following routines:
      313     8953
      314     8954        .fif
      315     8955        }    KNA$FCNO and KNA$FCNOU
      316     8956        }    KNH$SCAN
      317     8957        }    KNB$WRITE
      318     8958        .fin
      319     8959
      320     8960        KN$NETPARM.LDCT$ will contain the address of LDCT associated
      321     8961        with the end point sending the data.
      322     8962
      323     8963        There is not FPT passed on this call.
      324     8964
      325     8965        If the LDCT state is active, we simply build a session data
      326     8966        header and pass the message on down the layers, or if the
      327     8967        other end point is on the same fep, enter the receive data
      328     8968        logic of KNS$RECV.
      329     8969
      330     8970        If we are waiting a term ack from the local we just throw the data
      331     8971        away by returning with no error code.
      332     8972
      333     8973        If the LDCT is in any other state, KNS$SEND will altreturn with
      334     8974        KN$NETPARM.ERRCODE set to KN_ERR_INVFCN.
      335     8975        */
      336     8976    2       CASE (%KN_FCN_DATA);                /* send data                          */
      337     8977
      338     8978    2   SEND_DATA:
      339     8979
      340     8980    2         IF KN$LDCT.STATE = %KN_ST_ACTIVE
      341     8981    3         THEN DO;
      342     8982    3              KN$NETPARM.SHDR$ = ADDR(HDR);
      343     8983    3              KN$NETPARM.SHDRSZ = SIZEC(K$SQDP_DATA);
      344     8984
      345     8985    3              K$SQDP_DATA.LDCT = KN$LDCT.RLCID.LDCTX;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:12   
      346     8986    3              K$SQDP_DATA.TYPE = %K_SQDP_DATA;
      347     8987    3              K$SQDP_DATA.CNTRL = '0'B;
      348     8988    3              K$SQDP_DATA.LENGTH = KN$NETPARM.MSGSZ + KN$NETPARM.UHDRSZ;
      349     8989
      350     8990    3              IF K$SQDP_DATA.LENGTH > KNS_SPEAK_SHDRSZ
      351     8991    3              THEN KNS_SPEAK_SHDRSZ = K$SQDP_DATA.LENGTH;
      352     8992
      353     8993    3              IF KN$LDCT.RLCID.NODE = KN_NODE#
      354     8994    4              THEN DO;
      355     8995    4                   K$SQDP_DATA.TYPE = KN$NETPARM.RECTYPE;
      356     8996    4                   GOTO RECEIVE_DATA;
      357     8997    4                   END;
      358     8998
      359     8999    3              CALL SEND_ENTRY$(KN$NETPARM) ALTRET(DO_ALTRT);
      360     9000
      361     9001    3   DATA_RETURN: ;
      362     9002    3              RETURN;
      363     9003    3              END/* do if ldct is active*/;
      364     9004
      365     9005    2         IF KN$LDCT.STATE =    %KN_ST_WTAFL/*wait term ack from local*/
      366     9006    2           OR KN$LDCT.STATE = %KN_ST_WTAFLNT/*wait init ack to terminate*/
      367     9007    2         THEN RETURN;
      368     9008
      369     9009    2         KN$NETPARM.ERRCODE = %KN_ERR_INVFCN;
      370     9010    2         ALTRETURN;
      371     9011
      372     9012
      373     9013        %EJECT;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:13   
      374     9014        /*F* NAME: KNS$SEND - Function KN_FCN_TERM
      375     9015
      376     9016        KNS$SEND is called with FUNCTION set to KN_FCN_TERM from the
      377     9017        KNH$CLOSE routine when the state of the LDCT waiting for the CQ
      378     9018        that is being closed is active.
      379     9019
      380     9020        KN$NETPARM.LDCT$ will contain the address of LDCT associated
      381     9021        with the end point that is to be released.
      382     9022
      383     9023        The FPT that is passed is of the format generated by the
      384     9024        FPT_TERM macro in file KNH_MACRO_C.
      385     9025
      386     9026        A terminate session header is built in auto with the
      387     9027        information from the LDCT and FPT_TERM.
      388     9028
      389     9029        Then we either enter KNS$RECV with the message if the other end
      390     9030        point is on the same fep, or pass the message on down the layers.
      391     9031
      392     9032        On return, the LDCT state is set to waiting term ack from remote
      393     9033        and KNS$SEND returns.
      394     9034        */
      395     9035
      396     9036    2       CASE (%KN_FCN_TERM);                /* Terminate a session connection     */
      397     9037
      398     9038        /* If the end point is waiting term ack from local throw away this terminate.
      399     9039        */
      400     9040    2         IF KN$LDCT.STATE =    %KN_ST_WTAFL/*wait term ack from local*/
      401     9041    2           OR KN$LDCT.STATE = %KN_ST_WTAFLNT
      402     9042    2         THEN RETURN;
      403     9043
      404     9044        /* Check to see if the state is active */
      405     9045    2         IF KN$LDCT.STATE ~= %KN_ST_ACTIVE AND KN$LDCT.STATE ~= %KN_ST_WTAFR
      406     9046    3         THEN DO;
      407     9047    3              KN$NETPARM.ERRCODE = %KN_ERR_INVFCN;
      408     9048    3              ALTRETURN;
      409     9049    3              END;
      410     9050
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:14   
      411     9051        /* Build the header.
      412     9052        */
      413     9053    2         IF KN$LDCT.STATE = %KN_ST_ACTIVE
      414     9054    3         THEN DO;
      415     9055    3              KN$NETPARM.SHDR$ = ADDR(HDR);
      416     9056    3              KN$NETPARM.SHDRSZ = SIZEC(K$SQDP_TERM);
      417     9057
      418     9058    3              K$SQDP_TERM.TYPE = %K_SQDP_TERM;
      419     9059    3              K$SQDP_TERM.CNTRL = '1'B;
      420     9060    3              K$SQDP_TERM.LDCT = KN$LDCT.RLCID.LDCTX;
      421     9061    3              K$SQDP_TERM.RLCID = FPT_TERM.RLCID;
      422     9062    3              K$SQDP_TERM.REASON = FPT_TERM.REASON;
      423     9063    3              K$SQDP_TERM.DATA_HDR = '0'B;
      424     9064
      425     9065        /* Call transport of transess.
      426     9066        */
      427     9067    3              IF KN$LDCT.RLCID.NODE = KN_NODE#
      428     9068    4              THEN DO;
      429     9069    4                   GOTO RECEIVE_DATA;
      430     9070    4                   END;
      431     9071
      432     9072    3              CALL SEND_ENTRY$(KN$NETPARM)
      433     9073    4              WHENALTRETURN DO;
      434     9074    4   DO_ALTRT:
      435     9075    4                   ALTRETURN;
      436     9076    4                   END;
      437     9077    3              END;
      438     9078
      439     9079    2   TERM_RETURN: ;
      440     9080    2         KN$LDCT.STATE = %KN_ST_WTAFR/*waiting term ack from remote*/;
      441     9081
      442     9082    2         RETURN;
      443     9083
      444     9084
      445     9085        %EJECT;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:15   
      446     9086        /*F* NAME: KNS$SEND - Function KN_FCN_INIT_ACK
      447     9087
      448     9088        KNS$SEND is called with FUNCTION set to KN_FCN_INIT_ACK
      449     9089        from KNH$CLOSE when the state of the LDCT waiting on the CQ
      450     9090        is waiting ack from local, waiting init ack to terminate,
      451     9091        or waiting term ack from local.
      452     9092
      453     9093        The FPT that is passed is of the format generated by the
      454     9094        FPT_CONNECT_ACK macro in file KNH_MACRO_C.
      455     9095
      456     9096        The LDCT state must be either waiting ack from local or waiting
      457     9097        init ack to terminate.  If its waiting init ack to terminate
      458     9098        KNS$SEND will call the routine as specified in LDCT.USER_ENTRY$
      459     9099        with the terminate function specified.
      460     9100
      461     9101        An initiate ack session header is built in auto with the
      462     9102        information from the LDCT and FPT_CONNECT_ACK.  The only field that
      463     9103        is used is REASON, and it is set to %K_REASON_USRREJ.
      464     9104
      465     9105        Then we either enter KNS$RECV with the message if the other end
      466     9106        point is on the same fep, or pass the message on down the layers.
      467     9107
      468     9108        On return, the LDCT state is set to null if the reason code in
      469     9109        the FPT is non-zero; set to active if the reason code is zero.
      470     9110        Session the returns to the calling routine.
      471     9111        */
      472     9112
      473     9113    2       CASE (%KN_FCN_INIT_ACK);            /* Initiate acknowledement            */
      474     9114
      475     9115        /* Check for valid state.  Call USER_ENTRY$ IF approproiate.
      476     9116        */
      477     9117    2         IF KN$LDCT.STATE ~=   %KN_ST_WIAFL/*Waiting init ack from local*/
      478     9118    3         THEN DO;
      479     9119    3              IF KN$LDCT.STATE = %KN_ST_WTIAFLNT
              9119                       /*wait init ack from local to terminate*/
      480     9120    4              THEN DO;
      481     9121    4                   IF FPT_CONNECT_ACK.REASON ~= 0
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:16   
      482     9122    4                   THEN RETURN;       /* no need to send TERM to application     */
      483     9123
      484     9124    4                   KN$NETPARM.FUNCTION = %KN_FCN_TERM;
      485     9125    4                   KN$NETPARM.FPT$ = ADDR(FPT_NAK_NOROUTE);
      486     9126
      487     9127    4                   CALL KN$LDCT.USER_ENTRY$(KN$NETPARM) ALTRET(DO_ALTRT);
      488     9128    4                   KN$LDCT.STATE = %KN_ST_WTAFLNT
              9128                            /*Wait term ack from local to terminate*/;
      489     9129    4                   RETURN;
      490     9130    4                   END;
      491     9131
      492     9132    3              KN$NETPARM.ERRCODE = %KN_ERR_INVFCN;
      493     9133    3              ALTRETURN;
      494     9134    3              END;
      495     9135
      496     9136        /* Build the header.
      497     9137        */
      498     9138    2         KN$NETPARM.SHDR$ = ADDR(HDR);
      499     9139    2         KN$NETPARM.SHDRSZ = SIZEC(K$SQDP_INIT_ACK);
      500     9140
      501     9141    2         K$SQDP_INIT_ACK.TYPE = %K_SQDP_INIT_ACK;
      502     9142    2         K$SQDP_INIT_ACK.CNTRL = '1'B;
      503     9143    2         K$SQDP_INIT_ACK.LDCT = KN$LDCT.RLCID.LDCTX;
      504     9144    2         K$SQDP_INIT_ACK.DATA_HDR.LENGTH = KN$NETPARM.MSGSZ + KN$NETPARM.UHDRSZ;
      505     9145    2         K$SQDP_INIT_ACK.DATA_HDR.TYPE = KN$NETPARM.RECTYPE;
      506     9146    2         K$SQDP_INIT_ACK.RLCID.LDCTX = KN$LDCT.LDCTX;
      507     9147    2         K$SQDP_INIT_ACK.RLCID.NODE = KN_NODE#;
      508     9148    2         K$SQDP_INIT_ACK.RLCID.GENERATION = KN$LDCT.GENERATION;
      509     9149    2         K$SQDP_INIT_ACK.REASON = FPT_CONNECT_ACK.REASON;
      510     9150
      511     9151        /* Call the communications layers or enter kns$recv.
      512     9152        */
      513     9153    2         IF KN$LDCT.RLCID.NODE = KN_NODE#
      514     9154    2         THEN GOTO RECEIVE_DATA;
      515     9155
      516     9156    2         CALL SEND_ENTRY$(KN$NETPARM)
      517     9157    3         WHENALTRETURN DO;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:17   
      518     9158    3   DO_ALTRET: ;
      519     9159    3              ALTRETURN;
      520     9160    3              END;
      521     9161
      522     9162        /* Set the state to active if no err; null if errs.  Return.
      523     9163        */
      524     9164    2   INIT_ACK_RETURN: ;
      525     9165    2         IF FPT_CONNECT_ACK.REASON ~= 0
      526     9166    2         THEN KN$LDCT.STATE = %KN_ST_NULL; /*what about releasing it?*/
      527     9167    2         ELSE KN$LDCT.STATE = %KN_ST_ACTIVE;
      528     9168
      529     9169    2         RETURN;
      530     9170
      531     9171        %EJECT;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:18   
      532     9172        /*F* NAME: KNS$SEND - Function KN_FCN_TERM_ACK
      533     9173
      534     9174        KNS$SEND is called with FUNCTION set to KN_FCN_TERM_ACK
      535     9175        from the KNH$CLOSE when the state of the LDCT waiting for the CQ
      536     9176        is WTAFL.
      537     9177
      538     9178        KN$NETPARM.LDCT$ will contain the address of LDCT associated
      539     9179        with the end point that is to be released.
      540     9180
      541     9181        The FPT that is passed is of the format generated by the
      542     9182        FPT_TERM macro in file KNH_MACRO_C.
      543     9183
      544     9184        We build a session terminate header and pass it down through the
      545     9185        the layers, or,if on this node, enter KNS$RECV.
      546     9186
      547     9187        On return, the LDCT state is marked NULL and session returns.
      548     9188        */
      549     9189    2       CASE (%KN_FCN_TERM_ACK);            /* Terminate session acknowledgement  */
      550     9190
      551     9191        /* Check to see if state if appropiate */
      552     9192    2         IF KN$LDCT.STATE = %KN_ST_WTAFLNT
      553     9193    3         THEN DO;
      554     9194    3              KN$LDCT.STATE = %KN_ST_NULL;
      555     9195    3              RETURN;
      556     9196    3              END;
      557     9197
      558     9198    2         IF KN$LDCT.STATE ~= %KN_ST_WTAFL
      559     9199    3         THEN DO;
      560     9200    3              KN$NETPARM.ERRCODE = %KN_ERR_INVFCN;
      561     9201    3              ALTRETURN;
      562     9202    3              END;
      563     9203
      564     9204        /* We build a session terminate header and pass it down to network
      565     9205          or, if on this node, enter kns$recv.
      566     9206        */
      567     9207    2         KN$NETPARM.SHDR$ = ADDR(HDR);
      568     9208    2         KN$NETPARM.SHDRSZ = SIZEC(K$SQDP_TERM);
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:19   
      569     9209
      570     9210    2         K$SQDP_TERM.TYPE = %K_SQDP_TERM;
      571     9211    2         K$SQDP_TERM.CNTRL = '1'B;
      572     9212    2         K$SQDP_TERM.LDCT = KN$LDCT.RLCID.LDCTX;
      573     9213    2         K$SQDP_TERM.DATA_HDR = '0'B;
      574     9214
      575     9215    2         IF KN$LDCT.RLCID.NODE = KN_NODE#
      576     9216    2         THEN GOTO RECEIVE_DATA;
      577     9217
      578     9218    2         CALL SEND_ENTRY$(KN$NETPARM) ALTRET(DO_ALTRT);
      579     9219
      580     9220        /* On return, mark the LDCT state as null.
      581     9221           Who releases it?
      582     9222        */
      583     9223    2   TERM_ACK_RETURN: ;
      584     9224    2         KN$LDCT.STATE = %KN_ST_NULL;
      585     9225    2         RETURN;
      586     9226
      587     9227        %EJECT;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:20   
      588     9228    2       CASE (ELSE);
      589     9229    2         CALL BADFNC_SCREECH;
      590     9230
      591     9231    2         END;                              /* End cases                          */
      592     9232    1      RETURN;
      593     9233
      594     9234        %EJECT;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:21   
      595     9235        /*F* NAME: KNS$RECV
      596     9236
      597     9237        KNS$RECV is called from KNN$RECV for QDP connections, from KNT$RECV for
      598     9238        class 4 connections, and from KNS$SEND directly when the endpoint that is
      599     9239        to receive the message is on the same fep.
      600     9240
      601     9241        KNS$RECV is called with the following parameters:
      602     9242
      603     9243        .fif
      604     9244        }    FUNCTION    - The function to be performed.  This will be one of the
      605     9245        }                  folowing EQUed values from the file KNH_MACRO_M:
      606     9246        }
      607     9247        }                      KN_FCN_DATA
      608     9248        }                      KN_FCN_TERM
      609     9249        }                      KN_FCN_TERM_ACK
      610     9250        }                      KN_FCN_UNQ
      611     9251        }
      612     9252        }    KN$NETPARM  - Contains the message header addresses and sizes
      613     9253        }
      614     9254        }    FPT_TERM    - Only used when FUNCTION is TERM.  The format
      615     9255        }                  of the FPT is described by the FPT_TERM macro.
      616     9256        }
      617     9257        .fin
      618     9258        */
      619     9259    1   KNS$RECV: ENTRY (KN$NETPARM) ALTRET;
      620     9260
      621     9261    1      FUNCTION = KN$NETPARM.FUNCTION;
      622     9262
      623     9263    1      LOCAL_TURNAROUND = 0;
      624     9264
      625     9265    1      IF KN$NETPARM.SHDRSZ > KNS_RPEAK_SHDRSZ
      626     9266    1      THEN KNS_RPEAK_SHDRSZ = KN$NETPARM.SHDRSZ;
      627     9267
      628     9268    1      IF FUNCTION = %KN_FCN_DATA
      629     9269    1      THEN GOTO RECEIVE_DATA;
      630     9270
      631     9271    2      DO CASE (FUNCTION);
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:22   
      632     9272
      633     9273        /*F* NAME: KNS$RECV - Function KN_FCN_DATA
      634     9274
      635     9275        The action to be taken when KNS$RECV has been entered from the lower
      636     9276        layers or when KNS$SEND has entered KNS$RECV directly because the
      637     9277        receiving endpoint is on the same fep, is dependent on the type of
      638     9278        data message that has been received.
      639     9279
      640     9280        This will be one of the following EQUated values from file
      641     9281        K_QDPHDRS_M
      642     9282
      643     9283        .fif
      644     9284        }    K_SQDP_DATA        0   Data
      645     9285        }    K_SQDP_INIT        1   Initiate Logical Connection Request
      646     9286        }    K_SQDP_INIT_ACK    2   Initiate Logical Connection Ack
      647     9287        }    K_SQDP_TERM        3   Terminate Logical Connection
      648     9288        .fin
      649     9289        */
      650     9290
      651     9291    2       CASE (%KN_FCN_DATA);
      652     9292
      653     9293        /* KNS$SEND branches directly to RECEIVE_DATA with LOCAL_TURNAROUND set
      654     9294           to the function code if the session connection is within the same FEP.
      655     9295        */
      656     9296    2   RECEIVE_DATA:
      657     9297    2         SAVE_LDCT$ = KN$NETPARM.LDCT$;
      658     9298
      659     9299        /* Check to see if the record received is the minimum allowable length
      660     9300        */
      661     9301    2         IF KN$NETPARM.SHDRSZ < LENGTHC(K$SQDP_DATA)
      662     9302    3         THEN DO;
      663     9303    3              CALL PRTCL_SCREECH/*N*  or errlog */;
      664     9304    3              RETURN;
      665     9305    3              END;
      666     9306
      667     9307        /* Find LDCT for this message.
      668     9308           If the ldct is nil, this better be a connection request.
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:23   
      669     9309        */
      670     9310    2         KN$NETPARM.LDCT$ = KN$DCT$(K$SQDP_DATA.LDCT);
      671     9311    2         IF KN$NETPARM.LDCT$ = ADDR(NIL) AND K$SQDP_DATA.TYPE ~= %K_SQDP_INIT
      672     9312    3         THEN DO;
      673     9313    3              CALL PRTCL_SCREECH/*N* Send a connect ack with reason non zero */;
      674     9314    3              RETURN;
      675     9315    3              END;
      676     9316
      677     9317    2         IF K$SQDP_DATA.CNTRL = '0'B
      678     9318    2         THEN GOTO GOT_DATATYPE_DATA;
      679     9319
      680     9320    2         SQDP_TYPE = K$SQDP_DATA.TYPE;
      681     9321
      682     9322    2         IF (SQDP_TYPE > %K_SQDP_TERM) OR (SQDP_TYPE = %K_SQDP_DATA)
      683     9323    2         THEN CALL PRTCL_SCREECH;
      684     9324
      685     9325    3         DO CASE (SQDP_TYPE);
      686     9326
      687     9327        %EJECT;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:24   
      688     9328
      689     9329        /*F* NAME: KNS$RECV - Function KN_FCN_DATA and Type DATA
      690     9330
      691     9331        If the LDCT state is not active, it must be waiting terminate
      692     9332        from remote, in which case we just throw the data away by returning.
      693     9333        Any other LDCT state will cause us to screech.
      694     9334
      695     9335        If the message didn't come from this node, the session
      696     9336        header is stripped off.  In any case, the message is then passed
      697     9337        on up by calling the entry specified in LDCT.USER_ENTRY$.
      698     9338
      699     9339        */
      700     9340
      701     9341    3          CASE (%K_SQDP_DATA);             /* Data                               */
      702     9342
      703     9343    3   GOT_DATATYPE_DATA: ;
      704     9344    3            IF KN$LDCT.STATE = %KN_ST_WTAFR /* Waiting a terminate from remote   */
      705     9345    3            THEN RETURN;                   /* Throw this data on the floor.      */
      706     9346
      707     9347    3            IF KN$LDCT.STATE ~= %KN_ST_ACTIVE
      708     9348    3            THEN CALL LDCT_SCREECH;
      709     9349
      710     9350    3            IF LOCAL_TURNAROUND = 0
      711     9351    4            THEN DO;
      712     9352    4                 KN$NETPARM.RECTYPE = K$SQDP_DATA.TYPE;
      713     9353    4                 KN$NETPARM.UHDR$ = PINCRC(KN$NETPARM.SHDR$,SIZEC(K$SQDP_DATA));
      714     9354    4                 KN$NETPARM.UHDRSZ = K$SQDP_DATA.LENGTH;
      715     9355    4                 END/*if not local trunaround*/;
      716     9356
      717     9357    3            IF KN$LDCT.USER_ENTRY$ ~= ENTADDR(NIL)
      718     9358    3            THEN CALL KN$LDCT.USER_ENTRY$ (KN$NETPARM) ALTRET(DO_ALTRT);
      719     9359    3            RETURN;
      720     9360
      721     9361
      722     9362        %EJECT;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:25   
      723     9363
      724     9364        /*F* NAME: KNS$RECV - Function KN_FCN_DATA and Type Initate Request
      725     9365
      726     9366        First we get an LDCT for this endpoint and initialize the state to
      727     9367        waiting init ack from local.  The LDCT is further initialized with information
      728     9368        passed to KNS$RECV in the NETPARM.LDCT$, the LDCT for the other
      729     9369        end-point.
      730     9370
      731     9371        An FPT_CONNECT is built in auto.  If this is not an entry from KNS$SEND,
      732     9372        the references to the user data in KN$NETPARM are updated to reflect
      733     9373        the stripping off of the session header.
      734     9374
      735     9375        A call is then made to LDCT.USER_ENTRY$.  The function specified is
      736     9376        INIT.  KN$NETPARM and FPT_CONNECT are also passed as parameters.
      737     9377
      738     9378        */
      739     9379    3          CASE (%K_SQDP_INIT);             /* Initiate connection request        */
      740     9380
      741     9381    3            LDCT$ = KN$NETPARM.LDCT$;
      742     9382
      743     9383    3            IF LDCT$ = ADDR(NIL) /*  This better be a connection to node admin   */
      744     9384    4            THEN DO;
      745     9385    4                 IF K$SQDP_INIT.RESOURCE ~= 'NODADM'
      746     9386    4                   AND K$SQDP_INIT.RESOURCE ~= 'LOGON'
      747     9387    4                   AND K$SQDP_INIT.RESOURCE ~= 'NETMAN'
      748     9388    5                 THEN DO;
      749     9389    5                      TEMP = %K_REASON_USRREJ;
      750     9390    5                      GOTO CONNECT_NAK;
      751     9391    5                      END;
      752     9392    4                 END/*do if kn$netparm.ldct$ is nil*/;
      753     9393
      754     9394    3            IF KN$NETPARM.SHDR$ ~= ADDR(NIL) AND LDCT$ ~= ADDR(NIL)
      755     9395    3            THEN IF K$SQDP_INIT.DEST_GENERATION ~= KN$LDCT.GENERATION
      756     9396    4                 THEN DO;                  /* Generations don't match            */
      757     9397    4                      TEMP = %K_REASON_BADGEN;
      758     9398    4                      GOTO CONNECT_NAK;
      759     9399    4                      END;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:26   
      760     9400
      761     9401        /* Get an LDCT for this line.
      762     9402        */
      763     9403    3            CALL KNA$GETLDCT(KN$NETPARM.LDCT$)
      764     9404    4            WHENALTRETURN DO;
      765     9405    4                 TEMP = %K_REASON_NOLDCT;
      766     9406    4   CONNECT_NAK:  ;
      767     9407    4                 LDCTX = K$SQDP_INIT.RLCID.LDCTX;
      768     9408    4                 KN$NETPARM.SHDR$ = ADDR(HDR);
      769     9409    4                 KN$NETPARM.SHDRSZ = SIZEC(K$SQDP_INIT_ACK);
      770     9410    4                 K$SQDP_INIT_ACK.TYPE = %K_SQDP_INIT_ACK;
      771     9411    4                 K$SQDP_INIT_ACK.CNTRL = '1'B;
      772     9412    4                 K$SQDP_INIT_ACK.LDCT = LDCTX;
      773     9413    4                 K$SQDP_INIT_ACK.REASON = TEMP;
      774     9414    4                 KN$NETPARM.MSG$ = ADDR(NIL);
      775     9415    4                 KN$NETPARM.UHDR$ = ADDR(NIL);
      776     9416
      777     9417    4                 IF LOCAL_TURNAROUND = 0
      778     9418    5                 THEN DO;
      779     9419    5                      KN$NETPARM.FUNCTION = %KN_FCN_DATA;
      780     9420    5                      IF LDCT$->KN$LDCT.CONN_TYPE = %KN_CNTYPE_QDP
      781     9421    5                      THEN SEND_ENTRY$ = ENTADDR(KNN$SEND);
      782     9422    5                      ELSE SEND_ENTRY$ = ENTADDR(KNT$SEND);
      783     9423
      784     9424    5                      CALL SEND_ENTRY$(KN$NETPARM) ALTRET(DO_ALTRT);
      785     9425    5                      RETURN;
      786     9426    5                      END;
      787     9427    5                 ELSE DO;
      788     9428    5                      LOCAL_TURNAROUND = 0;
      789     9429    5                      GOTO RECEIVE_DATA;
      790     9430    5                      END;
      791     9431    4                 END/*altret*/;
      792     9432
      793     9433        /* Initialize the LDCT we just got.
      794     9434        */
      795     9435    3            KN$LDCT.STATE = %KN_ST_WIAFL;
      796     9436    3            KN$LDCT.RLCID = K$SQDP_INIT.RLCID;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:27   
      797     9437    3            KN$LDCT.TRANSPORT_ID = KN$NETPARM.TCTX_ID;
      798     9438
      799     9439    3            IF LDCT$ ~= ADDR(NIL)
      800     9440    4            THEN DO;
      801     9441    4                 KN$LDCT.CONN_TYPE = LDCT$->KN$LDCT.CONN_TYPE;
      802     9442    4                 KN$LDCT.USER_ENTRY$ = LDCT$->KN$LDCT.USER_ENTRY$; /*usually kna$in*/
      803     9443    4                 KN$LDCT.USER# = LDCT$->KN$LDCT.USER#;
      804     9444    4                 KN$LDCT.UID = LDCT$->KN$LDCT.UID;
      805     9445    4                 END;
      806     9446    4            ELSE DO;
      807     9447    4                 KN$LDCT.CONN_TYPE = %KN_CNTYPE_SESS;
      808     9448    4                 KN$LDCT.USER_ENTRY$ = ENTADDR(KNH$SEND);
      809     9449    4                 KN$LDCT.USER# = 1;
      810     9450    4                 END;
      811     9451
      812     9452        /* If this is not local turnaround point to UHDR$.
      813     9453        */
      814     9454    3            IF LOCAL_TURNAROUND = 0
      815     9455    4            THEN DO;
      816     9456    4                 KN$NETPARM.UHDR$ = PINCRC(KN$NETPARM.SHDR$,SIZEC(K$SQDP_INIT));
      817     9457    4                 KN$NETPARM.UHDRSZ = K$SQDP_INIT.DATA_HDR.LENGTH;
      818     9458    4                 KN$NETPARM.RECTYPE = K$SQDP_INIT.DATA_HDR.TYPE;
      819     9459    4                 END;
      820     9460
      821     9461        /* Build the fpt_connect to pass to the kna routine.
      822     9462        */
      823     9463
      824     9464    3            FPT$CONNECT='0'B;
      825     9465    3            FPT$CONNECT.RESOURCE = K$SQDP_INIT.RESOURCE;
      826     9466    3            FPT$CONNECT.TERMINAL_ID = K$SQDP_INIT.TERMINAL_ID;
      827     9467    3            FPT$CONNECT.SPEED = K$SQDP_INIT.TERMINAL_SPEED;
      828     9468    3            FPT$CONNECT.RLCID = KN$LDCT.RLCID;
      829     9469    3            FPT$CONNECT.USER.SYSID = K$SQDP_INIT.SYSID;
      830     9470
      831     9471    3            KN$NETPARM.FUNCTION = %KN_FCN_INIT;
      832     9472    3            KN$NETPARM.FPT$ = ADDR(FPT$CONNECT);
      833     9473
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:28   
      834     9474    3            IF KN$LDCT.USER_ENTRY$ ~= ENTADDR(NIL)
      835     9475    3            THEN CALL KN$LDCT.USER_ENTRY$ (KN$NETPARM)
      836     9476    4                 WHENALTRETURN DO;
      837     9477    4                      CALL KNA$RLSLDCT (KN$NETPARM.LDCT$);
      838     9478    4                      KN$NETPARM.LDCT$ = SAVE_LDCT$;
      839     9479
      840     9480    4                      IF LOCAL_TURNAROUND = 0
      841     9481    4                      THEN ALTRETURN;
      842     9482    4                      ELSE GOTO NOT_READY_YET;
      843     9483    4                      END;
      844     9484
      845     9485
      846     9486        %EJECT;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:29   
      847     9487        /*F* NAME: KNS$RECV - Function KN_FCN_DATA and Type Initate Ack
      848     9488
      849     9489        If the state of the LDCT is not waiting ack from remote, we screech.
      850     9490
      851     9491        If this is not an entry from KNS$SEND, the user data header info in
      852     9492        KN$NETPARM are updated to reflect the stripping off of the session
      853     9493        header.
      854     9494
      855     9495        If the reason code in the header is not zero, this is a NAK instead
      856     9496        of an ACK; the state of the LDCT is set to null.  If this is truly an
      857     9497        ACK the state of the LDCT is set to active.
      858     9498
      859     9499        A call is then made to LDCT.USER_ENTRY$ with KN$NETPARM.FUNCTION set
      860     9500        to INIT_ACK and KN$NETPARM.FPT$ set to locate the reason code from the
      861     9501        Initiate Acknowledegment message.
      862     9502
      863     9503        */
      864     9504    3          CASE (%K_SQDP_INIT_ACK);         /* Initiate connection ack            */
      865     9505
      866     9506
      867     9507    3            IF KN$LDCT.STATE ~= %KN_ST_WIAFR
      868     9508    3            THEN CALL LDCT_SCREECH;
      869     9509
      870     9510        /* Save dest sid in the ldct.
      871     9511        */
      872     9512    3            KN$LDCT.RLCID = K$SQDP_INIT_ACK.RLCID;
      873     9513
      874     9514    3            IF LOCAL_TURNAROUND = 0
      875     9515    4            THEN DO;
      876     9516    4                 KN$NETPARM.UHDR$ = PINCRC(KN$NETPARM.SHDR$,SIZEC(K$SQDP_INIT_ACK));
      877     9517    4                 KN$NETPARM.UHDRSZ = K$SQDP_INIT_ACK.DATA_HDR.LENGTH;
      878     9518    4                 END;
      879     9519
      880     9520    3            IF K$SQDP_INIT_ACK.REASON = 0
      881     9521    3            THEN KN$LDCT.STATE = %KN_ST_ACTIVE;
      882     9522    3            ELSE KN$LDCT.STATE = %KN_ST_NULL; /*shouldnt it be released too?     */
      883     9523
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:30   
      884     9524    3            KN$LDCT.RESCOD = K$SQDP_INIT_ACK.RESCODE;
      885     9525    3            KN$NETPARM.RECTYPE = K$SQDP_INIT_ACK.DATA_HDR.TYPE;
      886     9526    3            KN$NETPARM.FUNCTION = %KN_FCN_INIT_ACK;
      887     9527    3            KN$NETPARM.FPT$ = ADDR(K$SQDP_INIT_ACK.REASON);
      888     9528
      889     9529    3            IF KN$LDCT.USER_ENTRY$ ~= ENTADDR(NIL)
      890     9530    3            THEN CALL KN$LDCT.USER_ENTRY$ (KN$NETPARM)
      891     9531    4                 WHENALTRETURN DO;
      892     9532    4                      KN$LDCT.STATE = %KN_ST_WIAFR;
      893     9533    4                      ALTRETURN;
      894     9534    4                      END;
      895     9535
      896     9536
      897     9537        %EJECT;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:31   
      898     9538        /*F* NAME: KNS$RECV - Function KN_FCN_DATA and Type Terminate Request.
      899     9539
      900     9540        If the state of the LDCT is not active or waiting term ack from remote,
      901     9541        we screech.
      902     9542
      903     9543        The FPT_TERM that has been passed to us is updated with the information
      904     9544        from the session header.
      905     9545
      906     9546        If this is not an entry from KNS$SEND, the user data header info in
      907     9547        KN$NETPARM are updated to reflect the stripping off of the session
      908     9548        header.
      909     9549
      910     9550        A call is then made to LDCT.USER_ENTRY$ with KN$NETPARM.FUNCTION set to
      911     9551        TERM.
      912     9552        On return the LDCT state is set to waiting term ack from local.
      913     9553
      914     9554        */
      915     9555
      916     9556    3          CASE (%K_SQDP_TERM);             /* Terminate connection               */
      917     9557
      918     9558    3            IF KN$LDCT.STATE ~= %KN_ST_ACTIVE AND
      919     9559    3              KN$LDCT.STATE ~= %KN_ST_WTAFR/*waiting term ack from remote*/
      920     9560    3            THEN CALL LDCT_SCREECH;
      921     9561
      922     9562    3            FPT$TERM = '0'B;
      923     9563    3            FPT$TERM.RLCID = K$SQDP_TERM.RLCID;
      924     9564    3            FPT$TERM.REASON = K$SQDP_TERM.REASON;
      925     9565
      926     9566        /* If this is not local turnaround point to UHDR$.
      927     9567        */
      928     9568    3            IF LOCAL_TURNAROUND = 0
      929     9569    4            THEN DO;
      930     9570    4                 KN$NETPARM.UHDR$ = PINCRC(KN$NETPARM.SHDR$,SIZEC(K$SQDP_TERM));
      931     9571    4                 KN$NETPARM.UHDRSZ = K$SQDP_TERM.DATA_HDR.LENGTH;
      932     9572    4                 KN$NETPARM.RECTYPE = K$SQDP_TERM.DATA_HDR.TYPE;
      933     9573    4                 END;
      934     9574
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:32   
      935     9575    3            IF KN$LDCT.USER_ENTRY$ ~= ENTADDR(NIL)
      936     9576    3            THEN IF KN$LDCT.STATE = %KN_ST_WTAFR
      937     9577    4                 THEN DO;
      938     9578    4                      KN$NETPARM.FUNCTION = %KN_FCN_TERM_ACK;
      939     9579    4                      CALL KN$LDCT.USER_ENTRY$(KN$NETPARM) ALTRET(DO_ALTRT);
      940     9580    4                      END;
      941     9581
      942     9582    4                 ELSE DO;
      943     9583    4                      KN$NETPARM.FUNCTION = %KN_FCN_TERM;
      944     9584    4                      KN$NETPARM.FPT$ = ADDR(FPT$TERM);
      945     9585    4                      CALL KN$LDCT.USER_ENTRY$(KN$NETPARM) ALTRET(DO_ALTRT);
      946     9586    4                      KN$LDCT.STATE = %KN_ST_WTAFL;
      947     9587    4                      END;
      948     9588
      949     9589    3            END/*do case(data_hdr.type)*/;
      950     9590        %EJECT;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:33   
      951     9591
      952     9592        /*F* NAME: KNS$RECV - Function KN_FCN_TERM
      953     9593
      954     9594        An LDCT is allocated in case we need to wait for CQ space.
      955     9595        USER_ENTRY$ in this LDCT is set to the address of KNS$TERM and
      956     9596        RLCID.NODE is set to the number of the node that has gone down.
      957     9597
      958     9598        We then run through all the currently allocated APE, SSN and/or QDP LDCTs
      959     9599        looking for those whose RLCID.NODE matches that of the terminating node.
      960     9600        If any are found with the LDCT state of active, waiting init ack from remote,
      961     9601        or waiting term ack from remote the routine in USER_ENTRY$ is called.
      962     9602        */
      963     9603    2       CASE (%KN_FCN_TERM);
      964     9604
      965     9605    2         FPT$TERM.REASON = %KN_TERM_REASON_NTRNSPRT;
      966     9606
      967     9607    2         CALL KNA$GETLDCT(KN$NETPARM.LDCT$);
      968     9608
      969     9609    2         KN$NETPARM.LDCT$->KN$LDCT.RLCID.NODE = KN$NETPARM.NODE;
      970     9610    2         KN$NETPARM.LDCT$->KN$LDCT.USER_ENTRY$ = ENTADDR(KNS$TERM);
      971     9611
      972     9612    2   TERM: ;
      973     9613    2         KN$NETPARM.SLDCT$ = KN$NETPARM.LDCT$;
      974     9614
      975     9615    3         DO TEMP = 1 TO KN_LDCT_MAX#;
      976     9616    3              KN$NETPARM.LDCT$ = KN$DCT$(TEMP);
      977     9617
      978     9618    3              IF KN$DCT$(TEMP) ~= ADDR(NIL)
      979     9619    3              THEN IF KN$LDCT.RLCID.NODE = KN$NETPARM.SLDCT$->KN$LDCT.RLCID.NODE
      980     9620    3                   THEN IF ( (KN$LDCT.CONN_TYPE = %KN_CNTYPE_SESS
      981     9621    3                          OR KN$LDCT.CONN_TYPE = %KN_CNTYPE_APE)
      982     9622    3                          AND KN$NETPARM.TCTX_ID = KN$LDCT.TRANSPORT_ID )
      983     9623    3                          OR KN$LDCT.CONN_TYPE = %KN_CNTYPE_QDP
      984     9624    4                        THEN DO;
      985     9625    4                             FPT$TERM.RLCID = '0'B;
      986     9626    4                             KN$NETPARM.FPT$ = ADDR(FPT$TERM);
      987     9627
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:34   
      988     9628    5                             DO CASE (KN$LDCT.STATE);
      989     9629    5                              CASE (%KN_ST_NULL,%KN_ST_WTAFLNT);
      990     9630
      991     9631    5                              CASE (%KN_ST_ACTIVE);
      992     9632    5                                KN$NETPARM.FUNCTION = %KN_FCN_TERM;
      993     9633    5                                CALL KN$LDCT.USER_ENTRY$ (KN$NETPARM);
      994     9634    5                                KN$LDCT.STATE = %KN_ST_WTAFLNT;
      995     9635
      996     9636    5                              CASE (%KN_ST_WIAFR);
      997     9637    5                                KN$NETPARM.FUNCTION = %KN_FCN_INIT_ACK;
      998     9638    5                                KN$NETPARM.FPT$ = ADDR(FPT_NAK_NOROUTE);
      999     9639    5                                CALL KN$LDCT.USER_ENTRY$ (KN$NETPARM);
     1000     9640
     1001     9641    5                              CASE (%KN_ST_WTAFR);
     1002     9642    5                                KN$NETPARM.FUNCTION = %KN_FCN_TERM_ACK;
     1003     9643    5                                CALL KN$LDCT.USER_ENTRY$(KN$NETPARM);
     1004     9644
     1005     9645    5                              CASE (%KN_ST_WTAFL);
     1006     9646    5                                KN$LDCT.STATE = %KN_ST_WTAFLNT;
     1007     9647
     1008     9648    5                              CASE (%KN_ST_WIAFL);
     1009     9649    5                                KN$LDCT.STATE = %KN_ST_WTIAFLNT;
     1010     9650
     1011     9651    5                                END/*do case(ldct.state)*/;
     1012     9652    4                             END;
     1013     9653    3              END/*run through all the ldcts*/;
     1014     9654
     1015     9655    2         CALL KNA$RLSLDCT(KN$NETPARM.SLDCT$);
     1016     9656    2         RETURN;
     1017     9657
     1018     9658        %EJECT;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:35   
     1019     9659    2       CASE (ELSE);
     1020     9660    2         CALL BADFNC_SCREECH;
     1021     9661
     1022     9662    2         END/*do case(function)*/;
     1023     9663        %EJECT;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:36   
     1024     9664    1      IF LOCAL_TURNAROUND = 0 THEN RETURN;
     1025     9665
     1026     9666    1      KN$NETPARM.LDCT$ = SAVE_LDCT$;
     1027     9667
     1028     9668    1      IF LOCAL_TURNAROUND = %KN_FCN_DATA THEN GOTO DATA_RETURN;
     1029     9669
     1030     9670    1      IF LOCAL_TURNAROUND = %KN_FCN_INIT THEN GOTO INIT_RETURN;
     1031     9671
     1032     9672    1      IF LOCAL_TURNAROUND = %KN_FCN_INIT_ACK THEN GOTO INIT_ACK_RETURN;
     1033     9673
     1034     9674    1      IF LOCAL_TURNAROUND = %KN_FCN_TERM THEN GOTO TERM_RETURN;
     1035     9675
     1036     9676    1      IF LOCAL_TURNAROUND = %KN_FCN_TERM_ACK THEN GOTO TERM_ACK_RETURN;
     1037     9677
     1038     9678    1      CALL PRTCL_SCREECH;             /*local turnaround is somehow screwed up*/
     1039     9679        %EJECT;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:37   
     1040     9680        /* * NAME: KNS$TERM
     1041     9681
     1042     9682        The KNS$TERM entry point is set in the LDCT.USER_ENTRY$ of an LDCT
     1043     9683        that is allocated in the beginning of the logic to terminate all
     1044     9684        session connections whose other endpoint is on a node that has
     1045     9685        terminated.  Refer to KNS$RECV - Function KN_FCN_TERM.
     1046     9686        */
     1047     9687
     1048     9688    1   KNS$TERM: ENTRY(KN$NETPARM) ALTRET;
     1049     9689    1      GOTO TERM;
     1050     9690
     1051     9691        %EJECT;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:38   
     1052     9692
     1053     9693    1   LDCT_SCREECH: PROC;
     1054     9694    2      KNS_SSN_SCREECH_COUNT = KNS_SSN_SCREECH_COUNT +1;
     1055     9695
     1056     9696    2      IF KNS_SSN_SCREECH ~= 0
     1057     9697    3      THEN DO;
     1058     9698    3           CALL SCREECH(ILSTTRAN);
     1059     9699    3           END;
     1060     9700
     1061     9701        /*S* SCREECH_CODE: KNS-S$ILSTRAN
     1062     9702             TYPE: SCREECH
     1063     9703             MESSAGE: Illegal state transition.
     1064     9704        */
     1065     9705    2   END LDCT_SCREECH;
     1066     9706
     1067     9707
     1068     9708
     1069     9709    1   PRTCL_SCREECH: PROC;
     1070     9710    2      KNS_SSN_SCREECH_COUNT = KNS_SSN_SCREECH_COUNT +1;
     1071     9711
     1072     9712    2      IF KNS_SSN_SCREECH ~= 0
     1073     9713    3      THEN DO;
     1074     9714    3           CALL SCREECH(PRTCLERR);
     1075     9715    3           END;
     1076     9716
     1077     9717        /*S* SCREECH_CODE: KNS-S$PRTCLERR
     1078     9718             TYPE: SCREECH
     1079     9719             MESSAGE: Session QDP Protocol Error.
     1080     9720        */
     1081     9721    2   END PRTCL_SCREECH;
     1082     9722
     1083     9723    1   BADFNC_SCREECH: PROC;
     1084     9724    2      CALL SCREECH(BADFNC);
     1085     9725
     1086     9726        /*S* SCREECH_CODE: KNS-S$BADFNC
     1087     9727             TYPE: SCREECH
     1088     9728             MESSAGE: Bad function passed to Session
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:39   
     1089     9729        */
     1090     9730    2   END BADFNC_SCREECH;
     1091     9731    1   END KNS$SEND;

PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:40   
--  Include file information  --

   K_REASON_C.:E05TOU  is referenced.
   K_RLCID_M.:E05TOU  is referenced.
   K_QDPHDRS_M.:E05TOU  is referenced.
   KNH_MACRO_C.:E05TOU  is referenced.
   KNN_NETWORK_M.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   KN_DATA_M.:E05TOU  is referenced.
   K_SCODE_C.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
      No diagnostics issued in procedure KNS$SEND.

   Procedure KNS$SEND requires 1832 words for executable code.
   Procedure KNS$SEND requires 74 words of local(AUTO) storage.

    No errors detected in file KNS$SESSION.:E05TSI    .

PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:41   

 Object Unit name= KNS$SEND                                   File name= KNS$SESSION.:E05TOU
 UTS= JUL 30 '97 01:07:43.84 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Data  even  none     4      4  KNS$SEND
    1  RoData even  UTS     24     18  KNS$SEND
    2   Proc  even  none  1832    728  KNS$SEND
    3  RoData even  none     8      8  KNS$SEND

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        1  KNS$SEND
     2    331          yes     yes      Std        1  KNS$RECV
     2    6E4          yes     yes      Std        1  KNS$TERM

  ****  Data defs  ****

 Sect HexLoc  Name                           Sect HexLoc  Name
    0      0  KNS_SSN_SCREECH                    0      1  KNS_SSN_SCREECH_COUNT
    0      2  KNS_SPEAK_SHDRSZ                   0      3  KNS_RPEAK_SHDRSZ
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:42   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 KNN$SEND
 yes     yes           Std       1 KNT$SEND
 yes     yes           Std       1 KNA$LOCATE_TCTX
 yes     yes           Std       1 KNH$SEND
 yes     yes           Std       1 KNA$GETLDCT
 yes     yes           Std       1 KNA$RLSLDCT
         yes           Std       1 SCREECH
 yes     yes           Std       1 KNS$TERM
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_AALT
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KN_LDCT_MAX#                          KN_DCT$$                              KNN_ROUTE$$
     KN_NODE#                              KN_NODE_BIN                           KNT_DEFAULT_CHKSUM
     KNT_DEFAULT_EXTENDED                  KNT_DEFAULT_CLASS                     KNT_DEFAULT_QOS
r    G$ROS$
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:43   


        1        1        /*M* KNS$SESSION - Session Services on the Fep    */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=3,IND=5,ENU=0,ECU=0,CRM=80   */
        8        8
        9        9        /*F* NAME: KNS$SESSION
       10       10
       11       11        This module contains the procedures to support the FEP CP-6 session
       12       12        connections: local session connections, FEP to FEP session connctions,
       13       13        and connections between FEPs and hosts.  The procedures include
       14       14        the following:
       15       15
       16       16            KNS$SEND - Send outgoing message
       17       17            KNS$RECV - Receive incoming message
       18       18            KNS$TERM - Terminate CP-6 session connections
       19       19        */
       20       20
       21       21        %EJECT;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:44   
       22       22
       23       23        KNS$SEND: PROC (KN$NETPARM) ALTRET;

     23   2 000000  D380 0000 0000  xent KNS$SEND        LNJ,B5   X6A_AUTO_1
          2 000003       004A 0001                       DC       74,1

       24       24
       25       25                                                /* Include files                      */
       26       26        %INCLUDE GU_LCP6_M;
       27      954        %INCLUDE KI_CP6;
       28     2050        %INCLUDE K_SCODE_C;
       29     2135        %INCLUDE KN_DATA_M;
       30     3921        %INCLUDE K_ADDRESS_M;
       31     4424        %INCLUDE KNN_NETWORK_M;
       32     4787        %INCLUDE KNH_MACRO_C;
       33     5070        %INCLUDE K_QDPHDRS_M;
       34     5952        %INCLUDE K_RLCID_M;
       35     6056        %INCLUDE K_REASON_C;
       36     6082
       37     6083                                                /* Parameter definitions              */
       38     6084        %KN$NETPARM;
       39     6237
       40     6238                                                /* Based structures                   */
       41     6239        %FPT_CONNECT (STCLASS="BASED(KN$NETPARM.FPT$)");
       42     6308        %FPT_TERM (STCLASS="BASED(KN$NETPARM.FPT$)");
       43     6330        %FPT_CONNECT_ACK (STCLASS="BASED(KN$NETPARM.FPT$)");
       44     6379
       45     6380        %KN$LDCT (STCLASS="BASED(KN$NETPARM.LDCT$)");
       46     6625        %KN$DCT$;
       47     6628
       48     6629        %K$SQDP_INIT (STCLASS="BASED(KN$NETPARM.SHDR$)");
       49     6993        %K$SQDP_INIT_ACK (STCLASS="BASED(KN$NETPARM.SHDR$)");
       50     7286        %K$SQDP_TERM (STCLASS="BASED(KN$NETPARM.SHDR$)");
       51     7564        %K$SQDP_DATA (STCLASS="BASED(KN$NETPARM.SHDR$)");
       52     7691
       53     7692    1   DCL KNN$ROUTE$(0:0) PTR BASED(KNN_ROUTE$$);
       54     7693        %KNN$ROUTE (STCLASS="BASED(ROUTE$)");
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:45   
       55     7765        %KNN$LINK (STCLASS="BASED(LINK$)");
       56     8016
       57     8017                                                /* External Data                      */
       58     8018    1   DCL KN_LDCT_MAX# UBIN SYMREF;
       59     8019    1   DCL KN_DCT$$ PTR SYMREF;
       60     8020    1   DCL KNN_ROUTE$$ PTR SYMREF;
       61     8021    1   DCL KN_NODE# UBIN SYMREF;
       62     8022    1   DCL 1 KN_NODE_BIN SYMREF,
       63     8023    1         2 * CHAR(4),
       64     8024    1         2 FEX CHAR(4);
       65     8025    1   DCL KN_NODE_TEXT REDEF KN_NODE_BIN CHAR(8);
       66     8026
       67     8027    1   DCL KNT_DEFAULT_CHKSUM UBIN SYMREF;
       68     8028    1   DCL KNT_DEFAULT_EXTENDED UBIN SYMREF;
       69     8029    1   DCL KNT_DEFAULT_CLASS UBIN SYMREF;
       70     8030    1   DCL KNT_DEFAULT_QOS UBIN SYMREF;
       71     8031
       72     8032                                                /* Internal Data                      */
       73     8033    1   DCL KNS_SSN_SCREECH UBIN STATIC SYMDEF INIT(1); /*set non-zero to cause screech*/
       74     8034    1   DCL KNS_SSN_SCREECH_COUNT UBIN STATIC SYMDEF INIT(0);
       75     8035
       76     8036    1   DCL KNS_SPEAK_SHDRSZ UBIN STATIC SYMDEF INIT(0); /*largest PPDU sent          */
       77     8037    1   DCL KNS_RPEAK_SHDRSZ UBIN STATIC SYMDEF INIT(0); /*largest SPDU received*/
       78     8038
       79     8039        %VLP_SCODE (FPTN=ILSTTRAN,ERR#=%S$ILSTRAN,SEV=G_SEV_SCREECH#,
       80     8040                       STCLASS=CONSTANT,FCG=KN,MID=S,MON='1'B);
       81     8101
       82     8102        %VLP_SCODE (FPTN=BADFNC,ERR#=%S$BADFNC,SEV=G_SEV_SCREECH#,
       83     8103                       STCLASS=CONSTANT,FCG=KN,MID=S,MON='1'B);
       84     8164
       85     8165        %VLP_SCODE (FPTN=PRTCLERR,ERR#=%S$PRTCLERR,SEV=G_SEV_SCREECH#,
       86     8166                       STCLASS=CONSTANT,FCG=KN,MID=S,MON='1'B);
       87     8227
       88     8228        %FPT_CONNECT_ACK (FPTN=FPT_NAK_NOROUTE, STCLASS=CONSTANT, REASON=%K_REASON_NORTE);
       89     8277
       90     8278                                                /* Entry point references             */
       91     8279    1   DCL KNA$GETLDCT ENTRY(1) ALTRET;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:46   
       92     8280    1   DCL KNA$RLSLDCT ENTRY(1) ALTRET;
       93     8281    1   DCL KNA$LOCATE_TCTX ENTRY(1) ALTRET;
       94     8282    1   DCL KNH$SEND ENTRY(1) ALTRET;
       95     8283    1   DCL KNN$SEND ENTRY(1) ALTRET;
       96     8284    1   DCL KNT$SEND ENTRY(1) ALTRET;
       97     8285    1   DCL SCREECH ENTRY(1);
       98     8286
       99     8287                                                /* Auto storage                       */
      100     8288    1   DCL FUNCTION UBIN;
      101     8289    1   DCL SEND_ENTRY$ EPTR;
      102     8290    1   DCL LDCT$ PTR;
      103     8291    1   DCL LDCTX UBIN;
      104     8292    1   DCL LOCAL_TURNAROUND SBIN;              /* Not zero if true                   */
      105     8293    1   DCL SQDP_TYPE UBIN;
      106     8294
      107     8295                                                /* Storage for the session header     */
      108     8296        %K$SQDP_INIT (NAME=HDR, STCLASS=AUTO);
      109     8660        %FPT_TERM (FPTN=FPT$TERM, STCLASS="AUTO");
      110     8682        %FPT_CONNECT (FPTN=FPT$CONNECT,STCLASS="");
      111     8751
      112     8752    1   DCL TEMP SBIN AUTO;
      113     8753    1   DCL SAVE_LDCT$ PTR AUTO;
      114     8754    1   DCL LDCT_LNK$ PTR AUTO;
      115     8755
      116     8756    1   DCL ROUTE$ PTR;
      117     8757    1   DCL LINK$ PTR;
      118     8758
      119     8759        %EJECT;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:47   
      120     8760        /*F* NAME: KNS$SEND
      121     8761
      122     8762        KNS$SEND is called with the KN$NETPARM parameter, which contains:
      123     8763
      124     8764        .fif
      125     8765        }    FUNCTION    - The function to be performed.  This will be one of the
      126     8766        }                  folowing EQUed values from the file KNH_MACRO_M:
      127     8767        }
      128     8768        }                      KN_FCN_DATA
      129     8769        }                      KN_FCN_INIT
      130     8770        }                      KN_FCN_INIT_ACK
      131     8771        }                      KN_FCN_TERM
      132     8772        }                      KN_FCN_TERM_ACK
      133     8773        }
      134     8774        }    FPT$        - The FPT associated with the request.  The format
      135     8775        }                  of the FPT is determined by the value of FUNCTION.
      136     8776        }
      137     8777        .fin
      138     8778
      139     8779        KNS$SEND will map the function to a particular session message
      140     8780        type, build the header, frame it in KN$NETPARM, and forward the
      141     8781        message.
      142     8782
      143     8783        Any special action taken by KNS$SEND is determined by the FUNCTION
      144     8784        code, and will be described below.
      145     8785        */
      146     8786
      147     8787    1      FUNCTION = KN$NETPARM.FUNCTION;

   8787   2 000005  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          2 000007  E846 0014                            LDR,R6   20,B6
          2 000009  EF47 0006                            STR,R6   FUNCTION,AUTO

      148     8788
      149     8789    1      KN$NETPARM.ERRCODE = 0;

   8789   2 00000B  8746 0016                            CL       22,B6
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:48   

      150     8790
      151     8791    1      IF FUNCTION ~= %KN_FCN_INIT

   8791   2 00000D  6D01                                 CMV,R6   1
          2 00000E  0901 0004                            BE       s:8794,PREL

      152     8792    1      THEN KN$NETPARM.FUNCTION = %KN_FCN_DATA;

   8792   2 000010  6C05                                 LDV,R6   5
          2 000011  EF46 0014                            STR,R6   20,B6

      153     8793
      154     8794    1      KN$NETPARM.NODE = KN$LDCT.RLCID.NODE;

   8794   2 000013  DC86                                 LDB,B5   ,B6
          2 000014  D2C5 0001                            LLH,R5   1,B5
          2 000016  DF46 0015                            STR,R5   21,B6

      155     8795
      156     8796    1      IF KN$LDCT.CONN_TYPE = %KN_CNTYPE_QDP

   8796   2 000018  C285                                 LLH,R4   ,B5
          2 000019  4D05                                 CMV,R4   5
          2 00001A  0981 0008                            BNE      s:8801,PREL

      157     8797    2      THEN DO;

      158     8798    2           SEND_ENTRY$ = ENTADDR(KNN$SEND);

   8798   2 00001C  CB80 0000 0000  xent                 LAB,B4   KNN$SEND
          2 00001F  CFC7 0007                            STB,B4   SEND_ENTRY$,AUTO

      159     8799    2           END;

   8799   2 000021  0F81 000A                            B        s:8805,PREL

PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:49   
      160     8800    2      ELSE DO;

      161     8801    2           SEND_ENTRY$ = ENTADDR(KNT$SEND);

   8801   2 000023  CB80 0000 0000  xent                 LAB,B4   KNT$SEND
          2 000026  CFC7 0007                            STB,B4   SEND_ENTRY$,AUTO

      162     8802    2           KN$NETPARM.TCTX_ID = KN$LDCT.TRANSPORT_ID;

   8802   2 000028  B845 0003                            LDR,R3   3,B5
          2 00002A  BF46 0011                            STR,R3   17,B6

      163     8803    2           END;

      164     8804
      165     8805    1      LOCAL_TURNAROUND = FUNCTION;

   8805   2 00002C  C847 0006                            LDR,R4   FUNCTION,AUTO
          2 00002E  CF47 000C                            STR,R4   LOCAL_TURNAROUND,AUTO

      166     8806
      167     8807    1      IF FUNCTION = %KN_FCN_DATA

   8807   2 000030  4D05                                 CMV,R4   5
          2 000031  0901 0161                            BE       s:8976,PREL

      168     8808    1      THEN GOTO SEND_DATA;
      169     8809
      170     8810    2      DO CASE(FUNCTION);

   8810   2 000033  B854                                 LDR,R3   R4
          2 000034  3D06                                 CMV,R3   6
          2 000035  0281 02F5                            BGE      s:9229,PREL
          2 000037  A830 0000 003D  02                   LDR,R2   s:8810+10,R3
          2 00003A  83A0 0000 0043  02                   JMP      s:8853,R2
          2 00003D       02E8                            DC       s:9229,PREL
          2 00003E       0000                            DC       s:8853,PREL
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:50   
          2 00003F       020B                            DC       s:9117,PREL
          2 000040       01A6                            DC       s:9040,PREL
          2 000041       02A1                            DC       s:9192,PREL
          2 000042       0150                            DC       s:8976,PREL

      171     8811
      172     8812        %EJECT;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:51   
      173     8813        /*F* NAME: KNS$SEND - Function KN_FCN_INIT
      174     8814
      175     8815        KNS$SEND is called with FUNCTION set to KN_FCN_INIT from
      176     8816        the following routines:
      177     8817
      178     8818        .fif
      179     8819        }    KNA$OPEN
      180     8820        }    KNH$SCAN
      181     8821        }    KNB$INIT
      182     8822        .fin
      183     8823
      184     8824        KN$NETPARM.LDCT$ will contain the address of LDCT associated
      185     8825        with the end point requesting the connection.
      186     8826
      187     8827        The FPT that is passed is of the format generated by the
      188     8828        FPT_CONNECT macro in file KNH_MACRO_C.
      189     8829
      190     8830        An initiate session header is built in auto with the
      191     8831        information from the LDCT and FPT_CONNECT.
      192     8832
      193     8833        When the other end-point is not on the node as that requesting the
      194     8834        connection we first make sure that a link connection to the requested
      195     8835        node does exist.  If the link is up, and that link is over the COUPLER,
      196     8836        the type of connection is changed from APE or SSN to QDP.  Otherwise,
      197     8837        a class 4 transport connection will be initiated if there isn't
      198     8838        already one to the same node with the same QOS, etc.
      199     8839
      200     8840        If the other end-point is on the same fep, we branch directly to
      201     8841        the code in KNS$RECV that processes incoming data functions.
      202     8842        When not on this fep, the request is passed down through the layers
      203     8843        through KNT$SEND, or through KNN$SEND if this is a QDP connection.
      204     8844
      205     8845        On return, the LDCT state is set to waiting init ack from remote and
      206     8846        session returns to the calling routine.
      207     8847        */
      208     8848
      209     8849    2       CASE (%KN_FCN_INIT);                /* Initiate a session connecton       */
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:52   

      210     8850
      211     8851        /* Check to see if this is legal for this state.
      212     8852        */
      213     8853    2         IF KN$LDCT.STATE ~= %KN_ST_NULL

   8853   2 000043  8285                                 LB,'00FF'X        ,B5
   8853   2 000044       00FF
          2 000045  0581 0007                            BBF      s:8859,PREL

      214     8854    3         THEN DO;

      215     8855    3              KN$NETPARM.ERRCODE = %KN_ERR_INVFCN;

   8855   2 000047  1C02                                 LDV,R1   2
          2 000048  9F46 0016                            STR,R1   22,B6

      216     8856    3              ALTRETURN;

   8856   2 00004A  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      217     8857    3              END;
      218     8858
      219     8859    2         KN$LDCT.RLCID = FPT_CONNECT.RLCID;

   8859   2 00004D  BCC6 0019                            LDB,B3   25,B6
          2 00004F  8CC3 000D                            LDI      13,B3
          2 000051  8D45 0001                            SDI      1,B5

      220     8860
      221     8861        /* Determine if this connection is to be QDP or Tr Class 4
      222     8862        */
      223     8863    2         IF KN$LDCT.RLCID.NODE ~= KN_NODE#

   8863   2 000053  DC86                                 LDB,B5   ,B6
          2 000054  E2C5 0001                            LLH,R6   1,B5
          2 000056  E900 0000 0000  xsym                 CMR,R6   KN_NODE#
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:53   
          2 000059  0901 006A                            BE       s:8900,PREL

      224     8864    3         THEN DO;

      225     8865    3              IF KN_NODE# = 255 THEN GOTO NOT_READY_YET;

   8865   2 00005B  D800 0000 0000  xsym                 LDR,R5   KN_NODE#
          2 00005E  D970 00FF                            CMR,R5   255,IMO
          2 000060  0901 00FE                            BE       s:8929,PREL

      226     8866
      227     8867    3              KN$NETPARM.NODE = KN$LDCT.RLCID.NODE;

   8867   2 000062  EF46 0015                            STR,R6   21,B6

      228     8868    3              ROUTE$ = KNN$ROUTE$(KN$LDCT.RLCID.NODE);

   8868   2 000064  A2C5 0001                            LLH,R2   1,B5
          2 000066  BC80 0000 0000  xsym                 LDB,B3   KNN_ROUTE$$
          2 000069  ACA3                                 LDB,B2   ,B3,R2
          2 00006A  AFC7 0042                            STB,B2   ROUTE$,AUTO

      229     8869    3              LINK$ = KNN$ROUTE.LINK$;

   8869   2 00006C  9C82                                 LDB,B1   ,B2
          2 00006D  9FC7 0044                            STB,B1   LINK$,AUTO

      230     8870
      231     8871    3              IF LINK$=ADDR(NIL) OR KNN$LINK.LDCT$=ADDR(NIL)

   8871   2 00006F  8DC7 0044                            CMN      LINK$,AUTO
          2 000071  0901 00ED                            BE       s:8929,PREL
          2 000073  8D81                                 CMN      ,B1
          2 000074  0901 00EA                            BE       s:8929,PREL

      232     8872    3              THEN GOTO NOT_READY_YET;
      233     8873
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:54   
      234     8874    3              IF KNN$LINK.LDCT$->KN$LDCT.CONN_TYPE = %KN_CNTYPE_LINK

   8874   2 000076  EC81                                 LDB,B6   ,B1
          2 000077  E286                                 LLH,R6   ,B6
          2 000078  6D06                                 CMV,R6   6
          2 000079  0981 0014                            BNE      s:8884,PREL
          2 00007B  A842 0005                            LDR,R2   5,B2
          2 00007D  2D01                                 CMV,R2   1
          2 00007E  0981 000F                            BNE      s:8884,PREL

      235     8875    3                AND KNN$ROUTE.CURRENT_QOS = 1
      236     8876    4              THEN DO/*coupler QDP link*/;

      237     8877    4   SETUP_QDP:      ;

   8877   2                              SETUP_QDP       null
      238     8878    4                   KN$LDCT.CONN_TYPE = %KN_CNTYPE_QDP;

   8878   2 000080  DCC7 0004            SETUP_QDP       LDB,B5   @KN$NETPARM,AUTO
          2 000082  EC85                                 LDB,B6   ,B5
          2 000083  6C05                                 LDV,R6   5
          2 000084  E786                                 STH,R6   ,B6

      239     8879    4                   SEND_ENTRY$ = ENTADDR(KNN$SEND);

   8879   2 000085  EB80 0000 0000  xent                 LAB,B6   KNN$SEND
          2 000088  EFC7 0007                            STB,B6   SEND_ENTRY$,AUTO

      240     8880    4                   KN$NETPARM.FUNCTION = %KN_FCN_DATA;

   8880   2 00008A  EF45 0014                            STR,R6   20,B5

      241     8881    4                   END;

   8881   2 00008C  0F81 0037                            B        s:8900,PREL

      242     8882
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:55   
      243     8883    4              ELSE DO/*hdlcx.25 class4 tr link*/;

      244     8884    4                   FPT_CONNECT.TR_FLAGS = '0'B;

   8884   2 00008E  DCC7 0004                            LDB,B5   @KN$NETPARM,AUTO
          2 000090  ECC5 0019                            LDB,B6   25,B5
          2 000092  8746 0012                            CL       18,B6

      245     8885    4                   FPT_CONNECT.CLASS = KNT_DEFAULT_CLASS;

   8885   2 000094  ECC5 0019                            LDB,B6   25,B5
          2 000096  E800 0000 0000  xsym                 LDR,R6   KNT_DEFAULT_CLASS
          2 000099  E7C6 0011                            STH,R6   17,B6

      246     8886    4                   FPT_CONNECT.SERVICE = KNT_DEFAULT_QOS;

   8886   2 00009B  ECC5 0019                            LDB,B6   25,B5
          2 00009D  A800 0000 0000  xsym                 LDR,R2   KNT_DEFAULT_QOS
          2 0000A0  AAC6 0010                            SRM,R2,'00FF'X    16,B6
          2 0000A2       00FF

      247     8887
      248     8888    4                   IF KNT_DEFAULT_CHKSUM ~= 0

   8888   2 0000A3  9800 0000 0000  xsym                 LDR,R1   KNT_DEFAULT_CHKSUM
          2 0000A6  1901 0006                            BEZ,R1   s:8890,PREL

      249     8889    4                   THEN FPT_CONNECT.TR_FLAGS.CHKSUM = '1'B;

   8889   2 0000A8  ECC5 0019                            LDB,B6   25,B5
          2 0000AA  8946 0012                            LBT,'0001'X       18,B6
          2 0000AC       0001

      250     8890    4                   IF KNT_DEFAULT_EXTENDED ~= 0

   8890   2 0000AD  E800 0000 0000  xsym                 LDR,R6   KNT_DEFAULT_EXTENDED
          2 0000B0  6901 0006                            BEZ,R6   s:8893,PREL
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:56   

      251     8891    4                   THEN FPT_CONNECT.TR_FLAGS.EXTENDED = '1'B;

   8891   2 0000B2  ECC5 0019                            LDB,B6   25,B5
          2 0000B4  8946 0012                            LBT,'0004'X       18,B6
          2 0000B6       0004

      252     8892
      253     8893    4                   CALL KNA$LOCATE_TCTX (KN$NETPARM)

   8893   2 0000B7  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          2 0000B9  CBF0 0100                            LAB,B4   256,IMO
          2 0000BB  E380 0000 0000  xent                 LNJ,B6   KNA$LOCATE_TCTX
          2 0000BE       0006                            DC       s:8900,PREL

      254     8894    5                   WHENRETURN DO;

      255     8895    5                        KN$NETPARM.FUNCTION = %KN_FCN_DATA;

   8895   2 0000BF  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          2 0000C1  6C05                                 LDV,R6   5
          2 0000C2  EF46 0014                            STR,R6   20,B6

      256     8896    5                        END;

      257     8897    4                   END/*do if not qdp*/;

      258     8898    3              END/*do if not this node*/;

      259     8899
      260     8900    2         KN$LDCT.STATE = %KN_ST_WIAFR/*wait init ack from remote*/;

   8900   2 0000C4  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          2 0000C6  DC86                                 LDB,B5   ,B6
          2 0000C7  6C01                                 LDV,R6   1
          2 0000C8  EA85                                 SRM,R6,'00FF'X    ,B5
          2 0000C9       00FF
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:57   

      261     8901
      262     8902        /* Build the header.
      263     8903        */
      264     8904    2         KN$NETPARM.SHDR$ = ADDR(HDR);

   8904   2 0000CA  DBC7 000E                            LAB,B5   HDR,AUTO
          2 0000CC  DFC6 0008                            STB,B5   8,B6

      265     8905    2         KN$NETPARM.SHDRSZ = SIZEC(K$SQDP_INIT);

   8905   2 0000CE  5C30                                 LDV,R5   48
          2 0000CF  DF46 000A                            STR,R5   10,B6

      266     8906
      267     8907    2         K$SQDP_INIT.TYPE = %K_SQDP_INIT;

   8907   2 0000D1  EAC5 0001                            SRM,R6,'3FFF'X    1,B5
   8907   2 0000D3       3FFF

      268     8908    2         K$SQDP_INIT.CNTRL = '1'B;

   8908   2 0000D4  DCC6 0008                            LDB,B5   8,B6
          2 0000D6  8945 0001                            LBT,'8000'X       1,B5
          2 0000D8       8000

      269     8909    2         K$SQDP_INIT.LDCT = KN$LDCT.RLCID.LDCTX;

   8909   2 0000D9  DCC6 0008                            LDB,B5   8,B6
          2 0000DB  CC86                                 LDB,B4   ,B6
          2 0000DC  C844 0002                            LDR,R4   2,B4
          2 0000DE  CF05                                 STR,R4   ,B5

      270     8910    2         K$SQDP_INIT.SYSID = FPT_CONNECT.USER.SYSID;

   8910   2 0000DF  DCC6 0008                            LDB,B5   8,B6
          2 0000E1  CCC6 0019                            LDB,B4   25,B6
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:58   
          2 0000E3  C844 000F                            LDR,R4   15,B4
          2 0000E5  CF45 0004                            STR,R4   4,B5

      271     8911    2         K$SQDP_INIT.RLCID.NODE = KN_NODE#;

   8911   2 0000E7  DCC6 0008                            LDB,B5   8,B6
          2 0000E9  C800 0000 0000  xsym                 LDR,R4   KN_NODE#
          2 0000EC  C7C5 0002                            STH,R4   2,B5

      272     8912    2         K$SQDP_INIT.RLCID.GENERATION = KN$LDCT.GENERATION;

   8912   2 0000EE  DCC6 0008                            LDB,B5   8,B6
          2 0000F0  CC86                                 LDB,B4   ,B6
          2 0000F1  B2C4 0004                            LLH,R3   4,B4
          2 0000F3  BAC5 0002                            SRM,R3,'00FF'X    2,B5
          2 0000F5       00FF

      273     8913    2         K$SQDP_INIT.RLCID.LDCTX = KN$LDCT.LDCTX;

   8913   2 0000F6  DCC6 0008                            LDB,B5   8,B6
          2 0000F8  CC86                                 LDB,B4   ,B6
          2 0000F9  B844 0007                            LDR,R3   7,B4
          2 0000FB  BF45 0003                            STR,R3   3,B5

      274     8914    2         K$SQDP_INIT.DEST_GENERATION = KN$LDCT.RLCID.GENERATION;

   8914   2 0000FD  DCC6 0008                            LDB,B5   8,B6
          2 0000FF  CC86                                 LDB,B4   ,B6
          2 000100  B844 0001                            LDR,R3   1,B4
          2 000102  BAC5 0005                            SRM,R3,'00FF'X    5,B5
          2 000104       00FF

      275     8915    2         K$SQDP_INIT.RESOURCE = FPT_CONNECT.RESOURCE;

   8915   2 000105  DCC6 0008                            LDB,B5   8,B6
          2 000107  CCC6 0019                            LDB,B4   25,B6
          2 000109  AB84                                 LAB,B2   ,B4
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:59   
          2 00010A  2C02                                 LDV,R2   2
          2 00010B  6C08                                 LDV,R6   8
          2 00010C  BB85                                 LAB,B3   ,B5
          2 00010D  3C14                                 LDV,R3   20
          2 00010E  0008                                 MMM

      276     8916    2         K$SQDP_INIT.NODE_NAME = KN_NODE_TEXT;

   8916   2 00010F  9CC6 0008                            LDB,B1   8,B6
          2 000111  AB80 0000 0000  xsym                 LAB,B2   KN_NODE_BIN
          2 000114  2C00                                 LDV,R2   0
          2 000115  6C08                                 LDV,R6   8
          2 000116  BB81                                 LAB,B3   ,B1
          2 000117  3C0C                                 LDV,R3   12
          2 000118  0008                                 MMM

      277     8917    2         K$SQDP_INIT.TERMINAL_ID = FPT_CONNECT.TERMINAL_ID;

   8917   2 000119  ACC6 0008                            LDB,B2   8,B6
          2 00011B  DCC6 0019                            LDB,B5   25,B6
          2 00011D  AFC7 0048                            STB,B2   LINK$+4,AUTO
          2 00011F  AB85                                 LAB,B2   ,B5
          2 000120  2C0A                                 LDV,R2   10
          2 000121  6C10                                 LDV,R6   16
          2 000122  BCC7 0048                            LDB,B3   LINK$+4,AUTO
          2 000124  3C1C                                 LDV,R3   28
          2 000125  0008                                 MMM

      278     8918    2         K$SQDP_INIT.TERMINAL_SPEED = FPT_CONNECT.SPEED;

   8918   2 000126  DCC6 0008                            LDB,B5   8,B6
          2 000128  ACC6 0019                            LDB,B2   25,B6
          2 00012A  E2C2 0010                            LLH,R6   16,B2
          2 00012C  E7C5 0005                            STH,R6   5,B5

      279     8919    2         K$SQDP_INIT.DATA_HDR.LENGTH = KN$NETPARM.MSGSZ + KN$NETPARM.UHDRSZ;

PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:60   
   8919   2 00012E  DCC6 0008                            LDB,B5   8,B6
          2 000130  E846 0004                            LDR,R6   4,B6
          2 000132  EA46 0007                            ADD,R6   7,B6
          2 000134  EF45 0017                            STR,R6   23,B5

      280     8920    2         K$SQDP_INIT.DATA_HDR.TYPE = KN$NETPARM.RECTYPE;

   8920   2 000136  DCC6 0008                            LDB,B5   8,B6
          2 000138  E846 0013                            LDR,R6   19,B6
          2 00013A  EF45 0016                            STR,R6   22,B5

      281     8921    2         IF KN$LDCT.CONN_TYPE = %KN_CNTYPE_QDP

   8921   2 00013C  DC86                                 LDB,B5   ,B6
          2 00013D  E285                                 LLH,R6   ,B5
          2 00013E  6D05                                 CMV,R6   5
          2 00013F  0981 0008                            BNE      s:8923,PREL

      282     8922    2         THEN K$SQDP_INIT.QDP = '1'B;

   8922   2 000141  ACC6 0008                            LDB,B2   8,B6
          2 000143  8942 0001                            LBT,'4000'X       1,B2
          2 000145       4000
          2 000146  0F81 0006                            B        s:8925,PREL

      283     8923    2         ELSE K$SQDP_INIT.QDP = '0'B;

   8923   2 000148  ACC6 0008                            LDB,B2   8,B6
          2 00014A  8842 0001                            LBF,'4000'X       1,B2
          2 00014C       4000

      284     8924
      285     8925    2         IF KN$LDCT.RLCID.NODE = KN_NODE#

   8925   2 00014D  DC86                                 LDB,B5   ,B6
          2 00014E  E2C5 0001                            LLH,R6   1,B5
          2 000150  E900 0000 0000  xsym                 CMR,R6   KN_NODE#
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:61   
          2 000153  0901 0207                            BE       s:9291,PREL

      286     8926    2         THEN GOTO RECEIVE_DATA;
      287     8927
      288     8928    2         CALL SEND_ENTRY$(KN$NETPARM)

   8928   2 000155  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          2 000157  9CC7 0007                            LDB,B1   SEND_ENTRY$,AUTO
          2 000159  CBF0 0100                            LAB,B4   256,IMO
          2 00015B  E381                                 LNJ,B6   ,B1
          2 00015C       0003                            DC       s:8929,PREL
          2 00015D  0F81 002C                            B        s:8937,PREL

      289     8929    3         WHENALTRETURN DO;

   8923   2                              NOT_READY_YET   null
      290     8930    3   NOT_READY_YET: ;
      291     8931    3              KN$LDCT.STATE = %KN_ST_NULL;

   8931   2 00015F  ECC7 0004            NOT_READY_YET   LDB,B6   @KN$NETPARM,AUTO
          2 000161  DC86                                 LDB,B5   ,B6
          2 000162  8805                                 LBF,'00FF'X       ,B5
          2 000163       00FF

      292     8932    3              IF KN$NETPARM.ERRCODE = %KN_ERR_NOQ

   8932   2 000164  E846 0016                            LDR,R6   22,B6
          2 000166  6D01                                 CMV,R6   1
          2 000167  0901 0004                            BE       s:8934,PREL
          2 000169  6D07                                 CMV,R6   7
          2 00016A  0981 0004                            BNE      s:8936,PREL

      293     8933    3                OR KN$NETPARM.ERRCODE = %KN_ERR_NOQ2
      294     8934    3              THEN ALTRETURN;

   8934   2 00016C  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:62   
      295     8935
      296     8936    3              KN$NETPARM.FUNCTION = %KN_FCN_INIT_ACK;

   8936   2 00016F  5C02                                 LDV,R5   2
          2 000170  DF46 0014                            STR,R5   20,B6

      297     8937    3              KN$NETPARM.FPT$ = ADDR(FPT_NAK_NOROUTE);

   8937   2 000172  DB80 0000 0009  01                   LAB,B5   FPT_NAK_NOROUTE
          2 000175  DFC6 0019                            STB,B5   25,B6

      298     8938
      299     8939    3              IF KN$LDCT.USER_ENTRY$ ~= ENTADDR(NIL)

   8939   2 000177  CC86                                 LDB,B4   ,B6
          2 000178  BCC4 000C                            LDB,B3   12,B4
          2 00017A  BD80 0000 0000  03                   CMB,B3   0
          2 00017D  0901 0009                            BE       s:8941,PREL

      300     8940    3              THEN CALL KN$LDCT.USER_ENTRY$(KN$NETPARM) ALTRET(DO_ALTRT);

   8940   2 00017F  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          2 000181  9CC4 000C                            LDB,B1   12,B4
          2 000183  CBF0 0100                            LAB,B4   256,IMO
          2 000185  E381                                 LNJ,B6   ,B1
          2 000186       00BC                            DC       s:9073,PREL

      301     8941    3              RETURN;

   8941   2 000187  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

   8937   2                              INIT_RETURN     null
      302     8942    3              END/*ALTRET*/;
      303     8943
      304     8944    2   INIT_RETURN: ;
      305     8945    2         KN$LDCT.STATE = %KN_ST_WIAFR/*wait init ack from remote*/;

PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:63   
   8945   2 00018A  ECC7 0004            INIT_RETURN     LDB,B6   @KN$NETPARM,AUTO
          2 00018C  DC86                                 LDB,B5   ,B6
          2 00018D  6C01                                 LDV,R6   1
          2 00018E  EA85                                 SRM,R6,'00FF'X    ,B5
          2 00018F       00FF

      306     8946    2         RETURN;

   8946   2 000190  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      307     8947
      308     8948        %EJECT;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:64   
      309     8949        /*F* NAME: KNS$SEND - Function KN_FCN_DATA
      310     8950
      311     8951        KNS$SEND is called with FUNCTION set to KN_FCN_DATA from
      312     8952        the following routines:
      313     8953
      314     8954        .fif
      315     8955        }    KNA$FCNO and KNA$FCNOU
      316     8956        }    KNH$SCAN
      317     8957        }    KNB$WRITE
      318     8958        .fin
      319     8959
      320     8960        KN$NETPARM.LDCT$ will contain the address of LDCT associated
      321     8961        with the end point sending the data.
      322     8962
      323     8963        There is not FPT passed on this call.
      324     8964
      325     8965        If the LDCT state is active, we simply build a session data
      326     8966        header and pass the message on down the layers, or if the
      327     8967        other end point is on the same fep, enter the receive data
      328     8968        logic of KNS$RECV.
      329     8969
      330     8970        If we are waiting a term ack from the local we just throw the data
      331     8971        away by returning with no error code.
      332     8972
      333     8973        If the LDCT is in any other state, KNS$SEND will altreturn with
      334     8974        KN$NETPARM.ERRCODE set to KN_ERR_INVFCN.
      335     8975        */
      336     8976    2       CASE (%KN_FCN_DATA);                /* send data                          */

      337     8977
      338     8978    2   SEND_DATA:
      339     8979
      340     8980    2         IF KN$LDCT.STATE = %KN_ST_ACTIVE

   8980   2 000193  B805                 SEND_DATA       LDR,R3   ,B5
          2 000194  B570 00FF                            AND,R3   255,IMO
          2 000196  3D05                                 CMV,R3   5
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:65   
          2 000197  0981 0042                            BNE      s:9005,PREL

      341     8981    3         THEN DO;

      342     8982    3              KN$NETPARM.SHDR$ = ADDR(HDR);

   8982   2 000199  BBC7 000E                            LAB,B3   HDR,AUTO
          2 00019B  BFC6 0008                            STB,B3   8,B6

      343     8983    3              KN$NETPARM.SHDRSZ = SIZEC(K$SQDP_DATA);

   8983   2 00019D  3C06                                 LDV,R3   6
          2 00019E  BF46 000A                            STR,R3   10,B6

      344     8984
      345     8985    3              K$SQDP_DATA.LDCT = KN$LDCT.RLCID.LDCTX;

   8985   2 0001A0  A845 0002                            LDR,R2   2,B5
          2 0001A2  AF03                                 STR,R2   ,B3

      346     8986    3              K$SQDP_DATA.TYPE = %K_SQDP_DATA;

   8986   2 0001A3  DCC6 0008                            LDB,B5   8,B6
          2 0001A5  8845 0001                            LBF,'3FFF'X       1,B5
          2 0001A7       3FFF

      347     8987    3              K$SQDP_DATA.CNTRL = '0'B;

   8987   2 0001A8  DCC6 0008                            LDB,B5   8,B6
          2 0001AA  8845 0001                            LBF,'8000'X       1,B5
          2 0001AC       8000

      348     8988    3              K$SQDP_DATA.LENGTH = KN$NETPARM.MSGSZ + KN$NETPARM.UHDRSZ;

   8988   2 0001AD  DCC6 0008                            LDB,B5   8,B6
          2 0001AF  E846 0004                            LDR,R6   4,B6
          2 0001B1  EA46 0007                            ADD,R6   7,B6
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:66   
          2 0001B3  EF45 0002                            STR,R6   2,B5

      349     8989
      350     8990    3              IF K$SQDP_DATA.LENGTH > KNS_SPEAK_SHDRSZ

   8990   2 0001B5  DCC6 0008                            LDB,B5   8,B6
          2 0001B7  E845 0002                            LDR,R6   2,B5
          2 0001B9  E900 0000 0002  00                   CMR,R6   KNS_SPEAK_SHDRSZ
          2 0001BC  0381 0004                            BLE      s:8993,PREL

      351     8991    3              THEN KNS_SPEAK_SHDRSZ = K$SQDP_DATA.LENGTH;

   8991   2 0001BE  EF00 0000 0002  00                   STR,R6   KNS_SPEAK_SHDRSZ

      352     8992
      353     8993    3              IF KN$LDCT.RLCID.NODE = KN_NODE#

   8993   2 0001C1  BC86                                 LDB,B3   ,B6
          2 0001C2  E2C3 0001                            LLH,R6   1,B3
          2 0001C4  E900 0000 0000  xsym                 CMR,R6   KN_NODE#
          2 0001C7  0981 0008                            BNE      s:8999,PREL

      354     8994    4              THEN DO;

      355     8995    4                   K$SQDP_DATA.TYPE = KN$NETPARM.RECTYPE;

   8995   2 0001C9  D846 0013                            LDR,R5   19,B6
          2 0001CB  DAC5 0001                            SRM,R5,'3FFF'X    1,B5
          2 0001CD       3FFF

      356     8996    4                   GOTO RECEIVE_DATA;

   8996   2 0001CE  0F81 018C                            B        s:9291,PREL

      357     8997    4                   END;
      358     8998
      359     8999    3              CALL SEND_ENTRY$(KN$NETPARM) ALTRET(DO_ALTRT);
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:67   

   8999   2 0001D0  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          2 0001D2  9B84                                 LAB,B1   ,B4
          2 0001D3  CBF0 0100                            LAB,B4   256,IMO
          2 0001D5  E381                                 LNJ,B6   ,B1
          2 0001D6       006C                            DC       s:9073,PREL

   8993   2                              DATA_RETURN     null
      360     9000
      361     9001    3   DATA_RETURN: ;
      362     9002    3              RETURN;

   9002   2 0001D7  C380 0000 0000  xent DATA_RETURN     LNJ,B4   X6A_ARET

      363     9003    3              END/* do if ldct is active*/;
      364     9004
      365     9005    2         IF KN$LDCT.STATE =    %KN_ST_WTAFL/*wait term ack from local*/

   9005   2 0001DA  3D04                                 CMV,R3   4
          2 0001DB  0901 0004                            BE       s:9007,PREL
          2 0001DD  3D06                                 CMV,R3   6
          2 0001DE  0981 0004                            BNE      s:9009,PREL

      366     9006    2           OR KN$LDCT.STATE = %KN_ST_WTAFLNT/*wait init ack to terminate*/
      367     9007    2         THEN RETURN;

   9007   2 0001E0  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      368     9008
      369     9009    2         KN$NETPARM.ERRCODE = %KN_ERR_INVFCN;

   9009   2 0001E3  2C02                                 LDV,R2   2
          2 0001E4  AF46 0016                            STR,R2   22,B6

      370     9010    2         ALTRETURN;

   9010   2 0001E6  C380 0000 0000  xent                 LNJ,B4   X6A_AALT
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:68   

      371     9011
      372     9012
      373     9013        %EJECT;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:69   
      374     9014        /*F* NAME: KNS$SEND - Function KN_FCN_TERM
      375     9015
      376     9016        KNS$SEND is called with FUNCTION set to KN_FCN_TERM from the
      377     9017        KNH$CLOSE routine when the state of the LDCT waiting for the CQ
      378     9018        that is being closed is active.
      379     9019
      380     9020        KN$NETPARM.LDCT$ will contain the address of LDCT associated
      381     9021        with the end point that is to be released.
      382     9022
      383     9023        The FPT that is passed is of the format generated by the
      384     9024        FPT_TERM macro in file KNH_MACRO_C.
      385     9025
      386     9026        A terminate session header is built in auto with the
      387     9027        information from the LDCT and FPT_TERM.
      388     9028
      389     9029        Then we either enter KNS$RECV with the message if the other end
      390     9030        point is on the same fep, or pass the message on down the layers.
      391     9031
      392     9032        On return, the LDCT state is set to waiting term ack from remote
      393     9033        and KNS$SEND returns.
      394     9034        */
      395     9035
      396     9036    2       CASE (%KN_FCN_TERM);                /* Terminate a session connection     */

      397     9037
      398     9038        /* If the end point is waiting term ack from local throw away this terminate.
      399     9039        */
      400     9040    2         IF KN$LDCT.STATE =    %KN_ST_WTAFL/*wait term ack from local*/

   9040   2 0001E9  9805                                 LDR,R1   ,B5
          2 0001EA  9570 00FF                            AND,R1   255,IMO
          2 0001EC  1D04                                 CMV,R1   4
          2 0001ED  0901 0004                            BE       s:9042,PREL
          2 0001EF  1D06                                 CMV,R1   6
          2 0001F0  0981 0004                            BNE      s:9045,PREL

      401     9041    2           OR KN$LDCT.STATE = %KN_ST_WTAFLNT
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:70   
      402     9042    2         THEN RETURN;

   9042   2 0001F2  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      403     9043
      404     9044        /* Check to see if the state is active */
      405     9045    2         IF KN$LDCT.STATE ~= %KN_ST_ACTIVE AND KN$LDCT.STATE ~= %KN_ST_WTAFR

   9045   2 0001F5  1D05                                 CMV,R1   5
          2 0001F6  0901 000A                            BE       s:9053,PREL
          2 0001F8  1D03                                 CMV,R1   3
          2 0001F9  0901 0007                            BE       s:9053,PREL

      406     9046    3         THEN DO;

      407     9047    3              KN$NETPARM.ERRCODE = %KN_ERR_INVFCN;

   9047   2 0001FB  6C02                                 LDV,R6   2
          2 0001FC  EF46 0016                            STR,R6   22,B6

      408     9048    3              ALTRETURN;

   9048   2 0001FE  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      409     9049    3              END;
      410     9050
      411     9051        /* Build the header.
      412     9052        */
      413     9053    2         IF KN$LDCT.STATE = %KN_ST_ACTIVE

   9053   2 000201  1D05                                 CMV,R1   5
          2 000202  0981 0042                            BNE      s:9077,PREL

      414     9054    3         THEN DO;

      415     9055    3              KN$NETPARM.SHDR$ = ADDR(HDR);

PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:71   
   9055   2 000204  BBC7 000E                            LAB,B3   HDR,AUTO
          2 000206  BFC6 0008                            STB,B3   8,B6

      416     9056    3              KN$NETPARM.SHDRSZ = SIZEC(K$SQDP_TERM);

   9056   2 000208  2C0E                                 LDV,R2   14
          2 000209  AF46 000A                            STR,R2   10,B6

      417     9057
      418     9058    3              K$SQDP_TERM.TYPE = %K_SQDP_TERM;

   9058   2 00020B  1C03                                 LDV,R1   3
          2 00020C  9AC3 0001                            SRM,R1,'3FFF'X    1,B3
          2 00020E       3FFF

      419     9059    3              K$SQDP_TERM.CNTRL = '1'B;

   9059   2 00020F  DCC6 0008                            LDB,B5   8,B6
          2 000211  8945 0001                            LBT,'8000'X       1,B5
          2 000213       8000

      420     9060    3              K$SQDP_TERM.LDCT = KN$LDCT.RLCID.LDCTX;

   9060   2 000214  DCC6 0008                            LDB,B5   8,B6
          2 000216  BC86                                 LDB,B3   ,B6
          2 000217  E843 0002                            LDR,R6   2,B3
          2 000219  EF05                                 STR,R6   ,B5

      421     9061    3              K$SQDP_TERM.RLCID = FPT_TERM.RLCID;

   9061   2 00021A  DCC6 0008                            LDB,B5   8,B6
          2 00021C  BCC6 0019                            LDB,B3   25,B6
          2 00021E  8C83                                 LDI      ,B3
          2 00021F  8D45 0002                            SDI      2,B5

      422     9062    3              K$SQDP_TERM.REASON = FPT_TERM.REASON;

PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:72   
   9062   2 000221  DCC6 0008                            LDB,B5   8,B6
          2 000223  BCC6 0019                            LDB,B3   25,B6
          2 000225  E843 0002                            LDR,R6   2,B3
          2 000227  EF45 0004                            STR,R6   4,B5

      423     9063    3              K$SQDP_TERM.DATA_HDR = '0'B;

   9063   2 000229  DCC6 0008                            LDB,B5   8,B6
          2 00022B  8745 0005                            CL       5,B5
          2 00022D  8745 0006                            CL       6,B5

      424     9064
      425     9065        /* Call transport of transess.
      426     9066        */
      427     9067    3              IF KN$LDCT.RLCID.NODE = KN_NODE#

   9067   2 00022F  DC86                                 LDB,B5   ,B6
          2 000230  E2C5 0001                            LLH,R6   1,B5
          2 000232  E900 0000 0000  xsym                 CMR,R6   KN_NODE#
          2 000235  0981 0003                            BNE      s:9072,PREL

      428     9068    4              THEN DO;

      429     9069    4                   GOTO RECEIVE_DATA;

   9069   2 000237  0F81 0123                            B        s:9291,PREL

      430     9070    4                   END;
      431     9071
      432     9072    3              CALL SEND_ENTRY$(KN$NETPARM)

   9072   2 000239  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          2 00023B  9B84                                 LAB,B1   ,B4
          2 00023C  CBF0 0100                            LAB,B4   256,IMO
          2 00023E  E381                                 LNJ,B6   ,B1
          2 00023F       0003                            DC       s:9073,PREL
          2 000240  0F81 0004                            B        s:9077,PREL
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:73   

      433     9073    4              WHENALTRETURN DO;

      434     9074    4   DO_ALTRT:
      435     9075    4                   ALTRETURN;

   9075   2 000242  C380 0000 0000  xent DO_ALTRT        LNJ,B4   X6A_AALT

      436     9076    4                   END;
      437     9077    3              END;

      438     9078
      439     9079    2   TERM_RETURN: ;

   9079   2                              TERM_RETURN     null
      440     9080    2         KN$LDCT.STATE = %KN_ST_WTAFR/*waiting term ack from remote*/;

   9080   2 000245  ECC7 0004            TERM_RETURN     LDB,B6   @KN$NETPARM,AUTO
          2 000247  DC86                                 LDB,B5   ,B6
          2 000248  6C03                                 LDV,R6   3
          2 000249  EA85                                 SRM,R6,'00FF'X    ,B5
          2 00024A       00FF

      441     9081
      442     9082    2         RETURN;

   9082   2 00024B  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      443     9083
      444     9084
      445     9085        %EJECT;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:74   
      446     9086        /*F* NAME: KNS$SEND - Function KN_FCN_INIT_ACK
      447     9087
      448     9088        KNS$SEND is called with FUNCTION set to KN_FCN_INIT_ACK
      449     9089        from KNH$CLOSE when the state of the LDCT waiting on the CQ
      450     9090        is waiting ack from local, waiting init ack to terminate,
      451     9091        or waiting term ack from local.
      452     9092
      453     9093        The FPT that is passed is of the format generated by the
      454     9094        FPT_CONNECT_ACK macro in file KNH_MACRO_C.
      455     9095
      456     9096        The LDCT state must be either waiting ack from local or waiting
      457     9097        init ack to terminate.  If its waiting init ack to terminate
      458     9098        KNS$SEND will call the routine as specified in LDCT.USER_ENTRY$
      459     9099        with the terminate function specified.
      460     9100
      461     9101        An initiate ack session header is built in auto with the
      462     9102        information from the LDCT and FPT_CONNECT_ACK.  The only field that
      463     9103        is used is REASON, and it is set to %K_REASON_USRREJ.
      464     9104
      465     9105        Then we either enter KNS$RECV with the message if the other end
      466     9106        point is on the same fep, or pass the message on down the layers.
      467     9107
      468     9108        On return, the LDCT state is set to null if the reason code in
      469     9109        the FPT is non-zero; set to active if the reason code is zero.
      470     9110        Session the returns to the calling routine.
      471     9111        */
      472     9112
      473     9113    2       CASE (%KN_FCN_INIT_ACK);            /* Initiate acknowledement            */

      474     9114
      475     9115        /* Check for valid state.  Call USER_ENTRY$ IF approproiate.
      476     9116        */
      477     9117    2         IF KN$LDCT.STATE ~=   %KN_ST_WIAFL/*Waiting init ack from local*/

   9117   2 00024E  9805                                 LDR,R1   ,B5
          2 00024F  9570 00FF                            AND,R1   255,IMO
          2 000251  1D02                                 CMV,R1   2
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:75   
          2 000252  0901 002B                            BE       s:9138,PREL

      478     9118    3         THEN DO;

      479     9119    3              IF KN$LDCT.STATE = %KN_ST_WTIAFLNT
              9119                       /*wait init ack from local to terminate*/

   9119   2 000254  1D07                                 CMV,R1   7
          2 000255  0981 0022                            BNE      s:9132,PREL

      480     9120    4              THEN DO;

      481     9121    4                   IF FPT_CONNECT_ACK.REASON ~= 0

   9121   2 000257  BCC6 0019                            LDB,B3   25,B6
          2 000259  E803                                 LDR,R6   ,B3
          2 00025A  6901 0004                            BEZ,R6   s:9124,PREL

      482     9122    4                   THEN RETURN;       /* no need to send TERM to application     */

   9122   2 00025C  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      483     9123
      484     9124    4                   KN$NETPARM.FUNCTION = %KN_FCN_TERM;

   9124   2 00025F  6C03                                 LDV,R6   3
          2 000260  EF46 0014                            STR,R6   20,B6

      485     9125    4                   KN$NETPARM.FPT$ = ADDR(FPT_NAK_NOROUTE);

   9125   2 000262  AB80 0000 0009  01                   LAB,B2   FPT_NAK_NOROUTE
          2 000265  AFC6 0019                            STB,B2   25,B6

      486     9126
      487     9127    4                   CALL KN$LDCT.USER_ENTRY$(KN$NETPARM) ALTRET(DO_ALTRT);

   9127   2 000267  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:76   
          2 000269  9CC5 000C                            LDB,B1   12,B5
          2 00026B  CBF0 0100                            LAB,B4   256,IMO
          2 00026D  E381                                 LNJ,B6   ,B1
          2 00026E       FFD4                            DC       s:9073,PREL

      488     9128    4                   KN$LDCT.STATE = %KN_ST_WTAFLNT
              9128                            /*Wait term ack from local to terminate*/;

   9128   2 00026F  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          2 000271  DC86                                 LDB,B5   ,B6
          2 000272  6C06                                 LDV,R6   6
          2 000273  EA85                                 SRM,R6,'00FF'X    ,B5
          2 000274       00FF

      489     9129    4                   RETURN;

   9129   2 000275  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      490     9130    4                   END;
      491     9131
      492     9132    3              KN$NETPARM.ERRCODE = %KN_ERR_INVFCN;

   9132   2 000278  6C02                                 LDV,R6   2
          2 000279  EF46 0016                            STR,R6   22,B6

      493     9133    3              ALTRETURN;

   9133   2 00027B  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      494     9134    3              END;
      495     9135
      496     9136        /* Build the header.
      497     9137        */
      498     9138    2         KN$NETPARM.SHDR$ = ADDR(HDR);

   9138   2 00027E  BBC7 000E                            LAB,B3   HDR,AUTO
          2 000280  BFC6 0008                            STB,B3   8,B6
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:77   

      499     9139    2         KN$NETPARM.SHDRSZ = SIZEC(K$SQDP_INIT_ACK);

   9139   2 000282  2C10                                 LDV,R2   16
          2 000283  AF46 000A                            STR,R2   10,B6

      500     9140
      501     9141    2         K$SQDP_INIT_ACK.TYPE = %K_SQDP_INIT_ACK;

   9141   2 000285  1C02                                 LDV,R1   2
          2 000286  9AC3 0001                            SRM,R1,'3FFF'X    1,B3
          2 000288       3FFF

      502     9142    2         K$SQDP_INIT_ACK.CNTRL = '1'B;

   9142   2 000289  DCC6 0008                            LDB,B5   8,B6
          2 00028B  8945 0001                            LBT,'8000'X       1,B5
          2 00028D       8000

      503     9143    2         K$SQDP_INIT_ACK.LDCT = KN$LDCT.RLCID.LDCTX;

   9143   2 00028E  DCC6 0008                            LDB,B5   8,B6
          2 000290  BC86                                 LDB,B3   ,B6
          2 000291  E843 0002                            LDR,R6   2,B3
          2 000293  EF05                                 STR,R6   ,B5

      504     9144    2         K$SQDP_INIT_ACK.DATA_HDR.LENGTH = KN$NETPARM.MSGSZ + KN$NETPARM.UHDRSZ;

   9144   2 000294  DCC6 0008                            LDB,B5   8,B6
          2 000296  E846 0004                            LDR,R6   4,B6
          2 000298  EA46 0007                            ADD,R6   7,B6
          2 00029A  EF45 0007                            STR,R6   7,B5

      505     9145    2         K$SQDP_INIT_ACK.DATA_HDR.TYPE = KN$NETPARM.RECTYPE;

   9145   2 00029C  DCC6 0008                            LDB,B5   8,B6
          2 00029E  E846 0013                            LDR,R6   19,B6
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:78   
          2 0002A0  EF45 0006                            STR,R6   6,B5

      506     9146    2         K$SQDP_INIT_ACK.RLCID.LDCTX = KN$LDCT.LDCTX;

   9146   2 0002A2  DCC6 0008                            LDB,B5   8,B6
          2 0002A4  BC86                                 LDB,B3   ,B6
          2 0002A5  E843 0007                            LDR,R6   7,B3
          2 0002A7  EF45 0003                            STR,R6   3,B5

      507     9147    2         K$SQDP_INIT_ACK.RLCID.NODE = KN_NODE#;

   9147   2 0002A9  DCC6 0008                            LDB,B5   8,B6
          2 0002AB  E800 0000 0000  xsym                 LDR,R6   KN_NODE#
          2 0002AE  E7C5 0002                            STH,R6   2,B5

      508     9148    2         K$SQDP_INIT_ACK.RLCID.GENERATION = KN$LDCT.GENERATION;

   9148   2 0002B0  DCC6 0008                            LDB,B5   8,B6
          2 0002B2  BC86                                 LDB,B3   ,B6
          2 0002B3  D2C3 0004                            LLH,R5   4,B3
          2 0002B5  DAC5 0002                            SRM,R5,'00FF'X    2,B5
          2 0002B7       00FF

      509     9149    2         K$SQDP_INIT_ACK.REASON = FPT_CONNECT_ACK.REASON;

   9149   2 0002B8  DCC6 0008                            LDB,B5   8,B6
          2 0002BA  BCC6 0019                            LDB,B3   25,B6
          2 0002BC  D803                                 LDR,R5   ,B3
          2 0002BD  DF45 0004                            STR,R5   4,B5

      510     9150
      511     9151        /* Call the communications layers or enter kns$recv.
      512     9152        */
      513     9153    2         IF KN$LDCT.RLCID.NODE = KN_NODE#

   9153   2 0002BF  DC86                                 LDB,B5   ,B6
          2 0002C0  D2C5 0001                            LLH,R5   1,B5
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:79   
          2 0002C2  D956                                 CMR,R5   R6
          2 0002C3  0901 0097                            BE       s:9291,PREL

      514     9154    2         THEN GOTO RECEIVE_DATA;
      515     9155
      516     9156    2         CALL SEND_ENTRY$(KN$NETPARM)

   9156   2 0002C5  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          2 0002C7  9B84                                 LAB,B1   ,B4
          2 0002C8  CBF0 0100                            LAB,B4   256,IMO
          2 0002CA  E381                                 LNJ,B6   ,B1
          2 0002CB       0003                            DC       s:9157,PREL
          2 0002CC  0F81 0004                            B        s:9153,PREL

      517     9157    3         WHENALTRETURN DO;

   9153   2                              DO_ALTRET       null
      518     9158    3   DO_ALTRET: ;
      519     9159    3              ALTRETURN;

   9159   2 0002CE  C380 0000 0000  xent DO_ALTRET       LNJ,B4   X6A_AALT

   9153   2                              INIT_ACK_RETURN null
      520     9160    3              END;
      521     9161
      522     9162        /* Set the state to active if no err; null if errs.  Return.
      523     9163        */
      524     9164    2   INIT_ACK_RETURN: ;
      525     9165    2         IF FPT_CONNECT_ACK.REASON ~= 0

   9165   2 0002D1  ECC7 0004            INIT_ACK_RETURN LDB,B6   @KN$NETPARM,AUTO
          2 0002D3  DCC6 0019                            LDB,B5   25,B6
          2 0002D5  E805                                 LDR,R6   ,B5
          2 0002D6  6901 0006                            BEZ,R6   s:9167,PREL

      526     9166    2         THEN KN$LDCT.STATE = %KN_ST_NULL; /*what about releasing it?*/

PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:80   
   9166   2 0002D8  CC86                                 LDB,B4   ,B6
          2 0002D9  8804                                 LBF,'00FF'X       ,B4
          2 0002DA       00FF
          2 0002DB  0F81 0005                            B        s:9169,PREL

      527     9167    2         ELSE KN$LDCT.STATE = %KN_ST_ACTIVE;

   9167   2 0002DD  CC86                                 LDB,B4   ,B6
          2 0002DE  5C05                                 LDV,R5   5
          2 0002DF  DA84                                 SRM,R5,'00FF'X    ,B4
          2 0002E0       00FF

      528     9168
      529     9169    2         RETURN;

   9169   2 0002E1  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      530     9170
      531     9171        %EJECT;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:81   
      532     9172        /*F* NAME: KNS$SEND - Function KN_FCN_TERM_ACK
      533     9173
      534     9174        KNS$SEND is called with FUNCTION set to KN_FCN_TERM_ACK
      535     9175        from the KNH$CLOSE when the state of the LDCT waiting for the CQ
      536     9176        is WTAFL.
      537     9177
      538     9178        KN$NETPARM.LDCT$ will contain the address of LDCT associated
      539     9179        with the end point that is to be released.
      540     9180
      541     9181        The FPT that is passed is of the format generated by the
      542     9182        FPT_TERM macro in file KNH_MACRO_C.
      543     9183
      544     9184        We build a session terminate header and pass it down through the
      545     9185        the layers, or,if on this node, enter KNS$RECV.
      546     9186
      547     9187        On return, the LDCT state is marked NULL and session returns.
      548     9188        */
      549     9189    2       CASE (%KN_FCN_TERM_ACK);            /* Terminate session acknowledgement  */

      550     9190
      551     9191        /* Check to see if state if appropiate */
      552     9192    2         IF KN$LDCT.STATE = %KN_ST_WTAFLNT

   9192   2 0002E4  9805                                 LDR,R1   ,B5
          2 0002E5  9570 00FF                            AND,R1   255,IMO
          2 0002E7  1D06                                 CMV,R1   6
          2 0002E8  0981 0006                            BNE      s:9198,PREL

      553     9193    3         THEN DO;

      554     9194    3              KN$LDCT.STATE = %KN_ST_NULL;

   9194   2 0002EA  8805                                 LBF,'00FF'X       ,B5
   9194   2 0002EB       00FF

      555     9195    3              RETURN;

PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:82   
   9195   2 0002EC  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      556     9196    3              END;
      557     9197
      558     9198    2         IF KN$LDCT.STATE ~= %KN_ST_WTAFL

   9198   2 0002EF  1D04                                 CMV,R1   4
          2 0002F0  0901 0007                            BE       s:9207,PREL

      559     9199    3         THEN DO;

      560     9200    3              KN$NETPARM.ERRCODE = %KN_ERR_INVFCN;

   9200   2 0002F2  6C02                                 LDV,R6   2
          2 0002F3  EF46 0016                            STR,R6   22,B6

      561     9201    3              ALTRETURN;

   9201   2 0002F5  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      562     9202    3              END;
      563     9203
      564     9204        /* We build a session terminate header and pass it down to network
      565     9205          or, if on this node, enter kns$recv.
      566     9206        */
      567     9207    2         KN$NETPARM.SHDR$ = ADDR(HDR);

   9207   2 0002F8  BBC7 000E                            LAB,B3   HDR,AUTO
          2 0002FA  BFC6 0008                            STB,B3   8,B6

      568     9208    2         KN$NETPARM.SHDRSZ = SIZEC(K$SQDP_TERM);

   9208   2 0002FC  2C0E                                 LDV,R2   14
          2 0002FD  AF46 000A                            STR,R2   10,B6

      569     9209
      570     9210    2         K$SQDP_TERM.TYPE = %K_SQDP_TERM;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:83   

   9210   2 0002FF  1C03                                 LDV,R1   3
          2 000300  9AC3 0001                            SRM,R1,'3FFF'X    1,B3
          2 000302       3FFF

      571     9211    2         K$SQDP_TERM.CNTRL = '1'B;

   9211   2 000303  DCC6 0008                            LDB,B5   8,B6
          2 000305  8945 0001                            LBT,'8000'X       1,B5
          2 000307       8000

      572     9212    2         K$SQDP_TERM.LDCT = KN$LDCT.RLCID.LDCTX;

   9212   2 000308  DCC6 0008                            LDB,B5   8,B6
          2 00030A  BC86                                 LDB,B3   ,B6
          2 00030B  E843 0002                            LDR,R6   2,B3
          2 00030D  EF05                                 STR,R6   ,B5

      573     9213    2         K$SQDP_TERM.DATA_HDR = '0'B;

   9213   2 00030E  DCC6 0008                            LDB,B5   8,B6
          2 000310  8745 0005                            CL       5,B5
          2 000312  8745 0006                            CL       6,B5

      574     9214
      575     9215    2         IF KN$LDCT.RLCID.NODE = KN_NODE#

   9215   2 000314  DC86                                 LDB,B5   ,B6
          2 000315  E2C5 0001                            LLH,R6   1,B5
          2 000317  E900 0000 0000  xsym                 CMR,R6   KN_NODE#
          2 00031A  0901 0040                            BE       s:9291,PREL

      576     9216    2         THEN GOTO RECEIVE_DATA;
      577     9217
      578     9218    2         CALL SEND_ENTRY$(KN$NETPARM) ALTRET(DO_ALTRT);

   9218   2 00031C  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:84   
          2 00031E  9B84                                 LAB,B1   ,B4
          2 00031F  CBF0 0100                            LAB,B4   256,IMO
          2 000321  E381                                 LNJ,B6   ,B1
          2 000322       FF20                            DC       s:9073,PREL

   9215   2                              TERM_ACK_RETURN null
      579     9219
      580     9220        /* On return, mark the LDCT state as null.
      581     9221           Who releases it?
      582     9222        */
      583     9223    2   TERM_ACK_RETURN: ;
      584     9224    2         KN$LDCT.STATE = %KN_ST_NULL;

   9224   2 000323  ECC7 0004            TERM_ACK_RETURN LDB,B6   @KN$NETPARM,AUTO
          2 000325  DC86                                 LDB,B5   ,B6
          2 000326  8805                                 LBF,'00FF'X       ,B5
          2 000327       00FF

      585     9225    2         RETURN;

   9225   2 000328  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      586     9226
      587     9227        %EJECT;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:85   
      588     9228    2       CASE (ELSE);

      589     9229    2         CALL BADFNC_SCREECH;

   9229   2 00032B  E3C0 03ED                            LNJ,B6   s:0,PREL
          2 00032D       0001                            DC       s:9232,PREL

      590     9230
      591     9231    2         END;                              /* End cases                          */

      592     9232    1      RETURN;

   9232   2 00032E  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      593     9233
      594     9234        %EJECT;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:86   
      595     9235        /*F* NAME: KNS$RECV
      596     9236
      597     9237        KNS$RECV is called from KNN$RECV for QDP connections, from KNT$RECV for
      598     9238        class 4 connections, and from KNS$SEND directly when the endpoint that is
      599     9239        to receive the message is on the same fep.
      600     9240
      601     9241        KNS$RECV is called with the following parameters:
      602     9242
      603     9243        .fif
      604     9244        }    FUNCTION    - The function to be performed.  This will be one of the
      605     9245        }                  folowing EQUed values from the file KNH_MACRO_M:
      606     9246        }
      607     9247        }                      KN_FCN_DATA
      608     9248        }                      KN_FCN_TERM
      609     9249        }                      KN_FCN_TERM_ACK
      610     9250        }                      KN_FCN_UNQ
      611     9251        }
      612     9252        }    KN$NETPARM  - Contains the message header addresses and sizes
      613     9253        }
      614     9254        }    FPT_TERM    - Only used when FUNCTION is TERM.  The format
      615     9255        }                  of the FPT is described by the FPT_TERM macro.
      616     9256        }
      617     9257        .fin
      618     9258        */
      619     9259    1   KNS$RECV: ENTRY (KN$NETPARM) ALTRET;

   9259   2 000331  D380 0000 0000  xent KNS$RECV        LNJ,B5   X6A_AUTO_1
          2 000334       004A 0001                       DC       74,1

      620     9260
      621     9261    1      FUNCTION = KN$NETPARM.FUNCTION;

   9261   2 000336  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          2 000338  E846 0014                            LDR,R6   20,B6
          2 00033A  EF47 0006                            STR,R6   FUNCTION,AUTO

      622     9262
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:87   
      623     9263    1      LOCAL_TURNAROUND = 0;

   9263   2 00033C  8747 000C                            CL       LOCAL_TURNAROUND,AUTO

      624     9264
      625     9265    1      IF KN$NETPARM.SHDRSZ > KNS_RPEAK_SHDRSZ

   9265   2 00033E  D846 000A                            LDR,R5   10,B6
          2 000340  D900 0000 0003  00                   CMR,R5   KNS_RPEAK_SHDRSZ
          2 000343  0381 0004                            BLE      s:9268,PREL

      626     9266    1      THEN KNS_RPEAK_SHDRSZ = KN$NETPARM.SHDRSZ;

   9266   2 000345  DF00 0000 0003  00                   STR,R5   KNS_RPEAK_SHDRSZ

      627     9267
      628     9268    1      IF FUNCTION = %KN_FCN_DATA

   9268   2 000348  6D05                                 CMV,R6   5
          2 000349  0901 0011                            BE       s:9291,PREL

      629     9269    1      THEN GOTO RECEIVE_DATA;
      630     9270
      631     9271    2      DO CASE (FUNCTION);

   9271   2 00034B  B856                                 LDR,R3   R6
          2 00034C  3D06                                 CMV,R3   6
          2 00034D  0281 0373                            BGE      s:9660,PREL
          2 00034F  A830 0000 0355  02                   LDR,R2   s:9271+10,R3
          2 000352  83A0 0000 035B  02                   JMP      RECEIVE_DATA,R2
          2 000355       0366                            DC       s:9660,PREL
          2 000356       0366                            DC       s:9660,PREL
          2 000357       0366                            DC       s:9660,PREL
          2 000358       02A0                            DC       s:9605,PREL
          2 000359       0366                            DC       s:9660,PREL
          2 00035A       0000                            DC       s:9291,PREL

PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:88   
      632     9272
      633     9273        /*F* NAME: KNS$RECV - Function KN_FCN_DATA
      634     9274
      635     9275        The action to be taken when KNS$RECV has been entered from the lower
      636     9276        layers or when KNS$SEND has entered KNS$RECV directly because the
      637     9277        receiving endpoint is on the same fep, is dependent on the type of
      638     9278        data message that has been received.
      639     9279
      640     9280        This will be one of the following EQUated values from file
      641     9281        K_QDPHDRS_M
      642     9282
      643     9283        .fif
      644     9284        }    K_SQDP_DATA        0   Data
      645     9285        }    K_SQDP_INIT        1   Initiate Logical Connection Request
      646     9286        }    K_SQDP_INIT_ACK    2   Initiate Logical Connection Ack
      647     9287        }    K_SQDP_TERM        3   Terminate Logical Connection
      648     9288        .fin
      649     9289        */
      650     9290
      651     9291    2       CASE (%KN_FCN_DATA);

      652     9292
      653     9293        /* KNS$SEND branches directly to RECEIVE_DATA with LOCAL_TURNAROUND set
      654     9294           to the function code if the session connection is within the same FEP.
      655     9295        */
      656     9296    2   RECEIVE_DATA:
      657     9297    2         SAVE_LDCT$ = KN$NETPARM.LDCT$;

   9297   2 00035B  ECC7 0004            RECEIVE_DATA    LDB,B6   @KN$NETPARM,AUTO
          2 00035D  DC86                                 LDB,B5   ,B6
          2 00035E  DFC7 003E                            STB,B5   SAVE_LDCT$,AUTO

      658     9298
      659     9299        /* Check to see if the record received is the minimum allowable length
      660     9300        */
      661     9301    2         IF KN$NETPARM.SHDRSZ < LENGTHC(K$SQDP_DATA)

PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:89   
   9301   2 000360  E846 000A                            LDR,R6   10,B6
          2 000362  6D06                                 CMV,R6   6
          2 000363  0281 0007                            BGE      s:9310,PREL

      662     9302    3         THEN DO;

      663     9303    3              CALL PRTCL_SCREECH/*N*  or errlog */;

   9303   2 000365  E3C0 039C                            LNJ,B6   s:0,PREL
          2 000367       0001                            DC       s:9304,PREL

      664     9304    3              RETURN;

   9304   2 000368  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      665     9305    3              END;
      666     9306
      667     9307        /* Find LDCT for this message.
      668     9308           If the ldct is nil, this better be a connection request.
      669     9309        */
      670     9310    2         KN$NETPARM.LDCT$ = KN$DCT$(K$SQDP_DATA.LDCT);

   9310   2 00036B  CCC6 0008                            LDB,B4   8,B6
          2 00036D  B804                                 LDR,R3   ,B4
          2 00036E  BC80 0000 0000  xsym                 LDB,B3   KN_DCT$$
          2 000371  ACB3                                 LDB,B2   ,B3,R3
          2 000372  AF86                                 STB,B2   ,B6

      671     9311    2         IF KN$NETPARM.LDCT$ = ADDR(NIL) AND K$SQDP_DATA.TYPE ~= %K_SQDP_INIT

   9311   2 000373  8D86                                 CMN      ,B6
          2 000374  0981 000E                            BNE      s:9317,PREL
          2 000376  D844 0001                            LDR,R5   1,B4
          2 000378  D570 3FFF                            AND,R5   16383,IMO
          2 00037A  5D01                                 CMV,R5   1
          2 00037B  0901 0007                            BE       s:9317,PREL

PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:90   
      672     9312    3         THEN DO;

      673     9313    3              CALL PRTCL_SCREECH/*N* Send a connect ack with reason non zero */;

   9313   2 00037D  E3C0 0384                            LNJ,B6   s:0,PREL
          2 00037F       0001                            DC       s:9314,PREL

      674     9314    3              RETURN;

   9314   2 000380  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      675     9315    3              END;
      676     9316
      677     9317    2         IF K$SQDP_DATA.CNTRL = '0'B

   9317   2 000383  89C4 0001                            CMZ      1,B4
          2 000385  0881 001E                            BAGE     s:9341,PREL

      678     9318    2         THEN GOTO GOT_DATATYPE_DATA;
      679     9319
      680     9320    2         SQDP_TYPE = K$SQDP_DATA.TYPE;

   9320   2 000387  D844 0001                            LDR,R5   1,B4
          2 000389  D570 3FFF                            AND,R5   16383,IMO
          2 00038B  DF47 000D                            STR,R5   SQDP_TYPE,AUTO

      681     9321
      682     9322    2         IF (SQDP_TYPE > %K_SQDP_TERM) OR (SQDP_TYPE = %K_SQDP_DATA)

   9322   2 00038D  5D03                                 CMV,R5   3
          2 00038E  0301 0003                            BG       s:9323,PREL
          2 000390  5981 0004                            BNEZ,R5  s:9325,PREL

      683     9323    2         THEN CALL PRTCL_SCREECH;

   9323   2 000392  E3C0 036F                            LNJ,B6   s:0,PREL
          2 000394       0001                            DC       s:9325,PREL
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:91   

      684     9324
      685     9325    3         DO CASE (SQDP_TYPE);

   9325   2 000395  B847 000D                            LDR,R3   SQDP_TYPE,AUTO
          2 000397  3D04                                 CMV,R3   4
          2 000398  0281 032B                            BGE      s:9664,PREL
          2 00039A  A830 0000 03A0  02                   LDR,R2   s:9325+11,R3
          2 00039D  83A0 0000 03A4  02                   JMP      GOT_DATATYPE_DATA,R2
          2 0003A0       0000                            DC       s:9341,PREL
          2 0003A1       003C                            DC       s:9381,PREL
          2 0003A2       0186                            DC       s:9507,PREL
          2 0003A3       01EF                            DC       s:9558,PREL

      686     9326
      687     9327        %EJECT;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:92   
      688     9328
      689     9329        /*F* NAME: KNS$RECV - Function KN_FCN_DATA and Type DATA
      690     9330
      691     9331        If the LDCT state is not active, it must be waiting terminate
      692     9332        from remote, in which case we just throw the data away by returning.
      693     9333        Any other LDCT state will cause us to screech.
      694     9334
      695     9335        If the message didn't come from this node, the session
      696     9336        header is stripped off.  In any case, the message is then passed
      697     9337        on up by calling the entry specified in LDCT.USER_ENTRY$.
      698     9338
      699     9339        */
      700     9340
      701     9341    3          CASE (%K_SQDP_DATA);             /* Data                               */

   9313   2                              GOT_DATATYPE_DA*null
      702     9342
      703     9343    3   GOT_DATATYPE_DATA: ;
      704     9344    3            IF KN$LDCT.STATE = %KN_ST_WTAFR /* Waiting a terminate from remote   */

   9344   2 0003A4  ECC7 0004            GOT_DATATYPE_DA*LDB,B6   @KN$NETPARM,AUTO
          2 0003A6  DC86                                 LDB,B5   ,B6
          2 0003A7  E805                                 LDR,R6   ,B5
          2 0003A8  E570 00FF                            AND,R6   255,IMO
          2 0003AA  6D03                                 CMV,R6   3
          2 0003AB  0981 0004                            BNE      s:9347,PREL

      705     9345    3            THEN RETURN;                   /* Throw this data on the floor.      */

   9345   2 0003AD  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      706     9346
      707     9347    3            IF KN$LDCT.STATE ~= %KN_ST_ACTIVE

   9347   2 0003B0  6D05                                 CMV,R6   5
          2 0003B1  0901 0004                            BE       s:9350,PREL

PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:93   
      708     9348    3            THEN CALL LDCT_SCREECH;

   9348   2 0003B3  E3C0 0337                            LNJ,B6   s:0,PREL
          2 0003B5       0001                            DC       s:9350,PREL

      709     9349
      710     9350    3            IF LOCAL_TURNAROUND = 0

   9350   2 0003B6  E847 000C                            LDR,R6   LOCAL_TURNAROUND,AUTO
          2 0003B8  6981 0013                            BNEZ,R6  s:9357,PREL

      711     9351    4            THEN DO;

      712     9352    4                 KN$NETPARM.RECTYPE = K$SQDP_DATA.TYPE;

   9352   2 0003BA  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          2 0003BC  DCC6 0008                            LDB,B5   8,B6
          2 0003BE  D845 0001                            LDR,R5   1,B5
          2 0003C0  D570 3FFF                            AND,R5   16383,IMO
          2 0003C2  DF46 0013                            STR,R5   19,B6

      713     9353    4                 KN$NETPARM.UHDR$ = PINCRC(KN$NETPARM.SHDR$,SIZEC(K$SQDP_DATA));

   9353   2 0003C4  CBC5 0003                            LAB,B4   3,B5
          2 0003C6  CFC6 0005                            STB,B4   5,B6

      714     9354    4                 KN$NETPARM.UHDRSZ = K$SQDP_DATA.LENGTH;

   9354   2 0003C8  C845 0002                            LDR,R4   2,B5
          2 0003CA  CF46 0007                            STR,R4   7,B6

      715     9355    4                 END/*if not local trunaround*/;

      716     9356
      717     9357    3            IF KN$LDCT.USER_ENTRY$ ~= ENTADDR(NIL)

   9357   2 0003CC  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:94   
          2 0003CE  DC86                                 LDB,B5   ,B6
          2 0003CF  CCC5 000C                            LDB,B4   12,B5
          2 0003D1  CD80 0000 0000  03                   CMB,B4   0
          2 0003D4  0901 0008                            BE       s:9359,PREL

      718     9358    3            THEN CALL KN$LDCT.USER_ENTRY$ (KN$NETPARM) ALTRET(DO_ALTRT);

   9358   2 0003D6  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          2 0003D8  9B84                                 LAB,B1   ,B4
          2 0003D9  CBF0 0100                            LAB,B4   256,IMO
          2 0003DB  E381                                 LNJ,B6   ,B1
          2 0003DC       FE66                            DC       s:9073,PREL

      719     9359    3            RETURN;

   9359   2 0003DD  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      720     9360
      721     9361
      722     9362        %EJECT;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:95   
      723     9363
      724     9364        /*F* NAME: KNS$RECV - Function KN_FCN_DATA and Type Initate Request
      725     9365
      726     9366        First we get an LDCT for this endpoint and initialize the state to
      727     9367        waiting init ack from local.  The LDCT is further initialized with information
      728     9368        passed to KNS$RECV in the NETPARM.LDCT$, the LDCT for the other
      729     9369        end-point.
      730     9370
      731     9371        An FPT_CONNECT is built in auto.  If this is not an entry from KNS$SEND,
      732     9372        the references to the user data in KN$NETPARM are updated to reflect
      733     9373        the stripping off of the session header.
      734     9374
      735     9375        A call is then made to LDCT.USER_ENTRY$.  The function specified is
      736     9376        INIT.  KN$NETPARM and FPT_CONNECT are also passed as parameters.
      737     9377
      738     9378        */
      739     9379    3          CASE (%K_SQDP_INIT);             /* Initiate connection request        */

      740     9380
      741     9381    3            LDCT$ = KN$NETPARM.LDCT$;

   9381   2 0003E0  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          2 0003E2  DC86                                 LDB,B5   ,B6
          2 0003E3  DFC7 0009                            STB,B5   LDCT$,AUTO

      742     9382
      743     9383    3            IF LDCT$ = ADDR(NIL) /*  This better be a connection to node admin   */

   9383   2 0003E5  8DC7 0009                            CMN      LDCT$,AUTO
          2 0003E7  0981 0026                            BNE      s:9394,PREL

      744     9384    4            THEN DO;

      745     9385    4                 IF K$SQDP_INIT.RESOURCE ~= 'NODADM'

   9385   2 0003E9  CCC6 0008                            LDB,B4   8,B6
          2 0003EB  BB80 0000 0000  01                   LAB,B3   ILSTTRAN
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:96   
          2 0003EE  0022                                 ACM      ;
          2 0003EF       4804 000A                                ALPHANUM(10,B4,,8,FILL),;
          2 0003F1       4603 000F                                ALPHANUM(15,B3,,6,FILL)
          2 0003F3  5381 001A                            CBE      s:9394,PREL
          2 0003F5  BB80 0000 0000  01                   LAB,B3   ILSTTRAN
          2 0003F8  0022                                 ACM      ;
          2 0003F9       4804 000A                                ALPHANUM(10,B4,,8,FILL),;
          2 0003FB       4503 0012                                ALPHANUM(18,B3,,5,FILL)
          2 0003FD  5381 0010                            CBE      s:9394,PREL
          2 0003FF  BB80 0000 0000  01                   LAB,B3   ILSTTRAN
          2 000402  0022                                 ACM      ;
          2 000403       4804 000A                                ALPHANUM(10,B4,,8,FILL),;
          2 000405       4603 0015                                ALPHANUM(21,B3,,6,FILL)
          2 000407  5381 0006                            CBE      s:9394,PREL

      746     9386    4                   AND K$SQDP_INIT.RESOURCE ~= 'LOGON'
      747     9387    4                   AND K$SQDP_INIT.RESOURCE ~= 'NETMAN'
      748     9388    5                 THEN DO;

      749     9389    5                      TEMP = %K_REASON_USRREJ;

   9389   2 000409  6C05                                 LDV,R6   5
          2 00040A  EF47 003D                            STR,R6   TEMP,AUTO

      750     9390    5                      GOTO CONNECT_NAK;

   9390   2 00040C  0F81 0026                            B        s:9405,PREL

      751     9391    5                      END;
      752     9392    4                 END/*do if kn$netparm.ldct$ is nil*/;
      753     9393
      754     9394    3            IF KN$NETPARM.SHDR$ ~= ADDR(NIL) AND LDCT$ ~= ADDR(NIL)

   9394   2 00040E  8DC6 0008                            CMN      8,B6
          2 000410  0901 0015                            BE       s:9403,PREL
          2 000412  8DC7 0009                            CMN      LDCT$,AUTO
          2 000414  0901 0011                            BE       s:9403,PREL
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:97   

      755     9395    3            THEN IF K$SQDP_INIT.DEST_GENERATION ~= KN$LDCT.GENERATION

   9395   2 000416  CCC6 0008                            LDB,B4   8,B6
          2 000418  E844 0005                            LDR,R6   5,B4
          2 00041A  E570 00FF                            AND,R6   255,IMO
          2 00041C  D2C5 0004                            LLH,R5   4,B5
          2 00041E  E955                                 CMR,R6   R5
          2 00041F  0901 0006                            BE       s:9403,PREL

      756     9396    4                 THEN DO;                  /* Generations don't match            */

      757     9397    4                      TEMP = %K_REASON_BADGEN;

   9397   2 000421  4C04                                 LDV,R4   4
          2 000422  CF47 003D                            STR,R4   TEMP,AUTO

      758     9398    4                      GOTO CONNECT_NAK;

   9398   2 000424  0F81 000E                            B        s:9405,PREL

      759     9399    4                      END;
      760     9400
      761     9401        /* Get an LDCT for this line.
      762     9402        */
      763     9403    3            CALL KNA$GETLDCT(KN$NETPARM.LDCT$)

   9403   2 000426  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          2 000428  CBF0 0100                            LAB,B4   256,IMO
          2 00042A  E380 0000 0000  xent                 LNJ,B6   KNA$GETLDCT
          2 00042D       0003                            DC       s:9405,PREL
          2 00042E  0F81 0056                            B        s:9435,PREL

      764     9404    4            WHENALTRETURN DO;

      765     9405    4                 TEMP = %K_REASON_NOLDCT;

PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:98   
   9405   2 000430  6C01                                 LDV,R6   1
          2 000431  EF47 003D                            STR,R6   TEMP,AUTO

   9405   2                              CONNECT_NAK     null
      766     9406    4   CONNECT_NAK:  ;
      767     9407    4                 LDCTX = K$SQDP_INIT.RLCID.LDCTX;

   9407   2 000433  ECC7 0004            CONNECT_NAK     LDB,B6   @KN$NETPARM,AUTO
          2 000435  DCC6 0008                            LDB,B5   8,B6
          2 000437  E845 0003                            LDR,R6   3,B5
          2 000439  EF47 000B                            STR,R6   LDCTX,AUTO

      768     9408    4                 KN$NETPARM.SHDR$ = ADDR(HDR);

   9408   2 00043B  CBC7 000E                            LAB,B4   HDR,AUTO
          2 00043D  CFC6 0008                            STB,B4   8,B6

      769     9409    4                 KN$NETPARM.SHDRSZ = SIZEC(K$SQDP_INIT_ACK);

   9409   2 00043F  5C10                                 LDV,R5   16
          2 000440  DF46 000A                            STR,R5   10,B6

      770     9410    4                 K$SQDP_INIT_ACK.TYPE = %K_SQDP_INIT_ACK;

   9410   2 000442  4C02                                 LDV,R4   2
          2 000443  CAC4 0001                            SRM,R4,'3FFF'X    1,B4
          2 000445       3FFF

      771     9411    4                 K$SQDP_INIT_ACK.CNTRL = '1'B;

   9411   2 000446  DCC6 0008                            LDB,B5   8,B6
          2 000448  8945 0001                            LBT,'8000'X       1,B5
          2 00044A       8000

      772     9412    4                 K$SQDP_INIT_ACK.LDCT = LDCTX;

   9412   2 00044B  DCC6 0008                            LDB,B5   8,B6
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:99   
          2 00044D  EF05                                 STR,R6   ,B5

      773     9413    4                 K$SQDP_INIT_ACK.REASON = TEMP;

   9413   2 00044E  DCC6 0008                            LDB,B5   8,B6
          2 000450  B847 003D                            LDR,R3   TEMP,AUTO
          2 000452  BF45 0004                            STR,R3   4,B5

      774     9414    4                 KN$NETPARM.MSG$ = ADDR(NIL);

   9414   2 000454  DB80 0000 0000                       LAB,B5   0
          2 000457  DFC6 0002                            STB,B5   2,B6

      775     9415    4                 KN$NETPARM.UHDR$ = ADDR(NIL);

   9415   2 000459  CB80 0000 0000                       LAB,B4   0
          2 00045C  CFC6 0005                            STB,B4   5,B6

      776     9416
      777     9417    4                 IF LOCAL_TURNAROUND = 0

   9417   2 00045E  A847 000C                            LDR,R2   LOCAL_TURNAROUND,AUTO
          2 000460  2981 0020                            BNEZ,R2  s:9428,PREL

      778     9418    5                 THEN DO;

      779     9419    5                      KN$NETPARM.FUNCTION = %KN_FCN_DATA;

   9419   2 000462  1C05                                 LDV,R1   5
          2 000463  9F46 0014                            STR,R1   20,B6

      780     9420    5                      IF LDCT$->KN$LDCT.CONN_TYPE = %KN_CNTYPE_QDP

   9420   2 000465  BCC7 0009                            LDB,B3   LDCT$,AUTO
          2 000467  E283                                 LLH,R6   ,B3
          2 000468  6D05                                 CMV,R6   5
          2 000469  0981 0008                            BNE      s:9422,PREL
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:100  

      781     9421    5                      THEN SEND_ENTRY$ = ENTADDR(KNN$SEND);

   9421   2 00046B  AB80 0000 0000  xent                 LAB,B2   KNN$SEND
          2 00046E  AFC7 0007                            STB,B2   SEND_ENTRY$,AUTO
          2 000470  0F81 0006                            B        s:9424,PREL

      782     9422    5                      ELSE SEND_ENTRY$ = ENTADDR(KNT$SEND);

   9422   2 000472  AB80 0000 0000  xent                 LAB,B2   KNT$SEND
          2 000475  AFC7 0007                            STB,B2   SEND_ENTRY$,AUTO

      783     9423
      784     9424    5                      CALL SEND_ENTRY$(KN$NETPARM) ALTRET(DO_ALTRT);

   9424   2 000477  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          2 000479  9B82                                 LAB,B1   ,B2
          2 00047A  CBF0 0100                            LAB,B4   256,IMO
          2 00047C  E381                                 LNJ,B6   ,B1
          2 00047D       FDC5                            DC       s:9073,PREL

      785     9425    5                      RETURN;

   9425   2 00047E  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      786     9426    5                      END;
      787     9427    5                 ELSE DO;

      788     9428    5                      LOCAL_TURNAROUND = 0;

   9428   2 000481  8747 000C                            CL       LOCAL_TURNAROUND,AUTO

      789     9429    5                      GOTO RECEIVE_DATA;

   9429   2 000483  0F81 FED7                            B        s:9291,PREL

      790     9430    5                      END;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:101  
      791     9431    4                 END/*altret*/;
      792     9432
      793     9433        /* Initialize the LDCT we just got.
      794     9434        */
      795     9435    3            KN$LDCT.STATE = %KN_ST_WIAFL;

   9435   2 000485  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          2 000487  DC86                                 LDB,B5   ,B6
          2 000488  6C02                                 LDV,R6   2
          2 000489  EA85                                 SRM,R6,'00FF'X    ,B5
          2 00048A       00FF

      796     9436    3            KN$LDCT.RLCID = K$SQDP_INIT.RLCID;

   9436   2 00048B  DC86                                 LDB,B5   ,B6
          2 00048C  CCC6 0008                            LDB,B4   8,B6
          2 00048E  8CC4 0002                            LDI      2,B4
          2 000490  8D45 0001                            SDI      1,B5

      797     9437    3            KN$LDCT.TRANSPORT_ID = KN$NETPARM.TCTX_ID;

   9437   2 000492  DC86                                 LDB,B5   ,B6
          2 000493  E846 0011                            LDR,R6   17,B6
          2 000495  EF45 0003                            STR,R6   3,B5

      798     9438
      799     9439    3            IF LDCT$ ~= ADDR(NIL)

   9439   2 000497  8DC7 0009                            CMN      LDCT$,AUTO
          2 000499  0901 0017                            BE       s:9447,PREL

      800     9440    4            THEN DO;

      801     9441    4                 KN$LDCT.CONN_TYPE = LDCT$->KN$LDCT.CONN_TYPE;

   9441   2 00049B  DC86                                 LDB,B5   ,B6
          2 00049C  CCC7 0009                            LDB,B4   LDCT$,AUTO
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:102  
          2 00049E  E284                                 LLH,R6   ,B4
          2 00049F  E785                                 STH,R6   ,B5

      802     9442    4                 KN$LDCT.USER_ENTRY$ = LDCT$->KN$LDCT.USER_ENTRY$; /*usually kna$in*/

   9442   2 0004A0  DC86                                 LDB,B5   ,B6
          2 0004A1  BCC4 000C                            LDB,B3   12,B4
          2 0004A3  BFC5 000C                            STB,B3   12,B5

      803     9443    4                 KN$LDCT.USER# = LDCT$->KN$LDCT.USER#;

   9443   2 0004A5  DC86                                 LDB,B5   ,B6
          2 0004A6  E844 000E                            LDR,R6   14,B4
          2 0004A8  EF45 000E                            STR,R6   14,B5

      804     9444    4                 KN$LDCT.UID = LDCT$->KN$LDCT.UID;

   9444   2 0004AA  DC86                                 LDB,B5   ,B6
          2 0004AB  8CC4 0005                            LDI      5,B4
          2 0004AD  8D45 0005                            SDI      5,B5

      805     9445    4                 END;

   9445   2 0004AF  0F81 000E                            B        s:9454,PREL

      806     9446    4            ELSE DO;

      807     9447    4                 KN$LDCT.CONN_TYPE = %KN_CNTYPE_SESS;

   9447   2 0004B1  DC86                                 LDB,B5   ,B6
          2 0004B2  6C02                                 LDV,R6   2
          2 0004B3  E785                                 STH,R6   ,B5

      808     9448    4                 KN$LDCT.USER_ENTRY$ = ENTADDR(KNH$SEND);

   9448   2 0004B4  DC86                                 LDB,B5   ,B6
          2 0004B5  CB80 0000 0000  xent                 LAB,B4   KNH$SEND
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:103  
          2 0004B8  CFC5 000C                            STB,B4   12,B5

      809     9449    4                 KN$LDCT.USER# = 1;

   9449   2 0004BA  DC86                                 LDB,B5   ,B6
          2 0004BB  5C01                                 LDV,R5   1
          2 0004BC  DF45 000E                            STR,R5   14,B5

      810     9450    4                 END;

      811     9451
      812     9452        /* If this is not local turnaround point to UHDR$.
      813     9453        */
      814     9454    3            IF LOCAL_TURNAROUND = 0

   9454   2 0004BE  E847 000C                            LDR,R6   LOCAL_TURNAROUND,AUTO
          2 0004C0  6981 000F                            BNEZ,R6  s:9464,PREL

      815     9455    4            THEN DO;

      816     9456    4                 KN$NETPARM.UHDR$ = PINCRC(KN$NETPARM.SHDR$,SIZEC(K$SQDP_INIT));

   9456   2 0004C2  DCC6 0008                            LDB,B5   8,B6
          2 0004C4  CBC5 0018                            LAB,B4   24,B5
          2 0004C6  CFC6 0005                            STB,B4   5,B6

      817     9457    4                 KN$NETPARM.UHDRSZ = K$SQDP_INIT.DATA_HDR.LENGTH;

   9457   2 0004C8  D845 0017                            LDR,R5   23,B5
          2 0004CA  DF46 0007                            STR,R5   7,B6

      818     9458    4                 KN$NETPARM.RECTYPE = K$SQDP_INIT.DATA_HDR.TYPE;

   9458   2 0004CC  C845 0016                            LDR,R4   22,B5
          2 0004CE  CF46 0013                            STR,R4   19,B6

      819     9459    4                 END;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:104  

      820     9460
      821     9461        /* Build the fpt_connect to pass to the kna routine.
      822     9462        */
      823     9463
      824     9464    3            FPT$CONNECT='0'B;

   9464   2 0004D0  5C26                                 LDV,R5   38
          2 0004D1  0021                                 ALR      ;
          2 0004D2       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          2 0004D4       4007 002A                                ALPHANUM(FPT$CONNECT,AUTO,,R5,FILL)

      825     9465    3            FPT$CONNECT.RESOURCE = K$SQDP_INIT.RESOURCE;

   9465   2 0004D6  437F                                 CSYNC    s:9464+5,SPREL
          2 0004D7  DCC6 0008                            LDB,B5   8,B6
          2 0004D9  AB85                                 LAB,B2   ,B5
          2 0004DA  2C14                                 LDV,R2   20
          2 0004DB  6C08                                 LDV,R6   8
          2 0004DC  BB87                                 LAB,B3   ,AUTO
          2 0004DD  3C56                                 LDV,R3   86
          2 0004DE  0008                                 MMM

      826     9466    3            FPT$CONNECT.TERMINAL_ID = K$SQDP_INIT.TERMINAL_ID;

   9466   2 0004DF  CCC6 0008                            LDB,B4   8,B6
          2 0004E1  AB84                                 LAB,B2   ,B4
          2 0004E2  2C1C                                 LDV,R2   28
          2 0004E3  6C10                                 LDV,R6   16
          2 0004E4  BB87                                 LAB,B3   ,AUTO
          2 0004E5  3C5E                                 LDV,R3   94
          2 0004E6  0008                                 MMM

      827     9467    3            FPT$CONNECT.SPEED = K$SQDP_INIT.TERMINAL_SPEED;

   9467   2 0004E7  9CC6 0008                            LDB,B1   8,B6
          2 0004E9  E2C1 0005                            LLH,R6   5,B1
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:105  
          2 0004EB  E7C7 003A                            STH,R6   FPT$CONNECT+16,AUTO

      828     9468    3            FPT$CONNECT.RLCID = KN$LDCT.RLCID;

   9468   2 0004ED  9C86                                 LDB,B1   ,B6
          2 0004EE  8CC1 0001                            LDI      1,B1
          2 0004F0  8D47 0037                            SDI      FPT$CONNECT+13,AUTO

      829     9469    3            FPT$CONNECT.USER.SYSID = K$SQDP_INIT.SYSID;

   9469   2 0004F2  9CC6 0008                            LDB,B1   8,B6
          2 0004F4  C841 0004                            LDR,R4   4,B1
          2 0004F6  CF47 0039                            STR,R4   FPT$CONNECT+15,AUTO

      830     9470
      831     9471    3            KN$NETPARM.FUNCTION = %KN_FCN_INIT;

   9471   2 0004F8  3C01                                 LDV,R3   1
          2 0004F9  BF46 0014                            STR,R3   20,B6

      832     9472    3            KN$NETPARM.FPT$ = ADDR(FPT$CONNECT);

   9472   2 0004FB  9BC7 002A                            LAB,B1   FPT$CONNECT,AUTO
          2 0004FD  9FC6 0019                            STB,B1   25,B6

      833     9473
      834     9474    3            IF KN$LDCT.USER_ENTRY$ ~= ENTADDR(NIL)

   9474   2 0004FF  DC86                                 LDB,B5   ,B6
          2 000500  ECC5 000C                            LDB,B6   12,B5
          2 000502  ED80 0000 0000  03                   CMB,B6   0
          2 000505  0901 01BE                            BE       s:9664,PREL

      835     9475    3            THEN CALL KN$LDCT.USER_ENTRY$ (KN$NETPARM)

   9475   2 000507  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          2 000509  DC86                                 LDB,B5   ,B6
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:106  
          2 00050A  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          2 00050C  9CC5 000C                            LDB,B1   12,B5
          2 00050E  CBF0 0100                            LAB,B4   256,IMO
          2 000510  E381                                 LNJ,B6   ,B1
          2 000511       0003                            DC       s:9477,PREL
          2 000512  0F81 0015                            B        s:9481+3,PREL

      836     9476    4                 WHENALTRETURN DO;

      837     9477    4                      CALL KNA$RLSLDCT (KN$NETPARM.LDCT$);

   9477   2 000514  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          2 000516  CBF0 0100                            LAB,B4   256,IMO
          2 000518  E380 0000 0000  xent                 LNJ,B6   KNA$RLSLDCT
          2 00051B       0001                            DC       s:9478,PREL

      838     9478    4                      KN$NETPARM.LDCT$ = SAVE_LDCT$;

   9478   2 00051C  ECC7 003E                            LDB,B6   SAVE_LDCT$,AUTO
          2 00051E  DCC7 0004                            LDB,B5   @KN$NETPARM,AUTO
          2 000520  EF85                                 STB,B6   ,B5

      839     9479
      840     9480    4                      IF LOCAL_TURNAROUND = 0

   9480   2 000521  E847 000C                            LDR,R6   LOCAL_TURNAROUND,AUTO
          2 000523  6981 FC3B                            BNEZ,R6  s:8929,PREL

      841     9481    4                      THEN ALTRETURN;

   9481   2 000525  C380 0000 0000  xent                 LNJ,B4   X6A_AALT
          2 000528  0F81 019B                            B        s:9664,PREL

      842     9482    4                      ELSE GOTO NOT_READY_YET;
      843     9483    4                      END;
      844     9484
      845     9485
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:107  
      846     9486        %EJECT;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:108  
      847     9487        /*F* NAME: KNS$RECV - Function KN_FCN_DATA and Type Initate Ack
      848     9488
      849     9489        If the state of the LDCT is not waiting ack from remote, we screech.
      850     9490
      851     9491        If this is not an entry from KNS$SEND, the user data header info in
      852     9492        KN$NETPARM are updated to reflect the stripping off of the session
      853     9493        header.
      854     9494
      855     9495        If the reason code in the header is not zero, this is a NAK instead
      856     9496        of an ACK; the state of the LDCT is set to null.  If this is truly an
      857     9497        ACK the state of the LDCT is set to active.
      858     9498
      859     9499        A call is then made to LDCT.USER_ENTRY$ with KN$NETPARM.FUNCTION set
      860     9500        to INIT_ACK and KN$NETPARM.FPT$ set to locate the reason code from the
      861     9501        Initiate Acknowledegment message.
      862     9502
      863     9503        */
      864     9504    3          CASE (%K_SQDP_INIT_ACK);         /* Initiate connection ack            */

      865     9505
      866     9506
      867     9507    3            IF KN$LDCT.STATE ~= %KN_ST_WIAFR

   9507   2 00052A  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          2 00052C  DC86                                 LDB,B5   ,B6
          2 00052D  E805                                 LDR,R6   ,B5
          2 00052E  E570 00FF                            AND,R6   255,IMO
          2 000530  6D01                                 CMV,R6   1
          2 000531  0901 0004                            BE       s:9512,PREL

      868     9508    3            THEN CALL LDCT_SCREECH;

   9508   2 000533  E3C0 01B7                            LNJ,B6   s:0,PREL
          2 000535       0001                            DC       s:9512,PREL

      869     9509
      870     9510        /* Save dest sid in the ldct.
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:109  
      871     9511        */
      872     9512    3            KN$LDCT.RLCID = K$SQDP_INIT_ACK.RLCID;

   9512   2 000536  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          2 000538  DC86                                 LDB,B5   ,B6
          2 000539  CCC6 0008                            LDB,B4   8,B6
          2 00053B  8CC4 0002                            LDI      2,B4
          2 00053D  8D45 0001                            SDI      1,B5

      873     9513
      874     9514    3            IF LOCAL_TURNAROUND = 0

   9514   2 00053F  E847 000C                            LDR,R6   LOCAL_TURNAROUND,AUTO
          2 000541  6981 000B                            BNEZ,R6  s:9520,PREL

      875     9515    4            THEN DO;

      876     9516    4                 KN$NETPARM.UHDR$ = PINCRC(KN$NETPARM.SHDR$,SIZEC(K$SQDP_INIT_ACK));

   9516   2 000543  DCC6 0008                            LDB,B5   8,B6
          2 000545  CBC5 0008                            LAB,B4   8,B5
          2 000547  CFC6 0005                            STB,B4   5,B6

      877     9517    4                 KN$NETPARM.UHDRSZ = K$SQDP_INIT_ACK.DATA_HDR.LENGTH;

   9517   2 000549  D845 0007                            LDR,R5   7,B5
          2 00054B  DF46 0007                            STR,R5   7,B6

      878     9518    4                 END;

      879     9519
      880     9520    3            IF K$SQDP_INIT_ACK.REASON = 0

   9520   2 00054D  DCC6 0008                            LDB,B5   8,B6
          2 00054F  D845 0004                            LDR,R5   4,B5
          2 000551  5981 0007                            BNEZ,R5  s:9522,PREL

PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:110  
      881     9521    3            THEN KN$LDCT.STATE = %KN_ST_ACTIVE;

   9521   2 000553  CC86                                 LDB,B4   ,B6
          2 000554  4C05                                 LDV,R4   5
          2 000555  CA84                                 SRM,R4,'00FF'X    ,B4
          2 000556       00FF
          2 000557  0F81 0004                            B        s:9524,PREL

      882     9522    3            ELSE KN$LDCT.STATE = %KN_ST_NULL; /*shouldnt it be released too?     */

   9522   2 000559  CC86                                 LDB,B4   ,B6
          2 00055A  8804                                 LBF,'00FF'X       ,B4
          2 00055B       00FF

      883     9523
      884     9524    3            KN$LDCT.RESCOD = K$SQDP_INIT_ACK.RESCODE;

   9524   2 00055C  DC86                                 LDB,B5   ,B6
          2 00055D  CCC6 0008                            LDB,B4   8,B6
          2 00055F  D844 0005                            LDR,R5   5,B4
          2 000561  5004                                 SOL,R5   4
          2 000562  DAC5 0004                            SRM,R5,'00F0'X    4,B5
          2 000564       00F0

      885     9525    3            KN$NETPARM.RECTYPE = K$SQDP_INIT_ACK.DATA_HDR.TYPE;

   9525   2 000565  DCC6 0008                            LDB,B5   8,B6
          2 000567  D845 0006                            LDR,R5   6,B5
          2 000569  DF46 0013                            STR,R5   19,B6

      886     9526    3            KN$NETPARM.FUNCTION = %KN_FCN_INIT_ACK;

   9526   2 00056B  4C02                                 LDV,R4   2
          2 00056C  CF46 0014                            STR,R4   20,B6

      887     9527    3            KN$NETPARM.FPT$ = ADDR(K$SQDP_INIT_ACK.REASON);

PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:111  
   9527   2 00056E  CBC5 0004                            LAB,B4   4,B5
          2 000570  CFC6 0019                            STB,B4   25,B6

      888     9528
      889     9529    3            IF KN$LDCT.USER_ENTRY$ ~= ENTADDR(NIL)

   9529   2 000572  BC86                                 LDB,B3   ,B6
          2 000573  ACC3 000C                            LDB,B2   12,B3
          2 000575  AD80 0000 0000  03                   CMB,B2   0
          2 000578  0901 014B                            BE       s:9664,PREL

      890     9530    3            THEN CALL KN$LDCT.USER_ENTRY$ (KN$NETPARM)

   9530   2 00057A  BFC7 0048                            STB,B3   LINK$+4,AUTO
          2 00057C  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          2 00057E  DCC7 0048                            LDB,B5   LINK$+4,AUTO
          2 000580  9CC5 000C                            LDB,B1   12,B5
          2 000582  CBF0 0100                            LAB,B4   256,IMO
          2 000584  E381                                 LNJ,B6   ,B1
          2 000585       0003                            DC       s:9532,PREL
          2 000586  0F81 000A                            B        s:9533+3,PREL

      891     9531    4                 WHENALTRETURN DO;

      892     9532    4                      KN$LDCT.STATE = %KN_ST_WIAFR;

   9532   2 000588  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          2 00058A  DC86                                 LDB,B5   ,B6
          2 00058B  6C01                                 LDV,R6   1
          2 00058C  EA85                                 SRM,R6,'00FF'X    ,B5
          2 00058D       00FF

      893     9533    4                      ALTRETURN;

   9533   2 00058E  C380 0000 0000  xent                 LNJ,B4   X6A_AALT
          2 000591  0F81 0132                            B        s:9664,PREL

PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:112  
      894     9534    4                      END;
      895     9535
      896     9536
      897     9537        %EJECT;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:113  
      898     9538        /*F* NAME: KNS$RECV - Function KN_FCN_DATA and Type Terminate Request.
      899     9539
      900     9540        If the state of the LDCT is not active or waiting term ack from remote,
      901     9541        we screech.
      902     9542
      903     9543        The FPT_TERM that has been passed to us is updated with the information
      904     9544        from the session header.
      905     9545
      906     9546        If this is not an entry from KNS$SEND, the user data header info in
      907     9547        KN$NETPARM are updated to reflect the stripping off of the session
      908     9548        header.
      909     9549
      910     9550        A call is then made to LDCT.USER_ENTRY$ with KN$NETPARM.FUNCTION set to
      911     9551        TERM.
      912     9552        On return the LDCT state is set to waiting term ack from local.
      913     9553
      914     9554        */
      915     9555
      916     9556    3          CASE (%K_SQDP_TERM);             /* Terminate connection               */

      917     9557
      918     9558    3            IF KN$LDCT.STATE ~= %KN_ST_ACTIVE AND

   9558   2 000593  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          2 000595  DC86                                 LDB,B5   ,B6
          2 000596  E805                                 LDR,R6   ,B5
          2 000597  E570 00FF                            AND,R6   255,IMO
          2 000599  6D05                                 CMV,R6   5
          2 00059A  0901 0007                            BE       s:9562,PREL
          2 00059C  6D03                                 CMV,R6   3
          2 00059D  0901 0004                            BE       s:9562,PREL

      919     9559    3              KN$LDCT.STATE ~= %KN_ST_WTAFR/*waiting term ack from remote*/
      920     9560    3            THEN CALL LDCT_SCREECH;

   9560   2 00059F  E3C0 014B                            LNJ,B6   s:0,PREL
          2 0005A1       0001                            DC       s:9562,PREL
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:114  

      921     9561
      922     9562    3            FPT$TERM = '0'B;

   9562   2 0005A2  5C08                                 LDV,R5   8
          2 0005A3  0021                                 ALR      ;
          2 0005A4       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          2 0005A6       4007 0026                                ALPHANUM(FPT$TERM,AUTO,,R5,FILL)

      923     9563    3            FPT$TERM.RLCID = K$SQDP_TERM.RLCID;

   9563   2 0005A8  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          2 0005AA  437F                                 CSYNC    s:9563+1,SPREL
          2 0005AB  DCC6 0008                            LDB,B5   8,B6
          2 0005AD  8CC5 0002                            LDI      2,B5
          2 0005AF  8D47 0026                            SDI      FPT$TERM,AUTO

      924     9564    3            FPT$TERM.REASON = K$SQDP_TERM.REASON;

   9564   2 0005B1  DCC6 0008                            LDB,B5   8,B6
          2 0005B3  C845 0004                            LDR,R4   4,B5
          2 0005B5  CF47 0028                            STR,R4   FPT$TERM+2,AUTO

      925     9565
      926     9566        /* If this is not local turnaround point to UHDR$.
      927     9567        */
      928     9568    3            IF LOCAL_TURNAROUND = 0

   9568   2 0005B7  B847 000C                            LDR,R3   LOCAL_TURNAROUND,AUTO
          2 0005B9  3981 000F                            BNEZ,R3  s:9575,PREL

      929     9569    4            THEN DO;

      930     9570    4                 KN$NETPARM.UHDR$ = PINCRC(KN$NETPARM.SHDR$,SIZEC(K$SQDP_TERM));

   9570   2 0005BB  DCC6 0008                            LDB,B5   8,B6
          2 0005BD  CBC5 0007                            LAB,B4   7,B5
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:115  
          2 0005BF  CFC6 0005                            STB,B4   5,B6

      931     9571    4                 KN$NETPARM.UHDRSZ = K$SQDP_TERM.DATA_HDR.LENGTH;

   9571   2 0005C1  E845 0006                            LDR,R6   6,B5
          2 0005C3  EF46 0007                            STR,R6   7,B6

      932     9572    4                 KN$NETPARM.RECTYPE = K$SQDP_TERM.DATA_HDR.TYPE;

   9572   2 0005C5  C845 0005                            LDR,R4   5,B5
          2 0005C7  CF46 0013                            STR,R4   19,B6

      933     9573    4                 END;

      934     9574
      935     9575    3            IF KN$LDCT.USER_ENTRY$ ~= ENTADDR(NIL)

   9575   2 0005C9  DC86                                 LDB,B5   ,B6
          2 0005CA  CCC5 000C                            LDB,B4   12,B5
          2 0005CC  CD80 0000 0000  03                   CMB,B4   0
          2 0005CF  0901 00F4                            BE       s:9664,PREL

      936     9576    3            THEN IF KN$LDCT.STATE = %KN_ST_WTAFR

   9576   2 0005D1  E805                                 LDR,R6   ,B5
          2 0005D2  E570 00FF                            AND,R6   255,IMO
          2 0005D4  6D03                                 CMV,R6   3
          2 0005D5  0981 000E                            BNE      s:9583,PREL

      937     9577    4                 THEN DO;

      938     9578    4                      KN$NETPARM.FUNCTION = %KN_FCN_TERM_ACK;

   9578   2 0005D7  4C04                                 LDV,R4   4
          2 0005D8  CF46 0014                            STR,R4   20,B6

      939     9579    4                      CALL KN$LDCT.USER_ENTRY$(KN$NETPARM) ALTRET(DO_ALTRT);
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:116  

   9579   2 0005DA  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          2 0005DC  9CC5 000C                            LDB,B1   12,B5
          2 0005DE  CBF0 0100                            LAB,B4   256,IMO
          2 0005E0  E381                                 LNJ,B6   ,B1
          2 0005E1       FC61                            DC       s:9073,PREL

      940     9580    4                      END;

   9580   2 0005E2  0F81 00E1                            B        s:9664,PREL

      941     9581
      942     9582    4                 ELSE DO;

      943     9583    4                      KN$NETPARM.FUNCTION = %KN_FCN_TERM;

   9583   2 0005E4  4C03                                 LDV,R4   3
          2 0005E5  CF46 0014                            STR,R4   20,B6

      944     9584    4                      KN$NETPARM.FPT$ = ADDR(FPT$TERM);

   9584   2 0005E7  CBC7 0026                            LAB,B4   FPT$TERM,AUTO
          2 0005E9  CFC6 0019                            STB,B4   25,B6

      945     9585    4                      CALL KN$LDCT.USER_ENTRY$(KN$NETPARM) ALTRET(DO_ALTRT);

   9585   2 0005EB  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          2 0005ED  9CC5 000C                            LDB,B1   12,B5
          2 0005EF  CBF0 0100                            LAB,B4   256,IMO
          2 0005F1  E381                                 LNJ,B6   ,B1
          2 0005F2       FC50                            DC       s:9073,PREL

      946     9586    4                      KN$LDCT.STATE = %KN_ST_WTAFL;

   9586   2 0005F3  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          2 0005F5  DC86                                 LDB,B5   ,B6
          2 0005F6  6C04                                 LDV,R6   4
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:117  
          2 0005F7  EA85                                 SRM,R6,'00FF'X    ,B5
          2 0005F8       00FF

      947     9587    4                      END;

      948     9588
      949     9589    3            END/*do case(data_hdr.type)*/;

   9589   2 0005F9  0F81 00CA                            B        s:9664,PREL

      950     9590        %EJECT;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:118  
      951     9591
      952     9592        /*F* NAME: KNS$RECV - Function KN_FCN_TERM
      953     9593
      954     9594        An LDCT is allocated in case we need to wait for CQ space.
      955     9595        USER_ENTRY$ in this LDCT is set to the address of KNS$TERM and
      956     9596        RLCID.NODE is set to the number of the node that has gone down.
      957     9597
      958     9598        We then run through all the currently allocated APE, SSN and/or QDP LDCTs
      959     9599        looking for those whose RLCID.NODE matches that of the terminating node.
      960     9600        If any are found with the LDCT state of active, waiting init ack from remote,
      961     9601        or waiting term ack from remote the routine in USER_ENTRY$ is called.
      962     9602        */
      963     9603    2       CASE (%KN_FCN_TERM);

      964     9604
      965     9605    2         FPT$TERM.REASON = %KN_TERM_REASON_NTRNSPRT;

   9605   2 0005FB  4C03                                 LDV,R4   3
          2 0005FC  CF47 0028                            STR,R4   FPT$TERM+2,AUTO

      966     9606
      967     9607    2         CALL KNA$GETLDCT(KN$NETPARM.LDCT$);

   9607   2 0005FE  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          2 000600  CBF0 0100                            LAB,B4   256,IMO
          2 000602  E380 0000 0000  xent                 LNJ,B6   KNA$GETLDCT
          2 000605       0001                            DC       s:9609,PREL

      968     9608
      969     9609    2         KN$NETPARM.LDCT$->KN$LDCT.RLCID.NODE = KN$NETPARM.NODE;

   9609   2 000606  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          2 000608  DC86                                 LDB,B5   ,B6
          2 000609  E846 0015                            LDR,R6   21,B6
          2 00060B  E7C5 0001                            STH,R6   1,B5

      970     9610    2         KN$NETPARM.LDCT$->KN$LDCT.USER_ENTRY$ = ENTADDR(KNS$TERM);
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:119  

   9610   2 00060D  DC86                                 LDB,B5   ,B6
          2 00060E  CBC0 00D5                            LAB,B4   s:9688,PREL
          2 000610  CFC5 000C                            STB,B4   12,B5

   9610   2                              TERM            null
      971     9611
      972     9612    2   TERM: ;
      973     9613    2         KN$NETPARM.SLDCT$ = KN$NETPARM.LDCT$;

   9613   2 000612  ECC7 0004            TERM            LDB,B6   @KN$NETPARM,AUTO
          2 000614  DC86                                 LDB,B5   ,B6
          2 000615  DFC6 0017                            STB,B5   23,B6

      974     9614
      975     9615    3         DO TEMP = 1 TO KN_LDCT_MAX#;

   9615   2 000617  6C01                                 LDV,R6   1
          2 000618  EF47 003D                            STR,R6   TEMP,AUTO
          2 00061A  0F81 008C                            B        s:9653+2,PREL

      976     9616    3              KN$NETPARM.LDCT$ = KN$DCT$(TEMP);

   9616   2 00061C  EC80 0000 0000  xsym                 LDB,B6   KN_DCT$$
          2 00061F  B847 003D                            LDR,R3   TEMP,AUTO
          2 000621  DCB6                                 LDB,B5   ,B6,R3
          2 000622  CCC7 0004                            LDB,B4   @KN$NETPARM,AUTO
          2 000624  DF84                                 STB,B5   ,B4

      977     9617
      978     9618    3              IF KN$DCT$(TEMP) ~= ADDR(NIL)

   9618   2 000625  EC80 0000 0000  xsym                 LDB,B6   KN_DCT$$
          2 000628  8DB6                                 CMN      ,B6,R3
          2 000629  0901 007B                            BE       s:9653,PREL

      979     9619    3              THEN IF KN$LDCT.RLCID.NODE = KN$NETPARM.SLDCT$->KN$LDCT.RLCID.NODE
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:120  

   9619   2 00062B  BCC4 0017                            LDB,B3   23,B4
          2 00062D  E2C5 0001                            LLH,R6   1,B5
          2 00062F  D2C3 0001                            LLH,R5   1,B3
          2 000631  E955                                 CMR,R6   R5
          2 000632  0981 0072                            BNE      s:9653,PREL

      980     9620    3                   THEN IF ( (KN$LDCT.CONN_TYPE = %KN_CNTYPE_SESS

   9620   2 000634  C285                                 LLH,R4   ,B5
          2 000635  4D02                                 CMV,R4   2
          2 000636  0901 0004                            BE       s:9620+7,PREL
          2 000638  4D01                                 CMV,R4   1
          2 000639  0981 0007                            BNE      s:9620+13,PREL
          2 00063B  A844 0011                            LDR,R2   17,B4
          2 00063D  A945 0003                            CMR,R2   3,B5
          2 00063F  0901 0004                            BE       s:9625,PREL
          2 000641  4D05                                 CMV,R4   5
          2 000642  0981 0062                            BNE      s:9653,PREL

      981     9621    3                          OR KN$LDCT.CONN_TYPE = %KN_CNTYPE_APE)
      982     9622    3                          AND KN$NETPARM.TCTX_ID = KN$LDCT.TRANSPORT_ID )
      983     9623    3                          OR KN$LDCT.CONN_TYPE = %KN_CNTYPE_QDP
      984     9624    4                        THEN DO;

      985     9625    4                             FPT$TERM.RLCID = '0'B;

   9625   2 000644  8747 0026                            CL       FPT$TERM,AUTO
          2 000646  8747 0027                            CL       FPT$TERM+1,AUTO

      986     9626    4                             KN$NETPARM.FPT$ = ADDR(FPT$TERM);

   9626   2 000648  DBC7 0026                            LAB,B5   FPT$TERM,AUTO
          2 00064A  DFC4 0019                            STB,B5   25,B4

      987     9627
      988     9628    5                             DO CASE (KN$LDCT.STATE);
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:121  

   9628   2 00064C  BC84                                 LDB,B3   ,B4
          2 00064D  A803                                 LDR,R2   ,B3
          2 00064E  A570 00FF                            AND,R2   255,IMO
          2 000650  2D06                                 CMV,R2   6
          2 000651  0281 0053                            BGE      s:9653,PREL
          2 000653  9820 0000 0659  02                   LDR,R1   s:9628+13,R2
          2 000656  8390 0000 065F  02                   JMP      s:9632,R1
          2 000659       0046                            DC       s:9653,PREL
          2 00065A       0017                            DC       s:9637,PREL
          2 00065B       0043                            DC       s:9649,PREL
          2 00065C       002D                            DC       s:9642,PREL
          2 00065D       003E                            DC       s:9646,PREL
          2 00065E       0000                            DC       s:9632,PREL

      989     9629    5                              CASE (%KN_ST_NULL,%KN_ST_WTAFLNT);

      990     9630
      991     9631    5                              CASE (%KN_ST_ACTIVE);

      992     9632    5                                KN$NETPARM.FUNCTION = %KN_FCN_TERM;

   9632   2 00065F  6C03                                 LDV,R6   3
          2 000660  EF44 0014                            STR,R6   20,B4

      993     9633    5                                CALL KN$LDCT.USER_ENTRY$ (KN$NETPARM);

   9633   2 000662  BFC7 0048                            STB,B3   LINK$+4,AUTO
          2 000664  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          2 000666  DCC7 0048                            LDB,B5   LINK$+4,AUTO
          2 000668  9CC5 000C                            LDB,B1   12,B5
          2 00066A  CBF0 0100                            LAB,B4   256,IMO
          2 00066C  E381                                 LNJ,B6   ,B1
          2 00066D       0001                            DC       s:9634,PREL

      994     9634    5                                KN$LDCT.STATE = %KN_ST_WTAFLNT;

PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:122  
   9634   2 00066E  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          2 000670  DC86                                 LDB,B5   ,B6
          2 000671  6C06                                 LDV,R6   6
          2 000672  EA85                                 SRM,R6,'00FF'X    ,B5
          2 000673       00FF
          2 000674  0F81 0030                            B        s:9653,PREL

      995     9635
      996     9636    5                              CASE (%KN_ST_WIAFR);

      997     9637    5                                KN$NETPARM.FUNCTION = %KN_FCN_INIT_ACK;

   9637   2 000676  6C02                                 LDV,R6   2
          2 000677  EF44 0014                            STR,R6   20,B4

      998     9638    5                                KN$NETPARM.FPT$ = ADDR(FPT_NAK_NOROUTE);

   9638   2 000679  AB80 0000 0009  01                   LAB,B2   FPT_NAK_NOROUTE
          2 00067C  AFC4 0019                            STB,B2   25,B4

      999     9639    5                                CALL KN$LDCT.USER_ENTRY$ (KN$NETPARM);

   9639   2 00067E  BFC7 0048                            STB,B3   LINK$+4,AUTO
          2 000680  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          2 000682  DCC7 0048                            LDB,B5   LINK$+4,AUTO
          2 000684  9CC5 000C                            LDB,B1   12,B5
          2 000686  CBF0 0100                            LAB,B4   256,IMO
          2 000688  E381                                 LNJ,B6   ,B1
          2 000689       0001                            DC       s:9639+12,PREL
          2 00068A  0F81 001A                            B        s:9653,PREL

     1000     9640
     1001     9641    5                              CASE (%KN_ST_WTAFR);

     1002     9642    5                                KN$NETPARM.FUNCTION = %KN_FCN_TERM_ACK;

   9642   2 00068C  6C04                                 LDV,R6   4
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:123  
          2 00068D  EF44 0014                            STR,R6   20,B4

     1003     9643    5                                CALL KN$LDCT.USER_ENTRY$(KN$NETPARM);

   9643   2 00068F  BFC7 0048                            STB,B3   LINK$+4,AUTO
          2 000691  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          2 000693  DCC7 0048                            LDB,B5   LINK$+4,AUTO
          2 000695  9CC5 000C                            LDB,B1   12,B5
          2 000697  CBF0 0100                            LAB,B4   256,IMO
          2 000699  E381                                 LNJ,B6   ,B1
          2 00069A       0001                            DC       s:9643+12,PREL
          2 00069B  0F81 0009                            B        s:9653,PREL

     1004     9644
     1005     9645    5                              CASE (%KN_ST_WTAFL);

     1006     9646    5                                KN$LDCT.STATE = %KN_ST_WTAFLNT;

   9646   2 00069D  6C06                                 LDV,R6   6
          2 00069E  EA83                                 SRM,R6,'00FF'X    ,B3
          2 00069F       00FF
          2 0006A0  0F81 0004                            B        s:9653,PREL

     1007     9647
     1008     9648    5                              CASE (%KN_ST_WIAFL);

     1009     9649    5                                KN$LDCT.STATE = %KN_ST_WTIAFLNT;

   9649   2 0006A2  6C07                                 LDV,R6   7
          2 0006A3  EA83                                 SRM,R6,'00FF'X    ,B3
          2 0006A4       00FF

     1010     9650
     1011     9651    5                                END/*do case(ldct.state)*/;

     1012     9652    4                             END;

PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:124  
     1013     9653    3              END/*run through all the ldcts*/;

   9653   2 0006A5  8AC7 003D                            INC      TEMP,AUTO
          2 0006A7  E847 003D                            LDR,R6   TEMP,AUTO
          2 0006A9  6801 FF72                            BLZ,R6   s:9616,PREL
          2 0006AB  E900 0000 0000  xsym                 CMR,R6   KN_LDCT_MAX#
          2 0006AE  0381 FF6D                            BLE      s:9616,PREL

     1014     9654
     1015     9655    2         CALL KNA$RLSLDCT(KN$NETPARM.SLDCT$);

   9655   2 0006B0  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          2 0006B2  DBC6 0017                            LAB,B5   23,B6
          2 0006B4  DFC7 0048                            STB,B5   LINK$+4,AUTO
          2 0006B6  BBC7 0048                            LAB,B3   LINK$+4,AUTO
          2 0006B8  CBF0 0100                            LAB,B4   256,IMO
          2 0006BA  E380 0000 0000  xent                 LNJ,B6   KNA$RLSLDCT
          2 0006BD       0001                            DC       s:9656,PREL

     1016     9656    2         RETURN;

   9656   2 0006BE  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1017     9657
     1018     9658        %EJECT;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:125  
     1019     9659    2       CASE (ELSE);

     1020     9660    2         CALL BADFNC_SCREECH;

   9660   2 0006C1  E3C0 0057                            LNJ,B6   s:0,PREL
          2 0006C3       0001                            DC       s:9664,PREL

     1021     9661
     1022     9662    2         END/*do case(function)*/;

     1023     9663        %EJECT;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:126  
     1024     9664    1      IF LOCAL_TURNAROUND = 0 THEN RETURN;

   9664   2 0006C4  E847 000C                            LDR,R6   LOCAL_TURNAROUND,AUTO
          2 0006C6  6981 0004                            BNEZ,R6  s:9666,PREL

   9664   2 0006C8  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1025     9665
     1026     9666    1      KN$NETPARM.LDCT$ = SAVE_LDCT$;

   9666   2 0006CB  ECC7 003E                            LDB,B6   SAVE_LDCT$,AUTO
          2 0006CD  DCC7 0004                            LDB,B5   @KN$NETPARM,AUTO
          2 0006CF  EF85                                 STB,B6   ,B5

     1027     9667
     1028     9668    1      IF LOCAL_TURNAROUND = %KN_FCN_DATA THEN GOTO DATA_RETURN;

   9668   2 0006D0  6D05                                 CMV,R6   5
          2 0006D1  0901 FB05                            BE       s:8993,PREL

     1029     9669
     1030     9670    1      IF LOCAL_TURNAROUND = %KN_FCN_INIT THEN GOTO INIT_RETURN;

   9670   2 0006D3  6D01                                 CMV,R6   1
          2 0006D4  0901 FAB5                            BE       s:8937,PREL

     1031     9671
     1032     9672    1      IF LOCAL_TURNAROUND = %KN_FCN_INIT_ACK THEN GOTO INIT_ACK_RETURN;

   9672   2 0006D6  6D02                                 CMV,R6   2
          2 0006D7  0901 FBF9                            BE       s:9153,PREL

     1033     9673
     1034     9674    1      IF LOCAL_TURNAROUND = %KN_FCN_TERM THEN GOTO TERM_RETURN;

   9674   2 0006D9  6D03                                 CMV,R6   3
          2 0006DA  0901 FB6A                            BE       s:9077,PREL
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:127  

     1035     9675
     1036     9676    1      IF LOCAL_TURNAROUND = %KN_FCN_TERM_ACK THEN GOTO TERM_ACK_RETURN;

   9676   2 0006DC  6D04                                 CMV,R6   4
          2 0006DD  0901 FC45                            BE       s:9215,PREL

     1037     9677
     1038     9678    1      CALL PRTCL_SCREECH;             /*local turnaround is somehow screwed up*/

   9678   2 0006DF  E3C0 0022                            LNJ,B6   s:0,PREL
          2 0006E1       0001                            DC       s:9678+3,PREL
          2 0006E2  0F81 0006                            B        s:9689,PREL

     1039     9679        %EJECT;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:128  
     1040     9680        /* * NAME: KNS$TERM
     1041     9681
     1042     9682        The KNS$TERM entry point is set in the LDCT.USER_ENTRY$ of an LDCT
     1043     9683        that is allocated in the beginning of the logic to terminate all
     1044     9684        session connections whose other endpoint is on a node that has
     1045     9685        terminated.  Refer to KNS$RECV - Function KN_FCN_TERM.
     1046     9686        */
     1047     9687
     1048     9688    1   KNS$TERM: ENTRY(KN$NETPARM) ALTRET;

   9688   2 0006E4  D380 0000 0000  xent KNS$TERM        LNJ,B5   X6A_AUTO_1
          2 0006E7       004A 0001                       DC       74,1

     1049     9689    1      GOTO TERM;

   9689   2 0006E9  0F81 FF28                            B        s:9610,PREL

     1050     9690
     1051     9691        %EJECT;
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:129  
     1052     9692
     1053     9693    1   LDCT_SCREECH: PROC;

   9693   2 0006EB  EFC7 0046            LDCT_SCREECH    STB,B6   LINK$+2,AUTO

     1054     9694    2      KNS_SSN_SCREECH_COUNT = KNS_SSN_SCREECH_COUNT +1;

   9694   2 0006ED  8A80 0000 0001  00                   INC      KNS_SSN_SCREECH_COUNT

     1055     9695
     1056     9696    2      IF KNS_SSN_SCREECH ~= 0

   9696   2 0006F0  E800 0000 0000  00                   LDR,R6   KNS_SSN_SCREECH
          2 0006F3  6901 000A                            BEZ,R6   s:9705,PREL

     1057     9697    3      THEN DO;

     1058     9698    3           CALL SCREECH(ILSTTRAN);

   9698   2 0006F5  BB80 0000 0002  03                   LAB,B3   +2
          2 0006F8  CBF0 0100                            LAB,B4   256,IMO
          2 0006FA  E380 0000 0000  xent                 LNJ,B6   SCREECH
          2 0006FD       0001                            DC       s:9705,PREL

     1059     9699    3           END;

     1060     9700
     1061     9701        /*S* SCREECH_CODE: KNS-S$ILSTRAN
     1062     9702             TYPE: SCREECH
     1063     9703             MESSAGE: Illegal state transition.
     1064     9704        */
     1065     9705    2   END LDCT_SCREECH;

   9705   2 0006FE  ECC7 0046                            LDB,B6   LINK$+2,AUTO
          2 000700  C3C6 0001                            LNJ,B4   1,B6

     1066     9706
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:130  
     1067     9707
     1068     9708
     1069     9709    1   PRTCL_SCREECH: PROC;

   9709   2 000702  EFC7 0046            PRTCL_SCREECH   STB,B6   LINK$+2,AUTO

     1070     9710    2      KNS_SSN_SCREECH_COUNT = KNS_SSN_SCREECH_COUNT +1;

   9710   2 000704  8A80 0000 0001  00                   INC      KNS_SSN_SCREECH_COUNT

     1071     9711
     1072     9712    2      IF KNS_SSN_SCREECH ~= 0

   9712   2 000707  E800 0000 0000  00                   LDR,R6   KNS_SSN_SCREECH
          2 00070A  6901 000A                            BEZ,R6   s:9721,PREL

     1073     9713    3      THEN DO;

     1074     9714    3           CALL SCREECH(PRTCLERR);

   9714   2 00070C  BB80 0000 0004  03                   LAB,B3   +4
          2 00070F  CBF0 0100                            LAB,B4   256,IMO
          2 000711  E380 0000 0000  xent                 LNJ,B6   SCREECH
          2 000714       0001                            DC       s:9721,PREL

     1075     9715    3           END;

     1076     9716
     1077     9717        /*S* SCREECH_CODE: KNS-S$PRTCLERR
     1078     9718             TYPE: SCREECH
     1079     9719             MESSAGE: Session QDP Protocol Error.
     1080     9720        */
     1081     9721    2   END PRTCL_SCREECH;

   9721   2 000715  ECC7 0046                            LDB,B6   LINK$+2,AUTO
          2 000717  C3C6 0001                            LNJ,B4   1,B6

PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:131  
     1082     9722
     1083     9723    1   BADFNC_SCREECH: PROC;

   9723   2 000719  EFC7 0046            BADFNC_SCREECH  STB,B6   LINK$+2,AUTO

     1084     9724    2      CALL SCREECH(BADFNC);

   9724   2 00071B  BB80 0000 0006  03                   LAB,B3   +6
          2 00071E  CBF0 0100                            LAB,B4   256,IMO
          2 000720  E380 0000 0000  xent                 LNJ,B6   SCREECH
          2 000723       0001                            DC       s:9730,PREL

     1085     9725
     1086     9726        /*S* SCREECH_CODE: KNS-S$BADFNC
     1087     9727             TYPE: SCREECH
     1088     9728             MESSAGE: Bad function passed to Session
     1089     9729        */
     1090     9730    2   END BADFNC_SCREECH;

   9730   2 000724  ECC7 0046                            LDB,B6   LINK$+2,AUTO
          2 000726  C3C6 0001                            LNJ,B4   1,B6
     1091     9731    1   END KNS$SEND;

PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:132  
--  Include file information  --

   K_REASON_C.:E05TOU  is referenced.
   K_RLCID_M.:E05TOU  is referenced.
   K_QDPHDRS_M.:E05TOU  is referenced.
   KNH_MACRO_C.:E05TOU  is referenced.
   KNN_NETWORK_M.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   KN_DATA_M.:E05TOU  is referenced.
   K_SCODE_C.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
      No diagnostics issued in procedure KNS$SEND.
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:133  

 **** Variables and constants ****

  ****  Section 000  Data  KNS$SEND

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w UBIN(16)    r     1 KNS_RPEAK_SHDRSZ           2-0-0/w UBIN(16)    r     1 KNS_SPEAK_SHDRSZ
     0-0-0/w UBIN(16)    r     1 KNS_SSN_SCREECH
     1-0-0/w UBIN(16)    r     1 KNS_SSN_SCREECH_COUNT

  ****  Section 001 RoData KNS$SEND

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w STRC(48)    r     1 BADFNC                     9-0-0/w STRC(96)    r     1 FPT_NAK_NOROUTE
     0-0-0/w STRC(48)    r     1 ILSTTRAN                   6-0-0/w STRC(48)    r     1 PRTCLERR

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @KN$NETPARM               2A-0-0/w STRC(304)   r     1 FPT$CONNECT
    26-0-0/w STRC(64)    r     1 FPT$TERM                   6-0-0/w UBIN(16)    r     1 FUNCTION
     E-0-0/c STRC(384)   r     1 HDR                       *0-0-0/w STRC(528)   r     1 KN$NETPARM
     9-0-0/w PTR         r     1 LDCT$                      B-0-0/w UBIN(16)    r     1 LDCTX
    44-0-0/w PTR         r     1 LINK$                      C-0-0/w SBIN(16)    r     1 LOCAL_TURNAROUND
    42-0-0/w PTR         r     1 ROUTE$                    3E-0-0/w PTR         r     1 SAVE_LDCT$
     7-0-0/w EPTR        r     1 SEND_ENTRY$                D-0-0/w UBIN(16)    r     1 SQDP_TYPE
    3D-0-0/w SBIN(16)    r     1 TEMP

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:134  

     0-0-0/w PTR         r     1 KNN_ROUTE$$                0-0-0/w UBIN(16)    r     1 KNT_DEFAULT_CHKSUM
     0-0-0/w UBIN(16)    r     1 KNT_DEFAULT_CLASS          0-0-0/w UBIN(16)    r     1 KNT_DEFAULT_EXTENDED
     0-0-0/w UBIN(16)    r     1 KNT_DEFAULT_QOS            0-0-0/w PTR         r     1 KN_DCT$$
     0-0-0/w UBIN(16)    r     1 KN_LDCT_MAX#               0-0-0/w UBIN(16)    r     1 KN_NODE#
     0-0-0/c STRC(64)    r     1 KN_NODE_BIN                0-0-0/c CHAR(8)     r     1 KN_NODE_TEXT

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(304)   r     1 FPT_CONNECT                0-0-0/w STRC(96)    r     1 FPT_CONNECT_ACK
     0-0-0/w STRC(64)    r     1 FPT_TERM                   0-0-0/c STRC(48)    r     1 K$SQDP_DATA
     0-0-0/c STRC(384)   r     1 K$SQDP_INIT                0-0-0/c STRC(128)   r     1 K$SQDP_INIT_ACK
     0-0-0/c STRC(112)   r     1 K$SQDP_TERM
     0-0-0/w PTR         r     1 KN$DCT$(0:0)
     0-0-0/w STRC(256)   r     1 KN$LDCT                    0-0-0/c STRC(608)   r     1 KNN$LINK
     0-0-0/w STRC(208)   r     1 KNN$ROUTE
     0-0-0/w PTR         r     1 KNN$ROUTE$(0:0)


   Procedure KNS$SEND requires 1832 words for executable code.
   Procedure KNS$SEND requires 74 words of local(AUTO) storage.

    No errors detected in file KNS$SESSION.:E05TSI    .
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:135  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:136  
          MINI XREF LISTING

BADFNC
      8130**DCL      9724<>CALL
BADFNC_SCREECH
      9723**PROC     9229--CALL     9660--CALL
CONNECT_NAK
      9405**LABEL    9390--GOTO     9398--GOTO
DATA_RETURN
      8993**LABEL    9668--GOTO
DO_ALTRT
      9075**LABEL    8940--CALLALT  8999--CALLALT  9127--CALLALT  9218--CALLALT  9358--CALLALT  9424--CALLALT
      9579--CALLALT  9585--CALLALT
FPT$CONNECT
      8696**DCL      9464<<ASSIGN   9472--ASSIGN
FPT$CONNECT.RESOURCE
      8702**DCL      9465<<ASSIGN
FPT$CONNECT.RLCID
      8732**DCL      9468<<ASSIGN
FPT$CONNECT.RLCID.GENERATION
      8732**DCL      8733--REDEF
FPT$CONNECT.RLCID.LDCTX
      8733**DCL      8733--REDEF
FPT$CONNECT.SPEED
      8735**DCL      9467<<ASSIGN
FPT$CONNECT.TERMINAL_ID
      8719**DCL      9466<<ASSIGN
FPT$CONNECT.TERMINAL_ID.TERM
      8721**DCL      8730--REDEF
FPT$CONNECT.USER.SYSID
      8734**DCL      9469<<ASSIGN
FPT$TERM
      8674**DCL      9562<<ASSIGN   9584--ASSIGN   9626--ASSIGN
FPT$TERM.REASON
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:137  
      8679**DCL      9564<<ASSIGN   9605<<ASSIGN
FPT$TERM.RLCID
      8678**DCL      9563<<ASSIGN   9625<<ASSIGN
FPT_CONNECT.CLASS
      6293**DCL      8885<<ASSIGN
FPT_CONNECT.RESOURCE
      6259**DCL      8915>>ASSIGN
FPT_CONNECT.RLCID
      6289**DCL      8859>>ASSIGN
FPT_CONNECT.RLCID.GENERATION
      6289**DCL      6290--REDEF
FPT_CONNECT.RLCID.LDCTX
      6290**DCL      6290--REDEF
FPT_CONNECT.SERVICE
      6292**DCL      8886<<ASSIGN
FPT_CONNECT.SPEED
      6292**DCL      8918>>ASSIGN
FPT_CONNECT.TERMINAL_ID
      6276**DCL      8917>>ASSIGN
FPT_CONNECT.TERMINAL_ID.TERM
      6278**DCL      6287--REDEF
FPT_CONNECT.TR_FLAGS
      6294**DCL      8884<<ASSIGN
FPT_CONNECT.TR_FLAGS.CHKSUM
      6299**DCL      8889<<ASSIGN
FPT_CONNECT.TR_FLAGS.EXTENDED
      6296**DCL      8891<<ASSIGN
FPT_CONNECT.USER.SYSID
      6291**DCL      8910>>ASSIGN
FPT_CONNECT_ACK.REASON
      6348**DCL      9121>>IF       9149>>ASSIGN   9165>>IF
FPT_CONNECT_ACK.UID.UID
      6374**DCL      6374--REDEF    6374--REDEF
FPT_NAK_NOROUTE
      8242**DCL      8937--ASSIGN   9125--ASSIGN   9638--ASSIGN
FPT_NAK_NOROUTE.UID.UID
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:138  
      8272**DCL      8272--REDEF    8272--REDEF
FPT_TERM.REASON
      6327**DCL      9062>>ASSIGN
FPT_TERM.RLCID
      6326**DCL      9061>>ASSIGN
FUNCTION
      8288**DCL      8787<<ASSIGN   8791>>IF       8805>>ASSIGN   8807>>IF       8810>>DOCASE   9261<<ASSIGN
      9268>>IF       9271>>DOCASE
GOT_DATATYPE_DATA
      9313**LABEL    9318--GOTO
HDR
      8340**DCL      8904--ASSIGN   8982--ASSIGN   9055--ASSIGN   9138--ASSIGN   9207--ASSIGN   9408--ASSIGN
HDR.RLCID.GENERATION
      8433**DCL      8440--REDEF
HDR.RLCID.LDCTX
      8462**DCL      8468--REDEF
HDR.TERMINAL_ID.TERM
      8564**DCL      8573--REDEF
ILSTTRAN
      8067**DCL      9698<>CALL
INIT_ACK_RETURN
      9153**LABEL    9672--GOTO
INIT_RETURN
      8937**LABEL    9670--GOTO
K$SQDP_DATA
      7608**DCL      8983--ASSIGN   9301--IF       9353--ASSIGN
K$SQDP_DATA.CNTRL
      7629**DCL      8987<<ASSIGN   9317>>IF
K$SQDP_DATA.LDCT
      7613**DCL      8985<<ASSIGN   9310>>ASSIGN
K$SQDP_DATA.LENGTH
      7670**DCL      8988<<ASSIGN   8990>>IF       8991>>ASSIGN   9354>>ASSIGN
K$SQDP_DATA.TYPE
      7640**DCL      8986<<ASSIGN   8995<<ASSIGN   9311>>IF       9320>>ASSIGN   9352>>ASSIGN
K$SQDP_INIT
      6673**DCL      8905--ASSIGN   9456--ASSIGN
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:139  
K$SQDP_INIT.CNTRL
      6694**DCL      8908<<ASSIGN
K$SQDP_INIT.DATA_HDR.LENGTH
      6958**DCL      8919<<ASSIGN   9457>>ASSIGN
K$SQDP_INIT.DATA_HDR.TYPE
      6942**DCL      8920<<ASSIGN   9458>>ASSIGN
K$SQDP_INIT.DEST_GENERATION
      6854**DCL      8914<<ASSIGN   9395>>IF
K$SQDP_INIT.LDCT
      6678**DCL      8909<<ASSIGN
K$SQDP_INIT.NODE_NAME
      6860**DCL      8916<<ASSIGN
K$SQDP_INIT.QDP
      6699**DCL      8922<<ASSIGN   8923<<ASSIGN
K$SQDP_INIT.RESOURCE
      6869**DCL      8915<<ASSIGN   9385>>IF       9385>>IF       9385>>IF       9465>>ASSIGN
K$SQDP_INIT.RLCID
      6759**DCL      9436>>ASSIGN
K$SQDP_INIT.RLCID.GENERATION
      6766**DCL      6773--REDEF    8912<<ASSIGN
K$SQDP_INIT.RLCID.LDCTX
      6795**DCL      6801--REDEF    8913<<ASSIGN   9407>>ASSIGN
K$SQDP_INIT.RLCID.NODE
      6761**DCL      8911<<ASSIGN
K$SQDP_INIT.SYSID
      6826**DCL      8910<<ASSIGN   9469>>ASSIGN
K$SQDP_INIT.TERMINAL_ID
      6895**DCL      8917<<ASSIGN   9466>>ASSIGN
K$SQDP_INIT.TERMINAL_ID.TERM
      6897**DCL      6906--REDEF
K$SQDP_INIT.TERMINAL_SPEED
      6846**DCL      8918<<ASSIGN   9467>>ASSIGN
K$SQDP_INIT.TYPE
      6705**DCL      8907<<ASSIGN
K$SQDP_INIT_ACK
      7037**DCL      9139--ASSIGN   9409--ASSIGN   9516--ASSIGN
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:140  
K$SQDP_INIT_ACK.CNTRL
      7058**DCL      9142<<ASSIGN   9411<<ASSIGN
K$SQDP_INIT_ACK.DATA_HDR.LENGTH
      7256**DCL      9144<<ASSIGN   9517>>ASSIGN
K$SQDP_INIT_ACK.DATA_HDR.TYPE
      7240**DCL      9145<<ASSIGN   9525>>ASSIGN
K$SQDP_INIT_ACK.LDCT
      7042**DCL      9143<<ASSIGN   9412<<ASSIGN
K$SQDP_INIT_ACK.REASON
      7179**DCL      9149<<ASSIGN   9413<<ASSIGN   9520>>IF       9527--ASSIGN
K$SQDP_INIT_ACK.RESCODE
      7204**DCL      9524>>ASSIGN
K$SQDP_INIT_ACK.RLCID
      7123**DCL      9512>>ASSIGN
K$SQDP_INIT_ACK.RLCID.GENERATION
      7130**DCL      7137--REDEF    9148<<ASSIGN
K$SQDP_INIT_ACK.RLCID.LDCTX
      7159**DCL      7165--REDEF    9146<<ASSIGN
K$SQDP_INIT_ACK.RLCID.NODE
      7125**DCL      9147<<ASSIGN
K$SQDP_INIT_ACK.TYPE
      7069**DCL      9141<<ASSIGN   9410<<ASSIGN
K$SQDP_TERM
      7330**DCL      9056--ASSIGN   9208--ASSIGN   9570--ASSIGN
K$SQDP_TERM.CNTRL
      7351**DCL      9059<<ASSIGN   9211<<ASSIGN
K$SQDP_TERM.DATA_HDR
      7518**DCL      9063<<ASSIGN   9213<<ASSIGN
K$SQDP_TERM.DATA_HDR.LENGTH
      7537**DCL      9571>>ASSIGN
K$SQDP_TERM.DATA_HDR.TYPE
      7521**DCL      9572>>ASSIGN
K$SQDP_TERM.LDCT
      7335**DCL      9060<<ASSIGN   9212<<ASSIGN
K$SQDP_TERM.REASON
      7476**DCL      9062<<ASSIGN   9564>>ASSIGN
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:141  
K$SQDP_TERM.RLCID
      7416**DCL      9061<<ASSIGN   9563>>ASSIGN
K$SQDP_TERM.RLCID.GENERATION
      7423**DCL      7430--REDEF
K$SQDP_TERM.RLCID.LDCTX
      7452**DCL      7458--REDEF
K$SQDP_TERM.TYPE
      7362**DCL      9058<<ASSIGN   9210<<ASSIGN
KN$DCT$
      6626**DCL      9310>>ASSIGN   9616>>ASSIGN   9618>>IF
KN$LDCT.CONN_TYPE
      6396**DCL      8796>>IF       8874>>IF       8878<<ASSIGN   8921>>IF       9420>>IF       9441<<ASSIGN
      9441>>ASSIGN   9447<<ASSIGN   9620>>IF       9620>>IF       9620>>IF
KN$LDCT.GENERATION
      6505**DCL      8912>>ASSIGN   9148>>ASSIGN   9395>>IF
KN$LDCT.LDCTX
      6537**DCL      8913>>ASSIGN   9146>>ASSIGN
KN$LDCT.RESCOD
      6514**DCL      9524<<ASSIGN
KN$LDCT.RLCID
      6428**DCL      8859<<ASSIGN   9436<<ASSIGN   9468>>ASSIGN   9512<<ASSIGN
KN$LDCT.RLCID.GENERATION
      6450**DCL      8914>>ASSIGN
KN$LDCT.RLCID.LDCTX
      6456**DCL      6463--REDEF    6471--REDEF    8909>>ASSIGN   8985>>ASSIGN   9060>>ASSIGN   9143>>ASSIGN
      9212>>ASSIGN
KN$LDCT.RLCID.NODE
      6434**DCL      8794>>ASSIGN   8863>>IF       8867>>ASSIGN   8868>>ASSIGN   8925>>IF       8993>>IF
      9067>>IF       9153>>IF       9215>>IF       9609<<ASSIGN   9619>>IF       9619>>IF
KN$LDCT.STATE
      6410**DCL      8853>>IF       8900<<ASSIGN   8931<<ASSIGN   8945<<ASSIGN   8980>>IF       9005>>IF
      9005>>IF       9040>>IF       9040>>IF       9045>>IF       9045>>IF       9053>>IF       9080<<ASSIGN
      9117>>IF       9119>>IF       9128<<ASSIGN   9166<<ASSIGN   9167<<ASSIGN   9192>>IF       9194<<ASSIGN
      9198>>IF       9224<<ASSIGN   9344>>IF       9347>>IF       9435<<ASSIGN   9507>>IF       9521<<ASSIGN
      9522<<ASSIGN   9532<<ASSIGN   9558>>IF       9558>>IF       9576>>IF       9586<<ASSIGN   9628>>DOCASE
      9634<<ASSIGN   9646<<ASSIGN   9649<<ASSIGN
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:142  
KN$LDCT.TRANSPORT_ID
      6490**DCL      6498--REDEF    8802>>ASSIGN   9437<<ASSIGN   9620>>IF
KN$LDCT.UID
      6520**DCL      6521--REDEF    6530--REDEF    9444<<ASSIGN   9444>>ASSIGN
KN$LDCT.USER#
      6613**DCL      9443<<ASSIGN   9443>>ASSIGN   9449<<ASSIGN
KN$LDCT.USER_ENTRY$
      6601**DCL      8939>>IF       8940>>CALL     9127>>CALL     9357>>IF       9358>>CALL     9442<<ASSIGN
      9442>>ASSIGN   9448<<ASSIGN   9474>>IF       9475>>CALL     9529>>IF       9530>>CALL     9575>>IF
      9579>>CALL     9585>>CALL     9610<<ASSIGN   9633>>CALL     9639>>CALL     9643>>CALL
KN$NETPARM
      6097**DCL        23--PROC     8893<>CALL     8928<>CALL     8940<>CALL     8999<>CALL     9072<>CALL
      9127<>CALL     9156<>CALL     9218<>CALL     9259--ENTRY    9358<>CALL     9424<>CALL     9475<>CALL
      9530<>CALL     9579<>CALL     9585<>CALL     9633<>CALL     9639<>CALL     9643<>CALL     9688--ENTRY
KN$NETPARM.ERRCODE
      6204**DCL      8789<<ASSIGN   8855<<ASSIGN   8932>>IF       8932>>IF       9009<<ASSIGN   9047<<ASSIGN
      9132<<ASSIGN   9200<<ASSIGN
KN$NETPARM.FPT$
      6216**DCL      6253--IMP-PTR  6322--IMP-PTR  6344--IMP-PTR  8859>>ASSIGN   8884>>ASSIGN   8885>>ASSIGN
      8886>>ASSIGN   8889>>ASSIGN   8891>>ASSIGN   8910>>ASSIGN   8915>>ASSIGN   8917>>ASSIGN   8918>>ASSIGN
      8937<<ASSIGN   9061>>ASSIGN   9062>>ASSIGN   9121>>IF       9125<<ASSIGN   9149>>ASSIGN   9165>>IF
      9472<<ASSIGN   9527<<ASSIGN   9584<<ASSIGN   9626<<ASSIGN   9638<<ASSIGN
KN$NETPARM.FUNCTION
      6192**DCL      8787>>ASSIGN   8792<<ASSIGN   8880<<ASSIGN   8895<<ASSIGN   8936<<ASSIGN   9124<<ASSIGN
      9261>>ASSIGN   9419<<ASSIGN   9471<<ASSIGN   9526<<ASSIGN   9578<<ASSIGN   9583<<ASSIGN   9632<<ASSIGN
      9637<<ASSIGN   9642<<ASSIGN
KN$NETPARM.LDCT$
      6098**DCL      6395--IMP-PTR  8794>>ASSIGN   8796>>IF       8802>>ASSIGN   8853>>IF       8859>>ASSIGN
      8863>>IF       8867>>ASSIGN   8868>>ASSIGN   8878>>ASSIGN   8900>>ASSIGN   8909>>ASSIGN   8912>>ASSIGN
      8913>>ASSIGN   8914>>ASSIGN   8921>>IF       8925>>IF       8931>>ASSIGN   8939>>IF       8940>>CALL
      8945>>ASSIGN   8980>>IF       8985>>ASSIGN   8993>>IF       9005>>IF       9005>>IF       9040>>IF
      9040>>IF       9045>>IF       9045>>IF       9053>>IF       9060>>ASSIGN   9067>>IF       9080>>ASSIGN
      9117>>IF       9119>>IF       9127>>CALL     9128>>ASSIGN   9143>>ASSIGN   9146>>ASSIGN   9148>>ASSIGN
      9153>>IF       9166>>ASSIGN   9167>>ASSIGN   9192>>IF       9194>>ASSIGN   9198>>IF       9212>>ASSIGN
      9215>>IF       9224>>ASSIGN   9297>>ASSIGN   9310<<ASSIGN   9311>>IF       9344>>IF       9347>>IF
      9357>>IF       9358>>CALL     9381>>ASSIGN   9395>>IF       9403<>CALL     9435>>ASSIGN   9436>>ASSIGN
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:143  
      9437>>ASSIGN   9441>>ASSIGN   9442>>ASSIGN   9443>>ASSIGN   9444>>ASSIGN   9447>>ASSIGN   9448>>ASSIGN
      9449>>ASSIGN   9468>>ASSIGN   9474>>IF       9475>>CALL     9477<>CALL     9478<<ASSIGN   9507>>IF
      9512>>ASSIGN   9521>>ASSIGN   9522>>ASSIGN   9524>>ASSIGN   9529>>IF       9530>>CALL     9532>>ASSIGN
      9558>>IF       9558>>IF       9575>>IF       9576>>IF       9579>>CALL     9585>>CALL     9586>>ASSIGN
      9607<>CALL     9609>>ASSIGN   9610>>ASSIGN   9613>>ASSIGN   9616<<ASSIGN   9619>>IF       9620>>IF
      9620>>IF       9620>>IF       9620>>IF       9628>>DOCASE   9633>>CALL     9634>>ASSIGN   9639>>CALL
      9643>>CALL     9646>>ASSIGN   9649>>ASSIGN   9666<<ASSIGN
KN$NETPARM.MSG$
      6104**DCL      6109--REDEF    9414<<ASSIGN
KN$NETPARM.MSGSZ
      6115**DCL      8919>>ASSIGN   8988>>ASSIGN   9144>>ASSIGN
KN$NETPARM.NHDR$
      6156**DCL      6157--REDEF
KN$NETPARM.NODE
      6199**DCL      8794<<ASSIGN   8867<<ASSIGN   9609>>ASSIGN
KN$NETPARM.RECTYPE
      6183**DCL      8920>>ASSIGN   8995>>ASSIGN   9145>>ASSIGN   9352<<ASSIGN   9458<<ASSIGN   9525<<ASSIGN
      9572<<ASSIGN
KN$NETPARM.SHDR$
      6134**DCL      6135--REDEF    6673--IMP-PTR  7037--IMP-PTR  7330--IMP-PTR  7608--IMP-PTR  8904<<ASSIGN
      8907>>ASSIGN   8908>>ASSIGN   8909>>ASSIGN   8910>>ASSIGN   8911>>ASSIGN   8912>>ASSIGN   8913>>ASSIGN
      8914>>ASSIGN   8915>>ASSIGN   8916>>ASSIGN   8917>>ASSIGN   8918>>ASSIGN   8919>>ASSIGN   8920>>ASSIGN
      8922>>ASSIGN   8923>>ASSIGN   8982<<ASSIGN   8985>>ASSIGN   8986>>ASSIGN   8987>>ASSIGN   8988>>ASSIGN
      8990>>IF       8991>>ASSIGN   8995>>ASSIGN   9055<<ASSIGN   9058>>ASSIGN   9059>>ASSIGN   9060>>ASSIGN
      9061>>ASSIGN   9062>>ASSIGN   9063>>ASSIGN   9138<<ASSIGN   9141>>ASSIGN   9142>>ASSIGN   9143>>ASSIGN
      9144>>ASSIGN   9145>>ASSIGN   9146>>ASSIGN   9147>>ASSIGN   9148>>ASSIGN   9149>>ASSIGN   9207<<ASSIGN
      9210>>ASSIGN   9211>>ASSIGN   9212>>ASSIGN   9213>>ASSIGN   9310>>ASSIGN   9311>>IF       9317>>IF
      9320>>ASSIGN   9352>>ASSIGN   9353>>ASSIGN   9354>>ASSIGN   9385>>IF       9385>>IF       9385>>IF
      9394>>IF       9395>>IF       9407>>ASSIGN   9408<<ASSIGN   9410>>ASSIGN   9411>>ASSIGN   9412>>ASSIGN
      9413>>ASSIGN   9436>>ASSIGN   9456>>ASSIGN   9457>>ASSIGN   9458>>ASSIGN   9465>>ASSIGN   9466>>ASSIGN
      9467>>ASSIGN   9469>>ASSIGN   9512>>ASSIGN   9516>>ASSIGN   9517>>ASSIGN   9520>>IF       9524>>ASSIGN
      9525>>ASSIGN   9527>>ASSIGN   9563>>ASSIGN   9564>>ASSIGN   9570>>ASSIGN   9571>>ASSIGN   9572>>ASSIGN
KN$NETPARM.SHDRSZ
      6140**DCL      8905<<ASSIGN   8983<<ASSIGN   9056<<ASSIGN   9139<<ASSIGN   9208<<ASSIGN   9265>>IF
      9266>>ASSIGN   9301>>IF       9409<<ASSIGN
KN$NETPARM.SLDCT$
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:144  
      6211**DCL      9613<<ASSIGN   9619>>IF       9655<>CALL
KN$NETPARM.TCTX_ID
      6167**DCL      8802<<ASSIGN   9437>>ASSIGN   9620>>IF
KN$NETPARM.THDR$
      6145**DCL      6146--REDEF
KN$NETPARM.UHDR$
      6120**DCL      6121--REDEF    9353<<ASSIGN   9415<<ASSIGN   9456<<ASSIGN   9516<<ASSIGN   9570<<ASSIGN
KN$NETPARM.UHDRSZ
      6129**DCL      8919>>ASSIGN   8988>>ASSIGN   9144>>ASSIGN   9354<<ASSIGN   9457<<ASSIGN   9517<<ASSIGN
      9571<<ASSIGN
KNA$GETLDCT
      8279**DCL-ENT  9403--CALL     9607--CALL
KNA$LOCATE_TCTX
      8281**DCL-ENT  8893--CALL
KNA$RLSLDCT
      8280**DCL-ENT  9477--CALL     9655--CALL
KNH$SEND
      8282**DCL-ENT  9448--ASSIGN
KNN$LINK.DEST.ADDRESS_N
      7953**DCL      7954--REDEF
KNN$LINK.LADR.ADDRESS_N
      7896**DCL      7897--REDEF
KNN$LINK.LDCT$
      7767**DCL      7774--REDEF    8871>>IF       8874>>IF
KNN$ROUTE.CURRENT_QOS
      7712**DCL      8874>>IF
KNN$ROUTE.LINK$
      7695**DCL      8869>>ASSIGN
KNN$ROUTE$
      7692**DCL      8868>>ASSIGN
KNN$SEND
      8283**DCL-ENT  8798--ASSIGN   8879--ASSIGN   9421--ASSIGN
KNN_ROUTE$$
      8020**DCL      7692--IMP-PTR  8868>>ASSIGN
KNS$TERM
      9688**ENTRY    9610--ASSIGN
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:145  
KNS_RPEAK_SHDRSZ
      8037**DCL      9265>>IF       9266<<ASSIGN
KNS_SPEAK_SHDRSZ
      8036**DCL      8990>>IF       8991<<ASSIGN
KNS_SSN_SCREECH
      8033**DCL      9696>>IF       9712>>IF
KNS_SSN_SCREECH_COUNT
      8034**DCL      9694<<ASSIGN   9694>>ASSIGN   9710<<ASSIGN   9710>>ASSIGN
KNT$SEND
      8284**DCL-ENT  8801--ASSIGN   9422--ASSIGN
KNT_DEFAULT_CHKSUM
      8027**DCL      8888>>IF
KNT_DEFAULT_CLASS
      8029**DCL      8885>>ASSIGN
KNT_DEFAULT_EXTENDED
      8028**DCL      8890>>IF
KNT_DEFAULT_QOS
      8030**DCL      8886>>ASSIGN
KN_DCT$$
      8019**DCL      6626--IMP-PTR  9310>>ASSIGN   9616>>ASSIGN   9618>>IF
KN_LDCT_MAX#
      8018**DCL      9615>>DOINDEX
KN_NODE#
      8021**DCL      8863>>IF       8865>>IF       8911>>ASSIGN   8925>>IF       8993>>IF       9067>>IF
      9147>>ASSIGN   9153>>IF       9215>>IF
KN_NODE_BIN
      8022**DCL      8025--REDEF
KN_NODE_TEXT
      8025**DCL      8916>>ASSIGN
LDCT$
      8290**DCL      9381<<ASSIGN   9383>>IF       9394>>IF       9420>>IF       9439>>IF       9441>>ASSIGN
      9442>>ASSIGN   9443>>ASSIGN   9444>>ASSIGN
LDCTX
      8291**DCL      9407<<ASSIGN   9412>>ASSIGN
LDCT_SCREECH
      9693**PROC     9348--CALL     9508--CALL     9560--CALL
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:146  
LINK$
      8757**DCL      7766--IMP-PTR  8869<<ASSIGN   8871>>IF       8871>>IF       8874>>IF
LOCAL_TURNAROUND
      8292**DCL      8805<<ASSIGN   9263<<ASSIGN   9350>>IF       9417>>IF       9428<<ASSIGN   9454>>IF
      9480>>IF       9514>>IF       9568>>IF       9664>>IF       9668>>IF       9670>>IF       9672>>IF
      9674>>IF       9676>>IF
NOT_READY_YET
      8923**LABEL    8865--GOTO     8872--GOTO     9482--GOTO
PRTCLERR
      8193**DCL      9714<>CALL
PRTCL_SCREECH
      9709**PROC     9303--CALL     9313--CALL     9323--CALL     9678--CALL
RECEIVE_DATA
      9297**LABEL    8926--GOTO     8996--GOTO     9069--GOTO     9154--GOTO     9216--GOTO     9269--GOTO
      9429--GOTO
ROUTE$
      8756**DCL      7694--IMP-PTR  8868<<ASSIGN   8869>>ASSIGN   8874>>IF
SAVE_LDCT$
      8753**DCL      9297<<ASSIGN   9478>>ASSIGN   9666>>ASSIGN
SCREECH
      8285**DCL-ENT  9698--CALL     9714--CALL     9724--CALL
SEND_DATA
      8980**LABEL    8808--GOTO
SEND_ENTRY$
      8289**DCL      8798<<ASSIGN   8801<<ASSIGN   8879<<ASSIGN   8928>>CALL     8999>>CALL     9072>>CALL
      9156>>CALL     9218>>CALL     9421<<ASSIGN   9422<<ASSIGN   9424>>CALL
SQDP_TYPE
      8293**DCL      9320<<ASSIGN   9322>>IF       9322>>IF       9325>>DOCASE
TEMP
      8752**DCL      9389<<ASSIGN   9397<<ASSIGN   9405<<ASSIGN   9413>>ASSIGN   9615<<DOINDEX  9616>>ASSIGN
      9618>>IF
TERM
      9610**LABEL    9689--GOTO
TERM_ACK_RETURN
      9215**LABEL    9676--GOTO
TERM_RETURN
PL6.E3A0      #001=KNS$SEND File=KNS$SESSION.:E05TSI                             WED 07/30/97 01:07 Page:147  
      9079**LABEL    9674--GOTO
