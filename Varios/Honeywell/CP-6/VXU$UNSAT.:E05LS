VERSION E05

PL6.E3A0      #001=VXU$UNSAT File=VXU$UNSAT.:E05TSI                              WED 07/30/97 08:47 Page:1    
        1        1        /*M* VXU$UNSAT - To write any & all unsatisfied references to the run unit file(per
                 1        node)*/
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=6,IND=4,CSU=2,EXM=0,ECU=2,MOC,DCI=4,CRT=4,CTI=8,CCC */
        8        8        /*F* NAME:        VXU$UNSAT
        9        9         PURPOSE:     To write any & all unsatisfied references to the run unit file(per nod
                 9        e).
       10       10             DESCRIPTION: VXU$UNSAT writes any and all unsatisfied references to the run
       11       11                          unit file on a node basis. Both the unsatisified list(s) and
       12       12                          name pools are written.                       */
       13       13
       14       14
       15       15        VXU$UNSAT: PROC;
       16       16
       17       17        %INCLUDE VX_INC_C;
       18    10733        %VX$NODE;

             10745    1   /*******************************************************************************
             10746    1   *                                                                              *
             10747    1   *                          VX$NODE                                                 *
             10748    1   *                                                                              *
             10749    1   *******************************************************************************/

             10765    1   DCL 1 VX$NODE      ALIGNED    BASED,
             10766    1         2 SON$ PTR /*(ADDR(NIL))*/, /* Son pointer                      */
             10767    1         2 BROTHER$ PTR /*(ADDR(NIL))*/, /* Brother pointer              */
             10768    1         2 FATHER$ PTR /*(ADDR(NIL))*/, /* Father pointer                */
             10769    1         2 PATH$ PTR /*(ADDR(NIL))*/, /* Path   pointer                  */
             10770    1         2 HEAD$       PTR /*(ADDR(NIL))*/, /* Head pointer to
             10771                              to list of file nodes for this node            */
             10772    1         2 TAIL$ PTR /*(ADDR(NIL))*/, /* Tail pointer to list            */
             10773    1         2 SHARED_LIB_HEAD$ PTR /*(ADDR(NIL))*/,
             10773                  /* Head pointer to shared library list */
PL6.E3A0      #001=VXU$UNSAT File=VXU$UNSAT.:E05TSI                              WED 07/30/97 08:47 Page:2    
             10774    1         2 LIB_HEAD$         PTR /*(ADDR(NIL))*/,
             10774                  /* Head pointer to list of shared libraries
             10775                                          which have been mapped to included libraries */
             10776    1         2 NUM          UBIN(36)  UNAL,    /* Node number                        */
             10777    1         2 DEPTH          UBIN(36)  UNAL,  /* Depth; ROOT=0*/
             10778    1         2 ADDR_START_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array            */
             10779    1         2 ADDR_START REDEF  ADDR_START_A,
             10780    1           3 RDATA       SBIN WORD,   /* First address for this node in data     */
             10781    1           3 RPROC       SBIN WORD,   /* First address for this node in proc     */
             10782    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             10783    1         2 ADDR_STOP_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array            */
             10784    1         2 ADDR_STOP  REDEF  ADDR_STOP_A,
             10785    1           3 RDATA       SBIN WORD,        /* Last address for this node in data */
             10786    1           3 RPROC       SBIN WORD,        /* Last address for this node in proc */
             10787    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             10788    1         2 START_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array           */
             10789    1         2 START_PAGE# REDEF START_PAGE#_A,
             10790    1           3 RDATA       SBIN WORD,   /* First page    for this node in data     */
             10791    1           3 RPROC       SBIN WORD,   /* First page    for this node in proc     */
             10792    1           3 ROS       SBIN WORD,          /* First page   for program in ros    */
             10793    1         2 STOP_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array*/
             10794    1         2 STOP_PAGE#  REDEF STOP_PAGE#_A,
             10795    1           3 RDATA       SBIN WORD,   /* Last  page    for this node in data     */
             10796    1           3 RPROC       SBIN WORD,   /* Last  page    for this node in proc     */
             10797    1           3 ROS       SBIN WORD,          /* Last  page   for program in ros    */
             10798    1         2 START_SC_ALL$ PTR /*(ADDR(NIL))*/,
             10798                  /* Starting pointer for common sections for this node */
             10799    1         2 STOP_SC_ALL$ PTR /*(ADDR(NIL))*/,
             10799                  /* Stopping pointer for common sections for this node */
             10800    1         2 L_START,
             10801    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             10802    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             10803    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             10804    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             10805    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             10806    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             10807    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
PL6.E3A0      #001=VXU$UNSAT File=VXU$UNSAT.:E05TSI                              WED 07/30/97 08:47 Page:3    
             10808    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             10809    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             10810    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             10811    1         2 L_START_A$(0:9)     REDEF L_START PTR,
             10812    1         2 L_STOP,
             10813    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             10814    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             10815    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             10816    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             10817    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             10818    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             10819    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             10820    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             10821    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             10822    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             10823    1         2 L_STOP_A$(0:9) REDEF   L_STOP    PTR,
             10824    1         2 L_SIZE,
             10825    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             10826    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             10827    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             10828    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             10829    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             10830    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             10831    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             10832    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             10833    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             10834    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             10835    1         2 L_SIZE_A(0:9)  REDEF   L_SIZE    UBIN,
             10836    1         2 L_PREV_SIZE,
             10837    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             10838    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             10839    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             10840    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             10841    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             10842    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             10843    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             10844    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
PL6.E3A0      #001=VXU$UNSAT File=VXU$UNSAT.:E05TSI                              WED 07/30/97 08:47 Page:4    
             10845    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             10846    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             10847    1         2 L_PREV_SIZE_A(0:9)  REDEF   L_PREV_SIZE    UBIN,
             10848    1         2 BIT_MAP                ALIGNED,
             10849    1           3 DATA                  ALIGNED,
             10850    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10851    1           3 RPROC                 ALIGNED,
             10852    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10853    1           3 ROS                   ALIGNED,
             10854    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10855    1         2 L_SC_START,
             10856    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             10857    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             10858    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             10859    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             10860    1         2 L_SC_START_A$(0:3)  REDEF L_SC_START PTR,
             10861    1         2 L_SC_STOP,
             10862    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             10863    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             10864    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             10865    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             10866    1         2 L_SC_STOP_A$(0:3)   REDEF L_SC_STOP  PTR,
             10867    1         2 PROMOTE_HEAD,
             10868    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             10869    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             10870    1         2 PROMOTE_HEAD_A$(0:1) REDEF PROMOTE_HEAD     PTR,
             10871    1         2 PROMOTE_TAIL,
             10872    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             10873    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             10874    1         2 PROMOTE_TAIL_A$(0:1) REDEF PROMOTE_TAIL     PTR,
             10875    1         2 HAVE_ASL          BIT(1)    UNAL /*('0'B)*/,
             10876    1         2 ALL_BLK_COM          BIT(1)    UNAL /*('0'B)*/,
             10877    1         2 USE_NODE          BIT(1)    UNAL /*('0'B)*/,
             10878    1         2 *                 BIT(33)   UNAL /*('0'B)*/,
             10879    1         2 BLANK_COMMON$     PTR       ALIGNED /*(ADDR(NIL))*/;

       19    10883        %E;
PL6.E3A0      #001=VXU$UNSAT File=VXU$UNSAT.:E05TSI                              WED 07/30/97 08:47 Page:5    

             10891    1   /*******************************************************************************
             10892    1   *                                                                              *
             10893    1   *                          ENTRY                                                 *
             10894    1   *                                                                              *
             10895    1   *******************************************************************************/

       20    10899        %ENTRIES;
       21    10914        %ENTRIES_IO;
       22    10922        %PTR;

             10930    1   /*******************************************************************************
             10931    1   *                                                                              *
             10932    1   *                          PTR                                                 *
             10933    1   *                                                                              *
             10934    1   *******************************************************************************/

       23    10938        %POINTER;
       24    10943    1   DCL WHERE$          PTR       ALIGNED   AUTO;
       25    10944        %U;

             10952    1   /*******************************************************************************
             10953    1   *                                                                              *
             10954    1   *                          UBIN                                                 *
             10955    1   *                                                                              *
             10956    1   *******************************************************************************/

       26    10960        %INDEX;
       27    10970    1   DCL REF_REC         UBIN(36)  ALIGNED   AUTO;
       28    10971    1   DCL SIZE            UBIN(36)  ALIGNED   AUTO;
       29    10972        %PLIST;
       30    10973        %EJECT;
PL6.E3A0      #001=VXU$UNSAT File=VXU$UNSAT.:E05TSI                              WED 07/30/97 08:47 Page:6    
       31    10974    2         DO I = 0 TO SIZEW( VX_PASS2_REF.UNSAT.L_START_A$ ) - 1;
       32    10975    2             REF_REC = VX_REF_REC_A(I);
       33    10976    2             SIZE = VX_PASS2_REF.UNSAT.SIZE_A(I);
       34    10977    3             IF SIZE > 0 THEN DO;
       35    10978    3                 CALL VXK$KEY(  @RF,
       36    10979    3                         REF_REC,
       37    10980    3                         VX_CURR$ -> VX$NODE.NUM,
       38    10981    3                         VX_PASS2_REF.UNSAT.PAGE#_A(I) );
       39    10982    3                 WHERE$ = VX_PASS2_REF.UNSAT.L_START_A$(I);
       40    10983    3                 CALL VXI$WRITE(     @RF,
       41    10984    3                         WHERE$,
       42    10985    3                         SIZE,
       43    10986    3                         @RF  )    ALTRET( IO_ERROR );
       44    10987    3                 VX_PASS2_REF.UNSAT.SIZE_A(I) = 0;
       45    10988    3                 VX_PASS2_REF.UNSAT.L_START_A$(I) = ADDR(NIL);
       46    10989    3                 VX_PASS2_REF.UNSAT.L_STOP_A$(I) = VX_PASS2_REF.UNSAT.L_WHERE_A$(I);
       47    10990    3                 VX_PASS2_REF.UNSAT.PAGE#_A(I) = VX_PASS2_REF.UNSAT.PAGE#_A(I) + 1;
       48    10991    3                 IF I = 0 THEN VX_PASS2_REF.UNSAT.PREV_RN_SIZE =
       49    10992    3                             VX_PASS2_REF.UNSAT.PREV_RN_SIZE + SIZE;
       50    10993    3                END;
       51    10994    2            END;
       52    10995    2         IF VX_PASS2_REF.UNSAT.PREV_RN_SIZE > VX_RN_THRESHOLD THEN DO;
       53    10996    2             VX_REF_EXPONENTIAL_SWITCH = @TRUE_B;
       54    10997    3             IF NOT VX_UNSAT_BUFFER_EXPAND_SWITCH THEN DO;
       55    10998    3                 VX_UNSAT_BUFFER_EXPAND_SWITCH = @TRUE_B;
       56    10999    4                 DO I = 1 TO SIZEW( VX_PASS2_REF.UNSAT.L_START_A$ ) - 1;
       57    11000    4                     CALL VXF$FREE( @ER_DS_2, VX_PASS2_REF.UNSAT.MAX_A(I), 0 );
       58    11001    4                    END;                   /* Do i ... */
       59    11002        /**/
       60    11003    3                 CALL VXF$FREE( @RN_DS_2, VX_PASS2_REF.UNSAT.MAX.RN, 0 );
       61    11004    3                 SIZE = (VX_M_ALL( @GDP ) - VX_M_FREE( @GDP ))/2 + @PAGE_SIZE;
       62    11005    4                 DO I = 1 TO SIZEW( VX_PASS2_REF.UNSAT.L_START_A$ ) - 1;
       63    11006                          %ALLOCATE(
       64    11007                          PTR$="VX_PASS2_REF.UNSAT.L_WHERE_A$(I)",
       65    11008                          TYPE=@ER_DS_2,
       66    11009                          SIZE=SIZE);
       67    11016    4                     VX_PASS2_REF.UNSAT.L_STOP_A$(I) = VX_PASS2_REF.UNSAT.L_WHERE_A$(I)
PL6.E3A0      #001=VXU$UNSAT File=VXU$UNSAT.:E05TSI                              WED 07/30/97 08:47 Page:7    
             11016                              ;
       68    11017    4                     VX_PASS2_REF.UNSAT.MAX_A(I) = SIZE;
       69    11018    4                    END;
       70    11019        /**/
       71    11020        /*
       72    11021                        Now for name area for unsatisfied references
       73    11022        */
       74    11023    3                 SIZE = VX_M_ALL( @RN_DS_2 ) - VX_M_FREE( @RN_DS_2 ) + 5 * @PAGE_SIZE;
       75    11024        /**/
       76    11025                      %ALLOCATE(
       77    11026                      PTR$=VX_PASS2_REF.UNSAT.L_WHERE.RN$,
       78    11027                      TYPE=@RN_DS_2,
       79    11028                      SIZE=SIZE);
       80    11035    3                 VX_PASS2_REF.UNSAT.L_STOP.RN$ = VX_PASS2_REF.UNSAT.L_WHERE.RN$;
       81    11036    3                 VX_PASS2_REF.UNSAT.MAX.RN = SIZE;
       82    11037    3                END;               /* If ~VX_UNSAT_BUFFER_EXPAND_SWITCH then do; */
       83    11038    2            END;               /* If VX_PASS2_REF.UNSAT.PREV_RN_SIZE then do; */
       84    11039    1         RETURN;
       85    11040    1   IO_ERROR:
       86    11041    1         CALL M$MERC                   ALTRET( MERC_ERROR );
       87    11042              %ERROR_IT;
       88    11045    1   MERC_ERROR:
       89    11046    1         CALL VXE$MERC;
       90    11047    1   END VXU$UNSAT;

PL6.E3A0      #001=VXU$UNSAT File=VXU$UNSAT.:E05TSI                              WED 07/30/97 08:47 Page:8    
--  Include file information  --

   F_DCB_D.:E05TOU  is referenced.
   VX_DCB_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_FIXED_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VX_MACRO_C.:E05TOU  is referenced.
   VX_PERR_C.:E05TOU  is referenced.
   VX_SUBS_C.:E05TOU  is referenced.
   VX_SWITCH_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   VX_INC_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VXU$UNSAT.

   Procedure VXU$UNSAT requires 171 words for executable code.
   Procedure VXU$UNSAT requires 18 words of local(AUTO) storage.

    No errors detected in file VXU$UNSAT.:E05TSI    .

PL6.E3A0      #001=VXU$UNSAT File=VXU$UNSAT.:E05TSI                              WED 07/30/97 08:47 Page:9    

 Object Unit name= VXU$UNSAT                                  File name= VXU$UNSAT.:E05TOU
 UTS= JUL 30 '97 08:47:37.52 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  LblCom even  none    96    140  VX_CONST_DCB
    2   Proc  even  none   171    253  VXU$UNSAT
    3  RoData even  none     8     10  VXU$UNSAT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        0  VXU$UNSAT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       4 VXK$KEY
         yes           Std       3 VXA$GET
 yes     yes           Std       4 VXI$WRITE
         yes           Std       3 VXF$FREE
         yes           Std       0 VXE$MERC
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=VXU$UNSAT File=VXU$UNSAT.:E05TSI                              WED 07/30/97 08:47 Page:10   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  VX_OU_HEAD                            VX_CURR$
     VX_ERRORS                             VX_M_FREE                             VX_M_ALL
     VX_M_BASE_PTR                         VX_REF_REC_A                          VX_PASS2_REF
     VX_RN_THRESHOLD                       VX_REF_EXPONENTIAL_SWITCH            VX_UNSAT_BUFFER_EXPAND_SWITCH
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=VXU$UNSAT File=VXU$UNSAT.:E05TSI                              WED 07/30/97 08:47 Page:11   


        1        1        /*M* VXU$UNSAT - To write any & all unsatisfied references to the run unit file(per
                 1        node)*/
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=6,IND=4,CSU=2,EXM=0,ECU=2,MOC,DCI=4,CRT=4,CTI=8,CCC */
        8        8        /*F* NAME:        VXU$UNSAT
        9        9         PURPOSE:    To write any & all unsatisfied references to the run unit file(per nod
                 9        e).
       10       10             DESCRIPTION: VXU$UNSAT writes any and all unsatisfied references to the run
       11       11                          unit file on a node basis. Both the unsatisified list(s) and
       12       12                          name pools are written.                       */
       13       13
       14       14
       15       15        VXU$UNSAT: PROC;

     15  2 000000   000000 700200 xent  VXU$UNSAT    TSX0  ! X66_AUTO_0
         2 000001   000022 000000                    ZERO    18,0

       16       16
       17       17        %INCLUDE VX_INC_C;
       18    10733        %VX$NODE;

             10745    1   /*******************************************************************************
             10746    1   *                                                                              *
             10747    1   *                          VX$NODE                                                *
             10748    1   *                                                                              *
             10749    1   *******************************************************************************/

             10765    1   DCL 1 VX$NODE      ALIGNED    BASED,
             10766    1         2 SON$ PTR /*(ADDR(NIL))*/, /* Son pointer                      */
             10767    1         2 BROTHER$ PTR /*(ADDR(NIL))*/, /* Brother pointer              */
             10768    1         2 FATHER$ PTR /*(ADDR(NIL))*/, /* Father pointer                */
             10769    1         2 PATH$ PTR /*(ADDR(NIL))*/, /* Path   pointer                  */
PL6.E3A0      #001=VXU$UNSAT File=VXU$UNSAT.:E05TSI                              WED 07/30/97 08:47 Page:12   
             10770    1         2 HEAD$       PTR /*(ADDR(NIL))*/, /* Head pointer to
             10771                              to list of file nodes for this node            */
             10772    1         2 TAIL$ PTR /*(ADDR(NIL))*/, /* Tail pointer to list            */
             10773    1         2 SHARED_LIB_HEAD$ PTR /*(ADDR(NIL))*/,
             10773                  /* Head pointer to shared library list */
             10774    1         2 LIB_HEAD$         PTR /*(ADDR(NIL))*/,
             10774                  /* Head pointer to list of shared libraries
             10775                                          which have been mapped to included libraries */
             10776    1         2 NUM          UBIN(36)  UNAL,    /* Node number                        */
             10777    1         2 DEPTH          UBIN(36)  UNAL,  /* Depth; ROOT=0*/
             10778    1         2 ADDR_START_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array            */
             10779    1         2 ADDR_START REDEF  ADDR_START_A,
             10780    1           3 RDATA       SBIN WORD,   /* First address for this node in data     */
             10781    1           3 RPROC       SBIN WORD,   /* First address for this node in proc     */
             10782    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             10783    1         2 ADDR_STOP_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array            */
             10784    1         2 ADDR_STOP  REDEF  ADDR_STOP_A,
             10785    1           3 RDATA       SBIN WORD,        /* Last address for this node in data */
             10786    1           3 RPROC       SBIN WORD,        /* Last address for this node in proc */
             10787    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             10788    1         2 START_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array           */
             10789    1         2 START_PAGE# REDEF START_PAGE#_A,
             10790    1           3 RDATA       SBIN WORD,   /* First page    for this node in data     */
             10791    1           3 RPROC       SBIN WORD,   /* First page    for this node in proc     */
             10792    1           3 ROS       SBIN WORD,          /* First page   for program in ros    */
             10793    1         2 STOP_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array*/
             10794    1         2 STOP_PAGE#  REDEF STOP_PAGE#_A,
             10795    1           3 RDATA       SBIN WORD,   /* Last  page    for this node in data     */
             10796    1           3 RPROC       SBIN WORD,   /* Last  page    for this node in proc     */
             10797    1           3 ROS       SBIN WORD,          /* Last  page   for program in ros    */
             10798    1         2 START_SC_ALL$ PTR /*(ADDR(NIL))*/,
             10798                  /* Starting pointer for common sections for this node */
             10799    1         2 STOP_SC_ALL$ PTR /*(ADDR(NIL))*/,
             10799                  /* Stopping pointer for common sections for this node */
             10800    1         2 L_START,
             10801    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             10802    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
PL6.E3A0      #001=VXU$UNSAT File=VXU$UNSAT.:E05TSI                              WED 07/30/97 08:47 Page:13   
             10803    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             10804    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             10805    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             10806    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             10807    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             10808    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             10809    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             10810    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             10811    1         2 L_START_A$(0:9)     REDEF L_START PTR,
             10812    1         2 L_STOP,
             10813    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             10814    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             10815    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             10816    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             10817    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             10818    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             10819    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             10820    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             10821    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             10822    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             10823    1         2 L_STOP_A$(0:9) REDEF   L_STOP    PTR,
             10824    1         2 L_SIZE,
             10825    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             10826    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             10827    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             10828    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             10829    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             10830    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             10831    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             10832    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             10833    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             10834    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             10835    1         2 L_SIZE_A(0:9)  REDEF   L_SIZE    UBIN,
             10836    1         2 L_PREV_SIZE,
             10837    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             10838    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             10839    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
PL6.E3A0      #001=VXU$UNSAT File=VXU$UNSAT.:E05TSI                              WED 07/30/97 08:47 Page:14   
             10840    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             10841    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             10842    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             10843    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             10844    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             10845    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             10846    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             10847    1         2 L_PREV_SIZE_A(0:9)  REDEF   L_PREV_SIZE    UBIN,
             10848    1         2 BIT_MAP                ALIGNED,
             10849    1           3 DATA                  ALIGNED,
             10850    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10851    1           3 RPROC                 ALIGNED,
             10852    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10853    1           3 ROS                   ALIGNED,
             10854    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10855    1         2 L_SC_START,
             10856    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             10857    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             10858    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             10859    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             10860    1         2 L_SC_START_A$(0:3)  REDEF L_SC_START PTR,
             10861    1         2 L_SC_STOP,
             10862    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             10863    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             10864    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             10865    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             10866    1         2 L_SC_STOP_A$(0:3)   REDEF L_SC_STOP  PTR,
             10867    1         2 PROMOTE_HEAD,
             10868    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             10869    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             10870    1         2 PROMOTE_HEAD_A$(0:1) REDEF PROMOTE_HEAD     PTR,
             10871    1         2 PROMOTE_TAIL,
             10872    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             10873    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             10874    1         2 PROMOTE_TAIL_A$(0:1) REDEF PROMOTE_TAIL     PTR,
             10875    1         2 HAVE_ASL          BIT(1)    UNAL /*('0'B)*/,
             10876    1         2 ALL_BLK_COM          BIT(1)    UNAL /*('0'B)*/,
PL6.E3A0      #001=VXU$UNSAT File=VXU$UNSAT.:E05TSI                              WED 07/30/97 08:47 Page:15   
             10877    1         2 USE_NODE          BIT(1)    UNAL /*('0'B)*/,
             10878    1         2 *                 BIT(33)   UNAL /*('0'B)*/,
             10879    1         2 BLANK_COMMON$     PTR       ALIGNED /*(ADDR(NIL))*/;

       19    10883        %E;

             10891    1   /*******************************************************************************
             10892    1   *                                                                              *
             10893    1   *                          ENTRY                                                 *
             10894    1   *                                                                              *
             10895    1   *******************************************************************************/

       20    10899        %ENTRIES;
       21    10914        %ENTRIES_IO;
       22    10922        %PTR;

             10930    1   /*******************************************************************************
             10931    1   *                                                                              *
             10932    1   *                          PTR                                                 *
             10933    1   *                                                                              *
             10934    1   *******************************************************************************/

       23    10938        %POINTER;
       24    10943    1   DCL WHERE$          PTR       ALIGNED   AUTO;
       25    10944        %U;

             10952    1   /*******************************************************************************
             10953    1   *                                                                              *
             10954    1   *                          UBIN                                                 *
             10955    1   *                                                                              *
             10956    1   *******************************************************************************/

       26    10960        %INDEX;
       27    10970    1   DCL REF_REC         UBIN(36)  ALIGNED   AUTO;
       28    10971    1   DCL SIZE            UBIN(36)  ALIGNED   AUTO;
       29    10972        %PLIST;
       30    10973        %EJECT;
PL6.E3A0      #001=VXU$UNSAT File=VXU$UNSAT.:E05TSI                              WED 07/30/97 08:47 Page:16   
       31    10974    2         DO I = 0 TO SIZEW( VX_PASS2_REF.UNSAT.L_START_A$ ) - 1;

  10974  2 000002   200007 450100                    STZ     I,,AUTO
         2 000003   000066 710000 2                  TRA     s:10994+3

       32    10975    2             REF_REC = VX_REF_REC_A(I);

  10975  2 000004   200007 720100                    LXL0    I,,AUTO
         2 000005   000000 235010 xsym               LDA     VX_REF_REC_A,X0
         2 000006   200013 755100                    STA     REF_REC,,AUTO

       33    10976    2             SIZE = VX_PASS2_REF.UNSAT.SIZE_A(I);

  10976  2 000007   000070 235010 xsym               LDA     VX_PASS2_REF+56,X0
         2 000010   200014 755100                    STA     SIZE,,AUTO

       34    10977    3             IF SIZE > 0 THEN DO;

  10977  2 000011   000063 600000 2                  TZE     s:10994

       35    10978    3                 CALL VXK$KEY(  @RF,

  10978  2 000012   000074 630410 xsym               EPPR0   VX_PASS2_REF+60,X0
         2 000013   200021 450500                    STP0    SIZE+5,,AUTO
         2 000014   000000 236000 xsym               LDQ     VX_CURR$
         2 000015   000010 036003                    ADLQ    8,DU
         2 000016   200020 756100                    STQ     SIZE+4,,AUTO
         2 000017   200013 631500                    EPPR1   REF_REC,,AUTO
         2 000020   200017 451500                    STP1    SIZE+3,,AUTO
         2 000021   000000 236000 3                  LDQ     0
         2 000022   200016 756100                    STQ     SIZE+2,,AUTO
         2 000023   200016 630500                    EPPR0   SIZE+2,,AUTO
         2 000024   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 000025   000000 701000 xent               TSX1    VXK$KEY
         2 000026   000000 011000                    NOP     0

       36    10979    3                         REF_REC,
PL6.E3A0      #001=VXU$UNSAT File=VXU$UNSAT.:E05TSI                              WED 07/30/97 08:47 Page:17   
       37    10980    3                         VX_CURR$ -> VX$NODE.NUM,
       38    10981    3                         VX_PASS2_REF.UNSAT.PAGE#_A(I) );
       39    10982    3                 WHERE$ = VX_PASS2_REF.UNSAT.L_START_A$(I);

  10982  2 000027   200007 720100                    LXL0    I,,AUTO
         2 000030   000054 236010 xsym               LDQ     VX_PASS2_REF+44,X0
         2 000031   200006 756100                    STQ     WHERE$,,AUTO

       40    10983    3                 CALL VXI$WRITE(     @RF,

  10983  2 000032   000000 236000 3                  LDQ     0
         2 000033   200021 756100                    STQ     SIZE+5,,AUTO
         2 000034   200014 630500                    EPPR0   SIZE,,AUTO
         2 000035   200020 450500                    STP0    SIZE+4,,AUTO
         2 000036   200006 631500                    EPPR1   WHERE$,,AUTO
         2 000037   200017 451500                    STP1    SIZE+3,,AUTO
         2 000040   200016 756100                    STQ     SIZE+2,,AUTO
         2 000041   200016 630500                    EPPR0   SIZE+2,,AUTO
         2 000042   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 000043   000000 701000 xent               TSX1    VXI$WRITE
         2 000044   000242 702000 2                  TSX2    IO_ERROR

       41    10984    3                         WHERE$,
       42    10985    3                         SIZE,
       43    10986    3                         @RF  )    ALTRET( IO_ERROR );
       44    10987    3                 VX_PASS2_REF.UNSAT.SIZE_A(I) = 0;

  10987  2 000045   200007 720100                    LXL0    I,,AUTO
         2 000046   000070 450010 xsym               STZ     VX_PASS2_REF+56,X0

       45    10988    3                 VX_PASS2_REF.UNSAT.L_START_A$(I) = ADDR(NIL);

  10988  2 000047   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000050   000054 756010 xsym               STQ     VX_PASS2_REF+44,X0

       46    10989    3                 VX_PASS2_REF.UNSAT.L_STOP_A$(I) = VX_PASS2_REF.UNSAT.L_WHERE_A$(I);

PL6.E3A0      #001=VXU$UNSAT File=VXU$UNSAT.:E05TSI                              WED 07/30/97 08:47 Page:18   
  10989  2 000051   000064 236010 xsym               LDQ     VX_PASS2_REF+52,X0
         2 000052   000060 756010 xsym               STQ     VX_PASS2_REF+48,X0

       47    10990    3                 VX_PASS2_REF.UNSAT.PAGE#_A(I) = VX_PASS2_REF.UNSAT.PAGE#_A(I) + 1;

  10990  2 000053   000074 235010 xsym               LDA     VX_PASS2_REF+60,X0
         2 000054   000001 035007                    ADLA    1,DL
         2 000055   000074 755010 xsym               STA     VX_PASS2_REF+60,X0

       48    10991    3                 IF I = 0 THEN VX_PASS2_REF.UNSAT.PREV_RN_SIZE =

  10991  2 000056   200007 236100                    LDQ     I,,AUTO
         2 000057   000063 601000 2                  TNZ     s:10994

  10991  2 000060   000100 236000 xsym               LDQ     VX_PASS2_REF+64
         2 000061   200014 036100                    ADLQ    SIZE,,AUTO
         2 000062   000100 756000 xsym               STQ     VX_PASS2_REF+64

       49    10992    3                             VX_PASS2_REF.UNSAT.PREV_RN_SIZE + SIZE;
       50    10993    3                END;

       51    10994    2            END;

  10994  2 000063   200007 235100                    LDA     I,,AUTO
         2 000064   000001 035007                    ADLA    1,DL
         2 000065   200007 755100                    STA     I,,AUTO
         2 000066   200007 235100                    LDA     I,,AUTO
         2 000067   000004 115007                    CMPA    4,DL
         2 000070   000004 602000 2                  TNC     s:10975

       52    10995    2         IF VX_PASS2_REF.UNSAT.PREV_RN_SIZE > VX_RN_THRESHOLD THEN DO;

  10995  2 000071   000000 236000 xsym               LDQ     VX_RN_THRESHOLD
         2 000072   000100 116000 xsym               CMPQ    VX_PASS2_REF+64
         2 000073   000241 603000 2                  TRC     s:11039

       53    10996    2             VX_REF_EXPONENTIAL_SWITCH = @TRUE_B;
PL6.E3A0      #001=VXU$UNSAT File=VXU$UNSAT.:E05TSI                              WED 07/30/97 08:47 Page:19   

  10996  2 000074   400000 236003                    LDQ     -131072,DU
         2 000075   000000 756000 xsym               STQ     VX_REF_EXPONENTIAL_SWITCH

       54    10997    3             IF NOT VX_UNSAT_BUFFER_EXPAND_SWITCH THEN DO;

  10997  2 000076   000000 234000 xsym               SZN     VX_UNSAT_BUFFER_EXPAND_SWITCH
         2 000077   000241 604000 2                  TMI     s:11039

       55    10998    3                 VX_UNSAT_BUFFER_EXPAND_SWITCH = @TRUE_B;

  10998  2 000100   000000 756000 xsym               STQ     VX_UNSAT_BUFFER_EXPAND_SWITCH

       56    10999    4                 DO I = 1 TO SIZEW( VX_PASS2_REF.UNSAT.L_START_A$ ) - 1;

  10999  2 000101   000001 235007                    LDA     1,DL
         2 000102   200007 755100                    STA     I,,AUTO
         2 000103   000122 710000 2                  TRA     s:11001+3

       57    11000    4                     CALL VXF$FREE( @ER_DS_2, VX_PASS2_REF.UNSAT.MAX_A(I), 0 );

  11000  2 000104   000001 236000 3                  LDQ     1
         2 000105   200020 756100                    STQ     SIZE+4,,AUTO
         2 000106   200007 720100                    LXL0    I,,AUTO
         2 000107   000050 630410 xsym               EPPR0   VX_PASS2_REF+40,X0
         2 000110   200017 450500                    STP0    SIZE+3,,AUTO
         2 000111   000002 236000 3                  LDQ     2
         2 000112   200016 756100                    STQ     SIZE+2,,AUTO
         2 000113   200016 630500                    EPPR0   SIZE+2,,AUTO
         2 000114   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000115   000000 701000 xent               TSX1    VXF$FREE
         2 000116   000000 011000                    NOP     0

       58    11001    4                    END;                   /* Do i ... */

  11001  2 000117   200007 235100                    LDA     I,,AUTO
         2 000120   000001 035007                    ADLA    1,DL
PL6.E3A0      #001=VXU$UNSAT File=VXU$UNSAT.:E05TSI                              WED 07/30/97 08:47 Page:20   
         2 000121   200007 755100                    STA     I,,AUTO
         2 000122   000004 115007                    CMPA    4,DL
         2 000123   000104 602000 2                  TNC     s:11000

       59    11002        /**/
       60    11003    3                 CALL VXF$FREE( @RN_DS_2, VX_PASS2_REF.UNSAT.MAX.RN, 0 );

  11003  2 000124   000003 630400 3                  EPPR0   3
         2 000125   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000126   000000 701000 xent               TSX1    VXF$FREE
         2 000127   000000 011000                    NOP     0

       61    11004    3                 SIZE = (VX_M_ALL( @GDP ) - VX_M_FREE( @GDP ))/2 + @PAGE_SIZE;

  11004  2 000130   000010 236000 xsym               LDQ     VX_M_ALL+8
         2 000131   000010 136000 xsym               SBLQ    VX_M_FREE+8
         2 000132   000002 506007                    DIV     2,DL
         2 000133   002000 036007                    ADLQ    1024,DL
         2 000134   200014 756100                    STQ     SIZE,,AUTO

       62    11005    4                 DO I = 1 TO SIZEW( VX_PASS2_REF.UNSAT.L_START_A$ ) - 1;

  11005  2 000135   000001 235007                    LDA     1,DL
         2 000136   200007 755100                    STA     I,,AUTO
         2 000137   000201 710000 2                  TRA     s:11018+3

       63    11006                          %ALLOCATE(
       64    11007                          PTR$="VX_PASS2_REF.UNSAT.L_WHERE_A$(I)",
       65    11008                          TYPE=@ER_DS_2,
       66    11009                          SIZE=SIZE);

  11010  2 000140   000010 236000 xsym               LDQ     VX_M_ALL+8
         2 000141   000010 136000 xsym               SBLQ    VX_M_FREE+8
         2 000142   000156 604000 2                  TMI     s:11014
         2 000143   200014 116100                    CMPQ    SIZE,,AUTO
         2 000144   000156 602000 2                  TNC     s:11014

PL6.E3A0      #001=VXU$UNSAT File=VXU$UNSAT.:E05TSI                              WED 07/30/97 08:47 Page:21   
  11011  2 000145   000010 236000 xsym               LDQ     VX_M_FREE+8
         2 000146   000022 736000                    QLS     18
         2 000147   000010 036000 xsym               ADLQ    VX_M_BASE_PTR+8
         2 000150   200007 720100                    LXL0    I,,AUTO
         2 000151   000064 756010 xsym               STQ     VX_PASS2_REF+52,X0

  11012  2 000152   000010 236000 xsym               LDQ     VX_M_FREE+8
         2 000153   200014 036100                    ADLQ    SIZE,,AUTO
         2 000154   000010 756000 xsym               STQ     VX_M_FREE+8

  11013  2 000155   000171 710000 2                  TRA     s:11016

  11014  2 000156   200014 630500                    EPPR0   SIZE,,AUTO
         2 000157   200020 450500                    STP0    SIZE+4,,AUTO
         2 000160   000002 236000 3                  LDQ     2
         2 000161   200017 756100                    STQ     SIZE+3,,AUTO
         2 000162   200007 720100                    LXL0    I,,AUTO
         2 000163   000064 631410 xsym               EPPR1   VX_PASS2_REF+52,X0
         2 000164   200016 451500                    STP1    SIZE+2,,AUTO
         2 000165   200016 630500                    EPPR0   SIZE+2,,AUTO
         2 000166   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000167   000000 701000 xent               TSX1    VXA$GET
         2 000170   000000 011000                    NOP     0

       67    11016    4                    VX_PASS2_REF.UNSAT.L_STOP_A$(I) = VX_PASS2_REF.UNSAT.L_WHERE_A$(I)
             11016                              ;

  11016  2 000171   200007 720100                    LXL0    I,,AUTO
         2 000172   000064 236010 xsym               LDQ     VX_PASS2_REF+52,X0
         2 000173   000060 756010 xsym               STQ     VX_PASS2_REF+48,X0

       68    11017    4                     VX_PASS2_REF.UNSAT.MAX_A(I) = SIZE;

  11017  2 000174   200014 235100                    LDA     SIZE,,AUTO
         2 000175   000050 755010 xsym               STA     VX_PASS2_REF+40,X0

       69    11018    4                    END;
PL6.E3A0      #001=VXU$UNSAT File=VXU$UNSAT.:E05TSI                              WED 07/30/97 08:47 Page:22   

  11018  2 000176   200007 236100                    LDQ     I,,AUTO
         2 000177   000001 036007                    ADLQ    1,DL
         2 000200   200007 756100                    STQ     I,,AUTO
         2 000201   200007 235100                    LDA     I,,AUTO
         2 000202   000004 115007                    CMPA    4,DL
         2 000203   000140 602000 2                  TNC     s:11010

       70    11019        /**/
       71    11020        /*
       72    11021                        Now for name area for unsatisfied references
       73    11022        */
       74    11023    3                 SIZE = VX_M_ALL( @RN_DS_2 ) - VX_M_FREE( @RN_DS_2 ) + 5 * @PAGE_SIZE;

  11023  2 000204   000004 236000 xsym               LDQ     VX_M_ALL+4
         2 000205   000004 136000 xsym               SBLQ    VX_M_FREE+4
         2 000206   012000 036007                    ADLQ    5120,DL
         2 000207   200014 756100                    STQ     SIZE,,AUTO

       75    11024        /**/
       76    11025                      %ALLOCATE(
       77    11026                      PTR$=VX_PASS2_REF.UNSAT.L_WHERE.RN$,
       78    11027                      TYPE=@RN_DS_2,
       79    11028                      SIZE=SIZE);

  11029  2 000210   000004 236000 xsym               LDQ     VX_M_ALL+4
         2 000211   000004 136000 xsym               SBLQ    VX_M_FREE+4
         2 000212   000225 604000 2                  TMI     s:11033
         2 000213   200014 116100                    CMPQ    SIZE,,AUTO
         2 000214   000225 602000 2                  TNC     s:11033

  11030  2 000215   000004 236000 xsym               LDQ     VX_M_FREE+4
         2 000216   000022 736000                    QLS     18
         2 000217   000004 036000 xsym               ADLQ    VX_M_BASE_PTR+4
         2 000220   000064 756000 xsym               STQ     VX_PASS2_REF+52

  11031  2 000221   000004 236000 xsym               LDQ     VX_M_FREE+4
PL6.E3A0      #001=VXU$UNSAT File=VXU$UNSAT.:E05TSI                              WED 07/30/97 08:47 Page:23   
         2 000222   200014 036100                    ADLQ    SIZE,,AUTO
         2 000223   000004 756000 xsym               STQ     VX_M_FREE+4

  11032  2 000224   000235 710000 2                  TRA     s:11035

  11033  2 000225   200014 630500                    EPPR0   SIZE,,AUTO
         2 000226   200020 450500                    STP0    SIZE+4,,AUTO
         2 000227   000006 237000 3                  LDAQ    6
         2 000230   200016 757100                    STAQ    SIZE+2,,AUTO
         2 000231   200016 630500                    EPPR0   SIZE+2,,AUTO
         2 000232   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000233   000000 701000 xent               TSX1    VXA$GET
         2 000234   000000 011000                    NOP     0

       80    11035    3                 VX_PASS2_REF.UNSAT.L_STOP.RN$ = VX_PASS2_REF.UNSAT.L_WHERE.RN$;

  11035  2 000235   000064 236000 xsym               LDQ     VX_PASS2_REF+52
         2 000236   000060 756000 xsym               STQ     VX_PASS2_REF+48

       81    11036    3                 VX_PASS2_REF.UNSAT.MAX.RN = SIZE;

  11036  2 000237   200014 235100                    LDA     SIZE,,AUTO
         2 000240   000050 755000 xsym               STA     VX_PASS2_REF+40

       82    11037    3                END;               /* If ~VX_UNSAT_BUFFER_EXPAND_SWITCH then do; */

       83    11038    2            END;               /* If VX_PASS2_REF.UNSAT.PREV_RN_SIZE then do; */

       84    11039    1         RETURN;

  11039  2 000241   000000 702200 xent               TSX2  ! X66_ARET

       85    11040    1   IO_ERROR:
       86    11041    1         CALL M$MERC                   ALTRET( MERC_ERROR );

  11041  2 000242   410007 713400       IO_ERROR     CLIMB   alt,+4103
         2 000243   000000 401760                    pmme    nvectors=0
PL6.E3A0      #001=VXU$UNSAT File=VXU$UNSAT.:E05TSI                              WED 07/30/97 08:47 Page:24   
         2 000244   000247 702000 2                  TSX2    MERC_ERROR

       87    11042              %ERROR_IT;

  11043  2 000245   000002 713400                    CLIMB   err
         2 000246   000000 401760                    pmme    nvectors=0

       88    11045    1   MERC_ERROR:
       89    11046    1         CALL VXE$MERC;

  11046  2 000247   000002 631400 xsym  MERC_ERROR   EPPR1   B_VECTNIL+2
         2 000250   000000 701000 xent               TSX1    VXE$MERC
         2 000251   000000 011000                    NOP     0

       90    11047    1   END VXU$UNSAT;

  11047  2 000252   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=VXU$UNSAT File=VXU$UNSAT.:E05TSI                              WED 07/30/97 08:47 Page:25   
--  Include file information  --

   F_DCB_D.:E05TOU  is referenced.
   VX_DCB_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_FIXED_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VX_MACRO_C.:E05TOU  is referenced.
   VX_PERR_C.:E05TOU  is referenced.
   VX_SUBS_C.:E05TOU  is referenced.
   VX_SWITCH_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   VX_INC_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VXU$UNSAT.
PL6.E3A0      #001=VXU$UNSAT File=VXU$UNSAT.:E05TSI                              WED 07/30/97 08:47 Page:26   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     7-0-0/w UBIN        r     1 I                         13-0-0/w UBIN        r     1 REF_REC
    14-0-0/w UBIN        r     1 SIZE                       6-0-0/w PTR         r     1 WHERE$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 VX_CURR$
     0-0-0/w SBIN        r     1 VX_M_ALL(0:8)
     0-0-0/w PTR         r     1 VX_M_BASE_PTR(0:8)
     0-0-0/w SBIN        r     1 VX_M_FREE(0:8)
     0-0-0/w STRC(2340)  r     1 VX_PASS2_REF
     0-0-0/w BIT         r     1 VX_REF_EXPONENTIAL_SWITCH
     0-0-0/w UBIN        r     1 VX_REF_REC_A(0:3)
     0-0-0/w UBIN        r     1 VX_RN_THRESHOLD
     0-0-0/w BIT         r     1 VX_UNSAT_BUFFER_EXPAND_SWITCH

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3672)  r     1 VX$NODE


   Procedure VXU$UNSAT requires 171 words for executable code.
   Procedure VXU$UNSAT requires 18 words of local(AUTO) storage.
PL6.E3A0      #001=VXU$UNSAT File=VXU$UNSAT.:E05TSI                              WED 07/30/97 08:47 Page:27   

    No errors detected in file VXU$UNSAT.:E05TSI    .
PL6.E3A0      #001=VXU$UNSAT File=VXU$UNSAT.:E05TSI                              WED 07/30/97 08:47 Page:28   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VXU$UNSAT File=VXU$UNSAT.:E05TSI                              WED 07/30/97 08:47 Page:29   
          MINI XREF LISTING

I
     10961**DCL     10962--REDEF   10974<<DOINDEX 10975>>ASSIGN  10976>>ASSIGN  10978>>CALL    10982>>ASSIGN
     10987>>ASSIGN  10988>>ASSIGN  10989>>ASSIGN  10989>>ASSIGN  10990>>ASSIGN  10990>>ASSIGN  10991>>IF
     10999<<DOINDEX 11000>>CALL    11005<<DOINDEX 11011>>ASSIGN  11014>>CALL    11016>>ASSIGN  11016>>ASSIGN
     11017>>ASSIGN
IO_ERROR
     11041**LABEL   10983--CALLALT
J
     10963**DCL     10964--REDEF
K
     10965**DCL     10966--REDEF
L
     10967**DCL     10968--REDEF
M$ERR
      5092**DCL-ENT 11043--CALL
M$MERC
      5136**DCL-ENT 11041--CALL
MERC_ERROR
     11046**LABEL   11041--CALLALT
REF_REC
     10970**DCL     10975<<ASSIGN  10978<>CALL
SIZE
     10971**DCL     10976<<ASSIGN  10977>>IF      10983<>CALL    10991>>ASSIGN  11004<<ASSIGN  11010>>IF
     11012>>ASSIGN  11014<>CALL    11017>>ASSIGN  11023<<ASSIGN  11029>>IF      11031>>ASSIGN  11033<>CALL
     11036>>ASSIGN
VX$NODE.ADDR_START_A
     10778**DCL     10779--REDEF
VX$NODE.ADDR_STOP_A
     10783**DCL     10784--REDEF
VX$NODE.L_PREV_SIZE
     10836**DCL     10847--REDEF
VX$NODE.L_SC_START
PL6.E3A0      #001=VXU$UNSAT File=VXU$UNSAT.:E05TSI                              WED 07/30/97 08:47 Page:30   
     10855**DCL     10860--REDEF
VX$NODE.L_SC_STOP
     10861**DCL     10866--REDEF
VX$NODE.L_SIZE
     10824**DCL     10835--REDEF
VX$NODE.L_START
     10800**DCL     10811--REDEF
VX$NODE.L_STOP
     10812**DCL     10823--REDEF
VX$NODE.NUM
     10776**DCL     10978<>CALL
VX$NODE.PROMOTE_HEAD
     10867**DCL     10870--REDEF
VX$NODE.PROMOTE_TAIL
     10871**DCL     10874--REDEF
VX$NODE.START_PAGE#_A
     10788**DCL     10789--REDEF
VX$NODE.STOP_PAGE#_A
     10793**DCL     10794--REDEF
VXA$GET
     10909**DCL-ENT 11014--CALL    11033--CALL
VXE$MERC
     10902**DCL-ENT 11046--CALL
VXF$FREE
     10910**DCL-ENT 11000--CALL    11003--CALL
VXI$WRITE
     10920**DCL-ENT 10983--CALL
VXK$KEY
     10918**DCL-ENT 10978--CALL
VX_BIAS.A
      9583**DCL      9584--REDEF
VX_CBUF.CHARS_A
      9517**DCL      9518--REDEF
VX_CONST_DCB.ACTPOS
     10699**DCL     10699--REDEF
VX_CONST_DCB.ARS#
PL6.E3A0      #001=VXU$UNSAT File=VXU$UNSAT.:E05TSI                              WED 07/30/97 08:47 Page:31   
     10658**DCL     10658--REDEF
VX_CONST_DCB.ATTR#
     10688**DCL     10688--REDEF   10690--REDEF
VX_CONST_DCB.BORROW
     10710**DCL     10710--REDEF   10710--REDEF   10710--REDEF
VX_CONST_DCB.EOMCHAR#
     10665**DCL     10666--REDEF
VX_CONST_DCB.FLDID
     10702**DCL     10703--REDEF
VX_CONST_DCB.FORM$
     10694**DCL     10694--REDEF
VX_CONST_DCB.FSECT
     10717**DCL     10717--REDEF
VX_CONST_DCB.FSN#
     10684**DCL     10684--REDEF   10684--REDEF   10685--REDEF
VX_CONST_DCB.HEADER$
     10693**DCL     10694--REDEF
VX_CONST_DCB.IXTNSIZE#
     10690**DCL     10691--REDEF
VX_CONST_DCB.LASTSTA$
     10674**DCL     10674--REDEF
VX_CONST_DCB.LVL
     10711**DCL     10711--REDEF
VX_CONST_DCB.NAME#.C
     10674**DCL     10675--REDEF
VX_CONST_DCB.NOEOF
     10706**DCL     10706--REDEF
VX_CONST_DCB.NRECS#
     10691**DCL     10691--REDEF
VX_CONST_DCB.NRECX
     10718**DCL     10718--REDEF
VX_CONST_DCB.OHDR
     10707**DCL     10707--REDEF
VX_CONST_DCB.ORG#
     10682**DCL     10683--REDEF
VX_CONST_DCB.PRECNO
PL6.E3A0      #001=VXU$UNSAT File=VXU$UNSAT.:E05TSI                              WED 07/30/97 08:47 Page:32   
     10715**DCL     10715--REDEF
VX_CONST_DCB.RCSZ
     10723**DCL     10723--REDEF
VX_CONST_DCB.RES#
     10676**DCL     10676--REDEF
VX_CONST_DCB.SETX
     10695**DCL     10695--REDEF
VX_CONST_DCB.TAB$
     10694**DCL     10694--REDEF
VX_CONST_DCB.TDA
     10714**DCL     10715--REDEF
VX_CONST_DCB.WSN#
     10676**DCL     10677--REDEF
VX_CURR$
      9552**DCL     10978>>CALL
VX_EBUF.CHARS_A
     10106**DCL     10107--REDEF
VX_EFIELD1.CHARS
     10115**DCL     10116--REDEF
VX_EFIELD2.CHARS
     10119**DCL     10120--REDEF
VX_EFIELD3.CHARS
     10123**DCL     10124--REDEF
VX_EI_KEY_BUF.KEY
     10499**DCL     10500--REDEF
VX_ERRORS
      9560**DCL      9571--REDEF
VX_ERRORS.CONFLICT_A
      9566**DCL      9567--REDEF
VX_ERRORS.UNSAT_A
      9562**DCL      9563--REDEF
VX_IMAGE_DATA.CPAGE#_A
      8697**DCL      8698--REDEF
VX_IMAGE_DATA.NODE_A$
      8709**DCL      8710--REDEF
VX_IMAGE_DATA.START_A$
PL6.E3A0      #001=VXU$UNSAT File=VXU$UNSAT.:E05TSI                              WED 07/30/97 08:47 Page:33   
      8701**DCL      8702--REDEF
VX_IMAGE_DATA.STOP_A$
      8705**DCL      8706--REDEF
VX_IMAGE_DS3.CPAGE#_A
      8766**DCL      8767--REDEF
VX_IMAGE_DS3.NODE_A$
      8778**DCL      8779--REDEF
VX_IMAGE_DS3.START_A$
      8770**DCL      8771--REDEF
VX_IMAGE_DS3.STOP_A$
      8774**DCL      8775--REDEF
VX_IMAGE_DS4.CPAGE#_A
      8789**DCL      8790--REDEF
VX_IMAGE_DS4.NODE_A$
      8801**DCL      8802--REDEF
VX_IMAGE_DS4.START_A$
      8793**DCL      8794--REDEF
VX_IMAGE_DS4.STOP_A$
      8797**DCL      8798--REDEF
VX_IMAGE_DS5.CPAGE#_A
      8812**DCL      8813--REDEF
VX_IMAGE_DS5.NODE_A$
      8824**DCL      8825--REDEF
VX_IMAGE_DS5.START_A$
      8816**DCL      8817--REDEF
VX_IMAGE_DS5.STOP_A$
      8820**DCL      8821--REDEF
VX_IMAGE_DS6.CPAGE#_A
      8835**DCL      8836--REDEF
VX_IMAGE_DS6.NODE_A$
      8847**DCL      8848--REDEF
VX_IMAGE_DS6.START_A$
      8839**DCL      8840--REDEF
VX_IMAGE_DS6.STOP_A$
      8843**DCL      8844--REDEF
VX_IMAGE_DS7.CPAGE#_A
PL6.E3A0      #001=VXU$UNSAT File=VXU$UNSAT.:E05TSI                              WED 07/30/97 08:47 Page:34   
      8858**DCL      8859--REDEF
VX_IMAGE_DS7.NODE_A$
      8870**DCL      8871--REDEF
VX_IMAGE_DS7.START_A$
      8862**DCL      8863--REDEF
VX_IMAGE_DS7.STOP_A$
      8866**DCL      8867--REDEF
VX_IMAGE_DS8.CPAGE#_A
      8881**DCL      8882--REDEF
VX_IMAGE_DS8.NODE_A$
      8893**DCL      8894--REDEF
VX_IMAGE_DS8.START_A$
      8885**DCL      8886--REDEF
VX_IMAGE_DS8.STOP_A$
      8889**DCL      8890--REDEF
VX_IMAGE_PROC.CPAGE#_A
      8720**DCL      8721--REDEF
VX_IMAGE_PROC.NODE_A$
      8732**DCL      8733--REDEF
VX_IMAGE_PROC.START_A$
      8724**DCL      8725--REDEF
VX_IMAGE_PROC.STOP_A$
      8728**DCL      8729--REDEF
VX_IMAGE_ROS.CPAGE#_A
      8743**DCL      8744--REDEF
VX_IMAGE_ROS.NODE_A$
      8755**DCL      8756--REDEF
VX_IMAGE_ROS.START_A$
      8747**DCL      8748--REDEF
VX_IMAGE_ROS.STOP_A$
      8751**DCL      8752--REDEF
VX_M_ALL
      9594**DCL     11004>>ASSIGN  11010>>IF      11023>>ASSIGN  11029>>IF
VX_M_BASE_PTR
      9596**DCL     11011>>ASSIGN  11030>>ASSIGN
VX_M_FREE
PL6.E3A0      #001=VXU$UNSAT File=VXU$UNSAT.:E05TSI                              WED 07/30/97 08:47 Page:35   
      9592**DCL     11004>>ASSIGN  11010>>IF      11011>>ASSIGN  11012<<ASSIGN  11012>>ASSIGN  11023>>ASSIGN
     11029>>IF      11030>>ASSIGN  11031<<ASSIGN  11031>>ASSIGN
VX_M_VECTOR.F
      8548**DCL      8552--REDEF
VX_M_VECTOR_DP.F
      8583**DCL      8587--REDEF
VX_O.ACCTN_A$
      9712**DCL      9713--REDEF
VX_O.DCB_MATCH_A$
      9721**DCL      9722--REDEF
VX_O.DCB_MATCH_HIT_A
      9727**DCL      9728--REDEF
VX_O.FIDN_A$
      9706**DCL      9707--REDEF
VX_O.FID_A$
      9698**DCL      9699--REDEF
VX_O.INCLUDE_A$
      9718**DCL      9719--REDEF
VX_O.MAP_A
      9692**DCL      9693--REDEF
VX_O.NODCB_A
      9749**DCL      9750--REDEF
VX_O.NUM_A
      9637**DCL      9639--REDEF
VX_O.OPT_A
      9737**DCL      9738--REDEF
VX_O.PRIV_A
      9653**DCL      9655--REDEF
VX_O.SIN_A
      9606**DCL      9607--REDEF
VX_O.TCB_A
      9733**DCL      9734--REDEF
VX_OD.ACCTN_A$
      9910**DCL      9911--REDEF
VX_OD.DCB_MATCH_A$
      9919**DCL      9920--REDEF
PL6.E3A0      #001=VXU$UNSAT File=VXU$UNSAT.:E05TSI                              WED 07/30/97 08:47 Page:36   
VX_OD.FIDN_A$
      9904**DCL      9905--REDEF
VX_OD.FID_A$
      9896**DCL      9897--REDEF
VX_OD.INCLUDE_A$
      9916**DCL      9917--REDEF
VX_OD.MAP_A
      9890**DCL      9891--REDEF
VX_OD.NODCB_A
      9934**DCL      9935--REDEF
VX_OD.NUM_A
      9837**DCL      9838--REDEF
VX_OD.PRIV_A
      9852**DCL      9853--REDEF
VX_OD.SIN_A
      9806**DCL      9807--REDEF
VX_OD.VECTOR_A$
      9925**DCL      9926--REDEF
VX_OL.MAX_A
      9781**DCL      9783--REDEF
VX_OL.MIN_A
      9766**DCL      9767--REDEF
VX_ON.ACCTN_A$
     10055**DCL     10057--REDEF
VX_ON.DCB_MATCH_A$
     10066**DCL     10068--REDEF
VX_ON.FIDN_A$
     10048**DCL     10050--REDEF
VX_ON.FID_A$
     10039**DCL     10041--REDEF
VX_ON.INCLUDE_A$
     10062**DCL     10064--REDEF
VX_ON.MAP_A
     10032**DCL     10034--REDEF
VX_ON.NODCB_A$
     10082**DCL     10083--REDEF
PL6.E3A0      #001=VXU$UNSAT File=VXU$UNSAT.:E05TSI                              WED 07/30/97 08:47 Page:37   
VX_ON.NUM_A
      9977**DCL      9979--REDEF
VX_ON.PRIV_A
      9993**DCL      9995--REDEF
VX_ON.SIN_A
      9945**DCL      9947--REDEF
VX_ON.VECTOR_A$
     10073**DCL     10074--REDEF
VX_OUHEAD.VERSION
      9392**DCL      9394--REDEF
VX_OU_HEAD
      9335**DCL      9374--REDEF
VX_OU_HEAD.REC_A
      9347**DCL      9350--REDEF
VX_O_KEY_BUF.FORM0
      8596**DCL      8599--REDEF    8606--REDEF
VX_O_KEY_BUF_L.FORM0
      8619**DCL      8622--REDEF    8629--REDEF
VX_PASS2_REF.OU.L_START
     10285**DCL     10290--REDEF
VX_PASS2_REF.OU.L_STOP
     10291**DCL     10296--REDEF
VX_PASS2_REF.OU.MAX
     10279**DCL     10284--REDEF
VX_PASS2_REF.OU.SIZE
     10297**DCL     10302--REDEF
VX_PASS2_REF.SAT.COUNT
     10324**DCL     10330--REDEF
VX_PASS2_REF.SAT.ENT_SIZE
     10331**DCL     10337--REDEF
VX_PASS2_REF.SAT.L_START
     10310**DCL     10316--REDEF
VX_PASS2_REF.SAT.L_STOP
     10317**DCL     10323--REDEF
VX_PASS2_REF.SAT.MAX
     10304**DCL     10309--REDEF
PL6.E3A0      #001=VXU$UNSAT File=VXU$UNSAT.:E05TSI                              WED 07/30/97 08:47 Page:38   
VX_PASS2_REF.UNSAT.L_START
     10372**DCL     10377--REDEF
VX_PASS2_REF.UNSAT.L_START_A$
     10377**DCL     10974--DOINDEX 10982>>ASSIGN  10988<<ASSIGN  10999--DOINDEX 11005--DOINDEX
VX_PASS2_REF.UNSAT.L_STOP
     10378**DCL     10383--REDEF
VX_PASS2_REF.UNSAT.L_STOP.RN$
     10379**DCL     11035<<ASSIGN
VX_PASS2_REF.UNSAT.L_STOP_A$
     10383**DCL     10989<<ASSIGN  11016<<ASSIGN
VX_PASS2_REF.UNSAT.L_WHERE
     10384**DCL     10389--REDEF
VX_PASS2_REF.UNSAT.L_WHERE.RN$
     10385**DCL     11030<<ASSIGN  11033<>CALL    11035>>ASSIGN
VX_PASS2_REF.UNSAT.L_WHERE_A$
     10389**DCL     10989>>ASSIGN  11011<<ASSIGN  11014<>CALL    11016>>ASSIGN
VX_PASS2_REF.UNSAT.MAX
     10366**DCL     10371--REDEF
VX_PASS2_REF.UNSAT.MAX.RN
     10367**DCL     11003<>CALL    11036<<ASSIGN
VX_PASS2_REF.UNSAT.MAX_A
     10371**DCL     11000<>CALL    11017<<ASSIGN
VX_PASS2_REF.UNSAT.PAGE#
     10396**DCL     10401--REDEF
VX_PASS2_REF.UNSAT.PAGE#_A
     10401**DCL     10978<>CALL    10990<<ASSIGN  10990>>ASSIGN
VX_PASS2_REF.UNSAT.PREV_RN_SIZE
     10402**DCL     10991<<ASSIGN  10991>>ASSIGN  10995>>IF
VX_PASS2_REF.UNSAT.SIZE
     10390**DCL     10395--REDEF
VX_PASS2_REF.UNSAT.SIZE_A
     10395**DCL     10976>>ASSIGN  10987<<ASSIGN
VX_PHRASE.PHRASE
      9798**DCL      9800--REDEF
VX_PROGRAM_BIAS.A
      9576**DCL      9577--REDEF
PL6.E3A0      #001=VXU$UNSAT File=VXU$UNSAT.:E05TSI                              WED 07/30/97 08:47 Page:39   
VX_REF_EXPONENTIAL_SWITCH
     10516**DCL     10996<<ASSIGN
VX_REF_REC_A
     10226**DCL     10975>>ASSIGN
VX_RN_THRESHOLD
     10514**DCL     10995>>IF
VX_R_KEY_BUF.FORM0
      8645**DCL      8649--REDEF    8655--REDEF
VX_SD.A
      8273**DCL      8274--REDEF
VX_SPC.B$.MINE
     10467**DCL     10473--REDEF
VX_SPC.B$.NAME
     10446**DCL     10452--REDEF
VX_SPC.B$.SKIP
     10460**DCL     10466--REDEF
VX_SPC.B$.VALUE
     10453**DCL     10459--REDEF
VX_SPC.SEG.NAME
     10415**DCL     10421--REDEF
VX_SPC.SEG.VALUE
     10422**DCL     10428--REDEF
VX_TSX0_OVERLAY.H
     10190**DCL     10193--REDEF
VX_UNSAT_BUFFER_EXPAND_SWITCH
     10517**DCL     10997>>IF      10998<<ASSIGN
WHERE$
     10943**DCL     10982<<ASSIGN  10983<>CALL
