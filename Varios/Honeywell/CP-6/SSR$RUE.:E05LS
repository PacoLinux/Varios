VERSION E05

PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:1    
        1        1        /*M* SCHEDULER EVENT REPORTING PROCEDURE         */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  AND,DTI=3,MCR=NO */
        8        8        /*                                                                    */
        9        9        SSR$RUE: PROC(EVNT,USR,FCN,PTR2$);
       10       10        /*                                                                    */
       11       11        /* These files are included at this point to keep subsequent %SUBs
       12       12           from causing mis-generation of their based structures.          */
       13       13        %INCLUDE B$JIT;
       14      616        %INCLUDE MM_DATA_R;
       15     1136        %INCLUDE B_LSDATA_C;
       16     4342        /*                                                                 */
       17     4343        %LIST;
       18     4344        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:2    
       19     4345        %INCLUDE B$USER;
        1+    4346        /*M* BASED DEFINITION OF CP-6 USER TABLES                   */
        2+    4347        /*T***********************************************************/
        3+    4348        /*T*                                                         */
        4+    4349        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5+    4350        /*T*                                                         */
        6+    4351        /*T***********************************************************/
        7+    4352        /*                                                                    */
        8+    4353        /* REFERENCES TO  THE USER TABLE ENTRY FOR THE CURRENT USER           */
        9+    4354        /* MAY BE MADE THROUGH THE POINTER VARIABLE S$CU$ WHICH IS            */
       10+    4355        /* INITIALIZED BY THE SCHEDULER EACH TIME A NEW CURRENT               */
       11+    4356        /* USER IS SCHEDULED.                                                 */
       12+    4357        /*                                                                    */
       13+    4358                                                /**/
       14+    4359        /*                                                                    */
       15+    4360                                                /**/
       16+    4361    1   DCL 1 B$U BASED DALIGNED,
       17+    4362    1         2 FLG,                           /* FLAGS                                   */
       18+    4363    1           3 RTR BIT(1) UNAL,
       19+    4364    1           3 INTUSR BIT(1) UNAL,
       20+    4365    1           3 DIC BIT(1) UNAL,
       21+    4366                                                /**/
       22+    4367    1           3 DELA BIT(1) UNAL,
       23+    4368    1           3 CPIC BIT(1) UNAL,
       24+    4369    1           3 COBLK BIT(1) UNAL,
       25+    4370                                                /**/
       26+    4371    1           3 HUP BIT(1) UNAL,
       27+    4372    1           3 SUSP BIT(1) UNAL,
       28+    4373    1           3 TDOPPERM BIT(1) UNAL,
       29+    4374                                                /**/
       30+    4375    1           3 TDNOPERM BIT(1) UNAL,
       31+    4376    1           3 STIP BIT(1) UNAL,
       32+    4377    1           3 BLK BIT(1) UNAL,
       33+    4378                                                /**/
       34+    4379    1           3 DINIT BIT(1) UNAL,
       35+    4380    1           3 OINIT BIT(1) UNAL,
       36+    4381    1           3 ROINIT BIT(1) UNAL,
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:3    
       37+    4382                                                /**/
       38+    4383    1           3 MSTR BIT(1) UNAL,
       39+    4384    1           3 NSND BIT(1) UNAL,
       40+    4385    1           3 CPL BIT(1) UNAL,
       41+    4386                                                /**/
       42+    4387    1           3 CAN BIT(1) UNAL,
       43+    4388    1           3 DDUSR BIT(1) UNAL,
       44+    4389    1           3 STEP BIT(1) UNAL,
       45+    4390                                                /**/
       46+    4391    1           3 ANNCE BIT(1) UNAL,            /* ANNOUNCE TAPE MOUNTS               */
       47+    4392    1           3 EVNT BIT(1) UNAL,             /* M$EVENT ISSUED                     */
       48+    4393    1           3 DBRK BIT(1) UNAL,             /* DATA BREAKPOINT                    */
       49+    4394                                                /**/
       50+    4395    1           3 SQRBLK BIT(1)  UNAL,
       51+    4396    1           3 SCIO BIT(1) UNAL,        /* Blocked for Comm I/O    */
       52+    4397    1           3 NOQUAN BIT(1) UNAL,
              4397                    /* THIS GUY ALREADY GOT HIS "FREE" QUANTUM FROM BREAKS PINCR */
       53+    4398
       54+    4399    1           3 BIGPT BIT(1) UNAL, /* THIS GUY HAS A TWO PAGE PAGE TABLE */
       55+    4400    1           3 * BIT(8) UNAL,
       56+    4401        /*                                                                    */
       57+    4402        /* DEFINITIONS FOR B$U.FLG                                            */
       58+    4403        /*                                                                    */
       59+    4404        %EQU U_RTR='400000000000'O;
       60+    4405        %EQU U_INTUSR='200000000000'O; /* INTERACTIVE USER                */
       61+    4406        %EQU U_DIC='100000000000'O;    /* DELTA IN CONTROL                     */
       62+    4407        %EQU U_DELA='040000000000'O;  /* DELTA ASSOCIATED                   */
       63+    4408        %EQU U_CPIC='020000000000'O;  /* COM PROC IN CONTROL                */
       64+    4409        %EQU U_COBLK='010000000000'O; /* COMM OUTPUT UNBLK BEFORE BLK*/
       65+    4410        %EQU U_HUP='004000000000'O;    /* LINE HANG UP                         */
       66+    4411        %EQU U_SUSP='002000000000'O;  /* SUSPENDED FOR RECONNECT            */
       67+    4412        %EQU U_TDOPPERM='001000000000'O; /* QQQ                         */
       68+    4413        %EQU U_TDNOPERM='000400000000'O; /* QQQQ                        */
       69+    4414        %EQU U_STIP='000200000000'O;  /* STEP IN PROGRESS                   */
       70+    4415        %EQU U_BLK='000100000000'O;    /* UNBLOCK BEFORE BLOCK                 */
       71+    4416        %EQU U_DINIT='000040000000'O; /* DATA MUST BE INITIALIZED          */
       72+    4417        %EQU U_OINIT='000020000000'O; /* OVERLAY DATA MUST BE INITIALIZED*/
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:4    
       73+    4418        %EQU U_ROINIT='000010000000'O; /* ROSEG MUST BE INITIALIZED       */
       74+    4419        %EQU U_MSTR='000004000000'O;  /* MASTER PROCESSOR USER              */
       75+    4420        %EQU U_NSND='000002000000'O;  /* SEND KEYIN ILLEGAL                 */
       76+    4421        %EQU U_CPL='000001000000'O;    /* COUPLE OK                            */
       77+    4422        %EQU U_CAN='000000400000'O;    /* JOB CANCELED BY USER                 */
       78+    4423        %EQU U_DDUSR='000000200000'O;          /* DYNAMIC DRSP USER (IN FETCH)            */
       79+    4424        %EQU U_STEP='000000100000'O;           /* USER IS AT JOB STEP                     */
       80+    4425        %EQU U_ANNCE='000000040000'O;           /* ANNOUNCE TAPE MOUNTS               */
       81+    4426        %EQU U_EVNT='000000020000'O;            /* M$EVENT ISSUED                     */
       82+    4427        %EQU U_DBRK='000000010000'O;            /* DATA BREAKPOINT                    */
       83+    4428        %EQU U_SQRBLK='000000004000'O;          /* SQR UNBLOCK BEFORE BLOCK           */
       84+    4429        %EQU U_SCIO='000000002000'O;       /* Blocked for Comm I/O         */
       85+    4430        %EQU U_NOQUAN='000000001000'O;       /* User already got his free QUAN*/
       86+    4431        %EQU U_BIGPT='000000000400'O;       /* User has a 2-page page table */
       87+    4432        /*                                                                    */
       88+    4433    1             2 ASYNCH BIT(36) UNAL,       /* ASYNCHRONOUS FLAGS                      */
       89+    4434        /* DEFINITIONS FOR B$U.ASYNCH                                         */
       90+    4435        /*                                                                    */
       91+    4436        %EQU  U_BRK='400000000000'O;   /* BREAK CHAR RECEIVED                 */
       92+    4437        %EQU  U_YC='200000000000'O;     /* CONTROL Y RECEIVEID                   */
       93+    4438        %EQU  U_ERR='100000000000'O;   /* OPERATOR ERRORED JOB                */
       94+    4439        %EQU  U_ABRT='040000000000'O; /* OPERATOR ABORTED JOB               */
       95+    4440        %EQU U_CNCLD='020000000000'O; /* JOB CANCELED BY USER          */
       96+    4441        %EQU  U_DISC='010000000000'O;      /* Line disconnected            */
       97+    4442        %EQU U_FEPCRSH='004000000000'O;    /* FEP has crashed              */
       98+    4443        %EQU U_FPLDTRC='002000000000'O;    /* CG FPRG must LDTRC                 */
       99+    4444        %EQU U_CACHE='000000000001'O;
      100+    4445        %EQU U_RESET='000000000001'O; /* USED TO CLEAR SELECTED ASYNCH FLGS*/
      101+    4446        /*                                                                    */
      102+    4447    1         2 FL UBIN UNAL,                /*STATE QUEUE FWD LINK                     */
      103+    4448    1         2 BL UBIN UNAL,                /*STATE QUEUE BKWD LINK                    */
      104+    4449    1         2 MRT UBIN UNAL,               /*TIME LIMIT REMAINING                     */
      105+    4450    1         2 UTSUSED UBIN UNAL,           /*TIME USED THUS FAR                       */
      106+    4451    1         2 MF UBIN(9) UNAL,               /*MASTER FUNCTION COUNT                    */
      107+    4452    1         2 ACP UBIN(9) UNAL,              /*COMMAND PROCESSOR NUMBER                 */
      108+    4453    1         2 DB UBIN(9) UNAL,               /*DEBUGGER PROCESSOR NUMBER                */
      109+    4454    1         2 ASL UBIN(9) UNAL,              /*ALT SHRD LIB PROC NUMBER                 */
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:5    
      110+    4455    1         2 APR UBIN(12) UNAL,             /*SHRD PROCESSOR NUMBER                    */
      111+    4456    1         2 APO UBIN(12) UNAL,             /*SHRD PROC OVLY NUMBER                    */
      112+    4457    1         2 ASP UBIN(6) UNAL,              /*SHRD LIB PROCESSOR NUMBER                */
      113+    4458    1         2 CMF UBIN(6) UNAL,              /* COMMUNICATIONS MASTER FUNC              */
      114+    4459    1         2 PCT UBIN(18) UNAL,
      115+    4460    1         2 SQ    UBIN(9) UNAL,            /* RESOURCE SUBQUEUE LINK   */
      116+    4461    1         2 CPU UBIN(9) UNAL,              /* REQUESTED CPU #                         */
      117+    4462    1         2 US UBIN(6) UNAL,               /*USER STATE                               */
      118+    4463    1         2 PTSIZ UBIN(6) UNAL,            /*PTABLE SIZE (MOD 64)      */
      119+    4464    1         2 PRIO UBIN(6) UNAL,             /*EXECUTION PRIORITY                       */
      120+    4465    1         2 PRIOB UBIN(6) UNAL,            /*BASE EXEC PRIORITY                       */
      121+    4466    1         2 MODE UBIN(6) UNAL,             /* USER MODE (SEE B$JIT DEF)               */
      122+    4467    1         2 BRKCNT UBIN(6) UNAL,            /* BREAK COUNT                        */
      123+    4468    1         2 WOO CHAR(8),                   /* WORK STATION NAME                       */
      124+    4469    1         2 PT UBIN(18) UNAL,              /*PAGE TABLE ADDRESS MOD 64                */
      125+    4470    1         2 SYSID UBIN(18) UNAL,           /*SYSTEM ID NUMBER                         */
      126+    4471    1         2 DL$ PTR,                       /*DO LIST POINTER.                         */
      127+    4472    1         2 ENQ,
      128+    4473    1           3 COUNT UBIN HALF UNAL,        /* USER ENQ COUNT (FORMERLY IN JIT)        */
      129+    4474    1           3 WAIT UBIN HALF UNAL,         /* ENTRYX OF WAIT ENQ BLOCK                */
      130+    4475    1         2 MISC UBIN(36) UNAL,            /*MISC DATA                                */
      131+    4476    1         2 MISC$ REDEF MISC PTR;
      132+    4477        /*                                                                    */
      133+    4478        /*    DO LIST ENTRY DEFINITION                                        */
      134+    4479        /*                                                                    */
      135+    4480    1   DCL 1 B$DO BASED DALIGNED,
      136+    4481    1         2 LNK$ PTR UNAL,                 /* LINK TO NEXT ENTRY                      */
      137+    4482    1         2 ENTER EPTR UNAL,               /* SYSTEM EVENT HANDLER ENTRY              */
      138+    4483    1         2 BUSY BIT(1) UNAL,              /* ENTRY BUSY, NOT READY FOR EVENT         */
      139+    4484    1         2 CONT BIT(1) UNAL,              /* ENTRY CONTINUED IN NEXT BLOCK           */
      140+    4485    1         2 SCHDDO BIT(1) UNAL,             /* BUILT BY INITDO/SCHDDO FLAG        */
      141+    4486    1         2 SAVE BIT(1) UNAL,               /* SAVE EVENT IF GHOST NOT READY*/
      142+    4487    1         2 * BIT(5) UNAL,
      143+    4488    1         2 WSR UBIN(9) UNAL,              /* WSR OF EVENT DOMAIN                     */
      144+    4489    1         2 ECCSC UBIN(18) UNAL,           /* ECC SUBCODE FOR EVENT EXC FRAME         */
      145+    4490    1         2 EVID UBIN(36) UNAL,            /* USER EVENT IDENTIFIER                   */
      146+    4491    1         2 ERRC ,                         /* ECC ERROR CODE                          */
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:6    
      147+    4492    1           3 FCG BIT(18) UNAL,            /* FUNCTIONAL CODE GROUP                   */
      148+    4493    1           3 CODE UBIN(15) UNAL,          /* ERROR CODE                              */
      149+    4494    1           3 SEV UBIN(3) UNAL,            /* SEVERITY                                */
      150+    4495    1         2 ECCSZ UBIN(36) UNAL,           /* NR WORDS ECC INFO BELOW                 */
      151+    4496    1         2 ECCINFO(0:4) UBIN WORD,
      152+    4497    1         2 IOCOMP REDEF ECCINFO,          /* IO COMPLETION INFO                      */
      153+    4498    1           3 TYC BIT(36),
      154+    4499    1           3 ARS UBIN(36),
      155+    4500    1           3 DVE,
      156+    4501    1             4 DVBYTE BIT(9) UNAL,
      157+    4502    1             4 EOMCHAR CHAR(1) UNAL,
      158+    4503    1           3 * UBIN(18) UNAL,
      159+    4504    1           3 CNTR UBIN(36),
      160+    4505    1           3 * UBIN(36);
      161+    4506        /*                                                                    */
      162+    4507        /*                STRUCTURE FOR CONTINUED DO LIST ENTRIES             */
      163+    4508        /*                                                                    */
      164+    4509    1   DCL 1 B$DOCONT BASED DALIGNED,
      165+    4510    1         2 LNK$ PTR UNAL,                 /* LINK TO NEXT ENTRY                      */
      166+    4511    1         2 * BIT(36) UNAL,
      167+    4512    1         2 * BIT(36) UNAL,
      168+    4513    1         2 ECCINFO(0:8) UBIN WORD;        /*DATA                                     */
      169+    4514        /* THE FOLLOWING STRUCTURE DESCRIBES THE USER TABLES AS AN            */
      170+    4515        /* ARRAY TO PERMIT LOCATING USER ELEMENTS GIVEN                       */
      171+    4516        /* A USER NUMBER.                                                     */
      172+    4517        /* IT SHOULD BE REFERED TO THROUGH THE POINTER B$USRT$ .              */
      173+    4518        /*                                                                    */
      174+    4519        /*                                                                    */
      175+    4520    1   DCL 1 B$USER(0:0) BASED ALIGNED,
      176+    4521    1         2 FLG BIT(36) UNAL,              /* FLAGS                                   */
      177+    4522    1         2 ASYNCH BIT(36) UNAL,           /* ASYNCHRONOUS FLAGS                      */
      178+    4523    1         2 FL UBIN UNAL,                /*STATE QUEUE FWD LINK                     */
      179+    4524    1         2 BL UBIN UNAL,                /*STATE QUEUE BKWD LINK                    */
      180+    4525    1         2 MRT UBIN UNAL,               /*TIME LIMIT REMAINING                     */
      181+    4526    1         2 UTSUSED UBIN UNAL,           /*TIME USED THUS FAR                       */
      182+    4527    1         2 MF UBIN(9) UNAL,               /*MASTER FUNCTION COUNT                    */
      183+    4528    1         2 ACP UBIN(9) UNAL,              /*COMMAND PROCESSOR NUMBER                 */
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:7    
      184+    4529    1         2 DB UBIN(9) UNAL,               /*DEBUGGER PROCESSOR NUMBER                */
      185+    4530    1         2 ASL UBIN(9) UNAL,              /*ALT SHRD LIB PROC NUMBER                 */
      186+    4531    1         2 APR UBIN(12) UNAL,             /*SHRD PROCESSOR NUMBER                    */
      187+    4532    1         2 APO UBIN(12) UNAL,             /*SHRD PROC OVLY NUMBER                    */
      188+    4533    1         2 ASP UBIN(6) UNAL,              /*SHRD LIB PROCESSOR NUMBER                */
      189+    4534    1         2 CMF UBIN(6) UNAL,              /* COMMUNICATIONS MASTER FUNC              */
      190+    4535    1         2 PCT UBIN(18) UNAL,
      191+    4536    1         2 SQ    UBIN(9) UNAL,            /* RESOURCE SUBQUEUE LINK  */
      192+    4537    1         2 CPU UBIN(9) UNAL,              /* REQUESTED CPU #                         */
      193+    4538    1         2 US UBIN(6) UNAL,               /*USER STATE                               */
      194+    4539    1         2 PTSIZ UBIN(6) UNAL,            /* PTABLE SIZE (MOD 64)     */
      195+    4540    1         2 PRIO UBIN(6) UNAL,             /*EXECUTION PRIORITY                       */
      196+    4541    1         2 PRIOB UBIN(6) UNAL,            /*BASE EXEC PRIORITY                       */
      197+    4542    1         2 MODE UBIN(6) UNAL,             /* USER MODE (SEE B$JIT DEF)               */
      198+    4543    1         2 BRKCNT UBIN(6) UNAL,            /* BREAK COUNT                        */
      199+    4544    1         2 WOO CHAR(8),                   /* WORK STATION NAME                       */
      200+    4545    1         2 PT UBIN(18) UNAL,              /*PAGE TABLE ADDRESS MOD 64                */
      201+    4546    1         2 SYSID UBIN(18) UNAL,           /*SYSTEM ID NUMBER                         */
      202+    4547    1         2 DL$ PTR,                       /*DO LIST POINTER.                         */
      203+    4548    1         2 ENQ,
      204+    4549    1           3 COUNT UBIN HALF UNAL,        /* USER ENQ COUNT (FORMERLY IN JIT)        */
      205+    4550    1           3 WAIT UBIN HALF UNAL,         /* ENTRYX OF WAIT ENQ BLOCK                */
      206+    4551    1         2 MISC UBIN(36) UNAL,            /*MISC DATA                                */
      207+    4552    1         2 MISC$ REDEF MISC PTR;
      208+    4553        /**/
      209+    4554        /* THE B$USERREFS MACRO PROVIDES SYMREFS FOR THE USER TABLE POINTER  */
      210+    4555        /* AND THE POINTER TO THE CURRENT USER'S USER TABLE ENTRY.           */
      211+    4556        /**/
      212+    4557        %MACRO B$USERREFS;
      213+    4558        DCL S$CU$ PTR SYMREF;                  /* POINTER TO CURRENT USER */
      214+    4559        DCL B$USRT$ PTR SYMREF;                /* POINTER TO USER TABLES */
      215+    4560        %MEND;
       20     4561        %B$USERREFS;
              4562    1   DCL S$CU$ PTR SYMREF;                  /* POINTER TO CURRENT USER */
              4563    1   DCL B$USRT$ PTR SYMREF;                /* POINTER TO USER TABLES */
       21     4565        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:8    
       22     4566        %INCLUDE SS_SCHED_C;
        1+    4567        /*M*  SCHEDULER EVENT AND STATE DEFINITION STRINGS                    */
        2+    4568        /*T***********************************************************/
        3+    4569        /*T*                                                         */
        4+    4570        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5+    4571        /*T*                                                         */
        6+    4572        /*T***********************************************************/
        7+    4573        /*                                                                    */
        8+    4574        /*    EVENT DEFINITIONS                                               */
        9+    4575        /*F*  NAME:  SS_SCHED_EVENT                                     */
       10+    4576        /*                                                                    */
       11+    4577        %EQU SS_IIP=1;
       12+    4578                      /*K* SS_IIP
       13+    4579                      }SS_IIP         1     IOM I/O has been started.         */
       14+    4580        %EQU SS_IIPC=2;
       15+    4581                      /*K* SS_IIPC
       16+    4582                      }SS_IIPC        2     Comgroup I/O has been started.*/
       17+    4583        %EQU SS_QMF=3;
       18+    4584                      /*K* SS_QMF
       19+    4585                      }SS_QMF         3     Current user's Master Function counter has
       20+    4586                      }                     reached the limit.              */
       21+    4587        %EQU SS_CRD=4;
       22+    4588                      /*K* SS_CRD
       23+    4589                      }SS_CRD         4     Communications read has been started.*/
       24+    4590        %EQU SS_CIC=5;
       25+    4591                      /*K* SS_CIC
       26+    4592                      }SS_CIC         5     Communications read has completed.*/
       27+    4593        %EQU SS_CBL=7;
       28+    4594                      /*K* SS_CBL
       29+    4595                      }SS_CBL         7     Communications output cannot continue at this
       30+    4596                      }                     time.                       */
       31+    4597        %EQU SS_CUB=8;
       32+    4598                      /*K* SS_CUB
       33+    4599                      }SS_CUB         8     Communications output may continue. */
       34+    4600        %EQU SS_CBK=10;
       35+    4601                      /*K* SS_CBK
       36+    4602                      }SS_CBK        10     Break character was received.   */
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:9    
       37+    4603        %EQU SS_CEC=12;
       38+    4604                      /*K* SS_CEC
       39+    4605                      }SS_CEC        12     Control Y sequence was received. */
       40+    4606        %EQU SS_ERR=14;
       41+    4607                      /*K* SS_ERR
       42+    4608                      }SS_ERR        14     An operator Error Keyin was received.*/
       43+    4609        %EQU SS_ABRT=16;
       44+    4610                      /*K* SS_ABRT
       45+    4611                      }SS_ABRT       16     An operator X (Abort) Keyin was received.*/
       46+    4612        %EQU SS_CAN=18;
       47+    4613                      /*K* SS_CAN
       48+    4614                      }SS_CAN        18     The user is to be canceled.    */
       49+    4615        %EQU SS_DISC=20;
       50+    4616                      /*K* SS_DISC
       51+    4617                      }SS_DISC       20     The user's terminal has been disconnected. */
       52+    4618        %EQU SS_WU=23;
       53+    4619                      /*K* SS_WU
       54+    4620                      }SS_WU         23     The user is to be awakened from the wait
       55+    4621                      }                     state.                    */
       56+    4622        %EQU SS_SL=25;
       57+    4623                      /*K* SS_SL
       58+    4624                      }SS_SL         25     The user is to be placed in the Wait state.
       59+    4625                      }                     Reported by various monitor procedures. */
       60+    4626        %EQU SS_SLPMME=26;
       61+    4627                      /*K*  SS_SLPMME
       62+    4628                      }SS_SLPMME     26     The user is to be placed in the wait
       63+    4629                      }                     state.  Reported by the M$WAIT monitor
       64+    4630                      }                     service only.  */
       65+    4631        %EQU SS_QA=27;
       66+    4632                      /*K* SS_QA
       67+    4633                      }SS_QA         27     Queue For Access.  The user is placed in the
       68+    4634                      }                     Queued For Access (SQA) state. */
       69+    4635        %EQU SS_UQA=28;
       70+    4636                      /*K* SS_UQA
       71+    4637                      }SS_UQA        28     Unqueue from SQA state.        */
       72+    4638        %EQU SS_QE=29;
       73+    4639                      /*K* SS_QE
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:10   
       74+    4640                      }SS_QE         29     The user has reached Quantum End.*/
       75+    4641        %EQU SS_IOC=30;
       76+    4642                      /*K* SS_IOC
       77+    4643                      }SS_IOC        30     An IOM I/O operation has completed.*/
       78+    4644        %EQU SS_IOCU=31;
       79+    4645                      /*K* SS_IOCU
       80+    4646                      }SS_IOCU       31     An IOM I/O operation has completed and
       81+    4647                      }                     the user is made executable.*/
       82+    4648        %EQU SS_DISCP=32;
       83+    4649                      /*K* SS_DISCP
       84+    4650                      }SS_DISCP      32     The user is in the process of
       85+    4651                      }                     disconnecting.               */
       86+    4652        %EQU SS_DU=33;
       87+    4653                      /*K* SS_DU
       88+    4654                      }SS_DU         33     Delete user. */
       89+    4655        %EQU SS_AU=34;
       90+    4656                      /*K* SS_AU
       91+    4657                      }SS_AU         34     Add new user to the system. */
       92+    4658        %EQU SS_AP=35;
       93+    4659                      /*K* SS_AP
       94+    4660                      }SS_AP         35     Associate shared processors. */
       95+    4661        %EQU SS_MP=36;
       96+    4662                      /*K* SS_MP
       97+    4663                      }SS_MP         36     Block for Master CPU. */
       98+    4664        %EQU SS_QC=37;
       99+    4665                      /*K* SS_QC
      100+    4666                      }SS_QC         37     Queue for FM cache. */
      101+    4667        %EQU SS_UQC=38;
      102+    4668                      /*K* SS_UQC
      103+    4669                      }SS_UQC        38     Unqueue for FM cache. */
      104+    4670        %EQU SS_CW=39;
      105+    4671                      /*K* SS_CW
      106+    4672                      }SS_CW         39     Wait for Communications I/O to complete.*/
      107+    4673        %EQU SS_FC=40;
      108+    4674                      /*K* SS_FC
      109+    4675                      }SS_FC         40     FEP crashed. */
      110+    4676        %EQU SS_FPLDTRC=41;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:11   
      111+    4677                      /*K* SS_FPLDTRC
      112+    4678                      }SS_FPLDTRC    41     Associated FPRG has done an M$LDTRC. */
      113+    4679        %EQU SS_IIPCA=42;
      114+    4680                      /*K* SS_IIPCA
      115+    4681                      }SS_IIPCA      42     Comgroup I/O in progress - ALTRET.*/
      116+    4682        %EQU SS_FPEVNT=43;
      117+    4683                      /*K* SS_FPEVNT
      118+    4684                      }SS_FPEVNT     43     Event received from associated FPRG (I/O
      119+    4685                      }                     complete on FPRG exit).  */
      120+    4686        /*                                                                    */
      121+    4687        %EQU SS_CBF=62;
      122+    4688                      /*K* SS_CBF
      123+    4689                      }SS_CBF        62     Communications output cannot continue
      124+    4690                      }                     at this time, for current user. */
      125+    4691        %EQU SS_CBA=63;
      126+    4692                      /*K* SS_CBA
      127+    4693                      }SS_CBA        63     Communications output may continue. */
      128+    4694        %EQU SS_NC=64;
      129+    4695                      /*K* SS_NC
      130+    4696                      }SS_NC         64     No memory available (No Core). */
      131+    4697        %EQU SS_CA=65;
      132+    4698                      /*K* SS_CA
      133+    4699                      }SS_CA         65     Memory available (Core Available). */
      134+    4700        %EQU SS_NQW=66;
      135+    4701                      /*K* SS_NQW
      136+    4702                      }SS_NQW        66     Enqueue/dequeue resource available. */
      137+    4703        %EQU SS_NQR=67;
      138+    4704                      /*K* SS_NQR
      139+    4705                      }SS_NQR        67     Enqueue/dequeue resource not available. */
      140+    4706        %EQU SS_NQP=68;
      141+    4707                      /*K* SS_NQP
      142+    4708                      }SS_NQP        68     No IOQ/IOS packets available. */
      143+    4709        %EQU SS_QPA=69;
      144+    4710                      /*K* SS_QPA
      145+    4711                      }SS_QPA        69     IOQ/IOS packet available. */
      146+    4712        %EQU SS_NAP=70;
      147+    4713                      /*K* SS_NAP
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:12   
      148+    4714                      }SS_NAP        70     Array Processor not available. */
      149+    4715        %EQU SS_APA=71;
      150+    4716                      /*K* SS_APA
      151+    4717                      }SS_APA        71     Array Processor available. */
      152+    4718        /*                                                                    */
      153+    4719        /*         STATE QUEUE DEFINITIONS                                    */
      154+    4720        /*                                                                    */
      155+    4721        %EQU SS_SC1=1;
      156+    4722        %EQU SS_SC2=2;
      157+    4723        %EQU SS_SC3=3;
      158+    4724        %EQU SS_SC4=4;
      159+    4725        %EQU SS_SC5=5;
      160+    4726        %EQU SS_SC6=6;
      161+    4727        %EQU SS_SC7=7;
      162+    4728        %EQU SS_SC8=8;
      163+    4729        %EQU SS_SC9=9;
      164+    4730        %EQU SS_SC10=10;
      165+    4731        %EQU SS_SC11=11;
      166+    4732        %EQU SS_SCU=12;
      167+    4733        %EQU SS_STOB=13;
      168+    4734        %EQU SS_SIOW=14;
      169+    4735        %EQU SS_SIOWC=15;
      170+    4736        %EQU SS_SIOMF=16;
      171+    4737        %EQU SS_SW=17;
      172+    4738        %EQU SS_SDSC=18;
      173+    4739        %EQU SS_SQA=19;
      174+    4740        %EQU SS_SQR=20;
      175+    4741        %EQU SS_STI=21;
      176+    4742        %EQU SS_SIOCACHE=22;
      177+    4743        %EQU SS_SCW = 23;
      178+    4744        %EQU SS_SNULL=24;
      179+    4745        %MACRO S_STATE (FPTN=S_STATE);
      180+    4746
      181+    4747        %LSET LISTDIR='0'B;
      182+    4748        %LSET LISTEXP='1'B;
      183+    4749        %LSET LISTCOM='0'B;
      184+    4750        %LSET LISTSUB='1'B;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:13   
      185+    4751
      186+    4752        DCL FPTN(0:24) CONSTANT CHAR(4) INIT(
      187+    4753              '    ',
      188+    4754              'SC1 ',            /* State=Compute queue 1 (highest) */
      189+    4755              'SC2 ',            /* State=Compute Queue 2 */
      190+    4756              'SC3 ',            /* State=Compute queue 3 */
      191+    4757              'SC4 ',            /* State=Compute queue 4 */
      192+    4758              'SC5 ',            /* State=Compute queue 5 */
      193+    4759              'SC6 ',            /* State=Compute queue 6 */
      194+    4760              'SC7 ',            /* State=Compute queue 7 */
      195+    4761              'SC8 ',            /* State=Compute queue 8 */
      196+    4762              'SC9 ',            /* State=Compute queue 9 */
      197+    4763              'SC10',            /* State=Compute queue 10 */
      198+    4764              'SC11',            /* State=Compute queue 11 (lowest) */
      199+    4765              'SCU ',            /* State=Current user */
      200+    4766              'SCOB',            /* State=Blocked, doing output */
      201+    4767              'SIOW',            /* State=I/O wait */
      202+    4768              'SIOC',            /* State=ComGroup I/O wait */
      203+    4769              'SMF ',            /* State=Master Function Count too high */
      204+    4770              'SW  ',            /* State=Waiting (asleep) */
      205+    4771              'SDSC',            /* State=Disconnected (going through logoff ) */
      206+    4772              'SQA ',            /* State=Queued for access */
      207+    4773              'SQR ',            /* State=Queued for resource (see subqueues, below) */
      208+    4774              'STI ',            /* State=Terminal Inputting */
      209+    4775              'SQC ',            /* State=Queued for I/O cache I/O */
      210+    4776              'SCW ',            /* State=Communications (FEP) I/O Wait */
      211+    4777              'SNUL');           /* State=Null (no user) */
      212+    4778        %MEND;
      213+    4779        %MACRO S_RSTATE (FPTN=S_RSTATE);
      214+    4780
      215+    4781        %LSET LISTDIR='0'B;
      216+    4782        %LSET LISTEXP='1'B;
      217+    4783        %LSET LISTCOM='0'B;
      218+    4784        %LSET LISTSUB='1'B;
      219+    4785
      220+    4786        DCL  FPTN(0:5) CONSTANT CHAR(4) INIT(
      221+    4787              'QRCQ',          /* State=Queued for space in communications circular queue */
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:14   
      222+    4788                'QRMM',          /* State=Queued for resource memory */
      223+    4789                'QRNQ',          /* State=Queued for an M$ENQued resource */
      224+    4790                'QRIO',          /* State=Queued for an IOQ packet */
      225+    4791                'QRAP',          /* State=Queued for array processor */
      226+    4792                'SQR5');         /* State=[spare, unused] */
      227+    4793        %MEND;
      228+    4794        /*  CPU state definitions                                         */
      229+    4795        %EQU SS_STOP#    = 0;      /* CPU stopped     */
      230+    4796        %EQU SS_PAUSE#   = 1;      /* CPU paused      */
      231+    4797        %EQU SS_RUN#     = 2;      /* CPU running     */
      232+    4798        %EQU SS_REL#     = 3;      /* CPU released    */
       23     4799        %PLIST;
       24     4800        %INCLUDE SS_SCHED_R;
       25     4843        %INCLUDE P_PMDAT_R;
       26     5151        %INCLUDE PM_BUCKET_C;
       27     5236        %DUMMY_BUCKET (NAME=P_INTCOMP,STCLASS=SYMREF);
       28     5242        %INCLUDE FM_DATA_R;
       29     5256        %INCLUDE HF_LOCK_C;
       30     5270        %INCLUDE HF_DATA_R;
       31     5313        %INCLUDE JM$STRUCT;
       32     6058        %INCLUDE JMA_DATA_R;
       33     6067        %INCLUDE JM_CNTRL_R;
       34     6956        %INCLUDE B$MAP;
       35     7055        %INCLUDE B$ROSEG;
       36     7118        %INCLUDE CP_6_SUBS;
       37     7658        %INCLUDE UM$CP6V_C;
       38     7845        %INCLUDE UM_ERRORS_C;
       39     7879        %FPT$RUE_V;
       40     7882    1   DCL 1 SS_EVENT_ERR CONSTANT,
       41     7883    1         2 FCG BIT(12) INIT('2323'O),      /* SS                                 */
       42     7884    1         2 MID BIT(6) INIT ('22'O),        /* R                                  */
       43     7885    1         2 MON BIT(1) INIT('1'B),
       44     7886    1         2 CODE UBIN(14) INIT(120) UNAL,
       45     7887    1         2 SEV UBIN(3) INIT(0) UNAL;
       46     7888        %INCLUDE B$P;
       47     7972        %INCLUDE NK$LDCT;
       48     8074        %NK$LDCT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:15   
       49     8120    1   DCL LDCT$ PTR BASED;
       50     8121    1   DCL 1 LOCK BASED ALIGNED,
       51     8122    1         2 UNLOCKER UBIN(36),
       52     8123    1         2 USR UBIN BYTE CALIGNED,
       53     8124    1         2 PNO UBIN BYTE CALIGNED,
       54     8125    1         2 LOCKER UBIN HALF CALIGNED;
       55     8126        %MACRO UNLOCKU (G#="");  /* For unlocking gates locked while running service */
       56     8127                ADDR(G#)->LOCK.USR = 0;    /* Zap usr so diag lock code allows unlock */
       57     8128                CALL HFC$UNLOCK (G#);
       58     8129        %MEND;
       59     8130        %JM_PART (FPTN=JM$PT,STCLASS=BASED);
       60     8185        /* STRING SUBS FOR LOCALLY KNOWN EVENTS.  THESE MAY NEED              */
       61     8186        /* TO BE MODIFIED IF LOW NUMBERED EVENTS ARE REDEFINED.               */
       62     8187        %EQU SS_NEWUSER=0;
       63     8188        %EQU SS_SKIPUSER=99;
       64     8189        %SUB SS_CICCU=6;
       65     8190        %SUB SS_CUBEX=9;
       66     8191        %SUB SS_CBKEX=11;
       67     8192        %SUB SS_CECEX=13;
       68     8193        %SUB SS_ERRBLK=15;
       69     8194        %SUB SS_ABRTBLK=17;
       70     8195        %SUB SS_CANBLK=19;
       71     8196        %SUB SS_DISCBLK=21;
       72     8197        %SUB SS_DISCX=22;
       73     8198        %SUB SS_WUEX=24;
       74     8199        %SUB SS_PARK=79;
       75     8200        /*                                                                    */
       76     8201        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:16   
       77     8202        /*                                                                    */
       78     8203        /*         EVENT PERMISSION TABLE                                     */
       79     8204        /*                                                                    */
       80     8205        /*         SETS SPECIFIC STATE PERMISSION BITS FOR EVENTS.
       81     8206                   EACH ENTRY WORD CORRESPONDS TO AN EVENT.  IF A STATE BIT
       82     8207                   IS SET ITS OK FOR THE EVENT TO BE REPORTED ON A USER IN
       83     8208                   THAT STATE.  STATE BIT 0 (CONT) INDICATES THAT THE NEXT
       84     8209                   EVENT WORD SHOULD BE EXAMINED IF THE STATE BIT IS NOT SET
       85     8210                   IN THE CURRENT WORD.  THUS, IN SOME CASES THERE ARE TWO
       86     8211                   POSSIBLE EVENT ACTIONS THAT CAN OCCUR DEPENDING ON THE
       87     8212                   STATE OF THE USER.  IF A PERMISSION BIT IS NOT SET,
       88     8213                   THE EVENT IS ILLEGAL AND A SC 120 OCCURS.                  */
       89     8214        %MACRO  PTBL (CONT=0,SEXU=0,SCU=0,STOB=0,SIOW=0,SIOMF=0,SW=0,
       90     8215                   SDSC=0,SQA=0,SQR=0,STI=0,SQC=0,SNULL=0,SIOWC=0,SCW=0);
       91     8216                , 2 *(0:35) UBIN(1) UNAL INIT(CONT,SEXU*11,SCU,STOB,SIOW,SIOWC,SIOMF,
       92     8217                  SW,SDSC,SQA,SQR,STI,SQC,SCW,SNULL,0*0)
       93     8218        %MEND;
       94     8219        /*         SETS ALL STATE PERMISSION BITS                             */
       95     8220        %MACRO  PTBLALL;
       96     8221                  ,2 *(0:35) UBIN(1) UNAL INIT(0,1*0)
       97     8222        %MEND;
       98     8223        /*         RESETS ALL STATE PERMISSION BITS.  FOR UNUSED EVENTS       */
       99     8224        %MACRO PTBLNONE;
      100     8225                  ,2 * UBIN INIT(0)
      101     8226        %MEND;
      102     8227        /*                                                                    */
      103     8228    1   DCL 1 PERM_ CONSTANT
      104     8229        %PTBL;
      105     8233        /*   %SS_IIP                                                           */
      106     8234        %PTBL (SCU=1);
      107     8238        /*   %SS_IIPC                                                          */
      108     8239        %PTBL (SCU=1);
      109     8243        /*   %SS_QMF                                                           */
      110     8244        %PTBL (SCU=1);
      111     8248        /*   %SS_CRD                                                           */
      112     8249        %PTBL (SCU=1);
      113     8253        /*   %SS_CIC                                                           */
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:17   
      114     8254        %PTBL (CONT=1,STI=1,SCW=1);
      115     8258        %PTBL (SCU=1);
      116     8262        /*   %SS_CBL                                                           */
      117     8263        %PTBL (SCU=1);
      118     8267        /*   %SS_CUB                                                           */
      119     8268        %PTBL (CONT=1,STOB=1);
      120     8272        %PTBL (SEXU=1,SCU=1,SIOW=1,SIOWC=1,SIOMF=1,SW=1,SQA=1,SQR=1,STI=1,
      121     8273               SDSC=1,SQC=1,SCW=1);
      122     8277        /*   %SS_CBK                                                           */
      123     8278        %PTBL (CONT=1,SCU=1,SIOW=1,SIOMF=1,SQA=1,SQR=1,SNULL=1,SDSC=1,SQC=1,SCW=1);
      124     8282        %PTBL (SEXU=1,STOB=1,SW=1,STI=1,SIOWC=1);
      125     8286        /*   %SS_CEC                                                           */
      126     8287        %PTBL (CONT=1,SCU=1,SIOW=1,SIOMF=1,SQA=1,SQR=1,SNULL=1,SDSC=1,SQC=1,SCW=1);
      127     8291        %PTBL (SEXU=1,STOB=1,SW=1,STI=1,SIOWC=1);
      128     8295        /*   %SS_ERR                                                           */
      129     8296        %PTBL (CONT=1,SEXU=1,SW=1,STOB=1,SDSC=1,SIOWC=1);
      130     8300        %PTBL (SCU=1,SIOW=1,SIOMF=1,SQA=1,SQR=1,STI=1,SNULL=1,SQC=1,SCW=1);
      131     8304        /*   %SS_ABRT                                                          */
      132     8305        %PTBL (CONT=1,SEXU=1,SW=1,STI=1,STOB=1,SDSC=1,SIOWC=1);
      133     8309        %PTBL (SCU=1,SIOW=1,SIOMF=1,SQA=1,SQR=1,SNULL=1,SQC=1,SCW=1);
      134     8313        /*   %SS_CAN                                                           */
      135     8314        %PTBL (CONT=1,SEXU=1,SW=1,STI=1,STOB=1,SDSC=1,SIOWC=1);
      136     8318        %PTBL (SCU=1,SIOW=1,SIOMF=1,SQA=1,SQR=1,SNULL=1,SQC=1,SCW=1);
      137     8322        /*   %SS_DISC                                                          */
      138     8323        %PTBL (CONT=1,SEXU=1,SW=1,STI=1,STOB=1,SIOWC=1);
      139     8327        %PTBL (CONT=1,SCU=1,SIOW=1,SIOMF=1,SQA=1,SQR=1,SNULL=1,SQC=1,SCW=1);
      140     8331        %PTBL (SDSC=1);
      141     8335        /*   %SS_WU                                                            */
      142     8336        %PTBL (CONT=1,SW=1);
      143     8340        %PTBL (SEXU=1,SCU=1,STOB=1,SIOW=1,SIOWC=1,SIOMF=1,SQA=1,SQR=1,STI=1,
      144     8341              SNULL=1,SQC=1,SCW=1);
      145     8345        /*   %SS_SL                                                            */
      146     8346        %PTBL (SCU=1);
      147     8350        /*   %SS_SLPMME                                                        */
      148     8351        %PTBL (SCU=1);
      149     8355        /*   %SS_QA                                                            */
      150     8356        %PTBL (SCU=1);
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:18   
      151     8360        /*   %SS_UQA                                                           */
      152     8361        %PTBL (SCU=1,SQA=1);
      153     8365        /*   %SS_QE                                                            */
      154     8366        %PTBL (SCU=1);
      155     8370        /*   %SS_IOC                                                           */
      156     8371        %PTBL (SEXU=1,SCU=1,STOB=1,SIOW=1,SIOWC=1,SIOMF=1,SW=1,SQA=1,SQR=1,
      157     8372              STI=1,SDSC=1,SQC=1,SCW=1);
      158     8376        /*   %SS_IOCU                                                          */
      159     8377        %PTBL (SEXU=1,SCU=1,STOB=1,SIOW=1,SIOWC=1,SIOMF=1,SW=1,SQA=1,SQR=1,
      160     8378               STI=1,SQC=1,SCW=1);
      161     8382        /*   %SS_DISCP                                                           */
      162     8383        %PTBL (SCU=1);
      163     8387        /*   %SS_DU                                                            */
      164     8388        %PTBL (SCU=1);
      165     8392        /*   %SS_AU                                                            */
      166     8393        %PTBL (SCU=1);
      167     8397        /*   %SS_AP                                                            */
      168     8398        %PTBL (SCU=1);
      169     8402        /*   %SS_MP                                                            */
      170     8403        %PTBL  (SCU=1);
      171     8407        /*   %SS_QC                                                          */
      172     8408        %PTBL (SCU=1);
      173     8412        /*   %SS_UQC                                                         */
      174     8413        %PTBL (SQC=1);
      175     8417        /*   %SS_CW                                                          */
      176     8418        %PTBL (SCU=1);
      177     8422        /*   %SS_FC                                                          */
      178     8423        %PTBL (STI=1,STOB=1,SCW=1);
      179     8427        /*   %SS_FPLDTRC                                                  */
      180     8428        %PTBL (SCU=1,SIOW=1,SIOMF=1,SQA=1,SQR=1,SNULL=1,SDSC=1,SQC=1,SCW=1,
      181     8429               SEXU=1,STOB=1,SW=1,STI=1,SIOWC=1);
      182     8433        /*    %SS_IIPCA                    */
      183     8434        %PTBL (SCU=1);
      184     8438        /*    %SS_FPEVNT                                                   */
      185     8439        %PTBL (SCU=1,SIOW=1,SIOMF=1,SQA=1,SQR=1,SNULL=1,SDSC=1,SQC=1,SCW=1,
      186     8440               SEXU=1,STOB=1,SW=1,STI=1,SIOWC=1);
      187     8444        /*    44-61 Unassigned right now                                   */
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:19   
      188     8445        %PTBL;
      189     8449        %PTBL;
      190     8453        %PTBL;
      191     8457        %PTBL;
      192     8461        %PTBL;
      193     8465        %PTBL;
      194     8469        %PTBL;
      195     8473        %PTBL;
      196     8477        %PTBL;
      197     8481        %PTBL;
      198     8485        %PTBL;
      199     8489        %PTBL;
      200     8493        %PTBL;
      201     8497        %PTBL;
      202     8501        %PTBL;
      203     8505        %PTBL;
      204     8509        %PTBL;
      205     8513        %PTBL;
      206     8517        /*   %SS_CBF                                                           */
      207     8518        %PTBL (SCU=1);
      208     8522        /*   %SS_CBA                                                           */
      209     8523        %PTBLALL;
      210     8526        /*   %SS_NC                                                            */
      211     8527        %PTBL (SCU=1);
      212     8531        /*   %SS_CA                                                            */
      213     8532        %PTBLALL;
      214     8535        /*   %SS_NQW                                                           */
      215     8536        %PTBL (SCU=1);
      216     8540        /*   %SS_NQR                                                           */
      217     8541        %PTBLALL;
      218     8544        /*   %SS_NQP                                                           */
      219     8545        %PTBL (SCU=1);
      220     8549        /*   %SS_QPA                                                           */
      221     8550        %PTBLALL;
      222     8553        /*   %SS_NAP                                                           */
      223     8554        %PTBL (SCU=1);
      224     8558        /*   %SS_APA                                                           */
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:20   
      225     8559        %PTBLALL;
      226     8562    1           ;
      227     8563        /*                                                                    */
      228     8564    1   DCL   PERM(0:%SS_APA) REDEF PERM_ UBIN(36);
      229     8565    1   DCL   S_HQ_BYP$ PTR SYMREF READONLY;
      230     8566    1   DCL   S_TQ_BYP$ PTR SYMREF READONLY;
      231     8567    1   DCL   S_RQH_BYP$ PTR SYMREF READONLY;
      232     8568    1   DCL   S_RQT_BYP$ PTR SYMREF READONLY;
      233     8569    1   DCL   S_CUP_BYP$ PTR SYMREF READONLY;
      234     8570    1   DCL   S_HIR_BYP$ PTR SYMREF READONLY;
      235     8571    1   DCL   S_HQ_BYP(0:%SS_SNULL) SBIN BASED(S_HQ_BYP$);
      236     8572    1   DCL   S_TQ_BYP(0:%SS_SNULL) SBIN BASED(S_TQ_BYP$);
      237     8573    1   DCL   S_RQH_BYP(0:5) SBIN BASED(S_RQH_BYP$);
      238     8574    1   DCL   S_RQT_BYP(0:5) SBIN BASED(S_RQT_BYP$);
      239     8575    1   DCL   S_CUP_BYP SBIN BASED(S_CUP_BYP$);
      240     8576    1   DCL   S_HIR_BYP SBIN BASED(S_HIR_BYP$);
      241     8577        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:21   
      242     8578    1   DCL   EVNT UBIN(36);                    /* EVENT NUMBER                       */
      243     8579    1   DCL   USR UBIN BYTE CALIGNED;           /* USER NUMBER                        */
      244     8580    1   DCL 1 FCN CALIGNED,                     /* DCB FUNCTION COUNT AND FLAG        */
      245     8581    1         2 FLAG UBIN(1) UNAL,              /* FLAG INDICATES BLOCKED             */
      246     8582    1         2 CNT UBIN(8) UNAL;               /* COUNT                              */
      247     8583    1   DCL   PTR2$ PTR;                        /* EVENT PARAM                        */
      248     8584        /*                                                                    */
      249     8585        /*                                                                    */
      250     8586    1   DCL   P$ PTR;                           /* USER POINTER                       */
      251     8587    1   DCL   PB$ PTR;                          /* BACKWARD LINK USER POINTER         */
      252     8588    1   DCL   P1$  PTR;
      253     8589    1   DCL   EV$ PTR;                          /* EVENT INFO POINTER                 */
      254     8590    1   DCL   USER UBIN(36);                    /* TEMP USER NUMBER                   */
      255     8591    1   DCL   EVENT UBIN(36);                   /* TEMP EVENT NUMBER                  */
      256     8592    1   DCL 1 FCN_LCL,                          /* DCB FUNCTION COUNT AND FLAG        */
      257     8593    1         2 FLAG UBIN(1) UNAL,              /* FLAG INDICATES BLOCKED             */
      258     8594    1         2 CNT UBIN(8) UNAL;               /* COUNT                              */
      259     8595    1   DCL   HDFLG BIT(1);                     /* HEAD OF QUEUE FLAG                 */
      260     8596    1   DCL   REGENT BIT(1);
      261     8597    1   DCL   UST UBIN(36);                     /* USER STATE                         */
      262     8598    1   DCL   PRIO UBIN(36);                    /* TEMP USER PRIORITY                 */
      263     8599    1   DCL   STATE SBIN;
      264     8600    1   DCL   T UBIN(36);
      265     8601    1   DCL   TT UBIN(36);
      266     8602    1   DCL   INC UBIN(36);                     /* PRIORITY INC INDEX                 */
      267     8603    1   DCL   STFLG UBIN(36);
      268     8604    1   DCL   EFLG UBIN;
      269     8605    1   DCL   EVF SBIN;
      270     8606    1   DCL MRUE_ENT BIT(1) ALIGNED;            /* 1 means M$RUE pmme                 */
      271     8607    1   DCL   RES UBIN;                         /* RESOURCE TEMP                      */
      272     8608    1   DCL   BITS(0:35)     BASED BIT(1) UNAL;
      273     8609    1   DCL   BIT0 BIT(1) BASED ALIGNED;
      274     8610    1   DCL   TIME UBIN(36) BASED;
      275     8611    1   DCL   STIME SBIN BASED;
      276     8612    1   DCL 1 J BASED ALIGNED,
      277     8613    1         2 F UBIN(18) UNAL,
      278     8614    1         2 I UBIN(18) UNAL;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:22   
      279     8615    1   DCL   FLK UBIN(36);                     /* TEMP FORWARD USER LINK             */
      280     8616    1   DCL   BLK UBIN(36);                     /* TEMP BACKWARD USER LINK            */
      281     8617    1   DCL   NI_MFGATE BIT(72) SYMREF ALIGNED;
      282     8618    1   DCL   S_MING SYMREF UBIN(36);
      283     8619    1   DCL   S_CUN UBIN(36) SYMREF;            /* CURRENT USER NUMBER                */
      284     8620    1   DCL   S_PNO UBIN SYMREF;                /* PROCESSOR NUMBER                   */
      285     8621    1   DCL   S_TIM_KEYIN SBIN STATIC SYMDEF INIT(0);
      286     8622    1   DCL   B$PPUT$ PTR SYMREF READONLY;
      287     8623    1   DCL   B$WINDOW$ PTR SYMREF READONLY;
      288     8624    1   DCL B$WSQ0PT$ PTR SYMREF;
      289     8625    1   DCL   B$UPT$ PTR SYMREF READONLY;
      290     8626    1   DCL   B$USERIS$ PTR SYMREF READONLY;
      291     8627    1   DCL   B$ROSEG$ PTR SYMREF READONLY;
      292     8628    1   DCL   B$PS0$ PTR SYMREF READONLY;
      293     8629        /*                                                                    */
      294     8630    1   DCL   SC_RESQ ENTRY CONV(2,0);
      295     8631    1   DCL   SC_ASSOC ENTRY CONV(2,0);
      296     8632    1   DCL   SC_EVENT ENTRY CONV(2,0);
      297     8633    1   DCL   SSS$EOMTIME ENTRY(1);
      298     8634    1   DCL   SSS$RET ENTRY;                    /* CONTINUE INSTEAD OF REGGING        */
      299     8635    1   DCL   SSS$ALTRET ENTRY;            /* ALTRETURN INSTEAD OF REGGING        */
      300     8636    1   DCL   SSS$DU ENTRY;
      301     8637    1   DCL   SSS$WUTIME ENTRY(2);
      302     8638    1   DCL   SSS$BLOCK ENTRY;
      303     8639    1   DCL   SSS$CACHEBP ENTRY;
      304     8640    1   DCL   SSS$CACHE ENTRY;
      305     8641    1   DCL   SSC$SASYNC ENTRY;
      306     8642    1   DCL   SSC$MON ENTRY;
      307     8643    1   DCL   SSQ$NUQUAN ENTRY ALTRET;
      308     8644    1   DCL KIF$LDTRC ENTRY(1) ALTRET;
      309     8645    1   DCL SSV$EVENT ENTRY(7);
      310     8646    1   DCL   MMB$FPP ENTRY(1) ALTRET;          /* FREE PHYS PAGE                     */
      311     8647    1   DCL   MME$CVM ENTRY(4) ALTRET;          /* MAP ONTO SHRD PROC PP              */
      312     8648    1   DCL   PHN$NEW_ST ENTRY(2);
      313     8649    1   DCL   OCZ$SID_UN ENTRY(4) ALTRET;
      314     8650    1   DCL   HFD$CNNCT ENTRY(2);
      315     8651    1   DCL   B$JIT$ PTR SYMREF READONLY;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:23   
      316     8652        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:24   
      317     8653        /*         REPORT USER EVENT PROCEDURE                                */
      318     8654        /*                                                                    */
      319     8655        /*                                                                    */
      320     8656    2           DO INHIBIT;
      321     8657                   %LOCK (G#=S_SCHDGATE);
      322     8660    2              REGENT='0'B;
      323     8661    2              GOTO RCE00;
      324     8662    2           END;                            /* END INHIBIT SECTION                */
      325     8663        /*                                                                    */
      326     8664        /*         ENTRY WITH SCHEDULER GATE ALREADY LOCKED                   */
      327     8665        /*                                                                    */
      328     8666    1   SSR$REGUE: ENTRY(EVNT,USR,FCN,PTR2$);
      329     8667    1           REGENT='1'B;
      330     8668    1   RCE00:  ;
      331     8669    1           MRUE_ENT = '0'B;
      332     8670    1           IF ADDR(USR) = ADDR(NIL) THEN USER=S_CUN;
      333     8671    1           ELSE USER=USR;
      334     8672    1           EVENT=EVNT;
      335     8673    1   RCE0:   ;
      336     8674    1           IF ADDR(PTR2$) = ADDR(NIL) THEN EV$=ADDR(NIL);
      337     8675    1           ELSE EV$=PTR2$;
      338     8676    1           HDFLG='0'B;                     /*ADD TO TAIL OF QUEUE                */
      339     8677    1           P$=ADDR(B$USRT$->B$USER(USER));
      340     8678    1           UST=P$->B$U.US;                 /*USERS CURRENT STATE*/
      341     8679    1           EVF=S_EVF;
      342     8680    1           CALL EVREPRT;                   /* RECORD EVENT                       */
      343     8681    1           P_RUE#(S_PNO)=P_RUE#(S_PNO)+1;
      344     8682        /*                                                                    */
      345     8683    1   RCE1:   P1$=ADDR(PERM(EVENT));
      346     8684    1           IF NOT P1$->BITS(UST) THEN      /* CHECK PERMISSION BIT               */
      347     8685    2              DO;
      348     8686    2                 IF NOT P1$->BIT0 THEN     /* CHECK CONTINUATION                 */
      349     8687    3                    IF MRUE_ENT THEN DO;
      350     8688        /*E* ERROR: SSR-E$EVENTERR
      351     8689           MESSAGE: Event inconsistent with state
      352     8690          MESSAGE1: An event number was passed to M$RUE that is not consistent
      353     8691                    with the target user's current state.
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:25   
      354     8692        */
      355     8693    3                          B$JIT.ERR = SS_EVENT_ERR;
      356     8694                               %UNLOCK(G#=S_SCHDGATE);
      357     8697    3                          RETURN;
      358     8698    3                       END;
      359     8699    2                    ELSE
      360     8700        /*S*    SCREECH_CODE: SSR-S$EVENTERR
      361     8701                TYPE: SCREECH
      362     8702                MESSAGE: Event inconsistent with state                        */
      363     8703    2                       CALL SC_EVENT;
      364     8704    2                 EVENT=EVENT+1;            /* CHECK NEXT WORD IF SO, ELSE SCRE*/
      365     8705    2                 GOTO RCE1;
      366     8706    2              END;
      367     8707    1           IF EVENT > %SS_CBF-1 THEN GOTO RESS; /* RESOURCE EVENTS               */
      368     8708        /*                                                                    */
      369     8709    2           DO CASE (EVENT);
      370     8710        /*                                                                    */
      371     8711    2            CASE (%SS_IIP);                /* I/O IN PROGRESS                    */
      372     8712    2              STATE=%SS_SIOW;              /* I/O WAIT STATE                     */
      373     8713    2   IIP:       ;
      374     8714    2              IF P$->B$U.MF = 0 THEN CALL SSS$RET; /* I/O IS DONE, RETURN        */
      375     8715    2              IF ADDR(FCN) ~= ADDR(NIL)
      376     8716    3              THEN DO;
      377     8717                         %LOCK (G#=F_DCBLOCK);
      378     8720    3                    FCN_LCL = FCN;
      379     8721    3                    IF FCN_LCL.CNT = 0
      380     8722    4                    THEN DO;
      381     8723                               %UNLOCK (G#=F_DCBLOCK);
      382     8726    4                          CALL SSS$RET;
      383     8727    4                       END;
      384     8728    4                    ELSE DO;
      385     8729    4                          FCN_LCL.FLAG=1;
      386     8730    4                          FCN = FCN_LCL;
      387     8731    4                       END;
      388     8732                         %UNLOCK (G#=F_DCBLOCK);
      389     8735    3                 END;
      390     8736    2              CALL  RCE4;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:26   
      391     8737        /*                                                                    */
      392     8738    2            CASE (%SS_QMF);                /* MF LIMIT                           */
      393     8739    2              IF P$->B$U.MF = 0 THEN CALL SSS$RET; /* I/O IS DONE, RETURN        */
      394     8740    2              STATE=%SS_SIOMF;             /* MF STATE                           */
      395     8741    2              CALL  RCE4;
      396     8742    2            CASE (%SS_CW);                 /* COMMUNICATIONS WAIT                */
      397     8743    2              P1$ = ADDR(FCN)->LDCT$;
      398     8744    2              STATE=%SS_SCW;
      399     8745    2              GOTO SET_CIO;                /* Set Comm flag                      */
      400     8746        /*                                                                    */
      401     8747    2            CASE (%SS_CRD);                /* COMMUNICATIONS READ                */
      402     8748    2              CALL INTCOMP;                /* COMPUTE INTERACTION TIME           */
      403     8749    2              P1$ = ADDR(FCN)->LDCT$;
      404     8750    2              IF P$->B$U.FLG.BLK
      405     8751    3              THEN DO;
      406     8752                         %UNLOCKU (G# = "P1$->NK$LDCT.LOCK");
      407     8756    3                    GOTO STQA1;            /* UNBLOCK BEFORE BLOCK               */
      408     8757    3                 END;
      409     8758    2              IF P$->B$U.ASYNCH & %(~U_RESET) THEN
      410     8759    3                 DO;
      411     8760                         %UNLOCKU (G# = "P1$->NK$LDCT.LOCK");
      412     8764    3                    CALL SSS$ALTRET;
      413     8765    3                 END;
      414     8766    2              HDFLG='1'B;                  /*QUEUE ONTO HEAD OF STATE Q          */
      415     8767    2              STATE=%SS_STI;               /*COMM INPUTTING STATE                */
      416     8768    2              CALL SSQ$NUQUAN;
      417     8769    2              GOTO SET_CIO;
      418     8770                                                /**/
      419     8771    2            CASE (%SS_CIC,SS_DISCX);
      420     8772    2              INC=3;                       /* PRIORITY BOOST INDEX               */
      421     8773    2   STIRC:     P$->B$U.FLG.INTUSR='1'B;     /* MARK USER INTERACTIVE              */
      422     8774    2              P$->B$U.FLG.SCIO = '0'B;
      423     8775    2              CALL SSS$EOMTIME(P$->B$U.MISC); /* EOM TIME FOR RESPONSE TIME      */
      424     8776    2              CALL CHSE;
      425     8777                                                /**/
      426     8778    2            CASE (SS_CICCU);               /* COMM INPUT COMPLETE ON CUR USER*/
      427     8779                                                /* NOTE UNBLK BEFORE BLK              */
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:27   
      428     8780    2              P$->B$U.FLG.BLK='1'B;
      429     8781                                                /* NO STATE CHANGE-- RETURN.          */
      430     8782                                                /**/
      431     8783    2            CASE(%SS_CBL);                 /* COMM OUTPUT BLOCKED                */
      432     8784    2              P1$ = ADDR(FCN)->LDCT$;
      433     8785    2              IF P$->B$U.FLG.COBLK THEN
      434     8786    3                 DO;
      435     8787    3                    P$->B$U.FLG.COBLK='0'B; /* RESET BLK BEFORE UNBLK            */
      436     8788                         %UNLOCKU (G# = "P1$->NK$LDCT.LOCK");
      437     8792    3                    CALL SSS$RET;          /* AND RETURN TO CALLER               */
      438     8793    3                 END;
      439     8794    2              STATE=%SS_STOB;              /* COMM OUTPUTE BLOCKED STATE         */
      440     8795    2   SET_CIO:   P$->B$U.FLG.SCIO = '1'B;     /* Set Comm flag                      */
      441     8796    2              P$->B$U.MISC = ADDR(P1$)->TIME; /* Save what should be LDCT$       */
      442     8797    2              P1$->NK$LDCT.TCTLCNT = 0;
      443     8798                   %UNLOCKU (G# = "P1$->NK$LDCT.LOCK");
      444     8802    2              CALL  RCE4;
      445     8803                                                /**/
      446     8804    2            CASE (%SS_CUB);                /* COMM OUTPUT CONTINUE               */
      447     8805    2              INC=4;                       /* PRIORITY BOOST INDEX.              */
      448     8806    2              P$->B$U.FLG.SCIO = '0'B;
      449     8807    2              CALL  CHSE;
      450     8808                                                /**/
      451     8809    2            CASE (SS_CUBEX);               /* COMM OUTPUT CONT WITHOUT BLOCK     */
      452     8810    2              P$->B$U.FLG.COBLK = '1'B;    /* NOTE UNBLK BEFORE BLK              */
      453     8811                                                /**/
      454     8812    2            CASE (%SS_FC);                 /* FEP crashed on this user           */
      455     8813                   %LOCK (G# = S_ASFGATE);
      456     8816    2              P$->B$U.ASYNCH = P$->B$U.ASYNCH | %U_FEPCRSH;
      457     8817                   %UNLOCK (G# = S_ASFGATE);
      458     8820    2              INC = 3;
      459     8821    2              P$->B$U.FLG.SCIO = '0'B;
      460     8822    2              CALL CHSE;                   /* Make him executable                */
      461     8823        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:28   
      462     8824    2            CASE (%SS_CBK,%SS_CEC,SS_ERRBLK,
      463     8825    2                SS_ABRTBLK,SS_CANBLK,SS_DISCBLK);
      464     8826    2              IF UST ~= %SS_SDSC THEN      /* NOP IF DISCONNECT PENDING          */
      465     8827    3                 DO;
      466     8828    3                    STFLG=0;
      467     8829    3                    GOTO ST1;
      468     8830    3                 END;
      469     8831                                                /**/
      470     8832    2            CASE (SS_CBKEX, SS_CECEX,%SS_ERR,
      471     8833    2                   %SS_ABRT,%SS_CAN,%SS_DISC);
      472     8834    2              STFLG=1;
      473     8835                                                /**/
      474     8836    2   ST1:       EFLG = EVENT / 2 - %SS_CBK/2; /* EVENT # RELATIVE TO BREAK EVENT   */
      475     8837    2              IF EFLG = 0 THEN
      476     8838    2                 IF ADDR(FCN) ~= ADDR(NIL) THEN
      477     8839    2                    P$->B$U.BRKCNT=ADDR(FCN)->STIME;
      478     8840    2                 ELSE
      479     8841    2                    P$->B$U.BRKCNT=1;
      480     8842    2              IF UST = %SS_SQR THEN
      481     8843        /*   If resource is ENQ and B$U.MISC = -2 don't release him, otherwise
      482     8844             release all others.                                              */
      483     8845    2                 IF P$->B$U.PRIO = (%SS_NQW-%SS_CBF)/2 AND P$->B$U.MISC
      484     8846    2                   = BITBIN('777777777776'O) THEN
      485     8847    2                    ;
      486     8848    2                 ELSE
      487     8849    3                    DO;
      488     8850    3                       RES=P$->B$U.PRIO;
      489     8851    3                       CALL UQR;
      490     8852    3                       STFLG=1;
      491     8853    3                    END;
      492     8854    2              IF P$->B$U.FLG.NOQUAN THEN   /* don't pincr if he already */
      493     8855    2                 INC=0;                    /* got his "free" quantum */
      494     8856    2              ELSE
      495     8857    2                 INC=3;
      496     8858                   %LOCK (G#=S_ASFGATE);
      497     8861    2              P1$=ADDR(P$->B$U.ASYNCH);
      498     8862    2              P1$->BITS(EFLG)='1'B;        /* SET ASYNCH FLAG BIT                */
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:29   
      499     8863                       /* THE CURRENT USER IS QUEUED BEHIND USER SPECIFIED BY FCN     */
      500     8864                   %UNLOCK (G#=S_ASFGATE);
      501     8867    2              IF STFLG=1
      502     8868    3              THEN DO;
      503     8869    3                    P$->B$U.FLG.SCIO = '0'B;
      504     8870    3                    CALL CHSE;             /* Make him executable                */
      505     8871    3                 END;
      506     8872    2            CASE(%SS_FPLDTRC,%SS_FPEVNT);
      507     8873    2              IF UST=%SS_STOB OR
      508     8874    2                UST=%SS_STI  OR
      509     8875    2                UST=%SS_SIOWC OR
      510     8876    2                UST=%SS_SW OR
      511     8877    3                UST<=%SS_SC11 THEN DO;
      512     8878    3                    P$->B$U.FLG.SCIO='0'B;
      513     8879    3                    INC=3;
      514     8880    3                    CALL CHSE;
      515     8881    3                 END;
      516     8882                   %UNLOCK (G#=S_SCHDGATE);
      517     8885                   %LOCK (G#=S_ASFGATE);
      518     8888    2              P$->B$U.ASYNCH=P$->B$U.ASYNCH|%U_FPLDTRC;
      519     8889                   %UNLOCK (G#=S_ASFGATE);
      520     8892    2              IF EVENT = %SS_FPLDTRC THEN
      521     8893    2                 CALL SSV$EVENT(USR,7,0,FCN,0,,ENTADDR(KIF$LDTRC));
      522     8894    2              RETURN;
      523     8895        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:30   
      524     8896    2            CASE (%SS_WU);                 /* WAKE UP SLEEPING USER              */
      525     8897    2              INC=1;                       /* PRIORITY BOOST INDEX               */
      526     8898    2              CALL  CHSE;
      527     8899                                                /**/
      528     8900    2            CASE (SS_WUEX);                /* IGNORE IF STATE NOT SW */
      529     8901    2            CASE(%SS_SL,%SS_SLPMME);       /* BEGIN WAIT */
      530     8902    2              STATE=%SS_SW;                /* WAIT STATE */
      531     8903                                                /* note: change made per star
      532     8904                                                     32651 makes UMT (PMME)
      533     8905                                                     compute wakeup time.
      534     8906                                                     SL events must be
      535     8907                                                     multiplied out here;
      536     8908                                                     SLPMME is multiplied out
      537     8909                                                     in UMT */
      538     8910    2              IF EVENT = %SS_SL THEN
      539     8911    2                 S$CU$->B$U.MISC=EV$->TIME*100; /* Sleep time in .01 sec*/
      540     8912    2              ELSE
      541     8913    2                 S$CU$->B$U.MISC=EV$->TIME; /* or precomputed in UMT */
      542     8914
      543     8915    2              CALL SSS$WUTIME(S$CU$->B$U.MISC); /*SET MISC TO WAKE UP TIME*/
      544     8916    2              CALL CHSE1;                  /* SORT USER INTO SLEEP QUEUE */
      545     8917    2              IF EVENT = %SS_SLPMME THEN
      546     8918                      %UNLOCK    (G#=S_UDLGATE);
      547     8921                                                /**/
      548     8922    2            CASE (%SS_QA);                 /* QUEUE FOR ACCESS                   */
      549     8923    2              IF P$->B$U.FLG.BLK THEN      /* TEST UNBLK BEFORE BLK              */
      550     8924    3                 DO;
      551     8925    3   STQA1:           P$->B$U.FLG.BLK='0'B;  /*RESET BLOCK BEFORE UNBLOCK          */
      552     8926    3                    CALL SSS$RET;          /* AND RETURN TO CALLER               */
      553     8927    3                 END;
      554     8928    2              ELSE
      555     8929    3                 DO;                       /* IF NOT, QUEUE HIM.                 */
      556     8930    3                    STATE=%SS_SQA;         /* QUEUED FOR ACCES STATE             */
      557     8931    3                    CALL RCE4;
      558     8932    3                 END;
      559     8933                                                /**/
      560     8934    2            CASE (%SS_UQA);                /* UNQUEUE FOR ACCESS                 */
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:31   
      561     8935    2              IF UST=%SS_SQA THEN          /* IF   BLOCKED- RUN HIM.             */
      562     8936    3                 DO;
      563     8937    3                    INC=1;                 /* PRIORITY BOOST INDEX               */
      564     8938    3                    CALL CHSE;
      565     8939    3                 END;
      566     8940    2              ELSE
      567     8941    2                 P$->B$U.FLG.BLK='1'B;     /*SET BLOCK BEFORE UNBLOCK            */
      568     8942                                                /**/
      569     8943    2            CASE (%SS_QC);                 /* QUEUE FOR I/O CACHE                */
      570     8944    2              FLK=BITBIN(FCN);
      571     8945    2              IF FLK ~= 0 THEN
      572     8946    3                 DO;
      573     8947    4                    DO WHILE (B$USRT$->B$USER.SQ(FLK) ~= 0);
      574     8948    4                       FLK = B$USRT$->B$USER.SQ(FLK);
      575     8949    4                    END;
      576     8950    3                    B$USRT$->B$USER.SQ(FLK) = USER;
      577     8951    3                 END;
      578     8952    2              P$->B$U.SQ = 0;
      579     8953                   %UNLOCKU (G# = "EV$ -> TIME");
      580     8957    2              STATE = %SS_SIOCACHE;
      581     8958    2              CALL RCE4;
      582     8959                                                /**/
      583     8960    2            CASE (%SS_UQC);                /* UNQUEUE I/O CACHE SUBQUEUE         */
      584     8961    2              INC = 1;                     /* PRIORITY BOOST INCREMENT           */
      585     8962    3              DO WHILE (USER ~= 0);
      586     8963    3                 CALL CHSE;
      587     8964    3                 USER = P$->B$U.SQ;
      588     8965    3                 P$ = ADDR(B$USRT$->B$USER(USER));
      589     8966    3              END;
      590     8967
      591     8968                                                /**/
      592     8969    2            CASE (%SS_QE);                 /* QUANTUM END                        */
      593     8970    2              INC=0;
      594     8971    2              CALL  CHSE;                  /*COMPUTE. BOOST = 0                  */
      595     8972                                                /**/
      596     8973        /*                                                                    */
      597     8974        /*         IF QUEUED FOR MF: UNBLOCK IF MF < LIMIT                    */
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:32   
      598     8975        /*         IF QUEUED FOR IO WAIT: UNBLOCK IF EVENT WAS IOCU           */
      599     8976        /*                                                                    */
      600     8977    2            CASE (%SS_IOCU);               /* I/O COMPLETE, UNBLOCK              */
      601     8978    2              IF (UST = %SS_SIOW) OR (UST = %SS_SIOWC)
      602     8979    3              THEN DO;
      603     8980    3                    IF S_NSCPUA = 0
      604     8981    4                    THEN DO INHIBIT;
      605     8982    4                          P$ -> B$U.MF = P$ -> B$U.MF - 1;
      606     8983    4                       END;
      607     8984    4                    ELSE DO;
      608     8985                               %LOCK (G# = NI_MFGATE);
      609     8988    4                          P$ -> B$U.MF = P$ -> B$U.MF - 1;
      610     8989                               %UNLOCK (G# = NI_MFGATE);
      611     8992    4                       END;
      612     8993    3                    INC = 2;
      613     8994    3                    CALL CHSE;
      614     8995    3                 END;
      615     8996    2              ELSE
      616     8997    2                 GOTO CHKMF;
      617     8998    2            CASE (%SS_IOC);                /* I/O COMPLETE                       */
      618     8999    2   CHKMF:
      619     9000    2              IF S_NSCPUA = 0
      620     9001    3              THEN DO INHIBIT;
      621     9002    3                    P$ -> B$U.MF = P$ -> B$U.MF - 1;
      622     9003    3                 END;
      623     9004    3              ELSE DO;
      624     9005                         %LOCK (G# = NI_MFGATE);
      625     9008    3                    P$ -> B$U.MF = P$ -> B$U.MF - 1;
      626     9009                         %UNLOCK (G# = NI_MFGATE);
      627     9012    3                 END;
      628     9013    2              IF (UST = %SS_SIOMF)
      629     9014    2              THEN IF (P$ -> B$U.MF - P$-> B$U.CMF <= SL_MFU(P$ -> B$U.MODE))
      630     9015    3                 THEN DO;
      631     9016    3                       INC = 2;
      632     9017    3                       CALL CHSE;
      633     9018    3                    END;
      634     9019    2            CASE(%SS_IIPC);                /* COMM GROUP I/O IN PROGRESS         */
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:33   
      635     9020    2              STATE=%SS_SIOWC;
      636     9021    2              GOTO IIP;
      637     9022    2            CASE(%SS_IIPCA);
      638     9023    2              STATE=%SS_SIOWC;
      639     9024    2              IF P$->B$U.ASYNCH & %(~U_RESET) THEN CALL SSS$ALTRET;
      640     9025    2              GOTO IIP;
      641     9026        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:34   
      642     9027    2            CASE(%SS_MP);
      643     9028    2              IF ADDR(FCN) ~= ADDR(NIL) THEN
      644     9029    2                 IF FCN THEN
      645     9030    3                    DO;
      646     9031    3                       P1$=ADDR(B$USRT$->B$USER(BITBIN(FCN)));
      647     9032    3                       IF P1$->B$U.US < %SS_SCU THEN
      648     9033    3                          STATE=P1$->B$U.US;
      649     9034    3                       ELSE
      650     9035    3                          GOTO MP1;
      651     9036    3                    END;
      652     9037    2                 ELSE
      653     9038    2                    GOTO MP1;
      654     9039    2              ELSE
      655     9040    2   MP1:          STATE = %SS_SCU - P$ -> B$U.PRIO -2; /*BUMP PRIO*/
      656     9041    2              IF STATE <= 0 THEN
      657     9042    2                 STATE = 1;
      658     9043    2              P$->B$U.FLG=P$->B$U.FLG | %U_MSTR;
      659     9044    2              CALL RCE4;
      660     9045        /*                                                                    */
      661     9046        /*                                                                    */
      662     9047    2            CASE(%SS_DU);                  /* DELETE USER                        */
      663     9048    2              IF S_CUN = S_C10USR THEN
      664     9049    2                 S_C10USR=0;
      665     9050        /*         RETURN USER TO NULL STATE                                  */
      666     9051    2              STATE=%SS_SNULL;
      667     9052    2              HDFLG='1'B;
      668     9053    2              CALL SSC$MON;
      669     9054    2              CALL RCE4;
      670     9055        /*         DECREMENT NUMBER USERS IN SYSTEM                           */
      671     9056    2              S_CUIS(P$->B$U.MODE)=S_CUIS(P$->B$U.MODE)-1;
      672     9057    2              S_CTUIS=S_CTUIS-1;
      673     9058    2              S_PCU(S_PNO)=0;              /* SHOW NO USER FOR THIS PROCESSOR*/
      674     9059    2              P$->B$U.FLG='0'B;            /* RESET FLAGS--   NOT RTR.           */
      675     9060        /*         IF SYSTEM GHOST, DON'T RELEASE USER SLOT.                  */
      676     9061    2              IF S_CUN <= S_MING THEN
      677     9062    3                 DO;
      678     9063    3                    S_HQ(%SS_SNULL)=P$->B$U.FL;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:35   
      679     9064    3                    P$->B$U.FL=0;          /* RESET NULL HEAD AND USER FLINK     */
      680     9065    3                 END;
      681     9066        /*     Now we go to SSS$DU to get into Monitor Tstack, then Unlock
      682     9067               and release JIT, HJIT, and Page Table.              */
      683     9068    2              CALL SSS$DU;
      684     9069        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:36   
      685     9070    2            CASE(%SS_AU);                  /* ADD USER                           */
      686     9071    2              P1$ = PINCRW(B$WINDOW$,1024);
      687     9072    2              USER=P1$->B$JIT.USER;        /* USER NUMBER FROM JIT               */
      688     9073    2              P$=ADDR(B$USRT$->B$USER(USER));
      689     9074    2              IF USER > S_MING
      690     9075    2              THEN P$->B$U.CPU = 0;
      691     9076    2              P$->B$U.FL=0;
      692     9077    2              P$->B$U.BL=0;
      693     9078    2              UST=0;
      694     9079    2              P$->B$U.FLG=%U_RTR|%U_CPIC|%U_MSTR; /* NOTE READY-TO-RUN AND CPIC  */
      695     9080    2              P$->B$U.ASYNCH=%U_YC;        /* Set YC to get to Logon from SSQ    */
      696     9081    2              P$->B$U.ACP=0;               /* SO SCHED WILL GET TO CPEXIT        */
      697     9082    2              P$->B$U.PCT=P1$->B$JIT.PPC;  /* PAGE COUNT FOR JIT, HJIT, RO SEG   */
      698     9083    2              P$->B$U.DL$=ADDR(NIL);       /* EMPTY DO LIST                      */
      699     9084    2              P$->B$U.ENQ='0'B;            /* EMPTY ENQUEUE LIST                 */
      700     9085    2              P$->B$U.UTSUSED=0;           /* TIME USED SO FAR                   */
      701     9086    2              P$->B$U.PT=B$WINDOW$->B$MAP.RPN(0)*1024/HW_PTB_UNITS;
      702     9087    2              P$->B$U.MF=0;
      703     9088    2              IF P1$->B$JIT.MODE = %M_BATCH# THEN
      704     9089    2                 P$->B$U.PRIOB=JM_PPTR$(P1$->B$JIT.PNR)->JM$PT.XPRIO;
      705     9090    2              ELSE
      706     9091    2                 IF P1$->B$JIT.MODE = %M_GHOST# THEN
      707     9092    2                    P$->B$U.PRIOB=S_PRIOB(%M_GHOST#)+P1$->B$JIT.PRIINC;
      708     9093    2                 ELSE
      709     9094    2                    P$->B$U.PRIOB=S_PRIOB(P1$->B$JIT.MODE);
      710     9095    2              P$->B$U.MODE=P1$->B$JIT.MODE; /* SET MODE IN USER TABLES           */
      711     9096    2              P$->B$U.WOO=P1$->B$JIT.WOO;  /* WORK STATION ID                    */
      712     9097    2              P$->B$U.SYSID=P1$->B$JIT.SYSID; /* SYSID FROM JIT TO USER TABLE    */
      713     9098    2              S_CTUIS=S_CTUIS+1;           /* COUNT USERS RUNNING, TOTAL         */
      714     9099    2              S_CUIS(P1$->B$JIT.MODE)=S_CUIS(P1$->B$JIT.MODE)+1; /* AND BY MODE*/
      715     9100    2              INC=3;                       /* PRIORITY BOOST AS IF INTERACT*/
      716     9101    2              CALL CHSE;                   /* NEW USER TO COMPUTE QUEUE          */
      717     9102        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:37   
      718     9103    2            CASE (%SS_AP);                 /* ASSOCIATE PROCESSOR                */
      719     9104    2              TT = P$->B$U.APR;            /* ASSOCIATE PROCEDURE FOR EACH OF    */
      720     9105    2              CALL ASPROC;
      721     9106    2              TT = P$->B$U.APO;            /* THE USERS ISR RESIDENT SHARED      */
      722     9107    2              CALL ASPROC;
      723     9108    2              TT = P$->B$U.ASP;            /* PROCESSORS.                        */
      724     9109    2              CALL ASPROC;
      725     9110    2              CALL SSS$RET;                /* RETURN TO STEP IMMEDIATLY          */
      726     9111        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:38   
      727     9112                                                /**/
      728     9113    2            CASE(%SS_DISCP);               /* DISCONNECT PENDING                 */
      729     9114    2              STATE=%SS_SDSC;              /* BLOCK HIM UNTIL DISCONNECT         */
      730     9115    2              CALL RCE4;                   /* COMES IN.                          */
      731     9116    2           END;                            /* END OF EVENT CASES                 */
      732     9117    1           IF NOT REGENT THEN
      733     9118    2              DO;
      734     9119    2                 IF EVF ~= S_EVF AND S_IDLCPU ~= 0 THEN
      735     9120    3                    DO;
      736     9121    3                       IF S_TIM_KEYIN = 0 THEN
      737     9122    3                          CALL HFD$CNNCT(S_IDLCPU,0); /* JOSTLE IDLE CPU */
      738     9123    3                       S_IDLCPU=0;
      739     9124    3                    END;
      740     9125                      %UNLOCK (G#=S_SCHDGATE);
      741     9128    2              END;
      742     9129        /*      IF THIS WAS A REG DON'T UNLOCK THE SCHEDULER GATE. THIS INSURES*/
      743     9130        /*      THAT WE DON'T RE SCHEDULE THIS GUY BEFORE PUSHING HIS         */
      744     9131        /*      ENVIRONMENT ON THE SAFE STORE STACK.                          */
      745     9132    1           RETURN;
      746     9133        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:39   
      747     9134    1   ASPROC: PROC;                      /* ASSOCIATE SHARED PROCESSOR PROCEDURE    */
      748     9135        /*                                                                    */
      749     9136    2   DCL   P$ PTR;
      750     9137        /*                                                                    */
      751     9138    2           P$ = ADDR (B$P$ -> B$P(TT));
      752     9139    2           IF P$ -> B$P.PPC(0) = 0         /* RETURN IF PROC SIZE IS ZERO        */
      753     9140    2           THEN RETURN;
      754     9141    2           TT=P$->B$P.HPP(0);              /* FIRST PHYS PAGE OF PROCEDURE       */
      755     9142    2           T=P$->B$P.PVA(0);               /* FIRST VIRTUAL PAGE(WSQ RELATIVE)   */
      756     9143    3           DO WHILE (TT ~= 0);
      757     9144    3              IF B$UPT$->B$MAP.SCTRL(T) ~= '0'B
      758     9145    3              THEN
      759     9146    4                 DO;
      760     9147                       /*S* SCREECH_CODE: SSR-S$ASSOC
      761     9148                            TYPE: SUA
      762     9149                            MESSAGE: SCTRL nonzero on a associate processor.
      763     9150                            DESCRIPTION: The software control bits for a page
      764     9151                                         in a processor procedure is nonzero
      765     9152                                         which means MM thinks the page either
      766     9153                                         belongs to the user or is CVM'ed.  */
      767     9154    4                    CALL SC_ASSOC;
      768     9155    4                    RETURN;
      769     9156    4                 END;
      770     9157
      771     9158    3              IF HW_WSQ0PT THEN
      772     9159    3                 B$UPT$->B$MAP.RPN(T)=B$WSQ0PT$->B$MAP.RPN(TT);
      773     9160    3              ELSE
      774     9161    3                 B$UPT$->B$MAP.RPN(T)=TT;  /* PUT PHYS PAGE NR INTO MAP          */
      775     9162    3              B$UPT$->B$MAP.CTRL(T)=%(%PGINMEM|%PGIOM); /* SET ACCESS CONTROLS   */
      776     9163    3              T=T+1;
      777     9164    3              TT=B$PPUT$->MM$PPUT.PPNO(TT); /* NEXT PHYS AND VIRT PAGES          */
      778     9165    3           END;
      779     9166    2           RETURN;
      780     9167    2   END;                                    /* END ASPROC                         */
      781     9168        /*                                                                    */
      782     9169        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:40   
      783     9170        /*    RESOURCE MANAGEMENT EVENTS                                      */
      784     9171        /*                                                                    */
      785     9172    1   RESS:   ;
      786     9173    1           RES = EVENT / 2 - %SS_CBF / 2;  /* BLOCK/UNBLOCK FOR RESOURCE         */
      787     9174    1           IF MOD(EVENT,2) = 0 THEN
      788     9175        /*         BLOCK IF EVEN EVENT NUMBER                                 */
      789     9176    2              DO;
      790     9177    2                 IF P$->B$U.FLG.SQRBLK THEN
      791     9178    3                    DO;
      792     9179    3                       P$->B$U.FLG.SQRBLK = '0'B;
      793     9180    3                       CALL SSS$RET;       /* UNBLOCK BEFORE BLOCK               */
      794     9181    3                    END;
      795     9182    2                 BLK=S_RQT_BYP(RES);       /* ADD USER TO TAIL OF RESOURCE QUEUE */
      796     9183    2                 P$->B$U.PRIO=RES;         /* NOTE QUEUE                         */
      797     9184    2                 B$USRT$->B$USER.SQ(BLK)=USER;/* LINK TO OLD TAIL                */
      798     9185    2                 IF BLK = 0 THEN S_RQH(RES)=USER;
      799     9186    2                 S_RQT(RES)=USER;
      800     9187    2                 P$->B$U.SQ=0;
      801     9188    2                 STATE=%SS_SQR;            /* NEW STATE IS %SS_SQR               */
      802     9189    2                 IF EVENT = %SS_NQW THEN   /* IF EVENT IS ENQUEUE                */
      803     9190    2                    IF EV$->STIME < 0 THEN
      804     9191    2                       P$->B$U.MISC=EV$->TIME;
      805     9192    2                    ELSE
      806     9193    3                       DO;
      807     9194    3                          P$->B$U.MISC=EV$->TIME*100;
      808     9195    3                          CALL SSS$WUTIME(P$->B$U.MISC);
      809     9196    3                       END;
      810     9197    2                 ELSE
      811     9198    2                    P$->B$U.MISC = BITBIN('777777777777'O);
      812     9199    2                 EVENT=%SS_SL;             /* SWITCH TO SLEEP EVENT TO SORT USER*/
      813     9200    2                 CALL CHSE1;               /* INTO RESOURCE STATE QUEUE          */
      814     9201    2              END;
      815     9202        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:41   
      816     9203        /*    RELEASE USERS QUEUED FOR RESOURCE                               */
      817     9204        /*                                                                    */
      818     9205    1           ELSE
      819     9206    2              DO;
      820     9207    2                 INC=5;
      821     9208    2                 IF S_RQ.SPEC(RES) THEN
      822     9209    3                    DO;
      823     9210    3                       IF UST = %SS_SQR THEN
      824     9211    4                          DO;
      825     9212    4                             CALL UQR;
      826     9213    4                             CALL CHSE;
      827     9214    4                          END;
      828     9215    3                       ELSE
      829     9216    3                          P$->B$U.FLG.SQRBLK='1'B; /* UNBLOCK BEFORE BLOCK*/
      830     9217    3                    END;
      831     9218    2                 ELSE
      832     9219    3                    DO WHILE (S_RQH_BYP(RES) ~= 0);
      833     9220    3                       USER=S_RQH_BYP(RES);
      834     9221    3                       P$=ADDR(B$USRT$->B$USER(USER));
      835     9222    3                       UST=%SS_SQR;
      836     9223    3                       CALL UQR;
      837     9224    3                       CALL CHSE;
      838     9225    3                    END;
      839     9226    2              END;
      840     9227    1           IF NOT REGENT THEN
      841     9228                   %UNLOCK    (G#=S_SCHDGATE);
      842     9231    1           RETURN;
      843     9232        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:42   
      844     9233                                                /**/
      845     9234    1   UQR:    PROC;
      846     9235    2           IF RES ~= P$->B$U.PRIO THEN GOTO UQR1; /* S/C 126 IF QUEUED WRONG     */
      847     9236    2           BLK=0;
      848     9237    2           FLK=S_RQH_BYP(RES);
      849     9238    3           DO WHILE (FLK ~= 0);
      850     9239    3              IF FLK = USER THEN GOTO UQR2; /*  SEARCH DOWN QUEUE FOR OUR        */
      851     9240    3              BLK=FLK;                     /* USER. THEN UNLINK HIM.             */
      852     9241    3              FLK=B$USRT$->B$USER.SQ(BLK);
      853     9242    3           END;
      854     9243    2   UQR1:   CALL SC_RESQ;
      855     9244        /*S*    SCREECH_CODE: SSR-S$RESSUBQ
      856     9245                TYPE: SCREECH
      857     9246                MESSAGE: Scheduler resource queue error                       */
      858     9247    2   UQR2:   B$USRT$->B$USER.SQ(BLK)=P$->B$U.SQ;
      859     9248    2           IF P$->B$U.SQ = 0 THEN S_RQT_BYP(RES)=BLK;
      860     9249    2           IF BLK=0 THEN S_RQH(RES)=P$->B$U.SQ;
      861     9250    2           RETURN;
      862     9251    2   END;
      863     9252        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:43   
      864     9253    1   EVREPRT: PROC;
      865     9254    2   DCL 1 EVINF STATIC DALIGNED,
      866     9255    2         2 USR UBIN BYTE UNAL,
      867     9256    2         2 EVNR UBIN BYTE UNAL,
      868     9257    2         2 STATE UBIN BYTE UNAL,
      869     9258    2         2 PORT UBIN BYTE UNAL,
      870     9259    2         2 TIME UBIN;
      871     9260    2   DCL S_EVX SBIN STATIC SYMDEF INIT(0);
      872     9261    2   DCL S_EVFLG UBIN STATIC SYMDEF INIT(1);
      873     9262    2   DCL S_EVX_BYP$ PTR SYMREF READONLY;
      874     9263    2   DCL EVX_BYP SBIN BASED(S_EVX_BYP$);
      875     9264    2   DCL S_EVBF(0:99) STATIC SYMDEF BIT(72) DALIGNED;
      876     9265    2   DCL S_EVBUSR UBIN STATIC SYMDEF INIT(0);
      877     9266
      878     9267
      879     9268    2           IF S_EVFLG ~= 0 AND (S_EVBUSR =0 OR S_EVBUSR = USER)
      880     9269    2           THEN
      881     9270    3              DO INHIBIT;
      882     9271    3                 CALL SSS$EOMTIME (EVINF.TIME);
      883     9272    3                 EVINF.USR = USER;
      884     9273    3                 EVINF.EVNR = EVENT;
      885     9274    3                 EVINF.STATE = UST;
      886     9275    3                 EVINF.PORT = S_PORTNR(S_PNO);
      887     9276    3                 S_EVBF(EVX_BYP) = EVINF;
      888     9277    3                 S_EVX = EVX_BYP + 1;
      889     9278    3                 IF S_EVX <= 99
      890     9279    3                 THEN
      891     9280    3                    RETURN;
      892     9281    3                 S_EVX = 0;
      893     9282    3              END;
      894     9283    2   END EVREPRT;
      895     9284        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:44   
      896     9285        /*                                                                    */
      897     9286        /*         COMPUTE EXECUTION TIME BETWEEN INTERACTIONS                */
      898     9287    1   INTCOMP: PROC;
      899     9288    2   DCL T SBIN;
      900     9289    2   DCL TT UBIN;
      901     9290    2           IF B$JIT.RUNFLAGS AND %RUN_USER# THEN
      902     9291    2              T=(B$JIT.TUEXT+B$JIT.TUSVT)*10;
      903     9292    2           ELSE
      904     9293    2              T=(B$JIT.TPEXT+B$JIT.TPSVT)*10;
      905     9294    2           T=T+(B$JIT.XTIME+B$JIT.STIME+B$JIT.EXTUS+B$JIT.SVTUS)/1000;
      906     9295    2           TT=T-B$JIT.INTTIME;
      907     9296    2           B$JIT.INTTIME=T;
      908     9297                %LOCK (G#=P_GATE);
      909     9300                %UPDATE_BUCKET(BUCKET=P_INTCOMP,
      910     9301                DIST_VAL=TT,
      911     9302                SCRATCH=T);
      912     9311                %UNLOCK (G#=P_GATE);
      913     9314    2           RETURN;
      914     9315    2   END INTCOMP;
      915     9316        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:45   
      916     9317                                                /**/
      917     9318        /*                CHANGE STATE FOR NON EXECUTABLE STATES              */
      918     9319                                                /**/
      919     9320    1   RCE4:   PROC;
      920     9321    2   CHANGE_STATE:
      921     9322    2           CALL DELINK;
      922     9323    2           CALL RELINK;
      923     9324    2   SET_STATE:
      924     9325    2           P$ -> B$U.US = STATE;
      925     9326    2           IF STATE < %SS_SCU
      926     9327    2           THEN
      927     9328    2              S_EVF = S_EVF+1;
      928     9329    2           RETURN;
      929     9330
      930     9331                            /* THIS ENTRY IS USED TO PARK A GUY AT HIS CURRENT PRIO   */
      931     9332    2   CHSE0:  ENTRY;
      932     9333    2           PRIO = P$ -> B$U.PRIO;
      933     9334    2           CALL SET_HIR_PRIO;
      934     9335    2           GOTO CHANGE_STATE;
      935     9336
      936     9337                  /* THIS ENTRY IS USED TO MAKE SOMEONE EXECUTABLE WITH A PRIO INC    */
      937     9338    2   CHSE:   ENTRY;
      938     9339    2           PRIO = P$ -> B$U.PRIOB + S_PINC (INC);
      939     9340    2           P$ -> B$U.PRIO = PRIO;
      940     9341    2           CALL SET_HIR_PRIO;
      941     9342    2           GOTO CHANGE_STATE;
      942     9343
      943     9344                /* THIS ENTRY IS USED BY SLEEP (AND RESOURCE WAIT) TO SORT
      944     9345                   USERS INTO THE SLEEP QUEUE AT THE RIGHT POINT */
      945     9346    2   CHSE1:  ENTRY;
      946     9347    2           CALL DELINK;
      947     9348                /* SORT BY WAKE UP TIME; START AT TAIL; GREATER TIME MEANS
      948     9349                   HE BELONGS AT END*/
      949     9350    2           BLK = S_TQ_BYP (STATE);
      950     9351    2           IF BLK = 0
      951     9352    3           THEN DO;
      952     9353    3                 P$ -> B$U.FL = 0;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:46   
      953     9354    3                 P$ -> B$U.BL = 0;
      954     9355    3                 S_TQ (STATE) = USER;
      955     9356    3                 S_HQ (STATE) = USER;
      956     9357    3                 GOTO SET_STATE;
      957     9358    3              END;
      958     9359    3           DO UNTIL (BLK = 0);
      959     9360    3              PB$ = ADDR (B$USRT$ -> B$USER (BLK));
      960     9361    3              IF P$ -> B$U.MISC >= PB$ -> B$U.MISC
      961     9362    4              THEN DO;                     /* THIS IS WHERE WE BELONG            */
      962     9363    4                    P$ -> B$U.BL = BLK;
      963     9364    4                    FLK = PB$ -> B$U.FL;
      964     9365    4                    IF FLK = 0
      965     9366    4                    THEN
      966     9367    4                       S_TQ (STATE) = USER;
      967     9368    4                    ELSE
      968     9369    4                       B$USRT$ -> B$USER.BL(FLK) = USER;
      969     9370    4                    P$ -> B$U.FL = FLK;
      970     9371    4                    PB$ -> B$U.FL = USER;
      971     9372    4                    GOTO SET_STATE;
      972     9373    4                 END;
      973     9374    3              ELSE
      974     9375    3                 BLK = PB$ -> B$U.BL;      /* LOOK BACK FOR MORE                 */
      975     9376    3           END;
      976     9377    2           P$ -> B$U.BL = 0;
      977     9378    2           FLK = S_HQ_BYP(STATE);
      978     9379    2           B$USRT$ -> B$USER.BL (FLK) = USER;
      979     9380    2           S_HQ (STATE) = USER;
      980     9381    2           P$ -> B$U.FL = FLK;
      981     9382    2           GOTO SET_STATE;
      982     9383        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:47   
      983     9384                                 /* PROCEDURE TO REMOVE A USER FROM A STATE QUEUE     */
      984     9385    2   DELINK: PROC;
      985     9386    3           FLK = P$ -> B$U.FL;
      986     9387    3           BLK = P$ -> B$U.BL;
      987     9388    3           IF FLK = 0
      988     9389    3           THEN
      989     9390    3              S_TQ (UST) = BLK;
      990     9391    3           ELSE
      991     9392    3              B$USRT$ -> B$USER.BL (FLK) = BLK;
      992     9393    3           IF BLK = 0
      993     9394    3           THEN
      994     9395    3              S_HQ (UST) = FLK;
      995     9396    3           ELSE
      996     9397    3              B$USRT$ -> B$USER.FL (BLK) = FLK;
      997     9398    3           RETURN;
      998     9399    3   END DELINK;
      999     9400        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:48   
     1000     9401                /* PROCEDURE TO INSERT A USER AT THE HEAD OR TAIL OF
     1001     9402                   A STATE QUEUE */
     1002     9403    2   RELINK: PROC;
     1003     9404    3           IF HDFLG
     1004     9405    4           THEN DO;
     1005     9406    4                 P$ -> B$U.BL = 0;
     1006     9407    4                 FLK = S_HQ_BYP (STATE);
     1007     9408    4                 IF FLK = 0
     1008     9409    5                 THEN DO;
     1009     9410    5                       P$ -> B$U.FL = 0;
     1010     9411    5                       P$ -> B$U.BL = 0;
     1011     9412    5                       S_TQ (STATE) = USER;
     1012     9413    5                       S_HQ (STATE) = USER;
     1013     9414    5                       RETURN;
     1014     9415    5                    END;
     1015     9416    4                 S_HQ (STATE) = USER;
     1016     9417    4                 B$USRT$ -> B$USER.BL (FLK) = USER;
     1017     9418    4                 P$ -> B$U.FL = FLK;
     1018     9419    4                 RETURN;
     1019     9420    4              END;
     1020     9421    4           ELSE DO;
     1021     9422    4                 P$ -> B$U.FL = 0;
     1022     9423    4                 BLK = S_TQ_BYP (STATE);
     1023     9424    4                 IF BLK = 0
     1024     9425    5                 THEN DO;
     1025     9426    5                       P$ -> B$U.FL = 0;
     1026     9427    5                       P$ -> B$U.BL = 0;
     1027     9428    5                       S_TQ (STATE) = USER;
     1028     9429    5                       S_HQ (STATE) = USER;
     1029     9430    5                       RETURN;
     1030     9431    5                    END;
     1031     9432    4                 S_TQ (STATE) = USER;
     1032     9433    4                 B$USRT$ -> B$USER.FL (BLK) = USER;
     1033     9434    4                 P$ -> B$U.BL = BLK;
     1034     9435    4                 RETURN;
     1035     9436    4              END;
     1036     9437    3   END RELINK;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:49   
     1037     9438        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:50   
     1038     9439                                                /* PROCEDURE TO SET HIR AND STATE     */
     1039     9440    2   SET_HIR_PRIO: PROC;
     1040     9441    3           IF PRIO > S_CUP_BYP
     1041     9442    3           THEN
     1042     9443    3              IF S_HIR_BYP < 0
     1043     9444    3              THEN
     1044     9445    3                 S_HIR = 1;
     1045     9446    3              ELSE
     1046     9447    3                 S_HIR = S_HIR_BYP + 1;
     1047     9448    3           IF PRIO < 11
     1048     9449    3           THEN
     1049     9450    3              STATE = %SS_SCU - PRIO;
     1050     9451    3           ELSE
     1051     9452    3              STATE = %SS_SC1;
     1052     9453    3           RETURN;
     1053     9454    3   END SET_HIR_PRIO;
     1054     9455    2   END;                                    /* END STATE CHANGE PROC              */
     1055     9456        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:51   
     1056     9457        /*         CHANGE USER TO EXECUTABLE STATE                            */
     1057     9458        /*                                                                    */
     1058     9459    1   SSR$CHSE: ENTRY(EVNT);
     1059     9460        /*                                                                    */
     1060     9461        /*                                                                    */
     1061     9462    2           DO INHIBIT;
     1062     9463    2              HDFLG='0'B;
     1063     9464    2              USER=EVNT;
     1064     9465    2              P$=ADDR(B$USRT$->B$USER(USER));
     1065     9466    2              UST=P$->B$U.US;
     1066     9467    2              EVENT=%SS_PARK;
     1067     9468    2              CALL EVREPRT;                /*RECORD EVENT                        */
     1068     9469    2              CALL CHSE0;                  /* PARK AT CURRENT PRIORITY           */
     1069     9470    2              RETURN;
     1070     9471    2           END;                            /* END INHIBIT SECTION                */
     1071     9472        /*                                                                    */
     1072     9473        /*         CHANGE USER TO CURRENT STATE                               */
     1073     9474        /*                                                                    */
     1074     9475    1   SSR$CHS: ENTRY(EVNT);
     1075     9476        /*                                                                    */
     1076     9477        /*                                                                    */
     1077     9478    1           USER=EVNT;
     1078     9479    1           HDFLG='0'B;
     1079     9480    1           P$=ADDR(B$USRT$->B$USER(USER));
     1080     9481    1           UST=P$->B$U.US;
     1081     9482    1           STATE=%SS_SCU;
     1082     9483    1           EVENT=%SS_NEWUSER;
     1083     9484    1           CALL EVREPRT;                   /* RECORD NEW USER EVENT              */
     1084     9485    1           CALL RCE4;
     1085     9486    1           RETURN;
     1086     9487        /*                                                                    */
     1087     9488        /*                                                                    */
     1088     9489        /*                                                                    */
     1089     9490    1   SSR$SKIP: ENTRY(EVNT);
     1090     9491        /*                                                                    */
     1091     9492        /*                                                                    */
     1092     9493    1           USER=EVNT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:52   
     1093     9494    1           HDFLG='0'B;
     1094     9495    1           P$=ADDR(B$USRT$->B$USER(USER));
     1095     9496    1           UST=P$->B$U.US;
     1096     9497    1           STATE=UST;
     1097     9498    1           EVENT=%SS_SKIPUSER;
     1098     9499    1           CALL EVREPRT;                   /* RECORD NEW USER EVENT              */
     1099     9500    1           CALL RCE4;
     1100     9501    1           RETURN;
     1101     9502        /*                                                                    */
     1102     9503        /*                                                                    */
     1103     9504        /*                                                                    */
     1104     9505        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:53   
     1105     9506        /*                REPORT USER EVENT SERVICE                           */
     1106     9507    1   SSR$MRUE: ENTRY;
     1107     9508    1           EVENT=B$PS0$->FPT$RUE_V.EVENT;  /*EVENT FROM FPT*/
     1108     9509    1           USER=0;
     1109     9510    1           REGENT='0'B;
     1110     9511    1           CALL OCZ$SID_UN(B$PS0$->FPT$RUE_V.USER,USER) ALTRET(MRUEX);
     1111     9512                %LOCK (G#=S_SCHDGATE);
     1112     9515    1           MRUE_ENT = '1'B;
     1113     9516    1           GOTO RCE0;                      /* FALL INTO RUE                      */
     1114     9517    1   MRUEX:  ;
     1115     9518    1           RETURN;
     1116     9519    1   END;
     1117     9520        %EOD;

PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:54   
--  Include file information  --

   NK$LDCT.:E05TOU  is referenced.
   B$P.:E05TOU  cannot be made into a system file and is referenced.
   UM_ERRORS_C.:E05TOU  is referenced.
   UM$CP6V_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   B$ROSEG.:E05TOU  cannot be made into a system file and is referenced.
   B$MAP.:E05TOU  cannot be made into a system file and is referenced.
   JM_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   JMA_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   JM$STRUCT.:E05TOU  is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   FM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   PM_BUCKET_C.:E05TOU  is referenced.
   P_PMDAT_C.:E05TOU  is referenced.
   P_PMDAT_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRLD_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B_MLSMAC_C.:E05TOU  is referenced.
   B_ULSMAC_C.:E05TOU  is referenced.
   B_LSDATA_C.:E05TOU  cannot be made into a system file and is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure SSR$RUE.

   Procedure SSR$RUE requires 1475 words for executable code.
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:55   
   Procedure SSR$RUE requires 42 words of local(AUTO) storage.

PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:56   

 Object Unit name= SSR$RUE                                    File name= SSR$RUE.:E05TOU
 UTS= JUL 30 '97 05:58:09.32 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS     78    116  SSR$RUE
    1   Data  even  none   207    317  SSR$RUE
    2   Proc  even  none  1475   2703  SSR$RUE
    3  RoData even  none    18     22  SSR$RUE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        4  SSR$RUE
     2     11                  yes      Std        4  SSR$REGUE
     2   2550                  yes      Std        1  SSR$CHSE
     2   2576                  yes      Std        1  SSR$CHS
     2   2624                  yes      Std        1  SSR$SKIP
     2   2652                  yes      Std        0  SSR$MRUE

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    1      0  S_TIM_KEYIN                        1      4  S_EVX
    1      5  S_EVFLG                            1      6  S_EVBF
    1    316  S_EVBUSR
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:57   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 HFC$LOCK
         yes           Std       1 HFC$UNLOCK
         yes           Std       2 SSS$WUTIME
 yes     yes           Std       1 KIF$LDTRC
         yes           Std       0 SSS$RET
         yes           Std       2 HFD$CNNCT
         yes           Std       0 SSC$MON
         yes           Std       0 SSS$ALTRET
 yes     yes           Std       0 SSQ$NUQUAN
         yes           Std       7 SSV$EVENT
 yes     yes           Std       4 OCZ$SID_UN
         yes           Std       1 SSS$EOMTIME
         yes           Std       0 SSS$DU
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_4
                       nStd      0 X66_ARET
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:58   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SC_EVENT                              SC_ASSOC                              SC_RESQ
r    MM_BYP$                               S$CU$                                 B$USRT$
     S_PRIOB                               SL_MFU                                S_CUIS
     S_CTUIS                               S_HQ                                  S_TQ
     S_RQH                                 S_RQT                                 S_RQ
     S_PINC                                S_EVF                                 S_HIR
     S_PCU                                 S_PORTNR                              S_NSCPUA
     S_IDLCPU                              S_UDLGATE                             S_ASFGATE
     S_SCHDGATE                            S_C10USR                              P_RESOURCE$
     P_RUE#                                P_UPTIME                              P_GATE
     P_NSCPU                               P_INTCOMP                             F_DCBLOCK
     HW_PTB_UNITS                          HW_WSQ0PT                             JM_PPTR$
     B$P$                             r    S_HQ_BYP$                        r    S_TQ_BYP$
r    S_RQH_BYP$                       r    S_RQT_BYP$                       r    S_CUP_BYP$
r    S_HIR_BYP$                            NI_MFGATE                             S_MING
     S_CUN                                 S_PNO                            r    B$PPUT$
r    B$WINDOW$                             B$WSQ0PT$                        r    B$UPT$
r    B$PS0$                           r    B$JIT$                           r    S_EVX_BYP$
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ASLENTSID                             ISSID
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:59   


        1        1        /*M* SCHEDULER EVENT REPORTING PROCEDURE         */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  AND,DTI=3,MCR=NO */
        8        8        /*                                                                    */
        9        9        SSR$RUE: PROC(EVNT,USR,FCN,PTR2$);

      9  2 000000   000000 700200 xent  SSR$RUE      TSX0  ! X66_AUTO_4
         2 000001   000052 000004                    ZERO    42,4

       10       10        /*                                                                    */
       11       11        /* These files are included at this point to keep subsequent %SUBs
       12       12           from causing mis-generation of their based structures.          */
       13       13        %INCLUDE B$JIT;
       14      616        %INCLUDE MM_DATA_R;
       15     1136        %INCLUDE B_LSDATA_C;
       16     4342        /*                                                                 */
       17     4343        %LIST;
       18     4344        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:60   
       19     4345        %INCLUDE B$USER;
        1+    4346        /*M* BASED DEFINITION OF CP-6 USER TABLES                   */
        2+    4347        /*T***********************************************************/
        3+    4348        /*T*                                                         */
        4+    4349        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5+    4350        /*T*                                                         */
        6+    4351        /*T***********************************************************/
        7+    4352        /*                                                                    */
        8+    4353        /* REFERENCES TO  THE USER TABLE ENTRY FOR THE CURRENT USER           */
        9+    4354        /* MAY BE MADE THROUGH THE POINTER VARIABLE S$CU$ WHICH IS            */
       10+    4355        /* INITIALIZED BY THE SCHEDULER EACH TIME A NEW CURRENT               */
       11+    4356        /* USER IS SCHEDULED.                                                 */
       12+    4357        /*                                                                    */
       13+    4358                                                /**/
       14+    4359        /*                                                                    */
       15+    4360                                                /**/
       16+    4361    1   DCL 1 B$U BASED DALIGNED,
       17+    4362    1         2 FLG,                           /* FLAGS                                  */
       18+    4363    1           3 RTR BIT(1) UNAL,
       19+    4364    1           3 INTUSR BIT(1) UNAL,
       20+    4365    1           3 DIC BIT(1) UNAL,
       21+    4366                                                /**/
       22+    4367    1           3 DELA BIT(1) UNAL,
       23+    4368    1           3 CPIC BIT(1) UNAL,
       24+    4369    1           3 COBLK BIT(1) UNAL,
       25+    4370                                                /**/
       26+    4371    1           3 HUP BIT(1) UNAL,
       27+    4372    1           3 SUSP BIT(1) UNAL,
       28+    4373    1           3 TDOPPERM BIT(1) UNAL,
       29+    4374                                                /**/
       30+    4375    1           3 TDNOPERM BIT(1) UNAL,
       31+    4376    1           3 STIP BIT(1) UNAL,
       32+    4377    1           3 BLK BIT(1) UNAL,
       33+    4378                                                /**/
       34+    4379    1           3 DINIT BIT(1) UNAL,
       35+    4380    1           3 OINIT BIT(1) UNAL,
       36+    4381    1           3 ROINIT BIT(1) UNAL,
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:61   
       37+    4382                                                /**/
       38+    4383    1           3 MSTR BIT(1) UNAL,
       39+    4384    1           3 NSND BIT(1) UNAL,
       40+    4385    1           3 CPL BIT(1) UNAL,
       41+    4386                                                /**/
       42+    4387    1           3 CAN BIT(1) UNAL,
       43+    4388    1           3 DDUSR BIT(1) UNAL,
       44+    4389    1           3 STEP BIT(1) UNAL,
       45+    4390                                                /**/
       46+    4391    1           3 ANNCE BIT(1) UNAL,            /* ANNOUNCE TAPE MOUNTS               */
       47+    4392    1           3 EVNT BIT(1) UNAL,             /* M$EVENT ISSUED                     */
       48+    4393    1           3 DBRK BIT(1) UNAL,             /* DATA BREAKPOINT                    */
       49+    4394                                                /**/
       50+    4395    1           3 SQRBLK BIT(1)  UNAL,
       51+    4396    1           3 SCIO BIT(1) UNAL,        /* Blocked for Comm I/O    */
       52+    4397    1           3 NOQUAN BIT(1) UNAL,
              4397                    /* THIS GUY ALREADY GOT HIS "FREE" QUANTUM FROM BREAKS PINCR */
       53+    4398
       54+    4399    1           3 BIGPT BIT(1) UNAL, /* THIS GUY HAS A TWO PAGE PAGE TABLE */
       55+    4400    1           3 * BIT(8) UNAL,
       56+    4401        /*                                                                    */
       57+    4402        /* DEFINITIONS FOR B$U.FLG                                            */
       58+    4403        /*                                                                    */
       59+    4404        %EQU U_RTR='400000000000'O;
       60+    4405        %EQU U_INTUSR='200000000000'O; /* INTERACTIVE USER                */
       61+    4406        %EQU U_DIC='100000000000'O;    /* DELTA IN CONTROL                     */
       62+    4407        %EQU U_DELA='040000000000'O;  /* DELTA ASSOCIATED                   */
       63+    4408        %EQU U_CPIC='020000000000'O;  /* COM PROC IN CONTROL                */
       64+    4409        %EQU U_COBLK='010000000000'O; /* COMM OUTPUT UNBLK BEFORE BLK*/
       65+    4410        %EQU U_HUP='004000000000'O;    /* LINE HANG UP                         */
       66+    4411        %EQU U_SUSP='002000000000'O;  /* SUSPENDED FOR RECONNECT            */
       67+    4412        %EQU U_TDOPPERM='001000000000'O; /* QQQ                         */
       68+    4413        %EQU U_TDNOPERM='000400000000'O; /* QQQQ                        */
       69+    4414        %EQU U_STIP='000200000000'O;  /* STEP IN PROGRESS                   */
       70+    4415        %EQU U_BLK='000100000000'O;    /* UNBLOCK BEFORE BLOCK                 */
       71+    4416        %EQU U_DINIT='000040000000'O; /* DATA MUST BE INITIALIZED          */
       72+    4417        %EQU U_OINIT='000020000000'O; /* OVERLAY DATA MUST BE INITIALIZED*/
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:62   
       73+    4418        %EQU U_ROINIT='000010000000'O; /* ROSEG MUST BE INITIALIZED       */
       74+    4419        %EQU U_MSTR='000004000000'O;  /* MASTER PROCESSOR USER              */
       75+    4420        %EQU U_NSND='000002000000'O;  /* SEND KEYIN ILLEGAL                 */
       76+    4421        %EQU U_CPL='000001000000'O;    /* COUPLE OK                            */
       77+    4422        %EQU U_CAN='000000400000'O;    /* JOB CANCELED BY USER                 */
       78+    4423        %EQU U_DDUSR='000000200000'O;          /* DYNAMIC DRSP USER (IN FETCH)           */
       79+    4424        %EQU U_STEP='000000100000'O;           /* USER IS AT JOB STEP                    */
       80+    4425        %EQU U_ANNCE='000000040000'O;           /* ANNOUNCE TAPE MOUNTS               */
       81+    4426        %EQU U_EVNT='000000020000'O;            /* M$EVENT ISSUED                     */
       82+    4427        %EQU U_DBRK='000000010000'O;            /* DATA BREAKPOINT                    */
       83+    4428        %EQU U_SQRBLK='000000004000'O;          /* SQR UNBLOCK BEFORE BLOCK           */
       84+    4429        %EQU U_SCIO='000000002000'O;       /* Blocked for Comm I/O         */
       85+    4430        %EQU U_NOQUAN='000000001000'O;       /* User already got his free QUAN*/
       86+    4431        %EQU U_BIGPT='000000000400'O;       /* User has a 2-page page table */
       87+    4432        /*                                                                    */
       88+    4433    1             2 ASYNCH BIT(36) UNAL,       /* ASYNCHRONOUS FLAGS                     */
       89+    4434        /* DEFINITIONS FOR B$U.ASYNCH                                         */
       90+    4435        /*                                                                    */
       91+    4436        %EQU  U_BRK='400000000000'O;   /* BREAK CHAR RECEIVED                 */
       92+    4437        %EQU  U_YC='200000000000'O;     /* CONTROL Y RECEIVEID                   */
       93+    4438        %EQU  U_ERR='100000000000'O;   /* OPERATOR ERRORED JOB                */
       94+    4439        %EQU  U_ABRT='040000000000'O; /* OPERATOR ABORTED JOB               */
       95+    4440        %EQU U_CNCLD='020000000000'O; /* JOB CANCELED BY USER          */
       96+    4441        %EQU  U_DISC='010000000000'O;      /* Line disconnected            */
       97+    4442        %EQU U_FEPCRSH='004000000000'O;    /* FEP has crashed              */
       98+    4443        %EQU U_FPLDTRC='002000000000'O;    /* CG FPRG must LDTRC                 */
       99+    4444        %EQU U_CACHE='000000000001'O;
      100+    4445        %EQU U_RESET='000000000001'O; /* USED TO CLEAR SELECTED ASYNCH FLGS*/
      101+    4446        /*                                                                    */
      102+    4447    1         2 FL UBIN UNAL,                /*STATE QUEUE FWD LINK                     */
      103+    4448    1         2 BL UBIN UNAL,                /*STATE QUEUE BKWD LINK                    */
      104+    4449    1         2 MRT UBIN UNAL,               /*TIME LIMIT REMAINING                     */
      105+    4450    1         2 UTSUSED UBIN UNAL,           /*TIME USED THUS FAR                       */
      106+    4451    1         2 MF UBIN(9) UNAL,               /*MASTER FUNCTION COUNT                   */
      107+    4452    1         2 ACP UBIN(9) UNAL,              /*COMMAND PROCESSOR NUMBER                */
      108+    4453    1         2 DB UBIN(9) UNAL,               /*DEBUGGER PROCESSOR NUMBER               */
      109+    4454    1         2 ASL UBIN(9) UNAL,              /*ALT SHRD LIB PROC NUMBER                */
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:63   
      110+    4455    1         2 APR UBIN(12) UNAL,             /*SHRD PROCESSOR NUMBER                   */
      111+    4456    1         2 APO UBIN(12) UNAL,             /*SHRD PROC OVLY NUMBER                   */
      112+    4457    1         2 ASP UBIN(6) UNAL,              /*SHRD LIB PROCESSOR NUMBER               */
      113+    4458    1         2 CMF UBIN(6) UNAL,              /* COMMUNICATIONS MASTER FUNC             */
      114+    4459    1         2 PCT UBIN(18) UNAL,
      115+    4460    1         2 SQ    UBIN(9) UNAL,            /* RESOURCE SUBQUEUE LINK   */
      116+    4461    1         2 CPU UBIN(9) UNAL,              /* REQUESTED CPU #                        */
      117+    4462    1         2 US UBIN(6) UNAL,               /*USER STATE                              */
      118+    4463    1         2 PTSIZ UBIN(6) UNAL,            /*PTABLE SIZE (MOD 64)      */
      119+    4464    1         2 PRIO UBIN(6) UNAL,             /*EXECUTION PRIORITY                      */
      120+    4465    1         2 PRIOB UBIN(6) UNAL,            /*BASE EXEC PRIORITY                      */
      121+    4466    1         2 MODE UBIN(6) UNAL,             /* USER MODE (SEE B$JIT DEF)              */
      122+    4467    1         2 BRKCNT UBIN(6) UNAL,            /* BREAK COUNT                        */
      123+    4468    1         2 WOO CHAR(8),                   /* WORK STATION NAME                      */
      124+    4469    1         2 PT UBIN(18) UNAL,              /*PAGE TABLE ADDRESS MOD 64               */
      125+    4470    1         2 SYSID UBIN(18) UNAL,           /*SYSTEM ID NUMBER                        */
      126+    4471    1         2 DL$ PTR,                       /*DO LIST POINTER.                        */
      127+    4472    1         2 ENQ,
      128+    4473    1           3 COUNT UBIN HALF UNAL,        /* USER ENQ COUNT (FORMERLY IN JIT)       */
      129+    4474    1           3 WAIT UBIN HALF UNAL,         /* ENTRYX OF WAIT ENQ BLOCK               */
      130+    4475    1         2 MISC UBIN(36) UNAL,            /*MISC DATA                               */
      131+    4476    1         2 MISC$ REDEF MISC PTR;
      132+    4477        /*                                                                    */
      133+    4478        /*    DO LIST ENTRY DEFINITION                                        */
      134+    4479        /*                                                                    */
      135+    4480    1   DCL 1 B$DO BASED DALIGNED,
      136+    4481    1         2 LNK$ PTR UNAL,                 /* LINK TO NEXT ENTRY                     */
      137+    4482    1         2 ENTER EPTR UNAL,               /* SYSTEM EVENT HANDLER ENTRY             */
      138+    4483    1         2 BUSY BIT(1) UNAL,              /* ENTRY BUSY, NOT READY FOR EVENT        */
      139+    4484    1         2 CONT BIT(1) UNAL,              /* ENTRY CONTINUED IN NEXT BLOCK          */
      140+    4485    1         2 SCHDDO BIT(1) UNAL,             /* BUILT BY INITDO/SCHDDO FLAG        */
      141+    4486    1         2 SAVE BIT(1) UNAL,               /* SAVE EVENT IF GHOST NOT READY*/
      142+    4487    1         2 * BIT(5) UNAL,
      143+    4488    1         2 WSR UBIN(9) UNAL,              /* WSR OF EVENT DOMAIN                    */
      144+    4489    1         2 ECCSC UBIN(18) UNAL,           /* ECC SUBCODE FOR EVENT EXC FRAME        */
      145+    4490    1         2 EVID UBIN(36) UNAL,            /* USER EVENT IDENTIFIER                  */
      146+    4491    1         2 ERRC ,                         /* ECC ERROR CODE                         */
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:64   
      147+    4492    1           3 FCG BIT(18) UNAL,            /* FUNCTIONAL CODE GROUP                  */
      148+    4493    1           3 CODE UBIN(15) UNAL,          /* ERROR CODE                             */
      149+    4494    1           3 SEV UBIN(3) UNAL,            /* SEVERITY                               */
      150+    4495    1         2 ECCSZ UBIN(36) UNAL,           /* NR WORDS ECC INFO BELOW                */
      151+    4496    1         2 ECCINFO(0:4) UBIN WORD,
      152+    4497    1         2 IOCOMP REDEF ECCINFO,          /* IO COMPLETION INFO                     */
      153+    4498    1           3 TYC BIT(36),
      154+    4499    1           3 ARS UBIN(36),
      155+    4500    1           3 DVE,
      156+    4501    1             4 DVBYTE BIT(9) UNAL,
      157+    4502    1             4 EOMCHAR CHAR(1) UNAL,
      158+    4503    1           3 * UBIN(18) UNAL,
      159+    4504    1           3 CNTR UBIN(36),
      160+    4505    1           3 * UBIN(36);
      161+    4506        /*                                                                    */
      162+    4507        /*                STRUCTURE FOR CONTINUED DO LIST ENTRIES             */
      163+    4508        /*                                                                    */
      164+    4509    1   DCL 1 B$DOCONT BASED DALIGNED,
      165+    4510    1         2 LNK$ PTR UNAL,                 /* LINK TO NEXT ENTRY                     */
      166+    4511    1         2 * BIT(36) UNAL,
      167+    4512    1         2 * BIT(36) UNAL,
      168+    4513    1         2 ECCINFO(0:8) UBIN WORD;        /*DATA                                    */
      169+    4514        /* THE FOLLOWING STRUCTURE DESCRIBES THE USER TABLES AS AN            */
      170+    4515        /* ARRAY TO PERMIT LOCATING USER ELEMENTS GIVEN                       */
      171+    4516        /* A USER NUMBER.                                                     */
      172+    4517        /* IT SHOULD BE REFERED TO THROUGH THE POINTER B$USRT$ .              */
      173+    4518        /*                                                                    */
      174+    4519        /*                                                                    */
      175+    4520    1   DCL 1 B$USER(0:0) BASED ALIGNED,
      176+    4521    1         2 FLG BIT(36) UNAL,              /* FLAGS                                  */
      177+    4522    1         2 ASYNCH BIT(36) UNAL,           /* ASYNCHRONOUS FLAGS                     */
      178+    4523    1         2 FL UBIN UNAL,                /*STATE QUEUE FWD LINK                     */
      179+    4524    1         2 BL UBIN UNAL,                /*STATE QUEUE BKWD LINK                    */
      180+    4525    1         2 MRT UBIN UNAL,               /*TIME LIMIT REMAINING                     */
      181+    4526    1         2 UTSUSED UBIN UNAL,           /*TIME USED THUS FAR                       */
      182+    4527    1         2 MF UBIN(9) UNAL,               /*MASTER FUNCTION COUNT                   */
      183+    4528    1         2 ACP UBIN(9) UNAL,              /*COMMAND PROCESSOR NUMBER                */
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:65   
      184+    4529    1         2 DB UBIN(9) UNAL,               /*DEBUGGER PROCESSOR NUMBER               */
      185+    4530    1         2 ASL UBIN(9) UNAL,              /*ALT SHRD LIB PROC NUMBER                */
      186+    4531    1         2 APR UBIN(12) UNAL,             /*SHRD PROCESSOR NUMBER                   */
      187+    4532    1         2 APO UBIN(12) UNAL,             /*SHRD PROC OVLY NUMBER                   */
      188+    4533    1         2 ASP UBIN(6) UNAL,              /*SHRD LIB PROCESSOR NUMBER               */
      189+    4534    1         2 CMF UBIN(6) UNAL,              /* COMMUNICATIONS MASTER FUNC             */
      190+    4535    1         2 PCT UBIN(18) UNAL,
      191+    4536    1         2 SQ    UBIN(9) UNAL,            /* RESOURCE SUBQUEUE LINK  */
      192+    4537    1         2 CPU UBIN(9) UNAL,              /* REQUESTED CPU #                        */
      193+    4538    1         2 US UBIN(6) UNAL,               /*USER STATE                              */
      194+    4539    1         2 PTSIZ UBIN(6) UNAL,            /* PTABLE SIZE (MOD 64)     */
      195+    4540    1         2 PRIO UBIN(6) UNAL,             /*EXECUTION PRIORITY                      */
      196+    4541    1         2 PRIOB UBIN(6) UNAL,            /*BASE EXEC PRIORITY                      */
      197+    4542    1         2 MODE UBIN(6) UNAL,             /* USER MODE (SEE B$JIT DEF)              */
      198+    4543    1         2 BRKCNT UBIN(6) UNAL,            /* BREAK COUNT                        */
      199+    4544    1         2 WOO CHAR(8),                   /* WORK STATION NAME                      */
      200+    4545    1         2 PT UBIN(18) UNAL,              /*PAGE TABLE ADDRESS MOD 64               */
      201+    4546    1         2 SYSID UBIN(18) UNAL,           /*SYSTEM ID NUMBER                        */
      202+    4547    1         2 DL$ PTR,                       /*DO LIST POINTER.                        */
      203+    4548    1         2 ENQ,
      204+    4549    1           3 COUNT UBIN HALF UNAL,        /* USER ENQ COUNT (FORMERLY IN JIT)       */
      205+    4550    1           3 WAIT UBIN HALF UNAL,         /* ENTRYX OF WAIT ENQ BLOCK               */
      206+    4551    1         2 MISC UBIN(36) UNAL,            /*MISC DATA                               */
      207+    4552    1         2 MISC$ REDEF MISC PTR;
      208+    4553        /**/
      209+    4554        /* THE B$USERREFS MACRO PROVIDES SYMREFS FOR THE USER TABLE POINTER  */
      210+    4555        /* AND THE POINTER TO THE CURRENT USER'S USER TABLE ENTRY.           */
      211+    4556        /**/
      212+    4557        %MACRO B$USERREFS;
      213+    4558        DCL S$CU$ PTR SYMREF;                  /* POINTER TO CURRENT USER */
      214+    4559        DCL B$USRT$ PTR SYMREF;                /* POINTER TO USER TABLES */
      215+    4560        %MEND;
       20     4561        %B$USERREFS;
              4562    1   DCL S$CU$ PTR SYMREF;                  /* POINTER TO CURRENT USER */
              4563    1   DCL B$USRT$ PTR SYMREF;                /* POINTER TO USER TABLES */
       21     4565        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:66   
       22     4566        %INCLUDE SS_SCHED_C;
        1+    4567        /*M*  SCHEDULER EVENT AND STATE DEFINITION STRINGS                    */
        2+    4568        /*T***********************************************************/
        3+    4569        /*T*                                                         */
        4+    4570        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5+    4571        /*T*                                                         */
        6+    4572        /*T***********************************************************/
        7+    4573        /*                                                                    */
        8+    4574        /*    EVENT DEFINITIONS                                               */
        9+    4575        /*F*  NAME:  SS_SCHED_EVENT                                     */
       10+    4576        /*                                                                    */
       11+    4577        %EQU SS_IIP=1;
       12+    4578                      /*K* SS_IIP
       13+    4579                      }SS_IIP         1     IOM I/O has been started.         */
       14+    4580        %EQU SS_IIPC=2;
       15+    4581                      /*K* SS_IIPC
       16+    4582                      }SS_IIPC        2     Comgroup I/O has been started.*/
       17+    4583        %EQU SS_QMF=3;
       18+    4584                      /*K* SS_QMF
       19+    4585                      }SS_QMF         3     Current user's Master Function counter has
       20+    4586                      }                     reached the limit.              */
       21+    4587        %EQU SS_CRD=4;
       22+    4588                      /*K* SS_CRD
       23+    4589                      }SS_CRD         4     Communications read has been started.*/
       24+    4590        %EQU SS_CIC=5;
       25+    4591                      /*K* SS_CIC
       26+    4592                      }SS_CIC         5     Communications read has completed.*/
       27+    4593        %EQU SS_CBL=7;
       28+    4594                      /*K* SS_CBL
       29+    4595                      }SS_CBL         7     Communications output cannot continue at this
       30+    4596                      }                     time.                       */
       31+    4597        %EQU SS_CUB=8;
       32+    4598                      /*K* SS_CUB
       33+    4599                      }SS_CUB         8     Communications output may continue. */
       34+    4600        %EQU SS_CBK=10;
       35+    4601                      /*K* SS_CBK
       36+    4602                      }SS_CBK        10     Break character was received.   */
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:67   
       37+    4603        %EQU SS_CEC=12;
       38+    4604                      /*K* SS_CEC
       39+    4605                      }SS_CEC        12     Control Y sequence was received. */
       40+    4606        %EQU SS_ERR=14;
       41+    4607                      /*K* SS_ERR
       42+    4608                      }SS_ERR        14     An operator Error Keyin was received.*/
       43+    4609        %EQU SS_ABRT=16;
       44+    4610                      /*K* SS_ABRT
       45+    4611                      }SS_ABRT       16     An operator X (Abort) Keyin was received.*/
       46+    4612        %EQU SS_CAN=18;
       47+    4613                      /*K* SS_CAN
       48+    4614                      }SS_CAN        18     The user is to be canceled.    */
       49+    4615        %EQU SS_DISC=20;
       50+    4616                      /*K* SS_DISC
       51+    4617                      }SS_DISC       20     The user's terminal has been disconnected. */
       52+    4618        %EQU SS_WU=23;
       53+    4619                      /*K* SS_WU
       54+    4620                      }SS_WU         23     The user is to be awakened from the wait
       55+    4621                      }                     state.                    */
       56+    4622        %EQU SS_SL=25;
       57+    4623                      /*K* SS_SL
       58+    4624                      }SS_SL         25     The user is to be placed in the Wait state.
       59+    4625                      }                     Reported by various monitor procedures. */
       60+    4626        %EQU SS_SLPMME=26;
       61+    4627                      /*K*  SS_SLPMME
       62+    4628                      }SS_SLPMME     26     The user is to be placed in the wait
       63+    4629                      }                     state.  Reported by the M$WAIT monitor
       64+    4630                      }                     service only.  */
       65+    4631        %EQU SS_QA=27;
       66+    4632                      /*K* SS_QA
       67+    4633                      }SS_QA         27     Queue For Access.  The user is placed in the
       68+    4634                      }                     Queued For Access (SQA) state. */
       69+    4635        %EQU SS_UQA=28;
       70+    4636                      /*K* SS_UQA
       71+    4637                      }SS_UQA        28     Unqueue from SQA state.        */
       72+    4638        %EQU SS_QE=29;
       73+    4639                      /*K* SS_QE
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:68   
       74+    4640                      }SS_QE         29     The user has reached Quantum End.*/
       75+    4641        %EQU SS_IOC=30;
       76+    4642                      /*K* SS_IOC
       77+    4643                      }SS_IOC        30     An IOM I/O operation has completed.*/
       78+    4644        %EQU SS_IOCU=31;
       79+    4645                      /*K* SS_IOCU
       80+    4646                      }SS_IOCU       31     An IOM I/O operation has completed and
       81+    4647                      }                     the user is made executable.*/
       82+    4648        %EQU SS_DISCP=32;
       83+    4649                      /*K* SS_DISCP
       84+    4650                      }SS_DISCP      32     The user is in the process of
       85+    4651                      }                     disconnecting.               */
       86+    4652        %EQU SS_DU=33;
       87+    4653                      /*K* SS_DU
       88+    4654                      }SS_DU         33     Delete user. */
       89+    4655        %EQU SS_AU=34;
       90+    4656                      /*K* SS_AU
       91+    4657                      }SS_AU         34     Add new user to the system. */
       92+    4658        %EQU SS_AP=35;
       93+    4659                      /*K* SS_AP
       94+    4660                      }SS_AP         35     Associate shared processors. */
       95+    4661        %EQU SS_MP=36;
       96+    4662                      /*K* SS_MP
       97+    4663                      }SS_MP         36     Block for Master CPU. */
       98+    4664        %EQU SS_QC=37;
       99+    4665                      /*K* SS_QC
      100+    4666                      }SS_QC         37     Queue for FM cache. */
      101+    4667        %EQU SS_UQC=38;
      102+    4668                      /*K* SS_UQC
      103+    4669                      }SS_UQC        38     Unqueue for FM cache. */
      104+    4670        %EQU SS_CW=39;
      105+    4671                      /*K* SS_CW
      106+    4672                      }SS_CW         39     Wait for Communications I/O to complete.*/
      107+    4673        %EQU SS_FC=40;
      108+    4674                      /*K* SS_FC
      109+    4675                      }SS_FC         40     FEP crashed. */
      110+    4676        %EQU SS_FPLDTRC=41;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:69   
      111+    4677                      /*K* SS_FPLDTRC
      112+    4678                      }SS_FPLDTRC    41     Associated FPRG has done an M$LDTRC. */
      113+    4679        %EQU SS_IIPCA=42;
      114+    4680                      /*K* SS_IIPCA
      115+    4681                      }SS_IIPCA      42     Comgroup I/O in progress - ALTRET.*/
      116+    4682        %EQU SS_FPEVNT=43;
      117+    4683                      /*K* SS_FPEVNT
      118+    4684                      }SS_FPEVNT     43     Event received from associated FPRG (I/O
      119+    4685                      }                     complete on FPRG exit).  */
      120+    4686        /*                                                                    */
      121+    4687        %EQU SS_CBF=62;
      122+    4688                      /*K* SS_CBF
      123+    4689                      }SS_CBF        62     Communications output cannot continue
      124+    4690                      }                     at this time, for current user. */
      125+    4691        %EQU SS_CBA=63;
      126+    4692                      /*K* SS_CBA
      127+    4693                      }SS_CBA        63     Communications output may continue. */
      128+    4694        %EQU SS_NC=64;
      129+    4695                      /*K* SS_NC
      130+    4696                      }SS_NC         64     No memory available (No Core). */
      131+    4697        %EQU SS_CA=65;
      132+    4698                      /*K* SS_CA
      133+    4699                      }SS_CA         65     Memory available (Core Available). */
      134+    4700        %EQU SS_NQW=66;
      135+    4701                      /*K* SS_NQW
      136+    4702                      }SS_NQW        66     Enqueue/dequeue resource available. */
      137+    4703        %EQU SS_NQR=67;
      138+    4704                      /*K* SS_NQR
      139+    4705                      }SS_NQR        67     Enqueue/dequeue resource not available. */
      140+    4706        %EQU SS_NQP=68;
      141+    4707                      /*K* SS_NQP
      142+    4708                      }SS_NQP        68     No IOQ/IOS packets available. */
      143+    4709        %EQU SS_QPA=69;
      144+    4710                      /*K* SS_QPA
      145+    4711                      }SS_QPA        69     IOQ/IOS packet available. */
      146+    4712        %EQU SS_NAP=70;
      147+    4713                      /*K* SS_NAP
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:70   
      148+    4714                      }SS_NAP        70     Array Processor not available. */
      149+    4715        %EQU SS_APA=71;
      150+    4716                      /*K* SS_APA
      151+    4717                      }SS_APA        71     Array Processor available. */
      152+    4718        /*                                                                    */
      153+    4719        /*         STATE QUEUE DEFINITIONS                                    */
      154+    4720        /*                                                                    */
      155+    4721        %EQU SS_SC1=1;
      156+    4722        %EQU SS_SC2=2;
      157+    4723        %EQU SS_SC3=3;
      158+    4724        %EQU SS_SC4=4;
      159+    4725        %EQU SS_SC5=5;
      160+    4726        %EQU SS_SC6=6;
      161+    4727        %EQU SS_SC7=7;
      162+    4728        %EQU SS_SC8=8;
      163+    4729        %EQU SS_SC9=9;
      164+    4730        %EQU SS_SC10=10;
      165+    4731        %EQU SS_SC11=11;
      166+    4732        %EQU SS_SCU=12;
      167+    4733        %EQU SS_STOB=13;
      168+    4734        %EQU SS_SIOW=14;
      169+    4735        %EQU SS_SIOWC=15;
      170+    4736        %EQU SS_SIOMF=16;
      171+    4737        %EQU SS_SW=17;
      172+    4738        %EQU SS_SDSC=18;
      173+    4739        %EQU SS_SQA=19;
      174+    4740        %EQU SS_SQR=20;
      175+    4741        %EQU SS_STI=21;
      176+    4742        %EQU SS_SIOCACHE=22;
      177+    4743        %EQU SS_SCW = 23;
      178+    4744        %EQU SS_SNULL=24;
      179+    4745        %MACRO S_STATE (FPTN=S_STATE);
      180+    4746
      181+    4747        %LSET LISTDIR='0'B;
      182+    4748        %LSET LISTEXP='1'B;
      183+    4749        %LSET LISTCOM='0'B;
      184+    4750        %LSET LISTSUB='1'B;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:71   
      185+    4751
      186+    4752        DCL FPTN(0:24) CONSTANT CHAR(4) INIT(
      187+    4753              '    ',
      188+    4754              'SC1 ',            /* State=Compute queue 1 (highest) */
      189+    4755              'SC2 ',            /* State=Compute Queue 2 */
      190+    4756              'SC3 ',            /* State=Compute queue 3 */
      191+    4757              'SC4 ',            /* State=Compute queue 4 */
      192+    4758              'SC5 ',            /* State=Compute queue 5 */
      193+    4759              'SC6 ',            /* State=Compute queue 6 */
      194+    4760              'SC7 ',            /* State=Compute queue 7 */
      195+    4761              'SC8 ',            /* State=Compute queue 8 */
      196+    4762              'SC9 ',            /* State=Compute queue 9 */
      197+    4763              'SC10',            /* State=Compute queue 10 */
      198+    4764              'SC11',            /* State=Compute queue 11 (lowest) */
      199+    4765              'SCU ',            /* State=Current user */
      200+    4766              'SCOB',            /* State=Blocked, doing output */
      201+    4767              'SIOW',            /* State=I/O wait */
      202+    4768              'SIOC',            /* State=ComGroup I/O wait */
      203+    4769              'SMF ',            /* State=Master Function Count too high */
      204+    4770              'SW  ',            /* State=Waiting (asleep) */
      205+    4771              'SDSC',            /* State=Disconnected (going through logoff ) */
      206+    4772              'SQA ',            /* State=Queued for access */
      207+    4773              'SQR ',            /* State=Queued for resource (see subqueues, below) */
      208+    4774              'STI ',            /* State=Terminal Inputting */
      209+    4775              'SQC ',            /* State=Queued for I/O cache I/O */
      210+    4776              'SCW ',            /* State=Communications (FEP) I/O Wait */
      211+    4777              'SNUL');           /* State=Null (no user) */
      212+    4778        %MEND;
      213+    4779        %MACRO S_RSTATE (FPTN=S_RSTATE);
      214+    4780
      215+    4781        %LSET LISTDIR='0'B;
      216+    4782        %LSET LISTEXP='1'B;
      217+    4783        %LSET LISTCOM='0'B;
      218+    4784        %LSET LISTSUB='1'B;
      219+    4785
      220+    4786        DCL  FPTN(0:5) CONSTANT CHAR(4) INIT(
      221+    4787              'QRCQ',         /* State=Queued for space in communications circular queue */
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:72   
      222+    4788                'QRMM',          /* State=Queued for resource memory */
      223+    4789                'QRNQ',          /* State=Queued for an M$ENQued resource */
      224+    4790                'QRIO',          /* State=Queued for an IOQ packet */
      225+    4791                'QRAP',          /* State=Queued for array processor */
      226+    4792                'SQR5');         /* State=[spare, unused] */
      227+    4793        %MEND;
      228+    4794        /*  CPU state definitions                                         */
      229+    4795        %EQU SS_STOP#    = 0;      /* CPU stopped     */
      230+    4796        %EQU SS_PAUSE#   = 1;      /* CPU paused      */
      231+    4797        %EQU SS_RUN#     = 2;      /* CPU running     */
      232+    4798        %EQU SS_REL#     = 3;      /* CPU released    */
       23     4799        %PLIST;
       24     4800        %INCLUDE SS_SCHED_R;
       25     4843        %INCLUDE P_PMDAT_R;
       26     5151        %INCLUDE PM_BUCKET_C;
       27     5236        %DUMMY_BUCKET (NAME=P_INTCOMP,STCLASS=SYMREF);
       28     5242        %INCLUDE FM_DATA_R;
       29     5256        %INCLUDE HF_LOCK_C;
       30     5270        %INCLUDE HF_DATA_R;
       31     5313        %INCLUDE JM$STRUCT;
       32     6058        %INCLUDE JMA_DATA_R;
       33     6067        %INCLUDE JM_CNTRL_R;
       34     6956        %INCLUDE B$MAP;
       35     7055        %INCLUDE B$ROSEG;
       36     7118        %INCLUDE CP_6_SUBS;
       37     7658        %INCLUDE UM$CP6V_C;
       38     7845        %INCLUDE UM_ERRORS_C;
       39     7879        %FPT$RUE_V;
       40     7882    1   DCL 1 SS_EVENT_ERR CONSTANT,
       41     7883    1         2 FCG BIT(12) INIT('2323'O),      /* SS                                 */
       42     7884    1         2 MID BIT(6) INIT ('22'O),        /* R                                  */
       43     7885    1         2 MON BIT(1) INIT('1'B),
       44     7886    1         2 CODE UBIN(14) INIT(120) UNAL,
       45     7887    1         2 SEV UBIN(3) INIT(0) UNAL;
       46     7888        %INCLUDE B$P;
       47     7972        %INCLUDE NK$LDCT;
       48     8074        %NK$LDCT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:73   
       49     8120    1   DCL LDCT$ PTR BASED;
       50     8121    1   DCL 1 LOCK BASED ALIGNED,
       51     8122    1         2 UNLOCKER UBIN(36),
       52     8123    1         2 USR UBIN BYTE CALIGNED,
       53     8124    1         2 PNO UBIN BYTE CALIGNED,
       54     8125    1         2 LOCKER UBIN HALF CALIGNED;
       55     8126        %MACRO UNLOCKU (G#="");  /* For unlocking gates locked while running service */
       56     8127                ADDR(G#)->LOCK.USR = 0;    /* Zap usr so diag lock code allows unlock */
       57     8128                CALL HFC$UNLOCK (G#);
       58     8129        %MEND;
       59     8130        %JM_PART (FPTN=JM$PT,STCLASS=BASED);
       60     8185        /* STRING SUBS FOR LOCALLY KNOWN EVENTS.  THESE MAY NEED              */
       61     8186        /* TO BE MODIFIED IF LOW NUMBERED EVENTS ARE REDEFINED.               */
       62     8187        %EQU SS_NEWUSER=0;
       63     8188        %EQU SS_SKIPUSER=99;
       64     8189        %SUB SS_CICCU=6;
       65     8190        %SUB SS_CUBEX=9;
       66     8191        %SUB SS_CBKEX=11;
       67     8192        %SUB SS_CECEX=13;
       68     8193        %SUB SS_ERRBLK=15;
       69     8194        %SUB SS_ABRTBLK=17;
       70     8195        %SUB SS_CANBLK=19;
       71     8196        %SUB SS_DISCBLK=21;
       72     8197        %SUB SS_DISCX=22;
       73     8198        %SUB SS_WUEX=24;
       74     8199        %SUB SS_PARK=79;
       75     8200        /*                                                                    */
       76     8201        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:74   
       77     8202        /*                                                                    */
       78     8203        /*         EVENT PERMISSION TABLE                                     */
       79     8204        /*                                                                    */
       80     8205        /*         SETS SPECIFIC STATE PERMISSION BITS FOR EVENTS.
       81     8206                   EACH ENTRY WORD CORRESPONDS TO AN EVENT.  IF A STATE BIT
       82     8207                   IS SET ITS OK FOR THE EVENT TO BE REPORTED ON A USER IN
       83     8208                   THAT STATE.  STATE BIT 0 (CONT) INDICATES THAT THE NEXT
       84     8209                   EVENT WORD SHOULD BE EXAMINED IF THE STATE BIT IS NOT SET
       85     8210                   IN THE CURRENT WORD.  THUS, IN SOME CASES THERE ARE TWO
       86     8211                   POSSIBLE EVENT ACTIONS THAT CAN OCCUR DEPENDING ON THE
       87     8212                   STATE OF THE USER.  IF A PERMISSION BIT IS NOT SET,
       88     8213                   THE EVENT IS ILLEGAL AND A SC 120 OCCURS.                  */
       89     8214        %MACRO  PTBL (CONT=0,SEXU=0,SCU=0,STOB=0,SIOW=0,SIOMF=0,SW=0,
       90     8215                   SDSC=0,SQA=0,SQR=0,STI=0,SQC=0,SNULL=0,SIOWC=0,SCW=0);
       91     8216                , 2 *(0:35) UBIN(1) UNAL INIT(CONT,SEXU*11,SCU,STOB,SIOW,SIOWC,SIOMF,
       92     8217                  SW,SDSC,SQA,SQR,STI,SQC,SCW,SNULL,0*0)
       93     8218        %MEND;
       94     8219        /*         SETS ALL STATE PERMISSION BITS                             */
       95     8220        %MACRO  PTBLALL;
       96     8221                  ,2 *(0:35) UBIN(1) UNAL INIT(0,1*0)
       97     8222        %MEND;
       98     8223        /*         RESETS ALL STATE PERMISSION BITS.  FOR UNUSED EVENTS       */
       99     8224        %MACRO PTBLNONE;
      100     8225                  ,2 * UBIN INIT(0)
      101     8226        %MEND;
      102     8227        /*                                                                    */
      103     8228    1   DCL 1 PERM_ CONSTANT
      104     8229        %PTBL;
      105     8233        /*   %SS_IIP                                                           */
      106     8234        %PTBL (SCU=1);
      107     8238        /*   %SS_IIPC                                                          */
      108     8239        %PTBL (SCU=1);
      109     8243        /*   %SS_QMF                                                           */
      110     8244        %PTBL (SCU=1);
      111     8248        /*   %SS_CRD                                                           */
      112     8249        %PTBL (SCU=1);
      113     8253        /*   %SS_CIC                                                           */
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:75   
      114     8254        %PTBL (CONT=1,STI=1,SCW=1);
      115     8258        %PTBL (SCU=1);
      116     8262        /*   %SS_CBL                                                           */
      117     8263        %PTBL (SCU=1);
      118     8267        /*   %SS_CUB                                                           */
      119     8268        %PTBL (CONT=1,STOB=1);
      120     8272        %PTBL (SEXU=1,SCU=1,SIOW=1,SIOWC=1,SIOMF=1,SW=1,SQA=1,SQR=1,STI=1,
      121     8273               SDSC=1,SQC=1,SCW=1);
      122     8277        /*   %SS_CBK                                                           */
      123     8278        %PTBL (CONT=1,SCU=1,SIOW=1,SIOMF=1,SQA=1,SQR=1,SNULL=1,SDSC=1,SQC=1,SCW=1);
      124     8282        %PTBL (SEXU=1,STOB=1,SW=1,STI=1,SIOWC=1);
      125     8286        /*   %SS_CEC                                                           */
      126     8287        %PTBL (CONT=1,SCU=1,SIOW=1,SIOMF=1,SQA=1,SQR=1,SNULL=1,SDSC=1,SQC=1,SCW=1);
      127     8291        %PTBL (SEXU=1,STOB=1,SW=1,STI=1,SIOWC=1);
      128     8295        /*   %SS_ERR                                                           */
      129     8296        %PTBL (CONT=1,SEXU=1,SW=1,STOB=1,SDSC=1,SIOWC=1);
      130     8300        %PTBL (SCU=1,SIOW=1,SIOMF=1,SQA=1,SQR=1,STI=1,SNULL=1,SQC=1,SCW=1);
      131     8304        /*   %SS_ABRT                                                          */
      132     8305        %PTBL (CONT=1,SEXU=1,SW=1,STI=1,STOB=1,SDSC=1,SIOWC=1);
      133     8309        %PTBL (SCU=1,SIOW=1,SIOMF=1,SQA=1,SQR=1,SNULL=1,SQC=1,SCW=1);
      134     8313        /*   %SS_CAN                                                           */
      135     8314        %PTBL (CONT=1,SEXU=1,SW=1,STI=1,STOB=1,SDSC=1,SIOWC=1);
      136     8318        %PTBL (SCU=1,SIOW=1,SIOMF=1,SQA=1,SQR=1,SNULL=1,SQC=1,SCW=1);
      137     8322        /*   %SS_DISC                                                          */
      138     8323        %PTBL (CONT=1,SEXU=1,SW=1,STI=1,STOB=1,SIOWC=1);
      139     8327        %PTBL (CONT=1,SCU=1,SIOW=1,SIOMF=1,SQA=1,SQR=1,SNULL=1,SQC=1,SCW=1);
      140     8331        %PTBL (SDSC=1);
      141     8335        /*   %SS_WU                                                            */
      142     8336        %PTBL (CONT=1,SW=1);
      143     8340        %PTBL (SEXU=1,SCU=1,STOB=1,SIOW=1,SIOWC=1,SIOMF=1,SQA=1,SQR=1,STI=1,
      144     8341              SNULL=1,SQC=1,SCW=1);
      145     8345        /*   %SS_SL                                                            */
      146     8346        %PTBL (SCU=1);
      147     8350        /*   %SS_SLPMME                                                        */
      148     8351        %PTBL (SCU=1);
      149     8355        /*   %SS_QA                                                            */
      150     8356        %PTBL (SCU=1);
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:76   
      151     8360        /*   %SS_UQA                                                           */
      152     8361        %PTBL (SCU=1,SQA=1);
      153     8365        /*   %SS_QE                                                            */
      154     8366        %PTBL (SCU=1);
      155     8370        /*   %SS_IOC                                                           */
      156     8371        %PTBL (SEXU=1,SCU=1,STOB=1,SIOW=1,SIOWC=1,SIOMF=1,SW=1,SQA=1,SQR=1,
      157     8372              STI=1,SDSC=1,SQC=1,SCW=1);
      158     8376        /*   %SS_IOCU                                                          */
      159     8377        %PTBL (SEXU=1,SCU=1,STOB=1,SIOW=1,SIOWC=1,SIOMF=1,SW=1,SQA=1,SQR=1,
      160     8378               STI=1,SQC=1,SCW=1);
      161     8382        /*   %SS_DISCP                                                           */
      162     8383        %PTBL (SCU=1);
      163     8387        /*   %SS_DU                                                            */
      164     8388        %PTBL (SCU=1);
      165     8392        /*   %SS_AU                                                            */
      166     8393        %PTBL (SCU=1);
      167     8397        /*   %SS_AP                                                            */
      168     8398        %PTBL (SCU=1);
      169     8402        /*   %SS_MP                                                            */
      170     8403        %PTBL  (SCU=1);
      171     8407        /*   %SS_QC                                                          */
      172     8408        %PTBL (SCU=1);
      173     8412        /*   %SS_UQC                                                         */
      174     8413        %PTBL (SQC=1);
      175     8417        /*   %SS_CW                                                          */
      176     8418        %PTBL (SCU=1);
      177     8422        /*   %SS_FC                                                          */
      178     8423        %PTBL (STI=1,STOB=1,SCW=1);
      179     8427        /*   %SS_FPLDTRC                                                  */
      180     8428        %PTBL (SCU=1,SIOW=1,SIOMF=1,SQA=1,SQR=1,SNULL=1,SDSC=1,SQC=1,SCW=1,
      181     8429               SEXU=1,STOB=1,SW=1,STI=1,SIOWC=1);
      182     8433        /*    %SS_IIPCA                    */
      183     8434        %PTBL (SCU=1);
      184     8438        /*    %SS_FPEVNT                                                   */
      185     8439        %PTBL (SCU=1,SIOW=1,SIOMF=1,SQA=1,SQR=1,SNULL=1,SDSC=1,SQC=1,SCW=1,
      186     8440               SEXU=1,STOB=1,SW=1,STI=1,SIOWC=1);
      187     8444        /*    44-61 Unassigned right now                                   */
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:77   
      188     8445        %PTBL;
      189     8449        %PTBL;
      190     8453        %PTBL;
      191     8457        %PTBL;
      192     8461        %PTBL;
      193     8465        %PTBL;
      194     8469        %PTBL;
      195     8473        %PTBL;
      196     8477        %PTBL;
      197     8481        %PTBL;
      198     8485        %PTBL;
      199     8489        %PTBL;
      200     8493        %PTBL;
      201     8497        %PTBL;
      202     8501        %PTBL;
      203     8505        %PTBL;
      204     8509        %PTBL;
      205     8513        %PTBL;
      206     8517        /*   %SS_CBF                                                           */
      207     8518        %PTBL (SCU=1);
      208     8522        /*   %SS_CBA                                                           */
      209     8523        %PTBLALL;
      210     8526        /*   %SS_NC                                                            */
      211     8527        %PTBL (SCU=1);
      212     8531        /*   %SS_CA                                                            */
      213     8532        %PTBLALL;
      214     8535        /*   %SS_NQW                                                           */
      215     8536        %PTBL (SCU=1);
      216     8540        /*   %SS_NQR                                                           */
      217     8541        %PTBLALL;
      218     8544        /*   %SS_NQP                                                           */
      219     8545        %PTBL (SCU=1);
      220     8549        /*   %SS_QPA                                                           */
      221     8550        %PTBLALL;
      222     8553        /*   %SS_NAP                                                           */
      223     8554        %PTBL (SCU=1);
      224     8558        /*   %SS_APA                                                           */
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:78   
      225     8559        %PTBLALL;
      226     8562    1           ;
      227     8563        /*                                                                    */
      228     8564    1   DCL   PERM(0:%SS_APA) REDEF PERM_ UBIN(36);
      229     8565    1   DCL   S_HQ_BYP$ PTR SYMREF READONLY;
      230     8566    1   DCL   S_TQ_BYP$ PTR SYMREF READONLY;
      231     8567    1   DCL   S_RQH_BYP$ PTR SYMREF READONLY;
      232     8568    1   DCL   S_RQT_BYP$ PTR SYMREF READONLY;
      233     8569    1   DCL   S_CUP_BYP$ PTR SYMREF READONLY;
      234     8570    1   DCL   S_HIR_BYP$ PTR SYMREF READONLY;
      235     8571    1   DCL   S_HQ_BYP(0:%SS_SNULL) SBIN BASED(S_HQ_BYP$);
      236     8572    1   DCL   S_TQ_BYP(0:%SS_SNULL) SBIN BASED(S_TQ_BYP$);
      237     8573    1   DCL   S_RQH_BYP(0:5) SBIN BASED(S_RQH_BYP$);
      238     8574    1   DCL   S_RQT_BYP(0:5) SBIN BASED(S_RQT_BYP$);
      239     8575    1   DCL   S_CUP_BYP SBIN BASED(S_CUP_BYP$);
      240     8576    1   DCL   S_HIR_BYP SBIN BASED(S_HIR_BYP$);
      241     8577        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:79   
      242     8578    1   DCL   EVNT UBIN(36);                    /* EVENT NUMBER                       */
      243     8579    1   DCL   USR UBIN BYTE CALIGNED;           /* USER NUMBER                        */
      244     8580    1   DCL 1 FCN CALIGNED,                     /* DCB FUNCTION COUNT AND FLAG        */
      245     8581    1         2 FLAG UBIN(1) UNAL,              /* FLAG INDICATES BLOCKED             */
      246     8582    1         2 CNT UBIN(8) UNAL;               /* COUNT                              */
      247     8583    1   DCL   PTR2$ PTR;                        /* EVENT PARAM                        */
      248     8584        /*                                                                    */
      249     8585        /*                                                                    */
      250     8586    1   DCL   P$ PTR;                           /* USER POINTER                       */
      251     8587    1   DCL   PB$ PTR;                          /* BACKWARD LINK USER POINTER         */
      252     8588    1   DCL   P1$  PTR;
      253     8589    1   DCL   EV$ PTR;                          /* EVENT INFO POINTER                 */
      254     8590    1   DCL   USER UBIN(36);                    /* TEMP USER NUMBER                   */
      255     8591    1   DCL   EVENT UBIN(36);                   /* TEMP EVENT NUMBER                  */
      256     8592    1   DCL 1 FCN_LCL,                          /* DCB FUNCTION COUNT AND FLAG        */
      257     8593    1         2 FLAG UBIN(1) UNAL,              /* FLAG INDICATES BLOCKED             */
      258     8594    1         2 CNT UBIN(8) UNAL;               /* COUNT                              */
      259     8595    1   DCL   HDFLG BIT(1);                     /* HEAD OF QUEUE FLAG                 */
      260     8596    1   DCL   REGENT BIT(1);
      261     8597    1   DCL   UST UBIN(36);                     /* USER STATE                         */
      262     8598    1   DCL   PRIO UBIN(36);                    /* TEMP USER PRIORITY                 */
      263     8599    1   DCL   STATE SBIN;
      264     8600    1   DCL   T UBIN(36);
      265     8601    1   DCL   TT UBIN(36);
      266     8602    1   DCL   INC UBIN(36);                     /* PRIORITY INC INDEX                 */
      267     8603    1   DCL   STFLG UBIN(36);
      268     8604    1   DCL   EFLG UBIN;
      269     8605    1   DCL   EVF SBIN;
      270     8606    1   DCL MRUE_ENT BIT(1) ALIGNED;            /* 1 means M$RUE pmme                 */
      271     8607    1   DCL   RES UBIN;                         /* RESOURCE TEMP                      */
      272     8608    1   DCL   BITS(0:35)     BASED BIT(1) UNAL;
      273     8609    1   DCL   BIT0 BIT(1) BASED ALIGNED;
      274     8610    1   DCL   TIME UBIN(36) BASED;
      275     8611    1   DCL   STIME SBIN BASED;
      276     8612    1   DCL 1 J BASED ALIGNED,
      277     8613    1         2 F UBIN(18) UNAL,
      278     8614    1         2 I UBIN(18) UNAL;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:80   
      279     8615    1   DCL   FLK UBIN(36);                     /* TEMP FORWARD USER LINK             */
      280     8616    1   DCL   BLK UBIN(36);                     /* TEMP BACKWARD USER LINK            */
      281     8617    1   DCL   NI_MFGATE BIT(72) SYMREF ALIGNED;
      282     8618    1   DCL   S_MING SYMREF UBIN(36);
      283     8619    1   DCL   S_CUN UBIN(36) SYMREF;            /* CURRENT USER NUMBER                */
      284     8620    1   DCL   S_PNO UBIN SYMREF;                /* PROCESSOR NUMBER                   */
      285     8621    1   DCL   S_TIM_KEYIN SBIN STATIC SYMDEF INIT(0);
      286     8622    1   DCL   B$PPUT$ PTR SYMREF READONLY;
      287     8623    1   DCL   B$WINDOW$ PTR SYMREF READONLY;
      288     8624    1   DCL B$WSQ0PT$ PTR SYMREF;
      289     8625    1   DCL   B$UPT$ PTR SYMREF READONLY;
      290     8626    1   DCL   B$USERIS$ PTR SYMREF READONLY;
      291     8627    1   DCL   B$ROSEG$ PTR SYMREF READONLY;
      292     8628    1   DCL   B$PS0$ PTR SYMREF READONLY;
      293     8629        /*                                                                    */
      294     8630    1   DCL   SC_RESQ ENTRY CONV(2,0);
      295     8631    1   DCL   SC_ASSOC ENTRY CONV(2,0);
      296     8632    1   DCL   SC_EVENT ENTRY CONV(2,0);
      297     8633    1   DCL   SSS$EOMTIME ENTRY(1);
      298     8634    1   DCL   SSS$RET ENTRY;                    /* CONTINUE INSTEAD OF REGGING        */
      299     8635    1   DCL   SSS$ALTRET ENTRY;            /* ALTRETURN INSTEAD OF REGGING        */
      300     8636    1   DCL   SSS$DU ENTRY;
      301     8637    1   DCL   SSS$WUTIME ENTRY(2);
      302     8638    1   DCL   SSS$BLOCK ENTRY;
      303     8639    1   DCL   SSS$CACHEBP ENTRY;
      304     8640    1   DCL   SSS$CACHE ENTRY;
      305     8641    1   DCL   SSC$SASYNC ENTRY;
      306     8642    1   DCL   SSC$MON ENTRY;
      307     8643    1   DCL   SSQ$NUQUAN ENTRY ALTRET;
      308     8644    1   DCL KIF$LDTRC ENTRY(1) ALTRET;
      309     8645    1   DCL SSV$EVENT ENTRY(7);
      310     8646    1   DCL   MMB$FPP ENTRY(1) ALTRET;          /* FREE PHYS PAGE                     */
      311     8647    1   DCL   MME$CVM ENTRY(4) ALTRET;          /* MAP ONTO SHRD PROC PP              */
      312     8648    1   DCL   PHN$NEW_ST ENTRY(2);
      313     8649    1   DCL   OCZ$SID_UN ENTRY(4) ALTRET;
      314     8650    1   DCL   HFD$CNNCT ENTRY(2);
      315     8651    1   DCL   B$JIT$ PTR SYMREF READONLY;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:81   
      316     8652        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:82   
      317     8653        /*         REPORT USER EVENT PROCEDURE                                */
      318     8654        /*                                                                    */
      319     8655        /*                                                                    */
      320     8656    2           DO INHIBIT;

      321     8657                   %LOCK (G#=S_SCHDGATE);

   8658  2 000002   000000 630600 3                  EPPR0 ! 0
         2 000003   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         2 000004   000000 701200 xent               TSX1  ! HFC$LOCK
         2 000005   000000 011200                    NOP   ! 0

      322     8660    2              REGENT='0'B;

   8660  2 000006   200017 450300                    STZ   ! REGENT,,AUTO

      323     8661    2              GOTO RCE00;

   8661  2 000007   000015 710200 2                  TRA   ! RCE00

      324     8662    2           END;                            /* END INHIBIT SECTION                */

   8662  2 000010   000013 710000 2                  TRA     s:8667

      325     8663        /*                                                                    */
      326     8664        /*         ENTRY WITH SCHEDULER GATE ALREADY LOCKED                   */
      327     8665        /*                                                                    */
      328     8666    1   SSR$REGUE: ENTRY(EVNT,USR,FCN,PTR2$);

   8666  2 000011   000000 700200 xent  SSR$REGUE    TSX0  ! X66_AUTO_4
         2 000012   000052 000004                    ZERO    42,4

      329     8667    1           REGENT='1'B;

   8667  2 000013   400000 236003                    LDQ     -131072,DU
         2 000014   200017 756100                    STQ     REGENT,,AUTO

PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:83   
   8667  2 000015                       RCE00        null
      330     8668    1   RCE00:  ;
      331     8669    1           MRUE_ENT = '0'B;

   8669  2 000015   200031 450100                    STZ     MRUE_ENT,,AUTO

      332     8670    1           IF ADDR(USR) = ADDR(NIL) THEN USER=S_CUN;

   8670  2 000016   200004 236100                    LDQ     @USR,,AUTO
         2 000017   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000020   000024 601000 2                  TNZ     s:8671

   8670  2 000021   000000 235000 xsym               LDA     S_CUN
         2 000022   200013 755100                    STA     USER,,AUTO
         2 000023   000030 710000 2                  TRA     s:8672

      333     8671    1           ELSE USER=USR;

   8671  2 000024   200004 470500                    LDP0    @USR,,AUTO
         2 000025   000100 101500                    MRL     fill='000'O
         2 000026   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 000027   200013 000004                    ADSC9   USER,,AUTO               cn=0,n=4

      334     8672    1           EVENT=EVNT;

   8672  2 000030   200003 470500                    LDP0    @EVNT,,AUTO
         2 000031   000000 235100                    LDA     0,,PR0
         2 000032   200014 755100                    STA     EVENT,,AUTO

   8672  2 000033                       RCE0         null
      335     8673    1   RCE0:   ;
      336     8674    1           IF ADDR(PTR2$) = ADDR(NIL) THEN EV$=ADDR(NIL);

   8674  2 000033   200006 236100                    LDQ     @PTR2$,,AUTO
         2 000034   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000035   000041 601000 2                  TNZ     s:8675

PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:84   
   8674  2 000036   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000037   200012 756100                    STQ     EV$,,AUTO
         2 000040   000044 710000 2                  TRA     s:8676

      337     8675    1           ELSE EV$=PTR2$;

   8675  2 000041   200006 470500                    LDP0    @PTR2$,,AUTO
         2 000042   000000 236100                    LDQ     0,,PR0
         2 000043   200012 756100                    STQ     EV$,,AUTO

      338     8676    1           HDFLG='0'B;                     /*ADD TO TAIL OF QUEUE                */

   8676  2 000044   200016 450100                    STZ     HDFLG,,AUTO

      339     8677    1           P$=ADDR(B$USRT$->B$USER(USER));

   8677  2 000045   200013 236100                    LDQ     USER,,AUTO
         2 000046   000026 736000                    QLS     22
         2 000047   000000 036000 xsym               ADLQ    B$USRT$
         2 000050   200007 756100                    STQ     P$,,AUTO

      340     8678    1           UST=P$->B$U.US;                 /*USERS CURRENT STATE*/

   8678  2 000051   200007 470500                    LDP0    P$,,AUTO
         2 000052   000011 236100                    LDQ     9,,PR0
         2 000053   000036 772000                    QRL     30
         2 000054   200020 756100                    STQ     UST,,AUTO

      341     8679    1           EVF=S_EVF;

   8679  2 000055   000000 235000 xsym               LDA     S_EVF
         2 000056   200030 755100                    STA     EVF,,AUTO

      342     8680    1           CALL EVREPRT;                   /* RECORD EVENT                       */

   8680  2 000057   002105 701000 2                  TSX1    EVREPRT
         2 000060   000000 011000                    NOP     0
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:85   

      343     8681    1           P_RUE#(S_PNO)=P_RUE#(S_PNO)+1;

   8681  2 000061   000000 720000 xsym               LXL0    S_PNO
         2 000062   000000 054010 xsym               AOS     P_RUE#,X0

      344     8682        /*                                                                    */
      345     8683    1   RCE1:   P1$=ADDR(PERM(EVENT));

   8683  2 000063   200014 720100       RCE1         LXL0    EVENT,,AUTO
         2 000064   000001 630410 0                  EPPR0   PERM_,X0
         2 000065   200011 450500                    STP0    P1$,,AUTO

      346     8684    1           IF NOT P1$->BITS(UST) THEN      /* CHECK PERMISSION BIT               */

   8684  2 000066   200020 235100                    LDA     UST,,AUTO
         2 000067   000000 066505                    CMPB    filb='0'B
         2 000070   000000 000001                    BDSC    0,A,PR0                  by=0,bit=0,n=1
         2 000071   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         2 000072   000115 601000 2                  TNZ     s:8707

      347     8685    2              DO;

      348     8686    2                 IF NOT P1$->BIT0 THEN     /* CHECK CONTINUATION                 */

   8686  2 000073   000000 234100                    SZN     0,,PR0
         2 000074   000111 604000 2                  TMI     s:8704

      349     8687    3                    IF MRUE_ENT THEN DO;

   8687  2 000075   200031 234100                    SZN     MRUE_ENT,,AUTO
         2 000076   000107 605000 2                  TPL     s:8703

      350     8688        /*E* ERROR: SSR-E$EVENTERR
      351     8689           MESSAGE: Event inconsistent with state
      352     8690          MESSAGE1: An event number was passed to M$RUE that is not consistent
      353     8691                    with the target user's current state.
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:86   
      354     8692        */
      355     8693    3                          B$JIT.ERR = SS_EVENT_ERR;

   8693  2 000077   000000 236000 0                  LDQ     SS_EVENT_ERR
         2 000100   000000 471400 xsym               LDP1    B$JIT$
         2 000101   100012 756100                    STQ     10,,PR1

      356     8694                               %UNLOCK(G#=S_SCHDGATE);

   8695  2 000102   000000 630400 3                  EPPR0   0
         2 000103   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000104   000000 701000 xent               TSX1    HFC$UNLOCK
         2 000105   000000 011000                    NOP     0

      357     8697    3                          RETURN;

   8697  2 000106   000000 702200 xent               TSX2  ! X66_ARET

      358     8698    3                       END;
      359     8699    2                    ELSE
      360     8700        /*S*    SCREECH_CODE: SSR-S$EVENTERR
      361     8701                TYPE: SCREECH
      362     8702                MESSAGE: Event inconsistent with state                        */
      363     8703    2                       CALL SC_EVENT;

   8703  2 000107   000000 713400 xsym               CLIMB   SC_EVENT
         2 000110   000000 600000 xsid               climb   nvectors=         0

      364     8704    2                 EVENT=EVENT+1;            /* CHECK NEXT WORD IF SO, ELSE SCRE*/

   8704  2 000111   200014 235100                    LDA     EVENT,,AUTO
         2 000112   000001 035007                    ADLA    1,DL
         2 000113   200014 755100                    STA     EVENT,,AUTO

      365     8705    2                 GOTO RCE1;

   8705  2 000114   000063 710000 2                  TRA     RCE1
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:87   

      366     8706    2              END;
      367     8707    1           IF EVENT > %SS_CBF-1 THEN GOTO RESS; /* RESOURCE EVENTS               */

   8707  2 000115   200014 236100                    LDQ     EVENT,,AUTO
         2 000116   000076 116007                    CMPQ    62,DL
         2 000117   001636 603000 2                  TRC     RESS

      368     8708        /*                                                                    */
      369     8709    2           DO CASE (EVENT);

   8709  2 000120   000054 116007                    CMPQ    44,DL
         2 000121   000123 602006 2                  TNC     s:8709+3,QL
         2 000122   001533 710000 2                  TRA     s:9117
         2 000123   001533 710000 2                  TRA     s:9117
         2 000124   000177 710000 2                  TRA     s:8712
         2 000125   001216 710000 2                  TRA     s:9020
         2 000126   000252 710000 2                  TRA     s:8739
         2 000127   000274 710000 2                  TRA     s:8748
         2 000130   000350 710000 2                  TRA     s:8772
         2 000131   000371 710000 2                  TRA     s:8780
         2 000132   000375 710000 2                  TRA     s:8784
         2 000133   000450 710000 2                  TRA     s:8805
         2 000134   000460 710000 2                  TRA     s:8810
         2 000135   000510 710000 2                  TRA     s:8826
         2 000136   000514 710000 2                  TRA     s:8834
         2 000137   000510 710000 2                  TRA     s:8826
         2 000140   000514 710000 2                  TRA     s:8834
         2 000141   000514 710000 2                  TRA     s:8834
         2 000142   000510 710000 2                  TRA     s:8826
         2 000143   000514 710000 2                  TRA     s:8834
         2 000144   000510 710000 2                  TRA     s:8826
         2 000145   000514 710000 2                  TRA     s:8834
         2 000146   000510 710000 2                  TRA     s:8826
         2 000147   000514 710000 2                  TRA     s:8834
         2 000150   000510 710000 2                  TRA     s:8826
         2 000151   000350 710000 2                  TRA     s:8772
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:88   
         2 000152   000707 710000 2                  TRA     s:8897
         2 000153   001533 710000 2                  TRA     s:9117
         2 000154   000714 710000 2                  TRA     s:8902
         2 000155   000714 710000 2                  TRA     s:8902
         2 000156   000753 710000 2                  TRA     s:8923
         2 000157   000773 710000 2                  TRA     s:8935
         2 000160   001104 710000 2                  TRA     s:8970
         2 000161   001144 710000 2                  TRA     CHKMF
         2 000162   001110 710000 2                  TRA     s:8978
         2 000163   001527 710000 2                  TRA     s:9114
         2 000164   001304 710000 2                  TRA     s:9048
         2 000165   001346 710000 2                  TRA     s:9071
         2 000166   001477 710000 2                  TRA     s:9104
         2 000167   001233 710000 2                  TRA     s:9028
         2 000170   001006 710000 2                  TRA     s:8944
         2 000171   001063 710000 2                  TRA     s:8961
         2 000172   000266 710000 2                  TRA     s:8743
         2 000173   000464 710000 2                  TRA     s:8814
         2 000174   000621 710000 2                  TRA     s:8873
         2 000175   001221 710000 2                  TRA     s:9023
         2 000176   000621 710000 2                  TRA     s:8873

      370     8710        /*                                                                    */
      371     8711    2            CASE (%SS_IIP);                /* I/O IN PROGRESS                    */

      372     8712    2              STATE=%SS_SIOW;              /* I/O WAIT STATE                     */

   8712  2 000177   000016 235007                    LDA     14,DL
         2 000200   200022 755100                    STA     STATE,,AUTO

   8712  2 000201                       IIP          null
      373     8713    2   IIP:       ;
      374     8714    2              IF P$->B$U.MF = 0 THEN CALL SSS$RET; /* I/O IS DONE, RETURN        */

   8714  2 000201   200007 470500                    LDP0    P$,,AUTO
         2 000202   000006 236100                    LDQ     6,,PR0
         2 000203   777000 316003                    CANQ    -512,DU
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:89   
         2 000204   000210 601000 2                  TNZ     s:8715

   8714  2 000205   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000206   000000 701000 xent               TSX1    SSS$RET
         2 000207   000000 011000                    NOP     0

      375     8715    2              IF ADDR(FCN) ~= ADDR(NIL)

   8715  2 000210   200005 236100                    LDQ     @FCN,,AUTO
         2 000211   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000212   000247 600000 2                  TZE     s:8736

      376     8716    3              THEN DO;

      377     8717                         %LOCK (G#=F_DCBLOCK);

   8718  2 000213   000001 630400 3                  EPPR0   1
         2 000214   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000215   000000 701000 xent               TSX1    HFC$LOCK
         2 000216   000000 011000                    NOP     0

      378     8720    3                    FCN_LCL = FCN;

   8720  2 000217   200005 470500                    LDP0    @FCN,,AUTO
         2 000220   000100 100500                    MLR     fill='000'O
         2 000221   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 000222   200015 000001                    ADSC9   FCN_LCL,,AUTO            cn=0,n=1

      379     8721    3                    IF FCN_LCL.CNT = 0

   8721  2 000223   200015 236100                    LDQ     FCN_LCL,,AUTO
         2 000224   377000 316003                    CANQ    130560,DU
         2 000225   000236 601000 2                  TNZ     s:8729

      380     8722    4                    THEN DO;

      381     8723                               %UNLOCK (G#=F_DCBLOCK);
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:90   

   8724  2 000226   000001 630400 3                  EPPR0   1
         2 000227   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000230   000000 701000 xent               TSX1    HFC$UNLOCK
         2 000231   000000 011000                    NOP     0

      382     8726    4                          CALL SSS$RET;

   8726  2 000232   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000233   000000 701000 xent               TSX1    SSS$RET
         2 000234   000000 011000                    NOP     0

      383     8727    4                       END;

   8727  2 000235   000243 710000 2                  TRA     s:8733

      384     8728    4                    ELSE DO;

      385     8729    4                          FCN_LCL.FLAG=1;

   8729  2 000236   400000 236003                    LDQ     -131072,DU
         2 000237   200015 256100                    ORSQ    FCN_LCL,,AUTO

      386     8730    4                          FCN = FCN_LCL;

   8730  2 000240   000100 100500                    MLR     fill='000'O
         2 000241   200015 000001                    ADSC9   FCN_LCL,,AUTO            cn=0,n=1
         2 000242   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1

      387     8731    4                       END;

      388     8732                         %UNLOCK (G#=F_DCBLOCK);

   8733  2 000243   000001 630400 3                  EPPR0   1
         2 000244   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000245   000000 701000 xent               TSX1    HFC$UNLOCK
         2 000246   000000 011000                    NOP     0
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:91   

      389     8735    3                 END;

      390     8736    2              CALL  RCE4;

   8736  2 000247   002244 701000 2                  TSX1    RCE4
         2 000250   000000 011000                    NOP     0
         2 000251   001533 710000 2                  TRA     s:9117

      391     8737        /*                                                                    */
      392     8738    2            CASE (%SS_QMF);                /* MF LIMIT                           */

      393     8739    2              IF P$->B$U.MF = 0 THEN CALL SSS$RET; /* I/O IS DONE, RETURN        */

   8739  2 000252   200007 471500                    LDP1    P$,,AUTO
         2 000253   100006 236100                    LDQ     6,,PR1
         2 000254   777000 316003                    CANQ    -512,DU
         2 000255   000261 601000 2                  TNZ     s:8740

   8739  2 000256   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000257   000000 701000 xent               TSX1    SSS$RET
         2 000260   000000 011000                    NOP     0

      394     8740    2              STATE=%SS_SIOMF;             /* MF STATE                           */

   8740  2 000261   000020 235007                    LDA     16,DL
         2 000262   200022 755100                    STA     STATE,,AUTO

      395     8741    2              CALL  RCE4;

   8741  2 000263   002244 701000 2                  TSX1    RCE4
         2 000264   000000 011000                    NOP     0
         2 000265   001533 710000 2                  TRA     s:9117

      396     8742    2            CASE (%SS_CW);                 /* COMMUNICATIONS WAIT                */

      397     8743    2              P1$ = ADDR(FCN)->LDCT$;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:92   

   8743  2 000266   200005 471500                    LDP1    @FCN,,AUTO
         2 000267   100000 236100                    LDQ     0,,PR1
         2 000270   200011 756100                    STQ     P1$,,AUTO

      398     8744    2              STATE=%SS_SCW;

   8744  2 000271   000027 235007                    LDA     23,DL
         2 000272   200022 755100                    STA     STATE,,AUTO

      399     8745    2              GOTO SET_CIO;                /* Set Comm flag                      */

   8745  2 000273   000425 710000 2                  TRA     SET_CIO

      400     8746        /*                                                                    */
      401     8747    2            CASE (%SS_CRD);                /* COMMUNICATIONS READ                */

      402     8748    2              CALL INTCOMP;                /* COMPUTE INTERACTION TIME           */

   8748  2 000274   002154 701000 2                  TSX1    INTCOMP
         2 000275   000000 011000                    NOP     0

      403     8749    2              P1$ = ADDR(FCN)->LDCT$;

   8749  2 000276   200005 470500                    LDP0    @FCN,,AUTO
         2 000277   000000 236100                    LDQ     0,,PR0
         2 000300   200011 756100                    STQ     P1$,,AUTO

      404     8750    2              IF P$->B$U.FLG.BLK

   8750  2 000301   200007 471500                    LDP1    P$,,AUTO
         2 000302   100000 236100                    LDQ     0,,PR1
         2 000303   000100 316003                    CANQ    64,DU
         2 000304   000320 600000 2                  TZE     s:8758

      405     8751    3              THEN DO;

PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:93   
      406     8752                         %UNLOCKU (G# = "P1$->NK$LDCT.LOCK");

   8753  2 000305   200011 473500                    LDP3    P1$,,AUTO
         2 000306   000000 236003                    LDQ     0,DU
         2 000307   300021 552140                    STBQ    17,'40'O,PR3

   8754  2 000310   200011 236100                    LDQ     P1$,,AUTO
         2 000311   000020 036003                    ADLQ    16,DU
         2 000312   200042 756100                    STQ     TT+2,,AUTO
         2 000313   200042 630500                    EPPR0   TT+2,,AUTO
         2 000314   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000315   000000 701000 xent               TSX1    HFC$UNLOCK
         2 000316   000000 011000                    NOP     0

      407     8756    3                    GOTO STQA1;            /* UNBLOCK BEFORE BLOCK               */

   8756  2 000317   000757 710000 2                  TRA     STQA1

      408     8757    3                 END;
      409     8758    2              IF P$->B$U.ASYNCH & %(~U_RESET) THEN

   8758  2 000320   100001 236100                    LDQ     1,,PR1
         2 000321   000111 376000 0                  ANQ     PERM_+72
         2 000322   000340 600000 2                  TZE     s:8766

      410     8759    3                 DO;

      411     8760                         %UNLOCKU (G# = "P1$->NK$LDCT.LOCK");

   8761  2 000323   200011 473500                    LDP3    P1$,,AUTO
         2 000324   000000 236003                    LDQ     0,DU
         2 000325   300021 552140                    STBQ    17,'40'O,PR3

   8762  2 000326   200011 236100                    LDQ     P1$,,AUTO
         2 000327   000020 036003                    ADLQ    16,DU
         2 000330   200042 756100                    STQ     TT+2,,AUTO
         2 000331   200042 630500                    EPPR0   TT+2,,AUTO
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:94   
         2 000332   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000333   000000 701000 xent               TSX1    HFC$UNLOCK
         2 000334   000000 011000                    NOP     0

      412     8764    3                    CALL SSS$ALTRET;

   8764  2 000335   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000336   000000 701000 xent               TSX1    SSS$ALTRET
         2 000337   000000 011000                    NOP     0

      413     8765    3                 END;

      414     8766    2              HDFLG='1'B;                  /*QUEUE ONTO HEAD OF STATE Q          */

   8766  2 000340   400000 236003                    LDQ     -131072,DU
         2 000341   200016 756100                    STQ     HDFLG,,AUTO

      415     8767    2              STATE=%SS_STI;               /*COMM INPUTTING STATE                */

   8767  2 000342   000025 235007                    LDA     21,DL
         2 000343   200022 755100                    STA     STATE,,AUTO

      416     8768    2              CALL SSQ$NUQUAN;

   8768  2 000344   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000345   000000 701000 xent               TSX1    SSQ$NUQUAN
         2 000346   000000 011000                    NOP     0

      417     8769    2              GOTO SET_CIO;

   8769  2 000347   000425 710000 2                  TRA     SET_CIO

      418     8770                                                /**/
      419     8771    2            CASE (%SS_CIC,SS_DISCX);

      420     8772    2              INC=3;                       /* PRIORITY BOOST INDEX               */

PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:95   
   8772  2 000350   000003 235007                    LDA     3,DL
         2 000351   200025 755100                    STA     INC,,AUTO

      421     8773    2   STIRC:     P$->B$U.FLG.INTUSR='1'B;     /* MARK USER INTERACTIVE              */

   8773  2 000352   200007 471500       STIRC        LDP1    P$,,AUTO
         2 000353   200000 236003                    LDQ     65536,DU
         2 000354   100000 256100                    ORSQ    0,,PR1

      422     8774    2              P$->B$U.FLG.SCIO = '0'B;

   8774  2 000355   000002 236000 3                  LDQ     2
         2 000356   100000 356100                    ANSQ    0,,PR1

      423     8775    2              CALL SSS$EOMTIME(P$->B$U.MISC); /* EOM TIME FOR RESPONSE TIME      */

   8775  2 000357   200007 236100                    LDQ     P$,,AUTO
         2 000360   000017 036003                    ADLQ    15,DU
         2 000361   200042 756100                    STQ     TT+2,,AUTO
         2 000362   200042 630500                    EPPR0   TT+2,,AUTO
         2 000363   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000364   000000 701000 xent               TSX1    SSS$EOMTIME
         2 000365   000000 011000                    NOP     0

      424     8776    2              CALL CHSE;

   8776  2 000366   002274 701000 2                  TSX1    CHSE
         2 000367   000000 011000                    NOP     0
         2 000370   001533 710000 2                  TRA     s:9117

      425     8777                                                /**/
      426     8778    2            CASE (SS_CICCU);               /* COMM INPUT COMPLETE ON CUR USER*/

      427     8779                                                /* NOTE UNBLK BEFORE BLK              */
      428     8780    2              P$->B$U.FLG.BLK='1'B;

   8780  2 000371   200007 471500                    LDP1    P$,,AUTO
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:96   
         2 000372   000100 236003                    LDQ     64,DU
         2 000373   100000 256100                    ORSQ    0,,PR1
         2 000374   001533 710000 2                  TRA     s:9117

      429     8781                                                /* NO STATE CHANGE-- RETURN.          */
      430     8782                                                /**/
      431     8783    2            CASE(%SS_CBL);                 /* COMM OUTPUT BLOCKED                */

      432     8784    2              P1$ = ADDR(FCN)->LDCT$;

   8784  2 000375   200005 471500                    LDP1    @FCN,,AUTO
         2 000376   100000 236100                    LDQ     0,,PR1
         2 000377   200011 756100                    STQ     P1$,,AUTO

      433     8785    2              IF P$->B$U.FLG.COBLK THEN

   8785  2 000400   200007 470500                    LDP0    P$,,AUTO
         2 000401   000000 236100                    LDQ     0,,PR0
         2 000402   010000 316003                    CANQ    4096,DU
         2 000403   000423 600000 2                  TZE     s:8794

      434     8786    3                 DO;

      435     8787    3                    P$->B$U.FLG.COBLK='0'B; /* RESET BLK BEFORE UNBLK            */

   8787  2 000404   000003 236000 3                  LDQ     3
         2 000405   000000 356100                    ANSQ    0,,PR0

      436     8788                         %UNLOCKU (G# = "P1$->NK$LDCT.LOCK");

   8789  2 000406   200011 473500                    LDP3    P1$,,AUTO
         2 000407   000000 236003                    LDQ     0,DU
         2 000410   300021 552140                    STBQ    17,'40'O,PR3

   8790  2 000411   200011 236100                    LDQ     P1$,,AUTO
         2 000412   000020 036003                    ADLQ    16,DU
         2 000413   200042 756100                    STQ     TT+2,,AUTO
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:97   
         2 000414   200042 630500                    EPPR0   TT+2,,AUTO
         2 000415   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000416   000000 701000 xent               TSX1    HFC$UNLOCK
         2 000417   000000 011000                    NOP     0

      437     8792    3                    CALL SSS$RET;          /* AND RETURN TO CALLER               */

   8792  2 000420   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000421   000000 701000 xent               TSX1    SSS$RET
         2 000422   000000 011000                    NOP     0

      438     8793    3                 END;

      439     8794    2              STATE=%SS_STOB;              /* COMM OUTPUTE BLOCKED STATE         */

   8794  2 000423   000015 235007                    LDA     13,DL
         2 000424   200022 755100                    STA     STATE,,AUTO

      440     8795    2   SET_CIO:   P$->B$U.FLG.SCIO = '1'B;     /* Set Comm flag                      */

   8795  2 000425   200007 470500       SET_CIO      LDP0    P$,,AUTO
         2 000426   002000 236007                    LDQ     1024,DL
         2 000427   000000 256100                    ORSQ    0,,PR0

      441     8796    2              P$->B$U.MISC = ADDR(P1$)->TIME; /* Save what should be LDCT$       */

   8796  2 000430   200011 235100                    LDA     P1$,,AUTO
         2 000431   000017 755100                    STA     15,,PR0

      442     8797    2              P1$->NK$LDCT.TCTLCNT = 0;

   8797  2 000432   200011 471500                    LDP1    P1$,,AUTO
         2 000433   000000 236003                    LDQ     0,DU
         2 000434   100026 552110                    STBQ    22,'10'O,PR1

      443     8798                   %UNLOCKU (G# = "P1$->NK$LDCT.LOCK");

PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:98   
   8799  2 000435   100021 552140                    STBQ    17,'40'O,PR1

   8800  2 000436   200011 236100                    LDQ     P1$,,AUTO
         2 000437   000020 036003                    ADLQ    16,DU
         2 000440   200042 756100                    STQ     TT+2,,AUTO
         2 000441   200042 630500                    EPPR0   TT+2,,AUTO
         2 000442   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000443   000000 701000 xent               TSX1    HFC$UNLOCK
         2 000444   000000 011000                    NOP     0

      444     8802    2              CALL  RCE4;

   8802  2 000445   002244 701000 2                  TSX1    RCE4
         2 000446   000000 011000                    NOP     0
         2 000447   001533 710000 2                  TRA     s:9117

      445     8803                                                /**/
      446     8804    2            CASE (%SS_CUB);                /* COMM OUTPUT CONTINUE               */

      447     8805    2              INC=4;                       /* PRIORITY BOOST INDEX.              */

   8805  2 000450   000004 235007                    LDA     4,DL
         2 000451   200025 755100                    STA     INC,,AUTO

      448     8806    2              P$->B$U.FLG.SCIO = '0'B;

   8806  2 000452   200007 471500                    LDP1    P$,,AUTO
         2 000453   000002 236000 3                  LDQ     2
         2 000454   100000 356100                    ANSQ    0,,PR1

      449     8807    2              CALL  CHSE;

   8807  2 000455   002274 701000 2                  TSX1    CHSE
         2 000456   000000 011000                    NOP     0
         2 000457   001533 710000 2                  TRA     s:9117

      450     8808                                                /**/
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:99   
      451     8809    2            CASE (SS_CUBEX);               /* COMM OUTPUT CONT WITHOUT BLOCK     */

      452     8810    2              P$->B$U.FLG.COBLK = '1'B;    /* NOTE UNBLK BEFORE BLK              */

   8810  2 000460   200007 471500                    LDP1    P$,,AUTO
         2 000461   010000 236003                    LDQ     4096,DU
         2 000462   100000 256100                    ORSQ    0,,PR1
         2 000463   001533 710000 2                  TRA     s:9117

      453     8811                                                /**/
      454     8812    2            CASE (%SS_FC);                 /* FEP crashed on this user           */

      455     8813                   %LOCK (G# = S_ASFGATE);

   8814  2 000464   000004 630400 3                  EPPR0   4
         2 000465   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000466   000000 701000 xent               TSX1    HFC$LOCK
         2 000467   000000 011000                    NOP     0

      456     8816    2              P$->B$U.ASYNCH = P$->B$U.ASYNCH | %U_FEPCRSH;

   8816  2 000470   200007 470500                    LDP0    P$,,AUTO
         2 000471   000001 236100                    LDQ     1,,PR0
         2 000472   000112 276000 0                  ORQ     PERM_+73
         2 000473   000001 756100                    STQ     1,,PR0

      457     8817                   %UNLOCK (G# = S_ASFGATE);

   8818  2 000474   000004 630400 3                  EPPR0   4
         2 000475   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000476   000000 701000 xent               TSX1    HFC$UNLOCK
         2 000477   000000 011000                    NOP     0

      458     8820    2              INC = 3;

   8820  2 000500   000003 235007                    LDA     3,DL
         2 000501   200025 755100                    STA     INC,,AUTO
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:100  

      459     8821    2              P$->B$U.FLG.SCIO = '0'B;

   8821  2 000502   200007 470500                    LDP0    P$,,AUTO
         2 000503   000002 236000 3                  LDQ     2
         2 000504   000000 356100                    ANSQ    0,,PR0

      460     8822    2              CALL CHSE;                   /* Make him executable                */

   8822  2 000505   002274 701000 2                  TSX1    CHSE
         2 000506   000000 011000                    NOP     0
         2 000507   001533 710000 2                  TRA     s:9117

      461     8823        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:101  
      462     8824    2            CASE (%SS_CBK,%SS_CEC,SS_ERRBLK,

      463     8825    2                SS_ABRTBLK,SS_CANBLK,SS_DISCBLK);
      464     8826    2              IF UST ~= %SS_SDSC THEN      /* NOP IF DISCONNECT PENDING          */

   8826  2 000510   000022 115007                    CMPA    18,DL
         2 000511   001533 600000 2                  TZE     s:9117

      465     8827    3                 DO;

      466     8828    3                    STFLG=0;

   8828  2 000512   200026 450100                    STZ     STFLG,,AUTO

      467     8829    3                    GOTO ST1;

   8829  2 000513   000516 710000 2                  TRA     ST1

      468     8830    3                 END;
      469     8831                                                /**/
      470     8832    2            CASE (SS_CBKEX, SS_CECEX,%SS_ERR,

      471     8833    2                   %SS_ABRT,%SS_CAN,%SS_DISC);
      472     8834    2              STFLG=1;

   8834  2 000514   000001 235007                    LDA     1,DL
         2 000515   200026 755100                    STA     STFLG,,AUTO

      473     8835                                                /**/
      474     8836    2   ST1:       EFLG = EVENT / 2 - %SS_CBK/2; /* EVENT # RELATIVE TO BREAK EVENT   */

   8836  2 000516   000001 772000       ST1          QRL     1
         2 000517   000005 136007                    SBLQ    5,DL
         2 000520   200027 756100                    STQ     EFLG,,AUTO

      475     8837    2              IF EFLG = 0 THEN

PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:102  
   8837  2 000521   000535 601000 2                  TNZ     s:8842

      476     8838    2                 IF ADDR(FCN) ~= ADDR(NIL) THEN

   8838  2 000522   200005 236100                    LDQ     @FCN,,AUTO
         2 000523   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000524   000532 600000 2                  TZE     s:8841

      477     8839    2                    P$->B$U.BRKCNT=ADDR(FCN)->STIME;

   8839  2 000525   200007 471500                    LDP1    P$,,AUTO
         2 000526   200005 473500                    LDP3    @FCN,,AUTO
         2 000527   300000 236100                    LDQ     0,,PR3
         2 000530   100011 752101                    STCQ    9,'01'O,PR1
         2 000531   000535 710000 2                  TRA     s:8842

      478     8840    2                 ELSE
      479     8841    2                    P$->B$U.BRKCNT=1;

   8841  2 000532   200007 471500                    LDP1    P$,,AUTO
         2 000533   000001 236007                    LDQ     1,DL
         2 000534   100011 752101                    STCQ    9,'01'O,PR1

      480     8842    2              IF UST = %SS_SQR THEN

   8842  2 000535   200020 235100                    LDA     UST,,AUTO
         2 000536   000024 115007                    CMPA    20,DL
         2 000537   000560 601000 2                  TNZ     s:8854

      481     8843        /*   If resource is ENQ and B$U.MISC = -2 don't release him, otherwise
      482     8844             release all others.                                              */
      483     8845    2                 IF P$->B$U.PRIO = (%SS_NQW-%SS_CBF)/2 AND P$->B$U.MISC

   8845  2 000540   200007 470500                    LDP0    P$,,AUTO
         2 000541   000011 236100                    LDQ     9,,PR0
         2 000542   000077 376003                    ANQ     63,DU
         2 000543   000002 116003                    CMPQ    2,DU
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:103  
         2 000544   000550 601000 2                  TNZ     s:8850
         2 000545   000017 236100                    LDQ     15,,PR0
         2 000546   000111 116000 0                  CMPQ    PERM_+72
         2 000547   000560 600000 2                  TZE     s:8854

      484     8846    2                   = BITBIN('777777777776'O) THEN
      485     8847    2                    ;
      486     8848    2                 ELSE
      487     8849    3                    DO;

      488     8850    3                       RES=P$->B$U.PRIO;

   8850  2 000550   000011 236100                    LDQ     9,,PR0
         2 000551   000022 772000                    QRL     18
         2 000552   000077 376007                    ANQ     63,DL
         2 000553   200032 756100                    STQ     RES,,AUTO

      489     8851    3                       CALL UQR;

   8851  2 000554   002022 701000 2                  TSX1    UQR
         2 000555   000000 011000                    NOP     0

      490     8852    3                       STFLG=1;

   8852  2 000556   000001 235007                    LDA     1,DL
         2 000557   200026 755100                    STA     STFLG,,AUTO

      491     8853    3                    END;

      492     8854    2              IF P$->B$U.FLG.NOQUAN THEN   /* don't pincr if he already */

   8854  2 000560   200007 470500                    LDP0    P$,,AUTO
         2 000561   000000 236100                    LDQ     0,,PR0
         2 000562   001000 316007                    CANQ    512,DL
         2 000563   000566 600000 2                  TZE     s:8857

      493     8855    2                 INC=0;                    /* got his "free" quantum */
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:104  

   8855  2 000564   200025 450100                    STZ     INC,,AUTO
         2 000565   000570 710000 2                  TRA     s:8859

      494     8856    2              ELSE
      495     8857    2                 INC=3;

   8857  2 000566   000003 235007                    LDA     3,DL
         2 000567   200025 755100                    STA     INC,,AUTO

      496     8858                   %LOCK (G#=S_ASFGATE);

   8859  2 000570   000004 630400 3                  EPPR0   4
         2 000571   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000572   000000 701000 xent               TSX1    HFC$LOCK
         2 000573   000000 011000                    NOP     0

      497     8861    2              P1$=ADDR(P$->B$U.ASYNCH);

   8861  2 000574   200007 236100                    LDQ     P$,,AUTO
         2 000575   000001 036003                    ADLQ    1,DU
         2 000576   200011 756100                    STQ     P1$,,AUTO

      498     8862    2              P1$->BITS(EFLG)='1'B;        /* SET ASYNCH FLAG BIT                */

   8862  2 000577   200011 470500                    LDP0    P1$,,AUTO
         2 000600   200027 235100                    LDA     EFLG,,AUTO
         2 000601   003105 060400                    CSL     bolr='003'O
         2 000602   000030 000001 xsym               BDSC    B_VECTNIL+24             by=0,bit=0,n=1
         2 000603   000000 000001                    BDSC    0,A,PR0                  by=0,bit=0,n=1

      499     8863                       /* THE CURRENT USER IS QUEUED BEHIND USER SPECIFIED BY FCN     */
      500     8864                   %UNLOCK (G#=S_ASFGATE);

   8865  2 000604   000004 630400 3                  EPPR0   4
         2 000605   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000606   000000 701000 xent               TSX1    HFC$UNLOCK
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:105  
         2 000607   000000 011000                    NOP     0

      501     8867    2              IF STFLG=1

   8867  2 000610   200026 235100                    LDA     STFLG,,AUTO
         2 000611   000001 115007                    CMPA    1,DL
         2 000612   001533 601000 2                  TNZ     s:9117

      502     8868    3              THEN DO;

      503     8869    3                    P$->B$U.FLG.SCIO = '0'B;

   8869  2 000613   200007 470500                    LDP0    P$,,AUTO
         2 000614   000002 236000 3                  LDQ     2
         2 000615   000000 356100                    ANSQ    0,,PR0

      504     8870    3                    CALL CHSE;             /* Make him executable                */

   8870  2 000616   002274 701000 2                  TSX1    CHSE
         2 000617   000000 011000                    NOP     0

      505     8871    3                 END;

   8871  2 000620   001533 710000 2                  TRA     s:9117

      506     8872    2            CASE(%SS_FPLDTRC,%SS_FPEVNT);

      507     8873    2              IF UST=%SS_STOB OR

   8873  2 000621   000015 115007                    CMPA    13,DL
         2 000622   000633 600000 2                  TZE     s:8878
         2 000623   000025 115007                    CMPA    21,DL
         2 000624   000633 600000 2                  TZE     s:8878
         2 000625   000017 115007                    CMPA    15,DL
         2 000626   000633 600000 2                  TZE     s:8878
         2 000627   000021 115007                    CMPA    17,DL
         2 000630   000633 600000 2                  TZE     s:8878
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:106  
         2 000631   000014 115007                    CMPA    12,DL
         2 000632   000642 603000 2                  TRC     s:8883

      508     8874    2                UST=%SS_STI  OR
      509     8875    2                UST=%SS_SIOWC OR
      510     8876    2                UST=%SS_SW OR
      511     8877    3                UST<=%SS_SC11 THEN DO;

      512     8878    3                    P$->B$U.FLG.SCIO='0'B;

   8878  2 000633   200007 471500                    LDP1    P$,,AUTO
         2 000634   000002 236000 3                  LDQ     2
         2 000635   100000 356100                    ANSQ    0,,PR1

      513     8879    3                    INC=3;

   8879  2 000636   000003 235007                    LDA     3,DL
         2 000637   200025 755100                    STA     INC,,AUTO

      514     8880    3                    CALL CHSE;

   8880  2 000640   002274 701000 2                  TSX1    CHSE
         2 000641   000000 011000                    NOP     0

      515     8881    3                 END;

      516     8882                   %UNLOCK (G#=S_SCHDGATE);

   8883  2 000642   000000 630400 3                  EPPR0   0
         2 000643   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000644   000000 701000 xent               TSX1    HFC$UNLOCK
         2 000645   000000 011000                    NOP     0

      517     8885                   %LOCK (G#=S_ASFGATE);

   8886  2 000646   000004 630400 3                  EPPR0   4
         2 000647   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:107  
         2 000650   000000 701000 xent               TSX1    HFC$LOCK
         2 000651   000000 011000                    NOP     0

      518     8888    2              P$->B$U.ASYNCH=P$->B$U.ASYNCH|%U_FPLDTRC;

   8888  2 000652   200007 470500                    LDP0    P$,,AUTO
         2 000653   000001 236100                    LDQ     1,,PR0
         2 000654   000113 276000 0                  ORQ     PERM_+74
         2 000655   000001 756100                    STQ     1,,PR0

      519     8889                   %UNLOCK (G#=S_ASFGATE);

   8890  2 000656   000004 630400 3                  EPPR0   4
         2 000657   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000660   000000 701000 xent               TSX1    HFC$UNLOCK
         2 000661   000000 011000                    NOP     0

      520     8892    2              IF EVENT = %SS_FPLDTRC THEN

   8892  2 000662   200014 235100                    LDA     EVENT,,AUTO
         2 000663   000051 115007                    CMPA    41,DL
         2 000664   000706 601000 2                  TNZ     s:8894

      521     8893    2                 CALL SSV$EVENT(USR,7,0,FCN,0,,ENTADDR(KIF$LDTRC));

   8893  2 000665   000000 636000 xent               EAQ     KIF$LDTRC
         2 000666   200042 756100                    STQ     TT+2,,AUTO
         2 000667   200042 630500                    EPPR0   TT+2,,AUTO
         2 000670   200051 450500                    STP0    TT+9,,AUTO
         2 000671   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000672   200050 756100                    STQ     TT+8,,AUTO
         2 000673   000005 236000 3                  LDQ     5
         2 000674   200005 235100                    LDA     @FCN,,AUTO
         2 000675   200046 757100                    STAQ    TT+6,,AUTO
         2 000676   000006 237000 3                  LDAQ    6
         2 000677   200044 757100                    STAQ    TT+4,,AUTO
         2 000700   200004 236100                    LDQ     @USR,,AUTO
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:108  
         2 000701   200043 756100                    STQ     TT+3,,AUTO
         2 000702   200043 630500                    EPPR0   TT+3,,AUTO
         2 000703   000025 631400 xsym               EPPR1   B_VECTNIL+21
         2 000704   000000 701000 xent               TSX1    SSV$EVENT
         2 000705   000000 011000                    NOP     0

      522     8894    2              RETURN;

   8894  2 000706   000000 702200 xent               TSX2  ! X66_ARET

      523     8895        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:109  
      524     8896    2            CASE (%SS_WU);                 /* WAKE UP SLEEPING USER              */

      525     8897    2              INC=1;                       /* PRIORITY BOOST INDEX               */

   8897  2 000707   000001 235007                    LDA     1,DL
         2 000710   200025 755100                    STA     INC,,AUTO

      526     8898    2              CALL  CHSE;

   8898  2 000711   002274 701000 2                  TSX1    CHSE
         2 000712   000000 011000                    NOP     0
         2 000713   001533 710000 2                  TRA     s:9117

      527     8899                                                /**/
      528     8900    2            CASE (SS_WUEX);                /* IGNORE IF STATE NOT SW */

      529     8901    2            CASE(%SS_SL,%SS_SLPMME);       /* BEGIN WAIT */

      530     8902    2              STATE=%SS_SW;                /* WAIT STATE */

   8902  2 000714   000021 235007                    LDA     17,DL
         2 000715   200022 755100                    STA     STATE,,AUTO

      531     8903                                                /* note: change made per star
      532     8904                                                     32651 makes UMT (PMME)
      533     8905                                                     compute wakeup time.
      534     8906                                                     SL events must be
      535     8907                                                     multiplied out here;
      536     8908                                                     SLPMME is multiplied out
      537     8909                                                     in UMT */
      538     8910    2              IF EVENT = %SS_SL THEN

   8910  2 000716   000031 116007                    CMPQ    25,DL
         2 000717   000726 601000 2                  TNZ     s:8913

      539     8911    2                 S$CU$->B$U.MISC=EV$->TIME*100; /* Sleep time in .01 sec*/

PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:110  
   8911  2 000720   200012 471500                    LDP1    EV$,,AUTO
         2 000721   000000 473400 xsym               LDP3    S$CU$
         2 000722   100000 236100                    LDQ     0,,PR1
         2 000723   000144 402007                    MPY     100,DL
         2 000724   300017 756100                    STQ     15,,PR3
         2 000725   000732 710000 2                  TRA     s:8915

      540     8912    2              ELSE
      541     8913    2                 S$CU$->B$U.MISC=EV$->TIME; /* or precomputed in UMT */

   8913  2 000726   200012 471500                    LDP1    EV$,,AUTO
         2 000727   000000 473400 xsym               LDP3    S$CU$
         2 000730   100000 235100                    LDA     0,,PR1
         2 000731   300017 755100                    STA     15,,PR3

      542     8914
      543     8915    2              CALL SSS$WUTIME(S$CU$->B$U.MISC); /*SET MISC TO WAKE UP TIME*/

   8915  2 000732   000000 236000 xsym               LDQ     S$CU$
         2 000733   000017 036003                    ADLQ    15,DU
         2 000734   200042 756100                    STQ     TT+2,,AUTO
         2 000735   200042 630500                    EPPR0   TT+2,,AUTO
         2 000736   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000737   000000 701000 xent               TSX1    SSS$WUTIME
         2 000740   000000 011000                    NOP     0

      544     8916    2              CALL CHSE1;                  /* SORT USER INTO SLEEP QUEUE */

   8916  2 000741   002311 701000 2                  TSX1    CHSE1
         2 000742   000000 011000                    NOP     0

      545     8917    2              IF EVENT = %SS_SLPMME THEN

   8917  2 000743   200014 235100                    LDA     EVENT,,AUTO
         2 000744   000032 115007                    CMPA    26,DL
         2 000745   001533 601000 2                  TNZ     s:9117

PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:111  
      546     8918                      %UNLOCK    (G#=S_UDLGATE);

   8919  2 000746   000010 630400 3                  EPPR0   8
         2 000747   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000750   000000 701000 xent               TSX1    HFC$UNLOCK
         2 000751   000000 011000                    NOP     0
         2 000752   001533 710000 2                  TRA     s:9117

      547     8921                                                /**/
      548     8922    2            CASE (%SS_QA);                 /* QUEUE FOR ACCESS                   */

      549     8923    2              IF P$->B$U.FLG.BLK THEN      /* TEST UNBLK BEFORE BLK              */

   8923  2 000753   200007 471500                    LDP1    P$,,AUTO
         2 000754   100000 236100                    LDQ     0,,PR1
         2 000755   000100 316003                    CANQ    64,DU
         2 000756   000766 600000 2                  TZE     s:8930

      550     8924    3                 DO;

      551     8925    3   STQA1:           P$->B$U.FLG.BLK='0'B;  /*RESET BLOCK BEFORE UNBLOCK          */

   8925  2 000757   200007 470500       STQA1        LDP0    P$,,AUTO
         2 000760   000011 236000 3                  LDQ     9
         2 000761   000000 356100                    ANSQ    0,,PR0

      552     8926    3                    CALL SSS$RET;          /* AND RETURN TO CALLER               */

   8926  2 000762   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000763   000000 701000 xent               TSX1    SSS$RET
         2 000764   000000 011000                    NOP     0

      553     8927    3                 END;

   8927  2 000765   001533 710000 2                  TRA     s:9117

      554     8928    2              ELSE
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:112  
      555     8929    3                 DO;                       /* IF NOT, QUEUE HIM.                 */

      556     8930    3                    STATE=%SS_SQA;         /* QUEUED FOR ACCES STATE             */

   8930  2 000766   000023 235007                    LDA     19,DL
         2 000767   200022 755100                    STA     STATE,,AUTO

      557     8931    3                    CALL RCE4;

   8931  2 000770   002244 701000 2                  TSX1    RCE4
         2 000771   000000 011000                    NOP     0

      558     8932    3                 END;

   8932  2 000772   001533 710000 2                  TRA     s:9117

      559     8933                                                /**/
      560     8934    2            CASE (%SS_UQA);                /* UNQUEUE FOR ACCESS                 */

      561     8935    2              IF UST=%SS_SQA THEN          /* IF   BLOCKED- RUN HIM.             */

   8935  2 000773   000023 115007                    CMPA    19,DL
         2 000774   001002 601000 2                  TNZ     s:8941

      562     8936    3                 DO;

      563     8937    3                    INC=1;                 /* PRIORITY BOOST INDEX               */

   8937  2 000775   000001 235007                    LDA     1,DL
         2 000776   200025 755100                    STA     INC,,AUTO

      564     8938    3                    CALL CHSE;

   8938  2 000777   002274 701000 2                  TSX1    CHSE
         2 001000   000000 011000                    NOP     0

      565     8939    3                 END;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:113  

   8939  2 001001   001533 710000 2                  TRA     s:9117

      566     8940    2              ELSE
      567     8941    2                 P$->B$U.FLG.BLK='1'B;     /*SET BLOCK BEFORE UNBLOCK            */

   8941  2 001002   200007 471500                    LDP1    P$,,AUTO
         2 001003   000100 236003                    LDQ     64,DU
         2 001004   100000 256100                    ORSQ    0,,PR1
         2 001005   001533 710000 2                  TRA     s:9117

      568     8942                                                /**/
      569     8943    2            CASE (%SS_QC);                 /* QUEUE FOR I/O CACHE                */

      570     8944    2              FLK=BITBIN(FCN);

   8944  2 001006   200005 471500                    LDP1    @FCN,,AUTO
         2 001007   000100 101500                    MRL     fill='000'O
         2 001010   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 001011   200042 000004                    ADSC9   TT+2,,AUTO               cn=0,n=4
         2 001012   200042 236100                    LDQ     TT+2,,AUTO
         2 001013   200033 756100                    STQ     FLK,,AUTO

      571     8945    2              IF FLK ~= 0 THEN

   8945  2 001014   001045 600000 2                  TZE     s:8952

      572     8946    3                 DO;

      573     8947    4                    DO WHILE (B$USRT$->B$USER.SQ(FLK) ~= 0);

   8947  2 001015   200033 235100                    LDA     FLK,,AUTO
         2 001016   000004 735000                    ALS     4
         2 001017   000000 473400 xsym               LDP3    B$USRT$
         2 001020   300010 236105                    LDQ     8,AL,PR3
         2 001021   777000 316007                    CANQ    -512,DL
         2 001022   001037 600000 2                  TZE     s:8950
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:114  

      574     8948    4                       FLK = B$USRT$->B$USER.SQ(FLK);

   8948  2 001023   200033 235100                    LDA     FLK,,AUTO
         2 001024   000004 735000                    ALS     4
         2 001025   000000 470400 xsym               LDP0    B$USRT$
         2 001026   000010 236105                    LDQ     8,AL,PR0
         2 001027   000011 772000                    QRL     9
         2 001030   000777 376007                    ANQ     511,DL
         2 001031   200033 756100                    STQ     FLK,,AUTO

      575     8949    4                    END;

   8949  2 001032   200033 235100                    LDA     FLK,,AUTO
         2 001033   000004 735000                    ALS     4
         2 001034   000010 236105                    LDQ     8,AL,PR0
         2 001035   777000 316007                    CANQ    -512,DL
         2 001036   001023 601000 2                  TNZ     s:8948

      576     8950    3                    B$USRT$->B$USER.SQ(FLK) = USER;

   8950  2 001037   000000 470400 xsym               LDP0    B$USRT$
         2 001040   200013 236100                    LDQ     USER,,AUTO
         2 001041   000011 736000                    QLS     9
         2 001042   000010 676105                    ERQ     8,AL,PR0
         2 001043   777000 376007                    ANQ     -512,DL
         2 001044   000010 656105                    ERSQ    8,AL,PR0

      577     8951    3                 END;

      578     8952    2              P$->B$U.SQ = 0;

   8952  2 001045   200007 470500                    LDP0    P$,,AUTO
         2 001046   000000 236003                    LDQ     0,DU
         2 001047   000010 552110                    STBQ    8,'10'O,PR0

      579     8953                   %UNLOCKU (G# = "EV$ -> TIME");
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:115  

   8954  2 001050   200012 471500                    LDP1    EV$,,AUTO
         2 001051   100001 552140                    STBQ    1,'40'O,PR1

   8955  2 001052   200012 630500                    EPPR0   EV$,,AUTO
         2 001053   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001054   000000 701000 xent               TSX1    HFC$UNLOCK
         2 001055   000000 011000                    NOP     0

      580     8957    2              STATE = %SS_SIOCACHE;

   8957  2 001056   000026 235007                    LDA     22,DL
         2 001057   200022 755100                    STA     STATE,,AUTO

      581     8958    2              CALL RCE4;

   8958  2 001060   002244 701000 2                  TSX1    RCE4
         2 001061   000000 011000                    NOP     0
         2 001062   001533 710000 2                  TRA     s:9117

      582     8959                                                /**/
      583     8960    2            CASE (%SS_UQC);                /* UNQUEUE I/O CACHE SUBQUEUE         */

      584     8961    2              INC = 1;                     /* PRIORITY BOOST INCREMENT           */

   8961  2 001063   000001 235007                    LDA     1,DL
         2 001064   200025 755100                    STA     INC,,AUTO

      585     8962    3              DO WHILE (USER ~= 0);

   8962  2 001065   200013 235100                    LDA     USER,,AUTO
         2 001066   001533 600000 2                  TZE     s:9117

      586     8963    3                 CALL CHSE;

   8963  2 001067   002274 701000 2                  TSX1    CHSE
         2 001070   000000 011000                    NOP     0
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:116  

      587     8964    3                 USER = P$->B$U.SQ;

   8964  2 001071   200007 470500                    LDP0    P$,,AUTO
         2 001072   000010 236100                    LDQ     8,,PR0
         2 001073   000011 772000                    QRL     9
         2 001074   000777 376007                    ANQ     511,DL
         2 001075   200013 756100                    STQ     USER,,AUTO

      588     8965    3                 P$ = ADDR(B$USRT$->B$USER(USER));

   8965  2 001076   000026 736000                    QLS     22
         2 001077   000000 036000 xsym               ADLQ    B$USRT$
         2 001100   200007 756100                    STQ     P$,,AUTO

      589     8966    3              END;

   8966  2 001101   200013 235100                    LDA     USER,,AUTO
         2 001102   001067 601000 2                  TNZ     s:8963
         2 001103   001533 710000 2                  TRA     s:9117

      590     8967
      591     8968                                                /**/
      592     8969    2            CASE (%SS_QE);                 /* QUANTUM END                        */

      593     8970    2              INC=0;

   8970  2 001104   200025 450100                    STZ     INC,,AUTO

      594     8971    2              CALL  CHSE;                  /*COMPUTE. BOOST = 0                  */

   8971  2 001105   002274 701000 2                  TSX1    CHSE
         2 001106   000000 011000                    NOP     0
         2 001107   001533 710000 2                  TRA     s:9117

      595     8972                                                /**/
      596     8973        /*                                                                    */
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:117  
      597     8974        /*         IF QUEUED FOR MF: UNBLOCK IF MF < LIMIT                    */
      598     8975        /*         IF QUEUED FOR IO WAIT: UNBLOCK IF EVENT WAS IOCU           */
      599     8976        /*                                                                    */
      600     8977    2            CASE (%SS_IOCU);               /* I/O COMPLETE, UNBLOCK              */

      601     8978    2              IF (UST = %SS_SIOW) OR (UST = %SS_SIOWC)

   8978  2 001110   000016 115007                    CMPA    14,DL
         2 001111   001114 600000 2                  TZE     s:8980
         2 001112   000017 115007                    CMPA    15,DL
         2 001113   001144 601000 2                  TNZ     CHKMF

      602     8979    3              THEN DO;

      603     8980    3                    IF S_NSCPUA = 0

   8980  2 001114   000000 235000 xsym               LDA     S_NSCPUA
         2 001115   001123 601000 2                  TNZ     s:8986

      604     8981    4                    THEN DO INHIBIT;

      605     8982    4                          P$ -> B$U.MF = P$ -> B$U.MF - 1;

   8982  2 001116   200007 471700                    LDP1  ! P$,,AUTO
         2 001117   100006 236300                    LDQ   ! 6,,PR1
         2 001120   777000 036203                    ADLQ  ! -512,DU
         2 001121   100006 552340                    STBQ  ! 6,'40'O,PR1

      606     8983    4                       END;

   8983  2 001122   001137 710000 2                  TRA     s:8993

      607     8984    4                    ELSE DO;

      608     8985                               %LOCK (G# = NI_MFGATE);

   8986  2 001123   000012 630400 3                  EPPR0   10
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:118  
         2 001124   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001125   000000 701000 xent               TSX1    HFC$LOCK
         2 001126   000000 011000                    NOP     0

      609     8988    4                          P$ -> B$U.MF = P$ -> B$U.MF - 1;

   8988  2 001127   200007 470500                    LDP0    P$,,AUTO
         2 001130   000006 236100                    LDQ     6,,PR0
         2 001131   777000 036003                    ADLQ    -512,DU
         2 001132   000006 552140                    STBQ    6,'40'O,PR0

      610     8989                               %UNLOCK (G# = NI_MFGATE);

   8990  2 001133   000012 630400 3                  EPPR0   10
         2 001134   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001135   000000 701000 xent               TSX1    HFC$UNLOCK
         2 001136   000000 011000                    NOP     0

      611     8992    4                       END;

      612     8993    3                    INC = 2;

   8993  2 001137   000002 235007                    LDA     2,DL
         2 001140   200025 755100                    STA     INC,,AUTO

      613     8994    3                    CALL CHSE;

   8994  2 001141   002274 701000 2                  TSX1    CHSE
         2 001142   000000 011000                    NOP     0

      614     8995    3                 END;

   8995  2 001143   001533 710000 2                  TRA     s:9117

      615     8996    2              ELSE
      616     8997    2                 GOTO CHKMF;
      617     8998    2            CASE (%SS_IOC);                /* I/O COMPLETE                       */
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:119  

      618     8999    2   CHKMF:
      619     9000    2              IF S_NSCPUA = 0

   9000  2 001144   000000 235000 xsym  CHKMF        LDA     S_NSCPUA
         2 001145   001153 601000 2                  TNZ     s:9006

      620     9001    3              THEN DO INHIBIT;

      621     9002    3                    P$ -> B$U.MF = P$ -> B$U.MF - 1;

   9002  2 001146   200007 471700                    LDP1  ! P$,,AUTO
         2 001147   100006 236300                    LDQ   ! 6,,PR1
         2 001150   777000 036203                    ADLQ  ! -512,DU
         2 001151   100006 552340                    STBQ  ! 6,'40'O,PR1

      622     9003    3                 END;

   9003  2 001152   001167 710000 2                  TRA     s:9013

      623     9004    3              ELSE DO;

      624     9005                         %LOCK (G# = NI_MFGATE);

   9006  2 001153   000012 630400 3                  EPPR0   10
         2 001154   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001155   000000 701000 xent               TSX1    HFC$LOCK
         2 001156   000000 011000                    NOP     0

      625     9008    3                    P$ -> B$U.MF = P$ -> B$U.MF - 1;

   9008  2 001157   200007 470500                    LDP0    P$,,AUTO
         2 001160   000006 236100                    LDQ     6,,PR0
         2 001161   777000 036003                    ADLQ    -512,DU
         2 001162   000006 552140                    STBQ    6,'40'O,PR0

      626     9009                         %UNLOCK (G# = NI_MFGATE);
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:120  

   9010  2 001163   000012 630400 3                  EPPR0   10
         2 001164   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001165   000000 701000 xent               TSX1    HFC$UNLOCK
         2 001166   000000 011000                    NOP     0

      627     9012    3                 END;

      628     9013    2              IF (UST = %SS_SIOMF)

   9013  2 001167   200020 235100                    LDA     UST,,AUTO
         2 001170   000020 115007                    CMPA    16,DL
         2 001171   001533 601000 2                  TNZ     s:9117

      629     9014    2              THEN IF (P$ -> B$U.MF - P$-> B$U.CMF <= SL_MFU(P$ -> B$U.MODE))

   9014  2 001172   200007 470500                    LDP0    P$,,AUTO
         2 001173   000007 236100                    LDQ     7,,PR0
         2 001174   000077 376007                    ANQ     63,DL
         2 001175   200042 756100                    STQ     TT+2,,AUTO
         2 001176   000006 236100                    LDQ     6,,PR0
         2 001177   000033 772000                    QRL     27
         2 001200   200042 136100                    SBLQ    TT+2,,AUTO
         2 001201   200043 756100                    STQ     TT+3,,AUTO
         2 001202   000011 236100                    LDQ     9,,PR0
         2 001203   000006 772000                    QRL     6
         2 001204   000077 376007                    ANQ     63,DL
         2 001205   000000 620006                    EAX0    0,QL
         2 001206   200043 236100                    LDQ     TT+3,,AUTO
         2 001207   000000 116010 xsym               CMPQ    SL_MFU,X0
         2 001210   001533 605400 2                  TPNZ    s:9117

      630     9015    3                 THEN DO;

      631     9016    3                       INC = 2;

   9016  2 001211   000002 236007                    LDQ     2,DL
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:121  
         2 001212   200025 756100                    STQ     INC,,AUTO

      632     9017    3                       CALL CHSE;

   9017  2 001213   002274 701000 2                  TSX1    CHSE
         2 001214   000000 011000                    NOP     0

      633     9018    3                    END;

   9018  2 001215   001533 710000 2                  TRA     s:9117

      634     9019    2            CASE(%SS_IIPC);                /* COMM GROUP I/O IN PROGRESS         */

      635     9020    2              STATE=%SS_SIOWC;

   9020  2 001216   000017 235007                    LDA     15,DL
         2 001217   200022 755100                    STA     STATE,,AUTO

      636     9021    2              GOTO IIP;

   9021  2 001220   000201 710000 2                  TRA     IIP

      637     9022    2            CASE(%SS_IIPCA);

      638     9023    2              STATE=%SS_SIOWC;

   9023  2 001221   000017 235007                    LDA     15,DL
         2 001222   200022 755100                    STA     STATE,,AUTO

      639     9024    2              IF P$->B$U.ASYNCH & %(~U_RESET) THEN CALL SSS$ALTRET;

   9024  2 001223   200007 471500                    LDP1    P$,,AUTO
         2 001224   100001 236100                    LDQ     1,,PR1
         2 001225   000111 376000 0                  ANQ     PERM_+72
         2 001226   001232 600000 2                  TZE     s:9025

   9024  2 001227   000002 631400 xsym               EPPR1   B_VECTNIL+2
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:122  
         2 001230   000000 701000 xent               TSX1    SSS$ALTRET
         2 001231   000000 011000                    NOP     0

      640     9025    2              GOTO IIP;

   9025  2 001232   000201 710000 2                  TRA     IIP

      641     9026        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:123  
      642     9027    2            CASE(%SS_MP);

      643     9028    2              IF ADDR(FCN) ~= ADDR(NIL) THEN

   9028  2 001233   200005 236100                    LDQ     @FCN,,AUTO
         2 001234   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001235   001263 600000 2                  TZE     MP1

      644     9029    2                 IF FCN THEN

   9029  2 001236   200005 471500                    LDP1    @FCN,,AUTO
         2 001237   000000 106500                    CMPC    fill='000'O
         2 001240   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 001241   000002 000002 xsym               ADSC9   B_VECTNIL+2              cn=0,n=2
         2 001242   001263 600000 2                  TZE     MP1

      645     9030    3                    DO;

      646     9031    3                       P1$=ADDR(B$USRT$->B$USER(BITBIN(FCN)));

   9031  2 001243   000100 101500                    MRL     fill='000'O
         2 001244   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 001245   200042 000004                    ADSC9   TT+2,,AUTO               cn=0,n=4
         2 001246   200042 236100                    LDQ     TT+2,,AUTO
         2 001247   000026 736000                    QLS     22
         2 001250   000000 036000 xsym               ADLQ    B$USRT$
         2 001251   200011 756100                    STQ     P1$,,AUTO

      647     9032    3                       IF P1$->B$U.US < %SS_SCU THEN

   9032  2 001252   200011 470500                    LDP0    P1$,,AUTO
         2 001253   000011 236100                    LDQ     9,,PR0
         2 001254   770000 376003                    ANQ     -4096,DU
         2 001255   140000 116003                    CMPQ    49152,DU
         2 001256   001263 603000 2                  TRC     MP1

      648     9033    3                          STATE=P1$->B$U.US;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:124  

   9033  2 001257   000011 236100                    LDQ     9,,PR0
         2 001260   000036 772000                    QRL     30
         2 001261   200022 756100                    STQ     STATE,,AUTO
         2 001262   001272 710000 2                  TRA     s:9041

      649     9034    3                       ELSE
      650     9035    3                          GOTO MP1;
      651     9036    3                    END;
      652     9037    2                 ELSE
      653     9038    2                    GOTO MP1;
      654     9039    2              ELSE
      655     9040    2   MP1:          STATE = %SS_SCU - P$ -> B$U.PRIO -2; /*BUMP PRIO*/

   9040  2 001263   200007 471500       MP1          LDP1    P$,,AUTO
         2 001264   100011 236100                    LDQ     9,,PR1
         2 001265   000022 772000                    QRL     18
         2 001266   000077 376007                    ANQ     63,DL
         2 001267   000027 676000 xsym               ERQ     B_VECTNIL+23
         2 001270   000013 036007                    ADLQ    11,DL
         2 001271   200022 756100                    STQ     STATE,,AUTO

      656     9041    2              IF STATE <= 0 THEN

   9041  2 001272   001275 605400 2                  TPNZ    s:9043

      657     9042    2                 STATE = 1;

   9042  2 001273   000001 235007                    LDA     1,DL
         2 001274   200022 755100                    STA     STATE,,AUTO

      658     9043    2              P$->B$U.FLG=P$->B$U.FLG | %U_MSTR;

   9043  2 001275   200007 471500                    LDP1    P$,,AUTO
         2 001276   100000 236100                    LDQ     0,,PR1
         2 001277   000022 276000 xsym               ORQ     B_VECTNIL+18
         2 001300   100000 756100                    STQ     0,,PR1
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:125  

      659     9044    2              CALL RCE4;

   9044  2 001301   002244 701000 2                  TSX1    RCE4
         2 001302   000000 011000                    NOP     0
         2 001303   001533 710000 2                  TRA     s:9117

      660     9045        /*                                                                    */
      661     9046        /*                                                                    */
      662     9047    2            CASE(%SS_DU);                  /* DELETE USER                        */

      663     9048    2              IF S_CUN = S_C10USR THEN

   9048  2 001304   000000 236000 xsym               LDQ     S_CUN
         2 001305   000000 116000 xsym               CMPQ    S_C10USR
         2 001306   001310 601000 2                  TNZ     s:9051

      664     9049    2                 S_C10USR=0;

   9049  2 001307   000000 450000 xsym               STZ     S_C10USR

      665     9050        /*         RETURN USER TO NULL STATE                                  */
      666     9051    2              STATE=%SS_SNULL;

   9051  2 001310   000030 235007                    LDA     24,DL
         2 001311   200022 755100                    STA     STATE,,AUTO

      667     9052    2              HDFLG='1'B;

   9052  2 001312   400000 236003                    LDQ     -131072,DU
         2 001313   200016 756100                    STQ     HDFLG,,AUTO

      668     9053    2              CALL SSC$MON;

   9053  2 001314   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001315   000000 701000 xent               TSX1    SSC$MON
         2 001316   000000 011000                    NOP     0
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:126  

      669     9054    2              CALL RCE4;

   9054  2 001317   002244 701000 2                  TSX1    RCE4
         2 001320   000000 011000                    NOP     0

      670     9055        /*         DECREMENT NUMBER USERS IN SYSTEM                           */
      671     9056    2              S_CUIS(P$->B$U.MODE)=S_CUIS(P$->B$U.MODE)-1;

   9056  2 001321   200007 470500                    LDP0    P$,,AUTO
         2 001322   000011 236100                    LDQ     9,,PR0
         2 001323   000006 772000                    QRL     6
         2 001324   000077 376007                    ANQ     63,DL
         2 001325   000000 620006                    EAX0    0,QL
         2 001326   000001 336007                    LCQ     1,DL
         2 001327   000000 056010 xsym               ASQ     S_CUIS,X0

      672     9057    2              S_CTUIS=S_CTUIS-1;

   9057  2 001330   000000 056000 xsym               ASQ     S_CTUIS

      673     9058    2              S_PCU(S_PNO)=0;              /* SHOW NO USER FOR THIS PROCESSOR*/

   9058  2 001331   000000 720000 xsym               LXL0    S_PNO
         2 001332   000000 450010 xsym               STZ     S_PCU,X0

      674     9059    2              P$->B$U.FLG='0'B;            /* RESET FLAGS--   NOT RTR.           */

   9059  2 001333   000000 450100                    STZ     0,,PR0

      675     9060        /*         IF SYSTEM GHOST, DON'T RELEASE USER SLOT.                  */
      676     9061    2              IF S_CUN <= S_MING THEN

   9061  2 001334   000000 236000 xsym               LDQ     S_MING
         2 001335   000000 116000 xsym               CMPQ    S_CUN
         2 001336   001342 602000 2                  TNC     s:9068

PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:127  
      677     9062    3                 DO;

      678     9063    3                    S_HQ(%SS_SNULL)=P$->B$U.FL;

   9063  2 001337   000002 235100                    LDA     2,,PR0
         2 001340   000030 755000 xsym               STA     S_HQ+24

      679     9064    3                    P$->B$U.FL=0;          /* RESET NULL HEAD AND USER FLINK     */

   9064  2 001341   000002 450100                    STZ     2,,PR0

      680     9065    3                 END;

      681     9066        /*     Now we go to SSS$DU to get into Monitor Tstack, then Unlock
      682     9067               and release JIT, HJIT, and Page Table.              */
      683     9068    2              CALL SSS$DU;

   9068  2 001342   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001343   000000 701000 xent               TSX1    SSS$DU
         2 001344   000000 011000                    NOP     0
         2 001345   001533 710000 2                  TRA     s:9117

      684     9069        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:128  
      685     9070    2            CASE(%SS_AU);                  /* ADD USER                           */

      686     9071    2              P1$ = PINCRW(B$WINDOW$,1024);

   9071  2 001346   000000 236000 xsym               LDQ     B$WINDOW$
         2 001347   002000 036003                    ADLQ    1024,DU
         2 001350   200011 756100                    STQ     P1$,,AUTO

      687     9072    2              USER=P1$->B$JIT.USER;        /* USER NUMBER FROM JIT               */

   9072  2 001351   200011 470500                    LDP0    P1$,,AUTO
         2 001352   000000 236100                    LDQ     0,,PR0
         2 001353   000022 772000                    QRL     18
         2 001354   000777 376007                    ANQ     511,DL
         2 001355   200013 756100                    STQ     USER,,AUTO

      688     9073    2              P$=ADDR(B$USRT$->B$USER(USER));

   9073  2 001356   000026 736000                    QLS     22
         2 001357   000000 036000 xsym               ADLQ    B$USRT$
         2 001360   200007 756100                    STQ     P$,,AUTO

      689     9074    2              IF USER > S_MING

   9074  2 001361   000000 236000 xsym               LDQ     S_MING
         2 001362   200013 116100                    CMPQ    USER,,AUTO
         2 001363   001367 603000 2                  TRC     s:9076

      690     9075    2              THEN P$->B$U.CPU = 0;

   9075  2 001364   200007 471500                    LDP1    P$,,AUTO
         2 001365   000000 236003                    LDQ     0,DU
         2 001366   100010 552104                    STBQ    8,'04'O,PR1

      691     9076    2              P$->B$U.FL=0;

   9076  2 001367   200007 470500                    LDP0    P$,,AUTO
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:129  
         2 001370   000002 450100                    STZ     2,,PR0

      692     9077    2              P$->B$U.BL=0;

   9077  2 001371   000003 450100                    STZ     3,,PR0

      693     9078    2              UST=0;

   9078  2 001372   200020 450100                    STZ     UST,,AUTO

      694     9079    2              P$->B$U.FLG=%U_RTR|%U_CPIC|%U_MSTR; /* NOTE READY-TO-RUN AND CPIC  */

   9079  2 001373   000030 236000 xsym               LDQ     B_VECTNIL+24
         2 001374   000114 276000 0                  ORQ     PERM_+75
         2 001375   000022 276000 xsym               ORQ     B_VECTNIL+18
         2 001376   000000 756100                    STQ     0,,PR0

      695     9080    2              P$->B$U.ASYNCH=%U_YC;        /* Set YC to get to Logon from SSQ    */

   9080  2 001377   000115 236000 0                  LDQ     PERM_+76
         2 001400   000001 756100                    STQ     1,,PR0

      696     9081    2              P$->B$U.ACP=0;               /* SO SCHED WILL GET TO CPEXIT        */

   9081  2 001401   000000 236003                    LDQ     0,DU
         2 001402   000006 552120                    STBQ    6,'20'O,PR0

      697     9082    2              P$->B$U.PCT=P1$->B$JIT.PPC;  /* PAGE COUNT FOR JIT, HJIT, RO SEG   */

   9082  2 001403   200011 471500                    LDP1    P1$,,AUTO
         2 001404   100207 721100                    LXL1    135,,PR1
         2 001405   000010 741100                    STX1    8,,PR0

      698     9083    2              P$->B$U.DL$=ADDR(NIL);       /* EMPTY DO LIST                      */

   9083  2 001406   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 001407   000015 756100                    STQ     13,,PR0
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:130  

      699     9084    2              P$->B$U.ENQ='0'B;            /* EMPTY ENQUEUE LIST                 */

   9084  2 001410   000016 450100                    STZ     14,,PR0

      700     9085    2              P$->B$U.UTSUSED=0;           /* TIME USED SO FAR                   */

   9085  2 001411   000005 450100                    STZ     5,,PR0

      701     9086    2              P$->B$U.PT=B$WINDOW$->B$MAP.RPN(0)*1024/HW_PTB_UNITS;

   9086  2 001412   000000 471400 xsym               LDP1    B$WINDOW$
         2 001413   100000 236100                    LDQ     0,,PR1
         2 001414   000010 772000                    QRL     8
         2 001415   000013 376000 3                  ANQ     11
         2 001416   000000 506000 xsym               DIV     HW_PTB_UNITS
         2 001417   000000 622006                    EAX2    0,QL
         2 001420   000014 742100                    STX2    12,,PR0

      702     9087    2              P$->B$U.MF=0;

   9087  2 001421   000000 236003                    LDQ     0,DU
         2 001422   000006 552140                    STBQ    6,'40'O,PR0

      703     9088    2              IF P1$->B$JIT.MODE = %M_BATCH# THEN

   9088  2 001423   200011 473500                    LDP3    P1$,,AUTO
         2 001424   300000 236100                    LDQ     0,,PR3
         2 001425   740000 376003                    ANQ     -16384,DU
         2 001426   040000 116003                    CMPQ    16384,DU
         2 001427   001437 601000 2                  TNZ     s:9091

      704     9089    2                 P$->B$U.PRIOB=JM_PPTR$(P1$->B$JIT.PNR)->JM$PT.XPRIO;

   9089  2 001430   300302 236100                    LDQ     194,,PR3
         2 001431   000033 772000                    QRL     27
         2 001432   000000 474406 xsym               LDP4    JM_PPTR$,QL
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:131  
         2 001433   400004 236100                    LDQ     4,,PR4
         2 001434   000003 736000                    QLS     3
         2 001435   000011 752104                    STCQ    9,'04'O,PR0
         2 001436   001454 710000 2                  TRA     s:9095

      705     9090    2              ELSE
      706     9091    2                 IF P1$->B$JIT.MODE = %M_GHOST# THEN

   9091  2 001437   100000 116003                    CMPQ    32768,DU
         2 001440   001447 601000 2                  TNZ     s:9094

      707     9092    2                    P$->B$U.PRIOB=S_PRIOB(%M_GHOST#)+P1$->B$JIT.PRIINC;

   9092  2 001441   300302 236100                    LDQ     194,,PR3
         2 001442   000033 772000                    QRL     27
         2 001443   000002 036000 xsym               ADLQ    S_PRIOB+2
         2 001444   000014 736000                    QLS     12
         2 001445   000011 752104                    STCQ    9,'04'O,PR0
         2 001446   001454 710000 2                  TRA     s:9095

      708     9093    2                 ELSE
      709     9094    2                    P$->B$U.PRIOB=S_PRIOB(P1$->B$JIT.MODE);

   9094  2 001447   300000 236100                    LDQ     0,,PR3
         2 001450   000040 772000                    QRL     32
         2 001451   000000 236006 xsym               LDQ     S_PRIOB,QL
         2 001452   000014 736000                    QLS     12
         2 001453   000011 752104                    STCQ    9,'04'O,PR0

      710     9095    2              P$->B$U.MODE=P1$->B$JIT.MODE; /* SET MODE IN USER TABLES           */

   9095  2 001454   200011 473500                    LDP3    P1$,,AUTO
         2 001455   300000 236100                    LDQ     0,,PR3
         2 001456   740000 376003                    ANQ     -16384,DU
         2 001457   000032 772000                    QRL     26
         2 001460   000011 752102                    STCQ    9,'02'O,PR0

PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:132  
      711     9096    2              P$->B$U.WOO=P1$->B$JIT.WOO;  /* WORK STATION ID                    */

   9096  2 001461   200011 473500                    LDP3    P1$,,AUTO
         2 001462   300010 237100                    LDAQ    8,,PR3
         2 001463   000012 757100                    STAQ    10,,PR0

      712     9097    2              P$->B$U.SYSID=P1$->B$JIT.SYSID; /* SYSID FROM JIT TO USER TABLE    */

   9097  2 001464   300000 723100                    LXL3    0,,PR3
         2 001465   000014 443100                    SXL3    12,,PR0

      713     9098    2              S_CTUIS=S_CTUIS+1;           /* COUNT USERS RUNNING, TOTAL         */

   9098  2 001466   000000 054000 xsym               AOS     S_CTUIS

      714     9099    2              S_CUIS(P1$->B$JIT.MODE)=S_CUIS(P1$->B$JIT.MODE)+1; /* AND BY MODE*/

   9099  2 001467   300000 236100                    LDQ     0,,PR3
         2 001470   000040 772000                    QRL     32
         2 001471   000000 054006 xsym               AOS     S_CUIS,QL

      715     9100    2              INC=3;                       /* PRIORITY BOOST AS IF INTERACT*/

   9100  2 001472   000003 235007                    LDA     3,DL
         2 001473   200025 755100                    STA     INC,,AUTO

      716     9101    2              CALL CHSE;                   /* NEW USER TO COMPUTE QUEUE          */

   9101  2 001474   002274 701000 2                  TSX1    CHSE
         2 001475   000000 011000                    NOP     0
         2 001476   001533 710000 2                  TRA     s:9117

      717     9102        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:133  
      718     9103    2            CASE (%SS_AP);                 /* ASSOCIATE PROCESSOR                */

      719     9104    2              TT = P$->B$U.APR;            /* ASSOCIATE PROCEDURE FOR EACH OF    */

   9104  2 001477   200007 471500                    LDP1    P$,,AUTO
         2 001500   100007 236100                    LDQ     7,,PR1
         2 001501   000030 772000                    QRL     24
         2 001502   200024 756100                    STQ     TT,,AUTO

      720     9105    2              CALL ASPROC;

   9105  2 001503   001556 701000 2                  TSX1    ASPROC
         2 001504   000000 011000                    NOP     0

      721     9106    2              TT = P$->B$U.APO;            /* THE USERS ISR RESIDENT SHARED      */

   9106  2 001505   200007 470500                    LDP0    P$,,AUTO
         2 001506   000007 236100                    LDQ     7,,PR0
         2 001507   000014 772000                    QRL     12
         2 001510   007777 376007                    ANQ     4095,DL
         2 001511   200024 756100                    STQ     TT,,AUTO

      722     9107    2              CALL ASPROC;

   9107  2 001512   001556 701000 2                  TSX1    ASPROC
         2 001513   000000 011000                    NOP     0

      723     9108    2              TT = P$->B$U.ASP;            /* PROCESSORS.                        */

   9108  2 001514   200007 470500                    LDP0    P$,,AUTO
         2 001515   000007 236100                    LDQ     7,,PR0
         2 001516   000006 772000                    QRL     6
         2 001517   000077 376007                    ANQ     63,DL
         2 001520   200024 756100                    STQ     TT,,AUTO

      724     9109    2              CALL ASPROC;

PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:134  
   9109  2 001521   001556 701000 2                  TSX1    ASPROC
         2 001522   000000 011000                    NOP     0

      725     9110    2              CALL SSS$RET;                /* RETURN TO STEP IMMEDIATLY          */

   9110  2 001523   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001524   000000 701000 xent               TSX1    SSS$RET
         2 001525   000000 011000                    NOP     0
         2 001526   001533 710000 2                  TRA     s:9117

      726     9111        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:135  
      727     9112                                                /**/
      728     9113    2            CASE(%SS_DISCP);               /* DISCONNECT PENDING                 */

      729     9114    2              STATE=%SS_SDSC;              /* BLOCK HIM UNTIL DISCONNECT         */

   9114  2 001527   000022 235007                    LDA     18,DL
         2 001530   200022 755100                    STA     STATE,,AUTO

      730     9115    2              CALL RCE4;                   /* COMES IN.                          */

   9115  2 001531   002244 701000 2                  TSX1    RCE4
         2 001532   000000 011000                    NOP     0

      731     9116    2           END;                            /* END OF EVENT CASES                 */

      732     9117    1           IF NOT REGENT THEN

   9117  2 001533   200017 234100                    SZN     REGENT,,AUTO
         2 001534   001555 604000 2                  TMI     s:9132

      733     9118    2              DO;

      734     9119    2                 IF EVF ~= S_EVF AND S_IDLCPU ~= 0 THEN

   9119  2 001535   200030 236100                    LDQ     EVF,,AUTO
         2 001536   000000 116000 xsym               CMPQ    S_EVF
         2 001537   001551 600000 2                  TZE     s:9126
         2 001540   000000 235000 xsym               LDA     S_IDLCPU
         2 001541   001551 600000 2                  TZE     s:9126

      735     9120    3                    DO;

      736     9121    3                       IF S_TIM_KEYIN = 0 THEN

   9121  2 001542   000000 235000 1                  LDA     S_TIM_KEYIN
         2 001543   001550 601000 2                  TNZ     s:9123

PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:136  
      737     9122    3                          CALL HFD$CNNCT(S_IDLCPU,0); /* JOSTLE IDLE CPU */

   9122  2 001544   000014 630400 3                  EPPR0   12
         2 001545   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 001546   000000 701000 xent               TSX1    HFD$CNNCT
         2 001547   000000 011000                    NOP     0

      738     9123    3                       S_IDLCPU=0;

   9123  2 001550   000000 450000 xsym               STZ     S_IDLCPU

      739     9124    3                    END;

      740     9125                      %UNLOCK (G#=S_SCHDGATE);

   9126  2 001551   000000 630400 3                  EPPR0   0
         2 001552   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001553   000000 701000 xent               TSX1    HFC$UNLOCK
         2 001554   000000 011000                    NOP     0

      741     9128    2              END;

      742     9129        /*      IF THIS WAS A REG DON'T UNLOCK THE SCHEDULER GATE. THIS INSURES*/
      743     9130        /*      THAT WE DON'T RE SCHEDULE THIS GUY BEFORE PUSHING HIS         */
      744     9131        /*      ENVIRONMENT ON THE SAFE STORE STACK.                          */
      745     9132    1           RETURN;

   9132  2 001555   000000 702200 xent               TSX2  ! X66_ARET

      746     9133        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:137  
      747     9134    1   ASPROC: PROC;                      /* ASSOCIATE SHARED PROCESSOR PROCEDURE    */

   9134  2 001556   200036 741300       ASPROC       STX1  ! BLK+2,,AUTO

      748     9135        /*                                                                    */
      749     9136    2   DCL   P$ PTR;
      750     9137        /*                                                                    */
      751     9138    2           P$ = ADDR (B$P$ -> B$P(TT));

   9138  2 001557   200024 236100                    LDQ     TT,,AUTO
         2 001560   000042 402003                    MPY     34,DU
         2 001561   000000 036000 xsym               ADLQ    B$P$
         2 001562   200037 756100                    STQ     P$,,AUTO

      752     9139    2           IF P$ -> B$P.PPC(0) = 0         /* RETURN IF PROC SIZE IS ZERO        */

   9139  2 001563   200037 470500                    LDP0    P$,,AUTO
         2 001564   000003 235100                    LDA     3,,PR0
         2 001565   001567 601000 2                  TNZ     s:9141

      753     9140    2           THEN RETURN;

   9140  2 001566   000001 702211                    TSX2  ! 1,X1

      754     9141    2           TT=P$->B$P.HPP(0);              /* FIRST PHYS PAGE OF PROCEDURE       */

   9141  2 001567   000002 235100                    LDA     2,,PR0
         2 001570   200024 755100                    STA     TT,,AUTO

      755     9142    2           T=P$->B$P.PVA(0);               /* FIRST VIRTUAL PAGE(WSQ RELATIVE)   */

   9142  2 001571   000025 236100                    LDQ     21,,PR0
         2 001572   000022 772000                    QRL     18
         2 001573   200023 756100                    STQ     T,,AUTO

      756     9143    3           DO WHILE (TT ~= 0);

PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:138  
   9143  2 001574   000000 115003                    CMPA    0,DU
         2 001575   001634 600000 2                  TZE     s:9166

      757     9144    3              IF B$UPT$->B$MAP.SCTRL(T) ~= '0'B

   9144  2 001576   000000 470400 xsym               LDP0    B$UPT$
         2 001577   200023 720100                    LXL0    T,,AUTO
         2 001600   000000 236110                    LDQ     0,X0,PR0
         2 001601   777400 316007                    CANQ    -256,DL
         2 001602   001607 600000 2                  TZE     s:9158

      758     9145    3              THEN
      759     9146    4                 DO;

      760     9147                       /*S* SCREECH_CODE: SSR-S$ASSOC
      761     9148                            TYPE: SUA
      762     9149                            MESSAGE: SCTRL nonzero on a associate processor.
      763     9150                            DESCRIPTION: The software control bits for a page
      764     9151                                         in a processor procedure is nonzero
      765     9152                                         which means MM thinks the page either
      766     9153                                         belongs to the user or is CVM'ed.  */
      767     9154    4                    CALL SC_ASSOC;

   9154  2 001603   000000 713400 xsym               CLIMB   SC_ASSOC
         2 001604   000000 600000 xsid               climb   nvectors=         0

      768     9155    4                    RETURN;

   9155  2 001605   200036 221300                    LDX1  ! BLK+2,,AUTO
         2 001606   000001 702211                    TSX2  ! 1,X1

      769     9156    4                 END;
      770     9157
      771     9158    3              IF HW_WSQ0PT THEN

   9158  2 001607   000000 234000 xsym               SZN     HW_WSQ0PT
         2 001610   001616 605000 2                  TPL     s:9161
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:139  

      772     9159    3                 B$UPT$->B$MAP.RPN(T)=B$WSQ0PT$->B$MAP.RPN(TT);

   9159  2 001611   000000 471400 xsym               LDP1    B$WSQ0PT$
         2 001612   200024 721100                    LXL1    TT,,AUTO
         2 001613   100000 222111                    LDX2    0,X1,PR1
         2 001614   000000 742110                    STX2    0,X0,PR0
         2 001615   001620 710000 2                  TRA     s:9162

      773     9160    3              ELSE
      774     9161    3                 B$UPT$->B$MAP.RPN(T)=TT;  /* PUT PHYS PAGE NR INTO MAP          */

   9161  2 001616   200024 721100                    LXL1    TT,,AUTO
         2 001617   000000 741110                    STX1    0,X0,PR0

      775     9162    3              B$UPT$->B$MAP.CTRL(T)=%(%PGINMEM|%PGIOM); /* SET ACCESS CONTROLS   */

   9162  2 001620   000000 236110                    LDQ     0,X0,PR0
         2 001621   000016 376000 3                  ANQ     14
         2 001622   000044 276007                    ORQ     36,DL
         2 001623   000000 756110                    STQ     0,X0,PR0

      776     9163    3              T=T+1;

   9163  2 001624   200023 235100                    LDA     T,,AUTO
         2 001625   000001 035007                    ADLA    1,DL
         2 001626   200023 755100                    STA     T,,AUTO

      777     9164    3              TT=B$PPUT$->MM$PPUT.PPNO(TT); /* NEXT PHYS AND VIRT PAGES          */

   9164  2 001627   000000 471400 xsym               LDP1    B$PPUT$
         2 001630   100000 236111                    LDQ     0,X1,PR1
         2 001631   777777 376007                    ANQ     -1,DL
         2 001632   200024 756100                    STQ     TT,,AUTO

      778     9165    3           END;

PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:140  
   9165  2 001633   001576 601000 2                  TNZ     s:9144

      779     9166    2           RETURN;

   9166  2 001634   200036 221300                    LDX1  ! BLK+2,,AUTO
         2 001635   000001 702211                    TSX2  ! 1,X1

   9166  2 001636                       RESS         null
      780     9167    2   END;                                    /* END ASPROC                         */
      781     9168        /*                                                                    */
      782     9169        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:141  
      783     9170        /*    RESOURCE MANAGEMENT EVENTS                                      */
      784     9171        /*                                                                    */
      785     9172    1   RESS:   ;
      786     9173    1           RES = EVENT / 2 - %SS_CBF / 2;  /* BLOCK/UNBLOCK FOR RESOURCE         */

   9173  2 001636   000001 772000                    QRL     1
         2 001637   000037 136007                    SBLQ    31,DL
         2 001640   200032 756100                    STQ     RES,,AUTO

      787     9174    1           IF MOD(EVENT,2) = 0 THEN

   9174  2 001641   200014 236100                    LDQ     EVENT,,AUTO
         2 001642   000001 376007                    ANQ     1,DL
         2 001643   001741 601000 2                  TNZ     s:9207

      788     9175        /*         BLOCK IF EVEN EVENT NUMBER                                 */
      789     9176    2              DO;

      790     9177    2                 IF P$->B$U.FLG.SQRBLK THEN

   9177  2 001644   200007 471500                    LDP1    P$,,AUTO
         2 001645   100000 236100                    LDQ     0,,PR1
         2 001646   004000 316007                    CANQ    2048,DL
         2 001647   001655 600000 2                  TZE     s:9182

      791     9178    3                    DO;

      792     9179    3                       P$->B$U.FLG.SQRBLK = '0'B;

   9179  2 001650   000017 236000 3                  LDQ     15
         2 001651   100000 356100                    ANSQ    0,,PR1

      793     9180    3                       CALL SSS$RET;       /* UNBLOCK BEFORE BLOCK               */

   9180  2 001652   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001653   000000 701000 xent               TSX1    SSS$RET
         2 001654   000000 011000                    NOP     0
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:142  

      794     9181    3                    END;

      795     9182    2                 BLK=S_RQT_BYP(RES);       /* ADD USER TO TAIL OF RESOURCE QUEUE */

   9182  2 001655   000000 470400 xsym               LDP0    S_RQT_BYP$
         2 001656   200032 720100                    LXL0    RES,,AUTO
         2 001657   000000 235110                    LDA     0,X0,PR0
         2 001660   200034 755100                    STA     BLK,,AUTO

      796     9183    2                 P$->B$U.PRIO=RES;         /* NOTE QUEUE                         */

   9183  2 001661   200007 471500                    LDP1    P$,,AUTO
         2 001662   200032 236100                    LDQ     RES,,AUTO
         2 001663   000022 736000                    QLS     18
         2 001664   100011 752110                    STCQ    9,'10'O,PR1

      797     9184    2                 B$USRT$->B$USER.SQ(BLK)=USER;/* LINK TO OLD TAIL                */

   9184  2 001665   000004 735000                    ALS     4
         2 001666   000000 473400 xsym               LDP3    B$USRT$
         2 001667   200013 236100                    LDQ     USER,,AUTO
         2 001670   000011 736000                    QLS     9
         2 001671   300010 676105                    ERQ     8,AL,PR3
         2 001672   777000 376007                    ANQ     -512,DL
         2 001673   300010 656105                    ERSQ    8,AL,PR3

      798     9185    2                 IF BLK = 0 THEN S_RQH(RES)=USER;

   9185  2 001674   200034 236100                    LDQ     BLK,,AUTO
         2 001675   001700 601000 2                  TNZ     s:9186

   9185  2 001676   200013 235100                    LDA     USER,,AUTO
         2 001677   000000 755010 xsym               STA     S_RQH,X0

      799     9186    2                 S_RQT(RES)=USER;

PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:143  
   9186  2 001700   200013 235100                    LDA     USER,,AUTO
         2 001701   000000 755010 xsym               STA     S_RQT,X0

      800     9187    2                 P$->B$U.SQ=0;

   9187  2 001702   000000 236003                    LDQ     0,DU
         2 001703   100010 552110                    STBQ    8,'10'O,PR1

      801     9188    2                 STATE=%SS_SQR;            /* NEW STATE IS %SS_SQR               */

   9188  2 001704   000024 235007                    LDA     20,DL
         2 001705   200022 755100                    STA     STATE,,AUTO

      802     9189    2                 IF EVENT = %SS_NQW THEN   /* IF EVENT IS ENQUEUE                */

   9189  2 001706   200014 235100                    LDA     EVENT,,AUTO
         2 001707   000102 115007                    CMPA    66,DL
         2 001710   001732 601000 2                  TNZ     s:9198

      803     9190    2                    IF EV$->STIME < 0 THEN

   9190  2 001711   200012 473500                    LDP3    EV$,,AUTO
         2 001712   300000 235100                    LDA     0,,PR3
         2 001713   001717 605000 2                  TPL     s:9194

      804     9191    2                       P$->B$U.MISC=EV$->TIME;

   9191  2 001714   300000 235100                    LDA     0,,PR3
         2 001715   100017 755100                    STA     15,,PR1
         2 001716   001734 710000 2                  TRA     s:9199

      805     9192    2                    ELSE
      806     9193    3                       DO;

      807     9194    3                          P$->B$U.MISC=EV$->TIME*100;

   9194  2 001717   300000 236100                    LDQ     0,,PR3
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:144  
         2 001720   000144 402007                    MPY     100,DL
         2 001721   100017 756100                    STQ     15,,PR1

      808     9195    3                          CALL SSS$WUTIME(P$->B$U.MISC);

   9195  2 001722   200007 236100                    LDQ     P$,,AUTO
         2 001723   000017 036003                    ADLQ    15,DU
         2 001724   200042 756100                    STQ     TT+2,,AUTO
         2 001725   200042 630500                    EPPR0   TT+2,,AUTO
         2 001726   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001727   000000 701000 xent               TSX1    SSS$WUTIME
         2 001730   000000 011000                    NOP     0

      809     9196    3                       END;

   9196  2 001731   001734 710000 2                  TRA     s:9199

      810     9197    2                 ELSE
      811     9198    2                    P$->B$U.MISC = BITBIN('777777777777'O);

   9198  2 001732   000027 235000 xsym               LDA     B_VECTNIL+23
         2 001733   100017 755100                    STA     15,,PR1

      812     9199    2                 EVENT=%SS_SL;             /* SWITCH TO SLEEP EVENT TO SORT USER*/

   9199  2 001734   000031 235007                    LDA     25,DL
         2 001735   200014 755100                    STA     EVENT,,AUTO

      813     9200    2                 CALL CHSE1;               /* INTO RESOURCE STATE QUEUE          */

   9200  2 001736   002311 701000 2                  TSX1    CHSE1
         2 001737   000000 011000                    NOP     0

      814     9201    2              END;

   9201  2 001740   002013 710000 2                  TRA     s:9227

PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:145  
      815     9202        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:146  
      816     9203        /*    RELEASE USERS QUEUED FOR RESOURCE                               */
      817     9204        /*                                                                    */
      818     9205    1           ELSE
      819     9206    2              DO;

      820     9207    2                 INC=5;

   9207  2 001741   000005 236007                    LDQ     5,DL
         2 001742   200025 756100                    STQ     INC,,AUTO

      821     9208    2                 IF S_RQ.SPEC(RES) THEN

   9208  2 001743   200032 235100                    LDA     RES,,AUTO
         2 001744   000002 735000                    ALS     2
         2 001745   000000 066405                    CMPB    filb='0'B
         2 001746   000000 000001 xsym               BDSC    S_RQ,A                   by=0,bit=0,n=1
         2 001747   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         2 001750   001765 600000 2                  TZE     s:9219

      822     9209    3                    DO;

      823     9210    3                       IF UST = %SS_SQR THEN

   9210  2 001751   200020 235100                    LDA     UST,,AUTO
         2 001752   000024 115007                    CMPA    20,DL
         2 001753   001761 601000 2                  TNZ     s:9216

      824     9211    4                          DO;

      825     9212    4                             CALL UQR;

   9212  2 001754   002022 701000 2                  TSX1    UQR
         2 001755   000000 011000                    NOP     0

      826     9213    4                             CALL CHSE;

   9213  2 001756   002274 701000 2                  TSX1    CHSE
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:147  
         2 001757   000000 011000                    NOP     0

      827     9214    4                          END;

   9214  2 001760   002013 710000 2                  TRA     s:9227

      828     9215    3                       ELSE
      829     9216    3                          P$->B$U.FLG.SQRBLK='1'B; /* UNBLOCK BEFORE BLOCK*/

   9216  2 001761   200007 471500                    LDP1    P$,,AUTO
         2 001762   004000 236007                    LDQ     2048,DL
         2 001763   100000 256100                    ORSQ    0,,PR1

      830     9217    3                    END;

   9217  2 001764   002013 710000 2                  TRA     s:9227

      831     9218    2                 ELSE
      832     9219    3                    DO WHILE (S_RQH_BYP(RES) ~= 0);

   9219  2 001765   000000 471400 xsym               LDP1    S_RQH_BYP$
         2 001766   200032 721100                    LXL1    RES,,AUTO
         2 001767   100000 235111                    LDA     0,X1,PR1
         2 001770   002013 600000 2                  TZE     s:9227

      833     9220    3                       USER=S_RQH_BYP(RES);

   9220  2 001771   000000 470400 xsym               LDP0    S_RQH_BYP$
         2 001772   200032 720100                    LXL0    RES,,AUTO
         2 001773   000000 235110                    LDA     0,X0,PR0
         2 001774   200013 755100                    STA     USER,,AUTO

      834     9221    3                       P$=ADDR(B$USRT$->B$USER(USER));

   9221  2 001775   200013 236100                    LDQ     USER,,AUTO
         2 001776   000026 736000                    QLS     22
         2 001777   000000 036000 xsym               ADLQ    B$USRT$
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:148  
         2 002000   200007 756100                    STQ     P$,,AUTO

      835     9222    3                       UST=%SS_SQR;

   9222  2 002001   000024 235007                    LDA     20,DL
         2 002002   200020 755100                    STA     UST,,AUTO

      836     9223    3                       CALL UQR;

   9223  2 002003   002022 701000 2                  TSX1    UQR
         2 002004   000000 011000                    NOP     0

      837     9224    3                       CALL CHSE;

   9224  2 002005   002274 701000 2                  TSX1    CHSE
         2 002006   000000 011000                    NOP     0

      838     9225    3                    END;

   9225  2 002007   000000 470400 xsym               LDP0    S_RQH_BYP$
         2 002010   200032 720100                    LXL0    RES,,AUTO
         2 002011   000000 235110                    LDA     0,X0,PR0
         2 002012   001771 601000 2                  TNZ     s:9220

      839     9226    2              END;

      840     9227    1           IF NOT REGENT THEN

   9227  2 002013   200017 234100                    SZN     REGENT,,AUTO
         2 002014   002021 604000 2                  TMI     s:9231

      841     9228                   %UNLOCK    (G#=S_SCHDGATE);

   9229  2 002015   000000 630400 3                  EPPR0   0
         2 002016   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 002017   000000 701000 xent               TSX1    HFC$UNLOCK
         2 002020   000000 011000                    NOP     0
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:149  

      842     9231    1           RETURN;

   9231  2 002021   000000 702200 xent               TSX2  ! X66_ARET

      843     9232        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:150  
      844     9233                                                /**/
      845     9234    1   UQR:    PROC;

   9234  2 002022   200036 741300       UQR          STX1  ! BLK+2,,AUTO

      846     9235    2           IF RES ~= P$->B$U.PRIO THEN GOTO UQR1; /* S/C 126 IF QUEUED WRONG     */

   9235  2 002023   200007 470500                    LDP0    P$,,AUTO
         2 002024   000011 236100                    LDQ     9,,PR0
         2 002025   000022 772000                    QRL     18
         2 002026   000077 376007                    ANQ     63,DL
         2 002027   200032 116100                    CMPQ    RES,,AUTO
         2 002030   002053 601000 2                  TNZ     UQR1

      847     9236    2           BLK=0;

   9236  2 002031   200034 450100                    STZ     BLK,,AUTO

      848     9237    2           FLK=S_RQH_BYP(RES);

   9237  2 002032   000000 471400 xsym               LDP1    S_RQH_BYP$
         2 002033   200032 720100                    LXL0    RES,,AUTO
         2 002034   100000 235110                    LDA     0,X0,PR1
         2 002035   200033 755100                    STA     FLK,,AUTO

      849     9238    3           DO WHILE (FLK ~= 0);

   9238  2 002036   002053 600000 2                  TZE     UQR1

      850     9239    3              IF FLK = USER THEN GOTO UQR2; /*  SEARCH DOWN QUEUE FOR OUR        */

   9239  2 002037   200033 236100                    LDQ     FLK,,AUTO
         2 002040   200013 116100                    CMPQ    USER,,AUTO
         2 002041   002055 600000 2                  TZE     UQR2

      851     9240    3              BLK=FLK;                     /* USER. THEN UNLINK HIM.             */

PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:151  
   9240  2 002042   200034 756100                    STQ     BLK,,AUTO

      852     9241    3              FLK=B$USRT$->B$USER.SQ(BLK);

   9241  2 002043   200034 235100                    LDA     BLK,,AUTO
         2 002044   000004 735000                    ALS     4
         2 002045   000000 470400 xsym               LDP0    B$USRT$
         2 002046   000010 236105                    LDQ     8,AL,PR0
         2 002047   000011 772000                    QRL     9
         2 002050   000777 376007                    ANQ     511,DL
         2 002051   200033 756100                    STQ     FLK,,AUTO

      853     9242    3           END;

   9242  2 002052   002037 601000 2                  TNZ     s:9239

      854     9243    2   UQR1:   CALL SC_RESQ;

   9243  2 002053   000000 713400 xsym  UQR1         CLIMB   SC_RESQ
         2 002054   000000 600000 xsid               climb   nvectors=         0

      855     9244        /*S*    SCREECH_CODE: SSR-S$RESSUBQ
      856     9245                TYPE: SCREECH
      857     9246                MESSAGE: Scheduler resource queue error                       */
      858     9247    2   UQR2:   B$USRT$->B$USER.SQ(BLK)=P$->B$U.SQ;

   9247  2 002055   200034 235100       UQR2         LDA     BLK,,AUTO
         2 002056   000004 735000                    ALS     4
         2 002057   200007 470500                    LDP0    P$,,AUTO
         2 002060   000000 471400 xsym               LDP1    B$USRT$
         2 002061   000010 236100                    LDQ     8,,PR0
         2 002062   100010 676105                    ERQ     8,AL,PR1
         2 002063   777000 376007                    ANQ     -512,DL
         2 002064   100010 656105                    ERSQ    8,AL,PR1

      859     9248    2           IF P$->B$U.SQ = 0 THEN S_RQT_BYP(RES)=BLK;

PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:152  
   9248  2 002065   000010 236100                    LDQ     8,,PR0
         2 002066   777000 316007                    CANQ    -512,DL
         2 002067   002074 601000 2                  TNZ     s:9249

   9248  2 002070   200034 235100                    LDA     BLK,,AUTO
         2 002071   000000 471400 xsym               LDP1    S_RQT_BYP$
         2 002072   200032 720100                    LXL0    RES,,AUTO
         2 002073   100000 755110                    STA     0,X0,PR1

      860     9249    2           IF BLK=0 THEN S_RQH(RES)=P$->B$U.SQ;

   9249  2 002074   200034 235100                    LDA     BLK,,AUTO
         2 002075   002103 601000 2                  TNZ     s:9250

   9249  2 002076   000010 236100                    LDQ     8,,PR0
         2 002077   000011 772000                    QRL     9
         2 002100   000777 376007                    ANQ     511,DL
         2 002101   200032 720100                    LXL0    RES,,AUTO
         2 002102   000000 756010 xsym               STQ     S_RQH,X0

      861     9250    2           RETURN;

   9250  2 002103   200036 221300                    LDX1  ! BLK+2,,AUTO
         2 002104   000001 702211                    TSX2  ! 1,X1

      862     9251    2   END;
      863     9252        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:153  
      864     9253    1   EVREPRT: PROC;

   9253  2 002105   200036 741300       EVREPRT      STX1  ! BLK+2,,AUTO

      865     9254    2   DCL 1 EVINF STATIC DALIGNED,
      866     9255    2         2 USR UBIN BYTE UNAL,
      867     9256    2         2 EVNR UBIN BYTE UNAL,
      868     9257    2         2 STATE UBIN BYTE UNAL,
      869     9258    2         2 PORT UBIN BYTE UNAL,
      870     9259    2         2 TIME UBIN;
      871     9260    2   DCL S_EVX SBIN STATIC SYMDEF INIT(0);
      872     9261    2   DCL S_EVFLG UBIN STATIC SYMDEF INIT(1);
      873     9262    2   DCL S_EVX_BYP$ PTR SYMREF READONLY;
      874     9263    2   DCL EVX_BYP SBIN BASED(S_EVX_BYP$);
      875     9264    2   DCL S_EVBF(0:99) STATIC SYMDEF BIT(72) DALIGNED;
      876     9265    2   DCL S_EVBUSR UBIN STATIC SYMDEF INIT(0);
      877     9266
      878     9267
      879     9268    2           IF S_EVFLG ~= 0 AND (S_EVBUSR =0 OR S_EVBUSR = USER)

   9268  2 002106   000005 235000 1                  LDA     S_EVFLG
         2 002107   002152 600000 2                  TZE     s:9283
         2 002110   000316 236000 1                  LDQ     S_EVBUSR
         2 002111   002114 600000 2                  TZE     s:9271
         2 002112   200013 116100                    CMPQ    USER,,AUTO
         2 002113   002152 601000 2                  TNZ     s:9283

      880     9269    2           THEN
      881     9270    3              DO INHIBIT;

      882     9271    3                 CALL SSS$EOMTIME (EVINF.TIME);

   9271  2 002114   000020 630600 3                  EPPR0 ! 16
         2 002115   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         2 002116   000000 701200 xent               TSX1  ! SSS$EOMTIME
         2 002117   000000 011200                    NOP   ! 0

PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:154  
      883     9272    3                 EVINF.USR = USER;

   9272  2 002120   200013 236300                    LDQ   ! USER,,AUTO
         2 002121   000033 736200                    QLS   ! 27
         2 002122   000002 552240 1                  STBQ  ! EVINF,'40'O

      884     9273    3                 EVINF.EVNR = EVENT;

   9273  2 002123   200014 236300                    LDQ   ! EVENT,,AUTO
         2 002124   000022 736200                    QLS   ! 18
         2 002125   000002 552220 1                  STBQ  ! EVINF,'20'O

      885     9274    3                 EVINF.STATE = UST;

   9274  2 002126   200020 236300                    LDQ   ! UST,,AUTO
         2 002127   000011 736200                    QLS   ! 9
         2 002130   000002 552210 1                  STBQ  ! EVINF,'10'O

      886     9275    3                 EVINF.PORT = S_PORTNR(S_PNO);

   9275  2 002131   000000 720200 xsym               LXL0  ! S_PNO
         2 002132   000000 236210 xsym               LDQ   ! S_PORTNR,X0
         2 002133   000002 552204 1                  STBQ  ! EVINF,'04'O

      887     9276    3                 S_EVBF(EVX_BYP) = EVINF;

   9276  2 002134   000000 470600 xsym               LDP0  ! S_EVX_BYP$
         2 002135   000000 235300                    LDA   ! 0,,PR0
         2 002136   000001 735200                    ALS   ! 1
         2 002137   000000 621205                    EAX1  ! 0,AL
         2 002140   000002 237200 1                  LDAQ  ! EVINF
         2 002141   000006 757211 1                  STAQ  ! S_EVBF,X1

      888     9277    3                 S_EVX = EVX_BYP + 1;

   9277  2 002142   000000 235300                    LDA   ! 0,,PR0
         2 002143   000001 035207                    ADLA  ! 1,DL
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:155  
         2 002144   000004 755200 1                  STA   ! S_EVX

      889     9278    3                 IF S_EVX <= 99

   9278  2 002145   000143 115207                    CMPA  ! 99,DL
         2 002146   002151 605600 2                  TPNZ  ! s:9281

      890     9279    3                 THEN
      891     9280    3                    RETURN;

   9280  2 002147   200036 221300                    LDX1  ! BLK+2,,AUTO
         2 002150   000001 702211                    TSX2  ! 1,X1

      892     9281    3                 S_EVX = 0;

   9281  2 002151   000004 450200 1                  STZ   ! S_EVX

      893     9282    3              END;

      894     9283    2   END EVREPRT;

   9283  2 002152   200036 221300                    LDX1  ! BLK+2,,AUTO
         2 002153   000001 702211                    TSX2  ! 1,X1

      895     9284        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:156  
      896     9285        /*                                                                    */
      897     9286        /*         COMPUTE EXECUTION TIME BETWEEN INTERACTIONS                */
      898     9287    1   INTCOMP: PROC;

   9287  2 002154   200036 741300       INTCOMP      STX1  ! BLK+2,,AUTO

      899     9288    2   DCL T SBIN;
      900     9289    2   DCL TT UBIN;
      901     9290    2           IF B$JIT.RUNFLAGS AND %RUN_USER# THEN

   9290  2 002155   000000 470400 xsym               LDP0    B$JIT$
         2 002156   000314 236100                    LDQ     204,,PR0
         2 002157   777000 316007                    CANQ    -512,DL
         2 002160   002166 600000 2                  TZE     s:9293

      902     9291    2              T=(B$JIT.TUEXT+B$JIT.TUSVT)*10;

   9291  2 002161   000273 236100                    LDQ     187,,PR0
         2 002162   000274 036100                    ADLQ    188,,PR0
         2 002163   000012 402007                    MPY     10,DL
         2 002164   200037 756100                    STQ     T,,AUTO
         2 002165   002172 710000 2                  TRA     s:9294

      903     9292    2           ELSE
      904     9293    2              T=(B$JIT.TPEXT+B$JIT.TPSVT)*10;

   9293  2 002166   000270 236100                    LDQ     184,,PR0
         2 002167   000271 036100                    ADLQ    185,,PR0
         2 002170   000012 402007                    MPY     10,DL
         2 002171   200037 756100                    STQ     T,,AUTO

      905     9294    2           T=T+(B$JIT.XTIME+B$JIT.STIME+B$JIT.EXTUS+B$JIT.SVTUS)/1000;

   9294  2 002172   000262 236100                    LDQ     178,,PR0
         2 002173   000261 036100                    ADLQ    177,,PR0
         2 002174   000303 036100                    ADLQ    195,,PR0
         2 002175   000304 036100                    ADLQ    196,,PR0
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:157  
         2 002176   001750 506007                    DIV     1000,DL
         2 002177   200037 036100                    ADLQ    T,,AUTO
         2 002200   200037 756100                    STQ     T,,AUTO

      906     9295    2           TT=T-B$JIT.INTTIME;

   9295  2 002201   000264 136100                    SBLQ    180,,PR0
         2 002202   200040 756100                    STQ     TT,,AUTO

      907     9296    2           B$JIT.INTTIME=T;

   9296  2 002203   200037 235100                    LDA     T,,AUTO
         2 002204   000264 755100                    STA     180,,PR0

      908     9297                %LOCK (G#=P_GATE);

   9298  2 002205   000021 630400 3                  EPPR0   17
         2 002206   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 002207   000000 701000 xent               TSX1    HFC$LOCK
         2 002210   000000 011000                    NOP     0

      909     9300                %UPDATE_BUCKET(BUCKET=P_INTCOMP,
      910     9301                DIST_VAL=TT,
      911     9302                SCRATCH=T);

   9303  2 002211   200037 450100                    STZ     T,,AUTO

   9304  2 002212   002214 710000 2                  TRA     s:9307

   9306  2 002213   200037 054100                    AOS     T,,AUTO

   9307  2 002214   200037 236100                    LDQ     T,,AUTO
         2 002215   002220 604000 2                  TMI     s:9307+4
         2 002216   000000 116000 xsym               CMPQ    P_INTCOMP
         2 002217   002225 603000 2                  TRC     s:9308
         2 002220   000000 620006                    EAX0    0,QL
         2 002221   200040 236100                    LDQ     TT,,AUTO
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:158  
         2 002222   002213 604000 2                  TMI     s:9306
         2 002223   000002 116010 xsym               CMPQ    P_INTCOMP+2,X0
         2 002224   002213 605400 2                  TPNZ    s:9306

   9308  2 002225   200037 236100                    LDQ     T,,AUTO
         2 002226   000000 036000 xsym               ADLQ    P_INTCOMP
         2 002227   200042 756100                    STQ     TT+2,,AUTO
         2 002230   200037 236100                    LDQ     T,,AUTO
         2 002231   000000 036000 xsym               ADLQ    P_INTCOMP
         2 002232   200042 720100                    LXL0    TT+2,,AUTO
         2 002233   000003 235006 xsym               LDA     P_INTCOMP+3,QL
         2 002234   000001 035007                    ADLA    1,DL
         2 002235   000003 755010 xsym               STA     P_INTCOMP+3,X0

      912     9311                %UNLOCK (G#=P_GATE);

   9312  2 002236   000021 630400 3                  EPPR0   17
         2 002237   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 002240   000000 701000 xent               TSX1    HFC$UNLOCK
         2 002241   000000 011000                    NOP     0

      913     9314    2           RETURN;

   9314  2 002242   200036 221300                    LDX1  ! BLK+2,,AUTO
         2 002243   000001 702211                    TSX2  ! 1,X1

      914     9315    2   END INTCOMP;
      915     9316        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:159  
      916     9317                                                /**/
      917     9318        /*                CHANGE STATE FOR NON EXECUTABLE STATES              */
      918     9319                                                /**/
      919     9320    1   RCE4:   PROC;

   9320  2 002244   200036 741300       RCE4         STX1  ! BLK+2,,AUTO

      920     9321    2   CHANGE_STATE:
      921     9322    2           CALL DELINK;

   9322  2 002245   002404 701000 2     CHANGE_STATE TSX1    DELINK
         2 002246   000000 011000                    NOP     0

      922     9323    2           CALL RELINK;

   9323  2 002247   002440 701000 2                  TSX1    RELINK
         2 002250   000000 011000                    NOP     0

      923     9324    2   SET_STATE:
      924     9325    2           P$ -> B$U.US = STATE;

   9325  2 002251   200007 470500       SET_STATE    LDP0    P$,,AUTO
         2 002252   200022 236100                    LDQ     STATE,,AUTO
         2 002253   000036 736000                    QLS     30
         2 002254   000011 752140                    STCQ    9,'40'O,PR0

      925     9326    2           IF STATE < %SS_SCU

   9326  2 002255   200022 235100                    LDA     STATE,,AUTO
         2 002256   000014 115007                    CMPA    12,DL
         2 002257   002261 605000 2                  TPL     s:9329

      926     9327    2           THEN
      927     9328    2              S_EVF = S_EVF+1;

   9328  2 002260   000000 054000 xsym               AOS     S_EVF

PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:160  
      928     9329    2           RETURN;

   9329  2 002261   200036 221300                    LDX1  ! BLK+2,,AUTO
         2 002262   000001 702211                    TSX2  ! 1,X1

      929     9330
      930     9331                            /* THIS ENTRY IS USED TO PARK A GUY AT HIS CURRENT PRIO   */
      931     9332    2   CHSE0:  ENTRY;

   9332  2 002263   200036 741300       CHSE0        STX1  ! BLK+2,,AUTO

      932     9333    2           PRIO = P$ -> B$U.PRIO;

   9333  2 002264   200007 470500                    LDP0    P$,,AUTO
         2 002265   000011 236100                    LDQ     9,,PR0
         2 002266   000022 772000                    QRL     18
         2 002267   000077 376007                    ANQ     63,DL
         2 002270   200021 756100                    STQ     PRIO,,AUTO

      933     9334    2           CALL SET_HIR_PRIO;

   9334  2 002271   002521 701000 2                  TSX1    SET_HIR_PRIO
         2 002272   000000 011000                    NOP     0

      934     9335    2           GOTO CHANGE_STATE;

   9335  2 002273   002245 710000 2                  TRA     CHANGE_STATE

      935     9336
      936     9337                  /* THIS ENTRY IS USED TO MAKE SOMEONE EXECUTABLE WITH A PRIO INC    */
      937     9338    2   CHSE:   ENTRY;

   9338  2 002274   200036 741300       CHSE         STX1  ! BLK+2,,AUTO

      938     9339    2           PRIO = P$ -> B$U.PRIOB + S_PINC (INC);

   9339  2 002275   200025 720100                    LXL0    INC,,AUTO
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:161  
         2 002276   200007 470500                    LDP0    P$,,AUTO
         2 002277   000011 236100                    LDQ     9,,PR0
         2 002300   000014 772000                    QRL     12
         2 002301   000077 376007                    ANQ     63,DL
         2 002302   000000 036010 xsym               ADLQ    S_PINC,X0
         2 002303   200021 756100                    STQ     PRIO,,AUTO

      939     9340    2           P$ -> B$U.PRIO = PRIO;

   9340  2 002304   000022 736000                    QLS     18
         2 002305   000011 752110                    STCQ    9,'10'O,PR0

      940     9341    2           CALL SET_HIR_PRIO;

   9341  2 002306   002521 701000 2                  TSX1    SET_HIR_PRIO
         2 002307   000000 011000                    NOP     0

      941     9342    2           GOTO CHANGE_STATE;

   9342  2 002310   002245 710000 2                  TRA     CHANGE_STATE

      942     9343
      943     9344                /* THIS ENTRY IS USED BY SLEEP (AND RESOURCE WAIT) TO SORT
      944     9345                   USERS INTO THE SLEEP QUEUE AT THE RIGHT POINT */
      945     9346    2   CHSE1:  ENTRY;

   9346  2 002311   200036 741300       CHSE1        STX1  ! BLK+2,,AUTO

      946     9347    2           CALL DELINK;

   9347  2 002312   002404 701000 2                  TSX1    DELINK
         2 002313   000000 011000                    NOP     0

      947     9348                /* SORT BY WAKE UP TIME; START AT TAIL; GREATER TIME MEANS
      948     9349                   HE BELONGS AT END*/
      949     9350    2           BLK = S_TQ_BYP (STATE);

PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:162  
   9350  2 002314   000000 470400 xsym               LDP0    S_TQ_BYP$
         2 002315   200022 720100                    LXL0    STATE,,AUTO
         2 002316   000000 235110                    LDA     0,X0,PR0
         2 002317   200034 755100                    STA     BLK,,AUTO

      950     9351    2           IF BLK = 0

   9351  2 002320   002330 601000 2                  TNZ     s:9360

      951     9352    3           THEN DO;

      952     9353    3                 P$ -> B$U.FL = 0;

   9353  2 002321   200007 471500                    LDP1    P$,,AUTO
         2 002322   100002 450100                    STZ     2,,PR1

      953     9354    3                 P$ -> B$U.BL = 0;

   9354  2 002323   100003 450100                    STZ     3,,PR1

      954     9355    3                 S_TQ (STATE) = USER;

   9355  2 002324   200013 236100                    LDQ     USER,,AUTO
         2 002325   000000 756010 xsym               STQ     S_TQ,X0

      955     9356    3                 S_HQ (STATE) = USER;

   9356  2 002326   000000 756010 xsym               STQ     S_HQ,X0

      956     9357    3                 GOTO SET_STATE;

   9357  2 002327   002251 710000 2                  TRA     SET_STATE

      957     9358    3              END;
      958     9359    3           DO UNTIL (BLK = 0);

      959     9360    3              PB$ = ADDR (B$USRT$ -> B$USER (BLK));
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:163  

   9360  2 002330   200034 236100                    LDQ     BLK,,AUTO
         2 002331   000026 736000                    QLS     22
         2 002332   000000 036000 xsym               ADLQ    B$USRT$
         2 002333   200010 756100                    STQ     PB$,,AUTO

      960     9361    3              IF P$ -> B$U.MISC >= PB$ -> B$U.MISC

   9361  2 002334   200007 470500                    LDP0    P$,,AUTO
         2 002335   200010 471500                    LDP1    PB$,,AUTO
         2 002336   000017 236100                    LDQ     15,,PR0
         2 002337   100017 116100                    CMPQ    15,,PR1
         2 002340   002363 602000 2                  TNC     s:9375

      961     9362    4              THEN DO;                     /* THIS IS WHERE WE BELONG            */

      962     9363    4                    P$ -> B$U.BL = BLK;

   9363  2 002341   200034 235100                    LDA     BLK,,AUTO
         2 002342   000003 755100                    STA     3,,PR0

      963     9364    4                    FLK = PB$ -> B$U.FL;

   9364  2 002343   100002 235100                    LDA     2,,PR1
         2 002344   200033 755100                    STA     FLK,,AUTO

      964     9365    4                    IF FLK = 0

   9365  2 002345   002352 601000 2                  TNZ     s:9369

      965     9366    4                    THEN
      966     9367    4                       S_TQ (STATE) = USER;

   9367  2 002346   200013 235100                    LDA     USER,,AUTO
         2 002347   200022 720100                    LXL0    STATE,,AUTO
         2 002350   000000 755010 xsym               STA     S_TQ,X0
         2 002351   002356 710000 2                  TRA     s:9370
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:164  

      967     9368    4                    ELSE
      968     9369    4                       B$USRT$ -> B$USER.BL(FLK) = USER;

   9369  2 002352   000004 735000                    ALS     4
         2 002353   000000 473400 xsym               LDP3    B$USRT$
         2 002354   200013 236100                    LDQ     USER,,AUTO
         2 002355   300003 756105                    STQ     3,AL,PR3

      969     9370    4                    P$ -> B$U.FL = FLK;

   9370  2 002356   200033 235100                    LDA     FLK,,AUTO
         2 002357   000002 755100                    STA     2,,PR0

      970     9371    4                    PB$ -> B$U.FL = USER;

   9371  2 002360   200013 236100                    LDQ     USER,,AUTO
         2 002361   100002 756100                    STQ     2,,PR1

      971     9372    4                    GOTO SET_STATE;

   9372  2 002362   002251 710000 2                  TRA     SET_STATE

      972     9373    4                 END;
      973     9374    3              ELSE
      974     9375    3                 BLK = PB$ -> B$U.BL;      /* LOOK BACK FOR MORE                 */

   9375  2 002363   100003 235100                    LDA     3,,PR1
         2 002364   200034 755100                    STA     BLK,,AUTO

      975     9376    3           END;

   9376  2 002365   002330 601000 2                  TNZ     s:9360

      976     9377    2           P$ -> B$U.BL = 0;

   9377  2 002366   000003 450100                    STZ     3,,PR0
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:165  

      977     9378    2           FLK = S_HQ_BYP(STATE);

   9378  2 002367   000000 473400 xsym               LDP3    S_HQ_BYP$
         2 002370   200022 720100                    LXL0    STATE,,AUTO
         2 002371   300000 235110                    LDA     0,X0,PR3
         2 002372   200033 755100                    STA     FLK,,AUTO

      978     9379    2           B$USRT$ -> B$USER.BL (FLK) = USER;

   9379  2 002373   000004 735000                    ALS     4
         2 002374   000000 474400 xsym               LDP4    B$USRT$
         2 002375   200013 236100                    LDQ     USER,,AUTO
         2 002376   400003 756105                    STQ     3,AL,PR4

      979     9380    2           S_HQ (STATE) = USER;

   9380  2 002377   200013 236100                    LDQ     USER,,AUTO
         2 002400   000000 756010 xsym               STQ     S_HQ,X0

      980     9381    2           P$ -> B$U.FL = FLK;

   9381  2 002401   200033 235100                    LDA     FLK,,AUTO
         2 002402   000002 755100                    STA     2,,PR0

      981     9382    2           GOTO SET_STATE;

   9382  2 002403   002251 710000 2                  TRA     SET_STATE

      982     9383        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:166  
      983     9384                                 /* PROCEDURE TO REMOVE A USER FROM A STATE QUEUE     */
      984     9385    2   DELINK: PROC;

   9385  2 002404   200040 741300       DELINK       STX1  ! TT,,AUTO

      985     9386    3           FLK = P$ -> B$U.FL;

   9386  2 002405   200007 470500                    LDP0    P$,,AUTO
         2 002406   000002 235100                    LDA     2,,PR0
         2 002407   200033 755100                    STA     FLK,,AUTO

      986     9387    3           BLK = P$ -> B$U.BL;

   9387  2 002410   000003 235100                    LDA     3,,PR0
         2 002411   200034 755100                    STA     BLK,,AUTO

      987     9388    3           IF FLK = 0

   9388  2 002412   200033 236100                    LDQ     FLK,,AUTO
         2 002413   002417 601000 2                  TNZ     s:9392

      988     9389    3           THEN
      989     9390    3              S_TQ (UST) = BLK;

   9390  2 002414   200020 720100                    LXL0    UST,,AUTO
         2 002415   000000 755010 xsym               STA     S_TQ,X0
         2 002416   002424 710000 2                  TRA     s:9393

      990     9391    3           ELSE
      991     9392    3              B$USRT$ -> B$USER.BL (FLK) = BLK;

   9392  2 002417   200033 235100                    LDA     FLK,,AUTO
         2 002420   000004 735000                    ALS     4
         2 002421   000000 471400 xsym               LDP1    B$USRT$
         2 002422   200034 236100                    LDQ     BLK,,AUTO
         2 002423   100003 756105                    STQ     3,AL,PR1

PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:167  
      992     9393    3           IF BLK = 0

   9393  2 002424   200034 235100                    LDA     BLK,,AUTO
         2 002425   002432 601000 2                  TNZ     s:9397

      993     9394    3           THEN
      994     9395    3              S_HQ (UST) = FLK;

   9395  2 002426   200033 236100                    LDQ     FLK,,AUTO
         2 002427   200020 720100                    LXL0    UST,,AUTO
         2 002430   000000 756010 xsym               STQ     S_HQ,X0
         2 002431   002436 710000 2                  TRA     s:9398

      995     9396    3           ELSE
      996     9397    3              B$USRT$ -> B$USER.FL (BLK) = FLK;

   9397  2 002432   000004 735000                    ALS     4
         2 002433   000000 471400 xsym               LDP1    B$USRT$
         2 002434   200033 236100                    LDQ     FLK,,AUTO
         2 002435   100002 756105                    STQ     2,AL,PR1

      997     9398    3           RETURN;

   9398  2 002436   200040 221300                    LDX1  ! TT,,AUTO
         2 002437   000001 702211                    TSX2  ! 1,X1

      998     9399    3   END DELINK;
      999     9400        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:168  
     1000     9401                /* PROCEDURE TO INSERT A USER AT THE HEAD OR TAIL OF
     1001     9402                   A STATE QUEUE */
     1002     9403    2   RELINK: PROC;

   9403  2 002440   200040 741300       RELINK       STX1  ! TT,,AUTO

     1003     9404    3           IF HDFLG

   9404  2 002441   200016 234100                    SZN     HDFLG,,AUTO
         2 002442   002472 605000 2                  TPL     s:9422

     1004     9405    4           THEN DO;

     1005     9406    4                 P$ -> B$U.BL = 0;

   9406  2 002443   200007 470500                    LDP0    P$,,AUTO
         2 002444   000003 450100                    STZ     3,,PR0

     1006     9407    4                 FLK = S_HQ_BYP (STATE);

   9407  2 002445   000000 471400 xsym               LDP1    S_HQ_BYP$
         2 002446   200022 720100                    LXL0    STATE,,AUTO
         2 002447   100000 235110                    LDA     0,X0,PR1
         2 002450   200033 755100                    STA     FLK,,AUTO

     1007     9408    4                 IF FLK = 0

   9408  2 002451   002461 601000 2                  TNZ     s:9416

     1008     9409    5                 THEN DO;

     1009     9410    5                       P$ -> B$U.FL = 0;

   9410  2 002452   000002 450100                    STZ     2,,PR0

     1010     9411    5                       P$ -> B$U.BL = 0;

PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:169  
   9411  2 002453   000003 450100                    STZ     3,,PR0

     1011     9412    5                       S_TQ (STATE) = USER;

   9412  2 002454   200013 236100                    LDQ     USER,,AUTO
         2 002455   000000 756010 xsym               STQ     S_TQ,X0

     1012     9413    5                       S_HQ (STATE) = USER;

   9413  2 002456   000000 756010 xsym               STQ     S_HQ,X0

     1013     9414    5                       RETURN;

   9414  2 002457   200040 221300                    LDX1  ! TT,,AUTO
         2 002460   000001 702211                    TSX2  ! 1,X1

     1014     9415    5                    END;
     1015     9416    4                 S_HQ (STATE) = USER;

   9416  2 002461   200013 236100                    LDQ     USER,,AUTO
         2 002462   000000 756010 xsym               STQ     S_HQ,X0

     1016     9417    4                 B$USRT$ -> B$USER.BL (FLK) = USER;

   9417  2 002463   000004 735000                    ALS     4
         2 002464   000000 473400 xsym               LDP3    B$USRT$
         2 002465   300003 756105                    STQ     3,AL,PR3

     1017     9418    4                 P$ -> B$U.FL = FLK;

   9418  2 002466   200033 236100                    LDQ     FLK,,AUTO
         2 002467   000002 756100                    STQ     2,,PR0

     1018     9419    4                 RETURN;

   9419  2 002470   200040 221300                    LDX1  ! TT,,AUTO
         2 002471   000001 702211                    TSX2  ! 1,X1
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:170  

     1019     9420    4              END;
     1020     9421    4           ELSE DO;

     1021     9422    4                 P$ -> B$U.FL = 0;

   9422  2 002472   200007 470500                    LDP0    P$,,AUTO
         2 002473   000002 450100                    STZ     2,,PR0

     1022     9423    4                 BLK = S_TQ_BYP (STATE);

   9423  2 002474   000000 471400 xsym               LDP1    S_TQ_BYP$
         2 002475   200022 720100                    LXL0    STATE,,AUTO
         2 002476   100000 235110                    LDA     0,X0,PR1
         2 002477   200034 755100                    STA     BLK,,AUTO

     1023     9424    4                 IF BLK = 0

   9424  2 002500   002510 601000 2                  TNZ     s:9432

     1024     9425    5                 THEN DO;

     1025     9426    5                       P$ -> B$U.FL = 0;

   9426  2 002501   000002 450100                    STZ     2,,PR0

     1026     9427    5                       P$ -> B$U.BL = 0;

   9427  2 002502   000003 450100                    STZ     3,,PR0

     1027     9428    5                       S_TQ (STATE) = USER;

   9428  2 002503   200013 236100                    LDQ     USER,,AUTO
         2 002504   000000 756010 xsym               STQ     S_TQ,X0

     1028     9429    5                       S_HQ (STATE) = USER;

PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:171  
   9429  2 002505   000000 756010 xsym               STQ     S_HQ,X0

     1029     9430    5                       RETURN;

   9430  2 002506   200040 221300                    LDX1  ! TT,,AUTO
         2 002507   000001 702211                    TSX2  ! 1,X1

     1030     9431    5                    END;
     1031     9432    4                 S_TQ (STATE) = USER;

   9432  2 002510   200013 236100                    LDQ     USER,,AUTO
         2 002511   000000 756010 xsym               STQ     S_TQ,X0

     1032     9433    4                 B$USRT$ -> B$USER.FL (BLK) = USER;

   9433  2 002512   000004 735000                    ALS     4
         2 002513   000000 473400 xsym               LDP3    B$USRT$
         2 002514   300002 756105                    STQ     2,AL,PR3

     1033     9434    4                 P$ -> B$U.BL = BLK;

   9434  2 002515   200034 236100                    LDQ     BLK,,AUTO
         2 002516   000003 756100                    STQ     3,,PR0

     1034     9435    4                 RETURN;

   9435  2 002517   200040 221300                    LDX1  ! TT,,AUTO
         2 002520   000001 702211                    TSX2  ! 1,X1

     1035     9436    4              END;
     1036     9437    3   END RELINK;
     1037     9438        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:172  
     1038     9439                                                /* PROCEDURE TO SET HIR AND STATE     */
     1039     9440    2   SET_HIR_PRIO: PROC;

   9440  2 002521   200040 741300       SET_HIR_PRIO STX1  ! TT,,AUTO

     1040     9441    3           IF PRIO > S_CUP_BYP

   9441  2 002522   000000 470400 xsym               LDP0    S_CUP_BYP$
         2 002523   200021 236100                    LDQ     PRIO,,AUTO
         2 002524   002527 604000 2                  TMI     s:9443
         2 002525   000000 116100                    CMPQ    0,,PR0
         2 002526   002537 604400 2                  TMOZ    s:9448

     1041     9442    3           THEN
     1042     9443    3              IF S_HIR_BYP < 0

   9443  2 002527   000000 471400 xsym               LDP1    S_HIR_BYP$
         2 002530   100000 235100                    LDA     0,,PR1
         2 002531   002535 605000 2                  TPL     s:9447

     1043     9444    3              THEN
     1044     9445    3                 S_HIR = 1;

   9445  2 002532   000001 235007                    LDA     1,DL
         2 002533   000000 755000 xsym               STA     S_HIR
         2 002534   002537 710000 2                  TRA     s:9448

     1045     9446    3              ELSE
     1046     9447    3                 S_HIR = S_HIR_BYP + 1;

   9447  2 002535   000001 035007                    ADLA    1,DL
         2 002536   000000 755000 xsym               STA     S_HIR

     1047     9448    3           IF PRIO < 11

   9448  2 002537   000013 116007                    CMPQ    11,DL
         2 002540   002545 603000 2                  TRC     s:9452
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:173  

     1048     9449    3           THEN
     1049     9450    3              STATE = %SS_SCU - PRIO;

   9450  2 002541   000014 235007                    LDA     12,DL
         2 002542   200021 135100                    SBLA    PRIO,,AUTO
         2 002543   200022 755100                    STA     STATE,,AUTO
         2 002544   002547 710000 2                  TRA     s:9453

     1050     9451    3           ELSE
     1051     9452    3              STATE = %SS_SC1;

   9452  2 002545   000001 235007                    LDA     1,DL
         2 002546   200022 755100                    STA     STATE,,AUTO

     1052     9453    3           RETURN;

   9453  2 002547   000001 702211                    TSX2  ! 1,X1

     1053     9454    3   END SET_HIR_PRIO;
     1054     9455    2   END;                                    /* END STATE CHANGE PROC              */
     1055     9456        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:174  
     1056     9457        /*         CHANGE USER TO EXECUTABLE STATE                            */
     1057     9458        /*                                                                    */
     1058     9459    1   SSR$CHSE: ENTRY(EVNT);

   9459  2 002550   000000 700200 xent  SSR$CHSE     TSX0  ! X66_AUTO_4
         2 002551   000052 000004                    ZERO    42,4

     1059     9460        /*                                                                    */
     1060     9461        /*                                                                    */
     1061     9462    2           DO INHIBIT;

     1062     9463    2              HDFLG='0'B;

   9463  2 002552   200016 450300                    STZ   ! HDFLG,,AUTO

     1063     9464    2              USER=EVNT;

   9464  2 002553   200003 470700                    LDP0  ! @EVNT,,AUTO
         2 002554   000000 235300                    LDA   ! 0,,PR0
         2 002555   200013 755300                    STA   ! USER,,AUTO

     1064     9465    2              P$=ADDR(B$USRT$->B$USER(USER));

   9465  2 002556   200013 236300                    LDQ   ! USER,,AUTO
         2 002557   000026 736200                    QLS   ! 22
         2 002560   000000 036200 xsym               ADLQ  ! B$USRT$
         2 002561   200007 756300                    STQ   ! P$,,AUTO

     1065     9466    2              UST=P$->B$U.US;

   9466  2 002562   200007 471700                    LDP1  ! P$,,AUTO
         2 002563   100011 236300                    LDQ   ! 9,,PR1
         2 002564   000036 772200                    QRL   ! 30
         2 002565   200020 756300                    STQ   ! UST,,AUTO

     1066     9467    2              EVENT=%SS_PARK;

PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:175  
   9467  2 002566   000117 235207                    LDA   ! 79,DL
         2 002567   200014 755300                    STA   ! EVENT,,AUTO

     1067     9468    2              CALL EVREPRT;                /*RECORD EVENT                        */

   9468  2 002570   002105 701200 2                  TSX1  ! EVREPRT
         2 002571   000000 011200                    NOP   ! 0

     1068     9469    2              CALL CHSE0;                  /* PARK AT CURRENT PRIORITY           */

   9469  2 002572   002263 701200 2                  TSX1  ! CHSE0
         2 002573   000000 011200                    NOP   ! 0

     1069     9470    2              RETURN;

   9470  2 002574   000000 702200 xent               TSX2  ! X66_ARET

     1070     9471    2           END;                            /* END INHIBIT SECTION                */

   9471  2 002575   002600 710000 2                  TRA     s:9478

     1071     9472        /*                                                                    */
     1072     9473        /*         CHANGE USER TO CURRENT STATE                               */
     1073     9474        /*                                                                    */
     1074     9475    1   SSR$CHS: ENTRY(EVNT);

   9475  2 002576   000000 700200 xent  SSR$CHS      TSX0  ! X66_AUTO_4
         2 002577   000052 000004                    ZERO    42,4

     1075     9476        /*                                                                    */
     1076     9477        /*                                                                    */
     1077     9478    1           USER=EVNT;

   9478  2 002600   200003 470500                    LDP0    @EVNT,,AUTO
         2 002601   000000 235100                    LDA     0,,PR0
         2 002602   200013 755100                    STA     USER,,AUTO

PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:176  
     1078     9479    1           HDFLG='0'B;

   9479  2 002603   200016 450100                    STZ     HDFLG,,AUTO

     1079     9480    1           P$=ADDR(B$USRT$->B$USER(USER));

   9480  2 002604   200013 236100                    LDQ     USER,,AUTO
         2 002605   000026 736000                    QLS     22
         2 002606   000000 036000 xsym               ADLQ    B$USRT$
         2 002607   200007 756100                    STQ     P$,,AUTO

     1080     9481    1           UST=P$->B$U.US;

   9481  2 002610   200007 471500                    LDP1    P$,,AUTO
         2 002611   100011 236100                    LDQ     9,,PR1
         2 002612   000036 772000                    QRL     30
         2 002613   200020 756100                    STQ     UST,,AUTO

     1081     9482    1           STATE=%SS_SCU;

   9482  2 002614   000014 235007                    LDA     12,DL
         2 002615   200022 755100                    STA     STATE,,AUTO

     1082     9483    1           EVENT=%SS_NEWUSER;

   9483  2 002616   200014 450100                    STZ     EVENT,,AUTO

     1083     9484    1           CALL EVREPRT;                   /* RECORD NEW USER EVENT              */

   9484  2 002617   002105 701000 2                  TSX1    EVREPRT
         2 002620   000000 011000                    NOP     0

     1084     9485    1           CALL RCE4;

   9485  2 002621   002244 701000 2                  TSX1    RCE4
         2 002622   000000 011000                    NOP     0

PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:177  
     1085     9486    1           RETURN;

   9486  2 002623   000000 702200 xent               TSX2  ! X66_ARET

     1086     9487        /*                                                                    */
     1087     9488        /*                                                                    */
     1088     9489        /*                                                                    */
     1089     9490    1   SSR$SKIP: ENTRY(EVNT);

   9490  2 002624   000000 700200 xent  SSR$SKIP     TSX0  ! X66_AUTO_4
         2 002625   000052 000004                    ZERO    42,4

     1090     9491        /*                                                                    */
     1091     9492        /*                                                                    */
     1092     9493    1           USER=EVNT;

   9493  2 002626   200003 470500                    LDP0    @EVNT,,AUTO
         2 002627   000000 235100                    LDA     0,,PR0
         2 002630   200013 755100                    STA     USER,,AUTO

     1093     9494    1           HDFLG='0'B;

   9494  2 002631   200016 450100                    STZ     HDFLG,,AUTO

     1094     9495    1           P$=ADDR(B$USRT$->B$USER(USER));

   9495  2 002632   200013 236100                    LDQ     USER,,AUTO
         2 002633   000026 736000                    QLS     22
         2 002634   000000 036000 xsym               ADLQ    B$USRT$
         2 002635   200007 756100                    STQ     P$,,AUTO

     1095     9496    1           UST=P$->B$U.US;

   9496  2 002636   200007 471500                    LDP1    P$,,AUTO
         2 002637   100011 236100                    LDQ     9,,PR1
         2 002640   000036 772000                    QRL     30
         2 002641   200020 756100                    STQ     UST,,AUTO
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:178  

     1096     9497    1           STATE=UST;

   9497  2 002642   200022 756100                    STQ     STATE,,AUTO

     1097     9498    1           EVENT=%SS_SKIPUSER;

   9498  2 002643   000143 235007                    LDA     99,DL
         2 002644   200014 755100                    STA     EVENT,,AUTO

     1098     9499    1           CALL EVREPRT;                   /* RECORD NEW USER EVENT              */

   9499  2 002645   002105 701000 2                  TSX1    EVREPRT
         2 002646   000000 011000                    NOP     0

     1099     9500    1           CALL RCE4;

   9500  2 002647   002244 701000 2                  TSX1    RCE4
         2 002650   000000 011000                    NOP     0

     1100     9501    1           RETURN;

   9501  2 002651   000000 702200 xent               TSX2  ! X66_ARET

     1101     9502        /*                                                                    */
     1102     9503        /*                                                                    */
     1103     9504        /*                                                                    */
     1104     9505        %EJECT;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:179  
     1105     9506        /*                REPORT USER EVENT SERVICE                           */
     1106     9507    1   SSR$MRUE: ENTRY;

   9507  2 002652   000000 700200 xent  SSR$MRUE     TSX0  ! X66_AUTO_4
         2 002653   000052 000004                    ZERO    42,4

     1107     9508    1           EVENT=B$PS0$->FPT$RUE_V.EVENT;  /*EVENT FROM FPT*/

   9508  2 002654   000000 470400 xsym               LDP0    B$PS0$
         2 002655   000000 236100                    LDQ     0,,PR0
         2 002656   000011 772000                    QRL     9
         2 002657   000777 376007                    ANQ     511,DL
         2 002660   200014 756100                    STQ     EVENT,,AUTO

     1108     9509    1           USER=0;

   9509  2 002661   200013 450100                    STZ     USER,,AUTO

     1109     9510    1           REGENT='0'B;

   9510  2 002662   200017 450100                    STZ     REGENT,,AUTO

     1110     9511    1           CALL OCZ$SID_UN(B$PS0$->FPT$RUE_V.USER,USER) ALTRET(MRUEX);

   9511  2 002663   200013 631500                    EPPR1   USER,,AUTO
         2 002664   200043 451500                    STP1    TT+3,,AUTO
         2 002665   000000 236000 xsym               LDQ     B$PS0$
         2 002666   200042 756100                    STQ     TT+2,,AUTO
         2 002667   200042 630500                    EPPR0   TT+2,,AUTO
         2 002670   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 002671   000000 701000 xent               TSX1    OCZ$SID_UN
         2 002672   002702 702000 2                  TSX2    MRUEX

     1111     9512                %LOCK (G#=S_SCHDGATE);

   9513  2 002673   000000 630400 3                  EPPR0   0
         2 002674   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:180  
         2 002675   000000 701000 xent               TSX1    HFC$LOCK
         2 002676   000000 011000                    NOP     0

     1112     9515    1           MRUE_ENT = '1'B;

   9515  2 002677   400000 236003                    LDQ     -131072,DU
         2 002700   200031 756100                    STQ     MRUE_ENT,,AUTO

     1113     9516    1           GOTO RCE0;                      /* FALL INTO RUE                      */

   9516  2 002701   000033 710000 2                  TRA     RCE0

   9515  2 002702                       MRUEX        null
     1114     9517    1   MRUEX:  ;
     1115     9518    1           RETURN;

   9518  2 002702   000000 702200 xent               TSX2  ! X66_ARET

SS_EVENT_ERR
 Sect OctLoc
   0     000   232322 401700                                                    ....

PERM_
 Sect OctLoc
   0     001   000000 000000   000040 000000   000040 000000   000040 000000    ..... ... ... ..
   0     005   000040 000000   400000 050000   000040 000000   000040 000000    . ....(.. ... ..
   0     011   400020 000000   377757 770000   400052 734000   377725 040000    .........*.... .
   0     015   400052 734000   377725 040000   777725 400000   000052 374000    .*.... ......*..
   0     021   777725 440000   000052 334000   777725 440000   000052 334000    .....*.......*..
   0     025   777725 040000   400052 334000   000000 400000   400001 000000    .. ..*..........
   0     031   377776 374000   000040 000000   000040 000000   000040 000000    ..... ... ... ..
   0     035   000040 200000   000040 000000   377777 770000   377777 370000    . ... ..........
   0     041   000040 000000   000040 000000   000040 000000   000040 000000    . ... ... ... ..
   0     045   000040 000000   000040 000000   000000 020000   000040 000000    . ... ....... ..
   0     051   000020 050000   377777 774000   000040 000000   377777 774000    ..(...... ......
   0     055   000000 000000   000000 000000   000000 000000   000000 000000    ................
   0     075*  000000 000000   000000 000000   000040 000000   377777 777777    ......... ......
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:181  
   0     101   000040 000000   377777 777777   000040 000000   377777 777777    . ....... ......
   0     105   000040 000000   377777 777777   000040 000000   377777 777777    . ....... ......

(unnamed)
 Sect OctLoc
   0     111   777777 777776   004000 000000   002000 000000   020000 000000    ................
   0     115   200000 000000                                                    ....

S_TIM_KEYIN
 Sect OctLoc
   1     000   000000 000000                                                    ....

S_EVX
 Sect OctLoc
   1     004   000000 000000                                                    ....

S_EVFLG
 Sect OctLoc
   1     005   000000 000001                                                    ....

S_EVBF
 Sect OctLoc
   1     006   ****** ******   ****** ******   ****** ******   ****** ******    ................

S_EVBUSR
 Sect OctLoc
   1     316   000000 000000                                                    ....

(unnamed)
 Sect OctLoc
   3     000   000000 006000   000000 006000   777777 775777   767777 777777    ................
   3     004   000000 006000   000002 006000   000011 006000   000002 006000    ................
   3     010   000000 006000   777677 777777   000000 006000   001777 776000    ................
   3     014   000000 006000   000002 006000   777777 777700   777777 773777    ................
   3     020   000003 006000   000000 006000                                    ........
     1116     9519    1   END;
     1117     9520        %EOD;
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:182  

PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:183  
--  Include file information  --

   NK$LDCT.:E05TOU  is referenced.
   B$P.:E05TOU  cannot be made into a system file and is referenced.
   UM_ERRORS_C.:E05TOU  is referenced.
   UM$CP6V_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   B$ROSEG.:E05TOU  cannot be made into a system file and is referenced.
   B$MAP.:E05TOU  cannot be made into a system file and is referenced.
   JM_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   JMA_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   JM$STRUCT.:E05TOU  is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   FM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   PM_BUCKET_C.:E05TOU  is referenced.
   P_PMDAT_C.:E05TOU  is referenced.
   P_PMDAT_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRLD_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B_MLSMAC_C.:E05TOU  is referenced.
   B_ULSMAC_C.:E05TOU  is referenced.
   B_LSDATA_C.:E05TOU  cannot be made into a system file and is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure SSR$RUE.
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:184  

 **** Variables and constants ****

  ****  Section 000 RoData SSR$RUE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     1-0-0/w UBIN        r     1 PERM(0:71)                 1-0-0/b STRC(2592)  r     1 PERM_
     0-0-0/b STRC        r     1 SS_EVENT_ERR

  ****  Section 001  Data  SSR$RUE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     2-0-0/d STRC(72)    r     1 EVINF                      6-0-0/d BIT (72)    r     1 S_EVBF(0:99)
   316-0-0/w UBIN        r     1 S_EVBUSR                   5-0-0/w UBIN        r     1 S_EVFLG
     4-0-0/w SBIN        r     1 S_EVX                      0-0-0/w SBIN        r     1 S_TIM_KEYIN

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @EVNT                      5-0-0/w PTR         r     1 @FCN
     6-0-0/w PTR         r     1 @PTR2$                     4-0-0/w PTR         r     1 @USR
    34-0-0/w UBIN        r     1 BLK                       27-0-0/w UBIN        r     1 EFLG
    12-0-0/w PTR         r     1 EV$                       14-0-0/w UBIN        r     1 EVENT
    30-0-0/w SBIN        r     1 EVF                       *0-0-0/w UBIN        r     1 EVNT
    *0-0-0/c STRC(9)     r     1 FCN                       15-0-0/b STRC(9)     r     1 FCN_LCL
    33-0-0/w UBIN        r     1 FLK                       16-0-0/b BIT         r     1 HDFLG
    25-0-0/w UBIN        r     1 INC                       31-0-0/w BIT         r     1 MRUE_ENT
     7-0-0/w PTR         r     1 P$                        37-0-0/w PTR         r     1 P$
    11-0-0/w PTR         r     1 P1$                       10-0-0/w PTR         r     1 PB$
    21-0-0/w UBIN        r     1 PRIO                      *0-0-0/w PTR         r     1 PTR2$
    17-0-0/b BIT         r     1 REGENT                    32-0-0/w UBIN        r     1 RES
    22-0-0/w SBIN        r     1 STATE                     26-0-0/w UBIN        r     1 STFLG
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:185  
    23-0-0/w UBIN        r     1 T                         37-0-0/w SBIN        r     1 T
    24-0-0/w UBIN        r     1 TT                        40-0-0/w UBIN        r     1 TT
    13-0-0/w UBIN        r     1 USER                      *0-0-0/c UBIN(9)     r     1 USR
    20-0-0/w UBIN        r     1 UST

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$P$
     0-0-0/w PTR         r     1 B$PPUT$                    0-0-0/w PTR         r     1 B$PS0$
     0-0-0/w PTR         r     1 B$UPT$                     0-0-0/w PTR         r     1 B$USRT$
     0-0-0/w PTR         r     1 B$WINDOW$                  0-0-0/w PTR         r     1 B$WSQ0PT$
     0-0-0/b BIT (72)    r     1 F_DCBLOCK                  0-0-0/w SBIN        r     1 HW_PTB_UNITS
     0-0-0/w BIT         r     1 HW_WSQ0PT
     0-0-0/w PTR         r     1 JM_PPTR$(0:15)
     0-0-0/w PTR         r     1 MM_BYP$                    0-0-0/w BIT (72)    r     1 NI_MFGATE
     0-0-0/w SBIN        r     1 P_GATE                     0-0-0/d STRC(108)   r     1 P_INTCOMP
     0-0-0/w PTR         r     1 P_RESOURCE$                0-0-0/w SBIN        r     1 P_RUE#(0:7)
     0-0-0/w PTR         r     1 S$CU$                      0-0-0/w SBIN        r     1 SL_MFU(0:4)
     0-0-0/b BIT (72)    r     1 S_ASFGATE                  0-0-0/w UBIN        r     1 S_C10USR
     0-0-0/w SBIN        r     1 S_CTUIS                    0-0-0/w SBIN        r     1 S_CUIS(0:4)
     0-0-0/w UBIN        r     1 S_CUN                      0-0-0/w PTR         r     1 S_CUP_BYP$
     0-0-0/w SBIN        r     1 S_EVF                      0-0-0/w PTR         r     1 S_EVX_BYP$
     0-0-0/w SBIN        r     1 S_HIR                      0-0-0/w PTR         r     1 S_HIR_BYP$
     0-0-0/w SBIN        r     1 S_HQ(0:8191)               0-0-0/w PTR         r     1 S_HQ_BYP$
     0-0-0/w SBIN        r     1 S_IDLCPU                   0-0-0/w UBIN        r     1 S_MING
     0-0-0/w UBIN        r     1 S_NSCPUA                   0-0-0/w SBIN        r     1 S_PCU(0:7)
     0-0-0/w UBIN        r     1 S_PINC(0:5)                0-0-0/w UBIN        r     1 S_PNO
     0-0-0/w UBIN        r     1 S_PORTNR(0:7)
     0-0-0/w SBIN        r     1 S_PRIOB(0:4)
     0-0-0/b STRC(4)     r     1 S_RQ(0:5)                  0-0-0/w SBIN        r     1 S_RQH(0:5)
     0-0-0/w PTR         r     1 S_RQH_BYP$                 0-0-0/w SBIN        r     1 S_RQT(0:5)
     0-0-0/w PTR         r     1 S_RQT_BYP$                 0-0-0/b BIT (72)    r     1 S_SCHDGATE
     0-0-0/w SBIN        r     1 S_TQ(0:8191)               0-0-0/w PTR         r     1 S_TQ_BYP$
     0-0-0/b BIT (72)    r     1 S_UDLGATE
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:186  

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/w STRC        r     1 B$MAP(0:1023)
     0-0-0/d STRC(1224)  r     1 B$P(0:0)                   0-0-0/d STRC(576)   r     1 B$U
     0-0-0/w STRC(576)   r     1 B$USER(0:0)                0-0-0/w BIT         r     1 BIT0
     0-0-0/b BIT         r     1 BITS(0:35)                 0-0-0/w SBIN        r     1 EVX_BYP
     0-0-0/d STRC(27)    r     1 FPT$RUE_V                  0-0-0/w STRC(684)   r     1 JM$PT
     0-0-0/w PTR         r     1 LDCT$                      0-0-0/w STRC(72)    r     1 LOCK
     0-0-0/w STRC        r     1 MM$PPUT(0:0)
     0-0-0/d STRC(864)   r     1 NK$LDCT                    0-0-0/w SBIN        r     1 STIME
     0-0-0/w SBIN        r     1 S_CUP_BYP                  0-0-0/w SBIN        r     1 S_HIR_BYP
     0-0-0/w SBIN        r     1 S_HQ_BYP(0:24)
     0-0-0/w SBIN        r     1 S_RQH_BYP(0:5)
     0-0-0/w SBIN        r     1 S_RQT_BYP(0:5)
     0-0-0/w SBIN        r     1 S_TQ_BYP(0:24)
     0-0-0/w UBIN        r     1 TIME


   Procedure SSR$RUE requires 1475 words for executable code.
   Procedure SSR$RUE requires 42 words of local(AUTO) storage.
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:187  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:188  
          MINI XREF LISTING

ASPROC
      9134**PROC     9105--CALL     9107--CALL     9109--CALL
B$DO.ECCINFO
      4496**DCL      4497--REDEF
B$JIT.CPFLAGS1.SLEAZE
       434**DCL       434--REDEF
B$JIT.ERR
       340**DCL      8693<<ASSIGN
B$JIT.ERR.MID
       341**DCL       341--REDEF
B$JIT.EXTUS
       516**DCL      9294>>ASSIGN
B$JIT.INTTIME
       513**DCL      9295>>ASSIGN   9296<<ASSIGN
B$JIT.JRESPEAK
       502**DCL       503--REDEF
B$JIT.MODE
       335**DCL      9088>>IF       9091>>IF       9094>>ASSIGN   9095>>ASSIGN   9099>>ASSIGN   9099>>ASSIGN
B$JIT.ORIGINATOR_PORT.FROM_CR
       611**DCL       611--REDEF     612--REDEF
B$JIT.PNR
       515**DCL       515--REDEF    9089>>ASSIGN
B$JIT.PPC
       501**DCL      9082>>ASSIGN
B$JIT.PRIINC
       515**DCL      9092>>ASSIGN
B$JIT.RUNFLAGS
       536**DCL      9290>>IF
B$JIT.STIME
       513**DCL      9294>>ASSIGN
B$JIT.SVTUS
       516**DCL      9294>>ASSIGN
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:189  
B$JIT.SYSID
       340**DCL      9097>>ASSIGN
B$JIT.TPEXT
       514**DCL      9293>>ASSIGN
B$JIT.TPSVT
       514**DCL      9293>>ASSIGN
B$JIT.TSLINE
       609**DCL       610--REDEF
B$JIT.TUEXT
       514**DCL      9291>>ASSIGN
B$JIT.TUSVT
       514**DCL      9291>>ASSIGN
B$JIT.USER
       340**DCL      9072>>ASSIGN
B$JIT.WOO
       340**DCL      9096>>ASSIGN
B$JIT.XTIME
       513**DCL      9294>>ASSIGN
B$JIT$
      8651**DCL       335--IMP-PTR  8693>>ASSIGN   9290>>IF       9291>>ASSIGN   9291>>ASSIGN   9293>>ASSIGN
      9293>>ASSIGN   9294>>ASSIGN   9294>>ASSIGN   9294>>ASSIGN   9294>>ASSIGN   9295>>ASSIGN   9296>>ASSIGN
B$MAP.CTRL
      7002**DCL      9162<<ASSIGN
B$MAP.RPN
      6998**DCL      9086>>ASSIGN   9159<<ASSIGN   9159>>ASSIGN   9161<<ASSIGN
B$MAP.SCTRL
      6999**DCL      7000--REDEF    9144>>IF
B$P
      7896**DCL      9138--ASSIGN
B$P.HPP
      7899**DCL      9141>>ASSIGN
B$P.PPC
      7900**DCL      9139>>IF
B$P.PVA
      7913**DCL      9142>>ASSIGN
B$P$
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:190  
      7950**DCL      9138>>ASSIGN
B$PPUT$
      8622**DCL      9164>>ASSIGN
B$PS0$
      8628**DCL      9508>>ASSIGN   9511>>CALL
B$U.ACP
      4452**DCL      9081<<ASSIGN
B$U.APO
      4456**DCL      9106>>ASSIGN
B$U.APR
      4455**DCL      9104>>ASSIGN
B$U.ASP
      4457**DCL      9108>>ASSIGN
B$U.ASYNCH
      4433**DCL      8758>>IF       8816<<ASSIGN   8816>>ASSIGN   8861--ASSIGN   8888<<ASSIGN   8888>>ASSIGN
      9024>>IF       9080<<ASSIGN
B$U.BL
      4448**DCL      9077<<ASSIGN   9354<<ASSIGN   9363<<ASSIGN   9375>>ASSIGN   9377<<ASSIGN   9387>>ASSIGN
      9406<<ASSIGN   9411<<ASSIGN   9427<<ASSIGN   9434<<ASSIGN
B$U.BRKCNT
      4467**DCL      8839<<ASSIGN   8841<<ASSIGN
B$U.CMF
      4458**DCL      9014>>IF
B$U.CPU
      4461**DCL      9075<<ASSIGN
B$U.DL$
      4471**DCL      9083<<ASSIGN
B$U.ENQ
      4472**DCL      9084<<ASSIGN
B$U.FL
      4447**DCL      9063>>ASSIGN   9064<<ASSIGN   9076<<ASSIGN   9353<<ASSIGN   9364>>ASSIGN   9370<<ASSIGN
      9371<<ASSIGN   9381<<ASSIGN   9386>>ASSIGN   9410<<ASSIGN   9418<<ASSIGN   9422<<ASSIGN   9426<<ASSIGN
B$U.FLG
      4362**DCL      9043<<ASSIGN   9043>>ASSIGN   9059<<ASSIGN   9079<<ASSIGN
B$U.FLG.BLK
      4377**DCL      8750>>IF       8780<<ASSIGN   8923>>IF       8925<<ASSIGN   8941<<ASSIGN
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:191  
B$U.FLG.COBLK
      4369**DCL      8785>>IF       8787<<ASSIGN   8810<<ASSIGN
B$U.FLG.INTUSR
      4364**DCL      8773<<ASSIGN
B$U.FLG.NOQUAN
      4397**DCL      8854>>IF
B$U.FLG.SCIO
      4396**DCL      8774<<ASSIGN   8795<<ASSIGN   8806<<ASSIGN   8821<<ASSIGN   8869<<ASSIGN   8878<<ASSIGN
B$U.FLG.SQRBLK
      4395**DCL      9177>>IF       9179<<ASSIGN   9216<<ASSIGN
B$U.MF
      4451**DCL      8714>>IF       8739>>IF       8982<<ASSIGN   8982>>ASSIGN   8988<<ASSIGN   8988>>ASSIGN
      9002<<ASSIGN   9002>>ASSIGN   9008<<ASSIGN   9008>>ASSIGN   9014>>IF       9087<<ASSIGN
B$U.MISC
      4475**DCL      4476--REDEF    8775<>CALL     8796<<ASSIGN   8845>>IF       8911<<ASSIGN   8913<<ASSIGN
      8915<>CALL     9191<<ASSIGN   9194<<ASSIGN   9195<>CALL     9198<<ASSIGN   9361>>IF       9361>>IF
B$U.MODE
      4466**DCL      9014>>IF       9056>>ASSIGN   9056>>ASSIGN   9095<<ASSIGN
B$U.PCT
      4459**DCL      9082<<ASSIGN
B$U.PRIO
      4464**DCL      8845>>IF       8850>>ASSIGN   9040>>ASSIGN   9183<<ASSIGN   9235>>IF       9333>>ASSIGN
      9340<<ASSIGN
B$U.PRIOB
      4465**DCL      9089<<ASSIGN   9092<<ASSIGN   9094<<ASSIGN   9339>>ASSIGN
B$U.PT
      4469**DCL      9086<<ASSIGN
B$U.SQ
      4460**DCL      8952<<ASSIGN   8964>>ASSIGN   9187<<ASSIGN   9247>>ASSIGN   9248>>IF       9249>>ASSIGN
B$U.SYSID
      4470**DCL      9097<<ASSIGN
B$U.US
      4462**DCL      8678>>ASSIGN   9032>>IF       9033>>ASSIGN   9325<<ASSIGN   9466>>ASSIGN   9481>>ASSIGN
      9496>>ASSIGN
B$U.UTSUSED
      4450**DCL      9085<<ASSIGN
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:192  
B$U.WOO
      4468**DCL      9096<<ASSIGN
B$UPT$
      8625**DCL      9144>>IF       9159>>ASSIGN   9161>>ASSIGN   9162>>ASSIGN
B$USER
      4520**DCL      8677--ASSIGN   8965--ASSIGN   9031--ASSIGN   9073--ASSIGN   9221--ASSIGN   9360--ASSIGN
      9465--ASSIGN   9480--ASSIGN   9495--ASSIGN
B$USER.BL
      4524**DCL      9369<<ASSIGN   9379<<ASSIGN   9392<<ASSIGN   9417<<ASSIGN
B$USER.FL
      4523**DCL      9397<<ASSIGN   9433<<ASSIGN
B$USER.MISC
      4551**DCL      4552--REDEF
B$USER.SQ
      4536**DCL      8947>>DOWHILE  8948>>ASSIGN   8950<<ASSIGN   9184<<ASSIGN   9241>>ASSIGN   9247<<ASSIGN
B$USRT$
      4563**DCL      8677>>ASSIGN   8947>>DOWHILE  8948>>ASSIGN   8950>>ASSIGN   8965>>ASSIGN   9031>>ASSIGN
      9073>>ASSIGN   9184>>ASSIGN   9221>>ASSIGN   9241>>ASSIGN   9247>>ASSIGN   9360>>ASSIGN   9369>>ASSIGN
      9379>>ASSIGN   9392>>ASSIGN   9397>>ASSIGN   9417>>ASSIGN   9433>>ASSIGN   9465>>ASSIGN   9480>>ASSIGN
      9495>>ASSIGN
B$WINDOW$
      8623**DCL      9071>>ASSIGN   9086>>ASSIGN
B$WSQ0PT$
      8624**DCL      9159>>ASSIGN
BIT0
      8609**DCL      8686>>IF
BITS
      8608**DCL      8684>>IF       8862<<ASSIGN
BLK
      8616**DCL      9182<<ASSIGN   9184>>ASSIGN   9185>>IF       9236<<ASSIGN   9240<<ASSIGN   9241>>ASSIGN
      9247>>ASSIGN   9248>>ASSIGN   9249>>IF       9350<<ASSIGN   9351>>IF       9359>>DOUNTIL  9360>>ASSIGN
      9363>>ASSIGN   9375<<ASSIGN   9387<<ASSIGN   9390>>ASSIGN   9392>>ASSIGN   9393>>IF       9397>>ASSIGN
      9423<<ASSIGN   9424>>IF       9433>>ASSIGN   9434>>ASSIGN
CHANGE_STATE IN PROCEDURE RCE4
      9322**LABEL    9335--GOTO     9342--GOTO
CHKMF
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:193  
      9000**LABEL    8997--GOTO
CHSE IN PROCEDURE RCE4
      9338**ENTRY    8776--CALL     8807--CALL     8822--CALL     8870--CALL     8880--CALL     8898--CALL
      8938--CALL     8963--CALL     8971--CALL     8994--CALL     9017--CALL     9101--CALL     9213--CALL
      9224--CALL
CHSE0 IN PROCEDURE RCE4
      9332**ENTRY    9469--CALL
CHSE1 IN PROCEDURE RCE4
      9346**ENTRY    8916--CALL     9200--CALL
DELINK IN PROCEDURE RCE4
      9385**PROC     9322--CALL     9347--CALL
EFLG
      8604**DCL      8836<<ASSIGN   8837>>IF       8862>>ASSIGN
EV$
      8589**DCL      8674<<ASSIGN   8675<<ASSIGN   8911>>ASSIGN   8913>>ASSIGN   8954>>ASSIGN   8955>>CALL
      9190>>IF       9191>>ASSIGN   9194>>ASSIGN
EVENT
      8591**DCL      8672<<ASSIGN   8683>>ASSIGN   8704<<ASSIGN   8704>>ASSIGN   8707>>IF       8709>>DOCASE
      8836>>ASSIGN   8892>>IF       8910>>IF       8917>>IF       9173>>ASSIGN   9174>>IF       9189>>IF
      9199<<ASSIGN   9273>>ASSIGN   9467<<ASSIGN   9483<<ASSIGN   9498<<ASSIGN   9508<<ASSIGN
EVF
      8605**DCL      8679<<ASSIGN   9119>>IF
EVINF IN PROCEDURE EVREPRT
      9254**DCL      9276>>ASSIGN
EVINF.EVNR IN PROCEDURE EVREPRT
      9256**DCL      9273<<ASSIGN
EVINF.PORT IN PROCEDURE EVREPRT
      9258**DCL      9275<<ASSIGN
EVINF.STATE IN PROCEDURE EVREPRT
      9257**DCL      9274<<ASSIGN
EVINF.TIME IN PROCEDURE EVREPRT
      9259**DCL      9271<>CALL
EVINF.USR IN PROCEDURE EVREPRT
      9255**DCL      9272<<ASSIGN
EVNT
      8578**DCL         9--PROC     8666--ENTRY    8672>>ASSIGN   9459--ENTRY    9464>>ASSIGN   9475--ENTRY
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:194  
      9478>>ASSIGN   9490--ENTRY    9493>>ASSIGN
EVREPRT
      9253**PROC     8680--CALL     9468--CALL     9484--CALL     9499--CALL
EVX_BYP IN PROCEDURE EVREPRT
      9263**DCL      9276>>ASSIGN   9277>>ASSIGN
FCN
      8580**DCL         9--PROC     8666--ENTRY    8715--IF       8720>>ASSIGN   8730<<ASSIGN   8743--ASSIGN
      8749--ASSIGN   8784--ASSIGN   8838--IF       8839--ASSIGN   8893<>CALL     8944>>ASSIGN   9028--IF
      9029>>IF       9031>>ASSIGN
FCN_LCL
      8592**DCL      8720<<ASSIGN   8730>>ASSIGN
FCN_LCL.CNT
      8594**DCL      8721>>IF
FCN_LCL.FLAG
      8593**DCL      8729<<ASSIGN
FLK
      8615**DCL      8944<<ASSIGN   8945>>IF       8947>>DOWHILE  8948<<ASSIGN   8948>>ASSIGN   8950>>ASSIGN
      9237<<ASSIGN   9238>>DOWHILE  9239>>IF       9240>>ASSIGN   9241<<ASSIGN   9364<<ASSIGN   9365>>IF
      9369>>ASSIGN   9370>>ASSIGN   9378<<ASSIGN   9379>>ASSIGN   9381>>ASSIGN   9386<<ASSIGN   9388>>IF
      9392>>ASSIGN   9395>>ASSIGN   9397>>ASSIGN   9407<<ASSIGN   9408>>IF       9417>>ASSIGN   9418>>ASSIGN
FPT$RUE_V.EVENT
      7880**DCL      9508>>ASSIGN
FPT$RUE_V.USER
      7880**DCL      9511<>CALL
F_DCBLOCK
      5252**DCL      8718<>CALL     8724<>CALL     8733<>CALL
HDFLG
      8595**DCL      8676<<ASSIGN   8766<<ASSIGN   9052<<ASSIGN   9404>>IF       9463<<ASSIGN   9479<<ASSIGN
      9494<<ASSIGN
HFC$LOCK
      5269**DCL-ENT  8658--CALL     8718--CALL     8814--CALL     8859--CALL     8886--CALL     8986--CALL
      9006--CALL     9298--CALL     9513--CALL
HFC$UNLOCK
      5269**DCL-ENT  8695--CALL     8724--CALL     8733--CALL     8754--CALL     8762--CALL     8790--CALL
      8800--CALL     8818--CALL     8865--CALL     8883--CALL     8890--CALL     8919--CALL     8955--CALL
      8990--CALL     9010--CALL     9126--CALL     9229--CALL     9312--CALL
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:195  
HFD$CNNCT
      8650**DCL-ENT  9122--CALL
HW_PTB_UNITS
      5307**DCL      9086>>ASSIGN
HW_WSQ0PT
      5308**DCL      9158>>IF
IIP
      8712**LABEL    9021--GOTO     9025--GOTO
INC
      8602**DCL      8772<<ASSIGN   8805<<ASSIGN   8820<<ASSIGN   8855<<ASSIGN   8857<<ASSIGN   8879<<ASSIGN
      8897<<ASSIGN   8937<<ASSIGN   8961<<ASSIGN   8970<<ASSIGN   8993<<ASSIGN   9016<<ASSIGN   9100<<ASSIGN
      9207<<ASSIGN   9339>>ASSIGN
INTCOMP
      9287**PROC     8748--CALL
JM$PT.XPRIO
      8165**DCL      9089>>ASSIGN
JM_PPTR$
      6066**DCL      9089>>ASSIGN
KIF$LDTRC
      8644**DCL-ENT  8893--CALL
LDCT$
      8120**DCL      8743>>ASSIGN   8749>>ASSIGN   8784>>ASSIGN
LOCK.USR
      8123**DCL      8753<<ASSIGN   8761<<ASSIGN   8789<<ASSIGN   8799<<ASSIGN   8954<<ASSIGN
MM$DESC.BOUND
      1087**DCL      1088--REDEF
MM$DESC.FLGS
      1088**DCL      1088--REDEF
MM$PPUT.PPNO
      1076**DCL      9164>>ASSIGN
MM$PPUT.USER#
      1076**DCL      1076--REDEF
MM_BYP$
      1007**DCL      1007--IMP-PTR
MP1
      9040**LABEL    9035--GOTO     9038--GOTO
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:196  
MRUEX
      9515**LABEL    9511--CALLALT
MRUE_ENT
      8606**DCL      8669<<ASSIGN   8687>>IF       9515<<ASSIGN
NI_MFGATE
      8617**DCL      8986<>CALL     8990<>CALL     9006<>CALL     9010<>CALL
NK$LDCT.DDT$
      8089**DCL      8089--REDEF
NK$LDCT.IOQ$
      8088**DCL      8089--REDEF
NK$LDCT.LDCTX
      8090**DCL      8090--REDEF
NK$LDCT.LKFLG.ABORTED
      8102**DCL      8103--REDEF
NK$LDCT.LOCK
      8115**DCL      8753--ASSIGN   8754<>CALL     8761--ASSIGN   8762<>CALL     8789--ASSIGN   8790<>CALL
      8799--ASSIGN   8800<>CALL
NK$LDCT.RLCID.LDCTX
      8112**DCL      8112--REDEF
NK$LDCT.STA$
      8108**DCL      8109--REDEF
NK$LDCT.SYMB$
      8087**DCL      8087--REDEF    8087--REDEF    8088--REDEF
NK$LDCT.TCTLCNT
      8117**DCL      8797<<ASSIGN
OCZ$SID_UN
      8649**DCL-ENT  9511--CALL
P$
      8586**DCL      8677<<ASSIGN   8678>>ASSIGN   8714>>IF       8739>>IF       8750>>IF       8758>>IF
      8773>>ASSIGN   8774>>ASSIGN   8775>>CALL     8780>>ASSIGN   8785>>IF       8787>>ASSIGN   8795>>ASSIGN
      8796>>ASSIGN   8806>>ASSIGN   8810>>ASSIGN   8816>>ASSIGN   8816>>ASSIGN   8821>>ASSIGN   8839>>ASSIGN
      8841>>ASSIGN   8845>>IF       8845>>IF       8850>>ASSIGN   8854>>IF       8861>>ASSIGN   8869>>ASSIGN
      8878>>ASSIGN   8888>>ASSIGN   8888>>ASSIGN   8923>>IF       8925>>ASSIGN   8941>>ASSIGN   8952>>ASSIGN
      8964>>ASSIGN   8965<<ASSIGN   8982>>ASSIGN   8982>>ASSIGN   8988>>ASSIGN   8988>>ASSIGN   9002>>ASSIGN
      9002>>ASSIGN   9008>>ASSIGN   9008>>ASSIGN   9014>>IF       9014>>IF       9014>>IF       9024>>IF
      9040>>ASSIGN   9043>>ASSIGN   9043>>ASSIGN   9056>>ASSIGN   9056>>ASSIGN   9059>>ASSIGN   9063>>ASSIGN
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:197  
      9064>>ASSIGN   9073<<ASSIGN   9075>>ASSIGN   9076>>ASSIGN   9077>>ASSIGN   9079>>ASSIGN   9080>>ASSIGN
      9081>>ASSIGN   9082>>ASSIGN   9083>>ASSIGN   9084>>ASSIGN   9085>>ASSIGN   9086>>ASSIGN   9087>>ASSIGN
      9089>>ASSIGN   9092>>ASSIGN   9094>>ASSIGN   9095>>ASSIGN   9096>>ASSIGN   9097>>ASSIGN   9104>>ASSIGN
      9106>>ASSIGN   9108>>ASSIGN   9177>>IF       9179>>ASSIGN   9183>>ASSIGN   9187>>ASSIGN   9191>>ASSIGN
      9194>>ASSIGN   9195>>CALL     9198>>ASSIGN   9216>>ASSIGN   9221<<ASSIGN   9235>>IF       9247>>ASSIGN
      9248>>IF       9249>>ASSIGN   9325>>ASSIGN   9333>>ASSIGN   9339>>ASSIGN   9340>>ASSIGN   9353>>ASSIGN
      9354>>ASSIGN   9361>>IF       9363>>ASSIGN   9370>>ASSIGN   9377>>ASSIGN   9381>>ASSIGN   9386>>ASSIGN
      9387>>ASSIGN   9406>>ASSIGN   9410>>ASSIGN   9411>>ASSIGN   9418>>ASSIGN   9422>>ASSIGN   9426>>ASSIGN
      9427>>ASSIGN   9434>>ASSIGN   9465<<ASSIGN   9466>>ASSIGN   9480<<ASSIGN   9481>>ASSIGN   9495<<ASSIGN
      9496>>ASSIGN
P$ IN PROCEDURE ASPROC
      9136**DCL      9138<<ASSIGN   9139>>IF       9141>>ASSIGN   9142>>ASSIGN
P1$
      8588**DCL      8683<<ASSIGN   8684>>IF       8686>>IF       8743<<ASSIGN   8749<<ASSIGN   8753>>ASSIGN
      8754>>CALL     8761>>ASSIGN   8762>>CALL     8784<<ASSIGN   8789>>ASSIGN   8790>>CALL     8796--ASSIGN
      8797>>ASSIGN   8799>>ASSIGN   8800>>CALL     8861<<ASSIGN   8862>>ASSIGN   9031<<ASSIGN   9032>>IF
      9033>>ASSIGN   9071<<ASSIGN   9072>>ASSIGN   9082>>ASSIGN   9088>>IF       9089>>ASSIGN   9091>>IF
      9092>>ASSIGN   9094>>ASSIGN   9095>>ASSIGN   9096>>ASSIGN   9097>>ASSIGN   9099>>ASSIGN   9099>>ASSIGN
PB$
      8587**DCL      9360<<ASSIGN   9361>>IF       9364>>ASSIGN   9371>>ASSIGN   9375>>ASSIGN
PERM
      8564**DCL      8683--ASSIGN
PERM_
      8228**DCL      8564--REDEF
PRIO
      8598**DCL      9333<<ASSIGN   9339<<ASSIGN   9340>>ASSIGN   9441>>IF       9448>>IF       9450>>ASSIGN
PTR2$
      8583**DCL         9--PROC     8666--ENTRY    8674--IF       8675>>ASSIGN
P_GATE
      5130**DCL      9298<>CALL     9312<>CALL
P_INTCOMP.DATA
      5240**DCL      9304>>DOWHILE  9308<<ASSIGN   9308>>ASSIGN
P_INTCOMP.SIZE
      5238**DCL      9304>>DOWHILE  9308>>ASSIGN   9308>>ASSIGN
P_NSCPU
      5131**DCL      5132--REDEF
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:198  
P_RESOURCE.RES
      5004**DCL      5071--REDEF
P_RESOURCE$
      5084**DCL      4972--IMP-PTR
P_RUE#
      5102**DCL      8681<<ASSIGN   8681>>ASSIGN
P_UPTIME
      5120**DCL      5121--REDEF
RCE0
      8672**LABEL    9516--GOTO
RCE00
      8667**LABEL    8661--GOTO
RCE1
      8683**LABEL    8705--GOTO
RCE4
      9320**PROC     8736--CALL     8741--CALL     8802--CALL     8931--CALL     8958--CALL     9044--CALL
      9054--CALL     9115--CALL     9485--CALL     9500--CALL
REGENT
      8596**DCL      8660<<ASSIGN   8667<<ASSIGN   9117>>IF       9227>>IF       9510<<ASSIGN
RELINK IN PROCEDURE RCE4
      9403**PROC     9323--CALL
RES
      8607**DCL      8850<<ASSIGN   9173<<ASSIGN   9182>>ASSIGN   9183>>ASSIGN   9185>>ASSIGN   9186>>ASSIGN
      9208>>IF       9219>>DOWHILE  9220>>ASSIGN   9235>>IF       9237>>ASSIGN   9248>>ASSIGN   9249>>ASSIGN
RESS
      9166**LABEL    8707--GOTO
S$CU$
      4562**DCL      8911>>ASSIGN   8913>>ASSIGN   8915>>CALL
SC_ASSOC
      8631**DCL-ENT  9154--CALL
SC_EVENT
      8632**DCL-ENT  8703--CALL
SC_RESQ
      8630**DCL-ENT  9243--CALL
SET_CIO
      8795**LABEL    8745--GOTO     8769--GOTO
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:199  
SET_HIR_PRIO IN PROCEDURE RCE4
      9440**PROC     9334--CALL     9341--CALL
SET_STATE IN PROCEDURE RCE4
      9325**LABEL    9357--GOTO     9372--GOTO     9382--GOTO
SL_MFU
      4816**DCL      9014>>IF
SSC$MON
      8642**DCL-ENT  9053--CALL
SSQ$NUQUAN
      8643**DCL-ENT  8768--CALL
SSS$ALTRET
      8635**DCL-ENT  8764--CALL     9024--CALL
SSS$DU
      8636**DCL-ENT  9068--CALL
SSS$EOMTIME
      8633**DCL-ENT  8775--CALL     9271--CALL
SSS$RET
      8634**DCL-ENT  8714--CALL     8726--CALL     8739--CALL     8792--CALL     8926--CALL     9110--CALL
      9180--CALL
SSS$WUTIME
      8637**DCL-ENT  8915--CALL     9195--CALL
SSV$EVENT
      8645**DCL-ENT  8893--CALL
SS_EVENT_ERR
      7882**DCL      8693>>ASSIGN
ST1
      8836**LABEL    8829--GOTO
STATE
      8599**DCL      8712<<ASSIGN   8740<<ASSIGN   8744<<ASSIGN   8767<<ASSIGN   8794<<ASSIGN   8902<<ASSIGN
      8930<<ASSIGN   8957<<ASSIGN   9020<<ASSIGN   9023<<ASSIGN   9033<<ASSIGN   9040<<ASSIGN   9041>>IF
      9042<<ASSIGN   9051<<ASSIGN   9114<<ASSIGN   9188<<ASSIGN   9325>>ASSIGN   9326>>IF       9350>>ASSIGN
      9355>>ASSIGN   9356>>ASSIGN   9367>>ASSIGN   9378>>ASSIGN   9380>>ASSIGN   9407>>ASSIGN   9412>>ASSIGN
      9413>>ASSIGN   9416>>ASSIGN   9423>>ASSIGN   9428>>ASSIGN   9429>>ASSIGN   9432>>ASSIGN   9450<<ASSIGN
      9452<<ASSIGN   9482<<ASSIGN   9497<<ASSIGN
STFLG
      8603**DCL      8828<<ASSIGN   8834<<ASSIGN   8852<<ASSIGN   8867>>IF
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:200  
STIME
      8611**DCL      8839>>ASSIGN   9190>>IF
STQA1
      8925**LABEL    8756--GOTO
S_ASFGATE
      4841**DCL      8814<>CALL     8818<>CALL     8859<>CALL     8865<>CALL     8886<>CALL     8890<>CALL
S_C10USR
      4841**DCL      9048>>IF       9049<<ASSIGN
S_CTUIS
      4826**DCL      9057<<ASSIGN   9057>>ASSIGN   9098<<ASSIGN   9098>>ASSIGN
S_CUIS
      4826**DCL      9056<<ASSIGN   9056>>ASSIGN   9099<<ASSIGN   9099>>ASSIGN
S_CUN
      8619**DCL      8670>>ASSIGN   9048>>IF       9061>>IF
S_CUP_BYP
      8575**DCL      9441>>IF
S_CUP_BYP$
      8569**DCL      8575--IMP-PTR  9441>>IF
S_EVBF IN PROCEDURE EVREPRT
      9264**DCL      9276<<ASSIGN
S_EVBUSR IN PROCEDURE EVREPRT
      9265**DCL      9268>>IF       9268>>IF
S_EVF
      4828**DCL      8679>>ASSIGN   9119>>IF       9328<<ASSIGN   9328>>ASSIGN
S_EVFLG IN PROCEDURE EVREPRT
      9261**DCL      9268>>IF
S_EVX IN PROCEDURE EVREPRT
      9260**DCL      9277<<ASSIGN   9278>>IF       9281<<ASSIGN
S_EVX_BYP$ IN PROCEDURE EVREPRT
      9262**DCL      9263--IMP-PTR  9276>>ASSIGN   9277>>ASSIGN
S_HIR
      4828**DCL      9445<<ASSIGN   9447<<ASSIGN
S_HIR_BYP
      8576**DCL      9443>>IF       9447>>ASSIGN
S_HIR_BYP$
      8570**DCL      8576--IMP-PTR  9443>>IF       9447>>ASSIGN
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:201  
S_HQ
      4827**DCL      9063<<ASSIGN   9356<<ASSIGN   9380<<ASSIGN   9395<<ASSIGN   9413<<ASSIGN   9416<<ASSIGN
      9429<<ASSIGN
S_HQ_BYP
      8571**DCL      9378>>ASSIGN   9407>>ASSIGN
S_HQ_BYP$
      8565**DCL      8571--IMP-PTR  9378>>ASSIGN   9407>>ASSIGN
S_IDLCPU
      4831**DCL      9119>>IF       9122<>CALL     9123<<ASSIGN
S_MING
      8618**DCL      9061>>IF       9074>>IF
S_NSCPUA
      4830**DCL      8980>>IF       9000>>IF
S_PCU
      4829**DCL      9058<<ASSIGN
S_PINC
      4828**DCL      9339>>ASSIGN
S_PNO
      8620**DCL      8681>>ASSIGN   8681>>ASSIGN   9058>>ASSIGN   9275>>ASSIGN
S_PORTNR
      4829**DCL      9275>>ASSIGN
S_PRIOB
      4816**DCL      9092>>ASSIGN   9094>>ASSIGN
S_RQ.SPEC
      4827**DCL      9208>>IF
S_RQH
      4827**DCL      9185<<ASSIGN   9249<<ASSIGN
S_RQH_BYP
      8573**DCL      9219>>DOWHILE  9220>>ASSIGN   9237>>ASSIGN
S_RQH_BYP$
      8567**DCL      8573--IMP-PTR  9219>>DOWHILE  9220>>ASSIGN   9237>>ASSIGN
S_RQT
      4827**DCL      9186<<ASSIGN
S_RQT_BYP
      8574**DCL      9182>>ASSIGN   9248<<ASSIGN
S_RQT_BYP$
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:202  
      8568**DCL      8574--IMP-PTR  9182>>ASSIGN   9248>>ASSIGN
S_SCHDGATE
      4841**DCL      8658<>CALL     8695<>CALL     8883<>CALL     9126<>CALL     9229<>CALL     9513<>CALL
S_TIM_KEYIN
      8621**DCL      9121>>IF
S_TQ
      4827**DCL      9355<<ASSIGN   9367<<ASSIGN   9390<<ASSIGN   9412<<ASSIGN   9428<<ASSIGN   9432<<ASSIGN
S_TQ_BYP
      8572**DCL      9350>>ASSIGN   9423>>ASSIGN
S_TQ_BYP$
      8566**DCL      8572--IMP-PTR  9350>>ASSIGN   9423>>ASSIGN
S_UDLGATE
      4840**DCL      8919<>CALL
T
      8600**DCL      9142<<ASSIGN   9144>>IF       9159>>ASSIGN   9161>>ASSIGN   9162>>ASSIGN   9163<<ASSIGN
      9163>>ASSIGN
T IN PROCEDURE INTCOMP
      9288**DCL      9291<<ASSIGN   9293<<ASSIGN   9294<<ASSIGN   9294>>ASSIGN   9295>>ASSIGN   9296>>ASSIGN
      9303<<ASSIGN   9304>>DOWHILE  9304>>DOWHILE  9306<<ASSIGN   9306>>ASSIGN   9308>>ASSIGN   9308>>ASSIGN
TIME
      8610**DCL      8796>>ASSIGN   8911>>ASSIGN   8913>>ASSIGN   8954--ASSIGN   8955<>CALL     9191>>ASSIGN
      9194>>ASSIGN
TT
      8601**DCL      9104<<ASSIGN   9106<<ASSIGN   9108<<ASSIGN   9138>>ASSIGN   9141<<ASSIGN   9143>>DOWHILE
      9159>>ASSIGN   9161>>ASSIGN   9164<<ASSIGN   9164>>ASSIGN
TT IN PROCEDURE INTCOMP
      9289**DCL      9295<<ASSIGN   9304>>DOWHILE
UQR
      9234**PROC     8851--CALL     9212--CALL     9223--CALL
UQR1 IN PROCEDURE UQR
      9243**LABEL    9235--GOTO
UQR2 IN PROCEDURE UQR
      9247**LABEL    9239--GOTO
USER
      8590**DCL      8670<<ASSIGN   8671<<ASSIGN   8677>>ASSIGN   8950>>ASSIGN   8962>>DOWHILE  8964<<ASSIGN
      8965>>ASSIGN   9072<<ASSIGN   9073>>ASSIGN   9074>>IF       9184>>ASSIGN   9185>>ASSIGN   9186>>ASSIGN
PL6.E3A0      #001=SSR$RUE File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:58 Page:203  
      9220<<ASSIGN   9221>>ASSIGN   9239>>IF       9268>>IF       9272>>ASSIGN   9355>>ASSIGN   9356>>ASSIGN
      9367>>ASSIGN   9369>>ASSIGN   9371>>ASSIGN   9379>>ASSIGN   9380>>ASSIGN   9412>>ASSIGN   9413>>ASSIGN
      9416>>ASSIGN   9417>>ASSIGN   9428>>ASSIGN   9429>>ASSIGN   9432>>ASSIGN   9433>>ASSIGN   9464<<ASSIGN
      9465>>ASSIGN   9478<<ASSIGN   9480>>ASSIGN   9493<<ASSIGN   9495>>ASSIGN   9509<<ASSIGN   9511<>CALL
USR
      8579**DCL         9--PROC     8666--ENTRY    8670--IF       8671>>ASSIGN   8893<>CALL
UST
      8597**DCL      8678<<ASSIGN   8684>>IF       8826>>IF       8842>>IF       8873>>IF       8873>>IF
      8873>>IF       8873>>IF       8873>>IF       8935>>IF       8978>>IF       8978>>IF       9013>>IF
      9078<<ASSIGN   9210>>IF       9222<<ASSIGN   9274>>ASSIGN   9390>>ASSIGN   9395>>ASSIGN   9466<<ASSIGN
      9481<<ASSIGN   9496<<ASSIGN   9497>>ASSIGN

PL6.E3A0      #002=SSR$REG File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:59 Page:204  
     1118        1        /*T***********************************************************/
     1119        2        /*T*                                                         */
     1120        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1121        4        /*T*                                                         */
     1122        5        /*T***********************************************************/
     1123        6        /*                                                                    */
     1124        7        SSR$REG: PROC(EVENT,FCN,TIME) ALTRET;
     1125        8        /*                                                                    */
     1126        9    1   DCL   EVENT UBIN(36);                   /* SCHEDULER EVENT NUMBER             */
     1127       10    1   DCL   FCN UBIN(9) UNAL;                 /* DCB FUNCTION COUNT AND FLAG        */
     1128       11    1   DCL   TIME UBIN(36);                    /* SLEEP INTERVAL IF SLEEP REG        */
     1129       12        /*                                                                    */
     1130       13    1   DCL   USR UBIN(9);                      /* TEMP REG USER NR.                  */
     1131       14    1   DCL   SSS$RG ENTRY;                     /* BMAP CLIMB ROUTINE                 */
     1132       15    1   DCL   SSR$REGUE ENTRY(4);               /* REPORT USER EVENT                  */
     1133       16    1   DCL   SSS$SENT ENTRY;                   /* SCHEDULER ENTRY POINT              */
     1134       17    1   DCL    SSC$MON ENTRY;                   /* ACCOUNT MON EXECUTION TIME*/
     1135       18    1   DCL HFC$ASSOCCLR ENTRY(3);
     1136       19        /*                                                                    */
     1137       20    1   DCL   S_PNO SBIN SYMREF;
     1138       21    1   DCL   S_CUN UBIN(36) SYMREF;            /* CURRENT USER NUMBER                */
     1139       22    1   DCL   S_CNODE UBIN SYMREF;              /* CURRENT OVERLAY NODE               */
     1140       23    1   DCL   B$SEGTBL$ PTR SYMREF;             /* POINTER TO OVERLAY TABLE           */
     1141       24    1   DCL   B$MPT$ PTR SYMREF;                /* POINTER TO MON PAGE TABLE          */
     1142       25        /**/
     1143       26    1   DCL 1 SEGTBL ALIGNED BASED(B$SEGTBL$),
     1144       27    1         2 * UBIN HALF HALIGNED,
     1145       28    1         2 MPTOFFSET UBIN HALF HALIGNED,
     1146       29    1         2 NODES(0:0) ALIGNED,
     1147       30    1           3 OFFSET UBIN HALF HALIGNED,    /* OFFSET TO SEGMENT ENTRY            */
     1148       31    1           3 SIZE UBIN HALF HALIGNED;      /* SIZE OF PT IN BYTES                */
     1149       32
     1150       33    1   DCL 1 SEGENT ALIGNED,
     1151       34    1         2 OFFSET UBIN HALF HALIGNED,
     1152       35    1         2 SIZE UBIN HALF HALIGNED;
     1153       36
     1154       37    1   DCL CNODE UBIN;
PL6.E3A0      #002=SSR$REG File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:59 Page:205  
     1155       38
     1156       39    1   DCL PTSTRING CHAR(SEGENT.SIZE) BASED;
     1157       40        %PLIST;
     1158       41        %INCLUDE HF_LOCK_C;
     1159       55        %INCLUDE HF_DATA_R;
     1160       98        %INCLUDE SS_SCHED_C;
     1161      331        %INCLUDE SS_SCHED_R;
     1162      374        %INCLUDE B$USER;
     1163      590        %INCLUDE B_STRINGS_C;
     1164      719        %B$USERREFS;
     1165      723        /*                                                                    */
     1166      724    2           DO INHIBIT;
     1167      725    2              CALL SSC$MON;
     1168      726    2              USR=S_CUN;
     1169      727                   %LOCK (G#=S_SCHDGATE);
     1170      730    2              CALL SSR$REGUE(EVENT,USR,FCN,ADDR(TIME));
     1171      731    2   RG00:      ;
     1172      732    2              S_CUN=0;                     /* DELETE CURRENT USER                */
     1173      733    2              S_PCU(S_PNO)=0;
     1174      734    2              CNODE=S_CNODE;               /* SAVE CURRENT NODE NUMBER           */
     1175      735    2              CALL SSS$RG;                 /* BLOCK USER, RETURNS AFTER UNBLOCK  */
     1176      736    3              IF CNODE~=S_CNODE THEN DO;   /* RELOAD OVERLAY                     */
     1177      737    3                    SEGENT=SEGTBL.NODES(CNODE-1);
     1178      738    3                    PINCRC(B$MPT$,SEGTBL.MPTOFFSET)->PTSTRING=PINCRC(B$SEGTBL$,SEGENT.
               738                             OFFSET)->PTSTRING;
     1179      739    3                    S_CNODE=CNODE;
     1180      740    3                    CALL HFC$ASSOCCLR (%MONWSQ,SEGTBL.MPTOFFSET/4,SEGENT.SIZE/4);
     1181      741    3                 END;
     1182      742                                                /**/
     1183      743    2              IF S$CU$->B$U.ASYNCH & ~%U_RESET
     1184      744    2              THEN ALTRETURN;
     1185      745    2              ELSE RETURN;
     1186      746    2           END;                            /* END INHIBIT                        */
     1187      747        /*                                                                    */
     1188      748        /*         BLOCK SLAVE USER FOR MASTER                                */
     1189      749        /*         CONTINUE MASTER USER                                       */
     1190      750        /*                                                                    */
PL6.E3A0      #002=SSR$REG File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:59 Page:206  
     1191      751    1   SSR$MASTER: ENTRY ALTRET;
     1192      752    2           DO INHIBIT;
     1193      753    2              CALL SSC$MON;
     1194      754                   %LOCK (G#=S_SCHDGATE);
     1195      757    2              CALL SSR$REGUE(%SS_MP);      /* BLOCK FOR MASTER                   */
     1196      758    2              GOTO RG00;
     1197      759    2           END;                            /* END INHIBIT                        */
     1198      760    1   END;

PL6.E3A0      #002=SSR$REG File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:59 Page:207  
--  Include file information  --

   B_STRINGS_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRLD_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure SSR$REG.

   Procedure SSR$REG requires 95 words for executable code.
   Procedure SSR$REG requires 16 words of local(AUTO) storage.

    No errors detected in file SSR$RUE.:E05TSI    .

PL6.E3A0      #002=SSR$REG File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:59 Page:208  

 Object Unit name= SSR$REG                                    File name= SSR$RUE.:E05TOU
 UTS= JUL 30 '97 05:59:01.72 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    95    137  SSR$REG
    1  RoData even  none     4      4  SSR$REG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        3  SSR$REG
     0    120          yes     yes      Std        0  SSR$MASTER

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 SSC$MON
         yes           Std       3 HFC$ASSOCCLR
         yes           Std       1 HFC$LOCK
         yes           Std       4 SSR$REGUE
         yes           Std       0 SSS$RG
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_3
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #002=SSR$REG File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:59 Page:209  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     S_PNO                                 S_CUN                                 S_CNODE
     B$SEGTBL$                             B$MPT$                                S_PCU
     S_SCHDGATE                            S$CU$                                 B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #002=SSR$REG File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:59 Page:210  


     1118        1        /*T***********************************************************/
     1119        2        /*T*                                                         */
     1120        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1121        4        /*T*                                                         */
     1122        5        /*T***********************************************************/
     1123        6        /*                                                                    */
     1124        7        SSR$REG: PROC(EVENT,FCN,TIME) ALTRET;

      7  0 000000   000000 700200 xent  SSR$REG      TSX0  ! X66_AUTO_3
         0 000001   000020 000003                    ZERO    16,3

     1125        8        /*                                                                    */
     1126        9    1   DCL   EVENT UBIN(36);                   /* SCHEDULER EVENT NUMBER             */
     1127       10    1   DCL   FCN UBIN(9) UNAL;                 /* DCB FUNCTION COUNT AND FLAG        */
     1128       11    1   DCL   TIME UBIN(36);                    /* SLEEP INTERVAL IF SLEEP REG        */
     1129       12        /*                                                                    */
     1130       13    1   DCL   USR UBIN(9);                      /* TEMP REG USER NR.                  */
     1131       14    1   DCL   SSS$RG ENTRY;                     /* BMAP CLIMB ROUTINE                 */
     1132       15    1   DCL   SSR$REGUE ENTRY(4);               /* REPORT USER EVENT                  */
     1133       16    1   DCL   SSS$SENT ENTRY;                   /* SCHEDULER ENTRY POINT              */
     1134       17    1   DCL    SSC$MON ENTRY;                   /* ACCOUNT MON EXECUTION TIME*/
     1135       18    1   DCL HFC$ASSOCCLR ENTRY(3);
     1136       19        /*                                                                    */
     1137       20    1   DCL   S_PNO SBIN SYMREF;
     1138       21    1   DCL   S_CUN UBIN(36) SYMREF;            /* CURRENT USER NUMBER                */
     1139       22    1   DCL   S_CNODE UBIN SYMREF;              /* CURRENT OVERLAY NODE               */
     1140       23    1   DCL   B$SEGTBL$ PTR SYMREF;             /* POINTER TO OVERLAY TABLE           */
     1141       24    1   DCL   B$MPT$ PTR SYMREF;                /* POINTER TO MON PAGE TABLE          */
     1142       25        /**/
     1143       26    1   DCL 1 SEGTBL ALIGNED BASED(B$SEGTBL$),
     1144       27    1         2 * UBIN HALF HALIGNED,
     1145       28    1         2 MPTOFFSET UBIN HALF HALIGNED,
     1146       29    1         2 NODES(0:0) ALIGNED,
     1147       30    1           3 OFFSET UBIN HALF HALIGNED,    /* OFFSET TO SEGMENT ENTRY            */
     1148       31    1           3 SIZE UBIN HALF HALIGNED;      /* SIZE OF PT IN BYTES                */
     1149       32
PL6.E3A0      #002=SSR$REG File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:59 Page:211  
     1150       33    1   DCL 1 SEGENT ALIGNED,
     1151       34    1         2 OFFSET UBIN HALF HALIGNED,
     1152       35    1         2 SIZE UBIN HALF HALIGNED;
     1153       36
     1154       37    1   DCL CNODE UBIN;
     1155       38
     1156       39    1   DCL PTSTRING CHAR(SEGENT.SIZE) BASED;
     1157       40        %PLIST;
     1158       41        %INCLUDE HF_LOCK_C;
     1159       55        %INCLUDE HF_DATA_R;
     1160       98        %INCLUDE SS_SCHED_C;
     1161      331        %INCLUDE SS_SCHED_R;
     1162      374        %INCLUDE B$USER;
     1163      590        %INCLUDE B_STRINGS_C;
     1164      719        %B$USERREFS;
     1165      723        /*                                                                    */
     1166      724    2           DO INHIBIT;

     1167      725    2              CALL SSC$MON;

    725  0 000002   000002 631600 xsym               EPPR1 ! B_VECTNIL+2
         0 000003   000000 701200 xent               TSX1  ! SSC$MON
         0 000004   000000 011200                    NOP   ! 0

     1168      726    2              USR=S_CUN;

    726  0 000005   000000 235200 xsym               LDA   ! S_CUN
         0 000006   000033 735200                    ALS   ! 27
         0 000007   200006 755300                    STA   ! USR,,AUTO

     1169      727                   %LOCK (G#=S_SCHDGATE);

    728  0 000010   000000 630600 1                  EPPR0 ! 0
         0 000011   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         0 000012   000000 701200 xent               TSX1  ! HFC$LOCK
         0 000013   000000 011200                    NOP   ! 0

PL6.E3A0      #002=SSR$REG File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:59 Page:212  
     1170      730    2              CALL SSR$REGUE(EVENT,USR,FCN,ADDR(TIME));

    730  0 000014   200005 236300                    LDQ   ! @TIME,,AUTO
         0 000015   200012 756300                    STQ   ! CNODE+2,,AUTO
         0 000016   200012 630700                    EPPR0 ! CNODE+2,,AUTO
         0 000017   200017 450700                    STP0  ! CNODE+7,,AUTO
         0 000020   200004 236300                    LDQ   ! @FCN,,AUTO
         0 000021   200016 756300                    STQ   ! CNODE+6,,AUTO
         0 000022   200006 631700                    EPPR1 ! USR,,AUTO
         0 000023   200015 451700                    STP1  ! CNODE+5,,AUTO
         0 000024   200003 236300                    LDQ   ! @EVENT,,AUTO
         0 000025   200014 756300                    STQ   ! CNODE+4,,AUTO
         0 000026   200014 630700                    EPPR0 ! CNODE+4,,AUTO
         0 000027   000022 631600 xsym               EPPR1 ! B_VECTNIL+18
         0 000030   000000 701200 xent               TSX1  ! SSR$REGUE
         0 000031   000000 011200                    NOP   ! 0

    726  0 000032                       RG00         null
     1171      731    2   RG00:      ;
     1172      732    2              S_CUN=0;                     /* DELETE CURRENT USER                */

    732  0 000032   000000 450200 xsym               STZ   ! S_CUN

     1173      733    2              S_PCU(S_PNO)=0;

    733  0 000033   000000 720200 xsym               LXL0  ! S_PNO
         0 000034   000000 450210 xsym               STZ   ! S_PCU,X0

     1174      734    2              CNODE=S_CNODE;               /* SAVE CURRENT NODE NUMBER           */

    734  0 000035   000000 235200 xsym               LDA   ! S_CNODE
         0 000036   200010 755300                    STA   ! CNODE,,AUTO

     1175      735    2              CALL SSS$RG;                 /* BLOCK USER, RETURNS AFTER UNBLOCK  */

    735  0 000037   000002 631600 xsym               EPPR1 ! B_VECTNIL+2
         0 000040   000000 701200 xent               TSX1  ! SSS$RG
PL6.E3A0      #002=SSR$REG File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:59 Page:213  
         0 000041   000000 011200                    NOP   ! 0

     1176      736    3              IF CNODE~=S_CNODE THEN DO;   /* RELOAD OVERLAY                     */

    736  0 000042   200010 236300                    LDQ   ! CNODE,,AUTO
         0 000043   000000 116200 xsym               CMPQ  ! S_CNODE
         0 000044   000110 600200 0                  TZE   ! s:743

     1177      737    3                    SEGENT=SEGTBL.NODES(CNODE-1);

    737  0 000045   000000 470600 xsym               LDP0  ! B$SEGTBL$
         0 000046   000000 236306                    LDQ   ! 0,QL,PR0
         0 000047   200007 756300                    STQ   ! SEGENT,,AUTO

     1178      738    3                    PINCRC(B$MPT$,SEGTBL.MPTOFFSET)->PTSTRING=PINCRC(B$SEGTBL$,SEGENT.
               738                             OFFSET)->PTSTRING;

    738  0 000050   000000 236300                    LDQ   ! 0,,PR0
         0 000051   777777 376207                    ANQ   ! -1,DL
         0 000052   200007 720300                    LXL0  ! SEGENT,,AUTO
         0 000053   200007 235300                    LDA   ! SEGENT,,AUTO
         0 000054   000022 771200                    ARL   ! 18
         0 000055   000000 471600 xsym               LDP1  ! B$MPT$
         0 000056   040146 100745                    MLR   ! fill='040'O
         0 000057   000000 000010                    ADSC9   0,A,PR0                  cn=0,n=*X0
         0 000060   100000 000010                    ADSC9   0,Q,PR1                  cn=0,n=*X0

     1179      739    3                    S_CNODE=CNODE;

    739  0 000061   200010 236300                    LDQ   ! CNODE,,AUTO
         0 000062   000000 756200 xsym               STQ   ! S_CNODE

     1180      740    3                    CALL HFC$ASSOCCLR (%MONWSQ,SEGTBL.MPTOFFSET/4,SEGENT.SIZE/4);

    740  0 000063   000000 470600 xsym               LDP0  ! B$SEGTBL$
         0 000064   000000 236300                    LDQ   ! 0,,PR0
         0 000065   777777 376207                    ANQ   ! -1,DL
PL6.E3A0      #002=SSR$REG File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:59 Page:214  
         0 000066   000002 772200                    QRL   ! 2
         0 000067   200012 756300                    STQ   ! CNODE+2,,AUTO
         0 000070   200007 236300                    LDQ   ! SEGENT,,AUTO
         0 000071   777777 376207                    ANQ   ! -1,DL
         0 000072   000002 772200                    QRL   ! 2
         0 000073   200012 235300                    LDA   ! CNODE+2,,AUTO
         0 000074   200013 755300                    STA   ! CNODE+3,,AUTO
         0 000075   200014 756300                    STQ   ! CNODE+4,,AUTO
         0 000076   200014 631700                    EPPR1 ! CNODE+4,,AUTO
         0 000077   200017 451700                    STP1  ! CNODE+7,,AUTO
         0 000100   200013 633700                    EPPR3 ! CNODE+3,,AUTO
         0 000101   200016 453700                    STP3  ! CNODE+6,,AUTO
         0 000102   000001 236200 1                  LDQ   ! 1
         0 000103   200015 756300                    STQ   ! CNODE+5,,AUTO
         0 000104   200015 630700                    EPPR0 ! CNODE+5,,AUTO
         0 000105   000021 631600 xsym               EPPR1 ! B_VECTNIL+17
         0 000106   000000 701200 xent               TSX1  ! HFC$ASSOCCLR
         0 000107   000000 011200                    NOP   ! 0

     1181      741    3                 END;

     1182      742                                                /**/
     1183      743    2              IF S$CU$->B$U.ASYNCH & ~%U_RESET

    743  0 000110   000003 236200 xsym               LDQ   ! B_VECTNIL+3
         0 000111   000027 676200 xsym               ERQ   ! B_VECTNIL+23
         0 000112   000000 470600 xsym               LDP0  ! S$CU$
         0 000113   000001 376300                    ANQ   ! 1,,PR0
         0 000114   000116 600200 0                  TZE   ! s:745

     1184      744    2              THEN ALTRETURN;

    744  0 000115   000000 702200 xent               TSX2  ! X66_AALT

     1185      745    2              ELSE RETURN;

    745  0 000116   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #002=SSR$REG File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:59 Page:215  

     1186      746    2           END;                            /* END INHIBIT                        */

    746  0 000117   000122 710000 0                  TRA     s:753

     1187      747        /*                                                                    */
     1188      748        /*         BLOCK SLAVE USER FOR MASTER                                */
     1189      749        /*         CONTINUE MASTER USER                                       */
     1190      750        /*                                                                    */
     1191      751    1   SSR$MASTER: ENTRY ALTRET;

    751  0 000120   000000 700200 xent  SSR$MASTER   TSX0  ! X66_AUTO_3
         0 000121   000020 000003                    ZERO    16,3

     1192      752    2           DO INHIBIT;

     1193      753    2              CALL SSC$MON;

    753  0 000122   000002 631600 xsym               EPPR1 ! B_VECTNIL+2
         0 000123   000000 701200 xent               TSX1  ! SSC$MON
         0 000124   000000 011200                    NOP   ! 0

     1194      754                   %LOCK (G#=S_SCHDGATE);

    755  0 000125   000000 630600 1                  EPPR0 ! 0
         0 000126   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         0 000127   000000 701200 xent               TSX1  ! HFC$LOCK
         0 000130   000000 011200                    NOP   ! 0

     1195      757    2              CALL SSR$REGUE(%SS_MP);      /* BLOCK FOR MASTER                   */

    757  0 000131   000003 630600 1                  EPPR0 ! 3
         0 000132   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         0 000133   000000 701200 xent               TSX1  ! SSR$REGUE
         0 000134   000000 011200                    NOP   ! 0

     1196      758    2              GOTO RG00;
PL6.E3A0      #002=SSR$REG File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:59 Page:216  

    758  0 000135   000032 710200 0                  TRA   ! RG00

     1197      759    2           END;                            /* END INHIBIT                        */

     1198      760    1   END;

    760  0 000136   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   1     000   000000 006000   000003 006000   000000 000044   000002 006000    ...........$....

PL6.E3A0      #002=SSR$REG File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:59 Page:217  
--  Include file information  --

   B_STRINGS_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRLD_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure SSR$REG.
PL6.E3A0      #002=SSR$REG File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:59 Page:218  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @EVENT                     4-0-0/w PTR         r     1 @FCN
     5-0-0/w PTR         r     1 @TIME                     10-0-0/w UBIN        r     1 CNODE
    *0-0-0/w UBIN        r     1 EVENT                     *0-0-0/b UBIN(9)     r     1 FCN
     7-0-0/w STRC        r     1 SEGENT                    *0-0-0/w UBIN        r     1 TIME
     6-0-0/w UBIN(9)     r     1 USR

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$MPT$                     0-0-0/w PTR         r     1 B$SEGTBL$
     0-0-0/w PTR         r     1 S$CU$                      0-0-0/w UBIN        r     1 S_CNODE
     0-0-0/w UBIN        r     1 S_CUN                      0-0-0/w SBIN        r     1 S_PCU(0:7)
     0-0-0/w SBIN        r     1 S_PNO                      0-0-0/b BIT (72)    r     1 S_SCHDGATE

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(576)   r     1 B$U                        0-0-0/c ACHR        r     1 PTSTRING
     0-0-0/w STRC(72)    r     1 SEGTBL


   Procedure SSR$REG requires 95 words for executable code.
   Procedure SSR$REG requires 16 words of local(AUTO) storage.
PL6.E3A0      #002=SSR$REG File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:59 Page:219  

    No errors detected in file SSR$RUE.:E05TSI    .
PL6.E3A0      #002=SSR$REG File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:59 Page:220  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=SSR$REG File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:59 Page:221  
          MINI XREF LISTING

B$DO.ECCINFO
       525**DCL       526--REDEF
B$MPT$
        24**DCL       738>>ASSIGN
B$SEGTBL$
        23**DCL        26--IMP-PTR   737>>ASSIGN    738>>ASSIGN    738>>ASSIGN    740>>CALL
B$U.ASYNCH
       462**DCL       743>>IF
B$U.MISC
       504**DCL       505--REDEF
B$USER.MISC
       580**DCL       581--REDEF
CNODE
        37**DCL       734<<ASSIGN    736>>IF        737>>ASSIGN    739>>ASSIGN
EVENT
         9**DCL         7--PROC      730<>CALL
FCN
        10**DCL         7--PROC      730<>CALL
HFC$ASSOCCLR
        18**DCL-ENT   740--CALL
HFC$LOCK
        54**DCL-ENT   728--CALL      755--CALL
PTSTRING
        39**DCL       738<<ASSIGN    738>>ASSIGN
RG00
       726**LABEL     758--GOTO
S$CU$
       720**DCL       743>>IF
SEGENT
        33**DCL       737<<ASSIGN
SEGENT.OFFSET
        34**DCL       738>>ASSIGN
PL6.E3A0      #002=SSR$REG File=SSR$RUE.:E05TSI                                  WED 07/30/97 05:59 Page:222  
SEGENT.SIZE
        35**DCL        39--IMP-SIZ   738>>ASSIGN    738>>ASSIGN    740>>CALL
SEGTBL.MPTOFFSET
        28**DCL       738>>ASSIGN    740>>CALL
SEGTBL.NODES
        29**DCL       737>>ASSIGN
SSC$MON
        17**DCL-ENT   725--CALL      753--CALL
SSR$REGUE
        15**DCL-ENT   730--CALL      757--CALL
SSS$RG
        14**DCL-ENT   735--CALL
S_CNODE
        22**DCL       734>>ASSIGN    736>>IF        739<<ASSIGN
S_CUN
        21**DCL       726>>ASSIGN    732<<ASSIGN
S_PCU
       360**DCL       733<<ASSIGN
S_PNO
        20**DCL       733>>ASSIGN
S_SCHDGATE
       372**DCL       728<>CALL      755<>CALL
TIME
        11**DCL         7--PROC      730--CALL
USR
        13**DCL       726<<ASSIGN    730<>CALL
