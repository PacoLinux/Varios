
     DIRECTORY AND SEGMENT LIST  (OBJECT UNIT NAME '')

      * SYMDEF *        GLOBAL NAME               SEGMENT  OFFSET      ACCESS ATTRIBUTES
     1  X9RR   'X9RR'                              .X9RR       0          R  W  E  L  U
     2  X9QQ   'X9QQ'                              .X9RR      17          R  W  E  L  U

      * SYMREF *        GLOBAL NAME                                    ACCESS ATTRIBUTES
     3  X8ER   'X8ER$ERROR'                                               R  W  E  L  U
     4  X9DL   'X9DL'                                                     R  W  E  L  U
     5  X9DX   'X9DX'                                                     R  W  E  L  U
     6  X9SQ   'X9SQ'                                                     R  W  E  L  U
     7  X9DS   'X9DS'                                                     R  W  E  L  U

      * SECTION *          SIZE          KIND
     8  .X9RR               210           CODE
     9  .X9RR.               44           DATA


     PROGRAM BREAK         254

                                      1 *M*    X9RR       POWER EVALUATORS FOR COMMON LIBRARY
                                      2 *T***********************************************************
                                      3 *T*                                                         *
                                      4 *T* COPYRIGHT (C) BULL HN INFORMATION SYSTEMS INC., 1997    *
                                      5 *T*                                                         *
                                      6 *T***********************************************************
                                      7 *

                                                                    REAL POWER FUNCTION
                        000000        9        SECT    .X9RR,CODE
                                     10 *
                                     11 *
                                     12 *      RADX IS A MIRROR OF BIT 32 OF THE INDICATORS, I.E.
                                     13 *              RADX EQU 0 FOR BINARY FLOATING POINT,
                                     14 *              RADX EQU 1 FOR HEXADECIMAL FLOATING OX.
                                     15 *
                        000001       16 RADX   EQU     1               0 FOR BINARY, 1 FOR OX
                                     17 *
                                     18 *P*    NAME:   X9RR
                                     19 *P*    PURPOSE:  TO PROVIDE THE EVALUATORS FOR THE GENERAL POWER
                                     20 *P*       FUNCTIONS OF TWO ARGUMENTS.
                                     21 *P*    DESCRIPTION:  AFTER PROVIDING FOR SPECIAL CASES, X**Y IS
                                     22 *P*       EVALUATED AS 2.0**(Y*LOG2(X)).
                                     23 *P*    REFERENCE:  SEE ALSO THE COMMON LIBRARY PROGRAMS FOR
                                     24 *P*       EVALUATION OF LOGARITHM AND EXPONENTIAL FUNCTIONS.
                                     25 *
                                     26 *
                                     27 *D*    NAME:   X9RR      - SINGLE PRECISION POWER
                                     28 *D*    ENTRY:  X9QQ      - DOUBLE PRECISION POWER
                                     29 *D*    CALL:  THESE ENTRIES REQUIRE TWO FLOATING POINT ARGUMENTS,
                                     30 *D*       X IN THE EAQ, AND Y IN DATA STORAGE POINTED TO BY POINTER
                                     31 *D*       REGISTER 7.  THESE ARGUMENTS NEED NOT BE NORMALIZED.
                                     32 *D*       INDEX REGISTER 1 IS USED TO LINK WITH A SKIPPING RETURN
                                     33 *D*       IF NO ERROR IS DETECTED.  THE NON-SKIPPING RETURN IS EFFECTED
                                     34 *D*       WITH AN ERROR CODE IN INDEX REGISTER 0 FOR THREE ERROR
                                     35 *D*       CONDITIONS.  ALL RETURNS PROVIDE A NORMALIZED RESULT IN EAQ.
                                     36 *D*    ENVIRONMENT:  THE PRESENT ROUTINES RUN WITH THE INHIBIT ON AT TIMES.
                                     37 *D*    INPUT:  X IN EAQ;  Y IN DATA STORAGE POINTED TO BY THE AR7,DR7
                                     38 *D*       PAIR.
                                     39 *D*    OUTPUT:  A NORMALIZED FLOATING POINT RESULT IN EAQ.
                                     40 *D*    RANGE:  THE VALUES PRODUCED BY THE PRESENT ROUTINES COVER THE
                                     41 *D*       ENTIRE RANGE PRODUCED BY THE EXPONENTIAL ROUTINES.
                                     42 *D*    SCRATCH:  INDEX REGISTERS 0, 2, & 3
                                     43 *D*    DESCRIPTION:  X IS SAVED IN DETAIL.  Y IS OBTAINED, SCALED &

                                                                    REAL POWER FUNCTION
                                     44 *D*       NORMALIZED.  X IS RETRIEVED;  AND, IF NEGATIVE, Y IS CHECKED
                                     45 *D*       TO BE AN INTEGER.  IF ODD, THE SIGN OF THE RESULT IS CONDITIONED
                                     46 *D*       TO BE NEGATIVE.  THE BASE 2 LOGARITHM OF THE ABSOLUTE VALUE
                                     47 *D*       OF X IS OBTAINED AND THIS RESULT IS MULTIPLIED BY Y WITH THAT
                                     48 *D*       RESULT USED AS AN ARGUMENT TO THE POWER OF 2 EVALUATOR.
                                     49 *D*       FINALLY, THE SIGN IS SET, IF REQUIRED.
                                     50 *D*    ACCURACY:  THE ALGORITHMS EMPLOYED ARE CAPABLE OF PRODUCING
                                     51 *D*       RESULTS CORRECT TO MORE THAN THE PRECISION OF THE HARDWARE
                                     52 *D*       DATA TYPES.  THE USER MUST BE AWARE, HOWEVER, THAT HEXA-
                                     53 *D*       DECIMAL SCALING MAY RESULT IN UP TO 3 NON-SIGNIFICANT
                                     54 *D*       LEADING BITS IN THE MANTISSA.
                                     55 *D*       THIS HEXADECIMAL NORMALIZATION EFFECT CAN TEND TO CREEP TOWARD
                                     56 *D*       SLIGHTLY GREATER SEVERITY, PARTICULARLY WHEN DIVISION IS EMPLOYED
                                     57 *D*       IN THE EVALUATION.  THUS, RELATIVE ERRORS OF MORE THAN 2**-60
                                     58 *D*       MAY APPEAR IN DOUBLE PRECISION RESULTS.  DOUBLE PRECISION
                                     59 *D*       OPERATIONS ARE EMPLOYED FOR SINGLE PRECISION EVALUATIONS SO
                                     60 *D*       THAT THIS PROBLEM DOES NOT AFFECT THESE FUNCTIONS.
                                     61 *D*       UNNORMALIZED ARGUMENTS ARE PROCESSED, BUT CAN RESULT IN
                                     62 *D*       LOSS OF SIGNIFICANCE, PARTICULARLY FOR LARGE MAGNITUDE
                                     63 *D*       ARGUMENTS .
                                     64 *D*       THE RELATIVE ERROR FOR DOUBLE PRECISION EVALUATIONS IN BINARY
                                     65 *D*       RADIX FORM IS USUALLY LESS THAN 2**-60, EXCEPT IN NEIGHBORHOODS
                                     66 *D*       OF GREAT EFFECT OF AN ARGUMENT ERROR.  FOR SINGLE PRECISION
                                     67 *D*       EVALUATIONS WITH EITHER HEXADECIMAL OR BINARY RADIX EXPONENT,
                                     68 *D*       THE MAXIMUM RELATIVE ERROR WILL BE LESS THAN 2**-27.
                                     69 *D*       RESULTS ARE NOT ROUNDED IN THE EAQ.
                                     70 *D*    TIMING:  THESE FIGURES ARE APPROXIMATE TIMINGS FOR THE 6680.
                                     71 *D*       EVALUATION                SINGLE         DOUBLE
                                     72 *D*
                                     73 *D*       NORMAL CASE                155            200
                                     74 *D*       ALL TIMING QUOTATIONS ARE IN MICROSECONDS.
                                     75 *D*    ERROR CONDITIONS & SPECIAL CASES:  FOR ARGUMENTS WHICH WOULD
                                     76 *D*       CAUSE OVERFLOW, AN ERROR RETURN IS EFFECTED WITH AN ERROR
                                     77 *D*       CODE OF 12 AND A RESULT OF A SIGNED VERY LARGE MAGNITUDE
                                     78 *D*       VALUE.  ZERO TO A NON-POSITIVE POWER RESULTS IN AN ERROR

                                                                    REAL POWER FUNCTION
                                     79 *D*       RETURN WITH AN ERROR CODE OF 13 AND A VERY LARGE POSITIVE
                                     80 *D*       VALUE.  NEGATIVE TO A NON-INTEGRAL POWER RESULTS IN AN ERROR
                                     81 *D*       RETURN WITH A CODE OF 14 AND A VERY LARGE POSITIVE VALUE.

                                                                    REAL POWER FUNCTION
                                     83 *
                                     84 *
                                     85 *
                        000000       86        ENTREF  (X8ER,X8ER$ERROR)  ERROR OUTPUT ROUTINE
                                     87 *
                                     88 *
                                     90 *
                                     91 *
                        000000       92        ENTREF  X9DL           SPECIAL LOG2 EVALUATOR(DOUBLE PREC)
                        000000       93        ENTREF  X9DX          SPECIAL POWER OF 2 EVALUATOR(DOUBLE PREC)
                        000000       94        ENTDEF  X9RR           SINGLE PRECISION REAL TO REAL POWER
                        000000       95        ENTDEF  X9QQ           DOUBLE PRECISION REAL TO REAL POWER
                        000000       96        ENTREF  X9SQ            SQUARE ROOT - SINGLE PRECISION
                        000000       97        ENTREF  X9DS           SQUARE ROOT - DOUBLE PRECISION

                                                                    REAL POWER FUNCTION
                                     99 *
                                    100 *V*
                                    101 *V*
                                    102 *V*
                                    103 *V*                    X9RR_ENTRY
                                    104 *V*     THIS ENTRY IS FOR X9RR.  IT TESTS FOR A SQUARE ROOT
                                    105 *V*     AND IF FOUND IT WILL CALL SQRT. THIS ALSO STORES REG-
                                    106 *V*     ISTERS AND ARGUMENTS.
                                    107 *V*
                                    108 *V*
                        000000      109 X9RR   NULL                SINGLE PRECISION REAL TO REAL POWER
      000000 000020 7530 00 010NN   110        SREG    REGS        SAVE REGISTERS
      000001 000000 2230 03         111        LDX3    =0,DU           INDICATE SINGLE PRECISION
      000002 000006 4574 00 010NN   112        STP7    PR7
      000003 000007 4564 00 010NN   113        STP6    PR6
      000004 000010 4554 00 010NN   114        STP5    PR5
      000005 000000 4775 00         115        LDP7    0,,0            PR7 POINTS TO THE FIRST ARG
      000006 000001 4765 00         116        LDP6    1,,0            PR6 POINTS TO THE SECOND ARG
      000007 000002 4755 00         117        LDP5    2,,0            PR5 POINTS TO THE RESULT ARG
      000010 700000 4311 00         118        FLD     0,,7
      000011 000004 4560 00 010NN   119        STE     EXPON         SAVE 1ST ARGUMENT(X)
      000012 000000 7570 00 010NN   120        STAQ    ARGX             IN DETAIL
      000013 600000 4311 00         121        FLD     0,,6            OBTAIN 2ND ARGUMENT(Y)
      000014 000041 5150 00 010NN   122        FCMP    SQROOT          IF Y IS 1/2 THEN IT'S A SQ. ROOT
      000015 000162 6000 00 010NN   123        TZE     SQRT1
      000016 000036 7100 00 010NN   124        TRA     GOONA           ENTER EVALUATOR
                                    125 *
                                    126 *
                                    127 *V*
                                    128 *V*
                                    129 *V*                    X9QQ_ENTRY
                                    130 *V*     THIS ENTRY IS FOR X9QQ( DOUBLE PRECISION ).  THIS ALSO
                                    131 *V*     TESTS FOR A SQUARE ROOT AND CALLS X9DS IF FOUND.  THIS
                                    132 *V*     SAVES ALL REGISTERS AND ARGUMENTS.
                                    133 *V*

                                                                    REAL POWER FUNCTION
                                    134 *V*
                        000017      135 X9QQ   NULL                DOUBLE PRECISION REAL TO REAL POWER
      000017 000020 7530 00 010NN   136        SREG    REGS        SAVE REGISTERS
      000020 000002 2230 03         137        LDX3    =2,DU           INDICATE DOUBLE PRECISION
      000021 000006 4574 00 010NN   138        STP7    PR7
      000022 000007 4564 00 010NN   139        STP6    PR6
      000023 000010 4554 00 010NN   140        STP5    PR5
      000024 000000 4775 00         141        LDP7    0,,0            PR7 POINTS TO THE FIRST ARG X
      000025 000001 4765 00         142        LDP6    1,,0            PR6 POINTS TO THE SECOND ARG Y
      000026 000002 4755 00         143        LDP5    2,,0            PR5 POINTS TO THE RESULT ARG
      000027 700000 4331 00         144        DFLD    0,,7            LOAD X INTO EAQ
      000030 000004 4560 00 010NN   145        STE     EXPON         SAVE 1ST ARGUMENT(X)
      000031 000000 7570 00 010NN   146        STAQ    ARGX             IN DETAIL
      000032 600000 4331 00         147        DFLD    0,,6            OBTAIN 2ND ARGUMENT(Y)
      000033 000074 6000 00 010NN   148        TZE     EXPZRO          IS EXPONENT IS ZERO?
      000034 000042 5170 00 010NN   149        DFCMP   SQRTDB          IF Y IS 1/2 THEN IT'S A SQ. ROOT
      000035 000155 6000 00 010NN   150        TZE     SQRT2
                                    151 *
      000036 000005 4500 00 010NN   152 GOONA  STZ     SINFLG         ASSUME POSITIVE RESULT
                                    153 *
                                    154 *
      000037 643740 4250 03         158        FCMG    =O643740,DU
      000040 000042 6050 00 010NN   159        TPL     GOONA2          JUMP IF BIGGER
      000041 640000 4110 03         160        LDE     =O640000,DU     AS GOOD AS ANY TO PRECLUDE UNDERFLOW
      000042 400000 4750 03         161 GOONA2 FAD     =O400000,DU     NORMALIZE Y
      000043 303740 4250 03         165        FCMG    =O303740,DU
      000044 000046 6040 00 010NN   166        TMI     GOONA3          JUMP IF SMALLER
      000045 300000 4110 03         167        LDE     =O300000,DU     AS GOOD AS ANY TO PRECLUDE OVERFLOW
      000046 000002 4570 00 010NN   168 GOONA3 DFST    ARGY            SAVE TREATED Y
      000047 000000 2370 00 010NN   169        LDAQ    ARGX            RECALL X
      000050 000121 6044 00 010NN   170        TMOZ    GOON2           REQUIRES SPECIAL TREATMENT
      000051 000004 4110 00 010NN   171        LDE     EXPON         RECALL EXPONENT OF X
                                    172 *
                                    173 *V*
                                    174 *V*

                                                                    REAL POWER FUNCTION
                                    175 *V*                    GET_LOG
                                    176 *V*     X3 IS ZERO IF THE EXPONENTIATION IS SINGLE PRECISION,
                                    177 *V*     TWO IF DOUBLE.  THAT IS TESTED AND THE APPROPRIATE
                                    178 *V*     LOG ROUTINE ( SINGLE OR DOUBLE ) IS INVOKED.
                                    179 *V*
                                    180 *V*
                        000052      181 GOOND  NULL
                                    182 *
      000052 000000 7010 00 020NN   183        TSX1    X9DL           DOUBLE PRECISION LOG (BASE 2)
      000053 000000 0110 07         184        NOP     0,DL
                                    185 *
                        000054      186 OUT1   NULL
                                    187 *
                                    188 *V*
                                    189 *V*
                                    190 *V*                    TIMES_Y_AND_OVERFLOW_TEST
                                    191 *V*     THE ALGORITHM == X ** Y = EXP( Y * LOG(X)) == STATES
                                    192 *V*     Y MUST BE MULTIPLIED AFTER THE LOG IS TAKEN, THIS IS
                                    193 *V*     HERE.  THEN OVERFLOW IS TESTED, IF FOUND CONTROL BRAN-
                                    194 *V*     CHES TO HANDLE THAT.
                                    195 *V*
                                    196 *V*
      000054 000002 4630 00 010NN   197        DFMP    ARGY            Y*LOG2(X)
      000055 004774 5150 03         205        FCMP    =O004774,DU     508*.5
      000056 000102 6050 00 010NN   206        TPL     OVERFL           OVERFLOW
      000057 000014 5150 00 010NN   207        FCMP    UNFLW        -512.5E0*.5 CHECK FOR
      000060 000113 6040 00 010NN   208        TMI     UNDER                   UNDERFLOW
      000061 000000 1030 03         210        CMPX3   =0,DU          IS IT SINGLE OR DOUBLE PRECISION ?
                                    211 *V*
                                    212 *V*
                                    213 *V*                    INVOKE_EXP
                                    214 *V*     X3 CONTAINS ZERO IF IT IS SINGLE PRECISION, THAT IS
                                    215 *V*     TESTED TO DETERMINE WHICH ROUTINE IS CALLED ( SINGLE
                                    216 *V*     OR DOUBLE ).  UPON COMPLETING EXP, ALL THAT MUST BE
                                    217 *V*     DONE IS TO SEE IF THE ANSWER MUST BE NEGATED.  THIS

                                                                    REAL POWER FUNCTION
                                    218 *V*     DONE TESTING SINFLG.
                                    219 *V*
                                    220 *V*
      000062 000066 6000 00 010NN   221        TZE     SNGLE2
      000063 000000 7010 00 020NN   222        TSX1    X9DX         DOUBLE PRECISION EXP
      000064 000000 0110 07         223        NOP     0,DL
      000065 000070 7100 00 010NN   224        TRA     OUT2
                                    225 *
                        000066      226 SNGLE2 NULL
                                    227 *
      000066 000000 7010 00 020NN   228        TSX1    X9DX        SINGLE PRECISION EXP
      000067 000000 0110 07         229        NOP     0,DL
                                    230 *
                        000070      231 OUT2   NULL
                                    232 *
      000070 000005 2340 00 010NN   233        SZN     SINFLG         CHECK THE SIGN FLAG
      000071 000166 6000 00 010NN   234        TZE     EXIT             OUT IF POSITIVE
      000072 000000 5130 00         235        FNEG                    WOULD U BELIEVE NEGATIVE
      000073 000166 7100 00 010NN   236        TRA     EXIT            NORMAL RETURN

                                                                    REAL POWER FUNCTION
                                    238 *
                                    239 *V*    EXPONENT_IS_ZERO
                                    240 *V*         IF THE EXPONENT IS ZERO AND THE BASE IS NON-ZERO THEN
                                    241 *V* SET THE ANSWER TO 1.
                                    242 *V*
                                    243 *
      000074 000000 2370 00 010NN   244 EXPZRO LDAQ    ARGX                LOOK AT BASE (0 ** 0?)
      000075 000100 6000 00 010NN   245        TZE     .ZERO               BASE = 0
      000076 002040 4310 03         246        FLD     =O002040,DU         NON-ZERO ** 0 = 1
      000077 000166 7100 00 010NN   247        TRA     EXIT
      000100 400000 4310 03         248 .ZERO  FLD     =O400000,DU         0 ** 0 = 0
      000101 000166 7100 00 010NN   249        TRA     EXIT
                        000102      250 OVERFL NULL                    BAD NEWS
                                    251 *
                                    252 *
                                    253 *E*    ERROR:  OVFLOW
                                    254 *E*    MESSAGE:  ERROR IN PWR;  MAGNITUDE OF ARGUMENT TOO LARGE.
                                    255 *E*       OVERFLOW;  RESULT = SIGNED MAXIMUM.
                                    256 *E*    DESCRIPTION:  THE VALUE OF THE ARGUMENT TO AN EXPONENTIAL CALL
                                    257 *E*       IS SO LARGE THAT THE RESULT WOULD OVERFLOW.
                                    258 *
                                    259 *
                        000102      260 ERRO   NULL
      000102 000012 4310 00 010NN   261        FLD     MAXNUM          ERROR RESULT IS MAX POSITIVE
      000103 000030 6314 00 010NN   262        EPPR1   NUMARG
      000104 000035 6304 00 010NN   263        EPPR0   PTBLK1
      000105 000000 7010 00 020NN   264        TSX1    X8ER
      000106 000000 0110 07         265        NOP     0,DL
      000107 000005 2340 00 010NN   266        SZN     SINFLG         CHECK THE SIGN FLAG
      000110 000166 6000 00 010NN   267        TZE     EXIT
      000111 000000 5130 00         268        FNEG                    WOULD U BELIEVE NEGATIVE?
      000112 000166 7100 00 010NN   269        TRA     EXIT             NORMAL RETURN TO CALLING ROUTINE
                                    270 *
                                    271 *
                                    272 *V*

                                                                    REAL POWER FUNCTION
                                    273 *E*
                                    274 *E*           ERROR: UNDRFLOW
                                    275 *E*         MESSAGE: UNDERFLOW IN EXPONENTIATION.  EALUE SET TO
                                    276 *E*                  ZERO.
                                    277 *E*     DESCRIPTION: THE VALUE OF THE EXPRESSION IS SMALLER THAN
                                    278 *E*                  (-512E0)*.5, WHICH IS TOO SMALL FOR THE MACHINE.
                                    279 *E*
                                    280 *E*
                        000113      281 UNDER  NULL
      000113 000030 6314 00 010NN   282        EPPR1   NUMARG
      000114 000036 6304 00 010NN   283        EPPR0   PTBLK2
      000115 000000 7010 00 020NN   284        TSX1    X8ER
      000116 000000 0110 07         285        NOP     0,DL
      000117 400000 4310 03         286 SETZER FLD     =O400000,DU     UNDERFLOW, SET TO ZERO
      000120 000166 7100 00 010NN   287        TRA     EXIT             NORMAL RETURN
                                    288 *
                                    289 *
                                    290 *V*
                                    291 *V*
                                    292 *V*                    ZERO_OR_NEGATIVE
                                    293 *V*     IF THE BASE IS NEGATIVE A WHOLE DIFFERENT PROBLEM
                                    294 *V*     EXISTS WHICH IS HANDLED THROUGH GOON3.  IF IT IS
                                    295 *V*     ZERO, THEN THE POWER IS TESTED FOR ZERO.  IF THE
                                    296 *V*     POWER IS >= ZERO THEN ZERO IS THE ANSWER AND IT'S
                                    297 *V*     SENT ON ITS WAY.  IF THE POWER IS NEGATIVE IT IS
                                    298 *V*     THE SAME AS :
                                    299 *V*                   -POWER
                                    300 *V*                  --------
                                    301 *V*                    ZERO
                                    302 *V*
                                    303 *V*                    WHICH IS UNDEFINED, THEREFORE AN ERROR.
                                    304 *V*
                                    305 *V*
                        000121      306 GOON2  NULL
      000121 000131 6040 00 010NN   307        TMI     GOON3           PROBABLY BAD

                                                                    REAL POWER FUNCTION
      000122 000002 4300 00 010NN   308        FSZN    ARGY            CHECK SIGN OF Y
      000123 000117 6054 00 010NN   309        TPNZ    SETZER          0**POSITIVE = 0.0
                                    310 *
                                    311 *E*    ERROR:  ZERO_TO_NEG_POWER
                                    312 *E*    MESSAGE:  ERROR IN PWR;  ZERO TO NON-POSITIVE POWER.
                                    313 *E*       OVERFLOW;  RESULT = MAXIMUM.
                                    314 *E*    DESCRIPTION:  ZERO RAISED TO A NON-POSITIVE POWER RESULTS
                                    315 *E*       IN OVERFLOW.
                                    316 *
                                    317 *
                        000124      318 ERR13  NULL
      000124 000030 6314 00 010NN   319        EPPR1   NUMARG
      000125 000037 6304 00 010NN   320        EPPR0   PTBLK3
      000126 000000 7010 00 020NN   321        TSX1    X8ER
      000127 000000 0110 07         322        NOP     0,DL
      000130 000166 7100 00 010NN   323        TRA     EXIT             NORMAL RETURN
                                    324 *
                                    325 *
                                    326 *V*
                                    327 *V*
                                    328 *V*                    NEGATIVE_BASE
                                    329 *V*     THIS TESTS TO SEE IF THE POWER(BASE ALREADY KNOWN TO BE NEG)
                                    330 *V*     IS AN INTEGER OR NOT.  IF AN INTEGER THEN TRANSFER TO
                                    331 *V*     NEGATE THE BASE AND KEEP ON PROCESSING.  IF NOT TRY TO MAKE IT
                                    332 *V*     AN INTEGER, IF NOT THEN AN ERROR EXISTS.
                                    333 *V*
                                    334 *V*
                        000131      335 GOON3  NULL
                                    336 *
      000131 000002 4330 00 010NN   337        DFLD    ARGY            RECALL Y
      000132 047740 4250 03         339        FCMG    =O047740,DU     CHECK FOR GUARANTEED EVEN INTEGER
      000133 000151 6050 00 010NN   342        TPL     GOOONA          JUMP IF SO
      000134 042000 4350 03         344        UFA     =O042000,DU     SCALE HEX 17
      000135 000000 6200 06         347        EAX0    0,QL            FOR SETTING SIGN
      000136 000013 3760 00 010NN   349        ANQ     MASK            STRIP OFF LO 3 BITS

                                                                    REAL POWER FUNCTION
      000137 042000 4750 03         350        FAD     =O042000,DU     NORMALIZE
      000140 000002 5770 00 010NN   354        DFSB    ARGY            CHECK FOR INTEGER
      000141 000147 6000 00 010NN   355        TZE     GOON4           JUMP IF SO
                                    356 *
                                    357 *
                                    358 *E*    ERROR:  NEG_TO_NON_INTEGRAL
                                    359 *E*    MESSAGE:  ERROR IN PWR;  NEGATIVE TO NON-INTEGRAL POWER.
                                    360 *E*       OVERFLOW;  RESULT = MAXIMUM.
                                    361 *E*    DESCRIPTION:  NEGATIVE RAISED TO A NON-INTEGRAL POWER RESULTS
                                    362 *E*       IN OVERFLOW.
                                    363 *
                                    364 *
      000142 000030 6314 00 010NN   365        EPPR1   NUMARG
      000143 000040 6304 00 010NN   366        EPPR0   PTBLK4
      000144 000000 7010 00 020NN   367        TSX1    X8ER
      000145 000000 0110 07         368        NOP     0,DL
      000146 000166 7100 00 010NN   369        TRA     EXIT
                                    370 *
                                    371 *
                                    372 *V*
                                    373 *V*
                                    374 *V*                    NEGATE_BASE_AND_TRY_AGAIN
                                    375 *V*     THIS BASICALLY JUST NEGATES THE BASE AND CONTINUES ON
                                    376 *V*     PROCESSING, JUST AFTER SETTING THE SINFLG FOR LATER
                                    377 *V*     NEGATION AGAIN.
                                    378 *V*
                                    379 *V*
                        000147      380        NULL
                        000147      382 GOON4  NULL
                                    383 *
      000147 000010 3600 03         384        ANX0    =O000010,DU     LO INTEGER BIT
      000150 000005 4400 00 010NN   387        SXL0    SINFLG          FOR SIGN SETTING
      000151 000000 2370 00 010NN   388 GOOONA LDAQ    ARGX            -X IN DETAIL
      000152 000004 4110 00 010NN   389        LDE     EXPON           SO AS TO PREVENT
      000153 000000 5130 00         390        FNEG                        FIXED POINT OVERFLOW

                                                                    REAL POWER FUNCTION
      000154 000052 7100 00 010NN   391        TRA     GOOND           TRY TO GET RESULT
                                    392 *
                                    393 *V*
                                    394 *V*
                                    395 *V*                    DOUBLE_SQRT
                                    396 *V*     THIS SETS UP AND CALLS DOUBLE PRECISION DSQRT.
                                    397 *V*
                                    398 *V*
                        000155      399 SQRT2  NULL
                                    400 *
      000155 000004 4110 00 010NN   401        LDE     EXPON
      000156 000000 2370 00 010NN   402        LDAQ    ARGX           LOAD ARGX BEFORE CALL TO X9DS
      000157 000000 7010 00 020NN   403        TSX1    X9DS
      000160 000000 0110 07         404        NOP     0,DL
      000161 000166 7100 00 010NN   405        TRA     EXIT
                                    406 *
                                    407 *V*
                                    408 *V*
                                    409 *V*                    SINGLE_SQRT
                                    410 *V*     THIS SETS UP AND CALLS THE SINGLE PRECISION SQRT.
                                    411 *V*
                                    412 *V*
                        000162      413 SQRT1  NULL
                                    414 *
      000162 000004 4110 00 010NN   415        LDE     EXPON
      000163 000000 2370 00 010NN   416        LDAQ    ARGX           LOAD ARGX BEFORE CALL TO SQRT
      000164 000000 7010 00 020NN   417        TSX1    X9SQ
      000165 000000 0110 07         418        NOP     0,DL
                                    419 *
                                    420 *V*
                                    421 *V*
                                    422 *V*                    GENERAL_EXIT
                                    423 *V*     THIS SIMPLY DECIDES USING X3( 0 = SINGLE ) WHETHER TO
                                    424 *V*     TO STORE THE ANSWER IN A SINGLE OR DOUBLE WORD.
                                    425 *V*

                                                                    REAL POWER FUNCTION
                                    426 *V*
                        000166      427 EXIT   NULL
                                    428 *
                                    429 *              GENERAL EXIT
                                    430 *
      000166 000000 1030 03         431        CMPX3   =0,DU          TEST X3 FOR SINGLE OR DOUBLE PREC.
      000167 000172 6000 00 010NN   432        TZE     SINGLE
      000170 500000 4721 00         433        DFSTR   0,,5           DOUBLE PRECISION
      000171 000173 7100 00 010NN   434        TRA     EXIT2
                                    435 *
                        000172      436 SINGLE NULL                   SINGLE PRECISION
                                    437 *
      000172 500000 4701 00         438        FSTR    0,,5
                                    439 *
                        000173      440 EXIT2  NULL
                                    441 *
      000173 000020 0730 00 010NN   442        LREG    REGS
      000174 000006 4774 00 010NN   443        LDP7    PR7
      000175 000007 4764 00 010NN   444        LDP6    PR6
      000176 000010 4754 00 010NN   445        LDP5    PR5
      000177 000001 7100 11         446        TRA     1,1
                                    447 *
                                    448 *
                                    449 *
                                    450 *              CONSTANTS AND STORAGE ALLOCATION
                                    451 *
                                    452 *
                        000000      453        SECT    .X9RR.,DATA
                        000000      454        EVEN
                        000000      455 ARGX   BSS     2
                        000002      456 ARGY   BSS     2
                        000004      457 EXPON  BSS     1
                        000005      458 SINFLG BSS     1
                        000006      459 PR7    BSS     1
                        000007      460 PR6    BSS     1

                                                                    REAL POWER FUNCTION
                        000010      461 PR5    BSS     1
      000012 400046137457           462 MAXNUMEDEC     10EX152
      000013 777777777770           463 MASK   OCT     777777777770
      000014 023377600000           464 UNFLW EDEC     -256.25E0
                        000020      465 REGS  8BSS     8
                                    466 *
                                    467 *              ERROR MESSAGES
                                    468 *
      000030 000002000000           469 NUMARG VFD     18/2,18/0
      000031 000000000001           470 EXPOVF DEC     1
      000032 000000000002           471 EXPUDF DEC     2
      000033 000000000003           472 ZRONEG DEC     3
      000034 000000000004           473 NEGREL DEC     4
      000035 000031000000   01000   474 PTBLK1 PTR     .X9RR,EXPOVF
      000036 000032000000   01000   475 PTBLK2 PTR     .X9RR,EXPUDF
      000037 000033000000   01000   476 PTBLK3 PTR     .X9RR,ZRONEG
      000040 000034000000   01000   477 PTBLK4 PTR     .X9RR,NEGREL
      000041 000400000000           478 SQROOT DEC     5.0EX-1
      000042 000400000000           479 SQRTDBEDEC     5.0DX-1
      000043 000000000000
                                    480        END
 GMAP6 VERSION/ASSEMBLY DATES  JNPA NO TTL/2(_00]      JNPB NO TTL/2(_00]      JNPC NO TTL/2(_00]
 THERE WERE    NO  WARNING FLAGS IN THE ABOVE ASSEMBLY

                             OCTAL    SYMBOL   * KIND *      REFERENCES BY ALTER NO. AN
     0   ARGX     REL   .X9RR.   455  120W  146W  169R  244R  388R  402R  416R  455
     2   ARGY     REL   .X9RR.   456  168W  197R  308R  337R  354R  456
   124   ERR13    REL   .X9RR    318  318
   102   ERRO     REL   .X9RR    260  260
   173   EXIT2    REL   .X9RR    440  434T  440
   166   EXIT     REL   .X9RR    427  234T  236T  247T  249T  267T  269T  287T  323T  369T  405T  427
     4   EXPON    REL   .X9RR.   457  119W  145W  171R  389R  401R  415R  457
    31   EXPOVF   REL   .X9RR.   470  470   474
    32   EXPUDF   REL   .X9RR.   471  471   475
    74   EXPZRO   REL   .X9RR    244  148T  244
   121   GOON2    REL   .X9RR    306  170T  306
   131   GOON3    REL   .X9RR    335  307T  335
   147   GOON4    REL   .X9RR    382  355T  382
    42   GOONA2   REL   .X9RR    161  159T  161
    46   GOONA3   REL   .X9RR    168  166T  168
    36   GOONA    REL   .X9RR    152  124T  152
    52   GOOND    REL   .X9RR    181  181   391T
   151   GOOONA   REL   .X9RR    388  342T  388
  6000   .X9RR    SEC   SECT       9    9   474   475   476   477
  6001   .X9RR.   SEC   SECT     453  453
   100   .ZERO    REL   .X9RR    248  245T  248
    13   MASK     REL   .X9RR.   463  349R  463
    12   MAXNUM   REL   .X9RR.   462  261R  462
    34   NEGREL   REL   .X9RR.   473  473   477
    30   NUMARG   REL   .X9RR.   469  262   282   319   365   469
    54   OUT1     REL   .X9RR    186  186
    70   OUT2     REL   .X9RR    231  224T  231
   102   OVERFL   REL   .X9RR    250  206T  250
    10   PR5      REL   .X9RR.   461  114W  140W  445R  461
     7   PR6      REL   .X9RR.   460  113W  139W  444R  460
     6   PR7      REL   .X9RR.   459  112W  138W  443R  459
    35   PTBLK1   REL   .X9RR.   474  263   474
    36   PTBLK2   REL   .X9RR.   475  283   475
    37   PTBLK3   REL   .X9RR.   476  320   476
    40   PTBLK4   REL   .X9RR.   477  366   477

                             OCTAL    SYMBOL   * KIND *      REFERENCES BY ALTER NO. AN
     1   RADX     ABS             16   16    89   155   157   162   164   198   204   338   340   343   345   348
                                      385
    20   REGS     REL   .X9RR.   465  110W  136W  442R  465
   117   SETZER   REL   .X9RR    286  286   309T
     5   SINFLG   REL   .X9RR.   458  152W  233R  266R  387W  458
   172   SINGLE   REL   .X9RR    436  432T  436
    66   SNGLE2   REL   .X9RR    226  221T  226
    41   SQROOT   REL   .X9RR.   478  122   478
   162   SQRT1    REL   .X9RR    413  123T  413
   155   SQRT2    REL   .X9RR    399  150T  399
    42   SQRTDB   REL   .X9RR.   479  149R  479
   113   UNDER    REL   .X9RR    281  208T  281
    14   UNFLW    REL   .X9RR.   464  207   464
NO VAL   X8ER     EXT   SYMREF         86   264T  284T  321T  367T
NO VAL   X9DL     EXT   SYMREF         92   183T
NO VAL   X9DS     EXT   SYMREF         97   403T
NO VAL   X9DX     EXT   SYMREF         93   222T  228T
    17   X9QQ     REL   .X9RR    135   95   135
     0   X9RR     REL   .X9RR    109   94   109
NO VAL   X9SQ     EXT   SYMREF         96   417T
    33   ZRONEG   REL   .X9RR.   472  472   476
