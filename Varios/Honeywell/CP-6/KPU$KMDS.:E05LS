VERSION E05

PL6.E3A0      #001=KPU$CLONE File=KPU$KMDS.:E05TSI                               WED 07/30/97 01:21 Page:1    
        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        /*F*     NAME:          KPU$CLONE
        7        7                 PURPOSE:       High-speed diskette copy.
        8        8                 DESCRIPTION:   This command performs a high-speed copy of
        9        9                                of one entire diskette to another.
       10       10        */
       11       11        KPU$CLONE : PROC( OUT$ );
       12       12        /**/
       13       13        /*  Include files  */
       14       14        /**/
       15       15        %INCLUDE XU_MACRO_C;
       16     3121        %INCLUDE KP_DATA_R;
       17     4373        %INCLUDE XU_SUBS_C;
       18     4465        %INCLUDE KP_MSG;
       19     4558        %INCLUDE XUF_ENTRY;
       20     4566        /**/
       21     4567        /*  Entry declarations  */
       22     4568        /**/
       23     4569        %KP_ENTRIES (OMIT=KPU$CLONE);
       24     4675        /**/
       25     4676        /*  BASED DATA  */
       26     4677        /**/
       27     4678        %PARSE$OUT    ( NAME    = OUT$BLK,
       28     4679                        STCLASS = BASED );
       29     4724        %PARSE$SYM    ( NAME    = OUT$SYM,
       30     4725                        STCLASS = BASED );
       31     4763        %KP$MSG (NAME = KP$MSG,STCLASS = BASED);
       32     4839        %EJECT;
PL6.E3A0      #001=KPU$CLONE File=KPU$KMDS.:E05TSI                               WED 07/30/97 01:21 Page:2    
       33     4840        /**/
       34     4841        /*  Local goodies  */
       35     4842        /**/
       36     4843    1   DCL OUT$ PTR;
       37     4844    1   DCL NSUBLKS UBIN WORD;
       38     4845    1   DCL FEP_NUM UBIN WORD;
       39     4846    1   DCL SOURCE_DRIVE UBIN WORD;
       40     4847    1   DCL DEST_DRIVE UBIN WORD;
       41     4848    1   DCL PART SBIN WORD;
       42     4849    1   DCL PART$ PTR;
       43     4850    1   DCL OPT SBIN WORD;
       44     4851    1   DCL OPT$ PTR;
       45     4852    1   DCL IMAGE_SIZE UBIN(16) UNAL;
       46     4853    1   DCL 1 IMAGE_SIZE_ REDEF IMAGE_SIZE,
       47     4854    1         2 HOB UBIN(8) UNAL,
       48     4855    1         2 LOB UBIN(8) UNAL;
       49     4856        %EJECT;
PL6.E3A0      #001=KPU$CLONE File=KPU$KMDS.:E05TSI                               WED 07/30/97 01:21 Page:3    
       50     4857        /**/
       51     4858        /*  Make sure he is allowed to do this thing.  */
       52     4859        /**/
       53     4860    1           CALL KPU$SECURITY(%KP_PRIV_WR#) ALTRET(CANT_OPEN);
       54     4861    1           CALL KPD$DISK_TYPE (IN_OPTS,%DT_RFEP#);
       55     4862        /**/
       56     4863        /*  Loop, processing options.  */
       57     4864        /**/
       58     4865    2           DO PART = 0 TO OUT$ -> OUT$BLK.NSUBLKS -1;
       59     4866    2              PART$ = OUT$ -> OUT$BLK.SUBLK$(PART);
       60     4867    3              DO CASE(PART$ -> OUT$BLK.CODE);
       61     4868    3               CASE(1);                    /* CLONE options                      */
       62     4869    3                 CALL KPU$OPTIONS (IN_OPTS,PART$) ALTRET(BAD_OPTS);
       63     4870    3               CASE(2);                    /* DRIVE ID                           */
       64     4871    3                 CALL KPU$FEP_AND_DRIVE(
       65     4872    3                   PART$ -> OUT$BLK,
       66     4873    3                   FEP_NUM,SOURCE_DRIVE) ALTRET(CANT_OPEN);
       67     4874    3                 CALL KPX$OPEN( FEP_NUM, SOURCE_DRIVE ) ALTRET(CANT_OPEN);
       68     4875    3               CASE(3);                    /* DISPOSITION                        */
       69     4876    3                 ;                         /* DOES NOT MATTER                    */
       70     4877    3               CASE(4);                    /* DESTINATION DRIVE NUMBER           */
       71     4878    3                 CALL CHARBIN (DEST_DRIVE,
       72     4879    3                               PART$ -> OUT$BLK.SUBLK$(0) -> OUT$SYM.TEXT);
       73     4880    3                 IF DEST_DRIVE > MAX_DRIVE_NO THEN
       74     4881    4                    DO;
       75     4882    4                      CALL KPE$ERROR (E$DRIVE_OUT_OF_RANGE);
       76     4883    4                      GOTO CANT_OPEN;
       77     4884    4                      END;
       78     4885    3               END;                        /* END CASE                           */
       79     4886    2              END;                         /* END DO INDEX                       */
       80     4887        %EJECT;
PL6.E3A0      #001=KPU$CLONE File=KPU$KMDS.:E05TSI                               WED 07/30/97 01:21 Page:4    
       81     4888        /**/
       82     4889        /* Tell the human what we're up to */
       83     4890        /**/
       84     4891    1           KP_DISK_ACTIVITY = %KP_DISK_CLONING#;
       85     4892    1           CALL KPT$TERM_MSG( %T$CLONING );
       86     4893    1           KP_FECG_OUT$ -> KP$MSG.HEAD.MSG_TYPE = %KP_CLONE_RQS#;
       87     4894    1           KP_FECG_OUT$ -> KP$MSG.HEAD.DRIVE_NO = SOURCE_DRIVE;
       88     4895    1           KP_FECG_OUT$ -> KP$MSG.HEAD.SEC_SIZE = IN_OPTS.SSIZE_CODE;
       89     4896    1           KP_FECG_OUT$ -> KP$MSG.HEAD.TRACK_NO = IN_OPTS.TRACK_LO;
       90     4897    1           KP_FECG_OUT$ -> KP$MSG.HEAD.SECTOR_NO = IN_OPTS.SECTOR_LO;
       91     4898    1           KP_FECG_OUT$ -> KP$MSG.CLONE_RQS.SECTOR_HI = IN_OPTS.SECTOR_HI;
       92     4899    1           KP_FECG_OUT$ -> KP$MSG.CLONE_RQS.TRACK_HI = IN_OPTS.TRACK_HI;
       93     4900    1           KP_FECG_OUT$ -> KP$MSG.CLONE_RQS.SIDE_HI = IN_OPTS.SIDE_HI;
       94     4901    1           KP_FECG_OUT$ -> KP$MSG.CLONE_RQS.DEST_DRIVE = DEST_DRIVE;
       95     4902    1           KP_FECG_OUT$ -> KP$MSG.HEAD.SIDE = IN_OPTS.SIDE_LO;
       96     4903    1           IMAGE_SIZE = SIZEC(KP$MSG.CLONE_RQS) - SIZEC(KP$MSG.CLONE_RQS.SPARE);
       97     4904    1           KP_FECG_OUT$ -> KP$MSG.HEAD.NUM_BYTES.HOB = IMAGE_SIZE_.HOB;
       98     4905    1           KP_FECG_OUT$ -> KP$MSG.HEAD.NUM_BYTES.LOB = IMAGE_SIZE_.LOB;
       99     4906    1           KP_FECG_OUT_SIZE = SIZEC(KP$MSG.HEAD) + IMAGE_SIZE;
      100     4907    1           CALL KPI$IO_SVC(%KP_FECG_WRITE#) ALTRET(PIGETTE_ERR);
      101     4908    2           DO WHILE '1'B;
      102     4909    2              CALL KPI$IO_SVC(%KP_FECG_READ#) ALTRET(PIGETTE_ERR);
      103     4910    2              IF KP_FECG_IN$ -> KP$MSG.HEAD.MSG_TYPE = %KP_CLONE_RSP# THEN EXIT;
      104     4911    2              CALL KPE$CHECK_ERR(%KP_CLONE_STT#) ALTRET(PIGETTE_ERR);
      105     4912    2           END;
      106     4913    1           CALL KPE$CHECK_ERR(%KP_CLONE_RSP#) ALTRET(PIGETTE_ERR);
      107     4914        %EJECT;
PL6.E3A0      #001=KPU$CLONE File=KPU$KMDS.:E05TSI                               WED 07/30/97 01:21 Page:5    
      108     4915        /**/
      109     4916        /*  We're finished, and it all went OK.  */
      110     4917        /**/
      111     4918    1           CALL KPT$TERM_MSG( %T$CLONE_DONE );
      112     4919    1           CALL KPX$CLOSE( FEP_NUM, SOURCE_DRIVE ) ALTRET(CANT_CLOSE);
      113     4920        /**/
      114     4921        /**/
      115     4922        /* Get here when things become severely fouled */
      116     4923        /**/
      117     4924    1   BAD_OPTS: ;
      118     4925    1   PIGETTE_ERR: ;
      119     4926    1   CANT_CLOSE: ;
      120     4927    1   CANT_OPEN: ;
      121     4928    1           RETURN;
      122     4929    1   END KPU$CLONE;
      123     4930        %EOD;

PL6.E3A0      #001=KPU$CLONE File=KPU$KMDS.:E05TSI                               WED 07/30/97 01:21 Page:6    
--  Include file information  --

   XUF_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   KP_MSG.:E05TOU  is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   KP_MACRO_C.:E05TOU  is referenced.
   KI_SUBS_C.:E05TOU  is referenced.
   KP_PERR_C.:E05TOU  is referenced.
   KP_SUBS.:E05TOU  is referenced.
   KP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KPU$CLONE.

   Procedure KPU$CLONE requires 165 words for executable code.
   Procedure KPU$CLONE requires 18 words of local(AUTO) storage.

PL6.E3A0      #001=KPU$CLONE File=KPU$KMDS.:E05TSI                               WED 07/30/97 01:21 Page:7    

 Object Unit name= KPU$CLONE                                  File name= KPU$KMDS.:E05TOU
 UTS= JUL 30 '97 01:21:52.76 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Proc  even  none   165    245  KPU$CLONE
    2  RoData even  none    14     16  KPU$CLONE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  KPU$CLONE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 KPU$SECURITY
 yes     yes           Std       2 KPU$OPTIONS
 yes     yes           Std       2 KPX$OPEN
 yes     yes           Std       1 KPE$ERROR
         yes           Std       1 KPT$TERM_MSG
         yes           Std       2 KPD$DISK_TYPE
 yes     yes           Std       1 KPE$CHECK_ERR
 yes     yes           Std       3 KPU$FEP_AND_DRIVE
 yes     yes           Std       2 KPX$CLOSE
 yes     yes           Std       1 KPI$IO_SVC
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=KPU$CLONE File=KPU$KMDS.:E05TSI                               WED 07/30/97 01:21 Page:8    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  KP_INBUF                              KP_RU_OUTBUF
     KP_FECG_IN$                           KP_FECG_OUT$                          KP_FECG_OUT_SIZE
     KP_RU_KEY                             KP_DISK_ACTIVITY                 r    MAX_DRIVE_NO
     IN_OPTS                               B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=KPU$CLONE File=KPU$KMDS.:E05TSI                               WED 07/30/97 01:21 Page:9    


        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        /*F*     NAME:          KPU$CLONE
        7        7                 PURPOSE:       High-speed diskette copy.
        8        8                 DESCRIPTION:   This command performs a high-speed copy of
        9        9                                of one entire diskette to another.
       10       10        */
       11       11        KPU$CLONE : PROC( OUT$ );

     11  1 000000   000000 700200 xent  KPU$CLONE    TSX0  ! X66_AUTO_1
         1 000001   000022 000001                    ZERO    18,1

       12       12        /**/
       13       13        /*  Include files  */
       14       14        /**/
       15       15        %INCLUDE XU_MACRO_C;
       16     3121        %INCLUDE KP_DATA_R;
       17     4373        %INCLUDE XU_SUBS_C;
       18     4465        %INCLUDE KP_MSG;
       19     4558        %INCLUDE XUF_ENTRY;
       20     4566        /**/
       21     4567        /*  Entry declarations  */
       22     4568        /**/
       23     4569        %KP_ENTRIES (OMIT=KPU$CLONE);
       24     4675        /**/
       25     4676        /*  BASED DATA  */
       26     4677        /**/
       27     4678        %PARSE$OUT    ( NAME    = OUT$BLK,
       28     4679                        STCLASS = BASED );
       29     4724        %PARSE$SYM    ( NAME    = OUT$SYM,
       30     4725                        STCLASS = BASED );
       31     4763        %KP$MSG (NAME = KP$MSG,STCLASS = BASED);
       32     4839        %EJECT;
PL6.E3A0      #001=KPU$CLONE File=KPU$KMDS.:E05TSI                               WED 07/30/97 01:21 Page:10   
       33     4840        /**/
       34     4841        /*  Local goodies  */
       35     4842        /**/
       36     4843    1   DCL OUT$ PTR;
       37     4844    1   DCL NSUBLKS UBIN WORD;
       38     4845    1   DCL FEP_NUM UBIN WORD;
       39     4846    1   DCL SOURCE_DRIVE UBIN WORD;
       40     4847    1   DCL DEST_DRIVE UBIN WORD;
       41     4848    1   DCL PART SBIN WORD;
       42     4849    1   DCL PART$ PTR;
       43     4850    1   DCL OPT SBIN WORD;
       44     4851    1   DCL OPT$ PTR;
       45     4852    1   DCL IMAGE_SIZE UBIN(16) UNAL;
       46     4853    1   DCL 1 IMAGE_SIZE_ REDEF IMAGE_SIZE,
       47     4854    1         2 HOB UBIN(8) UNAL,
       48     4855    1         2 LOB UBIN(8) UNAL;
       49     4856        %EJECT;
PL6.E3A0      #001=KPU$CLONE File=KPU$KMDS.:E05TSI                               WED 07/30/97 01:21 Page:11   
       50     4857        /**/
       51     4858        /*  Make sure he is allowed to do this thing.  */
       52     4859        /**/
       53     4860    1           CALL KPU$SECURITY(%KP_PRIV_WR#) ALTRET(CANT_OPEN);

   4860  1 000002   000000 630400 2                  EPPR0   0
         1 000003   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000004   000000 701000 xent               TSX1    KPU$SECURITY
         1 000005   000244 702000 1                  TSX2    BAD_OPTS

       54     4861    1           CALL KPD$DISK_TYPE (IN_OPTS,%DT_RFEP#);

   4861  1 000006   000001 630400 2                  EPPR0   1
         1 000007   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000010   000000 701000 xent               TSX1    KPD$DISK_TYPE
         1 000011   000000 011000                    NOP     0

       55     4862        /**/
       56     4863        /*  Loop, processing options.  */
       57     4864        /**/
       58     4865    2           DO PART = 0 TO OUT$ -> OUT$BLK.NSUBLKS -1;

   4865  1 000012   200010 450100                    STZ     PART,,AUTO
         1 000013   000110 710000 1                  TRA     s:4886+1

       59     4866    2              PART$ = OUT$ -> OUT$BLK.SUBLK$(PART);

   4866  1 000014   200003 470500                    LDP0    @OUT$,,AUTO
         1 000015   000000 471500                    LDP1    0,,PR0
         1 000016   200010 720100                    LXL0    PART,,AUTO
         1 000017   100003 236110                    LDQ     3,X0,PR1
         1 000020   200011 756100                    STQ     PART$,,AUTO

       60     4867    3              DO CASE(PART$ -> OUT$BLK.CODE);

   4867  1 000021   200011 471500                    LDP1    PART$,,AUTO
         1 000022   100000 721100                    LXL1    0,,PR1
PL6.E3A0      #001=KPU$CLONE File=KPU$KMDS.:E05TSI                               WED 07/30/97 01:21 Page:12   
         1 000023   000005 101003                    CMPX1   5,DU
         1 000024   000026 602011 1                  TNC     s:4867+5,X1
         1 000025   000107 710000 1                  TRA     s:4886
         1 000026   000107 710000 1                  TRA     s:4886
         1 000027   000033 710000 1                  TRA     s:4869
         1 000030   000044 710000 1                  TRA     s:4871
         1 000031   000107 710000 1                  TRA     s:4886
         1 000032   000066 710000 1                  TRA     s:4878

       61     4868    3               CASE(1);                    /* CLONE options                      */

       62     4869    3                 CALL KPU$OPTIONS (IN_OPTS,PART$) ALTRET(BAD_OPTS);

   4869  1 000033   200011 633500                    EPPR3   PART$,,AUTO
         1 000034   200017 453500                    STP3    IMAGE_SIZE+3,,AUTO
         1 000035   000001 236000 2                  LDQ     1
         1 000036   200016 756100                    STQ     IMAGE_SIZE+2,,AUTO
         1 000037   200016 630500                    EPPR0   IMAGE_SIZE+2,,AUTO
         1 000040   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000041   000000 701000 xent               TSX1    KPU$OPTIONS
         1 000042   000244 702000 1                  TSX2    BAD_OPTS
         1 000043   000107 710000 1                  TRA     s:4886

       63     4870    3               CASE(2);                    /* DRIVE ID                           */

       64     4871    3                 CALL KPU$FEP_AND_DRIVE(

   4871  1 000044   200006 633500                    EPPR3   SOURCE_DRIVE,,AUTO
         1 000045   200020 453500                    STP3    IMAGE_SIZE+4,,AUTO
         1 000046   200005 634500                    EPPR4   FEP_NUM,,AUTO
         1 000047   200017 454500                    STP4    IMAGE_SIZE+3,,AUTO
         1 000050   200016 756100                    STQ     IMAGE_SIZE+2,,AUTO
         1 000051   200016 630500                    EPPR0   IMAGE_SIZE+2,,AUTO
         1 000052   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000053   000000 701000 xent               TSX1    KPU$FEP_AND_DRIVE
         1 000054   000244 702000 1                  TSX2    BAD_OPTS

PL6.E3A0      #001=KPU$CLONE File=KPU$KMDS.:E05TSI                               WED 07/30/97 01:21 Page:13   
       65     4872    3                   PART$ -> OUT$BLK,
       66     4873    3                   FEP_NUM,SOURCE_DRIVE) ALTRET(CANT_OPEN);
       67     4874    3                 CALL KPX$OPEN( FEP_NUM, SOURCE_DRIVE ) ALTRET(CANT_OPEN);

   4874  1 000055   200006 630500                    EPPR0   SOURCE_DRIVE,,AUTO
         1 000056   200017 450500                    STP0    IMAGE_SIZE+3,,AUTO
         1 000057   200005 631500                    EPPR1   FEP_NUM,,AUTO
         1 000060   200016 451500                    STP1    IMAGE_SIZE+2,,AUTO
         1 000061   200016 630500                    EPPR0   IMAGE_SIZE+2,,AUTO
         1 000062   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000063   000000 701000 xent               TSX1    KPX$OPEN
         1 000064   000244 702000 1                  TSX2    BAD_OPTS
         1 000065   000107 710000 1                  TRA     s:4886

       68     4875    3               CASE(3);                    /* DISPOSITION                        */

       69     4876    3                 ;                         /* DOES NOT MATTER                    */
       70     4877    3               CASE(4);                    /* DESTINATION DRIVE NUMBER           */

       71     4878    3                 CALL CHARBIN (DEST_DRIVE,

   4878  1 000066   100003 473500                    LDP3    3,,PR1
         1 000067   300004 236100                    LDQ     4,,PR3
         1 000070   000033 772000                    QRL     27
         1 000071   000000 622006                    EAX2    0,QL
         1 000072   000100 305540                    DTB
         1 000073   300004 230012                    NDSC9   4,,PR3                   cn=1,s=nosgn,sf=0,n=*X2
         1 000074   200016 000010                    NDSC9   IMAGE_SIZE+2,,AUTO       cn=0,s=lsgnf,sf=0,n=8
         1 000075   200017 235100                    LDA     IMAGE_SIZE+3,,AUTO
         1 000076   200007 755100                    STA     DEST_DRIVE,,AUTO

       72     4879    3                               PART$ -> OUT$BLK.SUBLK$(0) -> OUT$SYM.TEXT);
       73     4880    3                 IF DEST_DRIVE > MAX_DRIVE_NO THEN

   4880  1 000077   000000 236000 xsym               LDQ     MAX_DRIVE_NO
         1 000100   200007 116100                    CMPQ    DEST_DRIVE,,AUTO
         1 000101   000107 603000 1                  TRC     s:4886
PL6.E3A0      #001=KPU$CLONE File=KPU$KMDS.:E05TSI                               WED 07/30/97 01:21 Page:14   

       74     4881    4                    DO;

       75     4882    4                      CALL KPE$ERROR (E$DRIVE_OUT_OF_RANGE);

   4882  1 000102   000003 630400 2                  EPPR0   3
         1 000103   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000104   000000 701000 xent               TSX1    KPE$ERROR
         1 000105   000000 011000                    NOP     0

       76     4883    4                      GOTO CANT_OPEN;

   4883  1 000106   000244 710000 1                  TRA     BAD_OPTS

       77     4884    4                      END;
       78     4885    3               END;                        /* END CASE                           */

       79     4886    2              END;                         /* END DO INDEX                       */

   4886  1 000107   200010 054100                    AOS     PART,,AUTO
         1 000110   200003 470500                    LDP0    @OUT$,,AUTO
         1 000111   000000 471500                    LDP1    0,,PR0
         1 000112   100001 236100                    LDQ     1,,PR1
         1 000113   000022 772000                    QRL     18
         1 000114   200010 116100                    CMPQ    PART,,AUTO
         1 000115   000014 605400 1                  TPNZ    s:4866

       80     4887        %EJECT;
PL6.E3A0      #001=KPU$CLONE File=KPU$KMDS.:E05TSI                               WED 07/30/97 01:21 Page:15   
       81     4888        /**/
       82     4889        /* Tell the human what we're up to */
       83     4890        /**/
       84     4891    1           KP_DISK_ACTIVITY = %KP_DISK_CLONING#;

   4891  1 000116   000007 235007                    LDA     7,DL
         1 000117   000000 755000 xsym               STA     KP_DISK_ACTIVITY

       85     4892    1           CALL KPT$TERM_MSG( %T$CLONING );

   4892  1 000120   000005 630400 2                  EPPR0   5
         1 000121   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000122   000000 701000 xent               TSX1    KPT$TERM_MSG
         1 000123   000000 011000                    NOP     0

       86     4893    1           KP_FECG_OUT$ -> KP$MSG.HEAD.MSG_TYPE = %KP_CLONE_RQS#;

   4893  1 000124   000000 470400 xsym               LDP0    KP_FECG_OUT$
         1 000125   025000 236003                    LDQ     10752,DU
         1 000126   000000 552140                    STBQ    0,'40'O,PR0

       87     4894    1           KP_FECG_OUT$ -> KP$MSG.HEAD.DRIVE_NO = SOURCE_DRIVE;

   4894  1 000127   000000 470400 xsym               LDP0    KP_FECG_OUT$
         1 000130   200006 236100                    LDQ     SOURCE_DRIVE,,AUTO
         1 000131   000022 736000                    QLS     18
         1 000132   000000 552120                    STBQ    0,'20'O,PR0

       88     4895    1           KP_FECG_OUT$ -> KP$MSG.HEAD.SEC_SIZE = IN_OPTS.SSIZE_CODE;

   4895  1 000133   000000 470400 xsym               LDP0    KP_FECG_OUT$
         1 000134   000011 236000 xsym               LDQ     IN_OPTS+9
         1 000135   000002 552104                    STBQ    2,'04'O,PR0

       89     4896    1           KP_FECG_OUT$ -> KP$MSG.HEAD.TRACK_NO = IN_OPTS.TRACK_LO;

   4896  1 000136   000000 236000 xsym               LDQ     IN_OPTS
PL6.E3A0      #001=KPU$CLONE File=KPU$KMDS.:E05TSI                               WED 07/30/97 01:21 Page:16   
         1 000137   000022 736000                    QLS     18
         1 000140   000002 552120                    STBQ    2,'20'O,PR0

       90     4897    1           KP_FECG_OUT$ -> KP$MSG.HEAD.SECTOR_NO = IN_OPTS.SECTOR_LO;

   4897  1 000141   000002 236000 xsym               LDQ     IN_OPTS+2
         1 000142   000011 736000                    QLS     9
         1 000143   000002 552110                    STBQ    2,'10'O,PR0

       91     4898    1           KP_FECG_OUT$ -> KP$MSG.CLONE_RQS.SECTOR_HI = IN_OPTS.SECTOR_HI;

   4898  1 000144   000003 236000 xsym               LDQ     IN_OPTS+3
         1 000145   000011 736000                    QLS     9
         1 000146   000004 552110                    STBQ    4,'10'O,PR0

       92     4899    1           KP_FECG_OUT$ -> KP$MSG.CLONE_RQS.TRACK_HI = IN_OPTS.TRACK_HI;

   4899  1 000147   000001 236000 xsym               LDQ     IN_OPTS+1
         1 000150   000033 736000                    QLS     27
         1 000151   000005 552140                    STBQ    5,'40'O,PR0

       93     4900    1           KP_FECG_OUT$ -> KP$MSG.CLONE_RQS.SIDE_HI = IN_OPTS.SIDE_HI;

   4900  1 000152   000005 236000 xsym               LDQ     IN_OPTS+5
         1 000153   000004 552104                    STBQ    4,'04'O,PR0

       94     4901    1           KP_FECG_OUT$ -> KP$MSG.CLONE_RQS.DEST_DRIVE = DEST_DRIVE;

   4901  1 000154   200007 236100                    LDQ     DEST_DRIVE,,AUTO
         1 000155   000022 736000                    QLS     18
         1 000156   000005 552120                    STBQ    5,'20'O,PR0

       95     4902    1           KP_FECG_OUT$ -> KP$MSG.HEAD.SIDE = IN_OPTS.SIDE_LO;

   4902  1 000157   000004 236000 xsym               LDQ     IN_OPTS+4
         1 000160   000033 736000                    QLS     27
         1 000161   000002 552140                    STBQ    2,'40'O,PR0
PL6.E3A0      #001=KPU$CLONE File=KPU$KMDS.:E05TSI                               WED 07/30/97 01:21 Page:17   

       96     4903    1           IMAGE_SIZE = SIZEC(KP$MSG.CLONE_RQS) - SIZEC(KP$MSG.CLONE_RQS.SPARE);

   4903  1 000162   200014 236100                    LDQ     IMAGE_SIZE,,AUTO
         1 000163   000006 376000 2                  ANQ     6
         1 000164   000020 276003                    ORQ     16,DU
         1 000165   200014 756100                    STQ     IMAGE_SIZE,,AUTO

       97     4904    1           KP_FECG_OUT$ -> KP$MSG.HEAD.NUM_BYTES.HOB = IMAGE_SIZE_.HOB;

   4904  1 000166   200014 236100                    LDQ     IMAGE_SIZE,,AUTO
         1 000167   776000 376003                    ANQ     -1024,DU
         1 000170   000023 772000                    QRL     19
         1 000171   000001 552110                    STBQ    1,'10'O,PR0

       98     4905    1           KP_FECG_OUT$ -> KP$MSG.HEAD.NUM_BYTES.LOB = IMAGE_SIZE_.LOB;

   4905  1 000172   200014 236100                    LDQ     IMAGE_SIZE,,AUTO
         1 000173   001774 376003                    ANQ     1020,DU
         1 000174   000024 772000                    QRL     20
         1 000175   000001 552104                    STBQ    1,'04'O,PR0

       99     4906    1           KP_FECG_OUT_SIZE = SIZEC(KP$MSG.HEAD) + IMAGE_SIZE;

   4906  1 000176   200014 236100                    LDQ     IMAGE_SIZE,,AUTO
         1 000177   000024 772000                    QRL     20
         1 000200   000022 036007                    ADLQ    18,DL
         1 000201   000000 756000 xsym               STQ     KP_FECG_OUT_SIZE

      100     4907    1           CALL KPI$IO_SVC(%KP_FECG_WRITE#) ALTRET(PIGETTE_ERR);

   4907  1 000202   000007 630400 2                  EPPR0   7
         1 000203   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000204   000000 701000 xent               TSX1    KPI$IO_SVC
         1 000205   000244 702000 1                  TSX2    BAD_OPTS

      101     4908    2           DO WHILE '1'B;
PL6.E3A0      #001=KPU$CLONE File=KPU$KMDS.:E05TSI                               WED 07/30/97 01:21 Page:18   

      102     4909    2              CALL KPI$IO_SVC(%KP_FECG_READ#) ALTRET(PIGETTE_ERR);

   4909  1 000206   000002 630400 2                  EPPR0   2
         1 000207   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000210   000000 701000 xent               TSX1    KPI$IO_SVC
         1 000211   000244 702000 1                  TSX2    BAD_OPTS

      103     4910    2              IF KP_FECG_IN$ -> KP$MSG.HEAD.MSG_TYPE = %KP_CLONE_RSP# THEN EXIT;

   4910  1 000212   000000 470400 xsym               LDP0    KP_FECG_IN$
         1 000213   000000 236100                    LDQ     0,,PR0
         1 000214   777000 376003                    ANQ     -512,DU
         1 000215   026000 116003                    CMPQ    11264,DU
         1 000216   000224 600000 1                  TZE     s:4913

      104     4911    2              CALL KPE$CHECK_ERR(%KP_CLONE_STT#) ALTRET(PIGETTE_ERR);

   4911  1 000217   000011 630400 2                  EPPR0   9
         1 000220   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000221   000000 701000 xent               TSX1    KPE$CHECK_ERR
         1 000222   000244 702000 1                  TSX2    BAD_OPTS

      105     4912    2           END;

   4912  1 000223   000206 710000 1                  TRA     s:4909

      106     4913    1           CALL KPE$CHECK_ERR(%KP_CLONE_RSP#) ALTRET(PIGETTE_ERR);

   4913  1 000224   000013 630400 2                  EPPR0   11
         1 000225   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000226   000000 701000 xent               TSX1    KPE$CHECK_ERR
         1 000227   000244 702000 1                  TSX2    BAD_OPTS

      107     4914        %EJECT;
PL6.E3A0      #001=KPU$CLONE File=KPU$KMDS.:E05TSI                               WED 07/30/97 01:21 Page:19   
      108     4915        /**/
      109     4916        /*  We're finished, and it all went OK.  */
      110     4917        /**/
      111     4918    1           CALL KPT$TERM_MSG( %T$CLONE_DONE );

   4918  1 000230   000015 630400 2                  EPPR0   13
         1 000231   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000232   000000 701000 xent               TSX1    KPT$TERM_MSG
         1 000233   000000 011000                    NOP     0

      112     4919    1           CALL KPX$CLOSE( FEP_NUM, SOURCE_DRIVE ) ALTRET(CANT_CLOSE);

   4919  1 000234   200006 630500                    EPPR0   SOURCE_DRIVE,,AUTO
         1 000235   200017 450500                    STP0    IMAGE_SIZE+3,,AUTO
         1 000236   200005 631500                    EPPR1   FEP_NUM,,AUTO
         1 000237   200016 451500                    STP1    IMAGE_SIZE+2,,AUTO
         1 000240   200016 630500                    EPPR0   IMAGE_SIZE+2,,AUTO
         1 000241   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000242   000000 701000 xent               TSX1    KPX$CLOSE
         1 000243   000244 702000 1                  TSX2    BAD_OPTS

   4919  1 000244                       BAD_OPTS     null
   4919  1 000244                       PIGETTE_ERR  null
   4919  1 000244                       CANT_CLOSE   null
   4919  1 000244                       CANT_OPEN    null
      113     4920        /**/
      114     4921        /**/
      115     4922        /* Get here when things become severely fouled */
      116     4923        /**/
      117     4924    1   BAD_OPTS: ;
      118     4925    1   PIGETTE_ERR: ;
      119     4926    1   CANT_CLOSE: ;
      120     4927    1   CANT_OPEN: ;
      121     4928    1           RETURN;

   4928  1 000244   000000 702200 xent               TSX2  ! X66_ARET
      122     4929    1   END KPU$CLONE;
PL6.E3A0      #001=KPU$CLONE File=KPU$KMDS.:E05TSI                               WED 07/30/97 01:21 Page:20   
      123     4930        %EOD;

PL6.E3A0      #001=KPU$CLONE File=KPU$KMDS.:E05TSI                               WED 07/30/97 01:21 Page:21   
--  Include file information  --

   XUF_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   KP_MSG.:E05TOU  is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   KP_MACRO_C.:E05TOU  is referenced.
   KI_SUBS_C.:E05TOU  is referenced.
   KP_PERR_C.:E05TOU  is referenced.
   KP_SUBS.:E05TOU  is referenced.
   KP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KPU$CLONE.
PL6.E3A0      #001=KPU$CLONE File=KPU$KMDS.:E05TSI                               WED 07/30/97 01:21 Page:22   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @OUT$                      7-0-0/w UBIN        r     1 DEST_DRIVE
     5-0-0/w UBIN        r     1 FEP_NUM                   14-0-0/b UBIN(16)    r     1 IMAGE_SIZE
    14-0-0/b STRC(16)    r     1 IMAGE_SIZE_               *0-0-0/w PTR         r     1 OUT$
    10-0-0/w SBIN        r     1 PART                      11-0-0/w PTR         r     1 PART$
     6-0-0/w UBIN        r     1 SOURCE_DRIVE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(468)   r     1 IN_OPTS                    0-0-0/w SBIN        r     1 KP_DISK_ACTIVITY
     0-0-0/w PTR         r     1 KP_FECG_IN$                0-0-0/w PTR         r     1 KP_FECG_OUT$
     0-0-0/w UBIN        r     1 KP_FECG_OUT_SIZE           0-0-0/w UBIN        r     1 MAX_DRIVE_NO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(18594) r     1 KP$MSG                     0-0-0/w STRC(144)   r     1 OUT$BLK
     0-0-0/w ASTR(153)   r     1 OUT$SYM


   Procedure KPU$CLONE requires 165 words for executable code.
   Procedure KPU$CLONE requires 18 words of local(AUTO) storage.
PL6.E3A0      #001=KPU$CLONE File=KPU$KMDS.:E05TSI                               WED 07/30/97 01:21 Page:23   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KPU$CLONE File=KPU$KMDS.:E05TSI                               WED 07/30/97 01:21 Page:24   
          MINI XREF LISTING

BAD_OPTS
      4919**LABEL    4869--CALLALT
CANT_CLOSE
      4919**LABEL    4919--CALLALT
CANT_OPEN
      4919**LABEL    4860--CALLALT  4871--CALLALT  4874--CALLALT  4883--GOTO
DEST_DRIVE
      4847**DCL      4878<<CALLBLT  4880>>IF       4901>>ASSIGN
FEP_NUM
      4845**DCL      4871<>CALL     4874<>CALL     4919<>CALL
IMAGE_SIZE
      4852**DCL      4853--REDEF    4903<<ASSIGN   4906>>ASSIGN
IMAGE_SIZE_.HOB
      4854**DCL      4904>>ASSIGN
IMAGE_SIZE_.LOB
      4855**DCL      4905>>ASSIGN
IN_OPTS
      4128**DCL      4861<>CALL     4869<>CALL
IN_OPTS.SECTOR_HI
      4132**DCL      4898>>ASSIGN
IN_OPTS.SECTOR_LO
      4131**DCL      4897>>ASSIGN
IN_OPTS.SIDE_HI
      4134**DCL      4900>>ASSIGN
IN_OPTS.SIDE_LO
      4133**DCL      4902>>ASSIGN
IN_OPTS.SSIZE_CODE
      4138**DCL      4895>>ASSIGN
IN_OPTS.TRACK_HI
      4130**DCL      4899>>ASSIGN
IN_OPTS.TRACK_LO
      4129**DCL      4896>>ASSIGN
PL6.E3A0      #001=KPU$CLONE File=KPU$KMDS.:E05TSI                               WED 07/30/97 01:21 Page:25   
KP$MSG.CLONE_RQS
      4820**DCL      4903--ASSIGN
KP$MSG.CLONE_RQS.DEST_DRIVE
      4824**DCL      4901<<ASSIGN
KP$MSG.CLONE_RQS.SECTOR_HI
      4821**DCL      4898<<ASSIGN
KP$MSG.CLONE_RQS.SIDE_HI
      4822**DCL      4900<<ASSIGN
KP$MSG.CLONE_RQS.SPARE
      4825**DCL      4903--ASSIGN
KP$MSG.CLONE_RQS.TRACK_HI
      4823**DCL      4899<<ASSIGN
KP$MSG.HEAD
      4765**DCL      4906--ASSIGN
KP$MSG.HEAD.DRIVE_NO
      4767**DCL      4894<<ASSIGN
KP$MSG.HEAD.MSG_TYPE
      4766**DCL      4893<<ASSIGN   4910>>IF
KP$MSG.HEAD.NUM_BYTES.HOB
      4778**DCL      4904<<ASSIGN
KP$MSG.HEAD.NUM_BYTES.LOB
      4779**DCL      4905<<ASSIGN
KP$MSG.HEAD.SECTOR_NO
      4782**DCL      4897<<ASSIGN
KP$MSG.HEAD.SEC_SIZE
      4783**DCL      4895<<ASSIGN
KP$MSG.HEAD.SIDE
      4780**DCL      4902<<ASSIGN
KP$MSG.HEAD.TRACK_NO
      4781**DCL      4896<<ASSIGN
KP$MSG.TDATA
      4790**DCL      4791--REDEF    4792--REDEF    4797--REDEF    4811--REDEF    4816--REDEF    4820--REDEF
      4826--REDEF    4829--REDEF
KPD$DISK_TYPE
      4586**DCL-ENT  4861--CALL
KPE$CHECK_ERR
PL6.E3A0      #001=KPU$CLONE File=KPU$KMDS.:E05TSI                               WED 07/30/97 01:21 Page:26   
      4589**DCL-ENT  4911--CALL     4913--CALL
KPE$ERROR
      4592**DCL-ENT  4882--CALL
KPI$IO_SVC
      4604**DCL-ENT  4907--CALL     4909--CALL
KPT$TERM_MSG
      4616**DCL-ENT  4892--CALL     4918--CALL
KPU$FEP_AND_DRIVE
      4622**DCL-ENT  4871--CALL
KPU$OPTIONS
      4629**DCL-ENT  4869--CALL
KPU$SECURITY
      4672**DCL-ENT  4860--CALL
KPX$CLOSE
      4638**DCL-ENT  4919--CALL
KPX$OPEN
      4644**DCL-ENT  4874--CALL
KP_DISK_ACTIVITY
      3977**DCL      4891<<ASSIGN
KP_EXIT.V.STEPCC#
      4044**DCL      4044--REDEF
KP_FECG_IN$
      3970**DCL      4910>>IF
KP_FECG_OUT$
      3970**DCL      4893>>ASSIGN   4894>>ASSIGN   4895>>ASSIGN   4896>>ASSIGN   4897>>ASSIGN   4898>>ASSIGN
      4899>>ASSIGN   4900>>ASSIGN   4901>>ASSIGN   4902>>ASSIGN   4904>>ASSIGN   4905>>ASSIGN
KP_FECG_OUT_SIZE
      3970**DCL      4906<<ASSIGN
KP_INBUF
      3966**DCL      3966--REDEF
KP_RU_KEY
      3974**DCL      3975--REDEF
KP_RU_KEY.NODE
      3974**DCL      3974--REDEF
KP_RU_KEY.PAGE
      3975**DCL      3975--REDEF
PL6.E3A0      #001=KPU$CLONE File=KPU$KMDS.:E05TSI                               WED 07/30/97 01:21 Page:27   
KP_RU_OUTBUF
      3968**DCL      3968--REDEF
MAX_DRIVE_NO
      4047**DCL      4880>>IF
OUT$
      4843**DCL        11--PROC     4865>>DOINDEX  4866>>ASSIGN
OUT$BLK
      4685**DCL      4871<>CALL
OUT$BLK.CODE
      4693**DCL      4867>>DOCASE
OUT$BLK.NSUBLKS
      4697**DCL      4865>>DOINDEX
OUT$BLK.SUBLK$
      4718**DCL      4866>>ASSIGN   4878>>CALLBLT  4878>>CALLBLT
OUT$SYM.COUNT
      4755**DCL      4758--IMP-SIZ  4878>>CALLBLT
OUT$SYM.TEXT
      4758**DCL      4878>>CALLBLT
PART
      4848**DCL      4865<<DOINDEX  4866>>ASSIGN
PART$
      4849**DCL      4866<<ASSIGN   4867>>DOCASE   4869<>CALL     4871>>CALL     4878>>CALLBLT  4878>>CALLBLT
PIGETTE_ERR
      4919**LABEL    4907--CALLALT  4909--CALLALT  4911--CALLALT  4913--CALLALT
SOURCE_DRIVE
      4846**DCL      4871<>CALL     4874<>CALL     4894>>ASSIGN   4919<>CALL

PL6.E3A0      #002=KPU$USE File=KPU$KMDS.:E05TSI                                 WED 07/30/97 01:22 Page:28   
      124        1        /*T***********************************************************/
      125        2        /*T*                                                         */
      126        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      127        4        /*T*                                                         */
      128        5        /*T***********************************************************/
      129        6        /*X* DMC,DFC */
      130        7        KPU$USE: PROC( OUT$ ) ALTRET ;
      131        8        /**/
      132        9        /*  Include files  */
      133       10        /**/
      134       11        %INCLUDE XU_MACRO_C;
      135     3117        %INCLUDE KP_DATA_R;
      136     4369        %INCLUDE XU_SUBS_C;
      137     4461        /**/
      138     4462        /*  Entry declarations  */
      139     4463        /**/
      140     4464        %KP_ENTRIES (OMIT=KPU$USE);
      141     4570        /**/
      142     4571        /*  Parser Structures  */
      143     4572        /**/
      144     4573        %PARSE$OUT    ( NAME    = OUT$BLK,
      145     4574                        STCLASS = BASED );
      146     4619        %PARSE$SYM(NAME=OUT$SYM,STCLASS=BASED);
      147     4657        /**/
      148     4658        /*  PARAMETERS  */
      149     4659        /**/
      150     4660    1   DCL OUT$ PTR;
      151     4661        /**/
      152     4662        /*  LOCAL AUTO GOODIES  */
      153     4663        /**/
      154     4664    1   DCL SOURCE_FEP UBIN WORD;
      155     4665    1   DCL PART UBIN WORD;
      156     4666    1   DCL PART$ PTR;
      157     4667    1   DCL OPT UBIN WORD;
      158     4668    1   DCL OPT$ PTR;
      159     4669    1   DCL I UBIN WORD;
      160     4670        %EJECT;
PL6.E3A0      #002=KPU$USE File=KPU$KMDS.:E05TSI                                 WED 07/30/97 01:22 Page:29   
      161     4671        /**/
      162     4672        /*  Make sure he is allowed to do this thing.  */
      163     4673        /**/
      164     4674    1         CALL KPU$SECURITY(%KP_PRIV_RD#) ALTRET(CANT_OPEN);
      165     4675        /**/
      166     4676        /*  Set defaults  */
      167     4677        /**/
      168     4678    1         SOURCE_FEP = 0;
      169     4679        /**/
      170     4680        /* Loop, processing options. */
      171     4681        /**/
      172     4682    1         IF OUT$ -> OUT$BLK.NSUBLKS = 0 THEN
      173     4683    1            GOTO OPTS_DONE;                /* NOTHING INTERESTING                */
      174     4684    2         DO PART = 0 TO OUT$ -> OUT$BLK.NSUBLKS -1;
      175     4685    2            PART$ = OUT$ -> OUT$BLK.SUBLK$(PART);
      176     4686    3            DO CASE(PART$ -> OUT$BLK.CODE);
      177     4687    3               CASE(1);
      178     4688        /**/
      179     4689        /* Process the input specification, FEP ONLY */
      180     4690        /**/
      181     4691    3               CALL KPU$FEP_AND_DRIVE(
      182     4692    3                PART$ -> OUT$BLK,
      183     4693    3                SOURCE_FEP,I) ALTRET(BAD_FEP_OR_DRIVE);
      184     4694    3               END;                        /* END DO CASE                        */
      185     4695    2            END;                           /* END DO INDEX                       */
      186     4696    1   OPTS_DONE: ;
      187     4697        %EJECT;
PL6.E3A0      #002=KPU$USE File=KPU$KMDS.:E05TSI                                 WED 07/30/97 01:22 Page:30   
      188     4698    1         IF USE_LOCKED_FEP > 0 THEN
      189     4699    2            DO;
      190     4700    2              I = USE_LOCKED_FEP;
      191     4701    2              USE_LOCKED_FEP = 0;
      192     4702    2              CALL KPX$CLOSE(I,-1) ALTRET(BAD_ALTRET);
      193     4703    2              CALL KPT$TERM_MSG ( %T$USENAK );
      194     4704    2              END;
      195     4705    1         IF SOURCE_FEP > 0 THEN
      196     4706    2            DO;
      197     4707    2              CALL KPX$OPEN (SOURCE_FEP,-1) ALTRET( CANT_OPEN );
      198     4708    2              USE_LOCKED_FEP = SOURCE_FEP;
      199     4709    2              CALL KPT$TERM_MSG ( %T$USEACK );
      200     4710    2              END;
      201     4711        /**/
      202     4712    1         RETURN;
      203     4713        /**/
      204     4714    1   BAD_ALTRET: ;
      205     4715    1   CANT_OPEN: ;
      206     4716    1   BAD_FEP_OR_DRIVE: ;
      207     4717    1         RETURN;
      208     4718        /**/
      209     4719    1         END KPU$USE;

PL6.E3A0      #002=KPU$USE File=KPU$KMDS.:E05TSI                                 WED 07/30/97 01:22 Page:31   
--  Include file information  --

   XU_SUBS_C.:E05TOU  is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   KP_MACRO_C.:E05TOU  is referenced.
   KI_SUBS_C.:E05TOU  is referenced.
   KP_PERR_C.:E05TOU  is referenced.
   KP_SUBS.:E05TOU  is referenced.
   KP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KPU$USE.

   Procedure KPU$USE requires 78 words for executable code.
   Procedure KPU$USE requires 14 words of local(AUTO) storage.

    No errors detected in file KPU$KMDS.:E05TSI    .

PL6.E3A0      #002=KPU$USE File=KPU$KMDS.:E05TSI                                 WED 07/30/97 01:22 Page:32   

 Object Unit name= KPU$USE                                    File name= KPU$KMDS.:E05TOU
 UTS= JUL 30 '97 01:22:15.28 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Proc  even  none    78    116  KPU$USE
    2  RoData even  none     6      6  KPU$USE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        1  KPU$USE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 KPU$SECURITY
         yes           Std       1 KPT$TERM_MSG
 yes     yes           Std       2 KPX$OPEN
 yes     yes           Std       3 KPU$FEP_AND_DRIVE
 yes     yes           Std       2 KPX$CLOSE
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #002=KPU$USE File=KPU$KMDS.:E05TSI                                 WED 07/30/97 01:22 Page:33   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  KP_INBUF                              KP_RU_OUTBUF
     KP_RU_KEY                             USE_LOCKED_FEP                        B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #002=KPU$USE File=KPU$KMDS.:E05TSI                                 WED 07/30/97 01:22 Page:34   


      124        1        /*T***********************************************************/
      125        2        /*T*                                                         */
      126        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      127        4        /*T*                                                         */
      128        5        /*T***********************************************************/
      129        6        /*X* DMC,DFC */
      130        7        KPU$USE: PROC( OUT$ ) ALTRET ;

      7  1 000000   000000 700200 xent  KPU$USE      TSX0  ! X66_AUTO_1
         1 000001   000016 000001                    ZERO    14,1

      131        8        /**/
      132        9        /*  Include files  */
      133       10        /**/
      134       11        %INCLUDE XU_MACRO_C;
      135     3117        %INCLUDE KP_DATA_R;
      136     4369        %INCLUDE XU_SUBS_C;
      137     4461        /**/
      138     4462        /*  Entry declarations  */
      139     4463        /**/
      140     4464        %KP_ENTRIES (OMIT=KPU$USE);
      141     4570        /**/
      142     4571        /*  Parser Structures  */
      143     4572        /**/
      144     4573        %PARSE$OUT    ( NAME    = OUT$BLK,
      145     4574                        STCLASS = BASED );
      146     4619        %PARSE$SYM(NAME=OUT$SYM,STCLASS=BASED);
      147     4657        /**/
      148     4658        /*  PARAMETERS  */
      149     4659        /**/
      150     4660    1   DCL OUT$ PTR;
      151     4661        /**/
      152     4662        /*  LOCAL AUTO GOODIES  */
      153     4663        /**/
      154     4664    1   DCL SOURCE_FEP UBIN WORD;
      155     4665    1   DCL PART UBIN WORD;
PL6.E3A0      #002=KPU$USE File=KPU$KMDS.:E05TSI                                 WED 07/30/97 01:22 Page:35   
      156     4666    1   DCL PART$ PTR;
      157     4667    1   DCL OPT UBIN WORD;
      158     4668    1   DCL OPT$ PTR;
      159     4669    1   DCL I UBIN WORD;
      160     4670        %EJECT;
PL6.E3A0      #002=KPU$USE File=KPU$KMDS.:E05TSI                                 WED 07/30/97 01:22 Page:36   
      161     4671        /**/
      162     4672        /*  Make sure he is allowed to do this thing.  */
      163     4673        /**/
      164     4674    1         CALL KPU$SECURITY(%KP_PRIV_RD#) ALTRET(CANT_OPEN);

   4674  1 000002   000000 630400 2                  EPPR0   0
         1 000003   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000004   000000 701000 xent               TSX1    KPU$SECURITY
         1 000005   000115 702000 1                  TSX2    BAD_ALTRET

      165     4675        /**/
      166     4676        /*  Set defaults  */
      167     4677        /**/
      168     4678    1         SOURCE_FEP = 0;

   4678  1 000006   200004 450100                    STZ     SOURCE_FEP,,AUTO

      169     4679        /**/
      170     4680        /* Loop, processing options. */
      171     4681        /**/
      172     4682    1         IF OUT$ -> OUT$BLK.NSUBLKS = 0 THEN

   4682  1 000007   200003 470500                    LDP0    @OUT$,,AUTO
         1 000010   000000 471500                    LDP1    0,,PR0
         1 000011   100001 220100                    LDX0    1,,PR1
         1 000012   000054 600000 1                  TZE     OPTS_DONE

      173     4683    1            GOTO OPTS_DONE;                /* NOTHING INTERESTING                */
      174     4684    2         DO PART = 0 TO OUT$ -> OUT$BLK.NSUBLKS -1;

   4684  1 000013   200005 450100                    STZ     PART,,AUTO
         1 000014   000045 710000 1                  TRA     s:4695+3

      175     4685    2            PART$ = OUT$ -> OUT$BLK.SUBLK$(PART);

   4685  1 000015   200003 470500                    LDP0    @OUT$,,AUTO
         1 000016   000000 471500                    LDP1    0,,PR0
PL6.E3A0      #002=KPU$USE File=KPU$KMDS.:E05TSI                                 WED 07/30/97 01:22 Page:37   
         1 000017   200005 720100                    LXL0    PART,,AUTO
         1 000020   100003 236110                    LDQ     3,X0,PR1
         1 000021   200006 756100                    STQ     PART$,,AUTO

      176     4686    3            DO CASE(PART$ -> OUT$BLK.CODE);

   4686  1 000022   200006 473500                    LDP3    PART$,,AUTO
         1 000023   300000 721100                    LXL1    0,,PR3
         1 000024   000002 101003                    CMPX1   2,DU
         1 000025   000027 602011 1                  TNC     s:4686+5,X1
         1 000026   000042 710000 1                  TRA     s:4695
         1 000027   000042 710000 1                  TRA     s:4695
         1 000030   000031 710000 1                  TRA     s:4691

      177     4687    3               CASE(1);

      178     4688        /**/
      179     4689        /* Process the input specification, FEP ONLY */
      180     4690        /**/
      181     4691    3               CALL KPU$FEP_AND_DRIVE(

   4691  1 000031   200011 634500                    EPPR4   I,,AUTO
         1 000032   200014 454500                    STP4    I+3,,AUTO
         1 000033   200004 631500                    EPPR1   SOURCE_FEP,,AUTO
         1 000034   200013 451500                    STP1    I+2,,AUTO
         1 000035   200012 756100                    STQ     I+1,,AUTO
         1 000036   200012 630500                    EPPR0   I+1,,AUTO
         1 000037   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000040   000000 701000 xent               TSX1    KPU$FEP_AND_DRIVE
         1 000041   000115 702000 1                  TSX2    BAD_ALTRET

      182     4692    3                PART$ -> OUT$BLK,
      183     4693    3                SOURCE_FEP,I) ALTRET(BAD_FEP_OR_DRIVE);
      184     4694    3               END;                        /* END DO CASE                        */

      185     4695    2            END;                           /* END DO INDEX                       */

PL6.E3A0      #002=KPU$USE File=KPU$KMDS.:E05TSI                                 WED 07/30/97 01:22 Page:38   
   4695  1 000042   200005 235100                    LDA     PART,,AUTO
         1 000043   000001 035007                    ADLA    1,DL
         1 000044   200005 755100                    STA     PART,,AUTO
         1 000045   200003 470500                    LDP0    @OUT$,,AUTO
         1 000046   000000 471500                    LDP1    0,,PR0
         1 000047   100001 236100                    LDQ     1,,PR1
         1 000050   000022 772000                    QRL     18
         1 000051   200005 116100                    CMPQ    PART,,AUTO
         1 000052   000054 600000 1                  TZE     OPTS_DONE
         1 000053   000015 603000 1                  TRC     s:4685

   4685  1 000054                       OPTS_DONE    null
      186     4696    1   OPTS_DONE: ;
      187     4697        %EJECT;
PL6.E3A0      #002=KPU$USE File=KPU$KMDS.:E05TSI                                 WED 07/30/97 01:22 Page:39   
      188     4698    1         IF USE_LOCKED_FEP > 0 THEN

   4698  1 000054   000000 235000 xsym               LDA     USE_LOCKED_FEP
         1 000055   000074 604400 1                  TMOZ    s:4705

      189     4699    2            DO;

      190     4700    2              I = USE_LOCKED_FEP;

   4700  1 000056   200011 755100                    STA     I,,AUTO

      191     4701    2              USE_LOCKED_FEP = 0;

   4701  1 000057   000000 450000 xsym               STZ     USE_LOCKED_FEP

      192     4702    2              CALL KPX$CLOSE(I,-1) ALTRET(BAD_ALTRET);

   4702  1 000060   000001 236000 2                  LDQ     1
         1 000061   200013 756100                    STQ     I+2,,AUTO
         1 000062   200011 631500                    EPPR1   I,,AUTO
         1 000063   200012 451500                    STP1    I+1,,AUTO
         1 000064   200012 630500                    EPPR0   I+1,,AUTO
         1 000065   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000066   000000 701000 xent               TSX1    KPX$CLOSE
         1 000067   000115 702000 1                  TSX2    BAD_ALTRET

      193     4703    2              CALL KPT$TERM_MSG ( %T$USENAK );

   4703  1 000070   000003 630400 2                  EPPR0   3
         1 000071   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000072   000000 701000 xent               TSX1    KPT$TERM_MSG
         1 000073   000000 011000                    NOP     0

      194     4704    2              END;

      195     4705    1         IF SOURCE_FEP > 0 THEN

PL6.E3A0      #002=KPU$USE File=KPU$KMDS.:E05TSI                                 WED 07/30/97 01:22 Page:40   
   4705  1 000074   200004 235100                    LDA     SOURCE_FEP,,AUTO
         1 000075   000114 600000 1                  TZE     s:4712

      196     4706    2            DO;

      197     4707    2              CALL KPX$OPEN (SOURCE_FEP,-1) ALTRET( CANT_OPEN );

   4707  1 000076   000001 236000 2                  LDQ     1
         1 000077   200013 756100                    STQ     I+2,,AUTO
         1 000100   200004 630500                    EPPR0   SOURCE_FEP,,AUTO
         1 000101   200012 450500                    STP0    I+1,,AUTO
         1 000102   200012 630500                    EPPR0   I+1,,AUTO
         1 000103   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000104   000000 701000 xent               TSX1    KPX$OPEN
         1 000105   000115 702000 1                  TSX2    BAD_ALTRET

      198     4708    2              USE_LOCKED_FEP = SOURCE_FEP;

   4708  1 000106   200004 235100                    LDA     SOURCE_FEP,,AUTO
         1 000107   000000 755000 xsym               STA     USE_LOCKED_FEP

      199     4709    2              CALL KPT$TERM_MSG ( %T$USEACK );

   4709  1 000110   000005 630400 2                  EPPR0   5
         1 000111   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000112   000000 701000 xent               TSX1    KPT$TERM_MSG
         1 000113   000000 011000                    NOP     0

      200     4710    2              END;

      201     4711        /**/
      202     4712    1         RETURN;

   4712  1 000114   000000 702200 xent               TSX2  ! X66_ARET

   4705  1 000115                       BAD_ALTRET   null
   4705  1 000115                       CANT_OPEN    null
PL6.E3A0      #002=KPU$USE File=KPU$KMDS.:E05TSI                                 WED 07/30/97 01:22 Page:41   
   4705  1 000115                       BAD_FEP_OR_* null
      203     4713        /**/
      204     4714    1   BAD_ALTRET: ;
      205     4715    1   CANT_OPEN: ;
      206     4716    1   BAD_FEP_OR_DRIVE: ;
      207     4717    1         RETURN;

   4717  1 000115   000000 702200 xent               TSX2  ! X66_ARET
      208     4718        /**/
      209     4719    1         END KPU$USE;

PL6.E3A0      #002=KPU$USE File=KPU$KMDS.:E05TSI                                 WED 07/30/97 01:22 Page:42   
--  Include file information  --

   XU_SUBS_C.:E05TOU  is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   KP_MACRO_C.:E05TOU  is referenced.
   KI_SUBS_C.:E05TOU  is referenced.
   KP_PERR_C.:E05TOU  is referenced.
   KP_SUBS.:E05TOU  is referenced.
   KP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KPU$USE.
PL6.E3A0      #002=KPU$USE File=KPU$KMDS.:E05TSI                                 WED 07/30/97 01:22 Page:43   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @OUT$                     11-0-0/w UBIN        r     1 I
    *0-0-0/w PTR         r     1 OUT$                       5-0-0/w UBIN        r     1 PART
     6-0-0/w PTR         r     1 PART$                      4-0-0/w UBIN        r     1 SOURCE_FEP

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 USE_LOCKED_FEP

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(144)   r     1 OUT$BLK                    0-0-0/w ASTR(153)   r     1 OUT$SYM


   Procedure KPU$USE requires 78 words for executable code.
   Procedure KPU$USE requires 14 words of local(AUTO) storage.

    No errors detected in file KPU$KMDS.:E05TSI    .
PL6.E3A0      #002=KPU$USE File=KPU$KMDS.:E05TSI                                 WED 07/30/97 01:22 Page:44   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=KPU$USE File=KPU$KMDS.:E05TSI                                 WED 07/30/97 01:22 Page:45   
          MINI XREF LISTING

BAD_ALTRET
      4705**LABEL    4702--CALLALT
BAD_FEP_OR_DRIVE
      4705**LABEL    4691--CALLALT
CANT_OPEN
      4705**LABEL    4674--CALLALT  4707--CALLALT
I
      4669**DCL      4691<>CALL     4700<<ASSIGN   4702<>CALL
KPT$TERM_MSG
      4511**DCL-ENT  4703--CALL     4709--CALL
KPU$FEP_AND_DRIVE
      4517**DCL-ENT  4691--CALL
KPU$SECURITY
      4567**DCL-ENT  4674--CALL
KPX$CLOSE
      4533**DCL-ENT  4702--CALL
KPX$OPEN
      4539**DCL-ENT  4707--CALL
KP_EXIT.V.STEPCC#
      4040**DCL      4040--REDEF
KP_INBUF
      3962**DCL      3962--REDEF
KP_RU_KEY
      3970**DCL      3971--REDEF
KP_RU_KEY.NODE
      3970**DCL      3970--REDEF
KP_RU_KEY.PAGE
      3971**DCL      3971--REDEF
KP_RU_OUTBUF
      3964**DCL      3964--REDEF
OPTS_DONE
      4685**LABEL    4683--GOTO
PL6.E3A0      #002=KPU$USE File=KPU$KMDS.:E05TSI                                 WED 07/30/97 01:22 Page:46   
OUT$
      4660**DCL         7--PROC     4682>>IF       4684>>DOINDEX  4685>>ASSIGN
OUT$BLK
      4580**DCL      4691<>CALL
OUT$BLK.CODE
      4588**DCL      4686>>DOCASE
OUT$BLK.NSUBLKS
      4592**DCL      4682>>IF       4684>>DOINDEX
OUT$BLK.SUBLK$
      4613**DCL      4685>>ASSIGN
OUT$SYM.COUNT
      4649**DCL      4652--IMP-SIZ
PART
      4665**DCL      4684<<DOINDEX  4685>>ASSIGN
PART$
      4666**DCL      4685<<ASSIGN   4686>>DOCASE   4691>>CALL
SOURCE_FEP
      4664**DCL      4678<<ASSIGN   4691<>CALL     4705>>IF       4707<>CALL     4708>>ASSIGN
USE_LOCKED_FEP
      3973**DCL      4698>>IF       4700>>ASSIGN   4701<<ASSIGN   4708<<ASSIGN
