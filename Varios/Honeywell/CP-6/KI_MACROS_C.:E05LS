

14:48 JUL 28 '97 KI_MACROS_C.:E05SI                                        1    
    1      /*M* KI_MACROS_C     Macros for terminal control pmmes  */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7      /*X* MEC,MOC,EXM=20,CLM=20,CRM=80   */
    8
    9      /*F* NAME: KI_VCHRPMT
   10      */
   11      %MACRO KI_VCHRPMT (NAME=KI_VCHRPMT,STCLASS=BASED,SIZE=31);
   12      DCL 1 NAME STCLASS,
   13            2 PFB UBIN BYTE UNAL,
   14            2 DVBYTE,
   15              3 * UBIN BYTE UNAL,
   16            2 VFC CHAR(1) UNAL,
   17            2 M CHAR(SIZE) UNAL;
   18      %MEND;
   19
   20                          /*F* NAME: KI$ROUTE - Host Routing Tables
   21
   22                          There is an Route Table entry in TIGR data for each
   23                          node in the network.  These context blocks contain the
   24                          data used by the host network layer.  The size of the
   25                          table is (0:nodes), where nodes is the number specified
   26                          via the NODES option of TIGR's MON command.
   27
   28                          The macro KI$ROUTE in file KI_MACROS_C genrates the
   29                          structure for the route table.
   30
   31                          An entry in the Route Table may be located via a pointer
   32                          in the Route Table pointer array:
   33                          }
   34                          }   DCL B$PTR_ARRAY(0:0) PTR BASED;
   35                          }
   36                          }   route$ = KI_ROUTE$$ -> B$PTR_ARRAY(node#)
   37                          }
14:48 JUL 28 '97 KI_MACROS_C.:E05SI                                        2    
   38                          KI_ROUTE$$ is SYMDEFed in file KI_DATA_D and SYMREFed
   39                          in file KI_DATA_R.
   40
   41                          The KI$ROUTE structure contains:
   42                          */
   43
   44      %MACRO KI$ROUTE (FPTN=KI$ROUTE,STCLASS=BASED);
   45
   46      DCL 1 FPTN STCLASS ALIGNED,
   47            2 NODE_NAME CHAR(8),
   48                          /*K* NODE_NAME- CHAR(8).
   49                          Contains the name by which the node is
   50                          known to the network.
   51                          */
   52                          /*
   53                          This field is initialized from
   54                          KL_SETNODE.NODENAME when KUB$EA receives a
   55                          KL_SETNODE message.
   56                          */
   57            2 FEI# UBIN BYTE UNAL,
   58                          /*K* FEI# - UBIN(BYTE).
   59                          Contains the index into the Front End
   60                          Interface Tables for this node.
   61                          */
   62            2 CURRENT_QOS UBIN BYTE UNAL,
   63            2 ALT_QOS UBIN BYTE UNAL,
   64            2 HOST BIT(1) UNAL,
   65                          /*K* HOST - BIT(1).
   66                          Set if the node is a host.
   67                          */
   68            2 LINK_CONNECTED BIT(1) UNAL,
   69                          /*K* LINK_CONNECTED - BIT(1).
   70                          Set when a CONNECT request has
   71                          been received from the COUPLER.
   72                          Reset when a REPDISC has been received.
   73                          */
   74            2 SEQ UBIN(7) UNAL,
14:48 JUL 28 '97 KI_MACROS_C.:E05SI                                        3    
   75            2 LINK(0:0),
   76                          /*K* LINK - ARRAY.
   77                          Each Route Table entry has a sub-structure for each local
   78                          fep on this host.  The array size is (0:maxfeps) where
   79                          maxfeps is determined by the number of FEP commands
   80                          in specified in the TIGR deck.
   81
   82                          For each link, we maintain the following
   83                          information:
   84                          */
   85              3 QOS UBIN BYTE UNAL,
   86      /*K* LINK.QOS - UBIN BYTE.
   87
   88      */
   89              3 * CHAR(3) UNAL,
   90              3 MSGS_IN UBIN,
   91                          /*K* LINK.MSGS_IN - UBIN WORD.
   92                          Contains a count of the number of messages
   93                          received on this link.
   94                          */
   95              3 MSGS_OUT UBIN;
   96                          /*K* LINK.MSGS_OUT - UBIN WORD.
   97                          Contains a count of the number of messages
   98                          sent on this link.
   99                          */
  100
  101      %MEND;
  102
  103
  104                          /*F* NAME: KI$FEI - Front End Interface Context
  105
  106                          There is an FEI Context Block in TIGR data for each
  107                          Communications WSQ.  These context blocks contain the
  108                          data used by the Host FEI routines.  The macro KI$FEI
  109                          in file KI_MACROS_C genrates the structure for this
  110                          FEI Context Block.
  111
14:48 JUL 28 '97 KI_MACROS_C.:E05SI                                        4    
  112                          The structure may be located via a pointer
  113                          in FEI pointer array table, KI$FEI$:
  114                          }
  115                          }   fei$ = KI_FEI$$ -> KI$FEI$(fei#)
  116                          }
  117                          KI_FEI$$ is SYMDEFed in file KI_DATA_D and SYMREFed
  118                          in file KI_DATA_R.  The BASED structure for KI$FEI$
  119                          is in file KI_DATA_R.
  120
  121                          Note that "fei#" is not a node#; the node# is in
  122                          KI$FEI.FEP#.
  123
  124                          The KI$FEI structure contains:
  125                          */
  126      %MACRO KI$FEI (FPTN=KI$FEI,STCLASS=BASED);
  127
  128      %LSET LISTDIR = '0'B;
  129      %LSET LISTEXP = '1'B;
  130      %LSET LISTCOM = '0'B;
  131      %LSET LISTSUB = '1'B;
  132      %LSET STC = SUBSTR(CONCAT(TEXTCHAR(STCLASS), '   '), 0, 3);
  133      %IF (STC = 'STA') OR (STC = 'CON') OR (STC = 'EXT');
  134      %LSET INIT = CHARTEXT(' INIT');
  135      %LSET ENIT = CHARTEXT('');
  136      %ELSE;
  137      %LSET INIT = CHARTEXT('/*');
  138      %LSET ENIT = CHARTEXT('*/');
  139      %ENDIF;
  140      DCL 1 FPTN STCLASS,
  141            2 LOCK BIT(72) %INIT('1'B)%ENIT,
  142            2 FECH CALIGNED,
  143              3 IOM UBIN(2) UNAL %INIT(0)%ENIT,
  144              3 DEV UBIN(7) UNAL %INIT(0)%ENIT,
  145            2 FEST UBIN BYTE CALIGNED %INIT(KIST_DN*0)%ENIT,
  146                          /*K* FEST - UBIN BYTE.
  147                          Indicates the state of the FEP.
  148                          The following SUBs from the file KI_SUBS_C
14:48 JUL 28 '97 KI_MACROS_C.:E05SI                                        5    
  149                          may be used to reference KI$FEI.FEST:
  150
  151                          .XEQ KI_SUBS_C KIST_subs String
  152                          */
  153            2 TCNT SBIN HALF UNAL %INIT(KITM_TOK*0)%ENIT, /* Count of 5 sec intervals */
  154                          /*K* TCNT - SBIN HALF.
  155                          See %SUBs for KITM_xxx in file KI_SUBS_C.
  156                          */
  157            2 OCQ$ PTR %INIT(ADDR(NIL)*0)%ENIT,
  158                          /*K* OCQ$ - PTR.
  159                          Contains the address of the start of the Output
  160                          Circular queue.  The output CQ contains the messages
  161                          to be written to the FEP.
  162                          */
  163            2 ICQ$ PTR %INIT(ADDR(NIL)*0)%ENIT,
  164                          /*K* ICQ$ - PTR.
  165                          Contains the address of the start of the Input
  166                          Circular Queue.  The input CQ contains the messages
  167                          that have been read from the FEP.
  168                          */
  169            2 FEWSQ UBIN WORD %INIT(0*0)%ENIT, /* WSQ for fep                       */
  170            2 IUTS UBIN WORD %INIT(0*0)%ENIT, /* Uts of last interupt to L6         */
  171            2 FROZEN BIT(1) UNAL %INIT('0'B*0)%ENIT, /* Interface if frozen         */
  172            2 NOTIME BIT(1) UNAL %INIT('0'B)%ENIT,
  173            2 SEQ UBIN(7) UNAL %INIT(0)%ENIT,
  174            2 BDU# UBIN BYTE UNAL %INIT(0*0)%ENIT, /* User# of booter or dumper     */
  175            2 MSI UBIN HALF HALIGNED %INIT(0*0)%ENIT, /* Messages since last interupt */
  176            2 BD$ PTR %INIT(ADDR(NIL)*0)%ENIT, /* Pointer to data on boot or dump   */
  177            2 BDAD REDEF BD$ ALIGNED,
  178              3 WADDR UBIN(18) UNAL,
  179              3 PGA REDEF WADDR UNAL,
  180                4 PAGE UBIN(8) UNAL,
  181                4 * UBIN(10) UNAL,
  182              3 * UBIN(18) UNAL,
  183            2 BDSZ SBIN HALF HALIGNED %INIT(0*0)%ENIT, /* Size of image             */
  184            2 BDARS SBIN HALF HALIGNED %INIT(0*0)%ENIT, /* Actual size              */
  185            2 BDCUR SBIN HALF HALIGNED %INIT(0*0)%ENIT, /* Current size             */
14:48 JUL 28 '97 KI_MACROS_C.:E05SI                                        6    
  186            2 FEP# UBIN BYTE CALIGNED %INIT(0)%ENIT,
  187            2 QOS UBIN BYTE CALIGNED %INIT(1)%ENIT,
  188            2 OQSZ UBIN BYTE CALIGNED %INIT(1*0)%ENIT, /* Size of OCQ               */
  189            2 IQSZ UBIN BYTE CALIGNED %INIT(1*0)%ENIT, /* Size of ICQ               */
  190            2 LST_RPTR UBIN HALF HALIGNED %INIT(0*0)%ENIT, /* Removal pointer in OCQ */
  191            2 PTPPNO# UBIN %INIT(0)%ENIT, /* Page no of page table                  */
  192            2 RCVPB UBIN WORD %INIT(0*0)%ENIT,
  193            2 PBST REDEF RCVPB ALIGNED,
  194              3 PROB UBIN HALF UNAL,
  195                          /*K* PBST.PROB - UBIN HALF.
  196                          See %SUB for KIER_xxx in file KI_SUBS_C.
  197                          */
  198              3 STATE UBIN HALF UNAL,
  199                          /*K* PBST.STATE - UBIN HALF.
  200                          The following SUBs from the file KI_SUBS_C
  201                          may be used to reference KI$FEI.PBST.STATE:
  202
  203                          .XEQ KI_SUBS_C KIST_subs String
  204                          */
  205            2 DSTAD UBIN WORD %INIT(0*0)%ENIT, /* Dump start address                */
  206            2 QFLHD$ PTR %INIT(ADDR(NIL)*0)%ENIT, /* Head of linked list for QFL    */
  207            2 TIMEOUT,    /* contains time out counts to be set by TIGR             */
  208              3 BOOT UBIN BYTE CALIGNED %INIT(0*0)%ENIT, /* KITM_BT count           */
  209              3 DUMP UBIN BYTE CALIGNED %INIT(0*0)%ENIT, /* KITM_DMP count          */
  210              3 RUN UBIN BYTE CALIGNED %INIT(0*0)%ENIT, /* KITM_RUN count           */
  211              3 INT UBIN BYTE CALIGNED %INIT(0*0)%ENIT; /* KITM_INIT count          */
  212
  213      %MEND;
  214
  215
  216                          /*F* NAME: KI$TCTX - Host Transport Context Blocks
  217
  218                          The host transport context blocks are allocated in
  219                          TIGR data.  The number of transport context blocks
  220                          to be allocated is specified by the TCTX option of
  221                          TIGR's MON command.  These context blocks contain
  222                          the data used by the host transport layer.
14:48 JUL 28 '97 KI_MACROS_C.:E05SI                                        7    
  223
  224                          The macro KI$TCTX in file KI_MACROS_C  generates the
  225                          structure for the transport context block.
  226
  227                          An entry in the Transport Context Table may be located
  228                          via a pointer in Transport Context pointer array:
  229                          }
  230                          }   DCL B$PTR_ARRAY(0:0) PTR BASED;
  231                          }
  232                          }   tctx$ = KI_TCTX$$ -> B$PTR_ARRAY(tctx#)
  233                          }
  234                          KI_TCTX$$ is SYMDEFed in file KIT_DATA_D.
  235
  236                          The KI$TCTX structure contains:
  237                          */
  238      %MACRO KI$TCTX (NAME=KI$TCTX, STCLASS=BASED,
  239                      FULL(YES=1,NO=0,ANY)=1,
  240                      ANLZ(YES=1,NO=0,ANY)=0);
  241
  242      DCL 1 NAME STCLASS ALIGNED,
  243            2 STATE UBIN BYTE CALIGNED,
  244                          /*K* STATE - UBIN BYTE.
  245                          Contains a value that reflects the state of
  246                          the transport connection.
  247                          .xeq KI_MACROS_C KI$TCTX_STATE_equ VALUES
  248                          */
  249            2 NODE UBIN BYTE CALIGNED,
  250                          /*K* NODE - UBIN BYTE.
  251                          Contains the node number of the remote fep if
  252                          this is a CP-6 transport connection.
  253
  254                          Contains the node number of the local fep where
  255                          the intermediate TCTX resides if this is an OSI
  256                          connection.
  257                          */
  258            2 REASON UBIN BYTE CALIGNED,
  259                          /*K* REASON - UBIN BYTE
14:48 JUL 28 '97 KI_MACROS_C.:E05SI                                        8    
  260                          Contains a code to be reported as the
  261                          reason for a transport disconnect request.
  262                          .xeq K_TRANSPORT_E K$TCTX_REASON_equ VALUES
  263                          */
  264            2 ERR UBIN BYTE CALIGNED,
  265                          /*K* ERR - UBIN BYTE
  266                          Contains a code to be reported as the clearing
  267                          information for a transport disconnect request.
  268                          .xeq K_TRANSPORT_E K$TCTX_ERR_equ VALUES
  269                          */
  270
  271            2 DST_REF UBIN(18) CALIGNED, /*maintained unpacked                      */
  272                          /*K* DST_REF - UBIN(16).
  273                          contains the transport_id of the peer of this
  274                          transport connection.  This is provided by the
  275                          peer in the connect request or in the connect
  276                          confirm fragment.  It is then used to identify the
  277                          various fragments sent to the peer.
  278                          */
  279            2 SRC_REF UBIN(18) CALIGNED,
  280                          /*K* SRC_REF - UBIN(16).
  281                          contains the transport_id for this end of the
  282                          transport connection.  This is the index into
  283                          the K$TCTX$$ pointer array for this Transport
  284                          Context Block and is the value used as the
  285                          source reference on fragments sent to the peer.
  286                          */
  287
  288            2 LOCAL_FEP UBIN BYTE CALIGNED,
  289                          /*K* LOCAL_FEP - UBIN BYTE.
  290                          Contains the node number of the local fep where
  291                          the intermediate transport context resides.
  292                          */
  293
  294            2 VERS UBIN BYTE CALIGNED,
  295                          /*K* VERS - UBIN BYTE.
  296                          The VERSion field is initialized to zero and
14:48 JUL 28 '97 KI_MACROS_C.:E05SI                                        9    
  297                          may be reset by the version parameter of the
  298                          received Connect Request TPDU.
  299                          */
  300
  301      %IF ANLZ=0;
  302      %LSET FLGLVL=2;
  303      %ELSE;
  304      %LSET FLGLVL=3;
  305            2 FLAGS,
  306      %ENDIF;
  307
  308            %(FLGLVL) * BIT(9) UNAL,
  309
  310            %(FLGLVL) * BIT(1) UNAL,
  311            %(FLGLVL) * BIT(1) UNAL,
  312            %(FLGLVL) * BIT(1) UNAL,
  313            %(FLGLVL) LOCAL_TERM BIT(1) UNAL,
  314                          /*K* LOCAL_TERM - BIT(1).
  315                          Set if the TPDU_DR was sent from this node.
  316                          */
  317            %(FLGLVL) REMOTE_TERM BIT(1) UNAL,
  318                          /*K* REMOTE_TERM - BIT(1).
  319                          Set if the TPDU_DR was received at this node.
  320                          */
  321            %(FLGLVL) OUTBOUND BIT(1) UNAL,
  322                          /*K* OUTBOUND - BIT(1).
  323                          Set if the TPDU_CR was sent from this node.
  324                          */
  325            %(FLGLVL) INBOUND BIT(1) UNAL,
  326                          /*K* INBOUND - BIT(1).
  327                          Set if the TPDU_CC was sent from this node.
  328                          */
  329            %(FLGLVL) FLOW_CONTROLLED BIT(1) UNAL,
  330                          /*K* FLOW_CONTROLLED - BIT(1).
  331                          Set if session calls transport with a K_WRITE or
  332                          K_TDATA_REQ function while the transport connection
  333                          is in the AKWAIT state.  The data will have been sent
14:48 JUL 28 '97 KI_MACROS_C.:E05SI                                        10   
  334                          to the local fep for buffering, however.
  335                          Reset when the transport connection is advanced to
  336                          the OPEN state.
  337                          */
  338            %(FLGLVL) SESSION_FLOW_STOPPED BIT(1) UNAL,
  339                          /*K* SESSION_FLOW_STOPPED - BIT(1).
  340                          Set when a CP6 Control TPDU with the FLOW_STOP
  341                          parameter has been received from the fep.  Reset
  342                          when a CP6 Control TPDU with FLOW_START has been
  343                          received.  Transport will not accept data from
  344                          Session when this bit is set.
  345                          */
  346
  347            2 * UBIN,
  348
  349            2 RECV_NEXT UBIN CALIGNED,
  350                          /*K* RECV_NEXT - UBIN.
  351                          Contains a count of the number of data TPDUs received
  352                          for this transport connection.  Because of segmentation
  353                          and reassembly that may occur on the local fep, this
  354                          number will not necessarily reflect the actual number
  355                          of TPDUs received over the transport connection.
  356                          */
  357            2 RECV_EXPD UBIN CALIGNED,
  358                          /*K* RECV_EXPD - UBIN.
  359                          Contains a count of the number of expedited data
  360                          TPDUs received for this transport connection.
  361                          */
  362            2 SEND_NEXT UBIN CALIGNED,
  363                          /*K* SEND_NEXT - UBIN.
  364                          Contains a count of the number of data TPDUs sent
  365                          over this transport connection.  Because of segmentation
  366                          and reassembly that may occur on the local fep, this
  367                          number will not necessarily reflect the actual number
  368                          of TPDUs sent over the transport connection.
  369                          */
  370            2 SEND_EXPD UBIN CALIGNED,
14:48 JUL 28 '97 KI_MACROS_C.:E05SI                                        11   
  371                          /*K* SEND_EXPD - UBIN.
  372                          Contains a count of the number of expedited data
  373                          TPDUs sent over this transport connection.
  374                          */
  375            2 * UBIN CALIGNED,
  376
  377            2 SSN_CRDT UBIN HALF CALIGNED,
  378                          /*K* SSN_CRDT - UBIN(18).
  379                          Contains the current value of the number of credits
  380                          that ISO session has given to transport.  Data may be
  381                          delivered to ISO session only if SSN_CRDT is greater
  382                          than zero.
  383                          */
  384
  385            2 * UBIN HALF CALIGNED,
  386
  387            %K$FPT_CONNECT_OSI (LVL=2,NAME=SSN, FULL=FULL);
  388
  389                          /*K* SSN - Structure.
  390                          The SSN portion of the Host Transport Context mainly
  391                          contains information supplied by OSI Session in the FPT
  392                          when calling transport with K_TCONNECT_REQ.
  393
  394                          When the context is used for CP-6 connections, the
  395                          SSN data is all zeros.
  396                          */
  397
  398                          /*K* SSN.TPDUSZ_PARM - UBIN BYTE.
  399                          Contains a value that represents the maximum TPDU size.
  400                          See K_TPDUSIZE_equ in file K_TRANSPORT_E.
  401                          */
  402                          /*K* SSN.SCID - SBIN WORD.
  403                          Contains the Session Connection IDentifer.
  404                          This value is supplied by OSI Session in the FPT
  405                          when calling transport with K_TCONNECT_REQ or
  406                          K_TCONNECT_RESP.
  407
14:48 JUL 28 '97 KI_MACROS_C.:E05SI                                        12   
  408                          Set to -1 by transport prior to calling OSI Session
  409                          for K_TCONNECT_IND.
  410                          */
  411
  412                          /*K* SSN.QOS - UBIN BYTE.
  413                          Contains a value that reflects the requested
  414                          Quality of Service.  This value is retained
  415                          in K$TCTX.SSN.QOS so it is available to Network.
  416                          */
  417
  418                          /*K* SSN.CLASS - UBIN BYTE.
  419                          Contains a value to indicate the requested
  420                          transport class for this OSI Session connection.
  421                          Permissable values are 0 and 4.
  422                          */
  423
  424                          /*N* SSN.TR_FLAGS.TRACE - BIT(1).
  425                          If set, indicates that the trace option is to be
  426                          enabled of the local fep for this transport connection.
  427                          */
  428
  429                          /*K* TR_FLAGS.CLNS - BIT(1).
  430                          If set, indicates that the ConnectionLess mode Network
  431                          Service is to be used for this connection.  If reset,
  432                          the connection oriented network service is to be used.
  433                          */
  434
  435                          /*K* SSN.TR_FLAGS.OSI - BIT(1).
  436                          If set, indicates that this is an OSI
  437                          Session Connection.
  438                          */
  439
  440                          /*K* SSN.TR_FLAGS.CLASS_2_FLOW - BIT(1).
  441                          Set if the use of explicit flow control in
  442                          Class 2 has been selected.
  443                          This bit has no meaning for other than Class 2.
  444                          */
14:48 JUL 28 '97 KI_MACROS_C.:E05SI                                        13   
  445
  446                          /*K* SSN.TR_FLAGS.EXTENDED - BIT(1).
  447                          Set if the use of extended formats is to be used
  448                          on this connection.
  449                          Valid only when the selected class is 4.
  450                          */
  451
  452                          /*K* SSN.TR_FLAGS.EXPEDITED - BIT(1).
  453                          Set if the use of expedited data is to be allowed
  454                          on this connection.
  455                          Valid only when the selected class is 4.
  456                          */
  457
  458                          /*K* SSN.TR_FLAGS.CHKSUM - BIT(1).
  459                          Set if the use of the transport checksum parameter
  460                          is to be used on this transport connection.
  461                          Valid only when the selected class is 4.
  462                          */
  463
  464                          /*K* SSN.SRC_TSAP - Structure.
  465                          Contains the TSAP portion of the source network
  466                          address.
  467
  468                          See the K$TSAP macro in file K_ADDRESS_M.
  469                          */
  470
  471                          /*K* SSN.DST_TSAP - Structure.
  472                          Contains the TSAP portion of the destination
  473                          network address.
  474
  475                          See the K$TSAP macro in file K_ADDRESS_M.
  476                          */
  477
  478                          /*K* SSN.SRC_NSAP - Structure.
  479                          Contains the NSAP portion of the source
  480                          network address.  K$RWPARM.SRC_ADDR$ is
  481                          set to the address of K$TCTX.SSN.SRC_NSAP prior to
14:48 JUL 28 '97 KI_MACROS_C.:E05SI                                        14   
  482                          calls to network.
  483
  484                          See the K$NSAP macro in file K_ADDRESS_M.
  485                          */
  486
  487                          /*K* SSN.DST_NSAP - Structure.
  488                          Contains the NSAP portion of the destination
  489                          network address.  K$RWPARM.DST_ADDR$ is
  490                          set to the address of K$TCTX.SSN.DST_NSAP prior to
  491                          calls to network.
  492
  493                          See the K$NSAP macro in file K_ADDRESS_M.
  494                          */
  495      %MEND;
  496
  497
  498
  499      /*F* NAME: KI$TCTX_STATE_equ - Host TCTX States
  500
  501      The file KI_MACROS_C contains a set of EQUs that may be used to
  502      reference KI$TCTX.STATE.  Each EQU is of the form KI_TSTATE_state
  503      where the equated values and their meanings are:
  504      */
  505
  506      /*K* VALUES -
  507      .fif
  508
  509      }state     value  meaning
  510      }--------  ----- ---------------------------------------------------
  511      }NULL        0   The TCTX has never been allocated
  512      }CLOSED      2   Transport connection is closed
  513      }WFCC        3   Waiting for the CC TPDU
  514      }WBCL        4   Waiting for the T_CONNECT response to close (not OSI)
  515      }OPEN        5   Transport connection is open
  516      }WFTRESP     6   Wait for T_CONNECT response
  517      }AKWAIT      7   Wait for acknowledgement of CC TPDU
  518      }CLOSING     8   Release in progress
14:48 JUL 28 '97 KI_MACROS_C.:E05SI                                        15   
  519
  520
  521      */
  522      /*  See page 101 of ISO spec.   */
  523      %EQU KI_TSTATE_NULL = 0;
  524      %EQU KI_TSTATE_CLOSED = 2;
  525      %EQU KI_TSTATE_WFCC = 3;
  526      %EQU KI_TSTATE_WBCL = 4;
  527      %EQU KI_TSTATE_OPEN = 5;
  528      %EQU KI_TSTATE_WFTRESP = 6;
  529      %EQU KI_TSTATE_AKWAIT = 7;
  530      %EQU KI_TSTATE_CLOSING = 8;
  531
  532
  533
  534      /*F* NAME: KI$TCTX_OPTS_TEXT
  535
  536      The KI$TCTX_OPTS_TEXT macro generates the text for the
  537      bit settings in KI$TCTX.TR_FLAGS.
  538      */
  539
  540      %MACRO KI$TCTX_OPTS_TEXT (NAME=KI$TCTX_OPTS_TEXT, STCLASS=CONSTANT);
  541
  542      %LSET LISTDIR='0'B;
  543      %LSET LISTEXP='1'B;
  544      %LSET LISTCOM='0'B;
  545      %LSET LISTSUB='1'B;
  546
  547      DCL 1 NAME STCLASS,
  548            2 * CHAR(0) INIT('OPTIONS '),
  549            2 SREST CHAR(0) UNAL INIT('set:   '),
  550            2 * CHAR(0) INIT('%1N(%)'),
  551            2 * CHAR(0) INIT('%1N(%)'),
  552            2 * CHAR(0) INIT('%1N(%)'),
  553            2 * CHAR(0) INIT('%1N(%)'),
  554            2 * CHAR(0) INIT('%1N(%)'),
  555            2 * CHAR(0) INIT('%1N(%)'),
14:48 JUL 28 '97 KI_MACROS_C.:E05SI                                        16   
  556            2 * CHAR(0) INIT('%1N(%)'),
  557            2 * CHAR(0) INIT('%1N(%)'),
  558            2 * CHAR(0) INIT('%1N(%)'),
  559            2 * CHAR(0) INIT('%1N(%)'),
  560            2 * CHAR(0) INIT('%1N(OSI_Flow %)'),
  561            2 * CHAR(0) INIT('%1N(Trace %)'),
  562            2 * CHAR(0) INIT('%1N(CLNS %)'),
  563            2 * CHAR(0) INIT('%1N(OSI %)'),
  564            2 * CHAR(0) INIT('%1N(Class2_Flow %)'),
  565            2 * CHAR(0) INIT('%1N(Extended %)'),
  566            2 * CHAR(0) INIT('%1N(Expeditd %)'),
  567            2 * CHAR(0) INIT('%1N(Checksum %)'),
  568            2 * CHAR(0) INIT('%S');
  569      %MEND;
  570
  571      /*F* NAME: KI$TCTX_FLGS_TEXT
  572
  573      The KI$TCTX_FLGS_TEXT macro generates the text for the
  574      bit settings in KI$TCTX.FLAGS.
  575      */
  576
  577      %MACRO KI$TCTX_FLGS_TEXT (NAME=KI$TCTX_FLGS_TEXT, STCLASS=CONSTANT);
  578
  579      %LSET LISTDIR='0'B;
  580      %LSET LISTEXP='1'B;
  581      %LSET LISTCOM='0'B;
  582      %LSET LISTSUB='1'B;
  583
  584      DCL 1 NAME STCLASS,
  585            2 * CHAR(0) INIT('FLAGS '),
  586            2 SREST CHAR(0) UNAL INIT('set:   '),
  587            2 * CHAR(0) INIT('%1N(%)'),
  588            2 * CHAR(0) INIT('%1N(%)'),
  589            2 * CHAR(0) INIT('%1N(%)'),
  590            2 * CHAR(0) INIT('%1N(%)'),
  591            2 * CHAR(0) INIT('%1N(%)'),
  592            2 * CHAR(0) INIT('%1N(%)'),
14:48 JUL 28 '97 KI_MACROS_C.:E05SI                                        17   
  593            2 * CHAR(0) INIT('%1N(%)'),
  594            2 * CHAR(0) INIT('%1N(%)'),
  595            2 * CHAR(0) INIT('%1N(%)'),
  596            2 * CHAR(0) INIT('%1N(%)'),
  597            2 * CHAR(0) INIT('%1N(%)'),
  598            2 * CHAR(0) INIT('%1N(%)'),
  599            2 * CHAR(0) INIT('%1N(Local_DR %)'),
  600            2 * CHAR(0) INIT('%1N(Remote_DR %)'),
  601            2 * CHAR(0) INIT('%1N(Out %)'),
  602            2 * CHAR(0) INIT('%1N(In %)'),
  603            2 * CHAR(0) INIT('%1N(Akwait  %)'),
  604            2 * CHAR(0) INIT('%1N(Flow_Stopped %)'),
  605            2 * CHAR(0) INIT('%S');
  606      %MEND;
  607

