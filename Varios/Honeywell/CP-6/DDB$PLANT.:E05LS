VERSION E05

PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:1    
        1        1        /*M* DDB$PLANT . */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*P*  NAME:     DDB$PLANT
        9        9              PURPOSE:  TO ESTABLISH BREAKPOINTS PRIOR TO RETURNING TO THE USER.
       10       10              */
       11       11        DDB$PLANT: PROC ALTRET;
       12       12        %PLIST;
       13       13        %INCLUDE XUH_MACRO_C;
       14       97        %INCLUDE DD_SD_M;
       15     1433        %S_D;
       16     2751        %INCLUDE DD$BASED;
       17     4054        %AT_FIRST;
       18     4082        %WHEN_FIRST (NAME=WHEN, STCLASS="BASED(FATT$)");
       19     4119        %U$SE;
       20     4127        %ALL_ATTACH;
       21     4142        %INCLUDE DD_SUBS_C;
       22     4413        %INCLUDE DD_ERR_C;
       23     4810    1   DCL CODE SBIN;
       24     4811    1   DCL FATT$ PTR;
       25     4812    1   DCL SAVEINS$ PTR;
       26     4813    1   DCL DRL$ PTR;
       27     4814    1   DCL I SBIN;
       28     4815    1   DCL BB$ PTR;
       29     4816    1   DCL SIZE UBIN;
       30     4817    1   DCL CHAR22 CHAR(22) BASED;
       31     4818    1   DCL SBIN36 SBIN BASED;
       32     4819    1   DCL TEMP UBIN;
       33     4820    1   DCL 1 TEMP1 REDEF TEMP,
       34     4821    1         2 * BIT(24) UNAL,
       35     4822    1         2 DESC# BIT(12) UNAL;
       36     4823        %INCLUDE CP_6;
       37     4904        %INCLUDE DD$DITEM;
PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:2    
       12+    5007             %LIST;
       13+    5008    1        DCL SDD$ PTR;
       14+    5009    1        DCL ZITEM$ PTR;
       15+    5010    1        DCL SDD_L6$ PTR;
       16+    5011    1        DCL ZITEM_L6$ PTR;
       38     5585        %FPT_SSC (FPTN=FPT_SSC, STCLASS=CONSTANT,
       39     5586                  FLAGS="'1000000000'B");
       40     5602        %FPT_SSC (FPTN=FPT$SSC, STCLASS=AUTO);
       41     5618        %FPT_DRTN (FPTN=FPT$DRTN, STCLASS=BASED);
       42     5642    1   DCL D_XDELTA BIT(1) SYMREF;
       43     5643    1   DCL H_XDELTA UBIN SYMREF;
       44     5644    1   DCL MIS$ PTR SYMREF;
       45     5645    1   DCL USE$ PTR SYMREF;
       46     5646    1   DCL UIS$ PTR SYMREF;
       47     5647    1   DCL DD_WHEN$ PTR SYMREF;
       48     5648    1   DCL USE_ORIG$ PTR SYMREF;
       49     5649    1   DCL DDB$PLANTONE ENTRY(4) ALTRET;
       50     5650    1   DCL DDR$BINTXT ENTRY(4);
       51     5651    1   DCL DDQ$WRITE ENTRY(2);
       52     5652    1   DCL DXB$CUSE ENTRY;
       53     5653    1   DCL DXB$UNODE ENTRY(1);
       54     5654    1   DCL DXB$USE ENTRY;
       55     5655    1   DCL DDE$ERROR ENTRY;
       56     5656    1   DCL DDK$GETWVAL ENTRY(6) ALTRET;
       57     5657    1   DCL DDM$GETMEM ENTRY(3) ALTRET;
       58     5658    1   DCL DUE$ERRMSG ENTRY;
       59     5659    1        IF S_D.DO_CALLED
       60     5660    2        THEN DO;
       61     5661    2             S_D.WHEN_SET = '0'B;
       62     5662    2             IF NOT D_XDELTA THEN S_D.DRTN$->FPT$DRTN.V.DBRK# = '0'B;
       63     5663    2             S_D.WHEN_NEXT$ = DD_WHEN$;
       64     5664    2             FPT$SSC = FPT_SSC;
       65     5665    2             FPT$SSC.V_ = VECTOR(FPT$SSC.V);
       66     5666    2           END;
       67     5667    2        DO I = 1 TO S_D.FIXLAST;
       68     5668    2             IF S_D.FIXCOM.FPRG(I) THEN GOTO ENDLOOP;
       69     5669    2             IF S_D.FIXCOM.INACTIVE(I) THEN GOTO ENDLOOP;
PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:3    
       70     5670    2             IF S_D.FIXCOM.NOT_IN(I) THEN GOTO ENDLOOP;
       71     5671    2             CODE = S_D.FIXCOM.CMD(I);
       72     5672    2             FATT$ = PINCRW(S_D.VARCOM$,S_D.FIXCOM.FAI(I));
       73     5673                                 /* IS CODE AT?  SEPARATE ATS IN THE MONITOR, AND ATS IN
       74     5674                                 THE USER...IN ORDER TO SELECT THE PROPER USE */
       75     5675    2             IF (CODE = C_AT) AND (S_D.FIXCOM.USER(I)='0'B)
       76     5676    3             THEN DO;
       77     5677    4                  IF D_XDELTA THEN DO;
       78     5678    4                       U$SE.TYPE = USE_MON; /* USE_MON */
       79     5679    4                       U$SE.LS = 0;
       80     5680    4                       U$SE.APT = USE_ORIG$ -> U$SE.APT;
       81     5681    4                       CALL DXB$USE;
       82     5682    4                       TEMP = FATT$ -> AT_FIRST.NODE;
       83     5683    4                       CALL DXB$UNODE(TEMP);
       84     5684    4                     END;
       85     5685    3   LAB1:
       86     5686    3                  SAVEINS$ = ADDR(FATT$->AT_FIRST.ORIG_INSTR);
       87     5687    3                  DRL$ = PINCRW(UIS$,S_D.FIXCOM.CDF(I));
       88     5688    3                  CALL DDB$PLANTONE(DRL$,I,DRL_AT,SAVEINS$) ALTRET(BAD_PUT);
       89     5689    3                  IF D_XDELTA AND H_XDELTA ~= 0
       90     5690    3                  THEN PINCRW(MIS$, H_XDELTA)->SBIN36 = -1;
              5690                           /* TELL THE PRE-FAULT HANDLER THAT WE NEED TO BE ENTERED */
       91     5691    3                  GOTO ENDLOOP;
       92     5692    3                END;
       93     5693    2             IF (CODE = C_AT) AND (S_D.FIXCOM.USER(I)='1'B)
       94     5694    3             THEN DO;
       95     5695    3                  U$SE.TYPE = USE_USER@;
       96     5696    3                  U$SE.APT = FATT$->ALL_ATTACH.U.APT;
       97     5697    3                  U$SE.LS  = FATT$->ALL_ATTACH.U.LS;
       98     5698    3                  CALL DXB$USE;
       99     5699    3                  GOTO LAB1;
      100     5700    3                END;
      101     5701    3             IF D_XDELTA THEN DO;
      102     5702    3                  U$SE.TYPE = USE_MON;     /* USE_MON */
      103     5703    3                  U$SE.LS = 0;
      104     5704    3                  CALL DXB$USE;
      105     5705    3                END;
PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:4    
      106     5706    2             IF CODE = C_OC                /* IS CODE ON CALL ?*/
      107     5707    3             THEN DO;
      108     5708    3                  GOTO LAB1;
      109     5709    3                END;
      110     5710    2             IF CODE = C_WHEN AND S_D.DO_CALLED
      111     5711    3             THEN DO;
      112     5712    3                  WHEN.OVALUE$ = S_D.WHEN_NEXT$;
      113     5713    3                  S_D.WHEN_NEXT$ = PINCRW(S_D.WHEN_NEXT$, (WHEN.BSIZE-1)/36 + 1);
      114     5714    3                  IF S_D.WHEN_HIGH$ = ADDR(NIL)
      115     5715    4                  THEN DO;
      116     5716    4                       CALL DDM$GETMEM(DD_WHEN$, 1024) ALTRET(NO_WHEN);
      117     5717    4                       S_D.WHEN_HIGH$ = PINCRW(DD_WHEN$, 1024);
      118     5718    4                     END;
      119     5719    4                  DO WHILE(S_D.WHEN_NEXT$ > PINCRW(S_D.WHEN_HIGH$, 1));
      120     5720    4                       CALL DDM$GETMEM(DD_WHEN$, 1024);
      121     5721    4                       S_D.WHEN_HIGH$ = PINCRW(S_D.WHEN_HIGH$, 1024);
      122     5722    4                     END;
      123     5723    3                  SIZE = WHEN.BSIZE;
      124     5724    3                  S_D.ACCESS = '1'B;
      125     5725    3                  REMEMBER BAD_WHEN IN S_D.REM_ACCESS;
      126     5726    3                  CALL DDK$GETWVAL (WHEN.OVALUE$, WHEN.ADDRESS, WHEN.BOFF,
      127     5727    3                    WHEN.BSIZE, WHEN.DESC#, WHEN.NOT_IS) ALTRET(BAD_GET);
      128     5728    3                  S_D.ACCESS = '0'B;
      129     5729    3                  IF WHEN.NOT_IS
      130     5730    4                  THEN DO;
      131     5731    4                       FPT$SSC.V.SEGFLG# = '1'B;
      132     5732    4                       TEMP = WHEN.DESC#;
      133     5733    4                       FPT$SSC.V.SEGID# = '6000'O | (TEMP1.DESC# & '0017'O);
      134     5734    4                     END;
      135     5735    3                  ELSE FPT$SSC.V.SEGFLG# = '0'B;
      136     5736    3                  FPT$SSC.V.VPNO# = WHEN.START_PAGE;
      137     5737    3                  FPT$SSC.V.NUMPGS# = 1 + WHEN.END_PAGE - WHEN.START_PAGE;
      138     5738    3                  CALL M$SSC (FPT$SSC) ALTRET(OOPS);
      139     5739    3                  S_D.WHEN_SET = '1'B;
      140     5740    3                  S_D.DRTN$->FPT$DRTN.V.DBRK# = '1'B;
      141     5741    3                END;
      142     5742    2   ENDLOOP: END;
PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:5    
      143     5743    1        CALL DXB$CUSE;
      144     5744    1        CALL DXB$UNODE(S_D.UNODE.CURRENT);
      145     5745    1        RETURN;
      146     5746    1   BAD_GET: ;
      147     5747    1        CALL DDE$ERROR;
      148     5748    1   BAD_WHEN: ;
      149     5749    1        S_D.ERROR = E@CANTACCESS;
      150     5750    1        CALL DDE$ERROR;
      151     5751    1   BAD_PUT: ;
      152     5752    1        S_D.OUTPUT = 'Breakpoint #';
      153     5753    1        BB$ = PINCRC(ADDR(S_D.OUTPUT),12);
      154     5754    1        CALL DDR$BINTXT (BB$, I, %UINT_FMT, SIZE);
      155     5755    1        BB$ = PINCRC(BB$,SIZE);
      156     5756    1        BB$->CHAR22 = ' set inactive by DELTA';
      157     5757    1        CALL DDQ$WRITE (ADDR(S_D.OUTPUT), 12+22+SIZE); /* Tell him which one is bad */
      158     5758    1        S_D.FIXCOM.INACTIVE(I) = '1'B;
      159     5759    1        GOTO ENDLOOP;
      160     5760    1   NO_WHEN:
      161     5761    1        S_D.OUTPUT = 'Can''t get memory for data breakpoint #';
      162     5762    1        BB$ = PINCRC(ADDR(S_D.OUTPUT), 38);
      163     5763    1        CALL DDR$BINTXT (BB$, I, %UINT_FMT, SIZE);
      164     5764    1        BB$ = PINCRC(BB$, SIZE);
      165     5765    1        CALL DDQ$WRITE (ADDR(S_D.OUTPUT), 38+SIZE);
      166     5766    1        ALTRETURN;
      167     5767    1   OOPS: CALL DUE$ERRMSG;
      168     5768    1        GOTO ENDLOOP;
      169     5769    1   END DDB$PLANT;
      170     5770        %EOD;

PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:6    
--  Include file information  --

   DD_SRTN_C.:E05TOU  is referenced.
   DD_ACODE_C.:E05TOU  is referenced.
   DD_ICODE_C.:E05TOU  is referenced.
   DD$DITEM.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   DD_ERR_C.:E05TOU  is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure DDB$PLANT.

   Procedure DDB$PLANT requires 366 words for executable code.
   Procedure DDB$PLANT requires 26 words of local(AUTO) storage.

PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:7    

 Object Unit name= DDB$PLANT                                  File name= DDB$PLANT.:E05TOU
 UTS= JUL 29 '97 13:44:03.88 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS     23     27  DDB$PLANT
    2   Proc  even  none   366    556  DDB$PLANT
    3  RoData even  none    10     12  DDB$PLANT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        0  DDB$PLANT
PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:8    

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 DXB$USE
         yes           Std       1 DXB$UNODE
 yes     yes           Std       6 DDK$GETWVAL
         yes           Std       2 DDQ$WRITE
         yes           Std       0 DUE$ERRMSG
 yes     yes           Std       4 DDB$PLANTONE
 yes     yes           Std       3 DDM$GETMEM
         yes           Std       0 DXB$CUSE
         yes           Std       0 DDE$ERROR
         yes           Std       4 DDR$BINTXT
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    S_D$                                  M$UC                                  D_XDELTA
     H_XDELTA                              MIS$                                  USE$
     UIS$                                  DD_WHEN$                              USE_ORIG$
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:9    


        1        1        /*M* DDB$PLANT . */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*P*  NAME:     DDB$PLANT
        9        9              PURPOSE:  TO ESTABLISH BREAKPOINTS PRIOR TO RETURNING TO THE USER.
       10       10              */
       11       11        DDB$PLANT: PROC ALTRET;

     11  2 000000   000000 700200 xent  DDB$PLANT    TSX0  ! X66_AUTO_0
         2 000001   000032 000000                    ZERO    26,0

       12       12        %PLIST;
       13       13        %INCLUDE XUH_MACRO_C;
       14       97        %INCLUDE DD_SD_M;
       15     1433        %S_D;
       16     2751        %INCLUDE DD$BASED;
       17     4054        %AT_FIRST;
       18     4082        %WHEN_FIRST (NAME=WHEN, STCLASS="BASED(FATT$)");
       19     4119        %U$SE;
       20     4127        %ALL_ATTACH;
       21     4142        %INCLUDE DD_SUBS_C;
       22     4413        %INCLUDE DD_ERR_C;
       23     4810    1   DCL CODE SBIN;
       24     4811    1   DCL FATT$ PTR;
       25     4812    1   DCL SAVEINS$ PTR;
       26     4813    1   DCL DRL$ PTR;
       27     4814    1   DCL I SBIN;
       28     4815    1   DCL BB$ PTR;
       29     4816    1   DCL SIZE UBIN;
       30     4817    1   DCL CHAR22 CHAR(22) BASED;
       31     4818    1   DCL SBIN36 SBIN BASED;
       32     4819    1   DCL TEMP UBIN;
PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:10   
       33     4820    1   DCL 1 TEMP1 REDEF TEMP,
       34     4821    1         2 * BIT(24) UNAL,
       35     4822    1         2 DESC# BIT(12) UNAL;
       36     4823        %INCLUDE CP_6;
       37     4904        %INCLUDE DD$DITEM;
       12+    5007             %LIST;
       13+    5008    1        DCL SDD$ PTR;
       14+    5009    1        DCL ZITEM$ PTR;
       15+    5010    1        DCL SDD_L6$ PTR;
       16+    5011    1        DCL ZITEM_L6$ PTR;
       38     5585        %FPT_SSC (FPTN=FPT_SSC, STCLASS=CONSTANT,
       39     5586                  FLAGS="'1000000000'B");
       40     5602        %FPT_SSC (FPTN=FPT$SSC, STCLASS=AUTO);
       41     5618        %FPT_DRTN (FPTN=FPT$DRTN, STCLASS=BASED);
       42     5642    1   DCL D_XDELTA BIT(1) SYMREF;
       43     5643    1   DCL H_XDELTA UBIN SYMREF;
       44     5644    1   DCL MIS$ PTR SYMREF;
       45     5645    1   DCL USE$ PTR SYMREF;
       46     5646    1   DCL UIS$ PTR SYMREF;
       47     5647    1   DCL DD_WHEN$ PTR SYMREF;
       48     5648    1   DCL USE_ORIG$ PTR SYMREF;
       49     5649    1   DCL DDB$PLANTONE ENTRY(4) ALTRET;
       50     5650    1   DCL DDR$BINTXT ENTRY(4);
       51     5651    1   DCL DDQ$WRITE ENTRY(2);
       52     5652    1   DCL DXB$CUSE ENTRY;
       53     5653    1   DCL DXB$UNODE ENTRY(1);
       54     5654    1   DCL DXB$USE ENTRY;
       55     5655    1   DCL DDE$ERROR ENTRY;
       56     5656    1   DCL DDK$GETWVAL ENTRY(6) ALTRET;
       57     5657    1   DCL DDM$GETMEM ENTRY(3) ALTRET;
       58     5658    1   DCL DUE$ERRMSG ENTRY;
       59     5659    1        IF S_D.DO_CALLED

   5659  2 000002   000000 470400 xsym               LDP0    S_D$
         2 000003   005315 234100                    SZN     2765,,PR0
         2 000004   000025 605000 2                  TPL     s:5667

PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:11   
       60     5660    2        THEN DO;

       61     5661    2             S_D.WHEN_SET = '0'B;

   5661  2 000005   005314 450100                    STZ     2764,,PR0

       62     5662    2             IF NOT D_XDELTA THEN S_D.DRTN$->FPT$DRTN.V.DBRK# = '0'B;

   5662  2 000006   000000 234000 xsym               SZN     D_XDELTA
         2 000007   000013 604000 2                  TMI     s:5663

   5662  2 000010   004704 471500                    LDP1    2500,,PR0
         2 000011   000000 236000 3                  LDQ     0
         2 000012   100013 356100                    ANSQ    11,,PR1

       63     5663    2             S_D.WHEN_NEXT$ = DD_WHEN$;

   5663  2 000013   000000 236000 xsym               LDQ     DD_WHEN$
         2 000014   005313 756100                    STQ     2763,,PR0

       64     5664    2             FPT$SSC = FPT_SSC;

   5664  2 000015   000100 100400                    MLR     fill='000'O
         2 000016   000000 000020 1                  ADSC9   FPT_SSC                  cn=0,n=16
         2 000017   200020 000020                    ADSC9   FPT$SSC,,AUTO            cn=0,n=16

       65     5665    2             FPT$SSC.V_ = VECTOR(FPT$SSC.V);

   5665  2 000020   000001 235000 3                  LDA     1
         2 000021   200024 452500                    STP2    FPT$SSC+4,,AUTO
         2 000022   200024 236100                    LDQ     FPT$SSC+4,,AUTO
         2 000023   000022 036003                    ADLQ    18,DU
         2 000024   200020 757100                    STAQ    FPT$SSC,,AUTO

       66     5666    2           END;

       67     5667    2        DO I = 1 TO S_D.FIXLAST;
PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:12   

   5667  2 000025   000001 235007                    LDA     1,DL
         2 000026   200007 755100                    STA     I,,AUTO
         2 000027   000374 710000 2                  TRA     ENDLOOP+1

       68     5668    2             IF S_D.FIXCOM.FPRG(I) THEN GOTO ENDLOOP;

   5668  2 000030   200007 236100                    LDQ     I,,AUTO
         2 000031   000006 402007                    MPY     6,DL
         2 000032   000000 470400 xsym               LDP0    S_D$
         2 000033   001212 236106                    LDQ     650,QL,PR0
         2 000034   000002 316003                    CANQ    2,DU
         2 000035   000373 601000 2                  TNZ     ENDLOOP

       69     5669    2             IF S_D.FIXCOM.INACTIVE(I) THEN GOTO ENDLOOP;

   5669  2 000036   200007 236100                    LDQ     I,,AUTO
         2 000037   000006 402007                    MPY     6,DL
         2 000040   001212 236106                    LDQ     650,QL,PR0
         2 000041   000400 316003                    CANQ    256,DU
         2 000042   000373 601000 2                  TNZ     ENDLOOP

       70     5670    2             IF S_D.FIXCOM.NOT_IN(I) THEN GOTO ENDLOOP;

   5670  2 000043   200007 236100                    LDQ     I,,AUTO
         2 000044   000006 402007                    MPY     6,DL
         2 000045   001212 236106                    LDQ     650,QL,PR0
         2 000046   000100 316003                    CANQ    64,DU
         2 000047   000373 601000 2                  TNZ     ENDLOOP

       71     5671    2             CODE = S_D.FIXCOM.CMD(I);

   5671  2 000050   200007 236100                    LDQ     I,,AUTO
         2 000051   000006 402007                    MPY     6,DL
         2 000052   001212 236106                    LDQ     650,QL,PR0
         2 000053   000033 772000                    QRL     27
         2 000054   200003 756100                    STQ     CODE,,AUTO
PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:13   

       72     5672    2             FATT$ = PINCRW(S_D.VARCOM$,S_D.FIXCOM.FAI(I));

   5672  2 000055   200007 236100                    LDQ     I,,AUTO
         2 000056   000006 402007                    MPY     6,DL
         2 000057   001214 720106                    LXL0    652,QL,PR0
         2 000060   004622 471500                    LDP1    2450,,PR0
         2 000061   100000 633510                    EPPR3   0,X0,PR1
         2 000062   200004 453500                    STP3    FATT$,,AUTO

       73     5673                                 /* IS CODE AT?  SEPARATE ATS IN THE MONITOR, AND ATS IN
       74     5674                                 THE USER...IN ORDER TO SELECT THE PROPER USE */
       75     5675    2             IF (CODE = C_AT) AND (S_D.FIXCOM.USER(I)='0'B)

   5675  2 000063   200003 235100                    LDA     CODE,,AUTO
         2 000064   000002 115007                    CMPA    2,DL
         2 000065   000154 601000 2                  TNZ     s:5693
         2 000066   001212 236106                    LDQ     650,QL,PR0
         2 000067   000001 316003                    CANQ    1,DU
         2 000070   000154 601000 2                  TNZ     s:5693

       76     5676    3             THEN DO;

       77     5677    4                  IF D_XDELTA THEN DO;

   5677  2 000071   000000 234000 xsym               SZN     D_XDELTA
         2 000072   000116 605000 2                  TPL     LAB1

       78     5678    4                       U$SE.TYPE = USE_MON; /* USE_MON */

   5678  2 000073   000000 474400 xsym               LDP4    USE$
         2 000074   400001 450100                    STZ     1,,PR4

       79     5679    4                       U$SE.LS = 0;

   5679  2 000075   400002 450100                    STZ     2,,PR4

PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:14   
       80     5680    4                       U$SE.APT = USE_ORIG$ -> U$SE.APT;

   5680  2 000076   000000 471400 xsym               LDP1    USE_ORIG$
         2 000077   100003 235100                    LDA     3,,PR1
         2 000100   400003 755100                    STA     3,,PR4

       81     5681    4                       CALL DXB$USE;

   5681  2 000101   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000102   000000 701000 xent               TSX1    DXB$USE
         2 000103   000000 011000                    NOP     0

       82     5682    4                       TEMP = FATT$ -> AT_FIRST.NODE;

   5682  2 000104   200004 470500                    LDP0    FATT$,,AUTO
         2 000105   000003 236100                    LDQ     3,,PR0
         2 000106   000022 772000                    QRL     18
         2 000107   200012 756100                    STQ     TEMP,,AUTO

       83     5683    4                       CALL DXB$UNODE(TEMP);

   5683  2 000110   200012 631500                    EPPR1   TEMP,,AUTO
         2 000111   200024 451500                    STP1    FPT$SSC+4,,AUTO
         2 000112   200024 630500                    EPPR0   FPT$SSC+4,,AUTO
         2 000113   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000114   000000 701000 xent               TSX1    DXB$UNODE
         2 000115   000000 011000                    NOP     0

       84     5684    4                     END;

       85     5685    3   LAB1:
       86     5686    3                  SAVEINS$ = ADDR(FATT$->AT_FIRST.ORIG_INSTR);

   5686  2 000116   200004 236100       LAB1         LDQ     FATT$,,AUTO
         2 000117   000002 036003                    ADLQ    2,DU
         2 000120   200005 756100                    STQ     SAVEINS$,,AUTO

PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:15   
       87     5687    3                  DRL$ = PINCRW(UIS$,S_D.FIXCOM.CDF(I));

   5687  2 000121   200007 236100                    LDQ     I,,AUTO
         2 000122   000006 402007                    MPY     6,DL
         2 000123   000000 470400 xsym               LDP0    S_D$
         2 000124   001213 720106                    LXL0    651,QL,PR0
         2 000125   000000 636010                    EAQ     0,X0
         2 000126   000000 036000 xsym               ADLQ    UIS$
         2 000127   200006 756100                    STQ     DRL$,,AUTO

       88     5688    3                  CALL DDB$PLANTONE(DRL$,I,DRL_AT,SAVEINS$) ALTRET(BAD_PUT);

   5688  2 000130   200005 631500                    EPPR1   SAVEINS$,,AUTO
         2 000131   200027 451500                    STP1    FPT$SSC+7,,AUTO
         2 000132   000002 236000 3                  LDQ     2
         2 000133   200026 756100                    STQ     FPT$SSC+6,,AUTO
         2 000134   200007 633500                    EPPR3   I,,AUTO
         2 000135   200025 453500                    STP3    FPT$SSC+5,,AUTO
         2 000136   200006 634500                    EPPR4   DRL$,,AUTO
         2 000137   200024 454500                    STP4    FPT$SSC+4,,AUTO
         2 000140   200024 630500                    EPPR0   FPT$SSC+4,,AUTO
         2 000141   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 000142   000000 701000 xent               TSX1    DDB$PLANTONE
         2 000143   000424 702000 2                  TSX2    BAD_PUT

       89     5689    3                  IF D_XDELTA AND H_XDELTA ~= 0

   5689  2 000144   000000 234000 xsym               SZN     D_XDELTA
         2 000145   000153 605000 2                  TPL     s:5691
         2 000146   000000 235000 xsym               LDA     H_XDELTA
         2 000147   000153 600000 2                  TZE     s:5691

       90     5690    3                  THEN PINCRW(MIS$, H_XDELTA)->SBIN36 = -1;
              5690                           /* TELL THE PRE-FAULT HANDLER THAT WE NEED TO BE ENTERED */

   5690  2 000150   000001 336007                    LCQ     1,DL
         2 000151   000000 470400 xsym               LDP0    MIS$
PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:16   
         2 000152   000000 756105                    STQ     0,AL,PR0

       91     5691    3                  GOTO ENDLOOP;

   5691  2 000153   000373 710000 2                  TRA     ENDLOOP

       92     5692    3                END;
       93     5693    2             IF (CODE = C_AT) AND (S_D.FIXCOM.USER(I)='1'B)

   5693  2 000154   000002 115007                    CMPA    2,DL
         2 000155   000201 601000 2                  TNZ     s:5701
         2 000156   200007 236100                    LDQ     I,,AUTO
         2 000157   000006 402007                    MPY     6,DL
         2 000160   001212 236106                    LDQ     650,QL,PR0
         2 000161   000001 316003                    CANQ    1,DU
         2 000162   000201 600000 2                  TZE     s:5701

       94     5694    3             THEN DO;

       95     5695    3                  U$SE.TYPE = USE_USER@;

   5695  2 000163   000003 235007                    LDA     3,DL
         2 000164   000000 474400 xsym               LDP4    USE$
         2 000165   400001 755100                    STA     1,,PR4

       96     5696    3                  U$SE.APT = FATT$->ALL_ATTACH.U.APT;

   5696  2 000166   300001 236100                    LDQ     1,,PR3
         2 000167   000022 772000                    QRL     18
         2 000170   400003 756100                    STQ     3,,PR4

       97     5697    3                  U$SE.LS  = FATT$->ALL_ATTACH.U.LS;

   5697  2 000171   300001 236100                    LDQ     1,,PR3
         2 000172   000017 772000                    QRL     15
         2 000173   000007 376007                    ANQ     7,DL
         2 000174   400002 756100                    STQ     2,,PR4
PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:17   

       98     5698    3                  CALL DXB$USE;

   5698  2 000175   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000176   000000 701000 xent               TSX1    DXB$USE
         2 000177   000000 011000                    NOP     0

       99     5699    3                  GOTO LAB1;

   5699  2 000200   000116 710000 2                  TRA     LAB1

      100     5700    3                END;
      101     5701    3             IF D_XDELTA THEN DO;

   5701  2 000201   000000 234000 xsym               SZN     D_XDELTA
         2 000202   000211 605000 2                  TPL     s:5706

      102     5702    3                  U$SE.TYPE = USE_MON;     /* USE_MON */

   5702  2 000203   000000 474400 xsym               LDP4    USE$
         2 000204   400001 450100                    STZ     1,,PR4

      103     5703    3                  U$SE.LS = 0;

   5703  2 000205   400002 450100                    STZ     2,,PR4

      104     5704    3                  CALL DXB$USE;

   5704  2 000206   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000207   000000 701000 xent               TSX1    DXB$USE
         2 000210   000000 011000                    NOP     0

      105     5705    3                END;

      106     5706    2             IF CODE = C_OC                /* IS CODE ON CALL ?*/

   5706  2 000211   200003 235100                    LDA     CODE,,AUTO
PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:18   
         2 000212   000037 115007                    CMPA    31,DL
         2 000213   000215 601000 2                  TNZ     s:5710

      107     5707    3             THEN DO;

      108     5708    3                  GOTO LAB1;

   5708  2 000214   000116 710000 2                  TRA     LAB1

      109     5709    3                END;
      110     5710    2             IF CODE = C_WHEN AND S_D.DO_CALLED

   5710  2 000215   000103 115007                    CMPA    67,DL
         2 000216   000373 601000 2                  TNZ     ENDLOOP
         2 000217   000000 470400 xsym               LDP0    S_D$
         2 000220   005315 234100                    SZN     2765,,PR0
         2 000221   000373 605000 2                  TPL     ENDLOOP

      111     5711    3             THEN DO;

      112     5712    3                  WHEN.OVALUE$ = S_D.WHEN_NEXT$;

   5712  2 000222   005313 236100                    LDQ     2763,,PR0
         2 000223   200004 471500                    LDP1    FATT$,,AUTO
         2 000224   100002 756100                    STQ     2,,PR1

      113     5713    3                  S_D.WHEN_NEXT$ = PINCRW(S_D.WHEN_NEXT$, (WHEN.BSIZE-1)/36 + 1);

   5713  2 000225   100016 236100                    LDQ     14,,PR1
         2 000226   000001 136007                    SBLQ    1,DL
         2 000227   000044 506007                    DIV     36,DL
         2 000230   005313 473500                    LDP3    2763,,PR0
         2 000231   300001 634506                    EPPR4   1,QL,PR3
         2 000232   005313 454500                    STP4    2763,,PR0

      114     5714    3                  IF S_D.WHEN_HIGH$ = ADDR(NIL)

PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:19   
   5714  2 000233   005312 236100                    LDQ     2762,,PR0
         2 000234   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000235   000246 601000 2                  TNZ     s:5719

      115     5715    4                  THEN DO;

      116     5716    4                       CALL DDM$GETMEM(DD_WHEN$, 1024) ALTRET(NO_WHEN);

   5716  2 000236   000004 630400 3                  EPPR0   4
         2 000237   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000240   000000 701000 xent               TSX1    DDM$GETMEM
         2 000241   000504 702000 2                  TSX2    NO_WHEN

      117     5717    4                       S_D.WHEN_HIGH$ = PINCRW(DD_WHEN$, 1024);

   5717  2 000242   000000 236000 xsym               LDQ     DD_WHEN$
         2 000243   002000 036003                    ADLQ    1024,DU
         2 000244   000000 470400 xsym               LDP0    S_D$
         2 000245   005312 756100                    STQ     2762,,PR0

      118     5718    4                     END;

      119     5719    4                  DO WHILE(S_D.WHEN_NEXT$ > PINCRW(S_D.WHEN_HIGH$, 1));

   5719  2 000246   000257 710000 2                  TRA     s:5722

      120     5720    4                       CALL DDM$GETMEM(DD_WHEN$, 1024);

   5720  2 000247   000004 630400 3                  EPPR0   4
         2 000250   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000251   000000 701000 xent               TSX1    DDM$GETMEM
         2 000252   000000 011000                    NOP     0

      121     5721    4                       S_D.WHEN_HIGH$ = PINCRW(S_D.WHEN_HIGH$, 1024);

   5721  2 000253   000000 470400 xsym               LDP0    S_D$
         2 000254   005312 236100                    LDQ     2762,,PR0
PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:20   
         2 000255   002000 036003                    ADLQ    1024,DU
         2 000256   005312 756100                    STQ     2762,,PR0

      122     5722    4                     END;

   5722  2 000257   000001 036003                    ADLQ    1,DU
         2 000260   005313 116100                    CMPQ    2763,,PR0
         2 000261   000247 602000 2                  TNC     s:5720

      123     5723    3                  SIZE = WHEN.BSIZE;

   5723  2 000262   200004 471500                    LDP1    FATT$,,AUTO
         2 000263   100016 235100                    LDA     14,,PR1
         2 000264   200011 755100                    STA     SIZE,,AUTO

      124     5724    3                  S_D.ACCESS = '1'B;

   5724  2 000265   400000 236003                    LDQ     -131072,DU
         2 000266   000016 756100                    STQ     14,,PR0

      125     5725    3                  REMEMBER BAD_WHEN IN S_D.REM_ACCESS;

   5725  2 000267   000416 635000 2                  EAA     BAD_WHEN
         2 000270   000024 452500                    STP2    20,,PR0
         2 000271   000025 755100                    STA     21,,PR0

      126     5726    3                  CALL DDK$GETWVAL (WHEN.OVALUE$, WHEN.ADDRESS, WHEN.BOFF,

   5726  2 000272   200004 236100                    LDQ     FATT$,,AUTO
         2 000273   000015 036003                    ADLQ    13,DU
         2 000274   200031 756100                    STQ     FPT$SSC+9,,AUTO
         2 000275   200004 236100                    LDQ     FATT$,,AUTO
         2 000276   000014 036003                    ADLQ    12,DU
         2 000277   200030 756100                    STQ     FPT$SSC+8,,AUTO
         2 000300   200004 236100                    LDQ     FATT$,,AUTO
         2 000301   000016 036003                    ADLQ    14,DU
         2 000302   200027 756100                    STQ     FPT$SSC+7,,AUTO
PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:21   
         2 000303   200004 236100                    LDQ     FATT$,,AUTO
         2 000304   000017 036003                    ADLQ    15,DU
         2 000305   200026 756100                    STQ     FPT$SSC+6,,AUTO
         2 000306   200004 236100                    LDQ     FATT$,,AUTO
         2 000307   000012 036003                    ADLQ    10,DU
         2 000310   200025 756100                    STQ     FPT$SSC+5,,AUTO
         2 000311   200004 236100                    LDQ     FATT$,,AUTO
         2 000312   000002 036003                    ADLQ    2,DU
         2 000313   200024 756100                    STQ     FPT$SSC+4,,AUTO
         2 000314   200024 630500                    EPPR0   FPT$SSC+4,,AUTO
         2 000315   000024 631400 xsym               EPPR1   B_VECTNIL+20
         2 000316   000000 701000 xent               TSX1    DDK$GETWVAL
         2 000317   000413 702000 2                  TSX2    BAD_GET

      127     5727    3                    WHEN.BSIZE, WHEN.DESC#, WHEN.NOT_IS) ALTRET(BAD_GET);
      128     5728    3                  S_D.ACCESS = '0'B;

   5728  2 000320   000000 470400 xsym               LDP0    S_D$
         2 000321   000016 450100                    STZ     14,,PR0

      129     5729    3                  IF WHEN.NOT_IS

   5729  2 000322   200004 471500                    LDP1    FATT$,,AUTO
         2 000323   100015 234100                    SZN     13,,PR1
         2 000324   000345 605000 2                  TPL     s:5735

      130     5730    4                  THEN DO;

      131     5731    4                       FPT$SSC.V.SEGFLG# = '1'B;

   5731  2 000325   200000 236003                    LDQ     65536,DU
         2 000326   200022 256100                    ORSQ    FPT$SSC+2,,AUTO

      132     5732    4                       TEMP = WHEN.DESC#;

   5732  2 000327   100014 235100                    LDA     12,,PR1
         2 000330   200012 755100                    STA     TEMP,,AUTO
PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:22   

      133     5733    4                       FPT$SSC.V.SEGID# = '6000'O | (TEMP1.DESC# & '0017'O);

   5733  2 000331   200012 236100                    LDQ     TEMP,,AUTO
         2 000332   000030 736000                    QLS     24
         2 000333   001700 376003                    ANQ     960,DU
         2 000334   000022 772000                    QRL     18
         2 000335   000000 620006                    EAX0    0,QL
         2 000336   600000 260003                    ORX0    -65536,DU
         2 000337   000000 636010                    EAQ     0,X0
         2 000340   000016 772000                    QRL     14
         2 000341   200022 676100                    ERQ     FPT$SSC+2,,AUTO
         2 000342   000006 376000 3                  ANQ     6
         2 000343   200022 656100                    ERSQ    FPT$SSC+2,,AUTO

      134     5734    4                     END;

   5734  2 000344   000347 710000 2                  TRA     s:5736

      135     5735    3                  ELSE FPT$SSC.V.SEGFLG# = '0'B;

   5735  2 000345   000007 236000 3                  LDQ     7
         2 000346   200022 356100                    ANSQ    FPT$SSC+2,,AUTO

      136     5736    3                  FPT$SSC.V.VPNO# = WHEN.START_PAGE;

   5736  2 000347   100020 220100                    LDX0    16,,PR1
         2 000350   200023 440100                    SXL0    FPT$SSC+3,,AUTO

      137     5737    3                  FPT$SSC.V.NUMPGS# = 1 + WHEN.END_PAGE - WHEN.START_PAGE;

   5737  2 000351   100020 236100                    LDQ     16,,PR1
         2 000352   000022 772000                    QRL     18
         2 000353   200024 756100                    STQ     FPT$SSC+4,,AUTO
         2 000354   100020 236100                    LDQ     16,,PR1
         2 000355   777777 376007                    ANQ     -1,DL
         2 000356   200024 136100                    SBLQ    FPT$SSC+4,,AUTO
PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:23   
         2 000357   000001 621006                    EAX1    1,QL
         2 000360   200023 741100                    STX1    FPT$SSC+3,,AUTO

      138     5738    3                  CALL M$SSC (FPT$SSC) ALTRET(OOPS);

   5738  2 000361   200020 630500                    EPPR0   FPT$SSC,,AUTO
         2 000362   430013 713400                    CLIMB   alt,+12299
         2 000363   400000 401760                    pmme    nvectors=1
         2 000364   000552 702000 2                  TSX2    OOPS

      139     5739    3                  S_D.WHEN_SET = '1'B;

   5739  2 000365   400000 236003                    LDQ     -131072,DU
         2 000366   000000 470400 xsym               LDP0    S_D$
         2 000367   005314 756100                    STQ     2764,,PR0

      140     5740    3                  S_D.DRTN$->FPT$DRTN.V.DBRK# = '1'B;

   5740  2 000370   004704 471500                    LDP1    2500,,PR0
         2 000371   004000 236003                    LDQ     2048,DU
         2 000372   100013 256100                    ORSQ    11,,PR1

      141     5741    3                END;

      142     5742    2   ENDLOOP: END;

   5742  2 000373   200007 054100       ENDLOOP      AOS     I,,AUTO
         2 000374   000000 470400 xsym               LDP0    S_D$
         2 000375   200007 236100                    LDQ     I,,AUTO
         2 000376   000047 116100                    CMPQ    39,,PR0
         2 000377   000030 604400 2                  TMOZ    s:5668

      143     5743    1        CALL DXB$CUSE;

   5743  2 000400   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000401   000000 701000 xent               TSX1    DXB$CUSE
         2 000402   000000 011000                    NOP     0
PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:24   

      144     5744    1        CALL DXB$UNODE(S_D.UNODE.CURRENT);

   5744  2 000403   000000 236000 xsym               LDQ     S_D$
         2 000404   004757 036003                    ADLQ    2543,DU
         2 000405   200024 756100                    STQ     FPT$SSC+4,,AUTO
         2 000406   200024 630500                    EPPR0   FPT$SSC+4,,AUTO
         2 000407   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000410   000000 701000 xent               TSX1    DXB$UNODE
         2 000411   000000 011000                    NOP     0

      145     5745    1        RETURN;

   5745  2 000412   000000 702200 xent               TSX2  ! X66_ARET

   5738  2 000413                       BAD_GET      null
      146     5746    1   BAD_GET: ;
      147     5747    1        CALL DDE$ERROR;

   5747  2 000413   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000414   000000 701000 xent               TSX1    DDE$ERROR
         2 000415   000000 011000                    NOP     0

      148     5748    1   BAD_WHEN: ;

   5748  2 000416                       BAD_WHEN     null
      149     5749    1        S_D.ERROR = E@CANTACCESS;

   5749  2 000416   000355 235007                    LDA     237,DL
         2 000417   000000 470400 xsym               LDP0    S_D$
         2 000420   000013 755100                    STA     11,,PR0

      150     5750    1        CALL DDE$ERROR;

   5750  2 000421   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000422   000000 701000 xent               TSX1    DDE$ERROR
         2 000423   000000 011000                    NOP     0
PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:25   

   5749  2 000424                       BAD_PUT      null
      151     5751    1   BAD_PUT: ;
      152     5752    1        S_D.OUTPUT = 'Breakpoint #';

   5752  2 000424   000000 470400 xsym               LDP0    S_D$
         2 000425   040100 100400                    MLR     fill='040'O
         2 000426   000004 000014 1                  ADSC9   FPT_SSC+4                cn=0,n=12
         2 000427   005335 004000                    ADSC9   2781,,PR0                cn=0,n=2048

      153     5753    1        BB$ = PINCRC(ADDR(S_D.OUTPUT),12);

   5753  2 000430   000000 236000 xsym               LDQ     S_D$
         2 000431   005340 036003                    ADLQ    2784,DU
         2 000432   200010 756100                    STQ     BB$,,AUTO

      154     5754    1        CALL DDR$BINTXT (BB$, I, %UINT_FMT, SIZE);

   5754  2 000433   200011 631500                    EPPR1   SIZE,,AUTO
         2 000434   200027 451500                    STP1    FPT$SSC+7,,AUTO
         2 000435   000010 236000 3                  LDQ     8
         2 000436   200026 756100                    STQ     FPT$SSC+6,,AUTO
         2 000437   200007 633500                    EPPR3   I,,AUTO
         2 000440   200025 453500                    STP3    FPT$SSC+5,,AUTO
         2 000441   200010 634500                    EPPR4   BB$,,AUTO
         2 000442   200024 454500                    STP4    FPT$SSC+4,,AUTO
         2 000443   200024 630500                    EPPR0   FPT$SSC+4,,AUTO
         2 000444   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 000445   000000 701000 xent               TSX1    DDR$BINTXT
         2 000446   000000 011000                    NOP     0

      155     5755    1        BB$ = PINCRC(BB$,SIZE);

   5755  2 000447   200011 236100                    LDQ     SIZE,,AUTO
         2 000450   000020 736000                    QLS     16
         2 000451   200010 036100                    ADLQ    BB$,,AUTO
         2 000452   200010 756100                    STQ     BB$,,AUTO
PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:26   

      156     5756    1        BB$->CHAR22 = ' set inactive by DELTA';

   5756  2 000453   200010 470500                    LDP0    BB$,,AUTO
         2 000454   040100 100400                    MLR     fill='040'O
         2 000455   000007 000026 1                  ADSC9   FPT_SSC+7                cn=0,n=22
         2 000456   000000 000026                    ADSC9   0,,PR0                   cn=0,n=22

      157     5757    1        CALL DDQ$WRITE (ADDR(S_D.OUTPUT), 12+22+SIZE); /* Tell him which one is bad */

   5757  2 000457   000000 236000 xsym               LDQ     S_D$
         2 000460   005335 036003                    ADLQ    2781,DU
         2 000461   200024 756100                    STQ     FPT$SSC+4,,AUTO
         2 000462   200011 235100                    LDA     SIZE,,AUTO
         2 000463   000042 035007                    ADLA    34,DL
         2 000464   200025 755100                    STA     FPT$SSC+5,,AUTO
         2 000465   200025 630500                    EPPR0   FPT$SSC+5,,AUTO
         2 000466   200027 450500                    STP0    FPT$SSC+7,,AUTO
         2 000467   200024 631500                    EPPR1   FPT$SSC+4,,AUTO
         2 000470   200026 451500                    STP1    FPT$SSC+6,,AUTO
         2 000471   200026 630500                    EPPR0   FPT$SSC+6,,AUTO
         2 000472   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000473   000000 701000 xent               TSX1    DDQ$WRITE
         2 000474   000000 011000                    NOP     0

      158     5758    1        S_D.FIXCOM.INACTIVE(I) = '1'B;

   5758  2 000475   200007 236100                    LDQ     I,,AUTO
         2 000476   000006 402007                    MPY     6,DL
         2 000477   000000 470400 xsym               LDP0    S_D$
         2 000500   000000 620006                    EAX0    0,QL
         2 000501   000400 236003                    LDQ     256,DU
         2 000502   001212 256110                    ORSQ    650,X0,PR0

      159     5759    1        GOTO ENDLOOP;

   5759  2 000503   000373 710000 2                  TRA     ENDLOOP
PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:27   

      160     5760    1   NO_WHEN:
      161     5761    1        S_D.OUTPUT = 'Can''t get memory for data breakpoint #';

   5761  2 000504   000000 470400 xsym  NO_WHEN      LDP0    S_D$
         2 000505   040100 100400                    MLR     fill='040'O
         2 000506   000015 000046 1                  ADSC9   FPT_SSC+13               cn=0,n=38
         2 000507   005335 004000                    ADSC9   2781,,PR0                cn=0,n=2048

      162     5762    1        BB$ = PINCRC(ADDR(S_D.OUTPUT), 38);

   5762  2 000510   000000 236000 xsym               LDQ     S_D$
         2 000511   000011 036000 3                  ADLQ    9
         2 000512   200010 756100                    STQ     BB$,,AUTO

      163     5763    1        CALL DDR$BINTXT (BB$, I, %UINT_FMT, SIZE);

   5763  2 000513   200011 631500                    EPPR1   SIZE,,AUTO
         2 000514   200027 451500                    STP1    FPT$SSC+7,,AUTO
         2 000515   000010 236000 3                  LDQ     8
         2 000516   200026 756100                    STQ     FPT$SSC+6,,AUTO
         2 000517   200007 633500                    EPPR3   I,,AUTO
         2 000520   200025 453500                    STP3    FPT$SSC+5,,AUTO
         2 000521   200010 634500                    EPPR4   BB$,,AUTO
         2 000522   200024 454500                    STP4    FPT$SSC+4,,AUTO
         2 000523   200024 630500                    EPPR0   FPT$SSC+4,,AUTO
         2 000524   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 000525   000000 701000 xent               TSX1    DDR$BINTXT
         2 000526   000000 011000                    NOP     0

      164     5764    1        BB$ = PINCRC(BB$, SIZE);

   5764  2 000527   200011 236100                    LDQ     SIZE,,AUTO
         2 000530   000020 736000                    QLS     16
         2 000531   200010 036100                    ADLQ    BB$,,AUTO
         2 000532   200010 756100                    STQ     BB$,,AUTO

PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:28   
      165     5765    1        CALL DDQ$WRITE (ADDR(S_D.OUTPUT), 38+SIZE);

   5765  2 000533   000000 236000 xsym               LDQ     S_D$
         2 000534   005335 036003                    ADLQ    2781,DU
         2 000535   200024 756100                    STQ     FPT$SSC+4,,AUTO
         2 000536   200011 235100                    LDA     SIZE,,AUTO
         2 000537   000046 035007                    ADLA    38,DL
         2 000540   200025 755100                    STA     FPT$SSC+5,,AUTO
         2 000541   200025 630500                    EPPR0   FPT$SSC+5,,AUTO
         2 000542   200027 450500                    STP0    FPT$SSC+7,,AUTO
         2 000543   200024 631500                    EPPR1   FPT$SSC+4,,AUTO
         2 000544   200026 451500                    STP1    FPT$SSC+6,,AUTO
         2 000545   200026 630500                    EPPR0   FPT$SSC+6,,AUTO
         2 000546   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000547   000000 701000 xent               TSX1    DDQ$WRITE
         2 000550   000000 011000                    NOP     0

      166     5766    1        ALTRETURN;

   5766  2 000551   000000 702200 xent               TSX2  ! X66_AALT

      167     5767    1   OOPS: CALL DUE$ERRMSG;

   5767  2 000552   000002 631400 xsym  OOPS         EPPR1   B_VECTNIL+2
         2 000553   000000 701000 xent               TSX1    DUE$ERRMSG
         2 000554   000000 011000                    NOP     0

      168     5768    1        GOTO ENDLOOP;

   5768  2 000555   000373 710000 2                  TRA     ENDLOOP

FPT_SSC
 Sect OctLoc
   1     000   000001 777640   000002 006000   000000 001000   000000 000000    ................

(unnamed)
 Sect OctLoc
PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:29   
   1     004   102162 145141   153160 157151   156164 040043   040163 145164    Breakpoint # set
   1     010   040151 156141   143164 151166   145040 142171   040104 105114     inactive by DEL
   1     014   124101 040040   103141 156047   164040 147145   164040 155145    TA  Can't get me
   1     020   155157 162171   040146 157162   040144 141164   141040 142162    mory for data br
   1     024   145141 153160   157151 156164   040043 040040                    eakpoint #

(unnamed)
 Sect OctLoc
   3     000   773777 777777   000001 777640   000003 006000   000000 002000    ................
   3     004   000000 006000   000003 006000   000017 776000   577777 777777    ................
   3     010   000004 006000   005346 400000                                    ........
      169     5769    1   END DDB$PLANT;
      170     5770        %EOD;

PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:30   
--  Include file information  --

   DD_SRTN_C.:E05TOU  is referenced.
   DD_ACODE_C.:E05TOU  is referenced.
   DD_ICODE_C.:E05TOU  is referenced.
   DD$DITEM.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   DD_ERR_C.:E05TOU  is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure DDB$PLANT.

   Procedure DDB$PLANT requires 366 words for executable code.
   Procedure DDB$PLANT requires 26 words of local(AUTO) storage.
PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:31   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:32   
          MINI XREF LISTING

ALL_ATTACH.U.APT
      4134**DCL      5696>>ASSIGN
ALL_ATTACH.U.LS
      4135**DCL      5697>>ASSIGN
ALL_ATTACH.UNUSED
      4132**DCL      4133--REDEF    4137--REDEF
AT_FIRST.NODE
      4070**DCL      5682>>ASSIGN
AT_FIRST.ORIG_INSTR
      4068**DCL      5686--ASSIGN
AT_FIRST.UNUSED
      4059**DCL      4060--REDEF    4064--REDEF
BAD_GET
      5738**LABEL    5726--CALLALT
BAD_PUT
      5749**LABEL    5688--CALLALT
BAD_WHEN
      5748**LABEL    5725--REMEMBR
BB$
      4815**DCL      5753<<ASSIGN   5754<>CALL     5755<<ASSIGN   5755>>ASSIGN   5756>>ASSIGN   5762<<ASSIGN
      5763<>CALL     5764<<ASSIGN   5764>>ASSIGN
CHAR22
      4817**DCL      5756<<ASSIGN
CODE
      4810**DCL      5671<<ASSIGN   5675>>IF       5693>>IF       5706>>IF       5710>>IF
DDB$PLANTONE
      5649**DCL-ENT  5688--CALL
DDE$ERROR
      5655**DCL-ENT  5747--CALL     5750--CALL
DDK$GETWVAL
      5656**DCL-ENT  5726--CALL
DDM$GETMEM
PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:33   
      5657**DCL-ENT  5716--CALL     5720--CALL
DDQ$WRITE
      5651**DCL-ENT  5757--CALL     5765--CALL
DDR$BINTXT
      5650**DCL-ENT  5754--CALL     5763--CALL
DD_WHEN$
      5647**DCL      5663>>ASSIGN   5716<>CALL     5717>>ASSIGN   5720<>CALL
DRL$
      4813**DCL      5687<<ASSIGN   5688<>CALL
DUE$ERRMSG
      5658**DCL-ENT  5767--CALL
DXB$CUSE
      5652**DCL-ENT  5743--CALL
DXB$UNODE
      5653**DCL-ENT  5683--CALL     5744--CALL
DXB$USE
      5654**DCL-ENT  5681--CALL     5698--CALL     5704--CALL
D_XDELTA
      5642**DCL      5662>>IF       5677>>IF       5689>>IF       5701>>IF
ENDLOOP
      5742**LABEL    5668--GOTO     5669--GOTO     5670--GOTO     5691--GOTO     5759--GOTO     5768--GOTO
FATT$
      4811**DCL      4083--IMP-PTR  5672<<ASSIGN   5682>>ASSIGN   5686>>ASSIGN   5696>>ASSIGN   5697>>ASSIGN
      5712>>ASSIGN   5713>>ASSIGN   5723>>ASSIGN   5726>>CALL     5726>>CALL     5726>>CALL     5726>>CALL
      5726>>CALL     5726>>CALL     5729>>IF       5732>>ASSIGN   5736>>ASSIGN   5737>>ASSIGN   5737>>ASSIGN
FPT$DRTN.V.DBRK#
      5635**DCL      5662<<ASSIGN   5740<<ASSIGN
FPT$DRTN.V.IR#
      5631**DCL      5631--REDEF
FPT$SSC
      5613**DCL      5664<<ASSIGN   5738<>CALL
FPT$SSC.V
      5613**DCL      5665--ASSIGN
FPT$SSC.V.NUMPGS#
      5615**DCL      5737<<ASSIGN
FPT$SSC.V.SEGFLG#
PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:34   
      5613**DCL      5731<<ASSIGN   5735<<ASSIGN
FPT$SSC.V.SEGID#
      5614**DCL      5733<<ASSIGN
FPT$SSC.V.VPNO#
      5615**DCL      5736<<ASSIGN
FPT$SSC.V_
      5613**DCL      5665<<ASSIGN
FPT_SSC
      5597**DCL      5664>>ASSIGN
FPT_SSC.V
      5597**DCL      5597--DCLINIT
H_XDELTA
      5643**DCL      5689>>IF       5690>>ASSIGN
I
      4814**DCL      5667<<DOINDEX  5668>>IF       5669>>IF       5670>>IF       5671>>ASSIGN   5672>>ASSIGN
      5675>>IF       5687>>ASSIGN   5688<>CALL     5693>>IF       5754<>CALL     5758>>ASSIGN   5763<>CALL
LAB1
      5686**LABEL    5699--GOTO     5708--GOTO
M$SSC
      4871**DCL-ENT  5738--CALL
MIS$
      5644**DCL      5690>>ASSIGN
NO_WHEN
      5761**LABEL    5716--CALLALT
OOPS
      5767**LABEL    5738--CALLALT
SAVEINS$
      4812**DCL      5686<<ASSIGN   5688<>CALL
SBIN36
      4818**DCL      5690<<ASSIGN
SIZE
      4816**DCL      5723<<ASSIGN   5754<>CALL     5755>>ASSIGN   5757>>CALL     5763<>CALL     5764>>ASSIGN
      5765>>CALL
S_D.ACCESS
      1472**DCL      5724<<ASSIGN   5728<<ASSIGN
S_D.CURRENT_CHANNEL
PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:35   
      2385**DCL      2387--REDEF
S_D.DEBUGA
      1537**DCL      1539--REDEF
S_D.DO_CALLED
      2374**DCL      5659>>IF       5710>>IF
S_D.DRTN$
      1990**DCL      5662>>ASSIGN   5740>>ASSIGN
S_D.EIS
      2495**DCL      2524--REDEF
S_D.ERROR
      1466**DCL      5749<<ASSIGN
S_D.FIXCOM.CDF
      1901**DCL      5687>>ASSIGN
S_D.FIXCOM.CMD
      1893**DCL      5671>>ASSIGN
S_D.FIXCOM.FAI
      1903**DCL      5672>>ASSIGN
S_D.FIXCOM.FPRG
      1898**DCL      5668>>IF
S_D.FIXCOM.INACTIVE
      1894**DCL      5669>>IF       5758<<ASSIGN
S_D.FIXCOM.NOT_IN
      1896**DCL      5670>>IF
S_D.FIXCOM.USER
      1899**DCL      5675>>IF       5693>>IF
S_D.FIXLAST
      1529**DCL      5667>>DOINDEX
S_D.HOST_MESSAGE_BUF_REMOTE
      2428**DCL      2429--REDEF    2443--REDEF
S_D.JDE
      2042**DCL      2043--REDEF
S_D.L$.VALUE
      1595**DCL      1601--REDEF    1609--REDEF    1612--REDEF    1615--REDEF    1618--REDEF
S_D.L$.VALUE.L
      1596**DCL      1597--REDEF    1598--REDEF
S_D.L6_MESSAGE_BUF
PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:36   
      2449**DCL      2451--REDEF
S_D.OUTPUT
      2415**DCL      2417--REDEF    5752<<ASSIGN   5753--ASSIGN   5757--CALL     5761<<ASSIGN   5762--ASSIGN
      5765--CALL
S_D.REMOTE_MSG.FNCC
      2434**DCL      2435--REDEF
S_D.REMOTE_MSG.STXC
      2430**DCL      2431--REDEF
S_D.REMOTE_MSG.SUBFNCC
      2438**DCL      2439--REDEF
S_D.REM_ACCESS
      1480**DCL      5725<<REMEMBR
S_D.SV
      1494**DCL      1515--REDEF
S_D.UNODE.CURRENT
      2089**DCL      5744<>CALL
S_D.VARCOM$
      1906**DCL      5672>>ASSIGN
S_D.WHEN_HIGH$
      2368**DCL      5714>>IF       5717<<ASSIGN   5719>>DOWHILE  5721<<ASSIGN   5721>>ASSIGN
S_D.WHEN_NEXT$
      2370**DCL      5663<<ASSIGN   5712>>ASSIGN   5713<<ASSIGN   5713>>ASSIGN   5719>>DOWHILE
S_D.WHEN_SET
      2372**DCL      5661<<ASSIGN   5739<<ASSIGN
S_D$
      2746**DCL      1442--IMP-PTR  5659>>IF       5661>>ASSIGN   5662>>ASSIGN   5663>>ASSIGN   5667>>DOINDEX
      5668>>IF       5669>>IF       5670>>IF       5671>>ASSIGN   5672>>ASSIGN   5672>>ASSIGN   5675>>IF
      5687>>ASSIGN   5693>>IF       5710>>IF       5712>>ASSIGN   5713>>ASSIGN   5713>>ASSIGN   5714>>IF
      5717>>ASSIGN   5719>>DOWHILE  5719>>DOWHILE  5721>>ASSIGN   5721>>ASSIGN   5724>>ASSIGN   5725>>REMEMBR
      5728>>ASSIGN   5739>>ASSIGN   5740>>ASSIGN   5744>>CALL     5749>>ASSIGN   5752>>ASSIGN   5753>>ASSIGN
      5757>>CALL     5758>>ASSIGN   5761>>ASSIGN   5762>>ASSIGN   5765>>CALL
TEMP
      4819**DCL      4820--REDEF    5682<<ASSIGN   5683<>CALL     5732<<ASSIGN
TEMP1.DESC#
      4822**DCL      5733>>ASSIGN
U$SE.APT
PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:37   
      4124**DCL      5680<<ASSIGN   5680>>ASSIGN   5696<<ASSIGN
U$SE.LS
      4123**DCL      5679<<ASSIGN   5697<<ASSIGN   5703<<ASSIGN
U$SE.TYPE
      4122**DCL      5678<<ASSIGN   5695<<ASSIGN   5702<<ASSIGN
UIS$
      5646**DCL      5687>>ASSIGN
USE$
      5645**DCL      4120--IMP-PTR  5678>>ASSIGN   5679>>ASSIGN   5680>>ASSIGN   5695>>ASSIGN   5696>>ASSIGN
      5697>>ASSIGN   5702>>ASSIGN   5703>>ASSIGN
USE_ORIG$
      5648**DCL      5680>>ASSIGN
WHEN.ADDRESS
      4110**DCL      5726<>CALL
WHEN.BOFF
      4115**DCL      5726<>CALL
WHEN.BSIZE
      4114**DCL      5713>>ASSIGN   5723>>ASSIGN   5726<>CALL
WHEN.DESC#
      4112**DCL      5726<>CALL     5732>>ASSIGN
WHEN.END_PAGE
      4117**DCL      5737>>ASSIGN
WHEN.NOT_IS
      4113**DCL      5726<>CALL     5729>>IF
WHEN.OVALUE$
      4096**DCL      5712<<ASSIGN   5726<>CALL
WHEN.START_PAGE
      4116**DCL      5736>>ASSIGN   5737>>ASSIGN
WHEN.U.APT
      4089**DCL      4090--REDEF
WHEN.UNUSED
      4087**DCL      4088--REDEF
PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:38   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:39   
              MINI UREF LISTING

DDB$PLANT      11**PROC
M$ACCT    4849**DCL-ENT
M$ACTIVATE    4852**DCL-ENT
M$ALIB    4845**DCL-ENT
M$ASUSER    4847**DCL-ENT
M$ATTACH    4854**DCL-ENT
M$BADPP    4872**DCL-ENT
M$CGCTL    4853**DCL-ENT
M$CGINFO    4853**DCL-ENT
M$CHECK    4834**DCL-ENT
M$CHGUNIT    4892**DCL-ENT
M$CLOSE    4832**DCL-ENT
M$CLRSTK    4890**DCL-ENT
M$CMDVAR    4901**DCL-ENT
M$CONFIG    4862**DCL-ENT
M$CORRES    4837**DCL-ENT
M$CPEXIT    4846**DCL-ENT
M$CVM    4870**DCL-ENT
M$CVOL    4835**DCL-ENT
M$DCLFLD    4862**DCL-ENT
M$DEACTIVATE    4852**DCL-ENT
M$DELREC    4834**DCL-ENT
M$DEQ    4899**DCL-ENT
M$DETACH    4854**DCL-ENT
M$DEVICE    4836**DCL-ENT
M$DISPLAY    4899**DCL-ENT
M$DISPRES    4839**DCL-ENT
M$DLIB    4845**DCL-ENT
M$DRIBBLE    4862**DCL-ENT
M$DRTN    4890**DCL-ENT
M$DSUSER    4847**DCL-ENT
M$ENQ    4898**DCL-ENT
PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:40   
M$EOM    4857**DCL-ENT
M$ERASE    4863**DCL-ENT
M$ERR    4844**DCL-ENT
M$ERRMSG    4895**DCL-ENT
M$EVENT    4887**DCL-ENT
M$EXHUME    4896**DCL-ENT
M$EXIT    4844**DCL-ENT
M$EXTEND    4836**DCL-ENT
M$FDP    4868**DCL-ENT
M$FDS    4867**DCL-ENT
M$FEBOOT    4860**DCL-ENT
M$FECTL    4861**DCL-ENT
M$FEDUMP    4860**DCL-ENT
M$FID    4895**DCL-ENT
M$FINDPROC    4849**DCL-ENT
M$FSUSER    4847**DCL-ENT
M$FVP    4869**DCL-ENT
M$FWCG    4853**DCL-ENT
M$GBPL    4873**DCL-ENT
M$GDDL    4869**DCL-ENT
M$GDP    4868**DCL-ENT
M$GDS    4867**DCL-ENT
M$GETDCB    4838**DCL-ENT
M$GETMOUSE    4878**DCL-ENT
M$GETPM    4879**DCL-ENT
M$GJOB    4897**DCL-ENT
M$GLINEATTR    4857**DCL-ENT
M$GOODPP    4872**DCL-ENT
M$GPLATEN    4865**DCL-ENT
M$GPROMPT    4864**DCL-ENT
M$GTRMATTR    4858**DCL-ENT
M$GTRMCTL    4856**DCL-ENT
M$GTRMTAB    4859**DCL-ENT
M$GVP    4868**DCL-ENT
M$HELP    4895**DCL-ENT
M$INT    4887**DCL-ENT
PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:41   
M$INTRTN    4848**DCL-ENT
M$IOQ    4883**DCL-ENT
M$JOBSTATS    4897**DCL-ENT
M$KEYIN    4837**DCL-ENT
M$LDEV    4832**DCL-ENT
M$LDTRC    4845**DCL-ENT
M$LIMIT    4838**DCL-ENT
M$LINES    4837**DCL-ENT
M$LINK    4844**DCL-ENT
M$MADMUCK    4840**DCL-ENT
M$MAKUSER    4871**DCL-ENT
M$MBS    4839**DCL-ENT
M$MDFFLD    4863**DCL-ENT
M$MERC    4888**DCL-ENT
M$MERCS    4889**DCL-ENT
M$MIRROR    4883**DCL-ENT
M$MONINFO    4900**DCL-ENT
M$MPL    4873**DCL-ENT
M$NODEINFO    4864**DCL-ENT
M$NXTUSR    4898**DCL-ENT
M$OCMSG    4896**DCL-ENT
M$OLAY    4844**DCL-ENT
M$OPEN    4832**DCL-ENT
M$PAS    4873**DCL-ENT
M$PATHCON    4896**DCL-ENT
M$PDS    4867**DCL-ENT
M$PFIL    4834**DCL-ENT
M$PLATEN    4858**DCL-ENT
M$PRECORD    4836**DCL-ENT
M$PROCNAME    4849**DCL-ENT
M$PROFILE    4860**DCL-ENT
M$PROMPT    4856**DCL-ENT
M$RACST    4840**DCL-ENT
M$RDSYSLOG    4881**DCL-ENT
M$READ    4833**DCL-ENT
M$RELDCB    4838**DCL-ENT
PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:42   
M$RELRES    4839**DCL-ENT
M$RELSTARF    4841**DCL-ENT
M$REM    4841**DCL-ENT
M$RENV    4888**DCL-ENT
M$REQUIRE    4840**DCL-ENT
M$RETRY    4889**DCL-ENT
M$RETRYS    4889**DCL-ENT
M$REW    4835**DCL-ENT
M$RLSFLD    4863**DCL-ENT
M$RPRIV    4891**DCL-ENT
M$RSPP    4870**DCL-ENT
M$RSWITCH    4892**DCL-ENT
M$RUE    4898**DCL-ENT
M$SAD    4871**DCL-ENT
M$SAVE    4847**DCL-ENT
M$SCON    4848**DCL-ENT
M$SCREECH    4846**DCL-ENT
M$SENV    4888**DCL-ENT
M$SETFMA    4832**DCL-ENT
M$SETFP    4861**DCL-ENT
M$SINPUT    4859**DCL-ENT
M$SLCFLD    4864**DCL-ENT
M$SMOUSE    4878**DCL-ENT
M$SMPRT    4870**DCL-ENT
M$SPRIV    4891**DCL-ENT
M$SSWITCH    4891**DCL-ENT
M$STATE    4900**DCL-ENT
M$STD    4872**DCL-ENT
M$STIMER    4886**DCL-ENT
M$STLPP    4869**DCL-ENT
M$STRAP    4886**DCL-ENT
M$STRMATTR    4858**DCL-ENT
M$STRMCTL    4856**DCL-ENT
M$STRMTAB    4859**DCL-ENT
M$SYMBIO    4897**DCL-ENT
M$SYSCON    4883**DCL-ENT
PL6.E3A0      #001=DDB$PLANT File=DDB$PLANT.:E05TSI                              TUE 07/29/97 13:44 Page:43   
M$SYSID    4901**DCL-ENT
M$TDCLOSE    4882**DCL-ENT
M$TDIO    4882**DCL-ENT
M$TDOPEN    4881**DCL-ENT
M$TDREQCPU    4882**DCL-ENT
M$TEMPWROC    4876**DCL-ENT
M$TIME    4899**DCL-ENT
M$TRAP    4886**DCL-ENT
M$TRMISC    4861**DCL-ENT
M$TRMPRG    4857**DCL-ENT
M$TRTN    4890**DCL-ENT
M$TRUNC    4833**DCL-ENT
M$TTIMER    4886**DCL-ENT
M$UC    4856**DCL
M$UMPL    4873**DCL-ENT
M$UNFID    4895**DCL-ENT
M$UNLATCH    4852**DCL-ENT
M$UNSHARE    4849**DCL-ENT
M$USRFIELD    4892**DCL-ENT
M$VIRTUAL    4867**DCL-ENT
M$WAIT    4890**DCL-ENT
M$WEOF    4835**DCL-ENT
M$WRITE    4833**DCL-ENT
M$WRSYSLOG    4881**DCL-ENT
M$XCON    4887**DCL-ENT
M$XCONRTN    4848**DCL-ENT
M$XEQTIME    4900**DCL-ENT
M$XFLUSH    4841**DCL-ENT
M$XMOUSE    4878**DCL-ENT
M$XXX    4844**DCL-ENT
M$YC    4846**DCL-ENT
SDD$    5008**DCL
SDD_L6$    5010**DCL
ZITEM$    5009**DCL
ZITEM_L6$    5011**DCL

PL6.E3A0      #002=DDB$CHECK_ADDR File=DDB$PLANT.:E05TSI                         TUE 07/29/97 13:44 Page:44   
      171        1        /*T***********************************************************/
      172        2        /*T*                                                         */
      173        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      174        4        /*T*                                                         */
      175        5        /*T***********************************************************/
      176        6        /*P* NAME:  DDB$CHECK_ADDR
      177        7             PURPOSE:  To try to access a location for AT, WHEN, and ONCALL
      178        8                       to make sure DELTA can access that location.
      179        9             DESCRIPTON:  Try to access the location passed in IC.  Returns
      180       10                          if it can, otherwise altreturns. */
      181       11        /*P* NAME:  DDB$CHECK_ADDR
      182       12             PURPOSE:  To try to access a location for AT, WHEN, and ONCALL
      183       13                       to make sure DELTA can access that location.
      184       14             DESCRIPTON:  Try to access the location passed in IC.  Returns
      185       15                          if it can, otherwise altreturns. */
      186       16        /*D* NAME:  DDB$CHECK_ADDR
      187       17             CALL:  CALL DDB$CHECK_ADDR(IC) ALTRET(error);
      188       18             INPUT:  IC OF LOCATION TO ACCESS
      189       19             DESCRIPTON:  Try to access the location passed in IC.  Returns
      190       20                          if it can, otherwise altreturns. */
      191       21        DDB$CHECK_ADDR: PROC (IC, OFFSET) ALTRET;
      192       22
      193       23        %INCLUDE XUH_MACRO_C;
      194      107        %INCLUDE DD_SD_M;
      195     1443        %S_D;
      196     2761    1   DCL IC SBIN;
      197     2762    1   DCL OFFSET SBIN;
      198     2763    1   DCL DRL$ PTR;
      199     2764    1   DCL UIS$ PTR SYMREF;
      200     2765    1   DCL SAVE_INS SBIN;
      201     2766    1   DCL INS SBIN BASED;
      202     2767    1   DCL DDC$PUTONE ENTRY(2) ALTRET;
      203     2768
      204     2769    1        S_D.ACCESS = '1'B;
      205     2770    1        REMEMBER ALT IN S_D.REM_ACCESS;
      206     2771    1        IF OFFSET = 0
      207     2772    1        THEN DRL$ = PINCRW(UIS$,IC);
PL6.E3A0      #002=DDB$CHECK_ADDR File=DDB$PLANT.:E05TSI                         TUE 07/29/97 13:44 Page:45   
      208     2773    1        ELSE DRL$ = PINCRB(UIS$, IC*36 + OFFSET);
      209     2774    1        SAVE_INS = DRL$ -> INS;
      210     2775    1        CALL DDC$PUTONE(DRL$, SAVE_INS) ALTRET(ALT);
      211     2776    1        S_D.ACCESS = '0'B;
      212     2777    1        RETURN;
      213     2778
      214     2779    1   ALT: ;
      215     2780                                                /* Can't access location at IC */
      216     2781    1        ALTRETURN;
      217     2782    1   END DDB$CHECK_ADDR;

PL6.E3A0      #002=DDB$CHECK_ADDR File=DDB$PLANT.:E05TSI                         TUE 07/29/97 13:44 Page:46   
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDB$CHECK_ADDR.

   Procedure DDB$CHECK_ADDR requires 41 words for executable code.
   Procedure DDB$CHECK_ADDR requires 10 words of local(AUTO) storage.

    No errors detected in file DDB$PLANT.:E05TSI    .

PL6.E3A0      #002=DDB$CHECK_ADDR File=DDB$PLANT.:E05TSI                         TUE 07/29/97 13:44 Page:47   

 Object Unit name= DDB$CHECK_ADDR                             File name= DDB$PLANT.:E05TOU
 UTS= JUL 29 '97 13:44:32.16 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    41     51  DDB$CHECK_ADDR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        2  DDB$CHECK_ADDR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 DDC$PUTONE
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    S_D$                                  UIS$                                  B_VECTNIL
PL6.E3A0      #002=DDB$CHECK_ADDR File=DDB$PLANT.:E05TSI                         TUE 07/29/97 13:44 Page:48   


      171        1        /*T***********************************************************/
      172        2        /*T*                                                         */
      173        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      174        4        /*T*                                                         */
      175        5        /*T***********************************************************/
      176        6        /*P* NAME:  DDB$CHECK_ADDR
      177        7             PURPOSE:  To try to access a location for AT, WHEN, and ONCALL
      178        8                       to make sure DELTA can access that location.
      179        9             DESCRIPTON:  Try to access the location passed in IC.  Returns
      180       10                          if it can, otherwise altreturns. */
      181       11        /*P* NAME:  DDB$CHECK_ADDR
      182       12             PURPOSE:  To try to access a location for AT, WHEN, and ONCALL
      183       13                       to make sure DELTA can access that location.
      184       14             DESCRIPTON:  Try to access the location passed in IC.  Returns
      185       15                          if it can, otherwise altreturns. */
      186       16        /*D* NAME:  DDB$CHECK_ADDR
      187       17             CALL:  CALL DDB$CHECK_ADDR(IC) ALTRET(error);
      188       18             INPUT:  IC OF LOCATION TO ACCESS
      189       19             DESCRIPTON:  Try to access the location passed in IC.  Returns
      190       20                          if it can, otherwise altreturns. */
      191       21        DDB$CHECK_ADDR: PROC (IC, OFFSET) ALTRET;

     21  0 000000   000000 700200 xent  DDB$CHECK_A* TSX0  ! X66_AUTO_2
         0 000001   000012 000002                    ZERO    10,2

      192       22
      193       23        %INCLUDE XUH_MACRO_C;
      194      107        %INCLUDE DD_SD_M;
      195     1443        %S_D;
      196     2761    1   DCL IC SBIN;
      197     2762    1   DCL OFFSET SBIN;
      198     2763    1   DCL DRL$ PTR;
      199     2764    1   DCL UIS$ PTR SYMREF;
      200     2765    1   DCL SAVE_INS SBIN;
      201     2766    1   DCL INS SBIN BASED;
      202     2767    1   DCL DDC$PUTONE ENTRY(2) ALTRET;
PL6.E3A0      #002=DDB$CHECK_ADDR File=DDB$PLANT.:E05TSI                         TUE 07/29/97 13:44 Page:49   
      203     2768
      204     2769    1        S_D.ACCESS = '1'B;

   2769  0 000002   400000 236003                    LDQ     -131072,DU
         0 000003   000000 470400 xsym               LDP0    S_D$
         0 000004   000016 756100                    STQ     14,,PR0

      205     2770    1        REMEMBER ALT IN S_D.REM_ACCESS;

   2770  0 000005   000050 635000 0                  EAA     ALT
         0 000006   000024 452500                    STP2    20,,PR0
         0 000007   000025 755100                    STA     21,,PR0

      206     2771    1        IF OFFSET = 0

   2771  0 000010   200004 471500                    LDP1    @OFFSET,,AUTO
         0 000011   100000 235100                    LDA     0,,PR1
         0 000012   000021 601000 0                  TNZ     s:2773

      207     2772    1        THEN DRL$ = PINCRW(UIS$,IC);

   2772  0 000013   200003 473500                    LDP3    @IC,,AUTO
         0 000014   300000 236100                    LDQ     0,,PR3
         0 000015   000022 736000                    QLS     18
         0 000016   000000 036000 xsym               ADLQ    UIS$
         0 000017   200005 756100                    STQ     DRL$,,AUTO
         0 000020   000032 710000 0                  TRA     s:2774

      208     2773    1        ELSE DRL$ = PINCRB(UIS$, IC*36 + OFFSET);

   2773  0 000021   200003 473500                    LDP3    @IC,,AUTO
         0 000022   300000 236100                    LDQ     0,,PR3
         0 000023   000044 402007                    MPY     36,DL
         0 000024   100000 036100                    ADLQ    0,,PR1
         0 000025   000000 474400 xsym               LDP4    UIS$
         0 000026   000030 605000 0                  TPL     s:2773+7
         0 000027   000044 036003                    ADLQ    36,DU
PL6.E3A0      #002=DDB$CHECK_ADDR File=DDB$PLANT.:E05TSI                         TUE 07/29/97 13:44 Page:50   
         0 000030   400000 503506                    ABD     0,QL,PR4
         0 000031   200005 454500                    STP4    DRL$,,AUTO

      209     2774    1        SAVE_INS = DRL$ -> INS;

   2774  0 000032   200005 474500                    LDP4    DRL$,,AUTO
         0 000033   400000 235100                    LDA     0,,PR4
         0 000034   200006 755100                    STA     SAVE_INS,,AUTO

      210     2775    1        CALL DDC$PUTONE(DRL$, SAVE_INS) ALTRET(ALT);

   2775  0 000035   200006 635500                    EPPR5   SAVE_INS,,AUTO
         0 000036   200011 455500                    STP5    SAVE_INS+3,,AUTO
         0 000037   200005 636500                    EPPR6   DRL$,,AUTO
         0 000040   200010 456500                    STP6    SAVE_INS+2,,AUTO
         0 000041   200010 630500                    EPPR0   SAVE_INS+2,,AUTO
         0 000042   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000043   000000 701000 xent               TSX1    DDC$PUTONE
         0 000044   000050 702000 0                  TSX2    ALT

      211     2776    1        S_D.ACCESS = '0'B;

   2776  0 000045   000000 470400 xsym               LDP0    S_D$
         0 000046   000016 450100                    STZ     14,,PR0

      212     2777    1        RETURN;

   2777  0 000047   000000 702200 xent               TSX2  ! X66_ARET

   2776  0 000050                       ALT          null
      213     2778
      214     2779    1   ALT: ;
      215     2780                                                /* Can't access location at IC */
      216     2781    1        ALTRETURN;

   2781  0 000050   000000 702200 xent               TSX2  ! X66_AALT
      217     2782    1   END DDB$CHECK_ADDR;
PL6.E3A0      #002=DDB$CHECK_ADDR File=DDB$PLANT.:E05TSI                         TUE 07/29/97 13:44 Page:51   

PL6.E3A0      #002=DDB$CHECK_ADDR File=DDB$PLANT.:E05TSI                         TUE 07/29/97 13:44 Page:52   
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDB$CHECK_ADDR.

   Procedure DDB$CHECK_ADDR requires 41 words for executable code.
   Procedure DDB$CHECK_ADDR requires 10 words of local(AUTO) storage.

    No errors detected in file DDB$PLANT.:E05TSI    .
PL6.E3A0      #002=DDB$CHECK_ADDR File=DDB$PLANT.:E05TSI                         TUE 07/29/97 13:44 Page:53   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=DDB$CHECK_ADDR File=DDB$PLANT.:E05TSI                         TUE 07/29/97 13:44 Page:54   
          MINI XREF LISTING

ALT
      2776**LABEL    2770--REMEMBR  2775--CALLALT
DDC$PUTONE
      2767**DCL-ENT  2775--CALL
DRL$
      2763**DCL      2772<<ASSIGN   2773<<ASSIGN   2774>>ASSIGN   2775<>CALL
IC
      2761**DCL        21--PROC     2772>>ASSIGN   2773>>ASSIGN
INS
      2766**DCL      2774>>ASSIGN
OFFSET
      2762**DCL        21--PROC     2771>>IF       2773>>ASSIGN
SAVE_INS
      2765**DCL      2774<<ASSIGN   2775<>CALL
S_D.ACCESS
      1482**DCL      2769<<ASSIGN   2776<<ASSIGN
S_D.CURRENT_CHANNEL
      2395**DCL      2397--REDEF
S_D.DEBUGA
      1547**DCL      1549--REDEF
S_D.EIS
      2505**DCL      2534--REDEF
S_D.HOST_MESSAGE_BUF_REMOTE
      2438**DCL      2439--REDEF    2453--REDEF
S_D.JDE
      2052**DCL      2053--REDEF
S_D.L$.VALUE
      1605**DCL      1611--REDEF    1619--REDEF    1622--REDEF    1625--REDEF    1628--REDEF
S_D.L$.VALUE.L
      1606**DCL      1607--REDEF    1608--REDEF
S_D.L6_MESSAGE_BUF
      2459**DCL      2461--REDEF
PL6.E3A0      #002=DDB$CHECK_ADDR File=DDB$PLANT.:E05TSI                         TUE 07/29/97 13:44 Page:55   
S_D.OUTPUT
      2425**DCL      2427--REDEF
S_D.REMOTE_MSG.FNCC
      2444**DCL      2445--REDEF
S_D.REMOTE_MSG.STXC
      2440**DCL      2441--REDEF
S_D.REMOTE_MSG.SUBFNCC
      2448**DCL      2449--REDEF
S_D.REM_ACCESS
      1490**DCL      2770<<REMEMBR
S_D.SV
      1504**DCL      1525--REDEF
S_D$
      2756**DCL      1452--IMP-PTR  2769>>ASSIGN   2770>>REMEMBR  2776>>ASSIGN
UIS$
      2764**DCL      2772>>ASSIGN   2773>>ASSIGN
PL6.E3A0      #002=DDB$CHECK_ADDR File=DDB$PLANT.:E05TSI                         TUE 07/29/97 13:44 Page:56   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #002=DDB$CHECK_ADDR File=DDB$PLANT.:E05TSI                         TUE 07/29/97 13:44 Page:57   
              MINI UREF LISTING

DDB$CHECK_ADDR      21**PROC
