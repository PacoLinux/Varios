

14:14 JUL 28 '97 B_UHJMAC_C.:E05SI                                         1    
    1      /*M* B_UHJMAC_C MACROs to define the user HJIT */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7      /*X* DMC,PLM=4,IND=0,SDI=2,CTI=0,ENU=0,AND,DCI=4,CSU=2,ECU=4,THI=0,DTI=2 */
    8
    9
   10
   11
   12
   13      /*D* NAME:         B_USDS
   14           PURPOSE:      To generate the special descriptor portion of the user HJIT. */
   15      %MACRO B_USDS (FPTN=B_USDS,STCLASS=BASED,LVL=1,LAST=";");
   16
   17       %LSET LISTDIR='0'B;
   18       %LSET LISTEXP='1'B;
   19       %LSET LISTCOM='0'B;
   20       %LSET LISTSUB='1'B;
   21       %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
   22       %IF (SUBSTR(STR,0,6)='STATIC') OR
   23       (SUBSTR(STR,0,8)='CONSTANT') OR
   24       (SUBSTR(STR,0,3)='EXT');
   25       %LSET INIT=CHARTEXT('INIT');
   26       %ELSE;
   27       %LSET INIT=CHARTEXT('/*');
   28      %LSET SSS_BOUND=0; /* Fake out preprocessor */
   29      %LSET SSS_BASE=0;
   30       %ENDIF;
   31
   32       %IF LVL=1;
   33      DCL 1 FPTN STCLASS DALIGNED,
   34       %ELSE;
   35          %LVL FPTN DALIGNED,
   36       %ENDIF;
   37          %(LVL+1) DSDR,                         /* DATA STACK REGISTER                */
14:14 JUL 28 '97 B_UHJMAC_C.:E05SI                                         2    
   38          %(LVL+2) BOUND UBIN(20) UNAL %INIT(0)%CHARTEXT('/**/'),
   39          %(LVL+2) FLGS BIT(9) UNAL %INIT('101'O)%CHARTEXT('/**/'),
   40          %(LVL+2) WSR UBIN(3) UNAL %INIT(7)%CHARTEXT('/**/'),
   41          %(LVL+2) TYP UBIN(4) UNAL %INIT(0)%CHARTEXT('/**/'),
   42          %(LVL+2) BASE UBIN(36) %INIT(0)%CHARTEXT('/**/'),
   43
   44          %(LVL+1) SSR,                          /* SAVED SAFE STORE REGISTER          */
   45          %(LVL+2) BOUND UBIN(20) UNAL %INIT(%(SSS_BOUND-64))%CHARTEXT('/**/'),
   46      /*       NOTE: BOUND OF SSR DSCR IS A SIZE NOT A BOUND, ADJUSTED*/
   47      /*             UP TO FULL DOUBLEWORD                              */
   48          %(LVL+2) FLGS BIT(9) UNAL %INIT('743'O)%CHARTEXT('/**/'),
   49          %(LVL+2) WSR UBIN(3) UNAL %INIT(7)%CHARTEXT('/**/'),
   50          %(LVL+2) TYP UBIN(4) UNAL %INIT(1)%CHARTEXT('/**/'),
   51          %(LVL+2) BASE UBIN(36) %INIT(%(SSS_BASE+64))%CHARTEXT('/**/'),
   52
   53          %(LVL+1) DBENT,                        /* DEBUGGER ENTRY                     */
   54          %(LVL+2) ENTLOC UBIN(18) UNAL %INIT(BITBIN('777777'O))%CHARTEXT('/**/'), /* ENTRY LOC (NEW IC) */
   55          %(LVL+2) SAV BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
   56          %(LVL+2) ISEGNO UBIN(10) UNAL %INIT(0)%CHARTEXT('/**/'), /* # OF NEW ISR DESCR IN NEW LS     */
   57          %(LVL+2) WSR UBIN(3) UNAL %INIT(7)%CHARTEXT('/**/'),
   58
   59          %(LVL+2) TYP UBIN(4) UNAL %INIT(11)%CHARTEXT('/**/'),
   60          %(LVL+2) LSIZE UBIN(10) UNAL %INIT(35)%CHARTEXT('/**/'), /* SIZE OF NEW LS                   */
   61          %(LVL+2) LBASE UBIN(26) UNAL %INIT(DLS_BASE)%CHARTEXT('/**/'), /* DISP TO LS IN NEW WSQ (BYTE) */
   62          %(LVL+1) ACPENT,                       /* ASL    ENTRY                       */
   63          %(LVL+2) ENTLOC UBIN(18) UNAL %INIT(BITBIN('777777'O))%CHARTEXT('/**/'), /* ENTRY LOC (NEW IC) */
   64          %(LVL+2) SAV BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
   65          %(LVL+2) ISEGNO UBIN(10) UNAL %INIT(0)%CHARTEXT('/**/'), /* # OF NEW ISR DESCR IN NEW LS     */
   66          %(LVL+2) WSR UBIN(3) UNAL %INIT(7)%CHARTEXT('/**/'),
   67
   68          %(LVL+2) TYP UBIN(4) UNAL %INIT(11)%CHARTEXT('/**/'),
   69          %(LVL+2) LSIZE UBIN(10) UNAL %INIT(35)%CHARTEXT('/**/'), /* SIZE OF NEW LS                   */
   70          %(LVL+2) LBASE UBIN(26) UNAL %INIT(CLS_BASE)%CHARTEXT('/**/'), /* DISP TO LS IN NEW WSQ (BYTE) */
   71          %(LVL+1) * (0:3) BIT(72) %INIT('0'B*0)%CHARTEXT('/**/') LAST
   72      %MEND;
   73
   74
14:14 JUL 28 '97 B_UHJMAC_C.:E05SI                                         3    
   75
   76
   77
   78      /*D* NAME:         B_USSS
   79           PURPOSE:      To generate the safe store portion of the user HJIT. */
   80      %MACRO B_USSS (FPTN=B_USSS,STCLASS=BASED,LVL=1,LAST=";");
   81
   82       %LSET LISTDIR='0'B;
   83       %LSET LISTEXP='1'B;
   84       %LSET LISTCOM='0'B;
   85       %LSET LISTSUB='1'B;
   86       %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
   87       %IF (SUBSTR(STR,0,6)='STATIC') OR
   88       (SUBSTR(STR,0,8)='CONSTANT') OR
   89       (SUBSTR(STR,0,3)='EXT');
   90       %LSET INIT=CHARTEXT('INIT');
   91       %ELSE;
   92       %LSET INIT=CHARTEXT('/*');
   93       %ENDIF;
   94
   95       %IF LVL=1;
   96      DCL 1 FPTN STCLASS DALIGNED,
   97       %ELSE;
   98          %LVL FPTN DALIGNED,
   99       %ENDIF;
  100          %(LVL+1) FRAME1,                       /* FRAME #1: (16 WORDS)               */
  101
  102          %(LVL+2) *  UBIN(36) %INIT(0)%CHARTEXT('/**/'),
  103          %(LVL+2) * BIT(36) %INIT('000000777773'O)%CHARTEXT('/**/'),
  104          %(LVL+2) * (0:1) UBIN(36) %INIT(0*0)%CHARTEXT('/**/'),
  105
  106          %(LVL+2) IC UBIN(18) UNAL %INIT(0)%CHARTEXT('/**/'),           /* INSTRUCTION COUNTER                */
  107          %(LVL+2) IR BIT(18) UNAL %INIT('004010'O)%CHARTEXT('/**/'),
  108                                      /* OVERFLOW MASK - HEX FLOATING POINT */
  109
  110          %(LVL+2) * UBIN(10) UNAL %INIT(0)%CHARTEXT('/**/'),
  111          %(LVL+2) SSF BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'), /* SSS FULL FLAG                      */
14:14 JUL 28 '97 B_UHJMAC_C.:E05SI                                         4    
  112          %(LVL+2) FICODE UBIN(7) UNAL %INIT(0)%CHARTEXT('/**/'), /* FAULT/INTERRUPT CODE              */
  113          %(LVL+2) * UBIN(2) UNAL %INIT(0)%CHARTEXT('/**/'),
  114          %(LVL+2) CP UBIN(2) UNAL %INIT(0)%CHARTEXT('/**/'),    /* CPU #                              */
  115          %(LVL+2) SCR BIT(2) UNAL %INIT('00'B)%CHARTEXT('/**/'), /* NEXT FRAME = 16 WORDS             */
  116          %(LVL+2) SID BIT(12) UNAL %INIT('6000'O)%CHARTEXT('/**/'), /* SEGID = USER    ISR            */
  117
  118          %(LVL+2) DSAR UBIN(17) UNAL %INIT(0)%CHARTEXT('/**/'),
  119          %(LVL+2) * UBIN(10) UNAL %INIT(0)%CHARTEXT('/**/'),
  120          %(LVL+2) EWSQ UBIN(9) UNAL %INIT(0)%CHARTEXT('/**/'),  /* WSQ = MONWSQ = 0                   */
  121
  122          %(LVL+2) * UBIN(36) %INIT(0)%CHARTEXT('/**/'),
  123
  124          %(LVL+2) ISR,                        /* ISR = USER ISR                     */
  125          %(LVL+3) BOUND UBIN(20) UNAL %INIT(IS_BOUND)%CHARTEXT('/**/'),
  126          %(LVL+3) FLGS BIT(9) UNAL %INIT('743'O)%CHARTEXT('/**/'), /* NO-EXECUTE -- FORCES A FAULT  */
  127          %(LVL+3) WSR UBIN(3) UNAL %INIT(7)%CHARTEXT('/**/'),
  128          %(LVL+3) TYP UBIN(4) UNAL %INIT(0)%CHARTEXT('/**/'),
  129          %(LVL+3) BASE UBIN(36) %INIT(IS_BASE)%CHARTEXT('/**/'),
  130
  131          %(LVL+2) ASR,                        /* ASR = EMPTY                        */
  132          %(LVL+3) BOUND UBIN(20) UNAL %INIT(0)%CHARTEXT('/**/'),
  133          %(LVL+3) FLGS BIT(9) UNAL %INIT('741'O)%CHARTEXT('/**/'),
  134          %(LVL+3) WSR UBIN(3) UNAL %INIT(7)%CHARTEXT('/**/'),
  135          %(LVL+3) TYP UBIN(4) UNAL %INIT(1)%CHARTEXT('/**/'),
  136          %(LVL+3) BASE UBIN(36) %INIT(AS_BASE)%CHARTEXT('/**/'),
  137
  138          %(LVL+2) LSR,                        /* LSR = USER LSEG                    */
  139          %(LVL+3) BOUND UBIN(20) UNAL %INIT(LS_BOUND)%CHARTEXT('/**/'),
  140          %(LVL+3) FLGS BIT(9) UNAL %INIT('543'O)%CHARTEXT('/**/'),
  141          %(LVL+3) WSR UBIN(3) UNAL %INIT(7)%CHARTEXT('/**/'),
  142          %(LVL+3) TYP UBIN(4) UNAL %INIT(1)%CHARTEXT('/**/'),
  143          %(LVL+3) BASE UBIN(36) %INIT(ULS_BASE)%CHARTEXT('/**/'),
  144
  145          %(LVL+2) PSR,                        /* PSR = NULL                         */
  146          %(LVL+3) BOUND UBIN(20) UNAL %INIT(0)%CHARTEXT('/**/'),
  147          %(LVL+3) FLGS BIT(9) UNAL %INIT('101'O)%CHARTEXT('/**/'),
  148          %(LVL+3) WSR UBIN(3) UNAL %INIT(7)%CHARTEXT('/**/'),
14:14 JUL 28 '97 B_UHJMAC_C.:E05SI                                         5    
  149          %(LVL+3) TYP UBIN(4) UNAL %INIT(1)%CHARTEXT('/**/'),
  150          %(LVL+3) BASE UBIN(36) %INIT(0)%CHARTEXT('/**/'),
  151
  152          %(LVL+1) FRAME2,                       /* FRAME #2: (64 WORDS)               */
  153
  154          %(LVL+2) *  UBIN(36) %INIT(0)%CHARTEXT('/**/'),
  155          %(LVL+2) * BIT(36) %INIT('000000777773'O)%CHARTEXT('/**/'),
  156          %(LVL+2) * (0:1) UBIN(36) %INIT(0*0)%CHARTEXT('/**/'),
  157
  158          %(LVL+2) IC UBIN(18) UNAL %INIT(0)%CHARTEXT('/**/'),           /* INSTRUCTION COUNTER                */
  159          %(LVL+2) IR BIT(18) UNAL %INIT('004010'O)%CHARTEXT('/**/'),
  160                                      /* OVERFLOW MASK - HEX FLOATING POINT */
  161
  162          %(LVL+2) * UBIN(10) UNAL %INIT(0)%CHARTEXT('/**/'),
  163          %(LVL+2) SSF BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'), /* SSS FULL FLAG                      */
  164          %(LVL+2) FICODE UBIN(7) UNAL %INIT(0)%CHARTEXT('/**/'), /* FAULT/INTERRUPT CODE              */
  165          %(LVL+2) * UBIN(2) UNAL %INIT(0)%CHARTEXT('/**/'),
  166          %(LVL+2) CP UBIN(2) UNAL %INIT(0)%CHARTEXT('/**/'),    /* CPU #                              */
  167          %(LVL+2) SCR BIT(2) UNAL %INIT('00'B)%CHARTEXT('/**/'), /* NEXT FRAME = 16 WORDS             */
  168          %(LVL+2) SID BIT(12) UNAL %INIT('6000'O)%CHARTEXT('/**/'), /* SEGID = USER    ISR            */
  169
  170          %(LVL+2) DSAR UBIN(17) UNAL %INIT(0)%CHARTEXT('/**/'),
  171          %(LVL+2) * UBIN(10) UNAL %INIT(0)%CHARTEXT('/**/'),
  172          %(LVL+2) EWSQ UBIN(9) UNAL %INIT(9)%CHARTEXT('/**/'),  /* WSQ = USERWSQ = 9                  */
  173
  174          %(LVL+2) * UBIN(36) %INIT(0)%CHARTEXT('/**/'),
  175
  176          %(LVL+2) ISR,                        /* ISR = USER    ISR                  */
  177          %(LVL+3) BOUND UBIN(20) UNAL %INIT(IS_BOUND)%CHARTEXT('/**/'),
  178          %(LVL+3) FLGS BIT(9) UNAL %INIT('753'O)%CHARTEXT('/**/'),
  179          %(LVL+3) WSR UBIN(3) UNAL %INIT(7)%CHARTEXT('/**/'),
  180          %(LVL+3) TYP UBIN(4) UNAL %INIT(0)%CHARTEXT('/**/'),
  181          %(LVL+3) BASE UBIN(36) %INIT(IS_BASE)%CHARTEXT('/**/'),
  182
  183          %(LVL+2) ASR,                        /* ASR = EMPTY                        */
  184          %(LVL+3) BOUND UBIN(20) UNAL %INIT(0)%CHARTEXT('/**/'),
  185          %(LVL+3) FLGS BIT(9) UNAL %INIT('741'O)%CHARTEXT('/**/'),
14:14 JUL 28 '97 B_UHJMAC_C.:E05SI                                         6    
  186          %(LVL+3) WSR UBIN(3) UNAL %INIT(7)%CHARTEXT('/**/'),
  187          %(LVL+3) TYP UBIN(4) UNAL %INIT(1)%CHARTEXT('/**/'),
  188          %(LVL+3) BASE UBIN(36) %INIT(AS_BASE)%CHARTEXT('/**/'),
  189
  190          %(LVL+2) LSR,                        /* LSR = USER LSEG                    */
  191          %(LVL+3) BOUND UBIN(20) UNAL %INIT(LS_BOUND)%CHARTEXT('/**/'),
  192          %(LVL+3) FLGS BIT(9) UNAL %INIT('543'O)%CHARTEXT('/**/'),
  193          %(LVL+3) WSR UBIN(3) UNAL %INIT(7)%CHARTEXT('/**/'),
  194          %(LVL+3) TYP UBIN(4) UNAL %INIT(1)%CHARTEXT('/**/'),
  195          %(LVL+3) BASE UBIN(36) %INIT(ULS_BASE)%CHARTEXT('/**/'),
  196
  197          %(LVL+2) PSR,                        /* PSR = NULL                         */
  198          %(LVL+3) BOUND UBIN(20) UNAL %INIT(0)%CHARTEXT('/**/'),
  199          %(LVL+3) FLGS BIT(9) UNAL %INIT('101'O)%CHARTEXT('/**/'),
  200          %(LVL+3) WSR UBIN(3) UNAL %INIT(7)%CHARTEXT('/**/'),
  201          %(LVL+3) TYP UBIN(4) UNAL %INIT(1)%CHARTEXT('/**/'),
  202          %(LVL+3) BASE UBIN(36) %INIT(0)%CHARTEXT('/**/'),
  203
  204          %(LVL+2) AR_SID(0:7) UBIN(36) %INIT(3072,3072,3072,3072,3072,3072,3072,3072)%CHARTEXT('/**/'),
  205
  206          %(LVL+2) DR0,                        /* DR0 = USER ISR                     */
  207          %(LVL+3) BOUND UBIN(20) UNAL %INIT(IS_BOUND)%CHARTEXT('/**/'),
  208          %(LVL+3) FLGS BIT(9) UNAL %INIT('753'O)%CHARTEXT('/**/'),
  209          %(LVL+3) WSR UBIN(3) UNAL %INIT(7)%CHARTEXT('/**/'),
  210          %(LVL+3) TYP UBIN(4) UNAL %INIT(0)%CHARTEXT('/**/'),
  211          %(LVL+3) BASE UBIN(36) %INIT(IS_BASE)%CHARTEXT('/**/'),
  212
  213          %(LVL+2) DR1,                        /* DR1 = USER ISR                     */
  214          %(LVL+3) BOUND UBIN(20) UNAL %INIT(IS_BOUND)%CHARTEXT('/**/'),
  215          %(LVL+3) FLGS BIT(9) UNAL %INIT('753'O)%CHARTEXT('/**/'),
  216          %(LVL+3) WSR UBIN(3) UNAL %INIT(7)%CHARTEXT('/**/'),
  217          %(LVL+3) TYP UBIN(4) UNAL %INIT(0)%CHARTEXT('/**/'),
  218          %(LVL+3) BASE UBIN(36) %INIT(IS_BASE)%CHARTEXT('/**/'),
  219
  220          %(LVL+2) DR2,                        /* DR2 = USER ISR                     */
  221          %(LVL+3) BOUND UBIN(20) UNAL %INIT(IS_BOUND)%CHARTEXT('/**/'),
  222          %(LVL+3) FLGS BIT(9) UNAL %INIT('753'O)%CHARTEXT('/**/'),
14:14 JUL 28 '97 B_UHJMAC_C.:E05SI                                         7    
  223          %(LVL+3) WSR UBIN(3) UNAL %INIT(7)%CHARTEXT('/**/'),
  224          %(LVL+3) TYP UBIN(4) UNAL %INIT(0)%CHARTEXT('/**/'),
  225          %(LVL+3) BASE UBIN(36) %INIT(IS_BASE)%CHARTEXT('/**/'),
  226
  227          %(LVL+2) DR3,                        /* DR3 = USER ISR                     */
  228          %(LVL+3) BOUND UBIN(20) UNAL %INIT(IS_BOUND)%CHARTEXT('/**/'),
  229          %(LVL+3) FLGS BIT(9) UNAL %INIT('753'O)%CHARTEXT('/**/'),
  230          %(LVL+3) WSR UBIN(3) UNAL %INIT(7)%CHARTEXT('/**/'),
  231          %(LVL+3) TYP UBIN(4) UNAL %INIT(0)%CHARTEXT('/**/'),
  232          %(LVL+3) BASE UBIN(36) %INIT(IS_BASE)%CHARTEXT('/**/'),
  233
  234          %(LVL+2) DR4,                        /* DR4 = USER ISR                     */
  235          %(LVL+3) BOUND UBIN(20) UNAL %INIT(IS_BOUND)%CHARTEXT('/**/'),
  236          %(LVL+3) FLGS BIT(9) UNAL %INIT('753'O)%CHARTEXT('/**/'),
  237          %(LVL+3) WSR UBIN(3) UNAL %INIT(7)%CHARTEXT('/**/'),
  238          %(LVL+3) TYP UBIN(4) UNAL %INIT(0)%CHARTEXT('/**/'),
  239          %(LVL+3) BASE UBIN(36) %INIT(IS_BASE)%CHARTEXT('/**/'),
  240
  241          %(LVL+2) DR5,                        /* DR5 = USER ISR                     */
  242          %(LVL+3) BOUND UBIN(20) UNAL %INIT(IS_BOUND)%CHARTEXT('/**/'),
  243          %(LVL+3) FLGS BIT(9) UNAL %INIT('753'O)%CHARTEXT('/**/'),
  244          %(LVL+3) WSR UBIN(3) UNAL %INIT(7)%CHARTEXT('/**/'),
  245          %(LVL+3) TYP UBIN(4) UNAL %INIT(0)%CHARTEXT('/**/'),
  246          %(LVL+3) BASE UBIN(36) %INIT(IS_BASE)%CHARTEXT('/**/'),
  247
  248          %(LVL+2) DR6,                        /* DR6 = USER ISR                     */
  249          %(LVL+3) BOUND UBIN(20) UNAL %INIT(IS_BOUND)%CHARTEXT('/**/'),
  250          %(LVL+3) FLGS BIT(9) UNAL %INIT('753'O)%CHARTEXT('/**/'),
  251          %(LVL+3) WSR UBIN(3) UNAL %INIT(7)%CHARTEXT('/**/'),
  252          %(LVL+3) TYP UBIN(4) UNAL %INIT(0)%CHARTEXT('/**/'),
  253          %(LVL+3) BASE UBIN(36) %INIT(IS_BASE)%CHARTEXT('/**/'),
  254
  255          %(LVL+2) DR7,                        /* DR7 = USER ISR                     */
  256          %(LVL+3) BOUND UBIN(20) UNAL %INIT(IS_BOUND)%CHARTEXT('/**/'),
  257          %(LVL+3) FLGS BIT(9) UNAL %INIT('753'O)%CHARTEXT('/**/'),
  258          %(LVL+3) WSR UBIN(3) UNAL %INIT(7)%CHARTEXT('/**/'),
  259          %(LVL+3) TYP UBIN(4) UNAL %INIT(0)%CHARTEXT('/**/'),
14:14 JUL 28 '97 B_UHJMAC_C.:E05SI                                         8    
  260          %(LVL+3) BASE UBIN(36) %INIT(IS_BASE)%CHARTEXT('/**/'),
  261
  262          %(LVL+2) X(0:7) UBIN(18) UNAL %INIT(0,0,0,0,0,0,0,0)%CHARTEXT('/**/'),
  263          %(LVL+2) A UBIN(36) %INIT(0)%CHARTEXT('/**/'),
  264          %(LVL+2) Q UBIN(36) %INIT(0)%CHARTEXT('/**/'),
  265          %(LVL+2) FILL(0:17) SBIN %INIT(0*18)%CHARTEXT('/**/'), /* FILL OUT 64-WORD FRAME             */
  266
  267          %(LVL+1) * (0:511) SBIN %INIT(0*0)%CHARTEXT('/**/') LAST /* FILL OUT 592-WORD SAFE STORE       */
  268      %MEND;
  269
  270
  271
  272
  273
  274      /*D* NAME:         B_UAS
  275           PURPOSE:      To generate the Argument Stack portion of the user HJIT. */
  276      %MACRO B_UAS (FPTN=B_UAS,STCLASS=BASED,LVL=1,LAST=";");
  277
  278       %LSET LISTDIR='0'B;
  279       %LSET LISTEXP='1'B;
  280       %LSET LISTCOM='0'B;
  281       %LSET LISTSUB='1'B;
  282       %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
  283       %IF (SUBSTR(STR,0,6)='STATIC') OR
  284       (SUBSTR(STR,0,8)='CONSTANT') OR
  285       (SUBSTR(STR,0,3)='EXT');
  286       %LSET INIT=CHARTEXT('INIT');
  287       %ELSE;
  288       %LSET INIT=CHARTEXT('/*');
  289       %ENDIF;
  290
  291       %IF LVL=1;
  292      DCL 1 FPTN STCLASS DALIGNED,
  293       %ELSE;
  294          %LVL FPTN DALIGNED,
  295       %ENDIF;
  296          %(LVL+1) * (0:63) BIT(72) %INIT('0'B*0)%CHARTEXT('/**/') LAST /* USER ARGUMENT STACK AREA           */
14:14 JUL 28 '97 B_UHJMAC_C.:E05SI                                         9    
  297      %MEND;
  298
  299
  300
  301
  302
  303      /*D* NAME:         B_UHJIT
  304           PURPOSE:      To generate the entire user HJIT. */
  305      %MACRO B_UHJIT (FPTN=B_UHJIT,STCLASS=BASED);
  306
  307       %LSET LISTDIR='0'B;
  308       %LSET LISTEXP='1'B;
  309       %LSET LISTCOM='0'B;
  310       %LSET LISTSUB='1'B;
  311       %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
  312       %IF (SUBSTR(STR,0,6)='STATIC') OR
  313       (SUBSTR(STR,0,8)='CONSTANT') OR
  314       (SUBSTR(STR,0,3)='EXT');
  315       %LSET INIT=CHARTEXT('INIT');
  316       %ELSE;
  317       %LSET INIT=CHARTEXT('/*');
  318       %ENDIF;
  319
  320      DCL 1 FPTN STCLASS DALIGNED,
  321          %B_USRULS (FPTN=ULNK,  STCLASS=STCLASS,LVL=2,LAST=",");
  322          %B_DBULS  (FPTN=DBLNK, STCLASS=STCLASS,LVL=2,LAST=",");
  323          %B_ASLULS (FPTN=ASLLNK,STCLASS=STCLASS,LVL=2,LAST=",");
  324          %B_CPULS  (FPTN=CPLNK, STCLASS=STCLASS,LVL=2,LAST=",");
  325          %B_USDS   (FPTN=SDS,   STCLASS=STCLASS,LVL=2,LAST=",");
  326          %B_USSS   (FPTN=SSS,   STCLASS=STCLASS,LVL=2,LAST=",");
  327          %B_UAS    (FPTN=AS,    STCLASS=STCLASS,LVL=2,LAST=";");
  328      %MEND;

