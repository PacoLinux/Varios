VERSION E05

PL6.E3A0      #001=KVC$DSC File=KVC$DSC.:E05TSI                                  WED 07/30/97 01:55 Page:1    
        1        1        /*M* KVC$DSC VDH Disconnect routines                                          */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*     PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
        8        8        KVC$DSC: PROC(PRM_VDH_DSC);
        9        9        /*
       10       10        Initiate a disconnect if we haven't already started the disconnect
       11       11        sequence.
       12       12        */
       13       13
       14       14 S      %INCLUDE KV_GLBCNS_E;
       15       15        %KV_USR_EVT_ID_E;
       16       35
       17       36 S      %INCLUDE KV$GLBCTX;
       18       37
       19       38 S      %INCLUDE KV$GLB;
       20       39
       21       40        %INCLUDE KV_INT_M;
       22      183
       23      184 S      %INCLUDE KV$SND;
       24      185        %KV_SND_FNC_E;
       25      201
       26      202 S      %INCLUDE KV$USR;
       27      203
       28      204 S      %INCLUDE KV$VDH;
       29      205
       30      206        %INCLUDE LCP_6;
       31      397 S      %INCLUDE KV$VDO;
       32      398        %INCLUDE F_ERRORS_C;
       33      638        %INCLUDE KV_ERRORS_C;
       34      698        %KV_VDOVLP_E;
       35      712
       36      713    1   DCL Y_DSCRSN_TO_ERR#(0:11) UBIN CONSTANT INIT(
       37      714    1    0, %E$LDSC, %E$TIMO, %E$OPRDSC,        /* 0, LINDRP, PTH, FRG                */
PL6.E3A0      #001=KVC$DSC File=KVC$DSC.:E05TSI                                  WED 07/30/97 01:55 Page:2    
       38      715    1   %E$HRDERR, %E$SFTERR, %E$PRTERR, %E$CANTGETCTX, /* - - - -                    */
       39      716    1    %E$SFTERR,%E$SFTERR,%E$SFTERR,%E$SFTERR);
       40      717         /*E* ERROR: KVC-E$OPRDSC-E
       41      718                MESSAGE:You were disconnected because the operator killed your line.
       42      719           */
       43      720         /*E* ERROR: KVC-E$HRDERR-E
       44      721                MESSAGE:You were disconnected for line-related hardware problems.
       45      722           */
       46      723         /*E* ERROR: KVC-E$SFTERR-E
       47      724                MESSAGE:You were disconnected because you found a software bug.
       48      725           */
       49      726         /*E* ERROR: KVC-E$PRTERR-E
       50      727                MESSAGE:You were disconnected because your line firmware has a bug.
       51      728           */
       52      729        %KV$VDOVLP_ERR (NAME=Y_VDOVLP_ERR, STCLASS=CONSTANT,
       53      730         FCG=KV, MID=C, MON='1'B, ERR#=0, SEV=6);
       54      827        /*
       55      828        Declare external routines.
       56      829        */
       57      830    1   DCL KHC$UTS ENTRY(1) ALTRET;
       58      831    1   DCL KVI$ABRRED ENTRY;
       59      832    1   DCL KVM$SND ENTRY(1) ALTRET;
       60      833    1   DCL KVV$CALUSR_EVT ENTRY(1) ALTRET;
       61      834        /*
       62      835        Declare external data needed.
       63      836        */
       64      837        %KV$SND_DSCSSN (NAME = KV_SND_DSCSSN, STCLASS = SYMREF READONLY);
       65      892        %KV$USR_EVT(NAME = KV_USR_EVT, STCLASS = SYMREF READONLY);
       66      927        /*
       67      928        Declare the parameter this routine is called with.
       68      929        */
       69      930        %KV$VDH_DSC(NAME = PRM_VDH_DSC, STCLASS = );
       70      966        /*
       71      967        Declare the based structures.
       72      968        */
       73      969        %KV$PTR;                                /*  VDH Pointers, status              */
       74     1012        %KV$SSN;                                /*  VDH Session                       */
PL6.E3A0      #001=KVC$DSC File=KVC$DSC.:E05TSI                                  WED 07/30/97 01:55 Page:3    
       75     1091        %KV$STR;                                /*  VDH Stream                        */
       76     1178        %KV$VDI;                                /*  VDI (VDH < ->VDH user interface)  */
       77     1249        /*
       78     1250         AUTO
       79     1251        */
       80     1252        /*
       81     1253        Original SSN address.
       82     1254        */
       83     1255    1   DCL Y@SSN$ PTR;
       84     1256        %KV$SND_DSCSSN (NAME=KV@SND_DSCSSN, STCLASS=AUTO);
       85     1311        %KV$VDOVLP_ERR (NAME=KV@VDOVLP_ERR, STCLASS=AUTO);
       86     1408    1   DCL DSCUTS SBIN(32);
       87     1409
       88     1410        %EJECT;
PL6.E3A0      #001=KVC$DSC File=KVC$DSC.:E05TSI                                  WED 07/30/97 01:55 Page:4    
       89     1411    1      KV@SND_DSCSSN = KV_SND_DSCSSN;
       90     1412    2      IF PRM_VDH_DSC.RSN~=0 THEN DO;
       91     1413    2         KV@VDOVLP_ERR = Y_VDOVLP_ERR;
       92     1414    2         KV@VDOVLP_ERR.ERRCODE.ERR# = Y_DSCRSN_TO_ERR#(PRM_VDH_DSC.RSN);
       93     1415    2         KV@SND_DSCSSN.VDOVLP.ERR$ = ADDR(KV@VDOVLP_ERR);
       94     1416    2      END;
       95     1417
       96     1418    1      Y@SSN$ = KV$PTR.SSN$;
       97     1419    2      IF PRM_VDH_DSC.ALLSSN THEN DO;
       98     1420
       99     1421        /* If ALLSSN, loop thru all of them. */
      100     1422
      101     1423    2         KV$PTR.SSN$ = %KV_VDI.SSN$;
      102     1424    2      END;
      103     1425    1      ELSE IF %KV_VDI.SSNCNT>1 THEN %KV_VDI.INTPHSDSC = '0'B;
      104     1426    2      DO WHILE KV$PTR.SSN$~=ADDR(NIL);
      105     1427    2         %KV_SSN.MRKRQSENB = '1'B;
      106     1428    2         DSCUTS = BITBIN(%KV_SSN.LSTOTPRCRID);
      107     1429    2         CALL KHC$UTS(%KV_SSN.LSTOTPRCRID);
      108     1430    2         DSCUTS = BITBIN(%KV_SSN.LSTOTPRCRID)-DSCUTS+225; /* 30 SECOND TIMEOUT   */
      109     1431    3         IF NOT %KV_SSN.LGCDSC OR DSCUTS>=0 THEN DO;
      110     1432        /*
      111     1433        We haven't already initiated a disconnect on this session, so it's
      112     1434        ok to do now.
      113     1435        */
      114     1436        /*N* Move this to window code. */
      115     1437    3            %KV_SSN.OUTPUTDISCARD = '0'B;
      116     1438    3            %KV_STR.SNDMAXNMBRCR = 0;
      117     1439        /*N* What to do about BLK/RCR numbers */
      118     1440        /*N* What about STATs for accounting? */
      119     1441    4            IF %KV_SSN.SSNCNCID~=0 THEN DO;
      120     1442        /*
      121     1443        Abort any outstanding read
      122     1444        */
      123     1445    4               CALL KVI$ABRRED;
      124     1446    4               CALL KVM$SND(KV@SND_DSCSSN);
      125     1447    4            END;
PL6.E3A0      #001=KVC$DSC File=KVC$DSC.:E05TSI                                  WED 07/30/97 01:55 Page:5    
      126     1448    3            %KV_SSN.LGCDSC = '1'B;
      127     1449        /*N* SET LGCDSC IN KVM$SND INSTEAD? */
      128     1450    3         END;                              /* END IF NOT .LGCDSC                 */
      129     1451    2         IF NOT PRM_VDH_DSC.ALLSSN THEN EXIT;
      130     1452    2         KV$PTR.SSN$ = %KV_SSN.LNK$;
      131     1453    2      END; /* WHILE KV$PTR.SSN$~=ADDR(NIL) */
      132     1454    1      KV$PTR.SSN$ = Y@SSN$;
      133     1455
      134     1456           %KV$CALUSR_EVT(EVT_ID = %KV_USR_EVT_ID_DSC);
              1468        /* !C! */
              1469    2           IF KV$PTR.VDI$->KV$VDI.USREVTENB (4) THEN DO;
              1476    2              CALL KVV$CALUSR_EVT (4);
              1479    2              END;
              1481        /* ! ! */
      135     1483    1      IF PRM_VDH_DSC.NO_IO
      136     1484    1      THEN %KV_VDI.PHSDSC = '1'B;
      137     1485        /*N* Whould we purge output, without putting out an '/_'? */
      138     1486    1   END KVC$DSC;
      139     1487        %EOD;

PL6.E3A0      #001=KVC$DSC File=KVC$DSC.:E05TSI                                  WED 07/30/97 01:55 Page:6    
--  Include file information  --

   KV_ERRORS_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KV_INT_M.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is referenced.
   KV$SND.:E05TOU  was found in the system file and is referenced.
   KV$INT.:E05TOU  was found in the system file and is never referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KVC$DSC.

   Procedure KVC$DSC requires 215 words for executable code.
   Procedure KVC$DSC requires 30 words of local(AUTO) storage.

PL6.E3A0      #001=KVC$DSC File=KVC$DSC.:E05TSI                                  WED 07/30/97 01:55 Page:7    

 Object Unit name= KVC$DSC                                    File name= KVC$DSC.:E05TOU
 UTS= JUL 30 '97 01:55:45.76 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS     15      F  KVC$DSC
    1   Proc  even  none   215     D7  KVC$DSC
    2  RoData even  none     3      3  KVC$DSC

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  KVC$DSC

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 KHC$UTS
         yes           Std       0 KVI$ABRRED
 yes     yes           Std       1 KVM$SND
 yes     yes           Std       1 KVV$CALUSR_EVT
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    KV_SND_DSCSSN                         KV$PTR$                          r    G$ROS$
PL6.E3A0      #001=KVC$DSC File=KVC$DSC.:E05TSI                                  WED 07/30/97 01:55 Page:8    


        1        1        /*M* KVC$DSC VDH Disconnect routines                                          */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*     PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
        8        8        KVC$DSC: PROC(PRM_VDH_DSC);

      8   1 000000  D380 0000 0000  xent KVC$DSC         LNJ,B5   X6A_AUTO_1
          1 000003       001E 0001                       DC       30,1

        9        9        /*
       10       10        Initiate a disconnect if we haven't already started the disconnect
       11       11        sequence.
       12       12        */
       13       13
       14       14 S      %INCLUDE KV_GLBCNS_E;
       15       15        %KV_USR_EVT_ID_E;
       16       35
       17       36 S      %INCLUDE KV$GLBCTX;
       18       37
       19       38 S      %INCLUDE KV$GLB;
       20       39
       21       40        %INCLUDE KV_INT_M;
       22      183
       23      184 S      %INCLUDE KV$SND;
       24      185        %KV_SND_FNC_E;
       25      201
       26      202 S      %INCLUDE KV$USR;
       27      203
       28      204 S      %INCLUDE KV$VDH;
       29      205
       30      206        %INCLUDE LCP_6;
       31      397 S      %INCLUDE KV$VDO;
       32      398        %INCLUDE F_ERRORS_C;
PL6.E3A0      #001=KVC$DSC File=KVC$DSC.:E05TSI                                  WED 07/30/97 01:55 Page:9    
       33      638        %INCLUDE KV_ERRORS_C;
       34      698        %KV_VDOVLP_E;
       35      712
       36      713    1   DCL Y_DSCRSN_TO_ERR#(0:11) UBIN CONSTANT INIT(
       37      714    1    0, %E$LDSC, %E$TIMO, %E$OPRDSC,        /* 0, LINDRP, PTH, FRG                */
       38      715    1   %E$HRDERR, %E$SFTERR, %E$PRTERR, %E$CANTGETCTX, /* - - - -                    */
       39      716    1    %E$SFTERR,%E$SFTERR,%E$SFTERR,%E$SFTERR);
       40      717         /*E* ERROR: KVC-E$OPRDSC-E
       41      718                MESSAGE:You were disconnected because the operator killed your line.
       42      719           */
       43      720         /*E* ERROR: KVC-E$HRDERR-E
       44      721                MESSAGE:You were disconnected for line-related hardware problems.
       45      722           */
       46      723         /*E* ERROR: KVC-E$SFTERR-E
       47      724                MESSAGE:You were disconnected because you found a software bug.
       48      725           */
       49      726         /*E* ERROR: KVC-E$PRTERR-E
       50      727                MESSAGE:You were disconnected because your line firmware has a bug.
       51      728           */
       52      729        %KV$VDOVLP_ERR (NAME=Y_VDOVLP_ERR, STCLASS=CONSTANT,
       53      730         FCG=KV, MID=C, MON='1'B, ERR#=0, SEV=6);
       54      827        /*
       55      828        Declare external routines.
       56      829        */
       57      830    1   DCL KHC$UTS ENTRY(1) ALTRET;
       58      831    1   DCL KVI$ABRRED ENTRY;
       59      832    1   DCL KVM$SND ENTRY(1) ALTRET;
       60      833    1   DCL KVV$CALUSR_EVT ENTRY(1) ALTRET;
       61      834        /*
       62      835        Declare external data needed.
       63      836        */
       64      837        %KV$SND_DSCSSN (NAME = KV_SND_DSCSSN, STCLASS = SYMREF READONLY);
       65      892        %KV$USR_EVT(NAME = KV_USR_EVT, STCLASS = SYMREF READONLY);
       66      927        /*
       67      928        Declare the parameter this routine is called with.
       68      929        */
       69      930        %KV$VDH_DSC(NAME = PRM_VDH_DSC, STCLASS = );
PL6.E3A0      #001=KVC$DSC File=KVC$DSC.:E05TSI                                  WED 07/30/97 01:55 Page:10   
       70      966        /*
       71      967        Declare the based structures.
       72      968        */
       73      969        %KV$PTR;                                /*  VDH Pointers, status              */
       74     1012        %KV$SSN;                                /*  VDH Session                       */
       75     1091        %KV$STR;                                /*  VDH Stream                        */
       76     1178        %KV$VDI;                                /*  VDI (VDH < ->VDH user interface)  */
       77     1249        /*
       78     1250         AUTO
       79     1251        */
       80     1252        /*
       81     1253        Original SSN address.
       82     1254        */
       83     1255    1   DCL Y@SSN$ PTR;
       84     1256        %KV$SND_DSCSSN (NAME=KV@SND_DSCSSN, STCLASS=AUTO);
       85     1311        %KV$VDOVLP_ERR (NAME=KV@VDOVLP_ERR, STCLASS=AUTO);
       86     1408    1   DCL DSCUTS SBIN(32);
       87     1409
       88     1410        %EJECT;
PL6.E3A0      #001=KVC$DSC File=KVC$DSC.:E05TSI                                  WED 07/30/97 01:55 Page:11   
       89     1411    1      KV@SND_DSCSSN = KV_SND_DSCSSN;

   1411   1 000005  AB80 0000 0000  xsym                 LAB,B2   KV_SND_DSCSSN
          1 000008  2C00                                 LDV,R2   0
          1 000009  6C1E                                 LDV,R6   30
          1 00000A  BB87                                 LAB,B3   ,AUTO
          1 00000B  3C10                                 LDV,R3   16
          1 00000C  0008                                 MMM

       90     1412    2      IF PRM_VDH_DSC.RSN~=0 THEN DO;

   1412   1 00000D  ECC7 0004                            LDB,B6   @PRM_VDH_DSC,AUTO
          1 00000F  8286                                 LB,'00FF'X        ,B6
          1 000010       00FF
          1 000011  0581 0017                            BBF      s:1418,PREL

       91     1413    2         KV@VDOVLP_ERR = Y_VDOVLP_ERR;

   1413   1 000013  AB80 0000 0000  00                   LAB,B2   Y_DSCRSN_TO_ERR#
          1 000016  2C18                                 LDV,R2   24
          1 000017  6C06                                 LDV,R6   6
          1 000018  BB87                                 LAB,B3   ,AUTO
          1 000019  3C2E                                 LDV,R3   46
          1 00001A  0008                                 MMM

       92     1414    2         KV@VDOVLP_ERR.ERRCODE.ERR# = Y_DSCRSN_TO_ERR#(PRM_VDH_DSC.RSN);

   1414   1 00001B  B806                                 LDR,R3   ,B6
          1 00001C  B570 00FF                            AND,R3   255,IMO
          1 00001E  E830 0000 0000  00                   LDR,R6   Y_DSCRSN_TO_ERR#,R3
          1 000021  6003                                 SOL,R6   3
          1 000022  EAC7 0019                            SRM,R6,'FFF8'X    KV@VDOVLP_ERR+2,AUTO
          1 000024       FFF8

       93     1415    2         KV@SND_DSCSSN.VDOVLP.ERR$ = ADDR(KV@VDOVLP_ERR);

   1415   1 000025  DBC7 0017                            LAB,B5   KV@VDOVLP_ERR,AUTO
PL6.E3A0      #001=KVC$DSC File=KVC$DSC.:E05TSI                                  WED 07/30/97 01:55 Page:12   
          1 000027  DFC7 000F                            STB,B5   KV@SND_DSCSSN+7,AUTO

       94     1416    2      END;

       95     1417
       96     1418    1      Y@SSN$ = KV$PTR.SSN$;

   1418   1 000029  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 00002C  CCC5 0002                            LDB,B4   2,B5
          1 00002E  CFC7 0006                            STB,B4   Y@SSN$,AUTO

       97     1419    2      IF PRM_VDH_DSC.ALLSSN THEN DO;

   1419   1 000030  82C6 0001                            LB,'4000'X        1,B6
   1419   1 000032       4000
          1 000033  0581 0008                            BBF      s:1425,PREL

       98     1420
       99     1421        /* If ALLSSN, loop thru all of them. */
      100     1422
      101     1423    2         KV$PTR.SSN$ = %KV_VDI.SSN$;

   1423   1 000035  AC85                                 LDB,B2   ,B5
          1 000036  9CC2 0004                            LDB,B1   4,B2
          1 000038  9FC5 0002                            STB,B1   2,B5

      102     1424    2      END;

   1424   1 00003A  0F81 000A                            B        s:1426,PREL

      103     1425    1      ELSE IF %KV_VDI.SSNCNT>1 THEN %KV_VDI.INTPHSDSC = '0'B;

   1425   1 00003C  AC85                                 LDB,B2   ,B5
          1 00003D  E842 000E                            LDR,R6   14,B2
          1 00003F  6D01                                 CMV,R6   1
          1 000040  0381 0004                            BLE      s:1426,PREL

PL6.E3A0      #001=KVC$DSC File=KVC$DSC.:E05TSI                                  WED 07/30/97 01:55 Page:13   
   1425   1 000042  8842 001D                            LBF,'0800'X       29,B2
   1425   1 000044       0800

      104     1426    2      DO WHILE KV$PTR.SSN$~=ADDR(NIL);

   1426   1 000045  0F81 0067                            B        s:1453,PREL

      105     1427    2         %KV_SSN.MRKRQSENB = '1'B;

   1427   1 000047  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 00004A  DCC6 0002                            LDB,B5   2,B6
          1 00004C  8945 0028                            LBT,'8000'X       40,B5
          1 00004E       8000

      106     1428    2         DSCUTS = BITBIN(%KV_SSN.LSTOTPRCRID);

   1428   1 00004F  DCC6 0002                            LDB,B5   2,B6
          1 000051  8CC5 001C                            LDI      28,B5
          1 000053  8D47 001A                            SDI      DSCUTS,AUTO

      107     1429    2         CALL KHC$UTS(%KV_SSN.LSTOTPRCRID);

   1429   1 000055  CBC5 001C                            LAB,B4   28,B5
          1 000057  CFC7 001C                            STB,B4   DSCUTS+2,AUTO
          1 000059  BBC7 001C                            LAB,B3   DSCUTS+2,AUTO
          1 00005B  CBF0 0100                            LAB,B4   256,IMO
          1 00005D  E380 0000 0000  xent                 LNJ,B6   KHC$UTS
          1 000060       0001                            DC       s:1430,PREL

      108     1430    2         DSCUTS = BITBIN(%KV_SSN.LSTOTPRCRID)-DSCUTS+225; /* 30 SECOND TIMEOUT   */

   1430   1 000061  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 000064  DCC6 0002                            LDB,B5   2,B6
          1 000066  8CC5 001C                            LDI      28,B5
          1 000068  84C7 001A                            SID      DSCUTS,AUTO
          1 00006A  8470 0000 00E1                       AID      225,IMO
          1 00006D  8D47 001A                            SDI      DSCUTS,AUTO
PL6.E3A0      #001=KVC$DSC File=KVC$DSC.:E05TSI                                  WED 07/30/97 01:55 Page:14   

      109     1431    3         IF NOT %KV_SSN.LGCDSC OR DSCUTS>=0 THEN DO;

   1431   1 00006F  82C5 0028                            LB,'0400'X        40,B5
   1431   1 000071       0400
          1 000072  0581 0006                            BBF      s:1437,PREL
          1 000074  84F0 0000 0000                       SID      0,IMO
          1 000077  6801 0028                            BLZ,R6   s:1451,PREL

      110     1432        /*
      111     1433        We haven't already initiated a disconnect on this session, so it's
      112     1434        ok to do now.
      113     1435        */
      114     1436        /*N* Move this to window code. */
      115     1437    3            %KV_SSN.OUTPUTDISCARD = '0'B;

   1437   1 000079  8845 0028                            LBF,'0800'X       40,B5
   1437   1 00007B       0800

      116     1438    3            %KV_STR.SNDMAXNMBRCR = 0;

   1438   1 00007C  DCC6 0004                            LDB,B5   4,B6
          1 00007E  8745 0019                            CL       25,B5

      117     1439        /*N* What to do about BLK/RCR numbers */
      118     1440        /*N* What about STATs for accounting? */
      119     1441    4            IF %KV_SSN.SSNCNCID~=0 THEN DO;

   1441   1 000080  DCC6 0002                            LDB,B5   2,B6
          1 000082  E845 0024                            LDR,R6   36,B5
          1 000084  6901 0013                            BEZ,R6   s:1448,PREL

      120     1442        /*
      121     1443        Abort any outstanding read
      122     1444        */
      123     1445    4               CALL KVI$ABRRED;

PL6.E3A0      #001=KVC$DSC File=KVC$DSC.:E05TSI                                  WED 07/30/97 01:55 Page:15   
   1445   1 000086  CBF0 0000                            LAB,B4   0,IMO
          1 000088  E380 0000 0000  xent                 LNJ,B6   KVI$ABRRED
          1 00008B       0001                            DC       s:1446,PREL

      124     1446    4               CALL KVM$SND(KV@SND_DSCSSN);

   1446   1 00008C  EBC7 0008                            LAB,B6   KV@SND_DSCSSN,AUTO
          1 00008E  EFC7 001C                            STB,B6   DSCUTS+2,AUTO
          1 000090  BBC7 001C                            LAB,B3   DSCUTS+2,AUTO
          1 000092  CBF0 0100                            LAB,B4   256,IMO
          1 000094  E380 0000 0000  xent                 LNJ,B6   KVM$SND
          1 000097       0001                            DC       s:1448,PREL

      125     1447    4            END;

      126     1448    3            %KV_SSN.LGCDSC = '1'B;

   1448   1 000098  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 00009B  DCC6 0002                            LDB,B5   2,B6
          1 00009D  8945 0028                            LBT,'0400'X       40,B5
          1 00009F       0400

      127     1449        /*N* SET LGCDSC IN KVM$SND INSTEAD? */
      128     1450    3         END;                              /* END IF NOT .LGCDSC                 */

      129     1451    2         IF NOT PRM_VDH_DSC.ALLSSN THEN EXIT;

   1451   1 0000A0  DCC7 0004                            LDB,B5   @PRM_VDH_DSC,AUTO
          1 0000A2  82C5 0001                            LB,'4000'X        1,B5
          1 0000A4       4000
          1 0000A5  0581 000E                            BBF      s:1454,PREL

      130     1452    2         KV$PTR.SSN$ = %KV_SSN.LNK$;

   1452   1 0000A7  CCC6 0002                            LDB,B4   2,B6
          1 0000A9  BCC4 0002                            LDB,B3   2,B4
          1 0000AB  BFC6 0002                            STB,B3   2,B6
PL6.E3A0      #001=KVC$DSC File=KVC$DSC.:E05TSI                                  WED 07/30/97 01:55 Page:16   

      131     1453    2      END; /* WHILE KV$PTR.SSN$~=ADDR(NIL) */

   1453   1 0000AD  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 0000B0  8DC6 0002                            CMN      2,B6
          1 0000B2  0981 FF94                            BNE      s:1427,PREL

      132     1454    1      KV$PTR.SSN$ = Y@SSN$;

   1454   1 0000B4  DCC7 0006                            LDB,B5   Y@SSN$,AUTO
          1 0000B6  DFC6 0002                            STB,B5   2,B6

      133     1455
      134     1456           %KV$CALUSR_EVT(EVT_ID = %KV_USR_EVT_ID_DSC);
              1468        /* !C! */
              1469    2           IF KV$PTR.VDI$->KV$VDI.USREVTENB (4) THEN DO;

   1469   1 0000B8  CC86                                 LDB,B4   ,B6
          1 0000B9  82C4 001E                            LB,'0008'X        30,B4
          1 0000BB       0008
          1 0000BC  0581 000A                            BBF      s:1483,PREL

              1476    2              CALL KVV$CALUSR_EVT (4);

   1476   1 0000BE  BB80 0000 0001  02                   LAB,B3   +1
          1 0000C1  CBF0 0100                            LAB,B4   256,IMO
          1 0000C3  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR_EVT
          1 0000C6       0001                            DC       s:1483,PREL

              1479    2              END;

              1481        /* ! ! */
      135     1483    1      IF PRM_VDH_DSC.NO_IO

   1483   1 0000C7  ECC7 0004                            LDB,B6   @PRM_VDH_DSC,AUTO
          1 0000C9  89C6 0001                            CMZ      1,B6
          1 0000CB  0881 0008                            BAGE     s:1486,PREL
PL6.E3A0      #001=KVC$DSC File=KVC$DSC.:E05TSI                                  WED 07/30/97 01:55 Page:17   

      136     1484    1      THEN %KV_VDI.PHSDSC = '1'B;

   1484   1 0000CD  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 0000D0  CC85                                 LDB,B4   ,B5
          1 0000D1  8944 0019                            LBT,'0040'X       25,B4
          1 0000D3       0040

      137     1485        /*N* Whould we purge output, without putting out an '/_'? */
      138     1486    1   END KVC$DSC;

   1486   1 0000D4  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      139     1487        %EOD;

PL6.E3A0      #001=KVC$DSC File=KVC$DSC.:E05TSI                                  WED 07/30/97 01:55 Page:18   
--  Include file information  --

   KV_ERRORS_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KV_INT_M.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is referenced.
   KV$SND.:E05TOU  was found in the system file and is referenced.
   KV$INT.:E05TOU  was found in the system file and is never referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KVC$DSC.
PL6.E3A0      #001=KVC$DSC File=KVC$DSC.:E05TSI                                  WED 07/30/97 01:55 Page:19   

 **** Variables and constants ****

  ****  Section 000 RoData KVC$DSC

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(16)    r     1 Y_DSCRSN_TO_ERR#(0:11)
     C-0-0/w STRC(48)    r     1 Y_VDOVLP_ERR

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @PRM_VDH_DSC              1A-0-0/w SBIN(32)    r     1 DSCUTS
     8-0-0/w STRC(240)   r     1 KV@SND_DSCSSN             17-0-0/w STRC(48)    r     1 KV@VDOVLP_ERR
    *0-0-0/w STRC(32)    r     1 PRM_VDH_DSC                6-0-0/w PTR         r     1 Y@SSN$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 KV$PTR$                    0-0-0/w STRC(240)   r     1 KV_SND_DSCSSN

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(480)   r     1 KV$PTR                     0-0-0/w STRC(1024)  r     1 KV$SSN
     0-0-0/w STRC(512)   r     1 KV$STR                     0-0-0/w STRC(512)   r     1 KV$VDI


   Procedure KVC$DSC requires 215 words for executable code.
PL6.E3A0      #001=KVC$DSC File=KVC$DSC.:E05TSI                                  WED 07/30/97 01:55 Page:20   
   Procedure KVC$DSC requires 30 words of local(AUTO) storage.
PL6.E3A0      #001=KVC$DSC File=KVC$DSC.:E05TSI                                  WED 07/30/97 01:55 Page:21   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KVC$DSC File=KVC$DSC.:E05TSI                                  WED 07/30/97 01:55 Page:22   
          MINI XREF LISTING

DSCUTS
      1408**DCL      1428<<ASSIGN   1430<<ASSIGN   1430>>ASSIGN   1431>>IF
KHC$UTS
       830**DCL-ENT  1429--CALL
KV$PTR.INPCNDPND
       996**DCL      1005--REDEF    1009--REDEF
KV$PTR.LINLST$
       992**DCL       993--REDEF
KV$PTR.SSN$
       990**DCL      1418>>ASSIGN   1423<<ASSIGN   1426>>DOWHILE  1427>>ASSIGN   1428>>ASSIGN   1429>>CALL
      1430>>ASSIGN   1431>>IF       1437>>ASSIGN   1441>>IF       1448>>ASSIGN   1452<<ASSIGN   1452>>ASSIGN
      1454<<ASSIGN
KV$PTR.STR$
       990**DCL      1438>>ASSIGN
KV$PTR.VDI$
       990**DCL      1423>>ASSIGN   1425>>IF       1425>>ASSIGN   1469>>IF       1484>>ASSIGN
KV$PTR$
       984**DCL       990--IMP-PTR  1418>>ASSIGN   1423>>ASSIGN   1423>>ASSIGN   1425>>IF       1425>>ASSIGN
      1426>>DOWHILE  1427>>ASSIGN   1428>>ASSIGN   1429>>CALL     1430>>ASSIGN   1431>>IF       1437>>ASSIGN
      1438>>ASSIGN   1441>>IF       1448>>ASSIGN   1452>>ASSIGN   1452>>ASSIGN   1454>>ASSIGN   1469>>IF
      1484>>ASSIGN
KV$SSN.LGCDSC
      1051**DCL      1431>>IF       1448<<ASSIGN
KV$SSN.LNK$
      1035**DCL      1452>>ASSIGN
KV$SSN.LSTOTPRCRID
      1042**DCL      1428>>ASSIGN   1429<>CALL     1430>>ASSIGN
KV$SSN.MRKRQSENB
      1049**DCL      1427<<ASSIGN
KV$SSN.OUTPUTDISCARD
      1050**DCL      1437<<ASSIGN
KV$SSN.REDRSPCNT
PL6.E3A0      #001=KVC$DSC File=KVC$DSC.:E05TSI                                  WED 07/30/97 01:55 Page:23   
      1041**DCL      1042--REDEF
KV$SSN.SSNCNCID
      1044**DCL      1441>>IF
KV$STR.SNDMAXNMBRCR
      1170**DCL      1438<<ASSIGN
KV$VDI.INTPHSDSC
      1238**DCL      1425<<ASSIGN
KV$VDI.PHSDSC
      1234**DCL      1484<<ASSIGN
KV$VDI.SSN$
      1199**DCL      1423>>ASSIGN
KV$VDI.SSNCNT
      1228**DCL      1425>>IF
KV$VDI.USREVTENB
      1242**DCL      1469>>IF
KV@SND_DSCSSN
      1270**DCL      1411<<ASSIGN   1446<>CALL
KV@SND_DSCSSN.VDOVLP
      1304**DCL      1307--REDEF
KV@SND_DSCSSN.VDOVLP.ERR$
      1305**DCL      1415<<ASSIGN
KV@VDOVLP_ERR
      1346**DCL      1413<<ASSIGN   1415--ASSIGN
KV@VDOVLP_ERR.ERRCODE.ERR#
      1404**DCL      1414<<ASSIGN
KVI$ABRRED
       831**DCL-ENT  1445--CALL
KVM$SND
       832**DCL-ENT  1446--CALL
KVV$CALUSR_EVT
       833**DCL-ENT  1476--CALL
KV_SND_DSCSSN
       851**DCL      1411>>ASSIGN
KV_SND_DSCSSN.VDOVLP
       885**DCL       888--REDEF
PRM_VDH_DSC
PL6.E3A0      #001=KVC$DSC File=KVC$DSC.:E05TSI                                  WED 07/30/97 01:55 Page:24   
       957**DCL         8--PROC
PRM_VDH_DSC.ALLSSN
       963**DCL      1419>>IF       1451>>IF
PRM_VDH_DSC.NO_IO
       963**DCL      1483>>IF
PRM_VDH_DSC.RSN
       963**DCL      1412>>IF       1414>>ASSIGN
Y@SSN$
      1255**DCL      1418<<ASSIGN   1454>>ASSIGN
Y_DSCRSN_TO_ERR#
       713**DCL      1414>>ASSIGN
Y_VDOVLP_ERR
       765**DCL      1413>>ASSIGN

PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:25   
      140        1        /*T***********************************************************/
      141        2        /*T*                                                         */
      142        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      143        4        /*T*                                                         */
      144        5        /*T***********************************************************/
      145        6        KVC$RLSSSN: PROC;
      146        7
      147        8        %INCLUDE KH$CLK;
      148      378        %INCLUDE KH_CLKFNC_E;
      149      423 S      %INCLUDE KV_GLBCNS_E;
      150      424        %KV#VD_ORG_E;
      151      432        %KV_BFRRLSDSP_E;
      152      438        %KV_PHSPSTMOD_E;
      153      445        %KV_STRTYP_E;
      154      483        %KV_USR_EVT_ID_E;
      155      503 S      %INCLUDE KV$GLBCTX;
      156      504 S      %INCLUDE KV$GLB;
      157      505 S      %INCLUDE KV$SND;
      158      506        %KV_SND_FNC_E;
      159      522 S      %INCLUDE KV$VDH;
      160      523 S      %INCLUDE KV$USR;
      161      524 S      %INCLUDE KV$INT;
      162      525        %INCLUDE KV_INT_M;
      163      668 S      %INCLUDE KV_PRMID_E;
      164      669        %KV_PRMID_E;
      165      825        %INCLUDE KL_MACRO_C;
      166     4177        %INCLUDE KL_AFCN_C;
      167     4278        %INCLUDE K_ID_E;
      168     4328        %K#LYRID_E;
      169     4335        %K#ENTID_E;
      170     4354
      171     4355    1   DCL KHC$CLOCK ENTRY(1) ALTRET;
      172     4356    1   DCL KVC$RLSWND ENTRY ALTRET;
      173     4357    1   DCL KVM$SND ENTRY(1) ALTRET;
      174     4358    1   DCL KVO$ERSMRD ENTRY;
      175     4359    1   DCL KVS$CHNSSN ENTRY;
      176     4360    1   DCL KVS$RLSBFR ENTRY(1) ALTRET;
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:26   
      177     4361
      178     4362        %KV$SND_CMPDSCSSN(NAME = KV_SND_CMPDSCSSN, STCLASS = SYMREF READONLY);
      179     4417        %KV$VDH_RLSBFR(NAME = KV_VDH_RLSBFR, STCLASS = "SYMREF READONLY");
      180     4453        %KH$CLK (FPTN=KV_CLK_CANCEL, STCLASS=SYMREF, FNC=%KH#CLK_CANCEL);
      181     4602    1   DCL KV_SSNCNT UBIN SYMREF;
      182     4603        %KV$PTR (NAME=KV_PTR, STCLASS=SYMREF READONLY);
      183     4646
      184     4647        %KV$EDTWND (STCLASS="BASED(KV@VDH_RLSBFR.BFR$)");
      185     4663        %KV$GETPRM;                             /*                                    */
      186     4705        %KV$MRD;                                /*  VDH Master real device            */
      187     4752        %KV$MVD;                                /*  VDH Master virtual device         */
      188     4796        %KV$PTR;                                /*  VDH Pointers, status              */
      189     4839        %KV$SRD;                                /*  VDH Subordinate real device       */
      190     5114        %KV$SSN;                                /*  VDH Session                       */
      191     5193        %KV$STR;                                /*  VDH Stream                        */
      192     5280        %KV$STT;                                /*  VDH STATS                         */
      193     5674        %KV$TYPAHDBFR;                          /*  VDH Type-ahead buffer             */
      194     5699        %KV$USRPRM;                             /*                                    */
      195     5750        %KV$VDI;                                /*  VDI (VDH < ->VDH user interface)  */
      196     5821
      197     5822        /* LOCAL                                                                      */
      198     5823
      199     5824        %KV$VDH_RLSBFR(NAME = KV@VDH_RLSBFR, STCLASS = AUTO);
      200     5860    1   DCL PTR$ PTR ALIGNED;
      201     5861        %KH$CLK (FPTN=KH@CLK, STCLASS=AUTO, FNC=%KH#CLK_CANCEL);
      202     6010
      203     6011        /* Release the context associated with a session (KV$SSN on down).            */
      204     6012
      205     6013    1      KV_SSNCNT = KV_SSNCNT-1;
      206     6014    1      %KV_VDI.SSNCNT = %KV_VDI.SSNCNT-1;
      207     6015
      208     6016        /* Invoke complete-disconnect-session processing.  This will probably         */
      209     6017        /* send KH_FCN_TERM or KH_FCN_TERM_ACK. */
      210     6018
      211     6019    1      IF %KV_SSN.SSNCNCID~=0 THEN CALL KVM$SND (KV_SND_CMPDSCSSN);
      212     6020        %EJECT;
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:27   
      213     6021    1   KVC$RLSSSNNO_CNC: ENTRY;
      214     6022
      215     6023        /* Entry for incomplete connect. */
      216     6024
      217     6025    1      KV@VDH_RLSBFR = KV_VDH_RLSBFR;
      218     6026    1      PTR$ = %KV_SSN.STR$;
      219     6027    1      %KV_SSN.STR$ = ADDR(NIL);
      220     6028
      221     6029        /* LOOP THROUGH STREAMS FOR THIS SESSION                                      */
      222     6030
      223     6031    1      IF PTR$=ADDR(NIL) AND KV$PTR.MVD$~=ADDR(NIL)
      224     6032        /* Incomplete connect might have gotten MVD but no STRs. */
      225     6033
      226     6034    1      THEN CALL RLSMVDNO_STR (%KV_MVD);
      227     6035    2      ELSE DO WHILE PTR$~=ADDR(NIL);
      228     6036    2         CALL RLSSTR;
      229     6037    2      END /* LOOP */;
      230     6038
      231     6039        /* All streams for this session have been released. */
      232     6040    2      IF %KV_SSN.CLKSET THEN DO;
      233     6041
      234     6042        /* Cancel any clocks. */
      235     6043
      236     6044    2         KH@CLK = KV_CLK_CANCEL;
      237     6045    2         KH@CLK.UID$ = KV$PTR.SSN$;
      238     6046    3         DO WHILE KH@CLK.UVAL<SIZEB(KV$SSN.CLKSET);
      239     6047    3            IF KH@CLK.UID$->KV$SSN.CLKSET(KH@CLK.UVAL)
      240     6048    3            THEN CALL KHC$CLOCK (KH@CLK);
      241     6049    3            KH@CLK.UVAL = KH@CLK.UVAL+1;
      242     6050    3         END;
      243     6051    2      END;
      244     6052
      245     6053        /* Release KV$TYPAHD buffers                                                   */
      246     6054
      247     6055    1      PTR$ = %KV_SSN.TYPAHDBFRHED$;
      248     6056    2      DO WHILE (PTR$ ~= ADDR(NIL));
      249     6057
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:28   
      250     6058        /* This loop is traversed for each type-ahead buffer.                         */
      251     6059
      252     6060    2         KV@VDH_RLSBFR.BFR$ = PTR$;
      253     6061    2         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_TYPAHDBFR;
      254     6062    2         PTR$ = PTR$ ->KV$TYPAHDBFR.LNK$;
      255     6063    2         CALL RLSBFR ;
      256     6064    2      END /* LOOP */;
      257     6065
      258     6066        /* Release any GETPRM buffers                                                */
      259     6067
      260     6068    1      PTR$ = %KV_SSN.SNDPRMBFRHED$;
      261     6069    2      DO WHILE (PTR$ ~= ADDR(NIL));
      262     6070
      263     6071    2         KV@VDH_RLSBFR.BFR$ = PTR$ ->KV$GETPRM.DAT__.ADR$;
      264     6072    2         KV@VDH_RLSBFR.BYTSIZ = PTR$ ->KV$GETPRM.DAT__.BFRBYTSIZ;
      265     6073    2         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_MSG;
      266     6074    2         PTR$ = PTR$ ->KV$GETPRM.LNK$;
      267     6075    2         CALL RLSBFR;
      268     6076    2      END /* LOOP */;
      269     6077
      270     6078        /* Release SSNHDN                                                             */
      271     6079
      272     6080    1      KV@VDH_RLSBFR.BFR$ = %KV_SSN.SSNHDN$;
      273     6081    1      KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_SSNHDN;
      274     6082    1      CALL RLSBFR ;
      275     6083
      276     6084        /* Release KV$REDBFR                                                             */
      277     6085
      278     6086    1      IF %KV_SSN.REDBFR__.BFRRLSDSP~=%KV_BFRRLSDSP_NON
      279     6087    2        AND %KV_SSN.REDBFR__.ADR$~=ADDR(NIL) THEN DO;
      280     6088    2         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_REDBFR;
      281     6089    2         KV@VDH_RLSBFR.BFR$ = %KV_SSN.REDBFR__.ADR$;
      282     6090    2         KV@VDH_RLSBFR.BYTSIZ = %KV_SSN.REDBFR__.BFRBYTSIZ;
      283     6091    2         CALL RLSBFR ;
      284     6092    2      END /* IF */;
      285     6093
      286     6094        /* Release KV$TRCBFR if not shared with KV$VDI.
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:29   
              6094         */
      287     6095
      288     6096    1      IF (%KV_SSN.TRCBFR$ ~= ADDR(NIL))
      289     6097    2        AND NOT %KV_VDI.SHRTRCBFR THEN DO;
      290     6098    2         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_TRCBFR;
      291     6099    2         KV@VDH_RLSBFR.BFR$ = %KV_SSN.TRCBFR$;
      292     6100    2         KV@VDH_RLSBFR.BYTSIZ = %KV_VDI.TRCBFRBYTSIZ;
      293     6101    2         %KV_SSN.TRCBFR$ = ADDR(NIL);
      294     6102    2         CALL RLSBFR ;
      295     6103    2      END /* IF */;
      296     6104
      297     6105        /* TELL USER ABOUT SSN                                                        */
      298     6106
      299     6107    1      CALL TLUSR(%KV_STRTYP_SSN) ;
      300     6108
      301     6109    1      PTR$ = %KV_VDI.SSN$;
      302     6110
      303     6111        /* Delink this KV$SSN from the chain. */
      304     6112
      305     6113    2      IF PTR$=KV$PTR.SSN$ THEN DO;
      306     6114
      307     6115        /* The KV$SSN we're releasing is at the head of the chain. */
      308     6116        /* Just point the head pointer at the next in the chain. */
      309     6117
      310     6118    2         %KV_VDI.SSN$ = PTR$->KV$SSN.LNK$;
      311     6119    2      END;
      312     6120
      313     6121        /* The KV$SSN we're releasing isn't at the head of the chain. */
      314     6122        /* Search the chain, looking for the KV$SSN that points at ours. */
      315     6123
      316     6124    2      ELSE DO WHILE PTR$~=KV$PTR.SSN$;
      317     6125
      318     6126        /* This loop is re-iterated for each KV$SSN in the chain, until */
      319     6127        /* we find the one that points at ours. */
      320     6128
      321     6129    3         IF PTR$->KV$SSN.LNK$=KV$PTR.SSN$ THEN DO;
      322     6130
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:30   
      323     6131        /* We found it. */
      324     6132
      325     6133    3            PTR$->KV$SSN.LNK$ = %KV_SSN.LNK$;
      326     6134    3            PTR$ = KV$PTR.SSN$;
      327     6135    3         END;                         /* END IF PTR$->KV$SSN.LNK$ = KV$PTR.SSN$  */
      328     6136    2         ELSE PTR$ = PTR$->KV$SSN.LNK$;
      329     6137    2      END; /* END WHILE */
      330     6138
      331     6139        /* Release KV$SSN */
      332     6140
      333     6141    1      PTR$->KV$SSN.SSNCNCID = 0;
      334     6142    1      KV@VDH_RLSBFR.BFR$ = PTR$;
      335     6143    1      KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_SSN;
      336     6144    1      CALL RLSBFR ;
      337     6145        /* Release PTR if this is not the last SSN. */
      338     6146
      339     6147    2      IF %KV_VDI.SSN$~=ADDR(NIL) THEN DO;
      340     6148
      341     6149        /* Release KV$PTR.                                                    */
      342     6150
      343     6151    2         KV@VDH_RLSBFR.BFR$ = KV$PTR$;
      344     6152    2         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_PTR;
      345     6153    3         IF KV$PTR.STR$~=ADDR(NIL) THEN DO;
      346     6154    4            IF %KV_VDI.CRSRED THEN DO;
      347     6155    4               PTR$ = %KV_VDI.SSN$;
      348     6156    5               DO UNTIL PTR$=ADDR(NIL);
      349     6157    5                  IF PTR$->KV$SSN.REDRQSPND THEN EXIT;
      350     6158    5                  PTR$ = PTR$->KV$SSN.LNK$;
      351     6159    5               END;
      352     6160    4               IF PTR$~=ADDR(NIL)
      353     6161    4               THEN PTR$->KV$SSN.VDI$->KV$VDI.ASNINPPTR$ = PTR$->KV$SSN.SNCPTR$;
      354     6162    4            END;
      355     6163    3            CALL KVS$CHNSSN;
      356     6164    3         END;
      357     6165    2         CALL RLSBFR ;
      358     6166    2      END;
      359     6167    1      RETURN;
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:31   
      360     6168
      361     6169        %EJECT;
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:32   
      362     6170        /*F* name: KVC$RLSSTR.
      363     6171             Purpose: Releases the context (and screen area if applicable) for
      364     6172             the stream at KV$PTR.STR$, unless that stream no longer points to
      365     6173             KV$PTR.SSN$, in which case it is just removed from KV$PTR.SSN$'s chain. */
      366     6174    1   KVC$RLSSTR: ENTRY;
      367     6175
      368     6176        /* First find and unlink it in the SSN chain. */
      369     6177    1      PTR$ = %KV_SSN.STR$;
      370     6178    1      IF PTR$=KV$PTR.STR$ THEN %KV_SSN.STR$ = %KV_STR.LNK$;
      371     6179    2      ELSE DO WHILE PTR$~=KV$PTR.STR$;
      372     6180    3         IF PTR$->KV$STR.LNK$=KV$PTR.STR$ THEN DO;
      373     6181    3            PTR$->KV$STR.LNK$ = PTR$->KV$STR.LNK$->KV$STR.LNK$;
      374     6182    3            PTR$ = KV$PTR.STR$;
      375     6183    3         END;
      376     6184    2         ELSE PTR$ = PTR$->KV$STR.LNK$;
      377     6185    2      END;
      378     6186    2      IF PTR$->KV$STR.SSN$=KV$PTR.SSN$ THEN DO;
      379     6187        /* Release the context unless this call wants to split the stream off
      380     6188           for a new session. */
      381     6189
      382     6190    2         KV@VDH_RLSBFR = KV_VDH_RLSBFR;
      383     6191    2         CALL RLSSTR;
      384     6192    2         KV$PTR.STR$ = ADDR(NIL);
      385     6193    2      END;
      386     6194    1      ELSE PTR$->KV$STR.LNK$ = ADDR(NIL);
      387     6195    1      RETURN;
      388     6196        %EJECT;
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:33   
      389     6197        /*F* NAME: KVC$RLSMVD.
      390     6198             PURPOSE: Releases one MVD without releasing the associated stream.
      391     6199             This entry exists for the unusual case where an attempt to get
      392     6200             an MVD-SRD pair succeeds only halfway, and also for a DCLSTR VDO
      393     6201             with RE_STR that causes a window to be deleted. */
      394     6202    1   KVC$RLSMVD: ENTRY;
      395     6203
      396     6204    1      KV@VDH_RLSBFR = KV_VDH_RLSBFR;
      397     6205    1      CALL RLSMVD (%KV_MVD);
      398     6206    1      RETURN;
      399     6207        %EJECT;
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:34   
      400     6208        /*F* NAME: KVC$RLSFRM.
      401     6209             PURPOSE: Releases the context subordinate to MVD through LINLST$.
      402     6210             I.e., KV$LINLST/KV$FLDLSTs for ORG=FORM, KV$RCRLST/KV$RCRs for
      403     6211             ORG=SE, and KV$X364 for ORG=X364.
      404     6212        */
      405     6213    1   KVC$RLSFRM: ENTRY;
      406     6214    1      KV@VDH_RLSBFR = KV_VDH_RLSBFR;
      407     6215    1      IF %KV_MVD.LINLST$~=ADDR(NIL)
      408     6216    1      THEN IF %KV_SRD.USRCNT=1 THEN CALL RLSFRM (%KV_MVD);
      409     6217    2      ELSE DO;
      410     6218        /* For hard-copy forms, get rid of the second MVD, too. */
      411     6219
      412     6220    2         CALL RLSMVD (%KV_MVD);
      413     6221    2         KV$PTR.MVD$ = %KV_MRD.MVD$;
      414     6222    2         %KV_STR.MVD$ = KV$PTR.MVD$;
      415     6223    2      END;
      416     6224    1      RETURN;
      417     6225        %EJECT;
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:35   
      418     6226    1   RLSSTR: PROC;
      419     6227
      420     6228        /*I*  NAME: RLSSTR.
      421     6229              DESCRIPTION: This subroutine releases all the context hung off the
      422     6230              stream pointed to by the local variable PTR$. */
      423     6231
      424     6232        /* Release the KV$MVD for this stream. */
      425     6233
      426     6234    2      KV$PTR.MVD$ = PTR$->KV$STR.MVD$;
      427     6235    2      KV$PTR.SRD$ = %KV_MVD.SRD$;
      428     6236    2      KV$PTR.MRD$ = %KV_SRD.MRD$;
      429     6237    2      CALL RLSMVD (PTR$->KV$STR.MVD$->KV$MVD);
      430     6238
      431     6239        /* Tell user about release                                                        */
      432     6240
      433     6241    2      CALL TLUSR(%KV_STRTYP_STR) ;
      434     6242
      435     6243        /* Release the output tab buffer for this stream. */
      436     6244
      437     6245    2      KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_OTPTAB;
      438     6246    2      KV@VDH_RLSBFR.BFR$ = PTR$->KV$STR.OTPTAB$;
      439     6247    2      CALL RLSBFR ;
      440     6248
      441     6249        /* Release the PRM for this stream
              6249                           */
      442     6250
      443     6251    2      KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_PRM;
      444     6252    2      KV@VDH_RLSBFR.BFR$ = PTR$->KV$STR.PRM$;
      445     6253    2      CALL RLSBFR ;
      446     6254
      447     6255        /* Release the ACTCHRTBL for this stream
              6255                           */
      448     6256
      449     6257    2      KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_ACTCHR;
      450     6258    2      KV@VDH_RLSBFR.BFR$ = PTR$->KV$STR.ACTCHRTBL$;
      451     6259    2      CALL RLSBFR ;
      452     6260
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:36   
      453     6261        /* Release the EDTBFR for this stream
              6261                    */
      454     6262
      455     6263    2      IF PTR$->KV$STR.EDTBFR__.BFRRLSDSP~=%KV_BFRRLSDSP_NON
      456     6264    3        AND PTR$->KV$STR.EDTBFR__.ADR$~=ADDR(NIL) THEN DO;
      457     6265    3         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_REDBFR;
      458     6266    3         KV@VDH_RLSBFR.BFR$ = PTR$->KV$STR.EDTBFR__.ADR$;
      459     6267    3         KV@VDH_RLSBFR.BYTSIZ = PTR$->KV$STR.EDTBFR__.BFRBYTSIZ;
      460     6268    3         CALL RLSBFR ;
      461     6269    3      END /* IF */;
      462     6270
      463     6271        /* Release the KV$STR for this stream
              6271                       */
      464     6272
      465     6273    2      KV@VDH_RLSBFR.BFR$ = PTR$;
      466     6274    2      PTR$ = PTR$->KV$STR.LNK$;
      467     6275    2      KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_STR;
      468     6276    2      CALL RLSBFR ;
      469     6277    2      RETURN;
      470     6278    2   END RLSSTR;
      471     6279        %EJECT;
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:37   
      472     6280    1   RLSMVD: PROC (Y$MVD);
      473     6281
      474     6282        %KV$MVD (NAME=Y$MVD, STCLASS=PARAM);
      475     6326
      476     6327        /* This subroutine decrements the USRCNT for the MVD and then                 */
      477     6328        /* will release it if it's count is 0                                            */
      478     6329
      479     6330    2      Y$MVD.USRCNT = Y$MVD.USRCNT -1;
      480     6331
      481     6332    2   RLSMVDNO_STR: ENTRY (Y$MVD);
      482     6333
      483     6334    3      IF (Y$MVD.USRCNT = 0) /*  LAST USER */ THEN DO;
      484     6335
      485     6336        /* TELL USER ABOUT MVD                                                        */
      486     6337
      487     6338    3         CALL TLUSR(%KV_STRTYP_MVD) ;
      488     6339
      489     6340        /* Release TAB buffer                                                         */
      490     6341    3         KV@VDH_RLSBFR.BFR$ = Y$MVD.INPTAB$;
      491     6342    3         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_INPTAB;
      492     6343    3         CALL RLSBFR ;
      493     6344
      494     6345        /* Release INPFNCTBL                                                          */
      495     6346
      496     6347    3         KV@VDH_RLSBFR.BFR$ = Y$MVD.SSTINPFNCTBL$;
      497     6348    3         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_SSTINPFNCTBL;
      498     6349    3         CALL RLSBFR ;
      499     6350    3         KV@VDH_RLSBFR.BFR$ = Y$MVD.USRINPFNCTBL$;
      500     6351    3         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_USRINPFNCTBL;
      501     6352    3         CALL RLSBFR ;
      502     6353        /* Release DCBHDN                                                             */
      503     6354
      504     6355    3         KV@VDH_RLSBFR.BFR$ = Y$MVD.DCBHDN$;
      505     6356    3         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_DCBHDN;
      506     6357    3         CALL RLSBFR ;
      507     6358
      508     6359
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:38   
      509     6360        /* Release VFU buffer                                                         */
      510     6361    3         KV@VDH_RLSBFR.BFR$ = Y$MVD.VFU$;
      511     6362    3         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_VFU;
      512     6363    3         CALL RLSBFR ;
      513     6364
      514     6365        /* Release KV$LINLST buffer                                                      */
      515     6366    3         IF Y$MVD.LINLST$~=ADDR(NIL)
      516     6367    3         THEN CALL RLSFRM (Y$MVD);
      517     6368
      518     6369        /* Remove MVD from chain off MRD. */
      519     6370
      520     6371        %EQU TMP$ = CHARTEXT('KV@VDH_RLSBFR.BFR$');
      521     6372    3         %TMP$ = Y$MVD.SRD$->KV$SRD.MRD$;
      522     6373    3         IF %TMP$->KV$MRD.MVD$=ADDR(Y$MVD) THEN %TMP$->KV$MRD.MVD$ = Y$MVD.LNK$;
      523     6374    4         ELSE DO;
      524     6375    4            %TMP$ = %TMP$->KV$MRD.MVD$;
      525     6376    5            DO UNTIL %TMP$=ADDR(NIL);
      526     6377    5               IF %TMP$->KV$MVD.LNK$=ADDR(Y$MVD)
      527     6378    5               THEN %TMP$->KV$MVD.LNK$=Y$MVD.LNK$;
      528     6379    5               ELSE %TMP$ = %TMP$->KV$MVD.LNK$;
      529     6380    5            END;
      530     6381    4         END;
      531     6382
      532     6383        /* This was the last user so we must release KV$MVD, but first
      533     6384           relinquish its interest in the KV$SRD pointed to by it.        */
      534     6385
      535     6386    3         IF Y$MVD.SRD$~=ADDR(NIL) THEN CALL RLSSRD (Y$MVD.SRD$->KV$SRD);
      536     6387
      537     6388        /* Finally release the KV$MVD structure
              6388        */
      538     6389
      539     6390    3         KV@VDH_RLSBFR.BFR$ = ADDR(Y$MVD);
      540     6391    3         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_MVD;
      541     6392    3         CALL RLSBFR ;
      542     6393    3         KV$PTR.MVD$ = ADDR(NIL);
      543     6394    3      END /* IF */;
      544     6395    2   END /* SUBROUTINE */;
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:39   
      545     6396
      546     6397        %EJECT;
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:40   
      547     6398    1   RLSFRM: PROC (Y$MVD);
      548     6399
      549     6400        %KV$MVD (NAME=Y$MVD, STCLASS=PARAM);
      550     6444
      551     6445        %KV$LIN;
      552     6469        %KV$LINLST (STCLASS="BASED(Y@LST$)");
      553     6496        %EQU KV_LINLST = CHARTEXT('KV$LINLST');
      554     6497        %KV$FLDLST (STCLASS="BASED(KV@VDH_RLSBFR.BFR$)");
      555     6521        %KV$RCRLST (STCLASS="BASED(Y@LST$)");
      556     6557        %EQU KV_RCRLST = CHARTEXT('KV$RCRLST');
      557     6558        %KV$RCR (STCLASS="BASED(KV@VDH_RLSBFR.BFR$)");
      558     6588        %EQU KV_RCR = CHARTEXT('KV$RCR');
      559     6589    2   DCL Y@INDX SBIN AUTO;
      560     6590    2   DCL Y@LST$ PTR;
      561     6591
      562     6592    2      Y@LST$ = Y$MVD.LINLST$;
      563     6593    3      DO CASE Y$MVD.ORG;
      564     6594    3      CASE %KV#VD_ORG_FORM;
      565     6595    3         Y@INDX = %KV_LINLST.LSTENTWRDX;
      566     6596    3         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_FLDLST;
      567     6597    3         IF NOT %KV_VDI.PHSDSC AND %KV_LINLST.FRMDSP
      568     6598        /*
      569     6599        Erase the screen if we didn't delete the fields yet.
      570     6600        */
      571     6601    3         THEN CALL KVO$ERSMRD;
      572     6602    4         DO UNTIL(Y@INDX < SIZEW(KV$LINLST));
      573     6603    4            KV@VDH_RLSBFR.BFR$ = PINCRW(Y@LST$, Y@INDX)->KV$LIN.FLDLST$;
      574     6604    5            IF KV@VDH_RLSBFR.BFR$~=ADDR(NIL) THEN DO;
      575     6605    5               KV@VDH_RLSBFR.BYTSIZ = 2*(KV$FLDLST.LSTCELWRDX+1);
      576     6606    5               CALL RLSBFR ;
      577     6607    5            END;                           /* IF                                 */
      578     6608    4            Y@INDX = Y@INDX - SIZEW(KV$LIN);
      579     6609    4         END;                              /* LOOP                               */
      580     6610    3         KV@VDH_RLSBFR.BYTSIZ = (%KV_LINLST.LSTCELWRDX+1)*2;
      581     6611    3         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_LINLST;
      582     6612    3      CASE %KV#VD_ORG_SE;
      583     6613    3         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_RCR;
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:41   
      584     6614    4         DO Y@INDX=0 TO %KV_RCRLST.RCRCNT-1;
      585     6615    4            KV@VDH_RLSBFR.BFR$ = %KV_RCRLST.RCR$(Y@INDX);
      586     6616    4            KV@VDH_RLSBFR.BYTSIZ = %KV_RCR.STRBYTSIZ;
      587     6617    4            CALL RLSBFR;
      588     6618    4         END;
      589     6619    3         KV@VDH_RLSBFR.BYTSIZ = %KV_RCRLST.STRBYTSIZ;
      590     6620    3         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_RCRLST;
      591     6621    3      CASE %KV#VD_ORG_X364;
      592     6622    3         Y$MVD.SRD$->KV$SRD.FLDEND = '0'B;
      593     6623    3         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_X364;
      594     6624    3      END; /* END DO CASE .ORG */
      595     6625    2      KV@VDH_RLSBFR.BFR$ = ADDR(%KV_LINLST);
      596     6626    2      CALL RLSBFR ;
      597     6627    2      KV$PTR.LINLST$ = ADDR(NIL);
      598     6628    2      Y$MVD.LINLST$ = KV$PTR.LINLST$;
      599     6629    2      Y$MVD.ORG = %KV#VD_ORG_UR;
      600     6630    2      Y$MVD.RCRWRAP = '0'B;
      601     6631    2   END; /* SUBROUTINE */
      602     6632        %EJECT;
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:42   
      603     6633    1   RLSSRD: PROC (Y$SRD);
      604     6634
      605     6635        %KV$SRD (NAME=Y$SRD, STCLASS=PARAM);
      606     6910        /* Decrement USRCNT for KV$SRD and if 0 release it.
              6910        */
      607     6911
      608     6912    2      Y$SRD.USRCNT = Y$SRD.USRCNT-1;
      609     6913
      610     6914        /* IF NON ZERO RETURN                                                         */
      611     6915
      612     6916    3      IF Y$SRD.USRCNT=0 THEN DO;
      613     6917
      614     6918        /* TELL USER ABOUT SRD                                                        */
      615     6919
      616     6920    3         CALL TLUSR(%KV_STRTYP_SRD) ;
      617     6921
      618     6922        /* We must release the KV$SRD                                                 */
      619     6923
      620     6924    4         IF Y$SRD.MRD$~=ADDR(NIL) THEN DO;
      621     6925
      622     6926    4            IF Y$SRD.MRD$->KV$MRD.USRCNT>1 AND (%KV_SSN.STR$~=ADDR(NIL)
      623     6927    4              OR %KV_VDI.SSN$->KV$SSN.LNK$~=ADDR(NIL))
      624     6928    4            THEN CALL KVC$RLSWND;
      625     6929
      626     6930        /* Remove SRD from chain off MRD. */
      627     6931
      628     6932    4            %TMP$ = Y$SRD.MRD$->KV$MRD.SRD$;
      629     6933    4            IF %TMP$=ADDR(Y$SRD) THEN Y$SRD.MRD$->KV$MRD.SRD$ = Y$SRD.LNK$;
      630     6934    5            ELSE DO UNTIL %TMP$=ADDR(NIL);
      631     6935    5               IF %TMP$->KV$SRD.LNK$=ADDR(Y$SRD)
      632     6936    5               THEN %TMP$->KV$SRD.LNK$=Y$SRD.LNK$;
      633     6937    5               ELSE %TMP$ = %TMP$->KV$SRD.LNK$;
      634     6938    5            END;
      635     6939    4            CALL RLSMRD (Y$SRD.MRD$->KV$MRD);
      636     6940    4         END;
      637     6941
      638     6942        /* Release Entsrdchr */
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:43   
      639     6943
      640     6944    3         KV@VDH_RLSBFR.BFR$ = Y$SRD.ENTSRDCHR$;
      641     6945    3         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_ENTSRD;
      642     6946    3         CALL RLSBFR;
      643     6947
      644     6948        /* Release KV$SRD                                                                */
      645     6949
      646     6950    3         KV@VDH_RLSBFR.BFR$ = ADDR(Y$SRD);
      647     6951    3         KV$PTR.SRD$ = ADDR(NIL);
      648     6952    3         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_SRD;
      649     6953    3         CALL RLSBFR ;
      650     6954    3      END;
      651     6955    3      ELSE DO;
      652     6956        /* Must be releasing a hard_copy forms MVD, put MINLNG and MINWDT bakc to 0 */
      653     6957    3         Y$SRD.MINLNG=0;
      654     6958    3         Y$SRD.MINWDT=0;
      655     6959    3      END;
      656     6960    2      RETURN;
      657     6961    2   END /* SUBROUTINE */;
      658     6962        %EJECT;
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:44   
      659     6963    1   RLSMRD: PROC (Y$MRD);
      660     6964
      661     6965        %KV$MRD (NAME=Y$MRD, STCLASS=PARAM);
      662     7012
      663     7013        /* Decrement USRCNT for KV$MRD and if 0 release it.
              7013         */
      664     7014
      665     7015    2      Y$MRD.USRCNT = Y$MRD.USRCNT-1;
      666     7016
      667     7017        /* IF NON ZERO RETURN                                                         */
      668     7018
      669     7019    3      IF Y$MRD.USRCNT=0 THEN DO;
      670     7020
      671     7021        /* TELL USER ABOUT MRD                                                        */
      672     7022
      673     7023    3         CALL TLUSR(%KV_STRTYP_MRD) ;
      674     7024
      675     7025        /* We must release the KV$MRD                                                 */
      676     7026
      677     7027    4         IF (Y$MRD.ERD$ ~= ADDR(NIL)) THEN DO;
      678     7028
      679     7029        /* VDH is releasing a KV$MRD, and its pointer to the KV$ERD structure         */
      680     7030        /* indicates we need to release it.                                           */
      681     7031
      682     7032    4            KV@VDH_RLSBFR.BFR$ = Y$MRD.ERD$;
      683     7033    4            KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_ERD;
      684     7034    4            CALL RLSBFR ;
      685     7035    4         END /* IF */;
      686     7036
      687     7037        /* Release TRMTAB                                                             */
      688     7038
      689     7039    3         KV@VDH_RLSBFR.BFR$ = Y$MRD.TRMTAB$;
      690     7040    3         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_TRMTAB;
      691     7041    3         CALL RLSBFR ;
      692     7042
      693     7043        /* Release PROFILE FUNCTIONS                                                  */
      694     7044
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:45   
      695     7045    3         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_USRINPFNCTBL;
      696     7046    3         KV@VDH_RLSBFR.BFR$ = Y$MRD.PRFINPFNCTBL$;
      697     7047    3         CALL RLSBFR;
      698     7048
      699     7049        /* Release KV$MRD                                                                */
      700     7050
      701     7051    3         KV@VDH_RLSBFR.BFR$ = ADDR(Y$MRD);
      702     7052    3         KV$PTR.MRD$ = ADDR(NIL);
      703     7053    3         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_MRD;
      704     7054    3         CALL RLSBFR ;
      705     7055    3      END /* IF */;
      706     7056    2   END /* SUBROUTINE */;
      707     7057
      708     7058        %EJECT;
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:46   
      709     7059    1   TLUSR: PROC(STRTYP);
      710     7060        /* Reports strrls event to user                                               */
      711     7061
      712     7062
      713     7063        %KV$USR_EVT(NAME = KV@USR_EVT, STCLASS = AUTO);
      714     7098        %KV$USR_EVT(NAME = KV_USR_EVT, STCLASS = SYMREF READONLY);
      715     7133    2   DCL KVV$CALUSR_EVT ENTRY(1) ALTRET;
      716     7134
      717     7135    2   DCL STRTYP UBIN ALIGNED;
      718     7136
      719     7137        /* CHECK TO SEE IF USER WANTS EVENT FOR PARTICULAR STRUCTURE                  */
      720     7138
      721     7139    3      IF %KV_USRPRM.STREVTENB(STRTYP) THEN DO;
      722     7140
      723     7141        /* WE MUST TELL THE USER                                                      */
      724     7142
      725     7143              %KV$CALUSR_EVT (EVT_ID=%KV_USR_EVT_ID_RLSSTR, PRM=STRTYP);
              7155        /* !C! */
              7156    4           IF KV$PTR.VDI$->KV$VDI.USREVTENB (11) THEN DO;
              7158    4              KV@USR_EVT = KV_USR_EVT;
              7159    4              KV@USR_EVT.ID = 11;
              7160    4              KV@USR_EVT.PRM = STRTYP;
              7161    4              CALL KVV$CALUSR_EVT (KV@USR_EVT);
              7166    4              END;
              7168        /* ! ! */
      726     7170
      727     7171    3      END /* IF */;
      728     7172    2      RETURN;
      729     7173    2   END /* SUBROUTINE */;
      730     7174        %EJECT;
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:47   
      731     7175    1   RLSBFR: PROC;
      732     7176        /* Just calls KVS$RLSBFR, to save 9 wrd per call (~30 of them) */
      733     7177
      734     7178    2      CALL KVS$RLSBFR (KV@VDH_RLSBFR);
      735     7179    2      KV@VDH_RLSBFR.BYTSIZ = 0;
      736     7180    2      RETURN;
      737     7181    2   END /* SUBROUTINE */;
      738     7182        %EJECT;
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:48   
      739     7183    1   KVC$RLSVDI: ENTRY;
      740     7184        /*F* NAME: KVC$RLSVDI.
      741     7185             PURPOSE: Release KV$s the final pieces of VDH context (VDI and PTR).
      742     7186        */
      743     7187    1      KV@VDH_RLSBFR = KV_VDH_RLSBFR;
      744     7188
      745     7189        /* Release KV$TRCBFR. */
      746     7190
      747     7191    2      IF (%KV_VDI.TRCBFR$ ~= ADDR(NIL)) THEN DO;
      748     7192    2         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_TRCBFR;
      749     7193    2         KV@VDH_RLSBFR.BFR$ = %KV_VDI.TRCBFR$;
      750     7194    2         KV@VDH_RLSBFR.BYTSIZ = %KV_VDI.TRCBFRBYTSIZ;
      751     7195    2         %KV_VDI.TRCBFR$ = ADDR(NIL);
      752     7196    2         CALL RLSBFR ;
      753     7197    2      END /* IF */;
      754     7198        /* Release saved edit window. */
      755     7199
      756     7200    2      IF (%KV_VDI.EDTWND$ ~= ADDR(NIL)) THEN DO;
      757     7201    2         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_REDBFR;
      758     7202    2         KV@VDH_RLSBFR.BFR$ = %KV_VDI.EDTWND$;
      759     7203    2         KV@VDH_RLSBFR.BYTSIZ = KV$EDTWND.STRBYTSIZ;
      760     7204    2         CALL RLSBFR ;
      761     7205    2      END /* IF */;
      762     7206
      763     7207        /* Tell user about release of  KV$VDI
              7207         */
      764     7208
      765     7209    1      CALL TLUSR(%KV_STRTYP_VDI) ;
      766     7210
      767     7211        /* Release KV$VDI                                                                */
      768     7212    1      KV@VDH_RLSBFR.STT$ = %KV_USRPRM.STT$;
      769     7213    1      KV@VDH_RLSBFR.BFR$ = KV$PTR.VDI$;
      770     7214    1      KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_VDI;
      771     7215    1      CALL RLSBFR ;
      772     7216
      773     7217        /* Release asynchronous input KV$PTR.
              7217             */
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:49   
      774     7218
      775     7219    1      KV@VDH_RLSBFR.BFR$ = KV$PTR$;
      776     7220    1      KV$PTR$ = ADDR(NIL);
      777     7221    1      KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_PTR;
      778     7222    1      CALL RLSBFR ;
      779     7223
      780     7224    1      RETURN;
      781     7225    1   END KVC$RLSSSN;

PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:50   
--  Include file information  --

   K_ID_E.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KV_INT_M.:E05TOU  is referenced.
   KH_CLKFNC_E.:E05TOU  is referenced.
   KH$CLK.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is referenced.
   KV$SND.:E05TOU  was found in the system file and is referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KVC$RLSSSN.

   Procedure KVC$RLSSSN requires 1447 words for executable code.
   Procedure KVC$RLSSSN requires 44 words of local(AUTO) storage.

    No errors detected in file KVC$DSC.:E05TSI    .

PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:51   

 Object Unit name= KVC$RLSSSN                                 File name= KVC$DSC.:E05TOU
 UTS= JUL 30 '97 01:56:05.36 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none  1447    5A7  KVC$RLSSSN
    1  RoData even  none     2      2  KVC$RLSSSN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        0  KVC$RLSSSN
     0     1F                  yes      Std        0  KVC$RLSSSNNO_CNC
     0    1A1                  yes      Std        0  KVC$RLSSTR
     0    200                  yes      Std        0  KVC$RLSMVD
     0    21A                  yes      Std        0  KVC$RLSFRM
     0    538                  yes      Std        0  KVC$RLSVDI

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 KVM$SND
         yes           Std       0 KVS$CHNSSN
 yes     yes           Std       1 KHC$CLOCK
         yes           Std       0 KVO$ERSMRD
 yes     yes           Std       0 KVC$RLSWND
 yes     yes           Std       1 KVV$CALUSR_EVT
 yes     yes           Std       1 KVS$RLSBFR
                       nStd      0 X6A_AUTO_0
                       nStd      0 X6A_ARET
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:52   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    KV_SND_CMPDSCSSN                 r    KV_VDH_RLSBFR                         KV_CLK_CANCEL
     KV_SSNCNT                             KV$PTR$                          r    KV_USR_EVT
r    G$ROS$
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:53   


      140        1        /*T***********************************************************/
      141        2        /*T*                                                         */
      142        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      143        4        /*T*                                                         */
      144        5        /*T***********************************************************/
      145        6        KVC$RLSSSN: PROC;

      6   0 000000  D380 0000 0000  xent KVC$RLSSSN      LNJ,B5   X6A_AUTO_0
          0 000003       002C 0000                       DC       44,0

      146        7
      147        8        %INCLUDE KH$CLK;
      148      378        %INCLUDE KH_CLKFNC_E;
      149      423 S      %INCLUDE KV_GLBCNS_E;
      150      424        %KV#VD_ORG_E;
      151      432        %KV_BFRRLSDSP_E;
      152      438        %KV_PHSPSTMOD_E;
      153      445        %KV_STRTYP_E;
      154      483        %KV_USR_EVT_ID_E;
      155      503 S      %INCLUDE KV$GLBCTX;
      156      504 S      %INCLUDE KV$GLB;
      157      505 S      %INCLUDE KV$SND;
      158      506        %KV_SND_FNC_E;
      159      522 S      %INCLUDE KV$VDH;
      160      523 S      %INCLUDE KV$USR;
      161      524 S      %INCLUDE KV$INT;
      162      525        %INCLUDE KV_INT_M;
      163      668 S      %INCLUDE KV_PRMID_E;
      164      669        %KV_PRMID_E;
      165      825        %INCLUDE KL_MACRO_C;
      166     4177        %INCLUDE KL_AFCN_C;
      167     4278        %INCLUDE K_ID_E;
      168     4328        %K#LYRID_E;
      169     4335        %K#ENTID_E;
      170     4354
      171     4355    1   DCL KHC$CLOCK ENTRY(1) ALTRET;
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:54   
      172     4356    1   DCL KVC$RLSWND ENTRY ALTRET;
      173     4357    1   DCL KVM$SND ENTRY(1) ALTRET;
      174     4358    1   DCL KVO$ERSMRD ENTRY;
      175     4359    1   DCL KVS$CHNSSN ENTRY;
      176     4360    1   DCL KVS$RLSBFR ENTRY(1) ALTRET;
      177     4361
      178     4362        %KV$SND_CMPDSCSSN(NAME = KV_SND_CMPDSCSSN, STCLASS = SYMREF READONLY);
      179     4417        %KV$VDH_RLSBFR(NAME = KV_VDH_RLSBFR, STCLASS = "SYMREF READONLY");
      180     4453        %KH$CLK (FPTN=KV_CLK_CANCEL, STCLASS=SYMREF, FNC=%KH#CLK_CANCEL);
      181     4602    1   DCL KV_SSNCNT UBIN SYMREF;
      182     4603        %KV$PTR (NAME=KV_PTR, STCLASS=SYMREF READONLY);
      183     4646
      184     4647        %KV$EDTWND (STCLASS="BASED(KV@VDH_RLSBFR.BFR$)");
      185     4663        %KV$GETPRM;                             /*                                    */
      186     4705        %KV$MRD;                                /*  VDH Master real device            */
      187     4752        %KV$MVD;                                /*  VDH Master virtual device         */
      188     4796        %KV$PTR;                                /*  VDH Pointers, status              */
      189     4839        %KV$SRD;                                /*  VDH Subordinate real device       */
      190     5114        %KV$SSN;                                /*  VDH Session                       */
      191     5193        %KV$STR;                                /*  VDH Stream                        */
      192     5280        %KV$STT;                                /*  VDH STATS                         */
      193     5674        %KV$TYPAHDBFR;                          /*  VDH Type-ahead buffer             */
      194     5699        %KV$USRPRM;                             /*                                    */
      195     5750        %KV$VDI;                                /*  VDI (VDH < ->VDH user interface)  */
      196     5821
      197     5822        /* LOCAL                                                                      */
      198     5823
      199     5824        %KV$VDH_RLSBFR(NAME = KV@VDH_RLSBFR, STCLASS = AUTO);
      200     5860    1   DCL PTR$ PTR ALIGNED;
      201     5861        %KH$CLK (FPTN=KH@CLK, STCLASS=AUTO, FNC=%KH#CLK_CANCEL);
      202     6010
      203     6011        /* Release the context associated with a session (KV$SSN on down).            */
      204     6012
      205     6013    1      KV_SSNCNT = KV_SSNCNT-1;

   6013   0 000005  8880 0000 0000  xsym                 DEC      KV_SSNCNT

PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:55   
      206     6014    1      %KV_VDI.SSNCNT = %KV_VDI.SSNCNT-1;

   6014   0 000008  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 00000B  DC86                                 LDB,B5   ,B6
          0 00000C  88C5 000E                            DEC      14,B5

      207     6015
      208     6016        /* Invoke complete-disconnect-session processing.  This will probably         */
      209     6017        /* send KH_FCN_TERM or KH_FCN_TERM_ACK. */
      210     6018
      211     6019    1      IF %KV_SSN.SSNCNCID~=0 THEN CALL KVM$SND (KV_SND_CMPDSCSSN);

   6019   0 00000E  DCC6 0002                            LDB,B5   2,B6
          0 000010  E845 0024                            LDR,R6   36,B5
          0 000012  6901 000A                            BEZ,R6   s:6019+15,PREL

   6019   0 000014  BB80 0000 0000  01                   LAB,B3   0
          0 000017  CBF0 0100                            LAB,B4   256,IMO
          0 000019  E380 0000 0000  xent                 LNJ,B6   KVM$SND
          0 00001C       0001                            DC       s:6019+15,PREL
          0 00001D  0F81 0006                            B        s:6025,PREL

      212     6020        %EJECT;
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:56   
      213     6021    1   KVC$RLSSSNNO_CNC: ENTRY;

   6021   0 00001F  D380 0000 0000  xent KVC$RLSSSNNO_CNCLNJ,B5   X6A_AUTO_0
          0 000022       002C 0000                       DC       44,0

      214     6022
      215     6023        /* Entry for incomplete connect. */
      216     6024
      217     6025    1      KV@VDH_RLSBFR = KV_VDH_RLSBFR;

   6025   0 000024  AB80 0000 0000  xsym                 LAB,B2   KV_VDH_RLSBFR
          0 000027  2C00                                 LDV,R2   0
          0 000028  6C0E                                 LDV,R6   14
          0 000029  BB87                                 LAB,B3   ,AUTO
          0 00002A  3C08                                 LDV,R3   8
          0 00002B  0008                                 MMM

      218     6026    1      PTR$ = %KV_SSN.STR$;

   6026   0 00002C  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 00002F  DCC6 0002                            LDB,B5   2,B6
          0 000031  CCC5 0004                            LDB,B4   4,B5
          0 000033  CFC7 000B                            STB,B4   PTR$,AUTO

      219     6027    1      %KV_SSN.STR$ = ADDR(NIL);

   6027   0 000035  AB80 0000 0000                       LAB,B2   0
          0 000038  AFC5 0004                            STB,B2   4,B5

      220     6028
      221     6029        /* LOOP THROUGH STREAMS FOR THIS SESSION                                      */
      222     6030
      223     6031    1      IF PTR$=ADDR(NIL) AND KV$PTR.MVD$~=ADDR(NIL)

   6031   0 00003A  8DC7 000B                            CMN      PTR$,AUTO
          0 00003C  0981 000E                            BNE      s:6035,PREL
          0 00003E  8DC6 0006                            CMN      6,B6
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:57   
          0 000040  0901 000A                            BE       s:6035,PREL

      224     6032        /* Incomplete connect might have gotten MVD but no STRs. */
      225     6033
      226     6034    1      THEN CALL RLSMVDNO_STR (%KV_MVD);

   6034   0 000042  DCC6 0006                            LDB,B5   6,B6
          0 000044  DFC7 001A                            STB,B5   KH@CLK+13,AUTO
          0 000046  E3C0 0282                            LNJ,B6   s:0,PREL
          0 000048       0001                            DC       s:6034+7,PREL
          0 000049  0F81 0009                            B        s:6040,PREL

      227     6035    2      ELSE DO WHILE PTR$~=ADDR(NIL);

   6035   0 00004B  0F81 0004                            B        s:6037,PREL

      228     6036    2         CALL RLSSTR;

   6036   0 00004D  E3C0 0205                            LNJ,B6   s:0,PREL
          0 00004F       0001                            DC       s:6037,PREL

      229     6037    2      END /* LOOP */;

   6037   0 000050  8DC7 000B                            CMN      PTR$,AUTO
          0 000052  09FB                                 BNE      s:6036,SPREL

      230     6038
      231     6039        /* All streams for this session have been released. */
      232     6040    2      IF %KV_SSN.CLKSET THEN DO;

   6040   0 000053  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 000056  DCC6 0002                            LDB,B5   2,B6
          0 000058  82C5 0029                            LB,'00FF'X        41,B5
          0 00005A       00FF
          0 00005B  0581 002E                            BBF      s:6055,PREL

      233     6041
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:58   
      234     6042        /* Cancel any clocks. */
      235     6043
      236     6044    2         KH@CLK = KV_CLK_CANCEL;

   6044   0 00005D  AB80 0000 0000  xsym                 LAB,B2   KV_CLK_CANCEL
          0 000060  2C00                                 LDV,R2   0
          0 000061  6C10                                 LDV,R6   16
          0 000062  BB87                                 LAB,B3   ,AUTO
          0 000063  3C1A                                 LDV,R3   26
          0 000064  0008                                 MMM

      237     6045    2         KH@CLK.UID$ = KV$PTR.SSN$;

   6045   0 000065  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 000068  DCC6 0002                            LDB,B5   2,B6
          0 00006A  DFC7 000F                            STB,B5   KH@CLK+2,AUTO

      238     6046    3         DO WHILE KH@CLK.UVAL<SIZEB(KV$SSN.CLKSET);

   6046   0 00006C  0F81 0019                            B        s:6050,PREL

      239     6047    3            IF KH@CLK.UID$->KV$SSN.CLKSET(KH@CLK.UVAL)

   6047   0 00006E  ECC7 000F                            LDB,B6   KH@CLK+2,AUTO
          0 000070  DBC6 0029                            LAB,B5   41,B6
          0 000072  B847 0011                            LDR,R3   KH@CLK+4,AUTO
          0 000074  3E08                                 ADV,R3   8
          0 000075  82B5                                 LB       ,B5,R3
          0 000076  0581 000D                            BBF      s:6049,PREL

      240     6048    3            THEN CALL KHC$CLOCK (KH@CLK);

   6048   0 000078  DBC7 000D                            LAB,B5   KH@CLK,AUTO
          0 00007A  DFC7 002A                            STB,B5   KV@USR_EVT+2,AUTO
          0 00007C  BBC7 002A                            LAB,B3   KV@USR_EVT+2,AUTO
          0 00007E  CBF0 0100                            LAB,B4   256,IMO
          0 000080  E380 0000 0000  xent                 LNJ,B6   KHC$CLOCK
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:59   
          0 000083       0001                            DC       s:6049,PREL

      241     6049    3            KH@CLK.UVAL = KH@CLK.UVAL+1;

   6049   0 000084  8AC7 0011                            INC      KH@CLK+4,AUTO

      242     6050    3         END;

   6050   0 000086  E847 0011                            LDR,R6   KH@CLK+4,AUTO
          0 000088  6D08                                 CMV,R6   8
          0 000089  0265                                 BL       s:6047,SPREL

      243     6051    2      END;

      244     6052
      245     6053        /* Release KV$TYPAHD buffers                                                   */
      246     6054
      247     6055    1      PTR$ = %KV_SSN.TYPAHDBFRHED$;

   6055   0 00008A  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 00008D  DCC6 0002                            LDB,B5   2,B6
          0 00008F  CCC5 000A                            LDB,B4   10,B5
          0 000091  CFC7 000B                            STB,B4   PTR$,AUTO

      248     6056    2      DO WHILE (PTR$ ~= ADDR(NIL));

   6056   0 000093  0F81 000E                            B        s:6064,PREL

      249     6057
      250     6058        /* This loop is traversed for each type-ahead buffer.                         */
      251     6059
      252     6060    2         KV@VDH_RLSBFR.BFR$ = PTR$;

   6060   0 000095  ECC7 000B                            LDB,B6   PTR$,AUTO
          0 000097  EFC7 0005                            STB,B6   KV@VDH_RLSBFR+1,AUTO

      253     6061    2         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_TYPAHDBFR;
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:60   

   6061   0 000099  6C19                                 LDV,R6   25
          0 00009A  E7C7 000A                            STH,R6   KV@VDH_RLSBFR+6,AUTO

      254     6062    2         PTR$ = PTR$ ->KV$TYPAHDBFR.LNK$;

   6062   0 00009C  DC86                                 LDB,B5   ,B6
          0 00009D  DFC7 000B                            STB,B5   PTR$,AUTO

      255     6063    2         CALL RLSBFR ;

   6063   0 00009F  E3C0 0484                            LNJ,B6   s:0,PREL
          0 0000A1       0001                            DC       s:6064,PREL

      256     6064    2      END /* LOOP */;

   6064   0 0000A2  8DC7 000B                            CMN      PTR$,AUTO
          0 0000A4  09F1                                 BNE      s:6060,SPREL

      257     6065
      258     6066        /* Release any GETPRM buffers                                                */
      259     6067
      260     6068    1      PTR$ = %KV_SSN.SNDPRMBFRHED$;

   6068   0 0000A5  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 0000A8  DCC6 0002                            LDB,B5   2,B6
          0 0000AA  CCC5 0022                            LDB,B4   34,B5
          0 0000AC  CFC7 000B                            STB,B4   PTR$,AUTO

      261     6069    2      DO WHILE (PTR$ ~= ADDR(NIL));

   6069   0 0000AE  0F81 0014                            B        s:6076,PREL

      262     6070
      263     6071    2         KV@VDH_RLSBFR.BFR$ = PTR$ ->KV$GETPRM.DAT__.ADR$;

   6071   0 0000B0  ECC7 000B                            LDB,B6   PTR$,AUTO
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:61   
          0 0000B2  DCC6 0002                            LDB,B5   2,B6
          0 0000B4  DFC7 0005                            STB,B5   KV@VDH_RLSBFR+1,AUTO

      264     6072    2         KV@VDH_RLSBFR.BYTSIZ = PTR$ ->KV$GETPRM.DAT__.BFRBYTSIZ;

   6072   0 0000B6  E846 0006                            LDR,R6   6,B6
          0 0000B8  EF47 0007                            STR,R6   KV@VDH_RLSBFR+3,AUTO

      265     6073    2         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_MSG;

   6073   0 0000BA  5C0B                                 LDV,R5   11
          0 0000BB  D7C7 000A                            STH,R5   KV@VDH_RLSBFR+6,AUTO

      266     6074    2         PTR$ = PTR$ ->KV$GETPRM.LNK$;

   6074   0 0000BD  CC86                                 LDB,B4   ,B6
          0 0000BE  CFC7 000B                            STB,B4   PTR$,AUTO

      267     6075    2         CALL RLSBFR;

   6075   0 0000C0  E3C0 0463                            LNJ,B6   s:0,PREL
          0 0000C2       0001                            DC       s:6076,PREL

      268     6076    2      END /* LOOP */;

   6076   0 0000C3  8DC7 000B                            CMN      PTR$,AUTO
          0 0000C5  09EB                                 BNE      s:6071,SPREL

      269     6077
      270     6078        /* Release SSNHDN                                                             */
      271     6079
      272     6080    1      KV@VDH_RLSBFR.BFR$ = %KV_SSN.SSNHDN$;

   6080   0 0000C6  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 0000C9  DCC6 0002                            LDB,B5   2,B6
          0 0000CB  CCC5 0006                            LDB,B4   6,B5
          0 0000CD  CFC7 0005                            STB,B4   KV@VDH_RLSBFR+1,AUTO
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:62   

      273     6081    1      KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_SSNHDN;

   6081   0 0000CF  6C14                                 LDV,R6   20
          0 0000D0  E7C7 000A                            STH,R6   KV@VDH_RLSBFR+6,AUTO

      274     6082    1      CALL RLSBFR ;

   6082   0 0000D2  E3C0 0451                            LNJ,B6   s:0,PREL
          0 0000D4       0001                            DC       s:6086,PREL

      275     6083
      276     6084        /* Release KV$REDBFR                                                             */
      277     6085
      278     6086    1      IF %KV_SSN.REDBFR__.BFRRLSDSP~=%KV_BFRRLSDSP_NON

   6086   0 0000D5  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 0000D8  DCC6 0002                            LDB,B5   2,B6
          0 0000DA  82C5 0035                            LB,'00FF'X        53,B5
          0 0000DC       00FF
          0 0000DD  0581 0017                            BBF      s:6096,PREL
          0 0000DF  8DC5 0030                            CMN      48,B5
          0 0000E1  0901 0013                            BE       s:6096,PREL

      279     6087    2        AND %KV_SSN.REDBFR__.ADR$~=ADDR(NIL) THEN DO;

      280     6088    2         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_REDBFR;

   6088   0 0000E3  6C11                                 LDV,R6   17
          0 0000E4  E7C7 000A                            STH,R6   KV@VDH_RLSBFR+6,AUTO

      281     6089    2         KV@VDH_RLSBFR.BFR$ = %KV_SSN.REDBFR__.ADR$;

   6089   0 0000E6  DCC6 0002                            LDB,B5   2,B6
          0 0000E8  CCC5 0030                            LDB,B4   48,B5
          0 0000EA  CFC7 0005                            STB,B4   KV@VDH_RLSBFR+1,AUTO

PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:63   
      282     6090    2         KV@VDH_RLSBFR.BYTSIZ = %KV_SSN.REDBFR__.BFRBYTSIZ;

   6090   0 0000EC  DCC6 0002                            LDB,B5   2,B6
          0 0000EE  D845 0034                            LDR,R5   52,B5
          0 0000F0  DF47 0007                            STR,R5   KV@VDH_RLSBFR+3,AUTO

      283     6091    2         CALL RLSBFR ;

   6091   0 0000F2  E3C0 0431                            LNJ,B6   s:0,PREL
          0 0000F4       0001                            DC       s:6096,PREL

      284     6092    2      END /* IF */;

      285     6093
      286     6094        /* Release KV$TRCBFR if not shared with KV$VDI.
              6094         */
      287     6095
      288     6096    1      IF (%KV_SSN.TRCBFR$ ~= ADDR(NIL))

   6096   0 0000F5  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 0000F8  DCC6 0002                            LDB,B5   2,B6
          0 0000FA  8DC5 0010                            CMN      16,B5
          0 0000FC  0901 001F                            BE       s:6107,PREL
          0 0000FE  CC86                                 LDB,B4   ,B6
          0 0000FF  82C4 001D                            LB,'0002'X        29,B4
          0 000101       0002
          0 000102  0501 0019                            BBT      s:6107,PREL

      289     6097    2        AND NOT %KV_VDI.SHRTRCBFR THEN DO;

      290     6098    2         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_TRCBFR;

   6098   0 000104  6C21                                 LDV,R6   33
          0 000105  E7C7 000A                            STH,R6   KV@VDH_RLSBFR+6,AUTO

      291     6099    2         KV@VDH_RLSBFR.BFR$ = %KV_SSN.TRCBFR$;

PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:64   
   6099   0 000107  DCC6 0002                            LDB,B5   2,B6
          0 000109  CCC5 0010                            LDB,B4   16,B5
          0 00010B  CFC7 0005                            STB,B4   KV@VDH_RLSBFR+1,AUTO

      292     6100    2         KV@VDH_RLSBFR.BYTSIZ = %KV_VDI.TRCBFRBYTSIZ;

   6100   0 00010D  DC86                                 LDB,B5   ,B6
          0 00010E  D845 0014                            LDR,R5   20,B5
          0 000110  DF47 0007                            STR,R5   KV@VDH_RLSBFR+3,AUTO

      293     6101    2         %KV_SSN.TRCBFR$ = ADDR(NIL);

   6101   0 000112  DCC6 0002                            LDB,B5   2,B6
          0 000114  BB80 0000 0000                       LAB,B3   0
          0 000117  BFC5 0010                            STB,B3   16,B5

      294     6102    2         CALL RLSBFR ;

   6102   0 000119  E3C0 040A                            LNJ,B6   s:0,PREL
          0 00011B       0001                            DC       s:6107,PREL

      295     6103    2      END /* IF */;

      296     6104
      297     6105        /* TELL USER ABOUT SSN                                                        */
      298     6106
      299     6107    1      CALL TLUSR(%KV_STRTYP_SSN) ;

   6107   0 00011C  EBF0 0013                            LAB,B6   19,IMO
          0 00011E  EFC7 0026                            STB,B6   @Y$MRD+4,AUTO
          0 000120  E3C0 03D2                            LNJ,B6   s:0,PREL
          0 000122       0001                            DC       s:6109,PREL

      300     6108
      301     6109    1      PTR$ = %KV_VDI.SSN$;

   6109   0 000123  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:65   
          0 000126  DC86                                 LDB,B5   ,B6
          0 000127  CCC5 0004                            LDB,B4   4,B5
          0 000129  CFC7 000B                            STB,B4   PTR$,AUTO

      302     6110
      303     6111        /* Delink this KV$SSN from the chain. */
      304     6112
      305     6113    2      IF PTR$=KV$PTR.SSN$ THEN DO;

   6113   0 00012B  CDC6 0002                            CMB,B4   2,B6
          0 00012D  0981 0007                            BNE      s:6124,PREL

      306     6114
      307     6115        /* The KV$SSN we're releasing is at the head of the chain. */
      308     6116        /* Just point the head pointer at the next in the chain. */
      309     6117
      310     6118    2         %KV_VDI.SSN$ = PTR$->KV$SSN.LNK$;

   6118   0 00012F  BCC4 0002                            LDB,B3   2,B4
          0 000131  BFC5 0004                            STB,B3   4,B5

      311     6119    2      END;

   6119   0 000133  0F81 0021                            B        s:6141,PREL

      312     6120
      313     6121        /* The KV$SSN we're releasing isn't at the head of the chain. */
      314     6122        /* Search the chain, looking for the KV$SSN that points at ours. */
      315     6123
      316     6124    2      ELSE DO WHILE PTR$~=KV$PTR.SSN$;

   6124   0 000135  CDC6 0002                            CMB,B4   2,B6
          0 000137  0901 001D                            BE       s:6141,PREL

      317     6125
      318     6126        /* This loop is re-iterated for each KV$SSN in the chain, until */
      319     6127        /* we find the one that points at ours. */
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:66   
      320     6128
      321     6129    3         IF PTR$->KV$SSN.LNK$=KV$PTR.SSN$ THEN DO;

   6129   0 000139  ECC7 000B                            LDB,B6   PTR$,AUTO
          0 00013B  DCC6 0002                            LDB,B5   2,B6
          0 00013D  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          0 000140  DDC4 0002                            CMB,B5   2,B4
          0 000142  0981 000D                            BNE      s:6136,PREL

      322     6130
      323     6131        /* We found it. */
      324     6132
      325     6133    3            PTR$->KV$SSN.LNK$ = %KV_SSN.LNK$;

   6133   0 000144  BCC4 0002                            LDB,B3   2,B4
          0 000146  ACC3 0002                            LDB,B2   2,B3
          0 000148  AFC6 0002                            STB,B2   2,B6

      326     6134    3            PTR$ = KV$PTR.SSN$;

   6134   0 00014A  DCC4 0002                            LDB,B5   2,B4
          0 00014C  DFC7 000B                            STB,B5   PTR$,AUTO

      327     6135    3         END;                         /* END IF PTR$->KV$SSN.LNK$ = KV$PTR.SSN$  */

   6135   0 00014E  0F81 0003                            B        s:6137,PREL

      328     6136    2         ELSE PTR$ = PTR$->KV$SSN.LNK$;

   6136   0 000150  DFC7 000B                            STB,B5   PTR$,AUTO

      329     6137    2      END; /* END WHILE */

   6137   0 000152  DDC4 0002                            CMB,B5   2,B4
          0 000154  09E5                                 BNE      s:6129,SPREL

      330     6138
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:67   
      331     6139        /* Release KV$SSN */
      332     6140
      333     6141    1      PTR$->KV$SSN.SSNCNCID = 0;

   6141   0 000155  ECC7 000B                            LDB,B6   PTR$,AUTO
          0 000157  8746 0024                            CL       36,B6

      334     6142    1      KV@VDH_RLSBFR.BFR$ = PTR$;

   6142   0 000159  EFC7 0005                            STB,B6   KV@VDH_RLSBFR+1,AUTO

      335     6143    1      KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_SSN;

   6143   0 00015B  6C13                                 LDV,R6   19
          0 00015C  E7C7 000A                            STH,R6   KV@VDH_RLSBFR+6,AUTO

      336     6144    1      CALL RLSBFR ;

   6144   0 00015E  E3C0 03C5                            LNJ,B6   s:0,PREL
          0 000160       0001                            DC       s:6147,PREL

      337     6145        /* Release PTR if this is not the last SSN. */
      338     6146
      339     6147    2      IF %KV_VDI.SSN$~=ADDR(NIL) THEN DO;

   6147   0 000161  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 000164  DC86                                 LDB,B5   ,B6
          0 000165  8DC5 0004                            CMN      4,B5
          0 000167  0901 0036                            BE       s:6167,PREL

      340     6148
      341     6149        /* Release KV$PTR.                                                    */
      342     6150
      343     6151    2         KV@VDH_RLSBFR.BFR$ = KV$PTR$;

   6151   0 000169  EFC7 0005                            STB,B6   KV@VDH_RLSBFR+1,AUTO

PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:68   
      344     6152    2         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_PTR;

   6152   0 00016B  6C10                                 LDV,R6   16
          0 00016C  E7C7 000A                            STH,R6   KV@VDH_RLSBFR+6,AUTO

      345     6153    3         IF KV$PTR.STR$~=ADDR(NIL) THEN DO;

   6153   0 00016E  8DC6 0004                            CMN      4,B6
          0 000170  0901 002A                            BE       s:6165,PREL

      346     6154    4            IF %KV_VDI.CRSRED THEN DO;

   6154   0 000172  DC86                                 LDB,B5   ,B6
          0 000173  82C5 0018                            LB,'0080'X        24,B5
          0 000175       0080
          0 000176  0581 001E                            BBF      s:6163,PREL

      347     6155    4               PTR$ = %KV_VDI.SSN$;

   6155   0 000178  CCC5 0004                            LDB,B4   4,B5
          0 00017A  CFC7 000B                            STB,B4   PTR$,AUTO

      348     6156    5               DO UNTIL PTR$=ADDR(NIL);

      349     6157    5                  IF PTR$->KV$SSN.REDRQSPND THEN EXIT;

   6157   0 00017C  ECC7 000B                            LDB,B6   PTR$,AUTO
          0 00017E  82C6 0028                            LB,'0002'X        40,B6
          0 000180       0002
          0 000181  0501 0008                            BBT      s:6160,PREL

      350     6158    5                  PTR$ = PTR$->KV$SSN.LNK$;

   6158   0 000183  DCC6 0002                            LDB,B5   2,B6
          0 000185  DFC7 000B                            STB,B5   PTR$,AUTO

      351     6159    5               END;
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:69   

   6159   0 000187  8DC7 000B                            CMN      PTR$,AUTO
          0 000189  09F3                                 BNE      s:6157,SPREL

      352     6160    4               IF PTR$~=ADDR(NIL)

   6160   0 00018A  8DC7 000B                            CMN      PTR$,AUTO
          0 00018C  0901 0008                            BE       s:6163,PREL

      353     6161    4               THEN PTR$->KV$SSN.VDI$->KV$VDI.ASNINPPTR$ = PTR$->KV$SSN.SNCPTR$;

   6161   0 00018E  ECC7 000B                            LDB,B6   PTR$,AUTO
          0 000190  DC86                                 LDB,B5   ,B6
          0 000191  CCC6 0008                            LDB,B4   8,B6
          0 000193  CFC5 0006                            STB,B4   6,B5

      354     6162    4            END;

      355     6163    3            CALL KVS$CHNSSN;

   6163   0 000195  CBF0 0000                            LAB,B4   0,IMO
          0 000197  E380 0000 0000  xent                 LNJ,B6   KVS$CHNSSN
          0 00019A       0001                            DC       s:6165,PREL

      356     6164    3         END;

      357     6165    2         CALL RLSBFR ;

   6165   0 00019B  E3C0 0388                            LNJ,B6   s:0,PREL
          0 00019D       0001                            DC       s:6167,PREL

      358     6166    2      END;

      359     6167    1      RETURN;

   6167   0 00019E  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:70   
      360     6168
      361     6169        %EJECT;
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:71   
      362     6170        /*F* name: KVC$RLSSTR.
      363     6171             Purpose: Releases the context (and screen area if applicable) for
      364     6172             the stream at KV$PTR.STR$, unless that stream no longer points to
      365     6173             KV$PTR.SSN$, in which case it is just removed from KV$PTR.SSN$'s chain. */
      366     6174    1   KVC$RLSSTR: ENTRY;

   6174   0 0001A1  D380 0000 0000  xent KVC$RLSSTR      LNJ,B5   X6A_AUTO_0
          0 0001A4       002C 0000                       DC       44,0

      367     6175
      368     6176        /* First find and unlink it in the SSN chain. */
      369     6177    1      PTR$ = %KV_SSN.STR$;

   6177   0 0001A6  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 0001A9  DCC6 0002                            LDB,B5   2,B6
          0 0001AB  CCC5 0004                            LDB,B4   4,B5
          0 0001AD  CFC7 000B                            STB,B4   PTR$,AUTO

      370     6178    1      IF PTR$=KV$PTR.STR$ THEN %KV_SSN.STR$ = %KV_STR.LNK$;

   6178   0 0001AF  CDC6 0004                            CMB,B4   4,B6
          0 0001B1  0981 0009                            BNE      s:6179,PREL

   6178   0 0001B3  BCC6 0004                            LDB,B3   4,B6
          0 0001B5  ACC3 0002                            LDB,B2   2,B3
          0 0001B7  AFC5 0004                            STB,B2   4,B5
          0 0001B9  0F81 001F                            B        s:6186,PREL

      371     6179    2      ELSE DO WHILE PTR$~=KV$PTR.STR$;

   6179   0 0001BB  CDC6 0004                            CMB,B4   4,B6
          0 0001BD  0901 001B                            BE       s:6186,PREL

      372     6180    3         IF PTR$->KV$STR.LNK$=KV$PTR.STR$ THEN DO;

   6180   0 0001BF  ECC7 000B                            LDB,B6   PTR$,AUTO
          0 0001C1  DCC6 0002                            LDB,B5   2,B6
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:72   
          0 0001C3  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          0 0001C6  DDC4 0004                            CMB,B5   4,B4
          0 0001C8  0981 000B                            BNE      s:6184,PREL

      373     6181    3            PTR$->KV$STR.LNK$ = PTR$->KV$STR.LNK$->KV$STR.LNK$;

   6181   0 0001CA  BCC5 0002                            LDB,B3   2,B5
          0 0001CC  BFC6 0002                            STB,B3   2,B6

      374     6182    3            PTR$ = KV$PTR.STR$;

   6182   0 0001CE  DCC4 0004                            LDB,B5   4,B4
          0 0001D0  DFC7 000B                            STB,B5   PTR$,AUTO

      375     6183    3         END;

   6183   0 0001D2  0F81 0003                            B        s:6185,PREL

      376     6184    2         ELSE PTR$ = PTR$->KV$STR.LNK$;

   6184   0 0001D4  DFC7 000B                            STB,B5   PTR$,AUTO

      377     6185    2      END;

   6185   0 0001D6  DDC4 0004                            CMB,B5   4,B4
          0 0001D8  09E7                                 BNE      s:6180,SPREL

      378     6186    2      IF PTR$->KV$STR.SSN$=KV$PTR.SSN$ THEN DO;

   6186   0 0001D9  ECC7 000B                            LDB,B6   PTR$,AUTO
          0 0001DB  DC86                                 LDB,B5   ,B6
          0 0001DC  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          0 0001DF  DDC4 0002                            CMB,B5   2,B4
          0 0001E1  0981 0016                            BNE      s:6194,PREL

      379     6187        /* Release the context unless this call wants to split the stream off
      380     6188           for a new session. */
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:73   
      381     6189
      382     6190    2         KV@VDH_RLSBFR = KV_VDH_RLSBFR;

   6190   0 0001E3  AB80 0000 0000  xsym                 LAB,B2   KV_VDH_RLSBFR
          0 0001E6  2C00                                 LDV,R2   0
          0 0001E7  6C0E                                 LDV,R6   14
          0 0001E8  BB87                                 LAB,B3   ,AUTO
          0 0001E9  3C08                                 LDV,R3   8
          0 0001EA  0008                                 MMM

      383     6191    2         CALL RLSSTR;

   6191   0 0001EB  E3C0 0067                            LNJ,B6   s:0,PREL
          0 0001ED       0001                            DC       s:6192,PREL

      384     6192    2         KV$PTR.STR$ = ADDR(NIL);

   6192   0 0001EE  EB80 0000 0000                       LAB,B6   0
          0 0001F1  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          0 0001F4  EFC5 0004                            STB,B6   4,B5

      385     6193    2      END;

   6193   0 0001F6  0F81 0006                            B        s:6195,PREL

      386     6194    1      ELSE PTR$->KV$STR.LNK$ = ADDR(NIL);

   6194   0 0001F8  BB80 0000 0000                       LAB,B3   0
          0 0001FB  BFC6 0002                            STB,B3   2,B6

      387     6195    1      RETURN;

   6195   0 0001FD  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      388     6196        %EJECT;
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:74   
      389     6197        /*F* NAME: KVC$RLSMVD.
      390     6198             PURPOSE: Releases one MVD without releasing the associated stream.
      391     6199             This entry exists for the unusual case where an attempt to get
      392     6200             an MVD-SRD pair succeeds only halfway, and also for a DCLSTR VDO
      393     6201             with RE_STR that causes a window to be deleted. */
      394     6202    1   KVC$RLSMVD: ENTRY;

   6202   0 000200  D380 0000 0000  xent KVC$RLSMVD      LNJ,B5   X6A_AUTO_0
          0 000203       002C 0000                       DC       44,0

      395     6203
      396     6204    1      KV@VDH_RLSBFR = KV_VDH_RLSBFR;

   6204   0 000205  AB80 0000 0000  xsym                 LAB,B2   KV_VDH_RLSBFR
          0 000208  2C00                                 LDV,R2   0
          0 000209  6C0E                                 LDV,R6   14
          0 00020A  BB87                                 LAB,B3   ,AUTO
          0 00020B  3C08                                 LDV,R3   8
          0 00020C  0008                                 MMM

      397     6205    1      CALL RLSMVD (%KV_MVD);

   6205   0 00020D  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 000210  DCC6 0006                            LDB,B5   6,B6
          0 000212  DFC7 001A                            STB,B5   KH@CLK+13,AUTO
          0 000214  E3C0 00AC                            LNJ,B6   s:0,PREL
          0 000216       0001                            DC       s:6206,PREL

      398     6206    1      RETURN;

   6206   0 000217  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      399     6207        %EJECT;
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:75   
      400     6208        /*F* NAME: KVC$RLSFRM.
      401     6209             PURPOSE: Releases the context subordinate to MVD through LINLST$.
      402     6210             I.e., KV$LINLST/KV$FLDLSTs for ORG=FORM, KV$RCRLST/KV$RCRs for
      403     6211             ORG=SE, and KV$X364 for ORG=X364.
      404     6212        */
      405     6213    1   KVC$RLSFRM: ENTRY;

   6213   0 00021A  D380 0000 0000  xent KVC$RLSFRM      LNJ,B5   X6A_AUTO_0
          0 00021D       002C 0000                       DC       44,0

      406     6214    1      KV@VDH_RLSBFR = KV_VDH_RLSBFR;

   6214   0 00021F  AB80 0000 0000  xsym                 LAB,B2   KV_VDH_RLSBFR
          0 000222  2C00                                 LDV,R2   0
          0 000223  6C0E                                 LDV,R6   14
          0 000224  BB87                                 LAB,B3   ,AUTO
          0 000225  3C08                                 LDV,R3   8
          0 000226  0008                                 MMM

      407     6215    1      IF %KV_MVD.LINLST$~=ADDR(NIL)

   6215   0 000227  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 00022A  DCC6 0006                            LDB,B5   6,B6
          0 00022C  8DC5 0010                            CMN      16,B5
          0 00022E  0901 0021                            BE       s:6224,PREL

      408     6216    1      THEN IF %KV_SRD.USRCNT=1 THEN CALL RLSFRM (%KV_MVD);

   6216   0 000230  CCC6 000A                            LDB,B4   10,B6
          0 000232  E844 0006                            LDR,R6   6,B4
          0 000234  6D01                                 CMV,R6   1
          0 000235  0981 0008                            BNE      s:6220,PREL

   6216   0 000237  DFC7 001E                            STB,B5   @Y$MVD+4,AUTO
          0 000239  E3C0 012F                            LNJ,B6   s:0,PREL
          0 00023B       0001                            DC       s:6216+12,PREL
          0 00023C  0F81 0013                            B        s:6224,PREL
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:76   

      409     6217    2      ELSE DO;

      410     6218        /* For hard-copy forms, get rid of the second MVD, too. */
      411     6219
      412     6220    2         CALL RLSMVD (%KV_MVD);

   6220   0 00023E  DFC7 001A                            STB,B5   KH@CLK+13,AUTO
          0 000240  E3C0 0080                            LNJ,B6   s:0,PREL
          0 000242       0001                            DC       s:6221,PREL

      413     6221    2         KV$PTR.MVD$ = %KV_MRD.MVD$;

   6221   0 000243  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 000246  DCC6 0008                            LDB,B5   8,B6
          0 000248  CCC5 000D                            LDB,B4   13,B5
          0 00024A  CFC6 0006                            STB,B4   6,B6

      414     6222    2         %KV_STR.MVD$ = KV$PTR.MVD$;

   6222   0 00024C  BCC6 0004                            LDB,B3   4,B6
          0 00024E  CFC3 0004                            STB,B4   4,B3

      415     6223    2      END;

      416     6224    1      RETURN;

   6224   0 000250  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      417     6225        %EJECT;
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:77   
      418     6226    1   RLSSTR: PROC;

   6226   0 000253  EFC7 0016            RLSSTR          STB,B6   KH@CLK+9,AUTO

      419     6227
      420     6228        /*I*  NAME: RLSSTR.
      421     6229              DESCRIPTION: This subroutine releases all the context hung off the
      422     6230              stream pointed to by the local variable PTR$. */
      423     6231
      424     6232        /* Release the KV$MVD for this stream. */
      425     6233
      426     6234    2      KV$PTR.MVD$ = PTR$->KV$STR.MVD$;

   6234   0 000255  DCC7 000B                            LDB,B5   PTR$,AUTO
          0 000257  CCC5 0004                            LDB,B4   4,B5
          0 000259  BC80 0000 0000  xsym                 LDB,B3   KV$PTR$
          0 00025C  CFC3 0006                            STB,B4   6,B3

      427     6235    2      KV$PTR.SRD$ = %KV_MVD.SRD$;

   6235   0 00025E  EC84                                 LDB,B6   ,B4
          0 00025F  EFC3 000A                            STB,B6   10,B3

      428     6236    2      KV$PTR.MRD$ = %KV_SRD.MRD$;

   6236   0 000261  AC86                                 LDB,B2   ,B6
          0 000262  AFC3 0008                            STB,B2   8,B3

      429     6237    2      CALL RLSMVD (PTR$->KV$STR.MVD$->KV$MVD);

   6237   0 000264  9CC5 0004                            LDB,B1   4,B5
          0 000266  9FC7 001A                            STB,B1   KH@CLK+13,AUTO
          0 000268  E3C0 0058                            LNJ,B6   s:0,PREL
          0 00026A       0001                            DC       s:6241,PREL

      430     6238
      431     6239        /* Tell user about release                                                       */
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:78   
      432     6240
      433     6241    2      CALL TLUSR(%KV_STRTYP_STR) ;

   6241   0 00026B  EBF0 0016                            LAB,B6   22,IMO
          0 00026D  EFC7 0026                            STB,B6   @Y$MRD+4,AUTO
          0 00026F  E3C0 0283                            LNJ,B6   s:0,PREL
          0 000271       0001                            DC       s:6245,PREL

      434     6242
      435     6243        /* Release the output tab buffer for this stream. */
      436     6244
      437     6245    2      KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_OTPTAB;

   6245   0 000272  6C0D                                 LDV,R6   13
          0 000273  E7C7 000A                            STH,R6   KV@VDH_RLSBFR+6,AUTO

      438     6246    2      KV@VDH_RLSBFR.BFR$ = PTR$->KV$STR.OTPTAB$;

   6246   0 000275  ECC7 000B                            LDB,B6   PTR$,AUTO
          0 000277  DCC6 0006                            LDB,B5   6,B6
          0 000279  DFC7 0005                            STB,B5   KV@VDH_RLSBFR+1,AUTO

      439     6247    2      CALL RLSBFR ;

   6247   0 00027B  E3C0 02A8                            LNJ,B6   s:0,PREL
          0 00027D       0001                            DC       s:6251,PREL

      440     6248
      441     6249        /* Release the PRM for this stream
              6249                           */
      442     6250
      443     6251    2      KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_PRM;

   6251   0 00027E  6C0F                                 LDV,R6   15
          0 00027F  E7C7 000A                            STH,R6   KV@VDH_RLSBFR+6,AUTO

      444     6252    2      KV@VDH_RLSBFR.BFR$ = PTR$->KV$STR.PRM$;
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:79   

   6252   0 000281  ECC7 000B                            LDB,B6   PTR$,AUTO
          0 000283  DCC6 0008                            LDB,B5   8,B6
          0 000285  DFC7 0005                            STB,B5   KV@VDH_RLSBFR+1,AUTO

      445     6253    2      CALL RLSBFR ;

   6253   0 000287  E3C0 029C                            LNJ,B6   s:0,PREL
          0 000289       0001                            DC       s:6257,PREL

      446     6254
      447     6255        /* Release the ACTCHRTBL for this stream
              6255                           */
      448     6256
      449     6257    2      KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_ACTCHR;

   6257   0 00028A  6C01                                 LDV,R6   1
          0 00028B  E7C7 000A                            STH,R6   KV@VDH_RLSBFR+6,AUTO

      450     6258    2      KV@VDH_RLSBFR.BFR$ = PTR$->KV$STR.ACTCHRTBL$;

   6258   0 00028D  ECC7 000B                            LDB,B6   PTR$,AUTO
          0 00028F  DCC6 000A                            LDB,B5   10,B6
          0 000291  DFC7 0005                            STB,B5   KV@VDH_RLSBFR+1,AUTO

      451     6259    2      CALL RLSBFR ;

   6259   0 000293  E3C0 0290                            LNJ,B6   s:0,PREL
          0 000295       0001                            DC       s:6263,PREL

      452     6260
      453     6261        /* Release the EDTBFR for this stream
              6261                    */
      454     6262
      455     6263    2      IF PTR$->KV$STR.EDTBFR__.BFRRLSDSP~=%KV_BFRRLSDSP_NON

   6263   0 000296  ECC7 000B                            LDB,B6   PTR$,AUTO
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:80   
          0 000298  82C6 0011                            LB,'00FF'X        17,B6
          0 00029A       00FF
          0 00029B  0581 0013                            BBF      s:6273,PREL
          0 00029D  8DC6 000C                            CMN      12,B6
          0 00029F  0901 000F                            BE       s:6273,PREL

      456     6264    3        AND PTR$->KV$STR.EDTBFR__.ADR$~=ADDR(NIL) THEN DO;

      457     6265    3         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_REDBFR;

   6265   0 0002A1  6C11                                 LDV,R6   17
          0 0002A2  E7C7 000A                            STH,R6   KV@VDH_RLSBFR+6,AUTO

      458     6266    3         KV@VDH_RLSBFR.BFR$ = PTR$->KV$STR.EDTBFR__.ADR$;

   6266   0 0002A4  DCC6 000C                            LDB,B5   12,B6
          0 0002A6  DFC7 0005                            STB,B5   KV@VDH_RLSBFR+1,AUTO

      459     6267    3         KV@VDH_RLSBFR.BYTSIZ = PTR$->KV$STR.EDTBFR__.BFRBYTSIZ;

   6267   0 0002A8  D846 0010                            LDR,R5   16,B6
          0 0002AA  DF47 0007                            STR,R5   KV@VDH_RLSBFR+3,AUTO

      460     6268    3         CALL RLSBFR ;

   6268   0 0002AC  E3C0 0277                            LNJ,B6   s:0,PREL
          0 0002AE       0001                            DC       s:6273,PREL

      461     6269    3      END /* IF */;

      462     6270
      463     6271        /* Release the KV$STR for this stream
              6271                       */
      464     6272
      465     6273    2      KV@VDH_RLSBFR.BFR$ = PTR$;

   6273   0 0002AF  ECC7 000B                            LDB,B6   PTR$,AUTO
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:81   
          0 0002B1  EFC7 0005                            STB,B6   KV@VDH_RLSBFR+1,AUTO

      466     6274    2      PTR$ = PTR$->KV$STR.LNK$;

   6274   0 0002B3  DCC6 0002                            LDB,B5   2,B6
          0 0002B5  DFC7 000B                            STB,B5   PTR$,AUTO

      467     6275    2      KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_STR;

   6275   0 0002B7  6C16                                 LDV,R6   22
          0 0002B8  E7C7 000A                            STH,R6   KV@VDH_RLSBFR+6,AUTO

      468     6276    2      CALL RLSBFR ;

   6276   0 0002BA  E3C0 0269                            LNJ,B6   s:0,PREL
          0 0002BC       0001                            DC       s:6277,PREL

      469     6277    2      RETURN;

   6277   0 0002BD  ECC7 0016                            LDB,B6   KH@CLK+9,AUTO
          0 0002BF  C3C6 0001                            LNJ,B4   1,B6

      470     6278    2   END RLSSTR;
      471     6279        %EJECT;
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:82   
      472     6280    1   RLSMVD: PROC (Y$MVD);

   6280   0 0002C1  EFC7 0018            RLSMVD          STB,B6   KH@CLK+11,AUTO

      473     6281
      474     6282        %KV$MVD (NAME=Y$MVD, STCLASS=PARAM);
      475     6326
      476     6327        /* This subroutine decrements the USRCNT for the MVD and then                 */
      477     6328        /* will release it if it's count is 0                                            */
      478     6329
      479     6330    2      Y$MVD.USRCNT = Y$MVD.USRCNT -1;

   6330   0 0002C3  DCC7 001A                            LDB,B5   @Y$MVD,AUTO
          0 0002C5  88C5 0012                            DEC      18,B5
          0 0002C7  0F81 0003                            B        s:6334,PREL

      480     6331
      481     6332    2   RLSMVDNO_STR: ENTRY (Y$MVD);

   6332   0 0002C9  EFC7 0018            RLSMVDNO_STR    STB,B6   KH@CLK+11,AUTO

      482     6333
      483     6334    3      IF (Y$MVD.USRCNT = 0) /*  LAST USER */ THEN DO;

   6334   0 0002CB  ECC7 001A                            LDB,B6   @Y$MVD,AUTO
          0 0002CD  E846 0012                            LDR,R6   18,B6
          0 0002CF  6981 0095                            BNEZ,R6  s:6395,PREL

      484     6335
      485     6336        /* TELL USER ABOUT MVD                                                        */
      486     6337
      487     6338    3         CALL TLUSR(%KV_STRTYP_MVD) ;

   6338   0 0002D1  DBF0 000C                            LAB,B5   12,IMO
          0 0002D3  DFC7 0026                            STB,B5   @Y$MRD+4,AUTO
          0 0002D5  E3C0 021D                            LNJ,B6   s:0,PREL
          0 0002D7       0001                            DC       s:6341,PREL
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:83   

      488     6339
      489     6340        /* Release TAB buffer                                                         */
      490     6341    3         KV@VDH_RLSBFR.BFR$ = Y$MVD.INPTAB$;

   6341   0 0002D8  ECC7 001A                            LDB,B6   @Y$MVD,AUTO
          0 0002DA  DCC6 0004                            LDB,B5   4,B6
          0 0002DC  DFC7 0005                            STB,B5   KV@VDH_RLSBFR+1,AUTO

      491     6342    3         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_INPTAB;

   6342   0 0002DE  6C07                                 LDV,R6   7
          0 0002DF  E7C7 000A                            STH,R6   KV@VDH_RLSBFR+6,AUTO

      492     6343    3         CALL RLSBFR ;

   6343   0 0002E1  E3C0 0242                            LNJ,B6   s:0,PREL
          0 0002E3       0001                            DC       s:6347,PREL

      493     6344
      494     6345        /* Release INPFNCTBL                                                          */
      495     6346
      496     6347    3         KV@VDH_RLSBFR.BFR$ = Y$MVD.SSTINPFNCTBL$;

   6347   0 0002E4  ECC7 001A                            LDB,B6   @Y$MVD,AUTO
          0 0002E6  DCC6 000A                            LDB,B5   10,B6
          0 0002E8  DFC7 0005                            STB,B5   KV@VDH_RLSBFR+1,AUTO

      497     6348    3         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_SSTINPFNCTBL;

   6348   0 0002EA  6C15                                 LDV,R6   21
          0 0002EB  E7C7 000A                            STH,R6   KV@VDH_RLSBFR+6,AUTO

      498     6349    3         CALL RLSBFR ;

   6349   0 0002ED  E3C0 0236                            LNJ,B6   s:0,PREL
          0 0002EF       0001                            DC       s:6350,PREL
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:84   

      499     6350    3         KV@VDH_RLSBFR.BFR$ = Y$MVD.USRINPFNCTBL$;

   6350   0 0002F0  ECC7 001A                            LDB,B6   @Y$MVD,AUTO
          0 0002F2  DCC6 0008                            LDB,B5   8,B6
          0 0002F4  DFC7 0005                            STB,B5   KV@VDH_RLSBFR+1,AUTO

      500     6351    3         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_USRINPFNCTBL;

   6351   0 0002F6  6C1A                                 LDV,R6   26
          0 0002F7  E7C7 000A                            STH,R6   KV@VDH_RLSBFR+6,AUTO

      501     6352    3         CALL RLSBFR ;

   6352   0 0002F9  E3C0 022A                            LNJ,B6   s:0,PREL
          0 0002FB       0001                            DC       s:6355,PREL

      502     6353        /* Release DCBHDN                                                             */
      503     6354
      504     6355    3         KV@VDH_RLSBFR.BFR$ = Y$MVD.DCBHDN$;

   6355   0 0002FC  ECC7 001A                            LDB,B6   @Y$MVD,AUTO
          0 0002FE  DCC6 0006                            LDB,B5   6,B6
          0 000300  DFC7 0005                            STB,B5   KV@VDH_RLSBFR+1,AUTO

      505     6356    3         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_DCBHDN;

   6356   0 000302  6C03                                 LDV,R6   3
          0 000303  E7C7 000A                            STH,R6   KV@VDH_RLSBFR+6,AUTO

      506     6357    3         CALL RLSBFR ;

   6357   0 000305  E3C0 021E                            LNJ,B6   s:0,PREL
          0 000307       0001                            DC       s:6361,PREL

      507     6358
      508     6359
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:85   
      509     6360        /* Release VFU buffer                                                         */
      510     6361    3         KV@VDH_RLSBFR.BFR$ = Y$MVD.VFU$;

   6361   0 000308  ECC7 001A                            LDB,B6   @Y$MVD,AUTO
          0 00030A  DCC6 000C                            LDB,B5   12,B6
          0 00030C  DFC7 0005                            STB,B5   KV@VDH_RLSBFR+1,AUTO

      511     6362    3         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_VFU;

   6362   0 00030E  6C1E                                 LDV,R6   30
          0 00030F  E7C7 000A                            STH,R6   KV@VDH_RLSBFR+6,AUTO

      512     6363    3         CALL RLSBFR ;

   6363   0 000311  E3C0 0212                            LNJ,B6   s:0,PREL
          0 000313       0001                            DC       s:6366,PREL

      513     6364
      514     6365        /* Release KV$LINLST buffer                                                      */
      515     6366    3         IF Y$MVD.LINLST$~=ADDR(NIL)

   6366   0 000314  ECC7 001A                            LDB,B6   @Y$MVD,AUTO
          0 000316  8DC6 0010                            CMN      16,B6
          0 000318  0901 0006                            BE       s:6372,PREL

      516     6367    3         THEN CALL RLSFRM (Y$MVD);

   6367   0 00031A  EFC7 001E                            STB,B6   @Y$MVD+4,AUTO
          0 00031C  E3C0 004C                            LNJ,B6   s:0,PREL
          0 00031E       0001                            DC       s:6372,PREL

      517     6368
      518     6369        /* Remove MVD from chain off MRD. */
      519     6370
      520     6371        %EQU TMP$ = CHARTEXT('KV@VDH_RLSBFR.BFR$');
      521     6372    3         %TMP$ = Y$MVD.SRD$->KV$SRD.MRD$;

PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:86   
   6372   0 00031F  ECC7 001A                            LDB,B6   @Y$MVD,AUTO
          0 000321  DC86                                 LDB,B5   ,B6
          0 000322  CC85                                 LDB,B4   ,B5
          0 000323  CFC7 0005                            STB,B4   KV@VDH_RLSBFR+1,AUTO

      522     6373    3         IF %TMP$->KV$MRD.MVD$=ADDR(Y$MVD) THEN %TMP$->KV$MRD.MVD$ = Y$MVD.LNK$;

   6373   0 000325  DCC4 000D                            LDB,B5   13,B4
          0 000327  DDC7 001A                            CMB,B5   @Y$MVD,AUTO
          0 000329  0981 0007                            BNE      s:6375,PREL

   6373   0 00032B  BCC6 0002                            LDB,B3   2,B6
          0 00032D  BFC4 000D                            STB,B3   13,B4
          0 00032F  0F81 0018                            B        s:6386,PREL

      523     6374    4         ELSE DO;

      524     6375    4            %TMP$ = %TMP$->KV$MRD.MVD$;

   6375   0 000331  DFC7 0005                            STB,B5   KV@VDH_RLSBFR+1,AUTO

      525     6376    5            DO UNTIL %TMP$=ADDR(NIL);

      526     6377    5               IF %TMP$->KV$MVD.LNK$=ADDR(Y$MVD)

   6377   0 000333  ECC7 0005                            LDB,B6   KV@VDH_RLSBFR+1,AUTO
          0 000335  DCC6 0002                            LDB,B5   2,B6
          0 000337  DDC7 001A                            CMB,B5   @Y$MVD,AUTO
          0 000339  0981 0009                            BNE      s:6379,PREL

      527     6378    5               THEN %TMP$->KV$MVD.LNK$=Y$MVD.LNK$;

   6378   0 00033B  CCC7 001A                            LDB,B4   @Y$MVD,AUTO
          0 00033D  BCC4 0002                            LDB,B3   2,B4
          0 00033F  BFC6 0002                            STB,B3   2,B6
          0 000341  0F81 0003                            B        s:6380,PREL

PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:87   
      528     6379    5               ELSE %TMP$ = %TMP$->KV$MVD.LNK$;

   6379   0 000343  DFC7 0005                            STB,B5   KV@VDH_RLSBFR+1,AUTO

      529     6380    5            END;

   6380   0 000345  8DC7 0005                            CMN      KV@VDH_RLSBFR+1,AUTO
          0 000347  09EC                                 BNE      s:6377,SPREL

      530     6381    4         END;

      531     6382
      532     6383        /* This was the last user so we must release KV$MVD, but first
      533     6384           relinquish its interest in the KV$SRD pointed to by it.        */
      534     6385
      535     6386    3         IF Y$MVD.SRD$~=ADDR(NIL) THEN CALL RLSSRD (Y$MVD.SRD$->KV$SRD);

   6386   0 000348  ECC7 001A                            LDB,B6   @Y$MVD,AUTO
          0 00034A  8D86                                 CMN      ,B6
          0 00034B  0901 0007                            BE       s:6390,PREL

   6386   0 00034D  DC86                                 LDB,B5   ,B6
          0 00034E  DFC7 001E                            STB,B5   @Y$MVD+4,AUTO
          0 000350  E3C0 00C1                            LNJ,B6   s:0,PREL
          0 000352       0001                            DC       s:6390,PREL

      536     6387
      537     6388        /* Finally release the KV$MVD structure
              6388        */
      538     6389
      539     6390    3         KV@VDH_RLSBFR.BFR$ = ADDR(Y$MVD);

   6390   0 000353  ECC7 001A                            LDB,B6   @Y$MVD,AUTO
          0 000355  EFC7 0005                            STB,B6   KV@VDH_RLSBFR+1,AUTO

      540     6391    3         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_MVD;

PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:88   
   6391   0 000357  6C0C                                 LDV,R6   12
          0 000358  E7C7 000A                            STH,R6   KV@VDH_RLSBFR+6,AUTO

      541     6392    3         CALL RLSBFR ;

   6392   0 00035A  E3C0 01C9                            LNJ,B6   s:0,PREL
          0 00035C       0001                            DC       s:6393,PREL

      542     6393    3         KV$PTR.MVD$ = ADDR(NIL);

   6393   0 00035D  EB80 0000 0000                       LAB,B6   0
          0 000360  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          0 000363  EFC5 0006                            STB,B6   6,B5

      543     6394    3      END /* IF */;

      544     6395    2   END /* SUBROUTINE */;

   6395   0 000365  ECC7 0018                            LDB,B6   KH@CLK+11,AUTO
          0 000367  C3C6 0001                            LNJ,B4   1,B6

      545     6396
      546     6397        %EJECT;
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:89   
      547     6398    1   RLSFRM: PROC (Y$MVD);

   6398   0 000369  EFC7 001C            RLSFRM          STB,B6   @Y$MVD+2,AUTO

      548     6399
      549     6400        %KV$MVD (NAME=Y$MVD, STCLASS=PARAM);
      550     6444
      551     6445        %KV$LIN;
      552     6469        %KV$LINLST (STCLASS="BASED(Y@LST$)");
      553     6496        %EQU KV_LINLST = CHARTEXT('KV$LINLST');
      554     6497        %KV$FLDLST (STCLASS="BASED(KV@VDH_RLSBFR.BFR$)");
      555     6521        %KV$RCRLST (STCLASS="BASED(Y@LST$)");
      556     6557        %EQU KV_RCRLST = CHARTEXT('KV$RCRLST');
      557     6558        %KV$RCR (STCLASS="BASED(KV@VDH_RLSBFR.BFR$)");
      558     6588        %EQU KV_RCR = CHARTEXT('KV$RCR');
      559     6589    2   DCL Y@INDX SBIN AUTO;
      560     6590    2   DCL Y@LST$ PTR;
      561     6591
      562     6592    2      Y@LST$ = Y$MVD.LINLST$;

   6592   0 00036B  DCC7 001E                            LDB,B5   @Y$MVD,AUTO
          0 00036D  CCC5 0010                            LDB,B4   16,B5
          0 00036F  CFC7 0021                            STB,B4   Y@LST$,AUTO

      563     6593    3      DO CASE Y$MVD.ORG;

   6593   0 000371  B2C5 0015                            LLH,R3   21,B5
          0 000373  3D06                                 CMV,R3   6
          0 000374  0281 0080                            BGE      s:6625,PREL
          0 000376  A830 0000 037C  00                   LDR,R2   s:6593+11,R3
          0 000379  83A0 0000 0382  00                   JMP      s:6595,R2
          0 00037C       0073                            DC       s:6625,PREL
          0 00037D       0073                            DC       s:6625,PREL
          0 00037E       006B                            DC       s:6622,PREL
          0 00037F       0073                            DC       s:6625,PREL
          0 000380       0000                            DC       s:6595,PREL
          0 000381       0045                            DC       s:6613,PREL
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:90   

      564     6594    3      CASE %KV#VD_ORG_FORM;

      565     6595    3         Y@INDX = %KV_LINLST.LSTENTWRDX;

   6595   0 000382  E844 0001                            LDR,R6   1,B4
          0 000384  EF47 0020                            STR,R6   Y@INDX,AUTO

      566     6596    3         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_FLDLST;

   6596   0 000386  5C06                                 LDV,R5   6
          0 000387  D7C7 000A                            STH,R5   KV@VDH_RLSBFR+6,AUTO

      567     6597    3         IF NOT %KV_VDI.PHSDSC AND %KV_LINLST.FRMDSP

   6597   0 000389  BC80 0000 0000  xsym                 LDB,B3   KV$PTR$
          0 00038C  AC83                                 LDB,B2   ,B3
          0 00038D  82C2 0019                            LB,'0040'X        25,B2
          0 00038F       0040
          0 000390  0501 000C                            BBT      s:6603,PREL
          0 000392  82C4 0005                            LB,'0040'X        5,B4
          0 000394       0040
          0 000395  0581 0007                            BBF      s:6603,PREL

      568     6598        /*
      569     6599        Erase the screen if we didn't delete the fields yet.
      570     6600        */
      571     6601    3         THEN CALL KVO$ERSMRD;

   6601   0 000397  CBF0 0000                            LAB,B4   0,IMO
          0 000399  E380 0000 0000  xent                 LNJ,B6   KVO$ERSMRD
          0 00039C       0001                            DC       s:6603,PREL

      572     6602    4         DO UNTIL(Y@INDX < SIZEW(KV$LINLST));

      573     6603    4            KV@VDH_RLSBFR.BFR$ = PINCRW(Y@LST$, Y@INDX)->KV$LIN.FLDLST$;

PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:91   
   6603   0 00039D  ACC7 0021                            LDB,B2   Y@LST$,AUTO
          0 00039F  A847 0020                            LDR,R2   Y@INDX,AUTO
          0 0003A1  2001                                 SOL,R2   1
          0 0003A2  6C04                                 LDV,R6   4
          0 0003A3  BB87                                 LAB,B3   ,AUTO
          0 0003A4  3C0A                                 LDV,R3   10
          0 0003A5  0008                                 MMM

      574     6604    5            IF KV@VDH_RLSBFR.BFR$~=ADDR(NIL) THEN DO;

   6604   0 0003A6  8DC7 0005                            CMN      KV@VDH_RLSBFR+1,AUTO
          0 0003A8  0901 000B                            BE       s:6608,PREL

      575     6605    5               KV@VDH_RLSBFR.BYTSIZ = 2*(KV$FLDLST.LSTCELWRDX+1);

   6605   0 0003AA  ECC7 0005                            LDB,B6   KV@VDH_RLSBFR+1,AUTO
          0 0003AC  E806                                 LDR,R6   ,B6
          0 0003AD  6001                                 SOL,R6   1
          0 0003AE  6E02                                 ADV,R6   2
          0 0003AF  EF47 0007                            STR,R6   KV@VDH_RLSBFR+3,AUTO

      576     6606    5               CALL RLSBFR ;

   6606   0 0003B1  E3C0 0172                            LNJ,B6   s:0,PREL
          0 0003B3       0001                            DC       s:6608,PREL

      577     6607    5            END;                           /* IF                                 */

      578     6608    4            Y@INDX = Y@INDX - SIZEW(KV$LIN);

   6608   0 0003B4  E847 0020                            LDR,R6   Y@INDX,AUTO
          0 0003B6  6EFC                                 ADV,R6   -4
          0 0003B7  EF47 0020                            STR,R6   Y@INDX,AUTO

      579     6609    4         END;                              /* LOOP                               */

   6609   0 0003B9  6D08                                 CMV,R6   8
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:92   
          0 0003BA  08E3                                 BAGE     s:6603,SPREL

      580     6610    3         KV@VDH_RLSBFR.BYTSIZ = (%KV_LINLST.LSTCELWRDX+1)*2;

   6610   0 0003BB  ECC7 0021                            LDB,B6   Y@LST$,AUTO
          0 0003BD  D806                                 LDR,R5   ,B6
          0 0003BE  5001                                 SOL,R5   1
          0 0003BF  5E02                                 ADV,R5   2
          0 0003C0  DF47 0007                            STR,R5   KV@VDH_RLSBFR+3,AUTO

      581     6611    3         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_LINLST;

   6611   0 0003C2  4C09                                 LDV,R4   9
          0 0003C3  C7C7 000A                            STH,R4   KV@VDH_RLSBFR+6,AUTO
          0 0003C5  0F81 002F                            B        s:6625,PREL

      582     6612    3      CASE %KV#VD_ORG_SE;

      583     6613    3         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_RCR;

   6613   0 0003C7  6C23                                 LDV,R6   35
          0 0003C8  E7C7 000A                            STH,R6   KV@VDH_RLSBFR+6,AUTO

      584     6614    4         DO Y@INDX=0 TO %KV_RCRLST.RCRCNT-1;

   6614   0 0003CA  8747 0020                            CL       Y@INDX,AUTO
          0 0003CC  0F81 0011                            B        s:6618+2,PREL

      585     6615    4            KV@VDH_RLSBFR.BFR$ = %KV_RCRLST.RCR$(Y@INDX);

   6615   0 0003CE  ECC7 0021                            LDB,B6   Y@LST$,AUTO
          0 0003D0  B847 0020                            LDR,R3   Y@INDX,AUTO
          0 0003D2  3E08                                 ADV,R3   8
          0 0003D3  DCB6                                 LDB,B5   ,B6,R3
          0 0003D4  DFC7 0005                            STB,B5   KV@VDH_RLSBFR+1,AUTO

      586     6616    4            KV@VDH_RLSBFR.BYTSIZ = %KV_RCR.STRBYTSIZ;
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:93   

   6616   0 0003D6  E805                                 LDR,R6   ,B5
          0 0003D7  EF47 0007                            STR,R6   KV@VDH_RLSBFR+3,AUTO

      587     6617    4            CALL RLSBFR;

   6617   0 0003D9  E3C0 014A                            LNJ,B6   s:0,PREL
          0 0003DB       0001                            DC       s:6618,PREL

      588     6618    4         END;

   6618   0 0003DC  8AC7 0020                            INC      Y@INDX,AUTO
          0 0003DE  ECC7 0021                            LDB,B6   Y@LST$,AUTO
          0 0003E0  E847 0020                            LDR,R6   Y@INDX,AUTO
          0 0003E2  E946 0001                            CMR,R6   1,B6
          0 0003E4  086A                                 BAL      s:6615,SPREL

      589     6619    3         KV@VDH_RLSBFR.BYTSIZ = %KV_RCRLST.STRBYTSIZ;

   6619   0 0003E5  D806                                 LDR,R5   ,B6
          0 0003E6  DF47 0007                            STR,R5   KV@VDH_RLSBFR+3,AUTO

      590     6620    3         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_RCRLST;

   6620   0 0003E8  4C24                                 LDV,R4   36
          0 0003E9  C7C7 000A                            STH,R4   KV@VDH_RLSBFR+6,AUTO
          0 0003EB  0F81 0009                            B        s:6625,PREL

      591     6621    3      CASE %KV#VD_ORG_X364;

      592     6622    3         Y$MVD.SRD$->KV$SRD.FLDEND = '0'B;

   6622   0 0003ED  BC85                                 LDB,B3   ,B5
          0 0003EE  8743 0010                            CL       16,B3
          0 0003F0  8743 0011                            CL       17,B3

      593     6623    3         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_X364;
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:94   

   6623   0 0003F2  6C22                                 LDV,R6   34
          0 0003F3  E7C7 000A                            STH,R6   KV@VDH_RLSBFR+6,AUTO

      594     6624    3      END; /* END DO CASE .ORG */

      595     6625    2      KV@VDH_RLSBFR.BFR$ = ADDR(%KV_LINLST);

   6625   0 0003F5  ECC7 0021                            LDB,B6   Y@LST$,AUTO
          0 0003F7  EFC7 0005                            STB,B6   KV@VDH_RLSBFR+1,AUTO

      596     6626    2      CALL RLSBFR ;

   6626   0 0003F9  E3C0 012A                            LNJ,B6   s:0,PREL
          0 0003FB       0001                            DC       s:6627,PREL

      597     6627    2      KV$PTR.LINLST$ = ADDR(NIL);

   6627   0 0003FC  EB80 0000 0000                       LAB,B6   0
          0 0003FF  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          0 000402  EFC5 000E                            STB,B6   14,B5

      598     6628    2      Y$MVD.LINLST$ = KV$PTR.LINLST$;

   6628   0 000404  CCC7 001E                            LDB,B4   @Y$MVD,AUTO
          0 000406  EFC4 0010                            STB,B6   16,B4

      599     6629    2      Y$MVD.ORG = %KV#VD_ORG_UR;

   6629   0 000408  6C01                                 LDV,R6   1
          0 000409  E7C4 0015                            STH,R6   21,B4

      600     6630    2      Y$MVD.RCRWRAP = '0'B;

   6630   0 00040B  8844 001F                            LBF,'0080'X       31,B4
   6630   0 00040D       0080

PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:95   
      601     6631    2   END; /* SUBROUTINE */

   6631   0 00040E  ECC7 001C                            LDB,B6   @Y$MVD+2,AUTO
          0 000410  C3C6 0001                            LNJ,B4   1,B6

      602     6632        %EJECT;
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:96   
      603     6633    1   RLSSRD: PROC (Y$SRD);

   6633   0 000412  EFC7 001C            RLSSRD          STB,B6   @Y$MVD+2,AUTO

      604     6634
      605     6635        %KV$SRD (NAME=Y$SRD, STCLASS=PARAM);
      606     6910        /* Decrement USRCNT for KV$SRD and if 0 release it.
              6910        */
      607     6911
      608     6912    2      Y$SRD.USRCNT = Y$SRD.USRCNT-1;

   6912   0 000414  DCC7 001E                            LDB,B5   @Y$SRD,AUTO
          0 000416  88C5 0006                            DEC      6,B5

      609     6913
      610     6914        /* IF NON ZERO RETURN                                                         */
      611     6915
      612     6916    3      IF Y$SRD.USRCNT=0 THEN DO;

   6916   0 000418  E845 0006                            LDR,R6   6,B5
          0 00041A  6981 007A                            BNEZ,R6  s:6957,PREL

      613     6917
      614     6918        /* TELL USER ABOUT SRD                                                        */
      615     6919
      616     6920    3         CALL TLUSR(%KV_STRTYP_SRD) ;

   6920   0 00041C  EBF0 0012                            LAB,B6   18,IMO
          0 00041E  EFC7 0026                            STB,B6   @Y$MRD+4,AUTO
          0 000420  E3C0 00D2                            LNJ,B6   s:0,PREL
          0 000422       0001                            DC       s:6924,PREL

      617     6921
      618     6922        /* We must release the KV$SRD                                                 */
      619     6923
      620     6924    4         IF Y$SRD.MRD$~=ADDR(NIL) THEN DO;

PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:97   
   6924   0 000423  ECC7 001E                            LDB,B6   @Y$SRD,AUTO
          0 000425  8D86                                 CMN      ,B6
          0 000426  0901 004E                            BE       s:6944,PREL

      621     6925
      622     6926    4            IF Y$SRD.MRD$->KV$MRD.USRCNT>1 AND (%KV_SSN.STR$~=ADDR(NIL)

   6926   0 000428  DC86                                 LDB,B5   ,B6
          0 000429  E845 000A                            LDR,R6   10,B5
          0 00042B  E570 00FF                            AND,R6   255,IMO
          0 00042D  6D01                                 CMV,R6   1
          0 00042E  0381 0017                            BLE      s:6932,PREL
          0 000430  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          0 000433  BCC4 0002                            LDB,B3   2,B4
          0 000435  8DC3 0004                            CMN      4,B3
          0 000437  0981 0008                            BNE      s:6928,PREL
          0 000439  AC84                                 LDB,B2   ,B4
          0 00043A  9CC2 0004                            LDB,B1   4,B2
          0 00043C  8DC1 0002                            CMN      2,B1
          0 00043E  0901 0007                            BE       s:6932,PREL

      623     6927    4              OR %KV_VDI.SSN$->KV$SSN.LNK$~=ADDR(NIL))
      624     6928    4            THEN CALL KVC$RLSWND;

   6928   0 000440  CBF0 0000                            LAB,B4   0,IMO
          0 000442  E380 0000 0000  xent                 LNJ,B6   KVC$RLSWND
          0 000445       0001                            DC       s:6932,PREL

      625     6929
      626     6930        /* Remove SRD from chain off MRD. */
      627     6931
      628     6932    4            %TMP$ = Y$SRD.MRD$->KV$MRD.SRD$;

   6932   0 000446  ECC7 001E                            LDB,B6   @Y$SRD,AUTO
          0 000448  DC86                                 LDB,B5   ,B6
          0 000449  CCC5 0002                            LDB,B4   2,B5
          0 00044B  CFC7 0005                            STB,B4   KV@VDH_RLSBFR+1,AUTO
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:98   

      629     6933    4            IF %TMP$=ADDR(Y$SRD) THEN Y$SRD.MRD$->KV$MRD.SRD$ = Y$SRD.LNK$;

   6933   0 00044D  CDC7 001E                            CMB,B4   @Y$SRD,AUTO
          0 00044F  0981 0008                            BNE      s:6935,PREL

   6933   0 000451  DC86                                 LDB,B5   ,B6
          0 000452  BCC6 0002                            LDB,B3   2,B6
          0 000454  BFC5 0002                            STB,B3   2,B5
          0 000456  0F81 0016                            B        s:6939,PREL

      630     6934    5            ELSE DO UNTIL %TMP$=ADDR(NIL);

      631     6935    5               IF %TMP$->KV$SRD.LNK$=ADDR(Y$SRD)

   6935   0 000458  ECC7 0005                            LDB,B6   KV@VDH_RLSBFR+1,AUTO
          0 00045A  DCC6 0002                            LDB,B5   2,B6
          0 00045C  DDC7 001E                            CMB,B5   @Y$SRD,AUTO
          0 00045E  0981 0009                            BNE      s:6937,PREL

      632     6936    5               THEN %TMP$->KV$SRD.LNK$=Y$SRD.LNK$;

   6936   0 000460  CCC7 001E                            LDB,B4   @Y$SRD,AUTO
          0 000462  BCC4 0002                            LDB,B3   2,B4
          0 000464  BFC6 0002                            STB,B3   2,B6
          0 000466  0F81 0003                            B        s:6938,PREL

      633     6937    5               ELSE %TMP$ = %TMP$->KV$SRD.LNK$;

   6937   0 000468  DFC7 0005                            STB,B5   KV@VDH_RLSBFR+1,AUTO

      634     6938    5            END;

   6938   0 00046A  8DC7 0005                            CMN      KV@VDH_RLSBFR+1,AUTO
          0 00046C  09EC                                 BNE      s:6935,SPREL

      635     6939    4            CALL RLSMRD (Y$SRD.MRD$->KV$MRD);
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:99   

   6939   0 00046D  ECC7 001E                            LDB,B6   @Y$SRD,AUTO
          0 00046F  DC86                                 LDB,B5   ,B6
          0 000470  DFC7 0022                            STB,B5   Y@LST$+1,AUTO
          0 000472  E3C0 002B                            LNJ,B6   s:0,PREL
          0 000474       0001                            DC       s:6944,PREL

      636     6940    4         END;

      637     6941
      638     6942        /* Release Entsrdchr */
      639     6943
      640     6944    3         KV@VDH_RLSBFR.BFR$ = Y$SRD.ENTSRDCHR$;

   6944   0 000475  ECC7 001E                            LDB,B6   @Y$SRD,AUTO
          0 000477  DCC6 0004                            LDB,B5   4,B6
          0 000479  DFC7 0005                            STB,B5   KV@VDH_RLSBFR+1,AUTO

      641     6945    3         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_ENTSRD;

   6945   0 00047B  6C20                                 LDV,R6   32
          0 00047C  E7C7 000A                            STH,R6   KV@VDH_RLSBFR+6,AUTO

      642     6946    3         CALL RLSBFR;

   6946   0 00047E  E3C0 00A5                            LNJ,B6   s:0,PREL
          0 000480       0001                            DC       s:6950,PREL

      643     6947
      644     6948        /* Release KV$SRD                                                                */
      645     6949
      646     6950    3         KV@VDH_RLSBFR.BFR$ = ADDR(Y$SRD);

   6950   0 000481  ECC7 001E                            LDB,B6   @Y$SRD,AUTO
          0 000483  EFC7 0005                            STB,B6   KV@VDH_RLSBFR+1,AUTO

      647     6951    3         KV$PTR.SRD$ = ADDR(NIL);
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:100  

   6951   0 000485  DB80 0000 0000                       LAB,B5   0
          0 000488  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          0 00048B  DFC4 000A                            STB,B5   10,B4

      648     6952    3         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_SRD;

   6952   0 00048D  6C12                                 LDV,R6   18
          0 00048E  E7C7 000A                            STH,R6   KV@VDH_RLSBFR+6,AUTO

      649     6953    3         CALL RLSBFR ;

   6953   0 000490  E3C0 0093                            LNJ,B6   s:0,PREL
          0 000492       0001                            DC       s:6954,PREL

      650     6954    3      END;

   6954   0 000493  0F81 0006                            B        s:6960,PREL

      651     6955    3      ELSE DO;

      652     6956        /* Must be releasing a hard_copy forms MVD, put MINLNG and MINWDT bakc to 0 */
      653     6957    3         Y$SRD.MINLNG=0;

   6957   0 000495  8845 001E                            LBF,'00FF'X       30,B5
   6957   0 000497       00FF

      654     6958    3         Y$SRD.MINWDT=0;

   6958   0 000498  87C5 001E                            CLH      30,B5

      655     6959    3      END;

      656     6960    2      RETURN;

   6960   0 00049A  ECC7 001C                            LDB,B6   @Y$MVD+2,AUTO
          0 00049C  C3C6 0001                            LNJ,B4   1,B6
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:101  

      657     6961    2   END /* SUBROUTINE */;
      658     6962        %EJECT;
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:102  
      659     6963    1   RLSMRD: PROC (Y$MRD);

   6963   0 00049E  EFC7 0020            RLSMRD          STB,B6   Y@INDX,AUTO

      660     6964
      661     6965        %KV$MRD (NAME=Y$MRD, STCLASS=PARAM);
      662     7012
      663     7013        /* Decrement USRCNT for KV$MRD and if 0 release it.
              7013         */
      664     7014
      665     7015    2      Y$MRD.USRCNT = Y$MRD.USRCNT-1;

   7015   0 0004A0  DCC7 0022                            LDB,B5   @Y$MRD,AUTO
          0 0004A2  E845 000A                            LDR,R6   10,B5
          0 0004A4  EA70 00FF                            ADD,R6   255,IMO
          0 0004A6  EAC5 000A                            SRM,R6,'00FF'X    10,B5
          0 0004A8       00FF

      666     7016
      667     7017        /* IF NON ZERO RETURN                                                         */
      668     7018
      669     7019    3      IF Y$MRD.USRCNT=0 THEN DO;

   7019   0 0004A9  82C5 000A                            LB,'00FF'X        10,B5
   7019   0 0004AB       00FF
          0 0004AC  0501 0042                            BBT      s:7056,PREL

      670     7020
      671     7021        /* TELL USER ABOUT MRD                                                        */
      672     7022
      673     7023    3         CALL TLUSR(%KV_STRTYP_MRD) ;

   7023   0 0004AE  EBF0 000A                            LAB,B6   10,IMO
          0 0004B0  EFC7 0026                            STB,B6   @Y$MRD+4,AUTO
          0 0004B2  E3C0 0040                            LNJ,B6   s:0,PREL
          0 0004B4       0001                            DC       s:7027,PREL

PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:103  
      674     7024
      675     7025        /* We must release the KV$MRD                                                 */
      676     7026
      677     7027    4         IF (Y$MRD.ERD$ ~= ADDR(NIL)) THEN DO;

   7027   0 0004B5  ECC7 0022                            LDB,B6   @Y$MRD,AUTO
          0 0004B7  8DC6 0008                            CMN      8,B6
          0 0004B9  0901 000B                            BE       s:7039,PREL

      678     7028
      679     7029        /* VDH is releasing a KV$MRD, and its pointer to the KV$ERD structure         */
      680     7030        /* indicates we need to release it.                                           */
      681     7031
      682     7032    4            KV@VDH_RLSBFR.BFR$ = Y$MRD.ERD$;

   7032   0 0004BB  DCC6 0008                            LDB,B5   8,B6
          0 0004BD  DFC7 0005                            STB,B5   KV@VDH_RLSBFR+1,AUTO

      683     7033    4            KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_ERD;

   7033   0 0004BF  6C1F                                 LDV,R6   31
          0 0004C0  E7C7 000A                            STH,R6   KV@VDH_RLSBFR+6,AUTO

      684     7034    4            CALL RLSBFR ;

   7034   0 0004C2  E3C0 0061                            LNJ,B6   s:0,PREL
          0 0004C4       0001                            DC       s:7039,PREL

      685     7035    4         END /* IF */;

      686     7036
      687     7037        /* Release TRMTAB                                                             */
      688     7038
      689     7039    3         KV@VDH_RLSBFR.BFR$ = Y$MRD.TRMTAB$;

   7039   0 0004C5  ECC7 0022                            LDB,B6   @Y$MRD,AUTO
          0 0004C7  DCC6 0004                            LDB,B5   4,B6
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:104  
          0 0004C9  DFC7 0005                            STB,B5   KV@VDH_RLSBFR+1,AUTO

      690     7040    3         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_TRMTAB;

   7040   0 0004CB  6C17                                 LDV,R6   23
          0 0004CC  E7C7 000A                            STH,R6   KV@VDH_RLSBFR+6,AUTO

      691     7041    3         CALL RLSBFR ;

   7041   0 0004CE  E3C0 0055                            LNJ,B6   s:0,PREL
          0 0004D0       0001                            DC       s:7045,PREL

      692     7042
      693     7043        /* Release PROFILE FUNCTIONS                                                  */
      694     7044
      695     7045    3         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_USRINPFNCTBL;

   7045   0 0004D1  6C1A                                 LDV,R6   26
          0 0004D2  E7C7 000A                            STH,R6   KV@VDH_RLSBFR+6,AUTO

      696     7046    3         KV@VDH_RLSBFR.BFR$ = Y$MRD.PRFINPFNCTBL$;

   7046   0 0004D4  ECC7 0022                            LDB,B6   @Y$MRD,AUTO
          0 0004D6  DCC6 0006                            LDB,B5   6,B6
          0 0004D8  DFC7 0005                            STB,B5   KV@VDH_RLSBFR+1,AUTO

      697     7047    3         CALL RLSBFR;

   7047   0 0004DA  E3C0 0049                            LNJ,B6   s:0,PREL
          0 0004DC       0001                            DC       s:7051,PREL

      698     7048
      699     7049        /* Release KV$MRD                                                                */
      700     7050
      701     7051    3         KV@VDH_RLSBFR.BFR$ = ADDR(Y$MRD);

   7051   0 0004DD  ECC7 0022                            LDB,B6   @Y$MRD,AUTO
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:105  
          0 0004DF  EFC7 0005                            STB,B6   KV@VDH_RLSBFR+1,AUTO

      702     7052    3         KV$PTR.MRD$ = ADDR(NIL);

   7052   0 0004E1  DB80 0000 0000                       LAB,B5   0
          0 0004E4  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          0 0004E7  DFC4 0008                            STB,B5   8,B4

      703     7053    3         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_MRD;

   7053   0 0004E9  6C0A                                 LDV,R6   10
          0 0004EA  E7C7 000A                            STH,R6   KV@VDH_RLSBFR+6,AUTO

      704     7054    3         CALL RLSBFR ;

   7054   0 0004EC  E3C0 0037                            LNJ,B6   s:0,PREL
          0 0004EE       0001                            DC       s:7056,PREL

      705     7055    3      END /* IF */;

      706     7056    2   END /* SUBROUTINE */;

   7056   0 0004EF  ECC7 0020                            LDB,B6   Y@INDX,AUTO
          0 0004F1  C3C6 0001                            LNJ,B4   1,B6

      707     7057
      708     7058        %EJECT;
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:106  
      709     7059    1   TLUSR: PROC(STRTYP);

   7059   0 0004F3  EFC7 0024            TLUSR           STB,B6   @Y$MRD+2,AUTO

      710     7060        /* Reports strrls event to user                                               */
      711     7061
      712     7062
      713     7063        %KV$USR_EVT(NAME = KV@USR_EVT, STCLASS = AUTO);
      714     7098        %KV$USR_EVT(NAME = KV_USR_EVT, STCLASS = SYMREF READONLY);
      715     7133    2   DCL KVV$CALUSR_EVT ENTRY(1) ALTRET;
      716     7134
      717     7135    2   DCL STRTYP UBIN ALIGNED;
      718     7136
      719     7137        /* CHECK TO SEE IF USER WANTS EVENT FOR PARTICULAR STRUCTURE                  */
      720     7138
      721     7139    3      IF %KV_USRPRM.STREVTENB(STRTYP) THEN DO;

   7139   0 0004F5  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          0 0004F8  CC85                                 LDB,B4   ,B5
          0 0004F9  BCC4 0008                            LDB,B3   8,B4
          0 0004FB  ACC7 0026                            LDB,B2   @STRTYP,AUTO
          0 0004FD  B802                                 LDR,R3   ,B2
          0 0004FE  9BC3 002B                            LAB,B1   43,B3
          0 000500  82B1                                 LB       ,B1,R3
          0 000501  0581 001E                            BBF      s:7172,PREL

      722     7140
      723     7141        /* WE MUST TELL THE USER                                                      */
      724     7142
      725     7143              %KV$CALUSR_EVT (EVT_ID=%KV_USR_EVT_ID_RLSSTR, PRM=STRTYP);
              7155        /* !C! */
              7156    4           IF KV$PTR.VDI$->KV$VDI.USREVTENB (11) THEN DO;

   7156   0 000503  82C4 001F                            LB,'1000'X        31,B4
   7156   0 000505       1000
          0 000506  0581 0019                            BBF      s:7172,PREL

PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:107  
              7158    4              KV@USR_EVT = KV_USR_EVT;

   7158   0 000508  8C80 0000 0000  xsym                 LDI      KV_USR_EVT
          0 00050B  8D47 0028                            SDI      KV@USR_EVT,AUTO

              7159    4              KV@USR_EVT.ID = 11;

   7159   0 00050D  5C0B                                 LDV,R5   11
          0 00050E  DAC7 0028                            SRM,R5,'007F'X    KV@USR_EVT,AUTO
          0 000510       007F

              7160    4              KV@USR_EVT.PRM = STRTYP;

   7160   0 000511  C802                                 LDR,R4   ,B2
          0 000512  CF47 0029                            STR,R4   KV@USR_EVT+1,AUTO

              7161    4              CALL KVV$CALUSR_EVT (KV@USR_EVT);

   7161   0 000514  CBC7 0028                            LAB,B4   KV@USR_EVT,AUTO
          0 000516  CFC7 002A                            STB,B4   KV@USR_EVT+2,AUTO
          0 000518  BBC7 002A                            LAB,B3   KV@USR_EVT+2,AUTO
          0 00051A  CBF0 0100                            LAB,B4   256,IMO
          0 00051C  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR_EVT
          0 00051F       0001                            DC       s:7172,PREL

              7166    4              END;

              7168        /* ! ! */
      726     7170
      727     7171    3      END /* IF */;

      728     7172    2      RETURN;

   7172   0 000520  ECC7 0024                            LDB,B6   @Y$MRD+2,AUTO
          0 000522  C3C6 0001                            LNJ,B4   1,B6

      729     7173    2   END /* SUBROUTINE */;
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:108  
      730     7174        %EJECT;
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:109  
      731     7175    1   RLSBFR: PROC;

   7175   0 000524  EFC7 0024            RLSBFR          STB,B6   @Y$MRD+2,AUTO

      732     7176        /* Just calls KVS$RLSBFR, to save 9 wrd per call (~30 of them) */
      733     7177
      734     7178    2      CALL KVS$RLSBFR (KV@VDH_RLSBFR);

   7178   0 000526  DBC7 0004                            LAB,B5   KV@VDH_RLSBFR,AUTO
          0 000528  DFC7 002A                            STB,B5   KV@USR_EVT+2,AUTO
          0 00052A  BBC7 002A                            LAB,B3   KV@USR_EVT+2,AUTO
          0 00052C  CBF0 0100                            LAB,B4   256,IMO
          0 00052E  E380 0000 0000  xent                 LNJ,B6   KVS$RLSBFR
          0 000531       0001                            DC       s:7179,PREL

      735     7179    2      KV@VDH_RLSBFR.BYTSIZ = 0;

   7179   0 000532  8747 0007                            CL       KV@VDH_RLSBFR+3,AUTO

      736     7180    2      RETURN;

   7180   0 000534  ECC7 0024                            LDB,B6   @Y$MRD+2,AUTO
          0 000536  C3C6 0001                            LNJ,B4   1,B6

      737     7181    2   END /* SUBROUTINE */;
      738     7182        %EJECT;
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:110  
      739     7183    1   KVC$RLSVDI: ENTRY;

   7183   0 000538  D380 0000 0000  xent KVC$RLSVDI      LNJ,B5   X6A_AUTO_0
          0 00053B       002C 0000                       DC       44,0

      740     7184        /*F* NAME: KVC$RLSVDI.
      741     7185             PURPOSE: Release KV$s the final pieces of VDH context (VDI and PTR).
      742     7186        */
      743     7187    1      KV@VDH_RLSBFR = KV_VDH_RLSBFR;

   7187   0 00053D  AB80 0000 0000  xsym                 LAB,B2   KV_VDH_RLSBFR
          0 000540  2C00                                 LDV,R2   0
          0 000541  6C0E                                 LDV,R6   14
          0 000542  BB87                                 LAB,B3   ,AUTO
          0 000543  3C08                                 LDV,R3   8
          0 000544  0008                                 MMM

      744     7188
      745     7189        /* Release KV$TRCBFR. */
      746     7190
      747     7191    2      IF (%KV_VDI.TRCBFR$ ~= ADDR(NIL)) THEN DO;

   7191   0 000545  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 000548  DC86                                 LDB,B5   ,B6
          0 000549  8DC5 0012                            CMN      18,B5
          0 00054B  0901 0017                            BE       s:7200,PREL

      748     7192    2         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_TRCBFR;

   7192   0 00054D  6C21                                 LDV,R6   33
          0 00054E  E7C7 000A                            STH,R6   KV@VDH_RLSBFR+6,AUTO

      749     7193    2         KV@VDH_RLSBFR.BFR$ = %KV_VDI.TRCBFR$;

   7193   0 000550  DC86                                 LDB,B5   ,B6
          0 000551  CCC5 0012                            LDB,B4   18,B5
          0 000553  CFC7 0005                            STB,B4   KV@VDH_RLSBFR+1,AUTO
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:111  

      750     7194    2         KV@VDH_RLSBFR.BYTSIZ = %KV_VDI.TRCBFRBYTSIZ;

   7194   0 000555  DC86                                 LDB,B5   ,B6
          0 000556  D845 0014                            LDR,R5   20,B5
          0 000558  DF47 0007                            STR,R5   KV@VDH_RLSBFR+3,AUTO

      751     7195    2         %KV_VDI.TRCBFR$ = ADDR(NIL);

   7195   0 00055A  DC86                                 LDB,B5   ,B6
          0 00055B  AB80 0000 0000                       LAB,B2   0
          0 00055E  AFC5 0012                            STB,B2   18,B5

      752     7196    2         CALL RLSBFR ;

   7196   0 000560  E3C0 FFC3                            LNJ,B6   s:0,PREL
          0 000562       0001                            DC       s:7200,PREL

      753     7197    2      END /* IF */;

      754     7198        /* Release saved edit window. */
      755     7199
      756     7200    2      IF (%KV_VDI.EDTWND$ ~= ADDR(NIL)) THEN DO;

   7200   0 000563  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 000566  DC86                                 LDB,B5   ,B6
          0 000567  8DC5 0010                            CMN      16,B5
          0 000569  0901 000F                            BE       s:7209,PREL

      757     7201    2         KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_REDBFR;

   7201   0 00056B  6C11                                 LDV,R6   17
          0 00056C  E7C7 000A                            STH,R6   KV@VDH_RLSBFR+6,AUTO

      758     7202    2         KV@VDH_RLSBFR.BFR$ = %KV_VDI.EDTWND$;

   7202   0 00056E  DC86                                 LDB,B5   ,B6
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:112  
          0 00056F  CCC5 0010                            LDB,B4   16,B5
          0 000571  CFC7 0005                            STB,B4   KV@VDH_RLSBFR+1,AUTO

      759     7203    2         KV@VDH_RLSBFR.BYTSIZ = KV$EDTWND.STRBYTSIZ;

   7203   0 000573  D804                                 LDR,R5   ,B4
          0 000574  DF47 0007                            STR,R5   KV@VDH_RLSBFR+3,AUTO

      760     7204    2         CALL RLSBFR ;

   7204   0 000576  E3C0 FFAD                            LNJ,B6   s:0,PREL
          0 000578       0001                            DC       s:7209,PREL

      761     7205    2      END /* IF */;

      762     7206
      763     7207        /* Tell user about release of  KV$VDI
              7207         */
      764     7208
      765     7209    1      CALL TLUSR(%KV_STRTYP_VDI) ;

   7209   0 000579  EBF0 001D                            LAB,B6   29,IMO
          0 00057B  EFC7 0026                            STB,B6   @Y$MRD+4,AUTO
          0 00057D  E3C0 FF75                            LNJ,B6   s:0,PREL
          0 00057F       0001                            DC       s:7212,PREL

      766     7210
      767     7211        /* Release KV$VDI                                                                */
      768     7212    1      KV@VDH_RLSBFR.STT$ = %KV_USRPRM.STT$;

   7212   0 000580  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 000583  DC86                                 LDB,B5   ,B6
          0 000584  CCC5 0008                            LDB,B4   8,B5
          0 000586  BCC4 0033                            LDB,B3   51,B4
          0 000588  BFC7 0008                            STB,B3   KV@VDH_RLSBFR+4,AUTO

      769     7213    1      KV@VDH_RLSBFR.BFR$ = KV$PTR.VDI$;
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:113  

   7213   0 00058A  DC86                                 LDB,B5   ,B6
          0 00058B  DFC7 0005                            STB,B5   KV@VDH_RLSBFR+1,AUTO

      770     7214    1      KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_VDI;

   7214   0 00058D  6C1D                                 LDV,R6   29
          0 00058E  E7C7 000A                            STH,R6   KV@VDH_RLSBFR+6,AUTO

      771     7215    1      CALL RLSBFR ;

   7215   0 000590  E3C0 FF93                            LNJ,B6   s:0,PREL
          0 000592       0001                            DC       s:7219,PREL

      772     7216
      773     7217        /* Release asynchronous input KV$PTR.
              7217             */
      774     7218
      775     7219    1      KV@VDH_RLSBFR.BFR$ = KV$PTR$;

   7219   0 000593  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 000596  EFC7 0005                            STB,B6   KV@VDH_RLSBFR+1,AUTO

      776     7220    1      KV$PTR$ = ADDR(NIL);

   7220   0 000598  DB80 0000 0000                       LAB,B5   0
          0 00059B  DF80 0000 0000  xsym                 STB,B5   KV$PTR$

      777     7221    1      KV@VDH_RLSBFR.STRTYP = %KV_STRTYP_PTR;

   7221   0 00059E  6C10                                 LDV,R6   16
          0 00059F  E7C7 000A                            STH,R6   KV@VDH_RLSBFR+6,AUTO

      778     7222    1      CALL RLSBFR ;

   7222   0 0005A1  E3C0 FF82                            LNJ,B6   s:0,PREL
          0 0005A3       0001                            DC       s:7224,PREL
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:114  

      779     7223
      780     7224    1      RETURN;

   7224   0 0005A4  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      781     7225    1   END KVC$RLSSSN;

PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:115  
--  Include file information  --

   K_ID_E.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KV_INT_M.:E05TOU  is referenced.
   KH_CLKFNC_E.:E05TOU  is referenced.
   KH$CLK.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is referenced.
   KV$SND.:E05TOU  was found in the system file and is referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KVC$RLSSSN.
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:116  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

    26-0-0/w PTR         r     1 @STRTYP                   22-0-0/w PTR         r     1 @Y$MRD
    1A-0-0/w PTR         r     1 @Y$MVD                    1E-0-0/w PTR         r     1 @Y$MVD
    1E-0-0/w PTR         r     1 @Y$SRD                     D-0-0/w STRC(128)   r     1 KH@CLK
    28-0-0/w STRC(32)    r     1 KV@USR_EVT                 4-0-0/w STRC(112)   r     1 KV@VDH_RLSBFR
     B-0-0/w PTR         r     1 PTR$                      *0-0-0/w UBIN(16)    r     1 STRTYP
    *0-0-0/w STRC(512)   r     1 Y$MRD                     *0-0-0/w STRC(512)   r     1 Y$MVD
    *0-0-0/w STRC(512)   r     1 Y$MVD                     *0-0-0/w STRC(496)   r     1 Y$SRD
    20-0-0/w SBIN(16)    r     1 Y@INDX                    21-0-0/w PTR         r     1 Y@LST$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 KV$PTR$                    0-0-0/w STRC(128)   r     1 KV_CLK_CANCEL
     0-0-0/w STRC(240)   r     1 KV_SND_CMPDSCSSN           0-0-0/w UBIN(16)    r     1 KV_SSNCNT
     0-0-0/w STRC(32)    r     1 KV_USR_EVT                 0-0-0/w STRC(112)   r     1 KV_VDH_RLSBFR

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(32)    r     1 KV$EDTWND                  0-0-0/w STRC(48)    r     1 KV$FLDLST
     0-0-0/w STRC(128)   r     1 KV$GETPRM                  0-0-0/w STRC(64)    r     1 KV$LIN
     0-0-0/w STRC(128)   r     1 KV$LINLST                  0-0-0/w STRC(512)   r     1 KV$MRD
     0-0-0/w STRC(512)   r     1 KV$MVD                     0-0-0/w STRC(480)   r     1 KV$PTR
     0-0-0/w STRC(56)    r     1 KV$RCR                     0-0-0/w STRC(288)   r     1 KV$RCRLST
     0-0-0/w STRC(496)   r     1 KV$SRD                     0-0-0/w STRC(1024)  r     1 KV$SSN
     0-0-0/w STRC(512)   r     1 KV$STR                     0-0-0/w STRC(48)    r     1 KV$TYPAHDBFR
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:117  
     0-0-0/w STRC(912)   r     1 KV$USRPRM                  0-0-0/w STRC(512)   r     1 KV$VDI


   Procedure KVC$RLSSSN requires 1447 words for executable code.
   Procedure KVC$RLSSSN requires 44 words of local(AUTO) storage.

    No errors detected in file KVC$DSC.:E05TSI    .
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:118  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:119  
          MINI XREF LISTING

KH@CLK
      5875**DCL      6044<<ASSIGN   6048<>CALL
KH@CLK.UID
      5891**DCL      5892--REDEF    5893--REDEF
KH@CLK.UID$
      5892**DCL      6045<<ASSIGN   6047>>IF
KH@CLK.UVAL
      5898**DCL      6046>>DOWHILE  6047>>IF       6049<<ASSIGN   6049>>ASSIGN
KHC$CLOCK
      4355**DCL-ENT  6048--CALL
KV$EDTWND.STRBYTSIZ
      4660**DCL      7203>>ASSIGN
KV$FLDLST.LSTCELWRDX IN PROCEDURE RLSFRM
      6518**DCL      6605>>ASSIGN
KV$GETPRM.DAT__.ADR$
      4700**DCL      6071>>ASSIGN
KV$GETPRM.DAT__.BFRBYTSIZ
      4701**DCL      6072>>ASSIGN
KV$GETPRM.LNK$
      4676**DCL      6074>>ASSIGN
KV$LIN IN PROCEDURE RLSFRM
      6466**DCL      6608--ASSIGN
KV$LIN.FLDLST$ IN PROCEDURE RLSFRM
      6466**DCL      6603>>ASSIGN
KV$LINLST IN PROCEDURE RLSFRM
      6490**DCL      6602--DOUNTIL  6625--ASSIGN
KV$LINLST.FRMDSP IN PROCEDURE RLSFRM
      6492**DCL      6597>>IF
KV$LINLST.LSTCELWRDX IN PROCEDURE RLSFRM
      6490**DCL      6610>>ASSIGN
KV$LINLST.LSTENTWRDX IN PROCEDURE RLSFRM
      6490**DCL      6595>>ASSIGN
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:120  
KV$MRD
      4726**DCL      6939<>CALL
KV$MRD.MVD$
      4730**DCL      6221>>ASSIGN   6373>>IF       6373<<ASSIGN   6375>>ASSIGN
KV$MRD.SRD$
      4726**DCL      6932>>ASSIGN   6933<<ASSIGN
KV$MRD.USRCNT
      4728**DCL      6926>>IF
KV$MVD
      4774**DCL      6034<>CALL     6205<>CALL     6216<>CALL     6220<>CALL     6237<>CALL
KV$MVD.LINLST$
      4777**DCL      6215>>IF
KV$MVD.LNK$
      4774**DCL      6377>>IF       6378<<ASSIGN   6379>>ASSIGN
KV$MVD.SRD$
      4774**DCL      6235>>ASSIGN
KV$PTR.INPCNDPND
      4823**DCL      4832--REDEF    4836--REDEF
KV$PTR.LINLST$
      4819**DCL      4820--REDEF    6627<<ASSIGN   6628>>ASSIGN
KV$PTR.MRD$
      4818**DCL      6221>>ASSIGN   6236<<ASSIGN   7052<<ASSIGN
KV$PTR.MVD$
      4818**DCL      6031>>IF       6034>>CALL     6205>>CALL     6215>>IF       6216>>CALL     6220>>CALL
      6221<<ASSIGN   6222>>ASSIGN   6234<<ASSIGN   6235>>ASSIGN   6393<<ASSIGN
KV$PTR.SRD$
      4819**DCL      6216>>IF       6235<<ASSIGN   6236>>ASSIGN   6951<<ASSIGN
KV$PTR.SSN$
      4817**DCL      6019>>IF       6026>>ASSIGN   6027>>ASSIGN   6040>>IF       6045>>ASSIGN   6055>>ASSIGN
      6068>>ASSIGN   6080>>ASSIGN   6086>>IF       6086>>IF       6089>>ASSIGN   6090>>ASSIGN   6096>>IF
      6099>>ASSIGN   6101>>ASSIGN   6113>>IF       6124>>DOWHILE  6129>>IF       6133>>ASSIGN   6134>>ASSIGN
      6177>>ASSIGN   6178>>ASSIGN   6186>>IF       6926>>IF
KV$PTR.STR$
      4817**DCL      6153>>IF       6178>>IF       6178>>ASSIGN   6179>>DOWHILE  6180>>IF       6182>>ASSIGN
      6192<<ASSIGN   6222>>ASSIGN
KV$PTR.VDI$
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:121  
      4817**DCL      6014>>ASSIGN   6014>>ASSIGN   6096>>IF       6100>>ASSIGN   6109>>ASSIGN   6118>>ASSIGN
      6147>>IF       6154>>IF       6155>>ASSIGN   6597>>IF       6926>>IF       7139>>IF       7156>>IF
      7191>>IF       7193>>ASSIGN   7194>>ASSIGN   7195>>ASSIGN   7200>>IF       7202>>ASSIGN   7212>>ASSIGN
      7213>>ASSIGN
KV$PTR$
      4811**DCL      4817--IMP-PTR  6014>>ASSIGN   6014>>ASSIGN   6019>>IF       6026>>ASSIGN   6027>>ASSIGN
      6031>>IF       6034>>CALL     6040>>IF       6045>>ASSIGN   6055>>ASSIGN   6068>>ASSIGN   6080>>ASSIGN
      6086>>IF       6086>>IF       6089>>ASSIGN   6090>>ASSIGN   6096>>IF       6096>>IF       6099>>ASSIGN
      6100>>ASSIGN   6101>>ASSIGN   6109>>ASSIGN   6113>>IF       6118>>ASSIGN   6124>>DOWHILE  6129>>IF
      6133>>ASSIGN   6134>>ASSIGN   6147>>IF       6151>>ASSIGN   6153>>IF       6154>>IF       6155>>ASSIGN
      6177>>ASSIGN   6178>>IF       6178>>ASSIGN   6178>>ASSIGN   6179>>DOWHILE  6180>>IF       6182>>ASSIGN
      6186>>IF       6192>>ASSIGN   6205>>CALL     6215>>IF       6216>>IF       6216>>CALL     6220>>CALL
      6221>>ASSIGN   6221>>ASSIGN   6222>>ASSIGN   6222>>ASSIGN   6234>>ASSIGN   6235>>ASSIGN   6235>>ASSIGN
      6236>>ASSIGN   6236>>ASSIGN   6393>>ASSIGN   6597>>IF       6627>>ASSIGN   6628>>ASSIGN   6926>>IF
      6926>>IF       6951>>ASSIGN   7052>>ASSIGN   7139>>IF       7156>>IF       7191>>IF       7193>>ASSIGN
      7194>>ASSIGN   7195>>ASSIGN   7200>>IF       7202>>ASSIGN   7212>>ASSIGN   7213>>ASSIGN   7219>>ASSIGN
      7220<<ASSIGN
KV$RCR.STRBYTSIZ IN PROCEDURE RLSFRM
      6579**DCL      6616>>ASSIGN
KV$RCRLST.RCR$ IN PROCEDURE RLSFRM
      6555**DCL      6615>>ASSIGN
KV$RCRLST.RCRCNT IN PROCEDURE RLSFRM
      6543**DCL      6614>>DOINDEX
KV$RCRLST.STRBYTSIZ IN PROCEDURE RLSFRM
      6543**DCL      6619>>ASSIGN
KV$SRD
      4860**DCL      6386<>CALL
KV$SRD.BTMRHT
      4956**DCL      4961--REDEF
KV$SRD.CRT
      5032**DCL      5037--REDEF
KV$SRD.FLDEND
      4996**DCL      5001--REDEF    6622<<ASSIGN
KV$SRD.HI_NONBLN
      5066**DCL      5071--REDEF
KV$SRD.LNK$
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:122  
      4860**DCL      6935>>IF       6936<<ASSIGN   6937>>ASSIGN
KV$SRD.MRD$
      4860**DCL      6236>>ASSIGN   6372>>ASSIGN
KV$SRD.ORG
      4888**DCL      4893--REDEF
KV$SRD.SRDEND
      5101**DCL      5106--REDEF
KV$SRD.TOPLFT
      4922**DCL      4927--REDEF
KV$SRD.USRCNT
      4861**DCL      6216>>IF
KV$SSN.CLKSET
      5156**DCL      6040>>IF       6046--DOWHILE  6047>>IF
KV$SSN.LNK$
      5137**DCL      6118>>ASSIGN   6129>>IF       6133<<ASSIGN   6133>>ASSIGN   6136>>ASSIGN   6158>>ASSIGN
      6926>>IF
KV$SSN.REDBFR__.ADR$
      5183**DCL      6086>>IF       6089>>ASSIGN
KV$SSN.REDBFR__.BFRBYTSIZ
      5184**DCL      6090>>ASSIGN
KV$SSN.REDBFR__.BFRRLSDSP
      5185**DCL      6086>>IF
KV$SSN.REDRQSPND
      5155**DCL      6157>>IF
KV$SSN.REDRSPCNT
      5143**DCL      5144--REDEF
KV$SSN.SNCPTR$
      5138**DCL      6161>>ASSIGN
KV$SSN.SNDPRMBFRHED$
      5146**DCL      6068>>ASSIGN
KV$SSN.SSNCNCID
      5146**DCL      6019>>IF       6141<<ASSIGN
KV$SSN.SSNHDN$
      5138**DCL      6080>>ASSIGN
KV$SSN.STR$
      5137**DCL      6026>>ASSIGN   6027<<ASSIGN   6177>>ASSIGN   6178<<ASSIGN   6926>>IF
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:123  
KV$SSN.TRCBFR$
      5140**DCL      6096>>IF       6099>>ASSIGN   6101<<ASSIGN
KV$SSN.TYPAHDBFRHED$
      5139**DCL      6055>>ASSIGN
KV$SSN.VDI$
      5137**DCL      6161>>ASSIGN
KV$STR.ACTCHRTBL$
      5216**DCL      6258>>ASSIGN
KV$STR.EDTBFR__.ADR$
      5240**DCL      6263>>IF       6266>>ASSIGN
KV$STR.EDTBFR__.BFRBYTSIZ
      5241**DCL      6267>>ASSIGN
KV$STR.EDTBFR__.BFRRLSDSP
      5242**DCL      6263>>IF
KV$STR.LNK$
      5214**DCL      6178>>ASSIGN   6180>>IF       6181<<ASSIGN   6181>>ASSIGN   6181>>ASSIGN   6184>>ASSIGN
      6194<<ASSIGN   6274>>ASSIGN
KV$STR.MVD$
      5214**DCL      6222<<ASSIGN   6234>>ASSIGN   6237>>CALL
KV$STR.OTPTAB$
      5215**DCL      6246>>ASSIGN
KV$STR.PRM$
      5215**DCL      6252>>ASSIGN
KV$STR.SSN$
      5214**DCL      6186>>IF
KV$STT.REQSTATS.DSPMSK
      5553**DCL      5559--REDEF
KV$STT.REQSTATS.SLCMSK
      5594**DCL      5601--REDEF
KV$TYPAHDBFR
      5692**DCL      5695--REDEF
KV$TYPAHDBFR.LNK$
      5692**DCL      6062>>ASSIGN
KV$USRPRM.STREVTENB
      5744**DCL      7139>>IF
KV$USRPRM.STT$
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:124  
      5747**DCL      7212>>ASSIGN
KV$VDI.ASNINPPTR$
      5772**DCL      6161<<ASSIGN
KV$VDI.CRSRED
      5804**DCL      6154>>IF
KV$VDI.EDTWND$
      5800**DCL      7200>>IF       7202>>ASSIGN
KV$VDI.PHSDSC
      5806**DCL      6597>>IF
KV$VDI.SHRTRCBFR
      5813**DCL      6096>>IF
KV$VDI.SSN$
      5771**DCL      6109>>ASSIGN   6118<<ASSIGN   6147>>IF       6155>>ASSIGN   6926>>IF
KV$VDI.SSNCNT
      5800**DCL      6014<<ASSIGN   6014>>ASSIGN
KV$VDI.TRCBFR$
      5801**DCL      7191>>IF       7193>>ASSIGN   7195<<ASSIGN
KV$VDI.TRCBFRBYTSIZ
      5801**DCL      6100>>ASSIGN   7194>>ASSIGN
KV$VDI.USREVTENB
      5814**DCL      7156>>IF
KV$VDI.USRPRM$
      5772**DCL      7139>>IF       7212>>ASSIGN
KV@USR_EVT IN PROCEDURE TLUSR
      7090**DCL      7158<<ASSIGN   7161<>CALL
KV@USR_EVT.ID IN PROCEDURE TLUSR
      7096**DCL      7159<<ASSIGN
KV@USR_EVT.PRM IN PROCEDURE TLUSR
      7096**DCL      7160<<ASSIGN
KV@VDH_RLSBFR
      5851**DCL      6025<<ASSIGN   6190<<ASSIGN   6204<<ASSIGN   6214<<ASSIGN   7178<>CALL     7187<<ASSIGN
KV@VDH_RLSBFR.BFR$
      5857**DCL      4660--IMP-PTR  6060<<ASSIGN   6071<<ASSIGN   6080<<ASSIGN   6089<<ASSIGN   6099<<ASSIGN
      6142<<ASSIGN   6151<<ASSIGN   6246<<ASSIGN   6252<<ASSIGN   6258<<ASSIGN   6266<<ASSIGN   6273<<ASSIGN
      6341<<ASSIGN   6347<<ASSIGN   6350<<ASSIGN   6355<<ASSIGN   6361<<ASSIGN   6372<<ASSIGN   6373>>IF
      6373>>ASSIGN   6375<<ASSIGN   6375>>ASSIGN   6376>>DOUNTIL  6377>>IF       6378>>ASSIGN   6379<<ASSIGN
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:125  
      6379>>ASSIGN   6390<<ASSIGN   6518--IMP-PTR  6579--IMP-PTR  6603<<ASSIGN   6604>>IF       6605>>ASSIGN
      6615<<ASSIGN   6616>>ASSIGN   6625<<ASSIGN   6932<<ASSIGN   6933>>IF       6934>>DOUNTIL  6935>>IF
      6936>>ASSIGN   6937<<ASSIGN   6937>>ASSIGN   6944<<ASSIGN   6950<<ASSIGN   7032<<ASSIGN   7039<<ASSIGN
      7046<<ASSIGN   7051<<ASSIGN   7193<<ASSIGN   7202<<ASSIGN   7203>>ASSIGN   7213<<ASSIGN   7219<<ASSIGN
KV@VDH_RLSBFR.BYTSIZ
      5857**DCL      6072<<ASSIGN   6090<<ASSIGN   6100<<ASSIGN   6267<<ASSIGN   6605<<ASSIGN   6610<<ASSIGN
      6616<<ASSIGN   6619<<ASSIGN   7179<<ASSIGN   7194<<ASSIGN   7203<<ASSIGN
KV@VDH_RLSBFR.STRTYP
      5857**DCL      6061<<ASSIGN   6073<<ASSIGN   6081<<ASSIGN   6088<<ASSIGN   6098<<ASSIGN   6143<<ASSIGN
      6152<<ASSIGN   6245<<ASSIGN   6251<<ASSIGN   6257<<ASSIGN   6265<<ASSIGN   6275<<ASSIGN   6342<<ASSIGN
      6348<<ASSIGN   6351<<ASSIGN   6356<<ASSIGN   6362<<ASSIGN   6391<<ASSIGN   6596<<ASSIGN   6611<<ASSIGN
      6613<<ASSIGN   6620<<ASSIGN   6623<<ASSIGN   6945<<ASSIGN   6952<<ASSIGN   7033<<ASSIGN   7040<<ASSIGN
      7045<<ASSIGN   7053<<ASSIGN   7192<<ASSIGN   7201<<ASSIGN   7214<<ASSIGN   7221<<ASSIGN
KV@VDH_RLSBFR.STT$
      5857**DCL      7212<<ASSIGN
KVC$RLSWND
      4356**DCL-ENT  6928--CALL
KVM$SND
      4357**DCL-ENT  6019--CALL
KVO$ERSMRD
      4358**DCL-ENT  6601--CALL
KVS$CHNSSN
      4359**DCL-ENT  6163--CALL
KVS$RLSBFR
      4360**DCL-ENT  7178--CALL
KVV$CALUSR_EVT IN PROCEDURE TLUSR
      7133**DCL-ENT  7161--CALL
KV_CLK_CANCEL
      4467**DCL      6044>>ASSIGN
KV_CLK_CANCEL.UID
      4483**DCL      4484--REDEF    4485--REDEF
KV_PTR.INPCNDPND
      4630**DCL      4639--REDEF    4643--REDEF
KV_PTR.LINLST$
      4626**DCL      4627--REDEF
KV_SND_CMPDSCSSN
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:126  
      4376**DCL      6019<>CALL
KV_SND_CMPDSCSSN.VDOVLP
      4410**DCL      4413--REDEF
KV_SSNCNT
      4602**DCL      6013<<ASSIGN   6013>>ASSIGN
KV_USR_EVT IN PROCEDURE TLUSR
      7125**DCL      7158>>ASSIGN
KV_VDH_RLSBFR
      4444**DCL      6025>>ASSIGN   6190>>ASSIGN   6204>>ASSIGN   6214>>ASSIGN   7187>>ASSIGN
PTR$
      5860**DCL      6026<<ASSIGN   6031>>IF       6035>>DOWHILE  6055<<ASSIGN   6056>>DOWHILE  6060>>ASSIGN
      6062<<ASSIGN   6062>>ASSIGN   6068<<ASSIGN   6069>>DOWHILE  6071>>ASSIGN   6072>>ASSIGN   6074<<ASSIGN
      6074>>ASSIGN   6109<<ASSIGN   6113>>IF       6118>>ASSIGN   6124>>DOWHILE  6129>>IF       6133>>ASSIGN
      6134<<ASSIGN   6136<<ASSIGN   6136>>ASSIGN   6141>>ASSIGN   6142>>ASSIGN   6155<<ASSIGN   6156>>DOUNTIL
      6157>>IF       6158<<ASSIGN   6158>>ASSIGN   6160>>IF       6161>>ASSIGN   6161>>ASSIGN   6177<<ASSIGN
      6178>>IF       6179>>DOWHILE  6180>>IF       6181>>ASSIGN   6181>>ASSIGN   6182<<ASSIGN   6184<<ASSIGN
      6184>>ASSIGN   6186>>IF       6194>>ASSIGN   6234>>ASSIGN   6237>>CALL     6246>>ASSIGN   6252>>ASSIGN
      6258>>ASSIGN   6263>>IF       6263>>IF       6266>>ASSIGN   6267>>ASSIGN   6273>>ASSIGN   6274<<ASSIGN
      6274>>ASSIGN
RLSBFR
      7175**PROC     6063--CALL     6075--CALL     6082--CALL     6091--CALL     6102--CALL     6144--CALL
      6165--CALL     6247--CALL     6253--CALL     6259--CALL     6268--CALL     6276--CALL     6343--CALL
      6349--CALL     6352--CALL     6357--CALL     6363--CALL     6392--CALL     6606--CALL     6617--CALL
      6626--CALL     6946--CALL     6953--CALL     7034--CALL     7041--CALL     7047--CALL     7054--CALL
      7196--CALL     7204--CALL     7215--CALL     7222--CALL
RLSFRM
      6398**PROC     6216--CALL     6367--CALL
RLSMRD
      6963**PROC     6939--CALL
RLSMVD
      6280**PROC     6205--CALL     6220--CALL     6237--CALL
RLSMVDNO_STR IN PROCEDURE RLSMVD
      6332**ENTRY    6034--CALL
RLSSRD
      6633**PROC     6386--CALL
RLSSTR
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:127  
      6226**PROC     6036--CALL     6191--CALL
STRTYP IN PROCEDURE TLUSR
      7135**DCL      7059--PROC     7139>>IF       7160>>ASSIGN
TLUSR
      7059**PROC     6107--CALL     6241--CALL     6338--CALL     6920--CALL     7023--CALL     7209--CALL
Y$MRD IN PROCEDURE RLSMRD
      6986**DCL      6963--PROC     7051--ASSIGN
Y$MRD.ERD$ IN PROCEDURE RLSMRD
      6987**DCL      7027>>IF       7032>>ASSIGN
Y$MRD.PRFINPFNCTBL$ IN PROCEDURE RLSMRD
      6987**DCL      7046>>ASSIGN
Y$MRD.TRMTAB$ IN PROCEDURE RLSMRD
      6986**DCL      7039>>ASSIGN
Y$MRD.USRCNT IN PROCEDURE RLSMRD
      6988**DCL      7015<<ASSIGN   7015>>ASSIGN   7019>>IF
Y$MVD IN PROCEDURE RLSFRM
      6422**DCL      6398--PROC
Y$MVD.LINLST$ IN PROCEDURE RLSFRM
      6425**DCL      6592>>ASSIGN   6628<<ASSIGN
Y$MVD.ORG IN PROCEDURE RLSFRM
      6427**DCL      6593>>DOCASE   6629<<ASSIGN
Y$MVD.RCRWRAP IN PROCEDURE RLSFRM
      6441**DCL      6630<<ASSIGN
Y$MVD.SRD$ IN PROCEDURE RLSFRM
      6422**DCL      6622>>ASSIGN
Y$MVD IN PROCEDURE RLSMVD
      6304**DCL      6280--PROC     6332--ENTRY    6367<>CALL     6373--IF       6377--IF       6390--ASSIGN
Y$MVD.DCBHDN$ IN PROCEDURE RLSMVD
      6305**DCL      6355>>ASSIGN
Y$MVD.INPTAB$ IN PROCEDURE RLSMVD
      6304**DCL      6341>>ASSIGN
Y$MVD.LINLST$ IN PROCEDURE RLSMVD
      6307**DCL      6366>>IF
Y$MVD.LNK$ IN PROCEDURE RLSMVD
      6304**DCL      6373>>ASSIGN   6378>>ASSIGN
Y$MVD.SRD$ IN PROCEDURE RLSMVD
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:128  
      6304**DCL      6372>>ASSIGN   6386>>IF       6386>>CALL
Y$MVD.SSTINPFNCTBL$ IN PROCEDURE RLSMVD
      6306**DCL      6347>>ASSIGN
Y$MVD.USRCNT IN PROCEDURE RLSMVD
      6307**DCL      6330<<ASSIGN   6330>>ASSIGN   6334>>IF
Y$MVD.USRINPFNCTBL$ IN PROCEDURE RLSMVD
      6305**DCL      6350>>ASSIGN
Y$MVD.VFU$ IN PROCEDURE RLSMVD
      6306**DCL      6361>>ASSIGN
Y$SRD IN PROCEDURE RLSSRD
      6656**DCL      6633--PROC     6933--IF       6935--IF       6950--ASSIGN
Y$SRD.BTMRHT IN PROCEDURE RLSSRD
      6752**DCL      6757--REDEF
Y$SRD.CRT IN PROCEDURE RLSSRD
      6828**DCL      6833--REDEF
Y$SRD.ENTSRDCHR$ IN PROCEDURE RLSSRD
      6656**DCL      6944>>ASSIGN
Y$SRD.FLDEND IN PROCEDURE RLSSRD
      6792**DCL      6797--REDEF
Y$SRD.HI_NONBLN IN PROCEDURE RLSSRD
      6862**DCL      6867--REDEF
Y$SRD.LNK$ IN PROCEDURE RLSSRD
      6656**DCL      6933>>ASSIGN   6936>>ASSIGN
Y$SRD.MINLNG IN PROCEDURE RLSSRD
      6908**DCL      6957<<ASSIGN
Y$SRD.MINWDT IN PROCEDURE RLSSRD
      6908**DCL      6958<<ASSIGN
Y$SRD.MRD$ IN PROCEDURE RLSSRD
      6656**DCL      6924>>IF       6926>>IF       6932>>ASSIGN   6933>>ASSIGN   6939>>CALL
Y$SRD.ORG IN PROCEDURE RLSSRD
      6684**DCL      6689--REDEF
Y$SRD.SRDEND IN PROCEDURE RLSSRD
      6897**DCL      6902--REDEF
Y$SRD.TOPLFT IN PROCEDURE RLSSRD
      6718**DCL      6723--REDEF
Y$SRD.USRCNT IN PROCEDURE RLSSRD
PL6.E3A0      #002=KVC$RLSSSN File=KVC$DSC.:E05TSI                               WED 07/30/97 01:56 Page:129  
      6657**DCL      6912<<ASSIGN   6912>>ASSIGN   6916>>IF
Y@INDX IN PROCEDURE RLSFRM
      6589**DCL      6595<<ASSIGN   6602>>DOUNTIL  6603>>ASSIGN   6608<<ASSIGN   6608>>ASSIGN   6614<<DOINDEX
      6615>>ASSIGN
Y@LST$ IN PROCEDURE RLSFRM
      6590**DCL      6490--IMP-PTR  6543--IMP-PTR  6592<<ASSIGN   6595>>ASSIGN   6597>>IF       6603>>ASSIGN
      6610>>ASSIGN   6614>>DOINDEX  6615>>ASSIGN   6619>>ASSIGN   6625>>ASSIGN
