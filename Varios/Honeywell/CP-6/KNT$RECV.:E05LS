VERSION E05

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:1    
        1        1        /*M* KNT$RECV - Receive OSI msgs from network and send to session */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=3,IND=5,ENU=0,ECU=0   */
        8        8
        9        9        /*P* NAME: KNT$RECV
       10       10
       11       11             PURPOSE:
       12       12                  To respond to fragments received from peers via local network.
       13       13
       14       14             DESCRIPTION:
       15       15                  The standard class 4 responses are employed.
       16       16
       17       17        */
       18       18        KNT$RECV: PROC(KN$NETPARM)  ALTRET;
       19       19
       20       20        %INCLUDE K_ADDRESS_M;
       21      523        %INCLUDE K_INTERFACE_M;
       22      932        %INCLUDE K_QDPHDRS_M;
       23     1814        %INCLUDE KN_DATA_M;
       24     3600        %INCLUDE K_TRANSPORT_E;
       25     3925        %INCLUDE K_TRANSPORT_M;
       26     5709        %INCLUDE KNH_MACRO_C;
       27     5992        %INCLUDE GH_SCHD_M;
       28     6136        %INCLUDE GH_GATE_M;
       29     6177 S      %INCLUDE KI_CP6;
       30     6178
       31     6179                                                /* Input Parameters                   */
       32     6180        %KN$NETPARM;
       33     6333                                                /* Auto                               */
       34     6334    1   DCL ERRNUM SBIN;
       35     6335    1   DCL DATA$ CPTR;
       36     6336    1   DCL DATASIZE SBIN;
       37     6337    1   DCL TPDU$ CPTR;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:2    
       38     6338    1   DCL CTX$ PTR;
       39     6339    1   DCL BUF$ PTR;
       40     6340    1   DCL NEXT_SZ SBIN;
       41     6341    1   DCL CDT SBIN;
       42     6342    1   DCL CDT_UBIN REDEF CDT UBIN;
       43     6343    1   DCL YR_TU_NR UBIN(32);
       44     6344    1   DCL TPDU_NR UBIN(32);
       45     6345    1   DCL NEXT$ CPTR;
       46     6346    1   DCL PARM$ CPTR;
       47     6347    1   DCL TEMP$ REDEF PARM$ PTR;
       48     6348    1   DCL PARMSIZE SBIN;
       49     6349    1   DCL TPDUSIZE SBIN;
       50     6350    1   DCL TYPE SBIN;
       51     6351    1   DCL DST_REF SBIN;
       52     6352    1   DCL TCTX# UBIN;
       53     6353    1   DCL LI SBIN;
       54     6354    1   DCL EOT BIT(1) ALIGNED;
       55     6355    1   DCL SUBSEQ UBIN;
       56     6356    1   DCL DUPLICATE_AK UBIN;
       57     6357    1   DCL GOT_FCC UBIN;
       58     6358    1   DCL GOT_CHKSUM UBIN;
       59     6359    1   DCL REASON UBIN;
       60     6360    1   DCL HOST_TPDU$ PTR;
       61     6361    1   DCL HOST_TPDUC$ REDEF HOST_TPDU$ CPTR;
       62     6362    1   DCL LDCT_CIRCUIT BIT(1);
       63     6363
       64     6364    1   DCL ENTRY_SWITCH UBIN;
       65     6365        %EQU PRIMARY=0;
       66     6366        %EQU RECV_4HOST=1;
       67     6367        %EQU SEND_4HOST=2;
       68     6368
       69     6369    1   DCL TEMP SBIN;
       70     6370    1   DCL 1 CLOCK_ID REDEF TEMP,
       71     6371    1         2 TCTX UBIN(8) UNAL,
       72     6372    1         2 TMR UBIN(8) UNAL;
       73     6373
       74     6374    1   DCL TEMP2 UBIN;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:3    
       75     6375
       76     6376        %K$TPDU_GENERIC (NAME=TPDU_BUF,STCLASS=AUTO,LEN=10);
       77     6436
       78     6437                                                /* Based Data                         */
       79     6438        %K$NSAP(FPTN=NSAP);
       80     6490    1   DCL KN$TCTX$(0:0) PTR BASED(KN_TCTX$$);
       81     6491        %K$TCTX (NAME=KN$TCTX, STCLASS="BASED(CTX$)");
       82     7398
       83     7399        %KN$LDCT (NAME=KN$LDCT, STCLASS="BASED(KN$NETPARM.LDCT$)");
       84     7644
       85     7645        %K$TPDU_CR_CC(NAME=B$TPDU_CR,STCLASS="BASED(BUF$)",ALGN=CALIGNED);
       86     7714        %K$TPDU_EA (NAME=B$TPDU_EA, STCLASS="BASED(BUF$)");
       87     7740        %K$TPDU_EA_EXT (NAME=B$TPDU_EA_EXT, STCLASS="BASED(BUF$)");
       88     7766        %K$TPDU_AK (NAME=B$TPDU_AK, STCLASS="BASED(BUF$)");
       89     7814        %K$TPDU_AK_EXT (NAME=B$TPDU_AK_EXT, STCLASS="BASED(BUF$)");
       90     7858        %K$TPDU_DR (NAME=B$TPDU_DR, STCLASS="BASED(BUF$)");
       91     7901        %K$TPDU_DT(NAME=B$TPDU_DT, STCLASS="BASED(BUF$)");
       92     7951        %K$TPDU_DT(NAME=B$TPDU_DT_C, STCLASS="BASED(BUF$)",ALGN=CALIGNED);
       93     8001        %K$TPDU_DT_EXT(NAME=B$TPDU_DT_EXT, STCLASS="BASED(BUF$)");
       94     8065        %K$TPDU_DT_0(NAME=B$TPDU_DT_0, STCLASS="BASED(BUF$)", ALGN=CALIGNED);
       95     8110
       96     8111        %K$TPARM_FCC (NAME=B$TPARM_FCC, STCLASS="BASED(BUF$)");
       97     8158
       98     8159
       99     8160        %K$FPT_CONNECT_OSI (NAME=B$TR_OPTIONS, STCLASS="BASED(KN$NETPARM.FPT$)", FULL=NO);
      100     8327
      101     8328        %K$FRAG_HDR (NAME=FRAG_HDR, STCLASS=BASED);
      102     8411
      103     8412        %K$NQDP_HDR (NAME=B$NHDR, STCLASS="BASED(KN$NETPARM.NHDR$)");
      104     8489
      105     8490    1   DCL KN$LDCT$(0:0) PTR BASED(KN_DCT$$);
      106     8491
      107     8492    1   DCL CHRBSD CHAR(TEMP) BASED;
      108     8493    1   DCL UBN1BSD UBIN(16) BASED CALIGNED;
      109     8494    1   DCL B$CHAR4 CHAR(4) BASED CALIGNED;
      110     8495
      111     8496                                                /* External Data                      */
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:4    
      112     8497    1   DCL KNT_DO_CHKSUM UBIN SYMREF;
      113     8498    1   DCL KNT_WINDOW_NORMAL UBIN SYMREF;
      114     8499    1   DCL KNT_WINDOW_EXTENDED UBIN SYMREF;
      115     8500    1   DCL KNT_HOLDBACK UBIN SYMREF;
      116     8501    1   DCL K_TPDUSZ_VALUES(0:14) UBIN SYMREF;
      117     8502    1   DCL K_TPDU_SIZE(0:15) UBIN SYMREF;
      118     8503    1   DCL K_TPDU_SIZE_EXT(0:15) UBIN SYMREF;
      119     8504    1   DCL KN_TCTX$$ PTR SYMREF;
      120     8505    1   DCL KN_TCTX_MAX# UBIN SYMREF;
      121     8506    1   DCL KNT_ERROR_SCREECH UBIN SYMREF;
      122     8507    1   DCL KNT_SCODE UBIN(32) SYMREF;
      123     8508    1   DCL KNT_WAIT_HEAD$ PTR SYMREF;
      124     8509    1   DCL KNT_WAIT_COUNT UBIN SYMREF;
      125     8510    1   DCL KNT_DISCARDED_TPDUS UBIN SYMREF;
      126     8511    1   DCL KNT_CHKSUM_ERR UBIN SYMREF;
      127     8512    1   DCL KNT_UNQ_LDCT UBIN SYMREF;
      128     8513    1   DCL KNT_TRACE_INTERMEDIATE UBIN SYMREF;
      129     8514    1   DCL KNT_TRACE_CLASS4 UBIN SYMREF;
      130     8515    1   DCL KNT_TRACE_OSI UBIN SYMREF;
      131     8516    1   DCL KN_DCT$$ PTR SYMREF;
      132     8517
      133     8518
      134     8519                                                /* External Routines                  */
      135     8520    1   DCL KNA$GETTCTX ENTRY(1) ALTRET;
      136     8521    1   DCL KNA$RELTCTX ENTRY(1) ALTRET;
      137     8522    1   DCL KNH$SEND ENTRY(1) ALTRET;
      138     8523    1   DCL KNN$SEND ENTRY(1) ALTRET;
      139     8524    1   DCL KNS$RECV ENTRY(1) ALTRET;
      140     8525    1   DCL KNT$SEND_AK ENTRY(1) ALTRET;
      141     8526    1   DCL KNT$SEND_AK_FCC ENTRY(1) ALTRET;
      142     8527    1   DCL KNT$SEND_CC ENTRY(1) ALTRET;
      143     8528    1   DCL KNT$SEND_DC ENTRY(1) ALTRET;
      144     8529    1   DCL KNT$SEND_EA ENTRY(1) ALTRET;
      145     8530    1   DCL KNT$SEND_ED ENTRY(1) ALTRET;
      146     8531    1   DCL KNT$SEND_DT ENTRY(1) ALTRET;
      147     8532    1   DCL KNT$SEND_DR ENTRY(1) ALTRET;
      148     8533    1   DCL KNT$SEND_DR_HOST ENTRY(1) ALTRET;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:5    
      149     8534    1   DCL KNT$RELBUF ENTRY(2);
      150     8535    1   DCL KNT$RLS_CHAIN ENTRY(1);
      151     8536    1   DCL KNA$CALC_CHKSUM ENTRY(3) ALTRET;
      152     8537    1   DCL KNA$CHK_CHKSUM ENTRY(2) ALTRET;
      153     8538    1   DCL KNT$SAVE_FRAG ENTRY(5) ALTRET;
      154     8539    1   DCL KNT$DSESSION ENTRY(1) ALTRET;
      155     8540    1   DCL KNT$RETRANS ENTRY(1) ALTRET;
      156     8541    1   DCL KNT$RETRANS_LOST ENTRY(1) ALTRET;
      157     8542    1   DCL KNT$SET_REFWAIT ENTRY(1);
      158     8543    1   DCL KNT$UNQ_OPEN ENTRY(1);
      159     8544    1   DCL KNT$UNQ_FLOW ENTRY(1);
      160     8545    1   DCL KNT$UNQ_BUFFER ENTRY;
      161     8546    1   DCL KNT$TTIMER ENTRY(1);
      162     8547    1   DCL KNT$TR_RECV ENTRY(1);
      163     8548    1   DCL KNT$TR_SEND ENTRY(1);
      164     8549    1   DCL KNT$TR_FHOST ENTRY(1);
      165     8550    1   DCL KNT$TR_ERROR ENTRY(1);
      166     8551    1   DCL KNT$TR_TERM ENTRY(1);
      167     8552    1   DCL GHS$SET_TMR ENTRY(1);
      168     8553    1   DCL GHS$CANCEL_TMR ENTRY(1);
      169     8554    1   DCL SCREECH ENTRY(1);
      170     8555
      171     8556        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:6    
      172     8557
      173     8558        /*F* NAME: KNT$RECV Inbound Messages
      174     8559
      175     8560        This procedure is the interface for the lower layers to the
      176     8561        transport layer. It is called from KNN$RECV with the
      177     8562        following parameters:
      178     8563        .fif
      179     8564        }
      180     8565        }    KN$NETPARM.FUNCTION
      181     8566        }                - Contains the function to be performed
      182     8567        }                  The only calls currently implemented for CP-6 Primary
      183     8568        }                  connections are:
      184     8569        }                    KN_FCN_TERM
      185     8570        }                    KN_FCN_DATA
      186     8571        }
      187     8572        }                  If called to process a message whose destination or
      188     8573                           source is an adjacent host, the function code will be:
      189     8574        }                     KNH_FCN_DATA  -  if for a CP-6 connection data
      190     8575        }                     K_NDATA       -  if for an OSI connection data
      191     8576        }                     K_NDISCONNECT_IND - ?? Dan ?
      192     8577        }
      193     8578        }
      194     8579        }    KN$NETPARM.THDR$
      195     8580        }                - Contains the address within the message of the first
      196     8581        }                  byte of the transport header.
      197     8582        }
      198     8583        }
      199     8584        }    KN$NETPARM.THDRSZ
      200     8585        }                - Contains the byte size of the TPDU.
      201     8586        }
      202     8587        }
      203     8588        }    KN$NETPARM.NODE
      204     8589        }                - Contains the destination node number from the
      205     8590        }                  network header.
      206     8591        }
      207     8592        }    KN$NETPARM.FPT$
      208     8593                         - used when entered from KNT$SEND_4HOST with TPDU_CR.
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:7    
      209     8594                           contains the address on the transport options which
      210     8595                           are part of the OSI_INIT network header.
      211     8596
      212     8597        }                - used when FUNCTION is KN_FCN_TERM
      213     8598        }                  The FPT is not actually used by KNT$RECV, but
      214     8599        }                  is passed along as a parameter to session.
      215     8600        }
      216     8601        }    KN$NETPARM.SRC_ADDR$
      217     8602        }    KN$NETPARM.DST_ADDR$
      218     8603        }                - used when FUNCTION is K_NDATA
      219     8604        }                  contains the addresses of the NSAPs to be remembered
      220     8605        }                  in the TCTX block.
      221     8606        .fin
      222     8607
      223     8608        */
      224     8609
      225     8610        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:8    
      226     8611
      227     8612    1      ENTRY_SWITCH = %PRIMARY;
      228     8613    1      IF KN$NETPARM.FUNCTION = %KN_FCN_DATA
      229     8614    1      THEN GOTO COMMON;
      230     8615
      231     8616    1      TEMP2 = KN$NETPARM.FUNCTION;
      232     8617
      233     8618    1      IF TEMP2=%KN_FCN_TERM OR TEMP2=%K_NDISCONNECT_IND
      234     8619    2      THEN DO;
      235     8620    2           CALL KNT$TR_TERM(KN$NETPARM);
      236     8621
      237     8622    2           TEMP = KN$NETPARM.NODE;
      238     8623
      239     8624    3           DO TCTX# = 1 TO KN_TCTX_MAX#;
      240     8625    3                CTX$ = KN$TCTX$(TCTX#);
      241     8626    3                IF CTX$ ~= ADDR(NIL)
      242     8627    4                THEN DO;
      243     8628    4                     IF (KN$TCTX.STATE > %K_TSTATE_CLOSED)
      244     8629    5                     THEN DO;
      245     8630    5                          IF (KN$TCTX.PRIMARY='0'B AND KN$TCTX.HOST_NODE=TEMP)
      246     8631    5                          THEN GOTO HOST_CRASH;
      247     8632
      248     8633    5                          IF (KN$TCTX.NODE = TEMP)
      249     8634    6                          THEN DO;
      250     8635    6                               IF TEMP2=%K_NDISCONNECT_IND AND KN$TCTX.CLASS=4
      251     8636    6                               THEN GOTO DONT_TERM_YET;
      252     8637
      253     8638    6   HOST_CRASH:
      254     8639    6                               KN$NETPARM.TCTX$ = CTX$;
      255     8640    6                               KN$NETPARM.TCTX_ID = KN$TCTX.SRC_REF;
      256     8641    6                               KN$TCTX.ERR = %K_ERROR_TERM;
      257     8642
      258     8643    6                               CALL KNT$RLS_CHAIN(KN$TCTX);
      259     8644
      260     8645    6                               IF (KN$TCTX.PRIMARY)
      261     8646    7                               THEN DO;
      262     8647    7                                    KN$NETPARM.NODE = TEMP;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:9    
      263     8648    7                                    KN$NETPARM.MSGSZ = 0;
      264     8649    7                                    KN$NETPARM.UHDRSZ = 0;
      265     8650    7                                    CALL KNS$RECV(KN$NETPARM);
      266     8651
      267     8652    7                                    CALL I$SET_REFWAIT;
      268     8653    7                                    END;
      269     8654
      270     8655    7                               ELSE DO;
      271     8656    7                                    IF KN$TCTX.HOST_NODE = TEMP
      272     8657    8                                    THEN DO; /*host went down - tell remote transport*/
      273     8658    8                                         IF KN$TCTX.CLASS = 0
      274     8659    9                                         THEN DO;
      275     8660                                                   /*N*   send NRESET */
      276     8661    9                                              END;
      277     8662    9                                         ELSE DO;
      278     8663    9                                              KN$TCTX.STATE = %K_TSTATE_CLOSING;
      279     8664    9                                              CALL KNT$SEND_DR(KN$NETPARM);
      280     8665
      281     8666    9                                              IF KN$TCTX.CLASS = 4
      282     8667   10                                              THEN DO;
      283     8668   10                                                   KN$TCTX.SEND_RETRY_COUNT = 1;
      284     8669   10                                                   CALL I$SET_RETRAN;
      285     8670   10                                                   END;
      286     8671    9                                              END;
      287     8672    8                                         END/*do for host_node*/;
      288     8673
      289     8674    8                                    ELSE DO; /*remote went down - tell host transport*/
      290     8675    8                                         CALL KNT$SEND_DR_HOST(KN$NETPARM);
      291     8676    8                                         CALL I$SET_REFWAIT;
      292     8677    8                                         END/*do for remote   */;
      293     8678    7                                    END/*do if intermediate connection*/;
      294     8679
      295     8680    6                               IF KN$TCTX.LNK$ ~= ADDR(NIL)
      296     8681    6                               THEN CALL KNT$UNQ_FLOW(KN$TCTX.LNK$);
      297     8682
      298     8683    6                               KN$NETPARM.FUNCTION = TEMP2;
      299     8684    6   DONT_TERM_YET:
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:10   
      300     8685    6                               END/*do for intermediate and non class 4 primary*/;
      301     8686    5                          END/*do if state > closed*/;
      302     8687    4                     END/*do if trans_ctx$ not nil*/;
      303     8688    3                END/*do indexed*/;
      304     8689
      305     8690        /* Let session know about the TERM so we can rundown the qdp session
      306     8691           connections for the terminating host node.
      307     8692        */
      308     8693    2           IF TEMP2=%K_NDISCONNECT_IND AND KN$TCTX.CLASS=4
      309     8694    2           THEN RETURN;
      310     8695
      311     8696    2           KN$NETPARM.NODE = TEMP;
      312     8697    2           KN$NETPARM.MSGSZ = 0;
      313     8698    2           KN$NETPARM.UHDRSZ = 0;
      314     8699    2           KN$NETPARM.SHDRSZ = 0;
      315     8700    2           KN$NETPARM.TCTX_ID = 0;
      316     8701    2           CALL KNS$RECV(KN$NETPARM);
      317     8702
      318     8703    2           RETURN;
      319     8704    2           END/*do for term like functions*/;
      320     8705
      321     8706
      322     8707
      323     8708        /* If the code isn't data or reset - screech.
      324     8709        */
      325     8710    1      CALL TRANSPORT_SCREECH;
      326     8711
      327     8712        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:11   
      328     8713
      329     8714    1   KNT$RECV_HOST_DATA: ENTRY(KN$NETPARM) ALTRET;
      330     8715    1      ENTRY_SWITCH = %RECV_4HOST;
      331     8716    1      GOTO COMMON;
      332     8717
      333     8718    1   KNT$SEND_CR_4HOST: ENTRY(KN$NETPARM) ALTRET;
      334     8719    1      ENTRY_SWITCH = %SEND_4HOST;
      335     8720
      336     8721    1   COMMON: ;
      337     8722    1      CTX$ = ADDR(NIL);
      338     8723    1      NEXT$ = KN$NETPARM.THDR_C$;
      339     8724    1      BUF$ = ADDR(TPDU_BUF);
      340     8725    1      NEXT_SZ = KN$NETPARM.THDRSZ;
      341     8726    1      TPDUSIZE = KN$NETPARM.THDRSZ;
      342     8727
      343     8728    1      IF KN$LDCT.CONN_TYPE = %KN_CNTYPE_CIRCUIT
      344     8729    2      THEN DO;
      345     8730    2           LDCT_CIRCUIT = '1'B;
      346     8731    2           KN$NETPARM.FUNCTION = %K_NDATA;
      347     8732    2           KN$NETPARM.UHDRSZ = 0;
      348     8733    2           KN$NETPARM.NHDRSZ = 0;
      349     8734    2           END;
      350     8735    1      ELSE LDCT_CIRCUIT = '0'B;
      351     8736
      352     8737        /* Here begins a large do while loop to process the NSDU.
      353     8738           Some types of TPDUs may be concatenated into one NSDU.
      354     8739           See section 6.4 of the OSI spec.
      355     8740        */
      356     8741    2      DO WHILE (NEXT_SZ > 2);
      357     8742    2           TEMP = NEXT_SZ;
      358     8743    2           IF TEMP > 10
      359     8744    2           THEN TEMP = 10;
      360     8745
      361     8746    2           BUF$->CHRBSD = NEXT$->CHRBSD;
      362     8747
      363     8748    2           TPDU$ = NEXT$;
      364     8749    2           TYPE = TPDU_BUF.TYPE;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:12   
      365     8750    2           LI = TPDU_BUF.LI;
      366     8751
      367     8752    2           IF LDCT_CIRCUIT AND TYPE=%K_TPDU_TYPE_DT
      368     8753    2           THEN DST_REF = KN$LDCT.RLCID.TCTX#;
      369     8754    2           ELSE DST_REF = TPDU_BUF.DST_REF;
      370     8755
      371     8756        /* There may on be one CR, CC, DR, DT or ED; and if present, it must
      372     8757           be the last in the list.
      373     8758        */
      374     8759    2           IF ( ( TYPE = %K_TPDU_TYPE_CR ) OR
      375     8760    2             ( TYPE = %K_TPDU_TYPE_CC )OR
      376     8761    2             (TYPE = %K_TPDU_TYPE_DR ) OR
      377     8762    2             (TYPE = %K_TPDU_TYPE_DT ) OR
      378     8763    2             (TYPE = %K_TPDU_TYPE_ED) )
      379     8764    3           THEN DO;
      380     8765    3                TPDUSIZE = NEXT_SZ;
      381     8766    3                DATA$ = PINCRC(NEXT$,LI + 1 );
      382     8767    3                DATASIZE = TPDUSIZE - LI - 1;
      383     8768    3                NEXT_SZ = 0;
      384     8769    3                GOTO VALIDATE_TPDU;
      385     8770    3                END;
      386     8771
      387     8772        /* There may be any number of AK, EA, RJ, ER or DCs; providing
      388     8773           they come from different transport connections.
      389     8774        */
      390     8775    2           IF ( ( TYPE = %K_TPDU_TYPE_AK ) OR
      391     8776    2             ( TYPE = %K_TPDU_TYPE_EA )OR
      392     8777    2             (TYPE = %K_TPDU_TYPE_ER ) OR
      393     8778    2             (TYPE = %K_TPDU_TYPE_DC) )
      394     8779    3           THEN DO;
      395     8780    3                TPDUSIZE = LI + 1;
      396     8781    3                NEXT$ = PINCRC(NEXT$,TPDUSIZE);
      397     8782    3                DATA$ = ADDR(NIL);
      398     8783    3                DATASIZE = 0;
      399     8784    3                NEXT_SZ = NEXT_SZ - TPDUSIZE;
      400     8785    3                GOTO VALIDATE_TPDU;
      401     8786    3                END;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:13   
      402     8787
      403     8788        /* Any other type of TPDU must be a corrupted TPDU.  Log the error
      404     8789           and discard the TPDU.
      405     8790        */
      406     8791    2   LOG_BAD_TPDU_TYPE:
      407     8792    2           ERRNUM = %K_ERROR_TPDU_TYPE; GOTO LOG_BAD_TPDU;
      408     8793
      409     8794    2   LOG_BAD_CHKSUM: ;
      410     8795    2           KN$TCTX.RERR.CHKSUM = KN$TCTX.RERR.CHKSUM +1;
      411     8796
      412     8797    2   COUNT_BAD_CHKSUM:
      413     8798    2           KNT_CHKSUM_ERR = KNT_CHKSUM_ERR +1;
      414     8799    2           ERRNUM = %K_ERROR_CHKSUM;
      415     8800
      416     8801    2   LOG_BAD_TPDU: ;
      417     8802    2           IF KNT_ERROR_SCREECH ~= 0
      418     8803    2           THEN CALL TRANSPORT_SCREECH;
      419     8804
      420     8805    2   DISCARD_TPDU:
      421     8806    2           KNT_DISCARDED_TPDUS = KNT_DISCARDED_TPDUS +1;
      422     8807
      423     8808    2           KN$NETPARM.THDRSZ = ERRNUM;
      424     8809    2           CALL KNT$TR_ERROR(KN$NETPARM);
      425     8810
      426     8811    2           IF ENTRY_SWITCH ~= %PRIMARY THEN ALTRETURN;
      427     8812    2           RETURN;
      428     8813
      429     8814        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:14   
      430     8815        /* Validate the TPDU.  Corrupted TPDUs are generally just discarded.
      431     8816           First check the common portions of a TPDU header.
      432     8817        */
      433     8818
      434     8819        /* Check for LI greater than the TPDU itself or less than that
      435     8820           required for this type of TPDU.
      436     8821        */
      437     8822    2   VALIDATE_TPDU: ;
      438     8823    2           IF LI > TPDUSIZE
      439     8824    2           THEN GOTO BAD_TPDU_LEN;
      440     8825
      441     8826    2           IF  LDCT_CIRCUIT AND TYPE=%K_TPDU_TYPE_DT
      442     8827    3           THEN DO;
      443     8828    3                IF TPDUSIZE < SIZEC(B$TPDU_DT_0)
      444     8829    3                THEN GOTO BAD_TPDU_LEN;
      445     8830    3                END;
      446     8831
      447     8832    3           ELSE DO;
      448     8833    3                IF K_TPDU_SIZE(TYPE) > TPDUSIZE
      449     8834    4                THEN DO;
      450     8835    4   BAD_TPDU_LEN:     ;
      451     8836    4                     ERRNUM = %K_ERROR_TPDU_LEN; GOTO LOG_BAD_TPDU;
      452     8837    4                     END;
      453     8838    3                END;
      454     8839
      455     8840        /* Verify that the DST_REF in the TPDU is ok.
      456     8841        */
      457     8842    2           IF TYPE = %K_TPDU_TYPE_CR
      458     8843    3           THEN DO;
      459     8844    3                IF LDCT_CIRCUIT THEN GOTO FIND_PARMS;
      460     8845
      461     8846    3                IF DST_REF ~= 0
      462     8847    4                THEN DO;
      463     8848    4                     DST_REF = 0;
      464     8849    4   ERR_MBZ:
      465     8850    4                     ERRNUM = %K_ERROR_MBZ;
      466     8851    4   RETURN_TPDU_DR:
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:15   
      467     8852    4                     REASON = %K_REASON_PROTOCOL;
      468     8853    4   RETURN_TPDU_DR2:
      469     8854    4                     CALL I$RETURN_DR;
      470     8855
      471     8856    4                     GOTO LOG_BAD_TPDU;
      472     8857    4                     END;
      473     8858
      474     8859    3                GOTO FIND_PARMS;
      475     8860    3                END;
      476     8861
      477     8862    2           IF DST_REF > KN_TCTX_MAX#
      478     8863    2           THEN GOTO BAD_DST_REF;
      479     8864
      480     8865    2           CTX$ = KN$TCTX$(DST_REF);
      481     8866    2           IF CTX$ = ADDR(NIL)
      482     8867    3           THEN DO;
      483     8868    3                IF TYPE = %K_TPDU_TYPE_DR
      484     8869    4                THEN DO;
      485     8870    4                     IF TPDU_BUF.DST_REF = 0
      486     8871    4                     THEN GOTO BAD_DST_REF;
      487     8872
      488     8873    4                     IF TPDU_BUF.SRC_REF ~= 0
      489     8874    5                     THEN DO;
      490     8875    5                          DST_REF = 0;
      491     8876    5   RETURN_DC:
      492     8877    5                          CALL I$RETURN_DC;
      493     8878    5                          KN$NETPARM.ERRCODE = 0;
      494     8879    5                          END;
      495     8880    4                     END;
      496     8881
      497     8882    3                IF DST_REF ~= 0
      498     8883    4                THEN DO;
      499     8884    4   BAD_DST_REF:      ;
      500     8885    4                     IF TYPE = %K_TPDU_TYPE_CC
      501     8886    5                     THEN DO;
      502     8887    5                          REASON = 0;
      503     8888    5                          CALL I$RETURN_DR;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:16   
      504     8889    5                          END;
      505     8890
      506     8891    4                     END/*then do*/;
      507     8892    3   SET_BAD_DST_REF:
      508     8893    3                ERRNUM = %K_ERROR_DST_REF;
      509     8894    3                GOTO DISCARD_TPDU;
      510     8895    3                END/*do if ctx$ is nil*/;
      511     8896
      512     8897    2           KN$NETPARM.TCTX$ = CTX$;
      513     8898    2           KN$NETPARM.TCTX_ID = KN$TCTX.SRC_REF;
      514     8899
      515     8900    2           IF (TYPE=%K_TPDU_TYPE_DR OR TYPE=%K_TPDU_TYPE_DC)
      516     8901    2             AND ENTRY_SWITCH ~= %SEND_4HOST
      517     8902    3           THEN DO;
      518     8903    3                IF TPDU_BUF.SRC_REF ~= KN$TCTX.DST_REF
      519     8904    4                THEN DO;
      520     8905    4                     IF TYPE = %K_TPDU_TYPE_DC THEN GOTO SET_BAD_DST_REF;
      521     8906                                                /*ignore  -  see 6.9.4.2 c            */
      522     8907    4                     IF TYPE = %K_TPDU_TYPE_DR THEN GOTO RETURN_DC;
      523     8908                                                /*           see 6.9.4.2 d-1          */
      524     8909    4                     END/*bad dst_ref*/;
      525     8910    3                END/*tpdu_types with SRC_REF*/;
      526     8911
      527     8912        /* Make sure we got an extended format if thats what we expect.
      528     8913        */
      529     8914    2           IF KN$TCTX.OPTION.EXTENDED ~= '0'B
      530     8915    2           THEN IF K_TPDU_SIZE_EXT(TYPE) > TPDUSIZE
      531     8916    3                THEN DO;
      532     8917    3                     GOTO BAD_TPDU_LEN;
      533     8918    3                     END;
      534     8919
      535     8920        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:17   
      536     8921
      537     8922        /* TPDU header appears ok.  Find where the variable length parameters start.
      538     8923        */
      539     8924    2           IF KN$TCTX.OPTION.EXTENDED = '0'B
      540     8925    3           THEN DO;
      541     8926    3                IF KN$TCTX.CLASS=0 AND TYPE=%K_TPDU_TYPE_DT
      542     8927    4                THEN DO;
      543     8928    4                     TEMP = SIZEC(B$TPDU_DT_0);
      544     8929    4                     GOTO SET_PARMS;
      545     8930    4                     END;
      546     8931    3   FIND_PARMS:
      547     8932    3                TEMP = K_TPDU_SIZE(TYPE);
      548     8933    3                END;
      549     8934    2           ELSE TEMP = K_TPDU_SIZE_EXT(TYPE);
      550     8935
      551     8936    2   SET_PARMS:
      552     8937    2           PARM$ = PINCRC(TPDU$,TEMP);
      553     8938    2           PARMSIZE = LI - TEMP + 1;
      554     8939
      555     8940        /* Get set to pass the message up to session if msg is for this node.
      556     8941        */
      557     8942    2           IF ENTRY_SWITCH = %PRIMARY
      558     8943    3           THEN DO;
      559     8944    3                KN$NETPARM.SHDR_C$ = DATA$;
      560     8945    3                KN$NETPARM.SHDRSZ = DATASIZE;
      561     8946    3                END;
      562     8947
      563     8948
      564     8949        /* Now processing continues depending on the tpdu type.
      565     8950        */
      566     8951    2           IF TYPE=%K_TPDU_TYPE_DT OR TYPE=%K_TPDU_TYPE_AK /*fast path*/
      567     8952    3           THEN DO;
      568     8953    3                IF KN$TCTX.OPTION.TRACE THEN CALL KNT$TR_RECV(KN$NETPARM);
      569     8954    3                IF (KN$TCTX.STATE~=%K_TSTATE_OPEN) AND (KN$TCTX.STATE~=%K_TSTATE_AKWAIT
              8954                         )
      570     8955    3                THEN GOTO SET_BAD_TSTATE;
      571     8956    3                ELSE GOTO GOT_DATA1;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:18   
      572     8957    3                END;
      573     8958
      574     8959    2           CALL KNT$TR_RECV(KN$NETPARM);
      575     8960
      576     8961        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:19   
      577     8962        /*F* NAME: KNT$RECV - Connect Request TPDU received.
      578     8963        */
      579     8964    2           IF TYPE = %K_TPDU_TYPE_CR
      580     8965    3           THEN DO;
      581     8966    3                IF ENTRY_SWITCH = %SEND_4HOST THEN GOTO GET_TCTX;
      582     8967
      583     8968    3                IF KN$NETPARM.FUNCTION = %K_NDATA
      584     8969    4                THEN DO;
      585     8970    4                     IF (B$TPDU_CR.CLASS=0 AND DATASIZE>0) OR (DATASIZE > 32)
      586     8971    5                     THEN DO;
      587     8972    5                          ERRNUM = %K_ERROR_DATASZ;
      588     8973    5                          GOTO RETURN_TPDU_DR;
      589     8974    5                          END;
      590     8975    4                     END;
      591     8976
      592     8977    3                IF ( (B$TPDU_CR.CLASS ~= 4 ) AND
      593     8978    3                  (B$TPDU_CR.CLASS ~= 2) AND
      594     8979    3                  (B$TPDU_CR.CLASS ~= 0 ) )
      595     8980    3                  OR
      596     8981    3                  ( ( B$TPDU_CR.CLASS=0 OR B$TPDU_CR.CLASS=2)
      597     8982    3                  AND KN$NETPARM.FUNCTION~=%K_NDATA)
      598     8983    4                THEN DO;
      599     8984    4   REPORT_NEGOTIATION: ;
      600     8985    4                     ERRNUM = %K_ERROR_CLASS;
      601     8986    4                     REASON = %K_REASON_NEGOTIATION;
      602     8987    4                     GOTO RETURN_TPDU_DR2;
      603     8988    4                     END;
      604     8989
      605     8990        /* If this is a OSI connect request, it must be directed to or have
      606     8991           come from an adjacent host (at least for E00).
      607     8992        */
      608     8993    3                IF KN$NETPARM.FUNCTION=%K_NDATA AND ENTRY_SWITCH=%PRIMARY
      609     8994    4                THEN DO;
      610     8995    4                     GOTO REPORT_NEGOTIATION;
      611     8996    4                     END;
      612     8997
      613     8998        /* If this is a OSI CONS connection, it should be a VC Connection.
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:20   
      614     8999           In that case we should already have a TCTX with state WRCR_TPDU.
      615     9000        */
      616     9001    3                IF (ENTRY_SWITCH = %RECV_4HOST) AND (KN$NETPARM.LDCT$ ~= ADDR(NIL) )
      617     9002    4                THEN DO;
      618     9003    4                     IF LDCT_CIRCUIT
      619     9004    5                     THEN DO;
      620     9005    5                          CTX$ = KN$TCTX$(KN$LDCT.RLCID.TCTX#);
      621     9006
      622     9007    5                          IF KN$TCTX.STATE = %K_TSTATE_WFCR_TPDU
      623     9008    5                          THEN KN$TCTX.STATE = %K_TSTATE_CLOSED;
      624     9009    6                          ELSE DO;
      625     9010    6                               ERRNUM = %K_ERROR_DUP_CR;
      626     9011    6                               REASON = %K_REASON_NOTATTACHED;
      627     9012    6                               GOTO DISCARD_TPDU;
      628     9013    6                               END;
      629     9014
      630     9015    5                          KN$NETPARM.SRC_ADDR$ = ADDR(KN$TCTX.SRC_NSAP);
      631     9016    5                          KN$NETPARM.DST_ADDR$ = ADDR(KN$TCTX.DST_NSAP);
      632     9017    5                          KN$NETPARM.FLAGS.CONS = '1'B;
      633     9018    5                          GOTO GOT_TCTX;
      634     9019    5                          END;
      635     9020    4                     END/*do if osi class 0*/;
      636     9021
      637     9022        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:21   
      638     9023        /* Check for duplicate transportation connect request.
      639     9024           For OSI connections this is a match on NSAPs and DST_REF.
      640     9025           A duplicate transport connect request for CP-6 connections is
      641     9026           a match on NODE and QOS.
      642     9027        */
      643     9028    3                ERRNUM = 0;
      644     9029    3                IF KN$NETPARM.FUNCTION = %K_NDATA
      645     9030    4                THEN DO;
      646     9031    4                     IF KN$NETPARM.DST_ADDR$ = ADDR(NIL)
      647     9032    4                     THEN CALL TRANSPORT_SCREECH;
      648     9033
      649     9034    4                     CALL I$LOCATE_OSI ALTRET(GET_TCTX);
      650     9035
      651     9036    4                     GOTO LOG_BAD_TPDU;
      652     9037    4                     END;
      653     9038
      654     9039    4                ELSE DO;
      655     9040    4                     CALL I$LOCATE_CP6 ALTRET(GET_TCTX); /*pseudo timer set*/
      656     9041    4                     GOTO SET_BAD_TSTATE;
      657     9042    4                     END;
      658     9043
      659     9044        /* Get a Transport Context Block for the new connection.
      660     9045        */
      661     9046    3   GET_TCTX:    ;
      662     9047    3                CALL KNA$GETTCTX(CTX$)
      663     9048    4                WHENALTRETURN DO;
      664     9049    4                     ERRNUM = %KN_ERR_NOTCTX;
      665     9050    4                     REASON = %K_REASON_RMTCONGESTION;
      666     9051    4                     GOTO RETURN_TPDU_DR2;
      667     9052    4                     END;
      668     9053
      669     9054    3                KN$NETPARM.TCTX$ = CTX$;
      670     9055    3                KN$NETPARM.TCTX_ID = KN$TCTX.SRC_REF;
      671     9056
      672     9057    3                IF ENTRY_SWITCH = %PRIMARY
      673     9058    4                THEN DO;
      674     9059    4                     KN$TCTX.NODE = KN$NETPARM.NODE;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:22   
      675     9060    4                     GOTO GOT_TCTX;
      676     9061    4                     END;
      677     9062
      678     9063    3                IF KNT_TRACE_INTERMEDIATE ~= 0
      679     9064    3                THEN KN$TCTX.OPTION.TRACE = '1'B;
      680     9065
      681     9066    3                IF ENTRY_SWITCH = %RECV_4HOST
      682     9067    4                THEN DO;
      683     9068    4                     KN$TCTX.NODE = B$NHDR.SOURCE_NODE -1;
      684     9069    4                     KN$TCTX.HOST_NODE = B$NHDR.DEST_NODE -1;
      685     9070    4                     END;
      686     9071
      687     9072    3                IF ENTRY_SWITCH = %SEND_4HOST
      688     9073    4                THEN DO;
      689     9074    4                     KN$TCTX.NODE = B$NHDR.DEST_NODE -1;
      690     9075    4                     KN$TCTX.HOST_NODE = B$NHDR.SOURCE_NODE -1;
      691     9076    4                     END;
      692     9077
      693     9078    3   GOT_TCTX:    ;
      694     9079    3                IF ENTRY_SWITCH = %SEND_4HOST
      695     9080    3                THEN KN$TCTX.OUTBOUND = '1'B;
      696     9081
      697     9082    3                KN$TCTX.CLASS = B$TPDU_CR.CLASS;
      698     9083
      699     9084    3                IF KN$TCTX.CLASS=4 AND KNT_TRACE_CLASS4~=0
      700     9085    3                THEN KN$TCTX.OPTION.TRACE = '1'B;
      701     9086
      702     9087    3                IF KN$NETPARM.FUNCTION = %K_NDATA
      703     9088    4                THEN DO;
      704     9089    4                     KN$TCTX.OPTION.OSI = '1'B;
      705     9090    4                     KN$TCTX.SSN_CRDT = 0;
      706     9091
      707     9092    4                     IF NOT LDCT_CIRCUIT
      708     9093    5                     THEN DO;
      709     9094    5                          KN$TCTX.HOST_NODE = KN$NETPARM.NODE;
      710     9095    5                          KN$TCTX.NODE = 0;
      711     9096
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:23   
      712     9097    5                          IF ENTRY_SWITCH = %SEND_4HOST
      713     9098    6                          THEN DO;
      714     9099    6                               TEMP = KN$NETPARM.SRC_ADDR$->NSAP.LEN +1;
      715     9100    6                               ADDR(KN$TCTX.SRC_NSAP)->CHRBSD = KN$NETPARM.SRC_ADDR$->
              9100                                        CHRBSD;
      716     9101    6                               TEMP = KN$NETPARM.DST_ADDR$->NSAP.LEN +1;
      717     9102    6                               ADDR(KN$TCTX.DST_NSAP)->CHRBSD = KN$NETPARM.DST_ADDR$->
              9102                                        CHRBSD;
      718     9103    6                               END;
      719     9104    6                          ELSE DO;
      720     9105    6                               TEMP = KN$NETPARM.DST_ADDR$->NSAP.LEN +1;
      721     9106    6                               ADDR(KN$TCTX.SRC_NSAP)->CHRBSD = KN$NETPARM.DST_ADDR$->
              9106                                        CHRBSD;
      722     9107    6                               TEMP = KN$NETPARM.SRC_ADDR$->NSAP.LEN +1;
      723     9108    6                               ADDR(KN$TCTX.DST_NSAP)->CHRBSD = KN$NETPARM.SRC_ADDR$->
              9108                                        CHRBSD;
      724     9109    6                               END;
      725     9110    5                          END/*if not circuit*/;
      726     9111
      727     9112    4                     IF KNT_TRACE_OSI ~= 0
      728     9113    4                     THEN KN$TCTX.OPTION.TRACE = '1'B;
      729     9114    4                     END;
      730     9115
      731     9116        /* A call to I$CHK_PARMS validates the parmaters and begins
      732     9117           initialization of the tctx block.
      733     9118        */
      734     9119    3                CALL I$CHK_PARMS
      735     9120    4                WHENALTRETURN DO;
      736     9121    4   REJECT_CR:
      737     9122    4                     CALL I$RELCTX;
      738     9123
      739     9124    4                     IF ERRNUM = %K_ERROR_INVPARM_LEN THEN GOTO LOG_BAD_TPDU;
      740     9125
      741     9126    4                     REASON = ERRNUM;
      742     9127    4                     GOTO RETURN_TPDU_DR2;
      743     9128    4                     END/*altret from I$CHK_PARMS*/;
      744     9129
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:24   
      745     9130    3                IF KN$TCTX.CLASS=2
      746     9131    4                THEN DO;
      747     9132    4                     IF KN$TCTX.OPTION.EXPEDITED='1'B AND B$TPDU_CR.CLASS_2_FLOW='1'B
      748     9133    5                     THEN DO;
      749     9134    5                          ERRNUM = %K_ERROR_PROTOCOL;
      750     9135    5                          GOTO REJECT_CR;
      751     9136    5                          END;
      752     9137    4                     END;
      753     9138
      754     9139    3                KN$NETPARM.TCTX$ = CTX$;
      755     9140    3                KN$NETPARM.TCTX_ID = KN$TCTX.SRC_REF;
      756     9141
      757     9142        /* Check the checksum parameter on the tpcu_cr if there is one.
      758     9143        */
      759     9144    3                IF ENTRY_SWITCH ~= %SEND_4HOST
      760     9145    4                THEN DO;
      761     9146    4                     IF (KN$TCTX.CLASS = 4) AND (KNT_DO_CHKSUM ~= 0)
      762     9147    5                     THEN DO;
      763     9148    5                          CALL KNA$CHK_CHKSUM(TPDU$,TPDUSIZE)
      764     9149    6                          WHENALTRETURN DO;
      765     9150    6                               CALL I$RELCTX;
      766     9151    6                               GOTO COUNT_BAD_CHKSUM;
      767     9152    6                               END/*altret*/;
      768     9153    5                          END/*class 4*/;
      769     9154    4                     END/*do if not send_4host*/;
      770     9155
      771     9156        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:25   
      772     9157        /* To get here, state must be CLOSED, WFCC, or WFCC_R.
      773     9158        */
      774     9159
      775     9160    3                KN$TCTX.DST_REF = TPDU_BUF.SRC_REF;
      776     9161
      777     9162    3                CALL I$COMMON_INIT;
      778     9163
      779     9164    3                KN$TCTX.SEND_RETRY_COUNT = KN$TCTX.SEND_RETRY_COUNT + 1;
      780     9165
      781     9166    3                KN$TCTX.QOS = KN$NETPARM.QOS;
      782     9167
      783     9168        /* If this is a CP-6 Session connect request for this fep, call
      784     9169           session with his init request.  Then return a TPDU_CC.
      785     9170        */
      786     9171    3                IF ENTRY_SWITCH = %PRIMARY
      787     9172    4                THEN DO;
      788     9173    4                     KN$TCTX.PRIMARY = '1'B;
      789     9174    4                     KN$TCTX.INBOUND = '1'B;
      790     9175
      791     9176    4                     IF KN$NETPARM.SHDRSZ > 6
              9176                              /* 6 is minimum size of cp-6 ssn header */
      792     9177    5                     THEN DO;
      793     9178    5                          CALL KNS$RECV(KN$NETPARM)
      794     9179    6                          WHENALTRETURN DO;
      795     9180    6   SES_TRN_ERR:                ;
      796     9181                                                /* see SES_TRN_ERR in the QDP code.   */
      797     9182    6                               END;
      798     9183    5                          END/*do if session data*/;
      799     9184
      800     9185    4                     IF KN$TCTX.STATE ~= %K_TSTATE_WFCC_R
      801     9186    5                     THEN DO;
      802     9187    5                          IF KN$TCTX.CLASS = 4
      803     9188    5                          THEN KN$TCTX.STATE = %K_TSTATE_AKWAIT;
      804     9189    5                          ELSE KN$TCTX.STATE = %K_TSTATE_OPEN;
      805     9190    5                          END;
      806     9191
      807     9192    4                     CALL KNT$SEND_CC(KN$NETPARM);
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:26   
      808     9193
      809     9194    4                     IF KN$TCTX.CLASS ~= 4
      810     9195    4                     THEN CALL KNT$RLS_CHAIN(KN$TCTX);
      811     9196    5                     ELSE DO;
      812     9197    5                          KN$TCTX.SEND_RETRY_COUNT = 1;
      813     9198    5                          CALL I$SET_RETRAN;
      814     9199    5                          END;
      815     9200
      816     9201    4                     RETURN;
      817     9202    4                     END/*do if primary*/;
      818     9203
      819     9204        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:27   
      820     9205        /* If we just received this connect request for the host, we have
      821     9206           remembered the requesting src_ref in tctx.dst_ref.  Now modify
      822     9207           the tpdu.src_ref to contains the index into our intermediate tctx.
      823     9208           State of the tctx is set to WFTRESP.
      824     9209        */
      825     9210    3                IF ENTRY_SWITCH = %SEND_4HOST
      826     9211    4                THEN DO;
      827     9212    4                     KN$TCTX.HOST_REF = TPDU_BUF.SRC_REF;
      828     9213    4                     KN$TCTX.DST_REF = 0;
      829     9214
      830     9215    4                     IF KN$NETPARM.FPT$ ~= ADDR(NIL)
      831     9216    5                     THEN DO;
      832     9217    5                          IF B$TR_OPTIONS.TR_FLAGS.TRACE
      833     9218    5                          THEN KN$TCTX.OPTION.TRACE = '1'B;
      834     9219
      835     9220    5                          IF B$TR_OPTIONS.TR_FLAGS.CLNS = '0'B
      836     9221    5                          THEN KN$TCTX.OPTION.CONS = '1'B;
      837     9222
      838     9223    5                          KN$TCTX.TPDUSZ_PARM = B$TR_OPTIONS.TPDUSZ_PARM;
      839     9224    5                          KN$TCTX.RCV_WINDOW_SZ = B$TR_OPTIONS.WINDOWSZ;
      840     9225    5                          KN$TCTX.QOS = B$TR_OPTIONS.QOS;
      841     9226    5                          END;
      842     9227    4                     END;
      843     9228
      844     9229    3                NEXT$->B$TPDU_CR.SRC_REF = KN$TCTX.SRC_REF;
      845     9230
      846     9231        /* If we were called to decode the tpdu_cr for knt$send_4host, this
      847     9232           is an OSI session connection as the host never generates tpdu_cr
      848     9233           for CP6 connections.  If this is class 4, we generate the checksum
      849     9234           parameter for the host.  If using Connectionless Network the state
      850     9235           of the tctx is set to WFCC; if CONS, the state is set to WFNC.
      851     9236           We return to send_4host where the tpdu-cr will be saved and sent on.
      852     9237        */
      853     9238    3                IF ENTRY_SWITCH = %SEND_4HOST
      854     9239    4                THEN DO;
      855     9240    4                     IF KN$TCTX.CLASS = 4
      856     9241    4                     THEN CALL KNA$CALC_CHKSUM(TPDU$, TPDUSIZE, GOT_CHKSUM);
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:28   
      857     9242
      858     9243    4                     IF KN$TCTX.CLASS = 2
      859     9244    4                     THEN KN$NETPARM.THDR_C$->B$TPDU_CR.CDT = KN$TCTX.RCV_WINDOW_SZ;
      860     9245
      861     9246    4                     IF KN$TCTX.OPTION.CONS
      862     9247    4                     THEN KN$TCTX.STATE = %K_TSTATE_WFNC;
      863     9248    4                     ELSE KN$TCTX.STATE = %K_TSTATE_WFCC;
      864     9249
      865     9250    4                     RETURN;
      866     9251    4                     END/*do if send_4host*/;
      867     9252
      868     9253        /* If we were called to recv_4host, the tpdu_cr may be either for a
      869     9254           CP-6 or OSI connection.  If its OSI, the tpdu_cr is forwarded by
      870     9255           a call to KNN$SEND where the cp6 style header is built.  If its CP6,
      871     9256           the network header should be Ok as is, so we can forward the tpdu_cr
      872     9257           to the host by returning to KNN$RECV.
      873     9258        */
      874     9259    4                ELSE DO;
      875     9260    4                     KN$TCTX.STATE = %K_TSTATE_WFTRESP;
      876     9261
      877     9262    4                     CALL KNT$TR_FHOST(KN$NETPARM);
      878     9263    4                     KN$NETPARM.MSGSZ = 0;
      879     9264    4                     KN$NETPARM.UHDRSZ = 0;
      880     9265    4                     KN$NETPARM.SHDRSZ = 0;
      881     9266    4                     KN$NETPARM.THDR_C$ = NEXT$;
      882     9267    4                     KN$NETPARM.THDRSZ = TPDUSIZE;
      883     9268
      884     9269    4                     IF KN$NETPARM.FUNCTION ~= %K_NDATA
      885     9270    5                     THEN DO;
      886     9271    5                          RETURN;          /*so knn$recv will call knh$send*/
      887     9272    5                          END/*do for CP-6 connections*/;
      888     9273
      889     9274    5                     ELSE DO;
      890     9275                                 /*netparm.src_addr$ and .dst_addr$ remain unchanged*/
      891     9276    5                          KN$NETPARM.NODE = KN$TCTX.HOST_NODE;
      892     9277
      893     9278    5                          KN$NETPARM.FUNCTION = %K_NCONNECT_REQ;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:29   
      894     9279                                                /*so knn will build MSGTYP_CL0#       */
      895     9280
      896     9281    5                          CALL KNN$SEND(KN$NETPARM)
      897     9282    6                          WHENALTRETURN DO;
      898     9283                                         /*N*  Save_frag?  set errcode=0*/
      899     9284    6                               CALL TRANSPORT_SCREECH; /*N* for now*/
      900     9285    6                               END;
      901     9286    5                          ALTRETURN/*to avoid sending twice*/;
      902     9287    5                          END/*do for OSI connections*/;
      903     9288
      904     9289    4                     END/*do if recv_4host*/;
      905     9290    3                END/*do if TPDU_CR*/;
      906     9291
      907     9292        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:30   
      908     9293        /*F* NAME: KNT$RECV - Connect Confirm TPDU received.
      909     9294
      910     9295        KNT$RECV can be called with a TPCU_CC for primary fep transport
      911     9296        connections and host intermediate connections.  KNT$SEND_4HOST will
      912     9297        also call KNT$RECV if forwarding a class 4 TPDU_CC in order to
      913     9298        locate the checksum parameter and fill in the checksum.
      914     9299        */
      915     9300    2           IF TYPE = %K_TPDU_TYPE_CC
      916     9301    3           THEN DO;
      917     9302    3                IF ( KN$TCTX.STATE ~= %K_TSTATE_WFCC ) AND
      918     9303    3                  ( KN$TCTX.DST_REF ~= TPDU_BUF.SRC_REF )
      919     9304    4                THEN DO;
      920     9305    4                     DST_REF = 0; REASON = 0; CALL I$RETURN_DR;
      921     9306    4   SET_BAD_TSTATE:
      922     9307    4                     ERRNUM = %K_ERROR_BAD_TSTATE; GOTO LOG_BAD_TPDU;
      923     9308    4                     END;
      924     9309
      925     9310    3                IF ENTRY_SWITCH = %SEND_4HOST
      926     9311    3                THEN KN$TCTX.HOST_REF = TPDU_BUF.SRC_REF;
      927     9312    3                ELSE KN$TCTX.DST_REF = TPDU_BUF.SRC_REF;
      928     9313
      929     9314    3                IF ( (B$TPDU_CR.CLASS ~= 4) AND
      930     9315    3                  (B$TPDU_CR.CLASS ~= 0) AND
      931     9316    3                  (B$TPDU_CR.CLASS ~= 2) )
      932     9317    4                THEN DO;
      933     9318    4   REJECT_CLASS:
      934     9319    4                     ERRNUM = %K_ERROR_CLASS;
      935     9320    4                     KN$TCTX.REASON = %K_REASON_NEGOTIATION;
      936     9321    4                     GOTO CC_ERROR;
      937     9322    4                     END;
      938     9323
      939     9324    3                IF B$TPDU_CR.CLASS > KN$TCTX.CLASS
      940     9325    3                THEN GOTO REJECT_CLASS;
      941     9326
      942     9327    3                IF B$TPDU_CR.CLASS < KN$TCTX.CLASS
      943     9328    4                THEN DO;
      944     9329    4                     IF B$TPDU_CR.CLASS=0
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:31   
      945     9330    5                     THEN DO;
      946     9331    5                          IF LDCT_CIRCUIT = '0'B
      947     9332    5                          THEN GOTO REJECT_CLASS;
      948     9333
      949     9334    5                          KN$TCTX.OPTION.EXPEDITED = '0'B;
      950     9335    5                          KN$TCTX.OPTION.EXTENDED = '0'B;
      951     9336    5                          END;
      952     9337
      953     9338    4                     IF B$TPDU_CR.CLASS ~= 2
      954     9339    4                     THEN KN$TCTX.OPTION.CLASS_2_FLOW = '0'B;
      955     9340
      956     9341    4                     IF B$TPDU_CR.CLASS ~= 4
      957     9342    4                     THEN KN$TCTX.OPTION.CHKSUM = '0'B;
      958     9343
      959     9344    4                     END/*downward class negotiation*/;
      960     9345
      961     9346    3   ACCEPT_CLASS:
      962     9347    3                KN$TCTX.CLASS = B$TPDU_CR.CLASS;
      963     9348
      964     9349    3                IF KN$TCTX.CLASS=4 AND KNT_TRACE_CLASS4~=0
      965     9350    3                THEN KN$TCTX.OPTION.TRACE = '1'B;
      966     9351
      967     9352    3                IF KN$TCTX.CLASS ~= 4
      968     9353    3                THEN KN$TCTX.OPTION.CHKSUM = '0'B;
      969     9354
      970     9355    3                IF KN$NETPARM.FUNCTION ~= %K_NDATA
      971     9356    3                THEN GOTO CHECK_CC_PARMS;
      972     9357
      973     9358    3                IF (B$TPDU_CR.CLASS=0 AND DATASIZE>0) OR (DATASIZE > 32)
      974     9359    4                THEN DO;
      975     9360    4                     ERRNUM = %K_ERROR_DATASZ;
      976     9361    4                     KN$TCTX.REASON = %K_REASON_PROTOCOL;
      977     9362    4                     GOTO CC_ERROR;
      978     9363    4                     END;
      979     9364
      980     9365    3   CHECK_CC_PARMS: ;
      981     9366    3                CALL I$CHK_PARMS
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:32   
      982     9367    4                WHENALTRETURN DO;
      983     9368    4                     IF ERRNUM = %K_ERROR_INVPARM_LEN THEN GOTO LOG_BAD_TPDU;
      984     9369
      985     9370    4                     KN$TCTX.REASON = ERRNUM;
      986     9371    4   CC_ERROR:         ;
      987     9372    4                     IF KN$TCTX.STATE = %K_TSTATE_WBCL
      988     9373    4                     THEN GOTO BYPASS_TDISCONN;
      989     9374
      990     9375    4                     IF KN$TCTX.STATE=%K_TSTATE_WFCC
      991     9376    5                     THEN DO;
      992     9377    5                          CALL I$REPORT_TDISCON;
      993     9378
      994     9379    5   BYPASS_TDISCONN:       ;
      995     9380    5                          IF KN$TCTX.CLASS = 2
      996     9381    5                          THEN GOTO SET_CLOSING;
      997     9382
      998     9383    5                          IF KN$TCTX.CLASS = 4
      999     9384    6                          THEN DO;
     1000     9385    6                               KN$TCTX.SEND_RETRY_COUNT = 1;
     1001     9386    6                               CALL I$SET_RETRAN;
     1002     9387    6   SET_CLOSING:
     1003     9388    6                               KN$TCTX.STATE = %K_TSTATE_CLOSING;
     1004     9389    6                               CALL KNT$SEND_DR(KN$NETPARM);
     1005     9390    6                               END;
     1006     9391
     1007     9392    5                          IF KN$TCTX.CLASS= 0 AND KN$TCTX.OPTION.OSI
     1008     9393    6                          THEN DO;
     1009     9394                                    /*N* CALL NDISCreq */
     1010     9395    6                               KN$TCTX.STATE = %K_TSTATE_CLOSED;
     1011     9396    6                               CALL KNA$RELTCTX(CTX$);
     1012     9397    6                               END;
     1013     9398
     1014     9399    5                          END/*do if wfcc and wbcl*/;
     1015     9400    4                     GOTO LOG_BAD_TPDU;
     1016     9401    4                     END/*whenaltreturn*/;
     1017     9402
     1018     9403    3                IF ENTRY_SWITCH ~= %SEND_4HOST
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:33   
     1019     9404    4                THEN DO;
     1020     9405    4                     IF (KN$TCTX.OPTION.CHKSUM ~= '0'B) AND (KNT_DO_CHKSUM ~= 0)
     1021     9406    4                     THEN CALL KNA$CHK_CHKSUM(TPDU$,TPDUSIZE) ALTRET(LOG_BAD_CHKSUM);
     1022     9407    4                     END;
     1023     9408
     1024     9409        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:34   
     1025     9410        /* Got a good tpdu_cc.
     1026     9411        */
     1027     9412    3                IF KN$TCTX.STATE = %K_TSTATE_WFCC
     1028     9413    3                  OR KN$TCTX.STATE = %K_TSTATE_WFCC_R
     1029     9414    4                THEN DO;
     1030     9415    4                     CALL KNT$RLS_CHAIN(KN$TCTX);
     1031     9416
     1032     9417    4                     CALL I$COMMON_INIT;
     1033     9418
     1034     9419    4                     KN$TCTX.SEND_RETRY_COUNT = 0;
     1035     9420
     1036     9421    4                     IF ENTRY_SWITCH ~= %PRIMARY
     1037     9422    5                     THEN DO;
     1038     9423    5                          NEXT$->B$TPDU_CR.SRC_REF = KN$TCTX.SRC_REF;
     1039     9424    5                          NEXT$->B$TPDU_CR.DST_REF = KN$TCTX.HOST_REF;
     1040     9425
     1041     9426    5                          IF ENTRY_SWITCH = %SEND_4HOST
     1042     9427    6                          THEN DO;
     1043     9428    6                               NEXT$->B$TPDU_CR.DST_REF = KN$TCTX.DST_REF;
     1044     9429
     1045     9430    6                               KN$TCTX.INBOUND = '1'B;
     1046     9431
     1047     9432    6                               IF KN$TCTX.CLASS = 4
     1048     9433    6                               THEN KN$TCTX.STATE = %K_TSTATE_AKWAIT;
     1049     9434    6                               ELSE KN$TCTX.STATE = %K_TSTATE_OPEN;
     1050     9435
     1051     9436    6                               IF GOT_CHKSUM ~= 0
     1052     9437    6                               THEN CALL KNA$CALC_CHKSUM(TPDU$, TPDUSIZE, GOT_CHKSUM);
     1053     9438
     1054     9439    6                               RETURN;
     1055     9440    6                               END;
     1056     9441    5                          END;
     1057     9442
     1058     9443    4                     KN$TCTX.STATE = %K_TSTATE_OPEN;
     1059     9444    4                     CALL I$CANCEL_RETRAN;
     1060     9445
     1061     9446        /* Send an AK TPDU to complete the 3-way TPDU exchange.
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:35   
     1062     9447        */
     1063     9448    4                     IF KN$TCTX.CLASS = 4
     1064     9449    5                     THEN DO;
     1065     9450    5                          CALL I$SET_WINDOW;
     1066     9451    5                          CALL I$SET_INACTIVITY;
     1067     9452    5                          CALL KNT$SEND_AK(KN$NETPARM);
     1068     9453    5                          END/*do if class 4*/;
     1069     9454
     1070     9455    4                     IF ENTRY_SWITCH = %RECV_4HOST
     1071     9456    5                     THEN DO;
     1072     9457    5                          KN$NETPARM.MSGSZ = 0;
     1073     9458    5                          HOST_TPDUC$ = NEXT$;
     1074     9459
     1075     9460    5                          IF KN$TCTX.OPTION.TRACE = '0'B
     1076     9461    5                          THEN CALL KNT$TR_FHOST(KN$NETPARM);
     1077     9462
     1078     9463    5                          CALL I$FORWARD_2HOST
     1079     9464    6                          WHENALTRETURN DO;
     1080     9465    6                               CALL TRANSPORT_SCREECH;
     1081     9466    6                               END;
     1082     9467
     1083     9468    5                          RETURN;
     1084     9469    5                          END;
     1085     9470
     1086     9471        /* If this completes an CP6 Session connection on this node,
     1087     9472           report it now.
     1088     9473        */
     1089     9474    4                     IF KN$TCTX.LNK$ ~= ADDR(NIL)
     1090     9475    4                     THEN CALL KNT$UNQ_OPEN(KN$TCTX.LNK$);
     1091     9476
     1092     9477    4                     RETURN;
     1093     9478    4                     END/*do if WFCC or WFCC_R*/;
     1094     9479
     1095     9480    3                IF KN$TCTX.CLASS=0
     1096     9481    3                THEN RETURN/*all done for 0*/;
     1097     9482
     1098     9483    3                IF KN$TCTX.STATE=%K_TSTATE_OPEN AND KN$TCTX.CLASS=4
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:36   
     1099     9484    4                THEN DO;
     1100     9485    4                     CALL KNT$SEND_AK(KN$NETPARM);
     1101     9486    4                     CALL I$SET_INACTIVITY;
     1102     9487    4                     END;
     1103     9488
     1104     9489    3                IF KN$TCTX.STATE = %K_TSTATE_CLOSING
     1105     9490    3                  OR KN$TCTX.STATE = %K_TSTATE_REFWAIT
     1106     9491    3                  OR KN$TCTX.STATE = %K_TSTATE_CLOSED
     1107     9492    3                THEN GOTO SEND_DRN;
     1108     9493
     1109     9494    3                IF KN$TCTX.STATE = %K_TSTATE_WBCL
     1110     9495    4                THEN DO;
     1111     9496    4                     IF KN$TCTX.CLASS = 4
     1112     9497    5                     THEN DO;
     1113     9498    5                          KN$TCTX.SEND_RETRY_COUNT = 1;
     1114     9499    5                          CALL I$SET_RETRAN;
     1115     9500    5                          END;
     1116     9501    4                     KN$TCTX.STATE = %K_TSTATE_CLOSING;
     1117     9502    4   SEND_DRN:
     1118     9503    4                     DST_REF = 0; REASON = %K_REASON_NORMAL; CALL I$RETURN_DR;
     1119     9504    4                     END;
     1120     9505
     1121     9506    3                RETURN;
     1122     9507
     1123     9508    3                END/*do if TPCU_CC*/;
     1124     9509        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:37   
     1125     9510
     1126     9511
     1127     9512
     1128     9513        /* Now check for specific errors for the TPDU type received.
     1129     9514        */
     1130     9515
     1131     9516    2   GOT_DATA1: ;
     1132     9517    2           SUBSEQ = 0;
     1133     9518    2           CALL I$CHK_PARMS  ALTRET(LOG_BAD_TPDU);
     1134     9519
     1135     9520    2           IF KN$TCTX.OPTION.CHKSUM ~= '0'B
     1136     9521    3           THEN DO;
     1137     9522    3                IF GOT_CHKSUM =0
     1138     9523    3                THEN GOTO LOG_BAD_CHKSUM;
     1139     9524    4                ELSE DO;
     1140     9525    4                     IF KNT_DO_CHKSUM ~= 0
     1141     9526    4                     THEN CALL KNA$CHK_CHKSUM(TPDU$,TPDUSIZE) ALTRET(LOG_BAD_CHKSUM);
     1142     9527    4                     END/*got_chksum*/;
     1143     9528    3                END;
     1144     9529
     1145     9530    2           IF TYPE = %K_TPDU_TYPE_DT THEN GOTO GOT_DATA2; /*fast path*/
     1146     9531
     1147     9532        /* And again begin processing depending on tpdu type.
     1148     9533        */
     1149     9534    3           DO CASE (TYPE);
     1150     9535
     1151     9536        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:38   
     1152     9537        /*F* NAME: KNT$RECV - Disconnect Request received.
     1153     9538
     1154     9539        */
     1155     9540
     1156     9541    3            CASE(%K_TPDU_TYPE_DR);
     1157     9542
     1158     9543    3              IF ENTRY_SWITCH = %SEND_4HOST
     1159     9544    3              THEN RETURN;                 /*just here to decode parameters      */
     1160     9545
     1161     9546    3              IF KN$TCTX.STATE ~= %K_TSTATE_WFCC
     1162     9547    3              THEN IF DST_REF = 0
     1163     9548    4                   THEN DO;
     1164     9549    4                        CTX$ = ADDR(NIL);
     1165     9550    5                        DO TCTX# = 1 TO KN_TCTX_MAX#;
     1166     9551    5                             IF KN$TCTX$(TCTX#) ~= ADDR(NIL)
     1167     9552    5                             THEN IF ( KN$TCTX$(TCTX#)->KN$TCTX.DST_REF = TPDU_BUF.
              9552                                      SRC_REF ) AND
     1168     9553    5                                    ( (KN$TCTX$(TCTX#)->KN$TCTX.STATE = %
              9553                                             K_TSTATE_AKWAIT) OR
     1169     9554    5                                    (KN$TCTX$(TCTX#)->KN$TCTX.STATE = %K_TSTATE_WFTRESP
              9554                                             ))
     1170     9555    5                                  THEN CTX$ = KN$TCTX$(TCTX#);
     1171     9556
     1172     9557    5                             IF CTX$ = ADDR(NIL)
     1173     9558    5                             THEN GOTO RETURN_TPDU_DC;
     1174     9559    5                             END/*do 1 to maxtran*/;
     1175     9560    4                        END/*do if dst_ref is 0*/;
     1176     9561
     1177     9562    4                   ELSE DO;
     1178     9563    4                        IF KN$TCTX.DST_REF ~= TPDU_BUF.SRC_REF
     1179     9564    5                        THEN DO;
     1180     9565    5   RETURN_TPDU_DC:           ;
     1181     9566    5                             CALL I$RETURN_DC;
     1182     9567    5                             RETURN;
     1183     9568    5                             END;
     1184     9569    4                        END/*do if dst_ref is valid*/;
     1185     9570
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:39   
     1186     9571    3              CALL KNT$RLS_CHAIN(KN$TCTX);
     1187     9572
     1188     9573    4              DO CASE (KN$TCTX.STATE);
     1189     9574
     1190     9575    4               CASE ( %K_TSTATE_OPEN );
     1191     9576    4                 KN$TCTX.REASON = B$TPDU_DR.REASON;
     1192     9577    4                 CALL I$SET_REFWAIT;
     1193     9578    4                 CALL I$REPORT_TDISCON2;
     1194     9579    4                 GOTO SEND_DC2;
     1195     9580
     1196     9581    4               CASE ( %K_TSTATE_AKWAIT );
     1197     9582    4                 CALL I$SET_REFWAIT;
     1198     9583    4                 GOTO SEND_DC2;
     1199     9584
     1200     9585    4               CASE ( %K_TSTATE_WFCC );
     1201     9586    4                 KN$TCTX.REASON = B$TPDU_DR.REASON;
     1202     9587    4                 CALL I$REPORT_TDISCON2;
     1203     9588
     1204     9589    4                 CALL I$SET_REFWAIT;
     1205     9590    4                 KN$TCTX.DST_REF = TPDU_BUF.SRC_REF;
     1206     9591    4                 GOTO SEND_DC;
     1207     9592
     1208     9593    4               CASE ( %K_TSTATE_WBCL );
     1209     9594    4                 CALL I$SET_REFWAIT;
     1210     9595    4                 GOTO SEND_DC;
     1211     9596
     1212     9597    4               CASE ( %K_TSTATE_REFWAIT, %K_TSTATE_CLOSED);
     1213     9598    4   SEND_DC:
     1214     9599    4                 IF TPDU_BUF.SRC_REF ~= 0
     1215     9600    5                 THEN DO;
     1216     9601    5   SEND_DC2:
     1217     9602    5                      IF KN$TCTX.CLASS=4 OR KN$TCTX.CLASS=2
     1218     9603    6                      THEN DO;
     1219     9604    6                           KN$NETPARM.NODE = KN$TCTX.NODE;
     1220     9605    6                           CALL KNT$SEND_DC(KN$NETPARM);
     1221     9606    6                           END;
     1222     9607    5                      END;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:40   
     1223     9608
     1224     9609
     1225     9610    4               CASE ( %K_TSTATE_WFTRESP );
     1226     9611    4                 CALL I$CANCEL_RETRAN;
     1227     9612    4                 CALL I$REPORT_TDISCON2;
     1228     9613    4                 CALL KNT$SEND_DC(KN$NETPARM);
     1229     9614    4                 CALL I$SET_REFWAIT;
     1230     9615
     1231     9616    4               CASE ( %K_TSTATE_CLOSING );
     1232     9617    4                 CALL I$SET_REFWAIT;
     1233     9618
     1234     9619    4                 END/*do case(state)*/;
     1235     9620
     1236     9621    3              RETURN;
     1237     9622        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:41   
     1238     9623        /*F* NAME: KNT$RECV - Disconnect Confirm received.
     1239     9624
     1240     9625        TPDU_DCs are only used with OSI Class 2 and Class 4 connections.
     1241     9626        */
     1242     9627    3            CASE(%K_TPDU_TYPE_DC);
     1243     9628
     1244     9629    3              IF KN$TCTX.CLASS~=4 AND KN$TCTX.CLASS~=2
     1245     9630    3              THEN GOTO LOG_BAD_TPDU_TYPE;
     1246     9631
     1247     9632    3              IF KN$TCTX.DST_REF ~= TPDU_BUF.SRC_REF
     1248     9633    3              THEN GOTO SET_BAD_DST_REF;
     1249     9634
     1250     9635    3              IF KN$TCTX.STATE ~= %K_TSTATE_CLOSING
     1251     9636    3              THEN GOTO SET_BAD_TSTATE;
     1252     9637
     1253     9638    3              CALL I$SET_REFWAIT;
     1254     9639
     1255     9640    3              IF KN$TCTX.OPTION.CONS
     1256     9641    3                AND KN$TCTX.OUTBOUND
     1257     9642    4              THEN DO;
     1258     9643    4                   KN$NETPARM.UHDRSZ = 0;
     1259     9644    4                   KN$NETPARM.THDRSZ = 0;
     1260     9645    4                   KN$NETPARM.NHDRSZ = 0;
     1261     9646    4                   KN$NETPARM.FUNCTION = %KN_FCN_TERM;
     1262     9647    4                   KN$NETPARM.LDCT$ = KN$LDCT$(KN$TCTX.LDCTX#);
     1263     9648
     1264     9649    4                   CALL KNH$SEND(KN$NETPARM)
     1265     9650    5                   WHENALTRETURN DO;
     1266     9651    5                        ERRNUM = %K_ERROR_NETWORK;
     1267     9652    5                        GOTO LOG_BAD_TPDU;
     1268     9653    5                        END;
     1269     9654    4                   RETURN;
     1270     9655    4                   END;
     1271     9656
     1272     9657        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:42   
     1273     9658        /*F* NAME: KNT$RECV - Data TPDU received.
     1274     9659        */
     1275     9660
     1276     9661    3            CASE(%K_TPDU_TYPE_DT);
     1277     9662    3   GOT_DATA2: ;
     1278     9663    3              IF TPDUSIZE > KN$TCTX.TPDUSZ
     1279     9664    4              THEN DO;
     1280     9665    4                   ERRNUM = %K_ERROR_DATASZ; GOTO LOG_BAD_TPDU;
     1281     9666    4                   END;
     1282     9667
     1283     9668    3              IF KN$TCTX.STATE = %K_TSTATE_OPEN
     1284     9669    4              THEN DO;
     1285     9670    4   CLASS_4_OPENED: ;
     1286     9671    4                   IF KN$TCTX.CLASS = 0
     1287     9672    5                   THEN DO;
     1288     9673    5                        EOT = B$TPDU_DT_0.EOT;
     1289     9674    5                        TPDU_NR = KN$TCTX.RECV_LWE;
     1290     9675    5                        END;
     1291     9676
     1292     9677    5                   ELSE DO;
     1293     9678    5                        EOT = B$TPDU_DT.EOT;
     1294     9679    5                        IF KN$TCTX.OPTION.EXTENDED ~= '0'B
     1295     9680    5                        THEN TPDU_NR = B$TPDU_DT_EXT.TPDU_NR;
     1296     9681    5                        ELSE TPDU_NR = B$TPDU_DT.TPDU_NR;
     1297     9682    5                        END;
     1298     9683
     1299     9684    5                   DO WHILE ( TPDU_NR > KN$TCTX.MAXSEQ );
     1300     9685    5                        TPDU_NR = TPDU_NR - KN$TCTX.MAXSEQ - 1;
     1301     9686    5                        END;
     1302     9687
     1303     9688    4                   IF KN$TCTX.CLASS=2 AND KN$TCTX.OPTION.CLASS_2_FLOW='0'B
     1304     9689    4                   THEN GOTO RESET_LWE;
     1305     9690
     1306     9691    4                   IF KN$TCTX.CLASS=0
     1307     9692    5                   THEN DO;
     1308     9693    5   RESET_LWE:
     1309     9694    5                        KN$TCTX.RECV_LWE = TPDU_NR; /*fake out class4 test below*/
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:43   
     1310     9695    5                        GOTO DELIVER_2SESSION;
     1311     9696    5                        END;
     1312     9697
     1313     9698    4                   IF KN$TCTX.CLASS = 4
     1314     9699    4                   THEN CALL I$SET_INACTIVITY;
     1315     9700
     1316     9701        /* If the received DT TPDU is outside the transmission window, discard
     1317     9702           the TPDU, but send an AK TPDU with up-to-date window information.
     1318     9703        */
     1319     9704    4                   IF KN$TCTX.RECV_LWE > KN$TCTX.RECV_UWE
     1320     9705    5                   THEN DO;
     1321     9706    5                        IF ( TPDU_NR >= KN$TCTX.RECV_UWE ) AND
     1322     9707    5                          (TPDU_NR < KN$TCTX.RECV_LWE )
     1323     9708    5                        THEN GOTO SEND_ACK;
     1324     9709    5                        END;
     1325     9710
     1326     9711    5                   ELSE DO;
     1327     9712    5                        IF ( TPDU_NR >= KN$TCTX.RECV_UWE) OR
     1328     9713    5                          ( TPDU_NR < KN$TCTX.RECV_LWE )
     1329     9714    6                        THEN DO;
     1330     9715    6   SEND_ACK:                 ;
     1331     9716    6                             KN$TCTX.RERR.DT_NWINDOW = KN$TCTX.RERR.DT_NWINDOW +1;
     1332     9717
     1333     9718    6                             IF KN$TCTX.CLASS =2
     1334     9719    7                             THEN DO;
     1335     9720    7   SET_SEQ_ERR:
     1336     9721    7                                  KN$TCTX.ERR = %K_ERROR_LOST_TPDU;
     1337     9722    7   SET_PROT_ERR:
     1338     9723    7                                  KN$TCTX.REASON = %K_REASON_PROTOCOL;
     1339     9724    7                                  GOTO SET_CLOSING;
     1340     9725    7                                  END;
     1341     9726
     1342     9727    6                             IF NOT KN$TCTX.LOST_TPDU
     1343     9728    6                             THEN CALL KNT$SEND_AK(KN$NETPARM);
     1344     9729    6                             ERRNUM = %K_ERROR_NWINDOW; GOTO DISCARD_TPDU;
     1345     9730    6                             END;
     1346     9731    5                        END;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:44   
     1347     9732
     1348     9733        /* See if we need to buffer a TPDU received out of sequence or if
     1349     9734           we need to reassemble a segmented SPDU.  If so, call KNT$SAVE_FRAG.
     1350     9735        */
     1351     9736    4   DELIVER_2SESSION: ;
     1352     9737    4                   IF TPDU_NR ~= KN$TCTX.RECV_NEXT
     1353     9738    4                   THEN GOTO SAVE_FRAG;
     1354     9739
     1355     9740    4                   IF ( EOT = '0'B ) OR
     1356     9741    4                     (KN$TCTX.HOST_CQ_FULL = '1'B)
     1357     9742    5                   THEN DO;
     1358     9743    5   SAVE_FRAG:
     1359     9744    5                        CALL KNT$SAVE_FRAG(KN$TCTX, TPDU_NR, EOT, DATA$, DATASIZE)
     1360     9745    6                        WHENALTRETURN DO;
     1361     9746    6                             IF KN$TCTX.CLASS ~= 0
     1362     9747    6                             THEN NEXT$->B$TPDU_DT_C.DST_REF = KN$TCTX.SRC_REF;
     1363     9748    6   CANT_REASSEM:             ;
     1364     9749    6                             KN$NETPARM.ERRCODE = %KN_ERR_NOQ2;
     1365     9750
     1366     9751    6                             IF NOT KN$NETPARM.SLDCT$->KN$LDCT.FLAGS.QUEUED
     1367     9752    7                             THEN DO;
     1368     9753    7                                  KN$NETPARM.SLDCT$->KN$LDCT.FLAGS.QUEUED = '1'B;
     1369     9754    7                                  KN$NETPARM.SLDCT$->KN$LDCT.LNK$ = KNT_WAIT_HEAD$;
     1370     9755    7                                  KNT_WAIT_HEAD$ = KN$NETPARM.SLDCT$;
     1371     9756    7                                  KNT_WAIT_COUNT = KNT_WAIT_COUNT +1;
     1372     9757    7                                  END;
     1373     9758    6                             ALTRETURN;
     1374     9759    6                             END;
     1375     9760
     1376     9761    5                        IF EOT AND KN$TCTX.SSN_CRDT = 0
     1377     9762    5                        THEN KN$TCTX.SSN_CRDT = -1;
     1378     9763                                                /*so we dont send ack*/
     1379     9764
     1380     9765    5                        IF KN$TCTX.LOST_TPDU
     1381     9766    6                        THEN DO;           /*for lost non-eot tpdus              */
     1382     9767    6                             IF KN$TCTX.RECV_HEAD$->FRAG_HDR.SEQ = KN$TCTX.RECV_NEXT
     1383     9768    7                             THEN DO;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:45   
     1384     9769    7                                  KN$TCTX.LOST_TPDU = '0'B;
     1385     9770    7                                  END;
     1386     9771    6                             END;
     1387     9772
     1388     9773    5                        CALL KNT$DSESSION(KN$NETPARM) ALTRET(CANT_REASSEM);
     1389     9774    5                        GOTO FIX_LWE;
     1390     9775    5                        END/*do if not eot or out of sequence*/;
     1391     9776
     1392     9777        /* pass the message on up to local fep session or send it on to the
     1393     9778           adjacent host.
     1394     9779        */
     1395     9780    4                   IF KN$TCTX.PRIMARY
     1396     9781    5                   THEN DO;
     1397     9782    5                        CALL KNS$RECV(KN$NETPARM)
     1398     9783    6                        WHENALTRETURN DO;
     1399     9784    6                             ALTRETURN;
     1400     9785    6                             END;
     1401     9786    5                        END/*do if primary*/;
     1402     9787
     1403     9788    5                   ELSE DO;
     1404     9789    5                        IF KN$TCTX.OPTION.OSI
     1405     9790    6                        THEN DO;
     1406     9791    6                             IF KN$TCTX.SSN_CRDT <= 0
     1407     9792    7                             THEN DO;
     1408     9793    7                                  KN$TCTX.RERR.NSESS_CDT = KN$TCTX.RERR.NSESS_CDT +1;
     1409     9794    7                                  GOTO SAVE_FRAG;
     1410     9795    7                                  END;
     1411     9796    6                             END;
     1412     9797
     1413     9798    5                        IF KN$TCTX.CLASS ~= 0
     1414     9799    6                        THEN DO;
     1415     9800    6                             HOST_TPDUC$ = TPDU$;
     1416     9801    6                             KN$NETPARM.SHDRSZ = 0;
     1417     9802    6                             END;
     1418     9803
     1419     9804    6                        ELSE DO;      /*must build a tpdu_dt header with .dst_ref*/
     1420     9805    6                             TPDUSIZE = SIZEC(B$TPDU_DT);
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:46   
     1421     9806    6                             HOST_TPDU$ = ADDR(TPDU_BUF);
     1422     9807    6                             B$TPDU_DT.LI = SIZEC(B$TPDU_DT) -1;
     1423     9808    6                             B$TPDU_DT.TYPE = %K_TPDU_TYPE_DT;
     1424     9809    6                             B$TPDU_DT.TPDU_NR = TPDU_NR;
     1425     9810    6                             B$TPDU_DT.EOT = '1'B;
     1426     9811
     1427     9812    6                             KN$NETPARM.MSG$ = DATA$;
     1428     9813    6                             KN$NETPARM.MSGSZ = DATASIZE;
     1429     9814    6                             END;
     1430     9815
     1431     9816    5                        CALL I$FORWARD_2HOST
     1432     9817    6                        WHENALTRETURN DO;
     1433     9818    6                             KN$TCTX.HOST_CQ_FULL = '1'B;
     1434     9819    6                             KN$NETPARM.ERRCODE = 0;
     1435     9820    6                             GOTO SAVE_FRAG;
     1436     9821    6                             END;
     1437     9822
     1438     9823    5                        IF KN$TCTX.OPTION.OSI
     1439     9824    5                        THEN KN$TCTX.SSN_CRDT = KN$TCTX.SSN_CRDT -1;
     1440     9825    5                        END;
     1441     9826
     1442     9827        /* count up the number of msgs received on this connection.
     1443     9828        */
     1444     9829    4                   KN$TCTX.RECV_NEXT = KN$TCTX.RECV_NEXT +1;
     1445     9830
     1446     9831    4                   IF KN$TCTX.RECV_NEXT > KN$TCTX.MAXSEQ
     1447     9832    4                   THEN KN$TCTX.RECV_NEXT = KN$TCTX.RECV_NEXT - KN$TCTX.MAXSEQ -1;
     1448     9833
     1449     9834    4   FIX_LWE:
     1450     9835    4                   IF KN$TCTX.CLASS = 4 OR KN$TCTX.OPTION.OSI
     1451     9836    5                   THEN DO;
     1452     9837    5                        IF TPDU_NR = KN$TCTX.RECV_LWE
     1453     9838    5                        THEN KN$TCTX.RECV_LWE = TPDU_NR + 1;
     1454     9839
     1455     9840    5                        IF TPDU_NR >= KN$TCTX.MAXSEQ
     1456     9841    5                        THEN KN$TCTX.RECV_LWE = TPDU_NR - KN$TCTX.MAXSEQ;
     1457     9842    5                        END/*do if class4 or osi*/;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:47   
     1458     9843
     1459     9844    4                   IF KN$TCTX.RECV_HEAD$ ~= ADDR(NIL)
     1460     9845    4                     AND KN$TCTX.RECV_HEAD$->FRAG_HDR.SEQ = KN$TCTX.RECV_NEXT
     1461     9846    5                   THEN DO;
     1462     9847    5                        KN$TCTX.LOST_TPDU = '0'B;
     1463     9848    5                        CALL KNT$DSESSION(KN$NETPARM);
     1464     9849    5                        END;
     1465     9850
     1466     9851        /* See if its time to send an AK TPDU.
     1467     9852        */
     1468     9853    4                   IF ( KN$TCTX.CLASS=4
     1469     9854    4                     OR (KN$TCTX.CLASS=2 AND KN$TCTX.OPTION.CLASS_2_FLOW='1'B) )
     1470     9855    4                     AND NOT KN$TCTX.LOST_TPDU
     1471     9856    4                     AND KN$TCTX.SSN_CRDT >= 0
     1472     9857    5                   THEN DO;
     1473     9858    5                        CDT = KN$TCTX.RECV_UWE - KN$TCTX.RECV_NEXT;
     1474     9859
     1475     9860    5                        IF CDT < 0
     1476     9861    5                        THEN CDT = CDT + KN$TCTX.MAXSEQ + 1;
     1477     9862
     1478     9863    5                        IF ( ( KN$TCTX.RCV_WINDOW_SZ - CDT) > KNT_HOLDBACK )
              9863                                 /* > max# of unacked allowed*/
     1479     9864    5                        THEN CALL KNT$SEND_AK(KN$NETPARM);
     1480     9865
     1481     9866    6                        ELSE DO;
     1482     9867    6                             IF KN$TCTX.CLASS=4 AND
     1483     9868    6                               KNT_HOLDBACK~=0  AND
     1484     9869    6                               ((KN$TCTX.RCV_WINDOW_SZ - CDT) = 1 )
     1485     9870    7                             THEN DO;
     1486     9871    7                                  CALL I$SET_WINDOW;
     1487     9872    7                                  END;
     1488     9873    6                             END;
     1489     9874
     1490     9875    5                        END/*do if class 4*/;
     1491     9876
     1492     9877    4                   IF KN$TCTX.SSN_CRDT = -1
     1493     9878    4                   THEN KN$TCTX.SSN_CRDT = 0;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:48   
     1494     9879
     1495     9880    4                   RETURN;
     1496     9881    4                   END/*do if open*/;
     1497     9882
     1498     9883    3              IF KN$TCTX.STATE = %K_TSTATE_AKWAIT
     1499     9884    4              THEN DO;
     1500     9885    4                   CALL I$SET_OPEN;
     1501     9886    4                   GOTO CLASS_4_OPENED;
     1502     9887    4                   END/*do if akwait*/;
     1503     9888
     1504     9889    3              ELSE GOTO SET_BAD_TSTATE;
     1505     9890        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:49   
     1506     9891        /*F* NAME: KNT$RECV - Expedited Data Received
     1507     9892
     1508     9893        TPDU_EDs are only used by Class 4 OSI transport connections,
     1509     9894        so if we got here, it was obviously from KNT$RECV_4HOST.
     1510     9895        */
     1511     9896
     1512     9897    3            CASE(%K_TPDU_TYPE_ED);
     1513     9898    3              IF DATASIZE > 16
     1514     9899    4              THEN DO;
     1515     9900    4                   ERRNUM = %K_ERROR_DATASZ; GOTO LOG_BAD_TPDU;
     1516     9901    4                   END;
     1517     9902
     1518     9903    3              IF KN$TCTX.OPTION.EXPEDITED = '0'B
     1519     9904    4              THEN DO;
     1520     9905    4                   ERRNUM = %K_ERROR_NOEXPD; GOTO LOG_BAD_TPDU;
     1521     9906    4                   END;
     1522     9907
     1523     9908    3              IF KN$TCTX.STATE = %K_TSTATE_OPEN
     1524     9909    4              THEN DO;
     1525     9910    4   GOT_TPDU_ED:    ;
     1526     9911    4                   IF KN$TCTX.CLASS = 4
     1527     9912    5                   THEN DO;
     1528     9913    5                        CALL I$SET_INACTIVITY;
     1529     9914    5                        END;
     1530     9915
     1531     9916    4                   IF KN$TCTX.OPTION.EXTENDED ~= '0'B
     1532     9917    4                   THEN TPDU_NR = B$TPDU_DT_EXT.TPDU_NR;
     1533     9918    4                   ELSE TPDU_NR = B$TPDU_DT.TPDU_NR;
     1534     9919
     1535     9920    4                   IF TPDU_NR ~= KN$TCTX.RECV_EXPD
     1536     9921    5                   THEN DO;
     1537     9922    5                        IF TPDU_NR +1 = KN$TCTX.RECV_EXPD
     1538     9923    5                        THEN GOTO ACK_DUP_ED;
     1539     9924
     1540     9925    5                        IF KN$TCTX.RECV_EXPD=0 AND TPDU_NR=KN$TCTX.MAXSEQ
     1541     9926    6                        THEN DO;
     1542     9927    6                             KN$TCTX.RECV_EXPD = KN$TCTX.MAXSEQ+1;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:50   
     1543     9928    6   ACK_DUP_ED:               ;
     1544     9929    6                             KN$TCTX.RECV_EXPD = KN$TCTX.RECV_EXPD - 1;
     1545     9930    6                             CALL KNT$SEND_EA(KN$NETPARM);
     1546     9931    6                             GOTO FIX_RECV_EXPD;
     1547     9932    6                             END;
     1548     9933    5                        RETURN;            /*discard out of sequence*/
     1549     9934    5                        END;
     1550     9935
     1551     9936    4                   CALL KNT$SEND_EA(KN$NETPARM);
     1552     9937
     1553     9938    4                   HOST_TPDUC$ = TPDU$;
     1554     9939    4                   KN$NETPARM.MSGSZ = 0;
     1555     9940    4                   CALL I$FORWARD_2HOST
     1556     9941    5                   WHENALTRETURN DO;
     1557     9942    5   LEAVE_ON_Q:
     1558     9943    5                        KN$TCTX.HOST_CQ_FULL = '1'B;
     1559     9944        /* leave             KN$NETPARM.ERRCODE = %KN_ERR_NOQ; */
     1560     9945    5                        ALTRETURN;
     1561     9946    5                        END;
     1562     9947
     1563     9948    4   FIX_RECV_EXPD:  ;
     1564     9949    4                   KN$TCTX.RECV_EXPD = KN$TCTX.RECV_EXPD + 1;
     1565     9950    4                   IF KN$TCTX.RECV_EXPD > KN$TCTX.MAXSEQ
     1566     9951    4                   THEN KN$TCTX.RECV_EXPD = 0;
     1567     9952    4                   END/*do if open*/;
     1568     9953
     1569     9954    3              IF KN$TCTX.STATE = %K_TSTATE_AKWAIT
     1570     9955    4              THEN DO;
     1571     9956    4                   CALL I$SET_OPEN;
     1572     9957    4                   GOTO GOT_TPDU_ED;
     1573     9958    4                   END/*do if akwait*/;
     1574     9959
     1575     9960    3              RETURN;
     1576     9961
     1577     9962        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:51   
     1578     9963        /*F* NAME: KNT$RECV - Expedited Data Ack received.
     1579     9964
     1580     9965        TPDU_EAs are only used by Class 4 OSI transport connections.
     1581     9966        */
     1582     9967    3            CASE(%K_TPDU_TYPE_EA);
     1583     9968
     1584     9969    3              IF KN$TCTX.OPTION.EXPEDITED = '0'B
     1585     9970    4              THEN DO;
     1586     9971    4                   ERRNUM = %K_ERROR_NOEXPD; GOTO LOG_BAD_TPDU;
     1587     9972    4                   END;
     1588     9973
     1589     9974    3              IF KN$TCTX.OPTION.EXTENDED ~= '0'B
     1590     9975    3              THEN YR_TU_NR = B$TPDU_EA_EXT.YR_TU_NR;
     1591     9976    3              ELSE YR_TU_NR = B$TPDU_EA.YR_EDTU_NR;
     1592     9977
     1593     9978    3              IF KN$TCTX.STATE = %K_TSTATE_OPEN
     1594     9979    4              THEN DO;
     1595     9980    4                   CALL I$DO_EACK;
     1596     9981    4                   GOTO SEND_DT;
     1597     9982    4                   END;
     1598     9983        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:52   
     1599     9984        /*F* NAME: KNT$RECV - Data Ack received.
     1600     9985        */
     1601     9986
     1602     9987    3            CASE(%K_TPDU_TYPE_AK);
     1603     9988
     1604     9989    3              IF KN$TCTX.OPTION.EXTENDED ~= '0'B
     1605     9990    4              THEN DO;
     1606     9991    4                   YR_TU_NR = B$TPDU_AK_EXT.YR_TU_NR;
     1607     9992    4                   CDT = B$TPDU_AK_EXT.CDT;
     1608     9993    4                   END;
     1609     9994    4              ELSE DO;
     1610     9995    4                   YR_TU_NR = B$TPDU_AK.YR_TU_NR;
     1611     9996    4                   CDT = B$TPDU_AK.CDT;
     1612     9997    4                   END;
     1613     9998
     1614     9999    3              IF KN$TCTX.SEND_NOTSENT$ ~= ADDR(NIL)
     1615    10000    3              THEN TPDU_NR = KN$TCTX.SEND_NOTSENT$->FRAG_HDR.SEQ;
     1616    10001    3              ELSE TPDU_NR = KN$TCTX.SEND_NEXT;
     1617    10002
     1618    10003    3              DUPLICATE_AK = 0;
     1619    10004
     1620    10005    3              IF KN$TCTX.CLASS = 2
     1621    10006    3              THEN GOTO ACK_CLASS2;
     1622    10007
     1623    10008    3              IF KN$TCTX.SEND_LWE > TPDU_NR
     1624    10009    4              THEN DO;
     1625    10010    4                   IF ( YR_TU_NR > TPDU_NR ) AND
     1626    10011    4                     (YR_TU_NR < KN$TCTX.SEND_LWE )
     1627    10012    4                   THEN GOTO BAD_AK;
     1628    10013    4                   END;
     1629    10014    4              ELSE DO;
     1630    10015    4                   IF ( YR_TU_NR > TPDU_NR ) OR
     1631    10016    4                     ( YR_TU_NR < KN$TCTX.SEND_LWE )
     1632    10017    5                   THEN DO;
     1633    10018    5   BAD_AK:              ;
     1634    10019    5                        KN$TCTX.RERR.AK_NWINDOW = KN$TCTX.RERR.AK_NWINDOW +1;
     1635    10020    5                        ERRNUM = %K_ERROR_AK_NWINDOW;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:53   
     1636    10021
     1637    10022    5                        IF KN$TCTX.CLASS = 4
     1638    10023    5                        THEN GOTO DISCARD_TPDU;
     1639    10024    5                        ELSE GOTO SET_PROT_ERR;
     1640    10025    5                        END;
     1641    10026    4                   END;
     1642    10027
     1643    10028    3              IF (YR_TU_NR = KN$TCTX.SEND_LWE) AND
     1644    10029    3                (SUBSEQ < KN$TCTX.SEND_SUBSEQ)
     1645    10030    4              THEN DO;
     1646    10031    4                   KN$TCTX.RERR.AK_SUBSEQ = KN$TCTX.RERR.AK_SUBSEQ +1;
     1647    10032    4                   ERRNUM = %K_ERROR_AK_SUBSEQU; GOTO DISCARD_TPDU;
     1648    10033    4                   END;
     1649    10034
     1650    10035        /* See if we should respond with a TPDU_AK with the Flow Control
     1651    10036           Confirmation parameter.
     1652    10037        */
     1653    10038
     1654    10039    3              IF YR_TU_NR = KN$TCTX.SEND_LWE
     1655    10040    3                AND YR_TU_NR + CDT_UBIN = KN$TCTX.SEND_UWE
     1656    10041    3                AND SUBSEQ = KN$TCTX.SEND_SUBSEQ
     1657    10042    4              THEN DO;
     1658    10043    4                   DUPLICATE_AK = 1;       /* duplicate tpdu_ak*/
     1659    10044    4                   IF GOT_FCC = 0          /* not containing fcc*/
     1660    10045    4                   THEN GOTO SEND_FCC;
     1661    10046    4                   END;
     1662    10047
     1663    10048    3              IF YR_TU_NR + CDT_UBIN > KN$TCTX.SEND_UWE /* increases UWE*/
     1664    10049    3                AND YR_TU_NR = KN$TCTX.SEND_LWE /* but not LWE*/
     1665    10050    4              THEN DO;
     1666    10051    4                   IF KN$TCTX.SEND_LWE = KN$TCTX.SEND_UWE
     1667    10052                                                /* and UWE was = LWE*/
     1668    10053    4                   THEN GOTO SEND_FCC;
     1669    10054
     1670    10055    4                   IF YR_TU_NR + CDT_UBIN < KN$TCTX.SEND_UWE
     1671    10056                                                /* following credit reduction*/
     1672    10057                                                          /*N* probably more needed here */
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:54   
     1673    10058    5                   THEN DO;
     1674    10059    5   SEND_FCC:
     1675    10060    5                        KN$NETPARM.FPT$ = BUF$; /*overlay the tpdu copy in auto  */
     1676    10061    5                        B$TPARM_FCC.CODE = %K_TPARM_FCC;
     1677    10062    5                        B$TPARM_FCC.LEN = 8;
     1678    10063    5                        B$TPARM_FCC.FCC.LWE = YR_TU_NR;
     1679    10064    5                        B$TPARM_FCC.FCC.YR_SUBSEQ = SUBSEQ;
     1680    10065    5                        B$TPARM_FCC.FCC.CDT = CDT;
     1681    10066
     1682    10067    5                        CALL KNT$SEND_AK_FCC(KN$NETPARM);
     1683    10068    5                        KN$NETPARM.FPT$ = ADDR(NIL);
     1684    10069    5                        END;
     1685    10070    4                   END;
     1686    10071
     1687    10072    3              KN$TCTX.SEND_SUBSEQ = SUBSEQ;
     1688    10073
     1689    10074    3   ACK_CLASS2:
     1690    10075    3              IF KN$TCTX.STATE = %K_TSTATE_OPEN
     1691    10076    4              THEN DO;
     1692    10077    4                   IF DUPLICATE_AK ~= 0
     1693    10078    4                   THEN GOTO CONT_ACK;
     1694    10079
     1695    10080    4                   GOTO ACK_DT;
     1696    10081    4                   END;
     1697    10082
     1698    10083    3              IF KN$TCTX.STATE = %K_TSTATE_AKWAIT
     1699    10084    4              THEN DO;
     1700    10085    4                   CALL I$SET_OPEN;
     1701    10086    4                   CALL I$CANCEL_RETRAN;
     1702    10087    4                   CALL I$SET_WINDOW;
     1703    10088
     1704    10089    4                   IF KN$TCTX.OPTION.OSI = '1'B
     1705    10090    5                   THEN DO;
     1706    10091    5                        HOST_TPDUC$ = TPDU$;
     1707    10092    5                        KN$NETPARM.MSGSZ = 0;
     1708    10093    5                        CALL I$FORWARD_2HOST ALTRET(LEAVE_ON_Q);
     1709    10094    5                        END;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:55   
     1710    10095
     1711    10096    4   ACK_DT:
     1712    10097    4                   CALL I$DO_ACK;
     1713    10098
     1714    10099    4                   IF CDT = 0 THEN GOTO CONT_ACK;
     1715    10100
     1716    10101    4                   IF KN$TCTX.SEND_UWE < KN$TCTX.SEND_LWE
     1717    10102    4                   THEN YR_TU_NR = KN$TCTX.SEND_LWE + KN$TCTX.SEND_UWE;
     1718    10103    4                   ELSE YR_TU_NR = KN$TCTX.SEND_UWE;
     1719    10104
     1720    10105    4                   IF YR_TU_NR < TPDU_NR
     1721    10106    5                   THEN DO;
     1722    10107    5                        CALL KNT$RETRANS_LOST(KN$NETPARM);
     1723    10108    5                        END;
     1724    10109
     1725    10110    5                   ELSE DO;
     1726    10111    5   SEND_DT:             ;
     1727    10112    5                        CALL KNT$SEND_ED(KN$NETPARM);
     1728    10113    5                        CALL KNT$SEND_DT(KN$NETPARM);
     1729    10114    5                        END;
     1730    10115
     1731    10116    4   CONT_ACK:
     1732    10117    4                   IF KN$TCTX.CLASS=4 THEN CALL I$SET_INACTIVITY;
     1733    10118    4                   IF KN$TCTX.LNK$ ~= ADDR(NIL)
     1734    10119    4                   THEN CALL KNT$UNQ_FLOW(KN$TCTX.LNK$);
     1735    10120    4                   END;
     1736    10121
     1737    10122        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:56   
     1738    10123        /*F* NAME: KNT$RECV - Error TPDU received.
     1739    10124        */
     1740    10125    3            CASE(%K_TPDU_TYPE_ER);
     1741    10126
     1742    10127    3              IF KN$TCTX.STATE = %K_TSTATE_WBCL
     1743    10128    3                OR KN$TCTX.STATE = %K_TSTATE_CLOSING
     1744    10129    4              THEN DO;
     1745    10130    4                   CALL I$SET_REFWAIT;
     1746    10131    4                   END;
     1747    10132
     1748    10133    3              IF KN$TCTX.STATE = %K_TSTATE_AKWAIT
     1749    10134    3              THEN GOTO INIT_CLOSING;
     1750    10135
     1751    10136    3              IF KN$TCTX.STATE = %K_TSTATE_OPEN
     1752    10137    4              THEN DO;
     1753    10138    4                   CALL I$CANCEL_WINDOW;
     1754    10139    4                   CALL I$CANCEL_INACTIVITY;
     1755    10140    4   INIT_CLOSING:   ;
     1756    10141    4                   CALL I$SET_RETRAN;
     1757    10142    4                   KN$TCTX.SEND_RETRY_COUNT = 1;
     1758    10143    4                   KN$TCTX.STATE = %K_TSTATE_CLOSING;
     1759    10144    4                   CALL KNT$SEND_DR(KN$NETPARM);
     1760    10145    4                   CALL I$REPORT_TDISCON;
     1761    10146    4                   END;
     1762    10147
     1763    10148    3              IF KN$TCTX.STATE = %K_TSTATE_WFCC
     1764    10149    4              THEN DO;
     1765    10150    4                   CALL I$SET_REFWAIT;
     1766    10151    4                   CALL I$REPORT_TDISCON;
     1767    10152    4                   END;
     1768    10153
     1769    10154        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:57   
     1770    10155
     1771    10156    3            CASE(ELSE);
     1772    10157
     1773    10158    3              ERRNUM = %K_ERROR_TPDU_TYPE; GOTO LOG_BAD_TPDU;
     1774    10159
     1775    10160    3              END/*do case(type)*/;
     1776    10161
     1777    10162    2           END/*do while*/;
     1778    10163
     1779    10164    1      RETURN;
     1780    10165
     1781    10166        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:58   
     1782    10167        /*I* NAME: Internal Routines
     1783    10168
     1784    10169        */
     1785    10170
     1786    10171        /*I* NAME: I$LOCATE_CP6
     1787    10172
     1788    10173             PURPOSE: to find duplicate CP6 connect requests.
     1789    10174        */
     1790    10175
     1791    10176    1   I$LOCATE_CP6: PROC ALTRET;
     1792    10177    3      DO TCTX# = 1 TO KN_TCTX_MAX#;
     1793    10178    3           IF KN$TCTX$(TCTX#) ~= ADDR(NIL)
     1794    10179    4           THEN DO;
     1795    10180    4                CTX$ = KN$TCTX$(TCTX#);
     1796    10181
     1797    10182    4                IF KN$TCTX.STATE = %K_TSTATE_WFCC
     1798    10183    4                  OR KN$TCTX.STATE = %K_TSTATE_WFCC_R
     1799    10184    4                  OR KN$TCTX.STATE = %K_TSTATE_AKWAIT
     1800    10185    4                  OR (KN$TCTX.STATE=%K_TSTATE_OPEN AND KN$TCTX.PRIMARY)
     1801    10186    4                  OR (KN$TCTX.STATE=%K_TSTATE_WFTRESP AND KN$TCTX.PRIMARY='0'B)
     1802    10187    5                THEN DO;
     1803    10188    5                     IF KN$TCTX.NODE = B$NHDR.SOURCE_NODE -1
     1804    10189    6                     THEN DO;
     1805    10190    6                          IF ENTRY_SWITCH = %RECV_4HOST
     1806    10191    6                          THEN IF KN$TCTX.PRIMARY
     1807    10192    6                               THEN GOTO NOT_SAME_TCTX;
     1808    10193
     1809    10194    6                          IF KN$TCTX.STATE = %K_TSTATE_OPEN /*duplicate primary*/
     1810    10195    6                            OR KN$TCTX.STATE = %K_TSTATE_WFTRESP
             10195                                     /*duplicate intermediate*/
     1811    10196    7                          THEN DO;
     1812    10197    7                               CLOCK_ID.TCTX = TCTX#;
     1813    10198    7                               CLOCK_ID.TMR = %K_TTIMER_PSEUDO;
     1814    10199    7                               CALL KNT$TTIMER(CLOCK_ID);
             10199                                        /*to begin disconnect process*/
     1815    10200    7                               GOTO NOT_SAME_TCTX;
     1816    10201    7                               END;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:59   
     1817    10202
     1818    10203    6                          KN$TCTX.STATE = %K_TSTATE_WFCC_R;
     1819    10204    6                          CALL KNT$RLS_CHAIN(KN$TCTX);
     1820    10205    6                          RETURN/*match found*/;
     1821    10206    6                          END/*do if match on node*/;
     1822    10207    5   NOT_SAME_TCTX:
     1823    10208    5                     END/*do if active state*/;
     1824    10209    4                END/*do if ctx$ not nil*/;
     1825    10210    3           END/*do while*/;
     1826    10211
     1827    10212    2      ALTRETURN/*no match round*/;
     1828    10213    2   END I$LOCATE_CP6;
     1829    10214
     1830    10215
     1831    10216        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:60   
     1832    10217        /*I* NAME: I$LOCATE_OSI
     1833    10218
     1834    10219             PURPOSE: to find duplicate OSI connect requests.
     1835    10220        */
     1836    10221
     1837    10222    1   I$LOCATE_OSI: PROC ALTRET;
     1838    10223    3      DO TCTX# = 1 TO KN_TCTX_MAX#;
     1839    10224    3           IF KN$TCTX$(TCTX#) ~= ADDR(NIL)
     1840    10225    4           THEN DO;
     1841    10226    4                CTX$ = KN$TCTX$(TCTX#);
     1842    10227
     1843    10228    4                IF KN$TCTX.STATE > %K_TSTATE_CLOSED
     1844    10229    4                  AND KN$TCTX.STATE < %K_TSTATE_CLOSING
     1845    10230    5                THEN DO;
     1846    10231                                                /* check duplicate NSAP               */
     1847    10232
     1848    10233    5                     IF KN$NETPARM.DST_ADDR$->NSAP.LEN ~=
     1849    10234    5                       KN$TCTX$(TCTX#)->KN$TCTX.DST_NSAP.LEN
     1850    10235    5                     THEN GOTO NOT_SAME_NSAP;
     1851    10236
     1852    10237    5                     TEMP = KN$NETPARM.DST_ADDR$->NSAP.LEN;
     1853    10238    5                     IF KN$NETPARM.DST_ADDR$->CHRBSD ~=
     1854    10239    5                       ADDR(KN$TCTX$(TCTX#)->KN$TCTX.DST_NSAP)->CHRBSD
     1855    10240    5                     THEN GOTO NOT_SAME_NSAP;
     1856    10241
     1857    10242                                                /* check duplicate DEST_REF           */
     1858    10243    5   CHECK_DST_REF:    ;
     1859    10244    5                     IF KN$TCTX$(TCTX#)->KN$TCTX.DST_REF = TPDU_BUF.SRC_REF
     1860    10245    6                     THEN DO;
     1861    10246    6                          CTX$ = KN$TCTX$(TCTX#);
     1862    10247
     1863    10248    6                          IF KN$TCTX.STATE = %K_TSTATE_OPEN
     1864    10249    7                          THEN DO;
     1865    10250    7                               CALL I$SET_INACTIVITY;
     1866    10251    7                               GOTO SET_CR_DUP;
     1867    10252    7                               END;
     1868    10253
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:61   
     1869    10254    6                          IF KN$TCTX.STATE = %K_TSTATE_AKWAIT
     1870    10255    7                          THEN DO;
     1871    10256    7                               CALL KNT$RETRANS(KN$NETPARM); /*retransmit tpdu_cc*/
     1872    10257    7                               GOTO SET_CR_DUP;
     1873    10258    7                               END;
     1874    10259
     1875    10260    6   SET_CR_DUP:
     1876    10261    6                          ERRNUM = %K_ERROR_DUP_CR;
     1877    10262    6                          RETURN;
     1878    10263    6                          END/*do if dst_ref match*/;
     1879    10264    5   NOT_SAME_NSAP:    ;
     1880    10265    5                     END/*do if active state*/;
     1881    10266    4                END/*do if ctx$ not nil*/;
     1882    10267    3           END/*do while*/;
     1883    10268
     1884    10269    2      ALTRETURN/*no match round*/;
     1885    10270    2   END I$LOCATE_OSI;
     1886    10271        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:62   
     1887    10272        /*I* NAME: I$COMMON_INIT
     1888    10273
     1889    10274             PURPOSE: To do common initialization of the TCTXC for both
     1890    10275                      TPDU_CR and TPDU_CC.
     1891    10276        */
     1892    10277
     1893    10278    1   I$COMMON_INIT: PROC;
     1894    10279
     1895    10280    2      KN$TCTX.OPTION.EXTENDED = B$TPDU_CR.EXT_FMT_FLAG;
     1896    10281
     1897    10282    2      IF KN$TCTX.CLASS = 2
     1898    10283    3      THEN DO;
     1899    10284    3           IF B$TPDU_CR.CLASS_2_FLOW = '0'B
     1900    10285    3           THEN KN$TCTX.OPTION.CLASS_2_FLOW = '1'B;
     1901    10286    3           END;
     1902    10287
     1903    10288
     1904    10289    2      IF KN$TCTX.OPTION.EXTENDED = '0'B
     1905    10290    3      THEN DO;              /*gettctx set up for extended format - the default*/
     1906    10291    3           KN$TCTX.MAXSEQ = 127;
     1907    10292    3           KN$TCTX.RCV_WINDOW_SZ = KNT_WINDOW_NORMAL;
     1908    10293    3           KN$TCTX.RECV_UWE = KN$TCTX.RCV_WINDOW_SZ;
     1909    10294    3           END;
     1910    10295
     1911    10296    2      IF LDCT_CIRCUIT
     1912    10297    2      THEN KN$TCTX.OPTION.CONS = '1'B;
     1913    10298
     1914    10299    2      KN$TCTX.TPDUSZ = K_TPDUSZ_VALUES(KN$TCTX.TPDUSZ_PARM);
     1915    10300
     1916    10301    2      KN$TCTX.SEND_UWE = TPDU_BUF.CDT;
     1917    10302
     1918    10303    2      RETURN;
     1919    10304
     1920    10305    2   END I$COMMON_INIT;
     1921    10306        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:63   
     1922    10307        /*I* NAME: I$FORWARD_2HOST
     1923    10308
     1924    10309             PURPOSE: To forward a (possibly un-concatenated) TPDU to the host
     1925    10310                      after KNT$RECV has been called at its RECV_4HOST entry.
     1926    10311
     1927    10312                      KN$NETPARM.MSG$ and .MSGSZ may frame session aligned or
     1928    10313                      unaligned data.
     1929    10314
     1930    10315                      HOST_TPDU$ and TPDUSIZE should frame transport aligned or
     1931    10316                      unaligned data.
     1932    10317        */
     1933    10318
     1934    10319    1   I$FORWARD_2HOST: PROC ALTRET;
     1935    10320    2      HOST_TPDUC$->B$TPDU_DT_C.DST_REF = KN$TCTX.HOST_REF;
     1936    10321
     1937    10322    2      KN$NETPARM.FUNCTION = %KN_FCN_DATA;
     1938    10323    2      KN$NETPARM.NODE = KN$TCTX.HOST_NODE;
     1939    10324    2      KN$NETPARM.SLDCT$ = ADDR(KNT_UNQ_LDCT);
     1940    10325    2      KN$NETPARM.THDR_C$ = HOST_TPDUC$;
     1941    10326    2      KN$NETPARM.THDRSZ = TPDUSIZE;
     1942    10327
     1943    10328    2      KN$NETPARM.UHDRSZ = 0;
     1944    10329    2      KN$NETPARM.SHDRSZ = 0;
     1945    10330
     1946    10331    2      CALL KNN$SEND(KN$NETPARM)
     1947    10332    3      WHENALTRETURN DO;  /*N* altret routine wont work if concatenated tpdus*/
     1948    10333        /*leave KN$NETPARM.ERRCODE = %KN_ERR_NOQ; */
     1949    10334    3           KN$TCTX.RERR.NBUF_NOQ = KN$TCTX.RERR.NBUF_NOQ +1;
     1950    10335    3           HOST_TPDUC$->B$TPDU_DT_C.DST_REF = KN$TCTX.SRC_REF;
     1951    10336    3           ALTRETURN;
     1952    10337    3           END;
     1953    10338
     1954    10339    2      IF KN$TCTX.OPTION.TRACE THEN CALL KNT$TR_FHOST(KN$NETPARM);
     1955    10340    2      RETURN;
     1956    10341
     1957    10342    2   END I$FORWARD_2HOST;
     1958    10343        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:64   
     1959    10344        /*I* NAME:  I$DO_ACK
     1960    10345
     1961    10346             ENTRY:  I$DO_EACK
     1962    10347
     1963    10348             PURPOSE:
     1964    10349               These procedures release the buffered segments which have been
     1965    10350               acknowledged by the peer and stops or restart the RETRAN timer.
     1966    10351
     1967    10352             INPUT:
     1968    10353               YR_TU_NR - from the TPDU_AK
     1969    10354               CDT      - from the TPDU_AK
     1970    10355        */
     1971    10356    1   I$DO_ACK: PROC;
     1972    10357
     1973    10358                                                /* Auto Storage                       */
     1974    10359    2   DCL HDR$ PTR;
     1975    10360    2   DCL SVHDR$ PTR;
     1976    10361    2   DCL EXTRA SBIN WORD;
     1977    10362    2   DCL BUFS_RLSD UBIN;
     1978    10363
     1979    10364        %K$TPDU_CP6 (NAME=K$TPDU_CP6_FLOW, STCLASS="BASED(BUF$)", LAST=",");
     1980    10399           %K$TPARM_FLOW_CONTROL (NAME=P, LVL=2, STCLASS=BASED, LAST=";");
     1981    10435
     1982    10436        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:65   
     1983    10437    2      HDR$ = KN$TCTX.SEND_HEAD$;
     1984    10438    2      SVHDR$ = HDR$;
     1985    10439    2      BUFS_RLSD = 0;
     1986    10440
     1987    10441        /* Release the buffers for those that have been acknowledged.
     1988    10442        */
     1989    10443    3      DO WHILE ( HDR$ ~= ADDR(NIL) );
     1990    10444    3           IF ( HDR$->FRAG_HDR.SEQ < YR_TU_NR )
     1991    10445    3             OR ( HDR$->FRAG_HDR.SEQ_SBIN = -1 ) /*cr or cc tpdu*/
     1992    10446    3             OR (HDR$->FRAG_HDR.SEQ>=KN$TCTX.SEND_LWE AND YR_TU_NR<KN$TCTX.SEND_LWE)
     1993    10447    4           THEN DO;
     1994    10448    4                KN$TCTX.SEND_HEAD$ = HDR$->FRAG_HDR.LINK$;
     1995    10449
     1996    10450    4                IF KN$TCTX.SEND_HEAD$ = ADDR(NIL)
     1997    10451    4                THEN KN$TCTX.SEND_TAIL$ = ADDR(NIL);
     1998    10452
     1999    10453    4                CALL KNT$RELBUF(HDR$->FRAG_HDR,KN$TCTX);
     2000    10454    4                BUFS_RLSD = BUFS_RLSD +1;
     2001    10455    4                HDR$ = KN$TCTX.SEND_HEAD$;
     2002    10456    4                END;
     2003    10457    3           ELSE HDR$ = ADDR(NIL);
     2004    10458    3           END;
     2005    10459
     2006    10460        /* Reset the send window information with the data from the AK TPDU.
     2007    10461        */
     2008    10462    2      KN$TCTX.SEND_LWE = YR_TU_NR;
     2009    10463    2      KN$TCTX.SEND_UWE = KN$TCTX.SEND_LWE + CDT;
     2010    10464
     2011    10465    3      DO WHILE (KN$TCTX.SEND_UWE > KN$TCTX.MAXSEQ );
     2012    10466    3           KN$TCTX.SEND_UWE = KN$TCTX.SEND_UWE - KN$TCTX.MAXSEQ - 1;
     2013    10467    3           END;
     2014    10468
     2015    10469        /* If we were able to release any saved TPDUs, then we should either
     2016    10470           stop or reset the Retrans Timer.
     2017    10471        */
     2018    10472    2      IF KN$TCTX.CLASS = 4
     2019    10473    3      THEN DO;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:66   
     2020    10474    3           IF SVHDR$ ~= KN$TCTX.SEND_HEAD$
     2021    10475    3           THEN IF ( KN$TCTX.SEND_HEAD$ = KN$TCTX.SEND_NOTSENT$) AND
     2022    10476    3                  (KN$TCTX.SEND_EHEAD$ = ADDR(NIL) )
     2023    10477    4                THEN DO;
     2024    10478    4   TIMER_STOP:
     2025    10479    4                     CALL I$CANCEL_RETRAN;
     2026    10480    4                     END;
     2027    10481    4                ELSE DO;
     2028    10482    4   TIMER_RESET:
     2029    10483    4                     KN$TCTX.SEND_RETRY_COUNT = 1;
     2030    10484    4                     CALL I$SET_RETRAN;
     2031    10485    4                     END;
     2032    10486    3           END/*do class4*/;
     2033    10487
     2034    10488        /* If we have flow stopped the host, and this opens up the send window,
     2035    10489           a Flow Start TPDU is sent to the host.
     2036    10490        */
     2037    10491    2   CHECK_FLOWCONTROL:
     2038    10492    2      EXTRA = KN$TCTX.SEND_NEXT - KN$TCTX.SEND_LWE;
     2039    10493    2      IF EXTRA < 0
     2040    10494    2      THEN EXTRA = EXTRA + KN$TCTX.MAXSEQ + 1;
     2041    10495
     2042    10496    2      IF (KN$TCTX.FLOW_CONTROLLED = '1'B) AND
     2043    10497    2        ( EXTRA < ( KN$TCTX.RCV_WINDOW_SZ  /*N* *2 */ ) )
     2044    10498    3      THEN DO;
     2045    10499    3           KN$TCTX.FLOW_CONTROLLED = '0'B;
     2046    10500
     2047    10501    3           IF KN$TCTX.LNK$ ~= ADDR(NIL)
     2048    10502    3           THEN CALL KNT$UNQ_FLOW(KN$TCTX.LNK$);
     2049    10503
     2050    10504    3           IF KN$TCTX.OPTION.OSI
     2051    10505    4           THEN DO;
     2052    10506    4                K$TPDU_CP6_FLOW = '0'B;
     2053    10507    4                K$TPDU_CP6_FLOW.LI = SIZEC(K$TPDU_CP6_FLOW) -1;
     2054    10508    4                K$TPDU_CP6_FLOW.TYPE = %K_TPDU_TYPE_CP6;
     2055    10509    4                K$TPDU_CP6_FLOW.DST_REF = KN$TCTX.HOST_REF;
     2056    10510    4                K$TPDU_CP6_FLOW.P.CODE = %K_TPARM_FLOW_START;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:67   
     2057    10511
     2058    10512    4                KN$NETPARM.MSGSZ = 0;
     2059    10513    4                KN$NETPARM.UHDRSZ = 0;
     2060    10514    4                KN$NETPARM.SHDRSZ = 0;
     2061    10515    4                KN$NETPARM.THDRSZ = SIZEC(K$TPDU_CP6_FLOW);
     2062    10516    4                KN$NETPARM.THDR$ = ADDR(K$TPDU_CP6_FLOW);
     2063    10517    4                KN$NETPARM.NODE = KN$TCTX.HOST_NODE;
     2064    10518
     2065    10519    4                CALL KNN$SEND(KN$NETPARM)
     2066    10520    5                WHENALTRETURN DO;
     2067    10521    5                     KN$TCTX.FLOW_CONTROLLED = '1'B;
     2068    10522    5                     KN$NETPARM.ERRCODE = 0; /*so knn won't altret to knh$scan   */
     2069    10523    5                     END;
     2070    10524    4                IF KN$TCTX.OPTION.TRACE THEN CALL KNT$TR_RECV(KN$NETPARM);
     2071    10525    4                END/*do if OSI*/;
     2072    10526    3           END/*do if flow_controlled and window is open*/;
     2073    10527
     2074    10528        /* If we were able to release any buffers, and there is one or more
     2075    10529           transport connections that are waiting for a buffer, a call is
     2076    10530           made to KNT$UNQ_BUFFER to unqueue those connections.
     2077    10531        */
     2078    10532    2      IF (BUFS_RLSD > 0) AND (KNT_WAIT_COUNT > 0)
     2079    10533    2      THEN CALL KNT$UNQ_BUFFER;
     2080    10534
     2081    10535    2      RETURN;
     2082    10536
     2083    10537        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:68   
     2084    10538    2   I$DO_EACK: ENTRY;
     2085    10539
     2086    10540    2      HDR$ = KN$TCTX.SEND_EHEAD$;
     2087    10541
     2088    10542    2      IF ( HDR$ = ADDR(NIL) ) OR
     2089    10543    2        (HDR$->FRAG_HDR.SEQ ~= YR_TU_NR)
     2090    10544    2      THEN RETURN;
     2091    10545
     2092    10546    2      KN$TCTX.SEND_EHEAD$ = HDR$->FRAG_HDR.LINK$;
     2093    10547    2      IF KN$TCTX.SEND_EHEAD$ = ADDR(NIL)
     2094    10548    2      THEN KN$TCTX.SEND_ETAIL$ = ADDR(NIL);
     2095    10549
     2096    10550    2      CALL KNT$RELBUF(HDR$->FRAG_HDR,KN$TCTX);
     2097    10551
     2098    10552    2      IF KN$TCTX.SEND_EHEAD$ = ADDR(NIL)    AND
     2099    10553    2        (KN$TCTX.SEND_HEAD$=ADDR(NIL)  OR  KN$TCTX.SEND_HEAD$=KN$TCTX.SEND_NOTSENT$)
     2100    10554    2      THEN GOTO TIMER_STOP;
     2101    10555    2      ELSE GOTO TIMER_RESET;
     2102    10556
     2103    10557    2   END I$DO_ACK;
     2104    10558        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:69   
     2105    10559
     2106    10560        /*I* NAME: I$REPORT_TDISCON
     2107    10561
     2108    10562             PURPOSE:
     2109    10563                  To notify session that transport has terminated a transport
     2110    10564                  connection because of a received TPDU_DR or TPDU_ER.
     2111    10565
     2112    10566                  The I$REPORT_TDISCON entry is used if no user data is available
     2113    10567                  to pass on up to session.
     2114    10568
     2115    10569                  The I$REPORT_TDISCON2 entry is used if session data has been
     2116    10570                  included with the received TPDU_DR.
     2117    10571        */
     2118    10572
     2119    10573    1   I$REPORT_TDISCON: PROC ALTRET;
     2120    10574    2      KN$NETPARM.SHDR$ = ADDR(NIL);
     2121    10575    2      KN$NETPARM.SHDRSZ = 0;
     2122    10576
     2123    10577    2   I$REPORT_TDISCON2: ENTRY ALTRET;
     2124    10578    2      IF KN$TCTX.PRIMARY
     2125    10579    3      THEN DO;
     2126    10580    3           KN$NETPARM.FUNCTION = %KN_FCN_TERM;
     2127    10581    3           KN$NETPARM.NODE = KN$TCTX.NODE;
     2128    10582    3           KN$NETPARM.UHDRSZ = 0;
     2129    10583    3           KN$NETPARM.MSGSZ  = 0;
     2130    10584
     2131    10585    3           CALL KNS$RECV(KN$NETPARM)
     2132    10586    4           WHENALTRETURN DO; ALTRETURN; END;
     2133    10587    3           END;
     2134    10588
     2135    10589    3      ELSE DO;
     2136    10590    3           HOST_TPDUC$ = TPDU$;
     2137    10591    3           KN$NETPARM.MSGSZ = 0;
     2138    10592    3           CALL I$FORWARD_2HOST
     2139    10593    4           WHENALTRETURN DO;
     2140    10594    4                ALTRETURN;
     2141    10595    4                END;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:70   
     2142    10596    3           END/*do for intermediate connections*/;
     2143    10597
     2144    10598    2      RETURN;
     2145    10599    2   END I$REPORT_TDISCON;
     2146    10600
     2147    10601        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:71   
     2148    10602        /*I* NAME: I$RETURN_DR
     2149    10603
     2150    10604             PURPOSE:
     2151    10605                  To compose and send a disconnect request or a disconnect confirm.
     2152    10606
     2153    10607                  The I$RETURN_DR entry is used to return a TPDU_DR when
     2154    10608                  errors are detected on an input TPDU_CR or TPDU_CC.
     2155    10609
     2156    10610                  The I$RETURN_DC entry is used to return a TPDU_DC when
     2157    10611                  errors are detected on an input TPDU_DR.
     2158    10612
     2159    10613             DESCRIPTION:
     2160    10614                  After composition of the TPDU, the local network is asked to
     2161    10615                  forward it to the peer.
     2162    10616        */
     2163    10617    1   I$RETURN_DR: PROC;
     2164    10618
     2165    10619    2   DCL CHKOFF SBIN;
     2166    10620    2   DCL FRAGSIZE SBIN;
     2167    10621
     2168    10622        %K$TPDU_DR(NAME=K$TPDU_DR, STCLASS="BASED(BUF$)");
     2169    10665
     2170    10666        %K$TPDU_DR (NAME=TPDU_DR, ALGN=CALIGNED);
     2171    10709        %K$TPDU_DC (NAME=TPDU_DC, ALGN=CALIGNED);
     2172    10748        %K$TPARM_CHKSUM (NAME=TPARM_CHKSUM, ALGN=CALIGNED);
     2173    10788
     2174    10789    2   DCL K_CKSUM_INIT CHAR(4) SYMREF;
     2175    10790
     2176    10791        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:72   
     2177    10792
     2178    10793    2      IF ENTRY_SWITCH = %SEND_4HOST
     2179    10794    2      THEN CALL TRANSPORT_SCREECH;
     2180    10795
     2181    10796    2      K$TPDU_DR.LI = SIZEC(TPDU_DR) -1;
     2182    10797    2      K$TPDU_DR.TYPE = %K_TPDU_TYPE_DR;
     2183    10798    2      K$TPDU_DR.REASON = REASON;
     2184    10799
     2185    10800    2      GOTO COMMON;
     2186    10801
     2187    10802    2   I$RETURN_DC: ENTRY;
     2188    10803    2      K$TPDU_DR.LI = SIZEC(TPDU_DC) -1;
     2189    10804    2      K$TPDU_DR.TYPE = %K_TPDU_TYPE_DC;
     2190    10805
     2191    10806    2   COMMON:;
     2192    10807    2      K$TPDU_DR.MBZ = 0;
     2193    10808    2      K$TPDU_DR.DST_REF = TPDU_BUF.SRC_REF;
     2194    10809    2      K$TPDU_DR.SRC_REF = DST_REF;
     2195    10810
     2196    10811    2      IF (K$TPDU_DR.TYPE = %K_TPDU_TYPE_DR) AND (B$TPDU_CR.CLASS = 4)
     2197    10812    3      THEN DO;
     2198    10813    3           CHKOFF = K$TPDU_DR.LI + 4;
     2199    10814    3           K$TPDU_DR.LI = K$TPDU_DR.LI + SIZEC(TPARM_CHKSUM);
     2200    10815    3           FRAGSIZE = K$TPDU_DR.LI + 1;
     2201    10816    3           PINCRC(ADDR(K$TPDU_DR),CHKOFF-3)->B$CHAR4 = ADDR(K_CKSUM_INIT)->B$CHAR4;
     2202    10817    3           CALL KNA$CALC_CHKSUM(BUF$, FRAGSIZE, CHKOFF);
     2203    10818    3           END;
     2204    10819
     2205    10820        /* NETPARM.FUNCTION should already contain the correct code to
     2206    10821           indicate OSI or CP6 style connection. If its CP6, NETPARM.NODE
     2207    10822           which was the source NODE is ok to use for destination NODE.
     2208    10823           If its OSI, we must switch .SRC_ADDR$ and .DST_ADDR$.
     2209    10824        */
     2210    10825    2      IF KN$NETPARM.FUNCTION = %K_NDATA
     2211    10826    3      THEN DO;
     2212    10827    3           TEMP$ = KN$NETPARM.SRC_ADDR$;
     2213    10828    3           KN$NETPARM.SRC_ADDR$ = KN$NETPARM.DST_ADDR$;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:73   
     2214    10829    3           KN$NETPARM.DST_ADDR$ = TEMP$;
     2215    10830    3           END;
     2216    10831
     2217    10832    2      KN$NETPARM.THDR$ = ADDR(K$TPDU_DR);
     2218    10833    2      KN$NETPARM.THDRSZ = K$TPDU_DR.LI + 1;
     2219    10834
     2220    10835    2      KN$NETPARM.SHDRSZ = 0;
     2221    10836    2      KN$NETPARM.UHDRSZ = 0;
     2222    10837    2      KN$NETPARM.MSGSZ = 0;
     2223    10838
     2224    10839    2      IF KN$TCTX.OPTION.CONS
     2225    10840    3      THEN DO;
     2226    10841    3           CALL KNH$SEND(KN$NETPARM) ALTRET(CANT_SEND);
     2227    10842    3           GOTO LOG_SEND;
     2228    10843    3           END;
     2229    10844    3      ELSE DO;
     2230    10845    3           CALL KNN$SEND(KN$NETPARM)
     2231    10846    4           WHENRETURN DO;
     2232    10847    4   LOG_SEND:
     2233    10848    4                CALL KNT$TR_SEND(KN$NETPARM);
     2234    10849    4                END;
     2235    10850    4           WHENALTRETURN DO;
     2236    10851    4   CANT_SEND:
     2237    10852                                                /*probably doesn't matter*/
     2238    10853    4                END;
     2239    10854    3           END;
     2240    10855
     2241    10856    2      KN$NETPARM.THDR$ = BUF$;
     2242    10857    2      RETURN;
     2243    10858
     2244    10859    2   END I$RETURN_DR;
     2245    10860        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:74   
     2246    10861        /*I* NAME:  I$SET_REFWAIT
     2247    10862
     2248    10863             PURPOSE: To reset the timers and set the transport connection to
     2249    10864                      the REFWAIT state.
     2250    10865        */
     2251    10866
     2252    10867    1   I$SET_REFWAIT: PROC;
     2253    10868    2      CALL KNT$SET_REFWAIT (KN$TCTX);
     2254    10869
     2255    10870    2      RETURN;
     2256    10871    2   END I$SET_REFWAIT;
     2257    10872        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:75   
     2258    10873
     2259    10874        /*I* NAME:  I$SET_OPEN
     2260    10875
     2261    10876             PURPOSE: To set the transport connection to the OPEN state and
     2262    10877                      unqueue any LDCTs waiting for the connection to complete.
     2263    10878        */
     2264    10879
     2265    10880    1   I$SET_OPEN: PROC;
     2266    10881    2      KN$TCTX.STATE = %K_TSTATE_OPEN;
     2267    10882    2      KN$TCTX.WAIT_4OPEN = '0'B;
     2268    10883
     2269    10884    2      IF KN$TCTX.LNK$ ~= ADDR(NIL)
     2270    10885    2      THEN CALL KNT$UNQ_OPEN(KN$TCTX.LNK$);
     2271    10886
     2272    10887
     2273    10888    2      RETURN;
     2274    10889    2   END I$SET_OPEN;
     2275    10890        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:76   
     2276    10891
     2277    10892        /*I* NAME: I$CHK_PARMS
     2278    10893
     2279    10894             PURPOSE:
     2280    10895                  To check the parameters on the various TPDUs that have
     2281    10896                  been received by transport.
     2282    10897
     2283    10898
     2284    10899        */
     2285    10900    1   I$CHK_PARMS: PROC ALTRET;
     2286    10901
     2287    10902                                                /* Auto Storage                       */
     2288    10903        %K$TPARM_GENERIC (NAME=K$TPARM, STCLASS=AUTO, ALGN=ALIGNED);
     2289    10938    2   DCL K$TPARM$ PTR;
     2290    10939    2   DCL PARMLEN SBIN;
     2291    10940
     2292    10941                                                /* Based Data                         */
     2293    10942    2   DCL B$TSAP CHAR(PARMLEN) BASED;
     2294    10943        %K$TPDU_GENERIC (NAME=TPDU);
     2295    11003        %K$TPARM_GENERIC (ALGN=CALIGNED);
     2296    11038        %K$TPARM_TPDUSZ (ALGN=ALIGNED, STCLASS="BASED(K$TPARM$)");
     2297    11077        %K$TPARM_OPTION (ALGN=ALIGNED, STCLASS="BASED(K$TPARM$)");
     2298    11124        %K$TPARM_TSAP_ID (ALGN=ALIGNED, STCLASS="BASED(K$TPARM$)");
     2299    11161        %K$TPARM_VERSION (ALGN=ALIGNED, STCLASS="BASED(K$TPARM$)");
     2300    11197        %K$TPARM_CHKSUM (ALGN=ALIGNED, STCLASS="BASED(K$TPARM$)");
     2301    11237        %K$TPARM_SUBSEQ (ALGN=ALIGNED, STCLASS="BASED(K$TPARM$)");
     2302    11272        %K$TPARM_CLR_INFO (ALGN=ALIGNED, STCLASS="BASED(K$TPARM$)");
     2303    11321
     2304    11322                                                /* External data                      */
     2305    11323    2   DCL K_TSAP_SZ UBIN SYMREF;
     2306    11324
     2307    11325        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:77   
     2308    11326        /* Initialize check_parmas auto.
     2309    11327        */
     2310    11328    2      K$TPARM$ = ADDR(K$TPARM);
     2311    11329    2      GOT_CHKSUM = 0;
     2312    11330    2      GOT_FCC = 0;
     2313    11331
     2314    11332    3      DO WHILE (PARMSIZE > 1 );
     2315    11333    3           K$TPARM = PARM$->K$TPARM_GENERIC;
     2316    11334    3           PARMLEN = K$TPARM.LEN;
     2317    11335
     2318    11336    3           IF PARMLEN > PARMSIZE-2
     2319    11337    4           THEN DO;
     2320    11338    4   SET_INVLEN:  ;
     2321    11339    4                ERRNUM = %K_REASON_LEN_INV;
     2322    11340    4                ALTRETURN;
     2323    11341    4                END;
     2324    11342
     2325    11343    4           DO SELECT (K$TPARM.CODE);
     2326    11344
     2327    11345        /* First check for the parameters that aren't limited to CR and CC.
     2328    11346        */
     2329    11347    4                SELECT(%K_TPARM_CHKSUM);
     2330    11348    4                IF PARMLEN ~= 2
     2331    11349    4                THEN GOTO SET_INVLEN;
     2332    11350
     2333    11351    4                IF KN$TCTX.CLASS ~= 4
     2334    11352    4                THEN GOTO SET_INVPARM;
     2335    11353
     2336    11354    4                GOT_CHKSUM = POFFC(PARM$, TPDU$) +3;
     2337    11355    4                GOTO GET_NEXT_PARM;
     2338    11356
     2339    11357
     2340    11358    4                SELECT(%K_TPARM_SUBSEQ);
     2341    11359    4                SUBSEQ = K$TPARM_SUBSEQ.NUM;
     2342    11360
     2343    11361    4                IF PARMLEN ~= 2
     2344    11362    4                THEN GOTO SET_INVLEN;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:78   
     2345    11363
     2346    11364    4   CHECK_AK:    ;
     2347    11365    4                IF TYPE ~= %K_TPDU_TYPE_AK OR KN$TCTX.CLASS ~= 4
     2348    11366    5                THEN DO;
     2349    11367    5   SET_INVPARM:      ;
     2350    11368    5                     ERRNUM = %K_ERROR_INVPARM;
     2351    11369    5                     ALTRETURN;
     2352    11370    5                     END;
     2353    11371
     2354    11372    4                GOTO GET_NEXT_PARM;
     2355    11373
     2356    11374    4                SELECT(%K_TPARM_FCC);
     2357    11375    4                IF PARMLEN ~= 8
     2358    11376    4                THEN GOTO SET_INVLEN;
     2359    11377
     2360    11378    4                GOT_FCC = 1;
     2361    11379    4                GOTO CHECK_AK;
     2362    11380
     2363    11381    4                SELECT(%K_TPARM_CLR_INFO);
     2364    11382    4                IF TYPE ~= %K_TPDU_TYPE_DR
     2365    11383    4                THEN GOTO SET_INVPARM;
     2366    11384
     2367    11385    4                KN$TCTX.ERR = K$TPARM_CLR_INFO.ERR;
     2368    11386    4                GOTO GET_NEXT_PARM;
     2369    11387
     2370    11388    4                SELECT(%K_TPARM_INVALID_TPDU);
             11388                         /* this is the same code for CALLING_TSAP*/
     2371    11389    4                IF TYPE = %K_TPDU_TYPE_ER
     2372    11390    4                THEN GOTO GET_NEXT_PARM;
     2373    11391
     2374    11392    4                END/*do select*/;
     2375    11393
     2376    11394        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:79   
     2377    11395        /* Now check those that are valid only with CR or CC - all classes
     2378    11396        */
     2379    11397    3           IF (TYPE ~= %K_TPDU_TYPE_CR) AND (TYPE ~= %K_TPDU_TYPE_CC)
     2380    11398    3           THEN GOTO SET_INVPARM;
     2381    11399
     2382    11400    4           DO SELECT (K$TPARM.CODE);
     2383    11401    4                SELECT (%K_TPARM_TPDUSZ);
     2384    11402    4                IF PARMLEN ~= 1
     2385    11403    4                THEN GOTO SET_INVLEN;
     2386    11404
     2387    11405    4                IF (K$TPARM_TPDUSZ.SIZE < %K_TPDUSIZE_128) OR
     2388    11406    4                  (K$TPARM_TPDUSZ.SIZE > %K_TPDUSIZE_8192)
     2389    11407    5                THEN DO;
     2390    11408    5                     ERRNUM = %K_REASON_NEGOTIATION;
     2391    11409    5                     ALTRETURN;
     2392    11410    5                     END;
     2393    11411
     2394    11412    4                IF (K$TPARM_TPDUSZ.SIZE > KN$TCTX.TPDUSZ_PARM
     2395    11413    4                  AND TYPE = %K_TPDU_TYPE_CC)
     2396    11414
     2397    11415    4                  OR (K$TPARM_TPDUSZ.SIZE > %K_TPDUSIZE_2048
     2398    11416    4                  AND KN$TCTX.CLASS = 0 AND   KN$TCTX.OPTION.OSI = '1'B)
     2399    11417    5                THEN DO;
     2400    11418    5                     ERRNUM = %K_REASON_PROTOCOL;
     2401    11419    5                     ALTRETURN;
     2402    11420    5                     END;
     2403    11421
     2404    11422    4                KN$TCTX.TPDUSZ_PARM = K$TPARM_TPDUSZ.SIZE;
     2405    11423    4                GOTO GET_NEXT_PARM;
     2406    11424
     2407    11425    4                SELECT(%K_TPARM_CALLING_TSAP, %K_TPARM_CALLED_TSAP);
     2408    11426    4                IF PARMLEN > K_TSAP_SZ
     2409    11427    4                THEN GOTO SET_INVLEN;
     2410    11428
     2411    11429    4                IF ENTRY_SWITCH = %PRIMARY
     2412    11430    5                THEN DO;
     2413    11431    5                     ERRNUM = %K_REASON_ADDRESS_UNKNOWN;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:80   
     2414    11432    5                     ALTRETURN;
     2415    11433    5                     END;
     2416    11434
     2417    11435    4                GOTO GET_NEXT_PARM;
     2418    11436    4                END/*do select*/;
     2419    11437
     2420    11438        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:81   
     2421    11439        /* Now check those that are valid only with CR or CC - class 1 -> 4.
     2422    11440        */
     2423    11441    3           IF KN$TCTX.CLASS = 0
     2424    11442    3           THEN GOTO SET_INVPARM;
     2425    11443
     2426    11444    4           DO SELECT (K$TPARM.CODE);
     2427    11445    4                SELECT(%K_TPARM_OPTION);
     2428    11446    4                IF PARMLEN ~= 1
     2429    11447    4                THEN GOTO SET_INVLEN;
     2430    11448
     2431    11449    4                IF K$TPARM_OPTION.EXPD
     2432    11450    4                THEN KN$TCTX.OPTION.EXPEDITED = '1'B;
     2433    11451    4                ELSE KN$TCTX.OPTION.EXPEDITED = '0'B;
     2434    11452
     2435    11453    4                IF TYPE = %K_TPDU_TYPE_CC
     2436    11454    4                  AND KN$TCTX.OPTION.CHKSUM ~= '0'B
     2437    11455    4                  AND K$TPARM_OPTION.CHKSUM /*means dont use chksum if set*/
     2438    11456    5                THEN DO;
     2439    11457    5                     ERRNUM = %K_REASON_NEGOTIATION;
     2440    11458    5                     ALTRETURN;
     2441    11459    5                     END;
     2442    11460
     2443    11461    4                IF ~(K$TPARM_OPTION.CHKSUM) AND KN$TCTX.CLASS=4
     2444    11462    4                THEN KN$TCTX.OPTION.CHKSUM = '1'B;
     2445    11463    4                ELSE KN$TCTX.OPTION.CHKSUM = '0'B;
     2446    11464
     2447    11465    4                IF K$TPARM_OPTION.MBZ ~= '0'B
     2448    11466    5                THEN DO;
     2449    11467    5                     ERRNUM = %K_REASON_NEGOTIATION;
     2450    11468    5                     ALTRETURN;
     2451    11469    5                     END;
     2452    11470
     2453    11471    4                SELECT(%K_TPARM_VERSION);
     2454    11472    4                IF PARMLEN ~= 1
     2455    11473    4                THEN GOTO SET_INVLEN;
     2456    11474
     2457    11475    4                KN$TCTX.VERS = K$TPARM_VERSION.VERS;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:82   
     2458    11476
     2459    11477    4                SELECT(%K_TPARM_SECURITY, %K_TPARM_ALT_CLASS,
     2460    11478    4                  %K_TPARM_ACK_TIME, %K_TPARM_THROUGHPUT,
     2461    11479    4                  %K_TPARM_ERR_RATE, %K_TPARM_PRIORITY,
     2462    11480    4                  %K_TPARM_TRANSIT_DELAY, %K_TPARM_REASS_TIME);
     2463    11481
     2464    11482        /* The map implementation didn't seem to bother with these.
     2465    11483        */
     2466    11484
     2467    11485    4                SELECT (ELSE);
     2468    11486    4           GOTO SET_INVPARM;
     2469    11487
     2470    11488    4                END/*do select*/;
     2471    11489
     2472    11490    3   GET_NEXT_PARM: ;
     2473    11491    3      PARMSIZE = PARMSIZE - PARMLEN - 2;
     2474    11492    3      PARM$ =PINCRC(PARM$,PARMLEN+2);
     2475    11493    3           END/*do while parmsize > 0*/;
     2476    11494
     2477    11495    2      IF PARMSIZE < 0
     2478    11496    3      THEN DO;
     2479    11497    3           ERRNUM = %K_ERROR_INVPARM_LEN;
     2480    11498    3           ALTRETURN;
     2481    11499    3           END;
     2482    11500
     2483    11501    2      RETURN;
     2484    11502
     2485    11503    2   END I$CHK_PARMS;
     2486    11504
     2487    11505
     2488    11506
     2489    11507        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:83   
     2490    11508        /* These subroutines reduce the size of procedure by only
     2491    11509           generating one external procedure call.
     2492    11510        */
     2493    11511
     2494    11512    1   I$RELCTX: PROC;
     2495    11513    2      CALL KNA$RELTCTX(CTX$);
     2496    11514    2      RETURN;
     2497    11515    2   END I$RELCTX;
     2498    11516
     2499    11517
     2500    11518
     2501    11519    1   I$SET_RETRAN: PROC;
     2502    11520    2      CALL GHS$SET_TMR (KN$TCTX.TMR_RETRAN);
     2503    11521    2      RETURN;
     2504    11522    2   END I$SET_RETRAN;
     2505    11523
     2506    11524
     2507    11525
     2508    11526    1   I$SET_WINDOW: PROC;
     2509    11527    2      CALL GHS$SET_TMR (KN$TCTX.TMR_WINDOW);
     2510    11528    2      RETURN;
     2511    11529    2   END I$SET_WINDOW;
     2512    11530
     2513    11531
     2514    11532
     2515    11533    1   I$SET_INACTIVITY: PROC;
     2516    11534    2      CALL GHS$SET_TMR (KN$TCTX.TMR_INACTIVITY);
     2517    11535    2      RETURN;
     2518    11536    2   END I$SET_INACTIVITY;
     2519    11537
     2520    11538
     2521    11539
     2522    11540    1   I$CANCEL_RETRAN: PROC;
     2523    11541    2      CALL GHS$CANCEL_TMR (KN$TCTX.TMR_RETRAN);
     2524    11542    2      RETURN;
     2525    11543    2   END I$CANCEL_RETRAN;
     2526    11544
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:84   
     2527    11545
     2528    11546
     2529    11547    1   I$CANCEL_WINDOW: PROC;
     2530    11548    2      CALL GHS$CANCEL_TMR (KN$TCTX.TMR_WINDOW);
     2531    11549    2      RETURN;
     2532    11550    2   END I$CANCEL_WINDOW;
     2533    11551
     2534    11552
     2535    11553
     2536    11554    1   I$CANCEL_INACTIVITY: PROC;
     2537    11555    2      CALL GHS$CANCEL_TMR (KN$TCTX.TMR_INACTIVITY);
     2538    11556    2      RETURN;
     2539    11557    2   END I$CANCEL_INACTIVITY;
     2540    11558
     2541    11559
     2542    11560
     2543    11561        /*I* NAME: TRANSPORT_SCREECH
     2544    11562
     2545    11563             PURPOSE: To provide a common routine for unrecoverable
     2546    11564                      errors detected by the KNT$RECV module.
     2547    11565        */
     2548    11566
     2549    11567    1   TRANSPORT_SCREECH: PROC;
     2550    11568
     2551    11569    2      CALL SCREECH(KNT_SCODE);
     2552    11570
     2553    11571
     2554    11572    2   END TRANSPORT_SCREECH;
     2555    11573    1   END KNT$RECV;
     2556    11574        %EOD;

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:85   
--  Include file information  --

   GH_GATE_M.:E05TOU  cannot be made into a system file and is referenced.
   GH_SCHD_M.:E05TOU  is referenced.
   KNH_MACRO_C.:E05TOU  is referenced.
   K_TRANSPORT_M.:E05TOU  is referenced.
   K_TRANSPORT_E.:E05TOU  is referenced.
   KN_DATA_M.:E05TOU  is referenced.
   K_QDPHDRS_M.:E05TOU  is referenced.
   K_INTERFACE_M.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KNT$RECV.

   Procedure KNT$RECV requires 5636 words for executable code.
   Procedure KNT$RECV requires 72 words of local(AUTO) storage.

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:86   

 Object Unit name= KNT$RECV                                   File name= KNT$RECV.:E05TOU
 UTS= JUL 30 '97 01:09:36.40 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none  5636   1604  KNT$RECV
    1  RoData even  none     2      2  KNT$RECV

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        1  KNT$RECV
     0    106          yes     yes      Std        1  KNT$RECV_HOST_DATA
     0    110          yes     yes      Std        1  KNT$SEND_CR_4HOST
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:87   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 KNT$TR_TERM
         yes           Std       1 KNT$RLS_CHAIN
 yes     yes           Std       1 KNT$DSESSION
         yes           Std       1 KNT$TR_ERROR
 yes     yes           Std       1 KNT$SEND_DC
 yes     yes           Std       1 KNH$SEND
 yes     yes           Std       2 KNA$CHK_CHKSUM
 yes     yes           Std       1 KNT$RETRANS_LOST
 yes     yes           Std       1 KNA$RELTCTX
 yes     yes           Std       1 KNT$SEND_EA
 yes     yes           Std       1 KNA$GETTCTX
         yes           Std       1 KNT$TR_FHOST
 yes     yes           Std       1 KNT$SEND_AK_FCC
 yes     yes           Std       1 KNS$RECV
         yes           Std       1 KNT$TR_RECV
         yes           Std       1 KNT$UNQ_OPEN
 yes     yes           Std       1 KNT$SEND_ED
 yes     yes           Std       1 KNT$SEND_DT
 yes     yes           Std       1 KNT$SEND_CC
 yes     yes           Std       5 KNT$SAVE_FRAG
 yes     yes           Std       1 KNT$SEND_AK
 yes     yes           Std       1 KNT$SEND_DR
         yes           Std       1 KNT$UNQ_FLOW
 yes     yes           Std       1 KNT$SEND_DR_HOST
 yes     yes           Std       3 KNA$CALC_CHKSUM
 yes     yes           Std       1 KNN$SEND
         yes           Std       1 KNT$TTIMER
 yes     yes           Std       1 KNT$RETRANS
         yes           Std       2 KNT$RELBUF
         yes           Std       0 KNT$UNQ_BUFFER
         yes           Std       1 KNT$TR_SEND
         yes           Std       1 KNT$SET_REFWAIT
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:88   
         yes           Std       1 GHS$SET_TMR
         yes           Std       1 GHS$CANCEL_TMR
         yes           Std       1 SCREECH
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET
                       nStd      0 X6A_AALT
                       nStd      0 X6B_BLR
                       nStd      0 X6C_ACM

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KNT_DO_CHKSUM                         KNT_WINDOW_NORMAL                     KNT_HOLDBACK
     K_TPDUSZ_VALUES                       K_TPDU_SIZE                           K_TPDU_SIZE_EXT
     KN_TCTX$$                             KN_TCTX_MAX#                          KNT_ERROR_SCREECH
     KNT_SCODE                             KNT_WAIT_HEAD$                        KNT_WAIT_COUNT
     KNT_DISCARDED_TPDUS                   KNT_CHKSUM_ERR                        KNT_UNQ_LDCT
     KNT_TRACE_INTERMEDIATE                KNT_TRACE_CLASS4                      KNT_TRACE_OSI
     KN_DCT$$                              K_CKSUM_INIT                          K_TSAP_SZ
r    G$ROS$
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:89   


        1        1        /*M* KNT$RECV - Receive OSI msgs from network and send to session */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=3,IND=5,ENU=0,ECU=0   */
        8        8
        9        9        /*P* NAME: KNT$RECV
       10       10
       11       11             PURPOSE:
       12       12                  To respond to fragments received from peers via local network.
       13       13
       14       14             DESCRIPTION:
       15       15                  The standard class 4 responses are employed.
       16       16
       17       17        */
       18       18        KNT$RECV: PROC(KN$NETPARM)  ALTRET;

     18   0 000000  D380 0000 0000  xent KNT$RECV        LNJ,B5   X6A_AUTO_1
          0 000003       0048 0001                       DC       72,1

       19       19
       20       20        %INCLUDE K_ADDRESS_M;
       21      523        %INCLUDE K_INTERFACE_M;
       22      932        %INCLUDE K_QDPHDRS_M;
       23     1814        %INCLUDE KN_DATA_M;
       24     3600        %INCLUDE K_TRANSPORT_E;
       25     3925        %INCLUDE K_TRANSPORT_M;
       26     5709        %INCLUDE KNH_MACRO_C;
       27     5992        %INCLUDE GH_SCHD_M;
       28     6136        %INCLUDE GH_GATE_M;
       29     6177 S      %INCLUDE KI_CP6;
       30     6178
       31     6179                                                /* Input Parameters                   */
       32     6180        %KN$NETPARM;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:90   
       33     6333                                                /* Auto                               */
       34     6334    1   DCL ERRNUM SBIN;
       35     6335    1   DCL DATA$ CPTR;
       36     6336    1   DCL DATASIZE SBIN;
       37     6337    1   DCL TPDU$ CPTR;
       38     6338    1   DCL CTX$ PTR;
       39     6339    1   DCL BUF$ PTR;
       40     6340    1   DCL NEXT_SZ SBIN;
       41     6341    1   DCL CDT SBIN;
       42     6342    1   DCL CDT_UBIN REDEF CDT UBIN;
       43     6343    1   DCL YR_TU_NR UBIN(32);
       44     6344    1   DCL TPDU_NR UBIN(32);
       45     6345    1   DCL NEXT$ CPTR;
       46     6346    1   DCL PARM$ CPTR;
       47     6347    1   DCL TEMP$ REDEF PARM$ PTR;
       48     6348    1   DCL PARMSIZE SBIN;
       49     6349    1   DCL TPDUSIZE SBIN;
       50     6350    1   DCL TYPE SBIN;
       51     6351    1   DCL DST_REF SBIN;
       52     6352    1   DCL TCTX# UBIN;
       53     6353    1   DCL LI SBIN;
       54     6354    1   DCL EOT BIT(1) ALIGNED;
       55     6355    1   DCL SUBSEQ UBIN;
       56     6356    1   DCL DUPLICATE_AK UBIN;
       57     6357    1   DCL GOT_FCC UBIN;
       58     6358    1   DCL GOT_CHKSUM UBIN;
       59     6359    1   DCL REASON UBIN;
       60     6360    1   DCL HOST_TPDU$ PTR;
       61     6361    1   DCL HOST_TPDUC$ REDEF HOST_TPDU$ CPTR;
       62     6362    1   DCL LDCT_CIRCUIT BIT(1);
       63     6363
       64     6364    1   DCL ENTRY_SWITCH UBIN;
       65     6365        %EQU PRIMARY=0;
       66     6366        %EQU RECV_4HOST=1;
       67     6367        %EQU SEND_4HOST=2;
       68     6368
       69     6369    1   DCL TEMP SBIN;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:91   
       70     6370    1   DCL 1 CLOCK_ID REDEF TEMP,
       71     6371    1         2 TCTX UBIN(8) UNAL,
       72     6372    1         2 TMR UBIN(8) UNAL;
       73     6373
       74     6374    1   DCL TEMP2 UBIN;
       75     6375
       76     6376        %K$TPDU_GENERIC (NAME=TPDU_BUF,STCLASS=AUTO,LEN=10);
       77     6436
       78     6437                                                /* Based Data                         */
       79     6438        %K$NSAP(FPTN=NSAP);
       80     6490    1   DCL KN$TCTX$(0:0) PTR BASED(KN_TCTX$$);
       81     6491        %K$TCTX (NAME=KN$TCTX, STCLASS="BASED(CTX$)");
       82     7398
       83     7399        %KN$LDCT (NAME=KN$LDCT, STCLASS="BASED(KN$NETPARM.LDCT$)");
       84     7644
       85     7645        %K$TPDU_CR_CC(NAME=B$TPDU_CR,STCLASS="BASED(BUF$)",ALGN=CALIGNED);
       86     7714        %K$TPDU_EA (NAME=B$TPDU_EA, STCLASS="BASED(BUF$)");
       87     7740        %K$TPDU_EA_EXT (NAME=B$TPDU_EA_EXT, STCLASS="BASED(BUF$)");
       88     7766        %K$TPDU_AK (NAME=B$TPDU_AK, STCLASS="BASED(BUF$)");
       89     7814        %K$TPDU_AK_EXT (NAME=B$TPDU_AK_EXT, STCLASS="BASED(BUF$)");
       90     7858        %K$TPDU_DR (NAME=B$TPDU_DR, STCLASS="BASED(BUF$)");
       91     7901        %K$TPDU_DT(NAME=B$TPDU_DT, STCLASS="BASED(BUF$)");
       92     7951        %K$TPDU_DT(NAME=B$TPDU_DT_C, STCLASS="BASED(BUF$)",ALGN=CALIGNED);
       93     8001        %K$TPDU_DT_EXT(NAME=B$TPDU_DT_EXT, STCLASS="BASED(BUF$)");
       94     8065        %K$TPDU_DT_0(NAME=B$TPDU_DT_0, STCLASS="BASED(BUF$)", ALGN=CALIGNED);
       95     8110
       96     8111        %K$TPARM_FCC (NAME=B$TPARM_FCC, STCLASS="BASED(BUF$)");
       97     8158
       98     8159
       99     8160        %K$FPT_CONNECT_OSI (NAME=B$TR_OPTIONS, STCLASS="BASED(KN$NETPARM.FPT$)", FULL=NO);
      100     8327
      101     8328        %K$FRAG_HDR (NAME=FRAG_HDR, STCLASS=BASED);
      102     8411
      103     8412        %K$NQDP_HDR (NAME=B$NHDR, STCLASS="BASED(KN$NETPARM.NHDR$)");
      104     8489
      105     8490    1   DCL KN$LDCT$(0:0) PTR BASED(KN_DCT$$);
      106     8491
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:92   
      107     8492    1   DCL CHRBSD CHAR(TEMP) BASED;
      108     8493    1   DCL UBN1BSD UBIN(16) BASED CALIGNED;
      109     8494    1   DCL B$CHAR4 CHAR(4) BASED CALIGNED;
      110     8495
      111     8496                                                /* External Data                      */
      112     8497    1   DCL KNT_DO_CHKSUM UBIN SYMREF;
      113     8498    1   DCL KNT_WINDOW_NORMAL UBIN SYMREF;
      114     8499    1   DCL KNT_WINDOW_EXTENDED UBIN SYMREF;
      115     8500    1   DCL KNT_HOLDBACK UBIN SYMREF;
      116     8501    1   DCL K_TPDUSZ_VALUES(0:14) UBIN SYMREF;
      117     8502    1   DCL K_TPDU_SIZE(0:15) UBIN SYMREF;
      118     8503    1   DCL K_TPDU_SIZE_EXT(0:15) UBIN SYMREF;
      119     8504    1   DCL KN_TCTX$$ PTR SYMREF;
      120     8505    1   DCL KN_TCTX_MAX# UBIN SYMREF;
      121     8506    1   DCL KNT_ERROR_SCREECH UBIN SYMREF;
      122     8507    1   DCL KNT_SCODE UBIN(32) SYMREF;
      123     8508    1   DCL KNT_WAIT_HEAD$ PTR SYMREF;
      124     8509    1   DCL KNT_WAIT_COUNT UBIN SYMREF;
      125     8510    1   DCL KNT_DISCARDED_TPDUS UBIN SYMREF;
      126     8511    1   DCL KNT_CHKSUM_ERR UBIN SYMREF;
      127     8512    1   DCL KNT_UNQ_LDCT UBIN SYMREF;
      128     8513    1   DCL KNT_TRACE_INTERMEDIATE UBIN SYMREF;
      129     8514    1   DCL KNT_TRACE_CLASS4 UBIN SYMREF;
      130     8515    1   DCL KNT_TRACE_OSI UBIN SYMREF;
      131     8516    1   DCL KN_DCT$$ PTR SYMREF;
      132     8517
      133     8518
      134     8519                                                /* External Routines                  */
      135     8520    1   DCL KNA$GETTCTX ENTRY(1) ALTRET;
      136     8521    1   DCL KNA$RELTCTX ENTRY(1) ALTRET;
      137     8522    1   DCL KNH$SEND ENTRY(1) ALTRET;
      138     8523    1   DCL KNN$SEND ENTRY(1) ALTRET;
      139     8524    1   DCL KNS$RECV ENTRY(1) ALTRET;
      140     8525    1   DCL KNT$SEND_AK ENTRY(1) ALTRET;
      141     8526    1   DCL KNT$SEND_AK_FCC ENTRY(1) ALTRET;
      142     8527    1   DCL KNT$SEND_CC ENTRY(1) ALTRET;
      143     8528    1   DCL KNT$SEND_DC ENTRY(1) ALTRET;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:93   
      144     8529    1   DCL KNT$SEND_EA ENTRY(1) ALTRET;
      145     8530    1   DCL KNT$SEND_ED ENTRY(1) ALTRET;
      146     8531    1   DCL KNT$SEND_DT ENTRY(1) ALTRET;
      147     8532    1   DCL KNT$SEND_DR ENTRY(1) ALTRET;
      148     8533    1   DCL KNT$SEND_DR_HOST ENTRY(1) ALTRET;
      149     8534    1   DCL KNT$RELBUF ENTRY(2);
      150     8535    1   DCL KNT$RLS_CHAIN ENTRY(1);
      151     8536    1   DCL KNA$CALC_CHKSUM ENTRY(3) ALTRET;
      152     8537    1   DCL KNA$CHK_CHKSUM ENTRY(2) ALTRET;
      153     8538    1   DCL KNT$SAVE_FRAG ENTRY(5) ALTRET;
      154     8539    1   DCL KNT$DSESSION ENTRY(1) ALTRET;
      155     8540    1   DCL KNT$RETRANS ENTRY(1) ALTRET;
      156     8541    1   DCL KNT$RETRANS_LOST ENTRY(1) ALTRET;
      157     8542    1   DCL KNT$SET_REFWAIT ENTRY(1);
      158     8543    1   DCL KNT$UNQ_OPEN ENTRY(1);
      159     8544    1   DCL KNT$UNQ_FLOW ENTRY(1);
      160     8545    1   DCL KNT$UNQ_BUFFER ENTRY;
      161     8546    1   DCL KNT$TTIMER ENTRY(1);
      162     8547    1   DCL KNT$TR_RECV ENTRY(1);
      163     8548    1   DCL KNT$TR_SEND ENTRY(1);
      164     8549    1   DCL KNT$TR_FHOST ENTRY(1);
      165     8550    1   DCL KNT$TR_ERROR ENTRY(1);
      166     8551    1   DCL KNT$TR_TERM ENTRY(1);
      167     8552    1   DCL GHS$SET_TMR ENTRY(1);
      168     8553    1   DCL GHS$CANCEL_TMR ENTRY(1);
      169     8554    1   DCL SCREECH ENTRY(1);
      170     8555
      171     8556        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:94   
      172     8557
      173     8558        /*F* NAME: KNT$RECV Inbound Messages
      174     8559
      175     8560        This procedure is the interface for the lower layers to the
      176     8561        transport layer. It is called from KNN$RECV with the
      177     8562        following parameters:
      178     8563        .fif
      179     8564        }
      180     8565        }    KN$NETPARM.FUNCTION
      181     8566        }                - Contains the function to be performed
      182     8567        }                  The only calls currently implemented for CP-6 Primary
      183     8568        }                  connections are:
      184     8569        }                    KN_FCN_TERM
      185     8570        }                    KN_FCN_DATA
      186     8571        }
      187     8572        }                  If called to process a message whose destination or
      188     8573                           source is an adjacent host, the function code will be:
      189     8574        }                     KNH_FCN_DATA  -  if for a CP-6 connection data
      190     8575        }                     K_NDATA       -  if for an OSI connection data
      191     8576        }                     K_NDISCONNECT_IND - ?? Dan ?
      192     8577        }
      193     8578        }
      194     8579        }    KN$NETPARM.THDR$
      195     8580        }                - Contains the address within the message of the first
      196     8581        }                  byte of the transport header.
      197     8582        }
      198     8583        }
      199     8584        }    KN$NETPARM.THDRSZ
      200     8585        }                - Contains the byte size of the TPDU.
      201     8586        }
      202     8587        }
      203     8588        }    KN$NETPARM.NODE
      204     8589        }                - Contains the destination node number from the
      205     8590        }                  network header.
      206     8591        }
      207     8592        }    KN$NETPARM.FPT$
      208     8593                         - used when entered from KNT$SEND_4HOST with TPDU_CR.
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:95   
      209     8594                           contains the address on the transport options which
      210     8595                           are part of the OSI_INIT network header.
      211     8596
      212     8597        }                - used when FUNCTION is KN_FCN_TERM
      213     8598        }                  The FPT is not actually used by KNT$RECV, but
      214     8599        }                  is passed along as a parameter to session.
      215     8600        }
      216     8601        }    KN$NETPARM.SRC_ADDR$
      217     8602        }    KN$NETPARM.DST_ADDR$
      218     8603        }                - used when FUNCTION is K_NDATA
      219     8604        }                  contains the addresses of the NSAPs to be remembered
      220     8605        }                  in the TCTX block.
      221     8606        .fin
      222     8607
      223     8608        */
      224     8609
      225     8610        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:96   
      226     8611
      227     8612    1      ENTRY_SWITCH = %PRIMARY;

   8612   0 000005  8747 0029                            CL       ENTRY_SWITCH,AUTO

      228     8613    1      IF KN$NETPARM.FUNCTION = %KN_FCN_DATA

   8613   0 000007  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          0 000009  E846 0014                            LDR,R6   20,B6
          0 00000B  6D05                                 CMV,R6   5
          0 00000C  0901 010B                            BE       s:8719,PREL

      229     8614    1      THEN GOTO COMMON;
      230     8615
      231     8616    1      TEMP2 = KN$NETPARM.FUNCTION;

   8616   0 00000E  EF47 002B                            STR,R6   TEMP2,AUTO

      232     8617
      233     8618    1      IF TEMP2=%KN_FCN_TERM OR TEMP2=%K_NDISCONNECT_IND

   8618   0 000010  6D03                                 CMV,R6   3
          0 000011  0901 0004                            BE       s:8620,PREL
          0 000013  6D24                                 CMV,R6   36
          0 000014  0981 00EC                            BNE      s:8710,PREL

      234     8619    2      THEN DO;

      235     8620    2           CALL KNT$TR_TERM(KN$NETPARM);

   8620   0 000016  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 000018  CBF0 0100                            LAB,B4   256,IMO
          0 00001A  E380 0000 0000  xent                 LNJ,B6   KNT$TR_TERM
          0 00001D       0001                            DC       s:8622,PREL

      236     8621
      237     8622    2           TEMP = KN$NETPARM.NODE;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:97   

   8622   0 00001E  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          0 000020  E846 0015                            LDR,R6   21,B6
          0 000022  EF47 002A                            STR,R6   TEMP,AUTO

      238     8623
      239     8624    3           DO TCTX# = 1 TO KN_TCTX_MAX#;

   8624   0 000024  5C01                                 LDV,R5   1
          0 000025  DF47 001E                            STR,R5   TCTX#,AUTO
          0 000027  0F81 00AA                            B        s:8685+2,PREL

      240     8625    3                CTX$ = KN$TCTX$(TCTX#);

   8625   0 000029  EC80 0000 0000  xsym                 LDB,B6   KN_TCTX$$
          0 00002C  B847 001E                            LDR,R3   TCTX#,AUTO
          0 00002E  DCB6                                 LDB,B5   ,B6,R3
          0 00002F  DFC7 000C                            STB,B5   CTX$,AUTO

      241     8626    3                IF CTX$ ~= ADDR(NIL)

   8626   0 000031  8DC7 000C                            CMN      CTX$,AUTO
          0 000033  0901 009C                            BE       s:8685,PREL

      242     8627    4                THEN DO;

      243     8628    4                     IF (KN$TCTX.STATE > %K_TSTATE_CLOSED)

   8628   0 000035  E285                                 LLH,R6   ,B5
          0 000036  6D02                                 CMV,R6   2
          0 000037  0381 0098                            BLE      s:8685,PREL

      244     8629    5                     THEN DO;

      245     8630    5                          IF (KN$TCTX.PRIMARY='0'B AND KN$TCTX.HOST_NODE=TEMP)

   8630   0 000039  82C5 000D                            LB,'0001'X        13,B5
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:98   
   8630   0 00003B       0001
          0 00003C  0501 0007                            BBT      s:8633,PREL
          0 00003E  D2C5 0004                            LLH,R5   4,B5
          0 000040  D947 002A                            CMR,R5   TEMP,AUTO
          0 000042  0901 0012                            BE       s:8639,PREL

      246     8631    5                          THEN GOTO HOST_CRASH;
      247     8632
      248     8633    5                          IF (KN$TCTX.NODE = TEMP)

   8633   0 000044  D805                                 LDR,R5   ,B5
          0 000045  D570 00FF                            AND,R5   255,IMO
          0 000047  D947 002A                            CMR,R5   TEMP,AUTO
          0 000049  0981 0086                            BNE      s:8685,PREL

      249     8634    6                          THEN DO;

      250     8635    6                               IF TEMP2=%K_NDISCONNECT_IND AND KN$TCTX.CLASS=4

   8635   0 00004B  C847 002B                            LDR,R4   TEMP2,AUTO
          0 00004D  4D24                                 CMV,R4   36
          0 00004E  0981 0006                            BNE      s:8639,PREL
          0 000050  A2C5 0005                            LLH,R2   5,B5
          0 000052  2D04                                 CMV,R2   4
          0 000053  0901 007C                            BE       s:8685,PREL

      251     8636    6                               THEN GOTO DONT_TERM_YET;
      252     8637
      253     8638    6   HOST_CRASH:
      254     8639    6                               KN$NETPARM.TCTX$ = CTX$;

   8639   0 000055  CCC7 0004            HOST_CRASH      LDB,B4   @KN$NETPARM,AUTO
          0 000057  DFC4 001B                            STB,B5   27,B4

      255     8640    6                               KN$NETPARM.TCTX_ID = KN$TCTX.SRC_REF;

   8640   0 000059  E845 0002                            LDR,R6   2,B5
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:99   
          0 00005B  EF44 0011                            STR,R6   17,B4

      256     8641    6                               KN$TCTX.ERR = %K_ERROR_TERM;

   8641   0 00005D  D870 00F5                            LDR,R5   245,IMO
          0 00005F  DAC5 000E                            SRM,R5,'00FF'X    14,B5
          0 000061       00FF

      257     8642
      258     8643    6                               CALL KNT$RLS_CHAIN(KN$TCTX);

   8643   0 000062  BBC7 000C                            LAB,B3   CTX$,AUTO
          0 000064  CBF0 0100                            LAB,B4   256,IMO
          0 000066  E380 0000 0000  xent                 LNJ,B6   KNT$RLS_CHAIN
          0 000069       0001                            DC       s:8645,PREL

      259     8644
      260     8645    6                               IF (KN$TCTX.PRIMARY)

   8645   0 00006A  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 00006C  82C6 000D                            LB,'0001'X        13,B6
          0 00006E       0001
          0 00006F  0581 0018                            BBF      s:8656,PREL

      261     8646    7                               THEN DO;

      262     8647    7                                    KN$NETPARM.NODE = TEMP;

   8647   0 000071  DCC7 0004                            LDB,B5   @KN$NETPARM,AUTO
          0 000073  E847 002A                            LDR,R6   TEMP,AUTO
          0 000075  EF45 0015                            STR,R6   21,B5

      263     8648    7                                    KN$NETPARM.MSGSZ = 0;

   8648   0 000077  8745 0004                            CL       4,B5

      264     8649    7                                    KN$NETPARM.UHDRSZ = 0;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:100  

   8649   0 000079  8745 0007                            CL       7,B5

      265     8650    7                                    CALL KNS$RECV(KN$NETPARM);

   8650   0 00007B  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 00007D  CBF0 0100                            LAB,B4   256,IMO
          0 00007F  E380 0000 0000  xent                 LNJ,B6   KNS$RECV
          0 000082       0001                            DC       s:8652,PREL

      266     8651
      267     8652    7                                    CALL I$SET_REFWAIT;

   8652   0 000083  E3C0 12D8                            LNJ,B6   s:0,PREL
          0 000085       0001                            DC       s:8653,PREL

      268     8653    7                                    END;

   8653   0 000086  0F81 0031                            B        s:8680,PREL

      269     8654
      270     8655    7                               ELSE DO;

      271     8656    7                                    IF KN$TCTX.HOST_NODE = TEMP

   8656   0 000088  E2C6 0004                            LLH,R6   4,B6
          0 00008A  E947 002A                            CMR,R6   TEMP,AUTO
          0 00008C  0981 0020                            BNE      s:8675,PREL

      272     8657    8                                   THEN DO; /*host went down - tell remote transport*/

      273     8658    8                                         IF KN$TCTX.CLASS = 0

   8658   0 00008E  D2C6 0005                            LLH,R5   5,B6
          0 000090  5981 0003                            BNEZ,R5  s:8663,PREL

      274     8659    9                                         THEN DO;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:101  

      275     8660                                                   /*N*   send NRESET */
      276     8661    9                                              END;

   8661   0 000092  0F81 0025                            B        s:8680,PREL

      277     8662    9                                         ELSE DO;

      278     8663    9                                              KN$TCTX.STATE = %K_TSTATE_CLOSING;

   8663   0 000094  4C08                                 LDV,R4   8
          0 000095  C786                                 STH,R4   ,B6

      279     8664    9                                              CALL KNT$SEND_DR(KN$NETPARM);

   8664   0 000096  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 000098  CBF0 0100                            LAB,B4   256,IMO
          0 00009A  E380 0000 0000  xent                 LNJ,B6   KNT$SEND_DR
          0 00009D       0001                            DC       s:8666,PREL

      280     8665
      281     8666    9                                              IF KN$TCTX.CLASS = 4

   8666   0 00009E  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 0000A0  E2C6 0005                            LLH,R6   5,B6
          0 0000A2  6D04                                 CMV,R6   4
          0 0000A3  0981 0014                            BNE      s:8680,PREL

      282     8667   10                                              THEN DO;

      283     8668   10                                                   KN$TCTX.SEND_RETRY_COUNT = 1;

   8668   0 0000A5  5C01                                 LDV,R5   1
          0 0000A6  D7C6 004D                            STH,R5   77,B6

      284     8669   10                                                   CALL I$SET_RETRAN;

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:102  
   8669   0 0000A8  E3C0 14D4                            LNJ,B6   s:0,PREL
          0 0000AA       0001                            DC       s:8672,PREL

      285     8670   10                                                   END;

      286     8671    9                                              END;

      287     8672    8                                         END/*do for host_node*/;

   8672   0 0000AB  0F81 000C                            B        s:8680,PREL

      288     8673
      289     8674    8                                   ELSE DO; /*remote went down - tell host transport*/

      290     8675    8                                         CALL KNT$SEND_DR_HOST(KN$NETPARM);

   8675   0 0000AD  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 0000AF  CBF0 0100                            LAB,B4   256,IMO
          0 0000B1  E380 0000 0000  xent                 LNJ,B6   KNT$SEND_DR_HOST
          0 0000B4       0001                            DC       s:8676,PREL

      291     8676    8                                         CALL I$SET_REFWAIT;

   8676   0 0000B5  E3C0 12A6                            LNJ,B6   s:0,PREL
          0 0000B7       0001                            DC       s:8680,PREL

      292     8677    8                                         END/*do for remote   */;

      293     8678    7                                    END/*do if intermediate connection*/;

      294     8679
      295     8680    6                               IF KN$TCTX.LNK$ ~= ADDR(NIL)

   8680   0 0000B8  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 0000BA  8DC6 0006                            CMN      6,B6
          0 0000BC  0901 000D                            BE       s:8683,PREL

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:103  
      296     8681    6                               THEN CALL KNT$UNQ_FLOW(KN$TCTX.LNK$);

   8681   0 0000BE  DBC6 0006                            LAB,B5   6,B6
          0 0000C0  DFC7 003E                            STB,B5   BUFS_RLSD+3,AUTO
          0 0000C2  BBC7 003E                            LAB,B3   BUFS_RLSD+3,AUTO
          0 0000C4  CBF0 0100                            LAB,B4   256,IMO
          0 0000C6  E380 0000 0000  xent                 LNJ,B6   KNT$UNQ_FLOW
          0 0000C9       0001                            DC       s:8683,PREL

      297     8682
      298     8683    6                               KN$NETPARM.FUNCTION = TEMP2;

   8683   0 0000CA  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          0 0000CC  E847 002B                            LDR,R6   TEMP2,AUTO
          0 0000CE  EF46 0014                            STR,R6   20,B6

      299     8684    6   DONT_TERM_YET:
      300     8685    6                               END/*do for intermediate and non class 4 primary*/;

   8685   0                              DONT_TERM_YET   null
      301     8686    5                          END/*do if state > closed*/;

      302     8687    4                     END/*do if trans_ctx$ not nil*/;

      303     8688    3                END/*do indexed*/;

   8688   0 0000D0  8AC7 001E            DONT_TERM_YET   INC      TCTX#,AUTO
          0 0000D2  E847 001E                            LDR,R6   TCTX#,AUTO
          0 0000D4  E900 0000 0000  xsym                 CMR,R6   KN_TCTX_MAX#
          0 0000D7  0381 FF51                            BLE      s:8625,PREL

      304     8689
      305     8690        /* Let session know about the TERM so we can rundown the qdp session
      306     8691           connections for the terminating host node.
      307     8692        */
      308     8693    2           IF TEMP2=%K_NDISCONNECT_IND AND KN$TCTX.CLASS=4

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:104  
   8693   0 0000D9  D847 002B                            LDR,R5   TEMP2,AUTO
          0 0000DB  5D24                                 CMV,R5   36
          0 0000DC  0981 000B                            BNE      s:8696,PREL
          0 0000DE  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 0000E0  C2C6 0005                            LLH,R4   5,B6
          0 0000E2  4D04                                 CMV,R4   4
          0 0000E3  0981 0004                            BNE      s:8696,PREL

      309     8694    2           THEN RETURN;

   8694   0 0000E5  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      310     8695
      311     8696    2           KN$NETPARM.NODE = TEMP;

   8696   0 0000E8  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          0 0000EA  C847 002A                            LDR,R4   TEMP,AUTO
          0 0000EC  CF46 0015                            STR,R4   21,B6

      312     8697    2           KN$NETPARM.MSGSZ = 0;

   8697   0 0000EE  8746 0004                            CL       4,B6

      313     8698    2           KN$NETPARM.UHDRSZ = 0;

   8698   0 0000F0  8746 0007                            CL       7,B6

      314     8699    2           KN$NETPARM.SHDRSZ = 0;

   8699   0 0000F2  8746 000A                            CL       10,B6

      315     8700    2           KN$NETPARM.TCTX_ID = 0;

   8700   0 0000F4  8746 0011                            CL       17,B6

      316     8701    2           CALL KNS$RECV(KN$NETPARM);

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:105  
   8701   0 0000F6  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 0000F8  CBF0 0100                            LAB,B4   256,IMO
          0 0000FA  E380 0000 0000  xent                 LNJ,B6   KNS$RECV
          0 0000FD       0001                            DC       s:8703,PREL

      317     8702
      318     8703    2           RETURN;

   8703   0 0000FE  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      319     8704    2           END/*do for term like functions*/;
      320     8705
      321     8706
      322     8707
      323     8708        /* If the code isn't data or reset - screech.
      324     8709        */
      325     8710    1      CALL TRANSPORT_SCREECH;

   8710   0 000101  E3C0 14F3                            LNJ,B6   s:0,PREL
          0 000103       0001                            DC       s:8710+3,PREL
          0 000104  0F81 0006                            B        s:8715,PREL

      326     8711
      327     8712        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:106  
      328     8713
      329     8714    1   KNT$RECV_HOST_DATA: ENTRY(KN$NETPARM) ALTRET;

   8714   0 000106  D380 0000 0000  xent KNT$RECV_HOST_D*LNJ,B5   X6A_AUTO_1
          0 000109       0048 0001                       DC       72,1

      330     8715    1      ENTRY_SWITCH = %RECV_4HOST;

   8715   0 00010B  6C01                                 LDV,R6   1
          0 00010C  EF47 0029                            STR,R6   ENTRY_SWITCH,AUTO

      331     8716    1      GOTO COMMON;

   8716   0 00010E  0F81 0009                            B        s:8719,PREL

      332     8717
      333     8718    1   KNT$SEND_CR_4HOST: ENTRY(KN$NETPARM) ALTRET;

   8718   0 000110  D380 0000 0000  xent KNT$SEND_CR_4HO*LNJ,B5   X6A_AUTO_1
          0 000113       0048 0001                       DC       72,1

      334     8719    1      ENTRY_SWITCH = %SEND_4HOST;

   8719   0 000115  6C02                                 LDV,R6   2
          0 000116  EF47 0029                            STR,R6   ENTRY_SWITCH,AUTO

   8719   0                              COMMON          null
      335     8720
      336     8721    1   COMMON: ;
      337     8722    1      CTX$ = ADDR(NIL);

   8722   0 000118  EB80 0000 0000       COMMON          LAB,B6   0
          0 00011B  EFC7 000C                            STB,B6   CTX$,AUTO

      338     8723    1      NEXT$ = KN$NETPARM.THDR_C$;

   8723   0 00011D  DCC7 0004                            LDB,B5   @KN$NETPARM,AUTO
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:107  
          0 00011F  8CC5 000B                            LDI      11,B5
          0 000121  8D47 0016                            SDI      NEXT$,AUTO

      339     8724    1      BUF$ = ADDR(TPDU_BUF);

   8724   0 000123  CBC7 002C                            LAB,B4   TPDU_BUF,AUTO
          0 000125  CFC7 000E                            STB,B4   BUF$,AUTO

      340     8725    1      NEXT_SZ = KN$NETPARM.THDRSZ;

   8725   0 000127  D845 000D                            LDR,R5   13,B5
          0 000129  DF47 0010                            STR,R5   NEXT_SZ,AUTO

      341     8726    1      TPDUSIZE = KN$NETPARM.THDRSZ;

   8726   0 00012B  DF47 001B                            STR,R5   TPDUSIZE,AUTO

      342     8727
      343     8728    1      IF KN$LDCT.CONN_TYPE = %KN_CNTYPE_CIRCUIT

   8728   0 00012D  BC85                                 LDB,B3   ,B5
          0 00012E  C283                                 LLH,R4   ,B3
          0 00012F  4D07                                 CMV,R4   7
          0 000130  0981 000D                            BNE      s:8735,PREL

      344     8729    2      THEN DO;

      345     8730    2           LDCT_CIRCUIT = '1'B;

   8730   0 000132  8947 0028                            LBT,'8000'X       LDCT_CIRCUIT,AUTO
   8730   0 000134       8000

      346     8731    2           KN$NETPARM.FUNCTION = %K_NDATA;

   8731   0 000135  3C21                                 LDV,R3   33
          0 000136  BF45 0014                            STR,R3   20,B5

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:108  
      347     8732    2           KN$NETPARM.UHDRSZ = 0;

   8732   0 000138  8745 0007                            CL       7,B5

      348     8733    2           KN$NETPARM.NHDRSZ = 0;

   8733   0 00013A  8745 0010                            CL       16,B5

      349     8734    2           END;

   8734   0 00013C  0F81 0003                            B        s:8741,PREL

      350     8735    1      ELSE LDCT_CIRCUIT = '0'B;

   8735   0 00013E  8747 0028                            CL       LDCT_CIRCUIT,AUTO

      351     8736
      352     8737        /* Here begins a large do while loop to process the NSDU.
      353     8738           Some types of TPDUs may be concatenated into one NSDU.
      354     8739           See section 6.4 of the OSI spec.
      355     8740        */
      356     8741    2      DO WHILE (NEXT_SZ > 2);

   8741   0 000140  5D02                                 CMV,R5   2
          0 000141  0A81 0DD9                            BALE     s:10164,PREL

      357     8742    2           TEMP = NEXT_SZ;

   8742   0 000143  E847 0010                            LDR,R6   NEXT_SZ,AUTO
          0 000145  EF47 002A                            STR,R6   TEMP,AUTO

      358     8743    2           IF TEMP > 10

   8743   0 000147  6D0A                                 CMV,R6   10
          0 000148  0A81 0004                            BALE     s:8746,PREL

      359     8744    2           THEN TEMP = 10;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:109  

   8744   0 00014A  6C0A                                 LDV,R6   10
          0 00014B  EF47 002A                            STR,R6   TEMP,AUTO

      360     8745
      361     8746    2           BUF$->CHRBSD = NEXT$->CHRBSD;

   8746   0 00014D  8CC7 0016                            LDI      NEXT$,AUTO
          0 00014F  B856                                 LDR,R3   R6
          0 000150  E570 7FFF                            AND,R6   32767,IMO
          0 000152  8D47 003E                            SDI      BUFS_RLSD+3,AUTO
          0 000154  ECC7 003E                            LDB,B6   BUFS_RLSD+3,AUTO
          0 000156  304F                                 SOR,R3   15
          0 000157  AB86                                 LAB,B2   ,B6
          0 000158  A853                                 LDR,R2   R3
          0 000159  E847 002A                            LDR,R6   TEMP,AUTO
          0 00015B  BCC7 000E                            LDB,B3   BUF$,AUTO
          0 00015D  3C00                                 LDV,R3   0
          0 00015E  0008                                 MMM

      362     8747
      363     8748    2           TPDU$ = NEXT$;

   8748   0 00015F  8CC7 0016                            LDI      NEXT$,AUTO
          0 000161  8D47 000A                            SDI      TPDU$,AUTO

      364     8749    2           TYPE = TPDU_BUF.TYPE;

   8749   0 000163  D847 002C                            LDR,R5   TPDU_BUF,AUTO
          0 000165  5044                                 SOR,R5   4
          0 000166  D570 000F                            AND,R5   15,IMO
          0 000168  DF47 001C                            STR,R5   TYPE,AUTO

      365     8750    2           LI = TPDU_BUF.LI;

   8750   0 00016A  C2C7 002C                            LLH,R4   TPDU_BUF,AUTO
          0 00016C  CF47 001F                            STR,R4   LI,AUTO
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:110  

      366     8751
      367     8752    2           IF LDCT_CIRCUIT AND TYPE=%K_TPDU_TYPE_DT

   8752   0 00016E  89C7 0028                            CMZ      LDCT_CIRCUIT,AUTO
          0 000170  0881 000D                            BAGE     s:8754,PREL
          0 000172  5D0F                                 CMV,R5   15
          0 000173  0981 000A                            BNE      s:8754,PREL

      368     8753    2           THEN DST_REF = KN$LDCT.RLCID.TCTX#;

   8753   0 000175  DCC7 0004                            LDB,B5   @KN$NETPARM,AUTO
          0 000177  CC85                                 LDB,B4   ,B5
          0 000178  B844 0002                            LDR,R3   2,B4
          0 00017A  BF47 001D                            STR,R3   DST_REF,AUTO
          0 00017C  0F81 0005                            B        s:8759,PREL

      369     8754    2           ELSE DST_REF = TPDU_BUF.DST_REF;

   8754   0 00017E  B847 002D                            LDR,R3   TPDU_BUF+1,AUTO
          0 000180  BF47 001D                            STR,R3   DST_REF,AUTO

      370     8755
      371     8756        /* There may on be one CR, CC, DR, DT or ED; and if present, it must
      372     8757           be the last in the list.
      373     8758        */
      374     8759    2           IF ( ( TYPE = %K_TPDU_TYPE_CR ) OR

   8759   0 000182  5D0E                                 CMV,R5   14
          0 000183  0901 000D                            BE       s:8765,PREL
          0 000185  5D0D                                 CMV,R5   13
          0 000186  0901 000A                            BE       s:8765,PREL
          0 000188  5D08                                 CMV,R5   8
          0 000189  0901 0007                            BE       s:8765,PREL
          0 00018B  5D0F                                 CMV,R5   15
          0 00018C  0901 0004                            BE       s:8765,PREL
          0 00018E  5D01                                 CMV,R5   1
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:111  
          0 00018F  0981 001C                            BNE      s:8775,PREL

      375     8760    2             ( TYPE = %K_TPDU_TYPE_CC )OR
      376     8761    2             (TYPE = %K_TPDU_TYPE_DR ) OR
      377     8762    2             (TYPE = %K_TPDU_TYPE_DT ) OR
      378     8763    2             (TYPE = %K_TPDU_TYPE_ED) )
      379     8764    3           THEN DO;

      380     8765    3                TPDUSIZE = NEXT_SZ;

   8765   0 000191  A847 0010                            LDR,R2   NEXT_SZ,AUTO
          0 000193  AF47 001B                            STR,R2   TPDUSIZE,AUTO

      381     8766    3                DATA$ = PINCRC(NEXT$,LI + 1 );

   8766   0 000195  7031                                 DCL,R7   1
          0 000196  8D47 003E                            SDI      BUFS_RLSD+3,AUTO
          0 000198  E854                                 LDR,R6   R4
          0 000199  70F0                                 DAR,R7   16
          0 00019A  8447 003E                            AID      BUFS_RLSD+3,AUTO
          0 00019C  7071                                 DCR,R7   1
          0 00019D  7031                                 DCL,R7   1
          0 00019E  8470 0000 0001                       AID      1,IMO
          0 0001A1  7071                                 DCR,R7   1
          0 0001A2  8D47 0007                            SDI      DATA$,AUTO

      382     8767    3                DATASIZE = TPDUSIZE - LI - 1;

   8767   0 0001A4  A254                                 SUB,R2   R4
          0 0001A5  2EFF                                 ADV,R2   -1
          0 0001A6  AF47 0009                            STR,R2   DATASIZE,AUTO

      383     8768    3                NEXT_SZ = 0;

   8768   0 0001A8  8747 0010                            CL       NEXT_SZ,AUTO

      384     8769    3                GOTO VALIDATE_TPDU;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:112  

   8769   0 0001AA  0F81 005C                            B        s:8811,PREL

      385     8770    3                END;
      386     8771
      387     8772        /* There may be any number of AK, EA, RJ, ER or DCs; providing
      388     8773           they come from different transport connections.
      389     8774        */
      390     8775    2           IF ( ( TYPE = %K_TPDU_TYPE_AK ) OR

   8775   0 0001AC  5D06                                 CMV,R5   6
          0 0001AD  0901 000A                            BE       s:8780,PREL
          0 0001AF  5D02                                 CMV,R5   2
          0 0001B0  0901 0007                            BE       s:8780,PREL
          0 0001B2  5D07                                 CMV,R5   7
          0 0001B3  0901 0004                            BE       s:8780,PREL
          0 0001B5  5D0C                                 CMV,R5   12
          0 0001B6  0981 001C                            BNE      s:8792,PREL

      391     8776    2             ( TYPE = %K_TPDU_TYPE_EA )OR
      392     8777    2             (TYPE = %K_TPDU_TYPE_ER ) OR
      393     8778    2             (TYPE = %K_TPDU_TYPE_DC) )
      394     8779    3           THEN DO;

      395     8780    3                TPDUSIZE = LI + 1;

   8780   0 0001B8  4E01                                 ADV,R4   1
          0 0001B9  CF47 001B                            STR,R4   TPDUSIZE,AUTO

      396     8781    3                NEXT$ = PINCRC(NEXT$,TPDUSIZE);

   8781   0 0001BB  7031                                 DCL,R7   1
          0 0001BC  8D47 003E                            SDI      BUFS_RLSD+3,AUTO
          0 0001BE  E854                                 LDR,R6   R4
          0 0001BF  70F0                                 DAR,R7   16
          0 0001C0  8447 003E                            AID      BUFS_RLSD+3,AUTO
          0 0001C2  7071                                 DCR,R7   1
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:113  
          0 0001C3  8D47 0016                            SDI      NEXT$,AUTO

      397     8782    3                DATA$ = ADDR(NIL);

   8782   0 0001C5  DB80 0000 0000                       LAB,B5   0
          0 0001C8  DFC7 0007                            STB,B5   DATA$,AUTO

      398     8783    3                DATASIZE = 0;

   8783   0 0001CA  8747 0009                            CL       DATASIZE,AUTO

      399     8784    3                NEXT_SZ = NEXT_SZ - TPDUSIZE;

   8784   0 0001CC  C247 0010                            SUB,R4   NEXT_SZ,AUTO
          0 0001CE  8254                                 NEG      R4
          0 0001CF  CF47 0010                            STR,R4   NEXT_SZ,AUTO

      400     8785    3                GOTO VALIDATE_TPDU;

   8785   0 0001D1  0F81 0035                            B        s:8811,PREL

      401     8786    3                END;
      402     8787
      403     8788        /* Any other type of TPDU must be a corrupted TPDU.  Log the error
      404     8789           and discard the TPDU.
      405     8790        */
      406     8791    2   LOG_BAD_TPDU_TYPE:
      407     8792    2           ERRNUM = %K_ERROR_TPDU_TYPE; GOTO LOG_BAD_TPDU;

   8792   0 0001D3  E870 00E6            LOG_BAD_TPDU_TY*LDR,R6   230,IMO
          0 0001D5  EF47 0006                            STR,R6   ERRNUM,AUTO

   8792   0 0001D7  0F81 000C                            B        s:8799,PREL

   8783   0                              LOG_BAD_CHKSUM  null
      408     8793
      409     8794    2   LOG_BAD_CHKSUM: ;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:114  
      410     8795    2           KN$TCTX.RERR.CHKSUM = KN$TCTX.RERR.CHKSUM +1;

   8795   0 0001D9  ECC7 000C            LOG_BAD_CHKSUM  LDB,B6   CTX$,AUTO
          0 0001DB  8AC6 0015                            INC      21,B6

      411     8796
      412     8797    2   COUNT_BAD_CHKSUM:
      413     8798    2           KNT_CHKSUM_ERR = KNT_CHKSUM_ERR +1;

   8798   0 0001DD  8A80 0000 0000  xsym COUNT_BAD_CHKSUMINC      KNT_CHKSUM_ERR

      414     8799    2           ERRNUM = %K_ERROR_CHKSUM;

   8799   0 0001E0  E870 00F2                            LDR,R6   242,IMO
          0 0001E2  EF47 0006                            STR,R6   ERRNUM,AUTO

   8799   0                              LOG_BAD_TPDU    null
      415     8800
      416     8801    2   LOG_BAD_TPDU: ;
      417     8802    2           IF KNT_ERROR_SCREECH ~= 0

   8802   0 0001E4  E800 0000 0000  xsym LOG_BAD_TPDU    LDR,R6   KNT_ERROR_SCREECH
          0 0001E7  6901 0004                            BEZ,R6   s:8806,PREL

      418     8803    2           THEN CALL TRANSPORT_SCREECH;

   8803   0 0001E9  E3C0 140B                            LNJ,B6   s:0,PREL
          0 0001EB       0001                            DC       s:8806,PREL

      419     8804
      420     8805    2   DISCARD_TPDU:
      421     8806    2           KNT_DISCARDED_TPDUS = KNT_DISCARDED_TPDUS +1;

   8806   0 0001EC  8A80 0000 0000  xsym DISCARD_TPDU    INC      KNT_DISCARDED_TPDUS

      422     8807
      423     8808    2           KN$NETPARM.THDRSZ = ERRNUM;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:115  

   8808   0 0001EF  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          0 0001F1  E847 0006                            LDR,R6   ERRNUM,AUTO
          0 0001F3  EF46 000D                            STR,R6   13,B6

      424     8809    2           CALL KNT$TR_ERROR(KN$NETPARM);

   8809   0 0001F5  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 0001F7  CBF0 0100                            LAB,B4   256,IMO
          0 0001F9  E380 0000 0000  xent                 LNJ,B6   KNT$TR_ERROR
          0 0001FC       0001                            DC       s:8811,PREL

      425     8810
      426     8811    2           IF ENTRY_SWITCH ~= %PRIMARY THEN ALTRETURN;

   8811   0 0001FD  E847 0029                            LDR,R6   ENTRY_SWITCH,AUTO
          0 0001FF  6901 0004                            BEZ,R6   s:8812,PREL

   8811   0 000201  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      427     8812    2           RETURN;

   8812   0 000204  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

   8811   0                              VALIDATE_TPDU   null
      428     8813
      429     8814        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:116  
      430     8815        /* Validate the TPDU.  Corrupted TPDUs are generally just discarded.
      431     8816           First check the common portions of a TPDU header.
      432     8817        */
      433     8818
      434     8819        /* Check for LI greater than the TPDU itself or less than that
      435     8820           required for this type of TPDU.
      436     8821        */
      437     8822    2   VALIDATE_TPDU: ;
      438     8823    2           IF LI > TPDUSIZE

   8823   0 000207  E847 001F            VALIDATE_TPDU   LDR,R6   LI,AUTO
          0 000209  E947 001B                            CMR,R6   TPDUSIZE,AUTO
          0 00020B  0A01 0019                            BAG      s:8834,PREL

      439     8824    2           THEN GOTO BAD_TPDU_LEN;
      440     8825
      441     8826    2           IF  LDCT_CIRCUIT AND TYPE=%K_TPDU_TYPE_DT

   8826   0 00020D  89C7 0028                            CMZ      LDCT_CIRCUIT,AUTO
          0 00020F  0881 000B                            BAGE     s:8833,PREL
          0 000211  5D0F                                 CMV,R5   15
          0 000212  0981 0008                            BNE      s:8833,PREL

      442     8827    3           THEN DO;

      443     8828    3                IF TPDUSIZE < SIZEC(B$TPDU_DT_0)

   8828   0 000214  C847 001B                            LDR,R4   TPDUSIZE,AUTO
          0 000216  4D03                                 CMV,R4   3
          0 000217  0801 000D                            BAL      s:8834,PREL

      444     8829    3                THEN GOTO BAD_TPDU_LEN;
      445     8830    3                END;

   8830   0 000219  0F81 0011                            B        s:8842,PREL

      446     8831
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:117  
      447     8832    3           ELSE DO;

      448     8833    3                IF K_TPDU_SIZE(TYPE) > TPDUSIZE

   8833   0 00021B  A855                                 LDR,R2   R5
          0 00021C  C820 0000 0000  xsym                 LDR,R4   K_TPDU_SIZE,R2
          0 00021F  4801 0005                            BLZ,R4   s:8834,PREL
          0 000221  C947 001B                            CMR,R4   TPDUSIZE,AUTO
          0 000223  0A81 0007                            BALE     s:8842,PREL

      449     8834    4                THEN DO;

   8828   0                              BAD_TPDU_LEN    null
      450     8835    4   BAD_TPDU_LEN:     ;
      451     8836    4                     ERRNUM = %K_ERROR_TPDU_LEN; GOTO LOG_BAD_TPDU;

   8836   0 000225  E870 00E7            BAD_TPDU_LEN    LDR,R6   231,IMO
          0 000227  EF47 0006                            STR,R6   ERRNUM,AUTO

   8836   0 000229  0F81 FFBA                            B        s:8799,PREL

      452     8837    4                     END;
      453     8838    3                END;
      454     8839
      455     8840        /* Verify that the DST_REF in the TPDU is ok.
      456     8841        */
      457     8842    2           IF TYPE = %K_TPDU_TYPE_CR

   8842   0 00022B  5D0E                                 CMV,R5   14
          0 00022C  0981 0018                            BNE      s:8862,PREL

      458     8843    3           THEN DO;

      459     8844    3                IF LDCT_CIRCUIT THEN GOTO FIND_PARMS;

   8844   0 00022E  89C7 0028                            CMZ      LDCT_CIRCUIT,AUTO
          0 000230  0801 0089                            BAL      s:8932,PREL
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:118  

      460     8845
      461     8846    3                IF DST_REF ~= 0

   8846   0 000232  3901 0010                            BEZ,R3   s:8859,PREL

      462     8847    4                THEN DO;

      463     8848    4                     DST_REF = 0;

   8848   0 000234  8747 001D                            CL       DST_REF,AUTO

      464     8849    4   ERR_MBZ:
      465     8850    4                     ERRNUM = %K_ERROR_MBZ;

   8850   0 000236  C870 00E9            ERR_MBZ         LDR,R4   233,IMO
          0 000238  CF47 0006                            STR,R4   ERRNUM,AUTO

      466     8851    4   RETURN_TPDU_DR:
      467     8852    4                     REASON = %K_REASON_PROTOCOL;

   8852   0 00023A  E870 0085            RETURN_TPDU_DR  LDR,R6   133,IMO
          0 00023C  EF47 0025                            STR,R6   REASON,AUTO

      468     8853    4   RETURN_TPDU_DR2:
      469     8854    4                     CALL I$RETURN_DR;

   8854   0 00023E  E3C0 105D            RETURN_TPDU_DR2 LNJ,B6   s:0,PREL
          0 000240       0001                            DC       s:8856,PREL

      470     8855
      471     8856    4                     GOTO LOG_BAD_TPDU;

   8856   0 000241  0F81 FFA2                            B        s:8799,PREL

      472     8857    4                     END;
      473     8858
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:119  
      474     8859    3                GOTO FIND_PARMS;

   8859   0 000243  0F81 0076                            B        s:8932,PREL

      475     8860    3                END;
      476     8861
      477     8862    2           IF DST_REF > KN_TCTX_MAX#

   8862   0 000245  3801 0006                            BLZ,R3   s:8865,PREL
          0 000247  B900 0000 0000  xsym                 CMR,R3   KN_TCTX_MAX#
          0 00024A  0301 0023                            BG       s:8883,PREL

      478     8863    2           THEN GOTO BAD_DST_REF;
      479     8864
      480     8865    2           CTX$ = KN$TCTX$(DST_REF);

   8865   0 00024C  DC80 0000 0000  xsym                 LDB,B5   KN_TCTX$$
          0 00024F  CCB5                                 LDB,B4   ,B5,R3
          0 000250  CFC7 000C                            STB,B4   CTX$,AUTO

      481     8866    2           IF CTX$ = ADDR(NIL)

   8866   0 000252  8DC7 000C                            CMN      CTX$,AUTO
          0 000254  0981 0029                            BNE      s:8897,PREL

      482     8867    3           THEN DO;

      483     8868    3                IF TYPE = %K_TPDU_TYPE_DR

   8868   0 000256  5D08                                 CMV,R5   8
          0 000257  0981 0012                            BNE      s:8882,PREL

      484     8869    4                THEN DO;

      485     8870    4                     IF TPDU_BUF.DST_REF = 0

   8870   0 000259  C847 002D                            LDR,R4   TPDU_BUF+1,AUTO
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:120  
          0 00025B  4901 0012                            BEZ,R4   s:8883,PREL

      486     8871    4                     THEN GOTO BAD_DST_REF;
      487     8872
      488     8873    4                     IF TPDU_BUF.SRC_REF ~= 0

   8873   0 00025D  A847 002E                            LDR,R2   TPDU_BUF+2,AUTO
          0 00025F  2901 000A                            BEZ,R2   s:8882,PREL

      489     8874    5                     THEN DO;

      490     8875    5                          DST_REF = 0;

   8875   0 000261  8747 001D                            CL       DST_REF,AUTO

      491     8876    5   RETURN_DC:
      492     8877    5                          CALL I$RETURN_DC;

   8877   0 000263  E3C0 1054            RETURN_DC       LNJ,B6   s:0,PREL
          0 000265       0001                            DC       s:8878,PREL

      493     8878    5                          KN$NETPARM.ERRCODE = 0;

   8878   0 000266  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          0 000268  8746 0016                            CL       22,B6

      494     8879    5                          END;

      495     8880    4                     END;

      496     8881
      497     8882    3                IF DST_REF ~= 0

   8882   0 00026A  E847 001D                            LDR,R6   DST_REF,AUTO
          0 00026C  6901 000B                            BEZ,R6   s:8891,PREL

      498     8883    4                THEN DO;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:121  

   8873   0                              BAD_DST_REF     null
      499     8884    4   BAD_DST_REF:      ;
      500     8885    4                     IF TYPE = %K_TPDU_TYPE_CC

   8885   0 00026E  E847 001C            BAD_DST_REF     LDR,R6   TYPE,AUTO
          0 000270  6D0D                                 CMV,R6   13
          0 000271  0981 0006                            BNE      s:8891,PREL

      501     8886    5                     THEN DO;

      502     8887    5                          REASON = 0;

   8887   0 000273  8747 0025                            CL       REASON,AUTO

      503     8888    5                          CALL I$RETURN_DR;

   8888   0 000275  E3C0 1026                            LNJ,B6   s:0,PREL
          0 000277       0001                            DC       s:8891,PREL

      504     8889    5                          END;

      505     8890
      506     8891    4                     END/*then do*/;

      507     8892    3   SET_BAD_DST_REF:
      508     8893    3                ERRNUM = %K_ERROR_DST_REF;

   8893   0 000278  E870 00EB            SET_BAD_DST_REF LDR,R6   235,IMO
          0 00027A  EF47 0006                            STR,R6   ERRNUM,AUTO

      509     8894    3                GOTO DISCARD_TPDU;

   8894   0 00027C  0F81 FF6F                            B        s:8806,PREL

      510     8895    3                END/*do if ctx$ is nil*/;
      511     8896
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:122  
      512     8897    2           KN$NETPARM.TCTX$ = CTX$;

   8897   0 00027E  BCC7 0004                            LDB,B3   @KN$NETPARM,AUTO
          0 000280  CFC3 001B                            STB,B4   27,B3

      513     8898    2           KN$NETPARM.TCTX_ID = KN$TCTX.SRC_REF;

   8898   0 000282  C844 0002                            LDR,R4   2,B4
          0 000284  CF43 0011                            STR,R4   17,B3

      514     8899
      515     8900    2           IF (TYPE=%K_TPDU_TYPE_DR OR TYPE=%K_TPDU_TYPE_DC)

   8900   0 000286  5D08                                 CMV,R5   8
          0 000287  0901 0004                            BE       s:8900+6,PREL
          0 000289  5D0C                                 CMV,R5   12
          0 00028A  0981 0010                            BNE      s:8914,PREL
          0 00028C  A847 0029                            LDR,R2   ENTRY_SWITCH,AUTO
          0 00028E  2D02                                 CMV,R2   2
          0 00028F  0901 000B                            BE       s:8914,PREL

      516     8901    2             AND ENTRY_SWITCH ~= %SEND_4HOST
      517     8902    3           THEN DO;

      518     8903    3                IF TPDU_BUF.SRC_REF ~= KN$TCTX.DST_REF

   8903   0 000291  9847 002E                            LDR,R1   TPDU_BUF+2,AUTO
          0 000293  9944 0001                            CMR,R1   1,B4
          0 000295  0901 0005                            BE       s:8914,PREL

      519     8904    4                THEN DO;

      520     8905    4                     IF TYPE = %K_TPDU_TYPE_DC THEN GOTO SET_BAD_DST_REF;

   8905   0 000297  5D0C                                 CMV,R5   12
          0 000298  0960                                 BE       s:8891,SPREL

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:123  
      521     8906                                                /*ignore  -  see 6.9.4.2 c            */
      522     8907    4                     IF TYPE = %K_TPDU_TYPE_DR THEN GOTO RETURN_DC;

   8907   0 000299  5D08                                 CMV,R5   8
          0 00029A  0949                                 BE       s:8877,SPREL

      523     8908                                                /*           see 6.9.4.2 d-1          */
      524     8909    4                     END/*bad dst_ref*/;

      525     8910    3                END/*tpdu_types with SRC_REF*/;

      526     8911
      527     8912        /* Make sure we got an extended format if thats what we expect.
      528     8913        */
      529     8914    2           IF KN$TCTX.OPTION.EXTENDED ~= '0'B

   8914   0 00029B  82C4 000C                            LB,'0004'X        12,B4
   8914   0 00029D       0004
          0 00029E  0581 000D                            BBF      s:8924,PREL

      530     8915    2           THEN IF K_TPDU_SIZE_EXT(TYPE) > TPDUSIZE

   8915   0 0002A0  A855                                 LDR,R2   R5
          0 0002A1  9820 0000 0000  xsym                 LDR,R1   K_TPDU_SIZE_EXT,R2
          0 0002A4  1801 0005                            BLZ,R1   s:8917,PREL
          0 0002A6  9947 001B                            CMR,R1   TPDUSIZE,AUTO
          0 0002A8  0A81 0003                            BALE     s:8924,PREL

      531     8916    3                THEN DO;

      532     8917    3                     GOTO BAD_TPDU_LEN;

   8917   0 0002AA  0F81 FF7A                            B        s:8834,PREL

      533     8918    3                     END;
      534     8919
      535     8920        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:124  
      536     8921
      537     8922        /* TPDU header appears ok.  Find where the variable length parameters start.
      538     8923        */
      539     8924    2           IF KN$TCTX.OPTION.EXTENDED = '0'B

   8924   0 0002AC  0501 0015                            BBT      s:8934,PREL

      540     8925    3           THEN DO;

      541     8926    3                IF KN$TCTX.CLASS=0 AND TYPE=%K_TPDU_TYPE_DT

   8926   0 0002AE  A2C4 0005                            LLH,R2   5,B4
          0 0002B0  2981 0009                            BNEZ,R2  s:8932,PREL
          0 0002B2  5D0F                                 CMV,R5   15
          0 0002B3  0981 0006                            BNE      s:8932,PREL

      542     8927    4                THEN DO;

      543     8928    4                     TEMP = SIZEC(B$TPDU_DT_0);

   8928   0 0002B5  1C03                                 LDV,R1   3
          0 0002B6  9F47 002A                            STR,R1   TEMP,AUTO

      544     8929    4                     GOTO SET_PARMS;

   8929   0 0002B8  0F81 000F                            B        s:8937,PREL

      545     8930    4                     END;
      546     8931    3   FIND_PARMS:
      547     8932    3                TEMP = K_TPDU_SIZE(TYPE);

   8932   0 0002BA  A855                 FIND_PARMS      LDR,R2   R5
          0 0002BB  C820 0000 0000  xsym                 LDR,R4   K_TPDU_SIZE,R2
          0 0002BE  CF47 002A                            STR,R4   TEMP,AUTO

      548     8933    3                END;

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:125  
   8933   0 0002C0  0F81 0007                            B        s:8937,PREL

      549     8934    2           ELSE TEMP = K_TPDU_SIZE_EXT(TYPE);

   8934   0 0002C2  A855                                 LDR,R2   R5
          0 0002C3  9820 0000 0000  xsym                 LDR,R1   K_TPDU_SIZE_EXT,R2
          0 0002C6  9F47 002A                            STR,R1   TEMP,AUTO

      550     8935
      551     8936    2   SET_PARMS:
      552     8937    2           PARM$ = PINCRC(TPDU$,TEMP);

   8937   0 0002C8  8CC7 000A            SET_PARMS       LDI      TPDU$,AUTO
          0 0002CA  7031                                 DCL,R7   1
          0 0002CB  8D47 003E                            SDI      BUFS_RLSD+3,AUTO
          0 0002CD  E847 002A                            LDR,R6   TEMP,AUTO
          0 0002CF  70F0                                 DAR,R7   16
          0 0002D0  8447 003E                            AID      BUFS_RLSD+3,AUTO
          0 0002D2  7071                                 DCR,R7   1
          0 0002D3  8D47 0018                            SDI      PARM$,AUTO

      553     8938    2           PARMSIZE = LI - TEMP + 1;

   8938   0 0002D5  C847 001F                            LDR,R4   LI,AUTO
          0 0002D7  C247 002A                            SUB,R4   TEMP,AUTO
          0 0002D9  4E01                                 ADV,R4   1
          0 0002DA  CF47 001A                            STR,R4   PARMSIZE,AUTO

      554     8939
      555     8940        /* Get set to pass the message up to session if msg is for this node.
      556     8941        */
      557     8942    2           IF ENTRY_SWITCH = %PRIMARY

   8942   0 0002DC  A847 0029                            LDR,R2   ENTRY_SWITCH,AUTO
          0 0002DE  2981 000B                            BNEZ,R2  s:8951,PREL

      558     8943    3           THEN DO;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:126  

      559     8944    3                KN$NETPARM.SHDR_C$ = DATA$;

   8944   0 0002E0  8CC7 0007                            LDI      DATA$,AUTO
          0 0002E2  DCC7 0004                            LDB,B5   @KN$NETPARM,AUTO
          0 0002E4  8D45 0008                            SDI      8,B5

      560     8945    3                KN$NETPARM.SHDRSZ = DATASIZE;

   8945   0 0002E6  9847 0009                            LDR,R1   DATASIZE,AUTO
          0 0002E8  9F45 000A                            STR,R1   10,B5

      561     8946    3                END;

      562     8947
      563     8948
      564     8949        /* Now processing continues depending on the tpdu type.
      565     8950        */
      566     8951    2           IF TYPE=%K_TPDU_TYPE_DT OR TYPE=%K_TPDU_TYPE_AK /*fast path*/

   8951   0 0002EA  5D0F                                 CMV,R5   15
          0 0002EB  0901 0004                            BE       s:8953,PREL
          0 0002ED  5D06                                 CMV,R5   6
          0 0002EE  0981 001B                            BNE      s:8959,PREL

      567     8952    3           THEN DO;

      568     8953    3                IF KN$TCTX.OPTION.TRACE THEN CALL KNT$TR_RECV(KN$NETPARM);

   8953   0 0002F0  DCC7 000C                            LDB,B5   CTX$,AUTO
          0 0002F2  82C5 000C                            LB,'0040'X        12,B5
          0 0002F4       0040
          0 0002F5  0581 0009                            BBF      s:8954,PREL

   8953   0 0002F7  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 0002F9  CBF0 0100                            LAB,B4   256,IMO
          0 0002FB  E380 0000 0000  xent                 LNJ,B6   KNT$TR_RECV
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:127  
          0 0002FE       0001                            DC       s:8954,PREL

      569     8954    3               IF (KN$TCTX.STATE~=%K_TSTATE_OPEN) AND (KN$TCTX.STATE~=%K_TSTATE_AKWAIT
              8954                         )

   8954   0 0002FF  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 000301  E286                                 LLH,R6   ,B6
          0 000302  6D05                                 CMV,R6   5
          0 000303  0901 0004                            BE       s:8956,PREL
          0 000305  6D07                                 CMV,R6   7
          0 000306  0981 0353                            BNE      s:9307,PREL

      570     8955    3                THEN GOTO SET_BAD_TSTATE;
      571     8956    3                ELSE GOTO GOT_DATA1;

   8956   0 000308  0F81 0589                            B        s:9498,PREL

      572     8957    3                END;
      573     8958
      574     8959    2           CALL KNT$TR_RECV(KN$NETPARM);

   8959   0 00030A  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 00030C  CBF0 0100                            LAB,B4   256,IMO
          0 00030E  E380 0000 0000  xent                 LNJ,B6   KNT$TR_RECV
          0 000311       0001                            DC       s:8964,PREL

      575     8960
      576     8961        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:128  
      577     8962        /*F* NAME: KNT$RECV - Connect Request TPDU received.
      578     8963        */
      579     8964    2           IF TYPE = %K_TPDU_TYPE_CR

   8964   0 000312  E847 001C                            LDR,R6   TYPE,AUTO
          0 000314  6D0E                                 CMV,R6   14
          0 000315  0981 032E                            BNE      s:9300,PREL

      580     8965    3           THEN DO;

      581     8966    3                IF ENTRY_SWITCH = %SEND_4HOST THEN GOTO GET_TCTX;

   8966   0 000317  D847 0029                            LDR,R5   ENTRY_SWITCH,AUTO
          0 000319  5D02                                 CMV,R5   2
          0 00031A  0901 0092                            BE       s:9029,PREL

      582     8967
      583     8968    3                IF KN$NETPARM.FUNCTION = %K_NDATA

   8968   0 00031C  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          0 00031E  C846 0014                            LDR,R4   20,B6
          0 000320  4D21                                 CMV,R4   33
          0 000321  0981 0017                            BNE      s:8977,PREL

      584     8969    4                THEN DO;

      585     8970    4                     IF (B$TPDU_CR.CLASS=0 AND DATASIZE>0) OR (DATASIZE > 32)

   8970   0 000323  DCC7 000E                            LDB,B5   BUF$,AUTO
          0 000325  82C5 0003                            LB,'F000'X        3,B5
          0 000327       F000
          0 000328  0501 0005                            BBT      s:8970+11,PREL
          0 00032A  B847 0009                            LDR,R3   DATASIZE,AUTO
          0 00032C  3A01 0006                            BGZ,R3   s:8972,PREL
          0 00032E  B847 0009                            LDR,R3   DATASIZE,AUTO
          0 000330  3D20                                 CMV,R3   32
          0 000331  0A81 0007                            BALE     s:8977,PREL
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:129  

      586     8971    5                     THEN DO;

      587     8972    5                          ERRNUM = %K_ERROR_DATASZ;

   8972   0 000333  A870 00E5                            LDR,R2   229,IMO
          0 000335  AF47 0006                            STR,R2   ERRNUM,AUTO

      588     8973    5                          GOTO RETURN_TPDU_DR;

   8973   0 000337  0F81 FF02                            B        s:8852,PREL

      589     8974    5                          END;
      590     8975    4                     END;
      591     8976
      592     8977    3                IF ( (B$TPDU_CR.CLASS ~= 4 ) AND

   8977   0 000339  DCC7 000E                            LDB,B5   BUF$,AUTO
          0 00033B  B845 0003                            LDR,R3   3,B5
          0 00033D  304C                                 SOR,R3   12
          0 00033E  3D04                                 CMV,R3   4
          0 00033F  0901 0009                            BE       s:8977+16,PREL
          0 000341  3D02                                 CMV,R3   2
          0 000342  0901 0006                            BE       s:8977+16,PREL
          0 000344  82C5 0003                            LB,'F000'X        3,B5
          0 000346       F000
          0 000347  0501 000C                            BBT      s:8983,PREL
          0 000349  82C5 0003                            LB,'F000'X        3,B5
          0 00034B       F000
          0 00034C  0581 0004                            BBF      s:8977+24,PREL
          0 00034E  3D02                                 CMV,R3   2
          0 00034F  0981 000E                            BNE      s:8993,PREL
          0 000351  4D21                                 CMV,R4   33
          0 000352  0901 000B                            BE       s:8993,PREL

      593     8978    3                  (B$TPDU_CR.CLASS ~= 2) AND
      594     8979    3                  (B$TPDU_CR.CLASS ~= 0 ) )
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:130  
      595     8980    3                  OR
      596     8981    3                  ( ( B$TPDU_CR.CLASS=0 OR B$TPDU_CR.CLASS=2)
      597     8982    3                  AND KN$NETPARM.FUNCTION~=%K_NDATA)
      598     8983    4                THEN DO;

   8979   0                              REPORT_NEGOTIAT*null
      599     8984    4   REPORT_NEGOTIATION: ;
      600     8985    4                     ERRNUM = %K_ERROR_CLASS;

   8985   0 000354  E870 00EE            REPORT_NEGOTIAT*LDR,R6   238,IMO
          0 000356  EF47 0006                            STR,R6   ERRNUM,AUTO

      601     8986    4                     REASON = %K_REASON_NEGOTIATION;

   8986   0 000358  D870 0082                            LDR,R5   130,IMO
          0 00035A  DF47 0025                            STR,R5   REASON,AUTO

      602     8987    4                     GOTO RETURN_TPDU_DR2;

   8987   0 00035C  0F81 FEE1                            B        s:8854,PREL

      603     8988    4                     END;
      604     8989
      605     8990        /* If this is a OSI connect request, it must be directed to or have
      606     8991           come from an adjacent host (at least for E00).
      607     8992        */
      608     8993    3                IF KN$NETPARM.FUNCTION=%K_NDATA AND ENTRY_SWITCH=%PRIMARY

   8993   0 00035E  4D21                                 CMV,R4   33
          0 00035F  0981 0004                            BNE      s:9001,PREL
          0 000361  5981 0002                            BNEZ,R5  s:9001,PREL

      609     8994    4                THEN DO;

      610     8995    4                     GOTO REPORT_NEGOTIATION;

   8995   0 000363  0FF1                                 B        s:8983,SPREL
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:131  

      611     8996    4                     END;
      612     8997
      613     8998        /* If this is a OSI CONS connection, it should be a VC Connection.
      614     8999           In that case we should already have a TCTX with state WRCR_TPDU.
      615     9000        */
      616     9001    3                IF (ENTRY_SWITCH = %RECV_4HOST) AND (KN$NETPARM.LDCT$ ~= ADDR(NIL) )

   9001   0 000364  5D01                                 CMV,R5   1
          0 000365  0981 0031                            BNE      s:9028,PREL
          0 000367  8D86                                 CMN      ,B6
          0 000368  0901 002E                            BE       s:9028,PREL

      617     9002    4                THEN DO;

      618     9003    4                     IF LDCT_CIRCUIT

   9003   0 00036A  89C7 0028                            CMZ      LDCT_CIRCUIT,AUTO
          0 00036C  0881 002A                            BAGE     s:9028,PREL

      619     9004    5                     THEN DO;

      620     9005    5                          CTX$ = KN$TCTX$(KN$LDCT.RLCID.TCTX#);

   9005   0 00036E  CC86                                 LDB,B4   ,B6
          0 00036F  A844 0002                            LDR,R2   2,B4
          0 000371  BC80 0000 0000  xsym                 LDB,B3   KN_TCTX$$
          0 000374  ACA3                                 LDB,B2   ,B3,R2
          0 000375  AFC7 000C                            STB,B2   CTX$,AUTO

      621     9006
      622     9007    5                          IF KN$TCTX.STATE = %K_TSTATE_WFCR_TPDU

   9007   0 000377  B282                                 LLH,R3   ,B2
          0 000378  3D0B                                 CMV,R3   11
          0 000379  0981 0005                            BNE      s:9010,PREL

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:132  
      623     9008    5                          THEN KN$TCTX.STATE = %K_TSTATE_CLOSED;

   9008   0 00037B  2C02                                 LDV,R2   2
          0 00037C  A782                                 STH,R2   ,B2
          0 00037D  0F81 000A                            B        s:9015,PREL

      624     9009    6                          ELSE DO;

      625     9010    6                               ERRNUM = %K_ERROR_DUP_CR;

   9010   0 00037F  A870 00E8                            LDR,R2   232,IMO
          0 000381  AF47 0006                            STR,R2   ERRNUM,AUTO

      626     9011    6                               REASON = %K_REASON_NOTATTACHED;

   9011   0 000383  1C02                                 LDV,R1   2
          0 000384  9F47 0025                            STR,R1   REASON,AUTO

      627     9012    6                               GOTO DISCARD_TPDU;

   9012   0 000386  0F81 FE65                            B        s:8806,PREL

      628     9013    6                               END;
      629     9014
      630     9015    5                          KN$NETPARM.SRC_ADDR$ = ADDR(KN$TCTX.SRC_NSAP);

   9015   0 000388  DCC7 000C                            LDB,B5   CTX$,AUTO
          0 00038A  CBC5 009A                            LAB,B4   154,B5
          0 00038C  CFC6 001D                            STB,B4   29,B6

      631     9016    5                          KN$NETPARM.DST_ADDR$ = ADDR(KN$TCTX.DST_NSAP);

   9016   0 00038E  BBC5 00A5                            LAB,B3   165,B5
          0 000390  BFC6 001F                            STB,B3   31,B6

      632     9017    5                          KN$NETPARM.FLAGS.CONS = '1'B;

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:133  
   9017   0 000392  8946 0012                            LBT,'0100'X       18,B6
   9017   0 000394       0100

      633     9018    5                          GOTO GOT_TCTX;

   9018   0 000395  0F81 0078                            B        s:9076,PREL

      634     9019    5                          END;
      635     9020    4                     END/*do if osi class 0*/;
      636     9021
      637     9022        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:134  
      638     9023        /* Check for duplicate transportation connect request.
      639     9024           For OSI connections this is a match on NSAPs and DST_REF.
      640     9025           A duplicate transport connect request for CP-6 connections is
      641     9026           a match on NODE and QOS.
      642     9027        */
      643     9028    3                ERRNUM = 0;

   9028   0 000397  8747 0006                            CL       ERRNUM,AUTO

      644     9029    3                IF KN$NETPARM.FUNCTION = %K_NDATA

   9029   0 000399  4D21                                 CMV,R4   33
          0 00039A  0981 000D                            BNE      s:9040,PREL

      645     9030    4                THEN DO;

      646     9031    4                     IF KN$NETPARM.DST_ADDR$ = ADDR(NIL)

   9031   0 00039C  8DC6 001F                            CMN      31,B6
          0 00039E  0981 0004                            BNE      s:9034,PREL

      647     9032    4                     THEN CALL TRANSPORT_SCREECH;

   9032   0 0003A0  E3C0 1254                            LNJ,B6   s:0,PREL
          0 0003A2       0001                            DC       s:9034,PREL

      648     9033
      649     9034    4                     CALL I$LOCATE_OSI ALTRET(GET_TCTX);

   9034   0 0003A3  E3C0 0BF4                            LNJ,B6   s:0,PREL
          0 0003A5       0008                            DC       s:9029,PREL

      650     9035
      651     9036    4                     GOTO LOG_BAD_TPDU;

   9036   0 0003A6  0F81 FE3D                            B        s:8799,PREL

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:135  
      652     9037    4                     END;
      653     9038
      654     9039    4                ELSE DO;

      655     9040    4                     CALL I$LOCATE_CP6 ALTRET(GET_TCTX); /*pseudo timer set*/

   9040   0 0003A8  E3C0 0B75                            LNJ,B6   s:0,PREL
          0 0003AA       0003                            DC       s:9029,PREL

      656     9041    4                     GOTO SET_BAD_TSTATE;

   9041   0 0003AB  0F81 02AE                            B        s:9307,PREL

   9029   0                              GET_TCTX        null
      657     9042    4                     END;
      658     9043
      659     9044        /* Get a Transport Context Block for the new connection.
      660     9045        */
      661     9046    3   GET_TCTX:    ;
      662     9047    3                CALL KNA$GETTCTX(CTX$)

   9047   0 0003AD  EBC7 000C            GET_TCTX        LAB,B6   CTX$,AUTO
          0 0003AF  EFC7 003E                            STB,B6   BUFS_RLSD+3,AUTO
          0 0003B1  BBC7 003E                            LAB,B3   BUFS_RLSD+3,AUTO
          0 0003B3  CBF0 0100                            LAB,B4   256,IMO
          0 0003B5  E380 0000 0000  xent                 LNJ,B6   KNA$GETTCTX
          0 0003B8       0003                            DC       s:9049,PREL
          0 0003B9  0F81 000A                            B        s:9054,PREL

      663     9048    4                WHENALTRETURN DO;

      664     9049    4                     ERRNUM = %KN_ERR_NOTCTX;

   9049   0 0003BB  6C06                                 LDV,R6   6
          0 0003BC  EF47 0006                            STR,R6   ERRNUM,AUTO

      665     9050    4                     REASON = %K_REASON_RMTCONGESTION;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:136  

   9050   0 0003BE  D870 0081                            LDR,R5   129,IMO
          0 0003C0  DF47 0025                            STR,R5   REASON,AUTO

      666     9051    4                     GOTO RETURN_TPDU_DR2;

   9051   0 0003C2  0F81 FE7B                            B        s:8854,PREL

      667     9052    4                     END;
      668     9053
      669     9054    3                KN$NETPARM.TCTX$ = CTX$;

   9054   0 0003C4  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 0003C6  DCC7 0004                            LDB,B5   @KN$NETPARM,AUTO
          0 0003C8  EFC5 001B                            STB,B6   27,B5

      670     9055    3                KN$NETPARM.TCTX_ID = KN$TCTX.SRC_REF;

   9055   0 0003CA  E846 0002                            LDR,R6   2,B6
          0 0003CC  EF45 0011                            STR,R6   17,B5

      671     9056
      672     9057    3                IF ENTRY_SWITCH = %PRIMARY

   9057   0 0003CE  D847 0029                            LDR,R5   ENTRY_SWITCH,AUTO
          0 0003D0  5981 0007                            BNEZ,R5  s:9063,PREL

      673     9058    4                THEN DO;

      674     9059    4                     KN$TCTX.NODE = KN$NETPARM.NODE;

   9059   0 0003D2  C845 0015                            LDR,R4   21,B5
          0 0003D4  CA86                                 SRM,R4,'00FF'X    ,B6
          0 0003D5       00FF

      675     9060    4                     GOTO GOT_TCTX;

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:137  
   9060   0 0003D6  0F81 0037                            B        s:9076,PREL

      676     9061    4                     END;
      677     9062
      678     9063    3                IF KNT_TRACE_INTERMEDIATE ~= 0

   9063   0 0003D8  C800 0000 0000  xsym                 LDR,R4   KNT_TRACE_INTERMEDIATE
          0 0003DB  4901 0004                            BEZ,R4   s:9066,PREL

      679     9064    3                THEN KN$TCTX.OPTION.TRACE = '1'B;

   9064   0 0003DD  8946 000C                            LBT,'0040'X       12,B6
   9064   0 0003DF       0040

      680     9065
      681     9066    3                IF ENTRY_SWITCH = %RECV_4HOST

   9066   0 0003E0  5D01                                 CMV,R5   1
          0 0003E1  0981 0015                            BNE      s:9072,PREL

      682     9067    4                THEN DO;

      683     9068    4                     KN$TCTX.NODE = B$NHDR.SOURCE_NODE -1;

   9068   0 0003E3  ECC5 000E                            LDB,B6   14,B5
          0 0003E5  CCC7 000C                            LDB,B4   CTX$,AUTO
          0 0003E7  E846 0001                            LDR,R6   1,B6
          0 0003E9  E570 00FF                            AND,R6   255,IMO
          0 0003EB  6EFF                                 ADV,R6   -1
          0 0003EC  EA84                                 SRM,R6,'00FF'X    ,B4
          0 0003ED       00FF

      684     9069    4                     KN$TCTX.HOST_NODE = B$NHDR.DEST_NODE -1;

   9069   0 0003EE  ECC5 000E                            LDB,B6   14,B5
          0 0003F0  E2C6 0001                            LLH,R6   1,B6
          0 0003F2  6EFF                                 ADV,R6   -1
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:138  
          0 0003F3  CCC7 000C                            LDB,B4   CTX$,AUTO
          0 0003F5  E7C4 0004                            STH,R6   4,B4

      685     9070    4                     END;

      686     9071
      687     9072    3                IF ENTRY_SWITCH = %SEND_4HOST

   9072   0 0003F7  5D02                                 CMV,R5   2
          0 0003F8  0981 0015                            BNE      s:9076,PREL

      688     9073    4                THEN DO;

      689     9074    4                     KN$TCTX.NODE = B$NHDR.DEST_NODE -1;

   9074   0 0003FA  ECC5 000E                            LDB,B6   14,B5
          0 0003FC  E2C6 0001                            LLH,R6   1,B6
          0 0003FE  6EFF                                 ADV,R6   -1
          0 0003FF  CCC7 000C                            LDB,B4   CTX$,AUTO
          0 000401  EA84                                 SRM,R6,'00FF'X    ,B4
          0 000402       00FF

      690     9075    4                     KN$TCTX.HOST_NODE = B$NHDR.SOURCE_NODE -1;

   9075   0 000403  ECC5 000E                            LDB,B6   14,B5
          0 000405  E846 0001                            LDR,R6   1,B6
          0 000407  E570 00FF                            AND,R6   255,IMO
          0 000409  6EFF                                 ADV,R6   -1
          0 00040A  CCC7 000C                            LDB,B4   CTX$,AUTO
          0 00040C  E7C4 0004                            STH,R6   4,B4

      691     9076    4                     END;

   9072   0                              GOT_TCTX        null
      692     9077
      693     9078    3   GOT_TCTX:    ;
      694     9079    3                IF ENTRY_SWITCH = %SEND_4HOST
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:139  

   9079   0 00040E  5D02                 GOT_TCTX        CMV,R5   2
          0 00040F  0981 0006                            BNE      s:9082,PREL

      695     9080    3                THEN KN$TCTX.OUTBOUND = '1'B;

   9080   0 000411  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 000413  8946 000D                            LBT,'0004'X       13,B6
          0 000415       0004

      696     9081
      697     9082    3                KN$TCTX.CLASS = B$TPDU_CR.CLASS;

   9082   0 000416  ECC7 000E                            LDB,B6   BUF$,AUTO
          0 000418  E846 0003                            LDR,R6   3,B6
          0 00041A  604C                                 SOR,R6   12
          0 00041B  DCC7 000C                            LDB,B5   CTX$,AUTO
          0 00041D  E7C5 0005                            STH,R6   5,B5

      698     9083
      699     9084    3                IF KN$TCTX.CLASS=4 AND KNT_TRACE_CLASS4~=0

   9084   0 00041F  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 000421  E2C6 0005                            LLH,R6   5,B6
          0 000423  6D04                                 CMV,R6   4
          0 000424  0981 0009                            BNE      s:9087,PREL
          0 000426  C800 0000 0000  xsym                 LDR,R4   KNT_TRACE_CLASS4
          0 000429  4901 0004                            BEZ,R4   s:9087,PREL

      700     9085    3                THEN KN$TCTX.OPTION.TRACE = '1'B;

   9085   0 00042B  8946 000C                            LBT,'0040'X       12,B6
   9085   0 00042D       0040

      701     9086
      702     9087    3                IF KN$NETPARM.FUNCTION = %K_NDATA

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:140  
   9087   0 00042E  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          0 000430  E846 0014                            LDR,R6   20,B6
          0 000432  6D21                                 CMV,R6   33
          0 000433  0981 0065                            BNE      s:9119,PREL

      703     9088    4                THEN DO;

      704     9089    4                     KN$TCTX.OPTION.OSI = '1'B;

   9089   0 000435  DCC7 000C                            LDB,B5   CTX$,AUTO
          0 000437  8945 000C                            LBT,'0010'X       12,B5
          0 000439       0010

      705     9090    4                     KN$TCTX.SSN_CRDT = 0;

   9090   0 00043A  DCC7 000C                            LDB,B5   CTX$,AUTO
          0 00043C  8745 004A                            CL       74,B5

      706     9091
      707     9092    4                     IF NOT LDCT_CIRCUIT

   9092   0 00043E  89C7 0028                            CMZ      LDCT_CIRCUIT,AUTO
          0 000440  0801 004E                            BAL      s:9112,PREL

      708     9093    5                     THEN DO;

      709     9094    5                          KN$TCTX.HOST_NODE = KN$NETPARM.NODE;

   9094   0 000442  E846 0015                            LDR,R6   21,B6
          0 000444  E7C5 0004                            STH,R6   4,B5

      710     9095    5                          KN$TCTX.NODE = 0;

   9095   0 000446  DCC7 000C                            LDB,B5   CTX$,AUTO
          0 000448  8805                                 LBF,'00FF'X       ,B5
          0 000449       00FF

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:141  
      711     9096
      712     9097    5                          IF ENTRY_SWITCH = %SEND_4HOST

   9097   0 00044A  5D02                                 CMV,R5   2
          0 00044B  0981 0023                            BNE      s:9105,PREL

      713     9098    6                          THEN DO;

      714     9099    6                               TEMP = KN$NETPARM.SRC_ADDR$->NSAP.LEN +1;

   9099   0 00044D  DCC6 001D                            LDB,B5   29,B6
          0 00044F  E285                                 LLH,R6   ,B5
          0 000450  6E01                                 ADV,R6   1
          0 000451  EF47 002A                            STR,R6   TEMP,AUTO

      715     9100    6                               ADDR(KN$TCTX.SRC_NSAP)->CHRBSD = KN$NETPARM.SRC_ADDR$->
              9100                                        CHRBSD;

   9100   0 000453  DCC6 001D                            LDB,B5   29,B6
          0 000455  AB85                                 LAB,B2   ,B5
          0 000456  2C00                                 LDV,R2   0
          0 000457  BCC7 000C                            LDB,B3   CTX$,AUTO
          0 000459  BBC3 009A                            LAB,B3   154,B3
          0 00045B  3C00                                 LDV,R3   0
          0 00045C  0008                                 MMM

      716     9101    6                               TEMP = KN$NETPARM.DST_ADDR$->NSAP.LEN +1;

   9101   0 00045D  CCC6 001F                            LDB,B4   31,B6
          0 00045F  E284                                 LLH,R6   ,B4
          0 000460  6E01                                 ADV,R6   1
          0 000461  EF47 002A                            STR,R6   TEMP,AUTO

      717     9102    6                               ADDR(KN$TCTX.DST_NSAP)->CHRBSD = KN$NETPARM.DST_ADDR$->
              9102                                        CHRBSD;

   9102   0 000463  CCC6 001F                            LDB,B4   31,B6
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:142  
          0 000465  AB84                                 LAB,B2   ,B4
          0 000466  2C00                                 LDV,R2   0
          0 000467  BCC7 000C                            LDB,B3   CTX$,AUTO
          0 000469  BBC3 00A5                            LAB,B3   165,B3
          0 00046B  3C00                                 LDV,R3   0
          0 00046C  0008                                 MMM

      718     9103    6                               END;

   9103   0 00046D  0F81 0021                            B        s:9112,PREL

      719     9104    6                          ELSE DO;

      720     9105    6                               TEMP = KN$NETPARM.DST_ADDR$->NSAP.LEN +1;

   9105   0 00046F  DCC6 001F                            LDB,B5   31,B6
          0 000471  E285                                 LLH,R6   ,B5
          0 000472  6E01                                 ADV,R6   1
          0 000473  EF47 002A                            STR,R6   TEMP,AUTO

      721     9106    6                               ADDR(KN$TCTX.SRC_NSAP)->CHRBSD = KN$NETPARM.DST_ADDR$->
              9106                                        CHRBSD;

   9106   0 000475  DCC6 001F                            LDB,B5   31,B6
          0 000477  AB85                                 LAB,B2   ,B5
          0 000478  2C00                                 LDV,R2   0
          0 000479  BCC7 000C                            LDB,B3   CTX$,AUTO
          0 00047B  BBC3 009A                            LAB,B3   154,B3
          0 00047D  3C00                                 LDV,R3   0
          0 00047E  0008                                 MMM

      722     9107    6                               TEMP = KN$NETPARM.SRC_ADDR$->NSAP.LEN +1;

   9107   0 00047F  CCC6 001D                            LDB,B4   29,B6
          0 000481  E284                                 LLH,R6   ,B4
          0 000482  6E01                                 ADV,R6   1
          0 000483  EF47 002A                            STR,R6   TEMP,AUTO
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:143  

      723     9108    6                               ADDR(KN$TCTX.DST_NSAP)->CHRBSD = KN$NETPARM.SRC_ADDR$->
              9108                                        CHRBSD;

   9108   0 000485  CCC6 001D                            LDB,B4   29,B6
          0 000487  AB84                                 LAB,B2   ,B4
          0 000488  2C00                                 LDV,R2   0
          0 000489  BCC7 000C                            LDB,B3   CTX$,AUTO
          0 00048B  BBC3 00A5                            LAB,B3   165,B3
          0 00048D  3C00                                 LDV,R3   0
          0 00048E  0008                                 MMM

      724     9109    6                               END;

      725     9110    5                          END/*if not circuit*/;

      726     9111
      727     9112    4                     IF KNT_TRACE_OSI ~= 0

   9112   0 00048F  E800 0000 0000  xsym                 LDR,R6   KNT_TRACE_OSI
          0 000492  6901 0006                            BEZ,R6   s:9119,PREL

      728     9113    4                     THEN KN$TCTX.OPTION.TRACE = '1'B;

   9113   0 000494  DCC7 000C                            LDB,B5   CTX$,AUTO
          0 000496  8945 000C                            LBT,'0040'X       12,B5
          0 000498       0040

      729     9114    4                     END;

      730     9115
      731     9116        /* A call to I$CHK_PARMS validates the parmaters and begins
      732     9117           initialization of the tctx block.
      733     9118        */
      734     9119    3                CALL I$CHK_PARMS

   9119   0 000499  E3C0 0EF1                            LNJ,B6   s:0,PREL
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:144  
          0 00049B       0003                            DC       s:9120,PREL
          0 00049C  0F81 000E                            B        s:9130,PREL

      735     9120    4                WHENALTRETURN DO;

      736     9121    4   REJECT_CR:
      737     9122    4                     CALL I$RELCTX;

   9122   0 00049E  E3C0 10CC            REJECT_CR       LNJ,B6   s:0,PREL
          0 0004A0       0001                            DC       s:9124,PREL

      738     9123
      739     9124    4                     IF ERRNUM = %K_ERROR_INVPARM_LEN THEN GOTO LOG_BAD_TPDU;

   9124   0 0004A1  E847 0006                            LDR,R6   ERRNUM,AUTO
          0 0004A3  E970 00E3                            CMR,R6   227,IMO
          0 0004A5  0901 FD3E                            BE       s:8799,PREL

      740     9125
      741     9126    4                     REASON = ERRNUM;

   9126   0 0004A7  EF47 0025                            STR,R6   REASON,AUTO

      742     9127    4                     GOTO RETURN_TPDU_DR2;

   9127   0 0004A9  0F81 FD94                            B        s:8854,PREL

      743     9128    4                     END/*altret from I$CHK_PARMS*/;
      744     9129
      745     9130    3                IF KN$TCTX.CLASS=2

   9130   0 0004AB  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 0004AD  E2C6 0005                            LLH,R6   5,B6
          0 0004AF  6D02                                 CMV,R6   2
          0 0004B0  0981 0012                            BNE      s:9139,PREL

      746     9131    4                THEN DO;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:145  

      747     9132    4                     IF KN$TCTX.OPTION.EXPEDITED='1'B AND B$TPDU_CR.CLASS_2_FLOW='1'B

   9132   0 0004B2  82C6 000C                            LB,'0002'X        12,B6
   9132   0 0004B4       0002
          0 0004B5  0581 000D                            BBF      s:9139,PREL
          0 0004B7  DCC7 000E                            LDB,B5   BUF$,AUTO
          0 0004B9  82C5 0003                            LB,'0100'X        3,B5
          0 0004BB       0100
          0 0004BC  0581 0006                            BBF      s:9139,PREL

      748     9133    5                     THEN DO;

      749     9134    5                          ERRNUM = %K_ERROR_PROTOCOL;

   9134   0 0004BE  D870 00EC                            LDR,R5   236,IMO
          0 0004C0  DF47 0006                            STR,R5   ERRNUM,AUTO

      750     9135    5                          GOTO REJECT_CR;

   9135   0 0004C2  0FDC                                 B        s:9120,SPREL

      751     9136    5                          END;
      752     9137    4                     END;
      753     9138
      754     9139    3                KN$NETPARM.TCTX$ = CTX$;

   9139   0 0004C3  DCC7 0004                            LDB,B5   @KN$NETPARM,AUTO
          0 0004C5  EFC5 001B                            STB,B6   27,B5

      755     9140    3                KN$NETPARM.TCTX_ID = KN$TCTX.SRC_REF;

   9140   0 0004C7  E846 0002                            LDR,R6   2,B6
          0 0004C9  EF45 0011                            STR,R6   17,B5

      756     9141
      757     9142        /* Check the checksum parameter on the tpcu_cr if there is one.
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:146  
      758     9143        */
      759     9144    3                IF ENTRY_SWITCH ~= %SEND_4HOST

   9144   0 0004CB  D847 0029                            LDR,R5   ENTRY_SWITCH,AUTO
          0 0004CD  5D02                                 CMV,R5   2
          0 0004CE  0901 0022                            BE       s:9160,PREL

      760     9145    4                THEN DO;

      761     9146    4                     IF (KN$TCTX.CLASS = 4) AND (KNT_DO_CHKSUM ~= 0)

   9146   0 0004D0  C2C6 0005                            LLH,R4   5,B6
          0 0004D2  4D04                                 CMV,R4   4
          0 0004D3  0981 001D                            BNE      s:9160,PREL
          0 0004D5  B800 0000 0000  xsym                 LDR,R3   KNT_DO_CHKSUM
          0 0004D8  3901 0018                            BEZ,R3   s:9160,PREL

      762     9147    5                     THEN DO;

      763     9148    5                          CALL KNA$CHK_CHKSUM(TPDU$,TPDUSIZE)

   9148   0 0004DA  CBC7 001B                            LAB,B4   TPDUSIZE,AUTO
          0 0004DC  CFC7 0040                            STB,B4   BUFS_RLSD+5,AUTO
          0 0004DE  BBC7 000A                            LAB,B3   TPDU$,AUTO
          0 0004E0  BFC7 003E                            STB,B3   BUFS_RLSD+3,AUTO
          0 0004E2  BBC7 003E                            LAB,B3   BUFS_RLSD+3,AUTO
          0 0004E4  CBF0 0200                            LAB,B4   512,IMO
          0 0004E6  E380 0000 0000  xent                 LNJ,B6   KNA$CHK_CHKSUM
          0 0004E9       0003                            DC       s:9150,PREL
          0 0004EA  0F81 0006                            B        s:9160,PREL

      764     9149    6                          WHENALTRETURN DO;

      765     9150    6                               CALL I$RELCTX;

   9150   0 0004EC  E3C0 107E                            LNJ,B6   s:0,PREL
          0 0004EE       0001                            DC       s:9151,PREL
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:147  

      766     9151    6                               GOTO COUNT_BAD_CHKSUM;

   9151   0 0004EF  0F81 FCED                            B        s:8798,PREL

      767     9152    6                               END/*altret*/;
      768     9153    5                          END/*class 4*/;

      769     9154    4                     END/*do if not send_4host*/;

      770     9155
      771     9156        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:148  
      772     9157        /* To get here, state must be CLOSED, WFCC, or WFCC_R.
      773     9158        */
      774     9159
      775     9160    3                KN$TCTX.DST_REF = TPDU_BUF.SRC_REF;

   9160   0 0004F1  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 0004F3  E847 002E                            LDR,R6   TPDU_BUF+2,AUTO
          0 0004F5  EF46 0001                            STR,R6   1,B6

      776     9161
      777     9162    3                CALL I$COMMON_INIT;

   9162   0 0004F7  E3C0 0B14                            LNJ,B6   s:0,PREL
          0 0004F9       0001                            DC       s:9164,PREL

      778     9163
      779     9164    3                KN$TCTX.SEND_RETRY_COUNT = KN$TCTX.SEND_RETRY_COUNT + 1;

   9164   0 0004FA  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 0004FC  E2C6 004D                            LLH,R6   77,B6
          0 0004FE  6E01                                 ADV,R6   1
          0 0004FF  E7C6 004D                            STH,R6   77,B6

      780     9165
      781     9166    3                KN$TCTX.QOS = KN$NETPARM.QOS;

   9166   0 000501  DCC7 0004                            LDB,B5   @KN$NETPARM,AUTO
          0 000503  E845 0012                            LDR,R6   18,B5
          0 000505  EAC6 0004                            SRM,R6,'00FF'X    4,B6
          0 000507       00FF

      782     9167
      783     9168        /* If this is a CP-6 Session connect request for this fep, call
      784     9169           session with his init request.  Then return a TPDU_CC.
      785     9170        */
      786     9171    3                IF ENTRY_SWITCH = %PRIMARY

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:149  
   9171   0 000508  E847 0029                            LDR,R6   ENTRY_SWITCH,AUTO
          0 00050A  6981 004D                            BNEZ,R6  s:9210,PREL

      787     9172    4                THEN DO;

      788     9173    4                     KN$TCTX.PRIMARY = '1'B;

   9173   0 00050C  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 00050E  8946 000D                            LBT,'0001'X       13,B6
          0 000510       0001

      789     9174    4                     KN$TCTX.INBOUND = '1'B;

   9174   0 000511  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 000513  8946 000D                            LBT,'0002'X       13,B6
          0 000515       0002

      790     9175
      791     9176    4                     IF KN$NETPARM.SHDRSZ > 6
              9176                              /* 6 is minimum size of cp-6 ssn header */

   9176   0 000516  D845 000A                            LDR,R5   10,B5
          0 000518  5D06                                 CMV,R5   6
          0 000519  0381 000B                            BLE      s:9179,PREL

      792     9177    5                     THEN DO;

      793     9178    5                          CALL KNS$RECV(KN$NETPARM)

   9178   0 00051B  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 00051D  CBF0 0100                            LAB,B4   256,IMO
          0 00051F  E380 0000 0000  xent                 LNJ,B6   KNS$RECV
          0 000522       0003                            DC       s:9179,PREL
          0 000523  0F81 0001                            B        s:9179,PREL

      794     9179    6                          WHENALTRETURN DO;

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:150  
   9173   0                              SES_TRN_ERR     null
      795     9180    6   SES_TRN_ERR:                ;
      796     9181                                                /* see SES_TRN_ERR in the QDP code.   */
      797     9182    6                               END;

      798     9183    5                          END/*do if session data*/;

      799     9184
      800     9185    4                     IF KN$TCTX.STATE ~= %K_TSTATE_WFCC_R

   9185   0 000525  ECC7 000C            SES_TRN_ERR     LDB,B6   CTX$,AUTO
          0 000527  E286                                 LLH,R6   ,B6
          0 000528  6D0A                                 CMV,R6   10
          0 000529  0901 000C                            BE       s:9192,PREL

      801     9186    5                     THEN DO;

      802     9187    5                          IF KN$TCTX.CLASS = 4

   9187   0 00052B  D2C6 0005                            LLH,R5   5,B6
          0 00052D  5D04                                 CMV,R5   4
          0 00052E  0981 0005                            BNE      s:9189,PREL

      803     9188    5                          THEN KN$TCTX.STATE = %K_TSTATE_AKWAIT;

   9188   0 000530  4C07                                 LDV,R4   7
          0 000531  C786                                 STH,R4   ,B6
          0 000532  0F81 0003                            B        s:9192,PREL

      804     9189    5                          ELSE KN$TCTX.STATE = %K_TSTATE_OPEN;

   9189   0 000534  4C05                                 LDV,R4   5
          0 000535  C786                                 STH,R4   ,B6

      805     9190    5                          END;

      806     9191
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:151  
      807     9192    4                     CALL KNT$SEND_CC(KN$NETPARM);

   9192   0 000536  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 000538  CBF0 0100                            LAB,B4   256,IMO
          0 00053A  E380 0000 0000  xent                 LNJ,B6   KNT$SEND_CC
          0 00053D       0001                            DC       s:9194,PREL

      808     9193
      809     9194    4                     IF KN$TCTX.CLASS ~= 4

   9194   0 00053E  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 000540  E2C6 0005                            LLH,R6   5,B6
          0 000542  6D04                                 CMV,R6   4
          0 000543  0901 000B                            BE       s:9197,PREL

      810     9195    4                     THEN CALL KNT$RLS_CHAIN(KN$TCTX);

   9195   0 000545  BBC7 000C                            LAB,B3   CTX$,AUTO
          0 000547  CBF0 0100                            LAB,B4   256,IMO
          0 000549  E380 0000 0000  xent                 LNJ,B6   KNT$RLS_CHAIN
          0 00054C       0001                            DC       s:9195+8,PREL
          0 00054D  0F81 0007                            B        s:9201,PREL

      811     9196    5                     ELSE DO;

      812     9197    5                          KN$TCTX.SEND_RETRY_COUNT = 1;

   9197   0 00054F  5C01                                 LDV,R5   1
          0 000550  D7C6 004D                            STH,R5   77,B6

      813     9198    5                          CALL I$SET_RETRAN;

   9198   0 000552  E3C0 102A                            LNJ,B6   s:0,PREL
          0 000554       0001                            DC       s:9201,PREL

      814     9199    5                          END;

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:152  
      815     9200
      816     9201    4                     RETURN;

   9201   0 000555  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      817     9202    4                     END/*do if primary*/;
      818     9203
      819     9204        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:153  
      820     9205        /* If we just received this connect request for the host, we have
      821     9206           remembered the requesting src_ref in tctx.dst_ref.  Now modify
      822     9207           the tpdu.src_ref to contains the index into our intermediate tctx.
      823     9208           State of the tctx is set to WFTRESP.
      824     9209        */
      825     9210    3                IF ENTRY_SWITCH = %SEND_4HOST

   9210   0 000558  6D02                                 CMV,R6   2
          0 000559  0981 0042                            BNE      s:9229,PREL

      826     9211    4                THEN DO;

      827     9212    4                     KN$TCTX.HOST_REF = TPDU_BUF.SRC_REF;

   9212   0 00055B  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 00055D  D847 002E                            LDR,R5   TPDU_BUF+2,AUTO
          0 00055F  DF46 0003                            STR,R5   3,B6

      828     9213    4                     KN$TCTX.DST_REF = 0;

   9213   0 000561  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 000563  8746 0001                            CL       1,B6

      829     9214
      830     9215    4                     IF KN$NETPARM.FPT$ ~= ADDR(NIL)

   9215   0 000565  8DC5 0019                            CMN      25,B5
          0 000567  0901 0034                            BE       s:9229,PREL

      831     9216    5                     THEN DO;

      832     9217    5                          IF B$TR_OPTIONS.TR_FLAGS.TRACE

   9217   0 000569  ECC5 0019                            LDB,B6   25,B5
          0 00056B  82C6 0009                            LB,'0040'X        9,B6
          0 00056D       0040
          0 00056E  0581 0006                            BBF      s:9220,PREL
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:154  

      833     9218    5                          THEN KN$TCTX.OPTION.TRACE = '1'B;

   9218   0 000570  CCC7 000C                            LDB,B4   CTX$,AUTO
          0 000572  8944 000C                            LBT,'0040'X       12,B4
          0 000574       0040

      834     9219
      835     9220    5                          IF B$TR_OPTIONS.TR_FLAGS.CLNS = '0'B

   9220   0 000575  ECC5 0019                            LDB,B6   25,B5
          0 000577  82C6 0009                            LB,'0020'X        9,B6
          0 000579       0020
          0 00057A  0501 0006                            BBT      s:9223,PREL

      836     9221    5                          THEN KN$TCTX.OPTION.CONS = '1'B;

   9221   0 00057C  CCC7 000C                            LDB,B4   CTX$,AUTO
          0 00057E  8944 000C                            LBT,'0020'X       12,B4
          0 000580       0020

      837     9222
      838     9223    5                          KN$TCTX.TPDUSZ_PARM = B$TR_OPTIONS.TPDUSZ_PARM;

   9223   0 000581  ECC5 0019                            LDB,B6   25,B5
          0 000583  D846 0004                            LDR,R5   4,B6
          0 000585  CCC7 000C                            LDB,B4   CTX$,AUTO
          0 000587  DAC4 0008                            SRM,R5,'00FF'X    8,B4
          0 000589       00FF

      839     9224    5                          KN$TCTX.RCV_WINDOW_SZ = B$TR_OPTIONS.WINDOWSZ;

   9224   0 00058A  ECC5 0019                            LDB,B6   25,B5
          0 00058C  D846 0005                            LDR,R5   5,B6
          0 00058E  CCC7 000C                            LDB,B4   CTX$,AUTO
          0 000590  DAC4 0005                            SRM,R5,'00FF'X    5,B4
          0 000592       00FF
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:155  

      840     9225    5                          KN$TCTX.QOS = B$TR_OPTIONS.QOS;

   9225   0 000593  ECC5 0019                            LDB,B6   25,B5
          0 000595  D2C6 0008                            LLH,R5   8,B6
          0 000597  CCC7 000C                            LDB,B4   CTX$,AUTO
          0 000599  DAC4 0004                            SRM,R5,'00FF'X    4,B4
          0 00059B       00FF

      841     9226    5                          END;

      842     9227    4                     END;

      843     9228
      844     9229    3                NEXT$->B$TPDU_CR.SRC_REF = KN$TCTX.SRC_REF;

   9229   0 00059C  8CC7 0016                            LDI      NEXT$,AUTO
          0 00059E  B856                                 LDR,R3   R6
          0 00059F  E570 7FFF                            AND,R6   32767,IMO
          0 0005A1  8D47 003E                            SDI      BUFS_RLSD+3,AUTO
          0 0005A3  ECC7 003E                            LDB,B6   BUFS_RLSD+3,AUTO
          0 0005A5  304F                                 SOR,R3   15
          0 0005A6  ACC7 000C                            LDB,B2   CTX$,AUTO
          0 0005A8  2C04                                 LDV,R2   4
          0 0005A9  6C02                                 LDV,R6   2
          0 0005AA  BB86                                 LAB,B3   ,B6
          0 0005AB  3E04                                 ADV,R3   4
          0 0005AC  0008                                 MMM

      845     9230
      846     9231        /* If we were called to decode the tpdu_cr for knt$send_4host, this
      847     9232           is an OSI session connection as the host never generates tpdu_cr
      848     9233           for CP6 connections.  If this is class 4, we generate the checksum
      849     9234           parameter for the host.  If using Connectionless Network the state
      850     9235           of the tctx is set to WFCC; if CONS, the state is set to WFNC.
      851     9236           We return to send_4host where the tpdu-cr will be saved and sent on.
      852     9237        */
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:156  
      853     9238    3                IF ENTRY_SWITCH = %SEND_4HOST

   9238   0 0005AD  E847 0029                            LDR,R6   ENTRY_SWITCH,AUTO
          0 0005AF  6D02                                 CMV,R6   2
          0 0005B0  0981 0056                            BNE      s:9260,PREL

      854     9239    4                THEN DO;

      855     9240    4                     IF KN$TCTX.CLASS = 4

   9240   0 0005B2  CCC7 000C                            LDB,B4   CTX$,AUTO
          0 0005B4  D2C4 0005                            LLH,R5   5,B4
          0 0005B6  5D04                                 CMV,R5   4
          0 0005B7  0981 0015                            BNE      s:9243,PREL

      856     9241    4                     THEN CALL KNA$CALC_CHKSUM(TPDU$, TPDUSIZE, GOT_CHKSUM);

   9241   0 0005B9  ABC7 0024                            LAB,B2   GOT_CHKSUM,AUTO
          0 0005BB  AFC7 0042                            STB,B2   BUFS_RLSD+7,AUTO
          0 0005BD  9BC7 001B                            LAB,B1   TPDUSIZE,AUTO
          0 0005BF  9FC7 0040                            STB,B1   BUFS_RLSD+5,AUTO
          0 0005C1  EBC7 000A                            LAB,B6   TPDU$,AUTO
          0 0005C3  EFC7 003E                            STB,B6   BUFS_RLSD+3,AUTO
          0 0005C5  BBC7 003E                            LAB,B3   BUFS_RLSD+3,AUTO
          0 0005C7  CBF0 0300                            LAB,B4   768,IMO
          0 0005C9  E380 0000 0000  xent                 LNJ,B6   KNA$CALC_CHKSUM
          0 0005CC       0001                            DC       s:9243,PREL

      857     9242
      858     9243    4                     IF KN$TCTX.CLASS = 2

   9243   0 0005CD  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 0005CF  E2C6 0005                            LLH,R6   5,B6
          0 0005D1  6D02                                 CMV,R6   2
          0 0005D2  0981 0024                            BNE      s:9246,PREL

      859     9244    4                     THEN KN$NETPARM.THDR_C$->B$TPDU_CR.CDT = KN$TCTX.RCV_WINDOW_SZ;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:157  

   9244   0 0005D4  DCC7 0004                            LDB,B5   @KN$NETPARM,AUTO
          0 0005D6  8CC5 000B                            LDI      11,B5
          0 0005D8  B856                                 LDR,R3   R6
          0 0005D9  E570 7FFF                            AND,R6   32767,IMO
          0 0005DB  8D47 003E                            SDI      BUFS_RLSD+3,AUTO
          0 0005DD  CCC7 003E                            LDB,B4   BUFS_RLSD+3,AUTO
          0 0005DF  304F                                 SOR,R3   15
          0 0005E0  F846 0005                            LDR,R7   5,B6
          0 0005E2  F570 00FF                            AND,R7   255,IMO
          0 0005E4  6C00                                 LDV,R6   0
          0 0005E5  709C                                 DOL,R7   28
          0 0005E6  8D47 0040                            SDI      BUFS_RLSD+5,AUTO
          0 0005E8  BF47 0042                            STR,R3   BUFS_RLSD+7,AUTO
          0 0005EA  CFC7 0043                            STB,B4   BUFS_RLSD+8,AUTO
          0 0005EC  ABC7 003E                            LAB,B2   BUFS_RLSD+3,AUTO
          0 0005EE  2C20                                 LDV,R2   32
          0 0005EF  6C20                                 LDV,R6   32
          0 0005F0  BB84                                 LAB,B3   ,B4
          0 0005F1  3003                                 SOL,R3   3
          0 0005F2  3E0C                                 ADV,R3   12
          0 0005F3  7C04                                 LDV,R7   4
          0 0005F4  D380 0000 0000  xent                 LNJ,B5   X6B_BLR

      860     9245
      861     9246    4                     IF KN$TCTX.OPTION.CONS

   9246   0 0005F7  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 0005F9  82C6 000C                            LB,'0020'X        12,B6
          0 0005FB       0020
          0 0005FC  0581 0005                            BBF      s:9248,PREL

      862     9247    4                     THEN KN$TCTX.STATE = %K_TSTATE_WFNC;

   9247   0 0005FE  6C09                                 LDV,R6   9
          0 0005FF  E786                                 STH,R6   ,B6
          0 000600  0F81 0003                            B        s:9250,PREL
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:158  

      863     9248    4                     ELSE KN$TCTX.STATE = %K_TSTATE_WFCC;

   9248   0 000602  6C03                                 LDV,R6   3
          0 000603  E786                                 STH,R6   ,B6

      864     9249
      865     9250    4                     RETURN;

   9250   0 000604  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      866     9251    4                     END/*do if send_4host*/;
      867     9252
      868     9253        /* If we were called to recv_4host, the tpdu_cr may be either for a
      869     9254           CP-6 or OSI connection.  If its OSI, the tpdu_cr is forwarded by
      870     9255           a call to KNN$SEND where the cp6 style header is built.  If its CP6,
      871     9256           the network header should be Ok as is, so we can forward the tpdu_cr
      872     9257           to the host by returning to KNN$RECV.
      873     9258        */
      874     9259    4                ELSE DO;

      875     9260    4                     KN$TCTX.STATE = %K_TSTATE_WFTRESP;

   9260   0 000607  5C06                                 LDV,R5   6
          0 000608  CCC7 000C                            LDB,B4   CTX$,AUTO
          0 00060A  D784                                 STH,R5   ,B4

      876     9261
      877     9262    4                     CALL KNT$TR_FHOST(KN$NETPARM);

   9262   0 00060B  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 00060D  CBF0 0100                            LAB,B4   256,IMO
          0 00060F  E380 0000 0000  xent                 LNJ,B6   KNT$TR_FHOST
          0 000612       0001                            DC       s:9263,PREL

      878     9263    4                     KN$NETPARM.MSGSZ = 0;

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:159  
   9263   0 000613  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          0 000615  8746 0004                            CL       4,B6

      879     9264    4                     KN$NETPARM.UHDRSZ = 0;

   9264   0 000617  8746 0007                            CL       7,B6

      880     9265    4                     KN$NETPARM.SHDRSZ = 0;

   9265   0 000619  8746 000A                            CL       10,B6

      881     9266    4                     KN$NETPARM.THDR_C$ = NEXT$;

   9266   0 00061B  8CC7 0016                            LDI      NEXT$,AUTO
          0 00061D  8D46 000B                            SDI      11,B6

      882     9267    4                     KN$NETPARM.THDRSZ = TPDUSIZE;

   9267   0 00061F  D847 001B                            LDR,R5   TPDUSIZE,AUTO
          0 000621  DF46 000D                            STR,R5   13,B6

      883     9268
      884     9269    4                     IF KN$NETPARM.FUNCTION ~= %K_NDATA

   9269   0 000623  C846 0014                            LDR,R4   20,B6
          0 000625  4D21                                 CMV,R4   33
          0 000626  0901 0004                            BE       s:9276,PREL

      885     9270    5                     THEN DO;

      886     9271    5                          RETURN;          /*so knn$recv will call knh$send*/

   9271   0 000628  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      887     9272    5                          END/*do for CP-6 connections*/;
      888     9273
      889     9274    5                     ELSE DO;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:160  

      890     9275                                 /*netparm.src_addr$ and .dst_addr$ remain unchanged*/
      891     9276    5                          KN$NETPARM.NODE = KN$TCTX.HOST_NODE;

   9276   0 00062B  DCC7 000C                            LDB,B5   CTX$,AUTO
          0 00062D  B2C5 0004                            LLH,R3   4,B5
          0 00062F  BF46 0015                            STR,R3   21,B6

      892     9277
      893     9278    5                          KN$NETPARM.FUNCTION = %K_NCONNECT_REQ;

   9278   0 000631  4C1F                                 LDV,R4   31
          0 000632  CF46 0014                            STR,R4   20,B6

      894     9279                                                /*so knn will build MSGTYP_CL0#       */
      895     9280
      896     9281    5                          CALL KNN$SEND(KN$NETPARM)

   9281   0 000634  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 000636  CBF0 0100                            LAB,B4   256,IMO
          0 000638  E380 0000 0000  xent                 LNJ,B6   KNN$SEND
          0 00063B       0003                            DC       s:9284,PREL
          0 00063C  0F81 0004                            B        s:9286,PREL

      897     9282    6                          WHENALTRETURN DO;

      898     9283                                         /*N*  Save_frag?  set errcode=0*/
      899     9284    6                               CALL TRANSPORT_SCREECH; /*N* for now*/

   9284   0 00063E  E3C0 0FB6                            LNJ,B6   s:0,PREL
          0 000640       0001                            DC       s:9286,PREL

      900     9285    6                               END;

      901     9286    5                          ALTRETURN/*to avoid sending twice*/;

   9286   0 000641  C380 0000 0000  xent                 LNJ,B4   X6A_AALT
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:161  

      902     9287    5                          END/*do for OSI connections*/;
      903     9288
      904     9289    4                     END/*do if recv_4host*/;
      905     9290    3                END/*do if TPDU_CR*/;
      906     9291
      907     9292        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:162  
      908     9293        /*F* NAME: KNT$RECV - Connect Confirm TPDU received.
      909     9294
      910     9295        KNT$RECV can be called with a TPCU_CC for primary fep transport
      911     9296        connections and host intermediate connections.  KNT$SEND_4HOST will
      912     9297        also call KNT$RECV if forwarding a class 4 TPDU_CC in order to
      913     9298        locate the checksum parameter and fill in the checksum.
      914     9299        */
      915     9300    2           IF TYPE = %K_TPDU_TYPE_CC

   9300   0 000644  6D0D                                 CMV,R6   13
          0 000645  0981 024C                            BNE      s:9498,PREL

      916     9301    3           THEN DO;

      917     9302    3                IF ( KN$TCTX.STATE ~= %K_TSTATE_WFCC ) AND

   9302   0 000647  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 000649  D286                                 LLH,R5   ,B6
          0 00064A  5D03                                 CMV,R5   3
          0 00064B  0901 0014                            BE       s:9310,PREL
          0 00064D  C846 0001                            LDR,R4   1,B6
          0 00064F  C947 002E                            CMR,R4   TPDU_BUF+2,AUTO
          0 000651  0901 000E                            BE       s:9310,PREL

      918     9303    3                  ( KN$TCTX.DST_REF ~= TPDU_BUF.SRC_REF )
      919     9304    4                THEN DO;

      920     9305    4                     DST_REF = 0; REASON = 0; CALL I$RETURN_DR;

   9305   0 000653  8747 001D                            CL       DST_REF,AUTO

   9305   0 000655  8747 0025                            CL       REASON,AUTO

   9305   0 000657  E3C0 0C44                            LNJ,B6   s:0,PREL
          0 000659       0001                            DC       s:9307,PREL

      921     9306    4   SET_BAD_TSTATE:
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:163  
      922     9307    4                     ERRNUM = %K_ERROR_BAD_TSTATE; GOTO LOG_BAD_TPDU;

   9307   0 00065A  E870 00E0            SET_BAD_TSTATE  LDR,R6   224,IMO
          0 00065C  EF47 0006                            STR,R6   ERRNUM,AUTO

   9307   0 00065E  0F81 FB85                            B        s:8799,PREL

      923     9308    4                     END;
      924     9309
      925     9310    3                IF ENTRY_SWITCH = %SEND_4HOST

   9310   0 000660  C847 0029                            LDR,R4   ENTRY_SWITCH,AUTO
          0 000662  4D02                                 CMV,R4   2
          0 000663  0981 0007                            BNE      s:9312,PREL

      926     9311    3                THEN KN$TCTX.HOST_REF = TPDU_BUF.SRC_REF;

   9311   0 000665  B847 002E                            LDR,R3   TPDU_BUF+2,AUTO
          0 000667  BF46 0003                            STR,R3   3,B6
          0 000669  0F81 0005                            B        s:9314,PREL

      927     9312    3                ELSE KN$TCTX.DST_REF = TPDU_BUF.SRC_REF;

   9312   0 00066B  B847 002E                            LDR,R3   TPDU_BUF+2,AUTO
          0 00066D  BF46 0001                            STR,R3   1,B6

      928     9313
      929     9314    3                IF ( (B$TPDU_CR.CLASS ~= 4) AND

   9314   0 00066F  ECC7 000E                            LDB,B6   BUF$,AUTO
          0 000671  D846 0003                            LDR,R5   3,B6
          0 000673  504C                                 SOR,R5   12
          0 000674  5D04                                 CMV,R5   4
          0 000675  0901 0015                            BE       s:9324,PREL
          0 000677  82C6 0003                            LB,'F000'X        3,B6
          0 000679       F000
          0 00067A  0581 0010                            BBF      s:9324,PREL
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:164  
          0 00067C  5D02                                 CMV,R5   2
          0 00067D  0901 000D                            BE       s:9324,PREL

      930     9315    3                  (B$TPDU_CR.CLASS ~= 0) AND
      931     9316    3                  (B$TPDU_CR.CLASS ~= 2) )
      932     9317    4                THEN DO;

      933     9318    4   REJECT_CLASS:
      934     9319    4                     ERRNUM = %K_ERROR_CLASS;

   9319   0 00067F  E870 00EE            REJECT_CLASS    LDR,R6   238,IMO
          0 000681  EF47 0006                            STR,R6   ERRNUM,AUTO

      935     9320    4                     KN$TCTX.REASON = %K_REASON_NEGOTIATION;

   9320   0 000683  D870 0082                            LDR,R5   130,IMO
          0 000685  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 000687  D7C6 000E                            STH,R5   14,B6

      936     9321    4                     GOTO CC_ERROR;

   9321   0 000689  0F81 0087                            B        s:9370,PREL

      937     9322    4                     END;
      938     9323
      939     9324    3                IF B$TPDU_CR.CLASS > KN$TCTX.CLASS

   9324   0 00068B  DCC7 000C                            LDB,B5   CTX$,AUTO
          0 00068D  B2C5 0005                            LLH,R3   5,B5
          0 00068F  D953                                 CMR,R5   R3
          0 000690  0A6F                                 BAG      s:9317,SPREL

      940     9325    3                THEN GOTO REJECT_CLASS;
      941     9326
      942     9327    3                IF B$TPDU_CR.CLASS < KN$TCTX.CLASS

   9327   0 000691  0881 002B                            BAGE     s:9344,PREL
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:165  

      943     9328    4                THEN DO;

      944     9329    4                     IF B$TPDU_CR.CLASS=0

   9329   0 000693  82C6 0003                            LB,'F000'X        3,B6
   9329   0 000695       F000
          0 000696  0501 000C                            BBT      s:9338,PREL

      945     9330    5                     THEN DO;

      946     9331    5                          IF LDCT_CIRCUIT = '0'B

   9331   0 000698  89C7 0028                            CMZ      LDCT_CIRCUIT,AUTO
          0 00069A  08E5                                 BAGE     s:9317,SPREL

      947     9332    5                          THEN GOTO REJECT_CLASS;
      948     9333
      949     9334    5                          KN$TCTX.OPTION.EXPEDITED = '0'B;

   9334   0 00069B  8845 000C                            LBF,'0002'X       12,B5
   9334   0 00069D       0002

      950     9335    5                          KN$TCTX.OPTION.EXTENDED = '0'B;

   9335   0 00069E  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 0006A0  8846 000C                            LBF,'0004'X       12,B6
          0 0006A2       0004

      951     9336    5                          END;

      952     9337
      953     9338    4                     IF B$TPDU_CR.CLASS ~= 2

   9338   0 0006A3  ECC7 000E                            LDB,B6   BUF$,AUTO
          0 0006A5  D846 0003                            LDR,R5   3,B6
          0 0006A7  504C                                 SOR,R5   12
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:166  
          0 0006A8  5D02                                 CMV,R5   2
          0 0006A9  0901 0006                            BE       s:9341,PREL

      954     9339    4                     THEN KN$TCTX.OPTION.CLASS_2_FLOW = '0'B;

   9339   0 0006AB  DCC7 000C                            LDB,B5   CTX$,AUTO
          0 0006AD  8845 000C                            LBF,'0008'X       12,B5
          0 0006AF       0008

      955     9340
      956     9341    4                     IF B$TPDU_CR.CLASS ~= 4

   9341   0 0006B0  ECC7 000E                            LDB,B6   BUF$,AUTO
          0 0006B2  D846 0003                            LDR,R5   3,B6
          0 0006B4  504C                                 SOR,R5   12
          0 0006B5  5D04                                 CMV,R5   4
          0 0006B6  0901 0006                            BE       s:9344,PREL

      957     9342    4                     THEN KN$TCTX.OPTION.CHKSUM = '0'B;

   9342   0 0006B8  DCC7 000C                            LDB,B5   CTX$,AUTO
          0 0006BA  8845 000C                            LBF,'0001'X       12,B5
          0 0006BC       0001

      958     9343
      959     9344    4                     END/*downward class negotiation*/;

      960     9345
      961     9346    3   ACCEPT_CLASS:
      962     9347    3                KN$TCTX.CLASS = B$TPDU_CR.CLASS;

   9347   0 0006BD  ECC7 000E            ACCEPT_CLASS    LDB,B6   BUF$,AUTO
          0 0006BF  D846 0003                            LDR,R5   3,B6
          0 0006C1  504C                                 SOR,R5   12
          0 0006C2  DCC7 000C                            LDB,B5   CTX$,AUTO
          0 0006C4  D7C5 0005                            STH,R5   5,B5

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:167  
      963     9348
      964     9349    3                IF KN$TCTX.CLASS=4 AND KNT_TRACE_CLASS4~=0

   9349   0 0006C6  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 0006C8  D2C6 0005                            LLH,R5   5,B6
          0 0006CA  5D04                                 CMV,R5   4
          0 0006CB  0981 0009                            BNE      s:9352,PREL
          0 0006CD  B800 0000 0000  xsym                 LDR,R3   KNT_TRACE_CLASS4
          0 0006D0  3901 0004                            BEZ,R3   s:9352,PREL

      965     9350    3                THEN KN$TCTX.OPTION.TRACE = '1'B;

   9350   0 0006D2  8946 000C                            LBT,'0040'X       12,B6
   9350   0 0006D4       0040

      966     9351
      967     9352    3                IF KN$TCTX.CLASS ~= 4

   9352   0 0006D5  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 0006D7  D2C6 0005                            LLH,R5   5,B6
          0 0006D9  5D04                                 CMV,R5   4
          0 0006DA  0901 0004                            BE       s:9355,PREL

      968     9353    3                THEN KN$TCTX.OPTION.CHKSUM = '0'B;

   9353   0 0006DC  8846 000C                            LBF,'0001'X       12,B6
   9353   0 0006DE       0001

      969     9354
      970     9355    3                IF KN$NETPARM.FUNCTION ~= %K_NDATA

   9355   0 0006DF  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          0 0006E1  D846 0014                            LDR,R5   20,B6
          0 0006E3  5D21                                 CMV,R5   33
          0 0006E4  0981 001D                            BNE      s:9358,PREL

      971     9356    3                THEN GOTO CHECK_CC_PARMS;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:168  
      972     9357
      973     9358    3                IF (B$TPDU_CR.CLASS=0 AND DATASIZE>0) OR (DATASIZE > 32)

   9358   0 0006E6  DCC7 000E                            LDB,B5   BUF$,AUTO
          0 0006E8  82C5 0003                            LB,'F000'X        3,B5
          0 0006EA       F000
          0 0006EB  0501 0005                            BBT      s:9358+11,PREL
          0 0006ED  B847 0009                            LDR,R3   DATASIZE,AUTO
          0 0006EF  3A01 0006                            BGZ,R3   s:9360,PREL
          0 0006F1  B847 0009                            LDR,R3   DATASIZE,AUTO
          0 0006F3  3D20                                 CMV,R3   32
          0 0006F4  0A81 000D                            BALE     s:9358,PREL

      974     9359    4                THEN DO;

      975     9360    4                     ERRNUM = %K_ERROR_DATASZ;

   9360   0 0006F6  A870 00E5                            LDR,R2   229,IMO
          0 0006F8  AF47 0006                            STR,R2   ERRNUM,AUTO

      976     9361    4                     KN$TCTX.REASON = %K_REASON_PROTOCOL;

   9361   0 0006FA  9870 0085                            LDR,R1   133,IMO
          0 0006FC  CCC7 000C                            LDB,B4   CTX$,AUTO
          0 0006FE  97C4 000E                            STH,R1   14,B4

      977     9362    4                     GOTO CC_ERROR;

   9362   0 000700  0F81 0010                            B        s:9370,PREL

   9358   0                              CHECK_CC_PARMS  null
      978     9363    4                     END;
      979     9364
      980     9365    3   CHECK_CC_PARMS: ;
      981     9366    3                CALL I$CHK_PARMS

   9366   0 000702  E3C0 0C88            CHECK_CC_PARMS  LNJ,B6   s:0,PREL
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:169  
          0 000704       0003                            DC       s:9368,PREL
          0 000705  0F81 004E                            B        s:9403,PREL

      982     9367    4                WHENALTRETURN DO;

      983     9368    4                     IF ERRNUM = %K_ERROR_INVPARM_LEN THEN GOTO LOG_BAD_TPDU;

   9368   0 000707  E847 0006                            LDR,R6   ERRNUM,AUTO
          0 000709  E970 00E3                            CMR,R6   227,IMO
          0 00070B  0901 FAD8                            BE       s:8799,PREL

      984     9369
      985     9370    4                     KN$TCTX.REASON = ERRNUM;

   9370   0 00070D  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 00070F  E7C6 000E                            STH,R6   14,B6

   9370   0                              CC_ERROR        null
      986     9371    4   CC_ERROR:         ;
      987     9372    4                     IF KN$TCTX.STATE = %K_TSTATE_WBCL

   9372   0 000711  ECC7 000C            CC_ERROR        LDB,B6   CTX$,AUTO
          0 000713  E286                                 LLH,R6   ,B6
          0 000714  6D04                                 CMV,R6   4
          0 000715  0901 0007                            BE       s:9377,PREL

      988     9373    4                     THEN GOTO BYPASS_TDISCONN;
      989     9374
      990     9375    4                     IF KN$TCTX.STATE=%K_TSTATE_WFCC

   9375   0 000717  6D03                                 CMV,R6   3
          0 000718  0981 0039                            BNE      s:9400,PREL

      991     9376    5                     THEN DO;

      992     9377    5                          CALL I$REPORT_TDISCON;

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:170  
   9377   0 00071A  E3C0 0B38                            LNJ,B6   s:0,PREL
          0 00071C       0001                            DC       s:9377,PREL

   9377   0                              BYPASS_TDISCONN null
      993     9378
      994     9379    5   BYPASS_TDISCONN:       ;
      995     9380    5                          IF KN$TCTX.CLASS = 2

   9380   0 00071D  ECC7 000C            BYPASS_TDISCONN LDB,B6   CTX$,AUTO
          0 00071F  E2C6 0005                            LLH,R6   5,B6
          0 000721  6D02                                 CMV,R6   2
          0 000722  0901 000A                            BE       s:9388,PREL

      996     9381    5                          THEN GOTO SET_CLOSING;
      997     9382
      998     9383    5                          IF KN$TCTX.CLASS = 4

   9383   0 000724  6D04                                 CMV,R6   4
          0 000725  0981 0013                            BNE      s:9392,PREL

      999     9384    6                          THEN DO;

     1000     9385    6                               KN$TCTX.SEND_RETRY_COUNT = 1;

   9385   0 000727  5C01                                 LDV,R5   1
          0 000728  D7C6 004D                            STH,R5   77,B6

     1001     9386    6                               CALL I$SET_RETRAN;

   9386   0 00072A  E3C0 0E52                            LNJ,B6   s:0,PREL
          0 00072C       0001                            DC       s:9388,PREL

     1002     9387    6   SET_CLOSING:
     1003     9388    6                               KN$TCTX.STATE = %K_TSTATE_CLOSING;

   9388   0 00072D  6C08                 SET_CLOSING     LDV,R6   8
          0 00072E  ECC7 000C                            LDB,B6   CTX$,AUTO
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:171  
          0 000730  E786                                 STH,R6   ,B6

     1004     9389    6                               CALL KNT$SEND_DR(KN$NETPARM);

   9389   0 000731  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 000733  CBF0 0100                            LAB,B4   256,IMO
          0 000735  E380 0000 0000  xent                 LNJ,B6   KNT$SEND_DR
          0 000738       0001                            DC       s:9392,PREL

     1005     9390    6                               END;

     1006     9391
     1007     9392    5                          IF KN$TCTX.CLASS= 0 AND KN$TCTX.OPTION.OSI

   9392   0 000739  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 00073B  E2C6 0005                            LLH,R6   5,B6
          0 00073D  6981 0014                            BNEZ,R6  s:9400,PREL
          0 00073F  82C6 000C                            LB,'0010'X        12,B6
          0 000741       0010
          0 000742  0581 000F                            BBF      s:9400,PREL

     1008     9393    6                          THEN DO;

     1009     9394                                    /*N* CALL NDISCreq */
     1010     9395    6                               KN$TCTX.STATE = %K_TSTATE_CLOSED;

   9395   0 000744  5C02                                 LDV,R5   2
          0 000745  D786                                 STH,R5   ,B6

     1011     9396    6                               CALL KNA$RELTCTX(CTX$);

   9396   0 000746  EBC7 000C                            LAB,B6   CTX$,AUTO
          0 000748  EFC7 003E                            STB,B6   BUFS_RLSD+3,AUTO
          0 00074A  BBC7 003E                            LAB,B3   BUFS_RLSD+3,AUTO
          0 00074C  CBF0 0100                            LAB,B4   256,IMO
          0 00074E  E380 0000 0000  xent                 LNJ,B6   KNA$RELTCTX
          0 000751       0001                            DC       s:9400,PREL
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:172  

     1012     9397    6                               END;

     1013     9398
     1014     9399    5                          END/*do if wfcc and wbcl*/;

     1015     9400    4                     GOTO LOG_BAD_TPDU;

   9400   0 000752  0F81 FA91                            B        s:8799,PREL

     1016     9401    4                     END/*whenaltreturn*/;
     1017     9402
     1018     9403    3                IF ENTRY_SWITCH ~= %SEND_4HOST

   9403   0 000754  E847 0029                            LDR,R6   ENTRY_SWITCH,AUTO
          0 000756  6D02                                 CMV,R6   2
          0 000757  0901 001D                            BE       s:9412,PREL

     1019     9404    4                THEN DO;

     1020     9405    4                     IF (KN$TCTX.OPTION.CHKSUM ~= '0'B) AND (KNT_DO_CHKSUM ~= 0)

   9405   0 000759  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 00075B  82C6 000C                            LB,'0001'X        12,B6
          0 00075D       0001
          0 00075E  0581 0016                            BBF      s:9412,PREL
          0 000760  D800 0000 0000  xsym                 LDR,R5   KNT_DO_CHKSUM
          0 000763  5901 0011                            BEZ,R5   s:9412,PREL

     1021     9406    4                     THEN CALL KNA$CHK_CHKSUM(TPDU$,TPDUSIZE) ALTRET(LOG_BAD_CHKSUM);

   9406   0 000765  DBC7 001B                            LAB,B5   TPDUSIZE,AUTO
          0 000767  DFC7 0040                            STB,B5   BUFS_RLSD+5,AUTO
          0 000769  CBC7 000A                            LAB,B4   TPDU$,AUTO
          0 00076B  CFC7 003E                            STB,B4   BUFS_RLSD+3,AUTO
          0 00076D  BBC7 003E                            LAB,B3   BUFS_RLSD+3,AUTO
          0 00076F  CBF0 0200                            LAB,B4   512,IMO
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:173  
          0 000771  E380 0000 0000  xent                 LNJ,B6   KNA$CHK_CHKSUM
          0 000774       FA65                            DC       s:8783,PREL

     1022     9407    4                     END;

     1023     9408
     1024     9409        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:174  
     1025     9410        /* Got a good tpdu_cc.
     1026     9411        */
     1027     9412    3                IF KN$TCTX.STATE = %K_TSTATE_WFCC

   9412   0 000775  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 000777  E286                                 LLH,R6   ,B6
          0 000778  6D03                                 CMV,R6   3
          0 000779  0901 0004                            BE       s:9415,PREL
          0 00077B  6D0A                                 CMV,R6   10
          0 00077C  0981 00D3                            BNE      s:9480,PREL

     1028     9413    3                  OR KN$TCTX.STATE = %K_TSTATE_WFCC_R
     1029     9414    4                THEN DO;

     1030     9415    4                     CALL KNT$RLS_CHAIN(KN$TCTX);

   9415   0 00077E  BBC7 000C                            LAB,B3   CTX$,AUTO
          0 000780  CBF0 0100                            LAB,B4   256,IMO
          0 000782  E380 0000 0000  xent                 LNJ,B6   KNT$RLS_CHAIN
          0 000785       0001                            DC       s:9417,PREL

     1031     9416
     1032     9417    4                     CALL I$COMMON_INIT;

   9417   0 000786  E3C0 0885                            LNJ,B6   s:0,PREL
          0 000788       0001                            DC       s:9419,PREL

     1033     9418
     1034     9419    4                     KN$TCTX.SEND_RETRY_COUNT = 0;

   9419   0 000789  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 00078B  87C6 004D                            CLH      77,B6

     1035     9420
     1036     9421    4                     IF ENTRY_SWITCH ~= %PRIMARY

   9421   0 00078D  E847 0029                            LDR,R6   ENTRY_SWITCH,AUTO
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:175  
          0 00078F  6901 0068                            BEZ,R6   s:9443,PREL

     1037     9422    5                     THEN DO;

     1038     9423    5                          NEXT$->B$TPDU_CR.SRC_REF = KN$TCTX.SRC_REF;

   9423   0 000791  8CC7 0016                            LDI      NEXT$,AUTO
          0 000793  B856                                 LDR,R3   R6
          0 000794  E570 7FFF                            AND,R6   32767,IMO
          0 000796  8D47 003E                            SDI      BUFS_RLSD+3,AUTO
          0 000798  DCC7 003E                            LDB,B5   BUFS_RLSD+3,AUTO
          0 00079A  304F                                 SOR,R3   15
          0 00079B  AB86                                 LAB,B2   ,B6
          0 00079C  2C04                                 LDV,R2   4
          0 00079D  6C02                                 LDV,R6   2
          0 00079E  BB85                                 LAB,B3   ,B5
          0 00079F  3E04                                 ADV,R3   4
          0 0007A0  0008                                 MMM

     1039     9424    5                          NEXT$->B$TPDU_CR.DST_REF = KN$TCTX.HOST_REF;

   9424   0 0007A1  8CC7 0016                            LDI      NEXT$,AUTO
          0 0007A3  B856                                 LDR,R3   R6
          0 0007A4  E570 7FFF                            AND,R6   32767,IMO
          0 0007A6  8D47 003E                            SDI      BUFS_RLSD+3,AUTO
          0 0007A8  CCC7 003E                            LDB,B4   BUFS_RLSD+3,AUTO
          0 0007AA  304F                                 SOR,R3   15
          0 0007AB  ACC7 000C                            LDB,B2   CTX$,AUTO
          0 0007AD  2C06                                 LDV,R2   6
          0 0007AE  6C02                                 LDV,R6   2
          0 0007AF  BB84                                 LAB,B3   ,B4
          0 0007B0  3E02                                 ADV,R3   2
          0 0007B1  0008                                 MMM

     1040     9425
     1041     9426    5                          IF ENTRY_SWITCH = %SEND_4HOST

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:176  
   9426   0 0007B2  E847 0029                            LDR,R6   ENTRY_SWITCH,AUTO
          0 0007B4  6D02                                 CMV,R6   2
          0 0007B5  0981 0042                            BNE      s:9443,PREL

     1042     9427    6                          THEN DO;

     1043     9428    6                               NEXT$->B$TPDU_CR.DST_REF = KN$TCTX.DST_REF;

   9428   0 0007B7  8CC7 0016                            LDI      NEXT$,AUTO
          0 0007B9  B856                                 LDR,R3   R6
          0 0007BA  E570 7FFF                            AND,R6   32767,IMO
          0 0007BC  8D47 003E                            SDI      BUFS_RLSD+3,AUTO
          0 0007BE  ACC7 003E                            LDB,B2   BUFS_RLSD+3,AUTO
          0 0007C0  304F                                 SOR,R3   15
          0 0007C1  AFC7 0040                            STB,B2   BUFS_RLSD+5,AUTO
          0 0007C3  ACC7 000C                            LDB,B2   CTX$,AUTO
          0 0007C5  2C02                                 LDV,R2   2
          0 0007C6  6C02                                 LDV,R6   2
          0 0007C7  BCC7 0040                            LDB,B3   BUFS_RLSD+5,AUTO
          0 0007C9  3E02                                 ADV,R3   2
          0 0007CA  0008                                 MMM

     1044     9429
     1045     9430    6                               KN$TCTX.INBOUND = '1'B;

   9430   0 0007CB  ACC7 000C                            LDB,B2   CTX$,AUTO
          0 0007CD  8942 000D                            LBT,'0002'X       13,B2
          0 0007CF       0002

     1046     9431
     1047     9432    6                               IF KN$TCTX.CLASS = 4

   9432   0 0007D0  ACC7 000C                            LDB,B2   CTX$,AUTO
          0 0007D2  E2C2 0005                            LLH,R6   5,B2
          0 0007D4  6D04                                 CMV,R6   4
          0 0007D5  0981 0005                            BNE      s:9434,PREL

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:177  
     1048     9433    6                               THEN KN$TCTX.STATE = %K_TSTATE_AKWAIT;

   9433   0 0007D7  5C07                                 LDV,R5   7
          0 0007D8  D782                                 STH,R5   ,B2
          0 0007D9  0F81 0003                            B        s:9436,PREL

     1049     9434    6                               ELSE KN$TCTX.STATE = %K_TSTATE_OPEN;

   9434   0 0007DB  5C05                                 LDV,R5   5
          0 0007DC  D782                                 STH,R5   ,B2

     1050     9435
     1051     9436    6                               IF GOT_CHKSUM ~= 0

   9436   0 0007DD  E847 0024                            LDR,R6   GOT_CHKSUM,AUTO
          0 0007DF  6901 0015                            BEZ,R6   s:9439,PREL

     1052     9437    6                               THEN CALL KNA$CALC_CHKSUM(TPDU$, TPDUSIZE, GOT_CHKSUM);

   9437   0 0007E1  ABC7 0024                            LAB,B2   GOT_CHKSUM,AUTO
          0 0007E3  AFC7 0042                            STB,B2   BUFS_RLSD+7,AUTO
          0 0007E5  9BC7 001B                            LAB,B1   TPDUSIZE,AUTO
          0 0007E7  9FC7 0040                            STB,B1   BUFS_RLSD+5,AUTO
          0 0007E9  BBC7 000A                            LAB,B3   TPDU$,AUTO
          0 0007EB  BFC7 003E                            STB,B3   BUFS_RLSD+3,AUTO
          0 0007ED  BBC7 003E                            LAB,B3   BUFS_RLSD+3,AUTO
          0 0007EF  CBF0 0300                            LAB,B4   768,IMO
          0 0007F1  E380 0000 0000  xent                 LNJ,B6   KNA$CALC_CHKSUM
          0 0007F4       0001                            DC       s:9439,PREL

     1053     9438
     1054     9439    6                               RETURN;

   9439   0 0007F5  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1055     9440    6                               END;
     1056     9441    5                          END;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:178  
     1057     9442
     1058     9443    4                     KN$TCTX.STATE = %K_TSTATE_OPEN;

   9443   0 0007F8  5C05                                 LDV,R5   5
          0 0007F9  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 0007FB  D786                                 STH,R5   ,B6

     1059     9444    4                     CALL I$CANCEL_RETRAN;

   9444   0 0007FC  E3C0 0DBC                            LNJ,B6   s:0,PREL
          0 0007FE       0001                            DC       s:9448,PREL

     1060     9445
     1061     9446        /* Send an AK TPDU to complete the 3-way TPDU exchange.
     1062     9447        */
     1063     9448    4                     IF KN$TCTX.CLASS = 4

   9448   0 0007FF  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 000801  E2C6 0005                            LLH,R6   5,B6
          0 000803  6D04                                 CMV,R6   4
          0 000804  0981 000F                            BNE      s:9455,PREL

     1064     9449    5                     THEN DO;

     1065     9450    5                          CALL I$SET_WINDOW;

   9450   0 000806  E3C0 0D8A                            LNJ,B6   s:0,PREL
          0 000808       0001                            DC       s:9451,PREL

     1066     9451    5                          CALL I$SET_INACTIVITY;

   9451   0 000809  E3C0 0D9B                            LNJ,B6   s:0,PREL
          0 00080B       0001                            DC       s:9452,PREL

     1067     9452    5                          CALL KNT$SEND_AK(KN$NETPARM);

   9452   0 00080C  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:179  
          0 00080E  CBF0 0100                            LAB,B4   256,IMO
          0 000810  E380 0000 0000  xent                 LNJ,B6   KNT$SEND_AK
          0 000813       0001                            DC       s:9455,PREL

     1068     9453    5                          END/*do if class 4*/;

     1069     9454
     1070     9455    4                     IF ENTRY_SWITCH = %RECV_4HOST

   9455   0 000814  E847 0029                            LDR,R6   ENTRY_SWITCH,AUTO
          0 000816  6D01                                 CMV,R6   1
          0 000817  0981 0023                            BNE      s:9474,PREL

     1071     9456    5                     THEN DO;

     1072     9457    5                          KN$NETPARM.MSGSZ = 0;

   9457   0 000819  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          0 00081B  8746 0004                            CL       4,B6

     1073     9458    5                          HOST_TPDUC$ = NEXT$;

   9458   0 00081D  8CC7 0016                            LDI      NEXT$,AUTO
          0 00081F  8D47 0026                            SDI      HOST_TPDU$,AUTO

     1074     9459
     1075     9460    5                          IF KN$TCTX.OPTION.TRACE = '0'B

   9460   0 000821  DCC7 000C                            LDB,B5   CTX$,AUTO
          0 000823  82C5 000C                            LB,'0040'X        12,B5
          0 000825       0040
          0 000826  0501 0009                            BBT      s:9463,PREL

     1076     9461    5                          THEN CALL KNT$TR_FHOST(KN$NETPARM);

   9461   0 000828  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 00082A  CBF0 0100                            LAB,B4   256,IMO
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:180  
          0 00082C  E380 0000 0000  xent                 LNJ,B6   KNT$TR_FHOST
          0 00082F       0001                            DC       s:9463,PREL

     1077     9462
     1078     9463    5                          CALL I$FORWARD_2HOST

   9463   0 000830  E3C0 0834                            LNJ,B6   s:0,PREL
          0 000832       0003                            DC       s:9465,PREL
          0 000833  0F81 0004                            B        s:9468,PREL

     1079     9464    6                          WHENALTRETURN DO;

     1080     9465    6                               CALL TRANSPORT_SCREECH;

   9465   0 000835  E3C0 0DBF                            LNJ,B6   s:0,PREL
          0 000837       0001                            DC       s:9468,PREL

     1081     9466    6                               END;

     1082     9467
     1083     9468    5                          RETURN;

   9468   0 000838  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1084     9469    5                          END;
     1085     9470
     1086     9471        /* If this completes an CP6 Session connection on this node,
     1087     9472           report it now.
     1088     9473        */
     1089     9474    4                     IF KN$TCTX.LNK$ ~= ADDR(NIL)

   9474   0 00083B  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 00083D  8DC6 0006                            CMN      6,B6
          0 00083F  0901 000D                            BE       s:9477,PREL

     1090     9475    4                     THEN CALL KNT$UNQ_OPEN(KN$TCTX.LNK$);

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:181  
   9475   0 000841  DBC6 0006                            LAB,B5   6,B6
          0 000843  DFC7 003E                            STB,B5   BUFS_RLSD+3,AUTO
          0 000845  BBC7 003E                            LAB,B3   BUFS_RLSD+3,AUTO
          0 000847  CBF0 0100                            LAB,B4   256,IMO
          0 000849  E380 0000 0000  xent                 LNJ,B6   KNT$UNQ_OPEN
          0 00084C       0001                            DC       s:9477,PREL

     1091     9476
     1092     9477    4                     RETURN;

   9477   0 00084D  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1093     9478    4                     END/*do if WFCC or WFCC_R*/;
     1094     9479
     1095     9480    3                IF KN$TCTX.CLASS=0

   9480   0 000850  D2C6 0005                            LLH,R5   5,B6
          0 000852  5981 0004                            BNEZ,R5  s:9483,PREL

     1096     9481    3                THEN RETURN/*all done for 0*/;

   9481   0 000854  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1097     9482
     1098     9483    3                IF KN$TCTX.STATE=%K_TSTATE_OPEN AND KN$TCTX.CLASS=4

   9483   0 000857  6D05                                 CMV,R6   5
          0 000858  0981 000F                            BNE      s:9489,PREL
          0 00085A  5D04                                 CMV,R5   4
          0 00085B  0981 000C                            BNE      s:9489,PREL

     1099     9484    4                THEN DO;

     1100     9485    4                     CALL KNT$SEND_AK(KN$NETPARM);

   9485   0 00085D  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 00085F  CBF0 0100                            LAB,B4   256,IMO
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:182  
          0 000861  E380 0000 0000  xent                 LNJ,B6   KNT$SEND_AK
          0 000864       0001                            DC       s:9486,PREL

     1101     9486    4                     CALL I$SET_INACTIVITY;

   9486   0 000865  E3C0 0D3F                            LNJ,B6   s:0,PREL
          0 000867       0001                            DC       s:9489,PREL

     1102     9487    4                     END;

     1103     9488
     1104     9489    3                IF KN$TCTX.STATE = %K_TSTATE_CLOSING

   9489   0 000868  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 00086A  E286                                 LLH,R6   ,B6
          0 00086B  6D08                                 CMV,R6   8
          0 00086C  0901 0019                            BE       s:9503,PREL
          0 00086E  6D01                                 CMV,R6   1
          0 00086F  0901 0016                            BE       s:9503,PREL
          0 000871  6D02                                 CMV,R6   2
          0 000872  0901 0013                            BE       s:9503,PREL

     1105     9490    3                  OR KN$TCTX.STATE = %K_TSTATE_REFWAIT
     1106     9491    3                  OR KN$TCTX.STATE = %K_TSTATE_CLOSED
     1107     9492    3                THEN GOTO SEND_DRN;
     1108     9493
     1109     9494    3                IF KN$TCTX.STATE = %K_TSTATE_WBCL

   9494   0 000874  6D04                                 CMV,R6   4
          0 000875  0981 0019                            BNE      s:9506,PREL

     1110     9495    4                THEN DO;

     1111     9496    4                     IF KN$TCTX.CLASS = 4

   9496   0 000877  D2C6 0005                            LLH,R5   5,B6
          0 000879  5D04                                 CMV,R5   4
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:183  
          0 00087A  0981 0007                            BNE      s:9501,PREL

     1112     9497    5                     THEN DO;

     1113     9498    5                          KN$TCTX.SEND_RETRY_COUNT = 1;

   9498   0 00087C  4C01                                 LDV,R4   1
          0 00087D  C7C6 004D                            STH,R4   77,B6

     1114     9499    5                          CALL I$SET_RETRAN;

   9499   0 00087F  E3C0 0CFD                            LNJ,B6   s:0,PREL
          0 000881       0001                            DC       s:9501,PREL

     1115     9500    5                          END;

     1116     9501    4                     KN$TCTX.STATE = %K_TSTATE_CLOSING;

   9501   0 000882  6C08                                 LDV,R6   8
          0 000883  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 000885  E786                                 STH,R6   ,B6

     1117     9502    4   SEND_DRN:
     1118     9503    4                     DST_REF = 0; REASON = %K_REASON_NORMAL; CALL I$RETURN_DR;

   9503   0 000886  8747 001D            SEND_DRN        CL       DST_REF,AUTO

   9503   0 000888  E870 0080                            LDR,R6   128,IMO
          0 00088A  EF47 0025                            STR,R6   REASON,AUTO

   9503   0 00088C  E3C0 0A0F                            LNJ,B6   s:0,PREL
          0 00088E       0001                            DC       s:9506,PREL

     1119     9504    4                     END;

     1120     9505
     1121     9506    3                RETURN;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:184  

   9506   0 00088F  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

   9498   0                              GOT_DATA1       null
     1122     9507
     1123     9508    3                END/*do if TPCU_CC*/;
     1124     9509        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:185  
     1125     9510
     1126     9511
     1127     9512
     1128     9513        /* Now check for specific errors for the TPDU type received.
     1129     9514        */
     1130     9515
     1131     9516    2   GOT_DATA1: ;
     1132     9517    2           SUBSEQ = 0;

   9517   0 000892  8747 0021            GOT_DATA1       CL       SUBSEQ,AUTO

     1133     9518    2           CALL I$CHK_PARMS  ALTRET(LOG_BAD_TPDU);

   9518   0 000894  E3C0 0AF6                            LNJ,B6   s:0,PREL
          0 000896       F94E                            DC       s:8799,PREL

     1134     9519
     1135     9520    2           IF KN$TCTX.OPTION.CHKSUM ~= '0'B

   9520   0 000897  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 000899  82C6 000C                            LB,'0001'X        12,B6
          0 00089B       0001
          0 00089C  0581 001A                            BBF      s:9530,PREL

     1136     9521    3           THEN DO;

     1137     9522    3                IF GOT_CHKSUM =0

   9522   0 00089E  E847 0024                            LDR,R6   GOT_CHKSUM,AUTO
          0 0008A0  6901 F938                            BEZ,R6   s:8783,PREL

     1138     9523    3                THEN GOTO LOG_BAD_CHKSUM;
     1139     9524    4                ELSE DO;

     1140     9525    4                     IF KNT_DO_CHKSUM ~= 0

   9525   0 0008A2  D800 0000 0000  xsym                 LDR,R5   KNT_DO_CHKSUM
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:186  
          0 0008A5  5901 0011                            BEZ,R5   s:9530,PREL

     1141     9526    4                     THEN CALL KNA$CHK_CHKSUM(TPDU$,TPDUSIZE) ALTRET(LOG_BAD_CHKSUM);

   9526   0 0008A7  DBC7 001B                            LAB,B5   TPDUSIZE,AUTO
          0 0008A9  DFC7 0040                            STB,B5   BUFS_RLSD+5,AUTO
          0 0008AB  CBC7 000A                            LAB,B4   TPDU$,AUTO
          0 0008AD  CFC7 003E                            STB,B4   BUFS_RLSD+3,AUTO
          0 0008AF  BBC7 003E                            LAB,B3   BUFS_RLSD+3,AUTO
          0 0008B1  CBF0 0200                            LAB,B4   512,IMO
          0 0008B3  E380 0000 0000  xent                 LNJ,B6   KNA$CHK_CHKSUM
          0 0008B6       F923                            DC       s:8783,PREL

     1142     9527    4                     END/*got_chksum*/;

     1143     9528    3                END;

     1144     9529
     1145     9530    2           IF TYPE = %K_TPDU_TYPE_DT THEN GOTO GOT_DATA2; /*fast path*/

   9530   0 0008B7  E847 001C                            LDR,R6   TYPE,AUTO
          0 0008B9  6D0F                                 CMV,R6   15
          0 0008BA  0901 0135                            BE       s:9661,PREL

     1146     9531
     1147     9532        /* And again begin processing depending on tpdu type.
     1148     9533        */
     1149     9534    3           DO CASE (TYPE);

   9534   0 0008BC  B856                                 LDR,R3   R6
          0 0008BD  3D10                                 CMV,R3   16
          0 0008BE  0281 0651                            BGE      s:10158,PREL
          0 0008C0  A830 0000 08C6  00                   LDR,R2   s:9534+10,R3
          0 0008C3  83A0 0000 08D6  00                   JMP      s:9543,R2
          0 0008C6       063A                            DC       s:10158,PREL
          0 0008C7       039E                            DC       s:9898,PREL
          0 0008C8       0459                            DC       s:9969,PREL
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:187  
          0 0008C9       063A                            DC       s:10158,PREL
          0 0008CA       063A                            DC       s:10158,PREL
          0 0008CB       063A                            DC       s:10158,PREL
          0 0008CC       0483                            DC       s:9989,PREL
          0 0008CD       05FC                            DC       s:10127,PREL
          0 0008CE       0000                            DC       s:9543,PREL
          0 0008CF       063A                            DC       s:10158,PREL
          0 0008D0       063A                            DC       s:10158,PREL
          0 0008D1       063A                            DC       s:10158,PREL
          0 0008D2       00CF                            DC       s:9629,PREL
          0 0008D3       063A                            DC       s:10158,PREL
          0 0008D4       063A                            DC       s:10158,PREL
          0 0008D5       011A                            DC       s:9661,PREL

     1150     9535
     1151     9536        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:188  
     1152     9537        /*F* NAME: KNT$RECV - Disconnect Request received.
     1153     9538
     1154     9539        */
     1155     9540
     1156     9541    3            CASE(%K_TPDU_TYPE_DR);

     1157     9542
     1158     9543    3              IF ENTRY_SWITCH = %SEND_4HOST

   9543   0 0008D6  D847 0029                            LDR,R5   ENTRY_SWITCH,AUTO
          0 0008D8  5D02                                 CMV,R5   2
          0 0008D9  0981 0004                            BNE      s:9546,PREL

     1159     9544    3              THEN RETURN;                 /*just here to decode parameters      */

   9544   0 0008DB  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1160     9545
     1161     9546    3              IF KN$TCTX.STATE ~= %K_TSTATE_WFCC

   9546   0 0008DE  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 0008E0  C286                                 LLH,R4   ,B6
          0 0008E1  4D03                                 CMV,R4   3
          0 0008E2  0901 0041                            BE       s:9571,PREL

     1162     9547    3              THEN IF DST_REF = 0

   9547   0 0008E4  9847 001D                            LDR,R1   DST_REF,AUTO
          0 0008E6  1981 0031                            BNEZ,R1  s:9563,PREL

     1163     9548    4                   THEN DO;

     1164     9549    4                        CTX$ = ADDR(NIL);

   9549   0 0008E8  DB80 0000 0000                       LAB,B5   0
          0 0008EB  DFC7 000C                            STB,B5   CTX$,AUTO

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:189  
     1165     9550    5                        DO TCTX# = 1 TO KN_TCTX_MAX#;

   9550   0 0008ED  4C01                                 LDV,R4   1
          0 0008EE  CF47 001E                            STR,R4   TCTX#,AUTO
          0 0008F0  0F81 001F                            B        s:9559+2,PREL

     1166     9551    5                             IF KN$TCTX$(TCTX#) ~= ADDR(NIL)

   9551   0 0008F2  EC80 0000 0000  xsym                 LDB,B6   KN_TCTX$$
          0 0008F5  B847 001E                            LDR,R3   TCTX#,AUTO
          0 0008F7  8DB6                                 CMN      ,B6,R3
          0 0008F8  0901 0011                            BE       s:9557,PREL

     1167     9552    5                             THEN IF ( KN$TCTX$(TCTX#)->KN$TCTX.DST_REF = TPDU_BUF.
              9552                                      SRC_REF ) AND

   9552   0 0008FA  DCB6                                 LDB,B5   ,B6,R3
          0 0008FB  E845 0001                            LDR,R6   1,B5
          0 0008FD  E947 002E                            CMR,R6   TPDU_BUF+2,AUTO
          0 0008FF  0981 000A                            BNE      s:9557,PREL
          0 000901  D285                                 LLH,R5   ,B5
          0 000902  5D07                                 CMV,R5   7
          0 000903  0901 0004                            BE       s:9555,PREL
          0 000905  5D06                                 CMV,R5   6
          0 000906  0981 0003                            BNE      s:9557,PREL

     1168     9553    5                                    ( (KN$TCTX$(TCTX#)->KN$TCTX.STATE = %
              9553                                             K_TSTATE_AKWAIT) OR
     1169     9554    5                                   (KN$TCTX$(TCTX#)->KN$TCTX.STATE = %K_TSTATE_WFTRESP
              9554                                             ))
     1170     9555    5                                  THEN CTX$ = KN$TCTX$(TCTX#);

   9555   0 000908  DFC7 000C                            STB,B5   CTX$,AUTO

     1171     9556
     1172     9557    5                             IF CTX$ = ADDR(NIL)

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:190  
   9557   0 00090A  8DC7 000C                            CMN      CTX$,AUTO
          0 00090C  0901 0011                            BE       s:9564,PREL

     1173     9558    5                             THEN GOTO RETURN_TPDU_DC;
     1174     9559    5                             END/*do 1 to maxtran*/;

   9559   0 00090E  8AC7 001E                            INC      TCTX#,AUTO
          0 000910  E847 001E                            LDR,R6   TCTX#,AUTO
          0 000912  E900 0000 0000  xsym                 CMR,R6   KN_TCTX_MAX#
          0 000915  03DD                                 BLE      s:9551,SPREL

     1175     9560    4                        END/*do if dst_ref is 0*/;

   9560   0 000916  0F81 000D                            B        s:9571,PREL

     1176     9561
     1177     9562    4                   ELSE DO;

     1178     9563    4                        IF KN$TCTX.DST_REF ~= TPDU_BUF.SRC_REF

   9563   0 000918  E846 0001                            LDR,R6   1,B6
          0 00091A  E947 002E                            CMR,R6   TPDU_BUF+2,AUTO
          0 00091C  0901 0007                            BE       s:9571,PREL

     1179     9564    5                        THEN DO;

   9562   0                              RETURN_TPDU_DC  null
     1180     9565    5   RETURN_TPDU_DC:           ;
     1181     9566    5                             CALL I$RETURN_DC;

   9566   0 00091E  E3C0 0999            RETURN_TPDU_DC  LNJ,B6   s:0,PREL
          0 000920       0001                            DC       s:9567,PREL

     1182     9567    5                             RETURN;

   9567   0 000921  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:191  
     1183     9568    5                             END;
     1184     9569    4                        END/*do if dst_ref is valid*/;
     1185     9570
     1186     9571    3              CALL KNT$RLS_CHAIN(KN$TCTX);

   9571   0 000924  BBC7 000C                            LAB,B3   CTX$,AUTO
          0 000926  CBF0 0100                            LAB,B4   256,IMO
          0 000928  E380 0000 0000  xent                 LNJ,B6   KNT$RLS_CHAIN
          0 00092B       0001                            DC       s:9573,PREL

     1187     9572
     1188     9573    4              DO CASE (KN$TCTX.STATE);

   9573   0 00092C  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 00092E  B286                                 LLH,R3   ,B6
          0 00092F  3D09                                 CMV,R3   9
          0 000930  0281 0071                            BGE      s:9621,PREL
          0 000932  A830 0000 0938  00                   LDR,R2   s:9573+12,R3
          0 000935  83A0 0000 0941  00                   JMP      s:9576,R2
          0 000938       0061                            DC       s:9621,PREL
          0 000939       002C                            DC       s:9597,PREL
          0 00093A       002C                            DC       s:9597,PREL
          0 00093B       0013                            DC       s:9586,PREL
          0 00093C       0027                            DC       s:9594,PREL
          0 00093D       0000                            DC       s:9576,PREL
          0 00093E       004B                            DC       s:9611,PREL
          0 00093F       000E                            DC       s:9582,PREL
          0 000940       005E                            DC       s:9617,PREL

     1189     9574
     1190     9575    4               CASE ( %K_TSTATE_OPEN );

     1191     9576    4                 KN$TCTX.REASON = B$TPDU_DR.REASON;

   9576   0 000941  DCC7 000E                            LDB,B5   BUF$,AUTO
          0 000943  E2C5 0003                            LLH,R6   3,B5
          0 000945  E7C6 000E                            STH,R6   14,B6
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:192  

     1192     9577    4                 CALL I$SET_REFWAIT;

   9577   0 000947  E3C0 0A14                            LNJ,B6   s:0,PREL
          0 000949       0001                            DC       s:9578,PREL

     1193     9578    4                 CALL I$REPORT_TDISCON2;

   9578   0 00094A  E3C0 0915                            LNJ,B6   s:0,PREL
          0 00094C       0001                            DC       s:9579,PREL

     1194     9579    4                 GOTO SEND_DC2;

   9579   0 00094D  0F81 0023                            B        s:9600,PREL

     1195     9580
     1196     9581    4               CASE ( %K_TSTATE_AKWAIT );

     1197     9582    4                 CALL I$SET_REFWAIT;

   9582   0 00094F  E3C0 0A0C                            LNJ,B6   s:0,PREL
          0 000951       0001                            DC       s:9583,PREL

     1198     9583    4                 GOTO SEND_DC2;

   9583   0 000952  0F81 001E                            B        s:9600,PREL

     1199     9584
     1200     9585    4               CASE ( %K_TSTATE_WFCC );

     1201     9586    4                 KN$TCTX.REASON = B$TPDU_DR.REASON;

   9586   0 000954  DCC7 000E                            LDB,B5   BUF$,AUTO
          0 000956  E2C5 0003                            LLH,R6   3,B5
          0 000958  E7C6 000E                            STH,R6   14,B6

     1202     9587    4                 CALL I$REPORT_TDISCON2;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:193  

   9587   0 00095A  E3C0 0905                            LNJ,B6   s:0,PREL
          0 00095C       0001                            DC       s:9589,PREL

     1203     9588
     1204     9589    4                 CALL I$SET_REFWAIT;

   9589   0 00095D  E3C0 09FE                            LNJ,B6   s:0,PREL
          0 00095F       0001                            DC       s:9590,PREL

     1205     9590    4                 KN$TCTX.DST_REF = TPDU_BUF.SRC_REF;

   9590   0 000960  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 000962  E847 002E                            LDR,R6   TPDU_BUF+2,AUTO
          0 000964  EF46 0001                            STR,R6   1,B6

     1206     9591    4                 GOTO SEND_DC;

   9591   0 000966  0F81 0006                            B        s:9597,PREL

     1207     9592
     1208     9593    4               CASE ( %K_TSTATE_WBCL );

     1209     9594    4                 CALL I$SET_REFWAIT;

   9594   0 000968  E3C0 09F3                            LNJ,B6   s:0,PREL
          0 00096A       0001                            DC       s:9595,PREL

     1210     9595    4                 GOTO SEND_DC;

   9595   0 00096B  0F81 0001                            B        s:9597,PREL

     1211     9596
     1212     9597    4               CASE ( %K_TSTATE_REFWAIT, %K_TSTATE_CLOSED);

     1213     9598    4   SEND_DC:
     1214     9599    4                 IF TPDU_BUF.SRC_REF ~= 0
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:194  

   9599   0 00096D  E847 002E            SEND_DC         LDR,R6   TPDU_BUF+2,AUTO
          0 00096F  6901 0032                            BEZ,R6   s:9621,PREL

     1215     9600    5                 THEN DO;

     1216     9601    5   SEND_DC2:
     1217     9602    5                      IF KN$TCTX.CLASS=4 OR KN$TCTX.CLASS=2

   9602   0 000971  ECC7 000C            SEND_DC2        LDB,B6   CTX$,AUTO
          0 000973  E2C6 0005                            LLH,R6   5,B6
          0 000975  6D04                                 CMV,R6   4
          0 000976  0901 0004                            BE       s:9604,PREL
          0 000978  6D02                                 CMV,R6   2
          0 000979  0981 0028                            BNE      s:9621,PREL

     1218     9603    6                      THEN DO;

     1219     9604    6                           KN$NETPARM.NODE = KN$TCTX.NODE;

   9604   0 00097B  DCC7 0004                            LDB,B5   @KN$NETPARM,AUTO
          0 00097D  D806                                 LDR,R5   ,B6
          0 00097E  D570 00FF                            AND,R5   255,IMO
          0 000980  DF45 0015                            STR,R5   21,B5

     1220     9605    6                           CALL KNT$SEND_DC(KN$NETPARM);

   9605   0 000982  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 000984  CBF0 0100                            LAB,B4   256,IMO
          0 000986  E380 0000 0000  xent                 LNJ,B6   KNT$SEND_DC
          0 000989       0001                            DC       s:9607,PREL

     1221     9606    6                           END;

     1222     9607    5                      END;

   9607   0 00098A  0F81 0017                            B        s:9621,PREL
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:195  

     1223     9608
     1224     9609
     1225     9610    4               CASE ( %K_TSTATE_WFTRESP );

     1226     9611    4                 CALL I$CANCEL_RETRAN;

   9611   0 00098C  E3C0 0C2C                            LNJ,B6   s:0,PREL
          0 00098E       0001                            DC       s:9612,PREL

     1227     9612    4                 CALL I$REPORT_TDISCON2;

   9612   0 00098F  E3C0 08D0                            LNJ,B6   s:0,PREL
          0 000991       0001                            DC       s:9613,PREL

     1228     9613    4                 CALL KNT$SEND_DC(KN$NETPARM);

   9613   0 000992  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 000994  CBF0 0100                            LAB,B4   256,IMO
          0 000996  E380 0000 0000  xent                 LNJ,B6   KNT$SEND_DC
          0 000999       0001                            DC       s:9614,PREL

     1229     9614    4                 CALL I$SET_REFWAIT;

   9614   0 00099A  E3C0 09C1                            LNJ,B6   s:0,PREL
          0 00099C       0001                            DC       s:9614+3,PREL
          0 00099D  0F81 0004                            B        s:9621,PREL

     1230     9615
     1231     9616    4               CASE ( %K_TSTATE_CLOSING );

     1232     9617    4                 CALL I$SET_REFWAIT;

   9617   0 00099F  E3C0 09BC                            LNJ,B6   s:0,PREL
          0 0009A1       0001                            DC       s:9621,PREL

     1233     9618
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:196  
     1234     9619    4                 END/*do case(state)*/;

     1235     9620
     1236     9621    3              RETURN;

   9621   0 0009A2  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1237     9622        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:197  
     1238     9623        /*F* NAME: KNT$RECV - Disconnect Confirm received.
     1239     9624
     1240     9625        TPDU_DCs are only used with OSI Class 2 and Class 4 connections.
     1241     9626        */
     1242     9627    3            CASE(%K_TPDU_TYPE_DC);

     1243     9628
     1244     9629    3              IF KN$TCTX.CLASS~=4 AND KN$TCTX.CLASS~=2

   9629   0 0009A5  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 0009A7  D2C6 0005                            LLH,R5   5,B6
          0 0009A9  5D04                                 CMV,R5   4
          0 0009AA  0901 0004                            BE       s:9632,PREL
          0 0009AC  5D02                                 CMV,R5   2
          0 0009AD  0981 F825                            BNE      s:8792,PREL

     1245     9630    3              THEN GOTO LOG_BAD_TPDU_TYPE;
     1246     9631
     1247     9632    3              IF KN$TCTX.DST_REF ~= TPDU_BUF.SRC_REF

   9632   0 0009AF  C846 0001                            LDR,R4   1,B6
          0 0009B1  C947 002E                            CMR,R4   TPDU_BUF+2,AUTO
          0 0009B3  0981 F8C4                            BNE      s:8891,PREL

     1248     9633    3              THEN GOTO SET_BAD_DST_REF;
     1249     9634
     1250     9635    3              IF KN$TCTX.STATE ~= %K_TSTATE_CLOSING

   9635   0 0009B5  9286                                 LLH,R1   ,B6
          0 0009B6  1D08                                 CMV,R1   8
          0 0009B7  0981 FCA2                            BNE      s:9307,PREL

     1251     9636    3              THEN GOTO SET_BAD_TSTATE;
     1252     9637
     1253     9638    3              CALL I$SET_REFWAIT;

   9638   0 0009B9  E3C0 09A2                            LNJ,B6   s:0,PREL
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:198  
          0 0009BB       0001                            DC       s:9640,PREL

     1254     9639
     1255     9640    3              IF KN$TCTX.OPTION.CONS

   9640   0 0009BC  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 0009BE  82C6 000C                            LB,'0020'X        12,B6
          0 0009C0       0020
          0 0009C1  0581 0554                            BBF      s:10162,PREL
          0 0009C3  82C6 000D                            LB,'0004'X        13,B6
          0 0009C5       0004
          0 0009C6  0581 054F                            BBF      s:10162,PREL

     1256     9641    3                AND KN$TCTX.OUTBOUND
     1257     9642    4              THEN DO;

     1258     9643    4                   KN$NETPARM.UHDRSZ = 0;

   9643   0 0009C8  DCC7 0004                            LDB,B5   @KN$NETPARM,AUTO
          0 0009CA  8745 0007                            CL       7,B5

     1259     9644    4                   KN$NETPARM.THDRSZ = 0;

   9644   0 0009CC  8745 000D                            CL       13,B5

     1260     9645    4                   KN$NETPARM.NHDRSZ = 0;

   9645   0 0009CE  8745 0010                            CL       16,B5

     1261     9646    4                   KN$NETPARM.FUNCTION = %KN_FCN_TERM;

   9646   0 0009D0  6C03                                 LDV,R6   3
          0 0009D1  EF45 0014                            STR,R6   20,B5

     1262     9647    4                   KN$NETPARM.LDCT$ = KN$LDCT$(KN$TCTX.LDCTX#);

   9647   0 0009D3  ECC7 000C                            LDB,B6   CTX$,AUTO
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:199  
          0 0009D5  B806                                 LDR,R3   ,B6
          0 0009D6  B570 00FF                            AND,R3   255,IMO
          0 0009D8  CC80 0000 0000  xsym                 LDB,B4   KN_DCT$$
          0 0009DB  BCB4                                 LDB,B3   ,B4,R3
          0 0009DC  BF85                                 STB,B3   ,B5

     1263     9648
     1264     9649    4                   CALL KNH$SEND(KN$NETPARM)

   9649   0 0009DD  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 0009DF  CBF0 0100                            LAB,B4   256,IMO
          0 0009E1  E380 0000 0000  xent                 LNJ,B6   KNH$SEND
          0 0009E4       0003                            DC       s:9651,PREL
          0 0009E5  0F81 0007                            B        s:9654,PREL

     1265     9650    5                   WHENALTRETURN DO;

     1266     9651    5                        ERRNUM = %K_ERROR_NETWORK;

   9651   0 0009E7  E870 00F9                            LDR,R6   249,IMO
          0 0009E9  EF47 0006                            STR,R6   ERRNUM,AUTO

     1267     9652    5                        GOTO LOG_BAD_TPDU;

   9652   0 0009EB  0F81 F7F8                            B        s:8799,PREL

     1268     9653    5                        END;
     1269     9654    4                   RETURN;

   9654   0 0009ED  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1270     9655    4                   END;
     1271     9656
     1272     9657        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:200  
     1273     9658        /*F* NAME: KNT$RECV - Data TPDU received.
     1274     9659        */
     1275     9660
     1276     9661    3            CASE(%K_TPDU_TYPE_DT);

   9652   0                              GOT_DATA2       null
     1277     9662    3   GOT_DATA2: ;
     1278     9663    3              IF TPDUSIZE > KN$TCTX.TPDUSZ

   9663   0 0009F0  ECC7 000C            GOT_DATA2       LDB,B6   CTX$,AUTO
          0 0009F2  D847 001B                            LDR,R5   TPDUSIZE,AUTO
          0 0009F4  5801 000B                            BLZ,R5   s:9668,PREL
          0 0009F6  D946 0009                            CMR,R5   9,B6
          0 0009F8  0381 0007                            BLE      s:9668,PREL

     1279     9664    4              THEN DO;

     1280     9665    4                   ERRNUM = %K_ERROR_DATASZ; GOTO LOG_BAD_TPDU;

   9665   0 0009FA  C870 00E5                            LDR,R4   229,IMO
          0 0009FC  CF47 0006                            STR,R4   ERRNUM,AUTO

   9665   0 0009FE  0F81 F7E5                            B        s:8799,PREL

     1281     9666    4                   END;
     1282     9667
     1283     9668    3              IF KN$TCTX.STATE = %K_TSTATE_OPEN

   9668   0 000A00  C286                                 LLH,R4   ,B6
          0 000A01  4D05                                 CMV,R4   5
          0 000A02  0981 0269                            BNE      s:9883,PREL

     1284     9669    4              THEN DO;

   9665   0                              CLASS_4_OPENED  null
     1285     9670    4   CLASS_4_OPENED: ;
     1286     9671    4                   IF KN$TCTX.CLASS = 0
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:201  

   9671   0 000A04  ECC7 000C            CLASS_4_OPENED  LDB,B6   CTX$,AUTO
          0 000A06  E2C6 0005                            LLH,R6   5,B6
          0 000A08  6981 000F                            BNEZ,R6  s:9678,PREL

     1287     9672    5                   THEN DO;

     1288     9673    5                        EOT = B$TPDU_DT_0.EOT;

   9673   0 000A0A  DCC7 000E                            LDB,B5   BUF$,AUTO
          0 000A0C  D845 0001                            LDR,R5   1,B5
          0 000A0E  D570 8000                            AND,R5   -32768,IMO
          0 000A10  DF47 0020                            STR,R5   EOT,AUTO

     1289     9674    5                        TPDU_NR = KN$TCTX.RECV_LWE;

   9674   0 000A12  8CC6 0022                            LDI      34,B6
          0 000A14  8D47 0014                            SDI      TPDU_NR,AUTO

     1290     9675    5                        END;

   9675   0 000A16  0F81 001E                            B        s:9684,PREL

     1291     9676
     1292     9677    5                   ELSE DO;

     1293     9678    5                        EOT = B$TPDU_DT.EOT;

   9678   0 000A18  DCC7 000E                            LDB,B5   BUF$,AUTO
          0 000A1A  D845 0002                            LDR,R5   2,B5
          0 000A1C  D570 8000                            AND,R5   -32768,IMO
          0 000A1E  DF47 0020                            STR,R5   EOT,AUTO

     1294     9679    5                        IF KN$TCTX.OPTION.EXTENDED ~= '0'B

   9679   0 000A20  82C6 000C                            LB,'0004'X        12,B6
   9679   0 000A22       0004
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:202  
          0 000A23  0581 0009                            BBF      s:9681,PREL

     1295     9680    5                        THEN TPDU_NR = B$TPDU_DT_EXT.TPDU_NR;

   9680   0 000A25  8CC5 0002                            LDI      2,B5
          0 000A27  E570 7FFF                            AND,R6   32767,IMO
          0 000A29  8D47 0014                            SDI      TPDU_NR,AUTO
          0 000A2B  0F81 0009                            B        s:9684,PREL

     1296     9681    5                        ELSE TPDU_NR = B$TPDU_DT.TPDU_NR;

   9681   0 000A2D  F845 0002                            LDR,R7   2,B5
          0 000A2F  7048                                 SOR,R7   8
          0 000A30  F570 007F                            AND,R7   127,IMO
          0 000A32  6C00                                 LDV,R6   0
          0 000A33  8D47 0014                            SDI      TPDU_NR,AUTO

     1297     9682    5                        END;

     1298     9683
     1299     9684    5                   DO WHILE ( TPDU_NR > KN$TCTX.MAXSEQ );

   9684   0 000A35  84C6 000A                            SID      10,B6
          0 000A37  0681 0017                            BCF      s:9688,PREL
          0 000A39  6981 0003                            BNEZ,R6  s:9685,PREL
          0 000A3B  7901 0013                            BEZ,R7   s:9688,PREL

     1300     9685    5                        TPDU_NR = TPDU_NR - KN$TCTX.MAXSEQ - 1;

   9685   0 000A3D  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 000A3F  8CC7 0014                            LDI      TPDU_NR,AUTO
          0 000A41  84C6 000A                            SID      10,B6
          0 000A43  8470 FFFF FFFF                       AID      -1,IMO
          0 000A46  8D47 0014                            SDI      TPDU_NR,AUTO

     1301     9686    5                        END;

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:203  
   9686   0 000A48  84C6 000A                            SID      10,B6
          0 000A4A  6981 0003                            BNEZ,R6  s:9686+6,PREL
          0 000A4C  7901 0002                            BEZ,R7   s:9688,PREL
          0 000A4E  066F                                 BCT      s:9685,SPREL

     1302     9687
     1303     9688    4                   IF KN$TCTX.CLASS=2 AND KN$TCTX.OPTION.CLASS_2_FLOW='0'B

   9688   0 000A4F  E2C6 0005                            LLH,R6   5,B6
          0 000A51  6D02                                 CMV,R6   2
          0 000A52  0981 0006                            BNE      s:9691,PREL
          0 000A54  82C6 000C                            LB,'0008'X        12,B6
          0 000A56       0008
          0 000A57  0581 0003                            BBF      s:9692,PREL

     1304     9689    4                   THEN GOTO RESET_LWE;
     1305     9690
     1306     9691    4                   IF KN$TCTX.CLASS=0

   9691   0 000A59  6981 0007                            BNEZ,R6  s:9698,PREL

     1307     9692    5                   THEN DO;

     1308     9693    5   RESET_LWE:
     1309     9694    5                        KN$TCTX.RECV_LWE = TPDU_NR; /*fake out class4 test below*/

   9694   0 000A5B  8CC7 0014            RESET_LWE       LDI      TPDU_NR,AUTO
          0 000A5D  8D46 0022                            SDI      34,B6

     1310     9695    5                        GOTO DELIVER_2SESSION;

   9695   0 000A5F  0F81 0054                            B        s:9727,PREL

     1311     9696    5                        END;
     1312     9697
     1313     9698    4                   IF KN$TCTX.CLASS = 4

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:204  
   9698   0 000A61  6D04                                 CMV,R6   4
          0 000A62  0981 0004                            BNE      s:9704,PREL

     1314     9699    4                   THEN CALL I$SET_INACTIVITY;

   9699   0 000A64  E3C0 0B40                            LNJ,B6   s:0,PREL
          0 000A66       0001                            DC       s:9704,PREL

     1315     9700
     1316     9701        /* If the received DT TPDU is outside the transmission window, discard
     1317     9702           the TPDU, but send an AK TPDU with up-to-date window information.
     1318     9703        */
     1319     9704    4                   IF KN$TCTX.RECV_LWE > KN$TCTX.RECV_UWE

   9704   0 000A67  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 000A69  8CC6 0022                            LDI      34,B6
          0 000A6B  84C6 0024                            SID      36,B6
          0 000A6D  0681 0013                            BCF      s:9712,PREL
          0 000A6F  6981 0003                            BNEZ,R6  s:9706,PREL
          0 000A71  7901 000F                            BEZ,R7   s:9712,PREL

     1320     9705    5                   THEN DO;

     1321     9706    5                        IF ( TPDU_NR >= KN$TCTX.RECV_UWE ) AND

   9706   0 000A73  8CC7 0014                            LDI      TPDU_NR,AUTO
          0 000A75  84C6 0024                            SID      36,B6
          0 000A77  0681 0007                            BCF      s:9709,PREL
          0 000A79  8CC7 0014                            LDI      TPDU_NR,AUTO
          0 000A7B  84C6 0022                            SID      34,B6
          0 000A7D  0681 000F                            BCF      s:9714,PREL

     1322     9707    5                          (TPDU_NR < KN$TCTX.RECV_LWE )
     1323     9708    5                        THEN GOTO SEND_ACK;
     1324     9709    5                        END;

   9709   0 000A7F  0F81 0034                            B        s:9727,PREL
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:205  

     1325     9710
     1326     9711    5                   ELSE DO;

     1327     9712    5                        IF ( TPDU_NR >= KN$TCTX.RECV_UWE) OR

   9712   0 000A81  8CC7 0014                            LDI      TPDU_NR,AUTO
          0 000A83  84C6 0024                            SID      36,B6
          0 000A85  0601 0007                            BCT      s:9714,PREL
          0 000A87  8CC7 0014                            LDI      TPDU_NR,AUTO
          0 000A89  84C6 0022                            SID      34,B6
          0 000A8B  0601 0028                            BCT      s:9727,PREL

     1328     9713    5                          ( TPDU_NR < KN$TCTX.RECV_LWE )
     1329     9714    6                        THEN DO;

   9707   0                              SEND_ACK        null
     1330     9715    6   SEND_ACK:                 ;
     1331     9716    6                             KN$TCTX.RERR.DT_NWINDOW = KN$TCTX.RERR.DT_NWINDOW +1;

   9716   0 000A8D  8AC6 0017            SEND_ACK        INC      23,B6

     1332     9717
     1333     9718    6                             IF KN$TCTX.CLASS =2

   9718   0 000A8F  E2C6 0005                            LLH,R6   5,B6
          0 000A91  6D02                                 CMV,R6   2
          0 000A92  0981 000E                            BNE      s:9727,PREL

     1334     9719    7                             THEN DO;

     1335     9720    7   SET_SEQ_ERR:
     1336     9721    7                                  KN$TCTX.ERR = %K_ERROR_LOST_TPDU;

   9721   0 000A94  D870 00E4            SET_SEQ_ERR     LDR,R5   228,IMO
          0 000A96  DAC6 000E                            SRM,R5,'00FF'X    14,B6
          0 000A98       00FF
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:206  

     1337     9722    7   SET_PROT_ERR:
     1338     9723    7                                  KN$TCTX.REASON = %K_REASON_PROTOCOL;

   9723   0 000A99  E870 0085            SET_PROT_ERR    LDR,R6   133,IMO
          0 000A9B  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 000A9D  E7C6 000E                            STH,R6   14,B6

     1339     9724    7                                  GOTO SET_CLOSING;

   9724   0 000A9F  0F81 FC8D                            B        s:9388,PREL

     1340     9725    7                                  END;
     1341     9726
     1342     9727    6                             IF NOT KN$TCTX.LOST_TPDU

   9727   0 000AA1  82C6 000D                            LB,'0080'X        13,B6
   9727   0 000AA3       0080
          0 000AA4  0501 0009                            BBT      s:9729,PREL

     1343     9728    6                             THEN CALL KNT$SEND_AK(KN$NETPARM);

   9728   0 000AA6  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 000AA8  CBF0 0100                            LAB,B4   256,IMO
          0 000AAA  E380 0000 0000  xent                 LNJ,B6   KNT$SEND_AK
          0 000AAD       0001                            DC       s:9729,PREL

     1344     9729    6                             ERRNUM = %K_ERROR_NWINDOW; GOTO DISCARD_TPDU;

   9729   0 000AAE  E870 00ED                            LDR,R6   237,IMO
          0 000AB0  EF47 0006                            STR,R6   ERRNUM,AUTO

   9729   0 000AB2  0F81 F739                            B        s:8806,PREL

   9727   0                              DELIVER_2SESSIONnull
     1345     9730    6                             END;
     1346     9731    5                        END;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:207  
     1347     9732
     1348     9733        /* See if we need to buffer a TPDU received out of sequence or if
     1349     9734           we need to reassemble a segmented SPDU.  If so, call KNT$SAVE_FRAG.
     1350     9735        */
     1351     9736    4   DELIVER_2SESSION: ;
     1352     9737    4                   IF TPDU_NR ~= KN$TCTX.RECV_NEXT

   9737   0 000AB4  8CC7 0014            DELIVER_2SESSIONLDI      TPDU_NR,AUTO
          0 000AB6  84C6 0026                            SID      38,B6
          0 000AB8  6981 000C                            BNEZ,R6  s:9742,PREL
          0 000ABA  7981 000A                            BNEZ,R7  s:9742,PREL

     1353     9738    4                   THEN GOTO SAVE_FRAG;
     1354     9739
     1355     9740    4                   IF ( EOT = '0'B ) OR

   9740   0 000ABC  89C7 0020                            CMZ      EOT,AUTO
          0 000ABE  0881 0006                            BAGE     s:9742,PREL
          0 000AC0  82C6 000D                            LB,'0008'X        13,B6
          0 000AC2       0008
          0 000AC3  0581 0080                            BBF      s:9780,PREL

     1356     9741    4                     (KN$TCTX.HOST_CQ_FULL = '1'B)
     1357     9742    5                   THEN DO;

     1358     9743    5   SAVE_FRAG:
     1359     9744    5                        CALL KNT$SAVE_FRAG(KN$TCTX, TPDU_NR, EOT, DATA$, DATASIZE)

   9744   0 000AC5  EBC7 0009            SAVE_FRAG       LAB,B6   DATASIZE,AUTO
          0 000AC7  EFC7 0046                            STB,B6   BUFS_RLSD+11,AUTO
          0 000AC9  DBC7 0007                            LAB,B5   DATA$,AUTO
          0 000ACB  DFC7 0044                            STB,B5   BUFS_RLSD+9,AUTO
          0 000ACD  CBC7 0020                            LAB,B4   EOT,AUTO
          0 000ACF  CFC7 0042                            STB,B4   BUFS_RLSD+7,AUTO
          0 000AD1  BBC7 0014                            LAB,B3   TPDU_NR,AUTO
          0 000AD3  BFC7 0040                            STB,B3   BUFS_RLSD+5,AUTO
          0 000AD5  ACC7 000C                            LDB,B2   CTX$,AUTO
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:208  
          0 000AD7  AFC7 003E                            STB,B2   BUFS_RLSD+3,AUTO
          0 000AD9  BBC7 003E                            LAB,B3   BUFS_RLSD+3,AUTO
          0 000ADB  CBF0 0500                            LAB,B4   1280,IMO
          0 000ADD  E380 0000 0000  xent                 LNJ,B6   KNT$SAVE_FRAG
          0 000AE0       0003                            DC       s:9746,PREL
          0 000AE1  0F81 0037                            B        s:9761,PREL

     1360     9745    6                        WHENALTRETURN DO;

     1361     9746    6                             IF KN$TCTX.CLASS ~= 0

   9746   0 000AE3  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 000AE5  E2C6 0005                            LLH,R6   5,B6
          0 000AE7  6901 0011                            BEZ,R6   s:9747,PREL

     1362     9747    6                             THEN NEXT$->B$TPDU_DT_C.DST_REF = KN$TCTX.SRC_REF;

   9747   0 000AE9  8CC7 0016                            LDI      NEXT$,AUTO
          0 000AEB  B856                                 LDR,R3   R6
          0 000AEC  E570 7FFF                            AND,R6   32767,IMO
          0 000AEE  8D47 003E                            SDI      BUFS_RLSD+3,AUTO
          0 000AF0  DCC7 003E                            LDB,B5   BUFS_RLSD+3,AUTO
          0 000AF2  304F                                 SOR,R3   15
          0 000AF3  AB86                                 LAB,B2   ,B6
          0 000AF4  2C04                                 LDV,R2   4
          0 000AF5  6C02                                 LDV,R6   2
          0 000AF6  BB85                                 LAB,B3   ,B5
          0 000AF7  3E02                                 ADV,R3   2
          0 000AF8  0008                                 MMM

   9747   0                              CANT_REASSEM    null
     1363     9748    6   CANT_REASSEM:             ;
     1364     9749    6                             KN$NETPARM.ERRCODE = %KN_ERR_NOQ2;

   9749   0 000AF9  ECC7 0004            CANT_REASSEM    LDB,B6   @KN$NETPARM,AUTO
          0 000AFB  6C07                                 LDV,R6   7
          0 000AFC  EF46 0016                            STR,R6   22,B6
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:209  

     1365     9750
     1366     9751    6                             IF NOT KN$NETPARM.SLDCT$->KN$LDCT.FLAGS.QUEUED

   9751   0 000AFE  DCC6 0017                            LDB,B5   23,B6
          0 000B00  89C5 000A                            CMZ      10,B5
          0 000B02  0801 0013                            BAL      s:9758,PREL

     1367     9752    7                             THEN DO;

     1368     9753    7                                  KN$NETPARM.SLDCT$->KN$LDCT.FLAGS.QUEUED = '1'B;

   9753   0 000B04  8945 000A                            LBT,'8000'X       10,B5
   9753   0 000B06       8000

     1369     9754    7                                  KN$NETPARM.SLDCT$->KN$LDCT.LNK$ = KNT_WAIT_HEAD$;

   9754   0 000B07  DCC6 0017                            LDB,B5   23,B6
          0 000B09  CC80 0000 0000  xsym                 LDB,B4   KNT_WAIT_HEAD$
          0 000B0C  CFC5 0008                            STB,B4   8,B5

     1370     9755    7                                  KNT_WAIT_HEAD$ = KN$NETPARM.SLDCT$;

   9755   0 000B0E  DCC6 0017                            LDB,B5   23,B6
          0 000B10  DF80 0000 0000  xsym                 STB,B5   KNT_WAIT_HEAD$

     1371     9756    7                                  KNT_WAIT_COUNT = KNT_WAIT_COUNT +1;

   9756   0 000B13  8A80 0000 0000  xsym                 INC      KNT_WAIT_COUNT

     1372     9757    7                                  END;

     1373     9758    6                             ALTRETURN;

   9758   0 000B16  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     1374     9759    6                             END;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:210  
     1375     9760
     1376     9761    5                        IF EOT AND KN$TCTX.SSN_CRDT = 0

   9761   0 000B19  89C7 0020                            CMZ      EOT,AUTO
          0 000B1B  0881 000A                            BAGE     s:9765,PREL
          0 000B1D  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 000B1F  E846 004A                            LDR,R6   74,B6
          0 000B21  6981 0004                            BNEZ,R6  s:9765,PREL

     1377     9762    5                        THEN KN$TCTX.SSN_CRDT = -1;

   9762   0 000B23  8946 004A                            LBT,'FFFF'X       74,B6
   9762   0 000B25       FFFF

     1378     9763                                                /*so we dont send ack*/
     1379     9764
     1380     9765    5                        IF KN$TCTX.LOST_TPDU

   9765   0 000B26  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 000B28  82C6 000D                            LB,'0080'X        13,B6
          0 000B2A       0080
          0 000B2B  0581 000E                            BBF      s:9773,PREL

     1381     9766    6                        THEN DO;           /*for lost non-eot tpdus              */

     1382     9767    6                             IF KN$TCTX.RECV_HEAD$->FRAG_HDR.SEQ = KN$TCTX.RECV_NEXT

   9767   0 000B2D  DCC6 002A                            LDB,B5   42,B6
          0 000B2F  8CC5 0002                            LDI      2,B5
          0 000B31  84C6 0026                            SID      38,B6
          0 000B33  6981 0006                            BNEZ,R6  s:9773,PREL
          0 000B35  7981 0004                            BNEZ,R7  s:9773,PREL

     1383     9768    7                             THEN DO;

     1384     9769    7                                  KN$TCTX.LOST_TPDU = '0'B;

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:211  
   9769   0 000B37  8846 000D                            LBF,'0080'X       13,B6
   9769   0 000B39       0080

     1385     9770    7                                  END;

     1386     9771    6                             END;

     1387     9772
     1388     9773    5                        CALL KNT$DSESSION(KN$NETPARM) ALTRET(CANT_REASSEM);

   9773   0 000B3A  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 000B3C  CBF0 0100                            LAB,B4   256,IMO
          0 000B3E  E380 0000 0000  xent                 LNJ,B6   KNT$DSESSION
          0 000B41       FFB8                            DC       s:9747,PREL

     1389     9774    5                        GOTO FIX_LWE;

   9774   0 000B42  0F81 0088                            B        s:9835,PREL

     1390     9775    5                        END/*do if not eot or out of sequence*/;
     1391     9776
     1392     9777        /* pass the message on up to local fep session or send it on to the
     1393     9778           adjacent host.
     1394     9779        */
     1395     9780    4                   IF KN$TCTX.PRIMARY

   9780   0 000B44  82C6 000D                            LB,'0001'X        13,B6
   9780   0 000B46       0001
          0 000B47  0581 0010                            BBF      s:9789,PREL

     1396     9781    5                   THEN DO;

     1397     9782    5                        CALL KNS$RECV(KN$NETPARM)

   9782   0 000B49  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 000B4B  CBF0 0100                            LAB,B4   256,IMO
          0 000B4D  E380 0000 0000  xent                 LNJ,B6   KNS$RECV
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:212  
          0 000B50       0003                            DC       s:9784,PREL
          0 000B51  0F81 0004                            B        s:9786,PREL

     1398     9783    6                        WHENALTRETURN DO;

     1399     9784    6                             ALTRETURN;

   9784   0 000B53  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     1400     9785    6                             END;
     1401     9786    5                        END/*do if primary*/;

   9786   0 000B56  0F81 005B                            B        s:9829,PREL

     1402     9787
     1403     9788    5                   ELSE DO;

     1404     9789    5                        IF KN$TCTX.OPTION.OSI

   9789   0 000B58  82C6 000C                            LB,'0010'X        12,B6
   9789   0 000B5A       0010
          0 000B5B  0581 0009                            BBF      s:9798,PREL

     1405     9790    6                        THEN DO;

     1406     9791    6                             IF KN$TCTX.SSN_CRDT <= 0

   9791   0 000B5D  E846 004A                            LDR,R6   74,B6
          0 000B5F  6A01 0005                            BGZ,R6   s:9798,PREL

     1407     9792    7                             THEN DO;

     1408     9793    7                                  KN$TCTX.RERR.NSESS_CDT = KN$TCTX.RERR.NSESS_CDT +1;

   9793   0 000B61  8AC6 001D                            INC      29,B6

     1409     9794    7                                  GOTO SAVE_FRAG;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:213  

   9794   0 000B63  0F81 FF61                            B        s:9742,PREL

     1410     9795    7                                  END;
     1411     9796    6                             END;
     1412     9797
     1413     9798    5                        IF KN$TCTX.CLASS ~= 0

   9798   0 000B65  E2C6 0005                            LLH,R6   5,B6
          0 000B67  6901 000B                            BEZ,R6   s:9805,PREL

     1414     9799    6                        THEN DO;

     1415     9800    6                             HOST_TPDUC$ = TPDU$;

   9800   0 000B69  8CC7 000A                            LDI      TPDU$,AUTO
          0 000B6B  8D47 0026                            SDI      HOST_TPDU$,AUTO

     1416     9801    6                             KN$NETPARM.SHDRSZ = 0;

   9801   0 000B6D  DCC7 0004                            LDB,B5   @KN$NETPARM,AUTO
          0 000B6F  8745 000A                            CL       10,B5

     1417     9802    6                             END;

   9802   0 000B71  0F81 0027                            B        s:9816,PREL

     1418     9803
     1419     9804    6                        ELSE DO;      /*must build a tpdu_dt header with .dst_ref*/

     1420     9805    6                             TPDUSIZE = SIZEC(B$TPDU_DT);

   9805   0 000B73  5C06                                 LDV,R5   6
          0 000B74  DF47 001B                            STR,R5   TPDUSIZE,AUTO

     1421     9806    6                             HOST_TPDU$ = ADDR(TPDU_BUF);

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:214  
   9806   0 000B76  DBC7 002C                            LAB,B5   TPDU_BUF,AUTO
          0 000B78  DFC7 0026                            STB,B5   HOST_TPDU$,AUTO

     1422     9807    6                             B$TPDU_DT.LI = SIZEC(B$TPDU_DT) -1;

   9807   0 000B7A  6C05                                 LDV,R6   5
          0 000B7B  CCC7 000E                            LDB,B4   BUF$,AUTO
          0 000B7D  E784                                 STH,R6   ,B4

     1423     9808    6                             B$TPDU_DT.TYPE = %K_TPDU_TYPE_DT;

   9808   0 000B7E  ECC7 000E                            LDB,B6   BUF$,AUTO
          0 000B80  8906                                 LBT,'00F0'X       ,B6
          0 000B81       00F0

     1424     9809    6                             B$TPDU_DT.TPDU_NR = TPDU_NR;

   9809   0 000B82  C847 0015                            LDR,R4   TPDU_NR+1,AUTO
          0 000B84  4008                                 SOL,R4   8
          0 000B85  ECC7 000E                            LDB,B6   BUF$,AUTO
          0 000B87  CAC6 0002                            SRM,R4,'7F00'X    2,B6
          0 000B89       7F00

     1425     9810    6                             B$TPDU_DT.EOT = '1'B;

   9810   0 000B8A  ECC7 000E                            LDB,B6   BUF$,AUTO
          0 000B8C  8946 0002                            LBT,'8000'X       2,B6
          0 000B8E       8000

     1426     9811
     1427     9812    6                             KN$NETPARM.MSG$ = DATA$;

   9812   0 000B8F  8CC7 0007                            LDI      DATA$,AUTO
          0 000B91  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          0 000B93  8D46 0002                            SDI      2,B6

     1428     9813    6                             KN$NETPARM.MSGSZ = DATASIZE;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:215  

   9813   0 000B95  C847 0009                            LDR,R4   DATASIZE,AUTO
          0 000B97  CF46 0004                            STR,R4   4,B6

     1429     9814    6                             END;

     1430     9815
     1431     9816    5                        CALL I$FORWARD_2HOST

   9816   0 000B99  E3C0 04CB                            LNJ,B6   s:0,PREL
          0 000B9B       0003                            DC       s:9818,PREL
          0 000B9C  0F81 000C                            B        s:9823,PREL

     1432     9817    6                        WHENALTRETURN DO;

     1433     9818    6                             KN$TCTX.HOST_CQ_FULL = '1'B;

   9818   0 000B9E  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 000BA0  8946 000D                            LBT,'0008'X       13,B6
          0 000BA2       0008

     1434     9819    6                             KN$NETPARM.ERRCODE = 0;

   9819   0 000BA3  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          0 000BA5  8746 0016                            CL       22,B6

     1435     9820    6                             GOTO SAVE_FRAG;

   9820   0 000BA7  0F81 FF1D                            B        s:9742,PREL

     1436     9821    6                             END;
     1437     9822
     1438     9823    5                        IF KN$TCTX.OPTION.OSI

   9823   0 000BA9  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 000BAB  82C6 000C                            LB,'0010'X        12,B6
          0 000BAD       0010
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:216  
          0 000BAE  0581 0003                            BBF      s:9829,PREL

     1439     9824    5                        THEN KN$TCTX.SSN_CRDT = KN$TCTX.SSN_CRDT -1;

   9824   0 000BB0  88C6 004A                            DEC      74,B6

     1440     9825    5                        END;

     1441     9826
     1442     9827        /* count up the number of msgs received on this connection.
     1443     9828        */
     1444     9829    4                   KN$TCTX.RECV_NEXT = KN$TCTX.RECV_NEXT +1;

   9829   0 000BB2  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 000BB4  8AC6 0027                            INC      39,B6
          0 000BB6  8EC6 0026                            CAD      38,B6

     1445     9830
     1446     9831    4                   IF KN$TCTX.RECV_NEXT > KN$TCTX.MAXSEQ

   9831   0 000BB8  8CC6 0026                            LDI      38,B6
          0 000BBA  84C6 000A                            SID      10,B6
          0 000BBC  0681 000E                            BCF      s:9835,PREL
          0 000BBE  6981 0003                            BNEZ,R6  s:9832,PREL
          0 000BC0  7901 000A                            BEZ,R7   s:9835,PREL

     1447     9832    4                   THEN KN$TCTX.RECV_NEXT = KN$TCTX.RECV_NEXT - KN$TCTX.MAXSEQ -1;

   9832   0 000BC2  8CC6 0026                            LDI      38,B6
          0 000BC4  84C6 000A                            SID      10,B6
          0 000BC6  8470 FFFF FFFF                       AID      -1,IMO
          0 000BC9  8D46 0026                            SDI      38,B6

     1448     9833
     1449     9834    4   FIX_LWE:
     1450     9835    4                   IF KN$TCTX.CLASS = 4 OR KN$TCTX.OPTION.OSI

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:217  
   9835   0 000BCB  ECC7 000C            FIX_LWE         LDB,B6   CTX$,AUTO
          0 000BCD  E2C6 0005                            LLH,R6   5,B6
          0 000BCF  6D04                                 CMV,R6   4
          0 000BD0  0901 0006                            BE       s:9837,PREL
          0 000BD2  82C6 000C                            LB,'0010'X        12,B6
          0 000BD4       0010
          0 000BD5  0581 001C                            BBF      s:9844,PREL

     1451     9836    5                   THEN DO;

     1452     9837    5                        IF TPDU_NR = KN$TCTX.RECV_LWE

   9837   0 000BD7  8CC7 0014                            LDI      TPDU_NR,AUTO
          0 000BD9  84C6 0022                            SID      34,B6
          0 000BDB  6981 000A                            BNEZ,R6  s:9840,PREL
          0 000BDD  7981 0008                            BNEZ,R7  s:9840,PREL

     1453     9838    5                        THEN KN$TCTX.RECV_LWE = TPDU_NR + 1;

   9838   0 000BDF  8CC7 0014                            LDI      TPDU_NR,AUTO
          0 000BE1  8470 0000 0001                       AID      1,IMO
          0 000BE4  8D46 0022                            SDI      34,B6

     1454     9839
     1455     9840    5                        IF TPDU_NR >= KN$TCTX.MAXSEQ

   9840   0 000BE6  8CC7 0014                            LDI      TPDU_NR,AUTO
          0 000BE8  84C6 000A                            SID      10,B6
          0 000BEA  0681 0007                            BCF      s:9844,PREL

     1456     9841    5                        THEN KN$TCTX.RECV_LWE = TPDU_NR - KN$TCTX.MAXSEQ;

   9841   0 000BEC  8CC7 0014                            LDI      TPDU_NR,AUTO
          0 000BEE  84C6 000A                            SID      10,B6
          0 000BF0  8D46 0022                            SDI      34,B6

     1457     9842    5                        END/*do if class4 or osi*/;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:218  

     1458     9843
     1459     9844    4                   IF KN$TCTX.RECV_HEAD$ ~= ADDR(NIL)

   9844   0 000BF2  8DC6 002A                            CMN      42,B6
          0 000BF4  0901 0016                            BE       s:9853,PREL
          0 000BF6  DCC6 002A                            LDB,B5   42,B6
          0 000BF8  8CC5 0002                            LDI      2,B5
          0 000BFA  84C6 0026                            SID      38,B6
          0 000BFC  6981 000E                            BNEZ,R6  s:9853,PREL
          0 000BFE  7981 000C                            BNEZ,R7  s:9853,PREL

     1460     9845    4                     AND KN$TCTX.RECV_HEAD$->FRAG_HDR.SEQ = KN$TCTX.RECV_NEXT
     1461     9846    5                   THEN DO;

     1462     9847    5                        KN$TCTX.LOST_TPDU = '0'B;

   9847   0 000C00  8846 000D                            LBF,'0080'X       13,B6
   9847   0 000C02       0080

     1463     9848    5                        CALL KNT$DSESSION(KN$NETPARM);

   9848   0 000C03  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 000C05  CBF0 0100                            LAB,B4   256,IMO
          0 000C07  E380 0000 0000  xent                 LNJ,B6   KNT$DSESSION
          0 000C0A       0001                            DC       s:9853,PREL

     1464     9849    5                        END;

     1465     9850
     1466     9851        /* See if its time to send an AK TPDU.
     1467     9852        */
     1468     9853    4                   IF ( KN$TCTX.CLASS=4

   9853   0 000C0B  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 000C0D  E2C6 0005                            LLH,R6   5,B6
          0 000C0F  6D04                                 CMV,R6   4
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:219  
          0 000C10  0901 0009                            BE       s:9853+15,PREL
          0 000C12  6D02                                 CMV,R6   2
          0 000C13  0981 004C                            BNE      s:9877,PREL
          0 000C15  82C6 000C                            LB,'0008'X        12,B6
          0 000C17       0008
          0 000C18  0581 0047                            BBF      s:9877,PREL
          0 000C1A  82C6 000D                            LB,'0080'X        13,B6
          0 000C1C       0080
          0 000C1D  0501 0042                            BBT      s:9877,PREL
          0 000C1F  D846 004A                            LDR,R5   74,B6
          0 000C21  5801 003E                            BLZ,R5   s:9877,PREL

     1469     9854    4                     OR (KN$TCTX.CLASS=2 AND KN$TCTX.OPTION.CLASS_2_FLOW='1'B) )
     1470     9855    4                     AND NOT KN$TCTX.LOST_TPDU
     1471     9856    4                     AND KN$TCTX.SSN_CRDT >= 0
     1472     9857    5                   THEN DO;

     1473     9858    5                        CDT = KN$TCTX.RECV_UWE - KN$TCTX.RECV_NEXT;

   9858   0 000C23  8CC6 0024                            LDI      36,B6
          0 000C25  84C6 0026                            SID      38,B6
          0 000C27  E857                                 LDR,R6   R7
          0 000C28  EF47 0011                            STR,R6   CDT,AUTO

     1474     9859
     1475     9860    5                        IF CDT < 0

   9860   0 000C2A  6881 000A                            BGEZ,R6  s:9863,PREL

     1476     9861    5                        THEN CDT = CDT + KN$TCTX.MAXSEQ + 1;

   9861   0 000C2C  70F0                                 DAR,R7   16
          0 000C2D  8446 000A                            AID      10,B6
          0 000C2F  8470 0000 0001                       AID      1,IMO
          0 000C32  E857                                 LDR,R6   R7
          0 000C33  EF47 0011                            STR,R6   CDT,AUTO

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:220  
     1477     9862
     1478     9863    5                        IF ( ( KN$TCTX.RCV_WINDOW_SZ - CDT) > KNT_HOLDBACK )
              9863                                 /* > max# of unacked allowed*/

   9863   0 000C35  C846 0005                            LDR,R4   5,B6
          0 000C37  C570 00FF                            AND,R4   255,IMO
          0 000C39  C256                                 SUB,R4   R6
          0 000C3A  4801 0010                            BLZ,R4   s:9867,PREL
          0 000C3C  C900 0000 0000  xsym                 CMR,R4   KNT_HOLDBACK
          0 000C3F  0381 000B                            BLE      s:9867,PREL

     1479     9864    5                        THEN CALL KNT$SEND_AK(KN$NETPARM);

   9864   0 000C41  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 000C43  CBF0 0100                            LAB,B4   256,IMO
          0 000C45  E380 0000 0000  xent                 LNJ,B6   KNT$SEND_AK
          0 000C48       0001                            DC       s:9864+8,PREL
          0 000C49  0F81 0016                            B        s:9877,PREL

     1480     9865
     1481     9866    6                        ELSE DO;

     1482     9867    6                             IF KN$TCTX.CLASS=4 AND

   9867   0 000C4B  C2C6 0005                            LLH,R4   5,B6
          0 000C4D  4D04                                 CMV,R4   4
          0 000C4E  0981 0011                            BNE      s:9877,PREL
          0 000C50  B800 0000 0000  xsym                 LDR,R3   KNT_HOLDBACK
          0 000C53  3901 000C                            BEZ,R3   s:9877,PREL
          0 000C55  A846 0005                            LDR,R2   5,B6
          0 000C57  A570 00FF                            AND,R2   255,IMO
          0 000C59  A256                                 SUB,R2   R6
          0 000C5A  2D01                                 CMV,R2   1
          0 000C5B  0981 0004                            BNE      s:9877,PREL

     1483     9868    6                               KNT_HOLDBACK~=0  AND
     1484     9869    6                               ((KN$TCTX.RCV_WINDOW_SZ - CDT) = 1 )
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:221  
     1485     9870    7                             THEN DO;

     1486     9871    7                                  CALL I$SET_WINDOW;

   9871   0 000C5D  E3C0 0933                            LNJ,B6   s:0,PREL
          0 000C5F       0001                            DC       s:9877,PREL

     1487     9872    7                                  END;

     1488     9873    6                             END;

     1489     9874
     1490     9875    5                        END/*do if class 4*/;

     1491     9876
     1492     9877    4                   IF KN$TCTX.SSN_CRDT = -1

   9877   0 000C60  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 000C62  E846 004A                            LDR,R6   74,B6
          0 000C64  6DFF                                 CMV,R6   -1
          0 000C65  0981 0003                            BNE      s:9880,PREL

     1493     9878    4                   THEN KN$TCTX.SSN_CRDT = 0;

   9878   0 000C67  8746 004A                            CL       74,B6

     1494     9879
     1495     9880    4                   RETURN;

   9880   0 000C69  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1496     9881    4                   END/*do if open*/;
     1497     9882
     1498     9883    3              IF KN$TCTX.STATE = %K_TSTATE_AKWAIT

   9883   0 000C6C  4D07                                 CMV,R4   7
          0 000C6D  0981 F9EC                            BNE      s:9307,PREL
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:222  

     1499     9884    4              THEN DO;

     1500     9885    4                   CALL I$SET_OPEN;

   9885   0 000C6F  E3C0 06FA                            LNJ,B6   s:0,PREL
          0 000C71       0001                            DC       s:9886,PREL

     1501     9886    4                   GOTO CLASS_4_OPENED;

   9886   0 000C72  0F81 FD91                            B        s:9669,PREL

     1502     9887    4                   END/*do if akwait*/;
     1503     9888
     1504     9889    3              ELSE GOTO SET_BAD_TSTATE;
     1505     9890        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:223  
     1506     9891        /*F* NAME: KNT$RECV - Expedited Data Received
     1507     9892
     1508     9893        TPDU_EDs are only used by Class 4 OSI transport connections,
     1509     9894        so if we got here, it was obviously from KNT$RECV_4HOST.
     1510     9895        */
     1511     9896
     1512     9897    3            CASE(%K_TPDU_TYPE_ED);

     1513     9898    3              IF DATASIZE > 16

   9898   0 000C74  D847 0009                            LDR,R5   DATASIZE,AUTO
          0 000C76  5D10                                 CMV,R5   16
          0 000C77  0A81 0007                            BALE     s:9903,PREL

     1514     9899    4              THEN DO;

     1515     9900    4                   ERRNUM = %K_ERROR_DATASZ; GOTO LOG_BAD_TPDU;

   9900   0 000C79  C870 00E5                            LDR,R4   229,IMO
          0 000C7B  CF47 0006                            STR,R4   ERRNUM,AUTO

   9900   0 000C7D  0F81 F566                            B        s:8799,PREL

     1516     9901    4                   END;
     1517     9902
     1518     9903    3              IF KN$TCTX.OPTION.EXPEDITED = '0'B

   9903   0 000C7F  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 000C81  82C6 000C                            LB,'0002'X        12,B6
          0 000C83       0002
          0 000C84  0501 0007                            BBT      s:9908,PREL

     1519     9904    4              THEN DO;

     1520     9905    4                   ERRNUM = %K_ERROR_NOEXPD; GOTO LOG_BAD_TPDU;

   9905   0 000C86  C870 00E1                            LDR,R4   225,IMO
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:224  
          0 000C88  CF47 0006                            STR,R4   ERRNUM,AUTO

   9905   0 000C8A  0F81 F559                            B        s:8799,PREL

     1521     9906    4                   END;
     1522     9907
     1523     9908    3              IF KN$TCTX.STATE = %K_TSTATE_OPEN

   9908   0 000C8C  C286                                 LLH,R4   ,B6
          0 000C8D  4D05                                 CMV,R4   5
          0 000C8E  0981 0094                            BNE      s:9954,PREL

     1524     9909    4              THEN DO;

   9905   0                              GOT_TPDU_ED     null
     1525     9910    4   GOT_TPDU_ED:    ;
     1526     9911    4                   IF KN$TCTX.CLASS = 4

   9911   0 000C90  ECC7 000C            GOT_TPDU_ED     LDB,B6   CTX$,AUTO
          0 000C92  E2C6 0005                            LLH,R6   5,B6
          0 000C94  6D04                                 CMV,R6   4
          0 000C95  0981 0004                            BNE      s:9916,PREL

     1527     9912    5                   THEN DO;

     1528     9913    5                        CALL I$SET_INACTIVITY;

   9913   0 000C97  E3C0 090D                            LNJ,B6   s:0,PREL
          0 000C99       0001                            DC       s:9916,PREL

     1529     9914    5                        END;

     1530     9915
     1531     9916    4                   IF KN$TCTX.OPTION.EXTENDED ~= '0'B

   9916   0 000C9A  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 000C9C  82C6 000C                            LB,'0004'X        12,B6
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:225  
          0 000C9E       0004
          0 000C9F  0581 000B                            BBF      s:9918,PREL

     1532     9917    4                   THEN TPDU_NR = B$TPDU_DT_EXT.TPDU_NR;

   9917   0 000CA1  DCC7 000E                            LDB,B5   BUF$,AUTO
          0 000CA3  8CC5 0002                            LDI      2,B5
          0 000CA5  E570 7FFF                            AND,R6   32767,IMO
          0 000CA7  8D47 0014                            SDI      TPDU_NR,AUTO
          0 000CA9  0F81 000B                            B        s:9920,PREL

     1533     9918    4                   ELSE TPDU_NR = B$TPDU_DT.TPDU_NR;

   9918   0 000CAB  DCC7 000E                            LDB,B5   BUF$,AUTO
          0 000CAD  F845 0002                            LDR,R7   2,B5
          0 000CAF  7048                                 SOR,R7   8
          0 000CB0  F570 007F                            AND,R7   127,IMO
          0 000CB2  6C00                                 LDV,R6   0
          0 000CB3  8D47 0014                            SDI      TPDU_NR,AUTO

     1534     9919
     1535     9920    4                   IF TPDU_NR ~= KN$TCTX.RECV_EXPD

   9920   0 000CB5  84C6 0028                            SID      40,B6
          0 000CB7  6981 0003                            BNEZ,R6  s:9922,PREL
          0 000CB9  7901 0038                            BEZ,R7   s:9936,PREL

     1536     9921    5                   THEN DO;

     1537     9922    5                        IF TPDU_NR +1 = KN$TCTX.RECV_EXPD

   9922   0 000CBB  8CC7 0014                            LDI      TPDU_NR,AUTO
          0 000CBD  8470 0000 0001                       AID      1,IMO
          0 000CC0  84C6 0028                            SID      40,B6
          0 000CC2  6981 0003                            BNEZ,R6  s:9925,PREL
          0 000CC4  7901 0019                            BEZ,R7   s:9927,PREL

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:226  
     1538     9923    5                        THEN GOTO ACK_DUP_ED;
     1539     9924
     1540     9925    5                        IF KN$TCTX.RECV_EXPD=0 AND TPDU_NR=KN$TCTX.MAXSEQ

   9925   0 000CC6  8CC6 0028                            LDI      40,B6
          0 000CC8  84F0 0000 0000                       SID      0,IMO
          0 000CCB  6981 0023                            BNEZ,R6  s:9933,PREL
          0 000CCD  7981 0021                            BNEZ,R7  s:9933,PREL
          0 000CCF  8CC7 0014                            LDI      TPDU_NR,AUTO
          0 000CD1  84C6 000A                            SID      10,B6
          0 000CD3  6981 001B                            BNEZ,R6  s:9933,PREL
          0 000CD5  7981 0019                            BNEZ,R7  s:9933,PREL

     1541     9926    6                        THEN DO;

     1542     9927    6                             KN$TCTX.RECV_EXPD = KN$TCTX.MAXSEQ+1;

   9927   0 000CD7  8CC6 000A                            LDI      10,B6
          0 000CD9  8470 0000 0001                       AID      1,IMO
          0 000CDC  8D46 0028                            SDI      40,B6

   9927   0                              ACK_DUP_ED      null
     1543     9928    6   ACK_DUP_ED:               ;
     1544     9929    6                             KN$TCTX.RECV_EXPD = KN$TCTX.RECV_EXPD - 1;

   9929   0 000CDE  8CC6 0028            ACK_DUP_ED      LDI      40,B6
          0 000CE0  8470 FFFF FFFF                       AID      -1,IMO
          0 000CE3  8D46 0028                            SDI      40,B6

     1545     9930    6                             CALL KNT$SEND_EA(KN$NETPARM);

   9930   0 000CE5  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 000CE7  CBF0 0100                            LAB,B4   256,IMO
          0 000CE9  E380 0000 0000  xent                 LNJ,B6   KNT$SEND_EA
          0 000CEC       0001                            DC       s:9931,PREL

     1546     9931    6                             GOTO FIX_RECV_EXPD;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:227  

   9931   0 000CED  0F81 0021                            B        s:9939,PREL

     1547     9932    6                             END;
     1548     9933    5                        RETURN;            /*discard out of sequence*/

   9933   0 000CEF  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1549     9934    5                        END;
     1550     9935
     1551     9936    4                   CALL KNT$SEND_EA(KN$NETPARM);

   9936   0 000CF2  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 000CF4  CBF0 0100                            LAB,B4   256,IMO
          0 000CF6  E380 0000 0000  xent                 LNJ,B6   KNT$SEND_EA
          0 000CF9       0001                            DC       s:9938,PREL

     1552     9937
     1553     9938    4                   HOST_TPDUC$ = TPDU$;

   9938   0 000CFA  8CC7 000A                            LDI      TPDU$,AUTO
          0 000CFC  8D47 0026                            SDI      HOST_TPDU$,AUTO

     1554     9939    4                   KN$NETPARM.MSGSZ = 0;

   9939   0 000CFE  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          0 000D00  8746 0004                            CL       4,B6

     1555     9940    4                   CALL I$FORWARD_2HOST

   9940   0 000D02  E3C0 0362                            LNJ,B6   s:0,PREL
          0 000D04       0003                            DC       s:9941,PREL
          0 000D05  0F81 0009                            B        s:9939,PREL

     1556     9941    5                   WHENALTRETURN DO;

     1557     9942    5   LEAVE_ON_Q:
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:228  
     1558     9943    5                        KN$TCTX.HOST_CQ_FULL = '1'B;

   9943   0 000D07  ECC7 000C            LEAVE_ON_Q      LDB,B6   CTX$,AUTO
          0 000D09  8946 000D                            LBT,'0008'X       13,B6
          0 000D0B       0008

     1559     9944        /* leave             KN$NETPARM.ERRCODE = %KN_ERR_NOQ; */
     1560     9945    5                        ALTRETURN;

   9945   0 000D0C  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

   9939   0                              FIX_RECV_EXPD   null
     1561     9946    5                        END;
     1562     9947
     1563     9948    4   FIX_RECV_EXPD:  ;
     1564     9949    4                   KN$TCTX.RECV_EXPD = KN$TCTX.RECV_EXPD + 1;

   9949   0 000D0F  ECC7 000C            FIX_RECV_EXPD   LDB,B6   CTX$,AUTO
          0 000D11  8AC6 0029                            INC      41,B6
          0 000D13  8EC6 0028                            CAD      40,B6

     1565     9950    4                   IF KN$TCTX.RECV_EXPD > KN$TCTX.MAXSEQ

   9950   0 000D15  8CC6 0028                            LDI      40,B6
          0 000D17  84C6 000A                            SID      10,B6
          0 000D19  0681 0009                            BCF      s:9954,PREL
          0 000D1B  6981 0003                            BNEZ,R6  s:9951,PREL
          0 000D1D  7901 0005                            BEZ,R7   s:9954,PREL

     1566     9951    4                   THEN KN$TCTX.RECV_EXPD = 0;

   9951   0 000D1F  8746 0028                            CL       40,B6
          0 000D21  8746 0029                            CL       41,B6

     1567     9952    4                   END/*do if open*/;

     1568     9953
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:229  
     1569     9954    3              IF KN$TCTX.STATE = %K_TSTATE_AKWAIT

   9954   0 000D23  E286                                 LLH,R6   ,B6
          0 000D24  6D07                                 CMV,R6   7
          0 000D25  0981 0006                            BNE      s:9960,PREL

     1570     9955    4              THEN DO;

     1571     9956    4                   CALL I$SET_OPEN;

   9956   0 000D27  E3C0 0642                            LNJ,B6   s:0,PREL
          0 000D29       0001                            DC       s:9957,PREL

     1572     9957    4                   GOTO GOT_TPDU_ED;

   9957   0 000D2A  0F81 FF65                            B        s:9909,PREL

     1573     9958    4                   END/*do if akwait*/;
     1574     9959
     1575     9960    3              RETURN;

   9960   0 000D2C  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1576     9961
     1577     9962        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:230  
     1578     9963        /*F* NAME: KNT$RECV - Expedited Data Ack received.
     1579     9964
     1580     9965        TPDU_EAs are only used by Class 4 OSI transport connections.
     1581     9966        */
     1582     9967    3            CASE(%K_TPDU_TYPE_EA);

     1583     9968
     1584     9969    3              IF KN$TCTX.OPTION.EXPEDITED = '0'B

   9969   0 000D2F  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 000D31  82C6 000C                            LB,'0002'X        12,B6
          0 000D33       0002
          0 000D34  0501 0007                            BBT      s:9974,PREL

     1585     9970    4              THEN DO;

     1586     9971    4                   ERRNUM = %K_ERROR_NOEXPD; GOTO LOG_BAD_TPDU;

   9971   0 000D36  D870 00E1                            LDR,R5   225,IMO
          0 000D38  DF47 0006                            STR,R5   ERRNUM,AUTO

   9971   0 000D3A  0F81 F4A9                            B        s:8799,PREL

     1587     9972    4                   END;
     1588     9973
     1589     9974    3              IF KN$TCTX.OPTION.EXTENDED ~= '0'B

   9974   0 000D3C  82C6 000C                            LB,'0004'X        12,B6
   9974   0 000D3E       0004
          0 000D3F  0581 0009                            BBF      s:9976,PREL

     1590     9975    3              THEN YR_TU_NR = B$TPDU_EA_EXT.YR_TU_NR;

   9975   0 000D41  DCC7 000E                            LDB,B5   BUF$,AUTO
          0 000D43  8CC5 0002                            LDI      2,B5
          0 000D45  8D47 0012                            SDI      YR_TU_NR,AUTO
          0 000D47  0F81 0008                            B        s:9978,PREL
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:231  

     1591     9976    3              ELSE YR_TU_NR = B$TPDU_EA.YR_EDTU_NR;

   9976   0 000D49  DCC7 000E                            LDB,B5   BUF$,AUTO
          0 000D4B  F2C5 0002                            LLH,R7   2,B5
          0 000D4D  6C00                                 LDV,R6   0
          0 000D4E  8D47 0012                            SDI      YR_TU_NR,AUTO

     1592     9977
     1593     9978    3              IF KN$TCTX.STATE = %K_TSTATE_OPEN

   9978   0 000D50  D286                                 LLH,R5   ,B6
          0 000D51  5D05                                 CMV,R5   5
          0 000D52  0981 01C3                            BNE      s:10162,PREL

     1594     9979    4              THEN DO;

     1595     9980    4                   CALL I$DO_EACK;

   9980   0 000D54  E3C0 04BB                            LNJ,B6   s:0,PREL
          0 000D56       0001                            DC       s:9981,PREL

     1596     9981    4                   GOTO SEND_DT;

   9981   0 000D57  0F81 014C                            B        s:10110,PREL

     1597     9982    4                   END;
     1598     9983        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:232  
     1599     9984        /*F* NAME: KNT$RECV - Data Ack received.
     1600     9985        */
     1601     9986
     1602     9987    3            CASE(%K_TPDU_TYPE_AK);

     1603     9988
     1604     9989    3              IF KN$TCTX.OPTION.EXTENDED ~= '0'B

   9989   0 000D59  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 000D5B  82C6 000C                            LB,'0004'X        12,B6
          0 000D5D       0004
          0 000D5E  0581 000D                            BBF      s:9995,PREL

     1605     9990    4              THEN DO;

     1606     9991    4                   YR_TU_NR = B$TPDU_AK_EXT.YR_TU_NR;

   9991   0 000D60  DCC7 000E                            LDB,B5   BUF$,AUTO
          0 000D62  8CC5 0002                            LDI      2,B5
          0 000D64  8D47 0012                            SDI      YR_TU_NR,AUTO

     1607     9992    4                   CDT = B$TPDU_AK_EXT.CDT;

   9992   0 000D66  D845 0004                            LDR,R5   4,B5
          0 000D68  DF47 0011                            STR,R5   CDT,AUTO

     1608     9993    4                   END;

   9993   0 000D6A  0F81 000D                            B        s:9999,PREL

     1609     9994    4              ELSE DO;

     1610     9995    4                   YR_TU_NR = B$TPDU_AK.YR_TU_NR;

   9995   0 000D6C  DCC7 000E                            LDB,B5   BUF$,AUTO
          0 000D6E  F2C5 0002                            LLH,R7   2,B5
          0 000D70  6C00                                 LDV,R6   0
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:233  
          0 000D71  8D47 0012                            SDI      YR_TU_NR,AUTO

     1611     9996    4                   CDT = B$TPDU_AK.CDT;

   9996   0 000D73  D805                                 LDR,R5   ,B5
          0 000D74  D570 000F                            AND,R5   15,IMO
          0 000D76  DF47 0011                            STR,R5   CDT,AUTO

     1612     9997    4                   END;

     1613     9998
     1614     9999    3              IF KN$TCTX.SEND_NOTSENT$ ~= ADDR(NIL)

   9999   0 000D78  8DC6 003E                            CMN      62,B6
          0 000D7A  0901 0009                            BE       s:10001,PREL

     1615    10000    3              THEN TPDU_NR = KN$TCTX.SEND_NOTSENT$->FRAG_HDR.SEQ;

  10000   0 000D7C  CCC6 003E                            LDB,B4   62,B6
          0 000D7E  8CC4 0002                            LDI      2,B4
          0 000D80  8D47 0014                            SDI      TPDU_NR,AUTO
          0 000D82  0F81 0005                            B        s:10003,PREL

     1616    10001    3              ELSE TPDU_NR = KN$TCTX.SEND_NEXT;

  10001   0 000D84  8CC6 0036                            LDI      54,B6
          0 000D86  8D47 0014                            SDI      TPDU_NR,AUTO

     1617    10002
     1618    10003    3              DUPLICATE_AK = 0;

  10003   0 000D88  8747 0022                            CL       DUPLICATE_AK,AUTO

     1619    10004
     1620    10005    3              IF KN$TCTX.CLASS = 2

  10005   0 000D8A  C2C6 0005                            LLH,R4   5,B6
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:234  
          0 000D8C  4D02                                 CMV,R4   2
          0 000D8D  0901 00C5                            BE       s:10075,PREL

     1621    10006    3              THEN GOTO ACK_CLASS2;
     1622    10007
     1623    10008    3              IF KN$TCTX.SEND_LWE > TPDU_NR

  10008   0 000D8F  8CC6 0032                            LDI      50,B6
          0 000D91  84C7 0014                            SID      TPDU_NR,AUTO
          0 000D93  0681 0017                            BCF      s:10015,PREL
          0 000D95  6981 0003                            BNEZ,R6  s:10010,PREL
          0 000D97  7901 0013                            BEZ,R7   s:10015,PREL

     1624    10009    4              THEN DO;

     1625    10010    4                   IF ( YR_TU_NR > TPDU_NR ) AND

  10010   0 000D99  8CC7 0012                            LDI      YR_TU_NR,AUTO
          0 000D9B  84C7 0014                            SID      TPDU_NR,AUTO
          0 000D9D  0681 000B                            BCF      s:10013,PREL
          0 000D9F  6981 0003                            BNEZ,R6  s:10010+10,PREL
          0 000DA1  7901 0007                            BEZ,R7   s:10013,PREL
          0 000DA3  8CC7 0012                            LDI      YR_TU_NR,AUTO
          0 000DA5  84C6 0032                            SID      50,B6
          0 000DA7  0681 0013                            BCF      s:10017,PREL

     1626    10011    4                     (YR_TU_NR < KN$TCTX.SEND_LWE )
     1627    10012    4                   THEN GOTO BAD_AK;
     1628    10013    4                   END;

  10013   0 000DA9  0F81 001C                            B        s:10028,PREL

     1629    10014    4              ELSE DO;

     1630    10015    4                   IF ( YR_TU_NR > TPDU_NR ) OR

  10015   0 000DAB  8CC7 0012                            LDI      YR_TU_NR,AUTO
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:235  
          0 000DAD  84C7 0014                            SID      TPDU_NR,AUTO
          0 000DAF  6981 0003                            BNEZ,R6  s:10015+8,PREL
          0 000DB1  7901 0003                            BEZ,R7   s:10015+10,PREL
          0 000DB3  0601 0007                            BCT      s:10017,PREL
          0 000DB5  8CC7 0012                            LDI      YR_TU_NR,AUTO
          0 000DB7  84C6 0032                            SID      50,B6
          0 000DB9  0601 000C                            BCT      s:10028,PREL

     1631    10016    4                     ( YR_TU_NR < KN$TCTX.SEND_LWE )
     1632    10017    5                   THEN DO;

  10016   0                              BAD_AK          null
     1633    10018    5   BAD_AK:              ;
     1634    10019    5                        KN$TCTX.RERR.AK_NWINDOW = KN$TCTX.RERR.AK_NWINDOW +1;

  10019   0 000DBB  8AC6 0019            BAD_AK          INC      25,B6

     1635    10020    5                        ERRNUM = %K_ERROR_AK_NWINDOW;

  10020   0 000DBD  E870 00F0                            LDR,R6   240,IMO
          0 000DBF  EF47 0006                            STR,R6   ERRNUM,AUTO

     1636    10021
     1637    10022    5                        IF KN$TCTX.CLASS = 4

  10022   0 000DC1  4D04                                 CMV,R4   4
          0 000DC2  0901 F429                            BE       s:8806,PREL

     1638    10023    5                        THEN GOTO DISCARD_TPDU;
     1639    10024    5                        ELSE GOTO SET_PROT_ERR;

  10024   0 000DC4  0F81 FCD4                            B        s:9723,PREL

     1640    10025    5                        END;
     1641    10026    4                   END;
     1642    10027
     1643    10028    3              IF (YR_TU_NR = KN$TCTX.SEND_LWE) AND
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:236  

  10028   0 000DC6  8CC7 0012                            LDI      YR_TU_NR,AUTO
          0 000DC8  84C6 0032                            SID      50,B6
          0 000DCA  6981 0011                            BNEZ,R6  s:10039,PREL
          0 000DCC  7981 000F                            BNEZ,R7  s:10039,PREL
          0 000DCE  E847 0021                            LDR,R6   SUBSEQ,AUTO
          0 000DD0  E946 004C                            CMR,R6   76,B6
          0 000DD2  0281 0009                            BGE      s:10039,PREL

     1644    10029    3                (SUBSEQ < KN$TCTX.SEND_SUBSEQ)
     1645    10030    4              THEN DO;

     1646    10031    4                   KN$TCTX.RERR.AK_SUBSEQ = KN$TCTX.RERR.AK_SUBSEQ +1;

  10031   0 000DD4  8AC6 001A                            INC      26,B6

     1647    10032    4                   ERRNUM = %K_ERROR_AK_SUBSEQU; GOTO DISCARD_TPDU;

  10032   0 000DD6  A870 00EF                            LDR,R2   239,IMO
          0 000DD8  AF47 0006                            STR,R2   ERRNUM,AUTO

  10032   0 000DDA  0F81 F411                            B        s:8806,PREL

     1648    10033    4                   END;
     1649    10034
     1650    10035        /* See if we should respond with a TPDU_AK with the Flow Control
     1651    10036           Confirmation parameter.
     1652    10037        */
     1653    10038
     1654    10039    3              IF YR_TU_NR = KN$TCTX.SEND_LWE

  10039   0 000DDC  8CC7 0012                            LDI      YR_TU_NR,AUTO
          0 000DDE  84C6 0032                            SID      50,B6
          0 000DE0  6981 001B                            BNEZ,R6  s:10048,PREL
          0 000DE2  7981 0019                            BNEZ,R7  s:10048,PREL
          0 000DE4  F847 0011                            LDR,R7   CDT,AUTO
          0 000DE6  6C00                                 LDV,R6   0
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:237  
          0 000DE7  8447 0012                            AID      YR_TU_NR,AUTO
          0 000DE9  84C6 0034                            SID      52,B6
          0 000DEB  6981 0010                            BNEZ,R6  s:10048,PREL
          0 000DED  7981 000E                            BNEZ,R7  s:10048,PREL
          0 000DEF  E847 0021                            LDR,R6   SUBSEQ,AUTO
          0 000DF1  E946 004C                            CMR,R6   76,B6
          0 000DF3  0981 0008                            BNE      s:10048,PREL

     1655    10040    3                AND YR_TU_NR + CDT_UBIN = KN$TCTX.SEND_UWE
     1656    10041    3                AND SUBSEQ = KN$TCTX.SEND_SUBSEQ
     1657    10042    4              THEN DO;

     1658    10043    4                   DUPLICATE_AK = 1;       /* duplicate tpdu_ak*/

  10043   0 000DF5  1C01                                 LDV,R1   1
          0 000DF6  9F47 0022                            STR,R1   DUPLICATE_AK,AUTO

     1659    10044    4                   IF GOT_FCC = 0          /* not containing fcc*/

  10044   0 000DF8  E847 0023                            LDR,R6   GOT_FCC,AUTO
          0 000DFA  6901 0027                            BEZ,R6   s:10058,PREL

     1660    10045    4                   THEN GOTO SEND_FCC;
     1661    10046    4                   END;

     1662    10047
     1663    10048    3              IF YR_TU_NR + CDT_UBIN > KN$TCTX.SEND_UWE /* increases UWE*/

  10048   0 000DFC  F847 0011                            LDR,R7   CDT,AUTO
          0 000DFE  6C00                                 LDV,R6   0
          0 000DFF  8447 0012                            AID      YR_TU_NR,AUTO
          0 000E01  84C6 0034                            SID      52,B6
          0 000E03  0681 0049                            BCF      s:10072,PREL
          0 000E05  6981 0003                            BNEZ,R6  s:10048+13,PREL
          0 000E07  7901 0045                            BEZ,R7   s:10072,PREL
          0 000E09  8CC7 0012                            LDI      YR_TU_NR,AUTO
          0 000E0B  84C6 0032                            SID      50,B6
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:238  
          0 000E0D  6981 003F                            BNEZ,R6  s:10072,PREL
          0 000E0F  7981 003D                            BNEZ,R7  s:10072,PREL

     1664    10049    3                AND YR_TU_NR = KN$TCTX.SEND_LWE /* but not LWE*/
     1665    10050    4              THEN DO;

     1666    10051    4                   IF KN$TCTX.SEND_LWE = KN$TCTX.SEND_UWE

  10051   0 000E11  8CC6 0032                            LDI      50,B6
          0 000E13  84C6 0034                            SID      52,B6
          0 000E15  6981 0003                            BNEZ,R6  s:10055,PREL
          0 000E17  7901 000A                            BEZ,R7   s:10058,PREL

     1667    10052                                                /* and UWE was = LWE*/
     1668    10053    4                   THEN GOTO SEND_FCC;
     1669    10054
     1670    10055    4                   IF YR_TU_NR + CDT_UBIN < KN$TCTX.SEND_UWE

  10055   0 000E19  F847 0011                            LDR,R7   CDT,AUTO
          0 000E1B  6C00                                 LDV,R6   0
          0 000E1C  8447 0012                            AID      YR_TU_NR,AUTO
          0 000E1E  84C6 0034                            SID      52,B6
          0 000E20  0601 002C                            BCT      s:10072,PREL

     1671    10056                                                /* following credit reduction*/
     1672    10057                                                          /*N* probably more needed here */
     1673    10058    5                   THEN DO;

     1674    10059    5   SEND_FCC:
     1675    10060    5                        KN$NETPARM.FPT$ = BUF$; /*overlay the tpdu copy in auto  */

  10060   0 000E22  CCC7 0004            SEND_FCC        LDB,B4   @KN$NETPARM,AUTO
          0 000E24  DFC4 0019                            STB,B5   25,B4

     1676    10061    5                        B$TPARM_FCC.CODE = %K_TPARM_FCC;

  10061   0 000E26  E870 008C                            LDR,R6   140,IMO
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:239  
          0 000E28  E785                                 STH,R6   ,B5

     1677    10062    5                        B$TPARM_FCC.LEN = 8;

  10062   0 000E29  4C08                                 LDV,R4   8
          0 000E2A  ECC7 000E                            LDB,B6   BUF$,AUTO
          0 000E2C  CA86                                 SRM,R4,'00FF'X    ,B6
          0 000E2D       00FF

     1678    10063    5                        B$TPARM_FCC.FCC.LWE = YR_TU_NR;

  10063   0 000E2E  8CC7 0012                            LDI      YR_TU_NR,AUTO
          0 000E30  ECC7 000E                            LDB,B6   BUF$,AUTO
          0 000E32  8D46 0001                            SDI      1,B6

     1679    10064    5                        B$TPARM_FCC.FCC.YR_SUBSEQ = SUBSEQ;

  10064   0 000E34  ECC7 000E                            LDB,B6   BUF$,AUTO
          0 000E36  A847 0021                            LDR,R2   SUBSEQ,AUTO
          0 000E38  AF46 0003                            STR,R2   3,B6

     1680    10065    5                        B$TPARM_FCC.FCC.CDT = CDT;

  10065   0 000E3A  ECC7 000E                            LDB,B6   BUF$,AUTO
          0 000E3C  DF46 0004                            STR,R5   4,B6

     1681    10066
     1682    10067    5                        CALL KNT$SEND_AK_FCC(KN$NETPARM);

  10067   0 000E3E  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 000E40  CBF0 0100                            LAB,B4   256,IMO
          0 000E42  E380 0000 0000  xent                 LNJ,B6   KNT$SEND_AK_FCC
          0 000E45       0001                            DC       s:10068,PREL

     1683    10068    5                        KN$NETPARM.FPT$ = ADDR(NIL);

  10068   0 000E46  EB80 0000 0000                       LAB,B6   0
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:240  
          0 000E49  DCC7 0004                            LDB,B5   @KN$NETPARM,AUTO
          0 000E4B  EFC5 0019                            STB,B6   25,B5

     1684    10069    5                        END;

     1685    10070    4                   END;

     1686    10071
     1687    10072    3              KN$TCTX.SEND_SUBSEQ = SUBSEQ;

  10072   0 000E4D  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 000E4F  E847 0021                            LDR,R6   SUBSEQ,AUTO
          0 000E51  EF46 004C                            STR,R6   76,B6

     1688    10073
     1689    10074    3   ACK_CLASS2:
     1690    10075    3              IF KN$TCTX.STATE = %K_TSTATE_OPEN

  10075   0 000E53  E286                 ACK_CLASS2      LLH,R6   ,B6
          0 000E54  6D05                                 CMV,R6   5
          0 000E55  0981 0007                            BNE      s:10083,PREL

     1691    10076    4              THEN DO;

     1692    10077    4                   IF DUPLICATE_AK ~= 0

  10077   0 000E57  D847 0022                            LDR,R5   DUPLICATE_AK,AUTO
          0 000E59  5981 005A                            BNEZ,R5  s:10114,PREL

     1693    10078    4                   THEN GOTO CONT_ACK;
     1694    10079
     1695    10080    4                   GOTO ACK_DT;

  10080   0 000E5B  0F81 001F                            B        s:10094,PREL

     1696    10081    4                   END;
     1697    10082
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:241  
     1698    10083    3              IF KN$TCTX.STATE = %K_TSTATE_AKWAIT

  10083   0 000E5D  6D07                                 CMV,R6   7
          0 000E5E  0981 00B7                            BNE      s:10162,PREL

     1699    10084    4              THEN DO;

     1700    10085    4                   CALL I$SET_OPEN;

  10085   0 000E60  E3C0 0509                            LNJ,B6   s:0,PREL
          0 000E62       0001                            DC       s:10086,PREL

     1701    10086    4                   CALL I$CANCEL_RETRAN;

  10086   0 000E63  E3C0 0755                            LNJ,B6   s:0,PREL
          0 000E65       0001                            DC       s:10087,PREL

     1702    10087    4                   CALL I$SET_WINDOW;

  10087   0 000E66  E3C0 072A                            LNJ,B6   s:0,PREL
          0 000E68       0001                            DC       s:10089,PREL

     1703    10088
     1704    10089    4                   IF KN$TCTX.OPTION.OSI = '1'B

  10089   0 000E69  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 000E6B  82C6 000C                            LB,'0010'X        12,B6
          0 000E6D       0010
          0 000E6E  0581 000C                            BBF      s:10094,PREL

     1705    10090    5                   THEN DO;

     1706    10091    5                        HOST_TPDUC$ = TPDU$;

  10091   0 000E70  8CC7 000A                            LDI      TPDU$,AUTO
          0 000E72  8D47 0026                            SDI      HOST_TPDU$,AUTO

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:242  
     1707    10092    5                        KN$NETPARM.MSGSZ = 0;

  10092   0 000E74  DCC7 0004                            LDB,B5   @KN$NETPARM,AUTO
          0 000E76  8745 0004                            CL       4,B5

     1708    10093    5                        CALL I$FORWARD_2HOST ALTRET(LEAVE_ON_Q);

  10093   0 000E78  E3C0 01EC                            LNJ,B6   s:0,PREL
          0 000E7A       FE8D                            DC       s:9941,PREL

     1709    10094    5                        END;

     1710    10095
     1711    10096    4   ACK_DT:
     1712    10097    4                   CALL I$DO_ACK;

  10097   0 000E7B  E3C0 024D            ACK_DT          LNJ,B6   s:0,PREL
          0 000E7D       0001                            DC       s:10099,PREL

     1713    10098
     1714    10099    4                   IF CDT = 0 THEN GOTO CONT_ACK;

  10099   0 000E7E  E847 0011                            LDR,R6   CDT,AUTO
          0 000E80  6901 0033                            BEZ,R6   s:10114,PREL

     1715    10100
     1716    10101    4                   IF KN$TCTX.SEND_UWE < KN$TCTX.SEND_LWE

  10101   0 000E82  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 000E84  8CC6 0034                            LDI      52,B6
          0 000E86  84C6 0032                            SID      50,B6
          0 000E88  0601 0009                            BCT      s:10103,PREL

     1717    10102    4                   THEN YR_TU_NR = KN$TCTX.SEND_LWE + KN$TCTX.SEND_UWE;

  10102   0 000E8A  8CC6 0032                            LDI      50,B6
          0 000E8C  8446 0034                            AID      52,B6
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:243  
          0 000E8E  8D47 0012                            SDI      YR_TU_NR,AUTO
          0 000E90  0F81 0005                            B        s:10105,PREL

     1718    10103    4                   ELSE YR_TU_NR = KN$TCTX.SEND_UWE;

  10103   0 000E92  8CC6 0034                            LDI      52,B6
          0 000E94  8D47 0012                            SDI      YR_TU_NR,AUTO

     1719    10104
     1720    10105    4                   IF YR_TU_NR < TPDU_NR

  10105   0 000E96  84C7 0014                            SID      TPDU_NR,AUTO
          0 000E98  0601 000B                            BCT      s:10110,PREL

     1721    10106    5                   THEN DO;

     1722    10107    5                        CALL KNT$RETRANS_LOST(KN$NETPARM);

  10107   0 000E9A  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 000E9C  CBF0 0100                            LAB,B4   256,IMO
          0 000E9E  E380 0000 0000  xent                 LNJ,B6   KNT$RETRANS_LOST
          0 000EA1       0001                            DC       s:10108,PREL

     1723    10108    5                        END;

  10108   0 000EA2  0F81 0011                            B        s:10114,PREL

     1724    10109
     1725    10110    5                   ELSE DO;

  10107   0                              SEND_DT         null
     1726    10111    5   SEND_DT:             ;
     1727    10112    5                        CALL KNT$SEND_ED(KN$NETPARM);

  10112   0 000EA4  BBC7 0004            SEND_DT         LAB,B3   @KN$NETPARM,AUTO
          0 000EA6  CBF0 0100                            LAB,B4   256,IMO
          0 000EA8  E380 0000 0000  xent                 LNJ,B6   KNT$SEND_ED
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:244  
          0 000EAB       0001                            DC       s:10113,PREL

     1728    10113    5                        CALL KNT$SEND_DT(KN$NETPARM);

  10113   0 000EAC  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 000EAE  CBF0 0100                            LAB,B4   256,IMO
          0 000EB0  E380 0000 0000  xent                 LNJ,B6   KNT$SEND_DT
          0 000EB3       0001                            DC       s:10114,PREL

     1729    10114    5                        END;

     1730    10115
     1731    10116    4   CONT_ACK:
     1732    10117    4                   IF KN$TCTX.CLASS=4 THEN CALL I$SET_INACTIVITY;

  10117   0 000EB4  ECC7 000C            CONT_ACK        LDB,B6   CTX$,AUTO
          0 000EB6  E2C6 0005                            LLH,R6   5,B6
          0 000EB8  6D04                                 CMV,R6   4
          0 000EB9  0981 0004                            BNE      s:10118,PREL

  10117   0 000EBB  E3C0 06E9                            LNJ,B6   s:0,PREL
          0 000EBD       0001                            DC       s:10118,PREL

     1733    10118    4                   IF KN$TCTX.LNK$ ~= ADDR(NIL)

  10118   0 000EBE  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 000EC0  8DC6 0006                            CMN      6,B6
          0 000EC2  0901 0053                            BE       s:10162,PREL

     1734    10119    4                   THEN CALL KNT$UNQ_FLOW(KN$TCTX.LNK$);

  10119   0 000EC4  DBC6 0006                            LAB,B5   6,B6
          0 000EC6  DFC7 003E                            STB,B5   BUFS_RLSD+3,AUTO
          0 000EC8  BBC7 003E                            LAB,B3   BUFS_RLSD+3,AUTO
          0 000ECA  CBF0 0100                            LAB,B4   256,IMO
          0 000ECC  E380 0000 0000  xent                 LNJ,B6   KNT$UNQ_FLOW
          0 000ECF       0001                            DC       s:10120,PREL
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:245  

     1735    10120    4                   END;

  10120   0 000ED0  0F81 0045                            B        s:10162,PREL

     1736    10121
     1737    10122        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:246  
     1738    10123        /*F* NAME: KNT$RECV - Error TPDU received.
     1739    10124        */
     1740    10125    3            CASE(%K_TPDU_TYPE_ER);

     1741    10126
     1742    10127    3              IF KN$TCTX.STATE = %K_TSTATE_WBCL

  10127   0 000ED2  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 000ED4  D286                                 LLH,R5   ,B6
          0 000ED5  5D04                                 CMV,R5   4
          0 000ED6  0901 0004                            BE       s:10130,PREL
          0 000ED8  5D08                                 CMV,R5   8
          0 000ED9  0981 0004                            BNE      s:10133,PREL

     1743    10128    3                OR KN$TCTX.STATE = %K_TSTATE_CLOSING
     1744    10129    4              THEN DO;

     1745    10130    4                   CALL I$SET_REFWAIT;

  10130   0 000EDB  E3C0 0480                            LNJ,B6   s:0,PREL
          0 000EDD       0001                            DC       s:10133,PREL

     1746    10131    4                   END;

     1747    10132
     1748    10133    3              IF KN$TCTX.STATE = %K_TSTATE_AKWAIT

  10133   0 000EDE  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 000EE0  E286                                 LLH,R6   ,B6
          0 000EE1  6D07                                 CMV,R6   7
          0 000EE2  0901 000A                            BE       s:10138,PREL

     1749    10134    3              THEN GOTO INIT_CLOSING;
     1750    10135
     1751    10136    3              IF KN$TCTX.STATE = %K_TSTATE_OPEN

  10136   0 000EE4  6D05                                 CMV,R6   5
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:247  
          0 000EE5  0981 001C                            BNE      s:10148,PREL

     1752    10137    4              THEN DO;

     1753    10138    4                   CALL I$CANCEL_WINDOW;

  10138   0 000EE7  E3C0 06E5                            LNJ,B6   s:0,PREL
          0 000EE9       0001                            DC       s:10139,PREL

     1754    10139    4                   CALL I$CANCEL_INACTIVITY;

  10139   0 000EEA  E3C0 06F6                            LNJ,B6   s:0,PREL
          0 000EEC       0001                            DC       s:10138,PREL

  10138   0                              INIT_CLOSING    null
     1755    10140    4   INIT_CLOSING:   ;
     1756    10141    4                   CALL I$SET_RETRAN;

  10141   0 000EED  E3C0 068F            INIT_CLOSING    LNJ,B6   s:0,PREL
          0 000EEF       0001                            DC       s:10142,PREL

     1757    10142    4                   KN$TCTX.SEND_RETRY_COUNT = 1;

  10142   0 000EF0  6C01                                 LDV,R6   1
          0 000EF1  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 000EF3  E7C6 004D                            STH,R6   77,B6

     1758    10143    4                   KN$TCTX.STATE = %K_TSTATE_CLOSING;

  10143   0 000EF5  5C08                                 LDV,R5   8
          0 000EF6  D786                                 STH,R5   ,B6

     1759    10144    4                   CALL KNT$SEND_DR(KN$NETPARM);

  10144   0 000EF7  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 000EF9  CBF0 0100                            LAB,B4   256,IMO
          0 000EFB  E380 0000 0000  xent                 LNJ,B6   KNT$SEND_DR
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:248  
          0 000EFE       0001                            DC       s:10145,PREL

     1760    10145    4                   CALL I$REPORT_TDISCON;

  10145   0 000EFF  E3C0 0353                            LNJ,B6   s:0,PREL
          0 000F01       0001                            DC       s:10148,PREL

     1761    10146    4                   END;

     1762    10147
     1763    10148    3              IF KN$TCTX.STATE = %K_TSTATE_WFCC

  10148   0 000F02  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 000F04  E286                                 LLH,R6   ,B6
          0 000F05  6D03                                 CMV,R6   3
          0 000F06  0981 000F                            BNE      s:10162,PREL

     1764    10149    4              THEN DO;

     1765    10150    4                   CALL I$SET_REFWAIT;

  10150   0 000F08  E3C0 0453                            LNJ,B6   s:0,PREL
          0 000F0A       0001                            DC       s:10151,PREL

     1766    10151    4                   CALL I$REPORT_TDISCON;

  10151   0 000F0B  E3C0 0347                            LNJ,B6   s:0,PREL
          0 000F0D       0001                            DC       s:10152,PREL

     1767    10152    4                   END;

  10152   0 000F0E  0F81 0007                            B        s:10162,PREL

     1768    10153
     1769    10154        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:249  
     1770    10155
     1771    10156    3            CASE(ELSE);

     1772    10157
     1773    10158    3              ERRNUM = %K_ERROR_TPDU_TYPE; GOTO LOG_BAD_TPDU;

  10158   0 000F10  D870 00E6                            LDR,R5   230,IMO
          0 000F12  DF47 0006                            STR,R5   ERRNUM,AUTO

  10158   0 000F14  0F81 F2CF                            B        s:8799,PREL

     1774    10159
     1775    10160    3              END/*do case(type)*/;

     1776    10161
     1777    10162    2           END/*do while*/;

  10162   0 000F16  E847 0010                            LDR,R6   NEXT_SZ,AUTO
          0 000F18  6D02                                 CMV,R6   2
          0 000F19  0A01 F229                            BAG      s:8742,PREL

     1778    10163
     1779    10164    1      RETURN;

  10164   0 000F1B  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1780    10165
     1781    10166        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:250  
     1782    10167        /*I* NAME: Internal Routines
     1783    10168
     1784    10169        */
     1785    10170
     1786    10171        /*I* NAME: I$LOCATE_CP6
     1787    10172
     1788    10173             PURPOSE: to find duplicate CP6 connect requests.
     1789    10174        */
     1790    10175
     1791    10176    1   I$LOCATE_CP6: PROC ALTRET;

  10176   0 000F1E  EFC7 0034            I$LOCATE_CP6    STB,B6   TPDU_BUF+8,AUTO

     1792    10177    3      DO TCTX# = 1 TO KN_TCTX_MAX#;

  10177   0 000F20  6C01                                 LDV,R6   1
          0 000F21  EF47 001E                            STR,R6   TCTX#,AUTO
          0 000F23  0F81 0069                            B        s:10208+2,PREL

     1793    10178    3           IF KN$TCTX$(TCTX#) ~= ADDR(NIL)

  10178   0 000F25  EC80 0000 0000  xsym                 LDB,B6   KN_TCTX$$
          0 000F28  B847 001E                            LDR,R3   TCTX#,AUTO
          0 000F2A  8DB6                                 CMN      ,B6,R3
          0 000F2B  0901 005F                            BE       s:10208,PREL

     1794    10179    4           THEN DO;

     1795    10180    4                CTX$ = KN$TCTX$(TCTX#);

  10180   0 000F2D  DCB6                                 LDB,B5   ,B6,R3
          0 000F2E  DFC7 000C                            STB,B5   CTX$,AUTO

     1796    10181
     1797    10182    4                IF KN$TCTX.STATE = %K_TSTATE_WFCC

  10182   0 000F30  E285                                 LLH,R6   ,B5
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:251  
          0 000F31  6D03                                 CMV,R6   3
          0 000F32  0901 0017                            BE       s:10188,PREL
          0 000F34  6D0A                                 CMV,R6   10
          0 000F35  0901 0014                            BE       s:10188,PREL
          0 000F37  6D07                                 CMV,R6   7
          0 000F38  0901 0011                            BE       s:10188,PREL
          0 000F3A  6D05                                 CMV,R6   5
          0 000F3B  0981 0006                            BNE      s:10182+18,PREL
          0 000F3D  82C5 000D                            LB,'0001'X        13,B5
          0 000F3F       0001
          0 000F40  0501 0009                            BBT      s:10188,PREL
          0 000F42  6D06                                 CMV,R6   6
          0 000F43  0981 0047                            BNE      s:10208,PREL
          0 000F45  82C5 000D                            LB,'0001'X        13,B5
          0 000F47       0001
          0 000F48  0501 0042                            BBT      s:10208,PREL

     1798    10183    4                  OR KN$TCTX.STATE = %K_TSTATE_WFCC_R
     1799    10184    4                  OR KN$TCTX.STATE = %K_TSTATE_AKWAIT
     1800    10185    4                  OR (KN$TCTX.STATE=%K_TSTATE_OPEN AND KN$TCTX.PRIMARY)
     1801    10186    4                  OR (KN$TCTX.STATE=%K_TSTATE_WFTRESP AND KN$TCTX.PRIMARY='0'B)
     1802    10187    5                THEN DO;

     1803    10188    5                     IF KN$TCTX.NODE = B$NHDR.SOURCE_NODE -1

  10188   0 000F4A  CCC7 0004                            LDB,B4   @KN$NETPARM,AUTO
          0 000F4C  BCC4 000E                            LDB,B3   14,B4
          0 000F4E  D805                                 LDR,R5   ,B5
          0 000F4F  D570 00FF                            AND,R5   255,IMO
          0 000F51  C843 0001                            LDR,R4   1,B3
          0 000F53  C570 00FF                            AND,R4   255,IMO
          0 000F55  4EFF                                 ADV,R4   -1
          0 000F56  D954                                 CMR,R5   R4
          0 000F57  0981 0033                            BNE      s:10208,PREL

     1804    10189    6                     THEN DO;

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:252  
     1805    10190    6                          IF ENTRY_SWITCH = %RECV_4HOST

  10190   0 000F59  A847 0029                            LDR,R2   ENTRY_SWITCH,AUTO
          0 000F5B  2D01                                 CMV,R2   1
          0 000F5C  0981 0006                            BNE      s:10194,PREL

     1806    10191    6                          THEN IF KN$TCTX.PRIMARY

  10191   0 000F5E  82C5 000D                            LB,'0001'X        13,B5
  10191   0 000F60       0001
          0 000F61  0501 0029                            BBT      s:10208,PREL

     1807    10192    6                               THEN GOTO NOT_SAME_TCTX;
     1808    10193
     1809    10194    6                          IF KN$TCTX.STATE = %K_TSTATE_OPEN /*duplicate primary*/

  10194   0 000F63  6D05                                 CMV,R6   5
          0 000F64  0901 0004                            BE       s:10197,PREL
          0 000F66  6D06                                 CMV,R6   6
          0 000F67  0981 0015                            BNE      s:10203,PREL

     1810    10195    6                            OR KN$TCTX.STATE = %K_TSTATE_WFTRESP
             10195                                     /*duplicate intermediate*/
     1811    10196    7                          THEN DO;

     1812    10197    7                               CLOCK_ID.TCTX = TCTX#;

  10197   0 000F69  B7C7 002A                            STH,R3   TEMP,AUTO

     1813    10198    7                               CLOCK_ID.TMR = %K_TTIMER_PSEUDO;

  10198   0 000F6B  6C04                                 LDV,R6   4
          0 000F6C  EAC7 002A                            SRM,R6,'00FF'X    TEMP,AUTO
          0 000F6E       00FF

     1814    10199    7                               CALL KNT$TTIMER(CLOCK_ID);
             10199                                        /*to begin disconnect process*/
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:253  

  10199   0 000F6F  BBC7 002A                            LAB,B3   TEMP,AUTO
          0 000F71  BFC7 003E                            STB,B3   BUFS_RLSD+3,AUTO
          0 000F73  BBC7 003E                            LAB,B3   BUFS_RLSD+3,AUTO
          0 000F75  CBF0 0100                            LAB,B4   256,IMO
          0 000F77  E380 0000 0000  xent                 LNJ,B6   KNT$TTIMER
          0 000F7A       0001                            DC       s:10200,PREL

     1815    10200    7                               GOTO NOT_SAME_TCTX;

  10200   0 000F7B  0F81 000F                            B        s:10208,PREL

     1816    10201    7                               END;
     1817    10202
     1818    10203    6                          KN$TCTX.STATE = %K_TSTATE_WFCC_R;

  10203   0 000F7D  1C0A                                 LDV,R1   10
          0 000F7E  9785                                 STH,R1   ,B5

     1819    10204    6                          CALL KNT$RLS_CHAIN(KN$TCTX);

  10204   0 000F7F  BBC7 000C                            LAB,B3   CTX$,AUTO
          0 000F81  CBF0 0100                            LAB,B4   256,IMO
          0 000F83  E380 0000 0000  xent                 LNJ,B6   KNT$RLS_CHAIN
          0 000F86       0001                            DC       s:10205,PREL

     1820    10205    6                          RETURN/*match found*/;

  10205   0 000F87  ECC7 0034                            LDB,B6   TPDU_BUF+8,AUTO
          0 000F89  C3C6 0001                            LNJ,B4   1,B6

     1821    10206    6                          END/*do if match on node*/;
     1822    10207    5   NOT_SAME_TCTX:
     1823    10208    5                     END/*do if active state*/;

  10208   0                              NOT_SAME_TCTX   null
     1824    10209    4                END/*do if ctx$ not nil*/;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:254  

     1825    10210    3           END/*do while*/;

  10210   0 000F8B  8AC7 001E            NOT_SAME_TCTX   INC      TCTX#,AUTO
          0 000F8D  E847 001E                            LDR,R6   TCTX#,AUTO
          0 000F8F  E900 0000 0000  xsym                 CMR,R6   KN_TCTX_MAX#
          0 000F92  0381 FF92                            BLE      s:10178,PREL

     1826    10211
     1827    10212    2      ALTRETURN/*no match round*/;

  10212   0 000F94  ECC7 0034                            LDB,B6   TPDU_BUF+8,AUTO
          0 000F96  B806                                 LDR,R3   ,B6
          0 000F97  C3B6                                 LNJ,B4   ,B6,R3

     1828    10213    2   END I$LOCATE_CP6;
     1829    10214
     1830    10215
     1831    10216        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:255  
     1832    10217        /*I* NAME: I$LOCATE_OSI
     1833    10218
     1834    10219             PURPOSE: to find duplicate OSI connect requests.
     1835    10220        */
     1836    10221
     1837    10222    1   I$LOCATE_OSI: PROC ALTRET;

  10222   0 000F98  EFC7 0034            I$LOCATE_OSI    STB,B6   TPDU_BUF+8,AUTO

     1838    10223    3      DO TCTX# = 1 TO KN_TCTX_MAX#;

  10223   0 000F9A  6C01                                 LDV,R6   1
          0 000F9B  EF47 001E                            STR,R6   TCTX#,AUTO
          0 000F9D  0F81 0063                            B        s:10256+2,PREL

     1839    10224    3           IF KN$TCTX$(TCTX#) ~= ADDR(NIL)

  10224   0 000F9F  EC80 0000 0000  xsym                 LDB,B6   KN_TCTX$$
          0 000FA2  B847 001E                            LDR,R3   TCTX#,AUTO
          0 000FA4  8DB6                                 CMN      ,B6,R3
          0 000FA5  0901 0059                            BE       s:10256,PREL

     1840    10225    4           THEN DO;

     1841    10226    4                CTX$ = KN$TCTX$(TCTX#);

  10226   0 000FA7  DCB6                                 LDB,B5   ,B6,R3
          0 000FA8  DFC7 000C                            STB,B5   CTX$,AUTO

     1842    10227
     1843    10228    4                IF KN$TCTX.STATE > %K_TSTATE_CLOSED

  10228   0 000FAA  E285                                 LLH,R6   ,B5
          0 000FAB  6D02                                 CMV,R6   2
          0 000FAC  0381 0052                            BLE      s:10256,PREL
          0 000FAE  6D08                                 CMV,R6   8
          0 000FAF  0281 004F                            BGE      s:10256,PREL
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:256  

     1844    10229    4                  AND KN$TCTX.STATE < %K_TSTATE_CLOSING
     1845    10230    5                THEN DO;

     1846    10231                                                /* check duplicate NSAP               */
     1847    10232
     1848    10233    5                     IF KN$NETPARM.DST_ADDR$->NSAP.LEN ~=

  10233   0 000FB1  CCC7 0004                            LDB,B4   @KN$NETPARM,AUTO
          0 000FB3  BCC4 001F                            LDB,B3   31,B4
          0 000FB5  ACB6                                 LDB,B2   ,B6,R3
          0 000FB6  D283                                 LLH,R5   ,B3
          0 000FB7  C2C2 00A5                            LLH,R4   165,B2
          0 000FB9  D954                                 CMR,R5   R4
          0 000FBA  0981 0044                            BNE      s:10256,PREL

     1849    10234    5                       KN$TCTX$(TCTX#)->KN$TCTX.DST_NSAP.LEN
     1850    10235    5                     THEN GOTO NOT_SAME_NSAP;
     1851    10236
     1852    10237    5                     TEMP = KN$NETPARM.DST_ADDR$->NSAP.LEN;

  10237   0 000FBC  DF47 002A                            STR,R5   TEMP,AUTO

     1853    10238    5                     IF KN$NETPARM.DST_ADDR$->CHRBSD ~=

  10238   0 000FBE  BCC4 001F                            LDB,B3   31,B4
          0 000FC0  ACB6                                 LDB,B2   ,B6,R3
          0 000FC1  AFC7 003E                            STB,B2   BUFS_RLSD+3,AUTO
          0 000FC3  BFC7 0040                            STB,B3   BUFS_RLSD+5,AUTO
          0 000FC5  AB83                                 LAB,B2   ,B3
          0 000FC6  2C00                                 LDV,R2   0
          0 000FC7  E855                                 LDR,R6   R5
          0 000FC8  BCC7 003E                            LDB,B3   BUFS_RLSD+3,AUTO
          0 000FCA  BBC3 00A5                            LAB,B3   165,B3
          0 000FCC  3C00                                 LDV,R3   0
          0 000FCD  F855                                 LDR,R7   R5
          0 000FCE  D380 0000 0000  xent                 LNJ,B5   X6C_ACM
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:257  
          0 000FD1  5301 002D                            CBNE     s:10256,PREL

  10238   0                              CHECK_DST_REF   null
     1854    10239    5                       ADDR(KN$TCTX$(TCTX#)->KN$TCTX.DST_NSAP)->CHRBSD
     1855    10240    5                     THEN GOTO NOT_SAME_NSAP;
     1856    10241
     1857    10242                                                /* check duplicate DEST_REF           */
     1858    10243    5   CHECK_DST_REF:    ;
     1859    10244    5                     IF KN$TCTX$(TCTX#)->KN$TCTX.DST_REF = TPDU_BUF.SRC_REF

  10244   0 000FD3  EC80 0000 0000  xsym CHECK_DST_REF   LDB,B6   KN_TCTX$$
          0 000FD6  B847 001E                            LDR,R3   TCTX#,AUTO
          0 000FD8  DCB6                                 LDB,B5   ,B6,R3
          0 000FD9  E845 0001                            LDR,R6   1,B5
          0 000FDB  E947 002E                            CMR,R6   TPDU_BUF+2,AUTO
          0 000FDD  0981 0021                            BNE      s:10256,PREL

     1860    10245    6                     THEN DO;

     1861    10246    6                          CTX$ = KN$TCTX$(TCTX#);

  10246   0 000FDF  DFC7 000C                            STB,B5   CTX$,AUTO

     1862    10247
     1863    10248    6                          IF KN$TCTX.STATE = %K_TSTATE_OPEN

  10248   0 000FE1  E285                                 LLH,R6   ,B5
          0 000FE2  6D05                                 CMV,R6   5
          0 000FE3  0981 0006                            BNE      s:10254,PREL

     1864    10249    7                          THEN DO;

     1865    10250    7                               CALL I$SET_INACTIVITY;

  10250   0 000FE5  E3C0 05BF                            LNJ,B6   s:0,PREL
          0 000FE7       0001                            DC       s:10251,PREL

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:258  
     1866    10251    7                               GOTO SET_CR_DUP;

  10251   0 000FE8  0F81 000E                            B        s:10261,PREL

     1867    10252    7                               END;
     1868    10253
     1869    10254    6                          IF KN$TCTX.STATE = %K_TSTATE_AKWAIT

  10254   0 000FEA  6D07                                 CMV,R6   7
          0 000FEB  0981 000B                            BNE      s:10261,PREL

     1870    10255    7                          THEN DO;

     1871    10256    7                               CALL KNT$RETRANS(KN$NETPARM); /*retransmit tpdu_cc*/

  10256   0 000FED  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 000FEF  CBF0 0100                            LAB,B4   256,IMO
          0 000FF1  E380 0000 0000  xent                 LNJ,B6   KNT$RETRANS
          0 000FF4       0001                            DC       s:10257,PREL

     1872    10257    7                               GOTO SET_CR_DUP;

  10257   0 000FF5  0F81 0001                            B        s:10261,PREL

     1873    10258    7                               END;
     1874    10259
     1875    10260    6   SET_CR_DUP:
     1876    10261    6                          ERRNUM = %K_ERROR_DUP_CR;

  10261   0 000FF7  E870 00E8            SET_CR_DUP      LDR,R6   232,IMO
          0 000FF9  EF47 0006                            STR,R6   ERRNUM,AUTO

     1877    10262    6                          RETURN;

  10262   0 000FFB  ECC7 0034                            LDB,B6   TPDU_BUF+8,AUTO
          0 000FFD  C3C6 0001                            LNJ,B4   1,B6

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:259  
  10256   0                              NOT_SAME_NSAP   null
     1878    10263    6                          END/*do if dst_ref match*/;
     1879    10264    5   NOT_SAME_NSAP:    ;
     1880    10265    5                     END/*do if active state*/;

     1881    10266    4                END/*do if ctx$ not nil*/;

     1882    10267    3           END/*do while*/;

  10267   0 000FFF  8AC7 001E            NOT_SAME_NSAP   INC      TCTX#,AUTO
          0 001001  E847 001E                            LDR,R6   TCTX#,AUTO
          0 001003  E900 0000 0000  xsym                 CMR,R6   KN_TCTX_MAX#
          0 001006  0381 FF98                            BLE      s:10224,PREL

     1883    10268
     1884    10269    2      ALTRETURN/*no match round*/;

  10269   0 001008  ECC7 0034                            LDB,B6   TPDU_BUF+8,AUTO
          0 00100A  B806                                 LDR,R3   ,B6
          0 00100B  C3B6                                 LNJ,B4   ,B6,R3

     1885    10270    2   END I$LOCATE_OSI;
     1886    10271        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:260  
     1887    10272        /*I* NAME: I$COMMON_INIT
     1888    10273
     1889    10274             PURPOSE: To do common initialization of the TCTXC for both
     1890    10275                      TPDU_CR and TPDU_CC.
     1891    10276        */
     1892    10277
     1893    10278    1   I$COMMON_INIT: PROC;

  10278   0 00100C  EFC7 0034            I$COMMON_INIT   STB,B6   TPDU_BUF+8,AUTO

     1894    10279
     1895    10280    2      KN$TCTX.OPTION.EXTENDED = B$TPDU_CR.EXT_FMT_FLAG;

  10280   0 00100E  DCC7 000E                            LDB,B5   BUF$,AUTO
          0 001010  E845 0003                            LDR,R6   3,B5
          0 001012  6047                                 SOR,R6   7
          0 001013  CCC7 000C                            LDB,B4   CTX$,AUTO
          0 001015  EAC4 000C                            SRM,R6,'0004'X    12,B4
          0 001017       0004

     1896    10281
     1897    10282    2      IF KN$TCTX.CLASS = 2

  10282   0 001018  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 00101A  E2C6 0005                            LLH,R6   5,B6
          0 00101C  6D02                                 CMV,R6   2
          0 00101D  0981 000B                            BNE      s:10289,PREL

     1898    10283    3      THEN DO;

     1899    10284    3           IF B$TPDU_CR.CLASS_2_FLOW = '0'B

  10284   0 00101F  DCC7 000E                            LDB,B5   BUF$,AUTO
          0 001021  82C5 0003                            LB,'0100'X        3,B5
          0 001023       0100
          0 001024  0501 0004                            BBT      s:10289,PREL

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:261  
     1900    10285    3           THEN KN$TCTX.OPTION.CLASS_2_FLOW = '1'B;

  10285   0 001026  8946 000C                            LBT,'0008'X       12,B6
  10285   0 001028       0008

     1901    10286    3           END;

     1902    10287
     1903    10288
     1904    10289    2      IF KN$TCTX.OPTION.EXTENDED = '0'B

  10289   0 001029  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 00102B  82C6 000C                            LB,'0004'X        12,B6
          0 00102D       0004
          0 00102E  0501 0017                            BBT      s:10296,PREL

     1905    10290    3      THEN DO;              /*gettctx set up for extended format - the default*/

     1906    10291    3           KN$TCTX.MAXSEQ = 127;

  10291   0 001030  8CF0 0000 007F                       LDI      127,IMO
          0 001033  8D46 000A                            SDI      10,B6

     1907    10292    3           KN$TCTX.RCV_WINDOW_SZ = KNT_WINDOW_NORMAL;

  10292   0 001035  D800 0000 0000  xsym                 LDR,R5   KNT_WINDOW_NORMAL
          0 001038  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 00103A  DAC6 0005                            SRM,R5,'00FF'X    5,B6
          0 00103C       00FF

     1908    10293    3           KN$TCTX.RECV_UWE = KN$TCTX.RCV_WINDOW_SZ;

  10293   0 00103D  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 00103F  F846 0005                            LDR,R7   5,B6
          0 001041  F570 00FF                            AND,R7   255,IMO
          0 001043  6C00                                 LDV,R6   0
          0 001044  8D46 0024                            SDI      36,B6
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:262  

     1909    10294    3           END;

     1910    10295
     1911    10296    2      IF LDCT_CIRCUIT

  10296   0 001046  89C7 0028                            CMZ      LDCT_CIRCUIT,AUTO
          0 001048  0881 0004                            BAGE     s:10299,PREL

     1912    10297    2      THEN KN$TCTX.OPTION.CONS = '1'B;

  10297   0 00104A  8946 000C                            LBT,'0020'X       12,B6
  10297   0 00104C       0020

     1913    10298
     1914    10299    2      KN$TCTX.TPDUSZ = K_TPDUSZ_VALUES(KN$TCTX.TPDUSZ_PARM);

  10299   0 00104D  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 00104F  B846 0008                            LDR,R3   8,B6
          0 001051  B570 00FF                            AND,R3   255,IMO
          0 001053  E830 0000 0000  xsym                 LDR,R6   K_TPDUSZ_VALUES,R3
          0 001056  EF46 0009                            STR,R6   9,B6

     1915    10300
     1916    10301    2      KN$TCTX.SEND_UWE = TPDU_BUF.CDT;

  10301   0 001058  F847 002C                            LDR,R7   TPDU_BUF,AUTO
          0 00105A  F570 000F                            AND,R7   15,IMO
          0 00105C  6C00                                 LDV,R6   0
          0 00105D  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 00105F  8D46 0034                            SDI      52,B6

     1917    10302
     1918    10303    2      RETURN;

  10303   0 001061  ECC7 0034                            LDB,B6   TPDU_BUF+8,AUTO
          0 001063  C3C6 0001                            LNJ,B4   1,B6
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:263  

     1919    10304
     1920    10305    2   END I$COMMON_INIT;
     1921    10306        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:264  
     1922    10307        /*I* NAME: I$FORWARD_2HOST
     1923    10308
     1924    10309             PURPOSE: To forward a (possibly un-concatenated) TPDU to the host
     1925    10310                      after KNT$RECV has been called at its RECV_4HOST entry.
     1926    10311
     1927    10312                      KN$NETPARM.MSG$ and .MSGSZ may frame session aligned or
     1928    10313                      unaligned data.
     1929    10314
     1930    10315                      HOST_TPDU$ and TPDUSIZE should frame transport aligned or
     1931    10316                      unaligned data.
     1932    10317        */
     1933    10318
     1934    10319    1   I$FORWARD_2HOST: PROC ALTRET;

  10319   0 001065  EFC7 0036            I$FORWARD_2HOST STB,B6   TPDU_BUF+10,AUTO

     1935    10320    2      HOST_TPDUC$->B$TPDU_DT_C.DST_REF = KN$TCTX.HOST_REF;

  10320   0 001067  8CC7 0026                            LDI      HOST_TPDU$,AUTO
          0 001069  B856                                 LDR,R3   R6
          0 00106A  E570 7FFF                            AND,R6   32767,IMO
          0 00106C  8D47 003E                            SDI      BUFS_RLSD+3,AUTO
          0 00106E  DCC7 003E                            LDB,B5   BUFS_RLSD+3,AUTO
          0 001070  304F                                 SOR,R3   15
          0 001071  ACC7 000C                            LDB,B2   CTX$,AUTO
          0 001073  2C06                                 LDV,R2   6
          0 001074  6C02                                 LDV,R6   2
          0 001075  BB85                                 LAB,B3   ,B5
          0 001076  3E02                                 ADV,R3   2
          0 001077  0008                                 MMM

     1936    10321
     1937    10322    2      KN$NETPARM.FUNCTION = %KN_FCN_DATA;

  10322   0 001078  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          0 00107A  6C05                                 LDV,R6   5
          0 00107B  EF46 0014                            STR,R6   20,B6
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:265  

     1938    10323    2      KN$NETPARM.NODE = KN$TCTX.HOST_NODE;

  10323   0 00107D  CCC7 000C                            LDB,B4   CTX$,AUTO
          0 00107F  D2C4 0004                            LLH,R5   4,B4
          0 001081  DF46 0015                            STR,R5   21,B6

     1939    10324    2      KN$NETPARM.SLDCT$ = ADDR(KNT_UNQ_LDCT);

  10324   0 001083  AB80 0000 0000  xsym                 LAB,B2   KNT_UNQ_LDCT
          0 001086  AFC6 0017                            STB,B2   23,B6

     1940    10325    2      KN$NETPARM.THDR_C$ = HOST_TPDUC$;

  10325   0 001088  8CC7 0026                            LDI      HOST_TPDU$,AUTO
          0 00108A  8D46 000B                            SDI      11,B6

     1941    10326    2      KN$NETPARM.THDRSZ = TPDUSIZE;

  10326   0 00108C  C847 001B                            LDR,R4   TPDUSIZE,AUTO
          0 00108E  CF46 000D                            STR,R4   13,B6

     1942    10327
     1943    10328    2      KN$NETPARM.UHDRSZ = 0;

  10328   0 001090  8746 0007                            CL       7,B6

     1944    10329    2      KN$NETPARM.SHDRSZ = 0;

  10329   0 001092  8746 000A                            CL       10,B6

     1945    10330
     1946    10331    2      CALL KNN$SEND(KN$NETPARM)

  10331   0 001094  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 001096  CBF0 0100                            LAB,B4   256,IMO
          0 001098  E380 0000 0000  xent                 LNJ,B6   KNN$SEND
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:266  
          0 00109B       0003                            DC       s:10334,PREL
          0 00109C  0F81 0019                            B        s:10339,PREL

     1947    10332    3      WHENALTRETURN DO;  /*N* altret routine wont work if concatenated tpdus*/

     1948    10333        /*leave KN$NETPARM.ERRCODE = %KN_ERR_NOQ; */
     1949    10334    3           KN$TCTX.RERR.NBUF_NOQ = KN$TCTX.RERR.NBUF_NOQ +1;

  10334   0 00109E  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 0010A0  8AC6 001C                            INC      28,B6

     1950    10335    3           HOST_TPDUC$->B$TPDU_DT_C.DST_REF = KN$TCTX.SRC_REF;

  10335   0 0010A2  8CC7 0026                            LDI      HOST_TPDU$,AUTO
          0 0010A4  B856                                 LDR,R3   R6
          0 0010A5  E570 7FFF                            AND,R6   32767,IMO
          0 0010A7  8D47 003E                            SDI      BUFS_RLSD+3,AUTO
          0 0010A9  DCC7 003E                            LDB,B5   BUFS_RLSD+3,AUTO
          0 0010AB  304F                                 SOR,R3   15
          0 0010AC  AB86                                 LAB,B2   ,B6
          0 0010AD  2C04                                 LDV,R2   4
          0 0010AE  6C02                                 LDV,R6   2
          0 0010AF  BB85                                 LAB,B3   ,B5
          0 0010B0  3E02                                 ADV,R3   2
          0 0010B1  0008                                 MMM

     1951    10336    3           ALTRETURN;

  10336   0 0010B2  ECC7 0036                            LDB,B6   TPDU_BUF+10,AUTO
          0 0010B4  B806                                 LDR,R3   ,B6
          0 0010B5  C3B6                                 LNJ,B4   ,B6,R3

     1952    10337    3           END;
     1953    10338
     1954    10339    2      IF KN$TCTX.OPTION.TRACE THEN CALL KNT$TR_FHOST(KN$NETPARM);

  10339   0 0010B6  ECC7 000C                            LDB,B6   CTX$,AUTO
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:267  
          0 0010B8  82C6 000C                            LB,'0040'X        12,B6
          0 0010BA       0040
          0 0010BB  0581 0009                            BBF      s:10340,PREL

  10339   0 0010BD  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 0010BF  CBF0 0100                            LAB,B4   256,IMO
          0 0010C1  E380 0000 0000  xent                 LNJ,B6   KNT$TR_FHOST
          0 0010C4       0001                            DC       s:10340,PREL

     1955    10340    2      RETURN;

  10340   0 0010C5  ECC7 0036                            LDB,B6   TPDU_BUF+10,AUTO
          0 0010C7  C3C6 0001                            LNJ,B4   1,B6

     1956    10341
     1957    10342    2   END I$FORWARD_2HOST;
     1958    10343        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:268  
     1959    10344        /*I* NAME:  I$DO_ACK
     1960    10345
     1961    10346             ENTRY:  I$DO_EACK
     1962    10347
     1963    10348             PURPOSE:
     1964    10349               These procedures release the buffered segments which have been
     1965    10350               acknowledged by the peer and stops or restart the RETRAN timer.
     1966    10351
     1967    10352             INPUT:
     1968    10353               YR_TU_NR - from the TPDU_AK
     1969    10354               CDT      - from the TPDU_AK
     1970    10355        */
     1971    10356    1   I$DO_ACK: PROC;

  10356   0 0010C9  EFC7 0034            I$DO_ACK        STB,B6   TPDU_BUF+8,AUTO

     1972    10357
     1973    10358                                                /* Auto Storage                       */
     1974    10359    2   DCL HDR$ PTR;
     1975    10360    2   DCL SVHDR$ PTR;
     1976    10361    2   DCL EXTRA SBIN WORD;
     1977    10362    2   DCL BUFS_RLSD UBIN;
     1978    10363
     1979    10364        %K$TPDU_CP6 (NAME=K$TPDU_CP6_FLOW, STCLASS="BASED(BUF$)", LAST=",");
     1980    10399           %K$TPARM_FLOW_CONTROL (NAME=P, LVL=2, STCLASS=BASED, LAST=";");
     1981    10435
     1982    10436        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:269  
     1983    10437    2      HDR$ = KN$TCTX.SEND_HEAD$;

  10437   0 0010CB  DCC7 000C                            LDB,B5   CTX$,AUTO
          0 0010CD  CCC5 003A                            LDB,B4   58,B5
          0 0010CF  CFC7 0036                            STB,B4   HDR$,AUTO

     1984    10438    2      SVHDR$ = HDR$;

  10438   0 0010D1  CFC7 0038                            STB,B4   SVHDR$,AUTO

     1985    10439    2      BUFS_RLSD = 0;

  10439   0 0010D3  8747 003B                            CL       BUFS_RLSD,AUTO

     1986    10440
     1987    10441        /* Release the buffers for those that have been acknowledged.
     1988    10442        */
     1989    10443    3      DO WHILE ( HDR$ ~= ADDR(NIL) );

  10443   0 0010D5  0F81 004A                            B        s:10458,PREL

     1990    10444    3           IF ( HDR$->FRAG_HDR.SEQ < YR_TU_NR )

  10444   0 0010D7  ECC7 0036                            LDB,B6   HDR$,AUTO
          0 0010D9  8CC6 0002                            LDI      2,B6
          0 0010DB  84C7 0012                            SID      YR_TU_NR,AUTO
          0 0010DD  0681 0018                            BCF      s:10448,PREL
          0 0010DF  8CC6 0002                            LDI      2,B6
          0 0010E1  84F0 FFFF FFFF                       SID      -1,IMO
          0 0010E4  6981 0003                            BNEZ,R6  s:10444+17,PREL
          0 0010E6  7901 000F                            BEZ,R7   s:10448,PREL
          0 0010E8  DCC7 000C                            LDB,B5   CTX$,AUTO
          0 0010EA  8CC6 0002                            LDI      2,B6
          0 0010EC  84C5 0032                            SID      50,B5
          0 0010EE  0681 002C                            BCF      s:10457,PREL
          0 0010F0  8CC7 0012                            LDI      YR_TU_NR,AUTO
          0 0010F2  84C5 0032                            SID      50,B5
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:270  
          0 0010F4  0601 0026                            BCT      s:10457,PREL

     1991    10445    3             OR ( HDR$->FRAG_HDR.SEQ_SBIN = -1 ) /*cr or cc tpdu*/
     1992    10446    3             OR (HDR$->FRAG_HDR.SEQ>=KN$TCTX.SEND_LWE AND YR_TU_NR<KN$TCTX.SEND_LWE)
     1993    10447    4           THEN DO;

     1994    10448    4                KN$TCTX.SEND_HEAD$ = HDR$->FRAG_HDR.LINK$;

  10448   0 0010F6  DCC6 0004                            LDB,B5   4,B6
          0 0010F8  CCC7 000C                            LDB,B4   CTX$,AUTO
          0 0010FA  DFC4 003A                            STB,B5   58,B4

     1995    10449
     1996    10450    4                IF KN$TCTX.SEND_HEAD$ = ADDR(NIL)

  10450   0 0010FC  8DC4 003A                            CMN      58,B4
          0 0010FE  0981 0006                            BNE      s:10453,PREL

     1997    10451    4                THEN KN$TCTX.SEND_TAIL$ = ADDR(NIL);

  10451   0 001100  BB80 0000 0000                       LAB,B3   0
          0 001103  BFC4 003C                            STB,B3   60,B4

     1998    10452
     1999    10453    4                CALL KNT$RELBUF(HDR$->FRAG_HDR,KN$TCTX);

  10453   0 001105  CFC7 0040                            STB,B4   BUFS_RLSD+5,AUTO
          0 001107  EFC7 003E                            STB,B6   BUFS_RLSD+3,AUTO
          0 001109  BBC7 003E                            LAB,B3   BUFS_RLSD+3,AUTO
          0 00110B  CBF0 0200                            LAB,B4   512,IMO
          0 00110D  E380 0000 0000  xent                 LNJ,B6   KNT$RELBUF
          0 001110       0001                            DC       s:10454,PREL

     2000    10454    4                BUFS_RLSD = BUFS_RLSD +1;

  10454   0 001111  8AC7 003B                            INC      BUFS_RLSD,AUTO

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:271  
     2001    10455    4                HDR$ = KN$TCTX.SEND_HEAD$;

  10455   0 001113  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 001115  DCC6 003A                            LDB,B5   58,B6
          0 001117  DFC7 0036                            STB,B5   HDR$,AUTO

     2002    10456    4                END;

  10456   0 001119  0F81 0006                            B        s:10458,PREL

     2003    10457    3           ELSE HDR$ = ADDR(NIL);

  10457   0 00111B  CB80 0000 0000                       LAB,B4   0
          0 00111E  CFC7 0036                            STB,B4   HDR$,AUTO

     2004    10458    3           END;

  10458   0 001120  8DC7 0036                            CMN      HDR$,AUTO
          0 001122  0981 FFB4                            BNE      s:10444,PREL

     2005    10459
     2006    10460        /* Reset the send window information with the data from the AK TPDU.
     2007    10461        */
     2008    10462    2      KN$TCTX.SEND_LWE = YR_TU_NR;

  10462   0 001124  8CC7 0012                            LDI      YR_TU_NR,AUTO
          0 001126  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 001128  8D46 0032                            SDI      50,B6

     2009    10463    2      KN$TCTX.SEND_UWE = KN$TCTX.SEND_LWE + CDT;

  10463   0 00112A  E847 0011                            LDR,R6   CDT,AUTO
          0 00112C  70F0                                 DAR,R7   16
          0 00112D  8446 0032                            AID      50,B6
          0 00112F  8D46 0034                            SDI      52,B6

     2010    10464
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:272  
     2011    10465    3      DO WHILE (KN$TCTX.SEND_UWE > KN$TCTX.MAXSEQ );

  10465   0 001131  84C6 000A                            SID      10,B6
          0 001133  0681 0017                            BCF      s:10472,PREL
          0 001135  6981 0003                            BNEZ,R6  s:10466,PREL
          0 001137  7901 0013                            BEZ,R7   s:10472,PREL

     2012    10466    3           KN$TCTX.SEND_UWE = KN$TCTX.SEND_UWE - KN$TCTX.MAXSEQ - 1;

  10466   0 001139  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 00113B  8CC6 0034                            LDI      52,B6
          0 00113D  84C6 000A                            SID      10,B6
          0 00113F  8470 FFFF FFFF                       AID      -1,IMO
          0 001142  8D46 0034                            SDI      52,B6

     2013    10467    3           END;

  10467   0 001144  84C6 000A                            SID      10,B6
          0 001146  6981 0003                            BNEZ,R6  s:10467+6,PREL
          0 001148  7901 0002                            BEZ,R7   s:10472,PREL
          0 00114A  066F                                 BCT      s:10466,SPREL

     2014    10468
     2015    10469        /* If we were able to release any saved TPDUs, then we should either
     2016    10470           stop or reset the Retrans Timer.
     2017    10471        */
     2018    10472    2      IF KN$TCTX.CLASS = 4

  10472   0 00114B  E2C6 0005                            LLH,R6   5,B6
          0 00114D  6D04                                 CMV,R6   4
          0 00114E  0981 001E                            BNE      s:10486,PREL

     2019    10473    3      THEN DO;

     2020    10474    3           IF SVHDR$ ~= KN$TCTX.SEND_HEAD$

  10474   0 001150  DCC7 0038                            LDB,B5   SVHDR$,AUTO
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:273  
          0 001152  DDC6 003A                            CMB,B5   58,B6
          0 001154  0901 0018                            BE       s:10486,PREL

     2021    10475    3           THEN IF ( KN$TCTX.SEND_HEAD$ = KN$TCTX.SEND_NOTSENT$) AND

  10475   0 001156  CCC6 003A                            LDB,B4   58,B6
          0 001158  CDC6 003E                            CMB,B4   62,B6
          0 00115A  0981 000A                            BNE      s:10481,PREL
          0 00115C  8DC6 0040                            CMN      64,B6
          0 00115E  0981 0006                            BNE      s:10481,PREL

     2022    10476    3                  (KN$TCTX.SEND_EHEAD$ = ADDR(NIL) )
     2023    10477    4                THEN DO;

     2024    10478    4   TIMER_STOP:
     2025    10479    4                     CALL I$CANCEL_RETRAN;

  10479   0 001160  E3C0 0458            TIMER_STOP      LNJ,B6   s:0,PREL
          0 001162       0001                            DC       s:10480,PREL

     2026    10480    4                     END;

  10480   0 001163  0F81 0009                            B        s:10486,PREL

     2027    10481    4                ELSE DO;

     2028    10482    4   TIMER_RESET:
     2029    10483    4                     KN$TCTX.SEND_RETRY_COUNT = 1;

  10483   0 001165  6C01                 TIMER_RESET     LDV,R6   1
          0 001166  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 001168  E7C6 004D                            STH,R6   77,B6

     2030    10484    4                     CALL I$SET_RETRAN;

  10484   0 00116A  E3C0 0412                            LNJ,B6   s:0,PREL
          0 00116C       0001                            DC       s:10486,PREL
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:274  

     2031    10485    4                     END;

     2032    10486    3           END/*do class4*/;

     2033    10487
     2034    10488        /* If we have flow stopped the host, and this opens up the send window,
     2035    10489           a Flow Start TPDU is sent to the host.
     2036    10490        */
     2037    10491    2   CHECK_FLOWCONTROL:
     2038    10492    2      EXTRA = KN$TCTX.SEND_NEXT - KN$TCTX.SEND_LWE;

  10492   0 00116D  ECC7 000C            CHECK_FLOWCONTR*LDB,B6   CTX$,AUTO
          0 00116F  8CC6 0036                            LDI      54,B6
          0 001171  84C6 0032                            SID      50,B6
          0 001173  E857                                 LDR,R6   R7
          0 001174  EF47 003A                            STR,R6   EXTRA,AUTO

     2039    10493    2      IF EXTRA < 0

  10493   0 001176  6881 000A                            BGEZ,R6  s:10496,PREL

     2040    10494    2      THEN EXTRA = EXTRA + KN$TCTX.MAXSEQ + 1;

  10494   0 001178  70F0                                 DAR,R7   16
          0 001179  8446 000A                            AID      10,B6
          0 00117B  8470 0000 0001                       AID      1,IMO
          0 00117E  E857                                 LDR,R6   R7
          0 00117F  EF47 003A                            STR,R6   EXTRA,AUTO

     2041    10495
     2042    10496    2      IF (KN$TCTX.FLOW_CONTROLLED = '1'B) AND

  10496   0 001181  82C6 000D                            LB,'0010'X        13,B6
  10496   0 001183       0010
          0 001184  0581 0078                            BBF      s:10532,PREL
          0 001186  D846 0005                            LDR,R5   5,B6
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:275  
          0 001188  D570 00FF                            AND,R5   255,IMO
          0 00118A  D956                                 CMR,R5   R6
          0 00118B  0A81 0071                            BALE     s:10532,PREL

     2043    10497    2        ( EXTRA < ( KN$TCTX.RCV_WINDOW_SZ  /*N* *2 */ ) )
     2044    10498    3      THEN DO;

     2045    10499    3           KN$TCTX.FLOW_CONTROLLED = '0'B;

  10499   0 00118D  8846 000D                            LBF,'0010'X       13,B6
  10499   0 00118F       0010

     2046    10500
     2047    10501    3           IF KN$TCTX.LNK$ ~= ADDR(NIL)

  10501   0 001190  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 001192  8DC6 0006                            CMN      6,B6
          0 001194  0901 000D                            BE       s:10504,PREL

     2048    10502    3           THEN CALL KNT$UNQ_FLOW(KN$TCTX.LNK$);

  10502   0 001196  DBC6 0006                            LAB,B5   6,B6
          0 001198  DFC7 003E                            STB,B5   BUFS_RLSD+3,AUTO
          0 00119A  BBC7 003E                            LAB,B3   BUFS_RLSD+3,AUTO
          0 00119C  CBF0 0100                            LAB,B4   256,IMO
          0 00119E  E380 0000 0000  xent                 LNJ,B6   KNT$UNQ_FLOW
          0 0011A1       0001                            DC       s:10504,PREL

     2049    10503
     2050    10504    3           IF KN$TCTX.OPTION.OSI

  10504   0 0011A2  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 0011A4  82C6 000C                            LB,'0010'X        12,B6
          0 0011A6       0010
          0 0011A7  0581 0055                            BBF      s:10532,PREL

     2051    10505    4           THEN DO;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:276  

     2052    10506    4                K$TPDU_CP6_FLOW = '0'B;

  10506   0 0011A9  DCC7 000E                            LDB,B5   BUF$,AUTO
          0 0011AB  5C06                                 LDV,R5   6
          0 0011AC  0021                                 ALR      ;
          0 0011AD       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          0 0011AF       4005 0000                                ALPHANUM(0,B5,,R5,FILL)

     2053    10507    4                K$TPDU_CP6_FLOW.LI = SIZEC(K$TPDU_CP6_FLOW) -1;

  10507   0 0011B1  6C05                                 LDV,R6   5
          0 0011B2  437F                                 CSYNC    s:10507,SPREL
          0 0011B3  ECC7 000E                            LDB,B6   BUF$,AUTO
          0 0011B5  E786                                 STH,R6   ,B6

     2054    10508    4                K$TPDU_CP6_FLOW.TYPE = %K_TPDU_TYPE_CP6;

  10508   0 0011B6  ECC7 000E                            LDB,B6   BUF$,AUTO
          0 0011B8  8806                                 LBF,'00F0'X       ,B6
          0 0011B9       00F0

     2055    10509    4                K$TPDU_CP6_FLOW.DST_REF = KN$TCTX.HOST_REF;

  10509   0 0011BA  ECC7 000E                            LDB,B6   BUF$,AUTO
          0 0011BC  DCC7 000C                            LDB,B5   CTX$,AUTO
          0 0011BE  C845 0003                            LDR,R4   3,B5
          0 0011C0  CF46 0001                            STR,R4   1,B6

     2056    10510    4                K$TPDU_CP6_FLOW.P.CODE = %K_TPARM_FLOW_START;

  10510   0 0011C2  4C04                                 LDV,R4   4
          0 0011C3  ECC7 000E                            LDB,B6   BUF$,AUTO
          0 0011C5  C7C6 0002                            STH,R4   2,B6

     2057    10511
     2058    10512    4                KN$NETPARM.MSGSZ = 0;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:277  

  10512   0 0011C7  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          0 0011C9  8746 0004                            CL       4,B6

     2059    10513    4                KN$NETPARM.UHDRSZ = 0;

  10513   0 0011CB  8746 0007                            CL       7,B6

     2060    10514    4                KN$NETPARM.SHDRSZ = 0;

  10514   0 0011CD  8746 000A                            CL       10,B6

     2061    10515    4                KN$NETPARM.THDRSZ = SIZEC(K$TPDU_CP6_FLOW);

  10515   0 0011CF  DF46 000D                            STR,R5   13,B6

     2062    10516    4                KN$NETPARM.THDR$ = ADDR(K$TPDU_CP6_FLOW);

  10516   0 0011D1  DCC7 000E                            LDB,B5   BUF$,AUTO
          0 0011D3  DFC6 000B                            STB,B5   11,B6

     2063    10517    4                KN$NETPARM.NODE = KN$TCTX.HOST_NODE;

  10517   0 0011D5  CCC7 000C                            LDB,B4   CTX$,AUTO
          0 0011D7  B2C4 0004                            LLH,R3   4,B4
          0 0011D9  BF46 0015                            STR,R3   21,B6

     2064    10518
     2065    10519    4                CALL KNN$SEND(KN$NETPARM)

  10519   0 0011DB  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 0011DD  CBF0 0100                            LAB,B4   256,IMO
          0 0011DF  E380 0000 0000  xent                 LNJ,B6   KNN$SEND
          0 0011E2       0003                            DC       s:10521,PREL
          0 0011E3  0F81 000A                            B        s:10524,PREL

     2066    10520    5                WHENALTRETURN DO;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:278  

     2067    10521    5                     KN$TCTX.FLOW_CONTROLLED = '1'B;

  10521   0 0011E5  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 0011E7  8946 000D                            LBT,'0010'X       13,B6
          0 0011E9       0010

     2068    10522    5                     KN$NETPARM.ERRCODE = 0; /*so knn won't altret to knh$scan   */

  10522   0 0011EA  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          0 0011EC  8746 0016                            CL       22,B6

     2069    10523    5                     END;

     2070    10524    4                IF KN$TCTX.OPTION.TRACE THEN CALL KNT$TR_RECV(KN$NETPARM);

  10524   0 0011EE  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 0011F0  82C6 000C                            LB,'0040'X        12,B6
          0 0011F2       0040
          0 0011F3  0581 0009                            BBF      s:10532,PREL

  10524   0 0011F5  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 0011F7  CBF0 0100                            LAB,B4   256,IMO
          0 0011F9  E380 0000 0000  xent                 LNJ,B6   KNT$TR_RECV
          0 0011FC       0001                            DC       s:10532,PREL

     2071    10525    4                END/*do if OSI*/;

     2072    10526    3           END/*do if flow_controlled and window is open*/;

     2073    10527
     2074    10528        /* If we were able to release any buffers, and there is one or more
     2075    10529           transport connections that are waiting for a buffer, a call is
     2076    10530           made to KNT$UNQ_BUFFER to unqueue those connections.
     2077    10531        */
     2078    10532    2      IF (BUFS_RLSD > 0) AND (KNT_WAIT_COUNT > 0)

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:279  
  10532   0 0011FD  E847 003B                            LDR,R6   BUFS_RLSD,AUTO
          0 0011FF  6901 000C                            BEZ,R6   s:10535,PREL
          0 001201  D800 0000 0000  xsym                 LDR,R5   KNT_WAIT_COUNT
          0 001204  5901 0007                            BEZ,R5   s:10535,PREL

     2079    10533    2      THEN CALL KNT$UNQ_BUFFER;

  10533   0 001206  CBF0 0000                            LAB,B4   0,IMO
          0 001208  E380 0000 0000  xent                 LNJ,B6   KNT$UNQ_BUFFER
          0 00120B       0001                            DC       s:10535,PREL

     2080    10534
     2081    10535    2      RETURN;

  10535   0 00120C  ECC7 0034                            LDB,B6   TPDU_BUF+8,AUTO
          0 00120E  C3C6 0001                            LNJ,B4   1,B6

     2082    10536
     2083    10537        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:280  
     2084    10538    2   I$DO_EACK: ENTRY;

  10538   0 001210  EFC7 0034            I$DO_EACK       STB,B6   TPDU_BUF+8,AUTO

     2085    10539
     2086    10540    2      HDR$ = KN$TCTX.SEND_EHEAD$;

  10540   0 001212  DCC7 000C                            LDB,B5   CTX$,AUTO
          0 001214  CCC5 0040                            LDB,B4   64,B5
          0 001216  CFC7 0036                            STB,B4   HDR$,AUTO

     2087    10541
     2088    10542    2      IF ( HDR$ = ADDR(NIL) ) OR

  10542   0 001218  8DC7 0036                            CMN      HDR$,AUTO
          0 00121A  0901 0009                            BE       s:10544,PREL
          0 00121C  8CC4 0002                            LDI      2,B4
          0 00121E  84C7 0012                            SID      YR_TU_NR,AUTO
          0 001220  6981 0003                            BNEZ,R6  s:10544,PREL
          0 001222  7901 0005                            BEZ,R7   s:10546,PREL

     2089    10543    2        (HDR$->FRAG_HDR.SEQ ~= YR_TU_NR)
     2090    10544    2      THEN RETURN;

  10544   0 001224  ECC7 0034                            LDB,B6   TPDU_BUF+8,AUTO
          0 001226  C3C6 0001                            LNJ,B4   1,B6

     2091    10545
     2092    10546    2      KN$TCTX.SEND_EHEAD$ = HDR$->FRAG_HDR.LINK$;

  10546   0 001228  BCC4 0004                            LDB,B3   4,B4
          0 00122A  BFC5 0040                            STB,B3   64,B5

     2093    10547    2      IF KN$TCTX.SEND_EHEAD$ = ADDR(NIL)

  10547   0 00122C  8DC5 0040                            CMN      64,B5
          0 00122E  0981 0006                            BNE      s:10550,PREL
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:281  

     2094    10548    2      THEN KN$TCTX.SEND_ETAIL$ = ADDR(NIL);

  10548   0 001230  AB80 0000 0000                       LAB,B2   0
          0 001233  AFC5 0042                            STB,B2   66,B5

     2095    10549
     2096    10550    2      CALL KNT$RELBUF(HDR$->FRAG_HDR,KN$TCTX);

  10550   0 001235  DFC7 0040                            STB,B5   BUFS_RLSD+5,AUTO
          0 001237  CFC7 003E                            STB,B4   BUFS_RLSD+3,AUTO
          0 001239  BBC7 003E                            LAB,B3   BUFS_RLSD+3,AUTO
          0 00123B  CBF0 0200                            LAB,B4   512,IMO
          0 00123D  E380 0000 0000  xent                 LNJ,B6   KNT$RELBUF
          0 001240       0001                            DC       s:10552,PREL

     2097    10551
     2098    10552    2      IF KN$TCTX.SEND_EHEAD$ = ADDR(NIL)    AND

  10552   0 001241  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 001243  8DC6 0040                            CMN      64,B6
          0 001245  0981 000B                            BNE      s:10555,PREL
          0 001247  8DC6 003A                            CMN      58,B6
          0 001249  0901 FF16                            BE       s:10477,PREL
          0 00124B  DCC6 003A                            LDB,B5   58,B6
          0 00124D  DDC6 003E                            CMB,B5   62,B6
          0 00124F  0901 FF10                            BE       s:10477,PREL

     2099    10553    2        (KN$TCTX.SEND_HEAD$=ADDR(NIL)  OR  KN$TCTX.SEND_HEAD$=KN$TCTX.SEND_NOTSENT$)
     2100    10554    2      THEN GOTO TIMER_STOP;
     2101    10555    2      ELSE GOTO TIMER_RESET;

  10555   0 001251  0F81 FF13                            B        s:10481,PREL

     2102    10556
     2103    10557    2   END I$DO_ACK;
     2104    10558        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:282  
     2105    10559
     2106    10560        /*I* NAME: I$REPORT_TDISCON
     2107    10561
     2108    10562             PURPOSE:
     2109    10563                  To notify session that transport has terminated a transport
     2110    10564                  connection because of a received TPDU_DR or TPDU_ER.
     2111    10565
     2112    10566                  The I$REPORT_TDISCON entry is used if no user data is available
     2113    10567                  to pass on up to session.
     2114    10568
     2115    10569                  The I$REPORT_TDISCON2 entry is used if session data has been
     2116    10570                  included with the received TPDU_DR.
     2117    10571        */
     2118    10572
     2119    10573    1   I$REPORT_TDISCON: PROC ALTRET;

  10573   0 001253  EFC7 0034            I$REPORT_TDISCONSTB,B6   TPDU_BUF+8,AUTO

     2120    10574    2      KN$NETPARM.SHDR$ = ADDR(NIL);

  10574   0 001255  DB80 0000 0000                       LAB,B5   0
          0 001258  CCC7 0004                            LDB,B4   @KN$NETPARM,AUTO
          0 00125A  DFC4 0008                            STB,B5   8,B4

     2121    10575    2      KN$NETPARM.SHDRSZ = 0;

  10575   0 00125C  8744 000A                            CL       10,B4
          0 00125E  0F81 0003                            B        s:10578,PREL

     2122    10576
     2123    10577    2   I$REPORT_TDISCON2: ENTRY ALTRET;

  10577   0 001260  EFC7 0034            I$REPORT_TDISCO*STB,B6   TPDU_BUF+8,AUTO

     2124    10578    2      IF KN$TCTX.PRIMARY

  10578   0 001262  ECC7 000C                            LDB,B6   CTX$,AUTO
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:283  
          0 001264  82C6 000D                            LB,'0001'X        13,B6
          0 001266       0001
          0 001267  0581 001F                            BBF      s:10590,PREL

     2125    10579    3      THEN DO;

     2126    10580    3           KN$NETPARM.FUNCTION = %KN_FCN_TERM;

  10580   0 001269  DCC7 0004                            LDB,B5   @KN$NETPARM,AUTO
          0 00126B  6C03                                 LDV,R6   3
          0 00126C  EF45 0014                            STR,R6   20,B5

     2127    10581    3           KN$NETPARM.NODE = KN$TCTX.NODE;

  10581   0 00126E  D806                                 LDR,R5   ,B6
          0 00126F  D570 00FF                            AND,R5   255,IMO
          0 001271  DF45 0015                            STR,R5   21,B5

     2128    10582    3           KN$NETPARM.UHDRSZ = 0;

  10582   0 001273  8745 0007                            CL       7,B5

     2129    10583    3           KN$NETPARM.MSGSZ  = 0;

  10583   0 001275  8745 0004                            CL       4,B5

     2130    10584
     2131    10585    3           CALL KNS$RECV(KN$NETPARM)

  10585   0 001277  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 001279  CBF0 0100                            LAB,B4   256,IMO
          0 00127B  E380 0000 0000  xent                 LNJ,B6   KNS$RECV
          0 00127E       0003                            DC       s:10586,PREL
          0 00127F  0F81 0005                            B        s:10587,PREL

     2132    10586    4           WHENALTRETURN DO; ALTRETURN; END;

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:284  
  10586   0 001281  ECC7 0034                            LDB,B6   TPDU_BUF+8,AUTO
          0 001283  B806                                 LDR,R3   ,B6
          0 001284  C3B6                                 LNJ,B4   ,B6,R3

     2133    10587    3           END;

  10587   0 001285  0F81 0012                            B        s:10598,PREL

     2134    10588
     2135    10589    3      ELSE DO;

     2136    10590    3           HOST_TPDUC$ = TPDU$;

  10590   0 001287  8CC7 000A                            LDI      TPDU$,AUTO
          0 001289  8D47 0026                            SDI      HOST_TPDU$,AUTO

     2137    10591    3           KN$NETPARM.MSGSZ = 0;

  10591   0 00128B  DCC7 0004                            LDB,B5   @KN$NETPARM,AUTO
          0 00128D  8745 0004                            CL       4,B5

     2138    10592    3           CALL I$FORWARD_2HOST

  10592   0 00128F  E3C0 FDD5                            LNJ,B6   s:0,PREL
          0 001291       0003                            DC       s:10594,PREL
          0 001292  0F81 0005                            B        s:10598,PREL

     2139    10593    4           WHENALTRETURN DO;

     2140    10594    4                ALTRETURN;

  10594   0 001294  ECC7 0034                            LDB,B6   TPDU_BUF+8,AUTO
          0 001296  B806                                 LDR,R3   ,B6
          0 001297  C3B6                                 LNJ,B4   ,B6,R3

     2141    10595    4                END;
     2142    10596    3           END/*do for intermediate connections*/;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:285  

     2143    10597
     2144    10598    2      RETURN;

  10598   0 001298  ECC7 0034                            LDB,B6   TPDU_BUF+8,AUTO
          0 00129A  C3C6 0001                            LNJ,B4   1,B6

     2145    10599    2   END I$REPORT_TDISCON;
     2146    10600
     2147    10601        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:286  
     2148    10602        /*I* NAME: I$RETURN_DR
     2149    10603
     2150    10604             PURPOSE:
     2151    10605                  To compose and send a disconnect request or a disconnect confirm.
     2152    10606
     2153    10607                  The I$RETURN_DR entry is used to return a TPDU_DR when
     2154    10608                  errors are detected on an input TPDU_CR or TPDU_CC.
     2155    10609
     2156    10610                  The I$RETURN_DC entry is used to return a TPDU_DC when
     2157    10611                  errors are detected on an input TPDU_DR.
     2158    10612
     2159    10613             DESCRIPTION:
     2160    10614                  After composition of the TPDU, the local network is asked to
     2161    10615                  forward it to the peer.
     2162    10616        */
     2163    10617    1   I$RETURN_DR: PROC;

  10617   0 00129C  EFC7 0034            I$RETURN_DR     STB,B6   TPDU_BUF+8,AUTO

     2164    10618
     2165    10619    2   DCL CHKOFF SBIN;
     2166    10620    2   DCL FRAGSIZE SBIN;
     2167    10621
     2168    10622        %K$TPDU_DR(NAME=K$TPDU_DR, STCLASS="BASED(BUF$)");
     2169    10665
     2170    10666        %K$TPDU_DR (NAME=TPDU_DR, ALGN=CALIGNED);
     2171    10709        %K$TPDU_DC (NAME=TPDU_DC, ALGN=CALIGNED);
     2172    10748        %K$TPARM_CHKSUM (NAME=TPARM_CHKSUM, ALGN=CALIGNED);
     2173    10788
     2174    10789    2   DCL K_CKSUM_INIT CHAR(4) SYMREF;
     2175    10790
     2176    10791        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:287  
     2177    10792
     2178    10793    2      IF ENTRY_SWITCH = %SEND_4HOST

  10793   0 00129E  E847 0029                            LDR,R6   ENTRY_SWITCH,AUTO
          0 0012A0  6D02                                 CMV,R6   2
          0 0012A1  0981 0004                            BNE      s:10796,PREL

     2179    10794    2      THEN CALL TRANSPORT_SCREECH;

  10794   0 0012A3  E3C0 0351                            LNJ,B6   s:0,PREL
          0 0012A5       0001                            DC       s:10796,PREL

     2180    10795
     2181    10796    2      K$TPDU_DR.LI = SIZEC(TPDU_DR) -1;

  10796   0 0012A6  6C06                                 LDV,R6   6
          0 0012A7  ECC7 000E                            LDB,B6   BUF$,AUTO
          0 0012A9  E786                                 STH,R6   ,B6

     2182    10797    2      K$TPDU_DR.TYPE = %K_TPDU_TYPE_DR;

  10797   0 0012AA  D870 0080                            LDR,R5   128,IMO
          0 0012AC  ECC7 000E                            LDB,B6   BUF$,AUTO
          0 0012AE  DA86                                 SRM,R5,'00F0'X    ,B6
          0 0012AF       00F0

     2183    10798    2      K$TPDU_DR.REASON = REASON;

  10798   0 0012B0  C847 0025                            LDR,R4   REASON,AUTO
          0 0012B2  ECC7 000E                            LDB,B6   BUF$,AUTO
          0 0012B4  C7C6 0003                            STH,R4   3,B6

     2184    10799
     2185    10800    2      GOTO COMMON;

  10800   0 0012B6  0F81 000D                            B        s:10804,PREL

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:288  
     2186    10801
     2187    10802    2   I$RETURN_DC: ENTRY;

  10802   0 0012B8  EFC7 0034            I$RETURN_DC     STB,B6   TPDU_BUF+8,AUTO

     2188    10803    2      K$TPDU_DR.LI = SIZEC(TPDU_DC) -1;

  10803   0 0012BA  6C05                                 LDV,R6   5
          0 0012BB  DCC7 000E                            LDB,B5   BUF$,AUTO
          0 0012BD  E785                                 STH,R6   ,B5

     2189    10804    2      K$TPDU_DR.TYPE = %K_TPDU_TYPE_DC;

  10804   0 0012BE  D870 00C0                            LDR,R5   192,IMO
          0 0012C0  ECC7 000E                            LDB,B6   BUF$,AUTO
          0 0012C2  DA86                                 SRM,R5,'00F0'X    ,B6
          0 0012C3       00F0

  10804   0                              COMMON          null
     2190    10805
     2191    10806    2   COMMON:;
     2192    10807    2      K$TPDU_DR.MBZ = 0;

  10807   0 0012C4  ECC7 000E            COMMON          LDB,B6   BUF$,AUTO
          0 0012C6  8806                                 LBF,'000F'X       ,B6
          0 0012C7       000F

     2193    10808    2      K$TPDU_DR.DST_REF = TPDU_BUF.SRC_REF;

  10808   0 0012C8  ECC7 000E                            LDB,B6   BUF$,AUTO
          0 0012CA  E847 002E                            LDR,R6   TPDU_BUF+2,AUTO
          0 0012CC  EF46 0001                            STR,R6   1,B6

     2194    10809    2      K$TPDU_DR.SRC_REF = DST_REF;

  10809   0 0012CE  ECC7 000E                            LDB,B6   BUF$,AUTO
          0 0012D0  E847 001D                            LDR,R6   DST_REF,AUTO
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:289  
          0 0012D2  EF46 0002                            STR,R6   2,B6

     2195    10810
     2196    10811    2      IF (K$TPDU_DR.TYPE = %K_TPDU_TYPE_DR) AND (B$TPDU_CR.CLASS = 4)

  10811   0 0012D4  ECC7 000E                            LDB,B6   BUF$,AUTO
          0 0012D6  D806                                 LDR,R5   ,B6
          0 0012D7  5044                                 SOR,R5   4
          0 0012D8  D570 000F                            AND,R5   15,IMO
          0 0012DA  5D08                                 CMV,R5   8
          0 0012DB  0981 0032                            BNE      s:10825,PREL
          0 0012DD  C846 0003                            LDR,R4   3,B6
          0 0012DF  404C                                 SOR,R4   12
          0 0012E0  4D04                                 CMV,R4   4
          0 0012E1  0981 002C                            BNE      s:10825,PREL

     2197    10812    3      THEN DO;

     2198    10813    3           CHKOFF = K$TPDU_DR.LI + 4;

  10813   0 0012E3  B286                                 LLH,R3   ,B6
          0 0012E4  3E04                                 ADV,R3   4
          0 0012E5  BF47 0036                            STR,R3   CHKOFF,AUTO

     2199    10814    3           K$TPDU_DR.LI = K$TPDU_DR.LI + SIZEC(TPARM_CHKSUM);

  10814   0 0012E7  D286                                 LLH,R5   ,B6
          0 0012E8  5E04                                 ADV,R5   4
          0 0012E9  D786                                 STH,R5   ,B6

     2200    10815    3           FRAGSIZE = K$TPDU_DR.LI + 1;

  10815   0 0012EA  ECC7 000E                            LDB,B6   BUF$,AUTO
          0 0012EC  D286                                 LLH,R5   ,B6
          0 0012ED  5E01                                 ADV,R5   1
          0 0012EE  DF47 0037                            STR,R5   FRAGSIZE,AUTO

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:290  
     2201    10816    3           PINCRC(ADDR(K$TPDU_DR),CHKOFF-3)->B$CHAR4 = ADDR(K_CKSUM_INIT)->B$CHAR4;

  10816   0 0012F0  AB80 0000 0000  xsym                 LAB,B2   K_CKSUM_INIT
          0 0012F3  2C00                                 LDV,R2   0
          0 0012F4  6C04                                 LDV,R6   4
          0 0012F5  BB86                                 LAB,B3   ,B6
          0 0012F6  B847 0036                            LDR,R3   CHKOFF,AUTO
          0 0012F8  3EFD                                 ADV,R3   -3
          0 0012F9  0008                                 MMM

     2202    10817    3           CALL KNA$CALC_CHKSUM(BUF$, FRAGSIZE, CHKOFF);

  10817   0 0012FA  DBC7 0036                            LAB,B5   CHKOFF,AUTO
          0 0012FC  DFC7 0042                            STB,B5   BUFS_RLSD+7,AUTO
          0 0012FE  CBC7 0037                            LAB,B4   FRAGSIZE,AUTO
          0 001300  CFC7 0040                            STB,B4   BUFS_RLSD+5,AUTO
          0 001302  ABC7 000E                            LAB,B2   BUF$,AUTO
          0 001304  AFC7 003E                            STB,B2   BUFS_RLSD+3,AUTO
          0 001306  BBC7 003E                            LAB,B3   BUFS_RLSD+3,AUTO
          0 001308  CBF0 0300                            LAB,B4   768,IMO
          0 00130A  E380 0000 0000  xent                 LNJ,B6   KNA$CALC_CHKSUM
          0 00130D       0001                            DC       s:10825,PREL

     2203    10818    3           END;

     2204    10819
     2205    10820        /* NETPARM.FUNCTION should already contain the correct code to
     2206    10821           indicate OSI or CP6 style connection. If its CP6, NETPARM.NODE
     2207    10822           which was the source NODE is ok to use for destination NODE.
     2208    10823           If its OSI, we must switch .SRC_ADDR$ and .DST_ADDR$.
     2209    10824        */
     2210    10825    2      IF KN$NETPARM.FUNCTION = %K_NDATA

  10825   0 00130E  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          0 001310  E846 0014                            LDR,R6   20,B6
          0 001312  6D21                                 CMV,R6   33
          0 001313  0981 000B                            BNE      s:10832,PREL
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:291  

     2211    10826    3      THEN DO;

     2212    10827    3           TEMP$ = KN$NETPARM.SRC_ADDR$;

  10827   0 001315  DCC6 001D                            LDB,B5   29,B6
          0 001317  DFC7 0018                            STB,B5   PARM$,AUTO

     2213    10828    3           KN$NETPARM.SRC_ADDR$ = KN$NETPARM.DST_ADDR$;

  10828   0 001319  CCC6 001F                            LDB,B4   31,B6
          0 00131B  CFC6 001D                            STB,B4   29,B6

     2214    10829    3           KN$NETPARM.DST_ADDR$ = TEMP$;

  10829   0 00131D  DFC6 001F                            STB,B5   31,B6

     2215    10830    3           END;

     2216    10831
     2217    10832    2      KN$NETPARM.THDR$ = ADDR(K$TPDU_DR);

  10832   0 00131F  DCC7 000E                            LDB,B5   BUF$,AUTO
          0 001321  DFC6 000B                            STB,B5   11,B6

     2218    10833    2      KN$NETPARM.THDRSZ = K$TPDU_DR.LI + 1;

  10833   0 001323  CCC7 000E                            LDB,B4   BUF$,AUTO
          0 001325  D284                                 LLH,R5   ,B4
          0 001326  5E01                                 ADV,R5   1
          0 001327  DF46 000D                            STR,R5   13,B6

     2219    10834
     2220    10835    2      KN$NETPARM.SHDRSZ = 0;

  10835   0 001329  8746 000A                            CL       10,B6

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:292  
     2221    10836    2      KN$NETPARM.UHDRSZ = 0;

  10836   0 00132B  8746 0007                            CL       7,B6

     2222    10837    2      KN$NETPARM.MSGSZ = 0;

  10837   0 00132D  8746 0004                            CL       4,B6

     2223    10838
     2224    10839    2      IF KN$TCTX.OPTION.CONS

  10839   0 00132F  CCC7 000C                            LDB,B4   CTX$,AUTO
          0 001331  82C4 000C                            LB,'0020'X        12,B4
          0 001333       0020
          0 001334  0581 000B                            BBF      s:10845,PREL

     2225    10840    3      THEN DO;

     2226    10841    3           CALL KNH$SEND(KN$NETPARM) ALTRET(CANT_SEND);

  10841   0 001336  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 001338  CBF0 0100                            LAB,B4   256,IMO
          0 00133A  E380 0000 0000  xent                 LNJ,B6   KNH$SEND
          0 00133D       0015                            DC       s:10850,PREL

     2227    10842    3           GOTO LOG_SEND;

  10842   0 00133E  0F81 0009                            B        s:10846,PREL

     2228    10843    3           END;
     2229    10844    3      ELSE DO;

     2230    10845    3           CALL KNN$SEND(KN$NETPARM)

  10845   0 001340  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 001342  CBF0 0100                            LAB,B4   256,IMO
          0 001344  E380 0000 0000  xent                 LNJ,B6   KNN$SEND
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:293  
          0 001347       000B                            DC       s:10850,PREL

     2231    10846    4           WHENRETURN DO;

     2232    10847    4   LOG_SEND:
     2233    10848    4                CALL KNT$TR_SEND(KN$NETPARM);

  10848   0 001348  BBC7 0004            LOG_SEND        LAB,B3   @KN$NETPARM,AUTO
          0 00134A  CBF0 0100                            LAB,B4   256,IMO
          0 00134C  E380 0000 0000  xent                 LNJ,B6   KNT$TR_SEND
          0 00134F       0001                            DC       s:10849,PREL

     2234    10849    4                END;

  10849   0 001350  0F81 0001                            B        s:10850,PREL

     2235    10850    4           WHENALTRETURN DO;

     2236    10851    4   CANT_SEND:
     2237    10852                                                /*probably doesn't matter*/
     2238    10853    4                END;

  10853   0                              CANT_SEND       null
     2239    10854    3           END;

     2240    10855
     2241    10856    2      KN$NETPARM.THDR$ = BUF$;

  10856   0 001352  ECC7 000E            CANT_SEND       LDB,B6   BUF$,AUTO
          0 001354  DCC7 0004                            LDB,B5   @KN$NETPARM,AUTO
          0 001356  EFC5 000B                            STB,B6   11,B5

     2242    10857    2      RETURN;

  10857   0 001358  ECC7 0034                            LDB,B6   TPDU_BUF+8,AUTO
          0 00135A  C3C6 0001                            LNJ,B4   1,B6

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:294  
     2243    10858
     2244    10859    2   END I$RETURN_DR;
     2245    10860        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:295  
     2246    10861        /*I* NAME:  I$SET_REFWAIT
     2247    10862
     2248    10863             PURPOSE: To reset the timers and set the transport connection to
     2249    10864                      the REFWAIT state.
     2250    10865        */
     2251    10866
     2252    10867    1   I$SET_REFWAIT: PROC;

  10867   0 00135C  EFC7 0034            I$SET_REFWAIT   STB,B6   TPDU_BUF+8,AUTO

     2253    10868    2      CALL KNT$SET_REFWAIT (KN$TCTX);

  10868   0 00135E  BBC7 000C                            LAB,B3   CTX$,AUTO
          0 001360  CBF0 0100                            LAB,B4   256,IMO
          0 001362  E380 0000 0000  xent                 LNJ,B6   KNT$SET_REFWAIT
          0 001365       0001                            DC       s:10870,PREL

     2254    10869
     2255    10870    2      RETURN;

  10870   0 001366  ECC7 0034                            LDB,B6   TPDU_BUF+8,AUTO
          0 001368  C3C6 0001                            LNJ,B4   1,B6

     2256    10871    2   END I$SET_REFWAIT;
     2257    10872        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:296  
     2258    10873
     2259    10874        /*I* NAME:  I$SET_OPEN
     2260    10875
     2261    10876             PURPOSE: To set the transport connection to the OPEN state and
     2262    10877                      unqueue any LDCTs waiting for the connection to complete.
     2263    10878        */
     2264    10879
     2265    10880    1   I$SET_OPEN: PROC;

  10880   0 00136A  EFC7 0034            I$SET_OPEN      STB,B6   TPDU_BUF+8,AUTO

     2266    10881    2      KN$TCTX.STATE = %K_TSTATE_OPEN;

  10881   0 00136C  6C05                                 LDV,R6   5
          0 00136D  DCC7 000C                            LDB,B5   CTX$,AUTO
          0 00136F  E785                                 STH,R6   ,B5

     2267    10882    2      KN$TCTX.WAIT_4OPEN = '0'B;

  10882   0 001370  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 001372  8846 000D                            LBF,'0020'X       13,B6
          0 001374       0020

     2268    10883
     2269    10884    2      IF KN$TCTX.LNK$ ~= ADDR(NIL)

  10884   0 001375  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 001377  8DC6 0006                            CMN      6,B6
          0 001379  0901 000D                            BE       s:10888,PREL

     2270    10885    2      THEN CALL KNT$UNQ_OPEN(KN$TCTX.LNK$);

  10885   0 00137B  DBC6 0006                            LAB,B5   6,B6
          0 00137D  DFC7 003E                            STB,B5   BUFS_RLSD+3,AUTO
          0 00137F  BBC7 003E                            LAB,B3   BUFS_RLSD+3,AUTO
          0 001381  CBF0 0100                            LAB,B4   256,IMO
          0 001383  E380 0000 0000  xent                 LNJ,B6   KNT$UNQ_OPEN
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:297  
          0 001386       0001                            DC       s:10888,PREL

     2271    10886
     2272    10887
     2273    10888    2      RETURN;

  10888   0 001387  ECC7 0034                            LDB,B6   TPDU_BUF+8,AUTO
          0 001389  C3C6 0001                            LNJ,B4   1,B6

     2274    10889    2   END I$SET_OPEN;
     2275    10890        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:298  
     2276    10891
     2277    10892        /*I* NAME: I$CHK_PARMS
     2278    10893
     2279    10894             PURPOSE:
     2280    10895                  To check the parameters on the various TPDUs that have
     2281    10896                  been received by transport.
     2282    10897
     2283    10898
     2284    10899        */
     2285    10900    1   I$CHK_PARMS: PROC ALTRET;

  10900   0 00138B  EFC7 0034            I$CHK_PARMS     STB,B6   TPDU_BUF+8,AUTO

     2286    10901
     2287    10902                                                /* Auto Storage                       */
     2288    10903        %K$TPARM_GENERIC (NAME=K$TPARM, STCLASS=AUTO, ALGN=ALIGNED);
     2289    10938    2   DCL K$TPARM$ PTR;
     2290    10939    2   DCL PARMLEN SBIN;
     2291    10940
     2292    10941                                                /* Based Data                         */
     2293    10942    2   DCL B$TSAP CHAR(PARMLEN) BASED;
     2294    10943        %K$TPDU_GENERIC (NAME=TPDU);
     2295    11003        %K$TPARM_GENERIC (ALGN=CALIGNED);
     2296    11038        %K$TPARM_TPDUSZ (ALGN=ALIGNED, STCLASS="BASED(K$TPARM$)");
     2297    11077        %K$TPARM_OPTION (ALGN=ALIGNED, STCLASS="BASED(K$TPARM$)");
     2298    11124        %K$TPARM_TSAP_ID (ALGN=ALIGNED, STCLASS="BASED(K$TPARM$)");
     2299    11161        %K$TPARM_VERSION (ALGN=ALIGNED, STCLASS="BASED(K$TPARM$)");
     2300    11197        %K$TPARM_CHKSUM (ALGN=ALIGNED, STCLASS="BASED(K$TPARM$)");
     2301    11237        %K$TPARM_SUBSEQ (ALGN=ALIGNED, STCLASS="BASED(K$TPARM$)");
     2302    11272        %K$TPARM_CLR_INFO (ALGN=ALIGNED, STCLASS="BASED(K$TPARM$)");
     2303    11321
     2304    11322                                                /* External data                      */
     2305    11323    2   DCL K_TSAP_SZ UBIN SYMREF;
     2306    11324
     2307    11325        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:299  
     2308    11326        /* Initialize check_parmas auto.
     2309    11327        */
     2310    11328    2      K$TPARM$ = ADDR(K$TPARM);

  11328   0 00138D  DBC7 0036                            LAB,B5   K$TPARM,AUTO
          0 00138F  DFC7 0038                            STB,B5   K$TPARM$,AUTO

     2311    11329    2      GOT_CHKSUM = 0;

  11329   0 001391  8747 0024                            CL       GOT_CHKSUM,AUTO

     2312    11330    2      GOT_FCC = 0;

  11330   0 001393  8747 0023                            CL       GOT_FCC,AUTO

     2313    11331
     2314    11332    3      DO WHILE (PARMSIZE > 1 );

  11332   0 001395  E847 001A                            LDR,R6   PARMSIZE,AUTO
          0 001397  6D01                                 CMV,R6   1
          0 001398  0A81 01C2                            BALE     s:11495,PREL

     2315    11333    3           K$TPARM = PARM$->K$TPARM_GENERIC;

  11333   0 00139A  8CC7 0018                            LDI      PARM$,AUTO
          0 00139C  B856                                 LDR,R3   R6
          0 00139D  E570 7FFF                            AND,R6   32767,IMO
          0 00139F  8D47 003E                            SDI      BUFS_RLSD+3,AUTO
          0 0013A1  ECC7 003E                            LDB,B6   BUFS_RLSD+3,AUTO
          0 0013A3  304F                                 SOR,R3   15
          0 0013A4  AB86                                 LAB,B2   ,B6
          0 0013A5  A853                                 LDR,R2   R3
          0 0013A6  6C03                                 LDV,R6   3
          0 0013A7  BB87                                 LAB,B3   ,AUTO
          0 0013A8  3C6C                                 LDV,R3   108
          0 0013A9  0008                                 MMM

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:300  
     2316    11334    3           PARMLEN = K$TPARM.LEN;

  11334   0 0013AA  E847 0036                            LDR,R6   K$TPARM,AUTO
          0 0013AC  E570 00FF                            AND,R6   255,IMO
          0 0013AE  EF47 003A                            STR,R6   PARMLEN,AUTO

     2317    11335
     2318    11336    3           IF PARMLEN > PARMSIZE-2

  11336   0 0013B0  D847 001A                            LDR,R5   PARMSIZE,AUTO
          0 0013B2  5EFE                                 ADV,R5   -2
          0 0013B3  D956                                 CMR,R5   R6
          0 0013B4  0881 0009                            BAGE     s:11343,PREL

     2319    11337    4           THEN DO;

  11332   0                              SET_INVLEN      null
     2320    11338    4   SET_INVLEN:  ;
     2321    11339    4                ERRNUM = %K_REASON_LEN_INV;

  11339   0 0013B6  E870 008A            SET_INVLEN      LDR,R6   138,IMO
          0 0013B8  EF47 0006                            STR,R6   ERRNUM,AUTO

     2322    11340    4                ALTRETURN;

  11340   0 0013BA  ECC7 0034                            LDB,B6   TPDU_BUF+8,AUTO
          0 0013BC  B806                                 LDR,R3   ,B6
          0 0013BD  C3B6                                 LNJ,B4   ,B6,R3

     2323    11341    4                END;
     2324    11342
     2325    11343    4           DO SELECT (K$TPARM.CODE);

  11343   0 0013BE  C2C7 0036                            LLH,R4   K$TPARM,AUTO
          0 0013C0  C970 008C                            CMR,R4   140,IMO
          0 0013C2  0201 0015                            BL       s:11343+26,PREL
          0 0013C4  0901 0053                            BE       s:11375,PREL
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:301  
          0 0013C6  C970 00C3                            CMR,R4   195,IMO
          0 0013C8  0201 0009                            BL       s:11343+20,PREL
          0 0013CA  0901 0013                            BE       s:11348,PREL
          0 0013CC  C970 00E0                            CMR,R4   224,IMO
          0 0013CE  0981 0064                            BNE      s:11397,PREL
          0 0013D0  0F81 004E                            B        s:11382,PREL
          0 0013D2  C970 00C1                            CMR,R4   193,IMO
          0 0013D4  0981 005E                            BNE      s:11397,PREL
          0 0013D6  0F81 0057                            B        s:11389,PREL
          0 0013D8  C970 008A                            CMR,R4   138,IMO
          0 0013DA  0981 0058                            BNE      s:11397,PREL
          0 0013DC  0F81 001C                            B        s:11359,PREL

     2326    11344
     2327    11345        /* First check for the parameters that aren't limited to CR and CC.
     2328    11346        */
     2329    11347    4                SELECT(%K_TPARM_CHKSUM);

     2330    11348    4                IF PARMLEN ~= 2

  11348   0 0013DE  6D02                                 CMV,R6   2
          0 0013DF  09D7                                 BNE      s:11337,SPREL

     2331    11349    4                THEN GOTO SET_INVLEN;
     2332    11350
     2333    11351    4                IF KN$TCTX.CLASS ~= 4

  11351   0 0013E0  DCC7 000C                            LDB,B5   CTX$,AUTO
          0 0013E2  B2C5 0005                            LLH,R3   5,B5
          0 0013E4  3D04                                 CMV,R3   4
          0 0013E5  0981 0028                            BNE      s:11366,PREL

     2334    11352    4                THEN GOTO SET_INVPARM;
     2335    11353
     2336    11354    4                GOT_CHKSUM = POFFC(PARM$, TPDU$) +3;

  11354   0 0013E7  8CC7 000A                            LDI      TPDU$,AUTO
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:302  
          0 0013E9  7031                                 DCL,R7   1
          0 0013EA  8D47 003E                            SDI      BUFS_RLSD+3,AUTO
          0 0013EC  8CC7 0018                            LDI      PARM$,AUTO
          0 0013EE  7031                                 DCL,R7   1
          0 0013EF  84C7 003E                            SID      BUFS_RLSD+3,AUTO
          0 0013F1  8470 0000 0003                       AID      3,IMO
          0 0013F4  E857                                 LDR,R6   R7
          0 0013F5  EF47 0024                            STR,R6   GOT_CHKSUM,AUTO

     2337    11355    4                GOTO GET_NEXT_PARM;

  11355   0 0013F7  0F81 0147                            B        s:11488,PREL

     2338    11356
     2339    11357
     2340    11358    4                SELECT(%K_TPARM_SUBSEQ);

     2341    11359    4                SUBSEQ = K$TPARM_SUBSEQ.NUM;

  11359   0 0013F9  DCC7 0038                            LDB,B5   K$TPARM$,AUTO
          0 0013FB  B845 0001                            LDR,R3   1,B5
          0 0013FD  BF47 0021                            STR,R3   SUBSEQ,AUTO

     2342    11360
     2343    11361    4                IF PARMLEN ~= 2

  11361   0 0013FF  6D02                                 CMV,R6   2
          0 001400  0981 FFB5                            BNE      s:11337,PREL

  11361   0                              CHECK_AK        null
     2344    11362    4                THEN GOTO SET_INVLEN;
     2345    11363
     2346    11364    4   CHECK_AK:    ;
     2347    11365    4                IF TYPE ~= %K_TPDU_TYPE_AK OR KN$TCTX.CLASS ~= 4

  11365   0 001402  E847 001C            CHECK_AK        LDR,R6   TYPE,AUTO
          0 001404  6D06                                 CMV,R6   6
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:303  
          0 001405  0981 0008                            BNE      s:11366,PREL
          0 001407  ECC7 000C                            LDB,B6   CTX$,AUTO
          0 001409  D2C6 0005                            LLH,R5   5,B6
          0 00140B  5D04                                 CMV,R5   4
          0 00140C  0901 0009                            BE       s:11372,PREL

     2348    11366    5                THEN DO;

  11354   0                              SET_INVPARM     null
     2349    11367    5   SET_INVPARM:      ;
     2350    11368    5                     ERRNUM = %K_ERROR_INVPARM;

  11368   0 00140E  E870 00E2            SET_INVPARM     LDR,R6   226,IMO
          0 001410  EF47 0006                            STR,R6   ERRNUM,AUTO

     2351    11369    5                     ALTRETURN;

  11369   0 001412  ECC7 0034                            LDB,B6   TPDU_BUF+8,AUTO
          0 001414  B806                                 LDR,R3   ,B6
          0 001415  C3B6                                 LNJ,B4   ,B6,R3

     2352    11370    5                     END;
     2353    11371
     2354    11372    4                GOTO GET_NEXT_PARM;

  11372   0 001416  0F81 0128                            B        s:11488,PREL

     2355    11373
     2356    11374    4                SELECT(%K_TPARM_FCC);

     2357    11375    4                IF PARMLEN ~= 8

  11375   0 001418  6D08                                 CMV,R6   8
          0 001419  0981 FF9C                            BNE      s:11337,PREL

     2358    11376    4                THEN GOTO SET_INVLEN;
     2359    11377
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:304  
     2360    11378    4                GOT_FCC = 1;

  11378   0 00141B  3C01                                 LDV,R3   1
          0 00141C  BF47 0023                            STR,R3   GOT_FCC,AUTO

     2361    11379    4                GOTO CHECK_AK;

  11379   0 00141E  0FE4                                 B        s:11361,SPREL

     2362    11380
     2363    11381    4                SELECT(%K_TPARM_CLR_INFO);

     2364    11382    4                IF TYPE ~= %K_TPDU_TYPE_DR

  11382   0 00141F  B847 001C                            LDR,R3   TYPE,AUTO
          0 001421  3D08                                 CMV,R3   8
          0 001422  09EC                                 BNE      s:11366,SPREL

     2365    11383    4                THEN GOTO SET_INVPARM;
     2366    11384
     2367    11385    4                KN$TCTX.ERR = K$TPARM_CLR_INFO.ERR;

  11385   0 001423  DCC7 0038                            LDB,B5   K$TPARM$,AUTO
          0 001425  A2C5 0001                            LLH,R2   1,B5
          0 001427  CCC7 000C                            LDB,B4   CTX$,AUTO
          0 001429  AAC4 000E                            SRM,R2,'00FF'X    14,B4
          0 00142B       00FF

     2368    11386    4                GOTO GET_NEXT_PARM;

  11386   0 00142C  0F81 0112                            B        s:11488,PREL

     2369    11387
     2370    11388    4                SELECT(%K_TPARM_INVALID_TPDU);
             11388                         /* this is the same code for CALLING_TSAP*/

     2371    11389    4                IF TYPE = %K_TPDU_TYPE_ER
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:305  

  11389   0 00142E  B847 001C                            LDR,R3   TYPE,AUTO
          0 001430  3D07                                 CMV,R3   7
          0 001431  0901 010D                            BE       s:11488,PREL

     2372    11390    4                THEN GOTO GET_NEXT_PARM;
     2373    11391
     2374    11392    4                END/*do select*/;

     2375    11393
     2376    11394        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:306  
     2377    11395        /* Now check those that are valid only with CR or CC - all classes
     2378    11396        */
     2379    11397    3           IF (TYPE ~= %K_TPDU_TYPE_CR) AND (TYPE ~= %K_TPDU_TYPE_CC)

  11397   0 001433  B847 001C                            LDR,R3   TYPE,AUTO
          0 001435  3D0E                                 CMV,R3   14
          0 001436  0901 0003                            BE       s:11400,PREL
          0 001438  3D0D                                 CMV,R3   13
          0 001439  09D5                                 BNE      s:11366,SPREL

     2380    11398    3           THEN GOTO SET_INVPARM;
     2381    11399
     2382    11400    4           DO SELECT (K$TPARM.CODE);

  11400   0 00143A  C970 00C1                            CMR,R4   193,IMO
          0 00143C  0201 0009                            BL       s:11400+12,PREL
          0 00143E  0901 0047                            BE       s:11426,PREL
          0 001440  C970 00C2                            CMR,R4   194,IMO
          0 001442  0981 0057                            BNE      s:11441,PREL
          0 001444  0F81 0041                            B        s:11426,PREL
          0 001446  C970 00C0                            CMR,R4   192,IMO
          0 001448  0981 0051                            BNE      s:11441,PREL
          0 00144A  0F81 0001                            B        s:11402,PREL

     2383    11401    4                SELECT (%K_TPARM_TPDUSZ);

     2384    11402    4                IF PARMLEN ~= 1

  11402   0 00144C  6D01                                 CMV,R6   1
          0 00144D  0981 FF68                            BNE      s:11337,PREL

     2385    11403    4                THEN GOTO SET_INVLEN;
     2386    11404
     2387    11405    4                IF (K$TPARM_TPDUSZ.SIZE < %K_TPDUSIZE_128) OR

  11405   0 00144F  DCC7 0038                            LDB,B5   K$TPARM$,AUTO
          0 001451  A2C5 0001                            LLH,R2   1,B5
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:307  
          0 001453  2D07                                 CMV,R2   7
          0 001454  0201 0004                            BL       s:11408,PREL
          0 001456  2D0D                                 CMV,R2   13
          0 001457  0381 0009                            BLE      s:11412,PREL

     2388    11406    4                  (K$TPARM_TPDUSZ.SIZE > %K_TPDUSIZE_8192)
     2389    11407    5                THEN DO;

     2390    11408    5                     ERRNUM = %K_REASON_NEGOTIATION;

  11408   0 001459  9870 0082                            LDR,R1   130,IMO
          0 00145B  9F47 0006                            STR,R1   ERRNUM,AUTO

     2391    11409    5                     ALTRETURN;

  11409   0 00145D  ECC7 0034                            LDB,B6   TPDU_BUF+8,AUTO
          0 00145F  B806                                 LDR,R3   ,B6
          0 001460  C3B6                                 LNJ,B4   ,B6,R3

     2392    11410    5                     END;
     2393    11411
     2394    11412    4                IF (K$TPARM_TPDUSZ.SIZE > KN$TCTX.TPDUSZ_PARM

  11412   0 001461  CCC7 000C                            LDB,B4   CTX$,AUTO
          0 001463  9844 0008                            LDR,R1   8,B4
          0 001465  9570 00FF                            AND,R1   255,IMO
          0 001467  A951                                 CMR,R2   R1
          0 001468  0A81 0004                            BALE     s:11412+12,PREL
          0 00146A  3D0D                                 CMV,R3   13
          0 00146B  0901 000D                            BE       s:11418,PREL
          0 00146D  2D0B                                 CMV,R2   11
          0 00146E  0381 0012                            BLE      s:11422,PREL
          0 001470  E2C4 0005                            LLH,R6   5,B4
          0 001472  6981 000E                            BNEZ,R6  s:11422,PREL
          0 001474  82C4 000C                            LB,'0010'X        12,B4
          0 001476       0010
          0 001477  0581 0009                            BBF      s:11422,PREL
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:308  

     2395    11413    4                  AND TYPE = %K_TPDU_TYPE_CC)
     2396    11414
     2397    11415    4                  OR (K$TPARM_TPDUSZ.SIZE > %K_TPDUSIZE_2048
     2398    11416    4                  AND KN$TCTX.CLASS = 0 AND   KN$TCTX.OPTION.OSI = '1'B)
     2399    11417    5                THEN DO;

     2400    11418    5                     ERRNUM = %K_REASON_PROTOCOL;

  11418   0 001479  E870 0085                            LDR,R6   133,IMO
          0 00147B  EF47 0006                            STR,R6   ERRNUM,AUTO

     2401    11419    5                     ALTRETURN;

  11419   0 00147D  ECC7 0034                            LDB,B6   TPDU_BUF+8,AUTO
          0 00147F  B806                                 LDR,R3   ,B6
          0 001480  C3B6                                 LNJ,B4   ,B6,R3

     2402    11420    5                     END;
     2403    11421
     2404    11422    4                KN$TCTX.TPDUSZ_PARM = K$TPARM_TPDUSZ.SIZE;

  11422   0 001481  AAC4 0008                            SRM,R2,'00FF'X    8,B4
  11422   0 001483       00FF

     2405    11423    4                GOTO GET_NEXT_PARM;

  11423   0 001484  0F81 00BA                            B        s:11488,PREL

     2406    11424
     2407    11425    4                SELECT(%K_TPARM_CALLING_TSAP, %K_TPARM_CALLED_TSAP);

     2408    11426    4                IF PARMLEN > K_TSAP_SZ

  11426   0 001486  6801 0006                            BLZ,R6   s:11429,PREL
          0 001488  E900 0000 0000  xsym                 CMR,R6   K_TSAP_SZ
          0 00148B  0301 FF2A                            BG       s:11337,PREL
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:309  

     2409    11427    4                THEN GOTO SET_INVLEN;
     2410    11428
     2411    11429    4                IF ENTRY_SWITCH = %PRIMARY

  11429   0 00148D  A847 0029                            LDR,R2   ENTRY_SWITCH,AUTO
          0 00148F  2981 0008                            BNEZ,R2  s:11435,PREL

     2412    11430    5                THEN DO;

     2413    11431    5                     ERRNUM = %K_REASON_ADDRESS_UNKNOWN;

  11431   0 001491  1C03                                 LDV,R1   3
          0 001492  9F47 0006                            STR,R1   ERRNUM,AUTO

     2414    11432    5                     ALTRETURN;

  11432   0 001494  ECC7 0034                            LDB,B6   TPDU_BUF+8,AUTO
          0 001496  B806                                 LDR,R3   ,B6
          0 001497  C3B6                                 LNJ,B4   ,B6,R3

     2415    11433    5                     END;
     2416    11434
     2417    11435    4                GOTO GET_NEXT_PARM;

  11435   0 001498  0F81 00A6                            B        s:11488,PREL

     2418    11436    4                END/*do select*/;

     2419    11437
     2420    11438        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:310  
     2421    11439        /* Now check those that are valid only with CR or CC - class 1 -> 4.
     2422    11440        */
     2423    11441    3           IF KN$TCTX.CLASS = 0

  11441   0 00149A  DCC7 000C                            LDB,B5   CTX$,AUTO
          0 00149C  A2C5 0005                            LLH,R2   5,B5
          0 00149E  2901 FF6F                            BEZ,R2   s:11366,PREL

     2424    11442    3           THEN GOTO SET_INVPARM;
     2425    11443
     2426    11444    4           DO SELECT (K$TPARM.CODE);

  11444   0 0014A0  C970 0089                            CMR,R4   137,IMO
          0 0014A2  0201 0023                            BL       s:11444+38,PREL
          0 0014A4  0901 0096                            BE       s:11477,PREL
          0 0014A6  C970 00C5                            CMR,R4   197,IMO
          0 0014A8  0201 000F                            BL       s:11444+24,PREL
          0 0014AA  0901 0090                            BE       s:11477,PREL
          0 0014AC  C970 00C6                            CMR,R4   198,IMO
          0 0014AE  0201 008E                            BL       s:11486,PREL
          0 0014B0  0901 002F                            BE       s:11446,PREL
          0 0014B2  C970 00C7                            CMR,R4   199,IMO
          0 0014B4  0981 0088                            BNE      s:11486,PREL
          0 0014B6  0F81 0084                            B        s:11477,PREL
          0 0014B8  C970 00C4                            CMR,R4   196,IMO
          0 0014BA  0201 0005                            BL       s:11444+32,PREL
          0 0014BC  0901 0073                            BE       s:11472,PREL
          0 0014BE  0F81 007E                            B        s:11486,PREL
          0 0014C0  C970 008B                            CMR,R4   139,IMO
          0 0014C2  0981 007A                            BNE      s:11486,PREL
          0 0014C4  0F81 0076                            B        s:11477,PREL
          0 0014C6  C970 0087                            CMR,R4   135,IMO
          0 0014C8  0201 0009                            BL       s:11444+50,PREL
          0 0014CA  0901 0070                            BE       s:11477,PREL
          0 0014CC  C970 0088                            CMR,R4   136,IMO
          0 0014CE  0981 006E                            BNE      s:11486,PREL
          0 0014D0  0F81 006A                            B        s:11477,PREL
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:311  
          0 0014D2  C970 0086                            CMR,R4   134,IMO
          0 0014D4  0201 0005                            BL       s:11444+58,PREL
          0 0014D6  0901 0064                            BE       s:11477,PREL
          0 0014D8  0F81 0064                            B        s:11486,PREL
          0 0014DA  C970 0085                            CMR,R4   133,IMO
          0 0014DC  0981 0060                            BNE      s:11486,PREL
          0 0014DE  0F81 005C                            B        s:11477,PREL

     2427    11445    4                SELECT(%K_TPARM_OPTION);

     2428    11446    4                IF PARMLEN ~= 1

  11446   0 0014E0  6D01                                 CMV,R6   1
          0 0014E1  0981 FED4                            BNE      s:11337,PREL

     2429    11447    4                THEN GOTO SET_INVLEN;
     2430    11448
     2431    11449    4                IF K$TPARM_OPTION.EXPD

  11449   0 0014E3  CCC7 0038                            LDB,B4   K$TPARM$,AUTO
          0 0014E5  82C4 0001                            LB,'0100'X        1,B4
          0 0014E7       0100
          0 0014E8  0581 0006                            BBF      s:11451,PREL

     2432    11450    4                THEN KN$TCTX.OPTION.EXPEDITED = '1'B;

  11450   0 0014EA  8945 000C                            LBT,'0002'X       12,B5
  11450   0 0014EC       0002
          0 0014ED  0F81 0004                            B        s:11453,PREL

     2433    11451    4                ELSE KN$TCTX.OPTION.EXPEDITED = '0'B;

  11451   0 0014EF  8845 000C                            LBF,'0002'X       12,B5
  11451   0 0014F1       0002

     2434    11452
     2435    11453    4                IF TYPE = %K_TPDU_TYPE_CC
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:312  

  11453   0 0014F2  3D0D                                 CMV,R3   13
          0 0014F3  0981 0015                            BNE      s:11461,PREL
          0 0014F5  DCC7 000C                            LDB,B5   CTX$,AUTO
          0 0014F7  82C5 000C                            LB,'0001'X        12,B5
          0 0014F9       0001
          0 0014FA  0581 000E                            BBF      s:11461,PREL
          0 0014FC  82C4 0001                            LB,'0200'X        1,B4
          0 0014FE       0200
          0 0014FF  0581 0009                            BBF      s:11461,PREL

     2436    11454    4                  AND KN$TCTX.OPTION.CHKSUM ~= '0'B
     2437    11455    4                  AND K$TPARM_OPTION.CHKSUM /*means dont use chksum if set*/
     2438    11456    5                THEN DO;

     2439    11457    5                     ERRNUM = %K_REASON_NEGOTIATION;

  11457   0 001501  C870 0082                            LDR,R4   130,IMO
          0 001503  CF47 0006                            STR,R4   ERRNUM,AUTO

     2440    11458    5                     ALTRETURN;

  11458   0 001505  ECC7 0034                            LDB,B6   TPDU_BUF+8,AUTO
          0 001507  A806                                 LDR,R2   ,B6
          0 001508  C3A6                                 LNJ,B4   ,B6,R2

     2441    11459    5                     END;
     2442    11460
     2443    11461    4                IF ~(K$TPARM_OPTION.CHKSUM) AND KN$TCTX.CLASS=4

  11461   0 001509  C844 0001                            LDR,R4   1,B4
          0 00150B  4006                                 SOL,R4   6
          0 00150C  C570 8000                            AND,R4   -32768,IMO
          0 00150E  C670 8000                            XOR,R4   -32768,IMO
          0 001510  4901 000D                            BEZ,R4   s:11463,PREL
          0 001512  DCC7 000C                            LDB,B5   CTX$,AUTO
          0 001514  C2C5 0005                            LLH,R4   5,B5
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:313  
          0 001516  4D04                                 CMV,R4   4
          0 001517  0981 0006                            BNE      s:11463,PREL

     2444    11462    4                THEN KN$TCTX.OPTION.CHKSUM = '1'B;

  11462   0 001519  8945 000C                            LBT,'0001'X       12,B5
  11462   0 00151B       0001
          0 00151C  0F81 0006                            B        s:11465,PREL

     2445    11463    4                ELSE KN$TCTX.OPTION.CHKSUM = '0'B;

  11463   0 00151E  DCC7 000C                            LDB,B5   CTX$,AUTO
          0 001520  8845 000C                            LBF,'0001'X       12,B5
          0 001522       0001

     2446    11464
     2447    11465    4                IF K$TPARM_OPTION.MBZ ~= '0'B

  11465   0 001523  82C4 0001                            LB,'FC00'X        1,B4
  11465   0 001525       FC00
          0 001526  0581 0018                            BBF      s:11488,PREL

     2448    11466    5                THEN DO;

     2449    11467    5                     ERRNUM = %K_REASON_NEGOTIATION;

  11467   0 001528  C870 0082                            LDR,R4   130,IMO
          0 00152A  CF47 0006                            STR,R4   ERRNUM,AUTO

     2450    11468    5                     ALTRETURN;

  11468   0 00152C  ECC7 0034                            LDB,B6   TPDU_BUF+8,AUTO
          0 00152E  A806                                 LDR,R2   ,B6
          0 00152F  C3A6                                 LNJ,B4   ,B6,R2

     2451    11469    5                     END;
     2452    11470
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:314  
     2453    11471    4                SELECT(%K_TPARM_VERSION);

     2454    11472    4                IF PARMLEN ~= 1

  11472   0 001530  6D01                                 CMV,R6   1
          0 001531  0981 FE84                            BNE      s:11337,PREL

     2455    11473    4                THEN GOTO SET_INVLEN;
     2456    11474
     2457    11475    4                KN$TCTX.VERS = K$TPARM_VERSION.VERS;

  11475   0 001533  CCC7 0038                            LDB,B4   K$TPARM$,AUTO
          0 001535  92C4 0001                            LLH,R1   1,B4
          0 001537  97C5 0008                            STH,R1   8,B5
          0 001539  0F81 0005                            B        s:11488,PREL

     2458    11476
     2459    11477    4                SELECT(%K_TPARM_SECURITY, %K_TPARM_ALT_CLASS,

  11477   0 00153B  0F81 0003                            B        s:11488,PREL

     2460    11478    4                  %K_TPARM_ACK_TIME, %K_TPARM_THROUGHPUT,
     2461    11479    4                  %K_TPARM_ERR_RATE, %K_TPARM_PRIORITY,
     2462    11480    4                  %K_TPARM_TRANSIT_DELAY, %K_TPARM_REASS_TIME);
     2463    11481
     2464    11482        /* The map implementation didn't seem to bother with these.
     2465    11483        */
     2466    11484
     2467    11485    4                SELECT (ELSE);

     2468    11486    4           GOTO SET_INVPARM;

  11486   0 00153D  0F81 FED0                            B        s:11366,PREL

     2469    11487
     2470    11488    4                END/*do select*/;

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:315  
  11480   0                              GET_NEXT_PARM   null
     2471    11489
     2472    11490    3   GET_NEXT_PARM: ;
     2473    11491    3      PARMSIZE = PARMSIZE - PARMLEN - 2;

  11491   0 00153F  E847 001A            GET_NEXT_PARM   LDR,R6   PARMSIZE,AUTO
          0 001541  E247 003A                            SUB,R6   PARMLEN,AUTO
          0 001543  6EFE                                 ADV,R6   -2
          0 001544  EF47 001A                            STR,R6   PARMSIZE,AUTO

     2474    11492    3      PARM$ =PINCRC(PARM$,PARMLEN+2);

  11492   0 001546  8CC7 0018                            LDI      PARM$,AUTO
          0 001548  7031                                 DCL,R7   1
          0 001549  8D47 003E                            SDI      BUFS_RLSD+3,AUTO
          0 00154B  E847 003A                            LDR,R6   PARMLEN,AUTO
          0 00154D  70F0                                 DAR,R7   16
          0 00154E  8447 003E                            AID      BUFS_RLSD+3,AUTO
          0 001550  7071                                 DCR,R7   1
          0 001551  8470 0000 0001                       AID      1,IMO
          0 001554  8D47 0018                            SDI      PARM$,AUTO

     2475    11493    3           END/*do while parmsize > 0*/;

  11493   0 001556  D847 001A                            LDR,R5   PARMSIZE,AUTO
          0 001558  5D01                                 CMV,R5   1
          0 001559  0A01 FE40                            BAG      s:11333,PREL

     2476    11494
     2477    11495    2      IF PARMSIZE < 0

  11495   0 00155B  E847 001A                            LDR,R6   PARMSIZE,AUTO
          0 00155D  6881 0009                            BGEZ,R6  s:11501,PREL

     2478    11496    3      THEN DO;

     2479    11497    3           ERRNUM = %K_ERROR_INVPARM_LEN;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:316  

  11497   0 00155F  D870 00E3                            LDR,R5   227,IMO
          0 001561  DF47 0006                            STR,R5   ERRNUM,AUTO

     2480    11498    3           ALTRETURN;

  11498   0 001563  ECC7 0034                            LDB,B6   TPDU_BUF+8,AUTO
          0 001565  B806                                 LDR,R3   ,B6
          0 001566  C3B6                                 LNJ,B4   ,B6,R3

     2481    11499    3           END;
     2482    11500
     2483    11501    2      RETURN;

  11501   0 001567  ECC7 0034                            LDB,B6   TPDU_BUF+8,AUTO
          0 001569  C3C6 0001                            LNJ,B4   1,B6

     2484    11502
     2485    11503    2   END I$CHK_PARMS;
     2486    11504
     2487    11505
     2488    11506
     2489    11507        %EJECT;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:317  
     2490    11508        /* These subroutines reduce the size of procedure by only
     2491    11509           generating one external procedure call.
     2492    11510        */
     2493    11511
     2494    11512    1   I$RELCTX: PROC;

  11512   0 00156B  EFC7 0034            I$RELCTX        STB,B6   TPDU_BUF+8,AUTO

     2495    11513    2      CALL KNA$RELTCTX(CTX$);

  11513   0 00156D  DBC7 000C                            LAB,B5   CTX$,AUTO
          0 00156F  DFC7 003E                            STB,B5   BUFS_RLSD+3,AUTO
          0 001571  BBC7 003E                            LAB,B3   BUFS_RLSD+3,AUTO
          0 001573  CBF0 0100                            LAB,B4   256,IMO
          0 001575  E380 0000 0000  xent                 LNJ,B6   KNA$RELTCTX
          0 001578       0001                            DC       s:11514,PREL

     2496    11514    2      RETURN;

  11514   0 001579  ECC7 0034                            LDB,B6   TPDU_BUF+8,AUTO
          0 00157B  C3C6 0001                            LNJ,B4   1,B6

     2497    11515    2   END I$RELCTX;
     2498    11516
     2499    11517
     2500    11518
     2501    11519    1   I$SET_RETRAN: PROC;

  11519   0 00157D  EFC7 003C            I$SET_RETRAN    STB,B6   BUFS_RLSD+1,AUTO

     2502    11520    2      CALL GHS$SET_TMR (KN$TCTX.TMR_RETRAN);

  11520   0 00157F  DCC7 000C                            LDB,B5   CTX$,AUTO
          0 001581  CBC5 0050                            LAB,B4   80,B5
          0 001583  CFC7 003E                            STB,B4   BUFS_RLSD+3,AUTO
          0 001585  BBC7 003E                            LAB,B3   BUFS_RLSD+3,AUTO
          0 001587  CBF0 0100                            LAB,B4   256,IMO
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:318  
          0 001589  E380 0000 0000  xent                 LNJ,B6   GHS$SET_TMR
          0 00158C       0001                            DC       s:11521,PREL

     2503    11521    2      RETURN;

  11521   0 00158D  ECC7 003C                            LDB,B6   BUFS_RLSD+1,AUTO
          0 00158F  C3C6 0001                            LNJ,B4   1,B6

     2504    11522    2   END I$SET_RETRAN;
     2505    11523
     2506    11524
     2507    11525
     2508    11526    1   I$SET_WINDOW: PROC;

  11526   0 001591  EFC7 0034            I$SET_WINDOW    STB,B6   TPDU_BUF+8,AUTO

     2509    11527    2      CALL GHS$SET_TMR (KN$TCTX.TMR_WINDOW);

  11527   0 001593  DCC7 000C                            LDB,B5   CTX$,AUTO
          0 001595  CBC5 005A                            LAB,B4   90,B5
          0 001597  CFC7 003E                            STB,B4   BUFS_RLSD+3,AUTO
          0 001599  BBC7 003E                            LAB,B3   BUFS_RLSD+3,AUTO
          0 00159B  CBF0 0100                            LAB,B4   256,IMO
          0 00159D  E380 0000 0000  xent                 LNJ,B6   GHS$SET_TMR
          0 0015A0       0001                            DC       s:11528,PREL

     2510    11528    2      RETURN;

  11528   0 0015A1  ECC7 0034                            LDB,B6   TPDU_BUF+8,AUTO
          0 0015A3  C3C6 0001                            LNJ,B4   1,B6

     2511    11529    2   END I$SET_WINDOW;
     2512    11530
     2513    11531
     2514    11532
     2515    11533    1   I$SET_INACTIVITY: PROC;

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:319  
  11533   0 0015A5  EFC7 0036            I$SET_INACTIVITYSTB,B6   K$TPARM,AUTO

     2516    11534    2      CALL GHS$SET_TMR (KN$TCTX.TMR_INACTIVITY);

  11534   0 0015A7  DCC7 000C                            LDB,B5   CTX$,AUTO
          0 0015A9  CBC5 0064                            LAB,B4   100,B5
          0 0015AB  CFC7 003E                            STB,B4   BUFS_RLSD+3,AUTO
          0 0015AD  BBC7 003E                            LAB,B3   BUFS_RLSD+3,AUTO
          0 0015AF  CBF0 0100                            LAB,B4   256,IMO
          0 0015B1  E380 0000 0000  xent                 LNJ,B6   GHS$SET_TMR
          0 0015B4       0001                            DC       s:11535,PREL

     2517    11535    2      RETURN;

  11535   0 0015B5  ECC7 0036                            LDB,B6   K$TPARM,AUTO
          0 0015B7  C3C6 0001                            LNJ,B4   1,B6

     2518    11536    2   END I$SET_INACTIVITY;
     2519    11537
     2520    11538
     2521    11539
     2522    11540    1   I$CANCEL_RETRAN: PROC;

  11540   0 0015B9  EFC7 003C            I$CANCEL_RETRAN STB,B6   BUFS_RLSD+1,AUTO

     2523    11541    2      CALL GHS$CANCEL_TMR (KN$TCTX.TMR_RETRAN);

  11541   0 0015BB  DCC7 000C                            LDB,B5   CTX$,AUTO
          0 0015BD  CBC5 0050                            LAB,B4   80,B5
          0 0015BF  CFC7 003E                            STB,B4   BUFS_RLSD+3,AUTO
          0 0015C1  BBC7 003E                            LAB,B3   BUFS_RLSD+3,AUTO
          0 0015C3  CBF0 0100                            LAB,B4   256,IMO
          0 0015C5  E380 0000 0000  xent                 LNJ,B6   GHS$CANCEL_TMR
          0 0015C8       0001                            DC       s:11542,PREL

     2524    11542    2      RETURN;

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:320  
  11542   0 0015C9  ECC7 003C                            LDB,B6   BUFS_RLSD+1,AUTO
          0 0015CB  C3C6 0001                            LNJ,B4   1,B6

     2525    11543    2   END I$CANCEL_RETRAN;
     2526    11544
     2527    11545
     2528    11546
     2529    11547    1   I$CANCEL_WINDOW: PROC;

  11547   0 0015CD  EFC7 0034            I$CANCEL_WINDOW STB,B6   TPDU_BUF+8,AUTO

     2530    11548    2      CALL GHS$CANCEL_TMR (KN$TCTX.TMR_WINDOW);

  11548   0 0015CF  DCC7 000C                            LDB,B5   CTX$,AUTO
          0 0015D1  CBC5 005A                            LAB,B4   90,B5
          0 0015D3  CFC7 003E                            STB,B4   BUFS_RLSD+3,AUTO
          0 0015D5  BBC7 003E                            LAB,B3   BUFS_RLSD+3,AUTO
          0 0015D7  CBF0 0100                            LAB,B4   256,IMO
          0 0015D9  E380 0000 0000  xent                 LNJ,B6   GHS$CANCEL_TMR
          0 0015DC       0001                            DC       s:11549,PREL

     2531    11549    2      RETURN;

  11549   0 0015DD  ECC7 0034                            LDB,B6   TPDU_BUF+8,AUTO
          0 0015DF  C3C6 0001                            LNJ,B4   1,B6

     2532    11550    2   END I$CANCEL_WINDOW;
     2533    11551
     2534    11552
     2535    11553
     2536    11554    1   I$CANCEL_INACTIVITY: PROC;

  11554   0 0015E1  EFC7 0034            I$CANCEL_INACTI*STB,B6   TPDU_BUF+8,AUTO

     2537    11555    2      CALL GHS$CANCEL_TMR (KN$TCTX.TMR_INACTIVITY);

  11555   0 0015E3  DCC7 000C                            LDB,B5   CTX$,AUTO
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:321  
          0 0015E5  CBC5 0064                            LAB,B4   100,B5
          0 0015E7  CFC7 003E                            STB,B4   BUFS_RLSD+3,AUTO
          0 0015E9  BBC7 003E                            LAB,B3   BUFS_RLSD+3,AUTO
          0 0015EB  CBF0 0100                            LAB,B4   256,IMO
          0 0015ED  E380 0000 0000  xent                 LNJ,B6   GHS$CANCEL_TMR
          0 0015F0       0001                            DC       s:11556,PREL

     2538    11556    2      RETURN;

  11556   0 0015F1  ECC7 0034                            LDB,B6   TPDU_BUF+8,AUTO
          0 0015F3  C3C6 0001                            LNJ,B4   1,B6

     2539    11557    2   END I$CANCEL_INACTIVITY;
     2540    11558
     2541    11559
     2542    11560
     2543    11561        /*I* NAME: TRANSPORT_SCREECH
     2544    11562
     2545    11563             PURPOSE: To provide a common routine for unrecoverable
     2546    11564                      errors detected by the KNT$RECV module.
     2547    11565        */
     2548    11566
     2549    11567    1   TRANSPORT_SCREECH: PROC;

  11567   0 0015F5  EFC7 0038            TRANSPORT_SCREE*STB,B6   K$TPARM$,AUTO

     2550    11568
     2551    11569    2      CALL SCREECH(KNT_SCODE);

  11569   0 0015F7  BB80 0000 0000  01                   LAB,B3   0
          0 0015FA  CBF0 0100                            LAB,B4   256,IMO
          0 0015FC  E380 0000 0000  xent                 LNJ,B6   SCREECH
          0 0015FF       0001                            DC       s:11572,PREL

     2552    11570
     2553    11571
     2554    11572    2   END TRANSPORT_SCREECH;
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:322  

  11572   0 001600  ECC7 0038                            LDB,B6   K$TPARM$,AUTO
          0 001602  C3C6 0001                            LNJ,B4   1,B6
     2555    11573    1   END KNT$RECV;
     2556    11574        %EOD;

PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:323  
--  Include file information  --

   GH_GATE_M.:E05TOU  cannot be made into a system file and is referenced.
   GH_SCHD_M.:E05TOU  is referenced.
   KNH_MACRO_C.:E05TOU  is referenced.
   K_TRANSPORT_M.:E05TOU  is referenced.
   K_TRANSPORT_E.:E05TOU  is referenced.
   KN_DATA_M.:E05TOU  is referenced.
   K_QDPHDRS_M.:E05TOU  is referenced.
   K_INTERFACE_M.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KNT$RECV.
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:324  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @KN$NETPARM                E-0-0/w PTR         r     1 BUF$
    3B-0-0/w UBIN(16)    r     1 BUFS_RLSD                 11-0-0/w SBIN(16)    r     1 CDT
    11-0-0/w UBIN(16)    r     1 CDT_UBIN                  36-0-0/w SBIN(16)    r     1 CHKOFF
    2A-0-0/w STRC(16)    r     1 CLOCK_ID                   C-0-0/w PTR         r     1 CTX$
     7-0-0/w PTR         r     1 DATA$                      9-0-0/w SBIN(16)    r     1 DATASIZE
    1D-0-0/w SBIN(16)    r     1 DST_REF                   22-0-0/w UBIN(16)    r     1 DUPLICATE_AK
    29-0-0/w UBIN(16)    r     1 ENTRY_SWITCH              20-0-0/w BIT         r     1 EOT
     6-0-0/w SBIN(16)    r     1 ERRNUM                    3A-0-0/w SBIN(16)    r     1 EXTRA
    37-0-0/w SBIN(16)    r     1 FRAGSIZE                  24-0-0/w UBIN(16)    r     1 GOT_CHKSUM
    23-0-0/w UBIN(16)    r     1 GOT_FCC                   36-0-0/w PTR         r     1 HDR$
    26-0-0/w PTR         r     1 HOST_TPDU$                26-0-0/w PTR         r     1 HOST_TPDUC$
    36-0-0/w STRC(24)    r     1 K$TPARM                   38-0-0/w PTR         r     1 K$TPARM$
    *0-0-0/w STRC(528)   r     1 KN$NETPARM                28-0-0/b BIT         r     1 LDCT_CIRCUIT
    1F-0-0/w SBIN(16)    r     1 LI                        16-0-0/w PTR         r     1 NEXT$
    10-0-0/w SBIN(16)    r     1 NEXT_SZ                   18-0-0/w PTR         r     1 PARM$
    3A-0-0/w SBIN(16)    r     1 PARMLEN                   1A-0-0/w SBIN(16)    r     1 PARMSIZE
    25-0-0/w UBIN(16)    r     1 REASON                    21-0-0/w UBIN(16)    r     1 SUBSEQ
    38-0-0/w PTR         r     1 SVHDR$                    1E-0-0/w UBIN(16)    r     1 TCTX#
    2A-0-0/w SBIN(16)    r     1 TEMP                      18-0-0/w PTR         r     1 TEMP$
    2B-0-0/w UBIN(16)    r     1 TEMP2                      A-0-0/w PTR         r     1 TPDU$
    1B-0-0/w SBIN(16)    r     1 TPDUSIZE                  2C-0-0/w STRC(128)   r     1 TPDU_BUF
    14-0-0/w UBIN(32)    r     1 TPDU_NR                   1C-0-0/w SBIN(16)    r     1 TYPE
    12-0-0/w UBIN(32)    r     1 YR_TU_NR

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(16)    r     1 KNT_CHKSUM_ERR             0-0-0/w UBIN(16)    r     1 KNT_DISCARDED_TPDUS
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:325  
     0-0-0/w UBIN(16)    r     1 KNT_DO_CHKSUM              0-0-0/w UBIN(16)    r     1 KNT_ERROR_SCREECH
     0-0-0/w UBIN(16)    r     1 KNT_HOLDBACK               0-0-0/w UBIN(32)    r     1 KNT_SCODE
     0-0-0/w UBIN(16)    r     1 KNT_TRACE_CLASS4
     0-0-0/w UBIN(16)    r     1 KNT_TRACE_INTERMEDIATE
     0-0-0/w UBIN(16)    r     1 KNT_TRACE_OSI              0-0-0/w UBIN(16)    r     1 KNT_UNQ_LDCT
     0-0-0/w UBIN(16)    r     1 KNT_WAIT_COUNT             0-0-0/w PTR         r     1 KNT_WAIT_HEAD$
     0-0-0/w UBIN(16)    r     1 KNT_WINDOW_NORMAL          0-0-0/w PTR         r     1 KN_DCT$$
     0-0-0/w PTR         r     1 KN_TCTX$$                  0-0-0/w UBIN(16)    r     1 KN_TCTX_MAX#
     0-0-0/c CHAR(4)     r     1 K_CKSUM_INIT
     0-0-0/w UBIN(16)    r     1 K_TPDUSZ_VALUES(0:14)
     0-0-0/w UBIN(16)    r     1 K_TPDU_SIZE(0:15)
     0-0-0/w UBIN(16)    r     1 K_TPDU_SIZE_EXT(0:15)
     0-0-0/w UBIN(16)    r     1 K_TSAP_SZ

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(4)     r     1 B$CHAR4                    0-0-0/w STRC(32)    r     1 B$NHDR
     0-0-0/w STRC(80)    r     1 B$TPARM_FCC                0-0-0/w STRC(40)    r     1 B$TPDU_AK
     0-0-0/w STRC(80)    r     1 B$TPDU_AK_EXT              0-0-0/c STRC(56)    r     1 B$TPDU_CR
     0-0-0/w STRC(56)    r     1 B$TPDU_DR                  0-0-0/w STRC(40)    r     1 B$TPDU_DT
     0-0-0/c STRC(24)    r     1 B$TPDU_DT_0                0-0-0/c STRC(40)    r     1 B$TPDU_DT_C
     0-0-0/w STRC(64)    r     1 B$TPDU_DT_EXT              0-0-0/w STRC(40)    r     1 B$TPDU_EA
     0-0-0/w STRC(64)    r     1 B$TPDU_EA_EXT              0-0-0/w STRC(160)   r     1 B$TR_OPTIONS
     0-0-0/c ACHR        r     1 CHRBSD                     0-0-0/w STRC(128)   r     1 FRAG_HDR
     0-0-0/w STRC(24)    r     1 K$TPARM_CLR_INFO           0-0-0/c STRC(24)    r     1 K$TPARM_GENERIC
     0-0-0/w STRC(24)    r     1 K$TPARM_OPTION             0-0-0/w STRC(32)    r     1 K$TPARM_SUBSEQ
     0-0-0/w STRC(24)    r     1 K$TPARM_TPDUSZ             0-0-0/w STRC(24)    r     1 K$TPARM_VERSION
     0-0-0/w STRC(48)    r     1 K$TPDU_CP6_FLOW            0-0-0/w STRC(56)    r     1 K$TPDU_DR
     0-0-0/w STRC(256)   r     1 KN$LDCT
     0-0-0/w PTR         r     1 KN$LDCT$(0:0)
     0-0-0/w STRC(2816)  r     1 KN$TCTX
     0-0-0/w PTR         r     1 KN$TCTX$(0:0)
     0-0-0/c STRC(176)   r     1 NSAP                       0-0-0/c STRC(32)    r     1 TPARM_CHKSUM
     0-0-0/c STRC(48)    r     1 TPDU_DC                    0-0-0/c STRC(56)    r     1 TPDU_DR
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:326  


   Procedure KNT$RECV requires 5636 words for executable code.
   Procedure KNT$RECV requires 72 words of local(AUTO) storage.
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:327  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:328  
          MINI XREF LISTING

ACK_CLASS2
     10075**LABEL   10006--GOTO
ACK_DT
     10097**LABEL   10080--GOTO
ACK_DUP_ED
      9927**LABEL    9923--GOTO
B$CHAR4
      8494**DCL     10816<<ASSIGN  10816>>ASSIGN
B$NHDR.DEST_NODE
      8454**DCL      9069>>ASSIGN   9074>>ASSIGN
B$NHDR.SOURCE_NODE
      8460**DCL      9068>>ASSIGN   9075>>ASSIGN  10188>>IF
B$TPARM_FCC.CODE
      8132**DCL     10061<<ASSIGN
B$TPARM_FCC.FCC.CDT
      8153**DCL     10065<<ASSIGN
B$TPARM_FCC.FCC.LWE
      8143**DCL     10063<<ASSIGN
B$TPARM_FCC.FCC.YR_SUBSEQ
      8147**DCL     10064<<ASSIGN
B$TPARM_FCC.LEN
      8138**DCL     10062<<ASSIGN
B$TPDU_AK.CDT
      7797**DCL      9996>>ASSIGN
B$TPDU_AK.YR_TU_NR
      7808**DCL      9995>>ASSIGN
B$TPDU_AK_EXT.CDT
      7851**DCL      9992>>ASSIGN
B$TPDU_AK_EXT.YR_TU_NR
      7847**DCL      9991>>ASSIGN
B$TPDU_CR.CDT
      7675**DCL      9244<<ASSIGN
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:329  
B$TPDU_CR.CLASS
      7694**DCL      8970>>IF       8977>>IF       8977>>IF       8977>>IF       8977>>IF       8977>>IF
      9082>>ASSIGN   9314>>IF       9314>>IF       9314>>IF       9324>>IF       9327>>IF       9329>>IF
      9338>>IF       9341>>IF       9347>>ASSIGN   9358>>IF      10811>>IF
B$TPDU_CR.CLASS_2_FLOW
      7707**DCL      9132>>IF      10284>>IF
B$TPDU_CR.DST_REF
      7679**DCL      9424<<ASSIGN   9428<<ASSIGN
B$TPDU_CR.EXT_FMT_FLAG
      7702**DCL     10280>>ASSIGN
B$TPDU_CR.SRC_REF
      7687**DCL      9229<<ASSIGN   9423<<ASSIGN
B$TPDU_DR.REASON
      7896**DCL      9576>>ASSIGN   9586>>ASSIGN
B$TPDU_DT
      7917**DCL      9805--ASSIGN   9807--ASSIGN
B$TPDU_DT.EOT
      7939**DCL      9678>>ASSIGN   9810<<ASSIGN
B$TPDU_DT.LI
      7918**DCL      9807<<ASSIGN
B$TPDU_DT.TPDU_NR
      7945**DCL      9681>>ASSIGN   9809<<ASSIGN   9918>>ASSIGN
B$TPDU_DT.TYPE
      7925**DCL      9808<<ASSIGN
B$TPDU_DT_0
      8081**DCL      8828--IF       8928--ASSIGN
B$TPDU_DT_0.EOT
      8098**DCL      9673>>ASSIGN
B$TPDU_DT_C.DST_REF
      7982**DCL      9747<<ASSIGN  10320<<ASSIGN  10335<<ASSIGN
B$TPDU_DT_EXT.TPDU_NR
      8046**DCL      9680>>ASSIGN   9917>>ASSIGN
B$TPDU_EA.YR_EDTU_NR
      7738**DCL      9976>>ASSIGN
B$TPDU_EA_EXT.YR_TU_NR
      7764**DCL      9975>>ASSIGN
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:330  
B$TR_OPTIONS.QOS
      8210**DCL      9225>>ASSIGN
B$TR_OPTIONS.TPDUSIZE
      8186**DCL      8187--REDEF
B$TR_OPTIONS.TPDUSZ_PARM
      8187**DCL      9223>>ASSIGN
B$TR_OPTIONS.TR_FLAGS.CLNS
      8239**DCL      9220>>IF
B$TR_OPTIONS.TR_FLAGS.TRACE
      8233**DCL      9217>>IF
B$TR_OPTIONS.WINDOWSZ
      8194**DCL      9224>>ASSIGN
BAD_AK
     10016**LABEL   10012--GOTO
BAD_DST_REF
      8873**LABEL    8863--GOTO     8871--GOTO
BAD_TPDU_LEN
      8828**LABEL    8824--GOTO     8829--GOTO     8917--GOTO
BUF$
      6339**DCL      7661--IMP-PTR  7730--IMP-PTR  7756--IMP-PTR  7782--IMP-PTR  7830--IMP-PTR  7874--IMP-PTR
      7917--IMP-PTR  7967--IMP-PTR  8017--IMP-PTR  8081--IMP-PTR  8128--IMP-PTR  8724<<ASSIGN   8746>>ASSIGN
      8970>>IF       8977>>IF       8977>>IF       8977>>IF       8977>>IF       8977>>IF       9082>>ASSIGN
      9132>>IF       9314>>IF       9314>>IF       9314>>IF       9324>>IF       9327>>IF       9329>>IF
      9338>>IF       9341>>IF       9347>>ASSIGN   9358>>IF       9576>>ASSIGN   9586>>ASSIGN   9673>>ASSIGN
      9678>>ASSIGN   9680>>ASSIGN   9681>>ASSIGN   9807>>ASSIGN   9808>>ASSIGN   9809>>ASSIGN   9810>>ASSIGN
      9917>>ASSIGN   9918>>ASSIGN   9975>>ASSIGN   9976>>ASSIGN   9991>>ASSIGN   9992>>ASSIGN   9995>>ASSIGN
      9996>>ASSIGN  10060>>ASSIGN  10061>>ASSIGN  10062>>ASSIGN  10063>>ASSIGN  10064>>ASSIGN  10065>>ASSIGN
     10280>>ASSIGN  10284>>IF      10380--IMP-PTR 10506>>ASSIGN  10507>>ASSIGN  10508>>ASSIGN  10509>>ASSIGN
     10510>>ASSIGN  10516>>ASSIGN  10638--IMP-PTR 10796>>ASSIGN  10797>>ASSIGN  10798>>ASSIGN  10803>>ASSIGN
     10804>>ASSIGN  10807>>ASSIGN  10808>>ASSIGN  10809>>ASSIGN  10811>>IF      10811>>IF      10813>>ASSIGN
     10814>>ASSIGN  10814>>ASSIGN  10815>>ASSIGN  10816>>ASSIGN  10817<>CALL    10832>>ASSIGN  10833>>ASSIGN
     10856>>ASSIGN
BUFS_RLSD IN PROCEDURE I$DO_ACK
     10362**DCL     10439<<ASSIGN  10454<<ASSIGN  10454>>ASSIGN  10532>>IF
BYPASS_TDISCONN
      9377**LABEL    9373--GOTO
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:331  
CANT_REASSEM
      9747**LABEL    9773--CALLALT
CANT_SEND IN PROCEDURE I$RETURN_DR
     10853**LABEL   10841--CALLALT
CC_ERROR
      9370**LABEL    9321--GOTO     9362--GOTO
CDT
      6341**DCL      6342--REDEF    9858<<ASSIGN   9860>>IF       9861<<ASSIGN   9861>>ASSIGN   9863>>IF
      9867>>IF       9992<<ASSIGN   9996<<ASSIGN  10065>>ASSIGN  10099>>IF      10463>>ASSIGN
CDT_UBIN
      6342**DCL     10039>>IF      10048>>IF      10055>>IF
CHECK_AK IN PROCEDURE I$CHK_PARMS
     11361**LABEL   11379--GOTO
CHECK_CC_PARMS
      9358**LABEL    9356--GOTO
CHKOFF IN PROCEDURE I$RETURN_DR
     10619**DCL     10813<<ASSIGN  10816>>ASSIGN  10817<>CALL
CHRBSD
      8492**DCL      8746<<ASSIGN   8746>>ASSIGN   9100<<ASSIGN   9100>>ASSIGN   9102<<ASSIGN   9102>>ASSIGN
      9106<<ASSIGN   9106>>ASSIGN   9108<<ASSIGN   9108>>ASSIGN  10238>>IF      10238>>IF
CLASS_4_OPENED
      9665**LABEL    9886--GOTO
CLOCK_ID
      6370**DCL     10199<>CALL
CLOCK_ID.TCTX
      6371**DCL     10197<<ASSIGN
CLOCK_ID.TMR
      6372**DCL     10198<<ASSIGN
COMMON
      8719**LABEL    8614--GOTO     8716--GOTO
COMMON IN PROCEDURE I$RETURN_DR
     10804**LABEL   10800--GOTO
CONT_ACK
     10117**LABEL   10078--GOTO    10099--GOTO
COUNT_BAD_CHKSUM
      8798**LABEL    9151--GOTO
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:332  
CTX$
      6338**DCL      6496--IMP-PTR  8625<<ASSIGN   8626>>IF       8628>>IF       8630>>IF       8630>>IF
      8633>>IF       8635>>IF       8639>>ASSIGN   8640>>ASSIGN   8641>>ASSIGN   8643>>CALL     8645>>IF
      8656>>IF       8658>>IF       8663>>ASSIGN   8666>>IF       8668>>ASSIGN   8680>>IF       8681>>CALL
      8693>>IF       8722<<ASSIGN   8795>>ASSIGN   8795>>ASSIGN   8865<<ASSIGN   8866>>IF       8897>>ASSIGN
      8898>>ASSIGN   8903>>IF       8914>>IF       8924>>IF       8926>>IF       8953>>IF       8954>>IF
      8954>>IF       9005<<ASSIGN   9007>>IF       9008>>ASSIGN   9015>>ASSIGN   9016>>ASSIGN   9047<>CALL
      9054>>ASSIGN   9055>>ASSIGN   9059>>ASSIGN   9064>>ASSIGN   9068>>ASSIGN   9069>>ASSIGN   9074>>ASSIGN
      9075>>ASSIGN   9080>>ASSIGN   9082>>ASSIGN   9084>>IF       9085>>ASSIGN   9089>>ASSIGN   9090>>ASSIGN
      9094>>ASSIGN   9095>>ASSIGN   9100>>ASSIGN   9102>>ASSIGN   9106>>ASSIGN   9108>>ASSIGN   9113>>ASSIGN
      9130>>IF       9132>>IF       9139>>ASSIGN   9140>>ASSIGN   9146>>IF       9160>>ASSIGN   9164>>ASSIGN
      9164>>ASSIGN   9166>>ASSIGN   9173>>ASSIGN   9174>>ASSIGN   9185>>IF       9187>>IF       9188>>ASSIGN
      9189>>ASSIGN   9194>>IF       9195>>CALL     9197>>ASSIGN   9212>>ASSIGN   9213>>ASSIGN   9218>>ASSIGN
      9221>>ASSIGN   9223>>ASSIGN   9224>>ASSIGN   9225>>ASSIGN   9229>>ASSIGN   9240>>IF       9243>>IF
      9244>>ASSIGN   9246>>IF       9247>>ASSIGN   9248>>ASSIGN   9260>>ASSIGN   9276>>ASSIGN   9302>>IF
      9302>>IF       9311>>ASSIGN   9312>>ASSIGN   9320>>ASSIGN   9324>>IF       9327>>IF       9334>>ASSIGN
      9335>>ASSIGN   9339>>ASSIGN   9342>>ASSIGN   9347>>ASSIGN   9349>>IF       9350>>ASSIGN   9352>>IF
      9353>>ASSIGN   9361>>ASSIGN   9370>>ASSIGN   9372>>IF       9375>>IF       9380>>IF       9383>>IF
      9385>>ASSIGN   9388>>ASSIGN   9392>>IF       9392>>IF       9395>>ASSIGN   9396<>CALL     9405>>IF
      9412>>IF       9412>>IF       9415>>CALL     9419>>ASSIGN   9423>>ASSIGN   9424>>ASSIGN   9428>>ASSIGN
      9430>>ASSIGN   9432>>IF       9433>>ASSIGN   9434>>ASSIGN   9443>>ASSIGN   9448>>IF       9460>>IF
      9474>>IF       9475>>CALL     9480>>IF       9483>>IF       9483>>IF       9489>>IF       9489>>IF
      9489>>IF       9494>>IF       9496>>IF       9498>>ASSIGN   9501>>ASSIGN   9520>>IF       9546>>IF
      9549<<ASSIGN   9555<<ASSIGN   9557>>IF       9563>>IF       9571>>CALL     9573>>DOCASE   9576>>ASSIGN
      9586>>ASSIGN   9590>>ASSIGN   9602>>IF       9602>>IF       9604>>ASSIGN   9629>>IF       9629>>IF
      9632>>IF       9635>>IF       9640>>IF       9640>>IF       9647>>ASSIGN   9663>>IF       9668>>IF
      9671>>IF       9674>>ASSIGN   9679>>IF       9684>>DOWHILE  9685>>ASSIGN   9688>>IF       9688>>IF
      9691>>IF       9694>>ASSIGN   9698>>IF       9704>>IF       9704>>IF       9706>>IF       9706>>IF
      9712>>IF       9712>>IF       9716>>ASSIGN   9716>>ASSIGN   9718>>IF       9721>>ASSIGN   9723>>ASSIGN
      9727>>IF       9737>>IF       9740>>IF       9744>>CALL     9746>>IF       9747>>ASSIGN   9761>>IF
      9762>>ASSIGN   9765>>IF       9767>>IF       9767>>IF       9769>>ASSIGN   9780>>IF       9789>>IF
      9791>>IF       9793>>ASSIGN   9793>>ASSIGN   9798>>IF       9818>>ASSIGN   9823>>IF       9824>>ASSIGN
      9824>>ASSIGN   9829>>ASSIGN   9829>>ASSIGN   9831>>IF       9831>>IF       9832>>ASSIGN   9832>>ASSIGN
      9832>>ASSIGN   9835>>IF       9835>>IF       9837>>IF       9838>>ASSIGN   9840>>IF       9841>>ASSIGN
      9841>>ASSIGN   9844>>IF       9844>>IF       9844>>IF       9847>>ASSIGN   9853>>IF       9853>>IF
      9853>>IF       9853>>IF       9853>>IF       9858>>ASSIGN   9858>>ASSIGN   9861>>ASSIGN   9863>>IF
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:333  
      9867>>IF       9867>>IF       9877>>IF       9878>>ASSIGN   9883>>IF       9903>>IF       9908>>IF
      9911>>IF       9916>>IF       9920>>IF       9922>>IF       9925>>IF       9925>>IF       9927>>ASSIGN
      9927>>ASSIGN   9929>>ASSIGN   9929>>ASSIGN   9943>>ASSIGN   9949>>ASSIGN   9949>>ASSIGN   9950>>IF
      9950>>IF       9951>>ASSIGN   9954>>IF       9969>>IF       9974>>IF       9978>>IF       9989>>IF
      9999>>IF      10000>>ASSIGN  10001>>ASSIGN  10005>>IF      10008>>IF      10010>>IF      10015>>IF
     10019>>ASSIGN  10019>>ASSIGN  10022>>IF      10028>>IF      10028>>IF      10031>>ASSIGN  10031>>ASSIGN
     10039>>IF      10039>>IF      10039>>IF      10048>>IF      10048>>IF      10051>>IF      10051>>IF
     10055>>IF      10072>>ASSIGN  10075>>IF      10083>>IF      10089>>IF      10101>>IF      10101>>IF
     10102>>ASSIGN  10102>>ASSIGN  10103>>ASSIGN  10117>>IF      10118>>IF      10119>>CALL    10127>>IF
     10127>>IF      10133>>IF      10136>>IF      10142>>ASSIGN  10143>>ASSIGN  10148>>IF      10180<<ASSIGN
     10182>>IF      10182>>IF      10182>>IF      10182>>IF      10182>>IF      10182>>IF      10182>>IF
     10188>>IF      10191>>IF      10194>>IF      10194>>IF      10203>>ASSIGN  10204>>CALL    10226<<ASSIGN
     10228>>IF      10228>>IF      10246<<ASSIGN  10248>>IF      10254>>IF      10280>>ASSIGN  10282>>IF
     10285>>ASSIGN  10289>>IF      10291>>ASSIGN  10292>>ASSIGN  10293>>ASSIGN  10293>>ASSIGN  10297>>ASSIGN
     10299>>ASSIGN  10299>>ASSIGN  10301>>ASSIGN  10320>>ASSIGN  10323>>ASSIGN  10334>>ASSIGN  10334>>ASSIGN
     10335>>ASSIGN  10339>>IF      10437>>ASSIGN  10444>>IF      10444>>IF      10448>>ASSIGN  10450>>IF
     10451>>ASSIGN  10453>>CALL    10455>>ASSIGN  10462>>ASSIGN  10463>>ASSIGN  10463>>ASSIGN  10465>>DOWHILE
     10465>>DOWHILE 10466>>ASSIGN  10466>>ASSIGN  10466>>ASSIGN  10472>>IF      10474>>IF      10475>>IF
     10475>>IF      10475>>IF      10483>>ASSIGN  10492>>ASSIGN  10492>>ASSIGN  10494>>ASSIGN  10496>>IF
     10496>>IF      10499>>ASSIGN  10501>>IF      10502>>CALL    10504>>IF      10509>>ASSIGN  10517>>ASSIGN
     10521>>ASSIGN  10524>>IF      10540>>ASSIGN  10546>>ASSIGN  10547>>IF      10548>>ASSIGN  10550>>CALL
     10552>>IF      10552>>IF      10552>>IF      10552>>IF      10578>>IF      10581>>ASSIGN  10839>>IF
     10868>>CALL    10881>>ASSIGN  10882>>ASSIGN  10884>>IF      10885>>CALL    11351>>IF      11365>>IF
     11385>>ASSIGN  11412>>IF      11412>>IF      11412>>IF      11422>>ASSIGN  11441>>IF      11450>>ASSIGN
     11451>>ASSIGN  11453>>IF      11461>>IF      11462>>ASSIGN  11463>>ASSIGN  11475>>ASSIGN  11513<>CALL
     11520>>CALL    11527>>CALL    11534>>CALL    11541>>CALL    11548>>CALL    11555>>CALL
DATA$
      6335**DCL      8766<<ASSIGN   8782<<ASSIGN   8944>>ASSIGN   9744<>CALL     9812>>ASSIGN
DATASIZE
      6336**DCL      8767<<ASSIGN   8783<<ASSIGN   8945>>ASSIGN   8970>>IF       8970>>IF       9358>>IF
      9358>>IF       9744<>CALL     9813>>ASSIGN   9898>>IF
DELIVER_2SESSION
      9727**LABEL    9695--GOTO
DISCARD_TPDU
      8806**LABEL    8894--GOTO     9012--GOTO     9729--GOTO    10023--GOTO    10032--GOTO
DONT_TERM_YET
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:334  
      8685**LABEL    8636--GOTO
DST_REF
      6351**DCL      8753<<ASSIGN   8754<<ASSIGN   8846>>IF       8848<<ASSIGN   8862>>IF       8865>>ASSIGN
      8875<<ASSIGN   8882>>IF       9305<<ASSIGN   9503<<ASSIGN   9547>>IF      10809>>ASSIGN
DUPLICATE_AK
      6356**DCL     10003<<ASSIGN  10043<<ASSIGN  10077>>IF
ENTRY_SWITCH
      6364**DCL      8612<<ASSIGN   8715<<ASSIGN   8719<<ASSIGN   8811>>IF       8900>>IF       8942>>IF
      8966>>IF       8993>>IF       9001>>IF       9057>>IF       9066>>IF       9072>>IF       9079>>IF
      9097>>IF       9144>>IF       9171>>IF       9210>>IF       9238>>IF       9310>>IF       9403>>IF
      9421>>IF       9426>>IF       9455>>IF       9543>>IF      10190>>IF      10793>>IF      11429>>IF
EOT
      6354**DCL      9673<<ASSIGN   9678<<ASSIGN   9740>>IF       9744<>CALL     9761>>IF
ERRNUM
      6334**DCL      8792<<ASSIGN   8799<<ASSIGN   8808>>ASSIGN   8836<<ASSIGN   8850<<ASSIGN   8893<<ASSIGN
      8972<<ASSIGN   8985<<ASSIGN   9010<<ASSIGN   9028<<ASSIGN   9049<<ASSIGN   9124>>IF       9126>>ASSIGN
      9134<<ASSIGN   9307<<ASSIGN   9319<<ASSIGN   9360<<ASSIGN   9368>>IF       9370>>ASSIGN   9651<<ASSIGN
      9665<<ASSIGN   9729<<ASSIGN   9900<<ASSIGN   9905<<ASSIGN   9971<<ASSIGN  10020<<ASSIGN  10032<<ASSIGN
     10158<<ASSIGN  10261<<ASSIGN  11339<<ASSIGN  11368<<ASSIGN  11408<<ASSIGN  11418<<ASSIGN  11431<<ASSIGN
     11457<<ASSIGN  11467<<ASSIGN  11497<<ASSIGN
EXTRA IN PROCEDURE I$DO_ACK
     10361**DCL     10492<<ASSIGN  10493>>IF      10494<<ASSIGN  10494>>ASSIGN  10496>>IF
FIND_PARMS
      8932**LABEL    8844--GOTO     8859--GOTO
FIX_LWE
      9835**LABEL    9774--GOTO
FIX_RECV_EXPD
      9939**LABEL    9931--GOTO
FRAGSIZE IN PROCEDURE I$RETURN_DR
     10620**DCL     10815<<ASSIGN  10817<>CALL
FRAG_HDR
      8345**DCL     10453<>CALL    10550<>CALL
FRAG_HDR.LINK$
      8370**DCL     10448>>ASSIGN  10546>>ASSIGN
FRAG_HDR.SEQ
      8358**DCL      8359--REDEF    9767>>IF       9844>>IF      10000>>ASSIGN  10444>>IF      10444>>IF
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:335  
     10542>>IF
FRAG_HDR.SEQ_SBIN
      8359**DCL     10444>>IF
GET_NEXT_PARM IN PROCEDURE I$CHK_PARMS
     11480**LABEL   11355--GOTO    11372--GOTO    11386--GOTO    11390--GOTO    11423--GOTO    11435--GOTO
GET_TCTX
      9029**LABEL    8966--GOTO     9034--CALLALT  9040--CALLALT
GHS$CANCEL_TMR
      8553**DCL-ENT 11541--CALL    11548--CALL    11555--CALL
GHS$SET_TMR
      8552**DCL-ENT 11520--CALL    11527--CALL    11534--CALL
GOT_CHKSUM
      6358**DCL      9241<>CALL     9436>>IF       9437<>CALL     9522>>IF      11329<<ASSIGN  11354<<ASSIGN
GOT_DATA1
      9498**LABEL    8956--GOTO
GOT_DATA2
      9652**LABEL    9530--GOTO
GOT_FCC
      6357**DCL     10044>>IF      11330<<ASSIGN  11378<<ASSIGN
GOT_TCTX
      9072**LABEL    9018--GOTO     9060--GOTO
GOT_TPDU_ED
      9905**LABEL    9957--GOTO
HDR$ IN PROCEDURE I$DO_ACK
     10359**DCL     10437<<ASSIGN  10438>>ASSIGN  10443>>DOWHILE 10444>>IF      10444>>IF      10444>>IF
     10448>>ASSIGN  10453>>CALL    10455<<ASSIGN  10457<<ASSIGN  10540<<ASSIGN  10542>>IF      10542>>IF
     10546>>ASSIGN  10550>>CALL
HOST_CRASH
      8639**LABEL    8631--GOTO
HOST_TPDU$
      6360**DCL      6361--REDEF    9806<<ASSIGN
HOST_TPDUC$
      6361**DCL      9458<<ASSIGN   9800<<ASSIGN   9938<<ASSIGN  10091<<ASSIGN  10320>>ASSIGN  10325>>ASSIGN
     10335>>ASSIGN  10590<<ASSIGN
I$CANCEL_INACTIVITY
     11554**PROC    10139--CALL
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:336  
I$CANCEL_RETRAN
     11540**PROC     9444--CALL     9611--CALL    10086--CALL    10479--CALL
I$CANCEL_WINDOW
     11547**PROC    10138--CALL
I$CHK_PARMS
     10900**PROC     9119--CALL     9366--CALL     9518--CALL
I$COMMON_INIT
     10278**PROC     9162--CALL     9417--CALL
I$DO_ACK
     10356**PROC    10097--CALL
I$DO_EACK IN PROCEDURE I$DO_ACK
     10538**ENTRY    9980--CALL
I$FORWARD_2HOST
     10319**PROC     9463--CALL     9816--CALL     9940--CALL    10093--CALL    10592--CALL
I$LOCATE_CP6
     10176**PROC     9040--CALL
I$LOCATE_OSI
     10222**PROC     9034--CALL
I$RELCTX
     11512**PROC     9122--CALL     9150--CALL
I$REPORT_TDISCON
     10573**PROC     9377--CALL    10145--CALL    10151--CALL
I$REPORT_TDISCON2 IN PROCEDURE I$REPORT_TDISCON
     10577**ENTRY    9578--CALL     9587--CALL     9612--CALL
I$RETURN_DC IN PROCEDURE I$RETURN_DR
     10802**ENTRY    8877--CALL     9566--CALL
I$RETURN_DR
     10617**PROC     8854--CALL     8888--CALL     9305--CALL     9503--CALL
I$SET_INACTIVITY
     11533**PROC     9451--CALL     9486--CALL     9699--CALL     9913--CALL    10117--CALL    10250--CALL
I$SET_OPEN
     10880**PROC     9885--CALL     9956--CALL    10085--CALL
I$SET_REFWAIT
     10867**PROC     8652--CALL     8676--CALL     9577--CALL     9582--CALL     9589--CALL     9594--CALL
      9614--CALL     9617--CALL     9638--CALL    10130--CALL    10150--CALL
I$SET_RETRAN
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:337  
     11519**PROC     8669--CALL     9198--CALL     9386--CALL     9499--CALL    10141--CALL    10484--CALL
I$SET_WINDOW
     11526**PROC     9450--CALL     9871--CALL    10087--CALL
INIT_CLOSING
     10138**LABEL   10134--GOTO
K$TPARM IN PROCEDURE I$CHK_PARMS
     10919**DCL     11328--ASSIGN  11333<<ASSIGN
K$TPARM.CODE IN PROCEDURE I$CHK_PARMS
     10920**DCL     11343>>DOSELCT 11400>>DOSELCT 11444>>DOSELCT
K$TPARM.LEN IN PROCEDURE I$CHK_PARMS
     10926**DCL     11334>>ASSIGN
K$TPARM$ IN PROCEDURE I$CHK_PARMS
     10938**DCL     11055--IMP-PTR 11094--IMP-PTR 11141--IMP-PTR 11178--IMP-PTR 11214--IMP-PTR 11254--IMP-PTR
     11289--IMP-PTR 11328<<ASSIGN  11359>>ASSIGN  11385>>ASSIGN  11405>>IF      11405>>IF      11412>>IF
     11412>>IF      11422>>ASSIGN  11449>>IF      11453>>IF      11461>>IF      11465>>IF      11475>>ASSIGN
K$TPARM_CLR_INFO.ERR IN PROCEDURE I$CHK_PARMS
     11313**DCL     11385>>ASSIGN
K$TPARM_CLR_INFO.PVALUE IN PROCEDURE I$CHK_PARMS
     11306**DCL     11313--REDEF
K$TPARM_GENERIC IN PROCEDURE I$CHK_PARMS
     11019**DCL     11333>>ASSIGN
K$TPARM_OPTION.CHKSUM IN PROCEDURE I$CHK_PARMS
     11111**DCL     11453>>IF      11461>>IF
K$TPARM_OPTION.EXPD IN PROCEDURE I$CHK_PARMS
     11117**DCL     11449>>IF
K$TPARM_OPTION.MBZ IN PROCEDURE I$CHK_PARMS
     11110**DCL     11465>>IF
K$TPARM_SUBSEQ.NUM IN PROCEDURE I$CHK_PARMS
     11267**DCL     11359>>ASSIGN
K$TPARM_TPDUSZ.SIZE IN PROCEDURE I$CHK_PARMS
     11068**DCL     11405>>IF      11405>>IF      11412>>IF      11412>>IF      11422>>ASSIGN
K$TPARM_VERSION.VERS IN PROCEDURE I$CHK_PARMS
     11191**DCL     11475>>ASSIGN
K$TPDU_CP6_FLOW IN PROCEDURE I$DO_ACK
     10380**DCL     10506<<ASSIGN  10507--ASSIGN  10515--ASSIGN  10516--ASSIGN
K$TPDU_CP6_FLOW.DST_REF IN PROCEDURE I$DO_ACK
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:338  
     10394**DCL     10509<<ASSIGN
K$TPDU_CP6_FLOW.LI IN PROCEDURE I$DO_ACK
     10381**DCL     10507<<ASSIGN
K$TPDU_CP6_FLOW.P.CODE IN PROCEDURE I$DO_ACK
     10420**DCL     10510<<ASSIGN
K$TPDU_CP6_FLOW.TYPE IN PROCEDURE I$DO_ACK
     10388**DCL     10508<<ASSIGN
K$TPDU_DR IN PROCEDURE I$RETURN_DR
     10638**DCL     10816--ASSIGN  10832--ASSIGN
K$TPDU_DR.DST_REF IN PROCEDURE I$RETURN_DR
     10652**DCL     10808<<ASSIGN
K$TPDU_DR.LI IN PROCEDURE I$RETURN_DR
     10639**DCL     10796<<ASSIGN  10803<<ASSIGN  10813>>ASSIGN  10814<<ASSIGN  10814>>ASSIGN  10815>>ASSIGN
     10833>>ASSIGN
K$TPDU_DR.MBZ IN PROCEDURE I$RETURN_DR
     10651**DCL     10807<<ASSIGN
K$TPDU_DR.REASON IN PROCEDURE I$RETURN_DR
     10660**DCL     10798<<ASSIGN
K$TPDU_DR.SRC_REF IN PROCEDURE I$RETURN_DR
     10656**DCL     10809<<ASSIGN
K$TPDU_DR.TYPE IN PROCEDURE I$RETURN_DR
     10646**DCL     10797<<ASSIGN  10804<<ASSIGN  10811>>IF
KN$LDCT.CONN_TYPE
      7415**DCL      8728>>IF
KN$LDCT.FLAGS.QUEUED
      7591**DCL      9751>>IF       9753<<ASSIGN
KN$LDCT.LNK$
      7560**DCL      9754<<ASSIGN
KN$LDCT.RLCID.LDCTX
      7475**DCL      7482--REDEF    7490--REDEF
KN$LDCT.RLCID.TCTX#
      7482**DCL      8753>>ASSIGN   9005>>ASSIGN
KN$LDCT.TRANSPORT_ID
      7509**DCL      7517--REDEF
KN$LDCT.UID
      7539**DCL      7540--REDEF    7549--REDEF
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:339  
KN$LDCT$
      8490**DCL      9647>>ASSIGN
KN$NETPARM
      6193**DCL        18--PROC     8620<>CALL     8650<>CALL     8664<>CALL     8675<>CALL     8701<>CALL
      8714--ENTRY    8718--ENTRY    8809<>CALL     8953<>CALL     8959<>CALL     9178<>CALL     9192<>CALL
      9262<>CALL     9281<>CALL     9389<>CALL     9452<>CALL     9461<>CALL     9485<>CALL     9605<>CALL
      9613<>CALL     9649<>CALL     9728<>CALL     9773<>CALL     9782<>CALL     9848<>CALL     9864<>CALL
      9930<>CALL     9936<>CALL    10067<>CALL    10107<>CALL    10112<>CALL    10113<>CALL    10144<>CALL
     10256<>CALL    10331<>CALL    10339<>CALL    10519<>CALL    10524<>CALL    10585<>CALL    10841<>CALL
     10845<>CALL    10848<>CALL
KN$NETPARM.DST_ADDR$
      6327**DCL      9016<<ASSIGN   9031>>IF       9101>>ASSIGN   9102>>ASSIGN   9105>>ASSIGN   9106>>ASSIGN
     10233>>IF      10237>>ASSIGN  10238>>IF      10828>>ASSIGN  10829<<ASSIGN
KN$NETPARM.ERRCODE
      6300**DCL      8878<<ASSIGN   9749<<ASSIGN   9819<<ASSIGN  10522<<ASSIGN
KN$NETPARM.FLAGS.CONS
      6270**DCL      9017<<ASSIGN
KN$NETPARM.FPT$
      6312**DCL      8177--IMP-PTR  9215>>IF       9217>>IF       9220>>IF       9223>>ASSIGN   9224>>ASSIGN
      9225>>ASSIGN  10060<<ASSIGN  10068<<ASSIGN
KN$NETPARM.FUNCTION
      6288**DCL      8613>>IF       8616>>ASSIGN   8683<<ASSIGN   8731<<ASSIGN   8968>>IF       8977>>IF
      8993>>IF       9029>>IF       9087>>IF       9269>>IF       9278<<ASSIGN   9355>>IF       9646<<ASSIGN
     10322<<ASSIGN  10580<<ASSIGN  10825>>IF
KN$NETPARM.LDCT$
      6194**DCL      7414--IMP-PTR  8728>>IF       8753>>ASSIGN   9001>>IF       9005>>ASSIGN   9647<<ASSIGN
KN$NETPARM.MSG$
      6200**DCL      6205--REDEF    9812<<ASSIGN
KN$NETPARM.MSGSZ
      6211**DCL      8648<<ASSIGN   8697<<ASSIGN   9263<<ASSIGN   9457<<ASSIGN   9813<<ASSIGN   9939<<ASSIGN
     10092<<ASSIGN  10512<<ASSIGN  10583<<ASSIGN  10591<<ASSIGN  10837<<ASSIGN
KN$NETPARM.NHDR$
      6252**DCL      6253--REDEF    8433--IMP-PTR  9068>>ASSIGN   9069>>ASSIGN   9074>>ASSIGN   9075>>ASSIGN
     10188>>IF
KN$NETPARM.NHDRSZ
      6258**DCL      8733<<ASSIGN   9645<<ASSIGN
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:340  
KN$NETPARM.NODE
      6295**DCL      8622>>ASSIGN   8647<<ASSIGN   8696<<ASSIGN   9059>>ASSIGN   9094>>ASSIGN   9276<<ASSIGN
      9604<<ASSIGN  10323<<ASSIGN  10517<<ASSIGN  10581<<ASSIGN
KN$NETPARM.QOS
      6276**DCL      9166>>ASSIGN
KN$NETPARM.SHDR$
      6230**DCL      6231--REDEF   10574<<ASSIGN
KN$NETPARM.SHDRSZ
      6236**DCL      8699<<ASSIGN   8945<<ASSIGN   9176>>IF       9265<<ASSIGN   9801<<ASSIGN  10329<<ASSIGN
     10514<<ASSIGN  10575<<ASSIGN  10835<<ASSIGN
KN$NETPARM.SHDR_C$
      6231**DCL      8944<<ASSIGN
KN$NETPARM.SLDCT$
      6307**DCL      9751>>IF       9753>>ASSIGN   9754>>ASSIGN   9755>>ASSIGN  10324<<ASSIGN
KN$NETPARM.SRC_ADDR$
      6322**DCL      9015<<ASSIGN   9099>>ASSIGN   9100>>ASSIGN   9107>>ASSIGN   9108>>ASSIGN  10827>>ASSIGN
     10828<<ASSIGN
KN$NETPARM.TCTX$
      6317**DCL      8639<<ASSIGN   8897<<ASSIGN   9054<<ASSIGN   9139<<ASSIGN
KN$NETPARM.TCTX_ID
      6263**DCL      8640<<ASSIGN   8700<<ASSIGN   8898<<ASSIGN   9055<<ASSIGN   9140<<ASSIGN
KN$NETPARM.THDR$
      6241**DCL      6242--REDEF   10516<<ASSIGN  10832<<ASSIGN  10856<<ASSIGN
KN$NETPARM.THDRSZ
      6247**DCL      8725>>ASSIGN   8726>>ASSIGN   8808<<ASSIGN   9267<<ASSIGN   9644<<ASSIGN  10326<<ASSIGN
     10515<<ASSIGN  10833<<ASSIGN
KN$NETPARM.THDR_C$
      6242**DCL      8723>>ASSIGN   9244>>ASSIGN   9266<<ASSIGN  10325<<ASSIGN
KN$NETPARM.UHDR$
      6216**DCL      6217--REDEF
KN$NETPARM.UHDRSZ
      6225**DCL      8649<<ASSIGN   8698<<ASSIGN   8732<<ASSIGN   9264<<ASSIGN   9643<<ASSIGN  10328<<ASSIGN
     10513<<ASSIGN  10582<<ASSIGN  10836<<ASSIGN
KN$TCTX
      6496**DCL      8643<>CALL     9195<>CALL     9415<>CALL     9571<>CALL     9744<>CALL    10204<>CALL
     10453<>CALL    10550<>CALL    10868<>CALL
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:341  
KN$TCTX.CLASS
      6562**DCL      8635>>IF       8658>>IF       8666>>IF       8693>>IF       8926>>IF       9082<<ASSIGN
      9084>>IF       9130>>IF       9146>>IF       9187>>IF       9194>>IF       9240>>IF       9243>>IF
      9324>>IF       9327>>IF       9347<<ASSIGN   9349>>IF       9352>>IF       9380>>IF       9383>>IF
      9392>>IF       9432>>IF       9448>>IF       9480>>IF       9483>>IF       9496>>IF       9602>>IF
      9602>>IF       9629>>IF       9629>>IF       9671>>IF       9688>>IF       9691>>IF       9698>>IF
      9718>>IF       9746>>IF       9798>>IF       9835>>IF       9853>>IF       9853>>IF       9867>>IF
      9911>>IF      10005>>IF      10022>>IF      10117>>IF      10282>>IF      10472>>IF      11351>>IF
     11365>>IF      11412>>IF      11441>>IF      11461>>IF
KN$TCTX.DST_NSAP
      7351**DCL      9016--ASSIGN   9102--ASSIGN   9108--ASSIGN  10238--IF
KN$TCTX.DST_NSAP.ADDRESS_N
      7381**DCL      7382--REDEF
KN$TCTX.DST_NSAP.LEN
      7353**DCL     10233>>IF
KN$TCTX.DST_REF
      6522**DCL      8903>>IF       9160<<ASSIGN   9213<<ASSIGN   9302>>IF       9312<<ASSIGN   9428>>ASSIGN
      9552>>IF       9563>>IF       9590<<ASSIGN   9632>>IF      10244>>IF
KN$TCTX.ERR
      6753**DCL      8641<<ASSIGN   9721<<ASSIGN  11385<<ASSIGN
KN$TCTX.FLOW_CONTROLLED
      6711**DCL     10496>>IF      10499<<ASSIGN  10521<<ASSIGN
KN$TCTX.HOST_CQ_FULL
      6724**DCL      9740>>IF       9818<<ASSIGN   9943<<ASSIGN
KN$TCTX.HOST_NODE
      6545**DCL      8630>>IF       8656>>IF       9069<<ASSIGN   9075<<ASSIGN   9094<<ASSIGN   9276>>ASSIGN
     10323>>ASSIGN  10517>>ASSIGN
KN$TCTX.HOST_REF
      6538**DCL      9212<<ASSIGN   9311<<ASSIGN   9424>>ASSIGN  10320>>ASSIGN  10509>>ASSIGN
KN$TCTX.INBOUND
      6737**DCL      9174<<ASSIGN   9430<<ASSIGN
KN$TCTX.LDCTX#
      6516**DCL      9647>>ASSIGN
KN$TCTX.LNK$
      6580**DCL      8680>>IF       8681<>CALL     9474>>IF       9475<>CALL    10118>>IF      10119<>CALL
     10501>>IF      10502<>CALL    10884>>IF      10885<>CALL
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:342  
KN$TCTX.LOST_TPDU
      6681**DCL      9727>>IF       9765>>IF       9769<<ASSIGN   9847<<ASSIGN   9853>>IF
KN$TCTX.MAXSEQ
      6600**DCL      9684>>DOWHILE  9685>>ASSIGN   9831>>IF       9832>>ASSIGN   9840>>IF       9841>>ASSIGN
      9861>>ASSIGN   9925>>IF       9927>>ASSIGN   9950>>IF      10291<<ASSIGN  10465>>DOWHILE 10466>>ASSIGN
     10494>>ASSIGN
KN$TCTX.NODE
      6503**DCL      6516--REDEF    8633>>IF       9059<<ASSIGN   9068<<ASSIGN   9074<<ASSIGN   9095<<ASSIGN
      9604>>ASSIGN  10188>>IF      10581>>ASSIGN
KN$TCTX.OPTION.CHKSUM
      6659**DCL      9342<<ASSIGN   9353<<ASSIGN   9405>>IF       9520>>IF      11453>>IF      11462<<ASSIGN
     11463<<ASSIGN
KN$TCTX.OPTION.CLASS_2_FLOW
      6634**DCL      9339<<ASSIGN   9688>>IF       9853>>IF      10285<<ASSIGN
KN$TCTX.OPTION.CONS
      6615**DCL      9221<<ASSIGN   9246>>IF       9640>>IF      10297<<ASSIGN  10839>>IF
KN$TCTX.OPTION.EXPEDITED
      6647**DCL      9132>>IF       9334<<ASSIGN   9903>>IF       9969>>IF      11450<<ASSIGN  11451<<ASSIGN
KN$TCTX.OPTION.EXTENDED
      6639**DCL      8914>>IF       8924>>IF       9335<<ASSIGN   9679>>IF       9916>>IF       9974>>IF
      9989>>IF      10280<<ASSIGN  10289>>IF
KN$TCTX.OPTION.OSI
      6624**DCL      9089<<ASSIGN   9392>>IF       9789>>IF       9823>>IF       9835>>IF      10089>>IF
     10504>>IF      11412>>IF
KN$TCTX.OPTION.TRACE
      6610**DCL      8953>>IF       9064<<ASSIGN   9085<<ASSIGN   9113<<ASSIGN   9218<<ASSIGN   9350<<ASSIGN
      9460>>IF      10339>>IF      10524>>IF
KN$TCTX.OUTBOUND
      6733**DCL      9080<<ASSIGN   9640>>IF
KN$TCTX.PRIMARY
      6741**DCL      8630>>IF       8645>>IF       9173<<ASSIGN   9780>>IF      10182>>IF      10182>>IF
     10191>>IF      10578>>IF
KN$TCTX.QOS
      6551**DCL      9166<<ASSIGN   9225<<ASSIGN
KN$TCTX.RCV_WINDOW_SZ
      6568**DCL      9224<<ASSIGN   9244>>ASSIGN   9863>>IF       9867>>IF      10292<<ASSIGN  10293>>ASSIGN
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:343  
     10496>>IF
KN$TCTX.REASON
      6747**DCL      9320<<ASSIGN   9361<<ASSIGN   9370<<ASSIGN   9576<<ASSIGN   9586<<ASSIGN   9723<<ASSIGN
KN$TCTX.RECV_EXPD
      6894**DCL      9920>>IF       9922>>IF       9925>>IF       9927<<ASSIGN   9929<<ASSIGN   9929>>ASSIGN
      9949<<ASSIGN   9949>>ASSIGN   9950>>IF       9951<<ASSIGN
KN$TCTX.RECV_HEAD$
      6902**DCL      9767>>IF       9844>>IF       9844>>IF
KN$TCTX.RECV_LWE
      6864**DCL      9674>>ASSIGN   9694<<ASSIGN   9704>>IF       9706>>IF       9712>>IF       9837>>IF
      9838<<ASSIGN   9841<<ASSIGN
KN$TCTX.RECV_NEXT
      6883**DCL      9737>>IF       9767>>IF       9829<<ASSIGN   9829>>ASSIGN   9831>>IF       9832<<ASSIGN
      9832>>ASSIGN   9844>>IF       9858>>ASSIGN
KN$TCTX.RECV_UWE
      6874**DCL      9704>>IF       9706>>IF       9712>>IF       9858>>ASSIGN  10293<<ASSIGN
KN$TCTX.RERR.AK_NWINDOW
      6826**DCL     10019<<ASSIGN  10019>>ASSIGN
KN$TCTX.RERR.AK_SUBSEQ
      6832**DCL     10031<<ASSIGN  10031>>ASSIGN
KN$TCTX.RERR.CHKSUM
      6802**DCL      8795<<ASSIGN   8795>>ASSIGN
KN$TCTX.RERR.DT_NWINDOW
      6814**DCL      9716<<ASSIGN   9716>>ASSIGN
KN$TCTX.RERR.NBUF_NOQ
      6845**DCL     10334<<ASSIGN  10334>>ASSIGN
KN$TCTX.RERR.NSESS_CDT
      6852**DCL      9793<<ASSIGN   9793>>ASSIGN
KN$TCTX.SEND_EHEAD$
      6982**DCL     10475>>IF      10540>>ASSIGN  10546<<ASSIGN  10547>>IF      10552>>IF
KN$TCTX.SEND_ETAIL$
      6989**DCL     10548<<ASSIGN
KN$TCTX.SEND_HEAD$
      6957**DCL     10437>>ASSIGN  10448<<ASSIGN  10450>>IF      10455>>ASSIGN  10474>>IF      10475>>IF
     10552>>IF      10552>>IF
KN$TCTX.SEND_LWE
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:344  
      6924**DCL     10008>>IF      10010>>IF      10015>>IF      10028>>IF      10039>>IF      10048>>IF
     10051>>IF      10101>>IF      10102>>ASSIGN  10444>>IF      10444>>IF      10462<<ASSIGN  10463>>ASSIGN
     10492>>ASSIGN
KN$TCTX.SEND_NEXT
      6940**DCL     10001>>ASSIGN  10492>>ASSIGN
KN$TCTX.SEND_NOTSENT$
      6974**DCL      9999>>IF      10000>>ASSIGN  10475>>IF      10552>>IF
KN$TCTX.SEND_RETRY_COUNT
      7040**DCL      8668<<ASSIGN   9164<<ASSIGN   9164>>ASSIGN   9197<<ASSIGN   9385<<ASSIGN   9419<<ASSIGN
      9498<<ASSIGN  10142<<ASSIGN  10483<<ASSIGN
KN$TCTX.SEND_SUBSEQ
      7034**DCL     10028>>IF      10039>>IF      10072<<ASSIGN
KN$TCTX.SEND_TAIL$
      6965**DCL     10451<<ASSIGN
KN$TCTX.SEND_UWE
      6930**DCL     10039>>IF      10048>>IF      10051>>IF      10055>>IF      10101>>IF      10102>>ASSIGN
     10103>>ASSIGN  10301<<ASSIGN  10463<<ASSIGN  10465>>DOWHILE 10466<<ASSIGN  10466>>ASSIGN
KN$TCTX.SRC_NSAP
      7287**DCL      9015--ASSIGN   9100--ASSIGN   9106--ASSIGN
KN$TCTX.SRC_NSAP.ADDRESS_N
      7317**DCL      7318--REDEF
KN$TCTX.SRC_REF
      6530**DCL      8640>>ASSIGN   8898>>ASSIGN   9055>>ASSIGN   9140>>ASSIGN   9229>>ASSIGN   9423>>ASSIGN
      9747>>ASSIGN  10335>>ASSIGN
KN$TCTX.SSN_CRDT
      7025**DCL      9090<<ASSIGN   9761>>IF       9762<<ASSIGN   9791>>IF       9824<<ASSIGN   9824>>ASSIGN
      9853>>IF       9877>>IF       9878<<ASSIGN
KN$TCTX.STATE
      6497**DCL      8628>>IF       8663<<ASSIGN   8954>>IF       8954>>IF       9007>>IF       9008<<ASSIGN
      9185>>IF       9188<<ASSIGN   9189<<ASSIGN   9247<<ASSIGN   9248<<ASSIGN   9260<<ASSIGN   9302>>IF
      9372>>IF       9375>>IF       9388<<ASSIGN   9395<<ASSIGN   9412>>IF       9412>>IF       9433<<ASSIGN
      9434<<ASSIGN   9443<<ASSIGN   9483>>IF       9489>>IF       9489>>IF       9489>>IF       9494>>IF
      9501<<ASSIGN   9546>>IF       9552>>IF       9552>>IF       9573>>DOCASE   9635>>IF       9668>>IF
      9883>>IF       9908>>IF       9954>>IF       9978>>IF      10075>>IF      10083>>IF      10127>>IF
     10127>>IF      10133>>IF      10136>>IF      10143<<ASSIGN  10148>>IF      10182>>IF      10182>>IF
     10182>>IF      10182>>IF      10182>>IF      10194>>IF      10194>>IF      10203<<ASSIGN  10228>>IF
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:345  
     10228>>IF      10248>>IF      10254>>IF      10881<<ASSIGN
KN$TCTX.TMR_INACTIVITY
      7135**DCL     11534<>CALL    11555<>CALL
KN$TCTX.TMR_INACTIVITY.ARG
      7137**DCL      7138--REDEF
KN$TCTX.TMR_REFERENCE.ARG
      7167**DCL      7168--REDEF
KN$TCTX.TMR_RETRAN
      7076**DCL     11520<>CALL    11541<>CALL
KN$TCTX.TMR_RETRAN.ARG
      7078**DCL      7079--REDEF
KN$TCTX.TMR_WINDOW
      7105**DCL     11527<>CALL    11548<>CALL
KN$TCTX.TMR_WINDOW.ARG
      7107**DCL      7108--REDEF
KN$TCTX.TPDUSZ
      6599**DCL      9663>>IF      10299<<ASSIGN
KN$TCTX.TPDUSZ_PARM
      6598**DCL      9223<<ASSIGN  10299>>ASSIGN  11412>>IF      11422<<ASSIGN
KN$TCTX.VERS
      6597**DCL     11475<<ASSIGN
KN$TCTX.WAIT_4OPEN
      6697**DCL     10882<<ASSIGN
KN$TCTX$
      6490**DCL      8625>>ASSIGN   8865>>ASSIGN   9005>>ASSIGN   9551>>IF       9552>>IF       9552>>IF
      9552>>IF       9555>>ASSIGN  10178>>IF      10180>>ASSIGN  10224>>IF      10226>>ASSIGN  10233>>IF
     10238>>IF      10244>>IF      10246>>ASSIGN
KNA$CALC_CHKSUM
      8536**DCL-ENT  9241--CALL     9437--CALL    10817--CALL
KNA$CHK_CHKSUM
      8537**DCL-ENT  9148--CALL     9406--CALL     9526--CALL
KNA$GETTCTX
      8520**DCL-ENT  9047--CALL
KNA$RELTCTX
      8521**DCL-ENT  9396--CALL    11513--CALL
KNH$SEND
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:346  
      8522**DCL-ENT  9649--CALL    10841--CALL
KNN$SEND
      8523**DCL-ENT  9281--CALL    10331--CALL    10519--CALL    10845--CALL
KNS$RECV
      8524**DCL-ENT  8650--CALL     8701--CALL     9178--CALL     9782--CALL    10585--CALL
KNT$DSESSION
      8539**DCL-ENT  9773--CALL     9848--CALL
KNT$RELBUF
      8534**DCL-ENT 10453--CALL    10550--CALL
KNT$RETRANS
      8540**DCL-ENT 10256--CALL
KNT$RETRANS_LOST
      8541**DCL-ENT 10107--CALL
KNT$RLS_CHAIN
      8535**DCL-ENT  8643--CALL     9195--CALL     9415--CALL     9571--CALL    10204--CALL
KNT$SAVE_FRAG
      8538**DCL-ENT  9744--CALL
KNT$SEND_AK
      8525**DCL-ENT  9452--CALL     9485--CALL     9728--CALL     9864--CALL
KNT$SEND_AK_FCC
      8526**DCL-ENT 10067--CALL
KNT$SEND_CC
      8527**DCL-ENT  9192--CALL
KNT$SEND_DC
      8528**DCL-ENT  9605--CALL     9613--CALL
KNT$SEND_DR
      8532**DCL-ENT  8664--CALL     9389--CALL    10144--CALL
KNT$SEND_DR_HOST
      8533**DCL-ENT  8675--CALL
KNT$SEND_DT
      8531**DCL-ENT 10113--CALL
KNT$SEND_EA
      8529**DCL-ENT  9930--CALL     9936--CALL
KNT$SEND_ED
      8530**DCL-ENT 10112--CALL
KNT$SET_REFWAIT
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:347  
      8542**DCL-ENT 10868--CALL
KNT$TR_ERROR
      8550**DCL-ENT  8809--CALL
KNT$TR_FHOST
      8549**DCL-ENT  9262--CALL     9461--CALL    10339--CALL
KNT$TR_RECV
      8547**DCL-ENT  8953--CALL     8959--CALL    10524--CALL
KNT$TR_SEND
      8548**DCL-ENT 10848--CALL
KNT$TR_TERM
      8551**DCL-ENT  8620--CALL
KNT$TTIMER
      8546**DCL-ENT 10199--CALL
KNT$UNQ_BUFFER
      8545**DCL-ENT 10533--CALL
KNT$UNQ_FLOW
      8544**DCL-ENT  8681--CALL    10119--CALL    10502--CALL
KNT$UNQ_OPEN
      8543**DCL-ENT  9475--CALL    10885--CALL
KNT_CHKSUM_ERR
      8511**DCL      8798<<ASSIGN   8798>>ASSIGN
KNT_DISCARDED_TPDUS
      8510**DCL      8806<<ASSIGN   8806>>ASSIGN
KNT_DO_CHKSUM
      8497**DCL      9146>>IF       9405>>IF       9525>>IF
KNT_ERROR_SCREECH
      8506**DCL      8802>>IF
KNT_HOLDBACK
      8500**DCL      9863>>IF       9867>>IF
KNT_SCODE
      8507**DCL     11569<>CALL
KNT_TRACE_CLASS4
      8514**DCL      9084>>IF       9349>>IF
KNT_TRACE_INTERMEDIATE
      8513**DCL      9063>>IF
KNT_TRACE_OSI
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:348  
      8515**DCL      9112>>IF
KNT_UNQ_LDCT
      8512**DCL     10324--ASSIGN
KNT_WAIT_COUNT
      8509**DCL      9756<<ASSIGN   9756>>ASSIGN  10532>>IF
KNT_WAIT_HEAD$
      8508**DCL      9754>>ASSIGN   9755<<ASSIGN
KNT_WINDOW_NORMAL
      8498**DCL     10292>>ASSIGN
KN_DCT$$
      8516**DCL      8490--IMP-PTR  9647>>ASSIGN
KN_TCTX$$
      8504**DCL      6490--IMP-PTR  8625>>ASSIGN   8865>>ASSIGN   9005>>ASSIGN   9551>>IF       9552>>IF
      9552>>IF       9552>>IF       9555>>ASSIGN  10178>>IF      10180>>ASSIGN  10224>>IF      10226>>ASSIGN
     10233>>IF      10238>>IF      10244>>IF      10246>>ASSIGN
KN_TCTX_MAX#
      8505**DCL      8624>>DOINDEX  8862>>IF       9550>>DOINDEX 10177>>DOINDEX 10223>>DOINDEX
K_CKSUM_INIT IN PROCEDURE I$RETURN_DR
     10789**DCL     10816--ASSIGN
K_TPDUSZ_VALUES
      8501**DCL     10299>>ASSIGN
K_TPDU_SIZE
      8502**DCL      8833>>IF       8932>>ASSIGN
K_TPDU_SIZE_EXT
      8503**DCL      8915>>IF       8934>>ASSIGN
K_TSAP_SZ IN PROCEDURE I$CHK_PARMS
     11323**DCL     11426>>IF
LDCT_CIRCUIT
      6362**DCL      8730<<ASSIGN   8735<<ASSIGN   8752>>IF       8826>>IF       8844>>IF       9003>>IF
      9092>>IF       9331>>IF      10296>>IF
LEAVE_ON_Q
      9943**LABEL   10093--CALLALT
LI
      6353**DCL      8750<<ASSIGN   8766>>ASSIGN   8767>>ASSIGN   8780>>ASSIGN   8823>>IF       8938>>ASSIGN
LOG_BAD_CHKSUM
      8783**LABEL    9406--CALLALT  9523--GOTO     9526--CALLALT
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:349  
LOG_BAD_TPDU
      8799**LABEL    8792--GOTO     8836--GOTO     8856--GOTO     9036--GOTO     9124--GOTO     9307--GOTO
      9368--GOTO     9400--GOTO     9518--CALLALT  9652--GOTO     9665--GOTO     9900--GOTO     9905--GOTO
      9971--GOTO    10158--GOTO
LOG_BAD_TPDU_TYPE
      8792**LABEL    9630--GOTO
LOG_SEND IN PROCEDURE I$RETURN_DR
     10848**LABEL   10842--GOTO
NEXT$
      6345**DCL      8723<<ASSIGN   8746>>ASSIGN   8748>>ASSIGN   8766>>ASSIGN   8781<<ASSIGN   8781>>ASSIGN
      9229>>ASSIGN   9266>>ASSIGN   9423>>ASSIGN   9424>>ASSIGN   9428>>ASSIGN   9458>>ASSIGN   9747>>ASSIGN
NEXT_SZ
      6340**DCL      8725<<ASSIGN   8741>>DOWHILE  8742>>ASSIGN   8765>>ASSIGN   8768<<ASSIGN   8784<<ASSIGN
      8784>>ASSIGN
NOT_SAME_NSAP IN PROCEDURE I$LOCATE_OSI
     10256**LABEL   10235--GOTO    10240--GOTO
NOT_SAME_TCTX IN PROCEDURE I$LOCATE_CP6
     10208**LABEL   10192--GOTO    10200--GOTO
NSAP.ADDRESS_N
      6486**DCL      6487--REDEF
NSAP.LEN
      6458**DCL      9099>>ASSIGN   9101>>ASSIGN   9105>>ASSIGN   9107>>ASSIGN  10233>>IF      10237>>ASSIGN
PARM$
      6346**DCL      6347--REDEF    8937<<ASSIGN  11333>>ASSIGN  11354>>ASSIGN  11492<<ASSIGN  11492>>ASSIGN
PARMLEN IN PROCEDURE I$CHK_PARMS
     10939**DCL     10942--IMP-SIZ 11334<<ASSIGN  11336>>IF      11348>>IF      11361>>IF      11375>>IF
     11402>>IF      11426>>IF      11446>>IF      11472>>IF      11491>>ASSIGN  11492>>ASSIGN
PARMSIZE
      6348**DCL      8938<<ASSIGN  11332>>DOWHILE 11336>>IF      11491<<ASSIGN  11491>>ASSIGN  11495>>IF
REASON
      6359**DCL      8852<<ASSIGN   8887<<ASSIGN   8986<<ASSIGN   9011<<ASSIGN   9050<<ASSIGN   9126<<ASSIGN
      9305<<ASSIGN   9503<<ASSIGN  10798>>ASSIGN
REJECT_CLASS
      9319**LABEL    9325--GOTO     9332--GOTO
REJECT_CR
      9122**LABEL    9135--GOTO
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:350  
REPORT_NEGOTIATION
      8979**LABEL    8995--GOTO
RESET_LWE
      9694**LABEL    9689--GOTO
RETURN_DC
      8877**LABEL    8907--GOTO
RETURN_TPDU_DC
      9562**LABEL    9558--GOTO
RETURN_TPDU_DR
      8852**LABEL    8973--GOTO
RETURN_TPDU_DR2
      8854**LABEL    8987--GOTO     9051--GOTO     9127--GOTO
SAVE_FRAG
      9744**LABEL    9738--GOTO     9794--GOTO     9820--GOTO
SCREECH
      8554**DCL-ENT 11569--CALL
SEND_ACK
      9707**LABEL    9708--GOTO
SEND_DC
      9599**LABEL    9591--GOTO     9595--GOTO
SEND_DC2
      9602**LABEL    9579--GOTO     9583--GOTO
SEND_DRN
      9503**LABEL    9492--GOTO
SEND_DT
     10107**LABEL    9981--GOTO
SEND_FCC
     10060**LABEL   10045--GOTO    10053--GOTO
SET_BAD_DST_REF
      8893**LABEL    8905--GOTO     9633--GOTO
SET_BAD_TSTATE
      9307**LABEL    8955--GOTO     9041--GOTO     9636--GOTO     9889--GOTO
SET_CLOSING
      9388**LABEL    9381--GOTO     9724--GOTO
SET_CR_DUP IN PROCEDURE I$LOCATE_OSI
     10261**LABEL   10251--GOTO    10257--GOTO
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:351  
SET_INVLEN IN PROCEDURE I$CHK_PARMS
     11332**LABEL   11349--GOTO    11362--GOTO    11376--GOTO    11403--GOTO    11427--GOTO    11447--GOTO
     11473--GOTO
SET_INVPARM IN PROCEDURE I$CHK_PARMS
     11354**LABEL   11352--GOTO    11383--GOTO    11398--GOTO    11442--GOTO    11486--GOTO
SET_PARMS
      8937**LABEL    8929--GOTO
SET_PROT_ERR
      9723**LABEL   10024--GOTO
SUBSEQ
      6355**DCL      9517<<ASSIGN  10028>>IF      10039>>IF      10064>>ASSIGN  10072>>ASSIGN  11359<<ASSIGN
SVHDR$ IN PROCEDURE I$DO_ACK
     10360**DCL     10438<<ASSIGN  10474>>IF
TCTX#
      6352**DCL      8624<<DOINDEX  8625>>ASSIGN   9550<<DOINDEX  9551>>IF       9552>>IF       9552>>IF
      9552>>IF       9555>>ASSIGN  10177<<DOINDEX 10178>>IF      10180>>ASSIGN  10197>>ASSIGN  10223<<DOINDEX
     10224>>IF      10226>>ASSIGN  10233>>IF      10238>>IF      10244>>IF      10246>>ASSIGN
TEMP
      6369**DCL      6370--REDEF    8492--IMP-SIZ  8622<<ASSIGN   8630>>IF       8633>>IF       8647>>ASSIGN
      8656>>IF       8696>>ASSIGN   8742<<ASSIGN   8743>>IF       8744<<ASSIGN   8746>>ASSIGN   8746>>ASSIGN
      8928<<ASSIGN   8932<<ASSIGN   8934<<ASSIGN   8937>>ASSIGN   8938>>ASSIGN   9099<<ASSIGN   9100>>ASSIGN
      9100>>ASSIGN   9101<<ASSIGN   9102>>ASSIGN   9102>>ASSIGN   9105<<ASSIGN   9106>>ASSIGN   9106>>ASSIGN
      9107<<ASSIGN   9108>>ASSIGN   9108>>ASSIGN  10237<<ASSIGN  10238>>IF      10238>>IF
TEMP$
      6347**DCL     10827<<ASSIGN  10829>>ASSIGN
TEMP2
      6374**DCL      8616<<ASSIGN   8618>>IF       8618>>IF       8635>>IF       8683>>ASSIGN   8693>>IF
TIMER_RESET IN PROCEDURE I$DO_ACK
     10483**LABEL   10555--GOTO
TIMER_STOP IN PROCEDURE I$DO_ACK
     10479**LABEL   10554--GOTO
TPARM_CHKSUM IN PROCEDURE I$RETURN_DR
     10765**DCL     10814--ASSIGN
TPDU$
      6337**DCL      8748<<ASSIGN   8937>>ASSIGN   9148<>CALL     9241<>CALL     9406<>CALL     9437<>CALL
      9526<>CALL     9800>>ASSIGN   9938>>ASSIGN  10091>>ASSIGN  10590>>ASSIGN  11354>>ASSIGN
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:352  
TPDUSIZE
      6349**DCL      8726<<ASSIGN   8765<<ASSIGN   8767>>ASSIGN   8780<<ASSIGN   8781>>ASSIGN   8784>>ASSIGN
      8823>>IF       8828>>IF       8833>>IF       8915>>IF       9148<>CALL     9241<>CALL     9267>>ASSIGN
      9406<>CALL     9437<>CALL     9526<>CALL     9663>>IF       9805<<ASSIGN  10326>>ASSIGN
TPDU_BUF
      6392**DCL      8724--ASSIGN   9806--ASSIGN
TPDU_BUF.CDT
      6409**DCL     10301>>ASSIGN
TPDU_BUF.DST_REF
      6420**DCL      8754>>ASSIGN   8870>>IF
TPDU_BUF.LI
      6393**DCL      8750>>ASSIGN
TPDU_BUF.SRC_REF
      6427**DCL      8873>>IF       8903>>IF       9160>>ASSIGN   9212>>ASSIGN   9302>>IF       9311>>ASSIGN
      9312>>ASSIGN   9552>>IF       9563>>IF       9590>>ASSIGN   9599>>IF       9632>>IF      10244>>IF
     10808>>ASSIGN
TPDU_BUF.TYPE
      6403**DCL      8749>>ASSIGN
TPDU_DC IN PROCEDURE I$RETURN_DR
     10725**DCL     10803--ASSIGN
TPDU_DR IN PROCEDURE I$RETURN_DR
     10682**DCL     10796--ASSIGN
TPDU_NR
      6344**DCL      9674<<ASSIGN   9680<<ASSIGN   9681<<ASSIGN   9684>>DOWHILE  9685<<ASSIGN   9685>>ASSIGN
      9694>>ASSIGN   9706>>IF       9706>>IF       9712>>IF       9712>>IF       9737>>IF       9744<>CALL
      9809>>ASSIGN   9837>>IF       9838>>ASSIGN   9840>>IF       9841>>ASSIGN   9917<<ASSIGN   9918<<ASSIGN
      9920>>IF       9922>>IF       9925>>IF      10000<<ASSIGN  10001<<ASSIGN  10008>>IF      10010>>IF
     10015>>IF      10105>>IF
TRANSPORT_SCREECH
     11567**PROC     8710--CALL     8803--CALL     9032--CALL     9284--CALL     9465--CALL    10794--CALL
TYPE
      6350**DCL      8749<<ASSIGN   8752>>IF       8759>>IF       8759>>IF       8759>>IF       8759>>IF
      8759>>IF       8775>>IF       8775>>IF       8775>>IF       8775>>IF       8826>>IF       8833>>IF
      8842>>IF       8868>>IF       8885>>IF       8900>>IF       8900>>IF       8905>>IF       8907>>IF
      8915>>IF       8926>>IF       8932>>ASSIGN   8934>>ASSIGN   8951>>IF       8951>>IF       8964>>IF
      9300>>IF       9530>>IF       9534>>DOCASE  11365>>IF      11382>>IF      11389>>IF      11397>>IF
PL6.E3A0      #001=KNT$RECV File=KNT$RECV.:E05TSI                                WED 07/30/97 01:09 Page:353  
     11397>>IF      11412>>IF      11453>>IF
VALIDATE_TPDU
      8811**LABEL    8769--GOTO     8785--GOTO
YR_TU_NR
      6343**DCL      9975<<ASSIGN   9976<<ASSIGN   9991<<ASSIGN   9995<<ASSIGN  10010>>IF      10010>>IF
     10015>>IF      10015>>IF      10028>>IF      10039>>IF      10039>>IF      10048>>IF      10048>>IF
     10055>>IF      10063>>ASSIGN  10102<<ASSIGN  10103<<ASSIGN  10105>>IF      10444>>IF      10444>>IF
     10462>>ASSIGN  10542>>IF

PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:354  
     2557        1        /*M* KNT$RECV_4HOST - Send session messages to network.   */
     2558        2        /*T***********************************************************/
     2559        3        /*T*                                                         */
     2560        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     2561        5        /*T*                                                         */
     2562        6        /*T***********************************************************/
     2563        7        /*X* PLM=3,IND=5,ENU=0,ECU=0 */
     2564        8
     2565        9        KNT$RECV_4HOST: PROC(KN$NETPARM) ALTRET;
     2566       10
     2567       11        %INCLUDE K_ADDRESS_M;
     2568      514        %INCLUDE K_INTERFACE_M;
     2569      923        %INCLUDE K_TRANSPORT_E;
     2570     1248        %INCLUDE K_TRANSPORT_M;
     2571     3032        %INCLUDE KN_DATA_M;
     2572     4818        %INCLUDE KNH_MACRO_C;
     2573     5101 S      %INCLUDE KI_CP6;
     2574     5102        %INCLUDE GH_SCHD_M;
     2575     5246
     2576     5247                                                /* Input parameters                   */
     2577     5248        %KN$NETPARM;
     2578     5401                                                /* Auto Storage                       */
     2579     5402    1   DCL CTX$ PTR;
     2580     5403    1   DCL TCTX# UBIN;
     2581     5404    1   DCL LDCT_CIRCUIT BIT(1);
     2582     5405
     2583     5406
     2584     5407    1   DCL KNT$RLS_CHAIN ENTRY(1);
     2585     5408    1   DCL KNT$RECV_HOST_DATA ENTRY(1) ALTRET;
     2586     5409    1   DCL KNT$SEND_DR_HOST ENTRY(1) ALTRET;
     2587     5410    1   DCL KNT$SET_REFWAIT ENTRY(1);
     2588     5411    1   DCL KNT$TR_NCI ENTRY(1);
     2589     5412    1   DCL KNT$TR_NCC ENTRY(1);
     2590     5413    1   DCL KNT$TR_NRESET ENTRY(1);
     2591     5414    1   DCL KNT$TR_TERM ENTRY(1);
     2592     5415    1   DCL KNT$TR_NDISCONNECT ENTRY(1);
     2593     5416    1   DCL KNT$TR_SEND ENTRY(1);
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:355  
     2594     5417    1   DCL KNA$GETTCTX ENTRY(1) ALTRET;
     2595     5418    1   DCL KNH$SEND ENTRY(1) ALTRET;
     2596     5419    1   DCL GHS$SET_TMR ENTRY(1);
     2597     5420    1   DCL SCREECH ENTRY(1);
     2598     5421
     2599     5422                                                /* Based Data                         */
     2600     5423        %K$TCTX (NAME=KN$TCTX, STCLASS="BASED(CTX$)");
     2601     6330    1   DCL KN$TCTX$(0:0) PTR BASED(KN_TCTX$$);
     2602     6331
     2603     6332        %K$TPDU_DT (NAME=B$TPDU_DT,STCLASS="BASED(KN$NETPARM.THDR_C$)",ALGN=CALIGNED);
     2604     6382
     2605     6383        %KN$LDCT (NAME=KN$LDCT, STCLASS="BASED(KN$NETPARM.LDCT$)");
     2606     6628
     2607     6629        %K$FRAG_HDR (NAME=FRAG_HDR, STCLASS=BASED);
     2608     6712
     2609     6713        %FPT_CONNECT (STCLASS="BASED(KN$NETPARM.FPT$)", ADRTYP=X121);
     2610     6884
     2611     6885                                                /* External Data                      */
     2612     6886    1   DCL KN_TCTX$$ PTR SYMREF;
     2613     6887    1   DCL KNT_SCODE UBIN(32) SYMREF;
     2614     6888    1   DCL KN_TCTX_MAX# UBIN SYMREF;
     2615     6889
     2616     6890        %EJECT;
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:356  
     2617     6891        /*F* NAME: KNT$RECV_4HOST
     2618     6892
     2619     6893        This routine is entered when Network has just received a message for
     2620     6894        an adjacent host node and the MSGTYPE is not QDP.
     2621     6895
     2622     6896        If KNT$RECV_4HOST returns normally to KNN$RECV, network will proceed
     2623     6897        as if the recv_4host routine had not been called; i.e. the message
     2624     6898        will be forwarded to the host by KNN$RECV call KNH$SEND.
     2625     6899
     2626     6900        If KNT$RECV_4HOST altreturns to KNN$RECV, network will inspect the
     2627     6901        value in kn$netparm.errcode to determine how to proceed.
     2628     6902
     2629     6903             An error code of zero indicates that the message has been buffered
     2630     6904             by transport and no further processing of this message is necessary.
     2631     6905
     2632     6906             A non-zero error code will indicate that transport was unsuccessful
     2633     6907             in forwarding the message (probably because the coupler's cq was full).
     2634     6908             Network will altreturn to KNH$SCAN which will cause the message to be
     2635     6909             queued in hdlcx.25's cq.
     2636     6910
     2637     6911        KNN$RECV calls this routine with the following parameters:
     2638     6912        .fif
     2639     6913        }
     2640     6914        }    KN$NETPARM.FUNCTION
     2641     6915        }     - Contains a value to indicate what type of function is to
     2642     6916        }       be performed and what type of message has been received:
     2643     6917        }
     2644     6918        }        K_NCONNECT_IND - if initiating a CONS inbound VC connection
     2645     6919        }                         (KNN$RECV was called with KN_FCN_INIT)
     2646     6920        }
     2647     6921        }        K_NCONNECT_CFM - if CONS VC connect completion
     2648     6922        }                         (KNN$RECV was called with KN_FCN_INIT_ACK)
     2649     6923        }
     2650     6924        }        K_NRESET_IND   - if CONS VC disconnect
     2651     6925        }                         (KNH$HMI found KNH$MESS.FUNCTION = KN_FCN_RESET)
     2652     6926        }
     2653     6927        }        KN_FCN_DATA    - CP-6 message received
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:357  
     2654     6928        }
     2655     6929        }        K_NDATA        - OSI message received
     2656     6930        }
     2657     6931        }    KN$NETPARM.THDR$
     2658     6932        }     - Contains the address within the message of the first
     2659     6933        }       byte of the TPDU.
     2660     6934        }
     2661     6935        }    KN$NETPARM.THDRSZ
     2662     6936        }     - Contains the byte size of the TPDU.
     2663     6937        }
     2664     6938        }    KN$NETPARM.NHDR$
     2665     6939        }     - used when FUNCTION is KN_FCN_DATA
     2666     6940        }       Contains the address of the network header.
     2667     6941        }
     2668     6942        }    KN$NETPARM.FPT$
     2669     6943        }     - used when FUNCTION is K_NCONNECT_IND to complete VC connection.
     2670     6944        }       Contains the address of FPT_CONNECT.
     2671     6945        }
     2672     6946        }    KN$NETPARM.LDCT$
     2673     6947        }     - Contains the address of the host link LDCT or the CONS VC LDCT.
     2674     6948
     2675     6949        }    KN$NETPARM.SLDCT$
     2676     6950        }     - Contains the address of the remote fep link LDCT.
     2677     6951        .fin
     2678     6952
     2679     6953        This routine is also entered from KNH$SCAN when the message arrived via
     2680     6954        a CIRCUIT LDCT and the state of that LDCT is OPEN.
     2681     6955
     2682     6956        If KNT$RECV_4HOST returns normally to KNH$SCAN, the message is to be
     2683     6957        marked as scanned.  An ALTRETURN indicates that the message is to be
     2684     6958        left on the SCQ.
     2685     6959
     2686     6960        KNH$SCAN calls this routine with the following parameters:
     2687     6961        .fif
     2688     6962        }
     2689     6963        }    KN$NETPARM.FUNCTION
     2690     6964        }     - Contains KN_FCN_DATA   message received
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:358  
     2691     6965        }
     2692     6966        }    KN$NETPARM.THDR$
     2693     6967        }     - Contains the address within the message of the first
     2694     6968        }       byte of the TPDU.
     2695     6969        }
     2696     6970        }    KN$NETPARM.THDRSZ
     2697     6971        }     - Contains the byte size of the TPDU.
     2698     6972        }
     2699     6973        */
     2700     6974        %EJECT;
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:359  
     2701     6975
     2702     6976    1      CTX$ = ADDR(NIL);
     2703     6977
     2704     6978    1      IF KN$LDCT.CONN_TYPE = %KN_CNTYPE_CIRCUIT
     2705     6979    2      THEN DO;
     2706     6980    2           LDCT_CIRCUIT = '1'B;
     2707     6981    2           TCTX# = KN$LDCT.RLCID.TCTX#;
     2708     6982    2           END;
     2709     6983    2      ELSE DO;
     2710     6984    2           LDCT_CIRCUIT = '0'B;
     2711     6985    2           TCTX# = B$TPDU_DT.DST_REF;
     2712     6986    2           END;
     2713     6987
     2714     6988    1      KN$NETPARM.TCTX_ID = TCTX#;
     2715     6989
     2716     6990    1      IF TCTX#>KN_TCTX_MAX# OR TCTX#=0
     2717     6991    1      THEN GOTO CIRCUIT_CHECK;
     2718     6992
     2719     6993    1      CTX$ = KN$TCTX$(TCTX#);
     2720     6994    1      KN$NETPARM.TCTX$ = CTX$;
     2721     6995
     2722     6996    1      IF CTX$ = ADDR(NIL)
     2723     6997    2      THEN DO;
     2724     6998    2   CIRCUIT_CHECK:
     2725     6999    2           IF TCTX#=0 AND KN$NETPARM.FUNCTION=%K_NCONNECT_IND
     2726     7000    2           THEN EXIT;
     2727     7001
     2728     7002    2           IF KN$LDCT.CONN_TYPE = %KN_CNTYPE_CIRCUIT
     2729     7003    3           THEN DO;
     2730     7004    3                CALL TRANSPORT_SCREECH;  /*N* at least for now */
     2731     7005    3                END;
     2732     7006    2           ELSE GOTO RECV_CR_4HOST;        /* for class 4 error processing       */
     2733     7007    2           END;
     2734     7008
     2735     7009        %EJECT;
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:360  
     2736     7010    2      DO SELECT(KN$NETPARM.FUNCTION);
     2737     7011
     2738     7012    2           SELECT(%KN_FCN_DATA, %K_NDATA);
     2739     7013
     2740     7014
     2741     7015        /*     KNT$RECV_4HOST    - TPDU_CR
     2742     7016
     2743     7017           If this is a connect request, KNT$RECV_HOST_DATA
     2744     7018           will do the mucking with the tctx, modify the tpdu where it is now
     2745     7019           in the handlers cq.
     2746     7020
     2747     7021           If this is an OSI connection, of any class, KNT$RECV_HOST_DATA will
     2748     7022           also have called KNN$SEND to forward the message over the coupler.
     2749     7023
     2750     7024           If this is a CP-6 connection, here we RETURN to network where the
     2751     7025           TPDU_CR will be forwarded to the host.
     2752     7026        */
     2753     7027    2           IF B$TPDU_DT.TYPE = %K_TPDU_TYPE_CR
     2754     7028    3           THEN DO;
     2755     7029    3   RECV_CR_4HOST: ;
     2756     7030    3                CALL KNT$RECV_HOST_DATA(KN$NETPARM)
     2757     7031    4                WHENRETURN DO;
     2758     7032    4                     RETURN;               /*to forward the CP-6 _CR or _CC tpdu*/
     2759     7033    4                     END;
     2760     7034
     2761     7035    4                WHENALTRETURN DO;
     2762     7036    4                     IF KN$NETPARM.ERRCODE = %KN_ERR_NOQ
     2763     7037    4                       OR KN$NETPARM.ERRCODE = %KN_ERR_NOQ2
     2764     7038    5                     THEN DO;
     2765     7039                             /*N* un-muck with dst_ref */
     2766     7040    5                          ALTRETURN;
     2767     7041    5                          END;
     2768     7042    5                     ELSE DO;
     2769     7043                                      /* must have discarded the tpdu or sent it on   */
     2770     7044                                      /* in which case the error code should be zero. */
     2771     7045    5                          KN$NETPARM.ERRCODE = 0;
     2772     7046
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:361  
     2773     7047    5                          IF LDCT_CIRCUIT
     2774     7048    5                          THEN RETURN;     /*so knh$scan doesn't leave on cq*/
     2775     7049    5                          ELSE ALTRETURN;  /*to avoid sending twice              */
     2776     7050    5                          END/*do if err = zero*/;
     2777     7051    4                     END/*do if altreturn*/;
     2778     7052    3                END/*do if tpud is _CR*/;
     2779     7053
     2780     7054        %EJECT;
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:362  
     2781     7055
     2782     7056        /*     KNT$RECV_4HOST   - TPDU_any
     2783     7057
     2784     7058           For received data that is not a connect request, KNT$RECV_HOST_DATA
     2785     7059           will do the required processing by sending acks, resetting timers, etc.
     2786     7060
     2787     7061           In sequence data messages that may be sent on to the host will be
     2788     7062           forwarded by KNT$RECV_HOST_DATA calling network.  Out of sequence
     2789     7063           messages will be buffered.
     2790     7064
     2791     7065           If this entry to RECV_4HOST was from network, we ALTRETURN to
     2792     7066           avoid sending the message twice.
     2793     7067
     2794     7068           If this entry to RECV_4HOST was from KNH$HMI, we RETURN to
     2795     7069           avoid leaving the message on HDLC's SCQ.
     2796     7070        */
     2797     7071    2           KN$NETPARM.NODE = KN$TCTX.HOST_NODE;
     2798     7072
     2799     7073    2           CALL KNT$RECV_HOST_DATA(KN$NETPARM);
     2800     7074
     2801     7075    2           IF LDCT_CIRCUIT
     2802     7076    2           THEN RETURN;                    /*so knh$scan doesn't leave on cq     */
     2803     7077    2           ELSE ALTRETURN;                 /*to avoid sending twice*/
     2804     7078
     2805     7079        %EJECT;
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:363  
     2806     7080
     2807     7081        /*     KNT$RECV_4HOST   - K_NCONNECT_IND
     2808     7082
     2809     7083        */
     2810     7084
     2811     7085    2           SELECT(%K_NCONNECT_IND);
     2812     7086    2           CALL KNT$TR_NCI(KN$NETPARM);
     2813     7087
     2814     7088    2           IF TCTX# ~= 0
     2815     7089    3           THEN DO;
     2816     7090    3                CALL TRANSPORT_SCREECH; /*N* at least for now */
     2817     7091    3                END;
     2818     7092
     2819     7093    2           CALL KNA$GETTCTX(CTX$)
     2820     7094    3           WHENALTRETURN DO;
     2821     7095    3                KN$NETPARM.ERRCODE = %KN_ERR_NOTCTX;
     2822     7096    3                ALTRETURN;
     2823     7097    3                END;
     2824     7098
     2825     7099    2           KN$TCTX.STATE = %K_TSTATE_WFCR_TPDU;
     2826     7100    2           KN$TCTX.LDCTX# = KN$NETPARM.LDCT$->KN$LDCT.LDCTX;
     2827     7101    2           KN$TCTX.HOST_NODE = KN$NETPARM.NODE;
     2828     7102    2           KN$TCTX.DST_NSAP = FPT_CONNECT.DEST;
     2829     7103    2           KN$TCTX.SRC_NSAP = FPT_CONNECT.LADR;
     2830     7104    2           KN$LDCT.RLCID.TCTX# = KN$TCTX.SRC_REF;
     2831     7105    2           RETURN;
     2832     7106
     2833     7107
     2834     7108        %EJECT;
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:364  
     2835     7109
     2836     7110        /*     KNT$RECV_4HOST   - K_NCONNECT_CFM
     2837     7111
     2838     7112        */
     2839     7113
     2840     7114    2           SELECT(%K_NCONNECT_CFM);
     2841     7115    2           CALL KNT$TR_NCC(KN$NETPARM);
     2842     7116
     2843     7117    2           KN$NETPARM.FPT$ = ADDR(NIL);
     2844     7118    2           KN$NETPARM.FLAGS.CONS = '1'B;
     2845     7119    2           KN$NETPARM.NHDRSZ = 0;
     2846     7120    2           KN$NETPARM.SHDRSZ = 0;
     2847     7121    2           KN$NETPARM.UHDRSZ = 0;
     2848     7122    2           KN$NETPARM.MSGSZ = 0;
     2849     7123
     2850     7124    2           IF KN$TCTX.STATE=%K_TSTATE_WFNC OR KN$TCTX.STATE=%K_TSTATE_WFCC
     2851     7125    3           THEN DO;
     2852     7126    3                KN$NETPARM.FUNCTION = %K_NDATA;
     2853     7127    3                KN$NETPARM.THDR$ = PINCRW(KN$TCTX.SEND_HEAD$, SIZEW(FRAG_HDR) );
     2854     7128    3                KN$NETPARM.THDRSZ = KN$TCTX.SEND_HEAD$->FRAG_HDR.DATA_BSIZE;
     2855     7129    3                KN$TCTX.STATE = %K_TSTATE_WFCC;
     2856     7130    3                CALL KNT$TR_SEND(KN$NETPARM);
     2857     7131    3                END;
     2858     7132
     2859     7133    3           ELSE DO;
     2860     7134    3                IF KN$TCTX.STATE = %K_TSTATE_WBCL
     2861     7135    4                THEN DO;
     2862     7136    4                     KN$NETPARM.FUNCTION = %KN_FCN_TERM;
     2863     7137    4                     KN$NETPARM.THDRSZ = 0;
     2864     7138    4                     END;
     2865     7139    4                ELSE DO;
     2866     7140    4                     CALL TRANSPORT_SCREECH;
     2867     7141    4                     END;
     2868     7142    3                END;
     2869     7143
     2870     7144
     2871     7145    2           CALL KNH$SEND (KN$NETPARM)
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:365  
     2872     7146    3           WHENALTRETURN DO;
     2873     7147    3                CALL TRANSPORT_SCREECH;/*N* what to do?*/
     2874     7148    3                END;
     2875     7149
     2876     7150    2           IF KN$TCTX.STATE = %K_TSTATE_WBCL
     2877     7151    3           THEN DO;
     2878     7152    3                CALL KNT$SET_REFWAIT (KN$TCTX);
     2879     7153    3                RETURN;
     2880     7154    3                END;
     2881     7155
     2882     7156    2           IF KN$TCTX.CLASS ~= 4
     2883     7157    3           THEN DO;
     2884     7158    3                CALL KNT$RLS_CHAIN (KN$TCTX);
     2885     7159    3                KN$TCTX.SEND_HEAD$ = ADDR(NIL);
     2886     7160    3                END;
     2887     7161
     2888     7162    2           RETURN;
     2889     7163
     2890     7164
     2891     7165        %EJECT;
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:366  
     2892     7166
     2893     7167        /*     KNT$RECV_4HOST   - NDISCONNECT   NRESET   TERM
     2894     7168
     2895     7169        */
     2896     7170
     2897     7171    2           SELECT(%K_NRESET_IND, %K_NDISCONNECT_IND, %KN_FCN_TERM);
     2898     7172                                 /* term if called from scan - else called from nw??  */
     2899     7173    2           IF KN$NETPARM.FUNCTION = %K_NRESET_IND
     2900     7174    2           THEN CALL KNT$TR_NRESET(KN$NETPARM);
     2901     7175    2           ELSE IF KN$NETPARM.FUNCTION = %K_NDISCONNECT_IND
     2902     7176    2                THEN CALL KNT$TR_NDISCONNECT(KN$NETPARM);
     2903     7177    2                ELSE CALL KNT$TR_TERM(KN$NETPARM);
     2904     7178
     2905     7179    2           IF (KN$TCTX.STATE>%K_TSTATE_CLOSED)
     2906     7180    2             AND (KN$TCTX.STATE ~= %K_TSTATE_CLOSING)
     2907     7181    3           THEN DO;
     2908     7182    3                KN$TCTX.REASON = %K_REASON_NOTATTACHED;
     2909     7183    3                KN$TCTX.ERR = %K_ERROR_NRESET;
     2910     7184
     2911     7185    3                IF (KN$TCTX.STATE ~= %K_TSTATE_WFCR_TPDU)
     2912     7186    3                  AND (KN$TCTX.STATE ~= %K_TSTATE_WBCL)
     2913     7187    3                THEN CALL KNT$SEND_DR_HOST(KN$NETPARM);
     2914     7188
     2915     7189    3                CALL KNT$SET_REFWAIT (KN$TCTX);
     2916     7190    3                END;
     2917     7191
     2918     7192    2           RETURN;
     2919     7193
     2920     7194
     2921     7195        /*     KNT$RECV_4HOST   - TERM_ACK
     2922     7196
     2923     7197        */
     2924     7198
     2925     7199    2           SELECT(%KN_FCN_TERM_ACK);
     2926     7200                                           /* term-ack set only by hdlc for CONS VC*/
     2927     7201
     2928     7202    2           RETURN;
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:367  
     2929     7203
     2930     7204
     2931     7205        %EJECT;
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:368  
     2932     7206    2           SELECT(ELSE);
     2933     7207    2      CALL TRANSPORT_SCREECH;
     2934     7208
     2935     7209    2           END/*do case*/;
     2936     7210
     2937     7211
     2938     7212
     2939     7213
     2940     7214    1   TRANSPORT_SCREECH: PROC;
     2941     7215    2      CALL SCREECH(KNT_SCODE);
     2942     7216    2   END TRANSPORT_SCREECH;
     2943     7217
     2944     7218    1   END KNT$RECV_4HOST;

PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:369  
--  Include file information  --

   GH_SCHD_M.:E05TOU  is referenced.
   KNH_MACRO_C.:E05TOU  is referenced.
   KN_DATA_M.:E05TOU  is referenced.
   K_TRANSPORT_M.:E05TOU  is referenced.
   K_TRANSPORT_E.:E05TOU  is referenced.
   K_INTERFACE_M.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KNT$RECV_4HOST.

   Procedure KNT$RECV_4HOST requires 550 words for executable code.
   Procedure KNT$RECV_4HOST requires 18 words of local(AUTO) storage.

    No errors detected in file KNT$RECV.:E05TSI    .

PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:370  

 Object Unit name= KNT$RECV_4HOST                             File name= KNT$RECV.:E05TOU
 UTS= JUL 30 '97 01:12:31.20 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   550    226  KNT$RECV_4HOST
    1  RoData even  none     2      2  KNT$RECV_4HOST

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        1  KNT$RECV_4HOST

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 KNT$SET_REFWAIT
 yes     yes           Std       1 KNT$RECV_HOST_DATA
 yes     yes           Std       1 KNH$SEND
         yes           Std       1 KNT$TR_NCI
         yes           Std       1 KNT$TR_NCC
 yes     yes           Std       1 KNA$GETTCTX
         yes           Std       1 KNT$TR_SEND
         yes           Std       1 KNT$RLS_CHAIN
         yes           Std       1 KNT$TR_NRESET
         yes           Std       1 KNT$TR_NDISCONNECT
         yes           Std       1 KNT$TR_TERM
 yes     yes           Std       1 KNT$SEND_DR_HOST
         yes           Std       1 SCREECH
                       nStd      0 X6A_AUTO_1
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:371  
                       nStd      0 X6B_BLR
                       nStd      0 X6A_ARET
                       nStd      0 X6A_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KN_TCTX$$                             KNT_SCODE                             KN_TCTX_MAX#
r    G$ROS$
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:372  


     2557        1        /*M* KNT$RECV_4HOST - Send session messages to network.   */
     2558        2        /*T***********************************************************/
     2559        3        /*T*                                                         */
     2560        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     2561        5        /*T*                                                         */
     2562        6        /*T***********************************************************/
     2563        7        /*X* PLM=3,IND=5,ENU=0,ECU=0 */
     2564        8
     2565        9        KNT$RECV_4HOST: PROC(KN$NETPARM) ALTRET;

      9   0 000000  D380 0000 0000  xent KNT$RECV_4HOST  LNJ,B5   X6A_AUTO_1
          0 000003       0012 0001                       DC       18,1

     2566       10
     2567       11        %INCLUDE K_ADDRESS_M;
     2568      514        %INCLUDE K_INTERFACE_M;
     2569      923        %INCLUDE K_TRANSPORT_E;
     2570     1248        %INCLUDE K_TRANSPORT_M;
     2571     3032        %INCLUDE KN_DATA_M;
     2572     4818        %INCLUDE KNH_MACRO_C;
     2573     5101 S      %INCLUDE KI_CP6;
     2574     5102        %INCLUDE GH_SCHD_M;
     2575     5246
     2576     5247                                                /* Input parameters                   */
     2577     5248        %KN$NETPARM;
     2578     5401                                                /* Auto Storage                       */
     2579     5402    1   DCL CTX$ PTR;
     2580     5403    1   DCL TCTX# UBIN;
     2581     5404    1   DCL LDCT_CIRCUIT BIT(1);
     2582     5405
     2583     5406
     2584     5407    1   DCL KNT$RLS_CHAIN ENTRY(1);
     2585     5408    1   DCL KNT$RECV_HOST_DATA ENTRY(1) ALTRET;
     2586     5409    1   DCL KNT$SEND_DR_HOST ENTRY(1) ALTRET;
     2587     5410    1   DCL KNT$SET_REFWAIT ENTRY(1);
     2588     5411    1   DCL KNT$TR_NCI ENTRY(1);
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:373  
     2589     5412    1   DCL KNT$TR_NCC ENTRY(1);
     2590     5413    1   DCL KNT$TR_NRESET ENTRY(1);
     2591     5414    1   DCL KNT$TR_TERM ENTRY(1);
     2592     5415    1   DCL KNT$TR_NDISCONNECT ENTRY(1);
     2593     5416    1   DCL KNT$TR_SEND ENTRY(1);
     2594     5417    1   DCL KNA$GETTCTX ENTRY(1) ALTRET;
     2595     5418    1   DCL KNH$SEND ENTRY(1) ALTRET;
     2596     5419    1   DCL GHS$SET_TMR ENTRY(1);
     2597     5420    1   DCL SCREECH ENTRY(1);
     2598     5421
     2599     5422                                                /* Based Data                         */
     2600     5423        %K$TCTX (NAME=KN$TCTX, STCLASS="BASED(CTX$)");
     2601     6330    1   DCL KN$TCTX$(0:0) PTR BASED(KN_TCTX$$);
     2602     6331
     2603     6332        %K$TPDU_DT (NAME=B$TPDU_DT,STCLASS="BASED(KN$NETPARM.THDR_C$)",ALGN=CALIGNED);
     2604     6382
     2605     6383        %KN$LDCT (NAME=KN$LDCT, STCLASS="BASED(KN$NETPARM.LDCT$)");
     2606     6628
     2607     6629        %K$FRAG_HDR (NAME=FRAG_HDR, STCLASS=BASED);
     2608     6712
     2609     6713        %FPT_CONNECT (STCLASS="BASED(KN$NETPARM.FPT$)", ADRTYP=X121);
     2610     6884
     2611     6885                                                /* External Data                      */
     2612     6886    1   DCL KN_TCTX$$ PTR SYMREF;
     2613     6887    1   DCL KNT_SCODE UBIN(32) SYMREF;
     2614     6888    1   DCL KN_TCTX_MAX# UBIN SYMREF;
     2615     6889
     2616     6890        %EJECT;
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:374  
     2617     6891        /*F* NAME: KNT$RECV_4HOST
     2618     6892
     2619     6893        This routine is entered when Network has just received a message for
     2620     6894        an adjacent host node and the MSGTYPE is not QDP.
     2621     6895
     2622     6896        If KNT$RECV_4HOST returns normally to KNN$RECV, network will proceed
     2623     6897        as if the recv_4host routine had not been called; i.e. the message
     2624     6898        will be forwarded to the host by KNN$RECV call KNH$SEND.
     2625     6899
     2626     6900        If KNT$RECV_4HOST altreturns to KNN$RECV, network will inspect the
     2627     6901        value in kn$netparm.errcode to determine how to proceed.
     2628     6902
     2629     6903             An error code of zero indicates that the message has been buffered
     2630     6904             by transport and no further processing of this message is necessary.
     2631     6905
     2632     6906             A non-zero error code will indicate that transport was unsuccessful
     2633     6907             in forwarding the message (probably because the coupler's cq was full).
     2634     6908             Network will altreturn to KNH$SCAN which will cause the message to be
     2635     6909             queued in hdlcx.25's cq.
     2636     6910
     2637     6911        KNN$RECV calls this routine with the following parameters:
     2638     6912        .fif
     2639     6913        }
     2640     6914        }    KN$NETPARM.FUNCTION
     2641     6915        }     - Contains a value to indicate what type of function is to
     2642     6916        }       be performed and what type of message has been received:
     2643     6917        }
     2644     6918        }        K_NCONNECT_IND - if initiating a CONS inbound VC connection
     2645     6919        }                         (KNN$RECV was called with KN_FCN_INIT)
     2646     6920        }
     2647     6921        }        K_NCONNECT_CFM - if CONS VC connect completion
     2648     6922        }                         (KNN$RECV was called with KN_FCN_INIT_ACK)
     2649     6923        }
     2650     6924        }        K_NRESET_IND   - if CONS VC disconnect
     2651     6925        }                         (KNH$HMI found KNH$MESS.FUNCTION = KN_FCN_RESET)
     2652     6926        }
     2653     6927        }        KN_FCN_DATA    - CP-6 message received
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:375  
     2654     6928        }
     2655     6929        }        K_NDATA        - OSI message received
     2656     6930        }
     2657     6931        }    KN$NETPARM.THDR$
     2658     6932        }     - Contains the address within the message of the first
     2659     6933        }       byte of the TPDU.
     2660     6934        }
     2661     6935        }    KN$NETPARM.THDRSZ
     2662     6936        }     - Contains the byte size of the TPDU.
     2663     6937        }
     2664     6938        }    KN$NETPARM.NHDR$
     2665     6939        }     - used when FUNCTION is KN_FCN_DATA
     2666     6940        }       Contains the address of the network header.
     2667     6941        }
     2668     6942        }    KN$NETPARM.FPT$
     2669     6943        }     - used when FUNCTION is K_NCONNECT_IND to complete VC connection.
     2670     6944        }       Contains the address of FPT_CONNECT.
     2671     6945        }
     2672     6946        }    KN$NETPARM.LDCT$
     2673     6947        }     - Contains the address of the host link LDCT or the CONS VC LDCT.
     2674     6948
     2675     6949        }    KN$NETPARM.SLDCT$
     2676     6950        }     - Contains the address of the remote fep link LDCT.
     2677     6951        .fin
     2678     6952
     2679     6953        This routine is also entered from KNH$SCAN when the message arrived via
     2680     6954        a CIRCUIT LDCT and the state of that LDCT is OPEN.
     2681     6955
     2682     6956        If KNT$RECV_4HOST returns normally to KNH$SCAN, the message is to be
     2683     6957        marked as scanned.  An ALTRETURN indicates that the message is to be
     2684     6958        left on the SCQ.
     2685     6959
     2686     6960        KNH$SCAN calls this routine with the following parameters:
     2687     6961        .fif
     2688     6962        }
     2689     6963        }    KN$NETPARM.FUNCTION
     2690     6964        }     - Contains KN_FCN_DATA   message received
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:376  
     2691     6965        }
     2692     6966        }    KN$NETPARM.THDR$
     2693     6967        }     - Contains the address within the message of the first
     2694     6968        }       byte of the TPDU.
     2695     6969        }
     2696     6970        }    KN$NETPARM.THDRSZ
     2697     6971        }     - Contains the byte size of the TPDU.
     2698     6972        }
     2699     6973        */
     2700     6974        %EJECT;
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:377  
     2701     6975
     2702     6976    1      CTX$ = ADDR(NIL);

   6976   0 000005  EB80 0000 0000                       LAB,B6   0
          0 000008  EFC7 0006                            STB,B6   CTX$,AUTO

     2703     6977
     2704     6978    1      IF KN$LDCT.CONN_TYPE = %KN_CNTYPE_CIRCUIT

   6978   0 00000A  DCC7 0004                            LDB,B5   @KN$NETPARM,AUTO
          0 00000C  CC85                                 LDB,B4   ,B5
          0 00000D  E284                                 LLH,R6   ,B4
          0 00000E  6D07                                 CMV,R6   7
          0 00000F  0981 000A                            BNE      s:6984,PREL

     2705     6979    2      THEN DO;

     2706     6980    2           LDCT_CIRCUIT = '1'B;

   6980   0 000011  8947 0009                            LBT,'8000'X       LDCT_CIRCUIT,AUTO
   6980   0 000013       8000

     2707     6981    2           TCTX# = KN$LDCT.RLCID.TCTX#;

   6981   0 000014  D844 0002                            LDR,R5   2,B4
          0 000016  DF47 0008                            STR,R5   TCTX#,AUTO

     2708     6982    2           END;

   6982   0 000018  0F81 0018                            B        s:6988,PREL

     2709     6983    2      ELSE DO;

     2710     6984    2           LDCT_CIRCUIT = '0'B;

   6984   0 00001A  8747 0009                            CL       LDCT_CIRCUIT,AUTO

PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:378  
     2711     6985    2           TCTX# = B$TPDU_DT.DST_REF;

   6985   0 00001C  8CC5 000B                            LDI      11,B5
          0 00001E  B856                                 LDR,R3   R6
          0 00001F  E570 7FFF                            AND,R6   32767,IMO
          0 000021  8D47 000C                            SDI      LDCT_CIRCUIT+3,AUTO
          0 000023  CCC7 000C                            LDB,B4   LDCT_CIRCUIT+3,AUTO
          0 000025  304F                                 SOR,R3   15
          0 000026  5C02                                 LDV,R5   2
          0 000027  0021                                 ALR      ;
          0 000028       4234 0001                                ALPHANUM(1,B4,R3,,2),;
          0 00002A       4007 000E                                ALPHANUM(LDCT_CIRCUIT+5,AUTO,,R5,FILL)
          0 00002C  437F                                 CSYNC    s:6985+15,SPREL
          0 00002D  C847 000E                            LDR,R4   LDCT_CIRCUIT+5,AUTO
          0 00002F  CF47 0008                            STR,R4   TCTX#,AUTO

     2712     6986    2           END;

     2713     6987
     2714     6988    1      KN$NETPARM.TCTX_ID = TCTX#;

   6988   0 000031  E847 0008                            LDR,R6   TCTX#,AUTO
          0 000033  EF45 0011                            STR,R6   17,B5

     2715     6989
     2716     6990    1      IF TCTX#>KN_TCTX_MAX# OR TCTX#=0

   6990   0 000035  E900 0000 0000  xsym                 CMR,R6   KN_TCTX_MAX#
          0 000038  0301 0010                            BG       s:6997,PREL
          0 00003A  6901 000E                            BEZ,R6   s:6997,PREL

     2717     6991    1      THEN GOTO CIRCUIT_CHECK;
     2718     6992
     2719     6993    1      CTX$ = KN$TCTX$(TCTX#);

   6993   0 00003C  CC80 0000 0000  xsym                 LDB,B4   KN_TCTX$$
          0 00003F  B856                                 LDR,R3   R6
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:379  
          0 000040  BCB4                                 LDB,B3   ,B4,R3
          0 000041  BFC7 0006                            STB,B3   CTX$,AUTO

     2720     6994    1      KN$NETPARM.TCTX$ = CTX$;

   6994   0 000043  BFC5 001B                            STB,B3   27,B5

     2721     6995
     2722     6996    1      IF CTX$ = ADDR(NIL)

   6996   0 000045  8DC7 0006                            CMN      CTX$,AUTO
          0 000047  0981 0012                            BNE      s:7010,PREL

     2723     6997    2      THEN DO;

     2724     6998    2   CIRCUIT_CHECK:
     2725     6999    2           IF TCTX#=0 AND KN$NETPARM.FUNCTION=%K_NCONNECT_IND

   6999   0 000049  6981 0006            CIRCUIT_CHECK   BNEZ,R6  s:7002,PREL
          0 00004B  D845 0014                            LDR,R5   20,B5
          0 00004D  5D1F                                 CMV,R5   31
          0 00004E  0901 000B                            BE       s:7010,PREL

     2726     7000    2           THEN EXIT;
     2727     7001
     2728     7002    2           IF KN$LDCT.CONN_TYPE = %KN_CNTYPE_CIRCUIT

   7002   0 000050  EC85                                 LDB,B6   ,B5
          0 000051  D286                                 LLH,R5   ,B6
          0 000052  5D07                                 CMV,R5   7
          0 000053  0981 0056                            BNE      s:7028,PREL

     2729     7003    3           THEN DO;

     2730     7004    3                CALL TRANSPORT_SCREECH;  /*N* at least for now */

   7004   0 000055  E3C0 01BE                            LNJ,B6   s:0,PREL
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:380  
          0 000057       0001                            DC       s:7005,PREL

     2731     7005    3                END;

   7005   0 000058  0F81 0001                            B        s:7010,PREL

     2732     7006    2           ELSE GOTO RECV_CR_4HOST;        /* for class 4 error processing       */
     2733     7007    2           END;
     2734     7008
     2735     7009        %EJECT;
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:381  
     2736     7010    2      DO SELECT(KN$NETPARM.FUNCTION);

   7010   0 00005A  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          0 00005C  E846 0014                            LDR,R6   20,B6
          0 00005E  E970 0021                            CMR,R6   33,IMO
          0 000060  0801 000E                            BAL      s:7010+21,PREL
          0 000062  0901 0027                            BE       s:7027,PREL
          0 000064  E970 0023                            CMR,R6   35,IMO
          0 000066  0801 01A8                            BAL      s:7207,PREL
          0 000068  0901 0157                            BE       s:7173,PREL
          0 00006A  6D24                                 CMV,R6   36
          0 00006B  0981 01A3                            BNE      s:7207,PREL
          0 00006D  0F81 0152                            B        s:7173,PREL
          0 00006F  E970 001F                            CMR,R6   31,IMO
          0 000071  0801 0008                            BAL      s:7010+32,PREL
          0 000073  0901 0074                            BE       s:7086,PREL
          0 000075  6D20                                 CMV,R6   32
          0 000076  0981 0198                            BNE      s:7207,PREL
          0 000078  0F81 00C7                            B        s:7115,PREL
          0 00007A  E970 0004                            CMR,R6   4,IMO
          0 00007C  0801 0008                            BAL      s:7010+43,PREL
          0 00007E  0901 018D                            BE       s:7202,PREL
          0 000080  6D05                                 CMV,R6   5
          0 000081  0981 018D                            BNE      s:7207,PREL
          0 000083  0F81 0006                            B        s:7027,PREL
          0 000085  6D03                                 CMV,R6   3
          0 000086  0981 0188                            BNE      s:7207,PREL
          0 000088  0F81 0137                            B        s:7173,PREL

     2737     7011
     2738     7012    2           SELECT(%KN_FCN_DATA, %K_NDATA);

     2739     7013
     2740     7014
     2741     7015        /*     KNT$RECV_4HOST    - TPDU_CR
     2742     7016
     2743     7017           If this is a connect request, KNT$RECV_HOST_DATA
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:382  
     2744     7018           will do the mucking with the tctx, modify the tpdu where it is now
     2745     7019           in the handlers cq.
     2746     7020
     2747     7021           If this is an OSI connection, of any class, KNT$RECV_HOST_DATA will
     2748     7022           also have called KNN$SEND to forward the message over the coupler.
     2749     7023
     2750     7024           If this is a CP-6 connection, here we RETURN to network where the
     2751     7025           TPDU_CR will be forwarded to the host.
     2752     7026        */
     2753     7027    2           IF B$TPDU_DT.TYPE = %K_TPDU_TYPE_CR

   7027   0 00008A  8CC6 000B                            LDI      11,B6
          0 00008C  B856                                 LDR,R3   R6
          0 00008D  E570 7FFF                            AND,R6   32767,IMO
          0 00008F  8D47 000C                            SDI      LDCT_CIRCUIT+3,AUTO
          0 000091  DCC7 000C                            LDB,B5   LDCT_CIRCUIT+3,AUTO
          0 000093  304F                                 SOR,R3   15
          0 000094  BF47 000F                            STR,R3   LDCT_CIRCUIT+6,AUTO
          0 000096  DFC7 0010                            STB,B5   LDCT_CIRCUIT+7,AUTO
          0 000098  AB85                                 LAB,B2   ,B5
          0 000099  A853                                 LDR,R2   R3
          0 00009A  2003                                 SOL,R2   3
          0 00009B  2E08                                 ADV,R2   8
          0 00009C  6C04                                 LDV,R6   4
          0 00009D  BBC7 000C                            LAB,B3   LDCT_CIRCUIT+3,AUTO
          0 00009F  3C20                                 LDV,R3   32
          0 0000A0  7C10                                 LDV,R7   16
          0 0000A1  D380 0000 0000  xent                 LNJ,B5   X6B_BLR
          0 0000A4  E847 000E                            LDR,R6   LDCT_CIRCUIT+5,AUTO
          0 0000A6  604C                                 SOR,R6   12
          0 0000A7  6D0E                                 CMV,R6   14
          0 0000A8  0981 0025                            BNE      s:7071,PREL

     2754     7028    3           THEN DO;

   7004   0                              RECV_CR_4HOST   null
     2755     7029    3   RECV_CR_4HOST: ;
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:383  
     2756     7030    3                CALL KNT$RECV_HOST_DATA(KN$NETPARM)

   7030   0 0000AA  BBC7 0004            RECV_CR_4HOST   LAB,B3   @KN$NETPARM,AUTO
          0 0000AC  CBF0 0100                            LAB,B4   256,IMO
          0 0000AE  E380 0000 0000  xent                 LNJ,B6   KNT$RECV_HOST_DATA
          0 0000B1       0004                            DC       s:7036,PREL

     2757     7031    4                WHENRETURN DO;

     2758     7032    4                     RETURN;               /*to forward the CP-6 _CR or _CC tpdu*/

   7032   0 0000B2  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     2759     7033    4                     END;
     2760     7034
     2761     7035    4                WHENALTRETURN DO;

     2762     7036    4                     IF KN$NETPARM.ERRCODE = %KN_ERR_NOQ

   7036   0 0000B5  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          0 0000B7  E846 0016                            LDR,R6   22,B6
          0 0000B9  6D01                                 CMV,R6   1
          0 0000BA  0901 0004                            BE       s:7040,PREL
          0 0000BC  6D07                                 CMV,R6   7
          0 0000BD  0981 0004                            BNE      s:7045,PREL

     2763     7037    4                       OR KN$NETPARM.ERRCODE = %KN_ERR_NOQ2
     2764     7038    5                     THEN DO;

     2765     7039                             /*N* un-muck with dst_ref */
     2766     7040    5                          ALTRETURN;

   7040   0 0000BF  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     2767     7041    5                          END;
     2768     7042    5                     ELSE DO;

PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:384  
     2769     7043                                      /* must have discarded the tpdu or sent it on   */
     2770     7044                                      /* in which case the error code should be zero. */
     2771     7045    5                          KN$NETPARM.ERRCODE = 0;

   7045   0 0000C2  8746 0016                            CL       22,B6

     2772     7046
     2773     7047    5                          IF LDCT_CIRCUIT

   7047   0 0000C4  89C7 0009                            CMZ      LDCT_CIRCUIT,AUTO
          0 0000C6  0881 0004                            BAGE     s:7049,PREL

     2774     7048    5                          THEN RETURN;     /*so knh$scan doesn't leave on cq*/

   7048   0 0000C8  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     2775     7049    5                          ELSE ALTRETURN;  /*to avoid sending twice              */

   7049   0 0000CB  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     2776     7050    5                          END/*do if err = zero*/;
     2777     7051    4                     END/*do if altreturn*/;
     2778     7052    3                END/*do if tpud is _CR*/;
     2779     7053
     2780     7054        %EJECT;
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:385  
     2781     7055
     2782     7056        /*     KNT$RECV_4HOST   - TPDU_any
     2783     7057
     2784     7058           For received data that is not a connect request, KNT$RECV_HOST_DATA
     2785     7059           will do the required processing by sending acks, resetting timers, etc.
     2786     7060
     2787     7061           In sequence data messages that may be sent on to the host will be
     2788     7062           forwarded by KNT$RECV_HOST_DATA calling network.  Out of sequence
     2789     7063           messages will be buffered.
     2790     7064
     2791     7065           If this entry to RECV_4HOST was from network, we ALTRETURN to
     2792     7066           avoid sending the message twice.
     2793     7067
     2794     7068           If this entry to RECV_4HOST was from KNH$HMI, we RETURN to
     2795     7069           avoid leaving the message on HDLC's SCQ.
     2796     7070        */
     2797     7071    2           KN$NETPARM.NODE = KN$TCTX.HOST_NODE;

   7071   0 0000CE  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          0 0000D0  DCC7 0006                            LDB,B5   CTX$,AUTO
          0 0000D2  E2C5 0004                            LLH,R6   4,B5
          0 0000D4  EF46 0015                            STR,R6   21,B6

     2798     7072
     2799     7073    2           CALL KNT$RECV_HOST_DATA(KN$NETPARM);

   7073   0 0000D6  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 0000D8  CBF0 0100                            LAB,B4   256,IMO
          0 0000DA  E380 0000 0000  xent                 LNJ,B6   KNT$RECV_HOST_DATA
          0 0000DD       0001                            DC       s:7075,PREL

     2800     7074
     2801     7075    2           IF LDCT_CIRCUIT

   7075   0 0000DE  89C7 0009                            CMZ      LDCT_CIRCUIT,AUTO
          0 0000E0  0881 0004                            BAGE     s:7077,PREL

PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:386  
     2802     7076    2           THEN RETURN;                    /*so knh$scan doesn't leave on cq     */

   7076   0 0000E2  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     2803     7077    2           ELSE ALTRETURN;                 /*to avoid sending twice*/

   7077   0 0000E5  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     2804     7078
     2805     7079        %EJECT;
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:387  
     2806     7080
     2807     7081        /*     KNT$RECV_4HOST   - K_NCONNECT_IND
     2808     7082
     2809     7083        */
     2810     7084
     2811     7085    2           SELECT(%K_NCONNECT_IND);

     2812     7086    2           CALL KNT$TR_NCI(KN$NETPARM);

   7086   0 0000E8  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 0000EA  CBF0 0100                            LAB,B4   256,IMO
          0 0000EC  E380 0000 0000  xent                 LNJ,B6   KNT$TR_NCI
          0 0000EF       0001                            DC       s:7088,PREL

     2813     7087
     2814     7088    2           IF TCTX# ~= 0

   7088   0 0000F0  E847 0008                            LDR,R6   TCTX#,AUTO
          0 0000F2  6901 0004                            BEZ,R6   s:7093,PREL

     2815     7089    3           THEN DO;

     2816     7090    3                CALL TRANSPORT_SCREECH; /*N* at least for now */

   7090   0 0000F4  E3C0 011F                            LNJ,B6   s:0,PREL
          0 0000F6       0001                            DC       s:7093,PREL

     2817     7091    3                END;

     2818     7092
     2819     7093    2           CALL KNA$GETTCTX(CTX$)

   7093   0 0000F7  EBC7 0006                            LAB,B6   CTX$,AUTO
          0 0000F9  EFC7 000C                            STB,B6   LDCT_CIRCUIT+3,AUTO
          0 0000FB  BBC7 000C                            LAB,B3   LDCT_CIRCUIT+3,AUTO
          0 0000FD  CBF0 0100                            LAB,B4   256,IMO
          0 0000FF  E380 0000 0000  xent                 LNJ,B6   KNA$GETTCTX
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:388  
          0 000102       0003                            DC       s:7095,PREL
          0 000103  0F81 0009                            B        s:7099,PREL

     2820     7094    3           WHENALTRETURN DO;

     2821     7095    3                KN$NETPARM.ERRCODE = %KN_ERR_NOTCTX;

   7095   0 000105  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          0 000107  6C06                                 LDV,R6   6
          0 000108  EF46 0016                            STR,R6   22,B6

     2822     7096    3                ALTRETURN;

   7096   0 00010A  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     2823     7097    3                END;
     2824     7098
     2825     7099    2           KN$TCTX.STATE = %K_TSTATE_WFCR_TPDU;

   7099   0 00010D  6C0B                                 LDV,R6   11
          0 00010E  ECC7 0006                            LDB,B6   CTX$,AUTO
          0 000110  E786                                 STH,R6   ,B6

     2826     7100    2           KN$TCTX.LDCTX# = KN$NETPARM.LDCT$->KN$LDCT.LDCTX;

   7100   0 000111  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          0 000113  DC86                                 LDB,B5   ,B6
          0 000114  D845 0007                            LDR,R5   7,B5
          0 000116  CCC7 0006                            LDB,B4   CTX$,AUTO
          0 000118  DA84                                 SRM,R5,'00FF'X    ,B4
          0 000119       00FF

     2827     7101    2           KN$TCTX.HOST_NODE = KN$NETPARM.NODE;

   7101   0 00011A  D846 0015                            LDR,R5   21,B6
          0 00011C  DCC7 0006                            LDB,B5   CTX$,AUTO
          0 00011E  D7C5 0004                            STH,R5   4,B5
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:389  

     2828     7102    2           KN$TCTX.DST_NSAP = FPT_CONNECT.DEST;

   7102   0 000120  DCC6 0019                            LDB,B5   25,B6
          0 000122  AB85                                 LAB,B2   ,B5
          0 000123  2C26                                 LDV,R2   38
          0 000124  6C16                                 LDV,R6   22
          0 000125  BCC7 0006                            LDB,B3   CTX$,AUTO
          0 000127  BBC3 00A5                            LAB,B3   165,B3
          0 000129  3C00                                 LDV,R3   0
          0 00012A  0008                                 MMM

     2829     7103    2           KN$TCTX.SRC_NSAP = FPT_CONNECT.LADR;

   7103   0 00012B  CCC6 0019                            LDB,B4   25,B6
          0 00012D  AB84                                 LAB,B2   ,B4
          0 00012E  2C3C                                 LDV,R2   60
          0 00012F  6C16                                 LDV,R6   22
          0 000130  BCC7 0006                            LDB,B3   CTX$,AUTO
          0 000132  BBC3 009A                            LAB,B3   154,B3
          0 000134  3C00                                 LDV,R3   0
          0 000135  0008                                 MMM

     2830     7104    2           KN$LDCT.RLCID.TCTX# = KN$TCTX.SRC_REF;

   7104   0 000136  BC86                                 LDB,B3   ,B6
          0 000137  9CC7 0006                            LDB,B1   CTX$,AUTO
          0 000139  E841 0002                            LDR,R6   2,B1
          0 00013B  EF43 0002                            STR,R6   2,B3

     2831     7105    2           RETURN;

   7105   0 00013D  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     2832     7106
     2833     7107
     2834     7108        %EJECT;
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:390  
     2835     7109
     2836     7110        /*     KNT$RECV_4HOST   - K_NCONNECT_CFM
     2837     7111
     2838     7112        */
     2839     7113
     2840     7114    2           SELECT(%K_NCONNECT_CFM);

     2841     7115    2           CALL KNT$TR_NCC(KN$NETPARM);

   7115   0 000140  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 000142  CBF0 0100                            LAB,B4   256,IMO
          0 000144  E380 0000 0000  xent                 LNJ,B6   KNT$TR_NCC
          0 000147       0001                            DC       s:7117,PREL

     2842     7116
     2843     7117    2           KN$NETPARM.FPT$ = ADDR(NIL);

   7117   0 000148  EB80 0000 0000                       LAB,B6   0
          0 00014B  DCC7 0004                            LDB,B5   @KN$NETPARM,AUTO
          0 00014D  EFC5 0019                            STB,B6   25,B5

     2844     7118    2           KN$NETPARM.FLAGS.CONS = '1'B;

   7118   0 00014F  8945 0012                            LBT,'0100'X       18,B5
   7118   0 000151       0100

     2845     7119    2           KN$NETPARM.NHDRSZ = 0;

   7119   0 000152  8745 0010                            CL       16,B5

     2846     7120    2           KN$NETPARM.SHDRSZ = 0;

   7120   0 000154  8745 000A                            CL       10,B5

     2847     7121    2           KN$NETPARM.UHDRSZ = 0;

   7121   0 000156  8745 0007                            CL       7,B5
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:391  

     2848     7122    2           KN$NETPARM.MSGSZ = 0;

   7122   0 000158  8745 0004                            CL       4,B5

     2849     7123
     2850     7124    2           IF KN$TCTX.STATE=%K_TSTATE_WFNC OR KN$TCTX.STATE=%K_TSTATE_WFCC

   7124   0 00015A  CCC7 0006                            LDB,B4   CTX$,AUTO
          0 00015C  E284                                 LLH,R6   ,B4
          0 00015D  6D09                                 CMV,R6   9
          0 00015E  0901 0004                            BE       s:7126,PREL
          0 000160  6D03                                 CMV,R6   3
          0 000161  0981 001C                            BNE      s:7134,PREL

     2851     7125    3           THEN DO;

     2852     7126    3                KN$NETPARM.FUNCTION = %K_NDATA;

   7126   0 000163  5C21                                 LDV,R5   33
          0 000164  DF45 0014                            STR,R5   20,B5

     2853     7127    3                KN$NETPARM.THDR$ = PINCRW(KN$TCTX.SEND_HEAD$, SIZEW(FRAG_HDR) );

   7127   0 000166  BCC4 003A                            LDB,B3   58,B4
          0 000168  ABC3 0008                            LAB,B2   8,B3
          0 00016A  AFC5 000B                            STB,B2   11,B5

     2854     7128    3                KN$NETPARM.THDRSZ = KN$TCTX.SEND_HEAD$->FRAG_HDR.DATA_BSIZE;

   7128   0 00016C  BCC4 003A                            LDB,B3   58,B4
          0 00016E  E843 0001                            LDR,R6   1,B3
          0 000170  EF45 000D                            STR,R6   13,B5

     2855     7129    3                KN$TCTX.STATE = %K_TSTATE_WFCC;

   7129   0 000172  4C03                                 LDV,R4   3
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:392  
          0 000173  C784                                 STH,R4   ,B4

     2856     7130    3                CALL KNT$TR_SEND(KN$NETPARM);

   7130   0 000174  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 000176  CBF0 0100                            LAB,B4   256,IMO
          0 000178  E380 0000 0000  xent                 LNJ,B6   KNT$TR_SEND
          0 00017B       0001                            DC       s:7131,PREL

     2857     7131    3                END;

   7131   0 00017C  0F81 000E                            B        s:7145,PREL

     2858     7132
     2859     7133    3           ELSE DO;

     2860     7134    3                IF KN$TCTX.STATE = %K_TSTATE_WBCL

   7134   0 00017E  6D04                                 CMV,R6   4
          0 00017F  0981 0008                            BNE      s:7140,PREL

     2861     7135    4                THEN DO;

     2862     7136    4                     KN$NETPARM.FUNCTION = %KN_FCN_TERM;

   7136   0 000181  5C03                                 LDV,R5   3
          0 000182  DF45 0014                            STR,R5   20,B5

     2863     7137    4                     KN$NETPARM.THDRSZ = 0;

   7137   0 000184  8745 000D                            CL       13,B5

     2864     7138    4                     END;

   7138   0 000186  0F81 0004                            B        s:7145,PREL

     2865     7139    4                ELSE DO;
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:393  

     2866     7140    4                     CALL TRANSPORT_SCREECH;

   7140   0 000188  E3C0 008B                            LNJ,B6   s:0,PREL
          0 00018A       0001                            DC       s:7145,PREL

     2867     7141    4                     END;

     2868     7142    3                END;

     2869     7143
     2870     7144
     2871     7145    2           CALL KNH$SEND (KN$NETPARM)

   7145   0 00018B  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 00018D  CBF0 0100                            LAB,B4   256,IMO
          0 00018F  E380 0000 0000  xent                 LNJ,B6   KNH$SEND
          0 000192       0003                            DC       s:7147,PREL
          0 000193  0F81 0004                            B        s:7150,PREL

     2872     7146    3           WHENALTRETURN DO;

     2873     7147    3                CALL TRANSPORT_SCREECH;/*N* what to do?*/

   7147   0 000195  E3C0 007E                            LNJ,B6   s:0,PREL
          0 000197       0001                            DC       s:7150,PREL

     2874     7148    3                END;

     2875     7149
     2876     7150    2           IF KN$TCTX.STATE = %K_TSTATE_WBCL

   7150   0 000198  ECC7 0006                            LDB,B6   CTX$,AUTO
          0 00019A  E286                                 LLH,R6   ,B6
          0 00019B  6D04                                 CMV,R6   4
          0 00019C  0981 000C                            BNE      s:7156,PREL

PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:394  
     2877     7151    3           THEN DO;

     2878     7152    3                CALL KNT$SET_REFWAIT (KN$TCTX);

   7152   0 00019E  BBC7 0006                            LAB,B3   CTX$,AUTO
          0 0001A0  CBF0 0100                            LAB,B4   256,IMO
          0 0001A2  E380 0000 0000  xent                 LNJ,B6   KNT$SET_REFWAIT
          0 0001A5       0001                            DC       s:7153,PREL

     2879     7153    3                RETURN;

   7153   0 0001A6  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     2880     7154    3                END;
     2881     7155
     2882     7156    2           IF KN$TCTX.CLASS ~= 4

   7156   0 0001A9  D2C6 0005                            LLH,R5   5,B6
          0 0001AB  5D04                                 CMV,R5   4
          0 0001AC  0901 0010                            BE       s:7162,PREL

     2883     7157    3           THEN DO;

     2884     7158    3                CALL KNT$RLS_CHAIN (KN$TCTX);

   7158   0 0001AE  BBC7 0006                            LAB,B3   CTX$,AUTO
          0 0001B0  CBF0 0100                            LAB,B4   256,IMO
          0 0001B2  E380 0000 0000  xent                 LNJ,B6   KNT$RLS_CHAIN
          0 0001B5       0001                            DC       s:7159,PREL

     2885     7159    3                KN$TCTX.SEND_HEAD$ = ADDR(NIL);

   7159   0 0001B6  EB80 0000 0000                       LAB,B6   0
          0 0001B9  DCC7 0006                            LDB,B5   CTX$,AUTO
          0 0001BB  EFC5 003A                            STB,B6   58,B5

     2886     7160    3                END;
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:395  

     2887     7161
     2888     7162    2           RETURN;

   7162   0 0001BD  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     2889     7163
     2890     7164
     2891     7165        %EJECT;
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:396  
     2892     7166
     2893     7167        /*     KNT$RECV_4HOST   - NDISCONNECT   NRESET   TERM
     2894     7168
     2895     7169        */
     2896     7170
     2897     7171    2           SELECT(%K_NRESET_IND, %K_NDISCONNECT_IND, %KN_FCN_TERM);

     2898     7172                                 /* term if called from scan - else called from nw??  */
     2899     7173    2           IF KN$NETPARM.FUNCTION = %K_NRESET_IND

   7173   0 0001C0  6D23                                 CMV,R6   35
          0 0001C1  0981 000B                            BNE      s:7175,PREL

     2900     7174    2           THEN CALL KNT$TR_NRESET(KN$NETPARM);

   7174   0 0001C3  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 0001C5  CBF0 0100                            LAB,B4   256,IMO
          0 0001C7  E380 0000 0000  xent                 LNJ,B6   KNT$TR_NRESET
          0 0001CA       0001                            DC       s:7174+8,PREL
          0 0001CB  0F81 0016                            B        s:7179,PREL

     2901     7175    2           ELSE IF KN$NETPARM.FUNCTION = %K_NDISCONNECT_IND

   7175   0 0001CD  6D24                                 CMV,R6   36
          0 0001CE  0981 000B                            BNE      s:7177,PREL

     2902     7176    2                THEN CALL KNT$TR_NDISCONNECT(KN$NETPARM);

   7176   0 0001D0  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 0001D2  CBF0 0100                            LAB,B4   256,IMO
          0 0001D4  E380 0000 0000  xent                 LNJ,B6   KNT$TR_NDISCONNECT
          0 0001D7       0001                            DC       s:7176+8,PREL
          0 0001D8  0F81 0009                            B        s:7179,PREL

     2903     7177    2                ELSE CALL KNT$TR_TERM(KN$NETPARM);

   7177   0 0001DA  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:397  
          0 0001DC  CBF0 0100                            LAB,B4   256,IMO
          0 0001DE  E380 0000 0000  xent                 LNJ,B6   KNT$TR_TERM
          0 0001E1       0001                            DC       s:7179,PREL

     2904     7178
     2905     7179    2           IF (KN$TCTX.STATE>%K_TSTATE_CLOSED)

   7179   0 0001E2  ECC7 0006                            LDB,B6   CTX$,AUTO
          0 0001E4  E286                                 LLH,R6   ,B6
          0 0001E5  6D02                                 CMV,R6   2
          0 0001E6  0381 0022                            BLE      s:7192,PREL
          0 0001E8  6D08                                 CMV,R6   8
          0 0001E9  0901 001F                            BE       s:7192,PREL

     2906     7180    2             AND (KN$TCTX.STATE ~= %K_TSTATE_CLOSING)
     2907     7181    3           THEN DO;

     2908     7182    3                KN$TCTX.REASON = %K_REASON_NOTATTACHED;

   7182   0 0001EB  5C02                                 LDV,R5   2
          0 0001EC  D7C6 000E                            STH,R5   14,B6

     2909     7183    3                KN$TCTX.ERR = %K_ERROR_NRESET;

   7183   0 0001EE  C870 00FA                            LDR,R4   250,IMO
          0 0001F0  CAC6 000E                            SRM,R4,'00FF'X    14,B6
          0 0001F2       00FF

     2910     7184
     2911     7185    3                IF (KN$TCTX.STATE ~= %K_TSTATE_WFCR_TPDU)

   7185   0 0001F3  6D0B                                 CMV,R6   11
          0 0001F4  0901 000C                            BE       s:7189,PREL
          0 0001F6  6D04                                 CMV,R6   4
          0 0001F7  0901 0009                            BE       s:7189,PREL

     2912     7186    3                  AND (KN$TCTX.STATE ~= %K_TSTATE_WBCL)
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:398  
     2913     7187    3                THEN CALL KNT$SEND_DR_HOST(KN$NETPARM);

   7187   0 0001F9  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 0001FB  CBF0 0100                            LAB,B4   256,IMO
          0 0001FD  E380 0000 0000  xent                 LNJ,B6   KNT$SEND_DR_HOST
          0 000200       0001                            DC       s:7189,PREL

     2914     7188
     2915     7189    3                CALL KNT$SET_REFWAIT (KN$TCTX);

   7189   0 000201  BBC7 0006                            LAB,B3   CTX$,AUTO
          0 000203  CBF0 0100                            LAB,B4   256,IMO
          0 000205  E380 0000 0000  xent                 LNJ,B6   KNT$SET_REFWAIT
          0 000208       0001                            DC       s:7192,PREL

     2916     7190    3                END;

     2917     7191
     2918     7192    2           RETURN;

   7192   0 000209  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     2919     7193
     2920     7194
     2921     7195        /*     KNT$RECV_4HOST   - TERM_ACK
     2922     7196
     2923     7197        */
     2924     7198
     2925     7199    2           SELECT(%KN_FCN_TERM_ACK);

     2926     7200                                           /* term-ack set only by hdlc for CONS VC*/
     2927     7201
     2928     7202    2           RETURN;

   7202   0 00020C  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     2929     7203
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:399  
     2930     7204
     2931     7205        %EJECT;
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:400  
     2932     7206    2           SELECT(ELSE);

     2933     7207    2      CALL TRANSPORT_SCREECH;

   7207   0 00020F  E3C0 0004                            LNJ,B6   s:0,PREL
          0 000211       0001                            DC       s:7209,PREL

     2934     7208
     2935     7209    2           END/*do case*/;

   7209   0 000212  0F81 0010                            B        s:7218,PREL

     2936     7210
     2937     7211
     2938     7212
     2939     7213
     2940     7214    1   TRANSPORT_SCREECH: PROC;

   7214   0 000214  EFC7 000A            TRANSPORT_SCREE*STB,B6   LDCT_CIRCUIT+1,AUTO

     2941     7215    2      CALL SCREECH(KNT_SCODE);

   7215   0 000216  BB80 0000 0000  01                   LAB,B3   0
          0 000219  CBF0 0100                            LAB,B4   256,IMO
          0 00021B  E380 0000 0000  xent                 LNJ,B6   SCREECH
          0 00021E       0001                            DC       s:7216,PREL

     2942     7216    2   END TRANSPORT_SCREECH;

   7216   0 00021F  ECC7 000A                            LDB,B6   LDCT_CIRCUIT+1,AUTO
          0 000221  C3C6 0001                            LNJ,B4   1,B6

     2943     7217
     2944     7218    1   END KNT$RECV_4HOST;

   7218   0 000223  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:401  
--  Include file information  --

   GH_SCHD_M.:E05TOU  is referenced.
   KNH_MACRO_C.:E05TOU  is referenced.
   KN_DATA_M.:E05TOU  is referenced.
   K_TRANSPORT_M.:E05TOU  is referenced.
   K_TRANSPORT_E.:E05TOU  is referenced.
   K_INTERFACE_M.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KNT$RECV_4HOST.
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:402  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @KN$NETPARM                6-0-0/w PTR         r     1 CTX$
    *0-0-0/w STRC(528)   r     1 KN$NETPARM                 9-0-0/b BIT         r     1 LDCT_CIRCUIT
     8-0-0/w UBIN(16)    r     1 TCTX#

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(32)    r     1 KNT_SCODE                  0-0-0/w PTR         r     1 KN_TCTX$$
     0-0-0/w UBIN(16)    r     1 KN_TCTX_MAX#

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(40)    r     1 B$TPDU_DT                  0-0-0/w STRC(720)   r     1 FPT_CONNECT
     0-0-0/w STRC(128)   r     1 FRAG_HDR                   0-0-0/w STRC(256)   r     1 KN$LDCT
     0-0-0/w STRC(2816)  r     1 KN$TCTX
     0-0-0/w PTR         r     1 KN$TCTX$(0:0)


   Procedure KNT$RECV_4HOST requires 550 words for executable code.
   Procedure KNT$RECV_4HOST requires 18 words of local(AUTO) storage.

    No errors detected in file KNT$RECV.:E05TSI    .
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:403  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:404  
          MINI XREF LISTING

B$TPDU_DT.DST_REF
      6363**DCL      6985>>ASSIGN
B$TPDU_DT.TYPE
      6356**DCL      7027>>IF
CIRCUIT_CHECK
      6999**LABEL    6991--GOTO
CTX$
      5402**DCL      5428--IMP-PTR  6976<<ASSIGN   6993<<ASSIGN   6994>>ASSIGN   6996>>IF       7071>>ASSIGN
      7093<>CALL     7099>>ASSIGN   7100>>ASSIGN   7101>>ASSIGN   7102>>ASSIGN   7103>>ASSIGN   7104>>ASSIGN
      7124>>IF       7124>>IF       7127>>ASSIGN   7128>>ASSIGN   7129>>ASSIGN   7134>>IF       7150>>IF
      7152>>CALL     7156>>IF       7158>>CALL     7159>>ASSIGN   7179>>IF       7179>>IF       7182>>ASSIGN
      7183>>ASSIGN   7185>>IF       7185>>IF       7189>>CALL
FPT_CONNECT.DEST
      6794**DCL      7102>>ASSIGN
FPT_CONNECT.DEST.ADDRESS
      6803**DCL      6804--REDEF
FPT_CONNECT.DSTSNPA.ADR_STRING
      6880**DCL      6880--REDEF
FPT_CONNECT.LADR
      6846**DCL      7103>>ASSIGN
FPT_CONNECT.LADR.ADDRESS
      6855**DCL      6856--REDEF
FPT_CONNECT.RLCID.GENERATION
      6763**DCL      6764--REDEF
FPT_CONNECT.RLCID.LDCTX
      6764**DCL      6764--REDEF
FPT_CONNECT.TERMINAL_ID.TERM
      6752**DCL      6761--REDEF
FRAG_HDR
      6646**DCL      7127--ASSIGN
FRAG_HDR.DATA_BSIZE
      6655**DCL      7128>>ASSIGN
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:405  
FRAG_HDR.SEQ
      6659**DCL      6660--REDEF
KN$LDCT.CONN_TYPE
      6399**DCL      6978>>IF       7002>>IF
KN$LDCT.LDCTX
      6540**DCL      7100>>ASSIGN
KN$LDCT.RLCID.LDCTX
      6459**DCL      6466--REDEF    6474--REDEF
KN$LDCT.RLCID.TCTX#
      6466**DCL      6981>>ASSIGN   7104<<ASSIGN
KN$LDCT.TRANSPORT_ID
      6493**DCL      6501--REDEF
KN$LDCT.UID
      6523**DCL      6524--REDEF    6533--REDEF
KN$NETPARM
      5261**DCL         9--PROC     7030<>CALL     7073<>CALL     7086<>CALL     7115<>CALL     7130<>CALL
      7145<>CALL     7174<>CALL     7176<>CALL     7177<>CALL     7187<>CALL
KN$NETPARM.ERRCODE
      5368**DCL      7036>>IF       7036>>IF       7045<<ASSIGN   7095<<ASSIGN
KN$NETPARM.FLAGS.CONS
      5338**DCL      7118<<ASSIGN
KN$NETPARM.FPT$
      5380**DCL      6727--IMP-PTR  7102>>ASSIGN   7103>>ASSIGN   7117<<ASSIGN
KN$NETPARM.FUNCTION
      5356**DCL      6999>>IF       7010>>DOSELCT  7126<<ASSIGN   7136<<ASSIGN   7173>>IF       7175>>IF
KN$NETPARM.LDCT$
      5262**DCL      6398--IMP-PTR  6978>>IF       6981>>ASSIGN   7002>>IF       7100>>ASSIGN   7104>>ASSIGN
KN$NETPARM.MSG$
      5268**DCL      5273--REDEF
KN$NETPARM.MSGSZ
      5279**DCL      7122<<ASSIGN
KN$NETPARM.NHDR$
      5320**DCL      5321--REDEF
KN$NETPARM.NHDRSZ
      5326**DCL      7119<<ASSIGN
KN$NETPARM.NODE
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:406  
      5363**DCL      7071<<ASSIGN   7101>>ASSIGN
KN$NETPARM.SHDR$
      5298**DCL      5299--REDEF
KN$NETPARM.SHDRSZ
      5304**DCL      7120<<ASSIGN
KN$NETPARM.TCTX$
      5385**DCL      6994<<ASSIGN
KN$NETPARM.TCTX_ID
      5331**DCL      6988<<ASSIGN
KN$NETPARM.THDR$
      5309**DCL      5310--REDEF    7127<<ASSIGN
KN$NETPARM.THDRSZ
      5315**DCL      7128<<ASSIGN   7137<<ASSIGN
KN$NETPARM.THDR_C$
      5310**DCL      6348--IMP-PTR  6985>>ASSIGN   7027>>IF
KN$NETPARM.UHDR$
      5284**DCL      5285--REDEF
KN$NETPARM.UHDRSZ
      5293**DCL      7121<<ASSIGN
KN$TCTX
      5428**DCL      7152<>CALL     7158<>CALL     7189<>CALL
KN$TCTX.CLASS
      5494**DCL      7156>>IF
KN$TCTX.DST_NSAP
      6283**DCL      7102<<ASSIGN
KN$TCTX.DST_NSAP.ADDRESS_N
      6313**DCL      6314--REDEF
KN$TCTX.ERR
      5685**DCL      7183<<ASSIGN
KN$TCTX.HOST_NODE
      5477**DCL      7071>>ASSIGN   7101<<ASSIGN
KN$TCTX.LDCTX#
      5448**DCL      7100<<ASSIGN
KN$TCTX.NODE
      5435**DCL      5448--REDEF
KN$TCTX.REASON
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:407  
      5679**DCL      7182<<ASSIGN
KN$TCTX.SEND_HEAD$
      5889**DCL      7127>>ASSIGN   7128>>ASSIGN   7159<<ASSIGN
KN$TCTX.SRC_NSAP
      6219**DCL      7103<<ASSIGN
KN$TCTX.SRC_NSAP.ADDRESS_N
      6249**DCL      6250--REDEF
KN$TCTX.SRC_REF
      5462**DCL      7104>>ASSIGN
KN$TCTX.STATE
      5429**DCL      7099<<ASSIGN   7124>>IF       7124>>IF       7129<<ASSIGN   7134>>IF       7150>>IF
      7179>>IF       7179>>IF       7185>>IF       7185>>IF
KN$TCTX.TMR_INACTIVITY.ARG
      6069**DCL      6070--REDEF
KN$TCTX.TMR_REFERENCE.ARG
      6099**DCL      6100--REDEF
KN$TCTX.TMR_RETRAN.ARG
      6010**DCL      6011--REDEF
KN$TCTX.TMR_WINDOW.ARG
      6039**DCL      6040--REDEF
KN$TCTX$
      6330**DCL      6993>>ASSIGN
KNA$GETTCTX
      5417**DCL-ENT  7093--CALL
KNH$SEND
      5418**DCL-ENT  7145--CALL
KNT$RECV_HOST_DATA
      5408**DCL-ENT  7030--CALL     7073--CALL
KNT$RLS_CHAIN
      5407**DCL-ENT  7158--CALL
KNT$SEND_DR_HOST
      5409**DCL-ENT  7187--CALL
KNT$SET_REFWAIT
      5410**DCL-ENT  7152--CALL     7189--CALL
KNT$TR_NCC
      5412**DCL-ENT  7115--CALL
PL6.E3A0      #002=KNT$RECV_4HOST File=KNT$RECV.:E05TSI                          WED 07/30/97 01:12 Page:408  
KNT$TR_NCI
      5411**DCL-ENT  7086--CALL
KNT$TR_NDISCONNECT
      5415**DCL-ENT  7176--CALL
KNT$TR_NRESET
      5413**DCL-ENT  7174--CALL
KNT$TR_SEND
      5416**DCL-ENT  7130--CALL
KNT$TR_TERM
      5414**DCL-ENT  7177--CALL
KNT_SCODE
      6887**DCL      7215<>CALL
KN_TCTX$$
      6886**DCL      6330--IMP-PTR  6993>>ASSIGN
KN_TCTX_MAX#
      6888**DCL      6990>>IF
LDCT_CIRCUIT
      5404**DCL      6980<<ASSIGN   6984<<ASSIGN   7047>>IF       7075>>IF
RECV_CR_4HOST
      7004**LABEL    7006--GOTO
SCREECH
      5420**DCL-ENT  7215--CALL
TCTX#
      5403**DCL      6981<<ASSIGN   6985<<ASSIGN   6988>>ASSIGN   6990>>IF       6990>>IF       6993>>ASSIGN
      6999>>IF       7088>>IF
TRANSPORT_SCREECH
      7214**PROC     7004--CALL     7090--CALL     7140--CALL     7147--CALL     7207--CALL
