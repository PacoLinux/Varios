VERSION A06

PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:1    
        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        Z8E2$PARSE_DD : PROC;
        7        7
        8        8        %EQU PHASE = 1;
        9        9        %INCLUDE Z8A_DEFC;
       10       77        %INCLUDE Z8A_SUPP_MAC;
       11     2477        %INCLUDE Z8A_SYS_FILE;
       12     8752        %INCLUDE Z8A_ERR_NUMS;
       13     9516        %INCLUDE Z8A_COMCOM;
       14    10166        %INCLUDE Z8A_DNT;
       15    10387
       16    10388        %INCLUDE Z8E_DD_SUBS;
       17    10417        %INCLUDE Z8E_DDPDA_S;
       18    11032        %INCLUDE Z8E_P_OLAY;
       19    11045        %INCLUDE Z8E_HEAP;
       20    11101        %INCLUDE Z8E_STACKS;
       21    13367        %INCLUDE Z8E_O1COM; /* Has to be after Z8E_STACKS */
       22    14128        %INCLUDE Z8A_TYPES;
       23    14302        %INCLUDE Z8E_WINDOW;
       24    16372        %INCLUDE Z8A_P_STATE;
       25    16382
       26    16383        /* If parse transitions are to be monitored, set PARSING_STATS
       27    16384           to true in the file Z8E_P_STATS,
       28    16385           and set PARSING_STATS_FILENAME = file name for data retention
       29    16386        */
       30    16387        %EQU PARSING_STATS_FILENAME = 'DD_STATS';
       31    16388
       32    16389        %INCLUDE Z8A_P_MACROS;
       33    17199
       34    17200
       35    17201    1   DCL Z8EM$SEMANTICS_DATA_DIV ENTRY;
       36    17202    1   DCL Z8EL$LEX ENTRY;
       37    17203    1   DCL Z9AT$TERMINATOR ENTRY;
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:2    
       38    17204    1   DCL Z8EE$CREATE_DUMMY_TOKEN ENTRY(4);
       39    17205
       40    17206
       41    17207
       42    17208    1   DCL SEMANTIC_ACTION SBIN WORD EXT; /* Set to semantic action to be executed */
       43    17209
       44    17210
       45    17211        %EJECT;
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:3    
       46    17212        /* The following macros and code may need to be customized
       47    17213           for a specific application.
       48    17214        */
       49    17215
       50    17216
       51    17217
       52    17218        %MACRO CREATE_DUMMY_TOKEN;
       53    17219            CALL Z8EE$CREATE_DUMMY_TOKEN( O1COM.LA_PUT,
       54    17220                                    BINBIT(O1COM.CORRECTION.SYM(O1COM.CORRECTION.INDX), 36),
       55    17221                                          O1COM.ERRLINE,
       56    17222                                          O1COM.ERRCOL);
       57    17223        %MEND;
       58    17224
       59    17225
       60    17226        %EQU DI_CHAR_LEN_MAX = 100;  /* Maximum length of an error plug-in */
       61    17227
       62    17228
       63    17229
       64    17230        %MACRO TERMINATE;
       65    17231          /* Insert code for abnormal termination of parser */
       66    17232          CALL Z9AT$TERMINATOR;
       67    17233        %MEND;
       68    17234
       69    17235
       70    17236        %MACRO ERRORPROC;
       71    17237        ERROR : PROC(ERROR_TYPE, PLUG1$, PLUG2$);
       72    17238
       73    17239        DCL ERROR_TYPE SBIN WORD;
       74    17240        DCL PLUG1$ PTR;  /* TO DNT */
       75    17241        DCL PLUG2$ PTR;  /* TO DNT */
       76    17242
       77    17243        DCL NEWPLUG1$ PTR;
       78    17244        DCL NEWPLUG2$ PTR;
       79    17245        DCL Z8AE$ERROR ENTRY(12);
       80    17246
       81    17247        DCL 1 PARSEDNT BASED ALIGNED,
       82    17248              2 TEXT,
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:4    
       83    17249                3 LENGTH SBIN WORD,
       84    17250                3 NAME CHAR(PARSEDNT.TEXT.LENGTH);
       85    17251
       86    17252        /* ERROR LOCATION IS SET WITH THE RESET_ERROR_LOC MACRO BEFORE
       87    17253           THE ERROR PROCEDURE IS CALLED */
       88    17254
       89    17255        IF ADDR(PLUG1$) = ADDR(NIL) THEN
       90    17256          /* Only error type is specified */
       91    17257          CALL Z8AE$ERROR(ERROR_TYPE, O1COM.ERRLINE, O1COM.ERRCOL);
       92    17258        ELSE
       93    17259          IF ADDR(PLUG2$) = ADDR(NIL) THEN
       94    17260            /* Only 1 plug is specified */
       95    17261            DO;
       96    17262              %NEW_DNT(@POINTER = NEWPLUG1$,
       97    17263                          @SIZE = "PLUG1$ -> PARSEDNT.TEXT.LENGTH",
       98    17264                          @NAME = "PLUG1$ -> PARSEDNT.TEXT.NAME");
       99    17265              CALL Z8AE$ERROR(ERROR_TYPE, O1COM.ERRLINE, O1COM.ERRCOL, NEWPLUG1$);
      100    17266            END;
      101    17267          ELSE
      102    17268            /* 2 PLUGS WERE SPECIFIED */
      103    17269            DO;
      104    17270              %NEW_DNT(@POINTER = NEWPLUG1$,
      105    17271                            @SIZE = "PLUG1$ -> PARSEDNT.TEXT.LENGTH",
      106    17272                            @NAME = "PLUG1$ -> PARSEDNT.TEXT.NAME");
      107    17273              %NEW_DNT(@POINTER = NEWPLUG2$,
      108    17274                          @SIZE = "PLUG2$ -> PARSEDNT.TEXT.LENGTH",
      109    17275                          @NAME = "PLUG2$ -> PARSEDNT.TEXT.NAME");
      110    17276            CALL Z8AE$ERROR (ERROR_TYPE, O1COM.ERRLINE, O1COM.ERRCOL, NEWPLUG1$, NEWPLUG2$);
      111    17277            END;
      112    17278
      113    17279        END ERROR;
      114    17280        %MEND;
      115    17281
      116    17282
      117    17283
      118    17284        %MACRO RESET_ERROR_LOC;
      119    17285
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:5    
      120    17286          /* RESET THE LINE & COLUMN TO THE POINT OF ERROR */
      121    17287          DO;
      122    17288             O1COM.ERRLINE = O1COM.LA_STK.LINE(O1COM.LA_GET);
      123    17289             O1COM.ERRCOL  = O1COM.LA_STK.COLUMN(O1COM.LA_GET);
      124    17290          END;
      125    17291        %MEND;
      126    17292
      127    17293
      128    17294        %MACRO CREATE_EMPTY_TERMINAL_ON_LX_STK;
      129    17295          DO;
      130    17296            /* Fill in LX_STK(LX_TOP) with an empty terminal value */
      131    17297            %INIT_LX_TERMINAL ( @POINTER = "ADDR(O1COM.LX_STK(O1COM.LX_TOP))",
      132    17298                                @SYMBOL = %EMPTY);
      133    17299          END;
      134    17300        %MEND;
      135    17301
      136    17302
      137    17303        %MACRO LAST_SHIFTED_LOC;
      138    17304
      139    17305          /* Set the location of the last shifted token which differs
      140    17306             from the location of the last token scanned when error
      141    17307             correction is done.
      142    17308          */
      143    17309          DO;
      144    17310            COMCOM.CURRENT.LINE = O1COM.LA_STK.LINE(O1COM.LA_GET);
      145    17311            COMCOM.CURRENT.COLUMN = O1COM.LA_STK.COLUMN(O1COM.LA_GET);
      146    17312          END;
      147    17313        %MEND;
      148    17314
      149    17315
      150    17316        %MACRO CALL_SEMANTICS(A=0);
      151    17317
      152    17318          /* Call the semantics routine with the designated action.
      153    17319          */
      154    17320          SEMANTIC_ACTION = BITBIN(A);
      155    17321          CALL Z8EM$SEMANTICS_DATA_DIV;
      156    17322
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:6    
      157    17323        %MEND;
      158    17324
      159    17325
      160    17326        %MACRO CALL_SCANNER;
      161    17327
      162    17328          /* Call the scanner to obtain the next token.  The token should be
      163    17329             placed in LA_STK(LA_PUT).
      164    17330          */
      165    17331          CALL Z8EL$LEX;
      166    17332
      167    17333        %MEND;
      168    17334
      169    17335        %ERRORPROC;
      170    17545
      171    17546        %IF PARSING_STATS;
      172    17547 C        %RESTORE_Z8E_P_STATS_PROC;
      173    17548 C        %DUMP_Z8E_P_STATS_PROC;
      174    17549        %ENDIF;
      175    17550
      176    17551        %RESTORE_PARSER_STATS;
      177    17556
      178    17557
      179    17558
      180    17559
      181    17560    2   DO WHILE '1'B;
      182    17561
      183    17562          %GET_ACTION_ITEM;
      184    17742
      185    17743        %LIST;
      186    17744    2     IF ACTION < 0 THEN
      187    17745            %REDUCE;
             17746               /* Reduce the symbols and states on the stack by the appropriate
             17747                  production, after calling any required semantic routine.
             17748                  The token stack (LX_STK) is left with one dummy token to
             17749                  represent the non_terminal that was just reduced.  This non_terminal
             17750                  and the state on the stack after the reduction are used to
             17751                  index into the GOTO table to obtain the next state.
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:7    
             17752               */
             17753    3         DO;
             17754    3           ACTION          = - ACTION;
             17755                %IF LOCALLY_LEAST_COST_RECOVERY;
             17756                  %SAVE_IED_STATE;
             17757               /* Our error correction scheme requires that we detect errors
             17758                  immediately;  that is, before we do any reductions.
             17759                  Unfortunately, it is a property of LALR parsers that
             17760                  some reductions may be performed upon  encountering an
             17761                  error symbol, before recognizing the error.  Therefore, we
             17762                  must save the state of the parser at any reduction and stack
             17763                  all semantic calls until the next shift has been performed,
             17764                  which means the next token has been accepted.
             17765               */
             17766    4     DO;
             17767    4       IF NOT O1COM.IED_FLAG THEN
             17768    5         DO;
             17769    5           O1COM.ALT_PARSE_STACK_IDX = O1COM.PARSE_STACK_IDX;
             17770    5           PARSE_STACK_IDX_IN_CHARS = O1COM.PARSE_STACK_IDX * 4 + 4;
             17771    5           ADDR(O1COM.ALT_PARSE_STACK) -> PARSE_STACK_USED
             17772    5               = ADDR(O1COM.PARSE_STACK) -> PARSE_STACK_USED;
             17773    5           O1COM.ALT_LX_TOP          = O1COM.LX_TOP;
             17774    5           O1COM.IED_FLAG            = '1'B;
             17775    5         END;
             17776    4     END;
             17778                %ENDIF;
             17779                %IF LOCALLY_LEAST_COST_RECOVERY;
             17780                  %PUSH_SEMANTIC_ACTION;
             17781               /* Do to the immediate error detection problem, we need to
             17782                  save all semantic actions until a shift is about to be done,
             17783                  signaling that no error has been encountered.
             17784               */
             17785    4   DO;
             17786    4     IF O1COM.RED_STACK_TOP < %RED_STACK_MAX - 2 THEN
             17787    5       DO;
             17788    5         O1COM.RED_STACK(O1COM.RED_STACK_TOP)     = ACTION;
             17789    5         O1COM.RED_STACK(O1COM.RED_STACK_TOP + 1) = O1COM.LX_TOP;
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:8    
             17790    5         O1COM.RED_STACK_TOP                = O1COM.RED_STACK_TOP + 2;
             17791    5       END;
             17792    4     ELSE
             17793    5       DO;
             17794              %AT_LEAST_ONE_TOKEN;
             17795               /* Make sure at least one token is available to
             17796                   a shift operation.
             17797               */
             17798    6     DO;
             17799            %IF LOCALLY_LEAST_COST_RECOVERY;
             17800    6         IF O1COM.LA_CNT < 1 THEN  /* NEED TOKENS */
             17801    6           IF O1COM.CORRECTION.LEN = 0 AND O1COM.CORRECTION.INDX = 0 THEN
             17802    7             DO;
             17803                    %CALL_SCANNER;
             17804          /* Call the scanner to obtain the next token.  The token should be
             17805             placed in LA_STK(LA_PUT).
             17806          */
             17807    7     CALL Z8EL$LEX;
             17809    7               O1COM.LA_PUT = O1COM.LA_STK.LINK(O1COM.LA_PUT);
             17810    7               O1COM.LA_CNT = 1;
             17811    7             END;
             17812    6           ELSE
             17813    6             IF O1COM.CORRECTION.LEN > 0 THEN  /* NEED TO INSERT AN ERROR TOKEN */
             17814    7               DO;
             17815                      %CREATE_DUMMY_TOKEN;
             17816    7       CALL Z8EE$CREATE_DUMMY_TOKEN( O1COM.LA_PUT,
             17817    7                                     BINBIT(O1COM.CORRECTION.SYM(O1COM.CORRECTION.INDX)
             17817                                              , 36),
             17818    7                                     O1COM.ERRLINE,
             17819    7                                     O1COM.ERRCOL);
             17821    7                 O1COM.CORRECTION.LEN   = O1COM.CORRECTION.LEN - 1;
             17822    7                 O1COM.CORRECTION.INDX  = O1COM.CORRECTION.INDX + 1;
             17823    7                 O1COM.LA_GET           = O1COM.LA_PUT;
             17824    7                 O1COM.LA_CNT           = 1;
             17825    7               END;
             17826    6             ELSE
             17827    7               DO;  /* HAVE EXHAUSTED ALL ERROR CORRECTION */
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:9    
             17828    7                 O1COM.CORRECTION.INDX  = 0;
             17829    7                 O1COM.LA_CNT           = O1COM.ERR_LA_CNT;
             17830    7                 O1COM.LA_PUT           = O1COM.ERR_LA_PUT;
             17831    7                 O1COM.LA_GET           = O1COM.ERR_LA_GET;
             17832    7               END;
             17833            %ELSE;
             17834 C            IF O1COM.LA_CNT < 1 THEN  /* NEED TOKENS */
             17835 C              IF NOT PANIC_MODE_IN_PROGRESS THEN
             17836 C                DO;
             17837 C                  %CALL_SCANNER;
             17838 C                  O1COM.LA_PUT = O1COM.LA_STK.LINK(O1COM.LA_PUT);
             17839 C                  O1COM.LA_CNT = 1;
             17840 C                END;
             17841 C              ELSE
             17842 C                DO;  /* GET VALID SYMBOL FOR PANIC SHIFT */
             17843 C                  O1COM.LA_CNT = O1COM.ERR_LA_CNT;
             17844 C                  O1COM.LA_PUT = O1COM.ERR_LA_PUT;
             17845 C                  O1COM.LA_GET = O1COM.ERR_LA_GET;
             17846 C       DO WHILE ACTION_ROW.CHECK(ACTION_COL.BASE(O1COM.STATE) + O1COM.LA_STK.SYMBOL(O1COM.
             17846 C      LA_GET)) ~= O1COM.STATE;
             17847 C                    IF O1COM.LA_STK.SYMBOL(O1COM.LA_GET) = %TERM_EOF_SYM THEN
             17848 C                      DO;
             17849 C                        %RESET_ERROR_LOC;
             17850 C                        CALL ERROR(%E$UNEXP_EOF_DURING_RECOVERY);
             17851 C                        %TERMINATE;
             17852 C                      END;
             17853 C                    O1COM.LA_CNT = O1COM.LA_CNT - 1;
             17854 C                    O1COM.LA_GET = O1COM.LA_STK.LINK(O1COM.LA_GET);
             17855 C                    IF O1COM.LA_CNT < 1 THEN
             17856 C                      DO;
             17857 C                        %CALL_SCANNER;
             17858 C                        O1COM.LA_PUT = O1COM.LA_STK.LINK(O1COM.LA_PUT);
             17859 C                        O1COM.LA_CNT = 1;
             17860 C                      END;
             17861 C                  END;
             17862 C                  PANIC_MODE_IN_PROGRESS = '0'B;
             17863 C                  %RESET_ERROR_LOC;
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:10   
             17864 C                  CALL ERROR (%E$PARSING_RESUMED);
             17865 C                END;
             17866              %ENDIF;
             17867    6     END;
             17869              %RED_STACK_OVERFLOW;
             17870               /* The reduction stack for semantic calls has overflowed,
             17871                  so abort the compilation.
             17872               */
             17873    6   DO;
             17874        %RESET_ERROR_LOC;
             17875          /* RESET THE LINE & COLUMN TO THE POINT OF ERROR */
             17876    7     DO;
             17877    7        O1COM.ERRLINE = O1COM.LA_STK.LINE(O1COM.LA_GET);
             17878    7        O1COM.ERRCOL  = O1COM.LA_STK.COLUMN(O1COM.LA_GET);
             17879    7     END;
             17881    6     CALL ERROR(%E$RED_STACK_OVERFLOW_ERROR);
             17882          %TERMINATE;
             17883          /* Insert code for abnormal termination of parser */
             17884    6     CALL Z9AT$TERMINATOR;
             17886    6   END;
             17888    5       END;
             17889    4   END;
             17891                %ELSE;
             17892 C                IF PRODR.SEMANTIC(ACTION) > 0 THEN
             17893 C                  DO;
             17894 C                    O1COM.REDUCTION = ACTION;
             17895 C                    %CALL_SEMANTICS(A="BINBIT(PRODR.SEMANTIC(O1COM.REDUCTION),36)");
             17896 C                  END;
             17897                %ENDIF;
             17898                %IF PARSING_STATS;
             17899 C                %INC_PRODR_STATS(I=ACTION);
             17900                %ENDIF;
             17901    3           O1COM.PARSE_STACK_IDX = O1COM.PARSE_STACK_IDX - PRODR.POPSTACK(ACTION);
             17902    3        O1COM.LX_TOP       = O1COM.PARSE_STACK_IDX + 1;
             17903                %IF ~ LOCALLY_LEAST_COST_RECOVERY;
             17904 C                IF PRODR.POPSTACK(ACTION) = 0 THEN
             17905 C                  DO;
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:11   
             17906 C                    %CREATE_EMPTY_TERMINAL_ON_LX_STK;
             17907 C                  END;
             17908                %ENDIF;
             17909                /* Get new state */
             17910    3           NT = PRODR.GOAL(ACTION);
             17911    3           IF GOTO_COL.BASE(NT) = 0 THEN
             17912    4             DO;
             17913                    %IF PARSING_STATS;
             17914 C                  %INC_GOTO_COL_STATS(I=NT);
             17915                    %ENDIF;
             17916    4               O1COM.STATE = GOTO_COL.DEFAULT(NT);
             17917    4             END;
             17918    3           ELSE
             17919    4             DO;
             17920    4               INDX = GOTO_COL.BASE(NT) + O1COM.PARSE_STACK(O1COM.PARSE_STACK_IDX);
             17921    4               IF GOTO_ROW.CHECK(INDX) = NT THEN
             17922    5                 DO;
             17923                        %IF PARSING_STATS;
             17924 C                      %INC_GOTO_ROW_STATS(I=INDX);
             17925                        %ENDIF;
             17926    5                   O1COM.STATE = GOTO_ROW.NEXT (INDX);
             17927    5                 END;
             17928    4               ELSE
             17929    5                 DO;
             17930                        %IF PARSING_STATS;
             17931 C                      %INC_GOTO_COL_STATS(I=NT);
             17932                        %ENDIF;
             17933    5                   O1COM.STATE = GOTO_COL.DEFAULT(NT);
             17934    5                 END;
             17935    4             END;
             17936                /* Push state on stack */
             17937    3           IF O1COM.PARSE_STACK_IDX = %PARSE_STACK_MAX THEN
             17938    4             DO;
             17939                    %AT_LEAST_ONE_TOKEN;
             17940               /* Make sure at least one token is available to
             17941                   a shift operation.
             17942               */
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:12   
             17943    5     DO;
             17944            %IF LOCALLY_LEAST_COST_RECOVERY;
             17945    5         IF O1COM.LA_CNT < 1 THEN  /* NEED TOKENS */
             17946    5           IF O1COM.CORRECTION.LEN = 0 AND O1COM.CORRECTION.INDX = 0 THEN
             17947    6             DO;
             17948                    %CALL_SCANNER;
             17949          /* Call the scanner to obtain the next token.  The token should be
             17950             placed in LA_STK(LA_PUT).
             17951          */
             17952    6     CALL Z8EL$LEX;
             17954    6               O1COM.LA_PUT = O1COM.LA_STK.LINK(O1COM.LA_PUT);
             17955    6               O1COM.LA_CNT = 1;
             17956    6             END;
             17957    5           ELSE
             17958    5             IF O1COM.CORRECTION.LEN > 0 THEN  /* NEED TO INSERT AN ERROR TOKEN */
             17959    6               DO;
             17960                      %CREATE_DUMMY_TOKEN;
             17961    6       CALL Z8EE$CREATE_DUMMY_TOKEN( O1COM.LA_PUT,
             17962    6                                     BINBIT(O1COM.CORRECTION.SYM(O1COM.CORRECTION.INDX)
             17962                                              , 36),
             17963    6                                     O1COM.ERRLINE,
             17964    6                                     O1COM.ERRCOL);
             17966    6                 O1COM.CORRECTION.LEN   = O1COM.CORRECTION.LEN - 1;
             17967    6                 O1COM.CORRECTION.INDX  = O1COM.CORRECTION.INDX + 1;
             17968    6                 O1COM.LA_GET           = O1COM.LA_PUT;
             17969    6                 O1COM.LA_CNT           = 1;
             17970    6               END;
             17971    5             ELSE
             17972    6               DO;  /* HAVE EXHAUSTED ALL ERROR CORRECTION */
             17973    6                 O1COM.CORRECTION.INDX  = 0;
             17974    6                 O1COM.LA_CNT           = O1COM.ERR_LA_CNT;
             17975    6                 O1COM.LA_PUT           = O1COM.ERR_LA_PUT;
             17976    6                 O1COM.LA_GET           = O1COM.ERR_LA_GET;
             17977    6               END;
             17978            %ELSE;
             17979 C            IF O1COM.LA_CNT < 1 THEN  /* NEED TOKENS */
             17980 C              IF NOT PANIC_MODE_IN_PROGRESS THEN
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:13   
             17981 C                DO;
             17982 C                  %CALL_SCANNER;
             17983 C                  O1COM.LA_PUT = O1COM.LA_STK.LINK(O1COM.LA_PUT);
             17984 C                  O1COM.LA_CNT = 1;
             17985 C                END;
             17986 C              ELSE
             17987 C                DO;  /* GET VALID SYMBOL FOR PANIC SHIFT */
             17988 C                  O1COM.LA_CNT = O1COM.ERR_LA_CNT;
             17989 C                  O1COM.LA_PUT = O1COM.ERR_LA_PUT;
             17990 C                  O1COM.LA_GET = O1COM.ERR_LA_GET;
             17991 C       DO WHILE ACTION_ROW.CHECK(ACTION_COL.BASE(O1COM.STATE) + O1COM.LA_STK.SYMBOL(O1COM.
             17991 C      LA_GET)) ~= O1COM.STATE;
             17992 C                    IF O1COM.LA_STK.SYMBOL(O1COM.LA_GET) = %TERM_EOF_SYM THEN
             17993 C                      DO;
             17994 C                        %RESET_ERROR_LOC;
             17995 C                        CALL ERROR(%E$UNEXP_EOF_DURING_RECOVERY);
             17996 C                        %TERMINATE;
             17997 C                      END;
             17998 C                    O1COM.LA_CNT = O1COM.LA_CNT - 1;
             17999 C                    O1COM.LA_GET = O1COM.LA_STK.LINK(O1COM.LA_GET);
             18000 C                    IF O1COM.LA_CNT < 1 THEN
             18001 C                      DO;
             18002 C                        %CALL_SCANNER;
             18003 C                        O1COM.LA_PUT = O1COM.LA_STK.LINK(O1COM.LA_PUT);
             18004 C                        O1COM.LA_CNT = 1;
             18005 C                      END;
             18006 C                  END;
             18007 C                  PANIC_MODE_IN_PROGRESS = '0'B;
             18008 C                  %RESET_ERROR_LOC;
             18009 C                  CALL ERROR (%E$PARSING_RESUMED);
             18010 C                END;
             18011              %ENDIF;
             18012    5     END;
             18014                    %PARSE_STACK_OVERFLOW;
             18015               /* The parse stack has overflowed, so abort the compilation.
             18016               */
             18017    5   DO;
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:14   
             18018        %RESET_ERROR_LOC;
             18019          /* RESET THE LINE & COLUMN TO THE POINT OF ERROR */
             18020    6     DO;
             18021    6        O1COM.ERRLINE = O1COM.LA_STK.LINE(O1COM.LA_GET);
             18022    6        O1COM.ERRCOL  = O1COM.LA_STK.COLUMN(O1COM.LA_GET);
             18023    6     END;
             18025    5     CALL ERROR (%E$PARSE_STACK_OVERFLOW_ERROR);
             18026          %TERMINATE;
             18027          /* Insert code for abnormal termination of parser */
             18028    5     CALL Z9AT$TERMINATOR;
             18030    5   END;
             18032    4             END;
             18033    3           ELSE
             18034    4             DO;
             18035    4               O1COM.PARSE_STACK_IDX               = O1COM.PARSE_STACK_IDX + 1;
             18036    4               O1COM.PARSE_STACK(O1COM.PARSE_STACK_IDX)  = O1COM.STATE;
             18037    4             END;
             18038    3         END;
      188    18040    2     ELSE
      189    18041    2       IF ACTION > 0 THEN
      190    18042              %SHIFT;
             18043               /* Shift the symbol and go to the next state.
             18044                  The symbol is always a terminal, and it is placed on the token
             18045                  stack (LX_STK) for reference by a semantics action ala Dave
             18046                  Ward's parser.
             18047               */
             18048    3       DO;
             18049              %IF LOCALLY_LEAST_COST_RECOVERY;
             18050                %CLEAR_SEMANTIC_ACTIONS;
             18051               /* We are about to do a shift and know that no error has
             18052                  occurred;  therefore, do all semantic actions which have
             18053                  been accumulated.
             18054               */
             18055    4   DO;
             18056    4     O1COM.ALT_LX_TOP    = O1COM.LX_TOP;
             18057    4     O1COM.RED_STACK_TOP = O1COM.RED_STACK_TOP - 2;
             18058    5     DO INDX = 0 TO O1COM.RED_STACK_TOP  BY 2;
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:15   
             18059    5    O1COM.LX_TOP = O1COM.RED_STACK(INDX + 1);
             18060    5       O1COM.REDUCTION = O1COM.RED_STACK(INDX);
             18061    5       IF PRODR.SEMANTIC(O1COM.REDUCTION) > 0 THEN
             18062    6         DO;
             18063                %CALL_SEMANTICS(A="BINBIT(PRODR.SEMANTIC(O1COM.REDUCTION),36)");
             18064          /* Call the semantics routine with the designated action.
             18065          */
             18066    6     SEMANTIC_ACTION = BITBIN(A);
             18067    6     CALL Z8EM$SEMANTICS_DATA_DIV;
             18069    6         END;
             18070    5       IF PRODR.POPSTACK(O1COM.REDUCTION) = 0 THEN
             18071    6         DO;
             18072    6           O1COM.LX_TOP = O1COM.LX_TOP + 1;
             18073                %CREATE_EMPTY_TERMINAL_ON_LX_STK;
             18074    7     DO;
             18075            /* Fill in LX_STK(LX_TOP) with an empty terminal value */
             18076            %INIT_LX_TERMINAL ( @POINTER = "ADDR(O1COM.LX_STK(O1COM.LX_TOP))",
             18077                                @SYMBOL = %EMPTY);
             18078    8     DO;
             18079    8       @POINTER -> LX_TERMINAL.ID     = %LX_TERMINAL;
             18080    8       @POINTER -> LX_TERMINAL.B      = '0'B;
             18081            %IF (TEXTCHAR(@BERROR) ~= '');
             18082 C             @POINTER -> LX_TERMINAL.B.ERROR = @BERROR;
             18083            %ENDIF;
             18084    8       @POINTER -> LX_TERMINAL.TYPE   = @TYPE %;
             18085            %IF (TEXTCHAR(@LA_ITEM) = '');
             18086    8         @POINTER -> LX_TERMINAL.LINK   = @LINK;
             18087            %ENDIF;
             18088    8       @POINTER -> LX_TERMINAL.ST$    = @ST$ ;
             18089    8       @POINTER -> LX_TERMINAL.SYMBOL = @SYMBOL %;
             18090    8       @POINTER -> LX_TERMINAL.DNT$   = @DNT$;
             18091    8       @POINTER -> LX_TERMINAL.LINE   = @LINE;
             18092    8       @POINTER -> LX_TERMINAL.COLUMN = @COLUMN;
             18093    8     END;
             18095    7     END;
             18097    6         END;
             18098    5     END;
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:16   
             18099    4     O1COM.RED_STACK_TOP  = 0;
             18100    4     O1COM.LX_TOP         = O1COM.ALT_LX_TOP;
             18101    4     O1COM.IED_FLAG       = '0'B;
             18102    4   END;
             18104              %ENDIF;
             18105              %AT_LEAST_ONE_TOKEN;
             18106               /* Make sure at least one token is available to
             18107                   a shift operation.
             18108               */
             18109    4     DO;
             18110            %IF LOCALLY_LEAST_COST_RECOVERY;
             18111    4         IF O1COM.LA_CNT < 1 THEN  /* NEED TOKENS */
             18112    4           IF O1COM.CORRECTION.LEN = 0 AND O1COM.CORRECTION.INDX = 0 THEN
             18113    5             DO;
             18114                    %CALL_SCANNER;
             18115          /* Call the scanner to obtain the next token.  The token should be
             18116             placed in LA_STK(LA_PUT).
             18117          */
             18118    5     CALL Z8EL$LEX;
             18120    5               O1COM.LA_PUT = O1COM.LA_STK.LINK(O1COM.LA_PUT);
             18121    5               O1COM.LA_CNT = 1;
             18122    5             END;
             18123    4           ELSE
             18124    4             IF O1COM.CORRECTION.LEN > 0 THEN  /* NEED TO INSERT AN ERROR TOKEN */
             18125    5               DO;
             18126                      %CREATE_DUMMY_TOKEN;
             18127    5       CALL Z8EE$CREATE_DUMMY_TOKEN( O1COM.LA_PUT,
             18128    5                                     BINBIT(O1COM.CORRECTION.SYM(O1COM.CORRECTION.INDX)
             18128                                              , 36),
             18129    5                                     O1COM.ERRLINE,
             18130    5                                     O1COM.ERRCOL);
             18132    5                 O1COM.CORRECTION.LEN   = O1COM.CORRECTION.LEN - 1;
             18133    5                 O1COM.CORRECTION.INDX  = O1COM.CORRECTION.INDX + 1;
             18134    5                 O1COM.LA_GET           = O1COM.LA_PUT;
             18135    5                 O1COM.LA_CNT           = 1;
             18136    5               END;
             18137    4             ELSE
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:17   
             18138    5               DO;  /* HAVE EXHAUSTED ALL ERROR CORRECTION */
             18139    5                 O1COM.CORRECTION.INDX  = 0;
             18140    5                 O1COM.LA_CNT           = O1COM.ERR_LA_CNT;
             18141    5                 O1COM.LA_PUT           = O1COM.ERR_LA_PUT;
             18142    5                 O1COM.LA_GET           = O1COM.ERR_LA_GET;
             18143    5               END;
             18144            %ELSE;
             18145 C            IF O1COM.LA_CNT < 1 THEN  /* NEED TOKENS */
             18146 C              IF NOT PANIC_MODE_IN_PROGRESS THEN
             18147 C                DO;
             18148 C                  %CALL_SCANNER;
             18149 C                  O1COM.LA_PUT = O1COM.LA_STK.LINK(O1COM.LA_PUT);
             18150 C                  O1COM.LA_CNT = 1;
             18151 C                END;
             18152 C              ELSE
             18153 C                DO;  /* GET VALID SYMBOL FOR PANIC SHIFT */
             18154 C                  O1COM.LA_CNT = O1COM.ERR_LA_CNT;
             18155 C                  O1COM.LA_PUT = O1COM.ERR_LA_PUT;
             18156 C                  O1COM.LA_GET = O1COM.ERR_LA_GET;
             18157 C       DO WHILE ACTION_ROW.CHECK(ACTION_COL.BASE(O1COM.STATE) + O1COM.LA_STK.SYMBOL(O1COM.
             18157 C      LA_GET)) ~= O1COM.STATE;
             18158 C                    IF O1COM.LA_STK.SYMBOL(O1COM.LA_GET) = %TERM_EOF_SYM THEN
             18159 C                      DO;
             18160 C                        %RESET_ERROR_LOC;
             18161 C                        CALL ERROR(%E$UNEXP_EOF_DURING_RECOVERY);
             18162 C                        %TERMINATE;
             18163 C                      END;
             18164 C                    O1COM.LA_CNT = O1COM.LA_CNT - 1;
             18165 C                    O1COM.LA_GET = O1COM.LA_STK.LINK(O1COM.LA_GET);
             18166 C                    IF O1COM.LA_CNT < 1 THEN
             18167 C                      DO;
             18168 C                        %CALL_SCANNER;
             18169 C                        O1COM.LA_PUT = O1COM.LA_STK.LINK(O1COM.LA_PUT);
             18170 C                        O1COM.LA_CNT = 1;
             18171 C                      END;
             18172 C                  END;
             18173 C                  PANIC_MODE_IN_PROGRESS = '0'B;
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:18   
             18174 C                  %RESET_ERROR_LOC;
             18175 C                  CALL ERROR (%E$PARSING_RESUMED);
             18176 C                END;
             18177              %ENDIF;
             18178    4     END;
             18180    3         IF O1COM.LX_TOP = %LX_MAX THEN
             18181                %SEMANTIC_TOKEN_STACK_OVERFLOW;
             18182               /* The semantic token stack has overflowed, so abort
             18183                  the compilation.
             18184               */
             18185    4   DO;
             18186        %RESET_ERROR_LOC;
             18187          /* RESET THE LINE & COLUMN TO THE POINT OF ERROR */
             18188    5     DO;
             18189    5        O1COM.ERRLINE = O1COM.LA_STK.LINE(O1COM.LA_GET);
             18190    5        O1COM.ERRCOL  = O1COM.LA_STK.COLUMN(O1COM.LA_GET);
             18191    5     END;
             18193    4     CALL ERROR (%E$SEMANTIC_TOKEN_STACK_OVERFLW);
             18194          %TERMINATE;
             18195          /* Insert code for abnormal termination of parser */
             18196    4     CALL Z9AT$TERMINATOR;
             18198    4     RETURN;
             18199    4   END;
             18201    3      O1COM.LX_TOP      = O1COM.LX_TOP + 1;
             18202    3         O1COM.LX_STK(O1COM.LX_TOP) = O1COM.LA_STK(O1COM.LA_GET);
             18203    3         O1COM.LX_STK.LINK(O1COM.LX_TOP) = ADDR(NIL);
             18204              %LAST_SHIFTED_LOC;
             18205          /* Set the location of the last shifted token which differs
             18206             from the location of the last token scanned when error
             18207             correction is done.
             18208          */
             18209    4     DO;
             18210    4       COMCOM.CURRENT.LINE = O1COM.LA_STK.LINE(O1COM.LA_GET);
             18211    4       COMCOM.CURRENT.COLUMN = O1COM.LA_STK.COLUMN(O1COM.LA_GET);
             18212    4     END;
             18214    3         IF O1COM.PARSE_STACK_IDX = %PARSE_STACK_MAX THEN
             18215                %PARSE_STACK_OVERFLOW;
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:19   
             18216               /* The parse stack has overflowed, so abort the compilation.
             18217               */
             18218    4   DO;
             18219        %RESET_ERROR_LOC;
             18220          /* RESET THE LINE & COLUMN TO THE POINT OF ERROR */
             18221    5     DO;
             18222    5        O1COM.ERRLINE = O1COM.LA_STK.LINE(O1COM.LA_GET);
             18223    5        O1COM.ERRCOL  = O1COM.LA_STK.COLUMN(O1COM.LA_GET);
             18224    5     END;
             18226    4     CALL ERROR (%E$PARSE_STACK_OVERFLOW_ERROR);
             18227          %TERMINATE;
             18228          /* Insert code for abnormal termination of parser */
             18229    4     CALL Z9AT$TERMINATOR;
             18231    4   END;
             18233    3         ELSE
             18234    4           DO;
             18235    4             O1COM.LA_CNT         = O1COM.LA_CNT -1 ;
             18236    4             O1COM.LA_GET         = O1COM.LA_STK.LINK(O1COM.LA_GET);
             18237    4             O1COM.STATE                         = ACTION;
             18238    4             O1COM.PARSE_STACK_IDX               = O1COM.PARSE_STACK_IDX + 1;
             18239    4             O1COM.PARSE_STACK(O1COM.PARSE_STACK_IDX)  = O1COM.STATE;
             18240    4           END;
             18241    3       END;
      191    18243    2       ELSE
      192    18244    3         DO;  /* RECOVERY */
      193    18245    3           O1COM.ERR_RECOVERY_IN_PROGRESS = '1'B;
      194    18246    3           O1COM.PARSE_ERROR_COUNT = O1COM.PARSE_ERROR_COUNT + 1;
      195    18247                %RESTORE_IED_STATE;
             18248        /* Restore the parse state to that before
             18249           the last lookahead was done;  This represents
             18250           the immediate error detection state.
             18251        */
             18252    4   DO;
             18253    4     IF O1COM.IED_FLAG THEN
             18254    5       DO;
             18255    5         O1COM.PARSE_STACK_IDX  = O1COM.ALT_PARSE_STACK_IDX;
             18256    5         PARSE_STACK_IDX_IN_CHARS = O1COM.ALT_PARSE_STACK_IDX * 4 + 4;
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:20   
             18257    5         ADDR(O1COM.PARSE_STACK) -> PARSE_STACK_USED
             18258    5               = ADDR(O1COM.ALT_PARSE_STACK) -> PARSE_STACK_USED;
             18259    5      O1COM.LX_TOP        = O1COM.ALT_LX_TOP;
             18260    5         O1COM.STATE            = O1COM.PARSE_STACK(O1COM.PARSE_STACK_IDX);
             18261    5         O1COM.IED_FLAG         = '0'B;
             18262    5         O1COM.RED_STACK_TOP    = 0;
             18263    5       END;
             18264    4   END;
      196    18266    3           PARSER_OVERLAY_RETURN_CODE = %PARSE_ERROR_RETURN;
      197    18267    3           UNWIND TO OVERLAY_COORDINATION_VECTOR;
      198    18268    3        END;
      199    18269
      200    18270    2   END; /* DO WHILE */
      201    18271
      202    18272    1   END Z8E2$PARSE_DD;

PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:21   
--  Include file information  --

   Z8E_P_STATS.:Z8A6TOU  is referenced.
   Z8A_P_MACROS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_P_STATE.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_WINDOW.:Z8A6TOU  is referenced.
   Z8A_TYPES.:Z8A6TOU  is referenced.
   Z8E_O1COM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_LEX_SYMB.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_STACKS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_HEAP.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_P_OLAY.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_DDPDA_S.:Z8A6TOU  is referenced.
   Z8E_DD_SUBS.:Z8A6TOU  is referenced.
   Z8A_DNT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ERR_NUMS.:Z8A6TOU  is referenced.
   CP_6_SUBS.:LIB_E04  is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
   Z8A_SYS_FILE.:Z8A6TOU  is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8E2$PARSE_DD.

   Procedure Z8E2$PARSE_DD requires 803 words for executable code.
   Procedure Z8E2$PARSE_DD requires 22 words of local(AUTO) storage.

    No errors detected in file Z8E2.:Z8A6TSI    .

PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:22   

 Object Unit name= Z8E2$PARSE_DD                              File name= Z8E2.:Z8A6TOU
 UTS= AUG 09 '97 11:28:02.64 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none     1      1  ITERATION
    1   DCB   even  none     0      0  M$UC
    2  LblCom even  none     1      1  DNT$
    3  LblCom even  none     5      5  DNT_
    4  LblCom even  none     1      1  DNT_BUCKET_NUMBER
    5  LblCom even  none     1      1  DNT_OF_1$
    6  LblCom even  none     2      2  OVERLAY_COORDINATION_VECTOR
    7  LblCom even  none     1      1  PARSER_OVERLAY_RETURN_CODE
    8  LblCom even  none     1      1  HEAP$
    9  LblCom even  none    90    132  LEX_SYMBOL
   10  LblCom even  none     1      1  CURRENT_LEX_SYMBOL$
   11  LblCom even  none    90    132  TEMP_LEX_SYMBOL
   12  LblCom even  none    90    132  TEMP_LEX_SYMBOL2
   13  LblCom even  none     1      1  SEMANTIC_ACTION
   14   Proc  even  none   803   1443  Z8E2$PARSE_DD
   15  RoData even  none    18     22  Z8E2$PARSE_DD

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    14      0   yes            yes      Std        0  Z8E2$PARSE_DD
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:23   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 Z8EL$LEX
         yes           Std       4 Z8EE$CREATE_DUMMY_TOKEN
         yes           Std       0 Z8EM$SEMANTICS_DATA_DIV
         yes           Std       0 Z9AT$TERMINATOR
         yes           Std      12 Z8AE$ERROR
         yes           Std       1 Z8AR$RESERVER
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET
                       nStd      0 X66_AUNWIND

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  COMCOM                                O1COM
     HIER_STK_PTR                          HIER_STK                              PAGE_FORMAT
     REP_STK_PTR                           REP_STK                          r    DD_PRODR
r    DD_ACTION_COL                    r    DD_ACTION_ROW                    r    DD_GOTO_COL
r    DD_GOTO_ROW

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:24   


        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        Z8E2$PARSE_DD : PROC;

      6 14 000000   000000 700200 xent  Z8E2$PARSE_* TSX0  ! X66_AUTO_0
        14 000001   000026 000000                    ZERO    22,0
        14 000002   000321 710000 14                 TRA     s:17566

        7        7
        8        8        %EQU PHASE = 1;
        9        9        %INCLUDE Z8A_DEFC;
       10       77        %INCLUDE Z8A_SUPP_MAC;
       11     2477        %INCLUDE Z8A_SYS_FILE;
       12     8752        %INCLUDE Z8A_ERR_NUMS;
       13     9516        %INCLUDE Z8A_COMCOM;
       14    10166        %INCLUDE Z8A_DNT;
       15    10387
       16    10388        %INCLUDE Z8E_DD_SUBS;
       17    10417        %INCLUDE Z8E_DDPDA_S;
       18    11032        %INCLUDE Z8E_P_OLAY;
       19    11045        %INCLUDE Z8E_HEAP;
       20    11101        %INCLUDE Z8E_STACKS;
       21    13367        %INCLUDE Z8E_O1COM; /* Has to be after Z8E_STACKS */
       22    14128        %INCLUDE Z8A_TYPES;
       23    14302        %INCLUDE Z8E_WINDOW;
       24    16372        %INCLUDE Z8A_P_STATE;
       25    16382
       26    16383        /* If parse transitions are to be monitored, set PARSING_STATS
       27    16384           to true in the file Z8E_P_STATS,
       28    16385           and set PARSING_STATS_FILENAME = file name for data retention
       29    16386        */
       30    16387        %EQU PARSING_STATS_FILENAME = 'DD_STATS';
       31    16388
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:25   
       32    16389        %INCLUDE Z8A_P_MACROS;
       33    17199
       34    17200
       35    17201    1   DCL Z8EM$SEMANTICS_DATA_DIV ENTRY;
       36    17202    1   DCL Z8EL$LEX ENTRY;
       37    17203    1   DCL Z9AT$TERMINATOR ENTRY;
       38    17204    1   DCL Z8EE$CREATE_DUMMY_TOKEN ENTRY(4);
       39    17205
       40    17206
       41    17207
       42    17208    1   DCL SEMANTIC_ACTION SBIN WORD EXT; /* Set to semantic action to be executed */
       43    17209
       44    17210
       45    17211        %EJECT;
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:26   
       46    17212        /* The following macros and code may need to be customized
       47    17213           for a specific application.
       48    17214        */
       49    17215
       50    17216
       51    17217
       52    17218        %MACRO CREATE_DUMMY_TOKEN;
       53    17219            CALL Z8EE$CREATE_DUMMY_TOKEN( O1COM.LA_PUT,
       54    17220                                   BINBIT(O1COM.CORRECTION.SYM(O1COM.CORRECTION.INDX), 36),
       55    17221                                          O1COM.ERRLINE,
       56    17222                                          O1COM.ERRCOL);
       57    17223        %MEND;
       58    17224
       59    17225
       60    17226        %EQU DI_CHAR_LEN_MAX = 100;  /* Maximum length of an error plug-in */
       61    17227
       62    17228
       63    17229
       64    17230        %MACRO TERMINATE;
       65    17231          /* Insert code for abnormal termination of parser */
       66    17232          CALL Z9AT$TERMINATOR;
       67    17233        %MEND;
       68    17234
       69    17235
       70    17236        %MACRO ERRORPROC;
       71    17237        ERROR : PROC(ERROR_TYPE, PLUG1$, PLUG2$);
       72    17238
       73    17239        DCL ERROR_TYPE SBIN WORD;
       74    17240        DCL PLUG1$ PTR;  /* TO DNT */
       75    17241        DCL PLUG2$ PTR;  /* TO DNT */
       76    17242
       77    17243        DCL NEWPLUG1$ PTR;
       78    17244        DCL NEWPLUG2$ PTR;
       79    17245        DCL Z8AE$ERROR ENTRY(12);
       80    17246
       81    17247        DCL 1 PARSEDNT BASED ALIGNED,
       82    17248              2 TEXT,
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:27   
       83    17249                3 LENGTH SBIN WORD,
       84    17250                3 NAME CHAR(PARSEDNT.TEXT.LENGTH);
       85    17251
       86    17252        /* ERROR LOCATION IS SET WITH THE RESET_ERROR_LOC MACRO BEFORE
       87    17253           THE ERROR PROCEDURE IS CALLED */
       88    17254
       89    17255        IF ADDR(PLUG1$) = ADDR(NIL) THEN
       90    17256          /* Only error type is specified */
       91    17257          CALL Z8AE$ERROR(ERROR_TYPE, O1COM.ERRLINE, O1COM.ERRCOL);
       92    17258        ELSE
       93    17259          IF ADDR(PLUG2$) = ADDR(NIL) THEN
       94    17260            /* Only 1 plug is specified */
       95    17261            DO;
       96    17262              %NEW_DNT(@POINTER = NEWPLUG1$,
       97    17263                          @SIZE = "PLUG1$ -> PARSEDNT.TEXT.LENGTH",
       98    17264                          @NAME = "PLUG1$ -> PARSEDNT.TEXT.NAME");
       99    17265              CALL Z8AE$ERROR(ERROR_TYPE, O1COM.ERRLINE, O1COM.ERRCOL, NEWPLUG1$);
      100    17266            END;
      101    17267          ELSE
      102    17268            /* 2 PLUGS WERE SPECIFIED */
      103    17269            DO;
      104    17270              %NEW_DNT(@POINTER = NEWPLUG1$,
      105    17271                            @SIZE = "PLUG1$ -> PARSEDNT.TEXT.LENGTH",
      106    17272                            @NAME = "PLUG1$ -> PARSEDNT.TEXT.NAME");
      107    17273              %NEW_DNT(@POINTER = NEWPLUG2$,
      108    17274                          @SIZE = "PLUG2$ -> PARSEDNT.TEXT.LENGTH",
      109    17275                          @NAME = "PLUG2$ -> PARSEDNT.TEXT.NAME");
      110    17276           CALL Z8AE$ERROR (ERROR_TYPE, O1COM.ERRLINE, O1COM.ERRCOL, NEWPLUG1$, NEWPLUG2$);
      111    17277            END;
      112    17278
      113    17279        END ERROR;
      114    17280        %MEND;
      115    17281
      116    17282
      117    17283
      118    17284        %MACRO RESET_ERROR_LOC;
      119    17285
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:28   
      120    17286          /* RESET THE LINE & COLUMN TO THE POINT OF ERROR */
      121    17287          DO;
      122    17288             O1COM.ERRLINE = O1COM.LA_STK.LINE(O1COM.LA_GET);
      123    17289             O1COM.ERRCOL  = O1COM.LA_STK.COLUMN(O1COM.LA_GET);
      124    17290          END;
      125    17291        %MEND;
      126    17292
      127    17293
      128    17294        %MACRO CREATE_EMPTY_TERMINAL_ON_LX_STK;
      129    17295          DO;
      130    17296            /* Fill in LX_STK(LX_TOP) with an empty terminal value */
      131    17297            %INIT_LX_TERMINAL ( @POINTER = "ADDR(O1COM.LX_STK(O1COM.LX_TOP))",
      132    17298                                @SYMBOL = %EMPTY);
      133    17299          END;
      134    17300        %MEND;
      135    17301
      136    17302
      137    17303        %MACRO LAST_SHIFTED_LOC;
      138    17304
      139    17305          /* Set the location of the last shifted token which differs
      140    17306             from the location of the last token scanned when error
      141    17307             correction is done.
      142    17308          */
      143    17309          DO;
      144    17310            COMCOM.CURRENT.LINE = O1COM.LA_STK.LINE(O1COM.LA_GET);
      145    17311            COMCOM.CURRENT.COLUMN = O1COM.LA_STK.COLUMN(O1COM.LA_GET);
      146    17312          END;
      147    17313        %MEND;
      148    17314
      149    17315
      150    17316        %MACRO CALL_SEMANTICS(A=0);
      151    17317
      152    17318          /* Call the semantics routine with the designated action.
      153    17319          */
      154    17320          SEMANTIC_ACTION = BITBIN(A);
      155    17321          CALL Z8EM$SEMANTICS_DATA_DIV;
      156    17322
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:29   
      157    17323        %MEND;
      158    17324
      159    17325
      160    17326        %MACRO CALL_SCANNER;
      161    17327
      162    17328          /* Call the scanner to obtain the next token.  The token should be
      163    17329             placed in LA_STK(LA_PUT).
      164    17330          */
      165    17331          CALL Z8EL$LEX;
      166    17332
      167    17333        %MEND;
      168    17334
      169    17335        %ERRORPROC;

  17336 14 000003   200010 741300       ERROR        STX1  ! INDX+1,,AUTO

  17349 14 000004   200012 236100                    LDQ     @PLUG1$,,AUTO
        14 000005   000000 116000 15                 CMPQ    0
        14 000006   000021 601000 14                 TNZ     s:17353

  17351 14 000007   000002 236000 15                 LDQ     2
        14 000010   200020 756100                    STQ     NEWPLUG2$+3,,AUTO
        14 000011   000003 236000 15                 LDQ     3
        14 000012   200011 235100                    LDA     @ERROR_TYPE,,AUTO
        14 000013   200016 757100                    STAQ    NEWPLUG2$+1,,AUTO
        14 000014   200016 630500                    EPPR0   NEWPLUG2$+1,,AUTO
        14 000015   000001 631400 15                 EPPR1   1
        14 000016   000000 701000 xent               TSX1    Z8AE$ERROR
        14 000017   000000 011000                    NOP     0
        14 000020   000317 710000 14                 TRA     s:17543

  17353 14 000021   200013 236100                    LDQ     @PLUG2$,,AUTO
        14 000022   000000 116000 15                 CMPQ    0
        14 000023   000126 601000 14                 TNZ     s:17426

  17361 14 000024   200012 470500                    LDP0    @PLUG1$,,AUTO
        14 000025   000000 471500                    LDP1    0,,PR0
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:30   
        14 000026   100000 236100                    LDQ     0,,PR1
        14 000027   000025 036007                    ADLQ    21,DL
        14 000030   000004 506007                    DIV     4,DL
        14 000031   000000 756000 0                  STQ     ITERATION

  17362 14 000032   000002 036000 3                  ADLQ    DNT_+2
        14 000033   000046 604000 14                 TMI     s:17364
        14 000034   000003 116000 3                  CMPQ    DNT_+3
        14 000035   000046 602000 14                 TNC     s:17364

  17363 14 000036   000005 236000 15                 LDQ     5
        14 000037   200016 756100                    STQ     NEWPLUG2$+1,,AUTO
        14 000040   200016 631500                    EPPR1   NEWPLUG2$+1,,AUTO
        14 000041   200017 451500                    STP1    NEWPLUG2$+2,,AUTO
        14 000042   200017 630500                    EPPR0   NEWPLUG2$+2,,AUTO
        14 000043   000004 631400 15                 EPPR1   4
        14 000044   000000 701000 xent               TSX1    Z8AR$RESERVER
        14 000045   000000 011000                    NOP     0

  17364 14 000046   000002 236000 3                  LDQ     DNT_+2
        14 000047   000022 736000                    QLS     18
        14 000050   000001 036000 3                  ADLQ    DNT_+1
        14 000051   200014 756100                    STQ     NEWPLUG1$,,AUTO

  17365 14 000052   000002 236000 3                  LDQ     DNT_+2
        14 000053   000000 036000 0                  ADLQ    ITERATION
        14 000054   000002 756000 3                  STQ     DNT_+2

  17366 14 000055   001046 220003                    LDX0    550,DU
        14 000056   200014 470500                    LDP0    NEWPLUG1$,,AUTO
        14 000057   000000 740100                    STX0    0,,PR0

  17367 14 000060   000000 721000 0                  LXL1    ITERATION
        14 000061   200014 470500                    LDP0    NEWPLUG1$,,AUTO
        14 000062   000000 441100                    SXL1    0,,PR0

  17368 14 000063   200012 470500                    LDP0    @PLUG1$,,AUTO
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:31   
        14 000064   000000 471500                    LDP1    0,,PR0
        14 000065   100000 721100                    LXL1    0,,PR1
        14 000066   200014 473500                    LDP3    NEWPLUG1$,,AUTO
        14 000067   300004 741100                    STX1    4,,PR3

  17371 14 000070   000000 236000 15                 LDQ     0
        14 000071   200014 471500                    LDP1    NEWPLUG1$,,AUTO
        14 000072   100001 756100                    STQ     1,,PR1

  17372 14 000073   200014 471500                    LDP1    NEWPLUG1$,,AUTO
        14 000074   100002 756100                    STQ     2,,PR1

  17373 14 000075   000000 221003                    LDX1    0,DU
        14 000076   200014 471500                    LDP1    NEWPLUG1$,,AUTO
        14 000077   100003 741100                    STX1    3,,PR1

  17374 14 000100   000000 222003                    LDX2    0,DU
        14 000101   200014 471500                    LDP1    NEWPLUG1$,,AUTO
        14 000102   100003 442100                    SXL2    3,,PR1

  17375 14 000103   200014 471500                    LDP1    NEWPLUG1$,,AUTO
        14 000104   100004 223100                    LDX3    4,,PR1
        14 000105   000000 473500                    LDP3    0,,PR0
        14 000106   300000 724100                    LXL4    0,,PR3
        14 000107   040140 100540                    MLR     fill='040'O
        14 000110   300001 000014                    ADSC9   1,,PR3                   cn=0,n=*X4
        14 000111   100004 400013                    ADSC9   4,,PR1                   cn=2,n=*X3

  17416 14 000112   200014 631500                    EPPR1   NEWPLUG1$,,AUTO
        14 000113   200021 451500                    STP1    NEWPLUG2$+4,,AUTO
        14 000114   000002 236000 15                 LDQ     2
        14 000115   200020 756100                    STQ     NEWPLUG2$+3,,AUTO
        14 000116   000003 236000 15                 LDQ     3
        14 000117   200011 235100                    LDA     @ERROR_TYPE,,AUTO
        14 000120   200016 757100                    STAQ    NEWPLUG2$+1,,AUTO
        14 000121   200016 630500                    EPPR0   NEWPLUG2$+1,,AUTO
        14 000122   000006 631400 15                 EPPR1   6
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:32   
        14 000123   000000 701000 xent               TSX1    Z8AE$ERROR
        14 000124   000000 011000                    NOP     0

  17417 14 000125   000317 710000 14                 TRA     s:17543

  17426 14 000126   200012 470500                    LDP0    @PLUG1$,,AUTO
        14 000127   000000 471500                    LDP1    0,,PR0
        14 000130   100000 236100                    LDQ     0,,PR1
        14 000131   000025 036007                    ADLQ    21,DL
        14 000132   000004 506007                    DIV     4,DL
        14 000133   000000 756000 0                  STQ     ITERATION

  17427 14 000134   000002 036000 3                  ADLQ    DNT_+2
        14 000135   000150 604000 14                 TMI     s:17429
        14 000136   000003 116000 3                  CMPQ    DNT_+3
        14 000137   000150 602000 14                 TNC     s:17429

  17428 14 000140   000005 236000 15                 LDQ     5
        14 000141   200016 756100                    STQ     NEWPLUG2$+1,,AUTO
        14 000142   200016 631500                    EPPR1   NEWPLUG2$+1,,AUTO
        14 000143   200017 451500                    STP1    NEWPLUG2$+2,,AUTO
        14 000144   200017 630500                    EPPR0   NEWPLUG2$+2,,AUTO
        14 000145   000004 631400 15                 EPPR1   4
        14 000146   000000 701000 xent               TSX1    Z8AR$RESERVER
        14 000147   000000 011000                    NOP     0

  17429 14 000150   000002 236000 3                  LDQ     DNT_+2
        14 000151   000022 736000                    QLS     18
        14 000152   000001 036000 3                  ADLQ    DNT_+1
        14 000153   200014 756100                    STQ     NEWPLUG1$,,AUTO

  17430 14 000154   000002 236000 3                  LDQ     DNT_+2
        14 000155   000000 036000 0                  ADLQ    ITERATION
        14 000156   000002 756000 3                  STQ     DNT_+2

  17431 14 000157   001046 220003                    LDX0    550,DU
        14 000160   200014 470500                    LDP0    NEWPLUG1$,,AUTO
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:33   
        14 000161   000000 740100                    STX0    0,,PR0

  17432 14 000162   000000 721000 0                  LXL1    ITERATION
        14 000163   200014 470500                    LDP0    NEWPLUG1$,,AUTO
        14 000164   000000 441100                    SXL1    0,,PR0

  17433 14 000165   200012 470500                    LDP0    @PLUG1$,,AUTO
        14 000166   000000 471500                    LDP1    0,,PR0
        14 000167   100000 721100                    LXL1    0,,PR1
        14 000170   200014 473500                    LDP3    NEWPLUG1$,,AUTO
        14 000171   300004 741100                    STX1    4,,PR3

  17436 14 000172   000000 236000 15                 LDQ     0
        14 000173   200014 471500                    LDP1    NEWPLUG1$,,AUTO
        14 000174   100001 756100                    STQ     1,,PR1

  17437 14 000175   200014 471500                    LDP1    NEWPLUG1$,,AUTO
        14 000176   100002 756100                    STQ     2,,PR1

  17438 14 000177   000000 221003                    LDX1    0,DU
        14 000200   200014 471500                    LDP1    NEWPLUG1$,,AUTO
        14 000201   100003 741100                    STX1    3,,PR1

  17439 14 000202   000000 222003                    LDX2    0,DU
        14 000203   200014 471500                    LDP1    NEWPLUG1$,,AUTO
        14 000204   100003 442100                    SXL2    3,,PR1

  17440 14 000205   200014 471500                    LDP1    NEWPLUG1$,,AUTO
        14 000206   100004 223100                    LDX3    4,,PR1
        14 000207   000000 473500                    LDP3    0,,PR0
        14 000210   300000 724100                    LXL4    0,,PR3
        14 000211   040140 100540                    MLR     fill='040'O
        14 000212   300001 000014                    ADSC9   1,,PR3                   cn=0,n=*X4
        14 000213   100004 400013                    ADSC9   4,,PR1                   cn=2,n=*X3

  17486 14 000214   200013 471500                    LDP1    @PLUG2$,,AUTO
        14 000215   100000 473500                    LDP3    0,,PR1
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:34   
        14 000216   300000 236100                    LDQ     0,,PR3
        14 000217   000025 036007                    ADLQ    21,DL
        14 000220   000004 506007                    DIV     4,DL
        14 000221   000000 756000 0                  STQ     ITERATION

  17487 14 000222   000002 036000 3                  ADLQ    DNT_+2
        14 000223   000236 604000 14                 TMI     s:17489
        14 000224   000003 116000 3                  CMPQ    DNT_+3
        14 000225   000236 602000 14                 TNC     s:17489

  17488 14 000226   000005 236000 15                 LDQ     5
        14 000227   200016 756100                    STQ     NEWPLUG2$+1,,AUTO
        14 000230   200016 633500                    EPPR3   NEWPLUG2$+1,,AUTO
        14 000231   200017 453500                    STP3    NEWPLUG2$+2,,AUTO
        14 000232   200017 630500                    EPPR0   NEWPLUG2$+2,,AUTO
        14 000233   000004 631400 15                 EPPR1   4
        14 000234   000000 701000 xent               TSX1    Z8AR$RESERVER
        14 000235   000000 011000                    NOP     0

  17489 14 000236   000002 236000 3                  LDQ     DNT_+2
        14 000237   000022 736000                    QLS     18
        14 000240   000001 036000 3                  ADLQ    DNT_+1
        14 000241   200015 756100                    STQ     NEWPLUG2$,,AUTO

  17490 14 000242   000002 236000 3                  LDQ     DNT_+2
        14 000243   000000 036000 0                  ADLQ    ITERATION
        14 000244   000002 756000 3                  STQ     DNT_+2

  17491 14 000245   001046 220003                    LDX0    550,DU
        14 000246   200015 470500                    LDP0    NEWPLUG2$,,AUTO
        14 000247   000000 740100                    STX0    0,,PR0

  17492 14 000250   000000 721000 0                  LXL1    ITERATION
        14 000251   200015 470500                    LDP0    NEWPLUG2$,,AUTO
        14 000252   000000 441100                    SXL1    0,,PR0

  17493 14 000253   200013 470500                    LDP0    @PLUG2$,,AUTO
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:35   
        14 000254   000000 471500                    LDP1    0,,PR0
        14 000255   100000 721100                    LXL1    0,,PR1
        14 000256   200015 473500                    LDP3    NEWPLUG2$,,AUTO
        14 000257   300004 741100                    STX1    4,,PR3

  17496 14 000260   000000 236000 15                 LDQ     0
        14 000261   200015 471500                    LDP1    NEWPLUG2$,,AUTO
        14 000262   100001 756100                    STQ     1,,PR1

  17497 14 000263   200015 471500                    LDP1    NEWPLUG2$,,AUTO
        14 000264   100002 756100                    STQ     2,,PR1

  17498 14 000265   000000 221003                    LDX1    0,DU
        14 000266   200015 471500                    LDP1    NEWPLUG2$,,AUTO
        14 000267   100003 741100                    STX1    3,,PR1

  17499 14 000270   000000 222003                    LDX2    0,DU
        14 000271   200015 471500                    LDP1    NEWPLUG2$,,AUTO
        14 000272   100003 442100                    SXL2    3,,PR1

  17500 14 000273   200015 471500                    LDP1    NEWPLUG2$,,AUTO
        14 000274   100004 223100                    LDX3    4,,PR1
        14 000275   000000 473500                    LDP3    0,,PR0
        14 000276   300000 724100                    LXL4    0,,PR3
        14 000277   040140 100540                    MLR     fill='040'O
        14 000300   300001 000014                    ADSC9   1,,PR3                   cn=0,n=*X4
        14 000301   100004 400013                    ADSC9   4,,PR1                   cn=2,n=*X3

  17541 14 000302   200015 631500                    EPPR1   NEWPLUG2$,,AUTO
        14 000303   200022 451500                    STP1    NEWPLUG2$+5,,AUTO
        14 000304   200014 633500                    EPPR3   NEWPLUG1$,,AUTO
        14 000305   200021 453500                    STP3    NEWPLUG2$+4,,AUTO
        14 000306   000002 236000 15                 LDQ     2
        14 000307   200020 756100                    STQ     NEWPLUG2$+3,,AUTO
        14 000310   000003 236000 15                 LDQ     3
        14 000311   200011 235100                    LDA     @ERROR_TYPE,,AUTO
        14 000312   200016 757100                    STAQ    NEWPLUG2$+1,,AUTO
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:36   
        14 000313   200016 630500                    EPPR0   NEWPLUG2$+1,,AUTO
        14 000314   000007 631400 15                 EPPR1   7
        14 000315   000000 701000 xent               TSX1    Z8AE$ERROR
        14 000316   000000 011000                    NOP     0

  17543 14 000317   200010 221300                    LDX1  ! INDX+1,,AUTO
        14 000320   000001 702211                    TSX2  ! 1,X1

      170    17545
      171    17546        %IF PARSING_STATS;
      172    17547 C        %RESTORE_Z8E_P_STATS_PROC;
      173    17548 C        %DUMP_Z8E_P_STATS_PROC;
      174    17549        %ENDIF;
      175    17550
      176    17551        %RESTORE_PARSER_STATS;
      177    17556
      178    17557
      179    17558
      180    17559
      181    17560    2   DO WHILE '1'B;

      182    17561
      183    17562          %GET_ACTION_ITEM;

  17566 14 000321   000130 720000 xsym               LXL0    O1COM+88
        14 000322   000000 721010 xsym               LXL1    DD_ACTION_COL,X0
        14 000323   000327 601000 14                 TNZ     s:17581

  17571 14 000324   000000 222010 xsym               LDX2    DD_ACTION_COL,X0
        14 000325   200006 742100                    STX2    ACTION,,AUTO

  17572 14 000326   000553 710000 14                 TRA     s:17744

  17581 14 000327   000131 235000 xsym               LDA     O1COM+89
        14 000330   000412 605400 14                 TPNZ    s:17650

  17582 14 000331   000152 236000 xsym               LDQ     O1COM+106
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:37   
        14 000332   000347 601000 14                 TNZ     s:17594
        14 000333   000153 235000 xsym               LDA     O1COM+107
        14 000334   000347 601000 14                 TNZ     s:17594

  17588 14 000335   000010 631400 15                 EPPR1   8
        14 000336   000000 701000 xent               TSX1    Z8EL$LEX
        14 000337   000000 011000                    NOP     0

  17590 14 000340   000132 235000 xsym               LDA     O1COM+90
        14 000341   000003 735000                    ALS     3
        14 000342   000246 235005 xsym               LDA     O1COM+166,AL
        14 000343   000132 755000 xsym               STA     O1COM+90

  17591 14 000344   000001 236007                    LDQ     1,DL
        14 000345   000131 756000 xsym               STQ     O1COM+89

  17592 14 000346   000412 710000 14                 TRA     s:17650

  17594 14 000347   000000 116003                    CMPQ    0,DU
        14 000350   000403 604400 14                 TMOZ    s:17609

  17597 14 000351   000153 235000 xsym               LDA     O1COM+107
        14 000352   000001 735000                    ALS     1
        14 000353   000100 100405                    MLR     fill='000'O
        14 000354   000154 000002 xsym               ADSC9   O1COM+108,A              cn=0,n=2
        14 000355   200016 000004                    ADSC9   NEWPLUG2$+1,,AUTO        cn=0,n=4
        14 000356   200016 236100                    LDQ     NEWPLUG2$+1,,AUTO
        14 000357   000022 732000                    QRS     18
        14 000360   200020 756100                    STQ     NEWPLUG2$+3,,AUTO
        14 000361   000012 237000 15                 LDAQ    10
        14 000362   200024 757100                    STAQ    NEWPLUG2$+7,,AUTO
        14 000363   200020 630500                    EPPR0   NEWPLUG2$+3,,AUTO
        14 000364   200023 450500                    STP0    NEWPLUG2$+6,,AUTO
        14 000365   000011 236000 15                 LDQ     9
        14 000366   200022 756100                    STQ     NEWPLUG2$+5,,AUTO
        14 000367   200022 630500                    EPPR0   NEWPLUG2$+5,,AUTO
        14 000370   000006 631400 15                 EPPR1   6
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:38   
        14 000371   000000 701000 xent               TSX1    Z8EE$CREATE_DUMMY_TOKEN
        14 000372   000000 011000                    NOP     0

  17602 14 000373   000001 336007                    LCQ     1,DL
        14 000374   000152 056000 xsym               ASQ     O1COM+106

  17603 14 000375   000153 054000 xsym               AOS     O1COM+107

  17604 14 000376   000132 235000 xsym               LDA     O1COM+90
        14 000377   000133 755000 xsym               STA     O1COM+91

  17605 14 000400   000001 235007                    LDA     1,DL
        14 000401   000131 755000 xsym               STA     O1COM+89

  17606 14 000402   000412 710000 14                 TRA     s:17650

  17609 14 000403   000153 450000 xsym               STZ     O1COM+107

  17610 14 000404   000142 235000 xsym               LDA     O1COM+98
        14 000405   000131 755000 xsym               STA     O1COM+89

  17611 14 000406   000141 235000 xsym               LDA     O1COM+97
        14 000407   000132 755000 xsym               STA     O1COM+90

  17612 14 000410   000140 235000 xsym               LDA     O1COM+96
        14 000411   000133 755000 xsym               STA     O1COM+91

  17650 14 000412   000133 235000 xsym               LDA     O1COM+91
        14 000413   000003 735000                    ALS     3
        14 000414   000130 720000 xsym               LXL0    O1COM+88
        14 000415   000000 236010 xsym               LDQ     DD_ACTION_COL,X0
        14 000416   777777 376007                    ANQ     -1,DL
        14 000417   000242 036005 xsym               ADLQ    O1COM+162,AL
        14 000420   000000 621006                    EAX1    0,QL
        14 000421   200007 741100                    STX1    INDX,,AUTO

  17651 14 000422   000000 236011 xsym               LDQ     DD_ACTION_ROW,X1
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:39   
        14 000423   777777 376007                    ANQ     -1,DL
        14 000424   000130 116000 xsym               CMPQ    O1COM+88
        14 000425   000551 601000 14                 TNZ     s:17738

  17656 14 000426   000000 222011 xsym               LDX2    DD_ACTION_ROW,X1
        14 000427   200006 742100                    STX2    ACTION,,AUTO

  17657 14 000430   000553 601000 14                 TNZ     s:17744

  17666 14 000431   000151 235000 xsym               LDA     O1COM+105
        14 000432   000150 755000 xsym               STA     O1COM+104

  17667 14 000433   000002 336007                    LCQ     2,DL
        14 000434   000146 056000 xsym               ASQ     O1COM+102

  17668 14 000435   000000 223003                    LDX3    0,DU
        14 000436   200007 743100                    STX3    INDX,,AUTO
        14 000437   000530 710000 14                 TRA     s:17708+3

  17669 14 000440   200007 220100                    LDX0    INDX,,AUTO
        14 000441   011227 235010 xsym               LDA     O1COM+4759,X0
        14 000442   000151 755000 xsym               STA     O1COM+105

  17670 14 000443   011226 235010 xsym               LDA     O1COM+4758,X0
        14 000444   000134 755000 xsym               STA     O1COM+92

  17671 14 000445   000001 735000                    ALS     1
        14 000446   000001 235005 xsym               LDA     DD_PRODR+1,AL
        14 000447   000457 600000 14                 TZE     s:17680

  17676 14 000450   000134 235000 xsym               LDA     O1COM+92
        14 000451   000001 735000                    ALS     1
        14 000452   000001 235005 xsym               LDA     DD_PRODR+1,AL
        14 000453   000000 755000 13                 STA     SEMANTIC_ACTION

  17677 14 000454   000010 631400 15                 EPPR1   8
        14 000455   000000 701000 xent               TSX1    Z8EM$SEMANTICS_DATA_DIV
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:40   
        14 000456   000000 011000                    NOP     0

  17680 14 000457   000134 235000 xsym               LDA     O1COM+92
        14 000460   000001 735000                    ALS     1
        14 000461   000000 720005 xsym               LXL0    DD_PRODR,AL
        14 000462   000525 601000 14                 TNZ     s:17708

  17682 14 000463   000151 054000 xsym               AOS     O1COM+105

  17689 14 000464   000151 236000 xsym               LDQ     O1COM+105
        14 000465   000003 736000                    QLS     3
        14 000466   000000 221003                    LDX1    0,DU
        14 000467   014017 741006 xsym               STX1    O1COM+6159,QL

  17690 14 000470   000151 235000 xsym               LDA     O1COM+105
        14 000471   000003 735000                    ALS     3
        14 000472   000000 220003                    LDX0    0,DU
        14 000473   014017 440005 xsym               SXL0    O1COM+6159,AL

  17694 14 000474   000151 235000 xsym               LDA     O1COM+105
        14 000475   000003 735000                    ALS     3
        14 000476   000015 236007                    LDQ     13,DL
        14 000477   014023 756005 xsym               STQ     O1COM+6163,AL

  17696 14 000500   000151 235000 xsym               LDA     O1COM+105
        14 000501   000003 735000                    ALS     3
        14 000502   000000 236000 15                 LDQ     0
        14 000503   014026 756005 xsym               STQ     O1COM+6166,AL

  17698 14 000504   000151 235000 xsym               LDA     O1COM+105
        14 000505   000003 735000                    ALS     3
        14 000506   014020 756005 xsym               STQ     O1COM+6160,AL

  17699 14 000507   000151 235000 xsym               LDA     O1COM+105
        14 000510   000003 735000                    ALS     3
        14 000511   014022 450005 xsym               STZ     O1COM+6162,AL

PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:41   
  17700 14 000512   000151 235000 xsym               LDA     O1COM+105
        14 000513   000003 735000                    ALS     3
        14 000514   014021 756005 xsym               STQ     O1COM+6161,AL

  17701 14 000515   000151 235000 xsym               LDA     O1COM+105
        14 000516   000003 735000                    ALS     3
        14 000517   000133 236000 xsym               LDQ     COMCOM+91
        14 000520   014024 756005 xsym               STQ     O1COM+6164,AL

  17702 14 000521   000151 235000 xsym               LDA     O1COM+105
        14 000522   000003 735000                    ALS     3
        14 000523   000134 236000 xsym               LDQ     COMCOM+92
        14 000524   014025 756005 xsym               STQ     O1COM+6165,AL

  17708 14 000525   200007 220100                    LDX0    INDX,,AUTO
        14 000526   000002 621010                    EAX1    2,X0
        14 000527   200007 741100                    STX1    INDX,,AUTO
        14 000530   200007 236100                    LDQ     INDX,,AUTO
        14 000531   000022 732000                    QRS     18
        14 000532   000146 116000 xsym               CMPQ    O1COM+102
        14 000533   000440 604400 14                 TMOZ    s:17669

  17709 14 000534   000146 450000 xsym               STZ     O1COM+102

  17710 14 000535   000150 235000 xsym               LDA     O1COM+104
        14 000536   000151 755000 xsym               STA     O1COM+105

  17711 14 000537   000147 450000 xsym               STZ     O1COM+103

  17726 14 000540   000133 235000 xsym               LDA     O1COM+91
        14 000541   000003 735000                    ALS     3
        14 000542   000244 235005 xsym               LDA     O1COM+164,AL
        14 000543   000133 755000 xsym               STA     COMCOM+91

  17727 14 000544   000133 235000 xsym               LDA     O1COM+91
        14 000545   000003 735000                    ALS     3
        14 000546   000245 235005 xsym               LDA     O1COM+165,AL
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:42   
        14 000547   000134 755000 xsym               STA     COMCOM+92

  17730 14 000550   000000 702200 xent               TSX2  ! X66_ARET

  17738 14 000551   000000 222010 xsym               LDX2    DD_ACTION_COL,X0
        14 000552   200006 742100                    STX2    ACTION,,AUTO

      184    17742
      185    17743        %LIST;
      186    17744    2     IF ACTION < 0 THEN

  17744 14 000553   001103 605000 14                 TPL     s:18041

      187    17745            %REDUCE;
             17746               /* Reduce the symbols and states on the stack by the appropriate
             17747                  production, after calling any required semantic routine.
             17748                  The token stack (LX_STK) is left with one dummy token to
             17749                  represent the non_terminal that was just reduced.  This non_terminal
             17750                  and the state on the stack after the reduction are used to
             17751                  index into the GOTO table to obtain the next state.
             17752               */
             17753    3         DO;

             17754    3           ACTION          = - ACTION;

  17754 14 000554   777777 622012                    EAX2    -1,X2
        14 000555   777777 662003                    ERX2    -1,DU
        14 000556   200006 742100                    STX2    ACTION,,AUTO

             17755                %IF LOCALLY_LEAST_COST_RECOVERY;
             17756                  %SAVE_IED_STATE;
             17757               /* Our error correction scheme requires that we detect errors
             17758                  immediately;  that is, before we do any reductions.
             17759                  Unfortunately, it is a property of LALR parsers that
             17760                  some reductions may be performed upon  encountering an
             17761                  error symbol, before recognizing the error.  Therefore, we
             17762                  must save the state of the parser at any reduction and stack
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:43   
             17763                  all semantic calls until the next shift has been performed,
             17764                  which means the next token has been accepted.
             17765               */
             17766    4     DO;

             17767    4       IF NOT O1COM.IED_FLAG THEN

  17767 14 000557   000147 234000 xsym               SZN     O1COM+103
        14 000560   000577 604000 14                 TMI     s:17786

             17768    5         DO;

             17769    5           O1COM.ALT_PARSE_STACK_IDX = O1COM.PARSE_STACK_IDX;

  17769 14 000561   000135 235000 xsym               LDA     O1COM+93
        14 000562   000145 755000 xsym               STA     O1COM+101

             17770    5           PARSE_STACK_IDX_IN_CHARS = O1COM.PARSE_STACK_IDX * 4 + 4;

  17770 14 000563   000002 735000                    ALS     2
        14 000564   000004 035007                    ADLA    4,DL
        14 000565   200003 755100                    STA     PARSE_STACK_IDX_IN_CHARS,,AUTO

             17771    5           ADDR(O1COM.ALT_PARSE_STACK) -> PARSE_STACK_USED

  17771 14 000566   000000 621005                    EAX1    0,AL
        14 000567   200003 723100                    LXL3    PARSE_STACK_IDX_IN_CHARS,,AUTO
        14 000570   040040 100440                    MLR     fill='040'O
        14 000571   001364 000011 xsym               ADSC9   O1COM+756                cn=0,n=*X1
        14 000572   005305 000013 xsym               ADSC9   O1COM+2757               cn=0,n=*X3

             17772    5               = ADDR(O1COM.PARSE_STACK) -> PARSE_STACK_USED;
             17773    5           O1COM.ALT_LX_TOP          = O1COM.LX_TOP;

  17773 14 000573   000151 235000 xsym               LDA     O1COM+105
        14 000574   000150 755000 xsym               STA     O1COM+104

PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:44   
             17774    5           O1COM.IED_FLAG            = '1'B;

  17774 14 000575   400000 236003                    LDQ     -131072,DU
        14 000576   000147 756000 xsym               STQ     O1COM+103

             17775    5         END;

             17776    4     END;

             17778                %ENDIF;
             17779                %IF LOCALLY_LEAST_COST_RECOVERY;
             17780                  %PUSH_SEMANTIC_ACTION;
             17781               /* Do to the immediate error detection problem, we need to
             17782                  save all semantic actions until a shift is about to be done,
             17783                  signaling that no error has been encountered.
             17784               */
             17785    4   DO;

             17786    4     IF O1COM.RED_STACK_TOP < %RED_STACK_MAX - 2 THEN

  17786 14 000577   000146 235000 xsym               LDA     O1COM+102
        14 000600   002566 115007                    CMPA    1398,DL
        14 000601   000613 605000 14                 TPL     s:17800

             17787    5       DO;

             17788    5         O1COM.RED_STACK(O1COM.RED_STACK_TOP)     = ACTION;

  17788 14 000602   200006 236100                    LDQ     ACTION,,AUTO
        14 000603   000022 732000                    QRS     18
        14 000604   011226 756005 xsym               STQ     O1COM+4758,AL

             17789    5         O1COM.RED_STACK(O1COM.RED_STACK_TOP + 1) = O1COM.LX_TOP;

  17789 14 000605   000146 720000 xsym               LXL0    O1COM+102
        14 000606   000151 235000 xsym               LDA     O1COM+105
        14 000607   011227 755010 xsym               STA     O1COM+4759,X0
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:45   

             17790    5         O1COM.RED_STACK_TOP                = O1COM.RED_STACK_TOP + 2;

  17790 14 000610   000002 236007                    LDQ     2,DL
        14 000611   000146 056000 xsym               ASQ     O1COM+102

             17791    5       END;

  17791 14 000612   000720 710000 14                 TRA     s:17901

             17792    4     ELSE
             17793    5       DO;

             17794              %AT_LEAST_ONE_TOKEN;
             17795               /* Make sure at least one token is available to
             17796                   a shift operation.
             17797               */
             17798    6     DO;

             17799            %IF LOCALLY_LEAST_COST_RECOVERY;
             17800    6         IF O1COM.LA_CNT < 1 THEN  /* NEED TOKENS */

  17800 14 000613   000131 236000 xsym               LDQ     O1COM+89
        14 000614   000676 605400 14                 TPNZ    s:17877

             17801    6           IF O1COM.CORRECTION.LEN = 0 AND O1COM.CORRECTION.INDX = 0 THEN

  17801 14 000615   000152 235000 xsym               LDA     O1COM+106
        14 000616   000633 601000 14                 TNZ     s:17813
        14 000617   000153 235000 xsym               LDA     O1COM+107
        14 000620   000633 601000 14                 TNZ     s:17813

             17802    7             DO;

             17803                    %CALL_SCANNER;
             17804          /* Call the scanner to obtain the next token.  The token should be
             17805             placed in LA_STK(LA_PUT).
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:46   
             17806          */
             17807    7     CALL Z8EL$LEX;

  17807 14 000621   000010 631400 15                 EPPR1   8
        14 000622   000000 701000 xent               TSX1    Z8EL$LEX
        14 000623   000000 011000                    NOP     0

             17809    7               O1COM.LA_PUT = O1COM.LA_STK.LINK(O1COM.LA_PUT);

  17809 14 000624   000132 235000 xsym               LDA     O1COM+90
        14 000625   000003 735000                    ALS     3
        14 000626   000246 235005 xsym               LDA     O1COM+166,AL
        14 000627   000132 755000 xsym               STA     O1COM+90

             17810    7               O1COM.LA_CNT = 1;

  17810 14 000630   000001 236007                    LDQ     1,DL
        14 000631   000131 756000 xsym               STQ     O1COM+89

             17811    7             END;

  17811 14 000632   000676 710000 14                 TRA     s:17877

             17812    6           ELSE
             17813    6             IF O1COM.CORRECTION.LEN > 0 THEN  /* NEED TO INSERT AN ERROR TOKEN */

  17813 14 000633   000152 235000 xsym               LDA     O1COM+106
        14 000634   000667 604400 14                 TMOZ    s:17828

             17814    7               DO;

             17815                      %CREATE_DUMMY_TOKEN;
             17816    7       CALL Z8EE$CREATE_DUMMY_TOKEN( O1COM.LA_PUT,

  17816 14 000635   000153 235000 xsym               LDA     O1COM+107
        14 000636   000001 735000                    ALS     1
        14 000637   000100 100405                    MLR     fill='000'O
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:47   
        14 000640   000154 000002 xsym               ADSC9   O1COM+108,A              cn=0,n=2
        14 000641   200016 000004                    ADSC9   NEWPLUG2$+1,,AUTO        cn=0,n=4
        14 000642   200016 236100                    LDQ     NEWPLUG2$+1,,AUTO
        14 000643   000022 732000                    QRS     18
        14 000644   200020 756100                    STQ     NEWPLUG2$+3,,AUTO
        14 000645   000012 237000 15                 LDAQ    10
        14 000646   200024 757100                    STAQ    NEWPLUG2$+7,,AUTO
        14 000647   200020 630500                    EPPR0   NEWPLUG2$+3,,AUTO
        14 000650   200023 450500                    STP0    NEWPLUG2$+6,,AUTO
        14 000651   000011 236000 15                 LDQ     9
        14 000652   200022 756100                    STQ     NEWPLUG2$+5,,AUTO
        14 000653   200022 630500                    EPPR0   NEWPLUG2$+5,,AUTO
        14 000654   000006 631400 15                 EPPR1   6
        14 000655   000000 701000 xent               TSX1    Z8EE$CREATE_DUMMY_TOKEN
        14 000656   000000 011000                    NOP     0

             17817    7                                    BINBIT(O1COM.CORRECTION.SYM(O1COM.CORRECTION.INDX)
             17817                                              , 36),
             17818    7                                     O1COM.ERRLINE,
             17819    7                                     O1COM.ERRCOL);
             17821    7                 O1COM.CORRECTION.LEN   = O1COM.CORRECTION.LEN - 1;

  17821 14 000657   000001 336007                    LCQ     1,DL
        14 000660   000152 056000 xsym               ASQ     O1COM+106

             17822    7                 O1COM.CORRECTION.INDX  = O1COM.CORRECTION.INDX + 1;

  17822 14 000661   000153 054000 xsym               AOS     O1COM+107

             17823    7                 O1COM.LA_GET           = O1COM.LA_PUT;

  17823 14 000662   000132 235000 xsym               LDA     O1COM+90
        14 000663   000133 755000 xsym               STA     O1COM+91

             17824    7                 O1COM.LA_CNT           = 1;

  17824 14 000664   000001 235007                    LDA     1,DL
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:48   
        14 000665   000131 755000 xsym               STA     O1COM+89

             17825    7               END;

  17825 14 000666   000676 710000 14                 TRA     s:17877

             17826    6             ELSE
             17827    7               DO;  /* HAVE EXHAUSTED ALL ERROR CORRECTION */

             17828    7                 O1COM.CORRECTION.INDX  = 0;

  17828 14 000667   000153 450000 xsym               STZ     O1COM+107

             17829    7                 O1COM.LA_CNT           = O1COM.ERR_LA_CNT;

  17829 14 000670   000142 235000 xsym               LDA     O1COM+98
        14 000671   000131 755000 xsym               STA     O1COM+89

             17830    7                 O1COM.LA_PUT           = O1COM.ERR_LA_PUT;

  17830 14 000672   000141 236000 xsym               LDQ     O1COM+97
        14 000673   000132 756000 xsym               STQ     O1COM+90

             17831    7                 O1COM.LA_GET           = O1COM.ERR_LA_GET;

  17831 14 000674   000140 235000 xsym               LDA     O1COM+96
        14 000675   000133 755000 xsym               STA     O1COM+91

             17832    7               END;

             17833            %ELSE;
             17834 C            IF O1COM.LA_CNT < 1 THEN  /* NEED TOKENS */
             17835 C              IF NOT PANIC_MODE_IN_PROGRESS THEN
             17836 C                DO;
             17837 C                  %CALL_SCANNER;
             17838 C                  O1COM.LA_PUT = O1COM.LA_STK.LINK(O1COM.LA_PUT);
             17839 C                  O1COM.LA_CNT = 1;
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:49   
             17840 C                END;
             17841 C              ELSE
             17842 C                DO;  /* GET VALID SYMBOL FOR PANIC SHIFT */
             17843 C                  O1COM.LA_CNT = O1COM.ERR_LA_CNT;
             17844 C                  O1COM.LA_PUT = O1COM.ERR_LA_PUT;
             17845 C                  O1COM.LA_GET = O1COM.ERR_LA_GET;
             17846 C      DO WHILE ACTION_ROW.CHECK(ACTION_COL.BASE(O1COM.STATE) + O1COM.LA_STK.SYMBOL(O1COM.
             17846 C      LA_GET)) ~= O1COM.STATE;
             17847 C                    IF O1COM.LA_STK.SYMBOL(O1COM.LA_GET) = %TERM_EOF_SYM THEN
             17848 C                      DO;
             17849 C                        %RESET_ERROR_LOC;
             17850 C                        CALL ERROR(%E$UNEXP_EOF_DURING_RECOVERY);
             17851 C                        %TERMINATE;
             17852 C                      END;
             17853 C                    O1COM.LA_CNT = O1COM.LA_CNT - 1;
             17854 C                    O1COM.LA_GET = O1COM.LA_STK.LINK(O1COM.LA_GET);
             17855 C                    IF O1COM.LA_CNT < 1 THEN
             17856 C                      DO;
             17857 C                        %CALL_SCANNER;
             17858 C                        O1COM.LA_PUT = O1COM.LA_STK.LINK(O1COM.LA_PUT);
             17859 C                        O1COM.LA_CNT = 1;
             17860 C                      END;
             17861 C                  END;
             17862 C                  PANIC_MODE_IN_PROGRESS = '0'B;
             17863 C                  %RESET_ERROR_LOC;
             17864 C                  CALL ERROR (%E$PARSING_RESUMED);
             17865 C                END;
             17866              %ENDIF;
             17867    6     END;

             17869              %RED_STACK_OVERFLOW;
             17870               /* The reduction stack for semantic calls has overflowed,
             17871                  so abort the compilation.
             17872               */
             17873    6   DO;

             17874        %RESET_ERROR_LOC;
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:50   
             17875          /* RESET THE LINE & COLUMN TO THE POINT OF ERROR */
             17876    7     DO;

             17877    7        O1COM.ERRLINE = O1COM.LA_STK.LINE(O1COM.LA_GET);

  17877 14 000676   000133 235000 xsym               LDA     O1COM+91
        14 000677   000003 735000                    ALS     3
        14 000700   000244 235005 xsym               LDA     O1COM+164,AL
        14 000701   000136 755000 xsym               STA     O1COM+94

             17878    7        O1COM.ERRCOL  = O1COM.LA_STK.COLUMN(O1COM.LA_GET);

  17878 14 000702   000133 236000 xsym               LDQ     O1COM+91
        14 000703   000003 736000                    QLS     3
        14 000704   000245 235006 xsym               LDA     O1COM+165,QL
        14 000705   000137 755000 xsym               STA     O1COM+95

             17879    7     END;

             17881    6     CALL ERROR(%E$RED_STACK_OVERFLOW_ERROR);

  17881 14 000706   000000 236000 15                 LDQ     0
        14 000707   000000 235000 15                 LDA     0
        14 000710   200012 757100                    STAQ    @ERROR_TYPE+1,,AUTO
        14 000711   000015 236000 15                 LDQ     13
        14 000712   200011 756100                    STQ     INDX+2,,AUTO
        14 000713   000003 701000 14                 TSX1    ERROR
        14 000714   000000 011000                    NOP     0

             17882          %TERMINATE;
             17883          /* Insert code for abnormal termination of parser */
             17884    6     CALL Z9AT$TERMINATOR;

  17884 14 000715   000010 631400 15                 EPPR1   8
        14 000716   000000 701000 xent               TSX1    Z9AT$TERMINATOR
        14 000717   000000 011000                    NOP     0

PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:51   
             17886    6   END;

             17888    5       END;

             17889    4   END;

             17891                %ELSE;
             17892 C                IF PRODR.SEMANTIC(ACTION) > 0 THEN
             17893 C                  DO;
             17894 C                    O1COM.REDUCTION = ACTION;
             17895 C                    %CALL_SEMANTICS(A="BINBIT(PRODR.SEMANTIC(O1COM.REDUCTION),36)");
             17896 C                  END;
             17897                %ENDIF;
             17898                %IF PARSING_STATS;
             17899 C                %INC_PRODR_STATS(I=ACTION);
             17900                %ENDIF;
             17901    3           O1COM.PARSE_STACK_IDX = O1COM.PARSE_STACK_IDX - PRODR.POPSTACK(ACTION);

  17901 14 000720   200006 220100                    LDX0    ACTION,,AUTO
        14 000721   200006 020100                    ADLX0   ACTION,,AUTO
        14 000722   000000 236010 xsym               LDQ     DD_PRODR,X0
        14 000723   777777 376007                    ANQ     -1,DL
        14 000724   200016 756100                    STQ     NEWPLUG2$+1,,AUTO
        14 000725   000135 236000 xsym               LDQ     O1COM+93
        14 000726   200016 136100                    SBLQ    NEWPLUG2$+1,,AUTO
        14 000727   000135 756000 xsym               STQ     O1COM+93

             17902    3        O1COM.LX_TOP       = O1COM.PARSE_STACK_IDX + 1;

  17902 14 000730   000001 036007                    ADLQ    1,DL
        14 000731   000151 756000 xsym               STQ     O1COM+105

             17903                %IF ~ LOCALLY_LEAST_COST_RECOVERY;
             17904 C                IF PRODR.POPSTACK(ACTION) = 0 THEN
             17905 C                  DO;
             17906 C                    %CREATE_EMPTY_TERMINAL_ON_LX_STK;
             17907 C                  END;
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:52   
             17908                %ENDIF;
             17909                /* Get new state */
             17910    3           NT = PRODR.GOAL(ACTION);

  17910 14 000732   000000 221010 xsym               LDX1    DD_PRODR,X0
        14 000733   200005 741100                    STX1    NT,,AUTO

             17911    3           IF GOTO_COL.BASE(NT) = 0 THEN

  17911 14 000734   000000 722011 xsym               LXL2    DD_GOTO_COL,X1
        14 000735   000742 601000 14                 TNZ     s:17920

             17912    4             DO;

             17913                    %IF PARSING_STATS;
             17914 C                  %INC_GOTO_COL_STATS(I=NT);
             17915                    %ENDIF;
             17916    4               O1COM.STATE = GOTO_COL.DEFAULT(NT);

  17916 14 000736   000000 236011 xsym               LDQ     DD_GOTO_COL,X1
        14 000737   000022 772000                    QRL     18
        14 000740   000130 756000 xsym               STQ     O1COM+88

             17917    4             END;

  17917 14 000741   000766 710000 14                 TRA     s:17937

             17918    3           ELSE
             17919    4             DO;

             17920    4               INDX = GOTO_COL.BASE(NT) + O1COM.PARSE_STACK(O1COM.PARSE_STACK_IDX);

  17920 14 000742   000135 723000 xsym               LXL3    O1COM+93
        14 000743   000000 236011 xsym               LDQ     DD_GOTO_COL,X1
        14 000744   777777 376007                    ANQ     -1,DL
        14 000745   001364 036013 xsym               ADLQ    O1COM+756,X3
        14 000746   000000 624006                    EAX4    0,QL
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:53   
        14 000747   200007 744100                    STX4    INDX,,AUTO

             17921    4               IF GOTO_ROW.CHECK(INDX) = NT THEN

  17921 14 000750   200005 235100                    LDA     NT,,AUTO
        14 000751   000022 731000                    ARS     18
        14 000752   200016 755100                    STA     NEWPLUG2$+1,,AUTO
        14 000753   000000 236014 xsym               LDQ     DD_GOTO_ROW,X4
        14 000754   777777 376007                    ANQ     -1,DL
        14 000755   200016 116100                    CMPQ    NEWPLUG2$+1,,AUTO
        14 000756   000763 601000 14                 TNZ     s:17933

             17922    5                 DO;

             17923                        %IF PARSING_STATS;
             17924 C                      %INC_GOTO_ROW_STATS(I=INDX);
             17925                        %ENDIF;
             17926    5                   O1COM.STATE = GOTO_ROW.NEXT (INDX);

  17926 14 000757   000000 236014 xsym               LDQ     DD_GOTO_ROW,X4
        14 000760   000022 772000                    QRL     18
        14 000761   000130 756000 xsym               STQ     O1COM+88

             17927    5                 END;

  17927 14 000762   000766 710000 14                 TRA     s:17937

             17928    4               ELSE
             17929    5                 DO;

             17930                        %IF PARSING_STATS;
             17931 C                      %INC_GOTO_COL_STATS(I=NT);
             17932                        %ENDIF;
             17933    5                   O1COM.STATE = GOTO_COL.DEFAULT(NT);

  17933 14 000763   000000 236011 xsym               LDQ     DD_GOTO_COL,X1
        14 000764   000022 772000                    QRL     18
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:54   
        14 000765   000130 756000 xsym               STQ     O1COM+88

             17934    5                 END;

             17935    4             END;

             17936                /* Push state on stack */
             17937    3           IF O1COM.PARSE_STACK_IDX = %PARSE_STACK_MAX THEN

  17937 14 000766   000135 235000 xsym               LDA     O1COM+93
        14 000767   003720 115007                    CMPA    2000,DL
        14 000770   001077 601000 14                 TNZ     s:18035

             17938    4             DO;

             17939                    %AT_LEAST_ONE_TOKEN;
             17940               /* Make sure at least one token is available to
             17941                   a shift operation.
             17942               */
             17943    5     DO;

             17944            %IF LOCALLY_LEAST_COST_RECOVERY;
             17945    5         IF O1COM.LA_CNT < 1 THEN  /* NEED TOKENS */

  17945 14 000771   000131 235000 xsym               LDA     O1COM+89
        14 000772   001054 605400 14                 TPNZ    s:18021

             17946    5           IF O1COM.CORRECTION.LEN = 0 AND O1COM.CORRECTION.INDX = 0 THEN

  17946 14 000773   000152 235000 xsym               LDA     O1COM+106
        14 000774   001011 601000 14                 TNZ     s:17958
        14 000775   000153 235000 xsym               LDA     O1COM+107
        14 000776   001011 601000 14                 TNZ     s:17958

             17947    6             DO;

             17948                    %CALL_SCANNER;
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:55   
             17949          /* Call the scanner to obtain the next token.  The token should be
             17950             placed in LA_STK(LA_PUT).
             17951          */
             17952    6     CALL Z8EL$LEX;

  17952 14 000777   000010 631400 15                 EPPR1   8
        14 001000   000000 701000 xent               TSX1    Z8EL$LEX
        14 001001   000000 011000                    NOP     0

             17954    6               O1COM.LA_PUT = O1COM.LA_STK.LINK(O1COM.LA_PUT);

  17954 14 001002   000132 235000 xsym               LDA     O1COM+90
        14 001003   000003 735000                    ALS     3
        14 001004   000246 235005 xsym               LDA     O1COM+166,AL
        14 001005   000132 755000 xsym               STA     O1COM+90

             17955    6               O1COM.LA_CNT = 1;

  17955 14 001006   000001 236007                    LDQ     1,DL
        14 001007   000131 756000 xsym               STQ     O1COM+89

             17956    6             END;

  17956 14 001010   001054 710000 14                 TRA     s:18021

             17957    5           ELSE
             17958    5             IF O1COM.CORRECTION.LEN > 0 THEN  /* NEED TO INSERT AN ERROR TOKEN */

  17958 14 001011   000152 235000 xsym               LDA     O1COM+106
        14 001012   001045 604400 14                 TMOZ    s:17973

             17959    6               DO;

             17960                      %CREATE_DUMMY_TOKEN;
             17961    6       CALL Z8EE$CREATE_DUMMY_TOKEN( O1COM.LA_PUT,

  17961 14 001013   000153 235000 xsym               LDA     O1COM+107
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:56   
        14 001014   000001 735000                    ALS     1
        14 001015   000100 100405                    MLR     fill='000'O
        14 001016   000154 000002 xsym               ADSC9   O1COM+108,A              cn=0,n=2
        14 001017   200016 000004                    ADSC9   NEWPLUG2$+1,,AUTO        cn=0,n=4
        14 001020   200016 236100                    LDQ     NEWPLUG2$+1,,AUTO
        14 001021   000022 732000                    QRS     18
        14 001022   200020 756100                    STQ     NEWPLUG2$+3,,AUTO
        14 001023   000012 237000 15                 LDAQ    10
        14 001024   200024 757100                    STAQ    NEWPLUG2$+7,,AUTO
        14 001025   200020 630500                    EPPR0   NEWPLUG2$+3,,AUTO
        14 001026   200023 450500                    STP0    NEWPLUG2$+6,,AUTO
        14 001027   000011 236000 15                 LDQ     9
        14 001030   200022 756100                    STQ     NEWPLUG2$+5,,AUTO
        14 001031   200022 630500                    EPPR0   NEWPLUG2$+5,,AUTO
        14 001032   000006 631400 15                 EPPR1   6
        14 001033   000000 701000 xent               TSX1    Z8EE$CREATE_DUMMY_TOKEN
        14 001034   000000 011000                    NOP     0

             17962    6                                    BINBIT(O1COM.CORRECTION.SYM(O1COM.CORRECTION.INDX)
             17962                                              , 36),
             17963    6                                     O1COM.ERRLINE,
             17964    6                                     O1COM.ERRCOL);
             17966    6                 O1COM.CORRECTION.LEN   = O1COM.CORRECTION.LEN - 1;

  17966 14 001035   000001 336007                    LCQ     1,DL
        14 001036   000152 056000 xsym               ASQ     O1COM+106

             17967    6                 O1COM.CORRECTION.INDX  = O1COM.CORRECTION.INDX + 1;

  17967 14 001037   000153 054000 xsym               AOS     O1COM+107

             17968    6                 O1COM.LA_GET           = O1COM.LA_PUT;

  17968 14 001040   000132 235000 xsym               LDA     O1COM+90
        14 001041   000133 755000 xsym               STA     O1COM+91

             17969    6                 O1COM.LA_CNT           = 1;
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:57   

  17969 14 001042   000001 235007                    LDA     1,DL
        14 001043   000131 755000 xsym               STA     O1COM+89

             17970    6               END;

  17970 14 001044   001054 710000 14                 TRA     s:18021

             17971    5             ELSE
             17972    6               DO;  /* HAVE EXHAUSTED ALL ERROR CORRECTION */

             17973    6                 O1COM.CORRECTION.INDX  = 0;

  17973 14 001045   000153 450000 xsym               STZ     O1COM+107

             17974    6                 O1COM.LA_CNT           = O1COM.ERR_LA_CNT;

  17974 14 001046   000142 235000 xsym               LDA     O1COM+98
        14 001047   000131 755000 xsym               STA     O1COM+89

             17975    6                 O1COM.LA_PUT           = O1COM.ERR_LA_PUT;

  17975 14 001050   000141 235000 xsym               LDA     O1COM+97
        14 001051   000132 755000 xsym               STA     O1COM+90

             17976    6                 O1COM.LA_GET           = O1COM.ERR_LA_GET;

  17976 14 001052   000140 235000 xsym               LDA     O1COM+96
        14 001053   000133 755000 xsym               STA     O1COM+91

             17977    6               END;

             17978            %ELSE;
             17979 C            IF O1COM.LA_CNT < 1 THEN  /* NEED TOKENS */
             17980 C              IF NOT PANIC_MODE_IN_PROGRESS THEN
             17981 C                DO;
             17982 C                  %CALL_SCANNER;
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:58   
             17983 C                  O1COM.LA_PUT = O1COM.LA_STK.LINK(O1COM.LA_PUT);
             17984 C                  O1COM.LA_CNT = 1;
             17985 C                END;
             17986 C              ELSE
             17987 C                DO;  /* GET VALID SYMBOL FOR PANIC SHIFT */
             17988 C                  O1COM.LA_CNT = O1COM.ERR_LA_CNT;
             17989 C                  O1COM.LA_PUT = O1COM.ERR_LA_PUT;
             17990 C                  O1COM.LA_GET = O1COM.ERR_LA_GET;
             17991 C      DO WHILE ACTION_ROW.CHECK(ACTION_COL.BASE(O1COM.STATE) + O1COM.LA_STK.SYMBOL(O1COM.
             17991 C      LA_GET)) ~= O1COM.STATE;
             17992 C                    IF O1COM.LA_STK.SYMBOL(O1COM.LA_GET) = %TERM_EOF_SYM THEN
             17993 C                      DO;
             17994 C                        %RESET_ERROR_LOC;
             17995 C                        CALL ERROR(%E$UNEXP_EOF_DURING_RECOVERY);
             17996 C                        %TERMINATE;
             17997 C                      END;
             17998 C                    O1COM.LA_CNT = O1COM.LA_CNT - 1;
             17999 C                    O1COM.LA_GET = O1COM.LA_STK.LINK(O1COM.LA_GET);
             18000 C                    IF O1COM.LA_CNT < 1 THEN
             18001 C                      DO;
             18002 C                        %CALL_SCANNER;
             18003 C                        O1COM.LA_PUT = O1COM.LA_STK.LINK(O1COM.LA_PUT);
             18004 C                        O1COM.LA_CNT = 1;
             18005 C                      END;
             18006 C                  END;
             18007 C                  PANIC_MODE_IN_PROGRESS = '0'B;
             18008 C                  %RESET_ERROR_LOC;
             18009 C                  CALL ERROR (%E$PARSING_RESUMED);
             18010 C                END;
             18011              %ENDIF;
             18012    5     END;

             18014                    %PARSE_STACK_OVERFLOW;
             18015               /* The parse stack has overflowed, so abort the compilation.
             18016               */
             18017    5   DO;

PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:59   
             18018        %RESET_ERROR_LOC;
             18019          /* RESET THE LINE & COLUMN TO THE POINT OF ERROR */
             18020    6     DO;

             18021    6        O1COM.ERRLINE = O1COM.LA_STK.LINE(O1COM.LA_GET);

  18021 14 001054   000133 235000 xsym               LDA     O1COM+91
        14 001055   000003 735000                    ALS     3
        14 001056   000244 235005 xsym               LDA     O1COM+164,AL
        14 001057   000136 755000 xsym               STA     O1COM+94

             18022    6        O1COM.ERRCOL  = O1COM.LA_STK.COLUMN(O1COM.LA_GET);

  18022 14 001060   000133 236000 xsym               LDQ     O1COM+91
        14 001061   000003 736000                    QLS     3
        14 001062   000245 235006 xsym               LDA     O1COM+165,QL
        14 001063   000137 755000 xsym               STA     O1COM+95

             18023    6     END;

             18025    5     CALL ERROR (%E$PARSE_STACK_OVERFLOW_ERROR);

  18025 14 001064   000000 236000 15                 LDQ     0
        14 001065   000000 235000 15                 LDA     0
        14 001066   200012 757100                    STAQ    @ERROR_TYPE+1,,AUTO
        14 001067   000017 236000 15                 LDQ     15
        14 001070   200011 756100                    STQ     INDX+2,,AUTO
        14 001071   000003 701000 14                 TSX1    ERROR
        14 001072   000000 011000                    NOP     0

             18026          %TERMINATE;
             18027          /* Insert code for abnormal termination of parser */
             18028    5     CALL Z9AT$TERMINATOR;

  18028 14 001073   000010 631400 15                 EPPR1   8
        14 001074   000000 701000 xent               TSX1    Z9AT$TERMINATOR
        14 001075   000000 011000                    NOP     0
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:60   

             18030    5   END;

             18032    4             END;

  18032 14 001076   000321 710000 14                 TRA     s:17566

             18033    3           ELSE
             18034    4             DO;

             18035    4               O1COM.PARSE_STACK_IDX               = O1COM.PARSE_STACK_IDX + 1;

  18035 14 001077   000135 054000 xsym               AOS     O1COM+93

             18036    4               O1COM.PARSE_STACK(O1COM.PARSE_STACK_IDX)  = O1COM.STATE;

  18036 14 001100   000135 723000 xsym               LXL3    O1COM+93
        14 001101   001364 756013 xsym               STQ     O1COM+756,X3

             18037    4             END;

             18038    3         END;

  18038 14 001102   000321 710000 14                 TRA     s:17566

      188    18040    2     ELSE
      189    18041    2       IF ACTION > 0 THEN

  18041 14 001103   001410 604400 14                 TMOZ    s:18245

      190    18042              %SHIFT;
             18043               /* Shift the symbol and go to the next state.
             18044                  The symbol is always a terminal, and it is placed on the token
             18045                  stack (LX_STK) for reference by a semantics action ala Dave
             18046                  Ward's parser.
             18047               */
             18048    3       DO;
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:61   

             18049              %IF LOCALLY_LEAST_COST_RECOVERY;
             18050                %CLEAR_SEMANTIC_ACTIONS;
             18051               /* We are about to do a shift and know that no error has
             18052                  occurred;  therefore, do all semantic actions which have
             18053                  been accumulated.
             18054               */
             18055    4   DO;

             18056    4     O1COM.ALT_LX_TOP    = O1COM.LX_TOP;

  18056 14 001104   000151 235000 xsym               LDA     O1COM+105
        14 001105   000150 755000 xsym               STA     O1COM+104

             18057    4     O1COM.RED_STACK_TOP = O1COM.RED_STACK_TOP - 2;

  18057 14 001106   000002 336007                    LCQ     2,DL
        14 001107   000146 056000 xsym               ASQ     O1COM+102

             18058    5     DO INDX = 0 TO O1COM.RED_STACK_TOP  BY 2;

  18058 14 001110   000000 221003                    LDX1    0,DU
        14 001111   200007 741100                    STX1    INDX,,AUTO
        14 001112   001203 710000 14                 TRA     s:18098+3

             18059    5    O1COM.LX_TOP = O1COM.RED_STACK(INDX + 1);

  18059 14 001113   200007 220100                    LDX0    INDX,,AUTO
        14 001114   011227 235010 xsym               LDA     O1COM+4759,X0
        14 001115   000151 755000 xsym               STA     O1COM+105

             18060    5       O1COM.REDUCTION = O1COM.RED_STACK(INDX);

  18060 14 001116   011226 235010 xsym               LDA     O1COM+4758,X0
        14 001117   000134 755000 xsym               STA     O1COM+92

             18061    5       IF PRODR.SEMANTIC(O1COM.REDUCTION) > 0 THEN
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:62   

  18061 14 001120   000001 735000                    ALS     1
        14 001121   000001 235005 xsym               LDA     DD_PRODR+1,AL
        14 001122   001132 600000 14                 TZE     s:18070

             18062    6         DO;

             18063                %CALL_SEMANTICS(A="BINBIT(PRODR.SEMANTIC(O1COM.REDUCTION),36)");
             18064          /* Call the semantics routine with the designated action.
             18065          */
             18066    6     SEMANTIC_ACTION = BITBIN(A);

  18066 14 001123   000134 235000 xsym               LDA     O1COM+92
        14 001124   000001 735000                    ALS     1
        14 001125   000001 235005 xsym               LDA     DD_PRODR+1,AL
        14 001126   000000 755000 13                 STA     SEMANTIC_ACTION

             18067    6     CALL Z8EM$SEMANTICS_DATA_DIV;

  18067 14 001127   000010 631400 15                 EPPR1   8
        14 001130   000000 701000 xent               TSX1    Z8EM$SEMANTICS_DATA_DIV
        14 001131   000000 011000                    NOP     0

             18069    6         END;

             18070    5       IF PRODR.POPSTACK(O1COM.REDUCTION) = 0 THEN

  18070 14 001132   000134 235000 xsym               LDA     O1COM+92
        14 001133   000001 735000                    ALS     1
        14 001134   000000 720005 xsym               LXL0    DD_PRODR,AL
        14 001135   001200 601000 14                 TNZ     s:18098

             18071    6         DO;

             18072    6           O1COM.LX_TOP = O1COM.LX_TOP + 1;

  18072 14 001136   000151 054000 xsym               AOS     O1COM+105
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:63   

             18073                %CREATE_EMPTY_TERMINAL_ON_LX_STK;
             18074    7     DO;

             18075            /* Fill in LX_STK(LX_TOP) with an empty terminal value */
             18076            %INIT_LX_TERMINAL ( @POINTER = "ADDR(O1COM.LX_STK(O1COM.LX_TOP))",
             18077                                @SYMBOL = %EMPTY);
             18078    8     DO;

             18079    8       @POINTER -> LX_TERMINAL.ID     = %LX_TERMINAL;

  18079 14 001137   000151 236000 xsym               LDQ     O1COM+105
        14 001140   000003 736000                    QLS     3
        14 001141   000000 221003                    LDX1    0,DU
        14 001142   014017 741006 xsym               STX1    O1COM+6159,QL

             18080    8       @POINTER -> LX_TERMINAL.B      = '0'B;

  18080 14 001143   000151 235000 xsym               LDA     O1COM+105
        14 001144   000003 735000                    ALS     3
        14 001145   000000 220003                    LDX0    0,DU
        14 001146   014017 440005 xsym               SXL0    O1COM+6159,AL

             18081            %IF (TEXTCHAR(@BERROR) ~= '');
             18082 C             @POINTER -> LX_TERMINAL.B.ERROR = @BERROR;
             18083            %ENDIF;
             18084    8       @POINTER -> LX_TERMINAL.TYPE   = @TYPE %;

  18084 14 001147   000151 235000 xsym               LDA     O1COM+105
        14 001150   000003 735000                    ALS     3
        14 001151   000015 236007                    LDQ     13,DL
        14 001152   014023 756005 xsym               STQ     O1COM+6163,AL

             18085            %IF (TEXTCHAR(@LA_ITEM) = '');
             18086    8         @POINTER -> LX_TERMINAL.LINK   = @LINK;

  18086 14 001153   000151 235000 xsym               LDA     O1COM+105
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:64   
        14 001154   000003 735000                    ALS     3
        14 001155   000000 236000 15                 LDQ     0
        14 001156   014026 756005 xsym               STQ     O1COM+6166,AL

             18087            %ENDIF;
             18088    8       @POINTER -> LX_TERMINAL.ST$    = @ST$ ;

  18088 14 001157   000151 235000 xsym               LDA     O1COM+105
        14 001160   000003 735000                    ALS     3
        14 001161   014020 756005 xsym               STQ     O1COM+6160,AL

             18089    8       @POINTER -> LX_TERMINAL.SYMBOL = @SYMBOL %;

  18089 14 001162   000151 235000 xsym               LDA     O1COM+105
        14 001163   000003 735000                    ALS     3
        14 001164   014022 450005 xsym               STZ     O1COM+6162,AL

             18090    8       @POINTER -> LX_TERMINAL.DNT$   = @DNT$;

  18090 14 001165   000151 235000 xsym               LDA     O1COM+105
        14 001166   000003 735000                    ALS     3
        14 001167   014021 756005 xsym               STQ     O1COM+6161,AL

             18091    8       @POINTER -> LX_TERMINAL.LINE   = @LINE;

  18091 14 001170   000151 235000 xsym               LDA     O1COM+105
        14 001171   000003 735000                    ALS     3
        14 001172   000133 236000 xsym               LDQ     COMCOM+91
        14 001173   014024 756005 xsym               STQ     O1COM+6164,AL

             18092    8       @POINTER -> LX_TERMINAL.COLUMN = @COLUMN;

  18092 14 001174   000151 235000 xsym               LDA     O1COM+105
        14 001175   000003 735000                    ALS     3
        14 001176   000134 236000 xsym               LDQ     COMCOM+92
        14 001177   014025 756005 xsym               STQ     O1COM+6165,AL

PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:65   
             18093    8     END;

             18095    7     END;

             18097    6         END;

             18098    5     END;

  18098 14 001200   200007 220100                    LDX0    INDX,,AUTO
        14 001201   000002 621010                    EAX1    2,X0
        14 001202   200007 741100                    STX1    INDX,,AUTO
        14 001203   200007 236100                    LDQ     INDX,,AUTO
        14 001204   000022 732000                    QRS     18
        14 001205   000146 116000 xsym               CMPQ    O1COM+102
        14 001206   001113 604400 14                 TMOZ    s:18059

             18099    4     O1COM.RED_STACK_TOP  = 0;

  18099 14 001207   000146 450000 xsym               STZ     O1COM+102

             18100    4     O1COM.LX_TOP         = O1COM.ALT_LX_TOP;

  18100 14 001210   000150 235000 xsym               LDA     O1COM+104
        14 001211   000151 755000 xsym               STA     O1COM+105

             18101    4     O1COM.IED_FLAG       = '0'B;

  18101 14 001212   000147 450000 xsym               STZ     O1COM+103

             18102    4   END;

             18104              %ENDIF;
             18105              %AT_LEAST_ONE_TOKEN;
             18106               /* Make sure at least one token is available to
             18107                   a shift operation.
             18108               */
             18109    4     DO;
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:66   

             18110            %IF LOCALLY_LEAST_COST_RECOVERY;
             18111    4         IF O1COM.LA_CNT < 1 THEN  /* NEED TOKENS */

  18111 14 001213   000131 235000 xsym               LDA     O1COM+89
        14 001214   001276 605400 14                 TPNZ    s:18180

             18112    4           IF O1COM.CORRECTION.LEN = 0 AND O1COM.CORRECTION.INDX = 0 THEN

  18112 14 001215   000152 235000 xsym               LDA     O1COM+106
        14 001216   001233 601000 14                 TNZ     s:18124
        14 001217   000153 235000 xsym               LDA     O1COM+107
        14 001220   001233 601000 14                 TNZ     s:18124

             18113    5             DO;

             18114                    %CALL_SCANNER;
             18115          /* Call the scanner to obtain the next token.  The token should be
             18116             placed in LA_STK(LA_PUT).
             18117          */
             18118    5     CALL Z8EL$LEX;

  18118 14 001221   000010 631400 15                 EPPR1   8
        14 001222   000000 701000 xent               TSX1    Z8EL$LEX
        14 001223   000000 011000                    NOP     0

             18120    5               O1COM.LA_PUT = O1COM.LA_STK.LINK(O1COM.LA_PUT);

  18120 14 001224   000132 235000 xsym               LDA     O1COM+90
        14 001225   000003 735000                    ALS     3
        14 001226   000246 235005 xsym               LDA     O1COM+166,AL
        14 001227   000132 755000 xsym               STA     O1COM+90

             18121    5               O1COM.LA_CNT = 1;

  18121 14 001230   000001 236007                    LDQ     1,DL
        14 001231   000131 756000 xsym               STQ     O1COM+89
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:67   

             18122    5             END;

  18122 14 001232   001276 710000 14                 TRA     s:18180

             18123    4           ELSE
             18124    4             IF O1COM.CORRECTION.LEN > 0 THEN  /* NEED TO INSERT AN ERROR TOKEN */

  18124 14 001233   000152 235000 xsym               LDA     O1COM+106
        14 001234   001267 604400 14                 TMOZ    s:18139

             18125    5               DO;

             18126                      %CREATE_DUMMY_TOKEN;
             18127    5       CALL Z8EE$CREATE_DUMMY_TOKEN( O1COM.LA_PUT,

  18127 14 001235   000153 235000 xsym               LDA     O1COM+107
        14 001236   000001 735000                    ALS     1
        14 001237   000100 100405                    MLR     fill='000'O
        14 001240   000154 000002 xsym               ADSC9   O1COM+108,A              cn=0,n=2
        14 001241   200016 000004                    ADSC9   NEWPLUG2$+1,,AUTO        cn=0,n=4
        14 001242   200016 236100                    LDQ     NEWPLUG2$+1,,AUTO
        14 001243   000022 732000                    QRS     18
        14 001244   200020 756100                    STQ     NEWPLUG2$+3,,AUTO
        14 001245   000012 237000 15                 LDAQ    10
        14 001246   200024 757100                    STAQ    NEWPLUG2$+7,,AUTO
        14 001247   200020 630500                    EPPR0   NEWPLUG2$+3,,AUTO
        14 001250   200023 450500                    STP0    NEWPLUG2$+6,,AUTO
        14 001251   000011 236000 15                 LDQ     9
        14 001252   200022 756100                    STQ     NEWPLUG2$+5,,AUTO
        14 001253   200022 630500                    EPPR0   NEWPLUG2$+5,,AUTO
        14 001254   000006 631400 15                 EPPR1   6
        14 001255   000000 701000 xent               TSX1    Z8EE$CREATE_DUMMY_TOKEN
        14 001256   000000 011000                    NOP     0

             18128    5                                    BINBIT(O1COM.CORRECTION.SYM(O1COM.CORRECTION.INDX)
             18128                                              , 36),
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:68   
             18129    5                                     O1COM.ERRLINE,
             18130    5                                     O1COM.ERRCOL);
             18132    5                 O1COM.CORRECTION.LEN   = O1COM.CORRECTION.LEN - 1;

  18132 14 001257   000001 336007                    LCQ     1,DL
        14 001260   000152 056000 xsym               ASQ     O1COM+106

             18133    5                 O1COM.CORRECTION.INDX  = O1COM.CORRECTION.INDX + 1;

  18133 14 001261   000153 054000 xsym               AOS     O1COM+107

             18134    5                 O1COM.LA_GET           = O1COM.LA_PUT;

  18134 14 001262   000132 235000 xsym               LDA     O1COM+90
        14 001263   000133 755000 xsym               STA     O1COM+91

             18135    5                 O1COM.LA_CNT           = 1;

  18135 14 001264   000001 235007                    LDA     1,DL
        14 001265   000131 755000 xsym               STA     O1COM+89

             18136    5               END;

  18136 14 001266   001276 710000 14                 TRA     s:18180

             18137    4             ELSE
             18138    5               DO;  /* HAVE EXHAUSTED ALL ERROR CORRECTION */

             18139    5                 O1COM.CORRECTION.INDX  = 0;

  18139 14 001267   000153 450000 xsym               STZ     O1COM+107

             18140    5                 O1COM.LA_CNT           = O1COM.ERR_LA_CNT;

  18140 14 001270   000142 235000 xsym               LDA     O1COM+98
        14 001271   000131 755000 xsym               STA     O1COM+89

PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:69   
             18141    5                 O1COM.LA_PUT           = O1COM.ERR_LA_PUT;

  18141 14 001272   000141 235000 xsym               LDA     O1COM+97
        14 001273   000132 755000 xsym               STA     O1COM+90

             18142    5                 O1COM.LA_GET           = O1COM.ERR_LA_GET;

  18142 14 001274   000140 235000 xsym               LDA     O1COM+96
        14 001275   000133 755000 xsym               STA     O1COM+91

             18143    5               END;

             18144            %ELSE;
             18145 C            IF O1COM.LA_CNT < 1 THEN  /* NEED TOKENS */
             18146 C              IF NOT PANIC_MODE_IN_PROGRESS THEN
             18147 C                DO;
             18148 C                  %CALL_SCANNER;
             18149 C                  O1COM.LA_PUT = O1COM.LA_STK.LINK(O1COM.LA_PUT);
             18150 C                  O1COM.LA_CNT = 1;
             18151 C                END;
             18152 C              ELSE
             18153 C                DO;  /* GET VALID SYMBOL FOR PANIC SHIFT */
             18154 C                  O1COM.LA_CNT = O1COM.ERR_LA_CNT;
             18155 C                  O1COM.LA_PUT = O1COM.ERR_LA_PUT;
             18156 C                  O1COM.LA_GET = O1COM.ERR_LA_GET;
             18157 C      DO WHILE ACTION_ROW.CHECK(ACTION_COL.BASE(O1COM.STATE) + O1COM.LA_STK.SYMBOL(O1COM.
             18157 C      LA_GET)) ~= O1COM.STATE;
             18158 C                    IF O1COM.LA_STK.SYMBOL(O1COM.LA_GET) = %TERM_EOF_SYM THEN
             18159 C                      DO;
             18160 C                        %RESET_ERROR_LOC;
             18161 C                        CALL ERROR(%E$UNEXP_EOF_DURING_RECOVERY);
             18162 C                        %TERMINATE;
             18163 C                      END;
             18164 C                    O1COM.LA_CNT = O1COM.LA_CNT - 1;
             18165 C                    O1COM.LA_GET = O1COM.LA_STK.LINK(O1COM.LA_GET);
             18166 C                    IF O1COM.LA_CNT < 1 THEN
             18167 C                      DO;
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:70   
             18168 C                        %CALL_SCANNER;
             18169 C                        O1COM.LA_PUT = O1COM.LA_STK.LINK(O1COM.LA_PUT);
             18170 C                        O1COM.LA_CNT = 1;
             18171 C                      END;
             18172 C                  END;
             18173 C                  PANIC_MODE_IN_PROGRESS = '0'B;
             18174 C                  %RESET_ERROR_LOC;
             18175 C                  CALL ERROR (%E$PARSING_RESUMED);
             18176 C                END;
             18177              %ENDIF;
             18178    4     END;

             18180    3         IF O1COM.LX_TOP = %LX_MAX THEN

  18180 14 001276   000151 235000 xsym               LDA     O1COM+105
        14 001277   003720 115007                    CMPA    2000,DL
        14 001300   001322 601000 14                 TNZ     s:18201

             18181                %SEMANTIC_TOKEN_STACK_OVERFLOW;
             18182               /* The semantic token stack has overflowed, so abort
             18183                  the compilation.
             18184               */
             18185    4   DO;

             18186        %RESET_ERROR_LOC;
             18187          /* RESET THE LINE & COLUMN TO THE POINT OF ERROR */
             18188    5     DO;

             18189    5        O1COM.ERRLINE = O1COM.LA_STK.LINE(O1COM.LA_GET);

  18189 14 001301   000133 236000 xsym               LDQ     O1COM+91
        14 001302   000003 736000                    QLS     3
        14 001303   000244 235006 xsym               LDA     O1COM+164,QL
        14 001304   000136 755000 xsym               STA     O1COM+94

             18190    5        O1COM.ERRCOL  = O1COM.LA_STK.COLUMN(O1COM.LA_GET);

PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:71   
  18190 14 001305   000245 235006 xsym               LDA     O1COM+165,QL
        14 001306   000137 755000 xsym               STA     O1COM+95

             18191    5     END;

             18193    4     CALL ERROR (%E$SEMANTIC_TOKEN_STACK_OVERFLW);

  18193 14 001307   000000 236000 15                 LDQ     0
        14 001310   000000 235000 15                 LDA     0
        14 001311   200012 757100                    STAQ    @ERROR_TYPE+1,,AUTO
        14 001312   000021 236000 15                 LDQ     17
        14 001313   200011 756100                    STQ     INDX+2,,AUTO
        14 001314   000003 701000 14                 TSX1    ERROR
        14 001315   000000 011000                    NOP     0

             18194          %TERMINATE;
             18195          /* Insert code for abnormal termination of parser */
             18196    4     CALL Z9AT$TERMINATOR;

  18196 14 001316   000010 631400 15                 EPPR1   8
        14 001317   000000 701000 xent               TSX1    Z9AT$TERMINATOR
        14 001320   000000 011000                    NOP     0

             18198    4     RETURN;

  18198 14 001321   000000 702200 xent               TSX2  ! X66_ARET

             18199    4   END;
             18201    3      O1COM.LX_TOP      = O1COM.LX_TOP + 1;

  18201 14 001322   000151 054000 xsym               AOS     O1COM+105

             18202    3         O1COM.LX_STK(O1COM.LX_TOP) = O1COM.LA_STK(O1COM.LA_GET);

  18202 14 001323   000133 235000 xsym               LDA     O1COM+91
        14 001324   000005 735000                    ALS     5
        14 001325   000151 236000 xsym               LDQ     O1COM+105
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:72   
        14 001326   000005 736000                    QLS     5
        14 001327   000006 100405                    MLR     fill='000'O
        14 001330   000237 000040 xsym               ADSC9   O1COM+159,A              cn=0,n=32
        14 001331   014017 000040 xsym               ADSC9   O1COM+6159,Q             cn=0,n=32

             18203    3         O1COM.LX_STK.LINK(O1COM.LX_TOP) = ADDR(NIL);

  18203 14 001332   000151 235000 xsym               LDA     O1COM+105
        14 001333   000003 735000                    ALS     3
        14 001334   000000 236000 15                 LDQ     0
        14 001335   014026 756005 xsym               STQ     O1COM+6166,AL

             18204              %LAST_SHIFTED_LOC;
             18205          /* Set the location of the last shifted token which differs
             18206             from the location of the last token scanned when error
             18207             correction is done.
             18208          */
             18209    4     DO;

             18210    4       COMCOM.CURRENT.LINE = O1COM.LA_STK.LINE(O1COM.LA_GET);

  18210 14 001336   000133 235000 xsym               LDA     O1COM+91
        14 001337   000003 735000                    ALS     3
        14 001340   000244 235005 xsym               LDA     O1COM+164,AL
        14 001341   000133 755000 xsym               STA     COMCOM+91

             18211    4       COMCOM.CURRENT.COLUMN = O1COM.LA_STK.COLUMN(O1COM.LA_GET);

  18211 14 001342   000133 235000 xsym               LDA     O1COM+91
        14 001343   000003 735000                    ALS     3
        14 001344   000245 235005 xsym               LDA     O1COM+165,AL
        14 001345   000134 755000 xsym               STA     COMCOM+92

             18212    4     END;

             18214    3         IF O1COM.PARSE_STACK_IDX = %PARSE_STACK_MAX THEN

PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:73   
  18214 14 001346   000135 235000 xsym               LDA     O1COM+93
        14 001347   003720 115007                    CMPA    2000,DL
        14 001350   001373 601000 14                 TNZ     s:18235

             18215                %PARSE_STACK_OVERFLOW;
             18216               /* The parse stack has overflowed, so abort the compilation.
             18217               */
             18218    4   DO;

             18219        %RESET_ERROR_LOC;
             18220          /* RESET THE LINE & COLUMN TO THE POINT OF ERROR */
             18221    5     DO;

             18222    5        O1COM.ERRLINE = O1COM.LA_STK.LINE(O1COM.LA_GET);

  18222 14 001351   000133 235000 xsym               LDA     O1COM+91
        14 001352   000003 735000                    ALS     3
        14 001353   000244 235005 xsym               LDA     O1COM+164,AL
        14 001354   000136 755000 xsym               STA     O1COM+94

             18223    5        O1COM.ERRCOL  = O1COM.LA_STK.COLUMN(O1COM.LA_GET);

  18223 14 001355   000133 235000 xsym               LDA     O1COM+91
        14 001356   000003 735000                    ALS     3
        14 001357   000245 235005 xsym               LDA     O1COM+165,AL
        14 001360   000137 755000 xsym               STA     O1COM+95

             18224    5     END;

             18226    4     CALL ERROR (%E$PARSE_STACK_OVERFLOW_ERROR);

  18226 14 001361   000000 235000 15                 LDA     0
        14 001362   200012 757100                    STAQ    @ERROR_TYPE+1,,AUTO
        14 001363   000017 236000 15                 LDQ     15
        14 001364   200011 756100                    STQ     INDX+2,,AUTO
        14 001365   000003 701000 14                 TSX1    ERROR
        14 001366   000000 011000                    NOP     0
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:74   

             18227          %TERMINATE;
             18228          /* Insert code for abnormal termination of parser */
             18229    4     CALL Z9AT$TERMINATOR;

  18229 14 001367   000010 631400 15                 EPPR1   8
        14 001370   000000 701000 xent               TSX1    Z9AT$TERMINATOR
        14 001371   000000 011000                    NOP     0

             18231    4   END;

  18231 14 001372   000321 710000 14                 TRA     s:17566

             18233    3         ELSE
             18234    4           DO;

             18235    4             O1COM.LA_CNT         = O1COM.LA_CNT -1 ;

  18235 14 001373   000001 336007                    LCQ     1,DL
        14 001374   000131 056000 xsym               ASQ     O1COM+89

             18236    4             O1COM.LA_GET         = O1COM.LA_STK.LINK(O1COM.LA_GET);

  18236 14 001375   000133 235000 xsym               LDA     O1COM+91
        14 001376   000003 735000                    ALS     3
        14 001377   000246 235005 xsym               LDA     O1COM+166,AL
        14 001400   000133 755000 xsym               STA     O1COM+91

             18237    4             O1COM.STATE                         = ACTION;

  18237 14 001401   200006 235100                    LDA     ACTION,,AUTO
        14 001402   000022 731000                    ARS     18
        14 001403   000130 755000 xsym               STA     O1COM+88

             18238    4             O1COM.PARSE_STACK_IDX               = O1COM.PARSE_STACK_IDX + 1;

  18238 14 001404   000135 054000 xsym               AOS     O1COM+93
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:75   

             18239    4             O1COM.PARSE_STACK(O1COM.PARSE_STACK_IDX)  = O1COM.STATE;

  18239 14 001405   000135 720000 xsym               LXL0    O1COM+93
        14 001406   001364 755010 xsym               STA     O1COM+756,X0

             18240    4           END;

             18241    3       END;

  18241 14 001407   000321 710000 14                 TRA     s:17566

      191    18243    2       ELSE
      192    18244    3         DO;  /* RECOVERY */

      193    18245    3           O1COM.ERR_RECOVERY_IN_PROGRESS = '1'B;

  18245 14 001410   400000 236003                    LDQ     -131072,DU
        14 001411   000143 756000 xsym               STQ     O1COM+99

      194    18246    3           O1COM.PARSE_ERROR_COUNT = O1COM.PARSE_ERROR_COUNT + 1;

  18246 14 001412   000144 054000 xsym               AOS     O1COM+100

      195    18247                %RESTORE_IED_STATE;
             18248        /* Restore the parse state to that before
             18249           the last lookahead was done;  This represents
             18250           the immediate error detection state.
             18251        */
             18252    4   DO;

             18253    4     IF O1COM.IED_FLAG THEN

  18253 14 001413   000147 234000 xsym               SZN     O1COM+103
        14 001414   001436 605000 14                 TPL     s:18266

             18254    5       DO;
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:76   

             18255    5         O1COM.PARSE_STACK_IDX  = O1COM.ALT_PARSE_STACK_IDX;

  18255 14 001415   000145 235000 xsym               LDA     O1COM+101
        14 001416   000135 755000 xsym               STA     O1COM+93

             18256    5         PARSE_STACK_IDX_IN_CHARS = O1COM.ALT_PARSE_STACK_IDX * 4 + 4;

  18256 14 001417   000002 735000                    ALS     2
        14 001420   000004 035007                    ADLA    4,DL
        14 001421   200003 755100                    STA     PARSE_STACK_IDX_IN_CHARS,,AUTO

             18257    5         ADDR(O1COM.PARSE_STACK) -> PARSE_STACK_USED

  18257 14 001422   000000 621005                    EAX1    0,AL
        14 001423   200003 723100                    LXL3    PARSE_STACK_IDX_IN_CHARS,,AUTO
        14 001424   040040 100440                    MLR     fill='040'O
        14 001425   005305 000011 xsym               ADSC9   O1COM+2757               cn=0,n=*X1
        14 001426   001364 000013 xsym               ADSC9   O1COM+756                cn=0,n=*X3

             18258    5               = ADDR(O1COM.ALT_PARSE_STACK) -> PARSE_STACK_USED;
             18259    5      O1COM.LX_TOP        = O1COM.ALT_LX_TOP;

  18259 14 001427   000150 235000 xsym               LDA     O1COM+104
        14 001430   000151 755000 xsym               STA     O1COM+105

             18260    5         O1COM.STATE            = O1COM.PARSE_STACK(O1COM.PARSE_STACK_IDX);

  18260 14 001431   000135 721000 xsym               LXL1    O1COM+93
        14 001432   001364 235011 xsym               LDA     O1COM+756,X1
        14 001433   000130 755000 xsym               STA     O1COM+88

             18261    5         O1COM.IED_FLAG         = '0'B;

  18261 14 001434   000147 450000 xsym               STZ     O1COM+103

             18262    5         O1COM.RED_STACK_TOP    = 0;
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:77   

  18262 14 001435   000146 450000 xsym               STZ     O1COM+102

             18263    5       END;

             18264    4   END;

      196    18266    3           PARSER_OVERLAY_RETURN_CODE = %PARSE_ERROR_RETURN;

  18266 14 001436   000002 235007                    LDA     2,DL
        14 001437   000000 755000 7                  STA     PARSER_OVERLAY_RETURN_CODE

      197    18267    3           UNWIND TO OVERLAY_COORDINATION_VECTOR;

  18267 14 001440   000000 237200 6                  LDAQ  ! OVERLAY_COORDINATION_VECTOR
        14 001441   000000 700200 xent               TSX0  ! X66_AUNWIND
        14 001442   000000 000200                    ZERO    0,128
      198    18268    3        END;
      199    18269
      200    18270    2   END; /* DO WHILE */
      201    18271
      202    18272    1   END Z8E2$PARSE_DD;

PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:78   
--  Include file information  --

   Z8E_P_STATS.:Z8A6TOU  is referenced.
   Z8A_P_MACROS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_P_STATE.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_WINDOW.:Z8A6TOU  is referenced.
   Z8A_TYPES.:Z8A6TOU  is referenced.
   Z8E_O1COM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_LEX_SYMB.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_STACKS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_HEAP.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_P_OLAY.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_DDPDA_S.:Z8A6TOU  is referenced.
   Z8E_DD_SUBS.:Z8A6TOU  is referenced.
   Z8A_DNT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ERR_NUMS.:Z8A6TOU  is referenced.
   CP_6_SUBS.:LIB_E04  is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
   Z8A_SYS_FILE.:Z8A6TOU  is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8E2$PARSE_DD.
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:79   

 **** Variables and constants ****

  ****  Section 000 LblCom ITERATION

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 ITERATION

  ****  Section 002 LblCom DNT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 DNT$

  ****  Section 003 LblCom DNT_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)   r     1 DNT_

  ****  Section 004 LblCom DNT_BUCKET_NUMBER

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 DNT_BUCKET_NUMBER

  ****  Section 005 LblCom DNT_OF_1$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 DNT_OF_1$

PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:80   
  ****  Section 006 LblCom OVERLAY_COORDINATION_VECTOR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d REMB        r     1 OVERLAY_COORDINATION_VECTOR

  ****  Section 007 LblCom PARSER_OVERLAY_RETURN_CODE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 PARSER_OVERLAY_RETURN_CODE

  ****  Section 008 LblCom HEAP$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 HEAP$

  ****  Section 009 LblCom LEX_SYMBOL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)  r     1 LEX_SYMBOL                 0-0-0/w STRC(3240)        1 LEX_SYMBOL_WORDS

  ****  Section 010 LblCom CURRENT_LEX_SYMBOL$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 CURRENT_LEX_SYMBOL$

  ****  Section 011 LblCom TEMP_LEX_SYMBOL

PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:81   
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)        1 TEMP_LEX_SYMBOL

  ****  Section 012 LblCom TEMP_LEX_SYMBOL2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3240)        1 TEMP_LEX_SYMBOL2

  ****  Section 013 LblCom SEMANTIC_ACTION

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 SEMANTIC_ACTION

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    11-0-0/w PTR         r     1 @ERROR_TYPE               12-0-0/w PTR         r     1 @PLUG1$
    13-0-0/w PTR         r     1 @PLUG2$                    6-0-0/w SBIN(18)    r     1 ACTION
    *0-0-0/w SBIN        r     1 ERROR_TYPE                 7-0-0/w SBIN(18)    r     1 INDX
    14-0-0/w PTR         r     1 NEWPLUG1$                 15-0-0/w PTR         r     1 NEWPLUG2$
     5-0-0/w SBIN(18)    r     1 NT
     3-0-0/w SBIN        r     1 PARSE_STACK_IDX_IN_CHARS
    *0-0-0/w PTR         r     1 PLUG1$                    *0-0-0/w PTR         r     1 PLUG2$
     4-0-0/w SBIN(18)          1 PSI

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:82   

     0-0-0/d STRC(13248) r     1 COMCOM
     0-0-0/b STRC        r     1 DD_ACTION_COL(0:1149)
     0-0-0/b STRC        r     1 DD_ACTION_ROW(0:3048)
     0-0-0/b STRC        r     1 DD_GOTO_COL(0:547)
     0-0-0/b STRC        r     1 DD_GOTO_ROW(0:902)
     0-0-0/b STRC(72)    r     1 DD_PRODR(0:769)
     0-0-0/w STRC(180)         1 HIER_STK(0:50)
     0-0-0/w SBIN              1 HIER_STK_PTR               0-0-0/d STRC(11580) r     1 O1COM
     0-0-0/w STRC(144)         1 PAGE_FORMAT                0-0-0/w STRC(153)         1 REP_STK(0:50)
     0-0-0/w SBIN              1 REP_STK_PTR

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(288)         1 ADD_STMT                   0-0-0/w ASTR(324)   r     1 BASED_LEX_SYMBOL
     0-0-0/w STRC(360)         1 BASED_LEX_SYMBOL_WORDS
     0-0-0/w STRC(288)         1 BINARY_OP                  0-0-0/w STRC(288)         1 CALL_STMT
     0-0-0/w CHAR(4096)        1 CHARS                      0-0-0/w STRC(288)         1 COMPUTE_STMT
     0-0-0/w STRC(72)          1 CONT                       0-0-0/w STRC(288)         1 DEFERED_IDENTIFIER
     0-0-0/w STRC(252)         1 DEFERED_ID_TREE            0-0-0/w STRC(288)         1 DEFERED_QUAL_ID
     0-0-0/w STRC(288)         1 DEFERED_SUM_CLAUSE
     0-0-0/w STRC(288)         1 DEFERED_SUM_CLAUSE_LIST
     0-0-0/w STRC(288)         1 DELETE_STMT                0-0-0/w STRC(288)         1 DIVIDE_STMT
     0-0-0/w ASTR(180)   r     1 DNT                        0-0-0/w STRC(288)         1 ILS_LIST
     0-0-0/w STRC(288)         1 INSPECT_1_STMT             0-0-0/w STRC(288)         1 INSPECT_2_STMT
     0-0-0/w STRC(288)         1 INSPECT_4_STMT             0-0-0/w STRC(288)         1 LA_ITEM
     0-0-0/w STRC(504)         1 LX_CD_INPUT                0-0-0/w STRC(324)         1 LX_CD_I_O
     0-0-0/w STRC(396)         1 LX_CD_OUTPUT               0-0-0/w STRC(288)         1 LX_ETT_ITEM
     0-0-0/w STRC(288)         1 LX_ITEM                    0-0-0/w STRC(288)         1 LX_LARGE
     0-0-0/w STRC(288)         1 LX_LIST                    0-0-0/w STRC(1224)        1 LX_REC_DECL
     0-0-0/w STRC(864)         1 LX_REPORT_REC              0-0-0/w STRC(288)   r     1 LX_TERMINAL
     0-0-0N  NULL        r     1 M$UC                       0-0-0/w STRC(288)         1 MULTIPLY_STMT
     0-0-0/w STRC(36864)       1 PAGE                       0-0-0/w ASTR        r     1 PARSEDNT
     0-0-0/c ACHR        r     1 PARSE_STACK_USED           0-0-0/w STRC(288)         1 READ_STMT
PL6.E3A0      #001=Z8E2$PARSE_DD File=Z8E2.:Z8A6TSI                              SAT 08/09/97 11:28 Page:83   
     0-0-0/w STRC(288)         1 REWRITE_STMT               0-0-0/w STRC(288)         1 START_STMT
     0-0-0/w STRC(252)         1 STRING_STMT                0-0-0/w STRC(288)         1 SUBTRACT_STMT
     0-0-0/w STRC(288)         1 UNARY_OP                   0-0-0/w STRC(288)         1 UNSTRING_STMT
     0-0-0/w STRC(288)         1 WRITE_STMT


   Procedure Z8E2$PARSE_DD requires 803 words for executable code.
   Procedure Z8E2$PARSE_DD requires 22 words of local(AUTO) storage.

    No errors detected in file Z8E2.:Z8A6TSI    .
