VERSION E05

PL6.E3A0      #001=CXP$POSTERR File=CXP$POSTERR.:E05TSI                          TUE 07/29/97 12:28 Page:1    
        1        1        /*M*    CXP$POSTERR subroutine used to keep up with errors                    */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  DMC,DFC   */
        8        8        /*P*    NAME: CXP$POSTERR
        9        9                PURPOSE: To provide a means of recording multiple errors    */
       10       10        /******************************************************************************/
       11       11        CXP$POSTERR:
       12       12          PROC (WKSPACE$, CHARPOS, ERROR, SEV0, DCB#);
       13       13        %INCLUDE CP_MACROS_C ;
       14      765        %INCLUDE CP_6_SUBS;
       15     1305        /**/
       16     1306        /***** Parameters *****/
       17     1307    1   DCL WKSPACE$ PTR;
       18     1308    1   DCL CHARPOS UBIN WORD;
       19     1309        %ERR_CODE (NAME=ERROR,STCLASS=" ");
       20     1329    1   DCL SEV0 BIT(1) ALIGNED;      /*SET SEVERITY TO 0 FLAG*/
       21     1330    1   DCL DCB# UBIN WORD;
       22     1331        /***** Based data *****/
       23     1332        %ERR_BLK (NAME=ERR$BLK,STCLASS="BASED(WKSPACE$)");
       24     1357        /***** Local variables *****/
       25     1358    1   DCL INDX1 UBIN WORD AUTO;
       26     1359    1   DCL INDX2 UBIN WORD AUTO;
       27     1360        %ERR_CODE (NAME=ERR_CODE,STCLASS=AUTO);
       28     1380        /*
       29     1381             ***** The first time thru here ERR_BLK.FIRST is equal
       30     1382                   to zero. ERR_BLK.NEXT should be set to ONE.
       31     1383                   We will not use the zeroth entry ...
       32     1384        */
       33     1385    1   IF ERR$BLK.FIRST = 0
       34     1386    1     THEN
       35     1387    1        ERR$BLK.NEXT = 1;
       36     1388        /*
       37     1389             ***** If too many errors to save in ERR$BLK
PL6.E3A0      #001=CXP$POSTERR File=CXP$POSTERR.:E05TSI                          TUE 07/29/97 12:28 Page:2    
       38     1390                   then stuff a large number into ERR$BLK.NEXT
       39     1391                   so that ?$RPTERR will report "TOO MANY ERRORS" ...
       40     1392        */
       41     1393    1   IF ERR$BLK.NEXT > ERR$BLK.SIZE
       42     1394    1     THEN   /* Can't insert this error */
       43     1395    2        DO;
       44     1396    2           ERR$BLK.NEXT = 999;
       45     1397    2           RETURN;
       46     1398    2        END;
       47     1399        /*
       48     1400             ***** Stuff passed information into ERR$BLK.BLK ...
       49     1401        */
       50     1402    1     ERR_CODE = ERROR;   /* Slip parameter into AUTO for mucking */
       51     1403    1     IF ADDR(SEV0) = ADDR(NIL)  OR
       52     1404    1     (ADDR(SEV0) ~= ADDR(NIL)  AND  SEV0 = %YES#)
       53     1405    1        THEN
       54     1406    1           ERR_CODE.SEV = 0;
       55     1407        /**/
       56     1408    1     ERR$BLK.BLK.ERROR(ERR$BLK.NEXT) = ERR_CODE;
       57     1409        /**/
       58     1410    1     IF ADDR(DCB#) = ADDR(NIL)
       59     1411    1        THEN
       60     1412    1           ERR$BLK.BLK.DCB#(ERR$BLK.NEXT) = 0;
       61     1413    1        ELSE
       62     1414    1           ERR$BLK.BLK.DCB#(ERR$BLK.NEXT) = DCB#;
       63     1415        /**/
       64     1416    1     ERR$BLK.BLK.CHARPOS(ERR$BLK.NEXT) = CHARPOS;
       65     1417        /*
       66     1418             ***** Search for the proper place to put this new error ...
       67     1419        */
       68     1420    1     INDX2 = 999;
       69     1421    1     INDX1 = ERR$BLK.FIRST;
       70     1422    2     DO WHILE (INDX1 ~= 0);
       71     1423    2        IF ERR$BLK.BLK.CHARPOS(INDX1) >= CHARPOS
       72     1424    2           THEN
       73     1425    3              DO;
       74     1426    3                 IF ERR$BLK.BLK.CHARPOS(INDX1) > CHARPOS
PL6.E3A0      #001=CXP$POSTERR File=CXP$POSTERR.:E05TSI                          TUE 07/29/97 12:28 Page:3    
       75     1427    3                    THEN
       76     1428    3                       GOTO FOUND_IT;
       77     1429    3                 IF ERR$BLK.BLK.ERROR(INDX1) = ERR_CODE
       78     1430    3                    THEN /* Dont report the same thing twice */
       79     1431    3                       RETURN;
       80     1432    3              END;
       81     1433    2              INDX2 = INDX1;
       82     1434    2              INDX1 = ERR$BLK.BLK.LINK(INDX1);
       83     1435    2     END;
       84     1436        /*
       85     1437             ***** INDX1 points to the next entry,
       86     1438                   INDX2 points to the previous entry ...
       87     1439        */
       88     1440    1   FOUND_IT: ;
       89     1441    1     IF INDX2 = 999   /* Hasn't been used yet */
       90     1442
       91     1443    1        THEN /* new first node */
       92     1444    2           DO;
       93     1445    2              ERR$BLK.BLK.LINK(ERR$BLK.NEXT) = ERR$BLK.FIRST;
       94     1446    2              ERR$BLK.FIRST = ERR$BLK.NEXT;
       95     1447    2           END;
       96     1448    1        ELSE
       97     1449    2           DO;
       98     1450    2              ERR$BLK.BLK.LINK(ERR$BLK.NEXT) = INDX1;
       99     1451    2              ERR$BLK.BLK.LINK(INDX2) = ERR$BLK.NEXT;
      100     1452    2           END;
      101     1453        /*
      102     1454             ***** Incriment ERR$BLK.NEXT for next error ...
      103     1455        */
      104     1456    1     ERR$BLK.NEXT = ERR$BLK.NEXT + 1;
      105     1457    1     RETURN;
      106     1458    1   END CXP$POSTERR;

PL6.E3A0      #001=CXP$POSTERR File=CXP$POSTERR.:E05TSI                          TUE 07/29/97 12:28 Page:4    
--  Include file information  --

   CP_6_SUBS.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure CXP$POSTERR.

   Procedure CXP$POSTERR requires 120 words for executable code.
   Procedure CXP$POSTERR requires 12 words of local(AUTO) storage.

    No errors detected in file CXP$POSTERR.:E05TSI    .

PL6.E3A0      #001=CXP$POSTERR File=CXP$POSTERR.:E05TSI                          TUE 07/29/97 12:28 Page:5    

 Object Unit name= CXP$POSTERR                                File name= CXP$POSTERR.:E05TOU
 UTS= JUL 29 '97 12:28:52.64 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   120    170  CXP$POSTERR
    1  RoData even  none     2      2  CXP$POSTERR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        5  CXP$POSTERR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_5
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #001=CXP$POSTERR File=CXP$POSTERR.:E05TSI                          TUE 07/29/97 12:28 Page:6    


        1        1        /*M*    CXP$POSTERR subroutine used to keep up with errors                    */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  DMC,DFC   */
        8        8        /*P*    NAME: CXP$POSTERR
        9        9                PURPOSE: To provide a means of recording multiple errors    */
       10       10        /******************************************************************************/
       11       11        CXP$POSTERR:
       12       12          PROC (WKSPACE$, CHARPOS, ERROR, SEV0, DCB#);

     12  0 000000   000000 700200 xent  CXP$POSTERR  TSX0  ! X66_AUTO_5
         0 000001   000014 000005                    ZERO    12,5

       13       13        %INCLUDE CP_MACROS_C ;
       14      765        %INCLUDE CP_6_SUBS;
       15     1305        /**/
       16     1306        /***** Parameters *****/
       17     1307    1   DCL WKSPACE$ PTR;
       18     1308    1   DCL CHARPOS UBIN WORD;
       19     1309        %ERR_CODE (NAME=ERROR,STCLASS=" ");
       20     1329    1   DCL SEV0 BIT(1) ALIGNED;      /*SET SEVERITY TO 0 FLAG*/
       21     1330    1   DCL DCB# UBIN WORD;
       22     1331        /***** Based data *****/
       23     1332        %ERR_BLK (NAME=ERR$BLK,STCLASS="BASED(WKSPACE$)");
       24     1357        /***** Local variables *****/
       25     1358    1   DCL INDX1 UBIN WORD AUTO;
       26     1359    1   DCL INDX2 UBIN WORD AUTO;
       27     1360        %ERR_CODE (NAME=ERR_CODE,STCLASS=AUTO);
       28     1380        /*
       29     1381             ***** The first time thru here ERR_BLK.FIRST is equal
       30     1382                   to zero. ERR_BLK.NEXT should be set to ONE.
       31     1383                   We will not use the zeroth entry ...
       32     1384        */
PL6.E3A0      #001=CXP$POSTERR File=CXP$POSTERR.:E05TSI                          TUE 07/29/97 12:28 Page:7    
       33     1385    1   IF ERR$BLK.FIRST = 0

   1385  0 000002   200003 470500                    LDP0    @WKSPACE$,,AUTO
         0 000003   000000 471500                    LDP1    0,,PR0
         0 000004   100001 235100                    LDA     1,,PR1
         0 000005   000010 601000 0                  TNZ     s:1393

       34     1386    1     THEN
       35     1387    1        ERR$BLK.NEXT = 1;

   1387  0 000006   000001 236007                    LDQ     1,DL
         0 000007   100002 756100                    STQ     2,,PR1

       36     1388        /*
       37     1389             ***** If too many errors to save in ERR$BLK
       38     1390                   then stuff a large number into ERR$BLK.NEXT
       39     1391                   so that ?$RPTERR will report "TOO MANY ERRORS" ...
       40     1392        */
       41     1393    1   IF ERR$BLK.NEXT > ERR$BLK.SIZE

   1393  0 000010   000000 471500                    LDP1    0,,PR0
         0 000011   100000 236100                    LDQ     0,,PR1
         0 000012   100002 116100                    CMPQ    2,,PR1
         0 000013   000017 603000 0                  TRC     s:1402

       42     1394    1     THEN   /* Can't insert this error */
       43     1395    2        DO;

       44     1396    2           ERR$BLK.NEXT = 999;

   1396  0 000014   001747 235007                    LDA     999,DL
         0 000015   100002 755100                    STA     2,,PR1

       45     1397    2           RETURN;

   1397  0 000016   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=CXP$POSTERR File=CXP$POSTERR.:E05TSI                          TUE 07/29/97 12:28 Page:8    
       46     1398    2        END;
       47     1399        /*
       48     1400             ***** Stuff passed information into ERR$BLK.BLK ...
       49     1401        */
       50     1402    1     ERR_CODE = ERROR;   /* Slip parameter into AUTO for mucking */

   1402  0 000017   200005 473500                    LDP3    @ERROR,,AUTO
         0 000020   300000 236100                    LDQ     0,,PR3
         0 000021   200012 756100                    STQ     ERR_CODE,,AUTO

       51     1403    1     IF ADDR(SEV0) = ADDR(NIL)  OR

   1403  0 000022   200006 236100                    LDQ     @SEV0,,AUTO
         0 000023   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000024   000031 600000 0                  TZE     s:1406
         0 000025   000033 600000 0                  TZE     s:1408
         0 000026   200006 474500                    LDP4    @SEV0,,AUTO
         0 000027   400000 234100                    SZN     0,,PR4
         0 000030   000033 605000 0                  TPL     s:1408

       52     1404    1     (ADDR(SEV0) ~= ADDR(NIL)  AND  SEV0 = %YES#)
       53     1405    1        THEN
       54     1406    1           ERR_CODE.SEV = 0;

   1406  0 000031   000000 236000 1                  LDQ     0
         0 000032   200012 356100                    ANSQ    ERR_CODE,,AUTO

       55     1407        /**/
       56     1408    1     ERR$BLK.BLK.ERROR(ERR$BLK.NEXT) = ERR_CODE;

   1408  0 000033   100002 235100                    LDA     2,,PR1
         0 000034   000001 735000                    ALS     1
         0 000035   200012 236100                    LDQ     ERR_CODE,,AUTO
         0 000036   100004 756105                    STQ     4,AL,PR1

       57     1409        /**/
       58     1410    1     IF ADDR(DCB#) = ADDR(NIL)
PL6.E3A0      #001=CXP$POSTERR File=CXP$POSTERR.:E05TSI                          TUE 07/29/97 12:28 Page:9    

   1410  0 000037   200007 236100                    LDQ     @DCB#,,AUTO
         0 000040   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000041   000050 601000 0                  TNZ     s:1414

       59     1411    1        THEN
       60     1412    1           ERR$BLK.BLK.DCB#(ERR$BLK.NEXT) = 0;

   1412  0 000042   000000 471500                    LDP1    0,,PR0
         0 000043   100002 235100                    LDA     2,,PR1
         0 000044   000001 735000                    ALS     1
         0 000045   000001 236000 1                  LDQ     1
         0 000046   100003 356105                    ANSQ    3,AL,PR1
         0 000047   000061 710000 0                  TRA     s:1416

       61     1413    1        ELSE
       62     1414    1           ERR$BLK.BLK.DCB#(ERR$BLK.NEXT) = DCB#;

   1414  0 000050   000000 471500                    LDP1    0,,PR0
         0 000051   100002 235100                    LDA     2,,PR1
         0 000052   000001 735000                    ALS     1
         0 000053   200007 474500                    LDP4    @DCB#,,AUTO
         0 000054   400000 236100                    LDQ     0,,PR4
         0 000055   000011 736000                    QLS     9
         0 000056   100003 676105                    ERQ     3,AL,PR1
         0 000057   777000 376007                    ANQ     -512,DL
         0 000060   100003 656105                    ERSQ    3,AL,PR1

       63     1415        /**/
       64     1416    1     ERR$BLK.BLK.CHARPOS(ERR$BLK.NEXT) = CHARPOS;

   1416  0 000061   000000 471500                    LDP1    0,,PR0
         0 000062   100002 235100                    LDA     2,,PR1
         0 000063   000001 735000                    ALS     1
         0 000064   200004 474500                    LDP4    @CHARPOS,,AUTO
         0 000065   400000 236100                    LDQ     0,,PR4
         0 000066   000033 736000                    QLS     27
PL6.E3A0      #001=CXP$POSTERR File=CXP$POSTERR.:E05TSI                          TUE 07/29/97 12:28 Page:10   
         0 000067   100003 676105                    ERQ     3,AL,PR1
         0 000070   777000 376003                    ANQ     -512,DU
         0 000071   100003 656105                    ERSQ    3,AL,PR1

       65     1417        /*
       66     1418             ***** Search for the proper place to put this new error ...
       67     1419        */
       68     1420    1     INDX2 = 999;

   1420  0 000072   001747 235007                    LDA     999,DL
         0 000073   200011 755100                    STA     INDX2,,AUTO

       69     1421    1     INDX1 = ERR$BLK.FIRST;

   1421  0 000074   000000 471500                    LDP1    0,,PR0
         0 000075   100001 235100                    LDA     1,,PR1
         0 000076   200010 755100                    STA     INDX1,,AUTO

       70     1422    2     DO WHILE (INDX1 ~= 0);

   1422  0 000077   000126 600000 0                  TZE     FOUND_IT

       71     1423    2        IF ERR$BLK.BLK.CHARPOS(INDX1) >= CHARPOS

   1423  0 000100   200003 470500                    LDP0    @WKSPACE$,,AUTO
         0 000101   000000 471500                    LDP1    0,,PR0
         0 000102   200004 473500                    LDP3    @CHARPOS,,AUTO
         0 000103   200010 235100                    LDA     INDX1,,AUTO
         0 000104   000001 735000                    ALS     1
         0 000105   100003 236105                    LDQ     3,AL,PR1
         0 000106   000033 772000                    QRL     27
         0 000107   300000 116100                    CMPQ    0,,PR3
         0 000110   000117 602000 0                  TNC     s:1433

       72     1424    2           THEN
       73     1425    3              DO;

PL6.E3A0      #001=CXP$POSTERR File=CXP$POSTERR.:E05TSI                          TUE 07/29/97 12:28 Page:11   
       74     1426    3                 IF ERR$BLK.BLK.CHARPOS(INDX1) > CHARPOS

   1426  0 000111   000113 600000 0                  TZE     s:1429
         0 000112   000126 603000 0                  TRC     FOUND_IT

       75     1427    3                    THEN
       76     1428    3                       GOTO FOUND_IT;
       77     1429    3                 IF ERR$BLK.BLK.ERROR(INDX1) = ERR_CODE

   1429  0 000113   100004 236105                    LDQ     4,AL,PR1
         0 000114   200012 116100                    CMPQ    ERR_CODE,,AUTO
         0 000115   000117 601000 0                  TNZ     s:1433

       78     1430    3                    THEN /* Dont report the same thing twice */
       79     1431    3                       RETURN;

   1431  0 000116   000000 702200 xent               TSX2  ! X66_ARET

       80     1432    3              END;
       81     1433    2              INDX2 = INDX1;

   1433  0 000117   200010 236100                    LDQ     INDX1,,AUTO
         0 000120   200011 756100                    STQ     INDX2,,AUTO

       82     1434    2              INDX1 = ERR$BLK.BLK.LINK(INDX1);

   1434  0 000121   100003 236105                    LDQ     3,AL,PR1
         0 000122   000022 772000                    QRL     18
         0 000123   000777 376007                    ANQ     511,DL
         0 000124   200010 756100                    STQ     INDX1,,AUTO

       83     1435    2     END;

   1435  0 000125   000100 601000 0                  TNZ     s:1423

   1433  0 000126                       FOUND_IT     null
       84     1436        /*
PL6.E3A0      #001=CXP$POSTERR File=CXP$POSTERR.:E05TSI                          TUE 07/29/97 12:28 Page:12   
       85     1437             ***** INDX1 points to the next entry,
       86     1438                   INDX2 points to the previous entry ...
       87     1439        */
       88     1440    1   FOUND_IT: ;
       89     1441    1     IF INDX2 = 999   /* Hasn't been used yet */

   1441  0 000126   200011 235100                    LDA     INDX2,,AUTO
         0 000127   001747 115007                    CMPA    999,DL
         0 000130   000144 601000 0                  TNZ     s:1450

       90     1442
       91     1443    1        THEN /* new first node */
       92     1444    2           DO;

       93     1445    2              ERR$BLK.BLK.LINK(ERR$BLK.NEXT) = ERR$BLK.FIRST;

   1445  0 000131   100002 235100                    LDA     2,,PR1
         0 000132   000001 735000                    ALS     1
         0 000133   100001 236100                    LDQ     1,,PR1
         0 000134   000022 736000                    QLS     18
         0 000135   100003 676105                    ERQ     3,AL,PR1
         0 000136   000777 376003                    ANQ     511,DU
         0 000137   100003 656105                    ERSQ    3,AL,PR1

       94     1446    2              ERR$BLK.FIRST = ERR$BLK.NEXT;

   1446  0 000140   000000 471500                    LDP1    0,,PR0
         0 000141   100002 235100                    LDA     2,,PR1
         0 000142   100001 755100                    STA     1,,PR1

       95     1447    2           END;

   1447  0 000143   000163 710000 0                  TRA     s:1456

       96     1448    1        ELSE
       97     1449    2           DO;

PL6.E3A0      #001=CXP$POSTERR File=CXP$POSTERR.:E05TSI                          TUE 07/29/97 12:28 Page:13   
       98     1450    2              ERR$BLK.BLK.LINK(ERR$BLK.NEXT) = INDX1;

   1450  0 000144   100002 235100                    LDA     2,,PR1
         0 000145   000001 735000                    ALS     1
         0 000146   200010 236100                    LDQ     INDX1,,AUTO
         0 000147   000022 736000                    QLS     18
         0 000150   100003 676105                    ERQ     3,AL,PR1
         0 000151   000777 376003                    ANQ     511,DU
         0 000152   100003 656105                    ERSQ    3,AL,PR1

       99     1451    2              ERR$BLK.BLK.LINK(INDX2) = ERR$BLK.NEXT;

   1451  0 000153   000000 471500                    LDP1    0,,PR0
         0 000154   200011 235100                    LDA     INDX2,,AUTO
         0 000155   000001 735000                    ALS     1
         0 000156   100002 236100                    LDQ     2,,PR1
         0 000157   000022 736000                    QLS     18
         0 000160   100003 676105                    ERQ     3,AL,PR1
         0 000161   000777 376003                    ANQ     511,DU
         0 000162   100003 656105                    ERSQ    3,AL,PR1

      100     1452    2           END;

      101     1453        /*
      102     1454             ***** Incriment ERR$BLK.NEXT for next error ...
      103     1455        */
      104     1456    1     ERR$BLK.NEXT = ERR$BLK.NEXT + 1;

   1456  0 000163   000000 471500                    LDP1    0,,PR0
         0 000164   100002 235100                    LDA     2,,PR1
         0 000165   000001 035007                    ADLA    1,DL
         0 000166   100002 755100                    STA     2,,PR1

      105     1457    1     RETURN;

   1457  0 000167   000000 702200 xent               TSX2  ! X66_ARET
      106     1458    1   END CXP$POSTERR;
PL6.E3A0      #001=CXP$POSTERR File=CXP$POSTERR.:E05TSI                          TUE 07/29/97 12:28 Page:14   

PL6.E3A0      #001=CXP$POSTERR File=CXP$POSTERR.:E05TSI                          TUE 07/29/97 12:28 Page:15   
--  Include file information  --

   CP_6_SUBS.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure CXP$POSTERR.
PL6.E3A0      #001=CXP$POSTERR File=CXP$POSTERR.:E05TSI                          TUE 07/29/97 12:28 Page:16   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @CHARPOS                   7-0-0/w PTR         r     1 @DCB#
     5-0-0/w PTR         r     1 @ERROR                     6-0-0/w PTR         r     1 @SEV0
     3-0-0/w PTR         r     1 @WKSPACE$                 *0-0-0/w UBIN        r     1 CHARPOS
    *0-0-0/w UBIN        r     1 DCB#                      *0-0-0/w STRC        r     1 ERROR
    12-0-0/w STRC        r     1 ERR_CODE                  10-0-0/w UBIN        r     1 INDX1
    11-0-0/w UBIN        r     1 INDX2                     *0-0-0/w BIT         r     1 SEV0
    *0-0-0/w PTR         r     1 WKSPACE$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(828)   r     1 ERR$BLK


   Procedure CXP$POSTERR requires 120 words for executable code.
   Procedure CXP$POSTERR requires 12 words of local(AUTO) storage.

    No errors detected in file CXP$POSTERR.:E05TSI    .
PL6.E3A0      #001=CXP$POSTERR File=CXP$POSTERR.:E05TSI                          TUE 07/29/97 12:28 Page:17   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=CXP$POSTERR File=CXP$POSTERR.:E05TSI                          TUE 07/29/97 12:28 Page:18   
          MINI XREF LISTING

CHARPOS
      1308**DCL        11--PROC     1416>>ASSIGN   1423>>IF       1426>>IF
DCB#
      1330**DCL        11--PROC     1410--IF       1414>>ASSIGN
ERR$BLK.BLK.CHARPOS
      1351**DCL      1416<<ASSIGN   1423>>IF       1426>>IF
ERR$BLK.BLK.DCB#
      1353**DCL      1412<<ASSIGN   1414<<ASSIGN
ERR$BLK.BLK.ERROR
      1355**DCL      1408<<ASSIGN   1429>>IF
ERR$BLK.BLK.LINK
      1352**DCL      1434>>ASSIGN   1445<<ASSIGN   1450<<ASSIGN   1451<<ASSIGN
ERR$BLK.FIRST
      1348**DCL      1385>>IF       1421>>ASSIGN   1445>>ASSIGN   1446<<ASSIGN
ERR$BLK.NEXT
      1349**DCL      1387<<ASSIGN   1393>>IF       1396<<ASSIGN   1408>>ASSIGN   1412>>ASSIGN   1414>>ASSIGN
      1416>>ASSIGN   1445>>ASSIGN   1446>>ASSIGN   1450>>ASSIGN   1451>>ASSIGN   1456<<ASSIGN   1456>>ASSIGN
ERR$BLK.SIZE
      1347**DCL      1393>>IF
ERROR
      1322**DCL        11--PROC     1402>>ASSIGN
ERR_CODE
      1373**DCL      1402<<ASSIGN   1408>>ASSIGN   1429>>IF
ERR_CODE.SEV
      1378**DCL      1406<<ASSIGN
FOUND_IT
      1433**LABEL    1428--GOTO
INDX1
      1358**DCL      1421<<ASSIGN   1422>>DOWHILE  1423>>IF       1426>>IF       1429>>IF       1433>>ASSIGN
      1434<<ASSIGN   1434>>ASSIGN   1450>>ASSIGN
INDX2
      1359**DCL      1420<<ASSIGN   1433<<ASSIGN   1441>>IF       1451>>ASSIGN
PL6.E3A0      #001=CXP$POSTERR File=CXP$POSTERR.:E05TSI                          TUE 07/29/97 12:28 Page:19   
SEV0
      1329**DCL        11--PROC     1403--IF       1403--IF       1403>>IF
WKSPACE$
      1307**DCL        11--PROC     1346--IMP-PTR  1385>>IF       1387>>ASSIGN   1393>>IF       1393>>IF
      1396>>ASSIGN   1408>>ASSIGN   1408>>ASSIGN   1412>>ASSIGN   1412>>ASSIGN   1414>>ASSIGN   1414>>ASSIGN
      1416>>ASSIGN   1416>>ASSIGN   1421>>ASSIGN   1423>>IF       1426>>IF       1429>>IF       1434>>ASSIGN
      1445>>ASSIGN   1445>>ASSIGN   1445>>ASSIGN   1446>>ASSIGN   1446>>ASSIGN   1450>>ASSIGN   1450>>ASSIGN
      1451>>ASSIGN   1451>>ASSIGN   1456>>ASSIGN   1456>>ASSIGN
