VERSION A06

PL6.E3A0      #001=OPEN_INPUT File=LR_IO.:Z8A6TSI                                SAT 08/09/97 09:29 Page:1    
        1        1        /*M* IO => INPUT/OUTPUT ROUTINES */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8
        9        9
       10       10
       11       11
       12       12
       13       13        OPEN_INPUT : PROC;
       14       14
       15       15        /*D*
       16       16               NAME: OPEN_INPUT
       17       17            PURPOSE:
       18       18
       19       19           Open the input file and check for the output file
       20       20           option defaults in the JIT.
       21       21        */
       22       22
       23       23        %INCLUDE XU_MACRO_C;
       24     3117        %INCLUDE XU_PERR_C;
       25     3308        %INCLUDE B_ERRORS_C;
       26     4434        %INCLUDE B$JIT;
       27     5037        %INCLUDE LR_GRAM_EXT;
       28     5576
       29     5577        %INCLUDE CP_6;
       30    11137
       31    11138    1   DCL XUU$OPEN ENTRY(1) ALTRET;
       32    11139    1   DCL XUU$READ ENTRY(2) ALTRET;
       33    11140    1   DCL XUU$CLOSE ENTRY(1) ALTRET;
       34    11141    1   DCL DIAG ENTRY(6);
       35    11142    1   DCL B$JIT$ PTR SYMREF;
       36    11143        %XUU_PARAM(BASE=YES);
       37    11578
PL6.E3A0      #001=OPEN_INPUT File=LR_IO.:Z8A6TSI                                SAT 08/09/97 09:29 Page:2    
       38    11579
       39    11580    1              XUU_PARAM.FLAGS.UP_DATE#=B$JIT.PRFLAGS.UI|OPTIONS(UI_OPT);
       40    11581    1              OPTIONS(OU_OPT)=OPTIONS(OU_OPT)|B$JIT.PRFLAGS.OU;
       41    11582    1              OPTIONS(ERROR_TABLE_OPT) = OPTIONS(OU_OPT);
       42    11583
       43    11584    1              XUU_PARAM.UI_ERRCODE='0'B;
       44    11585    1              XUU_PARAM.SI_ERRCODE='0'B;
       45    11586
       46    11587    1              CALL XUU$OPEN(XUU_PARAM) ALTRET(XUU_OPEN_1);
       47    11588
       48    11589    2              DO WHILE('0'B);
       49    11590    2   XUU_OPEN_1:   ;
       50    11591
       51    11592    2                 IF XUU_PARAM.SI_ERRCODE~='0'B THEN
       52    11593    2                    CALL DIAG(15,'ERROR => Missing input file.%%');
       53    11594
       54    11595    2                 IF XUU_PARAM.UI_ERRCODE~='0'B THEN
       55    11596    2                    CALL DIAG(15,'ERROR => Bad update file.%%');
       56    11597
       57    11598    2                 END;
       58    11599
       59    11600
       60    11601    1   END OPEN_INPUT;
       61    11602        %EOD;

PL6.E3A0      #001=OPEN_INPUT File=LR_IO.:Z8A6TSI                                SAT 08/09/97 09:29 Page:3    
--  Include file information  --

   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   LR_IO_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   LR_GRAM_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:LIB_E04  is referenced.
   B$JIT.:LIB_E04  cannot be made into a system file and is referenced.
   B_ERRORS_C.:LIB_E04  is referenced.
   XU_PERR_C.:LIB_E04  is referenced.
   XU_MACRO_C.:LIB_E04  is referenced.
      No diagnostics issued in procedure OPEN_INPUT.

   Procedure OPEN_INPUT requires 52 words for executable code.
   Procedure OPEN_INPUT requires 6 words of local(AUTO) storage.

PL6.E3A0      #001=OPEN_INPUT File=LR_IO.:Z8A6TSI                                SAT 08/09/97 09:29 Page:4    

 Object Unit name= OPEN_INPUT                                 File name= LR_IO.:Z8A6TOU
 UTS= AUG 09 '97 09:29:41.16 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none     1      1  OUT_DCBN
    1   DCB   even  none     0      0  M$OU
    2   DCB   even  none     0      0  M$SO
    3   DCB   even  none     0      0  M$LO
    4   DCB   even  none     0      0  M$SI
    5   DCB   even  none     0      0  M$UI
    6  LblCom even  none  1401   2571  SYM_PTRS
    7  LblCom even  none  4001   7641  RIGHT_PARTS
    8  LblCom even  none  3002   5672  PROD
    9  LblCom even  none     1      1  NR_PROD
   10  LblCom even  none     1      1  NR_SYMS
   11  LblCom even  none     1      1  NR_TERM
   12  LblCom even  none     1      1  LAST_ACT
   13  LblCom even  none     1      1  LAST_NULL
   14  LblCom even  none     1      1  NR_ONRIGHT
   15  LblCom even  none     1      1  NR_NT
   16  LblCom even  none     1      1  PROD_LEN_MAX_EVER
   17  LblCom even  none     1      1  LAST_ORDER_SPECIFIED
   18  LblCom even  none     1      1  SEMANTIC_ORDERING
   19  LblCom even  none     1      1  ERR_SEV
   20  LblCom even  none     1      1  SET_LENGTHB
   21  LblCom even  none     1      1  SET_LENGTHW
   22  LblCom even  none     1      1  EOF_SYMBOL_PTR
   23  LblCom even  none     1      1  ERROR_SYMBOL_PTR
   24  LblCom even  none     1      1  BOF_SYMBOL_PTR
   25  LblCom even  none     1      1  OPTIONS
   26  LblCom even  none    26     32  OPTIONS_TEXT
   27  LblCom even  none   128    200  INSTR
   28  LblCom even  none     1      1  INSTR_LISTED
PL6.E3A0      #001=OPEN_INPUT File=LR_IO.:Z8A6TSI                                SAT 08/09/97 09:29 Page:5    
   29  LblCom even  none     1      1  INSTR_LEN
   30  LblCom even  none     1      1  INSTR_INDX
   31  LblCom even  none     1      1  EOF_FLAG
   32  LblCom even  none     3      3  KEY_REC
   33  LblCom even  none    28     34  LINE
   34  LblCom even  none     1      1  LINELEN
   35  LblCom even  none   205    315  TSTATS
   36   DCB   even  none     0      0  M$UC
   37   Data  even  none    14     16  OPEN_INPUT
   38  RoData even  UTS     15     17  OPEN_INPUT
   39   Proc  even  none    52     64  OPEN_INPUT
   40  RoData even  none     8     10  OPEN_INPUT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    39      0   yes            yes      Std        0  OPEN_INPUT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 XUU$OPEN
         yes           Std       6 DIAG
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET
PL6.E3A0      #001=OPEN_INPUT File=LR_IO.:Z8A6TSI                                SAT 08/09/97 09:29 Page:6    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$OU                                  M$SO                                  M$LO
     M$SI                                  M$UI                                  M$UC
     B$JIT$

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=OPEN_INPUT File=LR_IO.:Z8A6TSI                                SAT 08/09/97 09:29 Page:7    


        1        1        /*M* IO => INPUT/OUTPUT ROUTINES */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8
        9        9
       10       10
       11       11
       12       12
       13       13        OPEN_INPUT : PROC;

     13 39 000000   000000 700200 xent  OPEN_INPUT   TSX0  ! X66_AUTO_0
        39 000001   000006 000000                    ZERO    6,0

       14       14
       15       15        /*D*
       16       16               NAME: OPEN_INPUT
       17       17            PURPOSE:
       18       18
       19       19           Open the input file and check for the output file
       20       20           option defaults in the JIT.
       21       21        */
       22       22
       23       23        %INCLUDE XU_MACRO_C;
       24     3117        %INCLUDE XU_PERR_C;
       25     3308        %INCLUDE B_ERRORS_C;
       26     4434        %INCLUDE B$JIT;
       27     5037        %INCLUDE LR_GRAM_EXT;
       28     5576
       29     5577        %INCLUDE CP_6;
       30    11137
       31    11138    1   DCL XUU$OPEN ENTRY(1) ALTRET;
       32    11139    1   DCL XUU$READ ENTRY(2) ALTRET;
PL6.E3A0      #001=OPEN_INPUT File=LR_IO.:Z8A6TSI                                SAT 08/09/97 09:29 Page:8    
       33    11140    1   DCL XUU$CLOSE ENTRY(1) ALTRET;
       34    11141    1   DCL DIAG ENTRY(6);
       35    11142    1   DCL B$JIT$ PTR SYMREF;
       36    11143        %XUU_PARAM(BASE=YES);
       37    11578
       38    11579
       39    11580    1              XUU_PARAM.FLAGS.UP_DATE#=B$JIT.PRFLAGS.UI|OPTIONS(UI_OPT);

  11580 39 000002   000000 236000 25                 LDQ     OPTIONS
        39 000003   000006 736000                    QLS     6
        39 000004   400000 376003                    ANQ     -131072,DU
        39 000005   200004 756100                    STQ     4,,AUTO
        39 000006   000000 470400 xsym               LDP0    B$JIT$
        39 000007   000030 236100                    LDQ     24,,PR0
        39 000010   000001 736000                    QLS     1
        39 000011   400000 376003                    ANQ     -131072,DU
        39 000012   200004 276100                    ORQ     4,,AUTO
        39 000013   000001 772000                    QRL     1
        39 000014   000000 676000 37                 ERQ     XUU_PARAM
        39 000015   200000 376003                    ANQ     65536,DU
        39 000016   000000 656000 37                 ERSQ    XUU_PARAM

       40    11581    1              OPTIONS(OU_OPT)=OPTIONS(OU_OPT)|B$JIT.PRFLAGS.OU;

  11581 39 000017   000030 236100                    LDQ     24,,PR0
        39 000020   000002 736000                    QLS     2
        39 000021   400000 376003                    ANQ     -131072,DU
        39 000022   200004 756100                    STQ     4,,AUTO
        39 000023   000000 236000 25                 LDQ     OPTIONS
        39 000024   000002 736000                    QLS     2
        39 000025   400000 376003                    ANQ     -131072,DU
        39 000026   200004 276100                    ORQ     4,,AUTO
        39 000027   000002 772000                    QRL     2
        39 000030   000000 676000 25                 ERQ     OPTIONS
        39 000031   100000 376003                    ANQ     32768,DU
        39 000032   000000 656000 25                 ERSQ    OPTIONS

PL6.E3A0      #001=OPEN_INPUT File=LR_IO.:Z8A6TSI                                SAT 08/09/97 09:29 Page:9    
       41    11582    1              OPTIONS(ERROR_TABLE_OPT) = OPTIONS(OU_OPT);

  11582 39 000033   000000 236000 25                 LDQ     OPTIONS
        39 000034   000011 772000                    QRL     9
        39 000035   000000 676000 25                 ERQ     OPTIONS
        39 000036   000100 376003                    ANQ     64,DU
        39 000037   000000 656000 25                 ERSQ    OPTIONS

       42    11583
       43    11584    1              XUU_PARAM.UI_ERRCODE='0'B;

  11584 39 000040   000002 450000 37                 STZ     XUU_PARAM+2

       44    11585    1              XUU_PARAM.SI_ERRCODE='0'B;

  11585 39 000041   000001 450000 37                 STZ     XUU_PARAM+1

       45    11586
       46    11587    1              CALL XUU$OPEN(XUU_PARAM) ALTRET(XUU_OPEN_1);

  11587 39 000042   000001 630400 40                 EPPR0   1
        39 000043   000000 631400 40                 EPPR1   0
        39 000044   000000 701000 xent               TSX1    XUU$OPEN
        39 000045   000047 702000 39                 TSX2    XUU_OPEN_1

       47    11588
       48    11589    2              DO WHILE('0'B);

  11589 39 000046   000063 710000 39                 TRA     s:11601

  11587 39 000047                       XUU_OPEN_1   null
       49    11590    2   XUU_OPEN_1:   ;
       50    11591
       51    11592    2                 IF XUU_PARAM.SI_ERRCODE~='0'B THEN

  11592 39 000047   000001 235000 37                 LDA     XUU_PARAM+1
        39 000050   000055 600000 39                 TZE     s:11595
PL6.E3A0      #001=OPEN_INPUT File=LR_IO.:Z8A6TSI                                SAT 08/09/97 09:29 Page:10   

       52    11593    2                    CALL DIAG(15,'ERROR => Missing input file.%%');

  11593 39 000051   000004 630400 40                 EPPR0   4
        39 000052   000002 631400 40                 EPPR1   2
        39 000053   000000 701000 xent               TSX1    DIAG
        39 000054   000000 011000                    NOP     0

       53    11594
       54    11595    2                 IF XUU_PARAM.UI_ERRCODE~='0'B THEN

  11595 39 000055   000002 235000 37                 LDA     XUU_PARAM+2
        39 000056   000063 600000 39                 TZE     s:11601

       55    11596    2                    CALL DIAG(15,'ERROR => Bad update file.%%');

  11596 39 000057   000006 630400 40                 EPPR0   6
        39 000060   000002 631400 40                 EPPR1   2
        39 000061   000000 701000 xent               TSX1    DIAG
        39 000062   000000 011000                    NOP     0

       56    11597
       57    11598    2                 END;

       58    11599
       59    11600
       60    11601    1   END OPEN_INPUT;

  11601 39 000063   000000 702200 xent               TSX2  ! X66_ARET
       61    11602        %EOD;

PL6.E3A0      #001=OPEN_INPUT File=LR_IO.:Z8A6TSI                                SAT 08/09/97 09:29 Page:11   
--  Include file information  --

   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   LR_IO_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   LR_GRAM_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:LIB_E04  is referenced.
   B$JIT.:LIB_E04  cannot be made into a system file and is referenced.
   B_ERRORS_C.:LIB_E04  is referenced.
   XU_PERR_C.:LIB_E04  is referenced.
   XU_MACRO_C.:LIB_E04  is referenced.
      No diagnostics issued in procedure OPEN_INPUT.
PL6.E3A0      #001=OPEN_INPUT File=LR_IO.:Z8A6TSI                                SAT 08/09/97 09:29 Page:12   

 **** Variables and constants ****

  ****  Section 000 LblCom OUT_DCBN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 OUT_DCBN

  ****  Section 006 LblCom SYM_PTRS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 SYM_PTRS(0:1400)

  ****  Section 007 LblCom RIGHT_PARTS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/h SBIN(18)          1 RIGHT_PARTS(0:8000)

  ****  Section 008 LblCom PROD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/h STRC(72)          1 PROD(0:1500)

  ****  Section 009 LblCom NR_PROD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_PROD

PL6.E3A0      #001=OPEN_INPUT File=LR_IO.:Z8A6TSI                                SAT 08/09/97 09:29 Page:13   
  ****  Section 010 LblCom NR_SYMS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_SYMS

  ****  Section 011 LblCom NR_TERM

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_TERM

  ****  Section 012 LblCom LAST_ACT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LAST_ACT

  ****  Section 013 LblCom LAST_NULL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LAST_NULL

  ****  Section 014 LblCom NR_ONRIGHT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_ONRIGHT

  ****  Section 015 LblCom NR_NT

PL6.E3A0      #001=OPEN_INPUT File=LR_IO.:Z8A6TSI                                SAT 08/09/97 09:29 Page:14   
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_NT

  ****  Section 016 LblCom PROD_LEN_MAX_EVER

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 PROD_LEN_MAX_EVER

  ****  Section 017 LblCom LAST_ORDER_SPECIFIED

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LAST_ORDER_SPECIFIED

  ****  Section 018 LblCom SEMANTIC_ORDERING

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 SEMANTIC_ORDERING

  ****  Section 019 LblCom ERR_SEV

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ERR_SEV

  ****  Section 020 LblCom SET_LENGTHB

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #001=OPEN_INPUT File=LR_IO.:Z8A6TSI                                SAT 08/09/97 09:29 Page:15   

     0-0-0/w SBIN              1 SET_LENGTHB

  ****  Section 021 LblCom SET_LENGTHW

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 SET_LENGTHW

  ****  Section 022 LblCom EOF_SYMBOL_PTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 EOF_SYMBOL_PTR

  ****  Section 023 LblCom ERROR_SYMBOL_PTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 ERROR_SYMBOL_PTR

  ****  Section 024 LblCom BOF_SYMBOL_PTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 BOF_SYMBOL_PTR

  ****  Section 025 LblCom OPTIONS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT         r     1 OPTIONS(0:25)
PL6.E3A0      #001=OPEN_INPUT File=LR_IO.:Z8A6TSI                                SAT 08/09/97 09:29 Page:16   

  ****  Section 026 LblCom OPTIONS_TEXT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(4)           1 OPTIONS_TEXT(0:25)

  ****  Section 027 LblCom INSTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR              1 INSTR(0:511)               0-0-0/c CHAR(512)         1 INSTRCHR

  ****  Section 028 LblCom INSTR_LISTED

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 INSTR_LISTED

  ****  Section 029 LblCom INSTR_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 INSTR_LEN

  ****  Section 030 LblCom INSTR_INDX

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 INSTR_INDX

  ****  Section 031 LblCom EOF_FLAG
PL6.E3A0      #001=OPEN_INPUT File=LR_IO.:Z8A6TSI                                SAT 08/09/97 09:29 Page:17   

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 EOF_FLAG

  ****  Section 032 LblCom KEY_REC

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(10)          1 KEY_REC

  ****  Section 033 LblCom LINE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(109)         1 LINE

  ****  Section 034 LblCom LINELEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LINELEN

  ****  Section 035 LblCom TSTATS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(7380)        1 TSTATS

  ****  Section 037  Data  OPEN_INPUT

  ****  Scalars and arrays  ****
PL6.E3A0      #001=OPEN_INPUT File=LR_IO.:Z8A6TSI                                SAT 08/09/97 09:29 Page:18   
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(504)   r     1 XUU_PARAM

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0N  NULL        r     1 M$LO
     0-0-0N  NULL        r     1 M$OU                       0-0-0N  NULL        r     1 M$SI
     0-0-0N  NULL        r     1 M$SO                       0-0-0N  NULL        r     1 M$UC
     0-0-0N  NULL        r     1 M$UI                       0-0-0/w STRC(351)         1 SYMBOL


   Procedure OPEN_INPUT requires 52 words for executable code.
   Procedure OPEN_INPUT requires 6 words of local(AUTO) storage.

PL6.E3A0      #002=INPUT File=LR_IO.:Z8A6TSI                                     SAT 08/09/97 09:31 Page:19   
       62        1        /*T***********************************************************/
       63        2        /*T*                                                         */
       64        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       65        4        /*T*                                                         */
       66        5        /*T***********************************************************/
       67        6        INPUT:  PROC(STR,LEN,ASCII_KEY) NOAUTO;
       68        7
       69        8        /*D*
       70        9               NAME: INPUT
       71       10            PURPOSE: RETURN THE NEXT INPUT LINE FROM THE INPUT FILE.
       72       11                     LEN = 0 DESIGNATES END OF FILE.
       73       12        */
       74       13
       75       14    1   DCL STR CHAR(512);
       76       15    1   DCL LEN UBIN;
       77       16    1   DCL ASCII_KEY CHAR(10);
       78       17
       79       18        /* RETURN IN STR THE NEXT INPUT LINE.
       80       19           LEN=0 IF END OF FILE FOUND.
       81       20           RECNO IS THE MONITORS RECORD NUMBER */
       82       21
       83       22        %INCLUDE XU_MACRO_C;
       84     3116        %INCLUDE XU_PERR_C;
       85     3307        %INCLUDE B_ERRORS_C;
       86     4433        %INCLUDE B$JIT;
       87     5036        %INCLUDE LR_GRAM_EXT;
       88     5575
       89     5576        %INCLUDE CP_6;
       90    11136
       91    11137    1   DCL XUU$OPEN   ENTRY(1) ALTRET;
       92    11138    1   DCL XUU$READ   ENTRY(2) ALTRET;
       93    11139    1   DCL XUU$CLOSE  ENTRY(1) ALTRET;
       94    11140    1   DCL DIAG       ENTRY(6);
       95    11141    1   DCL B$JIT$ PTR SYMREF;
       96    11142
       97    11143        %XUU_PARAM(BASE=YES);
       98    11578
PL6.E3A0      #002=INPUT File=LR_IO.:Z8A6TSI                                     SAT 08/09/97 09:31 Page:20   
       99    11579
      100    11580    1           CALL XUU$READ(XUU_PARAM,VECTOR(STR))
      101    11581    1             ALTRET( READ_ALT);
      102    11582
      103    11583    1           ASCII_KEY=XUU_PARAM.ASCII_KEY;
      104    11584
      105    11585    1           LEN=XUU_PARAM.ARS;
      106    11586
      107    11587    1           RETURN;
      108    11588    1   READ_ALT:;
      109    11589    1           LEN=0;
      110    11590
      111    11591    1   END INPUT;
      112    11592        %EOD;

PL6.E3A0      #002=INPUT File=LR_IO.:Z8A6TSI                                     SAT 08/09/97 09:31 Page:21   
--  Include file information  --

   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   LR_IO_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   LR_GRAM_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:LIB_E04  is referenced.
   B$JIT.:LIB_E04  cannot be made into a system file and is referenced.
   B_ERRORS_C.:LIB_E04  is referenced.
   XU_PERR_C.:LIB_E04  is referenced.
   XU_MACRO_C.:LIB_E04  is referenced.
      No diagnostics issued in procedure INPUT.

   Procedure INPUT requires 27 words for executable code.
   Procedure INPUT is declared NOAUTO and requires 22 words of local(STATIC) storage.

PL6.E3A0      #002=INPUT File=LR_IO.:Z8A6TSI                                     SAT 08/09/97 09:31 Page:22   

 Object Unit name= INPUT                                      File name= LR_IO.:Z8A6TOU
 UTS= AUG 09 '97 09:31:07.32 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none    22     26  INPUT
    1  LblCom even  none     1      1  OUT_DCBN
    2   DCB   even  none     0      0  M$OU
    3   DCB   even  none     0      0  M$SO
    4   DCB   even  none     0      0  M$LO
    5   DCB   even  none     0      0  M$SI
    6   DCB   even  none     0      0  M$UI
    7  LblCom even  none  1401   2571  SYM_PTRS
    8  LblCom even  none  4001   7641  RIGHT_PARTS
    9  LblCom even  none  3002   5672  PROD
   10  LblCom even  none     1      1  NR_PROD
   11  LblCom even  none     1      1  NR_SYMS
   12  LblCom even  none     1      1  NR_TERM
   13  LblCom even  none     1      1  LAST_ACT
   14  LblCom even  none     1      1  LAST_NULL
   15  LblCom even  none     1      1  NR_ONRIGHT
   16  LblCom even  none     1      1  NR_NT
   17  LblCom even  none     1      1  PROD_LEN_MAX_EVER
   18  LblCom even  none     1      1  LAST_ORDER_SPECIFIED
   19  LblCom even  none     1      1  SEMANTIC_ORDERING
   20  LblCom even  none     1      1  ERR_SEV
   21  LblCom even  none     1      1  SET_LENGTHB
   22  LblCom even  none     1      1  SET_LENGTHW
   23  LblCom even  none     1      1  EOF_SYMBOL_PTR
   24  LblCom even  none     1      1  ERROR_SYMBOL_PTR
   25  LblCom even  none     1      1  BOF_SYMBOL_PTR
   26  LblCom even  none     1      1  OPTIONS
   27  LblCom even  none    26     32  OPTIONS_TEXT
   28  LblCom even  none   128    200  INSTR
PL6.E3A0      #002=INPUT File=LR_IO.:Z8A6TSI                                     SAT 08/09/97 09:31 Page:23   
   29  LblCom even  none     1      1  INSTR_LISTED
   30  LblCom even  none     1      1  INSTR_LEN
   31  LblCom even  none     1      1  INSTR_INDX
   32  LblCom even  none     1      1  EOF_FLAG
   33  LblCom even  none     3      3  KEY_REC
   34  LblCom even  none    28     34  LINE
   35  LblCom even  none     1      1  LINELEN
   36  LblCom even  none   205    315  TSTATS
   37   DCB   even  none     0      0  M$UC
   38   Proc  even  none    27     33  INPUT
   39  RoData even  none     3      3  INPUT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    38      0   yes            yes      Std        3  INPUT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 XUU$READ
                       nStd      0 X66_STATIC_3

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$OU                                  M$SO                                  M$LO
     M$SI                                  M$UI                                  M$UC
     B$JIT$
PL6.E3A0      #002=INPUT File=LR_IO.:Z8A6TSI                                     SAT 08/09/97 09:31 Page:24   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #002=INPUT File=LR_IO.:Z8A6TSI                                     SAT 08/09/97 09:31 Page:25   


       62        1        /*T***********************************************************/
       63        2        /*T*                                                         */
       64        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       65        4        /*T*                                                         */
       66        5        /*T***********************************************************/
       67        6        INPUT:  PROC(STR,LEN,ASCII_KEY) NOAUTO;

      6 38 000000   000000 700200 xent  INPUT        TSX0  ! X66_STATIC_3
        38 000001   000000 000003 0                  ZERO    0,3

       68        7
       69        8        /*D*
       70        9               NAME: INPUT
       71       10            PURPOSE: RETURN THE NEXT INPUT LINE FROM THE INPUT FILE.
       72       11                     LEN = 0 DESIGNATES END OF FILE.
       73       12        */
       74       13
       75       14    1   DCL STR CHAR(512);
       76       15    1   DCL LEN UBIN;
       77       16    1   DCL ASCII_KEY CHAR(10);
       78       17
       79       18        /* RETURN IN STR THE NEXT INPUT LINE.
       80       19           LEN=0 IF END OF FILE FOUND.
       81       20           RECNO IS THE MONITORS RECORD NUMBER */
       82       21
       83       22        %INCLUDE XU_MACRO_C;
       84     3116        %INCLUDE XU_PERR_C;
       85     3307        %INCLUDE B_ERRORS_C;
       86     4433        %INCLUDE B$JIT;
       87     5036        %INCLUDE LR_GRAM_EXT;
       88     5575
       89     5576        %INCLUDE CP_6;
       90    11136
       91    11137    1   DCL XUU$OPEN   ENTRY(1) ALTRET;
       92    11138    1   DCL XUU$READ   ENTRY(2) ALTRET;
       93    11139    1   DCL XUU$CLOSE  ENTRY(1) ALTRET;
PL6.E3A0      #002=INPUT File=LR_IO.:Z8A6TSI                                     SAT 08/09/97 09:31 Page:26   
       94    11140    1   DCL DIAG       ENTRY(6);
       95    11141    1   DCL B$JIT$ PTR SYMREF;
       96    11142
       97    11143        %XUU_PARAM(BASE=YES);
       98    11578
       99    11579
      100    11580    1           CALL XUU$READ(XUU_PARAM,VECTOR(STR))

  11580 38 000002   000000 235000 39                 LDA     0
        38 000003   000001 236000 0                  LDQ     @STR
        38 000004   000022 757000 0                  STAQ    XUU_PARAM+14
        38 000005   000022 630400 0                  EPPR0   XUU_PARAM+14
        38 000006   000025 450400 0                  STP0    XUU_PARAM+17
        38 000007   000002 236000 39                 LDQ     2
        38 000010   000024 756000 0                  STQ     XUU_PARAM+16
        38 000011   000024 630400 0                  EPPR0   XUU_PARAM+16
        38 000012   000001 631400 39                 EPPR1   1
        38 000013   000000 701000 xent               TSX1    XUU$READ
        38 000014   000027 702000 38                 TSX2    READ_ALT

      101    11581    1             ALTRET( READ_ALT);
      102    11582
      103    11583    1           ASCII_KEY=XUU_PARAM.ASCII_KEY;

  11583 38 000015   000003 470400 0                  LDP0    @ASCII_KEY
        38 000016   040100 100400                    MLR     fill='040'O
        38 000017   000007 000012 0                  ADSC9   XUU_PARAM+3              cn=0,n=10
        38 000020   000000 000012                    ADSC9   0,,PR0                   cn=0,n=10

      104    11584
      105    11585    1           LEN=XUU_PARAM.ARS;

  11585 38 000021   000002 471400 0                  LDP1    @LEN
        38 000022   000004 236000 0                  LDQ     XUU_PARAM
        38 000023   000777 376007                    ANQ     511,DL
        38 000024   100000 756100                    STQ     0,,PR1

PL6.E3A0      #002=INPUT File=LR_IO.:Z8A6TSI                                     SAT 08/09/97 09:31 Page:27   
      106    11586
      107    11587    1           RETURN;

  11587 38 000025   000000 221200 0                  LDX1  ! 0
        38 000026   000001 702211                    TSX2  ! 1,X1

  11585 38 000027                       READ_ALT     null
      108    11588    1   READ_ALT:;
      109    11589    1           LEN=0;

  11589 38 000027   000002 470400 0                  LDP0    @LEN
        38 000030   000000 450100                    STZ     0,,PR0

      110    11590
      111    11591    1   END INPUT;

  11591 38 000031   000000 221200 0                  LDX1  ! 0
        38 000032   000001 702211                    TSX2  ! 1,X1
      112    11592        %EOD;

PL6.E3A0      #002=INPUT File=LR_IO.:Z8A6TSI                                     SAT 08/09/97 09:31 Page:28   
--  Include file information  --

   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   LR_IO_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   LR_GRAM_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:LIB_E04  is referenced.
   B$JIT.:LIB_E04  cannot be made into a system file and is referenced.
   B_ERRORS_C.:LIB_E04  is referenced.
   XU_PERR_C.:LIB_E04  is referenced.
   XU_MACRO_C.:LIB_E04  is referenced.
      No diagnostics issued in procedure INPUT.
PL6.E3A0      #002=INPUT File=LR_IO.:Z8A6TSI                                     SAT 08/09/97 09:31 Page:29   

 **** Variables and constants ****

  ****  Section 000  Data  INPUT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @ASCII_KEY                 2-0-0/w PTR         r     1 @LEN
     1-0-0/w PTR         r     1 @STR                      *0-0-0/c CHAR(10)    r     1 ASCII_KEY
    *0-0-0/w UBIN        r     1 LEN                       *0-0-0/c CHAR(512)   r     1 STR
     4-0-0/w STRC(504)   r     1 XUU_PARAM

  ****  Section 001 LblCom OUT_DCBN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 OUT_DCBN

  ****  Section 007 LblCom SYM_PTRS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 SYM_PTRS(0:1400)

  ****  Section 008 LblCom RIGHT_PARTS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/h SBIN(18)          1 RIGHT_PARTS(0:8000)

  ****  Section 009 LblCom PROD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #002=INPUT File=LR_IO.:Z8A6TSI                                     SAT 08/09/97 09:31 Page:30   

     0-0-0/h STRC(72)          1 PROD(0:1500)

  ****  Section 010 LblCom NR_PROD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_PROD

  ****  Section 011 LblCom NR_SYMS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_SYMS

  ****  Section 012 LblCom NR_TERM

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_TERM

  ****  Section 013 LblCom LAST_ACT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LAST_ACT

  ****  Section 014 LblCom LAST_NULL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LAST_NULL
PL6.E3A0      #002=INPUT File=LR_IO.:Z8A6TSI                                     SAT 08/09/97 09:31 Page:31   

  ****  Section 015 LblCom NR_ONRIGHT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_ONRIGHT

  ****  Section 016 LblCom NR_NT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_NT

  ****  Section 017 LblCom PROD_LEN_MAX_EVER

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 PROD_LEN_MAX_EVER

  ****  Section 018 LblCom LAST_ORDER_SPECIFIED

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LAST_ORDER_SPECIFIED

  ****  Section 019 LblCom SEMANTIC_ORDERING

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 SEMANTIC_ORDERING

  ****  Section 020 LblCom ERR_SEV
PL6.E3A0      #002=INPUT File=LR_IO.:Z8A6TSI                                     SAT 08/09/97 09:31 Page:32   

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ERR_SEV

  ****  Section 021 LblCom SET_LENGTHB

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 SET_LENGTHB

  ****  Section 022 LblCom SET_LENGTHW

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 SET_LENGTHW

  ****  Section 023 LblCom EOF_SYMBOL_PTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 EOF_SYMBOL_PTR

  ****  Section 024 LblCom ERROR_SYMBOL_PTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 ERROR_SYMBOL_PTR

  ****  Section 025 LblCom BOF_SYMBOL_PTR

  ****  Scalars and arrays  ****
PL6.E3A0      #002=INPUT File=LR_IO.:Z8A6TSI                                     SAT 08/09/97 09:31 Page:33   
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 BOF_SYMBOL_PTR

  ****  Section 026 LblCom OPTIONS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 OPTIONS(0:25)

  ****  Section 027 LblCom OPTIONS_TEXT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(4)           1 OPTIONS_TEXT(0:25)

  ****  Section 028 LblCom INSTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR              1 INSTR(0:511)               0-0-0/c CHAR(512)         1 INSTRCHR

  ****  Section 029 LblCom INSTR_LISTED

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 INSTR_LISTED

  ****  Section 030 LblCom INSTR_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #002=INPUT File=LR_IO.:Z8A6TSI                                     SAT 08/09/97 09:31 Page:34   
     0-0-0/w SBIN              1 INSTR_LEN

  ****  Section 031 LblCom INSTR_INDX

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 INSTR_INDX

  ****  Section 032 LblCom EOF_FLAG

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 EOF_FLAG

  ****  Section 033 LblCom KEY_REC

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(10)          1 KEY_REC

  ****  Section 034 LblCom LINE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(109)         1 LINE

  ****  Section 035 LblCom LINELEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LINELEN

PL6.E3A0      #002=INPUT File=LR_IO.:Z8A6TSI                                     SAT 08/09/97 09:31 Page:35   
  ****  Section 036 LblCom TSTATS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(7380)        1 TSTATS

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)        1 B$JIT                      0-0-0N  NULL        r     1 M$LO
     0-0-0N  NULL        r     1 M$OU                       0-0-0N  NULL        r     1 M$SI
     0-0-0N  NULL        r     1 M$SO                       0-0-0N  NULL        r     1 M$UC
     0-0-0N  NULL        r     1 M$UI                       0-0-0/w STRC(351)         1 SYMBOL


   Procedure INPUT requires 27 words for executable code.
   Procedure INPUT is declared NOAUTO and requires 22 words of local(STATIC) storage.

PL6.E3A0      #003=OUTPUT File=LR_IO.:Z8A6TSI                                    SAT 08/09/97 09:32 Page:36   
      113        1        /*T***********************************************************/
      114        2        /*T*                                                         */
      115        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      116        4        /*T*                                                         */
      117        5        /*T***********************************************************/
      118        6        OUTPUT: PROC(BUFFER,LEN) NOAUTO;
      119        7
      120        8        /*D*
      121        9               NAME: OUTPUT
      122       10            PURPOSE: WRITE THE BUFFER TO THE CURRENT OUTPUT FILE.
      123       11        */
      124       12
      125       13
      126       14    1   DCL LEN UBIN;
      127       15    1   DCL BUFFER CHAR(LEN);
      128       16
      129       17
      130       18        %INCLUDE LR_IO_EXT;
      131       45        %INCLUDE CP_6;
      132     5605        %INCLUDE XS_MACRO_C;
      133     5649
      134     5650    1   DCL XSA$WRITE ENTRY(2) ALTRET;
      135     5651
      136     5652
      137     5653        %FPT_WRITE;
      138     5684
      139     5685    1   DCL BUFFER_OU CHAR(4096) EXT;
      140     5686    1   DCL BUFFER_SO CHAR(4096) EXT;
      141     5687        %XSA_PARAM(FPTN=XSA_PARAM_OU,STCLASS=EXT,BBUF=BUFFER_OU);
      142     5717        %XSA_PARAM(FPTN=XSA_PARAM_SO,STCLASS=EXT,BBUF=BUFFER_SO);
      143     5747
      144     5748    1           IF LEN>0 THEN
      145     5749    2           DO;
      146     5750    2              FPT_WRITE.V.DCB# = OUT_DCBN;
      147     5751    2              FPT_WRITE.BUF_=VECTOR(BUFFER);
      148     5752
      149     5753    2              IF OUT_DCBN = DCBNUM(M$OU) THEN
PL6.E3A0      #003=OUTPUT File=LR_IO.:Z8A6TSI                                    SAT 08/09/97 09:32 Page:37   
      150     5754    2                CALL XSA$WRITE(FPT_WRITE,XSA_PARAM_OU) ALTRET(OMIGOD);
      151     5755    2              ELSE
      152     5756    2                IF OUT_DCBN = DCBNUM(M$SO) THEN
      153     5757    2                  CALL XSA$WRITE(FPT_WRITE,XSA_PARAM_SO) ALTRET (OMIGOD);
      154     5758    2                ELSE
      155     5759    2                   CALL M$WRITE(FPT_WRITE) ALTRET(OMIGOD);
      156     5760    2              END;
      157     5761
      158     5762    1           LEN = 0;
      159     5763    1           RETURN;
      160     5764
      161     5765    1   OMIGOD:
      162     5766    1           CALL M$MERC;
      163     5767
      164     5768    1   END OUTPUT;
      165     5769        %EOD;

PL6.E3A0      #003=OUTPUT File=LR_IO.:Z8A6TSI                                    SAT 08/09/97 09:32 Page:38   
--  Include file information  --

   XS_MACRO_C.:LIB_E04  is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   LR_IO_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure OUTPUT.

   Procedure OUTPUT requires 43 words for executable code.
   Procedure OUTPUT is declared NOAUTO and requires 16 words of local(STATIC) storage.

PL6.E3A0      #003=OUTPUT File=LR_IO.:Z8A6TSI                                    SAT 08/09/97 09:32 Page:39   

 Object Unit name= OUTPUT                                     File name= LR_IO.:Z8A6TOU
 UTS= AUG 09 '97 09:32:23.72 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none    16     20  OUTPUT
    1  LblCom even  none     1      1  OUT_DCBN
    2   DCB   even  none     0      0  M$OU
    3   DCB   even  none     0      0  M$SO
    4   DCB   even  none     0      0  M$LO
    5   DCB   even  none     0      0  M$SI
    6   DCB   even  none     0      0  M$UI
    7   DCB   even  none     0      0  M$UC
    8  LblCom even  none  1024   2000  BUFFER_OU
    9  LblCom even  none  1024   2000  BUFFER_SO
   10  LblCom even  none    14     16  XSA_PARAM_OU
   11  LblCom even  none    14     16  XSA_PARAM_SO
   12   Proc  even  none    43     53  OUTPUT
   13  RoData even  none     5      5  OUTPUT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    12      0   yes            yes      Std        2  OUTPUT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 XSA$WRITE
                       nStd      0 X66_STATIC_2
PL6.E3A0      #003=OUTPUT File=LR_IO.:Z8A6TSI                                    SAT 08/09/97 09:32 Page:40   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$OU                                  M$SO                                  M$LO
     M$SI                                  M$UI                                  M$UC

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #003=OUTPUT File=LR_IO.:Z8A6TSI                                    SAT 08/09/97 09:32 Page:41   


      113        1        /*T***********************************************************/
      114        2        /*T*                                                         */
      115        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      116        4        /*T*                                                         */
      117        5        /*T***********************************************************/
      118        6        OUTPUT: PROC(BUFFER,LEN) NOAUTO;

      6 12 000000   000000 700200 xent  OUTPUT       TSX0  ! X66_STATIC_2
        12 000001   000000 000002 0                  ZERO    0,2

      119        7
      120        8        /*D*
      121        9               NAME: OUTPUT
      122       10            PURPOSE: WRITE THE BUFFER TO THE CURRENT OUTPUT FILE.
      123       11        */
      124       12
      125       13
      126       14    1   DCL LEN UBIN;
      127       15    1   DCL BUFFER CHAR(LEN);
      128       16
      129       17
      130       18        %INCLUDE LR_IO_EXT;
      131       45        %INCLUDE CP_6;
      132     5605        %INCLUDE XS_MACRO_C;
      133     5649
      134     5650    1   DCL XSA$WRITE ENTRY(2) ALTRET;
      135     5651
      136     5652
      137     5653        %FPT_WRITE;
      138     5684
      139     5685    1   DCL BUFFER_OU CHAR(4096) EXT;
      140     5686    1   DCL BUFFER_SO CHAR(4096) EXT;
      141     5687        %XSA_PARAM(FPTN=XSA_PARAM_OU,STCLASS=EXT,BBUF=BUFFER_OU);
      142     5717        %XSA_PARAM(FPTN=XSA_PARAM_SO,STCLASS=EXT,BBUF=BUFFER_SO);
      143     5747
      144     5748    1           IF LEN>0 THEN
PL6.E3A0      #003=OUTPUT File=LR_IO.:Z8A6TSI                                    SAT 08/09/97 09:32 Page:42   

   5748 12 000002   000002 470400 0                  LDP0    @LEN
        12 000003   000000 235100                    LDA     0,,PR0
        12 000004   000043 600000 12                 TZE     s:5762

      145     5749    2           DO;

      146     5750    2              FPT_WRITE.V.DCB# = OUT_DCBN;

   5750 12 000005   000000 720000 1                  LXL0    OUT_DCBN
        12 000006   000014 740000 0                  STX0    FPT_WRITE+8

      147     5751    2              FPT_WRITE.BUF_=VECTOR(BUFFER);

   5751 12 000007   000000 721100                    LXL1    0,,PR0
        12 000010   000000 635011                    EAA     0,X1
        12 000011   000002 771000                    ARL     2
        12 000012   000140 135007                    SBLA    96,DL
        12 000013   000001 236000 0                  LDQ     @BUFFER
        12 000014   000010 757000 0                  STAQ    FPT_WRITE+4

      148     5752
      149     5753    2              IF OUT_DCBN = DCBNUM(M$OU) THEN

   5753 12 000015   000000 236007 xsym               LDQ     M$OU,DL
        12 000016   000026 604000 12                 TMI     s:5756
        12 000017   000000 116000 1                  CMPQ    OUT_DCBN
        12 000020   000026 601000 12                 TNZ     s:5756

      150     5754    2                CALL XSA$WRITE(FPT_WRITE,XSA_PARAM_OU) ALTRET(OMIGOD);

   5754 12 000021   000001 630400 13                 EPPR0   1
        12 000022   000000 631400 13                 EPPR1   0
        12 000023   000000 701000 xent               TSX1    XSA$WRITE
        12 000024   000047 702000 12                 TSX2    OMIGOD
        12 000025   000043 710000 12                 TRA     s:5762

PL6.E3A0      #003=OUTPUT File=LR_IO.:Z8A6TSI                                    SAT 08/09/97 09:32 Page:43   
      151     5755    2              ELSE
      152     5756    2                IF OUT_DCBN = DCBNUM(M$SO) THEN

   5756 12 000026   000000 236007 xsym               LDQ     M$SO,DL
        12 000027   000037 604000 12                 TMI     s:5759
        12 000030   000000 116000 1                  CMPQ    OUT_DCBN
        12 000031   000037 601000 12                 TNZ     s:5759

      153     5757    2                  CALL XSA$WRITE(FPT_WRITE,XSA_PARAM_SO) ALTRET (OMIGOD);

   5757 12 000032   000003 630400 13                 EPPR0   3
        12 000033   000000 631400 13                 EPPR1   0
        12 000034   000000 701000 xent               TSX1    XSA$WRITE
        12 000035   000047 702000 12                 TSX2    OMIGOD
        12 000036   000043 710000 12                 TRA     s:5762

      154     5758    2                ELSE
      155     5759    2                   CALL M$WRITE(FPT_WRITE) ALTRET(OMIGOD);

   5759 12 000037   000004 630400 0                  EPPR0   FPT_WRITE
        12 000040   440001 713400                    CLIMB   alt,write
        12 000041   401400 401760                    pmme    nvectors=4
        12 000042   000047 702000 12                 TSX2    OMIGOD

      156     5760    2              END;

      157     5761
      158     5762    1           LEN = 0;

   5762 12 000043   000002 470400 0                  LDP0    @LEN
        12 000044   000000 450100                    STZ     0,,PR0

      159     5763    1           RETURN;

   5763 12 000045   000000 221200 0                  LDX1  ! 0
        12 000046   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #003=OUTPUT File=LR_IO.:Z8A6TSI                                    SAT 08/09/97 09:32 Page:44   
      160     5764
      161     5765    1   OMIGOD:
      162     5766    1           CALL M$MERC;

   5766 12 000047   010007 713400       OMIGOD       CLIMB   4103
        12 000050   000000 401760                    pmme    nvectors=0

      163     5767
      164     5768    1   END OUTPUT;

   5768 12 000051   000000 221200 0                  LDX1  ! 0
        12 000052   000001 702211                    TSX2  ! 1,X1
      165     5769        %EOD;

PL6.E3A0      #003=OUTPUT File=LR_IO.:Z8A6TSI                                    SAT 08/09/97 09:32 Page:45   
--  Include file information  --

   XS_MACRO_C.:LIB_E04  is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   LR_IO_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure OUTPUT.
PL6.E3A0      #003=OUTPUT File=LR_IO.:Z8A6TSI                                    SAT 08/09/97 09:32 Page:46   

 **** Variables and constants ****

  ****  Section 000  Data  OUTPUT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     1-0-0/w PTR         r     1 @BUFFER                    2-0-0/w PTR         r     1 @LEN
    *0-0-0/c ACHR        r     1 BUFFER                     4-0-0/d STRC(432)   r     1 FPT_WRITE
    *0-0-0/w UBIN        r     1 LEN

  ****  Section 001 LblCom OUT_DCBN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 OUT_DCBN

  ****  Section 008 LblCom BUFFER_OU

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(4096)  r     1 BUFFER_OU

  ****  Section 009 LblCom BUFFER_SO

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(4096)  r     1 BUFFER_SO

  ****  Section 010 LblCom XSA_PARAM_OU

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #003=OUTPUT File=LR_IO.:Z8A6TSI                                    SAT 08/09/97 09:32 Page:47   
     0-0-0/d STRC(504)   r     1 XSA_PARAM_OU

  ****  Section 011 LblCom XSA_PARAM_SO

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(504)   r     1 XSA_PARAM_SO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0N  NULL        r     1 M$LO                       0-0-0N  NULL        r     1 M$OU
     0-0-0N  NULL        r     1 M$SI                       0-0-0N  NULL        r     1 M$SO
     0-0-0N  NULL        r     1 M$UC                       0-0-0N  NULL        r     1 M$UI


   Procedure OUTPUT requires 43 words for executable code.
   Procedure OUTPUT is declared NOAUTO and requires 16 words of local(STATIC) storage.

PL6.E3A0      #004=OUT_STR File=LR_IO.:Z8A6TSI                                   SAT 08/09/97 09:33 Page:48   
      166        1        /*T***********************************************************/
      167        2        /*T*                                                         */
      168        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      169        4        /*T*                                                         */
      170        5        /*T***********************************************************/
      171        6        OUT_STR:PROC(STR,LEN) NOAUTO;
      172        7
      173        8        /*D*
      174        9               NAME: OUT_STR
      175       10            PURPOSE: APPEND A STRING ONTO THE CURRENT OUTPUT LINE.
      176       11                     IF THE STRING EXCEEDS THE LINE LENGTH,
      177       12                     PRINT THE LINE.
      178       13        */
      179       14
      180       15
      181       16    1   DCL STR CHAR(LEN);
      182       17    1   DCL LEN SBIN;
      183       18
      184       19        %INCLUDE LR_GRAM_EXT;
      185      558
      186      559    1   DCL FLUSH ENTRY;
      187      560
      188      561    1           IF LEN+LINELEN>TEXTLIMIT THEN
      189      562    2             DO;
      190      563    2               CALL FLUSH;
      191      564    2               CALL INSERT(LINE, LINELEN, 20, '                    ');
      192      565    2               LINELEN = LINELEN + 20;
      193      566    2             END;
      194      567
      195      568    1           IF LINELEN + LEN > TEXTLIMIT THEN
      196      569    2             DO;
      197      570    2               CALL OUTPUT(STR, LEN);
      198      571    2               LINELEN = 0;
      199      572    2             END;
      200      573    1           ELSE
      201      574    2             DO;
      202      575    2               CALL INSERT(LINE,LINELEN,LEN,STR);
PL6.E3A0      #004=OUT_STR File=LR_IO.:Z8A6TSI                                   SAT 08/09/97 09:33 Page:49   
      203      576    2               LINELEN=LINELEN+LEN;
      204      577    2             END;
      205      578
      206      579    1   END OUT_STR;
      207      580        %EOD;

PL6.E3A0      #004=OUT_STR File=LR_IO.:Z8A6TSI                                   SAT 08/09/97 09:33 Page:50   
--  Include file information  --

   LR_IO_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   LR_GRAM_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure OUT_STR.

   Procedure OUT_STR requires 40 words for executable code.
   Procedure OUT_STR is declared NOAUTO and requires 6 words of local(STATIC) storage.

PL6.E3A0      #004=OUT_STR File=LR_IO.:Z8A6TSI                                   SAT 08/09/97 09:33 Page:51   

 Object Unit name= OUT_STR                                    File name= LR_IO.:Z8A6TOU
 UTS= AUG 09 '97 09:33:06.80 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none     6      6  OUT_STR
    1  LblCom even  none     1      1  OUT_DCBN
    2   DCB   even  none     0      0  M$OU
    3   DCB   even  none     0      0  M$SO
    4   DCB   even  none     0      0  M$LO
    5   DCB   even  none     0      0  M$SI
    6   DCB   even  none     0      0  M$UI
    7  LblCom even  none  1401   2571  SYM_PTRS
    8  LblCom even  none  4001   7641  RIGHT_PARTS
    9  LblCom even  none  3002   5672  PROD
   10  LblCom even  none     1      1  NR_PROD
   11  LblCom even  none     1      1  NR_SYMS
   12  LblCom even  none     1      1  NR_TERM
   13  LblCom even  none     1      1  LAST_ACT
   14  LblCom even  none     1      1  LAST_NULL
   15  LblCom even  none     1      1  NR_ONRIGHT
   16  LblCom even  none     1      1  NR_NT
   17  LblCom even  none     1      1  PROD_LEN_MAX_EVER
   18  LblCom even  none     1      1  LAST_ORDER_SPECIFIED
   19  LblCom even  none     1      1  SEMANTIC_ORDERING
   20  LblCom even  none     1      1  ERR_SEV
   21  LblCom even  none     1      1  SET_LENGTHB
   22  LblCom even  none     1      1  SET_LENGTHW
   23  LblCom even  none     1      1  EOF_SYMBOL_PTR
   24  LblCom even  none     1      1  ERROR_SYMBOL_PTR
   25  LblCom even  none     1      1  BOF_SYMBOL_PTR
   26  LblCom even  none     1      1  OPTIONS
   27  LblCom even  none    26     32  OPTIONS_TEXT
   28  LblCom even  none   128    200  INSTR
PL6.E3A0      #004=OUT_STR File=LR_IO.:Z8A6TSI                                   SAT 08/09/97 09:33 Page:52   
   29  LblCom even  none     1      1  INSTR_LISTED
   30  LblCom even  none     1      1  INSTR_LEN
   31  LblCom even  none     1      1  INSTR_INDX
   32  LblCom even  none     1      1  EOF_FLAG
   33  LblCom even  none     3      3  KEY_REC
   34  LblCom even  none    28     34  LINE
   35  LblCom even  none     1      1  LINELEN
   36  LblCom even  none   205    315  TSTATS
   37  RoData even  UTS      5      5  OUT_STR
   38   Proc  even  none    40     50  OUT_STR
   39  RoData even  none     2      2  OUT_STR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    38      0   yes            yes      Std        2  OUT_STR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 FLUSH
         yes           Std       2 OUTPUT
                       nStd      0 X66_STATIC_2

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$OU                                  M$SO                                  M$LO
     M$SI                                  M$UI
PL6.E3A0      #004=OUT_STR File=LR_IO.:Z8A6TSI                                   SAT 08/09/97 09:33 Page:53   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID
PL6.E3A0      #004=OUT_STR File=LR_IO.:Z8A6TSI                                   SAT 08/09/97 09:33 Page:54   


      166        1        /*T***********************************************************/
      167        2        /*T*                                                         */
      168        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      169        4        /*T*                                                         */
      170        5        /*T***********************************************************/
      171        6        OUT_STR:PROC(STR,LEN) NOAUTO;

      6 38 000000   000000 700200 xent  OUT_STR      TSX0  ! X66_STATIC_2
        38 000001   000000 000002 0                  ZERO    0,2

      172        7
      173        8        /*D*
      174        9               NAME: OUT_STR
      175       10            PURPOSE: APPEND A STRING ONTO THE CURRENT OUTPUT LINE.
      176       11                     IF THE STRING EXCEEDS THE LINE LENGTH,
      177       12                     PRINT THE LINE.
      178       13        */
      179       14
      180       15
      181       16    1   DCL STR CHAR(LEN);
      182       17    1   DCL LEN SBIN;
      183       18
      184       19        %INCLUDE LR_GRAM_EXT;
      185      558
      186      559    1   DCL FLUSH ENTRY;
      187      560
      188      561    1           IF LEN+LINELEN>TEXTLIMIT THEN

    561 38 000002   000002 470400 0                  LDP0    @LEN
        38 000003   000000 236100                    LDQ     0,,PR0
        38 000004   000000 036000 35                 ADLQ    LINELEN
        38 000005   000155 116007                    CMPQ    109,DL
        38 000006   000020 604400 38                 TMOZ    s:568

      189      562    2             DO;

PL6.E3A0      #004=OUT_STR File=LR_IO.:Z8A6TSI                                   SAT 08/09/97 09:33 Page:55   
      190      563    2               CALL FLUSH;

    563 38 000007   000000 631400 39                 EPPR1   0
        38 000010   000000 701000 xent               TSX1    FLUSH
        38 000011   000000 011000                    NOP     0

      191      564    2               CALL INSERT(LINE, LINELEN, 20, '                    ');

    564 38 000012   000000 235000 35                 LDA     LINELEN
        38 000013   040005 100400                    MLR     fill='040'O
        38 000014   000000 000024 37                 ADSC9   0                        cn=0,n=20
        38 000015   000000 000024 34                 ADSC9   LINE,A                   cn=0,n=20

      192      565    2               LINELEN = LINELEN + 20;

    565 38 000016   000024 236007                    LDQ     20,DL
        38 000017   000000 056000 35                 ASQ     LINELEN

      193      566    2             END;

      194      567
      195      568    1           IF LINELEN + LEN > TEXTLIMIT THEN

    568 38 000020   000002 470400 0                  LDP0    @LEN
        38 000021   000000 236000 35                 LDQ     LINELEN
        38 000022   000000 036100                    ADLQ    0,,PR0
        38 000023   000155 116007                    CMPQ    109,DL
        38 000024   000033 604400 38                 TMOZ    s:575

      196      569    2             DO;

      197      570    2               CALL OUTPUT(STR, LEN);

    570 38 000025   000001 630400 0                  EPPR0   @STR
        38 000026   000001 631400 39                 EPPR1   1
        38 000027   000000 701000 xent               TSX1    OUTPUT
        38 000030   000000 011000                    NOP     0
PL6.E3A0      #004=OUT_STR File=LR_IO.:Z8A6TSI                                   SAT 08/09/97 09:33 Page:56   

      198      571    2               LINELEN = 0;

    571 38 000031   000000 450000 35                 STZ     LINELEN

      199      572    2             END;

    572 38 000032   000046 710000 38                 TRA     s:579

      200      573    1           ELSE
      201      574    2             DO;

      202      575    2               CALL INSERT(LINE,LINELEN,LEN,STR);

    575 38 000033   000000 720100                    LXL0    0,,PR0
        38 000034   000004 740000 0                  STX0    @LEN+2
        38 000035   000001 471400 0                  LDP1    @STR
        38 000036   000004 221000 0                  LDX1    @LEN+2
        38 000037   000000 235000 35                 LDA     LINELEN
        38 000040   040045 100540                    MLR     fill='040'O
        38 000041   100000 000011                    ADSC9   0,,PR1                   cn=0,n=*X1
        38 000042   000000 000010 34                 ADSC9   LINE,A                   cn=0,n=*X0

      203      576    2               LINELEN=LINELEN+LEN;

    576 38 000043   000000 236000 35                 LDQ     LINELEN
        38 000044   000000 036100                    ADLQ    0,,PR0
        38 000045   000000 756000 35                 STQ     LINELEN

      204      577    2             END;

      205      578
      206      579    1   END OUT_STR;

    579 38 000046   000000 221200 0                  LDX1  ! 0
        38 000047   000001 702211                    TSX2  ! 1,X1
      207      580        %EOD;
PL6.E3A0      #004=OUT_STR File=LR_IO.:Z8A6TSI                                   SAT 08/09/97 09:33 Page:57   

PL6.E3A0      #004=OUT_STR File=LR_IO.:Z8A6TSI                                   SAT 08/09/97 09:33 Page:58   
--  Include file information  --

   LR_IO_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   LR_GRAM_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure OUT_STR.
PL6.E3A0      #004=OUT_STR File=LR_IO.:Z8A6TSI                                   SAT 08/09/97 09:33 Page:59   

 **** Variables and constants ****

  ****  Section 000  Data  OUT_STR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     2-0-0/w PTR         r     1 @LEN                       1-0-0/w PTR         r     1 @STR
    *0-0-0/w SBIN        r     1 LEN                       *0-0-0/c ACHR        r     1 STR

  ****  Section 001 LblCom OUT_DCBN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 OUT_DCBN

  ****  Section 007 LblCom SYM_PTRS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 SYM_PTRS(0:1400)

  ****  Section 008 LblCom RIGHT_PARTS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/h SBIN(18)          1 RIGHT_PARTS(0:8000)

  ****  Section 009 LblCom PROD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/h STRC(72)          1 PROD(0:1500)
PL6.E3A0      #004=OUT_STR File=LR_IO.:Z8A6TSI                                   SAT 08/09/97 09:33 Page:60   

  ****  Section 010 LblCom NR_PROD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_PROD

  ****  Section 011 LblCom NR_SYMS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_SYMS

  ****  Section 012 LblCom NR_TERM

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_TERM

  ****  Section 013 LblCom LAST_ACT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LAST_ACT

  ****  Section 014 LblCom LAST_NULL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LAST_NULL

  ****  Section 015 LblCom NR_ONRIGHT
PL6.E3A0      #004=OUT_STR File=LR_IO.:Z8A6TSI                                   SAT 08/09/97 09:33 Page:61   

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_ONRIGHT

  ****  Section 016 LblCom NR_NT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_NT

  ****  Section 017 LblCom PROD_LEN_MAX_EVER

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 PROD_LEN_MAX_EVER

  ****  Section 018 LblCom LAST_ORDER_SPECIFIED

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LAST_ORDER_SPECIFIED

  ****  Section 019 LblCom SEMANTIC_ORDERING

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 SEMANTIC_ORDERING

  ****  Section 020 LblCom ERR_SEV

  ****  Scalars and arrays  ****
PL6.E3A0      #004=OUT_STR File=LR_IO.:Z8A6TSI                                   SAT 08/09/97 09:33 Page:62   
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ERR_SEV

  ****  Section 021 LblCom SET_LENGTHB

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 SET_LENGTHB

  ****  Section 022 LblCom SET_LENGTHW

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 SET_LENGTHW

  ****  Section 023 LblCom EOF_SYMBOL_PTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 EOF_SYMBOL_PTR

  ****  Section 024 LblCom ERROR_SYMBOL_PTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 ERROR_SYMBOL_PTR

  ****  Section 025 LblCom BOF_SYMBOL_PTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #004=OUT_STR File=LR_IO.:Z8A6TSI                                   SAT 08/09/97 09:33 Page:63   
     0-0-0/w PTR               1 BOF_SYMBOL_PTR

  ****  Section 026 LblCom OPTIONS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 OPTIONS(0:25)

  ****  Section 027 LblCom OPTIONS_TEXT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(4)           1 OPTIONS_TEXT(0:25)

  ****  Section 028 LblCom INSTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR              1 INSTR(0:511)               0-0-0/c CHAR(512)         1 INSTRCHR

  ****  Section 029 LblCom INSTR_LISTED

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 INSTR_LISTED

  ****  Section 030 LblCom INSTR_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 INSTR_LEN

PL6.E3A0      #004=OUT_STR File=LR_IO.:Z8A6TSI                                   SAT 08/09/97 09:33 Page:64   
  ****  Section 031 LblCom INSTR_INDX

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 INSTR_INDX

  ****  Section 032 LblCom EOF_FLAG

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 EOF_FLAG

  ****  Section 033 LblCom KEY_REC

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(10)          1 KEY_REC

  ****  Section 034 LblCom LINE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(109)   r     1 LINE

  ****  Section 035 LblCom LINELEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 LINELEN

  ****  Section 036 LblCom TSTATS

PL6.E3A0      #004=OUT_STR File=LR_IO.:Z8A6TSI                                   SAT 08/09/97 09:33 Page:65   
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(7380)        1 TSTATS

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0N  NULL        r     1 M$LO                       0-0-0N  NULL        r     1 M$OU
     0-0-0N  NULL        r     1 M$SI                       0-0-0N  NULL        r     1 M$SO
     0-0-0N  NULL        r     1 M$UI                       0-0-0/w STRC(351)         1 SYMBOL


   Procedure OUT_STR requires 40 words for executable code.
   Procedure OUT_STR is declared NOAUTO and requires 6 words of local(STATIC) storage.

PL6.E3A0      #005=OUT_DEC File=LR_IO.:Z8A6TSI                                   SAT 08/09/97 09:33 Page:66   
      208        1        /*T***********************************************************/
      209        2        /*T*                                                         */
      210        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      211        4        /*T*                                                         */
      212        5        /*T***********************************************************/
      213        6        OUT_DEC:PROC(SGN) NOAUTO;
      214        7
      215        8        /*D*
      216        9               NAME: OUT_DEC
      217       10            PURPOSE: APPEND A DECIMAL NUMBER TO THE OUTPUT LINE.
      218       11        */
      219       12
      220       13
      221       14    1   DCL N SBIN;
      222       15    1   DCL SGN SBIN;
      223       16    1   DCL DISP SBIN;
      224       17    1   DCL OSTR CHAR(16);
      225       18
      226       19        %INCLUDE LR_GRAM_EXT;
      227      558
      228      559
      229      560    1   DCL OUT_STR ENTRY(2);
      230      561
      231      562    1           N=SGN;
      232      563    1           IF SGN<0 THEN
      233      564    1              N=-SGN;
      234      565
      235      566    1           CALL BINCHAR(OSTR,N);
      236      567
      237      568    1           DISP=1;
      238      569
      239      570    2           DO WHILE(DISP<=14 & SUBSTR(OSTR,DISP,1)='0');
      240      571    2              DISP=DISP+1;
      241      572    2              END;
      242      573
      243      574    1           IF SGN<0 THEN
      244      575    2           DO;
PL6.E3A0      #005=OUT_DEC File=LR_IO.:Z8A6TSI                                   SAT 08/09/97 09:33 Page:67   
      245      576    2              DISP=DISP-1;
      246      577    2              CALL INSERT(OSTR,DISP,1,'-');
      247      578    2              END;
      248      579
      249      580    1           CALL OUT_STR(SUBSTR(OSTR,DISP,1),LENGTHC(OSTR)-DISP);
      250      581
      251      582    1   END OUT_DEC;
      252      583        %EOD;

PL6.E3A0      #005=OUT_DEC File=LR_IO.:Z8A6TSI                                   SAT 08/09/97 09:33 Page:68   
--  Include file information  --

   LR_IO_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   LR_GRAM_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure OUT_DEC.

   Procedure OUT_DEC requires 56 words for executable code.
   Procedure OUT_DEC is declared NOAUTO and requires 12 words of local(STATIC) storage.

PL6.E3A0      #005=OUT_DEC File=LR_IO.:Z8A6TSI                                   SAT 08/09/97 09:33 Page:69   

 Object Unit name= OUT_DEC                                    File name= LR_IO.:Z8A6TOU
 UTS= AUG 09 '97 09:33:21.24 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none    12     14  OUT_DEC
    1  LblCom even  none     1      1  OUT_DCBN
    2   DCB   even  none     0      0  M$OU
    3   DCB   even  none     0      0  M$SO
    4   DCB   even  none     0      0  M$LO
    5   DCB   even  none     0      0  M$SI
    6   DCB   even  none     0      0  M$UI
    7  LblCom even  none  1401   2571  SYM_PTRS
    8  LblCom even  none  4001   7641  RIGHT_PARTS
    9  LblCom even  none  3002   5672  PROD
   10  LblCom even  none     1      1  NR_PROD
   11  LblCom even  none     1      1  NR_SYMS
   12  LblCom even  none     1      1  NR_TERM
   13  LblCom even  none     1      1  LAST_ACT
   14  LblCom even  none     1      1  LAST_NULL
   15  LblCom even  none     1      1  NR_ONRIGHT
   16  LblCom even  none     1      1  NR_NT
   17  LblCom even  none     1      1  PROD_LEN_MAX_EVER
   18  LblCom even  none     1      1  LAST_ORDER_SPECIFIED
   19  LblCom even  none     1      1  SEMANTIC_ORDERING
   20  LblCom even  none     1      1  ERR_SEV
   21  LblCom even  none     1      1  SET_LENGTHB
   22  LblCom even  none     1      1  SET_LENGTHW
   23  LblCom even  none     1      1  EOF_SYMBOL_PTR
   24  LblCom even  none     1      1  ERROR_SYMBOL_PTR
   25  LblCom even  none     1      1  BOF_SYMBOL_PTR
   26  LblCom even  none     1      1  OPTIONS
   27  LblCom even  none    26     32  OPTIONS_TEXT
   28  LblCom even  none   128    200  INSTR
PL6.E3A0      #005=OUT_DEC File=LR_IO.:Z8A6TSI                                   SAT 08/09/97 09:33 Page:70   
   29  LblCom even  none     1      1  INSTR_LISTED
   30  LblCom even  none     1      1  INSTR_LEN
   31  LblCom even  none     1      1  INSTR_INDX
   32  LblCom even  none     1      1  EOF_FLAG
   33  LblCom even  none     3      3  KEY_REC
   34  LblCom even  none    28     34  LINE
   35  LblCom even  none     1      1  LINELEN
   36  LblCom even  none   205    315  TSTATS
   37   Proc  even  none    56     70  OUT_DEC
   38  RoData even  none     4      4  OUT_DEC

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    37      0   yes            yes      Std        1  OUT_DEC

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 OUT_STR
                       nStd      0 X66_STATIC_1

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$OU                                  M$SO                                  M$LO
     M$SI                                  M$UI
PL6.E3A0      #005=OUT_DEC File=LR_IO.:Z8A6TSI                                   SAT 08/09/97 09:33 Page:71   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #005=OUT_DEC File=LR_IO.:Z8A6TSI                                   SAT 08/09/97 09:33 Page:72   


      208        1        /*T***********************************************************/
      209        2        /*T*                                                         */
      210        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      211        4        /*T*                                                         */
      212        5        /*T***********************************************************/
      213        6        OUT_DEC:PROC(SGN) NOAUTO;

      6 37 000000   000000 700200 xent  OUT_DEC      TSX0  ! X66_STATIC_1
        37 000001   000000 000001 0                  ZERO    0,1

      214        7
      215        8        /*D*
      216        9               NAME: OUT_DEC
      217       10            PURPOSE: APPEND A DECIMAL NUMBER TO THE OUTPUT LINE.
      218       11        */
      219       12
      220       13
      221       14    1   DCL N SBIN;
      222       15    1   DCL SGN SBIN;
      223       16    1   DCL DISP SBIN;
      224       17    1   DCL OSTR CHAR(16);
      225       18
      226       19        %INCLUDE LR_GRAM_EXT;
      227      558
      228      559
      229      560    1   DCL OUT_STR ENTRY(2);
      230      561
      231      562    1           N=SGN;

    562 37 000002   000001 470400 0                  LDP0    @SGN
        37 000003   000000 235100                    LDA     0,,PR0
        37 000004   000002 755000 0                  STA     N

      232      563    1           IF SGN<0 THEN

    563 37 000005   000011 605000 37                 TPL     s:566
PL6.E3A0      #005=OUT_DEC File=LR_IO.:Z8A6TSI                                   SAT 08/09/97 09:33 Page:73   

      233      564    1              N=-SGN;

    564 37 000006   000000 235100                    LDA     0,,PR0
        37 000007   000000 531000                    NEG     0
        37 000010   000002 755000 0                  STA     N

      234      565
      235      566    1           CALL BINCHAR(OSTR,N);

    566 37 000011   000000 301400                    BTD
        37 000012   000002 000004 0                  NDSC9   N                        cn=0,s=lsgnf,sf=0,n=4
        37 000013   000004 030020 0                  NDSC9   OSTR                     cn=0,s=nosgn,sf=0,n=16

      236      567
      237      568    1           DISP=1;

    568 37 000014   000001 236007                    LDQ     1,DL
        37 000015   000003 756000 0                  STQ     DISP

      238      569
      239      570    2           DO WHILE(DISP<=14 & SUBSTR(OSTR,DISP,1)='0');

    570 37 000016   000020 710000 37                 TRA     s:572

      240      571    2              DISP=DISP+1;

    571 37 000017   000003 054000 0                  AOS     DISP

      241      572    2              END;

    572 37 000020   400000 220003                    LDX0    -131072,DU
        37 000021   000003 235000 0                  LDA     DISP
        37 000022   040000 106405                    CMPC    fill='040'O
        37 000023   000004 000001 0                  ADSC9   OSTR,A                   cn=0,n=1
        37 000024   000000 000001 38                 ADSC9   0                        cn=0,n=1
        37 000025   000027 600000 37                 TZE     s:572+7
PL6.E3A0      #005=OUT_DEC File=LR_IO.:Z8A6TSI                                   SAT 08/09/97 09:33 Page:74   
        37 000026   000000 220003                    LDX0    0,DU
        37 000027   400000 221003                    LDX1    -131072,DU
        37 000030   000016 115007                    CMPA    14,DL
        37 000031   000033 604400 37                 TMOZ    s:572+11
        37 000032   000000 221003                    LDX1    0,DU
        37 000033   000000 636011                    EAQ     0,X1
        37 000034   000010 756000 0                  STQ     OSTR+4
        37 000035   000000 636010                    EAQ     0,X0
        37 000036   000010 376000 0                  ANQ     OSTR+4
        37 000037   000017 601000 37                 TNZ     s:571

      242      573
      243      574    1           IF SGN<0 THEN

    574 37 000040   000001 470400 0                  LDP0    @SGN
        37 000041   000000 235100                    LDA     0,,PR0
        37 000042   000051 605000 37                 TPL     s:580

      244      575    2           DO;

      245      576    2              DISP=DISP-1;

    576 37 000043   000001 336007                    LCQ     1,DL
        37 000044   000003 056000 0                  ASQ     DISP

      246      577    2              CALL INSERT(OSTR,DISP,1,'-');

    577 37 000045   000003 235000 0                  LDA     DISP
        37 000046   040005 100400                    MLR     fill='040'O
        37 000047   000001 000001 38                 ADSC9   1                        cn=0,n=1
        37 000050   000004 000001 0                  ADSC9   OSTR,A                   cn=0,n=1

      247      578    2              END;

      248      579
      249      580    1           CALL OUT_STR(SUBSTR(OSTR,DISP,1),LENGTHC(OSTR)-DISP);

PL6.E3A0      #005=OUT_DEC File=LR_IO.:Z8A6TSI                                   SAT 08/09/97 09:33 Page:75   
    580 37 000051   000020 235007                    LDA     16,DL
        37 000052   000003 135000 0                  SBLA    DISP
        37 000053   000010 755000 0                  STA     OSTR+4
        37 000054   000010 631400 0                  EPPR1   OSTR+4
        37 000055   000013 451400 0                  STP1    OSTR+7
        37 000056   000003 236000 0                  LDQ     DISP
        37 000057   000020 736000                    QLS     16
        37 000060   000003 036000 38                 ADLQ    3
        37 000061   000012 756000 0                  STQ     OSTR+6
        37 000062   000012 630400 0                  EPPR0   OSTR+6
        37 000063   000002 631400 38                 EPPR1   2
        37 000064   000000 701000 xent               TSX1    OUT_STR
        37 000065   000000 011000                    NOP     0

      250      581
      251      582    1   END OUT_DEC;

    582 37 000066   000000 221200 0                  LDX1  ! 0
        37 000067   000001 702211                    TSX2  ! 1,X1
      252      583        %EOD;

PL6.E3A0      #005=OUT_DEC File=LR_IO.:Z8A6TSI                                   SAT 08/09/97 09:33 Page:76   
--  Include file information  --

   LR_IO_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   LR_GRAM_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure OUT_DEC.
PL6.E3A0      #005=OUT_DEC File=LR_IO.:Z8A6TSI                                   SAT 08/09/97 09:33 Page:77   

 **** Variables and constants ****

  ****  Section 000  Data  OUT_DEC

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     1-0-0/w PTR         r     1 @SGN                       3-0-0/w SBIN        r     1 DISP
     2-0-0/w SBIN        r     1 N                          4-0-0/c CHAR(16)    r     1 OSTR
    *0-0-0/w SBIN        r     1 SGN

  ****  Section 001 LblCom OUT_DCBN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 OUT_DCBN

  ****  Section 007 LblCom SYM_PTRS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 SYM_PTRS(0:1400)

  ****  Section 008 LblCom RIGHT_PARTS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/h SBIN(18)          1 RIGHT_PARTS(0:8000)

  ****  Section 009 LblCom PROD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #005=OUT_DEC File=LR_IO.:Z8A6TSI                                   SAT 08/09/97 09:33 Page:78   
     0-0-0/h STRC(72)          1 PROD(0:1500)

  ****  Section 010 LblCom NR_PROD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_PROD

  ****  Section 011 LblCom NR_SYMS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_SYMS

  ****  Section 012 LblCom NR_TERM

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_TERM

  ****  Section 013 LblCom LAST_ACT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LAST_ACT

  ****  Section 014 LblCom LAST_NULL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LAST_NULL

PL6.E3A0      #005=OUT_DEC File=LR_IO.:Z8A6TSI                                   SAT 08/09/97 09:33 Page:79   
  ****  Section 015 LblCom NR_ONRIGHT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_ONRIGHT

  ****  Section 016 LblCom NR_NT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_NT

  ****  Section 017 LblCom PROD_LEN_MAX_EVER

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 PROD_LEN_MAX_EVER

  ****  Section 018 LblCom LAST_ORDER_SPECIFIED

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LAST_ORDER_SPECIFIED

  ****  Section 019 LblCom SEMANTIC_ORDERING

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 SEMANTIC_ORDERING

  ****  Section 020 LblCom ERR_SEV

PL6.E3A0      #005=OUT_DEC File=LR_IO.:Z8A6TSI                                   SAT 08/09/97 09:33 Page:80   
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ERR_SEV

  ****  Section 021 LblCom SET_LENGTHB

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 SET_LENGTHB

  ****  Section 022 LblCom SET_LENGTHW

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 SET_LENGTHW

  ****  Section 023 LblCom EOF_SYMBOL_PTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 EOF_SYMBOL_PTR

  ****  Section 024 LblCom ERROR_SYMBOL_PTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 ERROR_SYMBOL_PTR

  ****  Section 025 LblCom BOF_SYMBOL_PTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #005=OUT_DEC File=LR_IO.:Z8A6TSI                                   SAT 08/09/97 09:33 Page:81   

     0-0-0/w PTR               1 BOF_SYMBOL_PTR

  ****  Section 026 LblCom OPTIONS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 OPTIONS(0:25)

  ****  Section 027 LblCom OPTIONS_TEXT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(4)           1 OPTIONS_TEXT(0:25)

  ****  Section 028 LblCom INSTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR              1 INSTR(0:511)               0-0-0/c CHAR(512)         1 INSTRCHR

  ****  Section 029 LblCom INSTR_LISTED

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 INSTR_LISTED

  ****  Section 030 LblCom INSTR_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 INSTR_LEN
PL6.E3A0      #005=OUT_DEC File=LR_IO.:Z8A6TSI                                   SAT 08/09/97 09:33 Page:82   

  ****  Section 031 LblCom INSTR_INDX

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 INSTR_INDX

  ****  Section 032 LblCom EOF_FLAG

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 EOF_FLAG

  ****  Section 033 LblCom KEY_REC

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(10)          1 KEY_REC

  ****  Section 034 LblCom LINE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(109)         1 LINE

  ****  Section 035 LblCom LINELEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LINELEN

  ****  Section 036 LblCom TSTATS
PL6.E3A0      #005=OUT_DEC File=LR_IO.:Z8A6TSI                                   SAT 08/09/97 09:33 Page:83   

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(7380)        1 TSTATS

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0N  NULL        r     1 M$LO                       0-0-0N  NULL        r     1 M$OU
     0-0-0N  NULL        r     1 M$SI                       0-0-0N  NULL        r     1 M$SO
     0-0-0N  NULL        r     1 M$UI                       0-0-0/w STRC(351)         1 SYMBOL


   Procedure OUT_DEC requires 56 words for executable code.
   Procedure OUT_DEC is declared NOAUTO and requires 12 words of local(STATIC) storage.

PL6.E3A0      #006=FLUSH File=LR_IO.:Z8A6TSI                                     SAT 08/09/97 09:33 Page:84   
      253        1        /*T***********************************************************/
      254        2        /*T*                                                         */
      255        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      256        4        /*T*                                                         */
      257        5        /*T***********************************************************/
      258        6        FLUSH:  PROC NOAUTO;
      259        7
      260        8        /*D*
      261        9               NAME: FLUSH
      262       10            PURPOSE: WRITE THE OUTPUT LINE TO THE CURRENT
      263       11                     OUTPUT FILE.
      264       12        */
      265       13
      266       14
      267       15        %INCLUDE LR_GRAM_EXT;
      268      554    1       IF LINELEN > 0 THEN
      269      555    1           CALL OUTPUT(LINE, LINELEN);
      270      556
      271      557    1   END FLUSH;
      272      558        %EOD;

PL6.E3A0      #006=FLUSH File=LR_IO.:Z8A6TSI                                     SAT 08/09/97 09:33 Page:85   
--  Include file information  --

   LR_IO_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   LR_GRAM_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FLUSH.

   Procedure FLUSH requires 9 words for executable code.
   Procedure FLUSH is declared NOAUTO and requires 2 words of local(STATIC) storage.

PL6.E3A0      #006=FLUSH File=LR_IO.:Z8A6TSI                                     SAT 08/09/97 09:33 Page:86   

 Object Unit name= FLUSH                                      File name= LR_IO.:Z8A6TOU
 UTS= AUG 09 '97 09:33:33.72 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none     2      2  FLUSH
    1  LblCom even  none     1      1  OUT_DCBN
    2   DCB   even  none     0      0  M$OU
    3   DCB   even  none     0      0  M$SO
    4   DCB   even  none     0      0  M$LO
    5   DCB   even  none     0      0  M$SI
    6   DCB   even  none     0      0  M$UI
    7  LblCom even  none  1401   2571  SYM_PTRS
    8  LblCom even  none  4001   7641  RIGHT_PARTS
    9  LblCom even  none  3002   5672  PROD
   10  LblCom even  none     1      1  NR_PROD
   11  LblCom even  none     1      1  NR_SYMS
   12  LblCom even  none     1      1  NR_TERM
   13  LblCom even  none     1      1  LAST_ACT
   14  LblCom even  none     1      1  LAST_NULL
   15  LblCom even  none     1      1  NR_ONRIGHT
   16  LblCom even  none     1      1  NR_NT
   17  LblCom even  none     1      1  PROD_LEN_MAX_EVER
   18  LblCom even  none     1      1  LAST_ORDER_SPECIFIED
   19  LblCom even  none     1      1  SEMANTIC_ORDERING
   20  LblCom even  none     1      1  ERR_SEV
   21  LblCom even  none     1      1  SET_LENGTHB
   22  LblCom even  none     1      1  SET_LENGTHW
   23  LblCom even  none     1      1  EOF_SYMBOL_PTR
   24  LblCom even  none     1      1  ERROR_SYMBOL_PTR
   25  LblCom even  none     1      1  BOF_SYMBOL_PTR
   26  LblCom even  none     1      1  OPTIONS
   27  LblCom even  none    26     32  OPTIONS_TEXT
   28  LblCom even  none   128    200  INSTR
PL6.E3A0      #006=FLUSH File=LR_IO.:Z8A6TSI                                     SAT 08/09/97 09:33 Page:87   
   29  LblCom even  none     1      1  INSTR_LISTED
   30  LblCom even  none     1      1  INSTR_LEN
   31  LblCom even  none     1      1  INSTR_INDX
   32  LblCom even  none     1      1  EOF_FLAG
   33  LblCom even  none     3      3  KEY_REC
   34  LblCom even  none    28     34  LINE
   35  LblCom even  none     1      1  LINELEN
   36  LblCom even  none   205    315  TSTATS
   37   Proc  even  none     9     11  FLUSH
   38  RoData even  none     3      3  FLUSH

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    37      0   yes            yes      Std        0  FLUSH

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 OUTPUT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$OU                                  M$SO                                  M$LO
     M$SI                                  M$UI
PL6.E3A0      #006=FLUSH File=LR_IO.:Z8A6TSI                                     SAT 08/09/97 09:33 Page:88   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #006=FLUSH File=LR_IO.:Z8A6TSI                                     SAT 08/09/97 09:33 Page:89   


      253        1        /*T***********************************************************/
      254        2        /*T*                                                         */
      255        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      256        4        /*T*                                                         */
      257        5        /*T***********************************************************/
      258        6        FLUSH:  PROC NOAUTO;

      6 37 000000   000000 741200 0     FLUSH        STX1  ! 0

      259        7
      260        8        /*D*
      261        9               NAME: FLUSH
      262       10            PURPOSE: WRITE THE OUTPUT LINE TO THE CURRENT
      263       11                     OUTPUT FILE.
      264       12        */
      265       13
      266       14
      267       15        %INCLUDE LR_GRAM_EXT;
      268      554    1       IF LINELEN > 0 THEN

    554 37 000001   000000 235000 35                 LDA     LINELEN
        37 000002   000007 604400 37                 TMOZ    s:557

      269      555    1           CALL OUTPUT(LINE, LINELEN);

    555 37 000003   000001 630400 38                 EPPR0   1
        37 000004   000000 631400 38                 EPPR1   0
        37 000005   000000 701000 xent               TSX1    OUTPUT
        37 000006   000000 011000                    NOP     0

      270      556
      271      557    1   END FLUSH;

    557 37 000007   000000 221200 0                  LDX1  ! 0
        37 000010   000001 702211                    TSX2  ! 1,X1
      272      558        %EOD;
PL6.E3A0      #006=FLUSH File=LR_IO.:Z8A6TSI                                     SAT 08/09/97 09:33 Page:90   

PL6.E3A0      #006=FLUSH File=LR_IO.:Z8A6TSI                                     SAT 08/09/97 09:33 Page:91   
--  Include file information  --

   LR_IO_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   LR_GRAM_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FLUSH.
PL6.E3A0      #006=FLUSH File=LR_IO.:Z8A6TSI                                     SAT 08/09/97 09:33 Page:92   

 **** Variables and constants ****

  ****  Section 001 LblCom OUT_DCBN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 OUT_DCBN

  ****  Section 007 LblCom SYM_PTRS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 SYM_PTRS(0:1400)

  ****  Section 008 LblCom RIGHT_PARTS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/h SBIN(18)          1 RIGHT_PARTS(0:8000)

  ****  Section 009 LblCom PROD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/h STRC(72)          1 PROD(0:1500)

  ****  Section 010 LblCom NR_PROD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_PROD

PL6.E3A0      #006=FLUSH File=LR_IO.:Z8A6TSI                                     SAT 08/09/97 09:33 Page:93   
  ****  Section 011 LblCom NR_SYMS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_SYMS

  ****  Section 012 LblCom NR_TERM

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_TERM

  ****  Section 013 LblCom LAST_ACT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LAST_ACT

  ****  Section 014 LblCom LAST_NULL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LAST_NULL

  ****  Section 015 LblCom NR_ONRIGHT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_ONRIGHT

  ****  Section 016 LblCom NR_NT

PL6.E3A0      #006=FLUSH File=LR_IO.:Z8A6TSI                                     SAT 08/09/97 09:33 Page:94   
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_NT

  ****  Section 017 LblCom PROD_LEN_MAX_EVER

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 PROD_LEN_MAX_EVER

  ****  Section 018 LblCom LAST_ORDER_SPECIFIED

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LAST_ORDER_SPECIFIED

  ****  Section 019 LblCom SEMANTIC_ORDERING

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 SEMANTIC_ORDERING

  ****  Section 020 LblCom ERR_SEV

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ERR_SEV

  ****  Section 021 LblCom SET_LENGTHB

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #006=FLUSH File=LR_IO.:Z8A6TSI                                     SAT 08/09/97 09:33 Page:95   

     0-0-0/w SBIN              1 SET_LENGTHB

  ****  Section 022 LblCom SET_LENGTHW

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 SET_LENGTHW

  ****  Section 023 LblCom EOF_SYMBOL_PTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 EOF_SYMBOL_PTR

  ****  Section 024 LblCom ERROR_SYMBOL_PTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 ERROR_SYMBOL_PTR

  ****  Section 025 LblCom BOF_SYMBOL_PTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 BOF_SYMBOL_PTR

  ****  Section 026 LblCom OPTIONS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 OPTIONS(0:25)
PL6.E3A0      #006=FLUSH File=LR_IO.:Z8A6TSI                                     SAT 08/09/97 09:33 Page:96   

  ****  Section 027 LblCom OPTIONS_TEXT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(4)           1 OPTIONS_TEXT(0:25)

  ****  Section 028 LblCom INSTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR              1 INSTR(0:511)               0-0-0/c CHAR(512)         1 INSTRCHR

  ****  Section 029 LblCom INSTR_LISTED

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 INSTR_LISTED

  ****  Section 030 LblCom INSTR_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 INSTR_LEN

  ****  Section 031 LblCom INSTR_INDX

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 INSTR_INDX

  ****  Section 032 LblCom EOF_FLAG
PL6.E3A0      #006=FLUSH File=LR_IO.:Z8A6TSI                                     SAT 08/09/97 09:33 Page:97   

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 EOF_FLAG

  ****  Section 033 LblCom KEY_REC

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(10)          1 KEY_REC

  ****  Section 034 LblCom LINE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(109)   r     1 LINE

  ****  Section 035 LblCom LINELEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 LINELEN

  ****  Section 036 LblCom TSTATS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(7380)        1 TSTATS

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
PL6.E3A0      #006=FLUSH File=LR_IO.:Z8A6TSI                                     SAT 08/09/97 09:33 Page:98   
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0N  NULL        r     1 M$LO                       0-0-0N  NULL        r     1 M$OU
     0-0-0N  NULL        r     1 M$SI                       0-0-0N  NULL        r     1 M$SO
     0-0-0N  NULL        r     1 M$UI                       0-0-0/w STRC(351)         1 SYMBOL


   Procedure FLUSH requires 9 words for executable code.
   Procedure FLUSH is declared NOAUTO and requires 2 words of local(STATIC) storage.

PL6.E3A0      #007=OPEN_TABLES File=LR_IO.:Z8A6TSI                               SAT 08/09/97 09:33 Page:99   
      273        1        /*T***********************************************************/
      274        2        /*T*                                                         */
      275        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      276        4        /*T*                                                         */
      277        5        /*T***********************************************************/
      278        6        OPEN_TABLES : PROC;
      279        7
      280        8        /*D*
      281        9               NAME: OPEN_TABLES
      282       10            PURPOSE: OPEN THE OU & SO FILES IN PREPARATION FOR
      283       11                     WRITING OUTPUT TABLES.
      284       12        */
      285       13
      286       14        %INCLUDE CP_6;
      287     5574        %INCLUDE XS_MACRO_C;
      288     5618        %INCLUDE B$JIT;
      289     6221        %INCLUDE LR_GRAM_EXT;
      290     6760
      291     6761    1   DCL B$JIT$ PTR SYMREF;
      292     6762    1   DCL XSA$OPEN ENTRY(2)  ALTRET;
      293     6763    1   DCL XSA$CLOSE ENTRY(2) ALTRET;
      294     6764
      295     6765
      296     6766        /* fpt's */
      297     6767    1   DCL OU_TEXT CHAR(256) STATIC  /* FOR M$UNFID */;
      298     6768        %FPT_UNFID(DCB=M$OU,TEXTFID=OU_TEXT);
      299     6786
      300     6787        %FPT_FID(ACCT=VLP_ACCT,NAME=VLP_NAME,PASS=VLP_PASS,
      301     6788                 SN=VLP_SN,TEXTFID=OU_TEXT,WSN=VLP_WSN,
      302     6789                 RES=SO_OPEN.V.RES#,ASN=SO_OPEN.V.ASN#,
      303     6790                 RESULTS=VLR_FID);
      304     6813
      305     6814        %VLP_ACCT;
      306     6827        %VLP_NAME;
      307     6854        %VLP_PASS;
      308     6867        %VLP_SN;
      309     6880        %VLP_WSN;
PL6.E3A0      #007=OPEN_TABLES File=LR_IO.:Z8A6TSI                               SAT 08/09/97 09:33 Page:100  
      310     6893        %VLR_FID;
      311     6912
      312     6913        %FPT_OPEN(FPTN=OU_OPEN,FUN=CREATE,ACS=SEQUEN,CTG=NO,
      313     6914                  ORG=CONSEC,DCB=M$OU);
      314     7023
      315     7024        %FPT_OPEN(FPTN=SO_OPEN,FUN=CREATE,ACS=SEQUEN,CTG=NO,
      316     7025                  ORG=CONSEC,DCB=M$SO,ACCT=VLP_ACCT,NAME=VLP_NAME,
      317     7026                  PASS=VLP_PASS,SN=VLP_SN);
      318     7135
      319     7136    1   DCL BUFFER_OU CHAR(4096) EXT;
      320     7137    1   DCL BUFFER_SO CHAR(4096) EXT;
      321     7138        %XSA_PARAM(FPTN=XSA_PARAM_OU,STCLASS=EXT,BBUF=BUFFER_OU);
      322     7168        %XSA_PARAM(FPTN=XSA_PARAM_SO,STCLASS=EXT,BBUF=BUFFER_SO);
      323     7198
      324     7199
      325     7200        /* Opening of the dcb's.
      326     7201
      327     7202            1) OPEN M$OU normally, the do M$UNFID to get textual image
      328     7203               into OU_TEXT.
      329     7204            2) Apply M$FID to OU_TEXT to get proper name, acct, sn
      330     7205               VLP fields for later M$OPEN
      331     7206            3) Massage VLP_NAME to add the characters _SUBS to its file name.
      332     7207            4) Now open M$SO with the parameters almost matching those
      333     7208               of M$OU.
      334     7209
      335     7210           */
      336     7211    1           IF NOT OPTIONS(OU_OPT) THEN
      337     7212    1              RETURN /* no output requested */;
      338     7213
      339     7214
      340     7215    1           CALL XSA$OPEN(OU_OPEN,XSA_PARAM_OU) /* ALTRET(GOING_DOWN) */ ;
      341     7216
      342     7217    1           CALL M$UNFID(FPT_UNFID) /* ALTRET(GOING_DOWN) */ ;
      343     7218
      344     7219    1           CALL M$FID(FPT_FID) /* ALTRET(GOING_DOWN) */ ;
      345     7220
      346     7221    1           CALL INSERT(VLP_NAME.NAME#,VLP_NAME.L#,5,'_SUBS');
PL6.E3A0      #007=OPEN_TABLES File=LR_IO.:Z8A6TSI                               SAT 08/09/97 09:33 Page:101  
      347     7222
      348     7223    1           VLP_NAME.L#=VLP_NAME.L#+5;
      349     7224
      350     7225    1           CALL XSA$OPEN(SO_OPEN,XSA_PARAM_SO) /* ALTRET(GOING_DOWN) */ ;
      351     7226
      352     7227    1           RETURN;
      353     7228
      354     7229    1   CLOSE_TABLES : ENTRY;
      355     7230
      356     7231    1           CALL XSA$CLOSE(OU_OPEN, XSA_PARAM_OU) ;
      357     7232
      358     7233    1           CALL XSA$CLOSE(SO_OPEN, XSA_PARAM_SO);
      359     7234
      360     7235    1           RETURN;
      361     7236
      362     7237    1   END OPEN_TABLES;
      363     7238        %EOD;

PL6.E3A0      #007=OPEN_TABLES File=LR_IO.:Z8A6TSI                               SAT 08/09/97 09:33 Page:102  
--  Include file information  --

   LR_IO_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   LR_GRAM_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:LIB_E04  is referenced.
   B$JIT.:LIB_E04  cannot be made into a system file and is referenced.
   XS_MACRO_C.:LIB_E04  is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure OPEN_TABLES.

   Procedure OPEN_TABLES requires 40 words for executable code.
   Procedure OPEN_TABLES requires 4 words of local(AUTO) storage.

PL6.E3A0      #007=OPEN_TABLES File=LR_IO.:Z8A6TSI                               SAT 08/09/97 09:33 Page:103  

 Object Unit name= OPEN_TABLES                                File name= LR_IO.:Z8A6TOU
 UTS= AUG 09 '97 09:33:45.36 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  LblCom even  none     1      1  OUT_DCBN
    2   DCB   even  none     0      0  M$OU
    3   DCB   even  none     0      0  M$SO
    4   DCB   even  none     0      0  M$LO
    5   DCB   even  none     0      0  M$SI
    6   DCB   even  none     0      0  M$UI
    7  LblCom even  none  1401   2571  SYM_PTRS
    8  LblCom even  none  4001   7641  RIGHT_PARTS
    9  LblCom even  none  3002   5672  PROD
   10  LblCom even  none     1      1  NR_PROD
   11  LblCom even  none     1      1  NR_SYMS
   12  LblCom even  none     1      1  NR_TERM
   13  LblCom even  none     1      1  LAST_ACT
   14  LblCom even  none     1      1  LAST_NULL
   15  LblCom even  none     1      1  NR_ONRIGHT
   16  LblCom even  none     1      1  NR_NT
   17  LblCom even  none     1      1  PROD_LEN_MAX_EVER
   18  LblCom even  none     1      1  LAST_ORDER_SPECIFIED
   19  LblCom even  none     1      1  SEMANTIC_ORDERING
   20  LblCom even  none     1      1  ERR_SEV
   21  LblCom even  none     1      1  SET_LENGTHB
   22  LblCom even  none     1      1  SET_LENGTHW
   23  LblCom even  none     1      1  EOF_SYMBOL_PTR
   24  LblCom even  none     1      1  ERROR_SYMBOL_PTR
   25  LblCom even  none     1      1  BOF_SYMBOL_PTR
   26  LblCom even  none     1      1  OPTIONS
   27  LblCom even  none    26     32  OPTIONS_TEXT
   28  LblCom even  none   128    200  INSTR
PL6.E3A0      #007=OPEN_TABLES File=LR_IO.:Z8A6TSI                               SAT 08/09/97 09:33 Page:104  
   29  LblCom even  none     1      1  INSTR_LISTED
   30  LblCom even  none     1      1  INSTR_LEN
   31  LblCom even  none     1      1  INSTR_INDX
   32  LblCom even  none     1      1  EOF_FLAG
   33  LblCom even  none     3      3  KEY_REC
   34  LblCom even  none    28     34  LINE
   35  LblCom even  none     1      1  LINELEN
   36  LblCom even  none   205    315  TSTATS
   37   Data  even  none   254    376  OPEN_TABLES
   38  LblCom even  none  1024   2000  BUFFER_OU
   39  LblCom even  none  1024   2000  BUFFER_SO
   40  LblCom even  none    14     16  XSA_PARAM_OU
   41  LblCom even  none    14     16  XSA_PARAM_SO
   42  RoData even  UTS      2      2  OPEN_TABLES
   43   Proc  even  none    40     50  OPEN_TABLES
   44  RoData even  none     5      5  OPEN_TABLES

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    43      0   yes            yes      Std        0  OPEN_TABLES
    43     35                  yes      Std        0  CLOSE_TABLES

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 XSA$OPEN
 yes     yes           Std       2 XSA$CLOSE
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET
PL6.E3A0      #007=OPEN_TABLES File=LR_IO.:Z8A6TSI                               SAT 08/09/97 09:33 Page:105  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$OU                                  M$SO
     M$LO                                  M$SI                                  M$UI
     B$JIT$

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #007=OPEN_TABLES File=LR_IO.:Z8A6TSI                               SAT 08/09/97 09:33 Page:106  


      273        1        /*T***********************************************************/
      274        2        /*T*                                                         */
      275        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      276        4        /*T*                                                         */
      277        5        /*T***********************************************************/
      278        6        OPEN_TABLES : PROC;

      6 43 000000   000000 700200 xent  OPEN_TABLES  TSX0  ! X66_AUTO_0
        43 000001   000004 000000                    ZERO    4,0

      279        7
      280        8        /*D*
      281        9               NAME: OPEN_TABLES
      282       10            PURPOSE: OPEN THE OU & SO FILES IN PREPARATION FOR
      283       11                     WRITING OUTPUT TABLES.
      284       12        */
      285       13
      286       14        %INCLUDE CP_6;
      287     5574        %INCLUDE XS_MACRO_C;
      288     5618        %INCLUDE B$JIT;
      289     6221        %INCLUDE LR_GRAM_EXT;
      290     6760
      291     6761    1   DCL B$JIT$ PTR SYMREF;
      292     6762    1   DCL XSA$OPEN ENTRY(2)  ALTRET;
      293     6763    1   DCL XSA$CLOSE ENTRY(2) ALTRET;
      294     6764
      295     6765
      296     6766        /* fpt's */
      297     6767    1   DCL OU_TEXT CHAR(256) STATIC  /* FOR M$UNFID */;
      298     6768        %FPT_UNFID(DCB=M$OU,TEXTFID=OU_TEXT);
      299     6786
      300     6787        %FPT_FID(ACCT=VLP_ACCT,NAME=VLP_NAME,PASS=VLP_PASS,
      301     6788                 SN=VLP_SN,TEXTFID=OU_TEXT,WSN=VLP_WSN,
      302     6789                 RES=SO_OPEN.V.RES#,ASN=SO_OPEN.V.ASN#,
      303     6790                 RESULTS=VLR_FID);
      304     6813
PL6.E3A0      #007=OPEN_TABLES File=LR_IO.:Z8A6TSI                               SAT 08/09/97 09:33 Page:107  
      305     6814        %VLP_ACCT;
      306     6827        %VLP_NAME;
      307     6854        %VLP_PASS;
      308     6867        %VLP_SN;
      309     6880        %VLP_WSN;
      310     6893        %VLR_FID;
      311     6912
      312     6913        %FPT_OPEN(FPTN=OU_OPEN,FUN=CREATE,ACS=SEQUEN,CTG=NO,
      313     6914                  ORG=CONSEC,DCB=M$OU);
      314     7023
      315     7024        %FPT_OPEN(FPTN=SO_OPEN,FUN=CREATE,ACS=SEQUEN,CTG=NO,
      316     7025                  ORG=CONSEC,DCB=M$SO,ACCT=VLP_ACCT,NAME=VLP_NAME,
      317     7026                  PASS=VLP_PASS,SN=VLP_SN);
      318     7135
      319     7136    1   DCL BUFFER_OU CHAR(4096) EXT;
      320     7137    1   DCL BUFFER_SO CHAR(4096) EXT;
      321     7138        %XSA_PARAM(FPTN=XSA_PARAM_OU,STCLASS=EXT,BBUF=BUFFER_OU);
      322     7168        %XSA_PARAM(FPTN=XSA_PARAM_SO,STCLASS=EXT,BBUF=BUFFER_SO);
      323     7198
      324     7199
      325     7200        /* Opening of the dcb's.
      326     7201
      327     7202            1) OPEN M$OU normally, the do M$UNFID to get textual image
      328     7203               into OU_TEXT.
      329     7204            2) Apply M$FID to OU_TEXT to get proper name, acct, sn
      330     7205               VLP fields for later M$OPEN
      331     7206            3) Massage VLP_NAME to add the characters _SUBS to its file name.
      332     7207            4) Now open M$SO with the parameters almost matching those
      333     7208               of M$OU.
      334     7209
      335     7210           */
      336     7211    1           IF NOT OPTIONS(OU_OPT) THEN

   7211 43 000002   000000 236000 26                 LDQ     OPTIONS
        43 000003   100000 316003                    CANQ    32768,DU
        43 000004   000006 601000 43                 TNZ     s:7215

PL6.E3A0      #007=OPEN_TABLES File=LR_IO.:Z8A6TSI                               SAT 08/09/97 09:33 Page:108  
      337     7212    1              RETURN /* no output requested */;

   7212 43 000005   000000 702200 xent               TSX2  ! X66_ARET

      338     7213
      339     7214
      340     7215    1           CALL XSA$OPEN(OU_OPEN,XSA_PARAM_OU) /* ALTRET(GOING_DOWN) */ ;

   7215 43 000006   000001 630400 44                 EPPR0   1
        43 000007   000000 631400 44                 EPPR1   0
        43 000010   000000 701000 xent               TSX1    XSA$OPEN
        43 000011   000000 011000                    NOP     0

      341     7216
      342     7217    1           CALL M$UNFID(FPT_UNFID) /* ALTRET(GOING_DOWN) */ ;

   7217 43 000012   000100 630400 37                 EPPR0   FPT_UNFID
        43 000013   020021 713400                    CLIMB   8209
        43 000014   404400 401760                    pmme    nvectors=10

      343     7218
      344     7219    1           CALL M$FID(FPT_FID) /* ALTRET(GOING_DOWN) */ ;

   7219 43 000015   000126 630400 37                 EPPR0   FPT_FID
        43 000016   020001 713400                    CLIMB   8193
        43 000017   404400 401760                    pmme    nvectors=10

      345     7220
      346     7221    1           CALL INSERT(VLP_NAME.NAME#,VLP_NAME.L#,5,'_SUBS');

   7221 43 000020   000160 236000 37                 LDQ     VLP_NAME
        43 000021   000033 772000                    QRL     27
        43 000022   040006 100400                    MLR     fill='040'O
        43 000023   000000 000005 42                 ADSC9   0                        cn=0,n=5
        43 000024   000160 200005 37                 ADSC9   VLP_NAME,Q               cn=1,n=5

      347     7222
PL6.E3A0      #007=OPEN_TABLES File=LR_IO.:Z8A6TSI                               SAT 08/09/97 09:33 Page:109  
      348     7223    1           VLP_NAME.L#=VLP_NAME.L#+5;

   7223 43 000025   000160 236000 37                 LDQ     VLP_NAME
        43 000026   005000 036003                    ADLQ    2560,DU
        43 000027   000160 552040 37                 STBQ    VLP_NAME,'40'O

      349     7224
      350     7225    1           CALL XSA$OPEN(SO_OPEN,XSA_PARAM_SO) /* ALTRET(GOING_DOWN) */ ;

   7225 43 000030   000003 630400 44                 EPPR0   3
        43 000031   000000 631400 44                 EPPR1   0
        43 000032   000000 701000 xent               TSX1    XSA$OPEN
        43 000033   000000 011000                    NOP     0

      351     7226
      352     7227    1           RETURN;

   7227 43 000034   000000 702200 xent               TSX2  ! X66_ARET

      353     7228
      354     7229    1   CLOSE_TABLES : ENTRY;

   7229 43 000035   000000 700200 xent  CLOSE_TABLES TSX0  ! X66_AUTO_0
        43 000036   000004 000000                    ZERO    4,0

      355     7230
      356     7231    1           CALL XSA$CLOSE(OU_OPEN, XSA_PARAM_OU) ;

   7231 43 000037   000001 630400 44                 EPPR0   1
        43 000040   000000 631400 44                 EPPR1   0
        43 000041   000000 701000 xent               TSX1    XSA$CLOSE
        43 000042   000000 011000                    NOP     0

      357     7232
      358     7233    1           CALL XSA$CLOSE(SO_OPEN, XSA_PARAM_SO);

   7233 43 000043   000003 630400 44                 EPPR0   3
PL6.E3A0      #007=OPEN_TABLES File=LR_IO.:Z8A6TSI                               SAT 08/09/97 09:33 Page:110  
        43 000044   000000 631400 44                 EPPR1   0
        43 000045   000000 701000 xent               TSX1    XSA$CLOSE
        43 000046   000000 011000                    NOP     0

      359     7234
      360     7235    1           RETURN;

   7235 43 000047   000000 702200 xent               TSX2  ! X66_ARET
      361     7236
      362     7237    1   END OPEN_TABLES;
      363     7238        %EOD;

PL6.E3A0      #007=OPEN_TABLES File=LR_IO.:Z8A6TSI                               SAT 08/09/97 09:33 Page:111  
--  Include file information  --

   LR_IO_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   LR_GRAM_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:LIB_E04  is referenced.
   B$JIT.:LIB_E04  cannot be made into a system file and is referenced.
   XS_MACRO_C.:LIB_E04  is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure OPEN_TABLES.
PL6.E3A0      #007=OPEN_TABLES File=LR_IO.:Z8A6TSI                               SAT 08/09/97 09:33 Page:112  

 **** Variables and constants ****

  ****  Section 001 LblCom OUT_DCBN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 OUT_DCBN

  ****  Section 007 LblCom SYM_PTRS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 SYM_PTRS(0:1400)

  ****  Section 008 LblCom RIGHT_PARTS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/h SBIN(18)          1 RIGHT_PARTS(0:8000)

  ****  Section 009 LblCom PROD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/h STRC(72)          1 PROD(0:1500)

  ****  Section 010 LblCom NR_PROD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_PROD

PL6.E3A0      #007=OPEN_TABLES File=LR_IO.:Z8A6TSI                               SAT 08/09/97 09:33 Page:113  
  ****  Section 011 LblCom NR_SYMS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_SYMS

  ****  Section 012 LblCom NR_TERM

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_TERM

  ****  Section 013 LblCom LAST_ACT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LAST_ACT

  ****  Section 014 LblCom LAST_NULL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LAST_NULL

  ****  Section 015 LblCom NR_ONRIGHT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_ONRIGHT

  ****  Section 016 LblCom NR_NT

PL6.E3A0      #007=OPEN_TABLES File=LR_IO.:Z8A6TSI                               SAT 08/09/97 09:33 Page:114  
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_NT

  ****  Section 017 LblCom PROD_LEN_MAX_EVER

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 PROD_LEN_MAX_EVER

  ****  Section 018 LblCom LAST_ORDER_SPECIFIED

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LAST_ORDER_SPECIFIED

  ****  Section 019 LblCom SEMANTIC_ORDERING

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 SEMANTIC_ORDERING

  ****  Section 020 LblCom ERR_SEV

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ERR_SEV

  ****  Section 021 LblCom SET_LENGTHB

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #007=OPEN_TABLES File=LR_IO.:Z8A6TSI                               SAT 08/09/97 09:33 Page:115  

     0-0-0/w SBIN              1 SET_LENGTHB

  ****  Section 022 LblCom SET_LENGTHW

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 SET_LENGTHW

  ****  Section 023 LblCom EOF_SYMBOL_PTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 EOF_SYMBOL_PTR

  ****  Section 024 LblCom ERROR_SYMBOL_PTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 ERROR_SYMBOL_PTR

  ****  Section 025 LblCom BOF_SYMBOL_PTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 BOF_SYMBOL_PTR

  ****  Section 026 LblCom OPTIONS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT         r     1 OPTIONS(0:25)
PL6.E3A0      #007=OPEN_TABLES File=LR_IO.:Z8A6TSI                               SAT 08/09/97 09:33 Page:116  

  ****  Section 027 LblCom OPTIONS_TEXT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(4)           1 OPTIONS_TEXT(0:25)

  ****  Section 028 LblCom INSTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR              1 INSTR(0:511)               0-0-0/c CHAR(512)         1 INSTRCHR

  ****  Section 029 LblCom INSTR_LISTED

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 INSTR_LISTED

  ****  Section 030 LblCom INSTR_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 INSTR_LEN

  ****  Section 031 LblCom INSTR_INDX

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 INSTR_INDX

  ****  Section 032 LblCom EOF_FLAG
PL6.E3A0      #007=OPEN_TABLES File=LR_IO.:Z8A6TSI                               SAT 08/09/97 09:33 Page:117  

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 EOF_FLAG

  ****  Section 033 LblCom KEY_REC

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(10)          1 KEY_REC

  ****  Section 034 LblCom LINE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(109)         1 LINE

  ****  Section 035 LblCom LINELEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LINELEN

  ****  Section 036 LblCom TSTATS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(7380)        1 TSTATS

  ****  Section 037  Data  OPEN_TABLES

  ****  Scalars and arrays  ****
PL6.E3A0      #007=OPEN_TABLES File=LR_IO.:Z8A6TSI                               SAT 08/09/97 09:33 Page:118  
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   126-0-0/d STRC(864)   r     1 FPT_FID                  100-0-0/d STRC(792)   r     1 FPT_UNFID
   212-0-0/d STRC(2088)  r     1 OU_OPEN                    0-0-0/c CHAR(256)   r     1 OU_TEXT
   304-0-0/d STRC(2088)  r     1 SO_OPEN                  156-0-0/c STRC(72)    r     1 VLP_ACCT
   160-0-0/c STRC(288)   r     1 VLP_NAME                 170-0-0/c STRC(72)    r     1 VLP_PASS
   172-0-0/d STRC(90)    r     1 VLP_SN                   176-0-0/c STRC(72)    r     1 VLP_WSN
   200-0-0/d STRC(324)   r     1 VLR_FID

  ****  Section 038 LblCom BUFFER_OU

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(4096)  r     1 BUFFER_OU

  ****  Section 039 LblCom BUFFER_SO

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(4096)  r     1 BUFFER_SO

  ****  Section 040 LblCom XSA_PARAM_OU

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(504)   r     1 XSA_PARAM_OU

  ****  Section 041 LblCom XSA_PARAM_SO

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(504)   r     1 XSA_PARAM_SO

PL6.E3A0      #007=OPEN_TABLES File=LR_IO.:Z8A6TSI                               SAT 08/09/97 09:33 Page:119  
  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)        1 B$JIT                      0-0-0N  NULL        r     1 M$LO
     0-0-0N  NULL        r     1 M$OU                       0-0-0N  NULL        r     1 M$SI
     0-0-0N  NULL        r     1 M$SO                       0-0-0N  NULL        r     1 M$UC
     0-0-0N  NULL        r     1 M$UI                       0-0-0/w STRC(351)         1 SYMBOL


   Procedure OPEN_TABLES requires 40 words for executable code.
   Procedure OPEN_TABLES requires 4 words of local(AUTO) storage.

PL6.E3A0      #008=OUT_TOKEN File=LR_IO.:Z8A6TSI                                 SAT 08/09/97 09:35 Page:120  
      364        1        /*T***********************************************************/
      365        2        /*T*                                                         */
      366        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      367        4        /*T*                                                         */
      368        5        /*T***********************************************************/
      369        6        OUT_TOKEN: PROC(CS, CSLEN);
      370        7
      371        8        /*D*
      372        9               NAME: OUT_TOKEN
      373       10            PURPOSE: APPEND A STRING TO THE OUTPUT LINE AS A
      374       11                     SEPARATE TOKEN PRECEEDED BY A BLANK.
      375       12        */
      376       13
      377       14
      378       15    1   DCL CSLEN SBIN;
      379       16    1   DCL CS CHAR(CSLEN);
      380       17
      381       18    1   DCL OUT_STR ENTRY(2);
      382       19
      383       20
      384       21    1   CALL OUT_STR(' ',1);
      385       22    1   CALL OUT_STR(CS, CSLEN);
      386       23
      387       24    1   END OUT_TOKEN;
      388       25        %EOD;

PL6.E3A0      #008=OUT_TOKEN File=LR_IO.:Z8A6TSI                                 SAT 08/09/97 09:35 Page:121  
      No diagnostics issued in procedure OUT_TOKEN.

   Procedure OUT_TOKEN requires 11 words for executable code.
   Procedure OUT_TOKEN requires 6 words of local(AUTO) storage.

PL6.E3A0      #008=OUT_TOKEN File=LR_IO.:Z8A6TSI                                 SAT 08/09/97 09:35 Page:122  

 Object Unit name= OUT_TOKEN                                  File name= LR_IO.:Z8A6TOU
 UTS= AUG 09 '97 09:35:00.48 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    11     13  OUT_TOKEN
    1  RoData even  none     5      5  OUT_TOKEN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        2  OUT_TOKEN

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 OUT_STR
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #008=OUT_TOKEN File=LR_IO.:Z8A6TSI                                 SAT 08/09/97 09:35 Page:123  


      364        1        /*T***********************************************************/
      365        2        /*T*                                                         */
      366        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      367        4        /*T*                                                         */
      368        5        /*T***********************************************************/
      369        6        OUT_TOKEN: PROC(CS, CSLEN);

      6  0 000000   000000 700200 xent  OUT_TOKEN    TSX0  ! X66_AUTO_2
         0 000001   000006 000002                    ZERO    6,2

      370        7
      371        8        /*D*
      372        9               NAME: OUT_TOKEN
      373       10            PURPOSE: APPEND A STRING TO THE OUTPUT LINE AS A
      374       11                     SEPARATE TOKEN PRECEEDED BY A BLANK.
      375       12        */
      376       13
      377       14
      378       15    1   DCL CSLEN SBIN;
      379       16    1   DCL CS CHAR(CSLEN);
      380       17
      381       18    1   DCL OUT_STR ENTRY(2);
      382       19
      383       20
      384       21    1   CALL OUT_STR(' ',1);

     21  0 000002   000003 630400 1                  EPPR0   3
         0 000003   000000 631400 1                  EPPR1   0
         0 000004   000000 701000 xent               TSX1    OUT_STR
         0 000005   000000 011000                    NOP     0

      385       22    1   CALL OUT_STR(CS, CSLEN);

     22  0 000006   200003 630500                    EPPR0   @CS,,AUTO
         0 000007   000000 631400 1                  EPPR1   0
         0 000010   000000 701000 xent               TSX1    OUT_STR
PL6.E3A0      #008=OUT_TOKEN File=LR_IO.:Z8A6TSI                                 SAT 08/09/97 09:35 Page:124  
         0 000011   000000 011000                    NOP     0

      386       23
      387       24    1   END OUT_TOKEN;

     24  0 000012   000000 702200 xent               TSX2  ! X66_ARET
      388       25        %EOD;

PL6.E3A0      #008=OUT_TOKEN File=LR_IO.:Z8A6TSI                                 SAT 08/09/97 09:35 Page:125  
      No diagnostics issued in procedure OUT_TOKEN.
PL6.E3A0      #008=OUT_TOKEN File=LR_IO.:Z8A6TSI                                 SAT 08/09/97 09:35 Page:126  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @CS                        4-0-0/w PTR         r     1 @CSLEN
    *0-0-0/c ACHR        r     1 CS                        *0-0-0/w SBIN        r     1 CSLEN


   Procedure OUT_TOKEN requires 11 words for executable code.
   Procedure OUT_TOKEN requires 6 words of local(AUTO) storage.

PL6.E3A0      #009=OUT_SYMBOL File=LR_IO.:Z8A6TSI                                SAT 08/09/97 09:35 Page:127  
      389        1        /*T***********************************************************/
      390        2        /*T*                                                         */
      391        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      392        4        /*T*                                                         */
      393        5        /*T***********************************************************/
      394        6        OUT_SYMBOL : PROC (SYM$) NOAUTO;
      395        7
      396        8        /*D*
      397        9               NAME: OUT_SYMBOL
      398       10            PURPOSE: Print the symbol in the symbol table pointed to by
      399       11                       the parameter SYM$.
      400       12        */
      401       13
      402       14    1   DCL SYM$ PTR;
      403       15
      404       16        %INCLUDE LR_GRAM_EXT;
      405      555
      406      556    1   DCL OUT_STR ENTRY(2);
      407      557
      408      558    1   DCL J SBIN WORD;
      409      559
      410      560
      411      561    1   IF SYM$ -> SYMBOL.QUOTED_REP THEN
      412      562          %OUT_STR(S="''''");
      413      565
      414      566    1   CALL INDEX(J, '''', SUBSTR(SYM$ -> SYMBOL.TEXTCHR, 0, SYM$ -> SYMBOL.SYMLEN));
      415      567
      416      568    1   IF J >= SYM$ -> SYMBOL.SYMLEN THEN
      417      569    1     CALL OUT_STR(SYM$ -> SYMBOL.TEXTCHR,
      418      570    1                  SYM$ -> SYMBOL.SYMLEN);
      419      571    1   ELSE
      420      572    2     DO J = 0 TO SYM$ -> SYMBOL.SYMLEN - 1;
      421      573    2       IF SUBSTR(SYM$ -> SYMBOL.TEXTCHR, J, 1) = '''' THEN
      422      574              %OUT_STR(S="''''''");
      423      577    2       ELSE
      424      578    2         CALL OUT_STR(SUBSTR(SYM$ -> SYMBOL.TEXTCHR, J, 1), 1);
      425      579    2     END;
PL6.E3A0      #009=OUT_SYMBOL File=LR_IO.:Z8A6TSI                                SAT 08/09/97 09:35 Page:128  
      426      580
      427      581    1   IF SYM$ -> SYMBOL.QUOTED_REP THEN
      428      582          %OUT_STR(S="''''");
      429      585
      430      586    1   END OUT_SYMBOL;
      431      587        %EOD;

PL6.E3A0      #009=OUT_SYMBOL File=LR_IO.:Z8A6TSI                                SAT 08/09/97 09:35 Page:129  
--  Include file information  --

   LR_IO_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   LR_GRAM_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure OUT_SYMBOL.

   Procedure OUT_SYMBOL requires 67 words for executable code.
   Procedure OUT_SYMBOL is declared NOAUTO and requires 6 words of local(STATIC) storage.

PL6.E3A0      #009=OUT_SYMBOL File=LR_IO.:Z8A6TSI                                SAT 08/09/97 09:35 Page:130  

 Object Unit name= OUT_SYMBOL                                 File name= LR_IO.:Z8A6TOU
 UTS= AUG 09 '97 09:35:04.04 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none     6      6  OUT_SYMBOL
    1  LblCom even  none     1      1  OUT_DCBN
    2   DCB   even  none     0      0  M$OU
    3   DCB   even  none     0      0  M$SO
    4   DCB   even  none     0      0  M$LO
    5   DCB   even  none     0      0  M$SI
    6   DCB   even  none     0      0  M$UI
    7  LblCom even  none  1401   2571  SYM_PTRS
    8  LblCom even  none  4001   7641  RIGHT_PARTS
    9  LblCom even  none  3002   5672  PROD
   10  LblCom even  none     1      1  NR_PROD
   11  LblCom even  none     1      1  NR_SYMS
   12  LblCom even  none     1      1  NR_TERM
   13  LblCom even  none     1      1  LAST_ACT
   14  LblCom even  none     1      1  LAST_NULL
   15  LblCom even  none     1      1  NR_ONRIGHT
   16  LblCom even  none     1      1  NR_NT
   17  LblCom even  none     1      1  PROD_LEN_MAX_EVER
   18  LblCom even  none     1      1  LAST_ORDER_SPECIFIED
   19  LblCom even  none     1      1  SEMANTIC_ORDERING
   20  LblCom even  none     1      1  ERR_SEV
   21  LblCom even  none     1      1  SET_LENGTHB
   22  LblCom even  none     1      1  SET_LENGTHW
   23  LblCom even  none     1      1  EOF_SYMBOL_PTR
   24  LblCom even  none     1      1  ERROR_SYMBOL_PTR
   25  LblCom even  none     1      1  BOF_SYMBOL_PTR
   26  LblCom even  none     1      1  OPTIONS
   27  LblCom even  none    26     32  OPTIONS_TEXT
   28  LblCom even  none   128    200  INSTR
PL6.E3A0      #009=OUT_SYMBOL File=LR_IO.:Z8A6TSI                                SAT 08/09/97 09:35 Page:131  
   29  LblCom even  none     1      1  INSTR_LISTED
   30  LblCom even  none     1      1  INSTR_LEN
   31  LblCom even  none     1      1  INSTR_INDX
   32  LblCom even  none     1      1  EOF_FLAG
   33  LblCom even  none     3      3  KEY_REC
   34  LblCom even  none    28     34  LINE
   35  LblCom even  none     1      1  LINELEN
   36  LblCom even  none   205    315  TSTATS
   37  RoData even  UTS      1      1  OUT_SYMBOL
   38   Proc  even  none    67    103  OUT_SYMBOL
   39  RoData even  none     8     10  OUT_SYMBOL

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    38      0   yes            yes      Std        1  OUT_SYMBOL

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 OUT_STR
                       nStd      0 X66_STATIC_1

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$OU                                  M$SO                                  M$LO
     M$SI                                  M$UI
PL6.E3A0      #009=OUT_SYMBOL File=LR_IO.:Z8A6TSI                                SAT 08/09/97 09:35 Page:132  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #009=OUT_SYMBOL File=LR_IO.:Z8A6TSI                                SAT 08/09/97 09:35 Page:133  


      389        1        /*T***********************************************************/
      390        2        /*T*                                                         */
      391        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      392        4        /*T*                                                         */
      393        5        /*T***********************************************************/
      394        6        OUT_SYMBOL : PROC (SYM$) NOAUTO;

      6 38 000000   000000 700200 xent  OUT_SYMBOL   TSX0  ! X66_STATIC_1
        38 000001   000000 000001 0                  ZERO    0,1

      395        7
      396        8        /*D*
      397        9               NAME: OUT_SYMBOL
      398       10            PURPOSE: Print the symbol in the symbol table pointed to by
      399       11                       the parameter SYM$.
      400       12        */
      401       13
      402       14    1   DCL SYM$ PTR;
      403       15
      404       16        %INCLUDE LR_GRAM_EXT;
      405      555
      406      556    1   DCL OUT_STR ENTRY(2);
      407      557
      408      558    1   DCL J SBIN WORD;
      409      559
      410      560
      411      561    1   IF SYM$ -> SYMBOL.QUOTED_REP THEN

    561 38 000002   000001 470400 0                  LDP0    @SYM$
        38 000003   000000 471500                    LDP1    0,,PR0
        38 000004   100004 430100                    FSZN    4,,PR1
        38 000005   000012 605000 38                 TPL     s:566

      412      562          %OUT_STR(S="''''");

    563 38 000006   000003 630400 39                 EPPR0   3
PL6.E3A0      #009=OUT_SYMBOL File=LR_IO.:Z8A6TSI                                SAT 08/09/97 09:35 Page:134  
        38 000007   000000 631400 39                 EPPR1   0
        38 000010   000000 701000 xent               TSX1    OUT_STR
        38 000011   000000 011000                    NOP     0

      413      565
      414      566    1   CALL INDEX(J, '''', SUBSTR(SYM$ -> SYMBOL.TEXTCHR, 0, SYM$ -> SYMBOL.SYMLEN));

    566 38 000012   000001 470400 0                  LDP0    @SYM$
        38 000013   000000 471500                    LDP1    0,,PR0
        38 000014   100010 720100                    LXL0    8,,PR1
        38 000015   000000 124540                    SCM     mask='000'O
        38 000016   100011 000010                    ADSC9   9,,PR1                   cn=0,n=*X0
        38 000017   000001 000001 39                 ADSC9   1                        cn=0,n=1
        38 000020   000002 000000 0                  ARG     J

      415      567
      416      568    1   IF J >= SYM$ -> SYMBOL.SYMLEN THEN

    568 38 000021   000002 236000 0                  LDQ     J
        38 000022   100010 116100                    CMPQ    8,,PR1
        38 000023   000035 604000 38                 TMI     s:572

      417      569    1     CALL OUT_STR(SYM$ -> SYMBOL.TEXTCHR,

    569 38 000024   100010 633500                    EPPR3   8,,PR1
        38 000025   000005 453400 0                  STP3    J+3
        38 000026   100011 634500                    EPPR4   9,,PR1
        38 000027   000004 454400 0                  STP4    J+2
        38 000030   000004 630400 0                  EPPR0   J+2
        38 000031   000000 631400 39                 EPPR1   0
        38 000032   000000 701000 xent               TSX1    OUT_STR
        38 000033   000000 011000                    NOP     0
        38 000034   000071 710000 38                 TRA     s:581

      418      570    1                  SYM$ -> SYMBOL.SYMLEN);
      419      571    1   ELSE
      420      572    2     DO J = 0 TO SYM$ -> SYMBOL.SYMLEN - 1;
PL6.E3A0      #009=OUT_SYMBOL File=LR_IO.:Z8A6TSI                                SAT 08/09/97 09:35 Page:135  

    572 38 000035   000002 450000 0                  STZ     J
        38 000036   000064 710000 38                 TRA     s:579+1

      421      573    2       IF SUBSTR(SYM$ -> SYMBOL.TEXTCHR, J, 1) = '''' THEN

    573 38 000037   000001 470400 0                  LDP0    @SYM$
        38 000040   000000 471500                    LDP1    0,,PR0
        38 000041   000002 235000 0                  LDA     J
        38 000042   040000 106505                    CMPC    fill='040'O
        38 000043   100011 000001                    ADSC9   9,A,PR1                  cn=0,n=1
        38 000044   000001 000001 39                 ADSC9   1                        cn=0,n=1
        38 000045   000053 601000 38                 TNZ     s:578

      422      574              %OUT_STR(S="''''''");

    575 38 000046   000006 630400 39                 EPPR0   6
        38 000047   000000 631400 39                 EPPR1   0
        38 000050   000000 701000 xent               TSX1    OUT_STR
        38 000051   000000 011000                    NOP     0
        38 000052   000063 710000 38                 TRA     s:579

      423      577    2       ELSE
      424      578    2         CALL OUT_STR(SUBSTR(SYM$ -> SYMBOL.TEXTCHR, J, 1), 1);

    578 38 000053   000004 236000 39                 LDQ     4
        38 000054   000005 756000 0                  STQ     J+3
        38 000055   100011 500505                    A9BD    9,AL,PR1
        38 000056   000004 451400 0                  STP1    J+2
        38 000057   000004 630400 0                  EPPR0   J+2
        38 000060   000000 631400 39                 EPPR1   0
        38 000061   000000 701000 xent               TSX1    OUT_STR
        38 000062   000000 011000                    NOP     0

      425      579    2     END;

    579 38 000063   000002 054000 0                  AOS     J
PL6.E3A0      #009=OUT_SYMBOL File=LR_IO.:Z8A6TSI                                SAT 08/09/97 09:35 Page:136  
        38 000064   000001 470400 0                  LDP0    @SYM$
        38 000065   000000 471500                    LDP1    0,,PR0
        38 000066   000002 236000 0                  LDQ     J
        38 000067   100010 116100                    CMPQ    8,,PR1
        38 000070   000037 604000 38                 TMI     s:573

      426      580
      427      581    1   IF SYM$ -> SYMBOL.QUOTED_REP THEN

    581 38 000071   000001 470400 0                  LDP0    @SYM$
        38 000072   000000 471500                    LDP1    0,,PR0
        38 000073   100004 430100                    FSZN    4,,PR1
        38 000074   000101 605000 38                 TPL     s:586

      428      582          %OUT_STR(S="''''");

    583 38 000075   000003 630400 39                 EPPR0   3
        38 000076   000000 631400 39                 EPPR1   0
        38 000077   000000 701000 xent               TSX1    OUT_STR
        38 000100   000000 011000                    NOP     0

      429      585
      430      586    1   END OUT_SYMBOL;

    586 38 000101   000000 221200 0                  LDX1  ! 0
        38 000102   000001 702211                    TSX2  ! 1,X1
      431      587        %EOD;

PL6.E3A0      #009=OUT_SYMBOL File=LR_IO.:Z8A6TSI                                SAT 08/09/97 09:35 Page:137  
--  Include file information  --

   LR_IO_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   LR_GRAM_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure OUT_SYMBOL.
PL6.E3A0      #009=OUT_SYMBOL File=LR_IO.:Z8A6TSI                                SAT 08/09/97 09:35 Page:138  

 **** Variables and constants ****

  ****  Section 000  Data  OUT_SYMBOL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     1-0-0/w PTR         r     1 @SYM$                      2-0-0/w SBIN        r     1 J
    *0-0-0/w PTR         r     1 SYM$

  ****  Section 001 LblCom OUT_DCBN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 OUT_DCBN

  ****  Section 007 LblCom SYM_PTRS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 SYM_PTRS(0:1400)

  ****  Section 008 LblCom RIGHT_PARTS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/h SBIN(18)          1 RIGHT_PARTS(0:8000)

  ****  Section 009 LblCom PROD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/h STRC(72)          1 PROD(0:1500)
PL6.E3A0      #009=OUT_SYMBOL File=LR_IO.:Z8A6TSI                                SAT 08/09/97 09:35 Page:139  

  ****  Section 010 LblCom NR_PROD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_PROD

  ****  Section 011 LblCom NR_SYMS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_SYMS

  ****  Section 012 LblCom NR_TERM

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_TERM

  ****  Section 013 LblCom LAST_ACT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LAST_ACT

  ****  Section 014 LblCom LAST_NULL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LAST_NULL

  ****  Section 015 LblCom NR_ONRIGHT
PL6.E3A0      #009=OUT_SYMBOL File=LR_IO.:Z8A6TSI                                SAT 08/09/97 09:35 Page:140  

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_ONRIGHT

  ****  Section 016 LblCom NR_NT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_NT

  ****  Section 017 LblCom PROD_LEN_MAX_EVER

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 PROD_LEN_MAX_EVER

  ****  Section 018 LblCom LAST_ORDER_SPECIFIED

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LAST_ORDER_SPECIFIED

  ****  Section 019 LblCom SEMANTIC_ORDERING

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 SEMANTIC_ORDERING

  ****  Section 020 LblCom ERR_SEV

  ****  Scalars and arrays  ****
PL6.E3A0      #009=OUT_SYMBOL File=LR_IO.:Z8A6TSI                                SAT 08/09/97 09:35 Page:141  
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ERR_SEV

  ****  Section 021 LblCom SET_LENGTHB

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 SET_LENGTHB

  ****  Section 022 LblCom SET_LENGTHW

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 SET_LENGTHW

  ****  Section 023 LblCom EOF_SYMBOL_PTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 EOF_SYMBOL_PTR

  ****  Section 024 LblCom ERROR_SYMBOL_PTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 ERROR_SYMBOL_PTR

  ****  Section 025 LblCom BOF_SYMBOL_PTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #009=OUT_SYMBOL File=LR_IO.:Z8A6TSI                                SAT 08/09/97 09:35 Page:142  
     0-0-0/w PTR               1 BOF_SYMBOL_PTR

  ****  Section 026 LblCom OPTIONS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 OPTIONS(0:25)

  ****  Section 027 LblCom OPTIONS_TEXT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(4)           1 OPTIONS_TEXT(0:25)

  ****  Section 028 LblCom INSTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR              1 INSTR(0:511)               0-0-0/c CHAR(512)         1 INSTRCHR

  ****  Section 029 LblCom INSTR_LISTED

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 INSTR_LISTED

  ****  Section 030 LblCom INSTR_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 INSTR_LEN

PL6.E3A0      #009=OUT_SYMBOL File=LR_IO.:Z8A6TSI                                SAT 08/09/97 09:35 Page:143  
  ****  Section 031 LblCom INSTR_INDX

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 INSTR_INDX

  ****  Section 032 LblCom EOF_FLAG

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 EOF_FLAG

  ****  Section 033 LblCom KEY_REC

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(10)          1 KEY_REC

  ****  Section 034 LblCom LINE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(109)         1 LINE

  ****  Section 035 LblCom LINELEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LINELEN

  ****  Section 036 LblCom TSTATS

PL6.E3A0      #009=OUT_SYMBOL File=LR_IO.:Z8A6TSI                                SAT 08/09/97 09:35 Page:144  
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(7380)        1 TSTATS

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0N  NULL        r     1 M$LO                       0-0-0N  NULL        r     1 M$OU
     0-0-0N  NULL        r     1 M$SI                       0-0-0N  NULL        r     1 M$SO
     0-0-0N  NULL        r     1 M$UI                       0-0-0/w STRC(351)   r     1 SYMBOL


   Procedure OUT_SYMBOL requires 67 words for executable code.
   Procedure OUT_SYMBOL is declared NOAUTO and requires 6 words of local(STATIC) storage.

PL6.E3A0      #010=OUT_SYMBOL_TOKEN File=LR_IO.:Z8A6TSI                          SAT 08/09/97 09:35 Page:145  
      432        1        /*T***********************************************************/
      433        2        /*T*                                                         */
      434        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      435        4        /*T*                                                         */
      436        5        /*T***********************************************************/
      437        6        OUT_SYMBOL_TOKEN : PROC (SYM$) NOAUTO;
      438        7
      439        8    1   DCL SYM$ PTR;
      440        9
      441       10    1   DCL OUT_STR ENTRY(2);
      442       11    1   DCL OUT_SYMBOL ENTRY(1);
      443       12
      444       13    1   CALL OUT_STR(' ',1);
      445       14    1   CALL OUT_SYMBOL(SYM$);
      446       15
      447       16    1   END OUT_SYMBOL_TOKEN;
      448       17        %EOD;

PL6.E3A0      #010=OUT_SYMBOL_TOKEN File=LR_IO.:Z8A6TSI                          SAT 08/09/97 09:35 Page:146  
      No diagnostics issued in procedure OUT_SYMBOL_TOKEN.

   Procedure OUT_SYMBOL_TOKEN requires 12 words for executable code.
   Procedure OUT_SYMBOL_TOKEN is declared NOAUTO and requires 2 words of local(STATIC) storage.

PL6.E3A0      #010=OUT_SYMBOL_TOKEN File=LR_IO.:Z8A6TSI                          SAT 08/09/97 09:35 Page:147  

 Object Unit name= OUT_SYMBOL_TOKEN                           File name= LR_IO.:Z8A6TOU
 UTS= AUG 09 '97 09:35:19.80 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none     2      2  OUT_SYMBOL_TOKEN
    1   Proc  even  none    12     14  OUT_SYMBOL_TOKEN
    2  RoData even  none     6      6  OUT_SYMBOL_TOKEN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  OUT_SYMBOL_TOKEN

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 OUT_STR
         yes           Std       1 OUT_SYMBOL
                       nStd      0 X66_STATIC_1

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #010=OUT_SYMBOL_TOKEN File=LR_IO.:Z8A6TSI                          SAT 08/09/97 09:35 Page:148  


      432        1        /*T***********************************************************/
      433        2        /*T*                                                         */
      434        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      435        4        /*T*                                                         */
      436        5        /*T***********************************************************/
      437        6        OUT_SYMBOL_TOKEN : PROC (SYM$) NOAUTO;

      6  1 000000   000000 700200 xent  OUT_SYMBOL_* TSX0  ! X66_STATIC_1
         1 000001   000000 000001 0                  ZERO    0,1

      438        7
      439        8    1   DCL SYM$ PTR;
      440        9
      441       10    1   DCL OUT_STR ENTRY(2);
      442       11    1   DCL OUT_SYMBOL ENTRY(1);
      443       12
      444       13    1   CALL OUT_STR(' ',1);

     13  1 000002   000003 630400 2                  EPPR0   3
         1 000003   000000 631400 2                  EPPR1   0
         1 000004   000000 701000 xent               TSX1    OUT_STR
         1 000005   000000 011000                    NOP     0

      445       14    1   CALL OUT_SYMBOL(SYM$);

     14  1 000006   000001 630400 0                  EPPR0   @SYM$
         1 000007   000005 631400 2                  EPPR1   5
         1 000010   000000 701000 xent               TSX1    OUT_SYMBOL
         1 000011   000000 011000                    NOP     0

      446       15
      447       16    1   END OUT_SYMBOL_TOKEN;

     16  1 000012   000000 221200 0                  LDX1  ! 0
         1 000013   000001 702211                    TSX2  ! 1,X1
      448       17        %EOD;
PL6.E3A0      #010=OUT_SYMBOL_TOKEN File=LR_IO.:Z8A6TSI                          SAT 08/09/97 09:35 Page:149  

PL6.E3A0      #010=OUT_SYMBOL_TOKEN File=LR_IO.:Z8A6TSI                          SAT 08/09/97 09:35 Page:150  
      No diagnostics issued in procedure OUT_SYMBOL_TOKEN.
PL6.E3A0      #010=OUT_SYMBOL_TOKEN File=LR_IO.:Z8A6TSI                          SAT 08/09/97 09:35 Page:151  

 **** Variables and constants ****

  ****  Section 000  Data  OUT_SYMBOL_TOKEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     1-0-0/w PTR         r     1 @SYM$                     *0-0-0/w PTR         r     1 SYM$


   Procedure OUT_SYMBOL_TOKEN requires 12 words for executable code.
   Procedure OUT_SYMBOL_TOKEN is declared NOAUTO and requires 2 words of local(STATIC) storage.

PL6.E3A0      #011=COMMAND_LINE_OPTIONS File=LR_IO.:Z8A6TSI                      SAT 08/09/97 09:35 Page:152  
      449        1        /*T***********************************************************/
      450        2        /*T*                                                         */
      451        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      452        4        /*T*                                                         */
      453        5        /*T***********************************************************/
      454        6        COMMAND_LINE_OPTIONS:PROC;
      455        7
      456        8        %INCLUDE LR_GRAM_EXT;
      457      547
      458      548        /* PICK UP B$JIT TO GET CONTROL COMMAND BUFFER */
      459      549    1   DCL B$JIT$ PTR SYMREF;
      460      550        %INCLUDE B$JIT;
      461     1153
      462     1154    1   DCL DIAG ENTRY(6);
      463     1155
      464     1156
      465     1157        /* SCANS OPTIONS */
      466     1158    1   DCL I SBIN;
      467     1159    1   DCL J SBIN;
      468     1160    1   DCL K SBIN;
      469     1161    1   DCL OPTCHR CHAR(4);
      470     1162    1   DCL C CHAR(1);
      471     1163    1   DCL LEVEL BOOLEAN;
      472     1164
      473     1165    1   DCL OPTCHR_ERR CHAR(6);
      474     1166
      475     1167
      476     1168    1   SKIP_BLANKS:PROC;
      477     1169        /* ADVANCE INSTR_INDX TO NEXT NON-BLANK CHARACTER  */
      478     1170
      479     1171    2   DCL JUNK1 UBIN;
      480     1172    2   DCL START SBIN;
      481     1173
      482     1174    2   DCL SEARCH_TAB(0:127) CHAR(1) UNAL CONSTANT
      483     1175
      484     1176    2     INIT(%BINASC(511)*32,%BINASC(0),%BINASC(511)*0);
      485     1177
PL6.E3A0      #011=COMMAND_LINE_OPTIONS File=LR_IO.:Z8A6TSI                      SAT 08/09/97 09:35 Page:153  
      486     1178    2           START=INSTR_INDX;
      487     1179
      488     1180    2           CALL SEARCH(INSTR_INDX,JUNK1,SEARCH_TAB(0),
      489     1181    2             SUBSTR(INSTRCHR,0,INSTR_LEN),START);
      490     1182
      491     1183    3           DO WHILE (  (INSTR_INDX < INSTR_LEN)
      492     1184    3             AND (INSTR(INSTR_INDX)=' ') );
      493     1185    3              INSTR_INDX=INSTR_INDX+1;
      494     1186    3              END;
      495     1187    2   END SKIP_BLANKS;
      496     1188
      497     1189
      498     1190
      499     1191
      500     1192        /* LOOK FOR ( WHICH BEGINS OPTION LINE */
      501     1193
      502     1194    1           INSTRCHR=SUBSTR(B$JIT.CCBUF,0,B$JIT.CCARS);
      503     1195    1           INSTR_INDX=0;
      504     1196    1           INSTR_LEN=B$JIT.CCARS;
      505     1197
      506     1198    1           CALL INDEX(INSTR_INDX,'(',SUBSTR(INSTRCHR,0,INSTR_LEN))
      507     1199    1             ALTRET(NOTHING);
      508     1200    1           INSTR_INDX=INSTR_INDX+1;
      509     1201
      510     1202    1           I=I+1;
      511     1203
      512     1204    2           DO WHILE(INSTR_INDX<INSTR_LEN);
      513     1205
      514     1206    2              CALL SKIP_BLANKS;
      515     1207
      516     1208    2              LEVEL=TRUE;
      517     1209
      518     1210    2              IF INSTR_INDX>=INSTR_LEN THEN
      519     1211    2                 GOTO NOTHING;
      520     1212
      521     1213    2              IF SUBSTR(INSTRCHR,INSTR_INDX,1)='N' THEN
      522     1214    3              DO;
PL6.E3A0      #011=COMMAND_LINE_OPTIONS File=LR_IO.:Z8A6TSI                      SAT 08/09/97 09:35 Page:154  
      523     1215    3                 LEVEL=FALSE;
      524     1216    3                 INSTR_INDX=INSTR_INDX+1;
      525     1217    3                 END;
      526     1218
      527     1219    2              IF INSTR_INDX>INSTR_LEN THEN
      528     1220    2                 GOTO NOTHING;
      529     1221
      530     1222    2              OPTCHR=' ';
      531     1223    2              I=0;
      532     1224    3              DO WHILE(I<4);
      533     1225    3                 C=SUBSTR(INSTRCHR,INSTR_INDX,1);
      534     1226    3                 INSTR_INDX=INSTR_INDX+1;
      535     1227    3                 IF C=')' THEN
      536     1228    3                    I=4;
      537     1229    3                 ELSE
      538     1230    3                    IF C=',' THEN
      539     1231    3                       I=4;
      540     1232    3                    ELSE
      541     1233    4                    DO;
      542     1234    4                       CALL INSERT(OPTCHR,I,1,C);
      543     1235    4                       IF INSTR_INDX>=INSTR_LEN THEN
      544     1236    4                          I=4;
      545     1237    4                       END;
      546     1238    3                 I=I+1;
      547     1239    3                 END;
      548     1240    2              I = LENGTHW(OPTIONS_TEXT);
      549     1241    3              DO UNTIL (I=0) OR (OPTIONS_TEXT(I) = OPTCHR);
      550     1242    3                I = I - 1;
      551     1243    3              END;
      552     1244    2              IF OPTIONS_TEXT(I)=OPTCHR THEN
      553     1245    2                 OPTIONS(I)=LEVEL;
      554     1246    2              ELSE
      555     1247    3                DO;
      556     1248    3                  OPTCHR_ERR = '%%%%%%';
      557     1249    3                  CALL INSERT(OPTCHR_ERR,0,4,OPTCHR);
      558     1250    3                  CALL DIAG(6,' ERROR => Illegal command line option: %%',
      559     1251    3                         OPTCHR_ERR);
PL6.E3A0      #011=COMMAND_LINE_OPTIONS File=LR_IO.:Z8A6TSI                      SAT 08/09/97 09:35 Page:155  
      560     1252    3                END;
      561     1253
      562     1254    2              END;
      563     1255
      564     1256    1   NOTHING:;
      565     1257
      566     1258
      567     1259    1   END COMMAND_LINE_OPTIONS;
      568     1260        %EOD;

PL6.E3A0      #011=COMMAND_LINE_OPTIONS File=LR_IO.:Z8A6TSI                      SAT 08/09/97 09:35 Page:156  
--  Include file information  --

   B$JIT_C.:LIB_E04  is referenced.
   B$JIT.:LIB_E04  cannot be made into a system file and is referenced.
   LR_IO_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   LR_GRAM_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure COMMAND_LINE_OPTIONS.

   Procedure COMMAND_LINE_OPTIONS requires 142 words for executable code.
   Procedure COMMAND_LINE_OPTIONS requires 20 words of local(AUTO) storage.

PL6.E3A0      #011=COMMAND_LINE_OPTIONS File=LR_IO.:Z8A6TSI                      SAT 08/09/97 09:35 Page:157  

 Object Unit name= COMMAND_LINE_OPTIONS                       File name= LR_IO.:Z8A6TOU
 UTS= AUG 09 '97 09:35:24.08 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none     1      1  OUT_DCBN
    1   DCB   even  none     0      0  M$OU
    2   DCB   even  none     0      0  M$SO
    3   DCB   even  none     0      0  M$LO
    4   DCB   even  none     0      0  M$SI
    5   DCB   even  none     0      0  M$UI
    6  LblCom even  none  1401   2571  SYM_PTRS
    7  LblCom even  none  4001   7641  RIGHT_PARTS
    8  LblCom even  none  3002   5672  PROD
    9  LblCom even  none     1      1  NR_PROD
   10  LblCom even  none     1      1  NR_SYMS
   11  LblCom even  none     1      1  NR_TERM
   12  LblCom even  none     1      1  LAST_ACT
   13  LblCom even  none     1      1  LAST_NULL
   14  LblCom even  none     1      1  NR_ONRIGHT
   15  LblCom even  none     1      1  NR_NT
   16  LblCom even  none     1      1  PROD_LEN_MAX_EVER
   17  LblCom even  none     1      1  LAST_ORDER_SPECIFIED
   18  LblCom even  none     1      1  SEMANTIC_ORDERING
   19  LblCom even  none     1      1  ERR_SEV
   20  LblCom even  none     1      1  SET_LENGTHB
   21  LblCom even  none     1      1  SET_LENGTHW
   22  LblCom even  none     1      1  EOF_SYMBOL_PTR
   23  LblCom even  none     1      1  ERROR_SYMBOL_PTR
   24  LblCom even  none     1      1  BOF_SYMBOL_PTR
   25  LblCom even  none     1      1  OPTIONS
   26  LblCom even  none    26     32  OPTIONS_TEXT
   27  LblCom even  none   128    200  INSTR
   28  LblCom even  none     1      1  INSTR_LISTED
PL6.E3A0      #011=COMMAND_LINE_OPTIONS File=LR_IO.:Z8A6TSI                      SAT 08/09/97 09:35 Page:158  
   29  LblCom even  none     1      1  INSTR_LEN
   30  LblCom even  none     1      1  INSTR_INDX
   31  LblCom even  none     1      1  EOF_FLAG
   32  LblCom even  none     3      3  KEY_REC
   33  LblCom even  none    28     34  LINE
   34  LblCom even  none     1      1  LINELEN
   35  LblCom even  none   205    315  TSTATS
   36  RoData even  UTS     45     55  COMMAND_LINE_OPTIONS
   37   Proc  even  none   142    216  COMMAND_LINE_OPTIONS
   38  RoData even  none     8     10  COMMAND_LINE_OPTIONS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    37      0   yes            yes      Std        0  COMMAND_LINE_OPTIONS

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       6 DIAG
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$OU                                  M$SO                                  M$LO
     M$SI                                  M$UI                                  B$JIT$
PL6.E3A0      #011=COMMAND_LINE_OPTIONS File=LR_IO.:Z8A6TSI                      SAT 08/09/97 09:35 Page:159  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #011=COMMAND_LINE_OPTIONS File=LR_IO.:Z8A6TSI                      SAT 08/09/97 09:35 Page:160  


      449        1        /*T***********************************************************/
      450        2        /*T*                                                         */
      451        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      452        4        /*T*                                                         */
      453        5        /*T***********************************************************/
      454        6        COMMAND_LINE_OPTIONS:PROC;

      6 37 000000   000000 700200 xent  COMMAND_LIN* TSX0  ! X66_AUTO_0
        37 000001   000024 000000                    ZERO    20,0
        37 000002   000037 710000 37                 TRA     s:1194

      455        7
      456        8        %INCLUDE LR_GRAM_EXT;
      457      547
      458      548        /* PICK UP B$JIT TO GET CONTROL COMMAND BUFFER */
      459      549    1   DCL B$JIT$ PTR SYMREF;
      460      550        %INCLUDE B$JIT;
      461     1153
      462     1154    1   DCL DIAG ENTRY(6);
      463     1155
      464     1156
      465     1157        /* SCANS OPTIONS */
      466     1158    1   DCL I SBIN;
      467     1159    1   DCL J SBIN;
      468     1160    1   DCL K SBIN;
      469     1161    1   DCL OPTCHR CHAR(4);
      470     1162    1   DCL C CHAR(1);
      471     1163    1   DCL LEVEL BOOLEAN;
      472     1164
      473     1165    1   DCL OPTCHR_ERR CHAR(6);
      474     1166
      475     1167
      476     1168    1   SKIP_BLANKS:PROC;

   1168 37 000003   200014 741300       SKIP_BLANKS  STX1  ! OPTCHR_ERR+3,,AUTO

PL6.E3A0      #011=COMMAND_LINE_OPTIONS File=LR_IO.:Z8A6TSI                      SAT 08/09/97 09:35 Page:161  
      477     1169        /* ADVANCE INSTR_INDX TO NEXT NON-BLANK CHARACTER  */
      478     1170
      479     1171    2   DCL JUNK1 UBIN;
      480     1172    2   DCL START SBIN;
      481     1173
      482     1174    2   DCL SEARCH_TAB(0:127) CHAR(1) UNAL CONSTANT
      483     1175
      484     1176    2     INIT(%BINASC(511)*32,%BINASC(0),%BINASC(511)*0);
      485     1177
      486     1178    2           START=INSTR_INDX;

   1178 37 000004   000000 235000 30                 LDA     INSTR_INDX
        37 000005   200016 755100                    STA     START,,AUTO

      487     1179
      488     1180    2           CALL SEARCH(INSTR_INDX,JUNK1,SEARCH_TAB(0),

   1180 37 000006   000000 236000 29                 LDQ     INSTR_LEN
        37 000007   200016 136100                    SBLQ    START,,AUTO
        37 000010   200020 756100                    STQ     START+2,,AUTO
        37 000011   200016 236100                    LDQ     START,,AUTO
        37 000012   200020 720100                    LXL0    START+2,,AUTO
        37 000013   000000 164446                    TCT
        37 000014   000000 000010 27                 ADSC9   INSTR,Q                  cn=0,n=*X0
        37 000015   000000 000000 36                 ARG     SEARCH_TAB
        37 000016   000000 000000 30                 ARG     INSTR_INDX
        37 000017   000000 235000 30                 LDA     INSTR_INDX
        37 000020   000033 771000                    ARL     27
        37 000021   200015 755100                    STA     JUNK1,,AUTO
        37 000022   000000 551040 30                 STBA    INSTR_INDX,'40'O
        37 000023   000000 056000 30                 ASQ     INSTR_INDX

      489     1181    2             SUBSTR(INSTRCHR,0,INSTR_LEN),START);
      490     1182
      491     1183    3           DO WHILE (  (INSTR_INDX < INSTR_LEN)

   1183 37 000024   000026 710000 37                 TRA     s:1186
PL6.E3A0      #011=COMMAND_LINE_OPTIONS File=LR_IO.:Z8A6TSI                      SAT 08/09/97 09:35 Page:162  

      492     1184    3             AND (INSTR(INSTR_INDX)=' ') );
      493     1185    3              INSTR_INDX=INSTR_INDX+1;

   1185 37 000025   000000 054000 30                 AOS     INSTR_INDX

      494     1186    3              END;

   1186 37 000026   000000 236000 30                 LDQ     INSTR_INDX
        37 000027   000000 116000 29                 CMPQ    INSTR_LEN
        37 000030   000035 605000 37                 TPL     s:1187
        37 000031   040000 106406                    CMPC    fill='040'O
        37 000032   000000 000001 27                 ADSC9   INSTR,Q                  cn=0,n=1
        37 000033   000000 000001 38                 ADSC9   0                        cn=0,n=1
        37 000034   000025 600000 37                 TZE     s:1185

      495     1187    2   END SKIP_BLANKS;

   1187 37 000035   200014 221300                    LDX1  ! OPTCHR_ERR+3,,AUTO
        37 000036   000001 702211                    TSX2  ! 1,X1

      496     1188
      497     1189
      498     1190
      499     1191
      500     1192        /* LOOK FOR ( WHICH BEGINS OPTION LINE */
      501     1193
      502     1194    1           INSTRCHR=SUBSTR(B$JIT.CCBUF,0,B$JIT.CCARS);

   1194 37 000037   000000 470400 xsym               LDP0    B$JIT$
        37 000040   000032 220100                    LDX0    26,,PR0
        37 000041   040000 100540                    MLR     fill='040'O
        37 000042   000033 000010                    ADSC9   27,,PR0                  cn=0,n=*X0
        37 000043   000000 001000 27                 ADSC9   INSTR                    cn=0,n=512

      503     1195    1           INSTR_INDX=0;

PL6.E3A0      #011=COMMAND_LINE_OPTIONS File=LR_IO.:Z8A6TSI                      SAT 08/09/97 09:35 Page:163  
   1195 37 000044   000000 450000 30                 STZ     INSTR_INDX

      504     1196    1           INSTR_LEN=B$JIT.CCARS;

   1196 37 000045   000032 236100                    LDQ     26,,PR0
        37 000046   000022 732000                    QRS     18
        37 000047   000000 756000 29                 STQ     INSTR_LEN

      505     1197
      506     1198    1           CALL INDEX(INSTR_INDX,'(',SUBSTR(INSTRCHR,0,INSTR_LEN))

   1198 37 000050   000000 620006                    EAX0    0,QL
        37 000051   000000 124440                    SCM     mask='000'O
        37 000052   000000 000010 27                 ADSC9   INSTR                    cn=0,n=*X0
        37 000053   000001 000001 38                 ADSC9   1                        cn=0,n=1
        37 000054   000000 000000 30                 ARG     INSTR_INDX
        37 000055   000215 606400 37                 TTN     NOTHING

      507     1199    1             ALTRET(NOTHING);
      508     1200    1           INSTR_INDX=INSTR_INDX+1;

   1200 37 000056   000000 054000 30                 AOS     INSTR_INDX

      509     1201
      510     1202    1           I=I+1;

   1202 37 000057   200003 054100                    AOS     I,,AUTO

      511     1203
      512     1204    2           DO WHILE(INSTR_INDX<INSTR_LEN);

   1204 37 000060   000000 236000 30                 LDQ     INSTR_INDX
        37 000061   000000 116000 29                 CMPQ    INSTR_LEN
        37 000062   000215 605000 37                 TPL     NOTHING

      513     1205
      514     1206    2              CALL SKIP_BLANKS;
PL6.E3A0      #011=COMMAND_LINE_OPTIONS File=LR_IO.:Z8A6TSI                      SAT 08/09/97 09:35 Page:164  

   1206 37 000063   000003 701000 37                 TSX1    SKIP_BLANKS
        37 000064   000000 011000                    NOP     0

      515     1207
      516     1208    2              LEVEL=TRUE;

   1208 37 000065   400000 236003                    LDQ     -131072,DU
        37 000066   200010 756100                    STQ     LEVEL,,AUTO

      517     1209
      518     1210    2              IF INSTR_INDX>=INSTR_LEN THEN

   1210 37 000067   000000 236000 30                 LDQ     INSTR_INDX
        37 000070   000000 116000 29                 CMPQ    INSTR_LEN
        37 000071   000215 605000 37                 TPL     NOTHING

      519     1211    2                 GOTO NOTHING;
      520     1212
      521     1213    2              IF SUBSTR(INSTRCHR,INSTR_INDX,1)='N' THEN

   1213 37 000072   040000 106406                    CMPC    fill='040'O
        37 000073   000000 000001 27                 ADSC9   INSTR,Q                  cn=0,n=1
        37 000074   000002 000001 38                 ADSC9   2                        cn=0,n=1
        37 000075   000100 601000 37                 TNZ     s:1219

      522     1214    3              DO;

      523     1215    3                 LEVEL=FALSE;

   1215 37 000076   200010 450100                    STZ     LEVEL,,AUTO

      524     1216    3                 INSTR_INDX=INSTR_INDX+1;

   1216 37 000077   000000 054000 30                 AOS     INSTR_INDX

      525     1217    3                 END;
PL6.E3A0      #011=COMMAND_LINE_OPTIONS File=LR_IO.:Z8A6TSI                      SAT 08/09/97 09:35 Page:165  

      526     1218
      527     1219    2              IF INSTR_INDX>INSTR_LEN THEN

   1219 37 000100   000000 236000 30                 LDQ     INSTR_INDX
        37 000101   000000 116000 29                 CMPQ    INSTR_LEN
        37 000102   000215 605400 37                 TPNZ    NOTHING

      528     1220    2                 GOTO NOTHING;
      529     1221
      530     1222    2              OPTCHR=' ';

   1222 37 000103   000000 236000 38                 LDQ     0
        37 000104   200006 756100                    STQ     OPTCHR,,AUTO

      531     1223    2              I=0;

   1223 37 000105   200003 450100                    STZ     I,,AUTO

      532     1224    3              DO WHILE(I<4);

   1224 37 000106   200003 235100                    LDA     I,,AUTO
        37 000107   000004 115007                    CMPA    4,DL
        37 000110   000151 605000 37                 TPL     s:1240

      533     1225    3                 C=SUBSTR(INSTRCHR,INSTR_INDX,1);

   1225 37 000111   000000 235000 30                 LDA     INSTR_INDX
        37 000112   040100 100405                    MLR     fill='040'O
        37 000113   000000 000001 27                 ADSC9   INSTR,A                  cn=0,n=1
        37 000114   200007 000001                    ADSC9   C,,AUTO                  cn=0,n=1

      534     1226    3                 INSTR_INDX=INSTR_INDX+1;

   1226 37 000115   000000 054000 30                 AOS     INSTR_INDX

      535     1227    3                 IF C=')' THEN
PL6.E3A0      #011=COMMAND_LINE_OPTIONS File=LR_IO.:Z8A6TSI                      SAT 08/09/97 09:35 Page:166  

   1227 37 000116   200007 236100                    LDQ     C,,AUTO
        37 000117   777000 376003                    ANQ     -512,DU
        37 000120   051000 116003                    CMPQ    20992,DU
        37 000121   000125 601000 37                 TNZ     s:1230

      536     1228    3                    I=4;

   1228 37 000122   000004 235007                    LDA     4,DL
        37 000123   200003 755100                    STA     I,,AUTO
        37 000124   000145 710000 37                 TRA     s:1238

      537     1229    3                 ELSE
      538     1230    3                    IF C=',' THEN

   1230 37 000125   200007 236100                    LDQ     C,,AUTO
        37 000126   777000 376003                    ANQ     -512,DU
        37 000127   054000 116003                    CMPQ    22528,DU
        37 000130   000134 601000 37                 TNZ     s:1234

      539     1231    3                       I=4;

   1231 37 000131   000004 235007                    LDA     4,DL
        37 000132   200003 755100                    STA     I,,AUTO
        37 000133   000145 710000 37                 TRA     s:1238

      540     1232    3                    ELSE
      541     1233    4                    DO;

      542     1234    4                       CALL INSERT(OPTCHR,I,1,C);

   1234 37 000134   200003 235100                    LDA     I,,AUTO
        37 000135   040105 100500                    MLR     fill='040'O
        37 000136   200007 000001                    ADSC9   C,,AUTO                  cn=0,n=1
        37 000137   200006 000001                    ADSC9   OPTCHR,A,AUTO            cn=0,n=1

      543     1235    4                       IF INSTR_INDX>=INSTR_LEN THEN
PL6.E3A0      #011=COMMAND_LINE_OPTIONS File=LR_IO.:Z8A6TSI                      SAT 08/09/97 09:35 Page:167  

   1235 37 000140   000000 236000 30                 LDQ     INSTR_INDX
        37 000141   000000 116000 29                 CMPQ    INSTR_LEN
        37 000142   000145 604000 37                 TMI     s:1238

      544     1236    4                          I=4;

   1236 37 000143   000004 235007                    LDA     4,DL
        37 000144   200003 755100                    STA     I,,AUTO

      545     1237    4                       END;

      546     1238    3                 I=I+1;

   1238 37 000145   200003 054100                    AOS     I,,AUTO

      547     1239    3                 END;

   1239 37 000146   200003 235100                    LDA     I,,AUTO
        37 000147   000004 115007                    CMPA    4,DL
        37 000150   000111 604000 37                 TMI     s:1225

      548     1240    2              I = LENGTHW(OPTIONS_TEXT);

   1240 37 000151   000032 236007                    LDQ     26,DL
        37 000152   200003 756100                    STQ     I,,AUTO

      549     1241    3              DO UNTIL (I=0) OR (OPTIONS_TEXT(I) = OPTCHR);

      550     1242    3                I = I - 1;

   1242 37 000153   000001 336007                    LCQ     1,DL
        37 000154   200003 056100                    ASQ     I,,AUTO

      551     1243    3              END;

   1243 37 000155   000162 600000 37                 TZE     s:1244
PL6.E3A0      #011=COMMAND_LINE_OPTIONS File=LR_IO.:Z8A6TSI                      SAT 08/09/97 09:35 Page:168  
        37 000156   200003 720100                    LXL0    I,,AUTO
        37 000157   000000 236010 26                 LDQ     OPTIONS_TEXT,X0
        37 000160   200006 116100                    CMPQ    OPTCHR,,AUTO
        37 000161   000153 601000 37                 TNZ     s:1242

      552     1244    2              IF OPTIONS_TEXT(I)=OPTCHR THEN

   1244 37 000162   200003 720100                    LXL0    I,,AUTO
        37 000163   000000 236010 26                 LDQ     OPTIONS_TEXT,X0
        37 000164   200006 116100                    CMPQ    OPTCHR,,AUTO
        37 000165   000175 601000 37                 TNZ     s:1248

      553     1245    2                 OPTIONS(I)=LEVEL;

   1245 37 000166   200003 235100                    LDA     I,,AUTO
        37 000167   000171 605000 37                 TPL     s:1245+3
        37 000170   000044 035003                    ADLA    36,DU
        37 000171   003005 060500                    CSL     bolr='003'O
        37 000172   200010 000001                    BDSC    LEVEL,,AUTO              by=0,bit=0,n=1
        37 000173   000000 000001 25                 BDSC    OPTIONS,A                by=0,bit=0,n=1
        37 000174   000212 710000 37                 TRA     s:1254

      554     1246    2              ELSE
      555     1247    3                DO;

      556     1248    3                  OPTCHR_ERR = '%%%%%%';

   1248 37 000175   040100 100400                    MLR     fill='040'O
        37 000176   000040 000006 36                 ADSC9   SEARCH_TAB+32            cn=0,n=6
        37 000177   200011 000006                    ADSC9   OPTCHR_ERR,,AUTO         cn=0,n=6

      557     1249    3                  CALL INSERT(OPTCHR_ERR,0,4,OPTCHR);

   1249 37 000200   200006 236100                    LDQ     OPTCHR,,AUTO
        37 000201   200011 756100                    STQ     OPTCHR_ERR,,AUTO

      558     1250    3                  CALL DIAG(6,' ERROR => Illegal command line option: %%',
PL6.E3A0      #011=COMMAND_LINE_OPTIONS File=LR_IO.:Z8A6TSI                      SAT 08/09/97 09:35 Page:169  

   1250 37 000202   200011 630500                    EPPR0   OPTCHR_ERR,,AUTO
        37 000203   200022 450500                    STP0    START+4,,AUTO
        37 000204   000006 237000 38                 LDAQ    6
        37 000205   200020 757100                    STAQ    START+2,,AUTO
        37 000206   200020 630500                    EPPR0   START+2,,AUTO
        37 000207   000003 631400 38                 EPPR1   3
        37 000210   000000 701000 xent               TSX1    DIAG
        37 000211   000000 011000                    NOP     0

      559     1251    3                         OPTCHR_ERR);
      560     1252    3                END;

      561     1253
      562     1254    2              END;

   1254 37 000212   000000 236000 30                 LDQ     INSTR_INDX
        37 000213   000000 116000 29                 CMPQ    INSTR_LEN
        37 000214   000063 604000 37                 TMI     s:1206

   1250 37 000215                       NOTHING      null
      563     1255
      564     1256    1   NOTHING:;
      565     1257
      566     1258
      567     1259    1   END COMMAND_LINE_OPTIONS;

   1259 37 000215   000000 702200 xent               TSX2  ! X66_ARET
      568     1260        %EOD;

PL6.E3A0      #011=COMMAND_LINE_OPTIONS File=LR_IO.:Z8A6TSI                      SAT 08/09/97 09:35 Page:170  
--  Include file information  --

   B$JIT_C.:LIB_E04  is referenced.
   B$JIT.:LIB_E04  cannot be made into a system file and is referenced.
   LR_IO_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   LR_GRAM_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure COMMAND_LINE_OPTIONS.
PL6.E3A0      #011=COMMAND_LINE_OPTIONS File=LR_IO.:Z8A6TSI                      SAT 08/09/97 09:35 Page:171  

 **** Variables and constants ****

  ****  Section 000 LblCom OUT_DCBN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 OUT_DCBN

  ****  Section 006 LblCom SYM_PTRS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 SYM_PTRS(0:1400)

  ****  Section 007 LblCom RIGHT_PARTS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/h SBIN(18)          1 RIGHT_PARTS(0:8000)

  ****  Section 008 LblCom PROD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/h STRC(72)          1 PROD(0:1500)

  ****  Section 009 LblCom NR_PROD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_PROD

PL6.E3A0      #011=COMMAND_LINE_OPTIONS File=LR_IO.:Z8A6TSI                      SAT 08/09/97 09:35 Page:172  
  ****  Section 010 LblCom NR_SYMS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_SYMS

  ****  Section 011 LblCom NR_TERM

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_TERM

  ****  Section 012 LblCom LAST_ACT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LAST_ACT

  ****  Section 013 LblCom LAST_NULL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LAST_NULL

  ****  Section 014 LblCom NR_ONRIGHT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_ONRIGHT

  ****  Section 015 LblCom NR_NT

PL6.E3A0      #011=COMMAND_LINE_OPTIONS File=LR_IO.:Z8A6TSI                      SAT 08/09/97 09:35 Page:173  
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_NT

  ****  Section 016 LblCom PROD_LEN_MAX_EVER

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 PROD_LEN_MAX_EVER

  ****  Section 017 LblCom LAST_ORDER_SPECIFIED

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LAST_ORDER_SPECIFIED

  ****  Section 018 LblCom SEMANTIC_ORDERING

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 SEMANTIC_ORDERING

  ****  Section 019 LblCom ERR_SEV

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ERR_SEV

  ****  Section 020 LblCom SET_LENGTHB

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #011=COMMAND_LINE_OPTIONS File=LR_IO.:Z8A6TSI                      SAT 08/09/97 09:35 Page:174  

     0-0-0/w SBIN              1 SET_LENGTHB

  ****  Section 021 LblCom SET_LENGTHW

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 SET_LENGTHW

  ****  Section 022 LblCom EOF_SYMBOL_PTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 EOF_SYMBOL_PTR

  ****  Section 023 LblCom ERROR_SYMBOL_PTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 ERROR_SYMBOL_PTR

  ****  Section 024 LblCom BOF_SYMBOL_PTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 BOF_SYMBOL_PTR

  ****  Section 025 LblCom OPTIONS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT         r     1 OPTIONS(0:25)
PL6.E3A0      #011=COMMAND_LINE_OPTIONS File=LR_IO.:Z8A6TSI                      SAT 08/09/97 09:35 Page:175  

  ****  Section 026 LblCom OPTIONS_TEXT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(4)     r     1 OPTIONS_TEXT(0:25)

  ****  Section 027 LblCom INSTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR        r     1 INSTR(0:511)               0-0-0/c CHAR(512)   r     1 INSTRCHR

  ****  Section 028 LblCom INSTR_LISTED

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 INSTR_LISTED

  ****  Section 029 LblCom INSTR_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 INSTR_LEN

  ****  Section 030 LblCom INSTR_INDX

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 INSTR_INDX

  ****  Section 031 LblCom EOF_FLAG
PL6.E3A0      #011=COMMAND_LINE_OPTIONS File=LR_IO.:Z8A6TSI                      SAT 08/09/97 09:35 Page:176  

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 EOF_FLAG

  ****  Section 032 LblCom KEY_REC

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(10)          1 KEY_REC

  ****  Section 033 LblCom LINE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(109)         1 LINE

  ****  Section 034 LblCom LINELEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LINELEN

  ****  Section 035 LblCom TSTATS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(7380)        1 TSTATS

  ****  Section 036 RoData COMMAND_LINE_OPTIONS

  ****  Scalars and arrays  ****
PL6.E3A0      #011=COMMAND_LINE_OPTIONS File=LR_IO.:Z8A6TSI                      SAT 08/09/97 09:35 Page:177  
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR        r     1 SEARCH_TAB(0:127)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     7-0-0/c CHAR        r     1 C                          3-0-0/w SBIN        r     1 I
     4-0-0/w SBIN              1 J                         15-0-0/w UBIN        r     1 JUNK1
     5-0-0/w SBIN              1 K                         10-0-0/b BIT         r     1 LEVEL
     6-0-0/c CHAR(4)     r     1 OPTCHR                    11-0-0/c CHAR(6)     r     1 OPTCHR_ERR
    16-0-0/w SBIN        r     1 START

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0N  NULL        r     1 M$LO
     0-0-0N  NULL        r     1 M$OU                       0-0-0N  NULL        r     1 M$SI
     0-0-0N  NULL        r     1 M$SO                       0-0-0N  NULL        r     1 M$UI
     0-0-0/w STRC(351)         1 SYMBOL


   Procedure COMMAND_LINE_OPTIONS requires 142 words for executable code.
   Procedure COMMAND_LINE_OPTIONS requires 20 words of local(AUTO) storage.

PL6.E3A0      #012=DIAG File=LR_IO.:Z8A6TSI                                      SAT 08/09/97 09:35 Page:178  
      569        1        /*T***********************************************************/
      570        2        /*T*                                                         */
      571        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      572        4        /*T*                                                         */
      573        5        /*T***********************************************************/
      574        6        DIAG:   PROC(SEV,MSG1,MSG2,MSG3,MSG4,MSG5);
      575        7
      576        8        /*D*
      577        9               NAME: DIAG
      578       10            PURPOSE: PRINT A DIAGNOSTIC MESSAGE TO THE USER.
      579       11        */
      580       12
      581       13
      582       14
      583       15    1   DCL FORCE_LIST ENTRY;
      584       16    1   DCL FLUSH      ENTRY;
      585       17
      586       18        %INCLUDE LR_GRAM_EXT;
      587      557        %INCLUDE CP_6;
      588     6117
      589     6118    1   DCL SEV SBIN;
      590     6119
      591     6120
      592     6121    1   DCL M$   PTR;
      593     6122    1   DCL MSG  CHAR(132) BASED(M$);
      594     6123    1   DCL MLEN SBIN;
      595     6124
      596     6125    1   DCL MISSMSG CHAR(0) CONSTANT INIT(' missing message ');
      597     6126
      598     6127    1   DCL I SBIN;
      599     6128
      600     6129    1   DCL MSG1 CHAR(140);
      601     6130    1   DCL MSG2 CHAR(140);
      602     6131    1   DCL MSG3 CHAR(140);
      603     6132    1   DCL MSG4 CHAR(140);
      604     6133    1   DCL MSG5 CHAR(140);
      605     6134
PL6.E3A0      #012=DIAG File=LR_IO.:Z8A6TSI                                      SAT 08/09/97 09:35 Page:179  
      606     6135                %SELECT_LO;
      607     6138    1           IF ERR_SEV < SEV THEN
      608     6139    1              ERR_SEV=SEV;
      609     6140    1           CALL FORCE_LIST;
      610     6141    1           LINELEN=0;
      611     6142    2           DO I= 1 TO 5;
      612     6143    3              DO CASE(I);
      613     6144    3               CASE(1);
      614     6145    3                 M$=ADDR(MSG1);
      615     6146    3               CASE(2);
      616     6147    3                 M$=ADDR(MSG2);
      617     6148    3               CASE(3);
      618     6149    3                 M$=ADDR(MSG3);
      619     6150    3               CASE(4);
      620     6151    3                 M$=ADDR(MSG4);
      621     6152    3               CASE(5);
      622     6153    3                 M$=ADDR(MSG5);
      623     6154    3               END;
      624     6155
      625     6156    2              IF M$~=ADDR(NIL) THEN
      626     6157    3              DO;
      627     6158    3                 CALL INDEX(MLEN,'%%',MSG) ALTRET(MISSING_END);
      628     6159    4                 DO WHILE (FALSE);
      629     6160    4   MISSING_END:     M$=ADDR(MISSMSG);
      630     6161    4                    MLEN=LENGTHC(MISSMSG);
      631     6162    4                    END;
      632     6163
      633     6164    3                 IF LINELEN+MLEN>LENGTHC(LINE) THEN
      634     6165    4                 DO;
      635     6166    4                    CALL OUTPUT(LINE,LINELEN);
      636     6167    4                    END;
      637     6168    3                    CALL INSERT(LINE,LINELEN,MLEN,SUBSTR(MSG,0,MLEN));
      638     6169    3                    LINELEN=LINELEN+MLEN;
      639     6170    3                 END;
      640     6171    2              END /* DO I=1 TO 5 */;
      641     6172
      642     6173    1           CALL FLUSH;
PL6.E3A0      #012=DIAG File=LR_IO.:Z8A6TSI                                      SAT 08/09/97 09:35 Page:180  
      643     6174
      644     6175    1           IF ERR_SEV>=15 THEN
      645     6176    1              CALL M$ERR;
      646     6177
      647     6178
      648     6179    1   END;

PL6.E3A0      #012=DIAG File=LR_IO.:Z8A6TSI                                      SAT 08/09/97 09:35 Page:181  
--  Include file information  --

   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   LR_IO_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   LR_GRAM_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure DIAG.

   Procedure DIAG requires 86 words for executable code.
   Procedure DIAG requires 12 words of local(AUTO) storage.

    No errors detected in file LR_IO.:Z8A6TSI    .

PL6.E3A0      #012=DIAG File=LR_IO.:Z8A6TSI                                      SAT 08/09/97 09:35 Page:182  

 Object Unit name= DIAG                                       File name= LR_IO.:Z8A6TOU
 UTS= AUG 09 '97 09:35:52.92 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none     1      1  OUT_DCBN
    1   DCB   even  none     0      0  M$OU
    2   DCB   even  none     0      0  M$SO
    3   DCB   even  none     0      0  M$LO
    4   DCB   even  none     0      0  M$SI
    5   DCB   even  none     0      0  M$UI
    6  LblCom even  none  1401   2571  SYM_PTRS
    7  LblCom even  none  4001   7641  RIGHT_PARTS
    8  LblCom even  none  3002   5672  PROD
    9  LblCom even  none     1      1  NR_PROD
   10  LblCom even  none     1      1  NR_SYMS
   11  LblCom even  none     1      1  NR_TERM
   12  LblCom even  none     1      1  LAST_ACT
   13  LblCom even  none     1      1  LAST_NULL
   14  LblCom even  none     1      1  NR_ONRIGHT
   15  LblCom even  none     1      1  NR_NT
   16  LblCom even  none     1      1  PROD_LEN_MAX_EVER
   17  LblCom even  none     1      1  LAST_ORDER_SPECIFIED
   18  LblCom even  none     1      1  SEMANTIC_ORDERING
   19  LblCom even  none     1      1  ERR_SEV
   20  LblCom even  none     1      1  SET_LENGTHB
   21  LblCom even  none     1      1  SET_LENGTHW
   22  LblCom even  none     1      1  EOF_SYMBOL_PTR
   23  LblCom even  none     1      1  ERROR_SYMBOL_PTR
   24  LblCom even  none     1      1  BOF_SYMBOL_PTR
   25  LblCom even  none     1      1  OPTIONS
   26  LblCom even  none    26     32  OPTIONS_TEXT
   27  LblCom even  none   128    200  INSTR
   28  LblCom even  none     1      1  INSTR_LISTED
PL6.E3A0      #012=DIAG File=LR_IO.:Z8A6TSI                                      SAT 08/09/97 09:35 Page:183  
   29  LblCom even  none     1      1  INSTR_LEN
   30  LblCom even  none     1      1  INSTR_INDX
   31  LblCom even  none     1      1  EOF_FLAG
   32  LblCom even  none     3      3  KEY_REC
   33  LblCom even  none    28     34  LINE
   34  LblCom even  none     1      1  LINELEN
   35  LblCom even  none   205    315  TSTATS
   36   DCB   even  none     0      0  M$UC
   37  RoData even  UTS      6      6  DIAG
   38   Proc  even  none    86    126  DIAG
   39  RoData even  none     6      6  DIAG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    38      0   yes            yes      Std        6  DIAG

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 FORCE_LIST
         yes           Std       0 FLUSH
         yes           Std       2 OUTPUT
                       nStd      0 X66_AUTO_N
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$OU                                  M$SO                                  M$LO
     M$SI                                  M$UI                                  M$UC
PL6.E3A0      #012=DIAG File=LR_IO.:Z8A6TSI                                      SAT 08/09/97 09:35 Page:184  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #012=DIAG File=LR_IO.:Z8A6TSI                                      SAT 08/09/97 09:35 Page:185  


      569        1        /*T***********************************************************/
      570        2        /*T*                                                         */
      571        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      572        4        /*T*                                                         */
      573        5        /*T***********************************************************/
      574        6        DIAG:   PROC(SEV,MSG1,MSG2,MSG3,MSG4,MSG5);

      6 38 000000   000000 700200 xent  DIAG         TSX0  ! X66_AUTO_N
        38 000001   000014 000006                    ZERO    12,6

      575        7
      576        8        /*D*
      577        9               NAME: DIAG
      578       10            PURPOSE: PRINT A DIAGNOSTIC MESSAGE TO THE USER.
      579       11        */
      580       12
      581       13
      582       14
      583       15    1   DCL FORCE_LIST ENTRY;
      584       16    1   DCL FLUSH      ENTRY;
      585       17
      586       18        %INCLUDE LR_GRAM_EXT;
      587      557        %INCLUDE CP_6;
      588     6117
      589     6118    1   DCL SEV SBIN;
      590     6119
      591     6120
      592     6121    1   DCL M$   PTR;
      593     6122    1   DCL MSG  CHAR(132) BASED(M$);
      594     6123    1   DCL MLEN SBIN;
      595     6124
      596     6125    1   DCL MISSMSG CHAR(0) CONSTANT INIT(' missing message ');
      597     6126
      598     6127    1   DCL I SBIN;
      599     6128
      600     6129    1   DCL MSG1 CHAR(140);
PL6.E3A0      #012=DIAG File=LR_IO.:Z8A6TSI                                      SAT 08/09/97 09:35 Page:186  
      601     6130    1   DCL MSG2 CHAR(140);
      602     6131    1   DCL MSG3 CHAR(140);
      603     6132    1   DCL MSG4 CHAR(140);
      604     6133    1   DCL MSG5 CHAR(140);
      605     6134
      606     6135                %SELECT_LO;

   6136 38 000002   000000 236007 xsym               LDQ     M$LO,DL
        38 000003   000000 756000 0                  STQ     OUT_DCBN

      607     6138    1           IF ERR_SEV < SEV THEN

   6138 38 000004   200003 470500                    LDP0    @SEV,,AUTO
        38 000005   000000 236000 19                 LDQ     ERR_SEV
        38 000006   000000 116100                    CMPQ    0,,PR0
        38 000007   000012 605000 38                 TPL     s:6140

      608     6139    1              ERR_SEV=SEV;

   6139 38 000010   000000 235100                    LDA     0,,PR0
        38 000011   000000 755000 19                 STA     ERR_SEV

      609     6140    1           CALL FORCE_LIST;

   6140 38 000012   000000 631400 39                 EPPR1   0
        38 000013   000000 701000 xent               TSX1    FORCE_LIST
        38 000014   000000 011000                    NOP     0

      610     6141    1           LINELEN=0;

   6141 38 000015   000000 450000 34                 STZ     LINELEN

      611     6142    2           DO I= 1 TO 5;

   6142 38 000016   000001 235007                    LDA     1,DL
        38 000017   200013 755100                    STA     I,,AUTO

PL6.E3A0      #012=DIAG File=LR_IO.:Z8A6TSI                                      SAT 08/09/97 09:35 Page:187  
      612     6143    3              DO CASE(I);

   6143 38 000020   200013 235100                    LDA     I,,AUTO
        38 000021   000006 115007                    CMPA    6,DL
        38 000022   000024 602005 38                 TNC     s:6143+4,AL
        38 000023   000050 710000 38                 TRA     s:6156
        38 000024   000050 710000 38                 TRA     s:6156
        38 000025   000032 710000 38                 TRA     s:6145
        38 000026   000035 710000 38                 TRA     s:6147
        38 000027   000040 710000 38                 TRA     s:6149
        38 000030   000043 710000 38                 TRA     s:6151
        38 000031   000046 710000 38                 TRA     s:6153

      613     6144    3               CASE(1);

      614     6145    3                 M$=ADDR(MSG1);

   6145 38 000032   200004 236100                    LDQ     @MSG1,,AUTO
        38 000033   200011 756100                    STQ     M$,,AUTO
        38 000034   000050 710000 38                 TRA     s:6156

      615     6146    3               CASE(2);

      616     6147    3                 M$=ADDR(MSG2);

   6147 38 000035   200005 236100                    LDQ     @MSG2,,AUTO
        38 000036   200011 756100                    STQ     M$,,AUTO
        38 000037   000050 710000 38                 TRA     s:6156

      617     6148    3               CASE(3);

      618     6149    3                 M$=ADDR(MSG3);

   6149 38 000040   200006 236100                    LDQ     @MSG3,,AUTO
        38 000041   200011 756100                    STQ     M$,,AUTO
        38 000042   000050 710000 38                 TRA     s:6156

PL6.E3A0      #012=DIAG File=LR_IO.:Z8A6TSI                                      SAT 08/09/97 09:35 Page:188  
      619     6150    3               CASE(4);

      620     6151    3                 M$=ADDR(MSG4);

   6151 38 000043   200007 236100                    LDQ     @MSG4,,AUTO
        38 000044   200011 756100                    STQ     M$,,AUTO
        38 000045   000050 710000 38                 TRA     s:6156

      621     6152    3               CASE(5);

      622     6153    3                 M$=ADDR(MSG5);

   6153 38 000046   200010 236100                    LDQ     @MSG5,,AUTO
        38 000047   200011 756100                    STQ     M$,,AUTO

      623     6154    3               END;

      624     6155
      625     6156    2              IF M$~=ADDR(NIL) THEN

   6156 38 000050   200011 236100                    LDQ     M$,,AUTO
        38 000051   000001 116000 39                 CMPQ    1
        38 000052   000111 600000 38                 TZE     s:6171

      626     6157    3              DO;

      627     6158    3                 CALL INDEX(MLEN,'%%',MSG) ALTRET(MISSING_END);

   6158 38 000053   200011 470500                    LDP0    M$,,AUTO
        38 000054   000000 120500                    SCD
        38 000055   000000 000204                    ADSC9   0,,PR0                   cn=0,n=132
        38 000056   000005 000002 37                 ADSC9   MISSMSG+5                cn=0,n=2
        38 000057   200012 000100                    ARG     MLEN,,AUTO
        38 000060   000063 607000 38                 TTF     s:6159
        38 000061   200012 054100                    AOS     MLEN,,AUTO
        38 000062   000064 710000 38                 TRA     MISSING_END

PL6.E3A0      #012=DIAG File=LR_IO.:Z8A6TSI                                      SAT 08/09/97 09:35 Page:189  
      628     6159    4                 DO WHILE (FALSE);

   6159 38 000063   000070 710000 38                 TRA     s:6164

      629     6160    4   MISSING_END:     M$=ADDR(MISSMSG);

   6160 38 000064   000002 236000 39    MISSING_END  LDQ     2
        38 000065   200011 756100                    STQ     M$,,AUTO

      630     6161    4                    MLEN=LENGTHC(MISSMSG);

   6161 38 000066   000021 235007                    LDA     17,DL
        38 000067   200012 755100                    STA     MLEN,,AUTO

      631     6162    4                    END;

      632     6163
      633     6164    3                 IF LINELEN+MLEN>LENGTHC(LINE) THEN

   6164 38 000070   000000 236000 34                 LDQ     LINELEN
        38 000071   200012 036100                    ADLQ    MLEN,,AUTO
        38 000072   000155 116007                    CMPQ    109,DL
        38 000073   000100 604400 38                 TMOZ    s:6168

      634     6165    4                 DO;

      635     6166    4                    CALL OUTPUT(LINE,LINELEN);

   6166 38 000074   000004 630400 39                 EPPR0   4
        38 000075   000003 631400 39                 EPPR1   3
        38 000076   000000 701000 xent               TSX1    OUTPUT
        38 000077   000000 011000                    NOP     0

      636     6167    4                    END;

      637     6168    3                    CALL INSERT(LINE,LINELEN,MLEN,SUBSTR(MSG,0,MLEN));

PL6.E3A0      #012=DIAG File=LR_IO.:Z8A6TSI                                      SAT 08/09/97 09:35 Page:190  
   6168 38 000100   200011 470500                    LDP0    M$,,AUTO
        38 000101   200012 720100                    LXL0    MLEN,,AUTO
        38 000102   000000 235000 34                 LDA     LINELEN
        38 000103   040045 100540                    MLR     fill='040'O
        38 000104   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
        38 000105   000000 000010 33                 ADSC9   LINE,A                   cn=0,n=*X0

      638     6169    3                    LINELEN=LINELEN+MLEN;

   6169 38 000106   000000 236000 34                 LDQ     LINELEN
        38 000107   200012 036100                    ADLQ    MLEN,,AUTO
        38 000110   000000 756000 34                 STQ     LINELEN

      639     6170    3                 END;

      640     6171    2              END /* DO I=1 TO 5 */;

   6171 38 000111   200013 054100                    AOS     I,,AUTO
        38 000112   200013 235100                    LDA     I,,AUTO
        38 000113   000005 115007                    CMPA    5,DL
        38 000114   000020 604400 38                 TMOZ    s:6143

      641     6172
      642     6173    1           CALL FLUSH;

   6173 38 000115   000000 631400 39                 EPPR1   0
        38 000116   000000 701000 xent               TSX1    FLUSH
        38 000117   000000 011000                    NOP     0

      643     6174
      644     6175    1           IF ERR_SEV>=15 THEN

   6175 38 000120   000000 235000 19                 LDA     ERR_SEV
        38 000121   000017 115007                    CMPA    15,DL
        38 000122   000125 604000 38                 TMI     s:6179

      645     6176    1              CALL M$ERR;
PL6.E3A0      #012=DIAG File=LR_IO.:Z8A6TSI                                      SAT 08/09/97 09:35 Page:191  

   6176 38 000123   000002 713400                    CLIMB   err
        38 000124   000000 401760                    pmme    nvectors=0

      646     6177
      647     6178
      648     6179    1   END;

   6179 38 000125   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #012=DIAG File=LR_IO.:Z8A6TSI                                      SAT 08/09/97 09:35 Page:192  
--  Include file information  --

   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   LR_IO_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   LR_GRAM_EXT.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure DIAG.
PL6.E3A0      #012=DIAG File=LR_IO.:Z8A6TSI                                      SAT 08/09/97 09:35 Page:193  

 **** Variables and constants ****

  ****  Section 000 LblCom OUT_DCBN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 OUT_DCBN

  ****  Section 006 LblCom SYM_PTRS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 SYM_PTRS(0:1400)

  ****  Section 007 LblCom RIGHT_PARTS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/h SBIN(18)          1 RIGHT_PARTS(0:8000)

  ****  Section 008 LblCom PROD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/h STRC(72)          1 PROD(0:1500)

  ****  Section 009 LblCom NR_PROD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_PROD

PL6.E3A0      #012=DIAG File=LR_IO.:Z8A6TSI                                      SAT 08/09/97 09:35 Page:194  
  ****  Section 010 LblCom NR_SYMS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_SYMS

  ****  Section 011 LblCom NR_TERM

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_TERM

  ****  Section 012 LblCom LAST_ACT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LAST_ACT

  ****  Section 013 LblCom LAST_NULL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LAST_NULL

  ****  Section 014 LblCom NR_ONRIGHT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_ONRIGHT

  ****  Section 015 LblCom NR_NT

PL6.E3A0      #012=DIAG File=LR_IO.:Z8A6TSI                                      SAT 08/09/97 09:35 Page:195  
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 NR_NT

  ****  Section 016 LblCom PROD_LEN_MAX_EVER

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 PROD_LEN_MAX_EVER

  ****  Section 017 LblCom LAST_ORDER_SPECIFIED

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LAST_ORDER_SPECIFIED

  ****  Section 018 LblCom SEMANTIC_ORDERING

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 SEMANTIC_ORDERING

  ****  Section 019 LblCom ERR_SEV

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 ERR_SEV

  ****  Section 020 LblCom SET_LENGTHB

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #012=DIAG File=LR_IO.:Z8A6TSI                                      SAT 08/09/97 09:35 Page:196  

     0-0-0/w SBIN              1 SET_LENGTHB

  ****  Section 021 LblCom SET_LENGTHW

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 SET_LENGTHW

  ****  Section 022 LblCom EOF_SYMBOL_PTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 EOF_SYMBOL_PTR

  ****  Section 023 LblCom ERROR_SYMBOL_PTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 ERROR_SYMBOL_PTR

  ****  Section 024 LblCom BOF_SYMBOL_PTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 BOF_SYMBOL_PTR

  ****  Section 025 LblCom OPTIONS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 OPTIONS(0:25)
PL6.E3A0      #012=DIAG File=LR_IO.:Z8A6TSI                                      SAT 08/09/97 09:35 Page:197  

  ****  Section 026 LblCom OPTIONS_TEXT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(4)           1 OPTIONS_TEXT(0:25)

  ****  Section 027 LblCom INSTR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR              1 INSTR(0:511)               0-0-0/c CHAR(512)         1 INSTRCHR

  ****  Section 028 LblCom INSTR_LISTED

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 INSTR_LISTED

  ****  Section 029 LblCom INSTR_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 INSTR_LEN

  ****  Section 030 LblCom INSTR_INDX

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 INSTR_INDX

  ****  Section 031 LblCom EOF_FLAG
PL6.E3A0      #012=DIAG File=LR_IO.:Z8A6TSI                                      SAT 08/09/97 09:35 Page:198  

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT               1 EOF_FLAG

  ****  Section 032 LblCom KEY_REC

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(10)          1 KEY_REC

  ****  Section 033 LblCom LINE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(109)   r     1 LINE

  ****  Section 034 LblCom LINELEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 LINELEN

  ****  Section 035 LblCom TSTATS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(7380)        1 TSTATS

  ****  Section 037 RoData DIAG

  ****  Scalars and arrays  ****
PL6.E3A0      #012=DIAG File=LR_IO.:Z8A6TSI                                      SAT 08/09/97 09:35 Page:199  
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(17)    r     1 MISSMSG

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @MSG1                      5-0-0/w PTR         r     1 @MSG2
     6-0-0/w PTR         r     1 @MSG3                      7-0-0/w PTR         r     1 @MSG4
    10-0-0/w PTR         r     1 @MSG5                      3-0-0/w PTR         r     1 @SEV
    13-0-0/w SBIN        r     1 I                         11-0-0/w PTR         r     1 M$
    12-0-0/w SBIN        r     1 MLEN                      *0-0-0/c CHAR(140)   r     1 MSG1
    *0-0-0/c CHAR(140)   r     1 MSG2                      *0-0-0/c CHAR(140)   r     1 MSG3
    *0-0-0/c CHAR(140)   r     1 MSG4                      *0-0-0/c CHAR(140)   r     1 MSG5
    *0-0-0/w SBIN        r     1 SEV

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0N  NULL        r     1 M$LO                       0-0-0N  NULL        r     1 M$OU
     0-0-0N  NULL        r     1 M$SI                       0-0-0N  NULL        r     1 M$SO
     0-0-0N  NULL        r     1 M$UC                       0-0-0N  NULL        r     1 M$UI
     0-0-0/c CHAR(132)   r     1 MSG                        0-0-0/w STRC(351)         1 SYMBOL


   Procedure DIAG requires 86 words for executable code.
   Procedure DIAG requires 12 words of local(AUTO) storage.

    No errors detected in file LR_IO.:Z8A6TSI    .
