VERSION E05

PL6.E3A0      #001=PSD$PROCS File=PSD$PROCS.:E05TSI                              WED 07/30/97 04:33 Page:1    
        1        1        /*M*  PSD$DISPLAY_PROCS    Display shared-processor usage data                */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* CLM=77,CRM=80,CRT=1,PLM=3,CTI=1,THI=2                                    */
        8        8        /*P*  NAME:    PSD$DISPLAY_PROCS
        9        9              PURPOSE: Display shared-processor usage data                            */
       10       10        PSD$PROCS: PROC;
       11       11        %INCLUDE CP_6;
       12       92        %INCLUDE PS_DATA_R;
       13     5388        %INCLUDE CP_6_SUBS;
       14     5928        %MACRO INVOKE_B$P (SYMREF=SYMREF);
       15     5929        %INCLUDE B$P;
       16     6013        %MEND;
       17     6014        %INVOKE_B$P (SYMREF=AUTO);
       18     6084        %EJECT;
PL6.E3A0      #001=PSD$PROCS File=PSD$PROCS.:E05TSI                              WED 07/30/97 04:33 Page:2    
       19     6085    1   DCL 1 PROC_FMT STATIC,
       20     6086    1         2 * CHAR(0) INIT ('%/Processor%19-Type%27-Users'),
       21     6087    1         2 * CHAR(0) INIT ('%36-{.....snap.....}%55-{.....all......}%/  name'),
       22     6088    1         2 * CHAR(0) INIT ('%36-{%% exec  %% serv}%55-{%% exec  %% serv}%/');
       23     6089
       24     6090    1   DCL 1 PROC_FORMAT STATIC,
       25     6091    1         2 * CHAR (0) INIT
       26     6092    1           ('%A%19-%A%28-%3D%37- %3D.%D   %3D.%D%56- %3D.%D   %3D.%D');
       27     6093
       28     6094    1   DCL 1 PROC_DATA STATIC,
       29     6095    1         2 NAME CHAR (16),
       30     6096    1         2 NAME1 REDEF NAME,
       31     6097    1           3 * CHAR (15),
       32     6098    1           3 TOO_BIG CHAR(1),
       33     6099    1         2 TYPE CHAR(4),
       34     6100    1         2 NUM,
       35     6101    1           3 USERS UBIN,
       36     6102    1           3 SNAP,
       37     6103    1             4 XEQTIME,
       38     6104    1               5 * UBIN,
       39     6105    1               5 * UBIN,
       40     6106    1             4 SRVTIME,
       41     6107    1               5 * UBIN,
       42     6108    1               5 * UBIN,
       43     6109    1           3 ALL,
       44     6110    1             4 XEQTIME,
       45     6111    1               5 * UBIN,
       46     6112    1               5 * UBIN,
       47     6113    1             4 SRVTIME,
       48     6114    1               5 * UBIN,
       49     6115    1               5 * UBIN;
       50     6116
       51     6117    1   DCL PSL$LOCATE ENTRY (3);
       52     6118        %INCLUDE XUF_ENTRY;
       53     6126    1   DCL PSL$CHOMP ENTRY (5);
       54     6127    1   DCL PSD$EJECT ENTRY (1);
       55     6128    1   DCL PSD$SKIP ENTRY;
PL6.E3A0      #001=PSD$PROCS File=PSD$PROCS.:E05TSI                              WED 07/30/97 04:33 Page:3    
       56     6129    1   DCL I UBIN;
       57     6130    1   DCL TEMP1 UBIN;
       58     6131    1   DCL TEMP2 UBIN;
       59     6132    1   DCL OLD_VALUE UBIN;
       60     6133    1   DCL NEW_VALUE UBIN;
       61     6134    1   DCL P$ PTR;
       62     6135    1   DCL Q$ PTR;
       63     6136    1   DCL OWNER_VECTOR BIT(72) DALIGNED STATIC;
       64     6137    1   DCL NUMBER_VECTOR BIT(72) DALIGNED STATIC;
       65     6138        %EJECT;
PL6.E3A0      #001=PSD$PROCS File=PSD$PROCS.:E05TSI                              WED 07/30/97 04:33 Page:4    
       66     6139    1   CHOMP: PROC (NEW_VAL, OLD_VAL, ALL_AREA, SNAP_AREA);
       67     6140
       68     6141    2   DCL OLD_VAL UBIN;
       69     6142    2   DCL NEW_VAL UBIN;
       70     6143    2   DCL SNAP_AREA (0:1) UBIN;
       71     6144    2   DCL ALL_AREA  (0:1) UBIN;
       72     6145
       73     6146    2   CHUMLEY: PROC (NUMBER, TARGET);
       74     6147
       75     6148    3   DCL NUMBER UBIN;
       76     6149    3   DCL NUMBER_SBIN REDEF NUMBER SBIN;
       77     6150    3   DCL 1 TARGET,
       78     6151    3         2 INTEGER UBIN,
       79     6152    3         2 FRACTION UBIN;
       80     6153
       81     6154    3      TARGET.INTEGER = NUMBER/10;
       82     6155    3      TARGET.FRACTION = MOD(NUMBER_SBIN, 10);
       83     6156
       84     6157    3      RETURN;
       85     6158
       86     6159    3   END CHUMLEY;
       87     6160
       88     6161    2      CALL PSL$CHOMP (OLD_VAL*10, NEW_VAL*10, PERCENT#, TEMP1, TEMP2);
       89     6162
       90     6163    2      CALL CHUMLEY (TEMP1, ALL_AREA);
       91     6164    2      CALL CHUMLEY (TEMP2, SNAP_AREA);
       92     6165
       93     6166    2      RETURN;
       94     6167
       95     6168    2   END CHOMP;
       96     6169        %EJECT;
PL6.E3A0      #001=PSD$PROCS File=PSD$PROCS.:E05TSI                              WED 07/30/97 04:33 Page:5    
       97     6170    1      IF PS_OLD_PMDAT$ = ADDR(NIL)
       98     6171    1        THEN
       99     6172    1         CALL PSD$EJECT;
      100     6173    1        ELSE
      101     6174    1         CALL PSD$EJECT (15);
      102     6175
      103     6176    1      CALL PSL$LOCATE (B$P#, P$, Q$);
      104     6177
      105     6178    1      P_NPROCS = P$ -> BLOCK.ENTRIES;
      106     6179
      107     6180    1      CALL X$WRITE (PS_FDS, VECTOR(PROC_FMT));
      108     6181
      109     6182    1      P$ = ADDR(P$->BLOCK.DATA);
      110     6183    1      IF Q$ ~= ADDR(NIL)
      111     6184    1        THEN Q$ = ADDR(Q$->BLOCK.DATA);
      112     6185
      113     6186    2      DO I = 1 TO P_NPROCS - 1;
      114     6187
      115     6188    2         PROC_DATA.NUM = '0'B;
      116     6189
      117     6190    2         IF Q$ = ADDR(NIL)
      118     6191    2           THEN
      119     6192    2            HISTORY_FLAG = %YES#;
      120     6193    2           ELSE
      121     6194    2            IF P$ -> B$P.NAME(I) = Q$ -> B$P.NAME(I)
      122     6195    2             AND P$ -> B$P.CRDATE(I) = Q$ -> B$P.CRDATE(I)
      123     6196    2              THEN
      124     6197    2               HISTORY_FLAG = %YES#;
      125     6198    2              ELSE
      126     6199    2               HISTORY_FLAG = %NO#;
      127     6200
      128     6201    2         IF (HISTORY_FLAG) AND (P$ -> B$P.PPC(I) > 0)
      129     6202    3           THEN DO;                            /* Select only "valid" processors */
      130     6203
      131     6204    3            PROC_DATA.NAME = ADDR(P$->B$P.NAME(I))->TEXTC.TEXT;
      132     6205
      133     6206    3            IF P$->B$P.NAME.COUNT(I) > 15
PL6.E3A0      #001=PSD$PROCS File=PSD$PROCS.:E05TSI                              WED 07/30/97 04:33 Page:6    
      134     6207    3              THEN
      135     6208    3               PROC_DATA.NAME1.TOO_BIG = '>';
      136     6209
      137     6210    3            IF (P$->B$P.FLGS(I) & %P_CP)
      138     6211    3              THEN
      139     6212    3               PROC_DATA.TYPE = 'icp';
      140     6213    3              ELSE
      141     6214    3               IF (P$->B$P.FLGS(I) & %P_DB)
      142     6215    3                 THEN
      143     6216    3                  PROC_DATA.TYPE = 'idb';
      144     6217    3                 ELSE
      145     6218    3                  IF (P$->B$P.FLGS(I) & %P_STATS)
      146     6219    3                    THEN
      147     6220    3                     PROC_DATA.TYPE = 'stt';
      148     6221    3                    ELSE
      149     6222    3                     IF (P$->B$P.FLGS(I) & %P_SP)
      150     6223    3                       THEN
      151     6224    3                        PROC_DATA.TYPE = 'std';
      152     6225
      153     6226    3            PROC_DATA.NUM.USERS = P$->B$P.UC(I);
      154     6227
      155     6228    3            IF P$->B$P.FLGS(I) & (%P_CP | %P_DB | %P_SP)
      156     6229    4              THEN DO;
      157     6230
      158     6231    4               NUMBER_VECTOR = VECTOR(PROC_DATA.NUM);
      159     6232
      160     6233    4               IF Q$ = ADDR(NIL)
      161     6234    5                 THEN DO;
      162     6235
      163     6236    5                  CALL CHOMP(P$->B$P.XEQTIME(I), 0, PROC_DATA.NUM.ALL.XEQTIME,
      164     6237    5                   PROC_DATA.NUM.SNAP.XEQTIME);
      165     6238
      166     6239    5                  CALL CHOMP(P$->B$P.SRVTIME(I), 0, PROC_DATA.NUM.ALL.SRVTIME,
      167     6240    5                   PROC_DATA.NUM.SNAP.SRVTIME);
      168     6241
      169     6242    5                  END;
      170     6243
PL6.E3A0      #001=PSD$PROCS File=PSD$PROCS.:E05TSI                              WED 07/30/97 04:33 Page:7    
      171     6244    5                 ELSE DO;
      172     6245
      173     6246    5                  CALL CHOMP(P$->B$P.XEQTIME(I), Q$->B$P.XEQTIME(I),
      174     6247    5                   PROC_DATA.NUM.ALL.XEQTIME, PROC_DATA.NUM.SNAP.XEQTIME);
      175     6248
      176     6249    5                  CALL CHOMP(P$->B$P.SRVTIME(I), Q$->B$P.SRVTIME(I),
      177     6250    5                   PROC_DATA.NUM.ALL.SRVTIME, PROC_DATA.NUM.SNAP.SRVTIME);
      178     6251
      179     6252    5                  END;
      180     6253
      181     6254    4               IF (PROC_DATA.NUM.SNAP ~= '0'B OR PROC_DATA.NUM.USERS > 0
      182     6255    4                OR Q$ = ADDR(NIL))
      183     6256    4                AND PROC_DATA.NAME ~= ' '
      184     6257    4                 THEN
      185     6258    4                  CALL X$WRITE (PS_FDS, VECTOR(PROC_FORMAT),
      186     6259    4                   VECTOR(PROC_DATA.NAME), VECTOR(PROC_DATA.TYPE),
      187     6260    4                   NUMBER_VECTOR);
      188     6261
      189     6262    4               END /* do if displayable */;
      190     6263
      191     6264    3            END /* do if processor is valid */;
      192     6265
      193     6266    2         END /* do i */;
      194     6267
      195     6268    1      CALL PSD$SKIP;
      196     6269
      197     6270    1      RETURN;
      198     6271
      199     6272    1   END PSD$PROCS;

PL6.E3A0      #001=PSD$PROCS File=PSD$PROCS.:E05TSI                              WED 07/30/97 04:33 Page:8    
--  Include file information  --

   XUF_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   B$P.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   P_FEP_M.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   PM_BUCKET_C.:E05TOU  is referenced.
   PS_SUBS_C.:E05TOU  is referenced.
   PS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure PSD$PROCS.

   Procedure PSD$PROCS requires 270 words for executable code.
   Procedure PSD$PROCS requires 38 words of local(AUTO) storage.

    No errors detected in file PSD$PROCS.:E05TSI    .

PL6.E3A0      #001=PSD$PROCS File=PSD$PROCS.:E05TSI                              WED 07/30/97 04:33 Page:9    

 Object Unit name= PSD$PROCS                                  File name= PSD$PROCS.:E05TOU
 UTS= JUL 30 '97 04:33:07.60 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$LO
    2   DCB   even  none     0      0  M$DO
    3   DCB   even  none     0      0  M$SI
    4   DCB   even  none     0      0  F$LOG
    5   DCB   even  none     0      0  M$ME
    6   DCB   even  none     0      0  M$HLPCG
    7  RtLbCm even  none    30     36  PS_FDS
    8  RtLbCm even  none    32     40  PS_SELECT_RPN
    9  RtLbCm even  none    17     21  PS_STATS_RPN
   10  RtLbCm even  none    34     42  PS_STATS_BUCKET
   11   Data  even  none    64    100  PSD$PROCS
   12  RoData even  UTS      4      4  PSD$PROCS
   13   Proc  even  none   270    416  PSD$PROCS
   14  RoData even  none    31     37  PSD$PROCS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    13      0   yes            yes      Std        0  PSD$PROCS
PL6.E3A0      #001=PSD$PROCS File=PSD$PROCS.:E05TSI                              WED 07/30/97 04:33 Page:10   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 PSD$EJECT
         yes           Std       3 PSL$LOCATE
         yes           Std      22 X$WRITE
         yes           Std       0 PSD$SKIP
         yes           Std       5 PSL$CHOMP
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$LO                                  M$DO
     M$SI                                  F$LOG                                 M$ME
     M$HLPCG                               PS_OLD_PMDAT$                         PS_BUFFER
     PS_STATS$                             B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=PSD$PROCS File=PSD$PROCS.:E05TSI                              WED 07/30/97 04:33 Page:11   


        1        1        /*M*  PSD$DISPLAY_PROCS    Display shared-processor usage data                */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* CLM=77,CRM=80,CRT=1,PLM=3,CTI=1,THI=2                                    */
        8        8        /*P*  NAME:    PSD$DISPLAY_PROCS
        9        9              PURPOSE: Display shared-processor usage data                            */
       10       10        PSD$PROCS: PROC;

     10 13 000000   000000 700200 xent  PSD$PROCS    TSX0  ! X66_AUTO_0
        13 000001   000046 000000                    ZERO    38,0
        13 000002   000065 710000 13                 TRA     s:6170

       11       11        %INCLUDE CP_6;
       12       92        %INCLUDE PS_DATA_R;
       13     5388        %INCLUDE CP_6_SUBS;
       14     5928        %MACRO INVOKE_B$P (SYMREF=SYMREF);
       15     5929        %INCLUDE B$P;
       16     6013        %MEND;
       17     6014        %INVOKE_B$P (SYMREF=AUTO);
       18     6084        %EJECT;
PL6.E3A0      #001=PSD$PROCS File=PSD$PROCS.:E05TSI                              WED 07/30/97 04:33 Page:12   
       19     6085    1   DCL 1 PROC_FMT STATIC,
       20     6086    1         2 * CHAR(0) INIT ('%/Processor%19-Type%27-Users'),
       21     6087    1         2 * CHAR(0) INIT ('%36-{.....snap.....}%55-{.....all......}%/  name'),
       22     6088    1         2 * CHAR(0) INIT ('%36-{%% exec  %% serv}%55-{%% exec  %% serv}%/');
       23     6089
       24     6090    1   DCL 1 PROC_FORMAT STATIC,
       25     6091    1         2 * CHAR (0) INIT
       26     6092    1           ('%A%19-%A%28-%3D%37- %3D.%D   %3D.%D%56- %3D.%D   %3D.%D');
       27     6093
       28     6094    1   DCL 1 PROC_DATA STATIC,
       29     6095    1         2 NAME CHAR (16),
       30     6096    1         2 NAME1 REDEF NAME,
       31     6097    1           3 * CHAR (15),
       32     6098    1           3 TOO_BIG CHAR(1),
       33     6099    1         2 TYPE CHAR(4),
       34     6100    1         2 NUM,
       35     6101    1           3 USERS UBIN,
       36     6102    1           3 SNAP,
       37     6103    1             4 XEQTIME,
       38     6104    1               5 * UBIN,
       39     6105    1               5 * UBIN,
       40     6106    1             4 SRVTIME,
       41     6107    1               5 * UBIN,
       42     6108    1               5 * UBIN,
       43     6109    1           3 ALL,
       44     6110    1             4 XEQTIME,
       45     6111    1               5 * UBIN,
       46     6112    1               5 * UBIN,
       47     6113    1             4 SRVTIME,
       48     6114    1               5 * UBIN,
       49     6115    1               5 * UBIN;
       50     6116
       51     6117    1   DCL PSL$LOCATE ENTRY (3);
       52     6118        %INCLUDE XUF_ENTRY;
       53     6126    1   DCL PSL$CHOMP ENTRY (5);
       54     6127    1   DCL PSD$EJECT ENTRY (1);
       55     6128    1   DCL PSD$SKIP ENTRY;
PL6.E3A0      #001=PSD$PROCS File=PSD$PROCS.:E05TSI                              WED 07/30/97 04:33 Page:13   
       56     6129    1   DCL I UBIN;
       57     6130    1   DCL TEMP1 UBIN;
       58     6131    1   DCL TEMP2 UBIN;
       59     6132    1   DCL OLD_VALUE UBIN;
       60     6133    1   DCL NEW_VALUE UBIN;
       61     6134    1   DCL P$ PTR;
       62     6135    1   DCL Q$ PTR;
       63     6136    1   DCL OWNER_VECTOR BIT(72) DALIGNED STATIC;
       64     6137    1   DCL NUMBER_VECTOR BIT(72) DALIGNED STATIC;
       65     6138        %EJECT;
PL6.E3A0      #001=PSD$PROCS File=PSD$PROCS.:E05TSI                              WED 07/30/97 04:33 Page:14   
       66     6139    1   CHOMP: PROC (NEW_VAL, OLD_VAL, ALL_AREA, SNAP_AREA);

   6139 13 000003   200024 741300       CHOMP        STX1  ! Q$+1,,AUTO
        13 000004   000021 710000 13                 TRA     s:6161

       67     6140
       68     6141    2   DCL OLD_VAL UBIN;
       69     6142    2   DCL NEW_VAL UBIN;
       70     6143    2   DCL SNAP_AREA (0:1) UBIN;
       71     6144    2   DCL ALL_AREA  (0:1) UBIN;
       72     6145
       73     6146    2   CHUMLEY: PROC (NUMBER, TARGET);

   6146 13 000005   200032 741300       CHUMLEY      STX1  ! @SNAP_AREA+2,,AUTO

       74     6147
       75     6148    3   DCL NUMBER UBIN;
       76     6149    3   DCL NUMBER_SBIN REDEF NUMBER SBIN;
       77     6150    3   DCL 1 TARGET,
       78     6151    3         2 INTEGER UBIN,
       79     6152    3         2 FRACTION UBIN;
       80     6153
       81     6154    3      TARGET.INTEGER = NUMBER/10;

   6154 13 000006   200033 470500                    LDP0    @NUMBER,,AUTO
        13 000007   000000 236100                    LDQ     0,,PR0
        13 000010   000001 772000                    QRL     1
        13 000011   000005 506007                    DIV     5,DL
        13 000012   200034 471500                    LDP1    @TARGET,,AUTO
        13 000013   100000 756100                    STQ     0,,PR1

       82     6155    3      TARGET.FRACTION = MOD(NUMBER_SBIN, 10);

   6155 13 000014   000000 236100                    LDQ     0,,PR0
        13 000015   000012 506007                    DIV     10,DL
        13 000016   100001 755100                    STA     1,,PR1

PL6.E3A0      #001=PSD$PROCS File=PSD$PROCS.:E05TSI                              WED 07/30/97 04:33 Page:15   
       83     6156
       84     6157    3      RETURN;

   6157 13 000017   200032 221300                    LDX1  ! @SNAP_AREA+2,,AUTO
        13 000020   000001 702211                    TSX2  ! 1,X1

       85     6158
       86     6159    3   END CHUMLEY;
       87     6160
       88     6161    2      CALL PSL$CHOMP (OLD_VAL*10, NEW_VAL*10, PERCENT#, TEMP1, TEMP2);

   6161 13 000021   200026 470500                    LDP0    @OLD_VAL,,AUTO
        13 000022   000000 236100                    LDQ     0,,PR0
        13 000023   000012 402007                    MPY     10,DL
        13 000024   200036 756100                    STQ     @TARGET+2,,AUTO
        13 000025   200025 471500                    LDP1    @NEW_VAL,,AUTO
        13 000026   100000 236100                    LDQ     0,,PR1
        13 000027   000012 402007                    MPY     10,DL
        13 000030   200037 756100                    STQ     @TARGET+3,,AUTO
        13 000031   200017 633500                    EPPR3   TEMP2,,AUTO
        13 000032   200044 453500                    STP3    @TARGET+8,,AUTO
        13 000033   200016 634500                    EPPR4   TEMP1,,AUTO
        13 000034   200043 454500                    STP4    @TARGET+7,,AUTO
        13 000035   000000 236000 14                 LDQ     0
        13 000036   200042 756100                    STQ     @TARGET+6,,AUTO
        13 000037   200037 635500                    EPPR5   @TARGET+3,,AUTO
        13 000040   200041 455500                    STP5    @TARGET+5,,AUTO
        13 000041   200036 636500                    EPPR6   @TARGET+2,,AUTO
        13 000042   200040 456500                    STP6    @TARGET+4,,AUTO
        13 000043   200040 630500                    EPPR0   @TARGET+4,,AUTO
        13 000044   000023 631400 xsym               EPPR1   B_VECTNIL+19
        13 000045   000000 701000 xent               TSX1    PSL$CHOMP
        13 000046   000000 011000                    NOP     0

       89     6162
       90     6163    2      CALL CHUMLEY (TEMP1, ALL_AREA);

PL6.E3A0      #001=PSD$PROCS File=PSD$PROCS.:E05TSI                              WED 07/30/97 04:33 Page:16   
   6163 13 000047   200027 236100                    LDQ     @ALL_AREA,,AUTO
        13 000050   200034 756100                    STQ     @NUMBER+1,,AUTO
        13 000051   200016 630500                    EPPR0   TEMP1,,AUTO
        13 000052   200033 450500                    STP0    @SNAP_AREA+3,,AUTO
        13 000053   000005 701000 13                 TSX1    CHUMLEY
        13 000054   000000 011000                    NOP     0

       91     6164    2      CALL CHUMLEY (TEMP2, SNAP_AREA);

   6164 13 000055   200030 236100                    LDQ     @SNAP_AREA,,AUTO
        13 000056   200034 756100                    STQ     @NUMBER+1,,AUTO
        13 000057   200017 630500                    EPPR0   TEMP2,,AUTO
        13 000060   200033 450500                    STP0    @SNAP_AREA+3,,AUTO
        13 000061   000005 701000 13                 TSX1    CHUMLEY
        13 000062   000000 011000                    NOP     0

       92     6165
       93     6166    2      RETURN;

   6166 13 000063   200024 221300                    LDX1  ! Q$+1,,AUTO
        13 000064   000001 702211                    TSX2  ! 1,X1

       94     6167
       95     6168    2   END CHOMP;
       96     6169        %EJECT;
PL6.E3A0      #001=PSD$PROCS File=PSD$PROCS.:E05TSI                              WED 07/30/97 04:33 Page:17   
       97     6170    1      IF PS_OLD_PMDAT$ = ADDR(NIL)

   6170 13 000065   000000 236000 xsym               LDQ     PS_OLD_PMDAT$
        13 000066   000001 116000 xsym               CMPQ    B_VECTNIL+1
        13 000067   000074 601000 13                 TNZ     s:6174

       98     6171    1        THEN
       99     6172    1         CALL PSD$EJECT;

   6172 13 000070   000002 631400 xsym               EPPR1   B_VECTNIL+2
        13 000071   000000 701000 xent               TSX1    PSD$EJECT
        13 000072   000000 011000                    NOP     0
        13 000073   000100 710000 13                 TRA     s:6176

      100     6173    1        ELSE
      101     6174    1         CALL PSD$EJECT (15);

   6174 13 000074   000002 630400 14                 EPPR0   2
        13 000075   000017 631400 xsym               EPPR1   B_VECTNIL+15
        13 000076   000000 701000 xent               TSX1    PSD$EJECT
        13 000077   000000 011000                    NOP     0

      102     6175
      103     6176    1      CALL PSL$LOCATE (B$P#, P$, Q$);

   6176 13 000100   200023 630500                    EPPR0   Q$,,AUTO
        13 000101   200040 450500                    STP0    @TARGET+4,,AUTO
        13 000102   200022 631500                    EPPR1   P$,,AUTO
        13 000103   200037 451500                    STP1    @TARGET+3,,AUTO
        13 000104   000004 236000 14                 LDQ     4
        13 000105   200036 756100                    STQ     @TARGET+2,,AUTO
        13 000106   200036 630500                    EPPR0   @TARGET+2,,AUTO
        13 000107   000021 631400 xsym               EPPR1   B_VECTNIL+17
        13 000110   000000 701000 xent               TSX1    PSL$LOCATE
        13 000111   000000 011000                    NOP     0

      104     6177
PL6.E3A0      #001=PSD$PROCS File=PSD$PROCS.:E05TSI                              WED 07/30/97 04:33 Page:18   
      105     6178    1      P_NPROCS = P$ -> BLOCK.ENTRIES;

   6178 13 000112   200022 470500                    LDP0    P$,,AUTO
        13 000113   000001 236100                    LDQ     1,,PR0
        13 000114   000022 732000                    QRS     18
        13 000115   200004 756100                    STQ     P_NPROCS,,AUTO

      106     6179
      107     6180    1      CALL X$WRITE (PS_FDS, VECTOR(PROC_FMT));

   6180 13 000116   000010 630400 14                 EPPR0   8
        13 000117   000020 631400 xsym               EPPR1   B_VECTNIL+16
        13 000120   000000 701000 xent               TSX1    X$WRITE
        13 000121   000000 011000                    NOP     0

      108     6181
      109     6182    1      P$ = ADDR(P$->BLOCK.DATA);

   6182 13 000122   200022 236100                    LDQ     P$,,AUTO
        13 000123   000002 036003                    ADLQ    2,DU
        13 000124   200022 756100                    STQ     P$,,AUTO

      110     6183    1      IF Q$ ~= ADDR(NIL)

   6183 13 000125   200023 236100                    LDQ     Q$,,AUTO
        13 000126   000001 116000 xsym               CMPQ    B_VECTNIL+1
        13 000127   000132 600000 13                 TZE     s:6186

      111     6184    1        THEN Q$ = ADDR(Q$->BLOCK.DATA);

   6184 13 000130   000002 036003                    ADLQ    2,DU
        13 000131   200023 756100                    STQ     Q$,,AUTO

      112     6185
      113     6186    2      DO I = 1 TO P_NPROCS - 1;

   6186 13 000132   000001 235007                    LDA     1,DL
PL6.E3A0      #001=PSD$PROCS File=PSD$PROCS.:E05TSI                              WED 07/30/97 04:33 Page:19   
        13 000133   200015 755100                    STA     I,,AUTO
        13 000134   000407 710000 13                 TRA     s:6266+3

      114     6187
      115     6188    2         PROC_DATA.NUM = '0'B;

   6188 13 000135   000000 100400                    MLR     fill='000'O
        13 000136   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
        13 000137   000062 000044 11                 ADSC9   PROC_DATA+5              cn=0,n=36

      116     6189
      117     6190    2         IF Q$ = ADDR(NIL)

   6190 13 000140   200023 236100                    LDQ     Q$,,AUTO
        13 000141   000001 116000 xsym               CMPQ    B_VECTNIL+1
        13 000142   000146 601000 13                 TNZ     s:6194

      118     6191    2           THEN
      119     6192    2            HISTORY_FLAG = %YES#;

   6192 13 000143   400000 236003                    LDQ     -131072,DU
        13 000144   200003 756100                    STQ     HISTORY_FLAG,,AUTO
        13 000145   000170 710000 13                 TRA     s:6201

      120     6193    2           ELSE
      121     6194    2            IF P$ -> B$P.NAME(I) = Q$ -> B$P.NAME(I)

   6194 13 000146   200015 236100                    LDQ     I,,AUTO
        13 000147   000210 402007                    MPY     136,DL
        13 000150   200022 470500                    LDP0    P$,,AUTO
        13 000151   200023 471500                    LDP1    Q$,,AUTO
        13 000152   000106 106506                    CMPC    fill='000'O
        13 000153   000032 000040                    ADSC9   26,Q,PR0                 cn=0,n=32
        13 000154   100032 000040                    ADSC9   26,Q,PR1                 cn=0,n=32
        13 000155   000167 601000 13                 TNZ     s:6199
        13 000156   200015 236100                    LDQ     I,,AUTO
        13 000157   000042 402007                    MPY     34,DL
PL6.E3A0      #001=PSD$PROCS File=PSD$PROCS.:E05TSI                              WED 07/30/97 04:33 Page:20   
        13 000160   000000 620006                    EAX0    0,QL
        13 000161   000004 236110                    LDQ     4,X0,PR0
        13 000162   100004 116110                    CMPQ    4,X0,PR1
        13 000163   000167 601000 13                 TNZ     s:6199

      122     6195    2             AND P$ -> B$P.CRDATE(I) = Q$ -> B$P.CRDATE(I)
      123     6196    2              THEN
      124     6197    2               HISTORY_FLAG = %YES#;

   6197 13 000164   400000 236003                    LDQ     -131072,DU
        13 000165   200003 756100                    STQ     HISTORY_FLAG,,AUTO
        13 000166   000170 710000 13                 TRA     s:6201

      125     6198    2              ELSE
      126     6199    2               HISTORY_FLAG = %NO#;

   6199 13 000167   200003 450100                    STZ     HISTORY_FLAG,,AUTO

      127     6200
      128     6201    2         IF (HISTORY_FLAG) AND (P$ -> B$P.PPC(I) > 0)

   6201 13 000170   200003 234100                    SZN     HISTORY_FLAG,,AUTO
        13 000171   000404 605000 13                 TPL     s:6266
        13 000172   200015 236100                    LDQ     I,,AUTO
        13 000173   000042 402007                    MPY     34,DL
        13 000174   200022 470500                    LDP0    P$,,AUTO
        13 000175   000003 235106                    LDA     3,QL,PR0
        13 000176   000404 600000 13                 TZE     s:6266

      129     6202    3           THEN DO;                            /* Select only "valid" processors */

      130     6203
      131     6204    3            PROC_DATA.NAME = ADDR(P$->B$P.NAME(I))->TEXTC.TEXT;

   6204 13 000177   000032 236106                    LDQ     26,QL,PR0
        13 000200   000033 772000                    QRL     27
        13 000201   000000 620006                    EAX0    0,QL
PL6.E3A0      #001=PSD$PROCS File=PSD$PROCS.:E05TSI                              WED 07/30/97 04:33 Page:21   
        13 000202   200015 236100                    LDQ     I,,AUTO
        13 000203   000210 402007                    MPY     136,DL
        13 000204   040000 100546                    MLR     fill='040'O
        13 000205   000032 200010                    ADSC9   26,Q,PR0                 cn=1,n=*X0
        13 000206   000055 000020 11                 ADSC9   PROC_DATA                cn=0,n=16

      132     6205
      133     6206    3            IF P$->B$P.NAME.COUNT(I) > 15

   6206 13 000207   200015 236100                    LDQ     I,,AUTO
        13 000210   000042 402007                    MPY     34,DL
        13 000211   000032 236106                    LDQ     26,QL,PR0
        13 000212   777000 376003                    ANQ     -512,DU
        13 000213   020000 116003                    CMPQ    8192,DU
        13 000214   000217 602000 13                 TNC     s:6210

      134     6207    3              THEN
      135     6208    3               PROC_DATA.NAME1.TOO_BIG = '>';

   6208 13 000215   000076 236007                    LDQ     62,DL
        13 000216   000060 552004 11                 STBQ    PROC_DATA+3,'04'O

      136     6209
      137     6210    3            IF (P$->B$P.FLGS(I) & %P_CP)

   6210 13 000217   200015 236100                    LDQ     I,,AUTO
        13 000220   000042 402007                    MPY     34,DL
        13 000221   000027 220106                    LDX0    23,QL,PR0
        13 000222   400000 360003                    ANX0    -131072,DU
        13 000223   000231 600000 13                 TZE     s:6214

      138     6211    3              THEN
      139     6212    3               PROC_DATA.TYPE = 'icp';

   6212 13 000224   000000 236000 12                 LDQ     0
        13 000225   000012 376000 14                 ANQ     10
        13 000226   000040 276007                    ORQ     32,DL
PL6.E3A0      #001=PSD$PROCS File=PSD$PROCS.:E05TSI                              WED 07/30/97 04:33 Page:22   
        13 000227   000061 756000 11                 STQ     PROC_DATA+4
        13 000230   000260 710000 13                 TRA     s:6226

      140     6213    3              ELSE
      141     6214    3               IF (P$->B$P.FLGS(I) & %P_DB)

   6214 13 000231   000027 220106                    LDX0    23,QL,PR0
        13 000232   020000 360003                    ANX0    8192,DU
        13 000233   000241 600000 13                 TZE     s:6218

      142     6215    3                 THEN
      143     6216    3                  PROC_DATA.TYPE = 'idb';

   6216 13 000234   000001 236000 12                 LDQ     1
        13 000235   000012 376000 14                 ANQ     10
        13 000236   000040 276007                    ORQ     32,DL
        13 000237   000061 756000 11                 STQ     PROC_DATA+4
        13 000240   000260 710000 13                 TRA     s:6226

      144     6217    3                 ELSE
      145     6218    3                  IF (P$->B$P.FLGS(I) & %P_STATS)

   6218 13 000241   000027 220106                    LDX0    23,QL,PR0
        13 000242   000100 360003                    ANX0    64,DU
        13 000243   000251 600000 13                 TZE     s:6222

      146     6219    3                    THEN
      147     6220    3                     PROC_DATA.TYPE = 'stt';

   6220 13 000244   000002 236000 12                 LDQ     2
        13 000245   000012 376000 14                 ANQ     10
        13 000246   000040 276007                    ORQ     32,DL
        13 000247   000061 756000 11                 STQ     PROC_DATA+4
        13 000250   000260 710000 13                 TRA     s:6226

      148     6221    3                    ELSE
      149     6222    3                     IF (P$->B$P.FLGS(I) & %P_SP)
PL6.E3A0      #001=PSD$PROCS File=PSD$PROCS.:E05TSI                              WED 07/30/97 04:33 Page:23   

   6222 13 000251   000027 220106                    LDX0    23,QL,PR0
        13 000252   040000 360003                    ANX0    16384,DU
        13 000253   000260 600000 13                 TZE     s:6226

      150     6223    3                       THEN
      151     6224    3                        PROC_DATA.TYPE = 'std';

   6224 13 000254   000003 236000 12                 LDQ     3
        13 000255   000012 376000 14                 ANQ     10
        13 000256   000040 276007                    ORQ     32,DL
        13 000257   000061 756000 11                 STQ     PROC_DATA+4

      152     6225
      153     6226    3            PROC_DATA.NUM.USERS = P$->B$P.UC(I);

   6226 13 000260   200015 236100                    LDQ     I,,AUTO
        13 000261   000042 402007                    MPY     34,DL
        13 000262   000000 235106                    LDA     0,QL,PR0
        13 000263   000062 755000 11                 STA     PROC_DATA+5

      154     6227
      155     6228    3            IF P$->B$P.FLGS(I) & (%P_CP | %P_DB | %P_SP)

   6228 13 000264   000027 220106                    LDX0    23,QL,PR0
        13 000265   460000 360003                    ANX0    -106496,DU
        13 000266   000404 600000 13                 TZE     s:6266

      156     6229    4              THEN DO;

      157     6230
      158     6231    4               NUMBER_VECTOR = VECTOR(PROC_DATA.NUM);

   6231 13 000267   000014 237000 14                 LDAQ    12
        13 000270   000076 757000 11                 STAQ    NUMBER_VECTOR

      159     6232
PL6.E3A0      #001=PSD$PROCS File=PSD$PROCS.:E05TSI                              WED 07/30/97 04:33 Page:24   
      160     6233    4               IF Q$ = ADDR(NIL)

   6233 13 000271   200023 236100                    LDQ     Q$,,AUTO
        13 000272   000001 116000 xsym               CMPQ    B_VECTNIL+1
        13 000273   000323 601000 13                 TNZ     s:6246

      161     6234    5                 THEN DO;

      162     6235
      163     6236    5                  CALL CHOMP(P$->B$P.XEQTIME(I), 0, PROC_DATA.NUM.ALL.XEQTIME,

   6236 13 000274   000013 236000 14                 LDQ     11
        13 000275   200030 756100                    STQ     @ALL_AREA+1,,AUTO
        13 000276   000016 237000 14                 LDAQ    14
        13 000277   200026 757100                    STAQ    @NEW_VAL+1,,AUTO
        13 000300   200015 236100                    LDQ     I,,AUTO
        13 000301   000042 402003                    MPY     34,DU
        13 000302   000006 036003                    ADLQ    6,DU
        13 000303   200022 036100                    ADLQ    P$,,AUTO
        13 000304   200025 756100                    STQ     Q$+2,,AUTO
        13 000305   000003 701000 13                 TSX1    CHOMP
        13 000306   000000 011000                    NOP     0

      164     6237    5                   PROC_DATA.NUM.SNAP.XEQTIME);
      165     6238
      166     6239    5                  CALL CHOMP(P$->B$P.SRVTIME(I), 0, PROC_DATA.NUM.ALL.SRVTIME,

   6239 13 000307   000020 236000 14                 LDQ     16
        13 000310   200030 756100                    STQ     @ALL_AREA+1,,AUTO
        13 000311   000022 237000 14                 LDAQ    18
        13 000312   200026 757100                    STAQ    @NEW_VAL+1,,AUTO
        13 000313   200015 236100                    LDQ     I,,AUTO
        13 000314   000042 402003                    MPY     34,DU
        13 000315   000007 036003                    ADLQ    7,DU
        13 000316   200022 036100                    ADLQ    P$,,AUTO
        13 000317   200025 756100                    STQ     Q$+2,,AUTO
        13 000320   000003 701000 13                 TSX1    CHOMP
PL6.E3A0      #001=PSD$PROCS File=PSD$PROCS.:E05TSI                              WED 07/30/97 04:33 Page:25   
        13 000321   000000 011000                    NOP     0

      167     6240    5                   PROC_DATA.NUM.SNAP.SRVTIME);
      168     6241
      169     6242    5                  END;

   6242 13 000322   000363 710000 13                 TRA     s:6254

      170     6243
      171     6244    5                 ELSE DO;

      172     6245
      173     6246    5                  CALL CHOMP(P$->B$P.XEQTIME(I), Q$->B$P.XEQTIME(I),

   6246 13 000323   000013 236000 14                 LDQ     11
        13 000324   200030 756100                    STQ     @ALL_AREA+1,,AUTO
        13 000325   000017 236000 14                 LDQ     15
        13 000326   200027 756100                    STQ     @OLD_VAL+1,,AUTO
        13 000327   200015 236100                    LDQ     I,,AUTO
        13 000330   000042 402003                    MPY     34,DU
        13 000331   000006 036003                    ADLQ    6,DU
        13 000332   200023 036100                    ADLQ    Q$,,AUTO
        13 000333   200026 756100                    STQ     @NEW_VAL+1,,AUTO
        13 000334   200015 236100                    LDQ     I,,AUTO
        13 000335   000042 402003                    MPY     34,DU
        13 000336   000006 036003                    ADLQ    6,DU
        13 000337   200022 036100                    ADLQ    P$,,AUTO
        13 000340   200025 756100                    STQ     Q$+2,,AUTO
        13 000341   000003 701000 13                 TSX1    CHOMP
        13 000342   000000 011000                    NOP     0

      174     6247    5                   PROC_DATA.NUM.ALL.XEQTIME, PROC_DATA.NUM.SNAP.XEQTIME);
      175     6248
      176     6249    5                  CALL CHOMP(P$->B$P.SRVTIME(I), Q$->B$P.SRVTIME(I),

   6249 13 000343   000020 236000 14                 LDQ     16
        13 000344   200030 756100                    STQ     @ALL_AREA+1,,AUTO
PL6.E3A0      #001=PSD$PROCS File=PSD$PROCS.:E05TSI                              WED 07/30/97 04:33 Page:26   
        13 000345   000023 236000 14                 LDQ     19
        13 000346   200027 756100                    STQ     @OLD_VAL+1,,AUTO
        13 000347   200015 236100                    LDQ     I,,AUTO
        13 000350   000042 402003                    MPY     34,DU
        13 000351   000007 036003                    ADLQ    7,DU
        13 000352   200023 036100                    ADLQ    Q$,,AUTO
        13 000353   200026 756100                    STQ     @NEW_VAL+1,,AUTO
        13 000354   200015 236100                    LDQ     I,,AUTO
        13 000355   000042 402003                    MPY     34,DU
        13 000356   000007 036003                    ADLQ    7,DU
        13 000357   200022 036100                    ADLQ    P$,,AUTO
        13 000360   200025 756100                    STQ     Q$+2,,AUTO
        13 000361   000003 701000 13                 TSX1    CHOMP
        13 000362   000000 011000                    NOP     0

      177     6250    5                   PROC_DATA.NUM.ALL.SRVTIME, PROC_DATA.NUM.SNAP.SRVTIME);
      178     6251
      179     6252    5                  END;

      180     6253
      181     6254    4               IF (PROC_DATA.NUM.SNAP ~= '0'B OR PROC_DATA.NUM.USERS > 0

   6254 13 000363   000000 106400                    CMPC    fill='000'O
        13 000364   000063 000020 11                 ADSC9   PROC_DATA+6              cn=0,n=16
        13 000365   000002 000002 xsym               ADSC9   B_VECTNIL+2              cn=0,n=2
        13 000366   000374 601000 13                 TNZ     s:6254+9
        13 000367   000062 235000 11                 LDA     PROC_DATA+5
        13 000370   000374 601000 13                 TNZ     s:6254+9
        13 000371   200023 236100                    LDQ     Q$,,AUTO
        13 000372   000001 116000 xsym               CMPQ    B_VECTNIL+1
        13 000373   000404 601000 13                 TNZ     s:6266
        13 000374   040000 106400                    CMPC    fill='040'O
        13 000375   000055 000020 11                 ADSC9   PROC_DATA                cn=0,n=16
        13 000376   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        13 000377   000404 600000 13                 TZE     s:6266

      182     6255    4                OR Q$ = ADDR(NIL))
PL6.E3A0      #001=PSD$PROCS File=PSD$PROCS.:E05TSI                              WED 07/30/97 04:33 Page:27   
      183     6256    4                AND PROC_DATA.NAME ~= ' '
      184     6257    4                 THEN
      185     6258    4                  CALL X$WRITE (PS_FDS, VECTOR(PROC_FORMAT),

   6258 13 000400   000032 630400 14                 EPPR0   26
        13 000401   000023 631400 xsym               EPPR1   B_VECTNIL+19
        13 000402   000000 701000 xent               TSX1    X$WRITE
        13 000403   000000 011000                    NOP     0

      186     6259    4                   VECTOR(PROC_DATA.NAME), VECTOR(PROC_DATA.TYPE),
      187     6260    4                   NUMBER_VECTOR);
      188     6261
      189     6262    4               END /* do if displayable */;

      190     6263
      191     6264    3            END /* do if processor is valid */;

      192     6265
      193     6266    2         END /* do i */;

   6266 13 000404   200015 235100                    LDA     I,,AUTO
        13 000405   000001 035007                    ADLA    1,DL
        13 000406   200015 755100                    STA     I,,AUTO
        13 000407   200015 236100                    LDQ     I,,AUTO
        13 000410   200004 116100                    CMPQ    P_NPROCS,,AUTO
        13 000411   000135 602000 13                 TNC     s:6188

      194     6267
      195     6268    1      CALL PSD$SKIP;

   6268 13 000412   000002 631400 xsym               EPPR1   B_VECTNIL+2
        13 000413   000000 701000 xent               TSX1    PSD$SKIP
        13 000414   000000 011000                    NOP     0

      196     6269
      197     6270    1      RETURN;

PL6.E3A0      #001=PSD$PROCS File=PSD$PROCS.:E05TSI                              WED 07/30/97 04:33 Page:28   
   6270 13 000415   000000 702200 xent               TSX2  ! X66_ARET
      198     6271
      199     6272    1   END PSD$PROCS;

PL6.E3A0      #001=PSD$PROCS File=PSD$PROCS.:E05TSI                              WED 07/30/97 04:33 Page:29   
--  Include file information  --

   XUF_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   B$P.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   P_FEP_M.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   PM_BUCKET_C.:E05TOU  is referenced.
   PS_SUBS_C.:E05TOU  is referenced.
   PS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure PSD$PROCS.
PL6.E3A0      #001=PSD$PROCS File=PSD$PROCS.:E05TSI                              WED 07/30/97 04:33 Page:30   

 **** Variables and constants ****

  ****  Section 007 RtLmCm PS_FDS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(1080)  r     1 PS_FDS

  ****  Section 011  Data  PSD$PROCS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    76-0-0/d BIT (72)    r     1 NUMBER_VECTOR             55-0-0/w STRC(504)   r     1 PROC_DATA
     0-0-0/c STRC(1098)  r     1 PROC_FMT                  37-0-0/c STRC(495)   r     1 PROC_FORMAT

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    27-0-0/w PTR         r     1 @ALL_AREA                 25-0-0/w PTR         r     1 @NEW_VAL
    33-0-0/w PTR         r     1 @NUMBER                   26-0-0/w PTR         r     1 @OLD_VAL
    30-0-0/w PTR         r     1 @SNAP_AREA                34-0-0/w PTR         r     1 @TARGET
    *0-0-0/w UBIN        r     1 ALL_AREA(0:1)
     3-0-0/b BIT         r     1 HISTORY_FLAG              15-0-0/w UBIN        r     1 I
    *0-0-0/w UBIN        r     1 NEW_VAL                   *0-0-0/w UBIN        r     1 NUMBER
    *0-0-0/w SBIN        r     1 NUMBER_SBIN               *0-0-0/w UBIN        r     1 OLD_VAL
    22-0-0/w PTR         r     1 P$                         4-0-0/w UBIN        r     1 P_NPROCS
    23-0-0/w PTR         r     1 Q$
    *0-0-0/w UBIN        r     1 SNAP_AREA(0:1)
    *0-0-0/w STRC(72)    r     1 TARGET                    16-0-0/w UBIN        r     1 TEMP1
    17-0-0/w UBIN        r     1 TEMP2

  ****  SYMREF variables  ****

PL6.E3A0      #001=PSD$PROCS File=PSD$PROCS.:E05TSI                              WED 07/30/97 04:33 Page:31   
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(140)   r     1 PS_BUFFER                  0-0-0/w PTR         r     1 PS_OLD_PMDAT$
     0-0-0/w PTR         r     1 PS_STATS$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(1224)  r     1 B$P(0:0)                   0-0-0/w STRC(108)   r     1 BLOCK
     0-0-0N  NULL        r     1 M$LO                       0-0-0/c ASTR(9)     r     1 TEXTC


   Procedure PSD$PROCS requires 270 words for executable code.
   Procedure PSD$PROCS requires 38 words of local(AUTO) storage.

    No errors detected in file PSD$PROCS.:E05TSI    .
PL6.E3A0      #001=PSD$PROCS File=PSD$PROCS.:E05TSI                              WED 07/30/97 04:33 Page:32   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=PSD$PROCS File=PSD$PROCS.:E05TSI                              WED 07/30/97 04:33 Page:33   
          MINI XREF LISTING

ALL_AREA IN PROCEDURE CHOMP
      6144**DCL      6139--PROC     6163<>CALL
B$P.CRDATE
      6026**DCL      6194>>IF       6194>>IF
B$P.FLGS
      6042**DCL      6210>>IF       6214>>IF       6218>>IF       6222>>IF       6228>>IF
B$P.NAME
      6045**DCL      6194>>IF       6194>>IF       6204--ASSIGN   6204--ASSIGN
B$P.NAME.COUNT
      6046**DCL      6206>>IF
B$P.PPC
      6025**DCL      6201>>IF
B$P.SRVTIME
      6029**DCL      6239<>CALL     6249<>CALL     6249<>CALL
B$P.UC
      6022**DCL      6226>>ASSIGN
B$P.XEQTIME
      6028**DCL      6236<>CALL     6246<>CALL     6246<>CALL
BLOCK.DATA
      4920**DCL      6182--ASSIGN   6184--ASSIGN
BLOCK.ENTRIES
      4920**DCL      6178>>ASSIGN
CHOMP
      6139**PROC     6236--CALL     6239--CALL     6246--CALL     6249--CALL
CHUMLEY IN PROCEDURE CHOMP
      6146**PROC     6163--CALL     6164--CALL
HISTORY_FLAG
      5092**DCL      6192<<ASSIGN   6197<<ASSIGN   6199<<ASSIGN   6201>>IF
I
      6129**DCL      6186<<DOINDEX  6194>>IF       6194>>IF       6194>>IF       6194>>IF       6201>>IF
      6204>>ASSIGN   6204>>ASSIGN   6206>>IF       6210>>IF       6214>>IF       6218>>IF       6222>>IF
      6226>>ASSIGN   6228>>IF       6236>>CALL     6239>>CALL     6246>>CALL     6246>>CALL     6249>>CALL
PL6.E3A0      #001=PSD$PROCS File=PSD$PROCS.:E05TSI                              WED 07/30/97 04:33 Page:34   
      6249>>CALL
NEW_VAL IN PROCEDURE CHOMP
      6142**DCL      6139--PROC     6161>>CALL
NUMBER IN PROCEDURE CHUMLEY
      6148**DCL      6146--PROC     6149--REDEF    6154>>ASSIGN
NUMBER_SBIN IN PROCEDURE CHUMLEY
      6149**DCL      6155>>ASSIGN
NUMBER_VECTOR
      6137**DCL      6231<<ASSIGN   6258<>CALL
OLD_VAL IN PROCEDURE CHOMP
      6141**DCL      6139--PROC     6161>>CALL
P$
      6134**DCL      6176<>CALL     6178>>ASSIGN   6182<<ASSIGN   6182>>ASSIGN   6194>>IF       6194>>IF
      6201>>IF       6204>>ASSIGN   6204>>ASSIGN   6206>>IF       6210>>IF       6214>>IF       6218>>IF
      6222>>IF       6226>>ASSIGN   6228>>IF       6236>>CALL     6239>>CALL     6246>>CALL     6249>>CALL
PROC_DATA.NAME
      6095**DCL      6096--REDEF    6204<<ASSIGN   6254>>IF       6258--CALL
PROC_DATA.NAME1.TOO_BIG
      6098**DCL      6208<<ASSIGN
PROC_DATA.NUM
      6100**DCL      6188<<ASSIGN   6231--ASSIGN
PROC_DATA.NUM.ALL.SRVTIME
      6113**DCL      6239<>CALL     6249<>CALL
PROC_DATA.NUM.ALL.XEQTIME
      6110**DCL      6236<>CALL     6246<>CALL
PROC_DATA.NUM.SNAP
      6102**DCL      6254>>IF
PROC_DATA.NUM.SNAP.SRVTIME
      6106**DCL      6239<>CALL     6249<>CALL
PROC_DATA.NUM.SNAP.XEQTIME
      6103**DCL      6236<>CALL     6246<>CALL
PROC_DATA.NUM.USERS
      6101**DCL      6226<<ASSIGN   6254>>IF
PROC_DATA.TYPE
      6099**DCL      6212<<ASSIGN   6216<<ASSIGN   6220<<ASSIGN   6224<<ASSIGN   6258--CALL
PROC_FMT
PL6.E3A0      #001=PSD$PROCS File=PSD$PROCS.:E05TSI                              WED 07/30/97 04:33 Page:35   
      6085**DCL      6180--CALL
PROC_FORMAT
      6090**DCL      6258--CALL
PSD$EJECT
      6127**DCL-ENT  6172--CALL     6174--CALL
PSD$SKIP
      6128**DCL-ENT  6268--CALL
PSL$CHOMP
      6126**DCL-ENT  6161--CALL
PSL$LOCATE
      6117**DCL-ENT  6176--CALL
PS_BUFFER
      4923**DCL      4958--DCLINIT  4960--DCLINIT
PS_COLLECT.CALCNT
      5078**DCL      5078--REDEF
PS_COLLECT.USRSRV
      5075**DCL      5076--REDEF
PS_FDS
      4940**DCL      6180<>CALL     6258<>CALL
PS_HLPCGBUF.DSPMSK
      5335**DCL      5341--REDEF
PS_HLPCGBUF.SLCMSK
      5376**DCL      5383--REDEF
PS_OLD_COLLECT.CALCNT
      5082**DCL      5083--REDEF
PS_OLD_COLLECT.USRSRV
      5080**DCL      5080--REDEF
PS_OLD_PMDAT$
      4502**DCL      6170>>IF
PS_STATS$
      5084**DCL      5086--IMP-PTR
P_NPROCS
      6058**DCL      6178<<ASSIGN   6186>>DOINDEX
Q$
      6135**DCL      6176<>CALL     6183>>IF       6184<<ASSIGN   6184>>ASSIGN   6190>>IF       6194>>IF
      6194>>IF       6233>>IF       6246>>CALL     6249>>CALL     6254>>IF
PL6.E3A0      #001=PSD$PROCS File=PSD$PROCS.:E05TSI                              WED 07/30/97 04:33 Page:36   
SNAP_AREA IN PROCEDURE CHOMP
      6143**DCL      6139--PROC     6164<>CALL
TARGET IN PROCEDURE CHUMLEY
      6150**DCL      6146--PROC
TARGET.FRACTION IN PROCEDURE CHUMLEY
      6152**DCL      6155<<ASSIGN
TARGET.INTEGER IN PROCEDURE CHUMLEY
      6151**DCL      6154<<ASSIGN
TEMP1
      6130**DCL      6161<>CALL     6163<>CALL
TEMP2
      6131**DCL      6161<>CALL     6164<>CALL
TEXTC.LEN
      5088**DCL      5088--IMP-SIZ  6204>>ASSIGN
TEXTC.TEXT
      5088**DCL      6204>>ASSIGN
X$WRITE
      6124**DCL-ENT  6180--CALL     6258--CALL
