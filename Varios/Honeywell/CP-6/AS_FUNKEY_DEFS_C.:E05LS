

14:06 JUL 28 '97 AS_FUNKEY_DEFS_C.:E05SI                                   1    
    1      /*T***********************************************************/
    2      /*T*                                                         */
    3      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    4      /*T*                                                         */
    5      /*T***********************************************************/
    6      %MACRO AS_FUNKEY (NAME = AS_FUNKEY,
    7                        STCLASS = STATIC,
    8                        LVL = 1,
    9                        LAST = ";");
   10
   11       %LSET LISTDIR='0'B;
   12       %LSET LISTEXP='1'B;
   13       %LSET LISTCOM='0'B;
   14       %LSET LISTSUB='1'B;
   15
   16       %LSET STR = SUBSTR(CONCAT(TEXTCHAR(STCLASS),'   '),0,3);
   17       %IF STR='STA' OR STR='CON' OR STR='EXT';
   18         %LSET ENIT=CHARTEXT('');
   19         %LSET INIT=CHARTEXT('INIT');
   20       %ELSE;
   21         %LSET INIT=CHARTEXT('/*');
   22         %LSET ENIT=CHARTEXT('*/');
   23       %ENDIF;
   24
   25      %LSET HHW=18-2*BITBIN(MODE_FEP);
   26       %IF LVL = 1;
   27      DCL 1 NAME STCLASS,
   28       %ELSE;
   29            %LVL NAME,
   30       %ENDIF;
   31
   32                           /* Header has 2 introducer definitions.  Each
   33                              uses 4 bytes, the first 2 bytes are character
   34                              1, the second 2 are character 2.  -1 means
   35                              the character doesn't exist.  E.G. the intro
   36                              is just escape, the word is: 0,ESC,-1,-1.
   37                              The second allowed introducer is defined the
14:06 JUL 28 '97 AS_FUNKEY_DEFS_C.:E05SI                                   2    
   38                              same way.
   39                           */
   40            %(LVL+1) INTRO1 UNAL,
   41              %(LVL+2) CHR1 SBIN (%HHW) UNAL %INIT (-1) %ENIT,
   42              %(LVL+2) CHR2 SBIN (%HHW) UNAL %INIT (-1) %ENIT,
   43            %(LVL+1) INTRO1_CHRS REDEF INTRO1 SBIN (%(2*HHW)) UNAL,
   44            %(LVL+1) INTRO2 UNAL,
   45              %(LVL+2) CHR1 SBIN (%HHW) UNAL %INIT (-1) %ENIT,
   46              %(LVL+2) CHR2 SBIN (%HHW) UNAL %INIT (-1) %ENIT,
   47            %(LVL+1) INTRO2_CHRS REDEF INTRO2 SBIN (%(2*HHW)) UNAL,
   48      /* Following are the defs for each key, above was the header.
   49         EG: F1=ESC,DC1,21,'1'  => F1 is a funct key so 21 is added to the
   50                                   FNCKEY_BASE and put in byte 2,  Byte 0
   51                                   gets the intro# (-1) for ESC,DC1, Byte 1
   52                                   gets the octal value for a '1', and Byte
   53                                   3 gets the sub value for the key being
   54                                   defined, F1.  000 061 037 xxx
   55
   56                              Each key def needs 4 bytes, they are defines
   57                              as follows.  byte 0: contains 0, 1, or 2
   58                              Byte 0: contains 0, 1, or 2 defining which
   59                                       introducer sequence to use first,
   60                                       second or none respectively.
   61                              Byte 1: Contains the character received after
   62                                       the introducer.
   63                              Byte 2: Contains 2, 3, or 4 indicating if this
   64                                       entry is a normal character, line
   65                                       function (e.g. BREAK) or a function
   66                                       key, respectively.
   67                              Byte 3: Identifies which character, line
   68                                       function, or function key is being
   69                                       defined.
   70                           */
   71            %(LVL+1) * SBIN (%HHW) UNAL %INIT (0) %ENIT,
   72            %(LVL+1) NUM_DEFS SBIN (%HHW) UNAL %INIT (0) %ENIT,
   73            %(LVL+1) FCNKEY (0:0) UNAL,
   74               %(LVL+2) FCN_BYTE0 UBIN BYTE UNAL %INIT (2)%ENIT,
14:06 JUL 28 '97 AS_FUNKEY_DEFS_C.:E05SI                                   3    
   75               %(LVL+2) FCN_BYTE1 UBIN BYTE UNAL %INIT (0)%ENIT,
   76               %(LVL+2) FCN_BYTE2 UBIN BYTE UNAL %INIT (2)%ENIT,
   77               %(LVL+2) FCN_BYTE3 UBIN BYTE UNAL %INIT (0)%ENIT,
   78            %(LVL+1) FNCKEW (0:0) REDEF FCNKEY UNAL,
   79               %(LVL+2) WRD0 SBIN (%HHW) UNAL,
   80               %(LVL+2) WRD1 SBIN (%HHW) UNAL,
   81            %(LVL+1) TXT_CHR REDEF FCNKEY CHAR (4),
   82            %(LVL+1) TXT_CHRA (0:0) REDEF FCNKEY CHAR (4),
   83            %(LVL+1) TXT_UBIN (0:0) REDEF FCNKEY UBIN (%(2*HHW)) UNAL;
   84      %MEND;
   85      %EJECT;

14:06 JUL 28 '97 AS_FUNKEY_DEFS_C.:E05SI                                   4    
   86
   87      %MACRO AS_FUNKEY_DEFS;
   88
   89      %EQU F_BLANK_LINE          = 257;
   90      %EQU F_DQUEST              = 258;
   91      %EQU F_QUEST               = 259;
   92      %EQU F_END                 = 260;
   93      %EQU F_HELP                = 261;
   94      %EQU FUNKEY_DEF            = 262;
   95      %EQU FUNKEY_REM            = 263;
   96      %EQU FUNKEY_INTRO1         = 264;
   97      %EQU FUNKEY_INTRO2         = 265;
   98      %EQU FUNKEY_CHAR           = 266;
   99      %EQU F_SINGLE_CHAR         = 267;
  100      %EQU FUNKEY_MODIFIER       = 268;
  101      %EQU FUNKEY_REM_ALL        = 269; /* REGULAR ALL CONFLICTS WITH KEY */
  102      %EQU F_HEX_CHAR             = 270;
  103
  104      %MEND;

